WEBVTT

1
00:00:00.000 --> 00:00:00.549
ویل سنتنس: امروز

2
00:00:00.549 --> 00:00:05.130
ما قرار است نسخه دو از دوره "بخش‌های مشکل(از جاوااسکریپت)" را پوشش دهیم

3
00:00:05.130 --> 00:00:08.510
با این کار، قصد داریم پنج حوزه اصلی جاوااسکریپت
را مورد بررسی قرار دهیم

4
00:00:08.510 --> 00:00:10.587
که به نظر من همه‌ی اصول اساسی را شامل می‌شود

5
00:00:10.587 --> 00:00:13.590
درابتدا، اصول پایه‌ای جاوااسکریپت مطرح می‌شود

6
00:00:13.590 --> 00:00:15.940
کد، واقعا چگونه در جاوااسکریپت اجرا می‌شود؟

7
00:00:15.940 --> 00:00:19.239
در گام دوم، بخش کلیدی برنامه‌نویسی فانکشنال مطرح می‌شود

8
00:00:19.239 --> 00:00:21.857
توابع مرتبه بالا و کال‌بک‌ها

9
00:00:21.857 --> 00:00:26.554
در مرحله سوم، کلوژر مطرح می‌شود
که به نظر من ظریف‌ترین و زیباترین ویژگی جاوااسکریپت است

10
00:00:26.554 --> 00:00:30.149
این همان بخشی است که اگر شما واقعا و به درستی از ابتدایی‌ترین اصول آن را درک کنید

11
00:00:30.149 --> 00:00:33.870
بسیاری از قطعات اصلی موتور جاوااسکریپت را درک خواهید کرد

12
00:00:33.870 --> 00:00:35.756
عاشق این بخش هستم

13
00:00:35.756 --> 00:00:38.777
سپس کلاس‌ها و پروتوتایپ‌ها، منظورم اُ-اُ-پی(شیءگرایی) است

14
00:00:38.777 --> 00:00:43.338
هدف ما پاسخ به این سؤال است که آیا می‌توانیم به عنوان یک ارائه‌دهنده راه‌حل در زمینه کد ارتقا پیدا کنیم

15
00:00:43.338 --> 00:00:47.770
به گونه‌ای که در آینده، به تنهایی از پس چالش‌ها برآییم؟

16
00:00:47.770 --> 00:00:51.490
برای رسیدن به این هدف، از دیدگاه من

17
00:00:51.490 --> 00:00:55.930
شما باید پشت صحنه‌های جاوااسکریپت را به کامل‌ترین شکل ممکن بفهمید

18
00:00:55.930 --> 00:00:59.980
هرچه نحوه ایفای نقش قطعات مختلف را بیشتر درک کنید

19
00:00:59.980 --> 00:01:04.500
می‌توانید جزء به حزء دانشی که کسب کرده‌اید را برای حل مسائل سطح بالاتر به‌کار بگیرید

20
00:01:04.500 --> 00:01:08.640
استدلال من این است که رسیدن به چنین سطحی نه تنها شما را به یک مهندس سنیور تبدیل می‌کند

21
00:01:08.640 --> 00:01:09.590
در واقع، این ادعای من است که

22
00:01:09.590 --> 00:01:13.445
یک مهندس جونیور فیچر درخواستی را تحویل می‌گیرد

23
00:01:13.445 --> 00:01:17.181
و اگر فناوری مورد نیاز یا شاید راه حل را قبلاً دیده باشد، می‌تواند آن را حل کند

24
00:01:17.181 --> 00:01:20.762
یک مهندس میدلول فیچر درخواستی را تحویل می‌گیرد

25
00:01:20.762 --> 00:01:24.272
و اگر حتی قبلاً فناوری یا راه‌حل را ندیده باشد، می‌تواند آن را حل کند 

26
00:01:24.272 --> 00:01:28.531
چون آموخته‌است که چطور باید بیاموزد. آن‌ها در حل مسئله قوی هستند

27
00:01:28.531 --> 00:01:33.114
یک مهندس سنیور کسی است که فیچر درخواستی را تحویل می‌گیرد

28
00:01:33.114 --> 00:01:37.709
و نه تنها راه حل را کشف می‌کنند
بلکه به سایر اعضای تیم نیز آن را تفهیم می‌کنند

29
00:01:37.709 --> 00:01:42.407
چرا که آنها ارتباط فنی برقرار می‌کنند
یعنی توانایی تشریح نحوه عملکرد کد خود را

30
00:01:42.407 --> 00:01:46.156
به طور واضح و دوستانه به افراد دیگر تیمشان دارند

31
00:01:46.156 --> 00:01:49.839
اما من می‌گویم
حتی برای توسعه‌دهندگان جونیور و میانه

32
00:01:49.839 --> 00:01:54.059
ارتباطات فنی می‌تواند ذهن شما را شفاف‌تر کند

33
00:01:54.059 --> 00:01:58.399
پس هدف دوره آموزشی "بخش‌های سخت" ممکن است
بستگی به پس‌زمینه‌ی شما 

34
00:01:58.399 --> 00:01:59.740
در جاوااسکریپت داشته باشد

35
00:01:59.740 --> 00:02:03.150
اگر شما توسعه‌دهنده میانه-سنیور هستید
بسیاری از این‌ مطالب را قبلاً دیده‌اید

36
00:02:03.150 --> 00:02:06.420
شاید با پس‌زمینه‌ علوم کامپیوتر بیایید
(گرایش تحصیلی شما مرتبط با کامپیوتر باشد)؛

37
00:02:06.420 --> 00:02:09.540
پس بخصوص قسمت‌های اولیه‌ی
دوره "بخش های سخت جاوااسکریپت" را

38
00:02:09.540 --> 00:02:14.790
به عنوان ساختارهایی برای بهبود ارتباطات
فنی خود بیشتر در نظر بگیرید

39
00:02:14.790 --> 00:02:15.653
قدرت

40
00:02:15.653 --> 00:02:20.172
بررسی دقیق
آنچه در اینجا روی تخته سیاه اتفاق می‌افتد
(یعنی تئوری‌هایی که استاد در این کلاس روی تخته سیاه می‌نویسد)؛


41
00:02:20.172 --> 00:02:24.766
و توضیح شفاهی با وضوح و دقت 
درباره جاوااسکریپت و کد خود


42
00:02:24.766 --> 00:02:30.351
این نه تنها نحوه استدلال شما را
به عنوان یک مهندس بهبود می‌دهد، بلکه می تواند

43
00:02:30.351 --> 00:02:36.122
شما را به عضوی مؤثرتر و مشارکت‌کننده‌تر
در پروژه‌های مهندسی‌تان تبدیل کند

44
00:02:36.122 --> 00:02:39.350
شما اکنون قادر خواهید بود پیچیدگی را
برداشته و آن را

45
00:02:39.350 --> 00:02:41.270
برای دیگر توسعه‌دهندگان در تیمتان قابل فهم و معنی کنید

46
00:02:42.420 --> 00:02:48.200
اگر با برخی از این اصول بسیار سخت
در پشت صحنه جاوااسکریپت آشنا نیستید

47
00:02:48.200 --> 00:02:50.290
آن‌ها شما را 

48
00:02:50.290 --> 00:02:54.120
با ساختارهایی  آشنا می‌سازند که
به شما اجازه می‌دهد تا یک حلال مسأله بهتر شوید

49
00:02:54.120 --> 00:02:57.071
ما قصد داریم زیر پوست جاوااسکریپت، پشت صحنه برویم

50
00:02:57.071 --> 00:03:01.995
تا ببینیم که همه‌ی قطعات
از زنجیره‌ی پورتوتایپ‌ها گرفته

51
00:03:01.995 --> 00:03:07.354
تا لکسیکال اسکوپینگ
تا حلقه ایونت‌ها و مایکروتسک و صف‌های بازگشتی

52
00:03:07.354 --> 00:03:12.160
تا پرامیس‌ها در پس زمینه چگونه کار می‌کنند
تا بتوانیم ویژگی‌ها

53
00:03:12.160 --> 00:03:16.822
و دانش‌هایی را بدست آوریم
اجزای دانشی که در آینده می‌توانیم از آن‌ها استفاده کنیم

54
00:03:16.822 --> 00:03:19.200
تا مسائل را با انعطاف بیشتری حل کنیم

55
00:03:19.200 --> 00:03:21.090
همچنین در حین کارگاه

56
00:03:21.090 --> 00:03:25.260
می‌خواهیم  با هم ببینیم که این قطعات چگونه
با هم جمع می‌شوند و از پلتفرم ما ساخته می‌شوند

57
00:03:25.260 --> 00:03:29.320
ما با سرعت مناسبی کار را شروع خواهیم کرد

58
00:03:29.320 --> 00:03:32.600
اگر روی کار تجربی و ارتباطات فنی بیشتر تمرکز کنیم

59
00:03:32.600 --> 00:03:37.360
به تدریج به قطعات سخت‌تری از آن
پلتفرم درک مشترک می‌رسیم.