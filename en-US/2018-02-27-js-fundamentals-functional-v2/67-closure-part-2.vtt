WEBVTT

1
00:00:00.210 --> 00:00:02.040
&gt;&gt; Bianca Gandolfo: Next one,
it's a little bit different.

2
00:00:02.040 --> 00:00:04.180
Who wants to start this time, Jamie?

3
00:00:04.180 --> 00:00:09.550
&gt;&gt; Jamie: So you set up myAlert and
it runs a function.

4
00:00:09.550 --> 00:00:12.000
&gt;&gt; Bianca Gandolfo: It has not yet
run anything,

5
00:00:12.000 --> 00:00:13.482
but-
&gt;&gt; Jamie: Yeah, but

6
00:00:13.482 --> 00:00:15.448
I assume you will next.

7
00:00:19.922 --> 00:00:21.092
&gt;&gt; Bianca Gandolfo: Okay, let's do this.

8
00:00:25.308 --> 00:00:29.420
&gt;&gt; Bianca Gandolfo: All right,
let's just do this.

9
00:00:29.420 --> 00:00:32.500
Excuse me, thank you for bearing with me.

10
00:00:32.500 --> 00:00:34.470
So my lyric, we had to call it every time.

11
00:00:34.470 --> 00:00:39.200
And then yeah, so help, I found a clue.

12
00:00:40.710 --> 00:00:41.598
And then what happens?

13
00:00:41.598 --> 00:00:43.696
Michael?

14
00:00:43.696 --> 00:00:48.580
&gt;&gt; Michael: [COUGH]
Then we define another

15
00:00:48.580 --> 00:00:53.760
function called alerter
which actually sets an alert

16
00:00:53.760 --> 00:00:56.590
with x as the argument, and-
&gt;&gt; Bianca Gandolfo: Well,

17
00:00:56.590 --> 00:00:57.640
it doesn't do that yet.

18
00:00:59.390 --> 00:01:02.670
It sets this, but it doesn't actually
run the body of this function.

19
00:01:02.670 --> 00:01:04.773
&gt;&gt; Michael: Yeah, that's right, okay.

20
00:01:04.773 --> 00:01:06.380
&gt;&gt; Bianca Gandolfo: Yeah, okay?

21
00:01:06.380 --> 00:01:06.912
&gt;&gt; Michael: Yeah.
&gt;&gt; Bianca Gandolfo: And

22
00:01:06.912 --> 00:01:09.360
then what happens next, Aisha?

23
00:01:12.650 --> 00:01:14.460
&gt;&gt; Aisha: Alert gets X passed into it.

24
00:01:16.580 --> 00:01:17.390
&gt;&gt; Bianca Gandolfo: What happens next?

25
00:01:19.710 --> 00:01:22.169
So we define this and then what happens?

26
00:01:24.390 --> 00:01:25.550
&gt;&gt; Aisha: We time the alerter.

27
00:01:25.550 --> 00:01:27.440
&gt;&gt; Bianca Gandolfo: Yeah, so
we call the set time out.

28
00:01:27.440 --> 00:01:32.396
And what happens with a set
time out is alerter goes

29
00:01:32.396 --> 00:01:36.762
away into somewhere deep
in browser land and

30
00:01:36.762 --> 00:01:41.490
it's gonna get called in 1,000 seconds.

31
00:01:41.490 --> 00:01:46.448
And the question is, what happens first,
the log or the alert?

32
00:01:46.448 --> 00:01:48.942
&gt;&gt; Jamie: The log.

33
00:01:48.942 --> 00:01:50.004
&gt;&gt; Bianca Gandolfo: Why?

34
00:01:50.004 --> 00:01:53.059
&gt;&gt; Jamie: Because alerter won't be run for
another 1,000 seconds.

35
00:01:53.059 --> 00:01:57.118
&gt;&gt; Bianca Gandolfo: Yeah,
because it's asynchronous, it'll go away,

36
00:01:57.118 --> 00:02:02.870
the alerter will call, but it doesn't
block the execution of our function.

37
00:02:03.920 --> 00:02:08.760
But alerter will still be called later and
some time in the future, right?

38
00:02:08.760 --> 00:02:11.380
We're used to that, nothing surprising.

39
00:02:14.640 --> 00:02:18.564
&gt;&gt; Michael: Does setTimeout automatically
call a function without the parentheses,

40
00:02:18.564 --> 00:02:19.772
without invoking it?

41
00:02:19.772 --> 00:02:22.980
Like it's just an automatic [CROSSTALK]
&gt;&gt; Bianca Gandolfo: Well, if you had put

42
00:02:22.980 --> 00:02:30.340
parenthesis here, it would try
to call whatever this returns.

43
00:02:30.340 --> 00:02:32.510
So it would call it first.

44
00:02:32.510 --> 00:02:33.250
&gt;&gt; Michael: Okay.
&gt;&gt; Bianca Gandolfo: And

45
00:02:33.250 --> 00:02:36.000
then try to call it again and
it would mess up.

46
00:02:36.000 --> 00:02:38.600
&gt;&gt; Michael: Okay, so
it just takes the function and

47
00:02:38.600 --> 00:02:39.924
then-
&gt;&gt; Bianca Gandolfo: Yeah and

48
00:02:39.924 --> 00:02:42.478
it calls it later, exactly.

49
00:02:42.478 --> 00:02:47.405
Cuz you only wanna put the parenthesis at
the moment you want to execute the body of

50
00:02:47.405 --> 00:02:48.357
the function.

51
00:02:48.357 --> 00:02:51.783
And so, since this would return undefined,

52
00:02:51.783 --> 00:02:55.931
we'd really be trying to
call undefined somewhere and

53
00:02:55.931 --> 00:03:00.180
we've all seen those values
undefined is not a function

