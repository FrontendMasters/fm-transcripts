WEBVTT

1
00:00:00.200 --> 00:00:03.956
We're gonna move forward with
a similar idea of going through lists,

2
00:00:03.956 --> 00:00:07.340
transforming them, and
we're gonna throw in a function now.

3
00:00:08.410 --> 00:00:13.830
So this function is called
create suspect objects.

4
00:00:13.830 --> 00:00:14.900
And what does it return?

5
00:00:14.900 --> 00:00:19.110
&gt;&gt; It looks like it returns an object but
there's a lot going on.

6
00:00:19.110 --> 00:00:20.550
&gt;&gt; Yeah.

7
00:00:20.550 --> 00:00:23.020
What makes you think that
it's returning an object?

8
00:00:26.630 --> 00:00:28.142
&gt;&gt; Honestly the curly brackets and

9
00:00:28.142 --> 00:00:30.610
the object properties that
we're looking at here.

10
00:00:30.610 --> 00:00:32.330
&gt;&gt; Yeah, ding, ding, ding, exactly.

11
00:00:32.330 --> 00:00:33.640
&gt;&gt; Yeah.

12
00:00:33.640 --> 00:00:35.210
&gt;&gt; Cool, so we're returning an object.

13
00:00:39.440 --> 00:00:41.390
We're finding some properties
on this object, right?

14
00:00:41.390 --> 00:00:44.165
We have three properties,
we have a name property, and

15
00:00:44.165 --> 00:00:46.720
this name is getting passed in, right?

16
00:00:46.720 --> 00:00:52.703
So we have just this function spits
out an object when you give it a name,

17
00:00:52.703 --> 00:00:58.660
and it figures out its color by
splitting the name at the space.

18
00:00:58.660 --> 00:00:59.650
In getting the second one.

19
00:00:59.650 --> 00:01:02.940
So scarlet, mustard, white.

20
00:01:02.940 --> 00:01:06.720
And then it has a speak function
where it says its name.

21
00:01:09.480 --> 00:01:13.070
Yeah, and so
we have this colon syntax here.

22
00:01:13.070 --> 00:01:15.750
That's an object literal syntax
that we were looking at earlier.

23
00:01:15.750 --> 00:01:17.310
Often on the side, right?

24
00:01:17.310 --> 00:01:19.833
We've been working a lot
with dynamic properties,

25
00:01:19.833 --> 00:01:22.490
adding things after we
initialize the object.

26
00:01:22.490 --> 00:01:25.230
But here's just an object given to you
all at once, but it's the same thing.

27
00:01:27.430 --> 00:01:29.880
The key here is that there's
some curly brackets.

28
00:01:29.880 --> 00:01:34.231
We don't see any key words
around it like function or if or

29
00:01:34.231 --> 00:01:39.600
something like that may make it
feel like it's something else.

30
00:01:39.600 --> 00:01:42.796
And also we can return things like If and
things like that, but

31
00:01:42.796 --> 00:01:45.010
we can return functions.

32
00:01:45.010 --> 00:01:46.270
Cool.

33
00:01:46.270 --> 00:01:51.200
And then we have an array of suspects so
we have some more suspects now we have

34
00:01:51.200 --> 00:01:55.470
Colonel Mustard on the scene.Wonder
what happened to rusty?

35
00:01:55.470 --> 00:02:00.447
I don't know.

36
00:02:00.447 --> 00:02:02.670
So can someone spot the difference?

37
00:02:04.860 --> 00:02:08.370
&gt;&gt; Is it that you call speak immediately,
what's going on?

38
00:02:08.370 --> 00:02:12.090
&gt;&gt; There is something different
about speak, I will admit.

39
00:02:12.090 --> 00:02:14.920
&gt;&gt; It's a method on the function or
on the object now?

40
00:02:14.920 --> 00:02:18.621
&gt;&gt; Yeah, so this is a method,
this is a ESX feature,

41
00:02:18.621 --> 00:02:24.010
where we can add methods like this,
no colons, just straight on there.

42
00:02:25.410 --> 00:02:27.250
Works the same, no surprise.

43
00:02:27.250 --> 00:02:28.770
It's not a, a function or
anything like that.

44
00:02:28.770 --> 00:02:29.680
It's just a regular function.

45
00:02:31.280 --> 00:02:32.870
So there you go.

46
00:02:32.870 --> 00:02:37.410
There's just some E6, okay?

47
00:02:37.410 --> 00:02:42.300
&gt;&gt; I mean like these, you don't even
need the function keyword for speak.

48
00:02:42.300 --> 00:02:43.924
&gt;&gt; Nope, not in this case.

49
00:02:47.213 --> 00:02:50.969
Yeah, all right.

50
00:02:50.969 --> 00:02:54.750
All right, so we're initializing
the empty suspects list.

51
00:02:54.750 --> 00:02:58.082
And actually before I give it away,

52
00:02:58.082 --> 00:03:03.850
what we wanna do is we wanna
initialize each suspect.

53
00:03:03.850 --> 00:03:05.950
Into an object.

54
00:03:05.950 --> 00:03:10.990
I call this like hydration like
you're hydrating data into an object.

55
00:03:10.990 --> 00:03:16.207
It's not the most I'm not using it very
academically when I say that though,

56
00:03:16.207 --> 00:03:21.280
like people have opinions on
like what hydration isn't isn't.

57
00:03:21.280 --> 00:03:25.240
In this case when I say we're hydrating
an object that means we're just taking

58
00:03:25.240 --> 00:03:28.720
a data A piece of data and
we're turning it into some data structure,

59
00:03:28.720 --> 00:03:30.700
right in your applications.

60
00:03:30.700 --> 00:03:34.230
You probably have like a,
like a view model or something.

61
00:03:34.230 --> 00:03:37.950
Do you guys work with view
models at work maybe.

62
00:03:37.950 --> 00:03:40.940
And you have some data coming in or
even just a model, right?

63
00:03:40.940 --> 00:03:46.058
You have some data coming in either
From the back end, or if in the case

64
00:03:46.058 --> 00:03:52.260
of your view model may be you have
data coming in from a user, who knows.

65
00:03:52.260 --> 00:03:55.680
And to me, I would say that
when we take that data and

66
00:03:55.680 --> 00:04:01.120
we turn it into an object like a class,
that's like hydrating it.

67
00:04:01.120 --> 00:04:02.970
So that's what we're gonna do here.

68
00:04:02.970 --> 00:04:05.200
So this function is kind of like a class.

69
00:04:07.300 --> 00:04:10.600
In JavaScript, classes really are just
functions that return objects.

70
00:04:10.600 --> 00:04:15.472
So this is really a class is in as
much as using the keyword new or

71
00:04:15.472 --> 00:04:20.909
whatever is a class except in this case,
we don't have to worry about

72
00:04:20.909 --> 00:04:25.904
the keyword this who really
understands the keyword this I do.

73
00:04:25.904 --> 00:04:29.160
Because I teach it but most people don't.

74
00:04:29.160 --> 00:04:33.520
So we're not doing that today because
that's just a whole nother tangent that I

75
00:04:33.520 --> 00:04:37.227
would love to get, I think actually
have in one of my core actually,

76
00:04:37.227 --> 00:04:40.369
I think in data structures and
algorithms course if you.

77
00:04:40.369 --> 00:04:45.750
Want to learn about the keyword this
that's one of the very first Object.

78
00:04:45.750 --> 00:04:48.884
I do an object-oriented programming piece,
and you can look into that and

79
00:04:48.884 --> 00:04:51.090
look at the different styles.

80
00:04:51.090 --> 00:04:54.010
Anyway, so we're gonna hydrate this list.

81
00:04:56.000 --> 00:04:57.350
What do we do?

82
00:04:57.350 --> 00:05:02.294
So we have the suspects list, which needs
to be a list of objects created from

83
00:05:02.294 --> 00:05:04.860
the create suspect objects function.

84
00:05:04.860 --> 00:05:06.580
Are you guys following me here?

85
00:05:06.580 --> 00:05:09.160
I'm seeing suspects suspects a lot and
it's very difficult.

86
00:05:11.400 --> 00:05:15.942
So we want Miss Scarlett to have
a function with a name property that says

87
00:05:15.942 --> 00:05:17.540
Miss Scarlett, right?

88
00:05:17.540 --> 00:05:19.804
When we say Miss Scarlett that speak,

89
00:05:19.804 --> 00:05:24.000
I wanted to say my name is
Miss Scarlett that kind of thing.

90
00:05:24.000 --> 00:05:25.170
Yeah, we're good?

91
00:05:25.170 --> 00:05:26.180
Okay.

92
00:05:26.180 --> 00:05:34.071
What do we do how do we do it
&gt;&gt; If you said Miss Scarlett.

93
00:05:37.106 --> 00:05:38.461
Dot speak.

94
00:05:42.047 --> 00:05:43.234
It should.

95
00:05:47.560 --> 00:05:49.660
&gt;&gt; Yeah,
we would need to initialize it first.

96
00:05:52.460 --> 00:05:58.504
So basically what needs to happen
is we need to pass this string

97
00:05:58.504 --> 00:06:04.680
to this function so that we have
an object That says that has MS.

98
00:06:04.680 --> 00:06:10.044
Scarlett with the name they
should say Scarlett etc.

99
00:06:14.957 --> 00:06:16.340
That makes sense.

100
00:06:16.340 --> 00:06:21.210
&gt;&gt; Create suspect objects you.

101
00:06:21.210 --> 00:06:22.664
Calling the function.

102
00:06:22.664 --> 00:06:23.850
&gt;&gt; Yeah.

103
00:06:23.850 --> 00:06:24.670
&gt;&gt; Okay, great.

104
00:06:24.670 --> 00:06:28.884
&gt;&gt; So, how we were gonna, yeah,
so, we'll do CreateSuspectObjects.

105
00:06:33.880 --> 00:06:34.496
And then what?

106
00:06:34.496 --> 00:06:40.530
&gt;&gt; And then the name, Miss Scarlett.

107
00:06:40.530 --> 00:06:42.860
&gt;&gt; But let's get out of our suspects.

108
00:06:42.860 --> 00:06:45.827
&gt;&gt; Yeah.
&gt;&gt; [CROSSTALK] Something like that.

109
00:06:45.827 --> 00:06:48.050
Yeah, so we call it like that.

110
00:06:48.050 --> 00:06:50.851
Of course, isn't gonna work.

111
00:07:03.983 --> 00:07:04.500
All right.

112
00:07:05.680 --> 00:07:06.778
Do I have any typos?

113
00:07:08.519 --> 00:07:11.840
&gt;&gt; Name is split, still says one.

114
00:07:11.840 --> 00:07:12.920
&gt;&gt; Should say when I think.

115
00:07:14.194 --> 00:07:20.220
&gt;&gt; [INAUDIBLE]
&gt;&gt; Is it going to work?

116
00:07:20.220 --> 00:07:21.068
Is it gonna explode?

117
00:07:21.068 --> 00:07:29.396
There we are,
there's a hydrated object with Ms.

118
00:07:29.396 --> 00:07:35.797
Scarlett .Cool, straightforward.

119
00:07:35.797 --> 00:07:37.483
Awesome.

120
00:07:37.483 --> 00:07:39.228
So we can move through our list.

121
00:07:39.228 --> 00:07:46.650
And man.It kind of messed
up my indentation.

122
00:07:46.650 --> 00:07:49.390
But, we can loop through our list, right?

123
00:07:49.390 --> 00:07:52.959
So, we start at zero, we go all the way
up to the length of the suspects,

124
00:07:52.959 --> 00:07:54.640
we increment each time, right?

125
00:07:54.640 --> 00:07:59.182
That's what this says.

126
00:07:59.182 --> 00:08:03.880
And we're gonna assign a suspect, right?

127
00:08:03.880 --> 00:08:05.380
Maybe you wanna say let here, right?

128
00:08:05.380 --> 00:08:08.370
Cuz we're gonna reassign it.

129
00:08:08.370 --> 00:08:15.000
And we're gonna pass create suspect
objects suspects at one, I'm sorry at I.

130
00:08:16.000 --> 00:08:22.297
Then we're going to push
suspect into the suspects list.

131
00:08:22.297 --> 00:08:24.260
Seem fair?

132
00:08:24.260 --> 00:08:29.189
So we're looping through
a collection hydrating

133
00:08:29.189 --> 00:08:34.132
it creating instances of
these suspect objects.

134
00:08:34.132 --> 00:08:36.950
Cool, have you guys done
this kind of thing before?

135
00:08:38.300 --> 00:08:41.590
Yeah, Okay, cool.

136
00:08:41.590 --> 00:08:43.250
Here's that with the last line.

137
00:08:44.640 --> 00:08:45.230
Combined.

138
00:08:48.030 --> 00:08:52.786
So we just say create suspect
objects suspects that I and

139
00:08:52.786 --> 00:08:56.540
put that inside of the push and
under there.

