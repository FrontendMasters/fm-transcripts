[00:00:00]
>> Bianca Gandolfo: Let's start with our underscore, right? It's an object. And then we're gonna say _.each,
>> Bianca Gandolfo: = a function. What does that function take? Do we remember? What's the first argument?
>> Speaker 2: A list.
>> Bianca Gandolfo: A list, and a second one?
>> Speaker 2: Callback function?
>> Bianca Gandolfo: Yeah, awesome, so I'm just gonna write some pseudo code out, just so we can think through it before diving in.

[00:00:36]
So first, we want to loop through the list.
>> Bianca Gandolfo: And then in each loop, I indented it, because for each loop, I wanted to call the callback with a list item. All right,
>> Bianca Gandolfo: And then we need to make sure that it works with both objects in arrays.

[00:01:03]
And so for objects in arrays, you should use different loops. Like we mentioned before, arrays work well with the for loop, with the i and the semicolons because of the numerical indices. Objects work better with the for n loop. Where say for var key in obj, that one.

[00:01:23]
We are gonna check which one's an array. If it's an array, we'll loop through it with the other one. With the loop with the i and the semicolons, the numerical loop. And then, if it's an object, we'll do the for n loop. Okay.
>> Bianca Gandolfo: How do we check if something is an array?

[00:01:49]

>> Speaker 2: If type of list equals equals array.
>> Bianca Gandolfo: Ooh, equals, equals.
>> Speaker 2: Yeah, three.
>> Bianca Gandolfo: Like this?
>> Speaker 2: No. Not a string of them. Wait, is array. There's a function called is array, isn't there?
>> Bianca Gandolfo: You're right. Yeah. So, remember this was not gonna work.
>> Bianca Gandolfo: Sad face, this won't work because arrays are objects that's always gonna return false.

[00:02:27]
But you're right, we do have this handy function array.is array, and we pass a list. This is gonna return true if the list is an array. Great, so we got that. And then otherwise else we can loop through object. Just notes for ourselves loop through array, okay.
>> Bianca Gandolfo: Okay, so we've got that part.

[00:03:10]

>> Bianca Gandolfo: I forgot the most important part. What you should do at the end of everything is to celebrate, note to self. Okay, so what's that loop that we want to use for the arrays again? Anyone?
>> Speaker 2: For equals 0.
>> Bianca Gandolfo: Okay, so I'm just saying start at 0, keep looping until we get to that link.length.

[00:03:51]
And increment by 1 each time That's what that means. Cool. So now we wanna call a callback. How do we call a function? We haven't really talked about that too much yet, but just refer it by name. In this case it will be called callback. And we'll pass it the value from the list, which we say list.i.

[00:04:19]
I this is gonna return the value. And then just the API, or for the each function it's gonna send the index, and then it sends the entire list. That's just how it works.
>> Bianca Gandolfo: Okay.
>> Speaker 2: You said?
>> Bianca Gandolfo: Yeah, sure. So the expectation for each. And just be careful, different versions of each jquery has an each, there's for each, and then there's underscore-each.

[00:04:49]
Sometimes these arguments are swapped, but for underscore each. It's first gonna be the value, then the index, and then the list. So inside of that call back function you'll have access to a value, the index and the list, every single time. Which is handy, because you want this to be a generic function that can be used in various contexts.

[00:05:12]
We don't really know what our future users are gonna need this for. So it'll just work and have all of the data available.
>> Speaker 2: Do we need to define callback somewhere else, then?
>> Bianca Gandolfo: It's there. You mean, so we'll get to that actually. That's a good question. Before I move on maybe I actually, will call each so that we can look at it with some data.

[00:05:43]

>> Speaker 2: Okay, right.
>> Bianca Gandolfo: All right, cool any questions about how we handled the array? Before I move on maybe I actually, will call each so that we can look at it with some data. I don't know.
>> Bianca Gandolfo: Okay, so we have some names, and then we're gonna pass in a callback function.

[00:06:29]
I'm just gonna put an anonymous function here, because I'm lazy. That's why and then, let's see, so name, index. We'll just worry about the name, index. And maybe this is an array of brothers and sisters or maybe animals, because Porgie would be a really bad name. Maybe it's a nickname.

[00:06:53]
Anyway, it's a series of names and it's in order of oldest to youngest or something like that. So there's an order. So this function is going to going to say that name is younger than name than we do need this list. So we can say, if name. Name, you guys are letting me do some crazy stuff, you've got to be my linter.

[00:07:39]
Name, i+1. So the next one, if there is an i+1, we'll say that the current name is younger. The name i+1 else we are gonna console, log that name, that won't work right we want it to variable name it's the oldest.
>> Speaker 3: Do we want list i + 1?

[00:08:18]

>> Bianca Gandolfo: Yes.
>> Bianca Gandolfo: Why is that not matching? There's no space.
>> Bianca Gandolfo: Okay.
>> Bianca Gandolfo: All right, so we understand what's happening? For each one of these, so Sally is the youngest, George is in the middle, Porgie is the oldest. We're gonna loop through. We are going to check if, if there is an item after the current index, we gonna cancel log that Sally is younger than Georgie, yeah.

[00:09:12]
And then if there isn't one then we'll say Porgie is the oldest, okay? So now let's take a look. So this is us using the function. Now let's look at the internals. This is the part as the user we don't think about, we just trust is gonna do what it's gonna do and then like see what it does and if it does the right thing we're happy.

[00:09:38]
If it doesn't, then we kind of fit all and hope for the best. I don't know, that's my strategy. It's not very effective. So let's think critically about this. So list is what?
>> Speaker 2: The array.
>> Bianca Gandolfo: Yap, this is the array. Callback is what?
>> Speaker 2: Function.
>> Bianca Gandolfo: Yeah, this entire function.

[00:10:03]
Okay, keep that in mind. It's important. So, if array.isArray list, what does that evaluate to? Graceware crew. Anyone over there? Is this gonna be true or false? You can join in too. True, yeah. So this will be true. And so we'll hoop into this block here, so we'll look through the length and the list and we're gonna call this function with three things.

[00:10:47]
The first one it's the value, list dot i. So the very first loop, i equals what?
>> Speaker 2: Zero.
>> Bianca Gandolfo: Zero, and so a list at zero is what?
>> Speaker 2: Sally.
>> Bianca Gandolfo: Sally, yep. What's i again?
>> Speaker 2: Zero.
>> Bianca Gandolfo: Zero, and what's the list again? Graceware crew?
>> Speaker 2: The array.

[00:11:16]

>> Bianca Gandolfo: Awesome. So we have this, and it's gonna line up with this. So list that i is Sally is going to be name, i is zero, and list is the list. Following? They kinda had to snake through it. So we're gonna hoop in. I'm gonna write us a note here that we have Sally and we have zero, just so we know.

[00:11:43]
So the list at i is zero. Plus one equals one. That is going to be what true or false?
>> Speaker 2: True.
>> Bianca Gandolfo: It's gonna be Georgie, which will be true, it exists. This will be true, and then we'll console log that-
>> Speaker 2: Sally.
>> Bianca Gandolfo: Sally.
>> Sally: Is younger than.

[00:12:18]

>> Bianca Gandolfo: Anyone?
>> Sally: Than Georgie.
>> Bianca Gandolfo: Yeah, we got it? Cool. And then it would do that for each one. So it would do the same thing for Georgie. I'm not gonna go through it all. Unless, would you like me to go through it one more time to review or do we think we feel solid in how this works?

[00:12:38]
So one more time, solid don't do it, okay cool. Awesome, now.
>> Speaker 2: So do you list one there?
>> Bianca Gandolfo: Yeah.
>> Bianca Gandolfo: All right.
>> Bianca Gandolfo: Who here finished the underscore each? You did it for one? No, okay.
>> Bianca Gandolfo: We don't really have time. I would really like to challenge you guys to do the object part, but for the sake of time, for those of you who are watching, if you only did one, I would say pause and come back.

[00:13:30]
But I'll just do it, because of time. So else, we're just gonna loop through. We're gonna assume. Otherwise, this is an object, and we want it to work the same for an object. That's a nice thing about underscore versus native array for each, is that you don't have to course into an array.

[00:13:49]
We'll see later on some tricky things that look like arrays, but they're really objects. So.
>> Bianca Gandolfo: So we're going to say callback, how do we get the item? List bracket key. Why is it brackets? You guys know?
>> Sally: Because it's non numeric?
>> Bianca Gandolfo: Because it's a variable. Yeah.

[00:14:23]
Also, non numeric but we would have to do that. Core dot. And then how do we get the index?
>> Bianca Gandolfo: I say ended, because it's not right.
>> Speaker 2: Key? Is it just key?
>> Bianca Gandolfo: Yeah, just key. And that's gonna be the property name.
>> Bianca Gandolfo: Cool. There you have it.

[00:14:56]

>> Bianca Gandolfo: Questions?
>> Bianca Gandolfo: So do you think if I asked you to implement this, we erased it and you needed to re-implement it, do you feel like you could re-implement now that you've seen how it works? Or do you think maybe you're still a little stuck. You can be honest.

[00:15:20]
I'm just curious if this got you there. Or if some people need more. I'm not gonna go into more right now, cuz I don't have time, but I'm just wondering what the temperature is. The temperature is, I'm there, almost there, not quite. Okay, we have some almost, okay.

[00:15:37]
Well, lucky you, because we're gonna do something really similar with map. You guys familiar with map? Sweet.

