WEBVTT

1
00:00:00.110 --> 00:00:03.660
&gt;&gt; Bianca Gandolfo: Another cool
thing is default parameters.

2
00:00:03.660 --> 00:00:09.088
Can anyone take a wild guess of
what a default parameter might be?

3
00:00:09.088 --> 00:00:11.910
&gt;&gt; Speaker 2: If you don't pass the value,
it gets set to that default value.

4
00:00:11.910 --> 00:00:14.910
&gt;&gt; Bianca Gandolfo: Yeah,
how helpful is that?

5
00:00:14.910 --> 00:00:16.790
I really like that part actually.

6
00:00:18.070 --> 00:00:22.910
There are some parts of the that I
don't really care too much about,

7
00:00:22.910 --> 00:00:27.770
especially when it gives so much
variance and syntax and stuff like that.

8
00:00:27.770 --> 00:00:32.451
Makes life as an instructor
very difficult.

9
00:00:32.451 --> 00:00:35.530
But things like this,
I'm like, okay, it's good.

10
00:00:35.530 --> 00:00:36.050
I like this.

11
00:00:37.060 --> 00:00:43.520
However, this interesting thing here is
that it's only gonna console out three for

12
00:00:43.520 --> 00:00:48.710
the arguments, in this case where
we didn't pass two arguments.

13
00:00:50.350 --> 00:00:53.170
So something to keep in mind that
the argument's keyword is only paying

14
00:00:53.170 --> 00:00:57.050
attention to the explicit values
being passed into the function, and

15
00:00:57.050 --> 00:01:00.030
if there's something
like a default value or

16
00:01:00.030 --> 00:01:03.560
a spread operator, it's not going to-
&gt;&gt; Speaker 3: So

17
00:01:03.560 --> 00:01:05.400
it doesn't tell you anything
about parameters at all.

18
00:01:05.400 --> 00:01:06.650
It just tells you about arguments?

19
00:01:06.650 --> 00:01:08.330
&gt;&gt; Bianca Gandolfo: Yep, exactly.

20
00:01:08.330 --> 00:01:12.910
Which, if you think about it,
is what you care about, for the most part.

