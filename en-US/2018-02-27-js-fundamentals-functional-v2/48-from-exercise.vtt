WEBVTT

1
00:00:00.176 --> 00:00:02.159
So yeah, so we're gonna implement this.

2
00:00:02.159 --> 00:00:05.220
In this case, we gonna pass the array.

3
00:00:07.482 --> 00:00:08.366
Just so you know.

4
00:00:10.725 --> 00:00:14.695
And we're gonna implement
the internals of from or so.

5
00:00:14.695 --> 00:00:15.217
You have a question?

6
00:00:15.217 --> 00:00:19.881
&gt;&gt; Yeah, so the array like
objects that it's receiving,

7
00:00:19.881 --> 00:00:25.240
can you just say more about what
that is supposed to be at least for

8
00:00:25.240 --> 00:00:30.540
this exercise or like should I return-
&gt;&gt; Make sure you return an array.

9
00:00:30.540 --> 00:00:32.828
I should take an array like object and
return an array.

10
00:00:32.828 --> 00:00:38.956
An array like object is just an object
that has numerical indices but

11
00:00:38.956 --> 00:00:42.407
it doesn't have array methods in it.

12
00:00:42.407 --> 00:00:43.791
&gt;&gt; Okay, I think it's huge, I mean that.

13
00:00:43.791 --> 00:00:46.927
&gt;&gt; Yeah, it actually even has a length,
so be careful.

14
00:00:48.487 --> 00:00:51.542
But it won't have a push.

15
00:00:51.542 --> 00:00:52.542
&gt;&gt; Okay.

16
00:00:54.578 --> 00:00:56.858
&gt;&gt; That's what it will look like visually.

17
00:00:56.858 --> 00:00:57.671
Good question.

18
00:00:57.671 --> 00:00:59.283
&gt;&gt; Okay, got it, thank you.

19
00:01:06.482 --> 00:01:12.477
And if you do,
let's try something here, I'm curious.

20
00:01:16.164 --> 00:01:20.716
I wanna show you a cool trick, you ready?

21
00:01:20.716 --> 00:01:23.676
So did you know you can
just put a debugger here?

22
00:01:25.648 --> 00:01:26.244
Did you guys know that?

23
00:01:26.244 --> 00:01:30.150
And then you run it and it just opens
your random code snippet in the debugger.

24
00:01:34.270 --> 00:01:38.611
So I put a debugger here because I
wanna stop the function right there so

25
00:01:38.611 --> 00:01:40.610
I can have access to arguments.

26
00:01:40.610 --> 00:01:44.978
So here's what the arguments, Looks like.

27
00:01:44.978 --> 00:01:47.848
And if we say array, that is array.

28
00:01:50.114 --> 00:01:54.042
Arguments should return false.

29
00:01:54.042 --> 00:01:54.773
Can you guys see that?

30
00:01:54.773 --> 00:01:56.133
It's so small.

31
00:01:57.425 --> 00:02:01.983
So all I did was took a code snippet,
I put a debugger in there,

32
00:02:01.983 --> 00:02:03.400
it passes it here.

33
00:02:03.400 --> 00:02:07.251
And the reason I wanna passes it there
is because it's after it's been invoked,

34
00:02:07.251 --> 00:02:13.998
add the arguments,
Variable has a value at that point.

35
00:02:13.998 --> 00:02:18.255
So if you wanna experiment with your code,
you can do that.

36
00:02:21.752 --> 00:02:25.656
And for those of you who aren't
familiar with how this works,

37
00:02:25.656 --> 00:02:27.920
you can step over your code as well.

38
00:02:27.920 --> 00:02:29.658
And you can also step into methods.

39
00:02:29.658 --> 00:02:32.333
So if you define a method,
you can step into it and

40
00:02:32.333 --> 00:02:35.478
it will jump into that file or
to that method definition.

41
00:02:35.478 --> 00:02:39.458
And then you can keep walking through and

42
00:02:39.458 --> 00:02:44.388
you can follow how your
code runs in your project.

43
00:02:44.388 --> 00:02:46.427
So that's kinda nice.

44
00:02:46.427 --> 00:02:49.764
And if you go too far in
you can step out as well.

45
00:02:49.764 --> 00:02:53.606
But most of the time,
I'm just stepping over things.

46
00:02:53.606 --> 00:03:00.112
And then it will tell me, for
example, that array looks like that.

47
00:03:00.112 --> 00:03:03.603
I'm not gonna hover, which is pretty nice.

48
00:03:03.603 --> 00:03:06.645
Also if I go too far,
I can look at the call stack and

49
00:03:06.645 --> 00:03:09.560
I can do something called
restart stack frame.

50
00:03:09.560 --> 00:03:13.126
And it will go back to the beginning and
then I can do it again.

51
00:03:13.126 --> 00:03:14.574
Just be like wait, what happened?

52
00:03:14.574 --> 00:03:15.802
Okay, that's what happened.

53
00:03:15.802 --> 00:03:18.146
And then I forgot again and I restarted.

54
00:03:19.279 --> 00:03:19.782
Or whatever.

55
00:03:21.802 --> 00:03:23.044
That's another cool thing.

56
00:03:23.044 --> 00:03:25.451
You can watch variables if you want.

57
00:03:25.451 --> 00:03:29.079
It's not as useful as it used
to be now that we can hover and

58
00:03:29.079 --> 00:03:31.584
it has these little orange things now.

59
00:03:34.459 --> 00:03:37.745
You can see different scopes,
which will be useful,

60
00:03:37.745 --> 00:03:40.457
after lunch we're gonna talk about scope.

61
00:03:40.457 --> 00:03:46.413
So in our global scope,
it looks like we have a lot of different,

62
00:03:46.413 --> 00:03:50.034
Libraries here with a bunch of craziness.

63
00:03:52.532 --> 00:03:56.329
And then locally we have our arguments,
our array and the window.

64
00:03:58.313 --> 00:03:59.813
I'm not sure what,

65
00:03:59.813 --> 00:04:05.835
I guess the script scope is just the scope
of this little snippet that I passed in.

