WEBVTT

1
00:00:00.640 --> 00:00:02.650
So what's with the bracket stuff?

2
00:00:02.650 --> 00:00:03.250
Right?

3
00:00:03.250 --> 00:00:07.050
Are you guys familiar
with seeing brackets?

4
00:00:10.977 --> 00:00:14.934
Yeah, this is more probably what
you're thinking of when you think of

5
00:00:14.934 --> 00:00:16.020
an array, right?

6
00:00:16.020 --> 00:00:20.690
You say person, zero with brackets,
and some value, right?

7
00:00:20.690 --> 00:00:23.459
In this case it's a string,
but it could be an object,

8
00:00:23.459 --> 00:00:26.186
it could be a function,
it could really be anything.

9
00:00:26.186 --> 00:00:30.040
If you're storing an array of functions,
probably doing something wrong, but

10
00:00:30.040 --> 00:00:30.842
it is possible.

11
00:00:40.161 --> 00:00:44.785
So, really what's happening here
is our 0 is just being stringfied.

12
00:00:46.767 --> 00:00:48.534
And there it is, it's just a property.

13
00:00:51.174 --> 00:00:56.118
But then, why can't we say person.0?

14
00:00:59.454 --> 00:01:03.050
Because it's a syntax error,
because it's not a string.

15
00:01:04.310 --> 00:01:08.140
So, that's why we have
to use the brackets.

16
00:01:08.140 --> 00:01:11.728
So we use the brackets when we
can't use the dot basically, and

17
00:01:11.728 --> 00:01:13.172
when can we not use a dot?

18
00:01:13.172 --> 00:01:18.288
Pretty much when the value is not

19
00:01:18.288 --> 00:01:24.946
supposed to be a string literal, right?

20
00:01:24.946 --> 00:01:28.965
So, for example, name,

21
00:01:28.965 --> 00:01:33.500
the property name is Name.

22
00:01:33.500 --> 00:01:34.660
Sorry, guys.

23
00:01:34.660 --> 00:01:39.550
And so you say .name it saves as name.

24
00:01:39.550 --> 00:01:43.812
Yeah?
When you need to coerce it into a string,

25
00:01:43.812 --> 00:01:46.810
or it's just invalid, right?

26
00:01:46.810 --> 00:01:50.358
There's some invalid characters,
you can think of it like,

27
00:01:50.358 --> 00:01:52.410
what is a valid variable name?

28
00:01:52.410 --> 00:01:53.350
That's a way to think about it.

29
00:01:53.350 --> 00:01:59.010
If it's a valid variable name, it probably
could be used with a dot notation.

30
00:01:59.010 --> 00:02:02.480
If it's not,
then it gets caught up in your parser.

31
00:02:04.090 --> 00:02:08.401
So that's why we use the brackets,
simply because it's a number.

32
00:02:10.627 --> 00:02:11.190
And that's it.

33
00:02:12.530 --> 00:02:13.850
What about this?

34
00:02:13.850 --> 00:02:18.153
So we have our person, we have the name,

35
00:02:18.153 --> 00:02:23.479
we have a plea, I would never,
Mrs. White says.

36
00:02:25.510 --> 00:02:27.402
What's gonna happen to our data structure?

37
00:02:29.595 --> 00:02:31.920
What arrow needs to go where?

38
00:02:31.920 --> 00:02:34.359
How about, gray zipper on the very end?

39
00:02:36.461 --> 00:02:40.420
&gt;&gt; [COUGH]
&gt;&gt; Name to I would never.

40
00:02:41.990 --> 00:02:44.240
&gt;&gt; You think name would
go to I would never?

41
00:02:47.586 --> 00:02:48.845
I'm giving you a second chance.

42
00:02:48.845 --> 00:02:52.473
Person to I would never.

43
00:02:52.473 --> 00:02:53.553
[LAUGH] Close.

44
00:02:55.994 --> 00:02:57.631
What's the problem here?

45
00:02:59.882 --> 00:03:02.730
&gt;&gt; We don't currently have something
called plea attached to that.

46
00:03:02.730 --> 00:03:03.370
&gt;&gt; Yeah.

47
00:03:03.370 --> 00:03:06.920
So when we use the brackets,
we don't assume that it's a string.

48
00:03:08.220 --> 00:03:11.850
So it could be a variable name,
it could be an expression.

49
00:03:11.850 --> 00:03:15.222
You could call a function in
a bracket if you wanted to, again,

50
00:03:15.222 --> 00:03:19.120
probably not a good idea, but
it's valid, it won't give you an error.

51
00:03:21.280 --> 00:03:27.040
So yeah, we need to change that, So

52
00:03:27.040 --> 00:03:32.332
we're updating plea to
the string wouldShe, and

53
00:03:32.332 --> 00:03:38.769
so notice that the property name
here is wouldShe and not plea

54
00:03:42.131 --> 00:03:46.300
If we wanted it to be plea,
how might we go about doing that?

55
00:03:48.160 --> 00:03:49.800
How about here in
the middle with the black?

56
00:03:51.770 --> 00:03:52.560
&gt;&gt; Can you ask that again?

57
00:03:52.560 --> 00:03:53.910
Sorry, I was still going through it.

58
00:03:53.910 --> 00:03:54.730
&gt;&gt; Sure, no problem.

59
00:03:54.730 --> 00:03:59.916
So, I just said notice that
wouldShe is the property name.

60
00:04:01.589 --> 00:04:03.421
But some might expect it to be plea.

61
00:04:05.285 --> 00:04:10.410
However, it's not, if we did want it to
be plea, what might we need to change?

62
00:04:12.660 --> 00:04:17.662
&gt;&gt; It would need to be on the other
side of the equal sign somehow,

63
00:04:17.662 --> 00:04:20.660
person is gonna have to assign that.

64
00:04:23.060 --> 00:04:27.069
Cuz right now it's,
&gt;&gt; How do we do it before for this one?

65
00:04:28.886 --> 00:04:32.817
&gt;&gt; Or you could do the person.plea.

66
00:04:32.817 --> 00:04:37.830
&gt;&gt; Mh-hm, Yeah, so you could use the dot
notation, absolutely, and assign it.

67
00:04:37.830 --> 00:04:41.791
So the dot notation coerces
it into a string, right?

68
00:04:44.720 --> 00:04:48.061
How can we do it with bracket notation?

69
00:04:48.061 --> 00:04:49.163
&gt;&gt; Have quotes around plea?

70
00:04:49.163 --> 00:04:52.657
&gt;&gt; Quotes around it, that's how
you manually make a string, right?

71
00:04:52.657 --> 00:04:54.095
Instead of coercing it.

72
00:04:54.095 --> 00:04:54.939
Awesome.

73
00:04:58.917 --> 00:04:59.620
There we go.

74
00:05:01.640 --> 00:05:03.950
&gt;&gt; So now-
&gt;&gt; I have a question.

75
00:05:03.950 --> 00:05:04.490
&gt;&gt; Yeah.

76
00:05:04.490 --> 00:05:07.400
&gt;&gt; So
could you go back to the other slide?

77
00:05:07.400 --> 00:05:08.900
I guess it's kind of in Slide 2 too.

78
00:05:08.900 --> 00:05:14.486
But so, in this example, first you set
like the variable plea to wouldShe,

79
00:05:14.486 --> 00:05:17.737
and then later on you
use the bracket thing.

80
00:05:17.737 --> 00:05:23.247
If you would skip that first step of
setting the var plea to wouldShe,

81
00:05:23.247 --> 00:05:28.098
then what would have happened
on that last line with person?

82
00:05:28.098 --> 00:05:29.720
&gt;&gt; Yeah.
&gt;&gt; Bracket plea.

83
00:05:29.720 --> 00:05:33.851
&gt;&gt; Yeah, so the first thing that
would happen is it's gonna evaluate

84
00:05:33.851 --> 00:05:37.630
what's in the bracket,
we'll actually do that first bit.

85
00:05:38.820 --> 00:05:43.510
&gt;&gt; And it'll evaluate what's in the
bracket, it'll say, plea is a variable.

86
00:05:43.510 --> 00:05:47.424
So there's no quotes around it or
anything like that,

87
00:05:47.424 --> 00:05:51.050
it's not a number,
it appears to be a variable.

88
00:05:51.050 --> 00:05:55.951
So it'll first look in the scope for a
variable and look in any scopes that it's

89
00:05:55.951 --> 00:06:00.870
connected to, which we'll talk about
later, and find that there is no plea.

90
00:06:02.190 --> 00:06:07.266
And so, let's run it and
see what it says to us.

91
00:06:08.894 --> 00:06:11.510
&gt;&gt; Would that kick up an error then
if you're trying to sign like that?

92
00:06:13.740 --> 00:06:16.220
&gt;&gt; Yeah, plea is not defined, it says.

93
00:06:17.580 --> 00:06:19.353
I think it's good to learn the errors.

94
00:06:20.938 --> 00:06:21.479
Cool.
&gt;&gt; So,

95
00:06:21.479 --> 00:06:24.834
show them how to fix it
with quotes in the bracket.

96
00:06:24.834 --> 00:06:27.610
&gt;&gt; Mh-hm, so if you see that,

97
00:06:27.610 --> 00:06:33.409
we'll just put our quotes around,
and then we're happy.

98
00:06:40.163 --> 00:06:43.448
Here's our little special thing about
the array, we have our little length,

99
00:06:43.448 --> 00:06:45.450
which is zero,
which is interesting, right?

100
00:06:45.450 --> 00:06:50.481
Because we have some stuff in this array.

101
00:06:51.753 --> 00:06:56.315
Interesting.

102
00:06:56.315 --> 00:06:58.322
Okay, great.

103
00:06:58.322 --> 00:07:01.802
So, if we create something
with the brackets,

104
00:07:01.802 --> 00:07:04.328
can we then look it up with the dot?

105
00:07:06.147 --> 00:07:07.000
&gt;&gt; Yeah.

106
00:07:07.000 --> 00:07:08.520
&gt;&gt; Yeah, seems reasonable.

107
00:07:08.520 --> 00:07:14.561
Can you imagine if you had to
remember how something was defined?

108
00:07:14.561 --> 00:07:19.313
You can imagine how many files and
etc, etc.

109
00:07:19.313 --> 00:07:22.778
You don't need to remember how it's
defined, it can go either way,

110
00:07:22.778 --> 00:07:24.952
you just need to remember the basic rules.

111
00:07:24.952 --> 00:07:29.179
So, I'm gonna point to some people,
and we're gonna uncover

112
00:07:29.179 --> 00:07:33.658
the rules that we have discovered so
far about objects and arrays.

113
00:07:33.658 --> 00:07:34.158
Are you ready?

114
00:07:35.520 --> 00:07:39.020
Okay, so let's start in the way, way back.

115
00:07:40.860 --> 00:07:47.681
What's the rule that we learned through
this exercise about objects and arrays?

116
00:07:47.681 --> 00:07:53.820
&gt;&gt; Array is a type of object that has
some methods already attached to it.

117
00:07:53.820 --> 00:07:55.590
&gt;&gt; Mh-hm, awesome.

118
00:07:55.590 --> 00:07:57.300
That's probably the coolest one, I think.

119
00:07:58.580 --> 00:08:01.540
Yeah, and then I go here,
it's gonna go like this.

120
00:08:01.540 --> 00:08:02.616
So, just so you know,

121
00:08:02.616 --> 00:08:07.518
you could prepare yourself
&gt;&gt; Property

122
00:08:07.518 --> 00:08:11.113
string can be passed with dot notation or
brackets in quotes.

123
00:08:11.113 --> 00:08:13.090
&gt;&gt; Mh-hm, yeah, absolutely.

124
00:08:23.408 --> 00:08:25.869
[LAUGH]
&gt;&gt; Can we come back?

125
00:08:25.869 --> 00:08:29.542
[LAUGH]
&gt;&gt; Sure, sure.

126
00:08:29.542 --> 00:08:31.951
&gt;&gt; I'm gonna repeat a little bit, but

127
00:08:31.951 --> 00:08:36.778
the using the dot notation coerces
to a string where bracket doesn't.

128
00:08:36.778 --> 00:08:42.965
&gt;&gt; Got it, and
why can't we use dot number, dot zero?

129
00:08:42.965 --> 00:08:44.219
Why does that not work?

130
00:08:47.098 --> 00:08:50.642
Because it says if we're coercing
into a string with a dot, right?

131
00:08:50.642 --> 00:08:52.220
If we said person.zero, right?

132
00:08:54.050 --> 00:08:55.880
Why can't we do that?

133
00:08:55.880 --> 00:08:57.001
The answer is in the next line.

134
00:08:59.093 --> 00:09:01.831
&gt;&gt; There's no variable named zero.

135
00:09:01.831 --> 00:09:04.178
&gt;&gt; Well, for the dot notation
it's gonna coerce it to a string.

136
00:09:06.454 --> 00:09:10.791
&gt;&gt; Is it because zero is not a string,
it's seen as a number?

137
00:09:10.791 --> 00:09:13.368
&gt;&gt; Well, you can coerce
a number into a string, right?

138
00:09:17.798 --> 00:09:23.071
The reason is that it's just invalid
syntax, it starts to evaluate

139
00:09:23.071 --> 00:09:28.820
as a number and it gets confused and
so it's gonna give you a syntax error.

140
00:09:30.050 --> 00:09:38.470
So we can only use dot notation with
characters that are not unusual.

141
00:09:38.470 --> 00:09:42.748
And when I mean unusual, I mean, can you
create a variable name starting with that

142
00:09:42.748 --> 00:09:45.540
character, that contains that character,
right?

143
00:09:45.540 --> 00:09:47.930
So you can use an underscore but
not a dash.

144
00:09:47.930 --> 00:09:51.433
These are things that you just kinda
have to learn by trial and error, but

145
00:09:51.433 --> 00:09:54.076
just understand that if you're
using a dot notation or

146
00:09:54.076 --> 00:09:58.530
you're using a character that's a little
bit unusual, you might get a syntax error.

147
00:09:58.530 --> 00:10:03.722
And if you do, the solution is to?

148
00:10:03.722 --> 00:10:06.863
&gt;&gt; Sorry, I was typing notes.

149
00:10:06.863 --> 00:10:08.607
&gt;&gt; Change it to a string.

150
00:10:08.607 --> 00:10:14.100
&gt;&gt; Yeah, put it in a bracket notation and
put quotes around it, yeah, awesome.

151
00:10:15.730 --> 00:10:18.320
So, I know that we're drilling this in,
but

152
00:10:18.320 --> 00:10:23.540
this is the most common thing that people
get stuck on, that can take a long time.

153
00:10:23.540 --> 00:10:27.650
But if you learn the rules,
it's pretty straightforward.

154
00:10:27.650 --> 00:10:33.294
There are, I don't know,
a handful of rules,

155
00:10:33.294 --> 00:10:37.600
maybe five rules to know, but
you guys seem to be picking it up.

