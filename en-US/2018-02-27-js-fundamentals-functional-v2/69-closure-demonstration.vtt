WEBVTT

1
00:00:00.750 --> 00:00:01.890
&gt;&gt; Bianca Gandolfo: This is a function.

2
00:00:01.890 --> 00:00:04.470
It takes a name, it gives a name.length,

3
00:00:04.470 --> 00:00:08.370
and it returns another function
that expects a weapon.

4
00:00:10.670 --> 00:00:15.559
Then it assigns the length,
and the weapon.length, and

5
00:00:15.559 --> 00:00:19.566
it does some magic,
to return a Boolean value.

6
00:00:21.804 --> 00:00:25.290
&gt;&gt; Bianca Gandolfo: You can imagine,
this is our deep learning algorithm that's

7
00:00:25.290 --> 00:00:29.860
gonna tell you if someone's a murderer or
not, or if they could possibly be one.

8
00:00:31.460 --> 00:00:33.920
So let's take a look
at how this one works.

9
00:00:35.400 --> 00:00:38.910
So let's just put us there.

10
00:00:40.300 --> 00:00:43.730
And so we have our new clue.

11
00:00:45.620 --> 00:00:48.979
We're gonna pass a name, so
who do you guys think is a murderer,

12
00:00:48.979 --> 00:00:50.298
off the top of your head?

13
00:00:50.298 --> 00:00:50.980
&gt;&gt; Audience: Edwin Green.

14
00:00:50.980 --> 00:00:51.480
&gt;&gt; Bianca Gandolfo: Green?

15
00:00:52.800 --> 00:00:58.969
Okay, so now this is called

16
00:00:58.969 --> 00:01:04.073
didGreenDoItWithA,

17
00:01:09.556 --> 00:01:10.857
&gt;&gt; Bianca Gandolfo: [LAUGH]

18
00:01:10.857 --> 00:01:17.370
didGreenDoItWIthA, okay.

19
00:01:17.370 --> 00:01:25.300
Now, let's check out what It looks like,
all right.

20
00:01:25.300 --> 00:01:27.237
So didGreenDoItWithA, is a function that.

21
00:01:30.228 --> 00:01:34.820
&gt;&gt; Bianca Gandolfo: Okay,
is a function that

22
00:01:34.820 --> 00:01:39.200
is expecting a weapon.

23
00:01:40.580 --> 00:01:44.726
Okay, so returning that function,
not lives here.

24
00:01:59.616 --> 00:02:05.280
&gt;&gt; Bianca Gandolfo: So,
what we can do here, is we can pass.

25
00:02:07.580 --> 00:02:12.120
So, how this works is, so

26
00:02:12.120 --> 00:02:16.230
we passed the name, right.

27
00:02:16.230 --> 00:02:16.730
Name.

28
00:02:18.931 --> 00:02:22.186
&gt;&gt; Bianca Gandolfo: We save it here and
then we return this function for

29
00:02:22.186 --> 00:02:26.992
the same exact rules that we mentioned
before, with the parent execution

30
00:02:26.992 --> 00:02:32.062
context only being initialized once,
it's gonna retain access to length.

31
00:02:32.062 --> 00:02:40.008
And so, you can do it,
&gt;&gt; Bianca Gandolfo: With the,

32
00:02:40.008 --> 00:02:45.694
I don't know.

33
00:02:45.694 --> 00:02:50.230
Led pipe, and so you can keep doing it and

34
00:02:50.230 --> 00:02:53.571
it's always gonna be green.

35
00:02:55.504 --> 00:02:58.970
&gt;&gt; Bianca Gandolfo: Thumbs,
that make sense?

36
00:03:00.420 --> 00:03:01.590
Does that works?

37
00:03:01.590 --> 00:03:03.580
Does it make sense that it works?

38
00:03:03.580 --> 00:03:05.490
What is your question?

39
00:03:07.420 --> 00:03:11.499
&gt;&gt; Audience: So we originally
assigned green to the name and

40
00:03:11.499 --> 00:03:14.987
the name.length, right?

41
00:03:14.987 --> 00:03:19.800
&gt;&gt; Bianca Gandolfo: So we passed in green,
we get the length of green,

42
00:03:19.800 --> 00:03:25.304
we save it in length, and
then we return this function and

43
00:03:25.304 --> 00:03:32.087
that function, is assigned to this
value which we have printed here.

44
00:03:32.087 --> 00:03:40.210
So then when you call it, have to remember
not to double click on that anymore.

45
00:03:40.210 --> 00:03:45.263
So when you call it weapon gets passed,
and then clue equals

46
00:03:45.263 --> 00:03:50.027
length right,
which is from the parent scope, right.

47
00:03:50.027 --> 00:03:54.530
So clue, length,
get it from the parent scope plus

48
00:03:54.530 --> 00:03:58.100
weapon.length that we just passed in.

49
00:04:00.260 --> 00:04:00.870
And then magic.

50
00:04:02.460 --> 00:04:07.866
So here's another interesting thing,

51
00:04:07.866 --> 00:04:15.498
applying the same concept here
where we have the access,

52
00:04:15.498 --> 00:04:20.430
we have access in our parents scope.

53
00:04:20.430 --> 00:04:21.670
The difference here is what?

54
00:04:26.510 --> 00:04:27.505
What are we returning here?

55
00:04:27.505 --> 00:04:31.571
&gt;&gt; [INAUDIBLE]
&gt;&gt; Bianca Gandolfo: An object with two

56
00:04:31.571 --> 00:04:32.423
functions in it.

57
00:04:36.261 --> 00:04:39.905
&gt;&gt; Bianca Gandolfo: So
this one is our count clues function.

58
00:04:42.208 --> 00:04:46.270
&gt;&gt; Bianca Gandolfo: And then we can say,
counter equals count clues.

59
00:04:46.270 --> 00:04:51.158
And now we can see our counter,
is an object with a property count,

60
00:04:51.158 --> 00:04:52.917
that holds a function.

61
00:04:52.917 --> 00:04:56.760
And a property reset,
that also holds a function, right.

62
00:04:56.760 --> 00:04:59.580
So the count will increment
the counter by one.

63
00:04:59.580 --> 00:05:01.790
And the reset will just set into zero.

64
00:05:03.050 --> 00:05:07.240
So we can do multiple counters,
again, for the same reason because,

65
00:05:08.340 --> 00:05:13.140
when I initialize this execution context,
it's gonna be separate than the first one.

66
00:05:15.020 --> 00:05:20.160
So, now we can say counter.count, we're
gonna call it because it's a function.

67
00:05:20.160 --> 00:05:23.140
And we can just keep
counting all those clues and

68
00:05:23.140 --> 00:05:26.870
then reset it when we wanna start over.

69
00:05:26.870 --> 00:05:31.615
And then counter2.count,

70
00:05:31.615 --> 00:05:37.696
then counter.count, is separate.

71
00:05:43.889 --> 00:05:48.212
&gt;&gt; Bianca Gandolfo: Well, it's misleading
because they're around the same number

72
00:05:48.212 --> 00:05:48.768
[LAUGH].

73
00:05:51.648 --> 00:05:53.703
&gt;&gt; Bianca Gandolfo: There, okay?

74
00:05:55.621 --> 00:05:59.794
&gt;&gt; Bianca Gandolfo: And again, how that
works is when we call this count function,

75
00:05:59.794 --> 00:06:02.490
it retains access to this parent scope.

76
00:06:04.880 --> 00:06:09.848
And it's just gonna increment every time.

77
00:06:16.743 --> 00:06:20.519
&gt;&gt; Bianca Gandolfo: Has anyone done these
kinds of things before in their code?

78
00:06:25.974 --> 00:06:29.935
&gt;&gt; Bianca Gandolfo: And here is the ESX
equivalent, if you wanna get fancy.

