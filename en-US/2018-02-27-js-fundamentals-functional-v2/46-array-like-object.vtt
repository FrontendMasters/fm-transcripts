WEBVTT

1
00:00:00.420 --> 00:00:03.423
Great.
So we're gonna talk about the arguments

2
00:00:03.423 --> 00:00:06.030
array like objects a little bit more.

3
00:00:07.360 --> 00:00:10.190
But first,
let's run this code to see what happens.

4
00:00:11.370 --> 00:00:13.210
Who wants to go first?

5
00:00:13.210 --> 00:00:15.640
Someone probably wants to go first
because there's a crazy line here.

6
00:00:17.380 --> 00:00:20.152
So, whoever goes first
doesn't have to do that line.

7
00:00:20.152 --> 00:00:23.620
What's the very first thing that
happens in this code block?

8
00:00:23.620 --> 00:00:29.320
&gt;&gt; So, declare a const variable and
give it a function.

9
00:00:29.320 --> 00:00:29.990
&gt;&gt; Yep.

10
00:00:29.990 --> 00:00:34.485
So, we're creating this
definition somewhere in memory.

11
00:00:34.485 --> 00:00:36.610
Great, which way do you wanna go?

12
00:00:36.610 --> 00:00:37.520
Left or right?

13
00:00:37.520 --> 00:00:39.447
Who do you like better?

14
00:00:39.447 --> 00:00:43.031
&gt;&gt; [LAUGH]
&gt;&gt; Just kidding.

15
00:00:43.031 --> 00:00:44.527
&gt;&gt; I'm gonna go with my guy,

16
00:00:44.527 --> 00:00:46.877
Ben over there
&gt;&gt; We're gonna skip,

17
00:00:46.877 --> 00:00:49.617
okay
&gt;&gt; He is in my fantasy football team

18
00:00:49.617 --> 00:00:50.345
league.

19
00:00:50.345 --> 00:00:53.875
&gt;&gt; [LAUGH]
&gt;&gt; I lost him last time so, yeah.

20
00:00:53.875 --> 00:00:54.561
&gt;&gt; [LAUGH]
&gt;&gt; And just so

21
00:00:54.561 --> 00:00:56.570
you know it's gonna go this way now.

22
00:00:56.570 --> 00:01:00.045
So be prepared,
did you see that then it's gonna go.

23
00:01:00.045 --> 00:01:02.713
[COUGH]
&gt;&gt; So we just jumped over the declarations

24
00:01:02.713 --> 00:01:03.600
all right?

25
00:01:03.600 --> 00:01:05.324
&gt;&gt; Yep so
we jumped over the function body and

26
00:01:05.324 --> 00:01:08.205
now we're-
&gt;&gt; Now we are currently calling

27
00:01:08.205 --> 00:01:13.370
the constructArr function with
the passing the arguments was, it, in.

28
00:01:18.958 --> 00:01:21.150
&gt;&gt; Okay, Dan.

29
00:01:21.150 --> 00:01:22.810
&gt;&gt; The question is what is running next?

30
00:01:22.810 --> 00:01:23.920
&gt;&gt; Yeah, what happens next?

31
00:01:23.920 --> 00:01:28.026
&gt;&gt; [INAUDIBLE] function body [INAUDIBLE]
&gt;&gt; Yep, so

32
00:01:28.026 --> 00:01:29.958
we'll jump into the function body.

33
00:01:32.500 --> 00:01:36.633
And then what happens.

34
00:01:36.633 --> 00:01:40.971
&gt;&gt; Variables declared [INAUDIBLE]
&gt;&gt; Yep,

35
00:01:40.971 --> 00:01:45.370
we declare a variable arr and
we assign it to something crazy.

36
00:01:45.370 --> 00:01:48.520
Brian, do you want to take
a stab at what's happening.

37
00:01:48.520 --> 00:01:55.147
&gt;&gt; So you assign it to the arguments

38
00:01:55.147 --> 00:02:01.779
that were called was, it, in.

39
00:02:01.779 --> 00:02:08.308
But prototype slice, when you could
create a slice of an array somehow but

40
00:02:08.308 --> 00:02:13.902
I'm not really sure what
mechanically happens with that one.

41
00:02:13.902 --> 00:02:15.103
&gt;&gt; Yeah.

42
00:02:15.103 --> 00:02:15.860
A little bit crazy.

43
00:02:15.860 --> 00:02:22.000
What this does is it will take an array
like object and turn it into an array.

44
00:02:24.510 --> 00:02:31.127
So basically,
what it's doing is it referencing

45
00:02:31.127 --> 00:02:36.797
the slice method that
comes with arrays and

46
00:02:36.797 --> 00:02:41.366
passing it that, it's passing it

47
00:02:41.366 --> 00:02:47.193
the argument pseudo
array as the context and

48
00:02:47.193 --> 00:02:52.863
as a result of that,
it turns an object like

49
00:02:52.863 --> 00:02:58.394
an array like object into an array array.

50
00:03:00.511 --> 00:03:01.762
If that makes sense.

51
00:03:01.762 --> 00:03:04.900
You don't have to understand
what this stuff is doing.

52
00:03:06.040 --> 00:03:11.636
Just know that this craziness is gonna
turn this arguments object into an array.

53
00:03:11.636 --> 00:03:15.312
Yeah, cool.

54
00:03:15.312 --> 00:03:20.154
And then-
&gt;&gt; Is this the canonical way of

55
00:03:20.154 --> 00:03:23.340
doing that,
of taking that pseudo arguments array?

56
00:03:24.790 --> 00:03:25.913
&gt;&gt; Has anyone done it a different way?

57
00:03:29.070 --> 00:03:30.792
Yeah, this is the way I've always done it.

58
00:03:34.518 --> 00:03:38.630
Okay, so array is now an array
that looks like what?

59
00:03:38.630 --> 00:03:45.190
Let's just [INAUDIBLE] It's not
how it's supposed to work, okay.

60
00:03:46.570 --> 00:03:51.290
So what does arr look like at this point,
Jenny?

61
00:03:52.980 --> 00:03:54.350
You gonna write it out for us.

62
00:03:54.350 --> 00:03:55.850
&gt;&gt; What does it look like at this point?

63
00:03:55.850 --> 00:03:57.508
&gt;&gt; I don't know what to say right now.

64
00:03:57.508 --> 00:03:58.210
[LAUGH]
&gt;&gt; Sure.

65
00:03:58.210 --> 00:04:02.140
So, do you remember what
happened here in this craziness?

66
00:04:04.600 --> 00:04:10.682
&gt;&gt; Yeah, so it took the string looking
array and turned it into an array.

67
00:04:10.682 --> 00:04:14.130
&gt;&gt; Yeah, and so
what does that array look like?

68
00:04:14.130 --> 00:04:15.510
&gt;&gt; So it's got the brackets.

69
00:04:15.510 --> 00:04:19.800
And then was, it, in.

70
00:04:20.890 --> 00:04:22.860
You have separate pieces of there in.

71
00:04:22.860 --> 00:04:23.360
&gt;&gt; Yep.

72
00:04:25.480 --> 00:04:27.780
Exactly, cool.

73
00:04:29.010 --> 00:04:32.630
And then, Josh, what happens next?

74
00:04:32.630 --> 00:04:34.729
&gt;&gt; Push the billiards
room onto that array.

75
00:04:36.020 --> 00:04:36.960
&gt;&gt; Yeah.

76
00:04:36.960 --> 00:04:38.690
&gt;&gt; Push to the end.

77
00:04:38.690 --> 00:04:39.829
&gt;&gt; What's that?
&gt;&gt; Push it to the end.

78
00:04:39.829 --> 00:04:44.721
&gt;&gt; Yeah, so
now we have an array that looks like this.

79
00:04:47.051 --> 00:04:48.614
The billiards room.

80
00:04:52.334 --> 00:04:55.223
And then what are we gonna return?

81
00:04:58.530 --> 00:05:03.650
&gt;&gt; You do some manipulation
with the join array.

82
00:05:07.210 --> 00:05:11.387
&gt;&gt; So the join method is a native array
method that's going to take all of

83
00:05:11.387 --> 00:05:15.220
the indices and join it with
whatever character you give here.

84
00:05:15.220 --> 00:05:16.380
So I just put a space.

85
00:05:16.380 --> 00:05:19.200
So it's gonna join it with the space.

86
00:05:19.200 --> 00:05:24.095
So it'll say was it in the billiards room?

87
00:05:27.235 --> 00:05:31.465
So that's what we just did.

88
00:05:31.465 --> 00:05:34.740
How do we feel about that, it makes sense?

89
00:05:34.740 --> 00:05:36.900
Any questions about anything in there?

90
00:05:38.070 --> 00:05:39.720
&gt;&gt; Is it returning a string?

91
00:05:39.720 --> 00:05:40.220
&gt;&gt; Yep.

