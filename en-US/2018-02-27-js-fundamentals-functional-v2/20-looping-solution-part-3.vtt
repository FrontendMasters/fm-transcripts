WEBVTT

1
00:00:00.510 --> 00:00:02.370
&gt;&gt; Bianca Gandolfo: How'd it go, guys?

2
00:00:02.370 --> 00:00:05.120
&gt;&gt; Speaker 2: I think I just don't
understand exactly what you're

3
00:00:05.120 --> 00:00:05.710
looking for?

4
00:00:08.460 --> 00:00:09.380
&gt;&gt; Bianca Gandolfo: Mm, I hear you.

5
00:00:09.380 --> 00:00:12.880
&gt;&gt; Speaker 3: Were you trying
to get the actual color strings,

6
00:00:13.950 --> 00:00:16.640
not the suspect objects?

7
00:00:16.640 --> 00:00:18.880
&gt;&gt; Bianca Gandolfo: Right, yeah.

8
00:00:18.880 --> 00:00:20.330
&gt;&gt; Speaker 4: No.

9
00:00:20.330 --> 00:00:24.340
&gt;&gt; Bianca Gandolfo: So,
let me rewrite this exercise.

10
00:00:24.340 --> 00:00:29.490
So destructure this nested data
structure into two variables.

11
00:00:29.490 --> 00:00:31.210
One variable should have the string red,

12
00:00:31.210 --> 00:00:33.540
and the next variable should
have the string orange.

13
00:00:34.640 --> 00:00:35.420
Did anyone do that?

14
00:00:37.240 --> 00:00:39.030
&gt;&gt; Speaker 3: I think so.
&gt;&gt; Bianca Gandolfo: You think so.

15
00:00:39.030 --> 00:00:41.249
&gt;&gt; Speaker 3: Yeah.
&gt;&gt; Bianca Gandolfo: No worries, all right.

16
00:00:45.459 --> 00:00:46.315
&gt;&gt; Bianca Gandolfo: Should we try it out?

17
00:00:57.509 --> 00:00:58.850
&gt;&gt; Bianca Gandolfo: So take a stab.

18
00:00:58.850 --> 00:01:01.006
&gt;&gt; Speaker 3: So
what I did is, I did const.

19
00:01:01.006 --> 00:01:03.018
&gt;&gt; Bianca Gandolfo: Okay.

20
00:01:03.018 --> 00:01:06.403
&gt;&gt; Speaker 3: FirstColor =

21
00:01:06.403 --> 00:01:14.020
game.suspects]0 .color,

22
00:01:14.020 --> 00:01:20.224
and then the same thing for

23
00:01:20.224 --> 00:01:25.520
the second color
&gt;&gt; Bianca Gandolfo: Got it.

24
00:01:25.520 --> 00:01:28.360
&gt;&gt; Speaker 3: But
just change the 0 to a 1.

25
00:01:28.360 --> 00:01:33.500
&gt;&gt; Bianca Gandolfo: Got it, ok so
you're just using the bracket notation.

26
00:01:33.500 --> 00:01:38.679
Ok, so this is the task,
but let's do this task With

27
00:01:38.679 --> 00:01:43.980
destructuring, which saves
us from writing this.

28
00:01:45.520 --> 00:01:46.400
Did anyone get there?

29
00:01:48.050 --> 00:01:48.890
You did?
&gt;&gt; Speaker 3: I think so.

30
00:01:50.120 --> 00:01:51.820
&gt;&gt; Bianca Gandolfo: Let's
see what you got.

31
00:01:51.820 --> 00:01:54.476
So var[color1,

32
00:01:54.476 --> 00:02:00.300
color2]
&gt;&gt; Speaker 3: Bracket, not dot.

33
00:02:01.720 --> 00:02:07.070
I'm sorry, the Curly bracket or
square bracket?

34
00:02:07.070 --> 00:02:08.980
Not curly bracket, just square bracket.

35
00:02:08.980 --> 00:02:11.057
&gt;&gt; Bianca Gandolfo: Where, okay, okay.

36
00:02:14.971 --> 00:02:23.545
&gt;&gt; Speaker 3: Equals
open {suspects[0].color,

37
00:02:23.545 --> 00:02:29.838
suspects[1].color} And

38
00:02:29.838 --> 00:02:33.713
with a semicolon.

39
00:02:37.250 --> 00:02:40.490
&gt;&gt; Bianca Gandolfo: Cool, what do you
guys think, is that going to do it?

40
00:02:41.660 --> 00:02:45.561
&gt;&gt; Speaker 5: Yes
&gt;&gt; Speaker 3: But with just normal, not

41
00:02:45.561 --> 00:02:50.060
the curly brackets around the outer, yeah
&gt;&gt; Bianca Gandolfo: Okay,

42
00:02:50.060 --> 00:02:53.019
like this,
cool cause it is in there right.

43
00:02:55.950 --> 00:02:57.530
Alright, did anyone do it a different way?

44
00:03:03.550 --> 00:03:04.050
No?

45
00:03:05.230 --> 00:03:09.974
So there is also this

46
00:03:09.974 --> 00:03:14.723
way, where you do.

47
00:03:32.899 --> 00:03:33.884
&gt;&gt; [INAUDIBLE].

48
00:03:38.960 --> 00:03:41.373
&gt;&gt; Bianca Gandolfo: So
that's another way of doing it.

49
00:03:41.373 --> 00:03:48.872
So then it's assigning
orange to firstColor,

50
00:03:48.872 --> 00:03:52.820
and red to secondColor.

51
00:03:52.820 --> 00:03:55.005
So as you can see there
are a few ways of doing it

52
00:04:03.649 --> 00:04:04.475
&gt;&gt; Bianca Gandolfo: Questions?

53
00:04:12.975 --> 00:04:13.497
&gt;&gt; Bianca Gandolfo: No?

54
00:04:13.497 --> 00:04:15.618
No questions.

55
00:04:15.618 --> 00:04:20.423
&gt;&gt; Speaker 6: Why is the, basically so
the, I see what you just did with

56
00:04:20.423 --> 00:04:25.031
line 16 there,
is you made a variable first color and

57
00:04:25.031 --> 00:04:28.410
that lined up with the color property.

58
00:04:28.410 --> 00:04:31.930
And so, I'm curious then why,

59
00:04:31.930 --> 00:04:37.180
you know, it feels like basically,
or if you're assigning this value to

60
00:04:37.180 --> 00:04:41.290
the variable firstColor,
usually that's on the left.

61
00:04:41.290 --> 00:04:44.470
How did that kinda work
there in you to look for.

62
00:04:44.470 --> 00:04:46.530
&gt;&gt; Bianca Gandolfo: Mm, yeah.
&gt;&gt; Speaker 6: The named property color,

63
00:04:46.530 --> 00:04:48.560
and then gave that value firstColor?

64
00:04:50.280 --> 00:04:53.498
&gt;&gt; Bianca Gandolfo: Yeah, so how it works
under the hood, I'm not quite sure.

65
00:04:57.345 --> 00:05:04.110
&gt;&gt; Bianca Gandolfo: It's just
backwards than what you would expect.

66
00:05:04.110 --> 00:05:08.470
Is it kinda like if you were
to read that in English?

67
00:05:08.470 --> 00:05:10.190
&gt;&gt; Speaker 6: It would say for

68
00:05:10.190 --> 00:05:14.870
the first color property we find,
call that first color, make a variable.

69
00:05:14.870 --> 00:05:20.470
&gt;&gt; Bianca Gandolfo: Which is the first
index of an array, of the array.

70
00:05:20.470 --> 00:05:23.620
&gt;&gt; Speaker 6: And so each index of
the array is with a new kind of object,

71
00:05:23.620 --> 00:05:25.420
like we are doing there with
a color segment, color code.

72
00:05:25.420 --> 00:05:29.957
&gt;&gt; Bianca Gandolfo: Yep, and so if we
wanted to do something a little simpler,

73
00:05:29.957 --> 00:05:31.536
to draw a parallel.

74
00:05:34.702 --> 00:05:41.229
&gt;&gt; Bianca Gandolfo: We could do this
&gt;&gt; Bianca Gandolfo: So

75
00:05:41.229 --> 00:05:46.129
this is similar to, sorry,
actually, I don't need to do that.

76
00:05:55.184 --> 00:05:58.779
&gt;&gt; Bianca Gandolfo: So that's what I did,
and that gives you not just the color, but

77
00:05:58.779 --> 00:06:01.370
the whole object with the name and
the color.

78
00:06:01.370 --> 00:06:07.260
Yeah, but you can see that this is
just specifying a little deeper,

79
00:06:07.260 --> 00:06:08.720
in that nested if structure.

80
00:06:10.320 --> 00:06:16.813
Yeah, it's a little bit of a mind bender
&gt;&gt; Bianca Gandolfo: So

81
00:06:16.813 --> 00:06:22.317
you might be about to go into this then
but, is there a way where we can do that,

82
00:06:22.317 --> 00:06:26.680
without knowing how many
objects we have total?

83
00:06:26.680 --> 00:06:28.280
Like how nested it is?

84
00:06:28.280 --> 00:06:33.500
&gt;&gt; Speaker 6: Well, if were to add
on simple suspects to that list.

85
00:06:33.500 --> 00:06:36.120
&gt;&gt; Speaker 3: Could you repeat
the question, I can't hear you.

86
00:06:37.290 --> 00:06:38.470
&gt;&gt; Speaker 6: Is there a way to do that,

87
00:06:38.470 --> 00:06:40.200
then, without knowing
the number of suspects?

88
00:06:40.200 --> 00:06:43.460
Basically to iterate through
each object on that subjects,

89
00:06:43.460 --> 00:06:46.850
or on that suspects array, excuse me.

90
00:06:47.960 --> 00:06:51.390
&gt;&gt; Bianca Gandolfo: Directly,
in the destructioning notation,

91
00:06:51.390 --> 00:06:52.760
I don't think that you can do that.

92
00:06:52.760 --> 00:06:55.630
I think you can use a spread operator and
turn it into an array,

93
00:06:55.630 --> 00:06:56.530
or something like that.

94
00:06:56.530 --> 00:06:57.830
The remainder,

95
00:06:57.830 --> 00:07:02.180
turn it into an array, but that's
not exactly answering your question.

