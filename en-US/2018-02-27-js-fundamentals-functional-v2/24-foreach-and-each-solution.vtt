WEBVTT

1
00:00:00.570 --> 00:00:04.010
&gt;&gt; Bianca Gandolfo: Let's start
with our underscore, right?

2
00:00:04.010 --> 00:00:05.540
It's an object.

3
00:00:05.540 --> 00:00:13.555
And then we're gonna say _.each,
&gt;&gt; Bianca Gandolfo: = a function.

4
00:00:13.555 --> 00:00:15.680
What does that function take?

5
00:00:15.680 --> 00:00:16.230
Do we remember?

6
00:00:16.230 --> 00:00:21.400
What's the first argument?
&gt;&gt; Speaker 2: A list.

7
00:00:21.400 --> 00:00:22.110
&gt;&gt; Bianca Gandolfo: A list, and

8
00:00:22.110 --> 00:00:25.016
a second one?
&gt;&gt; Speaker 2: Callback function?

9
00:00:25.016 --> 00:00:28.754
&gt;&gt; Bianca Gandolfo: Yeah, awesome,

10
00:00:28.754 --> 00:00:32.350
so I'm just gonna write some
pseudo code out, just so

11
00:00:32.350 --> 00:00:36.540
we can think through it before diving in.

12
00:00:36.540 --> 00:00:39.790
So first, we want to loop through

13
00:00:39.790 --> 00:00:44.299
the list.
&gt;&gt; Bianca Gandolfo: And

14
00:00:44.299 --> 00:00:49.421
then in each loop, I indented it,
because for each loop,

15
00:00:49.421 --> 00:00:53.510
I wanted to call the callback
with a list item.

16
00:00:53.510 --> 00:00:57.974
All right,
&gt;&gt; Bianca Gandolfo: And

17
00:00:57.974 --> 00:01:02.660
then we need to make sure that it
works with both objects in arrays.

18
00:01:03.940 --> 00:01:09.700
And so for objects in arrays,
you should use different loops.

19
00:01:09.700 --> 00:01:13.660
Like we mentioned before, arrays work
well with the for loop, with the i and

20
00:01:13.660 --> 00:01:16.640
the semicolons because of
the numerical indices.

21
00:01:16.640 --> 00:01:19.400
Objects work better with the for n loop.

22
00:01:19.400 --> 00:01:23.440
Where say for var key in obj, that one.

23
00:01:23.440 --> 00:01:26.450
We are gonna check which one's an array.

24
00:01:26.450 --> 00:01:28.822
If it's an array,
we'll loop through it with the other one.

25
00:01:28.822 --> 00:01:34.650
With the loop with the i and
the semicolons, the numerical loop.

26
00:01:34.650 --> 00:01:39.312
And then, if it's an object,
we'll do the for n loop.

27
00:01:39.312 --> 00:01:44.642
Okay.
&gt;&gt; Bianca Gandolfo: How

28
00:01:44.642 --> 00:01:49.604
do we check if something is an array?

29
00:01:49.604 --> 00:01:54.969
&gt;&gt; Speaker 2: If type of list equals

30
00:01:54.969 --> 00:01:59.382
equals array.
&gt;&gt; Bianca Gandolfo: Ooh,

31
00:01:59.382 --> 00:02:01.370
equals, equals.
&gt;&gt; Speaker 2: Yeah,

32
00:02:01.370 --> 00:02:02.040
three.
&gt;&gt; Bianca Gandolfo: Like

33
00:02:02.040 --> 00:02:04.100
this?
&gt;&gt; Speaker 2: No.

34
00:02:04.100 --> 00:02:05.199
Not a string of them.

35
00:02:05.199 --> 00:02:07.030
Wait, is array.

36
00:02:07.030 --> 00:02:08.920
There's a function called is array,

37
00:02:08.920 --> 00:02:10.560
isn't there?
&gt;&gt; Bianca Gandolfo: You're right.

38
00:02:10.560 --> 00:02:11.060
Yeah.

39
00:02:13.060 --> 00:02:19.296
So, remember this was not gonna work.
&gt;&gt; Bianca Gandolfo: Sad face,

40
00:02:19.296 --> 00:02:25.690
this won't work because arrays are objects
that's always gonna return false.

41
00:02:27.150 --> 00:02:31.927
But you're right, we do have this
handy function array.is array,

42
00:02:31.927 --> 00:02:33.380
and we pass a list.

43
00:02:33.380 --> 00:02:35.820
This is gonna return true
if the list is an array.

44
00:02:35.820 --> 00:02:37.680
Great, so we got that.

45
00:02:39.040 --> 00:02:43.478
And then otherwise else we

46
00:02:43.478 --> 00:02:47.930
can loop through object.

47
00:02:47.930 --> 00:02:52.926
Just notes for
ourselves loop through array,

48
00:02:52.926 --> 00:02:57.867
okay.
&gt;&gt; Bianca Gandolfo: Okay,

49
00:02:57.867 --> 00:02:58.897
so we've got that part.

50
00:03:10.766 --> 00:03:12.620
&gt;&gt; Bianca Gandolfo: I forgot
the most important part.

51
00:03:12.620 --> 00:03:17.850
What you should do at the end of
everything is to celebrate, note to self.

52
00:03:17.850 --> 00:03:25.455
Okay, so what's that loop that we
want to use for the arrays again?

53
00:03:25.455 --> 00:03:32.788
Anyone?
&gt;&gt; Speaker 2: For equals 0.

54
00:03:44.077 --> 00:03:44.886
&gt;&gt; Bianca Gandolfo: Okay, so

55
00:03:44.886 --> 00:03:51.610
I'm just saying start at 0, keep looping
until we get to that link.length.

56
00:03:51.610 --> 00:03:55.478
And increment by 1 each time
That's what that means.

57
00:03:55.478 --> 00:03:57.125
Cool.

58
00:03:57.125 --> 00:04:05.791
So now we wanna call a callback.

59
00:04:05.791 --> 00:04:07.330
How do we call a function?

60
00:04:07.330 --> 00:04:10.780
We haven't really talked about that too
much yet, but just refer it by name.

61
00:04:10.780 --> 00:04:12.359
In this case it will be called callback.

62
00:04:13.680 --> 00:04:19.680
And we'll pass it the value from the list,
which we say list.i.

63
00:04:19.680 --> 00:04:22.200
I this is gonna return the value.

64
00:04:23.260 --> 00:04:25.590
And then just the API, or for

65
00:04:25.590 --> 00:04:31.200
the each function it's gonna send the
index, and then it sends the entire list.

66
00:04:31.200 --> 00:04:35.295
That's just how it works.
&gt;&gt; Bianca Gandolfo: Okay.

67
00:04:35.295 --> 00:04:36.397
&gt;&gt; Speaker 2: You said?

68
00:04:36.397 --> 00:04:39.099
&gt;&gt; Bianca Gandolfo: Yeah, sure.

69
00:04:39.099 --> 00:04:42.340
So the expectation for each.

70
00:04:42.340 --> 00:04:46.560
And just be careful, different versions
of each jquery has an each, there's for

71
00:04:46.560 --> 00:04:49.750
each, and then there's underscore-each.

72
00:04:49.750 --> 00:04:54.810
Sometimes these arguments are swapped,
but for underscore each.

73
00:04:54.810 --> 00:05:00.280
It's first gonna be the value,
then the index, and then the list.

74
00:05:02.060 --> 00:05:05.850
So inside of that call back function
you'll have access to a value,

75
00:05:05.850 --> 00:05:08.610
the index and the list, every single time.

76
00:05:08.610 --> 00:05:12.030
Which is handy, because you want this to
be a generic function that can be used

77
00:05:12.030 --> 00:05:12.950
in various contexts.

78
00:05:12.950 --> 00:05:18.350
We don't really know what our future
users are gonna need this for.

79
00:05:18.350 --> 00:05:19.570
So it'll just work and

80
00:05:19.570 --> 00:05:23.024
have all of the data available.
&gt;&gt; Speaker 2: Do we need to define

81
00:05:23.024 --> 00:05:31.492
callback somewhere else, then?
&gt;&gt; Bianca Gandolfo: It's there.

82
00:05:31.492 --> 00:05:34.063
You mean, so we'll get to that actually.

83
00:05:34.063 --> 00:05:35.940
That's a good question.

84
00:05:35.940 --> 00:05:40.079
Before I move on maybe I actually,
will call each so

85
00:05:40.079 --> 00:05:44.816
that we can look at it with some data.
&gt;&gt; Speaker 2: Okay,

86
00:05:44.816 --> 00:05:48.867
right.
&gt;&gt; Bianca Gandolfo: All right,

87
00:05:48.867 --> 00:05:57.576
cool any questions about
how we handled the array?

88
00:05:57.576 --> 00:06:02.593
Before I move on maybe

89
00:06:02.593 --> 00:06:07.889
I actually, will call

90
00:06:07.889 --> 00:06:13.184
each so that we can look

91
00:06:13.184 --> 00:06:18.216
at it with some data.

92
00:06:18.216 --> 00:06:25.422
I don't know.
&gt;&gt; Bianca Gandolfo: Okay,

93
00:06:25.422 --> 00:06:29.480
so we have some names, and then we're
gonna pass in a callback function.

94
00:06:29.480 --> 00:06:36.300
I'm just gonna put an anonymous
function here, because I'm lazy.

95
00:06:36.300 --> 00:06:40.760
That's why and then,
let's see, so name, index.

96
00:06:40.760 --> 00:06:43.260
We'll just worry about the name, index.

97
00:06:43.260 --> 00:06:47.150
And maybe this is an array of brothers and

98
00:06:47.150 --> 00:06:52.200
sisters or maybe animals,
because Porgie would be a really bad name.

99
00:06:52.200 --> 00:06:53.210
Maybe it's a nickname.

100
00:06:53.210 --> 00:06:55.790
Anyway, it's a series of names and

101
00:06:55.790 --> 00:06:59.020
it's in order of oldest to youngest or
something like that.

102
00:06:59.020 --> 00:07:00.500
So there's an order.

103
00:07:00.500 --> 00:07:05.431
So this function is

104
00:07:05.431 --> 00:07:10.669
going to going to say

105
00:07:10.669 --> 00:07:15.908
that name is younger

106
00:07:15.908 --> 00:07:20.223
than name than we

107
00:07:20.223 --> 00:07:25.160
do need this list.

108
00:07:28.080 --> 00:07:34.700
So we can say, if name.

109
00:07:36.710 --> 00:07:39.588
Name, you guys are letting me do some
crazy stuff, you've got to be my linter.

110
00:07:39.588 --> 00:07:43.603
Name, i+1.

111
00:07:43.603 --> 00:07:48.420
So the next one, if there is an i+1,

112
00:07:48.420 --> 00:07:53.414
we'll say that the current
name is younger.

113
00:07:53.414 --> 00:07:59.519
The name i+1 else we are gonna console,

114
00:07:59.519 --> 00:08:04.230
log that name, that won't work

115
00:08:04.230 --> 00:08:09.813
right we want it to variable name it's

116
00:08:09.813 --> 00:08:15.227
the oldest.
&gt;&gt; Speaker 3: Do

117
00:08:15.227 --> 00:08:19.328
we want list i + 1?
&gt;&gt; Bianca Gandolfo: Yes.

118
00:08:31.248 --> 00:08:31.945
&gt;&gt; Bianca Gandolfo: Why is that not

119
00:08:31.945 --> 00:08:32.682
matching?

120
00:08:32.682 --> 00:08:37.520
There's no space.
&gt;&gt; Bianca Gandolfo: Okay.

121
00:08:41.369 --> 00:08:42.125
&gt;&gt; Bianca Gandolfo: All right, so

122
00:08:42.125 --> 00:08:44.920
we understand what's happening?

123
00:08:44.920 --> 00:08:46.410
For each one of these, so

124
00:08:46.410 --> 00:08:51.800
Sally is the youngest, George is in
the middle, Porgie is the oldest.

125
00:08:51.800 --> 00:08:52.829
We're gonna loop through.

126
00:08:54.470 --> 00:08:59.620
We are going to check if,
if there is an item

127
00:08:59.620 --> 00:09:03.770
after the current index,

128
00:09:05.390 --> 00:09:11.350
we gonna cancel log that Sally
is younger than Georgie, yeah.

129
00:09:12.740 --> 00:09:18.860
And then if there isn't one then
we'll say Porgie is the oldest, okay?

130
00:09:20.440 --> 00:09:23.430
So now let's take a look.

131
00:09:23.430 --> 00:09:29.160
So this is us using the function.

132
00:09:29.160 --> 00:09:30.430
Now let's look at the internals.

133
00:09:30.430 --> 00:09:32.620
This is the part as the user
we don't think about,

134
00:09:32.620 --> 00:09:36.730
we just trust is gonna do what it's gonna
do and then like see what it does and

135
00:09:36.730 --> 00:09:38.760
if it does the right thing we're happy.

136
00:09:38.760 --> 00:09:41.850
If it doesn't, then we kind of fit all and
hope for the best.

137
00:09:41.850 --> 00:09:43.870
I don't know, that's my strategy.

138
00:09:46.220 --> 00:09:47.280
It's not very effective.

139
00:09:48.770 --> 00:09:51.810
So let's think critically about this.

140
00:09:52.830 --> 00:09:57.100
So list is what?
&gt;&gt; Speaker 2: The array.

141
00:09:57.100 --> 00:09:57.652
&gt;&gt; Bianca Gandolfo: Yap, this is

142
00:09:57.652 --> 00:09:58.560
the array.

143
00:09:58.560 --> 00:09:59.260
Callback is what?

144
00:10:01.950 --> 00:10:02.864
&gt;&gt; Speaker 2: Function.
&gt;&gt; Bianca Gandolfo: Yeah,

145
00:10:02.864 --> 00:10:03.830
this entire function.

146
00:10:03.830 --> 00:10:05.920
Okay, keep that in mind.

147
00:10:05.920 --> 00:10:06.568
It's important.

148
00:10:06.568 --> 00:10:10.988
So, if array.isArray list,

149
00:10:10.988 --> 00:10:15.590
what does that evaluate to?

150
00:10:15.590 --> 00:10:16.380
Graceware crew.

151
00:10:18.010 --> 00:10:18.690
Anyone over there?

152
00:10:18.690 --> 00:10:24.290
Is this gonna be true or false?

153
00:10:27.890 --> 00:10:29.330
You can join in too.

154
00:10:29.330 --> 00:10:30.870
True, yeah.

155
00:10:30.870 --> 00:10:31.898
So this will be true.

156
00:10:31.898 --> 00:10:36.410
And so we'll hoop into this block here,

157
00:10:38.250 --> 00:10:43.120
so we'll look through the length and
the list and

158
00:10:43.120 --> 00:10:47.920
we're gonna call this
function with three things.

159
00:10:47.920 --> 00:10:50.390
The first one it's the value, list dot i.

160
00:10:50.390 --> 00:10:56.640
So the very first loop, i equals what?
&gt;&gt; Speaker 2: Zero.

161
00:10:56.640 --> 00:10:58.380
&gt;&gt; Bianca Gandolfo: Zero, and so

162
00:10:58.380 --> 00:11:00.440
a list at zero is what?
&gt;&gt; Speaker 2: Sally.

163
00:11:02.800 --> 00:11:03.660
&gt;&gt; Bianca Gandolfo: Sally, yep.

164
00:11:06.010 --> 00:11:08.997
What's i again?
&gt;&gt; Speaker 2: Zero.

165
00:11:08.997 --> 00:11:09.777
&gt;&gt; Bianca Gandolfo: Zero,

166
00:11:09.777 --> 00:11:12.906
and what's the list again?

167
00:11:12.906 --> 00:11:16.418
Graceware crew?
&gt;&gt; Speaker 2: The array.

168
00:11:16.418 --> 00:11:17.590
&gt;&gt; Bianca Gandolfo: Awesome.

169
00:11:17.590 --> 00:11:23.320
So we have this, and
it's gonna line up with this.

170
00:11:23.320 --> 00:11:28.370
So list that i is Sally is going to be
name, i is zero, and list is the list.

171
00:11:29.390 --> 00:11:30.720
Following?

172
00:11:30.720 --> 00:11:32.980
They kinda had to snake through it.

173
00:11:32.980 --> 00:11:34.880
So we're gonna hoop in.

174
00:11:34.880 --> 00:11:39.090
I'm gonna write us a note
here that we have Sally and

175
00:11:39.090 --> 00:11:40.460
we have zero, just so we know.

176
00:11:43.440 --> 00:11:49.260
So the list at i is zero.

177
00:11:49.260 --> 00:11:52.240
Plus one equals one.

178
00:11:53.590 --> 00:12:00.904
That is going to be what true or false?
&gt;&gt; Speaker 2: True.

179
00:12:00.904 --> 00:12:02.234
&gt;&gt; Bianca Gandolfo: It's gonna be Georgie,

180
00:12:02.234 --> 00:12:03.950
which will be true, it exists.

181
00:12:05.160 --> 00:12:06.960
This will be true, and

182
00:12:06.960 --> 00:12:12.200
then we'll console log that-
&gt;&gt; Speaker 2: Sally.

183
00:12:12.200 --> 00:12:12.830
&gt;&gt; Bianca Gandolfo: Sally.

184
00:12:15.818 --> 00:12:18.261
&gt;&gt; Sally: Is younger than.

185
00:12:18.261 --> 00:12:19.528
&gt;&gt; Bianca Gandolfo: Anyone?

186
00:12:19.528 --> 00:12:23.190
&gt;&gt; Sally: Than Georgie.

187
00:12:23.190 --> 00:12:24.540
&gt;&gt; Bianca Gandolfo: Yeah, we got it?

188
00:12:24.540 --> 00:12:27.720
Cool.
And then it would do that for each one.

189
00:12:27.720 --> 00:12:29.370
So it would do the same thing for Georgie.

190
00:12:29.370 --> 00:12:31.090
I'm not gonna go through it all.

191
00:12:31.090 --> 00:12:34.020
Unless, would you like me to go
through it one more time to review or

192
00:12:34.020 --> 00:12:36.209
do we think we feel
solid in how this works?

193
00:12:38.370 --> 00:12:45.186
So one more time,
solid don't do it, okay cool.

194
00:12:45.186 --> 00:12:47.526
Awesome, now.

195
00:12:55.095 --> 00:12:58.176
&gt;&gt; Speaker 2: So do you list one there?
&gt;&gt; Bianca Gandolfo: Yeah.

196
00:13:02.144 --> 00:13:02.848
&gt;&gt; Bianca Gandolfo: All right.

197
00:13:09.558 --> 00:13:10.920
&gt;&gt; Bianca Gandolfo: Who here finished

198
00:13:10.920 --> 00:13:13.120
the underscore each?

199
00:13:13.120 --> 00:13:15.120
You did it for one?

200
00:13:15.120 --> 00:13:18.503
No, okay.
&gt;&gt; Bianca Gandolfo: We don't

201
00:13:18.503 --> 00:13:19.620
really have time.

202
00:13:19.620 --> 00:13:24.070
I would really like to challenge you
guys to do the object part, but for

203
00:13:24.070 --> 00:13:28.860
the sake of time, for those of you who
are watching, if you only did one,

204
00:13:28.860 --> 00:13:30.910
I would say pause and come back.

205
00:13:30.910 --> 00:13:34.920
But I'll just do it, because of time.

206
00:13:34.920 --> 00:13:37.040
So else, we're just gonna loop through.

207
00:13:37.040 --> 00:13:38.370
We're gonna assume.

208
00:13:38.370 --> 00:13:42.100
Otherwise, this is an object, and
we want it to work the same for an object.

209
00:13:42.100 --> 00:13:46.321
That's a nice thing about underscore
versus native array for each,

210
00:13:46.321 --> 00:13:49.244
is that you don't have
to course into an array.

211
00:13:49.244 --> 00:13:53.352
We'll see later on some tricky
things that look like arrays, but

212
00:13:53.352 --> 00:13:55.088
they're really objects.

213
00:13:55.088 --> 00:14:03.175
So.
&gt;&gt; Bianca Gandolfo: So

214
00:14:03.175 --> 00:14:07.150
we're going to say callback,
how do we get the item?

215
00:14:12.190 --> 00:14:13.660
List bracket key.

216
00:14:14.960 --> 00:14:15.869
Why is it brackets?

217
00:14:17.510 --> 00:14:19.450
You guys know?
&gt;&gt; Sally: Because it's non

218
00:14:19.450 --> 00:14:20.770
numeric?
&gt;&gt; Bianca Gandolfo: Because it's

219
00:14:20.770 --> 00:14:22.040
a variable.

220
00:14:22.040 --> 00:14:22.540
Yeah.

221
00:14:23.690 --> 00:14:25.760
Also, non numeric but
we would have to do that.

222
00:14:28.050 --> 00:14:28.550
Core dot.

223
00:14:30.090 --> 00:14:37.590
And then how do we get the index?
&gt;&gt; Bianca Gandolfo: I say ended,

224
00:14:37.590 --> 00:14:39.350
because it's not right.
&gt;&gt; Speaker 2: Key?

225
00:14:39.350 --> 00:14:40.860
Is it just key?
&gt;&gt; Bianca Gandolfo: Yeah, just key.

226
00:14:40.860 --> 00:14:48.942
And that's gonna be the property name.
&gt;&gt; Bianca Gandolfo: Cool.

227
00:14:48.942 --> 00:14:57.969
There you have it.
&gt;&gt; Bianca Gandolfo: Questions?

228
00:15:01.115 --> 00:15:02.369
&gt;&gt; Bianca Gandolfo: So do you think if I

229
00:15:02.369 --> 00:15:07.892
asked you to implement this, we raised
it and you needed to re-implement it,

230
00:15:07.892 --> 00:15:14.220
do you feel like you could re-implement
now that you've seen how it works?

231
00:15:14.220 --> 00:15:18.670
Or do you think maybe you're
still a little stuck.

232
00:15:18.670 --> 00:15:20.770
You can be honest.

233
00:15:20.770 --> 00:15:23.470
I'm just curious if this got you there.

234
00:15:23.470 --> 00:15:24.946
Or if some people need more.

235
00:15:24.946 --> 00:15:27.220
I'm not gonna go into more right now,
cuz I don't have time, but

236
00:15:27.220 --> 00:15:29.920
I'm just wondering what
the temperature is.

237
00:15:29.920 --> 00:15:34.490
The temperature is, I'm there,
almost there, not quite.

238
00:15:34.490 --> 00:15:35.770
Okay, we have some almost, okay.

239
00:15:37.190 --> 00:15:41.280
Well, lucky you, because we're gonna
do something really similar with map.

240
00:15:41.280 --> 00:15:42.240
You guys familiar with map?

241
00:15:43.430 --> 00:15:43.930
Sweet.

