WEBVTT

1
00:00:00.230 --> 00:00:05.900
&gt;&gt; Bianca Gandolfo: So, our task is to
get through this data structure however

2
00:00:05.900 --> 00:00:13.240
creatively we want, and figure out
which room our suspects were not in.

3
00:00:13.240 --> 00:00:18.190
So for example, Miss Scarlet on
the night she was in the conservatory,

4
00:00:18.190 --> 00:00:21.010
Reverend Green, he was in the kitchen.

5
00:00:21.010 --> 00:00:26.093
Colonel Mustard was in the billiards room,
etc.

6
00:00:26.093 --> 00:00:29.240
So we wanna find out whose was not.

7
00:00:29.240 --> 00:00:31.300
Which room no one was in?

8
00:00:32.550 --> 00:00:34.120
&gt;&gt; Speaker 2: But
we only need the room, right?

9
00:00:34.120 --> 00:00:35.370
&gt;&gt; Bianca Gandolfo: What?
&gt;&gt; Speaker 2: We only need the room?

10
00:00:35.370 --> 00:00:36.110
&gt;&gt; Bianca Gandolfo: Just the room.

11
00:00:36.110 --> 00:00:37.580
&gt;&gt; Speaker 2: Okay.
&gt;&gt; Bianca Gandolfo: Yeah,

12
00:00:37.580 --> 00:00:40.086
cuz if no one was in there then,
do you know what I mean?

13
00:00:40.086 --> 00:00:42.950
Yeah awesome.

14
00:00:47.520 --> 00:00:50.850
&gt;&gt; Bianca Gandolfo: So,
they have our data structure here.

15
00:00:50.850 --> 00:00:55.458
Let's get in JavaScript and

16
00:00:55.458 --> 00:00:58.918
also in JavaScript.

17
00:01:01.120 --> 00:01:02.422
&gt;&gt; Bianca Gandolfo: So.

18
00:01:06.220 --> 00:01:07.701
&gt;&gt; Bianca Gandolfo: How'd
you guys attempt it?

19
00:01:12.729 --> 00:01:13.809
&gt;&gt; Bianca Gandolfo: Anyone attempt it?

20
00:01:13.809 --> 00:01:15.392
&gt;&gt; Speaker 3: [INAUDIBLE] [CROSSTALK]
&gt;&gt; Bianca Gandolfo: What?

21
00:01:15.392 --> 00:01:18.874
&gt;&gt; Speaker 3: I started by
created a variable dining room.

22
00:01:18.874 --> 00:01:19.650
&gt;&gt; Bianca Gandolfo: Okay.

23
00:01:19.650 --> 00:01:21.505
&gt;&gt; Speaker 3: And tried using reduce.

24
00:01:21.505 --> 00:01:22.451
&gt;&gt; Bianca Gandolfo: Mm-hm.

25
00:01:29.923 --> 00:01:33.779
&gt;&gt; Bianca Gandolfo: So
we have some notInRoom = function perhaps.

26
00:01:33.779 --> 00:01:37.309
Maybe we wanna make this fancy.

27
00:01:40.250 --> 00:01:43.111
&gt;&gt; Bianca Gandolfo: Okay,
and then maybe reduce.

28
00:01:46.132 --> 00:01:47.740
&gt;&gt; Bianca Gandolfo: Okay.

29
00:01:49.149 --> 00:01:51.461
&gt;&gt; Bianca Gandolfo: So for
our list, probably for reduce,

30
00:01:51.461 --> 00:01:53.502
if we we wanna do newDevelopment.

31
00:01:55.817 --> 00:01:59.035
&gt;&gt; Bianca Gandolfo: And
maybe notInRoom is our callback.

32
00:02:01.986 --> 00:02:06.847
&gt;&gt; Bianca Gandolfo: And so
what we wanna take from this, is what?

33
00:02:11.881 --> 00:02:14.780
&gt;&gt; Bianca Gandolfo: What
do we wanted to return?

34
00:02:14.780 --> 00:02:17.822
We wanted to return may
be in a ray of rooms.

35
00:02:20.879 --> 00:02:22.372
&gt;&gt; Bianca Gandolfo: Living room.

36
00:02:25.867 --> 00:02:28.540
&gt;&gt; Bianca Gandolfo: Bathroom or
something like that.

37
00:02:28.540 --> 00:02:31.982
Seems reasonable, so
we wanted to return an array.

38
00:02:33.855 --> 00:02:35.106
&gt;&gt; Bianca Gandolfo: And then.

39
00:02:37.882 --> 00:02:39.709
&gt;&gt; Bianca Gandolfo: So
if we wanted to return an array,

40
00:02:39.709 --> 00:02:43.000
we should start with an initial
value of an empty array.

41
00:02:43.000 --> 00:02:44.843
That's a trick.

42
00:02:46.968 --> 00:02:51.812
&gt;&gt; Bianca Gandolfo: And,
we wanna make sure that we wanna

43
00:02:51.812 --> 00:02:55.573
push that value to our memo.

44
00:03:00.306 --> 00:03:04.928
&gt;&gt; Bianca Gandolfo: .push, whatever
it is that we are gonna push, okay?

45
00:03:14.888 --> 00:03:19.851
&gt;&gt; Bianca Gandolfo: So whatÂ´s this
first thing, maybe like the room?

46
00:03:19.851 --> 00:03:21.015
&gt;&gt; Speaker 4: Rooms.

47
00:03:21.015 --> 00:03:24.272
&gt;&gt; Bianca Gandolfo: Good catch, rooms.

48
00:03:25.800 --> 00:03:26.300
So.

49
00:03:31.616 --> 00:03:37.510
&gt;&gt; Bianca Gandolfo: Really,
this is going to be the suspect.

50
00:03:39.690 --> 00:03:43.010
And then we have to get
into suspect.rooms.

51
00:03:43.010 --> 00:03:46.310
Right, because reduce is just
gonna leap through the top level.

52
00:03:48.050 --> 00:03:51.630
And so the first object in or
top level is a suspect.

53
00:03:52.850 --> 00:03:55.390
So if we wanna get to the rooms,
we have to reference it like this.

54
00:03:55.390 --> 00:03:56.870
suspect.rooms.

55
00:03:58.730 --> 00:04:05.980
And then we eventually wanna push
the room where like, they're not there.

56
00:04:05.980 --> 00:04:08.349
None was there, something like that.

57
00:04:08.349 --> 00:04:10.435
Okay?

58
00:04:14.670 --> 00:04:18.375
&gt;&gt; Bianca Gandolfo: All right,
so what do we have to do next?

59
00:04:23.525 --> 00:04:27.730
&gt;&gt; Speaker 5: The way I did it or tried
to do it was just take all of the room's

60
00:04:27.730 --> 00:04:30.630
arrays, and then concat them together.

61
00:04:30.630 --> 00:04:32.850
&gt;&gt; Bianca Gandolfo: And then loop and see?

62
00:04:32.850 --> 00:04:36.850
&gt;&gt; Speaker 5: But
you'd have a key in object.

63
00:04:36.850 --> 00:04:39.279
No, you'd have a pair for each entry.

64
00:04:39.279 --> 00:04:46.538
It would be either room and
then true or false.

65
00:04:48.291 --> 00:04:52.072
&gt;&gt; Bianca Gandolfo: So if the data
structure you're created look like what,

66
00:04:52.072 --> 00:04:53.263
it was an object?

67
00:04:53.263 --> 00:04:57.967
&gt;&gt; Speaker 5: So it would be like, I was
in array of objects that had room and

68
00:04:57.967 --> 00:05:00.286
then boolean for each entry.

69
00:05:00.286 --> 00:05:00.940
&gt;&gt; Bianca Gandolfo: Got it.

70
00:05:00.940 --> 00:05:01.958
So it would be like.

71
00:05:04.703 --> 00:05:07.178
&gt;&gt; Bianca Gandolfo: 'billiards-room',
like that?

72
00:05:07.178 --> 00:05:08.061
&gt;&gt; Speaker 5: Yeah.

73
00:05:08.061 --> 00:05:09.310
&gt;&gt; Bianca Gandolfo: Okay.

74
00:05:09.310 --> 00:05:12.430
&gt;&gt; Speaker 5: But I don't think that's.

75
00:05:12.430 --> 00:05:16.899
&gt;&gt; Bianca Gandolfo: And it would
return true if it is not in the room.

76
00:05:18.370 --> 00:05:21.063
So no one was in the billiards
room it would be true,

77
00:05:21.063 --> 00:05:22.764
is that what you were thinking?

78
00:05:22.764 --> 00:05:26.279
&gt;&gt; Speaker 6: Well I was gonna start
with just putting all the arrays in to

79
00:05:26.279 --> 00:05:30.610
get it out of the, actually there's
no point in doing that never mind.

80
00:05:30.610 --> 00:05:31.706
[INAUDIBLE] and reduce it?

81
00:05:31.706 --> 00:05:33.520
[CROSSTALK]
&gt;&gt; Bianca Gandolfo: You would have

82
00:05:33.520 --> 00:05:35.460
an array of, like this?

83
00:05:35.460 --> 00:05:36.780
&gt;&gt; Speaker 6: Yeah.

84
00:05:36.780 --> 00:05:37.543
&gt;&gt; Bianca Gandolfo: Yeah.

85
00:05:37.543 --> 00:05:40.748
Okay, so that's another thing
we could do is we could, and

86
00:05:40.748 --> 00:05:42.360
then you can reduce this too.

87
00:05:42.360 --> 00:05:46.420
&gt;&gt; Speaker 6: That was
[INAUDIBLE] to reduce twice.

88
00:05:46.420 --> 00:05:47.194
&gt;&gt; Bianca Gandolfo: What's that?

89
00:05:47.194 --> 00:05:50.160
&gt;&gt; Speaker 6: You might not need to reduce
twice and that's a second level thing, so.

90
00:05:51.180 --> 00:05:52.770
&gt;&gt; Bianca Gandolfo: Yeah,
we're gonna have to loop,

91
00:05:54.520 --> 00:05:56.120
I think we will have to reduce twice.

92
00:05:56.120 --> 00:05:59.450
So do some sort of reduce
like functionality,

93
00:06:00.610 --> 00:06:06.250
because we need to figure
out which ones are false

94
00:06:07.730 --> 00:06:13.090
here, and come up with a list
of all of the false ones.

95
00:06:13.090 --> 00:06:15.350
And then we need to do it for all of them.

96
00:06:15.350 --> 00:06:18.060
And then we need to do it
across all of the suspects.

97
00:06:18.060 --> 00:06:21.124
So it's kind of a two dimensional thing.

98
00:06:24.325 --> 00:06:25.655
&gt;&gt; Bianca Gandolfo: Okay.

99
00:06:30.810 --> 00:06:32.750
&gt;&gt; Bianca Gandolfo: All right,
so where were we?

100
00:06:32.750 --> 00:06:34.392
So we have two approaches.

101
00:06:36.111 --> 00:06:41.925
&gt;&gt; Bianca Gandolfo: We can reduce this
array after we create this data structure.

102
00:06:45.190 --> 00:06:49.312
&gt;&gt; Bianca Gandolfo: Or
we can try all do it in one go.

103
00:06:54.539 --> 00:06:56.329
&gt;&gt; Bianca Gandolfo: Which
would be something like.

104
00:07:05.094 --> 00:07:13.345
&gt;&gt; Bianca Gandolfo: Do you
guys see what I'm doing?

105
00:07:13.345 --> 00:07:18.710
So what we wanna do in this reduce,
is we want to return an array

106
00:07:18.710 --> 00:07:22.780
of all of the falses.

107
00:07:23.940 --> 00:07:29.079
So for example, for Miss Scarlet,

108
00:07:29.079 --> 00:07:34.390
we wanna return the billiards room,

109
00:07:34.390 --> 00:07:38.860
the ballroom and the kitchen.

110
00:07:43.273 --> 00:07:47.721
&gt;&gt; Bianca Gandolfo: And
then we wanna reduce it again, from.

111
00:07:51.610 --> 00:07:56.787
&gt;&gt; Bianca Gandolfo: So eventually,
let's see so we'll have our.

112
00:07:58.489 --> 00:08:01.130
&gt;&gt; Bianca Gandolfo: For
each suspect we're gonna get an array.

113
00:08:04.580 --> 00:08:08.690
And then we need to flatten that array,
no, and

114
00:08:10.250 --> 00:08:19.270
then we need to make a opposite unique.

115
00:08:19.270 --> 00:08:21.959
So, if there's a duplicate
we need to remove it.

116
00:08:23.100 --> 00:08:23.940
Does that make sense?

117
00:08:25.030 --> 00:08:29.505
So the first time we
reduce it we're gonna get.

118
00:08:36.471 --> 00:08:37.490
&gt;&gt; Bianca Gandolfo: Kitchen.

119
00:08:40.466 --> 00:08:41.239
&gt;&gt; Bianca Gandolfo: Ballroom.

120
00:08:46.578 --> 00:08:49.292
&gt;&gt; Bianca Gandolfo: And billiard room.

121
00:08:52.441 --> 00:08:56.476
&gt;&gt; Bianca Gandolfo: Okay, for Ms. Scarlet.

122
00:08:56.476 --> 00:09:01.095
And then the next person,
it's gonna be something like this.

123
00:09:05.105 --> 00:09:07.412
&gt;&gt; Bianca Gandolfo: Ballroom,
conservatory,

124
00:09:07.412 --> 00:09:10.590
dining room there's some more rooms.

125
00:09:11.690 --> 00:09:13.950
Okay let's just say

126
00:09:23.836 --> 00:09:26.730
&gt;&gt; Bianca Gandolfo: So
when we reduce these two.

127
00:09:26.730 --> 00:09:32.260
Well, what we really want to do,

128
00:09:32.260 --> 00:09:38.400
is compare between these two data
structures and see, we want.

129
00:09:38.400 --> 00:09:41.129
So, if these two are shared,
we want to keep it.

130
00:09:43.260 --> 00:09:46.840
If this one's not shared, we don't
want to keep it, because that means

131
00:09:46.840 --> 00:09:50.480
that this person, Reverend Green,
had been in the billiards room.

132
00:09:54.110 --> 00:09:56.200
Can I add thumbs, I guess falling?

133
00:09:56.200 --> 00:10:03.516
Okay, so
&gt;&gt; Bianca Gandolfo: Getting

134
00:10:03.516 --> 00:10:07.483
from here
&gt;&gt; Bianca Gandolfo: We need

135
00:10:07.483 --> 00:10:12.239
to somehow,
&gt;&gt; Bianca Gandolfo: we need to find,

136
00:10:12.239 --> 00:10:13.960
there's, we can use a difference.

137
00:10:16.650 --> 00:10:18.217
We can do the difference of the arrays.

138
00:10:20.731 --> 00:10:25.745
&gt;&gt; Bianca Gandolfo: So, I believe,
&gt;&gt; Bianca Gandolfo: There

139
00:10:25.745 --> 00:10:33.396
is something called difference;
let's check out the documentation.

140
00:10:35.936 --> 00:10:38.390
&gt;&gt; Bianca Gandolfo: All right.

141
00:10:38.390 --> 00:10:42.040
So, it creates an array of array
values not included in the other

142
00:10:42.040 --> 00:10:43.190
blah, blah, blah.

143
00:10:43.190 --> 00:10:46.690
Perfect, so that's what we'll do.

144
00:10:46.690 --> 00:10:50.315
We'll use difference for those.

145
00:10:53.589 --> 00:10:57.059
&gt;&gt; Bianca Gandolfo: So, may we don't need
to reduce so many times after all, yay.

146
00:10:58.170 --> 00:10:59.324
Now it's gonna get a little crazy.

147
00:11:02.084 --> 00:11:07.132
&gt;&gt; Bianca Gandolfo: So let's call this

148
00:11:07.132 --> 00:11:13.098
our,
&gt;&gt; Bianca Gandolfo: So

149
00:11:13.098 --> 00:11:15.881
we're gonna get multiple arrays,
and I'm going to store it, and

150
00:11:15.881 --> 00:11:18.330
we can store it in an object,
or we can store it in an array.

151
00:11:18.330 --> 00:11:22.209
I'm just thinking What is gonna
be the best method of doing that?

152
00:11:26.008 --> 00:11:32.612
&gt;&gt; Bianca Gandolfo: Hm, I'll just
going to put in array right now, so

153
00:11:32.612 --> 00:11:39.162
as we reduce,
&gt;&gt; Bianca Gandolfo: Rows

154
00:11:41.230 --> 00:11:42.350
&gt;&gt; Bianca Gandolfo: So let's

155
00:11:42.350 --> 00:11:45.715
call these the empty rooms.

156
00:12:00.137 --> 00:12:04.279
&gt;&gt; Bianca Gandolfo: So we will reduce it,

157
00:12:04.279 --> 00:12:10.732
this is going to return an array.

158
00:12:14.925 --> 00:12:16.874
&gt;&gt; Bianca Gandolfo: There we go.

159
00:12:20.789 --> 00:12:23.237
&gt;&gt; Bianca Gandolfo: Room, memo.

160
00:12:27.073 --> 00:12:31.249
&gt;&gt; Bianca Gandolfo: suspect.rooms,
then we need to loop through this.

161
00:12:34.270 --> 00:12:35.426
Let's just do one thing at a time.

162
00:12:35.426 --> 00:12:40.728
So, let's say if, so

163
00:12:40.728 --> 00:12:47.706
we want to say if it's false,

164
00:12:47.706 --> 00:12:52.732
so if suspect .rooms

165
00:12:52.732 --> 00:12:58.596
is false) memo.push,

166
00:12:58.596 --> 00:13:06.430
sorry, we want to say room here.

167
00:13:07.600 --> 00:13:13.857
Push the room and
then you want to return Memo,

168
00:13:13.857 --> 00:13:22.290
so what we're doing here is we're
looping through the suspect.rooms.

169
00:13:22.290 --> 00:13:25.880
For each room we're seeing
if the value is false,

170
00:13:25.880 --> 00:13:31.860
if it is we're gonna push it
into our memo which is an array.

171
00:13:31.860 --> 00:13:35.890
Because we initialize it as an array,
so this is for one suspect.

172
00:13:35.890 --> 00:13:40.671
So at the end of this, we're going to

173
00:13:40.671 --> 00:13:45.310
create this emptyRooms variable.

174
00:13:45.310 --> 00:13:52.334
Okay, but we need to do that for
multiple People.

175
00:13:59.870 --> 00:14:04.010
&gt;&gt; Bianca Gandolfo: It
seemed a lot simpler in my

176
00:14:04.010 --> 00:14:08.875
head when I wrote the exercise.

177
00:14:08.875 --> 00:14:13.422
So let's just map this.

178
00:14:14.941 --> 00:14:19.699
&gt;&gt; Bianca Gandolfo: So
we want it to return, yeah,

179
00:14:19.699 --> 00:14:22.815
so we want to map it.

180
00:14:27.419 --> 00:14:35.171
&gt;&gt; Bianca Gandolfo: Map
the newDevelopment,

181
00:14:35.171 --> 00:14:40.470
over notInRoom.

182
00:14:40.470 --> 00:14:47.580
And this is gonna be our notInRooms,

183
00:14:47.580 --> 00:14:52.450
so this is going to,
loop over a new development.

184
00:14:52.450 --> 00:14:59.630
It's going to pass our suspect
object into this function,

185
00:15:00.780 --> 00:15:07.910
and then we're going to reduce
the suspect.rooms which is in array.

186
00:15:07.910 --> 00:15:12.162
This is gonna return in array
of all the empty rooms, so

187
00:15:12.162 --> 00:15:16.887
map is going to be an array of arrays,
of all the empty rooms.

188
00:15:22.912 --> 00:15:25.951
&gt;&gt; Speaker 7: Could you
do that one more time?

189
00:15:25.951 --> 00:15:26.696
&gt;&gt; Bianca Gandolfo: Yeah.

190
00:15:28.746 --> 00:15:33.433
&gt;&gt; Bianca Gandolfo: Let's Yeah,
okay, so newDevelopment.

191
00:15:35.139 --> 00:15:36.724
&gt;&gt; Bianca Gandolfo: Let me
just put a word wrap here.

192
00:15:39.967 --> 00:15:42.579
&gt;&gt; Bianca Gandolfo: Okay,
so newDevelopment, right,

193
00:15:42.579 --> 00:15:46.190
is an array of objects,
we're gonna map over it.

194
00:15:46.190 --> 00:15:48.280
So we're looping through, and

195
00:15:48.280 --> 00:15:51.880
we wanna map because we want
the array to be the same length.

196
00:15:51.880 --> 00:15:55.482
As the array that were passing, yeah.

197
00:15:58.849 --> 00:16:00.229
&gt;&gt; Bianca Gandolfo: So
here's our first item,

198
00:16:00.229 --> 00:16:05.130
that's gonna get passed into
not in room That's our suspect.

199
00:16:05.130 --> 00:16:11.840
We're gonna reduce the suspect rooms,
so we're digging into the suspect rooms.

200
00:16:12.840 --> 00:16:17.880
We're gonna pass the room, that's
just how reduced works, and the memo.

201
00:16:19.600 --> 00:16:21.550
We're gonna initialize
it as an empty array.

202
00:16:22.560 --> 00:16:26.690
SoeEvery time we loop through for
each room if it's false,

203
00:16:26.690 --> 00:16:30.740
we're gonna push a new room into memo and
return it.

204
00:16:30.740 --> 00:16:35.320
So the first time it finds an empty room,
it's gonna push kitchen.

205
00:16:35.320 --> 00:16:39.080
It's gonna return memo, which is an array.

206
00:16:40.100 --> 00:16:41.790
It's gonna have an array
with kitchen in it.

207
00:16:43.890 --> 00:16:46.050
If it is true it's just
going to return memo anyway.

208
00:16:46.050 --> 00:16:50.940
It is not going to add
anything to it though.

209
00:16:52.080 --> 00:16:53.190
It is like a fancy filter.

210
00:16:59.100 --> 00:16:59.919
You guys see how it works?

211
00:17:01.950 --> 00:17:07.770
Okay, and
then we're gonna return that array.

212
00:17:07.770 --> 00:17:09.260
So that would look something like this.

213
00:17:10.550 --> 00:17:14.672
And then map is gonna start
looking something like this.

214
00:17:17.554 --> 00:17:21.045
&gt;&gt; Bianca Gandolfo: And
then the second time it goes through,

215
00:17:21.045 --> 00:17:23.652
it looks something like this.

216
00:17:26.920 --> 00:17:28.260
&gt;&gt; Bianca Gandolfo: Yeah.

217
00:17:31.718 --> 00:17:36.419
&gt;&gt; Bianca Gandolfo: And then we'll have
this data structure, and then we want to

218
00:17:36.419 --> 00:17:41.920
difference it, and that will give us
the rooms that no one has been in.

219
00:17:41.920 --> 00:17:46.330
&gt;&gt; Bianca Gandolfo: Does that make sense?

220
00:17:46.330 --> 00:17:54.530
So, then we would say
difference notInRooms.

221
00:17:56.890 --> 00:17:59.960
And that would give us our solution.

222
00:18:05.380 --> 00:18:10.850
&gt;&gt; Speaker 8: How does it know to,
it's kind of return memo.

223
00:18:10.850 --> 00:18:12.255
It's got that empty array.

224
00:18:12.255 --> 00:18:12.940
&gt;&gt; Bianca Gandolfo: Mm-hm?

225
00:18:12.940 --> 00:18:19.188
&gt;&gt; Speaker 8: How does it know to push
memo into that where it's pushing?

226
00:18:19.188 --> 00:18:25.650
&gt;&gt; Bianca Gandolfo: Yeah this push, is
going to be pushed into this empty array.

227
00:18:25.650 --> 00:18:29.643
Cause this is the initial value, so for

228
00:18:29.643 --> 00:18:34.846
reduce you can pass nothing
as the initial value and

229
00:18:34.846 --> 00:18:39.850
it will choose the first
item in the array.

230
00:18:39.850 --> 00:18:44.090
Or you can give it your
own initial value and

231
00:18:44.090 --> 00:18:45.910
you can define the behavior
in the callback

232
00:18:51.940 --> 00:18:56.210
but a simpler version would really
be to use just a filter, but

233
00:18:56.210 --> 00:18:58.679
filter is just type of reduce.

234
00:19:06.512 --> 00:19:07.310
&gt;&gt; Bianca Gandolfo: Hum.

235
00:19:07.310 --> 00:19:11.290
&gt;&gt; Speaker 9: So
wouldn't difference give in this example,

236
00:19:11.290 --> 00:19:14.710
give billiard room this the difference
&gt;&gt; Bianca Gandolfo: Hum.

237
00:19:14.710 --> 00:19:16.600
&gt;&gt; Speaker 9: So kitchen and

238
00:19:16.600 --> 00:19:22.280
ballroom would still be valid
options as the no room.

239
00:19:23.460 --> 00:19:23.980
&gt;&gt; Bianca Gandolfo: Good point.

240
00:19:25.870 --> 00:19:27.260
Maybe I did it backwards, hold on.

241
00:19:33.140 --> 00:19:38.257
Difference, yeah we don't want
the difference we want the not difference.

242
00:19:40.810 --> 00:19:43.610
&gt;&gt; Bianca Gandolfo: Creates
an array of values not included.

243
00:19:52.675 --> 00:19:57.360
&gt;&gt; Bianca Gandolfo: So close.

244
00:19:59.390 --> 00:20:00.810
So close.

245
00:20:00.810 --> 00:20:06.270
&gt;&gt; Speaker 10: You'd want them room
that not shows up the most but

246
00:20:06.270 --> 00:20:11.490
shows up exactly the same number of
times as there are suspects, right?

247
00:20:11.490 --> 00:20:11.990
&gt;&gt; Bianca Gandolfo: Yeah.

248
00:20:13.330 --> 00:20:13.920
Exactly.

249
00:20:15.320 --> 00:20:20.920
So we can maybe negate,
we can negate difference,

250
00:20:20.920 --> 00:20:25.760
let's see create a function that negates
the results of the predicate function.

251
00:20:27.120 --> 00:20:30.700
So is even,
filtering the gate is even overturned on.

252
00:20:31.870 --> 00:20:34.180
Yeah, maybe if we do
a difference we negate it

253
00:20:37.000 --> 00:20:39.070
to make it more complicated, why not?

254
00:20:39.070 --> 00:20:42.328
All right but this is a function.

255
00:20:42.328 --> 00:20:49.093
So maybe
&gt;&gt; Speaker 10: We'd

256
00:20:49.093 --> 00:20:50.858
be negating a difference, right?

257
00:20:50.858 --> 00:20:57.250
&gt;&gt; Bianca Gandolfo: Well,
&gt;&gt; Bianca Gandolfo: It

258
00:20:57.250 --> 00:21:01.640
has to be a predicate and
I'll know that that will work.

259
00:21:13.116 --> 00:21:14.720
&gt;&gt; Bianca Gandolfo: Maybe
there's a deep unique.

260
00:21:16.656 --> 00:21:22.702
&gt;&gt; Bianca Gandolfo: Unique,
&gt;&gt; Bianca Gandolfo: Let's see.

261
00:21:25.410 --> 00:21:26.310
&gt;&gt; Bianca Gandolfo: No.

262
00:21:29.392 --> 00:21:32.719
&gt;&gt; Bianca Gandolfo: Probably
one of these ones.

263
00:21:35.710 --> 00:21:36.749
&gt;&gt; Bianca Gandolfo: Three, one and three.

264
00:21:45.165 --> 00:21:49.035
&gt;&gt; Bianca Gandolfo: I really want to use,
I can do it logically,

265
00:21:49.035 --> 00:21:53.860
even the code, but
I really wanna use a Lodash method.

266
00:21:55.890 --> 00:21:58.140
&gt;&gt; Speaker 10: Certainly good
array intersection or something.

267
00:21:58.140 --> 00:22:04.310
&gt;&gt; Bianca Gandolfo: Yeah that's
where I was looking, where is this?

268
00:22:05.760 --> 00:22:06.260
&gt;&gt; Speaker 10: Yep.

269
00:22:09.680 --> 00:22:12.450
There's and underscore,
or lowdash, intersection.

270
00:22:12.450 --> 00:22:13.270
&gt;&gt; Bianca Gandolfo: Nice, let's do that.

271
00:22:13.270 --> 00:22:18.960
I knew there had to be something.

272
00:22:18.960 --> 00:22:19.530
There we go.

273
00:22:19.530 --> 00:22:22.450
And now we want, you want to return this.

274
00:22:30.118 --> 00:22:31.140
&gt;&gt; Bianca Gandolfo: All right.

275
00:22:31.140 --> 00:22:34.290
What do you think?

276
00:22:34.290 --> 00:22:36.930
A little crazy?

277
00:22:41.843 --> 00:22:46.338
&gt;&gt; Bianca Gandolfo: Any questions?

278
00:22:51.442 --> 00:22:52.750
&gt;&gt; Bianca Gandolfo: Yeah, over the head.

279
00:22:54.020 --> 00:22:55.450
I mean,
it's pretty much over my head, too.

280
00:23:00.416 --> 00:23:02.131
&gt;&gt; Bianca Gandolfo: Okay.

281
00:23:06.913 --> 00:23:10.053
&gt;&gt; Bianca Gandolfo: All right.

282
00:23:14.835 --> 00:23:16.324
&gt;&gt; Bianca Gandolfo: Hmm.

283
00:23:17.686 --> 00:23:20.230
&gt;&gt; Bianca Gandolfo: I'm
thinking about this.

284
00:23:27.000 --> 00:23:29.150
&gt;&gt; Bianca Gandolfo: So,
we can also easily use a filter here

285
00:23:31.160 --> 00:23:32.175
&gt;&gt; Bianca Gandolfo: to do the same thing

286
00:23:32.175 --> 00:23:33.510
as this reduce is doing.

287
00:23:38.029 --> 00:23:39.776
&gt;&gt; Bianca Gandolfo: Cool.

288
00:23:46.101 --> 00:23:47.280
&gt;&gt; Bianca Gandolfo: All right.

289
00:23:47.280 --> 00:23:50.217
Now you guys are like I never
wanna use reduce again.

290
00:23:50.217 --> 00:23:58.130
That's what they say like people who
criticize reduce say it's too complicated.

291
00:23:58.130 --> 00:24:02.680
The only thing that people can
do with it is add numbers.

292
00:24:02.680 --> 00:24:07.970
But people who are really
into it are really into it.

293
00:24:09.980 --> 00:24:13.870
I like it just for the riddles like I said
at the beginning of the class were really

294
00:24:13.870 --> 00:24:18.350
like riddles and mysteries and
kind of like figuring stuff out.

295
00:24:18.350 --> 00:24:20.260
That's what I like about it.

296
00:24:20.260 --> 00:24:23.400
It kinda is like a riddle for me.

297
00:24:23.400 --> 00:24:24.910
How to use reduce

