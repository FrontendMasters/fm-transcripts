WEBVTT

1
00:00:00.080 --> 00:00:04.893
So the exercise was to loop through
all the properties of the suspect

2
00:00:04.893 --> 00:00:10.055
objects in the suspects array and
mark them if you think you're guilty.

3
00:00:10.055 --> 00:00:11.802
I'm curious to see how
you guys approached it.

4
00:00:16.107 --> 00:00:17.752
So we still have this game here.

5
00:00:21.651 --> 00:00:26.242
Do you want to take a step,
did you finish it?

6
00:00:26.242 --> 00:00:29.706
&gt;&gt; Mostly I use for
each method on the array.

7
00:00:29.706 --> 00:00:30.612
&gt;&gt; You use for each?

8
00:00:30.612 --> 00:00:32.529
Could anyone use a loop?

9
00:00:32.529 --> 00:00:34.709
Use loop?

10
00:00:34.709 --> 00:00:36.482
&gt;&gt; It's a foreign like you're shown here.

11
00:00:36.482 --> 00:00:39.675
&gt;&gt; Yeah cool we're gonna do for
nginx though.

12
00:00:39.675 --> 00:00:41.452
You're ahead of the game.

13
00:00:41.452 --> 00:00:43.191
All right, so walk me through it.

14
00:00:43.191 --> 00:00:43.849
&gt;&gt; Yeah, sure.

15
00:00:43.849 --> 00:00:46.672
So I just declared
a function called game loop.

16
00:00:46.672 --> 00:00:53.823
So var gameLoop equals function And

17
00:00:53.823 --> 00:00:59.044
the first line of that is a for

18
00:00:59.044 --> 00:01:04.054
loop, for var i equals 0.

19
00:01:04.054 --> 00:01:07.866
I less than games.suspects.length?

20
00:01:07.866 --> 00:01:08.886
i plus plus.

21
00:01:08.886 --> 00:01:15.678
&gt;&gt; Length, you guys had to
be my spellcheck here, okay?

22
00:01:15.678 --> 00:01:20.758
&gt;&gt; I did the for in loops I said four

23
00:01:20.758 --> 00:01:27.014
key in var game.suspects[i] first

24
00:01:27.014 --> 00:01:32.108
learned that is if statement.

25
00:01:32.108 --> 00:01:38.030
I didn't really know exactly
how to figure out who's guilty.

26
00:01:38.030 --> 00:01:40.866
I was thinking of getting
a like the confidential object.

27
00:01:40.866 --> 00:01:46.849
But for now I thought rusty was it so
I just said if game.suspects[i] and

28
00:01:46.849 --> 00:01:51.287
then key because i noticed
you can't use .key here for

29
00:01:51.287 --> 00:01:57.489
whatever reason that didn't work maybe
you can explain but I had to do this.

30
00:01:57.489 --> 00:02:03.144
So if that all == to really rough rusty,

31
00:02:03.144 --> 00:02:07.032
I just said rusty in string.

32
00:02:07.032 --> 00:02:11.302
Then I would have a log,
says found one and or

33
00:02:11.302 --> 00:02:16.391
return true maybe but
I just did a log there, found.

34
00:02:23.283 --> 00:02:24.903
&gt;&gt; Can't type.

35
00:02:24.903 --> 00:02:30.386
&gt;&gt; Yeah, and then else not this time or
something like that.

36
00:02:36.944 --> 00:02:38.071
&gt;&gt; All right.

37
00:02:38.071 --> 00:02:46.643
&gt;&gt; So since we have one of the things
matching that should return one,

38
00:02:46.643 --> 00:02:50.939
found him in the rest next times.

39
00:02:50.939 --> 00:02:51.657
&gt;&gt; Cool.

40
00:02:51.657 --> 00:02:53.952
I like it.

41
00:02:53.952 --> 00:03:02.542
How many times does this outer loop run?

42
00:03:02.542 --> 00:03:04.708
I feel like I pick on the people
on the outside the most.

43
00:03:04.708 --> 00:03:07.284
Actually I haven't taught
to our friend in the back.

44
00:03:07.284 --> 00:03:10.121
How many times do this this loop run?

45
00:03:10.121 --> 00:03:12.670
&gt;&gt; It runs through each entry.

46
00:03:12.670 --> 00:03:13.625
&gt;&gt; For each what?

47
00:03:13.625 --> 00:03:17.309
&gt;&gt; It runs for each entry in suspects.

48
00:03:17.309 --> 00:03:21.263
&gt;&gt; Yeah, so each suspect object, right?

49
00:03:21.263 --> 00:03:27.247
So in number form, two times, right?

50
00:03:27.247 --> 00:03:27.782
Cool.

51
00:03:29.871 --> 00:03:35.282
How many times, Does this loop run?

52
00:03:37.658 --> 00:03:38.475
&gt;&gt; Four.

53
00:03:40.581 --> 00:03:45.675
&gt;&gt; Yeah, and what order does it run in?

54
00:03:45.675 --> 00:03:51.964
So if I was going to console.log and I'm
gonna try to do this quick, outer loop.

55
00:03:56.452 --> 00:04:00.550
Then we console.log, inner loop, so

56
00:04:00.550 --> 00:04:04.780
what's the first thing that I will log?

57
00:04:04.780 --> 00:04:08.716
How about combat,

58
00:04:08.716 --> 00:04:12.609
sorry, [LAUGH]
&gt;&gt; Outer loop?

59
00:04:12.609 --> 00:04:13.591
&gt;&gt; Yep.

60
00:04:13.591 --> 00:04:16.940
So it'll log outer loop.

61
00:04:16.940 --> 00:04:20.965
Okay then our lawyer friend,

62
00:04:20.965 --> 00:04:25.799
what's next thing that I'll log?

63
00:04:25.799 --> 00:04:26.616
&gt;&gt; Inner loop.

64
00:04:29.470 --> 00:04:30.211
&gt;&gt; Okay.

65
00:04:30.211 --> 00:04:33.191
&gt;&gt; And then another inner loop.

66
00:04:33.191 --> 00:04:37.215
&gt;&gt; Then two more inner loops.

67
00:04:37.215 --> 00:04:42.014
&gt;&gt; Not quite, so
at this point, our first inner

68
00:04:42.014 --> 00:04:46.686
loop suspect is gonna
be our very first one,

69
00:04:46.686 --> 00:04:50.742
right, it's gonna be rusty orange.

70
00:04:50.742 --> 00:04:55.197
So for all the keys in this object,
it's going to run it twice.

71
00:04:55.197 --> 00:04:57.659
So the first one is name, right?

72
00:04:57.659 --> 00:05:02.690
Next one is color and then that's it.

73
00:05:02.690 --> 00:05:07.584
So then we break out of this loop and
we continue back here.

74
00:05:12.574 --> 00:05:15.988
Assuming that we didn't hit this if
else statement which we would have.

75
00:05:18.690 --> 00:05:22.257
That makes sense,
why it doesn't keep looping?

76
00:05:22.257 --> 00:05:23.433
&gt;&gt; Not really, you can just probably go.

77
00:05:23.433 --> 00:05:24.977
&gt;&gt; Yeah, sure, one more time.

78
00:05:24.977 --> 00:05:31.215
So do you know what this object is?

79
00:05:31.215 --> 00:05:36.646
&gt;&gt; Yeah, it's the first key in suspects,

80
00:05:36.646 --> 00:05:40.174
I mean, rusty in orange.

81
00:05:40.174 --> 00:05:45.830
&gt;&gt; Yeah, so, and
it's going to loop through this object.

82
00:05:45.830 --> 00:05:49.017
So there are two properties
in this object, right?

83
00:05:49.017 --> 00:05:51.916
There is name and then there's color.

84
00:05:51.916 --> 00:05:55.293
So it's gonna loop through both of those,
and

85
00:05:55.293 --> 00:05:58.499
that's all it knows
about it because i0 and

86
00:05:58.499 --> 00:06:03.450
we've only made it that far so
the loop doesn't like, jump ahead.

87
00:06:03.450 --> 00:06:08.929
It doesn't know that, in fact,
we're gonna ask it to loop again for

88
00:06:08.929 --> 00:06:14.792
the next one, but it won't know that
until we say game.suspects at one.

89
00:06:14.792 --> 00:06:17.331
See what I mean is that clarify?

90
00:06:17.331 --> 00:06:18.863
Yeah, cool.

91
00:06:18.863 --> 00:06:23.947
So we have outer loop,
inner loop, inner loop,

92
00:06:23.947 --> 00:06:29.294
and then this corner over
here how about in the end?

93
00:06:29.294 --> 00:06:30.861
What's the next thing that's going to log?

94
00:06:30.861 --> 00:06:33.277
You know?

95
00:06:33.277 --> 00:06:37.045
&gt;&gt; Outer loop?

96
00:06:37.045 --> 00:06:41.127
&gt;&gt; Not quite sense

97
00:06:41.127 --> 00:06:47.407
suspects at i is rusty.

98
00:06:47.407 --> 00:06:49.126
So what's the next thing?

99
00:06:49.126 --> 00:06:52.177
&gt;&gt; It's rusty and
it's gonna print found them?

100
00:06:52.177 --> 00:06:54.587
&gt;&gt; Yeah, awesome.

101
00:06:54.587 --> 00:06:57.450
And then what's the next
thing that's gonna run?

102
00:06:57.450 --> 00:06:58.769
Next door.

103
00:07:03.781 --> 00:07:04.809
What's the next log?

104
00:07:07.484 --> 00:07:08.156
&gt;&gt; Me?

105
00:07:08.156 --> 00:07:13.012
&gt;&gt; [INAUDIBLE]
Please.

106
00:07:13.012 --> 00:07:17.374
&gt;&gt; You fulfill the logic
when you found roastery.

107
00:07:17.374 --> 00:07:20.005
&gt;&gt; When you say we fulfill
the logic what does that mean?

108
00:07:20.005 --> 00:07:24.679
&gt;&gt; Like it was equal to us so
you console log you found so

109
00:07:24.679 --> 00:07:28.179
you resumed on here but then you go if.

110
00:07:28.179 --> 00:07:36.117
Then you iterate again, you kind of go
through that process and catch the else.

111
00:07:36.117 --> 00:07:39.846
&gt;&gt; Well what's the very next
thing that happens after this?

112
00:07:39.846 --> 00:07:44.365
So you're right that we met a condition
for our if statement we entered

113
00:07:44.365 --> 00:07:48.356
into an if block, and
then you know we're gonna move on from.

114
00:07:48.356 --> 00:07:50.749
&gt;&gt; You probably gonna go
back to the outer loop.

115
00:07:50.749 --> 00:07:51.502
Yeah.

116
00:07:51.502 --> 00:07:53.401
&gt;&gt; And repeat the operation.

117
00:07:53.401 --> 00:07:59.734
&gt;&gt; So console.log outer loop next And

118
00:07:59.734 --> 00:08:02.604
then next,
&gt;&gt; Inner loop twice more.

119
00:08:02.604 --> 00:08:05.023
&gt;&gt; Yep, we"ll do inner loop.

120
00:08:05.023 --> 00:08:12.522
&gt;&gt; Shouldn't found them actually be after
the first inner loop, Matching the name?

121
00:08:16.890 --> 00:08:20.046
Yeah, you mean like this
one should be later?

122
00:08:20.046 --> 00:08:23.404
Well, I mean, there's no guaranteed but

123
00:08:23.404 --> 00:08:27.151
we'll just pretend that its name just for
fun.

124
00:08:27.151 --> 00:08:29.243
So then it's going to be inner loop.

125
00:08:29.243 --> 00:08:29.844
What's that?

126
00:08:29.844 --> 00:08:31.561
&gt;&gt; There's no guarantee on
the order of the propeties.

127
00:08:31.561 --> 00:08:34.683
&gt;&gt; No we'll just pretend
&gt;&gt; And

128
00:08:34.683 --> 00:08:39.780
then we're gonna enter into the if else.

129
00:08:39.780 --> 00:08:41.436
What do you think is gonna log?

130
00:08:41.436 --> 00:08:44.507
We're here.

131
00:08:44.507 --> 00:08:46.445
&gt;&gt; Why is it running again through it?

132
00:08:46.445 --> 00:08:52.280
Why does it stop after under console.log
('Found \'em !') why would it go?

133
00:08:52.280 --> 00:08:53.897
&gt;&gt; Where did it tell it to stop?

134
00:08:55.996 --> 00:08:59.179
&gt;&gt; Because it's just
locked it to the grids.

135
00:08:59.179 --> 00:09:00.587
&gt;&gt; How could you tell it to stop,
do you know?

136
00:09:02.596 --> 00:09:03.270
&gt;&gt; Break?

137
00:09:03.270 --> 00:09:04.119
Break?

138
00:09:04.119 --> 00:09:07.214
&gt;&gt; Yeah, you can break you
could return stuff like that.

139
00:09:08.508 --> 00:09:09.325
Cool.

140
00:09:09.325 --> 00:09:10.324
&gt;&gt; Wouldn't lock.

141
00:09:13.119 --> 00:09:15.387
So it's just gonna be rusty again.

142
00:09:15.387 --> 00:09:20.515
&gt;&gt; Well the color is orange, yeah,
it's gonna be the next property.

143
00:09:20.515 --> 00:09:21.889
So then it'll say next time.

144
00:09:21.889 --> 00:09:23.051
&gt;&gt; Okay.

145
00:09:23.051 --> 00:09:24.444
&gt;&gt; That makes sense?

146
00:09:24.444 --> 00:09:25.486
&gt;&gt; It's not rusty.

147
00:09:25.486 --> 00:09:26.138
&gt;&gt; Yeah.

148
00:09:26.138 --> 00:09:27.117
&gt;&gt; That has to be.

149
00:09:27.117 --> 00:09:31.554
&gt;&gt; Yeah, cool.

150
00:09:31.554 --> 00:09:34.231
You guys see where this is going and
how this flows?

151
00:09:34.231 --> 00:09:35.223
Okay.

152
00:09:35.223 --> 00:09:38.384
&gt;&gt; Can we run out once just
to see if we're right?

153
00:09:38.384 --> 00:09:38.933
&gt;&gt; Yeah.

154
00:09:47.332 --> 00:09:48.096
We need this

155
00:10:00.070 --> 00:10:04.641
Just because I don't want to
run into more issues with that

156
00:10:04.641 --> 00:10:08.015
game has already been conflict declared.

157
00:10:08.015 --> 00:10:08.704
All right,

158
00:10:25.355 --> 00:10:28.912
Okay, so, game loop.

159
00:10:28.912 --> 00:10:31.354
What did I say game 23.

160
00:10:36.198 --> 00:10:37.255
This is a problem.

161
00:10:37.255 --> 00:10:39.959
You guys are supposed
to be my spell check.

162
00:10:46.647 --> 00:10:51.476
Okay, all right, no,
I think we're ready, let's see.

163
00:10:51.476 --> 00:10:56.717
So we have outer loop,
inner loop, found ' inner loop.

164
00:10:56.717 --> 00:10:58.636
Should we look at it side by side maybe,

165
00:11:07.539 --> 00:11:13.836
All right, let's see the outer loop,
inner loop found '.

166
00:11:13.836 --> 00:11:14.859
We didn't make a mistake.

167
00:11:14.859 --> 00:11:18.683
&gt;&gt; Let me go through inner loop again.

168
00:11:18.683 --> 00:11:19.905
And then next time.

169
00:11:19.905 --> 00:11:25.192
&gt;&gt; How do we get there?

170
00:11:25.192 --> 00:11:31.219
Okay thought that's what we did, well.

171
00:11:31.219 --> 00:11:36.136
And then two inner loops, next times.

172
00:11:36.136 --> 00:11:37.324
&gt;&gt; Yeah, why don't go through all of them?

173
00:11:37.324 --> 00:11:39.828
&gt;&gt; Was going back through
both of the properties.

174
00:11:39.828 --> 00:11:44.847
&gt;&gt; The part we missed was the inner
loop going through multiple properties?

175
00:11:44.847 --> 00:11:49.076
&gt;&gt; Yeah, well, the second one
we didn't finish the second one.

176
00:11:49.076 --> 00:11:50.821
But yeah, I think we.

177
00:11:50.821 --> 00:11:53.268
&gt;&gt; Inner loops is gonna run twice
&gt;&gt; Yeah

178
00:11:53.268 --> 00:11:55.303
&gt;&gt; It's going through two different keys

179
00:11:55.303 --> 00:11:56.068
&gt;&gt; Yeah, and

180
00:11:56.068 --> 00:12:01.170
it's also gonna be hitting these this
Fs which will be logging as well.

181
00:12:01.170 --> 00:12:01.670
Cool.

