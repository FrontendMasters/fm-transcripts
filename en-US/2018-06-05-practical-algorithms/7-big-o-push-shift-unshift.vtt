WEBVTT

1
00:00:00.058 --> 00:00:00.777
&gt;&gt; Bianca Gandolfo: What about this one?

2
00:00:00.777 --> 00:00:04.885
So we have a list of different
ways that you can greet someone in

3
00:00:04.885 --> 00:00:10.996
languages.
&gt;&gt; Bianca Gandolfo: What's

4
00:00:10.996 --> 00:00:12.875
the time complexity of push?

5
00:00:12.875 --> 00:00:14.861
We talked a little bit about that.

6
00:00:14.861 --> 00:00:16.789
Constant, mm-hm.
&gt;&gt; Student1: [INAUDIBLE] it

7
00:00:16.789 --> 00:00:18.119
goes to the end.
&gt;&gt; Bianca Gandolfo: Mm-hm,

8
00:00:18.119 --> 00:00:22.094
yep, we always just put it at the end,
not a big deal.

9
00:00:22.094 --> 00:00:26.223
Other languages, when you're
actually doing memory allocation,

10
00:00:26.223 --> 00:00:28.010
this might not be a constant.

11
00:00:28.010 --> 00:00:32.090
But in JavaScript, we can reason
that this is just a constant.

12
00:00:32.090 --> 00:00:35.719
We don't need to worry about initializing
an array of a certain length and

13
00:00:35.719 --> 00:00:36.772
blah, blah, blah,

14
00:00:36.772 --> 00:00:40.420
and then keeping track and then expanding
if it exceeds a certain length.

15
00:00:40.420 --> 00:00:43.498
So we don't need to worry about
anything like that, cool.

16
00:00:43.498 --> 00:00:48.585
And then if we do,
&gt;&gt; Bianca Gandolfo: I always get these

17
00:00:48.585 --> 00:00:52.222
two, I never actually use these, does
anyone actually use these in their real

18
00:00:52.222 --> 00:00:57.527
life, shift or unshift?
&gt;&gt; Bianca Gandolfo: So

19
00:00:57.527 --> 00:01:01.285
if we're taking the first one off
the front, how does that change the time

20
00:01:01.285 --> 00:01:05.977
complexity of this operation?
&gt;&gt; Bianca Gandolfo: Mm-hm,

21
00:01:05.977 --> 00:01:10.015
just like I said, we were going to, if we
take the first one off, then we need to

22
00:01:10.015 --> 00:01:13.898
shift the second one into the first,
the second to the first, or, sorry.

23
00:01:13.898 --> 00:01:17.543
The second to the first,
third to the second, fourth to the third.

24
00:01:17.543 --> 00:01:20.622
And then that's gonna be
n number of operations,

25
00:01:20.622 --> 00:01:22.830
where n is the length of that array.

