WEBVTT

1
00:00:00.190 --> 00:00:01.074
&gt;&gt; Bianca: So now it's your turn.

2
00:00:01.074 --> 00:00:07.405
Your goal here
&gt;&gt; Bianca: Is to

3
00:00:07.405 --> 00:00:13.240
transform this simple sorting
algorithm into a uniqSort.

4
00:00:13.240 --> 00:00:18.459
So a uniqSort takes an array with
duplicates, removes the duplicates, and

5
00:00:18.459 --> 00:00:24.173
returns the sorted array.
&gt;&gt; Bianca: And

6
00:00:24.173 --> 00:00:26.523
so, the sort is happening for
you on line ten.

7
00:00:26.523 --> 00:00:27.982
You don't need to worry
too much about that.

8
00:00:31.478 --> 00:00:33.089
&gt;&gt; Bianca: This method here, or

9
00:00:33.089 --> 00:00:38.920
this function here, means that it's
gonna be returned in ascending order.

10
00:00:38.920 --> 00:00:43.719
If you want it to be in descending order,
you just swap these.

11
00:00:43.719 --> 00:00:47.360
And the reason we have to do this is
because the Java script made of sorts,

12
00:00:47.360 --> 00:00:49.140
it's like a string sort.

13
00:00:49.140 --> 00:00:53.592
So if you have 1, 2, 3, and 12,

14
00:00:53.592 --> 00:00:57.225
it'll do 1, 12, 2, 3.

15
00:00:57.225 --> 00:01:02.089
And so, that's why we need to pass this
callback to tell the sort that we want

16
00:01:02.089 --> 00:01:06.801
to actually operate on this kind of
comparison, which is a greater than or

17
00:01:06.801 --> 00:01:11.816
less than comparison.
&gt;&gt; Bianca: Okay,

18
00:01:11.816 --> 00:01:15.890
so you should be able to edit
this directly in the slide.

19
00:01:15.890 --> 00:01:20.351
You can also open it in Repl.it.

20
00:01:20.351 --> 00:01:23.060
And then, you can fork it.

21
00:01:23.060 --> 00:01:28.386
And then, you can save them if you want.

22
00:01:28.386 --> 00:01:31.749
And you can have a copy of all
the exercises that you've worked on and

23
00:01:31.749 --> 00:01:33.670
your solutions in your own Repl.it.

24
00:01:33.670 --> 00:01:35.657
You will have to make
a Repl.it account though.

