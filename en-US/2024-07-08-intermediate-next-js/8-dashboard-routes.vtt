WEBVTT

1
00:00:00.048 --> 00:00:04.746
&gt;&gt; Scott Moss: Okay, there's some talk
here about examples with models, and

2
00:00:04.746 --> 00:00:09.715
this one's crazy, tab groups,
and all different types of stuff.

3
00:00:09.715 --> 00:00:11.355
Let's just hop into it.

4
00:00:11.355 --> 00:00:15.760
So implementation, what we're gonna do is,
we're gonna make some new slots.

5
00:00:15.760 --> 00:00:18.480
We're gonna make a slots for
our, basically,

6
00:00:18.480 --> 00:00:22.356
if you remember when I showed you earlier,
I had the dashboard, and

7
00:00:22.356 --> 00:00:25.825
when you went to it,
there were three pieces on it on the app.

8
00:00:25.825 --> 00:00:30.663
There was a list of events,
all your RSVPs, and then account.

9
00:00:30.663 --> 00:00:32.726
Okay, each one of those was a slot.

10
00:00:32.726 --> 00:00:35.321
They were their own route, okay?

11
00:00:35.321 --> 00:00:36.947
We need to enable that.

12
00:00:36.947 --> 00:00:41.637
So what we're gonna do is we're gonna
make a slot for events, we're gonna make

13
00:00:41.637 --> 00:00:46.554
a slot for RSVPs, and then we're gonna
have our page, which is gonna be Children.

14
00:00:46.554 --> 00:00:50.553
So the way I want you to think about this,
if you look closely, if you look at this

15
00:00:50.553 --> 00:00:54.287
hierarchy of the folder system,
I have @events folder with a page in it.

16
00:00:54.287 --> 00:00:59.769
I have @rsvps with a page in it.

17
00:00:59.769 --> 00:01:01.831
And then I have the page.tsx itself.

18
00:01:01.831 --> 00:01:04.042
So that means inside this layout here,

19
00:01:04.042 --> 00:01:06.800
I'm gonna have all three
of those as arguments.

20
00:01:06.800 --> 00:01:11.402
The page itself, that's children, rsvps,

21
00:01:11.402 --> 00:01:16.127
that's rsvps, the events, that's events.

22
00:01:16.127 --> 00:01:18.268
These are now arguments inside my layout.

23
00:01:18.268 --> 00:01:19.403
I can do whatever I want with them.

24
00:01:19.403 --> 00:01:20.718
I can put them wherever I want.

25
00:01:24.305 --> 00:01:27.970
&gt;&gt; Scott Moss: So children is literally
a slot that you don't have the name,

26
00:01:27.970 --> 00:01:30.373
it's the route that you're on, okay?

27
00:01:30.373 --> 00:01:33.526
So what we're gonna do is we're gonna go
to our layout, we're gonna do some stuff.

28
00:01:33.526 --> 00:01:35.690
I'll talk about this path
name thing in a little bit,

29
00:01:35.690 --> 00:01:38.879
because we actually do talk about it
a little later but I'll glance over here.

30
00:01:38.879 --> 00:01:42.213
The objective here is like, hey,
if you're on the dashboard,

31
00:01:42.213 --> 00:01:45.116
we wanna show you this dashboard
view with these slots,

32
00:01:45.116 --> 00:01:49.156
if you're not on the dashboard,
then we'll just load the children, okay?

33
00:01:49.156 --> 00:01:54.010
So let's do that,
let's go to our layout on the route, or

34
00:01:54.010 --> 00:01:58.381
I'm sorry,
should be the layout on the dashboard.

35
00:02:00.739 --> 00:02:01.989
&gt;&gt; Scott Moss: All right,
we gotta make it, let's do it.

36
00:02:01.989 --> 00:02:06.005
So, layout on the dashboard, layout.tsx.

37
00:02:10.573 --> 00:02:13.825
&gt;&gt; Scott Moss: And we don't have
to make this one a client for

38
00:02:13.825 --> 00:02:19.487
the route segments or the parallel routes
to work, that is not a requirement.

39
00:02:19.487 --> 00:02:23.148
The only reason I made this a client
is cuz this is the only way to get

40
00:02:23.148 --> 00:02:26.157
the current path that you're on,
is with this hook.

41
00:02:26.157 --> 00:02:28.883
And hooks only work on client components.

42
00:02:28.883 --> 00:02:32.337
You might be asking why they always
get their route on the server side?

43
00:02:32.337 --> 00:02:35.984
There is no good way to do that
without some drawbacks in Next.js.

44
00:02:35.984 --> 00:02:39.669
Getting the current route on the server
side, sure, I can access the request,

45
00:02:39.669 --> 00:02:42.309
I can access the headers and
get the URL from the headers,

46
00:02:42.309 --> 00:02:46.067
I can go into my middleware and attach the
next URL to it and get it from the header.

47
00:02:46.067 --> 00:02:50.980
But as soon as you often see those dynamic
functions like headers and cookies,

48
00:02:50.980 --> 00:02:52.767
as we'll talk about later,

49
00:02:52.767 --> 00:02:57.401
you kinda break all the optimizations
that Next.js gift to you for free.

50
00:02:57.401 --> 00:03:00.934
So there's no good way of
getting the URL on server side,

51
00:03:00.934 --> 00:03:03.447
you most likely have to do a client side.

52
00:03:03.447 --> 00:03:05.953
So that's why I have this.

53
00:03:05.953 --> 00:03:10.694
Now, I could keep this as a server
component, get rid of this,

54
00:03:10.694 --> 00:03:13.747
go make a component that uses this hook.

55
00:03:13.747 --> 00:03:18.905
And have render props and
then render my server component

56
00:03:18.905 --> 00:03:23.203
as children of the component
that has this, and

57
00:03:23.203 --> 00:03:28.800
that might work, but again,
that's a little too much work.

58
00:03:28.800 --> 00:03:30.098
I'm not doing all that.

59
00:03:30.098 --> 00:03:33.815
So just to avoid the client
component thing.

60
00:03:33.815 --> 00:03:39.695
So, let's do that, I'm gonna say,
use Clients, this is our Dashboard.

61
00:03:47.061 --> 00:03:50.014
&gt;&gt; Scott Moss: One thing to note is,
when I first created this,

62
00:03:50.014 --> 00:03:52.475
I actually had the dashboard as a group.

63
00:03:52.475 --> 00:03:54.382
I didn't have it part of the URL segment,

64
00:03:54.382 --> 00:03:58.098
cuz I think it's gross to have slash
dashboard and URL, it's kinda redundant.

65
00:03:58.098 --> 00:04:03.179
But what I realized is that parallel
routes don't work inside groups,

66
00:04:03.179 --> 00:04:06.411
they have to actually
be part of URL segment.

67
00:04:06.411 --> 00:04:09.848
So if this dashboard was a route group
like this, you would not be able to do

68
00:04:09.848 --> 00:04:12.787
parallel routes, or
at least in my testing, I was not able to,

69
00:04:12.787 --> 00:04:16.244
until I made this actual route segment
by getting rid of the parentheses.

70
00:04:16.244 --> 00:04:20.607
So you might run into that,
If you don't, let me know, so

71
00:04:20.607 --> 00:04:24.897
I can see how the hell you got past that,
cuz I couldn't.

72
00:04:24.897 --> 00:04:27.950
Okay, so we have our children.

73
00:04:30.571 --> 00:04:32.481
&gt;&gt; Scott Moss: We're going to
make a folder called events, so

74
00:04:32.481 --> 00:04:33.831
I'm just gonna say events here.

75
00:04:33.831 --> 00:04:39.486
We're gonna have rsvps, so
I'm gonna say that, okay?

76
00:04:39.486 --> 00:04:42.406
I'm gonna use this use path name thing for

77
00:04:42.406 --> 00:04:47.257
now, just know that this is a string
that returns the current route.

78
00:04:47.257 --> 00:04:51.001
That's literally it, it's a string
that returns the current route.

79
00:04:51.001 --> 00:04:54.122
That's what it,
it is nothing more than that.

80
00:04:54.122 --> 00:04:56.380
We'll talk more about it later.

81
00:04:56.380 --> 00:05:01.078
And then we're gonna return a component
here, I have a component called Shell.

82
00:05:01.078 --> 00:05:06.946
You can just import that from, make sure
you import Shell from component Shell and

83
00:05:06.946 --> 00:05:10.617
not from Lucide react,
which is the icon library.

84
00:05:10.617 --> 00:05:13.571
That'll give you an icon,
you don't want that, you want this one.

85
00:05:13.571 --> 00:05:15.117
Why are there so
many components called Shell?

86
00:05:15.117 --> 00:05:19.712
I don't know, but this is our app Shell,
this is like, the sidebar plus the toolbar

87
00:05:19.712 --> 00:05:24.012
is the shell, and then wherever you put
in between as children is the the body.

88
00:05:24.012 --> 00:05:26.419
So that's what we're putting here.

89
00:05:26.419 --> 00:05:29.246
And then what we wanna do is,
if the path is dashboard,

90
00:05:29.246 --> 00:05:31.957
then we want to render
the dashboard with the slots.

91
00:05:31.957 --> 00:05:36.027
If not, then just render the children,
so not every page has that layout.

92
00:05:36.027 --> 00:05:39.842
We only want the main page, which in
our case is /dashboard to have that.

93
00:05:39.842 --> 00:05:41.283
So that's what we're gonna do.

94
00:05:41.283 --> 00:05:46.240
We're gonna say path = /dashboard.

95
00:05:49.735 --> 00:05:52.904
&gt;&gt; Scott Moss: If so,
we're gonna do some stuff, if not,

96
00:05:52.904 --> 00:05:57.545
we're just gonna say, cool beans,
just render the children.

97
00:06:01.915 --> 00:06:03.207
&gt;&gt; Scott Moss: The children here.

98
00:06:05.294 --> 00:06:08.157
&gt;&gt; Scott Moss: And up here,
what we're gonna do is,

99
00:06:08.157 --> 00:06:10.668
let's wrap everything in a div.

100
00:06:10.668 --> 00:06:13.712
It's tailwind, so everything's a div,

101
00:06:13.712 --> 00:06:18.540
and you don't have to write all
these divs, go ahead and copy that.

102
00:06:21.649 --> 00:06:22.364
&gt;&gt; Scott Moss: Here we go.

103
00:06:24.769 --> 00:06:28.405
&gt;&gt; Scott Moss: Okay, so we have all
this if you tried to render it,

104
00:06:28.405 --> 00:06:33.582
it'll probably break because we don't
have any of the route slots yet.

105
00:06:33.582 --> 00:06:35.125
So let's go make those.

106
00:06:35.125 --> 00:06:41.335
So what we'll do is in our dashboard,
we'll make a new folder,

107
00:06:41.335 --> 00:06:47.545
we'll say, events,
inside of there we'll make a page.tsx,

108
00:06:47.545 --> 00:06:52.030
we'll make another
folder in the dashboard,

109
00:06:52.030 --> 00:06:55.494
we'll call it rsvps, so @rsvps.

110
00:06:55.494 --> 00:06:57.570
Also put a page.tsx in there.

111
00:07:00.668 --> 00:07:05.495
&gt;&gt; Scott Moss: Okay,
let's just make some default pages,

112
00:07:05.495 --> 00:07:09.441
I'm just gonna make an events slot.

113
00:07:09.441 --> 00:07:11.975
You can call whatever you want,
the name is not important.

114
00:07:11.975 --> 00:07:15.846
I'll probably have a different
name in the notes.

115
00:07:15.846 --> 00:07:20.810
And you just need to return something,
so I'll just return events here, just so

116
00:07:20.810 --> 00:07:22.782
we can see it, I'll save that.

117
00:07:22.782 --> 00:07:25.928
I'm gonna go to rsvp,
I'm gonna do the same thing.

118
00:07:25.928 --> 00:07:31.042
I'm gonna rename all this to rsvps,
like that,

119
00:07:31.042 --> 00:07:35.919
just putting some
placeholder stuff in here.

120
00:07:35.919 --> 00:07:38.442
You put whatever you want, just
something that shows up on the screen so

121
00:07:38.442 --> 00:07:39.548
we can actually see the slots.

122
00:07:44.774 --> 00:07:49.181
&gt;&gt; Scott Moss: Okay, so let's go see
if this does what we think it does.

123
00:07:49.181 --> 00:07:54.836
Which should, if we go to dashboard,
should show the app shell on the right,

124
00:07:54.836 --> 00:07:58.229
should be a page split
up into three sections,

125
00:07:58.229 --> 00:08:01.282
one big one on the left, two on the right.

126
00:08:01.282 --> 00:08:04.387
If not, we broke something.

127
00:08:04.387 --> 00:08:07.020
We might have to make the default pages,
but let's check it out.

128
00:08:07.020 --> 00:08:09.907
We'll see.
We might get away with it.

129
00:08:09.907 --> 00:08:13.483
So I'm already signed in,
I'm sure someone's gonna go to /dashboard.

130
00:08:13.483 --> 00:08:15.935
If you're not,
make sure you sign in or sign up.

131
00:08:15.935 --> 00:08:17.047
And yeah, there we go.

132
00:08:17.047 --> 00:08:23.246
So, there's my homepage,
the sections are there,

133
00:08:23.246 --> 00:08:29.876
but I don't see the actual
content of the slot slowly up.

134
00:08:29.876 --> 00:08:34.493
So I would expect to see events here,
I would expect to see this here.

135
00:08:34.493 --> 00:08:40.037
So, I don't know why
that's not doing that.

136
00:08:40.037 --> 00:08:43.796
I might have to restart this since
I just made some new folders.

137
00:08:43.796 --> 00:08:46.959
So, sometimes when you make
new folders in Next.js or

138
00:08:46.959 --> 00:08:50.209
you delete folders,
you have to rebuild it to catch it.

139
00:08:50.209 --> 00:08:51.464
So I'm gonna try that.

140
00:08:51.464 --> 00:08:54.234
If not, we'll just keep building it and

141
00:08:54.234 --> 00:08:58.474
maybe it'll resolve itself once
we actually add the things.

142
00:08:58.474 --> 00:09:00.574
That was it, I just needed a rebuild.

143
00:09:00.574 --> 00:09:06.241
So there you go, now we have independent

144
00:09:06.241 --> 00:09:10.916
pages as sections on one layout.

145
00:09:10.916 --> 00:09:13.195
You might be asking yourself,
why the hell would I do this?

146
00:09:13.195 --> 00:09:17.167
I can just do this myself,
I can just go get the data, do some CSS,

147
00:09:17.167 --> 00:09:22.082
make a query for this, make a query for
this one, make a query for this third one,

148
00:09:22.082 --> 00:09:24.058
and just put it on a page myself.

149
00:09:24.058 --> 00:09:27.627
Well, yeah, you can, but you have to think
about everything that comes with that.

150
00:09:27.627 --> 00:09:29.967
Okay, you got a loading state for
this one.

151
00:09:29.967 --> 00:09:31.148
You got a loading state for this one.

152
00:09:31.148 --> 00:09:32.306
You got a loading state for this one.

153
00:09:32.306 --> 00:09:34.065
You have an error state for each one.

154
00:09:34.065 --> 00:09:35.211
You have a fallback.

155
00:09:35.211 --> 00:09:38.668
You have all these different things
that you will have to write code for

156
00:09:38.668 --> 00:09:40.261
if you want a great experience.

157
00:09:40.261 --> 00:09:44.194
By making each one of these a page,
you don't have to do any of that,

158
00:09:44.194 --> 00:09:47.989
you get it for free because in Nextjs,
as you'll see in a minute,

159
00:09:47.989 --> 00:09:51.453
all we have to do is just make
a loading file or an error file.

160
00:09:51.453 --> 00:09:53.352
And Nextjs will handle that for us.

161
00:09:53.352 --> 00:09:55.147
It'll show the loading
when it needs to show,

162
00:09:55.147 --> 00:09:56.860
it'll show the error
when it needs to show.

163
00:09:56.860 --> 00:10:00.606
You don't have to write any logic for
that, and it all happens server-side,

164
00:10:00.606 --> 00:10:04.430
which is great for things like SEO,
which for this example, doesn't matter.

165
00:10:04.430 --> 00:10:05.893
But, yeah, things like that.

166
00:10:05.893 --> 00:10:08.957
So, yes,
you could just do it yourself, but

167
00:10:08.957 --> 00:10:11.790
you can also make a web app without React.

168
00:10:11.790 --> 00:10:13.430
So [LAUGH] it doesn't
mean you should do it.

169
00:10:13.430 --> 00:10:14.174
[LAUGH].

170
00:10:14.174 --> 00:10:19.841
&gt;&gt; Student: So to clarify Next.js is
mapping the folder named events and

171
00:10:19.841 --> 00:10:25.520
rsvp is to the prop events and
rsvps in the layout component?

172
00:10:25.520 --> 00:10:28.093
&gt;&gt; Scott Moss: Correct,
they are the exact same names.

173
00:10:28.093 --> 00:10:31.302
If I change their folder names,
I have to change them in the layout, and

174
00:10:31.302 --> 00:10:32.491
not the other way around.

