WEBVTT

1
00:00:00.000 --> 00:00:02.690
&gt;&gt; Speaker 1: So for the prerequisites,
like I said, you only need two things.

2
00:00:02.690 --> 00:00:05.625
Node.js version 20, minimal.

3
00:00:05.625 --> 00:00:07.523
And then get, that's it.

4
00:00:07.523 --> 00:00:11.124
Doesn't matter if you're on Windows,
doesn't matter if you're on Linux Mac,

5
00:00:11.124 --> 00:00:13.644
just those two things,
cuz it's just the Next.js app.

6
00:00:13.644 --> 00:00:17.510
So I already said this at the beginning,
but fork the repo, clone it, pull it down.

7
00:00:17.510 --> 00:00:19.140
Make sure you do an NPM install.

8
00:00:19.140 --> 00:00:23.638
I have a package lock in there, which is
used by NPM to make sure all the versions

9
00:00:23.638 --> 00:00:27.604
of all the dependencies resolve to
the same versions that I have now.

10
00:00:27.604 --> 00:00:31.590
If you do yarn, if you do bun to install,
it'll install them.

11
00:00:31.590 --> 00:00:34.935
But in the future, when those things
get upgraded and have breaking changes,

12
00:00:34.935 --> 00:00:37.888
you'll most likely, you could also
have breaking changes as well.

13
00:00:37.888 --> 00:00:40.103
So if you want to, I mean,
I guess technically,

14
00:00:40.103 --> 00:00:41.730
you shouldn't use a package JSON.

15
00:00:41.730 --> 00:00:43.963
Package JSON has a carrot
character in front of it for

16
00:00:43.963 --> 00:00:46.570
preventing it from having like
breaking change downloads.

17
00:00:46.570 --> 00:00:50.890
But you can't trust developers will
introduce breaking changes and miners and

18
00:00:50.890 --> 00:00:52.447
patches which they do a lot.

19
00:00:52.447 --> 00:00:53.796
So just don't trust it.

20
00:00:53.796 --> 00:00:58.147
Just use NPM to install the packages and
then if you wanna use bind or

21
00:00:58.147 --> 00:01:00.799
something else to actually execute it.

22
00:01:00.799 --> 00:01:03.241
I've tested it in the latest version
of Bun, I use Bun for everything.

23
00:01:03.241 --> 00:01:08.501
It works just fine, but we'll be using
NPM and Node for this entire course.

24
00:01:08.501 --> 00:01:10.509
The next thing is setting up a database.

25
00:01:10.509 --> 00:01:13.889
I went back and forth on whether or not,
should I just do it in memory database?

26
00:01:13.889 --> 00:01:15.467
Should I just mock this out?

27
00:01:15.467 --> 00:01:16.338
Should I just fake it?

28
00:01:16.338 --> 00:01:20.528
And I just feel like I wasn't, to really
solidify this and make this feel like

29
00:01:20.528 --> 00:01:24.660
a production and get the best value is
best just to have a real database here.

30
00:01:24.660 --> 00:01:27.136
Your database was so
easy to set up these days, why not?

31
00:01:27.136 --> 00:01:31.484
In the last courses I taught we set up
a database and it was super simple.

32
00:01:31.484 --> 00:01:32.970
So we're gonna use the same one.

33
00:01:32.970 --> 00:01:36.078
And that's from a database
provider called Turso.

34
00:01:36.078 --> 00:01:38.885
If you've never heard of Turso,
it's pretty cool.

35
00:01:38.885 --> 00:01:41.725
It's basically like hosted sequel lite.

36
00:01:41.725 --> 00:01:44.932
In fact, they forked SQLite and
made something called lib SQL.

37
00:01:44.932 --> 00:01:47.710
If you've never heard of SQL Lite,
it's exactly what it sounds like.

38
00:01:47.710 --> 00:01:48.717
It's like like SQL.

39
00:01:48.717 --> 00:01:50.966
It's like SQL but in a file.

40
00:01:50.966 --> 00:01:52.326
So it's very portable.

41
00:01:52.326 --> 00:01:54.641
You can use it locally on a phone.

42
00:01:54.641 --> 00:01:57.432
You can use it locally on a browser,
you can put it on the edge.

43
00:01:57.432 --> 00:01:59.972
You can put it on a server,
it kind of just goes everywhere.

44
00:01:59.972 --> 00:02:02.068
It's a pretty useful database, but

45
00:02:02.068 --> 00:02:04.713
no one's been ever able
to scale it until now.

46
00:02:04.713 --> 00:02:06.656
There's other companies that
kind of do the same thing.

47
00:02:06.656 --> 00:02:09.567
We're just using this one because
they have a generous free plan and

48
00:02:09.567 --> 00:02:10.857
it's very easy to get set up.

49
00:02:10.857 --> 00:02:13.050
So that's why we're using it.

50
00:02:13.050 --> 00:02:16.790
As far as getting set up,
make an account, it's free.

51
00:02:16.790 --> 00:02:18.792
Once you do that, I already have one.

52
00:02:18.792 --> 00:02:19.946
So I'm gonna log in.

53
00:02:19.946 --> 00:02:23.561
I'm just gonna walk you
through some of this stuff.

54
00:02:23.561 --> 00:02:27.192
If you're signing up for the first time,
it'll take you through an onboarding

55
00:02:27.192 --> 00:02:30.786
process where actually to create a
database, go ahead and create a database.

56
00:02:30.786 --> 00:02:33.761
There's like an option known
that it says create a replica.

57
00:02:33.761 --> 00:02:34.621
You don't need that.

58
00:02:34.621 --> 00:02:36.779
You don't need a replica,
just create a database.

59
00:02:36.779 --> 00:02:38.907
You can call it whatever you want,
doesn't matter.

60
00:02:38.907 --> 00:02:41.262
But eventually they'll
dump you to this screen.

61
00:02:43.071 --> 00:02:46.041
&gt;&gt; Speaker 1: Once you get to this screen,
you can just click on your databases,

62
00:02:46.041 --> 00:02:47.433
click on the one that you want.

63
00:02:47.433 --> 00:02:50.229
In my case it's called party.

64
00:02:50.229 --> 00:02:52.764
And you just wanna keep track of this URL,

65
00:02:52.764 --> 00:02:57.479
we're gonna need to add this URL into
our environment variables in our repo.

66
00:02:57.479 --> 00:02:59.945
So we can actually have a database so
here's your URL.

67
00:02:59.945 --> 00:03:03.102
And then the last thing is there's
a button here that you can hit that'll

68
00:03:03.102 --> 00:03:04.462
generate adjacent web token.

69
00:03:04.462 --> 00:03:06.753
We also need to add that to
our environment variable.

70
00:03:06.753 --> 00:03:09.990
So that's really it as
far as the database.

71
00:03:09.990 --> 00:03:16.290
So again, turtle, sign up,
click databases, click your database,

72
00:03:16.290 --> 00:03:21.021
keep note of this URL,
generate a token, copy that.

73
00:03:21.021 --> 00:03:22.543
You can generate as many
tokens as you want.

74
00:03:22.543 --> 00:03:27.868
Once you have that, make a .env on the
root of that repo, and you just need these

75
00:03:27.868 --> 00:03:33.375
two environment variables,
TURSO_CONNECTION_URL, TURSO_AUTH_TOKEN.

76
00:03:33.375 --> 00:03:35.959
And yeah, you put the connection here
all there, you put the token there.

77
00:03:35.959 --> 00:03:37.912
I already have mine set up.

78
00:03:37.912 --> 00:03:42.186
The last step is once you add your .env
is you need to push the schema up to

79
00:03:42.186 --> 00:03:43.123
the database.

80
00:03:43.123 --> 00:03:44.994
So this is how you know you're done.

81
00:03:44.994 --> 00:03:50.814
So what you need to do once you add
your .env file, there is a command and

82
00:03:50.814 --> 00:03:57.135
a package JSON you can run that by saying
npm run db:push, run that command.

83
00:03:57.135 --> 00:03:59.604
Yours might say exactly what mine says or
not,

84
00:03:59.604 --> 00:04:03.482
my database already has this schema,
so the output might be different.

85
00:04:03.482 --> 00:04:05.336
But you just wanna say yes.

86
00:04:05.336 --> 00:04:08.550
I wanna execute all these statements.

87
00:04:08.550 --> 00:04:12.119
Once you do that, it's going to
attempt to apply those changes.

88
00:04:12.119 --> 00:04:15.458
You shouldn't have any issues since
it's a brand new database and

89
00:04:15.458 --> 00:04:17.970
you know you're done when
it says changes apply.

90
00:04:17.970 --> 00:04:20.702
That's when you know your database
is in sync with your schema.

91
00:04:20.702 --> 00:04:21.930
The schema is already written.

92
00:04:21.930 --> 00:04:24.102
We won't be writing
database schemas today.

93
00:04:24.102 --> 00:04:26.412
It's not a database course but if you're
curious, you can go check it out.

94
00:04:26.412 --> 00:04:30.423
Hopefully, everybody had a chance
to set up their Turso database and

95
00:04:30.423 --> 00:04:31.607
sync their schema.

96
00:04:31.607 --> 00:04:35.013
That is the last configuration with
databases that we will be doing on

97
00:04:35.013 --> 00:04:35.726
this course.

98
00:04:35.726 --> 00:04:40.046
Although we will be writing a lot of
database queries using an ORM called

99
00:04:40.046 --> 00:04:40.702
Drizzle.

100
00:04:40.702 --> 00:04:42.875
If you don't have any experience
with that, that's totally fine.

101
00:04:42.875 --> 00:04:47.342
Like I said earlier, the code is in the
notes and on Github, so just follow along.

