WEBVTT

1
00:00:00.159 --> 00:00:04.349
&gt;&gt; Scott Moss: So the last thing we'll do,
which is kinda just like,

2
00:00:04.349 --> 00:00:08.358
now apply everything you learn and
go build this is,

3
00:00:08.358 --> 00:00:12.930
we have two more pages in our
app that kinda needs some love.

4
00:00:12.930 --> 00:00:15.897
We really haven't done anything on them,
and we really should.

5
00:00:15.897 --> 00:00:20.564
We should go fill these pages with
all the data and the JSX they need.

6
00:00:20.564 --> 00:00:22.170
So let's go in and do those, and

7
00:00:22.170 --> 00:00:26.231
that way we can kinda just apply all the
things we just did on two different pages.

8
00:00:26.231 --> 00:00:29.151
So the first page is
gonna be the events page.

9
00:00:29.151 --> 00:00:31.174
I already made it just on mind.

10
00:00:31.174 --> 00:00:35.445
It just says no, and
actually it's gonna be three pages.

11
00:00:35.445 --> 00:00:37.894
There's gonna be the events page
where it list all the events.

12
00:00:37.894 --> 00:00:43.291
There's gonna be a event page where
you can get one event by one ID.

13
00:00:43.291 --> 00:00:47.787
So we need to make some server
functions for those two.

14
00:00:47.787 --> 00:00:53.266
And then there's gonna be a,
&gt;&gt; Scott Moss: An attendees

15
00:00:53.266 --> 00:00:54.880
page that lists all the attendees.

16
00:00:54.880 --> 00:00:56.126
So that one needs a function too.

17
00:00:56.126 --> 00:00:58.504
So let's go do that.

18
00:00:58.504 --> 00:01:01.003
So first we'll go to the utils events.

19
00:01:04.323 --> 00:01:07.477
&gt;&gt; Scott Moss: And we're gonna
make some more functions in here.

20
00:01:07.477 --> 00:01:12.443
So the other function we're going to
make is going to be, getAllEvents.

21
00:01:12.443 --> 00:01:14.085
This one's super easy.

22
00:01:14.085 --> 00:01:20.648
So getAllEvents.

23
00:01:20.648 --> 00:01:26.030
I'm just gonna go ahead and add my memoize
now cuz I already know I'm doing it.

24
00:01:27.988 --> 00:01:33.276
&gt;&gt; Scott Moss: And getAllEvents takes
in a userId, which is a string.

25
00:01:35.732 --> 00:01:42.729
&gt;&gt; Scott Moss: All it's gonna do after
delay, of course, is the events.

26
00:01:48.196 --> 00:01:53.262
&gt;&gt; Scott Moss: Equals await db.query.id,
okay,

27
00:01:53.262 --> 00:01:59.604
after that, db.query.events.findMany.

28
00:01:59.604 --> 00:02:01.120
Where?

29
00:02:03.250 --> 00:02:09.088
&gt;&gt; Scott Moss: Equals events.createdById

30
00:02:09.088 --> 00:02:13.759
is userId, like that.

31
00:02:13.759 --> 00:02:15.461
So that'll give us our events, and

32
00:02:15.461 --> 00:02:21.977
then just order by,
&gt;&gt; Scott Moss: Let's look at,

33
00:02:21.977 --> 00:02:22.963
what do I have here?

34
00:02:22.963 --> 00:02:24.501
Ascending event start on.

35
00:02:24.501 --> 00:02:30.372
Okay, so
let's say ascending events.startOn.

36
00:02:34.254 --> 00:02:39.227
&gt;&gt; Scott Moss: So that'd be our query is
just gonna go get all the events where

37
00:02:39.227 --> 00:02:43.723
the createdById of that event
equals the given userId,

38
00:02:43.723 --> 00:02:48.425
and then orderBy an ascending
order of events.startOn.

39
00:02:51.107 --> 00:02:54.214
&gt;&gt; Scott Moss: So
it'll show the oldest one on top.

40
00:02:58.533 --> 00:03:02.693
&gt;&gt; Scott Moss: Okay, and
then just need to return that.

41
00:03:02.693 --> 00:03:06.032
I'm just gonna get rid of the await and
just return it I guess.

42
00:03:06.032 --> 00:03:09.927
And then we need to set
up our cache stuff here.

43
00:03:09.927 --> 00:03:13.152
So I'm gonna say, persist true,

44
00:03:13.152 --> 00:03:17.836
that's the main one, and
then revalidateTags.

45
00:03:19.780 --> 00:03:23.598
&gt;&gt; Scott Moss: This will be events.

46
00:03:25.934 --> 00:03:30.227
&gt;&gt; Scott Moss: And because we already have
a mutation where we create events with

47
00:03:30.227 --> 00:03:34.284
that plus button and
we revalidated that slot for the events,

48
00:03:34.284 --> 00:03:37.658
I also need to revalidate this page for
the events.

49
00:03:37.658 --> 00:03:43.462
So I'm gonna go back to our events action
file where we're gonna revalidate tag,

50
00:03:43.462 --> 00:03:46.841
I'm gonna revalidate another tag for
events.

51
00:03:49.340 --> 00:03:53.641
&gt;&gt; Scott Moss: So that page also gets
revalidated when a new event gets created.

52
00:04:02.275 --> 00:04:04.242
&gt;&gt; Scott Moss: Okay,
we got to getAllEvents.

53
00:04:06.040 --> 00:04:09.904
&gt;&gt; Scott Moss: Now we must go ahead and
get the one for the get one event as well.

54
00:04:09.904 --> 00:04:14.034
This one's gonna be slightly
different on the key for

55
00:04:14.034 --> 00:04:17.725
the revalidation because
it has a event ID.

56
00:04:17.725 --> 00:04:20.055
So we need to create a key based on that.

57
00:04:22.447 --> 00:04:29.269
&gt;&gt; Scott Moss: GetOneEvent
= memoize(async.

58
00:04:32.834 --> 00:04:37.098
&gt;&gt; Scott Moss: And
this takes in a userId and

59
00:04:37.098 --> 00:04:40.480
an eventId like that.

60
00:04:43.626 --> 00:04:45.154
&gt;&gt; Scott Moss: And
then this one's pretty simple,

61
00:04:45.154 --> 00:04:48.022
you just do a fine first
where those two things match.

62
00:04:48.022 --> 00:04:53.251
So I'll await a delay and

63
00:04:53.251 --> 00:04:56.987
I'll just return

64
00:04:56.987 --> 00:05:05.956
db.query.events.findFirst where and

65
00:05:05.956 --> 00:05:13.937
eq(events.id is equal to eventId.

66
00:05:13.937 --> 00:05:19.549
And then the other one is equal

67
00:05:19.549 --> 00:05:26.517
to events.createdById is userId.

68
00:05:28.817 --> 00:05:31.860
&gt;&gt; Scott Moss: There we go, so I got that.

69
00:05:36.018 --> 00:05:39.911
&gt;&gt; Scott Moss: And
then for this other stuff,

70
00:05:39.911 --> 00:05:45.917
the cache situation,
and say, persist true.

71
00:05:45.917 --> 00:05:50.405
And for the revalidation tags,
this has a userId here.

72
00:05:52.141 --> 00:05:56.015
&gt;&gt; Scott Moss: I would need that one,
cuz here's the eventId.

73
00:05:56.015 --> 00:06:01.701
Here, I do need that, so I can say,
this is events, eventId.

74
00:06:01.701 --> 00:06:05.658
So we're gonna go to
dashboard events page, .TSX.

75
00:06:05.658 --> 00:06:08.081
I think I already have it in mine,
it just does no.

76
00:06:10.848 --> 00:06:14.868
&gt;&gt; Scott Moss: Not to be confused with at
events, just events, two different things.

77
00:06:14.868 --> 00:06:16.545
And I'm just gonna put this in here.

78
00:06:16.545 --> 00:06:19.723
So this is gonna get
the current user as always,

79
00:06:19.723 --> 00:06:23.466
it's gonna get all the events,
the thing we just made.

80
00:06:23.466 --> 00:06:27.102
And just gonna put it here with the name.

81
00:06:31.831 --> 00:06:33.741
&gt;&gt; Scott Moss: And
then when you click on one,

82
00:06:33.741 --> 00:06:37.495
it'll take you to the event detail for
that.

83
00:06:37.495 --> 00:06:38.511
So let's make a route for that.

84
00:06:38.511 --> 00:06:43.852
So in events, we'll make a new folder,
call it bracket Id.

85
00:06:43.852 --> 00:06:45.762
This is for our parameters.

86
00:06:45.762 --> 00:06:51.838
And inside of there,
we'll make our page.tsx, like that.

87
00:06:55.552 --> 00:06:59.065
&gt;&gt; Scott Moss: And then for
this, I'll just grab this JSX.

88
00:07:02.763 --> 00:07:04.130
&gt;&gt; Scott Moss: There you go.

89
00:07:04.130 --> 00:07:08.111
If you wanna get the incoming
parameter for a dynamic route,

90
00:07:08.111 --> 00:07:11.868
it's always passed in on
the params objects of the page.

91
00:07:11.868 --> 00:07:12.901
It's always that.

92
00:07:12.901 --> 00:07:17.246
So it'll be params.id
because I called it id here.

93
00:07:17.246 --> 00:07:20.593
If I called this anything else,
this will be perams.anythingelse.

94
00:07:21.884 --> 00:07:26.267
So let's check that out,
see if that works.

95
00:07:26.267 --> 00:07:29.186
Let's go to our events.

96
00:07:31.140 --> 00:07:35.925
&gt;&gt; Scott Moss: Boom, boom, boom,
okay, so that seems to be working,

97
00:07:35.925 --> 00:07:40.022
let's go to this event, see what happens.

98
00:07:40.022 --> 00:07:41.079
There it is.

99
00:07:41.079 --> 00:07:44.551
The reason it took so long that time
is because we're in dev mode and

100
00:07:44.551 --> 00:07:47.589
that that page didn't get
compiled until I clicked on it.

101
00:07:47.589 --> 00:07:51.414
So you can see right here it took 307
milliseconds to compile that page cuz

102
00:07:51.414 --> 00:07:55.803
we're in dev mode, and the pages don't get
compiled until you hit them at least once.

103
00:07:55.803 --> 00:07:59.723
In production,
that gets compiled before you deploy, so

104
00:07:59.723 --> 00:08:01.964
that delay would have happened.

105
00:08:01.964 --> 00:08:05.254
There still is going to be a delay,
it just won't be that long.

106
00:08:05.254 --> 00:08:09.873
If I go back here, there's still,
for sure, going to be a delay here.

107
00:08:09.873 --> 00:08:16.645
That was a delay in the data fetching, but
the actual component is already compiled.

108
00:08:16.645 --> 00:08:20.216
The reason that looks like that is
we don't have a loading, right,

109
00:08:20.216 --> 00:08:21.668
it's just sitting there.

110
00:08:21.668 --> 00:08:24.694
We're not streaming this down,
so I clicked it.

111
00:08:25.894 --> 00:08:28.302
Let's see how long it took because
we didn't enable suspense,

112
00:08:28.302 --> 00:08:29.292
we didn't do streaming.

113
00:08:29.292 --> 00:08:33.034
So it's waiting to transition, to go.

114
00:08:33.034 --> 00:08:36.185
So you need to add a loading TSX
to prevent that from happening.

115
00:08:36.185 --> 00:08:39.499
So we can transition, show the loader,
and then it'll come in,

116
00:08:39.499 --> 00:08:41.144
it'll stream in when it comes.

117
00:08:41.144 --> 00:08:46.090
So if you don't want that,
add a loading TSX.

118
00:08:46.090 --> 00:08:48.653
So why did the events page,
when you redirected it,

119
00:08:48.653 --> 00:08:50.504
why does that one have a loading?

120
00:08:50.504 --> 00:08:53.736
&gt;&gt; Student  1: Is it picking up
the dashboard parents loading?

121
00:08:53.736 --> 00:08:54.584
&gt;&gt; Scott Moss: This events page?

122
00:08:54.584 --> 00:08:59.262
&gt;&gt; Student  1: Yeah, if you hard refresh
and reload that, it has a loader.

123
00:08:59.262 --> 00:08:59.961
&gt;&gt; Scott Moss: It does, yeah.

124
00:08:59.961 --> 00:09:01.176
&gt;&gt; Student  1: They don't have a loading.

125
00:09:01.176 --> 00:09:02.215
&gt;&gt; Scott Moss: Do I have a loading here?

126
00:09:02.215 --> 00:09:05.335
&gt;&gt; Student  1: No, cuz I don't
have one and it's still doing it.

127
00:09:05.335 --> 00:09:10.546
So is it picking that up from the parent
somehow, the parent layout, or?

128
00:09:10.546 --> 00:09:14.378
&gt;&gt; Scott Moss: No, I don't think,
I mean, we can test it out, let's see.

129
00:09:14.378 --> 00:09:15.346
I don't think so.

130
00:09:15.346 --> 00:09:20.832
&gt;&gt; Student  1: Yeah,
cuz it shouldn't be picking up.

131
00:09:20.832 --> 00:09:25.112
&gt;&gt; Scott Moss: There is a dashboard,
events loading page.

132
00:09:25.112 --> 00:09:27.777
&gt;&gt; Student  1: Yeah,
is it picking up from the ad events one?

133
00:09:27.777 --> 00:09:28.335
&gt;&gt; Scott Moss: That'd be funny.

134
00:09:28.335 --> 00:09:31.692
Maybe it does go up to its,
if it doesn't, no, I don't know.

135
00:09:31.692 --> 00:09:32.483
&gt;&gt; Student  1: Okay, yeah, it is.

136
00:09:32.483 --> 00:09:34.094
&gt;&gt; Scott Moss: Yeah, it is,
it is picking that one up.

137
00:09:36.582 --> 00:09:39.862
&gt;&gt; Scott Moss: I didn't know
it picked up its ancestors.

138
00:09:39.862 --> 00:09:44.625
Then in that, I don't know,
I think that's a bug.

139
00:09:44.625 --> 00:09:47.385
&gt;&gt; Student  1: Okay, cuz then you'd
assume that the ID one would also

140
00:09:47.385 --> 00:09:48.891
pick up the ancestors, but.

141
00:09:48.891 --> 00:09:52.861
&gt;&gt; Scott Moss: Right, cuz it only goes
one level up, doesn't go two levels up.

142
00:09:52.861 --> 00:09:54.916
That's kinda inconsistent.

143
00:09:54.916 --> 00:09:56.501
Yeah, that could very well be a bug.

144
00:09:57.741 --> 00:09:58.819
I've actually never seen them before.

145
00:09:58.819 --> 00:10:00.518
&gt;&gt; Student  1: No,
the ID won't have one too.

146
00:10:00.518 --> 00:10:01.049
&gt;&gt; Student  2: Yeah.

147
00:10:01.049 --> 00:10:01.558
&gt;&gt; Scott Moss: It does?

148
00:10:01.558 --> 00:10:02.530
&gt;&gt; Student  1: When I hard refresh.

149
00:10:02.530 --> 00:10:05.739
&gt;&gt; Scott Moss: Then, I know there's
a way to do a global loading.

150
00:10:05.739 --> 00:10:09.458
You specifically have to say,
this is the global loading indicator,

151
00:10:09.458 --> 00:10:12.158
and that one will work for everything.

152
00:10:12.158 --> 00:10:15.910
&gt;&gt; Student  2: Yeah, but
if you hit the events page,

153
00:10:15.910 --> 00:10:20.499
cuz I've got the spinner for
the events page.

154
00:10:20.499 --> 00:10:25.737
But if you click on the one,
it does the dot, dot, dot loading,

155
00:10:25.737 --> 00:10:30.016
so it is using the one that's
down in the [INAUDIBLE].

156
00:10:31.470 --> 00:10:33.377
&gt;&gt; Scott Moss: Actually,
I know what's happening here.

157
00:10:33.377 --> 00:10:33.918
&gt;&gt; Student  2: Yeah.

158
00:10:33.918 --> 00:10:38.949
&gt;&gt; Scott Moss: This isn't the look,
I think, let me see.

159
00:10:38.949 --> 00:10:47.294
Hold on, I think what's
happening here is Expand events.

160
00:10:47.294 --> 00:10:50.925
What we're seeing is,
we're not seeing the loading for this.

161
00:10:50.925 --> 00:10:53.535
Okay, we're actually seeing
the loading for the page because,

162
00:10:53.535 --> 00:10:54.775
check out the layout, right?

163
00:10:54.775 --> 00:11:02.301
The layout will load the children,
okay, when it's not in dashboard mode.

164
00:11:02.301 --> 00:11:09.735
So I think what we're seeing is because
we go to slash dashboard slash events,

165
00:11:09.735 --> 00:11:14.483
we're gonna see the loading
here no matter what.

166
00:11:14.483 --> 00:11:18.360
Whereas in these examples,
these things have their own loaders.

167
00:11:18.360 --> 00:11:24.348
But if you look at the layout,
&gt;&gt; Scott Moss: Here.

168
00:11:24.348 --> 00:11:28.456
These things are rendered in their
own slots, but here's just one child.

169
00:11:28.456 --> 00:11:31.454
So think it's just picking it up that way,

170
00:11:31.454 --> 00:11:36.682
specifically because,
&gt;&gt; Scott Moss: [CROSSTALK]

171
00:11:36.682 --> 00:11:38.822
I still would imagine to do that.

172
00:11:38.822 --> 00:11:40.335
&gt;&gt; Student  3: Expand your Id there once.

173
00:11:40.335 --> 00:11:41.364
&gt;&gt; Scott Moss: Yeah,
actually, let's do this.

174
00:11:41.364 --> 00:11:42.695
&gt;&gt; Student  3: Wait,
you don't have a loader here.

175
00:11:42.695 --> 00:11:46.466
&gt;&gt; Scott Moss: No, I don't have one,
let's make something, let's do one.

176
00:11:46.466 --> 00:11:49.456
Let's see what happens here,
I'm curious now.

177
00:11:53.307 --> 00:11:55.143
&gt;&gt; Scott Moss: So to here.

178
00:12:05.538 --> 00:12:07.600
&gt;&gt; Scott Moss: Okay,
let's try that, am I in the right?

179
00:12:07.600 --> 00:12:08.928
Okay, I'm in the right there.

180
00:12:08.928 --> 00:12:10.418
Let's see what we have first.

181
00:12:10.418 --> 00:12:15.514
[INAUDIBLE] Yeah, okay,
I guess it just picks up its parents,

182
00:12:15.514 --> 00:12:18.757
it's grandparents, its ancestors.

183
00:12:18.757 --> 00:12:25.983
&gt;&gt; Student 4: Yeah, but then you could put
a loading down in the Id bracketed area.

184
00:12:25.983 --> 00:12:27.680
&gt;&gt; Scott Moss: Yeah, put one there, okay.

185
00:12:27.680 --> 00:12:32.374
&gt;&gt; Student 4: Well, and actually in
your main branch, you got one there.

186
00:12:32.374 --> 00:12:33.363
&gt;&gt; Scott Moss: I do.
&gt;&gt; Student 4: Yeah.

187
00:12:33.363 --> 00:12:36.782
&gt;&gt; Scott Moss: Okay, and
that would make sense, yeah.

188
00:12:36.782 --> 00:12:41.698
&gt;&gt; Student 4: And so when you click
on the individual one, it uses that.

189
00:12:41.698 --> 00:12:44.650
So now if you can say event, right?

190
00:12:44.650 --> 00:12:48.358
There you go, and then you click on one.

191
00:12:49.768 --> 00:12:51.253
&gt;&gt; Scott Moss: Yeah, that makes sense.

192
00:12:51.253 --> 00:12:52.008
&gt;&gt; Student 4: Yeah.

193
00:12:52.008 --> 00:12:54.764
&gt;&gt; Scott Moss: That is interesting,
let's see, let's do this together,

194
00:12:54.764 --> 00:12:56.354
I wanna see something right quick.

195
00:12:56.354 --> 00:12:58.192
Let's go to the docs.

196
00:12:58.192 --> 00:12:58.853
&gt;&gt; Student 4: Do you like that?

197
00:12:58.853 --> 00:13:00.074
&gt;&gt; Scott Moss: No.

198
00:13:00.074 --> 00:13:03.569
With the way suspense works, I think
that's kinda the behavior of a suspense

199
00:13:03.569 --> 00:13:05.473
boundary if you were to do that manually.

200
00:13:05.473 --> 00:13:07.479
Yeah, cuz that's what I
was trying to figure out.

201
00:13:07.479 --> 00:13:11.253
I'm like, it's wrapping the whole tree.

202
00:13:11.253 --> 00:13:12.805
It's like a boundary, yeah.

203
00:13:12.805 --> 00:13:17.103
But the way the routing works,
it shouldn't [LAUGH].

204
00:13:17.103 --> 00:13:19.703
&gt;&gt; Student 4: I think it's
like a different page.

205
00:13:19.703 --> 00:13:20.602
&gt;&gt; Scott Moss: You know what?

206
00:13:20.602 --> 00:13:22.752
I think what I was trying to say, and

207
00:13:22.752 --> 00:13:25.774
I think it just came cuz I
lost my train of thought.

208
00:13:25.774 --> 00:13:30.732
I think the loading wraps, no, it doesn't
say, wraps the layout, which would mean,

209
00:13:30.732 --> 00:13:33.614
yeah, everything would
have the same loader, but

210
00:13:33.614 --> 00:13:37.655
I don't think it wraps the layout,
I thought it wraps the actual page.

211
00:13:37.655 --> 00:13:39.127
So-.
&gt;&gt; Student 4: Which is interesting,

212
00:13:39.127 --> 00:13:42.670
because that page renders the count,
doesn't it, technically?

213
00:13:42.670 --> 00:13:44.137
&gt;&gt; Scott Moss: Yeah.
&gt;&gt; Student 4: The dashboard page renders

214
00:13:44.137 --> 00:13:44.764
the count, but

215
00:13:44.764 --> 00:13:48.246
it's not in this because it's a different
page, but it's still using that loader.

216
00:13:48.246 --> 00:13:52.622
So I thought they were tightly associated
where that loading was for that page, but

217
00:13:52.622 --> 00:13:55.405
it seems like it can also be used for
children.

218
00:13:55.405 --> 00:13:57.128
Right, that is interesting.

219
00:13:59.583 --> 00:14:05.162
&gt;&gt; Scott Moss: I don't see any
mention of global or anything here.

220
00:14:05.162 --> 00:14:09.844
Now I'm just super fascinated
about that parents, maybe.

221
00:14:09.844 --> 00:14:11.882
No, something new, pretty cool.

222
00:14:11.882 --> 00:14:13.223
That's actually a really cool feature.

