WEBVTT

1
00:00:00.100 --> 00:00:03.862
&gt;&gt; Scott Moss: So active routes, this is
a common thing you do in every single app,

2
00:00:03.862 --> 00:00:07.294
the fact that I have to talk about
it in intermediate course and

3
00:00:07.294 --> 00:00:10.570
not a beginner course is telling
just how not simple it is.

4
00:00:10.570 --> 00:00:13.864
But it actually is kind of simple, it's
just it doesn't make sense in the world

5
00:00:13.864 --> 00:00:17.370
of server components, a client group
policy, so that's where it gets confusing.

6
00:00:18.580 --> 00:00:21.730
So as you saw earlier, there's a hook,
call it use path name.

7
00:00:21.730 --> 00:00:25.690
There's actually many hooks
that we could use for

8
00:00:25.690 --> 00:00:28.904
trying to figure out the current route.

9
00:00:28.904 --> 00:00:32.894
In fact, there's use

10
00:00:32.894 --> 00:00:37.725
selected layout segment.

11
00:00:37.725 --> 00:00:42.351
There's a lot going on here, I think this
will, which also adds to the confusion,

12
00:00:42.351 --> 00:00:44.614
like which one of these hooks do you use?

13
00:00:44.614 --> 00:00:47.065
This one has something to
do with parallel routes,

14
00:00:47.065 --> 00:00:48.891
maybe it's kinda all over the place.

15
00:00:48.891 --> 00:00:53.584
But in reality, all you really
wanna use is the use path name.

16
00:00:53.584 --> 00:00:58.986
This one returns a string of
the current path name in the URL.

17
00:00:58.986 --> 00:01:00.831
For the most part, that's what you want,

18
00:01:00.831 --> 00:01:03.816
the other scenarios are a little
more advanced and things like that.

19
00:01:03.816 --> 00:01:06.936
But for us, we just need this,
and the reason we want this is so

20
00:01:06.936 --> 00:01:10.946
we can show a highlight on the nav bar
on the left of which route is active.

21
00:01:10.946 --> 00:01:12.992
So, you know which one you're looking at.

22
00:01:14.429 --> 00:01:17.016
&gt;&gt; Scott Moss: Because it's a hook,
it has to be in a client component.

23
00:01:17.016 --> 00:01:19.049
So remember that has to
be in a client component.

24
00:01:20.470 --> 00:01:25.830
If you want your nav bar to be a server
component and not a client component, then

25
00:01:25.830 --> 00:01:31.960
what you would have to do is you'd have to
make every single link in your sidebar.

26
00:01:31.960 --> 00:01:35.690
You'd have to make a link,
like a sidebar item component.

27
00:01:35.690 --> 00:01:39.105
And that component would
use the use path name, and

28
00:01:39.105 --> 00:01:43.869
you map over many of those inside
of your server, sidebar component.

29
00:01:43.869 --> 00:01:48.858
So the sidebar itself will be server,
but then each individual links that get

30
00:01:48.858 --> 00:01:53.465
rendered or the each individual items
are client side because they need

31
00:01:53.465 --> 00:01:56.709
the hooks to know if they're
active route or not.

32
00:01:56.709 --> 00:01:58.119
So you can do it that way as well.

33
00:01:58.119 --> 00:02:03.117
And that's it, the strategy that next day
has to react is pushing people to try to

34
00:02:03.117 --> 00:02:05.777
push client sides further down the stack.

35
00:02:07.007 --> 00:02:11.117
If there is something that doesn't
need client interactivity,

36
00:02:11.117 --> 00:02:13.677
make that a server component.

37
00:02:13.677 --> 00:02:15.785
And if there's something
that needs interactivity,

38
00:02:15.785 --> 00:02:18.377
just make that interaction
a client component.

39
00:02:18.377 --> 00:02:20.821
So that's how they're trying to do it,
so it's like,

40
00:02:20.821 --> 00:02:23.525
it's kind of like back in the day
when like Redux came out, and

41
00:02:23.525 --> 00:02:25.973
everybody was making like components for
everything.

42
00:02:25.973 --> 00:02:31.403
You make a component for like a text
[LAUGH] Or like a letter component.

43
00:02:31.403 --> 00:02:33.245
[LAUGH] Okay, I get it.

44
00:02:33.245 --> 00:02:34.833
We get it, you like components.

45
00:02:34.833 --> 00:02:38.401
So it's kinda that, but like with
client components, all the way down.

46
00:02:39.422 --> 00:02:41.982
So I didn't feel doing that,
so I didn't do it.

47
00:02:44.172 --> 00:02:48.072
We are, though, because it is a hook,
you can't use it server side, okay?

48
00:02:48.072 --> 00:02:52.332
So I talked about this earlier, you can't
use it on the server and trying to access

49
00:02:52.332 --> 00:02:56.439
it from the server or trying to access
the current route on the server leads to.

50
00:02:56.439 --> 00:03:00.454
As we talked about, if you access
something like the headers or cookies or

51
00:03:00.454 --> 00:03:05.081
anything on the request changes
the strategy of how that route is treated.

52
00:03:05.081 --> 00:03:09.173
So if you're, I'm gonna get the current
path name and do something here, but

53
00:03:09.173 --> 00:03:11.038
I also want this route to be static.

54
00:03:11.038 --> 00:03:15.397
Well, it's not gonna be static because you
just accessed the headers on the server

55
00:03:15.397 --> 00:03:18.545
side, so you opted out of that and
you didn't even know it.

56
00:03:18.545 --> 00:03:22.720
So you built it in production and then
that's when you saw it because on dev,

57
00:03:22.720 --> 00:03:25.795
it works differently, so it's kinda weird.

58
00:03:25.795 --> 00:03:29.723
But yeah, so let's, let's fix ours.

59
00:03:29.723 --> 00:03:32.245
So in our, we have a component
called side, that's a sidebar.

60
00:03:32.245 --> 00:03:35.917
We're gonna make a function that
takes a path, takes a route and

61
00:03:35.917 --> 00:03:38.991
determines whether or
not it's the active point.

62
00:03:38.991 --> 00:03:42.941
So, let's do that and
we'll go to side at the top.

63
00:03:42.941 --> 00:03:47.053
I'm just gonna keep this function outside
the component store reason to put it in

64
00:03:47.053 --> 00:03:50.743
having it recreated every single time,
cuz this is a client component so

65
00:03:50.743 --> 00:03:52.511
it will rerender multiple times.

66
00:03:54.621 --> 00:03:59.003
The path is the path from path name, the
route is there, one of these routes here.

67
00:04:01.024 --> 00:04:02.391
&gt;&gt; Scott Moss: And it's pretty simple,

68
00:04:02.391 --> 00:04:06.615
it's just a string check because every
one of them starts with slash dashboard,

69
00:04:06.615 --> 00:04:09.447
but only one of them is
actually slash dashboard.

70
00:04:09.447 --> 00:04:10.960
We check for that one first.

71
00:04:10.960 --> 00:04:13.477
That means you're on the homepage,
the grid that we've been looking at.

72
00:04:14.627 --> 00:04:18.649
All the other ones, I just need to
make sure if it includes this route,

73
00:04:18.649 --> 00:04:23.335
then that's the path, cuz they all
have different names, so we got that.

74
00:04:23.335 --> 00:04:27.645
And then really, the last thing
we need to do is just CSS stuff.

75
00:04:27.645 --> 00:04:31.330
So, there's a lot of ways you
could do this, but actually,

76
00:04:31.330 --> 00:04:32.935
I think it's different.

77
00:04:32.935 --> 00:04:36.643
What I'm about to do is different
than what's in the notes, but

78
00:04:36.643 --> 00:04:40.364
I like to use this function called cn,
which stands for, clap.

79
00:04:40.364 --> 00:04:42.365
What is this,
what does it actually stand for?

80
00:04:42.365 --> 00:04:49.277
It's like CLSX plus, Tailwind merge
together, best way I can describe it.

81
00:04:49.277 --> 00:04:54.425
So I'll put my original classes in there,
and

82
00:04:54.425 --> 00:05:01.025
then I'll say basically,
okay, if something is active,

83
00:05:01.025 --> 00:05:05.538
so is,
&gt;&gt; Scott Moss: Is active,

84
00:05:05.538 --> 00:05:07.367
pass in the path.

85
00:05:07.367 --> 00:05:13.657
So we got to get the path here, so this
be path equals, use path name, like that.

86
00:05:13.657 --> 00:05:17.512
So is active, passing the path and
then pass in the Linked out route.

87
00:05:19.286 --> 00:05:22.654
&gt;&gt; Scott Moss: If that is true,
then I can say, cool.

88
00:05:22.654 --> 00:05:27.486
Add these CSS classes which are active,
class like that.

89
00:05:29.834 --> 00:05:32.245
&gt;&gt; Scott Moss: You can also
just interpolate which is what,

90
00:05:32.245 --> 00:05:33.583
think I did in the notes.

91
00:05:36.276 --> 00:05:39.794
&gt;&gt; Scott Moss: The CN thing,
it basically merges.

92
00:05:39.794 --> 00:05:43.461
Class names together, and then it also
there's like this known issue with

93
00:05:43.461 --> 00:05:48.154
tailwind classes that if you don't put
them in the right order, they don't work.

94
00:05:48.154 --> 00:05:51.052
So this thing figures out the order in
which your teleclasses need to be in so

95
00:05:51.052 --> 00:05:53.684
they work the way you thought they should.

96
00:05:53.684 --> 00:05:55.778
So it does a combination
of those two things.

97
00:05:59.019 --> 00:06:02.571
&gt;&gt; Scott Moss: Also tell when
classes are statically analyzed.

98
00:06:02.571 --> 00:06:08.421
If you do not write the tell when class
out, verbatim, it won't be included.

99
00:06:08.421 --> 00:06:13.925
So you can't dynamically
do things like this,

100
00:06:13.925 --> 00:06:18.061
where this is like something here.

101
00:06:19.488 --> 00:06:23.213
That's not gonna work cuz it doesn't know,
it can't statically analyze that, so

102
00:06:23.213 --> 00:06:24.318
it won't get included.

103
00:06:24.318 --> 00:06:25.988
So you have to write all your classes out.

104
00:06:27.168 --> 00:06:30.040
If you didn't know that,
if you've ran into issues, that's why.

105
00:06:32.258 --> 00:06:36.499
&gt;&gt; Scott Moss: Okay, so
we got that, and now,

106
00:06:36.499 --> 00:06:41.066
maybe we can see some highlights.

107
00:06:41.066 --> 00:06:45.127
On our sidebar, refresh my,
I got to start my,

108
00:06:50.319 --> 00:06:53.249
&gt;&gt; Scott Moss: Do that, go back here and

109
00:06:53.249 --> 00:06:56.796
refresh this, there we go.

110
00:06:56.796 --> 00:07:01.941
So there's home,
okay there's events these don't work

111
00:07:01.941 --> 00:07:06.876
cuz we haven't really made them but
there we go there's

112
00:07:06.876 --> 00:07:12.144
events these don't work cuz
we haven't really made them.

