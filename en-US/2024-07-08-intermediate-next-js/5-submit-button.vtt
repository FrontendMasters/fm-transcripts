WEBVTT

1
00:00:00.160 --> 00:00:02.929
&gt;&gt; Scott Moss: And then we need
to add our Submit button here,

2
00:00:02.929 --> 00:00:04.780
which I have the code for here.

3
00:00:04.780 --> 00:00:07.610
So let's talk about the Submit button.

4
00:00:07.610 --> 00:00:09.560
Go to our Components folder.

5
00:00:09.560 --> 00:00:11.310
We're gonna make a new component.

6
00:00:11.310 --> 00:00:15.560
We're gonna call it Submit Button,
SubmitButton.tsx.

7
00:00:15.560 --> 00:00:19.510
This is also gonna be a client,
so I'm going to say use client.

8
00:00:21.610 --> 00:00:22.947
&gt;&gt; Scott Moss: I'll make my component.

9
00:00:27.973 --> 00:00:29.860
&gt;&gt; Scott Moss: People still use snippets?

10
00:00:29.860 --> 00:00:32.367
I feel like I just never
got into snippets, but

11
00:00:32.367 --> 00:00:36.245
I should, cuz I've done the same thing
that I just did a million times.

12
00:00:36.245 --> 00:00:41.241
Probably it'll have a year of taking off
my life, just writing, Next.js components.

13
00:00:41.241 --> 00:00:44.670
[LAUGH] So for the submit button,

14
00:00:44.670 --> 00:00:50.513
this one used a different
hook called useFormStatus.

15
00:00:50.513 --> 00:00:54.387
This one's actually really cool because
everyone has done the alternative to this,

16
00:00:54.387 --> 00:00:55.743
and I'm gonna talk about it.

17
00:00:55.743 --> 00:00:58.005
You all are gonna know
what I'm talking about.

18
00:00:58.005 --> 00:01:01.977
But this one basically, in this case,
gives us like a free pending state.

19
00:01:01.977 --> 00:01:03.786
Whenever this hook,

20
00:01:03.786 --> 00:01:09.513
useFormStatus is embedded in
a component that's a child of a form,

21
00:01:09.513 --> 00:01:15.337
it knows the status of that
form's action automatically.

22
00:01:15.337 --> 00:01:19.897
So as long as this button is inside
of a form that's using a form action,

23
00:01:19.897 --> 00:01:24.918
it will know the status on that action,
whether it's pending or not.

24
00:01:24.918 --> 00:01:26.642
It has to be embedded into a form.

25
00:01:28.286 --> 00:01:30.604
&gt;&gt; Scott Moss: That's why we
put it in another component so

26
00:01:30.604 --> 00:01:34.388
we can reuse it on multiple forms and
it'll work on any form.

27
00:01:34.388 --> 00:01:37.769
So it's just a generic submit button
that when placed in a form will give you

28
00:01:37.769 --> 00:01:40.128
the status of that form's action.

29
00:01:40.128 --> 00:01:44.174
So, let's make that, so, that it wouldn't
have had a label and some props, so

30
00:01:44.174 --> 00:01:46.631
labels so
you can put whatever you want on there.

31
00:01:46.631 --> 00:01:50.391
And then just the rest
of the button props.

32
00:01:50.391 --> 00:01:53.221
I'm using a component
library called next UI.

33
00:01:53.221 --> 00:01:55.665
So that's how to add some design,

34
00:01:55.665 --> 00:02:00.316
I can't like cut my hair with just
plain HTML guys can't do that.

35
00:02:00.316 --> 00:02:02.497
So, we have the pending state.

36
00:02:04.327 --> 00:02:08.247
This is gonna be from the useFormStatus.

37
00:02:08.247 --> 00:02:09.657
That's from Reactdom.

38
00:02:09.657 --> 00:02:12.797
Again, nothing to do with Next.js,
it's Reactdom.

39
00:02:12.797 --> 00:02:16.897
In fact, I think they just made
a change to this in React19.

40
00:02:16.897 --> 00:02:19.740
I'm sure Brian will probably
cover it in his course, but

41
00:02:19.740 --> 00:02:23.842
there's a slight change to how this works,
I don't remember exactly what it is.

42
00:02:23.842 --> 00:02:27.510
But slightly different than what I'm
showing here, but for the most part,

43
00:02:27.510 --> 00:02:29.131
it accomplishes the same thing.

44
00:02:29.131 --> 00:02:33.687
And then we're just gonna return this
button that I have from the Next UI,

45
00:02:33.687 --> 00:02:35.316
spread over those props.

46
00:02:35.316 --> 00:02:36.766
Make sure you put type submit here.

47
00:02:36.766 --> 00:02:38.076
This has to be type submit.

48
00:02:38.076 --> 00:02:39.396
This has nothing to do with Next.js.

49
00:02:39.396 --> 00:02:41.213
That's just how forms work,
if you don't put submit,

50
00:02:41.213 --> 00:02:43.660
it won't know that you're submitting
the form when you click the button.

51
00:02:43.660 --> 00:02:47.021
It'll just click, it won't do anything.

52
00:02:47.021 --> 00:02:48.377
And then this part's cool.

53
00:02:48.377 --> 00:02:52.656
This button component is loading prop when
true shows a spinner for you for free.

54
00:02:52.656 --> 00:02:54.353
Well, we'll just pass
in the pending state.

55
00:02:54.353 --> 00:02:57.237
If pending is true, then loading is true.

56
00:02:57.237 --> 00:02:58.388
So we get that for free.

57
00:03:00.694 --> 00:03:04.456
&gt;&gt; Scott Moss: Now the real question is
who's glad they don't have to make a state

58
00:03:04.456 --> 00:03:07.477
to keep track of a loading
state just to set it to true,

59
00:03:07.477 --> 00:03:09.960
just after you call it to set it to false,
and

60
00:03:09.960 --> 00:03:14.283
then pass it around everywhere,
because that's the alternative to this.

61
00:03:14.283 --> 00:03:20.393
And I cannot stand doing that, it's so
bad, so we get that for free now.

62
00:03:23.307 --> 00:03:26.655
&gt;&gt; Scott Moss: Button props is loading.

63
00:03:26.655 --> 00:03:28.555
I guess I need to import the button first.

64
00:03:28.555 --> 00:03:31.066
Lemme do that.

65
00:03:31.066 --> 00:03:34.751
Quick quick tip is,
if you start writing the JSX like this,

66
00:03:34.751 --> 00:03:39.781
the Autocomplete should allow you to get
it without having to type in the import.

67
00:03:39.781 --> 00:03:46.644
But you have to start writing it as JSX
and not globally without the brackets.

68
00:03:46.644 --> 00:03:48.525
So that is loading.

69
00:03:48.525 --> 00:03:50.642
Set that to pending.

70
00:03:50.642 --> 00:03:52.784
We have our label here.

71
00:03:52.784 --> 00:03:54.665
And then we have our types submit.

72
00:03:57.492 --> 00:04:02.060
&gt;&gt; Scott Moss: Cool,
now we have our generic button, all right?

73
00:04:02.060 --> 00:04:03.451
So we have that.

74
00:04:03.451 --> 00:04:06.661
We just need to bring that
into our signup form.

75
00:04:06.661 --> 00:04:09.703
I'm just gonna put it right above
this div after the last input.

76
00:04:12.300 --> 00:04:15.199
&gt;&gt; Scott Moss: All right, SubmitButton.

77
00:04:15.199 --> 00:04:16.819
There we go.

78
00:04:16.819 --> 00:04:19.563
The label on this one,
what does it sign up?

79
00:04:19.563 --> 00:04:23.732
It'll be sign up I guess.

80
00:04:23.732 --> 00:04:24.608
Cool, there we go.

81
00:04:24.608 --> 00:04:26.476
So now we can sign up.

82
00:04:26.476 --> 00:04:31.622
The other thing to note is, in order for
us to get this formData.getemail.password,

83
00:04:31.622 --> 00:04:35.178
we need to make sure our form
their inputs have names on them.

84
00:04:35.178 --> 00:04:36.568
That's how it knows which one's which.

85
00:04:36.568 --> 00:04:40.345
If your inputs don't have
the corresponding name inside the formData

86
00:04:40.345 --> 00:04:42.423
map, we won't be able to get it.

87
00:04:42.423 --> 00:04:46.194
So make sure you use the name
field on your inputs, so

88
00:04:46.194 --> 00:04:49.469
we know what to get from the formData,
okay?

89
00:04:49.469 --> 00:04:51.616
So let's check this out.

90
00:04:51.616 --> 00:04:53.273
Let's see if we can sign in.

91
00:04:53.273 --> 00:04:56.309
The rest of the app is 100 percent
still gonna be broken, but

92
00:04:56.309 --> 00:04:57.694
let's see if we can sign in.

93
00:05:00.524 --> 00:05:03.124
&gt;&gt; Scott Moss: I have to sign up first,
so let me do that.

94
00:05:03.124 --> 00:05:12.147
l got delete, delete my cookies
&gt;&gt; Scott Moss: And

95
00:05:12.147 --> 00:05:14.641
guess I got to run it as well.

96
00:05:17.910 --> 00:05:21.702
&gt;&gt; Scott Moss: So I'll run this,
another tab here.

97
00:05:21.702 --> 00:05:26.153
&gt;&gt; Scott Moss: And
let's see what the sign up does.

98
00:05:28.588 --> 00:05:32.204
&gt;&gt; Scott Moss: I'm using Ark if you're
looking at my browser, what browsers is

99
00:05:32.204 --> 00:05:36.491
Ark, if you've never seen it before,
it's just an alternative to Chrome.

100
00:05:36.491 --> 00:05:37.881
It's pretty cool.

101
00:05:37.881 --> 00:05:39.171
Okay, so now we can sign up.

102
00:05:39.171 --> 00:05:42.662
I'm just gonna sign up with,
I'm trying to think I have so

103
00:05:42.662 --> 00:05:44.457
many users on this database.

104
00:05:44.457 --> 00:05:46.723
I'm just gonna try to make
a new one that I don't have.

105
00:05:48.563 --> 00:05:53.743
&gt;&gt; Scott Moss: Cool, I'm gonna do that and
then go hit sign up here.

106
00:05:53.743 --> 00:05:55.534
And boom, I got it, I'm home now.

107
00:05:55.534 --> 00:05:57.022
That worked.

108
00:05:59.825 --> 00:06:02.924
&gt;&gt; Scott Moss: I can verify that I
actually signed up, few ways, well,

109
00:06:02.924 --> 00:06:06.235
other than the fact that it went here,
a few ways.

110
00:06:06.235 --> 00:06:10.399
If you open up another terminal window,

111
00:06:10.399 --> 00:06:15.305
you can run this command,
npm run db:studio.

112
00:06:15.305 --> 00:06:20.140
And what that is gonna do, it's gonna open
up a database explorer for your database.

113
00:06:20.140 --> 00:06:22.578
So you can just command click on that URL.

114
00:06:22.578 --> 00:06:24.033
And you can see here, if I go,

115
00:06:24.033 --> 00:06:27.072
I can see here's that user I just
signed up with in a database.

116
00:06:27.072 --> 00:06:28.466
It's right there.

117
00:06:28.466 --> 00:06:31.588
Yours might look different than mine,
I put like a cousin theme on mine.

118
00:06:31.588 --> 00:06:34.541
&gt;&gt; Speaker 2: What's the difference
between useFormState and

119
00:06:34.541 --> 00:06:37.008
just using pending with use transition.

120
00:06:38.098 --> 00:06:42.271
&gt;&gt; Scott Moss: We will get
into use transition later.

121
00:06:42.271 --> 00:06:47.358
Yeah, but
TLDR using a transition is a way to

122
00:06:47.358 --> 00:06:53.834
get this the status of a server
action outside of a form.

123
00:06:53.834 --> 00:06:57.483
Whereas if you do the use form state,
you get it for free.

124
00:06:57.483 --> 00:07:01.783
So it's just like the form
specific version of a transition.

125
00:07:01.783 --> 00:07:06.517
Whereas the transition is like anything
could have happened outside of a form and

126
00:07:06.517 --> 00:07:09.105
I wanna do a server action and
get the state.

127
00:07:09.105 --> 00:07:11.510
So slightly, slightly different.

128
00:07:11.510 --> 00:07:16.679
That's forms for the most part, that is
all you really need to know about forms,

129
00:07:16.679 --> 00:07:20.045
when it comes to doing server actions,
form stuff.

130
00:07:20.045 --> 00:07:23.762
And again,
it's not specific to Next.js, but

131
00:07:23.762 --> 00:07:29.214
Next.js has a framework in how you
use things, but that's mostly it.

