WEBVTT

1
00:00:00.750 --> 00:00:02.940
&gt;&gt; Brian Holt: So
let's try flush operation.

2
00:00:02.940 --> 00:00:04.320
Flush operation.

3
00:00:06.930 --> 00:00:11.070
This is gonna take in the int
buffer that we got from above,

4
00:00:12.160 --> 00:00:14.430
which is called the same thing for
continuity.

5
00:00:14.430 --> 00:00:17.540
And then we're just gonna ask
a bunch of questions here.

6
00:00:17.540 --> 00:00:21.305
We're just gonna say,

7
00:00:21.305 --> 00:00:26.590
if previous operator ===+.

8
00:00:26.590 --> 00:00:28.740
Again, you could do this with
a switch statement as well.

9
00:00:28.740 --> 00:00:32.610
I'm just gonna stick to if and
else if, that's what my notes say.

10
00:00:32.610 --> 00:00:37.954
Then I'm gonna say
runningTotal += intBuffer.

11
00:00:40.830 --> 00:00:44.492
&gt;&gt; Brian Holt: It makes sense.
If this press +, then they want it to add.

12
00:00:47.508 --> 00:00:49.780
&gt;&gt; Brian Holt: And let's just,
I'm gonna copy and

13
00:00:49.780 --> 00:00:52.208
paste this a couple of times so else if.

14
00:00:55.599 --> 00:00:57.050
&gt;&gt; Brian Holt: Or
we can just write it out.

15
00:00:57.050 --> 00:01:02.584
Else if previous operator ===-.

16
00:01:02.584 --> 00:01:06.720
Then running total, -=.

17
00:01:06.720 --> 00:01:10.830
Or you can say = running total- that.

18
00:01:10.830 --> 00:01:12.860
But I'm just gonna use -=, yeah?

19
00:01:12.860 --> 00:01:14.430
&gt;&gt; Speaker 2: Could we use
the switch statement here?

20
00:01:14.430 --> 00:01:14.930
&gt;&gt; Brian Holt: Absolutely.

21
00:01:16.350 --> 00:01:21.258
Yep, I'll stiff

22
00:01:21.258 --> 00:01:27.148
previous operator,

23
00:01:27.148 --> 00:01:34.021
=== and times running

24
00:01:34.021 --> 00:01:38.610
total times =.

25
00:01:40.790 --> 00:01:42.550
Again, that asterisk is
how you do multiplication.

26
00:01:46.350 --> 00:01:46.910
Into total.

27
00:01:49.270 --> 00:01:50.216
Or not buffer, better.

28
00:01:50.216 --> 00:01:55.291
Otherwise else running total

29
00:01:55.291 --> 00:02:00.570
/= which is /= and puffer.

30
00:02:15.880 --> 00:02:16.636
Okay so this is working.

31
00:02:19.864 --> 00:02:23.855
&gt;&gt; Brian Holt: I notice that it is doing
in the correct addition down here like

32
00:02:23.855 --> 00:02:25.330
what we would expect.

33
00:02:27.110 --> 00:02:27.947
Times by 5.

34
00:02:34.052 --> 00:02:37.748
&gt;&gt; Brian Holt: Let's go one step further
up here to the handle symbol and

35
00:02:37.748 --> 00:02:39.935
see what symbols coming in here.

36
00:02:39.935 --> 00:02:48.106
[SOUND] So as you can see here,

37
00:02:48.106 --> 00:02:53.554
I use console.log

38
00:02:53.554 --> 00:02:57.649
everywhere.

39
00:02:57.649 --> 00:02:59.315
Okay, so I'm gonna say.

40
00:03:03.012 --> 00:03:07.230
&gt;&gt; Brian Holt: So it looks like
JavaScript is converting these for me.

41
00:03:07.230 --> 00:03:09.921
So what we don't want is actually and
times here,

42
00:03:09.921 --> 00:03:12.111
we actually do want the the symbol here.

43
00:03:17.158 --> 00:03:22.985
&gt;&gt; Brian Holt: So if you're using a Mac,
that's control command space,

44
00:03:22.985 --> 00:03:25.670
brings up this little guy.

45
00:03:25.670 --> 00:03:28.630
And you can do multiplication.

46
00:03:29.940 --> 00:03:33.800
And it's this one right here that we want,
multiplication sign.

47
00:03:35.500 --> 00:03:41.000
So here my HTML,
I have like the divide and LIRR.

48
00:03:41.000 --> 00:03:45.330
I'm just going to right click on this one,

49
00:03:45.330 --> 00:03:48.090
the multiplication is
the Inspect Element right there.

50
00:03:49.130 --> 00:03:52.550
That's universal across Chrome and
Firefox and all that.

51
00:03:52.550 --> 00:03:53.470
Okay, inspect element.

52
00:03:53.470 --> 00:03:57.060
Now, you can see this is
highlighted here in my HTML editor.

53
00:03:58.470 --> 00:04:01.610
Just double click on it and I'll let
you actually edit what's in that HTML.

54
00:04:03.780 --> 00:04:05.880
I'm just going to copy it, control copy.

55
00:04:08.300 --> 00:04:13.130
And then I'm going to go over
to my JavaScript here, and

56
00:04:13.130 --> 00:04:16.950
paste that into the places that
I had the end times semi colon.

57
00:04:18.340 --> 00:04:21.380
You're gonna have to do that with if you
have the minus there as well, you can have

58
00:04:21.380 --> 00:04:26.890
to do that with minus if you have it
there with addition, so on and so forth.

59
00:04:28.240 --> 00:04:29.900
You have to do the HTML as well.

60
00:04:31.070 --> 00:04:32.520
No don't don't do it in the HTML.

61
00:04:35.680 --> 00:04:39.860
How would the function look at those a
switch like where would previous operator

62
00:04:39.860 --> 00:04:46.230
ago It would look like
switch previous operator.

63
00:04:49.200 --> 00:04:57.525
Case, plus running total
plus equals into buffer.

64
00:05:00.573 --> 00:05:05.160
&gt;&gt; Brian Holt: Break,
case- so on and so forth.

65
00:05:05.160 --> 00:05:07.620
Does that answer your question?

66
00:05:07.620 --> 00:05:08.260
&gt;&gt; Speaker 2: Yeah, it does.

67
00:05:08.260 --> 00:05:08.760
&gt;&gt; Brian Holt: Cool.

68
00:05:12.989 --> 00:05:14.448
&gt;&gt; Brian Holt: Probably a bit
cleaner to do it that way, but

69
00:05:14.448 --> 00:05:15.362
either one of these works.

70
00:05:19.562 --> 00:05:22.173
&gt;&gt; Brian Holt: So
now hopefully if we go in here to console.

71
00:05:27.740 --> 00:05:28.720
&gt;&gt; Brian Holt: Tell it bigger here.

72
00:05:30.240 --> 00:05:33.307
So refresh, I would say 5.

73
00:05:37.962 --> 00:05:43.463
&gt;&gt; Brian Holt: Make this a bit smaller,
-2 +,

74
00:05:43.463 --> 00:05:47.650
so that's correct, 6.

75
00:05:47.650 --> 00:05:50.173
If I hit multiplication,
I'm gonna expect to see.

76
00:05:55.704 --> 00:05:59.910
&gt;&gt; Brian Holt: 9-, okay so yeah,
that seems like it's working, okay.

77
00:06:02.240 --> 00:06:04.050
&gt;&gt; Speaker 2: Does it
show up on your screen?

78
00:06:04.050 --> 00:06:05.200
&gt;&gt; Brian Holt: We haven't
written to the screen yet.

79
00:06:06.560 --> 00:06:08.240
We have not written it to the screen yet.

80
00:06:08.240 --> 00:06:09.710
So you should not be seeing that yet.

81
00:06:11.520 --> 00:06:13.130
So I'm going to get rid
of these console logs,

82
00:06:13.130 --> 00:06:15.330
cuz now the stuff works
the way that I want it to.

83
00:06:15.330 --> 00:06:17.610
You can leave them in there, but

84
00:06:17.610 --> 00:06:20.280
in general you don't want to
ship code to have console logs.

85
00:06:20.280 --> 00:06:21.270
It's just kind of a messy thing to do.

86
00:06:23.678 --> 00:06:24.885
&gt;&gt; Brian Holt: It should be for
debugging purposes, and

87
00:06:24.885 --> 00:06:25.752
then you should get rid of it.

