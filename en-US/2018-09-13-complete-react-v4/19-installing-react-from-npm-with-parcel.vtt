WEBVTT

1
00:00:00.400 --> 00:00:02.180
&gt;&gt; Brian Holt: We're gonna go to app.js.

2
00:00:02.180 --> 00:00:07.590
Right now, we're relying on
this imported from our CDN,

3
00:00:07.590 --> 00:00:09.600
so we're loading the other script tags.

4
00:00:09.600 --> 00:00:12.010
What would be better,
if we could just bundle that all up,

5
00:00:12.010 --> 00:00:13.860
cuz what happens if unpackage goes down.

6
00:00:13.860 --> 00:00:17.303
Right, unpackage in reality is not
meant to serve production traffic,

7
00:00:17.303 --> 00:00:18.780
it's meant for experiments.

8
00:00:18.780 --> 00:00:22.761
Right, so we don't wanna actually
depend on them being available,

9
00:00:22.761 --> 00:00:26.050
we wanna basically be
reliant on ourselves.

10
00:00:26.050 --> 00:00:32.117
So what we're gonna do is, we're gonna
come over here and we're gonna say npm.

11
00:00:32.117 --> 00:00:35.992
Actually, I'm gonna show you
something that's even, in my opinion,

12
00:00:35.992 --> 00:00:40.120
a little bit cooler that Parcel does
that I found out the other day.

13
00:00:40.120 --> 00:00:44.199
So it's just running, right,
I have not mpm installed React yet.

14
00:00:44.199 --> 00:00:49.865
What I'm gonna say up here is say,
&gt;&gt; Brian Holt: import React

15
00:00:49.865 --> 00:00:55.909
from "react".
&gt;&gt; Brian Holt: I'm

16
00:00:55.909 --> 00:00:58.513
gonna save it.
&gt;&gt; Brian Holt: And

17
00:00:58.513 --> 00:01:01.057
if you come back over here,
it's gonna say installing react,

18
00:01:01.057 --> 00:01:02.930
so it actually goes out and
gets React for you.

19
00:01:02.930 --> 00:01:07.939
So you don't even have to do
those npm installs yourself,

20
00:01:07.939 --> 00:01:10.709
I thought that was pretty cool.

21
00:01:10.709 --> 00:01:15.986
Does it go in my package.json, man,
it does that, how cool is that?

22
00:01:15.986 --> 00:01:18.239
I don't know, I just noticed that
yesterday, I was like, wait,

23
00:01:18.239 --> 00:01:22.393
where are all these packages coming from?
&gt;&gt; Speaker 2: That's

24
00:01:22.393 --> 00:01:23.170
cool.
&gt;&gt; Brian Holt: Yeah.

25
00:01:23.170 --> 00:01:25.650
&gt;&gt; Speaker 2: [LAUGH]

26
00:01:25.650 --> 00:01:26.861
&gt;&gt; Brian Holt: So I actually come back to

27
00:01:26.861 --> 00:01:29.464
index.html and
delete these two unpackage things.

28
00:01:34.959 --> 00:01:36.828
&gt;&gt; Brian Holt: Come back to app.js and

29
00:01:36.828 --> 00:01:41.371
also do import.
&gt;&gt; Brian Holt: What I'm

30
00:01:41.371 --> 00:01:45.006
gonna do is just to show you how to do it,

31
00:01:45.006 --> 00:01:49.979
say [ render ], like this,
from "react-dom".

32
00:01:49.979 --> 00:01:53.650
So what I'm telling it here is,
just pull in the render function,

33
00:01:53.650 --> 00:01:56.680
I don't need all of react-dom
at this moment in time.

34
00:01:56.680 --> 00:01:59.843
And then you can delete this down here,
so then it's just render,

35
00:01:59.843 --> 00:02:03.496
like that.
&gt;&gt; Brian Holt: And

36
00:02:03.496 --> 00:02:08.244
again, it'll go out and grab react-dom for
me, I don't have to go get it.

37
00:02:18.053 --> 00:02:19.792
&gt;&gt; Brian Holt: So now it's been built, so

38
00:02:19.792 --> 00:02:24.192
we can come back over here and
refresh, and everything still works.

39
00:02:24.192 --> 00:02:25.769
Just to prove to you that it's not,

40
00:02:25.769 --> 00:02:31.276
I'm not doing anything fishy here.
&gt;&gt; Brian Holt: Notice I'm not grabbing

41
00:02:31.276 --> 00:02:36.320
anything from unpackage anymore,
everything's coming in via app.

42
00:02:36.320 --> 00:02:41.148
Now notice it's quite large, it's now
759 kilobytes, it's a lot of code,

43
00:02:41.148 --> 00:02:43.924
right, especially for
such a short program.

44
00:02:43.924 --> 00:02:47.153
But that's because we're not
gzipping anything, right, and

45
00:02:47.153 --> 00:02:49.674
we're getting the development
builds of react.

46
00:02:49.674 --> 00:02:53.530
We're getting the development builds of
react-dom, and nothing's being minified.

47
00:02:54.660 --> 00:02:57.789
That's fine for development, right,
but when we go out to production,

48
00:02:57.789 --> 00:03:00.524
we'll make sure everything's small and
tiny and packaged up.

49
00:03:00.524 --> 00:03:03.439
We will talk about that tomorrow,
probably.

50
00:03:03.439 --> 00:03:04.807
&gt;&gt; Speaker 3: The chat room is going

51
00:03:04.807 --> 00:03:06.991
pretty crazy.
&gt;&gt; Brian Holt: About that installing

52
00:03:06.991 --> 00:03:09.974
by itself?
&gt;&gt; Speaker 3: Parcel is legit awesome,

53
00:03:09.974 --> 00:03:13.719
that's pretty awesome, I don't know,

54
00:03:13.719 --> 00:03:17.647
lots of people freaking out.
&gt;&gt; Brian Holt: Shout-out to Devon,

55
00:03:17.647 --> 00:03:20.732
the guy that,
you should definitely go tweet to Devon,

56
00:03:20.732 --> 00:03:24.350
I can't remember what his last
name is at the moment right now.

57
00:03:24.350 --> 00:03:29.919
But I'm sure if you search for
Parcel Devon, he'll come up.

58
00:03:29.919 --> 00:03:33.007
Built a really, really cool piece
of technology, it's really,

59
00:03:33.007 --> 00:03:35.985
really focused on giving you
a great developer experience, and

60
00:03:35.985 --> 00:03:40.346
I'm just a huge fan.
&gt;&gt; Brian Holt: Really pushing,

61
00:03:40.346 --> 00:03:42.916
I love tools that focus on
developer experience, and

62
00:03:42.916 --> 00:03:45.380
that is definitely one
guy that cares about it.

63
00:03:45.380 --> 00:03:48.650
And now Jamie, Kyle, and
a bunch of other like really cool and

64
00:03:48.650 --> 00:03:51.715
important people are working
on it as well, so good stuff.

65
00:03:53.000 --> 00:03:57.270
So now we have all that stuff
coming in from react and react-dom.

66
00:03:58.440 --> 00:04:02.860
The other thing, there used to be a big
part of this course about how to set up

67
00:04:02.860 --> 00:04:07.980
hot module reload or,
I can never remember what HMR stands for.

68
00:04:07.980 --> 00:04:10.070
I always say hot module reload,
and that's not correct.

69
00:04:10.070 --> 00:04:16.369
Anyway, HMR, that's already
built-in by default to Parcel,

70
00:04:16.369 --> 00:04:20.269
it does code splitting automatically.

71
00:04:20.269 --> 00:04:23.400
It does minification when you do build,
it does gzip,

72
00:04:23.400 --> 00:04:27.228
it does everything that you need it
to do just kind of out of the box.

73
00:04:27.228 --> 00:04:32.289
It makes it really,
really easy to follow best practices.

74
00:04:32.289 --> 00:04:35.341
So I'm a huge fan,
I think they did an amazing job.

