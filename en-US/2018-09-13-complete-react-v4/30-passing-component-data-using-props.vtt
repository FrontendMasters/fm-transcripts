WEBVTT

1
00:00:00.410 --> 00:00:03.225
&gt;&gt; Brian Holt: This isn't very pretty.

2
00:00:03.225 --> 00:00:06.014
We have a rich amount of
data about these animals.

3
00:00:06.014 --> 00:00:10.177
It would be really cool if we could
show pictures and those sorts of things.

4
00:00:10.177 --> 00:00:12.482
So what we're gonna do is we're
gonna go back to pet.js and

5
00:00:12.482 --> 00:00:14.661
we're gonna make it actually
display more things now.

6
00:00:17.897 --> 00:00:22.946
&gt;&gt; Brian Holt: So-
&gt;&gt; Brian Holt: Let's do this.

7
00:00:22.946 --> 00:00:29.279
So in theory, if you follow my styling or
my structure of my HTML and class names,

8
00:00:29.279 --> 00:00:35.171
you should get all of the styling for
free because of the CSS that I gave you.

9
00:00:35.171 --> 00:00:38.289
So go ahead and just delete all of this.

10
00:00:38.289 --> 00:00:44.692
Let's ay class Pet
extends React.Component.

11
00:00:44.692 --> 00:00:48.021
Something that I didn't mention before but
I should mention now.

12
00:00:48.021 --> 00:00:51.650
Every React class component
has to have a render method,

13
00:00:51.650 --> 00:00:54.832
100% of the time it must
have a render method.

14
00:00:56.376 --> 00:01:01.120
&gt;&gt; Brian Holt: The render method-
&gt;&gt; Brian Holt: Has to return markup,

15
00:01:01.120 --> 00:01:01.719
right?

16
00:01:01.719 --> 00:01:04.948
Like the result of
a React.createElement call.

17
00:01:04.948 --> 00:01:08.486
That's kind of the contract
that you have with React.

18
00:01:10.296 --> 00:01:13.319
&gt;&gt; Brian Holt: The other thing is
that it should have no side effects,

19
00:01:13.319 --> 00:01:16.607
which means that you shouldn't
modify any ambient state,

20
00:01:16.607 --> 00:01:18.921
you can't call set state within render.

21
00:01:18.921 --> 00:01:23.824
It has to be fast, because render is
gonna get called a lot, it's a very,

22
00:01:23.824 --> 00:01:28.983
very hot code path, so you should be
very cautious to make render very quick.

23
00:01:28.983 --> 00:01:32.492
Otherwise, it'll get slowed
down pretty quickly.

24
00:01:32.492 --> 00:01:33.692
Okay.

25
00:01:42.436 --> 00:01:48.195
&gt;&gt; Brian Holt: Name, animal, breed, media.

26
00:01:52.987 --> 00:01:55.382
&gt;&gt; Brian Holt: This.props.

27
00:01:55.382 --> 00:01:57.623
Here we're doing a bit of destructuring.

28
00:01:57.623 --> 00:02:02.064
So we're gonna get props called name,
animal, breed, media and

29
00:02:02.064 --> 00:02:03.897
location form the parent.

30
00:02:03.897 --> 00:02:08.229
Because we will go do that later, we'll
go make it give us those things later.

31
00:02:08.229 --> 00:02:11.525
But for now we can expect those
things coming in from the parent.

32
00:02:11.525 --> 00:02:15.426
These are basically the required
parameters to render this correctly, okay?

33
00:02:15.426 --> 00:02:18.960
And we know it's gonna be called there,
so this is called Destructing.

34
00:02:18.960 --> 00:02:19.975
We're pulling these things out.

35
00:02:19.975 --> 00:02:25.056
So now I have,
if I did console.log[name], right?

36
00:02:25.056 --> 00:02:29.094
It would be basically the same as this

37
00:02:29.094 --> 00:02:34.577
console.log(this.props.name), right?

38
00:02:34.577 --> 00:02:36.706
All right,
those two things are kind of equivalent,

39
00:02:36.706 --> 00:02:38.423
that's what destructuring does for you.

40
00:02:38.423 --> 00:02:40.969
It's just a really easy way to
pull things out of an object.

41
00:02:40.969 --> 00:02:42.665
If you already know what
the names are gonna be.

42
00:02:44.049 --> 00:02:46.001
&gt;&gt; Brian Holt: Okay?

43
00:02:46.001 --> 00:02:50.648
And we're gonna have to do some more
finagling with the photos cuz they come

44
00:02:50.648 --> 00:02:52.509
back in kind of a weird thing.

45
00:02:52.509 --> 00:02:58.423
So let photos =[],

46
00:02:58.423 --> 00:03:02.469
if (media &amp;&amp;

47
00:03:02.469 --> 00:03:07.761
media.photos &amp;&amp;

48
00:03:07.761 --> 00:03:14.614
media.photos.photo)

49
00:03:17.123 --> 00:03:19.608
&gt;&gt; Brian Holt: The nice thing is we know
this is always going to be an array,

50
00:03:19.608 --> 00:03:22.307
that we don't have to check to see
if it's a single photo or not.

51
00:03:22.307 --> 00:03:25.415
But they give us multiple
different sizes of each photo.

52
00:03:25.415 --> 00:03:28.643
So they'll give you the thumbnails,
and it's all in the same array,

53
00:03:28.643 --> 00:03:30.458
which is annoying, but that's okay.

54
00:03:30.458 --> 00:03:39.012
So we're gonna say photos =
media.photos.photo.filter.

55
00:03:39.012 --> 00:03:40.398
So, filter is like math,

56
00:03:40.398 --> 00:03:43.554
it runs the same function in
every single item in the array.

57
00:03:43.554 --> 00:03:45.706
If it returns true, it stays in the array.

58
00:03:45.706 --> 00:03:47.942
If it returns false,
it kicks it out of the array.

59
00:03:47.942 --> 00:03:50.954
So we're just going to filter, because we
just want one size of the photo, right?

60
00:03:50.954 --> 00:03:54.887
We don't want to have the same photo
multiple times for each animal.

61
00:03:54.887 --> 00:04:02.463
So photo, photo, and
the name of thing is @size.

62
00:04:05.810 --> 00:04:08.214
&gt;&gt; Brian Holt: And we want pn.

63
00:04:11.094 --> 00:04:13.694
&gt;&gt; Brian Holt: So this will keep only
one size of the photos for us so

64
00:04:13.694 --> 00:04:15.453
then we can just display that one.

65
00:04:17.697 --> 00:04:21.389
&gt;&gt; Brian Holt: So now we know photos
is going to be an array of photos,

66
00:04:21.389 --> 00:04:24.928
we don't have to worry
about if it's empty or not.

67
00:04:26.517 --> 00:04:31.422
&gt;&gt; Brian Holt: Okay, and
then down here, we're going to

68
00:04:31.422 --> 00:04:35.932
return div className equals "pet".

69
00:04:41.018 --> 00:04:47.747
&gt;&gt; Brian Holt: And
div className = "image-container".

70
00:04:49.833 --> 00:04:54.904
&gt;&gt; Brian Holt: And
then here we're gonna put image

71
00:04:54.904 --> 00:05:00.146
src = photos[0].value which is

72
00:05:00.146 --> 00:05:05.904
actually gonna be the URL that it needs.

73
00:05:10.509 --> 00:05:13.327
&gt;&gt; Brian Holt: So here's something
that I quite like about our,

74
00:05:13.327 --> 00:05:15.079
yes, centrals that we set up.

75
00:05:15.079 --> 00:05:17.941
It's gonna mark me right now and say,
hey, something's wrong with image.

76
00:05:17.941 --> 00:05:21.633
And if you mouse over here,
it's like, if you have an image tag,

77
00:05:21.633 --> 00:05:23.591
you have to give it an alt, right?

78
00:05:23.591 --> 00:05:25.576
So that screen readers know
what the image is, right?

79
00:05:25.576 --> 00:05:28.509
Because if someone's blind and
trying to look at your website,

80
00:05:28.509 --> 00:05:31.715
and then you just put an image there
that's important to the content,

81
00:05:31.715 --> 00:05:33.527
the screen reader's is gonna miss it.

82
00:05:33.527 --> 00:05:36.891
Which means that the blind person doesn't
get to fully experience your website.

83
00:05:36.891 --> 00:05:39.306
So, again,
you have to give it an alt here.

84
00:05:41.312 --> 00:05:44.543
&gt;&gt; Brian Holt: And we're just gonna
give it the name of the animal.

85
00:05:49.441 --> 00:05:51.941
&gt;&gt; Brian Holt: Okay?

86
00:05:51.941 --> 00:05:56.386
Div className="info".

87
00:05:59.246 --> 00:06:02.594
&gt;&gt; Brian Holt: H1 with a name.

88
00:06:04.843 --> 00:06:13.441
&gt;&gt; Brian Holt: H2 with-
&gt;&gt; Brian Holt: Animal

89
00:06:15.348 --> 00:06:19.287
&gt;&gt; Brian Holt: M- breed

90
00:06:23.256 --> 00:06:25.286
&gt;&gt; Brian Holt: Location

91
00:06:31.916 --> 00:06:33.318
&gt;&gt; Brian Holt: Okay?

92
00:06:33.318 --> 00:06:36.522
So now our pet component
looks a lot nicer.

93
00:06:36.522 --> 00:06:40.787
Now, we just have to go into our app and
make sure that we are passing down all

94
00:06:40.787 --> 00:06:44.122
the correct data so
that we can render this pet correctly.

95
00:06:52.204 --> 00:06:55.288
&gt;&gt; Brian Holt: So let's go into app.js,

96
00:06:55.288 --> 00:06:59.989
we just need to pass a couple more things.

97
00:06:59.989 --> 00:07:04.831
Media=[pet.media].

98
00:07:04.831 --> 00:07:10.194
And, location=, and we're gonna give it,

99
00:07:10.194 --> 00:07:14.188
this is called a template string.

100
00:07:14.188 --> 00:07:18.945
So these are called back ticks, which is
the one to the left of 1 on your keyboard

101
00:07:18.945 --> 00:07:21.365
if you're using an American keyboard.

102
00:07:21.365 --> 00:07:23.130
So back tick.

103
00:07:25.788 --> 00:07:30.406
&gt;&gt; Brian Holt: I guess you don't
have to do it, no, you do, okay.

104
00:07:30.406 --> 00:07:37.343
&gt;&gt; Brian Holt: So
your gonna do [pet.contact.city],

105
00:07:37.343 --> 00:07:42.033
[pet.contact.state].

106
00:07:43.914 --> 00:07:48.809
&gt;&gt; Brian Holt: So
with template strings just so

107
00:07:48.809 --> 00:07:52.797
you see it outside of JSX,

108
00:07:52.797 --> 00:07:58.778
if I was doing like const x = 'My dog's

109
00:07:58.778 --> 00:08:03.694
breed is $[breed], right?

110
00:08:03.694 --> 00:08:06.803
So this will actually,
it's the same kinda thing with JSX, but

111
00:08:06.803 --> 00:08:11.019
it's actually putting that actual variable
into the template string, right there.

112
00:08:11.019 --> 00:08:12.924
That's how that works.

113
00:08:12.924 --> 00:08:15.654
So that's what that dollar sign,
curly braces for template strings.

114
00:08:15.654 --> 00:08:18.473
It's a JavaScript thing,
it's not a React thing.

115
00:08:20.165 --> 00:08:22.539
&gt;&gt; Brian Holt: So
this is going to be city, state, right?

116
00:08:22.539 --> 00:08:24.456
That's what we've done there
with the template string.

117
00:08:26.911 --> 00:08:29.390
&gt;&gt; Brian Holt: Okay, so
let's go take a look and

118
00:08:29.390 --> 00:08:33.298
make sure that we kinda got
what we were looking for.

119
00:08:33.298 --> 00:08:36.331
And you can see now,
we have various animals coming in.

120
00:08:40.650 --> 00:08:41.714
&gt;&gt; Brian Holt: Pretty cool, right?

121
00:08:41.714 --> 00:08:43.037
Now, we have animals.

122
00:08:49.636 --> 00:08:51.449
&gt;&gt; Brian Holt: Any questions?

123
00:08:56.573 --> 00:08:58.841
&gt;&gt; Brian Holt: I see
a lot of perplexed faces.

124
00:09:01.071 --> 00:09:02.613
&gt;&gt; Brian Holt: Yeah, Mark?

125
00:09:02.613 --> 00:09:06.392
&gt;&gt; off screen male: How many props should
we pass into a component before we start

126
00:09:06.392 --> 00:09:08.030
using an object instead?

127
00:09:08.030 --> 00:09:11.484
Or is using expanded props more common?

128
00:09:11.484 --> 00:09:12.906
Explicitly declare them.

129
00:09:12.906 --> 00:09:15.060
&gt;&gt; Brian Holt: [COUGH] It
depends on who you ask.

130
00:09:15.060 --> 00:09:21.776
I'm a big fan of not using objects and
using lots of props.

131
00:09:21.776 --> 00:09:23.249
But you'll get people that
will disagree with me,

132
00:09:23.249 --> 00:09:24.594
cuz we do end up with things like this,
right?

133
00:09:24.594 --> 00:09:29.643
This is getting quite long and
I've seen a lot longer, but

134
00:09:29.643 --> 00:09:34.913
it's very explicit of this is
what this component expects.

135
00:09:34.913 --> 00:09:37.644
Now, if you're using
something like TypeScript,

136
00:09:37.644 --> 00:09:40.569
which I would suggest people do,
it can validate both.

137
00:09:40.569 --> 00:09:43.878
And as long as everything is getting it
all that it requires, but it would be

138
00:09:43.878 --> 00:09:47.465
the same thing if we just had an object,
and those were on multiple lines as well.

139
00:09:47.465 --> 00:09:50.781
So it makes little difference.

140
00:09:50.781 --> 00:09:55.351
I prefer having multiple top
level components personally.

141
00:09:55.351 --> 00:09:57.638
I think it makes this simpler.

142
00:10:03.239 --> 00:10:04.065
&gt;&gt; Brian Holt: Good question.

143
00:10:04.065 --> 00:10:06.313
Other questions?

144
00:10:06.313 --> 00:10:10.938
If you haven't, or if you've fallen
behind, there is another commit here that

145
00:10:10.938 --> 00:10:15.375
you can go grab that we're under the state
and life cycles part of the course.

146
00:10:15.375 --> 00:10:16.710
So feel free to go grab that.

