WEBVTT

1
00:00:00.250 --> 00:00:01.507
&gt;&gt; Brian Holt: So that was context.

2
00:00:01.507 --> 00:00:05.605
I would say that's the most
difficult thing about core React,

3
00:00:05.605 --> 00:00:10.000
is understanding context,
it's the more advanced features.

4
00:00:10.000 --> 00:00:13.020
There's other cool patterns you can
do with React, like render props and

5
00:00:13.020 --> 00:00:15.870
stuff like that,
which I'm not talking about today.

6
00:00:15.870 --> 00:00:19.190
Kent has a course on it here on
Frontend Masters, which is great.

7
00:00:19.190 --> 00:00:22.159
So check that out if you want to get
into more advanced patterns with React.

8
00:00:25.443 --> 00:00:28.537
&gt;&gt; Brian Holt: But I think context is
a more difficult one to wrap around,

9
00:00:28.537 --> 00:00:30.820
cuz it's just a little bit more abstract.

10
00:00:30.820 --> 00:00:33.936
It's a little bit more handwavy and
black magic-y, so.

11
00:00:33.936 --> 00:00:38.330
&gt;&gt; Speaker 2: How do you go about
making a decision to either

12
00:00:39.490 --> 00:00:43.475
stay with the more simple pattern of
parents passing props down into children

13
00:00:43.475 --> 00:00:49.560
or move that data into
something like context?

14
00:00:49.560 --> 00:00:52.350
What does it look like when you're
agonizing over that moment?

15
00:00:52.350 --> 00:00:55.750
&gt;&gt; Brian Holt: I wait until I
absolutely can't stand it anymore.

16
00:00:55.750 --> 00:01:00.830
Because again, I think if you have
the very explicit pattern of passing props

17
00:01:00.830 --> 00:01:05.270
down from parent to children, it makes
your code easier to come back to later and

18
00:01:05.270 --> 00:01:09.930
say like, I understand how this gets
from here to here to here to here.

19
00:01:09.930 --> 00:01:12.770
I like to use the example of
you have a logged in user and

20
00:01:12.770 --> 00:01:16.590
this logged in user has some
data associated with it, right?

21
00:01:16.590 --> 00:01:19.290
That's gonna be used everywhere
in your application, right?

22
00:01:20.790 --> 00:01:24.572
So if I start having to moving things
up into the root parent component and

23
00:01:24.572 --> 00:01:28.292
passing it into every route,
then I'll start questioning it, like,

24
00:01:28.292 --> 00:01:30.220
maybe I should use context for this.

25
00:01:32.735 --> 00:01:33.950
&gt;&gt; Brian Holt: And
I guess that's what it is.

26
00:01:33.950 --> 00:01:38.026
If something has to live in the parent
component and is used in more than two

27
00:01:38.026 --> 00:01:42.256
places, in two places I'll probably
suffer and just deal with it that way.

28
00:01:42.256 --> 00:01:46.391
But if I'm using in three or four places,
I might move that into context.

29
00:01:48.907 --> 00:01:51.696
&gt;&gt; Brian Holt: But I'm trying not
to be too prescriptive with my

30
00:01:51.696 --> 00:01:53.065
attitudes about this.

31
00:01:53.065 --> 00:01:55.135
I want you to learn these patterns,
yourselves, and

32
00:01:55.135 --> 00:01:56.474
make your own decisions, right?

33
00:01:56.474 --> 00:02:00.563
According to your own sensibility,
according to what works for your team.

34
00:02:00.563 --> 00:02:03.670
I'm showing you one
opinion of how this works.

35
00:02:03.670 --> 00:02:07.400
But I'm hoping that you understand
the patterns and grasp the patterns so

36
00:02:07.400 --> 00:02:09.697
that you yourself can
make these decisions.

