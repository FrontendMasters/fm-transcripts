WEBVTT

1
00:00:00.000 --> 00:00:05.317
&gt;&gt; Brian Holt: Now what we can do is
when you go over to our package.json,

2
00:00:06.551 --> 00:00:08.048
&gt;&gt; Brian Holt: Package.json,

3
00:00:08.048 --> 00:00:12.038
just like we have format and
format check here,

4
00:00:12.038 --> 00:00:17.059
we are going to do lint,
&gt;&gt; Brian Holt: And

5
00:00:17.059 --> 00:00:21.372
we are gonna have it "eslint

6
00:00:21.372 --> 00:00:25.879
**/*.(js, jsx)".

7
00:00:25.879 --> 00:00:31.618
I think that's what I did.
&gt;&gt; Brian Holt: And

8
00:00:31.618 --> 00:00:34.339
put those in quotes as well.

9
00:00:37.564 --> 00:00:41.019
&gt;&gt; Brian Holt: Just make sure that works,

10
00:00:41.019 --> 00:00:47.717
and mpm run lint,m
&gt;&gt; Brian Holt: Yep,

11
00:00:47.717 --> 00:00:52.464
looks like that's working.
&gt;&gt; Speaker 2: What was the plugin

12
00:00:52.464 --> 00:00:55.741
install?
&gt;&gt; Brian Holt: We installed this one here,

13
00:00:55.741 --> 00:01:04.426
eslint-plugin-prettier.
&gt;&gt; Brian Holt: So again,

14
00:01:04.426 --> 00:01:10.890
we're doing this more for something that,
we could run this now lint command in CI.

15
00:01:10.890 --> 00:01:15.438
And have our build fail
if it didn't pass lint.

16
00:01:15.438 --> 00:01:18.820
Actually, even better is you
can have it on a Get hook, so

17
00:01:18.820 --> 00:01:23.259
that anytime someone tries to commit
to your code base, it runs the lint and

18
00:01:23.259 --> 00:01:27.006
the prettier to make sure that
they're going to pass, right?

19
00:01:27.006 --> 00:01:30.772
And it won't let them check in locally,
even before they try and

20
00:01:30.772 --> 00:01:32.251
push out to production.

21
00:01:32.251 --> 00:01:33.582
So that's a good idea too.

22
00:01:33.582 --> 00:01:37.363
I won't necessarily show you how to do
that today, but there is a library called

23
00:01:37.363 --> 00:01:41.693
Husky that will let you do that.
&gt;&gt; Speaker 2: How do you spell that?

24
00:01:41.693 --> 00:01:43.986
&gt;&gt; Brian Holt: Husky, like the dog,

25
00:01:43.986 --> 00:01:50.423
H-U-S-K-Y.
&gt;&gt; Brian Holt: So

26
00:01:50.423 --> 00:01:55.793
now, we can go over to
our command line and

27
00:01:55.793 --> 00:02:00.682
say, mpm run lint.
&gt;&gt; Brian Holt: And

28
00:02:00.682 --> 00:02:05.988
you can see here we have this undef thing
which is what we should be seeing right?

29
00:02:05.988 --> 00:02:09.263
We're using this global react variable
that eslint knows nothing about.

30
00:02:09.263 --> 00:02:10.763
So it's just I don't know what this is.

31
00:02:10.763 --> 00:02:14.648
I assume it's an error,
which is correct, right?

32
00:02:14.648 --> 00:02:19.961
That's what I should be doing.
&gt;&gt; Brian Holt: So

33
00:02:19.961 --> 00:02:23.510
the no-undef is the name
of the rule that's failing.

34
00:02:23.510 --> 00:02:26.020
So if you look at it then I
don't know what that means.

35
00:02:26.020 --> 00:02:31.021
Just Google eslint no-undef, just do it.

36
00:02:33.013 --> 00:02:35.563
&gt;&gt; Brian Holt: Eslint no-undef, right?

37
00:02:35.563 --> 00:02:39.018
The first thing is always
gonna be the documentation for

38
00:02:39.018 --> 00:02:42.274
that rule.
&gt;&gt; Brian Holt: So

39
00:02:42.274 --> 00:02:46.506
you can see here if I have this, it's
gonna say hay, I don't know what b is so

40
00:02:46.506 --> 00:02:48.045
then it gives you an error.

41
00:02:48.045 --> 00:02:50.783
So that's how you figure out
what some of these rules are.

42
00:02:50.783 --> 00:02:53.540
Cuz some of them are a little
bit more cryptic than no-undef.

43
00:02:57.570 --> 00:03:00.290
&gt;&gt; Brian Holt: But again, this is great.

44
00:03:00.290 --> 00:03:04.270
This is something you can give your
curmudgeon colleague that won't install

45
00:03:04.270 --> 00:03:06.740
anything to their editor.

46
00:03:06.740 --> 00:03:09.725
However, I like just seeing
these things directly in my

47
00:03:09.725 --> 00:03:14.027
editor,
&gt;&gt; Brian Holt: So

48
00:03:14.027 --> 00:03:19.083
let's see,
&gt;&gt; Brian Holt: What

49
00:03:19.083 --> 00:03:24.058
you can do here is you can come in and
install an extension called ESLint.

50
00:03:24.058 --> 00:03:29.482
And I already have it installed.

51
00:03:34.345 --> 00:03:39.901
&gt;&gt; Brian Holt: And,
&gt;&gt; Brian Holt: You can see now

52
00:03:39.901 --> 00:03:45.970
underneath my code, I can actually see
the eslint errors directly in there.

53
00:03:45.970 --> 00:03:50.154
And if I hover over it says hey,
react is not defined, no-undef, right?

54
00:03:52.770 --> 00:03:55.334
Because we're using React
as a global variable and

55
00:03:55.334 --> 00:03:57.428
it does not know where it's coming from.

56
00:03:57.428 --> 00:04:02.498
We'll fix that here in a second but,
so how do we fix that?

57
00:04:02.498 --> 00:04:06.433
If I was doing this this way and
I wanted to come in as a global variable,

58
00:04:06.433 --> 00:04:10.395
you can either go add that into your
prettier, or your eslint config.

59
00:04:10.395 --> 00:04:18.495
Or you can come at the top here and say,
&gt;&gt; Brian Holt: Global React and

60
00:04:18.495 --> 00:04:24.549
it should shut that up and react on.
&gt;&gt; Brian Holt: And

61
00:04:24.549 --> 00:04:27.282
so now you can see, here the type is like,

62
00:04:27.282 --> 00:04:32.376
I know these are global variables that
are coming in, so do not error on that.

63
00:04:32.376 --> 00:04:35.492
We're gonna fix it here momentarily so,
I'm gonna take that out but

64
00:04:35.492 --> 00:04:36.520
that's how you do it.

65
00:04:46.153 --> 00:04:50.037
&gt;&gt; Brian Holt: Questions about that?

66
00:04:55.517 --> 00:04:56.689
&gt;&gt; Brian Holt: Sometimes mpm or

67
00:04:56.689 --> 00:04:59.940
eslint can be kind of a pain to set up.

68
00:04:59.940 --> 00:05:03.770
Is, for me, you have to get it just
right and just tuned directly.

69
00:05:03.770 --> 00:05:10.678
So something useful you can do is say,
debug -- --debug like that,

70
00:05:10.678 --> 00:05:15.417
and it's gonna give you
like all of the subsets.

71
00:05:15.417 --> 00:05:19.413
I loaded this from here, I'm gonna do like
it just like it gives you a whole bunch

72
00:05:19.413 --> 00:05:22.353
more info about stuff that
normally you don't wanna see.

73
00:05:22.353 --> 00:05:24.958
But when you're setting it up,
it's really helpful to see.

74
00:05:24.958 --> 00:05:27.816
So that's how you do that.

75
00:05:27.816 --> 00:05:33.279
This -- right here, this is something that
you can pass in to eslint to let it know.

76
00:05:33.279 --> 00:05:38.162
I'm gonna pass additional things that
I want you to pass on to whatever

77
00:05:38.162 --> 00:05:40.499
command that is you can see here.

78
00:05:40.499 --> 00:05:43.177
It run the first part first, right?

79
00:05:43.177 --> 00:05:45.855
So this is what I had to
find on my package.json.

80
00:05:45.855 --> 00:05:48.725
And then it also pass in --debug, so

81
00:05:48.725 --> 00:05:53.493
that's what that -- is in it pass,
pass in more parameters.

82
00:05:53.493 --> 00:05:55.134
Is that make sense?

83
00:05:55.134 --> 00:06:01.801
Okay, cool.
&gt;&gt; Brian Holt: Something

84
00:06:01.801 --> 00:06:05.080
else that eslint can do for you, in this
particular case we have nothing to fix.

85
00:06:05.080 --> 00:06:08.220
We can pass and --fix as well.

86
00:06:08.220 --> 00:06:11.310
There're somethings that eslint can
knows how to just fix by itself.

87
00:06:12.640 --> 00:06:13.380
We have nothing to fix.

88
00:06:13.380 --> 00:06:17.047
So, because these are not
necessary fixables.

89
00:06:17.047 --> 00:06:19.924
It doesn't know how to
fix global variables, but

90
00:06:19.924 --> 00:06:22.608
some other things
are quote unquote fixable.

91
00:06:22.608 --> 00:06:28.047
So often here on,
&gt;&gt; Brian Holt: My package.json I'll also

92
00:06:28.047 --> 00:06:34.986
just put,
&gt;&gt; Brian Holt: --Fix but,

93
00:06:34.986 --> 00:06:40.395
anyway.
&gt;&gt; Brian Holt: Anything else

94
00:06:40.395 --> 00:06:47.419
I wanted to cover here?
&gt;&gt; Brian Holt: Nope.

95
00:06:47.419 --> 00:06:50.780
At this point there is another,
if you've fallen behind,

96
00:06:50.780 --> 00:06:52.540
there is another commit here.

97
00:06:52.540 --> 00:06:55.845
So feel free to catch up that way.

98
00:07:02.210 --> 00:07:02.865
&gt;&gt; Brian Holt: Cool,

99
00:07:02.865 --> 00:07:07.782
let's keep going then,
we have a prettier in place,

100
00:07:07.782 --> 00:07:11.731
and we also have,
he has lint going for us.

101
00:07:11.731 --> 00:07:15.490
So now the next thing we wanna do is
we wanna introduce our built process.

102
00:07:15.490 --> 00:07:18.950
Alternatives for
eslint that was the last thing I forgot.

103
00:07:18.950 --> 00:07:23.626
Alternatives for eslint, if you don't
wanna use eslint, just use eslint.

104
00:07:23.626 --> 00:07:27.329
But [LAUGH] There are two other
tools one's called JSLint and

105
00:07:27.329 --> 00:07:28.745
one is called JSHint.

106
00:07:28.745 --> 00:07:31.718
JSLint is quite old, and
it's not configurable,

107
00:07:31.718 --> 00:07:35.380
it's not a lot of activity on that repo or
anything like that.

108
00:07:35.380 --> 00:07:41.960
I don't suggest JSLint, it's from
Douglas Crockford, who is really smart.

109
00:07:41.960 --> 00:07:45.340
And if you follow his school of thought
perfectly, then go right ahead.

110
00:07:45.340 --> 00:07:49.074
But it's not gonna help you with React,
cuz there's no React rules for

111
00:07:49.074 --> 00:07:51.576
JSLint cuz there are no configurations for
it.

112
00:07:51.576 --> 00:07:54.513
There's a new called JSHint.

113
00:07:54.513 --> 00:07:59.850
New were one I should say,
that has more rules,

114
00:07:59.850 --> 00:08:04.392
was more active, people still like it.

115
00:08:04.392 --> 00:08:07.905
But again, not separate configurable
in terms of like adding new rules and

116
00:08:07.905 --> 00:08:08.753
stuff like that.

117
00:08:08.753 --> 00:08:10.536
So also won't help you with react.

118
00:08:10.536 --> 00:08:12.049
So JSHint is out there as well.

119
00:08:13.210 --> 00:08:16.297
So eslint came along after that,
and now it's configurable,

120
00:08:16.297 --> 00:08:19.515
and plugable so you can have like
React rules and prettier rules.

121
00:08:19.515 --> 00:08:21.980
And it's able to move as
fast as an ecosystem,

122
00:08:21.980 --> 00:08:24.016
because you can build plugins for it.

123
00:08:24.016 --> 00:08:27.340
So I would definitely suggest
just sticking with eslint.

124
00:08:27.340 --> 00:08:30.089
Yeah, question?
&gt;&gt; Speaker 3: If you use the eslint,

125
00:08:30.089 --> 00:08:33.691
how do you solve for
the reactors not defined?

126
00:08:33.691 --> 00:08:36.169
Besides having to import it in every file.

127
00:08:36.169 --> 00:08:41.154
Because often in your projects
it's in your node module,

128
00:08:41.154 --> 00:08:44.750
or it's globally installed.
&gt;&gt; Brian Holt: Yes, the question is,

129
00:08:44.750 --> 00:08:46.079
how can you do global variables?

130
00:08:46.079 --> 00:08:48.054
I'm trying to remember,

131
00:08:48.054 --> 00:08:53.936
it might be globals,
&gt;&gt; Brian Holt: "React ":true,

132
00:08:53.936 --> 00:08:55.666
I think this is it.

133
00:08:55.666 --> 00:08:58.856
Dangers of live coding,
and that's what it is.

134
00:08:58.856 --> 00:09:03.454
Yes, nailed it, [LAUGH] So
here in your eslintrc,

135
00:09:03.454 --> 00:09:08.933
you just define globals as if
you see this, just ignore it.

136
00:09:08.933 --> 00:09:09.976
Answer your question?

137
00:09:09.976 --> 00:09:14.220
Yeah?
&gt;&gt; Speaker 3: So is there a way to,

138
00:09:14.220 --> 00:09:18.520
automatically like add this
as you add in packages, or

139
00:09:18.520 --> 00:09:21.710
is it like every time you added
a package that, okay, react on.

140
00:09:21.710 --> 00:09:24.577
Now, I know in my eslint,
I'm gonna add this globals,

141
00:09:24.577 --> 00:09:25.652
like React on.
&gt;&gt; Brian Holt: Yeah,

142
00:09:25.652 --> 00:09:28.710
I don't think there's a way to automate
that and I don't think you'd want to.

143
00:09:28.710 --> 00:09:34.773
You want to be pretty, you should not
have any globals, to be honest with you.

144
00:09:34.773 --> 00:09:38.166
I never have any globals in my projects.

145
00:09:38.166 --> 00:09:40.483
Sometimes I'll turn on these ends,

146
00:09:40.483 --> 00:09:45.646
later we're gonna turn on Jest as well
because we're going to have Jest going on.

147
00:09:45.646 --> 00:09:51.413
But maybe Google Analytics,
that might be it, or whatever.

148
00:09:51.413 --> 00:09:55.509
We have app insights at Microsoft,
like whatever one you're using.

149
00:09:55.509 --> 00:09:58.021
But, I can imagine anything else.

