WEBVTT

1
00:00:00.005 --> 00:00:05.838
&gt;&gt; Brian Holt: Again,
this is at bit-la/react-v4.

2
00:00:05.838 --> 00:00:07.610
That'll take you to the website.

3
00:00:07.610 --> 00:00:11.148
In the State and Lifecycle Methods,

4
00:00:11.148 --> 00:00:15.115
click here.
&gt;&gt; Brian Holt: This is gonna take you

5
00:00:15.115 --> 00:00:16.240
to the Petfinder website.

6
00:00:17.790 --> 00:00:19.630
I have credentials already.

7
00:00:19.630 --> 00:00:23.120
So, I'm going to just sign in and
grab my credentials but

8
00:00:23.120 --> 00:00:26.627
I need you to go sign up and
get your own credentials here.

9
00:00:26.627 --> 00:00:31.045
The amazing people that make this
website for free, or this API for free,

10
00:00:31.045 --> 00:00:35.908
so that you can build applications around
adopting animals, so I'm a huge fan.

11
00:00:35.908 --> 00:00:39.483
I will be donating some of my
proceeds from this to them for

12
00:00:39.483 --> 00:00:47.952
supplying you all with this awesome API.
&gt;&gt; Brian Holt: So

13
00:00:47.952 --> 00:00:49.540
here are my keys and secrets.

14
00:00:49.540 --> 00:00:50.878
Do not use them.

15
00:00:50.878 --> 00:00:54.802
[LAUGH] Please?
&gt;&gt; Speaker 2: [LAUGH]

16
00:00:54.802 --> 00:00:55.420
&gt;&gt; Brian Holt: I will

17
00:00:55.420 --> 00:00:57.360
also be changing it
immediately after this.

18
00:00:57.360 --> 00:00:59.964
So if you're watching the video of
this you will not be able to use

19
00:00:59.964 --> 00:01:04.675
them.
&gt;&gt; Brian Holt: Okay, so

20
00:01:04.675 --> 00:01:08.080
you're gonna end up with this API key and
API secret right here.

21
00:01:09.600 --> 00:01:15.568
What I want you to do now is go over
to your code, make a new file and

22
00:01:15.568 --> 00:01:20.543
call it .env and
save it right on the same level as your

23
00:01:20.543 --> 00:01:25.657
package.json, the root
directory of your project.

24
00:01:25.657 --> 00:01:27.903
Yes, use .env.

25
00:01:27.903 --> 00:01:29.620
If you've ever heard of.

26
00:01:29.620 --> 00:01:35.750
Might, it's actually quite common across
Java, and Python, and now JavaScript.

27
00:01:35.750 --> 00:01:39.550
It's the ability to define
environmental variables as a file, and

28
00:01:39.550 --> 00:01:44.640
parcel will read from this automatically,
more magic from parcel.

29
00:01:45.640 --> 00:01:51.750
So all you wanna do here is, I wanna put
API_KEY=, whatever my key is, right?

30
00:01:53.390 --> 00:01:57.278
And then API secret, right here

31
00:01:57.278 --> 00:02:03.124
API_secret.
&gt;&gt; Brian Holt: And

32
00:02:03.124 --> 00:02:05.425
now, instead of my parcel app,

33
00:02:05.425 --> 00:02:10.470
I can refer to process.m.apikey
anywhere and it will spit this out.

34
00:02:12.830 --> 00:02:16.600
So this is a good way of
managing secrets with

35
00:02:16.600 --> 00:02:19.410
JavaScript projects is
with these .m files.

36
00:02:19.410 --> 00:02:21.590
The key here is that
you'll get ignore this.

37
00:02:21.590 --> 00:02:23.540
You actually won't check this code in.

38
00:02:23.540 --> 00:02:26.590
Just every developer will set up
their own API keys, right, and

39
00:02:26.590 --> 00:02:28.310
will be able to access the application.

40
00:02:29.830 --> 00:02:31.400
You can actually even get
a little bit more clever, and

41
00:02:31.400 --> 00:02:34.970
you can actually load these things from
something like Kubernetes Secrets or

42
00:02:34.970 --> 00:02:38.800
you can load it with, Azure has
this thing called Azure Key Vault.

43
00:02:38.800 --> 00:02:40.151
That you set it up in the cloud and

44
00:02:40.151 --> 00:02:43.390
then it's automated loaded into
your application at build time.

45
00:02:43.390 --> 00:02:44.430
So cool stuff like that.

46
00:02:47.120 --> 00:02:51.162
So anything else that you would
consider a secret here or

47
00:02:51.162 --> 00:02:57.012
wanted to do something like node env
equals development or something like that.

48
00:02:57.012 --> 00:03:01.354
Any one of these environmental variables
that you want be able to change really

49
00:03:01.354 --> 00:03:04.990
easily at a project level,
dot env is a really good way to do that.

50
00:03:06.580 --> 00:03:08.518
Or it's things like this,
api keys and secrets and

51
00:03:08.518 --> 00:03:16.102
that kind of stuff.
&gt;&gt; Brian Holt: Cool.

52
00:03:16.102 --> 00:03:19.831
Question.
&gt;&gt; Speaker 2: I would assume you wouldn't

53
00:03:19.831 --> 00:03:24.170
wanna put this under version control
because then you're sending your keys into

54
00:03:24.170 --> 00:03:26.578
your GitHub or whatever it may be.
&gt;&gt; Brian Holt: Right.

55
00:03:26.578 --> 00:03:29.012
&gt;&gt; Speaker 2: Do you use some kind of

56
00:03:29.012 --> 00:03:33.883
dotenv dot sample with placeholder keys to

57
00:03:33.883 --> 00:03:38.850
give people basic starting point?
&gt;&gt; Brian Holt: That's a good question.

58
00:03:38.850 --> 00:03:42.410
If I'm building a library or an example
resource or something like that.

59
00:03:42.410 --> 00:03:49.532
I will check in basically
&gt;&gt; Brian Holt: This and

60
00:03:49.532 --> 00:03:53.651
I just won't put up the keys and
hope that they will fill in those keys

61
00:03:53.651 --> 00:03:59.179
afterwards.
&gt;&gt; Speaker 2: Would

62
00:03:59.179 --> 00:04:03.688
they then get ignore the file and-
&gt;&gt; Brian Holt: Yep.

63
00:04:03.688 --> 00:04:04.997
&gt;&gt; Speaker 2: So they take the file and

64
00:04:04.997 --> 00:04:08.608
it's in the repo and then they get
ignore it and put their keys in?

65
00:04:08.608 --> 00:04:09.145
&gt;&gt; Brian Holt: Well, so

66
00:04:09.145 --> 00:04:11.505
I'll check it in first and get ignore it.

67
00:04:11.505 --> 00:04:14.769
So if you check something in and then get
ignore it without actually removing it,

68
00:04:14.769 --> 00:04:15.888
it still stays in the repo.

69
00:04:15.888 --> 00:04:16.715
Right?
&gt;&gt; Speaker 2: Okay.

70
00:04:16.715 --> 00:04:17.660
&gt;&gt; Brian Holt: .gitignore

71
00:04:17.660 --> 00:04:20.680
just means ignore all future
things to do with this file.

72
00:04:20.680 --> 00:04:21.820
&gt;&gt; Speaker 2: That's great cuz I've spent

73
00:04:21.820 --> 00:04:26.720
so much time futzing with .sample
files of configs and things.

74
00:04:26.720 --> 00:04:27.555
Thank you.
&gt;&gt; Brian Holt: Totally.

75
00:04:30.809 --> 00:04:32.108
&gt;&gt; Brian Holt: So does everyone have keys

76
00:04:32.108 --> 00:04:33.000
and secrets now?

77
00:04:34.760 --> 00:04:39.220
Cool, so thank you, Petfinder.

78
00:04:39.220 --> 00:04:40.470
Hopefully someone adopts an animal.

79
00:04:40.470 --> 00:04:43.270
If anyone adopts an animal because
of this, please tell me, so

80
00:04:43.270 --> 00:04:46.930
I can feel good about myself.
&gt;&gt; Speaker 2: [LAUGH] People in the chat

81
00:04:46.930 --> 00:04:51.850
that are outside of the US, we're asking
for a sample ZIP codes, so just use 55402.

82
00:04:51.850 --> 00:04:54.970
That's where we are right now.
&gt;&gt; Brian Holt: Yep, that works.

83
00:04:54.970 --> 00:05:03.339
I guess they do require that, don't they?
&gt;&gt; Brian Holt: Cool,

84
00:05:03.339 --> 00:05:08.535
yes, so that bears mentioning, we are
going to be doing searches using this API.

85
00:05:08.535 --> 00:05:10.242
It is a US based API.

86
00:05:10.242 --> 00:05:13.577
It only covers adoption agencies
here in the United States.

87
00:05:13.577 --> 00:05:18.258
So when it starts asking for city and
location, you'll have to use a city and

88
00:05:18.258 --> 00:05:22.371
state here in the United States,
but I will provide those for you.

