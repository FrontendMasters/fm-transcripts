WEBVTT

1
00:00:00.000 --> 00:00:02.200
&gt;&gt; Brian Holt: So
we're gonna build this AdoptMe app here.

2
00:00:02.200 --> 00:00:03.950
Let's see, let me get my notes here.

3
00:00:06.030 --> 00:00:08.638
And we're gonna put a couple
more things in here.

4
00:00:08.638 --> 00:00:13.660
So we're gonna put a DIV here,
and its ID is going to be root,

5
00:00:13.660 --> 00:00:17.701
this is where React is
going to be rendered into,

6
00:00:17.701 --> 00:00:22.742
this is the target element where
React is gonna render into.

7
00:00:22.742 --> 00:00:26.085
I like to put something in here,
so that if it shows up,

8
00:00:26.085 --> 00:00:28.360
I know that the app is not rendering.

9
00:00:28.360 --> 00:00:30.060
So I put not rendered.

10
00:00:31.060 --> 00:00:34.879
Because when it does render, React
will replace whatever inside of that.

11
00:00:37.259 --> 00:00:38.123
&gt;&gt; Brian Holt: Okay?

12
00:00:40.141 --> 00:00:41.883
&gt;&gt; Brian Holt: Then,
we're gonna put two script tags here.

13
00:00:47.912 --> 00:00:53.572
&gt;&gt; Brian Holt: Okay, and
these are gonna go to

14
00:00:53.572 --> 00:01:03.162
https://unpkg.com/react@16.4.1,

15
00:01:03.162 --> 00:01:07.516
which as of last night,

16
00:01:07.516 --> 00:01:14.702
was the most current version of React,

17
00:01:14.702 --> 00:01:21.481
/umd/react.development.js.

18
00:01:26.090 --> 00:01:30.010
&gt;&gt; Brian Holt: So let's talk
a second about what unpackage is.

19
00:01:30.010 --> 00:01:34.990
It is basically a CDN for
modules that are on npm.

20
00:01:34.990 --> 00:01:38.020
It's mostly just so you can like
test stuff out just like this.

21
00:01:38.020 --> 00:01:42.000
You can actually load in files
directly from npm packages.

22
00:01:42.000 --> 00:01:45.410
It's actually written by one of the
creators of React router, specifically for

23
00:01:45.410 --> 00:01:47.350
this use case, for bringing in Reacts so

24
00:01:47.350 --> 00:01:50.160
that you can have just like
little experiments with it.

25
00:01:50.160 --> 00:01:55.050
So if you wanna just open that, in fact,
I can just come in and click on it.

26
00:01:55.050 --> 00:02:01.506
You can see here it's just a really,
really long JavaScript file.

27
00:02:01.506 --> 00:02:07.110
So this is going to be loading
that into your browser, okay.

28
00:02:08.550 --> 00:02:11.410
So with React,
you actually need two packages.

29
00:02:11.410 --> 00:02:16.100
You need React and
you need another one called ReactDOM.

30
00:02:16.100 --> 00:02:20.340
React is actually split into two
packages for one specific reason.

31
00:02:20.340 --> 00:02:25.100
It used to be one package,
like maybe 18 months ago,

32
00:02:25.100 --> 00:02:29.780
2 years ago, something like that,
forever ago in terms of Frontend software.

33
00:02:29.780 --> 00:02:34.600
[LAUGH] The reason why it split
into two is we were writing these

34
00:02:34.600 --> 00:02:37.660
React applications and
some engineers at Facebook were like, this

35
00:02:37.660 --> 00:02:41.600
seems really cool, we wish that we could
do this for mobile development, right?

36
00:02:41.600 --> 00:02:44.450
That we could write code in the same
way that you write code for

37
00:02:44.450 --> 00:02:47.300
the Frontend,
that we can build it the same for mobile.

38
00:02:47.300 --> 00:02:49.200
So they went and
built this thing called React Native,

39
00:02:49.200 --> 00:02:52.070
which I'm sure many of you have heard of.

40
00:02:52.070 --> 00:02:56.630
So they used the same API to
build React applications, but

41
00:02:56.630 --> 00:02:58.130
they used that to target mobile.

42
00:02:58.130 --> 00:03:02.492
So they changed the rendering layer, and
actually, this started happening a lot,

43
00:03:02.492 --> 00:03:06.806
they started targeting things, like you
can buy IoT devices with React hardware.

44
00:03:06.806 --> 00:03:11.471
You can build VR things with React 360,
or A-Frame React,

45
00:03:11.471 --> 00:03:15.622
like there's a bunch of
different kinds of renderers.

46
00:03:15.622 --> 00:03:18.125
So React is actually the core API, and

47
00:03:18.125 --> 00:03:21.890
then you need a second one
that's the renderer, right?

48
00:03:21.890 --> 00:03:26.200
So we have to bring another package
called ReactDOM because that'll actually

49
00:03:26.200 --> 00:03:31.470
render whatever we have inside our
React application to the DOM, okay?

50
00:03:31.470 --> 00:03:36.941
So I'm gonna make a copy
of this line here, right?

51
00:03:36.941 --> 00:03:41.603
And then here, where it says react,
I'm going to say, react-dom,

52
00:03:41.603 --> 00:03:46.390
D-O-M, and then again here,
where it says, react.development.

53
00:03:46.390 --> 00:03:48.740
Say, react-dom.development.

54
00:03:48.740 --> 00:03:53.639
So you need to change two things,
this one and this one.

55
00:03:55.740 --> 00:03:59.599
As far as I know, it doesn't matter
what order they come in, but

56
00:03:59.599 --> 00:04:02.535
just do it in this order
cuz I know this one works.

57
00:04:07.470 --> 00:04:08.642
&gt;&gt; Brian Holt: Okay, questions so far?

58
00:04:13.044 --> 00:04:17.211
&gt;&gt; Brian Holt: So you're gonna be loading
these two files off a CDN into your

59
00:04:17.211 --> 00:04:22.210
browser and then now, if we make
another script tag just beneath these.

60
00:04:26.564 --> 00:04:29.232
&gt;&gt; Brian Holt: Inside of the script tag,
we're gonna have both react and

61
00:04:29.232 --> 00:04:32.947
reactDOM available, so that we can
actually start coding directly with these.

62
00:04:32.947 --> 00:04:35.293
So no build step or anything like that.

63
00:04:35.293 --> 00:04:40.640
We're literally just writing code inside
of a script tag, the least magical thing.

64
00:04:40.640 --> 00:04:46.834
So your, I can spell, your code goes here.

