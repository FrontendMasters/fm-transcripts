WEBVTT

1
00:00:00.220 --> 00:00:03.030
&gt;&gt; Brian Holt: So something that's
really big for me is code quality.

2
00:00:03.030 --> 00:00:06.620
I try and keep when I work on team
projects and things like that,

3
00:00:06.620 --> 00:00:08.990
I try to keep my code quality really high.

4
00:00:08.990 --> 00:00:12.150
And a big model that I have it's that
which can not be automated will not

5
00:00:12.150 --> 00:00:13.840
be enforced.

6
00:00:13.840 --> 00:00:17.480
So if I can't write some linting rule or

7
00:00:17.480 --> 00:00:20.940
testing rule that forces you to do
something, I will not make you do that,

8
00:00:20.940 --> 00:00:25.160
because those sort of discipline sort
of things almost never happen, right?

9
00:00:25.160 --> 00:00:28.278
You have some rule that you can't
check in this kind of thing, right?

10
00:00:28.278 --> 00:00:30.890
And the next day, someone checks it in.

11
00:00:30.890 --> 00:00:34.620
So that's why I like anything
that can be automated.

12
00:00:34.620 --> 00:00:37.914
So if I don't want you to check
in a certain type of code.

13
00:00:37.914 --> 00:00:41.280
I'm gonna write a rule that
will literally fail the build,

14
00:00:41.280 --> 00:00:43.570
if you try to do something, right?

15
00:00:43.570 --> 00:00:46.704
So that why I like linting,
I like testing,

16
00:00:46.704 --> 00:00:50.620
I like auto code formatting,
any one of these things.

17
00:00:50.620 --> 00:00:52.242
Tabs versus spaces, right?

18
00:00:52.242 --> 00:00:56.178
I've worked on way too many projects
that have mixed tabs and spaces and

19
00:00:56.178 --> 00:00:58.618
I imagine some of you
probably have as well.

20
00:00:58.618 --> 00:01:01.567
So that's why I use tools.

21
00:01:01.567 --> 00:01:04.587
If you try and check something with
tabs it's just gonna say, nope,

22
00:01:04.587 --> 00:01:06.474
I'm not gonna check it in for you, right?

23
00:01:06.474 --> 00:01:07.965
So let's get started with
some of these things.

24
00:01:07.965 --> 00:01:15.076
The first thing I want you to use
is something called prettier.

25
00:01:15.076 --> 00:01:21.374
It's probably my favorite JavaScript
project from the past two years.

26
00:01:21.374 --> 00:01:23.910
Let's move this around, okay.

27
00:01:25.380 --> 00:01:28.190
So I'm here inside of my root directory.

28
00:01:28.190 --> 00:01:34.012
And what I'm gonna say is npm install -D,

29
00:01:34.012 --> 00:01:38.710
which means dev dependency,
not normal dependency.

30
00:01:41.080 --> 00:01:41.580
Prettier.

31
00:01:47.718 --> 00:01:51.517
&gt;&gt; Brian Holt: So
this went out to the npm registry and

32
00:01:51.517 --> 00:01:56.280
got me prettier and
installed it in my project.

33
00:01:56.280 --> 00:02:00.390
If you look now, I have this node nodules
directory which is gonna be filled

34
00:02:00.390 --> 00:02:04.317
with all the things that I've
installed from the npm registry, Okay.

35
00:02:07.598 --> 00:02:11.080
&gt;&gt; Brian Holt: So if any of you are coming
from a tool, or from a programming

36
00:02:11.080 --> 00:02:16.110
language like Go, you'll be familiar with
something called the Go format, right?

37
00:02:16.110 --> 00:02:17.056
Gofmt.

38
00:02:17.056 --> 00:02:21.433
One of my most favorite things about
the Go ecosystem is they all use the same

39
00:02:21.433 --> 00:02:24.296
formatter and
there's like very little rules.

40
00:02:24.296 --> 00:02:28.400
So most Go code looks relatively similar.

41
00:02:28.400 --> 00:02:32.830
So if you jump around from Go project to
Go project, they all indent the same way.

42
00:02:32.830 --> 00:02:36.295
They all have the similar spacing rules,
it makes it all very easy to read,

43
00:02:36.295 --> 00:02:37.837
because it's all very uniform.

44
00:02:37.837 --> 00:02:42.649
A really, really smart guy
that was working at Mozilla at

45
00:02:42.649 --> 00:02:46.610
the time wrote this thing called Prettier.

46
00:02:46.610 --> 00:02:48.950
It does the same thing, but
for JavaScript projects.

47
00:02:50.210 --> 00:02:53.004
And I'm just a massive fan of it,
because it does the same thing.

48
00:02:53.004 --> 00:02:55.130
So we're talking about double quotes or
single quotes.

49
00:02:55.130 --> 00:02:58.840
The reason why I don't really care is cuz
Prettier automatically changes them all

50
00:02:58.840 --> 00:03:00.170
to double quotes.

51
00:03:00.170 --> 00:03:02.450
So I never ever have to think about it.

52
00:03:02.450 --> 00:03:07.159
So all that thing like that background
process in my brain of should I format

53
00:03:07.159 --> 00:03:07.991
this is way?

54
00:03:07.991 --> 00:03:10.390
Should I use two spaces or four spaces?

55
00:03:10.390 --> 00:03:11.400
Should I put a space here?

56
00:03:11.400 --> 00:03:15.457
All those kinda dumb formatting things
that you're always thinking about like

57
00:03:15.457 --> 00:03:16.495
indenting things.

58
00:03:16.495 --> 00:03:20.011
You just gotta shut down that process
in your brain because Purdue just

59
00:03:20.011 --> 00:03:22.408
automatically fixes all these things for
you.

60
00:03:22.408 --> 00:03:26.355
There's no decisions to be made.There's
none of that cognitive overhead,

61
00:03:26.355 --> 00:03:27.858
it just fixes things for you.

62
00:03:31.896 --> 00:03:34.053
&gt;&gt; Brian Holt: So let's show you
how that works really quick.

63
00:03:34.053 --> 00:03:38.714
So I'm gonna go into my
source directory here,

64
00:03:38.714 --> 00:03:44.020
and I have app.js, and
I wanna format that.

65
00:03:44.020 --> 00:03:46.941
So what I'm gonna do is I'm gonna,
why does this keep changing on me?

66
00:03:46.941 --> 00:03:49.033
All right.

67
00:03:54.080 --> 00:03:56.817
&gt;&gt; Brian Holt: So I have this here, it's
relatively well formatted right now, but

68
00:03:56.817 --> 00:03:59.175
I'm just gonna do the worst thing
I can possibly think of and

69
00:03:59.175 --> 00:04:01.459
I'm just going to remove all
the indentation from this.

70
00:04:03.040 --> 00:04:03.997
This looks horrible now, doesn't it.

71
00:04:03.997 --> 00:04:06.800
You're gonna cringe a little bit.

72
00:04:06.800 --> 00:04:07.605
Someone's dry heaving in the room.

73
00:04:07.605 --> 00:04:12.535
[LAUGH] But
what I can say is what npx is gonna do is

74
00:04:12.535 --> 00:04:17.340
it runs a package from my node directory.

75
00:04:17.340 --> 00:04:19.588
So npx prettier app.js.

76
00:04:19.588 --> 00:04:22.155
So this is gonna run prettier on app.js.

77
00:04:25.369 --> 00:04:26.587
&gt;&gt; Brian Holt: And you can see here,

78
00:04:26.587 --> 00:04:30.060
it actually fixes all this stuff
just automatically for me.

79
00:04:30.060 --> 00:04:32.270
So if I say, mpx app.js --write,

80
00:04:32.270 --> 00:04:36.280
it'll actually overwrite the file
with the correct formatting.

81
00:04:38.544 --> 00:04:42.088
&gt;&gt; Brian Holt: So now, if I go look
at this, it's all fixed again.

82
00:04:42.088 --> 00:04:46.637
But you can see here, everything
is now in double quotes, it's all,

83
00:04:46.637 --> 00:04:51.729
it's done, redone some of the things,
so that the line length is under 80,

84
00:04:51.729 --> 00:04:55.532
it does a bunch of things for
you just kind of out of the box.

85
00:04:55.532 --> 00:04:59.666
&gt;&gt; Speaker 2: Which folder do you have to
be in for [INAUDIBLE] not finding that?

86
00:04:59.666 --> 00:05:01.849
&gt;&gt; Brian Holt: I'm in
the source directory here.

87
00:05:01.849 --> 00:05:07.449
So if I was in the root part of
the directory, I would just have to say,

88
00:05:07.449 --> 00:05:12.490
src/app.js, you just have to
point it at the correct file.

89
00:05:20.249 --> 00:05:21.415
&gt;&gt; Brian Holt: We'll fix it in a second so

90
00:05:21.415 --> 00:05:23.590
you don't have to actually
worry about that,.

91
00:05:23.590 --> 00:05:29.514
&gt;&gt; Speaker 3: So I know that there is a
way to automatically turn on Prettier for

92
00:05:29.514 --> 00:05:30.731
every file.

93
00:05:30.731 --> 00:05:32.519
How do you feel about that personally?

94
00:05:32.519 --> 00:05:34.281
&gt;&gt; Brian Holt: I have to do it.

95
00:05:34.281 --> 00:05:35.002
&gt;&gt; Speaker 3: Okay.

96
00:05:35.002 --> 00:05:38.018
&gt;&gt; Brian Holt: Yeah,
I'm morally compelled to do so.

97
00:05:38.018 --> 00:05:42.520
[LAUGH] I'll show you
how in just a second.

98
00:05:42.520 --> 00:05:43.551
It's a good question.
So, yeah,

99
00:05:43.551 --> 00:05:46.657
you'll remember this was
all in the same line.

100
00:05:46.657 --> 00:05:49.068
Prettier will actually break
this into separate lines, so

101
00:05:49.068 --> 00:05:52.159
that the line lengths will be shorter,
so it's a little bit easier to read.

102
00:05:52.159 --> 00:05:56.669
Again, one of my favorite parts about
this is it's not very configurable.

103
00:05:56.669 --> 00:06:01.360
There are some things that you can
configure with Prettier, but I don't care.

104
00:06:01.360 --> 00:06:03.700
[LAUGH] Cuz I don't have to care.

105
00:06:03.700 --> 00:06:07.070
As long as something is doing all the
formatting for me, I don't care, right?

106
00:06:08.660 --> 00:06:09.251
Someone else gets to worry about it.

107
00:06:09.251 --> 00:06:12.710
Something gets to automate it, and I just
don't have to worry about it anymore.

108
00:06:12.710 --> 00:06:14.470
Some people will just love to argue.

109
00:06:14.470 --> 00:06:18.450
It's like they should be using tabs, or
this should be using 120 mile length, and

110
00:06:18.450 --> 00:06:20.370
the fact of the matter
is I just don't care.

111
00:06:21.510 --> 00:06:23.740
I don't care as long as it's uniform,
as long as it's easy to read,

112
00:06:23.740 --> 00:06:28.139
as long as it's good formatting, whatever.

