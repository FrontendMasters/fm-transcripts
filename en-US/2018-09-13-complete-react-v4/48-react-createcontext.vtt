WEBVTT

1
00:00:00.290 --> 00:00:02.880
&gt;&gt; Brian Holt: So before I showed
you how you would solve this without

2
00:00:02.880 --> 00:00:04.090
context, right?

3
00:00:04.090 --> 00:00:07.585
But what we're gonna do now is we're
going to solve this with context.

4
00:00:09.343 --> 00:00:10.783
&gt;&gt; Brian Holt: So make a new file here.

5
00:00:12.830 --> 00:00:17.437
&gt;&gt; Brian Holt: And
call it search context.js.

6
00:00:20.074 --> 00:00:25.215
&gt;&gt; Brian Holt: Okay,
Import React from react.

7
00:00:25.215 --> 00:00:31.950
The problem that we're going to solve
here is that we have the location,

8
00:00:31.950 --> 00:00:36.480
the animal and the breed, and we need to
read that from the search params page and

9
00:00:36.480 --> 00:00:40.190
then use it to search on the results page.

10
00:00:42.270 --> 00:00:47.352
So what we're gonna do here is
we're gonna say const SearchContext

11
00:00:47.352 --> 00:00:52.244
= React.createContext.

12
00:00:52.244 --> 00:00:56.800
This is a new method with React that's
going to create two components for

13
00:00:56.800 --> 00:01:01.440
you, a provider component and
a consumer component, right?

14
00:01:01.440 --> 00:01:04.550
The provider is going to make
everything available underneath it, and

15
00:01:04.550 --> 00:01:07.930
the consumer is going to
read from the provider,

16
00:01:07.930 --> 00:01:10.240
no matter how much distance
there is between it.

17
00:01:10.240 --> 00:01:11.950
So it's kind of magical, right?

18
00:01:11.950 --> 00:01:13.730
There's a magical
connection between the two,

19
00:01:13.730 --> 00:01:17.660
that React is going to provide
basically a portal of data that you put

20
00:01:17.660 --> 00:01:20.370
data in one side and
it will come out the other side.

21
00:01:20.370 --> 00:01:23.822
So the provider is like
the entrance to the portal and

22
00:01:23.822 --> 00:01:27.045
the consumer is the exit from the portal,
okay?

23
00:01:27.045 --> 00:01:31.413
And then here, you're gonna
describe what your data looks like.

24
00:01:31.413 --> 00:01:35.349
So I'm gonna be tracking location, and

25
00:01:35.349 --> 00:01:39.632
then you'll give it your default value, so

26
00:01:39.632 --> 00:01:44.956
I'm gonna say Seattle,
WA, animal, empty string,

27
00:01:44.956 --> 00:01:49.380
breed, empty string, breeds empty array.

28
00:01:49.380 --> 00:01:57.630
And then not only that, I'm gonna give it
the ability to modify this context, right?

29
00:01:57.630 --> 00:02:03.671
So I need to give it the methods so that
people can actually on the consumer side,

30
00:02:03.671 --> 00:02:07.833
components on the consumer
side can modify that data.

31
00:02:07.833 --> 00:02:12.334
So we're gonna give it those handle
methods, handleAnimalChange and

32
00:02:12.334 --> 00:02:16.125
these are just gonna be
empty functions for now.

33
00:02:16.125 --> 00:02:19.966
&gt;&gt; Brian Holt: HandleBreedChange,

34
00:02:19.966 --> 00:02:24.415
handleLocationChange.

35
00:02:28.484 --> 00:02:29.642
&gt;&gt; Brian Holt: And get breeds.

36
00:02:37.030 --> 00:02:40.200
&gt;&gt; Brian Holt: So what these are,
these are actually kind of dummy methods.

37
00:02:40.200 --> 00:02:42.226
You'll use these if you're doing testing,
but

38
00:02:42.226 --> 00:02:45.008
these are actually not the real
implementation of these methods.

39
00:02:45.008 --> 00:02:48.180
But you're just describing to
React what these look like.

40
00:02:48.180 --> 00:02:51.880
This is useful because later we'll be able
to reference inside of this component.

41
00:02:51.880 --> 00:02:55.133
It's like this is everything that's
gonna be stored inside of this context.

42
00:02:59.051 --> 00:03:01.180
&gt;&gt; Brian Holt: All right, and then we're
gonna do export two different things.

43
00:03:01.180 --> 00:03:09.445
Export const provider =
SearchContext.provider.

44
00:03:09.445 --> 00:03:16.568
And export const consumer
= searchContext.consumer.

45
00:03:16.568 --> 00:03:20.564
So these are named exports.

46
00:03:20.564 --> 00:03:25.011
So I have to go into search contacts and
import provider from there.

47
00:03:25.011 --> 00:03:29.380
So they're specifically
being exported that way.

48
00:03:29.380 --> 00:03:34.800
&gt;&gt; Speaker 2: Why do you choose to set
your functions in that way versus sending

49
00:03:34.800 --> 00:03:41.760
them so do get breeds colon and
then empty prints rackets?

50
00:03:41.760 --> 00:03:44.092
&gt;&gt; Brian Holt: I think less characters.

51
00:03:44.092 --> 00:03:46.398
&gt;&gt; Speaker 2: Okay, I just thought if
you have to worry about binding or

52
00:03:46.398 --> 00:03:47.272
anything like that.

53
00:03:47.272 --> 00:03:49.570
&gt;&gt; Brian Holt: No, they're just dummies.

54
00:03:49.570 --> 00:03:54.974
They're letting future people know
that these are just methods, right?

55
00:03:54.974 --> 00:03:58.204
So they're not doing anything.

56
00:03:58.204 --> 00:04:03.248
The real reason for this is what's
inside of here, this is what gets

57
00:04:03.248 --> 00:04:08.220
put on the context if no provider
is there which you shouldn't do.

58
00:04:08.220 --> 00:04:10.970
You shouldn't ever use a consumer
without a provider being above it.

59
00:04:12.060 --> 00:04:13.600
That's really what happens.

60
00:04:13.600 --> 00:04:16.407
So that's only really useful for
testing purposes.

61
00:04:23.180 --> 00:04:26.838
&gt;&gt; Brian Holt: And later, this will be
really useful for typescript because this

62
00:04:26.838 --> 00:04:30.579
is how typescript knows this is
what's going to be on your context.

63
00:04:35.981 --> 00:04:37.809
&gt;&gt; Brian Holt: So
now we've created context, right?

64
00:04:37.809 --> 00:04:40.489
This is how you create context.

