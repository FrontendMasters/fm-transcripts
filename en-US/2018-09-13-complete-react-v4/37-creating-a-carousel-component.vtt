WEBVTT

1
00:00:00.810 --> 00:00:02.700
&gt;&gt; Brian Holt: So
let's get started here and

2
00:00:02.700 --> 00:00:05.730
we're gonna make a file
called carousel.js.

3
00:00:10.211 --> 00:00:14.530
&gt;&gt; Brian Holt: What we're gonna teach
you here is how to do interactions.

4
00:00:14.530 --> 00:00:17.936
Like if I click on something to make
something happen to my interface and

5
00:00:17.936 --> 00:00:21.080
store that in state, and
kind of how it connects those things up.

6
00:00:22.110 --> 00:00:27.593
So we're gonna start here with
Carousel which is a hard word for

7
00:00:27.593 --> 00:00:30.702
me to spell for some reason, .js.

8
00:00:30.702 --> 00:00:33.693
Every time I, it's like one of those
words that when you start reading it and

9
00:00:33.693 --> 00:00:35.109
it just doesn't make sense to you.

10
00:00:35.109 --> 00:00:38.296
You kinda get in your head about,
I don't know, right, at least I do.

11
00:00:38.296 --> 00:00:41.590
Okay, so import React from 'react'.

12
00:00:41.590 --> 00:00:44.226
It's the first thing I'm gonna do up here.

13
00:00:44.226 --> 00:00:49.267
And this is going to be a carousel of
all the various animals photos, right?

14
00:00:49.267 --> 00:00:52.678
So that you can see all of the pictures
that come with each animal.

15
00:00:52.678 --> 00:01:00.841
So class Carousel extends React.Component.

16
00:01:00.841 --> 00:01:04.969
Okay, and then down here you
just export default Carousel.

17
00:01:04.969 --> 00:01:10.063
That's in general how I start every
React component, because I often forget

18
00:01:10.063 --> 00:01:14.776
to put this export default,
it's obviously very key in this process.

19
00:01:14.776 --> 00:01:17.256
So I tend to do that up front.

20
00:01:17.256 --> 00:01:20.015
I'm gonna write a render method up here.

21
00:01:21.795 --> 00:01:23.679
&gt;&gt; Brian Holt: Which we'll
get to in just a second.

22
00:01:23.679 --> 00:01:27.220
The first thing we're gonna do is
we're gonna make our state object.

23
00:01:28.788 --> 00:01:32.318
&gt;&gt; Brian Holt: Photos is
gonna be an empty array.

24
00:01:32.318 --> 00:01:34.398
And active is going to 0.

25
00:01:34.398 --> 00:01:37.571
This is gonna be like the one that's
currently showing to the user is like

26
00:01:37.571 --> 00:01:39.940
the hero image, right, the big image.

27
00:01:39.940 --> 00:01:45.797
So we're gonna start by showing him the
first image in there, the 0 index, okay?

28
00:01:49.225 --> 00:01:52.911
&gt;&gt; Brian Holt: Then I wanna show you
another life cycle method that's actually

29
00:01:52.911 --> 00:01:54.350
brand new to React 16.

30
00:01:54.350 --> 00:01:58.640
This one is called get
derived state from props, so

31
00:01:58.640 --> 00:02:07.690
this is gonna be a static method,
getDerivedStateFromProps.

32
00:02:07.690 --> 00:02:08.930
It's a long one.

33
00:02:10.790 --> 00:02:16.660
And we're gonna destructure this and get
the media object out of this, like that.

34
00:02:18.400 --> 00:02:19.750
Why is this so upset right now?

35
00:02:21.180 --> 00:02:23.333
Cuz I don't have it
render return anything.

36
00:02:23.333 --> 00:02:23.885
That's annoying.
So I'm just gonna

37
00:02:23.885 --> 00:02:24.385
delete that for a second.

38
00:02:27.079 --> 00:02:29.826
&gt;&gt; Brian Holt: So
let's talk about getDerivedStateFromProps.

39
00:02:29.826 --> 00:02:32.918
One, it probably is mostly
self explanatory that you

40
00:02:32.918 --> 00:02:35.184
have props coming in from a parent, and

41
00:02:35.184 --> 00:02:38.979
you want to have some sort of
derived data from the props, right?

42
00:02:38.979 --> 00:02:42.214
What's cool about this
getDerivedStateFromProps is that every

43
00:02:42.214 --> 00:02:45.621
time that the props change,
it's just gonna run this again for you so

44
00:02:45.621 --> 00:02:46.930
you can update the state.

45
00:02:46.930 --> 00:02:48.356
Which I think is pretty cool,

46
00:02:48.356 --> 00:02:51.850
it's just odd math kind of
hooks into that life cycle.

47
00:02:51.850 --> 00:02:52.400
Yeah?

48
00:02:52.400 --> 00:02:54.616
&gt;&gt; Speaker 2: Why do you
have to call it static?

49
00:02:54.616 --> 00:02:56.490
&gt;&gt; Brian Holt: I'm getting there,
good question.

50
00:02:56.490 --> 00:02:59.955
First of all, if I delete this,
it's gonna say,

51
00:02:59.955 --> 00:03:04.741
eventually it will give you an error
saying like, hey that needs to be

52
00:03:04.741 --> 00:03:09.380
static from the linter, but
let's talk about why this is static.

53
00:03:09.380 --> 00:03:14.356
So a static method doesn't actually
exist on the instance of it,

54
00:03:14.356 --> 00:03:16.537
it exist on the class level.

55
00:03:16.537 --> 00:03:21.550
Which means that all carousels on your
page, if you have 200 carousels in your

56
00:03:21.550 --> 00:03:26.577
page, you're gonna have one copy of
this getDerivedStateFromProps, right?

57
00:03:26.577 --> 00:03:30.863
Whereas if I have 200 carousels,
I will have 200 render methods, right?

58
00:03:30.863 --> 00:03:33.380
Each get their own copy
of the render method.

59
00:03:33.380 --> 00:03:38.599
Now the reason for this being,
is that getDerivedState is

60
00:03:38.599 --> 00:03:43.603
a static method that I can
actually just call like this,

61
00:03:43.603 --> 00:03:47.345
Carousel.getDrivedStateFromProps.

62
00:03:47.345 --> 00:03:51.490
I can call it directly on it whereas I
can't call Carousel.render because it

63
00:03:51.490 --> 00:03:55.713
doesn't have a specific render method
until I actually instantiate a class.

64
00:03:55.713 --> 00:04:00.322
So I'd have to say const
c = new Carousel and

65
00:04:00.322 --> 00:04:04.069
then I can say c.render like that.

66
00:04:06.563 --> 00:04:10.863
&gt;&gt; Brian Holt: And the reason being for
this is that, we can do it this way is

67
00:04:10.863 --> 00:04:15.766
because this just takes in some props and
it gives you back state, so

68
00:04:15.766 --> 00:04:20.091
it's not actually operating
on any sort of part interior.

69
00:04:20.091 --> 00:04:22.540
You're not gonna call set state or
anything like that inside of it.

70
00:04:22.540 --> 00:04:26.150
You're just gonna take props and
give back state, that's it.

71
00:04:26.150 --> 00:04:27.741
So that kinda makes sense?

72
00:04:27.741 --> 00:04:30.432
That's what static means
in this particular case.

73
00:04:35.672 --> 00:04:39.815
&gt;&gt; Speaker 3: Would you also want to avoid
using this inside a static function?

74
00:04:39.815 --> 00:04:40.691
&gt;&gt; Brian Holt: You have to.

75
00:04:40.691 --> 00:04:41.669
&gt;&gt; Speaker 3: You have to avoid it?

76
00:04:41.669 --> 00:04:45.185
&gt;&gt; Brian Holt: You will be referring to
the carousel class in general, right?

77
00:04:45.185 --> 00:04:50.771
So if I said like this.render = 5,
I will break every carousel.

78
00:04:53.241 --> 00:04:54.601
&gt;&gt; Brian Holt: So, yes.

79
00:04:57.704 --> 00:04:59.775
&gt;&gt; Brian Holt: Yes,
if you remember from yesterday,

80
00:04:59.775 --> 00:05:02.800
the photos array has all
the various sizes in it, right?

81
00:05:02.800 --> 00:05:06.699
And we had to narrow it down to just
the one type that we cared about.

82
00:05:06.699 --> 00:05:10.254
And so that's what we're gonna do here,
is we're going to

83
00:05:10.254 --> 00:05:14.748
take in all of the photos and narrow it
down to just the photos we wanna have.

84
00:05:14.748 --> 00:05:17.813
So we're gonna say let photos = [ ].

85
00:05:17.813 --> 00:05:23.775
if (media &amp;&amp; media.photos

86
00:05:23.775 --> 00:05:30.202
&amp;&amp; media.photos.photo).

87
00:05:32.662 --> 00:05:40.250
&gt;&gt; Brian Holt: photos
= media.photos.photo,

88
00:05:42.754 --> 00:05:45.519
&gt;&gt; Brian Holt: .filter.

89
00:05:45.519 --> 00:05:51.099
I'm gonna say photo and
do an arrow method where we turn

90
00:05:51.099 --> 00:05:56.328
photo['@size']) it's gotta be in quotes.

91
00:05:56.328 --> 00:06:01.336
=== 'pn'.

92
00:06:01.336 --> 00:06:05.979
And then down here return a new

93
00:06:05.979 --> 00:06:10.438
object of photos: photos or

94
00:06:10.438 --> 00:06:14.166
just photos like that.

95
00:06:18.218 --> 00:06:20.433
&gt;&gt; Brian Holt: So again, filter,
remember, is gonna go through, and

96
00:06:20.433 --> 00:06:22.618
it's going to filter out all
of the ones that are not pn.

97
00:06:22.618 --> 00:06:25.405
That's what this little filter
function does right here.

98
00:06:28.167 --> 00:06:29.739
&gt;&gt; Speaker 4: What does pn mean?

99
00:06:29.739 --> 00:06:33.235
&gt;&gt; Brian Holt: That's the size of
photo that we're going to keep,

100
00:06:33.235 --> 00:06:34.597
it's from the API.

101
00:06:34.597 --> 00:06:36.918
Yeah?

102
00:06:36.918 --> 00:06:41.039
&gt;&gt; Speaker 5: You were mentioning how this
is a static because it doesn't change

103
00:06:41.039 --> 00:06:42.518
anything internally.

104
00:06:42.518 --> 00:06:48.075
You're just grabbing data from the props
and providing state, but then even though

105
00:06:48.075 --> 00:06:53.646
you don't set the state here, this isn't
setting your state up on the class level?

106
00:06:55.258 --> 00:06:58.845
&gt;&gt; Brian Holt: So basically React is
calling the static method for you, and

107
00:06:58.845 --> 00:07:01.810
it's using that data to
merge into the instance.

108
00:07:01.810 --> 00:07:05.127
So React is internally using the static
method that you provided, right?

109
00:07:05.127 --> 00:07:05.631
&gt;&gt; Speaker 5: Okay.

110
00:07:05.631 --> 00:07:06.583
&gt;&gt; Brian Holt: Does that make sense?

111
00:07:06.583 --> 00:07:07.794
&gt;&gt; Speaker 5: So then does that,

112
00:07:07.794 --> 00:07:11.357
would that trigger a refresh
like the said state would?

113
00:07:11.357 --> 00:07:12.568
Or I guess it would cuz the props

114
00:07:12.568 --> 00:07:13.508
[INAUDIBLE]-
&gt;&gt; Brian Holt: The props are changing.

115
00:07:13.508 --> 00:07:14.337
&gt;&gt; Speaker 5: Okay.

116
00:07:14.337 --> 00:07:16.239
&gt;&gt; Brian Holt: And I was trying
to remember where it says this.

117
00:07:16.239 --> 00:07:20.980
So if I save this without static in there,
React in the dev console will say,

118
00:07:20.980 --> 00:07:23.440
hey, this needs to be a static method.

119
00:07:25.990 --> 00:07:28.310
The dev build will,
the production build won't.

120
00:07:28.310 --> 00:07:29.620
I think about a little
break in production.

121
00:07:31.020 --> 00:07:31.590
Yeah, questions.

122
00:07:31.590 --> 00:07:34.384
&gt;&gt; Speaker 3: So
you getDerivedStateFromProps is a specific

123
00:07:34.384 --> 00:07:35.158
magic name?

124
00:07:35.158 --> 00:07:37.760
You didn't just make that up,
and we're gonna reference it.

125
00:07:37.760 --> 00:07:39.105
React is looking for that name.

126
00:07:39.105 --> 00:07:39.973
&gt;&gt; Brian Holt: Correct.

127
00:07:39.973 --> 00:07:40.695
&gt;&gt; Speaker 3: Thanks.

128
00:07:40.695 --> 00:07:41.700
&gt;&gt; Brian Holt: Yep.

129
00:07:41.700 --> 00:07:44.577
Yeah, there's a handful of
them that React looks for,

130
00:07:44.577 --> 00:07:48.806
like Component getMount, Component
willMount, getDerivedStateFromProps,

131
00:07:48.806 --> 00:07:50.230
shouldComponentupdate.

132
00:07:50.230 --> 00:07:55.004
Does this actually tell me,
yeah, getSnapshotFromUpdate.

133
00:07:55.004 --> 00:08:00.139
There's a,
&gt;&gt; Brian Holt: forceUpdate,

134
00:08:00.139 --> 00:08:04.973
so there's a bunch of them
that React has built into it.

135
00:08:04.973 --> 00:08:07.081
Now we have that.

136
00:08:07.081 --> 00:08:09.323
Let's go ahead and
write our render method now.

137
00:08:14.071 --> 00:08:16.819
&gt;&gt; Brian Holt: And
do some more destructuring here.

138
00:08:18.080 --> 00:08:23.396
const { photos, active },
we're gonna pull that out of state.

139
00:08:26.245 --> 00:08:32.133
&gt;&gt; Brian Holt: And
we're going to return here

140
00:08:32.133 --> 00:08:38.481
div className = "carousel".

141
00:08:38.481 --> 00:08:41.344
Again, it's just I can never
spell that word correctly.

142
00:08:45.560 --> 00:08:51.671
&gt;&gt; Brian Holt: img src = photos,
then we want to grab the active photo for

143
00:08:51.671 --> 00:08:55.337
the primary photo here, active.

144
00:08:55.337 --> 00:09:00.590
.value cuz that's where
the URL is gonna be,

145
00:09:00.590 --> 00:09:06.517
and then the alt is going
to be primary animal image,

146
00:09:06.517 --> 00:09:09.362
or something like that.

147
00:09:13.800 --> 00:09:14.374
&gt;&gt; Brian Holt: Yeah.

148
00:09:16.536 --> 00:09:19.174
&gt;&gt; Brian Holt: Our linter says that you
don't wanna put anything like photo or

149
00:09:19.174 --> 00:09:22.659
image or anything like that because it's
redundant because it's an image tag, so

150
00:09:22.659 --> 00:09:23.829
it's obviously an image.

151
00:09:23.829 --> 00:09:26.493
It's always a temptation for me.

152
00:09:28.139 --> 00:09:36.191
&gt;&gt; Brian Holt: div
className="carousel-smaller".

153
00:09:38.619 --> 00:09:44.375
&gt;&gt; Brian Holt: And
then we're gonna do a photos.map here,

154
00:09:44.375 --> 00:09:50.964
photos.map,
&gt;&gt; Brian Holt: And

155
00:09:50.964 --> 00:09:54.567
then we're gonna pull out
both the photo and the index.

156
00:09:54.567 --> 00:09:59.538
Because we need to compare against
is this the correct index or not?

157
00:10:04.539 --> 00:10:08.791
&gt;&gt; Brian Holt: Now what I could do
here is make this a function body and

158
00:10:08.791 --> 00:10:13.057
return right here, or
I can use the implicit return.

159
00:10:13.057 --> 00:10:15.299
And so I'm going to put another
set of parentheses here.

160
00:10:17.010 --> 00:10:19.860
Which is gonna make whatever I put
here an implicit return, right?

161
00:10:22.460 --> 00:10:24.750
And now I can just start
writing in my image tag here.

162
00:10:26.812 --> 00:10:32.100
So key = photo.value because we
know each URL will be unique for

163
00:10:32.100 --> 00:10:35.320
each image, so
that that will work for the key.

164
00:10:35.320 --> 00:10:37.484
The src will also be the photo.value.

165
00:10:39.630 --> 00:10:44.370
className will be equal to,
and then now we need to set

166
00:10:44.370 --> 00:10:48.480
an additional active class, if this is
the currently selected image, right?

167
00:10:48.480 --> 00:10:50.558
Because we want to like
grey that one out and

168
00:10:50.558 --> 00:10:52.592
kind of show that it's the active image.

169
00:10:52.592 --> 00:10:56.784
So we're gonna use a ternary here, and

170
00:10:56.784 --> 00:11:00.475
say index === active, right?

171
00:11:00.475 --> 00:11:03.980
Because if this index here,
if it's the first thing in here, and

172
00:11:03.980 --> 00:11:07.320
active is number one,
then this should return true, right?

173
00:11:07.320 --> 00:11:12.274
So I'm gonna put question mark
to show that I'm doing ternary.

174
00:11:12.274 --> 00:11:14.160
And put 'active'.

175
00:11:14.160 --> 00:11:20.140
And if it's not, then I'll put
&gt;&gt; Brian Holt: So let's

176
00:11:20.140 --> 00:11:23.420
see if I can get this to wrap really quick
so you can see that a little bit better.

177
00:11:25.550 --> 00:11:27.040
I'll put the alt here in just a second.

178
00:11:27.040 --> 00:11:33.649
In fact, let's just do that really quick,
alt =animal thumbnail.

179
00:11:36.603 --> 00:11:37.651
&gt;&gt; Brian Holt: Okay.

180
00:11:39.945 --> 00:11:40.880
&gt;&gt; Brian Holt: So this right here.

181
00:11:41.950 --> 00:11:44.220
Sometimes people struggle with ternarys,

182
00:11:44.220 --> 00:11:47.900
they're actually quite common in React
because we use expressions everywhere.

183
00:11:47.900 --> 00:11:51.660
So this is a condensed if statement,
right?

184
00:11:52.720 --> 00:11:56.580
This is the conditional,
is index === active?

185
00:11:56.580 --> 00:12:00.330
Then after the question mark,
if it's true, it's the first thing,

186
00:12:00.330 --> 00:12:04.310
if it's not true,
it's the second thing, right?

187
00:12:06.030 --> 00:12:11.396
If this then this else this, make sense?

188
00:12:13.594 --> 00:12:16.260
&gt;&gt; Brian Holt: So if it's active,
then it gets the active class,

189
00:12:16.260 --> 00:12:18.930
if it's not the active one,
then it gets no class.

190
00:12:18.930 --> 00:12:20.173
It's got no class.

191
00:12:25.877 --> 00:12:30.696
&gt;&gt; Brian Holt: You'll see this
a lot with React, stuff like that.

192
00:12:30.696 --> 00:12:33.616
You can also use a library called
className that basically is a helper

193
00:12:33.616 --> 00:12:34.120
library for

194
00:12:34.120 --> 00:12:37.710
kind of condensing these things down
to making it little bit easier to read.

195
00:12:37.710 --> 00:12:39.549
We're not doing very much of this, so

196
00:12:39.549 --> 00:12:41.971
I just preferred to use
a ternary in this one case.

197
00:12:45.006 --> 00:12:47.590
&gt;&gt; Brian Holt: I probably use and
abuse ternary as for being honest.

198
00:12:49.200 --> 00:12:50.419
Any questions about this?

199
00:12:54.719 --> 00:12:57.797
&gt;&gt; Brian Holt: Okay, so
now this is enough to render.

200
00:12:57.797 --> 00:13:00.346
Its not interactive yet but
this is enough for it to render.

201
00:13:00.346 --> 00:13:03.534
So let's go put this in
first to the Details page.

202
00:13:07.393 --> 00:13:11.224
&gt;&gt; Brian Holt: Up here, actually we
can even just start go writing it,

203
00:13:11.224 --> 00:13:13.350
I love this part about VS Code.

204
00:13:13.350 --> 00:13:17.930
First thing instead of div.details,
we're gonna put a carousel component.

205
00:13:17.930 --> 00:13:24.019
And I'm just gonna auto import that from,
&gt;&gt; Brian Holt: Carousel,

206
00:13:24.019 --> 00:13:27.025
and I'm gonna say media = media.

207
00:13:30.011 --> 00:13:32.991
&gt;&gt; Brian Holt: Like that, and I guess
I have to go pull that out as well.

208
00:13:37.365 --> 00:13:41.205
&gt;&gt; Brian Holt: So what I did here,
pulled media out of state, and

209
00:13:41.205 --> 00:13:44.873
then I add at this line
number 53 right there.

210
00:13:46.837 --> 00:13:50.325
&gt;&gt; Brian Holt: You have to import Carousel
at the top which VS Code did for me.

211
00:13:52.909 --> 00:13:55.129
&gt;&gt; Brian Holt: Okay, and
then here at the top,

212
00:13:55.129 --> 00:13:58.676
Carousel got imported from
Carousel right there.

213
00:14:00.462 --> 00:14:05.687
&gt;&gt; Brian Holt: So now hopefully,
we go over here to Adopt Me.

214
00:14:05.687 --> 00:14:11.406
We click on to go see Uta,
we can see all of the Uta's

215
00:14:11.406 --> 00:14:17.548
pictures
&gt;&gt; Brian Holt: So you can see now

216
00:14:17.548 --> 00:14:21.330
that we can see all of the pictures that
are coming in for this particular animal.

217
00:14:21.330 --> 00:14:22.770
It's not interactive yet, right?

218
00:14:22.770 --> 00:14:25.380
We still gotta go make it actually
interactive so you can change it, but

219
00:14:25.380 --> 00:14:26.960
we should be seeing that.

