WEBVTT

1
00:00:00.000 --> 00:00:01.292
&gt;&gt; Brian Holt: So
what this needs to do is,

2
00:00:01.292 --> 00:00:03.215
this is going to be a component, right?

3
00:00:03.215 --> 00:00:06.080
It's gonna be a function that
returns some sort of markup.

4
00:00:06.080 --> 00:00:12.236
It's gonna be a render function for
whatever this component is.

5
00:00:12.236 --> 00:00:15.587
So what I wanna do is, I wanna return
a div with an h1 inside of it that says,

6
00:00:15.587 --> 00:00:16.454
adopt me, right?

7
00:00:16.454 --> 00:00:19.059
It's gonna be our branding at the top.

8
00:00:19.059 --> 00:00:23.859
So what I wanna do is, I want to

9
00:00:23.859 --> 00:00:29.242
return React.createElement.

10
00:00:31.514 --> 00:00:33.686
&gt;&gt; Brian Holt: Okay, and
I'm gonna put a div,

11
00:00:33.686 --> 00:00:38.990
cuz that's what I want to output to
the DOM is I want a div tag, right?

12
00:00:38.990 --> 00:00:40.930
I don't want it to have any attributes.

13
00:00:40.930 --> 00:00:45.923
If I wanted it to have an ID, or a style
attribute, or any of those things that

14
00:00:45.923 --> 00:00:50.071
goes on a div tag, I would put
that inside of that object there.

15
00:00:50.071 --> 00:00:53.217
Okay, and
then I'm gonna give it children, right?

16
00:00:53.217 --> 00:00:56.827
Children items are gonna be
rendered out to the DOM, right?

17
00:00:56.827 --> 00:00:59.625
So I'm gonna say another,
we'll just put this on multiple lines so

18
00:00:59.625 --> 00:01:01.009
it's a little bit easier to see.

19
00:01:03.790 --> 00:01:04.710
Indent that a little bit.

20
00:01:05.860 --> 00:01:11.270
Then here,
I'm gonna say another React.createElement.

21
00:01:11.270 --> 00:01:14.540
I'm gonna make an h1 here, okay?

22
00:01:14.540 --> 00:01:19.115
Again, no DOM attributes here,
and then here I'm gonna have,

23
00:01:19.115 --> 00:01:24.043
Adopt Me!,or whatever you chose
to call your adoption app, okay?

24
00:01:26.472 --> 00:01:28.011
&gt;&gt; Brian Holt: Let's save that.

25
00:01:28.011 --> 00:01:31.643
So congratulations,
you've made your first React component.

26
00:01:31.643 --> 00:01:33.019
Fundamentally, this is what React is.

27
00:01:33.019 --> 00:01:35.533
It's just making a bunch
of components like these.

28
00:01:35.533 --> 00:01:37.640
And now I have this reusable
component called App,

29
00:01:37.640 --> 00:01:40.350
and I could use this as
many times as I wanted to.

30
00:01:40.350 --> 00:01:41.380
That's kinda the magic here.

31
00:01:42.600 --> 00:01:45.300
So down after that,
now we have this component.

32
00:01:45.300 --> 00:01:47.470
We have to render it out.

33
00:01:47.470 --> 00:01:48.020
Yeah?
&gt;&gt; off screen female: Sorry,

34
00:01:48.020 --> 00:01:49.300
I might have missed this.

35
00:01:49.300 --> 00:01:52.658
What do the angle brackets do,
the curly brackets?

36
00:01:52.658 --> 00:01:54.420
&gt;&gt; Brian Holt: So
this is where the attributes would go.

37
00:01:54.420 --> 00:01:55.790
It's just an empty object.

38
00:01:55.790 --> 00:01:58.030
You also could put null here,
and that would work as well.

39
00:01:58.030 --> 00:02:05.395
But if I wanted to have an ID on this div,
I would say { id: "my-id" }.

40
00:02:05.395 --> 00:02:08.052
And this would actually put
an ID tag on it, right?

41
00:02:08.052 --> 00:02:09.150
Does that make sense?

42
00:02:09.150 --> 00:02:10.977
Well, we'll go over it some more as well.

43
00:02:10.977 --> 00:02:12.555
But that's a good question, thank you.

44
00:02:16.408 --> 00:02:17.948
&gt;&gt; Brian Holt: Okay, so
now we have this component, but

45
00:02:17.948 --> 00:02:19.447
we need to do something with it, right?

46
00:02:19.447 --> 00:02:22.580
We actually want to
render this into the DOM.

47
00:02:22.580 --> 00:02:27.210
So what I'm gonna say is ReactDOM,
right, so I have this ReactDOM thing.

48
00:02:27.210 --> 00:02:32.824
And I'm gonna say render, okay?

49
00:02:32.824 --> 00:02:36.410
And now I want to render
the application into it.

50
00:02:36.410 --> 00:02:41.189
So what I'm gonna say is
React.createElement again,

51
00:02:41.189 --> 00:02:43.533
and I'm gonna give it App.

52
00:02:43.533 --> 00:02:47.320
So notice these ones are strings, right?

53
00:02:47.320 --> 00:02:49.370
Because I literally want a div tag, right?

54
00:02:49.370 --> 00:02:53.070
It's literally the div tag
being output to the DOM.

55
00:02:53.070 --> 00:02:56.380
And the reason why they do that is
you can have custom elements in here.

56
00:02:56.380 --> 00:02:58.538
So I could have x-custom-element in here,

57
00:02:58.538 --> 00:03:01.279
if you're gonna do Web
components kinda stuff, right?

58
00:03:02.910 --> 00:03:06.380
But I just want a div, whereas this
is actually the App thing here.

59
00:03:06.380 --> 00:03:11.700
So createElement can handle both strings,
cuz that's gonna be a literal div tag.

60
00:03:11.700 --> 00:03:14.430
Or it can handle React components.

61
00:03:14.430 --> 00:03:17.200
Or what they're called is,
composite components,

62
00:03:17.200 --> 00:03:19.237
which are components that you create.

63
00:03:19.237 --> 00:03:20.269
Okay, does that make sense?

64
00:03:21.690 --> 00:03:27.070
Now, here you can put empty object and
null, right?

65
00:03:27.070 --> 00:03:29.520
Cuz it's not gonna have any children,
you don't actually have to do this.

66
00:03:29.520 --> 00:03:32.209
You can actually just leave it as App,

67
00:03:32.209 --> 00:03:35.662
because the other two ones are optional,
okay?

68
00:03:35.662 --> 00:03:38.027
Now I need to tell it where to put it.

69
00:03:38.027 --> 00:03:41.538
So I'm gonna to say

70
00:03:41.538 --> 00:03:48.563
document.getElementById, root.

71
00:03:53.490 --> 00:03:58.260
&gt;&gt; Brian Holt: Okay, so
I'm making App, an instance of App.

72
00:03:58.260 --> 00:04:00.511
And I'm rendering that to root.

73
00:04:00.511 --> 00:04:02.787
And root is there.

74
00:04:04.720 --> 00:04:06.407
&gt;&gt; Brian Holt: There, [LAUGH] all right?

75
00:04:06.407 --> 00:04:08.857
So it's gonna to take this App, and
it's going to render it up there.

76
00:04:08.857 --> 00:04:13.069
So hopefully, you can kinda see how
those two kinda connect to each other.

77
00:04:13.069 --> 00:04:17.180
Now let's talk about App for
just a second.

78
00:04:17.180 --> 00:04:20.571
The way I like to think about this is,
App, we've created a new class, right,

79
00:04:20.571 --> 00:04:23.380
if you're coming from a Java background or
something like that.

80
00:04:23.380 --> 00:04:24.612
So App is a new class,

81
00:04:24.612 --> 00:04:29.600
and Reach.createElement creates
an instance of that class.

82
00:04:29.600 --> 00:04:32.910
If you're coming from a backend
perspective, usually that makes sense.

83
00:04:32.910 --> 00:04:34.985
If you're coming from
a frontend perspective,

84
00:04:34.985 --> 00:04:37.221
that can be a little
computer science-y nonsense.

85
00:04:37.221 --> 00:04:42.085
So a way I like to thing about is, when we
create App, we create a new rubber stamp.

86
00:04:42.085 --> 00:04:44.150
I haven't actually stamped anything yet.

87
00:04:44.150 --> 00:04:48.050
So having a stamp without ever stamping
anything is not super useful, right?

88
00:04:48.050 --> 00:04:50.284
You actually have to stamp something.

89
00:04:50.284 --> 00:04:52.916
So here, I've created a new kind of stamp.

90
00:04:52.916 --> 00:04:55.401
And here, I'm actually kinda,
I'm using the stamp.

91
00:04:55.401 --> 00:04:56.890
Right, I'm stamping it on something.

92
00:04:56.890 --> 00:04:59.608
But what's cool about that rubber
stamp is it's reusable, right?

93
00:04:59.608 --> 00:05:02.203
I don't just stamp it once and
it evaporates.

94
00:05:02.203 --> 00:05:05.666
I mean that would be cool, but
I don't know of anything like that.

95
00:05:05.666 --> 00:05:07.856
But I can actually stamp
that multiple times.

96
00:05:07.856 --> 00:05:10.862
So that's what's compelling about React,
is these components become reusable.

97
00:05:10.862 --> 00:05:12.768
I could have multiple Apps.

98
00:05:12.768 --> 00:05:14.070
Usually, you'll have one App, right?

99
00:05:14.070 --> 00:05:19.100
But I could have multiple title tags or
whatever we wanna make, or so.

100
00:05:19.100 --> 00:05:21.200
Multiple pets, right,
cuz we're gonna make a pet adoption app.

101
00:05:21.200 --> 00:05:24.090
So we can make a pet component and
stamp that multiple times.

102
00:05:25.120 --> 00:05:26.200
Does that make sense,

103
00:05:26.200 --> 00:05:29.470
the difference between making a new
class versus having an instance of it?

104
00:05:31.310 --> 00:05:31.810
Cool.

105
00:05:33.263 --> 00:05:35.229
&gt;&gt; Brian Holt: So
now if you save this, and go back and

106
00:05:35.229 --> 00:05:39.968
refresh your page,
&gt;&gt; Brian Holt: You

107
00:05:39.968 --> 00:05:42.533
should see something that
says Adopt Me up here.

108
00:05:46.563 --> 00:05:49.373
&gt;&gt; Brian Holt: So congratulations, now
you've made your first React application.

