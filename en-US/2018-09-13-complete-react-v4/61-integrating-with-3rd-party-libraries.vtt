WEBVTT

1
00:00:00.510 --> 00:00:01.570
&gt;&gt; Brian Holt: Question.
&gt;&gt; Speaker 2: So

2
00:00:01.570 --> 00:00:05.356
you mentioned this could have an
application for using something like D3,

3
00:00:05.356 --> 00:00:11.730
or data visualization stuff, so we need
to make some chart and have it stay

4
00:00:11.730 --> 00:00:15.080
in our DOM even though React is constantly
destroying and replacing things.

5
00:00:15.080 --> 00:00:20.289
So can you walk us through,
like is this el going to persist now and

6
00:00:20.289 --> 00:00:26.161
we can slap a D3 chart into it and
it's not gonna be destroyed by React, or

7
00:00:26.161 --> 00:00:31.237
how do we do that?
&gt;&gt; Brian Holt: Let's

8
00:00:31.237 --> 00:00:34.060
see [COUGH] how I can show this to you.

9
00:00:34.060 --> 00:00:36.650
So here's how I would do that.

10
00:00:36.650 --> 00:00:38.220
Again, you don't have to
follow along with me here,

11
00:00:38.220 --> 00:00:40.280
cuz I'm just making this
stuff out on the fly.

12
00:00:40.280 --> 00:00:45.810
I'd make a new component call it
D3Wrapper.js or something like that.

13
00:00:45.810 --> 00:00:51.490
I'd make a import React from react.

14
00:00:51.490 --> 00:00:57.051
Class from D3Wrapper

15
00:00:57.051 --> 00:01:02.330
extends Component.

16
00:01:02.330 --> 00:01:05.410
One, you should definitely watch
Shirley Wu's talks on this.

17
00:01:05.410 --> 00:01:09.332
She's the world expert
on integrating React and

18
00:01:09.332 --> 00:01:12.767
D3.
&gt;&gt; Speaker 2: Yeah,

19
00:01:12.767 --> 00:01:17.270
she has like an entire course that's
coming out on literally D3 plus

20
00:01:17.270 --> 00:01:20.220
React.
&gt;&gt; Brian Holt: She's one of my favorite

21
00:01:20.220 --> 00:01:23.100
teachers in the entire world, so
definitely, definitely catch that.

22
00:01:25.190 --> 00:01:26.266
She's the magician,

23
00:01:26.266 --> 00:01:30.927
like literally the Sorceress of D3.
&gt;&gt; Brian Holt: Okay, so I would,

24
00:01:30.927 --> 00:01:35.450
let's say that I'm making things up,
I don't know D3 very well.

25
00:01:36.530 --> 00:01:44.290
Return div, and
here I would have the ref of el,

26
00:01:44.290 --> 00:01:49.839
this.el = el, right, so
now I have a handle on this.

27
00:01:51.650 --> 00:01:54.510
I would put this thing called
shouldComponentUpdate.

28
00:01:54.510 --> 00:01:57.900
And I'm going to say return false.

29
00:01:57.900 --> 00:02:02.820
This will make this component
never update, ever, right?

30
00:02:02.820 --> 00:02:04.530
Which is what we want for
the wrapper for D3.

31
00:02:04.530 --> 00:02:11.070
And then here in component,
&gt;&gt; Brian Holt: DidMount.

32
00:02:11.070 --> 00:02:14.680
Cuz we have to do it after the component
mounts cuz that's when the el is actually

33
00:02:14.680 --> 00:02:15.528
gonna exist.

34
00:02:15.528 --> 00:02:18.910
I would say.

35
00:02:18.910 --> 00:02:21.640
I'm, again, d3.init(this.el).

36
00:02:21.640 --> 00:02:29.963
Whatever that looks like for d3.
&gt;&gt; Brian Holt: And

37
00:02:29.963 --> 00:02:35.284
then again on componentWillUnmount.

38
00:02:35.284 --> 00:02:40.059
You have to say like d3.destroy or

39
00:02:40.059 --> 00:02:45.321
clean up or whatever it is, this.el.

40
00:02:45.321 --> 00:02:47.270
Whatever cleanup that would
have to be done there.

41
00:02:47.270 --> 00:02:51.100
Maybe I shouldn't use D3 cuz I'm sure I'm
getting everything wrong about D3, but

42
00:02:51.100 --> 00:02:52.441
this is the general pattern.

43
00:02:52.441 --> 00:02:57.424
Maybe to say this is like lib, or
something like that, some sort of library.

44
00:03:06.883 --> 00:03:08.138
&gt;&gt; Brian Holt: So that's what this would

45
00:03:08.138 --> 00:03:09.970
look like for basically any library.

46
00:03:09.970 --> 00:03:14.260
More or less, the key part being here,
here's your ref, here's how you start

47
00:03:14.260 --> 00:03:18.312
the application here in componentDidMount,
here's how you clean it up.

48
00:03:18.312 --> 00:03:21.884
And then this shouldComponentUpdate,
return false is key,

49
00:03:21.884 --> 00:03:24.639
this basically tells
React never update this.

50
00:03:24.639 --> 00:03:26.652
Never destroy it,
never mess with this anymore.

51
00:03:26.652 --> 00:03:30.714
And time that React tries to rerender it,
it's going to say, hey, I don't need to

52
00:03:30.714 --> 00:03:35.860
update it, stop looking, right?
&gt;&gt; Speaker 2: We also have to have

53
00:03:35.860 --> 00:03:40.000
shouldComponentUpdate false
on any parents of that so

54
00:03:40.000 --> 00:03:43.267
that those are also not deleted?
&gt;&gt; Brian Holt: Well,

55
00:03:43.267 --> 00:03:46.658
if you just stop rendering something,
it's going to stop rendering it.

56
00:03:46.658 --> 00:03:48.527
So this always would have to be rendered,
right?

57
00:03:48.527 --> 00:03:53.574
You'd have to take care to make
sure that our parent component

58
00:03:53.574 --> 00:03:58.441
would not be destroyed but
this itself would never update.

59
00:04:01.590 --> 00:04:03.124
&gt;&gt; Brian Holt: But the danger of this now,

60
00:04:03.124 --> 00:04:07.797
the shouldComponentUpdate return false,
if I was keeping track of state in here,

61
00:04:07.797 --> 00:04:12.947
if I updated state it would re-render.
&gt;&gt; Brian Holt: All

62
00:04:12.947 --> 00:04:17.345
right?
&gt;&gt; Brian Holt: So

63
00:04:17.345 --> 00:04:19.200
that's how you would do that.

