WEBVTT

1
00:00:00.716 --> 00:00:04.272
&gt;&gt; Brian Holt: So imagine that we're
building this pet adoption app.

2
00:00:04.272 --> 00:00:08.873
And one of your product
manager comes in and says hey,

3
00:00:08.873 --> 00:00:13.999
we have this searchParams page
that we force users to go to.

4
00:00:13.999 --> 00:00:16.885
But what happens if they wanna
just stay in the results page and

5
00:00:16.885 --> 00:00:18.225
keep searching from there?

6
00:00:18.225 --> 00:00:18.975
What do we do,

7
00:00:18.975 --> 00:00:23.169
like could we just put the searchParams
box as well on the results page, right?

8
00:00:23.169 --> 00:00:25.457
I can imagine that happening in a meeting,

9
00:00:25.457 --> 00:00:29.285
it might have literally happened to
me in a meeting before, all right?

10
00:00:29.285 --> 00:00:30.960
So now you're thinking about, well,

11
00:00:30.960 --> 00:00:34.384
now I have to like replicate all of this
component stuff and this is really dumb.

12
00:00:34.384 --> 00:00:38.347
I just wanna have one component
that handles both of these things,

13
00:00:38.347 --> 00:00:41.191
the searchParams page,
and the results page.

14
00:00:41.191 --> 00:00:45.250
Well, let me show you using context and
components that we can make that happen.

15
00:00:46.860 --> 00:00:48.686
So what I want you to do is,

16
00:00:48.686 --> 00:00:53.519
I want you to make another component
here called the SearchBox.js.

17
00:00:53.519 --> 00:00:56.349
And we're gonna put this both
in the searchParams page and

18
00:00:56.349 --> 00:01:03.346
on the results page.
&gt;&gt; Brian Holt: Okay,

19
00:01:03.346 --> 00:01:08.262
searchParams as we know,
we're just basically going to cut and

20
00:01:08.262 --> 00:01:13.097
paste this, everything that
was in here into SearchBox.js.

21
00:01:13.097 --> 00:01:15.768
In fact if you want to just rename
the file I don't care cuz we'll make

22
00:01:15.768 --> 00:01:16.332
another one.

23
00:01:16.332 --> 00:01:19.168
But I'm just gonna cut and paste this and
I'm gonna put everything into

24
00:01:19.168 --> 00:01:25.328
searchbox.
&gt;&gt; Brian Holt: So

25
00:01:25.328 --> 00:01:29.321
everything is more or less the same, okay?

26
00:01:29.321 --> 00:01:34.216
So cut everything from searchParams,
put it into SearchBox.js.

27
00:01:34.216 --> 00:01:37.268
And now we're gonna re-factor this,
so this works.

28
00:01:37.268 --> 00:01:41.161
So delete petfinder we're
doing all that in app.js so

29
00:01:41.161 --> 00:01:45.572
we don't need that anymore which
means we only need animals.

30
00:01:45.572 --> 00:01:48.910
We can delete pf right there, okay?

31
00:01:48.910 --> 00:01:54.130
So that's it for the two imports up there.

32
00:01:54.130 --> 00:01:58.375
And then beneath that we're gonna
import the consumer as well.

33
00:02:00.918 --> 00:02:03.939
&gt;&gt; Brian Holt: From our SearchContext.

34
00:02:07.603 --> 00:02:08.296
&gt;&gt; Brian Holt: Okay?

35
00:02:13.330 --> 00:02:14.347
&gt;&gt; Brian Holt: So that's it for

36
00:02:14.347 --> 00:02:19.801
our imports, React, ANIMALS, and Consumer,
make sure these curly braces are there,

37
00:02:19.801 --> 00:02:22.688
they are vital.
&gt;&gt; Brian Holt: Okay, and

38
00:02:22.688 --> 00:02:25.305
then we're gonna refactor
just a tiny bit here.

39
00:02:25.305 --> 00:02:30.472
So the top level thing that
we're going to do here is we're

40
00:02:30.472 --> 00:02:35.745
going to wrap everything in Consumer,
which means the last

41
00:02:35.745 --> 00:02:40.613
thing down here at the bottom
will be Consumer as well.

42
00:02:40.613 --> 00:02:44.697
So this is gonna help us
make this available for

43
00:02:44.697 --> 00:02:50.262
all of the data from app available
inside of our Consumer here.

44
00:02:50.262 --> 00:02:52.672
Next thing.

45
00:02:52.672 --> 00:02:58.712
This is a pattern in react
called function as a child.

46
00:02:58.712 --> 00:03:01.854
So what we're gonna do is,
we're gonna put curly braces here.

47
00:03:01.854 --> 00:03:05.390
And we're going to put
a function inside of this.

48
00:03:05.390 --> 00:03:10.149
So if you wanted to see this for
both, see I'm gonna put

49
00:03:10.149 --> 00:03:16.640
function(context), and
then return, markup here, right?

50
00:03:16.640 --> 00:03:19.251
I'm going to make this
a little bit more terse, but

51
00:03:19.251 --> 00:03:21.393
that's effectively what I'm gonna do.

52
00:03:21.393 --> 00:03:27.315
So its going to be context with
an implicit return, like this.

53
00:03:27.315 --> 00:03:33.295
And then I'm gonna move all of my mark up
that I have here, inside of this function.

54
00:03:36.612 --> 00:03:44.026
&gt;&gt; Brian Holt: So I'll just cut that.

55
00:03:44.026 --> 00:03:45.375
I don't know how that happened,

56
00:03:45.375 --> 00:03:52.588
but.
&gt;&gt; Brian Holt: Okay, and then I'm gonna

57
00:03:52.588 --> 00:03:56.953
move that inside of the context here.
&gt;&gt; Brian Holt: And

58
00:03:56.953 --> 00:04:00.204
then reformat here cuz
everything is all messed up.

59
00:04:00.204 --> 00:04:02.780
Does that make sense?

60
00:04:02.780 --> 00:04:06.051
So now I have this function
that returns more markup.

61
00:04:06.051 --> 00:04:11.133
The reason why I've done this is
because now context is in scope, right?

62
00:04:11.133 --> 00:04:17.044
So now I can reference the things that are
on context, that's the powerful part here.

63
00:04:17.044 --> 00:04:21.501
If you remember, my title,
you don't have to title this or

64
00:04:21.501 --> 00:04:30.591
you don't have to follow this.
&gt;&gt; Brian Holt: Come on.

65
00:04:30.591 --> 00:04:33.410
This is a valid component, right?

66
00:04:33.410 --> 00:04:35.885
It's a function that returns markup,
right?

67
00:04:35.885 --> 00:04:38.166
So we're taking advantage
of that fact here,

68
00:04:38.166 --> 00:04:41.915
that any function that returns markup
is technically a component, right?

69
00:04:41.915 --> 00:04:46.523
So that's what we're doing here, we're
using a function as a component here,

70
00:04:46.523 --> 00:04:50.520
that all it does is return whatever
markup we were gonna do anyway, but

71
00:04:50.520 --> 00:04:54.426
it does it with context and scope,
so now we can reference context.

72
00:04:54.426 --> 00:04:56.743
Does that make sense?

73
00:04:56.743 --> 00:04:58.443
Okay, I'm seeing mostly nods here.

74
00:04:58.443 --> 00:05:01.303
Some, just a couple people
flipping me off, that's it.

75
00:05:01.303 --> 00:05:02.285
&gt;&gt; Speaker 2: [LAUGH] You just say it one

76
00:05:02.285 --> 00:05:04.711
more time?
&gt;&gt; Brian Holt: Sure.

77
00:05:04.711 --> 00:05:10.251
So, I think it might be useful
to figure out what context is.

78
00:05:10.251 --> 00:05:12.042
We have consumer, right?

79
00:05:12.042 --> 00:05:18.843
And if you look at our SearchContext here.

80
00:05:18.843 --> 00:05:21.663
The consumer is coming here
from the SearchContext, right.

81
00:05:21.663 --> 00:05:24.142
So, this is the exit portal of context,
right.

82
00:05:24.142 --> 00:05:26.753
And provider is the entrance portal,
right.

83
00:05:26.753 --> 00:05:32.423
So, now let's go into app.js.

84
00:05:34.393 --> 00:05:36.009
&gt;&gt; Brian Holt: Here in the provider,

85
00:05:36.009 --> 00:05:39.763
we're passing in this.state
from app.js right?

86
00:05:39.763 --> 00:05:43.919
So we're throwing into
the entrance portal this.state and

87
00:05:43.919 --> 00:05:49.032
what is this.state?
&gt;&gt; Brian Holt: All this stuff right?

88
00:05:49.032 --> 00:05:53.969
So if we go back to search box

89
00:05:53.969 --> 00:05:59.339
context, this context right

90
00:05:59.339 --> 00:06:04.291
here is the state from app.

91
00:06:04.291 --> 00:06:10.233
So now, we can reference contest.breed,
context.animal.

92
00:06:10.233 --> 00:06:14.067
And it will be reflective
of the state of app.js.

