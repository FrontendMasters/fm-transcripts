WEBVTT

1
00:00:00.420 --> 00:00:04.420
&gt;&gt; Brian Holt: Just give a little bit more
explanation into ComponentWillUnmount.

2
00:00:04.420 --> 00:00:07.908
Let's go into details.js.

3
00:00:07.908 --> 00:00:11.070
And I'm gonna do something
really bad here.

4
00:00:11.070 --> 00:00:18.422
I'm gonna say shouldComponentUpdate,
return false.

5
00:00:18.422 --> 00:00:22.272
So now I'm gonna go into here, it's never
even gonna get past loading, right?

6
00:00:22.272 --> 00:00:26.019
Cuz when it first renders for
the first time, it shows you loading.

7
00:00:26.019 --> 00:00:29.495
Then it calls set state to update it and
then guess what?

8
00:00:29.495 --> 00:00:34.043
Sorry, I'm not gonna re-render it cuz you
said shouldComponentUpdate return false.

9
00:00:36.232 --> 00:00:41.089
&gt;&gt; Brian Holt: So that's the danger of
shouldComponentUpdate is you can get into

10
00:00:41.089 --> 00:00:42.832
situations like this.

11
00:00:42.832 --> 00:00:46.041
Imagine you inherited this application and
you saw this happen, you'd be like,

12
00:00:46.041 --> 00:00:46.870
what is happening?

13
00:00:46.870 --> 00:00:49.375
I guess,
maybe the API's not returning right.

14
00:00:49.375 --> 00:00:52.956
It's very opaque of where
the bug is coming from.

15
00:00:52.956 --> 00:00:56.210
So shouldComponentUpdate
is a giant foot gun.

16
00:00:56.210 --> 00:01:01.619
This is a really, really easy way
to shoot yourself in the foot.

17
00:01:01.619 --> 00:01:04.554
Okay but,
&gt;&gt; Brian Holt: For example,

18
00:01:04.554 --> 00:01:08.672
let's say you have a really complicated,
deeply nested state, and

19
00:01:08.672 --> 00:01:12.160
sometimes parts of it update,
parts of it don't update.

20
00:01:13.530 --> 00:01:18.520
You can get really sophisticated here with
shouldComponentUpdate of telling React

21
00:01:18.520 --> 00:01:21.920
when to update and when not to and when
you know it needs to and when you don't.

22
00:01:21.920 --> 00:01:24.155
That's what shouldComponentUpdates
normally force for

23
00:01:24.155 --> 00:01:25.810
performance optimization.

24
00:01:25.810 --> 00:01:27.837
So if you have a component
that's really slow,

25
00:01:27.837 --> 00:01:30.940
go write a fast shouldComponentUpdate,
cuz this is gonna get run a lot.

26
00:01:32.783 --> 00:01:35.450
&gt;&gt; Brian Holt: Cuz if you don't have
a shouldComponentUpdate, React has its own

27
00:01:35.450 --> 00:01:38.360
internal version which it does at
a diffing against your state, right?

28
00:01:38.360 --> 00:01:41.130
And if it sees that your state has
stayed the same, it doesn't update.

29
00:01:41.130 --> 00:01:43.500
And if it sees that your state
has changed, it will update.

30
00:01:45.030 --> 00:01:46.610
It's pretty fast.

31
00:01:46.610 --> 00:01:48.983
React is normally faster
than you're gonna write it.

32
00:01:48.983 --> 00:01:51.675
[LAUGH] It's fast enough, TM, right?

33
00:01:51.675 --> 00:01:55.942
[LAUGH] But sometimes it's not and
that's what shouldComponentUpdate's for.

34
00:01:55.942 --> 00:01:59.430
If you have something that's
totally static, like an SVG.

35
00:01:59.430 --> 00:02:00.970
One, don't put SVGs in React.

36
00:02:00.970 --> 00:02:06.227
[LAUGH] But if you do, one don't, but if
you do, just do a shouldComponentUpdate,

37
00:02:06.227 --> 00:02:10.074
return false cuz it's never gonna change,
it has no state.

38
00:02:11.951 --> 00:02:15.860
&gt;&gt; Brian Holt: But-
&gt;&gt; Student: Why do you say don't put SVGs?

39
00:02:15.860 --> 00:02:16.660
&gt;&gt; Brian Holt: They're complicated,

40
00:02:16.660 --> 00:02:20.420
and you start having these
crazy long trees right?

41
00:02:20.420 --> 00:02:24.940
And it should just be an SVG object,
because that's way faster.

42
00:02:26.400 --> 00:02:28.893
That allows the browser to do what
it does best, which is render stuff.

43
00:02:31.211 --> 00:02:35.660
&gt;&gt; Brian Holt: Now that's
not always the truth.

44
00:02:35.660 --> 00:02:38.623
If you go watch some of Sarah Drasner's
talk with the stuff that she does with

45
00:02:38.623 --> 00:02:40.492
React in SVGs,
she'll put that stuff into it.

46
00:02:40.492 --> 00:02:47.640
But she's actually doing manipulations
with React into the SVG, which is cool.

47
00:02:47.640 --> 00:02:49.180
So if you're doing stuff like that,

48
00:02:49.180 --> 00:02:52.930
one, you're probably using something
green sock anyway to do it.

49
00:02:52.930 --> 00:02:56.420
In which case you'd have to use the lib
wrapper that I was showing you.

50
00:02:56.420 --> 00:02:59.240
But if you're not, if you actually
are doing the then you could.

51
00:02:59.240 --> 00:03:01.110
But make sure you're actually
utilizing React for that.

52
00:03:02.340 --> 00:03:04.100
Otherwise, just use HTML objects.

