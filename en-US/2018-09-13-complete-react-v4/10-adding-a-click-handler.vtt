WEBVTT

1
00:00:00.360 --> 00:00:03.040
&gt;&gt; Brian Holt: I wanted to show a little
bit why you might wanna do this.

2
00:00:04.490 --> 00:00:06.910
Let's say we wanted to add,

3
00:00:06.910 --> 00:00:11.790
maybe someone clicks on this Adopt Me
that it does something, right?

4
00:00:12.930 --> 00:00:16.755
So what we could do now is we could put in

5
00:00:16.755 --> 00:00:23.850
handleTitleClick, or
something like that, some function name.

6
00:00:23.850 --> 00:00:29.445
And we'll just do alert
you clicked the title.

7
00:00:33.262 --> 00:00:33.935
&gt;&gt; Brian Holt: Okay, so

8
00:00:33.935 --> 00:00:39.077
now I have a function that I wanna run
anytime someone clicks on this h1.

9
00:00:42.390 --> 00:00:46.063
&gt;&gt; Brian Holt: So I'm gonna come down
to this h1 and I'm gonna say onClick.

10
00:00:48.270 --> 00:00:54.475
&gt;&gt; Brian Holt: So whenever someone clicks,
I want it to run this.handleTitleClick.

11
00:00:56.500 --> 00:00:59.725
&gt;&gt; Brian Holt: So I made this function
here, handleTitleClick, and whenever

12
00:00:59.725 --> 00:01:03.978
someone clicks on this h1 over here,
it's going to run this.handleTitleClick.

13
00:01:06.900 --> 00:01:08.625
&gt;&gt; Brian Holt: Just talk about this for
just a moment.

14
00:01:08.625 --> 00:01:11.350
It's one of the most confusing
parts about JavaScript and

15
00:01:11.350 --> 00:01:14.300
it ends up being extremely
important in React.

16
00:01:14.300 --> 00:01:17.810
So we will be talking a lot
about JavaScript context today.

17
00:01:18.950 --> 00:01:23.483
In this case, this refers to whatever
instance of app that we have.

18
00:01:23.483 --> 00:01:25.224
We're only gonna ever have
one instance of app, so

19
00:01:25.224 --> 00:01:27.470
it's gonna be the application itself.

20
00:01:27.470 --> 00:01:31.731
But it's key to keep in mind
that if I have a this for pet,

21
00:01:31.731 --> 00:01:35.204
it's gonna be that particular pet, right?

22
00:01:35.204 --> 00:01:37.500
It's not gonna be all pets,
it's just gonna be that one pet.

23
00:01:39.500 --> 00:01:42.557
So now if we save this and
go over and refresh, and

24
00:01:42.557 --> 00:01:46.371
we click on Adopt Me,
it'll say that you clicked the title.

25
00:01:48.820 --> 00:01:52.610
&gt;&gt; Brian Holt: So this is how you add
interactivity to your application.

26
00:01:52.610 --> 00:01:57.080
I like this because I
have handleTitleClick.

27
00:01:57.080 --> 00:01:59.350
And obviously, you can do something
way more complicated here.

28
00:01:59.350 --> 00:02:00.867
You can request from APIs.

29
00:02:00.867 --> 00:02:04.039
You can do animations.

30
00:02:04.039 --> 00:02:06.500
Anything you can imagine,
you can do that in here.

31
00:02:06.500 --> 00:02:09.610
But I get to see the h1 right here and

32
00:02:09.610 --> 00:02:14.150
I get to see what that h1 does within
the same view, within the same file.

33
00:02:14.150 --> 00:02:17.670
This is actually another part of React
that I really like is every component

34
00:02:17.670 --> 00:02:19.370
is its own world, right?

35
00:02:19.370 --> 00:02:23.420
Everything that pertains to that
component lives in the same file.

36
00:02:23.420 --> 00:02:26.490
And I love that because it makes
debugging things really, really easy.

37
00:02:27.530 --> 00:02:33.710
I compare that with my AngularJS days,
which, to be fair, I wrote poor AngularJS.

38
00:02:33.710 --> 00:02:39.590
But I also say that AngularJS let
me write poor AngularJS as well.

39
00:02:39.590 --> 00:02:43.392
Now it's also possible to
write bad React as well.

40
00:02:43.392 --> 00:02:47.054
But in any case, if you have a,
maybe I click on this and

41
00:02:47.054 --> 00:02:50.094
it doesn't do exactly
what I was expecting.

42
00:02:50.094 --> 00:02:52.987
If this was AngularJS,
what would be the problem?

43
00:02:52.987 --> 00:02:54.476
It could be with the service.

44
00:02:54.476 --> 00:02:55.956
It could be with the directive.

45
00:02:55.956 --> 00:02:57.285
It could be with the controller.

46
00:02:57.285 --> 00:02:59.070
It could be something inside of the scope.

47
00:02:59.070 --> 00:03:02.434
It could be with some library that
you brought in on the directive.

48
00:03:02.434 --> 00:03:03.610
It could be any number of things.

49
00:03:03.610 --> 00:03:05.120
By knowing what the problem is,

50
00:03:05.120 --> 00:03:08.250
you're really no closer to solving
what's wrong with it, right?

51
00:03:08.250 --> 00:03:10.810
You have to look in nine places
to figure out what's wrong.

52
00:03:10.810 --> 00:03:14.530
And that was a big problem with me with
my Angular application that I wrote

53
00:03:14.530 --> 00:03:15.836
is that over time,

54
00:03:15.836 --> 00:03:20.280
it got really difficult to debug because
there's a lot of magic with AngularJS.

55
00:03:20.280 --> 00:03:23.147
And I think they've solved a lot of
these problems with Angular cuz there

56
00:03:23.147 --> 00:03:24.750
are really smart engineers over there.

57
00:03:26.390 --> 00:03:30.368
But this is what I really, really enjoy
about React, that If I click on this and

58
00:03:30.368 --> 00:03:33.940
something doesn't go right,
I know exactly where to start, right?

59
00:03:33.940 --> 00:03:37.640
It has to start with that component
because everything has to start there.

60
00:03:37.640 --> 00:03:41.640
So we'd come over here and now we'd
see it's like, okay, I did something.

61
00:03:41.640 --> 00:03:45.900
I had called alert instead of console.log
or whatever my problem is, right?

62
00:03:45.900 --> 00:03:48.220
But I know instantly where to start.

63
00:03:48.220 --> 00:03:50.610
By knowing what the problem is,
I know where to start.

64
00:03:50.610 --> 00:03:51.550
Now don't get me wrong.

65
00:03:51.550 --> 00:03:54.207
You could have to drill down
several more components.

66
00:03:54.207 --> 00:03:57.601
It could be some library that I imported
or something like that, but you know where

67
00:03:57.601 --> 00:04:00.620
to start the debugging process, and
I think that's really important.

