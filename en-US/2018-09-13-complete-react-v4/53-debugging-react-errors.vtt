WEBVTT

1
00:00:00.008 --> 00:00:01.494
&gt;&gt; Brian Holt: Yeah, question?

2
00:00:01.494 --> 00:00:06.267
&gt;&gt; Speaker 2: So, I, of course,
have blown up my app and such,

3
00:00:06.267 --> 00:00:10.378
and broadly, in React, how do you debug?

4
00:00:10.378 --> 00:00:13.536
Because I'm looking at the stack trace,
and

5
00:00:13.536 --> 00:00:16.288
none of these lines of code are my code.

6
00:00:16.288 --> 00:00:19.865
They're all lines of code
within React libraries, and

7
00:00:19.865 --> 00:00:23.756
it's sort of hard to isolate
an error to anywhere in my code.

8
00:00:23.756 --> 00:00:28.198
&gt;&gt; Brian Holt: Sure, I mean,
let's do this, just throw a new error.

9
00:00:30.983 --> 00:00:34.052
&gt;&gt; Brian Holt: ("you smell,
so I errored out.").

10
00:00:42.329 --> 00:00:43.170
&gt;&gt; Brian Holt: Where did I put that?

11
00:00:43.170 --> 00:00:45.940
I put it in results, so this is right.

12
00:00:45.940 --> 00:00:48.782
So as you can see here, you smell.

13
00:00:48.782 --> 00:00:53.929
So you can see here,
these are just worthless.

14
00:00:53.929 --> 00:00:58.748
Right, these call stacks
are just not useful at all.

15
00:00:58.748 --> 00:01:02.916
But, what is actually useful in
here is this render up here,

16
00:01:02.916 --> 00:01:05.700
usually is where it happened.

17
00:01:05.700 --> 00:01:08.530
So you can see here it says
you errored out right there.

18
00:01:08.530 --> 00:01:12.440
So location provider, that's not mine,
that's coming from reach router.

19
00:01:13.610 --> 00:01:16.260
But you can see here,
it usually gives you a pretty good start.

20
00:01:16.260 --> 00:01:18.010
This happened in results, right?

21
00:01:19.230 --> 00:01:24.140
Right there, so results,
which is created by app.

22
00:01:24.140 --> 00:01:26.390
So you can kinda see they're
at least one layer deep.

23
00:01:26.390 --> 00:01:31.380
This is only in the debug or
the development builds of React.

24
00:01:31.380 --> 00:01:33.210
The way that they get React so small,

25
00:01:33.210 --> 00:01:37.220
down to 30-ish kilobytes is by taking
all the debugging stuff out of here.

26
00:01:38.290 --> 00:01:40.639
So that at least helps you get started.

27
00:01:40.639 --> 00:01:44.044
We access another concept
called error boundaries,

28
00:01:44.044 --> 00:01:46.702
which I'm not gonna talk too much about.

29
00:01:46.702 --> 00:01:50.712
You can actually handle errors within your
React application yourself using error

30
00:01:50.712 --> 00:01:51.406
boundaries.

31
00:01:51.406 --> 00:01:56.549
So that if anything throws while you're
doing it, you can actually handle that,

32
00:01:56.549 --> 00:02:01.034
catch it, set some sort of error state and
recover gracefully as well.

33
00:02:03.515 --> 00:02:05.200
&gt;&gt; Brian Holt: That's typically
how I would get started.

