WEBVTT

1
00:00:00.300 --> 00:00:02.145
&gt;&gt; Brian Holt: So
now we're gonna go back to App.js.

2
00:00:10.298 --> 00:00:15.005
&gt;&gt; Brian Holt: And
we're going to import | Router | from

3
00:00:15.005 --> 00:00:21.281
"@reach/router"; and
due to the magics of Parcel,

4
00:00:21.281 --> 00:00:25.739
this will just magically appear for us.

5
00:00:34.126 --> 00:00:36.627
&gt;&gt; Brian Holt: Okay, and now what we're
gonna do is we're going to surround

6
00:00:36.627 --> 00:00:37.696
Results with the Router.

7
00:00:42.216 --> 00:00:42.839
&gt;&gt; Brian Holt: Like so.

8
00:00:49.457 --> 00:00:53.070
&gt;&gt; Brian Holt: Okay,
we're also gonna pull in Details.

9
00:00:55.050 --> 00:00:57.596
So this is another one
of my favorite features

10
00:00:57.596 --> 00:01:02.730
about,
&gt;&gt; Brian Holt: VS code in particular.

11
00:01:02.730 --> 00:01:05.060
Notice that I haven't actually
imported Details up here.

12
00:01:05.060 --> 00:01:06.660
But I just started writing import Details.

13
00:01:06.660 --> 00:01:10.454
And if I just hit Enter,
it's not only going to autocomplete this.

14
00:01:10.454 --> 00:01:14.553
But if you look above,
it'll actually add import Details as well.

15
00:01:14.553 --> 00:01:18.396
So if I hit Enter,
notice it just came from Details as well.

16
00:01:20.521 --> 00:01:22.786
&gt;&gt; Brian Holt: That's pretty compelling,
in my opinion.

17
00:01:32.288 --> 00:01:36.245
&gt;&gt; Brian Holt: Okay, the last thing we
need to do is we need to give them a path,

18
00:01:36.245 --> 00:01:41.282
as in, what URL do I need to be at to
actually hit this particular route, right?

19
00:01:44.607 --> 00:01:50.468
&gt;&gt; Brian Holt: So
the way I'm gonna do that is path="/".

20
00:01:53.359 --> 00:01:56.875
&gt;&gt; Brian Holt: So this means that the base
route is going to be the Results page.

21
00:01:59.458 --> 00:02:04.297
&gt;&gt; Brian Holt: Then,
for details, I'm going

22
00:02:04.297 --> 00:02:09.145
to do path="/details/".

23
00:02:09.145 --> 00:02:13.154
Then I want it to have what's called
a variable parameter on the end here.

24
00:02:15.641 --> 00:02:17.197
&gt;&gt; Brian Holt: I'm gonna put :id.

25
00:02:17.197 --> 00:02:23.068
So that means anything that's /detail/
some long string of some sort,

26
00:02:23.068 --> 00:02:28.476
right, is going to be passed to
Details with that id as a parameter.

27
00:02:42.945 --> 00:02:44.292
&gt;&gt; Brian Holt: So
that's what that :id does.

28
00:02:47.394 --> 00:02:50.627
&gt;&gt; Brian Holt: Another key difference
between React Router v4 and

29
00:02:50.627 --> 00:02:55.257
Reach Router is Reach Router uses what's
called a scoring system to decide

30
00:02:55.257 --> 00:02:56.524
which route to use.

31
00:02:56.524 --> 00:03:00.077
So technically, / and /details,

32
00:03:00.077 --> 00:03:05.349
slash technically meets
both of these requirements,

33
00:03:05.349 --> 00:03:10.960
because this is considered
a child of slash, right?

34
00:03:10.960 --> 00:03:16.270
If you were doing React Router, you
would have to do something like exact so

35
00:03:16.270 --> 00:03:18.960
that it would have to match exactly this.

36
00:03:18.960 --> 00:03:21.720
But with Reach Router,
because it uses a scoring system,

37
00:03:21.720 --> 00:03:27.560
it judges this one to be of higher
salience and renders only that one.

38
00:03:27.560 --> 00:03:29.110
Which is really convenient, believe me.

39
00:03:29.110 --> 00:03:32.300
Having written in React Router for
a while, this is really quite nice.

40
00:03:32.300 --> 00:03:35.080
You don't have to do anything like switch.

41
00:03:35.080 --> 00:03:37.830
Switch only allows you to
render one thing at a time.

42
00:03:37.830 --> 00:03:40.670
There's a lot of conveniences
to Reach Router.

43
00:03:40.670 --> 00:03:45.990
So now if I go over to my browser, like
it should be, it's still on this page.

44
00:03:45.990 --> 00:03:53.547
But if I go to /details/1,
notice that I go to my other route.

