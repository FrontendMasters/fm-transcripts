WEBVTT

1
00:00:00.000 --> 00:00:03.261
Okay, transition, where we are.

2
00:00:03.261 --> 00:00:04.923
We want to say that if I click Submit,

3
00:00:04.923 --> 00:00:08.196
it shows them like a little loading
spinner where the submit button is and

4
00:00:08.196 --> 00:00:12.029
it doesn't allow them to click it multiple
times because that makes sense, right?

5
00:00:12.029 --> 00:00:14.789
We can use a transition to handle that.

6
00:00:14.789 --> 00:00:17.417
This is more useful than deferred value.

7
00:00:17.417 --> 00:00:21.103
I can actually see some of us having use
cases where useTransition can be fine.

8
00:00:21.103 --> 00:00:25.713
The nice thing about useTransition is that
it can show you an intermediary state, and

9
00:00:25.713 --> 00:00:29.184
then if it needs to be interrupted,
it's also interruptible.

10
00:00:29.184 --> 00:00:34.252
So it's both low priority and
helps us show a good loading

11
00:00:34.252 --> 00:00:39.230
state in these intermediary periods,
all A plus to me.

12
00:00:39.230 --> 00:00:42.838
So what we're gonna do
here is we're gonna say,

13
00:00:42.838 --> 00:00:47.428
in SearchParams.jsx,
we're gonna load a useTransition.

14
00:00:52.752 --> 00:00:58.041
Okay, down in our form submit,
so down here,

15
00:01:05.303 --> 00:01:06.994
I think I forgot to put this in here.

16
00:01:06.994 --> 00:01:14.196
Okay, so, here we're gonna say
const [] = useTransition(),

17
00:01:14.196 --> 00:01:19.660
and I gotta remember the exact
call signature here,

18
00:01:19.660 --> 00:01:23.150
cuz I forgot to put it in my notes.

19
00:01:23.150 --> 00:01:29.463
So you're gonna have isPending as
a Boolean that it gives back to you,

20
00:01:29.463 --> 00:01:34.074
and then the second function
is startTransition.

21
00:01:38.635 --> 00:01:39.981
Pretty sure I'm getting this right.

22
00:01:42.908 --> 00:01:45.225
And then it doesn't take
anything in there as well.

23
00:01:45.225 --> 00:01:48.777
Okay, on my form transition here, or

24
00:01:48.777 --> 00:01:54.327
my form function here,
what I wanna do is right after here,

25
00:01:54.327 --> 00:01:59.999
I'm gonna put call this function
called startTransition.

26
00:01:59.999 --> 00:02:05.870
This takes in a function where I can
say SetRequestParameters(object),

27
00:02:05.870 --> 00:02:10.284
so I can actually just move
this inside of here, rather.

28
00:02:10.284 --> 00:02:13.333
What you're doing is you're
identifying to React like,

29
00:02:13.333 --> 00:02:17.011
I'm gonna call setState in here,
some sort of setState for my hooks.

30
00:02:17.011 --> 00:02:21.766
Whatever happens inside of here,
low priority stuff can be interrupted,

31
00:02:21.766 --> 00:02:23.661
that's fine with me, okay?

32
00:02:23.661 --> 00:02:25.073
So that's step one.

33
00:02:25.073 --> 00:02:31.351
Step two is we're gonna go
down to our button, And

34
00:02:31.351 --> 00:02:34.115
we're just going to say,
hey, if this is pending,

35
00:02:39.266 --> 00:02:41.662
Then show me my loading pane.

36
00:02:41.662 --> 00:02:50.105
So I'm gonna say div className
= "mini loading-pane".

37
00:02:50.105 --> 00:02:56.423
h2 className = "loader".

38
00:02:56.423 --> 00:03:00.244
And let's put a spinning poodle in here,
just for funsies.

39
00:03:04.804 --> 00:03:08.322
If it's not loading,
then just show me my button, right?

40
00:03:08.322 --> 00:03:12.054
So I'm going to move my
Submit button into here.

41
00:03:14.614 --> 00:03:19.461
Okay, so to show you the desired
effect here, I have cat here,

42
00:03:19.461 --> 00:03:23.576
and then if I hit Submit,
notice when I click Submit,

43
00:03:23.576 --> 00:03:27.273
it's gonna spin a poodle for
just a second.

44
00:03:27.273 --> 00:03:29.074
Didn't even do that for me.

45
00:03:29.074 --> 00:03:33.629
So we're identifying that setting
the requestParams as the object is

46
00:03:33.629 --> 00:03:35.879
the lowest priority transition.

47
00:03:35.879 --> 00:03:38.627
That actually requires almost
no re-rendering, right?

48
00:03:38.627 --> 00:03:41.618
That actually literally
requires no re-rendering.

49
00:03:41.618 --> 00:03:48.147
So if this is always coming back
as not being deferred, yep.

50
00:03:50.674 --> 00:03:52.864
So the part that we would
have to defer then,

51
00:03:52.864 --> 00:03:56.788
we would probably be deferring the pets
rather than doing it this way, right?

52
00:03:56.788 --> 00:03:59.759
Because that's actually the expensive
part of the re-rendering.

53
00:03:59.759 --> 00:04:05.964
This in and
of itself requires no UI re-rendering.

54
00:04:08.260 --> 00:04:09.841
Yep, that makes sense.

55
00:04:09.841 --> 00:04:13.353
So this in and of itself,
just setting the object here,

56
00:04:13.353 --> 00:04:16.212
that is not necessarily
the best way to do it.

57
00:04:16.212 --> 00:04:20.528
Better way of doing it for
my data, going back to this, yeah,

58
00:04:20.528 --> 00:04:26.172
we have to interact more with React Query
to get the best way that we would want to,

59
00:04:26.172 --> 00:04:29.176
right, to show that intermediary state.

60
00:04:34.872 --> 00:04:38.448
Yep, Okay,

61
00:04:41.930 --> 00:04:44.825
In any case, it would have
been hard to proceed anyways.

62
00:04:44.825 --> 00:04:49.730
So I have a good note here though.

63
00:04:49.730 --> 00:04:51.147
Some of you might be wondering,

64
00:04:51.147 --> 00:04:54.148
when do I use useDeferredValue
versus when do I use useTransition?

65
00:04:54.148 --> 00:04:58.935
So a good way to keep them kinda straight
is for useTransition, it's to say,

66
00:04:58.935 --> 00:05:03.649
I have something new that I'm about to
give you, but it's low priority, so

67
00:05:03.649 --> 00:05:06.024
feel free to do this at your own speed.

68
00:05:06.024 --> 00:05:10.522
Whereas useDeferredValue,
it's more after the fact, is like, hey,

69
00:05:10.522 --> 00:05:13.470
I just got something
that's going to be new, so

70
00:05:13.470 --> 00:05:18.137
please re-render this thing that I
already have at your leisure, right?

71
00:05:18.137 --> 00:05:23.331
So useTransition, you know you're about
to go into something that's heavy.

72
00:05:23.331 --> 00:05:26.779
With useDeferredValue, it's like,
I got something heavy,

73
00:05:26.779 --> 00:05:29.001
please do this at your leisure, right?

74
00:05:29.001 --> 00:05:36.952
So the key there is startTransition
with useTransition, right?

75
00:05:36.952 --> 00:05:40.237
That you're identifying to React,
this is something new and heavy,

76
00:05:40.237 --> 00:05:41.750
please do this at your leisure.

