WEBVTT

1
00:00:00.004 --> 00:00:00.767
This is good.

2
00:00:00.767 --> 00:00:04.245
Now we have access to reducts
inside of our applications.

3
00:00:04.245 --> 00:00:05.109
Let's go ahead and

4
00:00:05.109 --> 00:00:08.133
delete adopted pet context coz
we're not gonna use that anymore.

5
00:00:08.133 --> 00:00:14.747
So you can just delete
that from your app and

6
00:00:14.747 --> 00:00:21.372
make a file called adoptedPetSlice.js.

7
00:00:24.282 --> 00:00:24.993
What is a slice?

8
00:00:24.993 --> 00:00:31.028
A slice is kind of a new idea for Redux
Toolkit, but basically it's the idea of,

9
00:00:31.028 --> 00:00:35.262
I'm putting all the reducers,
and action creators and

10
00:00:35.262 --> 00:00:39.786
all that stuff together in
one particular bundle, right?

11
00:00:39.786 --> 00:00:44.084
That the term that they use to
describe that bundle of putting

12
00:00:44.084 --> 00:00:46.453
everything together is a slice.

13
00:00:48.301 --> 00:00:53.515
So import, create slice

14
00:00:53.515 --> 00:00:58.488
from at Redux toolkit.

15
00:00:58.488 --> 00:01:03.596
And then we're going to export const

16
00:01:03.596 --> 00:01:08.870
adoptedPetSlice = createSlice, so

17
00:01:08.870 --> 00:01:14.155
first of all you have to give it a name.

18
00:01:14.155 --> 00:01:21.671
What is the name of the slice this
name is the adoptedPet, okay.

19
00:01:21.671 --> 00:01:26.516
The initial state, we have to give us some
sort of initial state of like what we

20
00:01:26.516 --> 00:01:31.531
want this particular item in our little
database to be when you first create it.

21
00:01:31.531 --> 00:01:36.633
So we're going to give it a value of null,
I don't want it to be set to anything

22
00:01:36.633 --> 00:01:41.672
right because no pet has been adopted
until they click the AdoptPet button.

23
00:01:41.672 --> 00:01:44.916
And then we're gonna give
it a bunch of reducers.

24
00:01:44.916 --> 00:01:50.710
You can give it a bunch of reducers,
I'm gonna give it just one reducer.

25
00:01:50.710 --> 00:01:53.754
This is going to be the adopt reducer.

26
00:01:53.754 --> 00:01:55.114
So what is a reducer?

27
00:01:55.114 --> 00:02:00.359
A reducer is just a fancy term for, it's
a function that takes an old state and

28
00:02:00.359 --> 00:02:04.006
something that you wanna
change about the old state.

29
00:02:04.006 --> 00:02:07.521
We'll call that an action.

30
00:02:07.521 --> 00:02:09.837
And all it does is it takes an old state.

31
00:02:09.837 --> 00:02:15.483
It performs some action to it and
returns new state.

32
00:02:15.483 --> 00:02:23.984
So in this case, I'm gonna say
state.value is assigned action.payload.

33
00:02:23.984 --> 00:02:27.139
So whenever someone adopts something,
we're just saying,

34
00:02:27.139 --> 00:02:29.028
this is now the adoptedPet, right?

35
00:02:29.028 --> 00:02:30.297
We're not doing any math.

36
00:02:30.297 --> 00:02:31.871
We're not doing anything like that.

37
00:02:31.871 --> 00:02:38.538
We're just saying that this
is the new state, right?

38
00:02:38.538 --> 00:02:39.330
But I mean,

39
00:02:39.330 --> 00:02:44.653
I don't know let's say it was important
that the name be to uppercase, right?

40
00:02:44.653 --> 00:02:46.612
You could do all that stuff here.

41
00:02:46.612 --> 00:02:49.751
This is your opportunity
to change the state.

42
00:02:52.100 --> 00:02:53.369
Does that make sense?

43
00:02:54.637 --> 00:02:59.527
This is kind of a weird API,
I mean, it's very succinct, right?

44
00:02:59.527 --> 00:03:02.801
But if you come from a functional
programming background,

45
00:03:02.801 --> 00:03:05.757
it feels really weird to
operate on your parameters.

46
00:03:05.757 --> 00:03:10.918
It's okay,
I promise it's okay to do it this way.

47
00:03:10.918 --> 00:03:12.731
Yeah, that's what you're supposed to do.

48
00:03:15.910 --> 00:03:21.954
Okay, export const (adopt)

49
00:03:21.954 --> 00:03:29.626
equals adoptedPetSlice.actions and

50
00:03:29.626 --> 00:03:38.697
export default adoptedPetSlice.reducer.

51
00:03:38.697 --> 00:03:44.109
So I'm just kind of taking this
pattern from their documentation.

52
00:03:44.109 --> 00:03:49.634
Whenever you create a reducer,
it automatically creates an action for

53
00:03:49.634 --> 00:03:54.800
you, so this is a little bit of
black magic cure for redox toolkit.

54
00:03:54.800 --> 00:04:02.008
I created this reducer, under the hood it
then goes and creates an action for me.

55
00:04:02.008 --> 00:04:06.865
So now I have this ability to
create actions that I can send it

56
00:04:06.865 --> 00:04:08.331
to this reducer.

57
00:04:08.331 --> 00:04:13.343
So later if I click, adoptLuna,
I can use this function to send that into

58
00:04:13.343 --> 00:04:19.115
the reducer, and it just kind of all the
parts automatically fit together for you.

59
00:04:19.115 --> 00:04:22.484
It's a little indirect, but

60
00:04:22.484 --> 00:04:28.422
it also was very annoying
to have to write this code.

61
00:04:28.422 --> 00:04:36.758
I mean basically all
this function does is,

62
00:04:36.758 --> 00:04:41.039
function pet return,

63
00:04:41.039 --> 00:04:45.558
action or payload pet.

64
00:04:45.558 --> 00:04:50.475
I think this is basically
all this function does,

65
00:04:50.475 --> 00:04:55.286
is it just wraps it into
an action object for you.

66
00:04:55.286 --> 00:05:01.420
It also, it will give it like a type
of like adopt, something like that.

67
00:05:01.420 --> 00:05:07.512
That's all an action creator does is it
takes in some sort of bit of information

68
00:05:07.512 --> 00:05:13.351
and it wraps it into like a formal object
that you can then give to reducers.

69
00:05:13.351 --> 00:05:16.652
So, this little black magic key,
but at the at the end of the day,

70
00:05:16.652 --> 00:05:17.925
this is all it's doing.

71
00:05:17.925 --> 00:05:20.911
So it's just nice to not have to
repeat yourself so many times.

72
00:05:20.911 --> 00:05:25.849
Again, if you go watch version four
of this course I make you do all this

73
00:05:25.849 --> 00:05:28.877
by hand, and it's very annoying to do it.

74
00:05:28.877 --> 00:05:30.895
Okay, so there you go, that is a slice.

75
00:05:30.895 --> 00:05:33.254
That's everything, that there is a slice.

76
00:05:33.254 --> 00:05:37.977
Like, we're not going to do it now, but
you can imagine that there would be like

77
00:05:37.977 --> 00:05:41.306
an adoptReducer,
where it takes in a state and action.

78
00:05:41.306 --> 00:05:48.361
And all this would do is like
state.value equals null, right?

79
00:05:48.361 --> 00:05:52.353
And then you would have
an unadopted function.

80
00:05:52.353 --> 00:05:56.838
And you could like click like an X on our
interface node and adopt a pet right?

81
00:05:56.838 --> 00:05:59.678
So anything that you would do to
modify the adoptedPet would go

82
00:05:59.678 --> 00:06:00.941
into this reducers array.

83
00:06:00.941 --> 00:06:04.777
Okay, that make sense?

84
00:06:04.777 --> 00:06:09.439
Okay, so for now, we're just gonna
have one, but you can imagine you

85
00:06:09.439 --> 00:06:13.959
could have anything that happens
to affect that would happen here.

86
00:06:15.854 --> 00:06:20.305
Okay.
So go back to store.js, and

87
00:06:20.305 --> 00:06:26.175
here we're just gonna add dot Reducer.

88
00:06:26.175 --> 00:06:33.189
So import adoptedPet,
slice from adoptedPet.

89
00:06:33.189 --> 00:06:39.826
I'm gonna call this just adopt,
adoptedPet.

90
00:06:39.826 --> 00:06:42.950
And we'll put adoptPet there.

91
00:06:42.950 --> 00:06:45.572
And there we go.

92
00:06:45.572 --> 00:06:51.986
You have to give this to the store or
it doesn't know anything about it, right,

93
00:06:51.986 --> 00:06:57.658
so we're providing the reducer to
the adoptedPet slice to the store.

