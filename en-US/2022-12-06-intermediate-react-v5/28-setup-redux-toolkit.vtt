WEBVTT

1
00:00:00.058 --> 00:00:01.818
We just finished TypeScript.

2
00:00:01.818 --> 00:00:05.586
And we are going to talk about Redux now.

3
00:00:05.586 --> 00:00:10.965
So I've taught Redux as part of
the complete intro to React for

4
00:00:10.965 --> 00:00:12.733
now years, right.

5
00:00:12.733 --> 00:00:14.287
I like Redux.

6
00:00:14.287 --> 00:00:16.651
I used to use Redux quite a lot.

7
00:00:16.651 --> 00:00:20.144
And then there was a long
period of time when React,

8
00:00:20.144 --> 00:00:24.627
core React kind of caught up to
not really needing Redux anymore.

9
00:00:24.627 --> 00:00:28.352
That I kind of let it fall by the wayside.

10
00:00:28.352 --> 00:00:31.307
In fact,
the past couple courses I've taught Redux,

11
00:00:31.307 --> 00:00:33.245
I kind of preface it always with-.

12
00:00:33.245 --> 00:00:37.106
I'm going to teach you Redux ,so
that I hope that you don't use Redux

13
00:00:37.106 --> 00:00:38.047
later, right?

14
00:00:38.047 --> 00:00:43.380
Cuz most people kind of have like
this association with React and

15
00:00:43.380 --> 00:00:46.844
Redux kind of in the same line of thought.

16
00:00:46.844 --> 00:00:51.020
I'm gonna say this has
changed relatively recently.

17
00:00:51.020 --> 00:00:54.385
They released something
called Redux Toolkit and

18
00:00:54.385 --> 00:00:58.720
they took what was hard about Redux,
and they made it very easy.

19
00:00:58.720 --> 00:01:04.367
So I'm kind of coming back around to,
from never use Redux,

20
00:01:04.367 --> 00:01:09.132
to maybe sometimes in
specific cases Redux Toolkit

21
00:01:09.132 --> 00:01:13.363
can solve some really cool problems for
you.

22
00:01:13.363 --> 00:01:17.112
So why do we have Redux?

23
00:01:17.112 --> 00:01:19.025
Maybe let's start with what is Redux?

24
00:01:19.025 --> 00:01:22.163
Redux is a central store for your data.

25
00:01:22.163 --> 00:01:27.848
So if you remember from the complete
intro, we talked about context, right?

26
00:01:27.848 --> 00:01:30.845
We used to not have context from React,
that used to not be a thing at all.

27
00:01:30.845 --> 00:01:34.405
And so having a centralized store for
app level data,

28
00:01:34.405 --> 00:01:37.577
you needed some third
party library to do that.

29
00:01:37.577 --> 00:01:41.826
We had Flux before and
then we ended up with Redux.

30
00:01:41.826 --> 00:01:45.394
Which is kind of the pinnacle
of the Flux architecture.

31
00:01:45.394 --> 00:01:49.595
But we ended up also with MobX and and

32
00:01:49.595 --> 00:01:53.703
some other I don't even
know how to say that.

33
00:01:53.703 --> 00:01:56.673
But there's that library
that I can't pronounce.

34
00:01:56.673 --> 00:01:59.321
And there's a couple other ones.

35
00:01:59.321 --> 00:02:03.819
I still think at the core of it Redux
is probably the most popular one.

36
00:02:03.819 --> 00:02:06.428
But yeah, there are some
other options there as well.

37
00:02:06.428 --> 00:02:11.735
Then we got context we didn't really
need a centralized store anymore,

38
00:02:11.735 --> 00:02:16.699
because we have this ability
to share context across a app.

39
00:02:16.699 --> 00:02:21.589
And so Redux ended up being kind
of superfluous at that point.

40
00:02:21.589 --> 00:02:25.704
So I'm coming back around
that with Redux Toolkit,

41
00:02:25.704 --> 00:02:30.392
which is this,
basically it's a framework around Redux.

42
00:02:30.392 --> 00:02:33.178
That Redux can now be useful again.

43
00:02:33.178 --> 00:02:35.826
So, why do we use Redux?

44
00:02:35.826 --> 00:02:39.581
Context used to be a lot worse,
but now it's better.

45
00:02:39.581 --> 00:02:43.704
But the nice thing about Redux
code is it's extremely testable.

46
00:02:43.704 --> 00:02:45.344
That's the point of Redux,

47
00:02:45.344 --> 00:02:48.634
is they basically take all
of your state change, right?

48
00:02:48.634 --> 00:02:51.293
Going from state A to state B.

49
00:02:51.293 --> 00:02:55.270
And they make all of those
transition states testable.

50
00:02:55.270 --> 00:02:59.946
95% of your bugs and UIs is just gonna
be state management gone awry, right?

51
00:02:59.946 --> 00:03:03.369
So, if you can make stateful
transitions testable,

52
00:03:03.369 --> 00:03:08.401
you're going to eliminate entire classes
of bugs that your app is gonna have.

53
00:03:08.401 --> 00:03:11.092
That seems pretty useful to me, right?

54
00:03:11.092 --> 00:03:14.389
So it's testable and it's debuggable.

55
00:03:14.389 --> 00:03:17.406
Which two of my favorite things if
you've been listening to me long enough.

56
00:03:17.406 --> 00:03:23.662
I always harp on is this readable,
is this testable and is this debuggable?

57
00:03:23.662 --> 00:03:27.163
So that's where we are with Redux.

58
00:03:27.163 --> 00:03:30.838
It used to be really verbose to set up.

59
00:03:30.838 --> 00:03:35.248
And Redux Toolkit has now
made that not very verbose.

60
00:03:37.943 --> 00:03:42.710
So if you want to learn raw
Redux without Redux Toolkit,

61
00:03:42.710 --> 00:03:46.473
take version seven of this course, right?

62
00:03:46.473 --> 00:03:50.668
It'll be version four
of Intermediate React.

63
00:03:50.668 --> 00:03:53.115
That has a whole section on Redux.

64
00:03:53.115 --> 00:03:55.046
It goes through with raw Redux.

65
00:03:55.046 --> 00:03:59.270
But today we're gonna go through with
Redux Toolkit which I think is gonna be

66
00:03:59.270 --> 00:04:01.325
a more pleasant experience for you.

67
00:04:01.325 --> 00:04:07.056
So Redux, it's just,
they kind of pull apart all the various

68
00:04:07.056 --> 00:04:12.916
different parts of changing state and
it made it hard to write.

69
00:04:12.916 --> 00:04:17.152
But now we're gonna use Redux toolkit
which is going to make it a lot easier.

70
00:04:17.152 --> 00:04:21.800
So start with a fresh
copy of the application.

71
00:04:21.800 --> 00:04:26.380
So if you've been doing like
the TypeScript stuff, put that aside.

72
00:04:26.380 --> 00:04:33.037
And we gonna start again from a fresh
copy of 14-context from the repo.

73
00:04:33.037 --> 00:04:39.650
And then we're gonna say npm
install @reduxjs/toolkit.

74
00:04:39.650 --> 00:04:44.817
And we're gonna do @1.8 .6.

75
00:04:44.817 --> 00:04:49.858
And then we're gonna use
a library that glues,

76
00:04:49.858 --> 00:04:56.423
React Redux together,
called react-redux@8.0.4.

77
00:04:56.423 --> 00:05:01.107
So that is to say,
you can use Redux outside of React.

78
00:05:01.107 --> 00:05:03.348
Redux works with Angular.

79
00:05:03.348 --> 00:05:06.892
And I imagine it works with a lots
of other frameworks as well.

80
00:05:06.892 --> 00:05:09.705
But we are going to be
obviously using it with React.

81
00:05:11.371 --> 00:05:18.211
Okay, so now that we have that,
we're gonna go into our source directory.

82
00:05:18.211 --> 00:05:21.220
And we're going to create
a file called store.js.

83
00:05:21.220 --> 00:05:27.176
This is basically where we're going
to instantiate our Redux store.

84
00:05:27.176 --> 00:05:31.615
We're going to import.

85
00:05:31.615 --> 00:05:38.001
Configure store from @Redux-toolkit,

86
00:05:38.001 --> 00:05:43.144
we're going to const store equals

87
00:05:43.144 --> 00:05:48.828
let's get rid of that configure store

88
00:05:53.401 --> 00:05:56.456
And we are gonna give it
like a reducer object here.

89
00:05:56.456 --> 00:06:00.951
And for right now, it's going to be empty,
but eventually we're gonna start giving

90
00:06:00.951 --> 00:06:04.155
stuff to it, and
then we're going to export default store.

91
00:06:05.542 --> 00:06:09.641
This, if you've ever done Redux before,
this should look pretty familiar to you.

92
00:06:09.641 --> 00:06:11.801
It's relatively similar.

93
00:06:11.801 --> 00:06:17.028
We're then going to migrate our
existing pet adoption application

94
00:06:17.028 --> 00:06:21.530
to store some of its store, or
some of its data, in Redux.

95
00:06:21.530 --> 00:06:22.791
Not all of it.

96
00:06:22.791 --> 00:06:27.647
And when you use Redux with React,
it's not like you don't use state anymore.

97
00:06:27.647 --> 00:06:31.723
That all of the use state calls that
you're gonna use in React at that point

98
00:06:31.723 --> 00:06:35.272
are gonna be very much like,
show this modal, hide this modal,

99
00:06:35.272 --> 00:06:36.683
is active is not active.

100
00:06:36.683 --> 00:06:42.276
It's gonna be very UI state kind of,
sort of state.

101
00:06:42.276 --> 00:06:45.265
As opposed to,
you're gonna put everything into Redux,

102
00:06:45.265 --> 00:06:48.568
is gonna be the user, the pets,
the location that they're in.

103
00:06:48.568 --> 00:06:51.129
Those kind of things,
those kind of app level states.

104
00:06:52.641 --> 00:06:59.054
Okay, so in app.jsx you can
delete the adopted pet context.

105
00:06:59.054 --> 00:07:01.340
We'll get rid of that.

106
00:07:01.340 --> 00:07:07.056
And you can delete the use state here
from React, so you can get rid of that.

107
00:07:07.056 --> 00:07:12.156
Okay.

108
00:07:12.156 --> 00:07:19.319
And then at the top here we're
going to have to import provider.

109
00:07:19.319 --> 00:07:25.121
From React Redux and you're also going to

110
00:07:25.121 --> 00:07:30.935
have to import the store from ./store.

111
00:07:33.538 --> 00:07:39.159
Okay, you can drop this use
state call here inside of app,

112
00:07:41.444 --> 00:07:49.462
And you can basically replace this
adopted pet context with the provider.

113
00:07:52.316 --> 00:07:57.856
The store equals store,
like that and again.

114
00:08:01.120 --> 00:08:05.232
So I just replaced the adopted
pet provider with just

115
00:08:05.232 --> 00:08:07.759
the provider from React Redux.

116
00:08:07.759 --> 00:08:12.819
So this is going to stick our
store on the context for React.

117
00:08:12.819 --> 00:08:16.920
Which means now anywhere inside
of our react application,

118
00:08:16.920 --> 00:08:19.140
we can access this Redux store.

119
00:08:19.140 --> 00:08:23.666
There's nothing in it yet,
but we'll get there.

120
00:08:23.666 --> 00:08:29.637
You can kind of think of Redux
as a miniature database for

121
00:08:29.637 --> 00:08:32.569
your little application.

122
00:08:32.569 --> 00:08:35.015
It's an imperfect analogy, so
don't run too far with it.

123
00:08:35.015 --> 00:08:40.711
And then you can kind of think of,
we can dispatch actions and

124
00:08:40.711 --> 00:08:44.632
queries to our little database, right.

125
00:08:44.632 --> 00:08:48.199
Kind of an imperfect way to think
about Redux and what it does for

126
00:08:48.199 --> 00:08:49.355
your application.

