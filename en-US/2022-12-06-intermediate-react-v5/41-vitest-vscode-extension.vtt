WEBVTT

1
00:00:00.000 --> 00:00:03.126
I got one more thing to show you here.

2
00:00:03.126 --> 00:00:07.056
This is gonna be specific to VS code for
just a second.

3
00:00:07.056 --> 00:00:13.374
I have a extension here installed
called the Vtest extension.

4
00:00:13.374 --> 00:00:16.456
This is heavily inspired by the Just one,

5
00:00:16.456 --> 00:00:19.810
which you can see I also
have installed here.

6
00:00:19.810 --> 00:00:25.243
I used to work with Orders
on the VS code team.

7
00:00:25.243 --> 00:00:27.148
Now what does Order work on now?

8
00:00:27.148 --> 00:00:30.269
I don't know,
I think Order has left Microsoft.

9
00:00:30.269 --> 00:00:34.830
But Vtest is largely, they took everything
that's great about the Just extension and

10
00:00:34.830 --> 00:00:36.401
they just ported it to Vtest.

11
00:00:36.401 --> 00:00:41.387
In order to make this work the way
that we want it to, you'd have to go

12
00:00:41.387 --> 00:00:46.378
into your package.json and
change this from test to be test watch.

13
00:00:46.378 --> 00:00:54.791
Cuz, right, it's a watcher whenever
I run test, oops, npm run test.

14
00:00:54.791 --> 00:00:59.122
It likes, one more time,
here we go, npm run test.

15
00:01:02.434 --> 00:01:05.164
I got rid of it, testwatch.

16
00:01:07.633 --> 00:01:09.343
Notice that it's sitting here, right?

17
00:01:09.343 --> 00:01:11.876
It's actually not exiting.

18
00:01:11.876 --> 00:01:16.728
In order to get the extension to
work correctly you have to get

19
00:01:16.728 --> 00:01:21.674
it to just run once and
I can't remember how you do that, npm or

20
00:01:21.674 --> 00:01:25.403
mpx vtest -- help,
how to get it to run once?

21
00:01:25.403 --> 00:01:27.872
I think it's just run, okay, there you go.

22
00:01:27.872 --> 00:01:31.422
So what you want here
is you want your test.

23
00:01:31.422 --> 00:01:39.691
So in test to be the vtest -- run,
like that.

24
00:01:39.691 --> 00:01:44.622
And now I think if I say npm test,
it should just run once and

25
00:01:44.622 --> 00:01:47.552
exit which is cool, it does that.

26
00:01:47.552 --> 00:01:51.541
Now I can go here into my testing here,

27
00:01:51.541 --> 00:01:56.039
you can see this little
beaker on the left.

28
00:01:57.917 --> 00:02:00.921
And I think I can just click
run all my tests in there.

29
00:02:00.921 --> 00:02:03.004
I can see all of my tests running here.

30
00:02:03.004 --> 00:02:10.541
I can click on this,
show me in the file where this is?

31
00:02:10.541 --> 00:02:14.069
If we go to something like
pet which has several tests,

32
00:02:14.069 --> 00:02:17.992
you can see it individually here and
here, the check marks.

33
00:02:17.992 --> 00:02:21.939
I can run them directly
again from the browser.

34
00:02:21.939 --> 00:02:26.512
Let's say I'm messing with something and
I'm here in carousel, and

35
00:02:26.512 --> 00:02:30.401
all of a sudden I change this
to be active or something else.

36
00:02:30.401 --> 00:02:35.377
I can run my test directly again and
I can see here

37
00:02:35.377 --> 00:02:40.243
this is breaking and
I can go directly to that.

38
00:02:40.243 --> 00:02:42.443
It can say, hey,
I expected this to be this, so

39
00:02:42.443 --> 00:02:45.416
it's actually gonna inline all
of my feedback directly there.

40
00:02:45.416 --> 00:02:48.873
I can see which assertion is breaking,

41
00:02:48.873 --> 00:02:53.709
and then I can go back and
fix that, run my tests again.

42
00:02:55.396 --> 00:02:59.195
I don't have the debugger set up, but
you can actually run that directly into

43
00:02:59.195 --> 00:03:03.306
bugging, so you can debug your tests,
maybe it'll work, no, I don't think so.

44
00:03:03.306 --> 00:03:06.672
Yeah, I have to go set up all
the VS code stuff to get that run,

45
00:03:06.672 --> 00:03:08.526
I'm not gonna do that right now.

46
00:03:08.526 --> 00:03:12.314
But if you have all of your debugging
stuff set up for VS code you can actually

47
00:03:12.314 --> 00:03:16.066
run it directly in the debugger and
see piece by piece what's happening.

48
00:03:17.405 --> 00:03:22.424
So, the key there to getting
that working correctly is making

49
00:03:22.424 --> 00:03:27.263
sure that you have your NPM run
test runs just once, right?

50
00:03:27.263 --> 00:03:31.306
So that's why I have to move the watch or
Vtest to the just the watch and

51
00:03:31.306 --> 00:03:32.926
then test is just run once.

52
00:03:35.252 --> 00:03:39.943
So if you're working in Vtest I strongly
suggest that you download this extension.

53
00:03:39.943 --> 00:03:44.425
By the same token, if you're working
in Jest I suggest you run or

54
00:03:44.425 --> 00:03:46.507
you install this one as well.

55
00:03:49.902 --> 00:03:50.597
Okay.

56
00:03:52.664 --> 00:03:55.229
Any questions about that?

57
00:03:55.229 --> 00:04:00.121
We only have seven tests, so
this is really not that many.

58
00:04:00.121 --> 00:04:03.994
But I'm sure some of you have worked
on code bases with hundreds of tests,

59
00:04:03.994 --> 00:04:05.187
this can be very nice.

60
00:04:05.187 --> 00:04:08.097
It's nice that you can run
them individually, right?

61
00:04:08.097 --> 00:04:10.726
I can come in here and
I can actually say, hey,

62
00:04:10.726 --> 00:04:14.380
please only run this specific test and
do not run the other ones.

63
00:04:14.380 --> 00:04:19.974
It's nice so that you don't have to wait
minutes for your entire test suite to run.

64
00:04:19.974 --> 00:04:23.609
I guess that's another nice thing
about vtest and Jest in general.

65
00:04:23.609 --> 00:04:27.674
If I go break results and
then I go back and run test again,

66
00:04:27.674 --> 00:04:32.276
it's actually going to go run
the breaking test first, right?

67
00:04:32.276 --> 00:04:35.410
So it's actually smart enough to
show you only the breaking tests and

68
00:04:35.410 --> 00:04:37.310
not rerun everything every single time.

69
00:04:37.310 --> 00:04:41.273
So, there's a bunch of features like that,
that it does under the hood for you.

70
00:04:41.273 --> 00:04:42.892
Again, inspired by Jest.

71
00:04:42.892 --> 00:04:49.041
Jest is really the one that came up with
a lot of those just developer niceties,

72
00:04:49.041 --> 00:04:53.524
and then everyone's kind of
been copying it ever since.

