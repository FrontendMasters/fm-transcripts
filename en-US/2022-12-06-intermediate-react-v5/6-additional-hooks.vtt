WEBVTT

1
00:00:00.000 --> 00:00:04.978
I wanted to just briefly cover
the other hooks that we're not

2
00:00:04.978 --> 00:00:07.036
gonna talk about today.

3
00:00:07.036 --> 00:00:10.114
One of them is useImperativeHandle.

4
00:00:10.114 --> 00:00:15.464
I used to cover this one,
this is mostly for library authors.

5
00:00:15.464 --> 00:00:20.470
The example that I used to get for
this is you have a huge form and you

6
00:00:20.470 --> 00:00:26.768
have validation on the form and you wanna
highlight a input that has an error on it.

7
00:00:26.768 --> 00:00:30.076
But how do you reach
into a child's input and

8
00:00:30.076 --> 00:00:33.212
highlight their input inside of a child?

9
00:00:33.212 --> 00:00:37.126
You can kinda do this reverse API thing
where a child can offer a method to

10
00:00:37.126 --> 00:00:40.601
the parent to call,
that is what useImperativeHandle is for.

11
00:00:40.601 --> 00:00:45.685
It's basically for a child to
expose functionality to a parent.

12
00:00:45.685 --> 00:00:50.242
Very rare, and again, I have never
used it, but if you're making a form

13
00:00:50.242 --> 00:00:55.348
validation library, that would be a valid
reason to use useImperativeHandle.

14
00:00:55.348 --> 00:00:59.084
It's a really weird handshake,
cuz you have to use a ref and

15
00:00:59.084 --> 00:01:02.392
then the parent uses a ref and
passes into the child.

16
00:01:02.392 --> 00:01:06.263
The child uses the ref to expose a
function that exposes back to the parent,

17
00:01:06.263 --> 00:01:07.435
that's how it works.

18
00:01:07.435 --> 00:01:12.756
If you're more curious than that
explanation, V7 covers this,

19
00:01:12.756 --> 00:01:18.942
so just hop into the V7 hooks and depth
section, and I give you that example.

20
00:01:18.942 --> 00:01:22.440
But I've stopped covering it because
I don't see people using it, and

21
00:01:22.440 --> 00:01:25.250
therefore I'm not gonna burden
you much more than that.

22
00:01:27.244 --> 00:01:31.445
UseDebugValue, this is I
have a custom hook and

23
00:01:31.445 --> 00:01:36.076
I want to expose a debug
value in the React Dev Tools.

24
00:01:36.076 --> 00:01:39.600
Again, mostly for libraries,
not for individual people.

25
00:01:39.600 --> 00:01:45.122
But we had the useBreedList hook, if we
wanted to expose what animal was passed

26
00:01:45.122 --> 00:01:50.414
in last, you could use a debug value
that logs it out in the React Dev Tools.

27
00:01:50.414 --> 00:01:55.012
So, again, mostly for
library authors, not for app authors,

28
00:01:55.012 --> 00:01:57.152
but it is there if you need it.

29
00:01:58.575 --> 00:02:01.845
UseDeferredValue and useTransition, I'm
just gonna not talk about these right now.

30
00:02:01.845 --> 00:02:06.135
Actually, I added a section
that we go into these in depth.

31
00:02:06.135 --> 00:02:09.805
So for now, just know that that's coming.

32
00:02:09.805 --> 00:02:12.889
useSyncExternalStore, this is
exclusively for libraries.

33
00:02:12.889 --> 00:02:17.609
They say that no one in app world should
be using this, but basically this allows

34
00:02:17.609 --> 00:02:21.984
things like Redux and MobX to create
subscriptions internally to React.

35
00:02:21.984 --> 00:02:27.095
And then useInsertionEffect,
this happens as opposed to layoutEffect,

36
00:02:27.095 --> 00:02:32.708
which happens after a component renders,
useInsertionEffect happens before.

37
00:02:32.708 --> 00:02:37.710
This is for CSS and JS libraries
like styled-components and Emotion.

38
00:02:37.710 --> 00:02:41.407
Again, not for you, and
I really can't fathom other than CSS,

39
00:02:41.407 --> 00:02:45.120
why you would wanna use it, but
it is something that exists now.

40
00:02:45.120 --> 00:02:47.110
This is new to React 18.

41
00:02:50.603 --> 00:02:54.202
They actually say explicitly in the docs,
if you're not doing CSS in JS,

42
00:02:54.202 --> 00:02:55.429
please don't use this.

43
00:02:55.429 --> 00:02:59.515
So, that's why I'm telling you it exists,
but ignore it.

44
00:02:59.515 --> 00:03:04.418
That is pretty definitively besides
these two that we're about to talk to,

45
00:03:04.418 --> 00:03:06.565
deferredValue and Transition,

46
00:03:06.565 --> 00:03:11.713
all the hooks that you'll ever need to
use that are the primitive ones to React.

47
00:03:11.713 --> 00:03:16.323
Everything else is just combining
all those things together to get

48
00:03:16.323 --> 00:03:18.719
the functionality that you want.

