WEBVTT

1
00:00:00.009 --> 00:00:05.893
We are gonna do Pet.JSX now,
pretty short little component here.

2
00:00:05.893 --> 00:00:09.095
You can see it's very upset at the moment.

3
00:00:09.095 --> 00:00:14.902
Changes from pet.JSX to pet.TSX, please.

4
00:00:14.902 --> 00:00:20.460
We're gonna make an interface up
here of IProps, and we're gonna.

5
00:00:24.712 --> 00:00:30.025
Yeah, we're just gonna give

6
00:00:30.025 --> 00:00:35.345
it a name: string, animal.

7
00:00:35.345 --> 00:00:38.162
I guess this could be an animal
that we get from the pets type.

8
00:00:38.162 --> 00:00:39.124
So let's, let's do that.

9
00:00:39.124 --> 00:00:41.961
That's fun.

10
00:00:41.961 --> 00:00:45.264
Breed: string.

11
00:00:45.264 --> 00:00:49.479
There's a temptation here and there's a
valid reason that you could probably just

12
00:00:49.479 --> 00:00:52.259
say here that the props here
is actually a pet, right?

13
00:00:52.259 --> 00:00:54.298
'Cuz we already typed that.

14
00:00:54.298 --> 00:00:58.649
But the thing is, this actually doesn't
need everything that's in a pet.

15
00:00:58.649 --> 00:01:01.184
And so, if you tell that this is
definitely gonna be a pet, that means

16
00:01:01.184 --> 00:01:04.181
you're gonna have to start dividing into
props that it's not gonna use anyway.

17
00:01:04.181 --> 00:01:07.385
So I don't care for that, so
I'm not going to do that.

18
00:01:07.385 --> 00:01:12.202
But I respect your ability
to be wrong about things,

19
00:01:12.202 --> 00:01:15.165
so you know do what you wanna do.

20
00:01:17.676 --> 00:01:22.330
That's a joke, yeah, there's valid
reasons to do it that way as well

21
00:01:24.240 --> 00:01:28.765
ID number And

22
00:01:28.765 --> 00:01:33.687
then here we're just gonna
say that props are IProps.

23
00:01:37.603 --> 00:01:39.920
And you can see that's enough for
it to be like okay, I got it.

24
00:01:39.920 --> 00:01:42.245
I got everything I need to do now.

25
00:01:43.820 --> 00:01:47.688
So in previous versions of this course,

26
00:01:47.688 --> 00:01:53.051
I had taught making Pet
a function component like this.

27
00:01:53.051 --> 00:01:59.171
Like that, and
you give it IProps like that.

28
00:01:59.171 --> 00:02:02.727
You can totally do it this way.

29
00:02:02.727 --> 00:02:08.187
I'm just following the lead basically
of the Create React app TypeScript

30
00:02:08.187 --> 00:02:12.869
starter project which is maintained
by the creators of React.

31
00:02:12.869 --> 00:02:17.981
Let's just go take a look
there's a link down here

32
00:02:17.981 --> 00:02:22.740
why I linked to the actual,
Where is it error?

33
00:02:22.740 --> 00:02:24.333
We just did Pet, right?

34
00:02:24.333 --> 00:02:25.781
Pet under type script.

35
00:02:29.410 --> 00:02:30.289
We missed error boundary.

36
00:02:30.289 --> 00:02:32.622
We'll go back and
do that in just a second.

37
00:02:32.622 --> 00:02:38.308
You can do here a click here, and you can
see this issue here where they describe

38
00:02:38.308 --> 00:02:44.103
why they recommend not doing FC, which
stands for functional component here.

39
00:02:44.103 --> 00:02:47.232
It's a bit more stricter about some things
as it's less strict about other things.

40
00:02:47.232 --> 00:02:50.630
It's kind of up to you how
you wanna handle this, but

41
00:02:50.630 --> 00:02:55.745
I don't really have a whole I don't really
care to be totally honest with you.

42
00:02:55.745 --> 00:02:58.963
Either one of those is really valid up.

43
00:02:58.963 --> 00:03:04.302
So, I mean, at the end of the day,
if you do it this way,

44
00:03:04.302 --> 00:03:07.951
which is less typing, which is nice.

45
00:03:07.951 --> 00:03:12.452
If you mouse over this, you can see that
it's a props that returns a JSX element.

46
00:03:12.452 --> 00:03:13.684
That's exactly what we want.

47
00:03:13.684 --> 00:03:15.912
It's fine being simple this way.

48
00:03:15.912 --> 00:03:19.436
I'll leave it to your discretion
of how you wanna handle that.

49
00:03:21.048 --> 00:03:22.867
Okay, any questions about pet?

50
00:03:22.867 --> 00:03:24.329
That was a pretty straightforward one.

51
00:03:24.329 --> 00:03:26.677
We just had identify the props,
and it was good after that.

52
00:03:31.334 --> 00:03:36.210
Let's go do ErrorBoundary.

53
00:03:36.210 --> 00:03:42.538
ErrorBoundary, which is here, we're gonna
rename that to be ErrorBoundary.TSX.

54
00:03:45.185 --> 00:03:50.279
Okay, we're gonna import ErrorInfo

55
00:03:50.279 --> 00:03:54.263
up here, and ReactElement.

56
00:03:58.193 --> 00:04:02.525
Class, AirborneBoundary,
extends, component.

57
00:04:02.525 --> 00:04:05.609
You can do IProps again here, or you can
actually just put it directly in here.

58
00:04:05.609 --> 00:04:08.183
So I just wanted to show you
both ways of doing this.

59
00:04:08.183 --> 00:04:11.831
children: ReactElement.

60
00:04:17.997 --> 00:04:21.497
Okay, and then error here.

61
00:04:21.497 --> 00:04:28.285
Error is an error And info

62
00:04:28.285 --> 00:04:37.402
is ErrorInfo EverInfo,

63
00:04:37.402 --> 00:04:41.963
like that, Okay,

64
00:04:41.963 --> 00:04:46.271
that's it, that's all you need to do.

65
00:04:51.037 --> 00:04:53.806
That one's pretty straightforward, right?

66
00:04:53.806 --> 00:04:58.162
Just identify what kinda props it's taking
in, and then with these methods here,

67
00:04:58.162 --> 00:05:02.410
you kinda have to identify what parameters
you're gonna expect to see in there,

68
00:05:05.901 --> 00:05:10.626
Okay?

69
00:05:10.626 --> 00:05:16.674
So, we just did carousel, we did Pet,
let's go do all the fetches.

70
00:05:16.674 --> 00:05:19.993
So let's start with fetchPet.js.

71
00:05:19.993 --> 00:05:22.253
You can make that fetchPet.ts.

72
00:05:27.945 --> 00:05:35.522
So first thing up here, we're going to
import a query function from Tan Stack.

73
00:05:35.522 --> 00:05:41.763
This is gonna be a type that comes from
Tan Stack Query, and we're just gonna

74
00:05:41.763 --> 00:05:47.919
identify specifically that we think
fetchPet is a query function, okay?

75
00:05:47.919 --> 00:05:51.893
And that it gives you
back a PetAPI response,

76
00:05:51.893 --> 00:05:56.712
which we're gonna get here
from API responses types,

77
00:05:58.741 --> 00:06:07.341
And that we expect the query key
to be details and then a string.

78
00:06:11.488 --> 00:06:13.187
So, the first thing here is
what we expect to get back.

79
00:06:13.187 --> 00:06:16.844
The second thing here is what
we expect the key to be.

80
00:06:16.844 --> 00:06:19.186
What I find really cool about
this is now if we try and

81
00:06:19.186 --> 00:06:22.457
go call fetchPet somewhere else
without the correct kind of query key,

82
00:06:22.457 --> 00:06:25.966
it's gonna say like, hey, you told me
that this is what you expected here.

83
00:06:25.966 --> 00:06:30.346
This is not what I'm seeing,
please do it that way.

84
00:06:32.480 --> 00:06:35.579
And we also have to validate here
that this ID is gonna be a string.

85
00:06:35.579 --> 00:06:38.794
We've said here, this is definitely
gonna be a string and so we try and

86
00:06:38.794 --> 00:06:40.276
call it later without a string.

87
00:06:40.276 --> 00:06:46.482
It's gonna be like, no, I'm not gonna let
you do that, you have to do it this way.

88
00:06:48.101 --> 00:06:51.040
That was pretty straightforward, hopefully

89
00:06:53.651 --> 00:06:57.701
Let's go and do fetchSearch.

90
00:06:57.701 --> 00:07:02.601
We're gonna change that to .ts And

91
00:07:02.601 --> 00:07:07.466
we're gonna see, it's gonna look pretty,
similar I think.

92
00:07:07.466 --> 00:07:12.706
Import QueryFunction from

93
00:07:12.706 --> 00:07:18.634
@tanstack/react-query.

94
00:07:18.634 --> 00:07:23.750
This is going to be a query function.

95
00:07:23.750 --> 00:07:28.888
It's gonna get back a PetAPI response,

96
00:07:28.888 --> 00:07:35.356
and it takes in a First
thing is gonna be search.

97
00:07:35.356 --> 00:07:38.341
And after that it takes in an object.

98
00:07:47.376 --> 00:07:52.470
And that object is gonna
have in it location,

99
00:07:52.470 --> 00:07:56.626
which is gonna be a string:Animal,

100
00:07:56.626 --> 00:08:01.062
which is gonna be an animal technically

101
00:08:04.095 --> 00:08:11.239
And a breed which is gonna be
a string What did I miss up here?

102
00:08:11.239 --> 00:08:15.920
QueryFunction, Pet Response, search.

103
00:08:15.920 --> 00:08:20.282
Let me get this on multiple lines cuz
I'm having a hard time parsing this.

104
00:08:20.282 --> 00:08:25.637
Async function, you do have to kind of,
yeah, okay, sorry.

105
00:08:25.637 --> 00:08:30.449
So I'm going to refactor
this a const fetch

106
00:08:34.799 --> 00:08:37.838
Equals that.

107
00:08:37.838 --> 00:08:41.012
I'm making this into an arrow function
cuz the types look a lot better.

108
00:08:41.012 --> 00:08:44.221
You can still type it the other way, but

109
00:08:44.221 --> 00:08:48.801
this is just a little bit easier for
me to read like this.

110
00:08:48.801 --> 00:08:52.867
And we're is still exporting
a fetchSearch here at the bottom, but

111
00:08:52.867 --> 00:08:55.090
I had this as like an async function.

112
00:08:55.090 --> 00:08:59.875
This just typed a little bit
easier to do it the other way.

113
00:09:02.046 --> 00:09:05.411
Okay, we're still having
an await issue here.

114
00:09:05.411 --> 00:09:06.888
Do I not have this as an async function?

115
00:09:06.888 --> 00:09:10.115
You do have to have this as
an async function, there we go

