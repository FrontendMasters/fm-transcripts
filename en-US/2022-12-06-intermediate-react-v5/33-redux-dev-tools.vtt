WEBVTT

1
00:00:00.203 --> 00:00:02.710
One last thing that I wanted to show you.

2
00:00:04.973 --> 00:00:07.719
Let's go back to the notes here, and

3
00:00:07.719 --> 00:00:12.072
we're gonna go down to Redux here,
at the Redux dev tool.

4
00:00:12.072 --> 00:00:17.777
So I left you a link here,
go install the Redux dev tools.

5
00:00:17.777 --> 00:00:20.110
I left a link here for
Firefox and for Chrome.

6
00:00:20.110 --> 00:00:24.128
I think I have to go install it for
Chrome, so let me go do that really quick.

7
00:00:24.128 --> 00:00:25.998
So I'm gonna click Add to Chrome here.

8
00:00:30.707 --> 00:00:34.808
Okay, that's been added here, and

9
00:00:34.808 --> 00:00:41.306
now if I refresh my page,
I should have in here Redux pane.

10
00:00:41.306 --> 00:00:42.793
So I'm gonna click on that.

11
00:00:42.793 --> 00:00:47.858
This is probably one of the other
most compelling parts about Redux,

12
00:00:47.858 --> 00:00:53.726
is I can actually see everything happening
inside of my Redux via this, right?

13
00:00:53.726 --> 00:00:57.497
So right now, I'm looking at all
the actions that are coming in.

14
00:00:57.497 --> 00:01:02.811
You can see all of these various different
actions that are coming in from petAPI,

15
00:01:02.811 --> 00:01:05.133
these are generated by Redux tool.

16
00:01:05.133 --> 00:01:07.696
So let's say I change this to be dog,

17
00:01:07.696 --> 00:01:11.910
that's gonna dispatch an action,
actually it won't.

18
00:01:11.910 --> 00:01:12.842
Really, it does.

19
00:01:12.842 --> 00:01:14.614
Okay, here we go.

20
00:01:14.614 --> 00:01:17.188
Yeah, cuz it's changing the breed.

21
00:01:17.188 --> 00:01:20.038
So it executes that,
and you see fulfilled,

22
00:01:20.038 --> 00:01:24.245
and I can see all the various
different actions coming in, right?

23
00:01:24.245 --> 00:01:27.813
And if I click Submit,
you can see it calls searchParam'all,

24
00:01:27.813 --> 00:01:32.612
then it does unsubscribing and pending and
fulfilled and a bunch of stuff like that.

25
00:01:32.612 --> 00:01:36.239
But you can see step by
step of what's going on.

26
00:01:36.239 --> 00:01:39.912
What's cool about this, though,
is I can start stepping back in time

27
00:01:43.654 --> 00:01:47.428
Because what it's doing is it's
basically just reapplying or

28
00:01:47.428 --> 00:01:50.640
un-applying all these
various different actions.

29
00:01:53.942 --> 00:01:57.153
So if I go back here,
I can actually click Play, and

30
00:01:57.153 --> 00:02:01.137
it'll just go at a rate and
I can watch things playing out in my,

31
00:02:04.830 --> 00:02:09.182
Time traveling debugging
is what that's called.

32
00:02:09.182 --> 00:02:13.061
I can always go in and I can reset things,

33
00:02:13.061 --> 00:02:20.495
I can see what the actions looked like,
so you can see what was in the payload.

34
00:02:20.495 --> 00:02:24.593
This gives me a bunch of meta
information of, when did it happen,

35
00:02:24.593 --> 00:02:29.075
what was the query, what were
the arguments, what was the requestId?

36
00:02:29.075 --> 00:02:29.722
Did it work?

37
00:02:29.722 --> 00:02:32.868
Did it not work?

38
00:02:32.868 --> 00:02:37.591
One of my favorite things here, so let's
go look at one of them that we created,

39
00:02:37.591 --> 00:02:40.848
like the searchParams/all one that I did,
this one.

40
00:02:40.848 --> 00:02:44.303
First of all, you can do things like
jump to this one, you can also say,

41
00:02:44.303 --> 00:02:47.021
hey, what would happen if
this action didn't happen?

42
00:02:47.021 --> 00:02:50.789
You can click Skip, and it'll reapply
everything and skip that action,

43
00:02:50.789 --> 00:02:52.689
it's kind of interesting, right?

44
00:02:55.795 --> 00:03:02.691
And then another thing here, I can click
Test, it'll actually generate a test for

45
00:03:02.691 --> 00:03:08.323
me that I can just copy and
paste into my code, which is pretty cool.

46
00:03:08.323 --> 00:03:11.559
I like when my tools write tests for
me, right?

47
00:03:11.559 --> 00:03:15.419
Now, I'm gonna argue,
this is a ridiculous test,

48
00:03:15.419 --> 00:03:19.474
look at how much stuff it's
trying to put into my test.

49
00:03:19.474 --> 00:03:23.212
But it's a good starter, right?

50
00:03:23.212 --> 00:03:26.553
This is a Jest template, but
there's one for Mocha and Tape and Ava.

51
00:03:28.116 --> 00:03:31.039
We're about to do V test for
our testing framework,

52
00:03:31.039 --> 00:03:33.571
just use the Jest one
if you're doing V test.

53
00:03:37.410 --> 00:03:40.010
There's a state,
there's a difference, so you can see,

54
00:03:40.010 --> 00:03:41.577
what was the delta between the two?

55
00:03:41.577 --> 00:03:45.689
So I went from animal to
being nothing to being dog.

56
00:03:45.689 --> 00:03:51.525
And you can see the actual Stack trace
to see what led you to call into that.

57
00:03:51.525 --> 00:03:56.215
I've not found a use for
that, but that's pretty cool.

58
00:03:56.215 --> 00:03:56.941
And that's it.

59
00:03:58.839 --> 00:04:03.095
So one thing that I have seen people do,
which I found very interesting and

60
00:04:03.095 --> 00:04:06.871
a compelling use case of,
what the Redux toolkits can do for you or

61
00:04:06.871 --> 00:04:08.261
just in general Redux.

62
00:04:08.261 --> 00:04:12.119
Let's say your user's application crashes,
right?

63
00:04:12.119 --> 00:04:17.209
What I've seen people do is dump
their entire history of Redux, and

64
00:04:17.209 --> 00:04:22.586
then they'll send it off to Track js or
century or something like that.

65
00:04:22.586 --> 00:04:26.844
You can then take that dump and
you can put it into your dev tools, and

66
00:04:26.844 --> 00:04:31.564
you can literally go piece by piece of
what your user did to cause the crash.

67
00:04:31.564 --> 00:04:37.623
So you can literally time travel through
your user crashing their application.

68
00:04:37.623 --> 00:04:39.010
Pretty cool, right?

69
00:04:39.010 --> 00:04:44.261
Pretty compelling debugging tools, so.

70
00:04:44.261 --> 00:04:50.687
Okay, so that's Redux,
that's Redux dev tools.

71
00:04:50.687 --> 00:04:56.044
If you want deeper dives on this, there's
a Redux Fundamentals course from Mr.

72
00:04:56.044 --> 00:04:58.979
Kinney himself, I strongly suggest that.

73
00:04:58.979 --> 00:05:06.289
&gt;&gt; He's also about to release
an advanced Redux, using Redux toolkit.

74
00:05:06.289 --> 00:05:12.392
&gt;&gt; Even better, so if you want even more
advanced stuff on Redux toolkit itself,

75
00:05:12.392 --> 00:05:14.249
check that out as well.

76
00:05:14.249 --> 00:05:17.933
If you wanna see this exact
same scenario that I did,

77
00:05:17.933 --> 00:05:20.796
look at this handsome bastard up there.

78
00:05:20.796 --> 00:05:22.927
I did teach a raw Redux before, so

79
00:05:22.927 --> 00:05:28.118
this is gonna go through the exact same
pet adoption application with raw Redux.

80
00:05:28.118 --> 00:05:32.084
You can do that if you are a glutton for
pain.

81
00:05:32.084 --> 00:05:35.604
This is so much better than writing raw
Redux, but if you want to, it's here.

82
00:05:37.940 --> 00:05:42.328
Okay, questions about Redux?

83
00:05:42.328 --> 00:05:46.026
I'm hoping the feeling that
you have right now is mixed.

84
00:05:46.026 --> 00:05:49.465
Some of that was really cool,
that was a lot of work.

85
00:05:49.465 --> 00:05:51.153
I have mixed feelings about it.

86
00:05:51.153 --> 00:05:53.725
If I imparted that to you,
I feel like I did my job.

87
00:05:53.725 --> 00:05:57.893
If you either like it too much or
not at all, I feel like I didn't do it.

88
00:05:57.893 --> 00:05:58.974
It's a trade off, right?

89
00:05:58.974 --> 00:06:01.046
There's definitely
trade-offs to using Redux,

90
00:06:01.046 --> 00:06:06.042
that's really what I want you to see Okay,

91
00:06:06.042 --> 00:06:11.157
any questions about
Redux before we move on?

92
00:06:11.157 --> 00:06:12.754
&gt;&gt; There's one quick
question before we go.

93
00:06:12.754 --> 00:06:14.462
&gt;&gt; Yeah, sure, go ahead.

94
00:06:14.462 --> 00:06:19.687
&gt;&gt; Could you explain about the action
type and when we would use it?

95
00:06:19.687 --> 00:06:22.700
&gt;&gt; Sure, So

96
00:06:22.700 --> 00:06:27.668
let's take a look at our Redux
application one more time.

97
00:06:27.668 --> 00:06:34.294
We're gonna open the dev tools,
we're gonna go back into Redux.

98
00:06:34.294 --> 00:06:39.262
So what you see here,
they're called the Redux action type.

99
00:06:39.262 --> 00:06:41.614
Let's look specifically
at the searchParams/all,

100
00:06:41.614 --> 00:06:44.129
because that was one that you and
I made together, right?

101
00:06:44.129 --> 00:06:46.058
So if I look at the action here,

102
00:06:46.058 --> 00:06:50.076
you can see that there is a type
here called searchParams/all.

103
00:06:50.076 --> 00:06:53.789
So just to describe to you
where that comes from,

104
00:06:53.789 --> 00:06:56.518
it comes from searchParamsSlice.

105
00:06:56.518 --> 00:06:58.301
It comes from this name, right?

106
00:06:58.301 --> 00:07:01.076
So if I call this searchParamsLol,

107
00:07:01.076 --> 00:07:06.629
that would be the name/the name of
the reducer, which is all, right?

108
00:07:06.629 --> 00:07:13.331
So that is why this one is
searchParams/all, searchParams/all.

109
00:07:13.331 --> 00:07:18.912
So it's generated from the the name
of the reducer that you have,

110
00:07:18.912 --> 00:07:23.286
as well as the name that
you gave the slice overall.

111
00:07:23.286 --> 00:07:28.876
We used to have to name these
action types ourselves, but

112
00:07:28.876 --> 00:07:34.241
with Redux toolkit,
it generates those names for us.

113
00:07:34.241 --> 00:07:35.245
What's the point of the type?

114
00:07:35.245 --> 00:07:38.782
The type is just so that Redux
knows where to send your reducer,

115
00:07:38.782 --> 00:07:43.272
like which reducer to send your thing to,
that's the entire point of the type.

