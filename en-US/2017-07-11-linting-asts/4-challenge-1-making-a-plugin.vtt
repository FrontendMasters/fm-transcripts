WEBVTT

1
00:00:00.000 --> 00:00:03.190
&gt;&gt; Kent C Dodds: And hopefully by now,
your setup is all fresh,

2
00:00:03.190 --> 00:00:04.890
and clean, and recent.

3
00:00:04.890 --> 00:00:12.120
I've got a fresh, and clean, and
recent setup on my computer.

4
00:00:12.120 --> 00:00:13.890
Sorry, I didn't check the font sizes,
that all right?

5
00:00:13.890 --> 00:00:15.808
Hopefully, everybody can see that?

6
00:00:15.808 --> 00:00:17.433
&gt;&gt; Audience: Yeah.

7
00:00:17.433 --> 00:00:19.126
&gt;&gt; Kent C Dodds: Okay, cool, so yeah,

8
00:00:19.126 --> 00:00:22.810
let's just explore
the project really quick.

9
00:00:22.810 --> 00:00:28.930
I drastically simplified it last night so
that it would be better for you all.

10
00:00:28.930 --> 00:00:30.990
And that's part of the reason
you had to update this morning.

11
00:00:30.990 --> 00:00:32.930
So, sorry about that,
but not really sorry.

12
00:00:34.880 --> 00:00:38.220
So, we've got some exercises.

13
00:00:38.220 --> 00:00:42.890
And part of your setup script
initialized some of these exercises,

14
00:00:42.890 --> 00:00:47.760
but I'm going to show you how
to jump to each exercise,

15
00:00:47.760 --> 00:00:50.560
because you're gonna be doing
this the whole workshop.

16
00:00:50.560 --> 00:00:52.458
And so there's a script you run.

17
00:00:52.458 --> 00:01:00.618
It's npm start exercise.eslint.0.

18
00:01:00.618 --> 00:01:04.445
So, the pattern is npm start exercise dot,
the technology we're using or

19
00:01:04.445 --> 00:01:06.950
the thing we're doing
dot the exercise number.

20
00:01:07.980 --> 00:01:11.050
And you hit that, and
what that's going to do is copy

21
00:01:11.050 --> 00:01:14.950
the exercise code into
this exercises directory.

22
00:01:16.380 --> 00:01:21.089
And so you'll be starting
fresh with your exercise.

23
00:01:24.076 --> 00:01:27.760
&gt;&gt; Kent C Dodds: Couple of things,
important pieces to this.

24
00:01:27.760 --> 00:01:29.220
So, for

25
00:01:29.220 --> 00:01:34.590
all the exercises, you'll have both
the plugin source code and the test code.

26
00:01:34.590 --> 00:01:38.010
And your job is to make the test pass.

27
00:01:39.840 --> 00:01:44.637
And so to run the test, you run npm start,

28
00:01:44.637 --> 00:01:48.366
and that will start up the test.

29
00:01:48.366 --> 00:01:54.760
We're using JS testing frame work
because it's the best, and it, you'll

30
00:01:54.760 --> 00:01:57.970
start out with like a bunch of failing
tests that your suppose to make pass.

31
00:01:59.450 --> 00:02:01.970
Rats, I made a mistake.

32
00:02:01.970 --> 00:02:05.730
So at the bottom of every exercise your
gonna have this elaboration and feedback.

33
00:02:05.730 --> 00:02:09.540
And the bottom of like
the plug-in source code and yeah,

34
00:02:09.540 --> 00:02:11.140
that's that's not supposed to be there.

35
00:02:11.140 --> 00:02:13.830
So, go ahead and delete that.

36
00:02:13.830 --> 00:02:17.400
And while you're doing the exercise,
I'll update it so it doesn't do that, and

37
00:02:17.400 --> 00:02:18.570
I'll, and you can pull.

38
00:02:19.590 --> 00:02:22.870
So that's just in the source file and
the test file it's supposed to be there.

39
00:02:25.340 --> 00:02:25.910
Rats.

40
00:02:27.160 --> 00:02:33.700
So, yeah, you start out with a barebones
plug in, it has all of this stuff that

41
00:02:33.700 --> 00:02:39.070
I left in there for you because that
isn't useful to your learning really.

42
00:02:39.070 --> 00:02:41.950
This is just read the docs kind of stuff.

43
00:02:41.950 --> 00:02:44.110
And then I left your visitor empty.

44
00:02:44.110 --> 00:02:46.086
And that's the visitor, excuse me,

45
00:02:46.086 --> 00:02:49.000
that's the visitor that
you're gonna be filling out.

46
00:02:49.000 --> 00:02:50.140
The console test here,

47
00:02:51.250 --> 00:02:56.780
the no console test are using
ESLint Rule Tester which is super cool.

48
00:02:56.780 --> 00:03:01.000
And yeah, it runs those.

49
00:03:01.000 --> 00:03:03.870
At the bottom of each
one of these workshop

50
00:03:03.870 --> 00:03:07.560
exercises is elaboration and feedback.

51
00:03:07.560 --> 00:03:12.591
And this is actually a really important
part of the work shop for your learning.

52
00:03:12.591 --> 00:03:15.679
Feedback is great for me,
I really appreciate feedback but

53
00:03:15.679 --> 00:03:17.171
the elaboration is for you.

54
00:03:17.171 --> 00:03:20.467
And it's important for
you to elaborate on what you've learned.

55
00:03:20.467 --> 00:03:26.253
So, when you run the script that included
the auto-fill email script, what

56
00:03:26.253 --> 00:03:32.150
it did is it should have automatically
filled your email address right here.

57
00:03:32.150 --> 00:03:34.870
And if it didn't, that's fine,
that's not a big deal.

58
00:03:34.870 --> 00:03:38.750
But what this does is,
if you copy this link into your browser,

59
00:03:40.120 --> 00:03:43.770
then it's going to take you to a form
with a couple of things pre-filled.

60
00:03:43.770 --> 00:03:46.280
And then this is the piece
that matters to you.

61
00:03:47.420 --> 00:03:50.590
You need to write in your words a few
of the core concepts that you've

62
00:03:50.590 --> 00:03:51.500
learned from the exercise.

63
00:03:52.520 --> 00:03:58.190
And that is going to solidify and
help you retained what we've learned.

64
00:03:58.190 --> 00:04:03.920
And then I'll ask you about some of those
things when we finish the exercises.

65
00:04:03.920 --> 00:04:07.106
Once you're finished with that,
then remove the .skip and

66
00:04:07.106 --> 00:04:10.171
change false to true so
that all of your tests are passing.

67
00:04:13.913 --> 00:04:18.775
&gt;&gt; Kent C Dodds: So, let me, and
you shouldn't be needing to change any

68
00:04:18.775 --> 00:04:21.970
of the test file contents at all.

69
00:04:21.970 --> 00:04:23.430
You can reference it for

70
00:04:23.430 --> 00:04:27.789
sure, but most of your changes should
happen in the actual plug-in source.

71
00:04:28.910 --> 00:04:33.140
So, let me explain what this
plugin is supposed to do.

72
00:04:33.140 --> 00:04:40.200
This plugin is called the no-console
plugin, and this thing actually exists.

73
00:04:40.200 --> 00:04:43.548
Actually, when I was preparing
these demos and exercises,

74
00:04:43.548 --> 00:04:47.890
[COUGH] all right, I was really struggling
because I thought when I want something

75
00:04:47.890 --> 00:04:52.070
that's really practical, but once I write
it then nobody needs to write it anymore.

76
00:04:52.070 --> 00:04:54.496
So it's not practical
once it's been written.

77
00:04:54.496 --> 00:05:00.040
Some of these examples,
they already exist,

78
00:05:00.040 --> 00:05:05.010
so this is more just for
your experience and learning.

79
00:05:06.250 --> 00:05:09.270
So, what this no-console
plug in should do is,

80
00:05:09.270 --> 00:05:14.130
it should validate that,
calling info is just fine, but

81
00:05:14.130 --> 00:05:19.160
anytime you call console or
use console then that is not okay.

82
00:05:21.130 --> 00:05:25.520
And we're gonna approach this at a TDD or

83
00:05:25.520 --> 00:05:29.010
test driven development stand point,
so we have some tests.

84
00:05:29.010 --> 00:05:31.970
And just do the minimal amount of stuff
that you need to do to make these

85
00:05:31.970 --> 00:05:33.080
tests pass.

86
00:05:33.080 --> 00:05:35.820
Because we are gonna handle
more edge cases and stuff.

87
00:05:35.820 --> 00:05:39.070
You can do all of those
things if you want to, but

88
00:05:39.070 --> 00:05:43.520
through the exercises we're gonna be
adding more edge cases to our tests.

89
00:05:43.520 --> 00:05:46.193
Do the minimal amount of stuff you
need to do to make these tests pass.

90
00:05:47.949 --> 00:05:51.516
&gt;&gt; Kent C Dodds: And what I would
recommend is taking these invalid and

91
00:05:51.516 --> 00:05:55.239
valid test cases, and
pulling them up in ASTexplorer,

92
00:05:55.239 --> 00:05:58.190
and sticking them inside of here.

93
00:05:58.190 --> 00:06:01.910
And then copy and
paste your plugin source.

94
00:06:01.910 --> 00:06:02.730
Here I'll do that right now.

95
00:06:03.840 --> 00:06:06.490
We'll put the plugin source right here.

96
00:06:06.490 --> 00:06:10.646
And we'll take some of these cases and
put it right here.

97
00:06:10.646 --> 00:06:16.967
So console.info and console.warn,
console dot anything,

98
00:06:16.967 --> 00:06:22.821
and then we'll put valid up here,
log is fine, invalid.

99
00:06:25.433 --> 00:06:26.973
&gt;&gt; Kent C Dodds: Okay.

100
00:06:26.973 --> 00:06:32.780
And then from there you can just go
ahead and write out your plugin.

101
00:06:32.780 --> 00:06:35.190
By the way,
if you're really are totally stuck and

102
00:06:35.190 --> 00:06:40.480
you just want to reference something,
all the solutions are in other/final.

103
00:06:40.480 --> 00:06:45.850
And we're in no-console,
what you're seeing as no-console.0.

104
00:06:45.850 --> 00:06:47.760
The solution is no-console.1.

105
00:06:47.760 --> 00:06:50.760
So if you're really totally stuck,
you can go reference that.

