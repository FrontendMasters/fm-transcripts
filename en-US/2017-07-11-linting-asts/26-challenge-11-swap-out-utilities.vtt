WEBVTT

1
00:00:00.150 --> 00:00:06.830
&gt;&gt; Kent C. Dodds: We'll do
the exercise Code Mod 3, I think.

2
00:00:10.317 --> 00:00:10.817
&gt;&gt; Kent C. Dodds: Yeah.

3
00:00:12.110 --> 00:00:13.047
And we'll NPM Start.

4
00:00:18.312 --> 00:00:20.579
&gt;&gt; Kent C. Dodds: Yeah, okay.

5
00:00:25.609 --> 00:00:28.446
&gt;&gt; Kent C. Dodds: I hope this works, cuz
this is a pretty big change, [LAUGH] and

6
00:00:28.446 --> 00:00:30.630
I haven't had a chance
to review it very well.

7
00:00:32.070 --> 00:00:36.820
So let's just take a look at
the way that things are now.

8
00:00:36.820 --> 00:00:39.280
So we added a couple of features.

9
00:00:39.280 --> 00:00:47.360
So now add class will be code moded
into the just regular rom dom api's.

10
00:00:47.360 --> 00:00:55.090
Show is the same and
now we have this myEl.addClass thing

11
00:00:55.090 --> 00:00:59.350
where we want to be able to apply our
changes to something that's been assigned.

12
00:01:00.490 --> 00:01:02.060
And honestly,

13
00:01:02.060 --> 00:01:06.840
I should say that probably this should
live in a different plugin altogether.

14
00:01:06.840 --> 00:01:10.110
These are not exactly quite the same,

15
00:01:10.110 --> 00:01:12.820
maybe you have some utilities
that they share between them.

16
00:01:12.820 --> 00:01:17.740
But it was a little bit easier just
to keep everything in one file for

17
00:01:17.740 --> 00:01:21.178
the workshop, so it's kind of trade
offs and both work just fine.

18
00:01:21.178 --> 00:01:24.370
Depends on how modulated you want to be.

19
00:01:24.370 --> 00:01:28.630
So we still have lots of the same
stuff but one thing I changed for

20
00:01:28.630 --> 00:01:34.300
our exercises was it's
not just hide anymore,

21
00:01:34.300 --> 00:01:41.320
it's hide show and add class
are allowed to pass through our stuff.

22
00:01:41.320 --> 00:01:44.470
Because we can allow for multiple of
those, we're going to get the jQuery

23
00:01:44.470 --> 00:01:47.790
function that's being called so
hide or show or addClass.

24
00:01:47.790 --> 00:01:55.834
If it's addClass, then we're gonna
update that text to be an addClass call.

25
00:01:55.834 --> 00:01:59.785
Otherwise it'll be the update display
which is similar to what we had before.

26
00:01:59.785 --> 00:02:03.298
We're now not only are we
doing the element but

27
00:02:03.298 --> 00:02:09.350
we're also doing the display string
literal between an empty string and nine.

28
00:02:11.190 --> 00:02:16.139
And then for update at class,
we take the ELEMENT.classlist.add and

29
00:02:16.139 --> 00:02:19.779
then the CLASS_NAME and
we just use the arguments.

30
00:02:19.779 --> 00:02:25.109
Okay, so,
&gt;&gt; Kent C. Dodds: By adding

31
00:02:25.109 --> 00:02:30.114
in this little troublemaker here,
we're gonna run into the same

32
00:02:30.114 --> 00:02:34.937
problems that we had with ESLint when,
as we're traversing,

33
00:02:34.937 --> 00:02:41.130
we don't have all of the references
relationships bound up together quite yet.

34
00:02:41.130 --> 00:02:47.040
So we need to wait until the program has
been traversed and than we run our stuff.

