WEBVTT

1
00:00:00.000 --> 00:00:03.893
[MUSIC]

2
00:00:03.893 --> 00:00:06.301
&gt;&gt; Douglas Crockford: This is
the simplest XSS attack, and

3
00:00:06.301 --> 00:00:10.520
just to show you what
the beast actually looks like.

4
00:00:10.520 --> 00:00:12.340
So, in this attack,

5
00:00:12.340 --> 00:00:16.740
the attacker tricks your user into
clicking on a URL that looks like that.

6
00:00:18.170 --> 00:00:23.030
It's a really weird looking URL with
angle brackets and crazy stuff in it, and

7
00:00:23.030 --> 00:00:28.950
you might think, no user would ever click
on that, and unfortunately, no, they will.

8
00:00:28.950 --> 00:00:33.100
And, if they're smart enough not to
click on a URL that looks like that,

9
00:00:33.100 --> 00:00:35.130
they'll probably click on a bit.ly URL.

10
00:00:35.130 --> 00:00:40.640
It'll probably accept a QR code,
so yeah, they're gonna go there.

11
00:00:40.640 --> 00:00:45.240
And so, it used to be that Web servers,
by default, would simply take

12
00:00:45.240 --> 00:00:50.150
the file name and stick it in the body
of a 404 Page and send it back.

13
00:00:51.250 --> 00:00:56.149
In this case, now in the HTML context,
that becomes a script tag,

14
00:00:56.149 --> 00:01:02.027
which will then execute a load script
from the world's most dangerous server.

15
00:01:02.027 --> 00:01:04.804
They get access to everything
that you've got on the browser.

16
00:01:04.804 --> 00:01:08.885
They've got your cookies,
they've got your local storage,

17
00:01:08.885 --> 00:01:12.352
they've got the Chrome saying
this is a valid thing.

18
00:01:12.352 --> 00:01:17.037
So, when they ask for your password,
everything's good, and

19
00:01:17.037 --> 00:01:21.983
there are thousands, maybe millions,
of variations on this, and

20
00:01:21.983 --> 00:01:26.790
a security expert can get some
theme by discovering another one.

21
00:01:27.790 --> 00:01:33.030
They can always do that because there is
an endless supply of these things, but

22
00:01:33.030 --> 00:01:36.560
the solution to all of
these is exactly the same.

23
00:01:36.560 --> 00:01:40.950
Everything has to be filtered correctly,
everything has to be encoded correctly.

24
00:01:40.950 --> 00:01:45.780
So, if you encode this and turn those
into entities before putting it on,

25
00:01:45.780 --> 00:01:50.490
then it becomes inert, and it becomes
really important to do that everywhere.

26
00:01:50.490 --> 00:01:53.339
If you do that correctly everywhere,

27
00:01:53.339 --> 00:01:57.440
then these sorts of injection
attacks cannot happen.

28
00:01:57.440 --> 00:02:02.280
&gt;&gt; Speaker 2: All right, okay, I think
I'm missing the first part of this, so

29
00:02:02.280 --> 00:02:08.001
you go to yoursite.com, all this nonsense,
this script that's in there.

30
00:02:08.001 --> 00:02:08.698
&gt;&gt; Douglas Crockford: Yeah.

31
00:02:08.698 --> 00:02:16.033
&gt;&gt; Speaker 2: And the server responds with
404, but it sticks that content in it?

32
00:02:16.033 --> 00:02:18.051
&gt;&gt; Douglas Crockford: Yeah,
it takes the filename, puts it in,

33
00:02:18.051 --> 00:02:20.350
says this is the file we couldn't find.

34
00:02:20.350 --> 00:02:26.790
&gt;&gt; Speaker 2: I see, so okay, and
now this script runs a form that says,

35
00:02:26.790 --> 00:02:32.970
please submit your password, and
they send it their password, whatever.

36
00:02:32.970 --> 00:02:33.550
&gt;&gt; Douglas Crockford: Yep.

37
00:02:33.550 --> 00:02:34.610
&gt;&gt; Speaker 2: Whatever it is.

38
00:02:34.610 --> 00:02:36.170
&gt;&gt; Douglas Crockford: Whatever it is.

39
00:02:36.170 --> 00:02:39.940
&gt;&gt; Speaker 2: In fact,
this script can now talk to both sides.

40
00:02:39.940 --> 00:02:40.440
&gt;&gt; Douglas Crockford: Yep.

41
00:02:41.600 --> 00:02:45.110
&gt;&gt; Speaker 3: And you're saying
the mitigation is done in the 404 Page you

42
00:02:45.110 --> 00:02:46.550
have on your server.

43
00:02:46.550 --> 00:02:50.700
&gt;&gt; Douglas Crockford: Right, so in fact,
every page your server can construct

44
00:02:50.700 --> 00:02:55.120
needs to do this coding correctly for
all cases for all inputs.

45
00:02:55.120 --> 00:02:56.930
&gt;&gt; Speaker 2: You should never
tell them what they submitted,

46
00:02:56.930 --> 00:02:58.860
it should just say that page isn't found.

47
00:02:58.860 --> 00:03:03.210
&gt;&gt; Douglas Crockford: Right, like another
example, this is one that doesn't

48
00:03:03.210 --> 00:03:07.960
require a second site on Yahoo.

49
00:03:07.960 --> 00:03:11.950
They used to have profile pages,
and on your profile page,

50
00:03:11.950 --> 00:03:13.060
there's a box for gender.

51
00:03:14.810 --> 00:03:18.840
Being very nice people, they allowed you
to type anything you wanted into that box,

52
00:03:18.840 --> 00:03:21.242
so it wasn't like you have to pick M or F.

53
00:03:21.242 --> 00:03:23.754
They said, whatever you want, that's okay.

54
00:03:23.754 --> 00:03:28.640
There were a lot of people who figured
out, it starts with an angle bracket,

55
00:03:28.640 --> 00:03:31.450
and it's, type a script tag in there.

56
00:03:31.450 --> 00:03:35.980
And so, it means every time anybody
looked at your profile page,

57
00:03:37.070 --> 00:03:37.969
they can steal your account.

58
00:03:39.990 --> 00:03:42.113
There was a similar thing
that happened in MySpace.

59
00:03:42.113 --> 00:03:45.358
There was a guy named Sammy
who figured out MySpace,

60
00:03:45.358 --> 00:03:49.130
at that time, was a little bit smarter and
had some filters.

61
00:03:49.130 --> 00:03:54.161
But, this guy named Sammy figured
out how to get around them, and

62
00:03:54.161 --> 00:04:00.017
so he injected a script that, whenever
anybody looked at his profile page,

63
00:04:00.017 --> 00:04:04.521
the script would run and
then add him to their Heroes list.

64
00:04:04.521 --> 00:04:10.303
Which is the best spot on the friends
list and put that script onto their

65
00:04:10.303 --> 00:04:15.497
page as well, and so the number of
people who had looked at one of

66
00:04:15.497 --> 00:04:20.701
these pages doubled every minute,
or, no, every hour or so.

67
00:04:20.701 --> 00:04:24.400
In 20 hours,
he had control of two million accounts and

68
00:04:24.400 --> 00:04:28.111
about that time MySpace went,
whoa, what's going on?

69
00:04:28.111 --> 00:04:32.366
And they shut it down, but
you can still search out on the Web for

70
00:04:32.366 --> 00:04:37.438
Sammy Is My Hero, and you'll probably
still find some of these out there.

71
00:04:39.722 --> 00:04:41.892
&gt;&gt; Douglas Crockford: So
that's a version of this attack,

72
00:04:41.892 --> 00:04:43.993
and Sammy turns out to be a nice guy.

73
00:04:43.993 --> 00:04:49.384
I don't know if he's a nice guy,
but he recognized, whoops,

74
00:04:49.384 --> 00:04:54.369
I didn't expect I'd take over
too many accounts in a day,

75
00:04:54.369 --> 00:04:58.982
so he'd turn himself in and
was charged with a crime.

76
00:04:58.982 --> 00:05:01.920
&gt;&gt; Speaker 2: Probably got a sweet job
working in the somewhere White House.

77
00:05:01.920 --> 00:05:04.050
&gt;&gt; Douglas Crockford: Yeah,
I'm sure Sammy, I assume he did okay.

78
00:05:05.550 --> 00:05:07.006
He could have been a bad guy, right?

79
00:05:07.006 --> 00:05:08.750
He could have just kept it to himself and

80
00:05:08.750 --> 00:05:10.720
figured out how to exploit
these two million people.

81
00:05:17.110 --> 00:05:19.970
You also need to worry
about concatenation, so

82
00:05:19.970 --> 00:05:23.100
the plus sign operator in
JavaScript is dangerous.

83
00:05:23.100 --> 00:05:26.850
Depending on how you're using it, because
you can be taking bits of string and

84
00:05:26.850 --> 00:05:31.250
putting them together, and in some cases,
if you're just putting together text,

85
00:05:31.250 --> 00:05:31.950
it's not a problem.

86
00:05:31.950 --> 00:05:34.740
But, if you're doing something
like assembling JSON or

87
00:05:34.740 --> 00:05:39.140
assembling HTML,
there is a potential for that to go bad.

88
00:05:39.140 --> 00:05:43.951
So, whenever possible,
you should be using good encoders and

89
00:05:43.951 --> 00:05:48.056
writers and
not just trying to plus things together.

90
00:05:48.056 --> 00:05:52.561
So, I'm very happy to report that
this is no longer apparently

91
00:05:52.561 --> 00:05:54.347
a source of insecurity.

92
00:05:54.347 --> 00:05:59.177
A manager, when being warned that we
need to protect against this would ask,

93
00:05:59.177 --> 00:06:01.264
why would anybody do that?

94
00:06:01.264 --> 00:06:01.981
&gt;&gt; Speaker 2: No.
&gt;&gt; Douglas Crockford: We now know

95
00:06:01.981 --> 00:06:02.650
why he'll do that.

96
00:06:02.650 --> 00:06:03.601
&gt;&gt; Speaker 2: We still hear that.

97
00:06:03.601 --> 00:06:04.355
&gt;&gt; Douglas Crockford: Do you really?

98
00:06:04.355 --> 00:06:06.475
[CROSSTALK] Well, that's a problem.

99
00:06:06.475 --> 00:06:07.174
&gt;&gt; Speaker 2: Yeah.

100
00:06:07.174 --> 00:06:08.999
&gt;&gt; Douglas Crockford: Yeah,
we now know why they will do that,

101
00:06:08.999 --> 00:06:11.810
they will do that because we can
prevent them from doing that.

102
00:06:13.290 --> 00:06:18.703
In the case of some companies,
those companies will unintentionally

103
00:06:18.703 --> 00:06:24.400
pay them to do that, in some cases,
maybe pay them really well to do that.

104
00:06:24.400 --> 00:06:26.417
These are things which are not security,

105
00:06:26.417 --> 00:06:28.899
which are sometimes thought
of as being security.

106
00:06:28.899 --> 00:06:34.805
For example, inconvenience, we can't
stop them, but we can slow them down.

107
00:06:34.805 --> 00:06:38.970
It will put speed bumps on the information
superhighway where will stop them.

108
00:06:38.970 --> 00:06:43.160
That doesn't work, those things tend
to inconvenience you more than them.

109
00:06:43.160 --> 00:06:45.630
It's just, again, if it's not effective,

110
00:06:45.630 --> 00:06:48.940
it's not effective and
don't waste time on it.

111
00:06:48.940 --> 00:06:50.280
Identity is not security.

112
00:06:51.440 --> 00:06:54.500
Finding out who someone is
doesn't answer the question of,

113
00:06:54.500 --> 00:06:56.080
what should they be allowed to do to you?

114
00:06:57.420 --> 00:07:01.560
Tainting is sometimes cited as
a model of security that doesn't work.

115
00:07:03.540 --> 00:07:08.470
It's a model where you try to
track the source of data and

116
00:07:08.470 --> 00:07:10.750
how it's transformed over time, and

117
00:07:10.750 --> 00:07:14.790
try to determine at what point it becomes
tainted or corrupted, but it doesn't work.

118
00:07:16.500 --> 00:07:19.416
And then, finally,
intrusion detection is not security.

119
00:07:19.416 --> 00:07:22.582
There are some system administrators
who are so tired of being hacked,

120
00:07:22.582 --> 00:07:24.652
and they've given up all
hope of stopping it.

121
00:07:24.652 --> 00:07:30.334
They just want to know when it's
happening, but that's that's not security.

122
00:07:30.334 --> 00:07:36.116
The biggest avoidable source of security,
and we'll end here, is mismanagement.

123
00:07:36.116 --> 00:07:37.255
It's when a manager says,

124
00:07:37.255 --> 00:07:40.532
we're going to get this past the security
guys because we've got a deadline.

125
00:07:40.532 --> 00:07:41.884
We've got to meet it,
we've got to get out there.

126
00:07:41.884 --> 00:07:42.967
I got a bonus on the line.

127
00:07:42.967 --> 00:07:47.598
We're going to go, don't let that happen,
you gotta kick it up cuz no

128
00:07:47.598 --> 00:07:52.388
company can afford to have this kind
of stuff going on in their sites, for

129
00:07:52.388 --> 00:07:54.607
any possible short-term gain.

