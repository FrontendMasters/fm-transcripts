WEBVTT

1
00:00:00.000 --> 00:00:03.701
[MUSIC]

2
00:00:03.701 --> 00:00:06.420
&gt;&gt; Douglas: So
this is a flow chart of our browser.

3
00:00:06.420 --> 00:00:09.430
This is how the original
web browser worked.

4
00:00:09.430 --> 00:00:10.444
You can think of it as a snake.

5
00:00:10.444 --> 00:00:14.680
You put your URL's on one side,
your get pixels out the other side.

6
00:00:14.680 --> 00:00:19.468
So you feed it with the URL that goes to
the fetch engine which will then go out on

7
00:00:19.468 --> 00:00:24.050
the Internet and find the thing and
bring it back, and put it in the cache.

8
00:00:24.050 --> 00:00:27.754
Then it gets given to the parse engine
which will parse it and turn it into

9
00:00:27.754 --> 00:00:32.590
a tree, the tree being the data
structure which represents the document.

10
00:00:32.590 --> 00:00:36.740
The tree is then given to the flow or
layout engine which will figure out

11
00:00:37.780 --> 00:00:40.010
all of the components of
the page,how big they are and

12
00:00:40.010 --> 00:00:44.920
how they're all located relative to
each other and create a display list.

13
00:00:44.920 --> 00:00:49.750
And then the display list gets given to
the paint engine which will then turn it

14
00:00:49.750 --> 00:00:54.156
all into pixels which you can then
send to the screen or to the printer.

15
00:00:54.156 --> 00:00:56.700
All browsers still do essentially that.

16
00:00:58.430 --> 00:01:01.790
When work started on the Mosaic browser,
they added the image tag.

17
00:01:03.360 --> 00:01:07.460
So this is the hack that they came up
with for making the image tag work.

18
00:01:07.460 --> 00:01:10.730
When they got to the parse engine and
they'd get an image tag,

19
00:01:10.730 --> 00:01:15.910
they'd stop, sneak back to the fetch
engine, say go get that picture and

20
00:01:15.910 --> 00:01:18.960
they'd wait for it to come back and
then they'd resume parsing.

21
00:01:20.950 --> 00:01:25.160
They were on one of the world's
fastest university networks, so

22
00:01:25.160 --> 00:01:26.389
that was working really well for them.

23
00:01:28.070 --> 00:01:32.930
But, Mosaic got loose,
got into the world and

24
00:01:32.930 --> 00:01:35.890
at that time we were
still on dial up modems.

25
00:01:35.890 --> 00:01:40.288
Anybody remember dial up modems,
can anybody sing the dial up modem song.

26
00:01:40.288 --> 00:01:45.770
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Douglas: Yeah.

27
00:01:45.770 --> 00:01:47.120
Yeah.
&gt;&gt; Speaker 2: Ding, ding, ding.

28
00:01:47.120 --> 00:01:52.860
&gt;&gt; Douglas: And so the experience of
running Mosaic on those modems was that

29
00:01:52.860 --> 00:01:57.990
you would wait until every image got
loaded and then everything would display.

30
00:01:57.990 --> 00:02:00.700
So it could take a long time
to get a web page going.

31
00:02:01.924 --> 00:02:09.990
So those kids then moved to Netscape,
and their goal is to kill Mosaic.

32
00:02:09.990 --> 00:02:13.480
They want to create a monster that
kills Mosaic, so they make a Mozilla.

33
00:02:14.760 --> 00:02:17.470
And Mozilla works a little differently.

34
00:02:17.470 --> 00:02:21.730
So when the parse engine gets to an image
tag, it goes to the fetch engine and

35
00:02:21.730 --> 00:02:25.170
says go get it but
they then resume parsing.

36
00:02:25.170 --> 00:02:29.350
They put a placeholder in the tree
to represent the picture and

37
00:02:29.350 --> 00:02:30.410
they continue to parse.

38
00:02:31.630 --> 00:02:35.880
And if they see another image tag, they
tell the fetch engine get that one too and

39
00:02:35.880 --> 00:02:39.870
put a second placeholder in the tree and
they continue parsing.

40
00:02:39.870 --> 00:02:42.930
And then at the end,
they will display what they've got so far.

41
00:02:44.120 --> 00:02:49.756
And so you would see little placeholders
in the thing but you saw text right away.

42
00:02:49.756 --> 00:02:53.620
And then as the fetch
engine delivers the images,

43
00:02:53.620 --> 00:02:59.050
they then repeat the flow and
the paint to incorporate the new things.

44
00:02:59.050 --> 00:03:02.290
And so there'd be an animation effect
where it go, boom, boom, boom, boom,

45
00:03:02.290 --> 00:03:03.189
as the images would appear.

46
00:03:04.190 --> 00:03:09.060
So overall this could take longer
than it did on Mosaic, but

47
00:03:09.060 --> 00:03:12.260
the user experience was much better
because they would see things immediately.

48
00:03:13.660 --> 00:03:14.350
And so it was a hit,

49
00:03:14.350 --> 00:03:19.020
it was very successful, and all browsers
today are essentially doing that.

50
00:03:19.020 --> 00:03:21.050
It's just that networks are going so

51
00:03:21.050 --> 00:03:22.679
fast that we don't see
the placeholders anymore.

52
00:03:25.430 --> 00:03:28.910
So in Netscape Navigator 2,
they added scripting.

53
00:03:28.910 --> 00:03:32.560
So there's now an event loop in the
browser which looks something like this.

54
00:03:32.560 --> 00:03:35.410
We'll do the layout,
we'll do the painting.

55
00:03:35.410 --> 00:03:39.390
We'll then wait for an event which
could be something happening with

56
00:03:39.390 --> 00:03:43.310
the UI if someone moving a mouse or
typing on a keyboard.

57
00:03:43.310 --> 00:03:45.460
Or it could be something
coming from the fetch engine,

58
00:03:45.460 --> 00:03:46.660
something happened on the network.

59
00:03:46.660 --> 00:03:51.700
Or it could be a timer cue saying some
time has elapsed and something happens.

60
00:03:51.700 --> 00:03:54.922
Whatever it is,
it will cause some script to run.

61
00:03:54.922 --> 00:03:56.963
And that script will run to completion.

62
00:03:56.963 --> 00:04:03.060
It's guaranteed it will not be interrupted
by the next event which is a good thing.

63
00:04:03.060 --> 00:04:05.680
Cuz it makes the the scripts
much easier to write.

64
00:04:07.040 --> 00:04:10.320
That script will probably
mutate the tree in some way,

65
00:04:10.320 --> 00:04:15.300
that the events probably caused
something to want to be displayed or

66
00:04:15.300 --> 00:04:19.650
modified, which means we'll then do
another flow and other paint and

67
00:04:19.650 --> 00:04:23.500
then we'll get the next event and so on,
and that's basically what browsers do.

68
00:04:23.500 --> 00:04:25.290
Now this is way over simplified.

69
00:04:25.290 --> 00:04:29.740
There are some mutations of the tree which
will cause flow to happen immediately.

70
00:04:29.740 --> 00:04:33.800
So it's not in these very
clean phases necessarily,

71
00:04:33.800 --> 00:04:36.070
but this is pretty much how they work.

72
00:04:36.070 --> 00:04:38.470
This is the way of the browser.

73
00:04:38.470 --> 00:04:39.210
They all do that.

