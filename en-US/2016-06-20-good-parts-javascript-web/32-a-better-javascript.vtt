WEBVTT

1
00:00:00.000 --> 00:00:03.956
[MUSIC]

2
00:00:03.956 --> 00:00:07.331
&gt;&gt; Douglas Crockford: ECMAScript 5,
The New Parts.

3
00:00:07.331 --> 00:00:12.192
So complete implementations of
the fifth edition are now in all

4
00:00:12.192 --> 00:00:15.598
the best web browsers, and also in IE10.

5
00:00:15.598 --> 00:00:19.926
So, it's almost everywhere.

6
00:00:19.926 --> 00:00:23.430
So again,
to review the history of the standards,

7
00:00:23.430 --> 00:00:27.187
the third edition was
ratified in December 1999.

8
00:00:27.187 --> 00:00:32.138
Work on the fourth editions
started almost a year before that.

9
00:00:32.138 --> 00:00:36.268
The fourth edition was attempting
to solve some problems that I think

10
00:00:36.268 --> 00:00:37.487
were unnecessary.

11
00:00:37.487 --> 00:00:42.240
And eventually, it got so big and so
complicated that it was not completable.

12
00:00:43.320 --> 00:00:47.916
That project slipped a year per year for
ten years.

13
00:00:47.916 --> 00:00:50.899
So it was eventually abandoned and
instead,

14
00:00:50.899 --> 00:00:55.529
we did the fifth Edition which
started with a working title ES3.1,

15
00:00:55.529 --> 00:01:00.945
indicating that it was going to be a much
less ambitious attempt at adding goodness

16
00:01:00.945 --> 00:01:05.914
to the third edition and it adds two
languages or describes two languages.

17
00:01:05.914 --> 00:01:09.760
The default language and
the strict language.

18
00:01:09.760 --> 00:01:14.110
And of the two, I recommend not using
the default language, but using the strict

19
00:01:14.110 --> 00:01:19.170
language exclusively and we'll talk later
about what's in the strict language.

20
00:01:20.170 --> 00:01:25.610
So, that the goal of the ECMAScript 5
project was to make a better JavaScript.

21
00:01:25.610 --> 00:01:28.980
There are a lot of people who wanted
us to not make a better JavaScript, but

22
00:01:28.980 --> 00:01:32.100
to make a different language and
there's certainly good arguments for

23
00:01:32.100 --> 00:01:36.750
doing that, but I think standardization is
not the correct place to try to do that.

24
00:01:36.750 --> 00:01:41.387
So instead of trying to do a big thing,
we tried to do a lot of little things.

25
00:01:41.387 --> 00:01:44.409
We tried to make the standard
conform better to reality.

26
00:01:44.409 --> 00:01:47.926
There are some cases
where the standard said,

27
00:01:47.926 --> 00:01:53.441
implementations must do this and
none of the implementations did that.

28
00:01:53.441 --> 00:01:56.505
So we said, okay, well,
the standards obviously wrong.

29
00:01:56.505 --> 00:01:59.050
We should make the standard conform
to what people actually do.

30
00:02:00.660 --> 00:02:04.030
We should try to make the browsers
conform better to each other.

31
00:02:04.030 --> 00:02:07.439
There are cases where three browser
makers would do things one way and

32
00:02:07.439 --> 00:02:09.450
Microsoft would do things another way.

33
00:02:09.450 --> 00:02:14.628
Microsoft very generously agreed to
do what everybody else was doing,

34
00:02:14.628 --> 00:02:16.623
that was a very nice thing.

35
00:02:16.623 --> 00:02:19.236
In cases where all of
the browsers disagreed,

36
00:02:19.236 --> 00:02:21.916
where every browser did
something different,

37
00:02:21.916 --> 00:02:25.403
we took that as license to fix
something deep in the standard.

38
00:02:25.403 --> 00:02:29.759
That we assume that the web doesn't care,
if every browser does something different.

39
00:02:29.759 --> 00:02:32.890
In that case, we can go in and
do deeper changes.

40
00:02:34.320 --> 00:02:38.349
As a result of all of this work,
interoperability is improved.

41
00:02:38.349 --> 00:02:41.945
JavaScript was already very good
at write once run everywhere.

42
00:02:41.945 --> 00:02:43.530
With ES5, it gets even better.

43
00:02:45.730 --> 00:02:51.730
So our number one goal for ES5 was
don't break the web and that's a really

44
00:02:51.730 --> 00:02:57.530
difficult goal to keep, because any time
you change anything, something will break.

45
00:02:59.040 --> 00:03:04.923
And we did break some stuff with ES5,
but we tried really hard not to.

46
00:03:04.923 --> 00:03:10.002
Now you could argue as I did,
there is a lot of stuff out there,

47
00:03:10.002 --> 00:03:15.592
which deserves to break, but
we tried not to break even that stuff.

48
00:03:15.592 --> 00:03:19.316
We wanted to improve the language for
the users of the language.

49
00:03:19.316 --> 00:03:23.517
Most of the critics of JavaScript
are people who do not use the language and

50
00:03:23.517 --> 00:03:26.794
would not use it even if we did
everything they told us to.

51
00:03:26.794 --> 00:03:30.412
So we tried not to listen to them
too much, not always successfully.

52
00:03:30.412 --> 00:03:33.510
We tried instead to listen to you.

53
00:03:33.510 --> 00:03:36.754
We paid a lot of attention to
third party security or mash ups.

54
00:03:36.754 --> 00:03:42.230
We want to make it possible for you to
add someone else's code to your page and

55
00:03:42.230 --> 00:03:46.950
have it not violate your security or
your customer's security.

56
00:03:48.310 --> 00:03:51.275
We decided not to try to protect
stupid people from themselves,

57
00:03:51.275 --> 00:03:53.155
because that is just too hard.

58
00:03:56.455 --> 00:04:00.971
So we, in fact, added new ways that stupid
people can do outrageously stupid things

59
00:04:00.971 --> 00:04:03.145
and we'll get to that little bit later.

60
00:04:04.465 --> 00:04:09.075
And we decided to have no new syntax and
the reason for that is

61
00:04:09.075 --> 00:04:13.739
that at the time that we were doing this
work, IE6 was still the dominant browser.

62
00:04:14.910 --> 00:04:19.606
And our concern was that if we launched
a new version of the language and

63
00:04:19.606 --> 00:04:21.436
if IE6 is still dominant,

64
00:04:21.436 --> 00:04:26.848
then if the value of that new language
depended on syntax and it's going to fail,

65
00:04:26.848 --> 00:04:32.364
because every new feature means total
failure and that's not helping you at all.

66
00:04:32.364 --> 00:04:36.990
So, we tried to add as much value to
the language as we could without changing

67
00:04:36.990 --> 00:04:38.742
the syntax of the language.

68
00:04:38.742 --> 00:04:42.066
Hoping that eventually we
would solve the IE problem and

69
00:04:42.066 --> 00:04:46.460
then later editions of the language
would be able to be freer with syntax.

