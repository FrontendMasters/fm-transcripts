WEBVTT

1
00:00:00.000 --> 00:00:03.997
[MUSIC]

2
00:00:03.997 --> 00:00:06.507
&gt;&gt; Douglas: So, this is a problem
similar to the first one.

3
00:00:06.507 --> 00:00:11.327
We're going to make a function that
makes a publish subscribe object, and

4
00:00:11.327 --> 00:00:17.470
it will reliably deliver all publications
to all subscribers in the right order.

5
00:00:17.470 --> 00:00:20.960
So, the idea is that we might have
multiple parties running in our system,

6
00:00:20.960 --> 00:00:25.750
and they need to be able to communicate
with each other, and we will provide them

7
00:00:25.750 --> 00:00:31.800
a pub sub-instance that they will all
share, that allows them to communicate.

8
00:00:31.800 --> 00:00:35.090
But, we want to make sure
that it works correctly so

9
00:00:35.090 --> 00:00:40.790
that it can reliably deliver all the
messages to everybody in the right order.

10
00:00:40.790 --> 00:00:41.940
So, this is how it might work.

11
00:00:41.940 --> 00:00:46.070
We'll have our pubsub constructor,
which will make a pubsub instance,

12
00:00:46.070 --> 00:00:47.790
which we then share with all the parties.

13
00:00:48.930 --> 00:00:52.850
It will have a subscribe method on
it which can receive a function,

14
00:00:52.850 --> 00:00:58.320
which will be called whenever somebody
publishes, and they can publish by calling

15
00:00:58.320 --> 00:01:03.280
the publish method, which will then cause
all of the subscribers to get called.

16
00:01:03.280 --> 00:01:06.160
Okay, so you can imagine how you might

17
00:01:06.160 --> 00:01:09.230
implement something like that
it's not very complicated.

18
00:01:09.230 --> 00:01:11.290
Here is a possible implementation.

19
00:01:12.350 --> 00:01:16.590
We've got a pub sub constructor, it has an
array of subscribers where it's going to

20
00:01:16.590 --> 00:01:18.810
keep the full list of subscribers.

21
00:01:18.810 --> 00:01:22.370
It will return an object
containing two methods.

22
00:01:22.370 --> 00:01:26.060
First the subscribe method
will receive a subscriber and

23
00:01:26.060 --> 00:01:30.870
push it onto the subscribers list,
and they publish method will

24
00:01:30.870 --> 00:01:35.880
Loop through all of the subscribers and
call each one and give them the message.

25
00:01:35.880 --> 00:01:39.297
Okay, so looks pretty straightforward, and

26
00:01:39.297 --> 00:01:44.740
unfortunately it doesn't do any of
the things that we need to guarantee.

27
00:01:46.020 --> 00:01:49.560
It is possible to prevent people
from publishing and subscribing.

28
00:01:49.560 --> 00:01:55.544
It's possible to,
&gt;&gt; Douglas: Remove subscribers and

29
00:01:55.544 --> 00:01:59.450
cause messages to get
delivered out of order.

30
00:01:59.450 --> 00:02:03.100
Everything that this
is supposed to prevent

31
00:02:04.240 --> 00:02:09.240
It will allow, so your job is to figure
out how an attacker can do this.

32
00:02:09.240 --> 00:02:13.337
So, if an attacker is one of the
subscribers and wants to screw it up for

33
00:02:13.337 --> 00:02:16.190
all the other subscribers,
how does he do that?

34
00:02:18.929 --> 00:02:20.729
&gt;&gt; Speaker 2: He used
the attack from before, and

35
00:02:20.729 --> 00:02:22.590
empty out the subscribers, right?

36
00:02:23.640 --> 00:02:25.600
&gt;&gt; Douglas: That is something
to be concerned about,

37
00:02:25.600 --> 00:02:27.970
we don't have a store method this time.

38
00:02:29.090 --> 00:02:33.800
So, we don't provide a way
of changing the push

39
00:02:33.800 --> 00:02:38.610
property of the subscribers array,
but that's definitely

40
00:02:38.610 --> 00:02:42.780
something you want to be thinking about
&gt;&gt; Speaker 3: Whats

41
00:02:42.780 --> 00:02:44.930
the function now publishing?

42
00:02:44.930 --> 00:02:50.555
Sorry, if you push
a function called publish,

43
00:02:50.555 --> 00:02:58.043
it's not because our
response because it's crap.

44
00:02:58.043 --> 00:03:04.582
If you push a function that
two weeks subscribers for

45
00:03:04.582 --> 00:03:09.049
example is like this because this.

46
00:03:12.170 --> 00:03:13.660
When you get to me,

47
00:03:13.660 --> 00:03:18.210
the one I just pushed which is a function
when you call subscribers eye.

48
00:03:18.210 --> 00:03:23.350
You call on publication,
you now have access to this.

49
00:03:23.350 --> 00:03:24.645
&gt;&gt; Douglas: You are exactly right.

50
00:03:24.645 --> 00:03:29.172
Unfortunately, Powerpoint compels me to
force you to do the instead of particular

51
00:03:29.172 --> 00:03:32.355
order So please remember that
we will come back to it okay?

52
00:03:32.355 --> 00:03:35.482
&gt;&gt; [INAUDIBLE]
&gt;&gt; Douglas: Yeah,

53
00:03:35.482 --> 00:03:38.750
I'm a slave to PowerPoint here.

54
00:03:38.750 --> 00:03:43.085
Yeah, so we're gonna have to do that.

55
00:03:43.085 --> 00:03:44.795
So we're gonna have to, but

56
00:03:44.795 --> 00:03:48.876
I will call on you to do that again
because you are absolutely right.

57
00:03:48.876 --> 00:03:51.930
&gt;&gt; [INAUDIBLE]
&gt;&gt; Douglas: So

58
00:03:51.930 --> 00:03:57.330
let's start with how can I prevent
other people from receiving messages.

59
00:03:59.430 --> 00:04:00.616
You almost had it earlier.

60
00:04:00.616 --> 00:04:04.270
&gt;&gt; Speaker 2: So a function,
call it publish.

61
00:04:06.900 --> 00:04:07.710
Then overwrite it.

62
00:04:08.960 --> 00:04:10.752
&gt;&gt; Douglas: No,
it's much easier than that.

63
00:04:13.232 --> 00:04:18.645
&gt;&gt; Speaker 4: Will this fail
immediately on the next publish or

64
00:04:18.645 --> 00:04:24.180
will it not fail until the publish
after the next publish?

65
00:04:24.180 --> 00:04:30.456
&gt;&gt; Douglas: It should fail immediately
&gt;&gt; Douglas: You'll fail instantly.

66
00:04:32.086 --> 00:04:35.080
&gt;&gt; Douglas: I'm sorry,
it will fail on the next publication.

67
00:04:35.080 --> 00:04:40.774
&gt;&gt; Speaker 4: I can just set publish,
&gt;&gt; Speaker 4: Can I

68
00:04:40.774 --> 00:04:42.630
just set publish equal to null?

69
00:04:43.940 --> 00:04:48.010
&gt;&gt; Douglas: Yes,
unfortunately Power Point compels me to

70
00:04:48.010 --> 00:04:50.750
ask you to remember that one too.

71
00:04:50.750 --> 00:04:53.680
I try to anticipate what order
people to come up with these

72
00:04:53.680 --> 00:04:55.480
and
&gt;&gt; Speaker 4: I'm sorry.

73
00:04:55.480 --> 00:04:56.140
&gt;&gt; Douglas: No, you're good.

74
00:04:56.140 --> 00:05:00.630
&gt;&gt; Speaker 4: We're being
tasked with sabotaging for

75
00:05:00.630 --> 00:05:05.314
many all those subscribers who have
previously called subscribe from getting

76
00:05:05.314 --> 00:05:09.406
&gt;&gt; Speaker 5: Publications when publishers

77
00:05:09.406 --> 00:05:10.985
is called.

78
00:05:10.985 --> 00:05:12.149
Okay.

79
00:05:12.149 --> 00:05:13.320
&gt;&gt; Douglas: Okay.

80
00:05:13.320 --> 00:05:17.480
So since you're getting
way ahead of me let me

81
00:05:17.480 --> 00:05:19.230
show the one that we need to do first.

