WEBVTT

1
00:00:00.000 --> 00:00:04.636
[MUSIC]

2
00:00:04.636 --> 00:00:05.920
&gt;&gt; Douglas Crockford: So,
we've gotten very close a couple of times.

3
00:00:07.930 --> 00:00:09.190
It is concerned with Push.

4
00:00:09.190 --> 00:00:11.490
It is concerned with a function
that will return this.

5
00:00:14.940 --> 00:00:19.320
&gt;&gt; Speaker 2: So, I return this or

6
00:00:19.320 --> 00:00:23.060
uses this, it's referring to.
&gt;&gt; Douglas Crockford: The array or

7
00:00:23.060 --> 00:00:26.392
is it referring to vector?
&gt;&gt; Speaker 2: The array.

8
00:00:26.392 --> 00:00:28.502
&gt;&gt; Douglas Crockford: So [INAUDIBLE]

9
00:00:28.502 --> 00:00:34.069
through the length of [INAUDIBLE].

10
00:00:44.108 --> 00:00:48.130
&gt;&gt; Speaker 3: If you push a function
onto If you append a function onto this.

11
00:00:50.590 --> 00:00:54.672
You call that.

12
00:01:01.031 --> 00:01:01.745
&gt;&gt; Speaker 3: Is it not passing

13
00:01:01.745 --> 00:01:03.471
a function to one of these?
&gt;&gt; Douglas Crockford: Yes, it does.

14
00:01:12.358 --> 00:01:13.430
&gt;&gt; Speaker 3: If that function

15
00:01:13.430 --> 00:01:18.340
includes this inside of it and you call
that function what the scope of this?

16
00:01:19.380 --> 00:01:21.330
They would be.
&gt;&gt; Douglas Crockford: It will depend on

17
00:01:21.330 --> 00:01:27.340
how the function is called bit there are
four different ways to call a function and

18
00:01:27.340 --> 00:01:30.300
what happens to this depends
on which form of call it is.

19
00:01:31.800 --> 00:01:32.370
&gt;&gt; Speaker 3: We want it to be.

20
00:01:32.370 --> 00:01:33.672
&gt;&gt; Douglas Crockford: You want it to be

21
00:01:33.672 --> 00:01:43.549
the method form?
&gt;&gt; Speaker 3: What's

22
00:01:43.549 --> 00:01:45.170
that look like?
&gt;&gt; Douglas Crockford: It looks

23
00:01:45.170 --> 00:01:46.214
like a method invocation.
&gt;&gt; Speaker 3: Okay.

24
00:01:51.427 --> 00:01:53.543
&gt;&gt; Speaker 4: The function could

25
00:01:53.543 --> 00:01:58.183
assign this to a global.
&gt;&gt; Douglas Crockford: It could.

26
00:02:05.561 --> 00:02:06.967
&gt;&gt; Douglas Crockford: Right, that's not so

27
00:02:06.967 --> 00:02:10.300
and in fact that is a possible
way of exploiting this.

28
00:02:11.490 --> 00:02:16.620
But it's not key to the attack.
&gt;&gt; Speaker 3: Okay, so

29
00:02:16.620 --> 00:02:23.540
I passed in, I pushed on to the end of
the function which console logs this

30
00:02:23.540 --> 00:02:29.350
zero and it's sending, it's getting,
itâ€™s putting the first

31
00:02:29.350 --> 00:02:33.360
joint in the array into the console.
&gt;&gt; Douglas Crockford: Right,

32
00:02:33.360 --> 00:02:36.490
but they can get the first element
of the array simply by calling push.

33
00:02:36.490 --> 00:02:37.420
&gt;&gt; Speaker 3: We want to hoard,

34
00:02:37.420 --> 00:02:39.100
right?
&gt;&gt; Douglas Crockford: Not necessarily

35
00:02:39.100 --> 00:02:43.100
the whole contents of the array but
the array object itself.

36
00:02:43.100 --> 00:02:46.180
That's the thing that
we're trying to protect.

37
00:02:46.180 --> 00:02:50.830
&gt;&gt; Speaker 3: Right, so I pass in a,

38
00:02:50.830 --> 00:02:55.337
okay, got it.
&gt;&gt; Speaker 4: Can you call

39
00:02:55.337 --> 00:02:56.080
this.this.array?

40
00:02:56.080 --> 00:03:00.430
From a function that you pass in and
you're storing I don't think that's

41
00:03:03.060 --> 00:03:05.370
poking around the construct
right past it all.

42
00:03:06.580 --> 00:03:10.160
I'm sorry but it just struck instructor.
&gt;&gt; Douglas Crockford: That's not

43
00:03:10.160 --> 00:03:10.740
to help you.

44
00:03:11.760 --> 00:03:13.340
This by itself.

45
00:03:13.340 --> 00:03:18.844
If you get it done correctly as
&gt;&gt; Speaker 5: So,

46
00:03:18.844 --> 00:03:24.119
I don't have this bound correctly, but
I passed in a function that returns

47
00:03:24.119 --> 00:03:29.730
a console log this bound that via get to
a variable and then call the variable.

48
00:03:29.730 --> 00:03:33.980
That's returning the window object
getting on the right track or

49
00:03:35.150 --> 00:03:36.610
not but
&gt;&gt; Douglas Crockford: No, it's not.

50
00:03:36.610 --> 00:03:40.538
You can get to the window object
without calling it [CROSSTALK]

51
00:03:40.538 --> 00:03:41.233
[LAUGH]
&gt;&gt; Speaker 5: Thanks,

52
00:03:41.233 --> 00:03:45.860
Douglas.
&gt;&gt; Speaker 3: All I do is push

53
00:03:45.860 --> 00:03:47.481
a function on it returns this.

54
00:03:47.481 --> 00:03:48.308
And so

55
00:03:48.308 --> 00:03:55.277
now-
&gt;&gt; Speaker 3: Because I

56
00:03:55.277 --> 00:03:59.603
need to know how many items sir, now I'm
gonna get this function here I guess I

57
00:03:59.603 --> 00:04:01.680
need to know how many items are on it.

58
00:04:03.560 --> 00:04:05.490
So like, so
now I have to actually choose store,

59
00:04:05.490 --> 00:04:06.090
looks like.
&gt;&gt; Douglas Crockford: Right.

60
00:04:06.090 --> 00:04:07.950
&gt;&gt; Speaker 3: So, I'm gonna store at

61
00:04:07.950 --> 00:04:13.550
a position,
say five Function that returns this.

62
00:04:13.550 --> 00:04:19.300
Now is all I have to call
is get five pairings and

63
00:04:19.300 --> 00:04:23.560
the result of that's gonna be the array.
&gt;&gt; Douglas Crockford: No, it's not but

64
00:04:23.560 --> 00:04:24.320
you're getting closer.

65
00:04:26.760 --> 00:04:32.726
You do want to store your function
&gt;&gt; Speaker 3: Okay.

66
00:04:32.726 --> 00:04:33.926
&gt;&gt; Douglas Crockford: So, the thing you

67
00:04:33.926 --> 00:04:40.299
haven't got yet is the value of i.
&gt;&gt; Speaker 3: [LAUGH]

68
00:04:45.048 --> 00:04:46.040
&gt;&gt; Speaker 3: We never got the value of i.

69
00:04:47.950 --> 00:04:48.488
&gt;&gt; Douglas Crockford: Yeah,

70
00:04:48.488 --> 00:04:52.345
there is a specific value
of i that makes this attack

71
00:04:52.345 --> 00:04:52.889
work.

72
00:05:01.580 --> 00:05:02.424
&gt;&gt; Speaker 5: Undefined?
&gt;&gt; Douglas Crockford: Nope.

73
00:05:04.522 --> 00:05:06.072
&gt;&gt; Speaker 3: One?

74
00:05:06.072 --> 00:05:07.850
&gt;&gt; Douglas Crockford: [LAUGH] No,

75
00:05:07.850 --> 00:05:11.290
what will happen if you say negative one.
&gt;&gt; Speaker 3: I have no idea.

76
00:05:11.290 --> 00:05:12.220
&gt;&gt; Douglas Crockford: Well, it'll take

77
00:05:12.220 --> 00:05:13.340
the brackets.

78
00:05:13.340 --> 00:05:17.700
Right, the brackets will say take that
number try to link it to a string you get

79
00:05:17.700 --> 00:05:24.160
the string dash one and
then it will store a array dot dash one.

80
00:05:26.050 --> 00:05:33.913
That's where it goes.
&gt;&gt; Speaker 3: JavaScript

81
00:05:33.913 --> 00:05:36.263
objects don't fill in if you
set a really high number,

82
00:05:36.263 --> 00:05:37.500
do they?
&gt;&gt; Douglas Crockford: Nope.

83
00:05:37.500 --> 00:05:38.140
&gt;&gt; Speaker 3: Cuz they're not

84
00:05:38.140 --> 00:05:39.030
really arrays.
&gt;&gt; Douglas Crockford: They're

85
00:05:39.030 --> 00:05:40.217
really half arrays.
&gt;&gt; Speaker 3: Yeah.

86
00:05:46.681 --> 00:05:48.057
&gt;&gt; Speaker 6: Do we have to do the max

87
00:05:48.057 --> 00:05:49.275
number.

88
00:05:49.275 --> 00:05:51.418
That number.
&gt;&gt; Douglas Crockford: No.

89
00:05:56.162 --> 00:05:57.093
&gt;&gt; Speaker 6: You're not trying to store

90
00:05:57.093 --> 00:05:58.130
it current length plus one.
&gt;&gt; Douglas Crockford: No.

91
00:06:02.100 --> 00:06:02.730
&gt;&gt; Speaker 3: You don't know the length.

92
00:06:02.730 --> 00:06:03.288
&gt;&gt; Speaker 6: No,

93
00:06:03.288 --> 00:06:07.990
you're right
&gt;&gt; Douglas Crockford: This is the way.

94
00:06:14.620 --> 00:06:16.050
&gt;&gt; Speaker 6: So, is I we want to pass and

95
00:06:16.050 --> 00:06:19.620
this to refer to the reaction.
&gt;&gt; Douglas Crockford: I'm sorry.

96
00:06:19.620 --> 00:06:21.140
&gt;&gt; Speaker 6: Is I we want to pass and

97
00:06:21.140 --> 00:06:22.861
this to refer to the Rapture.
&gt;&gt; Douglas Crockford: No,

98
00:06:22.861 --> 00:06:27.531
you want the reference to this to
be in the function of the house.

99
00:06:33.883 --> 00:06:35.269
&gt;&gt; Speaker 3: I don't know it seems to me

100
00:06:35.269 --> 00:06:38.293
that you could, but
first of all you have to know that this

101
00:06:38.293 --> 00:06:41.632
vector perhaps that it's an array
that you're dealing with,

102
00:06:41.632 --> 00:06:42.880
I would think

103
00:06:42.880 --> 00:06:43.950
&gt;&gt; Douglas Crockford: Right.
&gt;&gt; Speaker 3: If

104
00:06:43.950 --> 00:06:45.118
you-
&gt;&gt; Douglas Crockford: We'll assume that

105
00:06:45.118 --> 00:06:46.241
the autocracy is the source
code [CROSSTALK]

106
00:06:46.241 --> 00:06:47.585
&gt;&gt; Speaker 3: You said an arbitrary value,

107
00:06:47.585 --> 00:06:50.007
then you're obliterating
that arbitrary value, so

108
00:06:50.007 --> 00:06:52.070
let's just choose a random number five.

109
00:06:52.070 --> 00:06:54.430
First, you've gotta get five.

110
00:06:54.430 --> 00:06:55.850
So, now you've got that.

111
00:06:55.850 --> 00:06:58.730
Now, you can set five to this
function that returns the whole

112
00:06:58.730 --> 00:07:00.670
array.
&gt;&gt; Douglas Crockford: Right.

113
00:07:00.670 --> 00:07:02.300
&gt;&gt; Speaker 3: And then, if you need to fix

114
00:07:02.300 --> 00:07:03.890
five in that array

115
00:07:03.890 --> 00:07:06.260
with the woman you got the first time.
&gt;&gt; Douglas Crockford: Right.

116
00:07:06.260 --> 00:07:08.050
&gt;&gt; Speaker 3: And now you've got the right

117
00:07:08.050 --> 00:07:10.510
one but you don't don't.
&gt;&gt; Douglas Crockford: Not because

118
00:07:10.510 --> 00:07:13.130
in order for
the binding of this to happen.

119
00:07:13.130 --> 00:07:15.106
You have to call it as
a method in this context.

120
00:07:20.506 --> 00:07:21.971
&gt;&gt; Speaker 3: Yeah, I'm just playing in

121
00:07:21.971 --> 00:07:28.364
the console window here.
&gt;&gt; Speaker 3: Okay,

122
00:07:28.364 --> 00:07:33.316
yeah.
&gt;&gt; Speaker 3: I'm not sure I remember,

123
00:07:33.316 --> 00:07:34.810
obviously, things that you do.

124
00:07:34.810 --> 00:07:39.321
Act like I put a new menu here.
&gt;&gt; Douglas Crockford: Right.

125
00:07:39.321 --> 00:07:41.754
&gt;&gt; Speaker 6: So, there's a specific value

126
00:07:41.754 --> 00:07:45.033
of i ever you need to store this function.

127
00:07:45.033 --> 00:07:45.583
&gt;&gt; Douglas Crockford: Yes.
&gt;&gt; Speaker 6: Okay.

128
00:07:45.583 --> 00:07:46.471
Trying to get

129
00:07:46.471 --> 00:07:47.397
the maybe?

130
00:07:47.397 --> 00:07:53.856
&gt;&gt; Douglas Crockford: Nope.
&gt;&gt; Douglas Crockford: So,

131
00:07:53.856 --> 00:07:54.946
are you stumped?
&gt;&gt; Speaker 7: It's not undefined he said.

132
00:07:54.946 --> 00:07:56.462
So [LAUGH]
&gt;&gt; Douglas Crockford: It's not undefined.

133
00:07:56.462 --> 00:07:57.158
No?

134
00:07:57.158 --> 00:08:00.722
&gt;&gt; Speaker 7: [LAUGH]
&gt;&gt; Speaker 3: Null.

135
00:08:00.722 --> 00:08:02.930
&gt;&gt; Douglas Crockford: it's not.

136
00:08:02.930 --> 00:08:07.240
Its not null its not one.
&gt;&gt; Speaker 6: Could you pass it one of

137
00:08:07.240 --> 00:08:10.430
the array functions like math?
&gt;&gt; Douglas Crockford: You can,

138
00:08:10.430 --> 00:08:14.720
but that's not going to help you.
&gt;&gt; Speaker 3: Zero?

139
00:08:15.750 --> 00:08:17.030
&gt;&gt; Douglas Crockford: It's not zero.

140
00:08:17.030 --> 00:08:18.740
&gt;&gt; Speaker 3: How could some magic number,

141
00:08:18.740 --> 00:08:19.880
hey come on.
&gt;&gt; Speaker 6: [LAUGH] Is it 42?

142
00:08:19.880 --> 00:08:21.378
Is it three?
&gt;&gt; Speaker 7: Is it factor.prototype, or

143
00:08:21.378 --> 00:08:25.390
something like that?
&gt;&gt; Douglas Crockford: Nope.

144
00:08:25.390 --> 00:08:26.390
&gt;&gt; Speaker 7: It's not some

145
00:08:26.390 --> 00:08:28.300
weird magic number.
&gt;&gt; Douglas Crockford: It's not a weird

146
00:08:28.300 --> 00:08:30.630
magic number.
&gt;&gt; Speaker 7: Okay.

147
00:08:30.630 --> 00:08:31.250
&gt;&gt; Speaker 6: 42.

148
00:08:31.250 --> 00:08:32.900
&gt;&gt; Speaker 7: That's high.

149
00:08:32.900 --> 00:08:34.830
That is very strange.
&gt;&gt; Douglas Crockford: In fact,

150
00:08:34.830 --> 00:08:38.869
it's not even a number.
&gt;&gt; Speaker 3: Is it not a number?

151
00:08:39.880 --> 00:08:40.640
&gt;&gt; Douglas Crockford: It is not not

152
00:08:40.640 --> 00:08:43.425
a number.
&gt;&gt; Speaker 3: [LAUGH] It's a number!

153
00:08:43.425 --> 00:08:45.898
&gt;&gt; Douglas Crockford: [LAUGH]

154
00:08:45.898 --> 00:08:47.332
Not a number

155
00:08:47.332 --> 00:08:52.130
is a number.
&gt;&gt; Speaker 7: So,

156
00:08:52.130 --> 00:08:55.240
it is not a number, like NAN?
&gt;&gt; Speaker 3: No it's not NAN.

157
00:08:55.240 --> 00:08:56.490
&gt;&gt; Douglas Crockford: No, it's

158
00:08:56.490 --> 00:09:00.550
not NAN.
&gt;&gt; Speaker 3: How about function?

159
00:09:02.120 --> 00:09:03.060
&gt;&gt; Speaker 7: I say we just go for

160
00:09:03.060 --> 00:09:06.470
it, what do you guys think?
&gt;&gt; Speaker 3: Are you gonna

161
00:09:06.470 --> 00:09:07.770
make him tell us?
&gt;&gt; Speaker 7: You

162
00:09:07.770 --> 00:09:12.320
guys must have very serious hacking
&gt;&gt; Speaker 3: I can not give up

163
00:09:12.320 --> 00:09:18.253
the answer, we could be here
all day Somebody Google it,

164
00:09:18.253 --> 00:09:22.479
so we can pretend like we got it.
&gt;&gt; Speaker 7: After

165
00:09:23.699 --> 00:09:27.640
overflow.
&gt;&gt; Speaker 6: [LAUGH] is eval

166
00:09:27.640 --> 00:09:30.440
play anywhere in this.
&gt;&gt; Douglas Crockford: No,

167
00:09:30.440 --> 00:09:31.470
we're not using eval.

168
00:09:31.470 --> 00:09:32.870
That's a really good question.

169
00:09:32.870 --> 00:09:35.250
Eval is full of trouble but that's,

170
00:09:35.250 --> 00:09:39.520
we're not concerned about eval here.
&gt;&gt; Speaker 3: It is a string?

171
00:09:39.520 --> 00:09:40.046
&gt;&gt; Douglas Crockford: It is a string.

172
00:09:40.046 --> 00:09:41.598
&gt;&gt; Speaker 3: For

173
00:09:41.598 --> 00:09:44.703
each.

174
00:09:44.703 --> 00:09:46.159
&gt;&gt; Douglas Crockford: Nope.

175
00:09:46.159 --> 00:09:49.390
&gt;&gt; Speaker 6: [LAUGH]
The empty string.

176
00:09:49.390 --> 00:09:49.900
&gt;&gt; Douglas Crockford: So, it's not

177
00:09:49.900 --> 00:09:57.950
the empty string.
&gt;&gt; Speaker 6: The string this?

178
00:09:57.950 --> 00:09:58.580
&gt;&gt; Douglas Crockford: It is

179
00:09:59.600 --> 00:10:02.820
not two string.
&gt;&gt; Speaker 4: [LAUGH] It is not the string

180
00:10:02.820 --> 00:10:05.110
this?
&gt;&gt; Douglas Crockford: It is not the string

181
00:10:05.110 --> 00:10:10.367
this.
&gt;&gt; Speaker 7: This is a key,

182
00:10:10.367 --> 00:10:14.480
this is.
&gt;&gt; Speaker 3: Is it

183
00:10:14.480 --> 00:10:15.652
every?
&gt;&gt; Douglas Crockford: It is not

184
00:10:15.652 --> 00:10:20.485
every.
&gt;&gt; Speaker 7: Not the string or

185
00:10:20.485 --> 00:10:24.528
array.
&gt;&gt; Speaker 3: There's another function

186
00:10:24.528 --> 00:10:28.400
that you can call an array.
&gt;&gt; Douglas Crockford: Yes.

187
00:10:28.400 --> 00:10:29.204
&gt;&gt; Speaker 3: Well, okay,

188
00:10:29.204 --> 00:10:32.725
is it
&gt;&gt; Douglas Crockford: Yes,

189
00:10:32.725 --> 00:10:35.619
it is one of those.
&gt;&gt; Speaker 3: Okay.

190
00:10:50.133 --> 00:10:54.356
&gt;&gt; Speaker 7: So, it has to be in array

191
00:10:54.356 --> 00:10:58.820
method, it's push.
&gt;&gt; Douglas Crockford: It is

192
00:10:58.820 --> 00:10:59.960
push.
&gt;&gt; Speaker 3: So,

193
00:10:59.960 --> 00:11:03.710
you set.
&gt;&gt; Douglas Crockford: Right, so.

194
00:11:03.710 --> 00:11:04.930
&gt;&gt; Speaker 3: You store push.

195
00:11:04.930 --> 00:11:06.050
&gt;&gt; Douglas Crockford: We store push with

196
00:11:06.050 --> 00:11:08.110
a function that has access to this.

197
00:11:10.820 --> 00:11:13.150
So, then the question is, how do you
get that function to get called?

198
00:11:17.117 --> 00:11:18.606
&gt;&gt; Speaker 3: You call a pen.

199
00:11:18.606 --> 00:11:20.600
&gt;&gt; Douglas Crockford: You call a pen.

200
00:11:20.600 --> 00:11:25.624
Ladies and gentlemen.
&gt;&gt; [APPLAUSE]

