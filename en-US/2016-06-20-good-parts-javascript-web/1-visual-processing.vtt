WEBVTT

1
00:00:00.000 --> 00:00:03.504
[MUSIC]
&gt;&gt; Douglas: Let me give you an analogy

2
00:00:03.504 --> 00:00:07.079
from visual processing.

3
00:00:07.079 --> 00:00:10.160
Visual processing is the opposite
of computer graphics.

4
00:00:10.160 --> 00:00:14.260
It's where you take a signal from
a camera and analyze all the pixels and

5
00:00:14.260 --> 00:00:17.340
try to determine what are all
the objects in the scene and

6
00:00:17.340 --> 00:00:21.010
how are they all moving relative
to each other in the camera.

7
00:00:21.010 --> 00:00:24.710
You need to be able to solve this problem
in order to walk in the world and

8
00:00:24.710 --> 00:00:26.984
it's a really really difficult problem.

9
00:00:26.984 --> 00:00:29.430
But we're all able to solve it.

10
00:00:29.430 --> 00:00:32.080
And in fact all the animals
are able to solve it.

11
00:00:32.080 --> 00:00:36.100
And the reason we're able to do that is
because we don't solve the general problem

12
00:00:36.100 --> 00:00:37.990
because the general problem is hard.

13
00:00:37.990 --> 00:00:40.330
Instead we solve special problems.

14
00:00:40.330 --> 00:00:44.460
Problems which are much easier to solve,
but which sometimes give the wrong answer.

15
00:00:45.520 --> 00:00:48.180
And we have techniques for

16
00:00:48.180 --> 00:00:52.940
revealing the ways in which we get this
wrong, and we call them optical illusions.

17
00:00:52.940 --> 00:00:56.600
So this is an illusion designed
by Edward Adelson of MIT.

18
00:00:56.600 --> 00:01:00.270
And here we've got a checkerboard
with white squares and black squares.

19
00:01:00.270 --> 00:01:02.600
And two of the squares are labeled A and
B.

20
00:01:02.600 --> 00:01:05.860
And it turns out those two squares
are exactly the same color.

21
00:01:08.860 --> 00:01:13.570
As some of you may be seeing that you
may believe that I'm telling you that,

22
00:01:13.570 --> 00:01:17.650
but you're looking at that and one is
clearly white and one is clearly black.

23
00:01:17.650 --> 00:01:23.000
But in fact they are both that color,
they're both that shade of neutral gray.

24
00:01:23.000 --> 00:01:27.870
in fact if I overlay my
square on top of the picture.

25
00:01:27.870 --> 00:01:30.750
If A and B were different colors.

26
00:01:30.750 --> 00:01:33.320
Then you should see some
break in continuity, right,

27
00:01:33.320 --> 00:01:35.530
you should see some edge forming and
you don't.

28
00:01:35.530 --> 00:01:38.230
Now many of you may be seeing a gradient.

29
00:01:38.230 --> 00:01:39.500
Who is seeing a gradient here?

30
00:01:39.500 --> 00:01:42.712
Seeing the colors going from black and
white, that come on.

31
00:01:42.712 --> 00:01:44.626
Yeah, yeah, yeah.

32
00:01:44.626 --> 00:01:48.690
Your brain is lying to you,
that there's not a gradient.

33
00:01:48.690 --> 00:01:51.760
It is that color,
it is a solid colored square.

34
00:01:51.760 --> 00:01:56.460
You know the truth of this image and
yet you still can't see it correctly.

35
00:01:56.460 --> 00:01:59.320
It's because there's another part of your
brain that Kahneman doesn't talk about

36
00:01:59.320 --> 00:02:04.320
which deals with inconstancy,
which is a really important thing to

37
00:02:04.320 --> 00:02:08.100
have because if a computer
system becomes inconsistent,

38
00:02:08.100 --> 00:02:10.220
there's a really good chance
it's going to fail, right?

39
00:02:10.220 --> 00:02:11.780
It's just [INAUDIBLE] boom.

40
00:02:11.780 --> 00:02:16.830
And biological systems can't afford
to fail when they get confused.

41
00:02:16.830 --> 00:02:23.470
So instead we've got this system,
which will reject information which is

42
00:02:23.470 --> 00:02:28.340
coming from the world through our senses
if it contradicts our internal state.

43
00:02:28.340 --> 00:02:30.390
And that's why you cannot
see this correctly.

44
00:02:30.390 --> 00:02:35.470
Because it is altering what you are seeing
with your eyes in order to conform

45
00:02:35.470 --> 00:02:38.119
with your patterns of image processing.

46
00:02:39.730 --> 00:02:41.750
And it turns out we do this all the time,

47
00:02:41.750 --> 00:02:44.120
it's not just in the visual system,
it's in everything.

48
00:02:44.120 --> 00:02:45.890
And that's why we argue so

49
00:02:45.890 --> 00:02:50.950
much because we literally cannot hear
what the other person is saying.

50
00:02:50.950 --> 00:02:54.810
The other person is saying something
which contradicts us then we will

51
00:02:56.130 --> 00:02:59.020
misinterpret what they're saying,
it's not intentional,

52
00:02:59.020 --> 00:03:02.410
it's just part of what we're doing
in order to resist inconsistency.

53
00:03:03.600 --> 00:03:05.220
And this is the mechanism.

54
00:03:06.220 --> 00:03:10.220
So it turns out none of this was
news to the advertising industry.

55
00:03:10.220 --> 00:03:13.080
They had figured out a long
time ago that they could

56
00:03:13.080 --> 00:03:16.780
design messages which would bypass
the head that would go straight to the gut

57
00:03:16.780 --> 00:03:19.900
convincing us that we have to
buy things that we don't need.

58
00:03:19.900 --> 00:03:22.280
They've been doing this for
a long, long time.

59
00:03:22.280 --> 00:03:27.513
What Kahneman does is provide the theory
which explains why that works.

60
00:03:27.513 --> 00:03:32.140
And I don't think anybody understood
this better than the tobacco industry.

61
00:03:32.140 --> 00:03:35.930
Cuz you look at tobacco, okay,
so how do you sell tobacco?

62
00:03:35.930 --> 00:03:38.040
What what does tobacco do?

63
00:03:38.040 --> 00:03:42.390
It makes you smell bad, it turns your
teeth yellow, it makes you sick, and

64
00:03:42.390 --> 00:03:43.550
then it kills you.

65
00:03:43.550 --> 00:03:47.080
So how do you convince people,
yeah, let's buy some tobacco.

66
00:03:48.080 --> 00:03:53.230
And they do it by creating messages
which are able to confuse system 1.

67
00:03:53.230 --> 00:03:55.890
System 1 is easily confused

68
00:03:55.890 --> 00:03:58.490
about the difference between
slow death and good for you.

69
00:04:00.330 --> 00:04:04.820
So that is the equipment that we have for
writing computer programming or

70
00:04:04.820 --> 00:04:06.610
for writing computer programs.

71
00:04:06.610 --> 00:04:10.540
And programs are the most
complicated things that humans make.

72
00:04:10.540 --> 00:04:16.040
There's nothing else in human experience
which is composed of as many tiny little

73
00:04:16.040 --> 00:04:22.180
pieces which all have to go together
perfectly that have to work In real time

74
00:04:22.180 --> 00:04:27.040
with changing states and
changing inputs in a dynamic situation.

75
00:04:27.040 --> 00:04:31.010
Nothing else comes anywhere close to
the complexity that we have in software.

76
00:04:31.010 --> 00:04:33.580
And it's amazing that
we're able to manage this.

77
00:04:33.580 --> 00:04:34.520
But it's really hard.

78
00:04:35.700 --> 00:04:40.145
So when the first Von Neumann
machine started coming online,

79
00:04:40.145 --> 00:04:43.420
and it was discovered programming
is really, really difficult.

80
00:04:46.350 --> 00:04:49.776
So there was a lot of thinking that we
need to figure out a way in order to make

81
00:04:49.776 --> 00:04:50.900
it easier.

82
00:04:50.900 --> 00:04:55.270
In fact to make it unnecessary because
otherwise the computers are not much

83
00:04:55.270 --> 00:04:56.470
use to us.

84
00:04:56.470 --> 00:04:59.830
And so that started research
in artificial intelligence.

85
00:04:59.830 --> 00:05:03.240
And the goal of artificial
intelligence originally was to

86
00:05:03.240 --> 00:05:06.140
figure out a way to have the computers
write their own programs,

87
00:05:07.660 --> 00:05:11.630
because it was just too hard
to have humans writing them.

88
00:05:11.630 --> 00:05:16.380
AI has had a lot of amazing successes but
they have failed completely at their

89
00:05:16.380 --> 00:05:21.150
original mission, that you cannot
give a problem to a computer and

90
00:05:21.150 --> 00:05:23.670
ask it to write the program
that solves that problem.

91
00:05:25.210 --> 00:05:28.380
If it were then we would ask the computer,
well write a program that's

92
00:05:28.380 --> 00:05:32.690
better than you and keep doing that
until they become our overlords.

93
00:05:32.690 --> 00:05:36.480
And that hasn't happened, computers
don't know how to write programs, so

94
00:05:36.480 --> 00:05:37.040
we write them.

95
00:05:37.040 --> 00:05:39.519
So as a result of the failure of AI,

96
00:05:39.519 --> 00:05:44.675
we are still writing programs by hand.
&gt;&gt; Douglas: So

97
00:05:44.675 --> 00:05:50.100
the most important tool we have for doing
programming is the programming language.

98
00:05:50.100 --> 00:05:54.265
Because one thing that computers are
really good at, is translating one formal

99
00:05:54.265 --> 00:05:58.694
language into another formal language and
that's what programming languages do.

100
00:05:58.694 --> 00:06:03.126
They allow us to write at increasing
higher levels of abstraction,

101
00:06:03.126 --> 00:06:07.960
where we get more leverage where we
can create more work with less effort.

102
00:06:07.960 --> 00:06:11.380
And then the computer or
through the programming language

103
00:06:11.380 --> 00:06:15.340
figures out how to convert it into
a form that the computer can execute.

104
00:06:15.340 --> 00:06:18.090
And so programming languages are really,
really important.

105
00:06:20.070 --> 00:06:21.410
The thing that makes programming so

106
00:06:21.410 --> 00:06:24.640
extremely difficult is the requirement for
perfection.

107
00:06:24.640 --> 00:06:28.070
Programs have to be absolutely
perfect in every aspect,

108
00:06:28.070 --> 00:06:32.150
in every detail for all possible inputs,
for all possible states for all time.

109
00:06:33.160 --> 00:06:37.010
And the contract we have with
the computer, is that if a program

110
00:06:37.010 --> 00:06:41.980
is not perfect in all of those ways,
the computer has licensed to do the worst

111
00:06:41.980 --> 00:06:46.379
possible thing at the worst possible
time and it is not the computer's fault.

112
00:06:47.490 --> 00:06:49.170
Whose fault is it?

113
00:06:49.170 --> 00:06:50.150
It's your fault.

114
00:06:50.150 --> 00:06:52.410
Why did you give us a program
which you knew wasn't perfect?

115
00:06:53.940 --> 00:06:57.540
So you'd think well okay, because
of that requirement for perfection,

116
00:06:57.540 --> 00:07:01.050
we would never release a program to
production until we know it's perfect.

117
00:07:02.090 --> 00:07:05.100
And we don't do that for
two really good reasons.

118
00:07:05.100 --> 00:07:08.560
The first one is, we would never
release a program to production, and

119
00:07:08.560 --> 00:07:10.610
eventually management would figure, or

120
00:07:10.610 --> 00:07:15.640
why are we paying these guys, they never
finish, let's figure out something else.

121
00:07:15.640 --> 00:07:18.930
But the second reason is
much more insidious and

122
00:07:18.930 --> 00:07:22.660
that is we have no test for perfection.

123
00:07:22.660 --> 00:07:27.440
It may be that someone once
created a complex program

124
00:07:27.440 --> 00:07:31.160
that actually was perfect,
there is no way to know.

125
00:07:31.160 --> 00:07:32.800
There is no test for perfection.

126
00:07:32.800 --> 00:07:37.050
We have tests for imperfection but
no tests for perfection, so

127
00:07:37.050 --> 00:07:39.710
there's just no way to tell.

128
00:07:39.710 --> 00:07:42.259
Now, it's most likely that none
of our programs are perfect.

129
00:07:43.330 --> 00:07:47.770
And so what we do is we put our
programs into production hoping that

130
00:07:47.770 --> 00:07:51.960
we'll discover what's wrong with it and
fix it before anyone else finds out,

131
00:07:51.960 --> 00:07:55.050
which is crazy, but
that is the state of the art.

132
00:07:55.050 --> 00:07:57.170
That is the best we have
figured out how to do.

133
00:07:58.820 --> 00:08:01.680
So we're doing this work with
the brains of hunters and gatherers.

134
00:08:01.680 --> 00:08:03.800
And this is not a metaphor.

135
00:08:03.800 --> 00:08:06.240
Our brains have not evolved
since the last ice age.

136
00:08:06.240 --> 00:08:09.910
And there was nothing in that
experience to have prepared us for

137
00:08:09.910 --> 00:08:10.800
computer programming.

138
00:08:11.930 --> 00:08:15.520
Hunting and gathering required
a completely different set of skills.

139
00:08:15.520 --> 00:08:18.170
So, it's kind of amazing that
we're able to do this at all.

140
00:08:19.390 --> 00:08:24.120
It's sort of lucky, but
there is nothing in our evolution which

141
00:08:25.190 --> 00:08:27.500
has prepared us for that.

142
00:08:27.500 --> 00:08:31.968
So we're making use of everything
we have in order to do this.

143
00:08:31.968 --> 00:08:36.615
So programming obviously is making use of
the head, of system 2 because that's where

144
00:08:36.615 --> 00:08:40.116
the algorithms live,
that's where we do the analytical stuff,

145
00:08:40.116 --> 00:08:44.339
that's where we do the logic in the state
and the dynamics, all of that stuff.

146
00:08:45.990 --> 00:08:47.910
But we don't understand how we do it.

147
00:08:47.910 --> 00:08:49.770
You have all figured it out but

148
00:08:49.770 --> 00:08:53.010
not well enough that you can write
down a list of instructions.

149
00:08:53.010 --> 00:08:56.040
This is how you write a computer program,
you do these things, and

150
00:08:56.040 --> 00:08:59.660
hand it to someone else and
they can read it and follow the steps and

151
00:08:59.660 --> 00:09:01.350
then they can write programs.

152
00:09:01.350 --> 00:09:02.400
We can't do that.

153
00:09:02.400 --> 00:09:04.600
Somehow we have all figured it out.

154
00:09:04.600 --> 00:09:07.380
But not well enough that we could
tell someone else how to do it.

155
00:09:07.380 --> 00:09:12.020
And that's why we can't tell the machines
how to do it because if we can tell other

156
00:09:12.020 --> 00:09:14.890
human how to do it then we can tell
machine how to do it, and we don't know.

157
00:09:16.670 --> 00:09:18.090
And much of what we're doing

158
00:09:19.110 --> 00:09:23.490
involves intuition because
we're always making tradeoffs.

159
00:09:23.490 --> 00:09:28.310
It's never clear what the best approach
to solving a problem is going to be.

160
00:09:28.310 --> 00:09:31.897
And usually we're trying to solve a
problem with incomplete knowledge of what

161
00:09:31.897 --> 00:09:33.157
the solution is gong to be.

162
00:09:33.157 --> 00:09:37.474
And so we have to guess, and
system 2 is not good at guessing,

163
00:09:37.474 --> 00:09:39.600
system 1 loves to guess.

164
00:09:39.600 --> 00:09:43.240
System 1 will guess without knowing
it's guessing, it's great at that.

165
00:09:44.890 --> 00:09:49.050
And so we look at a problem and
we'll look at it top down and

166
00:09:49.050 --> 00:09:52.080
bottom up and
take a macro view and micro view.

167
00:09:52.080 --> 00:09:56.260
We keep constantly shifting our point of
view until eventually a program emerges.

168
00:09:56.260 --> 00:09:57.920
And we don't know how we do that.

169
00:09:59.266 --> 00:10:05.045
So system 2 is obviously involved but
I think system

170
00:10:05.045 --> 00:10:08.040
1 is involved there as well, that's part
of the reason why we can't document it.

171
00:10:09.260 --> 00:10:14.300
Now I have no evidence to support that
argument but my gut tells me it's true.

172
00:10:14.300 --> 00:10:14.860
So I believe it.

