WEBVTT

1
00:00:00.080 --> 00:00:03.130
&gt;&gt; Maximiliano Firtman: It's time to talk
about how to test and debug your web apps.

2
00:00:03.130 --> 00:00:05.010
You already know how to
use a desktop browser.

3
00:00:05.010 --> 00:00:08.390
I don't think that's gonna
be something new for you.

4
00:00:08.390 --> 00:00:11.149
And also, you have a lot of
content at Frontend Masters to

5
00:00:11.149 --> 00:00:13.447
talk about the dev tools and
how to use them, but

6
00:00:13.447 --> 00:00:17.010
I think that it will be important
to talk about the mobile space.

7
00:00:17.010 --> 00:00:19.030
So let's talk a little bit about Android.

8
00:00:19.030 --> 00:00:21.325
So if you're install Android Studio.

9
00:00:21.325 --> 00:00:26.035
Android Studio, by the way, is the IDE
we use to create native Android apps.

10
00:00:26.035 --> 00:00:28.445
But we are going to use it just for
the emulator.

11
00:00:28.445 --> 00:00:31.664
By the way,
you can download just the emulator.

12
00:00:31.664 --> 00:00:35.435
It's the Android SDK, but
then there is no GUI, so

13
00:00:35.435 --> 00:00:38.429
you will have to deal with the terminal.

14
00:00:38.429 --> 00:00:41.731
If you're comfortable with that, go ahead,
just download the Android SDK and

15
00:00:41.731 --> 00:00:43.169
not Android Studio.

16
00:00:43.169 --> 00:00:46.668
But if you are just a standard
average web developer,

17
00:00:46.668 --> 00:00:49.419
you don't have experience on that.

18
00:00:49.419 --> 00:00:51.839
So it's much better to just
install Android Studio.

19
00:00:51.839 --> 00:00:56.772
When you install Android Studio,
actually you will find under the tools,

20
00:00:56.772 --> 00:01:00.684
there are a lot of options,
by the way, right, of course,

21
00:01:00.684 --> 00:01:05.745
in Android Studio, but
actually you have the Device Manager.

22
00:01:05.745 --> 00:01:11.095
The Device Manager is this first image
that you see when you open Android Studio

23
00:01:11.095 --> 00:01:15.405
for the first time,
where you can actually create emulators.

24
00:01:16.505 --> 00:01:18.385
Here they are called virtual devices.

25
00:01:18.385 --> 00:01:23.944
And by the way, with Android,
we are using emulators.

26
00:01:23.944 --> 00:01:28.344
There they are now virtual devices,
AVDs, Android Virtual Devices.

27
00:01:28.344 --> 00:01:31.974
With IOS, this one it's called simulator.

28
00:01:33.254 --> 00:01:36.413
Does anyone know the difference
between an emulator and

29
00:01:36.413 --> 00:01:40.657
a simulator without saying that one
emulates and the other one simulates?

30
00:01:40.657 --> 00:01:43.943
So why we are talking about
Android emulators, but

31
00:01:43.943 --> 00:01:47.391
we are talking about simulators
when it comes to iOS?

32
00:01:47.391 --> 00:01:49.301
Does anyone know?

33
00:01:49.301 --> 00:01:52.452
&gt;&gt; Student 1: Is it the layer of
abstraction where you're recapitulating

34
00:01:52.452 --> 00:01:56.034
the system, one of them is actually
building a virtual machine, and

35
00:01:56.034 --> 00:01:57.471
then the other one is just.

36
00:01:57.471 --> 00:01:59.480
&gt;&gt; Maximiliano Firtman: Yeah,
it had to do with that.

37
00:01:59.480 --> 00:02:03.970
So an emulator, and in fact,
the Android one, it's a virtual machine.

38
00:02:03.970 --> 00:02:06.080
It's actually a full Android.

39
00:02:06.080 --> 00:02:10.830
That's why, for example,
here I have a full Android, is this one.

40
00:02:10.830 --> 00:02:15.970
That it's so
complete that it even has the Play Store.

41
00:02:15.970 --> 00:02:18.790
I can install apps as
if I'm a normal user.

42
00:02:18.790 --> 00:02:20.363
I can install games.

43
00:02:20.363 --> 00:02:23.023
You need a Google account
assigned to your.

44
00:02:23.023 --> 00:02:25.103
It's really a virtual device.

45
00:02:25.103 --> 00:02:27.433
And on the iOS side, it's a simulator.

46
00:02:27.433 --> 00:02:31.593
So it's an app that looks like an iPhone,
but it's not really an iPhone.

47
00:02:31.593 --> 00:02:34.413
So it's not really running
iOS behind the scenes.

48
00:02:34.413 --> 00:02:39.408
The thing is that iOS and macOS
are kind of the same OS, the same base.

49
00:02:39.408 --> 00:02:43.248
So, yeah, there is a UI layer
on top that is different.

50
00:02:43.248 --> 00:02:45.218
And let me prove that.

51
00:02:45.218 --> 00:02:46.858
So let me open Safari.

52
00:02:46.858 --> 00:02:52.473
So I'm in Safari now in the iOS simulator,
okay, so I will open what is typically

53
00:02:52.473 --> 00:02:58.368
the task manager in Windows,
in Mac it's the Activity Monitor, right?

54
00:02:58.368 --> 00:03:01.634
So in the activity Activity Monitor, I can
see all the processes that I'm running,

55
00:03:01.634 --> 00:03:03.066
and I'm going to search for Safari.

56
00:03:04.396 --> 00:03:06.726
You can see there
are a lot of Safari things.

57
00:03:06.726 --> 00:03:07.906
But why?

58
00:03:07.906 --> 00:03:11.526
Because plugins, I have Safari open,
plugins and things.

59
00:03:11.526 --> 00:03:15.737
But there is one in particular
that I need to find, this one,

60
00:03:15.737 --> 00:03:18.216
that says Mobile Safari.

61
00:03:18.216 --> 00:03:18.902
Did you see that?

62
00:03:18.902 --> 00:03:25.216
So there is a Mobile Safari process
running right now in my Mac.

63
00:03:25.216 --> 00:03:27.817
What happens if I kill the process?

64
00:03:27.817 --> 00:03:33.097
If I kill the process,
I'm killing the IOS one.

65
00:03:33.097 --> 00:03:36.897
So here you can see it's not
a virtual machine, okay?

66
00:03:36.897 --> 00:03:37.680
Makes sense?

67
00:03:37.680 --> 00:03:38.927
And what about my PWA?

68
00:03:38.927 --> 00:03:42.912
So if I open CodeMapM,
is it Mobile Safari?

69
00:03:44.182 --> 00:03:47.272
In fact, if I search for
Mobile Safari, it's not open.

70
00:03:47.272 --> 00:03:48.372
So, no.

71
00:03:48.372 --> 00:03:53.482
Also, this proves that the PWA,
Steve Jobs was saying, it's a sandbox.

72
00:03:53.482 --> 00:03:54.482
This is not really Safari.

73
00:03:56.052 --> 00:03:56.792
It's something else.

74
00:03:56.792 --> 00:03:58.222
Actually, it's called web app.

75
00:03:58.222 --> 00:04:01.160
It's web in Mac.

76
00:04:01.160 --> 00:04:06.360
In Mac apps, uses extension app,
dot app, so it's web app.

77
00:04:06.360 --> 00:04:08.740
So the app is called Web.

78
00:04:09.750 --> 00:04:13.460
So if I kill Web, I'm killing my PWA.

79
00:04:14.620 --> 00:04:16.570
So that just proves that
this is a simulator.

80
00:04:17.850 --> 00:04:21.649
It's an app that is running
on my Mac as an iPhone,

81
00:04:21.649 --> 00:04:27.348
despite that the Web App Engine and
the Safari engine are the real ones.

82
00:04:27.348 --> 00:04:33.158
Okay, so they're not simulators,
but the iOS is a simulator, okay?

83
00:04:33.158 --> 00:04:33.918
Does it make sense?

84
00:04:35.458 --> 00:04:41.068
Okay, so let's go back to Android,
we will talk about iOS in a second.

85
00:04:41.068 --> 00:04:44.648
So because it's a real emulator,
I can create other instances.

86
00:04:44.648 --> 00:04:48.439
So if you go, again, back to the Device
Manager, we have the Device Manager and

87
00:04:48.439 --> 00:04:50.888
we have the current running devices.

88
00:04:50.888 --> 00:04:54.338
If you don't find these icons,
they are in the tools menu.

89
00:04:54.338 --> 00:04:59.226
So here I can create a new virtual device
that will get me to this dialogue where I

90
00:04:59.226 --> 00:05:03.967
can actually select the hardware that
I wanna simulate, emulate, sorry,

91
00:05:03.967 --> 00:05:05.653
we're on Android.

92
00:05:05.653 --> 00:05:09.973
So, this is just defining the screen
resolution, the version of Android.

93
00:05:09.973 --> 00:05:14.423
It's important, at least for PWAs,
that you pick one that says Play Store.

94
00:05:15.713 --> 00:05:20.549
I mean,
you will be able to debug PWAs anyway,

95
00:05:20.549 --> 00:05:23.911
but not with the best solution.

96
00:05:23.911 --> 00:05:27.231
So we want an emulator
that has Play Store.

97
00:05:27.231 --> 00:05:29.161
So you pick one, it doesn't matter.

98
00:05:29.161 --> 00:05:32.911
Next, then you select the version
of Android that you want to use.

99
00:05:32.911 --> 00:05:36.511
By the way, you will have to
download those versions of Android.

100
00:05:36.511 --> 00:05:40.776
In this particular installation,
I have version 31, this is Android 12.

101
00:05:40.776 --> 00:05:45.964
But if I want Android 14, you go here and
say, I wanna download Tiramisu,

102
00:05:45.964 --> 00:05:49.556
okay, and
it will download this 1.5 gigabytes.

103
00:05:49.556 --> 00:05:51.188
I don't need to do that now.

104
00:05:51.188 --> 00:05:55.316
And then when it's done,
you will assign that version.

105
00:05:55.316 --> 00:05:57.386
I can just create another one on 12.

106
00:05:57.386 --> 00:06:02.596
You put a name, you can change some
properties like on advanced settings,

107
00:06:02.596 --> 00:06:06.082
maybe i recommend you to
change the amount of RAM.

108
00:06:06.082 --> 00:06:10.666
i mean, in this case, because it's
a pre-arranged device that i selected,

109
00:06:10.666 --> 00:06:11.991
it's already there.

110
00:06:11.991 --> 00:06:15.267
But have in mind,
here it says two gigabytes,

111
00:06:15.267 --> 00:06:18.799
it will consume two gigabytes of your ram,
okay?

112
00:06:18.799 --> 00:06:23.142
So If you want to emulate
the Samsung Galaxy S23,

113
00:06:23.142 --> 00:06:28.091
then don't go and
put the real ram there because unless you

114
00:06:28.091 --> 00:06:32.683
have 128 gigabytes of
RAM in your computer.

115
00:06:32.683 --> 00:06:36.353
Okay, that emulator will
eat RAM from there.

116
00:06:36.353 --> 00:06:39.313
Okay, when you have one,
you open the emulator from here.

117
00:06:39.313 --> 00:06:43.630
So you go and run it with the play
button and it will appear here.

118
00:06:43.630 --> 00:06:45.320
And kind of that's all.

119
00:06:45.320 --> 00:06:50.730
But I have a problem
that I didn't have here.

120
00:06:50.730 --> 00:06:55.080
I'm not sure, no one asked and
no one thought it was a problem initially.

121
00:06:55.080 --> 00:07:00.857
But I'm running this on localhost 3000,
right?

122
00:07:00.857 --> 00:07:03.342
On iOS, it works.

123
00:07:03.342 --> 00:07:04.587
You saw it was working.

124
00:07:08.081 --> 00:07:09.271
&gt;&gt; Maximiliano Firtman: I
will click Stay On Top so

125
00:07:09.271 --> 00:07:12.404
we can see both at the same time,
both the Android and the iPhone.

126
00:07:12.404 --> 00:07:17.467
So what happens if I go
to localhost 3000 here?

127
00:07:17.467 --> 00:07:19.178
I'm getting an error.

128
00:07:19.178 --> 00:07:20.372
Does anyone know why?

129
00:07:22.035 --> 00:07:23.891
&gt;&gt; Student 1: It's an emulator,
not a simulator.

130
00:07:23.891 --> 00:07:25.161
&gt;&gt; Maximiliano Firtman: Because
it's an emulator.

131
00:07:25.161 --> 00:07:26.401
So it's a virtual machine.

132
00:07:26.401 --> 00:07:29.171
So it has its own TCP stack.

133
00:07:29.171 --> 00:07:34.315
So it's looking for
a server accepting requests at

134
00:07:34.315 --> 00:07:40.664
port 3000 on the Android itself,
not on my host computer.

135
00:07:40.664 --> 00:07:43.698
So we have an initial problem,
that there is a solution, okay, but

136
00:07:43.698 --> 00:07:44.724
we have this problem.

137
00:07:44.724 --> 00:07:47.749
And why we don't have the problem
with the IOS simulator?

138
00:07:47.749 --> 00:07:51.675
Because it's running on my Mac,
because it's a simulator.

139
00:07:51.675 --> 00:07:55.179
That's another way to prove
that it's a simulator.

140
00:07:55.179 --> 00:07:56.389
Okay, makes sense?

141
00:07:56.389 --> 00:07:58.529
So how to solve the Android problem,
does anyone know?

142
00:07:58.529 --> 00:08:01.849
I will show the solution anyway but.

143
00:08:01.849 --> 00:08:03.792
&gt;&gt; Student 2: A networking setting.

144
00:08:03.792 --> 00:08:08.035
&gt;&gt; Maximiliano Firtman: And
networking settings, so in Chrome Desktop,

145
00:08:08.035 --> 00:08:12.580
in Chrome Desktop,
you can go to Chrome Inspect, and

146
00:08:12.580 --> 00:08:16.092
we are going to use port forwarding.

147
00:08:16.092 --> 00:08:20.615
So you open port forwarding and
you need to add first the first box is for

148
00:08:20.615 --> 00:08:23.769
the port on the device,
on the external device.

149
00:08:23.769 --> 00:08:26.379
So in this case, my Android emulator 3000.

150
00:08:26.379 --> 00:08:31.509
And then IP address or
host that you wanna map it to.

151
00:08:31.509 --> 00:08:32.649
So localhost 3000.

152
00:08:32.649 --> 00:08:35.350
You don't need to use
the same port number.

153
00:08:35.350 --> 00:08:40.029
And be careful, check that this
enabled port forwarding is there.

154
00:08:40.029 --> 00:08:44.649
So when you're done,
now all the connected devices

155
00:08:44.649 --> 00:08:49.067
that you see here should
get localhost 3000.

156
00:08:49.067 --> 00:08:53.254
So now if I go in here and
type localhost 3000,

157
00:08:53.254 --> 00:08:57.797
I'm getting my
CodePad Masters app running.

158
00:08:57.797 --> 00:09:02.225
In localhost, but
it's actually connected through a tunnel,

159
00:09:02.225 --> 00:09:06.082
through a TCP tunnel that is
actually my host computer.

160
00:09:06.082 --> 00:09:10.670
If you close this page,
port forwarding will terminate.

161
00:09:10.670 --> 00:09:14.510
Okay, so keep that Chrome Inspect
page open all the time.

162
00:09:16.470 --> 00:09:18.095
&gt;&gt; Student 3: Can I ask
a question about the emulator?

163
00:09:18.095 --> 00:09:19.905
&gt;&gt; Maximiliano Firtman: Yeah.
&gt;&gt; Student 3: If you want to see what

164
00:09:19.905 --> 00:09:22.993
a Samsung Galaxy would look like,
for example,

165
00:09:22.993 --> 00:09:25.473
but it's not on the menu of options.

166
00:09:25.473 --> 00:09:27.213
&gt;&gt; Maximiliano Firtman: So
you go and create your own.

167
00:09:27.213 --> 00:09:29.653
So here you see some generic ones.

168
00:09:29.653 --> 00:09:34.415
Remember that you cannot
actually use because

169
00:09:34.415 --> 00:09:39.430
the Samsung Galaxy Firmware
is not open source.

170
00:09:39.430 --> 00:09:42.549
So you cannot actually
download the full layer.

171
00:09:42.549 --> 00:09:45.693
Okay, but I will give you a solution for
Samsung anyway.

172
00:09:45.693 --> 00:09:49.100
But something that you can do
when you're creating a new one.

173
00:09:49.100 --> 00:09:53.452
From here, of course,
you can create a new hardware profile.

174
00:09:53.452 --> 00:09:57.610
And then you go to any website,
bestbuy.com, whatever, and

175
00:09:57.610 --> 00:09:59.026
you check the specs.

176
00:09:59.026 --> 00:10:03.022
And then you put here the resolution,
here with the RAM, be careful,

177
00:10:03.022 --> 00:10:07.038
don't copy the RAM,
you don't need to mimic the real RAM.

178
00:10:07.038 --> 00:10:11.613
With all the properties, and you can even
select the skin, okay, or search for

179
00:10:11.613 --> 00:10:12.238
the skin.

180
00:10:12.238 --> 00:10:15.308
So if you wanna see really a Samsung,
you can get a skin, okay?

181
00:10:16.358 --> 00:10:20.897
But if you wanna run or
try your PWAs on a Samsung device,

182
00:10:20.897 --> 00:10:23.126
you can use a device cloud.

183
00:10:24.726 --> 00:10:29.496
Firebase has one, and
Samsung has one that is free.

184
00:10:29.496 --> 00:10:31.966
It's called the Samsung Remote Test Lab.

185
00:10:33.706 --> 00:10:35.086
You can get a free account.

186
00:10:35.086 --> 00:10:38.026
I think you have a couple
of hours per day for free.

187
00:10:38.026 --> 00:10:42.465
Actually, you can actually run
these devices, even smart TVs,

188
00:10:42.465 --> 00:10:44.772
Galaxy phones, for example.

189
00:10:44.772 --> 00:10:49.942
And you can use one real device remotely,
that's the idea.

190
00:10:49.942 --> 00:10:52.982
And you can open your browser,
try your PWA.

191
00:10:52.982 --> 00:10:56.483
In that case, you should publish
your PWA to a public server, okay?

192
00:10:56.483 --> 00:11:00.841
So making that tunnel, you can still
tunneling the connection for localhost,

193
00:11:00.841 --> 00:11:02.864
but it's more complicated, okay?

194
00:11:02.864 --> 00:11:06.962
But just go and try Remote Test Lab for
Samsung, this, that will work.

195
00:11:06.962 --> 00:11:12.708
And for Firebase,
you also have a free tier, it's the,

196
00:11:12.708 --> 00:11:17.517
well, here, the test lab, that's the name.

197
00:11:17.517 --> 00:11:20.510
It's a cloud-based testing infrastructure,

198
00:11:20.510 --> 00:11:25.557
it's actually more optimized for,
&gt;&gt; Maximiliano Firtman: Let's say,

199
00:11:25.557 --> 00:11:29.632
native apps, but
you can still run your apps, right?

200
00:11:29.632 --> 00:11:35.500
So they have real devices, okay, and
you can try them and use them remotely.

