[00:00:00]
>> Maximiliano Firtman: What is a PWA? What's a Progressive Web App? Does anyone know or can define?
>> Speaker 2: A web app that you don't need to download from, or that you don't need to go through the App Store?
>> Maximiliano Firtman: They is a PWA, right? So what is it? So it's an app that doesn't need to be in the App Store, okay?

[00:00:20]
What else? Let's see if we can.
>> Speaker 3: A combination of service workers, manifest JSON and some other stuff.
>> Maximiliano Firtman: Okay, you like technical definitions, so it's a combination of service workers and manifest and okay, we'll see, we'll see. I'm not saying yes or no yet, I'm just trying to pick some, pick your brain, to see why you're here also.

[00:00:43]
So you have some idea of what we're talking about.
>> Speaker 4: Web app that's designed to be mobile first, and as simple and small, that will build features progressively.
>> Maximiliano Firtman: Okay, so you you took the P, the P in PWA, that's if you take Progressive. There are a couple of things there.

[00:01:02]
The first definition that's coming from the chat mentioned mobile, right? So that's kind of the first focus of PWA were actually mobile. Well, I will try to define this and of course, my definition has changed over the years. My current definition is that, it's a design pattern. So again, it's just a design pattern to use different APIs and specs from the web platform to create installable offline capable standalone apps for mobile and desktop devices.

[00:01:27]
That's my definition, because we don't have a definition. So because it's kind of a marketing name that started for selling things to businesses. I mean, we need to sell something new. So we go to the CEO or the CTO and say, hey, we have to do a web app at PWA because we already have a website, we need to create a PWA.

[00:01:52]
But it's just a design pattern around APIs. It's like a mobile first or it's like responsive web design, it's not really an API. It's just a design pattern recipe, a collection of ideas and techniques that will make a web app installable and offline capable. We will see that with time.

[00:02:17]
The offline capability requirement became more flexible. We are kind of focusing these days and maybe for the future, on installability and the standalone, so being an app. The offline capabilities becoming kind of optional, to be honest, okay? And it's ideal, so this platform is ideal for all those apps out there that the only thing that the app is doing is consuming web content or web services.

[00:02:48]
So they are downloading the JSON part in the JSON, rendering the JSON on the screen, that's all. So we don't need Swift, Kotlin, native code to do that. We don't integrate, we're not listening for Bluetooth, Beacons, while we are using now a hardware connected through infrared, wherever. So we are not doing that, it's just rendering content.

[00:03:14]
And that means that, when you go native, when you have these apps, you're actually building your own browser, it's kind of that. And we already have a browser that it's ideal for rendering web content. Rendering rich text, rich information, and that's the web. So that's why I encourage you to check all the apps you have.

[00:03:37]
I'm not saying that every app should be a PWA, but there are a lot of apps that should be a PWA and it should be pretty good. So again, PWA is not an API, it's not a framework, it's not a library. It's just a term to describe a design pattern.

[00:03:52]
And even let's say for example Apple doesn't use the term at all. There were just one or two mentions in Apple's history. Lawyers, they mentioned that as a way to describe that they have an alternative to the App Store. And I mean, in a legal document, they say we have PWAs, but the WebKit team, at WWDC, the Apple annual event, they never use the term PWA.

[00:04:18]
They use web apps or home screen web apps or installable web apps. And I'm seeing in the past few months that also Google and Microsoft, so Google Chrome, Microsoft Edge. I'm seeing a shift also into using less PWA and more web apps or installable web apps. But again, it's just the same, we are just talking about the same idea, it's just a name issue, okay?

