WEBVTT

1
00:00:00.000 --> 00:00:01.015
&gt;&gt; Maximiliano Firtman: Safe areas,

2
00:00:01.015 --> 00:00:04.809
this is a problem that we
already have in our app.

3
00:00:04.809 --> 00:00:11.005
By default now we have in
browsers non-safe areas.

4
00:00:11.005 --> 00:00:15.775
That I'm not sure if you have encountered
this before as a web developer.

5
00:00:15.775 --> 00:00:21.099
Because while you are working in
the browser, you don't care about this,

6
00:00:21.099 --> 00:00:24.743
because the browser interface
takes care of that.

7
00:00:26.303 --> 00:00:31.094
But now we are the app,
we are in a standalone app,

8
00:00:31.094 --> 00:00:34.473
we need to care about that.

9
00:00:34.473 --> 00:00:39.633
Look at this at the bottom,
let me do this so we can see.

10
00:00:39.633 --> 00:00:44.234
I have a button here Learn that opens
actually frontendmaster.com, and

11
00:00:44.234 --> 00:00:49.066
you can see that it opens in a browser
because it's a different scope, okay?

12
00:00:49.066 --> 00:00:54.035
So I'm still in the Codepad M app,
but I have an inner browser there,

13
00:00:54.035 --> 00:00:58.075
so it happens on Android and
iOS and desktop.

14
00:00:58.075 --> 00:01:04.795
But I have a problem when-,
let's reload the app, oops.

15
00:01:06.367 --> 00:01:11.148
&gt;&gt; Maximiliano Firtman: At the bottom
you can see that that button is on top

16
00:01:11.148 --> 00:01:16.055
of that line that is actually
part of the gesture.

17
00:01:16.055 --> 00:01:21.253
And it's not just a a visual problem,
it's actually a clickable area problem.

18
00:01:22.433 --> 00:01:26.488
There is a whole area here that
is not actually clickable, so

19
00:01:26.488 --> 00:01:30.393
the user won't be able to touch there,
that makes sense.

20
00:01:30.393 --> 00:01:33.878
So I need to somehow move that, and

21
00:01:33.878 --> 00:01:38.934
we can do that with
CSS Environmental Variables.

22
00:01:40.837 --> 00:01:44.543
&gt;&gt; Maximiliano Firtman: So there are some
constants available with M function

23
00:01:44.543 --> 00:01:47.524
safe area in the top right, bottom left.

24
00:01:47.524 --> 00:01:52.348
So we can apply that to,
you need to find the HTML element,

25
00:01:52.348 --> 00:01:58.264
the selector that you want to
apply this to, okay, makes sense?

26
00:01:58.264 --> 00:02:01.412
And that happens also at the left and
right when you are in landscape.

27
00:02:02.522 --> 00:02:07.762
So you need to find a container and
apply this.

28
00:02:07.762 --> 00:02:13.134
So we need to go here and find-,
when you go to the index.html,

29
00:02:13.134 --> 00:02:17.022
I have a form, I have a toolbar,
I have a note.

30
00:02:17.022 --> 00:02:21.037
I can apply maybe to the body first and
then start playing with this.

31
00:02:21.037 --> 00:02:25.416
So I just copy and paste, I think you have
it also in the snippets to copy and paste.

32
00:02:28.403 --> 00:02:30.247
&gt;&gt; Maximiliano Firtman: By the way,
this has one margin, okay,

33
00:02:30.247 --> 00:02:32.007
one margin declaration.

34
00:02:32.007 --> 00:02:35.920
There is no comma here, so
the colon is at the end,

35
00:02:35.920 --> 00:02:40.036
if you are defining the four margin, okay?

36
00:02:40.036 --> 00:02:45.069
Maybe body is not the best place,
because colors will not be right,

37
00:02:45.069 --> 00:02:50.944
just to see if that works,
&gt;&gt; Maximiliano Firtman: By the way,

38
00:02:50.944 --> 00:02:53.774
it's not taking many change, you say why.

39
00:02:57.112 --> 00:02:58.321
&gt;&gt; Maximiliano Firtman: So
I'm killing the app,

40
00:02:58.321 --> 00:03:00.977
I'm opening the app again
it's not taking my change.

41
00:03:03.576 --> 00:03:05.378
&gt;&gt; Student 1: CSS file is cached.

42
00:03:05.378 --> 00:03:10.221
&gt;&gt; Maximiliano Firtman: CSS file is
cached, forever actually forever.

43
00:03:10.221 --> 00:03:13.389
Do we have any way to update that?

44
00:03:13.389 --> 00:03:18.093
No if you want a way delete and

45
00:03:18.093 --> 00:03:22.017
install the app again.

46
00:03:22.017 --> 00:03:25.975
When we're using cache first,
if we don't have any button or

47
00:03:25.975 --> 00:03:29.600
something now our UI,
they will do that forever.

48
00:03:29.600 --> 00:03:34.343
That's why for now,
I'm going to comment this, because,

49
00:03:34.343 --> 00:03:38.347
we didn't finish our app,
okay while debugging.

50
00:03:38.347 --> 00:03:42.662
And remember I mentioned that
Chrome has better debugging tools.

51
00:03:42.662 --> 00:03:46.795
So on Chrome, I have this update
on reload but not on iOS.

52
00:03:46.795 --> 00:03:50.549
I don't have a way to force a reload.

53
00:03:50.549 --> 00:03:53.569
So I need to go install the app again.

54
00:03:56.306 --> 00:03:59.864
&gt;&gt; Maximiliano Firtman: And this new
version should take my change, okay?

55
00:03:59.864 --> 00:04:02.756
Actually, I'm not sure if
it's taking it anyway.

56
00:04:02.756 --> 00:04:05.021
I shouldn't apply it to the body.

57
00:04:05.021 --> 00:04:07.872
So I have, let's see.

58
00:04:07.872 --> 00:04:10.827
Also I'm replacing this here,
that's why it's not working.

59
00:04:10.827 --> 00:04:14.888
But believe me, before it was
because of the service worker.

60
00:04:14.888 --> 00:04:18.753
So I have another body declaration, okay?

61
00:04:18.753 --> 00:04:21.083
That is replacing the 0 with 0.

62
00:04:21.083 --> 00:04:24.873
So it was replacing my declaration with 0,
okay?

63
00:04:24.873 --> 00:04:29.173
Things like that,
now should I reinstall it?

64
00:04:29.173 --> 00:04:33.263
I don't have cache first, so
no, I should just reopen, yeah.

65
00:04:33.263 --> 00:04:36.517
Something when you're doing this,
when you're develop,

66
00:04:36.517 --> 00:04:40.726
why you are developing maybe it's a good
idea to create a Refresh button within

67
00:04:40.726 --> 00:04:44.398
your UI,
that's just called JavaScript Reload.

68
00:04:44.398 --> 00:04:50.758
Okay, so then you can reload directly
from the PWA interface, okay make sense?

69
00:04:50.758 --> 00:04:54.258
It's just that, not a big deal.

70
00:04:54.258 --> 00:04:57.950
Also, what happens with,
is every browser supporting that?

71
00:04:57.950 --> 00:05:01.740
Well what happens if
there is no safe area?

72
00:05:01.740 --> 00:05:04.294
For example,
if you open this in the browser,

73
00:05:04.294 --> 00:05:07.120
browsers typically don't
have the safe problem.

74
00:05:07.120 --> 00:05:12.670
This has to do with mobile devices, with
rounded corners, and things like that.

75
00:05:12.670 --> 00:05:17.134
The margin will be zero and maybe you
don't want zero, you want a minimum.

76
00:05:18.465 --> 00:05:20.495
Okay, I want a minimum margin.

77
00:05:20.495 --> 00:05:25.175
So then you can apply a second
argument that is the default value.

78
00:05:25.175 --> 00:05:30.685
And what happens if a browser
doesn't support safe areas?

79
00:05:32.355 --> 00:05:36.915
It's not common these days, but
then you provide two margin declaration.

80
00:05:36.915 --> 00:05:42.040
I'm not sure if you know this in CSS,
it's a CSS rule, you can put two values,

81
00:05:42.040 --> 00:05:47.044
and the browser will take the last
one that is that has valid values.

82
00:05:47.044 --> 00:05:51.098
So if the browser is not
supporting the M function,

83
00:05:51.098 --> 00:05:56.108
it will ignore it, and
it will keep the previous one, anyway.

84
00:05:56.108 --> 00:05:59.917
Something that is I mean, it's not so
important, to be honest, but

85
00:05:59.917 --> 00:06:03.891
if you're doing PWA,
sometimes we will find this problem.

86
00:06:03.891 --> 00:06:04.971
Devices with a Notch.

87
00:06:06.331 --> 00:06:09.664
When they have a notch,
also you have the problem of safe areas,

88
00:06:09.664 --> 00:06:13.881
but we can solve that with safe areas,
the problem is that when you go landscape.

89
00:06:15.291 --> 00:06:19.824
When you go landscape,
the problem is that by default,

90
00:06:19.824 --> 00:06:24.091
the viewport goes only in the safe area.

91
00:06:24.091 --> 00:06:28.311
And what you see here will
be your background color.

92
00:06:30.270 --> 00:06:32.755
&gt;&gt; Maximiliano Firtman: Okay,
that you define in the manifest.

93
00:06:32.755 --> 00:06:37.928
But if you have an image the image
is not taking the whole width,

94
00:06:37.928 --> 00:06:39.788
does that make sense?

95
00:06:39.788 --> 00:06:44.840
Well, to solve the problem,
because your content is only there,

96
00:06:44.840 --> 00:06:47.197
so your body in CSS is that one.

97
00:06:47.197 --> 00:06:51.577
The rest is outside of your viewport,
outside of your Canvas.

98
00:06:51.577 --> 00:06:56.151
You cannot render content
only on landscape.

99
00:06:56.151 --> 00:07:00.656
So that's why you can ask for
cover viewport, and

100
00:07:00.656 --> 00:07:05.614
then you save areas to
again add those margins.

101
00:07:05.614 --> 00:07:07.334
What is cover viewport?

102
00:07:07.334 --> 00:07:11.658
It's just an addition that you
add to your viewport metadata,

103
00:07:11.658 --> 00:07:13.974
it's viewport fit cover.

104
00:07:13.974 --> 00:07:16.074
In this case you are saying you know what,

105
00:07:16.074 --> 00:07:20.288
I wanna take always 100% of the viewport
even if it's not safe, I don't care.

106
00:07:20.288 --> 00:07:25.087
But I wanna have 100% of the canvas.

107
00:07:25.087 --> 00:07:33.569
So when you do that, then now your content
will take the whole available space.

108
00:07:33.569 --> 00:07:36.670
And the problem if you do
that is that by default now,

109
00:07:36.670 --> 00:07:41.056
if you are rendering a calculator,
that calculator is behind the notch.

110
00:07:42.106 --> 00:07:45.879
To solve a problem, you are margin,

111
00:07:45.879 --> 00:07:51.010
using the safe areas we mentioned before,
yeah.

112
00:07:51.010 --> 00:07:55.567
&gt;&gt; Student 2: How does a safe area
interact with the keyboard area?

113
00:07:55.567 --> 00:07:58.934
&gt;&gt; Maximiliano Firtman: That's
interesting, the keyboard is always,

114
00:07:58.934 --> 00:08:02.310
let me answer that,
it depends on the platform.

115
00:08:02.310 --> 00:08:07.276
On IOS,
the keyboard is always over your PWA, so

116
00:08:07.276 --> 00:08:10.072
it's not moving your PWA.

117
00:08:10.072 --> 00:08:12.412
When you're doing native apps,

118
00:08:12.412 --> 00:08:16.098
you have control of what you wanna do,
but not here.

119
00:08:16.098 --> 00:08:22.052
On Android, there is an API that will help
you with that, let me show you the API.

120
00:08:22.052 --> 00:08:28.438
And the API also adds some CSS property,
it's called the virtual keyboard API.

121
00:08:28.438 --> 00:08:31.117
Does anyone know that that one existed?

122
00:08:31.117 --> 00:08:35.739
The virtual keyboard API, full
control with the virtual keyboard API.

123
00:08:35.739 --> 00:08:38.684
Let's go to the Chrome website.

124
00:08:38.684 --> 00:08:42.034
So then it's actually exactly
what you were asking, okay?

125
00:08:42.034 --> 00:08:46.779
So if you wanna render elements on
your PWA on top of the keyboard or

126
00:08:46.779 --> 00:08:50.852
above the keyboard when
the keyboard appears and so on.

127
00:08:50.852 --> 00:08:55.798
Well, you have an API in JavaScript,
so you can see here how it works and

128
00:08:55.798 --> 00:08:56.793
some events.

129
00:08:56.793 --> 00:09:00.458
You can specify if you want to
overlay the content or not.

130
00:09:00.458 --> 00:09:05.152
And also you have some CSS
environmental variables that will

131
00:09:05.152 --> 00:09:09.488
tell you if the keyword is there or
not, and vice versa.

132
00:09:09.488 --> 00:09:11.289
It's not yet available in Safari,

133
00:09:11.289 --> 00:09:14.841
I think that Safari should implement
it that at any time, but not yet.

134
00:09:14.841 --> 00:09:19.132
Well, important Apple had
many meta tags available for

135
00:09:19.132 --> 00:09:23.067
web apps before the web
manifest spec was created.

136
00:09:23.067 --> 00:09:28.187
Okay, we mentioned a couple, we saw that
PWA compact was adding some of them,

137
00:09:28.187 --> 00:09:33.091
don't add those meta tags if you don't
know what they are actually doing.

138
00:09:33.091 --> 00:09:37.967
We already mentioned that, I gave you
already the warning spoiler before, but

139
00:09:37.967 --> 00:09:41.311
one that I will show you now,
it's full screen in iOS,

140
00:09:41.311 --> 00:09:43.965
it's kind of an old hack that still works.

141
00:09:43.965 --> 00:09:47.621
Remember I mentioned that we
don't have full screen on iOS,

142
00:09:47.621 --> 00:09:51.790
on iOS, it's only standalone,
the display mode only standalone.

143
00:09:51.790 --> 00:09:56.687
But using Apple mobile
web app-status-bar-style,

144
00:09:56.687 --> 00:10:00.133
black-translucent, exactly that.

145
00:10:00.133 --> 00:10:06.786
What will happen is that you will
take 100% of the space for you,

146
00:10:06.786 --> 00:10:11.937
but the status content will
actually be on top of it.

147
00:10:11.937 --> 00:10:15.182
So in this case, you can see the clock and

148
00:10:15.182 --> 00:10:20.050
you can see the battery status and
all the icons will appear,

149
00:10:20.050 --> 00:10:25.705
they will appear, but now you can
render from the top content, okay?

150
00:10:25.705 --> 00:10:29.714
It's kind of a full screen, in Android,
the status bar disappears completely, so

151
00:10:29.714 --> 00:10:32.663
you don't see the clock,
okay you don't see the hour [COUGH].

152
00:10:32.663 --> 00:10:37.986
So it's kind of a hack that
has been since forever on iOS.

153
00:10:37.986 --> 00:10:43.029
With Web M manifest spec, there is
no way to actually implement that.

