[00:00:00]
>> Maximiliano Firtman: So we've seen a lot today. We cover just the foundations of the PWA platform, links and discoverability. We know it's still local host URL. It's a web URL. Easy to deploy. We see that. Easy to update. You change the files, we don't need nothing special. We are still using the web.

[00:00:18]
Offline access, we've seen that service workers is the one that will let us create that offline access. How to make an installed icon and standalone, that's the manifest mainly. OS integration has to do also with manifest data. And performance and UX, we didn't explain a lot of things today, but also OS integration, we cover all the stuff on design and things that will give you a better app like experience.

[00:00:48]
There are much more around PWAs. Web push notifications, the batch API that will let you add a little rev, but it can be a dot on Android or it can be a number on your icon. The shortcuts API that will right click menu to the icon when it's installed.

[00:01:07]
The share API 2.0, the web share that will let you share files. The share target API that will let your PWA be the one that can open or receive share from other app. So then from Instagram, you can share and the target can be your PWA. You will receive, you are the target of a share operation within that device.

[00:01:31]
File handling, you can be the default handler for PDF or PNG files and so on. URL handling, you can create your own protocol that then will, if you find a link on an email or something, can open your app, your native app. And there are much more. These are all other APIs that some of them require you to first have a service worker, some of them require you to first have the web app manifest, and so on.

[00:01:59]
And at Fronted Masters, I'm not sure if you know that guy. There is always the same guy there. Here I have six workshops where you can continue the conversation with me on PWAs. On things that they are for the web platform, but at least they will help you with some things such as performance.

[00:02:18]
So web performance. Web capabilities, again, if you wanna use sensors, Bluetooth, geolocation. Vanilla JavaScript, in case you wanna get into working directly without frameworks. Web Storage AP to know more about quotas, about persistence, about index dv, how to work with databases. Web authentication API is something that we didn't mention yet, but you can use face ID or you can use the finger on Android.

[00:02:49]
And you can log in users on PWAs using those APIs. You can use pass keys on your PWAs. So you can integrate with the operating system for logging using passkeys. And JavaScript in the background, where we see more on service workers, we implement push notifications there. And also we talk about how you can synchronize data in the background.

[00:03:16]
And so there are a lot of content, so you can't get bored actually right here.
>> Learner 1: What do you think the future of PWAs are for developers? Is it something that's worth investing in, like investing time in?
>> Maximiliano Firtman: I think that if you are not investing time in them, you're not investing time on the web.

[00:03:34]
Remember, it's just the web. Let's go back to the first discussion. Forget about the name PWA, it's just a web. It's the DNA of the web. So let's go back to that idea of this is the DNA of the web. So if you care about the web, if you should be doing website.

[00:03:47]
If you're doing web apps, it's just the same. It's just the installation layer, the integration with the operating system. So I think it's still growing and don't think that this is something different. It's not like, I need to learn React Native, Flutter, or PWAs. If you're a web developer, PWAs is part of your DNA.

[00:04:13]
It's not something different that you need to learn, okay? So it's just a design pattern on the web.
>> Learner 2: I had a question. Just about the Web APK icons. So it's not like the file type of the icon itself, but it's that makes it available or accessible versus the shortcut icons.

[00:04:38]
It's just, you need to pass the PWA criteria and then-
>> Maximiliano Firtman: You need to pass the PWA criteria and you need to have a phone with Google Play services enable, and the browser should be Chrome first off.
>> Learner 2: Okay, but if you pass those requirements then-
>> Maximiliano Firtman: Then it should work.

[00:04:58]

>> Learner 2: That's what should happen.
>> Maximiliano Firtman: If you're using the emulator and not the real device, you need to check that your Chrome is updated inside the emulator, and also that your your emulator has Google Play services.
>> Learner 2: Okay.
>> Maximiliano Firtman: If you don't have that, it will fall back to shortcut.

[00:05:16]
And by the way, if, because this is using a server, it's called the Web APK minting server. It's minting a Web APK server file. So if the server is down and it cannot create the APK, it has a timeout, it's typically 20 to 30 seconds, it will fall back to shortcuts.

[00:05:33]

>> Learner 3: Say I have to handle user tokens offline and then reconcile them when back online. Would your JavaScript in the background course be a good resource for me?
>> Maximiliano Firtman: Yes, because we see the APIs that you need to use to do that. If I remember correctly, at that particular course, someone asked specifically about that use case and I think that I did a long answer on specifically that question.

[00:06:01]
So yeah, the answer is yes.
>> Maximiliano Firtman: Okay, and again, if you wanna learn more about everything that we've seen today, you also have the Learn PWA course. But it's actually an ebook, not a course. It's an interactive ebook where it gets deeper on most of the stuff that we cover today and maybe something else as well, okay?

[00:06:24]
Just saying that, that's all I have for you for PWAs.
>> Learners: [APPLAUSE]
>> Maximiliano Firtman: Thank you.
>> Learners: [APPLAUSE]

