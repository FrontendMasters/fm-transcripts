WEBVTT

1
00:00:00.160 --> 00:00:02.150
&gt;&gt; Maximiliano Firtman: So,
what's a service worker?

2
00:00:02.150 --> 00:00:06.174
It's a JavaScript file
running in its own thread,

3
00:00:06.174 --> 00:00:11.602
that will act as a middleware offering
a local installed web server or

4
00:00:11.602 --> 00:00:16.470
web proxy for your PWA,
including resources and API calls.

5
00:00:16.470 --> 00:00:17.500
Let's try to simplify that.

6
00:00:18.530 --> 00:00:22.681
Anyway, this is my definition
that is a bit extreme,

7
00:00:22.681 --> 00:00:28.880
because I'm talking about the web server,
a web server that runs client side.

8
00:00:28.880 --> 00:00:32.969
But actually, you can make a web
server running client-side.

9
00:00:32.969 --> 00:00:38.071
And it's not the full definition,
because there are more steps,

10
00:00:38.071 --> 00:00:42.825
such as, it will serve files
in the name of the server.

11
00:00:42.825 --> 00:00:45.535
So it's responding in
the name of the server.

12
00:00:45.535 --> 00:00:47.035
So, this is how it works.

13
00:00:47.035 --> 00:00:52.005
You have your PWA and your PWA is here.

14
00:00:52.005 --> 00:00:56.675
It's connecting to a server or
to cross-domain services.

15
00:00:56.675 --> 00:01:01.208
Can be a CDN, Google Analytics,
anything, okay?

16
00:01:01.208 --> 00:01:04.656
Amazon, Azure, AWS, whatever.

17
00:01:04.656 --> 00:01:08.368
But the service worker is in the middle,
so it's a proxy.

18
00:01:09.768 --> 00:01:13.723
Everything that goes to a network
will go through the service worker.

19
00:01:13.723 --> 00:01:18.908
So, the service worker has
a lot of power because now it

20
00:01:18.908 --> 00:01:24.226
can trap the request and
it can say no, you know what?

21
00:01:24.226 --> 00:01:27.006
You are not going to the real server.

22
00:01:27.006 --> 00:01:31.853
I will respond for the server locally,
because remember, the service worker is

23
00:01:31.853 --> 00:01:36.286
in user devices, so it's in client-side,
it's in your phone, okay?

24
00:01:37.596 --> 00:01:42.314
So the service worker that runs
client-side in the browser's engine.

25
00:01:42.314 --> 00:01:43.704
HTTPS is required.

26
00:01:43.704 --> 00:01:46.428
We know at this point it's
kind of a default, but

27
00:01:46.428 --> 00:01:49.955
just to remind that,
with the exception of localhost, okay?

28
00:01:49.955 --> 00:01:52.824
The localhost, we don't need the HTTPS.

29
00:01:52.824 --> 00:01:54.737
And the service worker is installed,

30
00:01:54.737 --> 00:01:58.844
actually, the term is typically
registered, is registered by a web page.

31
00:01:58.844 --> 00:02:03.490
Any web page, so an HTML,
actually a JavaScript within an HTML,

32
00:02:03.490 --> 00:02:05.859
will register a service worker.

33
00:02:05.859 --> 00:02:07.619
We will do that in a sec.

34
00:02:07.619 --> 00:02:14.149
It has its own thread and
lifecycle compared with your page, okay?

35
00:02:14.149 --> 00:02:16.308
It will act as a network proxy or

36
00:02:16.308 --> 00:02:22.991
a local web server in the name of the real
server once it's registered and active.

37
00:02:22.991 --> 00:02:25.541
It has some abilities to
run in the background.

38
00:02:25.541 --> 00:02:29.838
So you close the browser,
you close the web app, you close the PWA,

39
00:02:29.838 --> 00:02:35.381
you close the browser, and the service
worker can still be executing code.

40
00:02:35.381 --> 00:02:37.011
There is no need for user's permission.

41
00:02:37.011 --> 00:02:38.228
Have you ever seen a message or

42
00:02:38.228 --> 00:02:41.065
a permission that you're saying do
you want that as service worker?

43
00:02:43.495 --> 00:02:46.385
No, but let me do that.

44
00:02:46.385 --> 00:02:48.155
Let me do a test with you.

45
00:02:48.155 --> 00:02:51.125
Open Chrome, any Chrome that you have.

46
00:02:51.125 --> 00:02:53.560
If you have an Android,
it can also be your Android phone.

47
00:02:53.560 --> 00:03:01.224
And try this,
chrome://serviceworker-internals.

48
00:03:04.024 --> 00:03:08.609
&gt;&gt; Maximiliano Firtman: When you
get there, you will find a list,

49
00:03:08.609 --> 00:03:14.373
probably a very long list,
very long list of service

50
00:03:14.373 --> 00:03:20.287
workers that are actually
installed in your Chrome.

51
00:03:20.287 --> 00:03:26.466
So these are web servers that
are installed in your Chrome instance.

52
00:03:27.486 --> 00:03:28.206
Did it work?

53
00:03:28.206 --> 00:03:28.766
Do you see?

54
00:03:30.146 --> 00:03:34.326
So, at first, it's kind of scary, right?

55
00:03:34.326 --> 00:03:40.894
Okay, so I've never accepted
the installation of these files, okay?

56
00:03:40.894 --> 00:03:44.233
Now for example, this one,
everyone has a scope.

57
00:03:44.233 --> 00:03:47.389
So it's discussions.apple.com,

58
00:03:47.389 --> 00:03:51.830
which sounds like a good name for
a PWA course, okay?

59
00:03:51.830 --> 00:03:53.815
Let's discuss about Apple.

60
00:03:53.815 --> 00:03:56.495
So, discussions.apple.com.

61
00:03:56.495 --> 00:04:00.565
Right now it says, well it has an ID
by internal self, but it says,

62
00:04:00.565 --> 00:04:03.988
installation status activated,
or it's activated,

63
00:04:03.988 --> 00:04:08.901
so it's using my CPU without my knowledge
because I'm not using that website.

64
00:04:08.901 --> 00:04:13.344
But actually it says stopped,
so it's not running, okay?

65
00:04:13.344 --> 00:04:17.927
But now, let me show you something,
I will open a new window here, so

66
00:04:17.927 --> 00:04:20.830
we can see what happens like this.

67
00:04:20.830 --> 00:04:24.963
And I will go to discussions.apple.com,
and

68
00:04:24.963 --> 00:04:28.880
before pressing Return, let me do this.

69
00:04:28.880 --> 00:04:38.805
I will say
/steve-jobs/was-right/pwa-rocks,

70
00:04:38.805 --> 00:04:40.083
okay?

71
00:04:40.083 --> 00:04:43.213
Something like that, of course,
I guess that it's a 404, right?

72
00:04:43.213 --> 00:04:45.546
It should be a 404 server side,
I don't know.

73
00:04:45.546 --> 00:04:52.233
But if I hit Return, now, you can
see there is a client here going on.

74
00:04:52.233 --> 00:04:56.107
And actually it was so fast that we
haven't seen it, but I can a stop but

75
00:04:56.107 --> 00:04:59.610
something appear here,
appear a client, okay?

76
00:04:59.610 --> 00:05:01.950
Looking for
something in the Apple community.

77
00:05:01.950 --> 00:05:06.470
So it was really fast in this case
because there is no fetch handler.

78
00:05:06.470 --> 00:05:08.670
It just does not exist.

79
00:05:08.670 --> 00:05:10.500
But you can see that it's connected, okay?

80
00:05:10.500 --> 00:05:12.310
There is a client there going on.

81
00:05:12.310 --> 00:05:13.810
Let me try another one.

82
00:05:13.810 --> 00:05:18.709
Let me look for one that do have,
by the way, we can even see the script,

83
00:05:18.709 --> 00:05:22.235
those scripts are downloaded
into your computer.

84
00:05:22.235 --> 00:05:23.815
This is Google Drive.

85
00:05:23.815 --> 00:05:27.430
Let me try to find one
that do have some sites,

86
00:05:27.430 --> 00:05:30.675
I don't know what they are, actually.

87
00:05:30.675 --> 00:05:37.125
So, firebase.google,
let's try this one, so Google Firebase.

88
00:05:37.125 --> 00:05:41.963
So, again, look here,
Running Status: STOPPED.

89
00:05:41.963 --> 00:05:43.069
Let's see if we can catch it.

90
00:05:43.069 --> 00:05:49.143
firebase.google.com, boom,
starting running.

91
00:05:49.143 --> 00:05:50.933
So this is staying there.

92
00:05:50.933 --> 00:05:52.703
So now it's running, okay?

93
00:05:52.703 --> 00:05:55.393
So serviceworker is running,
the script is running.

94
00:05:55.393 --> 00:05:59.467
And there are two clients,
you say, why two clients?

95
00:05:59.467 --> 00:06:00.611
I have only one.

96
00:06:01.901 --> 00:06:04.310
My guess is probably an iframe,

97
00:06:04.310 --> 00:06:09.141
because the iframe is another navigation,
another document.

98
00:06:09.141 --> 00:06:12.171
So this page has an iframe,
I can see the URL right here.

99
00:06:12.171 --> 00:06:16.361
So what happens if I well, if I change
the tab, it's still running, okay?

100
00:06:16.361 --> 00:06:19.156
What happens if I close the tab?

101
00:06:19.156 --> 00:06:20.716
What do you think?

102
00:06:22.066 --> 00:06:22.776
Well, now it's a stop.

103
00:06:22.776 --> 00:06:25.268
I say, hey, come on,
my page is still here.

104
00:06:25.268 --> 00:06:26.516
Running.

105
00:06:26.516 --> 00:06:27.626
Can you see?
Do you see that?

106
00:06:27.626 --> 00:06:28.386
Stopped, running.

107
00:06:28.386 --> 00:06:30.276
Say well, what happened?

108
00:06:30.276 --> 00:06:31.436
Let me close the tab.

109
00:06:31.436 --> 00:06:33.546
I closed the tab.

110
00:06:33.546 --> 00:06:34.356
And it's still running.

111
00:06:36.206 --> 00:06:37.966
You weren't probably expecting that.

112
00:06:37.966 --> 00:06:39.829
You were not expecting that.

113
00:06:39.829 --> 00:06:40.889
So why is that?

114
00:06:40.889 --> 00:06:44.699
Because it has its own life
cycle separated from the client.

115
00:06:44.699 --> 00:06:49.179
It takes a couple of seconds, typically
around 30 to 40 seconds in Chrome.

116
00:06:49.179 --> 00:06:53.103
It depends on the browser, and
if it's no there are no clients,

117
00:06:53.103 --> 00:06:55.879
no one is requesting
files from that domain.

118
00:06:55.879 --> 00:06:59.171
Says, okay, I'm done, okay?

119
00:06:59.171 --> 00:07:01.965
Actually, it's not the service
worker saying that,

120
00:07:01.965 --> 00:07:04.651
it's a browser saying you are done, okay?

121
00:07:04.651 --> 00:07:08.246
So the script is not responsible for
that, and now it's a stop.

122
00:07:08.246 --> 00:07:14.431
And waking up again in the future if there
is another navigation to that domain.

123
00:07:14.431 --> 00:07:20.796
If a message has been received, a push
notification message has been received.

124
00:07:20.796 --> 00:07:25.288
If there is a background sync operation,
there are a lot of things that may happen

125
00:07:25.288 --> 00:07:29.216
and may turn on that JavaScript
file in the background.

126
00:07:29.216 --> 00:07:31.356
&gt;&gt; Audience: Are you going to talk
about push notifications at all?

127
00:07:32.396 --> 00:07:36.062
&gt;&gt; Maximiliano Firtman: So
push notifications are on top

128
00:07:36.062 --> 00:07:39.194
of these service workers.

129
00:07:41.695 --> 00:07:45.530
Originally there is no direct relationship
between progressive web apps and

130
00:07:45.530 --> 00:07:46.785
push notifications.

131
00:07:46.785 --> 00:07:48.825
It's just one feature, okay?

132
00:07:48.825 --> 00:07:51.665
So, we won't do that here.

133
00:07:51.665 --> 00:07:53.496
I can show you a quick idea if you want.

134
00:07:53.496 --> 00:07:58.344
But, the other course,
JavaScript in the Background,

135
00:07:58.344 --> 00:08:03.804
covers web push notifications,
and we do a full sample on that.

