WEBVTT

1
00:00:00.120 --> 00:00:01.670
Now we get to the fun part.

2
00:00:01.670 --> 00:00:05.400
And we get to fetch some of our
notes into our app and get it going.

3
00:00:05.400 --> 00:00:08.860
So the first thing we wanna do is,
let's just seed our database.

4
00:00:08.860 --> 00:00:09.820
Because for

5
00:00:09.820 --> 00:00:13.360
the sake of brevity, we're actually only
gonna focus on pulling in the content.

6
00:00:13.360 --> 00:00:16.340
We're not gonna create a UI right
now to create some notes and

7
00:00:16.340 --> 00:00:17.610
update some notes and things like that.

8
00:00:17.610 --> 00:00:19.390
We're just gonna pull the notes down.

9
00:00:19.390 --> 00:00:21.400
So let's just seed our
database with some notes.

10
00:00:21.400 --> 00:00:23.350
So you can head over to
that data data file.

11
00:00:24.430 --> 00:00:29.700
And I'm gonna go there, and
I'm just going to seed some

12
00:00:29.700 --> 00:00:33.310
notes like that little hack that i always
do to like fill an array with some stuff.

13
00:00:33.310 --> 00:00:35.690
So if you never use it before, new array,

14
00:00:35.690 --> 00:00:40.080
you put a number that's going to create
an amount of entries in an array.

15
00:00:40.080 --> 00:00:43.080
You do a dot fill whatever
you put in fill is gonna,

16
00:00:43.080 --> 00:00:45.910
because right now if you just do
new array, it'll be 15 on defines.

17
00:00:45.910 --> 00:00:50.920
They'll say undefined 15 times do a dot
fill, that's gonna change them all to one.

18
00:00:50.920 --> 00:00:53.130
So now I have an array of one 15 times and

19
00:00:53.130 --> 00:00:55.640
then i'm going to map over that
to change them all to an object.

20
00:00:57.020 --> 00:01:00.870
Basically, so it's just like a quick
way to fill an array with some stuff,

21
00:01:00.870 --> 00:01:01.710
something I've always said.

22
00:01:01.710 --> 00:01:02.900
I think there's a quicker way to do it.

23
00:01:02.900 --> 00:01:05.300
But this is how i always just do it.

24
00:01:06.730 --> 00:01:07.460
Cool.

25
00:01:07.460 --> 00:01:11.280
So yeah, we got the database
seeded with some notes here.

26
00:01:11.280 --> 00:01:15.682
And then now, what we're gonna
do is we're going to create.

27
00:01:15.682 --> 00:01:18.280
We're gonna figure out what we
need to do to get this data.

28
00:01:18.280 --> 00:01:22.125
So let's think about getting
all the notes from the page.

29
00:01:22.125 --> 00:01:25.100
So, how could we get this?

30
00:01:25.100 --> 00:01:26.900
Can we get it client side?

31
00:01:26.900 --> 00:01:27.590
Absolutely.

32
00:01:27.590 --> 00:01:30.550
We can do client side but
that's not specific to next,

33
00:01:30.550 --> 00:01:32.110
we're doing next to s here.

34
00:01:32.110 --> 00:01:33.720
First off client side.

35
00:01:33.720 --> 00:01:36.530
Like that without
entertaining other ideas, so

36
00:01:36.530 --> 00:01:40.830
that means we really get server side
props or we have get static props.

37
00:01:40.830 --> 00:01:43.930
So I decided to get server side
props on getting all the notes.

38
00:01:43.930 --> 00:01:50.180
And that's because I really want you all
to observe how that works at runtime for

39
00:01:50.180 --> 00:01:52.810
server side rendering, so you can
really understand what's happening.

40
00:01:54.090 --> 00:01:56.119
And so
we're just gonna do a getServerSideProps,

41
00:01:56.119 --> 00:01:57.544
you could do getStaticProps here.

42
00:01:57.544 --> 00:01:59.896
But the thing is this was
a real application and

43
00:01:59.896 --> 00:02:03.270
we were actually taking notes and
doing notes like that.

44
00:02:03.270 --> 00:02:06.760
I don't have any notes you're gonna
have and I don't wanna refresh the whole

45
00:02:06.760 --> 00:02:10.850
database at bill time and stick all
the notes on there, I don't wanna do that.

46
00:02:10.850 --> 00:02:13.990
Maybe I do, maybe I don't, but
for this application, I don't.

47
00:02:13.990 --> 00:02:15.700
I don't think the data is fit for

48
00:02:15.700 --> 00:02:19.010
that, so i'm just gonna get it
every time when you request it.

49
00:02:19.010 --> 00:02:19.920
That's what I'm gonna do.

50
00:02:19.920 --> 00:02:22.741
You got to make that decision,
that business decision.

51
00:02:22.741 --> 00:02:27.455
But at the same time next has
some really good techniques

52
00:02:27.455 --> 00:02:32.385
cooked inside of it that really
helped with a lot of stuff.

53
00:02:32.385 --> 00:02:37.050
Like even getServerSideProps and
server side rendered pages are cached.

54
00:02:37.050 --> 00:02:38.355
Even they are pre rendered.

55
00:02:38.355 --> 00:02:40.910
So, it still works pretty well,

56
00:02:40.910 --> 00:02:43.430
even though they don't recommend
doing it that well, and I don't.

57
00:02:43.430 --> 00:02:45.840
I don't recommend using
getServiceSideProps all the time.

58
00:02:45.840 --> 00:02:48.900
But even then they kind of save
you with some of that caching.

59
00:02:48.900 --> 00:02:52.000
So, enough talk, let's get some data.

60
00:02:52.000 --> 00:02:54.040
So, I'm just gonna copy
that fetch right there.

61
00:02:54.040 --> 00:02:57.520
And then,
I'm gonna go into our index right here.

62
00:02:57.520 --> 00:03:04.222
I'm going to export a function or
an async function for

63
00:03:04.222 --> 00:03:08.310
getServerSideProps like that.

64
00:03:11.033 --> 00:03:14.830
And then what I'm going to do
is I'm going to fetch our data.

65
00:03:14.830 --> 00:03:19.060
So fetch in this case can't
take a relative path.

66
00:03:19.060 --> 00:03:21.080
So you might be tempted to like,
well, I'm already on my API,

67
00:03:21.080 --> 00:03:22.950
I should just be able to do that.

68
00:03:22.950 --> 00:03:26.550
You'll get an error saying you can't take
relative paths inside of fetch, right?

69
00:03:26.550 --> 00:03:31.530
Has to be a full path and so then, I don't
know if you've connected the dots yet.

70
00:03:31.530 --> 00:03:35.230
It's like, well, how would we, if we were
to deploy this then like, obviously,

71
00:03:35.230 --> 00:03:35.910
this isn't gonna work.

72
00:03:35.910 --> 00:03:37.030
This is kinda gross.

73
00:03:37.030 --> 00:03:37.920
So how do we get a URL?

74
00:03:37.920 --> 00:03:40.060
I mean,
there's a lot of ways to get the URL.

75
00:03:40.060 --> 00:03:41.980
I mean, you get the headers here,
you could probably inspect it and

76
00:03:41.980 --> 00:03:43.290
get the URL if you want.

77
00:03:43.290 --> 00:03:45.781
Or you can be explicit and
just use environment variables, right?

78
00:03:45.781 --> 00:03:49.007
So we have the next config,
put an environment variable in here for

79
00:03:49.007 --> 00:03:52.900
your URLs for staging production
local host, and use them here.

80
00:03:52.900 --> 00:03:53.410
Pretty simple.

81
00:03:53.410 --> 00:03:56.130
So that's what I recommend, but
we'll just hard code for now.

82
00:03:56.130 --> 00:03:58.460
So we'll get fetch,
if you've ever used fetch before,

83
00:03:58.460 --> 00:04:03.820
you have to call jsn on it, because
this is literally one of our fetch.

84
00:04:03.820 --> 00:04:05.600
Then we'll get the data here.

85
00:04:05.600 --> 00:04:11.419
And now it'll be await,
res.json, like that.

86
00:04:11.419 --> 00:04:15.829
So we get the data and then on the API
i always return a data property,so I'm

87
00:04:15.829 --> 00:04:21.150
just gonna destructure that so I don't
have to say data.data, which is gross.

88
00:04:21.150 --> 00:04:23.780
And then what I'm gonna do is I'm
just gonna log this note right quick.

89
00:04:26.330 --> 00:04:34.186
Like that, and then I was going to return
some props that has notes on it like that.

90
00:04:34.186 --> 00:04:38.166
Because this should be all
the notes because I'm doing

91
00:04:38.166 --> 00:04:42.590
a get request to API/note,
which is all the notes, right?

92
00:04:42.590 --> 00:04:43.750
So let's do that.

93
00:04:43.750 --> 00:04:48.590
And then we can see here we need to wait,
I'm on the wrong page.

94
00:04:48.590 --> 00:04:49.471
Sorry.

95
00:04:49.471 --> 00:04:51.630
Wait, this is the wrong page.

96
00:04:51.630 --> 00:04:53.590
Let me go to note index.

97
00:04:53.590 --> 00:04:54.440
There we go.

98
00:04:54.440 --> 00:04:56.380
Or notes index.

99
00:04:56.380 --> 00:04:56.880
There we go.

100
00:04:58.410 --> 00:05:00.090
Well, so put that back in there.

101
00:05:01.310 --> 00:05:03.449
So now that we have the notes,
you can see I already have

102
00:05:04.710 --> 00:05:06.758
these marked-out notes
that I have on the client.

103
00:05:06.758 --> 00:05:10.180
So I'm just gonna erase that because
I put those on the server side now.

104
00:05:10.180 --> 00:05:15.010
And then now I can use the props that
I'm passing in, which is gonna be notes.

105
00:05:15.010 --> 00:05:17.626
I can use those right there,
which are the same name, so I can do that.

106
00:05:17.626 --> 00:05:18.970
And this should work exactly the same.

107
00:05:21.603 --> 00:05:24.220
All right, so let's test it,
let's go back.

108
00:05:24.220 --> 00:05:24.860
Let's go here.

109
00:05:25.860 --> 00:05:26.604
Go to notes.

110
00:05:28.822 --> 00:05:36.200
It looks like something messed,
yeah, I don't have any notes.

111
00:05:36.200 --> 00:05:37.434
I gotta restart this.

112
00:05:40.040 --> 00:05:43.052
Let's see, okay.

113
00:05:45.210 --> 00:05:49.880
I'll see okay, looks like I'm still
getting back a janky response here.

114
00:05:49.880 --> 00:05:52.440
Let's see,
did i do my notes data thing wrong.

115
00:05:53.660 --> 00:05:55.850
Notes notes.

116
00:05:55.850 --> 00:05:57.060
Don't look like it, let's see.

117
00:05:58.420 --> 00:06:01.333
See what that looks like.

118
00:06:13.783 --> 00:06:15.780
That looks good to me.

119
00:06:15.780 --> 00:06:18.680
I still gotta check off stuff in there,
okay?

120
00:06:18.680 --> 00:06:21.130
I'm like, wait, that definitely works.

121
00:06:21.130 --> 00:06:22.010
There we go.

122
00:06:23.340 --> 00:06:24.407
Sorry about that.

123
00:06:32.080 --> 00:06:35.410
Okay, boom, there we go.

124
00:06:35.410 --> 00:06:38.390
So let me get some notes
on the page which looks

125
00:06:38.390 --> 00:06:41.100
very similar to what we
already have before, so boom.

126
00:06:41.100 --> 00:06:43.620
Got some notes,
all that data's coming down,

127
00:06:43.620 --> 00:06:47.530
we can see the log here is
logging on the server, right?

128
00:06:47.530 --> 00:06:48.800
So I'm logging those notes.

129
00:06:48.800 --> 00:06:50.972
They log on a server.

130
00:06:50.972 --> 00:06:53.748
Now we can check
the actual client here and

131
00:06:53.748 --> 00:06:56.773
you can notice they
don't log on the client.

132
00:06:56.773 --> 00:06:59.446
As it goes,
that code doesn't run on the client.

133
00:06:59.446 --> 00:07:00.710
It only runs on the server.

134
00:07:00.710 --> 00:07:02.640
And I really wanna emphasize that point.

135
00:07:02.640 --> 00:07:07.430
This good service side props
only runs on the server.

136
00:07:08.910 --> 00:07:13.950
So, if I can get to it again, there we go.

137
00:07:16.922 --> 00:07:17.900
There we go, yeah.

138
00:07:17.900 --> 00:07:20.310
This only runs on the service,
so good to go there.

