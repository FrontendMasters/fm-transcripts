WEBVTT

1
00:00:00.012 --> 00:00:04.410
All right, navigation, what's routing if
we can't navigate between pages, right?

2
00:00:04.410 --> 00:00:06.560
So how do we do that?

3
00:00:06.560 --> 00:00:08.925
It's a little different than
what you would normally do.

4
00:00:08.925 --> 00:00:13.145
But if you've ever used any routing
framework, then it'll feel very familiar.

5
00:00:13.145 --> 00:00:19.410
So basically,
Next.js gives us a Link component, okay.

6
00:00:19.410 --> 00:00:24.130
So this Link component allows
us to route between pages.

7
00:00:24.130 --> 00:00:26.700
The important thing to
remember here though.

8
00:00:26.700 --> 00:00:30.553
And this is where it starts to get
a little challenging to think about,

9
00:00:30.553 --> 00:00:34.082
especially if you've never dealt
with server side rendering or

10
00:00:34.082 --> 00:00:37.805
pre rendering is that the link
component is only used to navigate for

11
00:00:37.805 --> 00:00:39.930
client-side transitions, right.

12
00:00:39.930 --> 00:00:41.615
And when I say client side,

13
00:00:41.615 --> 00:00:45.205
I mean literally using the HTML5
push state browser, and

14
00:00:45.205 --> 00:00:50.460
it's navigating purely on the client side,
there's no request to the server.

15
00:00:50.460 --> 00:00:53.200
And you'll see when we do this,
what I'm talking about.

16
00:00:53.200 --> 00:00:55.030
So this is only for client side routing.

17
00:00:55.030 --> 00:00:59.330
So if you're trying to get that
SPA-like fast navigation behavior,

18
00:00:59.330 --> 00:01:00.780
you use the Link component, right?

19
00:01:00.780 --> 00:01:03.634
And that's what it's used for.
If you're not trying to do client side

20
00:01:03.634 --> 00:01:08.562
routing, because you're going to
an external link or you just want to force

21
00:01:08.562 --> 00:01:13.580
a rerender, then you just use
an anchor tag, which HTML already has.

22
00:01:13.580 --> 00:01:17.170
So the link tag is what Next.js gives us.

23
00:01:17.170 --> 00:01:19.830
And let's just talk about it a little bit.

24
00:01:19.830 --> 00:01:23.520
So it's a little different than
what you might have used before.

25
00:01:23.520 --> 00:01:27.490
So the first thing is that it
has this href prop on it, which

26
00:01:27.490 --> 00:01:31.420
is very similar to an href on anchor tag,
except it actually doesn't take an href.

27
00:01:31.420 --> 00:01:34.895
So you're not gonna put a full URL here.

28
00:01:34.895 --> 00:01:36.556
Remember, this is client-side routing, so

29
00:01:36.556 --> 00:01:38.870
everything's gonna be
pretty much relative here.

30
00:01:38.870 --> 00:01:41.810
But what you wanna put here
is actually gonna be the path

31
00:01:41.810 --> 00:01:43.490
to the name of the page, right?

32
00:01:43.490 --> 00:01:48.577
So for instance,
the name of this page, index.js,

33
00:01:48.577 --> 00:01:54.030
would just be /notes because
it's the index of notes.

34
00:01:54.030 --> 00:01:55.770
So it's relative to the pages directory.

35
00:01:55.770 --> 00:01:56.820
So that's the name of the page.

36
00:01:56.820 --> 00:01:59.490
So that's what you would put in that href.

37
00:01:59.490 --> 00:02:01.130
So let's give it a try.

38
00:02:01.130 --> 00:02:06.280
So what I'm gonna do is I'm
going to go to my index page,

39
00:02:06.280 --> 00:02:14.921
I'm going to import this Link
from next/link, like that.

40
00:02:16.770 --> 00:02:20.340
And now what I'm gonna do is I'm
gonna just link to some pages here.

41
00:02:20.340 --> 00:02:26.360
So we'll do this, and

42
00:02:26.360 --> 00:02:30.760
let's get rid of this thing very quick,
the h1, I'll put that back in there.

43
00:02:30.760 --> 00:02:32.330
And then I'm just gonna make
a quick little link here.

44
00:02:32.330 --> 00:02:33.552
So you can say Link like this.

45
00:02:36.358 --> 00:02:37.680
And then we'll put a href.

46
00:02:37.680 --> 00:02:42.100
And remember, I've gotta put the name of
the page as it is in the pages directory.

47
00:02:42.100 --> 00:02:44.290
So in this case,
I wanna navigate to notes.

48
00:02:44.290 --> 00:02:45.344
That's the name of this page.

49
00:02:45.344 --> 00:02:50.750
The other thing is that you can't
just put Note in here like this.

50
00:02:50.750 --> 00:02:51.540
So let me show you why.

51
00:02:51.540 --> 00:02:58.520
So if I go back and
I go to my Index Page and I click on Note.

52
00:03:01.010 --> 00:03:04.580
Okay, in this case, hold on, actually,

53
00:03:04.580 --> 00:03:08.553
before I say something,
let me just make sure.

54
00:03:08.553 --> 00:03:09.940
Okay, yeah, it was smart about it.

55
00:03:09.940 --> 00:03:13.056
Okay, so in this case,
they took the href and

56
00:03:13.056 --> 00:03:16.094
they knew what I was doing and
they implied.

57
00:03:16.094 --> 00:03:20.715
But it's actually safe to actually put
an anchor tag in here [COUGH] excuse me,

58
00:03:20.715 --> 00:03:24.130
with no href and
wrap that around your content.

59
00:03:24.130 --> 00:03:26.430
And that's actually
recommended in the docs.

60
00:03:26.430 --> 00:03:30.060
So if I do that,
you get the same thing here.

61
00:03:30.060 --> 00:03:37.450
And I think what that does is it passes
the href respectively to the anchor

62
00:03:37.450 --> 00:03:42.610
tag without losing context of the URL,
or at least that's what it used to do.

63
00:03:42.610 --> 00:03:44.330
It looks like they just imply it now.

64
00:03:44.330 --> 00:03:48.260
So I guess that's good,
because I always hated wrapping the a,

65
00:03:48.260 --> 00:03:50.504
because it always just
looks weird with no href.

66
00:03:50.504 --> 00:03:54.360
And sometimes you'll have
an ESLint linter that'll be like,

67
00:03:54.360 --> 00:03:56.080
you can't have an anchor tag with an href.

68
00:03:56.080 --> 00:03:57.490
And then you got to go disable that.

69
00:03:57.490 --> 00:03:59.220
It's just like really annoying.

70
00:03:59.220 --> 00:04:02.678
But I highly recommend just wrapping
your content inside of a link tag and

71
00:04:02.678 --> 00:04:03.425
an anchor tag.

72
00:04:03.425 --> 00:04:05.150
That's what you're gonna
see in this course.

73
00:04:05.150 --> 00:04:07.456
And that's actually what they
recommend in the documentation.

74
00:04:07.456 --> 00:04:10.734
But it does look like they do some
optimizations there with that.

75
00:04:10.734 --> 00:04:14.580
But I think those optimizations work
because it's such a simple route.

76
00:04:14.580 --> 00:04:16.428
When we get to more complicated things,
it won't work.

77
00:04:16.428 --> 00:04:22.700
So, this is pretty much how you use the
Link tag when navigating to a static path.

78
00:04:22.700 --> 00:04:27.628
Now, what we want to navigate to a dynamic
path as in this params thing here,

79
00:04:27.628 --> 00:04:31.709
and actually, I'm just gonna
change this to being just an ID,

80
00:04:31.709 --> 00:04:35.266
since that's what we're going
to be using in our app.

81
00:04:35.266 --> 00:04:38.583
If I want to navigate there,
it's a little more work.

82
00:04:38.583 --> 00:04:39.720
Not too difficult.

83
00:04:39.720 --> 00:04:44.858
So what I'll do is I'll go to
the index notes page here.

84
00:04:44.858 --> 00:04:51.445
And I'm just gonna say,
this is the index note page.

85
00:04:51.445 --> 00:04:57.772
And then I'm going to make
a link tag as well and

86
00:04:57.772 --> 00:05:02.323
import it up top first like that.

87
00:05:02.323 --> 00:05:06.060
And make a link component like that.

88
00:05:06.060 --> 00:05:09.981
So very similar, we add an href.

89
00:05:09.981 --> 00:05:17.010
And I'm going to link to /notes/
literally the name of it.

90
00:05:17.010 --> 00:05:19.029
So I have to put that,
this is the name of that file.

91
00:05:20.350 --> 00:05:22.634
Like that, well, not JSX, but just that.

92
00:05:22.634 --> 00:05:25.160
So I'm gonna put the name,
which is exactly what it is here.

93
00:05:25.160 --> 00:05:26.320
It's a bracket with id.

94
00:05:26.320 --> 00:05:28.794
So this is why I said href is
a little different than the href from

95
00:05:28.794 --> 00:05:29.410
an anchor tag.

96
00:05:29.410 --> 00:05:31.470
You're not actually putting a URL here.

97
00:05:31.470 --> 00:05:33.268
This is not the URL to this page.

98
00:05:33.268 --> 00:05:35.968
This is the name of the page,
this is the path to the page.

99
00:05:35.968 --> 00:05:37.636
So that's why I put that here.

100
00:05:37.636 --> 00:05:39.694
So how do I actually pass it an ID?

101
00:05:39.694 --> 00:05:46.213
Well, if you wanna pass in an ID,
what you would do is you would say as.

102
00:05:46.213 --> 00:05:50.740
Then as takes in a string, so, and
then this will take the actual URL.

103
00:05:50.740 --> 00:05:59.740
So I could say, well,
I want to navigate to /1 like that, right?

104
00:05:59.740 --> 00:06:03.490
Or if you have some type of variable,
you can put that variable here, right?

105
00:06:03.490 --> 00:06:05.905
We don't have a variable, so
I'm going to put 1, right?

106
00:06:05.905 --> 00:06:10.091
So that's gonna allow us to
link to a notes page here.

107
00:06:10.091 --> 00:06:13.905
So I'm gonna say this is a note for
note 1 like that.

108
00:06:13.905 --> 00:06:21.470
And actually, anchor tag, like that.

109
00:06:23.190 --> 00:06:29.140
So we can go to our notes index page,
or did I put that in wrong?

110
00:06:29.140 --> 00:06:34.617
So, There we go.

111
00:06:34.617 --> 00:06:37.516
Here we go.
And then I can click on note 1,

112
00:06:37.516 --> 00:06:40.691
which will bring us to the note one page.

113
00:06:42.604 --> 00:06:43.890
All right, pretty simple.

114
00:06:43.890 --> 00:06:45.440
They made linking pretty simple.

115
00:06:45.440 --> 00:06:45.967
And again,

116
00:06:45.967 --> 00:06:49.307
if you need to link somewhere else,
you still got a straight up anchor tag.

117
00:06:49.307 --> 00:06:51.715
Just link out, it works the same way.

118
00:06:51.715 --> 00:06:55.193
This is only for client side routing.

119
00:06:55.193 --> 00:06:56.407
Any questions on that?

120
00:06:59.831 --> 00:07:01.795
Nope?

121
00:07:01.795 --> 00:07:04.027
And yeah, you did hear me talking
about that tip for the linter.

122
00:07:04.027 --> 00:07:05.926
You can tell that really bothered me.

123
00:07:05.926 --> 00:07:10.435
[LAUGH] That accessibility issue with
the hrefs and the anchor tag and

124
00:07:10.435 --> 00:07:11.630
stuff like that.

125
00:07:11.630 --> 00:07:13.380
So yeah, fix that.

126
00:07:13.380 --> 00:07:14.166
Pretty annoying.

127
00:07:14.166 --> 00:07:17.190
All right, and then you can see here
I just have a bunch of copy and

128
00:07:17.190 --> 00:07:18.827
paste stuff here to follow along.

129
00:07:18.827 --> 00:07:20.323
But we just live coded, so

130
00:07:20.323 --> 00:07:23.657
feel free to copy this stuff
into the pages that I just did.

131
00:07:23.657 --> 00:07:26.426
I think the only difference that
I'm doing here that I didn't do is,

132
00:07:26.426 --> 00:07:29.190
I just put a whole bunch of notes
on the page, and I linked to them.

133
00:07:29.190 --> 00:07:30.560
So you can do that too, if you want to.

134
00:07:30.560 --> 00:07:31.710
In fact, you know what?

135
00:07:31.710 --> 00:07:34.520
I'll just go ahead and copy that,
so we can be consistent.

136
00:07:34.520 --> 00:07:38.740
And I'll just put that here
in the ID page, like that.

137
00:07:38.740 --> 00:07:43.980
So we have a nice consistent experience
here with some notes like that.

138
00:07:45.530 --> 00:07:50.950
Now, let's go to, Programmatic routing.

139
00:07:50.950 --> 00:07:55.850
So we talked about routing with
the Link tag, which is really cool.

140
00:07:55.850 --> 00:08:00.285
But what if you need to route
programmatically using JavaScript, right?

141
00:08:00.285 --> 00:08:02.646
Sometimes you need to do
that on some type of event.

142
00:08:02.646 --> 00:08:06.509
This person clicked, this response
came in, I need to do something,

143
00:08:06.509 --> 00:08:09.090
I need to route programmatically.

144
00:08:09.090 --> 00:08:11.260
That's where the router comes back in.

145
00:08:11.260 --> 00:08:13.926
So so far we've been using the router for
the query, but

146
00:08:13.926 --> 00:08:15.815
we can also use the router to navigate.

147
00:08:15.815 --> 00:08:20.951
And it's actually really simple because
to me it's just like a proxy on

148
00:08:20.951 --> 00:08:26.840
top of the HTML push state router,
which has pretty much the same methods.

149
00:08:26.840 --> 00:08:29.660
So if you don't have any
experience with that, that's fine.

150
00:08:29.660 --> 00:08:32.360
Everything extracts that anyway,
every router uses that.

151
00:08:32.360 --> 00:08:36.250
So I don't expect you to have
experience with that router.

152
00:08:36.250 --> 00:08:37.928
Unless you've built a router library.

153
00:08:37.928 --> 00:08:40.230
But this thing pretty
much just proxies that.

154
00:08:40.230 --> 00:08:44.830
So for instance, if we want to navigate
like this, we can make a button,

155
00:08:44.830 --> 00:08:48.350
we can say on click, and
then we can push to a router.

156
00:08:48.350 --> 00:08:50.550
We're not going to do this
in our note taking app.

157
00:08:50.550 --> 00:08:53.930
So I'm not going to just put this
in there, but just an example.

158
00:08:53.930 --> 00:08:54.762
That's how you would do it.

159
00:08:54.762 --> 00:08:58.802
I also link to all the many
methods that exist on this router.

160
00:08:58.802 --> 00:09:02.785
There's well over ten,
there's a lot of methods.

161
00:09:02.785 --> 00:09:06.384
Because like I said, it really
proxies the HTML5 push state router.

162
00:09:06.384 --> 00:09:10.109
So there's a lot of things you
can do on there, like refresh,

163
00:09:10.109 --> 00:09:14.420
replace instead of push,
if you wanna just change the history.

164
00:09:14.420 --> 00:09:17.100
Different things like that,
which is really good for query strings.

165
00:09:17.100 --> 00:09:18.320
Stuff like that.

166
00:09:18.320 --> 00:09:21.320
So, yeah,
you can look at those methods, but

167
00:09:21.320 --> 00:09:24.108
the most common one is push,
and that's how you would do it.

168
00:09:24.108 --> 00:09:27.190
The important thing to remember about push
is that it pretty much acts very much like

169
00:09:27.190 --> 00:09:29.600
Link, it takes the same two arguments.

170
00:09:29.600 --> 00:09:32.143
So it's going to take
the name of the page, right.

171
00:09:32.143 --> 00:09:35.971
So in this case, the name is slash,
or in this case,

172
00:09:35.971 --> 00:09:38.820
the name is just like we had before.

173
00:09:38.820 --> 00:09:42.230
And then the as is the actual
resolved path, right.

174
00:09:42.230 --> 00:09:44.520
So it takes the same arguments.

175
00:09:44.520 --> 00:09:50.020
It's not the same as the HTML5 push state,
but it is the same method name, push.

176
00:09:50.020 --> 00:09:52.050
So just a little different here.

177
00:09:52.050 --> 00:09:55.111
And I think that's pretty much
the most important thing that

178
00:09:55.111 --> 00:09:56.921
you would need to know in Next.js.

179
00:09:56.921 --> 00:10:00.840
As far as when it comes to
routing programmatically.

180
00:10:02.420 --> 00:10:04.131
And again, this is only for
client side routing.

181
00:10:04.131 --> 00:10:06.490
You're not gonna be routing
on the server with this.

182
00:10:06.490 --> 00:10:09.710
Everything inside of this
component is client side, right?

183
00:10:09.710 --> 00:10:13.817
Like this logic, you can't do a on click,
can't click a button on the server, right.

184
00:10:13.817 --> 00:10:16.434
So all this happens on the client,
all right.

185
00:10:16.434 --> 00:10:18.508
So remember that.

186
00:10:18.508 --> 00:10:24.341
Any questions on routing and
navigation with Next.js?

