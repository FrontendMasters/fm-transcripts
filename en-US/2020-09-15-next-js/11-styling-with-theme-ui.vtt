WEBVTT

1
00:00:00.220 --> 00:00:02.900
You might see some funny stuff going on.

2
00:00:02.900 --> 00:00:04.980
Let's talk about this funny stuff.

3
00:00:04.980 --> 00:00:07.290
First of all, what is this?

4
00:00:07.290 --> 00:00:08.380
Why does this comment appear?

5
00:00:08.380 --> 00:00:10.363
This is a regular JavaScript comment,
and if so,

6
00:00:10.363 --> 00:00:13.500
why is it lit up like that in VS code,
VS code seems to know what it is.

7
00:00:13.500 --> 00:00:18.520
And then why am I importing JSX from theme
UI but I'm not actually using it anywhere.

8
00:00:19.910 --> 00:00:21.580
I mean, other than these comments,
I guess.

9
00:00:21.580 --> 00:00:27.370
And then the last thing, what is this sx
property on a on these HTML elements?

10
00:00:27.370 --> 00:00:32.400
I don't remember these HTML elements
having an sx property on them.

11
00:00:32.400 --> 00:00:34.060
Yes, let's talk about that.

12
00:00:34.060 --> 00:00:35.310
This is what Theme UI does.

13
00:00:35.310 --> 00:00:38.860
So the first thing is,
this is what's called JavaScript.

14
00:00:40.140 --> 00:00:41.670
What was it, pragma.

15
00:00:41.670 --> 00:00:45.616
So, if you don't know what that means,
who knows what that means?

16
00:00:45.616 --> 00:00:50.369
It's basically a hint or
a directive to tell the compiler,

17
00:00:50.369 --> 00:00:54.835
which in this case will be
Babel most likely that "Hey,

18
00:00:54.835 --> 00:00:59.111
I'm gonna let you know that
when you go compile JSFs,

19
00:00:59.111 --> 00:01:03.578
I actually want you to use this
JSX tool to compile JSX and

20
00:01:03.578 --> 00:01:06.524
not react", and it's actually for

21
00:01:06.524 --> 00:01:12.365
the same reason why you always have to
import React to the top of your app.

22
00:01:12.365 --> 00:01:15.801
I don't know if you've ever realized,
like, "why do I always have to re-import

23
00:01:15.801 --> 00:01:19.130
React inside of our JSX component,
even though I never use it"?

24
00:01:19.130 --> 00:01:23.750
Well, it's because you need to, the
compiler needs to know how to compile JSX.

25
00:01:23.750 --> 00:01:27.860
There's a JSX lib inside of here that
tells the compiler how to do it.

26
00:01:27.860 --> 00:01:30.960
That's why you always have to
import React on top of your file.

27
00:01:30.960 --> 00:01:33.250
And then the reacts you know,
the Babel plugin and

28
00:01:33.250 --> 00:01:36.520
stuff knows how to get it from React and
knows how to compile it.

29
00:01:36.520 --> 00:01:39.920
Well, we're not gonna use the React
compiler, we're going to use this JSX

30
00:01:39.920 --> 00:01:44.030
compiler, which does the exact same thing
as the React compiler, with the extra

31
00:01:44.030 --> 00:01:49.240
benefit of allowing us to use an sx
property on every single element.

32
00:01:50.308 --> 00:01:54.370
And this xx property, basically you
can think of this as inline styles.

33
00:01:54.370 --> 00:01:58.020
So if you were to put like a style prop
on an element, and you were to add some

34
00:01:58.020 --> 00:02:02.770
styles to it, this is the same thing,
except it has a different output.

35
00:02:02.770 --> 00:02:06.790
The output of this sx property is actually
not going to be inline styles on your

36
00:02:06.790 --> 00:02:09.900
elements so you won't be able to go in
the DOM and inspect the inline styles.

37
00:02:09.900 --> 00:02:12.050
This is actually going to create CSS for
you and

38
00:02:12.050 --> 00:02:13.230
add it to the head of your document.

39
00:02:13.230 --> 00:02:15.090
It is going to be scoped as well.

40
00:02:15.090 --> 00:02:19.010
So it's going to scope it just like
CSS modules do and it is going to, for

41
00:02:19.010 --> 00:02:22.430
every single page that you have there is
going to create a link tag in a document.

42
00:02:22.430 --> 00:02:24.010
It's going to put that scope CSS in there.

43
00:02:24.010 --> 00:02:26.740
And then it's going to add
class names to all your

44
00:02:26.740 --> 00:02:28.908
elements with those scopes' class names.

45
00:02:28.908 --> 00:02:33.190
So it's doing all of that for you for
free, which I think is amazing.

46
00:02:33.190 --> 00:02:37.410
So not only do you get that, you get that
nice ability of adding inline styles, but

47
00:02:37.410 --> 00:02:40.080
you also get to refer to
theme variables here.

48
00:02:40.080 --> 00:02:40.890
So for instance,

49
00:02:40.890 --> 00:02:45.060
I have "primary", that's because I have
a color called primary defined somewhere.

50
00:02:45.060 --> 00:02:48.020
And I can do shortcuts like BG,
which is short for background.

51
00:02:48.020 --> 00:02:50.080
I don't have to do things like that.

52
00:02:50.080 --> 00:02:52.870
Or for instance, if I wanted to
do something like padding left,

53
00:02:52.870 --> 00:02:56.110
I can say PL for padding left,
not gonna put padding left here.

54
00:02:56.110 --> 00:02:59.210
So there's like a lot of really cool stuff
in here that I highly recommend, and

55
00:02:59.210 --> 00:03:00.490
it's all TypeScript.

56
00:03:00.490 --> 00:03:02.030
So you can just get some autocomplete and

57
00:03:02.030 --> 00:03:04.150
see what's happening here,
it's really cool.

58
00:03:04.150 --> 00:03:09.580
If you prefer not to be able to use like
these shortcuts and these theme stuff,

59
00:03:09.580 --> 00:03:14.420
but you just want to do the just pure CSS,
JSX I'm sorry,

60
00:03:14.420 --> 00:03:18.400
theme UI JSX,
also as a CSS property here, too.

61
00:03:18.400 --> 00:03:22.060
That pretty much does the same
thing minus the ability to

62
00:03:22.060 --> 00:03:24.850
interact with theme variables and
app shortcuts.

63
00:03:24.850 --> 00:03:26.160
So this is just like pure CSS.

64
00:03:26.160 --> 00:03:28.310
This is like CSS plus theming.

65
00:03:29.580 --> 00:03:31.580
So really, really cool.

66
00:03:31.580 --> 00:03:35.360
So that's if you haven't figured it out
right now, this is why I like Theme UI,

67
00:03:35.360 --> 00:03:36.800
because it's super simple.

68
00:03:36.800 --> 00:03:40.576
And in fact, you can even get rid of all
of this, like this, and you can define

69
00:03:40.576 --> 00:03:44.472
these in your theme object as variants,
so instead of putting all this in here,

70
00:03:44.472 --> 00:03:48.484
like I'm doing, I can say, I'm gonna make
a header variants, and my theme, and

71
00:03:48.484 --> 00:03:52.640
like headers, and then I'm just
gonna refer to it inside of my file.

72
00:03:52.640 --> 00:03:55.370
I'm just gonna refer to it, oops, in here,

73
00:03:55.370 --> 00:03:57.270
I was gonna say like
variant equals header.

74
00:03:57.270 --> 00:03:58.230
And then that's it.

75
00:03:58.230 --> 00:04:00.790
And now you can literally define
all your stuff in one place.

76
00:04:00.790 --> 00:04:02.300
So changing your styles for

77
00:04:02.300 --> 00:04:06.400
everything in your app is as simple as
going to one file and changing in there.

78
00:04:06.400 --> 00:04:08.545
You never have to go look at
a component again to change the style.

79
00:04:08.545 --> 00:04:12.520
Which in my experience
is extremely helpful,

80
00:04:12.520 --> 00:04:14.970
because you can even get
a designer to do it if you want.

81
00:04:14.970 --> 00:04:18.040
A designer could just come in here and
just like change these objects and

82
00:04:18.040 --> 00:04:21.460
control exactly how the site looks like
without the developer ever having to go

83
00:04:21.460 --> 00:04:25.440
look at JSX or anything like that,
which to me is extremely powerful.

84
00:04:25.440 --> 00:04:28.680
So highly recommend checking out Theme UI.

85
00:04:28.680 --> 00:04:30.650
All right, so we got our nav components.

86
00:04:30.650 --> 00:04:32.610
The next thing we'll do,
Any questions on that?

87
00:04:32.610 --> 00:04:36.123
That was a lot.
I talked about pragma, compilers,

88
00:04:36.123 --> 00:04:39.640
directives, sx, any questions on that?

89
00:04:39.640 --> 00:04:44.880
And again, this is not specific to NextJS,
this is just how I prefer and

90
00:04:44.880 --> 00:04:48.510
I think it's something I just want
to talk about and talk about here.

91
00:04:48.510 --> 00:04:53.440
But the specific things are,
you know, like I said, the how

92
00:04:53.440 --> 00:04:57.135
we use the providers and stuff like that
this is specific that, actually Yes.

93
00:04:57.135 --> 00:05:00.772
&gt;&gt; Can you compare Theme UI to tailwind?

94
00:05:00.772 --> 00:05:01.353
Yes.

95
00:05:01.353 --> 00:05:07.400
So I'm pretty sure, so
Theme UI is associated with Gatsby.

96
00:05:07.400 --> 00:05:09.790
I'm not sure if Gatsby created Theme UI or
something like that, but

97
00:05:09.790 --> 00:05:12.150
it's definitely associated with Gatsby.

98
00:05:12.150 --> 00:05:16.880
And I wanna say the folks at Tailwind
also have something to do with Theme UI,

99
00:05:16.880 --> 00:05:18.520
as I read in a GitHub issue somewhere.

100
00:05:19.580 --> 00:05:22.970
But I'm pretty sure Theme UI
is their next version of that.

101
00:05:22.970 --> 00:05:26.310
They took what they learned from Tailwind
and they applied it to Theme UI.

102
00:05:26.310 --> 00:05:29.800
In fact, if you go to Theme UI,
you can look there's a preset here.

103
00:05:32.390 --> 00:05:33.960
I don't know if it's on here,
is it on here?

104
00:05:33.960 --> 00:05:36.756
Yeah, there's a Tailwind preset for
Theme UI.

105
00:05:36.756 --> 00:05:41.450
So I think Tailwind is like
the best example of how to

106
00:05:41.450 --> 00:05:46.156
get really good out of
the box experience with CSS.

107
00:05:46.156 --> 00:05:49.683
The only thing about Tailwind is that
right you're still using class names and

108
00:05:49.683 --> 00:05:52.560
stuff like that, but they're really good.

109
00:05:52.560 --> 00:05:54.555
Theme UI doesn't use class names.

110
00:05:54.555 --> 00:05:59.680
If you saw, I didn't write one
single class name here at all.

111
00:05:59.680 --> 00:06:01.820
All my classes are generated for me.

112
00:06:01.820 --> 00:06:06.346
And then also,
Theme UI is themeable like for instance,

113
00:06:06.346 --> 00:06:09.090
on this documentation website.

114
00:06:09.090 --> 00:06:12.720
The way that I'm able to switch between
these two things is actually Theme UI.

115
00:06:12.720 --> 00:06:16.486
All I did was just create,
I created two colors basically,

116
00:06:16.486 --> 00:06:20.327
that allowed me to switch between
the on a certain variable so

117
00:06:20.327 --> 00:06:24.619
I can say I'll make a color mode
called Black, here are the colors,

118
00:06:24.619 --> 00:06:28.460
I'll make a color mode called
Light here are the colors, and

119
00:06:28.460 --> 00:06:33.355
then I can use a hook that Theme UI gives
me to change between the color modes and

120
00:06:33.355 --> 00:06:36.490
it just automatically
applies to everything.

121
00:06:36.490 --> 00:06:38.290
I didn't have to touch
any single component.

122
00:06:38.290 --> 00:06:41.460
So it's Theme UI's mostly meant for
like theming things and

123
00:06:41.460 --> 00:06:44.075
creating design systems and reusability.

124
00:06:44.075 --> 00:06:46.380
Plus, like tell when is more for

125
00:06:46.380 --> 00:06:50.580
like getting this app to look good,
like as fast as possible.

126
00:06:50.580 --> 00:06:52.480
So it's a little different.

127
00:06:52.480 --> 00:06:54.490
As far as like how those two things work.

128
00:06:54.490 --> 00:06:55.181
I think Theme UI, and

129
00:06:55.181 --> 00:06:58.050
there's another tool that I'm going to
talk about is very similar to Theme UI.

130
00:06:58.050 --> 00:07:00.340
These tools are just like the next level.

131
00:07:00.340 --> 00:07:01.660
On top of things like Tailwind,

132
00:07:01.660 --> 00:07:03.770
which I believe is the best
CSS framework out there.

133
00:07:05.140 --> 00:07:07.532
&gt;&gt; So
this looks to be built on top of Emotion.

134
00:07:07.532 --> 00:07:08.762
&gt;&gt; Yes.

135
00:07:08.762 --> 00:07:14.380
&gt;&gt; Can you use the styled interface
that Emotion has as well?

136
00:07:14.380 --> 00:07:16.960
&gt;&gt; Yeah, you just have to
import it like you normally do.

137
00:07:16.960 --> 00:07:17.630
&gt;&gt; Sure.
Thank you.

138
00:07:17.630 --> 00:07:18.930
&gt;&gt; Yeah.
But you can absolutely use, yeah,

139
00:07:18.930 --> 00:07:21.390
it's definitely built on top of Emotion.

140
00:07:21.390 --> 00:07:25.543
And which is a very loved and
very well used CSS and

141
00:07:25.543 --> 00:07:28.491
JavaScript mechanism for React.

