WEBVTT

1
00:00:00.200 --> 00:00:02.800
Any questions on any of this stuff?

2
00:00:05.986 --> 00:00:07.880
&gt;&gt; I do have one quick question.

3
00:00:07.880 --> 00:00:12.920
And it's totally possible you
mentioned this and I just missed it.

4
00:00:12.920 --> 00:00:17.290
But in terms of the server of Next.js,

5
00:00:17.290 --> 00:00:22.710
is that node, is that built on
top of the node environment.

6
00:00:22.710 --> 00:00:25.450
Where are the distinctions there?

7
00:00:25.450 --> 00:00:29.260
&gt;&gt; Yeah, so the server, are we talking
about the server for like your API, or

8
00:00:29.260 --> 00:00:34.070
are we talking about the server
that like renders your pages?

9
00:00:35.550 --> 00:00:39.310
&gt;&gt; I'm talking about the server for
your API.

10
00:00:39.310 --> 00:00:41.150
&gt;&gt; Yeah, that's node, that's all node.

11
00:00:42.430 --> 00:00:46.310
Next only uses JavaScript for
everything that is

12
00:00:46.310 --> 00:00:50.730
heavily based off of
something called connect.

13
00:00:52.370 --> 00:00:57.250
So if you look up connect to JS, you'll
see this thing right here, that looks

14
00:00:57.250 --> 00:01:02.292
very similar to what we were doing or
what the .use and the stuff like that.

15
00:01:02.292 --> 00:01:06.287
.use, .use, and
just to even take it a step further,

16
00:01:06.287 --> 00:01:10.655
Express.js is what kinda made
connect popular is heavily.

17
00:01:10.655 --> 00:01:16.310
Next.js' API functions
are heavily built off of Express.

18
00:01:16.310 --> 00:01:19.319
So if you looked at Express and you did a,

19
00:01:21.769 --> 00:01:27.640
.get Let's see.

20
00:01:27.640 --> 00:01:29.540
Yeah, it looks well, there we go.

21
00:01:29.540 --> 00:01:31.970
It looks very much like this right,
so you can do get.

22
00:01:31.970 --> 00:01:35.940
The only difference is we
don't put paths on the next

23
00:01:35.940 --> 00:01:39.140
as ones because the paths
are determined by the file name.

24
00:01:39.140 --> 00:01:40.230
So we won't put a path here.

25
00:01:40.230 --> 00:01:44.020
So we'll just put a controller
that takes a request and response.

26
00:01:44.020 --> 00:01:49.022
So, it's very similar to express and
that's why we're able to use the same

27
00:01:49.022 --> 00:01:54.090
middle wares that express can use
cuz it's all based off of connects.

28
00:01:54.090 --> 00:01:57.015
So we can use, we can make our
own middleware like this, or

29
00:01:57.015 --> 00:01:59.722
we can use installed middle
ware that we get from NPM.

30
00:02:06.684 --> 00:02:09.853
All right, any other questions?

31
00:02:09.853 --> 00:02:15.118
&gt;&gt; Have you used MDX at this at
all are great those two were

32
00:02:15.118 --> 00:02:22.373
just I'm sure there's like plugins for
everything or package to use it?

33
00:02:22.373 --> 00:02:22.967
&gt;&gt; Yep, yeah.

34
00:02:22.967 --> 00:02:26.281
&gt;&gt; [INAUDIBLE] do you have
any experience with that?

35
00:02:26.281 --> 00:02:29.310
&gt;&gt; Yeah, so you can use MDX with Nnext.

36
00:02:30.420 --> 00:02:34.590
There's an official supported
plugin that the next team creates

37
00:02:34.590 --> 00:02:39.390
with MDX uses remark, just the same
typical stuff you would normally have.

38
00:02:39.390 --> 00:02:44.250
And basically,
you can just make .mdx or .md files.

39
00:02:44.250 --> 00:02:46.960
And it works the same way
that you would expect that

40
00:02:46.960 --> 00:02:48.960
you would just make an MDX file.

41
00:02:48.960 --> 00:02:51.360
And it's gonna create a page out of that.

42
00:02:51.360 --> 00:02:53.950
So yeah, it totally works just fine.

43
00:02:53.950 --> 00:02:56.640
I think that's kind of like alluding to
the thing that I really wanted to talk

44
00:02:56.640 --> 00:02:58.240
about was like jam stack stuff.

45
00:02:58.240 --> 00:03:01.040
So I'll talk a little more
about the jam stack stuff too.

46
00:03:01.040 --> 00:03:03.870
Really isn't like a lot of code
to show you is more just like

47
00:03:03.870 --> 00:03:06.110
a philosophy in the direction
that next is gone.

48
00:03:06.110 --> 00:03:10.750
So I'll get there but yeah,
you can use the MDX plugin.

49
00:03:10.750 --> 00:03:11.930
But any other questions?

50
00:03:15.090 --> 00:03:23.471
&gt;&gt; Have you deployed a large app like a
news site like a large static website and

51
00:03:23.471 --> 00:03:28.006
are there any pros and cons for using it?

52
00:03:28.006 --> 00:03:32.814
&gt;&gt; I have deployed well over
like ten websites that all each

53
00:03:32.814 --> 00:03:37.120
have had minimal hundreds
of thousands of pages.

54
00:03:38.770 --> 00:03:41.570
And I've done that probably the last
couple years in all the different

55
00:03:41.570 --> 00:03:43.720
technologies, some with Angular,
some of the React,

56
00:03:43.720 --> 00:03:48.320
in some using View,
I've done too with next js.

57
00:03:48.320 --> 00:03:53.630
And that next as was the most
pleasant experience out of the box,

58
00:03:53.630 --> 00:03:57.690
we found ourselves not wrangling
with the framework itself.

59
00:03:57.690 --> 00:03:59.320
Whereas with other frameworks,

60
00:03:59.320 --> 00:04:02.390
a lot of the effort went into
getting the framework to do the job.

61
00:04:02.390 --> 00:04:04.740
Whereas next js kind of
did it out of the box.

62
00:04:04.740 --> 00:04:10.950
Obviously, some of the biggest I wouldn't
say issues that we have with next js

63
00:04:10.950 --> 00:04:16.200
as when deploying to shoot sites was
just figuring out the right strategy

64
00:04:16.200 --> 00:04:21.560
of like build time is just like, okay,
how do we want to build these things?

65
00:04:21.560 --> 00:04:22.810
Do we want to wait for them?

66
00:04:22.810 --> 00:04:26.540
Do we want to optimize this build and
then how can we optimize that build and

67
00:04:26.540 --> 00:04:28.080
I think that's something
you're never gonna get right?

68
00:04:28.080 --> 00:04:29.600
Cuz there's always trade offs.

69
00:04:29.600 --> 00:04:32.760
I mean, when things get big time goes up.

70
00:04:32.760 --> 00:04:33.678
That's just how it is.

71
00:04:33.678 --> 00:04:38.460
But next js is working on something
that will help with this, and

72
00:04:38.460 --> 00:04:41.129
it's called incremental builds.

73
00:04:45.222 --> 00:04:50.560
They didn't have this when I was building
all these things, but they do have it now.

74
00:04:50.560 --> 00:04:51.660
So it's in beta.

75
00:04:51.660 --> 00:04:57.510
So the incremental builds are ridiculous.

76
00:04:57.510 --> 00:05:01.180
Basically you can update your get
static props or your decided pass and

77
00:05:01.180 --> 00:05:05.990
you just added props to basically
use this is something called

78
00:05:07.060 --> 00:05:10.520
still wild while revalidate and
I'm sure you've heard this before, but

79
00:05:10.520 --> 00:05:16.020
this is also what they're SWR hook,
client facing libraries based off phone.

80
00:05:16.020 --> 00:05:20.060
So I highly recommend looking at
what still while revalidate is.

81
00:05:20.060 --> 00:05:24.460
But basically what it does is if new
content comes in, it will route go get

82
00:05:24.460 --> 00:05:29.364
that new content and regenerate the page
for the content without having to get all

83
00:05:29.364 --> 00:05:33.504
the content ahead of time so that way,
you don't have to do a build.

84
00:05:33.504 --> 00:05:36.768
And do every single page at build time,
you can just say I only

85
00:05:36.768 --> 00:05:40.010
want to do a little bit and
then I want to get the rest later.

86
00:05:40.010 --> 00:05:45.840
It's very much similar to the fallback
option on a git static paths,

87
00:05:45.840 --> 00:05:51.110
but it's doing it, it's basically
the difference between the two.

88
00:05:51.110 --> 00:05:52.309
I think they talked about it here.

89
00:05:53.730 --> 00:05:55.740
Yeah, fallback option to yeah, so

90
00:05:55.740 --> 00:05:59.390
this fallback option allows you
to add new pages at runtime.

91
00:05:59.390 --> 00:06:02.450
But I think the difference
here is that you can do,

92
00:06:02.450 --> 00:06:06.050
you can update the content after
you've already like built the site.

93
00:06:06.050 --> 00:06:10.720
So the site can already have been built,
and then they will go fetch the new pages,

94
00:06:10.720 --> 00:06:13.680
whereas I think the fallback
one has to be rebuilt.

95
00:06:13.680 --> 00:06:15.780
So, it's a little different.

96
00:06:15.780 --> 00:06:17.160
It's super amazing.

97
00:06:17.160 --> 00:06:18.300
It's in beta.

98
00:06:18.300 --> 00:06:22.840
We're actually using it right now as
an integration with our technologies.

99
00:06:22.840 --> 00:06:23.720
So, yeah.

100
00:06:23.720 --> 00:06:28.790
And then Guillermo, the CEO of
next day as a girlfriend of mine,

101
00:06:28.790 --> 00:06:32.660
tweeted a demonstration
of how they were able to.

102
00:06:32.660 --> 00:06:38.450
Basically show next js scale to 500
new pages 500 million pages a day.

103
00:06:38.450 --> 00:06:39.850
So infinitely.

104
00:06:39.850 --> 00:06:43.340
So if you have a website that's
more than 500 million pages,

105
00:06:43.340 --> 00:06:47.110
then maybe you might have a problem but
he was able to do it for

106
00:06:47.110 --> 00:06:49.750
500 million pages and it works just fine.

107
00:06:49.750 --> 00:06:50.661
So I think you'll be fine.

108
00:06:57.238 --> 00:07:02.218
&gt;&gt; So since you've been going or
extolling the virtues of next js

109
00:07:02.218 --> 00:07:06.911
this entire time,
are there any downsides or drawbacks or

110
00:07:06.911 --> 00:07:10.670
areas that you think that next and
improve on?

111
00:07:12.150 --> 00:07:13.120
&gt;&gt; Yes, yes.

112
00:07:13.120 --> 00:07:15.109
And I think this is where
it comes to jamstack.

113
00:07:16.170 --> 00:07:22.124
I do think next js needs to
improve with their [INAUDIBLE].

114
00:07:22.124 --> 00:07:23.008
They know that too.

115
00:07:23.008 --> 00:07:26.010
That's kinda where these
features are coming from.

116
00:07:26.010 --> 00:07:30.840
So when I think of jams, I think of
content being up to date all the time and

117
00:07:30.840 --> 00:07:34.130
obviously incremental static
regeneration helps with that.

118
00:07:34.130 --> 00:07:37.740
But also for a developer experience,
just being able to edit content and

119
00:07:37.740 --> 00:07:42.230
see it change in real time would be
really cool to take an example like for

120
00:07:42.230 --> 00:07:43.400
instance Gatsby.

121
00:07:43.400 --> 00:07:46.880
If you have a really good Gatsby
source plugin that they say,

122
00:07:46.880 --> 00:07:50.190
hey, this is a certified plugin,
especially with a CMS,

123
00:07:50.190 --> 00:07:53.410
you can be sure that when that data
changes on that CMS, it's gonna

124
00:07:53.410 --> 00:07:56.730
change right there on your Gatsby site
like it's gonna happen immediately.

125
00:07:56.730 --> 00:08:02.380
You don't get that with other static
site generators, like next js, or.

126
00:08:02.380 --> 00:08:03.000
Almost anyone,

127
00:08:03.000 --> 00:08:06.320
you just don't get that gas is kinda
like the first one that does that.

128
00:08:06.320 --> 00:08:08.960
So out of the box you don't
really get that with next either.

129
00:08:08.960 --> 00:08:09.850
Can you make it work?

130
00:08:09.850 --> 00:08:14.074
Absolutely, next js also has a preview so

131
00:08:14.074 --> 00:08:19.880
they have preview mode which
kind of helps with this too.

132
00:08:21.270 --> 00:08:25.710
And you can set up a preview mode
where content is in a draft state and

133
00:08:25.710 --> 00:08:27.781
you can preview that content.

134
00:08:27.781 --> 00:08:31.616
But still, there's this a little
more work that has to be done and

135
00:08:31.616 --> 00:08:35.873
I think they're getting there but
the experience isn't there yet, but

136
00:08:35.873 --> 00:08:40.726
needless to say, even though they're
getting better at it, it's really good.

137
00:08:40.726 --> 00:08:44.727
I actually prefer what next js is doing
anyway because to me the overhead of

138
00:08:44.727 --> 00:08:49.115
having to understand graph qL and stuff
can be quite difficult for someone who's

139
00:08:49.115 --> 00:08:53.136
already tasked with doing something
like a static site generator today.

140
00:08:53.136 --> 00:08:56.351
And integrating with a headless CMS
like now you got to learn graph qL,

141
00:08:56.351 --> 00:08:59.430
it can be overwhelming if you
don't know it or care to know it.

142
00:08:59.430 --> 00:09:00.740
And then the whole team is invested.

143
00:09:00.740 --> 00:09:02.210
Now the whole team has no graph QL.

144
00:09:02.210 --> 00:09:05.040
So it's kind of a big investment
to get into something like that.

145
00:09:05.040 --> 00:09:07.590
Whereas next js is just JavaScript.

146
00:09:07.590 --> 00:09:12.230
And at the end of the day, I think next js
assets approach and even just vs approach

147
00:09:12.230 --> 00:09:15.170
in general is like, hey, we're gonna
do one job and we're gonna do a well.

148
00:09:15.170 --> 00:09:19.806
And the company is gonna rely on
the community to help us come together and

149
00:09:19.806 --> 00:09:22.095
make this product better, right?

150
00:09:22.095 --> 00:09:26.619
Next.js and Vercel is positioned
well to work on a CMS, right?

151
00:09:26.619 --> 00:09:28.760
Their whole product could use a CMS.

152
00:09:28.760 --> 00:09:31.560
But instead of making one, they're just
partnering with every other CMS out there.

153
00:09:31.560 --> 00:09:32.580
Same thing with Gatsby, right?

154
00:09:32.580 --> 00:09:35.690
They partnered with CMS and
stuff out there as well.

155
00:09:35.690 --> 00:09:38.910
Because it doesn't how their position but
next js, it's like well,

156
00:09:38.910 --> 00:09:41.900
if you guys want me some jam sec stuff,
there's some really cool stuff out there.

157
00:09:41.900 --> 00:09:45.380
So one of them is called source bit.

158
00:09:45.380 --> 00:09:49.442
So source bits really cool and

159
00:09:49.442 --> 00:09:54.318
it's an open source project made by

160
00:09:54.318 --> 00:09:59.690
a company called Stackbit that right.

161
00:09:59.690 --> 00:10:01.940
So stackbit is actually really dope.

162
00:10:01.940 --> 00:10:04.780
So source bit what it does
is it basically takes that

163
00:10:04.780 --> 00:10:09.350
thing that Gatsby does where like, allows
you to update your website in real time

164
00:10:09.350 --> 00:10:12.260
when content changes without
a refresh without anything.

165
00:10:12.260 --> 00:10:13.160
It does that.

166
00:10:13.160 --> 00:10:15.130
And as it's any static site generator,

167
00:10:15.130 --> 00:10:18.010
basically you can add it to
anything including next js.

168
00:10:18.010 --> 00:10:23.160
And basically it sits in the middle
between like a CMS and your framework.

169
00:10:23.160 --> 00:10:26.360
And it, it makes sure that,
the CMS has some incoming data.

170
00:10:26.360 --> 00:10:28.430
It'll update your framework
with a web socket and

171
00:10:28.430 --> 00:10:29.990
you'll get the new data instantly.

172
00:10:29.990 --> 00:10:32.350
So you get a really nice
developing experience.

173
00:10:32.350 --> 00:10:35.120
The CEO of this company has
a nice video talking about it.

174
00:10:35.120 --> 00:10:39.410
But yeah, so you can use this with next js
which is what we're gonna be recommending

175
00:10:39.410 --> 00:10:41.862
people use and
what we will probably use until or

176
00:10:41.862 --> 00:10:45.018
if next js even support something
like this which honestly.

177
00:10:45.018 --> 00:10:48.831
I don't know if they should because
the community is very capable of doing it

178
00:10:48.831 --> 00:10:52.467
themselves and it takes the heat from
having next js have to do everything

179
00:10:52.467 --> 00:10:55.330
themselves which,
just do one job do it well.

180
00:10:55.330 --> 00:10:59.130
So yeah, check that out and then stack
bit, which basically you want to launch

181
00:10:59.130 --> 00:11:04.690
a jam stack website with a on site
editor to edit content on the page but

182
00:11:04.690 --> 00:11:09.160
also connect to any CMS that you want it
stack that you can literally click in here

183
00:11:09.160 --> 00:11:12.330
and like I want to start with this sites,
you click here.

184
00:11:12.330 --> 00:11:15.090
You pick a static site
generator that you once,

185
00:11:15.090 --> 00:11:19.690
you pick one, you continue,
you pick a CMS that you want.

186
00:11:19.690 --> 00:11:24.120
So, boom, and then you connect it and
then it just deploys it for you and

187
00:11:24.120 --> 00:11:24.900
you're ready to go.

188
00:11:24.900 --> 00:11:26.590
Like you don't have to do anything.

189
00:11:26.590 --> 00:11:27.860
So different stuff like that.

190
00:11:27.860 --> 00:11:29.560
But yeah,

191
00:11:29.560 --> 00:11:33.560
I would say that's probably a downside
with next if it is a downside is that.

192
00:11:33.560 --> 00:11:36.080
They're just they don't
have that experience yet.

193
00:11:36.080 --> 00:11:40.060
It's kind of disconnected, but it's
coming together with actions by them and

194
00:11:40.060 --> 00:11:41.740
actions by the community.

195
00:11:41.740 --> 00:11:45.275
So, yeah, and
other downsides, I would say.

196
00:11:45.275 --> 00:11:50.276
I think by default,
the fact that you have to deploy to a node

197
00:11:50.276 --> 00:11:55.278
environment might confuse some
people cuz they come to next

198
00:11:55.278 --> 00:12:01.279
js think it's like it's just a static
site generator, like Gatsby and

199
00:12:01.279 --> 00:12:07.310
then having to like, we got to
deploy this to like some node thing.

200
00:12:07.310 --> 00:12:09.160
I think that kind of confuses people.

201
00:12:09.160 --> 00:12:11.510
So but I mean,
they do a good job of documenting and

202
00:12:11.510 --> 00:12:14.080
clearing it up as well if
you just follow along.

203
00:12:14.080 --> 00:12:16.240
So I would say that is a thing.

204
00:12:16.240 --> 00:12:19.700
I've often run into that with people
thinking that is a static site.

205
00:12:19.700 --> 00:12:21.390
And it's not a static site generator.

206
00:12:21.390 --> 00:12:22.920
And it's not just that.

207
00:12:22.920 --> 00:12:27.850
Other than that, no, I mean,
I think they're doing a really good job.

208
00:12:27.850 --> 00:12:30.820
They're working with the Chrome
team to add in, like,

209
00:12:30.820 --> 00:12:35.350
support built right into Chrome
to make next js even better.

210
00:12:35.350 --> 00:12:40.119
So literally the team at Google is working
with the team that next js to make next

211
00:12:40.119 --> 00:12:42.140
js like the framework for Chrome almost.

212
00:12:42.140 --> 00:12:45.420
And they're doing some really
interesting stuff there.

213
00:12:45.420 --> 00:12:48.940
Especially around react,
suspense and stuff like that.

214
00:12:48.940 --> 00:12:52.180
So a lot of stuff is coming soon
to next js and Google Chrome.

215
00:12:52.180 --> 00:12:54.450
So I think they're doing
a really good job.

216
00:12:57.390 --> 00:13:02.500
&gt;&gt; When is the advanced
next year's course coming?

217
00:13:02.500 --> 00:13:05.220
&gt;&gt; You guys got,
Mark has to answer that for you.

218
00:13:05.220 --> 00:13:05.720
I don't know.

219
00:13:07.190 --> 00:13:09.590
If you guys keep asking for
it, it'll come.

