WEBVTT

1
00:00:00.530 --> 00:00:04.290
&gt;&gt; Zac Gordon: Enqueueing JavaScript is
the process of loading it onto a theme or

2
00:00:04.290 --> 00:00:08.900
into the admin area using PHP functions,
okay?

3
00:00:08.900 --> 00:00:14.190
So the PHP that we're gonna use primarily
comes down to these two functions.

4
00:00:14.190 --> 00:00:17.820
So wp_enqueue_script(); is going
to be what we actually set up, and

5
00:00:17.820 --> 00:00:22.790
that will load our JavaScript behind
the scenes into our theme dynamically.

6
00:00:22.790 --> 00:00:24.210
So that's great.

7
00:00:24.210 --> 00:00:28.980
Then, we're going to kind of hack or
hijack something that was not intended for

8
00:00:28.980 --> 00:00:30.112
what we're using it for.

9
00:00:30.112 --> 00:00:34.370
But wp_localized_script(); because
WordPress runs in so many different

10
00:00:34.370 --> 00:00:38.740
languages and it's really big on being
translatable, easily translatable, and

11
00:00:38.740 --> 00:00:41.824
easy to run in other languages and
easy for other people to translate.

12
00:00:41.824 --> 00:00:47.330
wp_localized_script(); was meant so that
you can pass different versions of words,

13
00:00:47.330 --> 00:00:50.800
so you can pass different languages,
so localizing the language or

14
00:00:50.800 --> 00:00:52.950
information into your JavaScript.

15
00:00:52.950 --> 00:00:58.230
So this process we hijacked because there
are times we wanna take PHP data or

16
00:00:58.230 --> 00:01:01.440
stuff that WordPress has,
and we wanna load it and

17
00:01:01.440 --> 00:01:05.820
make it available in our JavaScript
without having to use the API, right?

18
00:01:05.820 --> 00:01:09.450
So if you have a PHP file,
and it has some data,

19
00:01:09.450 --> 00:01:12.870
how do you get it to
talk to that JavaScript?

20
00:01:12.870 --> 00:01:16.850
You could load it into the DOM, and then
pull it out of the DOM, and use it that

21
00:01:16.850 --> 00:01:20.580
way, but you could also inject it
directly and we'll look at that process.

22
00:01:21.580 --> 00:01:24.850
So this is what
enqueue_script( looks like.

23
00:01:24.850 --> 00:01:29.170
It takes a few different parameters and
I have them broken down, line by line.

24
00:01:29.170 --> 00:01:32.571
So the first parameter that we
have is a unique-handle-name, and

25
00:01:32.571 --> 00:01:34.322
we can name this whatever we want.

26
00:01:34.322 --> 00:01:39.170
Commonly, it'll be
something like theme-js or

27
00:01:39.170 --> 00:01:43.470
mythemeness or like view-js or for
loading view or something like that.

28
00:01:43.470 --> 00:01:46.710
So this first one is something that you
wanna be able to, at a glance, look at and

29
00:01:46.710 --> 00:01:47.850
tell what it is.

30
00:01:47.850 --> 00:01:50.611
And then, in other places,
if you ever wanna say like,

31
00:01:50.611 --> 00:01:54.120
hey, pass this extra data into this file,
you'll call it by that name.

32
00:01:55.220 --> 00:01:59.788
The next parameter is the path
to the actual file itself.

33
00:01:59.788 --> 00:02:02.940
And so there are a few different
ways to dynamically get a file.

34
00:02:02.940 --> 00:02:09.370
So in WordPress, if you have a theme, all
of your theme files are gonna be at like,

35
00:02:09.370 --> 00:02:16.855
yoursite.com/wp-content/theme/nameofyourt-
heme/asset/js/file.js, right?

36
00:02:16.855 --> 00:02:20.401
But you do not wanna hard code that
whole thing because what happens if your

37
00:02:20.401 --> 00:02:21.440
theme name changed?

38
00:02:21.440 --> 00:02:24.260
What happens if they installed an earlier
site like all these other things?

39
00:02:24.260 --> 00:02:28.824
So get_stylesheet_directory_uri() is
going to give us a shortcut to get

40
00:02:28.824 --> 00:02:33.244
into that folder, and then be at the root
of our theme folder and from there,

41
00:02:33.244 --> 00:02:37.071
we could say, hey, go into our
assets js file and grab that file.

42
00:02:37.071 --> 00:02:38.530
So pretty straightforward.

43
00:02:40.210 --> 00:02:44.160
The other really cool feature that
enqueueu has is dependencies.

44
00:02:44.160 --> 00:02:47.133
So normally, when we load
JavaScript the old school way,

45
00:02:47.133 --> 00:02:50.713
and we put one script tag and
then another script tag and then another,

46
00:02:50.713 --> 00:02:52.890
we know that that order matters, right?

47
00:02:52.890 --> 00:02:56.180
If we try to put jQuery review
at the bottom of it and

48
00:02:56.180 --> 00:02:59.770
call jQuery stuff before that's loaded,
we have issues, right?

49
00:02:59.770 --> 00:03:03.640
So what this handles because in WordPress,
we're not gonna be able to hard code

50
00:03:03.640 --> 00:03:06.140
anything, it could setup
dependencies this way.

51
00:03:06.140 --> 00:03:09.320
So let's imagine I had two scripts,
I had my helper script and

52
00:03:09.320 --> 00:03:10.860
I had my theme script.

53
00:03:10.860 --> 00:03:14.536
If this was my theme script where it says,
dependency handles, I can say,

54
00:03:14.536 --> 00:03:20.160
handles-js, and
it will automatically make sure that

55
00:03:20.160 --> 00:03:25.310
my handles one comes before my theme one,
and we'll use this quite a lot.

56
00:03:27.370 --> 00:03:30.550
The other one we're actually
gonna avoid most of the time and

57
00:03:30.550 --> 00:03:33.260
this is a great feature but
it's really annoying in development,

58
00:03:33.260 --> 00:03:38.000
so WordPress will cache all your CSS and
JavaScript files.

59
00:03:38.000 --> 00:03:41.470
And one of the ways it does this is
by adding a version number onto it.

60
00:03:41.470 --> 00:03:45.800
So if you put in here, I'm on
version 1 of my JavaScript file, and

61
00:03:45.800 --> 00:03:49.730
I save a bunch of changes in my
JavaScript file, you won't see those

62
00:03:49.730 --> 00:03:53.960
changes necessarily show up on your
site unless you clear your cache.

63
00:03:53.960 --> 00:03:57.720
But if you change the version to 1.2,
then it'll pull it in, right?

64
00:03:57.720 --> 00:03:59.470
Does this make sense?

65
00:03:59.470 --> 00:04:01.060
Head nods, yeah?

66
00:04:01.060 --> 00:04:02.500
So we're gonna cheat this a little bit.

67
00:04:02.500 --> 00:04:04.270
And instead of passing
in a version number,

68
00:04:04.270 --> 00:04:07.820
we're gonna pass in a timestamp
down to the seconds.

69
00:04:07.820 --> 00:04:12.092
So this means that every time WordPress
loads a page, we have dynamically put in

70
00:04:12.092 --> 00:04:15.725
a new version number that's just
like a second or a few seconds off,

71
00:04:15.725 --> 00:04:20.430
so it won't cache it so that we don't have
to clear our caches we're developing.

72
00:04:20.430 --> 00:04:23.380
But once you're done, you don't want
that to happen because you want your

73
00:04:23.380 --> 00:04:26.130
JavaScript running as fast as possible,
right?

74
00:04:26.130 --> 00:04:30.445
So the very last thing is something
that we usually leave to true and

75
00:04:30.445 --> 00:04:35.010
it's a Boolean of true or false and
it just tells WordPress whether you wanna

76
00:04:35.010 --> 00:04:39.750
load your JavaScript in the footer,
if it's true and it's by default true, and

77
00:04:39.750 --> 00:04:41.622
you could set false and
it'll put it in the header.

78
00:04:41.622 --> 00:04:46.440
So WordPress has two hooks that we'll
look at at one point as we get into here.

79
00:04:46.440 --> 00:04:49.920
It has a hook called WPHead and
WPFooter, and

80
00:04:49.920 --> 00:04:52.198
behind the scenes it
feeds everything in here.

81
00:04:52.198 --> 00:04:56.580
So if a theme is missing WPHead, it'll
break a lot and if it's missing a tag of

82
00:04:56.580 --> 00:05:00.300
PHP called WPFooter, that's how it
injects everything in the right place.

83
00:05:01.350 --> 00:05:03.330
So that's enqueue script,
pretty straightforward and

84
00:05:03.330 --> 00:05:08.070
we will look at this so many times today
that if this is not making sense now,

85
00:05:08.070 --> 00:05:11.860
it will be literally second nature
by the time we get out of here,

86
00:05:11.860 --> 00:05:15.270
along with this other one
called localized script.

