WEBVTT

1
00:00:00.160 --> 00:00:02.468
&gt;&gt; Zac Gordon: Let's go
ahead an open our stuff up,

2
00:00:02.468 --> 00:00:06.125
come down into JWT authentication and
open up the Read Me.

3
00:00:06.125 --> 00:00:10.447
So one of the first things you'll notice
is that, we now have an Authentication

4
00:00:10.447 --> 00:00:14.333
file, and this is where we're gonna
store all of our authentication.

5
00:00:14.333 --> 00:00:18.534
It's a pretty good idea to
abstract your authentication code,

6
00:00:18.534 --> 00:00:20.930
out from the rest of your code.

7
00:00:20.930 --> 00:00:23.957
Because then, if you ever want to go
build another app that authenticates,

8
00:00:23.957 --> 00:00:25.390
you literally just copy that file.

9
00:00:25.390 --> 00:00:29.001
And you shouldn't need to change anything,
cuz everything's being passed into it.

10
00:00:29.001 --> 00:00:33.162
So good modular coding applies as much
to WordPress as anything else you're

11
00:00:33.162 --> 00:00:33.870
building.

12
00:00:33.870 --> 00:00:38.513
[COUGH] Then we've got to,
we'll do some import things.

13
00:00:38.513 --> 00:00:40.940
We'll set up some stuff
in our authentication.

14
00:00:40.940 --> 00:00:42.136
I'll talk you through that.

15
00:00:42.136 --> 00:00:44.937
And then setting up
the save functionality,

16
00:00:44.937 --> 00:00:47.000
we will set that up as well.

17
00:00:47.000 --> 00:00:52.857
Now, one thing that is not mentioned here
is that we do need the WordPress plugin.

18
00:00:52.857 --> 00:00:57.060
And that should have been
in the instructions, so.

19
00:00:57.060 --> 00:00:58.315
&gt;&gt; Speaker 2: I think what happened is

20
00:00:58.315 --> 00:01:01.512
that the six, three and six,
four, this might be the one for

21
00:01:01.512 --> 00:01:07.393
the save.
&gt;&gt; Zac Gordon: No because this should just

22
00:01:07.393 --> 00:01:13.990
be handling login and logout, and then
saving posts will be doing it separately.

23
00:01:13.990 --> 00:01:18.227
But we do need the plugin, okay.

24
00:01:18.227 --> 00:01:24.482
Simple enough, jwt authentication plugin.
&gt;&gt; Zac Gordon: And

25
00:01:24.482 --> 00:01:26.200
let me just show you the one
that we want specifically.

26
00:01:26.200 --> 00:01:27.969
There is more than one
out there at this point.

27
00:01:27.969 --> 00:01:34.260
So we are using this one from a friend,
Enrique Chavez.

28
00:01:34.260 --> 00:01:37.463
So this is the one that we want, and
we can either download and install it,

29
00:01:37.463 --> 00:01:40.977
but I'm just gonna go directly through
WordPress and install this real quick if I

30
00:01:40.977 --> 00:01:41.871
haven't already.

31
00:01:58.510 --> 00:02:08.443
&gt;&gt; Zac Gordon: Let's double check.
&gt;&gt; Zac Gordon: Was the code in 6.4 for

32
00:02:08.443 --> 00:02:14.229
the [INAUDIBLE] no it wasn't there either.

33
00:02:14.229 --> 00:02:16.540
Okay, good thing we'll go
through this together.

34
00:02:16.540 --> 00:02:18.759
So, I already have the plugin installed.

35
00:02:18.759 --> 00:02:21.151
So you have to go ahead and do that.

36
00:02:21.151 --> 00:02:23.800
So go ahead and install the plugin,
that’s the first step.

37
00:02:23.800 --> 00:02:28.503
But there are a few other things
we have to do to set this up.

38
00:02:28.503 --> 00:02:33.093
One of them is that there is a potential
that you might you need to add this code

39
00:02:33.093 --> 00:02:34.760
to your dot HT access file.

40
00:02:34.760 --> 00:02:38.137
Mine’s working without it, so
we’ll see if that’s necessary.

41
00:02:38.137 --> 00:02:42.268
But we do need the configure,
a secret key and

42
00:02:42.268 --> 00:02:49.690
we need to unable the cross site access to
our from one up into our WordPress site.

43
00:02:49.690 --> 00:02:52.640
So by default, WordPress user
server will blocked that but

44
00:02:52.640 --> 00:02:54.890
we're gonna unable it just for
this plugin.

45
00:02:54.890 --> 00:03:01.516
So both of these are going to go into
our WordPress configuration file.

46
00:03:01.516 --> 00:03:06.112
So if you open up the root files,
we've been going into the themes and

47
00:03:06.112 --> 00:03:07.660
plugins folder.

48
00:03:07.660 --> 00:03:14.125
Step back a step or two, and
open the file called wp-config.php.

49
00:03:19.592 --> 00:03:22.423
&gt;&gt; Zac Gordon: And because I'm working in

50
00:03:22.423 --> 00:03:26.368
chasy, mine is slightly different.

51
00:03:39.848 --> 00:03:41.680
&gt;&gt; Zac Gordon: I didn't wanna do that.

52
00:03:41.680 --> 00:03:48.218
[INAUDIBLE] Okay.
&gt;&gt; Zac Gordon: So

53
00:03:48.218 --> 00:03:53.467
my setup is a little bit differently,

54
00:03:53.467 --> 00:04:01.347
but this is the code that
you're gonna end up putting in.

55
00:04:01.347 --> 00:04:07.350
So 'JWT_AUTH_CORS_ENABLE', so that will
allow one side to access our site.

56
00:04:07.350 --> 00:04:10.902
And we set that to true and then the other
things is we need a secret key, so

57
00:04:10.902 --> 00:04:12.136
this is gonna be salted.

58
00:04:12.136 --> 00:04:15.730
So whenever, we've sent something back and
forth not only that we have one

59
00:04:15.730 --> 00:04:19.350
doubled encryption but then we add this
in and then encrypt it altogether.

60
00:04:19.350 --> 00:04:23.702
So if you're familiar with salts,
WordPress has a place that you could

61
00:04:23.702 --> 00:04:28.284
get access to them and they link it up
right here in the docs for this plug in.

62
00:04:28.284 --> 00:04:33.021
So if you go to this link.

63
00:04:33.021 --> 00:04:35.500
I'm sorry, this was in
the instructions at some point.

64
00:04:35.500 --> 00:04:37.494
I'm not sure how I lost it there.

65
00:04:37.494 --> 00:04:44.013
And you wanna copy one of these strings.
&gt;&gt; Zac Gordon: Okay,

66
00:04:44.013 --> 00:04:48.643
make sure you get inside the single
quotes, copy that and then,

67
00:04:48.643 --> 00:04:50.973
place that into your WP config.

68
00:04:50.973 --> 00:04:55.460
And your WP config will have a lot
more stuff in it than mine does.

69
00:04:55.460 --> 00:04:56.836
I said, my setup's a little bit different.

70
00:04:56.836 --> 00:05:00.520
But paste that in right here.

71
00:05:02.380 --> 00:05:04.030
And then, this could go
towards the top of your code.

72
00:05:04.030 --> 00:05:07.214
You'll see a bunch of other
code in your WP config file.

73
00:05:07.214 --> 00:05:09.550
But that should be good.

74
00:05:09.550 --> 00:05:13.698
Okay, so that's what we have to do on
the WordPress side to set stuff up.

75
00:05:13.698 --> 00:05:17.511
[COUGH] Now, let's come back into our

76
00:05:17.511 --> 00:05:22.911
code.
&gt;&gt; Zac Gordon: And now,

77
00:05:22.911 --> 00:05:28.419
I need to go ahead and make sure
that I pull down all my files and

78
00:05:28.419 --> 00:05:32.721
that I.
&gt;&gt; Zac Gordon: So I'll run npm install and

79
00:05:32.721 --> 00:05:37.316
I'll run npm start, and I'll just pull up
the package that Jason filed to show you

80
00:05:37.316 --> 00:05:41.403
what we're working with here.
&gt;&gt; Zac Gordon: Oops,

81
00:05:41.403 --> 00:05:42.820
I'm in the wrong folder.

82
00:05:53.969 --> 00:05:56.133
&gt;&gt; Zac Gordon: So in the past,

83
00:05:56.133 --> 00:06:01.625
all we were doing was pulling in axios,

84
00:06:01.625 --> 00:06:06.452
but now, we have something called

85
00:06:06.452 --> 00:06:12.960
"form-urlencoder" and "js-cookie".

86
00:06:12.960 --> 00:06:16.445
So, we need these in order for
our authentication to work.

87
00:06:16.445 --> 00:06:21.312
When we're taking what is basically
going to be a username and

88
00:06:21.312 --> 00:06:23.470
a password, or form data.

89
00:06:23.470 --> 00:06:26.604
There is a way of passing
this as a header or

90
00:06:26.604 --> 00:06:31.271
with an http request, and
that's called form URL in coding.

91
00:06:31.271 --> 00:06:33.749
And there is a script
that will do that for us,

92
00:06:33.749 --> 00:06:36.630
pretty complicated to try
to figure out on your own.

93
00:06:36.630 --> 00:06:37.445
So that is gonna be a benefit.

94
00:06:37.445 --> 00:06:42.263
And then, the other thing is that when
we ping WordPress and we say, hey we're

95
00:06:42.263 --> 00:06:47.380
logging in, it's gonna give us at token
back that says, hey, you're logged in.

96
00:06:47.380 --> 00:06:51.280
Use this in the future and
we'll trust it and everything's cool.

97
00:06:51.280 --> 00:06:54.236
So we're going to take that token and
store it in a cookie for access.

98
00:06:54.236 --> 00:06:59.165
We could potentially maybe use local
storage but since we can make the cookie

99
00:06:59.165 --> 00:07:03.246
secure and require https,
one little benefit and a just kind of

100
00:07:03.246 --> 00:07:08.580
a recommendation from the plug in itself,
so that's what we'll be doing there.

101
00:07:08.580 --> 00:07:15.331
I'll run npm start,
we've got everything down.

102
00:07:15.331 --> 00:07:19.450
And now, we could start going to town
on what we actually need to do here.

103
00:07:20.790 --> 00:07:22.735
So we're gonna start in
our authentication file.

104
00:07:22.735 --> 00:07:26.717
Let's open that up and
take a look at what's happening.

105
00:07:26.717 --> 00:07:31.560
So the style of this authentication
file is actually borrowed from

106
00:07:31.560 --> 00:07:34.860
one of the major
Wordpress OAuth libraries.

107
00:07:34.860 --> 00:07:39.568
So what happens is when you switch
from one authentication system to

108
00:07:39.568 --> 00:07:41.964
another authentication system,

109
00:07:41.964 --> 00:07:47.761
it's not like switching from jQuery to
Axios where it's one or two little things.

110
00:07:47.761 --> 00:07:55.190
Switching from using something like JWT to
using OAuth is a very different structure.

111
00:07:55.190 --> 00:08:00.640
But there are some underlying conventions
and namings that can be similar.

112
00:08:00.640 --> 00:08:04.100
So I'm borrowing from another system in
the hopes that one day if you start to

113
00:08:04.100 --> 00:08:06.100
explore OAF with WordPress.

114
00:08:06.100 --> 00:08:08.750
And you use the OAF WordPress example,

115
00:08:08.750 --> 00:08:13.860
these function names at least will be
some place holders that makes sense.

116
00:08:13.860 --> 00:08:17.770
So we have an initialized one,
we'll come back to that one in a second.

117
00:08:17.770 --> 00:08:22.230
The main two ones that we have
are onLogin and onLogout.

118
00:08:22.230 --> 00:08:26.460
So when someone actually logs in,
this is what's going to be happening.

119
00:08:26.460 --> 00:08:31.978
But then, we have two other ones
called initLogin and initLogout.

120
00:08:31.978 --> 00:08:36.091
And basically, all these are going
to do is just set up the,

121
00:08:36.091 --> 00:08:37.819
kind of event handlers,

122
00:08:37.819 --> 00:08:43.320
once you log in to make sure that now if
you click log out, it's going to work.

123
00:08:43.320 --> 00:08:48.200
And that once you log out, once you click
on the log in button, it's going to work.

124
00:08:48.200 --> 00:08:54.942
So normally, I do not like to pass
anonymous functions into Click handlers.

125
00:08:54.942 --> 00:08:57.938
Remember everything else we did
in the past was like post.save or

126
00:08:57.938 --> 00:08:59.610
something like that.

127
00:08:59.610 --> 00:09:04.760
And we could have taken that approach, but
because you're not going to have to likely

128
00:09:04.760 --> 00:09:08.220
remove this, and just to kinda simplify
the code that we're looking at and

129
00:09:08.220 --> 00:09:13.750
not just create more and more functions,
that's why I took this approach.

130
00:09:13.750 --> 00:09:16.220
So we'll come back up to the top and

131
00:09:16.220 --> 00:09:20.860
the first thing we have to do is import
axios to cookies and form url encoder.

132
00:09:20.860 --> 00:09:26.357
So the simplest way to do that

133
00:09:26.357 --> 00:09:35.107
is to just.
&gt;&gt; Zac Gordon: Wait,

134
00:09:35.107 --> 00:09:36.440
where did those other ones come from?

135
00:09:36.440 --> 00:09:37.240
Were they there before?

136
00:09:39.100 --> 00:09:39.735
Yeah, they were there.

137
00:09:39.735 --> 00:09:40.630
They were just already working.

138
00:09:40.630 --> 00:09:49.095
Okay.
&gt;&gt; Zac Gordon: Okay,

139
00:09:49.095 --> 00:09:54.380
so then, what did we work with before
where we had to give it a name?

140
00:09:54.380 --> 00:09:57.803
Okay, when we worked with nonces,
remember we had to say, hey,

141
00:09:57.803 --> 00:09:59.250
this is our JWP like nonce.

142
00:09:59.250 --> 00:10:02.442
We're gonna do the same
thing with our cookie.

143
00:10:02.442 --> 00:10:07.379
And in our configuration file, which is
starting to get a little bit bigger now,

144
00:10:07.379 --> 00:10:10.864
notice that,
not only are we storing the rest_url, but

145
00:10:10.864 --> 00:10:13.706
we're storing the name
of the cookie itself.

146
00:10:13.706 --> 00:10:18.400
So we're gonna call it jwt-cookie and
we're also gonna store logged in.

147
00:10:18.400 --> 00:10:22.020
Because in WordPress when we're in a
theme, remember how we could run some PHP

148
00:10:22.020 --> 00:10:26.080
and check if they're logged in and
kind of use that PHP to check that?

149
00:10:26.080 --> 00:10:30.280
We can't do that anymore, but we still
want to have access in our app loosely.

150
00:10:30.280 --> 00:10:35.310
This is not the most secure way, right,
to determine if you're logged in or not.

151
00:10:35.310 --> 00:10:38.190
But for our purposes, it will be helpful.

152
00:10:38.190 --> 00:10:41.392
And then the loginForm,
the logoutForm, the wsername and

153
00:10:41.392 --> 00:10:44.656
the password, these are all
things that we're adding to our

154
00:10:44.656 --> 00:10:53.617
configuration.
&gt;&gt; Zac Gordon: Okay.

155
00:10:53.617 --> 00:10:56.729
[COUGH]
&gt;&gt; Zac Gordon: So

156
00:10:56.729 --> 00:11:01.501
what we wanna do is say config.cookie,
which is going to basically, again,

157
00:11:01.501 --> 00:11:05.030
just be the name that we're using for it.

158
00:11:05.030 --> 00:11:08.240
And then if that cookie does not exist, so

159
00:11:08.240 --> 00:11:13.130
if somebody comes to our site and they do
not have a token stored in the cookie,

160
00:11:13.130 --> 00:11:18.160
then we're going to runlogout to make
sure that they are forced logout.

161
00:11:18.160 --> 00:11:20.930
And we're gonna initialize the login so
that it's ready for them.

162
00:11:20.930 --> 00:11:24.910
And then, if they come to our site and
land here, and

163
00:11:24.910 --> 00:11:29.670
they already have a token saved as
a cookie, then what we're gonna do is

164
00:11:29.670 --> 00:11:34.400
automatically log them in and
then initialize the logout and get ready.

165
00:11:34.400 --> 00:11:37.060
So this is the structure I was
talking about that's pretty similar,

166
00:11:37.060 --> 00:11:39.370
having a login and a logout function.

167
00:11:39.370 --> 00:11:41.900
Naming them on login, on logout and

168
00:11:41.900 --> 00:11:45.110
then having an initialize to set
up the next thing to happen.

169
00:11:45.110 --> 00:11:48.540
And you can do this a lot of different
ways but the reason I picked this again,

170
00:11:48.540 --> 00:11:50.950
is just so that in the future
if you explore things more,

171
00:11:50.950 --> 00:11:52.770
you might see some similarities as you go.

172
00:11:53.990 --> 00:11:58.580
So when they log in,
we're going to set log in equal to what?

173
00:11:58.580 --> 00:11:59.454
True, right?

174
00:11:59.454 --> 00:12:03.760
Because they're now logged in, and that
will be pushed to our configuration file.

175
00:12:03.760 --> 00:12:07.280
And if you were dealing with react or
view, it would be pushed up into state and

176
00:12:07.280 --> 00:12:09.630
you could now have access in or
propagate through.

177
00:12:09.630 --> 00:12:12.090
But we're just using vanilla JavaScript.

178
00:12:12.090 --> 00:12:15.460
And then if they're logged in,
we wanna take that loginForm and

179
00:12:15.460 --> 00:12:16.550
we want to hide it.

180
00:12:16.550 --> 00:12:18.300
So we're gonna add a class of remove.

181
00:12:18.300 --> 00:12:22.173
And then if they're logged in,
we wanna take the logoutForm and

182
00:12:22.173 --> 00:12:24.910
we want to remove the class,
remove from it.

183
00:12:24.910 --> 00:12:29.378
Initially, everything is hidden on our
page, that's just one way to do it.

184
00:12:29.378 --> 00:12:33.252
If we were really going to full extent,
we build everything dynamically and

185
00:12:33.252 --> 00:12:34.350
only load what need.

186
00:12:34.350 --> 00:12:39.750
So we're kind of hacking a bit just
to see the deeper issues here and

187
00:12:39.750 --> 00:12:42.780
not code everything to the extent
that we possibly could.

188
00:12:42.780 --> 00:12:48.450
Now, if they're logged out, logged on,
log out this should not be true.

189
00:12:49.760 --> 00:12:52.180
Did anybody catch that?

190
00:12:52.180 --> 00:12:53.520
That should be false, right?

191
00:12:53.520 --> 00:12:57.777
On log out,
logged in should be false, right?

192
00:12:57.777 --> 00:12:59.530
That make sense to everyone?

193
00:12:59.530 --> 00:13:00.240
I think so.

194
00:13:00.240 --> 00:13:01.660
Okay?

195
00:13:01.660 --> 00:13:06.750
Then if they're logged out we wanna take
the loginForm and remove the classList.

196
00:13:06.750 --> 00:13:10.940
If you're not familiar, classList
is kind of native Java Script now,

197
00:13:10.940 --> 00:13:15.940
supported pretty across the board, and
it also allows for toggle which is nice.

198
00:13:15.940 --> 00:13:18.440
But I'm gonna do this all manually.

199
00:13:18.440 --> 00:13:23.740
But if you haven't played with classList,
a nice native JS feature there.

200
00:13:23.740 --> 00:13:26.340
And then we're going to add

201
00:13:26.340 --> 00:13:29.390
a remove to the logoutForm cuz
they're already logged out.

202
00:13:29.390 --> 00:13:31.170
So we just wanna show the loginForm.

203
00:13:32.850 --> 00:13:36.620
Now, initializing the loginForm,
we wanna get,

204
00:13:36.620 --> 00:13:41.380
as soon as somebody submits the loginForm.

205
00:13:41.380 --> 00:13:50.648
So again if we come to our site now.
&gt;&gt; Zac Gordon: I

206
00:13:50.648 --> 00:13:57.005
think I'm still running the last one, no?

207
00:14:06.002 --> 00:14:07.303
&gt;&gt; Speaker 2: Should the classes be

208
00:14:07.303 --> 00:14:12.090
hidden instead of removed?
&gt;&gt; Zac Gordon: I'm sorry?

209
00:14:12.090 --> 00:14:13.380
&gt;&gt; Speaker 2: Should the classes be hidden

210
00:14:13.380 --> 00:14:15.720
instead of removed?
&gt;&gt; Zac Gordon: Dude, you're totally right.

211
00:14:15.720 --> 00:14:17.510
Did I type remove every single time?

212
00:14:18.670 --> 00:14:20.130
I said that.
&gt;&gt; Speaker 2: I just wanted to

213
00:14:20.130 --> 00:14:25.037
check the CSS just to make sure myself.
&gt;&gt; Zac Gordon: Yeah, you were spot on, so

214
00:14:25.037 --> 00:14:26.641
what is that in here?

215
00:14:35.718 --> 00:14:36.870
&gt;&gt; Zac Gordon: There we go, okay.

216
00:14:38.800 --> 00:14:40.460
So we could change that to hidden.

217
00:14:42.260 --> 00:14:47.620
Perfect, good catch.
&gt;&gt; Zac Gordon: Okay,

218
00:14:47.620 --> 00:14:53.750
so we should see our loginForm off to
the side here, that's all well and good.

219
00:14:54.810 --> 00:14:57.560
And when somebody submits that,
as soon as they submit it,

220
00:14:57.560 --> 00:15:00.340
we wanna grab whatever values these are,
right?

221
00:15:00.340 --> 00:15:06.030
So as soon as they click submit, we will
prevent it from default loading, and

222
00:15:06.030 --> 00:15:12.446
we will pass in the config.username.value,
and config.password.value.

223
00:15:12.446 --> 00:15:16.405
Remember, any time you're dealing with
forms, you gotta use value at the end.

224
00:15:16.405 --> 00:15:20.062
Otherwise you're just gonna get the form
element itself, like the input field,

225
00:15:20.062 --> 00:15:20.699
for example.

226
00:15:21.990 --> 00:15:25.490
And now we're back to some axios stuff,
so this should be familiar.

227
00:15:25.490 --> 00:15:32.720
We're gonna change post to that, we're
gonna change our URL to config.rest_url,

228
00:15:32.720 --> 00:15:36.000
and then a pen on to it,
this new end point.

229
00:15:37.290 --> 00:15:38.498
So this end point,

230
00:15:38.498 --> 00:15:43.670
that needs to be a string, did not
exist until we installed our plugin.

231
00:15:43.670 --> 00:15:49.110
So remember how I was saying that
if we come to any WordPress site,

232
00:15:49.110 --> 00:15:53.069
and we add wp-JSON,
you get to the root of the site.

233
00:15:54.290 --> 00:15:56.095
And this tells us all the namespaces.

234
00:15:56.095 --> 00:16:02.788
And cuz I have that simple plugin and
I have my jwt-auth,

235
00:16:02.788 --> 00:16:07.677
I could add that here, jwt-auth/v1.

236
00:16:07.677 --> 00:16:14.440
And right there is an endpoint that I
should be able to do two things with.

237
00:16:14.440 --> 00:16:18.164
I can grab token, and
it will allow you to post, so

238
00:16:18.164 --> 00:16:21.195
you're making a request to get a token.

239
00:16:21.195 --> 00:16:25.150
And then it will allow us to
make a request to validate.

240
00:16:25.150 --> 00:16:30.310
So if I try to go to the token
right now It is not gonna work,

241
00:16:30.310 --> 00:16:34.800
because we need to pass it some validation
data in order for that to happen.

242
00:16:34.800 --> 00:16:38.477
So let's go ahead and set that up, but
now we know the reason this exists is just

243
00:16:38.477 --> 00:16:44.136
because this plugin created it.
&gt;&gt; Zac Gordon: So now the data that

244
00:16:44.136 --> 00:16:49.480
we're passing, this is where we take our
credentials that we just set up, up here.

245
00:16:51.000 --> 00:16:53.980
And we format them in a way
that could be passed,

246
00:16:53.980 --> 00:16:58.720
because you can't pass an object
across in a JSON format.

247
00:16:58.720 --> 00:17:02.830
But there is formurlencoded
passing in our credentials.

248
00:17:02.830 --> 00:17:09.130
And then the Content-Type is
going to be form-url-encoded.

249
00:17:09.130 --> 00:17:11.172
So we need to tell the server,

250
00:17:11.172 --> 00:17:16.192
get ready to expect some encoded form
data, our username and password.

251
00:17:16.192 --> 00:17:20.026
Otherwise it'll try to accept JSON,
and what we give it will be invalid.

252
00:17:20.026 --> 00:17:25.442
So that is not a good thing, we don't want
that to happen, so need to change that.

253
00:17:25.442 --> 00:17:30.226
And then once this goes through,
so once we hit here and

254
00:17:30.226 --> 00:17:34.698
ask for the token, and
it gives us a response back,

255
00:17:34.698 --> 00:17:41.580
we're basically going to take that data
and pass it into our cookie and set it.

256
00:17:41.580 --> 00:17:47.390
So this is the name of our cookie,
config.tokenCookie.

257
00:17:47.390 --> 00:17:52.656
And then where it says TOKEN_HERE,

258
00:17:52.656 --> 00:17:56.420
it's already been changed.

259
00:17:56.420 --> 00:18:00.080
So this was originally TOKEN_HERE,
that's going to be the actual data back.

260
00:18:00.080 --> 00:18:03.490
So we say, hey our cookie,
go ahead and save that token.

261
00:18:03.490 --> 00:18:07.010
And if you were to echo this out or
log it out, you would see

262
00:18:07.010 --> 00:18:11.950
what that looks like behind the scenes
when we want to get a token back.

263
00:18:11.950 --> 00:18:14.368
We could also do some things
like have it expire in one day.

264
00:18:14.368 --> 00:18:17.528
Or if you wanted to have
it expire in 100 days, or

265
00:18:17.528 --> 00:18:22.510
7 days, I mean more secure is probably
gonna be a shorter period of time.

266
00:18:22.510 --> 00:18:28.430
But if there is circumstance why you might
want someone to come back a week later and

267
00:18:28.430 --> 00:18:32.460
hit your site, and that cookie still
be saved, it'll work perfectly there.

268
00:18:32.460 --> 00:18:34.485
And I'm just gonna set it for 1.

269
00:18:34.485 --> 00:18:38.712
We could also make sure that
our cookie is secure, or

270
00:18:38.712 --> 00:18:41.990
working over, yeah, secure over SSL.

271
00:18:41.990 --> 00:18:46.770
So those are some benefits there,
we will configure all that.

272
00:18:46.770 --> 00:18:50.598
And then if that doesn't work,
we'll say hey login, I'm sorry,

273
00:18:50.598 --> 00:18:52.825
your login credentials didn't work.

274
00:18:52.825 --> 00:18:58.014
And then if things go completely wrong,
meaning that this whole request doesn't

275
00:18:58.014 --> 00:19:02.689
even go through, then we will go ahead and
display a login alert message.

276
00:19:02.689 --> 00:19:05.270
Saying hey, something went wrong,
go ahead and check this out.

277
00:19:06.940 --> 00:19:08.410
Now, so that's the login, right?

278
00:19:08.410 --> 00:19:12.420
We make a request to get a token,
we get it back, we store in a cookie.

279
00:19:12.420 --> 00:19:14.690
What happens when we want to log out?

280
00:19:14.690 --> 00:19:18.800
Well, it's pretty simple,
we basically just say, hey go ahead and

281
00:19:18.800 --> 00:19:20.830
remove the cookie that I set up.

282
00:19:20.830 --> 00:19:25.230
And once that cookie's gone,
then when our initial page loads,

283
00:19:25.230 --> 00:19:29.230
we don't have a cookie, and we can't
come in, so it'll just force log us out.

284
00:19:30.240 --> 00:19:35.366
So we will do COOKIE_ID
is gonna change to this,

285
00:19:35.366 --> 00:19:38.560
secure is setting to TRUE.

286
00:19:38.560 --> 00:19:43.900
Because when we saved it, it was true,
we also need to specify that the one

287
00:19:43.900 --> 00:19:48.150
that we wanna delete is the true one,
cuz we might have an insecure one as well.

288
00:19:48.150 --> 00:19:52.400
And then we want to manually call
Authentication.init, because otherwise,

289
00:19:52.400 --> 00:19:55.270
it will not run this code again and
force someone out.

290
00:19:55.270 --> 00:20:01.032
So you'll notice that after we run
initLogin, we have the credentials.

291
00:20:01.032 --> 00:20:04.281
But we're still going
to say run init again.

292
00:20:04.281 --> 00:20:07.277
And then after we log out,
we remove the cookie, and

293
00:20:07.277 --> 00:20:09.760
we say run the initialization again.

294
00:20:09.760 --> 00:20:14.420
Again, this whole flow is pretty
common from one thing to another.

295
00:20:14.420 --> 00:20:18.350
So fingers crossed,
let's see if we did it right.

296
00:20:18.350 --> 00:20:21.880
Let's see if there's more
to do of setting up save.

297
00:20:21.880 --> 00:20:27.266
You were right that this was in one thing
before, so let's come back over here,

298
00:20:32.649 --> 00:20:34.007
&gt;&gt; Zac Gordon: Look at that,

299
00:20:34.007 --> 00:20:37.160
I'm logged in, it works.

300
00:20:37.160 --> 00:20:38.950
Now, how do I testify I'm logged in?

301
00:20:38.950 --> 00:20:42.160
It's kind of hard to,
because we can't save anything yet.

302
00:20:42.160 --> 00:20:44.340
So that'll be kind of a next step we do.

303
00:20:44.340 --> 00:20:47.310
But when we click Logout,
that should show, and at this point,

304
00:20:47.310 --> 00:20:48.631
that's our confirmation.

305
00:20:48.631 --> 00:20:53.545
Cuz there's no way that this login form
should be disappearing until we have

306
00:20:53.545 --> 00:20:54.870
a cookie in place.

307
00:20:54.870 --> 00:20:58.680
And I guess we could come in and,
is it under Applications, or is that just

308
00:20:58.680 --> 00:21:04.905
Local Storage, where are our cookies?
&gt;&gt; Zac Gordon: Look at that, right, so

309
00:21:04.905 --> 00:21:11.445
we've got the cookie there, we could see,
&gt;&gt; Zac Gordon: The name if it,

310
00:21:11.445 --> 00:21:13.800
this is what we saved in our config file.

311
00:21:13.800 --> 00:21:17.170
We could see the value of it,
so this is gonna be our token.

312
00:21:17.170 --> 00:21:22.430
Look at that gigantum thing, it's huge.
&gt;&gt; Zac Gordon: The domain name,

313
00:21:22.430 --> 00:21:29.150
the path, when it expires, the size of it,
and then the fact that it is secure.

314
00:21:29.150 --> 00:21:31.520
So if I were to go ahead and
delete this cookie and

315
00:21:31.520 --> 00:21:35.170
refresh my page, I have to log in again.

316
00:21:35.170 --> 00:21:37.110
So I can manually control that as well,
and

317
00:21:37.110 --> 00:21:40.950
that cookie would have expired 24 hours
from now and disappeared anyways.

