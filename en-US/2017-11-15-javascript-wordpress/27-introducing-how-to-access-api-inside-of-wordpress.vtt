WEBVTT

1
00:00:00.510 --> 00:00:04.130
&gt;&gt; Zac Gordon: Let's move on then and
talk about actually accessing and

2
00:00:04.130 --> 00:00:06.610
using the API inside of WordPress.

3
00:00:06.610 --> 00:00:10.080
So again, there's two ways we can
go with working with the API.

4
00:00:10.080 --> 00:00:14.040
We can use it in a plugin or theme
inside of WordPress which means that we

5
00:00:14.040 --> 00:00:18.286
have a lot of authentication already
handled for us out of the box.

6
00:00:18.286 --> 00:00:21.630
Or we can do it completely decoupled
which means we need to go through all

7
00:00:21.630 --> 00:00:25.240
the process of authenticating via an API.

8
00:00:25.240 --> 00:00:29.860
So when we're using an API inside
of WordPress, it's not too complex.

9
00:00:29.860 --> 00:00:33.460
First we decide what data we need,
then we find the end point or

10
00:00:33.460 --> 00:00:36.870
end points we need,
we decide what arguments to pass, right?

11
00:00:36.870 --> 00:00:39.710
Are we using search before or
after or whatever.

12
00:00:39.710 --> 00:00:43.560
And then there's an internal
Backbone API Client.

13
00:00:43.560 --> 00:00:48.480
And what this does, it means that we
don't have to write the Ajax anymore.

14
00:00:48.480 --> 00:00:51.280
And when we want to save data or
delete data, we

15
00:00:51.280 --> 00:00:55.900
don't have to deal with the nuances or the
cookies or any of the validation for us.

16
00:00:55.900 --> 00:00:59.110
And we also don't even
need to know Backbone.

17
00:00:59.110 --> 00:01:01.400
It just happens to be built in Backbone.

18
00:01:01.400 --> 00:01:04.020
Why, well, because the media
library was built in it and

19
00:01:04.020 --> 00:01:06.180
the post revisions and
it's already in core.

20
00:01:06.180 --> 00:01:10.363
So if you're doing that time when it's
still a cutting edge one and popular one,

21
00:01:10.363 --> 00:01:11.542
it's already there.

22
00:01:11.542 --> 00:01:15.080
Plus the strength of Backbone
is in handling models, right?

23
00:01:15.080 --> 00:01:19.142
React and View were better at
handling the view side of things, but

24
00:01:19.142 --> 00:01:21.840
Backbone is pretty strong and
a solid choice for this.

25
00:01:21.840 --> 00:01:24.630
So we don't actually need
to know any Backbone, but

26
00:01:24.630 --> 00:01:26.650
we're gonna leverage this internal tool.

27
00:01:26.650 --> 00:01:29.040
And according to the documentation, and

28
00:01:29.040 --> 00:01:31.500
remember the gent,
I showed you that video at the beginning.

29
00:01:31.500 --> 00:01:34.130
He did a 15 minute talk on
the history of JavaScript and

30
00:01:34.130 --> 00:01:39.590
WordPress, also the fellow who
has been building this client.

31
00:01:39.590 --> 00:01:40.960
So if you have any questions,

32
00:01:40.960 --> 00:01:45.622
you just ping him and he'll help you
with it, pretty friendly fellow, Adam.

33
00:01:46.660 --> 00:01:49.270
So this is the official way to do it.

34
00:01:49.270 --> 00:01:53.078
They do not recommend you using Ajax or
Axios in a theme or

35
00:01:53.078 --> 00:01:56.737
in a plugin to access
the WordPress REST API, right?

36
00:01:56.737 --> 00:02:00.970
They suggest to use this tool that
was built specifically for it.

37
00:02:00.970 --> 00:02:03.217
And then,
everything else is JavaScript, right?

38
00:02:03.217 --> 00:02:08.808
So let me show you the final demo of what
we're trying to get after building and

39
00:02:08.808 --> 00:02:11.055
then we'll see how far we get.

40
00:02:11.055 --> 00:02:15.676
And we don't have to code
the whole thing together because

41
00:02:15.676 --> 00:02:19.931
you'll have all the code and
all the steps around it.

42
00:02:19.931 --> 00:02:24.649
So let's just go into,
&gt;&gt; Zac Gordon: Our

43
00:02:24.649 --> 00:02:27.385
site,
&gt;&gt; Zac Gordon: And

44
00:02:27.385 --> 00:02:32.217
I'm gonna copy all the files
from section five.

45
00:02:32.217 --> 00:02:35.911
These are all themes.
&gt;&gt; Zac Gordon: So

46
00:02:35.911 --> 00:02:41.550
copy these over into my themes folder
which is starting to get out of control.

47
00:02:41.550 --> 00:02:44.940
Side note, WordPress,
never leave a theme or

48
00:02:44.940 --> 00:02:47.680
plugin up on your site
that you're not using.

49
00:02:47.680 --> 00:02:52.743
Even if it's deactivated, it could
still be potentially hazardous and

50
00:02:52.743 --> 00:02:55.160
an open security loophole.

51
00:02:55.160 --> 00:02:58.850
So if you have something that you're
not using, deactivate it and delete it.

52
00:02:58.850 --> 00:03:00.190
Don't leave it up there, okay?

53
00:03:01.290 --> 00:03:05.327
Like this, don't launch a site with
30 themes that you're not using.

54
00:03:05.327 --> 00:03:09.020
[LAUGH] Not the best idea, but
for our testing, it's fine.

55
00:03:09.020 --> 00:03:15.647
So let's come in now and,
&gt;&gt; Zac Gordon: We are looking for,

56
00:03:17.987 --> 00:03:22.565
&gt;&gt; Zac Gordon: 5.6 completed.

57
00:03:29.352 --> 00:03:31.078
&gt;&gt; Zac Gordon: So the way this works is we

58
00:03:31.078 --> 00:03:36.181
have a custom template in our code and
there's a conditional statement,

59
00:03:36.181 --> 00:03:41.790
remember I said that you could load
JavaScript just on a certain page?

60
00:03:41.790 --> 00:03:47.630
So what I have done is I have
come into my sample page, and

61
00:03:47.630 --> 00:03:49.710
I have assigned it this custom template.

62
00:03:49.710 --> 00:03:51.540
And I haven't showed you yet
how to do this.

63
00:03:51.540 --> 00:03:53.800
I'm just showing you the different
pieces of where we'll get.

64
00:03:53.800 --> 00:03:59.140
So we created a custom template
that we've named Custom JS Page.

65
00:03:59.140 --> 00:04:03.680
And on this page we can click
here to add a new post, and

66
00:04:03.680 --> 00:04:06.860
we have access to everything.

67
00:04:06.860 --> 00:04:08.716
We could even pull in the media library.

68
00:04:17.205 --> 00:04:19.080
&gt;&gt; Zac Gordon: And we could save it.

69
00:04:19.080 --> 00:04:22.990
We see a nice message, and
we see the page refresh with what it is.

70
00:04:22.990 --> 00:04:25.500
We could also go in and edit something.

71
00:04:25.500 --> 00:04:29.519
So Testing 123, go ahead save it.

72
00:04:29.519 --> 00:04:34.428
See a nice little message, and
then Testing 123 has been updated.

73
00:04:34.428 --> 00:04:37.242
And finally we could delete it,
it will display this message,

74
00:04:37.242 --> 00:04:39.135
are you sure you want to delete this post?

75
00:04:39.135 --> 00:04:43.796
OK, and it's gone.

76
00:04:43.796 --> 00:04:48.572
So this is all being handled via
JavaScript and the REST API, and

77
00:04:48.572 --> 00:04:53.348
I think it's giving a pretty good
example of basic stuff that you

78
00:04:53.348 --> 00:04:56.020
may commonly need to know how to do.

