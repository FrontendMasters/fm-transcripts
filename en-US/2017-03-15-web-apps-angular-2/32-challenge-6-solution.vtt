WEBVTT

1
00:00:00.340 --> 00:00:04.570
&gt;&gt; Lukas Ruebbelke: Let's walk
through this review challenge and

2
00:00:04.570 --> 00:00:06.870
see which way the wind blows.

3
00:00:06.870 --> 00:00:09.680
What fortune shall befall us?

4
00:00:09.680 --> 00:00:14.730
So in a nutshell, we are going to be
creating a simple review component

5
00:00:14.730 --> 00:00:17.690
that includes file structure,
the component class, the template.

6
00:00:18.974 --> 00:00:22.912
And we did just integrate
it to our application,

7
00:00:22.912 --> 00:00:28.002
we need to display it via the selector
then, also via a route and

8
00:00:28.002 --> 00:00:32.532
then we'll do some data binding
in the process for fun.

9
00:00:35.030 --> 00:00:36.175
&gt;&gt; Lukas Ruebbelke: So let's open the code

10
00:00:36.175 --> 00:00:40.215
here,
&gt;&gt; Lukas Ruebbelke: And

11
00:00:45.408 --> 00:00:46.955
&gt;&gt; Lukas Ruebbelke: So we'll just start

12
00:00:46.955 --> 00:00:50.050
from nothing and we'll build this out.

13
00:00:50.050 --> 00:00:58.320
So, being that we are creating a review
feature, we'll start with a directory.

14
00:00:58.320 --> 00:00:59.170
So we'll just go review.

15
00:01:02.059 --> 00:01:06.685
&gt;&gt; Lukas Ruebbelke: And then from here,
let's create our TypeScript file.

16
00:01:06.685 --> 00:01:13.590
ViewComponent.ts.

17
00:01:13.590 --> 00:01:16.500
And I think I'll just do this in-line for
the sake of time.

18
00:01:19.300 --> 00:01:21.090
So first things first.

19
00:01:21.090 --> 00:01:21.910
Let's do the class.

20
00:01:24.390 --> 00:01:25.100
ReviewComponent.

21
00:01:28.970 --> 00:01:30.519
Let's import our dependency.

22
00:01:42.347 --> 00:01:43.530
&gt;&gt; Lukas Ruebbelke: We will decorate it.

23
00:01:46.674 --> 00:01:48.506
&gt;&gt; Lukas Ruebbelke: And
we'll add our selector.

24
00:01:51.924 --> 00:01:53.588
&gt;&gt; Lukas Ruebbelke: Just
call this app-review,

25
00:01:53.588 --> 00:01:55.460
keeping with the prefix format.

26
00:01:56.730 --> 00:02:00.362
And we'll go template, like so.

27
00:02:11.999 --> 00:02:13.474
&gt;&gt; Lukas Ruebbelke: Put something in here,

28
00:02:13.474 --> 00:02:18.210
and let's just do one other thing here
since I've been talking about this.

29
00:02:20.060 --> 00:02:21.978
We will implement the OnInit.

30
00:02:26.488 --> 00:02:30.266
&gt;&gt; Lukas Ruebbelke: And now I am
contractually obligated to do that.

31
00:02:36.442 --> 00:02:38.010
&gt;&gt; Lukas Ruebbelke: And, you know what?

32
00:02:38.010 --> 00:02:40.305
I'm gonna go ahead and
just type out the constructor as well.

33
00:02:43.770 --> 00:02:48.530
&gt;&gt; Speaker 2: Is that extends,
or implements OnInit?

34
00:02:48.530 --> 00:02:49.110
&gt;&gt; Lukas Ruebbelke: Yes, thank you.

35
00:02:49.110 --> 00:02:49.750
Good catch.

36
00:02:52.850 --> 00:02:57.980
So, it was actually totally fine until I
actually tried to add something, you know,

37
00:02:57.980 --> 00:02:58.550
contrary to that.

38
00:02:58.550 --> 00:03:00.230
So, thank you.

39
00:03:00.230 --> 00:03:01.060
Bonus point for you.

40
00:03:01.060 --> 00:03:02.590
Have yourself a sticky bun.

41
00:03:03.660 --> 00:03:05.400
I saved one for you.

42
00:03:05.400 --> 00:03:08.660
Okay.
So, now that I've created this lovely,

43
00:03:08.660 --> 00:03:11.560
lovely component, what is the next step?

44
00:03:12.690 --> 00:03:17.140
Create the component,
expose the component.

45
00:03:17.140 --> 00:03:19.840
So we need to make it available for
the rest of our application.

46
00:03:21.210 --> 00:03:27.014
So let's go to our app module,

47
00:03:27.014 --> 00:03:31.487
and let's add in, oops

48
00:03:45.892 --> 00:03:47.014
&gt;&gt; Lukas Ruebbelke: Review,

49
00:03:47.014 --> 00:03:49.402
review component.

50
00:03:53.020 --> 00:03:56.349
And now what do I need to add it?

51
00:03:56.349 --> 00:03:57.940
&gt;&gt; Speaker 3: Declarations.

52
00:03:57.940 --> 00:03:58.610
&gt;&gt; Lukas Ruebbelke: Declarations.

53
00:03:58.610 --> 00:03:59.110
Thank you.

54
00:04:02.910 --> 00:04:07.340
Alright now that its here, lets go
ahead and add it to our application.

55
00:04:07.340 --> 00:04:13.200
Now, I'm going to use your
misfortune as an example here.

56
00:04:13.200 --> 00:04:17.090
Now we did, so it's worth calling out.

57
00:04:17.090 --> 00:04:20.230
So, our pain becomes your gain.

58
00:04:24.450 --> 00:04:29.316
So if we go here into our InterStudy HTML,
and

59
00:04:29.316 --> 00:04:33.949
we go app-review
&gt;&gt; Lukas Ruebbelke: What do you think's

60
00:04:33.949 --> 00:04:34.468
gonna happen?

61
00:04:38.149 --> 00:04:38.963
&gt;&gt; Speaker 4: It's not gonna work.

62
00:04:38.963 --> 00:04:41.687
&gt;&gt; Lukas Ruebbelke: It's not gonna work.

63
00:04:41.687 --> 00:04:46.537
The reason being is,
&gt;&gt; Lukas Ruebbelke: Let's just

64
00:04:46.537 --> 00:04:48.280
verify that it's not going to work.

65
00:04:48.280 --> 00:04:50.720
So ideally what we want is, we want
it to basically live on every page.

66
00:04:50.720 --> 00:04:51.935
We're just gonna add it to the app.

67
00:04:55.061 --> 00:04:59.453
&gt;&gt; Lukas Ruebbelke: The issue
is that our perimeter for

68
00:04:59.453 --> 00:05:07.364
our Angular application only
extends to our root component.

69
00:05:07.364 --> 00:05:13.260
And so because this is our root component,

70
00:05:13.260 --> 00:05:16.260
this is the extent of
our Angular application.

71
00:05:17.390 --> 00:05:22.680
And so once you add it to the app,
it is available to your

72
00:05:22.680 --> 00:05:27.760
Angular application, but it needs
to live within the component tree.

73
00:05:28.770 --> 00:05:33.122
And so this is something
we've found out the hard way,

74
00:05:33.122 --> 00:05:38.512
one of the challenges, and
we were able to solve that by just hopping

75
00:05:38.512 --> 00:05:43.350
into the app component template and
just adding it in there.

76
00:05:43.350 --> 00:05:48.308
So up there,
you can see now that here it is,

77
00:05:48.308 --> 00:05:52.730
so lets actually add this to a route, so

78
00:05:52.730 --> 00:05:58.090
I'm going to take this away and
then hop into our

79
00:05:58.090 --> 00:06:03.866
app router module and
we'll just duplicate this.

80
00:06:03.866 --> 00:06:08.915
And let's import.

81
00:06:21.536 --> 00:06:24.209
&gt;&gt; Lukas Ruebbelke: What is going on here?

82
00:06:31.336 --> 00:06:33.949
&gt;&gt; Lukas Ruebbelke: Problem with
the IntelliSense is it's amazing until it

83
00:06:33.949 --> 00:06:37.350
totally stops working and
you're like I don't know what I'm doing.

84
00:06:38.980 --> 00:06:41.510
Okay, then from here

85
00:06:43.950 --> 00:06:47.830
we'll do review and review component.

86
00:06:49.030 --> 00:06:52.780
So remember a route has a path and
a component.

87
00:06:53.990 --> 00:06:59.568
And so if we go back into our application.

88
00:06:59.568 --> 00:07:03.997
And we go to review,
you can see here that it now loads and

89
00:07:03.997 --> 00:07:10.419
it essentially takes the review component
and it puts it into our router outlet.

90
00:07:12.519 --> 00:07:17.704
&gt;&gt; Speaker 5: Could you just show one more
time, you went in to the app component

91
00:07:17.704 --> 00:07:23.290
HTML, as opposed to the index HTML,
in order to get pass the approot?

92
00:07:23.290 --> 00:07:24.600
Where exactly did you place that again, or

93
00:07:24.600 --> 00:07:26.820
can you just place it
anywhere within that code?

94
00:07:26.820 --> 00:07:31.621
&gt;&gt; Lukas Ruebbelke: So I put it,
originally, I had it outside the approot

95
00:07:31.621 --> 00:07:37.920
component and because the approot
component is the root component for

96
00:07:37.920 --> 00:07:42.832
our Angular application,
anything outside of that is

97
00:07:42.832 --> 00:07:46.702
not an angular application essentially.

98
00:07:46.702 --> 00:07:50.066
And the, so what we did is we
simply hopped into our top level or

99
00:07:50.066 --> 00:07:52.995
root component, and
we just put it in the HTML there.

100
00:07:58.814 --> 00:08:00.350
&gt;&gt; Lukas Ruebbelke: So
there's a question by Chris.

101
00:08:00.350 --> 00:08:05.100
Any use cases for actually running
multiple Angular apps on one page?

102
00:08:05.100 --> 00:08:08.130
And I believe there is.

103
00:08:08.130 --> 00:08:10.420
I think that there's a good reason or

104
00:08:10.420 --> 00:08:16.480
there may be a good reason to have,
I think it more so,

105
00:08:16.480 --> 00:08:20.450
it's like a composition of applications
that are completely unrelated.

106
00:08:20.450 --> 00:08:24.190
So like for instance,
like a dashboard is a good example or

107
00:08:24.190 --> 00:08:26.320
something that's actually
aggregating information.

108
00:08:26.320 --> 00:08:32.220
For instance, they were talking about
a Bloomberg terminal, that's a good case.

109
00:08:32.220 --> 00:08:35.262
As well as, I think what you'll
start to see is actually

110
00:08:35.262 --> 00:08:39.816
in Angular one application, living next
to an Angular two application, as well.

111
00:08:39.816 --> 00:08:45.220
But there are definitely cases for running
multiple applications in the same page.

112
00:08:45.220 --> 00:08:45.850
&gt;&gt; Speaker 6: I did check, and

113
00:08:45.850 --> 00:08:50.250
you can have multiple modules
in that bootstrappy thing.

114
00:08:50.250 --> 00:08:51.670
&gt;&gt; Lukas Ruebbelke: Interesting, cool.

115
00:08:54.420 --> 00:08:59.520
And let me see here,
what I will do as well,

116
00:08:59.520 --> 00:09:01.020
let's go ahead and just exit navigation.

117
00:09:02.830 --> 00:09:07.080
Since I'm here
&gt;&gt; Lukas Ruebbelke: We'll go just review.

118
00:09:13.259 --> 00:09:19.150
&gt;&gt; Lukas Ruebbelke: And so what I'm doing
is I'm just keeping a object map for

119
00:09:19.150 --> 00:09:21.990
our routes to navigate to.

120
00:09:23.200 --> 00:09:25.820
But not necessary,
this is purely preferential.

121
00:09:26.980 --> 00:09:31.359
And then if I go to, [SOUND], here,

122
00:09:31.359 --> 00:09:37.250
then I can just go link.review,
and review.

123
00:09:37.250 --> 00:09:39.280
So I'm running out of space a bit, but.

124
00:09:44.402 --> 00:09:50.090
&gt;&gt; Lukas Ruebbelke: Items, widgets,
review, so now we're able to navigate it.

125
00:09:50.090 --> 00:09:55.582
And truth be told, if somebody were
going to make a simple like website,

126
00:09:55.582 --> 00:09:59.376
this is actually a pretty
solid way to go about it.

127
00:09:59.376 --> 00:10:02.630
Let me create a component, it has template
and any kind of functionality you want.

128
00:10:02.630 --> 00:10:07.580
So for instance, if you had a list of
historical radio shows that you wanted to

129
00:10:07.580 --> 00:10:12.500
expose for your mother or favorite albums
or whatever there's various reason,

130
00:10:12.500 --> 00:10:15.700
this is a really easy way to
spin something up like that.

131
00:10:15.700 --> 00:10:18.810
It's like any time you have a JSON
object it's like I've got this data.

132
00:10:18.810 --> 00:10:22.529
Well we just drop it in and display it and

133
00:10:22.529 --> 00:10:28.076
even doing a simple multipage
website of about whatever.

134
00:10:28.076 --> 00:10:33.760
This is pretty simple, so
at a minimum, we talk about

135
00:10:33.760 --> 00:10:39.660
web applications but there's some utility
in just even using this to do simple,

136
00:10:39.660 --> 00:10:44.860
small info pages that you're exposing
some meaningful information to someone.

137
00:10:44.860 --> 00:10:47.780
So like the radio shows that you
were telling me about earlier.

138
00:10:47.780 --> 00:10:48.770
It is pretty awesome.

139
00:10:49.970 --> 00:10:53.230
So let's hop back in and
let's do some binding.

140
00:10:56.127 --> 00:10:59.882
&gt;&gt; Lukas Ruebbelke: I'll just close
this all down so we can focus on this.

141
00:10:59.882 --> 00:11:04.886
&gt;&gt; Lukas Ruebbelke: And so,
the first thing I'll do I'm just going to

142
00:11:04.886 --> 00:11:12.553
extract this and we'll just go title
&gt;&gt; Lukas Ruebbelke: And

143
00:11:12.553 --> 00:11:14.910
you'll notice here that,
and I can just skip this.

144
00:11:28.525 --> 00:11:30.068
&gt;&gt; Lukas Ruebbelke: Just so
we can verify that we're binding it.

145
00:11:30.068 --> 00:11:33.180
Wait for it.

146
00:11:33.180 --> 00:11:35.200
So, simple interpolation.

147
00:11:35.200 --> 00:11:36.740
I think this is pretty straightforward.

148
00:11:38.330 --> 00:11:43.493
Let's go here, and let's

149
00:11:43.493 --> 00:11:49.779
create an array, reviewItems,

150
00:11:49.779 --> 00:11:55.167
we'll go module, routes,

151
00:11:55.167 --> 00:12:00.336
components and services.

152
00:12:00.336 --> 00:12:07.072
Now from here, let's go ahead and

153
00:12:07.072 --> 00:12:11.263
put this on the page.

154
00:12:11.263 --> 00:12:15.910
We'll go div, come on.

155
00:12:19.750 --> 00:12:23.900
Now we're using the asterisk to denote
that we are modifying the dom in G4.

156
00:12:25.100 --> 00:12:31.550
And let's go item

157
00:12:31.550 --> 00:12:36.350
of so not for, we had a.

158
00:12:36.350 --> 00:12:37.470
&gt;&gt; Speaker 2: N.

159
00:12:37.470 --> 00:12:43.145
&gt;&gt; Lukas Ruebbelke: Yeah,
in also do let, there we go.

160
00:12:43.145 --> 00:12:48.537
And then from here, I do occasionally get

161
00:12:48.537 --> 00:12:54.250
Angular one and ng repeat syntax confused.

162
00:12:56.370 --> 00:13:00.000
Of an n so that's a little
gotcha if you're done ng repeat,

163
00:13:00.000 --> 00:13:04.772
it's an easy way to kinda cause things
to go off the rails a little bit.

164
00:13:09.100 --> 00:13:15.240
&gt;&gt; Lukas Ruebbelke: Here we are,
so far so good and yes.

165
00:13:15.240 --> 00:13:21.450
&gt;&gt; Speaker 6: Hans has a query about
review model to type your data.

166
00:13:24.000 --> 00:13:27.580
&gt;&gt; Lukas Ruebbelke: Hans, if that
would make you happy I will do one.

167
00:13:27.580 --> 00:13:28.290
Yes, I will.

168
00:13:28.290 --> 00:13:30.710
So in fact,
let's take this a step further.

169
00:13:30.710 --> 00:13:31.530
Why not?

170
00:13:31.530 --> 00:13:34.500
Let's just do it, like end to end feature.

171
00:13:42.180 --> 00:13:43.977
&gt;&gt; Lukas Ruebbelke: Let's go here.

172
00:13:43.977 --> 00:13:48.150
Now, what I am going to have to do is,
I'll fix this in a second.

173
00:13:48.150 --> 00:13:53.560
So, new TypeScript file.

174
00:13:53.560 --> 00:13:56.172
We just go review.borrow .ts.

175
00:13:56.172 --> 00:13:59.543
Export interface.

176
00:14:03.706 --> 00:14:07.920
&gt;&gt; Lukas Ruebbelke: Let's go I don't know,

177
00:14:07.920 --> 00:14:11.630
number title:string and

178
00:14:11.630 --> 00:14:15.850
we'll just leave it at that.

179
00:14:15.850 --> 00:14:19.850
I think we understand that, from here,

180
00:14:19.850 --> 00:14:23.690
we can just extend this
interface as much as we want.

181
00:14:23.690 --> 00:14:27.324
We'll go to TypeScript file,

182
00:14:27.324 --> 00:14:34.182
review.service
&gt;&gt; Lukas Ruebbelke: Now,

183
00:14:34.182 --> 00:14:39.820
let's do something interesting
&gt;&gt; Lukas Ruebbelke: Just copy this over.

184
00:14:43.141 --> 00:14:44.600
&gt;&gt; Lukas Ruebbelke: And let's refactor.

185
00:14:48.990 --> 00:14:50.610
&gt;&gt; Speaker 2: Are there test cases?

186
00:14:52.880 --> 00:14:54.570
&gt;&gt; Lukas Ruebbelke: What's that?

187
00:14:54.570 --> 00:14:55.785
You're trolling me.

188
00:14:55.785 --> 00:15:01.641
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Lukas Ruebbelke: Okay,

189
00:15:01.641 --> 00:15:07.020
so pretty much the same,
we just start chopping some stuff out.

190
00:15:07.020 --> 00:15:07.740
What are we missing?

191
00:15:11.150 --> 00:15:11.670
&gt;&gt; All: Injectable.

192
00:15:11.670 --> 00:15:18.844
&gt;&gt; Lukas Ruebbelke: Injectable,
that's right.

193
00:15:23.132 --> 00:15:28.026
&gt;&gt; Lukas Ruebbelke: So I can pick it up.

194
00:15:45.104 --> 00:15:46.635
&gt;&gt; Lukas Ruebbelke: I may have
done my interface wrong, hang on.

195
00:15:46.635 --> 00:15:52.800
&gt;&gt; [INAUDIBLE]
&gt;&gt; Lukas Ruebbelke: Yes thank you.

196
00:15:56.940 --> 00:15:57.652
There we go.
And so

197
00:15:57.652 --> 00:16:02.079
now this is, it's not gonna to
work right out of the gates.

198
00:16:03.980 --> 00:16:07.890
It is an array of review objects,
it's a question.

199
00:16:07.890 --> 00:16:11.272
But it's saying you are a loser, and

200
00:16:11.272 --> 00:16:15.865
to that I say, you are correct,
but not for long.

201
00:16:15.865 --> 00:16:19.599
Like a Phoenix,
I will rise from the ashes.

202
00:16:24.543 --> 00:16:27.705
&gt;&gt; Lukas Ruebbelke: Sublime has
this really handy feature where you

203
00:16:27.705 --> 00:16:31.350
can actually,
I think you can do vertical selection.

204
00:16:31.350 --> 00:16:35.626
But you can actually like [CROSSTALK]
&gt;&gt; Speaker 6: You mean like the multiple

205
00:16:35.626 --> 00:16:36.400
cursor thing?

206
00:16:36.400 --> 00:16:37.080
&gt;&gt; Lukas Ruebbelke: Yeah.

207
00:16:37.080 --> 00:16:39.860
&gt;&gt; Speaker 6: Actually
the intellisense have them too.

208
00:16:39.860 --> 00:16:42.801
It's like I can never figure out how
to remember how to use it though.

209
00:16:45.170 --> 00:16:47.360
It's not Cmd+D like it
would be in Sublime.

210
00:16:47.360 --> 00:16:48.590
&gt;&gt; Lukas Ruebbelke: Yeah so
in Sublime it's Cmd+D.

211
00:16:48.590 --> 00:16:49.819
You just select everything and
just [SOUND].

212
00:16:49.819 --> 00:16:50.319
&gt;&gt; Speaker 6: What is it?

213
00:16:50.319 --> 00:16:53.993
&gt;&gt; Speaker 8: Option+C does Cmd+D too.

214
00:16:53.993 --> 00:16:55.980
&gt;&gt; Lukas Ruebbelke: Okay so here we go.

215
00:16:55.980 --> 00:16:57.190
Hans this is your model.

216
00:16:58.460 --> 00:17:03.230
And now we need to, that we've created
something, what do you obviously do?

217
00:17:03.230 --> 00:17:05.950
Create, expose.

218
00:17:07.220 --> 00:17:13.629
So let's go here, and
we're going to barrel roll this.

219
00:17:20.305 --> 00:17:24.949
&gt;&gt; Lukas Ruebbelke: review.service,

220
00:17:30.623 --> 00:17:34.630
&gt;&gt; Lukas Ruebbelke: And
then from here let's go into our module.

221
00:17:38.870 --> 00:17:43.013
And imported where does it go?

222
00:17:43.013 --> 00:17:46.570
&gt;&gt; [INAUDIBLE]
&gt;&gt; Lukas Ruebbelke: Very good.

223
00:17:46.570 --> 00:17:49.481
I love it.

224
00:17:49.481 --> 00:17:56.929
Review service, and so
now how do I get it into my component?

225
00:18:00.764 --> 00:18:02.387
&gt;&gt; Speaker 9: Have you imported up top?

226
00:18:02.387 --> 00:18:03.940
&gt;&gt; Lukas Ruebbelke: So
we do have to do that.

227
00:18:11.308 --> 00:18:12.771
&gt;&gt; Lukas Ruebbelke: Service.

228
00:18:18.614 --> 00:18:22.230
&gt;&gt; Lukas Ruebbelke: This is, there we go.

229
00:18:24.725 --> 00:18:27.537
&gt;&gt; Speaker 9: Now if you barrel rolled it,
do you have to do the reuse service or

230
00:18:27.537 --> 00:18:28.852
does all share pick that up?

231
00:18:28.852 --> 00:18:31.320
&gt;&gt; Lukas Ruebbelke: Yes, good catch,
so I could do it this way, but

232
00:18:31.320 --> 00:18:32.950
I can also do it here.

233
00:18:34.080 --> 00:18:37.090
And because I've barrel-rolled it,
what else can I do?

234
00:18:37.090 --> 00:18:38.002
&gt;&gt; Speaker 10: Review.

235
00:18:38.002 --> 00:18:39.690
&gt;&gt; Speaker 9: Port the model.
&gt;&gt; Lukas Ruebbelke: Port the model.

236
00:18:39.690 --> 00:18:40.750
So, good catch.

237
00:18:43.679 --> 00:18:48.330
&gt;&gt; Lukas Ruebbelke: And then from here,
&gt;&gt; Lukas Ruebbelke: What now.

238
00:18:48.330 --> 00:18:50.110
How do I get it into my component?

239
00:18:50.110 --> 00:18:51.700
&gt;&gt; Speaker 11: Constructor injection.

240
00:18:51.700 --> 00:18:52.630
&gt;&gt; Lukas Ruebbelke: Yes.

241
00:18:52.630 --> 00:18:53.970
Thank you.
Constructor injection.

242
00:18:58.340 --> 00:19:02.750
Constructor assignment,
using private you could do public, but so

243
00:19:02.750 --> 00:19:08.550
we'll go reviewService
&gt;&gt; Lukas Ruebbelke: Okay?

244
00:19:10.760 --> 00:19:15.736
Now if I were going to type this
&gt;&gt; Lukas Ruebbelke: Review, and

245
00:19:15.736 --> 00:19:19.090
because it's an array of review items,
we'll go like that.

246
00:19:21.490 --> 00:19:27.390
And then on ngOnInit
we'll go this.reviewItems

247
00:19:27.390 --> 00:19:32.170
equals reviewService, reviewItems.

248
00:19:35.074 --> 00:19:36.390
&gt;&gt; Lukas Ruebbelke: How do
we feel about this, good?

249
00:19:39.039 --> 00:19:44.230
&gt;&gt; Lukas Ruebbelke: I feel good about it,
but something is going to break.

250
00:19:44.230 --> 00:19:45.055
But let's see what happens.

251
00:19:45.055 --> 00:19:51.805
[SOUND] Our bindings are broken and
what do we do?

252
00:19:51.805 --> 00:19:55.003
&gt;&gt; Speaker 10: Item.title.

253
00:19:55.003 --> 00:19:55.747
&gt;&gt; Lukas Ruebbelke: There we go.

254
00:20:06.941 --> 00:20:10.151
&gt;&gt; Lukas Ruebbelke: Wait for
it, there we have it.

255
00:20:10.151 --> 00:20:14.444
So this is and,
I don't know how long I've doing this for

256
00:20:14.444 --> 00:20:17.830
maybe 20 minutes or less about.

257
00:20:17.830 --> 00:20:22.490
But that is kind of, if you went back and
just watched this portion of the video.

258
00:20:22.490 --> 00:20:28.827
That's how you create a future start
to finish with typings and jokes.

259
00:20:28.827 --> 00:20:31.710
All right.

260
00:20:31.710 --> 00:20:40.314
So, do we have any questions?

261
00:20:40.314 --> 00:20:41.430
How do we feel about this?

262
00:20:41.430 --> 00:20:45.220
Does this make a lot more
sense than yesterday?

263
00:20:45.220 --> 00:20:48.260
Are we starting to kind of see the pieces
here, and how they fit together?

264
00:20:50.360 --> 00:20:53.650
And so, when we talk about the big
picture we kind of, we now,

265
00:20:53.650 --> 00:20:59.092
because we've written code,
we have experience with ng module,

266
00:20:59.092 --> 00:21:03.560
with routes, with components,
and with services.

267
00:21:05.110 --> 00:21:08.940
And so from here, we've kind of
touched all the major pieces.

268
00:21:08.940 --> 00:21:12.440
I mean so there are some kind of
specific things like pipes and

269
00:21:12.440 --> 00:21:15.630
directives that you can get into, but

270
00:21:16.830 --> 00:21:23.010
when we focus on the 80,
20 portion of Angular 2 like we've hit it.

271
00:21:23.010 --> 00:21:29.910
Like we can take this, and uses it as
a platform to build nontrivial features.

