WEBVTT

1
00:00:00.250 --> 00:00:03.943
&gt;&gt; Lukas Ruebbelke: There's two
way to tackle forms in Angular 2.

2
00:00:03.943 --> 00:00:09.223
You have template driven forms and
reactive forms, and

3
00:00:09.223 --> 00:00:14.173
we are going to today tackle
template driven forms.

4
00:00:14.173 --> 00:00:19.321
This is the closest or
this is more close in line to how forms

5
00:00:19.321 --> 00:00:24.681
are handled in Angular 1 and
I think in terms of getting up and

6
00:00:24.681 --> 00:00:28.167
running, this is by far the simplest.

7
00:00:28.167 --> 00:00:32.466
So we'll just start, template driven
forms and we'll go from there,

8
00:00:32.466 --> 00:00:35.847
cuz I think once you understand
template driven forms.

9
00:00:35.847 --> 00:00:40.442
It's really easy to kind of
make that leap into reactive

10
00:00:40.442 --> 00:00:45.430
forms where you are essentially
declaring your form model,

11
00:00:45.430 --> 00:00:50.737
your underlying model in the component and
not in the template.

12
00:00:50.737 --> 00:00:54.919
So we're going to talk about
the FormsModule, Form Controls and

13
00:00:54.919 --> 00:00:59.189
then some validation or
more specifically, Validation Styles.

14
00:01:01.970 --> 00:01:05.802
So first and foremost,
in courtesy of the Angular CLI,

15
00:01:05.802 --> 00:01:08.828
we do not have to worry
about this directly.

16
00:01:08.828 --> 00:01:13.199
But if you're going to use forms,
we need to import the FormsModule.

17
00:01:13.199 --> 00:01:17.127
So, this is not part of Angular Core.

18
00:01:17.127 --> 00:01:21.527
So if we go into our code base,
you will notice that,

19
00:01:21.527 --> 00:01:24.628
just close all this down real quick.

20
00:01:29.327 --> 00:01:32.410
&gt;&gt; Lukas Ruebbelke: In the app module,

21
00:01:32.410 --> 00:01:38.202
we are importing the FormsModule.

22
00:01:38.202 --> 00:01:40.496
And within our imports,
we're importing it as well.

23
00:01:40.496 --> 00:01:46.260
So now essentially, we're making
forms available to our application.

24
00:01:46.260 --> 00:01:49.717
Now if this was reactive,
if we were doing, essentially forms,

25
00:01:49.717 --> 00:01:51.462
we would need to import that module.

26
00:01:53.720 --> 00:01:55.788
So, so far so good.

27
00:01:55.788 --> 00:01:56.680
We want forms.

28
00:01:56.680 --> 00:01:58.409
We need the FormsModule.

29
00:01:58.409 --> 00:02:00.239
Boom, done.

30
00:02:00.239 --> 00:02:04.354
Well, ngModel.

31
00:02:04.354 --> 00:02:05.830
So, that's pretty cool.

32
00:02:05.830 --> 00:02:08.218
I think everybody, we know about this.

33
00:02:08.218 --> 00:02:11.205
I've only been hammering at it for

34
00:02:11.205 --> 00:02:16.149
two days as the poster child for
two-way data binding and

35
00:02:16.149 --> 00:02:21.818
what this does is under the hood,
it also creates a FormControl.

36
00:02:21.818 --> 00:02:26.980
And so
if you remember when I was talking about,

37
00:02:26.980 --> 00:02:32.012
you have a form that represents some data,
but

38
00:02:32.012 --> 00:02:38.077
equally important is we need
to keep track of the state,

39
00:02:38.077 --> 00:02:44.298
of the form and
that is where FormControls or FormGroup.

40
00:02:44.298 --> 00:02:47.004
So a form group is just
a group of form controls.

41
00:02:47.004 --> 00:02:51.828
But we have this underlying
mechanism under the hood that is

42
00:02:51.828 --> 00:02:56.073
used to keep track of
essentially not only the data or

43
00:02:56.073 --> 00:03:01.009
the state of our form, but
rather the condition of the form.

44
00:03:01.009 --> 00:03:02.215
Is it valid?

45
00:03:02.215 --> 00:03:02.994
Yes or no?

46
00:03:02.994 --> 00:03:06.048
And so we saw kind of a mini
example yesterday, but

47
00:03:06.048 --> 00:03:08.170
we'll jump into that in a moment.

48
00:03:09.360 --> 00:03:11.021
And so in fact, let's just do that now.

49
00:03:11.021 --> 00:03:12.072
Why not?

50
00:03:14.948 --> 00:03:16.363
&gt;&gt; Lukas Ruebbelke: So
if we go to I don't know,

51
00:03:17.677 --> 00:03:22.038
&gt;&gt; Lukas Ruebbelke: Let's go to actually

52
00:03:22.038 --> 00:03:25.434
widget detail.

53
00:03:28.013 --> 00:03:33.330
&gt;&gt; Lukas Ruebbelke: And
I wanna see if I can actually work in here

54
00:03:33.330 --> 00:03:41.325
without actually solving your
challenge for you, we'll see.

55
00:03:41.325 --> 00:03:43.821
So if we create a form,
actually I don't even need a form.

56
00:03:43.821 --> 00:03:45.244
Let's go input.

57
00:03:47.652 --> 00:03:51.201
&gt;&gt; Lukas Ruebbelke: NgModel.

58
00:04:03.716 --> 00:04:07.413
&gt;&gt; Lukas Ruebbelke: Let's say, my value.

59
00:04:10.607 --> 00:04:13.809
&gt;&gt; Lukas Ruebbelke: Actually,
let's do, I don't know.

60
00:04:13.809 --> 00:04:19.451
Title and we'll go my input.

61
00:04:24.705 --> 00:04:26.389
&gt;&gt; Lukas Ruebbelke: And
then what we'll do.

62
00:04:39.127 --> 00:04:42.125
&gt;&gt; Lukas Ruebbelke: So
using the local reference variable,

63
00:04:42.125 --> 00:04:45.219
we're just keeping track of this input.

64
00:04:45.219 --> 00:04:50.294
And then from here,
we can pull some information off.

65
00:04:53.269 --> 00:04:54.631
&gt;&gt; Lukas Ruebbelke: Here we go.

66
00:04:54.631 --> 00:04:59.959
Now unfortunately, because we're calling
to JSON, sometimes this breaks and

67
00:04:59.959 --> 00:05:04.661
you create like a circular reference
where you're kind of referencing

68
00:05:04.661 --> 00:05:09.285
something that references something
else that references itself and

69
00:05:09.285 --> 00:05:12.371
I think this will probably throw up and
it did.

70
00:05:18.198 --> 00:05:21.278
&gt;&gt; Lukas Ruebbelke: So,
let's go back here and we can do value.

71
00:05:28.280 --> 00:05:30.125
&gt;&gt; Lukas Ruebbelke: Now,
what I also want to point out here.

72
00:05:34.818 --> 00:05:38.210
&gt;&gt; Lukas Ruebbelke: Is you can also track.

73
00:05:38.210 --> 00:05:43.217
So using the local reference variable,
you could essentially

74
00:05:43.217 --> 00:05:49.656
track the value of this input, but
it's not essentially true to a data.

75
00:05:53.157 --> 00:05:56.198
&gt;&gt; Lukas Ruebbelke: Let's go back.

76
00:05:56.198 --> 00:05:57.896
And so I think I have to, so

77
00:05:57.896 --> 00:06:02.780
what you have to do is essentially
create another event for that to update.

78
00:06:02.780 --> 00:06:06.236
So you notice here, I'm typing and so

79
00:06:06.236 --> 00:06:12.187
I don't want to get in the weeds here,
but you can go here, here.

80
00:06:12.187 --> 00:06:16.549
And once you do that, that will update.

81
00:06:16.549 --> 00:06:21.750
So by having ngModel up here, it forces
that tick and allows it to update.

82
00:06:21.750 --> 00:06:25.879
So, let's back this up and let's continue.

83
00:06:37.620 --> 00:06:40.193
&gt;&gt; Lukas Ruebbelke: More so, actually,
let's back this up even more.

84
00:07:01.455 --> 00:07:03.755
&gt;&gt; Lukas Ruebbelke: So
we can directly, actually reference.

85
00:07:03.755 --> 00:07:09.435
So before, I was actually not referencing
the ngModule on that element,

86
00:07:09.435 --> 00:07:14.486
but using myInput ngModel,
let's see what happens if I go here.

87
00:07:16.229 --> 00:07:18.475
&gt;&gt; Lukas Ruebbelke: Is this
gonna throw up or not?

88
00:07:21.300 --> 00:07:24.980
&gt;&gt; Lukas Ruebbelke: Again,
circular reference.

89
00:07:24.980 --> 00:07:29.681
More so,

90
00:07:29.681 --> 00:07:35.558
what I wanna

91
00:07:35.558 --> 00:07:39.677
try is.

92
00:07:48.609 --> 00:07:52.166
&gt;&gt; Lukas Ruebbelke: So,
let's just talk about what I've just done.

93
00:08:02.008 --> 00:08:04.440
&gt;&gt; Lukas Ruebbelke: So
using a local variable reference.

94
00:08:08.791 --> 00:08:13.906
&gt;&gt; Lukas Ruebbelke: Like this, I can pull
just, I'm basic creating a reference to

95
00:08:13.906 --> 00:08:19.807
the input and then using .value,
I can pull the value off of that input.

96
00:08:19.807 --> 00:08:23.777
Not particularly well,
it's a way to actually pull,

97
00:08:23.777 --> 00:08:27.932
essentially values off of
inputs without binding to it.

98
00:08:27.932 --> 00:08:31.607
The caveat to that is in order for
you to get the latest one,

99
00:08:31.607 --> 00:08:36.568
you essentially need an Angular tick or
some Angular event for that to update.

100
00:08:36.568 --> 00:08:37.701
Yes.

101
00:08:37.701 --> 00:08:39.868
&gt;&gt; Speaker 2: What's
the significance of ngModel,

102
00:08:39.868 --> 00:08:43.287
because title then if it's my
input that it's referencing?

103
00:08:43.287 --> 00:08:44.567
Where does title come into place?

104
00:08:44.567 --> 00:08:49.809
&gt;&gt; Lukas Ruebbelke: So now,
this is we're binding this input to

105
00:08:49.809 --> 00:08:55.870
the value of title on the component class.

106
00:08:55.870 --> 00:08:57.231
So, let me just set this here.

107
00:09:07.928 --> 00:09:10.827
&gt;&gt; Lukas Ruebbelke: Why am I here man!?

108
00:09:15.124 --> 00:09:16.616
&gt;&gt; Lukas Ruebbelke: Let's go back.

109
00:09:21.158 --> 00:09:22.870
&gt;&gt; Lukas Ruebbelke: So essentially,

110
00:09:22.870 --> 00:09:27.888
we're using ngModel to set
the value of the input and

111
00:09:27.888 --> 00:09:32.792
to track it, but
then we can also bypass ngModel and

112
00:09:32.792 --> 00:09:39.200
just get the underlying HTML value
creating the local reference.

113
00:09:39.200 --> 00:09:44.431
So when you actually just set,
essentially pound some variable name,

114
00:09:44.431 --> 00:09:47.918
that would just reference
the element itself,

115
00:09:47.918 --> 00:09:50.979
cuz we're not assigning it to anything.

116
00:09:50.979 --> 00:09:56.570
And so now if I go like this, you can see
that they are essentially one in the same.

117
00:09:56.570 --> 00:10:01.366
Because when I update ngModel,
it's updating the value of that input.

118
00:10:01.366 --> 00:10:05.497
So, this is just a lower
level way to reference that.

119
00:10:07.728 --> 00:10:10.033
&gt;&gt; Lukas Ruebbelke: Now
if we go back here.

120
00:10:14.377 --> 00:10:16.962
&gt;&gt; Lukas Ruebbelke: If I go like this and
this is.

121
00:10:20.860 --> 00:10:23.510
&gt;&gt; Lukas Ruebbelke: Where
things get interesting.

122
00:10:23.510 --> 00:10:29.369
We can actually reference my input or
this local variable

123
00:10:29.369 --> 00:10:35.236
to point to the underlying
form control on this element.

124
00:10:35.236 --> 00:10:41.597
So now, we just go like this.

125
00:10:45.438 --> 00:10:46.662
&gt;&gt; Lukas Ruebbelke: Let this refresh.

126
00:10:50.258 --> 00:10:51.730
&gt;&gt; Lukas Ruebbelke: Because
this is required.

127
00:10:54.318 --> 00:10:58.980
&gt;&gt; Lukas Ruebbelke: Our ngModel,
which is essentially a form control.

128
00:10:58.980 --> 00:11:03.360
This is keeping track of the value and
the validity.

129
00:11:03.360 --> 00:11:06.188
So really just think of value, valid.

130
00:11:06.188 --> 00:11:06.968
What's the value?

131
00:11:06.968 --> 00:11:08.247
And is it value?

132
00:11:08.247 --> 00:11:15.610
But notice now that it's empty,
it's saying, this is false.

133
00:11:15.610 --> 00:11:17.515
No [FOREIGN].

134
00:11:17.515 --> 00:11:21.476
But then once I type it up, instantly,

135
00:11:21.476 --> 00:11:28.448
I now have real-time basically
feedback of the state of this input.

136
00:11:28.448 --> 00:11:32.498
So anybody who is doing
forms in their application,

137
00:11:32.498 --> 00:11:35.268
especially line of business apps.

138
00:11:35.268 --> 00:11:41.325
Validation is a big part of this and
this is how you keep track of this.

139
00:11:41.325 --> 00:11:46.269
So, Angular's put or done a really
good job of creating kind of this

140
00:11:46.269 --> 00:11:51.233
underlying form control to keep
track of the validity of your form.

141
00:11:51.233 --> 00:11:56.345
And because there's times, like it's
not in a valid state, we do not want

142
00:11:56.345 --> 00:12:01.636
to proceed or if it's not in a valid
state, we need to convey that to the user.

143
00:12:04.866 --> 00:12:10.189
&gt;&gt; Lukas Ruebbelke: And so
right now, we are referencing

144
00:12:10.189 --> 00:12:17.069
ngModel via a local variable in and
of the self.

145
00:12:19.130 --> 00:12:22.590
I think this is good for
demonstration purposes, but

146
00:12:22.590 --> 00:12:26.650
where it really gets interesting is when
we start to do this in the context of

147
00:12:26.650 --> 00:12:28.680
an entire form which we'll
see in just a moment.

