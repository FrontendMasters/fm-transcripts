WEBVTT

1
00:00:00.260 --> 00:00:02.930
&gt;&gt; Lukas Ruebbelke: So
let's go through this challenge.

2
00:00:02.930 --> 00:00:07.830
And so, this morning,
presuming it is morning where you are.

3
00:00:07.830 --> 00:00:08.790
But at least initially for

4
00:00:08.790 --> 00:00:14.034
the first couple hours,
we covered a lot of new ground.

5
00:00:14.034 --> 00:00:18.350
So kinda the conversations I've been
having lunch is, hey, this Angular 2 thing

6
00:00:18.350 --> 00:00:24.140
is super new and I was super confused and
there's all this new information,

7
00:00:24.140 --> 00:00:29.240
and to that, first and
foremost I apologize.

8
00:00:29.240 --> 00:00:36.120
But more importantly is that I wanted to
lay kind of a broad, high level picture

9
00:00:36.120 --> 00:00:42.110
that we will then start to go in and kind
of fill those things in through exercises.

10
00:00:42.110 --> 00:00:46.720
So now, we're going to kinda slow down and
reinforce a lot of these things, and

11
00:00:46.720 --> 00:00:52.670
I think that is we start to work in code,
to build out code examples.

12
00:00:52.670 --> 00:00:57.631
Some of the things that we saw that
didn't initially make sense will suddenly

13
00:00:57.631 --> 00:01:02.211
start to kinda fall in and these big
picture pieces will start to congeal

14
00:01:02.211 --> 00:01:05.338
into this kind of coherent
thing that we can use,

15
00:01:05.338 --> 00:01:08.036
the skill set that we
can use to do things.

16
00:01:08.036 --> 00:01:12.056
So one of the things that I was hearing is
that we'd really like to be able to build,

17
00:01:12.056 --> 00:01:15.029
for instance,
create an angular application, and a page,

18
00:01:15.029 --> 00:01:19.260
that you actually like load a components
while we're actually really closer that.

19
00:01:19.260 --> 00:01:23.420
In fact, in this challenge,
some of the angular-cli stuff aside,

20
00:01:23.420 --> 00:01:28.010
that is a whole you'll have the ability
to essentially create a component,

21
00:01:28.010 --> 00:01:30.182
hook it to an application as a page.

22
00:01:30.182 --> 00:01:32.060
So that's what we're gonna see.

23
00:01:32.060 --> 00:01:37.950
So to this point we'll go
a slow as we need to and

24
00:01:37.950 --> 00:01:41.580
just make sure that everybody has an
opportunity to write Angular code and so

25
00:01:41.580 --> 00:01:46.720
now we're moving more from
theory In to practice.

26
00:01:46.720 --> 00:01:49.629
And so, let's reinforce the code here.

27
00:01:49.629 --> 00:01:55.370
So the challenge is first and
foremost, check out the start branch.

28
00:01:55.370 --> 00:01:59.330
Then, we're going to essentially
build out a widgets feature.

29
00:01:59.330 --> 00:02:04.130
And then, create a simple route
to navigate to said feature,

30
00:02:04.130 --> 00:02:05.960
so let's walk through this.

31
00:02:07.610 --> 00:02:14.090
And I will do the solution and
offer commentary as I'm going.

32
00:02:15.790 --> 00:02:17.936
&gt;&gt; Lukas Ruebbelke: So
one thing that I am going to do is,

33
00:02:17.936 --> 00:02:21.740
I'm just going to break this,
peel this off into a new branch.

34
00:02:21.740 --> 00:02:25.595
So git checkout -b, and so
we'll just go workshop.

35
00:02:25.595 --> 00:02:30.451
And so, now, all this does is that I've
just created a new branch based off of

36
00:02:30.451 --> 00:02:31.890
zero to zero start.

37
00:02:31.890 --> 00:02:36.260
So that when I'm done, I can either
merge it in or I can throw it away.

38
00:02:36.260 --> 00:02:43.790
But the idea is that it's now kind of off
on it's on and I can do with it as I want.

39
00:02:43.790 --> 00:02:45.780
And so, then from here we'll go npm start.

40
00:02:50.026 --> 00:02:53.681
&gt;&gt; Lukas Ruebbelke: And while this is
building up, I already have it here.

41
00:02:53.681 --> 00:02:55.320
We'll just refresh the page.

42
00:02:58.523 --> 00:03:00.490
&gt;&gt; Lukas Ruebbelke: Wait for it.

43
00:03:00.490 --> 00:03:05.740
And so, what we have here,
it's basically, well,

44
00:03:05.740 --> 00:03:07.660
it's an application
with the Items feature.

45
00:03:07.660 --> 00:03:11.533
And so, this is here for reference so that
we can reference as we're building along.

46
00:03:11.533 --> 00:03:15.950
But we're going to be building
out a Widgets feature in tandem.

47
00:03:17.110 --> 00:03:23.754
So we'll hop into our IDE and
&gt;&gt; Lukas Ruebbelke: We

48
00:03:23.754 --> 00:03:31.119
will create a widget's directory,
&gt;&gt; Lukas Ruebbelke: And

49
00:03:31.119 --> 00:03:34.072
let me actually just
close under this here.

50
00:03:34.072 --> 00:03:36.472
And within out widget's directory,

51
00:03:36.472 --> 00:03:41.200
let's create out of JavaScript file
cuz we're doing this in typescript,

52
00:03:44.337 --> 00:03:49.007
&gt;&gt; Lukas Ruebbelke: WidgetsComponent.ts.

53
00:03:50.723 --> 00:03:53.263
&gt;&gt; Lukas Ruebbelke: Just add everything.

54
00:03:53.263 --> 00:03:55.490
We'll go ahead an do an HTML file.

55
00:04:05.017 --> 00:04:07.630
&gt;&gt; Lukas Ruebbelke: And
lets go ahead and do a CSS file.

56
00:04:11.620 --> 00:04:15.367
Which is .component.css.

57
00:04:15.367 --> 00:04:20.209
And so, the idea here is that within
your feature that you organize your

58
00:04:20.209 --> 00:04:24.650
physical files, or you files,
by feature and not by type.

59
00:04:24.650 --> 00:04:26.780
And so, now we have a widgets feature.

60
00:04:26.780 --> 00:04:29.440
And so, we'll put all
the files that pertain to this

61
00:04:29.440 --> 00:04:31.850
within the widgets directory.

62
00:04:33.370 --> 00:04:37.380
And now that we have these files,
we'll just jump in real quick and

63
00:04:37.380 --> 00:04:41.810
I'm going to update
&gt;&gt; Lukas Ruebbelke: The template to say

64
00:04:41.810 --> 00:04:43.339
something obnoxious.

65
00:04:44.520 --> 00:04:47.310
Widgets for days,
clearly I spelled that wrong.

66
00:04:47.310 --> 00:04:48.928
We gotta deal with a D.

67
00:04:48.928 --> 00:04:52.140
I think we're making progress.

68
00:04:52.140 --> 00:04:53.530
So ship it.

69
00:04:54.760 --> 00:04:59.902
From here, export class WidgetsComponent.

70
00:05:05.480 --> 00:05:08.343
&gt;&gt; Lukas Ruebbelke: From here,
what should we do next?

71
00:05:08.343 --> 00:05:10.021
&gt;&gt; Speaker 2: Import.

72
00:05:10.021 --> 00:05:10.521
&gt;&gt; Lukas Ruebbelke: Import.

73
00:05:19.324 --> 00:05:20.922
&gt;&gt; Lukas Ruebbelke: Not common core.

74
00:05:22.130 --> 00:05:25.160
Common core.

75
00:05:25.160 --> 00:05:26.269
Now, what do we do?

76
00:05:26.269 --> 00:05:28.353
&gt;&gt; Speaker 2: Decorate.

77
00:05:28.353 --> 00:05:29.220
&gt;&gt; Lukas Ruebbelke: Yes.

78
00:05:33.705 --> 00:05:35.849
&gt;&gt; Lukas Ruebbelke: And
what do we need here?

79
00:05:35.849 --> 00:05:36.686
&gt;&gt; Speaker 2: Selector.

80
00:05:36.686 --> 00:05:39.130
&gt;&gt; Lukas Ruebbelke: Good.

81
00:05:39.130 --> 00:05:43.273
&gt;&gt; Lukas Ruebbelke: And what else?

82
00:05:43.273 --> 00:05:45.562
&gt;&gt; Speaker 2: Template URL.

83
00:05:45.562 --> 00:05:46.808
&gt;&gt; Lukas Ruebbelke: Nice.

84
00:05:52.220 --> 00:06:00.769
&gt;&gt; Lukas Ruebbelke: And since we're here,
&gt;&gt; Lukas Ruebbelke: Is it styles URL?

85
00:06:00.769 --> 00:06:01.437
&gt;&gt; Speaker 2: Styles.

86
00:06:01.437 --> 00:06:02.476
&gt;&gt; Lukas Ruebbelke: URL.

87
00:06:02.476 --> 00:06:03.180
So there's actually a style.

88
00:06:03.180 --> 00:06:05.469
[CROSSTALK]
&gt;&gt; Speaker 2: Style URLs.

89
00:06:05.469 --> 00:06:06.929
&gt;&gt; Speaker 3: In an array.

90
00:06:06.929 --> 00:06:09.626
&gt;&gt; Speaker 2: Style URLs.

91
00:06:09.626 --> 00:06:12.163
&gt;&gt; Lukas Ruebbelke: Isn't that what I had,
I'm so confused here.

92
00:06:12.163 --> 00:06:14.270
How's that, wrong.

93
00:06:14.270 --> 00:06:15.306
&gt;&gt; Speaker 2: Better.
&gt;&gt; Lukas Ruebbelke: No,

94
00:06:15.306 --> 00:06:19.133
it's not style URLs.

95
00:06:19.133 --> 00:06:21.354
&gt;&gt; Speaker 2: Style URLs.

96
00:06:24.191 --> 00:06:25.417
&gt;&gt; Speaker 4: Do you have to have
something in that collection for

97
00:06:25.417 --> 00:06:26.199
that squiggly to go away?

98
00:06:26.199 --> 00:06:27.221
&gt;&gt; Lukas Ruebbelke: Wait, hold on.

99
00:06:27.221 --> 00:06:29.465
[CROSSTALK] There we go.

100
00:06:29.465 --> 00:06:32.159
&gt;&gt; [INAUDIBLE]
&gt;&gt; Lukas Ruebbelke: [LAUGH] So style-

101
00:06:32.159 --> 00:06:33.361
&gt;&gt; Speaker 4: URLs.

102
00:06:33.361 --> 00:06:34.483
&gt;&gt; Speaker 2: Yes, air five, bud.

103
00:06:34.483 --> 00:06:36.950
&gt;&gt; [INAUDIBLE]
&gt;&gt; Lukas Ruebbelke: Everybody's so

104
00:06:36.950 --> 00:06:38.205
irritated with me right now.

105
00:06:38.205 --> 00:06:41.194
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Lukas Ruebbelke: Maybe I was just

106
00:06:41.194 --> 00:06:42.690
rolling everyone,
did you ever think about that?

107
00:06:52.608 --> 00:06:55.230
&gt;&gt; Lukas Ruebbelke: So
how about that component?

108
00:06:57.916 --> 00:07:00.795
&gt;&gt; Lukas Ruebbelke: We have it
essentially created, the class,

109
00:07:00.795 --> 00:07:03.448
we've imported everything we need, and

110
00:07:03.448 --> 00:07:07.560
we've decorated the component as well,
the component class.

111
00:07:09.630 --> 00:07:12.840
So currently we do not have any need for
any additional functionality, so

112
00:07:12.840 --> 00:07:18.400
we have no need to really enhance this
component or really repeat this process.

113
00:07:18.400 --> 00:07:22.610
So now the question is,
how do we get it Into our application.

114
00:07:24.300 --> 00:07:25.100
&gt;&gt; Speaker 4: Importing your module?

115
00:07:26.310 --> 00:07:27.750
&gt;&gt; Lukas Ruebbelke: Good.

116
00:07:27.750 --> 00:07:29.050
So we will go to module.

117
00:07:31.390 --> 00:07:36.660
Here, and let's just try something here.

118
00:07:41.580 --> 00:07:42.080
Sweet.

119
00:07:43.740 --> 00:07:45.701
Okay, so now it's-
&gt;&gt; Speaker 2: Is that

120
00:07:45.701 --> 00:07:47.170
a feature of your IDE?

121
00:07:47.170 --> 00:07:47.910
&gt;&gt; Lukas Ruebbelke: It is.

122
00:07:47.910 --> 00:07:48.410
&gt;&gt; Speaker 2: That's nice.

123
00:07:49.460 --> 00:07:54.710
&gt;&gt; Lukas Ruebbelke: So
I believe Visual Studio Code I think Atom,

124
00:07:54.710 --> 00:07:57.320
I don't use Sublime that much anymore.

125
00:07:57.320 --> 00:08:02.284
So kind of Atom is the new Sublime,
Sublime is the new TextMate, but-

126
00:08:02.284 --> 00:08:02.994
&gt;&gt; Speaker 2: [LAUGH]

127
00:08:05.290 --> 00:08:06.750
&gt;&gt; Lukas Ruebbelke: I really, really like.

128
00:08:06.750 --> 00:08:10.201
Their support is pretty awesome.

129
00:08:10.201 --> 00:08:12.240
So it's been declared.

130
00:08:12.240 --> 00:08:17.500
So now,
how do we get this into our application?

131
00:08:19.160 --> 00:08:20.360
We'll go the easy route first.

132
00:08:21.780 --> 00:08:24.610
&gt;&gt; Speaker 4: You select your [CROSSTALK]
&gt;&gt; Lukas Ruebbelke: Yes.

133
00:08:24.610 --> 00:08:32.657
Put your selector in
your markup somewhere.

134
00:08:32.657 --> 00:08:35.469
So let's try, well, how about this?

135
00:08:38.838 --> 00:08:44.029
&gt;&gt; Lukas Ruebbelke: Hr, app-widgets.

136
00:08:49.353 --> 00:08:50.266
&gt;&gt; Lukas Ruebbelke: Let's
see if I broke something.

137
00:08:55.852 --> 00:09:00.514
&gt;&gt; Lukas Ruebbelke: Widgets, components,
CSS, let's get that fixed real quick.

138
00:09:00.514 --> 00:09:09.533
&gt;&gt; Speaker 4: It's plural.

139
00:09:09.533 --> 00:09:10.282
&gt;&gt; Speaker 5: Plural?

140
00:09:10.282 --> 00:09:16.068
Yeah.

141
00:09:16.068 --> 00:09:17.662
&gt;&gt; Speaker 2: Components.

142
00:09:17.662 --> 00:09:20.713
&gt;&gt; Lukas Ruebbelke: What?

143
00:09:22.636 --> 00:09:23.136
Yeah.

144
00:09:26.120 --> 00:09:28.230
Everybody got me so
confused with, no, it's styles.

145
00:09:28.230 --> 00:09:29.200
No, it's style.

146
00:09:29.200 --> 00:09:32.570
Then, I just carried that, I just
projected that right over into this.

147
00:09:34.040 --> 00:09:35.875
There we go.

148
00:09:35.875 --> 00:09:37.800
So you can see here,
now, it's at the bottom.

149
00:09:40.060 --> 00:09:42.550
So that's one way to get
it into the application.

150
00:09:45.650 --> 00:09:49.432
Let's do the bonus.

151
00:09:49.432 --> 00:09:51.770
So going into app routing module.

152
00:09:57.870 --> 00:09:58.950
I want to try something.

153
00:10:04.690 --> 00:10:12.484
So go path, we'll go widgets, component.

154
00:10:12.484 --> 00:10:14.170
Is it gonna give it to me?

155
00:10:14.170 --> 00:10:16.210
No, why not?

156
00:10:16.210 --> 00:10:18.010
Because I'm in a separate module.

157
00:10:18.010 --> 00:10:21.270
So I need to explicitly import this.

158
00:10:25.279 --> 00:10:26.189
&gt;&gt; Lukas Ruebbelke: There we go.

159
00:10:29.674 --> 00:10:30.713
&gt;&gt; Lukas Ruebbelke: Winning.

160
00:10:48.093 --> 00:10:51.225
&gt;&gt; Lukas Ruebbelke: So
now if we go here in the browser

161
00:10:51.225 --> 00:10:56.104
/widgets,
&gt;&gt; Lukas Ruebbelke: We actually have

162
00:10:56.104 --> 00:11:00.135
not two instances of the widgets
component because we have one that's on

163
00:11:00.135 --> 00:11:04.035
the app component and then another
instance that's actually getting

164
00:11:04.035 --> 00:11:06.430
loaded via the router into router outlet.

165
00:11:08.660 --> 00:11:13.350
So just to kind of also spin on this, I
see some heads nodding, is if I were to go

166
00:11:13.350 --> 00:11:19.020
to app component and just duplicate this,

167
00:11:19.020 --> 00:11:22.580
so anytime you put that selector on
the page you are going to get a component.

168
00:11:22.580 --> 00:11:28.380
But you notice here this router outlet,
when we go to the widgets route,

169
00:11:28.380 --> 00:11:32.100
the Angular router's saying okay we're at
this route, take the widgets component and

170
00:11:32.100 --> 00:11:33.830
load it into here as well.

171
00:11:35.340 --> 00:11:39.230
And so, this is why we are seeing this.

172
00:11:42.030 --> 00:11:43.330
&gt;&gt; Lukas Ruebbelke: Let me
make sure I'm not, nope.

173
00:11:46.950 --> 00:11:50.439
So then if we delete this,
let's just get rid of all of this.

174
00:11:57.876 --> 00:12:02.857
&gt;&gt; Lukas Ruebbelke: I feel like I
deleted something I'm not supposed to.

175
00:12:07.934 --> 00:12:08.600
&gt;&gt; Lukas Ruebbelke: There we go.

176
00:12:09.660 --> 00:12:14.690
So now we're just loading one in,
lets update the navigation

177
00:12:16.300 --> 00:12:19.890
to allow us to navigate two widgets

178
00:12:21.220 --> 00:12:26.310
so if we go to

179
00:12:26.310 --> 00:12:31.190
this app component here if we go to
the top of it we have our navigation.

180
00:12:32.210 --> 00:12:36.120
And so,
you can see here that we have a routerLink

181
00:12:36.120 --> 00:12:40.730
that's going towards link.items.

182
00:12:40.730 --> 00:12:46.210
So I duplicated that,
let's go widgets, widgets.

183
00:12:48.120 --> 00:12:50.600
And then, what I need to do is go here.

184
00:12:51.770 --> 00:12:53.350
How do you spell widgets?

185
00:12:58.770 --> 00:12:59.270
Like so.

186
00:13:01.060 --> 00:13:04.606
Because what you can actually do is there
are some additional things you can put in

187
00:13:04.606 --> 00:13:06.080
here like grammar's and stuff.

188
00:13:06.080 --> 00:13:10.594
I think it just looks better in
an imperative context such as

189
00:13:10.594 --> 00:13:14.760
JavaScript as opposed to
putting this into your HTML.

190
00:13:14.760 --> 00:13:16.370
So personally,
I just like to keep that separated.

191
00:13:16.370 --> 00:13:18.283
If there's any kinda calculations or

192
00:13:18.283 --> 00:13:21.940
anything, I think just keep your
JavaScript close to your JavaScript.

193
00:13:23.150 --> 00:13:27.430
And I just like to separate that, so
this is just a personal preference, and

194
00:13:27.430 --> 00:13:33.940
then from here if I did this correct,
so let's go items, widgets.

195
00:13:35.330 --> 00:13:37.408
Now, let's do one other thing, yes.

196
00:13:37.408 --> 00:13:38.520
Just a quick question.

197
00:13:38.520 --> 00:13:40.895
&gt;&gt; Speaker 4: That router outlet,
is that just a place holder then, for

198
00:13:40.895 --> 00:13:43.232
whatever the router determines
that you've selected?

199
00:13:43.232 --> 00:13:43.970
&gt;&gt; Lukas Ruebbelke: It is, yep.

200
00:13:43.970 --> 00:13:48.260
So the question is,
is the router outlet a place holder for

201
00:13:48.260 --> 00:13:51.060
basically whatever you select
in your route, so to speak?

202
00:13:51.060 --> 00:13:52.000
And that's exactly it.

203
00:13:52.000 --> 00:13:57.230
So this is equivalent in Angular 1,
NG route.

204
00:13:57.230 --> 00:14:02.320
Or UI route or ngView or
UIView is essentially when you navigate

205
00:14:02.320 --> 00:14:06.470
to a route Angular will look for

206
00:14:06.470 --> 00:14:10.380
essentially the router outlet
to put that component in there.

207
00:14:10.380 --> 00:14:14.060
And so, you can move it anywhere
on the page that you want and

208
00:14:14.060 --> 00:14:16.770
currently we're working
with unnamed routes.

209
00:14:16.770 --> 00:14:20.000
So it'll, just by default,
look for the router outlet.

210
00:14:20.000 --> 00:14:25.770
But you can actually name them and simply
say, when I go to this route, I wanna put

211
00:14:25.770 --> 00:14:31.800
this component in this router outlet, and
this component in this router outlet.

212
00:14:31.800 --> 00:14:33.770
So you can target them via names, but

213
00:14:33.770 --> 00:14:35.740
right now we're just
choosing unnamed routes.

214
00:14:35.740 --> 00:14:39.070
And there can actually only be
one unnamed route per page.

215
00:14:41.390 --> 00:14:42.464
But that's the idea.

216
00:14:45.419 --> 00:14:46.706
&gt;&gt; Speaker 2: Question from Craig.

217
00:14:50.618 --> 00:14:53.480
&gt;&gt; Speaker 2: Why would I
get template parse errors?

218
00:14:54.600 --> 00:14:57.480
&gt;&gt; Lukas Ruebbelke: So
the answer is bad HTML, Craig.

219
00:14:59.540 --> 00:15:00.700
Without actually seeing.

220
00:15:00.700 --> 00:15:01.480
I mean, I don't know.

221
00:15:01.480 --> 00:15:04.020
I think there's probably
something wrong with the HTML.

222
00:15:11.166 --> 00:15:13.510
&gt;&gt; Lukas Ruebbelke: So
more interesting NEC.

223
00:15:13.510 --> 00:15:19.310
So the call will never leave the client
side Hold on, let me just see here.

224
00:15:19.310 --> 00:15:22.020
&gt;&gt; Speaker 2: It was a pretty
non-conversation between Amy and Frank.

225
00:15:22.020 --> 00:15:26.141
&gt;&gt; Lukas Ruebbelke: Okay, so
I'll presume that was not for me.

226
00:15:26.141 --> 00:15:28.840
Now, let's do one other thing real quick.

227
00:15:28.840 --> 00:15:34.990
Since we're going to be
working with Widgets,

228
00:15:34.990 --> 00:15:38.580
let's just set our default
path to go to widgets.

229
00:15:38.580 --> 00:15:40.630
And I feel like I should
fix the wildcard here.

230
00:15:46.751 --> 00:15:48.180
&gt;&gt; Lukas Ruebbelke: And there we go.

231
00:15:48.180 --> 00:15:54.010
So now, if we just take this,

232
00:15:54.010 --> 00:15:57.700
then it's just gonna go
straight to Widgets.

233
00:16:01.110 --> 00:16:05.490
So this is the fundamental
building block of everything.

234
00:16:05.490 --> 00:16:07.490
That we're gonna do
over the next two days.

235
00:16:08.670 --> 00:16:14.060
I mean, components are really
the atomic building blocks.

236
00:16:14.060 --> 00:16:17.370
That once we understand the structure,

237
00:16:17.370 --> 00:16:20.450
then we can start to understand
how to build a single feature, but

238
00:16:20.450 --> 00:16:25.020
then we can also understand how to
construct these to make more complex and

239
00:16:25.020 --> 00:16:29.500
a multi dimensional features as well as
really compose these things together.

240
00:16:31.240 --> 00:16:32.690
So I don't want to rush this.

241
00:16:32.690 --> 00:16:34.710
I don't wanna jump into the next module.

242
00:16:34.710 --> 00:16:38.625
If anybody has any questions,
let's slow this down.

243
00:16:38.625 --> 00:16:42.382
We can write some more code,
whatever you wanna do but

244
00:16:42.382 --> 00:16:47.740
I really wanna make sure that this,
what I just went over, is making sense.

