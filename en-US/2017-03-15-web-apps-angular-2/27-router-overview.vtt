WEBVTT

1
00:00:00.280 --> 00:00:04.540
&gt;&gt; Lukas Ruebbelke: The main thing that I
want to call out with really routing is

2
00:00:04.540 --> 00:00:08.660
how to define routes, which we've actually
been doing pretty much all day long.

3
00:00:09.800 --> 00:00:15.400
And so in the code the two pieces
that I wanted to call out is,

4
00:00:15.400 --> 00:00:24.619
if we go to our routing module,
&gt;&gt; Lukas Ruebbelke: You can see,

5
00:00:24.619 --> 00:00:28.740
here we are simply matching
a path to a component.

6
00:00:31.500 --> 00:00:38.930
Then if we go here, this next one,
so this is in items.

7
00:00:40.380 --> 00:00:42.585
We are doing two things.

8
00:00:46.545 --> 00:00:48.540
&gt;&gt; Lukas Ruebbelke: We
are defining a child route.

9
00:00:49.560 --> 00:00:52.890
So on your parent route,
you can just do children.

10
00:00:52.890 --> 00:00:58.096
And surprise,
it takes an array of route objects.

11
00:00:58.096 --> 00:01:03.170
So, it's basically the composition
pattern, so it's routes all the way down.

12
00:01:03.170 --> 00:01:04.580
You just keep stacking them in.

13
00:01:06.400 --> 00:01:13.260
And within our items component,
what I want to call out as well, is that

14
00:01:13.260 --> 00:01:19.610
the item's component is being loaded into
the router outlet on its parent component.

15
00:01:19.610 --> 00:01:24.050
In this case it is out component.html.

16
00:01:24.050 --> 00:01:26.245
So if we go here.

17
00:01:26.245 --> 00:01:27.410
Router outlet.

18
00:01:27.410 --> 00:01:33.060
So when we load an item's component,
when we go to /items,

19
00:01:33.060 --> 00:01:39.117
Angular is saying take the items
component and put it in here.

20
00:01:39.117 --> 00:01:44.460
But when we go to the items component,
because we have a child route,

21
00:01:47.060 --> 00:01:51.760
Angular is saying now when
we load the items component

22
00:01:51.760 --> 00:01:56.380
we load its child component
into its router outlet.

23
00:01:56.380 --> 00:01:59.730
And so you can essentially stack
these in all the way down.

24
00:01:59.730 --> 00:02:02.128
So you could have child routes
of child routes of child routes,

25
00:02:02.128 --> 00:02:07.400
you just add a router outlet to
the template that's going to contain that.

26
00:02:09.250 --> 00:02:15.126
And so what we have here is,
if go back to app routing module,

27
00:02:15.126 --> 00:02:18.140
we are in the child component.

28
00:02:19.580 --> 00:02:24.074
We're simply saying load the featured

29
00:02:24.074 --> 00:02:28.850
item component into this router outlet.

30
00:02:28.850 --> 00:02:33.080
And so, we have here, what this does,
is if I go back to items

31
00:02:37.135 --> 00:02:39.587
&gt;&gt; Lukas Ruebbelke: When I select this,

32
00:02:39.587 --> 00:02:43.950
now the top, it's featured/2.

33
00:02:43.950 --> 00:02:47.474
And so
this is the second thing that's happening.

34
00:02:47.474 --> 00:02:53.850
Within our route,

35
00:02:53.850 --> 00:02:59.640
we're simply saying load in this feature
item component, but pass in this IDs.

36
00:02:59.640 --> 00:03:03.300
So this is how we do,
essentially, routing params.

37
00:03:04.404 --> 00:03:09.570
Is it's colon whatever you wanna call that
and then from there you can then pull that

38
00:03:09.570 --> 00:03:15.990
out and say in this I want to
show featured item component or

39
00:03:15.990 --> 00:03:20.730
I want to set feature item component
to whatever ID is selected.

40
00:03:20.730 --> 00:03:26.060
And so this is how this works.

41
00:03:26.060 --> 00:03:29.410
So two main things that
are happening here.

42
00:03:29.410 --> 00:03:31.432
I would wager that if I deleted this, or

43
00:03:31.432 --> 00:03:35.546
I just hit it,
&gt;&gt; Lukas Ruebbelke: I

44
00:03:35.546 --> 00:03:40.319
think we would say this is fairly self
explanatory if we understand that

45
00:03:40.319 --> 00:03:44.150
router outlet takes a component
depending on the route.

46
00:03:45.770 --> 00:03:49.370
So when the path is nothing,
we redirect to widgets.

47
00:03:50.840 --> 00:03:53.490
So if you go to route or
nothing, you do nothing.

48
00:03:54.930 --> 00:03:56.730
Or route, then you'd redirect the widgets.

49
00:03:56.730 --> 00:03:58.960
I was thinking of actually the child route
which we'll look at in just a second.

50
00:04:00.000 --> 00:04:03.930
Once you're to widgets,
then we're just gonna load

51
00:04:04.950 --> 00:04:07.090
widgets component into
the main router outlet.

52
00:04:09.150 --> 00:04:14.349
If nothing matches up, then we're also
going to just load the widgets component.

53
00:04:16.420 --> 00:04:18.350
So fairly simple.

54
00:04:18.350 --> 00:04:19.360
Path.

55
00:04:19.360 --> 00:04:20.280
Component.

56
00:04:20.280 --> 00:04:20.820
Path.

57
00:04:20.820 --> 00:04:21.320
Component.

58
00:04:24.090 --> 00:04:28.420
So for instance,
let's say I had a user's component.

59
00:04:28.420 --> 00:04:32.855
What would a route look like to that?

60
00:04:32.855 --> 00:04:33.455
Path.
&gt;&gt; [INAUDIBLE]

61
00:04:33.455 --> 00:04:34.399
&gt;&gt; Speaker 2: Phone code users.

62
00:04:34.399 --> 00:04:39.592
Users component.

63
00:04:39.592 --> 00:04:42.155
And then do we even have
a user's component still or no?

64
00:04:42.155 --> 00:04:45.345
&gt;&gt; Lukas Ruebbelke: It doesn't exist so
we'll just do like this.

65
00:04:50.377 --> 00:04:52.410
&gt;&gt; Lukas Ruebbelke: Then some other path.

66
00:04:55.770 --> 00:04:57.606
&gt;&gt; Lukas Ruebbelke: Some other path.

67
00:04:57.606 --> 00:05:02.931
&gt;&gt; Speaker 2: So, we'd be clicking
a button that would load the user's path

68
00:05:02.931 --> 00:05:08.590
from wherever we're at now,
whether it be widgets or whatever.

69
00:05:08.590 --> 00:05:13.360
And then when we pull up that user then
it would go to the user's components.

70
00:05:13.360 --> 00:05:13.990
That's the idea right?

71
00:05:15.400 --> 00:05:19.930
&gt;&gt; Lukas Ruebbelke: Well,
so let's go back here.

72
00:05:19.930 --> 00:05:20.803
I'm gonna add in items.

73
00:05:26.105 --> 00:05:30.455
&gt;&gt; Speaker 2: Or even for example,
when we hit this point in the code,

74
00:05:30.455 --> 00:05:36.210
what is our URL technically, so far,
that we're gonna be routing from?

75
00:05:36.210 --> 00:05:37.050
&gt;&gt; Lukas Ruebbelke: Okay.

76
00:05:37.050 --> 00:05:38.334
Good question, so we go here.

77
00:05:38.334 --> 00:05:40.900
&gt;&gt; Speaker 2: So
we [INAUDIBLE] the basic [INAUDIBLE].

78
00:05:40.900 --> 00:05:44.790
&gt;&gt; Lukas Ruebbelke: So when you go
to the base route, we are saying

79
00:05:46.870 --> 00:05:51.880
redirect to widgets, which

80
00:05:51.880 --> 00:05:55.820
is then essentially going to this path
right here, which is then loading this.

81
00:05:58.450 --> 00:05:58.950
Let's see what happens.

82
00:06:03.373 --> 00:06:04.970
&gt;&gt; Lukas Ruebbelke: So go to items.

83
00:06:04.970 --> 00:06:08.643
So now I just said if
you go to items then,

84
00:06:08.643 --> 00:06:14.278
oops I did not wanna go to Tweet Deck,
how narcissistic of me.

85
00:06:14.278 --> 00:06:19.208
So now items,
&gt;&gt; Lukas Ruebbelke: Or say we go here,

86
00:06:19.208 --> 00:06:22.968
load this in, but let me put this back.

87
00:06:27.907 --> 00:06:34.226
&gt;&gt; Lukas Ruebbelke: When we go to items,
we're gonna load the ItemsComponent, but

88
00:06:34.226 --> 00:06:39.380
we want to load this child
route of featured/ : id.

89
00:06:39.380 --> 00:06:44.748
But what this allows us to do is,
here, let's refresh this.

90
00:06:50.422 --> 00:06:52.721
&gt;&gt; Lukas Ruebbelke: So
I'm basically setting a base path, or

91
00:06:52.721 --> 00:06:54.370
kind of this base route here.

92
00:06:55.410 --> 00:07:00.830
So you'll notice that if I go back here,
there's nothing here.

93
00:07:00.830 --> 00:07:07.070
So there's a potential child route,
but I'm not actually hitting it yet.

94
00:07:07.070 --> 00:07:11.510
But, if I go featured, let's say 1,

95
00:07:11.510 --> 00:07:18.050
now this is going to activate this
child route, and it's gonna hit it.

96
00:07:20.320 --> 00:07:23.900
And you'll notice that
it also selected three.

97
00:07:23.900 --> 00:07:28.950
So what happens if I go here and
put a three in?

98
00:07:30.720 --> 00:07:34.190
Well, we would expect that
item three to be selected.

99
00:07:35.330 --> 00:07:38.000
Not only that is

100
00:07:38.000 --> 00:07:41.180
the featured item component is
going to display item number three?

101
00:07:41.180 --> 00:07:43.430
So watch the star.

102
00:07:43.430 --> 00:07:46.611
Watch what shows up in the featured item
component which is this blue component

103
00:07:46.611 --> 00:07:47.295
across the top.

104
00:07:51.951 --> 00:07:55.683
&gt;&gt; Lukas Ruebbelke: And so what we're
saying is, we have the potential for

105
00:07:55.683 --> 00:08:00.059
a child route but
It doesn't have to exist, so

106
00:08:00.059 --> 00:08:07.247
that's why we kinda have this empty base
path, but if it does exist, here it is.

107
00:08:07.247 --> 00:08:11.407
Take this and then from there
we're pulling off that param and

108
00:08:11.407 --> 00:08:13.652
we're doing something with it.

109
00:08:13.652 --> 00:08:15.603
&gt;&gt; Speaker 2: Okay, Russ has a question,

110
00:08:15.603 --> 00:08:21.202
is it possible to load multiple child
components at once in a single route?

111
00:08:21.202 --> 00:08:23.440
&gt;&gt; Lukas Ruebbelke: Yes,
using named routes.

112
00:08:23.440 --> 00:08:28.615
So you can only have one unnamed
router outlet in a component.

113
00:08:28.615 --> 00:08:33.380
But, you can have multiple name routes.

114
00:08:33.380 --> 00:08:35.580
And so I saved a blog post on this.

115
00:08:35.580 --> 00:08:45.140
If you go to my blog, onehungrymind.com
&gt;&gt; Lukas Ruebbelke: This was actually,

116
00:08:45.140 --> 00:08:50.570
named router outlets, was like
the single most irritating thing about

117
00:08:50.570 --> 00:08:56.760
the Angular 2 router that existed,
at least in my world view.

118
00:08:56.760 --> 00:09:00.070
Like people would be like hey what
do you think of the Angular router?

119
00:09:00.070 --> 00:09:03.548
Angular one, two, or three or
the Angular router one, two, or three.

120
00:09:03.548 --> 00:09:05.355
And I pretty much would take a chair and

121
00:09:05.355 --> 00:09:09.180
throw it through a window because I
couldn't do named router outlets.

122
00:09:09.180 --> 00:09:14.950
In other words, I want the ability
to say when I go to this route,

123
00:09:14.950 --> 00:09:17.220
put this component in this router outlet,

124
00:09:17.220 --> 00:09:22.900
and put this component in this router
outlet, and stop playing around.

125
00:09:22.900 --> 00:09:28.730
So here, you can see that, and let me just
bump this up, cuz we're on the Internet.

126
00:09:31.232 --> 00:09:33.246
&gt;&gt; Lukas Ruebbelke: When we go
to the speakers component, so

127
00:09:33.246 --> 00:09:34.930
let's walk through this.

128
00:09:34.930 --> 00:09:39.886
component is SpeakerComponent, children,
so now we have children routes.

129
00:09:39.886 --> 00:09:46.890
Path is speakersList, the outlet is list.

130
00:09:46.890 --> 00:09:50.600
Here we're taking an id,
and the outlet is bio.

131
00:09:50.600 --> 00:09:56.190
So we're loading these two components
into, essentially, named router outlets.

132
00:09:56.190 --> 00:09:58.830
And so
this is an unnamed router outlet and,

133
00:09:58.830 --> 00:10:04.490
more importantly, this behold,
is a named router outlet.

134
00:10:04.490 --> 00:10:09.877
And that's how we load multiple
components in a single route.

135
00:10:13.108 --> 00:10:14.520
&gt;&gt; Lukas Ruebbelke: I
recommend you read this post.

136
00:10:14.520 --> 00:10:15.100
It's excellent.

137
00:10:15.100 --> 00:10:15.669
I know the author.

138
00:10:18.784 --> 00:10:19.890
&gt;&gt; Speaker 2: Do you
subscribe to his newsletter?

139
00:10:25.427 --> 00:10:30.041
&gt;&gt; Lukas Ruebbelke: Sometimes it's good,
sometimes he's just a buffoon.

140
00:10:37.150 --> 00:10:40.330
&gt;&gt; Lukas Ruebbelke: Anything else about,
let me show you one other thing real

141
00:10:40.330 --> 00:10:45.640
quick, since we're kind of working though
this module anyways, unofficially.

142
00:10:47.460 --> 00:10:54.484
So we know how to navigate
&gt;&gt; Lukas Ruebbelke: From

143
00:10:54.484 --> 00:10:57.545
a template to a route.

144
00:10:57.545 --> 00:11:00.428
So we go to app.component,

145
00:11:00.428 --> 00:11:05.430
so,
&gt;&gt; Lukas Ruebbelke: routerLink, and

146
00:11:05.430 --> 00:11:10.390
let me just do something real quick,
just so we stay on the,

147
00:11:23.130 --> 00:11:23.630
&gt;&gt; Lukas Ruebbelke: So let's see what

148
00:11:23.630 --> 00:11:24.520
happens if I do this.

149
00:11:28.216 --> 00:11:31.150
&gt;&gt; Lukas Ruebbelke: Items,
so it still works.

150
00:11:31.150 --> 00:11:32.887
The reason why, again,

151
00:11:32.887 --> 00:11:37.534
I extract this out is because I
think this doesn't look good to me.

152
00:11:37.534 --> 00:11:41.395
Especially once you start actually sending
in parameter and different things.

153
00:11:41.395 --> 00:11:44.420
Now you've kinda got this crazy thing.

154
00:11:44.420 --> 00:11:48.350
Occasionally, actually, you do need to
dynamically update them, that's fine.

155
00:11:48.350 --> 00:11:51.240
But for kind of static lengths,
this is why I've done this.

156
00:11:51.240 --> 00:11:57.730
But anyways, routerLink using essentially
a click event it will navigate.

157
00:11:57.730 --> 00:12:01.360
More importantly,
let's check something out here.

158
00:12:05.320 --> 00:12:07.432
&gt;&gt; Lukas Ruebbelke: Let's go here.

159
00:12:07.432 --> 00:12:09.589
You'll notice that when
I mouse over these,

160
00:12:09.589 --> 00:12:14.310
I don't know if you can see the bottom,
but it's actually generating links.

161
00:12:14.310 --> 00:12:16.000
So let me just inspect this.

162
00:12:16.000 --> 00:12:17.090
Where is it?

163
00:12:20.490 --> 00:12:20.990
&gt;&gt; Lukas Ruebbelke: Boom.

164
00:12:22.980 --> 00:12:25.710
So let me see if I can just go out here,

165
00:12:25.710 --> 00:12:28.369
and,
&gt;&gt; Lukas Ruebbelke: Zoom this out.

166
00:12:31.000 --> 00:12:34.985
&gt;&gt; Lukas Ruebbelke: It's actually
generating the href for us.

167
00:12:34.985 --> 00:12:38.988
And so basically the router band
that's seeing this thing is saying,

168
00:12:38.988 --> 00:12:40.112
I know what this is.

169
00:12:40.112 --> 00:12:44.210
And it's basically filling in
the missing data of sorts.

170
00:12:44.210 --> 00:12:44.880
So you don't have to know it.

171
00:12:44.880 --> 00:12:46.288
So you can say go here, and boom.

172
00:12:46.288 --> 00:12:47.196
Yes, sir?

173
00:12:47.196 --> 00:12:53.637
&gt;&gt; Speaker 2: Can you show the wild
card path when it doesn't match a URL?

174
00:12:53.637 --> 00:12:57.010
Like, misspelled widgets or whatever.

175
00:12:57.010 --> 00:12:59.903
No not the code actually
just how it behaves.

176
00:12:59.903 --> 00:13:04.530
&gt;&gt; Lukas Ruebbelke: Sure, so
I really want to go to this feature.

177
00:13:04.530 --> 00:13:07.210
&gt;&gt; Speaker 2: But
now it doesn't change the location URL.

178
00:13:07.210 --> 00:13:12.748
We did route to the default but- So
I think we did this earlier and

179
00:13:12.748 --> 00:13:15.282
I might have deleted it.

180
00:13:15.282 --> 00:13:19.926
&gt;&gt; Lukas Ruebbelke: If we go to here,
what this does is it just says hey,

181
00:13:19.926 --> 00:13:24.790
we don't understand it,
just load this component.

182
00:13:24.790 --> 00:13:25.370
&gt;&gt; Speaker 2: Yeah.

183
00:13:25.370 --> 00:13:27.920
&gt;&gt; Lukas Ruebbelke: Where this may make
sense is if you have a 404 component,

184
00:13:27.920 --> 00:13:31.080
and you're just like you sneaky guy.

185
00:13:32.590 --> 00:13:37.250
But let's go back up here, and

186
00:13:37.250 --> 00:13:41.040
I forgot who basically called this
out in the chats, but big thumbs up.

187
00:13:41.040 --> 00:13:45.620
I think you can do, and this actually,
I think, makes a lot more sense.

188
00:13:47.370 --> 00:13:48.430
&gt;&gt; Speaker 2: Okay.

189
00:13:48.430 --> 00:13:49.430
&gt;&gt; Lukas Ruebbelke: Cuz if you get a wild

190
00:13:49.430 --> 00:13:52.879
card,
&gt;&gt; Lukas Ruebbelke: Then

191
00:13:52.879 --> 00:13:56.580
it'll basically send you to
whatever you redirect to.

192
00:13:58.330 --> 00:14:00.270
So thank you for
calling that out yet again.

193
00:14:00.270 --> 00:14:04.570
I think that's the way to
go unless you have a 404.

194
00:14:04.570 --> 00:14:09.260
So there may be a reason why
you would want to do that.

195
00:14:09.260 --> 00:14:10.140
So you could play it either way.

196
00:14:12.990 --> 00:14:14.698
&gt;&gt; Lukas Ruebbelke: What else is?

197
00:14:14.698 --> 00:14:17.929
So if we go back to our code.

198
00:14:21.267 --> 00:14:25.920
&gt;&gt; Lukas Ruebbelke: We can
programmatically also navigate to a route

199
00:14:25.920 --> 00:14:30.070
and we do that,
&gt;&gt; Lukas Ruebbelke: Using,

200
00:14:35.415 --> 00:14:38.996
&gt;&gt; Lukas Ruebbelke: router.navigate, and

201
00:14:38.996 --> 00:14:43.060
so well, what is router?

202
00:14:43.060 --> 00:14:48.080
Well, two things when
we're dealing with router.

203
00:14:48.080 --> 00:14:50.089
So you have the router itself.

204
00:14:51.670 --> 00:14:54.290
And then you have the activated route.

205
00:14:54.290 --> 00:14:57.970
And so you can actually
control the router, and so

206
00:14:57.970 --> 00:15:00.550
in this case we use router.navigate.

207
00:15:00.550 --> 00:15:03.100
So for instance, when you set item,
it's a featured item, so

208
00:15:03.100 --> 00:15:09.100
when we click on that star,
what's happening is we're saving the item.

209
00:15:09.100 --> 00:15:12.630
And so this is going through the service,
and it's doing its thing.

210
00:15:12.630 --> 00:15:16.989
But more importantly, we're then calling

211
00:15:16.989 --> 00:15:23.006
router.navigate go to featured and
pass in this item.id.

212
00:15:25.618 --> 00:15:29.298
&gt;&gt; Lukas Ruebbelke: And because this
is a child route, we're saying, and

213
00:15:29.298 --> 00:15:31.460
make it relative to this route.

214
00:15:32.870 --> 00:15:34.150
Well, what is this route?

215
00:15:34.150 --> 00:15:36.180
Well, this route is the activated
route that you're on.

216
00:15:36.180 --> 00:15:39.520
So it's saying basically,
go to the featured route,

217
00:15:39.520 --> 00:15:43.130
but do it from basically relative.

218
00:15:43.130 --> 00:15:46.490
So it allows us to do relative
child routes, pretty simple.

219
00:15:47.730 --> 00:15:52.810
Because we're on the,
in this case Items component, and

220
00:15:52.810 --> 00:15:57.290
we want to go to the items
featured whatever id route.

221
00:15:57.290 --> 00:16:02.140
Go to feature add in the relative ID and
make it relative to this route.

222
00:16:02.140 --> 00:16:04.410
So that's how we navigate.

223
00:16:06.220 --> 00:16:07.810
But lets go back up here.

224
00:16:10.180 --> 00:16:11.320
It's in here somewhere.

225
00:16:11.320 --> 00:16:11.914
Yes.

226
00:16:13.660 --> 00:16:17.307
&gt;&gt; Lukas Ruebbelke: What we can
do here is use the route so

227
00:16:17.307 --> 00:16:21.930
the activated route to
get essentially to get

228
00:16:21.930 --> 00:16:26.930
a snapshot of the current
route that you're on.

229
00:16:26.930 --> 00:16:33.450
So you can pull parameters or
if it's not going to change.

230
00:16:33.450 --> 00:16:35.470
And so in this case,
once you're there that's it.

231
00:16:35.470 --> 00:16:39.160
You're not actually doing anything,
for instance, reactive.

232
00:16:39.160 --> 00:16:42.910
Those IDs are not going to change,
you're gonna load it once and that's that.

233
00:16:42.910 --> 00:16:46.380
It's easier to just pull a snapshot,
and grab that value,

234
00:16:46.380 --> 00:16:47.780
which is what we're doing here.

235
00:16:49.160 --> 00:16:55.650
But again, so just to summarize this
route is essentially the router.

236
00:16:55.650 --> 00:16:59.898
Or router is the router that you can
actually use to navigate between routes

237
00:16:59.898 --> 00:17:03.240
using this.router.navigate and

238
00:17:03.240 --> 00:17:06.690
you can pass in kinda where you
wanna go and how you wanna to it.

239
00:17:06.690 --> 00:17:09.690
And then route as in activated route

240
00:17:09.690 --> 00:17:13.960
will give you the information about
the current route that you're on.

241
00:17:13.960 --> 00:17:15.193
You can use that to pull params.

242
00:17:22.858 --> 00:17:25.015
&gt;&gt; Lukas Ruebbelke: Is there
any difference between using or

243
00:17:25.015 --> 00:17:27.434
not using property binding for RouterLink?

244
00:17:29.869 --> 00:17:31.694
&gt;&gt; Lukas Ruebbelke: Well,
that is a good question.

245
00:17:33.817 --> 00:17:36.286
&gt;&gt; Lukas Ruebbelke: There
is a difference and

246
00:17:36.286 --> 00:17:40.760
I don't think it'll manifest in this case.

247
00:17:43.080 --> 00:17:45.372
Where it will manifest, so let's do this.

248
00:17:57.288 --> 00:18:03.846
&gt;&gt; Lukas Ruebbelke: And go Items,
&gt;&gt; Lukas Ruebbelke: Let's

249
00:18:03.846 --> 00:18:04.732
see what happens.

250
00:18:07.683 --> 00:18:08.548
&gt;&gt; Lukas Ruebbelke: Okay?

251
00:18:11.894 --> 00:18:16.468
&gt;&gt; Lukas Ruebbelke: Test
&gt;&gt; Lukas Ruebbelke: Actually

252
00:18:16.468 --> 00:18:19.381
because this is Thomas'
question we'll go Thomas items.

253
00:18:25.697 --> 00:18:29.190
&gt;&gt; Lukas Ruebbelke: Okay so
this will work.

254
00:18:33.983 --> 00:18:36.390
&gt;&gt; Lukas Ruebbelke: Where
this falls apart.

255
00:18:36.390 --> 00:18:44.160
Is if you had, or you needed to
dynamically generate a link on the fly.

256
00:18:45.700 --> 00:18:50.810
So for instance, here, if we were using

257
00:18:52.830 --> 00:18:57.790
essentially router link to generate
these because they're dynamic

258
00:18:57.790 --> 00:19:05.100
where they could change, then you would
need to bind that to update the link.

259
00:19:06.860 --> 00:19:10.200
So because this is fairly static,
you can use it,

260
00:19:10.200 --> 00:19:12.600
and it's just gonna render the string.

261
00:19:12.600 --> 00:19:13.570
You don't need to evaluate it.

262
00:19:13.570 --> 00:19:19.503
And so this goes back to binding,
&gt;&gt; Lukas Ruebbelke: But

263
00:19:19.503 --> 00:19:24.210
if we did this, so, let's go back here,
so now we're back to our binding module.

264
00:19:24.210 --> 00:19:26.093
What do you think this is gonna look like?

265
00:19:30.881 --> 00:19:34.954
&gt;&gt; Lukas Ruebbelke: This is not being
evaluated, it just goes link.items.

266
00:19:38.461 --> 00:19:42.700
&gt;&gt; Lukas Ruebbelke: So you could pass in
the exact value and it's going to work.

267
00:19:42.700 --> 00:19:49.280
But if you need to do anything dynamic,
or you need to evaluate a dynamic URL.

268
00:19:49.280 --> 00:19:51.830
That's why you need to use the brackets,
or

269
00:19:51.830 --> 00:19:57.820
the property binding on that because
without the property binding.

270
00:19:57.820 --> 00:20:01.090
Essentially whatever that value is in
that attribute, it's not evaluated,

271
00:20:01.090 --> 00:20:05.820
it's just a string and occasionally
strings will just work as we saw.

272
00:20:05.820 --> 00:20:08.380
But if you need to do
any kind of evaluation,

273
00:20:08.380 --> 00:20:09.450
make sure you do property binding.

