WEBVTT

1
00:00:00.270 --> 00:00:02.760
&gt;&gt; Lukas Ruebbelke: Let's just
check out this challenge here.

2
00:00:02.760 --> 00:00:08.610
So we are going to create a form to
edit our widget or selected widget item.

3
00:00:10.830 --> 00:00:15.750
In doing so, because shared mutable
state is bad, we are going to create

4
00:00:15.750 --> 00:00:19.760
a lifecycle hook to isolate that
mutation to the widget detail component.

5
00:00:21.120 --> 00:00:23.831
Then interesting enough,
I had a button to save and cancel.

6
00:00:23.831 --> 00:00:27.841
But we looked that up in
the previous challenge and

7
00:00:27.841 --> 00:00:32.062
then using ngForm,
let's add in some validation.

8
00:00:32.062 --> 00:00:35.202
All right, what say

9
00:00:35.202 --> 00:00:40.639
you,
&gt;&gt; Lukas Ruebbelke: Let's

10
00:00:40.639 --> 00:00:43.377
jump into the code,
&gt;&gt; Lukas Ruebbelke: And

11
00:00:43.377 --> 00:00:45.309
I'm just going to delete this.

12
00:00:50.957 --> 00:00:52.456
&gt;&gt; Lukas Ruebbelke: And because of that,

13
00:00:52.456 --> 00:00:57.549
I'm going to delete this,
&gt;&gt; Lukas Ruebbelke: And this.

14
00:00:57.549 --> 00:01:02.120
And so now we are back to,
I think kind of the bare metal here.

15
00:01:06.993 --> 00:01:08.400
&gt;&gt; Lukas Ruebbelke: So far so good?

16
00:01:08.400 --> 00:01:13.870
So I just deleted the form, we're now
just sending in a selected widget.

17
00:01:16.944 --> 00:01:20.817
&gt;&gt; Lukas Ruebbelke: So
what I'm going to do for the same of time,

18
00:01:20.817 --> 00:01:25.024
I'm going to go to Item-detail.component.

19
00:01:27.731 --> 00:01:30.810
&gt;&gt; Lukas Ruebbelke: And
I'm going to just copy this form.

20
00:01:32.390 --> 00:01:34.850
Cuz it would be incredibly boring for
me to do this by hand.

21
00:01:37.364 --> 00:01:40.110
&gt;&gt; Lukas Ruebbelke: We go
back to widget detail, and

22
00:01:40.110 --> 00:01:42.970
I'm just going to paste this in.

23
00:01:45.740 --> 00:01:49.250
Now what I'm going to do, so
I don't jump ahead too much.

24
00:01:52.407 --> 00:01:55.490
&gt;&gt; Lukas Ruebbelke: I'll just leave this
off, after this back in in a minute.

25
00:01:57.490 --> 00:02:04.740
Let's change widget do this,
let's go selectedWidget.

26
00:02:04.740 --> 00:02:07.476
Of course,
my template is going to be like what?

27
00:02:07.476 --> 00:02:08.431
This doesn't exist.

28
00:02:10.849 --> 00:02:17.760
&gt;&gt; Lukas Ruebbelke: Widget Description,
enter a description, and here we go.

29
00:02:17.760 --> 00:02:23.310
So now the problem is we do
not have on our template.

30
00:02:25.106 --> 00:02:29.540
&gt;&gt; Lukas Ruebbelke: A selected
widget property.

31
00:02:29.540 --> 00:02:33.980
So first and foremost,
let's go selectedWidget: Widget.

32
00:02:36.949 --> 00:02:41.099
&gt;&gt; Lukas Ruebbelke: And then from here
we're going to convert this to a setter,

33
00:02:41.099 --> 00:02:45.673
so we just go set,
&gt;&gt; Lukas Ruebbelke: And

34
00:02:45.673 --> 00:02:46.843
it becomes now a function.

35
00:02:50.826 --> 00:02:53.140
&gt;&gt; Lukas Ruebbelke: That
takes a value property,

36
00:02:55.393 --> 00:02:56.637
&gt;&gt; Lukas Ruebbelke: Which is of

37
00:02:56.637 --> 00:02:58.301
type widget.

38
00:02:58.301 --> 00:03:05.650
And so now what we can do is go
this.selectedWidget = Object.assign,

39
00:03:05.650 --> 00:03:09.750
and we're going to use an empty object.

40
00:03:11.240 --> 00:03:16.240
And we're going to copy,
essentially we're taking value and

41
00:03:16.240 --> 00:03:20.229
we're cloning it into this empty object,
okay?

42
00:03:20.229 --> 00:03:26.135
And let's see if this even renders.

43
00:03:29.504 --> 00:03:30.251
&gt;&gt; Lukas Ruebbelke: Snap.

44
00:03:32.496 --> 00:03:36.191
&gt;&gt; Lukas Ruebbelke: Okay,
let's go back up here, wait hold on.

45
00:03:36.191 --> 00:03:41.335
And I'm not even throwing errors,
yes, amazing.

46
00:03:41.335 --> 00:03:46.896
All right, let's go back to our,
&gt;&gt; Lukas Ruebbelke: Template here.

47
00:03:46.896 --> 00:03:51.784
And so now we're checking for widget,

48
00:03:51.784 --> 00:03:54.904
which no longer exists.

49
00:03:54.904 --> 00:04:00.600
Because we're essentially intercepting
it and setting it to selectedWidget.

50
00:04:00.600 --> 00:04:02.991
So what we can do here is say,

51
00:04:02.991 --> 00:04:07.577
selectedWidget,
&gt;&gt; Lukas Ruebbelke: And

52
00:04:07.577 --> 00:04:12.326
let's just go,
&gt;&gt; Lukas Ruebbelke: originalName.

53
00:04:15.437 --> 00:04:20.078
&gt;&gt; Lukas Ruebbelke: Back
into our component.

54
00:04:20.078 --> 00:04:29.958
Let's go originalName,
&gt;&gt; Lukas Ruebbelke: And

55
00:04:29.958 --> 00:04:31.860
I did something here
that I don't remember.

56
00:04:41.380 --> 00:04:48.402
&gt;&gt; Lukas Ruebbelke: Just gonna copy it,
cuz no point in rehashing the wheel.

57
00:04:48.402 --> 00:04:55.075
So go to widget, detail, component.

58
00:04:55.075 --> 00:04:58.765
So essentially what we're doing here
is we're just checking to say this

59
00:04:58.765 --> 00:04:59.450
are widget.

60
00:04:59.450 --> 00:05:01.864
If so, set the originalName.

61
00:05:03.945 --> 00:05:07.178
&gt;&gt; Lukas Ruebbelke: We'll safeguard here,
and let's refresh.

62
00:05:15.146 --> 00:05:18.797
&gt;&gt; Lukas Ruebbelke: Let's go back, and
I did something wrong in the template.

63
00:05:23.752 --> 00:05:24.834
&gt;&gt; Lukas Ruebbelke: If no,

64
00:05:36.873 --> 00:05:37.603
&gt;&gt; Lukas Ruebbelke: Right, so

65
00:05:37.603 --> 00:05:39.880
here, we'll just check for ID.

66
00:05:44.946 --> 00:05:45.980
&gt;&gt; Lukas Ruebbelke: Let's refresh.

67
00:05:51.351 --> 00:05:52.187
&gt;&gt; Lukas Ruebbelke: There we go.

68
00:05:52.187 --> 00:05:53.020
Select a Widget,

69
00:06:04.918 --> 00:06:05.840
&gt;&gt; Lukas Ruebbelke: And
now we're passing it in.

70
00:06:07.230 --> 00:06:11.390
So let's just look at
our markup real quick.

71
00:06:14.790 --> 00:06:19.810
We have a form and
we are simply binding these two

72
00:06:19.810 --> 00:06:25.290
inputs using ngModel to our
selectedWidget name and description.

73
00:06:26.821 --> 00:06:27.382
&gt;&gt; Lukas Ruebbelke: So far,

74
00:06:27.382 --> 00:06:32.770
I think pretty simple that if we wanted
to actually edit even another property.

75
00:06:32.770 --> 00:06:39.602
We would just add another input and
bind to that property on that object.

76
00:06:39.602 --> 00:06:42.980
So for instance, if we go here,
let me just look at the interface.

77
00:06:42.980 --> 00:06:45.474
So if image name, so
we have these various properties.

78
00:06:45.474 --> 00:06:48.557
So if we wanted to edit for
instance featured which a boolean,

79
00:06:48.557 --> 00:06:50.870
we probably want to do a check box.

80
00:06:50.870 --> 00:06:53.580
But that could be done, so
we could just extend out.

81
00:06:54.590 --> 00:06:59.164
For now, we're just doing name and
description.

82
00:06:59.164 --> 00:07:02.776
So let's kick this up.

83
00:07:06.097 --> 00:07:07.625
&gt;&gt; Lukas Ruebbelke: We
also don't need that.

84
00:07:07.625 --> 00:07:10.668
And so now if I want to get a reference

85
00:07:10.668 --> 00:07:15.550
to the underlined form group
on this form how do I do that?

86
00:07:20.465 --> 00:07:21.459
&gt;&gt; Speaker 2: The form name?

87
00:07:21.459 --> 00:07:22.916
&gt;&gt; Lukas Ruebbelke: What's that?

88
00:07:22.916 --> 00:07:24.826
&gt;&gt; Speaker 2: Is it pound form name?

89
00:07:24.826 --> 00:07:25.426
&gt;&gt; Lukas Ruebbelke: Equals,

90
00:07:25.426 --> 00:07:29.561
wo we need a local variable that
you need to point it to something.

91
00:07:29.561 --> 00:07:30.843
&gt;&gt; Speaker 2: ngFor.

92
00:07:30.843 --> 00:07:31.588
&gt;&gt; Lukas Ruebbelke: Close.

93
00:07:31.588 --> 00:07:32.335
&gt;&gt; Speaker 2: ngForm.

94
00:07:32.335 --> 00:07:35.289
&gt;&gt; Lukas Ruebbelke: ngForm, yes, awesome.

95
00:07:35.289 --> 00:07:41.065
So we'll go myForm = ngForm.

96
00:07:41.065 --> 00:07:46.470
And so now let's go, just so
we can check this out.

97
00:07:49.321 --> 00:07:53.460
&gt;&gt; Lukas Ruebbelke: Also we have had
some questions about actually debugging.

98
00:07:54.590 --> 00:07:57.110
And there's kind of some various levels,
so

99
00:07:57.110 --> 00:08:00.180
I just give you a couple
techniques right out of the gates.

100
00:08:00.180 --> 00:08:05.990
So the first thing that I
like to do is pre-tag and

101
00:08:05.990 --> 00:08:12.374
then jump or
dump rather my object into the template.

102
00:08:12.374 --> 00:08:15.128
And then using dollar JASON,

103
00:08:15.128 --> 00:08:20.643
I can basically convert into
a JSON structure, and see it.

104
00:08:20.643 --> 00:08:22.923
So this works most of the time.

105
00:08:22.923 --> 00:08:26.353
Occasionally,
&gt;&gt; Lukas Ruebbelke: You'll

106
00:08:26.353 --> 00:08:27.000
reference something.

107
00:08:27.000 --> 00:08:31.432
So for instance, if I just tried to do my
form, without actually value or valid,

108
00:08:31.432 --> 00:08:32.490
it would throw up.

109
00:08:32.490 --> 00:08:37.787
So two JSON does not handle circular
references too well at all.

110
00:08:37.787 --> 00:08:40.869
&gt;&gt; Speaker 3: Wouldn't that be
a good use for the object assign,

111
00:08:40.869 --> 00:08:42.670
since you get a shallow copy?

112
00:08:43.940 --> 00:08:44.858
&gt;&gt; Lukas Ruebbelke: Interesting.

113
00:08:44.858 --> 00:08:48.565
I think I've actually tried that,
but that's a really good question.

114
00:08:48.565 --> 00:08:51.995
So the question is, would this be
a good use case for object.assign?

115
00:08:55.021 --> 00:08:55.888
&gt;&gt; Lukas Ruebbelke: Let's
see what happens.

116
00:09:02.995 --> 00:09:06.509
&gt;&gt; Lukas Ruebbelke: If this works,
I am gonna jump over that table and

117
00:09:06.509 --> 00:09:08.064
give you a high five.

118
00:09:08.064 --> 00:09:10.180
That or I'll fly across or
I'll hop onto the drone,

119
00:09:10.180 --> 00:09:11.730
and I'll have Mark fly me over there.

120
00:09:23.311 --> 00:09:26.014
&gt;&gt; Lukas Ruebbelke: What the duce?

121
00:09:32.098 --> 00:09:34.656
&gt;&gt; Lukas Ruebbelke: The reason being
is it actually, for security reasons,

122
00:09:34.656 --> 00:09:36.479
it's not going to let me evaluate this.

123
00:09:38.680 --> 00:09:43.040
So there's other ways to do that, but
unfortunately that was a really nice idea.

124
00:09:43.040 --> 00:09:45.083
I mean I was so hopeful in my heart.

125
00:09:55.281 --> 00:09:56.902
&gt;&gt; Lukas Ruebbelke: All right, no errors.

126
00:09:56.902 --> 00:10:00.888
So now we can see our form, so myForm.

127
00:10:00.888 --> 00:10:04.083
And then we select this, it's valid.

128
00:10:09.114 --> 00:10:12.150
&gt;&gt; Lukas Ruebbelke: And Cancel,
which actually does nothing in this case.

129
00:10:12.150 --> 00:10:15.733
But we'll go here, we'll go here.

130
00:10:17.142 --> 00:10:21.705
&gt;&gt; Lukas Ruebbelke: And
it appears that somewhere along the line,

131
00:10:21.705 --> 00:10:24.984
my CSS styles are style in place.

132
00:10:24.984 --> 00:10:26.012
Let me check.

133
00:10:32.409 --> 00:10:33.695
&gt;&gt; Lukas Ruebbelke: So
this is why we're seeing this.

134
00:10:36.612 --> 00:10:39.012
&gt;&gt; Lukas Ruebbelke: But more importantly,
let's add a validation.

135
00:10:39.012 --> 00:10:45.895
So we've been playing around
with this ngForm reference.

136
00:10:45.895 --> 00:10:52.579
I'm going to drop this out and,
&gt;&gt; Lukas Ruebbelke: What I

137
00:10:52.579 --> 00:10:57.680
am going to do,
&gt;&gt; Lukas Ruebbelke: Here.

138
00:10:59.681 --> 00:11:05.985
&gt;&gt; Lukas Ruebbelke: disabled,
&gt;&gt; Lukas Ruebbelke: myForm.

139
00:11:11.047 --> 00:11:12.920
&gt;&gt; Lukas Ruebbelke: It's
disabled if it's not valid.

140
00:11:23.457 --> 00:11:25.487
&gt;&gt; Lukas Ruebbelke: Notice I
can't click this.

141
00:11:25.487 --> 00:11:28.510
&gt;&gt; [NOISE]
&gt;&gt; Lukas Ruebbelke: Now I can.

142
00:11:31.041 --> 00:11:32.590
&gt;&gt; Lukas Ruebbelke: And now I cannot.

143
00:11:32.590 --> 00:11:35.500
So it's a pretty easy
way to destable input.

144
00:11:38.850 --> 00:11:39.873
Yes?

145
00:11:39.873 --> 00:11:44.272
&gt;&gt; Speaker 4: Are there max
character things that you look at?

146
00:11:44.272 --> 00:11:49.119
&gt;&gt; Lukas Ruebbelke: There's
a whole bevy of options.

147
00:11:49.119 --> 00:11:51.269
All right, so we are almost out of time.

148
00:11:51.269 --> 00:11:53.051
We have about 30 minutes.

149
00:11:53.051 --> 00:11:54.178
And so I really, really,

150
00:11:54.178 --> 00:11:57.220
really, really, really wanna get
it to server side communication.

151
00:12:00.101 --> 00:12:01.134
&gt;&gt; Lukas Ruebbelke: Yes?

152
00:12:01.134 --> 00:12:04.347
&gt;&gt; Speaker 4: You had mentioned
the shadow yesterday,

153
00:12:04.347 --> 00:12:07.294
you gonna be able to get time for that?

154
00:12:07.294 --> 00:12:10.020
&gt;&gt; Lukas Ruebbelke: So
I can elaborate on that quickly.

155
00:12:11.200 --> 00:12:16.901
That under the hood, anytime you assign
a style to a component that Angular,

156
00:12:16.901 --> 00:12:19.985
what it does is when it generates the DOM.

157
00:12:19.985 --> 00:12:26.360
It assigns essentially this
quasi generated class to it.

158
00:12:26.360 --> 00:12:31.090
And then it assigns all of those
component specific styles to that class.

159
00:12:31.090 --> 00:12:34.955
So now you have this ultra
specific essentially,

160
00:12:34.955 --> 00:12:39.102
CSS selector that will only work for
that component.

161
00:12:39.102 --> 00:12:41.387
Now let me see if I can
actually show this here.

162
00:12:41.387 --> 00:12:46.363
That,
&gt;&gt; Lukas Ruebbelke: So

163
00:12:46.363 --> 00:12:51.644
you notice here, ngcontent-mech-5 or
whatever this is.

164
00:12:51.644 --> 00:12:52.810
So you see that?

165
00:12:52.810 --> 00:12:55.050
This is completely
happening under the hood.

166
00:12:55.050 --> 00:12:59.886
And then if I go up to the top,

167
00:13:05.335 --> 00:13:07.272
&gt;&gt; Lukas Ruebbelke: Somewhere in here.

168
00:13:07.272 --> 00:13:07.938
&gt;&gt; Speaker 2: Yeah, it's there.

169
00:13:07.938 --> 00:13:08.894
It's there.

170
00:13:08.894 --> 00:13:09.804
&gt;&gt; Speaker 3: It's down a little bit.

171
00:13:09.804 --> 00:13:11.181
&gt;&gt; Speaker 2: You can see the selectors.

172
00:13:11.181 --> 00:13:15.295
&gt;&gt; Lukas Ruebbelke: Yeah, so you can see
now it's assigning that on there and

173
00:13:15.295 --> 00:13:17.874
then this becomes super specific.

174
00:13:17.874 --> 00:13:23.410
And so that's how that gets encapsulated,
and so it just kind of works.

175
00:13:23.410 --> 00:13:26.952
So when you put it at a component then
it will be for that component and

176
00:13:26.952 --> 00:13:27.769
its children.

177
00:13:27.769 --> 00:13:31.249
And that's that.

