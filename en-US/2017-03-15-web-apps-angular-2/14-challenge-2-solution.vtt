WEBVTT

1
00:00:00.540 --> 00:00:03.406
&gt;&gt; Lukas Ruebbelke: I've done my version
of this using the student's component

2
00:00:03.406 --> 00:00:12.490
based on kind of some of the questions
that I've seen come through.

3
00:00:12.490 --> 00:00:13.490
Let me just kind of address those.

4
00:00:13.490 --> 00:00:19.647
So one is, in our package we had
a question about the Angular CLI version,

5
00:00:19.647 --> 00:00:24.333
so we're actually setting
this in the package.json.

6
00:00:24.333 --> 00:00:26.897
So, if you just install it globally,

7
00:00:26.897 --> 00:00:30.513
then you're going to probably
have a newer version.

8
00:00:30.513 --> 00:00:34.940
So probably 16, 17, 18,
I think they're on 19 now.

9
00:00:34.940 --> 00:00:40.210
The only reason why I had everybody
install the CLI as kind of a prerequisite,

10
00:00:40.210 --> 00:00:43.370
again, is so
that we solve the environment problem.

11
00:00:43.370 --> 00:00:47.589
That if you can run CLI, then I know for a
fact that you have node and NPM installed.

12
00:00:48.700 --> 00:00:53.490
Occasionally, you show up at a workshop
and somebody just doesn't have Node or

13
00:00:53.490 --> 00:00:57.280
NPM installed and
you spend instead of 15 minutes teaching,

14
00:00:57.280 --> 00:01:01.519
you spend an hour and a half kind of
trying to find environment issues.

15
00:01:01.519 --> 00:01:05.044
So that's one of
the benefits of doing that.

16
00:01:05.044 --> 00:01:11.169
Secondly, there's a question
about the barrel roll,

17
00:01:11.169 --> 00:01:16.780
like why you would do it here and
not entry modules.

18
00:01:16.780 --> 00:01:21.570
So I want to make the distinction
that this is the difference between

19
00:01:21.570 --> 00:01:25.710
language level modules and
framework level modules.

20
00:01:25.710 --> 00:01:31.520
So for instance, we have
the student service here and it is,

21
00:01:31.520 --> 00:01:36.960
so I just click into student.service and
we're exporting this class here.

22
00:01:38.490 --> 00:01:42.353
So again, this is just ES6, and
we need to make this available,

23
00:01:42.353 --> 00:01:45.820
so we need to import it somewhere
else in the application.

24
00:01:45.820 --> 00:01:50.235
So when you generate a service it says,
hey, this has not been provided.

25
00:01:50.235 --> 00:01:57.310
So what you can do is in your app.module,
is you can import that by hand.

26
00:01:57.310 --> 00:02:01.550
For instance, you can see how we're
doing the components as one-offs.

27
00:02:01.550 --> 00:02:05.824
So import app component,
import items component, [SOUND].

28
00:02:05.824 --> 00:02:12.900
But, if you'll notice here, that we are,
we have one import statement.

29
00:02:15.310 --> 00:02:18.677
And we're importing this from dot, so

30
00:02:18.677 --> 00:02:24.370
this essentially means
current directory/shared.

31
00:02:24.370 --> 00:02:28.310
But notice we're not actually pointing
to any specific file, so when you import

32
00:02:28.310 --> 00:02:31.910
something it's like for instance
app.component minus the extensions.

33
00:02:31.910 --> 00:02:36.420
So you can just lop the extension off, but
here we're not even putting into a file.

34
00:02:36.420 --> 00:02:40.290
The reason being is
because we have index.ts.

35
00:02:40.290 --> 00:02:44.070
And so just like if you've done a website,

36
00:02:44.070 --> 00:02:48.085
kind of the entry point for
a web app or a webpage is what?

37
00:02:48.085 --> 00:02:53.660
Index.html, and so by default,
Node just treats that as an entry point.

38
00:02:53.660 --> 00:02:59.020
And whatever happens in there
is available for that directory.

39
00:02:59.020 --> 00:03:02.690
And so we could do this by hand.

40
00:03:02.690 --> 00:03:07.410
So again,
we can go import { StudentsService } and

41
00:03:07.410 --> 00:03:09.520
import this one at a time.

42
00:03:09.520 --> 00:03:13.790
But a lot of times if you
have related functionality,

43
00:03:13.790 --> 00:03:16.420
it's easier to create what
they call a barrel roll.

44
00:03:16.420 --> 00:03:22.440
To where, in your index.ts, you will
export kind of everything together

45
00:03:22.440 --> 00:03:27.730
that then you can go in and import
them in one single import statement.

46
00:03:27.730 --> 00:03:30.380
Now Angular 2 does this quite a bit.

47
00:03:30.380 --> 00:03:32.481
Because for instance,
hopefully this does this.

48
00:03:32.481 --> 00:03:41.151
If you notice here, in app routing
module that we're importing routes and

49
00:03:41.151 --> 00:03:45.423
router module from Angular router.

50
00:03:45.423 --> 00:03:47.836
And I will wager if you went in here,

51
00:03:47.836 --> 00:03:52.840
there is an index.ts that's
exporting routes and router module.

52
00:03:52.840 --> 00:03:54.810
So, it just basically
saves you from having,

53
00:03:54.810 --> 00:03:59.090
at a language level, from having
to create multiple import lines.

54
00:03:59.090 --> 00:04:02.610
As you can just kind of group
everything together into a barrel roll,

55
00:04:02.610 --> 00:04:05.990
and then you can import them
all from a single place.

56
00:04:05.990 --> 00:04:09.440
But, that is a language level convenience.

57
00:04:09.440 --> 00:04:13.340
You still have to import
it into your module.

58
00:04:14.810 --> 00:04:17.670
And so for a service, once you import it,

59
00:04:17.670 --> 00:04:22.310
it's now available to add to
your provider's directory.

60
00:04:22.310 --> 00:04:23.120
Does that make sense?

61
00:04:24.360 --> 00:04:25.370
Okay.

62
00:04:25.370 --> 00:04:31.960
So the one thing I have
not done is the routes.

63
00:04:31.960 --> 00:04:36.040
So I'm doing this kind of up front,
because being able to create a simple

64
00:04:36.040 --> 00:04:40.410
route kind of allows us to segment
our features a little bit better.

65
00:04:43.460 --> 00:04:48.561
And so I realized I said use the Angular
CLI for all the tasks, take that

66
00:04:48.561 --> 00:04:53.944
with a grain of salt because routes,
it's easier to just do this by hand.

67
00:04:53.944 --> 00:04:57.179
And actually when I wrote this slide
initially, you could generate routes.

68
00:04:57.179 --> 00:04:57.940
Now, you cannot.

69
00:04:58.980 --> 00:05:04.790
So actually now that I think about it,
we'll just do this,

70
00:05:06.000 --> 00:05:07.910
almost all of the tasks above.

71
00:05:07.910 --> 00:05:11.625
All right, so, let's get our routes on.

72
00:05:14.247 --> 00:05:16.750
&gt;&gt; Lukas Ruebbelke: So
I'm going to just duplicate this line.

73
00:05:16.750 --> 00:05:21.890
So in app routing module,
I've just duplicated line ten.

74
00:05:21.890 --> 00:05:26.890
I'm just gonna clean this up
cuz in our case we just want

75
00:05:28.090 --> 00:05:33.650
a super simple route that has a path and
a component.

76
00:05:35.420 --> 00:05:39.110
And so I did students, and

77
00:05:39.110 --> 00:05:46.339
I want to import the StudentsComponent.

78
00:05:46.339 --> 00:05:49.660
And it's saying well,
I don't know where that's at.

79
00:05:49.660 --> 00:05:50.763
Well, fair enough.

80
00:05:54.592 --> 00:05:57.896
&gt;&gt; Lukas Ruebbelke:
students/students.component.

81
00:06:00.792 --> 00:06:01.667
&gt;&gt; Lukas Ruebbelke: And
let me point something out

82
00:06:01.667 --> 00:06:06.788
here,
&gt;&gt; Lukas Ruebbelke: A logical question

83
00:06:06.788 --> 00:06:11.663
would be, well if you imported into app
module, like wouldn't it just not be

84
00:06:11.663 --> 00:06:16.540
available for you to just reference it
directly within your routing module?

85
00:06:17.610 --> 00:06:22.710
Because this is a separate module,
you need to import the defenses for

86
00:06:22.710 --> 00:06:26.520
that module so
that essentially it can exist by itself.

87
00:06:27.660 --> 00:06:31.750
So this is why I had to import

88
00:06:31.750 --> 00:06:37.130
StudentsComponent into my routing module.

89
00:06:37.130 --> 00:06:41.160
Now where this gets interesting
is if you are doing,

90
00:06:41.160 --> 00:06:44.800
essentially if you are breaking out
a component into a separate route, I've

91
00:06:44.800 --> 00:06:50.120
gotten burnt by this where I was looking
at like some very basic Angular feature.

92
00:06:50.120 --> 00:06:53.240
I think it was the JsonPipe and
it just wasn't working.

93
00:06:53.240 --> 00:06:55.093
I was like, what's going on here,?

94
00:06:55.093 --> 00:06:59.346
It's rendering, but the minute I take
it out of this module it works, but

95
00:06:59.346 --> 00:07:04.690
the minute it's back into this module so
I can do a lazy loading, it falls apart.

96
00:07:04.690 --> 00:07:08.130
Well, come to find out that
because it's in a module,

97
00:07:08.130 --> 00:07:12.000
you need to import its dependencies for
that module.

98
00:07:12.000 --> 00:07:17.380
And so in the case of what I was trying to
do, I had to import actually angular/core.

99
00:07:17.380 --> 00:07:21.280
When you are importing
essentially the BrowserModule,

100
00:07:22.470 --> 00:07:26.370
that this essentially wraps angular/core.

101
00:07:26.370 --> 00:07:29.210
So this is a little bit more advanced.

102
00:07:29.210 --> 00:07:32.880
The point is, that if you create a module,

103
00:07:32.880 --> 00:07:36.840
you need to explicitly define
the dependencies for that module.

104
00:07:36.840 --> 00:07:41.660
And if you're doing something like a lazy
loaded route, that it wraps a module, you

105
00:07:41.660 --> 00:07:46.660
may need to import angular/core because we
get that for free with the browser module.

106
00:07:46.660 --> 00:07:48.030
But for

107
00:07:48.030 --> 00:07:52.664
a standalone module, you will probably
need to import that into your module.

108
00:07:52.664 --> 00:07:58.339
And so back to app module, or

109
00:07:58.339 --> 00:08:04.640
rather app routing module.

110
00:08:04.640 --> 00:08:10.830
So I've just imported this here, here,
here, let's see if this renders.

111
00:08:13.238 --> 00:08:15.338
&gt;&gt; Lukas Ruebbelke: So
nothing is breaking, that's a good sign.

112
00:08:19.587 --> 00:08:21.920
&gt;&gt; Lukas Ruebbelke: Boom, student works.

113
00:08:21.920 --> 00:08:25.550
So we now navigate directly to it, and for

114
00:08:25.550 --> 00:08:31.044
a bonus on the bonus,
I'm going to go to our

115
00:08:31.044 --> 00:08:39.430
app.component.html and let's make it so
you can navigate to this.

116
00:08:39.430 --> 00:08:43.701
So we have here is our navigation links.

117
00:08:50.815 --> 00:08:52.454
&gt;&gt; Lukas Ruebbelke: That's what I've done,

118
00:08:52.454 --> 00:08:56.480
I just create an object of basic
links that we can route to.

119
00:08:56.480 --> 00:08:58.640
Because it's really an object.

120
00:08:58.640 --> 00:09:00.120
And you can actually add
in additional things, so

121
00:09:00.120 --> 00:09:02.130
I've kind of extracted that out.

122
00:09:02.130 --> 00:09:05.880
But if I go to these links here,
I'll just duplicate this.

123
00:09:07.180 --> 00:09:10.372
This is in AppComponent.ts.

124
00:09:12.398 --> 00:09:15.861
&gt;&gt; Lukas Ruebbelke: students:
['/students']

125
00:09:22.149 --> 00:09:22.849
&gt;&gt; Lukas Ruebbelke: And so

126
00:09:22.849 --> 00:09:28.460
the most important thing here is,
there we go.

127
00:09:29.530 --> 00:09:33.360
So again thank you modern IDEs.

128
00:09:33.360 --> 00:09:34.080
So if we go back here.

129
00:09:36.720 --> 00:09:40.340
Let's go items, widgets, please work.

130
00:09:40.340 --> 00:09:44.838
Yes.
[SOUND] There we go.

131
00:09:44.838 --> 00:09:45.679
Any questions?

132
00:09:53.383 --> 00:09:57.820
&gt;&gt; Lukas Ruebbelke: This is like, they say
children should be seen and not heard.

133
00:09:57.820 --> 00:10:00.630
I'm wondering, is my class in trouble,

134
00:10:00.630 --> 00:10:03.429
or am I doing such a good job
that nobody has any questions?

135
00:10:04.960 --> 00:10:10.245
Well, with that said
I'll wait strategically

136
00:10:10.245 --> 00:10:15.150
five seconds and
then we are gonna move into components.

137
00:10:16.940 --> 00:10:18.190
Five, four, three.

138
00:10:18.190 --> 00:10:19.176
&gt;&gt; Speaker 2: I do have a question.

139
00:10:19.176 --> 00:10:24.534
So how many people were able
to follow along with that and

140
00:10:24.534 --> 00:10:28.760
actually get it working on their computer?

141
00:10:28.760 --> 00:10:32.850
So half the room or so.

142
00:10:32.850 --> 00:10:35.910
With the other half,
are you guys stuck on,

143
00:10:35.910 --> 00:10:41.730
knowing where to start on the branch or,
I don't know, I was trying to figure out.

144
00:10:45.355 --> 00:10:47.884
&gt;&gt; Lukas Ruebbelke: So
what we can also do, let's just be clear,

145
00:10:47.884 --> 00:10:49.290
no student left behind.

146
00:10:50.490 --> 00:10:55.560
And so, if somebody is just completely
stuck, we'll stop, we'll address that.

147
00:10:56.650 --> 00:10:59.290
And so that's what I want to know.

148
00:10:59.290 --> 00:11:04.491
If something is just completely not
working, especially for the audience here,

149
00:11:04.491 --> 00:11:09.850
I want to make sure that one, if you are
having an issue with your environment or

150
00:11:09.850 --> 00:11:16.285
something, like please let me know and
we will try to get that addressed.

151
00:11:16.285 --> 00:11:21.215
As what I would really hate is by
tomorrow everything is just, kind of,

152
00:11:21.215 --> 00:11:26.488
the train has left the station and
it's really much harder to catch up then.

153
00:11:29.069 --> 00:11:31.170
&gt;&gt; Speaker 3: [INAUDIBLE] question.

154
00:11:31.170 --> 00:11:32.588
&gt;&gt; Speaker 2: Go ahead.
&gt;&gt; Speaker 3: Two questions coming up.

155
00:11:32.588 --> 00:11:33.397
&gt;&gt; Lukas Ruebbelke: Mm-hm.

156
00:11:33.397 --> 00:11:37.010
&gt;&gt; Speaker 3: In the app component,
you added to your links array,

157
00:11:37.010 --> 00:11:42.650
did you have to add every single link
in your app to that links object?

158
00:11:42.650 --> 00:11:47.730
&gt;&gt; Lukas Ruebbelke: So that is purely
a convenience mechanism that I create.

159
00:11:47.730 --> 00:11:52.570
So I just like to actually abstract
out all my links into an object.

160
00:11:52.570 --> 00:11:57.120
But for instance, if we go

161
00:11:57.120 --> 00:12:01.460
to look for an additional example here.

162
00:12:02.840 --> 00:12:07.670
So you can actually just put
that link directly in there.

163
00:12:07.670 --> 00:12:12.490
I just personally like to abstract it
out into an object that we can link to.

164
00:12:12.490 --> 00:12:14.381
&gt;&gt; Speaker 3: Couple questions after that,
one from Kennedy.

165
00:12:14.381 --> 00:12:19.229
Does the NGCLI generates
the app.routing file?

166
00:12:19.229 --> 00:12:22.210
&gt;&gt; Lukas Ruebbelke: It does.

167
00:12:22.210 --> 00:12:26.730
&gt;&gt; Speaker 3: Okay, and then Annie is
asking, she got the gizmo working but

168
00:12:26.730 --> 00:12:29.530
the wildcard route is not working.

169
00:12:29.530 --> 00:12:33.416
&gt;&gt; Lukas Ruebbelke: My.
The one thing I haven't tested,

170
00:12:54.066 --> 00:12:55.026
&gt;&gt; Lukas Ruebbelke: Yeah this is actually.

171
00:12:59.483 --> 00:13:03.409
&gt;&gt; Speaker 4: Should it be direct to?

172
00:13:03.409 --> 00:13:05.753
&gt;&gt; Lukas Ruebbelke: Wondering
if it's two stars, hold on.

173
00:13:17.455 --> 00:13:21.270
&gt;&gt; Lukas Ruebbelke: Yeah so
that is actually the syntax.

174
00:13:21.270 --> 00:13:27.810
So not one star, but two stars, so
thanks Annie for pointing that out.

175
00:13:27.810 --> 00:13:31.580
Now, what's going to happen,
so let's just go back here.

176
00:13:34.420 --> 00:13:34.920
Items.

177
00:13:39.791 --> 00:13:43.274
&gt;&gt; Lukas Ruebbelke: Now one would have to
careful about this, because this actually,

178
00:13:43.274 --> 00:13:47.317
this particular route depends on a route
param that it's just saying, hey,

179
00:13:47.317 --> 00:13:49.530
I don't know where this is at.

180
00:13:49.530 --> 00:13:53.061
And so what you could do, in this case,

181
00:13:53.061 --> 00:13:58.412
is if we wanted to go StudentsComponent,
let's try this.

182
00:14:04.187 --> 00:14:05.280
&gt;&gt; Lukas Ruebbelke: There we go.

183
00:14:05.280 --> 00:14:10.690
So because ItemsComponent, or that
route has a route param it depends on,

184
00:14:10.690 --> 00:14:13.426
then it's gonna throw that error.

185
00:14:13.426 --> 00:14:17.470
But that is the deal with the route, so

186
00:14:17.470 --> 00:14:20.940
we'll get that fixed up, it's actually
got two stars for the wildcard.

187
00:14:22.480 --> 00:14:25.160
&gt;&gt; Speaker 2: And Lukas,
what branch are we on?

188
00:14:25.160 --> 00:14:26.814
&gt;&gt; Lukas Ruebbelke: So
this is just all on master.

189
00:14:28.992 --> 00:14:29.852
&gt;&gt; Lukas Ruebbelke: And
because what we're gonna do-

190
00:14:29.852 --> 00:14:31.104
&gt;&gt; Speaker 2: [INAUDIBLE] Start with

191
00:14:31.104 --> 00:14:32.010
the branches.

192
00:14:33.390 --> 00:14:35.140
&gt;&gt; Lukas Ruebbelke: This is just
all to kinda get a feel for

193
00:14:35.140 --> 00:14:39.500
kinda the application, what an Angular
2 application looks like and

194
00:14:39.500 --> 00:14:42.660
how the CLI kind of looks and feels.

195
00:14:42.660 --> 00:14:46.401
And then once we actually get into
components, then we'll start at zero zero.

196
00:14:46.401 --> 00:14:50.577
And then we'll kind of work through
the application from there.

197
00:14:50.577 --> 00:14:52.090
&gt;&gt; Speaker 3: A question just popped in.

198
00:14:52.090 --> 00:14:55.917
Alan is asking, could you make
a redirect to the wild card line?

199
00:14:59.758 --> 00:15:01.536
&gt;&gt; Lukas Ruebbelke: Could
you make a redirect?

200
00:15:03.856 --> 00:15:05.114
&gt;&gt; Lukas Ruebbelke: Well, let's try that.

201
00:15:10.403 --> 00:15:11.633
&gt;&gt; Lukas Ruebbelke: Let's
see what happens.

202
00:15:22.276 --> 00:15:23.530
&gt;&gt; Lukas Ruebbelke: We're
living dangerous.

203
00:15:23.530 --> 00:15:25.640
I don't know what's gonna happen.

204
00:15:25.640 --> 00:15:27.092
&gt;&gt; Speaker 3: Okay,
according to Chris, you can do it.

205
00:15:31.673 --> 00:15:33.600
&gt;&gt; Lukas Ruebbelke: Snap.

206
00:15:33.600 --> 00:15:34.100
Good to know.

207
00:15:36.992 --> 00:15:39.642
&gt;&gt; Lukas Ruebbelke: And actually I think
that's probably even better than just

208
00:15:39.642 --> 00:15:42.270
being like leave the URL as it is and
throw in a component.

209
00:15:42.270 --> 00:15:44.370
I think actually adding
a redirect is even better, so.

