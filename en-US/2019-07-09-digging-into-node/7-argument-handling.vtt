WEBVTT

1
00:00:00.000 --> 00:00:03.538
&gt;&gt; Kyle Simpson: All right, so we wanna
do something useful with these inputs,

2
00:00:03.538 --> 00:00:05.555
we wanna start deciding what to do.

3
00:00:05.555 --> 00:00:08.375
So let's just write some if-logic for
a moment.

4
00:00:08.375 --> 00:00:14.400
Let's just say, if (args.help),
then we know we wanna print the help.

5
00:00:24.815 --> 00:00:27.447
&gt;&gt; Kyle Simpson: That means,
if there's a --help anywhere in there,

6
00:00:27.447 --> 00:00:30.550
even if there's other stuff,
it sort of overrides everything.

7
00:00:30.550 --> 00:00:32.218
It says, I definitely wanna see the help.

8
00:00:32.218 --> 00:00:36.310
So if args.help has been specified,
we wanna print the help.

9
00:00:36.310 --> 00:00:41.019
Then let's have an else if clause that,
else if (args.file), in other words,

10
00:00:41.019 --> 00:00:44.319
that's been specified, and
it's a non-empty string,

11
00:00:44.319 --> 00:00:47.512
then we're gonna go on and
do something with that file.

12
00:00:47.512 --> 00:00:52.134
So maybe we'll just print out whatever
the contents of args.file are.

13
00:00:55.152 --> 00:00:57.373
&gt;&gt; Kyle Simpson: And
then lastly, we wanna say,

14
00:00:57.373 --> 00:01:02.310
if we didn't pass in help, and
we didn't pass in a file parameter?

15
00:01:02.310 --> 00:01:06.065
We wanna treat that as an error condition,
because you didn't do what was required,

16
00:01:06.065 --> 00:01:07.799
you didn't do the minimum-require.

17
00:01:07.799 --> 00:01:09.914
So we're gonna do an else condition,

18
00:01:09.914 --> 00:01:14.360
and I'm gonna define a little helper for
myself, called error.

19
00:01:14.360 --> 00:01:17.599
So down here at the bottom,
I'm going to write, function error.

20
00:01:20.673 --> 00:01:26.154
&gt;&gt; Kyle Simpson: It's gonna take
a message, and what I'm going to do

21
00:01:26.154 --> 00:01:31.900
is console.error the message
that we're printing.

22
00:01:31.900 --> 00:01:35.746
But I also wanna do one other
little thing, which is typically,

23
00:01:35.746 --> 00:01:39.820
if there's an error, in some cases
you want to just show the error.

24
00:01:39.820 --> 00:01:43.402
But in other cases, if it's a mis-usage,
you wanna go ahead and

25
00:01:43.402 --> 00:01:45.104
print the help for them to see.

26
00:01:45.104 --> 00:01:50.464
So I'm gonna include,
I'm gonna have a parameter here

27
00:01:50.464 --> 00:01:55.950
called includeHelp, and
we'll default that to false.

28
00:01:57.798 --> 00:02:02.556
&gt;&gt; Kyle Simpson: And so we'll print
the error message, and then if includeHelp

29
00:02:02.556 --> 00:02:07.870
we'll put a separating empty line,
and then we'll call printHelp.

30
00:02:15.480 --> 00:02:19.549
&gt;&gt; Kyle Simpson: So up in our else clause,
then, we'll use this helper, we'll say,

31
00:02:22.447 --> 00:02:25.925
&gt;&gt; Kyle Simpson: Incorrect usage.

32
00:02:28.830 --> 00:02:33.800
&gt;&gt; Kyle Simpson: And we want to pass true,
to tell it to go ahead and print the help.

33
00:02:40.640 --> 00:02:43.560
&gt;&gt; Kyle Simpson: Let's try
it without any input at all.

34
00:02:45.810 --> 00:02:48.951
&gt;&gt; Kyle Simpson: And you'll see now,
we've got the incorrect usage, and

35
00:02:48.951 --> 00:02:50.370
then it printed the help.

36
00:02:50.370 --> 00:02:54.732
We could try it with a --help,
and we only get the help, or

37
00:02:54.732 --> 00:03:00.770
we can try it with a --file that has
no value, and it says incorrect usage.

38
00:03:00.770 --> 00:03:07.556
Or if we actually give it a value,
like hello, then it prints that input.

39
00:03:11.040 --> 00:03:14.616
&gt;&gt; Kyle Simpson: So now, we are
successfully receiving inputs to our Node

40
00:03:14.616 --> 00:03:17.459
program, and using them to make decisions.

41
00:03:17.459 --> 00:03:21.323
Let's also not forget that
we should update our help,

42
00:03:21.323 --> 00:03:23.680
so that it is useful to somebody.

43
00:03:23.680 --> 00:03:27.594
This is, again, so
easy to forget to do, and

44
00:03:27.594 --> 00:03:31.520
then later on, we're pulling our hair out.

45
00:03:31.520 --> 00:03:37.181
So let's make sure we update
this with something useful.

46
00:03:47.324 --> 00:03:52.886
&gt;&gt; Kyle Simpson: Be as
creative as you'd like

47
00:03:52.886 --> 00:03:57.530
with your help output.

48
00:03:58.540 --> 00:03:59.498
A quick note on minimist.

49
00:03:59.498 --> 00:04:04.055
If you were to look up and minimist and
see, you would find that literally

50
00:04:04.055 --> 00:04:08.500
tens of thousands of other packages
in existence rely upon minimist.

51
00:04:08.500 --> 00:04:11.274
It has no dependencies itself, and

52
00:04:11.274 --> 00:04:16.460
it is depended upon by almost every
other major package out there.

53
00:04:16.460 --> 00:04:20.721
It's a really good, solid way of handling,
which is why I picked it for

54
00:04:20.721 --> 00:04:24.940
the purposes of this exercise,
good, solid way of handling it.

55
00:04:24.940 --> 00:04:28.210
It is very low level, it's very
bare-bones, it doesn't have a ton.

56
00:04:28.210 --> 00:04:30.252
If you go look up the documentation for
it,

57
00:04:30.252 --> 00:04:32.138
it doesn't have a lot of details to it.

58
00:04:32.138 --> 00:04:35.751
So if you want something
a bit more sophisticated,

59
00:04:35.751 --> 00:04:38.530
there are a few that I might recommend.

60
00:04:38.530 --> 00:04:42.745
In particular, I would recommend
one called Yargs, Y-args.

61
00:04:42.745 --> 00:04:48.240
It uses minimist, and
it wraps on top of minimist.

62
00:04:48.240 --> 00:04:51.927
It uses this special syntax where you
define what your options are, and

63
00:04:51.927 --> 00:04:53.100
what their types are.

64
00:04:53.100 --> 00:04:57.070
And one of the benefits of Yargs,
one of the many benefits, is that it will

65
00:04:57.070 --> 00:05:01.056
automatically generate your help
output from your args configuration.

66
00:05:01.056 --> 00:05:06.880
So if you don't wanna manually keep
your help updated, Yargs is another one.

67
00:05:06.880 --> 00:05:08.440
Just a quick little note on Yargs.

68
00:05:08.440 --> 00:05:11.298
When you go and
look at the documentation for that,

69
00:05:11.298 --> 00:05:15.840
you will find out that the author of that,
and I know him, he's a great guy.

70
00:05:15.840 --> 00:05:19.993
But the author of that package really
went all in on the pirate theme.

71
00:05:19.993 --> 00:05:23.640
Yargs, the entire documentation,
everything,

72
00:05:23.640 --> 00:05:27.410
all the examples,
they're all in pirate-speak.

73
00:05:27.410 --> 00:05:29.929
So that might be good just for
the entertainment value,

74
00:05:29.929 --> 00:05:31.975
even if you don't
actually wanna use Yargs.

75
00:05:31.975 --> 00:05:35.624
But anyway, I like to use minimist,
I probably use that 95%of the time.

76
00:05:35.624 --> 00:05:39.715
Every once in a while,
I use one of those sophisticated packages.

