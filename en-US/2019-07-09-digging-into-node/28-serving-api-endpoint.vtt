WEBVTT

1
00:00:00.420 --> 00:00:04.465
&gt;&gt; Kyle Simpson: Now that we're serving up
files, the next question we might ask is,

2
00:00:04.465 --> 00:00:06.713
how could I respond to AJAX requests?

3
00:00:06.713 --> 00:00:11.260
How could I have an API endpoint for
my code?

4
00:00:11.260 --> 00:00:13.710
So in our handleRequest,

5
00:00:13.710 --> 00:00:17.430
back to our handleRequest function,
we're gonna set up an if statement.

6
00:00:17.430 --> 00:00:20.710
That if the incoming request
looks like an API request,

7
00:00:20.710 --> 00:00:22.390
we're gonna handle it manually.

8
00:00:22.390 --> 00:00:26.020
Otherwise, for all other requests, we're
gonna hand it off to the file server.

9
00:00:26.020 --> 00:00:30.176
So if,
we'll use a regular expression here,

10
00:00:30.176 --> 00:00:36.998
if the beginning of the string says,
and let me open up our JavaScript file,

11
00:00:36.998 --> 00:00:43.089
just to make sure I remember which
URL we're gonna be trying to hit.

12
00:00:45.738 --> 00:00:48.156
&gt;&gt; Kyle Simpson: I don't have it
hard-coded, okay, we'll just pick one.

13
00:00:48.156 --> 00:00:52.578
Let's say, let's call it get-records,

14
00:00:52.578 --> 00:00:58.925
that's the API endpoint that we
want to handle specifically.

15
00:00:58.925 --> 00:01:03.394
So don't need any regular expression for
that,

16
00:01:03.394 --> 00:01:08.522
I can just say (rec.url
== "/get-records").

17
00:01:08.522 --> 00:01:13.180
And if that's the case, we wanna handle
it manually, otherwise we wanna serve

18
00:01:13.180 --> 00:01:19.822
up,
&gt;&gt; Kyle Simpson: So

19
00:01:19.822 --> 00:01:23.201
what do we want to respond with,

20
00:01:23.201 --> 00:01:28.091
when there is a request for
the get-records?

21
00:01:28.091 --> 00:01:31.203
Well, we have a function
already filled in for you,

22
00:01:31.203 --> 00:01:34.895
which is the getAllRecords()
from our previous exercise.

23
00:01:34.895 --> 00:01:37.568
This one should be able to
connect to our database,

24
00:01:37.568 --> 00:01:40.501
and pull out that array of information,
and return it.

25
00:01:40.501 --> 00:01:46.034
So really, all we need to do
is call the getAllRecords(),

26
00:01:46.034 --> 00:01:52.007
and json.stringify that, and
send that out as a JSON response.

27
00:01:52.007 --> 00:01:56.111
Quick note that if, for some reason, at
this moment, your SQLite wasn't working?

28
00:01:56.111 --> 00:02:00.766
You can comment that version out, and just
use this hard-coded one to send some data.

29
00:02:00.766 --> 00:02:05.976
Just so you get the sense of how
we're sending out JSON responses.

30
00:02:05.976 --> 00:02:09.396
Okay, so let's first say,

31
00:02:09.396 --> 00:02:14.106
records = await getAllRecords().

32
00:02:17.489 --> 00:02:19.636
&gt;&gt; Kyle Simpson: And then how are we
gonna send out a JSON response?

33
00:02:19.636 --> 00:02:21.659
Well, it's similar to what we did before.

34
00:02:21.659 --> 00:02:26.864
We're gonna say res.writeHead, and
we're gonna say 200, and here,

35
00:02:26.864 --> 00:02:32.888
we need to send a content type,
&gt;&gt; Kyle Simpson: That

36
00:02:32.888 --> 00:02:38.450
is application/json, and
also, since it's an API

37
00:02:38.450 --> 00:02:43.773
that we we don't want to
be unnecessarily cached?

38
00:02:43.773 --> 00:02:48.843
We should send out a Cache-Control

39
00:02:48.843 --> 00:02:53.406
header that says, no-cache.

40
00:03:00.049 --> 00:03:04.492
&gt;&gt; Kyle Simpson: And
then we're gonna say res.end, and

41
00:03:04.492 --> 00:03:09.989
we'll just json.stringify
the records array.

42
00:03:09.989 --> 00:03:18.380
Okay, so let's restart our server,
&gt;&gt; Kyle Simpson: And

43
00:03:18.380 --> 00:03:21.548
let's test to see if we are, in fact,

44
00:03:21.548 --> 00:03:27.504
able to get,
&gt;&gt; Kyle Simpson: A response

45
00:03:27.504 --> 00:03:28.768
from get-records,

46
00:03:28.768 --> 00:03:33.197
and there's our string of JSON that's
coming in, so that's a good sign.

47
00:03:33.197 --> 00:03:37.797
That now means that from our web
page side, we can make an AJAX call,

48
00:03:37.797 --> 00:03:40.400
and get that data, and then print it.

