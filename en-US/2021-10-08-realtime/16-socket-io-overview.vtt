WEBVTT

1
00:00:00.000 --> 00:00:05.838
We are going to get into
here in real time exercises

2
00:00:05.838 --> 00:00:11.120
WebSockets exercise socket.io that is your

3
00:00:11.120 --> 00:00:16.402
next set of exercises that
you need to be on and

4
00:00:16.402 --> 00:00:22.255
I'm going to go to Pitt deli/intro,
real time.

5
00:00:22.255 --> 00:00:25.274
We're down here on intro to socket.io.

6
00:00:28.063 --> 00:00:33.124
So we went through and we did all
those that socket stuff by hand,

7
00:00:33.124 --> 00:00:39.310
it is not fun in the sense of like this
was fun to write, but there's absolutely

8
00:00:39.310 --> 00:00:44.593
nothing that I would want to ever
maintain in production, right?

9
00:00:44.593 --> 00:00:47.736
There's just a lot that
can go wrong there, right,

10
00:00:47.736 --> 00:00:51.678
there's a lot of just surface areas for
bugs that you could have.

11
00:00:51.678 --> 00:00:55.233
It'd be way better if we could get
someone, some open source community

12
00:00:55.233 --> 00:00:58.551
to maintain some really nice library
that handles all this for us,

13
00:00:58.551 --> 00:01:01.175
then we could all contribute
just to the same thing.

14
00:01:01.175 --> 00:01:05.620
For WebSockets, that means probably one of
two libraries that you would use one would

15
00:01:05.620 --> 00:01:08.658
be socket.io,
which is the one that we're about to use.

16
00:01:08.658 --> 00:01:13.920
And one would be WS,
which is WebSockets as you might

17
00:01:13.920 --> 00:01:19.070
have guessed,
let's just chat a second about Ws.

18
00:01:19.070 --> 00:01:22.502
It's an awesome library and
I'll be honest,

19
00:01:22.502 --> 00:01:26.556
most of the time I choose Ws
over socket IO personally.

20
00:01:26.556 --> 00:01:31.126
But it's like the difference between
having like a really nice helper

21
00:01:31.126 --> 00:01:35.702
library for WebSockets and
a framework on top of WebSockets, right?

22
00:01:35.702 --> 00:01:40.633
So Ws is just like hey, I need a WebSocket
and I'm Fitting this into another

23
00:01:40.633 --> 00:01:45.192
piece of a bigger system that I
have,it's mostly what I do, right?

24
00:01:45.192 --> 00:01:49.077
Then Ws is perfect for that, they
basically take that web socket interface,

25
00:01:49.077 --> 00:01:52.026
that we have on the client
that we wrote together, right?

26
00:01:52.026 --> 00:01:57.072
And they kind of make that same
sort of like minimal interface,

27
00:01:57.072 --> 00:02:01.364
for the server, and
that's really all that ws does.

28
00:02:01.364 --> 00:02:04.395
It's an awesome library one that you
should definitely go give a shot

29
00:02:04.395 --> 00:02:06.389
after we do all this together, it's great.

30
00:02:06.389 --> 00:02:09.855
I have nothing but good things to say
about them and their maintainers.

31
00:02:11.734 --> 00:02:16.456
The other one that is probably
more popular is called

32
00:02:16.456 --> 00:02:21.286
socket.io socket.io is like
a full on framework for

33
00:02:21.286 --> 00:02:26.674
WebSockets so the it it just
adds a lot more functionality.

34
00:02:26.674 --> 00:02:29.266
Like there's things like you can
add like rooms, for example, right?

35
00:02:29.266 --> 00:02:32.286
Like if you had, you know,
10 different chat rooms,

36
00:02:32.286 --> 00:02:36.275
socket.io has the ability to have
the concept of rooms that I'm sticking

37
00:02:36.275 --> 00:02:39.962
this group of users on this room and
this group of users in this room.

38
00:02:39.962 --> 00:02:44.155
They can subscribe to different
channels and different messages and

39
00:02:44.155 --> 00:02:48.851
things like that, like pub sub,
if you've ever heard that concept before,

40
00:02:48.851 --> 00:02:50.816
is like built into socket.io.

41
00:02:50.816 --> 00:02:53.501
pub sub is this idea of Publish and
subscribe, so

42
00:02:53.501 --> 00:02:57.773
it's kind of basically what we were
doing between the client and the server.

43
00:02:57.773 --> 00:03:02.332
They basically have a bunch of clients
that subscribe to like a topics of ideas,

44
00:03:02.332 --> 00:03:06.155
right, so it does a bunch of really
interesting things like that.

45
00:03:06.155 --> 00:03:11.333
Like if I was gonna today go make like
a Google Docs like collaborative editing

46
00:03:11.333 --> 00:03:16.275
environment probably use something
like socket.io because there's so

47
00:03:16.275 --> 00:03:19.476
much functionality that
they built into that.

48
00:03:19.476 --> 00:03:21.270
That would be very useful for

49
00:03:21.270 --> 00:03:24.795
some large scale real skit
like real time application.

50
00:03:24.795 --> 00:03:28.932
Whereas like, if I'm just doing like

51
00:03:28.932 --> 00:03:33.844
a WebSocket to share my if I'm online or
not,

52
00:03:33.844 --> 00:03:40.721
I wouldn't use socket io for
such a small task, I would use Ws.

53
00:03:40.721 --> 00:03:44.369
Actually Ws is so small that they don't
even have a client library you actually

54
00:03:44.369 --> 00:03:47.644
use that new WebSocket thing that
we were using on the client, right?

55
00:03:47.644 --> 00:03:51.062
So that's how minimalistic it is, so,

56
00:03:51.062 --> 00:03:56.195
if you ask me which one I prefer
the answer is just it depends.

57
00:03:56.195 --> 00:04:01.173
Do I have a big project or a small
project, big projects socket.io small

58
00:04:01.173 --> 00:04:05.347
projects Ws are maybe features
a better way of putting that.

59
00:04:05.347 --> 00:04:10.544
What else socket.io does middleware
like you know like with express.js,

60
00:04:10.544 --> 00:04:16.305
you can actually add middleware's in there
to like do things in the middle between of

61
00:04:16.305 --> 00:04:21.519
when you receive a request when you
reply to it socket.io has that built in.

62
00:04:21.519 --> 00:04:25.693
It has great support for sending binary
like large binary objects like photos,

63
00:04:25.693 --> 00:04:27.635
audio video that works really well.

64
00:04:27.635 --> 00:04:32.711
socket.io something cool that
we actually will see with

65
00:04:32.711 --> 00:04:38.640
socket.io It does fall back, so
let's say you connect to a user.

66
00:04:38.640 --> 00:04:42.322
And that user is using, I don't know,
Internet Explorer eight,

67
00:04:42.322 --> 00:04:46.489
where it doesn't support WebSockets,
but it does support long polling.

68
00:04:46.489 --> 00:04:50.723
It'll actually behind the scenes
switch to long polling for you, so

69
00:04:50.723 --> 00:04:53.935
that that user can still
get real time information,

70
00:04:53.935 --> 00:04:58.329
that it it'll just be long polling,
socket.io has an audit built in.

71
00:04:58.329 --> 00:05:01.605
You actually don't have to
change anything about your code,

72
00:05:01.605 --> 00:05:05.133
socket.io has like this cool kind
of establishes a connection and

73
00:05:05.133 --> 00:05:08.859
then makes connections for and
does polling to get that information.

74
00:05:12.033 --> 00:05:17.199
Yeah, socket.io has the ability to
like connect to MongoDB directly so

75
00:05:17.199 --> 00:05:21.949
you can actually do change feed
directly from Mongo, from Redis.

76
00:05:21.949 --> 00:05:25.465
You can get real time change
feeds from Redis or Postgres or

77
00:05:25.465 --> 00:05:30.156
side socket.io has client ID connect
with all these databases, directly.

78
00:05:30.156 --> 00:05:34.251
So that's just some of the difference,
whereas WS is just as WebSockets,

79
00:05:34.251 --> 00:05:36.860
doesn't do anything else, just WebSockets.

