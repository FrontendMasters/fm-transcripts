WEBVTT

1
00:00:00.090 --> 00:00:02.432
So coming here to server.js,

2
00:00:02.432 --> 00:00:06.494
you can see here I have quite
a few more things in here.

3
00:00:06.494 --> 00:00:09.170
And there's just stuff I
didn't want you to write.

4
00:00:09.170 --> 00:00:12.463
We could spend here actually going
through binary piece by piece and

5
00:00:12.463 --> 00:00:14.190
bitwise operators.

6
00:00:14.190 --> 00:00:15.110
I don't think you wanna do that.

7
00:00:15.110 --> 00:00:15.830
I don't wanna do it.

8
00:00:17.240 --> 00:00:20.326
So I kinda wrote some of these things,
we''ll go through the code so

9
00:00:20.326 --> 00:00:22.150
you can understand what's happening.

10
00:00:22.150 --> 00:00:24.932
But for the most part we're just
gonna handle the upgraded experience.

11
00:00:27.446 --> 00:00:31.774
So here in server.js,
a lot of this stuff looks familiar,

12
00:00:31.774 --> 00:00:35.980
nanobuffer, serve-handler,
http, all that stuff.

13
00:00:35.980 --> 00:00:38.410
We could do this over http too,
by the way, we just chose not to,

14
00:00:38.410 --> 00:00:40.435
we're just making it as
simple as possible here, but

15
00:00:40.435 --> 00:00:42.430
there's no reason that
couldn't be done that way.

16
00:00:43.880 --> 00:00:47.440
Connections, we'll do the same thing,
keep tracking connections, get messages.

17
00:00:47.440 --> 00:00:49.250
All this stuff is the same.

18
00:00:49.250 --> 00:00:51.030
This is serving static assets.

19
00:00:51.030 --> 00:00:52.655
This is all fine here.

20
00:00:52.655 --> 00:00:55.205
And then our code is gonna go here.

21
00:01:01.546 --> 00:01:07.545
All right, so we're gonna say server.on,
we're gonna say whenever someone asks for

22
00:01:07.545 --> 00:01:11.530
an upgrade, this is the function
that you're gonna run.

23
00:01:12.670 --> 00:01:16.760
So this function is gonna
take in a req and a socket.

24
00:01:18.840 --> 00:01:21.510
Or we can make this an arrow function
since that's what I've been doing, so

25
00:01:21.510 --> 00:01:22.230
an arrow function.

26
00:01:23.640 --> 00:01:24.480
Either way, it doesn't matter.

27
00:01:28.023 --> 00:01:31.400
So, I guess there are other
things that can be upgraded.

28
00:01:31.400 --> 00:01:34.134
I don't really know what they are,
to be honest with you, but

29
00:01:34.134 --> 00:01:36.830
we're just gonna make sure
that it's a websocket upgrade.

30
00:01:36.830 --> 00:01:43.342
So if (req.headers ['upgrade']
is not equal to 'websocket'),

31
00:01:43.342 --> 00:01:48.178
just give up on it,
basically is what we're gonna do.

32
00:01:48.178 --> 00:01:57.375
I'm gonna say socket.end("HTTP/1.1

33
00:01:57.375 --> 00:02:02.565
400 Bad Request").

34
00:02:02.565 --> 00:02:05.365
So we're just gonna say send back some,
yeah,

35
00:02:05.365 --> 00:02:09.502
we don't speak anything but
websocket basically, and then return.

36
00:02:13.230 --> 00:02:20.382
And then just to show, you're gonna see
a console.log here of upgrade requested.

37
00:02:23.236 --> 00:02:26.690
Okay, so
we're just gonna look now to see what

38
00:02:26.690 --> 00:02:30.950
happens when a browser reaches out and
request upgrade.

39
00:02:32.330 --> 00:02:36.800
So go ahead and
stop your last server here,

40
00:02:36.800 --> 00:02:42.022
I'm gonna go into websockets/exercise-raw.

41
00:02:42.022 --> 00:02:45.350
And we're gonna say npm install
if you haven't already.

42
00:02:45.350 --> 00:02:50.192
And then npm run dev, npm install,
which I think I've done.

43
00:02:52.926 --> 00:02:55.245
You can see here, 183 packages.

44
00:02:55.245 --> 00:02:57.721
And then I'm gonna say npm run start.

45
00:02:59.699 --> 00:03:04.345
So notice again,
we're going back to http not https, right?

46
00:03:04.345 --> 00:03:06.510
So make sure that s is gone.

47
00:03:06.510 --> 00:03:08.349
Click that open here.

48
00:03:08.349 --> 00:03:09.990
I'm just gonna open this.

49
00:03:13.294 --> 00:03:18.214
All right, so, Now if we

50
00:03:18.214 --> 00:03:22.090
go back in over here you can see we're
getting upgrade requests over here, right?

51
00:03:22.090 --> 00:03:24.610
That's coming from that
websocket saying hey,

52
00:03:24.610 --> 00:03:26.580
I would like to do this upgrade thing.

53
00:03:26.580 --> 00:03:28.944
And right now, all were saying
is we're just logging out, and

54
00:03:28.944 --> 00:03:31.093
we're not actually honoring
that upgrade experience.

55
00:03:33.589 --> 00:03:37.300
So you can see here,
the red doesn't even get open here, right?

56
00:03:38.320 --> 00:03:41.614
And you can see here Firefox
eventually gives up, is like yeah,

57
00:03:41.614 --> 00:03:45.579
I tried to upgrade and the server just
never really acknowledged me, right?

58
00:03:47.678 --> 00:03:50.410
So, that's what's happening so
far, this is still right up here.

59
00:03:50.410 --> 00:03:53.991
So we have to go now do something
on the server to deal with that.

60
00:03:58.632 --> 00:04:04.878
So, this one's kind of interesting,
open the parse-message.js,

61
00:04:04.878 --> 00:04:08.740
not parse-message we want, not that one.

62
00:04:10.450 --> 00:04:15.607
We want generate-accept-value,
this one here.

63
00:04:19.360 --> 00:04:24.421
So, the way that we're gonna
do this is we send back

64
00:04:24.421 --> 00:04:29.380
a header and
we kind of sign it with the sha1 hash.

65
00:04:29.380 --> 00:04:35.850
And then we take the key that the browser
sends to us, we add this magic key here.

66
00:04:35.850 --> 00:04:37.560
And believe me, I didn't make this up.

67
00:04:37.560 --> 00:04:42.210
It actually literally has to be this
exact string that you add to it.

68
00:04:42.210 --> 00:04:45.620
And then you put it back into base64 and
send it back.

69
00:04:45.620 --> 00:04:49.442
That's like the magic handshake of okay,

70
00:04:49.442 --> 00:04:55.850
take my key then send it back to
me with this particular magic key.

71
00:04:55.850 --> 00:04:59.182
And that's how we both know we're
both definitely speaking websocket to

72
00:04:59.182 --> 00:04:59.780
each other.

73
00:04:59.780 --> 00:05:02.880
I thought this was hilarious
when I found it on the Internet.

74
00:05:02.880 --> 00:05:04.991
I was like, why this string?

75
00:05:04.991 --> 00:05:08.842
And I actually did try to track down
a reason of why the hell did they choose

76
00:05:08.842 --> 00:05:12.963
this thing, and it's just a randomly
generated string that someone found.

77
00:05:12.963 --> 00:05:16.321
Seems like a really strange way for
people to kind of do this but

78
00:05:16.321 --> 00:05:18.073
this is literally how it works.

79
00:05:18.073 --> 00:05:21.403
You have to generate this header and
send it back, otherwise it will not work.

80
00:05:24.921 --> 00:05:27.976
Yeah, it's literally hard coded in
the websocket spec, I actually went and

81
00:05:27.976 --> 00:05:32.070
found the spec, read through and found it
was like, it must have this special key.

82
00:05:32.070 --> 00:05:33.195
It's true, it doesn't work without it.

83
00:05:35.566 --> 00:05:39.748
So that's what this generateAcceptValue
does is it takes an acceptKey from

84
00:05:39.748 --> 00:05:43.927
the browser, mixes this stuff all
together, it makes the key to send back,

85
00:05:43.927 --> 00:05:47.810
so the browser is like okay,
we're speaking the same language.

86
00:05:49.350 --> 00:05:50.650
So let's go ahead and go do that.

87
00:05:50.650 --> 00:05:53.390
Let's actually go finish
making that connection.

88
00:05:57.020 --> 00:06:02.530
Underneath here we're gonna say

89
00:06:02.530 --> 00:06:08.630
const acceptKey = req.headers and

90
00:06:08.630 --> 00:06:13.352
the header needs to be called

91
00:06:13.352 --> 00:06:17.496
sec-websocket-key.

92
00:06:20.087 --> 00:06:22.033
By the way,
this is definitely not a security thing,

93
00:06:22.033 --> 00:06:24.209
that was kind of the first thing
that occurred to me as well.

94
00:06:24.209 --> 00:06:27.951
I was like, we are doing all these things
for security purposes and in reality,

95
00:06:27.951 --> 00:06:30.080
there's nothing secure about this, right?

96
00:06:30.080 --> 00:06:33.931
It's actually just making sure that both
parties understand that they're speaking

97
00:06:33.931 --> 00:06:34.846
the same protocol.

98
00:06:41.682 --> 00:06:45.299
Const acceptValue = generateAcceptValue,

99
00:06:45.299 --> 00:06:49.478
which I've already imported for
you at the top here.

100
00:06:52.340 --> 00:06:56.387
And then we're just gonna pass in that
acceptKey, and now this acceptValue is

101
00:06:56.387 --> 00:06:59.634
gonna be the correct key that we
have to send back to the client so

102
00:06:59.634 --> 00:07:03.160
that the browser can acknowledge,
cool, we're on the same page.

103
00:07:05.610 --> 00:07:09.790
So now we're gonna generate some
headers to send back to the client.

104
00:07:09.790 --> 00:07:16.211
So const headers =, and it's just gonna
be an array of headers to send back.

105
00:07:16.211 --> 00:07:21.394
So the first thing we're gonna send

106
00:07:21.394 --> 00:07:26.233
back is "HTTP1/1.1 101

107
00:07:26.233 --> 00:07:31.440
Web Socket Protocol Handshake".

108
00:07:31.440 --> 00:07:38.014
That's the first header, the second
one's gonna be "Upgrade: WebSocket".

109
00:07:41.227 --> 00:07:45.736
Then we're gonna send back
"Connection: Upgrade".

110
00:07:48.630 --> 00:07:50.320
And then here I'm gonna use a backtick.

111
00:07:50.320 --> 00:07:53.714
Notice instead of here I'm using double
quotes, here I'm gonna use a backtick,

112
00:07:53.714 --> 00:07:56.090
which is on the tail,
the next to the 1 on your keyboard.

113
00:07:57.820 --> 00:08:03.245
We're gonna say 'Seq-WebSocket-Accept:,

114
00:08:03.245 --> 00:08:11.267
and then we're gonna feed in
that acceptValue, Like that.

115
00:08:11.267 --> 00:08:18.790
And then here we're gonna say
"Seq-WebSocket-Protocol".

116
00:08:20.210 --> 00:08:23.200
So notice that we're just ignoring
what the browser sent to us.

117
00:08:23.200 --> 00:08:27.100
It's like, you remember that list of
things, here's is what you would choose.

118
00:08:27.100 --> 00:08:29.360
We're gonna speak this to each other.

119
00:08:29.360 --> 00:08:31.489
Whether or not they send me
anything that I care about,

120
00:08:31.489 --> 00:08:33.403
I'm just always gonna
send them back JSON here.

121
00:08:33.403 --> 00:08:38.301
You would typically wanna say are they
offering to speak the same text

122
00:08:38.301 --> 00:08:42.000
kind of protocol and try and
choose the correct one?

123
00:08:42.000 --> 00:08:44.434
Here we're just gonna hardcode in,
I don't care what you think,

124
00:08:44.434 --> 00:08:45.617
we're speaking JSON, right?

125
00:08:48.048 --> 00:08:53.670
Okay, and then down here we're gonna add
an extra "\r\n", so some whitespace to

126
00:08:53.670 --> 00:08:59.550
say, browser, this is the end of headers,
everything after this is now data.

127
00:08:59.550 --> 00:09:01.821
So that's what this last line here means.

128
00:09:07.521 --> 00:09:11.716
Okay, and then down here
we're gonna say socket.write.

129
00:09:13.886 --> 00:09:21.227
We're gonna say headers.join, \r\n.

130
00:09:23.665 --> 00:09:24.910
So with quotes around it.

131
00:09:27.704 --> 00:09:31.480
So this is just like an array join, right,
so it's coming out as one large string.

132
00:09:32.670 --> 00:09:37.040
And all of these are separated
by a little bit of whitespace.

133
00:09:37.040 --> 00:09:41.452
And then when you put two of these \r\n's
together, that signifies to the browser,

134
00:09:41.452 --> 00:09:43.272
I'm done sending you headers now.

135
00:09:51.720 --> 00:09:56.545
So this is the magic sacrificial ritual
that one must perform for the browser and

136
00:09:56.545 --> 00:10:01.226
the server to say, cool, we've both
sacrificed the right goats, now we can

137
00:10:01.226 --> 00:10:05.571
speak our secret arcane language of
websockets to each other, right?

138
00:10:07.903 --> 00:10:11.570
And now in theory, we should be
able to refresh the page here.

139
00:10:13.176 --> 00:10:15.970
No, I gotta restart my server, right?

140
00:10:15.970 --> 00:10:18.270
Yeah, I did start, so npm run dev rather.

141
00:10:19.510 --> 00:10:22.006
So don't be like me,
don't say run start, say run dev so

142
00:10:22.006 --> 00:10:24.990
that you get the nice dev
server experience here.

143
00:10:24.990 --> 00:10:27.970
Run dev, refresh that here.

144
00:10:27.970 --> 00:10:31.229
And now notice up here,
this is green, right?

145
00:10:31.229 --> 00:10:35.257
So now we are definitely connected
between server and client.

146
00:10:35.257 --> 00:10:39.283
You can see down here that I got
a connected logged out to my console.

147
00:10:41.369 --> 00:10:42.540
Pretty cool so far, right?

148
00:10:44.290 --> 00:10:47.052
It's like one of those things
where you did some weird thing,

149
00:10:47.052 --> 00:10:49.827
you had to go walk backwards
through something and it worked.

150
00:10:49.827 --> 00:10:52.539
And so, now you get to feel proud of
yourself even though it's kinda strange we

151
00:10:52.539 --> 00:10:54.490
had to do it in the first place.

152
00:10:54.490 --> 00:10:54.990
But we did it.

