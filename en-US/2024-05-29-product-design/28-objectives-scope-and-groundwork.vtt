WEBVTT

1
00:00:00.430 --> 00:00:05.526
But if you have got buy-in, and
if you haven't been told no,

2
00:00:05.526 --> 00:00:11.112
there's not time for it,
you get in some agreement over the purpose

3
00:00:11.112 --> 00:00:18.180
of your design system is really important,
so what's the main aim of doing it?

4
00:00:18.180 --> 00:00:22.195
Sometimes people create design systems
cuz they wanna unify their brand and

5
00:00:22.195 --> 00:00:25.897
they know that different sites has
ended up with different styling and

6
00:00:25.897 --> 00:00:28.066
there's a lot of inconsistency.

7
00:00:28.066 --> 00:00:32.287
Sometimes it's more about
streamlining development, in which

8
00:00:32.287 --> 00:00:37.466
case you wanna know that up front because
that then needs to be the priority.

9
00:00:37.466 --> 00:00:40.490
So just a little bit of
kind of definition, okay,

10
00:00:40.490 --> 00:00:42.655
what are we trying to achieve here?

11
00:00:42.655 --> 00:00:46.385
So we're not just jumping in and
trying to do everything at once.

12
00:00:46.385 --> 00:00:49.240
So it might be that you focus
initially on, well, okay,

13
00:00:49.240 --> 00:00:52.581
let's just get everything working
with the developers, right?

14
00:00:52.581 --> 00:00:57.696
So they can log into Figma and go,
look, that's the so-and-so component,

15
00:00:57.696 --> 00:01:00.560
here's my code for that,
I'll drop that in.

16
00:01:00.560 --> 00:01:02.376
If that's the initial aim,

17
00:01:02.376 --> 00:01:07.684
then you don't worry that the design isn't
up to scratch or exactly what you want.

18
00:01:07.684 --> 00:01:10.710
You get that working first, and
then you can go back in and

19
00:01:10.710 --> 00:01:13.183
visually change the components afterwards.

20
00:01:13.183 --> 00:01:18.619
So knowing your purpose is really good,
which kind of comes on to scope really.

21
00:01:18.619 --> 00:01:23.636
You also, I mean, this kind of one hand
scope is like, well, do we care about

22
00:01:23.636 --> 00:01:28.364
sorting out the branding or is it
just getting working the development?

23
00:01:28.364 --> 00:01:32.524
But the other aspect of scope is,
are we trying to work this for

24
00:01:32.524 --> 00:01:36.144
just a single project or
all projects, right?

25
00:01:36.144 --> 00:01:40.465
So, especially if you work for
a large organization like a bank, ideally,

26
00:01:40.465 --> 00:01:44.852
you'd like a design system that's
a universal design system that can be used

27
00:01:44.852 --> 00:01:48.970
on everything from your native apps
all the way through to your website,

28
00:01:48.970 --> 00:01:51.530
to your portals, to everything else.

29
00:01:51.530 --> 00:01:54.528
Truth is,
that's probably quite ambitious and

30
00:01:54.528 --> 00:01:57.610
will get bogged down and
take forever to do.

31
00:01:57.610 --> 00:02:02.846
Most situations I recommend, look,
just start small, yeah, just do it for

32
00:02:02.846 --> 00:02:08.099
the native mobile app, maybe even the iOS
app and not the Android app as well.

33
00:02:08.099 --> 00:02:12.799
And you can get more ambitious over time,
but until it gets really well established,

34
00:02:12.799 --> 00:02:16.645
if you let it bloat,
it's like any project, isn't it?

35
00:02:16.645 --> 00:02:19.319
If you let the project bloat,
the bigger it becomes,

36
00:02:19.319 --> 00:02:23.060
the slower it moves to the point
where nothing ever happens, right?

37
00:02:23.060 --> 00:02:26.300
You wanna keep it focused and
keep the scope down.

38
00:02:27.300 --> 00:02:28.860
And also, what's your goal?

39
00:02:28.860 --> 00:02:32.280
Define what success looks like,
is it a faster death cycle,

40
00:02:32.280 --> 00:02:35.713
improved user experience,
increased brand consistency?

41
00:02:35.713 --> 00:02:37.790
Where are you going there?

42
00:02:37.790 --> 00:02:41.303
There's a few questions to ask up front
before you star any work on a design

43
00:02:41.303 --> 00:02:43.741
system, nothing particularly complicated,
but

44
00:02:43.741 --> 00:02:48.082
it's all things worth considering before
you get to kind of pulled in two things.

45
00:02:48.082 --> 00:02:54.704
One is accessibility, how does your design
system ensure accessibility for all users?

46
00:02:54.704 --> 00:02:58.095
You need to agree on aspects that you are
gonna support, you're not gonna support,

47
00:02:58.095 --> 00:02:59.497
do you care about color contrast?

48
00:02:59.497 --> 00:03:01.118
Do you care about keyboard navigation?

49
00:03:01.118 --> 00:03:03.184
Do you care about screen reader support?

50
00:03:03.184 --> 00:03:07.504
It's really useful to know that up front,
so you can build it in from day one.

51
00:03:07.504 --> 00:03:11.186
I'm not making any judgments about whether
you should be including those things, but

52
00:03:11.186 --> 00:03:13.362
you should absolutely be
including those things.

53
00:03:15.553 --> 00:03:19.287
Second, versioning is a big one.

54
00:03:19.287 --> 00:03:22.897
This is a bit dull and a bit boring,
but it's worth talking about.

55
00:03:22.897 --> 00:03:27.327
What's your strategy for managing updates
and changes to your design system?

56
00:03:27.327 --> 00:03:31.267
How are you gonna track
a component's evolution, right?

57
00:03:31.267 --> 00:03:36.803
And let's say you've got a version
of a component on your website,

58
00:03:36.803 --> 00:03:41.287
or your web app, and
you've updated that component.

59
00:03:41.287 --> 00:03:44.874
Do you want to keep the legacy
components are already on the web app?

60
00:03:44.874 --> 00:03:50.569
Or are you gonna replace all of them
in one go to be the new version?

61
00:03:50.569 --> 00:03:52.779
And what the consequences of doing that.

62
00:03:52.779 --> 00:03:55.557
So there's some thinking
through to do there about,

63
00:03:55.557 --> 00:04:00.085
whether you're gonna have multiple
versions of a component available.

64
00:04:00.085 --> 00:04:03.673
Or whether you're always just gonna go
with the latest version of a component and

65
00:04:03.673 --> 00:04:04.579
that kind of stuff.

66
00:04:04.579 --> 00:04:08.906
Now that can all be managed with Figma
has got version control built in,

67
00:04:08.906 --> 00:04:09.928
which is great.

68
00:04:09.928 --> 00:04:13.298
And also I'll talk about some other
tools that bring together design and

69
00:04:13.298 --> 00:04:16.073
development later that can help
manage that kind of thing.

70
00:04:16.073 --> 00:04:17.572
But you need a conversation about it,
yeah.

71
00:04:17.572 --> 00:04:19.573
&gt;&gt; Yeah, for mobile, it's very sensitive.

72
00:04:19.573 --> 00:04:23.989
Because if there's users who have not
decided to update their mobile app and

73
00:04:23.989 --> 00:04:26.831
they're pointing to older
versions of the API.

74
00:04:26.831 --> 00:04:29.434
&gt;&gt; Yeah.
&gt;&gt; And we don't wanna break them, so

75
00:04:29.434 --> 00:04:31.930
we are very, very sensitive to that.

76
00:04:31.930 --> 00:04:36.110
&gt;&gt; Yeah, but some some organizations
take the opposite with that,

77
00:04:36.110 --> 00:04:38.760
where they force people to upgrade.

78
00:04:38.760 --> 00:04:41.080
So they'll log into the app,
and it'll say, sorry,

79
00:04:41.080 --> 00:04:43.639
you can't use this app
until you've upgraded it.

80
00:04:43.639 --> 00:04:45.732
I'm not saying that's right, but

81
00:04:45.732 --> 00:04:48.813
that's the kind of
conversations you need to have.

82
00:04:48.813 --> 00:04:50.672
&gt;&gt; Well, and
the problem with that, though,

83
00:04:50.672 --> 00:04:54.157
is that people might have older phones-
&gt;&gt; That can't upgrade, yeah, yeah.

84
00:04:54.157 --> 00:04:56.186
&gt;&gt; So we can't force them.

85
00:04:56.186 --> 00:05:01.012
&gt;&gt; No, so the other thing is about
responsiveness versus how responsive

86
00:05:01.012 --> 00:05:03.219
you want your components to be,

87
00:05:03.219 --> 00:05:07.583
cuz obviously they could be
placed anywhere on the interface.

88
00:05:07.583 --> 00:05:10.287
So if you've got multiple column design,

89
00:05:10.287 --> 00:05:15.092
some columns might be narrower than
others, the whole design the expand and

90
00:05:15.092 --> 00:05:19.613
contracts or all of those components,
are they gonna work at any size?

91
00:05:19.613 --> 00:05:23.774
What's the minimum size you
expect them to work at?

92
00:05:23.774 --> 00:05:26.073
What's the maximum size you
expect them to work at?

93
00:05:26.073 --> 00:05:30.855
Should they work in every column type
that you've got in your layout, etc?

94
00:05:30.855 --> 00:05:32.703
And then the final one is dark mode.

95
00:05:32.703 --> 00:05:37.328
And I don't just mean the whole interface
changing to dark, but what if one of

96
00:05:37.328 --> 00:05:41.690
your components is put in a side menu
that's got a dark background to it?

97
00:05:41.690 --> 00:05:43.450
Can the component deal with that?

98
00:05:43.450 --> 00:05:45.480
Is that allowed?

99
00:05:45.480 --> 00:05:49.432
There's those kinds of things that
need to be considered as well.

100
00:05:49.432 --> 00:05:52.786
So those are the big questions I tend to
have knocking around, yeah, go for it.

101
00:05:52.786 --> 00:05:57.212
&gt;&gt; So on the versioning,
do some sort of rules or

102
00:05:57.212 --> 00:06:05.262
agreements about how to name files are how
changes that occur on a Figma document.

103
00:06:05.262 --> 00:06:05.900
&gt;&gt; Yeah.

104
00:06:05.900 --> 00:06:08.782
&gt;&gt; Are those sorts of things does
that fall under this category?

105
00:06:08.782 --> 00:06:14.342
&gt;&gt; Yeah, I mean, again, it's one of those
situations where you can over engineer and

106
00:06:14.342 --> 00:06:19.196
you can fret too much about all of that
kind of stuff which you don't need to

107
00:06:19.196 --> 00:06:21.259
worry about in the early days.

108
00:06:21.259 --> 00:06:25.432
Cuz you'll only have one version to begin
with, but it's at least having a kind

109
00:06:25.432 --> 00:06:28.957
of sense of, well,
how are we going to deal with versioning?

110
00:06:28.957 --> 00:06:35.820
Have the development team want to handle
having multiple versions of a component?

111
00:06:35.820 --> 00:06:37.679
And then, how are we going to track that?

112
00:06:37.679 --> 00:06:41.998
And then, once you've gone have got that
agreement, then that goes on to, okay,

113
00:06:41.998 --> 00:06:43.797
well, how are we gonna name this?

114
00:06:43.797 --> 00:06:47.119
What version numbers are we gonna use,
and things like that.

115
00:06:47.119 --> 00:06:48.829
But that can come a little bit later.

116
00:06:50.539 --> 00:06:55.060
So, normally,
after I've kind of got a rough idea in my

117
00:06:55.060 --> 00:06:59.776
head of what my answers to
these different questions are,

118
00:06:59.776 --> 00:07:07.517
if there's an existing app out there, and
I do want to run a design systems project.

119
00:07:07.517 --> 00:07:11.653
Even though earlier I said, well, maybe
we wanna do it behind the scenes, but

120
00:07:11.653 --> 00:07:13.971
if we do wanna do it properly, then, yeah,

121
00:07:13.971 --> 00:07:17.127
you start by auditing your existing app,
right?

122
00:07:17.127 --> 00:07:21.518
Review your current design and
code assets, understand all the elements,

123
00:07:21.518 --> 00:07:24.948
colors, typography,
UI components, the whole lot, and

124
00:07:24.948 --> 00:07:27.362
how they're being used across the site.

125
00:07:27.362 --> 00:07:31.297
But also pay attention to gaps and
inconsistencies, so

126
00:07:31.297 --> 00:07:37.403
identify discrepancies in the current
design because there will be a lot, right?

127
00:07:37.403 --> 00:07:43.810
Here's an example, this is just some
stuff I grabbed from one that I reviewed.

128
00:07:43.810 --> 00:07:48.476
And there were numerous different
ways of showing filters and

129
00:07:48.476 --> 00:07:53.820
columns, sometimes buttons had icons,
sometimes it didn't.

130
00:07:53.820 --> 00:07:58.705
Sometimes buttons were joined
together in bars other times they

131
00:07:58.705 --> 00:08:03.232
had separates between them,
all of those kinds of things.

132
00:08:03.232 --> 00:08:08.369
So, all of that needs to be identified and
listed.

133
00:08:08.369 --> 00:08:12.529
All of those different versions
of them need to be sought out so

134
00:08:12.529 --> 00:08:16.936
that you can decide, well,
what you're gonna standardize on.

135
00:08:16.936 --> 00:08:20.257
So it does take a while to go
through all of that thing, but

136
00:08:20.257 --> 00:08:23.302
not as long as you think you
can usually do it in a day,

137
00:08:23.302 --> 00:08:26.852
depending on how less if it's
not a particularly big thing.

138
00:08:26.852 --> 00:08:30.997
And all I do is, I literally go through
every screen, and I do screen grabs, okay,

139
00:08:30.997 --> 00:08:34.198
of all the different components and
elements on the screen, and

140
00:08:34.198 --> 00:08:35.638
then I start keeping a list.

141
00:08:35.638 --> 00:08:39.142
And when that element appears on
a second screen, but looks different,

142
00:08:39.142 --> 00:08:41.381
I group it with the first one, right?

143
00:08:41.381 --> 00:08:42.046
So buttons,

144
00:08:42.046 --> 00:08:45.951
here's all the different styles of
buttons that I found across the site.

145
00:08:45.951 --> 00:08:47.321
It's as simple as that really.

146
00:08:48.581 --> 00:08:54.489
You can of course build as you go,
which is what I was talking about earlier.

147
00:08:54.489 --> 00:08:57.511
That said, there are some drawbacks to it,

148
00:08:57.511 --> 00:09:03.077
building components in isolation is quite
hard, so I don't tend to do that way.

149
00:09:03.077 --> 00:09:04.663
Sometimes people go, right,

150
00:09:04.663 --> 00:09:08.695
we've got a new product we're building,
let's start with a design system.

151
00:09:08.695 --> 00:09:12.151
And the designer is expected
to sit down and go, okay,

152
00:09:12.151 --> 00:09:15.095
what is an input box look like on this?

153
00:09:15.095 --> 00:09:16.534
Well, I don't really know,

154
00:09:16.534 --> 00:09:20.015
it depends on the context of
how it appears within a page.

155
00:09:20.015 --> 00:09:22.919
Like I said,
designers think holistically about stuff.

156
00:09:22.919 --> 00:09:28.211
So I would advise instead of mocking up
a whole page and then breaking it down

157
00:09:28.211 --> 00:09:34.004
into components rather than going,
okay, now I'm gonna style a button.

158
00:09:34.004 --> 00:09:40.407
Okay, but let's say everything
else around it looked like.

159
00:09:40.407 --> 00:09:44.709
Be focused, so by only building the,
this is an advantage that,

160
00:09:44.709 --> 00:09:49.329
if you're only building the components
that you actually need rather

161
00:09:49.329 --> 00:09:53.340
than the components that currently exist,
that's great.

162
00:09:53.340 --> 00:09:57.683
Because you can keep your design
system focused and streamlined, and

163
00:09:57.683 --> 00:10:00.193
not including stuff that isn't there.

164
00:10:00.193 --> 00:10:02.861
And of course, all of this means
it's faster and cheaper to produce.

165
00:10:02.861 --> 00:10:07.118
So there's a lot going for building as
you go or building for a new service, but

166
00:10:07.118 --> 00:10:10.280
don't think you're gonna just,
if it's a new service,

167
00:10:10.280 --> 00:10:14.301
you're gonna sit down and
build those components individually, yeah.

168
00:10:15.441 --> 00:10:18.153
&gt;&gt; Is what you're describing,

169
00:10:18.153 --> 00:10:23.689
the user interface designer
doing their own design system.

170
00:10:25.602 --> 00:10:29.232
&gt;&gt; I'm not quite sure, yes and no, right?

171
00:10:29.232 --> 00:10:33.117
&gt;&gt; So when you say for example,
you're doing a design system for a button.

172
00:10:33.117 --> 00:10:33.912
&gt;&gt; Yes.

173
00:10:33.912 --> 00:10:36.657
&gt;&gt; But
then my designer might be like this,

174
00:10:36.657 --> 00:10:41.764
I don't know what the designer is
thinking in terms of their button style.

175
00:10:41.764 --> 00:10:43.090
&gt;&gt; Yeah, so-
&gt;&gt; Colors and

176
00:10:43.090 --> 00:10:46.126
their fonts-
&gt;&gt; What I'm saying it's that designer that

177
00:10:46.126 --> 00:10:50.342
should be creating the design system
in conjunction with the developer to

178
00:10:50.342 --> 00:10:53.786
make sure that they're not
doing anything stupid.

179
00:10:53.786 --> 00:11:00.058
[LAUGH] So but it would mainly be, yes,
that the UI designer would sit down and

180
00:11:00.058 --> 00:11:05.056
go through and create the button,
the links, link colors,

181
00:11:05.056 --> 00:11:08.621
the input fields, all of those things.

182
00:11:08.621 --> 00:11:13.466
But what I'm saying is, is that them doing
that just on each individual component by

183
00:11:13.466 --> 00:11:17.696
itself messes with your head, you got
to think in terms of whole screens,

184
00:11:17.696 --> 00:11:21.274
otherwise, it's gonna throw
you a little bit, make sense?

185
00:11:21.274 --> 00:11:25.904
&gt;&gt; But isn't there some In terms of
role of somebody just being a design

186
00:11:25.904 --> 00:11:27.131
systems person?

187
00:11:27.131 --> 00:11:28.158
&gt;&gt; I would say no.

188
00:11:29.308 --> 00:11:33.643
I think it's good to have somebody that
owns the design system, right, and

189
00:11:33.643 --> 00:11:35.988
is ultimately responsible for it.

190
00:11:35.988 --> 00:11:40.058
But basically,
certainly from the design perspective,

191
00:11:40.058 --> 00:11:43.256
that is gonna be a UI designer, right?

192
00:11:43.256 --> 00:11:47.569
So let's say you had it there,
and even then, I would say,

193
00:11:47.569 --> 00:11:52.920
let's say you work in an organization
where you've got, I don't know,

194
00:11:52.920 --> 00:11:59.066
five different UI designers spread
across different departments, right?

195
00:11:59.066 --> 00:12:03.185
Not uncommon,
I would suggest that, together,

196
00:12:03.185 --> 00:12:07.410
they could create the design
system between them.

197
00:12:07.410 --> 00:12:13.147
One person ultimately owns it just so that
you've got one person that's accountable,

198
00:12:13.147 --> 00:12:17.349
but anybody can put forward and
submit a new component, right?

199
00:12:17.349 --> 00:12:21.932
So if they're working on something and go,
we've got no component for that, right?

200
00:12:21.932 --> 00:12:26.176
That I want to do, that's fine,
they can create a new one, right?

201
00:12:26.176 --> 00:12:29.613
Or they might go, this component's
no longer fit for purpose for

202
00:12:29.613 --> 00:12:32.326
whatever reason,
then they can create a new one.

203
00:12:32.326 --> 00:12:34.788
And I'll come on to a minute
about how to manage that,

204
00:12:34.788 --> 00:12:38.106
because obviously you can
imagine chaos ensuing [LAUGH].

205
00:12:38.106 --> 00:12:39.556
So I will touch on that in a minute.

