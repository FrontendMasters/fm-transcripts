WEBVTT

1
00:00:00.070 --> 00:00:04.168
The last thing I want you
to say about prototyping is

2
00:00:04.168 --> 00:00:07.897
building prototypes ready for development.

3
00:00:08.957 --> 00:00:14.429
Coz I see as somebody that has
a background in development

4
00:00:14.429 --> 00:00:19.787
if you go fight back far enough
I I look at some of the stuff

5
00:00:19.787 --> 00:00:26.639
that's handed to developers by
designers and it makes me want to weep.

6
00:00:27.949 --> 00:00:32.864
I feel so sorry for developers
with the appalling stuff that you

7
00:00:32.864 --> 00:00:36.719
guys get given by designers sometimes.

8
00:00:36.719 --> 00:00:41.322
And we end up making life so
much more difficult for

9
00:00:41.322 --> 00:00:46.583
developers, and
it's because a lot of designers don't

10
00:00:46.583 --> 00:00:52.059
understand the basics of
how web pages are built.

11
00:00:52.059 --> 00:00:56.847
So I want to give a little bit of advice
about that, about how you can prepare

12
00:00:56.847 --> 00:01:01.868
your Figma files in a great Way that's
going to help developers a lot.

13
00:01:01.868 --> 00:01:07.503
Again, Steve will go into this more, I'm
sure, in his Figma for Developers course.

14
00:01:07.503 --> 00:01:12.480
But I'm talking more to designers in
this situation that don't use Figma

15
00:01:12.480 --> 00:01:17.678
as well as it should be used for
developers, so I'm advocating for them.

16
00:01:17.678 --> 00:01:22.873
So the first thing is always use
AutoLayout, right, seriously,

17
00:01:22.873 --> 00:01:28.041
guys, that is, AutoLayout is
how websites are built, right.

18
00:01:28.041 --> 00:01:32.107
They're built using the CSS box model,
so they have padding,

19
00:01:32.107 --> 00:01:35.252
they have margin,
they have gaps between them,

20
00:01:35.252 --> 00:01:39.797
they're left aligned, right aligned,
vertical aligned, etc.

21
00:01:39.797 --> 00:01:45.091
So the minute you start dragging elements
around, just dropping them on the screen,

22
00:01:45.091 --> 00:01:50.437
you're instantly breaking the fundamental
way that websites are built.

23
00:01:50.437 --> 00:01:54.499
So in my designs,
if you look at my Figma files,

24
00:01:54.499 --> 00:01:59.589
there is nothing that is not
in auto layout format, right.

25
00:01:59.589 --> 00:02:04.810
And everything is grouped within,
if I have multiple columns,

26
00:02:04.810 --> 00:02:08.398
those multiple columns are an AutoLayout.

27
00:02:08.398 --> 00:02:12.088
And if I have components inside
of one of those columns,

28
00:02:12.088 --> 00:02:16.518
that's all auto layout, etc,
all the way down, right?

29
00:02:16.518 --> 00:02:17.298
Yes?

30
00:02:17.298 --> 00:02:19.412
&gt;&gt; How do you approach the layers naming?

31
00:02:19.412 --> 00:02:22.072
Because I was utterly out as well, a lot.

32
00:02:22.072 --> 00:02:23.482
&gt;&gt; Yeah.

33
00:02:23.482 --> 00:02:27.552
&gt;&gt; But you have to be careful when you're
building a more complex components.

34
00:02:27.552 --> 00:02:29.646
&gt;&gt; Yeah.
&gt;&gt; How do you approach the hierarchy of

35
00:02:29.646 --> 00:02:30.562
the naming?

36
00:02:30.562 --> 00:02:34.014
&gt;&gt; Now that's really interesting
because that is very much personal

37
00:02:34.014 --> 00:02:35.192
preference, right.

38
00:02:36.632 --> 00:02:41.816
And I would suggest you agree something
with your developer over that.

39
00:02:41.816 --> 00:02:46.528
If you don't have regular, if you
don't know the developer like I don't

40
00:02:46.528 --> 00:02:50.860
in most situations because I'm
an outside consultant working with

41
00:02:50.860 --> 00:02:55.596
an in-house development team,
I mark it up as if it's HTML, right.

42
00:02:55.596 --> 00:02:59.964
So my layers, I will call div and
sometimes dot, whatever,

43
00:02:59.964 --> 00:03:03.732
a class name or whatever,
or section, or heading,

44
00:03:03.732 --> 00:03:09.069
I will mark it up like it's HTML because
I like to suck up to developers.

45
00:03:09.069 --> 00:03:16.379
So, but that's how I do it, but
the key is consistency, isn't it?

46
00:03:16.379 --> 00:03:22.007
And not having unnamed layer one, unnamed
layer two, unnamed lead three, etc.

47
00:03:22.007 --> 00:03:27.047
That's the biggest key, I think, but also
having everything in AutoLayout because

48
00:03:27.047 --> 00:03:32.087
AutoLayout doesn't just help the
developer, it will also help you, right.

49
00:03:32.087 --> 00:03:36.861
Because a common scenario is somebody
comes back and says, we want that up

50
00:03:36.861 --> 00:03:42.720
there, now if you haven't used AutoLayout,
you have to shift everything down, right.

51
00:03:42.720 --> 00:03:45.740
Move everything down and move
the element up and rearrange everything.

52
00:03:45.740 --> 00:03:49.541
With AutoLayout, you just drag
it from one place to another and

53
00:03:49.541 --> 00:03:52.060
everything reformats by magic, right.

54
00:03:53.220 --> 00:03:58.863
Also with AutoLayout pay attention,
my cursor won't actually show,

55
00:03:58.863 --> 00:04:02.633
but if you see that
there's three icons there.

56
00:04:02.633 --> 00:04:07.663
There's a down arrow, a right arrow, and a
circular arrow, or a back on itself arrow.

57
00:04:07.663 --> 00:04:12.746
That back on itself arrow is under,
people underestimate and

58
00:04:12.746 --> 00:04:16.623
they don't use it, that's a wrap arrow.

59
00:04:16.623 --> 00:04:20.092
And that will mean that as you
reduce the width of things,

60
00:04:20.092 --> 00:04:22.190
because everything can be fluid,

61
00:04:22.190 --> 00:04:27.483
it will wrap a column underneath itself
just like it would in the browser, right.

62
00:04:27.483 --> 00:04:32.444
And that means that you can create
almost fully responsive websites

63
00:04:32.444 --> 00:04:35.193
within a web apps within Figma.

64
00:04:35.193 --> 00:04:39.394
I say almost, because you can't have
breakpoints in Figma yet, right,

65
00:04:39.394 --> 00:04:44.210
where suddenly everything reformats and
repositions, which is really annoying,

66
00:04:44.210 --> 00:04:45.932
but you take what you can get.

67
00:04:47.392 --> 00:04:51.282
So really, really use AutoLayout,
can't say that strongly enough.

68
00:04:51.282 --> 00:04:54.354
The other little bug bit, I feel like
I'm channeling every developer I've ever

69
00:04:54.354 --> 00:04:55.992
met at this point, but we'll keep going.

70
00:04:57.662 --> 00:05:02.166
Think about your states,
guys coz otherwise developers will

71
00:05:02.166 --> 00:05:06.928
make something up and I swear they
make it up terribly on purpose,

72
00:05:06.928 --> 00:05:10.930
just to punish us for
not thinking about it ourselves.

73
00:05:12.200 --> 00:05:18.040
So, think about hover states,
active states, all of that kind of stuff.

74
00:05:18.040 --> 00:05:23.914
And if you don't know what state you need
then either learn some HTML, or go and

75
00:05:23.914 --> 00:05:29.882
talk to your developer and they'll gladly
tell you what you can do your states.

76
00:05:29.882 --> 00:05:34.820
And, so build those in components And so
that the developer can just go and see,

77
00:05:34.820 --> 00:05:38.888
you can select the element and
on that right-hand side in Figma.

78
00:05:38.888 --> 00:05:42.669
It'll be able to see all
the different states that it's in or

79
00:05:42.669 --> 00:05:47.720
go to the component and see all
the different states that are available.

80
00:05:47.720 --> 00:05:52.980
Really worth the effort, so
I highly recommend that.

81
00:05:52.980 --> 00:05:57.943
This is a bit of an optional one, but
if you can include your animations

82
00:05:57.943 --> 00:06:02.502
to take the time to demonstrate
how your animations would work.

83
00:06:02.502 --> 00:06:06.706
So that the developer can simply
copy what's there, really,

84
00:06:06.706 --> 00:06:09.573
and even generate some pretty ropey code.

85
00:06:09.573 --> 00:06:13.073
But it is a starting point
they can mess around with, and

86
00:06:13.073 --> 00:06:15.393
if you want it to ease in and ease out.

87
00:06:15.393 --> 00:06:17.616
And if you want it over so
many milliseconds,

88
00:06:17.616 --> 00:06:20.892
if you care about that kind of stuff,
take the time to do it.

89
00:06:20.892 --> 00:06:24.162
Otherwise, the developer is gonna
have to make a decision over it, and

90
00:06:24.162 --> 00:06:25.042
they don't mind.

91
00:06:25.042 --> 00:06:28.006
In most cases, it's not that big
a deal that they decide, but

92
00:06:28.006 --> 00:06:31.370
you just won't get to, and
then you don't get to complain afterwards

93
00:06:31.370 --> 00:06:34.522
if it's not exactly like you want,
that's my attitude anyway.

94
00:06:35.882 --> 00:06:41.920
I'm hoping I can hear developers
cheering everywhere my supporting them.

95
00:06:41.920 --> 00:06:44.720
Am I getting this,
am I doing good all right so far?

96
00:06:44.720 --> 00:06:45.270
Yes?

97
00:06:45.270 --> 00:06:48.240
&gt;&gt; So I can
&gt;&gt; Comes in the designer at this point.

98
00:06:48.240 --> 00:06:52.666
&gt;&gt; Yeah [LAUGH] Because where I worked,
we did all that in a spec sheet.

99
00:06:52.666 --> 00:06:57.634
&gt;&gt; Yes, and I understand that, that
that was the old school way of doing it,

100
00:06:57.634 --> 00:07:02.684
and there was a time before these these
applications had all this built in,

101
00:07:02.684 --> 00:07:06.077
where that was the only way
you really could do it.

102
00:07:06.077 --> 00:07:10.182
But these days you it's all built
into Figma so just use it for

103
00:07:10.182 --> 00:07:14.609
crying out loud and and talking of
that there you know there will be

104
00:07:14.609 --> 00:07:19.623
occasions when you can't create
something or you can't get it working.

105
00:07:19.623 --> 00:07:22.841
Right or whatever, and
you get into the point of going, well,

106
00:07:22.841 --> 00:07:27.313
I can't spend too much longer trying to
get this stupid modal to appear, right?

107
00:07:27.313 --> 00:07:31.223
So just put a comment in,
great commenting built into Figma.

108
00:07:31.223 --> 00:07:34.674
So use your comments to explain to your
developer how you want the interface

109
00:07:34.674 --> 00:07:35.233
to behave.

110
00:07:35.233 --> 00:07:41.318
And it's all there, nicely packaged up for
them together And it works a treat.

111
00:07:41.318 --> 00:07:43.938
And they can see exactly the element
that they wanna change, etc.

112
00:07:43.938 --> 00:07:45.598
&gt;&gt; They don't have to go
to two different sorts.

113
00:07:45.598 --> 00:07:50.959
&gt;&gt; Exactly, yeah, it's about being
polite [LAUGH] And handing over

114
00:07:50.959 --> 00:07:56.998
a quality product to the people that
have got to make the thing work.

115
00:07:56.998 --> 00:08:00.756
And there is so much complexity
in development, and there's so

116
00:08:00.756 --> 00:08:05.024
much that they have to do that you
don't wanna put any more on them.

117
00:08:05.024 --> 00:08:10.574
Their developers' jobs are pretty sucky,
in my humble opinion a lot of the time.

118
00:08:10.574 --> 00:08:14.234
They do have the advantage that nobody
ever cares what their code's like.

119
00:08:14.234 --> 00:08:16.607
well, everybody cares what
our design works like, so

120
00:08:16.607 --> 00:08:18.164
they get off light on that at least.

121
00:08:19.704 --> 00:08:21.117
Yes?
One more Two,

122
00:08:21.117 --> 00:08:25.177
I think one thing that I personally
appreciate is having color codes in HSL as

123
00:08:25.177 --> 00:08:29.066
a means of just kind of translating
things more closely to a color wheel.

124
00:08:29.066 --> 00:08:32.004
And I think I learned
that from Sarah Drasner,

125
00:08:32.004 --> 00:08:36.536
who's here last time was just like hex and
RGB are just so intuitive from

126
00:08:36.536 --> 00:08:37.236
&gt;&gt; Right, okay.

127
00:08:37.236 --> 00:08:39.674
&gt;&gt; Okay, colors, but
HSL is nice cuz it just does,

128
00:08:39.674 --> 00:08:43.390
translates better to a color wheel,
it's a lot easier to understand.

129
00:08:43.390 --> 00:08:48.284
&gt;&gt; Yeah, see, I always because I'm old
is always hex values for me, but no,

130
00:08:48.284 --> 00:08:53.120
I see where you're coming from,
makes sense, okay, I can accept that.

131
00:08:54.180 --> 00:08:58.920
I'll add that to the presentation in
future, so let's let's wrap that up then.

132
00:08:58.920 --> 00:09:02.931
So basically when it comes to product
typing, this is going to Schottky.

133
00:09:02.931 --> 00:09:06.511
Prototyping is a powerful tool for
both testing and communication.

134
00:09:06.511 --> 00:09:11.043
You have learned something new today,
I bet you didn't know that coming in.

135
00:09:11.043 --> 00:09:15.983
However, it does the careful planning the
correct choice to the client right kind

136
00:09:15.983 --> 00:09:20.721
of prototype at the right time, and
how much depth to go into your prototype.

137
00:09:20.721 --> 00:09:24.355
If you do need to reach a point of
going I'm overworking this now?

138
00:09:24.355 --> 00:09:28.001
[LAUGH] Let's just move on.

139
00:09:28.001 --> 00:09:34.571
So yeah, and then I want to rattle through
fairly fast testing your prototype.

140
00:09:34.571 --> 00:09:39.165
Obviously I carried carry this cover this
in a lot more detail in the cold side did

141
00:09:39.165 --> 00:09:43.086
on research into testing, but
we will just touch on it here as well.

