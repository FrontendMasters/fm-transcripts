[00:00:00]
>> We talked about prototyping. I've had a bit of a rant about how people organize their Figma files that out of the way. Let's talk about testing for a little bit. Now, I will say I'm now trying to cram a four-hour workshop into one small section, so I would encourage you to go away and watch the other workshop.

[00:00:18]
But I will kinda briefly touch on the role of testing in product design and how it kinda fits in with prototypes and what kind of testing you can do at different stages. Very briefly, obviously, testing is essential to product design. It would be madness not to test your product if you need to justify it to anybody who doesn't know better.

[00:00:42]
After you've given them a good slapping, you can tell them that it leads to better products. It's useful in resolving arguments, and ultimately, it's gonna save you money. So it's a kinda no brainer really, but you have to say these things. I personally, a fan have lots of lightweight testing.

[00:01:03]
I'm not a fan of what often happens, especially in larger, more traditional organizations where all the testing is saved up to the end. That seems like madness to me, because the end is the most expensive time to test. Because if you find anything, well, you've already built everything, so the cost of changing it is gonna, be really high.

[00:01:26]
And also, if you test a little and often and early, you tend to uncover more things. Steve Crew covered this in his book, Don't Make Me Think, from where this illustration comes that basically. The crux of the matter is that if you just do one round of testing, people get stuck, and then they don't see problems deeper in the app because they never get any further.

[00:01:53]
Well, if you do multiple rounds of testing, then it gets a lot easier. So do lots of lightweight testing is my advice, test early is my advice. Leaving testing to the end of the project is pointless, really, as I just said. In terms of opportunities to test, I think the further you get in the development cycle, the higher the costs become.

[00:02:18]
So testing in the design phase obviously makes a lot of sense. As I said earlier, I don't test paper prototypes, cuz I don't think they're very good for testing. I know other people would disagree with me and think that you should be testing with paper prototypes. If you've managed to get it to work good on you, you're a better designer than I am.

[00:02:41]
And I haven't managed to do that particularly successfully, but I do test wireframes quite a lot. And also test mockups, even mockups of single pages, single screens, and an app. I think there's definitely room for mocking up those, and then obviously full blown prototypes I definitely test. Then once we move into the build phase, I will do a bit of testing at this stage, especially if things have been changed from the prototype tend to focus on navigation at this point, functionality as well.

[00:03:13]
The key things, can people find stuff? Are they successfully finding their way around it? So I'll do a little bit at that stage. And then post-launch, I tend to do quite a lot. Even though the cost is higher for change at this point, there are a lots of opportunities to make small changes that aren't necessarily that expensive to do.

[00:03:38]
And so I look for things like exit point where people are abandoning the app. I'm looking for friction points where people get frustrated using the app. And obviously any new functionality that gets built would need to be tested as well. I favor a very pragmatic approach to testing.

[00:03:57]
The testing something is always better than testing nothing as long as you're aware that your testing isn't necessarily perfect and you might introduce biases. I think sometimes there is a fear of, I need to make my test perfect. And so you never quite get around to it or you don't do it as often as you should do.

[00:04:19]
So I take the average of, I don't mind doing rubbish testing as long as I do a lot of it, and that I'm aware of any biases that are associated with it. I tend to avoid telling anyone I'm gonna do testing, because immediately they start interfering with it and if you ask management, they're gonna have opinions about it and maybe they say we don't have time.

[00:04:45]
So I tend to do testing below the radar, and I keep it very lightweight and very inexpensive. That's how I do it. One of the big problems with testing is always recruitment, finding people to actually do testing with. So when I'm testing usability, I don't always bother with the exact audience.

[00:05:07]
I'm quite happy to test with friends and family, anyone outside of the organization, anybody who is not associated with the project or anything like that. With usability, the only thing you need to bear in mind is the people you test with needs to have comparable levels of physical and cognitive ability.

[00:05:31]
So if you're aiming at a children audience or the elderly audience, then you probably need to test with children or the elderly. But for everybody in between, you're probably with usability fairly safe just to test with anybody. That's not to say it's always preferable to test with your target audience, but if you can't get hold of them, then it's better than nothing.

[00:05:59]
However, please do not ever test with anyone related to the company or the project, they're gonna have a degree of understanding that end users wouldn't have. And these days, many testing tools will recruit participants for you often as little as a dollar a person. So it really isn't that much.

[00:06:18]
I mean, there's a tool that I use called Askable that you can recruit people via Askable and get them to test anything you want. It's completely platform agnostic. So whether you're using figma or anything else, it doesn't care. And I think I paid 1 pounds 20 per user.

[00:06:43]
I don't know what that is in dollars these days, maybe a couple of dollars, something like that. So if you're testing with just a few people, you can pay that out of your own pocket, really, so yeah. I mean, there's there's so many testing methodologies that you can use and so many research methodologies.

[00:07:01]
It can be quite overwhelming, and so don't get too worried about it, don't get too hung up on about it. I'll share with you the kind of testing that I do a lot of. But if you wanna give something a go, then means have a go at it, see what happens.

