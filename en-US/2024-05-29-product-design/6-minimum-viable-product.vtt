WEBVTT

1
00:00:00.130 --> 00:00:04.460
So where do we start when faced
with those kinds of challenges?

2
00:00:04.460 --> 00:00:06.940
Cuz it really is overwhelming.

3
00:00:06.940 --> 00:00:10.570
Well, this is where this idea of
minimal viable product comes in.

4
00:00:12.330 --> 00:00:17.150
And I suspect most of you have heard
of minimal viable product, but

5
00:00:17.150 --> 00:00:20.777
I do just wanna kinda give
my own definition of it.

6
00:00:20.777 --> 00:00:26.257
So we're all talking from the same
song sheet or whatever the phrase is.

7
00:00:26.257 --> 00:00:31.537
So minimal viable product is a product
version with enough features to attract

8
00:00:31.537 --> 00:00:36.658
our early adopters and validate
the product idea in the development cycle,

9
00:00:36.658 --> 00:00:41.238
gathering user feedback for
future iterations and improvements.

10
00:00:41.238 --> 00:00:47.622
Now, minimal viable product,
there's been a bit of a reaction to it and

11
00:00:47.622 --> 00:00:52.331
a bit of a kinda kick back against it,
because minimal

12
00:00:52.331 --> 00:00:57.478
viable product became a synonym,
is that the right word?

13
00:00:57.478 --> 00:01:03.682
Synonym for kind of half baked idea,
a half baked execution.

14
00:01:03.682 --> 00:01:08.107
And that is not what a minimal
viable product should be.

15
00:01:08.107 --> 00:01:12.437
It's the last bit that's
really the most important.

16
00:01:12.437 --> 00:01:15.740
It's that opportunity to
gather user feedback for

17
00:01:15.740 --> 00:01:18.547
future iterations and improvements.

18
00:01:18.547 --> 00:01:21.327
If you launch a minimal viable product and
stop there,

19
00:01:21.327 --> 00:01:23.389
then you've wasted your time, right?

20
00:01:24.659 --> 00:01:28.073
If I'm faced with building a new app or

21
00:01:28.073 --> 00:01:32.554
even doing a major overhaul
of an existing app, so

22
00:01:32.554 --> 00:01:37.909
like the warehouse management system,
I did kind of that.

23
00:01:37.909 --> 00:01:41.828
In that one, I did two pass-throughs
I did a quick cleanup, right?

24
00:01:41.828 --> 00:01:47.336
Where I went through and I did
the hide remove hide and shrink thing.

25
00:01:47.336 --> 00:01:51.259
And then once I'd done that, it was like,
okay, well we need to step back now and

26
00:01:51.259 --> 00:01:53.296
look at this properly.

27
00:01:53.296 --> 00:01:57.948
And I actually started by, well, okay,
let's create a minimal viable product.

28
00:01:57.948 --> 00:02:02.857
And then we can start reintroducing some
of the functionality from what's there

29
00:02:02.857 --> 00:02:06.763
at the moment,
as depending on what people scream for.

30
00:02:06.763 --> 00:02:10.849
Cuz there's this presumption that,
if we take things away,

31
00:02:10.849 --> 00:02:13.293
people are gonna freak out, right?

32
00:02:13.293 --> 00:02:14.395
Well, let's find out,

33
00:02:14.395 --> 00:02:18.363
let's build a minimum viable product
with all those things taken out, right?

34
00:02:18.363 --> 00:02:22.162
And if people freak out,
we'll put it back in, but if they don't,

35
00:02:22.162 --> 00:02:25.113
then we can save ourselves
a load of effort, right?

36
00:02:26.403 --> 00:02:31.311
A minimal viable product is almost
always my starting point when I'm

37
00:02:31.311 --> 00:02:33.553
doing product design.

38
00:02:33.553 --> 00:02:36.803
And why do I start with
a minimal viable product?

39
00:02:36.803 --> 00:02:39.914
Well, for a start, it reduces risk, right?

40
00:02:39.914 --> 00:02:45.559
It validates the product concept with
minimal resources being invested in it,

41
00:02:45.559 --> 00:02:51.554
and that lowers the risk of a large scale
failure, which costs organizations a lot.

42
00:02:51.554 --> 00:02:56.015
And we as product designers need to
worry about that kind of stuff, right?

43
00:02:56.015 --> 00:03:01.002
We need to care about risk and
those kinds of issues

44
00:03:01.002 --> 00:03:06.006
not just can we create pretty interface,
right?

45
00:03:07.386 --> 00:03:09.972
And it also allows you to
get to market faster, right?

46
00:03:09.972 --> 00:03:16.094
Which is great, allows you quick
launch gaining a competitive edge it

47
00:03:16.094 --> 00:03:21.789
being the first to market,
if it is first a market scenario.

48
00:03:21.789 --> 00:03:26.585
But in any case, it's good to to get to
faster market because the faster you get

49
00:03:26.585 --> 00:03:28.999
to market faster you can get feedback.

50
00:03:30.289 --> 00:03:35.480
It also focuses you on the core what
really matters it helps identify and

51
00:03:35.480 --> 00:03:38.520
refine that product value proposition.

52
00:03:38.520 --> 00:03:43.817
What is essential to that product
what makes that product what it is?

53
00:03:43.817 --> 00:03:48.577
Also if you need investors, it's great to
have a minimal viable product because it

54
00:03:48.577 --> 00:03:52.929
gives you something tangible to show to
investors not only a tangible app but

55
00:03:52.929 --> 00:03:56.297
also tangible user data on using that app.

56
00:03:56.297 --> 00:04:00.752
It also allows you to learn through
the experience by having a real

57
00:04:00.752 --> 00:04:05.774
experience of how the market's responding,
how users are responding,

58
00:04:05.774 --> 00:04:11.052
how viable the product is,
it's an incredible learning experience.

59
00:04:11.052 --> 00:04:16.319
And then finally, it allows you to target
your resources better and by informing

60
00:04:16.319 --> 00:04:21.285
your decisions based on data and
user interactions and what you build next.

61
00:04:21.285 --> 00:04:27.868
And how you scale up based on the feedback
you're getting from the market.

62
00:04:27.868 --> 00:04:32.845
So actually, minimal viable products are a
really valuable tool if you are acting as

63
00:04:32.845 --> 00:04:35.038
a product designer.

64
00:04:35.038 --> 00:04:39.332
And there is this basic
kinda loop which you go

65
00:04:39.332 --> 00:04:43.182
through with minimal viable products.

66
00:04:43.182 --> 00:04:47.151
So essentially I use a garden analogy or
park analogy for some reason,

67
00:04:47.151 --> 00:04:51.455
I don't know somewhere in the past I
decided to start using a park analogy and

68
00:04:51.455 --> 00:04:53.692
it's kinda stuck ever since.

69
00:04:53.692 --> 00:04:57.629
So I start off by building the simplest
version of the product as cheaply as

70
00:04:57.629 --> 00:04:58.512
possible.

71
00:04:58.512 --> 00:05:02.022
So, I grasp big area,
I shove in some trees and

72
00:05:02.022 --> 00:05:05.451
that's my minimum viable product, right?

73
00:05:06.981 --> 00:05:10.309
But then it's about listening
to the feedback you receive and

74
00:05:10.309 --> 00:05:11.661
improving it over time.

75
00:05:11.661 --> 00:05:17.711
So people might say, it's not very
colorful, right great fine, so

76
00:05:17.711 --> 00:05:25.180
we'll put in some flowers to make the the
park more appealing and more engaging.

77
00:05:25.180 --> 00:05:29.779
But also you're not just listening,
you're also adapting

78
00:05:29.779 --> 00:05:35.650
the product to attract a different
audience and a broader audience.

79
00:05:35.650 --> 00:05:40.657
So oftentimes say if you are creating that
task app I was talking about earlier,

80
00:05:40.657 --> 00:05:45.838
the temptation is on building a task app
that can appeal to everybody, right?

81
00:05:45.838 --> 00:05:49.242
But if you go down that line A, you're
gonna make your marketing really hard

82
00:05:49.242 --> 00:05:52.237
because you're trying,
you're not targeting your marketing.

83
00:05:52.237 --> 00:05:56.588
But B, you're gonna have to build
a wide range of different features.

84
00:05:56.588 --> 00:06:01.490
But if you say right, I'm gonna start off
by building my minimum viable product

85
00:06:01.490 --> 00:06:03.846
just for those stay-at-home moms.

86
00:06:03.846 --> 00:06:06.534
Then you can rule out, for example,

87
00:06:06.534 --> 00:06:11.150
building all that complex
project management stuff, right?

88
00:06:11.150 --> 00:06:13.093
But it gives you a focus.

89
00:06:13.093 --> 00:06:17.143
So for example,
in our park analogy, to begin with,

90
00:06:17.143 --> 00:06:22.816
we just wanna get some users interacting
with it, we get a bit of feedback.

91
00:06:22.816 --> 00:06:29.306
But then we might decide, okay,
we wanna attract old people, all right?

92
00:06:29.306 --> 00:06:32.630
And we noticed that old people are coming
and they're coming to the park but

93
00:06:32.630 --> 00:06:34.756
they're not staying very long, right?

94
00:06:34.756 --> 00:06:39.585
And we want to get them on board, so
we're gonna put some benches out, right?

95
00:06:39.585 --> 00:06:43.461
Then they'll sit down and
feed the birds and stay longer, so

96
00:06:43.461 --> 00:06:46.967
I'm adapting to the audience
I'm trying to attract.

97
00:06:46.967 --> 00:06:50.327
And then also I'm observing
people's behaviour as well.

98
00:06:50.327 --> 00:06:54.376
So it might be that kids are coming along,

99
00:06:54.376 --> 00:06:59.477
we want to attract kids and
get them staying longer.

100
00:06:59.477 --> 00:07:03.765
So in that situation they seem to be
getting bored very easily when they

101
00:07:03.765 --> 00:07:06.973
come to it,
they're not really staying very long.

102
00:07:08.013 --> 00:07:13.632
So we might decide to create a boating
lake cuz I live in the 1950s,

103
00:07:13.632 --> 00:07:16.873
so that kids can sail their toy boat.

104
00:07:16.873 --> 00:07:21.005
Probably iPod point,
charge point that's what we need.

105
00:07:21.005 --> 00:07:23.453
But you get what I'm getting at, really,

106
00:07:23.453 --> 00:07:26.989
that is such a terrible analogy
I've used there, isn't it?

107
00:07:26.989 --> 00:07:30.886
But anyway, so essentially you
build your minimal viable product,

108
00:07:30.886 --> 00:07:35.385
you listen to feedback, you adapt based
on new audiences you want to attract and

109
00:07:35.385 --> 00:07:39.065
you observe user behaviour,
that's the key takeaway here.

110
00:07:39.065 --> 00:07:41.358
So the trouble is, is that so

111
00:07:41.358 --> 00:07:47.007
many people just screw up minimal
viable products terribly, right?

112
00:07:48.377 --> 00:07:51.587
And what they do is they do this, right?

113
00:07:51.587 --> 00:07:55.749
So they try and
create far too many features and

114
00:07:55.749 --> 00:07:59.201
they try and is it feasible, right?

115
00:07:59.201 --> 00:08:01.591
Can we get this thing working, right?

116
00:08:02.931 --> 00:08:06.676
And so they managed to get it working,
but of course,

117
00:08:06.676 --> 00:08:11.921
if you've got a load of shitty kind
of features, then nobody's gonna stay

118
00:08:11.921 --> 00:08:17.359
with that cuz it's not valuable,
it's not usable, it's not delightful.

119
00:08:17.359 --> 00:08:20.936
What you need to be doing with
the minimal viable product is just build

120
00:08:20.936 --> 00:08:23.597
a single feature and
just do it really really well.

121
00:08:24.677 --> 00:08:27.449
So going back to that task app example,

122
00:08:27.449 --> 00:08:32.187
that groceries buy all thing
just do that amazingly well.

123
00:08:32.187 --> 00:08:37.057
And don't worry about all the the projects
and subprojects and re-occurring tasks and

124
00:08:37.057 --> 00:08:39.050
that kind of, that can come later.

