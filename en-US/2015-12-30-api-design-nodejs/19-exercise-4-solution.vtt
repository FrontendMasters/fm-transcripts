WEBVTT

1
00:00:00.000 --> 00:00:03.713
[MUSIC]

2
00:00:03.713 --> 00:00:08.798
&gt;&gt; Speaker 1: This was an example into how
to get a little bit into organizing our

3
00:00:08.798 --> 00:00:14.360
application using sub routers and
sub modules and whatnot in Express.

4
00:00:14.360 --> 00:00:21.040
This small layer of abstraction here,
so there were some nuances of.

5
00:00:21.040 --> 00:00:25.300
Literally copying over lions,
actually let me check out this solution.

6
00:00:27.360 --> 00:00:32.120
There's some nuances because one, there
were some typos in there like what to-dos

7
00:00:32.120 --> 00:00:33.570
I thought I'd cleaned those up but
I guess not.

8
00:00:34.910 --> 00:00:38.870
And then there was step four?

9
00:00:38.870 --> 00:00:43.588
There we go.
&gt;&gt; Speaker 2: Are we on

10
00:00:43.588 --> 00:00:44.660
5?
&gt;&gt; Speaker 1: Are we

11
00:00:44.660 --> 00:00:45.198
on five?
&gt;&gt; Speaker 2: No we're on four.

12
00:00:45.198 --> 00:00:46.600
&gt;&gt; Speaker 1: No four, okay okay.

13
00:00:46.600 --> 00:00:50.951
Yeah, there's also things
requiring a low dash, and

14
00:00:50.951 --> 00:00:55.406
stuff like that that you have
to make sure you get right.

15
00:00:55.406 --> 00:00:59.157
But I think what we can do
is let's start at server.

16
00:00:59.157 --> 00:01:02.402
And this was already here for you so
we're already requiring the lion router so

17
00:01:02.402 --> 00:01:04.690
you have to fix, or
the tiger router, I'm sorry.

18
00:01:04.690 --> 00:01:09.160
You have to resolve that error which
means just export something in tigers.

19
00:01:10.200 --> 00:01:11.844
And then we need to just register it.

20
00:01:11.844 --> 00:01:17.284
Doesn't matter what order we put this in,
here or here doesn't matter but if we put

21
00:01:17.284 --> 00:01:22.590
it up here now we don't get bodyParser,
but bodyParser, JSON for tiger route.

22
00:01:22.590 --> 00:01:24.980
If we put it up here we don't get these,
and so forth.

23
00:01:24.980 --> 00:01:26.570
Yep.
&gt;&gt; Speaker 3: Just a quick question,

24
00:01:26.570 --> 00:01:28.390
as you go through this they
were just kind of wondering,

25
00:01:28.390 --> 00:01:32.490
can you show how you check the API as
you're going to make sure it's working?

26
00:01:32.490 --> 00:01:34.140
They're just confused about that.

27
00:01:34.140 --> 00:01:39.235
Do you just like, use HTTP pi utility and
manually test the results?

28
00:01:39.235 --> 00:01:39.950
Or.
&gt;&gt; Speaker 1: Yeah, so.

29
00:01:39.950 --> 00:01:43.595
Good question.
So because there is no UI for it, right.

30
00:01:43.595 --> 00:01:48.038
Yeah, so I mainly just use HTTP pi,
and I just test it for

31
00:01:48.038 --> 00:01:50.695
the command line, so let me see.

32
00:01:50.695 --> 00:01:54.267
I'll start it so
you can see what it looks like.

33
00:01:54.267 --> 00:02:00.310
So I'll say nodemon server server.

34
00:02:00.310 --> 00:02:01.890
It's all the lines yet.

35
00:02:01.890 --> 00:02:03.120
And what is that, port 3000?

36
00:02:03.120 --> 00:02:07.164
So now I'll say http port

37
00:02:07.164 --> 00:02:12.767
localhost:3000/tigers.

38
00:02:12.767 --> 00:02:18.020
And that's how I test my GET request,
so this is what I got back.

39
00:02:18.020 --> 00:02:19.290
I got back an array.

40
00:02:19.290 --> 00:02:21.920
So I mean you could curl,
you could use Postman.

41
00:02:21.920 --> 00:02:25.140
You can use whatever you feel like I like
HTTP pi it works pretty good you can do

42
00:02:25.140 --> 00:02:29.180
things like what is it post I think or

43
00:02:29.180 --> 00:02:32.260
maybe dash dash post.
&gt;&gt; Speaker 2: No post should work.

44
00:02:32.260 --> 00:02:34.250
&gt;&gt; Speaker 1: It's just post okay,

45
00:02:34.250 --> 00:02:39.820
yeah then you say what you wanna post
like name equals Tony the tiger or

46
00:02:39.820 --> 00:02:42.666
something like that and
then you can just post things so yeah.

47
00:02:42.666 --> 00:02:45.893
&gt;&gt; Speaker 3: So will you use the postman?

48
00:02:45.893 --> 00:02:46.680
&gt;&gt; Speaker 1: Yeah.

49
00:02:46.680 --> 00:02:48.379
I usually use postman religiously but

50
00:02:48.379 --> 00:02:52.120
then I just got sick of having to switch
from the terminal to another application.

51
00:02:52.120 --> 00:02:52.933
So I just used this.

52
00:02:52.933 --> 00:02:55.857
If I were going to use a gooey,
I would use that.

53
00:02:55.857 --> 00:02:56.626
That's awesome.

54
00:02:56.626 --> 00:03:00.864
Just make sure that when you use postman
that you are posting JSON data, and

55
00:03:00.864 --> 00:03:01.750
not form data.

56
00:03:03.980 --> 00:03:06.770
And it is type of
application slash JSON and

57
00:03:06.770 --> 00:03:10.410
not the type of text,
otherwise you will get unexpected results.

58
00:03:10.410 --> 00:03:16.619
By default it defaults to form data so
just make sure you're not doing that.

59
00:03:19.070 --> 00:03:21.940
But yeah, that is how I test an API,
it is allot faster me to do it that way.

60
00:03:21.940 --> 00:03:23.380
Just foom foom foom.

61
00:03:23.380 --> 00:03:25.148
Question?
&gt;&gt; Speaker 3: Is there a way to

62
00:03:25.148 --> 00:03:29.817
require a module in your server JS file
that way it makes it required to all other

63
00:03:29.817 --> 00:03:32.544
required modules?
&gt;&gt; Speaker 1: Is there a way to require

64
00:03:32.544 --> 00:03:36.129
a module in server.js file and
make it available to all?

65
00:03:37.360 --> 00:03:43.860
So anything that you attach to global,
so that's another variable that

66
00:03:43.860 --> 00:03:46.960
we get inside that iife that I was talking
about, that this file is wrapped in.

67
00:03:46.960 --> 00:03:48.400
Global's another variable.

68
00:03:48.400 --> 00:03:49.700
It's an object.

69
00:03:49.700 --> 00:03:51.270
If you attach anything to it,

70
00:03:51.270 --> 00:03:53.670
you can access that in any
file without requiring it.

71
00:03:54.860 --> 00:04:00.060
So if I said global.config = this object.

72
00:04:00.060 --> 00:04:02.890
Now anywhere else inside this environment,
I can just type in config, and

73
00:04:02.890 --> 00:04:07.410
it will give me that object,
even in let's see.

74
00:04:07.410 --> 00:04:10.829
This file, or actually, yeah.

75
00:04:10.829 --> 00:04:15.203
Even in this file, so because it's global,
it's in the global space now, so

76
00:04:15.203 --> 00:04:17.808
now I have access to it
everywhere after this.

77
00:04:17.808 --> 00:04:22.840
So now if I go to like lions.js
if I looked at config it would

78
00:04:22.840 --> 00:04:29.205
be the same object.
&gt;&gt; Speaker 1: It wouldn't throw an error,

79
00:04:29.205 --> 00:04:31.785
so I can say config or I can say
global.config whatever I want to say but

80
00:04:31.785 --> 00:04:32.440
either way.

81
00:04:32.440 --> 00:04:35.610
Global is like the window of node.

82
00:04:36.860 --> 00:04:40.530
But it's like an anti-pattern.

83
00:04:40.530 --> 00:04:45.360
Only time I've seen global work and
was okay with it, was with sales.

84
00:04:45.360 --> 00:04:52.570
Sales JS uses global to set up config and
models, and stuff like that.

85
00:04:52.570 --> 00:04:54.430
And I kind of liked it there.

86
00:04:54.430 --> 00:04:59.310
But other places, not really a big fan of
it because then you start getting lazy and

87
00:04:59.310 --> 00:05:01.270
you're like,
I was gonna put low dash on global.

88
00:05:01.270 --> 00:05:04.670
And I was gonna put everything
that I required twice on global so

89
00:05:04.670 --> 00:05:06.190
I don't have to require it twice anymore.

90
00:05:06.190 --> 00:05:09.140
Like, next thing you know
you have a file that's like

91
00:05:09.140 --> 00:05:10.990
Tint that's got like
a hundred requires in it.

92
00:05:10.990 --> 00:05:12.010
That's all on global.

93
00:05:12.010 --> 00:05:14.180
It's like what's the point
of commonJS now?

94
00:05:14.180 --> 00:05:17.240
I don't recommend it, but
yeah you can do that.

95
00:05:17.240 --> 00:05:17.900
That's the only way to do it.

96
00:05:17.900 --> 00:05:23.346
And that's because again all the files
are held in the closure with an iife.

97
00:05:29.901 --> 00:05:30.846
&gt;&gt; Speaker 1: Cool, so yeah,

98
00:05:30.846 --> 00:05:32.270
we register the tigers.

99
00:05:34.330 --> 00:05:38.060
And then over here like I said,
it's the same crud.

100
00:05:38.060 --> 00:05:41.640
The only difference is you
just do a change of tigers, or

101
00:05:41.640 --> 00:05:44.049
lions to tigers and
I have some to do's here and change those.

102
00:05:45.060 --> 00:05:46.512
And then,
I think there was another error with like,

103
00:05:48.390 --> 00:05:50.220
&gt;&gt; Speaker 1: This require not loading up.

104
00:05:50.220 --> 00:05:51.340
Or for the low dash.

105
00:05:51.340 --> 00:05:52.640
And also, there's one more thing.

106
00:05:52.640 --> 00:05:58.290
If you go to server.js,
inside the error handling, this is gonna

107
00:05:58.290 --> 00:06:02.710
catch like the error, so if you don't
log the error, you're never gonna know.

108
00:06:02.710 --> 00:06:06.004
If your server breaks, it wouldn't tell
you, your server would just break and

109
00:06:06.004 --> 00:06:07.586
you wouldn't even know it happened.

110
00:06:07.586 --> 00:06:11.900
So you should probably just log this.

111
00:06:11.900 --> 00:06:14.480
And you can say error.message.

112
00:06:14.480 --> 00:06:17.090
So that will log the error,
so now you know what it says.

113
00:06:17.090 --> 00:06:18.669
Yes?
&gt;&gt; Speaker 2: That same send error there,

114
00:06:18.669 --> 00:06:19.420
is that correct?

115
00:06:19.420 --> 00:06:23.720
Or should it be send error?
&gt;&gt; Speaker 1: There might,

116
00:06:23.720 --> 00:06:26.140
is there a send error?
&gt;&gt; Speaker 2: Well I mean, no I'm sorry,

117
00:06:26.140 --> 00:06:28.520
I meant the parameter is
spelled out error but I-

118
00:06:28.520 --> 00:06:29.520
&gt;&gt; Speaker 1: Thank you, yeah, yeah.

119
00:06:29.520 --> 00:06:31.240
Sorry.
Yeah, you're right.

120
00:06:31.240 --> 00:06:32.624
That carried over from the last branch,

121
00:06:32.624 --> 00:06:37.498
yup.
&gt;&gt; Speaker 1: I thought you meant there

122
00:06:37.498 --> 00:06:38.150
was a send error.

123
00:06:38.150 --> 00:06:42.510
I was like, they added that now,
that's legit, you can make it.

124
00:06:42.510 --> 00:06:44.120
You can modify the response object, too.

125
00:06:44.120 --> 00:06:48.260
If you wanted to, you could make
a middleware that's like, yeah, app.use,

126
00:06:48.260 --> 00:06:52.530
make a middleware that
creates a resonse.syn error.

127
00:06:52.530 --> 00:06:53.740
And it automatically knows what to do.

128
00:06:53.740 --> 00:06:55.010
So you could call that anywhere.

129
00:06:55.010 --> 00:06:55.580
You can do that too

