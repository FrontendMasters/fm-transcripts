WEBVTT

1
00:00:00.000 --> 00:00:03.983
[MUSIC]

2
00:00:03.983 --> 00:00:06.511
&gt;&gt; Speaker 1: So the solution for
this is, for mine at least,

3
00:00:06.511 --> 00:00:08.228
was let's look at config.js.

4
00:00:08.228 --> 00:00:12.579
So there's my solution to config.js.

5
00:00:12.579 --> 00:00:14.688
We've done a lot of error checking and
stuff here,

6
00:00:14.688 --> 00:00:17.251
just to make sure that the merge
actually happens correctly.

7
00:00:17.251 --> 00:00:20.196
So what you could have done is
really just required the file,

8
00:00:20.196 --> 00:00:22.759
which would give you an object and
just put it there.

9
00:00:22.759 --> 00:00:23.695
That would be great.

10
00:00:23.695 --> 00:00:26.779
But there's a lot of edge cases, so
I'm checking for those edge cases.

11
00:00:26.779 --> 00:00:29.500
I think I'm still missing one,
now that I'm looking at it.

12
00:00:29.500 --> 00:00:31.120
So what I'm doing here is
I'm doing a try catch.

13
00:00:32.420 --> 00:00:37.546
Anybody not know what a try catch is?
&gt;&gt; Speaker 1: All right,

14
00:00:37.546 --> 00:00:41.576
just to go over a try catch,
it's everything between this try block,

15
00:00:41.576 --> 00:00:44.740
I can just put any type of
JavaScript that I want there.

16
00:00:44.740 --> 00:00:49.120
And what's gonna happen is, if JavaScript
detects that an error has been thrown

17
00:00:49.120 --> 00:00:54.170
in that try block, it's gonna allow me to
handle that error inside this catch block.

18
00:00:54.170 --> 00:00:55.830
It's gonna be passed as an argument.

19
00:00:55.830 --> 00:00:57.490
So, there was a syntax error here, or

20
00:00:57.490 --> 00:01:02.310
a reference error, or
whatever type of error that I threw, or

21
00:01:02.310 --> 00:01:05.740
error that came from something else,
it's going to be caught right here.

22
00:01:05.740 --> 00:01:08.280
And I can do whatever I want here.

23
00:01:08.280 --> 00:01:12.970
It won't stop the server from executing
because I caught it with the try catch.

24
00:01:12.970 --> 00:01:15.250
See what I mean?

25
00:01:15.250 --> 00:01:16.660
We could check that out here.

26
00:01:16.660 --> 00:01:18.950
Let's do it in Chrome.

27
00:01:18.950 --> 00:01:22.613
We'll go into Chrome and,

28
00:01:22.613 --> 00:01:27.391
this is really painful to write in,

29
00:01:27.391 --> 00:01:32.329
but if I was like try and then throw new

30
00:01:32.329 --> 00:01:36.788
error
&gt;&gt; Speaker 1: Oops,

31
00:01:36.788 --> 00:01:41.894
right then I say error, or
I'm sorry catch, and I grab the error

32
00:01:41.894 --> 00:01:48.255
here.
&gt;&gt; Speaker 1: All

33
00:01:48.255 --> 00:01:52.510
right then I can just be like 1 + 1.

34
00:01:52.510 --> 00:01:56.225
Right, so after you throw an error you
expect the execution of JavaScript to

35
00:01:56.225 --> 00:01:59.493
stop, but because I did a try catch
it should still do that 1 + 1.

36
00:01:59.493 --> 00:02:03.599
So I do that, it still executed 1
+ 1 even though I threw an error.

37
00:02:03.599 --> 00:02:07.405
That's because I caught the error myself.

38
00:02:07.405 --> 00:02:11.182
Right, whereas before if I were to
say throw new error and then try and

39
00:02:11.182 --> 00:02:14.126
do 1 + 1 underneath it,
it wouldn't run, right?

40
00:02:14.126 --> 00:02:19.797
So if I had a function that says var,
this will say error or err.

41
00:02:19.797 --> 00:02:24.143
It's a function.

42
00:02:24.143 --> 00:02:26.325
And the first thing it does
is throws a new error.

43
00:02:30.972 --> 00:02:31.513
&gt;&gt; Speaker 1: Right, and

44
00:02:31.513 --> 00:02:32.760
then right underneath it,

45
00:02:32.760 --> 00:02:37.648
it tries to do 1 + 1.
&gt;&gt; Speaker 2: They're

46
00:02:37.648 --> 00:02:41.789
talking in chat that if this is configure
related, wouldn't you want the server just

47
00:02:41.789 --> 00:02:46.627
to stop?
&gt;&gt; Speaker 1: If it's configure related,

48
00:02:46.627 --> 00:02:47.998
would you want the server to stop?

49
00:02:47.998 --> 00:02:50.526
Probably, maybe.

50
00:02:50.526 --> 00:02:52.410
Probably want the server to stop.

51
00:02:52.410 --> 00:02:58.630
But, yeah I guess it depends on how
sensitive the things are in your config.

52
00:02:58.630 --> 00:03:03.060
And they probably are very sensitive,
so probably.

53
00:03:03.060 --> 00:03:07.621
The other alternative is to put all of the
sensitive stuff on the main config object,

54
00:03:07.621 --> 00:03:10.690
so that way the server can still run,

55
00:03:10.690 --> 00:03:12.940
even though it couldn't
require the appropriate file.

56
00:03:12.940 --> 00:03:18.200
But then, of course, you still have
hiccups in the different environments.

57
00:03:18.200 --> 00:03:19.980
But this was specifically for development.

58
00:03:19.980 --> 00:03:23.769
So, this isn't keeping production and
testing in mind to help ease

59
00:03:23.769 --> 00:03:28.388
development.
&gt;&gt; Speaker 1: But

60
00:03:28.388 --> 00:03:29.510
you could also be on the other side.

61
00:03:29.510 --> 00:03:31.500
It's, well I wanna enforce
that you always do this.

62
00:03:31.500 --> 00:03:39.160
So it's kinda however you wanna do it, so.
&gt;&gt; Speaker 1: Yeah but everybody get me?

63
00:03:39.160 --> 00:03:43.300
So now I threw this error,
I didn't catch it.

64
00:03:43.300 --> 00:03:45.084
And then I tried to say now do 1 + 1.

65
00:03:45.084 --> 00:03:47.888
It's like no, I caught it,
there's an error here.

66
00:03:47.888 --> 00:03:52.730
But the try catch above will
allow me to continue to go.

67
00:03:52.730 --> 00:03:57.026
So that's try catch.
&gt;&gt; Speaker 1: So

68
00:03:57.026 --> 00:04:00.144
it's like try this code,
if there's an error, catch it here.

69
00:04:00.144 --> 00:04:03.914
So, what I'm doing is,
the thing I'm worried it might error out,

70
00:04:03.914 --> 00:04:08.678
is this require statement, because there's
a lot of stuff going on here, this could

71
00:04:08.678 --> 00:04:13.773
be wrong, I don't know, hopefully it's not
because I'm using these actual names here,

72
00:04:13.773 --> 00:04:17.176
but it could be something wrong and
there might not be a file.

73
00:04:17.176 --> 00:04:22.750
If config.env ended up being Snickers,
there's no snickers.JS.

74
00:04:22.750 --> 00:04:24.120
And then this would error out.

75
00:04:24.120 --> 00:04:27.530
If you tried to require something in
node and that file doesn't exist,

76
00:04:27.530 --> 00:04:28.460
it would throw and error.

77
00:04:28.460 --> 00:04:29.840
So that why I'm trying
to catch this error.

78
00:04:31.750 --> 00:04:35.010
And then down here, I'm like so
even if it did find that file I want

79
00:04:35.010 --> 00:04:37.950
to make sure that that file actually
exported something and not.

80
00:04:37.950 --> 00:04:41.790
I want to make sure that it didn't
export the number negative one, or

81
00:04:41.790 --> 00:04:43.960
the number zero which is a false evalue.

82
00:04:43.960 --> 00:04:46.850
So, it's either going to be whatever
it is, or it's gonna be an object.

83
00:04:46.850 --> 00:04:51.070
I can even test it like I want to make
sure that it actually is an object, right?

84
00:04:51.070 --> 00:04:53.408
So, you get even crazier with it,
but it's just testing that.

85
00:04:53.408 --> 00:04:59.270
And then, if it does throw an error,
just default to an object so

86
00:04:59.270 --> 00:05:01.609
that way the merge still works,
because merge needs an object.

87
00:05:03.840 --> 00:05:05.810
So that's why I did this try catch.

88
00:05:05.810 --> 00:05:08.930
Probably don't need it but
just catches some edge cases.

89
00:05:08.930 --> 00:05:10.580
And then down here I'm
just merging them too.

90
00:05:10.580 --> 00:05:12.870
So grab this object, stick it on here.

91
00:05:12.870 --> 00:05:15.990
So the one that we would grab,
because default is gonna be config.dev,

92
00:05:15.990 --> 00:05:21.050
which is development,
that's gonna be the development.js.

93
00:05:21.050 --> 00:05:23.000
Only thing in here is logging is true.

94
00:05:23.000 --> 00:05:24.053
Definitely want logging in development,

95
00:05:24.053 --> 00:05:28.784
so I turned that on.
&gt;&gt; Speaker 1: So that's for the config.

96
00:05:28.784 --> 00:05:34.619
And then as far as the API.
&gt;&gt; Speaker 1: All I'm

97
00:05:34.619 --> 00:05:37.790
doing is just requiring those routes,
those routers inline.

98
00:05:38.810 --> 00:05:41.500
What you probably might have done is
like you would require them up here,

99
00:05:41.500 --> 00:05:43.320
save them in the variables and
pass them down.

100
00:05:43.320 --> 00:05:44.220
You could do that.

101
00:05:44.220 --> 00:05:45.350
But I'm not going to
use that many routers,

102
00:05:45.350 --> 00:05:46.310
I'm just gonna require them in line.

103
00:05:47.920 --> 00:05:53.129
Save some key strokes.

104
00:05:53.129 --> 00:05:56.789
So, if you got all this working then
what you should be able to do is now,

105
00:05:56.789 --> 00:05:59.602
my server's on,
I should be able to interact with it.

106
00:05:59.602 --> 00:06:05.312
So if I type in http I'm using http
pi here, if you wanna use post man or

107
00:06:05.312 --> 00:06:10.630
whatever or curl whatever your
flavor is localhost 3000 and

108
00:06:10.630 --> 00:06:16.255
then I left a note in one of these
files about like the actual routes.

109
00:06:16.255 --> 00:06:22.186
Where did I leave that note?
&gt;&gt; Speaker 2: API users.

110
00:06:22.186 --> 00:06:23.313
&gt;&gt; Speaker 1: API users,

111
00:06:23.313 --> 00:06:27.170
I left the note Well, maybe I didn't.

112
00:06:27.170 --> 00:06:30.580
I left a note about how to
figure out where the routes are,

113
00:06:30.580 --> 00:06:35.270
maybe it's not in here, so
somebody tell me what would be

114
00:06:35.270 --> 00:06:39.570
the URL if I wanted to do
a GET request to categories?

115
00:06:41.620 --> 00:06:42.225
What's the URL?

116
00:06:42.225 --> 00:06:45.897
Because if I go to category routes,
it's just like slash.

117
00:06:45.897 --> 00:06:50.440
So that means if I go to slash, so if I
do a get request of this, I should get

118
00:06:50.440 --> 00:06:53.578
categories, or even that, right?
&gt;&gt; Speaker 2: No.

119
00:06:53.578 --> 00:06:55.880
&gt;&gt; Speaker 1: Nope, cannot get, 404.

120
00:06:55.880 --> 00:06:59.805
So that's definitely not the URL,
but that's what it says right here.

121
00:06:59.805 --> 00:07:03.464
So what's the actual URL for this, Dave?
&gt;&gt; Speaker 2: Some user

122
00:07:03.464 --> 00:07:04.416
ID.
&gt;&gt; Speaker 1: Right so

123
00:07:04.416 --> 00:07:05.850
we gotta take a step back.

124
00:07:05.850 --> 00:07:08.220
We gotta go to see what's
using this router?

125
00:07:08.220 --> 00:07:09.780
So let's go a step, let's walk backwards.

126
00:07:09.780 --> 00:07:11.050
So we'll start here.

127
00:07:11.050 --> 00:07:12.640
So this is route, remember?

128
00:07:12.640 --> 00:07:15.280
Remember I told you don't think of
this as slash, think of this as route.

129
00:07:15.280 --> 00:07:17.480
This is the route, so
this is whatever the route is.

130
00:07:17.480 --> 00:07:20.360
So we gotta go figure out whatever
the prefix is or the parent is.

131
00:07:20.360 --> 00:07:21.250
So we'll back up one and

132
00:07:21.250 --> 00:07:25.150
that's api.js, and if it's categories,
it's slash categories.

133
00:07:25.150 --> 00:07:28.210
Okay, so you're slash categories, got it.

134
00:07:28.210 --> 00:07:30.537
But wait, you're being exported too.

135
00:07:30.537 --> 00:07:34.916
So you got to go figure
out what's using you so

136
00:07:34.916 --> 00:07:40.794
we'll back out of this right and
we'll go to server dot js and

137
00:07:40.794 --> 00:07:44.496
we'll see, slash API, right.

138
00:07:44.496 --> 00:07:50.720
So the real URL for
category would be\api\categories.

139
00:07:50.720 --> 00:07:52.468
That's it.

140
00:07:52.468 --> 00:07:55.432
So \api\categories.

141
00:07:55.432 --> 00:07:57.689
Mark.
&gt;&gt; Speaker 3: I don't know if you want to

142
00:07:57.689 --> 00:08:01.341
handle this now or not but
on line ten of server.js it says,

143
00:08:01.341 --> 00:08:03.400
to set up global error handling.

144
00:08:03.400 --> 00:08:05.090
Can you give an example
of how you'd do this?

145
00:08:06.090 --> 00:08:06.730
&gt;&gt; Speaker 1: Yeah, I guess I forgot that.

146
00:08:06.730 --> 00:08:07.450
&gt;&gt; Speaker 3: Also they were asking

147
00:08:07.450 --> 00:08:12.230
can you use dot slash here?
&gt;&gt; Speaker 1: Dot slash, no dot slash is

148
00:08:12.230 --> 00:08:16.770
for file paths which are different than
URL routes, so I wouldn't use dot slash.

149
00:08:16.770 --> 00:08:19.270
We're not trying to access a file,
we're trying to access a URL.

150
00:08:19.270 --> 00:08:21.320
But yeah, global error handling,
I think I forgot that one.

151
00:08:21.320 --> 00:08:25.255
So the way I would do that, so, when I say
global I mean for the entire application.

152
00:08:25.255 --> 00:08:28.463
You have to do that in the middle or
stack, so I would just do it down here.

153
00:08:28.463 --> 00:08:30.617
So, I'll just say app.use.

154
00:08:30.617 --> 00:08:33.507
All right, you should probably
write this in another file,

155
00:08:33.507 --> 00:08:35.330
actually that's what I'm gonna do.

156
00:08:35.330 --> 00:08:37.724
So, I would go to middleware.js.

157
00:08:37.724 --> 00:08:44.770
I make a new one in here,
I'll call it error, or err.js.

158
00:08:44.770 --> 00:08:49.363
And it'll just be a function,
module.exports

159
00:08:49.363 --> 00:08:53.960
equals our error,
our response or our request.

160
00:08:53.960 --> 00:09:02.443
Our response, oops, and then next.
&gt;&gt; Speaker 1: And

161
00:09:02.443 --> 00:09:08.627
then what I would do is just, for
now, to say console.log or .message.

162
00:09:08.627 --> 00:09:11.628
And then I would send up,
send back a response back res.send

163
00:09:18.931 --> 00:09:21.661
&gt;&gt; Speaker 1: Or res.status.

164
00:09:21.661 --> 00:09:25.405
Just probably don't wanna do this,
I'm just gonna do this for now.

165
00:09:25.405 --> 00:09:31.295
Just a generic 500 server error and
then ab.use, I'll import that in

166
00:09:31.295 --> 00:09:37.619
here.
&gt;&gt; Speaker 1: Which

167
00:09:37.619 --> 00:09:42.440
is in the middleware/err.
&gt;&gt; Speaker 2: There's a question on

168
00:09:42.440 --> 00:09:45.860
what's better requiring on top and
passing in the variable name,

169
00:09:45.860 --> 00:09:49.740
or on the router?
&gt;&gt; Speaker 1: There's no better or worse.

170
00:09:49.740 --> 00:09:51.550
It works the same either way.

171
00:09:51.550 --> 00:09:54.186
The thing I think about, if I'm going to
use the variable in more than one place,

172
00:09:54.186 --> 00:09:58.890
then I'll require it.

173
00:09:58.890 --> 00:10:01.390
If I'm only gonna use it once,
sometimes I'll do it.

174
00:10:01.390 --> 00:10:04.440
Like for instance, I'm only using err
once, so I made a variable for it, but

175
00:10:04.440 --> 00:10:06.060
I could have just required it here.

176
00:10:06.060 --> 00:10:08.650
It's whatever is more readable for you.

177
00:10:08.650 --> 00:10:13.247
It might be better to just require
everything up top so it's all uniform.

178
00:10:13.247 --> 00:10:16.468
But the requires are not asynchronous so
it's fine.

179
00:10:16.468 --> 00:10:19.986
It's not like [INAUDIBLE] 2015 where you
absolutely have to import everything up

180
00:10:19.986 --> 00:10:27.595
top.
&gt;&gt; Speaker 1: So yeah.

181
00:10:27.595 --> 00:10:31.681
Actually I'm gonna switch
that around to use

182
00:10:31.681 --> 00:10:35.337
a different router where it's like this

183
00:10:35.337 --> 00:10:45.120
instead.
&gt;&gt; Speaker 1: There we go.

184
00:10:45.120 --> 00:10:49.270
So then in here I could just do err.

185
00:10:52.820 --> 00:10:54.520
So that's how we set up
a global middleware.

186
00:10:54.520 --> 00:10:58.880
So you'll put this here you could
put this in api.js wherever.

187
00:10:58.880 --> 00:11:01.420
But that's how I would do it.

188
00:11:01.420 --> 00:11:02.080
But where was I?

189
00:11:02.080 --> 00:11:07.910
Yeah, so that's the URL for category,
so if you follow me again on server.js,

190
00:11:07.910 --> 00:11:10.720
so if I go to /api, go to this router.

191
00:11:10.720 --> 00:11:11.730
Okay, I'll go to that router.

192
00:11:11.730 --> 00:11:18.440
And then if I go to /api/categories,
okay, I'll go to that router categories.

193
00:11:18.440 --> 00:11:25.112
And the on the root, for a git request, so

194
00:11:25.112 --> 00:11:31.230
if i just do /API/Catsit, qwerty.

195
00:11:31.230 --> 00:11:33.060
Oops, well i guess i
just start the server.

196
00:11:35.568 --> 00:11:36.508
Wait did it freak out?

197
00:11:36.508 --> 00:11:41.924
Middlewear.
&gt;&gt; Speaker 1: Server.js.

198
00:11:45.815 --> 00:11:46.946
&gt;&gt; Speaker 1: I forgot the e in

199
00:11:46.946 --> 00:11:48.952
middleware, there we go.

200
00:11:48.952 --> 00:11:51.812
NPM start, cool so that's running.

201
00:11:51.812 --> 00:11:59.153
Now if I go to api/categories,
there we go, "ok" : true.

202
00:11:59.153 --> 00:11:59.967
That's categories, right?

203
00:11:59.967 --> 00:12:01.807
And just to show you
that that's categories.

204
00:12:01.807 --> 00:12:06.516
If we go and change this to ok meow meow.

205
00:12:09.581 --> 00:12:15.570
&gt;&gt; Speaker 1: Meow.
&gt;&gt; Speaker 1: Meow.

206
00:12:15.570 --> 00:12:19.150
Let's try this.
And it's the same thing for

207
00:12:19.150 --> 00:12:24.306
all the other resources so,
users same thing, posts

208
00:12:24.306 --> 00:12:30.570
same thing, anything else.

209
00:12:30.570 --> 00:12:31.764
Everybody follow that?

210
00:12:43.106 --> 00:12:47.085
&gt;&gt; Speaker 1: Any questions?

211
00:12:47.085 --> 00:12:50.970
I mean,
as far as triggering the error middleware?

212
00:12:50.970 --> 00:12:52.535
So let's see how that works?

213
00:12:52.535 --> 00:12:55.534
If I come in here and

214
00:12:55.534 --> 00:13:01.146
I say next.
&gt;&gt; Speaker 1: I

215
00:13:01.146 --> 00:13:05.220
was gonna put a return here, just to
make sure it doesn't try to do anything.

216
00:13:05.220 --> 00:13:12.081
Return next.
&gt;&gt; Speaker 1: New Error.

217
00:13:18.554 --> 00:13:21.646
&gt;&gt; Speaker 1: All right, so if I do that,

218
00:13:21.646 --> 00:13:27.701
that should go down to the stack,
all the way to this.

219
00:13:27.701 --> 00:13:32.252
Let me make sure I made that right, yeah.

220
00:13:32.252 --> 00:13:36.153
That should go all the way down there and
do that, so let's check it out.

221
00:13:36.153 --> 00:13:39.900
What was that request for?
&gt;&gt; Speaker 1: It was this.

222
00:13:42.250 --> 00:13:42.840
Categories.

223
00:13:42.840 --> 00:13:52.018
Okay, so let's try categories.
&gt;&gt; Speaker 1: Hm.

224
00:13:52.018 --> 00:13:57.805
There it is, yeah, so, yeah.
&gt;&gt; Speaker 1: It's working.

225
00:13:57.805 --> 00:13:59.954
That's err.message right there.

226
00:13:59.954 --> 00:14:04.715
[COUGH] All right, so
if I go back to server.js or err.js,

227
00:14:04.715 --> 00:14:08.603
that's err.message, right we we're like,

228
00:14:08.603 --> 00:14:13.555
'THIS is the error,
let's try that again, so you can see,

229
00:14:13.555 --> 00:14:18.316
I'll clear the console,
request, THIS is the error, so

230
00:14:18.316 --> 00:14:24.476
it's totally working.
&gt;&gt; Speaker 1: I just did error.message,

231
00:14:24.476 --> 00:14:25.790
that's why it looks funky.

232
00:14:25.790 --> 00:14:26.318
Just put error,

233
00:14:26.318 --> 00:14:32.792
you'll actually see the real error.
&gt;&gt; Speaker 1: There it is,

234
00:14:32.792 --> 00:14:37.659
messed up, or
if you wanna see like, the real,

235
00:14:37.659 --> 00:14:41.745
real error, then you put err.stack.

236
00:14:41.745 --> 00:14:43.690
Then you do that,
then you get a stack choice.

237
00:14:50.132 --> 00:14:51.094
&gt;&gt; Speaker 1: Cool, all right,

238
00:14:51.094 --> 00:14:56.281
any questions on this stuff?
&gt;&gt; Speaker 1: I

239
00:14:56.281 --> 00:14:57.570
thought this stuff was kinda cool.

240
00:14:57.570 --> 00:15:01.250
I thought how everything just came
together as far as like just plug this

241
00:15:01.250 --> 00:15:06.340
router up and guaranteed to have this get
request or like how the config can turn

242
00:15:06.340 --> 00:15:09.130
stuff on and off depending on the
environment and load up different files.

243
00:15:09.130 --> 00:15:09.860
I think that's pretty cool.

