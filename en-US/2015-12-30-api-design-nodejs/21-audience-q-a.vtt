WEBVTT

1
00:00:00.000 --> 00:00:04.541
[MUSIC]

2
00:00:04.541 --> 00:00:08.641
&gt;&gt; Speaker 1: You can use web star for
IntelliJ for debugging.

3
00:00:08.641 --> 00:00:10.046
&gt;&gt; Speaker 2: Webstar or IntelliJ for

4
00:00:10.046 --> 00:00:10.822
debugging.

5
00:00:10.822 --> 00:00:12.925
I wouldn't know that because
I don't use those, but

6
00:00:12.925 --> 00:00:14.901
that's might be the reason
why I should use them.

7
00:00:14.901 --> 00:00:15.840
So that sounds awesome.
&gt;&gt; Speaker 1: Yeah,

8
00:00:15.840 --> 00:00:19.000
those are the best tools
outside of inspector.

9
00:00:19.000 --> 00:00:20.460
&gt;&gt; Speaker 2: Nice, I did not know that.

10
00:00:20.460 --> 00:00:20.960
Great.

11
00:00:22.210 --> 00:00:25.610
I'm probably gonna check it
out tonight then [LAUGH].

12
00:00:25.610 --> 00:00:28.130
Yes?
&gt;&gt; Speaker 1: So in a real example,

13
00:00:28.130 --> 00:00:32.140
the reason behind using routing
is to reuse some of the code, or

14
00:00:32.140 --> 00:00:36.630
what's the main reason behind routing?
&gt;&gt; Speaker 2: Are you saying the reason

15
00:00:36.630 --> 00:00:38.961
behind making these subrouters?
&gt;&gt; Speaker 1: Yeah.

16
00:00:38.961 --> 00:00:39.980
&gt;&gt; Speaker 2: Right.

17
00:00:39.980 --> 00:00:43.920
So it's just too abstract
a piece of functionality, right?

18
00:00:43.920 --> 00:00:47.520
So now we get to abstract different
resources completely away.

19
00:00:47.520 --> 00:00:48.800
And they have their own configuration.

20
00:00:48.800 --> 00:00:50.080
So that's the sweet thing.

21
00:00:50.080 --> 00:00:54.100
It's like they share some global
configuration, as in server JS.

22
00:00:54.100 --> 00:00:56.730
They share disk configuration.

23
00:00:56.730 --> 00:01:01.920
But they also have their own configuration
that's specific and unique to them, right?

24
00:01:01.920 --> 00:01:05.040
And we're not polluting other
resources with that configuration.

25
00:01:05.040 --> 00:01:08.640
So just the fact that it's abstracted out,
which is really great.

26
00:01:08.640 --> 00:01:11.460
Which, I think, just leads to
all types of benefits as much as

27
00:01:11.460 --> 00:01:13.470
like working with different
people in the same project.

28
00:01:13.470 --> 00:01:16.100
Now you can work on different
things completely separate and

29
00:01:16.100 --> 00:01:18.880
not have to worry about
waiting on this person, right?

30
00:01:18.880 --> 00:01:23.740
And also, maybe you're doing very
unique things with this one thing.

31
00:01:23.740 --> 00:01:26.690
Maybe for
lion.js you're writing it in ES6 and

32
00:01:27.870 --> 00:01:31.230
it's using a different version of Express.

33
00:01:31.230 --> 00:01:34.460
Or maybe it's using a different version
of a database, or something like that.

34
00:01:34.460 --> 00:01:35.670
It's doing something different,

35
00:01:35.670 --> 00:01:38.920
so you need it to be completely isolated,
then register it later.

36
00:01:38.920 --> 00:01:40.060
So, things like that.

37
00:01:40.060 --> 00:01:42.391
It's just like having
a application in an application,

38
00:01:42.391 --> 00:01:45.490
is just many benefits.
&gt;&gt; Speaker 2: Yeah?

39
00:01:47.829 --> 00:01:49.050
&gt;&gt; Speaker 2: Any other questions?

40
00:01:49.050 --> 00:01:51.660
Mark?
&gt;&gt; Speaker 1: I think

41
00:01:51.660 --> 00:01:55.540
Tom was just saying he'd
mentioned the response on finish

42
00:01:55.540 --> 00:01:58.122
for middleware.
&gt;&gt; Speaker 2: The response on

43
00:01:58.122 --> 00:02:01.310
finish.
&gt;&gt; Speaker 2: I'm not sure

44
00:02:01.310 --> 00:02:03.927
what he's referring to-
&gt;&gt; Speaker 1: Or maybe I thought he meant

45
00:02:03.927 --> 00:02:06.050
for you to bring that up, but
I'll check with what he's saying.

46
00:02:06.050 --> 00:02:07.781
And then somebody else was asking,

47
00:02:07.781 --> 00:02:11.330
where's this morgan thing being used?
&gt;&gt; Speaker 2: Yeah, morgan.

48
00:02:11.330 --> 00:02:12.230
Server.js.

49
00:02:12.230 --> 00:02:16.530
Right here.
So, if you'll look, I'll just show you.

50
00:02:16.530 --> 00:02:26.037
If I run the server.
&gt;&gt; Speaker 2: Oops, it's already running.

51
00:02:26.037 --> 00:02:29.870
It's over here.
&gt;&gt; Speaker 2: There we go.

52
00:02:29.870 --> 00:02:31.480
So the server's running.

53
00:02:31.480 --> 00:02:32.750
Let me clear the output.

54
00:02:32.750 --> 00:02:34.030
There's no output right now, right?

55
00:02:34.030 --> 00:02:35.320
There's nothing here, I just cleared it.

56
00:02:35.320 --> 00:02:39.910
But the server's still on, and
if I go to the app, I refresh, and

57
00:02:39.910 --> 00:02:40.740
I look at the output.

58
00:02:40.740 --> 00:02:42.550
All this stuff that's being
logged in the terminal,

59
00:02:42.550 --> 00:02:46.000
that's morgan doing that,
morgan is logging this.

60
00:02:46.000 --> 00:02:47.440
If we get rid of morgan,
we won't see anything.

61
00:02:47.440 --> 00:02:49.280
Yes?
&gt;&gt; Speaker 1: Is there anything that will

62
00:02:49.280 --> 00:02:52.816
log the request as well
as the body of a host or

63
00:02:52.816 --> 00:02:54.170
a put?
&gt;&gt; Speaker 2: Log the-

64
00:02:54.170 --> 00:02:55.240
&gt;&gt; Speaker 1: That tells me the call was

65
00:02:55.240 --> 00:02:56.660
made, but not actually what got

66
00:02:56.660 --> 00:02:58.630
pushed across.
&gt;&gt; Speaker 2: So,

67
00:02:58.630 --> 00:03:02.120
there are different levels to morgan.

68
00:03:02.120 --> 00:03:04.030
If you got rid of dev,
we can see what happens.

69
00:03:04.030 --> 00:03:05.240
So, let me see.

70
00:03:05.240 --> 00:03:07.950
I got rid of dev, says it deprecated.

71
00:03:07.950 --> 00:03:10.600
Looks like you gotta do something.

72
00:03:10.600 --> 00:03:11.660
I don't know.

73
00:03:11.660 --> 00:03:14.580
So, but yeah, if morgan doesn't do, then,
yeah, you can make your own, right?

74
00:03:14.580 --> 00:03:17.550
So you could just, what you could
do is you come in here, actually,

75
00:03:17.550 --> 00:03:18.810
let's just do it right now.

76
00:03:18.810 --> 00:03:21.270
We'd have to make sure we're
after the body parts here.

77
00:03:21.270 --> 00:03:22.570
So JSON's there.

78
00:03:22.570 --> 00:03:25.500
We'll make a new request right here,
right?

79
00:03:25.500 --> 00:03:27.087
And we'll make a new middlewear,

80
00:03:27.087 --> 00:03:31.680
and we'll get the request.
&gt;&gt; Speaker 2: And a response.

81
00:03:31.680 --> 00:03:32.269
And next.

82
00:03:33.610 --> 00:03:36.060
And you said you want
to log the request and

83
00:03:36.060 --> 00:03:37.040
the response?
&gt;&gt; Speaker 1: Well,

84
00:03:37.040 --> 00:03:40.110
the body of what's coming in.
&gt;&gt; Speaker 2: Okay, the body.

85
00:03:40.110 --> 00:03:44.690
So, we'll say console.log, the body.

86
00:03:44.690 --> 00:03:48.265
And then we could just say req.body,

87
00:03:48.265 --> 00:03:53.270
and then we can say next.
&gt;&gt; Speaker 2: There we go.

88
00:03:53.270 --> 00:03:59.021
So now when we
&gt;&gt; Speaker 2: do something, there it is.

89
00:03:59.021 --> 00:03:59.860
The body.

90
00:04:01.170 --> 00:04:07.550
So if I post something
&gt;&gt; Speaker 2: The body.

91
00:04:07.550 --> 00:04:10.610
All right?

92
00:04:10.610 --> 00:04:11.220
There you go, yeah.

93
00:04:11.220 --> 00:04:14.864
So super easy to make
yourself with middleware.

94
00:04:14.864 --> 00:04:15.745
Any other questions?

95
00:04:15.745 --> 00:04:17.156
Yes.
&gt;&gt; Speaker 1: Somebody had posted a while

96
00:04:17.156 --> 00:04:20.232
ago a snippet of the middleware
that console logs how long each

97
00:04:20.232 --> 00:04:21.249
request is taking.

98
00:04:21.249 --> 00:04:23.940
But morgan's doing that for us, right?
&gt;&gt; Speaker 2: Yeah.

99
00:04:23.940 --> 00:04:25.326
Morgan actually tells you

100
00:04:25.326 --> 00:04:27.200
how long is taking [CROSSTALK]
&gt;&gt; Speaker 1: Yeah.

101
00:04:27.200 --> 00:04:30.374
It will tell you how long it took.
&gt;&gt; Speaker 2: Okay.

102
00:04:30.374 --> 00:04:35.748
They're asking what theme
you're using in sublime text.

103
00:04:35.748 --> 00:04:36.587
&gt;&gt; Speaker 1: Yeah.

104
00:04:36.587 --> 00:04:40.778
So, theme is seti, S,E,T,I.

105
00:04:40.778 --> 00:04:45.829
And color scheme is, let me see.

106
00:04:45.829 --> 00:04:47.407
All right.

107
00:04:47.407 --> 00:04:52.159
Let me see, it's-
&gt;&gt; Speaker 2: We should just have

108
00:04:52.159 --> 00:04:55.556
every teacher that teaches-
&gt;&gt; Speaker 1: Their stack.

109
00:04:55.556 --> 00:04:57.815
&gt;&gt; Speaker 2: Their list of like theme and

110
00:04:57.815 --> 00:05:00.080
config and all that stuff.

111
00:05:00.080 --> 00:05:05.492
Cuz it's like, if someone's using vim
it's like what extensions are you using?

112
00:05:05.492 --> 00:05:06.330
&gt;&gt; Speaker 1: [LAUGH]

113
00:05:06.330 --> 00:05:08.105
&gt;&gt; Speaker 2: What plugins are you using?

114
00:05:08.105 --> 00:05:09.915
&gt;&gt; Speaker 1: Yeah, so the theme is SETI.

115
00:05:09.915 --> 00:05:13.000
And the actual color and
syntax is Brogrammer.

116
00:05:14.420 --> 00:05:18.720
So you're an official brogrammer?
&gt;&gt; Speaker 2: I just

117
00:05:18.720 --> 00:05:20.260
downloaded it yesterday
cuz it looked cool.

118
00:05:20.260 --> 00:05:26.380
But another one that I like is glaciers,
the one I had before this.

119
00:05:26.380 --> 00:05:27.890
It was really good.

120
00:05:27.890 --> 00:05:29.536
All right.
It's not on here now.

121
00:05:29.536 --> 00:05:32.420
But, yeah, that's what I have.

122
00:05:32.420 --> 00:05:33.370
Brogrammer, yeah.

