WEBVTT

1
00:00:00.516 --> 00:00:04.166
[MUSIC]

2
00:00:04.166 --> 00:00:07.389
&gt;&gt; Speaker 1: So if you look there is
a controller file in each api now and

3
00:00:07.389 --> 00:00:09.416
a lot of them are already built out.

4
00:00:09.416 --> 00:00:12.330
I forgot that half of them
are already built out.

5
00:00:12.330 --> 00:00:18.080
You just got to go fill in the bank
ones inside the controller files.

6
00:00:18.080 --> 00:00:22.910
The subject you are going to be working
on, if you are looking at the api folder

7
00:00:22.910 --> 00:00:27.220
on each resource there's
a respective controller file.

8
00:00:27.220 --> 00:00:29.810
A lot of the stuff is
already built out in there.

9
00:00:29.810 --> 00:00:33.700
You only have to fill out maybe two or
three for each file.

10
00:00:33.700 --> 00:00:35.550
And if you want to get
hints on how that works,

11
00:00:35.550 --> 00:00:38.830
if you go to the other resources file,
it might be filled out in there.

12
00:00:38.830 --> 00:00:41.110
So just kind of like see what's
going on in that file and

13
00:00:41.110 --> 00:00:44.160
apply it to the other resource and
you'll get a fill.

14
00:00:44.160 --> 00:00:48.280
And once you complete this, the actual

15
00:00:48.280 --> 00:00:53.040
routes, you need to, actually we're
going to save that for later, so yeah.

16
00:00:53.040 --> 00:00:58.430
You're not going to be able to test this
either, cuz the routes aren't set up.

17
00:00:58.430 --> 00:01:01.600
If you want to take a step ahead and test
it, then you have to connect the routes.

18
00:01:01.600 --> 00:01:03.430
Which is fine, you could totally do that.

19
00:01:03.430 --> 00:01:06.906
But you still won't be able to test
this without setting up the routes.

20
00:01:12.487 --> 00:01:13.940
&gt;&gt; Speaker 1: So yeah, just finish this.

21
00:01:13.940 --> 00:01:16.030
We'll come back tomorrow
with the solution.

22
00:01:16.030 --> 00:01:18.420
And then that'll be that.

23
00:01:19.520 --> 00:01:22.920
Actually I guess you could test this,
you just couldn't test it with the API.

24
00:01:22.920 --> 00:01:25.640
You wanna test this you just
have to manually run the code.

25
00:01:25.640 --> 00:01:29.940
Just like grab this query here and run it.

26
00:01:29.940 --> 00:01:32.840
Just make sure you're not
calling like next inside

27
00:01:32.840 --> 00:01:36.410
of here because that's Express stuff and
it would just break, right?

28
00:01:36.410 --> 00:01:38.570
So just like here's the query and
I'm gonna run it.

29
00:01:38.570 --> 00:01:42.600
Just like execute it and
run the file and it would totally work.

30
00:01:42.600 --> 00:01:47.300
Another good way you could do it is if you
just make another file in the route here.

31
00:01:47.300 --> 00:01:51.293
I'm just gonna make another file and
call is dbtest.js.

32
00:01:51.293 --> 00:01:54.853
And then you could just require
the models that you want,

33
00:01:54.853 --> 00:01:59.096
and just start building queries in
here and just execute this file.

34
00:02:01.216 --> 00:02:02.180
&gt;&gt; Speaker 1: Once you're
connected to Mongo.

35
00:02:02.180 --> 00:02:03.880
So you could do that,
too if you wanted to.

