WEBVTT

1
00:00:00.000 --> 00:00:03.863
[MUSIC]

2
00:00:03.863 --> 00:00:04.432
&gt;&gt; Speaker 1: Now we're gonna talk
about organization and config. So

3
00:00:04.432 --> 00:00:09.788
this is where we're actually gonna
start building the API and doing stuff.

4
00:00:09.788 --> 00:00:12.156
And it's gonna get kinda crazy.

5
00:00:12.156 --> 00:00:15.068
we're gonna jump a couple steps, and

6
00:00:15.068 --> 00:00:19.358
we're gonna talk about how
to really get the API going.

7
00:00:19.358 --> 00:00:21.550
So, organization and config.

8
00:00:22.940 --> 00:00:25.165
Our API will consist of
many different components.

9
00:00:27.445 --> 00:00:28.340
&gt;&gt; Speaker 1: Typo.

10
00:00:28.340 --> 00:00:33.270
To support the API authentication,
static serving, etc.

11
00:00:33.270 --> 00:00:37.468
So when you hear me say the word API,
I'm not just talking the rest in points.

12
00:00:37.468 --> 00:00:40.940
This is actually really gonna be like
a web server that has an API aspect of it.

13
00:00:40.940 --> 00:00:45.600
So we'll be serving a site or,
actually, maybe I won't.

14
00:00:45.600 --> 00:00:46.960
Maybe I won't serve this site.

15
00:00:46.960 --> 00:00:48.490
But it definitely will
be doing authentication.

16
00:00:49.560 --> 00:00:52.550
So we'll have authentication,
authorization,

17
00:00:52.550 --> 00:00:54.930
identification and then the API.

18
00:00:56.740 --> 00:01:01.600
But what actually makes up the API
portion of the server, right?

19
00:01:01.600 --> 00:01:04.900
So, if we look at our code,
we kinda figure that out already.

20
00:01:04.900 --> 00:01:10.700
We know that in our server js,
we have middleware, we have these routes.

21
00:01:10.700 --> 00:01:15.790
We have these routers, and
then we have these crud operations here.

22
00:01:15.790 --> 00:01:16.710
All right.

23
00:01:16.710 --> 00:01:21.521
We can break that down to
different components of our API.

24
00:01:24.161 --> 00:01:28.262
&gt;&gt; Speaker 1: So the API is really
just a collection of resources

25
00:01:28.262 --> 00:01:32.105
with models to define
how the resources look.

26
00:01:32.105 --> 00:01:35.611
So, and then we have controllers
to access those resources and

27
00:01:35.611 --> 00:01:40.340
routes to let the controllers know how,
all these typos.

28
00:01:40.340 --> 00:01:41.690
It's really hard to read.

29
00:01:41.690 --> 00:01:43.776
Know how to run and expose our API.

30
00:01:46.876 --> 00:01:47.511
&gt;&gt; Speaker 2: We'll have to have

31
00:01:47.511 --> 00:01:48.300
an editor go through-
&gt;&gt; Speaker 1: Yeah.

32
00:01:48.300 --> 00:01:49.145
&gt;&gt; Speaker 2: With your whole-
&gt;&gt; Speaker 1: Yeah

33
00:01:49.145 --> 00:01:50.880
[LAUGH]
&gt;&gt; Speaker 2: Yeah.

34
00:01:50.880 --> 00:01:51.940
&gt;&gt; Speaker 1: That old thing again.

35
00:01:51.940 --> 00:01:52.602
That would be great.

36
00:01:52.602 --> 00:01:54.300
&gt;&gt; Speaker 2: [LAUGH] Before
we launch the course.

37
00:01:54.300 --> 00:01:56.385
&gt;&gt; Speaker 1: Yeah,
we should totally do that.

38
00:01:56.385 --> 00:01:59.287
[LAUGH] It's like at least
100 typos in here, so.

39
00:01:59.287 --> 00:02:01.700
&gt;&gt; Speaker 2: [LAUGH] At least 100.

40
00:02:01.700 --> 00:02:05.470
&gt;&gt; Speaker 1: Yeah.
But, yeah so, resources,

41
00:02:05.470 --> 00:02:06.400
which are like the models.

42
00:02:06.400 --> 00:02:09.570
So our lions our tigers,
those are resources, those are our models.

43
00:02:09.570 --> 00:02:15.300
And then we have controllers that define,
that gives us access to the models.

44
00:02:15.300 --> 00:02:17.640
Those are the things that's
gonna interact with the models.

45
00:02:17.640 --> 00:02:20.710
And then the routes are the things
that are gonna call the controllers.

46
00:02:20.710 --> 00:02:23.550
So they're, the controllers
are the call backs to the routes.

47
00:02:23.550 --> 00:02:25.650
And the controllers themselves
interact with the models.

48
00:02:25.650 --> 00:02:28.210
So we have our routes here,
that our client's talking to.

49
00:02:28.210 --> 00:02:29.830
We have our models over here.

50
00:02:29.830 --> 00:02:32.742
And then right in the middle
is our controllers.

51
00:02:32.742 --> 00:02:34.470
Our controllers are like,
okay, I'm gonna wait for

52
00:02:34.470 --> 00:02:37.370
the router to tell me to do something,
then I'm gonna go talk to the model and

53
00:02:37.370 --> 00:02:39.640
come back and give it back to the client.

54
00:02:39.640 --> 00:02:41.620
So the controller's sitting
right in the middle.

55
00:02:41.620 --> 00:02:43.291
Does that make sense?

56
00:02:44.851 --> 00:02:46.206
&gt;&gt; Speaker 1: We've been
doing that this whole time.

57
00:02:46.206 --> 00:02:50.440
So
&gt;&gt; Speaker 1: it's nothing different.

58
00:02:50.440 --> 00:02:52.313
So we have our servers.

59
00:02:52.313 --> 00:02:53.074
I'm sorry.

60
00:02:53.074 --> 00:02:54.580
Here's our routes.

61
00:02:54.580 --> 00:02:56.550
Boom, go to lions,
go to lion router, great.

62
00:02:56.550 --> 00:02:58.910
And then we set up these routes here.

63
00:02:58.910 --> 00:02:59.901
So, here are our routes.

64
00:03:01.581 --> 00:03:04.400
&gt;&gt; Speaker 1: This callback function
right here, this is like our controller.

65
00:03:04.400 --> 00:03:08.430
That's the controller is this function,
and what's happening in the function.

66
00:03:08.430 --> 00:03:11.010
And then as far as the models,
it's just this lions array right here.

67
00:03:13.370 --> 00:03:14.820
&gt;&gt; Speaker 1: So,
we've been doing it the whole time.

68
00:03:14.820 --> 00:03:18.910
Our controllers are the thing that's
doing crud operations on the model.

69
00:03:18.910 --> 00:03:21.090
So right here, we're adding to the model.

70
00:03:21.090 --> 00:03:22.180
We're deleting.

71
00:03:22.180 --> 00:03:27.227
These are all our controllers right here
that's interacting with the lions model.

72
00:03:27.227 --> 00:03:31.111
That's being, that's reporting
back to the routes of the request.

73
00:03:33.371 --> 00:03:36.291
&gt;&gt; Speaker 1: So we have our routes,
our controllers, our models.

74
00:03:40.903 --> 00:03:42.469
&gt;&gt; Speaker 1: So
a model is just a blueprint of what

75
00:03:42.469 --> 00:03:44.190
our resource may look like.

76
00:03:44.190 --> 00:03:46.460
So, again, yesterday we were
talking about that, right?

77
00:03:46.460 --> 00:03:49.100
It's just a blueprint of what
our resource is gonna look like.

78
00:03:49.100 --> 00:03:50.390
That's what a model is.

79
00:03:51.558 --> 00:03:55.329
Or somewhat.

80
00:03:57.889 --> 00:04:01.107
&gt;&gt; Speaker 1: So just like the blueprints
we made in the JSON above,

81
00:04:01.107 --> 00:04:05.600
the controllers are the glue
between the routes and the models.

82
00:04:05.600 --> 00:04:08.380
And like I said, we've been using
controllers and routes the whole time.

83
00:04:08.380 --> 00:04:11.900
So MVC is a classical organization
pattern, especially for the servers.

84
00:04:13.200 --> 00:04:15.880
We're gonna take a service
oriented approach instead.

85
00:04:15.880 --> 00:04:20.540
So, we're not gonna organize our
application in traditional MVC pattern,

86
00:04:20.540 --> 00:04:24.660
where it would be something,
in our server we have a folder for

87
00:04:24.660 --> 00:04:28.630
all our controllers, and a folder for
our routes, or a file for our routes, and

88
00:04:28.630 --> 00:04:31.050
they're like a folder with all our models.

89
00:04:31.050 --> 00:04:31.970
We're not gonna take that approach.

90
00:04:33.200 --> 00:04:36.480
The approach we're gonna take is a more
of a service oriented approach instead.

91
00:04:36.480 --> 00:04:39.100
So instead of grouping our
code together by type,

92
00:04:39.100 --> 00:04:41.810
like all controllers go here,
all models go here,

93
00:04:41.810 --> 00:04:45.280
all routes go here, we're gonna group them
together by feature, by functionality.

94
00:04:45.280 --> 00:04:49.180
So, it's like everything to do with a lion
goes here, whether that's a controller,

95
00:04:49.180 --> 00:04:53.550
a test, a route, a model.

96
00:04:53.550 --> 00:04:55.030
Everything about the lion goes here.

97
00:04:55.030 --> 00:04:56.282
Everything about the tiger goes here.

98
00:04:56.282 --> 00:04:58.580
All right?

99
00:04:58.580 --> 00:05:01.900
So we'll bundle the resources, routes,
controllers, model into one directory.

100
00:05:01.900 --> 00:05:03.480
And tests, too.

101
00:05:03.480 --> 00:05:04.350
So that looks like this.

102
00:05:06.150 --> 00:05:10.360
So in our API folder, we'll have for
instance, a todos/ resource.

103
00:05:10.360 --> 00:05:14.886
It has its own model,
its own controller and its own routes.

104
00:05:24.226 --> 00:05:27.060
&gt;&gt; Speaker 1: So that's pretty
much it as far as organization.

105
00:05:27.060 --> 00:05:30.870
And then we have other things like a
config folder where we store config stuff.

106
00:05:30.870 --> 00:05:34.234
Maybe a utilities folder where we store
utility functions to help us out.

107
00:05:34.234 --> 00:05:36.907
Maybe authentication folder to
store authentication stuff.

108
00:05:36.907 --> 00:05:39.580
But the important thing is just how
we organize the models, the API.

