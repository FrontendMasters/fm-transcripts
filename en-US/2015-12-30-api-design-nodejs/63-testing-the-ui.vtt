WEBVTT

1
00:00:00.000 --> 00:00:03.777
[MUSIC]

2
00:00:03.777 --> 00:00:07.025
&gt;&gt; Scott Moss: We'll have that running,
and then the important stuff is now,

3
00:00:07.025 --> 00:00:09.788
if you try to go to admin,
and if you aren't signed in,

4
00:00:09.788 --> 00:00:13.360
it'll bring up this form, like,
snap, you're not signed in.

5
00:00:14.530 --> 00:00:16.610
So you cannot go to admin
unless you're logged in.

6
00:00:16.610 --> 00:00:19.150
So then, let's log in with one of our,

7
00:00:20.960 --> 00:00:25.460
well let's try to log in with
one of our scaffolded users.

8
00:00:25.460 --> 00:00:26.530
And see what happens.

9
00:00:26.530 --> 00:00:28.960
So if we go here, and
I try to log in with this person.

10
00:00:32.270 --> 00:00:36.440
And the password is test.

11
00:00:36.440 --> 00:00:39.806
All right, sign in, it goes in.

12
00:00:50.487 --> 00:00:51.190
&gt;&gt; Scott Moss: Everybody see that?

13
00:00:51.190 --> 00:00:51.980
It just went in.

14
00:00:51.980 --> 00:00:54.500
So that's great but also watch this.

15
00:00:54.500 --> 00:01:01.020
So now if I go back and
I say user name is that password is this.

16
00:01:01.020 --> 00:01:03.596
And I enter it.
It's like wait, nope.

17
00:01:03.596 --> 00:01:04.897
Not gonna authorize.

18
00:01:04.897 --> 00:01:07.420
All right, so
that's the sign in stuff happening.

19
00:01:07.420 --> 00:01:08.720
That's the stuff that we all ready made.

20
00:01:08.720 --> 00:01:11.660
That's the thing that we just made,
the verify user stuff.

21
00:01:11.660 --> 00:01:13.200
So that's sign in, we all ready made that.

22
00:01:13.200 --> 00:01:13.907
So this should work for you.

23
00:01:16.387 --> 00:01:19.847
&gt;&gt; Scott Moss: The thing that
probably not gonna work is sign up.

24
00:01:19.847 --> 00:01:24.868
So we go to sign up, and we sign up,
&gt;&gt; Scott Moss: I

25
00:01:24.868 --> 00:01:27.847
guess that does work,
wait I have a token that's why.

26
00:01:33.967 --> 00:01:35.688
&gt;&gt; Scott Moss: Get rid of this token.

27
00:01:39.210 --> 00:01:40.690
&gt;&gt; Scott Moss: Or actually,
did I enable that?

28
00:01:40.690 --> 00:01:44.151
Let me look really quick,
probably forgot to take it off.

29
00:01:46.910 --> 00:01:54.250
&gt;&gt; Scott Moss: User,
user controller, and then post.

30
00:01:54.250 --> 00:01:55.870
Yeah, yeah I finished this one.

31
00:01:55.870 --> 00:01:58.470
So this should work too, I forgot,
I was thinking of something else.

32
00:01:58.470 --> 00:02:00.980
Yeah so sign ups should totally work for
you as well.

33
00:02:00.980 --> 00:02:03.100
But you're not really needing a sign up.

34
00:02:05.810 --> 00:02:07.280
But if you join me in usercontrol.js,

35
00:02:07.280 --> 00:02:09.874
you'll see a difference and
then what is was a couple steps ago.

36
00:02:09.874 --> 00:02:14.380
Cuz user control.js on the post method,

37
00:02:14.380 --> 00:02:17.800
it used to just be, let's just
create a new user and send it back.

38
00:02:17.800 --> 00:02:19.450
But now let's do something
little different.

39
00:02:19.450 --> 00:02:23.600
What it's actually doing is just creating
a new user based on whatever req.body is.

40
00:02:23.600 --> 00:02:27.700
That this is gonna return in instance
of the user model Mongo, Mongoose.

41
00:02:30.940 --> 00:02:33.160
Actually, I don't know why that's
even there, this shouldn't.

42
00:02:34.270 --> 00:02:37.850
This gets to happen on pre-save, so
we don't even really need this here.

43
00:02:37.850 --> 00:02:39.620
I think I made it re-factor and
forgot to get rid of it.

44
00:02:39.620 --> 00:02:42.900
But it won't hurt to have it, but
we actually absolutely don't need it.

45
00:02:42.900 --> 00:02:47.460
So I'll just leave it and then save
the user, which we'll call hashedPassword.

46
00:02:47.460 --> 00:02:48.830
But for some reason I'm doing it already.

47
00:02:48.830 --> 00:02:51.540
And then send the token back.

48
00:02:51.540 --> 00:02:54.100
So we also wanna send
a token back on sign up.

49
00:02:54.100 --> 00:02:55.050
We already did it on sign on.

50
00:02:55.050 --> 00:02:56.070
Now we're doing it on sign up.

51
00:02:56.070 --> 00:02:58.340
And that's all we're doing here.

52
00:02:59.460 --> 00:03:03.379
Again, we don't need this, because
the pre-hook is going to fire before this.

53
00:03:06.290 --> 00:03:07.820
Right, the pre-hook will fire before this.

54
00:03:07.820 --> 00:03:10.860
And the pre-hook does this already.

55
00:03:14.140 --> 00:03:16.490
Actually we don't even have something
called hash password anymore, so

56
00:03:16.490 --> 00:03:18.440
that's like a complete re-factor yeah.

57
00:03:18.440 --> 00:03:19.950
I'm not even using that.

58
00:03:26.970 --> 00:03:28.430
&gt;&gt; Scott Moss: So again,
this is the sign up method.

59
00:03:28.430 --> 00:03:29.760
So this is the new post for

60
00:03:29.760 --> 00:03:33.330
user, you can no longer just create a new
user resource like you could before.

61
00:03:33.330 --> 00:03:34.990
You actually now have to do this.

62
00:03:34.990 --> 00:03:36.650
Right, and
that's what you just saw when I signed in.

63
00:03:36.650 --> 00:03:39.428
So just to demonstrate on the terminal,

64
00:03:39.428 --> 00:03:44.535
that's HTTP Localhost,
&gt;&gt; Scott Moss: 3000.

65
00:03:44.535 --> 00:03:48.060
Whereas before, we could say API/users and
then it was like,

66
00:03:48.060 --> 00:03:50.930
yeah, just give your username,
and it goes that.

67
00:03:50.930 --> 00:03:53.680
And that would create a user.

68
00:03:53.680 --> 00:03:56.220
Now it's like, nope, oops,
that's not gonna work.

69
00:03:56.220 --> 00:03:58.670
You can't do that anymore.

70
00:03:58.670 --> 00:04:00.656
You actually have to give
me a password now too.

71
00:04:00.656 --> 00:04:01.156
Okay.

72
00:04:08.721 --> 00:04:09.810
&gt;&gt; Scott Moss: What does that even mean?

73
00:04:09.810 --> 00:04:11.140
I don't even know.

74
00:04:12.440 --> 00:04:13.840
Let's see what's happening.

75
00:04:13.840 --> 00:04:14.850
Looks like we have an error here.

76
00:04:17.880 --> 00:04:20.621
Cannot read property, [INAUDIBLE]

77
00:04:28.372 --> 00:04:30.080
&gt;&gt; Scott Moss: I forgot
to put a return here.

78
00:04:34.420 --> 00:04:35.800
&gt;&gt; Scott Moss: So that should be an error.

79
00:04:39.840 --> 00:04:40.959
&gt;&gt; Scott Moss: Let's try that.

80
00:04:45.640 --> 00:04:47.480
&gt;&gt; Scott Moss: There we go.

81
00:04:47.480 --> 00:04:49.560
So now it's like cool,
now I created a user.

82
00:04:56.220 --> 00:04:59.380
&gt;&gt; Scott Moss: She gotta
give me a password.

83
00:04:59.380 --> 00:05:02.760
Whereas before, no password it was yeah,
just go ahead and create it.

84
00:05:02.760 --> 00:05:09.420
Nope, now it's like,
&gt;&gt; Scott Moss: Have to give it a password.

85
00:05:09.420 --> 00:05:11.440
And you get a token.

86
00:05:15.420 --> 00:05:16.700
&gt;&gt; Scott Moss: Any questions on that?

87
00:05:22.120 --> 00:05:24.770
&gt;&gt; Scott Moss: I have to put that
return there or otherwise it broke.

88
00:05:24.770 --> 00:05:26.220
One return key where it broke everything.

89
00:05:27.560 --> 00:05:30.020
Because what happened
was it called next but

90
00:05:30.020 --> 00:05:33.343
there was no return in front of this so
it went down to this line anyway,

91
00:05:33.343 --> 00:05:35.650
but because there was
an error there was no user.

92
00:05:37.080 --> 00:05:40.900
So that's why I was like can't read
ID of user cuz it did call next.

93
00:05:40.900 --> 00:05:46.244
Which called next, but the execution in
this context can see the flow down here,

94
00:05:46.244 --> 00:05:48.770
cuz I forgot to return, or do an else.

95
00:05:49.970 --> 00:05:54.456
&gt;&gt; Scott Moss: And there's either an
error, or a user or an absence of a user,

96
00:05:54.456 --> 00:05:56.670
so that's why it freaked out.

97
00:05:58.380 --> 00:05:58.880
Cool.

98
00:06:00.000 --> 00:06:01.440
So just make sure you
put a return in there.

