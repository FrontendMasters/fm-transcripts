WEBVTT

1
00:00:00.000 --> 00:00:03.877
[MUSIC]

2
00:00:03.877 --> 00:00:07.480
&gt;&gt; Scott Moss: Just to recap cuz we're
gonna hop right into authentication.

3
00:00:07.480 --> 00:00:09.330
Let's go over what we're gonna do for
authentication.

4
00:00:09.330 --> 00:00:12.840
So what I wanna do is I wanna
just out this refactor or this

5
00:00:12.840 --> 00:00:15.690
abstraction that we made on step-100-fix
just in case anybody wants to see it.

6
00:00:17.950 --> 00:00:20.960
Well, as you can see, there's so
much more room to do these abstractions.

7
00:00:20.960 --> 00:00:22.330
I mean, so much more.

8
00:00:22.330 --> 00:00:26.270
I mean you could even, if you go
look at the controllers themselves,

9
00:00:26.270 --> 00:00:27.470
all these can be abstracted, too.

10
00:00:27.470 --> 00:00:29.420
They're literally all
doing the same thing.

11
00:00:29.420 --> 00:00:34.177
There's only one method in here
that's doing something different,

12
00:00:34.177 --> 00:00:38.220
and that's the post,
cuz it's populating, right here.

13
00:00:38.220 --> 00:00:41.367
That's the only thing it's doing
different, but that's just an option away.

14
00:00:41.367 --> 00:00:43.707
Just passing an option,
it's just like populating stuff.

15
00:00:43.707 --> 00:00:46.522
So you can even abstract
this stuff out so, hey,

16
00:00:46.522 --> 00:00:49.758
create routes also create
controller methods, done.

17
00:00:49.758 --> 00:00:50.877
It's the same thing.

18
00:00:57.677 --> 00:00:59.359
&gt;&gt; Scott Moss: So
I'm gonna check this stuff in.

19
00:01:11.298 --> 00:01:12.823
&gt;&gt; Scott Moss: It's really hard for
me to type cuz I'm so

20
00:01:12.823 --> 00:01:15.098
tall that there's an angle,
so that's why I'm messing up.

21
00:01:15.098 --> 00:01:19.497
push origin step-10-fix.

22
00:01:19.497 --> 00:01:23.097
So that's up there if you want to
pull it down, and check it out.

23
00:01:23.097 --> 00:01:28.638
So now, this is where it gets
kind of hard and tricky and

24
00:01:28.638 --> 00:01:33.456
like, a lot of stuff is
really going on here, so

25
00:01:33.456 --> 00:01:36.478
get checked out step-11.

26
00:01:36.478 --> 00:01:39.058
Man, there's 11 steps, that's crazy.

27
00:01:39.058 --> 00:01:41.797
So there's a lot of new
things happening in here.

28
00:01:47.498 --> 00:01:49.197
&gt;&gt; Scott Moss: So
I'm just gonna walk through,

29
00:01:49.197 --> 00:01:51.180
cuz I added tons of stuff in here.

30
00:01:51.180 --> 00:01:52.700
So I'm gonna walk through
all the stuff I just added.

31
00:01:54.280 --> 00:01:57.228
So if you restart the server,
first of all do an NPM install.

32
00:01:57.228 --> 00:02:00.387
I added tons of stuff, so
just make sure you do an NPM install.

33
00:02:00.387 --> 00:02:03.828
Cuz I'm 100% sure that you wanna
have the stuff that's in here.

34
00:02:06.927 --> 00:02:08.180
&gt;&gt; Scott Moss: So
that's the first thing you do.

35
00:02:08.180 --> 00:02:10.549
Make it a good habit,
is when you start switching branches, or

36
00:02:10.549 --> 00:02:12.347
pulling from GitHub,
or forking and cloning.

37
00:02:12.347 --> 00:02:16.327
And there's a package that JSON,
just run npm install.

38
00:02:18.987 --> 00:02:19.607
&gt;&gt; Scott Moss: Cool.

39
00:02:19.607 --> 00:02:22.262
So once again, you have that if you don't
NPM start I'm not sure if this will

40
00:02:22.262 --> 00:02:23.187
actually start up or not.

41
00:02:23.187 --> 00:02:26.230
I don't know if the code that you have
to fix is actually breaking this.

42
00:02:26.230 --> 00:02:26.730
But let's see.

43
00:02:28.170 --> 00:02:31.710
So one thing you notice is that
I put these log tags in here so

44
00:02:31.710 --> 00:02:35.360
you'll see you'll have better clear
visibility on what's being logged or not.

45
00:02:35.360 --> 00:02:38.260
So there's like some emojis or
something in there.

46
00:02:38.260 --> 00:02:41.956
So if you do logger.log now you
start it'll always have this tag on

47
00:02:41.956 --> 00:02:42.947
it that says log.

48
00:02:42.947 --> 00:02:45.990
And it's blue now, not purple.

49
00:02:47.670 --> 00:02:51.269
And if you did logger.error you'll
see like a thing that, it's red and

50
00:02:51.269 --> 00:02:51.980
have Xs on it.

51
00:02:51.980 --> 00:02:52.760
That tell you it's an error.

52
00:02:52.760 --> 00:02:54.320
So it's easy to spot out.

53
00:02:54.320 --> 00:02:57.900
So I added that to the logger that could
be conditionally turned on and off.

54
00:02:57.900 --> 00:03:02.230
I also added the ability
to seed the database.

55
00:03:02.230 --> 00:03:04.060
So when you start the database up,
it will seed it.

56
00:03:05.950 --> 00:03:07.150
It will tell you what it's seeded with.

57
00:03:07.150 --> 00:03:10.490
Seeded database with three posts,
three users, and three categories.

58
00:03:10.490 --> 00:03:12.210
But before it does that,
it will delete the database.

59
00:03:12.210 --> 00:03:16.163
It will drop the database first, then it
will seed the database with three things,

60
00:03:16.163 --> 00:03:17.969
so if I stop it, and start over again,

61
00:03:17.969 --> 00:03:20.808
there will still only ever be
three in there at a given time.

62
00:03:24.188 --> 00:03:25.994
&gt;&gt; Scott Moss: That also can
be conditionally turned on or

63
00:03:25.994 --> 00:03:28.060
off in our config file,
and I'll show you that.

64
00:03:31.065 --> 00:03:32.055
So that's there.

65
00:03:34.645 --> 00:03:37.565
Again if you wanna see some
advanced uses of promises and

66
00:03:37.565 --> 00:03:41.065
stuff, if you go look in
util/c.js the file that I've

67
00:03:41.065 --> 00:03:46.057
actually seeded in the database
is a hundred lines of promises.

68
00:03:46.057 --> 00:03:49.694
So you could check this stuff out if
you wanna see I'm doing stuff here.

69
00:03:53.895 --> 00:03:56.121
&gt;&gt; Scott Moss: But
that's just if you wanna look at it and

70
00:03:56.121 --> 00:04:01.234
then also
&gt;&gt; Scott Moss: If you go to

71
00:04:01.234 --> 00:04:06.253
config.js, I added some filter for
our JSON web tokens.

72
00:04:06.253 --> 00:04:11.450
So I'm adding how long I want them
to expire, in this case it's like

73
00:04:11.450 --> 00:04:16.565
ten days in minutes, so
it's like what, 14,000 minutes?

74
00:04:16.565 --> 00:04:18.910
I don't know, something like that.

75
00:04:18.910 --> 00:04:20.950
Maybe more, but ten days in minutes.

76
00:04:22.720 --> 00:04:26.084
And then, I'm adding a JSON web
token secret, so either pass it into

77
00:04:26.084 --> 00:04:29.408
the environment, or I'm just gonna
default to gumball, for now.

78
00:04:29.408 --> 00:04:33.107
You should not do this in production,
you should just put this in your file.

79
00:04:33.107 --> 00:04:34.600
It's just not something you should do.

80
00:04:34.600 --> 00:04:35.960
But we're not running
production right now.

81
00:04:35.960 --> 00:04:37.032
So I'm just gonna leave that there.

82
00:04:40.731 --> 00:04:44.600
&gt;&gt; Scott Moss: And then,
in development, there is a new file.

83
00:04:44.600 --> 00:04:47.578
This is actually out of a couple sets ago,
but there's a new for DB, and

84
00:04:47.578 --> 00:04:48.570
this is where we restore.

85
00:04:48.570 --> 00:04:52.938
We're just like, for development
we're gonna connect to this database.

86
00:04:52.938 --> 00:04:55.864
And then for testing, we're gonna
connect to the testing database,

87
00:04:55.864 --> 00:04:57.910
it's a different database.

88
00:04:57.910 --> 00:04:59.335
So this is why the config file is awesome,

89
00:04:59.335 --> 00:05:01.460
cuz we can change this stuff
off based on the environment.

90
00:05:01.460 --> 00:05:03.850
And we know these files get loaded in
depending on what environment we're

91
00:05:03.850 --> 00:05:05.750
running in, so
we don't gotta think about it.

92
00:05:05.750 --> 00:05:09.710
So when we run our tests, if we just say,
processing your V equals test and

93
00:05:09.710 --> 00:05:12.470
then we run the server, we know for
sure this file will get loaded up and

94
00:05:12.470 --> 00:05:14.140
merge in with the config file.

95
00:05:14.140 --> 00:05:17.897
And if we go to server.js you'll notice
it's using config.db.url which could

96
00:05:17.897 --> 00:05:21.337
either be that testing one or
the development one, we don't really care.

97
00:05:21.337 --> 00:05:22.740
It will do it depending
on the environment.

98
00:05:22.740 --> 00:05:24.140
So it's great.

99
00:05:24.140 --> 00:05:26.670
And right underneath it, if config.seed so

100
00:05:26.670 --> 00:05:31.170
if you said yes seed the database,
it'll seed the database.

101
00:05:31.170 --> 00:05:36.720
And that also is part of config so that's
you've got development it says seed: true.

102
00:05:36.720 --> 00:05:37.878
So in development seed the database.

103
00:05:41.217 --> 00:05:43.280
&gt;&gt; Scott Moss: So all that stuff is there.

104
00:05:43.280 --> 00:05:44.450
That stuff you will not be dealing with.

105
00:05:44.450 --> 00:05:45.258
That's the stuff that I added.

106
00:05:45.258 --> 00:05:47.477
So if you start looking at it and
you're wondering what's going on,

107
00:05:47.477 --> 00:05:49.867
that's the stuff that I added that you
don't have to work with right now.

108
00:05:49.867 --> 00:05:53.628
What we're gonna be focusing on
&gt;&gt; Scott Moss: Is authentication.

109
00:05:53.628 --> 00:05:55.788
So now there's a new folder called auth,

110
00:05:55.788 --> 00:05:58.328
and there's just a lot of
stuff going on in here.

111
00:05:58.328 --> 00:06:01.147
So let's start at the beginning,
auth.js, so

112
00:06:01.147 --> 00:06:05.190
here's what we're gonna do
authorization web token stuff.

113
00:06:05.190 --> 00:06:08.110
Anything relates to authentication
is gonna happen in here.

114
00:06:08.110 --> 00:06:10.080
Where we gonna use it
elsewhere in the application.

115
00:06:10.080 --> 00:06:13.350
What the creation and the definition
of is gonna happen in this file.

116
00:06:13.350 --> 00:06:16.500
As far as like the middleware,
the functions, the signing,

117
00:06:16.500 --> 00:06:18.520
the checking,
all this stuff is gonna happen here.

118
00:06:19.640 --> 00:06:21.290
So let's walkthrough some of the packages.

119
00:06:21.290 --> 00:06:28.360
jsonwebtoken that's this package,
right here.

120
00:06:28.360 --> 00:06:31.000
It's not the official JSON web token.

121
00:06:31.000 --> 00:06:32.140
I don't think if there's
an official one but

122
00:06:32.140 --> 00:06:33.670
it's the one that you should use for
the node.

123
00:06:33.670 --> 00:06:38.500
It's called JSON web token and this is
the one we're gonna use to sign and

124
00:06:38.500 --> 00:06:40.060
verify our JSON web tokens.

125
00:06:42.960 --> 00:06:47.459
expressJwt is a rapper
around jsomwebtoken and

126
00:06:47.459 --> 00:06:52.300
all it does is it just
verifies your tokens for you.

127
00:06:52.300 --> 00:06:56.121
We can just call jsomwebtoken.verify
ourself but express jwt,

128
00:06:56.121 --> 00:07:00.577
it makes it work really great with Express
Middleware so we know how to do it.

129
00:07:00.577 --> 00:07:02.060
And it's build by the same two people.

130
00:07:02.060 --> 00:07:05.931
So of zero bill jwt,
they also built expressJwt, so

131
00:07:05.931 --> 00:07:08.080
they built both of them so
they work well with each other.

132
00:07:09.450 --> 00:07:10.350
Always getting our config.

133
00:07:10.350 --> 00:07:13.220
And then, here, over here,
we have this check config right here.

134
00:07:13.220 --> 00:07:17.238
This returns in Middleware function for
us, this is why expressJwt is awesome.

135
00:07:17.238 --> 00:07:22.693
They pass in the secret and it returns
the middleware function that can

136
00:07:22.693 --> 00:07:28.898
look on the request of authorization and
determine if the token is valid or not.

137
00:07:28.898 --> 00:07:30.578
And then, we just get our user model here.

138
00:07:30.578 --> 00:07:33.140
Cuz we're gonna need our user model for
authentication purposes, of course.

139
00:07:34.260 --> 00:07:38.400
So if you scroll to, there's like a couple
of function that is not built out.

140
00:07:38.400 --> 00:07:42.030
Some halfway built out, the word is
fully built out as this signToken one.

141
00:07:42.030 --> 00:07:44.850
So this is what a signToken looks like.

142
00:07:44.850 --> 00:07:47.330
You can say jwt.sign.

143
00:07:47.330 --> 00:07:50.800
And all we do is we create
an object with an _id property.

144
00:07:50.800 --> 00:07:54.138
I use _id because Mango uses _id.

145
00:07:54.138 --> 00:07:56.906
That's all the reason I put _id there.

146
00:07:56.906 --> 00:07:57.827
I mean it's just an object.

147
00:07:57.827 --> 00:07:59.870
You can put whatever you want here.

148
00:07:59.870 --> 00:08:01.730
But I just put _id.

149
00:08:01.730 --> 00:08:04.810
Although I rather have it just be id, but

150
00:08:04.810 --> 00:08:07.750
if the database is gonna say _id,
I'm gonna make sure it's the same.

151
00:08:07.750 --> 00:08:11.540
I ran into so many problems, where I'm
like, I hate using _id, I'm gonna use id.

152
00:08:11.540 --> 00:08:16.540
Then I get errors because of mismatched
things, so I just keep it uniform.

153
00:08:16.540 --> 00:08:18.780
When I refer to id I'm talking about _id.

154
00:08:18.780 --> 00:08:22.383
So I hit that, and
then we also need to pass in this secret,

155
00:08:22.383 --> 00:08:26.518
which is config.secrets.jwt,
we've said that in our config.

156
00:08:26.518 --> 00:08:29.137
And then, here's the option to
where we can expire this thing,

157
00:08:29.137 --> 00:08:32.050
I also put this in the config,
remember I had the expire time.

158
00:08:32.050 --> 00:08:35.800
So expires in minutes, I put like
ten days in minutes right there.

159
00:08:38.420 --> 00:08:41.028
So that,
it's called a return to sign token.

160
00:08:41.028 --> 00:08:43.320
If it signs, it will return the string.

161
00:08:43.320 --> 00:08:44.768
So we'll use that as a utility method.

