WEBVTT

1
00:00:00.000 --> 00:00:03.807
[MUSIC]

2
00:00:03.807 --> 00:00:06.991
&gt;&gt; Speaker 1: Now we're gonna
start getting into Mongo, and

3
00:00:06.991 --> 00:00:10.660
actually saving data and
mess around with that thing.

4
00:00:10.660 --> 00:00:11.750
And figuring out how it works and

5
00:00:11.750 --> 00:00:15.000
how to connect it to our API and
get things going.

6
00:00:15.000 --> 00:00:17.340
Before I get started were there any
questions about what we already covered

7
00:00:17.340 --> 00:00:18.520
before lunch today?

8
00:00:18.520 --> 00:00:20.356
That you might have missed
that you might wanna ask now?

9
00:00:23.631 --> 00:00:24.131
&gt;&gt; Speaker 1: Nope.

10
00:00:25.690 --> 00:00:27.270
Well, all right, let's get into Mongo.

11
00:00:27.270 --> 00:00:33.260
So does everybody have, who doesn't
have Mongo installed or hasn't tried it?

12
00:00:34.320 --> 00:00:35.650
Tried to execute it, try to run it?

13
00:00:37.380 --> 00:00:40.900
Cuz if you didn't, you might be
surprised that it probably doesn't work.

14
00:00:44.290 --> 00:00:47.250
Okay, good so far,

15
00:00:47.250 --> 00:00:51.500
hopefully everybody online is in tuning
in just downloaded it and installed it.

16
00:00:53.870 --> 00:00:58.780
Great so, Mongo is a NoSql document store,

17
00:00:59.920 --> 00:01:01.530
who here wants to give me
the definitions of NoSql?

18
00:01:03.080 --> 00:01:04.965
&gt;&gt; Speaker 2: Not meaning sequel.

19
00:01:04.965 --> 00:01:06.867
&gt;&gt; [LAUGH]
&gt;&gt; Speaker 1: Sorry, it's not,

20
00:01:06.867 --> 00:01:09.530
it's not sequel meaning
it's non-relational.

21
00:01:09.530 --> 00:01:12.820
It's not a relational database,
we don't get those guarantees.

22
00:01:13.890 --> 00:01:16.690
Those fixed with columns and
stuff like that.

23
00:01:16.690 --> 00:01:21.570
It's just a document store, meaning it's
just a basket where we can throw stuff in.

24
00:01:21.570 --> 00:01:23.110
That's pretty much what
a document store means.

25
00:01:25.100 --> 00:01:27.300
We don't have to model our data.

26
00:01:27.300 --> 00:01:29.860
And we can just throw JSON in it and
ask for it later.

27
00:01:29.860 --> 00:01:33.990
That's Mongo, just give me some JSON,
I'll save it and

28
00:01:33.990 --> 00:01:36.150
then I'll give it to you
later when you ask for it.

29
00:01:36.150 --> 00:01:37.591
That's pretty much what Mongo is.

30
00:01:41.045 --> 00:01:44.308
&gt;&gt; Speaker 1: We need a way to persist
our API data, so we'll be using Mongo for

31
00:01:44.308 --> 00:01:45.343
that, obviously.

32
00:01:47.568 --> 00:01:50.130
&gt;&gt; Speaker 1: So it's actually
pretty simple to set up and use.

33
00:01:51.320 --> 00:01:53.110
Hopefully everybody, like I said,
already downloaded it.

34
00:01:54.310 --> 00:02:00.060
Note that it's not the best Database or

35
00:02:00.060 --> 00:02:04.280
options for every situation just like
anything else out there, but for the sake

36
00:02:04.280 --> 00:02:07.240
of this project it's perfect it's gonna
be great for what we're using it for.

37
00:02:10.480 --> 00:02:17.260
So, if you have Mongo installed, then you
can type in this command mongod or mongod.

38
00:02:18.410 --> 00:02:21.480
What people say in a terminal
window to start the database.

39
00:02:21.480 --> 00:02:27.716
So like if we go here, open up a new
shell, and type in mongod hit enter,

40
00:02:27.716 --> 00:02:33.220
you should see this something like this.

41
00:02:33.220 --> 00:02:34.236
Pretty much like on port 27017.

42
00:02:36.530 --> 00:02:40.150
So if you're in Windows you might
have to use the execution path

43
00:02:40.150 --> 00:02:40.920
a little differently.

44
00:02:40.920 --> 00:02:45.990
But when you execute it and you don't
see this and it's not hanging, you get

45
00:02:45.990 --> 00:02:48.470
an error and it just stops then you didn't
do something and something's not right.

46
00:02:49.950 --> 00:02:52.729
So if you don't have that then you didn't
try to run Mongo and it's not working.

47
00:02:54.650 --> 00:02:58.059
So this just started the Mongo
database on that port on that server.

48
00:03:00.951 --> 00:03:02.760
&gt;&gt; Speaker 1: So
everybody should have that.

49
00:03:02.760 --> 00:03:08.140
The next thing is we could also interact
with Mongo that we just started through

50
00:03:08.140 --> 00:03:12.090
what's called a Mongo shell that it ship
with, and it's actually pretty awesome.

51
00:03:12.090 --> 00:03:17.140
So to do that, we can open up another
window with Mongo still running,

52
00:03:17.140 --> 00:03:18.000
it's still running over here.

53
00:03:19.040 --> 00:03:24.140
We can open another window and we can
just type in mongo without the d and

54
00:03:24.140 --> 00:03:27.950
if I spelled it right it'll
say something like this.

55
00:03:27.950 --> 00:03:29.410
It'll tell you what shell
version you're on and

56
00:03:29.410 --> 00:03:33.250
it will automatically connect it like
some database usually test as a default.

57
00:03:33.250 --> 00:03:37.800
This is kind of like our rebel,
we can do JavaScript like things in here.

58
00:03:39.560 --> 00:03:41.770
Because Mongo really runs off JavaScript,

59
00:03:41.770 --> 00:03:44.470
it's built with JavaScript,
we can do JavaScript things.

60
00:03:44.470 --> 00:03:47.470
So this is how we can interact
with our Mongo so for

61
00:03:47.470 --> 00:03:50.220
instance if I wanted to see
all the databases that I have.

62
00:03:50.220 --> 00:03:53.170
I can type in show db's and
it would show all the databases and

63
00:03:53.170 --> 00:03:56.050
all their sizes on my machine.

64
00:03:56.050 --> 00:03:57.290
I had like 30.

65
00:03:57.290 --> 00:03:58.940
I had to go delete them all.

66
00:03:58.940 --> 00:04:01.250
Cuz I had some other databases on here.

67
00:04:01.250 --> 00:04:03.180
So these are the three
databases on my machine.

68
00:04:05.540 --> 00:04:07.610
There's a whole bunch of
other stuff you can type in.

69
00:04:07.610 --> 00:04:09.230
You can just type in mongo--help.

70
00:04:09.230 --> 00:04:11.820
It'll show you all the types of stuff.

71
00:04:11.820 --> 00:04:13.940
So yeah, that's the Mongo shell.

72
00:04:13.940 --> 00:04:16.240
We can do JavaScript like things in
here to interact with that database,

73
00:04:16.240 --> 00:04:20.550
show dbs is just one thing,
show all the databases.

74
00:04:23.640 --> 00:04:26.570
Cool, so once you do that, it will
connect to the test database by default,

75
00:04:26.570 --> 00:04:29.030
which, you saw when I did it.

76
00:04:29.030 --> 00:04:32.160
So now we can use JavaScript
to run queries against

77
00:04:32.160 --> 00:04:33.990
whatever database we connect to.

78
00:04:33.990 --> 00:04:35.510
So what we're gonna do is exercise.

79
00:04:35.510 --> 00:04:36.790
And if you have Mongo running,

80
00:04:36.790 --> 00:04:39.900
you can all just do this with
me together on your machines.

81
00:04:39.900 --> 00:04:41.930
We're gonna create our first collection.

82
00:04:41.930 --> 00:04:43.250
So a collection is like a table.

83
00:04:43.250 --> 00:04:49.730
Just think of it as a place where
Mongo is going to store alike things.

84
00:04:49.730 --> 00:04:50.740
So it's kind of like a table.

85
00:04:50.740 --> 00:04:54.220
But I have a collection of people,
I have a collection of dogs,

86
00:04:54.220 --> 00:04:57.320
a collection of to do's, so
I varied like data pieces.

87
00:04:58.410 --> 00:05:01.020
So it's like a group of
data is modeled sameish

88
00:05:02.140 --> 00:05:04.910
actually that's not a typo I actually
meant to spell it that way " sameish".

89
00:05:06.370 --> 00:05:08.505
So, that should be a word.

90
00:05:08.505 --> 00:05:11.810
So, lets just do this together so
the first thing we're gonna do is.

91
00:05:11.810 --> 00:05:15.830
We're going to make a data base and we're
going to switch to it at the same time.

92
00:05:15.830 --> 00:05:17.720
So to do that we can just say they used.

93
00:05:17.720 --> 00:05:19.880
And then whatever name for
the database you want.

94
00:05:19.880 --> 00:05:25.020
In this case, I'll call it puppies.

95
00:05:26.830 --> 00:05:31.680
So, by saying use puppies, I am going
to make a database called puppies and

96
00:05:31.680 --> 00:05:34.950
then now I have switched
to it inside the REPL.

97
00:05:34.950 --> 00:05:39.770
By the way, when I say REPL, I mean read,
evaluate, print, loop, REPL.

98
00:05:41.820 --> 00:05:44.350
So, I made a database called puppies,
you can name it whatever you want.

99
00:05:44.350 --> 00:05:47.890
Now if I say show db's,

100
00:05:47.890 --> 00:05:50.230
I guess it won't show until I close it and
open it back up I guess.

101
00:05:50.230 --> 00:05:51.330
Let's see.

102
00:05:53.050 --> 00:05:53.800
Still not showing up.

103
00:05:53.800 --> 00:05:56.290
But, I guess I had to put something in it,
but it's there.

104
00:05:56.290 --> 00:06:01.680
So we're gonna say use Puppies, sweet.

105
00:06:04.220 --> 00:06:07.560
The next thing I'm going to do,
is I'm going to create a collection and

106
00:06:07.560 --> 00:06:10.850
the example says to do's but,
you do whatever you want.

107
00:06:10.850 --> 00:06:14.690
This example is going to be whatever
arbitrary string that you want, so

108
00:06:14.690 --> 00:06:16.280
to do that you use db.

109
00:06:17.666 --> 00:06:21.811
CreateCollection CamelCase.

110
00:06:26.307 --> 00:06:31.060
&gt;&gt; Speaker 1: Collection, and
then just pass in a string.

111
00:06:31.060 --> 00:06:37.573
So I'm gonna make a collection called
&gt;&gt; Speaker 1: toys,

112
00:06:37.573 --> 00:06:42.020
and then you'll get this thing that says,
ok.

113
00:06:42.020 --> 00:06:42.688
That means it did it.

114
00:06:48.798 --> 00:06:51.426
&gt;&gt; Speaker 1: All right, and
then to verify that you can say,

115
00:06:51.426 --> 00:06:55.650
show collections and then you should
see the collection that you just made.

116
00:06:55.650 --> 00:06:56.618
Right under system.indexes.

117
00:06:56.618 --> 00:07:03.180
Indices, indexes whatever.

118
00:07:03.180 --> 00:07:05.414
Everybody got that?
You've made a collection,

119
00:07:05.414 --> 00:07:08.395
it said okay,
then you said show collections and

120
00:07:08.395 --> 00:07:11.600
then it shows you the collection
that you just made.

121
00:07:16.560 --> 00:07:21.830
&gt;&gt; Speaker 1: Cool, so then we're going
to insert Document into that collection.

122
00:07:21.830 --> 00:07:23.910
So document is an instance
of a collection.

123
00:07:23.910 --> 00:07:26.120
It's an actual thing,
the data that we'll be doing.

124
00:07:26.120 --> 00:07:29.510
It's the resources that we'll be
using in our APIs, the documents.

125
00:07:29.510 --> 00:07:32.380
So we're gonna insert our document,
so let's say db.

126
00:07:32.380 --> 00:07:34.700
the name of our database.

127
00:07:34.700 --> 00:07:35.895
In my case it's called puppies.

128
00:07:35.895 --> 00:07:40.270
.insert, that's a function,

129
00:07:40.270 --> 00:07:43.180
and you just pass in an object here,
whatever you want to.

130
00:07:43.180 --> 00:07:48.200
So since this is, I'm sorry,
not db.puppies, I'm sorry,

131
00:07:48.200 --> 00:07:53.310
the name of the collection in this case,
toys, db.toys.insert.

132
00:07:53.310 --> 00:07:58.925
And I'll give it a name, it's a yoyo,

133
00:07:58.925 --> 00:08:04.720
dogs like yoyos and a color, it's red.

134
00:08:04.720 --> 00:08:08.950
And if you hit enter,
you won't see anything.

135
00:08:10.340 --> 00:08:11.460
It won't say anything.

136
00:08:11.460 --> 00:08:17.990
It will just go to the next line.

137
00:08:17.990 --> 00:08:20.720
And if it's an error,
then you probably messed up.

138
00:08:20.720 --> 00:08:22.680
If it's not an error,
you're probably good.

139
00:08:25.230 --> 00:08:26.800
Yeah, we'll figure out
right on this next command.

140
00:08:26.800 --> 00:08:27.620
So the next command is,

141
00:08:27.620 --> 00:08:30.540
we're just going to query that
collection to see what's in there.

142
00:08:30.540 --> 00:08:34.010
So to do that, the easiest way is to db.,
the name of your collection.

143
00:08:34.010 --> 00:08:36.280
In my case, again, this is toys.

144
00:08:36.280 --> 00:08:39.720
And I can say .find with no arguments.

145
00:08:39.720 --> 00:08:42.960
And I can execute that, and then it's
just put back the thing, the, the,

146
00:08:42.960 --> 00:08:46.010
all the instant, all the documents in
that collection which should just be one.

147
00:08:55.400 --> 00:08:56.870
Everybody see that?

148
00:08:56.870 --> 00:08:59.505
Everybody be able to query their
document that they just saved?

149
00:09:07.569 --> 00:09:13.322
&gt;&gt; Speaker 1: Also, if you're on Mac,
there's this program called Robomongo,

150
00:09:13.322 --> 00:09:19.390
which is just like a GUI for Mongo so
you can connect to it, go in there.

151
00:09:19.390 --> 00:09:20.835
Here's my puppies database.

152
00:09:20.835 --> 00:09:22.730
I can go to collections.

153
00:09:22.730 --> 00:09:25.165
I can go to toys.

154
00:09:25.165 --> 00:09:28.230
[COUGH]
And

155
00:09:28.230 --> 00:09:32.320
then I can see the toy that
I just made right there.

156
00:09:32.320 --> 00:09:38.650
So this is GUI you can use,
it's called Robomongo, Robomongo.

157
00:09:41.945 --> 00:09:45.228
I'm not sure if they have it for Windows
or not but it's definitely on Mac and

158
00:09:45.228 --> 00:09:46.115
it's free, okay.

159
00:09:54.391 --> 00:09:56.717
&gt;&gt; Speaker 1: So
that's an intro into Mongo.

160
00:09:56.717 --> 00:09:59.407
I don't know how much experience
people have with databases, but

161
00:09:59.407 --> 00:10:01.607
that's pretty easy to save something
in a database in my opinion.

162
00:10:01.607 --> 00:10:06.527
Don't have to worry about migrations and
stuff like that,

163
00:10:06.527 --> 00:10:07.697
you just throw some data in it.

164
00:10:08.770 --> 00:10:09.519
And ask for it later.

165
00:10:11.950 --> 00:10:14.676
&gt;&gt; Speaker 1: That's why I chose
this database for this exercise,

166
00:10:14.676 --> 00:10:16.682
it's pretty easy to get started with.

167
00:10:21.812 --> 00:10:22.860
&gt;&gt; Speaker 1: Okay.

168
00:10:22.860 --> 00:10:25.150
So here's just like a walk-through
of what we were doing.

169
00:10:25.150 --> 00:10:29.730
So by saying the keyword use followed
by the name of the database we want

170
00:10:29.730 --> 00:10:32.250
Like I said,
Mongo will switch to it if it exists.

171
00:10:32.250 --> 00:10:34.870
If it doesn't exist,
it'll create it and switch to it.

172
00:10:34.870 --> 00:10:38.190
So run those commands one by
one until we get the stuff.

