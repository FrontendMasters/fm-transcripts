WEBVTT

1
00:00:00.000 --> 00:00:04.106
[MUSIC]

2
00:00:04.106 --> 00:00:04.788
&gt;&gt; Speaker 1: All right.
So,

3
00:00:04.788 --> 00:00:07.518
now what we'll do is
check out the step three.

4
00:00:11.709 --> 00:00:18.284
&gt;&gt; Speaker 1: And [SOUND]
&gt;&gt; Speaker 1: I gotta do a stash.

5
00:00:24.780 --> 00:00:25.280
&gt;&gt; Speaker 1: There we go.

6
00:00:26.350 --> 00:00:27.340
Yeah, if you check out the step three,

7
00:00:27.340 --> 00:00:32.360
and go into server, server js,
it's got a lot of stuff going on in here.

8
00:00:32.360 --> 00:00:37.774
So, your objective is to use a new
method on the app called params.

9
00:00:37.774 --> 00:00:42.440
So using app.params,
we're going to abstract some common

10
00:00:42.440 --> 00:00:44.210
functionality we've been
doing this whole time.

11
00:00:44.210 --> 00:00:49.140
So if you notice on our routes,
every route that has ID property,

12
00:00:49.140 --> 00:00:52.548
we had to find it to do with that id.

13
00:00:52.548 --> 00:00:56.330
So, bit of piece of common functionality.

14
00:00:56.330 --> 00:01:01.940
We can use a middle ware function to do
that first, before it gets to that route.

15
00:01:01.940 --> 00:01:06.370
So, by time that route runs,
we can just access request.lion and

16
00:01:06.370 --> 00:01:09.490
get the appropriate lion
without having to look for it.

17
00:01:09.490 --> 00:01:12.168
So, that's what we'll do with app.params.

18
00:01:13.492 --> 00:01:14.750
&gt;&gt; Speaker 1: And
I'll show you an example of that.

19
00:01:14.750 --> 00:01:19.664
Actually, is it, yeah,
that should be params, or is it param?

20
00:01:19.664 --> 00:01:21.593
Hold on, let me look.

21
00:01:21.593 --> 00:01:22.310
Don't even know.

22
00:01:22.310 --> 00:01:25.890
App dot, it's param, it's param.

23
00:01:25.890 --> 00:01:29.041
No pluralize, okay?

24
00:01:29.041 --> 00:01:35.770
So you'll use app.param here,
which will look for anything.

25
00:01:35.770 --> 00:01:40.353
It will, this function's gonna run
if it detects a URL that's using

26
00:01:40.353 --> 00:01:43.230
a query parameter with the given name.

27
00:01:43.230 --> 00:01:48.282
So, if we hit the URL that has slash ID,
it's gonna run this cuz it's ID.

28
00:01:48.282 --> 00:01:50.166
If I change this name to thing,

29
00:01:50.166 --> 00:01:54.400
then this will never run cuz we
don't have a slash thing here.

30
00:01:54.400 --> 00:01:56.130
But if I said, yeah, now we do.

31
00:01:56.130 --> 00:01:58.221
Then that will run.

32
00:02:02.915 --> 00:02:08.140
&gt;&gt; Speaker 2: So, the param method,
that's built into Express.

33
00:02:08.140 --> 00:02:08.640
&gt;&gt; Speaker 1: Yes.

34
00:02:08.640 --> 00:02:10.518
&gt;&gt; Speaker 2: It's wrapping around use,
right?

35
00:02:10.518 --> 00:02:11.387
&gt;&gt; Speaker 1: It's-
&gt;&gt; Speaker 2: I mean,

36
00:02:11.387 --> 00:02:13.590
it's adding middleware, right?

37
00:02:13.590 --> 00:02:15.610
&gt;&gt; Speaker 1: It's adding middleware,
that's exactly what it's doing.

38
00:02:15.610 --> 00:02:17.280
It's adding middleware.

39
00:02:17.280 --> 00:02:20.800
So what it does, it gives you the request,
the response, the next, and

40
00:02:20.800 --> 00:02:25.100
then it gives you the value of that
ID as a fourth argument right there.

41
00:02:25.100 --> 00:02:26.246
So it gives you the value.

42
00:02:26.246 --> 00:02:29.860
So what we can do inside of here is
fill this out and find the lion based.

43
00:02:29.860 --> 00:02:35.222
So pretty much what we're doing,
where were we doing this?

44
00:02:35.222 --> 00:02:36.630
&gt;&gt; Speaker 2: Right there.

45
00:02:36.630 --> 00:02:37.374
&gt;&gt; Speaker 1: I.

46
00:02:37.374 --> 00:02:38.379
So, I'm sorry.
So, yeah,

47
00:02:38.379 --> 00:02:42.692
if you look at the last step we
were doing in this app.getlions ID,

48
00:02:42.692 --> 00:02:48.253
we were finding the lion by that given ID
in the would do that exact same thing.

49
00:02:48.253 --> 00:02:52.222
But here, and then we would attach
the result of that to dot lion.

50
00:02:52.222 --> 00:02:55.712
So by time I got inside of here,
if I counsel that log direct.lion,

51
00:02:55.712 --> 00:02:57.800
I will see the lion object.

52
00:02:57.800 --> 00:02:58.560
&gt;&gt; Speaker 2: Yes?
And that

53
00:02:58.560 --> 00:03:00.965
would apply to anyone
that's got the ID program?

54
00:03:00.965 --> 00:03:02.520
&gt;&gt; Speaker 1: Yeah,
it would apply to any single one that's

55
00:03:02.520 --> 00:03:03.678
got the id property of it.

56
00:03:04.830 --> 00:03:06.020
&gt;&gt; Speaker 2: That's really cool.

57
00:03:06.020 --> 00:03:08.891
&gt;&gt; Speaker 1: Yeah, so by time I come
in here if I just say what's rec.lion,

58
00:03:08.891 --> 00:03:09.660
it'll tell me.

59
00:03:09.660 --> 00:03:13.920
So this is a great place if you like
database queries on a parameter.

60
00:03:13.920 --> 00:03:15.210
It's like, here's a user id.

61
00:03:15.210 --> 00:03:19.280
Let me find the user first before I
pass it off to the actual function, and

62
00:03:19.280 --> 00:03:20.530
attach it to the request object.

63
00:03:20.530 --> 00:03:21.380
Cuz it's just an object.

64
00:03:22.420 --> 00:03:25.630
So attach it to the request object,
and remember to call next.

65
00:03:25.630 --> 00:03:27.830
So that's one thing you'll do.

66
00:03:27.830 --> 00:03:30.710
The next thing you'll do is gonna create
a middleware function to catch and

67
00:03:30.710 --> 00:03:31.470
handle errors.

68
00:03:32.490 --> 00:03:34.406
Register it as the last
middleware in the app.

69
00:03:34.406 --> 00:03:38.150
So I've showed you how to do that,
but make sure we have that, catch and

70
00:03:38.150 --> 00:03:38.850
handle errors.

71
00:03:38.850 --> 00:03:43.400
And then, third thing you're going to
do is create a route middleware for

72
00:03:43.400 --> 00:03:46.160
the post lions that will increment and

73
00:03:46.160 --> 00:03:49.180
add an ID to the incoming new
lion object to direct body.

74
00:03:49.180 --> 00:03:50.062
So what I mean by that is,

75
00:03:50.062 --> 00:03:53.232
if you go look at the post
&gt;&gt; Speaker 1: this one right here.

76
00:03:53.232 --> 00:03:56.690
I took away the functionality
of incrementing the ID,

77
00:03:56.690 --> 00:04:00.350
cuz post we increment the ID,
instead of doing it here.

78
00:04:00.350 --> 00:04:02.810
Let's just make a piece of middleware, and

79
00:04:02.810 --> 00:04:06.980
I already gave it a name,
updateId, which is here.

80
00:04:08.260 --> 00:04:12.426
So if you fill out updateId,
you should have it increment the Id here.

81
00:04:15.000 --> 00:04:15.648
&gt;&gt; Speaker 1: Right?

82
00:04:15.648 --> 00:04:23.520
And attach the actual update object or
the new thing to the body.

83
00:04:23.520 --> 00:04:26.000
So if you look at rec.body
inside of this function,

84
00:04:26.000 --> 00:04:28.850
you'll get the lion that
we're posting to the server.

85
00:04:28.850 --> 00:04:30.720
It doesn't have ID property on it.

86
00:04:30.720 --> 00:04:35.490
Increment the ID right here on line 19,
and add it to the rec.body, and

87
00:04:35.490 --> 00:04:36.950
then call next.

88
00:04:36.950 --> 00:04:40.010
So, therefore, by time you get
to this post, I can say, yeah,

89
00:04:40.010 --> 00:04:41.160
the lion is rec.body.

90
00:04:41.160 --> 00:04:43.190
And I already know it
has a ID property on it.

91
00:04:46.701 --> 00:04:48.730
&gt;&gt; Speaker 1: So
those are three things you're gonna do.

92
00:04:48.730 --> 00:04:51.320
And I noticed, I literally just
told you the last, two minutes ago.

93
00:04:51.320 --> 00:04:54.130
I was gonna use this syntax for
the middleware.

94
00:04:54.130 --> 00:04:55.840
But I'm using this syntax.

95
00:04:55.840 --> 00:04:58.510
So, if you want to change it,
you can change it.

96
00:04:58.510 --> 00:05:02.275
But don't get freaked out if you
see that it's not doing this,

97
00:05:02.275 --> 00:05:04.706
cuz it's only doing that.

98
00:05:04.706 --> 00:05:07.440
CUz I'm just returning,
I'm not returning a function here,

99
00:05:07.440 --> 00:05:08.895
it's just the function itself.

100
00:05:11.872 --> 00:05:13.320
&gt;&gt; Speaker 1: Cool.
So, everybody do that,

101
00:05:13.320 --> 00:05:15.350
we'll have 30 minutes and
then we'll get back.

102
00:05:15.350 --> 00:05:16.960
There was on quick question.

103
00:05:16.960 --> 00:05:17.831
Yes?
&gt;&gt; Speaker 2: Can you,

104
00:05:17.831 --> 00:05:22.215
why would you recommend Morgan
versus Bunion for logging?

105
00:05:22.215 --> 00:05:24.340
&gt;&gt; Speaker 1: Just cuz I just us Morgan,
that's what I've always used.

106
00:05:24.340 --> 00:05:25.530
I think Bunyan's awesome, too.

107
00:05:25.530 --> 00:05:27.880
It's just, Morgan worked for
me, so I just kept using it.

108
00:05:27.880 --> 00:05:30.120
I don't recommend either way.

109
00:05:30.120 --> 00:05:31.160
It's just what I've used.

110
00:05:31.160 --> 00:05:32.650
So if you wanna use Bunyan use it.

111
00:05:32.650 --> 00:05:33.796
It might even be better.

112
00:05:38.190 --> 00:05:40.700
&gt;&gt; Speaker 2: ID is hiding the other
ID variable in the closure.

113
00:05:40.700 --> 00:05:43.569
Well, what's up with that?

114
00:05:43.569 --> 00:05:45.422
Is hiding the other ID variable.

115
00:05:48.504 --> 00:05:50.810
&gt;&gt; Speaker 1: I'm not too sure exactly
what it's saying, but let me see.

116
00:05:51.940 --> 00:05:58.400
The ID that we pass in here,
it's hiding the other id enclosure.

117
00:05:59.960 --> 00:06:00.460
This one.

118
00:06:01.710 --> 00:06:03.124
I see, I see.

119
00:06:03.124 --> 00:06:06.209
Yeah, because the names, yeah, so,

120
00:06:06.209 --> 00:06:10.424
the ID here is not referencing
the ID outside of here.

121
00:06:16.351 --> 00:06:18.868
&gt;&gt; Speaker 1: Which is fine because we're
not incrementing the outside ID in this

122
00:06:18.868 --> 00:06:19.660
param anyway.

123
00:06:19.660 --> 00:06:21.189
So it's fine.
But if you wanna call it something else,

124
00:06:21.189 --> 00:06:23.670
you can totally,
you can call it whatever you want here.

125
00:06:23.670 --> 00:06:25.800
Other ID if that makes you feel better.

