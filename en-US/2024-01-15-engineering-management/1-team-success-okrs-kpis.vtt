WEBVTT

1
00:00:00.140 --> 00:00:04.210
So let's dive into going back
to 101 of Jim setting us up for

2
00:00:04.210 --> 00:00:08.908
that first 30 days,
maybe picking it up around the 60-90 days,

3
00:00:08.908 --> 00:00:13.020
maybe it's within that first
year of being a manager.

4
00:00:13.020 --> 00:00:15.001
You've kind of got the lay of the land,

5
00:00:15.001 --> 00:00:17.940
I'm saying kind of because
you don't know everything.

6
00:00:17.940 --> 00:00:22.454
But you have enough to start to think
about, how do I help set my team up for

7
00:00:22.454 --> 00:00:23.124
success?

8
00:00:25.587 --> 00:00:28.094
I like to think about that in
a couple of ways here, is,

9
00:00:28.094 --> 00:00:31.092
you're probably thinking about
what's the vision for my team,

10
00:00:31.092 --> 00:00:35.060
like what are some of the high level
goals that I should be thinking about?

11
00:00:35.060 --> 00:00:39.630
And then obviously very tactical roadmaps,
there's work getting done.

12
00:00:39.630 --> 00:00:43.680
So maybe it's you're planning for
quarterly plans or you're executing

13
00:00:43.680 --> 00:00:47.872
on sprints, but you're thinking about
the work and planning around that.

14
00:00:50.223 --> 00:00:56.398
So I wanna think about team vision,
I think about this at a very high level.

15
00:00:56.398 --> 00:01:01.281
It outlines your goals and really,
why do you exist as a team?

16
00:01:01.281 --> 00:01:07.984
It's not getting in the weeds of well, we
build this feature or we own this product.

17
00:01:07.984 --> 00:01:12.384
It may touch on that a little bit but
it's meant to be very high level.

18
00:01:12.384 --> 00:01:17.377
So the people on your team know
why you exist, even your partners,

19
00:01:17.377 --> 00:01:19.259
they know why you exist.

20
00:01:19.259 --> 00:01:23.230
It should be really clear and
concise at a high level, and

21
00:01:23.230 --> 00:01:28.463
this helps really articulate what the type
of work that you do on your team.

22
00:01:28.463 --> 00:01:33.242
Whereas the roadmap, it's so
much more detailed, it's done more often,

23
00:01:33.242 --> 00:01:37.646
maybe it is that quarterly time or
maybe it's two-week sprints, but

24
00:01:37.646 --> 00:01:42.760
it's getting very practical on
the actual work that you are doing.

25
00:01:42.760 --> 00:01:47.670
You're outlining milestones, hopefully
timelines, engineering is hard to estimate

26
00:01:47.670 --> 00:01:52.730
but hopefully you're able to put timelines
to when things are being delivered.

27
00:01:52.730 --> 00:01:56.517
Who's owning it,
which engineers like running that project,

28
00:01:56.517 --> 00:01:59.333
you're thinking about
those types of things.

29
00:01:59.333 --> 00:02:02.351
And it does lean on the vision
like what's your goal as a team,

30
00:02:02.351 --> 00:02:04.965
you're breaking that down
into smaller chunks, and

31
00:02:04.965 --> 00:02:08.244
that's where I see the difference
between a vision and a roadmap.

32
00:02:11.096 --> 00:02:14.646
So how do you measure impact on,
not as being a manager, but

33
00:02:14.646 --> 00:02:16.570
like even on your team's work?

34
00:02:17.650 --> 00:02:22.734
Ultimately, we're not just creating cool
tech and features, there's a reason,

35
00:02:22.734 --> 00:02:27.200
there's a business,
we're making money at some point in time.

36
00:02:27.200 --> 00:02:33.144
And so you wanna know how is my team's
work impacting that business metric.

37
00:02:35.963 --> 00:02:38.380
A lot of companies are using OKRs.

38
00:02:38.380 --> 00:02:42.513
Show of hands, who's aware of OKRs?

39
00:02:42.513 --> 00:02:44.580
Okay, it's few people, that's good.

40
00:02:44.580 --> 00:02:47.951
Who's using them in
practice at their company?

41
00:02:47.951 --> 00:02:51.302
All right, it's a little bit,
some, all right, okay.

42
00:02:51.302 --> 00:02:55.725
OKRs are interesting way to
break down some of the work and

43
00:02:55.725 --> 00:02:58.683
think about it to be more measurable.

44
00:02:58.683 --> 00:03:04.720
Essentially, you have an objective and
then KRs, which are key results.

45
00:03:04.720 --> 00:03:09.651
So, for an objective,
it's a little more of that high level,

46
00:03:09.651 --> 00:03:12.600
it's an aspirational goal.

47
00:03:12.600 --> 00:03:17.107
It's typically not tracked like every
couple of weeks, it's a little bit longer

48
00:03:17.107 --> 00:03:23.000
of a term, maybe it's quarterly or yearly
that you're thinking about this objective.

49
00:03:23.000 --> 00:03:27.636
It's trying to help provide a direction,
like a strategy that your team

50
00:03:27.636 --> 00:03:31.969
should be going after, and
then it will be followed by key results.

51
00:03:31.969 --> 00:03:36.686
And the key results are breaking
down into like specific,

52
00:03:36.686 --> 00:03:39.485
measurable time bound outcomes.

53
00:03:39.485 --> 00:03:43.439
And that helps track progress on how
are you achieving those metrics.

54
00:03:43.439 --> 00:03:47.983
You can be wrong, you might say that
we're trying to make something perform

55
00:03:47.983 --> 00:03:51.186
10% better and
you're trying to strive for that.

56
00:03:51.186 --> 00:03:55.286
And you're gonna watch that metric
over time to see if you're actually

57
00:03:55.286 --> 00:03:57.277
incrementally making it better.

58
00:03:57.277 --> 00:04:00.618
These key results can often change for
the objective,

59
00:04:00.618 --> 00:04:04.755
it doesn't have to be yearly,
it might be at more of the quarterly or

60
00:04:04.755 --> 00:04:08.250
sprint planning and
that you're tracking it over time.

61
00:04:08.250 --> 00:04:11.836
And each objective can
have multiple key results.

62
00:04:11.836 --> 00:04:12.894
Mark.

63
00:04:12.894 --> 00:04:17.515
&gt;&gt; One critique of OKRs is they're
overly focused on measurement.

64
00:04:17.515 --> 00:04:21.028
&gt;&gt; Yes, I'm actually glad someone
called attention to that.

65
00:04:21.028 --> 00:04:23.825
That's often been my problem with it,

66
00:04:23.825 --> 00:04:29.776
is sometimes teams get really prescriptive
or thinking about how do we measure it.

67
00:04:29.776 --> 00:04:33.846
And I think there's a lot of things you
should be measuring, but there are times

68
00:04:33.846 --> 00:04:37.942
where you're just throwing metrics for
metrics sake, and that's not great.

69
00:04:37.942 --> 00:04:42.620
It doesn't really make sense, it's
eating up a lot of your team's time and

70
00:04:42.620 --> 00:04:45.338
you're trying to just basically provide.

71
00:04:45.338 --> 00:04:48.173
It feels like process for
the sake of process, and so

72
00:04:48.173 --> 00:04:52.298
I'm glad someone called that out because
that is something that I've often

73
00:04:52.298 --> 00:04:55.984
struggled with, we don't need an OKR for
every single thing we do.

74
00:04:57.720 --> 00:05:00.763
I do wanna provide a bit of an example,
especially for

75
00:05:00.763 --> 00:05:03.954
some of the people who are maybe
not as familiar with it.

76
00:05:03.954 --> 00:05:08.697
I'm gonna kind of focus on one that
I think is always easy as a user of

77
00:05:08.697 --> 00:05:09.978
an application.

78
00:05:09.978 --> 00:05:14.763
Performance matters, I don't want things
to load slow, and I think as we're

79
00:05:14.763 --> 00:05:19.564
building products as engineers we don't
want it to be slow for our customers.

80
00:05:19.564 --> 00:05:24.300
So maybe your objective is that you wanna
enhance the application performance.

81
00:05:24.300 --> 00:05:29.928
Pretty high level, it's not very specific,
but that's what you're wanting to achieve.

82
00:05:29.928 --> 00:05:33.190
So you wanna then have KRs,
how are you gonna measure that?

83
00:05:33.190 --> 00:05:38.067
Maybe you're reducing the average
application loading time to under

84
00:05:38.067 --> 00:05:39.560
2 seconds, right?

85
00:05:39.560 --> 00:05:42.602
Something that's measurable,
you can monitor that,

86
00:05:42.602 --> 00:05:46.953
maybe it's at 5 seconds right now, and
so how are you reducing that over time?

87
00:05:46.953 --> 00:05:52.782
Maybe it's decreasing the error rate
to less than 1%, definitely could help.

88
00:05:52.782 --> 00:05:56.926
And maybe you're just improving
the response time on the server,

89
00:05:56.926 --> 00:06:01.516
maybe it's 95% of the requests
served in under 100 milliseconds.

90
00:06:01.516 --> 00:06:06.310
And so you can look at baselines of
what's happening now, and then as you're

91
00:06:06.310 --> 00:06:10.753
working towards that objective to
reduce or improve the performance.

92
00:06:10.753 --> 00:06:13.419
You can see this over time and
monitor this and

93
00:06:13.419 --> 00:06:16.097
are we actually effectively making change.

94
00:06:16.097 --> 00:06:19.386
So some of the things, yeah, you can
absolutely measure, but don't overdo it.

95
00:06:21.517 --> 00:06:27.017
Another metric that I like is KPIs,
which is Key Performance Indicators.

96
00:06:27.017 --> 00:06:29.509
Show of hands,
who's familiar with this one?

97
00:06:29.509 --> 00:06:32.445
All right, are you using these today?

98
00:06:33.937 --> 00:06:36.339
Okay, so some of you are, that's great.

99
00:06:36.339 --> 00:06:39.769
They're usually ones I think about as
something that you're tracking for

100
00:06:39.769 --> 00:06:40.483
a longer term.

101
00:06:40.483 --> 00:06:44.398
It may be just something that you're
paying attention to as a team for

102
00:06:44.398 --> 00:06:45.146
a long term.

103
00:06:45.146 --> 00:06:49.767
They're very specific, quantifiable
metrics that measure maybe its

104
00:06:49.767 --> 00:06:52.856
performance or
progress in a particular area.

105
00:06:54.578 --> 00:06:59.384
They're often tied to those operational or
broader objectives, and,

106
00:06:59.384 --> 00:07:04.283
like I mentioned, they're on
an ongoing thing, you're looking at it.

107
00:07:04.283 --> 00:07:08.518
Maybe it is that you wanna keep
that speed at 100 milliseconds and

108
00:07:08.518 --> 00:07:10.310
you do not want to exceed it.

109
00:07:12.625 --> 00:07:16.051
So an example, application response time.

110
00:07:16.051 --> 00:07:21.264
Maybe you wanna target that to
maintain an average spot time

111
00:07:21.264 --> 00:07:26.908
from under 500 milliseconds for
all critical user actions.

112
00:07:26.908 --> 00:07:28.665
So maybe you don't care as much for

113
00:07:28.665 --> 00:07:31.634
something like the account
settings on some product, but

114
00:07:31.634 --> 00:07:35.466
you care about that first load, and
you're gonna monitor that over time.

115
00:07:35.466 --> 00:07:38.558
And as you're shipping new features,
you don't wanna exceed that.

116
00:07:38.558 --> 00:07:42.304
And if you are, maybe you're going back to
the drawing board of talking about how do

117
00:07:42.304 --> 00:07:46.281
we not do that, and that's kind of putting
that baseline that you don't wanna exceed.

118
00:07:48.792 --> 00:07:53.155
The important one on this one is this
is not something me, as a manager,

119
00:07:53.155 --> 00:07:55.483
think about some of these things, and

120
00:07:55.483 --> 00:08:00.606
maybe have suggestions on what to measure
or what I think is important for the team.

121
00:08:00.606 --> 00:08:05.051
But with OKRs, as well as KPIs,
I wanna involve the team.

122
00:08:05.051 --> 00:08:09.510
Maybe there's ways that I'm not thinking
about to back to be OKR, we need to

123
00:08:09.510 --> 00:08:14.334
improve the performance, well what are
things that we should be doing to do that?

124
00:08:14.334 --> 00:08:17.623
Obviously engineers are gonna have
better insights than me, and so

125
00:08:17.623 --> 00:08:21.070
I wanna include them on that,
I want them to be bought in, too.

126
00:08:21.070 --> 00:08:25.532
I don't wanna come top down and say this
is what we're doing, people aren't gonna

127
00:08:25.532 --> 00:08:29.560
be as bought into that, and also they
have really great insights to share.

