WEBVTT

1
00:00:00.015 --> 00:00:02.995
&gt;&gt; Maximiliano Firtman: Template
strings also appear in ES6, and

2
00:00:02.995 --> 00:00:07.483
the idea is to solve a problem that
we used to have in JavaScript.

3
00:00:07.483 --> 00:00:13.476
For example in this case, where we
have a string and then we concatenate,

4
00:00:13.476 --> 00:00:20.047
and it's a mess because, for example,
if I want the name to be in double quotes,

5
00:00:20.047 --> 00:00:24.802
I need to escape the double quote,
which is kind of a mess.

6
00:00:24.802 --> 00:00:27.163
Okay, and and then concatenate.

7
00:00:27.163 --> 00:00:31.461
And sometimes, when we concatenate
the strings with numbers,

8
00:00:31.461 --> 00:00:33.699
where things may happen, okay?

9
00:00:33.699 --> 00:00:37.075
It depends on the case, but
where things may happen.

10
00:00:37.075 --> 00:00:41.764
If you wanna go to a new line, like,
we need to have this forward slash,

11
00:00:41.764 --> 00:00:43.263
new line characters.

12
00:00:43.263 --> 00:00:48.263
So it creates a new line,
which, yeah, I mean, it works,

13
00:00:48.263 --> 00:00:52.370
but if you have been there,
it's dirty, okay?

14
00:00:52.370 --> 00:00:59.175
So now we have a new string, the new
string is using the backtick, okay?

15
00:00:59.175 --> 00:01:03.800
And using the Backtick Tick,
you can say, well,

16
00:01:03.800 --> 00:01:07.998
hello, my name is, and open double quotes.

17
00:01:09.064 --> 00:01:12.601
&gt;&gt; Maximiliano Firtman: And if you
want to use the first name variable,

18
00:01:12.601 --> 00:01:17.240
you use the expression syntax
that makes an interpolation.

19
00:01:17.240 --> 00:01:22.546
This is similar to the React.jsx template,
but slightly different.

20
00:01:22.546 --> 00:01:28.338
We use dollar and kind of a code block,
so in this case, first name.

21
00:01:28.338 --> 00:01:31.978
And within that block,
you can execute functions,

22
00:01:31.978 --> 00:01:37.286
you can add complex expressions,
you can even add other templates inside.

23
00:01:37.286 --> 00:01:42.188
So I can concatenate with other templates
and do whatever you want, okay?

24
00:01:42.188 --> 00:01:46.702
So it's a full JavaScript
expression that you can add there.

25
00:01:46.702 --> 00:01:50.314
And also if you wanna do a new line or
two new lines,

26
00:01:50.314 --> 00:01:56.084
you can just go multi-line with a template
string without closing the string.

27
00:01:57.344 --> 00:02:03.099
So then I have the age, I live in city.

28
00:02:05.693 --> 00:02:09.718
&gt;&gt; Maximiliano Firtman: So now, you will
see that something exactly the same, but

29
00:02:09.718 --> 00:02:11.042
it looks cleaner.

30
00:02:11.042 --> 00:02:15.785
Have in mind that if you
like to little things like

31
00:02:15.785 --> 00:02:20.066
this because you feel
like you should have,

32
00:02:20.066 --> 00:02:24.473
tabs to your stream like blah, blah, blah.

33
00:02:26.373 --> 00:02:29.462
Those tabs will also go to the string.

34
00:02:30.770 --> 00:02:34.737
&gt;&gt; Maximiliano Firtman: Okay,
so have in mind that, okay?

35
00:02:34.737 --> 00:02:40.105
It's multiline, but also if you open
a template string every character

36
00:02:40.105 --> 00:02:45.737
Including new lines, including tabs and
spaces, are going to the string.

