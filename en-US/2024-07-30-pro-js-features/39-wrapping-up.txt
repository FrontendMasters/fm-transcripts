[00:00:00]
>> Maximiliano Firtman: It's time for a recap of this whole workshop. We've seen the difference between JavaScript and ECMAScript, so now we understand the differences. Okay, JavaScript is a trademark. They're kind of the same thing, but JavaScript is the trademark and ECMAScript is the legal and also the spec term and the one that we version.

[00:00:18]
So we know that now we are versioning ECMAScript every year. We're not really following along, okay? So watching this year, okay, but every once in a while we check, this is new, we can start using it. Sometimes we don't wait for browsers to implement that because we use transpilers, we mentioned that.

[00:00:37]
Remember that most of the time we are talking about syntax sugar, that means it's something that can be emulated for older browsers. So it's not a complete different architecture of the language. It's just JavaScript in the browser, JavaScript in node. And then it may depend on the APIs that you're using, but not in the core language if something really changes.

[00:01:01]
We've seen transpilers. If you use a transpiler, you can just use ES2034, ES2038 when it appeared. And it will transpile to something that you can ship to browsers that every users can use. We covered the ES6 Review, everything that is ES6. And for the rest some language enhancements, for strings, for objects, class syntax.

[00:01:29]
The private class static methods and properties that you can define on the class, collections and arrays, recover weeks, sets, week set, map. All these new ways that we have to deal with arrays, such as two sort of instead of sort. Async programming, we mentioned promises, we mentioned async await.

[00:01:53]
The top level async await, and now recently some advanced topics. So that's actually the current state of ECMAScript and the JavaScript language. So I hope you can start using some of these features. The new operators working with NULS will make our life easier probably. Okay, well, thank you.

[00:02:17]

>> Speaker 2: [APPLAUSE]

