WEBVTT

1
00:00:00.056 --> 00:00:01.763
&gt;&gt; Spencer Schneidenbach: Let's
talk about a brief history of .NET

2
00:00:01.763 --> 00:00:04.552
I do wanna keep it brief, but
I do feel like it's important to know.

3
00:00:04.552 --> 00:00:09.178
So, .NET was in was roughly released,
I think 2000-2001, so

4
00:00:09.178 --> 00:00:13.145
about a quarter century ago,
25 years, decent bit of time.

5
00:00:13.145 --> 00:00:14.708
So let's talk about its evolution.

6
00:00:14.708 --> 00:00:18.963
So, at the time, Microsoft was investing
in Java, and I don't know the whole story,

7
00:00:18.963 --> 00:00:23.045
I don't know the nuance of this story, but
Sun Microsystems took umbrage with that

8
00:00:23.045 --> 00:00:26.986
and sued Microsoft and said, no,
we don't like your implementation of Java.

9
00:00:26.986 --> 00:00:31.944
So part of that settlement included
removing Java from all of their Windows

10
00:00:31.944 --> 00:00:33.130
installations.

11
00:00:33.130 --> 00:00:36.242
It used to be bundled with Windows,
a Java runtime, and

12
00:00:36.242 --> 00:00:38.570
now it's not as part of that settlement.

13
00:00:38.570 --> 00:00:43.014
So Microsoft needed, because Java
was gaining traction in the market.

14
00:00:43.014 --> 00:00:47.696
Microsoft wanted and needed its own high
level language to compete with Java.

15
00:00:47.696 --> 00:00:52.656
So in the early days,
2000-2001 with the first release of

16
00:00:52.656 --> 00:00:56.667
Visual Studio.NET,
is what it was called back then.

17
00:00:56.667 --> 00:01:01.134
We got C# and VB.NET and
what's called the .NET Framework.

18
00:01:01.134 --> 00:01:06.164
So I try to avoid using the term .NET
Framework simply because I think

19
00:01:06.164 --> 00:01:10.773
it's a loaded term because it
usually means .NET in Windows.

20
00:01:10.773 --> 00:01:14.740
And .NET Framework is still
kept up to date by Microsoft.

21
00:01:14.740 --> 00:01:19.649
But it's very akin to what I would call
the core libraries of .NET Core now

22
00:01:19.649 --> 00:01:21.958
branded typically is just .NET.

23
00:01:21.958 --> 00:01:26.518
But I hear them used interchangeably
because the branding has been has shifted

24
00:01:26.518 --> 00:01:30.596
quite strangely over the last five years,
as Microsoft has tried to,

25
00:01:30.596 --> 00:01:32.480
like clarify what .NET means.

26
00:01:32.480 --> 00:01:33.518
But .NET Framework,

27
00:01:33.518 --> 00:01:37.295
the really important thing to know is that
it's akin to the core libraries today.

28
00:01:37.295 --> 00:01:41.168
All the core functionality,
make an HTTP request, reading files,

29
00:01:41.168 --> 00:01:42.316
that kind of thing.

30
00:01:42.316 --> 00:01:47.043
So the first besides console apps,
which we will be mostly hanging out in

31
00:01:47.043 --> 00:01:50.220
console apps for
the purposes of this workshop,

32
00:01:50.220 --> 00:01:54.108
what they introduced was WinForms for
.NET and WebForms.

33
00:01:54.108 --> 00:01:57.899
WebForms was a old is
definitely shown its age.

34
00:01:57.899 --> 00:01:59.732
It is an abstraction over,

35
00:01:59.732 --> 00:02:04.286
it was meant to bridge the gap from
Win forms developers to the web.

36
00:02:04.286 --> 00:02:06.159
I think it accomplished that goal.

37
00:02:06.159 --> 00:02:08.301
I couldn't tell you at what cost.

38
00:02:08.301 --> 00:02:10.869
I can tell you, though,
that I still work on WebForms app.

39
00:02:10.869 --> 00:02:13.666
I don't, but
by my company does occasionally.

40
00:02:13.666 --> 00:02:16.251
So WebForms is still relevant in
that there's still a ton of code.

41
00:02:16.251 --> 00:02:19.725
Same thing with financial institutions and
COBOL, like it's not gonna go anyway.

42
00:02:19.725 --> 00:02:21.894
They're not gonna go away anytime soon.

43
00:02:21.894 --> 00:02:24.933
But there were some challenges, right?

44
00:02:24.933 --> 00:02:28.208
Back in the day of .NET,
it was Windows only.

45
00:02:28.208 --> 00:02:32.151
That was like probably its biggest thing
is that you couldn't run it on Linux,

46
00:02:32.151 --> 00:02:33.597
you couldn't run it on Mac.

47
00:02:33.597 --> 00:02:35.674
It was purely Windows only.

48
00:02:35.674 --> 00:02:36.860
It was also closed source.

49
00:02:36.860 --> 00:02:38.362
It was actually source available.

50
00:02:38.362 --> 00:02:40.730
You could browse the source code, but

51
00:02:40.730 --> 00:02:44.804
the development of the product
was all done behind closed doors.

52
00:02:44.804 --> 00:02:46.818
So as part of being a Microsoft MVP,

53
00:02:46.818 --> 00:02:50.187
you get to go once a year to this
thing called the MVP Summit.

54
00:02:50.187 --> 00:02:54.215
And back 20 years ago,
you were getting peeks at products and

55
00:02:54.215 --> 00:02:59.384
product changes that were happening
that wouldn't happen for several months.

56
00:02:59.384 --> 00:03:03.263
Nowadays, you're getting told mostly
about stuff that's gonna be happening in

57
00:03:03.263 --> 00:03:05.902
the next little bit while
might be the next quarter, but

58
00:03:05.902 --> 00:03:08.170
most of the development
is done out in the open.

59
00:03:08.170 --> 00:03:10.528
That wasn't the case for
Microsoft 25 years ago, and

60
00:03:10.528 --> 00:03:13.787
it's still paying the price for this,
the perception price, I should say,

61
00:03:13.787 --> 00:03:17.173
because as I mentioned, I get asked all
the time, it .NET closed, is it open?

62
00:03:17.173 --> 00:03:21.491
It's definitely open source, definitely
cross platform, definitely developed out

63
00:03:21.491 --> 00:03:25.586
in the open, and as I mentioned, lack of
transparency in development processes.

64
00:03:25.586 --> 00:03:27.959
There was a project called mono,

65
00:03:27.959 --> 00:03:31.704
pronounced mono because it's Spanish for
monkey.

66
00:03:31.704 --> 00:03:33.618
A lot of people just call it mono.

67
00:03:33.618 --> 00:03:37.175
And it was aimed to be there was
a movement back in the early days of .NET

68
00:03:37.175 --> 00:03:38.155
called alt.NET.

69
00:03:38.155 --> 00:03:43.135
And they were like we
want .NET not on Windows.

70
00:03:43.135 --> 00:03:44.751
We want .NET to be cross-platform.

71
00:03:44.751 --> 00:03:48.812
So this was meant to be
an implementation that allowed .NET

72
00:03:48.812 --> 00:03:50.690
to run on embedded system.

73
00:03:50.690 --> 00:03:55.253
So it was a reimplementation of
a lot of the core libraries and

74
00:03:55.253 --> 00:03:57.051
the features of .NET.

75
00:03:57.051 --> 00:04:01.429
And I think that the Mono project probably
heavily influenced Microsoft long term

76
00:04:01.429 --> 00:04:04.792
into investing in what we now
know is the .NET platform today,

77
00:04:04.792 --> 00:04:06.136
which is out in the open.

78
00:04:06.136 --> 00:04:08.633
So this was not a Microsoft
sponsored project.

79
00:04:08.633 --> 00:04:14.095
Microsoft, I don't know if the word
tolerate is a good word for

80
00:04:14.095 --> 00:04:16.167
it, but they let it go.

81
00:04:16.167 --> 00:04:18.944
But it's actually still used today for
some things.

82
00:04:18.944 --> 00:04:22.588
It's used in the Unity game engine, for
example, as their scripting language.

83
00:04:22.588 --> 00:04:28.067
It's all powered by Mono so .NET Core
was introduced about ten years ago.

84
00:04:28.067 --> 00:04:32.802
There was a technology called Silverlight
that was retired, much to the chagrin of

85
00:04:32.802 --> 00:04:37.672
many .NET developers out there, but the
machinations of that, the implementation

86
00:04:37.672 --> 00:04:41.345
of .NET for that platform
eventually evolved into .NET Core.

87
00:04:41.345 --> 00:04:43.121
It's one of the worst kept secrets.

88
00:04:43.121 --> 00:04:47.030
And sometimes you see .NET developers,
they're hanging around the bar and

89
00:04:47.030 --> 00:04:50.595
it's like, you know that .NET Core
came from Silverlight, right?

90
00:04:50.595 --> 00:04:53.003
It's like, yeah, everybody knows that now.

91
00:04:53.003 --> 00:04:56.265
But once they announced this,
it was groundbreaking.

92
00:04:56.265 --> 00:04:59.348
Cross-platform by design,
fully open source.

93
00:04:59.348 --> 00:05:01.569
So everything is
developed in the open,

94
00:05:01.569 --> 00:05:05.444
everything is developed transparently, you
will see references to GitHub issues about

95
00:05:05.444 --> 00:05:08.717
why Microsoft makes certain decisions
which I think are really relevant.

96
00:05:08.717 --> 00:05:11.699
There are some things that they won't do
and I'll show you and they'll show you why

97
00:05:11.699 --> 00:05:14.570
it is, and they'll tell you why it is and
they'll they'll tell you in GitHub.

98
00:05:14.570 --> 00:05:18.596
So you can see the issue you can log it,
and you'll see a couple of links here and

99
00:05:18.596 --> 00:05:20.192
there in my course about that.

100
00:05:20.192 --> 00:05:23.335
And then, like I said,
community involvement through Github.

101
00:05:23.335 --> 00:05:25.035
There's people suggesting
language features.

102
00:05:25.035 --> 00:05:28.390
They're writing specs for
features to be added to the language or

103
00:05:28.390 --> 00:05:30.656
improving the existing code base, right?

104
00:05:30.656 --> 00:05:37.121
So it's pretty amazing to see kind of all
of the things that have been done in .NET.

105
00:05:37.121 --> 00:05:39.180
And it really kind of set the stage for

106
00:05:39.180 --> 00:05:43.644
its current success and popularity in
the development world .NET is growing.

107
00:05:43.644 --> 00:05:46.884
I think people are adopting it.

108
00:05:46.884 --> 00:05:50.837
And I have to say that it's on
the strength of making all of the right

109
00:05:50.837 --> 00:05:54.022
decisions about developing
the product in the open.

