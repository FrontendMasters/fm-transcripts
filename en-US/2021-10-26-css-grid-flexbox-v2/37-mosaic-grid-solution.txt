[00:00:00]
>> I hope you did well with challenge number 12 trying to layout these images in a mosaic grid. And so let's go through exactly what I did in terms of my code and how I solved this particular problem. So here in my HTML, we have the setup as pretty much as you saw.

[00:00:20]
The HTML written in the flexbox portion of the course we have a section. I've given an id of pop art to be consistent with the notation that I was using inside of flexbox. We have an h2 called pop art and then we have our images set in an unordered list because.This is just a series of images they could go in any particular order.

[00:00:41]
Inside of that we have a series of figures and figure captions. And those have images and the figure caption associated with them. The figure caption has the link. That's basically the way this is set up the whole way through. So what I would need to do to this HTML in order to make this work, you'll see that occasionally I have thrown in a call span too.

[00:01:03]
And occasionally I've thrown in a row span too. So that is what is going to be responsible for driving the spanning of the various cells and columns here. Inside of my layout. Because, what we gonna do is we're gonna declare our grid on our ul, and then our allies become our children.

[00:01:25]
So the ul is the grid container, or the parent, the allies are the children or the grid items. And that's the way this is all gonna line up. Alright, so. As always, the best place to start with this is to take a look at your image. And you're going to want to think about how many columns and how many rows you have here.

[00:01:50]
So here we've got 1, 2, 3, 4, 5 rows and we've got 1, 2, 3 columns. Which is great, and then we just start setting things up accordingly. Instead of our CSS if you scroll going down here, given you a lot of CSS that we wrote yesterday. So starting here inside of the media query, remember, outside the media query, the images will just stack on top of each other.

[00:02:23]
There's actually no styling for the pop art portion of the site outside of the media query. But inside of it, we've added our pop art ul. That will be our display grid. I want three evenly sized columns. Easiest way to do that is just to make them all one fraction big, and I gave them a 10 pixel gap.

[00:02:43]
Then I set up my three styles here, call span 2, a call span 3 and a row span 2. And all I had to do is set up a grid column or grid row column. Property and just set it up to say span two or span three. So wherever I happen to place that in the particular web page.

[00:03:01]
Then the image is going to span over that many columns or that many rows. Notice here too, I've added at the bottom here for some reason the figures don't always fill their li container. So I found that by adding a height of 100% on the figure help to keep those evenly sized.

[00:03:19]
So that is how I solved this particular problem here, inside of this particular challenge. So that's the first part of this. We've got now our mosaic grid all coated up. If you want to take a quick peek at that inside of the web page so here's the way it winds up looking.

[00:03:41]
We have our various images, they're all of the same height and it's a fun and engaging layout it. There was nothing wrong with what we did with flexbox in terms of all of those images all next to each other. But this to me is much more interesting in from a design perspective.

[00:04:00]
All right. So now that we've got that in place, let's go on to incorporating that grid layout. Now let's plug it into our main web page. And what I did was I got rid of the collections portion of that web page and substituted in this pop art piece.

[00:04:17]
If you wanted to keep that collections layout that we coded in the flexbox portion of the course. There's absolutely nothing wrong with that, you could just add this on as part of the web page if you want it. So we're starting with the HTML here with our incorporating this part into the main home page.

[00:04:36]
This is the homepage from yesterday. And I have scrolled all the way down to the bottom, close to the bottom anyway, past the featured print. Somewhere down around line 83 and I just copied the HTML that I had generated. In the 12 A exercise, pasted it here into my index study HTML.

[00:05:02]
I didn't need to make any changes here along the way. Because I have all of the styling that I had been previously using is carrying over here into this design. The only thing that needs to be added are those additional classes that are going to make this a grid system instead of flexbox.

[00:05:20]
And the classes that are going to set up the spans across the columns and across the rows. So then here inside of our CSS. Down around line 157, this is outside of the media queries. I had set up our figures to have one border color. In this case, I picked color number eight.

[00:05:44]
You could have picked any of the colors that probably would have been fine. I also set up the object position and the object fit here. For the image, the object position is set to zero and the object fit is set to cover. To make sure to differentiate these images from some of the other ones that we had.

[00:06:03]
Where we were changing some of the positions in the flexbox portion of the course. Okay, and then inside of our tablet media query, we're all the way down to line 395 inside of our tablet media query. And in here I have copied over the call span and row span columns here.

[00:06:21]
And then finally the last thing that I did here on row span 2 figure. I have a max height of unset. We had previously put on the figure elements way far up towards the top in the mobile version of this website. We had set it to have a max height of 400 pixels for all of our images.

[00:06:41]
When you bring your mosaic in to this layout here on this homepage. That max height of 400 pixels would apply to everything that's inside of your grid system. In that particular case, the way these images are in their sizes and so forth, it really chopped them all in pieces.

[00:06:59]
And so I didn't like that effect. I just turned off the max height here by using the unset value. So it would forget about that max height of 400 pixels. And so that fix that problem, particularly on the row span 2 where that was an issue. And that's pretty much all I needed to do, those styles will carry then into the desktop layout which is exactly what we want.

[00:07:23]
So that's how you can code up a little example over here in isolation and then very easily integrated into your homepage.

