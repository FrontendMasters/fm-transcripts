WEBVTT

1
00:00:00.240 --> 00:00:05.297
So let's start putting this into Flexbox
and I'm going to start here with the URL.

2
00:00:05.297 --> 00:00:09.731
The important thing to remember is that
the URL is going to be the parent or

3
00:00:09.731 --> 00:00:11.777
the flex container, all right.

4
00:00:11.777 --> 00:00:13.580
So that is the outside box.

5
00:00:13.580 --> 00:00:18.020
All of these LI's there
are children of that URL.

6
00:00:18.020 --> 00:00:20.830
So the LS are flex items.

7
00:00:20.830 --> 00:00:23.688
The URL is the flex container or
the parent, and

8
00:00:23.688 --> 00:00:27.460
that's gonna drive a whole
bunch of these properties.

9
00:00:27.460 --> 00:00:34.610
So we'll start here with the URL and
we'll set it up to display flex,

10
00:00:34.610 --> 00:00:39.912
and immediately that is going
to put all of our boxes

11
00:00:39.912 --> 00:00:46.510
here on one line Just like that.

12
00:00:46.510 --> 00:00:51.500
And you see here that my box has some
height set to it because I set my URL

13
00:00:51.500 --> 00:00:54.255
to have a height of 500 pixels and so

14
00:00:54.255 --> 00:00:58.929
there it is and now all my boxes
are here all together in one line.

15
00:00:58.929 --> 00:01:01.957
Make note of the fact that
the boxes are different sizes.

16
00:01:01.957 --> 00:01:03.022
How big are they?

17
00:01:03.022 --> 00:01:07.702
I set a min width of 100 pixels and
I set a height of 100 pixels and so

18
00:01:07.702 --> 00:01:12.850
the minimum size of these boxes is going
to be 100 pixels by 100 pixels and

19
00:01:12.850 --> 00:01:17.458
I did that just so that you would be
able to see this a little bit better.

20
00:01:17.458 --> 00:01:22.993
If you take that out the min width and
the min height here you'll

21
00:01:22.993 --> 00:01:28.700
see even more strikingly that
these boxes can get quite narrow.

22
00:01:28.700 --> 00:01:32.998
They're as big as their content by default
if you don't have a min height and

23
00:01:32.998 --> 00:01:35.885
a min width set, and
that is their flexible boxes so

24
00:01:35.885 --> 00:01:40.480
that they are gonna try to cram themselves
into as little space as possible.

25
00:01:40.480 --> 00:01:45.579
The next thing to take a look
at is our flex direction.

26
00:01:47.679 --> 00:01:52.289
And this property you may not
see us that much because many

27
00:01:52.289 --> 00:01:56.707
people will put it with flex flow but
flex direction and

28
00:01:56.707 --> 00:02:01.145
flex wrap are the two that
form the flex flow property.

29
00:02:01.145 --> 00:02:05.340
So here we can have a direction of row,
that's what it is by default.

30
00:02:05.340 --> 00:02:07.100
We won't see any change
when I put that in.

31
00:02:08.210 --> 00:02:10.810
We can change that to column and

32
00:02:10.810 --> 00:02:15.610
everything will stack on top
of each other at that point.

33
00:02:16.730 --> 00:02:18.240
We can also reverse these.

34
00:02:18.240 --> 00:02:23.194
So we could say row reverse, And

35
00:02:23.194 --> 00:02:27.770
we'll wind up going from six to one
instead of from one to six, okay?

36
00:02:27.770 --> 00:02:32.990
Likewise, you can do a column reverse,
I'm gonna reset

37
00:02:32.990 --> 00:02:38.776
this just to a regular old row and
then let's look at flex wrap.

38
00:02:38.776 --> 00:02:42.277
This has to do with our boxes
when the screen gets too long,

39
00:02:42.277 --> 00:02:44.490
what are we going to do to our boxes?

40
00:02:44.490 --> 00:02:46.770
Are we going to cut them off?

41
00:02:46.770 --> 00:02:49.454
Have them extend past
the edge of our container or

42
00:02:49.454 --> 00:02:52.610
are we going to wrap
them onto another line?

43
00:02:52.610 --> 00:02:55.870
And so
often this is set to wrap by default.

44
00:02:57.650 --> 00:03:00.399
So you see here I've now
wrapped two boxes on to

45
00:03:00.399 --> 00:03:03.440
the next line because my row gets very,
very long.

46
00:03:04.820 --> 00:03:07.891
You could also set this to wrap reverse.

47
00:03:12.003 --> 00:03:16.260
So notice that this is reordering
things here on the page.

48
00:03:16.260 --> 00:03:19.606
So our first row goes down
to the bottom five and six,

49
00:03:19.606 --> 00:03:22.282
go more towards the middle of the screen.

50
00:03:25.006 --> 00:03:27.877
And we can also go to
now wrap which is our

51
00:03:27.877 --> 00:03:32.490
default value no wrap will cram
everything onto the same line.

52
00:03:34.870 --> 00:03:39.943
And as I said most people will
write this simply as flex flow and

53
00:03:39.943 --> 00:03:43.861
then you'll have to put
in two values row wrap.

54
00:03:43.861 --> 00:03:48.920
Generally speaking row wrap is what
you want for responsive design.

55
00:03:48.920 --> 00:03:53.690
&gt;&gt; Why is there's a gap between
row one and the next row?

56
00:03:53.690 --> 00:03:58.811
&gt;&gt; Why is there a gap between the row
one to four and then five and six?

57
00:03:58.811 --> 00:04:04.623
Great question that has to do with
the next set of properties that I wanna be

58
00:04:04.623 --> 00:04:10.840
talking about here in just a few moments,
so that has to do with the cross axis.

59
00:04:10.840 --> 00:04:15.620
So remember here, our main axis is
horizontal, the cross axis is vertical.

60
00:04:15.620 --> 00:04:18.140
We haven't started to address
those vertical properties yet.

61
00:04:18.140 --> 00:04:19.750
So that's what's going on there.

62
00:04:19.750 --> 00:04:24.303
&gt;&gt; Is it possible to wrap a limited number
of items like I wanna wrap item number

63
00:04:24.303 --> 00:04:29.218
four, five and six without increasing or
decreasing the size of item one, two,

64
00:04:29.218 --> 00:04:30.380
and three?

65
00:04:30.380 --> 00:04:34.540
&gt;&gt; Just put four or five and six on
another line and not one, two, and three.

66
00:04:36.050 --> 00:04:38.643
Yeah, potentially you could do that.

67
00:04:38.643 --> 00:04:42.007
You would wind up having to probably
adjust your HTML a little bit

68
00:04:42.007 --> 00:04:45.619
you could put one, two, and
three in a row you could put four, five,

69
00:04:45.619 --> 00:04:48.010
and six in a row that's
one way of doing it.

70
00:04:48.010 --> 00:04:52.915
You could set one, two and three to
have a flex basis, which I'm gonna

71
00:04:52.915 --> 00:04:57.671
get to here in just a second,
that would add up to a hundred percent.

72
00:04:57.671 --> 00:05:01.485
That would automate automatically wrap
four, five and six on to the next row.

73
00:05:01.485 --> 00:05:03.725
So there's a couple of
different ways of doing that.

74
00:05:03.725 --> 00:05:05.905
All right, so
before we leave the parent here,

75
00:05:05.905 --> 00:05:09.985
all of you are starting to ask questions
about some of the other situations here.

76
00:05:09.985 --> 00:05:14.347
Let's move on here to
the justification of any sort of extra

77
00:05:14.347 --> 00:05:18.340
space that we have in
between ourselves here.

78
00:05:18.340 --> 00:05:23.473
And to demonstrate that I'm
gonna go back to my LI let

79
00:05:23.473 --> 00:05:28.957
me just comment out this min
width here for the moment and

80
00:05:28.957 --> 00:05:34.324
the height ,so that you can
see that we have a row here,

81
00:05:34.324 --> 00:05:39.457
so we have some extra space
over here on the side and so

82
00:05:39.457 --> 00:05:46.699
now let's add to this
Are justified hyphen content so

83
00:05:46.699 --> 00:05:51.374
this has to do with how we're going
to distribute this extra space.

84
00:05:51.374 --> 00:05:56.928
So if we set our justify content to
flex hyphen start, that is the default

85
00:05:56.928 --> 00:06:02.024
value it'll push all of our boxes
over to the left side of the screen

86
00:06:02.024 --> 00:06:07.508
giving us space over on the right hand
side of the screen just like that.

87
00:06:07.508 --> 00:06:12.619
If we go to flex end shockingly it's
going to push all of our boxes to

88
00:06:12.619 --> 00:06:17.821
the right side of the row and
give us space on the left side of the row,

89
00:06:17.821 --> 00:06:24.500
center is always a good one, center will
put all of our boxes here in the middle.

90
00:06:24.500 --> 00:06:29.470
Notice that in all cases here we haven't
actually put any space in between

91
00:06:29.470 --> 00:06:30.840
the boxes.

92
00:06:30.840 --> 00:06:33.879
So that's these next three values
that am gonna go through and

93
00:06:33.879 --> 00:06:37.180
these are the three that
get confused all the time.

94
00:06:37.180 --> 00:06:41.950
So the first one is space around.

95
00:06:43.560 --> 00:06:50.247
So space around says we are going to
let's just talk about one and two here.

96
00:06:50.247 --> 00:06:53.480
I am going to put a space here of X.

97
00:06:53.480 --> 00:06:58.279
So the browser has done some math and
it we have so much space, we have so

98
00:06:58.279 --> 00:06:59.405
many boxes.

99
00:06:59.405 --> 00:07:01.322
We're gonna take that space and

100
00:07:01.322 --> 00:07:04.874
we're going to put a little bit
of it on each side of the box.

101
00:07:04.874 --> 00:07:08.085
So this space right here
in between the border and

102
00:07:08.085 --> 00:07:10.665
the edge of box one, that space is x.

103
00:07:10.665 --> 00:07:11.955
I don't know what the value is.

104
00:07:11.955 --> 00:07:14.535
It doesn't matter about
the browser did the math for me.

105
00:07:16.065 --> 00:07:20.870
Here now in between one and
two, the space is 2x.

106
00:07:20.870 --> 00:07:24.600
Because I have space on
the right from number one and

107
00:07:24.600 --> 00:07:27.130
space on the left from number two.

108
00:07:28.700 --> 00:07:34.694
So what you wind up having is half the
space on the edge before box number one

109
00:07:34.694 --> 00:07:39.723
and half the space on the edge
over here after box number six and

110
00:07:39.723 --> 00:07:45.580
then in between each of these boxes,
that is twice the space, okay?

111
00:07:45.580 --> 00:07:50.900
Because you have the two individual spaces
coming together there in the middle.

112
00:07:50.900 --> 00:07:52.790
So that's what's going
on with space around.

113
00:07:53.890 --> 00:07:57.940
The one I find that's more useful
than that is space between

114
00:07:57.940 --> 00:08:02.900
usually your designer friends will
be happier with this as well.

115
00:08:02.900 --> 00:08:06.602
So what this is going to do,
is it's basically justifying the boxes.

116
00:08:06.602 --> 00:08:11.920
It pushes up the box one all
the way to the left edge.

117
00:08:11.920 --> 00:08:17.090
It's going to push box six all
the way over to the right and

118
00:08:17.090 --> 00:08:23.578
it will evenly justify the space in
between all of the boxes in between.

119
00:08:23.578 --> 00:08:26.380
So that's usually very
helpful to work with.

120
00:08:26.380 --> 00:08:28.300
I find that really great to work with,

121
00:08:28.300 --> 00:08:32.149
particularly when we get to our grid
system, which we'll talk about next.

122
00:08:32.149 --> 00:08:36.405
And then the last one here
is a more recent value It's

123
00:08:36.405 --> 00:08:39.810
well-supported by browsers right now.

124
00:08:39.810 --> 00:08:42.964
If you wanna use it and
you have to support some older browsers,

125
00:08:42.964 --> 00:08:47.072
you may wanna double check to make sure
it's supported by those older browsers and

126
00:08:47.072 --> 00:08:48.280
that is spaced evenly.

127
00:08:49.950 --> 00:08:54.134
And shockingly,
that puts the same around amount of

128
00:08:54.134 --> 00:08:58.141
space around on between the edge here and
box one.

129
00:08:58.141 --> 00:09:01.430
The same amount of space
between boxes one and two and

130
00:09:01.430 --> 00:09:06.240
so forth, just as you would expect for
space evenly all the way across here.

131
00:09:06.240 --> 00:09:10.588
So this is another very useful one
that designers like because the spaces

132
00:09:10.588 --> 00:09:15.150
are divided up evenly usually space around
is the one that they are not fond of

133
00:09:15.150 --> 00:09:18.168
because they think it looks
a little bit awkward.

134
00:09:18.168 --> 00:09:20.715
Let's now get to the cross axis.

135
00:09:20.715 --> 00:09:24.650
So we've talked about all this various
kinds of alignment here on the main axis.

136
00:09:24.650 --> 00:09:28.030
This is all the row and
dealing with the spaces here on the row.

137
00:09:28.030 --> 00:09:31.110
So to go to some of your
questions from earlier,

138
00:09:31.110 --> 00:09:33.420
what about here on this cross axis?

139
00:09:34.490 --> 00:09:37.450
And that's gonna start
here with align items.

140
00:09:37.450 --> 00:09:42.186
So I'm gonna reset my justify
content here to center and

141
00:09:42.186 --> 00:09:47.024
then we're gonna add the property
called align items and

142
00:09:47.024 --> 00:09:51.961
so this is gonna control our
spacing here within the row and

143
00:09:51.961 --> 00:09:57.020
in fact I'm gonna bring back to
my mean width and my height.

144
00:09:58.960 --> 00:10:02.921
So right now as you see here,
as somebody asked earlier,

145
00:10:02.921 --> 00:10:08.200
we have boxes five and six here wrapped
on to the next line here in the middle,

146
00:10:08.200 --> 00:10:12.390
and this is part of this
align items type of thing.

147
00:10:12.390 --> 00:10:18.438
So here, if we said Flex-start.

148
00:10:22.050 --> 00:10:27.410
Then what we have here
are all of the boxes pressed

149
00:10:27.410 --> 00:10:34.010
up to the top of the area that
we have available here to us.

150
00:10:34.010 --> 00:10:38.378
So, what we've got is,
a row is wrapping onto another line,

151
00:10:38.378 --> 00:10:43.250
everything is centering because of
the justify content of center and

152
00:10:43.250 --> 00:10:48.050
then everything is pushed up towards
the top because of flex start.

153
00:10:49.940 --> 00:10:52.240
If I set this the flex
end what's gonna happen?

154
00:11:01.212 --> 00:11:05.517
Yep, it pushes it all the way
down here to the bottom.

155
00:11:05.517 --> 00:11:06.810
So what's happening here?

156
00:11:06.810 --> 00:11:08.320
Remember I've got a width and

157
00:11:08.320 --> 00:11:11.710
a height that are set
artificially here on this URL.

158
00:11:11.710 --> 00:11:16.210
So my height is giving me this room that
I can see this whole thing, moving space.

159
00:11:16.210 --> 00:11:18.876
So that's gonna push that
down to the bottom there.

160
00:11:21.693 --> 00:11:24.349
We can also say a line
items in the center.

161
00:11:26.270 --> 00:11:30.906
So the center this is what a lot of people
talk about when they talk about putting

162
00:11:30.906 --> 00:11:33.365
something in the very center of a screen,

163
00:11:33.365 --> 00:11:37.441
justifying content center align
items at the center puts everything

164
00:11:37.441 --> 00:11:42.360
centered very nicely inside of that box
center to the row centered vertically.

165
00:11:42.360 --> 00:11:43.365
That's what's happening there.

166
00:11:47.222 --> 00:11:49.126
We can also say baseline.

167
00:11:52.380 --> 00:11:58.260
Baseline all this case is just pushed
it back up to the top of the screen,

168
00:11:58.260 --> 00:12:01.006
and then stretches the last one.

169
00:12:05.324 --> 00:12:07.423
And that's also doing the same thing here.

170
00:12:12.496 --> 00:12:18.122
Okay, so the last one I want to tell
you about is the align content and

171
00:12:18.122 --> 00:12:23.060
this is going to align elements
within the particular space

172
00:12:23.060 --> 00:12:27.504
that we're talking about here and
I think this goes to

173
00:12:27.504 --> 00:12:32.960
the question that somebody was
asking earlier aligned content.

174
00:12:40.498 --> 00:12:46.750
Center align items center and
aligned content.

175
00:12:48.040 --> 00:12:49.981
So now if I say flex start.

176
00:12:53.703 --> 00:12:57.520
This pushes everything all the way to
the top without the space in between.

177
00:12:57.520 --> 00:13:01.008
So the person who was asking about
the spacing between those elements,

178
00:13:01.008 --> 00:13:04.200
this is how you get rid of
it with this align content.

179
00:13:04.200 --> 00:13:07.330
So everything is pushed up to
the very top of this particular box.

180
00:13:08.490 --> 00:13:12.309
We also have flex end which of
course pushes it all the way

181
00:13:12.309 --> 00:13:14.350
down to the bottom of the box.

182
00:13:15.820 --> 00:13:18.159
And we have center.

183
00:13:22.052 --> 00:13:25.678
So if you wanted everything smashed
in the center without the big gap

184
00:13:25.678 --> 00:13:29.120
in between those particular rows,
that's what the center is.

185
00:13:29.120 --> 00:13:33.084
So three centers in order
to make that happen.

186
00:13:35.028 --> 00:13:38.589
And we still have all
the options of the space.

187
00:13:42.825 --> 00:13:47.280
Space between,
space around and space evenly.

188
00:13:47.280 --> 00:13:49.941
So Spaced between,

189
00:13:52.778 --> 00:13:58.367
Pushes these all the way to the top and
bottom of the box, space around,

190
00:14:02.183 --> 00:14:06.009
&gt;&gt; Gives us as I said before x x amount of

191
00:14:06.009 --> 00:14:10.219
space above and below to x in between and

192
00:14:10.219 --> 00:14:15.209
space evenly spaces
the mall evenly in space.

193
00:14:15.209 --> 00:14:19.578
&gt;&gt; So we can say that align
items we use in case of columns.

194
00:14:19.578 --> 00:14:23.139
&gt;&gt; Well it depends on main axis and
cross axis so

195
00:14:23.139 --> 00:14:28.339
in this particular case yes that
would be a line items would be for

196
00:14:28.339 --> 00:14:32.270
the cross axis so
that would be the columns.

197
00:14:32.270 --> 00:14:34.872
&gt;&gt; I didn't understand
the use of baseline and

198
00:14:34.872 --> 00:14:38.190
stretch value what
exactly can we use it in?

199
00:14:38.190 --> 00:14:40.480
Isn't it similar to the default value?

200
00:14:40.480 --> 00:14:41.780
&gt;&gt; Yes, exactly.

201
00:14:41.780 --> 00:14:45.800
So those are indeed similar
to the default value.

202
00:14:45.800 --> 00:14:49.417
And so those become useful if you reset
them in one part of your layout and

203
00:14:49.417 --> 00:14:52.650
you wanna change it back in
another part of the layout.

204
00:14:52.650 --> 00:14:54.930
So it's always helpful to
know what those defaults are.

