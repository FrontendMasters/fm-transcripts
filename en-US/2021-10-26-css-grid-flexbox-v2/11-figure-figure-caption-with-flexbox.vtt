WEBVTT

1
00:00:00.120 --> 00:00:03.041
Okay, so
the next thing I wanna move on to,

2
00:00:03.041 --> 00:00:07.360
we're gonna take a look at some
figures and figure captions.

3
00:00:07.360 --> 00:00:11.433
I'm actually gonna go back to old
school absolute relative positioning.

4
00:00:11.433 --> 00:00:15.225
So what we've got going on here is
we've got four very cool pictures,

5
00:00:15.225 --> 00:00:17.110
there they are.

6
00:00:17.110 --> 00:00:19.770
And they have captions that
are associated with them.

7
00:00:19.770 --> 00:00:24.940
So we're working with this same concept
here of figures and figure captions.

8
00:00:24.940 --> 00:00:29.062
And as you see here, there's the figure,
they're all pretty much the same,

9
00:00:29.062 --> 00:00:31.316
obviously, they have different images.

10
00:00:31.316 --> 00:00:34.555
But there we go, there's the figure,
here's our image.

11
00:00:34.555 --> 00:00:40.211
Here's our figure caption, and we've
got a bunch of these here on the page.

12
00:00:40.211 --> 00:00:45.447
Now what I'd like to do, one of the things
that we often like to do with figures and

13
00:00:45.447 --> 00:00:49.528
figure captions like this,
is we can display them like this and

14
00:00:49.528 --> 00:00:50.769
that is just fine.

15
00:00:50.769 --> 00:00:53.333
But we may like to take
that figure caption and

16
00:00:53.333 --> 00:00:57.670
display it on top of the figure, and
maybe make it a little bit transparent.

17
00:00:57.670 --> 00:01:01.134
And it'll be really cool kinda
looking in order to do that.

18
00:01:01.134 --> 00:01:04.599
With Flexbox, the best way to
approach this is using absolute and

19
00:01:04.599 --> 00:01:06.730
relative positioning.

20
00:01:06.730 --> 00:01:09.677
And the thing is, with absolute and
relative positioning,

21
00:01:09.677 --> 00:01:13.410
when you get taught this stuff,
it's really kind of complicated.

22
00:01:13.410 --> 00:01:16.695
And people get very confused
by the all of the absolute and

23
00:01:16.695 --> 00:01:20.300
relative positioning stuff
that goes along with this.

24
00:01:20.300 --> 00:01:24.892
And so I wanted to take the time to walk
you through exactly how absolute and

25
00:01:24.892 --> 00:01:27.940
relative positioning works,
and why it works.

26
00:01:29.320 --> 00:01:33.448
Again, in isolation rather than just
sort of giving you a formula for

27
00:01:33.448 --> 00:01:34.382
how to do this.

28
00:01:34.382 --> 00:01:38.081
So this is the CSS that we
have here to start with.

29
00:01:38.081 --> 00:01:39.842
Basically, here's our figure,

30
00:01:39.842 --> 00:01:42.766
we've turned off the margin
that was set by the browser.

31
00:01:42.766 --> 00:01:48.470
Here's our caption styling, it's basically
the same stuff that you've already seen.

32
00:01:48.470 --> 00:01:52.723
Here's our margin, and then here's
a hack to make our images flexible.

33
00:01:52.723 --> 00:01:57.383
So, notice that I set our
images to 100% for the width.

34
00:01:57.383 --> 00:02:02.210
So the way this works is that
images are an inline element.

35
00:02:02.210 --> 00:02:07.270
They are by default set to be
as wide as the image is itself.

36
00:02:07.270 --> 00:02:10.854
And if you make a screen too small,
you've probably seen this before,

37
00:02:10.854 --> 00:02:13.242
you will start to get
a scroll bar on the bottom,

38
00:02:13.242 --> 00:02:16.070
you'll have to scroll over to
see the rest of the image.

39
00:02:16.070 --> 00:02:20.718
When you put a width of 100% on your
images, they will expand to fill

40
00:02:20.718 --> 00:02:25.217
their container, and they will
also shrink down proportionately.

41
00:02:25.217 --> 00:02:30.765
This is a very fake responsive image,
this is not true responsive images.

42
00:02:30.765 --> 00:02:35.475
But what it does do is it lets
our images flex a little bit,

43
00:02:35.475 --> 00:02:40.285
such that as we're working here,
inside of our code pen,

44
00:02:40.285 --> 00:02:44.080
we get a sense of a flexible image.

45
00:02:44.080 --> 00:02:48.179
And then down here in the media queries,

46
00:02:48.179 --> 00:02:52.881
basically, I'm just
putting these on a row so

47
00:02:52.881 --> 00:02:57.463
that they don't stack on
top of each other and

48
00:02:57.463 --> 00:03:02.150
then they go to a two
by two grid like this.

49
00:03:02.150 --> 00:03:05.374
So a really, really simple layout.

50
00:03:05.374 --> 00:03:10.036
Okay, so
the next thing that I wanna do is, and

51
00:03:10.036 --> 00:03:17.091
I'm gonna put it up here, right here
at the top around line number 7,

52
00:03:17.091 --> 00:03:21.278
where I've got the figure declaration,

53
00:03:21.278 --> 00:03:25.600
I'm going to add to
this a display of flex.

54
00:03:28.110 --> 00:03:28.860
How cool is that?

55
00:03:30.090 --> 00:03:32.385
So just by saying display flex,

56
00:03:32.385 --> 00:03:36.560
I've managed to put the caption
next to these images.

57
00:03:36.560 --> 00:03:39.061
So we had them set up
stacked on top of each other,

58
00:03:39.061 --> 00:03:42.296
which is the default behavior
with figure and figure caption.

59
00:03:42.296 --> 00:03:44.298
By just saying display flex,

60
00:03:44.298 --> 00:03:49.380
they now just appear next to each
other horizontally here in space.

61
00:03:49.380 --> 00:03:53.982
If you want this, you can keep it,
that's absolutely fine.

62
00:03:53.982 --> 00:03:59.520
But you can also rearrange it, somebody
was asking about when to use column.

63
00:03:59.520 --> 00:04:04.408
Well, here's a place where
it would make perfect sense,

64
00:04:04.408 --> 00:04:08.313
we could say our flex flow is column,
no wrap.

65
00:04:08.313 --> 00:04:12.095
So that's gonna put our caption and
our image right next to each other,

66
00:04:12.095 --> 00:04:15.200
stacked very nicely on top of each other,
just like this.

67
00:04:15.200 --> 00:04:19.684
Notice there's no little space in
between them that we had before with

68
00:04:19.684 --> 00:04:24.179
the figure caption, which is coming
from the browser and somewhere.

69
00:04:24.179 --> 00:04:26.620
Okay, so now for the figure caption,

70
00:04:26.620 --> 00:04:31.840
here's what I'm going to do ust after
all of the stuff that I've got here.

71
00:04:31.840 --> 00:04:39.062
If we said position of absolute,
This is going to immediately

72
00:04:39.062 --> 00:04:44.490
take all of our captions and just
stick them somewhere here on the page.

73
00:04:44.490 --> 00:04:48.490
And in this case, it happens to put
it up in the upper left-hand corner.

74
00:04:48.490 --> 00:04:53.361
The reason why this happens
is that the caption itself is

75
00:04:53.361 --> 00:04:57.920
going to work its way up, it's HTML here.

76
00:04:57.920 --> 00:05:03.645
We start with a caption, it's looking for
some sort of element where

77
00:05:03.645 --> 00:05:10.910
it will eventually go all the way up to
the top left-hand corner of the web page.

78
00:05:10.910 --> 00:05:13.669
But by setting this up
with Flexbox like this,

79
00:05:13.669 --> 00:05:17.580
it will go up to the upper
left-hand corner of the figure.

80
00:05:17.580 --> 00:05:23.166
The other way that we do this
without Flexbox, [INAUDIBLE] you can

81
00:05:23.166 --> 00:05:29.076
do here as well, would be to say
position of relative on the figure.

82
00:05:29.076 --> 00:05:33.938
And that will tell the absolutely
positioned element where

83
00:05:33.938 --> 00:05:38.030
should it be absolutely
positioned relative to.

84
00:05:38.030 --> 00:05:41.306
If there's no relative position
declared anywhere on the web page,

85
00:05:41.306 --> 00:05:44.698
it will eventually wind up in the top
left-hand corner of your screen.

86
00:05:44.698 --> 00:05:47.802
This is why we often set
position of relative first,

87
00:05:47.802 --> 00:05:50.553
because we're gonna put
it relative to that,

88
00:05:50.553 --> 00:05:54.940
and then we have our absolute
positioning within that particular area.

89
00:05:54.940 --> 00:05:58.748
So here, it's gonna be within
the figure boundaries,

90
00:05:58.748 --> 00:06:02.970
where are we going to set our
absolutely positioned caption?

91
00:06:04.700 --> 00:06:06.308
So we need a little bit more,

92
00:06:06.308 --> 00:06:09.928
probably a little bit more styling
here on this figure caption.

93
00:06:09.928 --> 00:06:16.846
So I'm going to say the bottom is 0%, so
we'll put it down there on the bottom.

94
00:06:16.846 --> 00:06:20.368
And we can also say the width is a 100%,
so

95
00:06:20.368 --> 00:06:25.170
they'll stretch very
nicely across our finger.

96
00:06:25.170 --> 00:06:30.190
And the little sizzle part would be to do

97
00:06:30.190 --> 00:06:35.847
something with opacity, of say 0.7.

98
00:06:35.847 --> 00:06:36.820
There we go.

99
00:06:36.820 --> 00:06:39.650
So now we can see the image
coming through underneath.

100
00:06:39.650 --> 00:06:44.136
So now we have a very attractive way of
laying out our images here on the web page

101
00:06:44.136 --> 00:06:46.370
with this cool little figure.

102
00:06:46.370 --> 00:06:49.373
And hopefully this also
sparked some ideas for

103
00:06:49.373 --> 00:06:53.073
you of things that you could
do with this figure caption.

104
00:06:53.073 --> 00:06:58.620
Right now, it's just set to stay
there across all dimensions, right?

105
00:06:58.620 --> 00:07:02.800
It's just always gonna have this lovely
figure caption on top of these things.

106
00:07:02.800 --> 00:07:06.181
But, if you wanted,
you could do something where

107
00:07:06.181 --> 00:07:10.377
the figure caption maybe shifts
when you have a wider screen.

108
00:07:10.377 --> 00:07:14.336
You can take that figure caption and
display it to the right or

109
00:07:14.336 --> 00:07:17.983
to the left of your image if
you wanted to using Flexbox,

110
00:07:17.983 --> 00:07:21.050
instead of displaying
it on top of the image.

111
00:07:21.050 --> 00:07:25.444
So you have a lot of flexibility once
you start looking at these in terms of

112
00:07:25.444 --> 00:07:29.262
micro layouts, instead of sort
of the giant layout of the whole

113
00:07:29.262 --> 00:07:29.926
webpage
&gt;&gt; So

114
00:07:29.926 --> 00:07:32.703
flex grow one evenly distributes elements.

115
00:07:32.703 --> 00:07:38.934
So I was just wondering if the media query
scenario fitting everything on one row

116
00:07:38.934 --> 00:07:44.793
could be used that for the elements of
the same width instead of calculating

117
00:07:44.793 --> 00:07:48.183
the percentage for the flex basis
&gt;&gt; Okay, all right,

118
00:07:48.183 --> 00:07:50.270
I understand the question
a little bit better now.

119
00:07:50.270 --> 00:07:54.480
So it's flex grow, I had heard
flex flow and I was very confused.

120
00:07:54.480 --> 00:07:55.320
Flex grow,

121
00:07:55.320 --> 00:08:01.540
just changing the value of flex grow as
you go between various media queries.

122
00:08:01.540 --> 00:08:03.328
You probably could do that, but

123
00:08:03.328 --> 00:08:06.900
you are leaving a lot of
calculation to the browser.

124
00:08:06.900 --> 00:08:09.470
And so when you leave
calculations to the browser,

125
00:08:09.470 --> 00:08:13.318
that means every browser may do their
calculations slightly differently.

126
00:08:13.318 --> 00:08:16.792
I would think that that is probably not
an approach that you would want to do for

127
00:08:16.792 --> 00:08:18.110
that reason.

128
00:08:18.110 --> 00:08:20.448
But you could certainly
experiment with it,

129
00:08:20.448 --> 00:08:24.323
try it across a whole bunch of different
browsers, see if you get something

130
00:08:24.323 --> 00:08:27.357
that you like, that would be
one way of thinking about it.

131
00:08:27.357 --> 00:08:30.307
But the flex basis methodology
that I've talked about here

132
00:08:30.307 --> 00:08:32.880
is pretty straightforward to understand.

133
00:08:32.880 --> 00:08:36.250
It kind of is kind of like width,
it's just a little bit different.

134
00:08:36.250 --> 00:08:39.931
And I think it's conceptually a little bit
easier to understand than doing things

135
00:08:39.931 --> 00:08:40.690
with flex grow.

136
00:08:42.010 --> 00:08:45.270
&gt;&gt; How is fig caption with
accessibility in mind?

137
00:08:45.270 --> 00:08:48.290
&gt;&gt; Fig caption is awesome
with accessibility in mind.

138
00:08:48.290 --> 00:08:51.566
When you start with
semantically good HTML,

139
00:08:51.566 --> 00:08:56.660
you have a much better chance of
hitting your accessibility targets.

140
00:08:56.660 --> 00:09:00.114
Here, the whole purpose of figure
in fig caption is the following.

141
00:09:00.114 --> 00:09:04.380
So it's to associate some sort of label,
the text, right, the caption,

142
00:09:04.380 --> 00:09:07.715
associate it with whatever you
have inside of the figure.

143
00:09:07.715 --> 00:09:10.727
Whether that's an image or
a code snippet, or ASCII art, or

144
00:09:10.727 --> 00:09:13.890
whatever other craziness
you wanna put in there.

145
00:09:13.890 --> 00:09:19.460
And so using this semantic markup is
a really wonderful way of doing that.

146
00:09:19.460 --> 00:09:22.392
The other thing that a figure does,

147
00:09:22.392 --> 00:09:27.671
I haven't really talked about,
when you have a figure itself,

148
00:09:27.671 --> 00:09:32.975
it indicates that that particular
element kinda stands alone.

149
00:09:32.975 --> 00:09:37.263
So we can pull it out and we can put it
elsewhere on the page in terms of layout,

150
00:09:37.263 --> 00:09:40.660
and we're not destroying
the message of the page.

151
00:09:40.660 --> 00:09:44.108
So if you're using an image
by itself on the page,

152
00:09:44.108 --> 00:09:48.473
it appears where it appears in
your layout, and that's fine.

153
00:09:48.473 --> 00:09:51.010
But with a figure,
we might move it around,

154
00:09:51.010 --> 00:09:54.540
and you can think about this
back to like a textbook.

155
00:09:54.540 --> 00:09:57.894
So if you're reading a textbook and
it says in figure one,

156
00:09:57.894 --> 00:10:02.619
be sure to take note of blah, blah, blah,
blah, and you look around on the page,

157
00:10:02.619 --> 00:10:04.202
you may have to look aways.

158
00:10:04.202 --> 00:10:07.828
And then you find figure one,
it's labeled as figure one, right,

159
00:10:07.828 --> 00:10:11.913
with whatever picture it is, it isn't
necessarily right next to the text.

160
00:10:11.913 --> 00:10:16.164
So likewise here in HTML,
your figure can move around on that page.

161
00:10:16.164 --> 00:10:19.410
It doesn't have to stay
in one particular place.

162
00:10:19.410 --> 00:10:24.172
&gt;&gt; Does figure act as a thumbnail for
the video?

163
00:10:24.172 --> 00:10:25.738
&gt;&gt; Figure as a thumbnail for video?

164
00:10:25.738 --> 00:10:29.386
No, I think what you're thinking
of is the poster attribute.

165
00:10:29.386 --> 00:10:34.183
So in the video element, there is a poster
attribute that will be the static

166
00:10:34.183 --> 00:10:36.860
image that displays on top of your video.

