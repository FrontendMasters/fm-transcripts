WEBVTT

1
00:00:00.120 --> 00:00:03.469
I hope you did well with
challenge number 12,

2
00:00:03.469 --> 00:00:06.920
trying to lay out these
images in a mosaic grid.

3
00:00:06.920 --> 00:00:11.680
And so let's go through exactly what
I did in terms of my code and and

4
00:00:11.680 --> 00:00:14.880
how I solve this particular problem.

5
00:00:14.880 --> 00:00:20.566
So here in my HTML, we have
the setup as pretty much as you saw.

6
00:00:20.566 --> 00:00:23.778
The HTML written in the Flexbox
portion of the course

7
00:00:23.778 --> 00:00:27.574
we have a section I've given it
an id of pop art to be consistent

8
00:00:27.574 --> 00:00:31.380
with the notation that I was
using inside of Flexbox.

9
00:00:31.380 --> 00:00:33.160
We have an h2 called Pop Art.

10
00:00:33.160 --> 00:00:37.230
And then we have our images set in
an unordered list because this is

11
00:00:37.230 --> 00:00:41.730
just a series of images,
they could go in any particular order.

12
00:00:41.730 --> 00:00:45.330
Inside of that we have a series
of figures and figure captions.

13
00:00:45.330 --> 00:00:46.758
And those have images and

14
00:00:46.758 --> 00:00:50.980
the figure caption associated with
them the figure caption has the link.

15
00:00:51.990 --> 00:00:54.390
That's basically the way this
is set up the whole way through.

16
00:00:55.790 --> 00:01:00.380
So what I would need to do to this HTML
in order to make this work you'll see

17
00:01:00.380 --> 00:01:04.010
that occasionally I have
thrown in a call span2.

18
00:01:04.010 --> 00:01:06.710
And occasionally I've
thrown in a row span2.

19
00:01:06.710 --> 00:01:11.835
So that is what is going to be
responsible for driving the spanning

20
00:01:11.835 --> 00:01:16.867
of the various cells and
columns here inside of my layout because

21
00:01:16.867 --> 00:01:22.330
what we're going to do is we're
going to declare our grid on.

22
00:01:22.330 --> 00:01:28.430
And then our allies become our children so
the url is the grid container or

23
00:01:28.430 --> 00:01:33.330
the parent the allies are the children or
the grid items and

24
00:01:33.330 --> 00:01:37.036
that's the way this is
all going to line up.

25
00:01:37.036 --> 00:01:39.334
All right so, as always,

26
00:01:39.334 --> 00:01:44.880
the best place to start with this
is to take a look at your image.

27
00:01:46.120 --> 00:01:50.390
And you're going think about how many
columns and how many rows you have here.

28
00:01:50.390 --> 00:01:56.090
So here we've got one, two,
three, four, five, rows.

29
00:01:56.090 --> 00:02:01.390
And we've got one, two,
three columns, which is great.

30
00:02:01.390 --> 00:02:05.558
And then we just start setting
things up accordingly.

31
00:02:08.963 --> 00:02:12.186
Inside of our CSS if you
scroll on down here,

32
00:02:12.186 --> 00:02:15.850
given you a lot of CSS
that we wrote yesterday.

33
00:02:15.850 --> 00:02:20.369
So starting here inside of the media
query, remember outside the media query,

34
00:02:20.369 --> 00:02:23.210
the images we'll just stack
on top of each other.

35
00:02:23.210 --> 00:02:27.830
There's actually no styling for
the pop art portion of the site outside of

36
00:02:27.830 --> 00:02:32.080
the media query but inside of it,
we've added our pop url.

37
00:02:32.080 --> 00:02:34.220
That will be our display grid.

38
00:02:34.220 --> 00:02:36.640
And I want three evenly sized columns.

39
00:02:36.640 --> 00:02:40.300
Easiest way to do that is just to
make them all one fraction big.

40
00:02:40.300 --> 00:02:42.010
And I gave them a 10 pixel gap.

41
00:02:43.650 --> 00:02:48.563
Then I set up my three styles here
call span2, a call span 3 and

42
00:02:48.563 --> 00:02:52.639
a row span 2and all I had to
do is set up a grid column or

43
00:02:52.639 --> 00:02:57.305
grid row property and
just set it up to say span2 or span3.

44
00:02:57.305 --> 00:03:00.984
So wherever I happen to place
that in the particular web page,

45
00:03:00.984 --> 00:03:05.255
then the image is going to span over
that many columns or that many rows.

46
00:03:07.685 --> 00:03:10.456
Notice here too,
I've added at the bottom here for

47
00:03:10.456 --> 00:03:13.951
some reason the fingers don't
always fill their LI container.

48
00:03:13.951 --> 00:03:18.075
So I found that by adding a height of
100% on the figure help to keep those

49
00:03:18.075 --> 00:03:19.650
evenly sized.

50
00:03:19.650 --> 00:03:25.359
So that is how I solve this
particular problem here,

51
00:03:25.359 --> 00:03:29.659
inside of this particular challenge.

52
00:03:29.659 --> 00:03:34.507
So that is the first part of this,
we've got a mosaic grid all coded up for

53
00:03:34.507 --> 00:03:38.420
you want to take a quick peek
at that inside of the webpage.

54
00:03:40.040 --> 00:03:41.760
So here's the way it winds up looking.

55
00:03:41.760 --> 00:03:46.891
We have our various images,
they're all of the same height,

56
00:03:46.891 --> 00:03:49.960
and it's a fun and engaging layout.

57
00:03:49.960 --> 00:03:53.895
There was nothing wrong with what we did
with Flexbox in terms of all of those

58
00:03:53.895 --> 00:03:55.581
images all next to each other But

59
00:03:55.581 --> 00:03:58.910
this to me is much more interesting
from a design perspective.

60
00:04:00.720 --> 00:04:04.020
All right, so
now that we've got that in place.

61
00:04:04.020 --> 00:04:07.150
Let's go on to incorporating
that grid layout.

62
00:04:07.150 --> 00:04:12.049
Now, it's plugging in to our main
Webpage and what I did was I got rid of

63
00:04:12.049 --> 00:04:17.630
the collections portion of that web page
and substituted in this pop art piece.

64
00:04:17.630 --> 00:04:20.985
If you wanted to keep that collections
layout that we coded in the Flexbox

65
00:04:20.985 --> 00:04:24.640
portion of the course There's
absolutely nothing wrong with that.

66
00:04:24.640 --> 00:04:28.440
You could just add this on as part
of the webpage if you wanted.

67
00:04:28.440 --> 00:04:31.418
So we're starting with the HTML here

68
00:04:31.418 --> 00:04:36.330
with our incorporating this pop
art into the main homepage.

69
00:04:36.330 --> 00:04:38.476
This is the homepage from yesterday, and

70
00:04:38.476 --> 00:04:40.880
I have scrolled all the way
down to the bottom.

71
00:04:42.100 --> 00:04:45.469
Close to the bottom anyway
past the featured print,

72
00:04:50.907 --> 00:04:52.970
Some of down around line 83.

73
00:04:52.970 --> 00:04:58.889
And I just copied the HTML that I
had generated in the 12 A exercise,

74
00:04:58.889 --> 00:05:02.090
pasted it here into my index.HTML.

75
00:05:02.090 --> 00:05:04.849
I didn't need to make any
changes here along the way.

76
00:05:05.990 --> 00:05:10.711
Because I have all of the styling that
I had been previously using is carrying

77
00:05:10.711 --> 00:05:12.860
over here into this design.

78
00:05:12.860 --> 00:05:15.368
The only thing that needs
to be added are those

79
00:05:15.368 --> 00:05:20.280
additional classes that are going to make
this a grid system instead of Flexbox.

80
00:05:20.280 --> 00:05:24.082
And the classes that are going to set
up the spans across the columns and

81
00:05:24.082 --> 00:05:25.860
across the rows.

82
00:05:25.860 --> 00:05:28.236
So then here inside of our CSS,

83
00:05:34.865 --> 00:05:39.550
Down around line 157,
this is outside of the media queries.

84
00:05:39.550 --> 00:05:42.719
I had set up our figures to have
one border color in this case,

85
00:05:42.719 --> 00:05:44.310
I picked color number eight.

86
00:05:44.310 --> 00:05:47.485
You could have picked any of the colors
that probably would have been fine.

87
00:05:49.985 --> 00:05:54.370
I also set up the object position and
the object fit here.

88
00:05:54.370 --> 00:05:59.773
For the image, the object position is set
to 0 and the object fit is set to cover.

89
00:05:59.773 --> 00:06:04.314
To differentiate these images from some
of the other ones that we had where we're

90
00:06:04.314 --> 00:06:08.300
changing some of the positions in
the Flexbox portion of the course.

91
00:06:08.300 --> 00:06:11.733
Okay, and
then inside of our tablet media query,

92
00:06:11.733 --> 00:06:16.720
we're all the way down to line 395
inside of our tablet media query and

93
00:06:16.720 --> 00:06:21.499
in here I have copied over are the call
span and row span columns here.

94
00:06:21.499 --> 00:06:26.268
And then finally the last thing that
I did here on row span2 figure I

95
00:06:26.268 --> 00:06:28.238
have a max height of unset.

96
00:06:28.238 --> 00:06:32.144
We had previously put on
the figure elements way,

97
00:06:32.144 --> 00:06:37.170
way far up towards the top in
the mobile version of this website.

98
00:06:37.170 --> 00:06:41.560
We had set it to have a max height
of 400 pixels for all of our images.

99
00:06:41.560 --> 00:06:45.707
When you bring your mosaic into
this layout here on this homepage,

100
00:06:45.707 --> 00:06:50.449
that max height of 400 pixels would
apply to everything that's inside of

101
00:06:50.449 --> 00:06:52.270
your grid system.

102
00:06:52.270 --> 00:06:56.848
In that particular case the way these
images are in their sizes and so

103
00:06:56.848 --> 00:07:02.005
forth it really chopped them all in
pieces and so I didn't like that effect.

104
00:07:02.005 --> 00:07:05.710
I just turned off the max height
here by using the unset value so

105
00:07:05.710 --> 00:07:09.072
it would forget about that
max height of 400 pixels.

106
00:07:09.072 --> 00:07:16.190
And so that fix that problem particularly
on the rowspan2 where that was an issue.

107
00:07:16.190 --> 00:07:18.820
And that's pretty much all I needed to do.

108
00:07:18.820 --> 00:07:21.999
Those styles will carry then
into the desktop layout,

109
00:07:21.999 --> 00:07:23.803
which is exactly what we want.

110
00:07:23.803 --> 00:07:29.203
So that's how you can code up a little
example over here in isolation and

111
00:07:29.203 --> 00:07:32.810
then very easily integrated
into your homepage

