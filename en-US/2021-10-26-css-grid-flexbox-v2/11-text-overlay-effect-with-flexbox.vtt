WEBVTT

1
00:00:00.000 --> 00:00:04.818
Okay, so the next thing I want to
move on to we're gonna take a look at

2
00:00:04.818 --> 00:00:07.373
some figures and figure captions.

3
00:00:07.373 --> 00:00:10.613
I'm actually going to go back to old
school relative absolute relative

4
00:00:10.613 --> 00:00:11.319
positioning.

5
00:00:11.319 --> 00:00:15.784
So what we've got going on here is
we've got four very cool pictures,

6
00:00:15.784 --> 00:00:16.852
there they are.

7
00:00:16.852 --> 00:00:19.760
And they have captions that
are associated with them.

8
00:00:19.760 --> 00:00:24.930
So we're working with this same concept
here of figures and figure captions.

9
00:00:24.930 --> 00:00:27.820
And as you see here, there's the figure.

10
00:00:27.820 --> 00:00:29.310
They're all pretty much the same.

11
00:00:29.310 --> 00:00:32.840
Obviously, they have different images,
but there we go.

12
00:00:32.840 --> 00:00:36.291
There's the figure, here's our image,
here's our figure caption.

13
00:00:36.291 --> 00:00:38.320
And we've got a bunch of
these here on the page.

14
00:00:40.290 --> 00:00:44.670
Now, what I'd like to do, one of
the things that we often like to do with

15
00:00:44.670 --> 00:00:49.269
figures and figure captions like this,
is we can display them like this and

16
00:00:49.269 --> 00:00:53.211
that is just fine, but we may like
to take that figure caption and

17
00:00:53.211 --> 00:00:57.893
display it on top of the figure, and
maybe make it a little bit transparent.

18
00:00:57.893 --> 00:01:01.014
It'll be really cool kind of
looking in order to do that.

19
00:01:01.014 --> 00:01:04.559
With Flexbox, the best way to
approach this is using absolute and

20
00:01:04.559 --> 00:01:06.720
relative positioning.

21
00:01:06.720 --> 00:01:09.935
And the thing is with absolute and
relative positioning,

22
00:01:09.935 --> 00:01:13.871
when you get taught this stuff,
it's really kind of complicated, and

23
00:01:13.871 --> 00:01:16.824
people get very confused by
the all of the absolute and

24
00:01:16.824 --> 00:01:20.260
relative positioning stuff
that goes along with this.

25
00:01:20.260 --> 00:01:25.292
And so I wanted to take the time to walk
you through exactly how absolute and

26
00:01:25.292 --> 00:01:29.026
relative positioning works and
why it works, again,

27
00:01:29.026 --> 00:01:34.242
in isolation rather than just sort of
giving you a formula for how to do this.

28
00:01:34.242 --> 00:01:38.195
So this is the CSS that we
have here to start with.

29
00:01:38.195 --> 00:01:39.790
Basically, here's our figure,

30
00:01:39.790 --> 00:01:42.760
we've turned off the margin
that was set by the browser.

31
00:01:42.760 --> 00:01:44.651
Where's our caption styling,

32
00:01:44.651 --> 00:01:48.460
it's basically the same stuff
that you've already seen.

33
00:01:48.460 --> 00:01:50.090
Here's our margin.

34
00:01:50.090 --> 00:01:52.760
And then,
here's a hack to make our images flexible.

35
00:01:52.760 --> 00:01:57.170
So notice that I set our images
to a 100% for the width,

36
00:01:57.170 --> 00:02:02.200
so the way this works is that
images are an inline element.

37
00:02:02.200 --> 00:02:07.560
They are by default set to be
as wide as the image is itself.

38
00:02:07.560 --> 00:02:11.540
And if you make your screen too small,
you've probably seen this before.

39
00:02:11.540 --> 00:02:13.420
You will start to get
a scroll bar on the bottom,

40
00:02:13.420 --> 00:02:16.160
you'll have to scroll over to
see the rest of the image.

41
00:02:16.160 --> 00:02:19.109
When you put a width of
100% on your images,

42
00:02:19.109 --> 00:02:22.570
they will expand to fill their container.

43
00:02:22.570 --> 00:02:25.170
And they will also shrink
down proportionately.

44
00:02:25.170 --> 00:02:27.580
This is a very fake responsive image.

45
00:02:27.580 --> 00:02:30.643
This is not true responsive images.

46
00:02:30.643 --> 00:02:36.436
But what it does do is it lets
our images flex a little bit,

47
00:02:36.436 --> 00:02:41.146
such that what as we're
working here inside of

48
00:02:41.146 --> 00:02:46.113
our code pen,
we get a sense of a flexible image.

49
00:02:46.113 --> 00:02:50.892
And then, down here in the media queries,
basically,

50
00:02:50.892 --> 00:02:56.179
I'm just putting these on row down,
so that they don't stack

51
00:02:56.179 --> 00:03:02.135
on top of each other and then they
go to a two by two grid like this.

52
00:03:02.135 --> 00:03:03.395
So a really simple layout.

53
00:03:05.325 --> 00:03:11.183
Okay, so the next thing that I want to
do is I'm going to put it up here, right

54
00:03:11.183 --> 00:03:17.910
here at the top around line number seven
where I've got the figure declaration.

55
00:03:17.910 --> 00:03:25.600
I'm going to add to
this a display of flex.

56
00:03:28.100 --> 00:03:28.850
How cool is that?

57
00:03:30.070 --> 00:03:32.367
So just by saying display flex,

58
00:03:32.367 --> 00:03:36.550
I've managed to put the caption
next to these images.

59
00:03:36.550 --> 00:03:38.997
So we had them set up
stacked on top of each other,

60
00:03:38.997 --> 00:03:42.600
which is the default behavior
with figure and figure caption.

61
00:03:42.600 --> 00:03:46.994
By just saying display flex,
they now just appear next to each other,

62
00:03:46.994 --> 00:03:49.360
horizontally here in space.

63
00:03:49.360 --> 00:03:53.850
If you want this you can keep it,
that's absolutely fine.

64
00:03:53.850 --> 00:03:59.363
But you can also rearrange it, somebody
was asking about when to use column.

65
00:03:59.363 --> 00:04:03.832
Well, here's a place where
it would make perfect sense,

66
00:04:03.832 --> 00:04:08.114
we could say our flex flow is column,
no wrap.

67
00:04:08.114 --> 00:04:12.004
So that's going to put our caption and
our image right next to each other,

68
00:04:12.004 --> 00:04:15.093
stacked very nicely on top of each other,
just like this.

69
00:04:15.093 --> 00:04:19.977
Notice there's no little space in
between them that we had before with

70
00:04:19.977 --> 00:04:24.790
the figure caption, which is coming
from the browser or somewhere.

71
00:04:24.790 --> 00:04:29.785
Okay, so now for the figure caption,
here's what I'm going to do just

72
00:04:29.785 --> 00:04:35.135
after all of the stuff that I've got here,
if we said position of absolute,

73
00:04:36.992 --> 00:04:40.739
This is going to immediately
take all of our captions and

74
00:04:40.739 --> 00:04:44.480
just stick them somewhere
here on the page.

75
00:04:44.480 --> 00:04:48.480
And in this case, it happens to put
it up in the upper left hand corner.

76
00:04:48.480 --> 00:04:53.373
The reason why this happens
is that the caption itself

77
00:04:53.373 --> 00:04:57.910
is going to work its way up its HTML here.

78
00:04:57.910 --> 00:05:01.728
We start with a caption, it's looking for

79
00:05:01.728 --> 00:05:06.288
some sort of element where
it will eventually go all

80
00:05:06.288 --> 00:05:10.966
the way up to the top left
hand corner of the webpage.

81
00:05:10.966 --> 00:05:14.406
But by setting this up
with Flexbox like this,

82
00:05:14.406 --> 00:05:19.091
it will go up to the upper left
hand corner of the screen figure.

83
00:05:19.091 --> 00:05:23.782
The other way that we do this
without Flexbox that you can do

84
00:05:23.782 --> 00:05:28.684
here as well would be to say
position relative on the figure.

85
00:05:28.684 --> 00:05:33.057
And that will tell the absolutely
positioned element

86
00:05:33.057 --> 00:05:37.632
where should it be absolutely
positioned relative to.

87
00:05:37.632 --> 00:05:41.189
If there's no relative position
declared anywhere in the webpage,

88
00:05:41.189 --> 00:05:45.129
it will eventually wind up in the top
left hand corner of your of your screen.

89
00:05:45.129 --> 00:05:48.084
This is why we often set
position of relative first,

90
00:05:48.084 --> 00:05:51.039
because we're going to put
it relative to that, and

91
00:05:51.039 --> 00:05:54.957
then we have our absolute positioning
within that particular area.

92
00:05:54.957 --> 00:05:59.909
So here it's gonna be within
the figure boundaries where

93
00:05:59.909 --> 00:06:04.561
are we gonna set our
absolutely positioned caption.

94
00:06:04.561 --> 00:06:07.876
So we need a little bit more,
probably a little bit more,

95
00:06:07.876 --> 00:06:10.097
styling here on this figure caption.

96
00:06:10.097 --> 00:06:15.126
So I'm going to say the bottom is 0%,
so we'll put it down

97
00:06:15.126 --> 00:06:20.474
there on the bottom, and
we can also say the width is 100%.

98
00:06:21.980 --> 00:06:25.052
So it'll stretch very
nicely across our figure.

99
00:06:25.052 --> 00:06:29.192
And the little sizzle part would be to do

100
00:06:29.192 --> 00:06:33.838
something with opacity of say like 0.7.

101
00:06:35.810 --> 00:06:36.625
There we go.

102
00:06:36.625 --> 00:06:39.736
So now we can see the image
coming through underneath.

103
00:06:39.736 --> 00:06:44.340
So now, we have a very attractive way of
laying out our images here on the web page

104
00:06:44.340 --> 00:06:46.144
with this cool little figure.

105
00:06:46.144 --> 00:06:48.999
And hopefully this also
sparked some ideas for

106
00:06:48.999 --> 00:06:53.070
you of things that you could
do with this figure caption.

107
00:06:53.070 --> 00:06:58.250
Right now, it's just set to stay
there across all dimensions, right?

108
00:06:58.250 --> 00:07:02.790
It's just always gonna have this lovely
figure caption on top of these things.

109
00:07:02.790 --> 00:07:07.652
But if you wanted, you could do
something where the figure caption maybe

110
00:07:07.652 --> 00:07:12.513
shifts when you have a wider screen,
you can take that figure caption and

111
00:07:12.513 --> 00:07:16.974
display it to the right or to the left
of your image if you wanted to,

112
00:07:16.974 --> 00:07:20.986
using Flexbox instead of
displaying it on top of the image.

113
00:07:20.986 --> 00:07:25.213
So you have a lot of flexibility once
you start looking at these in terms

114
00:07:25.213 --> 00:07:29.800
of micro layouts, and so sort of
the giant layout of the whole web page.

115
00:07:29.800 --> 00:07:32.700
&gt;&gt; So
flex grow one evenly distributes elements.

116
00:07:32.700 --> 00:07:37.986
So I was just wondering if the media
query scenario fitting everything

117
00:07:37.986 --> 00:07:42.734
on one row could be used that for
the elements of the same width,

118
00:07:42.734 --> 00:07:47.390
instead of calculating the percentage for
the flex basis.

119
00:07:47.390 --> 00:07:50.250
&gt;&gt; Okay, all right, I understand
the question a little bit better now.

120
00:07:50.250 --> 00:07:54.500
So it's flex grow, I had heard flex flow,
and I was very confused.

121
00:07:54.500 --> 00:07:59.035
Flex grow as a just changing the value
of flex grow as you go between

122
00:07:59.035 --> 00:08:01.530
various media queries.

123
00:08:01.530 --> 00:08:03.313
You probably could do that, but

124
00:08:03.313 --> 00:08:06.890
you are leaving a lot of
calculation to the browser.

125
00:08:06.890 --> 00:08:09.175
And so when you leave
calculations to the browser,

126
00:08:09.175 --> 00:08:13.400
that means every browser may do their
calculations slightly differently.

127
00:08:13.400 --> 00:08:16.794
I would think that that is probably not
an approach that you would want to do for

128
00:08:16.794 --> 00:08:18.100
that reason.

129
00:08:18.100 --> 00:08:20.320
But you could certainly
experiment with it.

130
00:08:20.320 --> 00:08:22.280
Try it across a whole bunch
of different browsers.

131
00:08:22.280 --> 00:08:26.020
See if you get something that you like
that would be one way of thinking

132
00:08:26.020 --> 00:08:27.400
about it.

133
00:08:27.400 --> 00:08:30.330
But the flex basis methodology
that I've talked about here

134
00:08:30.330 --> 00:08:32.880
is pretty straightforward to understand.

135
00:08:32.880 --> 00:08:35.911
It kinda like width,
it's just a little bit different, and

136
00:08:35.911 --> 00:08:38.943
I think it's conceptually
a little bit easier to understand

137
00:08:38.943 --> 00:08:40.680
than doing things with Flex grow.

138
00:08:42.000 --> 00:08:45.152
&gt;&gt; How is figxaption with
accessibility in mind?

139
00:08:45.152 --> 00:08:49.477
&gt;&gt; Figcaption is awesome
with accessibility in mind.

140
00:08:49.477 --> 00:08:52.126
When you start with
semantically good HTML,

141
00:08:52.126 --> 00:08:56.517
you have a much better chance of hitting
your accessibility targets here,

142
00:08:56.517 --> 00:09:00.014
the whole purpose of figure
in Figcaptions the following.

143
00:09:00.014 --> 00:09:05.683
So it's to associate some sort of label
the text, right, the caption associated

144
00:09:05.683 --> 00:09:10.694
with whatever you have inside of
the figure, whether that's an image or

145
00:09:10.694 --> 00:09:16.464
a code snippet, or ASCII art, or whatever
other craziness you wanna put in there.

146
00:09:16.464 --> 00:09:22.380
And so using this semantic markup is
a really wonderful way of doing that.

147
00:09:22.380 --> 00:09:27.473
The other thing that a figure does I
haven't really talked about, when you have

148
00:09:27.473 --> 00:09:32.930
a figure itself, it indicates that that
particular element kind of stands alone.

149
00:09:32.930 --> 00:09:37.531
So we could pull it out and we can put it
elsewhere on the page in terms of layouts,

150
00:09:37.531 --> 00:09:40.502
and we're not destroying
the message of the page.

151
00:09:40.502 --> 00:09:43.868
So if you're using an image
by itself on the page,

152
00:09:43.868 --> 00:09:48.133
it appears where it appears in
your layout, and that's fine.

153
00:09:48.133 --> 00:09:51.039
But with a figure we
might move it around and

154
00:09:51.039 --> 00:09:54.361
you can think about this
back to like a textbook.

155
00:09:54.361 --> 00:09:58.958
So if you're reading a textbook and it
says in figure one be sure to take note of

156
00:09:58.958 --> 00:10:03.554
blah blah blah, and you look around on
the page, you may have to look aways and

157
00:10:03.554 --> 00:10:06.879
then you find figure one,
it's labeled as figure one,

158
00:10:06.879 --> 00:10:09.240
right, with whatever picture it is.

159
00:10:09.240 --> 00:10:11.880
It isn't necessarily
right next to the text.

160
00:10:11.880 --> 00:10:16.256
So likewise here in HTML,
your figure can move around on that page.

161
00:10:16.256 --> 00:10:18.560
It doesn't have to stay
in one particular place.

162
00:10:20.240 --> 00:10:22.740
&gt;&gt; This figure act as a thumbnail for
the video.

163
00:10:24.250 --> 00:10:28.583
&gt;&gt; Figure as a thumbnail for video,
no, I think what you're thinking of is

164
00:10:28.583 --> 00:10:32.347
the poster attribute, so
in the video element there is a poster

165
00:10:32.347 --> 00:10:36.840
attribute that will be the static image
that displays on top of your video.

