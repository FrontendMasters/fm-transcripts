WEBVTT

1
00:00:00.180 --> 00:00:04.669
Now that we have a desktop version of
our grid system, let's go through and

2
00:00:04.669 --> 00:00:07.700
add to this now the mobile
versions of this.

3
00:00:07.700 --> 00:00:14.053
So to get started with that, what I'm
going to do is I'm going to take my,

4
00:00:14.053 --> 00:00:19.381
just these span type of items
that are down here at the bottom,

5
00:00:19.381 --> 00:00:21.440
the span 2, 3 and 4.

6
00:00:21.440 --> 00:00:25.450
And I'm going to contain those
inside of a media query.

7
00:00:25.450 --> 00:00:31.037
I'm just a add media and
we'll say it's a min width of 1000

8
00:00:31.037 --> 00:00:37.805
pixels which may not work well on
the display that I'm using here right now.

9
00:00:37.805 --> 00:00:39.920
So I may need to adjust
that a little bit but

10
00:00:39.920 --> 00:00:42.720
it probably will work
fine on your monitor.

11
00:00:42.720 --> 00:00:46.642
I've got mine kind of scrunched
down a little bit here so

12
00:00:46.642 --> 00:00:48.900
you can see my code nice and big.

13
00:00:51.220 --> 00:00:53.000
When we get in depth out a little bit.

14
00:00:53.000 --> 00:00:57.602
Now notice I did not include my grid
declaration here inside of this

15
00:00:57.602 --> 00:01:00.820
particular media query and
the reason why is.

16
00:01:00.820 --> 00:01:03.749
Because in this particular case,

17
00:01:03.749 --> 00:01:10.420
I'm gonna have a tablet media query
where I'm gonna declare my grid.

18
00:01:10.420 --> 00:01:12.661
And all of the parameters there in,

19
00:01:12.661 --> 00:01:16.173
that will cascade into my
desktop media query later, so

20
00:01:16.173 --> 00:01:21.642
I don't need to redeclare display grid and
all of that other additional information.

21
00:01:21.642 --> 00:01:25.252
I can declare at once inside of
the tablet, and it will cascade into my

22
00:01:25.252 --> 00:01:28.867
desktop media queries because I'm
using min width media queries and

23
00:01:28.867 --> 00:01:30.940
will stack them up on top of each other.

24
00:01:32.560 --> 00:01:35.680
In fact,
I'm going to back this off to 800 pixels.

25
00:01:35.680 --> 00:01:38.730
So we have a little bit more
room on my particular monitor.

26
00:01:38.730 --> 00:01:41.240
You can keep yours at 1000
if that works better.

27
00:01:42.240 --> 00:01:44.167
Maybe I even need to back it off further.

28
00:01:47.672 --> 00:01:50.220
700, something like that, anyway.

29
00:01:51.410 --> 00:01:58.610
Then up here, around my wrapper, I'm gonna
set this up with a media query as well.

30
00:01:58.610 --> 00:02:05.280
This will be at media and
we'll say a min width of 600 pixels.

31
00:02:12.953 --> 00:02:17.940
And the curly bracket down here
on the bottom, don't this.

32
00:02:19.260 --> 00:02:24.636
So that'll get us started here with
looking at this both on tablet and

33
00:02:24.636 --> 00:02:27.090
then later on desktop.

34
00:02:27.090 --> 00:02:31.815
What we need to do now is to think about
exactly how this is gonna work across

35
00:02:31.815 --> 00:02:34.330
are various break points.

36
00:02:34.330 --> 00:02:38.770
And we are going to use exactly the same
model that we use with Flexbox.

37
00:02:38.770 --> 00:02:41.650
So we're gonna have to
think about how some

38
00:02:41.650 --> 00:02:46.291
of these layouts are gonna change
over the course of working on this.

39
00:02:47.680 --> 00:02:52.300
We go so
right now here's the desktop layout.

40
00:02:53.340 --> 00:02:57.326
Okay, so there's the desktop
layout as we've got it and

41
00:02:57.326 --> 00:03:02.224
one of the things we need to add to
that desktop layout real quick before

42
00:03:02.224 --> 00:03:06.895
I move on is some ordering down here
on the bottom for this last row.

43
00:03:06.895 --> 00:03:12.329
Remember we wanted that in the 1,2,
1 configuration snd right now we have 2,

44
00:03:12.329 --> 00:03:16.843
1, 1 for that configuration so
let's add that before we move on.

45
00:03:16.843 --> 00:03:21.166
And so
down here in our desktop media query let's

46
00:03:21.166 --> 00:03:24.439
add some additional styles to this.

47
00:03:24.439 --> 00:03:28.759
We can add ordering to this it
works exactly the same way it

48
00:03:28.759 --> 00:03:32.359
doesn't Flexbox exactly
the same property and

49
00:03:32.359 --> 00:03:38.211
all the rest of it which is really nice so
I'm going to create a class of order.

50
00:03:38.211 --> 00:03:41.792
Let's say order 2,

51
00:03:44.952 --> 00:03:48.318
With an order of 2 and

52
00:03:48.318 --> 00:03:53.367
we'll set up one with order 1.

53
00:03:53.367 --> 00:03:58.295
With an order of 1 just like that, and

54
00:03:58.295 --> 00:04:03.377
then in our HTML you have small I can make

55
00:04:03.377 --> 00:04:08.767
this go up here in our
HTML then we can add to

56
00:04:08.767 --> 00:04:15.565
this additional classes to
deal with the ordering.

57
00:04:15.565 --> 00:04:20.276
So here in our first cell we
want this to be order two and

58
00:04:20.276 --> 00:04:24.153
then in these other
figures this next figure

59
00:04:24.153 --> 00:04:28.575
specifically will have
have a class of order one.

60
00:04:30.315 --> 00:04:32.535
And that will swap things around nicely.

61
00:04:35.085 --> 00:04:39.595
And maybe we have to add one
more with a class of order3.

62
00:04:41.665 --> 00:04:44.885
And we can write in that class down here.

63
00:04:46.275 --> 00:04:50.588
Order3, order3.

64
00:04:54.570 --> 00:04:58.700
And so now you should see that the way
that you wanted it to go, all right?

65
00:04:58.700 --> 00:04:59.494
So order 1,

66
00:04:59.494 --> 00:05:04.820
order 2, order 3 all lined up here in
that particular row as you would expect.

67
00:05:04.820 --> 00:05:07.600
Because it's here on the desktop,
then we'll reorder here.

68
00:05:07.600 --> 00:05:11.706
It won't reorder necessarily on the tablet
unless we specifically want to do

69
00:05:11.706 --> 00:05:15.850
something different on the tablet,
which we don't necessarily.

70
00:05:15.850 --> 00:05:18.810
And then of course, on mobile,
it's going to display in source order.

71
00:05:20.010 --> 00:05:24.666
We won't actually put anything
outside the media queries here dealing

72
00:05:24.666 --> 00:05:28.945
with layout because what we'll
do outside of the media queries.

73
00:05:28.945 --> 00:05:34.662
These are just a bunch of figures
which are block display by default.

74
00:05:34.662 --> 00:05:37.794
They will just stack on top of each
other going down the page which

75
00:05:37.794 --> 00:05:40.299
is often the layout that
you want on mobile anyway.

76
00:05:40.299 --> 00:05:44.767
There are some other styles that are down
here later in the document that provide

77
00:05:44.767 --> 00:05:46.470
the default styling.

78
00:05:46.470 --> 00:05:49.825
None of these styles have anything to
do with the layout of the web page.

79
00:05:52.123 --> 00:05:55.273
Okay, so now that desktop is done,

80
00:05:55.273 --> 00:06:00.839
as we move on to our tablet display
let's get to our appropriate

81
00:06:00.839 --> 00:06:05.365
break point which looks
like right about in there.

82
00:06:05.365 --> 00:06:09.506
And so
here what I'd like to have happen is I'd

83
00:06:09.506 --> 00:06:13.552
like my this row of four
boxes that first row.

84
00:06:13.552 --> 00:06:18.859
I'd like it to turn into two boxes
spanning over two columns or

85
00:06:18.859 --> 00:06:25.640
effectively that followed by two more
boxes, spanning over two columns.

86
00:06:25.640 --> 00:06:30.571
So we can write that fairly
easily here as well.

87
00:06:30.571 --> 00:06:35.560
And we're gonna leverage more of those
span properties that we used earlier.

88
00:06:35.560 --> 00:06:40.854
So here what I'm going to do
is I'm going to say figure,

89
00:06:40.854 --> 00:06:44.471
just my generic HTML figure element.

90
00:06:44.471 --> 00:06:47.934
Remember all the classes come later,
they're also more specific so

91
00:06:47.934 --> 00:06:51.000
they're gonna over rewrite
whatever I put here.

92
00:06:51.000 --> 00:06:56.537
So for figure,
I'm going to say grid column span 2.

93
00:06:56.537 --> 00:07:00.120
See how nicely that is.

94
00:07:00.120 --> 00:07:04.131
We don't have to do it once again,
still no math, no worrying about the gap,

95
00:07:04.131 --> 00:07:07.640
taking that into consideration,
all of that kind of thing.

96
00:07:07.640 --> 00:07:12.868
So here's my first row very
simply went ahead and distributed

97
00:07:12.868 --> 00:07:19.819
itself very nicely we'll have some more
tweaks here to make a little bit later on.

98
00:07:19.819 --> 00:07:25.937
When we go to our desktop though
notice that it's gonna continue on and

99
00:07:25.937 --> 00:07:32.850
that is because in this first row,
we just have a series of figure elements.

100
00:07:32.850 --> 00:07:35.990
We're gonna need to override that
layout when we get to our desktop.

101
00:07:35.990 --> 00:07:40.509
So here in our desktop layout,
we can say our figure,

102
00:07:43.755 --> 00:07:46.805
Will wind up being a grid column.

103
00:07:50.748 --> 00:07:55.070
Of span one basically
span across one column.

104
00:07:55.070 --> 00:07:58.404
So there it is working nicely on desktop,
and

105
00:07:58.404 --> 00:08:04.130
when we go to tablet there it is working
nicely on tablet so row one is all done.

106
00:08:05.920 --> 00:08:10.440
Row two we want it to be too across here.

107
00:08:11.540 --> 00:08:16.572
And when we go to, tablet layouts,
we want it to remain that way so

108
00:08:16.572 --> 00:08:22.905
we don't have any changes we need to make
here on tablet for that particular item.

109
00:08:25.176 --> 00:08:28.946
For row number three,
we want remember we want our,

110
00:08:28.946 --> 00:08:32.300
the one on desktop that
took up three columns.

111
00:08:32.300 --> 00:08:34.594
We want it to take up the full width here,
and

112
00:08:34.594 --> 00:08:37.710
the one next to it we want it to
take up the full width as well.

113
00:08:37.710 --> 00:08:39.953
So let's write some styling for that.

114
00:08:43.178 --> 00:08:47.449
We had a class of span3 which now we can

115
00:08:47.449 --> 00:08:52.256
repurpose here in our tablet media query,

116
00:08:52.256 --> 00:08:57.744
we'll just simply say
grid-column of span4.

117
00:08:57.744 --> 00:09:00.009
So now it will take up that full row.

118
00:09:04.191 --> 00:09:09.752
Now this other individual box here
inside of row three it's just a figure

119
00:09:09.752 --> 00:09:14.960
all by itself, we want this one to
behave a little bit differently.

120
00:09:14.960 --> 00:09:19.842
Its default figure behavior is to
take up one column on desktop and

121
00:09:19.842 --> 00:09:22.130
two columns on tablet.

122
00:09:22.130 --> 00:09:25.709
But in this case we wanted to
take up one column on desktop and

123
00:09:25.709 --> 00:09:27.670
four columns on tablet.

124
00:09:27.670 --> 00:09:31.282
So we are going to write a style for

125
00:09:31.282 --> 00:09:36.059
that as well and
I'm gonna call this style.

126
00:09:40.088 --> 00:09:47.560
Class of you could do something
like span1-lg, something like that.

127
00:09:48.660 --> 00:09:53.301
And what might be your name for
that particular class and

128
00:09:53.301 --> 00:09:58.152
then you can write it here span,
in fact we can combine it.

129
00:10:01.122 --> 00:10:06.679
Right here with span3,
we could say span 1-lg so

130
00:10:06.679 --> 00:10:13.284
that's gonna have that property
of spanning four columns.

131
00:10:14.889 --> 00:10:20.659
And now it does but
it will also do so on desktop because

132
00:10:20.659 --> 00:10:26.556
we haven't told it to go back
to one column on desktop,

133
00:10:26.556 --> 00:10:32.471
so we'll need to override
that when we get to desktop.

134
00:10:32.471 --> 00:10:37.448
And so here with our figure
that now spans one column,

135
00:10:37.448 --> 00:10:44.097
we can combine that and say power
span1-lg will also span one column.

136
00:10:44.097 --> 00:10:45.290
And so it does.

137
00:10:45.290 --> 00:10:47.986
So far Things are looking good for

138
00:10:47.986 --> 00:10:52.520
our first three rows on both tablet there,
there it is.

139
00:10:52.520 --> 00:10:57.197
There's the tablet and on the desktop.

140
00:10:59.281 --> 00:11:01.990
So now row number four, row number four.

141
00:11:01.990 --> 00:11:07.496
Remember it needs to span across four
columns on tablet and on desktop.

142
00:11:07.496 --> 00:11:12.596
We actually have that style here
on desktop already we could

143
00:11:12.596 --> 00:11:18.928
just simply cut and paste that from
the desktop to the tablet media query.

144
00:11:18.928 --> 00:11:23.170
Because we actually want the same
behavior at both breakpoints.

145
00:11:23.170 --> 00:11:25.221
So we'll specify it on tablet and

146
00:11:25.221 --> 00:11:28.455
it'll carry through into
the desktop media query.

147
00:11:31.637 --> 00:11:34.470
So there that one is on tablet.

148
00:11:34.470 --> 00:11:35.520
There it is on desktop.

149
00:11:37.810 --> 00:11:42.430
And then in our last row always a little
bit trickier than the other ones.

150
00:11:42.430 --> 00:11:47.809
We want to have this first cell we'd like
that to stretch across maybe the full

151
00:11:47.809 --> 00:11:53.670
width and then the other two cells to
be on the next row, just as they were.

152
00:11:53.670 --> 00:11:57.306
And so
we can set up some styling for that.

153
00:12:01.323 --> 00:12:04.414
So what I'm gonna do
here five this first box,

154
00:12:04.414 --> 00:12:08.160
we've called it just
a regular old span to before.

155
00:12:08.160 --> 00:12:12.783
What I'm going to do now is
change this and I'm gonna call it

156
00:12:12.783 --> 00:12:18.330
a span2- whatever -medium,
-large something like that.

157
00:12:18.330 --> 00:12:22.180
And then we can set up a class for that.

158
00:12:23.940 --> 00:12:28.604
What I'd like it to do at the tablet
media query is I'd like it to

159
00:12:28.604 --> 00:12:30.635
span across four columns.

160
00:12:37.092 --> 00:12:44.541
So we can say span4-md,
let me fix the HTML,

161
00:12:44.541 --> 00:12:49.322
this is a span4-md as well.

162
00:12:52.019 --> 00:12:55.446
And then all we have to do is just change
it down here inside of the desktop.

163
00:12:55.446 --> 00:13:01.767
So span2 and span4-md we'll

164
00:13:01.767 --> 00:13:07.390
have that same behavior oops

165
00:13:12.055 --> 00:13:15.708
Okay, so
there's the lineup here on the desktop and

166
00:13:15.708 --> 00:13:21.940
when we go to our tablet layout, there's
the one spanning across the full width.

167
00:13:21.940 --> 00:13:25.180
And we have the two cells
here that show up underneath.

168
00:13:25.180 --> 00:13:26.279
Everything is looking great.

169
00:13:27.320 --> 00:13:31.139
If you that grid gap here
strikes you is a little bit big,

170
00:13:31.139 --> 00:13:35.860
you could always change that here
inside of your tablet media query.

171
00:13:35.860 --> 00:13:41.655
Maybe you wanna go down to something
like 2% here on the wrapper,

172
00:13:41.655 --> 00:13:45.805
maybe tighten things up
a little bit even 1%.

173
00:13:45.805 --> 00:13:50.916
Maybe you want them even
a little bit tighter you could do

174
00:13:50.916 --> 00:13:58.436
a combination of numbers here 2% 1%
oops sorry the other way around 1% 2%.

175
00:14:01.647 --> 00:14:04.507
We'll get you slightly
different dimensions.

176
00:14:04.507 --> 00:14:06.960
One will be columns,
the other will be rows.

177
00:14:06.960 --> 00:14:10.359
So you can put in two numbers like that
to make this look a little bit better

178
00:14:10.359 --> 00:14:11.385
on tablet.

179
00:14:11.385 --> 00:14:16.829
And of course, then when you get down
here to your desktop if you wanted to

180
00:14:16.829 --> 00:14:23.089
go back to that full 4% gap, then you just
write a style for that wrapper gap 4%.

181
00:14:25.998 --> 00:14:28.780
So you can override anything
anywhere along the way.

182
00:14:29.870 --> 00:14:33.864
Again that's not necessarily something
that we do so much with Flexbox, but

183
00:14:33.864 --> 00:14:36.880
it's absolutely possible to
do very easily with grid.

184
00:14:36.880 --> 00:14:40.157
It's really nice because
always the math is done for

185
00:14:40.157 --> 00:14:45.010
you in grid whereas you're gonna have
to do that math yourself with flexbox.

186
00:14:45.010 --> 00:14:49.852
So this is some pointers on how you
can write your own grid system using

187
00:14:49.852 --> 00:14:54.360
CSS grid so again this is something
that you can do to get away from

188
00:14:54.360 --> 00:14:57.886
using some of the responsive
design frameworks.

189
00:14:57.886 --> 00:15:01.936
You don't have to buy into
a bootstrap type of grid system or

190
00:15:01.936 --> 00:15:06.796
anything else you as you see here
it's pretty straightforward to write

191
00:15:06.796 --> 00:15:08.337
something with grid.

192
00:15:08.337 --> 00:15:11.200
That's very, very lightweight and
will do exactly what you want.

193
00:15:11.200 --> 00:15:15.462
You can program all of the behaviors
that you want across the various

194
00:15:15.462 --> 00:15:17.782
breakpoints really pretty easily,

195
00:15:17.782 --> 00:15:22.370
just by counting how wide you want
things in terms of the number of boxes.

196
00:15:22.370 --> 00:15:25.640
As opposed to Flexbox where
you do have to do real math.

