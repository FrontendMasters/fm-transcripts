[00:00:00]
>> So this is the first challenge for the collections. This is what the screen should look like on a desktop by the time you're done notice that we have a series of images here. There are two rows with three columns each have different color borders associated with them.

[00:00:16]
Notice that we have the figure caption here overlapping the image just like we did in the previous code pen. So, that is what it should look like there at desktop. When we go to tablet, it's going to be two images across. And when we go to a mobile, it's going to be a series of images in a column.

[00:00:35]
So go ahead and give that a try. Hope you did okay on the collections. Let's go through exactly how these are going to work how I coded them. As always, there's lots of different ways to approach these problems. So you may have come up with something slightly different, but I'll tell you about how I address this particular problem.

[00:01:01]
So if we take a look at our HTML here, what I've done is the following I've set this up first of all inside of a section rather than using a div. I've set this up as a section. The reason why is because this is a section of the webpage that happens to be talking about collections.

[00:01:18]
You could have used a div tag here if you wanted, it's less meaningful. I understand that the accessibility of section is kind of hit or miss in terms of whether screen readers actually understand the section for an element but I decided to use it anyway. Anytime you have a section you need a heading so there it is h2 my assumption is of course that somewhere on the page there will eventually be an h1 which is why I started with h2.

[00:01:44]
And then, this is a list of pictures and so this is marked up as a list inside of each list item is our figure. And these are more or less marked up the way you've seen in several examples prior to this. So there's a figure tag, there's an image, and then there's a figure caption inside of each of these.

[00:02:02]
I wound up assigning classes to each one of these figures. And that class is numbered color seven, color two and so forth that's actually going to match back to our CSS. So that is the HTML markup that I used here on the CSS side. Let's go through that.

[00:02:22]
So I started off giving you The series of colors that are here inside of this example for the page that we're building. And the designer gave me ten different colors, so I just set them all up, numbered one to ten, and there are all of the values. You could, if you know how to use CSS, custom properties or variables, as they're often called, you can absolutely call on these colors inside of your code.

[00:02:51]
If you're not familiar with that code, just take that codes and drop them into your CSS and that will work just fine also. As I mentioned earlier, I have not made extensive use of variables inside of this course again, because this is more targeted towards beginners who are just starting out and I'm trying to keep this as straightforward as possible.

[00:03:11]
But clearly you can do more with variables in the work that I'm done here. All right, so then we have our, basic quarter box styling, we have some basic body sitting up our margin. And I said on our sections such that We won't go wider than 1200 pixels just so the screen doesn't get ridiculously large and set up some margin and some padding on that as well as a font size.

[00:03:44]
Now we're going into our new styles. So well as always the first step anytime you're using markup like this is to turn off the bullets. It is set up as a list because that is semantically what this is just a list of images. And of course those come with bullets so we turn those off.

[00:04:05]
Then as I say here, to keep the mobile screens from being stupid long keep, consider setting a max height on the images and then hide the overflow. Because otherwise you might wind up with images that may take up even more than one screen on a phone. So you might really indeed want to set a max width and then just hide that overflow which is what I've done here.

[00:04:29]
We've got a bit of margin on these to put a bit of separation on them and, I set up a tiny little bit of a border radius and then notice that I spelled out individually my border width and my border style. Normally we see this is like border one pixel solid red.

[00:04:47]
Here I've spelled it out in two separate declarations because that border color I've associated with those classes later on. So by default my finger will come with a border with a has a width and a style but it does not have a color and the color will be added on later.

[00:05:03]
Okay in between the figure and the caption, I think there's this tiny little space that shows up. We saw it in a previous example here, I've just used margin bottom of a negative four pixels to tighten that up. And I've set this up to have the object fit property and the object position property.

[00:05:24]
This has to do with how the images are displaying inside of the webpage here. When you set your max height on those pictures, they'll just take the top 400 pixels of the picture. Sometimes the interesting parts of the picture are down towards the bottom. So what this is doing is it's pushing up the visible portion of the picture so that we can see it a little bit better.

[00:05:48]
And we're cropping off parts that are less interesting by default. We also have styling here for our finger caption. I talked to you previously about relative and absolute positioning. And so we've done something very similar here with that, and we've set a background color with a bit of transparency to it.

[00:06:06]
Yes, we have a question.
>> Why do we need position relative here?
>> Why do we need position relative here. Here we have not used Flexbox to lay out the inside of this particular figure. We've just using absolute and relative positioning in this particular case, so that's why we need it here.

[00:06:22]
Then we have our figure caption a, we wanna have a big clickable area with display block, okay? Remember that by default your links are an inline type of configuration. They're only as wide as their content their lives, why does their text. And so, people can easily miss that clickable area, make it really big, set it to display block, give it a color.

[00:06:48]
And that will give us a great big huge target area very helpful on phones in particular, can't hurt on desktop. Okay, then I set up a whole bunch of these styles, which have a really Weird combination of both border color and text color. These are to set up the colors inside of our borders on the figure, as well as some of the colors inside of the text that inside of that document.

[00:07:14]
So that is what all of this is, and we're just calling on the colors as configured earlier in the document. So there's a whole bunch of those Then we get to our media queries. Here is the first place that we turn on our media query at 550 pixels.

[00:07:30]
And I've talked you through this several times display flex flex flows row wrap, justify content is space between so my favorite configuration right there. And then we'll set each Li to have a flex basis of 49.5%. I didn't make use of the gap property here. You absolutely could have used the gap property if you wanted, but by virtue of having two elements next to each other Just 49.5% add them together, you get like 99%.

[00:08:01]
So you'll get a 1% gap by default in between those two items. And then I turn off the object positioning once we get to the larger screens. Otherwise what you'll see is half of the image and half of it will be cut off you'll just have blank space.

[00:08:16]
So we have to turn that off here to pull everything down a little bit further. And then finally here, for my last media queries, I'm just turning on a little bit of an indent and setting up a 1/3 size for our flex basis property for that Li. So let's take a quick look at the web page and see how it looks.

[00:08:37]
So here's our web page. Hopefully yours looks pretty much like this. And we'll scrunch it down so you can see how it changes. One of the things you want to be mindful of when you're working with images like this Is how much of the image is showing and so that's where that object position property comes in.

[00:08:59]
These still look pretty good. Then we go to our tablet dimension So you can see here for example, this landscape image, it may be worthwhile to tweak that a little bit more maybe with a class. Because you know the interesting part is the is the mountains interacting with the moon here.

[00:09:17]
And that is not really coming across here at this particular dimension. So that might be something you wanted to develop a little bit further. And then we'll go to mobile. And you'll see here so that max width of 400 pixels, which obviously could be a smaller number. Now you see we get a sense of these pictures.

[00:09:36]
Now you see we get a sense of these pictures. So like this one here called vivid, you'd see a lot of sky without pushing the picture up a little bit further. Or you'd see just the neck of the guitar without seeing the main body of the guitar. So that's how that one's up turning out.

[00:09:58]

>> Jen, could you differentiate between the min width and max width in the case of media queries?
>> Yes, so when you are writing mobile first, what you want to do is use all min width media queries the whole way through. So you start with your declarations outside of the media queries, that's your mobile styles.

[00:10:18]
And then you're going to change whatever needs changing through the media queries and you use min width, because that pulls in the Styles outside the media query, holes those styles. They're still valid when you get into the next media query. And they are still valid all the way through the document until you reset a value somewhere along the way.

[00:10:40]
So that is min width. Max width are what you would use if you wanted to go desktop first. In other words, all the styles outside of it are desktop styles and then we're going to cut off whatever those styles are at various break points by using max width media queries.

[00:11:00]
Generally speaking, today, people write mobile first, for the most part, but sometimes, desktop first may make sense, you may be starting from. Maybe there's still a few websites around that are not responsive. And so you might be rewriting styles that already exist and you're tacking on the mobile part of it.

[00:11:17]
That would be a situation where you might go desktop first. Or maybe you just have a complicated desktop website and it made more sense to go that way. Maybe that's where most of your traffic is, it's on your desktop site, the mobile site is less important. And so it makes sense to use desktop first for that reason,

[00:11:38]

>> That was object position or object fit.
>> Object fit will determine how the image is going to display within the space like cover or contain or there's a scale down one. You can kind of play around with those properties to see their impact but the object position moves things actually up and down, and side to side and space.

[00:11:58]
Now you see we get a sense of these pictures.

