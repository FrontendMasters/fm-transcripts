WEBVTT

1
00:00:00.450 --> 00:00:05.056
We are going to use a website called
responsive breakpoints, that's going to

2
00:00:05.056 --> 00:00:09.194
help us make a whole bunch of images for
source, source set and sizes.

3
00:00:09.194 --> 00:00:11.770
And it'll write us some
code to go with that.

4
00:00:11.770 --> 00:00:16.092
And I want to demonstrate what I
mean by the browser's going to make

5
00:00:16.092 --> 00:00:18.390
the choice of the image.

6
00:00:18.390 --> 00:00:21.797
So inside of your chapter
six GitHub files,

7
00:00:21.797 --> 00:00:25.130
there is a folder called banner demo.

8
00:00:25.130 --> 00:00:28.329
And if you take a look inside of it,
you'll find banners.html.

9
00:00:28.329 --> 00:00:31.830
And you'll also see that I have
a folder here called banners.

10
00:00:31.830 --> 00:00:36.694
So inside of banners there are six
different versions of the same banner at

11
00:00:36.694 --> 00:00:39.140
different dimensions here.

12
00:00:39.140 --> 00:00:40.789
And then there's an HTML file.

13
00:00:40.789 --> 00:00:45.232
The HTML file is super simple and
there is no CSS at all.

14
00:00:45.232 --> 00:00:50.548
All the HTML does is it has
the single image element in it.

15
00:00:50.548 --> 00:00:54.304
And on the side of that you see
here we have sizes here on line 12.

16
00:00:55.420 --> 00:00:58.546
It says for a max-width of 1200 pixels,

17
00:00:58.546 --> 00:01:04.070
display at 100 viewport widths,
otherwise display it at 1200 pixels.

18
00:01:04.070 --> 00:01:06.119
In other words,
just display it full width all the time.

19
00:01:07.140 --> 00:01:11.368
And then source set here has
given you the conditions under

20
00:01:11.368 --> 00:01:15.620
which we have different images
that are available here.

21
00:01:15.620 --> 00:01:19.530
And then of course, we have
the default version of this banner.

22
00:01:19.530 --> 00:01:24.044
And so this this particular code came from
the responsive breakpoints website which

23
00:01:24.044 --> 00:01:27.410
I'm gonna go through with
you in just a moment.

24
00:01:27.410 --> 00:01:32.082
But then what I did was once I got my
banners back, I opened up an image editing

25
00:01:32.082 --> 00:01:36.827
program and I wrote the dimension of
the banner on each one of these images, so

26
00:01:36.827 --> 00:01:39.415
we could see how they change.

27
00:01:39.415 --> 00:01:44.446
So when I display this inside of Chrome.

28
00:01:44.446 --> 00:01:49.908
This is Chrome and as you see here,
I've got the browser window maximized and

29
00:01:49.908 --> 00:01:55.930
this is at 1200 is the banner exactly
probably as you would expect.

30
00:01:55.930 --> 00:01:58.565
And so,
as I start to make the screen smaller,

31
00:01:58.565 --> 00:02:03.366
you'd expect that somewhere along the way
here we're going to swap out the banner,

32
00:02:03.366 --> 00:02:06.370
right, at least once
if not more than that.

33
00:02:06.370 --> 00:02:09.930
But look at this,
it's just staying at 1200 the entire time.

34
00:02:11.310 --> 00:02:15.077
No matter how small we get down,
it's still trying to load 1200.

35
00:02:15.077 --> 00:02:18.220
And when I first saw this,
I thought, no, what did I do wrong?

36
00:02:18.220 --> 00:02:21.220
I broke my code and everything else.

37
00:02:21.220 --> 00:02:25.136
But then,
I took a look at this inside of Firefox,

38
00:02:25.136 --> 00:02:29.430
same exact webpage now just
displayed on Firefox, and

39
00:02:29.430 --> 00:02:34.655
you'll notice here that as I reduced
the size of this web browser,

40
00:02:34.655 --> 00:02:37.950
we do switch to a different size picture.

41
00:02:37.950 --> 00:02:43.711
So here, we're at 533 pixels wide,
we're switching to the 1084 image and

42
00:02:43.711 --> 00:02:47.762
then when I think about it,
that may actually make sense.

43
00:02:47.762 --> 00:02:53.350
I am working on a MacBook Pro
that has Retina on it.

44
00:02:53.350 --> 00:02:56.664
So it looks like,
just judging from the numbers here,

45
00:02:56.664 --> 00:03:01.120
it's choosing the images based the fact
that this is 2x pixel density.

46
00:03:01.120 --> 00:03:05.224
Something I didn't even account for inside
of my code, but remember the browser is

47
00:03:05.224 --> 00:03:08.988
making the choice here, and this is
one of the things it's thinking about.

48
00:03:08.988 --> 00:03:14.352
So then as I get smaller, then I go to
958 at about roughly half that value and

49
00:03:14.352 --> 00:03:19.251
I can't go any smaller here inside
of just looking at Firefox this way.

50
00:03:19.251 --> 00:03:23.346
If you put it in browser tools, you can
continue to make the window smaller and

51
00:03:23.346 --> 00:03:27.203
you can find it will continue to load
different versions of the picture.

52
00:03:27.203 --> 00:03:31.100
So this is the point I'm
trying to make to you.

53
00:03:31.100 --> 00:03:35.746
It depends, it really depends, you
write this code and you have no control

54
00:03:35.746 --> 00:03:40.760
over which image is going to get
displayed inside of your browser window.

55
00:03:40.760 --> 00:03:44.280
And you're going to trust the browser
to make the right choice.

56
00:03:44.280 --> 00:03:48.310
I even tried putting this stuff up online
thinking maybe if it was on a server,

57
00:03:48.310 --> 00:03:52.430
it would behave a little bit differently
like on a real actual server.

58
00:03:52.430 --> 00:03:58.130
And nothing, that did not change the
performance of either Firefox or Chrome.

59
00:03:59.130 --> 00:04:01.410
Feel free to test with Safari or Edge.

60
00:04:01.410 --> 00:04:03.689
My results with Safari
were the same as Chrome's,

61
00:04:03.689 --> 00:04:07.406
probably cuz they're both WebKit, but
maybe Edge would do something different.

62
00:04:07.406 --> 00:04:09.320
I just don't have Edge
here on my computer.

