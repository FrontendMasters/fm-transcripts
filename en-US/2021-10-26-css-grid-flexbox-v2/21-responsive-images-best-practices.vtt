WEBVTT

1
00:00:00.080 --> 00:00:04.994
So we had came up with a prime directive
I would say that only one image should

2
00:00:04.994 --> 00:00:07.187
load even if many are specified.

3
00:00:07.187 --> 00:00:11.741
So this is the big problem back in the
earlier days of responsive images where we

4
00:00:11.741 --> 00:00:16.365
used to line up a hole bunch of image tags
and we'd set some display properties.

5
00:00:16.365 --> 00:00:20.612
All of those images would typically
load and we display one of them so

6
00:00:20.612 --> 00:00:24.480
we actually made situations worse for
ourselves.

7
00:00:24.480 --> 00:00:29.286
So whatever solution you have,
however many images you may choose from to

8
00:00:29.286 --> 00:00:33.400
display on the webpage,
we only want one of them to load.

9
00:00:33.400 --> 00:00:35.980
So that is the thing to
always keep in mind.

10
00:00:35.980 --> 00:00:37.810
As you look at responsive
design solutions.

11
00:00:39.610 --> 00:00:44.371
So here's an example of the bad code that
I was talking about here just a moment

12
00:00:44.371 --> 00:00:48.638
ago we used to do this in Bootstrap
back in some of the early versions.

13
00:00:48.638 --> 00:00:53.109
We would have a div inside of it we'd have
two images we'd give them classes and

14
00:00:53.109 --> 00:00:56.523
then we'd use display none to turn on and
off those images.

15
00:00:56.523 --> 00:01:00.499
Even if they're set to display none
both of these images are going to

16
00:01:00.499 --> 00:01:04.300
load you've actually made your
web page load more slowly.

17
00:01:04.300 --> 00:01:09.149
Then you would have if you just stuck
with one image and just reframed it.

18
00:01:09.149 --> 00:01:14.456
So this don't do this bad code okay,
other code you can use cautiously so

19
00:01:14.456 --> 00:01:18.980
you have seen me use all the way
up to this point in the course and

20
00:01:18.980 --> 00:01:22.820
going forward you have seen me do this.

21
00:01:22.820 --> 00:01:27.007
We have an image on the page, we set
the width to 100% and you can throw a max

22
00:01:27.007 --> 00:01:31.710
width on top of that too if you don't want
it to get bigger than a certain point.

23
00:01:31.710 --> 00:01:33.066
That's optional but

24
00:01:33.066 --> 00:01:37.700
what this will do is give your
image flexibility within the space.

25
00:01:37.700 --> 00:01:42.321
Okay, the problem here is that you have
one image that loads regardless of what

26
00:01:42.321 --> 00:01:46.186
device you're using regardless
of the speed of the connection.

27
00:01:46.186 --> 00:01:50.566
And that is going to cause potentially
a very large image to download to

28
00:01:50.566 --> 00:01:52.807
a mobile phone device for example.

29
00:01:52.807 --> 00:01:58.056
And so this works if you're working with
small images that are already small and

30
00:01:58.056 --> 00:02:02.755
file size in other words you don't
have to use responsive image code for

31
00:02:02.755 --> 00:02:05.597
every image that ever was on your webpage.

32
00:02:05.597 --> 00:02:09.047
It takes a lot of time and
effort to put the stuff together.

33
00:02:09.047 --> 00:02:13.192
And quite frankly sometimes it's just
not needed if they're small images and

34
00:02:13.192 --> 00:02:14.959
they're reasonable file size.

35
00:02:14.959 --> 00:02:19.872
And you're getting good performance out
of your webpage don't take the time to do

36
00:02:19.872 --> 00:02:23.445
responsive image,
this may be the right solution for you.

37
00:02:23.445 --> 00:02:27.969
So let's talk about those two different
possible approaches that you have

38
00:02:27.969 --> 00:02:29.988
the first one is the picture tag.

39
00:02:29.988 --> 00:02:33.889
And so this one lets you the webpage
author decide which image

40
00:02:33.889 --> 00:02:36.262
displays under which conditions and

41
00:02:36.262 --> 00:02:41.680
this is the one that I talked about on
the previous version of this course.

42
00:02:41.680 --> 00:02:46.280
So let's say that you have this lovely
picture of the hot air balloons again.

43
00:02:46.280 --> 00:02:51.055
So what you might do is art direction
you have various pieces of this that

44
00:02:51.055 --> 00:02:54.727
you might wanna display
under different conditions.

45
00:02:54.727 --> 00:03:00.524
Just taking this giant image and scaling
down to something small for a small device

46
00:03:00.524 --> 00:03:06.470
results in this as you see here, and you
lose a lot of detail out of that image.

47
00:03:06.470 --> 00:03:10.734
So a better approach is to do the art
direction which means let's crop it and

48
00:03:10.734 --> 00:03:13.320
pick out the important
parts of the picture.

49
00:03:13.320 --> 00:03:16.220
Maybe it's this these two
balloons that are here together.

50
00:03:16.220 --> 00:03:19.510
Or maybe you actually want to put the
focus somewhere else about the flattened

51
00:03:19.510 --> 00:03:21.140
balloon that's there on the ground.

52
00:03:21.140 --> 00:03:23.660
You might not have even
noticed that was there.

53
00:03:23.660 --> 00:03:28.186
So using this technique of art direction,
you're going to go to photoshop or

54
00:03:28.186 --> 00:03:31.193
whatever tool you're using for
cropping images.

55
00:03:31.193 --> 00:03:35.511
And you'll create those alternative
versions of the imager self outside of

56
00:03:35.511 --> 00:03:36.192
your code.

57
00:03:36.192 --> 00:03:40.706
Then you're going to drop that into
your HTML and it's going to look

58
00:03:40.706 --> 00:03:45.228
like this you have a picture element
that goes all the way around it.

59
00:03:45.228 --> 00:03:48.580
And then you're going to make
use of the source element.

60
00:03:48.580 --> 00:03:51.567
If you're familiar with the audio and
video elements,

61
00:03:51.567 --> 00:03:54.040
the source element is familiar to you.

62
00:03:54.040 --> 00:03:57.050
You can have as many of these
source elements as you want.

63
00:03:57.050 --> 00:04:01.290
They stack one on top of the other,
and they contain a source for

64
00:04:01.290 --> 00:04:06.630
the image, and they contain a media
query and the media query says.

65
00:04:06.630 --> 00:04:11.654
Under whatever conditions you want that
you'd like this particular image to load,

66
00:04:11.654 --> 00:04:14.030
the media query is optional.

67
00:04:14.030 --> 00:04:16.060
You could use this in other ways.

68
00:04:16.060 --> 00:04:17.250
I'll show you in just a moment.

69
00:04:18.400 --> 00:04:21.160
But that is the typical way that
the picture element is used.

70
00:04:22.180 --> 00:04:24.940
And then you can provide
an alternative image.

71
00:04:24.940 --> 00:04:28.140
In this case,
this is the smaller version of the image.

72
00:04:28.140 --> 00:04:33.380
That will load, either when
the picture element is not supported.

73
00:04:33.380 --> 00:04:36.922
So you're on an old version of MIE or,

74
00:04:36.922 --> 00:04:41.520
when you have this,
this is the default image.

75
00:04:41.520 --> 00:04:45.172
So none of the media
queries are satisfied.

76
00:04:45.172 --> 00:04:49.992
So this other image loads and this
particular code if your screen was less

77
00:04:49.992 --> 00:04:53.479
than 850 pixels,
you'd get the smaller image.

78
00:04:53.479 --> 00:04:57.990
You can also do this with
different kinds of media query.

79
00:04:57.990 --> 00:05:02.840
So here I've said, load this first
one if the orientation is landscape.

80
00:05:02.840 --> 00:05:07.058
So let me say a little bit about media
query with an orientation of landscape.

81
00:05:07.058 --> 00:05:10.920
Landscape and portrait just like
you've used in print for years.

82
00:05:10.920 --> 00:05:16.900
Landscape is wider then tall, portraits
the other way around taller than wide.

83
00:05:18.400 --> 00:05:23.800
When you are talking about this,
you are not talking about your phone,

84
00:05:23.800 --> 00:05:29.100
in portrait or landscape that
is not what we are referring to.

85
00:05:29.100 --> 00:05:32.204
We are actually referring
to dimensions here so

86
00:05:32.204 --> 00:05:37.171
if the window of the browser window the
window of the device is wider than it is

87
00:05:37.171 --> 00:05:39.430
tall it is considered landscape.

88
00:05:39.430 --> 00:05:43.290
If it is taller than wide then
that's considered portrait so

89
00:05:43.290 --> 00:05:47.839
it's doesn't have anything to do
with the orientation of the device.

90
00:05:47.839 --> 00:05:52.653
So, in this case if it is wider than
it is tall we're gonna get the larger

91
00:05:52.653 --> 00:05:57.150
version of the picture or
maybe we'll get the skinnier version art

92
00:05:57.150 --> 00:06:02.311
direction picture here that shows a very
different kind of view of this image

93
00:06:04.653 --> 00:06:10.556
You can also use this type of element if
you want to make use of web P images for

94
00:06:10.556 --> 00:06:16.220
example those are supposed to be
very good for images optimization.

95
00:06:16.220 --> 00:06:18.460
They're brand new format that
are coming out from Google.

96
00:06:18.460 --> 00:06:21.050
They're supposed to be really good for
compression and

97
00:06:21.050 --> 00:06:23.910
communicating more information and
less disk size.

98
00:06:23.910 --> 00:06:27.837
So you really want to make use of your
web P images for performance reasons.

99
00:06:27.837 --> 00:06:33.189
But you want to provide a PNG in case
the browser doesn't support Web PNG,

100
00:06:33.189 --> 00:06:34.407
Web P excuse me.

101
00:06:34.407 --> 00:06:39.304
So here we've got two versions we've
got the the web P version we have

102
00:06:39.304 --> 00:06:44.285
a different version that's a PNG and
then we have a fallback that might

103
00:06:44.285 --> 00:06:47.928
be something smaller it's
just a regular old jpg.

104
00:06:50.521 --> 00:06:54.131
But there's a lot of things that
pictures forget about responsive

105
00:06:54.131 --> 00:06:55.980
elements along the way.

106
00:06:55.980 --> 00:07:00.275
So it forgets to tell the browser things
like how big is the image location that

107
00:07:00.275 --> 00:07:01.675
hole in the page layout.

108
00:07:01.675 --> 00:07:06.451
Remember that the browser is going to load
from the top of the page going on down,

109
00:07:06.451 --> 00:07:07.962
when it hits that image.

110
00:07:07.962 --> 00:07:12.585
If it doesn't know how big of a space to
leave for it, it's going to wait until it

111
00:07:12.585 --> 00:07:17.070
downloads the picture before it starts
downloading the rest of the webpage.

112
00:07:17.070 --> 00:07:20.576
So if we tell it how big that
hole should be, then the browser

113
00:07:20.576 --> 00:07:25.150
knows to save that much space and it will
continue to download it feel faster.

114
00:07:26.630 --> 00:07:30.144
How big are the images or
the peg that fits into that hole?

115
00:07:30.144 --> 00:07:34.233
How big are those images
that might be displayed?

116
00:07:34.233 --> 00:07:38.959
So we have the size the image the size of
the hole and what is the pixel density of

117
00:07:38.959 --> 00:07:43.763
the screen these are things that the
browser doesn't know as it's waiting for

118
00:07:43.763 --> 00:07:45.604
these pictures to download.

119
00:07:45.604 --> 00:07:50.452
So you could compensate for that you could
write this piece of code with all of

120
00:07:50.452 --> 00:07:54.699
these different media queries
with min-width and max-width and

121
00:07:54.699 --> 00:07:58.280
device-pixel-ratios and
all the rest of it.

122
00:07:58.280 --> 00:07:59.390
I don't have time for this.

123
00:07:59.390 --> 00:08:00.576
I don't know about you, but

124
00:08:00.576 --> 00:08:03.790
I have better things to do than
to write this kind of HTML.

125
00:08:03.790 --> 00:08:05.870
So that is a possibility.

126
00:08:05.870 --> 00:08:07.400
[LAUGH] you could do this.

127
00:08:07.400 --> 00:08:08.700
I think you'd be a little bit crazy.

128
00:08:10.210 --> 00:08:13.580
So this is where source set and
sizes come in.

129
00:08:13.580 --> 00:08:18.245
But potentially the downside to this
is that the browser is going to decide

130
00:08:18.245 --> 00:08:21.030
which image is going to display.

131
00:08:21.030 --> 00:08:25.802
So with picture you have total control but
then you might wind up writing some crazy

132
00:08:25.802 --> 00:08:30.140
HTML in order to get the right image
displaying at the right place.

133
00:08:30.140 --> 00:08:33.576
Here you're gonna write much less HTML but
you leave it to the browser to decide.

134
00:08:35.454 --> 00:08:40.502
So as Eric Portis describes in his
article here I've cited it here.

135
00:08:40.502 --> 00:08:45.520
I encourage you to go and read this he
does a great job explaining this stuff.

136
00:08:45.520 --> 00:08:48.668
He says, what the author knows those
as they write the web page and

137
00:08:48.668 --> 00:08:51.302
what the browser knows as
it's loading the web page and

138
00:08:51.302 --> 00:08:54.580
if you notice they are sort of
staggered in terms of their yes and no.

139
00:08:54.580 --> 00:08:56.987
In terms of viewpoint dimensions and
screen density,

140
00:08:56.987 --> 00:08:58.870
it's source files and so forth.

141
00:08:58.870 --> 00:09:00.742
They stagger on down here.

142
00:09:00.742 --> 00:09:06.516
So what source set and sizes do they work
together to tell the browser everything

143
00:09:06.516 --> 00:09:12.218
it needs to know to make its best decision
as to which image it should load okay.

144
00:09:12.218 --> 00:09:16.356
So it's gonna tell all of that but
remember, once again,

145
00:09:16.356 --> 00:09:21.508
I'm going to say this like 1000 times,
the browser gets to decide,

146
00:09:21.508 --> 00:09:24.900
and it may not decide
what you think is best.

147
00:09:24.900 --> 00:09:28.590
So if you're a control freak,
the picture element is totally for you.

148
00:09:28.590 --> 00:09:33.248
But if you're willing to give it up to
write less code, then source set and

149
00:09:33.248 --> 00:09:35.215
sizes may be a better way to go.

150
00:09:35.215 --> 00:09:38.220
All right, so as I said, one more time.

151
00:09:38.220 --> 00:09:40.904
The browser decides which
image is going to load and

152
00:09:40.904 --> 00:09:43.880
it may not load the image that you expect.

153
00:09:43.880 --> 00:09:47.660
Also different browsers may
make different choices.

154
00:09:47.660 --> 00:09:48.980
That's the crazy part.

155
00:09:48.980 --> 00:09:52.700
So what Firefox decides to do may be
different than what Chrome decides to do.

156
00:09:53.860 --> 00:09:58.716
&gt;&gt; Can I somehow foot picture when
the same image is used in like a variable

157
00:09:58.716 --> 00:10:03.890
instead of repeating the entire
path over and over and over again.

158
00:10:03.890 --> 00:10:08.770
&gt;&gt; Well, this is HTML, not CSS,
so I don't think you can do.

159
00:10:08.770 --> 00:10:11.957
I mean, maybe you could do something with
JavaScript, but not in straight HTML.

160
00:10:15.348 --> 00:10:18.079
In fact, for that matter where's
the stuff gonna come from,

161
00:10:18.079 --> 00:10:21.442
most likely you're not gonna write it
in straight HTML, it's going to come

162
00:10:21.442 --> 00:10:24.980
off the server or you're probably gonna
do something with JavaScript anyway.

163
00:10:26.340 --> 00:10:28.874
But I'm talking straight HTML here today.

164
00:10:30.923 --> 00:10:34.380
All right, so this was what the source
set and sizes code winds up looking like.

165
00:10:34.380 --> 00:10:39.090
It's like this, so let's walk through
what this code is line by line.

166
00:10:39.090 --> 00:10:40.650
So first of all the image tag and

167
00:10:40.650 --> 00:10:44.084
love so you have your image source and
you have your alt text always.

168
00:10:44.084 --> 00:10:52.010
So that's going to be the same
regardless of what image loads.

169
00:10:52.010 --> 00:10:55.720
So this is why you're going
to use the same image and

170
00:10:55.720 --> 00:11:00.340
let the browser choose so
there's no art direction here.

171
00:11:00.340 --> 00:11:03.606
There's no different images that
might require different alt texts all

172
00:11:03.606 --> 00:11:05.210
the same alt text.

173
00:11:05.210 --> 00:11:10.851
Okay, this part in the middle or the
filenames and the next to it is something

174
00:11:10.851 --> 00:11:15.977
like 1024w that is the width in
pixels of that particular image.

175
00:11:15.977 --> 00:11:21.658
So here we've got three possible
options small JPEG is the default

176
00:11:21.658 --> 00:11:27.447
with the source set we have a 1024 and
640 and 320 pixels.

177
00:11:27.447 --> 00:11:31.625
So it's kind of like in the old days
when you used to put in the width and

178
00:11:31.625 --> 00:11:35.750
your image tag you said width
of 1024 that was 1024 pixels.

179
00:11:35.750 --> 00:11:39.550
And then sizes is the hole in the webpage.

180
00:11:39.550 --> 00:11:45.403
So what this bit of code here says is
if the minimum width is at least 36ems,

181
00:11:45.403 --> 00:11:50.432
then display the image at 33.3vw
otherwise display the image

182
00:11:50.432 --> 00:11:54.838
at 100vw that's what that
line of code means, okay.

183
00:11:58.262 --> 00:12:00.220
So that's the way you would set up
a code for source set and sizes.

184
00:12:02.360 --> 00:12:03.078
And you use them together.

185
00:12:05.846 --> 00:12:10.616
You might think, this is a great way
to deal with retina images as well or

186
00:12:10.616 --> 00:12:15.387
other pixel-dense images as Eric Portis
points out in his article here

187
00:12:15.387 --> 00:12:17.311
this one's at a list apart.

188
00:12:17.311 --> 00:12:22.051
It's a nice compact way
to supply hi-DPI imagery.

189
00:12:22.051 --> 00:12:23.850
But, it only works for
fixed width images so

190
00:12:23.850 --> 00:12:25.709
if your image is going
to change dimensions.

191
00:12:25.709 --> 00:12:30.389
Or if it's going to flex
using that width of 100% or

192
00:12:30.389 --> 00:12:35.291
something this type of code is
not going to work for that.

193
00:12:35.291 --> 00:12:37.733
But it is another possible syntax and

194
00:12:37.733 --> 00:12:42.555
you can combine these which is probably
the next question somebody had.

195
00:12:42.555 --> 00:12:46.373
So you have the picture tag
inside of it you can have your

196
00:12:46.373 --> 00:12:49.029
individual state source elements and

197
00:12:49.029 --> 00:12:54.022
then each of those can have source
sets and sizes associated with them.

198
00:12:54.022 --> 00:12:58.991
So this is an example of how that code
might look if you wanted to combine

199
00:12:58.991 --> 00:13:00.469
these things.

200
00:13:00.469 --> 00:13:05.397
All right, notice here that in
the source media, this particular

201
00:13:05.397 --> 00:13:10.990
example that I got was from of using
the aspect ratio in the media query.

202
00:13:10.990 --> 00:13:13.848
So in other words,
if it's a 16 by 9 screen,

203
00:13:13.848 --> 00:13:17.420
we're going to load one set of images but
if it's a 1 by 1 or

204
00:13:17.420 --> 00:13:21.501
square type of screen we're gonna
load different types of images.

205
00:13:23.584 --> 00:13:24.084
Okay?

206
00:13:26.861 --> 00:13:27.633
So what should you use?

207
00:13:30.154 --> 00:13:32.230
Here's the big summary.

208
00:13:32.230 --> 00:13:35.765
So if you're on a picture tag,
the image is optimized for

209
00:13:35.765 --> 00:13:38.871
content reasons rather
than technical reasons.

210
00:13:38.871 --> 00:13:41.408
So the content of that image is far more

211
00:13:41.408 --> 00:13:46.020
important than the technical
considerations of speed of download.

212
00:13:47.450 --> 00:13:49.671
And then of course for
source and source set,

213
00:13:49.671 --> 00:13:53.529
it's the other way around there we're
going to have the technical reasons for

214
00:13:53.529 --> 00:13:56.706
downloading a particular image
Trump whatever is in the image.

215
00:13:56.706 --> 00:14:00.440
For the picture, the author is
going to choose the best image.

216
00:14:00.440 --> 00:14:03.350
The browser is going to choose
it under source and source set.

217
00:14:03.350 --> 00:14:06.445
And the images may be varied
in different composition and

218
00:14:06.445 --> 00:14:08.530
dimension on the picture tag.

219
00:14:08.530 --> 00:14:14.075
But they should probably all be
the same on source and source set.

220
00:14:14.075 --> 00:14:16.258
That's the wrong source set and sizes.

221
00:14:16.258 --> 00:14:21.227
And because that's because the browser is
going to choose which image is going to

222
00:14:21.227 --> 00:14:25.318
be used on the page, you probably
don't want to have a variation of

223
00:14:25.318 --> 00:14:27.380
the composition of the picture.

224
00:14:29.212 --> 00:14:33.460
So finally, let me also just mention
here real quick as we go forward.

225
00:14:33.460 --> 00:14:37.979
Background images can also be responsive
what you wanna do in order to make your

226
00:14:37.979 --> 00:14:42.704
background images be sure that only one of
them loads is that you wanna contain your

227
00:14:42.704 --> 00:14:44.847
background images in a media query.

228
00:14:44.847 --> 00:14:50.122
In other words you're never gonna have as
we have done many times now to this point.

229
00:14:50.122 --> 00:14:54.315
We have some styles that are outside of
the media query that tend to be mobile in

230
00:14:54.315 --> 00:14:55.000
nature.

231
00:14:55.000 --> 00:14:59.697
You're never ever gonna put background
images out in that particular part of

232
00:14:59.697 --> 00:15:01.270
your stylesheet.

233
00:15:01.270 --> 00:15:06.279
The background images are always gonna
be inside of some kind of media query,

234
00:15:06.279 --> 00:15:10.220
so that only one image will
load under those conditions.

235
00:15:10.220 --> 00:15:14.390
Remember, we're the only crazy people that
do this stuff with our browser windows.

236
00:15:14.390 --> 00:15:16.840
And cause lots of images to download.

237
00:15:16.840 --> 00:15:20.010
Most people just open their
browser window and read web pages.

238
00:15:20.010 --> 00:15:25.058
And so only one background image should
download under those conditions.

239
00:15:25.058 --> 00:15:29.284
Okay, that's all those points.

240
00:15:29.284 --> 00:15:33.370
On, so here's an example of that we have
a media query with a max width of 700,

241
00:15:33.370 --> 00:15:34.944
it's going to download this.

242
00:15:34.944 --> 00:15:38.136
But if it has a minimum width of 701
will download a different image that's

243
00:15:38.136 --> 00:15:39.914
what that code would wind up looking like.

