WEBVTT

1
00:00:00.140 --> 00:00:02.918
All right.
So what we have now then is the shape that

2
00:00:02.918 --> 00:00:04.950
we're looking for.

3
00:00:04.950 --> 00:00:09.769
Now we can start to think about exactly
how wide do we want these columns,

4
00:00:09.769 --> 00:00:12.060
and how tall do we want these rows.

5
00:00:13.480 --> 00:00:18.177
And the best way to go about doing this
is to go get in there with some kind of

6
00:00:18.177 --> 00:00:19.890
pixel based ruler.

7
00:00:19.890 --> 00:00:22.780
And go measure the dimensions
of all of these squares.

8
00:00:22.780 --> 00:00:25.332
It is really tedious and
I'm very happy to tell you,

9
00:00:25.332 --> 00:00:28.490
you do not have to do that I
have done that work for you.

10
00:00:28.490 --> 00:00:34.117
So, now we'll go back and add that
information that's going to describe

11
00:00:34.117 --> 00:00:40.130
exactly how big our and wide our
columns are, and how tall our rows are.

12
00:00:40.130 --> 00:00:42.304
And then the syntax
that we use to do that,

13
00:00:42.304 --> 00:00:44.430
it's going to go up here on our wrapper.

14
00:00:44.430 --> 00:00:47.244
So on the grid container on the parent,

15
00:00:47.244 --> 00:00:52.670
it's gonna go right after we have
our display grid, we have our gap.

16
00:00:52.670 --> 00:00:58.130
And we can now add to this,
how many columns are we gonna have?

17
00:00:58.130 --> 00:01:00.440
This is grid hyphen template.

18
00:01:00.440 --> 00:01:02.110
Hyphen columns.

19
00:01:02.110 --> 00:01:06.340
So, we're telling grid exactly how many
columns, that we're going to have here.

20
00:01:06.340 --> 00:01:10.200
Usually when people write this type
of code, they specify this first.

21
00:01:10.200 --> 00:01:12.760
I wanted to put the emphasis
on the numbers first.

22
00:01:12.760 --> 00:01:19.009
So, we did that, now we're coming back and
entering how many columns we have here.

23
00:01:19.009 --> 00:01:22.380
So as my measurements have deduced.

24
00:01:22.380 --> 00:01:25.639
And I've done this in pixels because
we want these to match up as closely as

25
00:01:25.639 --> 00:01:27.180
possible to the painting.

26
00:01:27.180 --> 00:01:32.390
These numbers are 124 pixels,
376 pixels, and 42 pixels.

27
00:01:32.390 --> 00:01:38.580
Two pixels.

28
00:01:38.580 --> 00:01:41.940
So you can just using this
grid template columns syntax,

29
00:01:41.940 --> 00:01:45.170
you can line up however many
dimensions that you want.

30
00:01:46.170 --> 00:01:48.385
For however many columns that you want and

31
00:01:48.385 --> 00:01:51.500
grid will do this
particular type of layout.

32
00:01:51.500 --> 00:01:53.846
So you can have different widths for
those columns,

33
00:01:53.846 --> 00:01:57.900
you can have different units of measure
for these columns if you wanted.

34
00:01:57.900 --> 00:02:01.270
Here I've used all pixels,
but I could have mixed it up,

35
00:02:01.270 --> 00:02:05.062
I could have done some rems,
I could have done some percent's,

36
00:02:05.062 --> 00:02:09.934
I could have done ems and there's a couple
of other units we'll talk about later.

37
00:02:09.934 --> 00:02:14.101
So that gets us a little bit closer
in terms of our rows in such or

38
00:02:14.101 --> 00:02:19.148
in terms of our columns and such, so
now we can do the same thing with our rows

39
00:02:19.148 --> 00:02:24.465
grid hyphen template hyphen rows and
the numbers here would be 170 pixels.

40
00:02:26.581 --> 00:02:32.780
210 pixels, 61 pixels, and 61 pixels.

41
00:02:34.890 --> 00:02:38.180
The line up here isn't exactly perfect.

42
00:02:38.180 --> 00:02:42.820
Remember that this started as a painting
done by a human, not by a robot.

43
00:02:42.820 --> 00:02:46.510
And so
Mondrian has things just slightly off.

44
00:02:46.510 --> 00:02:50.500
But we get pretty close to
the painting layout here.

45
00:02:50.500 --> 00:02:56.290
So, as you see now we have all of our
cells more or less on top of each other.

46
00:02:56.290 --> 00:03:01.199
You'll do notice that we have a bit of
a gap over here to the side of literacy,

47
00:03:01.199 --> 00:03:04.690
and that is because that
is the way gaps work.

48
00:03:04.690 --> 00:03:08.660
So, we've got gaps all
around just like that.

49
00:03:08.660 --> 00:03:14.870
And now we can start to fill in these
cells with the appropriate colors.

50
00:03:14.870 --> 00:03:20.133
So the easiest way to do this,
is the following here right again

51
00:03:20.133 --> 00:03:25.299
on the wrapper I'm gonna set
a background color of black which

52
00:03:25.299 --> 00:03:30.263
will make it very hard to see
what we're doing exactly, but

53
00:03:30.263 --> 00:03:36.948
that will wind up filling in the grid gap
area, with the black lines in between.

54
00:03:36.948 --> 00:03:44.700
And then Now what we need
to do is the following.

55
00:03:46.490 --> 00:03:49.670
Here on our div, we can get rid
of this opacity part of this.

56
00:03:51.750 --> 00:03:55.510
So that makes things pop
out quite a bit more.

57
00:03:55.510 --> 00:03:58.720
And then all we need to do is
assign our various colors.

58
00:03:58.720 --> 00:04:05.100
So here and letter C which is the big
red box, our background color.

59
00:04:06.800 --> 00:04:10.520
Using an eyedropper tool,
I determine the exact state of red.

60
00:04:10.520 --> 00:04:17.500
This is de 271d, so
that'll give us a big red box, yes.

61
00:04:17.500 --> 00:04:21.179
&gt;&gt; The gap automatically adds to
all sides or all after the first,

62
00:04:21.179 --> 00:04:23.130
I don't see a gap on the far left.

63
00:04:23.130 --> 00:04:24.606
&gt;&gt; Yes.
All after the first,

64
00:04:24.606 --> 00:04:26.520
exactly as you see here.

65
00:04:26.520 --> 00:04:27.020
Yep.

66
00:04:29.290 --> 00:04:34.580
And then here for letter d,
we have a background color

67
00:04:39.300 --> 00:04:43.280
Of 015 CA zero.

68
00:04:43.280 --> 00:04:46.470
If you want of course you can
just use the red blue and yellow.

69
00:04:46.470 --> 00:04:47.390
That's okay too.

70
00:04:49.040 --> 00:04:56.776
And then down here in letter g
we have a background color of e,

71
00:04:56.776 --> 00:05:02.730
c d, b, 6b, that is the shade of yellow.

72
00:05:02.730 --> 00:05:05.767
And then the last little bit of
weirdness that you see here is from our

73
00:05:05.767 --> 00:05:06.680
background image.

74
00:05:06.680 --> 00:05:07.840
We can get rid of that.

75
00:05:08.940 --> 00:05:11.982
So that's up here on our wrapper
around line number five,

76
00:05:11.982 --> 00:05:14.080
get rid of that background.

77
00:05:14.080 --> 00:05:18.110
And we have something approximating
the painting here by Mondrian.

78
00:05:19.910 --> 00:05:24.760
All right, that is something you would
not be able to do with flexbox, for sure.

79
00:05:26.370 --> 00:05:30.349
Any questions on this
basic basics of grid, and

80
00:05:30.349 --> 00:05:33.937
how this starts to work
in terms of layout.

81
00:05:33.937 --> 00:05:34.613
Any questions?

82
00:05:34.613 --> 00:05:40.074
&gt;&gt; Can that last gap be reset,
like with margin and last child.

83
00:05:40.074 --> 00:05:45.341
I don't think you can use last
child specifically with the gap but

84
00:05:45.341 --> 00:05:49.264
you could try,
the gap gets set on the parent, so

85
00:05:49.264 --> 00:05:53.223
it's on the wrapper not
on the individual cell.

86
00:05:53.223 --> 00:05:59.632
So, I'm not sure that is necessarily
going to work, good idea though.

