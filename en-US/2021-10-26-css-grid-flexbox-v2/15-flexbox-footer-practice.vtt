WEBVTT

1
00:00:00.210 --> 00:00:04.608
For your final challenge I'd like you to
lay out the footer of this web page so

2
00:00:04.608 --> 00:00:07.013
we have the mission and the collection and

3
00:00:07.013 --> 00:00:10.674
then the footer is going to go
down here at the very very bottom.

4
00:00:10.674 --> 00:00:14.161
And the footer is going to
include Several elements here

5
00:00:14.161 --> 00:00:18.922
we have some social media icons and
we have an address that's here in place.

6
00:00:18.922 --> 00:00:23.182
And so this is the way it should look at
the very bottom of the webpage stretch

7
00:00:23.182 --> 00:00:27.050
that yellow all the way across
the full width of the browser window.

8
00:00:27.050 --> 00:00:28.667
But line up the text and so

9
00:00:28.667 --> 00:00:32.680
forth in line with everything
else that's there on the page.

10
00:00:35.010 --> 00:00:37.310
Then when we go to a tablet,
this is the way it's going to look.

11
00:00:37.310 --> 00:00:40.160
We only have two columns
to work with here.

12
00:00:40.160 --> 00:00:43.888
So the stay connected will stay under
the first column, the wall of wonder,

13
00:00:43.888 --> 00:00:46.170
that address will go
under the second column.

14
00:00:46.170 --> 00:00:49.448
And then finally, when we get
to a mobile version of the site,

15
00:00:49.448 --> 00:00:51.790
just stack everything
on top of each other.

16
00:00:58.620 --> 00:01:00.980
So how'd you deal with
the footer challenge?

17
00:01:00.980 --> 00:01:02.788
Hopefully you did all right,

18
00:01:02.788 --> 00:01:06.340
let's go through the answers
that I came up with for this.

19
00:01:06.340 --> 00:01:09.270
So we'll start here on line 63.

20
00:01:09.270 --> 00:01:13.523
And you'll notice that I have sort of
an odd looking setup I have a div with

21
00:01:13.523 --> 00:01:14.655
a class of footer.

22
00:01:14.655 --> 00:01:18.575
And then I have a footer element
by itself, why did I do this?

23
00:01:18.575 --> 00:01:22.587
Well eventually that div with a class
of footer is the element that will

24
00:01:22.587 --> 00:01:26.735
stretch all the way across the webpage
giving me yellow from one corner of

25
00:01:26.735 --> 00:01:28.640
the browser window to the other.

26
00:01:28.640 --> 00:01:32.280
And then the footer part of it is
going to contain my content and

27
00:01:32.280 --> 00:01:35.480
will have a max width
of 1200 pixels on it.

28
00:01:35.480 --> 00:01:36.586
You'll see that in just a moment.

29
00:01:36.586 --> 00:01:37.249
And so that'll keep everything
in line with what came before.

30
00:01:37.249 --> 00:01:44.930
So I've given us a div
with a class of social.

31
00:01:44.930 --> 00:01:48.804
And the reason for that,
why why is this div here?

32
00:01:48.804 --> 00:01:50.394
Well we have a div and

33
00:01:50.394 --> 00:01:56.301
we have an address remember we have to
manage our parents and our children.

34
00:01:56.301 --> 00:02:00.976
And so if we set our footer element
to have our Flexbox declaration

35
00:02:00.976 --> 00:02:05.226
on it any children after that
We'll be part of that layout so

36
00:02:05.226 --> 00:02:08.119
what I really wanted to have happen was.

37
00:02:08.119 --> 00:02:12.615
I wanted to have the social
there on the left hand side and

38
00:02:12.615 --> 00:02:17.024
the address over on the right so
that is the reason why.

39
00:02:17.024 --> 00:02:21.919
I needed the div to wrap
around the social information

40
00:02:21.919 --> 00:02:26.175
to make it one unit For
positioning purposes.

41
00:02:26.175 --> 00:02:26.840
So, inside of that this is an h4.

42
00:02:26.840 --> 00:02:33.410
This is very far down on the webpage.

43
00:02:33.410 --> 00:02:37.124
We have an unordered list once
again because this is a list of

44
00:02:37.124 --> 00:02:40.110
social media icons and
it's marked up as such.

45
00:02:40.110 --> 00:02:41.260
There they are.

46
00:02:42.450 --> 00:02:46.523
And then we make use of the address
element down here at the bottom,

47
00:02:46.523 --> 00:02:48.717
this is of course a postal address.

48
00:02:48.717 --> 00:02:53.540
And the address element is a wonderful
thing to be associated with address

49
00:02:53.540 --> 00:02:58.154
can also be used for a lot other things,
any method of communication.

50
00:02:58.154 --> 00:03:01.238
Whether that happens to be phone numbers,
emails,

51
00:03:01.238 --> 00:03:05.301
social media it could be potentially
used with the social media and so

52
00:03:05.301 --> 00:03:09.663
forth geographic coordinates are one
of the things that address can use.

53
00:03:09.663 --> 00:03:14.274
The other thing that's really
interesting about address is where you

54
00:03:14.274 --> 00:03:18.803
place it on the page Is an indication
of whether this is the address for

55
00:03:18.803 --> 00:03:22.415
the website or an address for
the author of an article.

56
00:03:22.415 --> 00:03:27.359
So if the address is located towards
the bottom of the webpage usually as part

57
00:03:27.359 --> 00:03:30.990
of a footer that is an indicator
that it's an address for

58
00:03:30.990 --> 00:03:33.640
the organization or for the website..

59
00:03:33.640 --> 00:03:37.277
If you use the address element
in an article, for example,

60
00:03:37.277 --> 00:03:41.950
then that address is generally associated
with the author of that article.

61
00:03:41.950 --> 00:03:46.850
All right, so then for
our styling portion of this.

62
00:03:46.850 --> 00:03:51.950
Here we are around one
159 In that ending CSS.

63
00:03:51.950 --> 00:03:53.280
We have our class of footer.

64
00:03:53.280 --> 00:03:57.599
It has a background color of yellow,
it stretches all the way across the page

65
00:03:57.599 --> 00:04:01.170
because we're not putting
any constraints on it.

66
00:04:01.170 --> 00:04:06.050
And then inside of that, we have
the footer element itself self with a max

67
00:04:06.050 --> 00:04:11.090
width of 1200 pixels, we've also
declared this as a display of flex.

68
00:04:11.090 --> 00:04:15.751
And then we add to this,
some additional styling notice

69
00:04:15.751 --> 00:04:20.709
that to get those two social
media icons next to each other,

70
00:04:20.709 --> 00:04:25.240
we needed yet
another round of Flexbox declaration.

71
00:04:25.240 --> 00:04:30.727
So here on the footer, UL I've displayed
flex again, in a flex flow of row wrap.

72
00:04:30.727 --> 00:04:36.000
That's to put the two social
media icons next to each other.

73
00:04:37.800 --> 00:04:41.375
And then down here,
here's the little bit of styling here for

74
00:04:41.375 --> 00:04:42.759
the rest of the footer.

75
00:04:42.759 --> 00:04:46.040
That basic stuff we have
our footer address.

76
00:04:46.040 --> 00:04:50.711
By default, the address displays metallic
so we needed to turn that off that style

77
00:04:50.711 --> 00:04:54.517
of normal with a margin top and
then I threw on a font weight of bold.

78
00:04:54.517 --> 00:04:55.299
Okay.

79
00:04:55.299 --> 00:04:59.208
As we get into the media queries I don't
think a whole lot changes in here.

80
00:04:59.208 --> 00:05:04.034
It's pretty straightforward with
the address I did turn off a little bit

81
00:05:04.034 --> 00:05:07.527
of margin that was on the Up
on the top of the address.

82
00:05:07.527 --> 00:05:11.487
We needed that on mobile when they
were stacked on top of each other,

83
00:05:11.487 --> 00:05:13.575
we needed that little bit of space.

84
00:05:13.575 --> 00:05:15.068
But when we go to the tablet,

85
00:05:15.068 --> 00:05:18.530
that little bit of space makes
these things look crooked.

86
00:05:18.530 --> 00:05:21.987
So we need to get rid of that
to bring them back together and

87
00:05:21.987 --> 00:05:23.725
make them on the same level.

88
00:05:23.725 --> 00:05:28.355
We've also changed some flexspaces
values over here as part

89
00:05:28.355 --> 00:05:31.450
of the final desktop based media query.

