[00:00:02]
>> So while we're here let's go ahead and write the picture tag up here at the top. So where it says hero image goes here around line 28 in your HTML. Let's put in our picture element. So here I am making the choice as to which picture will display at which point in time.

[00:00:20]
So here we're gonna say section Id=hero. And then inside of this we'll say picture. And inside of that then we can put all the good stuff. So we start with source set, source source set, Image/hero-1200.png And then media equals quote, parentheses, min-width of 839 pixels. How did I come up with all this?

[00:01:14]
Mostly I wrote this webpage and I played around and decided what looked good, where and so forth. So there's no magic bullet as to how this stuff is gonna go. We just kinda have to play around and make some decisions. Here's another one source set. This one is gonna be 838.

[00:01:40]
.png and this will have a minimum width of 301 pixels. And then we'll have our default image down here at the bottom c = image/hero.300 will be our default image and then alt will be Rainbow hero image banner. Probably come up with a better description for that. Okay, and if we save that, To refresh our page, there's the hero image up there at the top of the page for the wall of wonder.

[00:02:22]
And we can squash that down, and you actually will see it jump there. So see how I'm squashing it and then I when I get to my breakpoint wherever it was, there it is. Now it just loaded in another image. That's the smaller version of the image, okay?

[00:02:40]
We have other things going on or navigation is changing and all the rest of it. But one of the things you'll notice is I make that window smaller there with that picture element. Notice that the image itself, like all the other images on the page have that width of 100% set so that it scales down without those big jumps.

[00:02:59]
And this picture element does not have that because it has different codes associated with it, then does the image tag which is used for displaying everything else. So we can make some more modifications to this in RCSS to get rid of those big jumps along the way. So if we do that, we'll jump into our CSS.

[00:03:23]
Just gonna go into the finished style sheet here. And I will show you Here we go, some of the hero styles. So let's put this in after the navigation, just to sort of keep our CSS in the order of the things that appear on the page, so I'm around line 124 in my CSS, and I'm going to add two additional styles here.

[00:03:58]
So to the hero section itself, I'll set a background color with color seven, which I think is a gold color. Text align center max width of 100%. Turn off the padding and the margin. And then for the hero image, see how I'm handling this one? So I have a max width of 100% and I have a max height of 454 pixels.

[00:04:23]
How did I come up with that? Well, when we get to the 1200 pixel wide picture, that's 1200 pixels wide and it's 454 pixels tall. So I've taken that tallest dimension and set that as my max height, we don't really want it to get bigger than that. And then just set the max width accordingly to 100% so that can scale.

[00:04:52]
So when I save this and I drop it into a web page and refresh, there's my background color. And now when I scratch the screen down here. See how much nicer and smoother that is. So much better, okay? So the key takeaway here is, yes, we're using the responsive images, absolutely, which are loading in at different points in time so that we can get smaller file sizes at the appropriate points and potentially with art direction, not in this specific example.

[00:05:23]
But it could happen. And we're combining it with sort of that little hacky thing that I told you about to make that transition very, very smooth. Just in case somebody winds up close to the edge or maybe they resize the browser. It won't be a jarring experience as they're looking at that particular hero image.

