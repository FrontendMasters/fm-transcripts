WEBVTT

1
00:00:00.000 --> 00:00:02.290
So the next thing I wanna
talk about are these,

2
00:00:02.290 --> 00:00:04.763
I think Next.js has an unofficial name for
them.

3
00:00:04.763 --> 00:00:08.906
They either call them like
special pages or something.

4
00:00:08.906 --> 00:00:10.518
I don't think that's like their coin term.

5
00:00:10.518 --> 00:00:13.624
I've seen it in their documentation,
referred to it as special pages here and

6
00:00:13.624 --> 00:00:16.178
there, but I don't think that's
what they're calling them.

7
00:00:16.178 --> 00:00:18.248
They're just trying to figure out like,
how do we refer to these?

8
00:00:18.248 --> 00:00:22.232
These are basically what
I call auxiliary pages.

9
00:00:22.232 --> 00:00:26.809
They're not pages that where you can mount
to a route, but they work with the pages.

10
00:00:26.809 --> 00:00:29.252
So the first one is the head component.

11
00:00:29.252 --> 00:00:31.859
Head component is pretty much
exactly what it sounds like.

12
00:00:31.859 --> 00:00:35.763
In fact, if you use create next app,
they already generated one for us.

13
00:00:35.763 --> 00:00:39.460
It's exactly where all the stuff that you
would normally put in the head tag goes.

14
00:00:39.460 --> 00:00:41.300
And then it's gonna be
used on every single page.

15
00:00:41.300 --> 00:00:45.942
That way you don't have to do it twice or
three times, or how many pages you have.

16
00:00:45.942 --> 00:00:50.512
If you have used Version 12 before,
or if you're going to use Version 12,

17
00:00:50.512 --> 00:00:53.507
you would probably put this
in your document page.

18
00:00:53.507 --> 00:00:56.942
Your underscore document
inside of the pages directory.

19
00:00:56.942 --> 00:00:57.991
You'll put it here.

20
00:00:57.991 --> 00:00:59.043
It's the same thing.

21
00:00:59.043 --> 00:01:00.212
It's the equivalent.

22
00:01:00.212 --> 00:01:03.800
It's just what people call a partial.

23
00:01:03.800 --> 00:01:07.083
If you've ever done traditional
server side rendering,

24
00:01:07.083 --> 00:01:09.100
that's where the term comes from.

25
00:01:09.100 --> 00:01:13.011
These are partial templates that
kind of get merged together.

26
00:01:13.011 --> 00:01:16.511
So this is like a partial, and
it's just for the head tag.

27
00:01:16.511 --> 00:01:18.294
That way you don't have to
rewrite it a thousand times.

28
00:01:18.294 --> 00:01:21.401
So you notice we have it here.

29
00:01:21.401 --> 00:01:25.141
And then if we wanna use it,
we'll talk about layouts in a minute.

30
00:01:25.141 --> 00:01:27.420
But you can see the layout has had here.

31
00:01:27.420 --> 00:01:34.471
And it's just referring to the ones
returned from the nearest head.tsx file.

32
00:01:34.471 --> 00:01:38.153
Which basically means in any folder we
can have multiple head.tsx files, and

33
00:01:38.153 --> 00:01:40.061
that's because sometimes it changes.

34
00:01:40.061 --> 00:01:45.029
Like for instance, in this block slug,
for this one, its head tag is definitely

35
00:01:45.029 --> 00:01:49.142
gonna be way different than what
the head tag would be on the route.

36
00:01:49.142 --> 00:01:54.279
Because we need to include things for
the blog posts, social, OG, graph links,

37
00:01:54.279 --> 00:01:59.052
Twitter, Facebook, the images,
the title or the blog post, the author.

38
00:01:59.052 --> 00:02:01.350
That all is gonna be very dynamic,
so that they generate that.

39
00:02:01.350 --> 00:02:05.207
So a layout is gonna look for
the nearest parent head tag.

40
00:02:05.207 --> 00:02:06.747
So here's an example of it.

41
00:02:06.747 --> 00:02:10.636
But basically everywhere you would put
things in your head, you would put here.

42
00:02:10.636 --> 00:02:13.862
So metadata, things like that.

43
00:02:13.862 --> 00:02:17.492
So that's one of the special ones,
yeah, if you need to do that,

44
00:02:17.492 --> 00:02:19.610
mostly with SEO and things like that.

45
00:02:19.610 --> 00:02:23.682
The other one that's way more interesting
to talk about, a way more powerful, and

46
00:02:23.682 --> 00:02:26.548
we'll actually do some stuff,
is this one, the layout?

47
00:02:26.548 --> 00:02:29.785
Now, this is a heavily
requested feature from Next.js.

48
00:02:29.785 --> 00:02:33.827
I know I've been dying to get something
like this since I've been using Next.js,

49
00:02:33.827 --> 00:02:35.746
and it's exactly what it sounds like.

50
00:02:35.746 --> 00:02:37.452
It's a layout, right?

51
00:02:37.452 --> 00:02:42.613
A layout is basically,
take some common UI that

52
00:02:42.613 --> 00:02:47.268
you want a bunch of pages to have and
share.

53
00:02:47.268 --> 00:02:50.635
And you can create a component
that abstracts that UI out, and

54
00:02:50.635 --> 00:02:53.825
then you can embed the pages into it,
so it kinda wraps it.

55
00:02:53.825 --> 00:02:57.490
So you could think of this as like
a nav bar, a sidebar, and a footer.

56
00:02:57.490 --> 00:02:58.668
That's going on all my pages.

57
00:02:58.668 --> 00:03:00.299
So I'm gonna put that in a layout.

58
00:03:00.299 --> 00:03:03.137
And then it's gonna wrap everything else.

59
00:03:03.137 --> 00:03:05.125
So they all have those elements around it.

60
00:03:05.125 --> 00:03:09.241
And V 12 of Next.js, there's no
framework specific way to do this.

61
00:03:09.241 --> 00:03:12.754
If you go look at the documentation of V
12, they have three different ways they

62
00:03:12.754 --> 00:03:15.711
recommend that you do it, but
it's still on you to figure that out.

63
00:03:15.711 --> 00:03:19.788
And there's still like, the biggest
caveat with all those approaches,

64
00:03:19.788 --> 00:03:23.417
is that you can't get data in the layout,
which is just it hurts.

65
00:03:23.417 --> 00:03:26.385
Because a lot of like,
think of a layout where, I don't know,

66
00:03:26.385 --> 00:03:30.141
you have a sidebar and it's got like
the user's picture and their name, okay?

67
00:03:30.141 --> 00:03:34.909
You got to get that from somewhere, but
the layout can't get data at server

68
00:03:34.909 --> 00:03:38.692
time on Next 12, so
you have to either get it client side,

69
00:03:38.692 --> 00:03:42.042
which introduces more issues and
things like that.

70
00:03:42.042 --> 00:03:47.238
Well, I'm glad to say that layouts are now
fully supported first party with Next.js.

71
00:03:47.238 --> 00:03:49.987
All you have to do is
just make a layout file.

72
00:03:49.987 --> 00:03:55.409
Layout.tsx is the name of the file that
you have to make on any given level,

73
00:03:55.409 --> 00:03:57.991
and all the pages on that level, and

74
00:03:57.991 --> 00:04:01.538
underneath it we'll have that layout,
right?

75
00:04:01.538 --> 00:04:02.946
So let's give it a shot.

76
00:04:02.946 --> 00:04:06.839
So in this layout,
I'm going to, I don't know,

77
00:04:06.839 --> 00:04:10.941
put something here that says,
layout, all right?

78
00:04:10.941 --> 00:04:12.874
And then I'm gonna render
the children here.

79
00:04:12.874 --> 00:04:18.686
Let's put that in a div, like that, okay?

80
00:04:18.686 --> 00:04:23.190
So now every page that I go to,
because this layout here is on the route,

81
00:04:23.190 --> 00:04:25.155
we should see layout, right?

82
00:04:25.155 --> 00:04:27.443
So, let's see.

83
00:04:27.443 --> 00:04:27.961
There it is.

84
00:04:27.961 --> 00:04:28.955
There's layout.

85
00:04:28.955 --> 00:04:30.638
It's right there.

86
00:04:30.638 --> 00:04:34.304
If I go to slash,
contacts, there's layout.

87
00:04:34.304 --> 00:04:38.714
It's still there, blog.

88
00:04:38.714 --> 00:04:41.774
I've never made a page for blogs,
that's never gonna show up.

89
00:04:41.774 --> 00:04:43.728
But for slug, there it is.

90
00:04:43.728 --> 00:04:45.508
It's still there.

91
00:04:45.508 --> 00:04:47.442
That's the layout.

92
00:04:47.442 --> 00:04:51.666
It's going to be a layout for all the
pages and all the children underneath it.

93
00:04:51.666 --> 00:04:56.124
Which if you've thought about a little
more, you could do nested layout,

94
00:04:56.124 --> 00:04:57.976
which is really cool, right?

95
00:04:57.976 --> 00:04:59.726
So what does that look like?

96
00:04:59.726 --> 00:05:05.711
Well, if I go into my
contact here in this folder,

97
00:05:05.711 --> 00:05:10.271
and I make a layout.tsx, right, and

98
00:05:10.271 --> 00:05:15.401
then I can do something
like export default

99
00:05:15.401 --> 00:05:20.696
function ContactLayout(), like this.

100
00:05:20.696 --> 00:05:24.638
And then I can say, return this div,
I need to grab the children.

101
00:05:24.638 --> 00:05:28.549
Because it's a layout, you have to
always remember to embed the children.

102
00:05:28.549 --> 00:05:31.096
Because the children are the things
that's being stuck into.

103
00:05:31.096 --> 00:05:34.164
These are the pages or the layouts,
cuz it could be a page or

104
00:05:34.164 --> 00:05:37.184
a layout going into another
layout cuz they're nested.

105
00:05:37.184 --> 00:05:39.799
If you don't have that,
it'll just be the layout itself and

106
00:05:39.799 --> 00:05:41.247
you'll never see your content.

107
00:05:41.247 --> 00:05:42.607
So be sure to have that.

108
00:05:42.607 --> 00:05:47.239
And then you can just say like,
contact layout.

109
00:05:47.239 --> 00:05:54.202
All right, and then you can say something
like that, children, like that.

110
00:05:54.202 --> 00:05:58.512
So now if you do that, we got a contact.

111
00:05:58.512 --> 00:06:03.645
You can see here's the outer layout,
here's the contact layout,

112
00:06:03.645 --> 00:06:06.897
and then here's the actual contact page.

113
00:06:10.041 --> 00:06:12.079
All right, so it can nest forever.

114
00:06:12.079 --> 00:06:14.029
So it's actually quite powerful.

115
00:06:14.029 --> 00:06:19.603
&gt;&gt; So would it be possible to have
a sub-layout override like a parent or

116
00:06:19.603 --> 00:06:22.014
layout that exists above it?

117
00:06:22.014 --> 00:06:25.177
&gt;&gt; Yes, there is a way to do that.

118
00:06:25.177 --> 00:06:29.135
So one of the cool features of
route grouping, I think that's,

119
00:06:29.135 --> 00:06:33.678
I'm gonna keep saying that,
I'm pretty sure that's what they call it,

120
00:06:33.678 --> 00:06:36.052
is that it allows you to opt into that.

121
00:06:36.052 --> 00:06:39.826
So first I need to explain
the difference between a root layout and

122
00:06:39.826 --> 00:06:40.931
a regular layout.

123
00:06:40.931 --> 00:06:42.969
So let me talk about that and
then I'll get back to that.

124
00:06:42.969 --> 00:06:49.479
So right now we have two layouts,
this first one is called the route layout.

125
00:06:49.479 --> 00:06:54.335
Every app in Next,js has to
have at least one root layout.

126
00:06:54.335 --> 00:06:55.900
Otherwise it won't work.

127
00:06:55.900 --> 00:07:01.202
A root layout is literally the master
layout, you have to have at least one.

128
00:07:01.202 --> 00:07:05.607
And there are scenarios where you can have
more than one if you have route grouping.

129
00:07:05.607 --> 00:07:09.368
So if you have route grouping
on the root of your app folder,

130
00:07:09.368 --> 00:07:13.508
those two different groups might
not have the same route layout,

131
00:07:13.508 --> 00:07:16.455
they have their own
individual route layout.

132
00:07:16.455 --> 00:07:18.929
So there's an example where you might
have more than one route layout.

133
00:07:18.929 --> 00:07:22.519
But for most cases if you're not doing
route grouping like I'm not right here,

134
00:07:22.519 --> 00:07:25.586
I would only have a layout on the route,
and this is the root layout.

135
00:07:25.586 --> 00:07:29.286
And this will be a layout for
every single thing on the page,

136
00:07:29.286 --> 00:07:31.806
there's really kinda no way around it.

137
00:07:31.806 --> 00:07:34.592
But again,
if we start doing route grouping,

138
00:07:34.592 --> 00:07:38.881
if these have parentheses around them and
they have their own layouts,

139
00:07:38.881 --> 00:07:43.740
I can opt out of this layout right here by
exporting a variable inside of the actual

140
00:07:43.740 --> 00:07:48.053
layout to say, I don't wanna use this
anymore, and I can opt out of it.

141
00:07:48.053 --> 00:07:50.468
There's also another one called template.

142
00:07:50.468 --> 00:07:52.973
I'm only gonna talk about itbecause
it's worth talking about.

143
00:07:52.973 --> 00:07:57.771
It's the same thing as layout,
except for one caveat, is that,

144
00:07:57.771 --> 00:08:03.979
a layout doesn't get refreshed when the
the route segment changes intentionally.

145
00:08:03.979 --> 00:08:06.210
Its UI elements stay there.

146
00:08:06.210 --> 00:08:08.620
A template changes every time
a route template changes.

147
00:08:08.620 --> 00:08:10.328
So that's the only difference.

148
00:08:10.328 --> 00:08:14.888
So if you make a template.tsx or
jsx or whatever, instead of a layout,

149
00:08:14.888 --> 00:08:16.792
you'll get the same effect.

150
00:08:16.792 --> 00:08:20.904
It's just that that template will actually
re-render every time the segment changes.

151
00:08:20.904 --> 00:08:23.762
And so you might ask, so
why would I ever want that?

152
00:08:23.762 --> 00:08:25.934
Probably mostly for like animations.

153
00:08:25.934 --> 00:08:29.907
If you need to have like an enter or
exit animation on those layout elements,

154
00:08:29.907 --> 00:08:33.698
if they never re-render you're never
gonna trigger those entrance and

155
00:08:33.698 --> 00:08:34.707
exit animations.

156
00:08:34.707 --> 00:08:36.456
So use a template instead.

157
00:08:36.456 --> 00:08:39.568
Or if there was some part of
that layout where you want

158
00:08:39.568 --> 00:08:43.966
it to refresh all the time or get
constant data, you can use the template.

159
00:08:43.966 --> 00:08:46.681
So whenever the route changes,
it's always up to date.

160
00:08:46.681 --> 00:08:50.138
But for the most part, just always
use a layout until you're like,

161
00:08:50.138 --> 00:08:53.158
we actually need this specific use case,
then use a template.

162
00:08:53.158 --> 00:08:57.161
But yeah, they have that, but
I almost don't recommend using it.

163
00:08:57.161 --> 00:08:59.906
Just use layout, yes.

164
00:08:59.906 --> 00:09:00.728
&gt;&gt; One more question.

165
00:09:00.728 --> 00:09:05.688
So would it be possible to say like
the layout needs context information?

166
00:09:05.688 --> 00:09:09.513
Would there be a way to wrap a context
provider around the layout component,

167
00:09:09.513 --> 00:09:11.741
or is that not something that's possible?

168
00:09:11.741 --> 00:09:16.653
&gt;&gt; So we'll get to context cuz, [LAUGH] it
doesn't work the same anymore with React

169
00:09:16.653 --> 00:09:20.631
18, and the two different types
of components that you make.

170
00:09:20.631 --> 00:09:25.254
But for the most part, if you opt into
using your components the way you normally

171
00:09:25.254 --> 00:09:28.845
use them, which are client component,
you can do a context.

172
00:09:28.845 --> 00:09:32.163
But if you're not using client components,
you cannot do that.

173
00:09:32.163 --> 00:09:33.469
They don't work.

174
00:09:36.216 --> 00:09:40.844
There's not gonna be a lot of context
stuff in React I see in the future.

175
00:09:40.844 --> 00:09:46.654
I think a lot of that's gonna not happen
in my opinion, and you'll see why.

