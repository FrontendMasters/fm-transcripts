WEBVTT

1
00:00:00.240 --> 00:00:02.620
So now, more on the data fetching.

2
00:00:02.620 --> 00:00:06.287
So, I said, I think there was a question
earlier if we were gonna get to

3
00:00:06.287 --> 00:00:08.415
handling errors, or things like that.

4
00:00:08.415 --> 00:00:11.123
Well, yes, so
we got some more special pages.

5
00:00:11.123 --> 00:00:15.541
I know we talked about the head component,
we talked about layouts,

6
00:00:15.541 --> 00:00:18.525
I mentioned templates, there's a few more.

7
00:00:18.525 --> 00:00:19.590
I think there's like three or four more.

8
00:00:19.590 --> 00:00:22.440
There's really only two
I wanna talk about, and

9
00:00:22.440 --> 00:00:26.765
one of them is gonna be the loading page,
which I think is super powerful.

10
00:00:26.765 --> 00:00:30.803
So, the loading page is
exactly what it sounds like,

11
00:00:30.803 --> 00:00:36.100
it's a page that will basically show
some type of loading indicator,

12
00:00:36.100 --> 00:00:40.174
while a server component is
trying to fetch its data.

13
00:00:40.174 --> 00:00:44.108
And if you think about the nested nature
of how we can do server components,

14
00:00:44.108 --> 00:00:47.981
I don't know, you might have something
on a page that's got tile zone and

15
00:00:47.981 --> 00:00:50.439
each one of those tiles
is a server component.

16
00:00:50.439 --> 00:00:54.048
And if they're loading individually,
you can show a different loading UI for

17
00:00:54.048 --> 00:00:57.274
each one of those things individually,
just by making another page,

18
00:00:57.274 --> 00:00:58.810
which is pretty helpful.

19
00:00:58.810 --> 00:01:01.384
And we get this for free just by
tapping into some of the syntax.

20
00:01:01.384 --> 00:01:05.853
So, let's give it a shot, so let me
over exaggerate, loading right quick.

21
00:01:05.853 --> 00:01:09.405
So, this is what I'll do.

22
00:01:09.405 --> 00:01:10.960
I'll actually make this
function right here.

23
00:01:10.960 --> 00:01:14.306
Well actually what I'll do,
I'll just go up here, and

24
00:01:14.306 --> 00:01:17.523
I'll make something called wait,
or call it delay.

25
00:01:17.523 --> 00:01:20.750
Something like that, and
then delay returns a new promise.

26
00:01:23.463 --> 00:01:25.663
That takes a callback, takes a resolve.

27
00:01:27.157 --> 00:01:28.696
And it takes a setTimeout.

28
00:01:34.800 --> 00:01:37.708
It's gonna pass something there,
and then it'll take a time.

29
00:01:41.181 --> 00:01:45.222
Cool, so now we can wait, and
then I'll just say delay.

30
00:01:45.222 --> 00:01:49.113
We'll just delay you for, let's just
over exaggerate this, five seconds.

31
00:01:49.113 --> 00:01:53.130
And delay for five seconds, and
then we'll just return some object here,

32
00:01:53.130 --> 00:01:54.160
doesn't matter.

33
00:01:55.789 --> 00:01:58.220
Something like that, okay?

34
00:01:58.220 --> 00:02:00.019
So we're gonna delay this five seconds.

35
00:02:00.019 --> 00:02:04.022
While this is waiting,
let's see what happens,

36
00:02:04.022 --> 00:02:07.832
we'll just do this,
we'll say post slug, and

37
00:02:07.832 --> 00:02:13.666
we'll just see how long it takes to
get back, right, so let's go here.

38
00:02:19.897 --> 00:02:24.383
You see it's still spinning,
it's still spinning, still spinning.

39
00:02:24.383 --> 00:02:27.872
And boom, there it went, right,
it took five seconds for

40
00:02:27.872 --> 00:02:30.950
that to come back because
we delayed it for a while.

41
00:02:30.950 --> 00:02:35.377
You can see, right, I just reloaded it,
sort of seeing there it is, and

42
00:02:35.377 --> 00:02:36.840
then it came back.

43
00:02:36.840 --> 00:02:40.440
It's just the same data, so
that's why it's showing that.

44
00:02:41.610 --> 00:02:47.066
So what we wanna do, instead of having
nothing to show while it's loading,

45
00:02:47.066 --> 00:02:52.200
it's cached now because I'm local,
we can do a loading page instead.

46
00:02:52.200 --> 00:02:55.678
So I can come here, and
I can say loading.tsx.

47
00:02:55.678 --> 00:03:02.088
And I can put whatever I want here,
so I can say exports default,

48
00:03:02.088 --> 00:03:08.042
function, blog, or post loading,
something like that.

49
00:03:08.042 --> 00:03:10.930
And I could return whatever I want.

50
00:03:10.930 --> 00:03:13.817
This is where you would
show like a skeleton, or

51
00:03:13.817 --> 00:03:17.020
not a Halloween skeleton, but a-
&gt;&gt; [LAUGH]

52
00:03:17.020 --> 00:03:18.093
&gt;&gt; You guys know what I'm talking about,

53
00:03:18.093 --> 00:03:18.911
like the loading skeletons?

54
00:03:18.911 --> 00:03:20.270
&gt;&gt; Yeah, a shimmer.

55
00:03:20.270 --> 00:03:22.620
&gt;&gt; Shimmer,
that's another word for it, yeah.

56
00:03:22.620 --> 00:03:25.394
Yeah, I should probably start calling it
shimmer, because when I say skeleton,

57
00:03:25.394 --> 00:03:26.971
people are like,
what are you talking about?

58
00:03:26.971 --> 00:03:31.421
I'm talking about, yeah, let me just
see if I can find a good example of it,

59
00:03:31.421 --> 00:03:35.315
like that thing, and
it kind of does this thing, yeah, shimmer,

60
00:03:35.315 --> 00:03:37.450
shimmer is a better word.

61
00:03:37.450 --> 00:03:40.250
So, yeah,
this is where he would show that, right,

62
00:03:40.250 --> 00:03:42.754
so I'm just gonna say loading though,
right?

63
00:03:42.754 --> 00:03:47.262
So we'll just do loading like that, and
let's see if it works here, there we go.

64
00:03:47.262 --> 00:03:50.747
So it's loading, it's loading, and
then boom it came back, right?

65
00:03:50.747 --> 00:03:55.598
So this is a great place but notice,
this didn't move this UI bit, all right?

66
00:03:55.598 --> 00:03:58.674
So, it's independent, and
we have many of these on the page,

67
00:03:58.674 --> 00:04:01.578
all loading individually,
doing whatever they want, and

68
00:04:01.578 --> 00:04:03.860
everything else is still
there just waiting.

69
00:04:03.860 --> 00:04:07.968
So you don't have to wait for your whole
app to load up, I never wanna go to an app

70
00:04:07.968 --> 00:04:11.520
and see the whole screen just be
a loading thing in the middle again,

71
00:04:11.520 --> 00:04:14.110
there's no reason to do that anymore.

72
00:04:14.110 --> 00:04:15.860
In fact,
you didn't have to do that before,

73
00:04:15.860 --> 00:04:17.210
it was just a lot of work to set up.

74
00:04:17.210 --> 00:04:21.032
It was just like, you gotta move
this API call to this thing and

75
00:04:21.032 --> 00:04:23.780
it was just a lot of work,
people didn't do it.

76
00:04:23.780 --> 00:04:25.946
It wasn't that it wasn't possible,

77
00:04:25.946 --> 00:04:29.737
it was just that most of the time we
fetch our data at the page level,

78
00:04:29.737 --> 00:04:34.019
the container level, the controller level,
and never on the leaf level.

79
00:04:34.019 --> 00:04:36.023
But now we are fetching on a leaf level,
and

80
00:04:36.023 --> 00:04:38.700
they're completely
independent of themselves.

81
00:04:38.700 --> 00:04:41.932
You can almost think of it as like
the movement of like, all right,

82
00:04:41.932 --> 00:04:44.260
we're gonna put everything
in one component.

83
00:04:44.260 --> 00:04:48.007
But then we were like, no,
let's make smaller UI components, and

84
00:04:48.007 --> 00:04:49.970
have scoped CSS.

85
00:04:49.970 --> 00:04:51.142
And we're gonna have our tests and

86
00:04:51.142 --> 00:04:52.770
everything over here just for
this component.

87
00:04:52.770 --> 00:04:56.070
Now we're saying, now we're gonna put the
data fetching in that component as well.

88
00:04:56.070 --> 00:04:57.896
So everything goes in that component, and

89
00:04:57.896 --> 00:05:01.510
you can think of a component as its
own little isolated app almost.

90
00:05:01.510 --> 00:05:03.330
So that's kind of where we are with that.

91
00:05:03.330 --> 00:05:06.060
So, that's the loading one,
it's pretty cool.

92
00:05:07.180 --> 00:05:14.117
Really what all this is doing,
is using something called suspense, right?

93
00:05:14.117 --> 00:05:18.902
If you never heard of suspense in React,
it basically is like,

94
00:05:18.902 --> 00:05:23.436
it's a way that you can stream
a component to the front end.

95
00:05:23.436 --> 00:05:27.559
And while it's streaming,
or while it's loading,

96
00:05:27.559 --> 00:05:32.521
you can show a loading fallback
until it's ready, basically.

97
00:05:32.521 --> 00:05:36.599
It's like the cool if you did a set state,
or sorry,

98
00:05:36.599 --> 00:05:40.421
like a use state hook,
that says it's loading.

99
00:05:40.421 --> 00:05:42.717
And then,
soon as you fire off the event you say,

100
00:05:42.717 --> 00:05:45.584
is loading true, that re renders and
shows a loading thing.

101
00:05:45.584 --> 00:05:48.042
And then when it comes back you say,
is loading false?

102
00:05:48.042 --> 00:05:51.250
And then it shows the data that came back,
it's the equivalent of doing all of that.

103
00:05:52.250 --> 00:05:56.650
Just creating a wall file,
for free, right?

104
00:05:56.650 --> 00:05:57.860
So, that's how that works.

105
00:05:57.860 --> 00:06:02.049
So other examples if you wanted to bring
in a server component to another server

106
00:06:02.049 --> 00:06:06.440
component, but you want it to wait on it,
and you want it to load instead, right?

107
00:06:06.440 --> 00:06:10.894
So for instance, if I made a server
component over here, I know I have one,

108
00:06:10.894 --> 00:06:12.340
yeah, header link.

109
00:06:12.340 --> 00:06:16.367
So if I had header link, actually I'll
just make all these server components,

110
00:06:16.367 --> 00:06:18.280
it's so much easier.

111
00:06:18.280 --> 00:06:21.619
So, and then, inside of page,

112
00:06:21.619 --> 00:06:26.443
if header was going to
take a long time to show,

113
00:06:26.443 --> 00:06:30.400
I could put a suspense around this.

114
00:06:30.400 --> 00:06:34.730
So, it's not a blank until it shows up,
right?

115
00:06:34.730 --> 00:06:37.562
So for instance, I can go to header.

116
00:06:37.562 --> 00:06:41.737
I can say, let me get that,
where's that thing at?

117
00:06:44.308 --> 00:06:46.800
This thing, come here, get over here.

118
00:06:46.800 --> 00:06:51.690
I'm gonna just move this up,
I'm going to make a new folder here.

119
00:06:51.690 --> 00:06:53.821
You can make whatever folders
you want on the root by the way.

120
00:06:53.821 --> 00:06:58.215
I always like to make one called lib or
something like that for

121
00:06:58.215 --> 00:07:00.986
all my non component library things.

122
00:07:00.986 --> 00:07:02.062
Now let's call this delay.

123
00:07:04.794 --> 00:07:06.171
Put that in there and export it.

124
00:07:11.485 --> 00:07:16.670
Okay, cool, so we got that, and then
what I can do, is I can go into header,

125
00:07:16.670 --> 00:07:21.964
and I can say, I don't know, let's just
be weird here, and just say await.

126
00:07:26.238 --> 00:07:33.644
Wait delay for
another five seconds like that.

127
00:07:33.644 --> 00:07:37.670
And then inside of the page
in which I am using this,

128
00:07:37.670 --> 00:07:42.164
which I believe is the index page,
you can see right now,

129
00:07:42.164 --> 00:07:45.650
don't worry about this type script error.

130
00:07:45.650 --> 00:07:46.784
This is a known error,

131
00:07:46.784 --> 00:07:50.796
there's a specific comment you can put
in here to tell typescript, chill out.

132
00:07:50.796 --> 00:07:53.211
I know it returns a promise, I get it.

133
00:07:53.211 --> 00:07:57.770
But, yeah, in the meantime,
we can do what's called a suspense.

134
00:07:57.770 --> 00:08:01.796
So I'm gonna say suspense like this,
like that, and

135
00:08:01.796 --> 00:08:07.437
then you can say fall back, and you can
put some loading component in here.

136
00:08:07.437 --> 00:08:13.766
So, Don't have one,
I guess I could just make one right quick.

137
00:08:13.766 --> 00:08:14.925
Or I'll just take this one.

138
00:08:16.539 --> 00:08:17.077
Loading.

139
00:08:23.353 --> 00:08:26.450
Let's put this one in here, export that.

140
00:08:26.450 --> 00:08:33.689
Loader, go back into the page, and
I can say this is going to be loader.

141
00:08:35.524 --> 00:08:40.067
Right, so, and you can make the loader
a client component, actually,

142
00:08:40.067 --> 00:08:41.567
which is totally fine.

143
00:08:41.567 --> 00:08:44.424
I think maybe it even needs to, let's see.

144
00:08:44.424 --> 00:08:46.350
We're gonna find out,
I think it needs to be one.

145
00:08:46.350 --> 00:08:51.179
So we'll do that, and I'll just go to
home, and you can see it's loading,

146
00:08:51.179 --> 00:08:55.103
showing the loader for the header,
and then when it's done,

147
00:08:55.103 --> 00:08:57.160
the header comes back, right?

148
00:08:57.160 --> 00:09:01.078
And I did that manually using
the suspense right here,

149
00:09:01.078 --> 00:09:06.410
which is exactly what the layout
file does for you automatically.

150
00:09:06.410 --> 00:09:10.928
And that only works for pages in
the pages directory, but in this case,

151
00:09:10.928 --> 00:09:15.766
I had a component that was not in the
pages directory that I imported myself.

152
00:09:15.766 --> 00:09:21.093
So I had to manually use suspense
to set up a loading state for it,

153
00:09:21.093 --> 00:09:27.133
but you get it for free, if you use
the loading page in the app directory.

154
00:09:27.133 --> 00:09:29.947
I set page directory earlier,
I meant app directory, sorry,

155
00:09:29.947 --> 00:09:32.189
I'm still getting used
to saying app directory.

156
00:09:35.610 --> 00:09:38.567
Cool, any questions on this?

157
00:09:38.567 --> 00:09:43.047
No, if you've never seen suspense before,
this is what it looks like.

158
00:09:43.047 --> 00:09:45.684
It's not as scary as it sounds, I mean,
it's actually really quite cool,

159
00:09:45.684 --> 00:09:46.686
you should go read about it.

160
00:09:46.686 --> 00:09:52.726
But, yeah, that's all it's doing is just
show this thing until this thing is ready,

161
00:09:52.726 --> 00:09:56.055
cuz it's an async loading component,
right?

162
00:09:56.055 --> 00:10:00.655
Before server component and stuff,
suspense was mainly used for

163
00:10:00.655 --> 00:10:03.755
dynamically imported component, right?

164
00:10:03.755 --> 00:10:07.701
Using dynamic imports for
route code splitting, route splitting,

165
00:10:07.701 --> 00:10:10.820
stuff like that, and
you would suspense that.

166
00:10:10.820 --> 00:10:13.510
But now we're doing it for
data fetching purposes on the server.

167
00:10:13.510 --> 00:10:17.568
So, same result, well,
different result ultimately but

168
00:10:17.568 --> 00:10:22.613
still using suspense to solve a common
problem of something not here yet.

169
00:10:22.613 --> 00:10:24.370
And showing a loader until it gets here.

170
00:10:27.343 --> 00:10:28.320
Cool, yeah.

171
00:10:28.320 --> 00:10:31.740
&gt;&gt; So the naming convention
is such that everything is,

172
00:10:31.740 --> 00:10:36.476
all the files are lower case,
except for the component files?

173
00:10:36.476 --> 00:10:40.636
&gt;&gt; That's just my convention,
yeah, I'm kind of weird.

174
00:10:40.636 --> 00:10:43.536
I guess I was using React back in the day
where we used capital letters for

175
00:10:43.536 --> 00:10:45.033
our components, but I don't know,

176
00:10:45.033 --> 00:10:47.958
I feel like a lot of folks these days
just use lowercase for everything.

177
00:10:47.958 --> 00:10:49.379
And maybe I should switch to that,

178
00:10:49.379 --> 00:10:52.326
because you actually have to keep
them lowercase in the app directory.

179
00:10:52.326 --> 00:10:56.497
But I've always just been used to keeping
them uppercase in the components.

180
00:10:56.497 --> 00:10:58.816
For some reason I've just done
that because when I see that,

181
00:10:58.816 --> 00:11:00.600
I know that that's a component and
not a page.

182
00:11:01.620 --> 00:11:05.928
Whereas when I see these, I know that
these are, I mean, it literally says page,

183
00:11:05.928 --> 00:11:09.487
but before you have to use the word page,
you just didn't know, for

184
00:11:09.487 --> 00:11:13.109
instance down in the pages directory
like hello TS, that's a page,

185
00:11:13.109 --> 00:11:16.370
because you don't have to use
page JS in the pages directory.

186
00:11:17.460 --> 00:11:19.520
But I know it's a page
because it's also lowercase.

187
00:11:19.520 --> 00:11:23.076
Whereas, if it was uppercase, and
not in this folder, then I would know, so,

188
00:11:23.076 --> 00:11:24.204
that's mostly just me.

189
00:11:24.204 --> 00:11:29.173
And I also think it's out of
habit of like, sometimes,

190
00:11:29.173 --> 00:11:34.989
a while ago, people didn't use
the actual JSX or TSX extension,

191
00:11:34.989 --> 00:11:39.671
they just use .js, or .ts,
and that still works.

192
00:11:39.671 --> 00:11:42.103
You don't actually have to
change it to TSX or JSX.

193
00:11:42.103 --> 00:11:47.208
But then it's like, well what's
the difference between a regular TS

194
00:11:47.208 --> 00:11:52.324
file that didn't have JavaScript in it and
a TS file that had JSX in it?

195
00:11:52.324 --> 00:11:55.040
So sometimes they will capitalize
the letter of the file, so,

196
00:11:55.040 --> 00:11:56.588
if you look at that's a component.

197
00:11:56.588 --> 00:11:58.530
And the other one's just
a regular JavaScript file,

198
00:11:58.530 --> 00:12:01.330
versus just using the different
extensions cuz they were lazy.

199
00:12:01.330 --> 00:12:06.529
So, yeah, it's history to it, but it's
just my thing, it's just what I've done.

200
00:12:06.529 --> 00:12:07.841
I'm not saying it's right or wrong.

