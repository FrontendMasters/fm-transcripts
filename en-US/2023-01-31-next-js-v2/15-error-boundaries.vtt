WEBVTT

1
00:00:00.000 --> 00:00:02.580
Okay, the other one is very similar, and

2
00:00:02.580 --> 00:00:06.352
it handles what might go wrong
when you try to load some data.

3
00:00:06.352 --> 00:00:08.962
And that's an error boundary or
an error file.

4
00:00:08.962 --> 00:00:11.973
So, suspense and error work very similar.

5
00:00:11.973 --> 00:00:14.328
The error boundaries as in
nothing can escape them.

6
00:00:14.328 --> 00:00:16.637
So if you wrap something in them,

7
00:00:16.637 --> 00:00:22.248
then whatever the subject that you're
wrapping, it's bound to that context.

8
00:00:22.248 --> 00:00:23.504
So the error boundary works the same.

9
00:00:23.504 --> 00:00:25.991
You can think of it as a try-catch for
a component.

10
00:00:25.991 --> 00:00:29.539
You can like, I wanna try-catch this
component and if something happens,

11
00:00:29.539 --> 00:00:30.990
show this component, right?

12
00:00:30.990 --> 00:00:33.190
And that's what the error boundary does.

13
00:00:33.190 --> 00:00:35.031
So we could do the same thing.

14
00:00:35.031 --> 00:00:39.403
So if I go into this slug here and

15
00:00:39.403 --> 00:00:44.446
I say new file, I say error.tsx and

16
00:00:44.446 --> 00:00:49.827
I want to show an error exports default

17
00:00:49.827 --> 00:00:54.033
function post error like this

18
00:00:54.033 --> 00:00:58.911
return oops something like that,

19
00:00:58.911 --> 00:01:03.804
all right go back to our page here.

20
00:01:03.804 --> 00:01:10.253
We'll use the delay that I actually
exported, got our delay and

21
00:01:10.253 --> 00:01:16.357
then you know before I got to
render I don't know I'll just.

22
00:01:16.357 --> 00:01:18.563
Oops, threw an error.

23
00:01:21.578 --> 00:01:24.642
Something like that.

24
00:01:24.642 --> 00:01:29.089
So I could throw an error here
before the rendering happens and

25
00:01:29.089 --> 00:01:33.975
it should show this page in place
of what should have been this page.

26
00:01:33.975 --> 00:01:38.503
Actually what we can do is let's just
try it not inside of this dynamic

27
00:01:38.503 --> 00:01:43.501
segment we could just try it here it
might just be better honestly we'll just

28
00:01:43.501 --> 00:01:46.645
say error TSX here on a route for
the index page.

29
00:01:46.645 --> 00:01:47.741
That's probably a better look.

30
00:01:47.741 --> 00:01:52.331
I bet that's something to
do with the way that it's

31
00:01:52.331 --> 00:01:55.759
working with the dynamic bits there.

32
00:01:55.759 --> 00:01:57.777
So we'll put an error here.

33
00:01:57.777 --> 00:02:01.851
So we'll do that and
then I'll go into the page and

34
00:02:01.851 --> 00:02:05.739
then inside of here we can
try to throw an error.

35
00:02:05.739 --> 00:02:07.742
Let's see what happens?

36
00:02:15.203 --> 00:02:16.016
Hey there we go so

37
00:02:16.016 --> 00:02:19.629
it worked here yeah it's something to
do with that dynamic path segment.

38
00:02:19.629 --> 00:02:22.062
It's I'm pretty sure it's a bug, so

39
00:02:22.062 --> 00:02:26.714
you can see it's storing our error
page instead, which is just, oops.

40
00:02:26.714 --> 00:02:28.421
But everything else still rendered,

41
00:02:28.421 --> 00:02:31.200
which is in this case just a layout
because we're in the page.

42
00:02:31.200 --> 00:02:34.823
So the only thing renders
above this is a layout.

43
00:02:36.051 --> 00:02:37.840
So pretty powerful stuff.

44
00:02:37.840 --> 00:02:43.308
The equivalent Is writing your own
error boundary, which looks exactly

45
00:02:43.308 --> 00:02:49.325
like the suspense boundary, but
it's literally just called error boundary.

46
00:02:49.325 --> 00:02:52.289
So I'm not gonna write it because
that's a whole other example.

47
00:02:52.289 --> 00:02:56.611
But I think you get the point and that's
if you have it as a server component

48
00:02:56.611 --> 00:03:00.931
not as a page that you import it in and
you want to wrap it in error boundary,

49
00:03:00.931 --> 00:03:02.071
you would do that.

50
00:03:02.071 --> 00:03:05.282
&gt;&gt; Would you be able to access like
information about the error within like

51
00:03:05.282 --> 00:03:08.386
the error dot TSX file, like maybe
like telnet telemetry purposes or

52
00:03:08.386 --> 00:03:09.419
something like that?

53
00:03:09.419 --> 00:03:16.285
&gt;&gt; Yeah, you don't know what the proper
name is here, but it might be error.

54
00:03:16.285 --> 00:03:24.219
Let's see I'm in a raw file
here to go to this one.

55
00:03:24.219 --> 00:03:26.927
That was messed up.

56
00:03:26.927 --> 00:03:28.708
But now,
we're in a regular error boundary.

57
00:03:28.708 --> 00:03:30.415
Yes, you have access to the entire error.

58
00:03:30.415 --> 00:03:32.280
You can show the message.

59
00:03:32.280 --> 00:03:34.107
You can do whatever you want there.

60
00:03:34.107 --> 00:03:37.029
It totally works.

61
00:03:37.029 --> 00:03:41.290
So let's see if they
actually pass that on as

62
00:03:41.290 --> 00:03:45.793
the page here actually
ever tested this part.

63
00:03:49.090 --> 00:03:49.723
Yeah it is.

64
00:03:49.723 --> 00:03:53.131
So it's an object.

65
00:03:53.131 --> 00:03:57.084
So we probably like error dot message.

66
00:03:59.276 --> 00:04:02.465
And then, yeah, there it is.

67
00:04:02.465 --> 00:04:08.268
So yeah, you get access to it pretty cool.

