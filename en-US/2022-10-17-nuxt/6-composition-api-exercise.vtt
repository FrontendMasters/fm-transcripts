WEBVTT

1
00:00:00.000 --> 00:00:03.251
So your exercise for
the next ten minutes is to go ahead and

2
00:00:03.251 --> 00:00:05.431
do what I did inside of photoGallery.

3
00:00:05.431 --> 00:00:09.364
And we're gonna move the todoViewer
into composition API.

4
00:00:09.364 --> 00:00:13.172
And so again, you'll always have the app
photo gallery as a reference, and

5
00:00:13.172 --> 00:00:15.327
with that I'll see you all in ten minutes.

6
00:00:21.570 --> 00:00:24.382
So I apologize kind of with
the mix up with the branches.

7
00:00:24.382 --> 00:00:28.514
If you had issues pulling, I had to force
push a little bit into the exercise

8
00:00:28.514 --> 00:00:33.410
because I forgot that my changes were
technically a reversion on the history.

9
00:00:33.410 --> 00:00:37.206
And so another thing you might run into
as well is that if you're having issues,

10
00:00:37.206 --> 00:00:40.265
if the terminal is yelling at you
to be like, I can't find Nuxt or

11
00:00:40.265 --> 00:00:43.859
I don't know where something is,
make sure you're in the app directory.

12
00:00:43.859 --> 00:00:48.096
Cuz I know this is kind of atypical from a
normal project where everything's just on

13
00:00:48.096 --> 00:00:48.710
the route.

14
00:00:48.710 --> 00:00:51.047
And so
just make sure you switch directory,

15
00:00:51.047 --> 00:00:53.583
that should help to resolve
any issue you have.

16
00:00:53.583 --> 00:00:57.005
I do have a great question here though,
an error that's being shown,

17
00:00:57.005 --> 00:00:59.970
which is that template route
requires exactly one element.

18
00:00:59.970 --> 00:01:03.134
One of the things to check is make
sure you have volar on and not veeder.

19
00:01:03.134 --> 00:01:05.204
If you have both on at the same time,

20
00:01:05.204 --> 00:01:08.041
sometimes you'll get
the wrong error message.

21
00:01:08.041 --> 00:01:11.566
Because, basically,
this is a good question regardless,

22
00:01:11.566 --> 00:01:14.467
is that prior to Vue 3 and
for a lot of frameworks,

23
00:01:14.467 --> 00:01:18.081
you had to wrap everything in divs and
you got div sup, right?

24
00:01:18.081 --> 00:01:22.060
Divs wrapped everywhere because
of that single div limitation.

25
00:01:22.060 --> 00:01:24.643
For those who followed Vue 3's
development, you'll know that one of

26
00:01:24.643 --> 00:01:27.225
the features that come with Vue 3 is
that you don't need that anymore,

27
00:01:27.225 --> 00:01:28.704
you can have multi-route components.

28
00:01:28.704 --> 00:01:32.920
It comes with its own set of caveats
of making sure you define everything

29
00:01:32.920 --> 00:01:33.900
correctly.

30
00:01:33.900 --> 00:01:37.164
The reason it's still relevant in Nuxt
though, even though as you can see here,

31
00:01:37.164 --> 00:01:39.094
it's technically not
yelling at me right now.

32
00:01:39.094 --> 00:01:42.984
Eventually if we keep doing this as
we progress further in the workshop,

33
00:01:42.984 --> 00:01:44.341
you will get that error.

34
00:01:44.341 --> 00:01:48.050
Because there comes a point where,
particularly when Nuxt is rendering

35
00:01:48.050 --> 00:01:51.902
a page, it has no idea how to handle
something that has more than one route.

36
00:01:51.902 --> 00:01:56.095
Because if it's swapping a page in and
out, it would just be a nightmare to

37
00:01:56.095 --> 00:02:00.492
try to figure out which part of the route
is supposed to be hydrated where, and

38
00:02:00.492 --> 00:02:02.810
how do you code bundle split that thing?

39
00:02:02.810 --> 00:02:08.353
So just know that as a rule,
Vue 3 allows you to do multi-route.

40
00:02:08.353 --> 00:02:08.926
So just know that this is
not a Vue 3 limitation.

41
00:02:08.926 --> 00:02:12.977
But rather basically, especially once
you start doing navigation with Nuxt,

42
00:02:12.977 --> 00:02:16.543
that's one of those things where to
help a page transition and stuff,

43
00:02:16.543 --> 00:02:18.608
those will have a single route element.

44
00:02:18.608 --> 00:02:21.312
But just know that it's
not a Vue 3 limitation.

45
00:02:21.312 --> 00:02:24.706
Great, all right,
glad I answered your question.

46
00:02:24.706 --> 00:02:29.750
Although fun fact, we had someone here in
the room who ran into the dot value bomb.

47
00:02:29.750 --> 00:02:32.367
So [LAUGH] it's just one of the things,
it does happen.

48
00:02:32.367 --> 00:02:34.513
You just kinda forget,
you're just like, yeah,

49
00:02:34.513 --> 00:02:36.375
I'll just do it todo List.filter,
is great.

50
00:02:36.375 --> 00:02:40.698
[LAUGH] So again, that's why some people,
they just like using reactive, right?

51
00:02:40.698 --> 00:02:45.946
And just for the sake of
demonstrating what I mean by that,

52
00:02:45.946 --> 00:02:49.620
I know what happened, it's totally fine.

53
00:02:49.620 --> 00:02:51.438
We'll fix it in this one.

54
00:02:51.438 --> 00:02:56.219
But okay, so let me very quickly convert
this over to comp API, cuz I was like,

55
00:02:56.219 --> 00:02:58.471
why does it look like options again?

56
00:02:58.471 --> 00:03:02.393
But it's fine, it would've been
good practice for anyone who,

57
00:03:02.393 --> 00:03:05.762
[LAUGH] you can always get
more practice with this stuff.

58
00:03:05.762 --> 00:03:09.830
So what I'm gonna do here is quickly
switch over the composition API, and

59
00:03:09.830 --> 00:03:14.309
I'm gonna do it just as full speed, so
I'm not basically gonna explain myself.

60
00:03:14.309 --> 00:03:18.772
But basically, again, I'll just try to
somewhat mention things, there's my ref.

61
00:03:18.772 --> 00:03:22.220
And then here, I'm deleting that,
deleting that, there's that.

62
00:03:22.220 --> 00:03:24.182
I'm gonna make these things const.

63
00:03:24.182 --> 00:03:28.580
I'm using multi-cursor select by the way,
so I'm just basically doing Cmd + Click.

64
00:03:28.580 --> 00:03:32.397
And then this is a callback function,
but I need to wrap this with computed.

65
00:03:32.397 --> 00:03:36.275
And then I just need to close that off,
multi-cursor click for the win,

66
00:03:36.275 --> 00:03:37.172
then function.

67
00:03:37.172 --> 00:03:41.011
So actually just a fun little opinion
piece, I don't think there's a right or

68
00:03:41.011 --> 00:03:42.707
wrong with this, again, at all.

69
00:03:42.707 --> 00:03:46.904
But I used to actually just declare
functions like this, cuz I liked the error

70
00:03:46.904 --> 00:03:51.375
syntax, but I realized over time, you just
get this long list of consts and lets.

71
00:03:51.375 --> 00:03:55.397
And there's something actually kind of
nice about it visually just telling you,

72
00:03:55.397 --> 00:03:55.959
function.

73
00:03:55.959 --> 00:03:58.765
And then, sure,
you don't get the error syntax, but

74
00:03:58.765 --> 00:04:02.730
I think especially with composition API,
the longer your list of things is,

75
00:04:02.730 --> 00:04:05.220
it's nice to have that visual separation.

76
00:04:05.220 --> 00:04:08.168
So again, that's my personal thing that T
think I'm starting to adapt a little bit

77
00:04:08.168 --> 00:04:09.064
when I'm writing this.

78
00:04:09.064 --> 00:04:12.731
But otherwise, again,
please feel free to do as you wish.

79
00:04:12.731 --> 00:04:16.725
In this speed run, what you saw me do is
that we imported ref and computed, and

80
00:04:16.725 --> 00:04:18.397
then from view as we did before.

81
00:04:18.397 --> 00:04:21.919
And this time, just like we did before,
we're gonna actually make sure that we

82
00:04:21.919 --> 00:04:24.668
declare every variable with
the appropriate helper method.

83
00:04:24.668 --> 00:04:25.659
This is the key thing.

84
00:04:25.659 --> 00:04:29.489
And to be honest, it is something that's
actually really nice about the synta.

85
00:04:29.489 --> 00:04:34.024
Because what you're telling people,
right, because what we've seen in some

86
00:04:34.024 --> 00:04:38.354
frameworks lately is that they start
to change how the compiler works, so,

87
00:04:38.354 --> 00:04:40.871
for example, const todoList2 like this.

88
00:04:40.871 --> 00:04:43.688
If you just do let,
they'll override the compiler so

89
00:04:43.688 --> 00:04:46.326
that the array automatically
becomes reactive.

90
00:04:46.326 --> 00:04:49.714
And I don't think there's anything wrong
with that, in fact, it's very clean and

91
00:04:49.714 --> 00:04:51.764
it starts to make it feel very natural,
right, for

92
00:04:51.764 --> 00:04:53.785
people who are used to
assigning things that way.

93
00:04:53.785 --> 00:04:57.519
But for the sake of, I know that a lot of
people talking about JavaScript in terms

94
00:04:57.519 --> 00:05:00.276
of using the native JavaScript and
learning how it works.

95
00:05:00.276 --> 00:05:04.299
This is actually much closer, and I think
it follows that convention of, this is not

96
00:05:04.299 --> 00:05:07.824
just ES6 JavaScript you can run in
the browser and just expect it to work.

97
00:05:07.824 --> 00:05:10.028
This is something that you're
using Vue to help you out with.

98
00:05:10.028 --> 00:05:13.090
And that's one of the things I do like
about the helper methods in composition

99
00:05:13.090 --> 00:05:16.169
API, is that, it's very explicit when
you're having Vue come to help out.

100
00:05:16.169 --> 00:05:19.627
Versus having compiler macros that
wouldn't necessarily translate to another

101
00:05:19.627 --> 00:05:21.268
environment if you don't have that.

102
00:05:21.268 --> 00:05:23.003
So just a stylistic thing, but

103
00:05:23.003 --> 00:05:26.560
I think one of things that I do
like about these helper methods.

