WEBVTT

1
00:00:00.000 --> 00:00:03.553
Here is the next problem we have when it
comes to styling, which is that well.

2
00:00:03.553 --> 00:00:07.220
A lot of us like preprocessors because
they make our lives a lot easier when it

3
00:00:07.220 --> 00:00:10.619
comes to shared utility,
shared variables, and that kind of stuff.

4
00:00:10.619 --> 00:00:13.201
So the question is,
how do we use something like sass,

5
00:00:13.201 --> 00:00:15.630
basically the preprocessor
of choice these days?

6
00:00:15.630 --> 00:00:17.542
So let's go ahead and do that.

7
00:00:17.542 --> 00:00:22.170
So the first thing first is to understand
is that nuxt does not come with sass

8
00:00:22.170 --> 00:00:24.012
pre-installed as a bundle.

9
00:00:24.012 --> 00:00:27.403
So in other words, it needs the ability
to be able to read sass files correctly.

10
00:00:27.403 --> 00:00:29.996
And what we're gonna do is gonna
run npm install --save-dev,

11
00:00:29.996 --> 00:00:32.271
cuz this is mainly only for
the dev environment, right?

12
00:00:32.271 --> 00:00:34.709
Pre-processes don't get
passed up to production.

13
00:00:34.709 --> 00:00:37.727
And so we wanna install sass,
and sass-loader, and

14
00:00:37.727 --> 00:00:40.152
currently the docs recommending @10.

15
00:00:40.152 --> 00:00:43.056
But for those watching this in the future,
just check the nuxt ducs,

16
00:00:43.056 --> 00:00:45.624
if you want official check on
what you should be installing.

17
00:00:45.624 --> 00:00:50.450
But basically, it's saying, hey, install
my pre-processor sass, install the loader,

18
00:00:50.450 --> 00:00:54.127
again we're pinning it at specifically
at version 10 at the moment.

19
00:00:54.127 --> 00:00:57.336
In the future,
that might just completely get eliminated.

20
00:00:57.336 --> 00:01:00.352
Okay, once that's install, you'll know
you were successful, because why?

21
00:01:00.352 --> 00:01:04.253
Because your git log would tell you,
hey, look at this, I see sass and

22
00:01:04.253 --> 00:01:06.449
sass-loader in my dev dependencies.

23
00:01:06.449 --> 00:01:09.466
Great, okay, so
now I say can we actually use it?

24
00:01:09.466 --> 00:01:10.836
Well, how do we use it?

25
00:01:10.836 --> 00:01:13.398
Inside of here, so let's go to app.view,

26
00:01:13.398 --> 00:01:18.980
let's say we wanna actually say we have a
color that we wanna describe for the text.

27
00:01:18.980 --> 00:01:21.083
Well, I'm just gonna ahead and
strip the module right now,

28
00:01:21.083 --> 00:01:24.680
I just take sort of revert things back to
CSS to keep things a little bit simpler.

29
00:01:24.680 --> 00:01:30.076
And let's say for the list and the title,
we wanna have this class equals,

30
00:01:30.076 --> 00:01:35.056
let's call this heading, and
we wanna have this color red, right?

31
00:01:35.056 --> 00:01:39.133
And so normally, what you do is
you'd have a color that's red,

32
00:01:39.133 --> 00:01:42.999
you can have heading here,
that's also color red, right?

33
00:01:42.999 --> 00:01:48.897
And that should work if we go back to our
app or let me start it back up, boom.

34
00:01:48.897 --> 00:01:53.884
Then, if I max screen this, while it's
loading let's rearrange it a little bit,

35
00:01:53.884 --> 00:01:56.245
so it's a little bit easier to follow.

36
00:01:56.245 --> 00:01:59.760
All right, so interesting,
I'm missing a semicolon,

37
00:01:59.760 --> 00:02:03.140
let's go right back to it,
where did it get messed up?

38
00:02:03.140 --> 00:02:04.852
Yes, clearly, I missed it here,

39
00:02:04.852 --> 00:02:08.100
you won't hear about that one
cuz there's only one property.

40
00:02:08.100 --> 00:02:11.070
But now when we refresh, hey,
there we go and we fetch the data,

41
00:02:11.070 --> 00:02:13.170
we'll see everything's right.

42
00:02:13.170 --> 00:02:14.360
That works, okay.

43
00:02:14.360 --> 00:02:18.576
So if you're a little more forward
thinking, you're thinking, well,

44
00:02:18.576 --> 00:02:22.044
I know about variables, so
CSS variables, so I can say yes,

45
00:02:22.044 --> 00:02:24.364
--text-color: red, I can do this.

46
00:02:24.364 --> 00:02:30.382
And then from here, we can basically say
var (--text-color) and var (--text-color).

47
00:02:30.382 --> 00:02:34.121
And to prove that this works cuz there
will be no visual difference between

48
00:02:34.121 --> 00:02:38.330
the two unless I change this,
will make this green instead, right?

49
00:02:38.330 --> 00:02:41.280
And then look,
everything's green, looks nice.

50
00:02:41.280 --> 00:02:44.749
But pre-processors can help us
especially with sass, especially,

51
00:02:44.749 --> 00:02:48.392
sometimes we are defining things that
are maybe, we wanna use maybe or for

52
00:02:48.392 --> 00:02:52.803
example, if you're using something that
doesn't have, you're supporting a browser

53
00:02:52.803 --> 00:02:56.520
version that doesn't have CSS variables,
this won't work.

54
00:02:56.520 --> 00:03:00.761
So in this case, all you got to do is you
added language attribute, and for me,

55
00:03:00.761 --> 00:03:02.130
I prefer a CSS over sass.

56
00:03:02.130 --> 00:03:04.576
But same for those who haven't used it,
it's basically the same thing.

57
00:03:04.576 --> 00:03:08.352
Some slight syntactical differences,
but they're in the same umbrella.

58
00:03:08.352 --> 00:03:12.320
And then we could then just go well,
we're gonna say, $textColor.

59
00:03:12.320 --> 00:03:15.900
And this time, again, just to show that
something's changing, we'll say blue.

60
00:03:15.900 --> 00:03:20.883
And what's nice is, I can then do
$textColor like this, save, and so

61
00:03:20.883 --> 00:03:26.300
this syntax, to be very clear, this is
sass specific, this is not CSS spec.

62
00:03:26.300 --> 00:03:28.810
And then we refresh over here.

63
00:03:30.620 --> 00:03:32.970
It didn't feed it in.

64
00:03:34.510 --> 00:03:36.015
Let's check something real quick.

65
00:03:36.015 --> 00:03:41.242
TextColor, that's right,
it needs to interpolate

66
00:03:41.242 --> 00:03:45.779
the thing, I forgot, that's a whole thing.

67
00:03:45.779 --> 00:03:49.505
Let's Google the syntax for
that real quick.

68
00:03:49.505 --> 00:03:52.686
New window, please.

69
00:03:52.686 --> 00:03:59.108
Sass interpolation variable names,
see, very common like tossing came up.

70
00:03:59.108 --> 00:04:03.276
[LAUGH] Because right now, what's
happening to explain this real quick for

71
00:04:03.276 --> 00:04:08.040
those having you sass, this text color is
actually reading this as a literal string,

72
00:04:08.040 --> 00:04:10.901
it is not trying to do any
sort of compilation on it.

73
00:04:10.901 --> 00:04:15.640
So what we need to do if I can't remember,
yeah, it's this syntax.

74
00:04:15.640 --> 00:04:18.602
I think it should be this, is that it?

75
00:04:18.602 --> 00:04:20.978
I wanna say let's try this real quick,
like this yeah,

76
00:04:20.978 --> 00:04:24.230
I already see some color syntax
highlighting, this looks better already.

77
00:04:25.280 --> 00:04:26.910
There we go much better.

78
00:04:26.910 --> 00:04:27.885
So as you can see,

79
00:04:27.885 --> 00:04:31.870
now you've basically paired
a preprocessor along with the modern one.

80
00:04:31.870 --> 00:04:33.565
And then it's helpful
because if things break,

81
00:04:33.565 --> 00:04:35.690
you have some progressive degradation.

82
00:04:35.690 --> 00:04:37.277
But now that we've done this though,

83
00:04:37.277 --> 00:04:40.351
the thing you're probably thinking
next is that, okay, this is nice for

84
00:04:40.351 --> 00:04:42.850
my components, but
I'm gonna have stuff that's shared.

85
00:04:42.850 --> 00:04:43.760
How are we gonna do that?

86
00:04:43.760 --> 00:04:47.852
Well, this is where the assets folder
finally comes into play, because assets

87
00:04:47.852 --> 00:04:52.470
are things that we want the compiler or
the build tools to actually take a run at.

88
00:04:52.470 --> 00:04:54.399
So we're gonna create an assets folder.

89
00:04:55.540 --> 00:04:59.921
And so this folder should be an app
actually, I extend credit in the root.

90
00:04:59.921 --> 00:05:01.562
So you can see, here is our assets.

91
00:05:01.562 --> 00:05:06.017
And then typically, what I see on most
projects is there is gonna be a folder for

92
00:05:06.017 --> 00:05:09.340
styles, and then we can create
a file called main.scss.

93
00:05:10.790 --> 00:05:13.847
And so inside of here for
example, we can go ahead and

94
00:05:13.847 --> 00:05:17.545
just take out this color blue,
and let's just drop it in here.

95
00:05:17.545 --> 00:05:20.118
And let's give our html
a background colour, shall we?

96
00:05:20.118 --> 00:05:22.892
What's the fun color we can do, let's see.

97
00:05:22.892 --> 00:05:25.386
Got to love the autocomplete
on vs code for the colors.

98
00:05:25.386 --> 00:05:28.080
Let's pick something fun,
not green, not red.

99
00:05:28.080 --> 00:05:30.440
Let's go with papayawhip, that sounds fun.

100
00:05:30.440 --> 00:05:33.612
Let's do the papayawhip, that should
be hopefully enough contrast and

101
00:05:33.612 --> 00:05:34.970
be readable to you, I like it.

102
00:05:34.970 --> 00:05:38.488
All right, so if we save right now though,
we're gonna get some issues though,

103
00:05:38.488 --> 00:05:39.530
because why?

104
00:05:39.530 --> 00:05:42.070
Well, first of all,
text color doesn't exist, right?

105
00:05:42.070 --> 00:05:44.090
You haven't imported it,
so how does that work?

106
00:05:44.090 --> 00:05:49.010
Well, it's actually pretty easy,
all we got to do is we go @import.

107
00:05:49.010 --> 00:05:52.480
And then we actually just refer to
the actual path of where it is.

108
00:05:52.480 --> 00:05:55.763
So since app.view is at the root,

109
00:05:55.763 --> 00:06:01.776
we can basically say
'./assets/styles/main.scss'.

110
00:06:01.776 --> 00:06:08.330
And in a colon oops,
semicolon actually to be clear.

111
00:06:09.460 --> 00:06:11.810
All right, and look at that.

112
00:06:11.810 --> 00:06:14.830
Our sass styles are appearing and
it looks good.

113
00:06:14.830 --> 00:06:19.616
And so this strategy can basically be
used as you break your global size up

114
00:06:19.616 --> 00:06:21.346
into partials and stuff.

115
00:06:21.346 --> 00:06:23.235
Again, we're not this is
not a CSS workshop so

116
00:06:23.235 --> 00:06:25.327
I'm gonna let you all dive
into that as it sees fit.

117
00:06:25.327 --> 00:06:29.515
But you have seen at least the basics of
how to get your own sass file into now,

118
00:06:29.515 --> 00:06:33.520
the compilation step, everything was good,
you know how to import it.

119
00:06:33.520 --> 00:06:38.230
Now, the next step we're gonna do with
this is we're gonna have you install

120
00:06:38.230 --> 00:06:40.155
an actual design like system.

121
00:06:40.155 --> 00:06:44.707
And so the one we're going to use if
you've never used it before is called

122
00:06:44.707 --> 00:06:45.237
Bulma.

123
00:06:45.237 --> 00:06:48.627
And I actually, I would be curious to find
out if it was named after the Dragon Ball,

124
00:06:48.627 --> 00:06:50.770
Bulma, but that'd be cool if it was,
I think it is.

125
00:06:50.770 --> 00:06:51.583
Excellent.

126
00:06:51.583 --> 00:06:55.211
And actually, now I look at the logo that
kind of does look like a hair color,

127
00:06:55.211 --> 00:06:57.040
so for any Dragon Ball fans out there.

128
00:06:57.040 --> 00:07:01.145
So Bulma basically is an open-source CSS
framework, think bootstrap, think material

129
00:07:01.145 --> 00:07:04.536
design, but I like to use Bulma because
everyone uses material design and

130
00:07:04.536 --> 00:07:05.809
everyone uses bootstrap.

131
00:07:05.809 --> 00:07:07.574
So something a little bit different and

132
00:07:07.574 --> 00:07:10.040
I just got some nice conventions
that I do enjoy using.

133
00:07:10.040 --> 00:07:12.510
So gow does this work?

134
00:07:12.510 --> 00:07:15.470
Well, we're gonna,
npm install bulma, right?

135
00:07:15.470 --> 00:07:23.140
And so what that will do is once again we
can see, take, that's why it didn't work.

136
00:07:23.140 --> 00:07:27.170
So okay, this is where I
got to love terminal hints.

137
00:07:27.170 --> 00:07:29.886
If you'll notice, normally when
I make a change to something,

138
00:07:29.886 --> 00:07:33.152
like if I make a change here and I save
it, if you'll notice that I get this like

139
00:07:33.152 --> 00:07:36.560
exclamation mark that tells me
something's changed on your branch.

140
00:07:36.560 --> 00:07:40.235
And the where I get this from just so that
people can have this is something called I

141
00:07:40.235 --> 00:07:42.140
wanna say, it's rocket ship terminal.

142
00:07:43.400 --> 00:07:45.560
I mess this up every time it's starship,
I don't know.

143
00:07:45.560 --> 00:07:49.042
I tell you I've streamed this thing
multiple times, and I mess it up, but

144
00:07:49.042 --> 00:07:49.892
it's starship.

145
00:07:49.892 --> 00:07:51.954
And so basically, it's a minimal prompt,

146
00:07:51.954 --> 00:07:54.250
and so that's why you see
my prompt the way it is.

147
00:07:54.250 --> 00:07:57.410
It basically tells me the project,
it doesn't know what branch I'm on.

148
00:07:57.410 --> 00:08:00.005
But it tells me flags when something's
changed on my git branch, and

149
00:08:00.005 --> 00:08:02.470
then it does things like
node environments and stuff.

150
00:08:02.470 --> 00:08:06.100
But anyways, this is nice because okay,
let me revert this real quick.

151
00:08:06.100 --> 00:08:08.882
I just installed, Bulma,
but nothing has changed and

152
00:08:08.882 --> 00:08:12.620
that should be a red flag immediately
because what just happened?

153
00:08:12.620 --> 00:08:17.046
Well, what just happened is I'm actually
in the root directory and my package.json

154
00:08:17.046 --> 00:08:21.500
is up in app, so I'm gonna switch over
to app, run npm, install Bulma again.

155
00:08:21.500 --> 00:08:23.470
And this time,
you'll see that it's flagged me.

156
00:08:23.470 --> 00:08:25.240
Yes, there is a change.

157
00:08:25.240 --> 00:08:25.890
And what's the change?

158
00:08:25.890 --> 00:08:26.940
Yes, here we go.

159
00:08:26.940 --> 00:08:31.870
We see Bulma in our dependencies, and
we see it in our package-lock, great.

160
00:08:31.870 --> 00:08:34.736
All right, so now that we have
that the question is well,

161
00:08:34.736 --> 00:08:37.790
how the heck do we
actually import the thing?

162
00:08:37.790 --> 00:08:38.849
Well, believe it or not,

163
00:08:38.849 --> 00:08:41.460
the strategy is actually very
similar to what we just have here.

164
00:08:41.460 --> 00:08:44.856
What we're gonna do is we're
actually gonna say import,

165
00:08:44.856 --> 00:08:48.760
and then we're actually gonna
go into the node_modules folder.

166
00:08:48.760 --> 00:08:50.440
And so just explore it a little bit.

167
00:08:50.440 --> 00:08:52.330
I know mostly,
we tend to avoid this, but just for

168
00:08:52.330 --> 00:08:54.570
the sake of teaching you
what's going on here.

169
00:08:54.570 --> 00:08:57.880
You can actually open up the package
directly and if you actually look,

170
00:08:57.880 --> 00:09:00.253
Bulma is actually a pretty
quaint little package,

171
00:09:00.253 --> 00:09:02.220
it's just a folder with a sass file.

172
00:09:02.220 --> 00:09:03.230
So what can we do?

173
00:09:03.230 --> 00:09:07.770
Well, we can just grab that
Bulma sass file and import it.

174
00:09:07.770 --> 00:09:10.629
And so when you talk to customization,
Bulma lets you then dive in,

175
00:09:10.629 --> 00:09:11.840
grab partials and stuff.

176
00:09:11.840 --> 00:09:15.526
Once again, not a CSS workshop but
gives you just enough taste,

177
00:09:15.526 --> 00:09:17.950
it could be dangerous with it.

178
00:09:17.950 --> 00:09:21.698
And now, just to show you that this works,
I'm gonna add because I know that this is

179
00:09:21.698 --> 00:09:25.380
gonna work, I'm gonna add a title,
CSS attribute to this one.

180
00:09:25.380 --> 00:09:28.445
So now, if I refresh it, you already see
some of the stuff is starting to change,

181
00:09:28.445 --> 00:09:30.340
and so
the title is already looking better.

182
00:09:30.340 --> 00:09:33.065
In fact, the typography already
starting to look a little bit better.

183
00:09:33.065 --> 00:09:37.889
And so one thing I'm gonna do just to make
this look even a little bit better is let

184
00:09:37.889 --> 00:09:41.432
me go ahead and wrap this thing in a div,
div, and the div.

185
00:09:41.432 --> 00:09:45.257
I'm gonna add for this one I'm
just gonna call this one I think

186
00:09:45.257 --> 00:09:49.318
it's containers the one I'm looking for
I meant sections save.

187
00:09:49.318 --> 00:09:49.893
That's much better.

188
00:09:49.893 --> 00:09:52.197
Okay, I wanted to see the drop here,
and so

189
00:09:52.197 --> 00:09:56.678
we're already starting to apply some basic
layout and stuff, and so there you go.

190
00:09:56.678 --> 00:09:59.933
Now, you have Bulma working, and you
can basically poke through the docs and

191
00:09:59.933 --> 00:10:02.204
we're gonna use this as
the template going forward.

192
00:10:02.204 --> 00:10:03.716
So if you see me starting to add class,

193
00:10:03.716 --> 00:10:06.522
I will try to make sure to call it out
that like these are Bulma classes.

194
00:10:06.522 --> 00:10:08.940
So that way,
I'm not writing raw CSS because again,

195
00:10:08.940 --> 00:10:10.887
we're here to learn about nuxt, not CSS.

196
00:10:10.887 --> 00:10:12.712
And y'all can dive into that on your own.

