WEBVTT

1
00:00:00.140 --> 00:00:04.238
Go ahead play around with
the photo gallery this time and

2
00:00:04.238 --> 00:00:08.682
I want you to go ahead and
just maybe play around and say like,

3
00:00:08.682 --> 00:00:12.104
fetch only the albums
that have that are even.

4
00:00:12.104 --> 00:00:14.522
If they pass that inside
of the query params and

5
00:00:14.522 --> 00:00:16.950
then have that filter
that list accordingly.

6
00:00:16.950 --> 00:00:20.001
So again, just have a play with it for
the next five minutes.

7
00:00:20.001 --> 00:00:21.559
I know it's a little bit short on time,

8
00:00:21.559 --> 00:00:24.298
but I do wanna make sure we get to
some of the other critical topics that

9
00:00:24.298 --> 00:00:26.584
I want you all to learn about,
so we'll see you all then.

10
00:00:30.795 --> 00:00:34.606
So, first thing first, let's go ahead and
open up our photos page and

11
00:00:34.606 --> 00:00:37.590
let's actually make sure
it just loads up correctly.

12
00:00:39.430 --> 00:00:46.830
Fresh photos, okay,
it is loading correctly, great.

13
00:00:46.830 --> 00:00:50.935
So we wanna do, as I said, the exercise
was to basically filter on a param where

14
00:00:50.935 --> 00:00:55.355
basically if even is true, for example,
then we'll only return the filtered photo

15
00:00:55.355 --> 00:00:57.990
gallery that only contains
albums that are even.

16
00:00:59.060 --> 00:01:02.056
So what we're gonna do here is we're
gonna start by actually creating that

17
00:01:02.056 --> 00:01:02.920
computer property.

18
00:01:02.920 --> 00:01:05.520
I think that's always the most
straightforward way of the doing this.

19
00:01:05.520 --> 00:01:07.821
So, I say filtered Photo Gallery,

20
00:01:07.821 --> 00:01:12.490
is a computed property that's
gonna watch our photo gallery.

21
00:01:12.490 --> 00:01:20.800
But, we gonna do photoGallery.filter,
and we gonna filter by let's see photo.

22
00:01:20.800 --> 00:01:24.350
And so, we gonna say photo.albumId.

23
00:01:24.350 --> 00:01:27.850
And if the modulo 2,
check it if it's equal to 0.

24
00:01:27.850 --> 00:01:29.220
This will make sure it's equal.

25
00:01:29.220 --> 00:01:35.821
And then what we wanna do then is we only
wanna do this however if the route that,

26
00:01:35.821 --> 00:01:42.327
oops, that automatically imported
something that it wasn't supposed to,

27
00:01:42.327 --> 00:01:47.310
route.query.even, yes,
that should do the trick.

28
00:01:47.310 --> 00:01:47.910
Just like that.

29
00:01:49.220 --> 00:01:51.040
And then if even it's true, great,

30
00:01:51.040 --> 00:01:54.540
otherwise we're just gonna
return the entire photoGallery.

31
00:01:54.540 --> 00:01:56.450
We're not gonna filter any of it at all.

32
00:01:56.450 --> 00:01:57.537
So that's actually it,

33
00:01:57.537 --> 00:02:00.226
I need to also do .value here
before that blows up in my face and

34
00:02:00.226 --> 00:02:03.462
then the other thing we need to do is
we actually need to bring in our route.

35
00:02:03.462 --> 00:02:07.902
So use route will be brought in here,
just like that, boom boom boom and

36
00:02:07.902 --> 00:02:13.010
then now we can replace our filtered
Photo Gallery just like that.

37
00:02:13.010 --> 00:02:17.634
And if we save that and then go back we
should see, okay, everything's loading

38
00:02:17.634 --> 00:02:21.790
just fine and actually we should do
to actually see if it's gonna work.

39
00:02:21.790 --> 00:02:23.752
Cuz right now it's just
a bunch of placeholder images,

40
00:02:23.752 --> 00:02:25.150
we actually can't tell.

41
00:02:25.150 --> 00:02:28.427
Let's just log real quick
inside of the header.

42
00:02:28.427 --> 00:02:31.913
We're gonna have a p element,
we're gonna say,

43
00:02:31.913 --> 00:02:36.817
filtered Photo gallery.length,
and then photos, just like that.

44
00:02:36.817 --> 00:02:41.080
So, as we can see here,
great, we have 5000 photos.

45
00:02:41.080 --> 00:02:46.044
Now, if we go ahead and come in here and
we say even = true, and

46
00:02:46.044 --> 00:02:47.872
hit Enter, not save.

47
00:02:47.872 --> 00:02:51.210
And we hit Enter, there we go.

48
00:02:51.210 --> 00:02:53.596
You'll see now,
it loaded straight 2,500 photos,

49
00:02:53.596 --> 00:02:56.440
which makes sense cuz they
evenly distributed it.

50
00:02:56.440 --> 00:02:58.486
So yeah, question?

51
00:02:58.486 --> 00:03:00.877
&gt;&gt; Yeah, it's not a practice question,

52
00:03:00.877 --> 00:03:04.717
in terms of set up just like
setting the query params manually,

53
00:03:04.717 --> 00:03:08.993
is it common practice to just use that
two attribute of like next link or

54
00:03:08.993 --> 00:03:14.330
are there other practices for when you
wanna set query params from inside the UI?

55
00:03:14.330 --> 00:03:18.110
&gt;&gt; Yeah, so the question here is around
how typically query params are set.

56
00:03:18.110 --> 00:03:22.251
And so, basically, I would say for
the most part, I would expect that the two

57
00:03:22.251 --> 00:03:26.720
pass so, let me go back to navbar,
that's the easiest way to show this.

58
00:03:26.720 --> 00:03:30.730
So let me actually update this
nav item to say Completed Todos.

59
00:03:30.730 --> 00:03:32.894
So this here is probably
the simplest way to do it,

60
00:03:32.894 --> 00:03:34.500
I think it's what the user expects.

61
00:03:34.500 --> 00:03:37.129
And so, in case you're
programmatically putting it together,

62
00:03:37.129 --> 00:03:39.250
this is where you would do
like a computed property.

63
00:03:39.250 --> 00:03:43.353
And I would basically generate the string
to be like if all these conditions occur,

64
00:03:43.353 --> 00:03:47.380
generate the params or like the query,
and then just append it on to the Todo.

65
00:03:47.380 --> 00:03:50.620
So basically just as to
scaffold that real quick.

66
00:03:50.620 --> 00:03:55.541
Basically, we would be
saying const completed,

67
00:03:55.541 --> 00:03:59.450
or let's call this todoQuery.

68
00:03:59.450 --> 00:04:03.820
And it would be like a bunch of
things where basically we could be,

69
00:04:03.820 --> 00:04:05.730
completed = true.

70
00:04:05.730 --> 00:04:10.785
But of course, this might be
contingent on the fact that we

71
00:04:10.785 --> 00:04:16.887
have a completedCheck = ref,
check whether this is a Boolean or not.

72
00:04:16.887 --> 00:04:21.415
And then from here, you could then say,
this is a computer property that

73
00:04:21.415 --> 00:04:26.169
returns the string and will optionally
then fill in this completed check for

74
00:04:26.169 --> 00:04:27.892
example, just like that.

75
00:04:27.892 --> 00:04:31.405
And so once you have this todoQuery,
now that's like composed of this lot and

76
00:04:31.405 --> 00:04:34.651
normally will be a longer string right
because we know that when you're

77
00:04:34.651 --> 00:04:37.180
filtering a form that
can be a lot going on.

78
00:04:37.180 --> 00:04:41.351
So then this todoQuery now has
contained everything, it's reactive and

79
00:04:41.351 --> 00:04:45.722
because of that, you cannot pass it
here basically, as like either way, but

80
00:04:45.722 --> 00:04:47.617
I usually like to do it es 6 ways.

81
00:04:47.617 --> 00:04:54.409
So basically, I would probably just,
in this particular case,

82
00:04:54.409 --> 00:04:59.233
I might actually just
+ todoQuery like that.

83
00:04:59.233 --> 00:05:01.260
It's probably what I would do.

84
00:05:01.260 --> 00:05:02.879
So we don't need the es 6.

85
00:05:02.879 --> 00:05:06.130
And that way, you basically get your
dynamically generated query params,

86
00:05:06.130 --> 00:05:09.350
based on whatever reactive things
you've tracked throughout your form.

