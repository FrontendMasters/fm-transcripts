WEBVTT

1
00:00:00.410 --> 00:00:03.596
So what we're gonna do now is I wanted to
cover options API cuz this is where most

2
00:00:03.596 --> 00:00:06.860
people are starting from when
they've heard of you and seen it.

3
00:00:06.860 --> 00:00:10.349
But now it's time for
us to talk about composition API.

4
00:00:10.349 --> 00:00:13.530
And this is honestly where the bulk of
the workshop is gonna be moving towards

5
00:00:13.530 --> 00:00:16.763
because while options API is certainly
valid and it works with everything and

6
00:00:16.763 --> 00:00:18.019
I can't stress that enough.

7
00:00:18.019 --> 00:00:21.888
Options API is a valid approach to writing
your components a lot of examples and

8
00:00:21.888 --> 00:00:24.465
a lot of the ways things
are being used these days have

9
00:00:24.465 --> 00:00:26.182
some element of composition API.

10
00:00:26.182 --> 00:00:29.396
And so it's kind of unavoidable
to learn the fundamentals of it.

11
00:00:29.396 --> 00:00:32.475
So basically, we're gonna opt into it just
to show you what it's like in its full

12
00:00:32.475 --> 00:00:34.950
form, so
that people can get some practice with it.

13
00:00:34.950 --> 00:00:39.561
Because one of the reasons why
composition API even came into being is

14
00:00:39.561 --> 00:00:41.479
because while options API.

15
00:00:41.479 --> 00:00:44.374
I think its greatest claim to same from
my experience is that when I taught

16
00:00:44.374 --> 00:00:47.708
an introductory view workshop, there was
a designer who hadn't coded for years.

17
00:00:47.708 --> 00:00:52.406
And in fact primarily focused on
HTML CSS barely any JavaScript, but

18
00:00:52.406 --> 00:00:56.624
within an hour she was able to get up and
running with YouTube.

19
00:00:56.624 --> 00:01:01.259
Because the options API provided her with
very specific guidelines on how things

20
00:01:01.259 --> 00:01:03.313
were supposed to be built, right?

21
00:01:03.313 --> 00:01:06.425
Cuz one of the problems with freedom
sometimes is there's no guardrails and

22
00:01:06.425 --> 00:01:09.061
it can be confusing when people
architect things a certain way.

23
00:01:09.061 --> 00:01:12.059
However, with the guard rails that
means there are constraints and

24
00:01:12.059 --> 00:01:15.268
sometimes you want to organize things
the way you want to organize them,

25
00:01:15.268 --> 00:01:18.067
you might wanna use more native
JavaScript features whatnot.

26
00:01:18.067 --> 00:01:22.227
So the composition API was the answer to
that, so what I'm gonna do now is I'm

27
00:01:22.227 --> 00:01:26.340
gonna switch these now, so
we're gonna go back to the zoo example.

28
00:01:26.340 --> 00:01:31.654
So now we're on branch 02 begin and
we'll be updating the exercise branch and

29
00:01:31.654 --> 00:01:34.445
preparation for everybody, all right?

30
00:01:34.445 --> 00:01:38.454
So let's make sure we have our to do
app up and running so let's refresh,

31
00:01:38.454 --> 00:01:39.256
there you go.

32
00:01:39.256 --> 00:01:43.417
Natural server built beautiful,
all right, there we go,

33
00:01:43.417 --> 00:01:45.506
we have our to do list viewer.

34
00:01:45.506 --> 00:01:50.360
Okay, so composition API,
how does this differ from options API?

35
00:01:50.360 --> 00:01:53.361
Well, first thing first is we're gonna
basically get rid of a lot of the way

36
00:01:53.361 --> 00:01:55.100
it's being defined right now.

37
00:01:55.100 --> 00:01:58.080
So first thing first,
this whole export default object.

38
00:01:58.080 --> 00:02:02.400
This just disappears,
this goes by all of that disappears.

39
00:02:03.850 --> 00:02:06.960
And so the next thing we need to do though
is we need to actually then basically tell

40
00:02:06.960 --> 00:02:08.490
us that we're using composition API.

41
00:02:08.490 --> 00:02:11.174
And the way this is typically done is
with the setup life cycle hooks, so

42
00:02:11.174 --> 00:02:13.950
actually let me undo this real
quick just to demonstrate this.

43
00:02:13.950 --> 00:02:17.654
If you ever see anything inside of setup
method like this Instead of your options

44
00:02:17.654 --> 00:02:21.280
API, this is where you know
composition API is being sprinkled in.

45
00:02:21.280 --> 00:02:26.003
Because basically what you need to know
about composition API is that everything

46
00:02:26.003 --> 00:02:31.500
in here, from all these comments, all
these lines, they're vanilla JavaScript.

47
00:02:31.500 --> 00:02:34.590
In other words, they don't come
with any Vue magic by default.

48
00:02:34.590 --> 00:02:37.908
Whereas when we're looking at
options API stuff here, right,

49
00:02:37.908 --> 00:02:40.190
with methods,
you see we can refer to this.

50
00:02:40.190 --> 00:02:44.025
And then computed then there's also
global imports you get with routes and so

51
00:02:44.025 --> 00:02:47.401
there's a lot of magic that again
it's not everyone's cup of tea.

52
00:02:47.401 --> 00:02:50.674
But it's there it's been helpful for
some situations but

53
00:02:50.674 --> 00:02:55.164
when we want to configure everything
ourselves composition API is the answer.

54
00:02:55.164 --> 00:02:58.062
So what we're gonna do is because when
an authentic pure composition API,

55
00:02:58.062 --> 00:03:00.275
we're gonna use what is known
as the script setup block.

56
00:03:00.275 --> 00:03:04.084
And so what you're essentially doing
is telling the script block and

57
00:03:04.084 --> 00:03:07.237
the compiler that we're gonna
just skip that as an API and

58
00:03:07.237 --> 00:03:09.548
we're only gonna work with in the setup.

59
00:03:09.548 --> 00:03:12.786
So let me just actually I'm
just gonna comment this out,

60
00:03:12.786 --> 00:03:14.548
so that it doesn't yell at us.

61
00:03:14.548 --> 00:03:17.641
And so let's go ahead and
map over the various things, shall we?

62
00:03:17.641 --> 00:03:21.247
The first thing first is the photo
gallery, so typically you might be like

63
00:03:21.247 --> 00:03:24.577
okay, well what I might do is I'll
do let photoGallery = an array.

64
00:03:24.577 --> 00:03:29.743
And that'll do the trick, right, but
this again is vanilla JavaScript.

65
00:03:29.743 --> 00:03:32.915
So we need to do is tell it that hey
we actually wanna make it a reactive

66
00:03:32.915 --> 00:03:36.269
reference something that view will
track for us, and how do we do that?

67
00:03:36.269 --> 00:03:41.940
We Import ref from view, that's all you do
and once you import that you can actually

68
00:03:41.940 --> 00:03:47.302
wrap your value with the ref so you
passing like basically the starting value.

69
00:03:47.302 --> 00:03:49.941
And that will be basically what's
set as the reactive reference, so

70
00:03:49.941 --> 00:03:52.137
that is the equivalent of what
we just did here with data.

71
00:03:53.577 --> 00:03:56.607
Next, we have some computed properties,
right, so let's go ahead do that.

72
00:03:56.607 --> 00:04:00.127
So the computed property here,
I'll just make those conts.

73
00:04:00.127 --> 00:04:03.637
So we have here const number of photos,
okay?

74
00:04:03.637 --> 00:04:07.239
So again, right now we have a function
that returns this property,

75
00:04:07.239 --> 00:04:09.072
but this doesn't exist anymore,

76
00:04:09.072 --> 00:04:13.490
because we're no longer in the basically
the confines of options API.

77
00:04:13.490 --> 00:04:16.854
Okay, so what we need to do first is let's
start by importing our computed helper

78
00:04:16.854 --> 00:04:19.179
method, because this is how
we tell JavaScript, hey,

79
00:04:19.179 --> 00:04:21.220
we actually want this to
be a computed property.

80
00:04:23.320 --> 00:04:26.455
All right, there we go, but
then remember, this doesn't exist,

81
00:04:26.455 --> 00:04:31.000
especially with the arrow function because
the arrow function resets to this context.

82
00:04:31.000 --> 00:04:32.280
So what do we do?

83
00:04:32.280 --> 00:04:35.700
Well, you might think, okay, yeah, photo
gallery, this This should be good, right?

84
00:04:35.700 --> 00:04:38.836
But we have to remember that photo
gallery is not just an array.

85
00:04:38.836 --> 00:04:40.783
It's not a variable that
can just point to and

86
00:04:40.783 --> 00:04:44.280
get the value of because reactive
references in view need to be unpacked.

87
00:04:44.280 --> 00:04:47.321
Without diving into proxies and
stuff, just know that it's a way for

88
00:04:47.321 --> 00:04:50.480
you have to actually manually tell it,
I wanna get something out of it.

89
00:04:50.480 --> 00:04:52.600
And there's something nice
about this syntax, right?

90
00:04:52.600 --> 00:04:55.180
So basically the way we do that, as we
said, we wanna get the value out of it.

91
00:04:55.180 --> 00:05:00.460
And so this is how you say, okay, I want
the length of the photo gallery value.

92
00:05:01.910 --> 00:05:05.030
And let's go ahead and now do that for
the rest of them for even an odd.

93
00:05:05.030 --> 00:05:08.080
So let me just copy this one here.

94
00:05:10.490 --> 00:05:17.847
And then we'll do const even albums equals
computed and then just like this and

95
00:05:17.847 --> 00:05:24.690
then reset save what we solve
a problem because this does not exist.

96
00:05:24.690 --> 00:05:30.150
So reset that to .value and
then that's looking good.

97
00:05:30.150 --> 00:05:31.633
And then once again, let's go and

98
00:05:31.633 --> 00:05:34.690
just clone this cuz this will
be easier than me copying that.

99
00:05:34.690 --> 00:05:41.183
We have the odd albums and then we're
gonna wrap this inside of that negation.

100
00:05:43.812 --> 00:05:47.390
And then all we have
left now are the methods.

101
00:05:47.390 --> 00:05:48.082
And so the methods,

102
00:05:48.082 --> 00:05:51.700
if we think about what methods really are,
they're really just JavaScript functions.

103
00:05:51.700 --> 00:05:54.284
So let's take this fetch photo gallery,
and

104
00:05:54.284 --> 00:05:57.310
that can delete now all this boiler code.

105
00:05:57.310 --> 00:05:58.998
And we're just gonna define
it just like we would

106
00:05:58.998 --> 00:06:00.280
normally in a JavaScript function.

107
00:06:00.280 --> 00:06:02.012
Just give it the prefix function or

108
00:06:02.012 --> 00:06:05.170
it can use an aeros inax
whichever one you prefer.

109
00:06:05.170 --> 00:06:10.557
And then basically what you have now
Is you have everything basically,

110
00:06:10.557 --> 00:06:15.600
being automatically return to your
template as you would expect.

111
00:06:15.600 --> 00:06:18.463
Because we skipped the step of
like showing you composition API

112
00:06:18.463 --> 00:06:19.530
within options.

113
00:06:19.530 --> 00:06:22.250
But never use composition
API within the options API.

114
00:06:22.250 --> 00:06:25.320
You actually need to return
explicitly what you wanna use.

115
00:06:25.320 --> 00:06:29.025
But one of the things that you get as
a benefit of using script setup is there's

116
00:06:29.025 --> 00:06:30.797
a bunch of compiler optimizations.

117
00:06:30.797 --> 00:06:32.940
And so
it basically automatically knows like for

118
00:06:32.940 --> 00:06:36.022
example you'll notice here is this
a number of photo is declared never

119
00:06:36.022 --> 00:06:39.050
used because it actually knows
that inside of the template.

120
00:06:39.050 --> 00:06:41.439
It's going through basically
all the reactive references and

121
00:06:41.439 --> 00:06:42.620
being like it doesn't exist.

122
00:06:42.620 --> 00:06:45.710
And that's true because,
what did I say about one off errors?

123
00:06:45.710 --> 00:06:49.390
I forgot the s that's why
it's actually breaking.

124
00:06:49.390 --> 00:06:51.199
So I just need to add the s here and

125
00:06:51.199 --> 00:06:55.410
then I forgot I just need to
replace this value with .value.

126
00:06:55.410 --> 00:07:01.016
And this here is our equivalent of what we
did with options API in composition API.

127
00:07:01.016 --> 00:07:02.026
You have a question?

128
00:07:02.026 --> 00:07:04.248
&gt;&gt; Yeah, although it might be
an unnecessarily digression-

129
00:07:04.248 --> 00:07:05.350
&gt;&gt; No, go for it.

130
00:07:05.350 --> 00:07:07.940
&gt;&gt; So I see you're using
the ref helper function,

131
00:07:07.940 --> 00:07:08.520
I know-
&gt;&gt; Yeah.

132
00:07:08.520 --> 00:07:12.160
&gt;&gt; Sometimes you can also use Reactive for
non-primitives.

133
00:07:12.160 --> 00:07:15.840
Is there a particular rule of
thumb around that I notice this?

134
00:07:15.840 --> 00:07:17.853
&gt;&gt; No, that's a great question.

135
00:07:17.853 --> 00:07:22.510
So when it comes to reactive references,
as we just explained, there's ref here.

136
00:07:22.510 --> 00:07:23.843
But as artfully pointed out,

137
00:07:23.843 --> 00:07:27.070
there's actually something else
called a reactive helper method.

138
00:07:27.070 --> 00:07:28.708
And so it's worth clarifying here.

139
00:07:28.708 --> 00:07:32.206
So let's say we have another let's say
that we have like a new photo objects.

140
00:07:32.206 --> 00:07:35.790
All right, you could technically
just do a ref with an object.

141
00:07:35.790 --> 00:07:40.330
But what you might see in some code bases
as well is the reactive helper method.

142
00:07:40.330 --> 00:07:44.458
And the key difference with this is
that let's say we just have id 1, 2,

143
00:07:44.458 --> 00:07:46.070
3 title, best photo ever.

144
00:07:48.180 --> 00:07:51.431
So the difference with these two
things is let's go ahead and

145
00:07:51.431 --> 00:07:55.508
actually let me copy this and just for
now, just for the sake of comparison,

146
00:07:55.508 --> 00:07:58.779
these two things are let's say,
best photo ever to, okay?

147
00:07:58.779 --> 00:08:01.002
So when you refer to these
properties in the ref,

148
00:08:01.002 --> 00:08:03.020
we said that you actually
need to unpack it.

149
00:08:03.020 --> 00:08:05.352
So if I wanna refer to
the title of the photo gallery,

150
00:08:05.352 --> 00:08:09.360
it'd be photoGallery.value.title,
that's what you'd have to do.

151
00:08:09.360 --> 00:08:15.470
But in every active object,
you actually can just go a newPhoto.title.

152
00:08:15.470 --> 00:08:18.600
Now some of you might be interested going,
that's the one for me, I wanna type less.

153
00:08:18.600 --> 00:08:19.584
And that's totally fine, right?

154
00:08:19.584 --> 00:08:22.140
And that's exactly how I felt.

155
00:08:22.140 --> 00:08:24.250
But as I mentioned before
the beginning of this workshop,

156
00:08:24.250 --> 00:08:26.850
like decisions in our code
bases are all about trade offs.

157
00:08:26.850 --> 00:08:30.210
One of the things that was aptly pointed
out to me is that a library author

158
00:08:30.210 --> 00:08:31.630
preferred ref.

159
00:08:31.630 --> 00:08:35.354
And the reason for that is because it made
it very clear when you use a dot value,

160
00:08:35.354 --> 00:08:37.740
that it was a reactive
reference being utilized.

161
00:08:37.740 --> 00:08:41.792
Because otherwise, if you just see like a
new photo, that title being randomly like,

162
00:08:41.792 --> 00:08:45.200
again, our code is short enough
that you can make the connections.

163
00:08:45.200 --> 00:08:49.407
But once it's long, you're just sort
of like, okay, new photo.title,

164
00:08:49.407 --> 00:08:51.930
guess I assume it's reactive or
is it a lead?

165
00:08:51.930 --> 00:08:53.936
Is it a constant so technically,

166
00:08:53.936 --> 00:08:58.676
it does provide it that's off the skate
that declarative nature a little bit.

167
00:08:58.676 --> 00:09:00.958
So again,
is there one is better than the other?

168
00:09:00.958 --> 00:09:03.720
I say whatever your team prefers.

169
00:09:03.720 --> 00:09:06.806
For now, we'll be using REST though
because I think this is the one that

170
00:09:06.806 --> 00:09:09.080
people tend to shoot themselves
in the foot with it.

171
00:09:09.080 --> 00:09:11.143
Because it's easy to
forget to unpack it and

172
00:09:11.143 --> 00:09:13.278
when you don't unpack
it then things break.

173
00:09:13.278 --> 00:09:14.654
So we just want to give you.

174
00:09:14.654 --> 00:09:17.506
So at least as far as the examples I'll
be showing you, I just want to show you

175
00:09:17.506 --> 00:09:19.795
the rough example because react
if you just decide to use it.

176
00:09:19.795 --> 00:09:22.683
It'll feel really natural like
you normally use the desktop for

177
00:09:22.683 --> 00:09:25.850
example it'll feel really natural for
those of you who are used to that

