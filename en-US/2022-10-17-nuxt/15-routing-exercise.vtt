WEBVTT

1
00:00:00.000 --> 00:00:04.708
Your mission is to take the photo
gallery and the to-do viewer component

2
00:00:04.708 --> 00:00:09.509
that's currently just being displayed
as two different, side by side.

3
00:00:09.509 --> 00:00:15.982
We're gonna make them routes, so it
should be /display/to-dos/display/photos.

4
00:00:15.982 --> 00:00:18.623
And then if you want, go ahead and update
the NAV bar as well to reflect that so

5
00:00:18.623 --> 00:00:19.798
people can jump between the two.

6
00:00:19.798 --> 00:00:25.210
And the other thing is I still want
you to leave the display page intact

7
00:00:25.210 --> 00:00:30.433
in terms of let's just check to
make your life a little bit easier,

8
00:00:30.433 --> 00:00:36.672
let's just delete all this Display So

9
00:00:36.672 --> 00:00:41.601
basically if someone goes to slash
display, it should still show a page.

10
00:00:41.601 --> 00:00:43.425
And then when they go
to the specific routes,

11
00:00:43.425 --> 00:00:46.260
then they'll see the individual
apps separately, that is the plan.

12
00:00:46.260 --> 00:00:48.446
So I'm gonna push this up so
that no one's confused.

13
00:00:49.817 --> 00:00:53.359
Simplify Display page.

14
00:00:53.359 --> 00:00:58.069
&gt;&gt; And just to confirm,
the URLs should be, whack display,

15
00:00:58.069 --> 00:01:00.484
whack photos, whack todos.

16
00:01:00.484 --> 00:01:05.391
&gt;&gt; Yeah, so actually, what I'm gonna do
just to help you out too, Let me just,

17
00:01:05.391 --> 00:01:07.898
in here, I'll just put this as a todo.

18
00:01:07.898 --> 00:01:13.327
So, the result we're looking for,
is we wanna have two new routes,

19
00:01:13.327 --> 00:01:19.517
we have /display/todos, and
we have /display/photos, just like that.

20
00:01:19.517 --> 00:01:22.277
These are the NAV paths
you're looking for.

21
00:01:28.314 --> 00:01:31.562
We're now at the point we're
starting to nest folders, right?

22
00:01:31.562 --> 00:01:36.996
So let's talk about what most likely went
through the approach, is that you probably

23
00:01:36.996 --> 00:01:42.360
thought, okay, I'm gonna create a folder,
call a display or let's say display.

24
00:01:42.360 --> 00:01:46.195
Then I'm gonna create
a file called todos.view.

25
00:01:46.195 --> 00:01:49.954
And I'll create a file called photos.view.

26
00:01:49.954 --> 00:01:53.684
And again, for the sake of simplicity,
right now we're not gonna worry about

27
00:01:53.684 --> 00:01:56.634
functionality, we're just
literally gonna show the page.

28
00:01:56.634 --> 00:02:00.432
So we just need to have an h1 here,
this will be for photos and

29
00:02:00.432 --> 00:02:02.075
then I'll copy all that.

30
00:02:02.075 --> 00:02:04.872
I dropped out here, this will be todos.

31
00:02:04.872 --> 00:02:11.758
Okay, this this feels pretty good,
let's see what happens.

32
00:02:11.758 --> 00:02:16.012
So I'm gonna come over here and we're
gonna refresh, it looks like the home is

33
00:02:16.012 --> 00:02:19.567
still working, display is still working,
okay, pretty good.

34
00:02:19.567 --> 00:02:22.739
Anyway, okay, let's actually add
the navigation items because that's how we

35
00:02:22.739 --> 00:02:24.615
can actually test if
this is actually working.

36
00:02:24.615 --> 00:02:28.450
So we can go here, let's go to
the navbar that we have over here.

37
00:02:28.450 --> 00:02:32.450
And let's just drop this down
to the two that we care about.

38
00:02:32.450 --> 00:02:36.790
And then let's go ahead and
wrap these two in the NextLink component.

39
00:02:36.790 --> 00:02:40.110
Go to the end, also NextLink.

40
00:02:40.110 --> 00:02:43.270
Then we'll go ahead and just say this,
so this is alphabetic order.

41
00:02:43.270 --> 00:02:47.446
Let's do Photos, so in those two todos.

42
00:02:47.446 --> 00:02:54.301
Finally, we'll just go ahead and
do the to attribute /display/ what?

43
00:02:54.301 --> 00:03:00.976
That will be /photo/todos, okay, so far
I think it seems pretty standard, right?

44
00:03:00.976 --> 00:03:03.298
Great, so we'll come in here.

45
00:03:03.298 --> 00:03:05.891
It looks like it's already anticipated it.

46
00:03:05.891 --> 00:03:09.610
He said we're clicking on it and
nothing is happening, weird.

47
00:03:09.610 --> 00:03:11.250
Why is that happening?

48
00:03:11.250 --> 00:03:15.400
Well, the reason this is happening is
actually expected, this is not a bug.

49
00:03:15.400 --> 00:03:20.133
It's because when you define a top
layer page like this, that's display.

50
00:03:20.133 --> 00:03:22.207
Remember, if we think about
traditional HTML routing,

51
00:03:22.207 --> 00:03:23.555
what is displayed normally expect?

52
00:03:23.555 --> 00:03:25.290
An index.html page.

53
00:03:25.290 --> 00:03:29.738
So in other words you've kind of like the
routing is, it kinda stops at this point,

54
00:03:29.738 --> 00:03:34.583
where it's like there's this display.view,
so I don't need to look any further.

55
00:03:34.583 --> 00:03:40.024
But one way to approach this is we
could say let's remove display.view

56
00:03:40.024 --> 00:03:45.000
inside of the display directory,
and make this index.view.

57
00:03:45.000 --> 00:03:49.564
This is one way to approach it, so just to
verify that this works, let's go ahead,

58
00:03:49.564 --> 00:03:50.554
and update this.

59
00:03:50.554 --> 00:03:57.989
We go to home, display, there it is,
photos, todos, easy enough.

60
00:03:57.989 --> 00:04:03.000
But believe it or not there
actually is another way to do this.

61
00:04:03.000 --> 00:04:07.118
So one of the things that got a lot of
press recently I think within the React

62
00:04:07.118 --> 00:04:09.656
community is around
the idea of nested view.

63
00:04:09.656 --> 00:04:12.734
But nested views has actually existed
inside of view for a long time.

64
00:04:12.734 --> 00:04:16.169
And what it essentially means is that
remember one of the things that client

65
00:04:16.169 --> 00:04:17.695
side routing tries to do for you,

66
00:04:17.695 --> 00:04:21.041
is that it tries not to make you reload
the entire resources of the pages.

67
00:04:21.041 --> 00:04:23.142
One of the benefits of towels.

68
00:04:23.142 --> 00:04:25.096
And so if you think of it one way is that,

69
00:04:25.096 --> 00:04:27.956
well, if you know that your
app.view is what you share.

70
00:04:27.956 --> 00:04:32.442
And then it stands to reason that when you
have children routes of a parent route you

71
00:04:32.442 --> 00:04:35.628
might actually want to just
render on part of the parent and

72
00:04:35.628 --> 00:04:37.272
not refresh the entire page.

73
00:04:37.272 --> 00:04:40.416
Because right now the way we're doing it
we are we are getting basically a whole

74
00:04:40.416 --> 00:04:41.619
new page every time, right?

75
00:04:41.619 --> 00:04:44.987
Index.html, todo.html, photos.html.

76
00:04:44.987 --> 00:04:47.194
And there's some optimization there but

77
00:04:47.194 --> 00:04:50.542
roughly let's say conceptually
that's what's happening.

78
00:04:50.542 --> 00:04:55.133
What if for instance we actually
wanted it to be a sub part?

79
00:04:55.133 --> 00:04:58.755
So let me go ahead and
rename this back to display.view.

80
00:05:00.189 --> 00:05:02.700
And we put it back under pages.

81
00:05:02.700 --> 00:05:07.285
And this time, once again,
let's say we have a section down here and

82
00:05:07.285 --> 00:05:11.650
we're gonna call this thing
display app for now, placeholder.

83
00:05:11.650 --> 00:05:14.015
And then ideally what we wanna say right,

84
00:05:14.015 --> 00:05:17.270
is there's some sort of slot
that accepts the children.

85
00:05:17.270 --> 00:05:21.002
That's what we wanna ideally be able to
do because everything else needs to say

86
00:05:21.002 --> 00:05:23.215
the same,
we just need the section to change.

87
00:05:23.215 --> 00:05:26.291
Well, we talked about this earlier.

88
00:05:26.291 --> 00:05:31.856
All we need is the next page component,
just like we had before at the app level,

89
00:05:31.856 --> 00:05:37.257
when it's used, basically it knows that
like from this point on any children

90
00:05:37.257 --> 00:05:42.189
of this page of display will be
dropped inside of this slot basically.

91
00:05:42.189 --> 00:05:45.701
So to show how that works, we go back.

92
00:05:45.701 --> 00:05:46.812
Whoops, that's too far.

93
00:05:49.547 --> 00:05:51.676
There we go,
I forgot boma is linked up there.

94
00:05:51.676 --> 00:05:59.015
We didn't actually replace [LAUGH]
that yet that's why that's doing that.

95
00:05:59.015 --> 00:06:03.750
All right, home, display,
hold up, display index view.

96
00:06:03.750 --> 00:06:05.638
I think I crashed the server, hang on.

97
00:06:09.540 --> 00:06:12.254
So when you're playing around with routing
like this, where I'm intentionally messing

98
00:06:12.254 --> 00:06:14.084
with it, occasionally you'll
need to reboot your server.

99
00:06:14.084 --> 00:06:18.009
Just know that that's a thing
that sometimes happens.

100
00:06:18.009 --> 00:06:19.950
Okay, there we go.

101
00:06:19.950 --> 00:06:23.024
Now, we have to display at placeholder,
photos, todos.

102
00:06:23.024 --> 00:06:24.054
Did you see that?

103
00:06:24.054 --> 00:06:30.050
The display and display app placeholder
stay put and then everything else changes.

104
00:06:30.050 --> 00:06:33.456
And so now that we have this working,
now let's go ahead and

105
00:06:33.456 --> 00:06:36.467
actually just finish this
as far as placing that in.

106
00:06:36.467 --> 00:06:40.775
Just to make things easy for
now let's just inside it todos,

107
00:06:40.775 --> 00:06:44.920
we're just gonna render out
our TodoViewer, just here.

108
00:06:44.920 --> 00:06:50.190
And then for our photos we will
just render out our photoGallery.

109
00:06:50.190 --> 00:06:55.128
And again, no imports needed
now you'll see yes there's

110
00:06:55.128 --> 00:06:58.032
all my data I go to my photos.

111
00:06:58.032 --> 00:07:01.222
Weird what just happened here?

112
00:07:01.222 --> 00:07:04.027
Todos, now todo is broken too,
what's going on?

113
00:07:04.027 --> 00:07:07.841
So if I refresh that seems to be fine,
if we go to display, refresh, that's fine.

114
00:07:07.841 --> 00:07:11.614
Photos, that's good,
when I switched from photos to todos,

115
00:07:11.614 --> 00:07:14.973
once again something's breaking,
what's going on?

116
00:07:14.973 --> 00:07:15.726
Anyone have a guess?

117
00:07:15.726 --> 00:07:17.260
Once you've done this long enough,

118
00:07:17.260 --> 00:07:20.580
you start to realize whenever you notice
something's not loading correctly.

119
00:07:20.580 --> 00:07:23.550
Most likely,
there's some weird caching thing going on.

120
00:07:23.550 --> 00:07:26.814
And it's because a lot of these
frameworks try to optimize for

121
00:07:26.814 --> 00:07:28.645
like what they think you wanna do.

122
00:07:28.645 --> 00:07:30.985
And so
the thing about things like slots and

123
00:07:30.985 --> 00:07:35.145
next page is that it's trying to cache
the result, when in fact you want it to

124
00:07:35.145 --> 00:07:38.330
basically every time it switches
you do want it to change.

125
00:07:38.330 --> 00:07:39.539
So in other words,

126
00:07:39.539 --> 00:07:43.932
what you really need to do is need
to assign a basically a dynamic key.

127
00:07:43.932 --> 00:07:48.065
And the key on any sort of virtual DOM
thing is what's critical to basically

128
00:07:48.065 --> 00:07:51.487
letting the V DOM know, hey,
this thing needs to be changed.

129
00:07:51.487 --> 00:07:54.412
Basically, you're forcing a refresh
on this specific section,

130
00:07:54.412 --> 00:07:55.986
not anywhere else just on this key.

131
00:07:55.986 --> 00:07:59.124
And so you'll see this with
basically looped things V for,

132
00:07:59.124 --> 00:08:02.975
basically any of that anytime you see
some weird glitch with that stuff.

133
00:08:02.975 --> 00:08:05.721
Most likely,
there's something wrong with your key.

134
00:08:05.721 --> 00:08:08.737
It does something to keep
in mind as going forward.

135
00:08:08.737 --> 00:08:11.890
We don't have the tools quite yet
to fix this, but we'll get there.

136
00:08:11.890 --> 00:08:14.869
So as you can see,
the two approaches result in, basically,

137
00:08:14.869 --> 00:08:17.004
there are actually two different results.

138
00:08:17.004 --> 00:08:20.820
They're not the same solution for
the, sorry,

139
00:08:20.820 --> 00:08:27.350
these two approaches solve different
problems, and that's what's important.

140
00:08:27.350 --> 00:08:29.452
This is not even
a preference thing anymore.

141
00:08:29.452 --> 00:08:32.371
I like index.view or
I don't like index.view.

142
00:08:32.371 --> 00:08:35.172
There's clearly something
regarding nested child routes and

143
00:08:35.172 --> 00:08:36.767
all these things that are going on.

144
00:08:36.767 --> 00:08:38.800
So just know that that's the difference.

145
00:08:38.800 --> 00:08:42.691
For the most part, we're let's go
ahead and just move it back so

146
00:08:42.691 --> 00:08:46.747
that we're back to the sort of
regular file structure directory.

147
00:08:46.747 --> 00:08:51.539
Because again, nested views is something
that you you have something very

148
00:08:51.539 --> 00:08:55.050
specific in mind that you're
trying to optimize for.

149
00:08:55.050 --> 00:08:58.520
And I find that most of the time for
most people's routes third loop, really,

150
00:08:58.520 --> 00:09:01.901
they just want the page, they're not
trying to do anything fancy just yet.

151
00:09:01.901 --> 00:09:04.872
And so,
now that there's a difference with that.

