WEBVTT

1
00:00:00.000 --> 00:00:01.736
So app.vue right here,

2
00:00:01.736 --> 00:00:06.540
we can see that we have just the generic
components here side by side.

3
00:00:06.540 --> 00:00:10.278
And so for the todo viewer, I wanna start
giving you at least a little bit of

4
00:00:10.278 --> 00:00:13.490
insight on how you might abstract
some of that functionality.

5
00:00:13.490 --> 00:00:18.161
So for example, for todo viewer, we have
here that we have this title right here,

6
00:00:18.161 --> 00:00:22.715
hello friend and masters, but maybe
something we want to be able to customize.

7
00:00:22.715 --> 00:00:24.615
So we need to define props.

8
00:00:24.615 --> 00:00:29.513
So all we need to do to do that using
the composition API is a helper

9
00:00:29.513 --> 00:00:33.987
function called define props
as you would kind of expect.

10
00:00:33.987 --> 00:00:38.170
So to find props is basically
a function that takes an object.

11
00:00:38.170 --> 00:00:42.809
And this is how you normally define props
in view, basically on a standard, so

12
00:00:42.809 --> 00:00:44.441
basically call it a title.

13
00:00:44.441 --> 00:00:45.663
And what kind of title will it be?

14
00:00:45.663 --> 00:00:48.810
It'll be a type string and
I'm just gonna make it a you know,

15
00:00:48.810 --> 00:00:51.920
I'll do I'll make it a default
of hello front and masters.

16
00:00:51.920 --> 00:00:55.643
So in other words, if the person
forgets to pass one in, it's fine,

17
00:00:55.643 --> 00:00:59.322
the title will get rendered,
otherwise you don't need to do that.

18
00:00:59.322 --> 00:01:01.498
And so for
those who haven't used view a lot,

19
00:01:01.498 --> 00:01:05.060
another attribute that's possible
is something called required true.

20
00:01:05.060 --> 00:01:08.421
But typically my recommendation is, if you
have a default the required true is kind

21
00:01:08.421 --> 00:01:11.362
of redundant because it basically
means you're guaranteed to have it.

22
00:01:11.362 --> 00:01:14.032
On the other hand if you have
no default and it is required,

23
00:01:14.032 --> 00:01:16.550
then basically you'll need
to throw the required on.

24
00:01:16.550 --> 00:01:19.077
So, basically you should never
see these two really side

25
00:01:19.077 --> 00:01:21.036
by side it should really be one or
the other.

26
00:01:21.036 --> 00:01:23.678
And so, in this case,
we have a default so we're good.

27
00:01:23.678 --> 00:01:28.414
So, to show it to actually render
that thing, we can go ahead and

28
00:01:28.414 --> 00:01:33.264
just replace hello friend and
masters with the title attribute.

29
00:01:33.264 --> 00:01:36.727
And to prove that this works, we're gonna
come in here inside of our todo viewer.

30
00:01:36.727 --> 00:01:42.800
Okay, and we're gonna do the title and
this time we'll say, this is fun, save.

31
00:01:42.800 --> 00:01:47.606
Now, when we come over here and
refresh, something's broken.

32
00:01:47.606 --> 00:01:49.757
Undefined text color variable.

33
00:01:49.757 --> 00:01:53.539
That's a separate thing that broke and
that has been broken into the viewer.

34
00:01:53.539 --> 00:01:55.140
Okay, that's totally fine.

35
00:01:55.140 --> 00:01:57.930
And that actually does make sense
because he left a bunch of styles here.

36
00:01:57.930 --> 00:01:58.780
That we were playing with.

37
00:01:58.780 --> 00:02:01.343
And so this was just kind
of experimental code, so

38
00:02:01.343 --> 00:02:04.400
we're not gonna worry about that,
and we'll save it now.

39
00:02:06.230 --> 00:02:08.710
Okay, and so now you can see,
this is fun, it's now appearing.

40
00:02:08.710 --> 00:02:12.983
So that's nice, but then what if,
say for example, you wanted to,

41
00:02:12.983 --> 00:02:15.947
let's see,
let's look at todo viewer again.

42
00:02:17.608 --> 00:02:20.590
And inside of here we have this
whole photo section, right?

43
00:02:20.590 --> 00:02:24.240
And what if we wanna actually let
someone configure the image, right?

44
00:02:24.240 --> 00:02:28.415
Not only that, we wanna give them
the ability to credit someone.

45
00:02:28.415 --> 00:02:30.820
So let's say for example,
we have an image, right?

46
00:02:30.820 --> 00:02:34.290
I know it got deleted, but earlier I
think we had it public todo, right?

47
00:02:34.290 --> 00:02:36.767
So it was like this.

48
00:02:36.767 --> 00:02:40.580
So it was like todo.jpeg, and so
we know that normally there's an all but,

49
00:02:40.580 --> 00:02:42.377
this is gonna get deleted shortly.

50
00:02:42.377 --> 00:02:45.995
When you look at this, the problem is that
if you try to configure this as props,

51
00:02:45.995 --> 00:02:47.237
what do you have to define?

52
00:02:47.237 --> 00:02:48.621
You have to define the image.

53
00:02:48.621 --> 00:02:52.119
You have to define the image alt, then
you have to define the text photo by, and

54
00:02:52.119 --> 00:02:56.415
then, wait, if it's like a text, there's a
lot of configuration that's gonna happen.

55
00:02:56.415 --> 00:03:00.394
And so one of the problems that frequently
occurs with a lot of frameworks is when it

56
00:03:00.394 --> 00:03:02.714
comes to props,
people tend to over rely on it.

57
00:03:02.714 --> 00:03:05.500
And you get like prop drilling and
a lot of things that tend to happen.

58
00:03:05.500 --> 00:03:08.746
And it feels like you're reading a
dictionary by the time you're done using.

59
00:03:08.746 --> 00:03:12.168
Do you need to like read documentation or
to use a single component, and

60
00:03:12.168 --> 00:03:13.604
that's just a bit overkill.

61
00:03:13.604 --> 00:03:18.199
So, in view, something that we
have is something called slots.

62
00:03:18.199 --> 00:03:19.907
And this is a very important concept.

63
00:03:19.907 --> 00:03:23.773
So if you think about it like this,
if we were to like wrap this in a div,

64
00:03:23.773 --> 00:03:27.919
this is essentially let's go and
just do that for like to wireframe it out.

65
00:03:27.919 --> 00:03:33.886
This is a div with an id that's basically,
let's call it hero.

66
00:03:33.886 --> 00:03:34.460
This is like the hero section, right?

67
00:03:34.460 --> 00:03:38.156
We have a photo with the credit
of the image, and so what you

68
00:03:38.156 --> 00:03:43.071
ideally want is to make it easy for anyone
to drop stuff inside of the hero div.

69
00:03:43.071 --> 00:03:44.174
That's basically what you want to do.

70
00:03:44.174 --> 00:03:47.814
Well, using that exact same thinking cuz
this is actually just normal HTML if you

71
00:03:47.814 --> 00:03:51.023
think about it, we use it all the time
in the A-tag you drop stuff in it,

72
00:03:51.023 --> 00:03:52.598
in the div-tag you drop stuff in.

73
00:03:52.598 --> 00:03:59.023
Well, view has a built in, basically
a built in component called slot.

74
00:03:59.023 --> 00:04:03.225
And so I just self close it,
because there's no point like this.

75
00:04:03.225 --> 00:04:07.474
Okay, and so the interesting thing about
the slot, is that it basically says, hey,

76
00:04:07.474 --> 00:04:11.323
in this component, there's a section,
and I want you to drop stuff in here.

77
00:04:11.323 --> 00:04:14.311
So to prove that this works,
I'm gonna come in here, and

78
00:04:14.311 --> 00:04:17.564
inside of my component now
normally they're self enclosed.

79
00:04:17.564 --> 00:04:19.537
This is how we were used to seeing them.

80
00:04:19.537 --> 00:04:23.170
But if we treat them actually as normal
HTML element, or like web components,

81
00:04:23.170 --> 00:04:25.770
there's been a lot of
discussion about this recently.

82
00:04:25.770 --> 00:04:26.980
Now we can just drop stuff in here.

83
00:04:26.980 --> 00:04:29.010
So, I could really just be like,

84
00:04:29.010 --> 00:04:32.501
okay I'm just gonna drop an h2
to does this really work?

85
00:04:32.501 --> 00:04:37.838
And then I'm also gonna drop that
image right now just because I can,

86
00:04:37.838 --> 00:04:43.745
and I'll just say this is a source to
slash todo.jpg, that's it and save.

87
00:04:43.745 --> 00:04:48.190
If you come over here, you'll notice
it actually just gets slotted in.

88
00:04:48.190 --> 00:04:51.879
And it's funny because when I first saw
this, it seemed like such a novel concept.

89
00:04:51.879 --> 00:04:54.855
But again,
we do this all the time in HTML.

90
00:04:54.855 --> 00:04:59.635
And so view opens up a way for
you to automatically drop that in.

91
00:04:59.635 --> 00:05:03.350
And so what's cool with the slots then,
however, is you're probably thinking like,

92
00:05:03.350 --> 00:05:04.314
okay, that's cool.

93
00:05:04.314 --> 00:05:07.339
But then like,
what if I have other slots I wanna put in.

94
00:05:07.339 --> 00:05:09.119
Let's say, we don't know what
metrics we wanna display.

95
00:05:09.119 --> 00:05:10.580
Maybe we wanna change this part.

96
00:05:10.580 --> 00:05:13.250
So you might be like, okay, well,
let me just comment this out for now.

97
00:05:13.250 --> 00:05:16.716
And you'll be like, okay,
oops, I jumped too far.

98
00:05:16.716 --> 00:05:18.657
Yeah, I'm just gonna put another slot.

99
00:05:18.657 --> 00:05:21.430
Well, something should
probably be occurring to you,

100
00:05:21.430 --> 00:05:24.262
as you see this is you now have two slots,
and naturally,

101
00:05:24.262 --> 00:05:26.809
your compiler is gonna be like,
which one do I use?

102
00:05:26.809 --> 00:05:29.327
As well, don't worry,
we have a solution for that.

103
00:05:29.327 --> 00:05:32.440
And the solution for
that is that slots get names.

104
00:05:32.440 --> 00:05:37.104
So I could be like, well,
the name of this slot will be metrics.

105
00:05:37.104 --> 00:05:40.616
And by default,
the default slot is name is default, but

106
00:05:40.616 --> 00:05:44.726
I like to be more explicit just
because it's a little bit cleaner.

107
00:05:44.726 --> 00:05:48.329
And so we'll just call this section hero.

108
00:05:48.329 --> 00:05:49.471
And so you're probably thinking then,

109
00:05:49.471 --> 00:05:50.787
okay, well then how does
this actually work?

110
00:05:50.787 --> 00:05:54.696
Well, the way this would work
is you would actually wrap

111
00:05:54.696 --> 00:05:58.370
the HTML that you wanna put
in there with a template.

112
00:05:58.370 --> 00:06:01.650
And so this gets a little like inception
the bit because you're like wait

113
00:06:01.650 --> 00:06:03.442
isn't the template the outside part.

114
00:06:03.442 --> 00:06:06.201
But it's like really a template,
it's just a way to

115
00:06:06.201 --> 00:06:09.978
tell the compiler there's some HTML
that I want you to group together.

116
00:06:09.978 --> 00:06:14.830
And so this template then gets to
be passed what is called a V-slot.

117
00:06:14.830 --> 00:06:19.721
So basically, think of a v-directive,
V-slot whatever, but this is saying that,

118
00:06:19.721 --> 00:06:22.604
hey, we know that we're
gonna be using a v-slot.

119
00:06:22.604 --> 00:06:25.234
And then you pass it an argument,
which is the name of the slot.

120
00:06:25.234 --> 00:06:28.016
So in this one, I'm gonna add hero.

121
00:06:28.016 --> 00:06:30.552
And then I'm gonna add another template.

122
00:06:30.552 --> 00:06:33.617
And this V-slot is gonna go to metrics.

123
00:06:33.617 --> 00:06:38.102
And this time what I'm
gonna do is I'm gonna say.

124
00:06:38.102 --> 00:06:40.137
This word save.

125
00:06:42.245 --> 00:06:46.968
So now you'll see, well, this work showed
up below the button just as you'd expect.

126
00:06:46.968 --> 00:06:51.232
And then does this really work with
the image shows up at the top.

127
00:06:51.232 --> 00:06:53.682
But what might not be intuitive
at first glance, though,

128
00:06:53.682 --> 00:06:55.540
is that it doesn't need
to be in this order.

129
00:06:55.540 --> 00:07:00.378
You can flip this, so if I flip
the name of it, you'll notice it just,

130
00:07:00.378 --> 00:07:03.087
it puts it exactly where you want it to.

131
00:07:03.087 --> 00:07:04.242
Now, don't get me wrong,

132
00:07:04.242 --> 00:07:07.870
I would personally prefer to organize it
the way it's probably intended to display.

133
00:07:07.870 --> 00:07:12.470
But just for the sake of understanding
that it's possible, there's that.

134
00:07:12.470 --> 00:07:15.350
Now just so you know,
though the VSA does have a shorthand.

135
00:07:15.350 --> 00:07:20.509
So if you didn't know already, so
V on, if you're like V on click.

136
00:07:20.509 --> 00:07:22.385
This can be short handed
to an add symbol and

137
00:07:22.385 --> 00:07:25.738
we've already used the other one which
I didn't get to explain at the time.

138
00:07:25.738 --> 00:07:29.192
But V bind which I can attribute
will make it a JavaScript, and

139
00:07:29.192 --> 00:07:31.990
so this would normally be
short handed like this.

140
00:07:31.990 --> 00:07:35.823
Well, so the V slot which can to be clear
it should only be used with this template

141
00:07:35.823 --> 00:07:39.157
element is not meant to be used with
generic divs and stuff like that.

142
00:07:39.157 --> 00:07:42.679
You can shorthand it to
just the hash symbol.

143
00:07:42.679 --> 00:07:48.266
And so the way to think of it is like an
ID is basically what you're doing there.

144
00:07:48.266 --> 00:07:51.971
It's really a preference thing I do see a
lot of people using it because developers

145
00:07:51.971 --> 00:07:52.786
love shorthand.

146
00:07:52.786 --> 00:07:56.282
But I found that for people who aren't
using slots as much it's a little bit

147
00:07:56.282 --> 00:07:59.410
confusing to see that because
they're like it's just like a CSS.

148
00:07:59.410 --> 00:08:03.260
Class ID is that like, so then googling,
it becomes a little bit tricky.

149
00:08:03.260 --> 00:08:06.160
And so for me, I don't mind just
being a little bit more explicit.

150
00:08:06.160 --> 00:08:09.005
But again, this is a preference and
your team will figure it out.

151
00:08:09.005 --> 00:08:10.611
If everyone on the team knows what it is,

152
00:08:10.611 --> 00:08:13.274
no one's confused and by all means,
feel free to use a shorthand.

153
00:08:13.274 --> 00:08:15.388
But for what I'm teaching in particular,

154
00:08:15.388 --> 00:08:18.747
I always like to just write out
the longhand for this in particular.

155
00:08:18.747 --> 00:08:21.757
So that no one's ever confused because
then people can just literally Google V

156
00:08:21.757 --> 00:08:23.777
slot and then that will take
them to the right place.

157
00:08:23.777 --> 00:08:29.206
As we know that the hash symbol has a lot
of different meanings in programming so

158
00:08:29.206 --> 00:08:32.837
hence I like to try to avoid
that whenever possible.

159
00:08:32.837 --> 00:08:38.315
Okay so, the last thing I'm going
to show you is that the interesting

160
00:08:38.315 --> 00:08:43.235
thing about slots, though,
is that you can pass them props.

161
00:08:43.235 --> 00:08:47.701
And so if you haven't heard the concept
of, it's typically called scope slots,

162
00:08:47.701 --> 00:08:49.720
but I prefer to call them slot props.

163
00:08:49.720 --> 00:08:53.267
Because what it's essentially doing
is normally when you think of data,

164
00:08:53.267 --> 00:08:56.140
you think of the fact that
the parent passes it to the child.

165
00:08:56.140 --> 00:09:00.726
But you'll notice anything with a slot
though is that you're allowing the parent

166
00:09:00.726 --> 00:09:04.257
to divine how something's being
displayed inside the child.

167
00:09:04.257 --> 00:09:08.356
What if you could actually expose some of
the data back into the slot that it's so

168
00:09:08.356 --> 00:09:10.509
we could rearrange it the way it wants to.

169
00:09:10.509 --> 00:09:14.932
So an example of this is let's say I'm

170
00:09:14.932 --> 00:09:19.640
gonna go ahead and say completed items.

171
00:09:19.640 --> 00:09:24.124
I'll just say completed and
this will be bound to complete

172
00:09:24.124 --> 00:09:28.251
a.items I'm sorry completed
items just like that.

173
00:09:28.251 --> 00:09:33.603
What this does is when you go back into
your app inside of this slot for metrics.

174
00:09:33.603 --> 00:09:37.157
What you can actually do is you
get this slot props object.

175
00:09:37.157 --> 00:09:39.169
Now, it's not called slot
props it's an object, but

176
00:09:39.169 --> 00:09:42.073
this is what I normally term it because
that's basically what's happening.

177
00:09:42.073 --> 00:09:46.820
And so just to show you what's in here
we're going to do a pre on slot props.

178
00:09:46.820 --> 00:09:53.300
Okay, and what you'll notice is, in this
particular case, completed is empty.

179
00:09:53.300 --> 00:09:55.006
But obviously if I go ahead and

180
00:09:55.006 --> 00:09:58.360
fetch that there's like a whole
list of completed items.

181
00:09:58.360 --> 00:10:02.695
And so the thing about this
atensil twist people up though,

182
00:10:02.695 --> 00:10:05.912
is that exposing your
data from your child.

183
00:10:05.912 --> 00:10:11.061
This stuff inside a slot is not
actually exposed to the parent scope.

184
00:10:11.061 --> 00:10:15.849
It's just within the context of the slot,
and that's the bends people's

185
00:10:15.849 --> 00:10:20.270
minds all the time, which is why I
tried to approach it as slot props.

186
00:10:20.270 --> 00:10:25.424
It's a prop for the slot, not a prop for
the parent, it's a prop for the slot.

187
00:10:25.424 --> 00:10:28.068
So this way this is how if you look
at some of the component libraries,

188
00:10:28.068 --> 00:10:30.775
this is how they let you actually
configure how things are displayed.

189
00:10:30.775 --> 00:10:34.742
So like a multi-select, though, let's say
that okay, well, you have these given

190
00:10:34.742 --> 00:10:38.489
options that in this select, you can
rearrange it however your branding wants,

191
00:10:38.489 --> 00:10:40.883
put the icon on the left,
put the icon on the right.

192
00:10:40.883 --> 00:10:44.580
Whatever, but I've maintained
the data in this child component.

193
00:10:44.580 --> 00:10:48.135
And now I've exposed it back to you so
that you can now make it look pretty.

194
00:10:48.135 --> 00:10:52.440
But do not try to then go well I'm going
to take this and put it in a method and

195
00:10:52.440 --> 00:10:53.145
my parent.

196
00:10:53.145 --> 00:10:55.950
I'm gonna do some funny stuff
like that's shared state.

197
00:10:55.950 --> 00:10:58.650
We need a cleaner way of doing
that that's not what this is for.

198
00:10:58.650 --> 00:11:03.866
So now, for example,
we could say in metrics is maybe in this

199
00:11:03.866 --> 00:11:08.981
particular case we wanna stay strong and
then we can say like

200
00:11:08.981 --> 00:11:15.040
slot props.completed.length and
then just this items completed.

201
00:11:18.218 --> 00:11:20.590
And now you can see zero items completed,
but

202
00:11:20.590 --> 00:11:23.100
if I fetch the data,
90 items are completed.

203
00:11:23.100 --> 00:11:26.186
And that's a really powerful thing that
you can do now that you can expose this

204
00:11:26.186 --> 00:11:28.818
sort of like, again,
it's almost like a little bit of a tunnel.

205
00:11:28.818 --> 00:11:31.982
But again, think of it more for display
purposes and not for logic purposes.

206
00:11:31.982 --> 00:11:34.659
The moment you wanna like to
share state and do that stuff,

207
00:11:34.659 --> 00:11:36.584
we'll come to that later on, I promise.

208
00:11:36.584 --> 00:11:39.394
But for this thing of it as display.

209
00:11:39.394 --> 00:11:43.785
And so the other thing though, in case you
don't like this slot props things because,

210
00:11:43.785 --> 00:11:46.446
again, developers we'd
love shortening things.

211
00:11:46.446 --> 00:11:49.378
I do think this is an instance where
slot props is a little bit overkill.

212
00:11:49.378 --> 00:11:53.065
And so you can actually D structure
it to just say completed like this.

213
00:11:53.065 --> 00:11:56.773
And then this will work exactly the same,
and it's a little bit cleaner, but

214
00:11:56.773 --> 00:12:00.770
it does require that understanding that
what you're destructuring is an object or

215
00:12:00.770 --> 00:12:03.073
props that are being
passed at the child level.

216
00:12:03.073 --> 00:12:05.616
And so I think a lot of people when
they see this for the first time,

217
00:12:05.616 --> 00:12:07.478
they're just like,
what the heck is going on?

218
00:12:07.478 --> 00:12:09.770
So that's why I always
break it down this way.

219
00:12:09.770 --> 00:12:12.381
And once your team
understands what's happening,

220
00:12:12.381 --> 00:12:14.636
it's actually quite a pretty clean syntax,

221
00:12:14.636 --> 00:12:18.152
because then you can map this one
directly to the completed down here.

