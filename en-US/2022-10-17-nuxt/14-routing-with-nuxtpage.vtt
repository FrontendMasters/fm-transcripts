WEBVTT

1
00:00:00.260 --> 00:00:03.027
Okay, so we've done a lot with
components we set up app, but

2
00:00:03.027 --> 00:00:06.890
you're probably thinking at this point,
we need some routes.

3
00:00:06.890 --> 00:00:11.170
It's time [LAUGH] for some routes, there's
a lot to manage with just app.view.

4
00:00:11.170 --> 00:00:12.141
And you're right,

5
00:00:12.141 --> 00:00:15.918
because I would say routing is one of
the things that Nuxt does extremely well.

6
00:00:15.918 --> 00:00:17.530
And so how do we turn on routing?

7
00:00:17.530 --> 00:00:20.145
Because like I said, if right now
you built this and shipped it,

8
00:00:20.145 --> 00:00:21.920
view router will not be included, why?

9
00:00:21.920 --> 00:00:23.513
Because it's not needed, right?

10
00:00:23.513 --> 00:00:26.267
You don't want it to bundle that, but

11
00:00:26.267 --> 00:00:30.324
what we can do is we can create
this folder called pages.

12
00:00:30.324 --> 00:00:32.970
Sorry, pages in that not in the route,
don't make my mistake.

13
00:00:34.560 --> 00:00:36.860
Pages is the game changer for everything.

14
00:00:36.860 --> 00:00:41.262
And what we're gonna do here is we're
gonna create a page called index.vue.

15
00:00:41.262 --> 00:00:46.028
And so if you've been in the industry long
enough, you'll know that whenever you

16
00:00:46.028 --> 00:00:50.396
visit a website, the route directory
of whatever it is, is index.html.

17
00:00:50.396 --> 00:00:53.735
That's actually the page that's
being generated, it's just it's so

18
00:00:53.735 --> 00:00:56.922
common now that it's usually chopped off,
and it's just assumed.

19
00:00:56.922 --> 00:00:59.888
Like the routing knows what to do,
and so it's fewer characters for

20
00:00:59.888 --> 00:01:01.100
you to deal with.

21
00:01:01.100 --> 00:01:05.642
But, basically, this index.vue is
the equivalent of our index.HTML page,

22
00:01:05.642 --> 00:01:07.610
that's the equivalent.

23
00:01:07.610 --> 00:01:13.537
So I'm gonna go ahead and
just write, Home Page, like this.

24
00:01:13.537 --> 00:01:16.266
Okay, so you're thinking like,
okay, great, I have pages come in.

25
00:01:16.266 --> 00:01:23.960
And so once Nuxt detects that page is
here, something's gonna have that reboot.

26
00:01:23.960 --> 00:01:26.880
It's gonna know, okay,
time to bring in view router.

27
00:01:26.880 --> 00:01:28.190
This is great.

28
00:01:28.190 --> 00:01:35.280
But something's funny, hmm,
that's not my homepage.

29
00:01:35.280 --> 00:01:37.324
In fact, that's still app.view.

30
00:01:37.324 --> 00:01:41.430
And so what's important to understand
here is that app.view still,

31
00:01:41.430 --> 00:01:45.883
as you would expect with these frameworks,
this is still like the the king,

32
00:01:45.883 --> 00:01:48.820
the queen,
rules over all the components first.

33
00:01:48.820 --> 00:01:50.142
This is where it first enters.

34
00:01:50.142 --> 00:01:51.139
This is the entry point.

35
00:01:51.139 --> 00:01:54.556
And so because it's the entry point,
I'm gonna go ahead and

36
00:01:54.556 --> 00:01:58.452
let's see, do we need to do anything
with this right now after view?

37
00:01:58.452 --> 00:01:59.840
No, we're not going to.

38
00:01:59.840 --> 00:02:02.215
So what we're gonna do here is,
I'm just gonna copy this cuz I think we're

39
00:02:02.215 --> 00:02:03.930
eventually just gonna move
this to the homepage.

40
00:02:03.930 --> 00:02:07.012
But there is a global component
that we get with Nuxt,

41
00:02:07.012 --> 00:02:11.820
and suddenly I should leave that,
let's leave those global imports.

42
00:02:11.820 --> 00:02:13.000
So there we go.

43
00:02:14.200 --> 00:02:17.385
That's called NuxtPage.

44
00:02:17.385 --> 00:02:21.975
And so, once you put this NuxtPage inside
of your app.view, you'll notice, hey,

45
00:02:21.975 --> 00:02:23.080
Home Page shows up.

46
00:02:24.150 --> 00:02:28.029
And so the way to think of NuxtPage is,
it's basically like a slot.

47
00:02:28.029 --> 00:02:32.356
It's basically router view, for
those who have used vue router or

48
00:02:32.356 --> 00:02:35.490
any other routing library to be honest.

49
00:02:35.490 --> 00:02:38.774
It's a wrapper on that with some
ergonomics, but it basically says, okay,

50
00:02:38.774 --> 00:02:41.640
whatever the page is,
just drop the content in here.

51
00:02:41.640 --> 00:02:46.160
So there's nothing stopping us from being,
Generic Heading, right?

52
00:02:46.160 --> 00:02:50.223
And so what this means is that going
forward that generic heading will be

53
00:02:50.223 --> 00:02:53.010
sitting on top of all of
our pages going forward.

54
00:02:54.010 --> 00:02:58.726
So we're gonna actually now create another
page now because the beauty of Nuxt

55
00:02:58.726 --> 00:03:03.175
routing is that it brings file
based routing to us in an easy way.

56
00:03:03.175 --> 00:03:06.418
So if you've done any sort of manual
routing configuration in the past, you'll

57
00:03:06.418 --> 00:03:09.535
know that every time you created a page,
you have to go inside of your router.

58
00:03:09.535 --> 00:03:12.840
You to import the component, and then you
have to find the route and the path, and

59
00:03:12.840 --> 00:03:15.170
then import the component and
pass the component.

60
00:03:15.170 --> 00:03:17.590
And you did that every single time.

61
00:03:17.590 --> 00:03:22.350
But we know how we want our routes to
look, why can we just infer those things?

62
00:03:22.350 --> 00:03:24.923
So within pages,
if we wanna create a display page,

63
00:03:24.923 --> 00:03:28.620
cuz that's what we had earlier,
essentially, we were displaying data.

64
00:03:28.620 --> 00:03:31.588
We could just say well display.vue.

65
00:03:31.588 --> 00:03:34.792
And so now I can basically
paste this stuff in here.

66
00:03:34.792 --> 00:03:40.635
Let me just eliminate that stuff and
then, yep, that looking pretty good.

67
00:03:40.635 --> 00:03:41.991
Except these imports.

68
00:03:41.991 --> 00:03:44.376
So this is another nice
thing about imports, right?

69
00:03:44.376 --> 00:03:47.201
Every time you move stuff,
you'd have to remap the path.

70
00:03:47.201 --> 00:03:49.685
And so I believe there is an alias,
I believe this will work,

71
00:03:49.685 --> 00:03:51.730
this will take you all
the way back to the route, so

72
00:03:51.730 --> 00:03:54.100
that no matter where you move
you're still in that page.

73
00:03:54.100 --> 00:03:57.964
So to prove that that works real quick,
we're gonna go here, and then let me now,

74
00:03:57.964 --> 00:04:00.300
let me get to the location here.

75
00:04:00.300 --> 00:04:04.780
We can say /display and then there we go.

76
00:04:04.780 --> 00:04:06.500
We actually see our components,
this is great.

77
00:04:06.500 --> 00:04:11.290
But once again for the sake of simplicity,
we don't need this, so it's going bye bye.

78
00:04:12.680 --> 00:04:16.929
Okay, so as we can see, what's nice about
the page directory is that it correlates

79
00:04:16.929 --> 00:04:19.130
to whatever the slashes starting at page.

80
00:04:20.400 --> 00:04:23.236
And so what we're gonna wanna do now is,
let's go ahead and

81
00:04:23.236 --> 00:04:27.120
just grab a navbar component from Bulma
and provide some navigation for our app.

82
00:04:28.280 --> 00:04:32.334
So the way that's gonna work is,
we're gonna go into bulma.io.

83
00:04:32.334 --> 00:04:37.590
Let's go in the Docs, let's grab
a Component, and let's grab that Navbar.

84
00:04:37.590 --> 00:04:42.103
Okay, it makes it really easy
to just copy this whole thing.

85
00:04:42.103 --> 00:04:45.860
And all we're gonna do, is we're gonna
create a component here called TheNavbar.

86
00:04:47.320 --> 00:04:51.364
Now, this is another thing that I
actually do with my component naming,

87
00:04:51.364 --> 00:04:55.209
is that I will actually prefix things
where there should only be one of

88
00:04:55.209 --> 00:04:56.490
the thing on the page.

89
00:04:58.710 --> 00:05:01.251
And the power of this is that,
cuz think about if,

90
00:05:01.251 --> 00:05:04.761
you're building an Ecommerce site and
you have a shopping cart, but

91
00:05:04.761 --> 00:05:08.840
then you have five shopping carts across
your page, that seems a little weird.

92
00:05:08.840 --> 00:05:10.997
There's usually one shopping cart and
that's for a reason,

93
00:05:10.997 --> 00:05:12.585
cuz that's what customers are looking for.

94
00:05:12.585 --> 00:05:14.518
So when you have
the prefix on a component,

95
00:05:14.518 --> 00:05:18.100
it just kind of naturally signals
to people that something's weird.

96
00:05:18.100 --> 00:05:20.435
Why is there the shopping cart five times?

97
00:05:20.435 --> 00:05:24.105
So there's just a little naming convention
that I used that I thought I would share.

98
00:05:24.105 --> 00:05:27.462
Okay, so
obviously there is a lot going on here.

99
00:05:27.462 --> 00:05:31.381
So if we just save this real quick,
and then what we're gonna do for now,

100
00:05:31.381 --> 00:05:34.743
let's go ahead and
just import it directly on our app.view.

101
00:05:34.743 --> 00:05:38.579
So we're gonna say, TheNavbar,
which you can see until actually,

102
00:05:38.579 --> 00:05:39.716
this is a cool part.

103
00:05:39.716 --> 00:05:43.302
Remember when I told you about typing and
automatically finding things.

104
00:05:43.302 --> 00:05:46.413
VS Code is automatically helping me
find the component that I just created,

105
00:05:46.413 --> 00:05:49.350
even though I've never
technically imported it before.

106
00:05:49.350 --> 00:05:53.024
And that's great, and that's one of the
power of having libraries leveraged type

107
00:05:53.024 --> 00:05:57.270
script because we get some of the benefits
of it without doing any additional work.

108
00:05:57.270 --> 00:06:01.639
So now when I hit this and
auto complete that, self close,

109
00:06:01.639 --> 00:06:06.610
we can see inside of our local
hosts as we refresh, there we go.

110
00:06:06.610 --> 00:06:08.600
There's our Bulma header, pretty easy.

111
00:06:08.600 --> 00:06:13.736
So let's see, just to fix things up
a little bit just to make things

112
00:06:13.736 --> 00:06:18.414
seem a little bit more in play,
we're just gonna go ahead and

113
00:06:18.414 --> 00:06:22.393
lets just call this,
we're gonna call it MyRecs.

114
00:06:22.393 --> 00:06:23.420
Let's see if that worked out.

115
00:06:23.420 --> 00:06:25.414
There you go, MyRecs is there.

116
00:06:25.414 --> 00:06:27.050
And I'll explain why
it's called MyRecs later.

117
00:06:27.050 --> 00:06:29.467
We're not gonna worry about, we're just
gonna simplify the HTML a bit right now.

118
00:06:29.467 --> 00:06:32.394
I'm deleting some of the mobile stuff
just to make things a little bit easier.

119
00:06:32.394 --> 00:06:36.389
And then rather than have the navigation
stuff be on the left hand side,

120
00:06:36.389 --> 00:06:39.066
I'm just gonna swap it
over to be on Navbar end.

121
00:06:39.066 --> 00:06:41.162
So that's how this is
currently being organized.

122
00:06:41.162 --> 00:06:43.010
Whoop, I deleted one too many.

123
00:06:45.033 --> 00:06:49.266
And so just by swapping that out, we'll
see here that now everything's moved over.

124
00:06:49.266 --> 00:06:52.550
This feels a little bit more
like a standard navigation bar.

125
00:06:52.550 --> 00:06:56.520
So what I'm gonna wanna do now is we need
to actually hook up our navigation to do

126
00:06:56.520 --> 00:06:58.000
something.

127
00:06:58.000 --> 00:07:01.177
So first thing first,
we're gonna go ahead and

128
00:07:01.177 --> 00:07:05.163
we'll delete that one cuz,
I'll show you why in a second.

129
00:07:05.163 --> 00:07:09.321
So we have this home part, and so
your first question is probably,

130
00:07:09.321 --> 00:07:12.370
well, how do we link to our routes, right?

131
00:07:12.370 --> 00:07:16.318
So there's nothing stopping you
from just going href like this,

132
00:07:16.318 --> 00:07:18.770
this is standard, this works.

133
00:07:18.770 --> 00:07:21.831
But when you do that though,
you're relying on it to basically

134
00:07:21.831 --> 00:07:25.671
externally refresh the page, and
you'll get a brand new payload basically.

135
00:07:25.671 --> 00:07:28.265
And so one of the advantages
of using the frameworks,

136
00:07:28.265 --> 00:07:30.808
while some of it is,
there are trade offs as always.

137
00:07:30.808 --> 00:07:34.591
You instead use the built
in NuxtLink component,

138
00:07:34.591 --> 00:07:38.380
so think of this as router
link is the equivalent.

139
00:07:38.380 --> 00:07:41.839
And so NuxtLink is like a wrapper on that,
and then you can see,

140
00:07:41.839 --> 00:07:43.747
it's the two and then there we go.

141
00:07:43.747 --> 00:07:46.819
And so now we'll go ahead and
actually I'll do one more so

142
00:07:46.819 --> 00:07:48.936
that we can actually see this working.

143
00:07:48.936 --> 00:07:51.660
NuxtLink to /display, and

144
00:07:51.660 --> 00:07:56.774
then we will just call this Display,
just like that.

145
00:07:56.774 --> 00:07:59.014
No wait, I need to close it.

146
00:07:59.014 --> 00:08:04.103
All right, now that we have that you'll
see now that when I click this, wait,

147
00:08:04.103 --> 00:08:07.476
click Home, there you go,
homepage, back display.

148
00:08:07.476 --> 00:08:09.308
Everything works exactly as we expect.

149
00:08:12.251 --> 00:08:16.224
The main thing to keep in mind here
is you might have noticed is that,

150
00:08:16.224 --> 00:08:17.058
I do as of now,

151
00:08:17.058 --> 00:08:21.886
I tried to keep all my components Pascal
case when I'm using them in the template.

152
00:08:21.886 --> 00:08:25.474
Because it's another one of
those signifiers that says,

153
00:08:25.474 --> 00:08:27.824
this is different than any HTML spec.

154
00:08:27.824 --> 00:08:31.135
Or if you have web components, they might
be actually load, there'll be a case and

155
00:08:31.135 --> 00:08:31.871
that kind of stuff.

156
00:08:31.871 --> 00:08:35.303
But this tells me very clearly this
is coming from an external library,

157
00:08:35.303 --> 00:08:37.084
in this case it's coming from Nuxt.

