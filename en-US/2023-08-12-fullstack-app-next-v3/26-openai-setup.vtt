WEBVTT

1
00:00:00.340 --> 00:00:03.140
Next thing we need to do
is make an open AI account.

2
00:00:03.140 --> 00:00:04.550
So we get API access.

3
00:00:04.550 --> 00:00:06.890
You will need a credit card for that.

4
00:00:06.890 --> 00:00:09.618
Don't worry the credit card is
just there to enable the API,

5
00:00:09.618 --> 00:00:11.180
because they charge you as you go.

6
00:00:11.180 --> 00:00:14.210
It's charging on demand, like you're
not paying for something up front.

7
00:00:14.210 --> 00:00:18.348
In this course, if you just wrote
a while loop, and left it, and

8
00:00:18.348 --> 00:00:20.750
walked away you might pay a dollar.

9
00:00:20.750 --> 00:00:21.950
It's not gonna be expensive.

10
00:00:21.950 --> 00:00:25.500
So, I mean, you'll get rate limited
before you even hit that limit.

11
00:00:25.500 --> 00:00:28.420
But anyway, make sure you sign up,
have an account.

12
00:00:28.420 --> 00:00:30.550
I already have one, so
I'm just gonna log in.

13
00:00:32.770 --> 00:00:39.340
And if you see this screen where it says,
Chat GPT or Dolly or API, click API.

14
00:00:39.340 --> 00:00:40.120
That's the one that we want.

15
00:00:40.120 --> 00:00:41.460
Chat GPT is its own app.

16
00:00:41.460 --> 00:00:42.660
It has its own subscription.

17
00:00:43.740 --> 00:00:47.131
Not the same as adding, you actually have
to pay for this, like 20 bucks a month or

18
00:00:47.131 --> 00:00:49.900
something like that if you
want the plus version.

19
00:00:49.900 --> 00:00:51.190
And then we just want the API.

20
00:00:51.190 --> 00:00:56.020
&gt;&gt; Max for admin has a little first
look at using the chat GPT API.

21
00:00:58.320 --> 00:00:58.860
&gt;&gt; Nice.

22
00:00:58.860 --> 00:01:02.082
So I'm in here what I can do is I
can just click Personal right here,

23
00:01:02.082 --> 00:01:03.479
I can click Manage Account.

24
00:01:04.600 --> 00:01:08.409
And then you can just click on billing and

25
00:01:08.409 --> 00:01:13.013
basically you just need
to add a payment method.

26
00:01:13.013 --> 00:01:16.801
So I have my payment method here you need
to make sure you have a payment method

27
00:01:16.801 --> 00:01:19.893
on file 5 dollars will like take
you through the whole month.

28
00:01:19.893 --> 00:01:23.629
I mean I can show you my usage right here.

29
00:01:23.629 --> 00:01:25.592
Where's my usage?

30
00:01:25.592 --> 00:01:30.521
So, like, so far, I've spent 52 cents
this month in June, and I'm telling you,

31
00:01:30.521 --> 00:01:34.560
I've been going I've been going
pretty nuts on AI stuff, so, like,

32
00:01:34.560 --> 00:01:37.320
you won't have a problem
when it comes to cost.

33
00:01:37.320 --> 00:01:38.600
That $5 should be more than enough.

34
00:01:38.600 --> 00:01:40.510
So, yeah, add your card there.

35
00:01:40.510 --> 00:01:45.006
And then the last thing you wanna do
is just click on view API keys and

36
00:01:45.006 --> 00:01:46.890
then just make a key.

37
00:01:46.890 --> 00:01:48.240
Let's make an API key copy.

38
00:01:48.240 --> 00:01:51.880
You can make as many as you want,
but just have an API key ready.

39
00:01:51.880 --> 00:01:52.863
And we'll be we'll be using that.

40
00:01:52.863 --> 00:01:56.863
First thing we wanna do is, if you
haven't make that API key, copy it and

41
00:01:56.863 --> 00:01:59.814
we need to add it to our
environment variable file, so

42
00:01:59.814 --> 00:02:02.060
we could just drop it in the E and
V local.

43
00:02:03.270 --> 00:02:06.130
If you do,
drop it in a dot end file instead.

44
00:02:06.130 --> 00:02:10.890
Just make sure that is in your git
ignore coz by default it's not.

45
00:02:10.890 --> 00:02:12.310
I had to add it.

46
00:02:12.310 --> 00:02:15.650
And then even after you add it in your
git ignore, it might not be ignored.

47
00:02:15.650 --> 00:02:18.806
You might have to delete it,
make it commit, add it back, and

48
00:02:18.806 --> 00:02:20.670
then it'll be ignored.

49
00:02:20.670 --> 00:02:22.100
Cuz it's already been checked in.

50
00:02:22.100 --> 00:02:26.090
If you've committed with it not
being in a git ignore get stuff.

51
00:02:26.090 --> 00:02:28.560
So I'm just gonna add it in my ENV local.

52
00:02:28.560 --> 00:02:33.949
And you have to give it this name,

53
00:02:33.949 --> 00:02:41.469
OPENAI_API_KEY= and then the actual key.

54
00:02:41.469 --> 00:02:43.382
So once you have that,

55
00:02:43.382 --> 00:02:48.710
Just open AI underscore API
underscore key, add your key.

56
00:02:48.710 --> 00:02:53.130
Once you have that, you can go into the
AITS, and let's just create an example.

57
00:02:53.130 --> 00:02:54.190
Let's just get started with this.

58
00:02:54.190 --> 00:03:02.820
The first thing we're gonna do is
let's make a function called analyze.

59
00:03:05.050 --> 00:03:05.580
Analyze.

60
00:03:05.580 --> 00:03:08.590
How do you spell analyze?

61
00:03:08.590 --> 00:03:09.220
Yeah, okay.

62
00:03:09.220 --> 00:03:10.660
I'm like, there we go.

63
00:03:10.660 --> 00:03:12.920
So we'll make a function called analyze.

64
00:03:12.920 --> 00:03:14.508
We'll export that since
we're gonna use it.

65
00:03:16.427 --> 00:03:22.680
And to get started, so we don't need
Lain chain to interact with Open AI.

66
00:03:22.680 --> 00:03:24.660
Open AI has their own SDK.

67
00:03:24.660 --> 00:03:26.370
I mean, you can even make
a fetch call if you want.

68
00:03:26.370 --> 00:03:28.070
It's just an API.

69
00:03:28.070 --> 00:03:30.660
But LangChain makes it easier for
us to do things.

70
00:03:30.660 --> 00:03:33.550
Some cases it makes it harder,
but you'll see once we

71
00:03:33.550 --> 00:03:38.190
start building more sophisticated cases,
like trying to do QA and things like that.

72
00:03:38.190 --> 00:03:43.402
The first thing we're gonna do is we

73
00:03:43.402 --> 00:03:48.789
want to import from LangChain / LLMs

74
00:03:48.789 --> 00:03:54.363
/ Open AI and we wanna import open AI.

75
00:03:54.363 --> 00:03:55.416
So named import.

76
00:03:59.181 --> 00:04:04.088
Link chain works in node it works in
the browser it works on the edge it works

77
00:04:04.088 --> 00:04:06.314
in any JavaScript environment.

78
00:04:06.314 --> 00:04:10.020
We're gonna be using it in node,
we won't be using this in the browser.

79
00:04:11.150 --> 00:04:13.583
So everything we do in
AI will be server side,

80
00:04:13.583 --> 00:04:17.939
whether that's like happening in a server
side data call on a server component or

81
00:04:17.939 --> 00:04:20.260
in an API call on one
of our route handlers.

82
00:04:22.700 --> 00:04:23.200
Okay, cool.

83
00:04:23.200 --> 00:04:27.229
So analyze, basically let's just have
this take in like some prompts or

84
00:04:27.229 --> 00:04:29.740
something like that for now.

85
00:04:29.740 --> 00:04:31.660
And what we can do, we'll make this async.

86
00:04:31.660 --> 00:04:35.266
Now let's just see if we
can run an inference or

87
00:04:35.266 --> 00:04:39.480
I think in open AI terms
they call it a completion.

88
00:04:39.480 --> 00:04:42.980
So a completion is like, give it a prompt,
get back an answer, that's a completion.

89
00:04:42.980 --> 00:04:45.080
So first thing to do is need
to make a model instance.

90
00:04:45.080 --> 00:04:52.551
So we can say model and
that's just gonna be a new open AI.

91
00:04:52.551 --> 00:04:57.450
Takes a config option you don't have
to put anything here but I'm gonna put

92
00:04:57.450 --> 00:05:02.922
something here I'm gonna put a temperature
of zero I'll talk about that a minute.

93
00:05:02.922 --> 00:05:07.677
And I forgot the default mock so
Open AI has many models and

94
00:05:07.677 --> 00:05:13.440
has like GPT-3, GPT-3.5 turbo,
which is what is in chat GPT.

95
00:05:15.070 --> 00:05:18.190
If you have access,
you have GPT-4 as well.

96
00:05:18.190 --> 00:05:19.000
I have access to GPT-4.

97
00:05:19.000 --> 00:05:22.580
We will not be using that,
that will cost you a lot of money.

98
00:05:22.580 --> 00:05:24.490
And it's really slow.

99
00:05:24.490 --> 00:05:27.050
So we're not gonna do that,
but it's so much better.

100
00:05:27.050 --> 00:05:31.520
It is like if we had GTP on this app, you
thought the responses we got were cool.

101
00:05:31.520 --> 00:05:33.370
GPT 4 is even crazier.

102
00:05:33.370 --> 00:05:39.407
So we're gonna say model name, and
we're just gonna say GPT-3.5-turbo,

103
00:05:39.407 --> 00:05:43.505
which is probably the default
I just don't remember.

104
00:05:43.505 --> 00:05:47.570
Lane Chain is a very active project.

105
00:05:47.570 --> 00:05:49.940
They make changes multiple times a day.

106
00:05:49.940 --> 00:05:52.898
So it's quite honestly hard to keep
up with all the little things that

107
00:05:52.898 --> 00:05:54.350
they change.

108
00:05:54.350 --> 00:05:57.441
So I just don't use any of the defaults
tend to be explicit about everything

109
00:05:57.441 --> 00:05:57.990
I'm doing.

110
00:06:01.166 --> 00:06:03.032
Okay, so we have our model.

111
00:06:03.032 --> 00:06:08.866
And then to make a completion,
all we have to do is just say,

112
00:06:08.866 --> 00:06:13.554
so I'll just say result
= await model.call.

113
00:06:13.554 --> 00:06:15.269
And I can just pass in a prompt.

114
00:06:15.269 --> 00:06:16.468
Like this.

115
00:06:19.282 --> 00:06:22.647
And then I'm just going to log
the result so we can see it.

116
00:06:26.381 --> 00:06:28.860
All right, so we have that.

117
00:06:28.860 --> 00:06:30.850
Let's try to get this to run.

118
00:06:30.850 --> 00:06:34.306
I say the quickest way to
get this to run right now,

119
00:06:34.306 --> 00:06:40.250
we'll probably just add this in a server
side server component data call somewhere.

120
00:06:42.070 --> 00:06:46.309
We're definitely gonna do it in the API
handler when we build it out fully, but

121
00:06:46.309 --> 00:06:50.612
just to test this out, it's quicker just
to add it to probably this journal page

122
00:06:50.612 --> 00:06:55.070
right here that's doing some server
side logic here, we just add it here.

123
00:06:55.070 --> 00:06:58.293
This is happening on the server
whenever you refresh the page, so

124
00:06:58.293 --> 00:07:00.420
we just do it here and
see the result of it.

125
00:07:00.420 --> 00:07:03.190
So let's do that.

126
00:07:04.610 --> 00:07:06.620
I'll bring that in, analyze.

127
00:07:08.210 --> 00:07:09.560
And you can type in
whatever prompt you want.

128
00:07:09.560 --> 00:07:10.510
I'll even await it.

129
00:07:10.510 --> 00:07:13.204
So it's gonna take a little
longer to load the page,

130
00:07:13.204 --> 00:07:16.462
obviously, now that I'm awaiting this,
but it's all good.

131
00:07:16.462 --> 00:07:20.850
If you haven't used GPT or Chat GPT, you
might be asking like what do I put here?

132
00:07:20.850 --> 00:07:21.380
What do I say?

133
00:07:21.380 --> 00:07:22.460
You can say anything?

134
00:07:22.460 --> 00:07:24.850
It really doesn't matter what you put.

135
00:07:24.850 --> 00:07:30.516
I can say create me a few components that

136
00:07:30.516 --> 00:07:36.699
renders a counting number like it doesn't

137
00:07:36.699 --> 00:07:43.240
matter [LAUGH] you put
whatever you want here.

138
00:07:43.240 --> 00:07:46.393
You can ask it to give you
a nutrition plan if you want.

139
00:07:46.393 --> 00:07:50.574
It doesn't matter so we'll do that go back
to the journal page as you can see, it's

140
00:07:50.574 --> 00:07:54.816
taking a little longer, just like I told
you it was gonna take, because it's trying

141
00:07:54.816 --> 00:07:59.043
to make that call to Open AI, which is not
gonna be as quick as hitting our database.

142
00:07:59.043 --> 00:08:06.220
Then if you just go look at the output
of that, you can see for me, it did.

143
00:08:06.220 --> 00:08:09.372
It was like, cool, here's an example of
a view component that renders a counting

144
00:08:09.372 --> 00:08:11.210
number, and
then it just wrote the code for me.

145
00:08:12.280 --> 00:08:14.502
So it's working and
we got this output back.

146
00:08:16.401 --> 00:08:17.858
So I don't know what you put in, but

147
00:08:17.858 --> 00:08:20.297
clearly you might see something
different than what I see.

