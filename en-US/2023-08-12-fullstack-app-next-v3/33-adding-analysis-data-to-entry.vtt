WEBVTT

1
00:00:00.050 --> 00:00:04.697
We left off on bringing in our analysis
that we created using Lange chain and

2
00:00:04.697 --> 00:00:05.300
OpenAI.

3
00:00:06.570 --> 00:00:10.150
We created it alongside
the entry when it gets created.

4
00:00:10.150 --> 00:00:14.870
We just need to make sure we update it
alongside the entry when it gets updated

5
00:00:14.870 --> 00:00:16.010
as well.

6
00:00:16.010 --> 00:00:17.580
So let's do that.

7
00:00:17.580 --> 00:00:21.684
It should be an easy fix because we
already have the utility function that we

8
00:00:21.684 --> 00:00:25.280
need to do so, we just got to
go put it in the right place.

9
00:00:25.280 --> 00:00:31.690
If we head over to app slash,
why am I doing this?

10
00:00:31.690 --> 00:00:32.990
Let me just open the file explorer.

11
00:00:32.990 --> 00:00:37.365
If we just go to where we're updating,
which in this case will be api slash

12
00:00:37.365 --> 00:00:41.710
journal slash id route ts,
that's where we're doing an update.

13
00:00:41.710 --> 00:00:46.257
We just need to update the analysis as

14
00:00:46.257 --> 00:00:51.430
well can I know why that word trips me up?

15
00:00:51.430 --> 00:00:55.170
I'm like what is the analyses,
analysis, analysis?

16
00:00:55.170 --> 00:01:00.490
Okay.
All right, let's do it so

17
00:01:00.490 --> 00:01:04.407
we can say wait, and

18
00:01:04.407 --> 00:01:09.477
then we can just say Prisma

19
00:01:09.477 --> 00:01:14.547
dot analysis dot update,

20
00:01:14.547 --> 00:01:19.847
like this and where the ID,

21
00:01:19.847 --> 00:01:27.230
it's gonna be the updated entry dot.

22
00:01:29.250 --> 00:01:30.410
Can you go away?

23
00:01:30.410 --> 00:01:32.740
Updated entry dot now.

24
00:01:32.740 --> 00:01:33.300
Wait, hold on.

25
00:01:33.300 --> 00:01:34.420
Let's look at the schema.

26
00:01:34.420 --> 00:01:37.190
It's the best way to do this.

27
00:01:37.190 --> 00:01:40.500
An entry has an analysis type.

28
00:01:40.500 --> 00:01:43.624
Okay, so we'll just have to
look it up by entry id then.

29
00:01:43.624 --> 00:01:47.730
So where entryId

30
00:01:47.730 --> 00:01:52.724
equals entry.id.

31
00:01:52.724 --> 00:01:55.240
Why does it keep saying entry card for me?

32
00:01:55.240 --> 00:01:55.825
I don't know.

33
00:01:55.825 --> 00:01:58.470
Entry.id.

34
00:01:58.470 --> 00:02:03.510
And then you need to add
what you wanna update.

35
00:02:03.510 --> 00:02:04.292
So you add data.

36
00:02:07.353 --> 00:02:10.830
Yeah, updated entry in my case,
updated Entry.id.

37
00:02:10.830 --> 00:02:14.100
And then the data is
what you wanna update.

38
00:02:14.100 --> 00:02:19.390
So in this case,
we just wanna update all the analysis.

39
00:02:19.390 --> 00:02:20.780
So we can just do that in line right here.

40
00:02:20.780 --> 00:02:26.485
We're going to say it's a really cool
trick but this parenthesis you say,

41
00:02:26.485 --> 00:02:32.380
wait, and then analyze, import that,
call it, pass in updated entry content.

42
00:02:32.380 --> 00:02:35.540
And there you go.

43
00:02:35.540 --> 00:02:38.110
[LAUGH].

44
00:02:38.110 --> 00:02:40.480
Yeah, you can just do
that with a single eight.

45
00:02:40.480 --> 00:02:40.980
It's pretty cool.

46
00:02:44.995 --> 00:02:48.630
&gt;&gt; You're just spreading
the object that's returned.

47
00:02:48.630 --> 00:02:49.858
&gt;&gt; Yeah,
I'm spreading the object that's returned.

48
00:02:49.858 --> 00:02:50.358
Yeah.

49
00:02:56.334 --> 00:02:58.229
I mean,
you couldn't handle errors this way, but

50
00:02:58.229 --> 00:03:01.050
I'm just assuming everything
works every time.

51
00:03:01.050 --> 00:03:02.840
Yeah, cuz it always does.

52
00:03:04.290 --> 00:03:09.383
&gt;&gt; We have entries that don't have
analysis will update at a new one.

53
00:03:09.383 --> 00:03:15.170
&gt;&gt; If we have entries that don't have
an analysis, so we can account for that.

54
00:03:15.170 --> 00:03:18.219
Let's account for that because I guess we
do have some of those right now because we

55
00:03:18.219 --> 00:03:20.200
add analysis after we've made the entries.

56
00:03:20.200 --> 00:03:21.180
So let's account for that.

57
00:03:21.180 --> 00:03:25.065
So what you can do is you
can change this to up cert.

58
00:03:25.065 --> 00:03:28.684
So up cert is like update
this if you find it, but

59
00:03:28.684 --> 00:03:32.170
if you don't find it create a new one.

60
00:03:32.170 --> 00:03:37.780
So data is all the things
you want to update.

61
00:03:37.780 --> 00:03:43.890
But then now you have to say update here
like this, and this is where you want to.

62
00:03:45.380 --> 00:03:48.740
So now, data is where,
I am sorry data is where now gets created.

63
00:03:48.740 --> 00:03:53.024
Update is where the update is, and data is
like everything you need to create one of

64
00:03:53.024 --> 00:03:55.870
these, which is literally
the same thing as this.

65
00:03:55.870 --> 00:03:58.900
So we have to reuse this, so I can't do
it here because I'm not calling it twice.

66
00:03:58.900 --> 00:04:00.169
So I'm just gonna bring that up here now.

67
00:04:01.420 --> 00:04:03.017
And we will just say analysis.

68
00:04:06.792 --> 00:04:11.112
And the update will still just be the,

69
00:04:11.112 --> 00:04:15.977
analysis, but the data will be the entry,

70
00:04:18.616 --> 00:04:21.041
Id.

71
00:04:21.041 --> 00:04:25.435
And it'll be updated Entry.id,
and then also the analysis.

72
00:04:31.697 --> 00:04:34.400
This thing, I think,
is just going to freak out with types.

73
00:04:34.400 --> 00:04:38.000
But it's because this has like a or
undefined.

74
00:04:38.000 --> 00:04:41.210
And it's like,
we don't like that this is or undefined.

75
00:04:41.210 --> 00:04:46.397
It just has to be that so
that this should work.

76
00:04:48.846 --> 00:04:51.760
So again absurd is like
updated if you find it.

77
00:04:51.760 --> 00:04:53.840
If you don't find it,
create a new one with this.

78
00:04:55.540 --> 00:04:56.655
If you do find it, update it with this.

79
00:05:03.746 --> 00:05:07.752
Well, it'll probably still break if you
try to go to one of the journals on that

80
00:05:07.752 --> 00:05:11.581
editor page without it, because we're
just assuming that it's there and

81
00:05:11.581 --> 00:05:14.360
our UI is not accounting for
it not to be there.

82
00:05:14.360 --> 00:05:19.400
So you'd have to, like, go on the front
end and do some conditionals on that.

83
00:05:19.400 --> 00:05:21.727
I'm just gonna delete the journals
that don't have it so

84
00:05:21.727 --> 00:05:23.482
I don't run into that problem, or [LAUGH].

85
00:05:23.482 --> 00:05:25.620
&gt;&gt; I'm looking at those
they can't be destructured

86
00:05:25.620 --> 00:05:26.785
&gt;&gt; Yeah, or just not, yeah,

87
00:05:26.785 --> 00:05:29.393
you can't destructure it
because it's not there, right?

88
00:05:29.393 --> 00:05:33.057
So you don't you don't even get the chance
to do the auto save to even get it to

89
00:05:33.057 --> 00:05:35.760
trigger this up cert so
you won't even see that happen.

90
00:05:36.980 --> 00:05:38.650
If you can do, you can handle that.

91
00:05:38.650 --> 00:05:41.720
I mean, that's a that's
a common JavaScript problem.

92
00:05:41.720 --> 00:05:45.053
You wouldn't have this problem
in production because if you

93
00:05:45.053 --> 00:05:48.648
ran a migration that needed something
you would make defaults for

94
00:05:48.648 --> 00:05:51.410
that migration and
you won't have this problem.

95
00:05:51.410 --> 00:05:54.550
So whenever you add a new
field to something,

96
00:05:54.550 --> 00:05:58.022
especially if it's like required or
something or

97
00:05:58.022 --> 00:06:03.180
you're writing code as if it's
required either supply a default.

98
00:06:03.180 --> 00:06:07.835
The reason planet scale didn't say we
needed to is because there's a question

99
00:06:07.835 --> 00:06:08.550
mark here.

100
00:06:10.080 --> 00:06:12.800
Like this is optional, so
you don't need to run a migration.

101
00:06:12.800 --> 00:06:17.140
But unfortunately for us,
we wrote code as if this was not optional.

102
00:06:17.140 --> 00:06:18.540
We just assumed that everything had it.

103
00:06:18.540 --> 00:06:22.243
So that's why databases are powerful like
if you just listen to the database and

104
00:06:22.243 --> 00:06:26.109
do what it says, write your code in such a
way where you follow these assumptions and

105
00:06:26.109 --> 00:06:29.555
don't follow any other assumptions
you're coding will mostly be good.

106
00:06:32.875 --> 00:06:33.635
Cool.

107
00:06:33.635 --> 00:06:36.525
I'm just not going to click
on any of those things.

108
00:06:36.525 --> 00:06:39.335
Or I might just go and plan it, or
I might just go in Prisma and delete them.

109
00:06:39.335 --> 00:06:40.165
Actually, I'll just do that.

110
00:06:40.165 --> 00:06:42.305
So I don't have that problem.

111
00:06:42.305 --> 00:06:44.365
Let me do that.

112
00:06:44.365 --> 00:06:46.725
We'll just do MPX, Prisma Studio.

113
00:06:48.750 --> 00:06:52.772
And I'll just delete all my journal
entries honestly, ultimately them all and

114
00:06:52.772 --> 00:06:54.273
actually, let's see,

115
00:06:54.273 --> 00:06:58.740
this is a great example you might run into
an error here if you try to delete these.

116
00:06:58.740 --> 00:06:59.270
Yeah, cool.

117
00:06:59.270 --> 00:06:59.820
Awesome.

118
00:06:59.820 --> 00:07:04.050
So yeah, so you get an error here.

119
00:07:04.050 --> 00:07:06.800
It's not by accident
your thing is not broken.

120
00:07:06.800 --> 00:07:07.948
It's basically saying, hey,

121
00:07:07.948 --> 00:07:10.509
you can't delete this because
there's something depending on this.

122
00:07:10.509 --> 00:07:12.375
There's an analysis
that's attached to this,

123
00:07:12.375 --> 00:07:14.480
what do you want me to
do with those things?

124
00:07:14.480 --> 00:07:17.720
So we have to tell Prisma what to do
with those things when we delete them.

125
00:07:17.720 --> 00:07:23.603
So what we can do is we can go to
analysis on this entry relation,

126
00:07:23.603 --> 00:07:29.280
and we can say on delete,
like so, and we can say, cascade.

127
00:07:29.280 --> 00:07:35.128
So this just means whenever this
journal entry that's linked

128
00:07:35.128 --> 00:07:42.102
to this analysis gets deleted cascade
that delete down to this analysis so

129
00:07:42.102 --> 00:07:47.057
it also gets deleted by
default it doesn't do that.

130
00:07:47.057 --> 00:07:56.500
So now you got to do your push again Cool,
and then I'm gonna do the studio.

131
00:07:56.500 --> 00:07:59.450
Got a lot of studio tabs over here.

132
00:08:00.918 --> 00:08:01.418
That's my cat.

133
00:08:04.167 --> 00:08:05.700
Refresh that.

134
00:08:05.700 --> 00:08:09.789
And now I'm gonna try to delete it,
and confirm the deletion.

135
00:08:11.680 --> 00:08:12.300
And boom.

136
00:08:12.300 --> 00:08:13.180
Now it's deleted this time.

137
00:08:17.450 --> 00:08:19.820
All right, so
I should have no more journals.

138
00:08:20.990 --> 00:08:24.481
I'm just going to stop my server and start
it again 'cause I changed the database and

139
00:08:24.481 --> 00:08:25.627
I don't want no problems.

140
00:08:29.677 --> 00:08:30.697
So this is gonna break,

141
00:08:30.697 --> 00:08:33.710
I can't even refresh this page the ID
the logger is this in a database.

142
00:08:33.710 --> 00:08:34.210
So I'm gonna go here.

143
00:08:39.148 --> 00:08:41.640
And I should just see that at least on
my page because I deleted everything.

144
00:08:41.640 --> 00:08:47.178
If you didn't do everything
you won't see empty page Okay,

145
00:08:47.178 --> 00:08:49.290
so let's try to see what happens.

146
00:08:49.290 --> 00:08:50.620
We did the update, so let's see.

147
00:08:50.620 --> 00:08:52.590
I'm gonna click New Entry.

148
00:08:52.590 --> 00:08:56.430
I think for some reason, every time I
click it, the first time it takes forever.

149
00:08:56.430 --> 00:08:57.040
Okay, there we go.

150
00:08:57.040 --> 00:08:59.630
We have our new entry.

151
00:08:59.630 --> 00:09:01.820
We can see our analysis
is still working on that.

152
00:09:01.820 --> 00:09:09.350
Now, I'm just gonna change this,
and today was really sad for me.

153
00:09:09.350 --> 00:09:14.637
My cat decided that he was not

154
00:09:14.637 --> 00:09:23.010
going to snuggle anymore
while we watch TV and

155
00:09:23.010 --> 00:09:28.760
instead hung out with the dog.

156
00:09:28.760 --> 00:09:30.750
So I was really sad about that.

157
00:09:30.750 --> 00:09:32.060
So we'll let that save.

158
00:09:33.190 --> 00:09:40.640
I could tell that it's talking to,
okay, did it?

159
00:09:40.640 --> 00:09:42.507
Okay, so I think it did pull it back.

160
00:09:42.507 --> 00:09:43.630
Yeah, it worked.

161
00:09:43.630 --> 00:09:45.100
We ran into another
problem that we gotta fix.

162
00:09:45.100 --> 00:09:46.210
This actually worked.

163
00:09:46.210 --> 00:09:50.048
So if I refresh this,
we'll see the analysis get updated, right?

164
00:09:52.391 --> 00:09:55.620
Or maybe not, let's see.

165
00:09:57.230 --> 00:09:58.230
Are you gonna get updated?

166
00:09:59.260 --> 00:10:00.390
Did it actually do it?

167
00:10:00.390 --> 00:10:00.890
Let's log it.

168
00:10:03.040 --> 00:10:04.170
There's another problem.

169
00:10:04.170 --> 00:10:08.909
Not a problem, but something I want to
talk about with client side state, which

170
00:10:08.909 --> 00:10:14.170
is why that wouldn't update but let's just
make sure it's actually updating here.

171
00:10:14.170 --> 00:10:16.350
So let's see.

172
00:10:16.350 --> 00:10:17.290
We got that.

173
00:10:17.290 --> 00:10:19.200
You can say update it.

174
00:10:19.200 --> 00:10:21.929
Let's just log it.

175
00:10:27.558 --> 00:10:28.542
Cool.
We'll log that.

176
00:10:28.542 --> 00:10:31.422
I will just, I'm not okay.

177
00:10:31.422 --> 00:10:38.572
So I could tell his talk and opening,
I that was taken a long time so

178
00:10:38.572 --> 00:10:43.459
I know something's happening there.

179
00:10:43.459 --> 00:10:44.941
Here we go.

180
00:10:44.941 --> 00:10:48.260
We got a database error.

181
00:10:48.260 --> 00:10:51.580
So this thing says,
I guess that data one was wrong.

182
00:10:51.580 --> 00:10:57.700
It says data and data files,
did you mean update?

183
00:10:57.700 --> 00:10:58.540
Argument create?

184
00:11:00.622 --> 00:11:03.757
I guess that's not data anymore.

185
00:11:03.757 --> 00:11:05.651
It's create up cert.

186
00:11:06.860 --> 00:11:07.980
Yeah, I guess this is just create now.

187
00:11:07.980 --> 00:11:09.390
Okay.

188
00:11:09.390 --> 00:11:10.070
Let's just create.

189
00:11:12.380 --> 00:11:13.880
Let's run that and see.

190
00:11:13.880 --> 00:11:15.694
I'll just get rid of that.

191
00:11:18.822 --> 00:11:19.950
We'll see what happens.

192
00:11:22.920 --> 00:11:23.850
Yeah, I guess that was it.

193
00:11:23.850 --> 00:11:25.969
So I guess data is now create
when you do an up cert.

194
00:11:27.890 --> 00:11:31.077
I can't tell with all my
TypeScript errors, but

195
00:11:31.077 --> 00:11:33.650
it still didn't update here, right?

196
00:11:33.650 --> 00:11:35.980
So now if I refresh, it does update.

197
00:11:35.980 --> 00:11:38.504
Here's a classic example of it being,
it chose a color black and

198
00:11:38.504 --> 00:11:40.880
now you can't see the text there,
but that's fine.

199
00:11:40.880 --> 00:11:45.502
So I guess it thought I was so
down bad that it chose the color of black,

200
00:11:45.502 --> 00:11:49.775
which is probably like really
dark emo color subject, My Cat.

201
00:11:49.775 --> 00:11:52.270
[LAUGH] That's so funny.

