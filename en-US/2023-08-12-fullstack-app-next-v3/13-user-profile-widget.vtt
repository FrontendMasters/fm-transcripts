WEBVTT

1
00:00:00.000 --> 00:00:01.475
Looks more like a dashboard.

2
00:00:01.475 --> 00:00:08.003
Now, one cool thing we can do is clerk
gives us the ability to add this widget,

3
00:00:08.003 --> 00:00:13.342
where a user can go manage their
user without us having to do it.

4
00:00:13.342 --> 00:00:15.612
So we'll add that in our header.

5
00:00:15.612 --> 00:00:16.325
So let's do that.

6
00:00:16.325 --> 00:00:21.275
So in our header,
I'm gonna add another div in here,

7
00:00:21.275 --> 00:00:26.341
and I'm gonna give it a class
name of h-full w-full.

8
00:00:26.341 --> 00:00:32.612
And I'm gonna give it a padding left and
right of, I don't know,

9
00:00:32.612 --> 00:00:37.528
6, which is not 6 pixels,
it's almost 2 rems.

10
00:00:37.528 --> 00:00:40.696
And I'm gonna make it a flex
with an items of center,

11
00:00:40.696 --> 00:00:42.790
which will center it vertically.

12
00:00:46.870 --> 00:00:52.545
And I'm gonna make it a justify-end,
so it pushes all the way to the end.

13
00:00:53.794 --> 00:00:55.516
And then from there,

14
00:00:55.516 --> 00:01:01.359
I'm just going to use the UserButton
component from @clerk/nextjs.

15
00:01:01.359 --> 00:01:07.989
I'm just gonna put it right in there,
For the free.

16
00:01:07.989 --> 00:01:12.221
If I go back, boom, I get this.

17
00:01:12.221 --> 00:01:16.709
Dang, you didn't even have to make it.

18
00:01:16.709 --> 00:01:20.125
It would've took you three weeks to
make that with the animations and for

19
00:01:20.125 --> 00:01:22.257
your senior engineer
to finally approve it.

20
00:01:24.638 --> 00:01:25.675
Get it for the free.

21
00:01:27.624 --> 00:01:30.233
Cool, so you can click on this and
manage your account and do stuff.

22
00:01:30.233 --> 00:01:33.076
So, awesome.

23
00:01:35.117 --> 00:01:37.045
It's looking good now,
it's looking really good.

24
00:01:37.045 --> 00:01:43.309
So now what we wanna do is start
working on the journal page,

25
00:01:43.309 --> 00:01:49.215
actually starting to populating
our journal entries.

26
00:01:49.215 --> 00:01:51.441
What does that look like?

27
00:01:51.441 --> 00:01:54.411
Everything we gonna need for
that, API calls and stuff, but

28
00:01:54.411 --> 00:01:57.508
also creating the journal entry and
having to deal with state.

29
00:01:57.508 --> 00:02:01.387
This is where we're gonna get really
creative with how we deal with

30
00:02:01.387 --> 00:02:04.021
client components and
server components and

31
00:02:04.021 --> 00:02:07.708
API routes and how they all work
together to create something.

32
00:02:07.708 --> 00:02:10.192
So, and I didn't just do
it because you can't do it,

33
00:02:10.192 --> 00:02:13.409
I literally only did it the way that
I'm like this is how I would do it.

34
00:02:13.409 --> 00:02:17.511
So everything that we will be doing
is truly how I think I would do it.

35
00:02:17.511 --> 00:02:20.717
Not because I'm like,
how do I integrate this feature in here,

36
00:02:20.717 --> 00:02:22.339
that's just not how I build apps.

37
00:02:22.339 --> 00:02:25.629
I might do that in a intro course, but

38
00:02:25.629 --> 00:02:29.777
not in a course while
building a full stack up.

39
00:02:29.777 --> 00:02:31.780
So I want you to see how I would do it.

