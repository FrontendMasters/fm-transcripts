WEBVTT

1
00:00:00.140 --> 00:00:05.085
Now, we need to make a model for

2
00:00:05.085 --> 00:00:10.520
our, we'll call it Analysis.

3
00:00:10.520 --> 00:00:12.830
This will be the AI analysis of a post.

4
00:00:12.830 --> 00:00:15.180
And we want that to be a separate model
versus just storing it on the entry.

5
00:00:16.650 --> 00:00:18.040
So let's say Analysis.

6
00:00:18.040 --> 00:00:24.580
It's gonna have those same three
things here at the top, just like so.

7
00:00:24.580 --> 00:00:28.600
And this one's gonna have
a relationship to a journal entry.

8
00:00:28.600 --> 00:00:30.952
So we'll just say journal, or

9
00:00:30.952 --> 00:00:35.980
actually I'll just call it
entryId as a type String.

10
00:00:35.980 --> 00:00:39.900
And then I'll call this the entry,
which is type JournalEntry.

11
00:00:39.900 --> 00:00:44.480
And it has a relationship of fields.

12
00:00:44.480 --> 00:00:48.998
That is gonna be entryId and
a reference of id.

13
00:00:56.416 --> 00:00:59.860
And then going back up
to our journal entry.

14
00:00:59.860 --> 00:01:01.510
I just need to make the other connection.

15
00:01:01.510 --> 00:01:05.890
So this is not like the other one where
it's one-to-many, this is one-to-one.

16
00:01:05.890 --> 00:01:09.773
An analysis has one journal entry and
a journal entry has one analysis, so

17
00:01:09.773 --> 00:01:11.060
it's a one-to-one.

18
00:01:11.060 --> 00:01:12.490
So that's gonna look something like this.

19
00:01:12.490 --> 00:01:14.000
So I can say analysis.

20
00:01:14.000 --> 00:01:15.230
You can call this whatever you want.

21
00:01:15.230 --> 00:01:20.980
I'll say analysis, and
it's type is going to be Analysis.

22
00:01:20.980 --> 00:01:22.270
I have to put a question mark here.

23
00:01:22.270 --> 00:01:24.310
I have to make this optional.

24
00:01:24.310 --> 00:01:27.111
And that's because it is
a one-to-one relationship.

25
00:01:27.111 --> 00:01:31.161
And you might have this chicken or
egg problem of like, well, if this isn't

26
00:01:31.161 --> 00:01:35.680
optional, then you can't create a journal
entry without the analysis being done.

27
00:01:35.680 --> 00:01:39.202
But the analysis can't get created
unless it has a journal entry id.

28
00:01:39.202 --> 00:01:41.180
So this has to be optional.

29
00:01:41.180 --> 00:01:45.260
Otherwise you won't be able to
create any one of these due

30
00:01:45.260 --> 00:01:47.340
to a required restriction.

31
00:01:47.340 --> 00:01:54.419
And then lastly, we just need to go down
here and we can say, index the entryId.

32
00:01:54.419 --> 00:02:00.294
And this thing is freaking out
because one-to-one must use unique,

33
00:02:00.294 --> 00:02:01.940
yeah, I'm sorry.

34
00:02:01.940 --> 00:02:03.660
This has to be unique
if it's a one-to-one.

35
00:02:03.660 --> 00:02:09.930
So instead of saying index,
we'll say unique like that.

36
00:02:09.930 --> 00:02:12.089
We'll probably have to change
all of these to unique.

37
00:02:12.089 --> 00:02:15.898
You can't query without a unique index.

38
00:02:15.898 --> 00:02:19.805
Which is great because that means
if you're querying without index,

39
00:02:19.805 --> 00:02:22.660
you're scanning the whole table and
that's bad.

40
00:02:22.660 --> 00:02:25.210
So it kinda forces you to do that,
which is great.

41
00:02:25.210 --> 00:02:27.370
No more query planning, which is.

42
00:02:27.370 --> 00:02:29.492
I don't know if you ever
had to do that before.

43
00:02:29.492 --> 00:02:30.000
It's not fun.

44
00:02:34.296 --> 00:02:36.610
Cool, and then just the fields for
the analysis.

45
00:02:36.610 --> 00:02:39.660
So analysis has a mood that's a String.

46
00:02:39.660 --> 00:02:42.220
It has a summary.

47
00:02:43.860 --> 00:02:48.373
That's a String of like, I'm just gonna
put db.txt here just in case it's long.

48
00:02:48.373 --> 00:02:50.019
Who knows what the AI is gonna make it?

49
00:02:50.019 --> 00:02:51.270
So unpredictable.

50
00:02:51.270 --> 00:02:54.340
And then it also has a color.

51
00:02:54.340 --> 00:03:00.270
That's a string, and then it has a Boolean
on whether or not it was negative.

52
00:03:00.270 --> 00:03:01.250
That's a Boolean.

53
00:03:02.630 --> 00:03:05.975
Now we should have an error-free schema.

54
00:03:05.975 --> 00:03:11.519
Now if you wanna clean this up cuz your
formatting is all junky, you can just go

55
00:03:11.519 --> 00:03:17.420
to the terminal and do npx prisma format,
and it'll clean it up for you like that.

56
00:03:19.280 --> 00:03:24.050
It'll actually go back and write these
other side relationships for you as well.

57
00:03:24.050 --> 00:03:27.711
So you could just write the relationship
on one side and then get that error and

58
00:03:27.711 --> 00:03:30.540
just do format and
it'll go right on the other side for you.

59
00:03:32.050 --> 00:03:34.513
It just always picks a stupid name,
so I never do it.

60
00:03:34.513 --> 00:03:36.557
I don't know why it gave it that name.

61
00:03:36.557 --> 00:03:38.215
And it always capitalizes it.

62
00:03:38.215 --> 00:03:40.050
I'm like, why would I want
this field to be capitalized?

63
00:03:40.050 --> 00:03:40.730
I don't know.

64
00:03:40.730 --> 00:03:41.790
Maybe I'm doing it wrong.

65
00:03:41.790 --> 00:03:44.632
&gt;&gt; Do you happen to know what it does
to comments that are in the file?

66
00:03:44.632 --> 00:03:45.660
&gt;&gt; The comments?

67
00:03:45.660 --> 00:03:47.830
&gt;&gt; Cuz I don't wanna to
lose the notes I took.

68
00:03:47.830 --> 00:03:49.630
&gt;&gt; No the comments,
it doesn't touch the comments.

69
00:03:49.630 --> 00:03:51.632
You're good, yeah, you're fine.

70
00:03:51.632 --> 00:03:53.827
Cool, any other questions on this?

71
00:03:53.827 --> 00:03:58.627
All right, and whenever you make a change
to your database just remember you

72
00:03:58.627 --> 00:04:01.790
gotta go back in your
terminal npx prisma db push.

73
00:04:05.128 --> 00:04:07.890
And, what is it saying?

74
00:04:09.300 --> 00:04:10.640
So this is really cool.

75
00:04:10.640 --> 00:04:13.120
This is why I like Prisma and PlanetScale.

76
00:04:13.120 --> 00:04:15.618
So it's basically saying, hey,

77
00:04:15.618 --> 00:04:21.659
you just added a few unique constraints to
a model that you already previously had.

78
00:04:21.659 --> 00:04:26.385
So if you've already created some data
with that model, you might lose some data

79
00:04:26.385 --> 00:04:30.067
or something's gonna be broke
cuz you didn't add a default for

80
00:04:30.067 --> 00:04:31.750
those unique constraints.

81
00:04:31.750 --> 00:04:34.121
So you might have some data loss here.

82
00:04:34.121 --> 00:04:36.945
Are you sure you wanna do this,
ignore these warnings?

83
00:04:36.945 --> 00:04:41.684
So this is really great cuz I can't tell
you how many times I've messed this up,

84
00:04:41.684 --> 00:04:44.170
writing migration files in Grunt.

85
00:04:44.170 --> 00:04:45.427
I know you remember that.

86
00:04:45.427 --> 00:04:51.333
[LAUGH] Or or something, and this is like,
well, it worked on my machine.

87
00:04:51.333 --> 00:04:54.691
And it's like, cuz I didn't have
all that data on my machine, so

88
00:04:54.691 --> 00:04:56.474
of course it worked on my machine.

89
00:04:56.474 --> 00:04:59.999
So yeah, this just tells you that, yeah,
I don't care, I don't have any users.

90
00:04:59.999 --> 00:05:03.137
So yeah, I do wanna ignore that warning,
leave me alone.

91
00:05:03.137 --> 00:05:04.090
And yeah, it just does it.

92
00:05:04.090 --> 00:05:06.630
So there we go,
it syncs with the database.

93
00:05:06.630 --> 00:05:09.630
We have our new Prisma client,
it's in sync.

94
00:05:10.770 --> 00:05:16.190
And just to verify,
if we go back here, give it a second.

95
00:05:16.190 --> 00:05:18.332
And we should, there it is.

96
00:05:18.332 --> 00:05:22.349
So you can see, we have our analysis,
our journal entry, and

97
00:05:22.349 --> 00:05:23.981
our user all ready to go.

98
00:05:23.981 --> 00:05:27.046
And this is the sequel you
did not have to write.

