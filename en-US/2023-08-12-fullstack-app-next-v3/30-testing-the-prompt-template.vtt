WEBVTT

1
00:00:00.200 --> 00:00:04.217
Let's run this and
see what we broke [LAUGH].

2
00:00:04.217 --> 00:00:06.810
Now it's going to be like,
now that I did all of that,

3
00:00:06.810 --> 00:00:10.282
it's going to be I'm not gonna give
you consistent thinking anymore.

4
00:00:10.282 --> 00:00:10.892
Okay, here we go.

5
00:00:10.892 --> 00:00:14.871
So actually,
I got to ask it a new question now, right?

6
00:00:14.871 --> 00:00:21.496
So let's go back to our page, and
now I don't have to do this, right?

7
00:00:21.496 --> 00:00:28.605
I'll have to do is just
give it an entry now,

8
00:00:28.605 --> 00:00:33.216
today was a okay day I guess,

9
00:00:33.216 --> 00:00:39.957
I found a new coffee shop, that was cool.

10
00:00:39.957 --> 00:00:42.339
But then I got a flat tire.

11
00:00:46.345 --> 00:00:51.976
And I'll put a happy face
just to really confuse it.

12
00:00:51.976 --> 00:00:56.975
[LAUGH] there really throw it off

13
00:01:00.719 --> 00:01:03.491
Cool, yeah, let's see what happens.

14
00:01:03.491 --> 00:01:08.445
And let me just, I don't know if
that's the actual output or not,

15
00:01:08.445 --> 00:01:12.084
but I'm just gonna refresh
it just to make sure.

16
00:01:12.084 --> 00:01:14.046
See what happens here.

17
00:01:14.046 --> 00:01:19.314
Coo, okay, so as you can see, here's
all the things, which is really cool.

18
00:01:19.314 --> 00:01:22.909
So, let's see where it starts.

19
00:01:22.909 --> 00:01:23.552
It did it twice.

20
00:01:23.552 --> 00:01:25.896
I'm trying to see where it started.

21
00:01:25.896 --> 00:01:28.065
Okay, so here's the prompt that we made.

22
00:01:28.065 --> 00:01:30.615
Let me see if I can get to where
it starts and where it ends.

23
00:01:33.646 --> 00:01:36.463
And yeah,

24
00:01:36.463 --> 00:01:41.786
I think it was here.

25
00:01:41.786 --> 00:01:44.605
So I think everything that I have
highlighted the prompt that got created so

26
00:01:44.605 --> 00:01:45.107
you can see.

27
00:01:45.107 --> 00:01:49.120
Here's our thing at the top where we
steered it, we gave it instructions.

28
00:01:49.120 --> 00:01:52.028
And then the format and the structure
that we made with Zod schema, and

29
00:01:52.028 --> 00:01:53.322
this is where it got inserted.

30
00:01:53.322 --> 00:01:56.853
It added you must format your output as
JSON value that adheres to a given JSON

31
00:01:56.853 --> 00:01:57.798
schema incidents.

32
00:01:57.798 --> 00:02:00.175
Jason's schema and
then it describes Jason's schema.

33
00:02:00.175 --> 00:02:04.141
Remember I told you about one shot,
zero shot mini shot?

34
00:02:04.141 --> 00:02:08.466
Okay, it's giving it an example so
it's helping it through examples.

35
00:02:08.466 --> 00:02:10.509
This is a classic way of helping LM's.

36
00:02:10.509 --> 00:02:14.404
So it's like here's an example of what a
Jason schema instance would look like and

37
00:02:14.404 --> 00:02:16.041
then saying here's the schema and

38
00:02:16.041 --> 00:02:18.988
that wouldn't these properties
would match this property.

39
00:02:18.988 --> 00:02:23.421
Thus this object will be format right
it's literally teaching it JSON right

40
00:02:23.421 --> 00:02:26.412
imagine having to write
this it would be terrible.

41
00:02:26.412 --> 00:02:29.421
So and then just like remember
your output will be parsed and

42
00:02:29.421 --> 00:02:32.380
type checked according to
the provided schema instance.

43
00:02:32.380 --> 00:02:36.035
So make sure all the fields in your
output match the schema exactly And

44
00:02:36.035 --> 00:02:39.643
there will be no trailing commas,
it's yelling at just like I was.

45
00:02:39.643 --> 00:02:42.697
&gt;&gt; [LAUGH]
&gt;&gt; And then it's like, cool.

46
00:02:42.697 --> 00:02:44.292
Here is your JSON Schema.

47
00:02:44.292 --> 00:02:47.974
And then put it in an enclosing
markdown code block, so

48
00:02:47.974 --> 00:02:50.144
you really can't mess this up.

49
00:02:50.144 --> 00:02:54.299
And then here's our JSON schema
that got created through our Zod.

50
00:02:54.299 --> 00:02:57.451
And then it's like, okay,
cool, and then it runs it.

51
00:02:57.451 --> 00:02:59.660
And then it spits back.

52
00:02:59.660 --> 00:03:01.697
You can see this is
the prompt that I gave it.

53
00:03:01.697 --> 00:03:06.363
And then it spits back the format
of JSON exactly the way that we

54
00:03:06.363 --> 00:03:11.313
want it in a JSON code block ready for
us to parse beautiful right?

55
00:03:11.313 --> 00:03:13.980
So this is all just prompt engineering.

56
00:03:13.980 --> 00:03:16.704
You could have wrote
written this yourself, but

57
00:03:16.704 --> 00:03:19.234
people at length chain
are already doing it.

58
00:03:19.234 --> 00:03:27.473
So this used their thing [LAUGH]
&gt;&gt; Did you forget the subject?

59
00:03:27.473 --> 00:03:30.398
&gt;&gt; Summary, yeah, I did forget subjects.

60
00:03:30.398 --> 00:03:31.725
Yeah, okay, look at that.

61
00:03:31.725 --> 00:03:36.270
I guess there was one more
that I had that in my code my,

62
00:03:36.270 --> 00:03:40.118
GitHub and I just like,
just looked over it.

63
00:03:40.118 --> 00:03:41.115
Yeah, I did have it in my code.

64
00:03:41.115 --> 00:03:42.485
I just looked.
It's like hidden.

65
00:03:42.485 --> 00:03:43.320
It's like right here.

66
00:03:43.320 --> 00:03:44.311
You can't really see it.

67
00:03:44.311 --> 00:03:48.038
Yeah, let's add the subject and we, and
then I guess it is a good example to see

68
00:03:48.038 --> 00:03:50.543
like, how did it,
it'll still work here, right?

69
00:03:50.543 --> 00:03:56.136
So we could say subjects c-string I
think this one was actually pretty easy.

70
00:03:56.136 --> 00:03:58.009
You don't have to do anything crazy.

71
00:03:58.009 --> 00:04:00.552
I just said the subject of
the journal entry, right?

72
00:04:00.552 --> 00:04:01.606
This one's really simple.

73
00:04:09.876 --> 00:04:12.301
There we go, we got that.

74
00:04:12.301 --> 00:04:13.899
Don't have to change anything else.

75
00:04:13.899 --> 00:04:15.129
Should just be able to run this again.

76
00:04:15.129 --> 00:04:17.567
I'll run up the same prompt.

77
00:04:17.567 --> 00:04:20.759
And see what we get.

78
00:04:20.759 --> 00:04:21.399
There we go.

79
00:04:21.399 --> 00:04:23.185
We got our subject.

80
00:04:23.185 --> 00:04:27.145
Daily events, found a new coffee shop but
got a flat tire.

81
00:04:27.145 --> 00:04:29.429
Neutral, I guess it figured out.

82
00:04:29.429 --> 00:04:30.590
It was neutral.

83
00:04:30.590 --> 00:04:31.419
It was pretty neutral.

84
00:04:31.419 --> 00:04:35.240
I thought that smiley face was gonna throw
it off and be like, it was a good day.

85
00:04:35.240 --> 00:04:38.124
But no I guess not, yes.

86
00:04:38.124 --> 00:04:42.918
&gt;&gt; Is 3.5 Turbo as of like June 2023.

87
00:04:42.918 --> 00:04:45.350
Is that like your kinda daily driver or

88
00:04:45.350 --> 00:04:48.618
like the default model when
using open AI at least.

89
00:04:48.618 --> 00:04:52.440
Have you played around with others and
have takeaways or recommendation?

90
00:04:52.440 --> 00:04:57.615
&gt;&gt; Yeah, I'll probably use GPT 3.5 Turbo,
because it's the same thing with Chat GPT.

91
00:04:57.615 --> 00:05:01.569
So the difference between GPT 3.5
Turbo and regular GPT 3, I believe,

92
00:05:01.569 --> 00:05:05.163
actually I could be wrong,
they might have both went through this.

93
00:05:05.163 --> 00:05:08.488
But I know Turbo really went through this,
is that they

94
00:05:08.488 --> 00:05:13.132
had reinforcement learning done to
the model after it was trained through.

95
00:05:13.132 --> 00:05:17.669
All the data from the internet,
human interaction, reforced learning,

96
00:05:17.669 --> 00:05:21.642
which basically just means the best
way I can describe it is like.

97
00:05:21.642 --> 00:05:23.947
If you go into ChatGPT and
you do thumbs up, thumbs down,

98
00:05:23.947 --> 00:05:25.736
that's reinforcement learning, right?

99
00:05:25.736 --> 00:05:28.711
It's, it's like looking at the output and
being like, this was good.

100
00:05:28.711 --> 00:05:29.754
This was bad.

101
00:05:29.754 --> 00:05:31.744
And then feeding that back into it.

102
00:05:31.744 --> 00:05:36.208
Because the way a neural network
works under whatever has tons of

103
00:05:36.208 --> 00:05:40.341
different layers each layers is
just a set of statistics and

104
00:05:40.341 --> 00:05:43.000
which a prediction crosses through.

105
00:05:43.000 --> 00:05:47.989
So like it determines what is the best
statistically what is the best

106
00:05:47.989 --> 00:05:51.678
path to go through to get
some type of prediction.

107
00:05:51.678 --> 00:05:55.981
So in order for it to correct itself, it
just goes back to those certain layers and

108
00:05:55.981 --> 00:05:56.944
readjust those.

109
00:05:56.944 --> 00:06:00.104
It rebalances those statistics to
have different numbers, right?

110
00:06:00.104 --> 00:06:05.035
So you might think of a node and
a neural network might have,

111
00:06:05.035 --> 00:06:08.798
it can have a value between 0 and
1, right?

112
00:06:08.798 --> 00:06:09.619
And that's a statistic.

113
00:06:09.619 --> 00:06:14.470
So it just readjusts those to figure out
how to get to the result that it needs

114
00:06:14.470 --> 00:06:15.166
to get to.

115
00:06:15.166 --> 00:06:18.846
There's a lot of stuff that
goes into it as far as like,

116
00:06:18.846 --> 00:06:24.054
punishing the neural net that sounds so
bad but like yeah, you can reward it.

117
00:06:24.054 --> 00:06:24.809
You can punish it.

118
00:06:24.809 --> 00:06:25.904
There's like different things like that.

119
00:06:25.904 --> 00:06:29.666
So, there's a whole lot in that how you
recommend literally going through and

120
00:06:29.666 --> 00:06:32.008
building your own neural net and
JavaScript is.

121
00:06:32.008 --> 00:06:33.679
If you know Python, do it in Python.

122
00:06:33.679 --> 00:06:35.073
If you know JavaScript,
do it in JavaScript.

123
00:06:35.073 --> 00:06:37.756
But it's a great learning experience.

