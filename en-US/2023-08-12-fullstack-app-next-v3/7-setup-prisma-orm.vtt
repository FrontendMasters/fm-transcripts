WEBVTT

1
00:00:00.100 --> 00:00:01.310
So we got our database running.

2
00:00:02.600 --> 00:00:06.712
We got our app running, like to put
all these to the left like that.

3
00:00:06.712 --> 00:00:10.537
Let's get started with Prisma, okay.

4
00:00:10.537 --> 00:00:17.082
With Prisma, it's actually pretty simple.

5
00:00:17.082 --> 00:00:23.480
We just need to npm install
@prisma/client, so we'll install that.

6
00:00:29.746 --> 00:00:34.670
And then we're gonna do another
npm install of just prisma.

7
00:00:34.670 --> 00:00:39.074
But the reason I'm doing this several
because I want this to be a devDependency,

8
00:00:39.074 --> 00:00:40.452
so I'll say save-dev.

9
00:00:44.310 --> 00:00:48.732
So Prisma the tool, and
then Prisma the SDK.

10
00:00:55.130 --> 00:00:59.068
So you got the @prisma client, and
you got the prisma that's a save-dev.

11
00:01:04.730 --> 00:01:12.467
Cool, and then from there you
just wanna run npx prisma init.

12
00:01:15.475 --> 00:01:16.722
Hit Enter.

13
00:01:18.826 --> 00:01:23.060
And that's just gonna scaffold out a few
things for us, we can go check it out.

14
00:01:24.440 --> 00:01:28.481
So first thing it's gonna do is gonna
create a folder called prisma with a file

15
00:01:28.481 --> 00:01:30.130
in it called schema.prisma.

16
00:01:30.130 --> 00:01:35.993
There's a plugin for this file, if you
want it to look nice, it's called prisma.

17
00:01:35.993 --> 00:01:40.290
So go install that, otherwise,
it's just gonna look bad.

18
00:01:40.290 --> 00:01:43.847
And you won't get an icon,
you won't get that icon right there.

19
00:01:43.847 --> 00:01:48.475
If you want that icon,
go install the extension.

20
00:01:48.475 --> 00:01:50.180
So we got that.

21
00:01:50.180 --> 00:01:52.700
So go into that file,
one thing we wanna change,

22
00:01:52.700 --> 00:01:56.643
you can see where it says PostgreSQL,
we don't want this to be PostgreSQL.

23
00:01:56.643 --> 00:02:01.030
We want this to be mysql, like that.

24
00:02:04.266 --> 00:02:09.619
And then the other thing we wanna
add here in the datasource db,

25
00:02:09.619 --> 00:02:14.270
is we want to add a relationMode = and
then put prisma.

26
00:02:17.909 --> 00:02:21.970
Don't worry about that,
that's something advanced.

27
00:02:21.970 --> 00:02:23.434
If we get to it, I'll talk about it, but

28
00:02:23.434 --> 00:02:25.081
you don't really need
to know what it means.

29
00:02:25.081 --> 00:02:27.569
You could look it up from the docs if you
want, but yeah, just put prisma there,

30
00:02:27.569 --> 00:02:29.142
otherwise this is not
gonna work on PlanetScale.

31
00:02:30.489 --> 00:02:39.230
TLDR just means prisma is gonna handle
our relationships and not the database.

32
00:02:39.230 --> 00:02:41.966
How the service database works,

33
00:02:41.966 --> 00:02:48.360
prevents it from handling relationships
like it would normally would.

34
00:02:48.360 --> 00:02:50.413
Cool, the other thing we need to do
is we need to add a database URL

35
00:02:50.413 --> 00:02:53.320
in our environment variable file,
so this thing could pick it up.

36
00:02:53.320 --> 00:02:57.737
And this is the tool that I said that is
going to automatically load the .env file,

37
00:02:57.737 --> 00:03:00.370
whereas Next.js loads the .env.local file.

38
00:03:00.370 --> 00:03:04.337
And in fact, it already created one,
it created a .env file here,

39
00:03:04.337 --> 00:03:06.490
with a Postgres URL in it.

40
00:03:06.490 --> 00:03:10.163
We don't want that Postgres URL,
so we can get rid of that.

41
00:03:10.163 --> 00:03:14.916
Instead, we're gonna just add
our local host MySQL one,

42
00:03:14.916 --> 00:03:18.505
which will be, yeah, it's 3309, but

43
00:03:18.505 --> 00:03:22.970
I don't know why it's escaping
me with a port will be.

44
00:03:22.970 --> 00:03:25.913
I'm sorry, not the port, the protocol.

45
00:03:25.913 --> 00:03:29.360
All right, they're gonna have it here.

46
00:03:29.360 --> 00:03:36.501
So what we wanna do is basically
add our database like this.

47
00:03:36.501 --> 00:03:37.640
I'm gonna blow that up so you can see it.

48
00:03:42.040 --> 00:03:47.945
Just MySQL, in this case, 127,
that's just localhost, 3309, and

49
00:03:47.945 --> 00:03:53.230
then it has to be the same name as
the database that's on PlanetScale.

50
00:03:53.230 --> 00:03:55.822
So in my case it will be mood.

51
00:03:55.822 --> 00:04:01.058
So I'm just going to copy this and

52
00:04:01.058 --> 00:04:05.930
put it in my .env, like that.

53
00:04:05.930 --> 00:04:08.759
Get rid of database name and put mood.

54
00:04:12.370 --> 00:04:17.170
I think it works if you put localhost
here too, but, I don't know, we'll see.

55
00:04:17.170 --> 00:04:24.627
And remember, your database name,
whatever database you have on Prisma.

56
00:04:30.340 --> 00:04:32.512
Cool, everybody following me so far?

57
00:04:32.512 --> 00:04:36.233
All righty, and then what we wanna do
is just make, we just wanna go on and

58
00:04:36.233 --> 00:04:40.860
actually make some schemas, so we can
push this up to our database and sync it.

59
00:04:40.860 --> 00:04:42.913
The sweet thing about using Prisma and

60
00:04:42.913 --> 00:04:45.810
PlanetScale is that they
both kinda do similar jobs.

61
00:04:45.810 --> 00:04:48.442
So Prisma actually does
migration management too, and

62
00:04:48.442 --> 00:04:49.787
it kinda makes it seamless.

63
00:04:49.787 --> 00:04:54.127
But PlanetScale also does migration
management, so Prisma knows that.

64
00:04:54.127 --> 00:04:57.660
So what it does is it opts out of
doing any migration management for

65
00:04:57.660 --> 00:05:02.270
you if you're doing PlanetScale, and
instead just let PlanetScale do it.

66
00:05:02.270 --> 00:05:05.858
So it actually becomes really easier to
work with Prisma because you don't have to

67
00:05:05.858 --> 00:05:08.000
worry about any migration CLI commands.

68
00:05:08.000 --> 00:05:09.504
You just push it to PlanetScale, and

69
00:05:09.504 --> 00:05:11.698
PlanetScale will figure out
the migrations for you.

70
00:05:11.698 --> 00:05:14.815
Whereas if you use another
database that wasn't PlanetScale,

71
00:05:14.815 --> 00:05:18.118
you would have to use Prisma to
figure out those migrations for you.

72
00:05:18.118 --> 00:05:22.370
Which is actually still really easy, but
that's just one thing to keep in mind.

73
00:05:22.370 --> 00:05:25.749
So if you follow another tutorial
where they use another database,

74
00:05:25.749 --> 00:05:28.131
you might find yourself
doing Prisma migrate.

75
00:05:28.131 --> 00:05:32.520
You will never do that with PlanetScale,
you'll never run Prisma migrate.

76
00:05:32.520 --> 00:05:35.562
You'll just say push this to the database,
and

77
00:05:35.562 --> 00:05:39.001
PlanetScale itself will
figure out the migrations.

78
00:05:39.001 --> 00:05:44.080
Let's just write a simple
version of our user.

79
00:05:44.080 --> 00:05:50.810
So to do that is really simple,
we just say model User, like so.

80
00:05:50.810 --> 00:05:54.980
It's a very simple syntax, it looks
like objects, it looks like GraphQL.

81
00:05:54.980 --> 00:06:00.153
If you know any language,
this is gonna look familiar.

82
00:06:00.153 --> 00:06:04.480
So model User, we're gonna give it an ID,
that's gonna be type string.

83
00:06:06.440 --> 00:06:09.798
We're gonna say this is the ID
field by using this directive @id.

84
00:06:09.798 --> 00:06:13.875
And then because we don't wanna
have to create the IDs ourself,

85
00:06:13.875 --> 00:06:16.593
we're gonna ask
the database to do that for

86
00:06:16.593 --> 00:06:20.310
us by giving it a default,
which is kinda like a function.

87
00:06:20.310 --> 00:06:22.019
So you have a function there.

88
00:06:22.019 --> 00:06:25.190
And then we can say we want
that to default to uuid.

89
00:06:29.917 --> 00:06:33.972
So uuid just stands for
universally unique identifier,

90
00:06:33.972 --> 00:06:39.130
which just means it's a string that's
almost guaranteed to be unique.

91
00:06:39.130 --> 00:06:42.229
I mean, nothing can be guaranteed
to be unique, but, yeah,

92
00:06:42.229 --> 00:06:44.148
I can go to this generator right here.

93
00:06:44.148 --> 00:06:47.480
Every time I refresh the page,
I get a new uuid, so this is a uuid.

94
00:06:47.480 --> 00:06:50.679
So the database will just create one for
us every time for

95
00:06:50.679 --> 00:06:54.983
the ID versus us having to manage
that ourselves, that's all I'm doing.

96
00:06:54.983 --> 00:06:58.370
You don't have to use uuid.

97
00:06:58.370 --> 00:07:02.686
I think they have CUID as well,
which is something very similar.

98
00:07:02.686 --> 00:07:08.018
You can also just use the integer if you
want and just make this go up by one,

99
00:07:08.018 --> 00:07:11.896
auto increment, but
I hate that, I don't know why.

100
00:07:11.896 --> 00:07:15.706
I hate seeing IDs that are just one,
two, three, I don't know why,

101
00:07:15.706 --> 00:07:17.042
I just can't stand it.

102
00:07:17.042 --> 00:07:20.050
So I think it's also a security risk too.

103
00:07:20.050 --> 00:07:21.999
It's like, now I know which one you were.

104
00:07:21.999 --> 00:07:25.630
You're number 3 or 300,
I don't know, it's weird.

105
00:07:25.630 --> 00:07:28.841
All right, we'll just put that for now and
then we'll come back and make the schema,

106
00:07:28.841 --> 00:07:31.846
let's just see if all this works,
we didn't break anything, how about that?

107
00:07:31.846 --> 00:07:34.019
So what we'll do is, one,

108
00:07:34.019 --> 00:07:39.560
make sure our PlanetScale is running,
which mine still is.

109
00:07:39.560 --> 00:07:42.015
Make sure we got that environment
available, hopefully that's right.

110
00:07:42.015 --> 00:07:47.092
We have our schema here,
all we have to do now

111
00:07:47.092 --> 00:07:53.836
in another terminal window is
just run npx prisma db push.

112
00:07:54.982 --> 00:08:00.208
And viola,
couple things happen here, so what?

113
00:08:00.208 --> 00:08:03.920
Basically, I mean, it tells us right here,
loaded the environment variable.

114
00:08:03.920 --> 00:08:05.139
It loaded the schema.

115
00:08:05.139 --> 00:08:07.859
It saw the data source was MySQL and
that's the URL to it.

116
00:08:07.859 --> 00:08:15.740
And then it synced our local schema with
the database that we have on PlanetScale.

117
00:08:15.740 --> 00:08:18.892
And that's what it did, your database
is now in sync with your Prisma schema.

118
00:08:18.892 --> 00:08:23.462
And then lastly, the most important part,
is that it generated an SDK

119
00:08:23.462 --> 00:08:28.039
based off of our schema that we can
now import from @prisma/client.

120
00:08:28.039 --> 00:08:32.967
So it literally went and generated that so
that the types for that SDK, and

121
00:08:32.967 --> 00:08:38.100
the methods on that SDK, match the models
that we created in our schema.

122
00:08:38.100 --> 00:08:42.217
So this means I can go into the schema and
do prisma.user and it will have the same

123
00:08:42.217 --> 00:08:45.050
fields and expectations on
it as the user in my schema.

124
00:08:45.050 --> 00:08:48.968
If I make a model for airplanes,
I can do prisma.airplanes, and

125
00:08:48.968 --> 00:08:50.630
it will be type check.

126
00:08:50.630 --> 00:08:52.695
So it will generate a new SDK for

127
00:08:52.695 --> 00:08:57.260
you every time you push your
schema up to PlanetScale.

128
00:08:57.260 --> 00:08:59.900
You can also manually do it just
by running npx prisma generate and

129
00:08:59.900 --> 00:09:01.444
it will manually do it for you as well.

130
00:09:04.510 --> 00:09:05.830
So we can double-check this.

131
00:09:05.830 --> 00:09:09.400
If we go back to PlanetScale, this is
where it's really cool, it already did it.

132
00:09:09.400 --> 00:09:14.246
You can see it's like, yeah,
somebody just added a user table here, and

133
00:09:14.246 --> 00:09:18.287
here's all the SQL you did not
have to write because of Prisma.

134
00:09:18.287 --> 00:09:24.420
So you would have had to written that SQL
yourself if you didn't have Prisma, right?

135
00:09:24.420 --> 00:09:28.735
So now we have that, And
it's only on this branch.

136
00:09:28.735 --> 00:09:31.037
So if I view these branches,
if I go to the main branch,

137
00:09:31.037 --> 00:09:32.949
that main branch doesn't have that schema.

