WEBVTT

1
00:00:00.270 --> 00:00:04.150
The app is mostly done as far as
the things that I wanted to show.

2
00:00:04.150 --> 00:00:09.678
I mean, there's a lot of bugs in here as
far as revalidating data, cached data and

3
00:00:09.678 --> 00:00:13.780
some of the hooks that we have, and
those are the ones I know about.

4
00:00:13.780 --> 00:00:19.510
So I'm sure there's more, as extra credit,
go find all the bugs and get rid of them.

5
00:00:19.510 --> 00:00:22.130
And see how far that takes you.

6
00:00:22.130 --> 00:00:26.010
So what we'll do now, though,
is get this thing ready for production.

7
00:00:27.010 --> 00:00:31.290
And to do that, it's probably wise
just to probably write some tests.

8
00:00:31.290 --> 00:00:34.538
So, I mean, this is so
bleeding edge right now,

9
00:00:34.538 --> 00:00:37.646
writing tests for anything in Next.js 13.

10
00:00:39.510 --> 00:00:42.900
There's not even a documentation
on how to do it, [LAUGH].

11
00:00:42.900 --> 00:00:43.940
You can't even look this up.

12
00:00:43.940 --> 00:00:47.515
So this is literally just me banging
my head against the wall for

13
00:00:47.515 --> 00:00:50.490
about two weeks trying to
figure out how to do tests.

14
00:00:51.570 --> 00:00:54.100
And yeah, this is what I figured out.

15
00:00:54.100 --> 00:00:56.718
So I will show you how to write some
tests for server components and

16
00:00:56.718 --> 00:00:58.280
things like that.

17
00:00:58.280 --> 00:01:01.630
And then we'll attempt to
get this thing deployed.

18
00:01:01.630 --> 00:01:02.590
We'll see what happens.

19
00:01:02.590 --> 00:01:09.300
I say attempt because we might have
troubles with the in-memory factor store.

20
00:01:09.300 --> 00:01:10.600
So, I don't know, we'll see.

21
00:01:12.460 --> 00:01:14.330
Everything else should be fine.

22
00:01:14.330 --> 00:01:18.040
Okay, so to write some tests,
we need a bunch of stuff.

23
00:01:18.040 --> 00:01:21.244
And when I say a bunch of stuff,
I mean a bunch of stuff.

24
00:01:21.244 --> 00:01:26.952
So few of the things we need to download.

25
00:01:26.952 --> 00:01:30.176
Anyone ever use the tool called V,
V-I-T-E?

26
00:01:30.176 --> 00:01:35.932
Okay, we'll be using V test to do
the test, which is like an abstraction on,

27
00:01:35.932 --> 00:01:42.730
it uses Jest, but it's not Jest, and
it's using the V compiler and not Webpack.

28
00:01:42.730 --> 00:01:45.360
So we'll be using that, but there's just
a bunch of stuff that we have to install.

29
00:01:45.360 --> 00:01:49.400
So we need to install this
library called testing-library.

30
00:01:49.400 --> 00:01:50.250
So we'll do that.

31
00:01:50.250 --> 00:01:58.366
So I'm going to say npm
install @testinglibrary.

32
00:01:58.366 --> 00:01:59.850
Sorry, testing-library.

33
00:02:02.514 --> 00:02:06.280
And then we want /jsdom, I believe.

34
00:02:06.280 --> 00:02:08.283
There's also another one for React.

35
00:02:08.283 --> 00:02:10.558
So I'm just gonna copy that.

36
00:02:10.558 --> 00:02:12.840
We want the one for React /react.

37
00:02:14.780 --> 00:02:18.230
We want vtest or vitest.

38
00:02:18.230 --> 00:02:19.060
vitest?

39
00:02:19.060 --> 00:02:21.720
Probably vitest, vitest.

40
00:02:21.720 --> 00:02:23.290
I think that's what it's called.

41
00:02:23.290 --> 00:02:27.440
vitest, we have to download a plugin for
that.

42
00:02:27.440 --> 00:02:37.089
So that one's gonna be
@vitejs/plugin-react-swc.

43
00:02:37.089 --> 00:02:41.690
Swc is the compiler that
Next.js uses to compile itself.

44
00:02:41.690 --> 00:02:46.930
We got a plugin for that, So
that Vite can tie into it.

45
00:02:49.200 --> 00:02:56.370
There's also a, Thought there was more.

46
00:02:56.370 --> 00:02:59.590
No, there's more, let's see.

47
00:02:59.590 --> 00:03:00.670
Yeah, jsdom.

48
00:03:01.730 --> 00:03:06.164
jsdom, it's a mock for the real dom, but

49
00:03:06.164 --> 00:03:10.860
a node, so
you can use the real dom and node.

50
00:03:10.860 --> 00:03:11.790
It doesn't do anything.

51
00:03:11.790 --> 00:03:13.970
It just makes it so your code works.

52
00:03:13.970 --> 00:03:20.031
So you can render client side
components in the server.

53
00:03:21.428 --> 00:03:24.430
It's a JavaScript representation
of the DOM, jsdom.

54
00:03:24.430 --> 00:03:25.910
Makes sense.

55
00:03:25.910 --> 00:03:29.949
And I think that's it.

56
00:03:29.949 --> 00:03:36.110
Just wanna make sure,
Okay, I think that's it.

57
00:03:36.110 --> 00:03:37.680
So we'll install these.

58
00:03:37.680 --> 00:03:43.550
We'll probably just do save dev on them,
save-dev.

59
00:03:43.550 --> 00:03:45.536
&gt;&gt; What's that?

60
00:03:45.536 --> 00:03:47.420
&gt;&gt; You don't have to do save-dev.

61
00:03:47.420 --> 00:03:48.080
I'm just doing it.

62
00:03:48.080 --> 00:03:50.417
It's --save-dev.

63
00:03:50.417 --> 00:03:53.950
&gt;&gt; I just mean that first testing library,
jsdom.

64
00:03:53.950 --> 00:03:55.810
Yeah, it's supposed to be Jest.

65
00:03:55.810 --> 00:03:57.451
&gt;&gt; It's Jest, sorry.
&gt;&gt; Was the testing library.

66
00:03:57.451 --> 00:03:58.394
&gt;&gt; There it is.

67
00:03:58.394 --> 00:04:00.123
&gt;&gt; All right, jest or something.

68
00:04:00.123 --> 00:04:01.584
&gt;&gt; Here we go.

69
00:04:01.584 --> 00:04:08.835
&gt;&gt; Oop,
it still doesn't like testing-library.

70
00:04:08.835 --> 00:04:13.130
It's jest-dom, okay.

71
00:04:13.130 --> 00:04:16.791
I didn't really know how
to make these names.

72
00:04:16.791 --> 00:04:23.750
&gt;&gt; [LAUGH]
&gt;&gt; Okay, so we got that.

73
00:04:23.750 --> 00:04:28.890
First thing we need to do is we need
to extend our tsconfig to support this.

74
00:04:28.890 --> 00:04:34.130
So what we'll do is we'll make a new
tsconfig just for our test on a route.

75
00:04:34.130 --> 00:04:35.660
And we're gonna do that.

76
00:04:35.660 --> 00:04:42.092
If you're using TypeScript, this is fine,
but I'm just gonna say tsconfig.node.json.

77
00:04:42.092 --> 00:04:44.580
That's because our tests are gonna
run in a different runtime.

78
00:04:44.580 --> 00:04:47.330
And then what our code runs in,
two different runtimes.

79
00:04:47.330 --> 00:04:50.099
It's gonna pull in some of the same files,
but

80
00:04:50.099 --> 00:04:54.008
those files are gonna be executed
differently by different build

81
00:04:54.008 --> 00:04:57.650
system than what the build
system that Next.js is using.

82
00:04:57.650 --> 00:05:00.611
It's literally the equivalent
if you just took a random

83
00:05:00.611 --> 00:05:04.430
JavaScript file right now and
try to run it in the terminal with Node.

84
00:05:04.430 --> 00:05:09.240
It's just gonna run in that runtime and
outside of the context of Next.js.

85
00:05:09.240 --> 00:05:13.297
So anything that's specific
to your Next.js project,

86
00:05:13.297 --> 00:05:16.931
like some of these paths or
how to handle CSS files,

87
00:05:16.931 --> 00:05:22.272
that will just break in any of the runtime
because it's not set up for that.

88
00:05:22.272 --> 00:05:27.287
So we'll make that,
we'll make this configure right here, and

89
00:05:27.287 --> 00:05:32.130
basically it's just going to set
up a Vite environment for us.

90
00:05:32.130 --> 00:05:34.470
So we're just gonna interact
with the compiler here.

91
00:05:35.980 --> 00:05:37.950
Do es next for the modules.

92
00:05:37.950 --> 00:05:41.150
Module resolution is a bundler.

93
00:05:41.150 --> 00:05:43.430
What does all this mean?

94
00:05:43.430 --> 00:05:46.990
This is just telling you what type
of module system we're using.

95
00:05:46.990 --> 00:05:50.238
This is telling you how to resolve the
modules, whether it's like the bundler,

96
00:05:50.238 --> 00:05:53.487
whether it's like the native environment
like Node, in this case the bundler,

97
00:05:53.487 --> 00:05:54.420
let the bundler do it.

98
00:05:55.460 --> 00:05:57.530
Vite being the bundler probably.

99
00:05:59.030 --> 00:06:01.220
Allow synthetic imports.

100
00:06:01.220 --> 00:06:06.392
This has something to do with
composability between Common.js and

101
00:06:06.392 --> 00:06:11.119
Ecmascript modules, so
they can inter-op with each other.

102
00:06:11.119 --> 00:06:14.009
So you can create these fake import,
it's nothing you would have to do.

103
00:06:14.009 --> 00:06:16.100
It's just allowing something to happen.

104
00:06:16.100 --> 00:06:18.680
And then some config file
that we haven't made yet.

105
00:06:18.680 --> 00:06:19.660
We'll include that in a minute.

106
00:06:22.430 --> 00:06:26.772
Next thing we need to do is go to the
original tsconfig, and at the bottom we

107
00:06:26.772 --> 00:06:30.590
just need to add a references path
to point to that new tsconfig.

108
00:06:30.590 --> 00:06:32.190
It's kinda like an extending.

109
00:06:32.190 --> 00:06:36.606
So that way, when we use the new tsconfig,

110
00:06:36.606 --> 00:06:40.783
it's also getting the benefit of this.

111
00:06:40.783 --> 00:06:45.840
Because if we're testing some of
our Next.js components and files,

112
00:06:45.840 --> 00:06:50.310
we still want those to work as
far as TypeScript is concerned.

113
00:06:50.310 --> 00:06:55.475
We need this config as well, so
we're just gonna reference it.

114
00:06:55.475 --> 00:07:00.311
Okay, now, we're going to make our

115
00:07:00.311 --> 00:07:05.000
vite.config, so we'll do that.

116
00:07:05.000 --> 00:07:10.482
It's just called
vite.config.ts on the root,

117
00:07:10.482 --> 00:07:14.150
vite.config.ts, like that.

118
00:07:14.150 --> 00:07:17.970
And we're just gonna import a few things.

119
00:07:17.970 --> 00:07:19.520
We're gonna import defineConfig.

120
00:07:20.750 --> 00:07:24.682
And we're gonna import React
from the SWC plugin, like so.

121
00:07:31.618 --> 00:07:35.819
And then from here we're just going to set
up this config specifically for the test,

122
00:07:35.819 --> 00:07:39.920
which is probably different from another
vite.config that you might have used.

123
00:07:41.110 --> 00:07:45.151
So we're gonna use this React SWC
plugin here in the plugins array.

124
00:07:47.823 --> 00:07:52.050
And then we're gonna say, these are the
test files we want you to look for.

125
00:07:52.050 --> 00:07:57.920
So anything inside of
a folder called __tests__ or

126
00:07:57.920 --> 00:08:02.400
any file that has a .spec or .test in it.

127
00:08:02.400 --> 00:08:03.290
Those are test files.

128
00:08:04.350 --> 00:08:06.340
Use globals, yes.

129
00:08:06.340 --> 00:08:07.940
Environment is jsdom.

130
00:08:09.610 --> 00:08:13.170
Is there a file you want to run before
the test run to set those test up?

131
00:08:13.170 --> 00:08:15.200
Yes, we're gonna run
a file called setupTests.

132
00:08:15.200 --> 00:08:17.624
We're gonna make that file.

133
00:08:17.624 --> 00:08:23.700
And then do you want to reset
the mocks before each test runs?

134
00:08:23.700 --> 00:08:24.724
Yes, please do that.

135
00:08:24.724 --> 00:08:25.870
That way we don't have to do it ourselves.

136
00:08:27.330 --> 00:08:30.212
If you've written tests, you know that
it's better to have stateless tests

137
00:08:30.212 --> 00:08:31.640
than it is to have stateful tests.

138
00:08:31.640 --> 00:08:35.867
You don't want running one test that put
stuff in a database, and then the next

139
00:08:35.867 --> 00:08:39.792
test depends on the previous test
running and stuff being in a database.

140
00:08:39.792 --> 00:08:42.380
Good luck, good luck with that.

141
00:08:43.500 --> 00:08:44.700
Same thing is true for mocks.

142
00:08:44.700 --> 00:08:45.859
Just reset the mocks.

143
00:08:50.037 --> 00:08:54.369
&gt;&gt; This is maybe not a fair question
to ask, but do you know if the kind of

144
00:08:54.369 --> 00:08:59.082
gnarliness of setting up Vite even
though there's already a turbo pack,

145
00:08:59.082 --> 00:09:00.920
etc, just to run the tests?

146
00:09:00.920 --> 00:09:05.301
Is that just purely because the app
router is still kind of in flight and

147
00:09:05.301 --> 00:09:07.600
an experimental feature?

148
00:09:07.600 --> 00:09:11.810
&gt;&gt; I think it's less about the app router
and more just about server components.

149
00:09:11.810 --> 00:09:16.725
It's so new, and
Next.js is the only framework that's like,

150
00:09:16.725 --> 00:09:21.250
I mean, React has support for
server components.

151
00:09:21.250 --> 00:09:24.629
But setting up server components in
React is not as simple as setting up

152
00:09:24.629 --> 00:09:26.270
server components in Next.js.

153
00:09:26.270 --> 00:09:31.820
So, no one who needs testing
is using it right now, right?

154
00:09:31.820 --> 00:09:36.140
The people who need testing are enterprise
people, or people who have bigger teams or

155
00:09:36.140 --> 00:09:37.343
people who have teams.

156
00:09:37.343 --> 00:09:39.450
Those people really need testing.

157
00:09:39.450 --> 00:09:41.270
You're not using server components yet.

158
00:09:41.270 --> 00:09:44.270
So I think it's gonna be a minute
before we see some of that.

159
00:09:44.270 --> 00:09:47.530
And a lot of the tooling
is still being updated.

160
00:09:47.530 --> 00:09:51.230
But, yeah, it's mostly just
because of server side components.

161
00:09:51.230 --> 00:09:55.098
It's not something, most of the time
when you render a component and

162
00:09:55.098 --> 00:09:58.510
a Vite or jsdom or
something like that, it's synchronous.

163
00:09:58.510 --> 00:09:59.927
You can just render it and it's done.

164
00:09:59.927 --> 00:10:04.612
I mean, not now, because those functions
can call data server-side, and then those

165
00:10:04.612 --> 00:10:08.800
server-side functions have dependencies,
and then all this other stuff.

166
00:10:08.800 --> 00:10:11.210
So it's mostly because of that.

167
00:10:11.210 --> 00:10:12.900
That's where I was banging
my head up against the wall.

168
00:10:12.900 --> 00:10:19.658
And then when I got the solution, I was
like, [SOUND] this makes sense, [LAUGH].

169
00:10:24.111 --> 00:10:26.410
All right, we are getting somewhere.

170
00:10:26.410 --> 00:10:30.304
The next thing we wanna do is create
a file called setUpTests.ts on the root.

171
00:10:30.304 --> 00:10:32.603
It's literally just
gonna do this one thing.

172
00:10:36.015 --> 00:10:40.599
Just make sure it's the same file here,
same name, my setUpTests, plural.

173
00:10:42.470 --> 00:10:49.510
So setUpTests.ts.

174
00:10:49.510 --> 00:10:50.670
I'll paste that here.

175
00:10:52.000 --> 00:10:55.741
So in a TypeScript file, this is
basically, it's not only just a comment,

176
00:10:55.741 --> 00:10:58.968
but you can see it's highlighted
differently to read a comment.

177
00:10:58.968 --> 00:11:03.715
Because it's telling the TypeScript
compiler that there are some types

178
00:11:03.715 --> 00:11:07.233
located here, use those,
it's basically saying.

179
00:11:07.233 --> 00:11:13.428
And then it's gonna import the jsdom,
this is creating the jsdom environment.

180
00:11:13.428 --> 00:11:16.910
Again, the jsdom environment
is like a mock of the browser.

181
00:11:16.910 --> 00:11:19.948
So the React components think
that they're in a browser,

182
00:11:19.948 --> 00:11:22.310
because they have access
to the same things.

183
00:11:22.310 --> 00:11:23.750
They have access to
something called window.

184
00:11:23.750 --> 00:11:25.590
They have access to document.

185
00:11:25.590 --> 00:11:27.560
They have access to the same
stuff you would have in a DOM.

186
00:11:27.560 --> 00:11:28.490
They just don't do anything.

