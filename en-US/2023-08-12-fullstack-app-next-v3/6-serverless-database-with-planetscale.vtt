WEBVTT

1
00:00:00.260 --> 00:00:01.050
Let's keep it moving then.

2
00:00:01.050 --> 00:00:06.940
So database, we're going to use
a few things for our database.

3
00:00:08.110 --> 00:00:12.020
The first thing is something
called PlanetScale.

4
00:00:12.020 --> 00:00:13.640
Anybody ever heard of that?

5
00:00:14.710 --> 00:00:16.160
It's a really cool database.

6
00:00:16.160 --> 00:00:18.919
So PlanetScale is a SQL database.

7
00:00:20.890 --> 00:00:24.220
But it's actually kind
of cool how it works.

8
00:00:24.220 --> 00:00:27.970
Basically, what PlanetScale is,
it's a serverless SQL database.

9
00:00:27.970 --> 00:00:31.450
Serverless just means,
I feel like everybody uses this word now.

10
00:00:31.450 --> 00:00:34.950
Basically, what it means is that it
works in serverless environments.

11
00:00:36.200 --> 00:00:37.470
What does that actually mean?

12
00:00:37.470 --> 00:00:42.348
Well, in most serverless environments,
which aren't long running environments

13
00:00:42.348 --> 00:00:47.089
that have connections open constantly,
databases don't work that well because

14
00:00:47.089 --> 00:00:50.780
databases are expected to
maintain long connections.

15
00:00:50.780 --> 00:00:52.809
But in serverless environments,
it spins up and

16
00:00:52.809 --> 00:00:54.870
shuts down every time you talk to it.

17
00:00:54.870 --> 00:00:56.730
How do you maintain a database connection?

18
00:00:56.730 --> 00:01:01.437
So, to avoid that people have created
serverless databases which for better or

19
00:01:01.437 --> 00:01:04.890
for worse just means an HTTP
database at the end of the day.

20
00:01:04.890 --> 00:01:06.965
That's basically what it comes down to,

21
00:01:06.965 --> 00:01:09.814
either they're doing some
really cool polling logic and

22
00:01:09.814 --> 00:01:13.660
they're caching connection strings and
they're scaling that out.

23
00:01:13.660 --> 00:01:17.921
And or it's just an HTTP
server in front of a database.

24
00:01:17.921 --> 00:01:19.796
It's one of the two or both.

25
00:01:19.796 --> 00:01:22.620
PlanetScale uses some
combination of the two.

26
00:01:22.620 --> 00:01:26.086
I think they use something called Vitis.

27
00:01:27.821 --> 00:01:30.320
Yes, they use something called Vitis,

28
00:01:30.320 --> 00:01:34.450
which is something to help you
scale MySQL databases in the cloud.

29
00:01:34.450 --> 00:01:35.990
I'm not a database expert, so

30
00:01:35.990 --> 00:01:39.613
I have no idea what the hell this is,
but I just know this is what they use.

31
00:01:39.613 --> 00:01:43.120
And it's really cool, but that's not
the cool feature about PlanetScale.

32
00:01:43.120 --> 00:01:46.700
The really cool feature about PlanetScale
is that it's treated like a repo.

33
00:01:46.700 --> 00:01:49.763
You can make branches on your database and
it handles migrations for

34
00:01:49.763 --> 00:01:51.020
you automatically.

35
00:01:51.020 --> 00:01:54.634
It determines what changes to your
schema will cause a conflict, and

36
00:01:54.634 --> 00:01:56.750
write those migrations for you.

37
00:01:56.750 --> 00:01:57.265
And yeah,

38
00:01:57.265 --> 00:02:01.760
it's actually probably one of the most
impressive databases I've ever seen.

39
00:02:01.760 --> 00:02:03.790
And there's a lot of
databases like this now.

40
00:02:03.790 --> 00:02:06.890
NeonDB is the exact same thing,
but for Postgres.

41
00:02:07.980 --> 00:02:09.205
There's some other ones too, but yeah,

42
00:02:09.205 --> 00:02:11.310
these are some of the newer
databases that are coming out.

43
00:02:11.310 --> 00:02:15.220
We're gonna use PlanetScale because it's
just the one that I'm most familiar with.

44
00:02:15.220 --> 00:02:17.533
I think Neon Database is
also really cool too, but

45
00:02:17.533 --> 00:02:20.900
I haven't had enough time with
it as I have with PlanetScale.

46
00:02:20.900 --> 00:02:23.280
And I don't wanna fumble the bag up here,
so I'm gonna use PlanetScale.

47
00:02:24.860 --> 00:02:28.238
Okay, and the other thing we're gonna
use is something called Prisma.

48
00:02:28.238 --> 00:02:31.492
If you've taken any of my courses that
do full stack, you know I love Prisma.

49
00:02:31.492 --> 00:02:33.580
Prisma is just an ORM for a database.

50
00:02:33.580 --> 00:02:36.910
If you don't know what an ORM is,
it's an SDK for your database.

51
00:02:36.910 --> 00:02:40.000
It's how you interact with
a database in your code.

52
00:02:40.000 --> 00:02:42.820
The sweet thing about Prisma is it doesn't
really care what database you use.

53
00:02:42.820 --> 00:02:46.894
It's pretty much compatible with any
database that's came out in the last 15,

54
00:02:46.894 --> 00:02:50.437
20 years plus, so it works with anything,
including PlanetScale,

55
00:02:50.437 --> 00:02:53.800
which is just a SQL database,
so it'll work for that.

56
00:02:53.800 --> 00:02:55.380
So let's get started with both of these.

57
00:02:55.380 --> 00:02:59.850
First thing we wanna do is let's
create a PlanetScale database.

58
00:02:59.850 --> 00:03:02.990
So I already have a bunch of stuff here,
but I'll make a new one.

59
00:03:02.990 --> 00:03:07.030
So the first thing you probably
wanna do is make an account.

60
00:03:07.030 --> 00:03:09.320
Obviously, make a PlanetScale account,
it's free.

61
00:03:09.320 --> 00:03:10.762
You don't need a credit card for
any of this stuff.

62
00:03:10.762 --> 00:03:14.404
They give you a free database for
any organization that you make.

63
00:03:17.412 --> 00:03:22.120
So once you make an account,
you can have an org.

64
00:03:22.120 --> 00:03:26.486
I don't know if an account is an org, if
you've got to convert that to an org, but

65
00:03:26.486 --> 00:03:28.690
make an org or
you can have an org up here.

66
00:03:28.690 --> 00:03:31.210
I think it'll walk you through,
I think when you make an account,

67
00:03:31.210 --> 00:03:33.150
it'll just walk you through
making the database.

68
00:03:33.150 --> 00:03:35.600
So just follow that and
actually I'll just do that right now.

69
00:03:35.600 --> 00:03:39.980
So what I'm gonna do is I'm just going
to see if I can make a new org here.

70
00:03:39.980 --> 00:03:41.656
See, how do I do that?

71
00:03:41.656 --> 00:03:42.260
Here we go.
So

72
00:03:42.260 --> 00:03:47.207
I'm just gonna create
a new organization and

73
00:03:47.207 --> 00:03:54.410
I'm just gonna call this
frontendmasters organization here.

74
00:03:54.410 --> 00:03:55.390
I'm gonna create that org.

75
00:03:56.450 --> 00:03:59.210
And then you will probably see
something like this if you sign up.

76
00:03:59.210 --> 00:04:02.826
I think it'll bring you to something,
a flow that looks like this,

77
00:04:02.826 --> 00:04:06.264
where it's just walking you
through all the really cool stuff.

78
00:04:06.264 --> 00:04:10.523
And it's like, you can do branching,
non-blocking schema changes,

79
00:04:10.523 --> 00:04:11.516
deploy request.

80
00:04:11.516 --> 00:04:12.165
This is actually really cool.

81
00:04:12.165 --> 00:04:14.725
Like a pull request,
you can make a deploy request.

82
00:04:14.725 --> 00:04:18.370
I wanna deploy these changes to the
database and someone has to look at them.

83
00:04:18.370 --> 00:04:19.960
So it's actually quite cool.

84
00:04:19.960 --> 00:04:22.307
Yeah, you look at all this stuff and

85
00:04:22.307 --> 00:04:27.170
then eventually you get to the end and
you can create your first database.

86
00:04:27.170 --> 00:04:28.740
So I'm gonna wait for it, there it is.

87
00:04:28.740 --> 00:04:29.760
I already created my org.

88
00:04:29.760 --> 00:04:31.034
So you can click right here,

89
00:04:31.034 --> 00:04:33.910
create your first database,
kind of name it whatever you want.

90
00:04:33.910 --> 00:04:38.060
I'm going to call it mood,
since that's what the name of our app is.

91
00:04:38.060 --> 00:04:39.240
Region, doesn't matter.

92
00:04:39.240 --> 00:04:40.490
Deploy wherever you want.

93
00:04:40.490 --> 00:04:43.249
We're in the Midwest right now,
so nothing's gonna be,

94
00:04:43.249 --> 00:04:46.190
I guess High/b will be the closest,
but it doesn't matter.

95
00:04:48.280 --> 00:04:49.310
Click Create Database.

96
00:04:50.520 --> 00:04:53.760
It's gonna provision a database,
takes about a minute for that to happen.

97
00:04:56.090 --> 00:04:59.640
While that is happening, we can go
ahead and get started with everything.

98
00:04:59.640 --> 00:05:04.620
So, the one thing you wanna
do is install the CLI.

99
00:05:04.620 --> 00:05:06.490
I already have it installed.

100
00:05:06.490 --> 00:05:10.846
It is not an NPM package,
you have to install it globally.

101
00:05:10.846 --> 00:05:13.965
And because I don't have Windows, I'm
gonna make sure I look up the instructions

102
00:05:13.965 --> 00:05:15.605
on how to do that so
everyone here can do it.

103
00:05:17.642 --> 00:05:20.306
Cuz I know in Mac you can use Homebrew for
it.

104
00:05:20.306 --> 00:05:21.800
So for Mac, it's just brew.

105
00:05:21.800 --> 00:05:29.447
So just brew install planet-scale
slash tap slash pscale.

106
00:05:31.932 --> 00:05:36.470
Optionally, you can also install
the MySQL client for certain commands.

107
00:05:39.164 --> 00:05:42.110
For Linux, you use something called Scoop.

108
00:05:42.110 --> 00:05:43.980
No, I'm sorry, that's Windows.

109
00:05:43.980 --> 00:05:48.305
I was gonna say Linux is
probably the same as Mac almost.

110
00:05:48.305 --> 00:05:51.720
But for Windows,
you use something called Scoop.

111
00:05:51.720 --> 00:05:54.299
Cool, and then there's also
a manual installation here,

112
00:05:54.299 --> 00:05:57.460
which seems to be really cool, but
don't worry about the Docker stuff.

113
00:05:57.460 --> 00:06:00.480
Don't do the Docker stuff,
that's just too much work.

114
00:06:00.480 --> 00:06:02.310
That's for developing this, I'm sure.

115
00:06:02.310 --> 00:06:04.730
Brew usually takes a minute, so
I'll give everyone a second.

116
00:06:04.730 --> 00:06:08.860
Let's go check back on
the provisioning of it.

117
00:06:08.860 --> 00:06:14.550
And then once it's provisioned, you'll see
that we have, it shows this graph here.

118
00:06:14.550 --> 00:06:15.210
This is actually new.

119
00:06:15.210 --> 00:06:17.900
This looks cool, I just don't
know what it's doing right now.

120
00:06:17.900 --> 00:06:23.520
I think it'll show, I don't know
what it does, but it looks cool.

121
00:06:23.520 --> 00:06:26.769
But the important thing is if you
click on connect to your database,

122
00:06:26.769 --> 00:06:30.880
you can create a user, and a password, and
stuff like that to connect your database.

123
00:06:30.880 --> 00:06:34.050
We don't need to do this right now because
we're actually just gonna connect locally.

124
00:06:34.050 --> 00:06:38.257
And what it's gonna do is it's gonna proxy
the MySQL database that's on our computer

125
00:06:38.257 --> 00:06:40.840
into this, so
we don't have to really do anything.

126
00:06:40.840 --> 00:06:42.530
We just got to connect to it.

127
00:06:44.535 --> 00:06:46.603
If you click on get connection strings,
never mind,

128
00:06:46.603 --> 00:06:47.880
it's still gonna ask you for that.

129
00:06:47.880 --> 00:06:49.120
We don't have to worry about that.

130
00:06:49.120 --> 00:06:49.980
Don't worry about that.

131
00:06:49.980 --> 00:06:51.602
We actually don't need
a connection string.

132
00:06:51.602 --> 00:06:53.578
The CLI is gonna handle everything for us.

133
00:06:55.692 --> 00:07:00.750
Okay, while that's working, I am, yes.

134
00:07:00.750 --> 00:07:05.130
&gt;&gt; Would Prisma be similar to
what Mongoose is for MongoDB?

135
00:07:05.130 --> 00:07:06.031
&gt;&gt; Yeah, exactly.

136
00:07:06.031 --> 00:07:10.281
Prisma is exactly what
Mongoose is from MongoDB.

137
00:07:10.281 --> 00:07:15.312
It's an ORM or I think in Mongoose,
this case, it's called a ODM,

138
00:07:15.312 --> 00:07:19.360
an Object Document Mapper or
something like that.

139
00:07:19.360 --> 00:07:21.534
But yeah, it's just an old term for

140
00:07:21.534 --> 00:07:26.340
something that's literally just
describing the SDK for your database.

141
00:07:26.340 --> 00:07:30.675
If you didn't have that, the only way to
interact with the database would be with

142
00:07:30.675 --> 00:07:32.610
the database's native language.

143
00:07:32.610 --> 00:07:36.900
So in this case, you'd have to write raw
SQL queries to interact with the database.

144
00:07:36.900 --> 00:07:39.644
If you don't like the idea of
writing raw SQL queries, and

145
00:07:39.644 --> 00:07:43.300
instead like writing functions,
then you would want an ORM.

146
00:07:43.300 --> 00:07:45.380
Prisma is an ORM.

147
00:07:45.380 --> 00:07:47.930
That is exactly the same no
matter what database you use.

148
00:07:47.930 --> 00:07:51.415
So you can use Mongo, you can use
MySQL that's on PlanetScale, MySQL,

149
00:07:51.415 --> 00:07:56.540
that's on your computer, Postgres,
that's on Neon, Postgres that's on Amazon.

150
00:07:56.540 --> 00:08:01.520
Any other database they support, and
the SDK doesn't change, sir At all.

151
00:08:01.520 --> 00:08:02.350
It's the same SDK.

152
00:08:02.350 --> 00:08:03.760
It's the same schema language.

153
00:08:03.760 --> 00:08:05.570
Everything's exactly the same.

154
00:08:05.570 --> 00:08:09.970
And better yet, it's type checked,
so the SDK is generated for

155
00:08:09.970 --> 00:08:12.460
you based off of your schema.

156
00:08:12.460 --> 00:08:16.603
So if you and I had two different schemas,
your SDK would be different than my SDK,

157
00:08:16.603 --> 00:08:19.330
even though we both
downloaded the same one.

158
00:08:19.330 --> 00:08:22.150
That's because it gets generated every
single time you change your schema.

159
00:08:23.180 --> 00:08:24.498
It's kind of cool how it happens.

160
00:08:24.498 --> 00:08:28.591
So yeah,
&gt;&gt; With PlanetScale,

161
00:08:28.591 --> 00:08:30.760
do we have to have MySQL installed?

162
00:08:31.850 --> 00:08:35.771
&gt;&gt; With PlanetScale,
the way we're gonna connect,

163
00:08:35.771 --> 00:08:39.600
I believe you do need to
have MySQL installed, but

164
00:08:39.600 --> 00:08:44.560
I think it does that for you,
at least on Mac, I think it does.

165
00:08:44.560 --> 00:08:47.377
On Windows,
I have no clue if it does that for you, so

166
00:08:47.377 --> 00:08:49.249
you might have to have installed.

167
00:08:49.249 --> 00:08:53.070
Let's just run it to see if you get
an error [LAUGH], and you might have to.

168
00:08:53.070 --> 00:08:56.405
It's doing so much magic in
the background, I don't actually know.

169
00:08:56.405 --> 00:09:00.048
But if that's the case, we can connect
directly to the hosted version and

170
00:09:00.048 --> 00:09:02.470
you can bypass all of that,
if that's the case.

171
00:09:02.470 --> 00:09:06.050
So, yes, if you wanna connect locally,
I think you do?

172
00:09:06.050 --> 00:09:08.380
Yes, I think it does it for you.

173
00:09:08.380 --> 00:09:12.146
If you can't do that, then you can
just connect to the hosted version.

174
00:09:13.801 --> 00:09:15.120
Cool, I think mine is done.

175
00:09:15.120 --> 00:09:17.160
It was a spinning,
it just like aired it out.

176
00:09:17.160 --> 00:09:20.357
Okay, so now what I wanna do,
if you have P scale,

177
00:09:20.357 --> 00:09:22.959
what you wanna do is you wanna do P scale.

178
00:09:24.360 --> 00:09:26.150
Just to make sure you
have it in your terminal.

179
00:09:27.230 --> 00:09:29.650
Then you can say, auth login.

180
00:09:29.650 --> 00:09:32.970
And this is gonna log you into the CLI.

181
00:09:32.970 --> 00:09:38.270
And what you should see on your screen
is a bunch of characters like this.

182
00:09:38.270 --> 00:09:40.520
And if you go to your terminal,
you'll see the characters here.

183
00:09:40.520 --> 00:09:41.916
Just make sure they match.

184
00:09:44.061 --> 00:09:48.749
So and if they do match, you can go
back to the browser and hit confirm, and

185
00:09:48.749 --> 00:09:53.230
now you're logged in Cool.

186
00:09:53.230 --> 00:09:56.778
So once you're logged in, for me at least,
becauseI have so many organizations,

187
00:09:56.778 --> 00:09:58.210
I have to switch organizations.

188
00:09:58.210 --> 00:10:01.546
So I need to do that,
need to see the command for that.

189
00:10:01.546 --> 00:10:02.864
What is that?

190
00:10:05.904 --> 00:10:11.016
Let me see, to switch orgs for
me, yeah, so

191
00:10:11.016 --> 00:10:17.980
it would be pscale org,
let me see what the command for that is.

192
00:10:19.520 --> 00:10:25.146
Switch, okay, so pscale org switch and

193
00:10:25.146 --> 00:10:29.100
then frontendmasters.

194
00:10:29.100 --> 00:10:31.268
Okay, cool.
So I switched to the frontendmasters org.

195
00:10:31.268 --> 00:10:33.749
I don't think you have to do
that if you only have one org,

196
00:10:33.749 --> 00:10:36.145
it just signs you into that org,
so you should be good.

197
00:10:36.145 --> 00:10:43.277
Okay, and then the next thing you
wanna do is create a new branch.

198
00:10:43.277 --> 00:10:48.003
So right now, you're just on
the main branch of your database.

199
00:10:48.003 --> 00:10:51.388
And you can stay there, that's totally
fine, but realistically you wanna create

200
00:10:51.388 --> 00:10:53.869
a def branch because we haven't
even made like a schema yet.

201
00:10:53.869 --> 00:10:54.664
So let's do that.

202
00:10:54.664 --> 00:10:59.687
So we can say pscale, and
then we can say branch, and then create,

203
00:10:59.687 --> 00:11:04.804
and then the name of your database
that you created on PlanetScale,

204
00:11:04.804 --> 00:11:07.077
in my case it's called mood.

205
00:11:07.077 --> 00:11:12.350
Remember the name of the database
would be, you find it here.

206
00:11:13.760 --> 00:11:15.390
So here's my org, here's my database.

207
00:11:16.480 --> 00:11:18.535
And then the name of
the branch you wanna create.

208
00:11:18.535 --> 00:11:19.777
I'm just gonna call it Dev.

209
00:11:23.026 --> 00:11:27.194
So create a new branch called Dev, give
me a link to where I can go look at it.

210
00:11:27.194 --> 00:11:30.642
The sweet thing about a branch is that
not only kind of have its own version of

211
00:11:30.642 --> 00:11:32.461
a schema, it can have its own data too.

212
00:11:32.461 --> 00:11:34.990
So you put your own data in there and
it's completely isolated.

213
00:11:34.990 --> 00:11:39.300
And then you can merge these branches and
promote them, and things like that.

214
00:11:39.300 --> 00:11:42.230
And we'll get to that
when we deploy later.

215
00:11:42.230 --> 00:11:44.438
And the last thing we wanna do,
we might as well do it now,

216
00:11:44.438 --> 00:11:46.820
although we don't need to have it now,
but we'll do it.

217
00:11:46.820 --> 00:11:51.290
We're just going to,
We're going to start this.

218
00:11:51.290 --> 00:11:55.979
So if we say pscale connect,
and then the name of

219
00:11:55.979 --> 00:12:00.903
your database, and
then the name of your branch,

220
00:12:00.903 --> 00:12:05.400
and then to connect locally you do --port.

221
00:12:05.400 --> 00:12:09.383
And then just default to 3309,
which is the default port for

222
00:12:09.383 --> 00:12:11.015
most of my SQL databases.

223
00:12:14.475 --> 00:12:20.650
It's telling me that I need to upgrade to,
I'm sorry, my branch isn't ready yet.

224
00:12:20.650 --> 00:12:23.460
I just made the branch, so
I have to let it provision.

225
00:12:23.460 --> 00:12:27.667
You can actually check the status
of it if you go to the dashboard,

226
00:12:27.667 --> 00:12:30.743
click on branches, and
you can kinda see here.

227
00:12:30.743 --> 00:12:37.760
So, I think it might be ready just now,
so let's see.

228
00:12:37.760 --> 00:12:42.365
I'm gonna try to do that again, and boom.

229
00:12:42.365 --> 00:12:48.294
So now your database is on, it's ready
to be connected to from your app.

230
00:12:48.294 --> 00:12:52.578
So you have to connect to it
first in your terminal like this,

231
00:12:52.578 --> 00:12:56.527
have it running, and
then your app can connect to this.

232
00:12:56.527 --> 00:12:57.825
Does that make sense?

233
00:12:57.825 --> 00:13:01.443
So you're connecting a local
instance to the hosted instance,

234
00:13:01.443 --> 00:13:04.060
and then we're gonna
connect our app to this.

235
00:13:06.030 --> 00:13:08.444
The only problems with this
sometimes is if you leave it,

236
00:13:08.444 --> 00:13:10.370
like I'll just leave this running for
days.

237
00:13:10.370 --> 00:13:14.008
Sometimes it'll just time out and
your app will just break, and you're like,

238
00:13:14.008 --> 00:13:14.997
why is my app broken?

239
00:13:14.997 --> 00:13:16.564
Just stop this and start it again.

