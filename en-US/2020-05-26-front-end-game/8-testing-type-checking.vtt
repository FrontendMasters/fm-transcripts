WEBVTT

1
00:00:00.390 --> 00:00:02.850
So here, I show you how to
set up a testing framework.

2
00:00:02.850 --> 00:00:06.130
The one that I choose is Jest,
cuz I think it's a great framework.

3
00:00:06.130 --> 00:00:09.239
You could use Jasmine, Mocha,
AVA, any one of those.

4
00:00:09.239 --> 00:00:11.214
They're all great, node tap, node tape.

5
00:00:11.214 --> 00:00:13.214
This course ended up running
a little bit long, so actually,

6
00:00:13.214 --> 00:00:14.643
we don't end up writing any tests for
that.

7
00:00:14.643 --> 00:00:17.370
Which is not me saying, don't write tests.

8
00:00:17.370 --> 00:00:20.000
Tests are good, you should write them.

9
00:00:20.000 --> 00:00:23.640
But for this particular course, we're not
gonna end up actually writing any tests.

10
00:00:23.640 --> 00:00:26.343
So here I'll show you how to
set up the testing frameworks.

11
00:00:26.343 --> 00:00:28.220
It's actually pretty simple to set up.

12
00:00:28.220 --> 00:00:30.360
I mean, it's actually really just this,
install Jest, and

13
00:00:30.360 --> 00:00:31.730
then put it inside of your scripts.

14
00:00:32.800 --> 00:00:35.190
But we're not gonna end
up going through that.

15
00:00:35.190 --> 00:00:39.192
What I would invite you to do after you
finish this course is go write some tests.

16
00:00:39.192 --> 00:00:41.410
The code is gonna be written
in a pretty testable way.

17
00:00:41.410 --> 00:00:43.355
So I think that's a good stretch goal for
everybody.

18
00:00:43.355 --> 00:00:48.305
And again, along the same lines, there's
a whole section here on TypeScript.

19
00:00:48.305 --> 00:00:49.455
I'm a big TypeScript fan.

20
00:00:49.455 --> 00:00:52.497
I'm technically on the TypeScript team,
as well, at Microsoft.

21
00:00:52.497 --> 00:00:56.216
The VS Code and
the TypeScript team are connected.

22
00:00:56.216 --> 00:00:57.042
I love TypeScript.

23
00:00:57.042 --> 00:01:01.218
I actually would have written
this course in TypeScript, but

24
00:01:01.218 --> 00:01:04.842
at the NI Alexa to make it
more generally applicable.

25
00:01:04.842 --> 00:01:06.872
I didn't want you to have
to learn TypeScript and

26
00:01:06.872 --> 00:01:08.927
how I write code at the same time.

27
00:01:08.927 --> 00:01:12.143
So again, another stretch goal for you is,
after we're done with this course,

28
00:01:12.143 --> 00:01:14.482
I would invite you to go back and
rewrite it in TypeScript.

29
00:01:14.482 --> 00:01:18.397
And if you don't understand TypeScript
yet, there is a great course from

30
00:01:18.397 --> 00:01:22.190
Mike North on Frontend Masters
that will teach you TypeScript.

31
00:01:22.190 --> 00:01:22.830
Yeah, that's it.

32
00:01:22.830 --> 00:01:24.070
I really like TypeScript.

33
00:01:24.070 --> 00:01:29.210
It's gonna prevent even more styles of
bugs, like the undefined is not a function

34
00:01:29.210 --> 00:01:32.040
problem, which I am sure
we have all seen before.

35
00:01:32.040 --> 00:01:35.240
TypeScript will prevent problems
like that, which is great.

36
00:01:35.240 --> 00:01:38.120
At this point, we have reached
the Frontend infra milestones.

37
00:01:38.120 --> 00:01:40.370
So if you go, again, in your project,

38
00:01:40.370 --> 00:01:44.890
you'll see the frontend-infra folder,
right?

39
00:01:44.890 --> 00:01:46.390
That's where we are right now.

40
00:01:48.340 --> 00:01:53.280
So you can go ahead and hop forward to
that if you want to, or fell behind, or

41
00:01:53.280 --> 00:01:53.790
something like that.

