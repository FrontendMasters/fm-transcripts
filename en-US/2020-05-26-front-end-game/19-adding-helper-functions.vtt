WEBVTT

1
00:00:00.280 --> 00:00:04.618
So the next thing I wanna do,
I want you to go back into here.

2
00:00:04.618 --> 00:00:07.124
And inside of gameState,

3
00:00:10.642 --> 00:00:16.816
Inside of tick(), We're gonna put
just one if statement in here.

4
00:00:16.816 --> 00:00:23.591
So if (this.clock === this.wakeTime),

5
00:00:23.591 --> 00:00:29.711
then we're gonna call this.wake();.

6
00:00:32.660 --> 00:00:34.364
All right,
I think that makes sense, right?

7
00:00:34.364 --> 00:00:37.780
As soon as I hit the proper time to wake,
call the wake() function.

8
00:00:40.693 --> 00:00:45.515
So now if we go over here and I click
the middle button, you'll see hatching.

9
00:00:45.515 --> 00:00:49.198
It should go through 3, 4.

10
00:00:49.198 --> 00:00:52.563
And I think on 5,
it should call awoken, right?

11
00:00:54.484 --> 00:00:59.061
So that's our finite-state machine,
transitioning to the next state,

12
00:00:59.061 --> 00:01:00.885
which is what we wanted to do.

13
00:01:04.145 --> 00:01:05.429
Now it doesn't do anything else,

14
00:01:05.429 --> 00:01:08.457
because we haven't programmed it to do
anything else, but eventually it will.

15
00:01:08.457 --> 00:01:11.931
So let's head over to UI.js.

16
00:01:11.931 --> 00:01:16.459
We're gonna make a new file here and
we're gonna call it ui.js.

17
00:01:16.459 --> 00:01:18.849
These are gonna be some helper
functions for modifying the DOM.

18
00:01:21.629 --> 00:01:26.460
And we're gonna make three
named functions here,

19
00:01:26.460 --> 00:01:30.851
export const modFox = function modFox().

20
00:01:34.077 --> 00:01:37.873
And it's gonna take in some
sort of state right there.

21
00:01:37.873 --> 00:01:44.520
And we're gonna say
document.querySelector(.fox).

22
00:01:44.520 --> 00:01:47.733
So we're gonna grab fox and

23
00:01:47.733 --> 00:01:52.210
we're gonna say .className = fox.

24
00:01:53.500 --> 00:01:55.762
And then fox- something.

25
00:01:57.451 --> 00:02:00.460
So now, we can call modFox.

26
00:02:00.460 --> 00:02:02.850
And we can pass in sleeping,
it'll make the fox sleep.

27
00:02:02.850 --> 00:02:05.486
We can pass in celebrating,
it'll make the fox celebrate.

28
00:02:08.055 --> 00:02:13.340
And we'll do the same thing for
scene, export const modScene.

29
00:02:13.340 --> 00:02:16.171
This will change it from
night to day to rain.

30
00:02:20.960 --> 00:02:25.480
ModScene, someone might ask me,
why do I type modFox twice or modScene?

31
00:02:25.480 --> 00:02:28.090
This second one actually is optional.

32
00:02:28.090 --> 00:02:32.369
But if you have a crash and
it crashes because of this function,

33
00:02:32.369 --> 00:02:35.208
this name will show up in the stack trace.

34
00:02:35.208 --> 00:02:39.573
You can see there is a problem with
modScene, instead of they'll say,

35
00:02:39.573 --> 00:02:42.410
there was a problem with a function.

36
00:02:42.410 --> 00:02:44.845
So this is for debuggability purposes.

37
00:02:47.972 --> 00:02:51.132
And this is gonna look really similar,

38
00:02:51.132 --> 00:02:55.648
document.querySelector, I
wanna grab (.game).

39
00:02:57.439 --> 00:03:01.754
And .className = game, and

40
00:03:01.754 --> 00:03:06.419
then ${state}, like that.

41
00:03:06.419 --> 00:03:09.947
And that'll allow us to change the scene.

42
00:03:09.947 --> 00:03:10.888
Yeah, Ken.

43
00:03:10.888 --> 00:03:15.341
&gt;&gt; I'm just curious, what's the difference
between exporting the constant,

44
00:03:15.341 --> 00:03:19.312
that is a function and
just exporting the function directly?

45
00:03:19.312 --> 00:03:21.950
&gt;&gt; So Ken's asked me, what's the
difference between exporting like const

46
00:03:21.950 --> 00:03:25.720
modScene = something versus just
exporting the function directly?

47
00:03:25.720 --> 00:03:28.690
In this case, not a lot [LAUGH].

48
00:03:28.690 --> 00:03:34.182
So I could've done export
function modScene ().

49
00:03:35.940 --> 00:03:41.760
I think I always get confused with, Yeah,

50
00:03:41.760 --> 00:03:44.581
well, let's do modScene2.

51
00:03:44.581 --> 00:03:47.510
This would be totally equivalent and
it would work exactly the same.

52
00:03:48.700 --> 00:03:50.810
I think my brain was just in
this capacity at the moment.

53
00:03:50.810 --> 00:03:57.693
This is the same thing, what's
the difference between function lol,

54
00:03:57.693 --> 00:04:02.641
like this, and
const lol = function(), blah.

55
00:04:02.641 --> 00:04:07.046
Same diff, export const togglePoopBag.

56
00:04:07.046 --> 00:04:10.061
Yep, we wanna be able to turn
that poop bag on and off.

57
00:04:10.061 --> 00:04:17.258
So this one's just gonna be =
function togglePoopBag(show),

58
00:04:19.009 --> 00:04:25.801
And I wanna say document.querySelector,
why did you do that?

59
00:04:25.801 --> 00:04:27.323
Don't do that.

60
00:04:27.323 --> 00:04:30.002
querySelector,

61
00:04:33.195 --> 00:04:40.737
(.poop-bag).classList.toggle,

62
00:04:45.747 --> 00:04:48.160
And we're gonna turn (hidden) on and off.

63
00:04:48.160 --> 00:04:53.700
And so this show is a positive and
hidden is kind of a negative.

64
00:04:53.700 --> 00:04:56.562
So we're gonna actually
do the opposite of show.

65
00:04:56.562 --> 00:05:00.210
So if you are showing it,
remove the hidden class.

66
00:05:00.210 --> 00:05:04.459
If you aren't showing it,
then add the hidden class.

67
00:05:04.459 --> 00:05:06.343
Which is why that
exclamation point is there.

68
00:05:10.464 --> 00:05:14.437
Okay, and then now it makes changing
the scene and changing the fox trivial.

69
00:05:14.437 --> 00:05:19.071
So we can go ahead and
reincorporate that into our gameState.

70
00:05:19.071 --> 00:05:25.989
So let's go back to gameState, And
I want you to head back to startGame().

71
00:05:29.061 --> 00:05:30.550
We can get rid of the hatching there.

72
00:05:33.137 --> 00:05:35.863
And then here, we're gonna say modFox.

73
00:05:35.863 --> 00:05:37.487
And actually it can auto import,

74
00:05:37.487 --> 00:05:40.625
it sees like, I know you have
a named expert called modFox.

75
00:05:40.625 --> 00:05:42.360
So if I just hit Enter right now,

76
00:05:42.360 --> 00:05:45.850
you'll see here it's actually
automatically import to that.

77
00:05:45.850 --> 00:05:50.773
But if not, just go ahead and make sure
you have this line up here, line 1.

78
00:05:50.773 --> 00:05:55.599
So modFox, and
we're gonna make it (fox-egg), right?

79
00:05:55.599 --> 00:06:00.150
And modScene, (day),

80
00:06:00.150 --> 00:06:03.305
if the scene is not currently day,
definitely set it to day.

81
00:06:03.305 --> 00:06:04.255
If it's already day,

82
00:06:04.255 --> 00:06:06.908
then it does nothing to just set
the scene to day no matter what.

83
00:06:12.549 --> 00:06:15.513
Okay, same token,
let's go down the wake(),

84
00:06:15.513 --> 00:06:17.991
we can get rid of this
console log as well.

85
00:06:17.991 --> 00:06:21.903
And we're gonna modFox to idling.

86
00:06:24.130 --> 00:06:31.498
And we're gonna say
this.scene = Math.random(),

87
00:06:35.447 --> 00:06:37.997
&gt; RAIN_CHANCE.

88
00:06:37.997 --> 00:06:41.564
So we're gonna create a new
variable here called RAIN_CHANCE.

89
00:06:43.483 --> 00:06:47.796
And the first scene that
we're gonna deal with is day.

90
00:06:47.796 --> 00:06:52.897
So if it's greater than RAIN_CHANCE,

91
00:06:52.897 --> 00:06:56.952
then we'll make the scene day.

92
00:06:56.952 --> 00:06:59.875
And if it's not,
then we'll make the scene rain.

93
00:06:59.875 --> 00:07:04.374
And then RAIN_CHANCE will be
some number between 0 and 1.

94
00:07:04.374 --> 00:07:09.244
So let's say, I know,
if RAIN_CHANCE is 0.2, Math.random()

95
00:07:09.244 --> 00:07:14.208
gives you a random number between 0 and
1, so it'll be like 0.65.

96
00:07:14.208 --> 00:07:19.480
So if it came back as 6.5,
this will be set to day, right?

97
00:07:19.480 --> 00:07:22.876
If it came back as 0.1,
then it'll be set as rain.

98
00:07:22.876 --> 00:07:25.620
And so this will give a little bit of
randomness to the game that sometimes

99
00:07:25.620 --> 00:07:26.690
it'll rain and sometimes it won't.

100
00:07:28.680 --> 00:07:34.494
So let's go see what that actually
looks like inside of our constants.

101
00:07:34.494 --> 00:07:36.632
So I'm gonna open constants here.

102
00:07:36.632 --> 00:07:41.545
I'm just gonna export const RAIN_CHANCE.

103
00:07:41.545 --> 00:07:44.706
And I set mine at 0.2, so
it rains 20% of the time.

104
00:07:47.401 --> 00:07:50.495
I mean, I'm in Seattle, so I should
probably actually make this to 0.9.

105
00:07:52.230 --> 00:07:58.002
And if we go back to our gameState.js
up at the top, we will import,

106
00:08:01.430 --> 00:08:06.907
{ RAIN_CHANCE } from ./constants;.

107
00:08:06.907 --> 00:08:10.150
Now we have this.scene set to something,
so we have to do something about it.

108
00:08:10.150 --> 00:08:14.785
So what we're gonna do underneath
here in wake() is say modScene,

109
00:08:17.067 --> 00:08:22.143
SCENES, which we need to go
program as well, [this.scene];.

110
00:08:24.716 --> 00:08:28.379
And now we will actually set
the scene to be either day or rain,

111
00:08:28.379 --> 00:08:30.926
depending on what this scene came back as.

112
00:08:32.819 --> 00:08:38.042
So again, let's go back to constants.

113
00:08:38.042 --> 00:08:46.334
And we need to export const SCENES = [day,
or rain].

114
00:08:48.100 --> 00:08:51.320
That should work and
mine actually probably come up rain,

115
00:08:51.320 --> 00:08:53.560
cuz I left it at 0.9.

116
00:08:53.560 --> 00:08:57.514
It should hatch, so
now the the fox is hatching.

117
00:08:57.514 --> 00:09:00.450
And then it might change to rain.

118
00:09:02.602 --> 00:09:04.150
So SCENES is not defined.

119
00:09:04.150 --> 00:09:05.460
So let's go figure out why that was.

120
00:09:07.000 --> 00:09:11.680
So I made SCENES here, and in gameState,
I probably didn't import at the top,

121
00:09:11.680 --> 00:09:12.620
I didn't.

122
00:09:12.620 --> 00:09:16.890
So here at ./constants,
{ RAIN_CHANCE, SCENES }.

123
00:09:16.890 --> 00:09:18.954
All right, so let's try that again.

124
00:09:20.691 --> 00:09:22.896
So there's a 10% chance it'll be day,

125
00:09:22.896 --> 00:09:25.478
there's a 90% chance
that it will be raining.

126
00:09:30.197 --> 00:09:31.815
So you can see there, it's raining.

127
00:09:35.345 --> 00:09:37.245
So you can play around with that.

128
00:09:37.245 --> 00:09:42.308
Let's go back, and
I'm gonna change it back to 0.2.

129
00:09:42.308 --> 00:09:43.788
So it'll rain 20% of the time.

130
00:09:49.480 --> 00:09:51.255
So this is not totally complete for rain,

131
00:09:51.255 --> 00:09:53.396
because if you remember in
my version of the game.

132
00:09:55.319 --> 00:09:58.573
This is the complete version here
that we're looking at that's online.

133
00:10:02.268 --> 00:10:03.820
Our foxy friend.

134
00:10:06.362 --> 00:10:08.189
You can see there, it's raining this time.

135
00:10:08.189 --> 00:10:09.940
He's facing away when it's raining.

136
00:10:10.950 --> 00:10:13.650
And we'll go program that
here in just a second, but

137
00:10:13.650 --> 00:10:16.930
it's still cool that we added rain to
our game and it wasn't that hard, right?

