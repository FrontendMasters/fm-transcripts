WEBVTT

1
00:00:00.060 --> 00:00:04.710
This is more into code style and this is
a point of confusion for a lot of people

2
00:00:04.710 --> 00:00:08.360
because they don't understand why they
need prettier and they need ESLint.

3
00:00:08.360 --> 00:00:11.550
And they overlap,
which makes it confusing, right?

4
00:00:11.550 --> 00:00:15.550
ESLint can take care of some of
the things that prettier takes care of.

5
00:00:15.550 --> 00:00:19.040
And so people wonder,
why do I need both tools?

6
00:00:19.040 --> 00:00:24.340
And the way that you should split these in
your head is, prettier is very mechanical.

7
00:00:24.340 --> 00:00:25.730
it's very syntactical.

8
00:00:25.730 --> 00:00:28.040
It's very much, is there a space here?

9
00:00:28.040 --> 00:00:29.490
Does this need parentheses?

10
00:00:29.490 --> 00:00:35.090
It's very focused on those details,
prettier does not care at all.

11
00:00:35.090 --> 00:00:36.210
Do you use this variable?

12
00:00:36.210 --> 00:00:37.900
Is this variable well named?

13
00:00:37.900 --> 00:00:39.615
Is this function too long?

14
00:00:39.615 --> 00:00:43.080
I'm I using great accessibility practices?

15
00:00:43.080 --> 00:00:44.545
That's the kind of stuff that ESLint.

16
00:00:44.545 --> 00:00:45.860
ESLint is about the style.

17
00:00:45.860 --> 00:00:47.780
It's about what the code does.

18
00:00:47.780 --> 00:00:49.580
And prettier is about
what how the code looks.

19
00:00:49.580 --> 00:00:52.140
So that's kind of the way
that you can split it.

20
00:00:52.140 --> 00:00:56.840
And again, it's confusing because ESLint
can worry about some of the how it looks

21
00:00:56.840 --> 00:01:02.829
by itself, but it's not nearly
as good at it as prettier is.

22
00:01:02.829 --> 00:01:07.420
So we're gonna set up prettier,
or we've already set up prettier,

23
00:01:07.420 --> 00:01:10.130
we're gonna set up ESLint to take
care of the code style stuff and

24
00:01:10.130 --> 00:01:11.880
ignore the code formatting stuff.

25
00:01:13.530 --> 00:01:16.910
So I talked a bit about code style and
some of my rules about code style and

26
00:01:16.910 --> 00:01:19.810
how I don't like introducing
too much friction.

27
00:01:19.810 --> 00:01:22.500
So my rules are very permissive.

28
00:01:22.500 --> 00:01:26.100
If you've taken previous versions of my
courses, especially my react courses,

29
00:01:26.100 --> 00:01:30.220
I've used pretty strict Lint rules
before like the Airbnb rules, or

30
00:01:30.220 --> 00:01:32.916
the standard JS rules.

31
00:01:32.916 --> 00:01:36.329
And I've kind of moved away from that
because I found them too restricting for

32
00:01:36.329 --> 00:01:36.915
no purpose.

33
00:01:38.531 --> 00:01:42.802
I like something that people is kind of
like to pair it is like it's your coach

34
00:01:42.802 --> 00:01:44.560
look like one person wrote it.

35
00:01:44.560 --> 00:01:46.565
And actually I don't
agree with that anymore.

36
00:01:46.565 --> 00:01:49.763
I used to, but I don't agree with that
anymore because who cares if it was

37
00:01:49.763 --> 00:01:51.400
written by one person, it wasn't.

38
00:01:51.400 --> 00:01:53.170
And that's okay.

39
00:01:53.170 --> 00:01:57.500
As long as your code is readable, readable
in the sense of if I write some code, and

40
00:01:57.500 --> 00:02:01.390
then I pass it off to Krista,
and Krista reads the code.

41
00:02:01.390 --> 00:02:05.060
If Krista can understand what I wrote,
then it's successful.

42
00:02:05.060 --> 00:02:07.820
It doesn't matter if it looks
like Krista wrote it or not.

43
00:02:07.820 --> 00:02:13.320
So, that's why I kind of
have trended backwards into

44
00:02:13.320 --> 00:02:17.030
let's make the linting rules as permissive
as possible so that it catches bugs, and

45
00:02:17.030 --> 00:02:19.780
it catches code that we don't want to
go out and then it does nothing else.

46
00:02:19.780 --> 00:02:22.560
So we're gonna use a tool called ESLint.

47
00:02:22.560 --> 00:02:23.880
I really quite like this tool.

48
00:02:25.450 --> 00:02:31.330
So we'll come back to our command line
here, I'm in, again inside of my fox game.

49
00:02:33.900 --> 00:02:39.508
And I'm gonna say mpm install-D eslint,

50
00:02:39.508 --> 00:02:43.404
eslint-plugin-import and

51
00:02:43.404 --> 00:02:47.470
eslint-config-prettier.

52
00:02:47.470 --> 00:02:50.820
So eslint is very extensible, it allows
you to do a lot of things with it.

53
00:02:50.820 --> 00:02:56.840
So I'm gonna bring in some
pre-made config for it.

54
00:02:56.840 --> 00:02:59.268
So I'm gonna type that, it will
take a second to install all of it.

55
00:03:04.863 --> 00:03:06.440
You will see some errors, that's fine.

56
00:03:07.470 --> 00:03:09.910
So you can see 33 packages installed,
great.

57
00:03:11.970 --> 00:03:13.990
And then we're going to
make a new file here,

58
00:03:13.990 --> 00:03:19.050
and we're gonna call it.eslintRC.JSON.

59
00:03:19.050 --> 00:03:22.663
Again, it's very important and
it needs to be in the root directory here.

60
00:03:22.663 --> 00:03:27.176
So .eslintRC.JSON.

61
00:03:30.003 --> 00:03:33.498
Okay, I'm gonna save that, yes use dot.

62
00:03:37.707 --> 00:03:40.210
Okay, eslintRC.JSON.

63
00:03:40.210 --> 00:03:45.640
I'm going to put the first thing here
is extends, and it's gonna be an array.

64
00:03:45.640 --> 00:03:53.580
And inside of this array I'm gonna
put eslint, colon recommended.

65
00:03:53.580 --> 00:03:56.390
So these are all the rules that
ESLint itself recommends for you,

66
00:03:56.390 --> 00:04:01.070
which is their bug catching things and
they're not stylistic things.

67
00:04:01.070 --> 00:04:04.580
So they're more like, you created
a variable then you never used it.

68
00:04:04.580 --> 00:04:06.190
You should probably not do that.

69
00:04:06.190 --> 00:04:07.150
That's something that you should,

70
00:04:07.150 --> 00:04:09.560
you definitely, you don't want to
have variables that you never use.

71
00:04:09.560 --> 00:04:11.420
So that's a good thing to have in there.

72
00:04:11.420 --> 00:04:15.040
Or you're referring to
a variable that does not exist.

73
00:04:15.040 --> 00:04:16.090
That's gonna be a bug.

74
00:04:16.090 --> 00:04:17.590
It catches up for you right away.

75
00:04:17.590 --> 00:04:19.550
It helps you go faster when
you're writing your own code.

76
00:04:22.180 --> 00:04:23.890
Here's another one called plugin.

77
00:04:25.070 --> 00:04:28.170
Colon import,
which is the one that we just installed.

78
00:04:28.170 --> 00:04:31.520
When a new plugin colon import/errors.

79
00:04:31.520 --> 00:04:34.550
So this is gonna use this plugin to say

80
00:04:34.550 --> 00:04:37.400
you're trying to import
a file that doesn't exist.

81
00:04:37.400 --> 00:04:41.440
Or you're trying to import a module
inside of this file, it does exist but

82
00:04:41.440 --> 00:04:44.370
the module that you're trying
to import doesn't exist.

83
00:04:44.370 --> 00:04:46.490
So it catches these kind
of errors around imports.

84
00:04:46.490 --> 00:04:50.060
And then the last one here is prettier.

85
00:04:50.060 --> 00:04:56.650
So again, I said prettier can, or ESLint
can do things like detect bad indentation,

86
00:04:56.650 --> 00:05:00.400
but we don't want it to do that because
prettier is gonna worry about that.

87
00:05:00.400 --> 00:05:03.340
So this prettier set of rules
which we installed the ESLint,

88
00:05:03.340 --> 00:05:06.820
config prettier, turns off all the rules
that we don't want to have it do.

89
00:05:06.820 --> 00:05:08.599
That's what all that does.

90
00:05:09.950 --> 00:05:11.528
Okay, then we have rules.

91
00:05:14.417 --> 00:05:17.560
This is where you can actually turn on and
off specific rules.

92
00:05:17.560 --> 00:05:22.860
And the one that bothers me that I always
turn off, there's one called no console.

93
00:05:24.122 --> 00:05:27.430
I console.log all the time and
I hate that it gives me Arizona.

94
00:05:27.430 --> 00:05:29.160
So I make it worn.

95
00:05:29.160 --> 00:05:34.120
So if you do no-console and then you put
it out one instead of airing it warns and

96
00:05:34.120 --> 00:05:36.850
says like,
are you sure you want to commit this?

97
00:05:37.900 --> 00:05:38.750
So that's what that does.

98
00:05:38.750 --> 00:05:40.880
If I wanted to turn it off,
I think you just put it at zero and

99
00:05:40.880 --> 00:05:44.510
then it would just not tell
you at all about console.logs.

100
00:05:44.510 --> 00:05:47.340
But I like it at one just so
I'm aware that I'm doing something.

101
00:05:49.830 --> 00:05:54.124
Okay, we have to tell it that there's
a plugin, and it's called import.

102
00:05:54.124 --> 00:05:59.671
That New one called parser options,

103
00:05:59.671 --> 00:06:04.145
because we're gonna be using
recent JavaScript and by default,

104
00:06:04.145 --> 00:06:08.390
ESLint doesn't understand
recent JavaScript.

105
00:06:08.390 --> 00:06:10.722
So we're going to say ECMO version and

106
00:06:10.722 --> 00:06:16.280
I'm gonna do 2018 because we're not going
to use anything beyond that right now.

107
00:06:16.280 --> 00:06:19.006
And the source type is modules.

108
00:06:21.123 --> 00:06:24.070
That's we're gonna be using
ies six style imports.

109
00:06:24.070 --> 00:06:25.094
That's what this does.

110
00:06:29.880 --> 00:06:31.450
Which I'll explain modules
when we get there.

111
00:06:33.000 --> 00:06:34.810
And the last thing to tell ESLint is like,

112
00:06:34.810 --> 00:06:36.720
you have to tell it where
you're writing code.

113
00:06:36.720 --> 00:06:40.520
And I'm gonna say we're
going to use es six.

114
00:06:40.520 --> 00:06:44.510
So true on es six,
which is like recent style JavaScript.

115
00:06:44.510 --> 00:06:46.670
We're gonna be inside of the browser.

116
00:06:48.980 --> 00:06:50.960
And some of it will be writing stuff for
node.

117
00:06:52.080 --> 00:06:53.370
So there's put that to true as well.

118
00:06:53.370 --> 00:06:54.120
And that's it.

119
00:06:54.120 --> 00:06:55.480
That's all we need for ESLint.

120
00:06:55.480 --> 00:06:57.940
Now our code is going to be
automatically printed for us.

121
00:07:00.270 --> 00:07:02.260
So again,
I want you to go into extensions.

122
00:07:02.260 --> 00:07:04.200
I want you to type in ESlint here.

123
00:07:04.200 --> 00:07:08.026
And there's one up here from Dirk Beymer,

124
00:07:08.026 --> 00:07:12.620
I'm sure I'm saying that wrong,
sorry Derrick.

125
00:07:12.620 --> 00:07:14.310
Click on that one, should look like this.

126
00:07:14.310 --> 00:07:16.570
Almost nine million downloads,
go ahead and just install that.

127
00:07:18.060 --> 00:07:21.800
And now when I go and write code and
it's bad, it's gonna say this is bad.

128
00:07:21.800 --> 00:07:23.800
You should fix it and
it's gonna do it inline so

129
00:07:23.800 --> 00:07:27.380
I can iterate it really quickly,
so it's super helpful.

130
00:07:27.380 --> 00:07:30.490
And again in the course notes here,
if you want to know how to do

131
00:07:30.490 --> 00:07:33.960
it from the command line, I show you that,
that's inside of the course notes.

132
00:07:33.960 --> 00:07:36.180
You can take a look and that's it.

