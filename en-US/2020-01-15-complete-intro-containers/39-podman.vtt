WEBVTT

1
00:00:00.074 --> 00:00:01.949
So let's try Podman now.

2
00:00:01.949 --> 00:00:04.317
We're gonna move on from
Buildah into Podman.

3
00:00:07.755 --> 00:00:09.010
Which is the next section here.

4
00:00:11.210 --> 00:00:15.700
So now I want to run this container and
I want it to expose port 3000 just like I

5
00:00:15.700 --> 00:00:19.380
was doing Docker run node web service,
right?

6
00:00:19.380 --> 00:00:24.860
So here, you'll notice that podman is also
installed on this particular container.

7
00:00:24.860 --> 00:00:28.140
But if you need to install it, I left you
instructions on how to do that as well.

8
00:00:29.460 --> 00:00:33.560
So what I'm going to do here is
I'm going to say podman run,

9
00:00:33.560 --> 00:00:36.390
this one you have to give
it a cgroup manager, right?

10
00:00:36.390 --> 00:00:39.320
For the control groups because it
doesn't necessarily have one by default.

11
00:00:39.320 --> 00:00:42.064
Whereas Docker does, so

12
00:00:42.064 --> 00:00:47.165
I'm gonna say cgroup-manager, cgroupfs.

13
00:00:47.165 --> 00:00:53.950
And then I'm gonna tell it -p 3000:3000,
which is going to expose that port for us.

14
00:00:55.450 --> 00:01:04.041
And then I'm gonna tell it to
look on localhost/my-app-buildah.

15
00:01:04.041 --> 00:01:07.058
Otherwise if I don't tell it the local
host part, it's gonna go out and try and

16
00:01:07.058 --> 00:01:08.720
find on Docker Hub or something like that.

17
00:01:11.110 --> 00:01:14.786
Okay and then this will have Podman
execute this container for us.

18
00:01:17.493 --> 00:01:18.076
And there you go.

19
00:01:18.076 --> 00:01:19.770
You can see that this is now running.

20
00:01:19.770 --> 00:01:25.655
If I click here,
Open Link And there you go.

21
00:01:25.655 --> 00:01:29.546
This is running our node service
inside of that Buildah container,

22
00:01:29.546 --> 00:01:31.129
which I exposed that port.

23
00:01:31.129 --> 00:01:34.809
And then Podman is actually the one
executing that container within the Docker

24
00:01:34.809 --> 00:01:35.431
container.

25
00:01:38.041 --> 00:01:40.365
I recognize that there's a lot
of levels to this, right?

26
00:01:40.365 --> 00:01:43.260
Which is kind of the nature of the beast,
sorry.

27
00:01:43.260 --> 00:01:45.933
I'm not telling you that Buildah and
Podman are any better than Docker.

28
00:01:45.933 --> 00:01:49.500
I'm not telling you that Docker is
any better than Buildah and Podman.

29
00:01:49.500 --> 00:01:53.364
There are various different use cases
where one might be better for you.

30
00:01:53.364 --> 00:01:57.033
And keep in mind that there's more than
just Buildah and Podman and Docker.

31
00:01:57.033 --> 00:01:59.142
There's also things like Rocket, right,

32
00:01:59.142 --> 00:02:01.544
Rocket's another one
that does similar things.

33
00:02:01.544 --> 00:02:03.635
And it's from CoreOS and
it works really well.

34
00:02:03.635 --> 00:02:07.585
There's a bunch of different engines for
containers.

35
00:02:09.425 --> 00:02:11.905
If you're just getting starting out,
which I'm guessing you are,

36
00:02:11.905 --> 00:02:15.125
if you're watching this course,
I'd recommend sticking to Docker.

37
00:02:15.125 --> 00:02:17.305
The nice thing about Docker
is it's been around for so

38
00:02:17.305 --> 00:02:19.873
long and there's so many people
using it that you can Google for

39
00:02:19.873 --> 00:02:21.822
anything and
it's going to be on the Internet.

40
00:02:21.822 --> 00:02:25.097
Someone else is going to have your problem
and it's gonna be able to be fixed, right?

41
00:02:25.097 --> 00:02:28.044
Whereas Buildah and Podman,
one, they're still quite new.

42
00:02:28.044 --> 00:02:29.883
So they're still changing a lot.

43
00:02:29.883 --> 00:02:35.026
And there's just not as much
documentation out there for it.

44
00:02:35.026 --> 00:02:37.680
So keep that in mind when you're choosing.

45
00:02:41.897 --> 00:02:46.706
So something else that's pretty cool,
that I think is pretty cool.

46
00:02:46.706 --> 00:02:49.587
You can actually use Buildah,
so just pretend for

47
00:02:49.587 --> 00:02:54.195
a second that I was on a Linux computer or
I was here in WSL or something like that.

48
00:02:54.195 --> 00:02:59.199
I can actually have Buildah push into
my Docker registry, my local one.

49
00:02:59.199 --> 00:03:02.755
And then I can use Docker to
execute the Buildah container which

50
00:03:02.755 --> 00:03:03.903
is really cool too.

51
00:03:03.903 --> 00:03:08.252
So again, those things work really
well together side by side.

52
00:03:08.252 --> 00:03:09.581
So I actually left the command in there.

53
00:03:09.581 --> 00:03:13.032
If you're working with Linux,
and I'll show you here.

54
00:03:16.144 --> 00:03:18.842
Down here in Podman.

55
00:03:18.842 --> 00:03:21.984
So if you ran this and
you had Docker on the same level, right,

56
00:03:21.984 --> 00:03:26.052
this wouldn't work in my Mac OS one right
now because it's within a container.

57
00:03:26.052 --> 00:03:29.519
So it actually can't see Docker.

58
00:03:29.519 --> 00:03:32.397
If I say buildah push
localhost/my-app-buildah

59
00:03:32.397 --> 00:03:35.151
docker-daemon-my-app-buildah:latest.

60
00:03:35.151 --> 00:03:38.356
This would actually push it
into my Docker container.

61
00:03:38.356 --> 00:03:41.609
I think what you need to do is you need to

62
00:03:41.609 --> 00:03:46.001
expose the Docker daemon
inside of the container.

63
00:03:46.001 --> 00:03:47.553
So I'm gonna exit out of this.

64
00:03:51.716 --> 00:03:55.428
We've gotta make this
even more complicated.

65
00:03:55.428 --> 00:03:59.735
We're gonna say

66
00:03:59.735 --> 00:04:08.042
-v /var/run/docker.sock

67
00:04:08.042 --> 00:04:16.659
:/var/run/docker.sock.

68
00:04:16.659 --> 00:04:19.733
Okay, now I should be able
to come here and say,

69
00:04:25.766 --> 00:04:30.468
Back here in Buildah cuz I killed
all the the registry that it had.

70
00:04:30.468 --> 00:04:33.029
So I have to rebuild
the buildah container.

71
00:04:33.029 --> 00:04:42.627
So I'm gonna say buildah,
bud -f ./Dockerfile

72
00:04:49.081 --> 00:04:49.999
Where am I?

73
00:04:49.999 --> 00:04:51.301
I have to be inside of a source.

74
00:04:53.041 --> 00:04:58.248
Okay, buildah bud -f

75
00:04:58.248 --> 00:05:02.908
./Dockerfile -t

76
00:05:02.908 --> 00:05:08.395
my-app-buildah..

77
00:05:08.395 --> 00:05:14.802
Okay, that'll build

78
00:05:14.802 --> 00:05:21.213
my Docker container.

79
00:05:21.213 --> 00:05:23.012
And now, I actually realize
that I gave it a volume.

80
00:05:23.012 --> 00:05:25.094
So it actually did keep this between runs.

81
00:05:29.250 --> 00:05:32.273
But nonetheless, okay,
that should all work.

82
00:05:32.273 --> 00:05:34.102
That's all stored.

83
00:05:34.102 --> 00:05:39.045
And then here,
it should work if I say, buildah push,

84
00:05:39.045 --> 00:05:43.028
right, cuz we can push
it out to a registry.

85
00:05:43.028 --> 00:05:47.665
Localhost/my-app-buildah, so

86
00:05:47.665 --> 00:05:51.555
I'm pushing that container.

87
00:05:51.555 --> 00:05:55.743
And we're going to push it to

88
00:05:55.743 --> 00:06:02.730
the docker-dae:my app-buildah:latest.

89
00:06:08.361 --> 00:06:10.954
So now because I opened that connection,

90
00:06:10.954 --> 00:06:15.420
that bind mount between my Docker host and
into the container.

91
00:06:15.420 --> 00:06:18.360
Now Buildah can actually
push out of the container

92
00:06:18.360 --> 00:06:21.790
into my local Docker registry
of Docker desktop running.

93
00:06:21.790 --> 00:06:26.598
And then I'm going to be able to
execute this buildah container

94
00:06:26.598 --> 00:06:30.148
outside of the inside of
the host with Docker.

95
00:06:34.183 --> 00:06:38.304
So what you see here this is
actually it copying the container,

96
00:06:38.304 --> 00:06:40.807
out of the container and into Docker.

97
00:06:45.552 --> 00:06:49.577
This isn't going to the network, right,
this is just staying within my container.

98
00:06:49.577 --> 00:06:56.726
So now I should be able to say,
docker run, and notice

99
00:06:56.726 --> 00:07:01.517
this is just inside of my MAC, right,
I'm not inside of the container now.

100
00:07:01.517 --> 00:07:06.454
-it my-app-buildah

101
00:07:06.454 --> 00:07:11.820
bash and here you go.

102
00:07:11.820 --> 00:07:15.430
I am now inside of the container running
Docker that I built with Buildah

103
00:07:17.720 --> 00:07:18.550
and same thing here.

104
00:07:18.550 --> 00:07:23.454
If I say my-app-buildah and

105
00:07:23.454 --> 00:07:28.758
I say -p 3000:3000.

106
00:07:28.758 --> 00:07:33.434
This should execute my node.

107
00:07:33.434 --> 00:07:36.315
Something's already bound on that.

108
00:07:36.315 --> 00:07:38.639
So let's just say 3001.

109
00:07:46.362 --> 00:07:50.228
So now if I come over here and
say local host 3001.

110
00:07:53.679 --> 00:07:57.912
Now I'm actually running the node server
that I built with the Buildah tool chain,

111
00:07:57.912 --> 00:07:59.494
but I'm using Docker to do it.

112
00:07:59.494 --> 00:08:03.242
So this is kind of proving my point
that Buildah does not build Docker

113
00:08:03.242 --> 00:08:05.890
containers it builts OCI containers,
right?

114
00:08:05.890 --> 00:08:07.770
But they both work interchangeably.

115
00:08:07.770 --> 00:08:09.690
And I could build a Docker container.

116
00:08:09.690 --> 00:08:12.435
And I could use Podman
to execute that as well.

117
00:08:14.792 --> 00:08:16.562
So that's pretty cool.

118
00:08:16.562 --> 00:08:17.958
I did not expect that to work.

119
00:08:17.958 --> 00:08:21.640
I'm gonna re-emphasize the point
that someone might ask,

120
00:08:21.640 --> 00:08:25.200
why would I use Buildah and
Podman over a Docker right now?

121
00:08:25.200 --> 00:08:29.760
And I think the real strongest
reason is to not use Docker.

122
00:08:29.760 --> 00:08:33.830
And some people might have strong opinions
of why they would not wanna use Docker.

123
00:08:33.830 --> 00:08:35.770
I don't necessarily know what they are.

124
00:08:35.770 --> 00:08:39.334
But it does encourage healthy competition
to use some of these competitors and

125
00:08:39.334 --> 00:08:40.906
not be locked into one ecosystem.

126
00:08:40.906 --> 00:08:44.966
So,not that I think Docker are bad people,
I think actually they're doing really

127
00:08:44.966 --> 00:08:47.933
great things and
they're good members of the community so.

