WEBVTT

1
00:00:00.260 --> 00:00:02.073
What are containers?

2
00:00:02.073 --> 00:00:05.180
So that's probably more simple
than some of you may think.

3
00:00:05.180 --> 00:00:07.270
Some of you might already know this,
the answer to this question.

4
00:00:07.270 --> 00:00:09.420
But there's actually no such thing,

5
00:00:09.420 --> 00:00:12.386
one single thing that is
a Linux container, right?

6
00:00:12.386 --> 00:00:16.941
We like to have this idea that a container
is this, we say, all right, Linux,

7
00:00:16.941 --> 00:00:19.940
containerify that and
it just works, right?

8
00:00:19.940 --> 00:00:21.699
And it's not quite that simple.

9
00:00:21.699 --> 00:00:25.091
A Linux container really is
actually a combination of at

10
00:00:25.091 --> 00:00:28.730
least three different kernel
features within Linux.

11
00:00:28.730 --> 00:00:31.663
That kind of culminate in this
idea of what a container is.

12
00:00:34.956 --> 00:00:37.945
And again, this is gonna be
all here in the command line.

13
00:00:37.945 --> 00:00:41.560
So if you have any issues with it,
go ahead and check out Jem's course on it.

14
00:00:41.560 --> 00:00:42.340
It's a great course.

15
00:00:44.990 --> 00:00:50.235
So, Before we kinda start getting
into what is a container,

16
00:00:50.235 --> 00:00:53.312
I'm going to give you a little bit the
history of why we need containers, right?

17
00:00:53.312 --> 00:00:57.995
Kind of lead you through the journey
of how we got to where we are today.

18
00:00:57.995 --> 00:01:00.967
So I want you to picture for a moment that

19
00:01:00.967 --> 00:01:06.670
you are head of a engineering
team at a big corporation, right?

20
00:01:06.670 --> 00:01:08.127
And you need to host
your website somewhere.

21
00:01:08.127 --> 00:01:11.087
I don't know how you became a head of
engineering with no website already.

22
00:01:11.087 --> 00:01:17.228
But this is the situation that we find
ourselves in for this hypothetical, okay?

23
00:01:17.228 --> 00:01:21.369
So if you had been 15 years ago, or
20 years ago, doing this, you should start

24
00:01:21.369 --> 00:01:24.871
thinking about, all right, well,
I need to buy a bunch of servers.

25
00:01:24.871 --> 00:01:27.490
And I need to figure out where
my data center's gonna go.

26
00:01:27.490 --> 00:01:31.283
And I need to hire a bunch of people
that are gonna manage racking and

27
00:01:31.283 --> 00:01:33.471
stacking servers, stuff like that.

28
00:01:33.471 --> 00:01:36.810
As I call it here,
you're working with the bare metal, right?

29
00:01:36.810 --> 00:01:39.207
So you're actually going to Dell,
you're going to EMC.

30
00:01:39.207 --> 00:01:43.575
You're going to some of these
really big cloud providers.

31
00:01:43.575 --> 00:01:46.222
Or not cloud providers,
but hardware providers and

32
00:01:46.222 --> 00:01:49.484
saying I need x amount of servers and
I need these kind of things.

33
00:01:49.484 --> 00:01:52.800
And then you have to worry about
physical security, the data center.

34
00:01:52.800 --> 00:01:54.239
You have to worry about the temperature.

35
00:01:54.239 --> 00:01:58.980
You have to worry about upgrading things
that that are no longer powerful enough.

36
00:01:58.980 --> 00:02:01.100
You have to worry about all
sorts of stuff like this.

37
00:02:02.350 --> 00:02:06.910
For me, the developer that just wants to
sit here and write my JavaScripts all day,

38
00:02:06.910 --> 00:02:10.382
that sounds like something I very
much do not wanna do, right?

39
00:02:10.382 --> 00:02:12.130
There are trade-offs here, right?

40
00:02:12.130 --> 00:02:13.822
There are still reasons
that people do this, right?

41
00:02:13.822 --> 00:02:16.090
There are still lots of
company running on bare metal.

42
00:02:16.090 --> 00:02:18.865
I imagine many of your companies are still
running on bare metal servers, right?

43
00:02:18.865 --> 00:02:20.640
It's more secure, right?

44
00:02:20.640 --> 00:02:22.560
Because you are not sharing
anything with anyone, right?

45
00:02:22.560 --> 00:02:24.160
You control everything.

46
00:02:24.160 --> 00:02:27.180
You control your entire destiny.

47
00:02:27.180 --> 00:02:30.368
If you have these economies of scale,
it can be cheaper for you,

48
00:02:30.368 --> 00:02:32.920
right, than doing something
in the public cloud.

49
00:02:32.920 --> 00:02:37.777
And if you have anything that's
extremely performance sensitive,

50
00:02:37.777 --> 00:02:42.060
you can tune your boxes to be as
whatever you need out of them.

51
00:02:42.060 --> 00:02:46.630
But it comes with a lot of problems,
this is expensive, right?

52
00:02:46.630 --> 00:02:48.556
You have to buy more capacity
than you can use, right?

53
00:02:48.556 --> 00:02:50.019
Because if you're hitting your capacity,

54
00:02:50.019 --> 00:02:51.798
that means that you're
dropping stuff on the floor,

55
00:02:51.798 --> 00:02:54.830
which means that you always have to
have more capacity than you're using.

56
00:02:54.830 --> 00:02:56.333
And a lot of has seasonality to our apps,
right?

57
00:02:56.333 --> 00:03:00.507
So if you have enough capacity to handle
Singles Day or Black Friday, that means

58
00:03:00.507 --> 00:03:04.390
you have a bunch of service just sitting
idle the rest of the year, right?

59
00:03:05.520 --> 00:03:08.002
You have to worry about stuff breaking,
right?

60
00:03:08.002 --> 00:03:11.550
Sometimes RAM just goes bad, right?

61
00:03:11.550 --> 00:03:12.721
And then you have to go in and fix that.

62
00:03:12.721 --> 00:03:14.790
That's also still your problem now.

63
00:03:16.818 --> 00:03:19.830
And let's say you need to
buy more capacity, right?

64
00:03:19.830 --> 00:03:23.229
It's not like where you can just say, hey,
Kubernetes, give me another node, right?

65
00:03:23.229 --> 00:03:24.820
And you just have one.

66
00:03:24.820 --> 00:03:28.811
You have to call up Dell again and
say hey, I need more servers, right?

67
00:03:28.811 --> 00:03:32.296
I actually thought about writing
a Kubernetes provisioner that made

68
00:03:32.296 --> 00:03:33.804
a purchase request, right?

69
00:03:33.804 --> 00:03:35.931
And then eventually when it comes back and
comes online,

70
00:03:35.931 --> 00:03:37.680
then it spins up your node, right?

71
00:03:37.680 --> 00:03:38.395
That's the worst idea.

72
00:03:38.395 --> 00:03:40.790
It would be terribly expensive and
that's why I have not written it.

73
00:03:40.790 --> 00:03:41.948
I also don't have enough money to do that.

74
00:03:41.948 --> 00:03:46.950
So, Yeah, that only takes a month or
two, right?

75
00:03:46.950 --> 00:03:47.598
It's pretty much instant.

76
00:03:47.598 --> 00:03:52.620
[LAUGH] So
hopefully you're getting the point now.

77
00:03:52.620 --> 00:03:54.573
Bare metal has its ups, right?

78
00:03:54.573 --> 00:03:56.190
But it has a lot of downsides.

79
00:03:56.190 --> 00:04:00.799
There's a reason why a lot of companies
don't do bare metal service anymore.

80
00:04:00.799 --> 00:04:03.440
So let's get down into
virtual machines then.

81
00:04:04.440 --> 00:04:05.830
So if I have a Web server,

82
00:04:05.830 --> 00:04:09.416
I'm running it on one server
blade within my data farm, right?

83
00:04:09.416 --> 00:04:14.020
I'm running everything on bare
metal operating systems like that.

84
00:04:14.020 --> 00:04:17.382
Well, what would be really cool is I could
actually just have a farm of server and

85
00:04:17.382 --> 00:04:20.508
then I could have an arbitrary amount
of servers running on them, right?

86
00:04:20.508 --> 00:04:23.810
And that's kind of where virtual
machines come into the picture, right?

87
00:04:23.810 --> 00:04:27.609
So I can have one server but I can have
multiple different operating systems

88
00:04:27.609 --> 00:04:30.396
running at the same time
as virtual machines, right?

89
00:04:30.396 --> 00:04:33.530
They're virtual servers, in that sense.

90
00:04:33.530 --> 00:04:36.763
And that gets to be very helpful
because now I can scale up and

91
00:04:36.763 --> 00:04:39.876
scale down within my capacity
of my data center, right?

92
00:04:39.876 --> 00:04:43.765
And that that's helpful because then
I just have to manage capacity.

93
00:04:43.765 --> 00:04:45.860
Cuz if I have one team go offline,

94
00:04:45.860 --> 00:04:49.980
they take down their service,
I can then reclaim that immediately and

95
00:04:49.980 --> 00:04:53.160
add more stuff to it, right from this
other team that's coming online, right?

96
00:04:53.160 --> 00:04:58.031
So this kind of virtualization strategy
allows us to separate VMs, right?

97
00:04:58.031 --> 00:05:02.067
At this point, we're still having to
manage our own hardware and we still have

98
00:05:02.067 --> 00:05:06.180
to manage our operating systems, and
drivers, and all that kinda stuff.

99
00:05:06.180 --> 00:05:09.143
But, at least, we can scale up and
kinda scale down within our own capacity.

100
00:05:12.200 --> 00:05:15.060
So, let's talk about something
else that this solves for us.

101
00:05:15.060 --> 00:05:19.075
Let's say that now we're running
a hosting provider, right?

102
00:05:19.075 --> 00:05:21.553
Some sort of shared hosting provider.

103
00:05:21.553 --> 00:05:23.781
Let's say I had two different clients and

104
00:05:23.781 --> 00:05:27.532
I just dropped them both with
root access to the same computer.

105
00:05:27.532 --> 00:05:30.377
And they're just say, all right,
now run your servers.

106
00:05:30.377 --> 00:05:32.854
Now if you're skin is starting to crawl,
good.

107
00:05:32.854 --> 00:05:35.605
It means that you already
understand some of this, right?

108
00:05:35.605 --> 00:05:38.845
But if your skin's not crawling,
let me make it crawl for you.

109
00:05:38.845 --> 00:05:41.535
So let's imagine that you
have two sort of providers.

110
00:05:41.535 --> 00:05:44.015
Let's say one them's name is Coca-Cola and
one of them's name is Pepsi, right?

111
00:05:44.015 --> 00:05:51.365
And Coca-Cola decides to store on
their server recipe.txt, right?

112
00:05:51.365 --> 00:05:52.701
Now, hopefully you can see
what I'm getting at here.

113
00:05:52.701 --> 00:05:56.871
If we have Pepsi on the same server,
they could just change directory over into

114
00:05:56.871 --> 00:06:00.270
Coca-Cola's directory and
say secret recipe.

115
00:06:00.270 --> 00:06:01.499
I got it, great.

116
00:06:01.499 --> 00:06:03.990
I don't know why I made Pepsi
the bad guy in this situation.

117
00:06:03.990 --> 00:06:04.729
But they're definitely the bad guy, right?

118
00:06:04.729 --> 00:06:12.860
[LAUGH] All right, so
this ends up being not great, right?

119
00:06:12.860 --> 00:06:16.335
So that's why virtualization can also
help too because now they're in different

120
00:06:16.335 --> 00:06:17.250
operating systems.

121
00:06:17.250 --> 00:06:18.640
They can't even see each other, right?

122
00:06:18.640 --> 00:06:21.330
They don't even know that
they're on the same server.

123
00:06:21.330 --> 00:06:23.767
To them they just, all right,
here's a copy of Ubuntu.

124
00:06:23.767 --> 00:06:27.110
You're just chilling out on Ubuntu and
that's it, right?

125
00:06:29.320 --> 00:06:30.594
We still have problems here though, right?

126
00:06:30.594 --> 00:06:35.348
If I if I'm running a hosting provider and
Coca-Cola and

127
00:06:35.348 --> 00:06:39.111
Pepsi are on VMs on the same computer,
well,

128
00:06:39.111 --> 00:06:44.840
if I'm Pepsi I can just say run
a fork bomb within my particular VM.

129
00:06:44.840 --> 00:06:50.050
Which consumes all of the resources, and
CPU, and memory, and all that kinda stuff.

130
00:06:50.050 --> 00:06:51.624
And it would take down the server and

131
00:06:51.624 --> 00:06:54.510
it would take down everyone on the server,
right?

132
00:06:54.510 --> 00:07:00.280
So that way they could cause downtime for
Coca-Cola and that would be a big problem.

133
00:07:00.280 --> 00:07:02.733
And much less nefarious than
someone dropping a fork bomb,

134
00:07:02.733 --> 00:07:05.250
if you haven't heard of a fork
bomb I dropped a link in there.

135
00:07:05.250 --> 00:07:08.739
It's a little short command that just
takes down an entire system almost

136
00:07:08.739 --> 00:07:09.490
immediately.

137
00:07:09.490 --> 00:07:11.480
It's kinda fun.

138
00:07:11.480 --> 00:07:13.191
Don't run it on your own computer.

139
00:07:13.191 --> 00:07:16.989
[LAUGH] But yeah, much less nefariously,
you cannot just have

140
00:07:16.989 --> 00:07:21.680
someone that wrote a bug that leaked
memory and took down the entire server.

141
00:07:21.680 --> 00:07:24.140
And you want them to just
take themselves down.

142
00:07:24.140 --> 00:07:27.270
You don't want them to take
down everybody, right?

143
00:07:27.270 --> 00:07:29.380
So that's kind of we still have
a problem here by just having

144
00:07:29.380 --> 00:07:30.230
the same people on VMs.

145
00:07:35.020 --> 00:07:37.829
Now, with VMs, as you may guess,
you can also limit how much.

146
00:07:37.829 --> 00:07:41.070
All right, you only get this many cores,
you only get this much RAM.

147
00:07:41.070 --> 00:07:42.280
And you can kind of mitigate
some of those solutions.

148
00:07:42.280 --> 00:07:46.020
But I'm gonna show you how to do that
even more with something called C groups.

149
00:07:48.158 --> 00:07:53.270
So we still have a bit of
a performance problem here, as well.

150
00:07:53.270 --> 00:07:57.672
It's not, let's say that I have ten
servers running as VMs all within one

151
00:07:57.672 --> 00:07:59.663
racked server in my data center.

152
00:07:59.663 --> 00:08:03.325
But we still have some overhead here
that's making this still an inefficient

153
00:08:03.325 --> 00:08:04.180
system, right?

154
00:08:04.180 --> 00:08:09.339
We have to run ten copies of, if we have
a server that's running ten different,

155
00:08:09.339 --> 00:08:13.963
a silicon server that's running
ten different Web services, right?

156
00:08:13.963 --> 00:08:16.730
We still have to run ten
copies of an operating system.

157
00:08:16.730 --> 00:08:20.301
And we're wasting some of that capacity
on ten copies of the operating system.

158
00:08:20.301 --> 00:08:23.640
It would be great if we could just run
one copy to the operating system, right?

159
00:08:24.650 --> 00:08:29.010
So this is what I'm hinting
at with containers here.

160
00:08:31.890 --> 00:08:36.788
So again, if you want to play with
VMs directly, Jem's course does that.

161
00:08:36.788 --> 00:08:39.900
And VMs are still very
much a very valid option.

162
00:08:39.900 --> 00:08:43.890
I know a lot of people out there are still
using Azure VMs and AWS, EC2, right?

163
00:08:43.890 --> 00:08:46.038
Very, very valid things still to be using,
and

164
00:08:46.038 --> 00:08:48.290
there's still reasons
that you want to use VMs.

165
00:08:48.290 --> 00:08:49.990
And so you should definitely
play around with those as well.

166
00:08:52.867 --> 00:08:55.860
And like I said, Jem's course on
Frontend Master does that for you.

167
00:08:55.860 --> 00:09:00.186
So I think he goes out and
plays out with DigitalOcean.

168
00:09:03.591 --> 00:09:08.269
Okay, so that brings us to the public
cloud kind of situation, right?

169
00:09:08.269 --> 00:09:12.224
So this is gonna be Microsoft Azure,
Amazon Web Services,

170
00:09:12.224 --> 00:09:13.893
Google Cloud Platform.

171
00:09:13.893 --> 00:09:18.392
Which you'll often hear me saying GCP and
AWS, because I work in the business and

172
00:09:18.392 --> 00:09:20.589
I cannot help myself but use acronyms.

173
00:09:20.589 --> 00:09:21.686
I'm sorry.

174
00:09:21.686 --> 00:09:22.797
[LAUGH] they've taken me.

175
00:09:23.840 --> 00:09:27.555
So this is great because now
I've moved the data center

176
00:09:27.555 --> 00:09:30.480
away from my particular company, right?

177
00:09:30.480 --> 00:09:33.040
I no longer have to have these admins.

178
00:09:33.040 --> 00:09:34.613
I don't have to buy physical space.

179
00:09:34.613 --> 00:09:37.870
And I don't have to worry about
temperatures or anything like that.

180
00:09:37.870 --> 00:09:42.491
I just say hey, Amazon Web Services,
or hey, Microsoft Azure,

181
00:09:42.491 --> 00:09:46.114
give me another VM and
let me provision something.

182
00:09:46.114 --> 00:09:49.701
And those companies have massive
data centers all over the world,

183
00:09:49.701 --> 00:09:52.790
each one of them has like 30 or
40 different regions.

184
00:09:54.150 --> 00:09:57.095
So that's really great.

185
00:09:57.095 --> 00:09:59.533
We get the economies of scale here and
I just pay them for

186
00:09:59.533 --> 00:10:03.037
the spinning the meter of how much
CPU I'm using, how much memory I'm using.

187
00:10:03.037 --> 00:10:05.700
And they handle all those service for me.

188
00:10:05.700 --> 00:10:07.020
They handle updating the hardware.

189
00:10:07.020 --> 00:10:08.643
You never have to worry about
hardware basically ever again.

190
00:10:08.643 --> 00:10:10.630
Now if you're still using VMs,

191
00:10:10.630 --> 00:10:14.490
you still have to worry about
the operating system, right?

192
00:10:14.490 --> 00:10:16.964
They give you the server.

193
00:10:16.964 --> 00:10:19.252
But if there's a big
security vulnerability,

194
00:10:19.252 --> 00:10:20.910
you have to patch it, right?

195
00:10:20.910 --> 00:10:23.086
You have to go in there and say Ubuntu,

196
00:10:23.086 --> 00:10:25.953
upgrade to the latest LTS or
something like that.

197
00:10:25.953 --> 00:10:28.630
LTS stands for long term service, I think?

198
00:10:28.630 --> 00:10:31.200
&gt;&gt; Support.
&gt;&gt; Support, thank you, long term support.

199
00:10:32.655 --> 00:10:37.100
Yeah, and that just means that's a version
that they maintain for a very long time.

200
00:10:39.300 --> 00:10:40.895
So public cloud, this is great.

201
00:10:40.895 --> 00:10:44.265
You end up paying perhaps a bit more
than you would have if you're running it

202
00:10:44.265 --> 00:10:44.818
yourself.

203
00:10:44.818 --> 00:10:46.665
But the trade-off here is you
no longer have to hire people.

204
00:10:46.665 --> 00:10:49.430
And people are usually very expensive,
right?

205
00:10:49.430 --> 00:10:51.678
To manage physical data centers, right?

206
00:10:51.678 --> 00:10:52.940
So that's kinda the trade off.

207
00:10:52.940 --> 00:10:57.500
Usually, it's almost always a good idea to
be in the public cloud for that reason.

208
00:10:57.500 --> 00:11:00.210
It's usually cheaper from
the human perspective.

209
00:11:00.210 --> 00:11:04.418
And it's getting to the point now that
a front end engineer can manage their own

210
00:11:04.418 --> 00:11:05.455
servers, right?

211
00:11:05.455 --> 00:11:07.910
Which would have never been
possible 15 years ago.

212
00:11:10.200 --> 00:11:13.348
So in these kinda situations tools
like Terraform, Chef, Puppet, Salt,

213
00:11:13.348 --> 00:11:15.280
things that we won't be
talking about today.

214
00:11:15.280 --> 00:11:18.240
Cuz I don't know them and
you don't wanna learn them from me.

215
00:11:18.240 --> 00:11:20.517
These will be useful because this allows
you to spin up servers, provision them.

216
00:11:20.517 --> 00:11:24.610
And when I say the term provision, what
I mean is install the correct software.

217
00:11:24.610 --> 00:11:27.414
Make sure everything's up to date,
download your code,

218
00:11:27.414 --> 00:11:29.713
start running the code,
all that kinda stuff.

219
00:11:29.713 --> 00:11:33.090
That's where these tools can
be super useful for you.

220
00:11:33.090 --> 00:11:35.130
Definitely check them out if that's
something that you're interested in doing.

221
00:11:35.130 --> 00:11:40.270
But we're still paying the cost of running
a whole operating system in the cloud.

222
00:11:40.270 --> 00:11:42.517
And we still have to manage
the operating system.

223
00:11:42.517 --> 00:11:46.700
It would be nice if we could
just say here's our code.

224
00:11:46.700 --> 00:11:50.480
Here's the environment it needs,
execute this, right?

225
00:11:50.480 --> 00:11:55.240
Here's this artifact of some variety,
execute this.

226
00:11:55.240 --> 00:11:59.790
And that brings us to
the idea of containers.

227
00:11:59.790 --> 00:12:02.616
Containers give us all of
these security features and

228
00:12:02.616 --> 00:12:05.960
all these resource management
features of virtual machines.

229
00:12:05.960 --> 00:12:08.687
But they're much lighter weight,
which is a term that I hate but

230
00:12:08.687 --> 00:12:12.140
I'm still gonna use here because it's
a absolutely meaningless term, right?

231
00:12:12.140 --> 00:12:14.930
What is lightweight and compared to what?

232
00:12:14.930 --> 00:12:17.980
I feel like every JavaScript framework
comes out is lightweight, right?

233
00:12:17.980 --> 00:12:21.850
[LAUGH] It's the worst.

234
00:12:21.850 --> 00:12:23.154
And but here I actually mean it, right?

235
00:12:23.154 --> 00:12:24.134
You can say for

236
00:12:24.134 --> 00:12:29.610
sure that a virtual machine is lighter
weight than running bare metal servers.

237
00:12:29.610 --> 00:12:34.303
And the containers are lighter weight
than running a whole virtual machine.

238
00:12:34.303 --> 00:12:39.120
So basically what I'm doing is
I'm just freezing a file system.

239
00:12:39.120 --> 00:12:41.089
I'm dumping that into a container image.

240
00:12:41.089 --> 00:12:44.351
And then I'm shifting that off, and then
I have some sort of host operating system

241
00:12:44.351 --> 00:12:46.161
that's executing these containers for me.

242
00:12:50.170 --> 00:12:53.658
So you're still gonna have multiple
things running in one host container

243
00:12:53.658 --> 00:12:54.508
system, right?

244
00:12:54.508 --> 00:12:59.007
And we kinda have this same worry about
the Coca-Cola Pepsi problem that I'm

245
00:12:59.007 --> 00:13:02.189
gonna be running this container and
then, next to me,

246
00:13:02.189 --> 00:13:04.628
another container's gonna be running.

247
00:13:04.628 --> 00:13:07.265
And I don't know whose it is or
what it's doing, right?

248
00:13:07.265 --> 00:13:09.353
So I have these same, similar concerns but

249
00:13:09.353 --> 00:13:13.475
let me assure you that with the features
of containers, they can't see each other.

250
00:13:13.475 --> 00:13:15.225
They can't interact with each other.

251
00:13:15.225 --> 00:13:17.280
They can't even know that
each other are there.

252
00:13:17.280 --> 00:13:20.810
And a lot of very smart people have been
working on this for a very long time.

253
00:13:20.810 --> 00:13:23.086
And I feel pretty confident
in saying this is secure and

254
00:13:23.086 --> 00:13:24.830
you should definitely go down this path.

255
00:13:24.830 --> 00:13:26.502
It didn't always used to be that way.

256
00:13:26.502 --> 00:13:27.550
It is now that way.

