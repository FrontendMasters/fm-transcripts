WEBVTT

1
00:00:25.660 --> 00:00:28.348
So the first thing we do is I
will say Create a new file.

2
00:00:28.348 --> 00:00:32.266
Here in the static assets project,
I'm gonna call it Docker file.

3
00:00:35.290 --> 00:00:41.164
So here I'm gonna say FROM and
we're gonna do some version of node.

4
00:00:41.164 --> 00:00:43.958
Let's do 12-stretch,
I think I have latest in my notes, but

5
00:00:43.958 --> 00:00:45.580
you can do it from whatever you want.

6
00:00:46.930 --> 00:00:49.100
Let's do it from 12 stretch,
cuz that's what we've been doing.

7
00:00:50.640 --> 00:00:55.190
Give it a working directory, let's call
it /app or whatever you wanna call it.

8
00:00:55.190 --> 00:00:58.350
I'm gonna go with /app.

9
00:00:58.350 --> 00:01:01.891
Copy everything, copy dot dot,

10
00:01:01.891 --> 00:01:06.320
and we're gonna do run, NPMCI, right?

11
00:01:06.320 --> 00:01:07.987
To install of our dependencies.

12
00:01:07.987 --> 00:01:11.537
And then you could technically
have another run underneath this.

13
00:01:11.537 --> 00:01:16.066
In general when I have multiple
sequential things running, right?

14
00:01:16.066 --> 00:01:20.430
And they're all accomplishing relatively
the same thing, I'll just do and, right?

15
00:01:20.430 --> 00:01:23.379
So do this and this and
this and this, right?

16
00:01:23.379 --> 00:01:25.852
What's nice about that is that
gets made into one layer, right?

17
00:01:25.852 --> 00:01:28.912
So it gets cached all together,
which is in general,

18
00:01:28.912 --> 00:01:31.637
what the kind of behavior
you're looking for.

19
00:01:31.637 --> 00:01:37.264
So here I'm going to say nmp,
run, build, right?

20
00:01:37.264 --> 00:01:40.585
Cuz I try like build
out the final project.

21
00:01:40.585 --> 00:01:44.245
So let's do this as bulid,

22
00:01:44.245 --> 00:01:48.710
or something like that, right?

23
00:01:48.710 --> 00:01:51.635
We'll call it builder for fun.

24
00:01:51.635 --> 00:01:56.698
So for the second one, we're gonna do FROM

25
00:01:56.698 --> 00:02:01.207
nginx and I said, 1.17, right?

26
00:02:01.207 --> 00:02:03.604
But you can totally do this from Alpine,
you can do it from LaTeX,

27
00:02:03.604 --> 00:02:04.570
that's kind of up to you.

28
00:02:05.870 --> 00:02:08.781
And now all we need to do is we
need to copy it from the previous

29
00:02:08.781 --> 00:02:11.479
one into the directory that
I told you before, right?

30
00:02:11.479 --> 00:02:15.360
So I'm gonna say COPY.

31
00:02:15.360 --> 00:02:17.790
And we could create a user and
all that kind of stuff now.

32
00:02:17.790 --> 00:02:20.710
For now let's just ignore,
let's just all do it from root.

33
00:02:20.710 --> 00:02:25.080
So I'm gonna say --FROM =builder.

34
00:02:25.080 --> 00:02:28.310
And we're gonna do it
from /app/build right?

35
00:02:28.310 --> 00:02:30.420
That's where it gets build into, right?

36
00:02:30.420 --> 00:02:38.186
And we're gonna copy that
into /user/share/nginx/html.

37
00:02:42.235 --> 00:02:45.291
And again, I told you not to put in
a cmd because if you put in the cmd,

38
00:02:45.291 --> 00:02:47.828
then you're gonna overwrite
what nginx ones is doing.

39
00:02:47.828 --> 00:02:52.327
We don't wanna do that,
we want nginx to handle all the thinks So

40
00:02:52.327 --> 00:02:55.695
that's it, now this should work,
so let's try it.

41
00:02:59.525 --> 00:03:01.329
So where are we?

42
00:03:01.329 --> 00:03:04.234
We are in static-assets-project.

43
00:03:04.234 --> 00:03:09.041
So I'm gonna say docker build-t,
let's just

44
00:03:09.041 --> 00:03:14.098
call this like static app or
something like that.

45
00:03:14.098 --> 00:03:20.734
We should be able to build, this will take
a second cuz react takes forever to build.

46
00:03:20.734 --> 00:03:24.250
I should say, it's web pack,
web pack takes forever to build.

47
00:03:24.250 --> 00:03:26.760
But it's gonna run both of those commands,
the install the assets.

48
00:03:26.760 --> 00:03:28.471
And then as soon as it's done with
that then it's gonna go ahead

49
00:03:28.471 --> 00:03:28.997
and run our build.

50
00:03:28.997 --> 00:03:33.783
It's gonna output our build directory.

51
00:03:36.795 --> 00:03:40.202
You know what I did in here,
which I didn't realize it,

52
00:03:40.202 --> 00:03:41.806
this is still gonna work.

53
00:03:41.806 --> 00:03:45.153
You can see here it's going into
node-sass now, there we go.

54
00:03:45.153 --> 00:03:49.903
Now we're finally into the build process.

55
00:03:49.903 --> 00:03:54.412
But while it's doing that,
I got it right from builder.

56
00:03:54.412 --> 00:03:56.907
You can also put from zero here as well,
that would totally work.

57
00:03:56.907 --> 00:03:59.857
And that's what I have in my notes.

58
00:03:59.857 --> 00:04:06.404
All right, so that built, And

59
00:04:06.404 --> 00:04:12.213
so now what's gonna do is,
it's gonna go download from nginx, right?

60
00:04:14.922 --> 00:04:18.230
Looks like I don't have it on my computer,
so it's gonna go do that really quick.

61
00:04:18.230 --> 00:04:23.173
Looks like it's about 50 odd megabytes.

62
00:04:23.173 --> 00:04:27.840
And then it copied everything from
builder into that directory, okay?

63
00:04:27.840 --> 00:04:30.610
So now we have our built container.

64
00:04:30.610 --> 00:04:36.855
So what we're gonna say is, docker run-P,
or dash lower case p rather,

65
00:04:36.855 --> 00:04:42.822
sorry, 8080, which you can run
this on any port that you want to.

66
00:04:42.822 --> 00:04:46.726
But the first one's gonna be the host
port, but it is gonna be run on port 80

67
00:04:46.726 --> 00:04:49.593
because that's what nginx
runs on by default, right?

68
00:04:49.593 --> 00:04:54.843
So we're gonna go from 80 to 8080
in our local computer, okay?

69
00:04:54.843 --> 00:04:57.462
And then we're gonna do static-app.

70
00:04:59.239 --> 00:05:03.303
So let's go see if that works,
localhost 8080.

71
00:05:07.154 --> 00:05:11.116
Lo and behold, your app is now running,
but this is being served by nginx, right?

72
00:05:11.116 --> 00:05:12.388
So what was hard about that?

73
00:05:12.388 --> 00:05:13.678
What did you struggle with?

74
00:05:15.222 --> 00:05:18.773
&gt;&gt; For us it was not forgetting
that there needs to be working,

75
00:05:18.773 --> 00:05:22.405
to specify the working directory and
copying all the files.

76
00:05:22.405 --> 00:05:23.025
You know what I mean?

77
00:05:23.025 --> 00:05:26.133
Like it's kind of like this idea that,
this is basically like an empty container

78
00:05:26.133 --> 00:05:28.062
you need to bring something in for
it to work with.

79
00:05:28.062 --> 00:05:28.567
&gt;&gt; Mm-hm.
&gt;&gt; So

80
00:05:28.567 --> 00:05:30.203
there was a little bit of disconnect.

81
00:05:30.203 --> 00:05:33.231
So everything else was were very spot on.

82
00:05:33.231 --> 00:05:34.324
Just that particular part.

83
00:05:34.324 --> 00:05:38.092
So then as it was trying to build,
I can't find the index file.

84
00:05:38.092 --> 00:05:38.887
I can't find the directives.

85
00:05:38.887 --> 00:05:40.158
&gt;&gt; That makes sense.

86
00:05:40.158 --> 00:05:40.690
Yeah.

87
00:05:40.690 --> 00:05:42.344
&gt;&gt; It's like I don't have anything.

88
00:05:42.344 --> 00:05:44.977
&gt;&gt; Yep,
that would definitely be a problem.

89
00:05:44.977 --> 00:05:47.884
Hopefully this all at least makes sense,
and if we went back and did it again,

90
00:05:47.884 --> 00:05:48.890
you would be able to do it.

91
00:05:51.223 --> 00:05:56.036
So, right now we're just using some
default config file that nginx has for us.

92
00:05:56.036 --> 00:05:58.380
You can also copy in
an nginx configuration, and

93
00:05:58.380 --> 00:06:01.367
then modify your nginx configuration
to however you want to.

94
00:06:01.367 --> 00:06:03.151
It allows you to do that as well.

95
00:06:03.151 --> 00:06:06.365
Now we're not gonna do that one, because
I don't know how to configure nginx and

96
00:06:06.365 --> 00:06:07.554
I'm not sure many people do.

97
00:06:07.554 --> 00:06:09.303
[LAUGH].
Nginx is hard to configure,

98
00:06:09.303 --> 00:06:11.375
that's the long and the short of it.

99
00:06:11.375 --> 00:06:13.122
[LAUGH].

100
00:06:13.122 --> 00:06:16.465
So we're actually gonna go and
do some more stuff with nginx here in just

101
00:06:16.465 --> 00:06:19.765
a second, to show you how we can
actually even make this even simpler.

102
00:06:19.765 --> 00:06:24.309
We can actually run the nginx container
directly without even building it,

103
00:06:24.309 --> 00:06:25.880
which is kind of fun as well

