WEBVTT

1
00:00:00.080 --> 00:00:05.965
We are now running this container and
I've exposed Port 3,000 here.

2
00:00:05.965 --> 00:00:09.196
So if we run a container in here,
it will be exposed on port 3,000, okay?

3
00:00:09.196 --> 00:00:16.733
So then, we're gonna use Buildah to build
a Buildah container inside a source here.

4
00:00:16.733 --> 00:00:20.340
So if you look, this has a Docker file,
it's our index dot js.

5
00:00:20.340 --> 00:00:23.243
If I say cat index dot js,
you can see here,

6
00:00:23.243 --> 00:00:28.277
it's just our node service that we
wrote a couple of chapters ago, okay?

7
00:00:29.916 --> 00:00:33.140
Now Buildah has a particular way of
building containers that you can go in.

8
00:00:33.140 --> 00:00:35.560
It's kind of built to
be built interactively.

9
00:00:35.560 --> 00:00:38.520
So rather than having a Docker file,
you go and you say,

10
00:00:38.520 --> 00:00:41.480
okay, we're gonna start from here and
then do this to the container.

11
00:00:41.480 --> 00:00:43.540
And you do it just with
the command line interactively.

12
00:00:43.540 --> 00:00:46.420
It's kind of a fun way
to build containers.

13
00:00:46.420 --> 00:00:49.940
We're not gonna be doing that because
it would take a bunch of time.

14
00:00:49.940 --> 00:00:53.030
And I'll leave you to do that if
you're interested in doing Buildah.

15
00:00:53.030 --> 00:00:54.800
This is more just to introduce you to it.

16
00:00:55.860 --> 00:00:58.942
What I'm gonna do instead
is I'm gonna say buildah.

17
00:01:01.858 --> 00:01:07.687
And then,
you can say build-using -docker-file.

18
00:01:10.080 --> 00:01:13.780
So Buildah knows how to read Docker files,
which is pretty cool, right?

19
00:01:13.780 --> 00:01:17.246
Or if you don't wanna type
build-using-dockerfile,

20
00:01:17.246 --> 00:01:20.890
they shortened that to bud,
build-using-dockerfile.

21
00:01:20.890 --> 00:01:23.186
You tell it the file,
which is dot slash Dockerfile.

22
00:01:24.800 --> 00:01:30.093
And you're gonna give it a tag
just like you would with Docker.

23
00:01:30.093 --> 00:01:33.554
And you're gonna say my-app-buildah.

24
00:01:35.077 --> 00:01:37.402
Whatever you wanna tag it,
and then period.

25
00:01:42.104 --> 00:01:45.340
So from there, it's gonna go and install
all the necessary things that you need.

26
00:01:45.340 --> 00:01:46.666
It's gonna go grab them off of Docker hub.

27
00:01:51.236 --> 00:01:52.567
I don't know why it's flashing so much.

28
00:01:57.017 --> 00:02:00.220
So this will take a second cuz this is not
gonna pull from the Docker cache, right?

29
00:02:00.220 --> 00:02:01.740
Cuz this is a product than Docker.

30
00:02:03.050 --> 00:02:05.380
So that downloaded node 12-stretch.

31
00:02:05.380 --> 00:02:07.637
You could also change this to node alpine,
it'd be totally fine and

32
00:02:07.637 --> 00:02:09.156
it would take a little
less time to download.

33
00:02:12.489 --> 00:02:17.372
And this is gonna go piece by piece and
build our Docker file, or

34
00:02:17.372 --> 00:02:20.516
build a container with our Docker file.

35
00:02:24.916 --> 00:02:27.650
So you can see there,
it's running our npm install there.

36
00:02:29.580 --> 00:02:30.809
It's gonna run npm ci.

37
00:02:36.378 --> 00:02:38.902
Copy our node directory over.

38
00:02:42.447 --> 00:02:43.260
And there you go.

39
00:02:43.260 --> 00:02:46.265
We successfully built a Buildah
container using a Docker file.

40
00:02:49.718 --> 00:02:52.700
So let's do a buildah inspect.

41
00:02:54.070 --> 00:02:56.278
What did I call,
did I call it my-app-buildah?

42
00:02:58.141 --> 00:02:58.770
I think I did.

43
00:03:01.262 --> 00:03:02.300
Same thing here.

44
00:03:02.300 --> 00:03:04.120
You can see all the various things it did.

45
00:03:04.120 --> 00:03:07.193
You can see all the layers that it did,
so on and so forth.

46
00:03:13.715 --> 00:03:14.215
Okay?

47
00:03:26.059 --> 00:03:31.579
So there is some overlap between what
Buildah can do and what do Podman can do.

48
00:03:31.579 --> 00:03:35.820
It's not as clean cut as
you might think it is.

49
00:03:35.820 --> 00:03:39.673
You can actually use Buildah
to run containers as well, but

50
00:03:39.673 --> 00:03:44.847
you use it more to do the Docker run one
command and then finish kind of scenario.

51
00:03:44.847 --> 00:03:49.082
Podman is more for I wanna run a web
server and I want you to manage this for

52
00:03:49.082 --> 00:03:50.060
me, right?

53
00:03:50.060 --> 00:03:54.670
Whereas Buildah can say, hey, do a thing
with a container and then finish.

54
00:03:54.670 --> 00:03:58.100
So they kinda separate that out
between Buildah and Podman.

55
00:03:58.100 --> 00:04:03.363
So what we could do here is we can say

56
00:04:03.363 --> 00:04:09.796
buildah run dash dash net host, my app.

57
00:04:09.796 --> 00:04:11.336
I have to do that thing first.

58
00:04:11.336 --> 00:04:12.625
You have to do this, sorry.

59
00:04:12.625 --> 00:04:18.770
Buildah from my-app-buildah, like that.

60
00:04:20.345 --> 00:04:23.600
Cuz you have to get
the container started first.

61
00:04:23.600 --> 00:04:24.960
So now, I have it started.

62
00:04:26.260 --> 00:04:27.530
Can I do like a buildah ps?

63
00:04:27.530 --> 00:04:28.930
Does it know how to do that?

64
00:04:28.930 --> 00:04:29.761
It does.
Okay, so

65
00:04:29.761 --> 00:04:31.427
I can see here that I've started this.

66
00:04:33.153 --> 00:04:35.320
And I have,
it's running in the background.

67
00:04:35.320 --> 00:04:39.130
So the my-app-buildah-working-container.

68
00:04:39.130 --> 00:04:43.402
So this is the image, my-app-buildah,
and then working-container's actually

69
00:04:43.402 --> 00:04:46.746
the executing container
at this moment in time.

70
00:04:46.746 --> 00:04:51.551
And then now, what I can do is I can say,

71
00:04:51.551 --> 00:04:57.838
buildah run dash dash
net host my-app-buildah.

72
00:04:57.838 --> 00:05:00.395
Or I just paste that in
there from up there.

73
00:05:00.395 --> 00:05:03.193
my-app-buildah-working-container, which
is what it called it right there.

74
00:05:07.118 --> 00:05:10.722
And then,
I can pass into it dash dash space bash.

75
00:05:10.722 --> 00:05:13.780
And this will execute that against the
container which is going to drop me into

76
00:05:13.780 --> 00:05:14.874
the executing container.

77
00:05:17.215 --> 00:05:22.680
So now, I'm inside of a container
which is inside of a container, right?

78
00:05:22.680 --> 00:05:26.636
So I'm inside of a Docker container which
had Buildah installed, and then I used

79
00:05:26.636 --> 00:05:30.920
that to execute the container which is
running inside of the same context.

80
00:05:30.920 --> 00:05:33.456
So now, if I say cat/etc/issue,
what do we expect to see?

81
00:05:33.456 --> 00:05:38.369
Debian, because that's what
we built our container with.

82
00:05:40.039 --> 00:05:42.849
And now, you can see I'm here,
I could say node index dot js, and

83
00:05:42.849 --> 00:05:44.450
everything will execute just fine.

84
00:05:46.733 --> 00:05:47.484
And it'll be great.

85
00:05:47.484 --> 00:05:50.690
So let's stop that,
we'll exit out of here.

86
00:05:52.440 --> 00:05:56.162
And I can say buildah, is it stop?

87
00:05:57.480 --> 00:05:58.898
[INAUDIBLE] I don't remember.

88
00:06:04.286 --> 00:06:06.066
Kill, maybe?

89
00:06:08.297 --> 00:06:08.923
Remove.

90
00:06:13.688 --> 00:06:19.030
Yep, so I can say buildah rm
my-app-buildah-working-container.

91
00:06:19.030 --> 00:06:22.310
And that'll go and actually shut
down the container from running.

92
00:06:22.310 --> 00:06:25.090
So that's kind of what Buildah can do for
you.

93
00:06:25.090 --> 00:06:27.069
And like I said,
there's some overlap with Podman,

94
00:06:27.069 --> 00:06:30.290
cuz Podman is built for
executing containers.

95
00:06:30.290 --> 00:06:34.620
Buildah's more, as it may sound,
built for building containers.

96
00:06:34.620 --> 00:06:36.564
But there's some overlap
in what they can do.

