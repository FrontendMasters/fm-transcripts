WEBVTT

1
00:00:00.180 --> 00:00:04.750
Again, like here in layers, all this
entire projects in here, and there's

2
00:00:04.750 --> 00:00:08.900
something that actually will help you,
let's actually go over that really quick.

3
00:00:08.900 --> 00:00:13.836
So, there is a concept of something
called a Docker ignore file, and

4
00:00:13.836 --> 00:00:18.684
a Docker ignore file is much like
a gitignore file, do you say like,

5
00:00:18.684 --> 00:00:22.961
here's a bunch of stuff that I
don't want you to copy over.

6
00:00:22.961 --> 00:00:26.433
And actually to prove my point here,

7
00:00:26.433 --> 00:00:32.369
let's pull up my command line here again,
and if I say Docker,

8
00:00:32.369 --> 00:00:37.857
let's just do Docker run here,
like this my note app, and

9
00:00:37.857 --> 00:00:44.039
if I say, Ls- lsha,
don't detach that's not what I wanted.

10
00:00:53.610 --> 00:00:56.493
It didn't copy that over,
it used to do that by default, so

11
00:00:56.493 --> 00:00:59.896
sometimes it'll copy for your Git
directory which is not necessarily

12
00:00:59.896 --> 00:01:03.650
something that you need inside of your,
this isn't a Git project.

13
00:01:03.650 --> 00:01:06.852
But if it was again, project, right, so
if I said like, in fact, let's just do it,

14
00:01:06.852 --> 00:01:11.532
get an IT, And

15
00:01:11.532 --> 00:01:16.667
then I built it again, and then I ran it

16
00:01:16.667 --> 00:01:22.640
again, Let's get it back to the one
that the expose is on publish.

17
00:01:26.060 --> 00:01:29.196
Just FYI, instead of publish,
I never actually do that,

18
00:01:29.196 --> 00:01:32.400
I do -p which is just the shorthand,
lowercase p, right?

19
00:01:36.043 --> 00:01:40.265
Okay, so that's working,
now if I do ls- lsha,

20
00:01:40.265 --> 00:01:44.591
notice that it's copying
over the git directory,

21
00:01:44.591 --> 00:01:48.980
do you need that in
your production server?

22
00:01:48.980 --> 00:01:50.750
No, do you even want
a new production server?

23
00:01:50.750 --> 00:01:53.010
No, it's actually like
a security vulnerability, right?

24
00:01:53.010 --> 00:01:55.332
Because you've your git history and
a bunch of stuff in there, so

25
00:01:55.332 --> 00:01:57.589
it's actually should be
considered sensitive information.

26
00:02:00.250 --> 00:02:04.856
So we could go and explicitly name all the
folders that we wanna white list into this

27
00:02:04.856 --> 00:02:08.126
but I don't think that's a very
useful pattern at all, so

28
00:02:08.126 --> 00:02:12.232
what we're gonna do instead is we're
gonna say touch .dockerignore.

29
00:02:12.232 --> 00:02:18.608
And if you've ever written a git ignore
file, it's literally the same format,

30
00:02:18.608 --> 00:02:25.070
so if I open this here, oops, you can
see I have a dockerignore file here.

31
00:02:25.070 --> 00:02:29.495
And if I just put .git, that's one we
wanna ignore and the other one that we've

32
00:02:29.495 --> 00:02:34.070
talked about ignoring is node_modules,
we never wanna copy over node modules.

33
00:02:34.070 --> 00:02:37.162
And you can put that slash too if you
wanna make it like a directory, but,

34
00:02:37.162 --> 00:02:39.610
again, it's literally the same
format as a git ignore.

35
00:02:39.610 --> 00:02:42.298
Just if it matches any node
modules anywhere in the path,

36
00:02:42.298 --> 00:02:44.206
it'll say nope not bringing that over.

37
00:02:48.230 --> 00:02:50.711
Questions about doctor ignore?

38
00:02:50.711 --> 00:02:54.159
Every project should at least
have .git in its dockerignore.

