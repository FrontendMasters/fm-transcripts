WEBVTT

1
00:00:00.060 --> 00:00:02.850
Let's get into dev containers
with Visual Studio Code now.

2
00:00:02.850 --> 00:00:06.420
So being a program manager at Microsoft,
works on Visual Studio Code.

3
00:00:06.420 --> 00:00:08.870
I'm obviously a little incentivized
to tell you about this, but

4
00:00:08.870 --> 00:00:10.560
I'm also very excited about it.

5
00:00:10.560 --> 00:00:13.630
I think this is one of the coolest
features about Visual Studio Code,

6
00:00:13.630 --> 00:00:16.410
that's why just cannot shut up about it.

7
00:00:16.410 --> 00:00:20.680
So these are called dev containers that
we're gonna get into with regards to

8
00:00:20.680 --> 00:00:21.889
Visual Studio Code.

9
00:00:21.889 --> 00:00:24.008
So first of all,
if you're not a Visual Studio Code user,

10
00:00:24.008 --> 00:00:25.999
I'm just gonna invite you to go ahead,
download it and

11
00:00:25.999 --> 00:00:29.710
try it out with me and you can uninstall
it afterwards if you don't like it.

12
00:00:29.710 --> 00:00:33.385
And the other thing I wanted to call out
is Burke Holland has a free course on

13
00:00:33.385 --> 00:00:36.970
Frontend Masters of how to level
up with Visual Studio Code.

14
00:00:36.970 --> 00:00:41.040
It's really great and totally free so you
can totally share it with your friends and

15
00:00:41.040 --> 00:00:41.700
coworkers.

16
00:00:43.890 --> 00:00:47.100
Okay, so we're gonna be working with
something called the remote containers

17
00:00:47.100 --> 00:00:47.610
extension.

18
00:00:48.690 --> 00:00:51.260
So there are several remote
extensions that have come out of

19
00:00:51.260 --> 00:00:52.270
Visual Studio Code recently.

20
00:00:52.270 --> 00:00:58.370
One of them is WSLs, so you can have your
Visual Studio Code connected to WSL.

21
00:00:58.370 --> 00:01:01.719
One of them is SSH, so
you can say any box that you can SSH into,

22
00:01:01.719 --> 00:01:05.652
you can now connect to Visual Studio Code
too, which is really cool, but

23
00:01:05.652 --> 00:01:10.805
let me get into the remote
containers one So

24
00:01:10.805 --> 00:01:14.725
we're gonna create a second Docker
file for one of these projects,

25
00:01:14.725 --> 00:01:18.643
it doesn't really matter which one so
you can pick any one of these,

26
00:01:18.643 --> 00:01:20.110
the one of the node ones.

27
00:01:20.110 --> 00:01:26.261
So let's go ahead and
go into our projects folder.

28
00:01:26.261 --> 00:01:28.750
We're not gonna do this in Hugo,
we're gonna do it in.

29
00:01:28.750 --> 00:01:31.350
Let's do, which one is this?

30
00:01:31.350 --> 00:01:35.150
Let's do this one, the
more-complicated-node application, okay?

31
00:01:35.150 --> 00:01:37.910
So this one has a Docker file
that does lots of good things.

32
00:01:37.910 --> 00:01:40.270
And this is our production
one that we have, right?

33
00:01:41.830 --> 00:01:44.510
So we're gonna create another
directory here inside of

34
00:01:44.510 --> 00:01:46.640
a more-complicated-node app one.

35
00:01:46.640 --> 00:01:48.120
And again,
you could do this in anyone of them,

36
00:01:48.120 --> 00:01:50.107
doesn't have to be
the more-complicated-node app.

37
00:01:51.580 --> 00:01:53.354
That's just what I'm
gonna do in right now.

38
00:01:53.354 --> 00:01:56.730
I want you to create a new folder in here.

39
00:01:56.730 --> 00:02:01.381
This one is gonna be called .devcontainer,
it's very important that this be

40
00:02:01.381 --> 00:02:05.891
called particularly that, because
Visual Studio Code is looking for dot or

41
00:02:05.891 --> 00:02:10.943
period devcontainer
Inside of .devcontainer,

42
00:02:10.943 --> 00:02:13.781
I want you to put a new file,
which is gonna be a Docker file.

43
00:02:15.930 --> 00:02:18.687
This is where you would define what
your development environment looks.

44
00:02:20.656 --> 00:02:26.299
So let's just say for our sake here, we're
gonna be doing it from node 12-stretch.

45
00:02:29.604 --> 00:02:33.038
And we need a couple
things installed in here.

46
00:02:33.038 --> 00:02:39.189
So we're gonna say,
RUN npm install --global,

47
00:02:41.100 --> 00:02:43.465
eslint and prettier.

48
00:02:43.465 --> 00:02:46.864
Let's say that those are the two tools
that we need for our particular project.

49
00:02:46.864 --> 00:02:49.049
But you can put anything in here,

50
00:02:49.049 --> 00:02:53.197
you can put stack tracing and
all sorts of stuff in here as well.

51
00:02:55.461 --> 00:02:57.660
Any sort of dependency that you'll need.

52
00:02:57.660 --> 00:02:58.560
This is good for now though,

53
00:02:58.560 --> 00:03:01.042
this is everything that we're gonna need
to get our container up and running.

54
00:03:01.042 --> 00:03:02.520
Notice that I'm not
gonna put a CMD in this,

55
00:03:02.520 --> 00:03:06.290
because it's not actually about
running any particular command, right?

56
00:03:06.290 --> 00:03:09.725
It's about setting up an environment.

57
00:03:09.725 --> 00:03:13.820
Okay, so that 's all we need to do for
our Docker file.

58
00:03:13.820 --> 00:03:18.909
Then next to that Docker file,
same directory, in the devcontainer

59
00:03:18.909 --> 00:03:24.454
directory we're gonna create another
file called devcontainer.json.

60
00:03:24.454 --> 00:03:30.230
Now, key here, not .devcontainer.json,
it's called devcontainer.json.

61
00:03:30.230 --> 00:03:34.157
The name here is quite important so please
make it called the devcontainer.json.

62
00:03:34.157 --> 00:03:39.254
And it must be in
the .devcontainer directory.

63
00:03:41.293 --> 00:03:44.827
And here we can give a bunch of
information to Visual Studio Code so

64
00:03:44.827 --> 00:03:47.334
this is specifically for
Visual Studio Code,

65
00:03:47.334 --> 00:03:50.306
of all the things that you want set up for
your project.

66
00:03:50.306 --> 00:03:51.703
So you can give it a name, and

67
00:03:51.703 --> 00:03:55.660
that's the way you can kinda tell
it apart from different windows.

68
00:03:55.660 --> 00:03:57.630
So we're gonna call this one
the Frontend Masters Sample, but

69
00:03:57.630 --> 00:03:58.720
you can call it whatever you want.

70
00:04:00.493 --> 00:04:01.663
We'll close that.

71
00:04:04.782 --> 00:04:07.281
You're gonna point it to
where the Docker file is, so

72
00:04:07.281 --> 00:04:10.140
you can put your Docker
file anywhere you want.

73
00:04:10.140 --> 00:04:13.748
Ours is just happens to be here, I'm gonna
call it Dockerfile cuz that's where it is.

74
00:04:15.614 --> 00:04:22.918
The appPort, This runs on port 3000,
because that's where we made it.

75
00:04:22.918 --> 00:04:25.610
But you could expose all of the various
different ports here that you need to.

76
00:04:25.610 --> 00:04:30.160
So I can put 8080 and blah blah blah,
all that kind of stuff,

77
00:04:30.160 --> 00:04:33.549
but for now we're just gonna do port 3000.

78
00:04:33.549 --> 00:04:39.130
runArgs, so this is how we're
going to run the application.

79
00:04:39.130 --> 00:04:44.736
We're gonna do -u common node to run node.

80
00:04:44.736 --> 00:04:47.435
And then here, we're gonna do settings.

81
00:04:49.361 --> 00:04:52.397
And inside of settings, we can specify
a bunch of different settings for

82
00:04:52.397 --> 00:04:53.610
Visual Studio Code itself.

83
00:04:54.730 --> 00:04:57.870
So let's say that it was very important
that we wanted all of our users to

84
00:04:57.870 --> 00:04:59.240
use a particular theme.

85
00:05:00.320 --> 00:05:03.560
I don't know why you would do that,
but you can, right?

86
00:05:03.560 --> 00:05:06.206
So we're gonna do that,
we're gonna say workbench,

87
00:05:06.206 --> 00:05:09.845
that's nice that lets you kind of
autocomplete all these as well, right?

88
00:05:09.845 --> 00:05:12.349
When you do workbench.colorTheme
right there.

89
00:05:12.349 --> 00:05:16.164
And here it has all of mine listed out,
cuz it knows what they are.

90
00:05:16.164 --> 00:05:19.549
And we're gonna do a theme
from one of our other favorite

91
00:05:19.549 --> 00:05:23.741
Frontend Masters instructors,
Sarah Drasner, called Night Owl.

92
00:05:28.891 --> 00:05:34.981
Okay, and then we're gonna do terminal,
.integrated,

93
00:05:37.613 --> 00:05:43.975
.shell, .linux.

94
00:05:43.975 --> 00:05:45.250
Now why are we gonna do this?

95
00:05:46.640 --> 00:05:50.210
Because once you get into the container,
once you're inside the container,

96
00:05:50.210 --> 00:05:54.450
programming against it, you wanna be able
to specify which shell is the correct one.

97
00:05:54.450 --> 00:06:00.800
So for example on my local computer I
have a set so Zsh is my default shell.

98
00:06:00.800 --> 00:06:03.150
And when I get inside of this
container it needs to be bash.

99
00:06:03.150 --> 00:06:06.199
And so
I'm just gonna be specific about it and

100
00:06:06.199 --> 00:06:09.662
say that bin/bash is
the correct terminal to use.

101
00:06:12.411 --> 00:06:14.977
I'm gonna say postCreateCommand.

102
00:06:14.977 --> 00:06:16.870
This is where we get into
the dependency thing, right?

103
00:06:16.870 --> 00:06:19.520
Because once we're inside the container,
once the container is up and

104
00:06:19.520 --> 00:06:21.974
running, then we wanna run npm install,
right?

105
00:06:21.974 --> 00:06:23.672
So that's what we're gonna do.

106
00:06:23.672 --> 00:06:27.975
After it's finished creating the container
when I run npm install that kind of

107
00:06:27.975 --> 00:06:32.277
sidesteps the issue of not having
the correct dependencies and node modules,

108
00:06:32.277 --> 00:06:33.335
all kind of stuff.

109
00:06:36.071 --> 00:06:40.046
Okay, and then here,
something else very cool you can do is you

110
00:06:40.046 --> 00:06:45.350
can specify which extensions that you
want installed for your users, right?

111
00:06:45.350 --> 00:06:48.010
So someone can come into your project and
let us say your project depends on

112
00:06:48.010 --> 00:06:51.450
everyone using ESLint and
Prettier and unit testing, right?

113
00:06:51.450 --> 00:06:52.810
So you can go and install for

114
00:06:52.810 --> 00:06:55.330
them all the extensions that they
are gonna need to run the project.

115
00:06:57.360 --> 00:07:01.380
So first of all, we made Night Owl
the default that does actually come with

116
00:07:01.380 --> 00:07:05.760
Visual Studio Code by default, so we have
to specify, please install this theme.

117
00:07:05.760 --> 00:07:10.211
So we're gonna put sdras, for
Sarah Drasner, .night-owl.

118
00:07:10.211 --> 00:07:12.603
And then will go and
install the theme for us.

119
00:07:14.864 --> 00:07:21.030
Okay, we'll do dbaeumer.vscode-eslint,

120
00:07:21.030 --> 00:07:26.432
that will install the EsLint extension.

121
00:07:26.432 --> 00:07:31.149
And we'll do it esbernp.prettier-vscode,
and

122
00:07:31.149 --> 00:07:38.506
that will get the Prettier extension
which is a code formatter for JavaScript.

123
00:07:38.506 --> 00:07:41.052
And the EsLint is a Lint term,
in case that was not obvious.

124
00:07:43.445 --> 00:07:44.806
All right, so save that.

125
00:07:46.810 --> 00:07:48.520
Now there's a couple of
things that you can do.

126
00:07:50.220 --> 00:07:51.720
Let's actually do it this way.

127
00:07:51.720 --> 00:07:55.350
Right now I have here in my file explorer.

128
00:07:55.350 --> 00:07:58.815
I have all these different projects open,
I wanna open it so

129
00:07:58.815 --> 00:08:01.879
it's just
the more-complicated-node project.

130
00:08:03.090 --> 00:08:05.569
So for a second, I'm gonna minimize this.

131
00:08:08.411 --> 00:08:13.580
And I'm gonna open a more-complicated-node
project just itself,

132
00:08:13.580 --> 00:08:17.650
right, just that in my Visual Studio Code.

133
00:08:17.650 --> 00:08:19.438
So now if I click Open here.

134
00:08:31.040 --> 00:08:34.616
Notice the first thing it says, hey,
I noticed you have a dev container

135
00:08:34.616 --> 00:08:37.790
configuration file,
do you wanna open this in the container?

136
00:08:38.920 --> 00:08:41.528
So I'm gonna say, yes, I would, thank you.

137
00:08:44.512 --> 00:08:47.170
So down here you can see
that it's opening a remote.

138
00:08:47.170 --> 00:08:50.680
And click details here, and
you can see it's actually running

139
00:08:50.680 --> 00:08:55.162
the Docker build in the background for
my particular dev container.

140
00:08:55.162 --> 00:08:57.360
And so once it's done that,
then it's gonna run it for me and

141
00:08:57.360 --> 00:08:59.788
it's going to attach me
to the running container.

142
00:08:59.788 --> 00:09:02.430
I'm actually gonna be doing development
inside of the container and

143
00:09:02.430 --> 00:09:04.190
everything would be working
inside of the container.

144
00:09:05.890 --> 00:09:09.850
But then it's going to be
using those port exposing so

145
00:09:09.850 --> 00:09:14.251
that I could actually run the code
locally in my local host.

146
00:09:14.251 --> 00:09:16.353
So this will take a second,
there's a bunch of stuff for

147
00:09:16.353 --> 00:09:17.936
you to get everything working and ready.

148
00:09:23.688 --> 00:09:27.144
So if it didn't pop up,
reopen in dev container, or if you wanna

149
00:09:27.144 --> 00:09:31.060
do it after the pop-up goes away,
right now it doesn't show it on mine.

150
00:09:31.060 --> 00:09:34.800
But in the bottom left there's two little
angle brackets next to each other, right?

151
00:09:34.800 --> 00:09:38.214
If you click that, there should be
an option to reopen in container.

152
00:09:42.263 --> 00:09:47.156
If you're using Windows right now and
you're in WSL specifically,

153
00:09:47.156 --> 00:09:49.018
you have to get out of WSL.

154
00:09:49.018 --> 00:09:52.866
So you have to click that same logo and
say reopen in Windows and

155
00:09:52.866 --> 00:09:54.950
then it will ask you.

156
00:09:54.950 --> 00:09:56.745
&gt;&gt; All you did was just close and reopen.

157
00:09:56.745 --> 00:10:00.430
&gt;&gt; Mm-hm, that'll pop up to you and
reopen this container.

158
00:10:02.070 --> 00:10:05.320
So notice here now I'm totally
different theme, right?

159
00:10:05.320 --> 00:10:09.110
And you can see here I'm in
Dev Container Frontend Master Sample.

160
00:10:09.110 --> 00:10:11.010
And here if I click plus,

161
00:10:11.010 --> 00:10:16.330
if I say cat /etc/issue you can see
here I'm inside of Debian, right?

162
00:10:16.330 --> 00:10:21.320
So I'm actually inside of the container
right now doing development, but

163
00:10:21.320 --> 00:10:23.100
it's the same project.

164
00:10:23.100 --> 00:10:29.490
If I say node index.js
it'll run my project.

165
00:10:30.850 --> 00:10:36.621
And if I open this,
You'll see that it's still running.

166
00:10:36.621 --> 00:10:38.600
You can even see that it
opened it on a different port.

167
00:10:38.600 --> 00:10:42.030
I didn't even know it was gonna do that,
but it just kinda does that for you.

168
00:10:42.030 --> 00:10:43.350
It's coming back here to VS Code.

169
00:10:44.680 --> 00:10:47.480
I now have this little
remote explorer over here.

170
00:10:47.480 --> 00:10:56.310
You can see here, Remote Explorer.

171
00:10:56.310 --> 00:10:59.530
It should tell me,
there it's gonna be in here.

172
00:10:59.530 --> 00:11:00.783
So here the forwarded ports,

173
00:11:00.783 --> 00:11:04.341
I can actually see all the ports that it's
forwarding and where they're going to and

174
00:11:04.341 --> 00:11:06.915
I can reconfigure them and
a bunch of stuff like that as well.

175
00:11:14.581 --> 00:11:16.709
Any questions?

176
00:11:16.709 --> 00:11:18.791
&gt;&gt; Here's what I'm trying to think.

177
00:11:18.791 --> 00:11:22.421
So it's all great, you're in the
container, you're doing the development

178
00:11:22.421 --> 00:11:25.887
there, I'm assuming that's where
all your contents are saved, right?

179
00:11:25.887 --> 00:11:30.901
Now you wanna commit and
basically follow your regular workflow.

180
00:11:30.901 --> 00:11:31.915
How does that work?

181
00:11:31.915 --> 00:11:33.053
Just the regular way?

182
00:11:33.053 --> 00:11:34.211
&gt;&gt; So it's a bind bound, right?

183
00:11:34.211 --> 00:11:36.479
So it's actually writing to
the host operating system.

184
00:11:36.479 --> 00:11:38.125
&gt;&gt; So that's what it does?

185
00:11:38.125 --> 00:11:40.332
&gt;&gt; Yep, good question.

186
00:11:40.332 --> 00:11:42.269
Did you get it to work?

187
00:11:42.269 --> 00:11:43.626
Did you get it to work?

188
00:11:43.626 --> 00:11:44.686
&gt;&gt; I'm still working on it.

189
00:11:44.686 --> 00:11:45.297
&gt;&gt; Still work on it?

190
00:11:45.297 --> 00:11:46.005
&gt;&gt; Yeah.

191
00:11:46.005 --> 00:11:48.493
&gt;&gt; Yeah, with Windows and
WSL it's a little,

192
00:11:48.493 --> 00:11:52.193
working on that we're gonna make
that a better experience but for

193
00:11:52.193 --> 00:11:55.510
right now you have to exit out of WSL and
then reconnect it.

194
00:11:55.510 --> 00:11:59.670
Here at any time though I can say,
clicking on this little thing down here.

195
00:11:59.670 --> 00:12:01.950
I can say Close Remote Connection or
whatever you want.

196
00:12:03.300 --> 00:12:07.119
And actually, just says,
Close Remote Connection.

197
00:12:07.119 --> 00:12:10.810
This will send me back
into normal VS Code land.

198
00:12:13.753 --> 00:12:16.900
And then down here you can always say
reopen folder in container, right?

199
00:12:16.900 --> 00:12:19.640
So you can do all that
stuff up at anytime.

200
00:12:21.450 --> 00:12:22.457
So let's see.

201
00:12:29.234 --> 00:12:33.003
So I wanna show you how to be a little
bit evil to your coworkers, cuz it's fun.

202
00:12:35.384 --> 00:12:36.179
Where is this?

203
00:12:36.179 --> 00:12:39.959
So we're just gonna open this again, and

204
00:12:39.959 --> 00:12:45.365
we're gonna open
the more-complicated-node project.

205
00:12:47.749 --> 00:12:49.553
So right now I'm not gonna
open the same container,

206
00:12:49.553 --> 00:12:51.860
we're gonna do it here in just a second.

207
00:12:51.860 --> 00:12:55.670
So here is a funny April fools joke
to play on your coworkers, and

208
00:12:55.670 --> 00:12:57.100
do not do it to me,
cuz I will be very upset.

209
00:12:58.460 --> 00:13:00.910
So we 're gonna go back over
here to our devcontainer.json.

210
00:13:00.910 --> 00:13:04.599
And instead of being on Night Owl,
we're gonna make this Hot Dog Stand.

211
00:13:09.579 --> 00:13:11.707
So we're gonna make this Hot Dog Stand.

212
00:13:11.707 --> 00:13:16.495
And instead of installing
Night Owl right here,

213
00:13:16.495 --> 00:13:22.680
we're going to put
somekittens.hot-dog-stand.

214
00:13:22.680 --> 00:13:26.185
Now I'm going to warn this is going
to burn your eyeballs as soon as

215
00:13:26.185 --> 00:13:27.090
we reopen this.

216
00:13:27.090 --> 00:13:29.340
So if you don't want your eyeballs burnt,

217
00:13:29.340 --> 00:13:31.786
just don't click open
a container right now.

218
00:13:34.509 --> 00:13:37.161
Okay, so now that we have that,
I'm gonna click this and

219
00:13:37.161 --> 00:13:41.099
say, Reopen in Container, right?

220
00:13:46.240 --> 00:13:48.091
So it's gonna go through and
rebuild the container.

221
00:13:49.916 --> 00:13:51.120
I'm gonna click Rebuild.

222
00:13:51.120 --> 00:13:56.941
So a Hot Dog theme I found out the other
day is actually from Windows 3.1.

223
00:13:56.941 --> 00:14:00.143
There was a theme that you can
put on Windows 3.1 that was just

224
00:14:00.143 --> 00:14:02.026
the worst theme in the entire world.

225
00:14:02.026 --> 00:14:04.113
And someone recreated it for
Visual Studio Code.

226
00:14:06.630 --> 00:14:07.990
And it is just horrifying.

227
00:14:07.990 --> 00:14:12.783
[LAUGH] I can not even look at it for
very long, it gives me a headache.

228
00:14:15.885 --> 00:14:18.094
So if you have a dev container for
your work,

229
00:14:18.094 --> 00:14:21.880
just go change this to Hot Dog container
and you get this just monstrosity.

230
00:14:24.187 --> 00:14:26.640
Okay, I have to stop.

231
00:14:26.640 --> 00:14:29.310
I'm so sorry to all the people
I've harmed out there now.

232
00:14:30.710 --> 00:14:34.326
But pretty cool, and
you can do all sorts of crazy stuff.

233
00:14:34.326 --> 00:14:37.890
You can go on and make the font Times
New Roman by default or something that.

234
00:14:39.080 --> 00:14:42.390
Or Comic Sans,
we should have done Comic Sans.

235
00:14:42.390 --> 00:14:43.485
Anyway, next time.

236
00:14:43.485 --> 00:14:47.580
[LAUGH] All right, so
we'll close remote connection.

237
00:14:47.580 --> 00:14:49.720
That's all I wanted to show
you with Visual Studio Code.

238
00:14:49.720 --> 00:14:53.270
I think this is a truly compelling
workflow for you and your team, right?

239
00:14:53.270 --> 00:14:55.450
You could all just come up
with your dev container and

240
00:14:55.450 --> 00:14:57.880
then as soon as someone just opens
their Visual Studio Code with that, and

241
00:14:57.880 --> 00:15:00.160
there's, ey, we're gonna open
this in a container for you.

242
00:15:00.160 --> 00:15:02.570
It will set everything up for
you, just sit back and wait, and

243
00:15:02.570 --> 00:15:05.650
then once it's done,
everything will just be working for you.

244
00:15:05.650 --> 00:15:08.880
The thing I didn't show you but
was happening is EsLint and

245
00:15:08.880 --> 00:15:10.980
Prettier were automatically
installed as well.

246
00:15:10.980 --> 00:15:14.593
So if I started saving my work,
it would automatically be formatting and

247
00:15:14.593 --> 00:15:17.689
wanting my code for me just out
of the box, which is great too.

