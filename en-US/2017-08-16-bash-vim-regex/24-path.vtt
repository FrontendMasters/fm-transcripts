WEBVTT

1
00:00:00.550 --> 00:00:04.250
&gt;&gt; James: Now we can get a bit more
into like how your system works, and

2
00:00:04.250 --> 00:00:06.890
a few different environment variables
that it's really good to know about.

3
00:00:07.930 --> 00:00:12.804
So, this whole time we've been doing
things like learning commands,

4
00:00:12.804 --> 00:00:17.449
but it's important to know kind of
where these commands even live.

5
00:00:17.449 --> 00:00:22.070
These are all individual programs,
but where are they?

6
00:00:22.070 --> 00:00:27.498
So If you do echo $PATH,
all caps, you can see.

7
00:00:28.993 --> 00:00:34.740
&gt;&gt; James: So $PATH is a list
of colon separated file paths.

8
00:00:34.740 --> 00:00:38.846
So the default ones are places
like usr/local/bin, and

9
00:00:38.846 --> 00:00:42.969
user/bin, and /bin and
/sbin, and that kinda stuff.

10
00:00:44.720 --> 00:00:47.190
Different systems are gonna be
configured different ways, but

11
00:00:47.190 --> 00:00:52.030
there are a few places where you can
reliably expect they'll be in the path.

12
00:00:52.030 --> 00:00:54.440
If you want to make your own systems,

13
00:00:54.440 --> 00:00:57.730
if you were gonna make your own scripts
that were available system-wide,

14
00:00:57.730 --> 00:01:02.110
probably the best place to put
them would be in usr/local/bin.

15
00:01:02.110 --> 00:01:03.510
I'll check and
show you what mine looks like.

16
00:01:03.510 --> 00:01:06.352
So if you ls usr/local/bin, here,

17
00:01:06.352 --> 00:01:09.340
I've already got a lot of
little scripts in there.

18
00:01:11.950 --> 00:01:16.940
The operating system generally
doesn't touch /usr/local/bin.

19
00:01:16.940 --> 00:01:19.760
So it's safe to put your own stuff in
there, and you don't have to worry about

20
00:01:21.200 --> 00:01:24.410
your package manager or something,
going in and moving things around,

21
00:01:25.500 --> 00:01:28.910
because it will generally use places
like user/bin or /bin to do that.

22
00:01:30.540 --> 00:01:34.410
So here, I've got some files,
all of these files now.

23
00:01:35.720 --> 00:01:37.160
Any of these programs, so

24
00:01:37.160 --> 00:01:41.026
long as they have the executable bit set,
which you can do a chmod +x.

25
00:01:41.026 --> 00:01:43.510
And we'll talk more about
permissions in a little bit.

26
00:01:43.510 --> 00:01:47.250
Any one of these is now
available in my path, so

27
00:01:47.250 --> 00:01:52.820
I don't have to type usr/local/bin/ipfs,
for example, to use the ipfs program.

28
00:01:52.820 --> 00:01:54.778
I can just type ipfs.

29
00:01:54.778 --> 00:01:58.912
This is also true for our logger example,
if I just go back in and

30
00:01:58.912 --> 00:02:00.716
put back the original one.

31
00:02:02.575 --> 00:02:07.269
&gt;&gt; James: If I wanted to install this
system-wide, what I can do now it's sudo,

32
00:02:07.269 --> 00:02:11.240
because /usr/local/bin/
is a system-wide path.

33
00:02:11.240 --> 00:02:17.050
So I can copy my logger
into /usr/local/bin/,

34
00:02:17.050 --> 00:02:19.960
and I can give it a name,
and whatever name I give it

35
00:02:19.960 --> 00:02:24.950
will be the command name that it's
gonna show up as in my terminal.

36
00:02:26.000 --> 00:02:30.372
So I could call it loggy maybe for,
I don't know.

37
00:02:30.372 --> 00:02:31.475
Now, I have a command.

38
00:02:31.475 --> 00:02:38.914
A new command called loggy and,
&gt;&gt; James: I

39
00:02:38.914 --> 00:02:42.414
can see my message in the script.

40
00:02:46.658 --> 00:02:51.589
&gt;&gt; James: So it's quite common to,
like I showed a bit with the MPM config,

41
00:02:51.589 --> 00:02:55.820
to have things like your path
set up in your bashrc file.

42
00:02:55.820 --> 00:02:57.880
So I can just share what mine is like.

43
00:02:57.880 --> 00:03:00.709
So here's my path.

44
00:03:00.709 --> 00:03:06.530
Each of the pieces which is split by a
colon are the places where Bashful looks.

45
00:03:06.530 --> 00:03:09.200
So it starts at the first one,
then it goes to the next, and the next,

46
00:03:09.200 --> 00:03:09.790
and the next.

47
00:03:09.790 --> 00:03:12.920
And the first one that it
finds that has the same name

48
00:03:12.920 --> 00:03:16.480
whenever you type a command into
the command line, it'll use.

49
00:03:16.480 --> 00:03:22.110
So, it first searches my own prefix path
which is in my home directory, right here.

50
00:03:23.470 --> 00:03:27.136
And if it doesn't find anything there,
then it goes to the other locations.

51
00:03:35.124 --> 00:03:36.875
&gt;&gt; James: Right, so.

52
00:03:36.875 --> 00:03:42.645
bashrc file, if you haven't
noticed is also a shell script.

53
00:03:42.645 --> 00:03:45.488
So you can put whatever commands
that you want into here, and

54
00:03:45.488 --> 00:03:48.440
they'll be run every time
you open a new terminal.

55
00:03:48.440 --> 00:03:53.290
For example, a fun thing to test is
if you go to the end of your bashrc,

56
00:03:53.290 --> 00:03:58.139
or anywhere really in it, and
you put a message like echo HELLO WORLD.

57
00:03:59.220 --> 00:04:03.230
Now, the next time you open a new
terminal, I see the message HELLO WORLD.

58
00:04:05.720 --> 00:04:11.900
Now, anytime that I log in or open a new
terminal, I'm gonna have that command run.

59
00:04:11.900 --> 00:04:17.950
So, you can put whatever you want inside
of there, whatever kinds of stuff,

60
00:04:17.950 --> 00:04:20.560
whatever kinds of environment variables,
whatever kinds of set up.

61
00:04:21.990 --> 00:04:23.830
You could print a cool comic.

62
00:04:23.830 --> 00:04:26.560
There's a program you
can get called cowsa.

63
00:04:26.560 --> 00:04:32.290
I don't have it on here, but
it just says a message with a cow.

64
00:04:32.290 --> 00:04:33.380
It's pretty cool.

65
00:04:33.380 --> 00:04:34.300
I recommend you install it.

66
00:04:38.610 --> 00:04:40.510
There we go, there's a cow.

67
00:04:43.290 --> 00:04:45.200
You could put that in your bashrc,
whatever you want.

