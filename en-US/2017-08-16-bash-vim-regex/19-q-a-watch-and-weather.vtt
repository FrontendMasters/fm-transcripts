WEBVTT

1
00:00:00.570 --> 00:00:04.250
&gt;&gt; James: David shared on Mac,
print the date of Easter.

2
00:00:05.410 --> 00:00:05.910
&gt;&gt; Speaker 2: Nice.

3
00:00:06.986 --> 00:00:07.923
&gt;&gt; James: It works on my computer too.

4
00:00:07.923 --> 00:00:13.040
[LAUGH] What,
I don't even know about ncat.

5
00:00:13.040 --> 00:00:13.898
This is the thing.

6
00:00:13.898 --> 00:00:18.250
Even if you're using command line for
15 years,

7
00:00:18.250 --> 00:00:22.003
stuff like this still constantly comes by.

8
00:00:22.003 --> 00:00:26.030
Some command that's already on your
system, that you never knew about.

9
00:00:26.030 --> 00:00:28.220
Like ncow, that I'd never heard of before.

10
00:00:28.220 --> 00:00:32.933
[LAUGH] A command that
seems to be specifically

11
00:00:32.933 --> 00:00:36.410
to determine the date of Easter.

12
00:00:36.410 --> 00:00:36.920
All right.

13
00:00:36.920 --> 00:00:38.630
&gt;&gt; Speaker 2: Somebody had to use ncow,
it looks like.

14
00:00:38.630 --> 00:00:43.356
&gt;&gt; James: Yeah, yeah.

15
00:00:43.356 --> 00:00:44.228
All right.
&gt;&gt; [LAUGH]

16
00:00:44.228 --> 00:00:45.692
&gt;&gt; Speaker 2: That's the reason

17
00:00:45.692 --> 00:00:48.167
why Bash was actually created.

18
00:00:48.167 --> 00:00:49.349
No, reborn.

19
00:00:56.027 --> 00:00:59.670
&gt;&gt; James: Somebody else has a cool
one in the chat, it's watch-n30.

20
00:00:59.670 --> 00:01:01.546
Page you want to visit.

21
00:01:01.546 --> 00:01:08.440
It's cool wait to every 30 seconds
print out the status of something.

22
00:01:08.440 --> 00:01:12.690
That'd be good if you could find the URL
that will print out the temperature, or

23
00:01:12.690 --> 00:01:17.410
you could even find some Noah webpage
that has the temperature in it.

24
00:01:17.410 --> 00:01:18.970
There may be other garbage, and

25
00:01:18.970 --> 00:01:22.890
you could filter it with and
stuff to just print out the temperature.

26
00:01:24.470 --> 00:01:27.128
And then you can use
the arithmetic expressions

27
00:01:27.128 --> 00:01:31.591
to convert from Fahrenheit to Celsius or
vice versa or something fun like that.

28
00:01:31.591 --> 00:01:36.798
That would be a fun little project if

29
00:01:36.798 --> 00:01:41.838
someone wants to figure that out.

30
00:01:42.953 --> 00:01:45.941
&gt;&gt; Speaker 2: How about anybody in
the room, have you learned anything?

31
00:01:45.941 --> 00:01:50.930
M = commands.

32
00:01:50.930 --> 00:01:52.420
&gt;&gt; Speaker 3: I just put mine in the chat.

33
00:01:52.420 --> 00:01:56.260
Just [COUGH] something I did a lot
when I was doing backend development.

34
00:01:56.260 --> 00:01:58.170
Monitoring logs and then using tail -f.

35
00:01:58.170 --> 00:02:02.602
Because it opens up the end of the file
and then as the log gets appended to,

36
00:02:02.602 --> 00:02:05.850
you can kind of see it and
scroll up in your screen.

37
00:02:05.850 --> 00:02:08.922
&gt;&gt; James: Yeah,
why don't I show people how that -f works.

38
00:02:08.922 --> 00:02:14.062
Because that's really handy too for

39
00:02:14.062 --> 00:02:16.888
logging and stuff.

40
00:02:16.888 --> 00:02:22.754
So here we have our hello.txt, and so
this tail command is just like, it's still

41
00:02:22.754 --> 00:02:28.210
open, so it's just waiting to see if
anything else is written to that file.

42
00:02:28.210 --> 00:02:33.730
So if I append some
more data to hello.txt,

43
00:02:33.730 --> 00:02:38.130
you see it in the command, so different
scripts on your system can be running.

44
00:02:38.130 --> 00:02:44.485
Or maybe I'll do something
a little bit tricky here and

45
00:02:44.485 --> 00:02:48.908
I'll make a little watch command that

46
00:02:48.908 --> 00:02:53.620
every five seconds will echo the dates.

47
00:02:53.620 --> 00:03:00.607
Just echo the date command and maybe the,
&gt;&gt; James: T, right.

48
00:03:00.607 --> 00:03:07.930
So this should print out the current
time every five seconds to hello.txt.

49
00:03:07.930 --> 00:03:13.479
So here we go, there's the first one,
and there's the second one.

50
00:03:15.697 --> 00:03:18.861
&gt;&gt; James: So tail -f, pretty useful.

51
00:03:23.562 --> 00:03:24.280
&gt;&gt; James: Anything else?
Cool,

52
00:03:24.280 --> 00:03:29.260
someone has the weather print out
with the curl command, pretty good.

53
00:03:30.350 --> 00:03:31.595
Paste that one in.

54
00:03:31.595 --> 00:03:36.950
Woah [LAUGH] yeah, dude, and
this terminal, zoom out of it.

55
00:03:38.370 --> 00:03:44.176
Wow, that's something else.

56
00:03:44.176 --> 00:03:48.532
You could parse out the temperature,
maybe.

57
00:03:48.532 --> 00:03:52.065
If I do head -n3.

58
00:03:52.065 --> 00:03:57.161
Right, so that progress bar,
you can get rid of with -s, curl -s.

59
00:03:57.161 --> 00:04:01.970
I guess it's on the fourth line.

60
00:04:03.010 --> 00:04:06.320
So if you do the head to get
the first four lines, and

61
00:04:06.320 --> 00:04:11.240
then you do tail to back up one line,
you'll get the fourth line.

62
00:04:11.240 --> 00:04:13.171
Which has the temperature in it.

63
00:04:13.171 --> 00:04:14.870
You can ignore that field writing body.

64
00:04:14.870 --> 00:04:17.946
If you want another hack
to get rid of that,

65
00:04:17.946 --> 00:04:23.039
you can do,
&gt;&gt; James: You can do that magical

66
00:04:23.039 --> 00:04:27.875
incantation, 2&gt;&amp;1 which basically copies,
sorry, not &amp;1, but

67
00:04:27.875 --> 00:04:32.789
you can pipe a standard error which is
another kind of thing that's related

68
00:04:32.789 --> 00:04:37.235
to standard out, but it's where
like spamming messages go [LAUGH].

69
00:04:37.235 --> 00:04:43.220
You can just put into the bin and
that way you don't have to see it.

70
00:04:43.220 --> 00:04:43.910
So there we go.

71
00:04:43.910 --> 00:04:46.440
Now we just get the temperature and

72
00:04:46.440 --> 00:04:51.460
we can do something like cut out
everything that's not a digit.

73
00:04:52.630 --> 00:04:55.203
Or I guess E on Mac would
be what you would use.

74
00:04:55.203 --> 00:04:56.200
I wonder if that works in Linux.

75
00:04:57.540 --> 00:04:58.801
Just replace that with nothing.

76
00:04:58.801 --> 00:05:01.318
So it should be 51 55.

77
00:05:01.318 --> 00:05:07.554
But in my case on Linux,
I have to use -r or I guess not.

78
00:05:07.554 --> 00:05:12.458
Maybe I'll have to do it this way.

79
00:05:12.458 --> 00:05:15.840
Woah, weird.

80
00:05:15.840 --> 00:05:18.444
Okay, I guess there is a lot
of other numbers there.

81
00:05:18.444 --> 00:05:22.020
Anyways, if any of you wanna
tackle using that weather thing,

82
00:05:22.020 --> 00:05:25.676
if you wanna scrape out
the temperature from it, that's okay.

83
00:05:25.676 --> 00:05:27.887
Yeah, question.

84
00:05:27.887 --> 00:05:32.231
&gt;&gt; Speaker 2: Yeah, people are asking
if you found a good use for

85
00:05:32.231 --> 00:05:37.309
the wall command besides just
chatting with other users.

86
00:05:37.309 --> 00:05:41.168
&gt;&gt; James: No, I guess if you had a system
script that you want to alert you of

87
00:05:41.168 --> 00:05:43.900
critical things,
it might be good for that.

88
00:05:43.900 --> 00:05:45.823
But I wouldn't do that, that's spammy.

89
00:05:45.823 --> 00:05:50.561
[LAUGH] It's mostly just used to
annoy other users on the system.

90
00:05:57.330 --> 00:05:59.691
&gt;&gt; James: Okay, so
someone wanted to see the xargs example.

91
00:05:59.691 --> 00:06:02.651
Let me put that back up real fast.

92
00:06:02.651 --> 00:06:05.068
It's somewhere in my History.

93
00:06:05.068 --> 00:06:06.460
Also, there's a history command.

94
00:06:06.460 --> 00:06:12.578
So if you want to see what commands
you've typed, you can type history and

95
00:06:12.578 --> 00:06:17.224
you can parse that if you like,
with grep and whatever.

96
00:06:17.224 --> 00:06:23.081
So, if I do grep xargs, I see, here we go.

97
00:06:23.081 --> 00:06:25.030
So this is my xargs example.

