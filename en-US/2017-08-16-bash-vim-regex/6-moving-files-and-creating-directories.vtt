WEBVTT

1
00:00:00.160 --> 00:00:00.880
&gt;&gt; James Halliday: Okay, so

2
00:00:00.880 --> 00:00:06.290
a related command to the copy command
is the move command, which is mv.

3
00:00:06.290 --> 00:00:11.114
You can use this to
rename commands which is

4
00:00:11.114 --> 00:00:15.405
kind of the same idea as moving files.

5
00:00:15.405 --> 00:00:18.240
You can also use it to overwrite files.

6
00:00:18.240 --> 00:00:24.104
So, if I have a file,
maybe I want to move message.txt,

7
00:00:24.104 --> 00:00:29.856
I wanna rename it to be something else,
like msg.txt.

8
00:00:31.706 --> 00:00:34.105
&gt;&gt; James Halliday: Now I can cat it out,
and list the files.

9
00:00:34.105 --> 00:00:38.057
The original one is gone,
and now it's in a new place.

10
00:00:38.057 --> 00:00:45.850
Also, if I wanna, for example,
override an existing file, I can do that.

11
00:00:45.850 --> 00:00:49.989
So if I wanna move msg.txt,
which I should change,

12
00:00:49.989 --> 00:00:53.102
put some exclamation marks at the end.

13
00:00:54.398 --> 00:01:00.346
&gt;&gt; James Halliday: So now,
I can move msg.txt over top of boop.txt.

14
00:01:00.346 --> 00:01:02.582
And now, if I kept that file,

15
00:01:02.582 --> 00:01:06.980
it has the contents of msg.txt,
which no longer exists.

16
00:01:17.550 --> 00:01:22.215
&gt;&gt; James Halliday: So you can do the same
thing with directories as you can

17
00:01:22.215 --> 00:01:23.360
with files.

18
00:01:23.360 --> 00:01:25.410
So if you wanna rename a directory, for

19
00:01:25.410 --> 00:01:31.320
example, if I were to move the directory
called cool into something else called

20
00:01:31.320 --> 00:01:34.990
good, then now there's
a directory called good.

21
00:01:36.921 --> 00:01:40.144
&gt;&gt; James Halliday: Because of how
directories work, you don't ever have to

22
00:01:40.144 --> 00:01:44.712
think about like doing things recursively,
like you would with the copy command

23
00:01:44.712 --> 00:01:49.030
because all that's it's doing is just
changing the name of the directory.

24
00:01:54.996 --> 00:02:00.092
&gt;&gt; James Halliday: The other fun commands
that we can use is the command to

25
00:02:00.092 --> 00:02:07.290
make a new directory, which is called
mkdir, which is often said mikdir.

26
00:02:07.290 --> 00:02:11.600
So, if you wanna make a new directory,
you can type mkdir, and

27
00:02:11.600 --> 00:02:14.704
then the name of the directory
that you wanna create like wow.

28
00:02:16.380 --> 00:02:18.304
&gt;&gt; James Halliday: If do ls,
there's a new directory called wow.

29
00:02:20.730 --> 00:02:26.058
&gt;&gt; James Halliday: The mkdir command
takes a really nifty argument called -p.

30
00:02:26.058 --> 00:02:31.255
And so the -p command says,
if this directory

31
00:02:31.255 --> 00:02:36.870
name already exists then just go ahead and
use it.

32
00:02:36.870 --> 00:02:38.520
But if it doesn't exist, then create it.

33
00:02:38.520 --> 00:02:42.590
So you can do something with mkdir -p,
here I can show you.

34
00:02:42.590 --> 00:02:48.222
So if I try to make a new directory called
a/b/c/d, then it's not going to work,

35
00:02:48.222 --> 00:02:54.258
because there's no directory called a, and
there's no directory inside of a called b,

36
00:02:54.258 --> 00:02:57.494
and there's no directory
inside of b called c.

37
00:02:57.494 --> 00:03:02.766
So that's not gonna work, but
you can pass in this flag called -p.

38
00:03:02.766 --> 00:03:04.596
And then I just go ahead,

39
00:03:04.596 --> 00:03:09.140
then it makes this whole nested
directory structure for you.

40
00:03:10.408 --> 00:03:12.252
&gt;&gt; James Halliday: So
it's a handy shortcut so

41
00:03:12.252 --> 00:03:15.789
that you don't have to do
a bunch of mkdir commands.

42
00:03:18.960 --> 00:03:21.162
&gt;&gt; James Halliday: Another nice
thing about the mkdir command is,

43
00:03:21.162 --> 00:03:24.299
if some of those directories already
exist, but not all of them, or

44
00:03:24.299 --> 00:03:26.930
if all of them exist,
then it succeeds no matter what.

45
00:03:26.930 --> 00:03:32.488
So here,
I already have a directory called wow,

46
00:03:32.488 --> 00:03:37.105
but I can mkdir -p wow/great/nifty.

47
00:03:37.105 --> 00:03:40.575
And wow is a directory that
already exists, but great and

48
00:03:40.575 --> 00:03:45.650
nifty don't already exist, so the mkdir
command will create those directories.

49
00:03:46.927 --> 00:03:51.046
&gt;&gt; James Halliday: Check and
see, wow, great, whoops, nifty.

50
00:03:54.045 --> 00:03:59.460
&gt;&gt; James Halliday: Another important
thing as your exploring your system is

51
00:03:59.460 --> 00:04:05.180
bash has this very useful
feature called tab completion.

52
00:04:05.180 --> 00:04:10.830
So if you start typing the name of
a file and then hit the tab key,

53
00:04:10.830 --> 00:04:17.016
so for example, if I start typing
cat b-e-e and then I hit tab,

54
00:04:17.016 --> 00:04:22.330
then it bashes clever enough to complete
the rest of what that would be.

55
00:04:25.468 --> 00:04:29.639
&gt;&gt; James Halliday: So, bash only needs
enough information to uniquely identify

56
00:04:29.639 --> 00:04:31.570
the file before you hit tab.

57
00:04:31.570 --> 00:04:36.558
And if it doesn't have enough information,
and I hit tab, so if I just type b and

58
00:04:36.558 --> 00:04:41.380
I hit tab, it doesn't do anything
because that's still ambiguous.

59
00:04:41.380 --> 00:04:42.950
But you can hit tab twice.

60
00:04:44.159 --> 00:04:47.712
&gt;&gt; James Halliday: And it lists out all
of the options which is pretty handy

61
00:04:47.712 --> 00:04:48.570
sometimes.

