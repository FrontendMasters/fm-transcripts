WEBVTT

1
00:00:00.180 --> 00:00:03.610
&gt;&gt; James Halliday: Some more fun things,
we did combining with deletes.

2
00:00:03.610 --> 00:00:05.110
We can also do search and replace.

3
00:00:05.110 --> 00:00:07.650
So this should be familiar.

4
00:00:07.650 --> 00:00:10.490
It's the same thing we did with Said.

5
00:00:10.490 --> 00:00:12.570
That works in VIM, as well.

6
00:00:12.570 --> 00:00:18.980
So if we want to search a pattern like,
I suppose, we want to search for

7
00:00:18.980 --> 00:00:25.090
the word Dog on the current line and
replace it with cat.

8
00:00:26.800 --> 00:00:30.680
In command mode, you can do :s,

9
00:00:30.680 --> 00:00:36.019
have your pattern like dog, and
replace it with cat by doing :s.

10
00:00:36.019 --> 00:00:41.142
/dog/cat and omit the final trailing slash

11
00:00:41.142 --> 00:00:47.356
if you like doesn't really care or
you can include it.

12
00:00:50.581 --> 00:00:55.183
&gt;&gt; James Halliday: And when you do just
an S by itself just like in said it

13
00:00:55.183 --> 00:00:59.268
will find the first instance and
replace it.

14
00:00:59.268 --> 00:01:04.076
If you wanna do all of the instances
on the current line then you can

15
00:01:04.076 --> 00:01:08.718
put a at the end, the flag using regx for
global substitution.

16
00:01:08.718 --> 00:01:14.208
So if I do :/dog/cat,
then it should replace

17
00:01:14.208 --> 00:01:19.437
all of the dogs on that
current line with cat.

18
00:01:22.488 --> 00:01:25.189
&gt;&gt; James Halliday: So I'm gonna add dog
a few more times into this file, and

19
00:01:25.189 --> 00:01:29.099
then I'll show you how you can do a global
substitution, which is pretty handy,

20
00:01:29.099 --> 00:01:29.869
I do that a lot.

21
00:01:32.155 --> 00:01:37.827
&gt;&gt; James Halliday: Okay, so
if you try to do :s/dog/cat/ on a line

22
00:01:37.827 --> 00:01:45.290
where there's no dog then it's
not gonna replace anything.

23
00:01:45.290 --> 00:01:46.250
Pattern not found: dog.

24
00:01:47.710 --> 00:01:54.641
So, what you can do is
if you do :% s/dog/cat/,

25
00:01:54.641 --> 00:01:58.010
then it's gonna search every
single line in the file.

26
00:01:59.860 --> 00:02:07.760
So if you do that, on very line I replace
the first instance of Dog with cat.

27
00:02:07.760 --> 00:02:10.090
So there's still dog in the file.

28
00:02:10.090 --> 00:02:14.960
If I wanna replace every single instance,
I can add g to that substitution, and

29
00:02:14.960 --> 00:02:19.130
that will replace every single
instance in the file of dog, with cat.

30
00:02:20.150 --> 00:02:20.650
There we go.

31
00:02:25.405 --> 00:02:28.380
&gt;&gt; James Halliday: So I'm doing U and
Ctrl + R which is undo and redo.

32
00:02:28.380 --> 00:02:29.127
So that's kinda.

33
00:02:31.050 --> 00:02:32.185
&gt;&gt; James Halliday: Do you
want to show different?

34
00:02:37.469 --> 00:02:41.479
&gt;&gt; James Halliday: Other flags common
to regex works, like the iflag, for

35
00:02:41.479 --> 00:02:43.360
case insensitivity.

36
00:02:43.360 --> 00:02:45.054
Works just the same as it does and said.

