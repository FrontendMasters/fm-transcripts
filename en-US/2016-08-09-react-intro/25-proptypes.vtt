WEBVTT

1
00:00:00.000 --> 00:00:03.839
[MUSIC]

2
00:00:03.839 --> 00:00:09.094
&gt;&gt; Brian Holt: Okay so
we're gonna say ShowCard

3
00:00:09.094 --> 00:00:16.045
.propTypes = show: React.PropTypes.

4
00:00:16.045 --> 00:00:20.178
This is my biggest pet peeve with
React is this one's lower case.

5
00:00:20.178 --> 00:00:24.467
This one's upper case and you just
have to remember that and I hate it.

6
00:00:24.467 --> 00:00:29.131
But that's how it is so #DealWithIt.

7
00:00:29.131 --> 00:00:30.923
&gt;&gt; Speaker 2: Is it
supposed to be ShowCard?

8
00:00:30.923 --> 00:00:35.055
&gt;&gt; Brian Holt: Yes.

9
00:00:35.055 --> 00:00:40.780
React.propTypes, where I'm I?

10
00:00:42.030 --> 00:00:46.601
object, okay, so
what this is bit this is giving

11
00:00:46.601 --> 00:00:51.183
React a little helper to
help you debug it right.

12
00:00:51.183 --> 00:00:53.263
So you're basically telling hey React,

13
00:00:53.263 --> 00:00:56.473
you're going to getting something
called show in your props and

14
00:00:56.473 --> 00:01:00.456
if it's not an object, I need you to blow
up, not blow up but actually just gives

15
00:01:00.456 --> 00:01:04.259
you a warning in the console like hey you
said this was going to be an object and

16
00:01:04.259 --> 00:01:07.501
it was definitely a boolean so
you might have a bug going on here.

17
00:01:07.501 --> 00:01:11.459
&gt;&gt; Speaker 3: Is there reason we're
not doing this in showcard.jsx?

18
00:01:11.459 --> 00:01:12.057
&gt;&gt; Brian Holt: Yeah.

19
00:01:12.057 --> 00:01:14.666
I’m sorry.
I'm totally in the wrong file.

20
00:01:14.666 --> 00:01:16.218
I probably need a break
more than any of you.

21
00:01:16.218 --> 00:01:18.594
&gt;&gt; All: [LAUGH]
&gt;&gt; Brian Holt: Okay, sorry.

22
00:01:18.594 --> 00:01:26.060
So we're gonna be in show card
&gt;&gt; Brian Holt: So

23
00:01:26.060 --> 00:01:29.010
ShowCard, and you just stick it on here.

24
00:01:32.879 --> 00:01:36.330
&gt;&gt; Brian Holt: So yeah, this is basically
typing thing for Reacts, right?

25
00:01:38.220 --> 00:01:43.570
Now, you actually can't really have
a ShowCard without a show right?

26
00:01:43.570 --> 00:01:47.530
That just doesn't make any sense like
this component falls apart if it does not

27
00:01:47.530 --> 00:01:49.680
get a show.

28
00:01:49.680 --> 00:01:52.300
So you can actually even go one
step further and say isRequired.

29
00:01:54.780 --> 00:01:56.890
So if you leave off that, it's optional.

30
00:01:58.969 --> 00:02:01.287
&gt;&gt; Brian Holt: And if you put that
on there, then is going to say,

31
00:02:01.287 --> 00:02:04.950
hey you said this is gonna be here and
it was not here, so I'm gonna yell at you.

32
00:02:07.950 --> 00:02:13.873
Okay, so save that and now,
notice all of our linting errors,

33
00:02:13.873 --> 00:02:17.764
no that's still getting linting errors.

34
00:02:28.383 --> 00:02:30.181
&gt;&gt; Brian Holt: Right,
those go underneath, right.

35
00:02:30.181 --> 00:02:34.722
Let me just make sure I always get sure
it's like should it go above or go below.

36
00:02:41.264 --> 00:02:42.059
&gt;&gt; Brian Holt: So there we go.

37
00:02:42.059 --> 00:02:46.669
That works.

38
00:02:46.669 --> 00:02:50.386
So that's what that's saying is like
our one of our standard rules for

39
00:02:50.386 --> 00:02:54.356
standard React is that you must put
propType validations on everything and

40
00:02:54.356 --> 00:02:57.269
it's going to save you bugs in the future,
I promise.

41
00:02:57.269 --> 00:02:59.756
So it's a good habit to get into.

42
00:03:04.012 --> 00:03:06.522
&gt;&gt; Brian Holt: So if you refresh that,
it doesn't actually do anything for

43
00:03:06.522 --> 00:03:07.170
your program.

44
00:03:07.170 --> 00:03:08.722
It doesn't make it any faster or
anything like that.

45
00:03:08.722 --> 00:03:11.260
It just makes it a little
bit easier to debug.

46
00:03:12.330 --> 00:03:16.290
In fact, what they suggest is, when
you're shipping this out to production,

47
00:03:16.290 --> 00:03:18.540
actually go out back and
strip out your prop types.

48
00:03:18.540 --> 00:03:21.870
Because there's no point in a user
getting all your prop types, right?

49
00:03:21.870 --> 00:03:22.740
It doesn't help them at all.

50
00:03:25.490 --> 00:03:27.720
Is gonna show you one more
thing before you broke.

51
00:03:32.000 --> 00:03:33.730
And I'm gonna show what
the error looks like.

52
00:03:33.730 --> 00:03:37.320
So, let's go to search.jsx.

53
00:03:37.320 --> 00:03:39.990
What I'm gonna do here, you don't have to
do this I'm gonna show you what it looks

54
00:03:39.990 --> 00:03:42.950
like and I'm just gonna put
a show card with nothing on it.

55
00:03:45.810 --> 00:03:50.840
Save that like that will compile just fine
rather there's no issue with that, but

56
00:03:50.840 --> 00:03:56.340
if we refresh here, it's gonna

57
00:03:56.340 --> 00:04:00.970
give me a failed prop type right here
like hey you said this is required and

58
00:04:00.970 --> 00:04:03.340
it's no longer there,
like what the hell is going on?

59
00:04:03.340 --> 00:04:05.130
What's wrong with you?

60
00:04:05.130 --> 00:04:06.810
Please give that to me in the future,
right?

61
00:04:06.810 --> 00:04:09.590
And then like once it actually
tries to reference posters,

62
00:04:09.590 --> 00:04:11.970
it's not there then the whole
thing crashes, right?

63
00:04:11.970 --> 00:04:18.131
But this actually gives you,
this is kind of a amorphous error.

64
00:04:18.131 --> 00:04:20.219
This is a pretty solid errors
like I expected this and

65
00:04:20.219 --> 00:04:21.370
you didn't give it to me.

66
00:04:21.370 --> 00:04:23.830
So that's why I think it's really cool.

67
00:04:23.830 --> 00:04:27.993
Someone asked the astute question of,
I want to pass down the individual

68
00:04:27.993 --> 00:04:32.089
properties rather than just like show
as an entire object and luckily,

69
00:04:32.089 --> 00:04:36.062
we have some yes six magic that we can
do to make that really easy to do.

70
00:04:36.062 --> 00:04:41.920
So, let's go over to our search.jsx.

71
00:04:41.920 --> 00:04:45.160
So notice we're passing show
the entire object down.

72
00:04:45.160 --> 00:04:47.130
Now you can actually go through
if you really want to and

73
00:04:47.130 --> 00:04:51.170
say poster equals show.poster.

74
00:04:51.170 --> 00:04:57.341
Title equals show.title, etc., etc.

75
00:04:57.341 --> 00:05:01.430
That's a little, it's too much typing for
my lazy fingers, right?

76
00:05:01.430 --> 00:05:03.320
Cuz it can end up being a lot.

77
00:05:03.320 --> 00:05:06.635
So what you can actually do is
what's called the spread operator.

78
00:05:06.635 --> 00:05:09.906
And you can say,

79
00:05:09.906 --> 00:05:14.586
just {...show}.

80
00:05:14.586 --> 00:05:18.188
And what this is gonna do is, it's gonna
take everything that you have right inside

81
00:05:18.188 --> 00:05:20.970
of show, and
it's gonna spread it out, right?

82
00:05:20.970 --> 00:05:25.961
So this would be the exact same
as saying show={show.poster} for

83
00:05:25.961 --> 00:05:28.552
every single thing inside of show.

84
00:05:28.552 --> 00:05:32.910
But here, you're actually telling jsx.

85
00:05:32.910 --> 00:05:38.110
This is not really a ES6 feature,
but it's mimicking what ES6 does.

86
00:05:38.110 --> 00:05:44.470
And it just spreads it out over the entire
object so instead of so say that.

87
00:05:44.470 --> 00:05:46.510
Come over here to ShowCard.

88
00:05:46.510 --> 00:05:49.458
Instead of saying props.show.title,

89
00:05:49.458 --> 00:05:53.931
now we could just say props.title
which is kind of nice right?

90
00:05:53.931 --> 00:05:56.967
You're cutting all this additional
stuff out of the middle.

91
00:06:03.216 --> 00:06:05.838
&gt;&gt; Speaker 5: What about your
constraint there at the bottom?

92
00:06:05.838 --> 00:06:07.681
The show?
&gt;&gt; Brian Holt: This PropTypes?

93
00:06:07.681 --> 00:06:13.018
We have to fix that or else it's going
to blow up which is also a positive

94
00:06:13.018 --> 00:06:18.356
side benefit of this because now we
can actually put Prop types for each

95
00:06:18.356 --> 00:06:25.390
individual and React to me that much more
helpful in helping us find bugs right.

96
00:06:25.390 --> 00:06:28.570
Because [COUGH] let's say we
tapped passed on a show but for

97
00:06:28.570 --> 00:06:31.200
whatever reason the show didn't
get the title attached to it.

98
00:06:31.200 --> 00:06:34.689
Your prop types would not warn you about
that right cuz it's only looking for

99
00:06:34.689 --> 00:06:37.972
show and if shows is there,
then it just says cool, I'm done, right?

100
00:06:37.972 --> 00:06:41.800
But now if you don't pass down title,
it's going to blow up and

101
00:06:41.800 --> 00:06:44.265
say hey you forgot title which is great.

102
00:06:44.265 --> 00:06:51.610
So I'm gonna say title React.uppercase.

103
00:06:51.610 --> 00:06:58.550
So, I don't know about you but I get
sick of doing racked up prop types for

104
00:06:58.550 --> 00:07:01.330
every single thing so we can actually
even just do a little shortcut up here.

105
00:07:02.600 --> 00:07:03.150
const.

106
00:07:04.750 --> 00:07:08.425
We're gonna use string.

107
00:07:08.425 --> 00:07:10.780
Actually they're all gonna be strings,
right.

108
00:07:10.780 --> 00:07:15.533
Yep, they are all strings =

109
00:07:15.533 --> 00:07:19.694
React.PropTypes and so

110
00:07:19.694 --> 00:07:25.241
now we can say string description

111
00:07:25.241 --> 00:07:30.600
is a string and year is a string.

112
00:07:31.690 --> 00:07:35.840
Yes typically year would be a number but

113
00:07:35.840 --> 00:07:40.320
just remember like it can,
it's like 2014 to 2017 or whatever.

114
00:07:40.320 --> 00:07:46.500
That's why that’s still a string and
poster string.

115
00:07:46.500 --> 00:07:47.970
These are all required as well.

116
00:07:47.970 --> 00:07:53.300
So we can actually go after these and
say .isRequired

117
00:08:01.100 --> 00:08:02.136
&gt;&gt; Brian Holt: Save that.

118
00:08:02.136 --> 00:08:05.030
Any questions about that,
well we just did here?

119
00:08:05.030 --> 00:08:07.790
&gt;&gt; Speaker 6: Yes the string in
curly brackets of on line 14,

120
00:08:07.790 --> 00:08:12.530
that's taking the attributes propTypes.

121
00:08:12.530 --> 00:08:15.734
&gt;&gt; Brian Holt: It's the destructuring
that we'll use the exact same sort of

122
00:08:15.734 --> 00:08:17.467
destruction that we saw before.

123
00:08:17.467 --> 00:08:20.595
You can also do this as well.

124
00:08:20.595 --> 00:08:25.094
const string = React.PropTypes.string,
right.

125
00:08:25.094 --> 00:08:27.012
Same diff.

126
00:08:27.012 --> 00:08:31.769
&gt;&gt; Speaker 7: So our key issue
stayed the same with this change?

127
00:08:31.769 --> 00:08:32.345
&gt;&gt; Brian Holt: Yup.

128
00:08:32.345 --> 00:08:35.060
&gt;&gt; Speaker 7: Okay.

129
00:08:35.060 --> 00:08:36.205
&gt;&gt; Brian Holt: So if you save,

130
00:08:36.205 --> 00:08:41.595
I'll let people take a look at this
a sec before I address your question.

131
00:08:48.517 --> 00:08:49.562
&gt;&gt; Brian Holt: So you must have got it.

132
00:08:49.562 --> 00:08:53.999
So let's go and look at search real quick,
we'll also have the soft key there for

133
00:08:53.999 --> 00:08:54.990
the same reason.

134
00:09:00.260 --> 00:09:04.400
Okay, so let's refresh here.

135
00:09:05.580 --> 00:09:06.800
&gt;&gt; Speaker 8: Is there a way.

136
00:09:06.800 --> 00:09:10.630
So let's say you do want to pass
in one object as the props.

137
00:09:10.630 --> 00:09:17.560
Is there a way to specify child
properties inside of that object?

138
00:09:17.560 --> 00:09:21.137
&gt;&gt; Brian Holt: Yeah let's look at the
documentation real quick react prop types.

139
00:09:25.797 --> 00:09:26.635
&gt;&gt; Brian Holt: I believe.

140
00:09:35.342 --> 00:09:36.223
&gt;&gt; Brian Holt: Object of.

141
00:09:36.223 --> 00:09:37.719
This is what you're gonna use?

142
00:09:37.719 --> 00:09:38.683
No, shape.

143
00:09:38.683 --> 00:09:41.000
That's what it is.

144
00:09:41.000 --> 00:09:45.053
And that's gonna look inside of it then
you can just do nested shape as well.

145
00:09:45.053 --> 00:09:48.917
There's also array of if you're
passing an array of something and

146
00:09:48.917 --> 00:09:52.719
you wanna validated that an array
of strings that also works too.

147
00:09:52.719 --> 00:09:57.660
Actually, we'll use

148
00:09:57.660 --> 00:10:02.345
real a rail of later.

149
00:10:02.345 --> 00:10:03.400
There's also any.

150
00:10:04.480 --> 00:10:05.960
I don't see it anywhere in here.

151
00:10:05.960 --> 00:10:07.340
Right there, any.

152
00:10:07.340 --> 00:10:09.678
So if you're just going to
pass down something and

153
00:10:09.678 --> 00:10:13.753
you don't actually really care what the
type is, you can do a react.prop type.any.

154
00:10:13.753 --> 00:10:16.290
And that's going to say match
anything that comes in here.

155
00:10:16.290 --> 00:10:19.950
But this will just make
sure that isRequired like

156
00:10:19.950 --> 00:10:21.200
it's definitely gonna show up right.

157
00:10:23.025 --> 00:10:25.255
For the most part,
you don't need to do that.

158
00:10:25.255 --> 00:10:27.477
You can also make your
own custom prop types,

159
00:10:27.477 --> 00:10:30.320
read about it on your own
time cuz I've never done it.

160
00:10:30.320 --> 00:10:34.380
It's useful not useful for me to
explain to you if I've never done it.

161
00:10:34.380 --> 00:10:36.840
Know that it exists though should you so
desire that.

