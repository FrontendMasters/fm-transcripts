WEBVTT

1
00:00:00.000 --> 00:00:04.062
[MUSIC]

2
00:00:04.062 --> 00:00:06.848
&gt;&gt; Brian: So let's go back to details and
let's actually do this pretty code thing

3
00:00:06.848 --> 00:00:09.690
again because I want to see if it's
actually working the way we intended.

4
00:00:12.115 --> 00:00:16.101
&gt;&gt; Brian: And I'm going to put
also a style here as well.

5
00:00:23.946 --> 00:00:29.758
&gt;&gt; Brian: And here I'm just gonna do
a JSON.stringify(this.props.params),

6
00:00:29.758 --> 00:00:33.270
you can do this up props
as well if you want to.

7
00:00:33.270 --> 00:00:35.686
I'm just gonna go look at the params,
okay?

8
00:00:39.935 --> 00:00:48.220
&gt;&gt; Brian: Let's save
&gt;&gt; Brian: And refresh this.

9
00:00:48.220 --> 00:00:51.750
Make sure there are not, yeah,
you're gonna get some validation errors.

10
00:00:53.220 --> 00:00:54.750
I'll fix these ones here in just a sec.

11
00:01:00.281 --> 00:01:02.757
&gt;&gt; Brian: And
we wanna go into details real quick.

12
00:01:06.648 --> 00:01:10.359
&gt;&gt; Brian: So it's actually not gonna work,
so we don't have,

13
00:01:10.359 --> 00:01:14.989
details did not match any route
cuz it shouldn't match any route.

14
00:01:16.130 --> 00:01:18.870
So, if they enter something that's wrong,
like 1, 2, 3, right?

15
00:01:18.870 --> 00:01:22.660
This actually should redirect us to the
home page, which it did, which is nice.

16
00:01:22.660 --> 00:01:24.930
That's exactly what it should do
cuz we use the replace method.

17
00:01:26.070 --> 00:01:31.950
Let's go grab an imdb out of our
data.json, so any one of them will work.

18
00:01:31.950 --> 00:01:33.150
It should look like this, tt1856010,

19
00:01:33.150 --> 00:01:38.520
scrub House of Cards,
because it's like my favorite show.

20
00:01:39.758 --> 00:01:49.220
My gosh, details/blah, right?

21
00:01:49.220 --> 00:01:54.827
Whatever your IMDB ID is,
and looks like we're

22
00:01:54.827 --> 00:01:59.880
still not seeing what we're supposed to.

23
00:01:59.880 --> 00:02:01.536
Now, why is that?

24
00:02:02.568 --> 00:02:09.561
&gt;&gt; Brian: I wonder if that's redirecting,

25
00:02:09.561 --> 00:02:14.629
I want to start finding.

26
00:02:14.629 --> 00:02:16.997
Let's start on finding it, so

27
00:02:16.997 --> 00:02:22.198
let's go introspect what's going on here,
introspect inspect.

28
00:02:22.198 --> 00:02:23.928
You can also do
introspection at this point,

29
00:02:23.928 --> 00:02:25.941
if you'd like to question
all your life decisions.

30
00:02:30.768 --> 00:02:35.246
&gt;&gt; Brian: All right, so
I'm just gonna do some

31
00:02:35.246 --> 00:02:40.161
good old-fashioned console logging.

32
00:02:44.496 --> 00:02:54.109
&gt;&gt; Brian: And show or write,
&gt;&gt; Brian: and

33
00:02:54.109 --> 00:02:55.940
let's see what this yields for us.

34
00:02:57.830 --> 00:03:00.610
To get in some areas, that's fine,
we'll fix that momentarily.

35
00:03:04.800 --> 00:03:11.460
So, saying details slash, Our IMDb ID.

36
00:03:11.460 --> 00:03:14.880
All right, so
let's take a look at we've got here.

37
00:03:17.560 --> 00:03:18.550
So here's my issue.

38
00:03:20.350 --> 00:03:22.470
I wasn't looking at params,
which is what I needed to do.

39
00:03:25.010 --> 00:03:31.210
So, this actually used to
be next state.params.id

40
00:03:36.494 --> 00:03:38.590
&gt;&gt; Brian: Okay, so let's save that.

41
00:03:38.590 --> 00:03:42.464
I'm still getting a bunch of errors,
whatever.

42
00:03:46.411 --> 00:03:50.947
&gt;&gt; Brian: Let's refresh here,
try this again.

43
00:03:50.947 --> 00:03:54.260
Slash that.

44
00:03:54.260 --> 00:03:55.999
And now we actually are matching a route.

45
00:03:57.580 --> 00:03:59.550
Because this was kind of hairy,

46
00:03:59.550 --> 00:04:04.740
I'll push a branch right after we
answer answer some questions here.

47
00:04:04.740 --> 00:04:06.500
Are some people seeing this?

48
00:04:06.500 --> 00:04:07.310
Okay, awesome.

49
00:04:09.950 --> 00:04:11.430
Any questions about what's going on here?

50
00:04:13.700 --> 00:04:17.319
Hopefully that was a useful little
debugging session for you, as well,

51
00:04:17.319 --> 00:04:20.937
to see how Oftentimes up that cancel
like just cancel light me out usually

52
00:04:20.937 --> 00:04:21.731
helps me a lot.

53
00:04:28.930 --> 00:04:31.463
&gt;&gt; Brian: Then you can see that it's also
getting matching the right object as well.

54
00:04:36.578 --> 00:04:37.930
&gt;&gt; Brian: Cool.

55
00:04:37.930 --> 00:04:41.770
&gt;&gt; Speaker 2: Is there a reason why
you're mutating That object instead of

56
00:04:41.770 --> 00:04:45.780
returning a new one on Object.assign,
or assignShow.

57
00:04:45.780 --> 00:04:48.850
&gt;&gt; Brian: I don't really have a favorite.

58
00:04:48.850 --> 00:04:50.107
I mean, you could totally do this.

59
00:04:54.227 --> 00:04:55.910
&gt;&gt; Brian: I like the sensibility.

60
00:04:55.910 --> 00:04:57.715
Like I would love to
encourage you to do that.

61
00:05:01.628 --> 00:05:05.820
&gt;&gt; Brian: Totally works too So
x is really terrible name.

62
00:05:14.231 --> 00:05:15.505
&gt;&gt; Brian: Functional programming for
the win.

63
00:05:17.525 --> 00:05:18.215
No wait.

64
00:05:18.215 --> 00:05:19.005
No.
hold on.

65
00:05:19.005 --> 00:05:23.940
The reason why we're not doing
that is I guess we could do.

66
00:05:23.940 --> 00:05:27.110
You have to be a little bit more clever
in the way you do it because you have

67
00:05:27.110 --> 00:05:29.600
to preserve everything that's
coming in from newState as well.

68
00:05:29.600 --> 00:05:33.020
So I'm gonna not do that right now.

69
00:05:33.020 --> 00:05:36.760
The reason why I just mutated it is
cuz nothing else is looking at it.

70
00:05:39.310 --> 00:05:41.090
Famous last words I know, right?

71
00:05:41.090 --> 00:05:46.840
Like You typically want to be
as non mutating as possible but

72
00:05:46.840 --> 00:05:51.410
this has yet
to by the in the but as you can

73
00:05:51.410 --> 00:05:56.020
see I'm a very reactionary person to bugs
as I try to I try to ignore everything bad

74
00:05:56.020 --> 00:05:58.660
in the universe until it happens to me and
then I panic.

75
00:05:58.660 --> 00:06:02.390
It's just my general like
life Lifestyle in general.

76
00:06:02.390 --> 00:06:02.890
So, yeah.

77
00:06:08.387 --> 00:06:11.408
&gt;&gt; Brian: But if you feel this
app up to it, go ahead and

78
00:06:11.408 --> 00:06:15.920
do all the gymnastics to get that
to be More of a functional style.

79
00:06:18.960 --> 00:06:19.950
Any questions?

80
00:06:19.950 --> 00:06:24.320
All right, let's kind of branch and
push this up.

81
00:06:24.320 --> 00:06:29.470
Let's first fix our linting errors and
then I'll push up.

82
00:06:31.020 --> 00:06:33.860
There should be no spaces in the parens,
line twelve.

83
00:06:35.960 --> 00:06:36.800
Yeah.

84
00:06:36.800 --> 00:06:38.630
This is one of things I don't like about.

85
00:06:38.630 --> 00:06:39.816
I like putting spaces here.

86
00:06:41.918 --> 00:06:44.273
&gt;&gt; Brian: I like putting the spaces
between parenthesis that don't relate

87
00:06:44.273 --> 00:06:46.800
to each other so it's easier for
me to parse visually.

88
00:06:46.800 --> 00:06:48.230
However standard does not like that.

89
00:06:52.640 --> 00:06:55.680
&gt;&gt; Brian: It's not gonna say anything
because I didn't change anything.

90
00:06:55.680 --> 00:06:58.632
All right, so let's go to details
such as X and fix that as well.

91
00:07:00.579 --> 00:07:03.376
&gt;&gt; Brian: So
this is an ES6 type component, so

92
00:07:03.376 --> 00:07:07.750
we have to do prop types underneath it,
details.prop.

93
00:07:07.750 --> 00:07:12.550
Sorry, lowercase propTypes is an object.

94
00:07:12.550 --> 00:07:18.620
Here, we're gonna say const We
were just looking at parameters,

95
00:07:18.620 --> 00:07:26.120
so I want to say { object
} = React.PropTypes.

96
00:07:26.120 --> 00:07:30.970
And then we're going to

97
00:07:30.970 --> 00:07:35.582
say params: object.

98
00:07:40.725 --> 00:07:42.258
&gt;&gt; Brian: Great.

99
00:07:47.039 --> 00:07:50.424
&gt;&gt; Brian: And that should now, yeah,

100
00:07:50.424 --> 00:07:55.654
we fixed all of our bugs or
all of our errors.

101
00:07:58.314 --> 00:07:58.970
&gt;&gt; Brian: Okay.

102
00:07:58.970 --> 00:08:00.050
&gt;&gt; Speaker 2: This is how you allot React,

103
00:08:00.050 --> 00:08:04.360
now that you're expecting
a params as an object, okay.

104
00:08:04.360 --> 00:08:06.290
&gt;&gt; Brian: You could also
do isRequired here.

105
00:08:06.290 --> 00:08:11.280
I'd feel okay about that, because if
Details is It's not going to work very

106
00:08:11.280 --> 00:08:14.190
well but you can also pretty well depend
that react router is always going to pass

107
00:08:14.190 --> 00:08:19.160
a params, but actually I could see
this being useful in a case if you had

108
00:08:19.160 --> 00:08:22.050
a coworker that saw this component as
like, I should include this in my route.

109
00:08:22.050 --> 00:08:27.160
They would very quickly find out that
this is actually a React router route and

110
00:08:27.160 --> 00:08:30.170
if you try to include this somewhere
else it's going to be really difficult

111
00:08:30.170 --> 00:08:31.118
to emulate what's going on here.

112
00:08:31.118 --> 00:08:33.547
Yeah.

113
00:08:33.547 --> 00:08:37.950
&gt;&gt; Speaker 2: Os it possible
to do prop type says a static

114
00:08:37.950 --> 00:08:40.690
property of the details class or
is that different than what you did?

115
00:08:42.820 --> 00:08:44.830
&gt;&gt; Brian: Yeah Film or time.

116
00:08:44.830 --> 00:08:47.730
&gt;&gt; Speaker 2: Is it impossible to do
prop tapes as a static property on

117
00:08:47.730 --> 00:08:48.870
the details class?

118
00:08:51.930 --> 00:08:53.420
&gt;&gt; Brian: This is how you do it.

119
00:08:54.640 --> 00:08:58.800
For your six type classes
there is a proposal.

120
00:08:58.800 --> 00:09:02.300
I want to say at stage one or
stage is zero said to have statics or

121
00:09:02.300 --> 00:09:02.940
something like that.

122
00:09:02.940 --> 00:09:06.500
I don't know if it's called statics but
it's something to this effect.

123
00:09:06.500 --> 00:09:10.690
This isn't work right now with yes six
classes this would be something like

124
00:09:10.690 --> 00:09:15.230
yes twenty seventeen or
yes twenty eighteen that this will land So

125
00:09:15.230 --> 00:09:18.860
in other words that this is impossible
right now as far as I know personally.

126
00:09:22.090 --> 00:09:25.490
Well, it's not standard behavior.

127
00:09:25.490 --> 00:09:30.290
You can get a bell transform that
does make this work but I choose to

128
00:09:30.290 --> 00:09:34.650
Personally not used proposals
until there at least stage two.

129
00:09:35.840 --> 00:09:40.050
In stage two just means like this is
like 95% definitely gonna make it into

130
00:09:41.560 --> 00:09:43.200
a standard JavaScript.

131
00:09:44.370 --> 00:09:48.698
When it's stage zero or stage one,
there's a maybe like 20% or

132
00:09:48.698 --> 00:09:52.740
30% chances it's gonna make it in
standard host script and like for

133
00:09:52.740 --> 00:09:56.380
me That would be awful that I have to go
refactor code just because I wrote it

134
00:09:56.380 --> 00:09:59.420
in a non standard style and
that fell out of favor, right?

135
00:10:03.040 --> 00:10:05.370
&gt;&gt; Speaker 2: There's a couple quick
questions about the client app,

136
00:10:05.370 --> 00:10:07.170
if you go back to that.

137
00:10:07.170 --> 00:10:07.940
&gt;&gt; Brian: Yeah.

138
00:10:07.940 --> 00:10:11.390
&gt;&gt; Speaker 2: In our assigned show
function when we're using on enter.

139
00:10:13.300 --> 00:10:15.100
Our next day and replace the two

140
00:10:16.180 --> 00:10:19.120
arguments that are going to be passed
through any time we're using on enter.

141
00:10:19.120 --> 00:10:19.830
&gt;&gt; Brian: Yeah.

142
00:10:19.830 --> 00:10:21.310
&gt;&gt; Speaker 2: Okay, And then can you

143
00:10:22.360 --> 00:10:26.310
when you're using replace does next
state get passed in with Replace?

144
00:10:30.540 --> 00:10:33.500
&gt;&gt; Brian: I don't know.
I don't have a good answer for that.

145
00:10:33.500 --> 00:10:35.580
I'd say look at the react rather docs.

146
00:10:35.580 --> 00:10:40.600
Because that's exactly what I would
do you might be able to ask pass

147
00:10:40.600 --> 00:10:43.830
parameters you mean that would make sense
that you should be able to pass parameters

148
00:10:43.830 --> 00:10:49.060
to the next route but
I haven't done that so I don't know.

149
00:10:50.880 --> 00:10:53.710
&gt;&gt; Speaker 2: I'm story if you
cover that but it came up.

150
00:10:53.710 --> 00:10:57.930
Can you explain again why it's an improper
types can coincide the ES6 class

151
00:10:57.930 --> 00:10:59.340
Did you cover that?

152
00:10:59.340 --> 00:11:01.590
&gt;&gt; Brian: The answer to
that is it just doesn't.

153
00:11:01.590 --> 00:11:03.950
[LAUGH] There's no better answer.

154
00:11:03.950 --> 00:11:05.290
That's just not part of the spec.

155
00:11:06.650 --> 00:11:08.360
If we go back to, where was I, details?

156
00:11:10.400 --> 00:11:12.400
This is just the way
that you have to do it.

157
00:11:12.400 --> 00:11:13.150
It's ugly, right?

158
00:11:14.310 --> 00:11:17.025
This is also the way you have to do it for
stateless functional components.

159
00:11:20.106 --> 00:11:24.517
&gt;&gt; Brian: Yeah there's just no concept
of like statics right now on a on

160
00:11:24.517 --> 00:11:25.820
the Essex class.

161
00:11:26.850 --> 00:11:31.980
You can go read the Essex discuss
on why they didn't do it that way.

162
00:11:32.980 --> 00:11:39.380
I don't particular recall top of my head.

163
00:11:39.380 --> 00:11:42.150
&gt;&gt; Speaker 2: Can you step through
the sign show function starting at

164
00:11:42.150 --> 00:11:42.900
the on the enter.

165
00:11:43.920 --> 00:11:46.080
From the details route,
can you go through that again?

166
00:11:46.080 --> 00:11:49.402
&gt;&gt; Brian: Sure.
Gladly.

167
00:11:49.402 --> 00:11:54.750
Okay, so, step one is we're
going to match this route.

168
00:11:54.750 --> 00:11:59.260
So okay I found this route
Instead going to call

169
00:11:59.260 --> 00:12:03.010
it's onEnter function which is
going to call here to assign show

170
00:12:05.210 --> 00:12:10.510
react router is going to pass the next day
which is the parameters being passed down.

171
00:12:10.510 --> 00:12:14.730
Ooh it's not the parameters it's
the properties that's the more

172
00:12:14.730 --> 00:12:18.020
accurate thing to say is
the properties being passed down.

173
00:12:18.020 --> 00:12:21.140
Yeah, I mean you could probably even
go as far to call this next props.

174
00:12:23.140 --> 00:12:25.670
I think it's called next day in the docs.

175
00:12:25.670 --> 00:12:27.130
So I just stick to what the docs say.

176
00:12:29.230 --> 00:12:32.630
Okay here we're filtering out
everything that does not match the ID.

177
00:12:32.630 --> 00:12:37.330
So hopefully we're gonna find one
show that matches the IMDB ID.

178
00:12:37.330 --> 00:12:38.800
The ID being passed in.

179
00:12:40.830 --> 00:12:42.080
let's get this console log.

180
00:12:45.040 --> 00:12:49.640
Then we have the show race symbol
hopefully it'll be an array of one thing

181
00:12:49.640 --> 00:12:52.690
if we don't find anything that matches
up We're gonna to redirect them

182
00:12:52.690 --> 00:12:55.950
to the home page so
we don't crash in the details page.

183
00:12:55.950 --> 00:12:56.930
That's the idea there.

184
00:12:59.430 --> 00:13:03.880
Here we're just making sure that our
showArray shows up into the next state,

185
00:13:03.880 --> 00:13:08.800
and we return that which is then going to
get passed down to the This route down

186
00:13:08.800 --> 00:13:12.880
here, which we can then refer
to here inside of Details.

187
00:13:14.190 --> 00:13:19.079
That's the exhaustive steps of
what's happening with react-router.

