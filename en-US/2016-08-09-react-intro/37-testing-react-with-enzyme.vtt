WEBVTT

1
00:00:00.802 --> 00:00:03.842
[MUSIC]

2
00:00:03.842 --> 00:00:06.949
&gt;&gt; Brian Holt: Now that we've got
now the moco 101 out of the way,

3
00:00:06.949 --> 00:00:10.195
let's actually go write real test for
react cuz that's

4
00:00:10.195 --> 00:00:14.210
actually what I wanted to talk about.
&gt;&gt; Brian Holt: No,

5
00:00:14.210 --> 00:00:19.296
it's up.
&gt;&gt; Brian Holt: Okay.

6
00:00:21.530 --> 00:00:22.641
&gt;&gt; Brian Holt: So we're gonna pull in

7
00:00:22.641 --> 00:00:31.370
React as well.
&gt;&gt; Brian Holt: You already have expect.

8
00:00:32.470 --> 00:00:35.990
We're gonna pull in search cuz that's
actually what we're gonna be running

9
00:00:37.910 --> 00:00:38.770
our tests against.

10
00:00:38.770 --> 00:00:42.244
That's gonna be ../js/Search.

11
00:00:42.244 --> 00:00:46.500
We're gonna pull in an enzyme
out of a testing helper

12
00:00:48.250 --> 00:00:50.190
and actually we're just gonna
pull shallow out of it right now.

13
00:00:50.190 --> 00:00:56.578
So it's gonna be shallow
&gt;&gt; Brian Holt: Enzyme

14
00:01:00.874 --> 00:01:01.751
&gt;&gt; Brian Holt: Okay, and

15
00:01:01.751 --> 00:01:07.020
we're gonna get rid of our totally
worthless tests right here.

16
00:01:07.020 --> 00:01:09.600
And we're gonna say should
render the brand, right?

17
00:01:09.600 --> 00:01:14.870
So for example,
say you were doing something in for

18
00:01:14.870 --> 00:01:18.560
whatever reason it started dropping like
you're branding from the page like that's

19
00:01:18.560 --> 00:01:22.080
a really bad thing that you don't
wanna drop your brand from the page.

20
00:01:22.080 --> 00:01:23.700
So after that happened
maybe we'd go in and

21
00:01:23.700 --> 00:01:26.760
write a test to make sure that this is
always definitely rendering the brand

22
00:01:26.760 --> 00:01:29.700
every single time you're into the page and
this markup is showing up on the page.

23
00:01:32.060 --> 00:01:34.140
So let's go ahead and
make a test that does that.

24
00:01:34.140 --> 00:01:41.329
So we're gonna say const
wrapper = shallow(search).

25
00:01:42.650 --> 00:01:45.914
So what this is gonna do, let's see,

26
00:01:45.914 --> 00:01:51.940
I'll just walk over to search and
show you what's gonna happen here.

27
00:01:51.940 --> 00:01:55.952
So what shallow rendering is gonna do is
it's going to render just what's in search

28
00:01:55.952 --> 00:01:57.340
and none of it's children.

29
00:01:58.500 --> 00:02:01.000
So basically,
we have a bunch of show cards here.

30
00:02:01.000 --> 00:02:04.140
It's not actually going to reach into
show cards and render that as well.

31
00:02:04.140 --> 00:02:07.400
It's all gonna render the stuff that
actually exists inside of search.

32
00:02:07.400 --> 00:02:09.280
Is that makes sense?

33
00:02:09.280 --> 00:02:12.710
Now the reason why we want to do this,
in this particular case we're actually,

34
00:02:12.710 --> 00:02:14.240
we want to test search, right?

35
00:02:14.240 --> 00:02:17.066
And then later we'll test
show cards separately, right?

36
00:02:17.066 --> 00:02:19.350
But we wanna find problems with search and

37
00:02:19.350 --> 00:02:24.180
we don't want our search test to fail when
it's actually a show card failing, right?

38
00:02:24.180 --> 00:02:27.280
One of the useful part of tests is
what we want to tell us exactly what's

39
00:02:27.280 --> 00:02:28.502
going wrong where it right.

40
00:02:28.502 --> 00:02:32.520
And so far if our search tests fail
when it's really show cards failing.

41
00:02:32.520 --> 00:02:33.970
That's like misleading, right?

42
00:02:33.970 --> 00:02:37.940
We're gonna go dive into search first
when we really should be diving into

43
00:02:37.940 --> 00:02:39.600
show cards.

44
00:02:39.600 --> 00:02:41.170
We follow, that make sense?

45
00:02:41.170 --> 00:02:45.582
So what it's gonna is actually in a set
like give us stubs, instead of show, yeah.

46
00:02:45.582 --> 00:02:50.833
Instead of actually what it should be.
&gt;&gt; Brian Holt: So

47
00:02:50.833 --> 00:02:52.650
let's go see how we would test that.

48
00:02:54.790 --> 00:02:59.357
I'm gonna say expect(wrapper.contains) and

49
00:02:59.357 --> 00:03:03.166
then I'm gonna just write some jsx here.

50
00:03:22.259 --> 00:03:23.451
&gt;&gt; Brian Holt: Okay?

51
00:03:23.451 --> 00:03:25.565
So, I think this is
pretty straightforward.

52
00:03:27.417 --> 00:03:32.685
This wrapper which is what's coming
back from enzyme or that is right there.

53
00:03:32.685 --> 00:03:36.375
It has a method called contains and
basically I'm gonna say I'm gonna give it

54
00:03:36.375 --> 00:03:39.580
jsx component like I expect this
to be in there somewhere, right?

55
00:03:39.580 --> 00:03:42.684
I don't care like really care where,
what is important to me,

56
00:03:42.684 --> 00:03:45.688
because I might move the brand
to be somewhere else, right?

57
00:03:45.688 --> 00:03:48.582
But I don't want my unit tests to fail
because it is actually still in there,

58
00:03:48.582 --> 00:03:50.960
right?
&gt;&gt; Speaker 2: Question,

59
00:03:50.960 --> 00:03:55.310
can you explain shallow again?
&gt;&gt; Brian Holt: Yeah.

60
00:03:56.840 --> 00:03:59.340
So there's a couple different
depth of rendering,

61
00:03:59.340 --> 00:04:01.630
and I think we actually
do touch all of them.

62
00:04:01.630 --> 00:04:04.310
So yeah, we'll talk about all the
different depths of rendering you can do.

63
00:04:05.710 --> 00:04:09.080
But the basic gist is it's going to
render like this div, the header,

64
00:04:09.080 --> 00:04:11.880
the H1, but it's going to get
down here to the show cards, and

65
00:04:11.880 --> 00:04:15.150
it's just going to give us the stub, where
it's going to say, this is a show card.

66
00:04:15.150 --> 00:04:18.740
But I'm not actually going to go into show
cards and render everything in there.

67
00:04:18.740 --> 00:04:22.760
So it's shallow in the sense that
it renders just that component and

68
00:04:22.760 --> 00:04:23.980
none of its children.

69
00:04:23.980 --> 00:04:25.620
It just gives you stubs for
all the children.

70
00:04:28.600 --> 00:04:29.410
That's the gist of it.

71
00:04:31.160 --> 00:04:32.460
Why is this advantageous as well?

72
00:04:32.460 --> 00:04:34.390
This is way faster.

73
00:04:34.390 --> 00:04:37.660
It's like ten times faster than trying
to render all the children, right?

74
00:04:37.660 --> 00:04:41.220
That's another big advantage of this.
&gt;&gt; Brian Holt: And

75
00:04:41.220 --> 00:04:44.515
just a problem with testing
react components in general is

76
00:04:44.515 --> 00:04:49.349
they're pretty slow to test.
&gt;&gt; Brian Holt: So yeah,

77
00:04:49.349 --> 00:04:51.225
that's the gist of it.

78
00:04:51.225 --> 00:04:53.475
Any questions about this
expectation right here?

79
00:04:53.475 --> 00:04:55.675
Hopefully that makes sense
of what we're testing here.

80
00:04:58.085 --> 00:05:02.110
Right, so we're basically testing,
does this end up getting rendered, right?

81
00:05:02.110 --> 00:05:07.810
That's over testing here.
&gt;&gt; Brian Holt: Yeah.

82
00:05:07.810 --> 00:05:11.465
So let's save that and let's try it.

83
00:05:11.465 --> 00:05:16.700
&gt;&gt; Speaker 3: [INAUDIBLE]

84
00:05:16.700 --> 00:05:17.420
&gt;&gt; Brian Holt: So yeah,

85
00:05:17.420 --> 00:05:21.679
the reason why I didn't make a jsx
because mocha is looking for JS files.

86
00:05:23.130 --> 00:05:26.300
And it just makes it minorly more
complicated if you call it JSX,

87
00:05:26.300 --> 00:05:30.690
and I didn't find that worth it.
&gt;&gt; Speaker 3: Do you need your actual

88
00:05:30.690 --> 00:05:33.721
components to be JSX?
&gt;&gt; Brian Holt: Do I need

89
00:05:33.721 --> 00:05:34.642
the components to be JSX?

90
00:05:34.642 --> 00:05:36.365
They don't have They don't have to be,

91
00:05:36.365 --> 00:05:41.021
they can be JS files.
&gt;&gt; Brian Holt: But

92
00:05:41.021 --> 00:05:45.442
I get like it's no longer advantageous to
me to call this JSX in the sense of like,

93
00:05:45.442 --> 00:05:49.418
this is never getting sent down to
the server this is only ever being run.

94
00:05:49.418 --> 00:05:51.300
I'm sorry this is never getting
sent down to the client.

95
00:05:51.300 --> 00:05:53.883
This is only ever being
rendered server side for

96
00:05:53.883 --> 00:05:59.064
my debugging purposes.
&gt;&gt; Brian Holt: At personal preference,

97
00:05:59.064 --> 00:06:01.440
it that's the bottom line here right?

98
00:06:01.440 --> 00:06:02.800
Up to you.
If you want if you

99
00:06:02.800 --> 00:06:05.940
really feel strongly about that then
you can go ahead and go do that.

100
00:06:05.940 --> 00:06:07.740
You just have to wrangle with
Mocha to get it to work.

101
00:06:09.970 --> 00:06:12.712
So what I'm gonna do here is
I'm going to run MPM test.

102
00:06:19.072 --> 00:06:21.430
&gt;&gt; Brian Holt: And it passes.

103
00:06:21.430 --> 00:06:22.270
So let's go make it fail.

104
00:06:24.570 --> 00:06:29.675
Go to search and changes to be
like LOL something else, right?

105
00:06:29.675 --> 00:06:35.197
[INAUDIBLE] Just so it's incorrect now.
&gt;&gt; Brian Holt: And

106
00:06:35.197 --> 00:06:36.760
you can run an NPMT right?

107
00:06:36.760 --> 00:06:45.470
That's the same as NPM Test
&gt;&gt; Brian Holt: And

108
00:06:45.470 --> 00:06:48.010
now you can see that it's no
longer rendering the brand.

109
00:06:49.290 --> 00:06:55.813
So it fails when they expected to.
&gt;&gt; Brian Holt: Questions

110
00:06:55.813 --> 00:07:00.208
about that?
&gt;&gt; Speaker 2: There's a question on what's

111
00:07:00.208 --> 00:07:01.370
your philosophy on what is and

112
00:07:01.370 --> 00:07:04.105
what is not worth unit testing.
&gt;&gt; Brian Holt: But

113
00:07:04.105 --> 00:07:08.690
I'll reserve my judgments for the end.

114
00:07:08.690 --> 00:07:09.770
I have, like I said,

115
00:07:09.770 --> 00:07:15.726
unpopular opinions on the subject.
&gt;&gt; Speaker 4: Can

116
00:07:15.726 --> 00:07:18.439
you customize the assertion there so

117
00:07:18.439 --> 00:07:23.341
that instead of saying expected
false forgot true you say expected

118
00:07:23.341 --> 00:07:27.780
as video forgot false or something?
&gt;&gt; Brian Holt: Yeah, I think the answer to

119
00:07:27.780 --> 00:07:33.220
that question is yes, but
I cant remember of the top of my head.

120
00:07:33.220 --> 00:07:34.807
Yeah I mean that's not
superuser it false to be

121
00:07:34.807 --> 00:07:38.597
true.
&gt;&gt; Brian Holt: So,

122
00:07:40.893 --> 00:07:41.802
&gt;&gt; Brian Holt: Yeah, there's probably

123
00:07:41.802 --> 00:07:43.050
things you can do better than that.

124
00:07:44.660 --> 00:07:48.980
In this particular case it's gonna be hard
to get like what actually happened, right?

125
00:07:48.980 --> 00:07:53.912
Because you have to separate this out.
&gt;&gt; Brian Holt: So

126
00:07:53.912 --> 00:07:56.210
that's a little bit more difficult to get.

127
00:07:59.100 --> 00:08:00.540
Okay.

128
00:08:00.540 --> 00:08:01.160
Good question though.

129
00:08:02.970 --> 00:08:06.260
Hopefully, you'll make
this sufficiently explain,

130
00:08:06.260 --> 00:08:09.870
that's the point of that is to be
more explaining what that does.

131
00:08:09.870 --> 00:08:10.970
Wanted to show you this as well.

132
00:08:14.020 --> 00:08:15.010
I think this works.

133
00:08:15.010 --> 00:08:18.957
I think wrapper.debug,

134
00:08:24.937 --> 00:08:26.380
&gt;&gt; Brian Holt: Let's see if that works.

135
00:08:26.380 --> 00:08:26.960
It might not work.

136
00:08:26.960 --> 00:08:30.220
There's basically you can have
a dump out all of its information.

137
00:08:32.530 --> 00:08:33.940
Cool.

138
00:08:33.940 --> 00:08:39.754
So now it actually does, it dumps
out everything that it got, right?

139
00:08:39.754 --> 00:08:42.840
So you have the div, the class name you
can actually see the HTML that's being

140
00:08:42.840 --> 00:08:44.550
rendered inside the shallow.

141
00:08:44.550 --> 00:08:48.110
Render, but
here's the interesting part to me.

142
00:08:48.110 --> 00:08:49.930
Notice it's actually giving
you these show cards and

143
00:08:49.930 --> 00:08:52.280
it is telling what props
are getting passed down, right?

144
00:08:52.280 --> 00:08:53.930
Which is kind of interesting, right?

145
00:08:53.930 --> 00:08:57.710
But notice is not actually the actual
HTML from the show card, right?

146
00:08:57.710 --> 00:09:01.130
This is actually still
a shallow rendering of it.

147
00:09:01.130 --> 00:09:05.250
So this is what I mean when it's a shallow
render cuz it's putting show card instead

148
00:09:05.250 --> 00:09:08.540
of the actual HTML that show
card would typically render.

149
00:09:10.690 --> 00:09:13.740
So that's a useful thing if you're like
unit test or not working the way you

150
00:09:13.740 --> 00:09:16.622
expect them to and you can actually dump
out this to bug and see what's going on.

151
00:09:16.622 --> 00:09:21.575
Yeah.
&gt;&gt; Speaker 2: There's a question, so

152
00:09:21.575 --> 00:09:27.160
shallow means that we will
not render any my guess of

153
00:09:27.160 --> 00:09:32.455
the show card in I guess it's
harder in the chat here.

154
00:09:32.455 --> 00:09:37.125
I'll have and clarified I went but the
other question was Is it possible to test

155
00:09:37.125 --> 00:09:42.006
for a partial match like testing if I have
a H1 without having to match all the class

156
00:09:42.006 --> 00:09:43.264
name?
&gt;&gt; Brian Holt: Probably?

157
00:09:43.264 --> 00:09:48.109
[LAUGH]
&gt;&gt; Brian Holt: I wonder if you

158
00:09:48.109 --> 00:09:53.110
could do something like this.
&gt;&gt; Brian Holt: The answer

159
00:09:53.110 --> 00:09:54.210
is I'm not entirely sure.

160
00:09:55.270 --> 00:09:56.052
But let's give it a shot and

161
00:09:56.052 --> 00:10:03.580
see what happens.
&gt;&gt; Brian Holt: Nope.

162
00:10:03.580 --> 00:10:04.080
It doesn't work.

163
00:10:05.420 --> 00:10:07.370
There might be another way to do it.

164
00:10:07.370 --> 00:10:09.390
I'm just unaware of what
that is at this moment.

165
00:10:11.410 --> 00:10:14.724
So if you're interested in that I'd say go
check out the enzyme docs and see if you

166
00:10:14.724 --> 00:10:20.958
find some clever way to do that.
&gt;&gt; Brian Holt: Other

167
00:10:20.958 --> 00:10:23.600
questions?
&gt;&gt; Speaker 4: Yeah I actually have

168
00:10:23.600 --> 00:10:26.558
a question Is contains part of
enzymes there is a part of MOCA.

169
00:10:26.558 --> 00:10:30.750
&gt;&gt; Brian Holt: Enzyme, good question.

