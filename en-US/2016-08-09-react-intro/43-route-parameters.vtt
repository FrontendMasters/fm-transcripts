WEBVTT

1
00:00:00.000 --> 00:00:04.147
[MUSIC]

2
00:00:04.147 --> 00:00:07.080
&gt;&gt; Brian: Let's start talking
about marshalling data in React.

3
00:00:07.080 --> 00:00:13.521
So, we're gonna create another route, and
we're gonna call it details search.jsx.

4
00:00:18.867 --> 00:00:20.170
&gt;&gt; Brian: Inside of the JS folder.

5
00:00:21.760 --> 00:00:24.517
Okay, and we'll bring in react.

6
00:00:30.167 --> 00:00:33.260
&gt;&gt; Brian: And let's do this one of
the JSX class because, why not?

7
00:00:33.260 --> 00:00:36.249
[LAUGH] So, you can see both
of the both ways of doing it.

8
00:00:55.008 --> 00:00:59.040
&gt;&gt; Brian: ClassName Equals container.

9
00:00:59.040 --> 00:01:07.350
You know what, actually we don't
even need, we do need container.

10
00:01:07.350 --> 00:01:08.710
Yeah, that's right.

11
00:01:08.710 --> 00:01:14.630
Yeah, and we're just going to put,
you can put anything in here.

12
00:01:17.770 --> 00:01:25.040
Just going to do that for now, and then
make sure you export at the bottom, okay?

13
00:01:26.470 --> 00:01:31.503
About the most basic ES6

14
00:01:31.503 --> 00:01:37.310
class component you can do.

15
00:01:37.310 --> 00:01:38.900
To address Brit's question there,

16
00:01:39.970 --> 00:01:43.100
what about the browser five
version of hot module reload?

17
00:01:43.100 --> 00:01:47.250
All I know is it's just starting to exist,

18
00:01:47.250 --> 00:01:49.960
that's about the best
thing I can say about it.

19
00:01:49.960 --> 00:01:53.000
That browser five's new version
has some concept of it or

20
00:01:53.000 --> 00:01:55.240
it might even be a plug
in the browser five.

21
00:01:56.380 --> 00:01:59.780
Anyway Webpack has been doing it
since the inception of Webpack.

22
00:01:59.780 --> 00:02:02.820
And I think browser fires,
either via the community or

23
00:02:02.820 --> 00:02:05.410
via the project itself just
catching up and doing it.

24
00:02:06.930 --> 00:02:08.880
It's valid I can say but
I've never personally done it so

25
00:02:08.880 --> 00:02:09.905
can't really much tell you.

26
00:02:14.778 --> 00:02:21.890
&gt;&gt; Brian: Okay, so
let's go use our new route details.

27
00:02:21.890 --> 00:02:24.154
Sorry excuse me in the client app.JSX.

28
00:02:27.496 --> 00:02:28.880
&gt;&gt; Brian: We'll pull that in here as well.

29
00:02:28.880 --> 00:02:35.645
Const details equals require.slash

30
00:02:35.645 --> 00:02:40.293
details, and down here,

31
00:02:40.293 --> 00:02:46.421
I'm going to say route path equals

32
00:02:46.421 --> 00:02:51.930
slash details slash colon ID.

33
00:02:51.930 --> 00:02:57.511
We'll talk about that here momentarily,

34
00:02:57.511 --> 00:03:02.170
component equals details, okay?

35
00:03:05.430 --> 00:03:06.360
So, what are we doing here?

36
00:03:08.980 --> 00:03:12.860
This, for those who do have written
the service side routing code,

37
00:03:12.860 --> 00:03:15.060
this might look like familiar syntax for
you.

38
00:03:15.060 --> 00:03:17.360
Definitely this is the way
you do it in Express, and

39
00:03:17.360 --> 00:03:20.150
I think lots of other frameworks
choose to do display as well.

40
00:03:21.480 --> 00:03:25.800
This is basically saying that I'm gonna
have details which is going to be

41
00:03:26.850 --> 00:03:31.050
like that the name of the route
trade details And then calling ID.

42
00:03:31.050 --> 00:03:34.010
Basically says something
else is going to come here.

43
00:03:34.010 --> 00:03:36.320
It's going to be some sort of ID.

44
00:03:36.320 --> 00:03:46.318
So if I go to
http://localhost:8080/details/15

45
00:03:46.318 --> 00:03:53.868
it's actually gonna be like tt123456.

46
00:03:53.868 --> 00:03:56.520
Right, that's this right here
is going to be the details and

47
00:03:56.520 --> 00:03:58.400
that's going to be passed into my router.

48
00:03:58.400 --> 00:04:02.310
And that's the basic just
of what's going on there.

49
00:04:03.950 --> 00:04:07.690
So this is just saying that you're
gonna pass something in here And

50
00:04:07.690 --> 00:04:10.800
that will be passed under the route and
the route can deal with it.

51
00:04:10.800 --> 00:04:14.590
Why this is useful slash important is that

52
00:04:16.770 --> 00:04:19.740
these details pages we're going to
make a individual detail page for

53
00:04:19.740 --> 00:04:24.290
each one of our movies and
we are, TV shows rather.

54
00:04:24.290 --> 00:04:27.690
And we want to be able to make that page
flexible enough to handle any one of

55
00:04:27.690 --> 00:04:28.400
the TV shows.

56
00:04:28.400 --> 00:04:31.496
We don't make an individual route for
every single one We're doing, so

57
00:04:31.496 --> 00:04:33.638
let's just adds some
flexibility to our router.

58
00:04:36.207 --> 00:04:39.660
&gt;&gt; Speaker 2: Question,
since we're using hash history.

59
00:04:39.660 --> 00:04:42.670
How does it know not to
substitute the hash with the ID?

60
00:04:45.620 --> 00:04:50.660
&gt;&gt; Brian: How does it know not to
substitute the hash with your idea.

61
00:04:50.660 --> 00:04:53.730
I'm not sure that I follow your question.

62
00:04:53.730 --> 00:04:56.210
&gt;&gt; Speaker 2: Whenever we go to
search something and then and

63
00:04:56.210 --> 00:04:58.200
add hashtag something?

64
00:04:58.200 --> 00:05:00.000
&gt;&gt; Brian: Right.
So it's actually in All right.

65
00:05:00.000 --> 00:05:03.321
It's gonnalike this,

66
00:05:03.321 --> 00:05:07.653
something like that, right.

67
00:05:07.653 --> 00:05:13.615
Is that sidestep your
question sufficiently?

68
00:05:13.615 --> 00:05:16.220
[LAUGH] Yeah.

69
00:05:18.048 --> 00:05:19.159
&gt;&gt; Brian: Yeah, good question.

70
00:05:26.550 --> 00:05:29.610
&gt;&gt; Brian: Okay, so
let's go actually try that now.

71
00:05:29.610 --> 00:05:31.360
Make sure first of all your
Webpack is still running.

72
00:05:31.360 --> 00:05:32.419
Mine still is right?

73
00:05:34.310 --> 00:05:37.520
But just make sure that's
running in the background,

74
00:05:37.520 --> 00:05:40.811
hopefully you are not getting
a ton of glinting errors.

75
00:05:46.205 --> 00:05:47.630
&gt;&gt; Brian: So come in here.

76
00:05:47.630 --> 00:05:52.194
Refresh your page and
change this to be details Slash one two

77
00:05:52.194 --> 00:05:56.670
three four which doesn't
really matter what's there and

78
00:05:56.670 --> 00:06:01.341
you should see a new route here
over with whatever you put in.

79
00:06:08.310 --> 00:06:09.464
&gt;&gt; Brian: Most people seen this.

80
00:06:13.311 --> 00:06:13.814
&gt;&gt; Brian: Cool.

81
00:06:19.347 --> 00:06:22.892
&gt;&gt; Brian: So again we just added this
new route here And then we just added

82
00:06:22.892 --> 00:06:26.995
the basically the most basic component
here possible here in details.

83
00:06:33.343 --> 00:06:34.760
&gt;&gt; Brian: Okay.

84
00:06:34.760 --> 00:06:40.400
So I wanna show you everything that's
getting passed down to your route.

85
00:06:40.400 --> 00:06:42.500
So this is the details are route, right?

86
00:06:42.500 --> 00:06:44.950
So replace whatever you put here with.

87
00:06:44.950 --> 00:06:49.800
Precode and put in here,

88
00:06:49.800 --> 00:06:58.642
we've done this before,
JSON.stringify(this.props,

89
00:06:58.642 --> 00:07:03.200
null, 4) By the way, I totally stole this.

90
00:07:03.200 --> 00:07:06.220
I did not think of this like this
little debugging technique here,

91
00:07:06.220 --> 00:07:08.830
from Ryan Florence who's
the author of react router.

92
00:07:11.510 --> 00:07:13.350
So also don't give me credit for that one.

93
00:07:17.320 --> 00:07:17.820
Okay.

94
00:07:20.830 --> 00:07:24.381
So refresh your page now and
you should see a lot of stuff right,

95
00:07:24.381 --> 00:07:28.878
like this get a lot of stuff is getting
passed down to your route from the router.

96
00:07:32.040 --> 00:07:36.448
&gt;&gt; Brian: The most interesting thing
that you wanna find And here is params,

97
00:07:36.448 --> 00:07:37.320
right here.

98
00:07:37.320 --> 00:07:44.881
I'll make it bigger so you can see it.

99
00:07:44.881 --> 00:07:45.790
Notice that I put in 12345 up here.

100
00:07:45.790 --> 00:07:50.760
I can change it to be,
&gt;&gt; Brian: Right?

101
00:07:50.760 --> 00:07:53.810
This allows you access to this
id that we put in up here.

102
00:07:53.810 --> 00:07:59.556
So whatever we change to be up here
&gt;&gt; Brian: Right

103
00:07:59.556 --> 00:08:01.330
that's gonna be passed down to your route.

104
00:08:04.530 --> 00:08:05.955
That's, the important thing that
I want you to get out of this.

105
00:08:11.769 --> 00:08:16.530
&gt;&gt; Brian: If you want to
make this look a little

106
00:08:16.530 --> 00:08:21.609
bit nicer you can say, style equals,

107
00:08:21.609 --> 00:08:25.896
text align [INAUDIBLE] Text align

108
00:08:25.896 --> 00:08:30.981
left,
&gt;&gt; Brian: And

109
00:08:30.981 --> 00:08:32.572
that should make this
look nice there you go.

110
00:08:37.469 --> 00:08:40.650
&gt;&gt; Speaker 3: So
will you pass the id into the route?

111
00:08:40.650 --> 00:08:41.220
As a property.

112
00:08:43.560 --> 00:08:44.130
&gt;&gt; Brian: Yeah.

113
00:08:44.130 --> 00:08:45.780
A react router does it for
you automatically.

114
00:08:45.780 --> 00:08:50.760
And it's exposed via the params.

115
00:08:58.150 --> 00:08:58.650
Great.

116
00:09:02.100 --> 00:09:04.230
This is an awesome way to debug state 2,
by the way.

117
00:09:04.230 --> 00:09:08.920
It's actually, it's probably even more
compelling to debug state that way.

118
00:09:10.690 --> 00:09:12.470
&gt;&gt; Speaker 4: You can
make a debug component.

119
00:09:14.440 --> 00:09:15.340
&gt;&gt; Brian: That's actually not a bad idea.

120
00:09:15.340 --> 00:09:18.350
&gt;&gt; Speaker 4: Then just pass it a JSON
&gt;&gt; Brian: Yeah, definitely could.

121
00:09:23.970 --> 00:09:26.863
The nice thing about doing with state
is you can actually like if you click

122
00:09:26.863 --> 00:09:30.135
something you immediately see the state
reflected to the way that reactor renders

123
00:09:30.135 --> 00:09:31.242
itself every single time.

124
00:09:31.242 --> 00:09:34.075
Yeah, pretty compelling.

125
00:09:34.075 --> 00:09:39.600
&gt;&gt; Speaker 5: You recommend
using the React browser plugin.

126
00:09:39.600 --> 00:09:42.398
&gt;&gt; Brian: Yeah, actually there's
a whole section on that in here.

127
00:09:42.398 --> 00:09:43.006
Yeah.

128
00:09:46.127 --> 00:09:49.024
&gt;&gt; Brian: I mean my personal opinion is
that writing code is more about debugging

129
00:09:49.024 --> 00:09:51.640
and maintainability than actually
writing new feature code.

130
00:09:51.640 --> 00:09:54.690
And so I'm trying to give you every
tool I can to debug your code.

