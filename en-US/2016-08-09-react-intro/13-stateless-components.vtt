WEBVTT

1
00:00:00.000 --> 00:00:03.915
[MUSIC]

2
00:00:03.915 --> 00:00:06.665
&gt;&gt; Brian Holt: So
let's go back to client app.

3
00:00:06.665 --> 00:00:10.475
js so save this, go to client app.

4
00:00:10.475 --> 00:00:15.655
js and rename this to be clientapp.jsx
because we're gonna make this

5
00:00:15.655 --> 00:00:23.128
all GSX fancy now.
&gt;&gt; Brian Holt: Okay,

6
00:00:23.128 --> 00:00:29.536
so get rid of React.div because
who needs that business?

7
00:00:29.536 --> 00:00:30.794
Get rid of the factory thing,

8
00:00:30.794 --> 00:00:34.940
get rid of the CE part.
&gt;&gt; Brian Holt: And

9
00:00:34.940 --> 00:00:39.128
we're gonna make myFirstComponent into
what's called a stateless component.

10
00:00:40.599 --> 00:00:41.499
&gt;&gt; Brian Holt: I really,

11
00:00:41.499 --> 00:00:45.104
really like these stateless components.

12
00:00:45.104 --> 00:00:50.214
The reason being is that, so if we go back
over to myTiles just to take a look at it,

13
00:00:50.214 --> 00:00:54.194
we use the React.createClass right here,
right?

14
00:00:54.194 --> 00:00:58.650
That carries some overhead that we're
not necessarily using right now.

15
00:00:58.650 --> 00:01:01.020
It has the ability to keep its own state.

16
00:01:01.020 --> 00:01:02.560
It has some lifecycle methods.

17
00:01:02.560 --> 00:01:05.180
All this stuff we'll talk
about it a little bit here.

18
00:01:05.180 --> 00:01:05.800
But just so

19
00:01:05.800 --> 00:01:08.480
you know that there's some baggage here
that you don't necessarily know you're

20
00:01:08.480 --> 00:01:11.840
bringing along, that is being brought
along, that we're not using, right?

21
00:01:11.840 --> 00:01:14.250
We're just using the bare bones for
creating a component.

22
00:01:15.300 --> 00:01:19.570
So basically you have the ability to shed
that this baggage with what's called

23
00:01:19.570 --> 00:01:20.935
a stateless component.

24
00:01:20.935 --> 00:01:25.382
So let's write the verbose way
first I'm gonna say function,

25
00:01:39.072 --> 00:01:40.114
&gt;&gt; Brian Holt: And then we're going to

26
00:01:40.114 --> 00:01:45.610
return,
&gt;&gt; Brian Holt: This, right?

27
00:01:45.610 --> 00:01:49.080
I mean this shouldn't look
too unfamiliar to you.

28
00:01:49.080 --> 00:01:51.070
This just looks like the render method,
right?

29
00:01:51.070 --> 00:01:54.240
This looks like the render method of
our MyTitle right, if you look at it.

30
00:01:54.240 --> 00:01:56.640
So we have render and
it's just it does something and

31
00:01:56.640 --> 00:02:00.220
then it returns react components, right?

32
00:02:01.540 --> 00:02:03.110
Well that's exactly what this is.

33
00:02:03.110 --> 00:02:08.180
This is essentially saying I'm yanking out
the render method I'm just using that,

34
00:02:08.180 --> 00:02:10.860
and again this is really powerful
because it doesn't carry all the extra

35
00:02:10.860 --> 00:02:13.890
cruft it's literally,
it's just a function, right?

36
00:02:13.890 --> 00:02:16.990
Just what I've been repeating
previously that react

37
00:02:16.990 --> 00:02:21.340
components are like divs each one's
composite bone is everything's a function.

38
00:02:21.340 --> 00:02:24.810
Everything's a function and
I think that's it's really awesome.

39
00:02:26.750 --> 00:02:29.650
So anyways this now works like that and

40
00:02:31.590 --> 00:02:33.860
we're going to convert
this to be jsx real quick.

41
00:02:33.860 --> 00:02:43.151
So this is gonna be a div
&gt;&gt; Brian Holt: Okay,

42
00:02:43.151 --> 00:02:45.716
and then instead of all these
weird ways of writing this,

43
00:02:45.716 --> 00:02:50.837
we're gonna write it one way.
&gt;&gt; Speaker 2: The parenthesis

44
00:02:50.837 --> 00:02:54.535
should be outside of the closing div?
&gt;&gt; Brian Holt: Yes, it should,

45
00:02:54.535 --> 00:03:01.568
thank you.
&gt;&gt; Brian Holt: And

46
00:03:01.568 --> 00:03:05.694
I'm gonna rewrite these things to the top.

47
00:03:05.694 --> 00:03:11.385
So I'm gonna say myTitle

48
00:03:11.385 --> 00:03:18.160
title = whatevs color equals

49
00:03:18.160 --> 00:03:23.854
rebeccapurple, okay?

50
00:03:23.854 --> 00:03:28.628
And then I'm sure most of you have seen
inputs that or self-closing ties, right?

51
00:03:28.628 --> 00:03:33.883
You do slash ending tag just so
you know if you're doing

52
00:03:33.883 --> 00:03:38.920
an input the slash it is
optional in HTML 5, right?

53
00:03:38.920 --> 00:03:41.080
And to the point that most
people leave them out.

54
00:03:41.080 --> 00:03:42.830
They're not optional in JSX.

55
00:03:42.830 --> 00:03:46.169
You must put the closing tag that's
letting JSX know please don't look for

56
00:03:46.169 --> 00:03:47.821
a closing tag because there is none.

57
00:03:47.821 --> 00:03:51.507
And actually it's to the point we
can actually even do things as self

58
00:03:51.507 --> 00:03:55.920
closing tags that aren't technically
self-closing tags, and that's okay.

59
00:03:55.920 --> 00:03:57.380
If you wanna do that, that's fine.

60
00:03:59.350 --> 00:04:03.230
Another thing to definitely take note of,
lowercase basically means I'm

61
00:04:03.230 --> 00:04:07.180
literally want to use an input
tag from React, right?

62
00:04:07.180 --> 00:04:09.250
I want an input tag literally on the DOM.

63
00:04:10.490 --> 00:04:12.560
If it's capitalized, capital M,

64
00:04:12.560 --> 00:04:17.410
MyTitle that means that this
is something that I created.

65
00:04:17.410 --> 00:04:19.435
This is not a real component,

66
00:04:19.435 --> 00:04:24.545
this is actually a composite component
that I, the user created, right?

67
00:04:24.545 --> 00:04:28.467
So that capitalization is significant and
you must do it or

68
00:04:28.467 --> 00:04:34.976
react is going to not deal with it.
&gt;&gt; Brian Holt: Okay?

69
00:04:34.976 --> 00:04:36.729
So let's make a couple
more of these just for fun

70
00:04:47.657 --> 00:04:48.411
&gt;&gt; Brian Holt: Papayawhip,

71
00:04:48.411 --> 00:04:56.527
that's fun lets do that one.
&gt;&gt; Brian Holt: My title, title =

72
00:05:04.413 --> 00:05:08.367
&gt;&gt; Brian Holt: You can do like,

73
00:05:10.980 --> 00:05:12.726
&gt;&gt; Brian Holt: Great that's come in or

74
00:05:12.726 --> 00:05:17.717
this is the one that Chris Courier
always does f06d06, right?

75
00:05:17.717 --> 00:05:21.277
Some gross shade of orange I think.

76
00:05:21.277 --> 00:05:22.005
[LAUGH]

77
00:05:31.025 --> 00:05:32.108
&gt;&gt; Brian Holt: So let's see, so

78
00:05:32.108 --> 00:05:36.229
this should work now on the other
thing is here my first component now

79
00:05:36.229 --> 00:05:39.788
this is actually like a react
component that we've made.

80
00:05:39.788 --> 00:05:43.963
So we actually have to surround this
one in, this is actually a tag as well.

81
00:05:51.460 --> 00:05:52.175
&gt;&gt; Brian Holt: Okay.

82
00:05:56.673 --> 00:05:57.491
&gt;&gt; Brian Holt: Any questions so

83
00:05:57.491 --> 00:06:03.253
far about this?
&gt;&gt; Brian Holt: Give

84
00:06:03.253 --> 00:06:10.438
you sec just to check that out.
&gt;&gt; Brian Holt: Mark P

85
00:06:10.438 --> 00:06:13.570
said that he didn't know the Cap
plus component for the style thing.

86
00:06:15.440 --> 00:06:18.706
That's fair to say because
it used to be optional and

87
00:06:18.706 --> 00:06:23.767
it was only with in the past four versions
that did actually did become required.

88
00:06:23.767 --> 00:06:32.645
So you're not alone in thinking that.
&gt;&gt; Brian Holt: The reason

89
00:06:32.645 --> 00:06:34.863
why it's nice is not they no longer
have to keep a white list internally.

90
00:06:34.863 --> 00:06:37.744
They can just say whatever
you're passing in lowercase,

91
00:06:37.744 --> 00:06:39.405
you just expect to see in the DOM.

92
00:06:39.405 --> 00:06:42.366
But what I say is just you have to keep
a white list of here's all the different

93
00:06:42.366 --> 00:06:45.207
components that can be on the page
which is surprising and a lot, right?

94
00:06:45.207 --> 00:06:49.948
There's a lot of different
tags in HTML5 as well as STG

95
00:06:49.948 --> 00:06:54.081
you can do STG in react as well,
so good to know.

96
00:06:54.081 --> 00:06:55.145
Okay

97
00:07:02.082 --> 00:07:04.478
&gt;&gt; Brian Holt: Let's go ahead and

98
00:07:04.478 --> 00:07:05.829
run this.

99
00:07:05.829 --> 00:07:13.141
So we're gonna do npm run build.
&gt;&gt; Brian Holt: And

100
00:07:13.141 --> 00:07:17.470
can't resolve file directory, yeah.

101
00:07:17.470 --> 00:07:22.805
Now because we change the name of things
we have to go over to a webpac config and

102
00:07:22.805 --> 00:07:25.117
change this to be .jsx, right?

103
00:07:25.117 --> 00:07:27.205
Because we rename the file.

104
00:07:27.205 --> 00:07:31.978
So we're in webpac config
line 5 entry is now

105
00:07:31.978 --> 00:07:40.280
ClilentApp.jsx.
&gt;&gt; Brian Holt: So

106
00:07:40.280 --> 00:07:45.841
save that.
&gt;&gt; Brian Holt: Again,

107
00:07:45.841 --> 00:07:51.458
line 5 in webpack-config,
ClientApp.jsx and

108
00:07:51.458 --> 00:07:56.145
so .js is which is what it was before jsx.

109
00:07:56.145 --> 00:07:59.426
Okay, so let's go try that again.
&gt;&gt; Speaker 3: You still want

110
00:07:59.426 --> 00:08:03.476
to be having js on the file as opposed to

111
00:08:03.476 --> 00:08:07.213
a jsx on the file?
&gt;&gt; Brian Holt: I time out the resolve

112
00:08:07.213 --> 00:08:11.711
extensions.
&gt;&gt; Speaker 3: That output it bundles

113
00:08:11.711 --> 00:08:13.316
into js.
&gt;&gt; Brian Holt: So

114
00:08:13.316 --> 00:08:17.142
you saying that you want balance to jsx.

115
00:08:17.142 --> 00:08:20.962
The answer to that is no because that's
actually what's gonna be downloaded by

116
00:08:20.962 --> 00:08:21.703
the browser and

117
00:08:21.703 --> 00:08:25.130
if you look at the I mean if don't
because it's really gross looking.

118
00:08:25.130 --> 00:08:29.830
But you can see that this
is all valid JavaScript.

119
00:08:29.830 --> 00:08:32.660
What that .js means,
it means this is valid JavaScript.

120
00:08:32.660 --> 00:08:39.610
So but that's a good question.
&gt;&gt; Brian Holt: So

121
00:08:39.610 --> 00:08:42.736
it looks like I outputted just fine.

122
00:08:42.736 --> 00:08:46.510
688 kilobytes which is crazy that weren't
including that much stuff we have to think

123
00:08:46.510 --> 00:08:49.825
about now we're including react and
all the Babel polyfills which are pretty

124
00:08:49.825 --> 00:08:52.523
big.
&gt;&gt; Speaker 4: Have you

125
00:08:52.523 --> 00:08:55.305
found with a roll up that
that gets smaller because

126
00:08:55.305 --> 00:08:57.950
the tree shaking?
&gt;&gt; Brian Holt: The answer is I haven't

127
00:08:57.950 --> 00:09:01.840
done much serious stuff with roll up but
the answer is it should.

128
00:09:04.050 --> 00:09:07.840
This will get much smaller if you go hand
pick the plugins that you want for Babel.

129
00:09:07.840 --> 00:09:10.972
That's probably more than half of it.
&gt;&gt; Speaker 4: Gotcha.

130
00:09:10.972 --> 00:09:12.768
&gt;&gt; Brian Holt: That's probably about half

131
00:09:12.768 --> 00:09:13.970
of it to be honest.

132
00:09:13.970 --> 00:09:17.763
With React, React actually uses most
of React is used when you include it so

133
00:09:17.763 --> 00:09:20.368
treeshaking's not going to
do a whole lot for you.

134
00:09:25.549 --> 00:09:27.672
&gt;&gt; Brian Holt: Okay, so let's refresh and

135
00:09:27.672 --> 00:09:32.978
now you should be getting three new
things right or whatever you put into

136
00:09:32.978 --> 00:09:39.157
your jsx.
&gt;&gt; Brian Holt: If

137
00:09:39.157 --> 00:09:42.380
you're seeing all of your old values and
colors.

138
00:09:42.380 --> 00:09:45.260
It means your build probably
was not successful.

139
00:09:45.260 --> 00:09:49.660
So that bundle did not get out put
it in still using the same one.

140
00:09:49.660 --> 00:09:51.600
&gt;&gt; Speaker 5: Just to confirm in their

141
00:09:51.600 --> 00:09:59.984
return statement in
MyTitle.jsx you can't have the,

142
00:09:59.984 --> 00:10:06.190
I couldn't have the const style,
maybe, never mind I headline

143
00:10:06.190 --> 00:10:10.300
seven after line eight and it didn't
work because you have to have everything

144
00:10:10.300 --> 00:10:13.970
in the return statement wrapping and yeah.
&gt;&gt; Brian Holt: Right.

145
00:10:13.970 --> 00:10:14.700
&gt;&gt; Speaker 5: That works.

146
00:10:16.310 --> 00:10:16.880
&gt;&gt; Brian Holt: So just to

147
00:10:16.880 --> 00:10:17.769
illustrate her point.

148
00:10:19.050 --> 00:10:25.770
You can't have return,
this would work, right?

149
00:10:25.770 --> 00:10:26.895
You could return five like that.

150
00:10:26.895 --> 00:10:30.855
You can have like return x=6 like this,
right?

151
00:10:30.855 --> 00:10:33.619
That doesn't make any sense because
I'll tell you what that wraps up to be

152
00:10:33.619 --> 00:10:39.755
is.
&gt;&gt; Brian Holt: Right and

153
00:10:39.755 --> 00:10:46.902
that just doesn't make any sense.
&gt;&gt; Brian Holt: So I do that all the time.

154
00:10:46.902 --> 00:10:49.190
So don't worry about it,
it happens to me quite often.

155
00:10:49.190 --> 00:10:52.750
You just have to make sure that
you're above the return statement.

156
00:10:55.530 --> 00:10:56.460
Any other questions?

157
00:10:57.580 --> 00:10:58.520
Yeah.
&gt;&gt; Speaker 4: Can

158
00:10:58.520 --> 00:11:01.160
you repeat the part about
the stateless component and

159
00:11:01.160 --> 00:11:04.007
what the advantage that is?
&gt;&gt; Brian Holt: Yeah, definitely.

160
00:11:04.007 --> 00:11:07.719
So coming back here to client.jsx,

161
00:11:07.719 --> 00:11:12.039
we could make this a create class, right?

162
00:11:12.039 --> 00:11:18.445
Fairly easily, right create class
just to demonstrate that and

163
00:11:18.445 --> 00:11:24.150
then that this would be
the render function inside of it.

164
00:11:24.150 --> 00:11:27.510
The reason why we're doing.

165
00:11:30.060 --> 00:11:33.975
So just a philosophy in general that
I believe is react gives you a lot

166
00:11:33.975 --> 00:11:36.599
of power to do things
with these components.

167
00:11:36.599 --> 00:11:39.445
But the more you limit
the scope of what you need,

168
00:11:39.445 --> 00:11:42.300
the less surface area you have for
bugs, right?

169
00:11:42.300 --> 00:11:45.250
And so because I'm not using any
of the lifecycle methods which

170
00:11:45.250 --> 00:11:51.150
Kim will talk about rising in the state
management or any of those other things

171
00:11:51.150 --> 00:11:54.520
worst limiting the surface area
that someone has to come in and

172
00:11:54.520 --> 00:11:56.550
understand about this component, right?

173
00:11:56.550 --> 00:12:00.150
They look at this and this is literally
just a component rather it's literally.

174
00:12:00.150 --> 00:12:03.450
A function that does something and
returns the the component.

175
00:12:03.450 --> 00:12:06.960
It's a little bit less cognitive
load to get your head around and

176
00:12:06.960 --> 00:12:10.440
that's why I feel that these
stateless components are superior and

177
00:12:10.440 --> 00:12:14.220
I also I'm not alone in that I feel a lot
of the community feels that way as well.

178
00:12:17.490 --> 00:12:18.713
So yeah that's the general gist of it.

179
00:12:18.713 --> 00:12:22.961
It's making things less cognitive load to
kind of low to understand it's like self

180
00:12:22.961 --> 00:12:29.268
documenting sort of things, right?
&gt;&gt; Brian Holt: Yeah.

181
00:12:29.268 --> 00:12:30.923
&gt;&gt; Speaker 6: Does that mean this type of

182
00:12:30.923 --> 00:12:33.260
component can't have properties?

183
00:12:33.260 --> 00:12:35.200
Can't have props?
&gt;&gt; Brian Holt: You can, so

184
00:12:35.200 --> 00:12:36.980
you just give props that way.

185
00:12:36.980 --> 00:12:38.220
It just passes them in.

186
00:12:38.220 --> 00:12:39.343
Right now it's not taking any props.

187
00:12:39.343 --> 00:12:41.563
So it doesn't necessarily need them but

188
00:12:41.563 --> 00:12:44.967
we could refactor my title totally
to just do it that same way.

