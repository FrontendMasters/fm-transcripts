WEBVTT

1
00:00:00.000 --> 00:00:03.781
[MUSIC]

2
00:00:03.781 --> 00:00:07.240
&gt;&gt; Brian Holt: Let's go ahead and
we're gonna make another component here.

3
00:00:08.500 --> 00:00:11.390
This time we're gonna actually
create our own component here,

4
00:00:11.390 --> 00:00:15.880
like we're actually going to be
creating our own reusable components.

5
00:00:15.880 --> 00:00:16.888
Just like we have divs and

6
00:00:16.888 --> 00:00:19.834
H1's we're gonna make our own component
that we can throw on the page.

7
00:00:22.234 --> 00:00:23.948
&gt;&gt; Brian Holt: Okay, so
go over to ClientApp.js.

8
00:00:27.006 --> 00:00:31.824
&gt;&gt; Brian Holt: And
let's go ahead below the H1 here.

9
00:00:31.824 --> 00:00:34.528
We're gonna create one called MyTitle.

10
00:00:37.303 --> 00:00:39.860
&gt;&gt; Brian Holt: And
then we're gonna say React.createClass.

11
00:00:42.578 --> 00:00:45.584
&gt;&gt; Brian Holt: This is the way that React
allows us to create our own components,

12
00:00:45.584 --> 00:00:46.630
which is pretty cool.

13
00:00:49.675 --> 00:00:51.530
&gt;&gt; Brian Holt: Okay, and
I'm gonna give it a render method.

14
00:00:54.426 --> 00:00:56.510
&gt;&gt; Brian Holt: So
here's some ES6 magic for you.

15
00:00:59.712 --> 00:01:04.690
&gt;&gt; Brian Holt: Most of us are used to
saying : function which you totally can.

16
00:01:04.690 --> 00:01:06.970
That's totally fine and
go ahead if that works better for you.

17
00:01:06.970 --> 00:01:10.540
But this is called enhanced
object literal syntax.

18
00:01:10.540 --> 00:01:14.090
In other words, it just allows you
to not write the word function.

19
00:01:14.090 --> 00:01:15.860
I don't know if anyone told you but

20
00:01:15.860 --> 00:01:19.256
the entire point of ES six is to never
write the word function ever again.

21
00:01:19.256 --> 00:01:23.260
[LAUGH] And actually you can literally
never write the word function again,

22
00:01:23.260 --> 00:01:24.660
you can totally sidestep entirely.

23
00:01:27.414 --> 00:01:29.451
&gt;&gt; Brian Holt: So,
that's what this that's that means,

24
00:01:29.451 --> 00:01:32.050
it's just a shorter way of
writing out colon function.

25
00:01:34.677 --> 00:01:35.276
&gt;&gt; Brian Holt: Okay.

26
00:01:35.276 --> 00:01:38.620
And here we're gonna do is
we're going going to return.

27
00:01:47.362 --> 00:01:51.116
&gt;&gt; Brian Holt: Just basically
the same syntax that we had before.

28
00:01:51.116 --> 00:01:55.011
So div null

29
00:01:59.969 --> 00:02:04.283
&gt;&gt; Brian Holt: And h1(null, "Check out

30
00:02:04.283 --> 00:02:10.215
this other thing.") I don't know,

31
00:02:10.215 --> 00:02:15.080
whatever you want to put there.

32
00:02:15.080 --> 00:02:15.750
Okay?

33
00:02:15.750 --> 00:02:19.060
and then down here in my first component
rather than using the H1 in the div

34
00:02:19.060 --> 00:02:22.600
here directly, we're gonna actually
do it a little bit differently.

35
00:02:22.600 --> 00:02:24.460
So go ahead and delete just the H1 here.

36
00:02:26.170 --> 00:02:30.897
Then I wanna do a React.createElement.

37
00:02:32.140 --> 00:02:38.594
&gt;&gt; Brian Holt: MyTitle, common null
&gt;&gt; Brian Holt: Okay,

38
00:02:38.594 --> 00:02:39.890
so we have two things here.

39
00:02:39.890 --> 00:02:43.920
We have createClass, which is creating
a new type of element, right?

40
00:02:43.920 --> 00:02:49.360
It's like creating a div, or
not a div, it's creating div, right?

41
00:02:49.360 --> 00:02:54.280
It's creating a type of component that
can be used many, many, many times, okay?

42
00:02:54.280 --> 00:02:58.150
Then we have createElement
which is one specific instance

43
00:02:58.150 --> 00:03:00.720
of this class that we created, right?

44
00:03:00.720 --> 00:03:03.940
So you create one MyTitle
which is a class, right?

45
00:03:03.940 --> 00:03:06.350
But you're gonna create
a bunch of elements, right?

46
00:03:06.350 --> 00:03:11.050
So it's an instance of the class.

47
00:03:11.050 --> 00:03:12.150
Let's see what that means, right?

48
00:03:12.150 --> 00:03:16.110
Again, we'll only ever create one
MyTitle but we can come down here and

49
00:03:16.110 --> 00:03:20.616
create a whole bunch of these element
like of using the create elements, right?

50
00:03:20.616 --> 00:03:23.320
Which means we're going to be
using it multiple times, right?

51
00:03:26.512 --> 00:03:31.319
&gt;&gt; Brian Holt: Okay, so, and
then the other thing worth mentioning is

52
00:03:31.319 --> 00:03:34.860
notice we have an encircling div, right?

53
00:03:35.860 --> 00:03:40.674
Well the reason for that is, you can't
have, if you think about it, you can't

54
00:03:40.674 --> 00:03:46.890
have var x = 1, 2, 3, what would b
be in this particular case, right?

55
00:03:46.890 --> 00:03:52.390
You can't have multiple assignments for
x here, right?

56
00:03:52.390 --> 00:03:56.310
But you can have,
It'll be like an array of numbers, right?

57
00:03:56.310 --> 00:03:58.860
And that's kind of the same idea
that we're getting at here by having

58
00:03:58.860 --> 00:04:00.550
an encircling div, right.

59
00:04:00.550 --> 00:04:05.220
You can't have MyFirstComponent be equal
to a bunch of different elements, right?

60
00:04:05.220 --> 00:04:09.010
You have to have MyFirstComponent
be equal to one thing.

61
00:04:09.010 --> 00:04:13.530
So in this particular case, it's one div
and the div has a bunch of children.

62
00:04:13.530 --> 00:04:16.524
So this is very important
that you can't have it be,

63
00:04:16.524 --> 00:04:19.873
have multiple siblings be
the top level element, right?

64
00:04:19.873 --> 00:04:23.558
You have to have exactly one top level
element for any sort of component.

65
00:04:26.714 --> 00:04:28.720
&gt;&gt; Brian Holt: Does that make sense?

66
00:04:28.720 --> 00:04:29.220
Okay.

67
00:04:31.370 --> 00:04:32.800
Any questions about what we've done here?

68
00:04:37.316 --> 00:04:38.546
&gt;&gt; Brian Holt: Let's take a look
at what we've created here.

69
00:04:43.870 --> 00:04:46.716
&gt;&gt; Brian Holt: If you go back over here,
now we have Check out this other thing,

70
00:04:46.716 --> 00:04:48.370
a bunch of different times, right?

71
00:04:51.627 --> 00:04:56.130
&gt;&gt; Brian Holt: So what MyTitle is called,
this is called a composite component and

72
00:04:56.130 --> 00:05:00.300
basically it's a component
of our own creation.

73
00:05:00.300 --> 00:05:02.880
And this is actually where that like
the magic of react starts coming in.

74
00:05:02.880 --> 00:05:05.030
We can now create all these
reusable components and

75
00:05:05.030 --> 00:05:06.350
then use them all over the place, right?

76
00:05:07.960 --> 00:05:11.230
For example if you can think on Reddit,
right?

77
00:05:11.230 --> 00:05:11.870
Reddit is,

78
00:05:11.870 --> 00:05:15.900
if you don't know what Reddit is,
it's just essentially a fancy forum right?

79
00:05:15.900 --> 00:05:19.348
That has nested comments, right?

80
00:05:19.348 --> 00:05:24.009
Think of how many different ways
Reddit displays it's comments, right?

81
00:05:24.009 --> 00:05:26.782
It can be stored on like
different kinds of sub editor,

82
00:05:26.782 --> 00:05:28.363
can be styled different ways.

83
00:05:28.363 --> 00:05:32.360
It can be pulled out into like an embed
you throw on another page, right?

84
00:05:32.360 --> 00:05:35.959
But the nice thing about is we create
exactly one comment component and

85
00:05:35.959 --> 00:05:39.626
we can just throw it on anywhere that
we need to put a component, right?

86
00:05:39.626 --> 00:05:43.140
Or say you have like a branding
on your page, right?

87
00:05:43.140 --> 00:05:44.900
How many times user branding
throughout your website?

88
00:05:44.900 --> 00:05:47.430
You create one component for it and
you can throw it anywhere on your website.

89
00:05:47.430 --> 00:05:52.270
And then we can start making composite
components that are a composite of other

90
00:05:52.270 --> 00:05:53.339
composite components.

91
00:05:54.980 --> 00:05:58.250
Wow that's kind of a tongue-twister but
basically what I'm trying to say is that

92
00:05:58.250 --> 00:06:02.530
you can make these kind of bigger
components that contain many other smaller

93
00:06:02.530 --> 00:06:06.600
components that you've created, which
we'll also start doing here a little bit.

94
00:06:08.300 --> 00:06:09.420
&gt;&gt; Speaker 2: There's a question.

95
00:06:09.420 --> 00:06:12.460
&gt;&gt; Brian Holt: Yeah.
&gt;&gt; Speaker 2: Can you cover the difference

96
00:06:12.460 --> 00:06:15.370
between instance versus
component versus element?

97
00:06:17.030 --> 00:06:19.276
&gt;&gt; Brian Holt: Sure,
&gt;&gt; Brian Holt: So,

98
00:06:19.276 --> 00:06:22.700
let's go over here look at our browser,
right?

99
00:06:22.700 --> 00:06:25.710
We have this check out this
other thing four times, right?

100
00:06:25.710 --> 00:06:29.440
So each one of these is
an instance of MyTitle, right?

101
00:06:29.440 --> 00:06:30.910
This is an element on a page.

102
00:06:32.170 --> 00:06:38.210
But there is exactly one class, right,
there's only one MyTitle class.

103
00:06:38.210 --> 00:06:42.000
This is us creating a new type of dive,

104
00:06:42.000 --> 00:06:45.680
a new type of H1, a new type of something
that we're going to display on the page.

105
00:06:46.890 --> 00:06:52.455
So this is the [SOUND] This is us
creating the new type of component.

106
00:06:52.455 --> 00:06:53.003
In fact,

107
00:06:53.003 --> 00:06:57.470
I think our next little segment will
actually make that a little bit clearer.

108
00:06:57.470 --> 00:07:00.180
So if you don't get it after
the next segment let's revisit that.

109
00:07:01.520 --> 00:07:06.610
But basically ideas,
this is a new type of class and

110
00:07:06.610 --> 00:07:09.160
this is just us,
throwing that class on the page.

111
00:07:12.427 --> 00:07:14.414
&gt;&gt; Brian Holt: After that,
helps explain it a little bit.

112
00:07:17.269 --> 00:07:20.503
&gt;&gt; Brian Holt: And I think as we get to
JSX that will also clear it up a little

113
00:07:20.503 --> 00:07:21.230
bit as well.

114
00:07:23.300 --> 00:07:24.270
Any other questions?

115
00:07:27.150 --> 00:07:30.050
&gt;&gt; Speaker 2: There was a question,
do you know any open source projects

116
00:07:30.050 --> 00:07:32.719
that demonstrate good code
organization for React.

117
00:07:35.825 --> 00:07:37.710
&gt;&gt; Brian Holt: I do, actually.

118
00:07:38.770 --> 00:07:41.060
The React Router project,

119
00:07:41.060 --> 00:07:43.990
we're actually gonna be using
React Router much later today.

120
00:07:43.990 --> 00:07:48.720
But they have some example
projects inside of their repo.

121
00:07:48.720 --> 00:07:53.420
And I actually am a fan of the way they
chose to organize, especially like the,

122
00:07:53.420 --> 00:07:56.460
there's one called like huge app or
something like that, big app.

123
00:07:57.490 --> 00:08:00.340
And I think they have some interesting
ideas of how to organize code,

124
00:08:02.224 --> 00:08:03.753
&gt;&gt; Brian Holt: Cuz I certainly don't.

125
00:08:03.753 --> 00:08:08.160
[LAUGH] Other questions?

126
00:08:12.425 --> 00:08:13.723
&gt;&gt; Brian Holt: Great.
All right.

127
00:08:17.497 --> 00:08:19.807
&gt;&gt; Brian Holt: So
we're gonna refactor this just a tiny bit,

128
00:08:19.807 --> 00:08:23.410
cuz this react create element
is a little annoying, right?

129
00:08:23.410 --> 00:08:25.830
Like it's a lot cleaner to
see that this div right here.

130
00:08:29.340 --> 00:08:31.805
&gt;&gt; Brian Holt: Excuse me [COUGH] So
what we're going to do,

131
00:08:31.805 --> 00:08:34.690
is we're gonna create
what's called a factory.

132
00:08:36.610 --> 00:08:41.793
So underneath MyTitle here,
say var MyTitleFact,

133
00:08:41.793 --> 00:08:46.400
I mean call factory if that's easier for
you.

134
00:08:48.290 --> 00:08:53.822
Equals React.createFactory(MyTitle),

135
00:08:53.822 --> 00:09:00.341
okay, and what's nice about
this is now we can start,

136
00:09:00.341 --> 00:09:05.446
instead of doing React.createElement so

137
00:09:05.446 --> 00:09:10.405
many different times, what we can do is,

138
00:09:10.405 --> 00:09:15.106
we can just say MyTitleFact(null).

139
00:09:15.106 --> 00:09:20.669
So it's up to you to decide which of
these two lines are totally equivalent.

140
00:09:20.669 --> 00:09:22.940
It's up to decide what
you think is cleaner.

141
00:09:24.580 --> 00:09:30.094
There's also a school of thought that
you can say so var, I think they call it

142
00:09:30.094 --> 00:09:37.760
like ce = React.createElement and
so you just pull out that function.

143
00:09:37.760 --> 00:09:43.220
And then you can also do
&gt;&gt; Brian Holt: Ce like that.

144
00:09:43.220 --> 00:09:46.330
I just took that one out.

145
00:09:47.810 --> 00:09:52.280
Okay, so these three lines
work exactly the same way.

146
00:09:55.256 --> 00:09:57.630
&gt;&gt; Brian Holt: This,
these two should make some sense, right?

147
00:09:57.630 --> 00:09:59.790
ce here is literally just this.

148
00:09:59.790 --> 00:10:01.790
It's just that being pulled out up here,
right?

149
00:10:01.790 --> 00:10:05.408
And then MyTitleFact basically allows

150
00:10:05.408 --> 00:10:10.129
you to treat MyTitle like
this div up here, right?

151
00:10:17.871 --> 00:10:20.694
&gt;&gt; Brian Holt: Okay,
any questions about that?

152
00:10:20.694 --> 00:10:21.905
I mean let's just save it and

153
00:10:21.905 --> 00:10:24.636
make sure that actually works
like I tell you it should, right?

154
00:10:24.636 --> 00:10:25.731
So now we have three of them, right?

155
00:10:25.731 --> 00:10:30.820
So again up to you to decide if
you think that's cleaner or not.

156
00:10:30.820 --> 00:10:33.490
We're actually gonna get to jsx
later where all this becomes a moot

157
00:10:33.490 --> 00:10:34.250
point anyway.

158
00:10:34.250 --> 00:10:37.320
[LAUGH] But I think it's good for

159
00:10:37.320 --> 00:10:39.610
you to know exactly what reactor
is doing underneath the hood.

160
00:10:40.990 --> 00:10:44.900
And any one of these works and
if you decide to not go the JSX path

161
00:10:44.900 --> 00:10:47.279
these actually are super useful for
you to know how to use.

162
00:10:49.390 --> 00:10:53.617
&gt;&gt; Speaker 3: What is the difference
between if those two like say MyTitleFact

163
00:10:53.617 --> 00:10:58.785
argument null and React.createElements,
MyTitle, null are equivalent,

164
00:10:58.785 --> 00:11:02.560
then what is the difference
between a factory and a null?

165
00:11:04.720 --> 00:11:09.490
&gt;&gt; Brian Holt: A factory basically
makes this into a function

166
00:11:09.490 --> 00:11:13.500
that when it called,
it gives you back the component, right?

167
00:11:13.500 --> 00:11:16.691
Whereas this React.createElement
is actually calling MyTitle for

168
00:11:16.691 --> 00:11:18.290
you underneath the hood, right?

169
00:11:18.290 --> 00:11:21.560
So it's just it's how it's creating
the element that's that it

170
00:11:21.560 --> 00:11:23.210
is where it differs.

171
00:11:23.210 --> 00:11:24.769
Did that explain it?

172
00:11:24.769 --> 00:11:25.296
Okay.

173
00:11:28.224 --> 00:11:29.800
&gt;&gt; Brian Holt: Most
people don't even choose,

174
00:11:29.800 --> 00:11:33.572
like I would imagine most react developers
if you ask them what is create factory

175
00:11:33.572 --> 00:11:36.010
they don't know because
they never have to use it.

176
00:11:36.010 --> 00:11:41.090
You'll never use create factory with JSX,
like they're mutually exclusive.

