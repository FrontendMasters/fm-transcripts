WEBVTT

1
00:00:00.000 --> 00:00:04.013
[MUSIC]

2
00:00:04.013 --> 00:00:08.840
&gt;&gt; Brian: So I'm gonna give you one more
aside about class versus create class.

3
00:00:10.110 --> 00:00:14.884
Notice that we didn't have to do any
binding here like this .handle search

4
00:00:14.884 --> 00:00:19.522
term and then the this here is the correct
context that refers to search.

5
00:00:19.522 --> 00:00:24.030
That's free in react.createclass because
they do what's auto binding for you.

6
00:00:24.030 --> 00:00:28.690
Basically they go through and bind all of
your methods to have the search, right,

7
00:00:28.690 --> 00:00:32.480
whatever the component is as the context,
so that whenever you call

8
00:00:32.480 --> 00:00:37.160
this inside of the method, it just
automatically gets the right context.

9
00:00:38.520 --> 00:00:43.320
The class syntax does not do that for you,
you actually have to explicitly bind it.

10
00:00:44.730 --> 00:00:47.936
So if I was to rewrite this in terms
of like the create class space so

11
00:00:47.936 --> 00:00:53.745
if I said class search
extends react.component,

12
00:00:53.745 --> 00:01:01.760
what you're going to end up seeing a lot
of is here in the constructor props.

13
00:01:03.090 --> 00:01:04.920
First of all you have to call
super props because you have

14
00:01:04.920 --> 00:01:07.890
to pass it up to the react component
that's just the way that is.

15
00:01:07.890 --> 00:01:11.499
But then you have to say
like this.handle search for

16
00:01:11.499 --> 00:01:16.350
event equals this.handle
search term event.bind this.

17
00:01:16.350 --> 00:01:17.200
And you do that for

18
00:01:17.200 --> 00:01:21.800
every single method that you create
inside of your react component.

19
00:01:23.300 --> 00:01:24.506
It's just a little annoying, right?

20
00:01:24.506 --> 00:01:28.081
Because this binding is
always the same right and

21
00:01:28.081 --> 00:01:32.975
it was nice here in the create class
that we didn't have to do that.

22
00:01:32.975 --> 00:01:36.344
So anyway, that's just the way it is.

23
00:01:36.344 --> 00:01:39.446
[LAUGH] Yeah.
&gt;&gt; Speaker 2: Is there some benefit

24
00:01:39.446 --> 00:01:41.960
to using the class syntax?

25
00:01:41.960 --> 00:01:46.775
Because that looks awful.
&gt;&gt; Brian: [LAUGH] I think the benefit

26
00:01:46.775 --> 00:01:51.250
here is that react is trying to
be as unobtrusive as possible

27
00:01:51.250 --> 00:01:54.929
to draw within the lines of JavaScript,
right.

28
00:01:54.929 --> 00:01:59.820
And rather than create a class,
we're literally, there's a class construct

29
00:01:59.820 --> 00:02:04.569
inside of JavaScript and yet we are
creating our own way of creating classes.

30
00:02:04.569 --> 00:02:09.006
So we're kind of drawing outside
the lines of JavaScript and so

31
00:02:09.006 --> 00:02:14.220
their idea with the class is like
let's be as JavaScript-y as possible.

32
00:02:14.220 --> 00:02:15.310
That's the basic gist.

33
00:02:16.680 --> 00:02:18.200
There's more work to
doing it the class way.

34
00:02:19.480 --> 00:02:21.440
I do it both ways you can mix and
match too.

35
00:02:21.440 --> 00:02:24.320
There's no, like one app doesn't
have to have just one right.

36
00:02:24.320 --> 00:02:28.855
We're already mixing matching create class
and stateless functional components so

37
00:02:28.855 --> 00:02:32.145
yeah whatever works for you.

38
00:02:32.145 --> 00:02:33.640
Yeah.
&gt;&gt; Speaker 3: Someone noticed when we

39
00:02:33.640 --> 00:02:38.010
broke the initially,
when we broke the input to

40
00:02:38.010 --> 00:02:41.830
the counselor was seeing that they
recommend using default value.

41
00:02:41.830 --> 00:02:46.167
When would that be useful?
&gt;&gt; Brian: Yeah,

42
00:02:46.167 --> 00:02:51.770
so there's a concept of
tracked vs untracked inputs.

43
00:02:51.770 --> 00:02:57.410
So if I don't, let's just recreate
what the person's seeing.

44
00:02:57.410 --> 00:02:58.800
if I take off this On Change event.

45
00:02:58.800 --> 00:03:04.690
It's gonna yell at me cuz I have,
whatever I don't care.

46
00:03:06.296 --> 00:03:12.560
Refresh and it's going to yell at me
in the consuls as you give a value and

47
00:03:12.560 --> 00:03:16.180
when you give it a value it's like locked
at that point without an On Change.

48
00:03:16.180 --> 00:03:20.940
So what they're saying is like what
you can do instead is say default

49
00:03:20.940 --> 00:03:25.600
value and now if I refresh it.

50
00:03:27.624 --> 00:03:30.050
Its gonna, now it actually works but

51
00:03:30.050 --> 00:03:32.700
like nothing inside of react is
actually tracking that, right?

52
00:03:33.820 --> 00:03:36.080
So that's the trade off
you're making here.

53
00:03:36.080 --> 00:03:39.180
So if you don't actually care
about the input of that value or

54
00:03:39.180 --> 00:03:43.280
the value of that input which I'm not sure
why you would ever have that situation

55
00:03:43.280 --> 00:03:44.020
that you can do that.

56
00:03:45.800 --> 00:03:47.310
IE, you're always going to do it this way,

57
00:03:48.760 --> 00:03:51.370
that you're going to have a value and
an on change.

58
00:03:52.710 --> 00:03:55.760
I guess the place that you
might not use that is if you're

59
00:03:55.760 --> 00:04:00.090
integrating with a jQuery library or
something like that maybe, and

60
00:04:00.090 --> 00:04:02.920
you're passing something in and then
you're waiting for responses back from it.

61
00:04:03.950 --> 00:04:06.945
But that would be pretty exceptional
that you're in usually not to do that.

62
00:04:06.945 --> 00:04:08.195
IE i like I've never had to do

63
00:04:08.195 --> 00:04:12.827
that personally.
&gt;&gt; Speaker 3: And

64
00:04:12.827 --> 00:04:17.458
then somebody else asked, they're seeing a
lot more usage of class than create class,

65
00:04:17.458 --> 00:04:19.310
how does Netflix approach it?
&gt;&gt; Brian: We

66
00:04:19.310 --> 00:04:20.479
have we have mixed and matched.

67
00:04:21.900 --> 00:04:25.280
It's whatever the engineer
feels like doing that day.

68
00:04:25.280 --> 00:04:28.160
It's mostly create class, however,

69
00:04:28.160 --> 00:04:32.750
I'm told that Facebook it's
almost all class so, up to you.

70
00:04:32.750 --> 00:04:36.390
The idea is that they were they were
going to deprecate create class and

71
00:04:36.390 --> 00:04:40.080
there was just great riots and
people died and stuff like that.

72
00:04:41.230 --> 00:04:42.860
Just kidding I don't know.

73
00:04:42.860 --> 00:04:45.370
But a lot of people prefer create class.

74
00:04:45.370 --> 00:04:47.860
I think it's an easier thing to teach
because you have to worry about context.

75
00:04:47.860 --> 00:04:48.600
It just works.

76
00:04:50.120 --> 00:04:52.865
But that's up to you
whatever you feel like

77
00:04:52.865 --> 00:04:56.390
doing.
&gt;&gt; Speaker 3: What about using decorators

78
00:04:56.390 --> 00:05:00.270
like core decorators?
&gt;&gt; Brian: They're awesome.

79
00:05:00.270 --> 00:05:01.980
And I really don't want
to talk about them.

80
00:05:03.070 --> 00:05:07.900
Definitely an advanced use case.
&gt;&gt; Speaker 3: And then are you

81
00:05:07.900 --> 00:05:12.394
a fan of the ES7 syntax for .bind this?
&gt;&gt; Brian: The colon colon one?

82
00:05:12.394 --> 00:05:14.679
Is that the one they're talking about?
&gt;&gt; Speaker 3: Yes, sorry, yes.

83
00:05:14.679 --> 00:05:16.343
&gt;&gt; Brian: One, it's not ES7.

84
00:05:16.343 --> 00:05:23.428
ES7's already shipped and does not
contain colon colon, so it's ES future.

85
00:05:23.428 --> 00:05:24.540
It's interesting.

86
00:05:26.110 --> 00:05:27.430
I'm not opposed to it.

87
00:05:27.430 --> 00:05:29.658
Now you're gonna ask me what it is and
I can't,

88
00:05:29.658 --> 00:05:32.460
I don't remember off the top of
my head exactly how to do it.

89
00:05:33.850 --> 00:05:38.650
And I think the basic gist of it is like.
&gt;&gt; Brian: Excuse me.

90
00:05:38.650 --> 00:05:45.080
Is I call a method like the stop method,
correct me if I'm wrong.

91
00:05:45.080 --> 00:05:48.310
Like colon colon search right?

92
00:05:48.310 --> 00:05:50.830
And I'm providing it
the context to call it with.

93
00:05:52.700 --> 00:05:53.740
I've got to remember.

94
00:05:53.740 --> 00:05:56.560
That might not be right either, but

95
00:05:56.560 --> 00:06:01.452
it's basically a way of
dynamically modifying the context.

96
00:06:01.452 --> 00:06:04.086
And the other reason I don't
want to talk about decorators,

97
00:06:04.086 --> 00:06:07.394
like it's a good question and there's,
they are really interesting, but

98
00:06:07.394 --> 00:06:10.722
they're like stage zero or stage one
in terms of making it into JavaScript.

99
00:06:10.722 --> 00:06:14.772
And thus, they may make it in,
they may not make it in, and

100
00:06:14.772 --> 00:06:17.700
it's gonna be a while before we see them.

101
00:06:17.700 --> 00:06:23.730
But the basic idea is like, you can say
like at auth or something like that.

102
00:06:23.730 --> 00:06:27.270
And now maybe like this particular route
would only ever show if it was like

103
00:06:28.270 --> 00:06:33.320
if the person was authorized to see it,
like had credentials to see it.

104
00:06:33.320 --> 00:06:35.350
If you ever worked in Python
you'll see these everywhere.

105
00:06:37.510 --> 00:06:39.450
Those my make it in JavaScript,
I think they're really cool.

106
00:06:40.710 --> 00:06:42.260
But we don't have them yet.

107
00:06:43.380 --> 00:06:46.079
And we're kind of far away from it so
they're experimental features.

