WEBVTT

1
00:00:00.000 --> 00:00:03.903
[MUSIC]

2
00:00:03.903 --> 00:00:05.563
&gt;&gt; Brian Holt: So
let's talk about react router.

3
00:00:05.563 --> 00:00:08.200
So now we have one page on our app, right?

4
00:00:08.200 --> 00:00:09.520
This is a pretty boring app.

5
00:00:09.520 --> 00:00:12.220
Cuz you can't really do anything,
Browse All doesn't do anything.

6
00:00:13.550 --> 00:00:15.290
Nothing really works.

7
00:00:15.290 --> 00:00:17.460
So we want to be able to have
multiple pages in our app.

8
00:00:19.970 --> 00:00:22.580
So, what we're gonna do is we're
gonna bring in the react router.

9
00:00:22.580 --> 00:00:28.050
And this is a basically,
single page application SPA

10
00:00:28.050 --> 00:00:33.108
router and it's pretty cool,
it works really well.

11
00:00:33.108 --> 00:00:36.630
Ryan Florence and Michael Jackson
are the two guys that wrote it.

12
00:00:36.630 --> 00:00:42.200
Ryan actually has done a react
Frontend Masters before.

13
00:00:42.200 --> 00:00:44.640
Super smart guys,
they came from the Ember community.

14
00:00:44.640 --> 00:00:48.480
And Ember, if you've ever used Ember the
one thing, the shining star in my opinion

15
00:00:48.480 --> 00:00:51.250
of Ember is its router,
it has a really, really great router.

16
00:00:51.250 --> 00:00:54.360
And it's very easy to use, and
it's also required to use.

17
00:00:54.360 --> 00:00:56.630
Whether or not you're doing a multiple
page app you must use a router.

18
00:00:57.660 --> 00:00:59.010
At least that was the case
when I was using it,

19
00:00:59.010 --> 00:01:01.750
as mentioned that's still the case.

20
00:01:01.750 --> 00:01:05.266
So they basically took all the great
ideas of the Ember router and

21
00:01:05.266 --> 00:01:08.107
they brought that into
react via the react router.

22
00:01:08.107 --> 00:01:09.750
And it's pretty robust,

23
00:01:09.750 --> 00:01:12.470
react router does some pretty cool
stuff especially the recent version.

24
00:01:12.470 --> 00:01:13.870
And we're gonna be using
the brand new version.

25
00:01:13.870 --> 00:01:17.800
And they specifically asked
me to use this version.

26
00:01:17.800 --> 00:01:18.550
Hence why we're using it.

27
00:01:20.520 --> 00:01:23.480
But if you're gonna be
building your own react router

28
00:01:23.480 --> 00:01:26.680
governed app I definitely
suggest you deep dive into it

29
00:01:26.680 --> 00:01:28.920
because you can get some pretty
cool features out of it.

30
00:01:31.000 --> 00:01:34.073
So right now we're gonna just
be using the top level router.

31
00:01:36.410 --> 00:01:37.490
&gt;&gt; Brian Holt: So first of all let's,

32
00:01:37.490 --> 00:01:38.790
yeah that it's a good idea.

33
00:01:38.790 --> 00:01:42.204
Let's move from clientapp.jsx,
this is actually not our app,

34
00:01:42.204 --> 00:01:43.580
this is our landing page.

35
00:01:43.580 --> 00:01:47.290
So what we're gonna do right now is we're
actually we gonna move this out into its

36
00:01:47.290 --> 00:01:48.070
own page.

37
00:01:49.120 --> 00:01:54.067
So go ahead and copy all that stuff and
create a new file called

38
00:01:54.067 --> 00:01:59.760
landing.jsx
&gt;&gt; Brian Holt: And

39
00:01:59.760 --> 00:02:01.400
just paste all that in there.

40
00:02:01.400 --> 00:02:06.040
So again I just took, basically,
the top half of this and

41
00:02:06.040 --> 00:02:08.490
pasted that into landing.jsx.

42
00:02:08.490 --> 00:02:09.870
We don't need react dom, right?

43
00:02:09.870 --> 00:02:11.050
We're not using that in this page.

44
00:02:11.050 --> 00:02:11.810
So we can get rid of that.

45
00:02:13.360 --> 00:02:20.373
And then down here at the bottom
we need to do a module.exports =,

46
00:02:20.373 --> 00:02:24.005
we have it called app right here but

47
00:02:24.005 --> 00:02:28.150
we're gonna call it Landing instead.

48
00:02:28.150 --> 00:02:33.089
And then module.exports = Landing.
&gt;&gt; Brian Holt: So

49
00:02:33.089 --> 00:02:38.422
this is now our landing page.
&gt;&gt; Speaker 2: Do

50
00:02:38.422 --> 00:02:40.010
you need to require react?

51
00:02:40.010 --> 00:02:42.810
It doesn't let you reuse the-
&gt;&gt; Brian Holt: That's actually a great

52
00:02:42.810 --> 00:02:43.470
question.
&gt;&gt; Speaker 2: Same request.

53
00:02:43.470 --> 00:02:44.750
&gt;&gt; Brian Holt: Yes, you must because you

54
00:02:44.750 --> 00:02:46.850
have to think about what this
is being transpiled into.

55
00:02:47.880 --> 00:02:49.180
Remember, this is actually going to be

56
00:02:49.180 --> 00:02:53.020
transpiled into React.createElement,
right?

57
00:02:53.020 --> 00:02:58.960
So while you actually don't
see react being used here,

58
00:02:58.960 --> 00:03:00.700
this does get transpiled to use react.

59
00:03:02.290 --> 00:03:09.797
So yes you must include react.
&gt;&gt; Brian Holt: And luckily our landing,

60
00:03:09.797 --> 00:03:13.799
because we brought it in standard react
is smart enough to know that this

61
00:03:13.799 --> 00:03:17.132
is going to eventually use React as well.
&gt;&gt; Speaker 2: I was gonna say my editor

62
00:03:17.132 --> 00:03:19.149
yells at me as well but
standard doesn't, so

63
00:03:19.149 --> 00:03:20.610
I was like-
&gt;&gt; Brian Holt: Okay.

64
00:03:21.980 --> 00:03:24.190
Are you using standard
format as your plugin?

65
00:03:24.190 --> 00:03:26.380
&gt;&gt; Speaker 2: I don't think so.

66
00:03:26.380 --> 00:03:26.910
&gt;&gt; Brian Holt: If you switch to

67
00:03:26.910 --> 00:03:28.370
the eslint one.

68
00:03:28.370 --> 00:03:34.450
It shouldn't yell at you anymore.
&gt;&gt; Brian Holt: Okay.

69
00:03:37.130 --> 00:03:38.310
So let's go back to here and

70
00:03:38.310 --> 00:03:43.840
now we're gonna refactor this
little bit in ClientApp.jsx.

71
00:03:43.840 --> 00:03:47.726
So now we're gonna pull in landing so
const Landing =

72
00:03:47.726 --> 00:03:54.003
require('./Landing').

73
00:03:55.630 --> 00:03:56.769
We're gonna pull in react router.

74
00:04:08.476 --> 00:04:09.491
&gt;&gt; Brian Holt: Okay, and now we're going

75
00:04:09.491 --> 00:04:11.860
to pull a bunch of stuff out of
react router that we want to use.

76
00:04:11.860 --> 00:04:17.012
So we're going to say const

77
00:04:17.012 --> 00:04:23.508
Router = ReactRouter.Router.

78
00:04:23.508 --> 00:04:29.359
const Route = ReactRoute.Route.

79
00:04:29.359 --> 00:04:34.630
And const hashHistory

80
00:04:34.630 --> 00:04:42.410
= ReactRouter.hashHistory.

81
00:04:42.410 --> 00:04:43.644
Now I don't know about you,

82
00:04:43.644 --> 00:04:47.860
this seems like it's a little burdensome
to pull all these out piece by piece.

83
00:04:47.860 --> 00:04:51.270
There actually is a shortcut to do this,
thanks to the magical powers of VS6.

84
00:04:52.970 --> 00:04:58.020
So we can actually do, and
you don't have to do this by the way,

85
00:04:58.020 --> 00:04:59.372
this is just I find it easy.

86
00:04:59.372 --> 00:05:04.143
Router, Route, hashHistory

87
00:05:04.143 --> 00:05:09.187
} = ReactRouter.
&gt;&gt; Speaker 3: [COUGH]

88
00:05:09.187 --> 00:05:10.900
&gt;&gt; Brian Holt: Bless you.

89
00:05:10.900 --> 00:05:15.380
So this right here is equivalent to

90
00:05:15.380 --> 00:05:20.870
this.
&gt;&gt; Brian Holt: And

91
00:05:20.870 --> 00:05:24.740
the way that works is I know
inside of the react router object.

92
00:05:24.740 --> 00:05:27.030
I know it has a router.

93
00:05:27.030 --> 00:05:30.380
I know it has a route and
I know it has a hash history property so

94
00:05:30.380 --> 00:05:32.459
pull those out and
call them the same thing.

95
00:05:33.950 --> 00:05:36.487
You can also if you wanna
call it something different,

96
00:05:36.487 --> 00:05:40.270
you can do hashHistory: hh,
if you are into two letter abbreviations.

97
00:05:40.270 --> 00:05:42.560
So now it would pull out hashHistory and
call it hh.

98
00:05:42.560 --> 00:05:44.826
And you can mix and match too,

99
00:05:44.826 --> 00:05:49.302
that's totally fine.
&gt;&gt; Brian Holt: So

100
00:05:49.302 --> 00:05:53.024
I'm gonna do that from now on because
lines eight through ten is kind of

101
00:05:53.024 --> 00:05:55.180
burdensome and I don't want to do that.

102
00:05:56.790 --> 00:05:59.390
And we can actually go so far as this.

103
00:06:02.200 --> 00:06:12.024
Just on the require line do it.
&gt;&gt; Brian Holt: So

104
00:06:12.024 --> 00:06:15.820
any questions about that, does that
make sense what's going on there?

105
00:06:15.820 --> 00:06:18.910
If that doesn't make sense it's going
to not make sense for a long time until

106
00:06:18.910 --> 00:06:23.635
we do it a bunch of times, so ask me now.
&gt;&gt; Speaker 2: So

107
00:06:23.635 --> 00:06:28.288
can you access react router as a whole
then still, since you're never defining it

108
00:06:28.288 --> 00:06:29.409
as a constant?
&gt;&gt; Brian Holt: Nope.

109
00:06:29.409 --> 00:06:31.191
Yep, if you want to do that

110
00:06:31.191 --> 00:06:32.817
you have to pull it out.

111
00:06:32.817 --> 00:06:37.452
&gt;&gt; Speaker 2: Okay.
&gt;&gt; Brian Holt: If you were

112
00:06:37.452 --> 00:06:37.979
using ES6 modules there'd
be an easy way to do it.

113
00:06:37.979 --> 00:06:40.484
But I don't think there is with common JS.

114
00:06:40.484 --> 00:06:44.820
This is called destructuring by
the way in case you're wondering.

115
00:06:46.150 --> 00:06:48.534
That's what this is called.

116
00:06:48.534 --> 00:06:53.912
And if any of this ES6 stuff confuses
you I would highly highly suggest

117
00:06:53.912 --> 00:07:00.300
going to 2ality.com and just reading
everything from Dr. Rauschmayer.

118
00:07:00.300 --> 00:07:04.750
He is super smart, really,
just top of the line and

119
00:07:04.750 --> 00:07:06.959
he explains everything really in depth.

120
00:07:10.490 --> 00:07:15.130
And he's on TC 39 which is the body
that standardizes JavaScript.

121
00:07:15.130 --> 00:07:18.790
So, everything he has is awesome.

122
00:07:21.990 --> 00:07:23.560
Yeah.
So, any question about destructuring?

123
00:07:26.220 --> 00:07:27.875
Okay.
So let's get rid of that.

124
00:07:27.875 --> 00:07:34.373
[SOUND] And now we're going to
rewrite our little app, right?

125
00:07:34.373 --> 00:07:36.112
Cuz all this stuff is
contained in Landings, so

126
00:07:36.112 --> 00:07:37.510
we're just gonna delete all of that.

127
00:07:37.510 --> 00:07:43.860
And now we're gonna do router history,

128
00:07:43.860 --> 00:07:50.030
sorry, history={hashHistory}.

129
00:07:56.140 --> 00:08:00.120
&gt;&gt; Brian Holt: And here we're gonna do

130
00:08:00.120 --> 00:08:08.281
Route path='/' component={Landing}.

131
00:08:10.310 --> 00:08:11.740
Will sit down for a bit.

132
00:08:12.940 --> 00:08:20.771
I'm standing too long today.
&gt;&gt; Brian Holt: So

133
00:08:20.771 --> 00:08:22.716
let's kind of piece this apart.

134
00:08:22.716 --> 00:08:26.509
So you have a router and insideof
a router there are several routes, right?

135
00:08:26.509 --> 00:08:30.541
In our particular case we only have one
route at this moment which is going to be

136
00:08:30.541 --> 00:08:31.297
our landing.

137
00:08:31.297 --> 00:08:32.273
But as we add more and

138
00:08:32.273 --> 00:08:35.730
more routes to our app they're going
to go in here inside of the router.

139
00:08:35.730 --> 00:08:36.574
Okay.

140
00:08:36.574 --> 00:08:40.130
Then there's history.

141
00:08:40.130 --> 00:08:44.970
There's several ways that your router
can keep track of you going forwards and

142
00:08:44.970 --> 00:08:47.830
backwards, right, so that the forward
button and the back button don't work or

143
00:08:47.830 --> 00:08:48.989
so that they continue to work.

144
00:08:50.160 --> 00:08:53.520
One of them is hash history
which is the easiest to use,

145
00:08:53.520 --> 00:08:57.470
which is basically, have you seen pound
slash, right, and it keeps track of your,

146
00:08:57.470 --> 00:09:00.018
in fact,
we'll look at it here in just a second.

147
00:09:00.018 --> 00:09:03.330
But basically it's going
to use the anchor of

148
00:09:03.330 --> 00:09:08.400
your URL to allow you to keep track
of going backwards and forwards.

149
00:09:08.400 --> 00:09:12.160
We'll eventually use browser history once
we get to the node side of things but

150
00:09:12.160 --> 00:09:13.900
right now we're going to
stick with hash history.

151
00:09:16.200 --> 00:09:17.340
Okay so that's the router.

152
00:09:19.060 --> 00:09:22.380
Now we have route inside of here
which is like one individual route.

153
00:09:23.720 --> 00:09:25.320
And first we saw the path, right?

154
00:09:25.320 --> 00:09:27.860
So slash is the home page right.

155
00:09:27.860 --> 00:09:31.770
But if you want to have the search
page this is gonna be /search, right?

156
00:09:31.770 --> 00:09:35.000
So that's kind of telling it
where you want that to go.

157
00:09:35.000 --> 00:09:38.550
And then the component is
whenever you're on this route

158
00:09:38.550 --> 00:09:42.110
use this as your display, right?

159
00:09:42.110 --> 00:09:44.282
So, in this particular case
if they go to the home page,

160
00:09:44.282 --> 00:09:45.950
show them the landing page, right?

161
00:09:48.590 --> 00:09:50.870
Any questions about react router?

162
00:09:50.870 --> 00:09:55.098
What's going on here?
&gt;&gt; Brian Holt: Okay, so,

163
00:09:55.098 --> 00:09:59.034
let's save that
&gt;&gt; Brian Holt: You can go check to see if

164
00:09:59.034 --> 00:10:00.480
anything's yelling at you.

165
00:10:00.480 --> 00:10:02.760
I'm not running webpack anymore,
so let's do that,

166
00:10:13.673 --> 00:10:14.173
&gt;&gt; Brian Holt: Okay?

167
00:10:15.860 --> 00:10:19.240
You'll notice that our hidden modules are
going up and our file size is going up.

168
00:10:19.240 --> 00:10:22.240
That's the virtue of that we added
react router to our project now.

169
00:10:25.669 --> 00:10:27.809
&gt;&gt; Brian Holt: So now we can refresh and

170
00:10:27.809 --> 00:10:32.640
notice that we have this
weird stuff up here.

171
00:10:32.640 --> 00:10:34.170
So what's going on up here?

172
00:10:34.170 --> 00:10:39.030
Well the first part,
that's our route, right?

173
00:10:39.030 --> 00:10:43.480
Because right now we're on pound
slash which is coming from here,

174
00:10:43.480 --> 00:10:44.350
the path, right?

175
00:10:44.350 --> 00:10:47.990
And then we have this barf up here, right?

176
00:10:47.990 --> 00:10:50.030
This terrible looking stuff, and

177
00:10:50.030 --> 00:10:53.630
that's how react router is keeping
track of its internal state.

178
00:10:53.630 --> 00:10:55.740
It's kind of throwing
that up into the URL.

179
00:10:55.740 --> 00:10:59.060
So if you share this URL with someone else
they'll come down to the exact same state

180
00:10:59.060 --> 00:10:59.850
that you're on as well.

181
00:11:00.980 --> 00:11:02.130
That's what that is.

182
00:11:02.130 --> 00:11:07.800
It's kind of ugly but it's a necessary
evil of using hash history.

183
00:11:08.980 --> 00:11:10.899
So once you start using browser
history that goes away.

184
00:11:12.758 --> 00:11:16.000
Just FYI.

185
00:11:16.000 --> 00:11:16.840
Okay.
Does anyone

186
00:11:16.840 --> 00:11:19.090
have any questions about react router or
what we've done so far?

187
00:11:19.090 --> 00:11:20.650
We haven't really done
anything crazy right?

188
00:11:20.650 --> 00:11:21.810
Because we're not routing anywhere else.

189
00:11:21.810 --> 00:11:26.085
We just basically have a one page
router which is totally worthless.

190
00:11:26.085 --> 00:11:28.384
[LAUGH]

