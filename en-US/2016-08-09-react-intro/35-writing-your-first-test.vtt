WEBVTT

1
00:00:00.000 --> 00:00:03.796
[MUSIC]

2
00:00:03.796 --> 00:00:05.560
&gt;&gt; Brian Holt: Yeah, let's go ahead and
create the test first.

3
00:00:05.560 --> 00:00:10.080
So now inside of not inside of helpers but
inside of test.

4
00:00:11.190 --> 00:00:15.280
We're gonna create a new file and

5
00:00:15.280 --> 00:00:19.952
I think I call it search, no,
app.spec, yeah that's fine.

6
00:00:19.952 --> 00:00:24.038
Call it app.spec.js.

7
00:00:27.533 --> 00:00:34.276
&gt;&gt; Brian Holt: Js, thank you,
&gt;&gt; Brian Holt: Okay.

8
00:00:35.552 --> 00:00:40.296
&gt;&gt; Brian Holt: So the reason why I call
it js and not jsx which is kind of

9
00:00:40.296 --> 00:00:45.041
going against my rule that I
told you previously is you

10
00:00:45.041 --> 00:00:50.300
don't have to configure Mocha to look for
jsx files.

11
00:00:50.300 --> 00:00:51.933
Or you do have to configure it to look for

12
00:00:51.933 --> 00:00:55.040
jsx files if you just call it js it
will just find it automatically.

13
00:00:55.040 --> 00:00:57.160
I'm all about being lazy.

14
00:00:58.250 --> 00:00:59.550
And the reason why I used .spec,

15
00:00:59.550 --> 00:01:01.550
that's actually just really
force of habit for me.

16
00:01:01.550 --> 00:01:05.170
I don't know if anyone's ever done
RSpec in Ruby or anything like that.

17
00:01:05.170 --> 00:01:06.450
It looks for files called spec.

18
00:01:06.450 --> 00:01:11.550
I like calling them spec because it's just
a very quick way to say, this is the test.

19
00:01:11.550 --> 00:01:13.860
So when I'm using my file finder and
I'll just look for

20
00:01:13.860 --> 00:01:16.670
specs, I can find all of my tests.

21
00:01:16.670 --> 00:01:18.950
Works for me, but it doesn't
necessarily have to work for you.

22
00:01:20.070 --> 00:01:21.380
Mocha doesn't care.

23
00:01:21.380 --> 00:01:24.670
In some testing frameworks it
is important, in Mocha it's not.

24
00:01:24.670 --> 00:01:27.515
&gt;&gt; Speaker 2: I always wondered why
we didn't just call them tests.

25
00:01:27.515 --> 00:01:28.290
At.test.js.

26
00:01:28.290 --> 00:01:32.160
We call them specs because of Ruby or
whatever.

27
00:01:32.160 --> 00:01:34.240
&gt;&gt; Brian Holt: The only reason I keep
doing it is because I've already

28
00:01:34.240 --> 00:01:34.980
always done it that way.

29
00:01:34.980 --> 00:01:36.259
&gt;&gt; Speaker 2: Right, exactly.
&gt;&gt; Brian Holt: It's one of those things.

30
00:01:37.870 --> 00:01:40.170
Okay, so instead of app spec js,

31
00:01:40.170 --> 00:01:44.880
we're gonna do one of our famous comments,
because we don't want to fail lint, right.

32
00:01:46.880 --> 00:01:49.180
There's things called
ES lint environments.

33
00:01:51.250 --> 00:01:56.300
It's a bunch of basically globals
that ES lint knows to just ignore,

34
00:01:56.300 --> 00:02:00.980
so if I say yes and Mocha just
knows this is Mocha testing file.

35
00:02:00.980 --> 00:02:06.474
I'm just gonna add a bunch of white listed
testing type variables into your globals

36
00:02:06.474 --> 00:02:11.576
list otherwise you have to do the global
it, global described, global bunch

37
00:02:11.576 --> 00:02:16.934
of other stuff that Mocha includes, which
is fine if you prefer to do it this way.

38
00:02:16.934 --> 00:02:21.570
But this is just really easy to remember
and now you know if it's future proof if

39
00:02:21.570 --> 00:02:25.730
you tend to introduce more tests with
more keywords right so up to you.

40
00:02:28.430 --> 00:02:29.113
Okay.
[COUGH] So

41
00:02:29.113 --> 00:02:32.222
we're going to bring in here
we're going to bring in Chi.

42
00:02:37.562 --> 00:02:38.866
&gt;&gt; Brian Holt: This is
our assertion library,

43
00:02:38.866 --> 00:02:40.710
which we'll see in just
a sec how to use that.

44
00:02:42.170 --> 00:02:43.892
And actually, we don't have to do that,

45
00:02:43.892 --> 00:02:47.706
we can just do,
&gt;&gt; Brian Holt: expect,

46
00:02:47.706 --> 00:02:51.650
cuz that's actually what
we want out of Chai.

47
00:02:51.650 --> 00:02:53.490
We want this expect function.

48
00:02:55.580 --> 00:02:59.783
That's going to allow us to basically
make assertions of how we want our code

49
00:02:59.783 --> 00:03:00.316
to look.

50
00:03:03.671 --> 00:03:07.952
&gt;&gt; Brian Holt: So the first thing
when you use here is describe, and

51
00:03:07.952 --> 00:03:13.306
this first comment, for
those you who are not familiar with Mocha

52
00:03:13.306 --> 00:03:18.970
is basically the the thing that
you're going to be testing, right.

53
00:03:18.970 --> 00:03:21.620
So in this particular case
we've been testing our search

54
00:03:23.910 --> 00:03:26.170
component but here you can put anything.

55
00:03:26.170 --> 00:03:26.740
It can be like,

56
00:03:27.910 --> 00:03:30.930
if you don't like that you can say
this is my search component, right.

57
00:03:30.930 --> 00:03:34.071
This is just a future
footnote to yourself, so

58
00:03:34.071 --> 00:03:37.540
put whatever is descriptive in there for
you.

59
00:03:37.540 --> 00:03:38.340
This is descriptive for

60
00:03:38.340 --> 00:03:40.950
me to let me know I'm testing
a reactor component called search.

61
00:03:44.030 --> 00:03:45.650
Okay and then you get a callback function.

62
00:03:50.660 --> 00:03:54.750
Okay and then in here you gonna say it,
should pass,

63
00:03:54.750 --> 00:04:00.630
then give that a callback function.

64
00:04:00.630 --> 00:04:03.764
So basically, here you're describing
all of your different tests, right.

65
00:04:03.764 --> 00:04:07.836
So, here's all the tests that I'm
gonna be running against search, so

66
00:04:07.836 --> 00:04:10.250
I can have different levels of it, right.

67
00:04:10.250 --> 00:04:14.098
So, I can have it, I can have another it,
another it, and another it, right,

68
00:04:14.098 --> 00:04:17.372
I'm not gonna do that right now,
we're just gonna do one test but,

69
00:04:17.372 --> 00:04:20.761
you can also do nested describes,
this is not meant to be a Mocha test or

70
00:04:20.761 --> 00:04:24.510
a Mocha class but just giving you some
context if that's interesting to you.

71
00:04:25.800 --> 00:04:30.610
Okay, and then now we're just gonna
write the most basic test in the world

72
00:04:30.610 --> 00:04:35.509
we're just gonna say expect,
one plus one, triple equal to two, right.

73
00:04:35.509 --> 00:04:37.250
We expect that to be true.

74
00:04:37.250 --> 00:04:41.060
So you're gonna say I
expect this to be true.

75
00:04:44.960 --> 00:04:49.370
The nice thing about this is it tries to
be as English like as possible right, so

76
00:04:49.370 --> 00:04:52.150
I'm expecting everything in
here to evaluate to be true.

77
00:04:57.670 --> 00:05:01.970
If you're interested there's a couple
styles of using Chai, there's, I can't

78
00:05:01.970 --> 00:05:06.860
remember what they're called, one of
them is expect one of them is assert and

79
00:05:06.860 --> 00:05:09.400
one of them is should.

80
00:05:10.500 --> 00:05:11.140
Is it should?

81
00:05:11.140 --> 00:05:11.716
It might be should.

82
00:05:11.716 --> 00:05:13.271
Yeah, okay, should.

83
00:05:15.965 --> 00:05:18.812
&gt;&gt; Brian Holt: So you're welcome to use
the one that most fits the way you're

84
00:05:18.812 --> 00:05:20.140
thinking about your tests.

85
00:05:21.370 --> 00:05:25.760
To be totally honest my is called power
assert which is not in Chai at all.

86
00:05:25.760 --> 00:05:26.519
Go check it out and

87
00:05:26.519 --> 00:05:30.229
I don't wanna talk about cuz it's actually
kind of complicated but it's super cool.

88
00:05:32.098 --> 00:05:36.020
&gt;&gt; Brian Holt: Okay end of tangent.

89
00:05:36.020 --> 00:05:37.740
Okay, so let's go and run this test right.

90
00:05:37.740 --> 00:05:40.369
Like we have one test and
we expect our test to pass.

91
00:05:42.460 --> 00:05:46.460
So let's go up here and run,
go to your command line and

92
00:05:50.700 --> 00:05:56.420
we're gonna say Mocha dash dash require.

93
00:05:56.420 --> 00:06:00.904
First of all if you don't have
Mocha do mpm install -g mocha if

94
00:06:00.904 --> 00:06:03.327
you haven't already done that.

95
00:06:06.694 --> 00:06:10.067
&gt;&gt; Brian Holt: So the cool thing about
Mocha is if you called the directory test

96
00:06:10.067 --> 00:06:13.504
it knows to look in the test directory and
find all the js files and

97
00:06:13.504 --> 00:06:16.100
just run them for you,
which is really nice.

98
00:06:16.100 --> 00:06:17.320
I'm gonna put that up top.

99
00:06:17.320 --> 00:06:23.090
So I'm gonna say mocha --require

100
00:06:23.090 --> 00:06:28.110
test/helpers/setup.js.

101
00:06:28.110 --> 00:06:31.520
So it's going to basically
run that file first and

102
00:06:31.520 --> 00:06:33.180
that's gonna run all of your other files,
right?

103
00:06:33.180 --> 00:06:34.870
So we're gonna create our
browser like environment.

104
00:06:34.870 --> 00:06:35.600
In this particular case,

105
00:06:35.600 --> 00:06:39.660
it doesn't matter since we're not actually
testing the browser yet, but go ahead and

106
00:06:39.660 --> 00:06:40.250
give that a shot.

107
00:06:41.380 --> 00:06:43.852
Mocha not found, I need to install it.

108
00:06:48.438 --> 00:06:49.715
&gt;&gt; Brian Holt: Hopefully
that's pretty fast.

109
00:06:56.530 --> 00:06:59.115
&gt;&gt; Brian Holt: So actually you don't have
to do the dash dash require right now,

110
00:06:59.115 --> 00:07:01.569
you can probably just type Mocha and
it should work right now.

111
00:07:05.505 --> 00:07:09.034
&gt;&gt; Brian Holt: Okay, clear.

112
00:07:09.034 --> 00:07:10.602
Just run Mocha.

113
00:07:10.602 --> 00:07:13.490
And something's up.

114
00:07:13.490 --> 00:07:13.990
Yeah.

115
00:07:13.990 --> 00:07:16.390
No you do have to run it
cuz I'm using ES6 stuff.

116
00:07:18.410 --> 00:07:23.541
So I have to say mocha -- require sorry,

117
00:07:23.541 --> 00:07:29.566
--require test/helpers, test/helpers.

118
00:07:29.566 --> 00:07:33.670
If you're using the latest
node it probably would work.

119
00:07:33.670 --> 00:07:35.960
Five seven, five nine,
is that what it would be on?

120
00:07:35.960 --> 00:07:36.720
Something like that.

121
00:07:36.720 --> 00:07:40.420
&gt;&gt; Speaker 3: A couple of
us have errors back here.

122
00:07:40.420 --> 00:07:41.443
&gt;&gt; Brian Holt: Okay.
&gt;&gt; Speaker 3: Babel poly fill,

123
00:07:41.443 --> 00:07:44.580
can’t find module,
do you just need to install that?

124
00:07:44.580 --> 00:07:47.058
&gt;&gt; Brian Holt: I think I forgot to
put that on package requirements.

125
00:07:47.058 --> 00:07:52.307
So do mpm install --save--dev,
here let me show you.

126
00:07:52.307 --> 00:07:58.583
Mpm install --save--dev like that,
babel- poly fill.

127
00:07:58.583 --> 00:08:05.140
I missed a couple of these requirements,
so my bad.

128
00:08:06.340 --> 00:08:06.840
[LAUGH] sorry.

129
00:08:11.390 --> 00:08:12.430
In fact, I'm gonna do that myself.

130
00:08:16.110 --> 00:08:20.628
If you want to know a neat shortcut
you can do dash capital D, and

131
00:08:20.628 --> 00:08:22.009
that's save dev.

132
00:08:22.009 --> 00:08:28.359
So mpm install,
which you can also just type as mpm i.

133
00:08:28.359 --> 00:08:32.970
Then you can do -D babel-polyfill.

134
00:08:32.970 --> 00:08:34.130
That's exactly the same thing.

135
00:08:38.612 --> 00:08:41.978
&gt;&gt; Brian Holt: I don't know why I get so
hung up on using the shorthand.

136
00:08:41.978 --> 00:08:46.026
[LAUGH] It, cuz it's so dumb right,
I'm typing like ten more characters right,

137
00:08:46.026 --> 00:08:49.083
maybe I'm just burning like
one more calorie but whatever.

138
00:08:49.083 --> 00:08:54.202
Precious calories.

139
00:08:54.202 --> 00:08:56.101
Okay clear.

140
00:08:56.101 --> 00:09:04.645
So, now try that after you
install the poly fill.

141
00:09:04.645 --> 00:09:05.700
Plus working cool.

142
00:09:05.700 --> 00:09:10.380
If you want to do something
kind of fun cuz we all

143
00:09:10.380 --> 00:09:15.300
wanna do something fun,
I think it's dash R, so

144
00:09:15.300 --> 00:09:20.350
just do dash R dash capital
R a dash capital R Nyan.

145
00:09:23.224 --> 00:09:27.740
So cool right, this is like my
favorite tricks and Mocha and

146
00:09:27.740 --> 00:09:29.340
you get a nice and noodle consul.

147
00:09:29.340 --> 00:09:33.540
And so the more tests you get
the longer the rainbow gets behind it.

148
00:09:33.540 --> 00:09:34.660
I think it's pretty cool.

149
00:09:34.660 --> 00:09:40.850
[LAUGH]
The unfortunate part about it,

150
00:09:40.850 --> 00:09:42.590
which is why I actually
don't use it more often,

151
00:09:42.590 --> 00:09:46.270
is I actually like seeing all
the different tests that do pass.

152
00:09:46.270 --> 00:09:49.160
I like seeing the check mark and if you
do the Nyan way, it doesn't show you

153
00:09:49.160 --> 00:09:53.842
what tests are passing, it just shows you,
I have one passing, one failing.

154
00:09:53.842 --> 00:09:56.440
Sorry, zero failing and zero pending.

