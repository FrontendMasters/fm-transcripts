WEBVTT

1
00:00:00.000 --> 00:00:04.079
[MUSIC]

2
00:00:04.079 --> 00:00:06.494
&gt;&gt; Brian Holt: Another thing that we might
want to test say that on our initial

3
00:00:06.494 --> 00:00:09.190
render it wasn't showing all
the movies one of the times.

4
00:00:09.190 --> 00:00:13.094
Right, like that and that was a problem
for us we want to make sure that.

5
00:00:13.094 --> 00:00:17.190
We’re gonna showing as many show
cars as we definitely have data for.

6
00:00:17.190 --> 00:00:19.450
There's actually a pretty
easy way to test for that.

7
00:00:20.530 --> 00:00:27.558
So, let's pull and
show cards now because you don't test for

8
00:00:27.558 --> 00:00:31.760
the existence of show cards, okay.

9
00:00:31.760 --> 00:00:40.410
And we're also in a poll in data
&gt;&gt; Brian Holt: Actually

10
00:00:40.410 --> 00:00:42.040
what we're gonna do here is, shows-

11
00:00:49.678 --> 00:00:51.684
&gt;&gt; Brian Holt: ../public/data, okay?

12
00:00:57.647 --> 00:00:58.639
&gt;&gt; Brian Holt: We're
gonna write another test.

13
00:01:03.007 --> 00:01:08.719
&gt;&gt; Brian Holt: Should render as
many shows as there are data for.

14
00:01:18.409 --> 00:01:20.840
&gt;&gt; Brian Holt: Yep,
I like to dangle my prepositions.

15
00:01:20.840 --> 00:01:21.340
Deal with it.

16
00:01:25.794 --> 00:01:28.330
&gt;&gt; Brian Holt: You definitely don't want
to take an English workshop from me.

17
00:01:29.350 --> 00:01:35.630
Okay, so we have to get another
wrapper here wrapper here,

18
00:01:35.630 --> 00:01:43.672
so we have to say const
wrapper equals shallow search.

19
00:01:43.672 --> 00:01:48.154
Okay and I wanna say expect

20
00:01:48.154 --> 00:01:54.460
wrapper.find ( ShowCard).

21
00:01:54.460 --> 00:01:58.004
So, the cool thing here is we can
actually just give it the the ShowCard.

22
00:02:00.180 --> 00:02:04.850
Component from react intellectually you
can actually search based on that which

23
00:02:04.850 --> 00:02:05.730
I think is pretty cool.

24
00:02:07.840 --> 00:02:15.910
So, length-
&gt;&gt; Brian Holt: To.equal(shows.length).

25
00:02:15.910 --> 00:02:19.760
So, let's talk about the cycle.

26
00:02:19.760 --> 00:02:24.980
So, we're doing another shallow
render here of Search, and

27
00:02:24.980 --> 00:02:27.970
then we're doing a find,
we're finding every ShowCard here in here.

28
00:02:27.970 --> 00:02:32.220
This is going to return to us an array
of all the show cards it found.

29
00:02:32.220 --> 00:02:33.510
And I'm asking,

30
00:02:33.510 --> 00:02:37.410
did you find the same amount of show cards
that I have shows to display, right.

31
00:02:37.410 --> 00:02:41.920
So, it's basically testing it, do all
these get shown on the very first render?

32
00:02:43.050 --> 00:02:43.550
That makes sense?

33
00:02:47.729 --> 00:02:48.658
&gt;&gt; Brian Holt: So,
let's go see if that works.

34
00:02:57.786 --> 00:03:00.540
&gt;&gt; Brian Holt: Okay,
to passing let's go make it fail.

35
00:03:03.600 --> 00:03:06.030
So, here's a fairly insidious
way to make it fail.

36
00:03:07.040 --> 00:03:08.150
It does it this filter.

37
00:03:09.840 --> 00:03:11.200
Based on the title in the description.

38
00:03:13.000 --> 00:03:14.610
And it does that from the search term.

39
00:03:14.610 --> 00:03:17.700
So, if we set the initial state
to be something other than blank,

40
00:03:17.700 --> 00:03:20.950
it's not gonna show all of
the shows the first time, right.

41
00:03:20.950 --> 00:03:25.880
So for example, if I change this
to be house and I come in here and

42
00:03:25.880 --> 00:03:33.517
run my tests again
&gt;&gt; Brian Holt: Now,

43
00:03:33.517 --> 00:03:38.600
it's gonna only render two which are gonna
be House of Cards and Fuller House, right?

44
00:03:38.600 --> 00:03:41.490
But it's actually expecting
21 shows to be there.

45
00:03:41.490 --> 00:03:45.010
So now, this would fail and
this would fail usefully for us, right?

46
00:03:48.480 --> 00:03:51.880
So this is checking several things for
us, which is kind of interesting.

47
00:03:54.970 --> 00:03:59.020
So, let's unfail our test and
look at app spec again.

48
00:03:59.020 --> 00:04:00.640
Any questions about that test.

49
00:04:03.590 --> 00:04:04.910
&gt;&gt; Speaker 2: I do have
a couple questions here.

50
00:04:06.980 --> 00:04:10.890
Not as on this specific test,
but they're asking if you move

51
00:04:10.890 --> 00:04:14.770
the data.filter.map code into
a function and search jsx.

52
00:04:14.770 --> 00:04:16.750
How would you call that function?

53
00:04:16.750 --> 00:04:18.640
And then, can you call the test as a rap.

54
00:04:19.660 --> 00:04:21.950
Call it in a test as like
wrapper of some function.

55
00:04:25.350 --> 00:04:28.198
&gt;&gt; Brian Holt: Ask me the first question
again, let's see one at a time.

56
00:04:28.198 --> 00:04:32.470
&gt;&gt; Speaker 2: Moving the data.filter.map
code into a function in search through JS.

57
00:04:32.470 --> 00:04:35.890
Basically, I want to be able to access
then call in here to test that.

58
00:04:35.890 --> 00:04:38.470
&gt;&gt; Brian Holt: Sure, if you want
to basic test your static methods?

59
00:04:38.470 --> 00:04:41.143
&gt;&gt; Speaker 2: Yeah, can you tell us
whether or not the search is filtering But

60
00:04:41.143 --> 00:04:43.550
at least what kind what you're
getting it sounds like.

61
00:04:43.550 --> 00:04:46.800
&gt;&gt; Brian Holt: Okay, you definitely can.

62
00:04:46.800 --> 00:04:49.250
There's a couple ways you could do it.

63
00:04:49.250 --> 00:04:51.450
One of the you can just separate
into a separate module and

64
00:04:51.450 --> 00:04:53.580
then just require that in and
run it through the module.

65
00:04:53.580 --> 00:04:56.350
That's probably the easiest way in my
opinion because then you'll have to

66
00:04:56.350 --> 00:04:59.920
mess with reacted all you can
just test it on the side.

67
00:04:59.920 --> 00:05:04.420
That's something you're
interested in testing.

68
00:05:04.420 --> 00:05:06.180
I don't really use statics that much.

69
00:05:07.480 --> 00:05:10.910
But there is a concept of
statics in react which I

70
00:05:10.910 --> 00:05:12.770
had not intended on talking about today.

71
00:05:12.770 --> 00:05:15.080
Again, I don't really use them that much.

72
00:05:15.080 --> 00:05:19.710
But this is an object full of things that
are static methods, that you can basically

73
00:05:19.710 --> 00:05:24.410
say like my filter or something like
that which is a function, right?

74
00:05:25.640 --> 00:05:29.048
And basically you can call at this
point I could require into my test.

75
00:05:31.690 --> 00:05:39.850
&gt;&gt; Brian Holt: And I could say
something like Search.myFilter, right?

76
00:05:39.850 --> 00:05:41.530
And then I could test it that way.

77
00:05:41.530 --> 00:05:46.150
So, there's basically exposes these static
functions to be called statically, right?

78
00:05:46.150 --> 00:05:49.150
That if the terms calling a function
statically doesn't make a ton

79
00:05:49.150 --> 00:05:49.680
of sense to you.

80
00:05:49.680 --> 00:05:52.550
That's okay, it's kinda computers science.

81
00:05:52.550 --> 00:05:56.860
But the basic idea is that,
this is a method for

82
00:05:56.860 --> 00:06:01.830
all of search and so search has
exactly one instance of this method.

83
00:06:01.830 --> 00:06:04.470
Whereas, something here
like handleSearchTermEvent,

84
00:06:04.470 --> 00:06:09.050
every single time I create a new
component, a new search component,

85
00:06:09.050 --> 00:06:12.710
it has its own version of
handleSearchTermEvent.

86
00:06:12.710 --> 00:06:16.790
Whereas, all of search, every component,
every element everywhere has exactly one

87
00:06:16.790 --> 00:06:20.110
instance of my filter and
it's here on the statics, right?

88
00:06:20.110 --> 00:06:24.010
Basically gets put on the prototype if
that helps you think of it that sense.

89
00:06:24.010 --> 00:06:29.030
It's kind of like not typically useful but

90
00:06:29.030 --> 00:06:32.300
then that's the place where this would
be useful if you wanted to test it.

91
00:06:35.050 --> 00:06:38.640
But then again, I would say most things
that could be put on status could just be.

92
00:06:38.640 --> 00:06:41.100
Put into another module totally and
then you can test the module.

93
00:06:41.100 --> 00:06:44.830
It's a little less complicated, up to you.

94
00:06:46.560 --> 00:06:49.190
The syntax here might be slightly
different, I might be a little bit off but

95
00:06:49.190 --> 00:06:50.900
that's the basic gist of
what's going on here.

96
00:06:50.900 --> 00:06:54.160
So that's officially confusing for
everyone [LAUGH].

97
00:06:55.590 --> 00:06:57.160
It is a little confusing I know.

98
00:06:57.160 --> 00:07:02.490
But I was not intending on talking about
it but you can do something like that.

99
00:07:04.150 --> 00:07:06.020
Other questions.

100
00:07:06.020 --> 00:07:08.198
&gt;&gt; Speaker 2: Give me a minute
there is a couple here.

101
00:07:08.198 --> 00:07:11.060
You might have covered this.

102
00:07:11.060 --> 00:07:14.020
Did you cover, he said I missed that,
what is statics?

103
00:07:14.020 --> 00:07:16.740
But I think you just explained that.

104
00:07:16.740 --> 00:07:17.558
&gt;&gt; Brian Holt: Yeah.
Tried to.

105
00:07:17.558 --> 00:07:19.792
[LAUGH]
&gt;&gt; Speaker 2: Is.

106
00:07:23.340 --> 00:07:26.799
&gt;&gt; Speaker 2: Can the value of a search
input be manipulated inside the test?

107
00:07:29.560 --> 00:07:33.384
&gt;&gt; Brian Holt: Yes,
that's actually our next test.

108
00:07:33.384 --> 00:07:35.350
So, good question.

109
00:07:35.350 --> 00:07:37.610
So, give a question I thought of myself.

110
00:07:37.610 --> 00:07:40.410
[LAUGH] Just kidding
that's a great question.

111
00:07:40.410 --> 00:07:42.782
Yeah, our next text we’ll
talk exactly about that.

112
00:07:42.782 --> 00:07:45.178
Other question before I move on?

113
00:08:00.554 --> 00:08:01.652
&gt;&gt; Brian Holt: Okay.

114
00:08:02.930 --> 00:08:05.058
So, Zachary has a question here.

115
00:08:05.058 --> 00:08:09.958
Why does .find(ShowCard) rather than
putting this square brackets around or

116
00:08:09.958 --> 00:08:11.552
not the square brackets.

117
00:08:13.656 --> 00:08:14.660
&gt;&gt; Brian Holt: Angle brackets.

118
00:08:14.660 --> 00:08:17.560
Thank you.

119
00:08:17.560 --> 00:08:18.333
This probably would work.

120
00:08:21.111 --> 00:08:24.837
&gt;&gt; Brian Holt: I actually don't think
it will because it could be looking for

121
00:08:24.837 --> 00:08:28.360
specifically a ShowCard that
has no properties, right?

122
00:08:28.360 --> 00:08:31.000
Because all these, if we go back here and
look at my terminal and

123
00:08:31.000 --> 00:08:31.850
I scroll all the way up here.

124
00:08:31.850 --> 00:08:35.160
Look at all these properties
these are getting in, right?

125
00:08:35.160 --> 00:08:36.170
It has the trailer.

126
00:08:36.170 --> 00:08:37.780
It has all that other stuff.

127
00:08:37.780 --> 00:08:41.520
And so, it's gonna look for
a ShowCard that has no properties on it.

128
00:08:41.520 --> 00:08:44.500
When this particular case I was
like I'm looking for ShowCards.

129
00:08:44.500 --> 00:08:46.250
I don't actually care
what the properties are.

130
00:08:46.250 --> 00:08:49.440
I just wanna make sure there's 21 of them.

131
00:08:49.440 --> 00:08:51.470
I think that's the difference here.

132
00:08:51.470 --> 00:08:52.988
&gt;&gt; Speaker 3: So,
would that be true vice versa to it.

133
00:08:52.988 --> 00:08:59.340
Search on line 17.

134
00:08:59.340 --> 00:09:02.590
&gt;&gt; Brian Holt: It's not because you
actually you want to render an instance of

135
00:09:02.590 --> 00:09:07.370
of search for a does that make some sense.

136
00:09:07.370 --> 00:09:10.062
Yeah, you wanna actually create like a
specific instance of search to be able to

137
00:09:10.062 --> 00:09:10.717
call the wrapper.

138
00:09:15.849 --> 00:09:16.894
&gt;&gt; Brian Holt: That didn't make any sense.

139
00:09:16.894 --> 00:09:19.620
You wanna be able to create
a specific instance of search, right?

140
00:09:20.880 --> 00:09:25.650
That then you have this wrapper
around the call methods on.

141
00:09:25.650 --> 00:09:28.049
Now, this actually might work.

142
00:09:30.100 --> 00:09:32.360
Again, the dangers of live coding.

143
00:09:32.360 --> 00:09:35.130
Someone asked you previously
if you could do this.

144
00:09:35.130 --> 00:09:39.880
You might be able to do (React.DOM.h1).

145
00:09:39.880 --> 00:09:44.720
I don't know if this is going to work so,
hold on your seats.

146
00:09:44.720 --> 00:09:47.570
&gt;&gt; Speaker 4: You need one
more closing parentheses.

147
00:09:47.570 --> 00:09:48.070
&gt;&gt; Brian Holt: Thank you.

148
00:09:50.060 --> 00:09:51.428
It wasn't gonna work until she fixed it.

149
00:09:51.428 --> 00:09:52.162
Thank you.

150
00:10:00.127 --> 00:10:00.940
&gt;&gt; Brian Holt: I guess it didn't work.

151
00:10:02.845 --> 00:10:03.975
Factory type is deprecated.

152
00:10:03.975 --> 00:10:08.505
I don't know.

153
00:10:08.505 --> 00:10:09.835
There might be something to be done there.

154
00:10:09.835 --> 00:10:11.015
I don't actually know how to do it.

155
00:10:11.015 --> 00:10:11.515
So

