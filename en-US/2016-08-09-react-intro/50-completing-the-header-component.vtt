WEBVTT

1
00:00:00.000 --> 00:00:03.618
[MUSIC]

2
00:00:03.618 --> 00:00:06.115
&gt;&gt; Brian Holt: Benjamin H is asking
about handleSearchTermEvent,

3
00:00:06.115 --> 00:00:08.230
we're gonna take care of that momentarily.

4
00:00:09.630 --> 00:00:10.999
Stay tuned, I guess is what I would say.

5
00:00:13.743 --> 00:00:17.403
&gt;&gt; Brian Holt: So go back to search.jsx.

6
00:00:24.083 --> 00:00:26.743
&gt;&gt; Brian Holt: Yeah,
go back to search.jsx.

7
00:00:26.743 --> 00:00:30.213
And now, we're gonna have to
pass all the1 stuff into,

8
00:00:36.124 --> 00:00:38.585
&gt;&gt; Brian Holt: Into the header, sorry.

9
00:00:38.585 --> 00:00:43.467
[COUGH] So go here and
say const Header equals

10
00:00:43.467 --> 00:00:47.406
= require('./header').

11
00:00:47.406 --> 00:00:49.525
Okay, and now we're gonna rid
of this business right here.

12
00:00:52.405 --> 00:00:56.745
&gt;&gt; Brian Holt: Where it says header and
we're gonna put Header here.

13
00:00:56.745 --> 00:00:59.246
But now we're gonna have to start
passing some of this stuff into,

14
00:01:02.106 --> 00:01:02.930
&gt;&gt; Brian Holt: Into the Header.

15
00:01:04.270 --> 00:01:11.575
So come down here and we're gonna say,
handleSearchTermChange.

16
00:01:18.235 --> 00:01:22.915
&gt;&gt; Brian Holt: And then we're gonna kinda
modify this here up here in just a sec.

17
00:01:22.915 --> 00:01:26.903
I wanna say
this.handleSearchTermChange and

18
00:01:26.903 --> 00:01:31.196
then we're gonna also pass
it in the search terms.

19
00:01:31.196 --> 00:01:36.577
We're gonna say searchTerm =
this.state.searchTerm, right,

20
00:01:36.577 --> 00:01:42.154
cuz this is coming from the state,
not necessary from the properties.

21
00:01:42.154 --> 00:01:45.954
And then we're gonna
also just do showSearch.

22
00:01:45.954 --> 00:01:50.360
And if you just reference it
like that with nothing provided,

23
00:01:50.360 --> 00:01:52.234
it's gonna pass in true.

24
00:01:52.234 --> 00:01:56.163
So this is kind of a shorthand and
actually our standard requires that,

25
00:01:56.163 --> 00:01:58.470
standard React requires that.

26
00:01:58.470 --> 00:01:59.983
But just know that that's
equivalent to this.

27
00:02:02.863 --> 00:02:03.523
&gt;&gt; Brian Holt: Right?

28
00:02:05.878 --> 00:02:08.958
&gt;&gt; Brian Holt: That's
the difference there.

29
00:02:08.958 --> 00:02:11.558
So here's another personal preference and

30
00:02:11.558 --> 00:02:15.852
I say most React developers agree with me,
not necessarily all of them.

31
00:02:15.852 --> 00:02:18.871
This is kinda hard to parse,
right, it's pretty dense.

32
00:02:18.871 --> 00:02:21.408
We're seeing all these
properties being passed down, so

33
00:02:21.408 --> 00:02:23.852
you can actually put these
on multiple lines like this.

34
00:02:29.032 --> 00:02:31.807
&gt;&gt; Brian Holt: And its nice to be able to,
that's pretty easy to parse, right,

35
00:02:31.807 --> 00:02:33.470
pretty easy to read.

36
00:02:33.470 --> 00:02:37.019
Looks kinda weird, because we're not
used to seeing HTML that way but

37
00:02:37.019 --> 00:02:38.594
this this works okay with JSX.

38
00:02:38.594 --> 00:02:42.860
And then some people prefer to put
the closing tag on the last line.

39
00:02:44.660 --> 00:02:46.860
I'm of the school of thought,
it's nice to put it there,

40
00:02:46.860 --> 00:02:49.140
cuz then I can just keep adding, whoops!

41
00:02:49.140 --> 00:02:52.040
I can keep adding new things
underneath it without having to make

42
00:02:52.040 --> 00:02:53.720
sure that that's on the right line.

43
00:02:54.860 --> 00:02:56.774
Up to you,
you don't have to do that either.

44
00:02:59.414 --> 00:03:02.303
&gt;&gt; Brian Holt: Okay, so
let's talk about handleSearchTermEvent and

45
00:03:02.303 --> 00:03:05.390
why we didn't actually
use it the same way.

46
00:03:05.390 --> 00:03:07.754
So what we're gonna do here
is going to change this,

47
00:03:07.754 --> 00:03:10.404
the name of this function to
be handleSearchTermChange.

48
00:03:10.404 --> 00:03:12.584
And then we're not gonna
have it take an event.

49
00:03:12.584 --> 00:03:15.704
We're actually gonna just
have it take the searchTerm.

50
00:03:19.684 --> 00:03:22.560
&gt;&gt; Brian Holt: And then we're gonna
change this to be searchTerm.

51
00:03:22.560 --> 00:03:24.040
Now why is that?

52
00:03:24.040 --> 00:03:25.900
We can actually make
this work with events and

53
00:03:25.900 --> 00:03:31.480
we can actually just call raw from the
child up to the parent given the event.

54
00:03:32.540 --> 00:03:36.730
But that actually makes this this
particular function far less reusable.

55
00:03:37.950 --> 00:03:41.400
Because now it only works with events and
that's kind of a problem.

56
00:03:41.400 --> 00:03:43.810
Because what happens if we have
multiple places that we can

57
00:03:43.810 --> 00:03:45.640
change our search term, right?

58
00:03:46.640 --> 00:03:48.830
We have to either simulate some
sort of synthetic event and

59
00:03:48.830 --> 00:03:51.704
that's a really gross icky thing to do,
right?

60
00:03:51.704 --> 00:03:56.000
Creating this synthetic event that we're
just like passing and creating ourselves.

61
00:03:56.000 --> 00:04:00.660
Instead, what we'll do is we'll unravel
that event in the child then we'll pass up

62
00:04:00.660 --> 00:04:03.550
just the raw string, right?

63
00:04:03.550 --> 00:04:05.210
So let's actually just
go do that really quick.

64
00:04:07.250 --> 00:04:09.454
So come back down to header.jsx.

65
00:04:12.005 --> 00:04:15.005
&gt;&gt; Brian Holt: Did I call this
handleSearchTermChange, I just wanna make

66
00:04:15.005 --> 00:04:18.065
sure, handleSearchTermChange
is actually what I wanted.

67
00:04:18.065 --> 00:04:22.801
And then this handleSearchTermEvent,

68
00:04:22.801 --> 00:04:26.845
so actually what we wanna do here.

69
00:04:26.845 --> 00:04:31.085
So we're gonna make a new method
here called handleSearchTermEvent.

70
00:04:31.085 --> 00:04:33.685
This is gonna take an event.

71
00:04:39.105 --> 00:04:42.974
&gt;&gt; Brian Holt: And
here we're just gonna say,

72
00:04:42.974 --> 00:04:51.156
this.props.handleSearchTermChange with
e.target.value.

73
00:04:51.156 --> 00:04:53.835
Sorry, I tend to call my events e.

74
00:04:53.835 --> 00:04:56.693
I think it's a pretty common thing for
most UI engineers but

75
00:04:56.693 --> 00:04:59.275
you can call this event if
that makes you feel better.

76
00:05:08.776 --> 00:05:09.480
&gt;&gt; Brian Holt: Okay, so

77
00:05:09.480 --> 00:05:14.676
does anyone who have a question about
why I did it this particular way?

78
00:05:17.376 --> 00:05:20.536
&gt;&gt; Brian Holt: It's in the interest of
making that function more reusable.

79
00:05:20.536 --> 00:05:24.636
So now I can use it anywhere that I have
to be able to handleSearchTermChange.

80
00:05:24.636 --> 00:05:27.940
And I'm using the same code path,
which is always a good thing, right?

81
00:05:27.940 --> 00:05:31.415
We're using our code, which means less
code, and that means one place to find

82
00:05:31.415 --> 00:05:38.065
bugs instead of two
&gt;&gt; Speaker 2: Did you want the onChange

83
00:05:38.065 --> 00:05:42.267
to be this.handleSearchTermEvent instead
of this.props.handleSearchTermEvent?

84
00:05:42.267 --> 00:05:42.895
&gt;&gt; Brian Holt: Yep, you're right.

85
00:05:45.636 --> 00:05:49.636
&gt;&gt; Brian Holt: So here on onChange,
there should be no props here.

86
00:06:05.127 --> 00:06:07.570
&gt;&gt; Brian Holt: Okay, so
come back to search for just a second.

87
00:06:11.010 --> 00:06:13.264
&gt;&gt; Brian Holt: Make sure we're
passing that in correctly, we are.

88
00:06:13.264 --> 00:06:17.545
The other thing I wanted to show you real
quick, notice how we're saying searchTerm,

89
00:06:17.545 --> 00:06:18.260
searchTerm.

90
00:06:19.340 --> 00:06:24.039
Well there's a neat ES6 function that
we can actually just say searchTerm and

91
00:06:24.039 --> 00:06:24.830
that works.

92
00:06:24.830 --> 00:06:28.110
And that's exactly the same as this.

93
00:06:28.110 --> 00:06:29.820
So those two things are exactly the same.

94
00:06:32.560 --> 00:06:35.682
&gt;&gt; Brian Holt: And that's just an ES6
convenience functionality that if your

95
00:06:35.682 --> 00:06:38.454
property and the name of your
variable is the same thing,

96
00:06:38.454 --> 00:06:42.295
you can just write it once and it will
extrapolate that that's what you meant.

97
00:06:50.013 --> 00:06:52.973
&gt;&gt; Brian Holt: Okay,
I'll take some questions in just a second.

98
00:06:52.973 --> 00:06:57.557
Let's go make sure that I'm
actually doing everything okay,

99
00:06:57.557 --> 00:07:01.370
make sure I didn't actually
break our search here.

100
00:07:02.830 --> 00:07:04.475
So it's still rendering okay and

101
00:07:04.475 --> 00:07:07.187
it looks like it's still
searching okay as well, so.

102
00:07:10.027 --> 00:07:12.507
&gt;&gt; Brian Holt: Okay,
any questions about that?

103
00:07:12.507 --> 00:07:15.485
&gt;&gt; Speaker 3: What is let utilSpace doing?

104
00:07:15.485 --> 00:07:19.339
&gt;&gt; Brian Holt: So let utilSpace is
basically declaring I have a mutable

105
00:07:19.339 --> 00:07:21.756
variable that I'm going to use.

106
00:07:21.756 --> 00:07:26.510
So if we go back to Header, I mean you
could just as easily say var here and

107
00:07:26.510 --> 00:07:27.610
that's just fine.

108
00:07:27.610 --> 00:07:29.910
Let is just kinda the new
way of declaring mutability.

109
00:07:31.370 --> 00:07:34.260
It also has block level scoping, which
we don't necessarily need to talk about.

110
00:07:34.260 --> 00:07:37.343
But for all intents and purposes for
this, it's the same thing.

111
00:07:37.343 --> 00:07:42.149
&gt;&gt; Speaker 3: I'm getting an error that
the variable utilSpace is defined but

112
00:07:42.149 --> 00:07:43.130
never used.

113
00:07:44.360 --> 00:07:45.166
&gt;&gt; Brian Holt: Do you have it down here?

114
00:07:47.885 --> 00:07:48.866
&gt;&gt; Brian Holt: That's
the part where we use it.

115
00:07:52.606 --> 00:07:54.046
&gt;&gt; Brian Holt: See,
isn't your linter helpful?

116
00:07:54.046 --> 00:07:56.986
[LAUGH] That's exactly the kind
of errors you wan it to find.

117
00:08:00.727 --> 00:08:01.588
&gt;&gt; Brian Holt: And I'll cut a branch and

118
00:08:01.588 --> 00:08:03.884
push it up here in just a sec cuz
we're gonna kind of switch gears for

119
00:08:03.884 --> 00:08:04.749
a little bit after this.

120
00:08:07.529 --> 00:08:08.349
&gt;&gt; Brian Holt: Questions?

121
00:08:12.449 --> 00:08:14.409
&gt;&gt; Brian Holt: I can only assume
I'm teaching this perfectly then.

122
00:08:14.409 --> 00:08:16.890
&gt;&gt; Speaker 4: [LAUGH]
&gt;&gt; Brian Holt: All right so

123
00:08:16.890 --> 00:08:17.790
let's cut a new branch here.

124
00:08:40.031 --> 00:08:41.867
&gt;&gt; Brian Holt: Okay, so I cut fem-20, so

125
00:08:41.867 --> 00:08:45.251
feel free to go grab that if
your stuff's not working.

126
00:08:50.471 --> 00:08:53.038
&gt;&gt; Brian Holt: Cool, so let's go and
switch gears a little bit,

127
00:08:53.038 --> 00:08:55.131
unless anyone has any other questions?

128
00:09:00.211 --> 00:09:04.030
&gt;&gt; Speaker 5: Can you just walk through
quickly how data flows when a user adds

129
00:09:04.030 --> 00:09:04.690
an input?

130
00:09:06.110 --> 00:09:08.530
&gt;&gt; Brian Holt: Sure, so

131
00:09:08.530 --> 00:09:12.710
coming to header, so a user's going
to type into this input, right?

132
00:09:14.010 --> 00:09:17.621
Now every time that you type something
it's gonna fire off an onChange event

133
00:09:17.621 --> 00:09:23.220
which is going to come up here
to handleSearchTermEvent, right?

134
00:09:23.220 --> 00:09:25.440
This is gonna handle the event here.

135
00:09:25.440 --> 00:09:28.740
This in turn is going to call
handleSearchTermChange which it's

136
00:09:28.740 --> 00:09:30.920
getting from its properties
which is going to be a function,

137
00:09:30.920 --> 00:09:34.940
but this is given from the parent, right?

138
00:09:34.940 --> 00:09:39.520
So this comes back to our idea that
children can call the parents and say,

139
00:09:39.520 --> 00:09:41.750
hey, I have something happened.

140
00:09:41.750 --> 00:09:45.480
But it's up to the parent to implement
this handleSearchTermChange, right?

141
00:09:45.480 --> 00:09:48.339
The parent is under no obligation
to change anything about its state.

142
00:09:49.730 --> 00:09:53.840
So the parent can say, if I'm being called
by this child just ignore it, right?

143
00:09:53.840 --> 00:09:57.206
That's totally fine and
that's totally a black box to this child.

144
00:09:57.206 --> 00:09:59.801
It has no idea of whether
the parent's respecting this or not.

145
00:10:02.482 --> 00:10:06.284
&gt;&gt; Brian Holt: Okay, so
it's gonna call with event.target.value,

146
00:10:06.284 --> 00:10:10.830
which is going to be passed up to
the parent, which is search.jsx.

147
00:10:10.830 --> 00:10:12.727
It takes in this searchTerm, right,

148
00:10:12.727 --> 00:10:15.467
which is literally just
a string of what's changing.

149
00:10:15.467 --> 00:10:18.277
And then it's going to call
setState with searchTerm,

150
00:10:18.277 --> 00:10:20.740
which actually gets propagated up here.

151
00:10:20.740 --> 00:10:21.820
We're changing our state,

152
00:10:21.820 --> 00:10:25.690
which is ultimately going to re-render
our entire UI and that's how it works.

