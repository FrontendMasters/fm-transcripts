WEBVTT

1
00:00:00.000 --> 00:00:03.974
[MUSIC]

2
00:00:03.974 --> 00:00:07.150
&gt;&gt; Brian: One of the big key differences
between Flux and Redux is Flux,

3
00:00:07.150 --> 00:00:09.300
you're gonna have many stores, right?

4
00:00:09.300 --> 00:00:13.250
There's a bunch of different stores and
they get all modified in different places.

5
00:00:13.250 --> 00:00:17.300
This actually ends up being,
&gt;&gt; Brian: It's like you hit this critical

6
00:00:17.300 --> 00:00:21.722
mass of it's very nice to have many
stores, and then you hit, I'm gonna say,

7
00:00:21.722 --> 00:00:26.423
ten stores and all the sudden it's a giant
disaster to have so many stores, right?

8
00:00:26.423 --> 00:00:30.724
I was talking to or rather I was
listening to one of those conference talk

9
00:00:30.724 --> 00:00:36.050
Bill Fisher who's works on React and
works at Facebook and Flex and all that.

10
00:00:36.050 --> 00:00:39.730
And he mentioned that
the Facebook ads page, or

11
00:00:39.730 --> 00:00:44.885
one of their ads platform products,
has over 100 stores on it.

12
00:00:44.885 --> 00:00:47.480
And that just makes me
cringing on the inside, right?

13
00:00:47.480 --> 00:00:50.020
Keeping track of so many different
stores seems such a pain to me.

14
00:00:52.560 --> 00:00:55.590
So that's kind of where
Redux steps in here.

15
00:00:55.590 --> 00:01:00.130
Redux kind of took the React approach
of just saying, well, you have so

16
00:01:00.130 --> 00:01:05.210
many different things, why don't you just
try mashing them all together right?

17
00:01:05.210 --> 00:01:07.750
So the difference with Redux
is that there's one store and

18
00:01:07.750 --> 00:01:09.410
then you'd store all of
your data in a tree.

19
00:01:10.430 --> 00:01:13.620
Well this should sound relatively
familiar because that's exactly

20
00:01:13.620 --> 00:01:14.510
what React is right?

21
00:01:14.510 --> 00:01:17.260
It's a tree of components, right?

22
00:01:17.260 --> 00:01:20.521
So the idea of Redux is that instead
of adding a whole new store you just

23
00:01:20.521 --> 00:01:21.477
add a new property,

24
00:01:21.477 --> 00:01:25.096
right, and that new property has its
own tree of properties underneath it.

25
00:01:25.096 --> 00:01:29.478
And that's the basic gist
behind Redux in that sense.

26
00:01:34.837 --> 00:01:42.290
&gt;&gt; Brian: So okay,
&gt;&gt; Brian: Let's go

27
00:01:42.290 --> 00:01:47.580
check the Redux docs, Redux-
&gt;&gt; Speaker 2: .js.org

28
00:01:47.580 --> 00:01:49.262
&gt;&gt; Brian: Yeah, I wonder if there was

29
00:01:49.262 --> 00:01:54.324
a diagram that I originally saw, and
the dangers of Google image search, right?

30
00:01:54.324 --> 00:01:56.368
&gt;&gt; [LAUGH]
&gt;&gt; Brian: [COUGH] Okay,

31
00:01:56.368 --> 00:01:58.242
I'm not gonna find
the one I'm looking for.

32
00:02:00.531 --> 00:02:01.270
&gt;&gt; Brian: You provided?

33
00:02:01.270 --> 00:02:03.600
Nope that's exactly the one
I did not want to look at.

34
00:02:03.600 --> 00:02:10.826
Okay, so,
&gt;&gt; Brian: Yeah,

35
00:02:10.826 --> 00:02:12.390
I'll just follow what I have written here.

36
00:02:13.750 --> 00:02:17.940
So Redux has a single store,
Flux you have many stores.

37
00:02:17.940 --> 00:02:21.997
All data lives in a single
store with Redux.

38
00:02:21.997 --> 00:02:24.725
Both with Flux and
with Redux, intentionally,

39
00:02:24.725 --> 00:02:27.060
you cannot modify the data directly.

40
00:02:27.060 --> 00:02:30.550
You can only read the data and
then you can fire off events

41
00:02:30.550 --> 00:02:35.320
that then in turn do things to modify it.

42
00:02:37.190 --> 00:02:40.822
The difference is with Redux,
so you admit an action, right,

43
00:02:40.822 --> 00:02:43.639
then the action goes to the dispatcher,
right?

44
00:02:43.639 --> 00:02:48.850
Well, [SOUND] not really,
it's a reducer, blah.

45
00:02:48.850 --> 00:02:51.400
Okay, so you admit an action, okay.

46
00:02:51.400 --> 00:02:53.648
The action gets called
to the root reducer,

47
00:02:53.648 --> 00:02:57.497
which is very similar to the dispatcher
but it actually still is a reducer.

48
00:02:57.497 --> 00:02:59.597
And I'm going to define
reducer momentarily, so

49
00:02:59.597 --> 00:03:00.949
if that's a weird word, it is.

50
00:03:03.340 --> 00:03:07.481
Then the root reducer what it's gonna
do is it's going to dispatch to small

51
00:03:07.481 --> 00:03:08.604
reducers, right?

52
00:03:08.604 --> 00:03:11.363
And if you want those reducers to
dispatch to other reducers, right,

53
00:03:11.363 --> 00:03:13.860
it's just reducers all the way down.

54
00:03:13.860 --> 00:03:18.470
What a reduce is, remember we were
talking about map and filter and

55
00:03:18.470 --> 00:03:22.330
all those functional techniques?

56
00:03:22.330 --> 00:03:24.200
Well, there's one called reduce as well,
right?.

57
00:03:24.200 --> 00:03:26.129
There's map reduce, right?

58
00:03:26.129 --> 00:03:29.381
Many of us have heard of
the term as applied to big data,

59
00:03:29.381 --> 00:03:32.232
cuz that's essentially
what most big data is.

60
00:03:32.232 --> 00:03:36.485
Again, being a bullshit industry term,
right?

61
00:03:36.485 --> 00:03:41.820
[LAUGH] Reducer is just the function
passed to a reduce function, right?

62
00:03:41.820 --> 00:03:43.790
That's the reducer function.

63
00:03:43.790 --> 00:03:47.010
Just like you have a filter and
you pass it a filterer.

64
00:03:47.010 --> 00:03:49.645
[LAUGH] I don't know,
do you call it a mapper?

65
00:03:49.645 --> 00:03:52.258
I've never heard it called that but
I've heard it called filterer.

66
00:03:52.258 --> 00:03:53.690
But that's what reducer is, right?

67
00:03:55.170 --> 00:03:58.720
So basically what a reducer
is is it takes one state,

68
00:03:58.720 --> 00:04:02.230
it does some transformation to it,
and returns a new state.

69
00:04:02.230 --> 00:04:06.850
And this is very key, it's very functional
in nature that you get a state,

70
00:04:06.850 --> 00:04:11.420
you create a new object,
you make the changes to that new object,

71
00:04:11.420 --> 00:04:14.360
and return the new object, but
you don't modify the old object.

72
00:04:16.100 --> 00:04:19.640
This is gonna become very, very key
once you start trying to debug it,

73
00:04:19.640 --> 00:04:23.660
because it allows for some fantastic
debugging things which will just melt your

74
00:04:23.660 --> 00:04:25.890
mind out of your ears
once we decide to do it.

