WEBVTT

1
00:00:00.000 --> 00:00:03.867
[MUSIC]

2
00:00:03.867 --> 00:00:06.580
&gt;&gt; Brian Holt: So, if you wanna see
how I get super lazy with this.

3
00:00:07.930 --> 00:00:10.600
Let's use arrow functions
because they're super fun.

4
00:00:10.600 --> 00:00:12.770
So, we can refactor to be that, right,

5
00:00:12.770 --> 00:00:18.150
that's the same thing.ri That's ES6
arrow function, that again,

6
00:00:21.040 --> 00:00:25.700
that, and that,
are totally equivalent, for

7
00:00:25.700 --> 00:00:28.190
our intents and purposes right here,
are totally equivalent.

8
00:00:29.620 --> 00:00:32.855
But we can even take this one step
further to make it even more perverse.

9
00:00:32.855 --> 00:00:36.236
[LAUGH] And we can change this to be.

10
00:00:37.794 --> 00:00:42.031
&gt;&gt; Brian Holt: So, with an arrow function,
if you have no curly braces,

11
00:00:42.031 --> 00:00:46.550
it's an implicit return,
which comes from CoffeeScript.

12
00:00:46.550 --> 00:00:52.520
So, I'm gonna take this away, and
replace that with a parenthesis,

13
00:00:52.520 --> 00:00:56.450
which basically means,
an expression is about to follow, right?

14
00:00:56.450 --> 00:01:01.759
Then we delete this return statement,
&gt;&gt; Brian Holt: And then I'll delete that,

15
00:01:01.759 --> 00:01:05.832
and I'll delete this curly brace as well,
and change that with a parentheses.

16
00:01:08.903 --> 00:01:10.983
&gt;&gt; Brian Holt: So, like I said,
if there's no curly braces,

17
00:01:10.983 --> 00:01:12.910
it's implicitly being returned, right?

18
00:01:15.790 --> 00:01:18.129
So now, this actually will work as is.

19
00:01:21.911 --> 00:01:23.770
&gt;&gt; Brian Holt: Some people like that,
some people don't.

20
00:01:23.770 --> 00:01:26.180
Some people feel like that's too clever,
and that's too clever for

21
00:01:26.180 --> 00:01:28.540
you, then don't do it, because if you
feel like you're doing clever code,

22
00:01:28.540 --> 00:01:29.660
you're probably doing something wrong.

23
00:01:30.830 --> 00:01:32.820
I'm okay with this,
cuz I feel like it's readable to me.

24
00:01:34.790 --> 00:01:39.210
But that's up to you, and I'll probably
keep doing that, just because it works for

25
00:01:39.210 --> 00:01:42.080
me, but the thing where people
do get caught up in this,

26
00:01:42.080 --> 00:01:44.620
is you can't say that const x = 5 here,
right?

27
00:01:44.620 --> 00:01:47.270
Because this is no longer
like a function body,

28
00:01:47.270 --> 00:01:50.350
this is an expression, and
that doesn't work anymore.

29
00:01:50.350 --> 00:01:56.760
So, at that point, you would have to come
back and say, the other syntax, right?

30
00:01:56.760 --> 00:01:58.390
As soon as you wanna be able
to do that kind of stuff.

31
00:01:59.850 --> 00:02:02.880
&gt;&gt; Speaker 2: Do you do
the implicit function at your job?

32
00:02:02.880 --> 00:02:04.000
&gt;&gt; Brian Holt: Yeah, all the time.

33
00:02:06.520 --> 00:02:07.090
But I mean,

34
00:02:07.090 --> 00:02:10.130
I have the luxury of working with, like,
people that are way smarter than me.

35
00:02:10.130 --> 00:02:11.890
So they were like,
why weren't you doing it two weeks ago?

36
00:02:11.890 --> 00:02:13.910
I'm like, I'm sorry, I'm stupid.

37
00:02:13.910 --> 00:02:19.460
[LAUGH]
&gt;&gt; Brian Holt: So,

38
00:02:19.460 --> 00:02:22.520
up to you.

39
00:02:22.520 --> 00:02:23.740
Up to you if you feel okay with that.

40
00:02:23.740 --> 00:02:26.778
Does anybody have any questions about
what is actually going on there?

41
00:02:30.204 --> 00:02:32.861
&gt;&gt; Speaker 3: So, you would put
the prompts in the first parenthesis

42
00:02:32.861 --> 00:02:37.090
cause it's [INAUDIBLE],
&gt;&gt; Brian Holt: Yep,

43
00:02:37.090 --> 00:02:39.018
nailed it
&gt;&gt; Speaker 2: So, can you do like,

44
00:02:39.018 --> 00:02:42.008
conditionals with in that
return statement to that?

45
00:02:42.008 --> 00:02:43.507
&gt;&gt; Brian Holt: You have
to use [INAUDIBLE].

46
00:02:43.507 --> 00:02:44.290
&gt;&gt; Speaker 2: Okay.
&gt;&gt; Brian Holt: Once you start doing

47
00:02:44.290 --> 00:02:50.570
conditionals, go back to the other syntax
like this falls apart very quickly, but

48
00:02:50.570 --> 00:02:53.690
this particular case where it's like, this
is purely display were purely just putting

49
00:02:53.690 --> 00:02:57.210
some like, it's more declarative they're
declaring, that this is the way it looks.

50
00:02:57.210 --> 00:03:00.016
This is really great, very fast.

51
00:03:05.602 --> 00:03:07.086
&gt;&gt; Brian Holt: Let me just make sure that,

52
00:03:07.086 --> 00:03:10.003
we talked about like no
sibling components, right?

53
00:03:10.003 --> 00:03:14.142
Like, I can't do each one here,
because you have to remember back to like,

54
00:03:14.142 --> 00:03:18.798
what this is actually being transpired to,
right, you can have like var x equals five

55
00:03:18.798 --> 00:03:24.310
space, three rows, it really doesn't even
make sense, it's the same thing here.

56
00:03:24.310 --> 00:03:27.491
So you have to have one root component
just because these are literally just

57
00:03:27.491 --> 00:03:28.255
function calls.

58
00:03:35.545 --> 00:03:38.248
&gt;&gt; Brian Holt: So hence, you'll see a lot
of people just wrapping stuff in div,

59
00:03:38.248 --> 00:03:40.511
right in this particular case
we don't really care for

60
00:03:40.511 --> 00:03:42.650
the div like we don't need it.

61
00:03:42.650 --> 00:03:44.770
But we want to have three
different my titles, so

62
00:03:44.770 --> 00:03:47.120
we have to have some root type component.

63
00:03:48.150 --> 00:03:51.010
And there's just no way to get around it,
and you'll see a lot of people just

64
00:03:51.010 --> 00:03:54.010
wrap stuff in divs for
that reason, it's totally fine.

65
00:03:54.010 --> 00:03:54.810
Feel free to do that.

66
00:03:54.810 --> 00:03:58.210
That's a very common thing
to see in the community.

67
00:03:58.210 --> 00:04:02.610
So.
&gt;&gt; Speaker 2: You ever see people,

68
00:04:02.610 --> 00:04:07.980
using like if something else,
some other form of, would make sense.

69
00:04:07.980 --> 00:04:09.977
Do you see what kind of branching out or,
or

70
00:04:09.977 --> 00:04:14.509
do you see more of this uniformly like
divs, divs, divs, like divs argue wrapper?

71
00:04:14.509 --> 00:04:16.173
&gt;&gt; Brian Holt: I mean like,
if you do like a navigation,

72
00:04:16.173 --> 00:04:17.820
then go ahead use like a nav, right?

73
00:04:17.820 --> 00:04:21.030
Or if you're inside of something and
you don't want another like block level,

74
00:04:21.030 --> 00:04:23.070
then you could use like a span or
something like that.

75
00:04:24.230 --> 00:04:26.890
Yeah, I mean,
I would definitely see those but, usually,

76
00:04:26.890 --> 00:04:29.270
like when you're just reaching for
something meaningless, or

77
00:04:29.270 --> 00:04:32.560
a like it's,
what I did is really could do is, and

78
00:04:32.560 --> 00:04:37.410
it doesn't have any semantic meaning
to it then, that's what you reach for.

79
00:04:37.410 --> 00:04:41.314
Does that answer your question?

80
00:04:41.314 --> 00:04:41.944
&gt;&gt; Speaker 2: Yeah.

81
00:04:41.944 --> 00:04:42.559
&gt;&gt; Brian Holt: Cool.

82
00:04:42.559 --> 00:04:47.360
So, again it depends what you're doing.

83
00:04:47.360 --> 00:04:51.200
If if something can have semantic meaning,
then by all means use something that has

84
00:04:51.200 --> 00:04:54.380
semantic meaning, but if it has no
semantic meaning, then don't try and

85
00:04:54.380 --> 00:04:58.240
force semantic meaning when none is meant,
because that's actually caused more

86
00:04:58.240 --> 00:05:00.220
problems than it solves, so
&gt;&gt; Speaker 2: So

87
00:05:00.220 --> 00:05:02.940
would you say that this syntax
is more like semantically.

88
00:05:02.940 --> 00:05:06.820
Expressive, than using an alternative?.

89
00:05:06.820 --> 00:05:11.740
&gt;&gt; Brian Holt: When you said this syntax,
you mean JSX in general?

90
00:05:11.740 --> 00:05:16.340
&gt;&gt; Speaker 2: Like
the implicit error function.

91
00:05:16.340 --> 00:05:18.780
&gt;&gt; Brian Holt: Do I
think it's more syntax?

92
00:05:18.780 --> 00:05:21.850
No, I mean to be honest,
it's more clever, and

93
00:05:21.850 --> 00:05:24.530
to be honest and
hides it more that it shows, right?

94
00:05:25.590 --> 00:05:28.921
However, I feel that
once you understand that,

95
00:05:28.921 --> 00:05:32.016
this is the way it works, it's sufficient.

96
00:05:35.748 --> 00:05:38.515
&gt;&gt; Brian Holt: Turns out, like, if I'm
just doing this for my own edification, or

97
00:05:38.515 --> 00:05:39.661
if I'm working at Netflix,

98
00:05:39.661 --> 00:05:41.970
where I know everyone that I
work with understands this.

99
00:05:41.970 --> 00:05:42.690
This is fine, but

100
00:05:42.690 --> 00:05:46.420
if I'm working with someone that I know,
doesn't necessarily possess that meaning.

101
00:05:46.420 --> 00:05:49.890
It's definitely worth it, to just stop
being lazy and write it out fully.

102
00:05:49.890 --> 00:05:53.870
Depends on who you're working with and
if you feel comfortable with it.

103
00:05:53.870 --> 00:05:57.657
But as soon as you get that feeling like,
I'm being too clever,

104
00:05:57.657 --> 00:05:59.914
like you're doing something wrong.

105
00:06:03.442 --> 00:06:05.346
&gt;&gt; Brian Holt: But,
I did want to show you this,

106
00:06:05.346 --> 00:06:08.760
cuz you will see this all over
in code examples, by the way.

107
00:06:08.760 --> 00:06:10.880
And we're actually gonna start
building a real app right now.

108
00:06:10.880 --> 00:06:14.410
Everything so far has been pretty
much just a little toy example.

109
00:06:14.410 --> 00:06:17.920
But, now we're actually going to be
start progressively getting larger and

110
00:06:17.920 --> 00:06:19.960
larger in our components.

111
00:06:21.820 --> 00:06:25.860
And in terms like we're gonna build a real
app, which I think is a useful experience

112
00:06:25.860 --> 00:06:28.760
to see how like what actually
makes an app in React.

113
00:06:30.390 --> 00:06:33.620
Something to know here, is I actually
have done all the CSS for you, so if you

114
00:06:33.620 --> 00:06:38.570
follow my CSS class names, you're gonna
get all the style for free out of the box.

115
00:06:38.570 --> 00:06:40.620
Don't you wish that worked
at your job that way?

116
00:06:40.620 --> 00:06:42.490
[LAUGH] But if you were to look at it,

117
00:06:42.490 --> 00:06:46.480
I have a style.CSS,
just a bunch of stuff in here.

118
00:06:46.480 --> 00:06:51.200
I am told, that it doesn't look great in
Firefox, it only looks good in Chrome.

119
00:06:51.200 --> 00:06:53.970
So, take that for

120
00:06:53.970 --> 00:06:58.080
what it's worth, but because that this
is not production code, I didn't care.

121
00:06:58.080 --> 00:07:02.320
[LAUGH] It uses Fluxbox everywhere,
because I was super lazy and

122
00:07:02.320 --> 00:07:03.740
didn't wanna do anything else.

123
00:07:05.840 --> 00:07:07.700
But, if you can figure how
to get to work in Firefox,

124
00:07:07.700 --> 00:07:10.054
than please make a poll request and
I will definitely accept that.

125
00:07:10.054 --> 00:07:12.641
But yeah, so
just follow my naming conventions, and

126
00:07:12.641 --> 00:07:14.375
you'll get all the style for free.

127
00:07:17.718 --> 00:07:20.160
&gt;&gt; Brian Holt: Let's see what
else we wanna talk about here.

128
00:07:20.160 --> 00:07:22.280
Just so
you know there is something called radium.

129
00:07:22.280 --> 00:07:26.710
And there's other things out there,
like radium, that basically allow you

130
00:07:27.880 --> 00:07:31.840
to do all of your CSS, in addition
to all your markup in your JSX,

131
00:07:31.840 --> 00:07:33.630
and you no longer have any CSS either.

132
00:07:33.630 --> 00:07:37.250
You have, you bring in basically
everything to one component.

133
00:07:38.260 --> 00:07:42.450
There's I'll say one, it's actually
really fun because allows you do like,

134
00:07:42.450 --> 00:07:44.340
JavaScript magic with your CSS.

135
00:07:44.340 --> 00:07:45.530
Which ends up being pretty cool.

136
00:07:47.390 --> 00:07:48.050
At the same time,

137
00:07:48.050 --> 00:07:50.920
it's kind of annoying because all
of your style in line in the end.

138
00:07:51.940 --> 00:07:55.150
So it's up to you, to whether or
not you decide to like that or

139
00:07:55.150 --> 00:07:57.590
not, I chose not to do it,
just because I don't want to focus on CSS,

140
00:07:57.590 --> 00:08:00.050
I want to focus on to the, on the react.

141
00:08:00.050 --> 00:08:02.591
But, just know that radians
out there some people like it,

142
00:08:02.591 --> 00:08:06.420
and it's worth checking out.

143
00:08:06.420 --> 00:08:08.050
It definitely a blast,
when I was playing around with it.

144
00:08:08.050 --> 00:08:11.990
I'm going to start building our app now,
you can delete my title dot JSX.

145
00:08:11.990 --> 00:08:14.540
You can also just leave it, up to you,

146
00:08:14.540 --> 00:08:18.110
but we are, we're not going to use my
title, we are all gonna use client app.

