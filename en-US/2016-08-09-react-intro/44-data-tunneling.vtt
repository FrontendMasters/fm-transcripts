WEBVTT

1
00:00:00.014 --> 00:00:04.195
[MUSIC]

2
00:00:04.195 --> 00:00:06.689
&gt;&gt; Brian Holt: So now we're gonna make
details actually be more than just a pile

3
00:00:06.689 --> 00:00:07.296
of debugging.

4
00:00:07.296 --> 00:00:11.516
[LAUGH] So we're gonna actually
make it display our show for us.

5
00:00:21.284 --> 00:00:22.136
&gt;&gt; Brian Holt: Yeah, so

6
00:00:22.136 --> 00:00:26.718
now we have this problem
that we have our shows, and

7
00:00:26.718 --> 00:00:29.820
our shows contain all of our data.

8
00:00:29.820 --> 00:00:33.920
And if you were getting this from a server
instead of just locally loading it,

9
00:00:33.920 --> 00:00:38.605
it would be a real problem because both

10
00:00:38.605 --> 00:00:43.660
details and search depend on having
access to the same data right?

11
00:00:45.190 --> 00:00:47.100
This is constantly a problem that
you're gonna run into react,

12
00:00:47.100 --> 00:00:51.000
is I have these two disparate components
that don't actually care about each other

13
00:00:51.000 --> 00:00:54.370
but they do care about the same amount
of data or the same pieces of data.

14
00:00:54.370 --> 00:00:59.370
So you have a couple options,
I mean the most naive and worst way to

15
00:00:59.370 --> 00:01:03.570
handle it is that you would have both
components Ajax requested the data, right?

16
00:01:03.570 --> 00:01:07.340
That makes zero sense because from
the time from search to details,

17
00:01:07.340 --> 00:01:10.630
it's a horrible idea,
because I'm making two Ajax requests and

18
00:01:10.630 --> 00:01:11.890
when I really only need to make one.

19
00:01:13.630 --> 00:01:17.960
So our other option is we push the shows
ups to the most common ancestor.

20
00:01:17.960 --> 00:01:21.290
In this particular case that would
be the entire app in general, and

21
00:01:21.290 --> 00:01:24.470
then via props we'd pass
it down to both of them.

22
00:01:24.470 --> 00:01:29.690
So that's what we're gonna do right now.
&gt;&gt; Brian Holt: This is called the data

23
00:01:29.690 --> 00:01:34.019
tunneling problem and it's prevalent
everywhere in react to be totally honest.

24
00:01:38.076 --> 00:01:40.457
&gt;&gt; Brian Holt: So, let's go ahead and

25
00:01:40.457 --> 00:01:46.180
move this from search,
which is where we have data here.

26
00:01:46.180 --> 00:01:52.440
We're actually gonna refactor this and
so it goes up into clientapp,jsx.

27
00:01:52.440 --> 00:01:55.494
So let's go to clientapp.jsx and
we're going to require data in here.

28
00:01:55.494 --> 00:02:01.799
So we're gonna say,
actually it's going to bring out shows and

29
00:02:01.799 --> 00:02:05.888
say, require../ public/data, and

30
00:02:05.888 --> 00:02:12.260
then we're going to do here is
we're going to go to search.

31
00:02:12.260 --> 00:02:15.800
This one right here I'm
gonna pass it down, so

32
00:02:15.800 --> 00:02:21.980
I wanna say shows= shows.

33
00:02:21.980 --> 00:02:23.850
So now we're taking shows from up here and

34
00:02:23.850 --> 00:02:29.670
we're passing it down to
the route here in search.jsx.

35
00:02:31.340 --> 00:02:36.435
So let's go to search now.
&gt;&gt; Brian Holt: Well,

36
00:02:36.435 --> 00:02:39.460
let me make sure that just
as recap what I did here.

37
00:02:40.470 --> 00:02:44.470
I have shows right here, and
I'm I'm passing it down right there.

38
00:02:46.940 --> 00:02:50.335
Okay, now got to search.jsx,
get rid of this line right

39
00:02:50.335 --> 00:02:55.978
here.
&gt;&gt; Brian Holt: Okay,

40
00:02:55.978 --> 00:03:00.902
and now instead of saying, where is it?

41
00:03:00.902 --> 00:03:07.650
Data.shows, what we're gonna say now
is we're gonna say, this.props.shows.

42
00:03:07.650 --> 00:03:09.620
Does that makes sense?

43
00:03:09.620 --> 00:03:12.100
So now we're pulling it in from
the properties rather than just

44
00:03:12.100 --> 00:03:12.960
locally requiring it.

45
00:03:14.160 --> 00:03:15.920
Again I'll, yeah, go ahead.
&gt;&gt; Speaker 2: Just,

46
00:03:15.920 --> 00:03:19.954
which line did you delete again?
&gt;&gt; Brian Holt: Just the require up here.

47
00:03:19.954 --> 00:03:20.850
&gt;&gt; Speaker 2: Okay.

48
00:03:20.850 --> 00:03:21.630
&gt;&gt; Brian Holt: Your linter will yell at

49
00:03:21.630 --> 00:03:23.180
you if you don't delete it so.

50
00:03:23.180 --> 00:03:27.550
Either it's me yelling at you or
the linter, and you can pick your battle.

51
00:03:27.550 --> 00:03:30.725
You can probably beat me,
I don't know if you can beat the linter.

52
00:03:30.725 --> 00:03:35.625
[LAUGH]
&gt;&gt; Brian Holt: Okay, and

53
00:03:35.625 --> 00:03:39.476
then we changed this right here
to be this.props.shows instead of

54
00:03:39.476 --> 00:03:43.918
data.shows.
&gt;&gt; Brian Holt: Now,

55
00:03:43.918 --> 00:03:47.260
the alarm should be going
off in your head right now.

56
00:03:47.260 --> 00:03:50.450
It's like I'm referencing something else
in props, if I don't change something,

57
00:03:50.450 --> 00:03:52.520
then the linter is gonna yell at me.

58
00:03:52.520 --> 00:03:55.250
So now you need to add something,
we need to add prop types to this.

59
00:03:59.100 --> 00:04:02.350
And because this is create
class way of doing it,

60
00:04:02.350 --> 00:04:04.515
we can actually just put
a prop type straight in here.

61
00:04:04.515 --> 00:04:07.384
So I'm gonna put it here and
get initial state,

62
00:04:07.384 --> 00:04:13.899
propTypes.
&gt;&gt; Brian Holt: And what I'm

63
00:04:13.899 --> 00:04:19.751
gonna do up here is, I'm gonna say const.
&gt;&gt; Brian Holt: I

64
00:04:19.751 --> 00:04:23.360
think I'm gonna pull out array of,
let me make sure.

65
00:04:23.360 --> 00:04:27.140
Yep, I'm gonna pull out array of,
and I'm gonna pull out object.

66
00:04:31.410 --> 00:04:33.421
And then I'm gonna say that
equals react.proptypes.

67
00:04:41.906 --> 00:04:44.458
&gt;&gt; Brian Holt: And I'm gonna say shows is

68
00:04:44.458 --> 00:04:52.993
an array of object.
&gt;&gt; Brian Holt: That's

69
00:04:52.993 --> 00:04:58.713
another really nice feature of the create
class way of doing components,

70
00:04:58.713 --> 00:05:03.885
is your prop types just live
in the component themselves.

71
00:05:03.885 --> 00:05:05.635
That doesn't work for
stateless functional components and

72
00:05:05.635 --> 00:05:07.585
it also doesn't work for ES6 classes.

73
00:05:09.685 --> 00:05:12.772
We have to do that other methodology
of words underneath, right.

74
00:05:24.005 --> 00:05:24.970
&gt;&gt; Brian Holt: Great, so

75
00:05:24.970 --> 00:05:30.235
let's go make sure that we
didn't break what we just did.

76
00:05:30.235 --> 00:05:32.135
So come back over here and

77
00:05:32.135 --> 00:05:36.632
look at the search page.
&gt;&gt; Brian Holt: And

78
00:05:36.632 --> 00:05:40.477
everything looks, and yeah make sure
my linter is not yelling at me.

79
00:05:40.477 --> 00:05:44.441
Linter's not yelling and the still works
as we expect, so we've successfully

80
00:05:44.441 --> 00:05:51.167
refactored that.
&gt;&gt; Brian Holt: Questions

81
00:05:51.167 --> 00:05:57.427
about that?
&gt;&gt; Brian Holt: So

82
00:05:57.427 --> 00:06:00.332
most people feel refactoring okay?

83
00:06:00.332 --> 00:06:03.386
Okay cool, seeing mostly head nods,
only a couple middle fingers.

84
00:06:03.386 --> 00:06:05.088
&gt;&gt; Speaker 2: [LAUGH]

85
00:06:08.534 --> 00:06:09.237
&gt;&gt; Brian Holt: Okay so

86
00:06:09.237 --> 00:06:16.430
now it's really cool about this is
if we go back here to clientapp.jsx.

87
00:06:16.430 --> 00:06:19.940
Now we have, shows available here,

88
00:06:19.940 --> 00:06:23.886
so now we can actually use that to
pass information into details as well.

89
00:06:23.886 --> 00:06:29.092
So here's a design, [COUGH] excuse me,
not necessarily design,

90
00:06:29.092 --> 00:06:34.220
but an architecture question that
you need to answer yourself.

91
00:06:36.130 --> 00:06:41.490
We have details, or details path, it only
cares about one movie at a time right?

92
00:06:41.490 --> 00:06:44.620
It only cares about one show
that we're passing in it, and

93
00:06:44.620 --> 00:06:47.350
it doesn't care about any of
the other shows at any given time.

94
00:06:47.350 --> 00:06:51.890
So the question is,
how are we going to pass shows in from

95
00:06:51.890 --> 00:06:55.760
the router into the to the route?

96
00:06:55.760 --> 00:06:59.230
And there are several correct
answers to this question.

97
00:06:59.230 --> 00:07:02.460
You could pass all shows
into every detail call,

98
00:07:02.460 --> 00:07:07.260
and then have detail select itself, which
show that it wants to display, right.

99
00:07:07.260 --> 00:07:13.010
So you pass in the ID and
you'd also pass in all of the shows and

100
00:07:13.010 --> 00:07:17.420
have details make that decision,
that might be a correct use case for you.

101
00:07:17.420 --> 00:07:21.440
Maybe you need to show related movies and
you need a bunch of movies all at once,

102
00:07:21.440 --> 00:07:24.770
that's an acceptable decision.
&gt;&gt; Sneezing Student: [SOUND]

103
00:07:24.770 --> 00:07:25.780
&gt;&gt; Brian Holt: Bless you.

104
00:07:25.780 --> 00:07:30.780
Another way to do this is,
you could have a method

105
00:07:30.780 --> 00:07:35.620
here on the app, and you could have
the child's component say I have this ID,

106
00:07:35.620 --> 00:07:37.790
please give me back your correct movie.

107
00:07:37.790 --> 00:07:41.610
And then the parent components say
okay here's the correct movie you're

108
00:07:41.610 --> 00:07:42.630
looking for.

109
00:07:42.630 --> 00:07:45.970
So now the child only has to worry
about calling a function and

110
00:07:45.970 --> 00:07:50.220
not necessarily which movie it
necessarily has, also a valid decision.

111
00:07:52.500 --> 00:07:54.890
I'm gonna take a different route.

112
00:07:54.890 --> 00:07:56.780
But a question, yes.
&gt;&gt; Speaker 5: There's a couple even

113
00:07:56.780 --> 00:07:59.480
saying that there's an issue that
search page stopped working.

114
00:07:59.480 --> 00:08:02.650
It's just showing the index page.
&gt;&gt; Brian Holt: You

115
00:08:02.650 --> 00:08:04.005
might have, you broke it.

116
00:08:04.005 --> 00:08:04.560
[LAUGH]
&gt;&gt; Speaker 5: But

117
00:08:04.560 --> 00:08:10.460
I think you're going to wonder if you
have that you have the same problem?

118
00:08:10.460 --> 00:08:11.940
&gt;&gt; Brian Holt: Mine did work.

119
00:08:11.940 --> 00:08:13.080
No JK LOL.

120
00:08:16.390 --> 00:08:18.824
Can't filter undefined.
&gt;&gt; Speaker 5: Seem that they're saying

121
00:08:18.824 --> 00:08:26.488
that the shows not passed down correctly.
&gt;&gt; Brian Holt: Well,

122
00:08:26.488 --> 00:08:32.249
let's see how we're doing that.
&gt;&gt; Brian Holt: I know what is happening.

123
00:08:32.249 --> 00:08:34.832
It's not this.prop.shows,

124
00:08:34.832 --> 00:08:40.881
it's this.props.param.shows.
&gt;&gt; Brian Holt: That's

125
00:08:40.881 --> 00:08:46.484
the rub.
&gt;&gt; Brian Holt: Which

126
00:08:46.484 --> 00:08:48.810
means that your prop types
are now gonna blow up, right?

127
00:08:48.810 --> 00:08:53.690
It's gonna say hey, you have a bunch
of params, so you have to say params

128
00:08:53.690 --> 00:08:58.342
is actually an object now.
&gt;&gt; Speaker 6: Should propTypes on line

129
00:08:58.342 --> 00:09:03.118
11 be a function rather than a key?
&gt;&gt; Brian Holt: Nope,

130
00:09:03.118 --> 00:09:07.318
it should be an object So
now you have to get rid of this

131
00:09:07.318 --> 00:09:11.651
as well.
&gt;&gt; Brian Holt: Yep, my notes are wrong.

132
00:09:17.653 --> 00:09:19.187
&gt;&gt; Brian Holt: So I fixed all that,

133
00:09:19.187 --> 00:09:24.257
that hopefully should,
that's still broken, that's ungood.

134
00:09:29.114 --> 00:09:31.590
&gt;&gt; Brian Holt: Make sure I did that right,

135
00:09:31.590 --> 00:09:35.904
so it should be this.props.params.shows.

136
00:09:35.904 --> 00:09:45.303
No, it's route route.
&gt;&gt; Brian Holt: Okay,

137
00:09:45.303 --> 00:09:48.360
sorry had to go through all
the things in my head real quick.

138
00:09:48.360 --> 00:09:50.640
Okay, so now this needs to be route.

139
00:09:51.810 --> 00:09:57.810
Okay, A+, fixed, thank you.

140
00:09:57.810 --> 00:10:04.185
Debugging on the fly.
&gt;&gt; Brian Holt: So

141
00:10:04.185 --> 00:10:08.056
the way I figure this out is cuz I've,
one I've done this workshop before.

142
00:10:08.056 --> 00:10:11.640
[LAUGH]
and two,

143
00:10:11.640 --> 00:10:16.010
I'm familiar enough with react router or
apparently not quite familiar enough, but

144
00:10:16.010 --> 00:10:19.080
familiar enough to be able to figure out
eventually what I was supposed to do.

145
00:10:19.080 --> 00:10:23.150
The way I would look at it is I would
introspect the props getting passed down,

146
00:10:24.200 --> 00:10:26.580
usually by the react tools,
which we'll talk about here in a second.

147
00:10:26.580 --> 00:10:30.730
But you also could have done that
pre-code JSON stringify bit I showed you,

148
00:10:30.730 --> 00:10:33.200
and you can see where those
shows are actually living,

149
00:10:33.200 --> 00:10:34.400
and that's how I would have found the bug.

150
00:10:34.400 --> 00:10:38.930
I would definitely use react tools,
cuz it's 10 times easier and we're

151
00:10:38.930 --> 00:10:43.640
going to talk about it, it might even be
next, so buckle up and get really excited.

152
00:10:43.640 --> 00:10:48.002
That's all I really want to say, okay.
&gt;&gt; Students: [LAUGH]

153
00:10:48.002 --> 00:10:49.587
&gt;&gt; Brian Holt: Okay, disjointed.

154
00:10:49.587 --> 00:10:52.867
Let's go back to what we were
talking about originally.

155
00:10:52.867 --> 00:10:57.770
Thank you for pointing out my,
&gt;&gt; Brian Holt: Interesting choice

156
00:10:57.770 --> 00:10:58.474
in bugs, okay.

