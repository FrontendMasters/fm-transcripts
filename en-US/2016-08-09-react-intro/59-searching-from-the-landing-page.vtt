WEBVTT

1
00:00:00.000 --> 00:00:03.700
[MUSIC]

2
00:00:03.700 --> 00:00:06.400
&gt;&gt; Brian Holt: Okay.
Landing.JSX.

3
00:00:06.400 --> 00:00:08.950
So now we want to make this
input also search as well.

4
00:00:13.749 --> 00:00:17.006
&gt;&gt; Brian Holt: So this can no longer be a
status functional component unfortunately,

5
00:00:17.006 --> 00:00:18.970
cuz we have to be able
to have methods on it.

6
00:00:20.090 --> 00:00:24.670
So you can do a create class,
you can do Let's do an E6S class, so

7
00:00:24.670 --> 00:00:29.500
I can show you what
the binding looks like, yeah.

8
00:00:48.114 --> 00:00:51.030
&gt;&gt; Brian Holt: By the way, you would
not typically mix and match like this.

9
00:00:51.030 --> 00:00:54.969
You'd usually pick one and stick to it,
but I want to get a flavor for both.

10
00:00:56.070 --> 00:00:58.190
And you can make your own decisions
of what you like and what you don't.

11
00:01:01.926 --> 00:01:05.080
But I'm gonna show you the really
annoying part of the ES61,

12
00:01:05.080 --> 00:01:07.040
and why most people like not to use them.

13
00:01:21.726 --> 00:01:28.470
&gt;&gt; Brian Holt: Okay, so
I just converted this to an es6 class.

14
00:01:28.470 --> 00:01:29.290
Not much going there.

15
00:01:33.211 --> 00:01:37.322
&gt;&gt; Brian Holt: Okay now we need to plug
in this input to be able to accept events

16
00:01:37.322 --> 00:01:41.610
right because right now stuff
happening is just not listening.

17
00:01:43.140 --> 00:01:48.905
So we need to first let's
do the connector down here.

18
00:01:48.905 --> 00:01:55.669
Connector(Landing) then we also
need to go imported up here so,

19
00:01:55.669 --> 00:02:00.760
const { connector } = require(./Store).

20
00:02:01.960 --> 00:02:04.500
Okay, so now we're plugged into redux.

21
00:02:08.820 --> 00:02:12.490
&gt;&gt; Brian Holt: So,
let's actually start using this down here.

22
00:02:12.490 --> 00:02:18.014
So inputs can be
value={this.props.searchTerm} right,

23
00:02:18.014 --> 00:02:21.600
because we're getting that from redux.

24
00:02:22.840 --> 00:02:31.785
And onChange, this is going to
be {this.handleSearchTermEvent}.

25
00:02:39.564 --> 00:02:41.521
&gt;&gt; Brian Holt: Okay.
Now we need to have a handle search term

26
00:02:41.521 --> 00:02:42.588
event function, right.

27
00:02:42.588 --> 00:02:48.210
So we're going to say,
handleSearchTermEvent.

28
00:02:48.210 --> 00:02:49.950
Again, this is an ES6 class.

29
00:02:49.950 --> 00:02:59.036
No commas here
&gt;&gt; Brian Holt: And

30
00:02:59.036 --> 00:03:02.326
this takes an event by the way, (event).

31
00:03:02.326 --> 00:03:07.693
This.props.setSearch term.

32
00:03:07.693 --> 00:03:10.834
Bless you.

33
00:03:10.834 --> 00:03:13.097
(Event.target.value).

34
00:03:20.963 --> 00:03:21.921
&gt;&gt; Brian Holt: Bless you.

35
00:03:28.062 --> 00:03:30.041
&gt;&gt; Brian Holt: Okay.

36
00:03:32.700 --> 00:03:38.925
So, this would be enough in
react create class in terms of,

37
00:03:38.925 --> 00:03:42.897
yeah, that's also we need to do next.

38
00:03:42.897 --> 00:03:49.000
In terms of setting up this
handleSearchTermEvent.

39
00:03:49.000 --> 00:03:51.590
However, there's a problem
with ES6 classes,

40
00:03:51.590 --> 00:03:54.450
it doesn't do what's called
autobinding for you.

41
00:03:54.450 --> 00:03:58.460
So this right here is actually
going to be incorrect.

42
00:03:58.460 --> 00:04:00.100
This is going to refer to Window and

43
00:04:00.100 --> 00:04:03.800
it's not actually going to refer
to our React.Component and

44
00:04:03.800 --> 00:04:07.850
that's a problem because we're trying to
call the set search term off of property.

45
00:04:07.850 --> 00:04:10.280
So this is gonna error unless we fix it.

46
00:04:10.280 --> 00:04:14.230
And again, this is just automatically
fixed for you in reactor create class.

47
00:04:14.230 --> 00:04:17.000
It's not fixed for you in ES6 components.

48
00:04:18.390 --> 00:04:21.130
So You have to do this kinda messiness

49
00:04:21.130 --> 00:04:23.010
that you're gonna do
a constructor right here.

50
00:04:24.640 --> 00:04:26.090
That's gonna take him props.

51
00:04:27.370 --> 00:04:30.883
And the first thing you do with there
is you have to put super(props) right?

52
00:04:30.883 --> 00:04:32.090
And the reason for being for

53
00:04:32.090 --> 00:04:37.400
that is this right here has to be
pass up to here to React.Component.

54
00:04:37.400 --> 00:04:39.210
You have to be explicitly doing that.

55
00:04:39.210 --> 00:04:40.490
React also doesn't do that for you.

56
00:04:41.780 --> 00:04:45.080
So it's just boilerplate that you
just have to do every single time,

57
00:04:45.080 --> 00:04:46.580
you have to remember.

58
00:04:46.580 --> 00:04:48.120
If you don't do it,
react will yell at you, and

59
00:04:48.120 --> 00:04:52.170
say, you need to pass up props and
that's what it's talking about.

60
00:04:52.170 --> 00:04:53.621
Okay.
So now I have to say

61
00:04:53.621 --> 00:04:59.032
this.handleSearchTermEvent =
this.handleSearchTermEvent.bind this.

62
00:05:00.720 --> 00:05:03.410
For every method that I
create in this ES6 component,

63
00:05:03.410 --> 00:05:06.010
I have to have a line in
my constructor like this.

64
00:05:08.616 --> 00:05:10.074
&gt;&gt; Brian Holt: Does anyone find
that just incessantly annoying?

65
00:05:10.074 --> 00:05:12.616
&gt;&gt; Students: [LAUGH]
&gt;&gt; Brian Holt: I do.

66
00:05:15.765 --> 00:05:18.545
&gt;&gt; Brian Holt: But that's why I'm going to
say most people elect, not to use these,

67
00:05:18.545 --> 00:05:19.499
it's for this reason.

68
00:05:22.916 --> 00:05:23.680
&gt;&gt; Brian Holt: Make sense?

69
00:05:25.280 --> 00:05:25.780
Okay.

70
00:05:29.310 --> 00:05:33.750
So, awesome handleSearchTermEvent
now updates our state.

71
00:05:33.750 --> 00:05:36.480
But we have no way to submit
this to be able to actually

72
00:05:36.480 --> 00:05:37.750
go to the search page, right.

73
00:05:37.750 --> 00:05:40.730
Because you don't actually want to
just instantly go to the search page.

74
00:05:40.730 --> 00:05:43.141
You could that's actually kind
of an interesting idea, right.

75
00:05:43.141 --> 00:05:47.607
Since someone starts typing into the
Search bar that actually just pops up to

76
00:05:47.607 --> 00:05:48.990
the top.

77
00:05:48.990 --> 00:05:50.870
Haven't thought of that,
you could do that.

78
00:05:50.870 --> 00:05:51.370
We're not going to though.

79
00:05:51.370 --> 00:05:53.810
[LAUGH]
&gt;&gt; Students: [LAUGH]

80
00:05:53.810 --> 00:05:54.449
&gt;&gt; Brian Holt: I want to make it so

81
00:05:54.449 --> 00:05:57.230
when you hit Enter,
you go to the Search page, right.

82
00:05:57.230 --> 00:05:58.050
So let's see how you do that.

83
00:05:59.180 --> 00:06:02.560
The easiest way to do that and
the most I would say built for

84
00:06:02.560 --> 00:06:05.400
the Internet way is just to use a form,
right.

85
00:06:05.400 --> 00:06:07.493
So we're gonna say form.

86
00:06:07.493 --> 00:06:16.361
And onSubmit = {this.gotoSearch}.

87
00:06:23.381 --> 00:06:27.200
&gt;&gt; Brian Holt: All right,
just using an old school HTML form.

88
00:06:30.541 --> 00:06:34.036
&gt;&gt; Brian Holt: Nice thing about onSubmit,
is anything that would fire off a submit

89
00:06:34.036 --> 00:06:36.976
events, if they hit Enter or
if they hit a Submit button,

90
00:06:36.976 --> 00:06:40.000
all the stuff would normally
work in HTML form works here.

91
00:06:41.560 --> 00:06:43.720
So that's why I recommend.

92
00:06:43.720 --> 00:06:45.620
As I like to call it
drawing within the lines.

93
00:06:49.779 --> 00:06:52.900
&gt;&gt; Brian Holt: So,
now make a new method called gotoSearch.

94
00:06:56.060 --> 00:06:57.370
&gt;&gt; Brian Holt: This is gonna,
also gonna take an event.

95
00:06:59.583 --> 00:07:03.544
&gt;&gt; Brian Holt: And as you remember up
here you have to do this thing for

96
00:07:03.544 --> 00:07:08.500
everything gotoSearch =
this.gottoSearched.bin (this).

97
00:07:08.500 --> 00:07:10.410
Like I said it gets old real fast

98
00:07:11.610 --> 00:07:13.930
especially when you know if you do
the other syntax it's just free.

99
00:07:16.750 --> 00:07:20.124
&gt;&gt; Brian Holt: And the other thing is
we have to go grab hash history because

100
00:07:20.124 --> 00:07:21.279
we have to use that.

101
00:07:22.980 --> 00:07:27.159
Right? Right. Also to, no it's not there.

102
00:07:27.159 --> 00:07:28.488
Why didn't I put them in my notes?

103
00:07:28.488 --> 00:07:29.829
Good job Brian.

104
00:07:29.829 --> 00:07:34.764
Okay, so up here I want to say

105
00:07:34.764 --> 00:07:39.292
const {hashHistory} =

106
00:07:39.292 --> 00:07:45.927
require
&gt;&gt; Brian Holt: Yeah,

107
00:07:45.927 --> 00:07:49.717
that's the way I did,
require('react-router'), right?

108
00:07:49.717 --> 00:07:52.613
Cuz we're gonna be able to manipulate our
history here, which is what we wanna do.

109
00:07:55.697 --> 00:08:01.672
&gt;&gt; Brian Holt: And we're gonna say,
hashHistory.push('search').

110
00:08:06.431 --> 00:08:08.648
&gt;&gt; Brian Holt: The other
thing we need to do here,

111
00:08:08.648 --> 00:08:11.860
like this is literally going
to be a form submit and

112
00:08:11.860 --> 00:08:17.058
if you don't prevent default into the form
submit, it's actually gonna try and

113
00:08:17.058 --> 00:08:22.150
really submit an HTML form to itself so
you have to do event.preventDefault.

114
00:08:22.150 --> 00:08:24.960
This is going to actually prevent it
from trying to move to another page,

115
00:08:26.340 --> 00:08:28.200
as HTML forms are bound to do.

116
00:08:38.667 --> 00:08:42.031
&gt;&gt; Brian Holt: Questions?

117
00:08:42.031 --> 00:08:43.213
This should work now, I believe.

118
00:08:48.180 --> 00:08:51.297
&gt;&gt; Speaker 3: So you're navigating to
search in the state since it's not

119
00:08:51.297 --> 00:08:53.410
connected to a view model.

120
00:08:53.410 --> 00:08:56.020
It's going to stay from page to page?

121
00:08:56.020 --> 00:08:59.060
&gt;&gt; Brian Holt: Say that one more time.

122
00:08:59.060 --> 00:09:01.530
&gt;&gt; Speaker 3: So
you're not actually passing

123
00:09:01.530 --> 00:09:04.110
the state of the value of the field.

124
00:09:05.210 --> 00:09:06.950
&gt;&gt; Brian Holt: Nope.
&gt;&gt; Speaker 3: In Go to Search.

125
00:09:06.950 --> 00:09:09.140
&gt;&gt; Brian Holt: Right because it's coming,
it's going to stay in redux right.

126
00:09:09.140 --> 00:09:11.449
Redux is going to maintain
its state across pages.

127
00:09:15.697 --> 00:09:17.160
Yeah.
So let's go check for works.

128
00:09:17.160 --> 00:09:20.450
First let's make sure I
have any errors I do.

129
00:09:20.450 --> 00:09:24.700
So prop types, let's to do that too.

130
00:09:24.700 --> 00:09:31.464
And I have to do go down here to
do prop types so Landing.propTypes

131
00:09:31.464 --> 00:09:37.030
lowercase = object and
it's going to grab those as well.

132
00:09:38.340 --> 00:09:41.990
Const func and string.

133
00:09:41.990 --> 00:09:50.592
I need func and I need string
=React.PropTypes capitalized.

134
00:09:50.592 --> 00:09:57.614
And I'm gonna do searchTerm: string,

135
00:09:57.614 --> 00:10:03.815
and setSearchTerm: func, okay.

136
00:10:03.815 --> 00:10:08.953
Now if I save that,

137
00:10:08.953 --> 00:10:16.962
just this part down here.

138
00:10:16.962 --> 00:10:19.187
&gt;&gt; Brian Holt: Okay, now I'm not getting
any errors anymore so I should be okay.

139
00:10:19.187 --> 00:10:20.820
Let's go back over here.

140
00:10:20.820 --> 00:10:23.351
Let's go to some refresh,
go to the landing.

141
00:10:23.351 --> 00:10:29.526
Let's type, I don't know like dare over
here or something like that and hit Enter.

142
00:10:29.526 --> 00:10:31.890
And now I've searched
from the landing page.

143
00:10:36.430 --> 00:10:40.790
&gt;&gt; Speaker 4: Can you go over what's
happening with hashHistory.push?

144
00:10:40.790 --> 00:10:41.290
&gt;&gt; Brian Holt: Sure.

145
00:10:42.300 --> 00:10:46.490
Momentarily, I think I want to point
out did we never make that work?

146
00:10:49.720 --> 00:10:52.400
Did I just missed that?

147
00:10:52.400 --> 00:10:57.050
I did, okay,
I must have missed the whole section here.

148
00:10:57.050 --> 00:11:00.360
It supposed to be like click on
Daredevil to go to the details page and

149
00:11:00.360 --> 00:11:01.649
I guess we never just made that work.

150
00:11:02.710 --> 00:11:06.340
So let's finish questions and
then we'll just go to that.

151
00:11:06.340 --> 00:11:07.870
Cuz that's not really
an interesting thing to do.

152
00:11:07.870 --> 00:11:11.060
It's just to do, anyway.

153
00:11:12.470 --> 00:11:13.980
&gt;&gt; Speaker 4: Yeah.
I'm just gonna follow up to that

154
00:11:13.980 --> 00:11:14.500
hash history.

155
00:11:14.500 --> 00:11:15.360
The web ask key is,

156
00:11:15.360 --> 00:11:19.499
search the URL path that we're adding
to an array of all previous paths.

157
00:11:20.750 --> 00:11:25.020
&gt;&gt; Brian Holt: Yes, that's not the ideas
it's a stack of your history, right.

158
00:11:25.020 --> 00:11:30.565
So you keep pushing, it's, that's
also the name of the terminology for

159
00:11:30.565 --> 00:11:36.213
the HTML5 history API this say like,
.push that takes you to a new place.

160
00:11:36.213 --> 00:11:39.967
So, [COUGH] in this particular case you
can just think of it as like redirect,

161
00:11:39.967 --> 00:11:41.971
redirect me to the search page, right?

162
00:11:41.971 --> 00:11:43.083
Same idea.

163
00:11:43.083 --> 00:11:48.754
Yeah.

164
00:11:48.754 --> 00:11:51.506
I think it's the extent of the story.

165
00:11:51.506 --> 00:11:54.310
It's just redirect me to
the search page is all.

166
00:11:57.830 --> 00:12:00.400
&gt;&gt; Speaker 4: I mean, did you say that
this is not a normal form element?

167
00:12:03.270 --> 00:12:03.920
&gt;&gt; Brian Holt: It is, yeah.

168
00:12:03.920 --> 00:12:08.605
I mean if you like inspect element and,
inspect.

169
00:12:08.605 --> 00:12:12.376
See?

170
00:12:12.376 --> 00:12:14.052
It's normal form right there.

171
00:12:19.328 --> 00:12:20.421
&gt;&gt; Brian Holt: That works
just like a normal form.

