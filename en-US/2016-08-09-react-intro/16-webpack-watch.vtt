WEBVTT

1
00:00:00.000 --> 00:00:03.862
[MUSIC]

2
00:00:03.862 --> 00:00:06.016
&gt;&gt; Brian: Someone must have mentioned
that Webpack sucks to run right now.

3
00:00:06.016 --> 00:00:08.215
So let's make it suck slightly less.

4
00:00:08.215 --> 00:00:10.339
[LAUGH] So everyone go to,

5
00:00:10.339 --> 00:00:15.818
well we can actually do it direct
in the command line real quick.

6
00:00:15.818 --> 00:00:17.145
So we're here in our repo.

7
00:00:17.145 --> 00:00:22.380
We're gonna run webpack --watch.

8
00:00:22.380 --> 00:00:25.443
And remember, this is going to
pull in our Webpack config,

9
00:00:25.443 --> 00:00:27.907
that's why it knows what
it's supposed to do.

10
00:00:27.907 --> 00:00:30.930
[COUGH] That first run is going to
be just as slow as it always is.

11
00:00:33.180 --> 00:00:35.340
But now if I go change something,
I'm gonna change this to say,

12
00:00:35.340 --> 00:00:39.810
Browse All!?!?!?!?!?,
just adding something to change it.

13
00:00:39.810 --> 00:00:43.710
And now, if I save,
notice that rebuilt really fast, right?

14
00:00:43.710 --> 00:00:45.510
This took six seconds.

15
00:00:45.510 --> 00:00:48.307
This took 141 milliseconds.

16
00:00:48.307 --> 00:00:51.670
And the reason why is Webpack is smart
enough to say, all this stuff that I

17
00:00:51.670 --> 00:00:55.277
built, only this tiny chunk changed,
so I'm only gonna rebuild this part.

18
00:00:55.277 --> 00:00:59.330
And then, reintegrate it back into
the things I already built right?

19
00:00:59.330 --> 00:01:03.056
So for the most part,
react is the big part and

20
00:01:03.056 --> 00:01:05.300
all the babel polyfills
that's the big part.

21
00:01:05.300 --> 00:01:06.930
And just our app right now is tiny.

22
00:01:06.930 --> 00:01:09.880
So it's actually gonna be really
fast every time we do watch now.

23
00:01:11.170 --> 00:01:13.222
So now if we refresh,
notice that it's all there.

24
00:01:13.222 --> 00:01:17.327
And the nice part is now every time I
change something, I don't have to go back

25
00:01:17.327 --> 00:01:21.766
and say run build every single time, it
just automatically will change on the fly.

26
00:01:21.766 --> 00:01:25.199
The reason why this ends up being not so
nice, is when you have an error,

27
00:01:25.199 --> 00:01:27.959
it's nice to have Webpack yell
at you right in your face.

28
00:01:27.959 --> 00:01:32.840
And sometimes what'll happen is,
I'll change something and say this, right,

29
00:01:32.840 --> 00:01:36.450
I'll click save, this is broken, right?

30
00:01:36.450 --> 00:01:39.450
And if I was going over to my console,
you'll notice right in the front,

31
00:01:39.450 --> 00:01:44.220
it says, my god, you broke everything,
you're so stupid, right?

32
00:01:44.220 --> 00:01:48.707
But actually Webpack will give you pretty
nice, actually this is not very nice.

33
00:01:48.707 --> 00:01:54.920
[LAUGH] It'll try to give you a nice
error of, hey I broke here, right?

34
00:02:00.780 --> 00:02:06.930
And now if I go over here, you wouldn't
see the change propagated because

35
00:02:06.930 --> 00:02:10.120
it won't rebuild unless it can actually
fully rebuild what you're looking at.

36
00:02:11.620 --> 00:02:16.643
So that's why it's important to make sure

37
00:02:16.643 --> 00:02:22.233
you're checking your console every so
often.

38
00:02:22.233 --> 00:02:23.492
So now we wanna actually, go ahead.

39
00:02:23.492 --> 00:02:27.639
&gt;&gt; Speaker 2: There was a question about
is there a way to get auto completing

40
00:02:27.639 --> 00:02:29.331
on your tags in sublime?

41
00:02:29.331 --> 00:02:32.110
&gt;&gt; Brian: Auto complete
in the sense of like?

42
00:02:32.110 --> 00:02:35.237
&gt;&gt; Speaker 2: If you open a div.

43
00:02:35.237 --> 00:02:42.113
&gt;&gt; Brian: So like if &lt;div&gt;,
in sublime I'm hitting alt, option.

44
00:02:42.113 --> 00:02:46.862
Alt or Option Command period will

45
00:02:46.862 --> 00:02:51.276
close whatever tag you are on.

46
00:02:51.276 --> 00:02:54.628
And it's actually smart enough to say,
it knows I'm on an H1 right now.

47
00:02:54.628 --> 00:02:58.741
So it'll close H1 first then the div.

48
00:02:58.741 --> 00:03:00.652
And if I try to do it now,
nothing's open so I'm nothing's open so

49
00:03:00.652 --> 00:03:01.320
it won't close that.

50
00:03:01.320 --> 00:03:03.200
I mean that's just an HTML trick and

51
00:03:03.200 --> 00:03:06.160
I think most editors have
some version of that.

52
00:03:06.160 --> 00:03:07.688
&gt;&gt; Speaker 3: That's the same in ATOM.

53
00:03:07.688 --> 00:03:11.580
&gt;&gt; Brian: Yeah, I think they took
out a lot of the sublime bindings.

54
00:03:11.580 --> 00:03:14.672
So now if you want to get extra advance,

55
00:03:14.672 --> 00:03:20.014
I always hesitate because people ask
me how I did this and it took me so

56
00:03:20.014 --> 00:03:25.441
long to configure it correctly,
and I don't remember how I did it.

57
00:03:25.441 --> 00:03:30.510
But just anyone here use Emmet for
H.T.M.L. it's amazing so

58
00:03:30.510 --> 00:03:35.110
you just say div.myclass right and
then you can a tab and

59
00:03:35.110 --> 00:03:38.290
just auto complete into a [INAUDIBLE].

60
00:03:38.290 --> 00:03:41.723
&gt;&gt; Speaker 4: Actually just sent a link
into chat with instructions on how to

61
00:03:41.723 --> 00:03:42.720
enable that JSX.

62
00:03:44.000 --> 00:03:45.940
&gt;&gt; Brian: Wait hold on
is that my question?

63
00:03:48.931 --> 00:03:52.175
&gt;&gt; Brian: Look who asked
the question this guy, hoo.

64
00:03:52.175 --> 00:03:57.931
[LAUGH] That's the only question
I've ever asked on Stack Overflow.

65
00:03:57.931 --> 00:04:00.760
[LAUGH] That's really funny.

66
00:04:00.760 --> 00:04:01.986
&gt;&gt; Speaker 4: I didn't even see that part.

67
00:04:04.437 --> 00:04:06.070
&gt;&gt; Brian: Yeah, so you can do it.

68
00:04:06.070 --> 00:04:08.090
It's a pain in the butt to configure, so

69
00:04:08.090 --> 00:04:10.090
that's why I always hesitate
to show people that.

70
00:04:10.090 --> 00:04:11.536
But it is pretty cool,

71
00:04:11.536 --> 00:04:16.803
you can say If you just do period my-class
it infers that you meant to div, right?

72
00:04:16.803 --> 00:04:22.170
Or you can do my-class my-id, right?

73
00:04:22.170 --> 00:04:25.137
It will actually do class name, ID.

74
00:04:25.137 --> 00:04:26.520
It's pretty neat.

75
00:04:26.520 --> 00:04:27.560
I'd recommend it.
I think

76
00:04:27.560 --> 00:04:30.430
it's a emmet.io if you
want to check it out.

77
00:04:30.430 --> 00:04:35.070
It's built for every editor out there.

78
00:04:35.070 --> 00:04:38.140
So put that on the to do list.

79
00:04:38.140 --> 00:04:42.470
I didn't want to spend too much time on
it because it's a pain to set up for JSX.

80
00:04:42.470 --> 00:04:45.942
It works out of the box for html, it's
just for JSX in particular it's a pain.

81
00:04:48.759 --> 00:04:49.920
&gt;&gt; Brian: Okay.

82
00:04:49.920 --> 00:04:50.835
Any questions about that?

83
00:04:56.130 --> 00:05:00.163
&gt;&gt; Brian: Cool, again,
I'm gonna generally avoid using Emmet,

84
00:05:00.163 --> 00:05:04.376
just cuz I want people to
actually see what I'm typing out.

85
00:05:04.376 --> 00:05:07.351
But you're welcome to use it if
you can get it to work correctly.

86
00:05:07.351 --> 00:05:10.865
All right, so we're gonna put into
our package.json the watch so

87
00:05:10.865 --> 00:05:13.389
we don't have to remember
what the command is.

88
00:05:15.080 --> 00:05:20.245
And we can just do as you might
imagine webpack -- watch.

89
00:05:20.245 --> 00:05:20.998
Pretty simple.

90
00:05:26.989 --> 00:05:30.080
&gt;&gt; Brian: That makes me so happy that
you found my question on stack overflow.

91
00:05:32.280 --> 00:05:35.027
&gt;&gt; Speaker 4: It was the first or
second result.

92
00:05:35.027 --> 00:05:37.455
&gt;&gt; Speaker 2: That's 7,500 views.

93
00:05:37.455 --> 00:05:40.055
&gt;&gt; Brian: Yeah because I was definitely
not the first person to question.

94
00:05:45.118 --> 00:05:46.819
&gt;&gt; Brian: Yeah, how funny.

95
00:05:46.819 --> 00:05:48.990
Okay.

96
00:05:48.990 --> 00:05:53.500
So now instead of doing npm run, sorry.

97
00:05:53.500 --> 00:05:58.588
Instead of doing webpack --watch,
we can just do npm run watch.

98
00:06:03.035 --> 00:06:05.710
&gt;&gt; Brian: It'll run webpack for us.

99
00:06:08.840 --> 00:06:12.749
For those of you that are not
super familiar with command-line

100
00:06:12.749 --> 00:06:17.113
this is gonna run indefinitely in
you console until you hit Control C.

101
00:06:17.113 --> 00:06:21.661
And that's how you stop it from
running in case anyone was

102
00:06:21.661 --> 00:06:24.920
unaware of that feature of the console.

103
00:06:24.920 --> 00:06:29.397
&gt;&gt; Speaker 2: Somebody is asking if there
is a syntax for comments and J.S. X.

104
00:06:29.397 --> 00:06:34.537
&gt;&gt; Brian: There is so
as you might have noticed.

105
00:06:34.537 --> 00:06:36.310
Let's come back here and close that.

106
00:06:37.630 --> 00:06:42.945
This isn't gonna work and
this doesn't work either.

107
00:06:48.205 --> 00:06:51.699
&gt;&gt; Brian: That's kind of a pain, so
the way you do it Is you do this, with

108
00:06:51.699 --> 00:06:56.421
the curly braces,which is the expression
we talked about and then you can do this.

109
00:07:02.196 --> 00:07:03.915
&gt;&gt; Brian: And
that's the way you do it currently.

110
00:07:03.915 --> 00:07:06.116
As far as I know,
there's not another good way to do it.

111
00:07:09.419 --> 00:07:13.746
&gt;&gt; Brian: It's annoying but

112
00:07:13.746 --> 00:07:17.536
it is what it is.

113
00:07:17.536 --> 00:07:22.825
Other questions?

114
00:07:22.825 --> 00:07:24.129
Okay.

115
00:07:24.129 --> 00:07:28.722
&gt;&gt; Speaker 2: Sorry, one is just
coming in, do you recommend setting up

116
00:07:28.722 --> 00:07:33.337
JS source maps early in the process for
easier debugging?

117
00:07:33.337 --> 00:07:38.454
&gt;&gt; Brian: I mean the answer is, we're not
going to have sources maps at all today

118
00:07:38.454 --> 00:07:43.390
and the reason being for
that is it's just another thing to set up.

119
00:07:43.390 --> 00:07:46.497
[LAUGH] It's just more tooling that
we don't necessarily need right now.

120
00:07:46.497 --> 00:07:50.474
What source maps are gonna tell you is
that instead of telling you had an error

121
00:07:50.474 --> 00:07:54.092
here in bundle .gs,
It's gonna be line 50000 of bundle .JS.

122
00:07:54.092 --> 00:08:00.590
It's gonna say you have an error
on line ten of, my title.JSX.

123
00:08:00.590 --> 00:08:04.031
And that's a nice feature you can
also do a feel like your sass and

124
00:08:04.031 --> 00:08:07.093
anything like that now that
browsers speak source map and

125
00:08:07.093 --> 00:08:10.242
you're welcome to do that
we're just not gonna do today.

126
00:08:15.645 --> 00:08:19.931
&gt;&gt; Brian: Okay, any other questions about

127
00:08:19.931 --> 00:08:24.347
before we move on or Webpack watch, okay.

128
00:08:24.347 --> 00:08:27.910
&gt;&gt; Speaker 2: Will comments in some curly
braces get rendered to the browsers?

129
00:08:27.910 --> 00:08:30.629
&gt;&gt; Brian: No and
there's not as far as I know.

130
00:08:32.050 --> 00:08:35.660
It's not a good way to do to operate
browser comments right now with JSX.

131
00:08:37.840 --> 00:08:38.760
Not that I'm aware of anyway.

132
00:08:40.700 --> 00:08:43.420
But you can Google that I'm sure someone
else had that problem if they really

133
00:08:43.420 --> 00:08:45.060
needed one and figured it out.

