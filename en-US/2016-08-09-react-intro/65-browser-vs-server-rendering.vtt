WEBVTT

1
00:00:00.000 --> 00:00:03.880
[MUSIC]

2
00:00:03.880 --> 00:00:07.273
&gt;&gt; Brian Holt: Now we've got our app
into a good state that we can get it to

3
00:00:07.273 --> 00:00:09.060
universally render nicely.

4
00:00:10.570 --> 00:00:14.200
What we need to do now is fix
client app just a tiny bit.

5
00:00:15.380 --> 00:00:21.000
Reason being is that document
doesn't exist on the server, right?

6
00:00:21.000 --> 00:00:22.690
So if you tried to run this
right now on the server,

7
00:00:22.690 --> 00:00:24.560
it's gonna say what the hell's document.

8
00:00:24.560 --> 00:00:25.060
Right.

9
00:00:26.240 --> 00:00:30.090
So what we have to do is we
have to split out our app and

10
00:00:30.090 --> 00:00:31.690
actually what renders the app, right?

11
00:00:31.690 --> 00:00:36.380
So right now we've mashed two concerns
together, which is creating our app and

12
00:00:36.380 --> 00:00:38.860
our router and our provider and
all that kind of stuff.

13
00:00:38.860 --> 00:00:44.590
So, we have that and we also have
actually putting it on the DOM.

14
00:00:44.590 --> 00:00:48.490
So we need to split those two concerns so
that the app could be rendered on

15
00:00:48.490 --> 00:00:53.820
the server and then you can send down the
renderer for the DOM only on the browser.

16
00:00:53.820 --> 00:00:56.200
So basically,
we only want this part to work on the DOM.

17
00:00:57.320 --> 00:00:58.130
So that's what weâ€™re gonna do right now.

18
00:00:58.130 --> 00:01:03.502
Create a new file called
Browser Entry.jsx and

19
00:01:03.502 --> 00:01:07.670
this is gonna be a really short file.

20
00:01:07.670 --> 00:01:10.415
I'm gonna say

21
00:01:10.415 --> 00:01:18.197
const React=require(â€˜reactâ€™),

22
00:01:18.197 --> 00:01:25.063
const ReactDOM=require-dom and

23
00:01:25.063 --> 00:01:32.396
const App = require./ClientApp.

24
00:01:32.396 --> 00:01:39.849
And then ReactDOM.render&lt;App&gt; and

25
00:01:39.849 --> 00:01:49.680
documents.getElementById (app), okay?

26
00:01:49.680 --> 00:01:52.210
That's it.
That's all we need to do in browser entry.

27
00:01:52.210 --> 00:01:54.700
So we've just externalized this
concern that we were worried about.

28
00:01:56.830 --> 00:01:58.321
And now we just have to go
fix client app to get it.

29
00:02:05.363 --> 00:02:07.410
&gt;&gt; Brian Holt: So go back to current app,

30
00:02:07.410 --> 00:02:11.131
get rid of the line down here,
this ReactDOM and

31
00:02:11.131 --> 00:02:15.060
replace it with module.exports = App,
right?

32
00:02:15.060 --> 00:02:16.761
Cuz now this is no longer
the entry to the R app,

33
00:02:16.761 --> 00:02:23.703
this is just another export.
&gt;&gt; Brian Holt: So let's save that.

34
00:02:23.703 --> 00:02:27.441
We also have to go fix
our web pack config, so

35
00:02:27.441 --> 00:02:31.040
go to web pack config and come in here to.

36
00:02:31.040 --> 00:02:33.040
This isn't gonna be client app anymore.

37
00:02:33.040 --> 00:02:35.260
That's no longer the entry to our program.

38
00:02:35.260 --> 00:02:36.550
It's gonna be browser entry.

39
00:02:38.700 --> 00:02:45.930
So save that, and you can actually go
test to make sure everything still works.

40
00:02:45.930 --> 00:02:46.750
I didn't get rid of that.

41
00:02:46.750 --> 00:02:53.270
So, go back to a client app.jsx and
get rid of ReactDom up here as well.

42
00:02:56.350 --> 00:02:59.068
Right, cuz it's no longer being used here,

43
00:02:59.068 --> 00:03:02.079
it's being used in browser
entry as it should be.

44
00:03:02.079 --> 00:03:03.009
So I'll save that,

45
00:03:03.009 --> 00:03:08.770
looks like we're bundling okay again.
&gt;&gt; Brian Holt: And

46
00:03:08.770 --> 00:03:11.749
refresh, just to make sure everything's
still working as we expect.

47
00:03:11.749 --> 00:03:13.969
It's not, that's cool.

48
00:03:13.969 --> 00:03:16.749
Am I still running my server?

49
00:03:16.749 --> 00:03:17.429
I am.

50
00:03:26.737 --> 00:03:27.969
&gt;&gt; Brian Holt: You know what it is?

51
00:03:27.969 --> 00:03:30.870
Stop and start your webpack again.

52
00:03:31.900 --> 00:03:34.973
Cuz we changed our webpack config, and it
no longer knew which file was the entry.

53
00:03:42.947 --> 00:03:45.887
&gt;&gt; Brian Holt: Okay, so our app should

54
00:03:45.887 --> 00:03:50.671
still work.
&gt;&gt; Brian Holt: Let's cut

55
00:03:50.671 --> 00:03:51.941
a branch really quick.

56
00:03:51.941 --> 00:03:54.521
So, anyone have questions
while I'm cutting a branch?

57
00:04:21.005 --> 00:04:22.045
&gt;&gt; Brian Holt: Awesome.

58
00:04:22.045 --> 00:04:23.267
&gt;&gt; Speaker 2: One question was why did

59
00:04:23.267 --> 00:04:25.720
we separate out the browser
entry from the app?

60
00:04:26.990 --> 00:04:28.478
&gt;&gt; Brian Holt: It'll be apparent

61
00:04:28.478 --> 00:04:33.035
in just a second, but
the basic gist is that we can't refer

62
00:04:33.035 --> 00:04:36.480
to document at all in
the node environment.

63
00:04:36.480 --> 00:04:39.870
So we're about to write
a note server that's going to

64
00:04:39.870 --> 00:04:41.630
bring in ClientApp and render it.

65
00:04:41.630 --> 00:04:44.282
And if we talk about document
at all in the node environment,

66
00:04:44.282 --> 00:04:45.585
it crashes the whole server.

67
00:04:45.585 --> 00:04:48.365
That's the basic idea.

68
00:04:48.365 --> 00:04:53.676
So we have to separate what is our app
from what is rendering our app to the DOM,

69
00:04:53.676 --> 00:04:56.670
cuz this code is only run in the DOM.

70
00:04:56.670 --> 00:04:59.700
So anything you only want done
in the DOM goes into this file.

71
00:04:59.700 --> 00:05:02.898
When I say in the DOM, I mean in
the browser, after it's been sent down to

72
00:05:02.898 --> 00:05:08.624
the client.
&gt;&gt; Brian Holt: Okay, any more?

73
00:05:16.404 --> 00:05:17.239
&gt;&gt; Brian Holt: Okay,

74
00:05:17.239 --> 00:05:21.004
we're gonna do one more thing.

75
00:05:21.004 --> 00:05:25.895
Go to clientapp.jsx,
we're filing the switch

76
00:05:25.895 --> 00:05:29.840
from hash history to browser history.

77
00:05:31.900 --> 00:05:36.510
Because we're gonna be moving
to using react for our router.

78
00:05:36.510 --> 00:05:37.990
We actually have to use
a browser history or

79
00:05:37.990 --> 00:05:39.820
it's not gonna work
the way we anticipate it.

80
00:05:41.350 --> 00:05:45.160
So we have browser history here and
then here on router,

81
00:05:45.160 --> 00:05:46.911
we're also gonna pass in browser history.

82
00:05:49.410 --> 00:05:51.476
Go and save that.
Now your apps actually, well,

83
00:05:51.476 --> 00:05:54.236
it actually might still work
on the initial page load.

84
00:05:54.236 --> 00:06:01.650
We're at the shop, refresh, browser.

85
00:06:01.650 --> 00:06:04.809
So, now it looks like it says search and
Orange is the New Black and

86
00:06:04.809 --> 00:06:05.620
all that stuff.

87
00:06:05.620 --> 00:06:08.830
So it actually looks much
nicer in our URL bar.

88
00:06:08.830 --> 00:06:11.610
But if I'm on details and I refresh,
it's probably gonna break.

89
00:06:11.610 --> 00:06:13.060
It does break.

90
00:06:13.060 --> 00:06:16.180
Reason being is our HTTP server
doesn't know how to handle that.

91
00:06:16.180 --> 00:06:18.580
It has no concept of routing.

92
00:06:18.580 --> 00:06:23.254
So we actually have to go make our own
node server that is aware of the routing.

93
00:06:23.254 --> 00:06:26.330
So this'll only work on the homepage,
and it'll work everything after that.

94
00:06:26.330 --> 00:06:27.274
But as soon as you refresh the page,

95
00:06:27.274 --> 00:06:31.697
it breaks.
&gt;&gt; Brian Holt: Okay,

96
00:06:31.697 --> 00:06:39.177
I updated webpack config.
&gt;&gt; Brian Holt: We

97
00:06:39.177 --> 00:06:41.116
have to also externalize our routes.

98
00:06:41.116 --> 00:06:42.316
Yep, that's one thing we have to do.

99
00:06:42.316 --> 00:06:47.141
So go back to ClientApp.jsx.
&gt;&gt; Brian Holt: So

100
00:06:47.141 --> 00:06:51.450
we basically need to move these routes out
into their own thing because we have to be

101
00:06:51.450 --> 00:06:54.324
able to pass our routes
individually into our router so

102
00:06:54.324 --> 00:06:56.705
that it knows how to do
routing on the server.

103
00:06:56.705 --> 00:07:02.395
So do const myRoutes = (props),

104
00:07:02.395 --> 00:07:06.569
basically gonna make them

105
00:07:06.569 --> 00:07:12.457
a stateless functional component.

106
00:07:21.379 --> 00:07:25.857
&gt;&gt; Brian Holt: Okay, so cut all that and

107
00:07:25.857 --> 00:07:29.489
just put it up here.

108
00:07:29.489 --> 00:07:34.988
Okay, and then here,
we're just going to put those, so

109
00:07:34.988 --> 00:07:44.303
we're gonna say myRoutes.
&gt;&gt; Brian Holt: Right,

110
00:07:44.303 --> 00:07:45.910
nothing too fancy here.

111
00:07:45.910 --> 00:07:49.670
We just made our myRoutes up here and
then we're just instantiating right there.

112
00:07:50.670 --> 00:07:52.266
This isn't really a real react component.

113
00:07:52.266 --> 00:07:56.208
It's just a function that
returns a set of routes.

114
00:07:56.208 --> 00:07:58.428
So just an FYI,
that's what's happening here.

115
00:07:58.428 --> 00:08:02.428
Okay, and now we need to export that, so

116
00:08:02.428 --> 00:08:07.018
we're gonna say, App.Routes = myRoutes,

117
00:08:07.018 --> 00:08:13.154
because now we need to be able to
import this into node as well.

118
00:08:13.154 --> 00:08:16.353
So basically all the stuff that we're
doing, we're making our app a little bit

119
00:08:16.353 --> 00:08:19.134
more ugly but we're kind of getting
it ready to render on the server.

120
00:08:28.551 --> 00:08:29.079
&gt;&gt; Brian Holt: And actually we

121
00:08:29.079 --> 00:08:31.798
don't use props anywhere here so you can
just actually omit that if you want to,

122
00:08:31.798 --> 00:08:32.541
it doesn't matter.

123
00:08:39.781 --> 00:08:42.535
&gt;&gt; Speaker 3: Is app.routes pre-defined or

124
00:08:42.535 --> 00:08:47.613
are we defining that here [INAUDIBLE]?
&gt;&gt; Brian Holt: Say that one more time.

125
00:08:47.613 --> 00:08:48.543
&gt;&gt; Speaker 3: On line 30,

126
00:08:48.543 --> 00:08:52.883
when we were defining app.routes,
are we defining that, just,

127
00:08:52.883 --> 00:08:55.793
it could be made anything?
&gt;&gt; Brian Holt: It could be named anything.

128
00:08:55.793 --> 00:08:57.593
Yeah, as long as you're
aware of what's called.

129
00:08:57.593 --> 00:09:01.067
I just because we don't need this on enter
here, I don't know why it's still there.

130
00:09:01.067 --> 00:09:01.987
Do we?

131
00:09:01.987 --> 00:09:02.761
We don't.

132
00:09:02.761 --> 00:09:03.640
It's not even a thing anymore.

133
00:09:11.819 --> 00:09:12.952
&gt;&gt; Brian Holt: Okay, so

134
00:09:12.952 --> 00:09:15.650
move to index.html.

135
00:09:18.180 --> 00:09:20.890
Sorry, this is a lot of work for
an eventual big payoff, right?

136
00:09:20.890 --> 00:09:22.110
There's no intermediary steps.

137
00:09:22.110 --> 00:09:24.170
It's either not running on the server or
it is.

138
00:09:24.170 --> 00:09:25.040
And there's no in between.

139
00:09:27.170 --> 00:09:27.680
Okay.

140
00:09:27.680 --> 00:09:33.470
So, we're gonna use underscore templating
cuz it's just really fast and really easy.

141
00:09:33.470 --> 00:09:39.370
So, if you've never seen this before,
this just based, nope, I got that wrong.

142
00:09:39.370 --> 00:09:41.470
It's not equals, it's percent.

143
00:09:41.470 --> 00:09:44.130
This is an underscore templating tag.

144
00:09:46.090 --> 00:09:47.310
There's a million ways you can do this.

145
00:09:47.310 --> 00:09:50.566
I simply choose to do it this way
because I find it very easy to do.

146
00:09:50.566 --> 00:09:54.256
So eventually,
we're gonna render a string of our app and

147
00:09:54.256 --> 00:09:57.958
we're just gonna dumbly
template it into there, right?

148
00:09:57.958 --> 00:10:03.575
So this indexation now has gone from
being like a real HTML document

149
00:10:03.575 --> 00:10:08.720
to now it's actually just
a template that we're gonna use.

150
00:10:08.720 --> 00:10:13.510
So anyway, what I mean to say is all
of our react code is about to be just

151
00:10:13.510 --> 00:10:14.240
blurbed in there.

