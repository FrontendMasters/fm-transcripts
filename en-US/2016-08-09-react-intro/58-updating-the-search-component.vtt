WEBVTT

1
00:00:00.000 --> 00:00:03.967
[MUSIC]

2
00:00:03.967 --> 00:00:06.109
&gt;&gt; Brian Holt: Most of you seeing
like typing and it works okay but

3
00:00:06.109 --> 00:00:07.760
nothing's happening.

4
00:00:07.760 --> 00:00:08.320
Okay.

5
00:00:08.320 --> 00:00:11.430
So let's go close the loop and
make it actually work again.

6
00:00:14.450 --> 00:00:17.771
So, let's go over to search.JSX.

7
00:00:17.771 --> 00:00:21.390
This is going to be really fun because
we get to delete a bunch of stuff.

8
00:00:21.390 --> 00:00:23.490
My favorite pastime is deleting code.

9
00:00:23.490 --> 00:00:25.000
It's just so cathartic.

10
00:00:27.130 --> 00:00:30.032
Especially when it's not my code and
I get to delete my coworker's code.

11
00:00:30.032 --> 00:00:33.640
Okay, I probably sound like
the worst jerk in the world.

12
00:00:33.640 --> 00:00:35.190
I'm pretty close.

13
00:00:35.190 --> 00:00:36.340
Okay.

14
00:00:36.340 --> 00:00:43.600
const connector = store.

15
00:00:43.600 --> 00:00:48.812
Sorry, requires store rather slash store.

16
00:00:48.812 --> 00:00:50.300
Okay.

17
00:00:50.300 --> 00:00:53.730
Delete get initial state because we're not
going to keep track of any state in here.

18
00:00:57.280 --> 00:01:00.899
Delete the HandleSearchTerm event,
we don't we didn't have that, that's okay.

19
00:01:07.802 --> 00:01:09.018
&gt;&gt; Brian Holt: No,
yeah get rid of this too,

20
00:01:09.018 --> 00:01:11.698
get rid of this method,
handleSearchTermChange because we're

21
00:01:11.698 --> 00:01:13.710
not going to be modifying
our own state anymore.

22
00:01:15.140 --> 00:01:16.398
Is that how we want to do it though?

23
00:01:24.268 --> 00:01:27.020
&gt;&gt; Brian Holt: All right,
it's headers handling all that data.

24
00:01:27.020 --> 00:01:32.630
So, we don't actually need it,
so, delete that,

25
00:01:32.630 --> 00:01:37.220
get rid of this handleSearchTermChange.

26
00:01:40.920 --> 00:01:42.770
You get a search term,
cuz it no longer knows.

27
00:01:42.770 --> 00:01:45.660
And you're just going to give it
show search, which you put back

28
00:01:45.660 --> 00:01:48.290
the one online because that's
ridiculous to have that on two lines.

29
00:01:54.010 --> 00:02:02.336
Okay, now we're going to change
filter to only look for search Term.

30
00:02:07.035 --> 00:02:09.650
&gt;&gt; Brian Holt: This is going
to be props instead of state.

31
00:02:14.950 --> 00:02:18.230
And this also needs to
be a prop type up here.

32
00:02:18.230 --> 00:02:24.614
So search term colon string which
also have to bring that in as well,

33
00:02:24.614 --> 00:02:28.422
so up here you can pull in string as well.

34
00:02:28.422 --> 00:02:30.306
I think we already have
the connector at the bottom.

35
00:02:30.306 --> 00:02:33.036
Nope, we didn't have, so
we have to do connector here as well.

36
00:02:39.672 --> 00:02:41.463
&gt;&gt; Brian Holt: Okay, so
make sure you do connector there.

37
00:02:41.463 --> 00:02:43.351
I'll scroll up so
you can see the rest of it.

38
00:02:51.205 --> 00:02:55.537
&gt;&gt; Brian Holt: Okay, so if you wanted to,
you can actually factor this again to

39
00:02:55.537 --> 00:02:58.920
be a stateless function
component which is nice.

40
00:02:58.920 --> 00:03:05.360
I'm not going to, but you one should,
cuz it no longer cares about state and so.

41
00:03:05.360 --> 00:03:08.550
Again, limiting your surface areas for
bugs is always a good idea.

42
00:03:13.610 --> 00:03:16.980
After this, I'm gonna go ahead and
push a branch.

43
00:03:16.980 --> 00:03:19.070
So, if you're broken,
I'm going to push a branch.

44
00:03:21.560 --> 00:03:22.060
Bless you.

45
00:03:25.600 --> 00:03:27.480
But now, search should work again.

46
00:03:29.222 --> 00:03:31.960
So, I'm gonna go make sure
that that's the case, so

47
00:03:31.960 --> 00:03:33.810
I'm not having you type broken code.

48
00:03:34.850 --> 00:03:35.890
Everything's compiling okay.

49
00:03:37.270 --> 00:03:38.680
So let's come back over here.

50
00:03:38.680 --> 00:03:43.150
Refresh and type in the here and
say like Kimmie and

51
00:03:43.150 --> 00:03:47.726
now we're working again but
this is all using Redux

52
00:03:47.726 --> 00:03:52.527
be the scene that we're no
longer using React state.

53
00:03:52.527 --> 00:03:54.748
So, give me a second to
push up a new branch.

54
00:04:04.663 --> 00:04:09.330
&gt;&gt; Brian Holt: checkout -b fem-21.

55
00:04:09.330 --> 00:04:14.383
git commit-m FEM step 21.

56
00:04:14.383 --> 00:04:18.005
git push origin FEM 21.

57
00:04:21.622 --> 00:04:25.029
&gt;&gt; Speaker 2: There's a question on if
we made a stateless component prop tapes

58
00:04:25.029 --> 00:04:28.260
would have to be defined
outside of it correct.

59
00:04:28.260 --> 00:04:33.580
&gt;&gt; Brian Holt: Yep same way we did
the ES6 class ones you would say like

60
00:04:33.580 --> 00:04:41.250
connector search.proptypes
equals the object up here.

61
00:04:41.250 --> 00:04:41.750
This one.

62
00:04:43.060 --> 00:04:44.672
Yeah that's exactly how you do it.

63
00:04:50.885 --> 00:04:52.030
&gt;&gt; Brian Holt: Is it working for
most people?

64
00:04:54.510 --> 00:04:55.690
So what do you think, Redux, yea or nay?

65
00:04:57.630 --> 00:04:58.400
Pretty cool so far.

66
00:04:58.400 --> 00:04:59.930
It's about to get a ton more compelling.

67
00:05:01.520 --> 00:05:04.970
Once I show you how to debug redux,
you just want to put it in everything.

68
00:05:08.689 --> 00:05:11.473
&gt;&gt; Brian Holt: But we've externalized a
lot of the concerns about marshalling data

69
00:05:11.473 --> 00:05:12.913
which is why we were able to delete so

70
00:05:12.913 --> 00:05:15.660
much code to make this back to be
a stateless functional component.

71
00:05:16.710 --> 00:05:21.062
To be totally honest, if you're willing
to keep all of your view state in redux,

72
00:05:21.062 --> 00:05:25.094
your entire React app can just be
stateless functional components which is

73
00:05:25.094 --> 00:05:25.865
pretty cool.

74
00:05:25.865 --> 00:05:29.030
Now, that's pretty close to true.

75
00:05:29.030 --> 00:05:30.730
Sometimes you need the life
cycle methods but,

76
00:05:30.730 --> 00:05:32.710
we'll talk about those
later in the course.

77
00:05:33.990 --> 00:05:37.401
But beyond that, for the most part,

78
00:05:37.401 --> 00:05:41.814
technique is still as
functional components.

79
00:05:41.814 --> 00:05:45.182
&gt;&gt; Speaker 3: What's your opinion on,
so like in this case,

80
00:05:45.182 --> 00:05:48.740
we're putting the search
into the global store.

81
00:05:48.740 --> 00:05:53.470
But, do you think if there might be
something like say you have a form.

82
00:05:53.470 --> 00:05:57.300
Would you still do that because
of the gains you get by

83
00:05:57.300 --> 00:05:59.120
following this the Redux pattern.

84
00:05:59.120 --> 00:06:02.920
Or does it make more sense to,
for performance reasons,

85
00:06:02.920 --> 00:06:05.250
save it locally to the component.

86
00:06:05.250 --> 00:06:08.068
And then when you submit it, push it.

87
00:06:08.068 --> 00:06:10.100
&gt;&gt; Brian Holt: I would never do it for
performance reasons.

88
00:06:11.940 --> 00:06:14.468
React is really fast
about updating its state.

89
00:06:14.468 --> 00:06:16.970
And it actually does batching that
Redux is not going to do for you.

90
00:06:19.030 --> 00:06:21.175
Now the question for
you is where does it make sense for

91
00:06:21.175 --> 00:06:22.328
you to have your view state?

92
00:06:22.328 --> 00:06:26.192
Because app state which is ideas like for
example, we have shows which is app state

93
00:06:26.192 --> 00:06:30.224
right that's something that comes from the
server and it's something I'm gonna use

94
00:06:30.224 --> 00:06:34.634
multiple places absent also be like your
user information, well that kind of stuff.

95
00:06:34.634 --> 00:06:37.830
View state is gonna give you something
more like what I have in the form

96
00:06:37.830 --> 00:06:41.680
of what I have in might this input
is this checkbox checks, right?

97
00:06:43.360 --> 00:06:45.890
I'm personally of the opinion
that I keep all of my view state

98
00:06:45.890 --> 00:06:47.970
in React because that just
makes sense to me, right?

99
00:06:47.970 --> 00:06:53.220
Like React is my view Library, I should
use it to keep track of view state.

100
00:06:54.390 --> 00:06:59.300
People disagree with me and
they keep every state 100% goes into redux

101
00:07:00.380 --> 00:07:02.090
and that's up to you but I'm right.

102
00:07:02.090 --> 00:07:03.376
So listen to me.

103
00:07:03.376 --> 00:07:05.860
[LAUGH] So, does that make sense?

104
00:07:05.860 --> 00:07:06.365
&gt;&gt; Speaker 3: Yeah.

105
00:07:06.365 --> 00:07:10.459
&gt;&gt; Brian Holt: Yeah it's another trade
off and decision you need to make for

106
00:07:10.459 --> 00:07:11.268
yourself.

107
00:07:11.268 --> 00:07:13.445
&gt;&gt; Speaker 4: Can you scroll up a bit?

108
00:07:13.445 --> 00:07:14.291
Yeah, thanks.

109
00:07:14.291 --> 00:07:18.149
&gt;&gt; Speaker 2: A couple people in here
saying that the search button isn't

110
00:07:18.149 --> 00:07:21.480
working in the last push,
through the browse all.

111
00:07:24.990 --> 00:07:26.250
&gt;&gt; Brian Holt: Does for me.

112
00:07:26.250 --> 00:07:29.710
Now this doesn't work yet
because we haven't fixed that yet.

113
00:07:29.710 --> 00:07:30.470
We're about to fix it.

114
00:07:32.280 --> 00:07:34.430
Is that what people are referring to?

115
00:07:34.430 --> 00:07:35.000
&gt;&gt; Speaker 2: I'd see.

116
00:07:39.400 --> 00:07:40.480
&gt;&gt; Brian Holt: And
this seems to work okay.

117
00:07:43.290 --> 00:07:46.020
Yeah, we haven't plugged in landing yet,

118
00:07:46.020 --> 00:07:48.140
which is the next step that we're
going to do here momentarily.

