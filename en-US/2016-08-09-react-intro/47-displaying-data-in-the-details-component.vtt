WEBVTT

1
00:00:00.000 --> 00:00:04.157
[MUSIC]

2
00:00:04.157 --> 00:00:05.844
&gt;&gt; Brian: Now I think we can go ahead and

3
00:00:05.844 --> 00:00:09.655
go make our details page actually
do something nice and pretty.

4
00:00:14.472 --> 00:00:18.630
&gt;&gt; Brian: So, get rid of all
this crap that we have in here.

5
00:00:26.419 --> 00:00:28.719
&gt;&gt; Brian: Okay, so we have the container,
inside of the container,

6
00:00:28.719 --> 00:00:29.831
we're gonna have a header.

7
00:00:33.212 --> 00:00:34.396
&gt;&gt; Brian: That's gonna be a header.

8
00:00:37.724 --> 00:00:38.237
&gt;&gt; Speaker 2: Couple of questions.

9
00:00:38.237 --> 00:00:40.004
Can you push a branch at this point and

10
00:00:40.004 --> 00:00:41.020
then-
&gt;&gt; Brian: Yeah, I forgot.

11
00:00:41.020 --> 00:00:41.690
&gt;&gt; Speaker 2: Following up there,

12
00:00:41.690 --> 00:00:45.780
so they're saying,
props is created by the router itself.

13
00:00:45.780 --> 00:00:46.280
Is that true?

14
00:00:47.700 --> 00:00:49.950
&gt;&gt; Brian: A certain amount
of them definitely, right?

15
00:00:49.950 --> 00:00:52.598
The ID, maybe the ID.

16
00:00:52.598 --> 00:00:55.563
The better way to say is many of them
are being created by the router.

17
00:00:55.563 --> 00:01:01.968
However, notice that that show that we're
passing down, that's being created by us.

18
00:01:01.968 --> 00:01:03.077
That's being attached by us.

19
00:01:03.077 --> 00:01:05.181
So it's a mix of both.

20
00:01:05.181 --> 00:01:07.825
[SOUND] Bless you.

21
00:01:07.825 --> 00:01:12.258
It's just right, so
let's go back to what I had before.

22
00:01:12.258 --> 00:01:18.346
Okay, let's,
&gt;&gt; Brian: That's push branch here.

23
00:01:22.746 --> 00:01:23.882
&gt;&gt; Brian: Get out of here.

24
00:01:27.242 --> 00:01:31.386
&gt;&gt; Brian: Git checkout -b fem-17.

25
00:01:34.348 --> 00:01:39.353
&gt;&gt; Brian: Git commit -m "FEM step 17".

26
00:01:39.353 --> 00:01:42.994
Git push origin fem-17.

27
00:01:45.716 --> 00:01:48.911
&gt;&gt; Brian: All right, there we go.

28
00:01:48.911 --> 00:01:51.707
So I just pushed FEM-17 for
anyone that needs it.

29
00:01:54.292 --> 00:01:56.389
&gt;&gt; Brian: Let's go work on details now.

30
00:02:04.812 --> 00:02:12.249
&gt;&gt; Brian: branding,
&gt;&gt; Brian: svideo.

31
00:02:12.249 --> 00:02:15.026
So that's our nice little
header that we'll have on here.

32
00:02:18.018 --> 00:02:22.010
&gt;&gt; Brian: And
here we're gonna have video-info,

33
00:02:28.443 --> 00:02:33.506
&gt;&gt; Brian: h1 className = 'video-title'.

34
00:02:40.510 --> 00:02:41.525
&gt;&gt; Brian: Is that how I did this?

35
00:02:41.525 --> 00:02:49.003
Okay so,
&gt;&gt; Brian: Let's do that real quick,

36
00:02:49.003 --> 00:02:53.670
so,
&gt;&gt; Brian: On the off

37
00:02:53.670 --> 00:02:57.919
chance [COUGH] I'm one that I wanna
make my program as resilient as possible

38
00:02:57.919 --> 00:03:00.150
once it's being shown to users.

39
00:03:00.150 --> 00:03:04.090
I would rather have a really
bad looking new UI how than

40
00:03:04.090 --> 00:03:06.410
rather just errors out crashes.

41
00:03:06.410 --> 00:03:08.670
So there's some things you
can do to guard against that.

42
00:03:08.670 --> 00:03:13.948
One of them as you can
say like const params =

43
00:03:13.948 --> 00:03:19.260
this.props.params or a blank object.

44
00:03:19.260 --> 00:03:22.538
This is gonna prevent
you from at least like,

45
00:03:22.538 --> 00:03:27.729
now if I refer to params.thing,
right, params.whatever, right?

46
00:03:27.729 --> 00:03:32.449
It's not gonna error, it's just
gonna be undefined, so eventually

47
00:03:32.449 --> 00:03:37.649
you'll end up showing to them is a blank
UI rather than just nothing, right?

48
00:03:37.649 --> 00:03:43.859
But another fun thing I can do here
now is I can say const { title,

49
00:03:43.859 --> 00:03:48.394
description,
&gt;&gt; Brian: year,

50
00:03:48.394 --> 00:03:52.502
poster and trailer} = params.

51
00:03:52.502 --> 00:03:56.186
And so now I can just refer
to those individually,

52
00:03:56.186 --> 00:03:59.700
saying params.title params.description,

53
00:03:59.700 --> 00:04:04.017
params.year is down here in title,
I can just say title.

54
00:04:04.017 --> 00:04:08.986
I find that a little bit more expressive,
but this is just personal opinions of

55
00:04:08.986 --> 00:04:13.604
how I choose to write UIs, you don't
have to necessarily do it this way.

56
00:04:17.631 --> 00:04:20.997
&gt;&gt; Speaker 2: You can also do
the triple ellipses params, right, and

57
00:04:20.997 --> 00:04:23.369
then it would just unpack everything.

58
00:04:23.369 --> 00:04:27.608
&gt;&gt; [INAUDIBLE]
&gt;&gt; Speaker 2: Yeah, this is better.

59
00:04:27.608 --> 00:04:29.840
&gt;&gt; Brian: I don't think it's gonna
work in this particular case.

60
00:04:31.190 --> 00:04:31.890
Like this?

61
00:04:34.060 --> 00:04:39.750
So object spread doesn't actually
exist in ES 6, only array spread.

62
00:04:39.750 --> 00:04:45.546
There's a spec out for it but
as well that's very future facing.

63
00:04:45.546 --> 00:04:47.808
I think it'll land,
it seem to have some steam behind it,

64
00:04:47.808 --> 00:04:51.557
but,
&gt;&gt; Brian: Not a thing yet, unfortunately.

65
00:04:56.404 --> 00:04:57.748
&gt;&gt; Brian: But I like where your head's at.

66
00:04:57.748 --> 00:05:03.258
I like thinking of new and
interesting ways to solve problems.

67
00:05:03.258 --> 00:05:06.391
So again, I'm gonna put parentheses
around this because I wanna literally see

68
00:05:06.391 --> 00:05:07.008
parenthesis.

69
00:05:13.826 --> 00:05:21.530
&gt;&gt; Brian: Okay, and here I wanna do
an img className = 'video-poster' and

70
00:05:21.530 --> 00:05:26.682
src = and
we're gonna do our brackets here.

71
00:05:26.682 --> 00:05:28.862
And we're gonna use our es6
template strings again.

72
00:05:32.864 --> 00:05:42.864
&gt;&gt; Brian: public/img/posters/${poster}.

73
00:05:50.590 --> 00:05:54.490
&gt;&gt; Brian: And then we're here,
we're gonna do another paragraph,

74
00:05:54.490 --> 00:06:01.106
className = 'video-description'
&gt;&gt; Brian: Here

75
00:06:01.106 --> 00:06:03.762
we wanna say description and close that.

76
00:06:06.571 --> 00:06:07.940
&gt;&gt; Brian: So
that's kind of all of our information.

77
00:06:07.940 --> 00:06:10.733
And then here comes, in my opinion,
kind of the fun part,

78
00:06:10.733 --> 00:06:13.930
is we're gonna throw up the YouTube
video as well for the trailer.

79
00:06:18.368 --> 00:06:20.224
&gt;&gt; Brian: Video-container.

80
00:06:26.178 --> 00:06:31.040
&gt;&gt; Brian: And here we'll use an iframe,
cuz I tell you to tend so,

81
00:06:31.040 --> 00:06:33.011
I wanna be displayed.

82
00:06:33.011 --> 00:06:36.028
I wanna say, fortunately,
this is a bunch of stuff to type and

83
00:06:36.028 --> 00:06:37.722
there's really no way around it.

84
00:06:40.288 --> 00:06:48.488
&gt;&gt; Brian:
Https://www.youtube-nocookie.com/embed/${-

85
00:06:48.488 --> 00:06:55.798
trailer}, this

86
00:06:55.798 --> 00:07:01.438
is actually like the correct

87
00:07:01.438 --> 00:07:06.609
trailer we wanna look at.

88
00:07:06.609 --> 00:07:12.744
Then you have to say after that, ?rel=0,

89
00:07:15.061 --> 00:07:25.061
&gt;&gt; Brian: &amp;amp;controls=0&amp;amp;showinfo=o.

90
00:07:36.675 --> 00:07:39.299
&gt;&gt; Brian: Again, that's just how
YouTube wants its URLs to look.

91
00:07:40.595 --> 00:07:43.983
&gt;&gt; Speaker 2: They're asking why that's
just trailer rather than params.trailer.

92
00:07:43.983 --> 00:07:47.478
&gt;&gt; Brian: Cuz we pulled it out up here.

93
00:07:47.478 --> 00:07:51.236
Same thing we did here for
description, year, title.

94
00:07:51.236 --> 00:07:54.582
You totally can say params.trailer.

95
00:07:54.582 --> 00:07:56.270
I just did it this way.

96
00:08:00.964 --> 00:08:05.610
&gt;&gt; Brian: frameBorder='0' and

97
00:08:05.610 --> 00:08:08.780
allowFullscreen

98
00:08:18.844 --> 00:08:20.385
&gt;&gt; Brian: And the pi frame.

99
00:08:28.200 --> 00:08:31.230
&gt;&gt; Brian: Okay,
I didn't quite get the URL,

100
00:08:31.230 --> 00:08:36.796
I'll push up the branch after this
cuz it's so annoying to type.

101
00:08:36.796 --> 00:08:40.544
But let's go ahead and
take a look and see if we worked.

102
00:08:44.053 --> 00:08:45.976
&gt;&gt; Brian: Okay, nothing's yelling at us.

103
00:08:45.976 --> 00:08:46.910
Let's refresh the page.

104
00:08:49.150 --> 00:08:50.520
And now we have it.

105
00:08:50.520 --> 00:08:51.600
That looks kinda weird.

106
00:08:51.600 --> 00:08:52.381
We'll have to fix that.

107
00:08:55.078 --> 00:08:56.491
&gt;&gt; Brian: But
now we have a nice looking UI,

108
00:08:56.491 --> 00:08:58.623
let's figure out what's
wrong with the header.

109
00:09:03.448 --> 00:09:04.572
&gt;&gt; Brian: What'd I do wrong here?

110
00:09:06.999 --> 00:09:10.723
&gt;&gt; Brian: Container header
equals className = 'header',

111
00:09:10.723 --> 00:09:15.310
[INAUDIBLE] className = 'branding',
brand, sorry.

112
00:09:15.310 --> 00:09:15.810
That's what.

113
00:09:17.520 --> 00:09:20.700
Okay, refresh.

114
00:09:20.700 --> 00:09:21.200
There we go.

115
00:09:25.562 --> 00:09:27.181
&gt;&gt; Brian: I think that's pretty cool,
right?

116
00:09:30.238 --> 00:09:33.098
&gt;&gt; Brian: And it's really cool
that we were able to get such a,

117
00:09:33.098 --> 00:09:36.153
I mean I think it's a somewhat
interesting looking UI,

118
00:09:36.153 --> 00:09:42.853
that's about it
&gt;&gt; Speaker 3: What

119
00:09:42.853 --> 00:09:45.002
did you modify to fix that
issue with the header?

120
00:09:45.002 --> 00:09:47.473
&gt;&gt; Brian: It was brand
instead of branding.

121
00:09:54.934 --> 00:09:55.460
&gt;&gt; Brian: Yeah?

122
00:09:55.460 --> 00:09:56.871
&gt;&gt; Speaker 4: Can you scroll
down just a smidge so

123
00:09:56.871 --> 00:09:58.824
you can see all the YouTube
got exciting stuff?

124
00:09:58.824 --> 00:09:59.843
&gt;&gt; Brian: Yeah.

125
00:09:59.843 --> 00:10:00.343
&gt;&gt; Speaker 4: [LAUGH]

