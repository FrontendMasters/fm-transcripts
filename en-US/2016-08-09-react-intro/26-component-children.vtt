WEBVTT

1
00:00:00.000 --> 00:00:03.757
[MUSIC]

2
00:00:03.757 --> 00:00:07.141
&gt;&gt; Brian Holt: Notice that we don't
have this nice pretty background on

3
00:00:07.141 --> 00:00:11.874
our route here, but if we go back to this
one, it has a nice background, right?

4
00:00:11.874 --> 00:00:17.154
It would be really nice if we could share
those background between the two without

5
00:00:17.154 --> 00:00:21.910
having to basically have to hard
coded into every single route, right?

6
00:00:21.910 --> 00:00:25.902
It would be nice if we could have some
sort of shared layout between the two.

7
00:00:25.902 --> 00:00:30.026
Now, it's really just an encircling div so
that in our case right now,

8
00:00:30.026 --> 00:00:31.800
it's not very compelling.

9
00:00:31.800 --> 00:00:34.850
I'd rather just hard code the div
than to introduce the complexity.

10
00:00:34.850 --> 00:00:37.610
But you could maybe see where this
could be useful in the future.

11
00:00:37.610 --> 00:00:41.286
If you had a nav that was shared between
all of your different routes and

12
00:00:41.286 --> 00:00:45.274
you wouldn't want to have include that
literally every single time that you

13
00:00:45.274 --> 00:00:46.227
wanted to use it.

14
00:00:46.227 --> 00:00:48.815
It would be nice if it was on
every page so that you could

15
00:00:48.815 --> 00:00:52.510
just make one wrapping route that then
encircles the lower routes, right?

16
00:00:52.510 --> 00:00:53.829
That's the basic idea of
what we're gonna do here.

17
00:00:56.360 --> 00:00:59.206
So let's go ahead and do that.

18
00:00:59.206 --> 00:01:03.004
So let's create a new file
in here called Layout.jsx.

19
00:01:05.412 --> 00:01:07.565
&gt;&gt; Brian Holt: You're gonna
put it into the JS folder.

20
00:01:11.482 --> 00:01:16.747
&gt;&gt; Brian Holt: You're gonna pull in react
&gt;&gt; Brian Holt: And

21
00:01:16.747 --> 00:01:19.502
this is gonna be a really
simple component.

22
00:01:22.701 --> 00:01:28.502
&gt;&gt; Brian Holt: const Layout
= (props) not porps.

23
00:01:34.409 --> 00:01:40.474
&gt;&gt; Brian Holt: Gets me div
className =app-container.

24
00:01:45.638 --> 00:01:47.683
&gt;&gt; Brian Holt: Okay?

25
00:01:47.683 --> 00:01:52.350
Now we have to be able to tell our
component where to stick the inner stuff,

26
00:01:52.350 --> 00:01:52.888
right?

27
00:01:52.888 --> 00:01:56.959
Because we could have a bunch of stuff up
here like, we could have, you can ignore,

28
00:01:56.959 --> 00:01:59.320
this is just an example but like.

29
00:01:59.320 --> 00:02:01.760
My branding right here, like you can
have a bunch of stuff in here, right?

30
00:02:01.760 --> 00:02:05.399
You want to be able to have that
flexibility, so here we're gonna say

31
00:02:05.399 --> 00:02:09.130
props.children and children it's
actually a special kind of prop.

32
00:02:10.680 --> 00:02:14.930
In other words never name a custom
property that you're passing down children

33
00:02:14.930 --> 00:02:17.720
because that's reserved for
this one particular thing.

34
00:02:17.720 --> 00:02:20.900
As far as I know that's the only
reserved one, no, there's context,

35
00:02:20.900 --> 00:02:22.460
don't use context either.

36
00:02:22.460 --> 00:02:25.460
Well, no, you can use context.

37
00:02:25.460 --> 00:02:27.530
It might be a little strange but
don't use it anyway.

38
00:02:29.840 --> 00:02:32.510
There's no problem necessarily with it,
anyway don't use children.

39
00:02:32.510 --> 00:02:34.723
That's where they wanna get at.

40
00:02:34.723 --> 00:02:36.824
So props.children, okay.

41
00:02:36.824 --> 00:02:40.304
You can get rid of that h1 right
there because we don't want it.

42
00:02:40.304 --> 00:02:48.323
Okay, and
then do module.exports = Layout, okay?

43
00:02:48.323 --> 00:02:51.843
Pretty simple, only nine lines of code,
two of which are blank.

44
00:02:54.743 --> 00:02:59.316
&gt;&gt; Brian Holt: So let's go actually
see how one uses children.

45
00:02:59.316 --> 00:03:03.367
Actually, I'll just demonstrate to you,
just kind of off to the side here.

46
00:03:03.367 --> 00:03:06.546
So MyCustomComponent,

47
00:03:12.297 --> 00:03:15.317
&gt;&gt; Brian Holt: This is not a div, right?

48
00:03:15.317 --> 00:03:17.718
But if I put stuff inside of here, right?

49
00:03:21.198 --> 00:03:21.790
&gt;&gt; Brian Holt: Right,

50
00:03:21.790 --> 00:03:27.206
I can now access whatever is between
my test component as children, right?

51
00:03:27.206 --> 00:03:31.820
So whatever you put inside of it,
that's the children, right?

52
00:03:31.820 --> 00:03:34.080
So anything that goes in there is that.

53
00:03:34.080 --> 00:03:37.660
We're are also gonna need prop types in
here, it's gonna yell at us, just FYI.

54
00:03:40.200 --> 00:03:42.270
Might not be yelling at,
in fact I'm not running it.

55
00:03:42.270 --> 00:03:43.826
So let me start running it.

56
00:03:47.718 --> 00:03:49.098
&gt;&gt; Brian Holt: Okay.

57
00:03:52.354 --> 00:03:53.636
&gt;&gt; Brian Holt: Nope, wrong one.

58
00:03:57.643 --> 00:03:58.893
&gt;&gt; Brian Holt: Am I in the wrong one?

59
00:03:58.893 --> 00:03:59.876
That's why, it is running.

60
00:03:59.876 --> 00:04:01.299
Okay, nevermind.

61
00:04:04.417 --> 00:04:07.533
&gt;&gt; Brian Holt: Okay, so any questions
about, necessarily what children does?

62
00:04:07.533 --> 00:04:13.067
It's just, it allows you to get
at those past in components.

63
00:04:13.067 --> 00:04:18.758
And here we're gonna say const Element,

64
00:04:18.758 --> 00:04:21.689
I think is what it is.

65
00:04:21.689 --> 00:04:26.747
Let me double check my prop types
here on the, react prop types.

66
00:04:30.515 --> 00:04:31.704
&gt;&gt; Brian Holt: I believe it's element.

67
00:04:31.704 --> 00:04:33.800
Yeah, element is what
we're looking here for.

68
00:04:35.490 --> 00:04:37.750
So, a react element,
that's what we're looking for.

69
00:04:40.350 --> 00:04:42.715
Right, a react element right there.

70
00:04:42.715 --> 00:04:49.088
So, I want to say { element
} = React.PropTypes.

71
00:04:50.905 --> 00:04:57.293
&gt;&gt; Brian Holt: And
then we're gonna say, Layout.PropTypes.

72
00:04:57.293 --> 00:05:03.218
And again make sure this is a capital P,
this is a lowercase P..

73
00:05:03.218 --> 00:05:07.619
I mean it makes sense in terms
of this is an instance of it,

74
00:05:07.619 --> 00:05:10.116
these are the classes, right?

75
00:05:10.116 --> 00:05:15.026
I get that, it's just annoying,
it's whatever.

76
00:05:15.026 --> 00:05:17.640
Unfortunately, you people have to
listen to me complain about react.

77
00:05:18.640 --> 00:05:22.660
Children equals element, right?

78
00:05:25.150 --> 00:05:26.640
&gt;&gt; Speaker 2: Is required.

79
00:05:26.640 --> 00:05:30.633
&gt;&gt; Brian Holt: You can make
it required if you want to.

80
00:05:30.633 --> 00:05:35.104
I mean, could you conceivably ever
have your layout without the children.

81
00:05:35.104 --> 00:05:40.861
Probably not, but that one works for you.

82
00:05:40.861 --> 00:05:42.973
And the other thing is,
if you don't see in each other and

83
00:05:42.973 --> 00:05:45.190
you're gonna know really
quick that it's not working.

84
00:05:45.190 --> 00:05:46.370
So, either way.

