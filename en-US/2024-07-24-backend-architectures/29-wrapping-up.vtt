WEBVTT

1
00:00:00.070 --> 00:00:00.884
&gt;&gt; Speaker 1: What blogs or

2
00:00:00.884 --> 00:00:05.399
resources do you tend to rely on to
help grow in your own understanding and

3
00:00:05.399 --> 00:00:10.517
be exposed to new ideas and developing
backend architectures for your use cases?

4
00:00:10.517 --> 00:00:14.188
&gt;&gt; Erik: So for me I've been around
the bush a little while now, so

5
00:00:14.188 --> 00:00:18.318
that I have a good understanding
of a lot of the simple designs and

6
00:00:18.318 --> 00:00:20.866
principles that we've talked about.

7
00:00:20.866 --> 00:00:25.071
But when I really like to be challenged,
I look for people who are bigger than me

8
00:00:25.071 --> 00:00:28.597
places that I see and I'm like,
wow, how are they doing that?

9
00:00:28.597 --> 00:00:30.868
Like, how are they doing this?

10
00:00:30.868 --> 00:00:34.792
Again, a couple of the stuff that I
included in this presentation and

11
00:00:34.792 --> 00:00:38.390
in this course were things like
the Netflix engineering blog.

12
00:00:38.390 --> 00:00:40.815
The Amazon documentation,

13
00:00:40.815 --> 00:00:46.379
trying to find resources from
reputable sources that you trust.

14
00:00:46.379 --> 00:00:48.657
To be honest,
there's a lot of people on the internet,

15
00:00:48.657 --> 00:00:51.759
a lot of people on Twitter who are making
and voicing their own opinions, but

16
00:00:51.759 --> 00:00:54.596
that doesn't mean they actually
know what they're talking about.

17
00:00:54.596 --> 00:00:57.362
And so it's really about
finding people that you trust,

18
00:00:57.362 --> 00:01:00.485
that you believe in things that
it's kind of like a mentorship.

19
00:01:00.485 --> 00:01:05.193
You wanna find people that are doing what
you wanna do and then learn from them.

20
00:01:05.193 --> 00:01:07.960
And that can even be people on Twitter,
like myself or

21
00:01:07.960 --> 00:01:11.720
other content creators that are already
in the industry and doing that.

22
00:01:11.720 --> 00:01:16.559
But just be careful, I think you wanna
find the content that relates to you

23
00:01:16.559 --> 00:01:22.042
the most and then lean into that and until
you're ready to move on to the next thing.

24
00:01:22.042 --> 00:01:26.365
But for me, it's a lot of also
experimentation, I'll find something

25
00:01:26.365 --> 00:01:30.626
that somebody is doing and I'll be like,
I'm gonna try that myself.

26
00:01:30.626 --> 00:01:34.865
And a lot of the learning I do today is
really through my own process of just

27
00:01:34.865 --> 00:01:38.287
trying something that I'm
seeing somebody else will do.

28
00:01:38.287 --> 00:01:43.990
For example, I decided to make
Quirk V2 entirely serverless.

29
00:01:43.990 --> 00:01:48.049
That was a choice I made because
I wanted to challenge myself and

30
00:01:48.049 --> 00:01:52.811
learn as much as I could about this
brand new technology that's growing.

31
00:01:52.811 --> 00:01:55.780
Did I have to make Quirk V2 serverless?

32
00:01:55.780 --> 00:02:00.929
No, I didn't at all, as a matter of
fact [L.AUGH] here, I'll show you,

33
00:02:00.929 --> 00:02:06.179
this is Quirk V2 once it loads, so
you wanna talk about complicated systems.

34
00:02:06.179 --> 00:02:11.517
That's Quirk V2 system and believe it or
not, it's actually a multitude of API

35
00:02:11.517 --> 00:02:17.342
gateways that all intercommunicate with
each other, some internal, some external.

36
00:02:17.342 --> 00:02:21.559
And this is a really good
learning exercise for me, right?

37
00:02:21.559 --> 00:02:24.399
We have public API gateways
that use lambdas here,

38
00:02:24.399 --> 00:02:26.189
let me zoom in a little bit here.

39
00:02:26.189 --> 00:02:29.904
So we have our public API gateway
which is all of our events API,

40
00:02:29.904 --> 00:02:33.427
how we process all of our events
coming from third parties.

41
00:02:33.427 --> 00:02:35.636
We then have our portal API gateway,

42
00:02:35.636 --> 00:02:40.069
which is all of our API lambdas that
process everything for the front end.

43
00:02:40.069 --> 00:02:45.040
But then we needed to have other API
gateways that serve these, right?

44
00:02:45.040 --> 00:02:46.758
Like the events API and

45
00:02:46.758 --> 00:02:51.475
the portal API need to access
AI features and functionality.

46
00:02:51.475 --> 00:02:55.844
And so we built a serverless API
gateway internally for that and

47
00:02:55.844 --> 00:03:01.038
that makes it so that it feels like a
normal HTTP server at the end of the day,

48
00:03:01.038 --> 00:03:04.924
but it's really serverless,
powered by serverless.

49
00:03:04.924 --> 00:03:09.208
And then, again, going back to the discord
bot and YouTube, we still have

50
00:03:09.208 --> 00:03:13.368
the requirement of things like servers and
microservices and whatnot.

51
00:03:13.368 --> 00:03:19.295
And so we couple in a ECS and so
we've got a little ECS cluster over here.

52
00:03:19.295 --> 00:03:23.466
And so yeah, like I really do try and
challenge myself as much as I

53
00:03:23.466 --> 00:03:27.345
possibly can,
we've got our persistence tier down here.

54
00:03:27.345 --> 00:03:31.223
But the main point of why I'm showing
you this is is that even though

55
00:03:31.223 --> 00:03:33.369
this design itself is kind of crazy,

56
00:03:33.369 --> 00:03:37.753
it's logically separated into solving
the problems that we wanna solve.

57
00:03:37.753 --> 00:03:41.698
That will never change, so
I really encourage you guys to go out and

58
00:03:41.698 --> 00:03:44.310
experiment and try these things yourself.

59
00:03:44.310 --> 00:03:48.763
Don't take it just my word for
truth, go and try it yourself and

60
00:03:48.763 --> 00:03:52.302
that's really how I do
a lot of my learning today.

61
00:03:52.302 --> 00:03:55.764
Well, first off, thank you guys for
sticking through this, I appreciate it.

62
00:03:55.764 --> 00:03:59.275
I hope it was informative and
hopefully empowers you and

63
00:03:59.275 --> 00:04:03.319
inspires you to go build these
type of architectures yourself.

64
00:04:03.319 --> 00:04:06.653
Remember, there's an importance
that I wanna mention, and

65
00:04:06.653 --> 00:04:10.577
the first one is systematic planning,
planning is important, right?

66
00:04:10.577 --> 00:04:14.246
Effective architecture design is
foundational to project success,

67
00:04:14.246 --> 00:04:16.802
emphasize the necessity
of thorough planning.

68
00:04:16.802 --> 00:04:19.620
And understanding of both
stakeholder needs and

69
00:04:19.620 --> 00:04:23.821
technological capabilities before
initiating development, right?

70
00:04:23.821 --> 00:04:28.118
Technology does not out beat the company
business, they work together,

71
00:04:28.118 --> 00:04:32.430
that's what again has made these
companies hugely successful, right?

72
00:04:32.430 --> 00:04:35.180
This ensures alignment with
business objectives and

73
00:04:35.180 --> 00:04:38.856
user requirements, optimizing both
functionality and efficiency.

74
00:04:38.856 --> 00:04:42.416
The next one, flexibility and
scaling are key, right?

75
00:04:42.416 --> 00:04:46.912
In the ever-evolving landscape of
technology and business, designing

76
00:04:46.912 --> 00:04:51.853
architecture with flexibility and
scalability at its core is crucial, right?

77
00:04:51.853 --> 00:04:54.623
Now, we might not be talking about,
hey, right off the box,

78
00:04:54.623 --> 00:04:57.300
I wanna support a million customers or
a million requests.

79
00:04:57.300 --> 00:05:00.744
But what we are saying is consider
the adaption of what your

80
00:05:00.744 --> 00:05:02.653
company's growth is gonna be.

81
00:05:02.653 --> 00:05:06.624
If you think a year from now, you're gonna
have a really hard to market strategy, and

82
00:05:06.624 --> 00:05:09.729
you're gonna have a thousand users
be prepared for that, right?

83
00:05:09.729 --> 00:05:12.930
The monolith is something great
to start with, but again,

84
00:05:12.930 --> 00:05:17.220
maybe slowly start decoupling those
components, making them into services,

85
00:05:17.220 --> 00:05:19.027
or other type of architectures.

86
00:05:19.027 --> 00:05:23.143
And making it so that when you're ready,
you can move fast,

87
00:05:23.143 --> 00:05:27.759
that is also what makes a company
profitable fast, you move quick.

88
00:05:27.759 --> 00:05:31.101
These allow a system to adapt
to changes in user demand and

89
00:05:31.101 --> 00:05:35.283
technological advancements without
requiring complete redesigns,

90
00:05:35.283 --> 00:05:39.619
thereby saving time, resources,
and facilitating sustained growth.

91
00:05:39.619 --> 00:05:43.670
And the final one, and I think this is
hopefully the one I want you guys to walk

92
00:05:43.670 --> 00:05:47.298
away with the most, this is all
continuous learning and adaption.

93
00:05:47.298 --> 00:05:50.937
There's no one solution,
there's no one person does it best and

94
00:05:50.937 --> 00:05:52.538
this is the best way to do it.

95
00:05:52.538 --> 00:05:56.722
If you wanna be a good engineer,
explore it yourself, go out and

96
00:05:56.722 --> 00:06:02.084
learn these things yourself, come back
to the table with your own observations.

97
00:06:02.084 --> 00:06:06.279
And that's something that I implore
everyone watching this course to do.

98
00:06:06.279 --> 00:06:09.474
Yes, you can take recommendations
from another company, but

99
00:06:09.474 --> 00:06:12.737
at the end of the day,
that's all they are, recommendations.

100
00:06:12.737 --> 00:06:15.819
The way that you have to solve
the problem is entirely up

101
00:06:15.819 --> 00:06:17.966
to the problem that you have to solve.

102
00:06:17.966 --> 00:06:21.331
This approach will not only
keep your skills relevant, but

103
00:06:21.331 --> 00:06:26.331
also enable you to design systems that are
robust, adaptable, and forward thinking.

104
00:06:26.331 --> 00:06:29.476
And with that, thank you for
watching, I appreciate it.

105
00:06:29.476 --> 00:06:33.896
Remember again, if you're curious about
any of the stuff I do on the interwebs,

106
00:06:33.896 --> 00:06:36.568
check out the engineering
blog Altf4.blog.

107
00:06:36.568 --> 00:06:40.084
Watch me on twitch, I Stream Thursdays,
Fridays, and Saturdays,

108
00:06:40.084 --> 00:06:42.582
my stream agenda might
change from this course.

109
00:06:42.582 --> 00:06:46.427
So I do stream weekdays and weekends,
be sure to follow me on Twitter as well as

110
00:06:46.427 --> 00:06:50.473
check out the YouTube, but thank you very
much and I hope you enjoyed the course.

111
00:06:50.473 --> 00:06:55.898
&gt;&gt; Students: [APPLAUSE]

