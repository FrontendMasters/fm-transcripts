WEBVTT

1
00:00:00.000 --> 00:00:02.942
&gt;&gt; Kevin Powell: I think I missed my
title, so we'll add that in a minute.

2
00:00:02.942 --> 00:00:05.943
But we can also now look at
fixing a few other things here.

3
00:00:05.943 --> 00:00:08.563
This is stretching really far down.

4
00:00:08.563 --> 00:00:12.230
This is another thing that happens
where the layout of one part of it is

5
00:00:12.230 --> 00:00:16.421
impacting the layout of the other parts,
because things stretch by default.

6
00:00:16.421 --> 00:00:20.378
And we need the images positioning to
be changed a little bit as well but

7
00:00:20.378 --> 00:00:24.736
this one here, because the content is
all stacked, and if we come look here,

8
00:00:24.736 --> 00:00:25.960
we have two columns.

9
00:00:25.960 --> 00:00:29.194
This one is a lot taller than what it
should actually be if we were following

10
00:00:29.194 --> 00:00:30.143
the correct layout.

11
00:00:30.143 --> 00:00:33.716
What I would suggest always is get
the general layout working in that

12
00:00:33.716 --> 00:00:35.609
everything's in the right place.

13
00:00:35.609 --> 00:00:39.663
Then, before you start worrying about
why isn't the height matching or

14
00:00:39.663 --> 00:00:43.649
why is there so much empty space go on
like a more micro level of looking at

15
00:00:43.649 --> 00:00:45.588
each one of the different pieces.

16
00:00:45.588 --> 00:00:47.828
And trying to fix those so
the layouts are correct,

17
00:00:47.828 --> 00:00:51.385
just because those have such a big impact
on how the layout is working in general.

18
00:00:51.385 --> 00:00:53.593
And then you do the finishing
touches after that.

19
00:00:53.593 --> 00:00:55.183
Then we can get our images
in the right order.

20
00:00:55.183 --> 00:00:57.333
We can get the heights of
the images to be correct and

21
00:00:57.333 --> 00:00:58.937
fill in the empty spaces that we have.

22
00:00:58.937 --> 00:01:01.271
And it just gets a little
bit easier to work that way.

23
00:01:01.271 --> 00:01:05.115
So in this case, this is my third card,

24
00:01:05.115 --> 00:01:11.415
because we did one two three four,
because it's my third card.

25
00:01:11.415 --> 00:01:16.374
And I want this to be as composed
like throw anything you want in there

26
00:01:16.374 --> 00:01:17.426
as possible.

27
00:01:17.426 --> 00:01:20.477
I'm gonna stick with what we did.

28
00:01:20.477 --> 00:01:23.132
Down here, where, with my nth child,

29
00:01:23.132 --> 00:01:28.536
we could include this either within this
media query, or we could just come in.

30
00:01:28.536 --> 00:01:31.595
And if you prefer keeping
it with the selector for

31
00:01:31.595 --> 00:01:35.334
where it working,
we could put our media query right here.

32
00:01:35.334 --> 00:01:38.888
And in this case,
this one needs a very specific layout, and

33
00:01:38.888 --> 00:01:41.059
I'm gonna zoom out just so we get to.

34
00:01:41.059 --> 00:01:45.562
The layout that we need because
we need the image on one side and

35
00:01:45.562 --> 00:01:47.564
the text on the other side.

36
00:01:47.564 --> 00:01:49.875
We could do this with Flexbox or
with Grid.

37
00:01:49.875 --> 00:01:52.825
My mind immediately goes to Grid for
this type of thing again,

38
00:01:52.825 --> 00:01:56.530
because I wanna be able to move the cards
around and just have the layout work.

39
00:01:56.530 --> 00:02:00.738
And if we wanted to create that two
column look with fa using Flexbox.

40
00:02:00.738 --> 00:02:04.484
That would mean we'd have to come
into our card and add an extra div so

41
00:02:04.484 --> 00:02:08.245
Flexbox could actually properly
separate the image plus the text.

42
00:02:08.245 --> 00:02:11.872
Whereas with grid, you have a lot more
control over just positioning things where

43
00:02:11.872 --> 00:02:12.778
you want them to be.

44
00:02:12.778 --> 00:02:16.741
So when we're in this media query,
we could come in and say,

45
00:02:16.741 --> 00:02:18.539
this is now a display grid.

46
00:02:18.539 --> 00:02:20.721
It was, if you remember,
we switched them to Flexbox before.

47
00:02:20.721 --> 00:02:24.339
So I do need to say that
it's actually grid and

48
00:02:24.339 --> 00:02:27.872
then I could do my grid
template columns of.

49
00:02:27.872 --> 00:02:31.732
Let's start with two equal columns.

50
00:02:31.732 --> 00:02:35.390
It's not gonna be exact,
a lot of gap there as well.

51
00:02:35.390 --> 00:02:39.235
I feel like I have something wrong in my
HTML that's causing a problem right now.

52
00:02:39.235 --> 00:02:40.729
But we'll fix that.

53
00:02:40.729 --> 00:02:42.677
But we're getting our two columns
that are coming in there.

54
00:02:42.677 --> 00:02:48.291
Actually, I'm very curious 1,

55
00:02:48.291 --> 00:02:55.269
2, 3, image, H3 paragraph curious.

56
00:02:55.269 --> 00:02:58.969
We'll see what happens once I set this up
a little bit more because what I want to

57
00:02:58.969 --> 00:03:02.579
do in this case is just to make sure that
my image is going into the right spot.

58
00:03:02.579 --> 00:03:05.368
And it could just be that there's not
enough room cuz of the way I'm zoomed.

59
00:03:07.802 --> 00:03:10.219
&gt;&gt; Kevin Powell: It's really bizarre,
but we'll see what happens here.

60
00:03:12.820 --> 00:03:17.675
&gt;&gt; Kevin Powell: So in here, I'm gonna
select the image that's nested inside that

61
00:03:17.675 --> 00:03:22.542
card, and we can say that this is
a grid called column of 1 over 2.

62
00:03:22.542 --> 00:03:24.037
And this is the line numbers.

63
00:03:24.037 --> 00:03:28.517
And we can take a look if you don't know
how the line numbers work in the grid,

64
00:03:28.517 --> 00:03:30.695
always just turn on your inspector.

65
00:03:30.695 --> 00:03:33.899
And so
if I come down here on that element and

66
00:03:33.899 --> 00:03:37.557
I find the little grid thing,
I can turn that on.

67
00:03:37.557 --> 00:03:39.684
You can actually see
the line numbers coming in.

68
00:03:39.684 --> 00:03:42.442
So I have line number one,
line number two, line number three.

69
00:03:42.442 --> 00:03:45.842
So I want the image to go from one to two,
so the image,

70
00:03:45.842 --> 00:03:50.166
it's sort of disappeared, but
let's go and fix the other one now.

71
00:03:50.166 --> 00:03:54.681
So then we have our grid row.

72
00:03:54.681 --> 00:03:57.071
I'm gonna inspect this in a minute
too to see what's going on.

73
00:03:57.071 --> 00:04:04.186
But we're gonna say grid row,
and I want to go from 1 over 3.

74
00:04:04.186 --> 00:04:07.566
So just to explain why
I know it went wrong.

75
00:04:07.566 --> 00:04:12.716
When I turned on my grid inspector here
and I clicked on the grid for the card,

76
00:04:12.716 --> 00:04:17.709
when I looked at it, there's a whole
bunch of these gaps showing up here,

77
00:04:17.709 --> 00:04:19.904
and I was kind of weird because.

78
00:04:19.904 --> 00:04:21.716
Because of the way the columns
were shifting over too.

79
00:04:21.716 --> 00:04:23.087
And I was like, Well, it's weird.

80
00:04:23.087 --> 00:04:26.370
It's starting over here, and
then I'm seeing all these columns and

81
00:04:26.370 --> 00:04:29.386
I was like, Wait,
I did something wrong to create those.

82
00:04:29.386 --> 00:04:33.452
And what I realized was, I'm using the nth
child selectors here, which is awesome.

83
00:04:33.452 --> 00:04:37.489
They work really well, but
I did it as a general descendant,

84
00:04:37.489 --> 00:04:41.461
so it's not only looking for
the card that's in nth child.

85
00:04:41.461 --> 00:04:46.008
It's then going into the nth child and
getting the third nth child here as well.

86
00:04:46.008 --> 00:04:49.983
So we're getting it for the first,
the second, the third for the cards and

87
00:04:49.983 --> 00:04:51.826
anything nested inside of those.

88
00:04:51.826 --> 00:04:55.941
So what I should have done is either done.

89
00:04:55.941 --> 00:04:59.295
Let me just see what
the initial selector was.

90
00:04:59.295 --> 00:05:02.985
So yeah, I could've either done
.card to specify it's only for

91
00:05:02.985 --> 00:05:06.689
the cards that are that, and
that's probably the safer option.

92
00:05:06.689 --> 00:05:10.446
Or I could've done the direct
sibling combinator.

93
00:05:10.446 --> 00:05:13.840
So if I had the direct sibling combinator,
it's only gonna choose the first one.

94
00:05:13.840 --> 00:05:16.263
I think it's a bit safer if we do it.

95
00:05:16.263 --> 00:05:21.159
Well, it's not safer, but a bit more
explicit to use the .card on there,

96
00:05:21.159 --> 00:05:24.912
and that will solve any weird
things that are happening.

97
00:05:24.912 --> 00:05:26.864
There we go.

98
00:05:26.864 --> 00:05:31.746
We can see the image is in
the right spot now, awesome.

99
00:05:31.746 --> 00:05:36.484
And I'm only declaring for the image, and
I did my grid column here from one to two,

100
00:05:36.484 --> 00:05:40.290
because I wanted to go from one to two and
then vertically I want it.

101
00:05:40.290 --> 00:05:44.036
If I did 1 to 2, it would just
match the height of the heading,

102
00:05:44.036 --> 00:05:47.744
which I don't want it to only
match the height of the heading.

103
00:05:47.744 --> 00:05:50.950
I wanted to go from the top and
stretch across two columns.

104
00:05:50.950 --> 00:05:55.812
So I'm doing a line of grid, row one over
three, so it covers two different rows and

105
00:05:55.812 --> 00:05:57.353
covers that whole space.

106
00:05:57.353 --> 00:06:01.988
You'll notice the height of them
isn't exactly what we want, but

107
00:06:01.988 --> 00:06:05.478
at least it's getting us
in the right direction.

108
00:06:05.478 --> 00:06:10.247
I'm gonna come up a little bit and
just do a general

109
00:06:10.247 --> 00:06:15.027
card image and
give them all a height of 100%.

110
00:06:17.343 --> 00:06:19.659
&gt;&gt; Kevin Powell: And it's gonna cause
all of the images to stretch and

111
00:06:19.659 --> 00:06:20.770
fill in the empty space.

112
00:06:20.770 --> 00:06:23.720
They look terrible right now,
but that's okay.

113
00:06:23.720 --> 00:06:27.478
You can't always do 100% on things if you
know CSS, height 100% is one of those

114
00:06:27.478 --> 00:06:30.635
really annoying things that doesn't
work whenever you want it to work.

115
00:06:30.635 --> 00:06:35.210
But if the parent is either a grid or
flex item, height 100% will work.

116
00:06:35.210 --> 00:06:38.904
It's in this case, with grid,
it's the best place to use it,

117
00:06:38.904 --> 00:06:43.954
because that 100% is actually according
to the grid cell that it lives inside of.

118
00:06:43.954 --> 00:06:45.300
So if I turn those off, and

119
00:06:45.300 --> 00:06:48.546
we can turn on these flex that's
a bit different with the Flex,

120
00:06:48.546 --> 00:06:53.163
because we're using it there too flex, it
just fills the available space, basically.

121
00:06:53.163 --> 00:06:57.090
But here where this is covering two
there's all that empty space underneath.

122
00:06:57.090 --> 00:07:01.860
So when I do the 100% on there, it's
filling up the height of those two cells.

123
00:07:01.860 --> 00:07:06.642
So 100% can be really
useful in grid contexts.

124
00:07:06.642 --> 00:07:07.840
We're stretching the image.

125
00:07:07.840 --> 00:07:09.946
Stretching it makes it really distorted.

126
00:07:09.946 --> 00:07:13.673
CSS has a solution with object-fit cover,

127
00:07:13.673 --> 00:07:19.024
object-fit cover will stretch
the element not stretch them.

128
00:07:19.024 --> 00:07:21.891
Object-fit cover will crop the elements.

129
00:07:21.891 --> 00:07:26.637
So if I turn that off, you can see
that there's a lot more background on

130
00:07:26.637 --> 00:07:28.737
the left and the right of this.

131
00:07:28.737 --> 00:07:30.277
We're gonna crop.

132
00:07:30.277 --> 00:07:34.482
You lose top, you lose stuff on the side,
it's the trade off of using it, but

133
00:07:34.482 --> 00:07:38.706
it also happens to match the design of
what we're trying to create right now.

134
00:07:38.706 --> 00:07:42.343
Anyway, where we have the layout
is shifting a little bit,

135
00:07:42.343 --> 00:07:45.266
we have to crop the image
to make it work anyway.

136
00:07:45.266 --> 00:07:47.906
There is also, in this situation,

137
00:07:47.906 --> 00:07:52.043
the default it's a lot like
a background size of cover.

138
00:07:52.043 --> 00:07:56.881
The difference with object fit and
background size, the background size,

139
00:07:56.881 --> 00:07:59.450
or, sorry, the background size over,

140
00:07:59.450 --> 00:08:03.017
the position of it is always
gonna start in the top left.

141
00:08:03.017 --> 00:08:06.052
With object-fit, it's always
based on the center of the image.

142
00:08:06.052 --> 00:08:08.340
So it's gonna keep the center
of the image and crop it.

143
00:08:08.340 --> 00:08:12.998
If you did need to change it,
you could come in

144
00:08:12.998 --> 00:08:17.411
with an object position
of like top left and

145
00:08:17.411 --> 00:08:23.025
then position
&gt;&gt; Kevin Powell: Spelling is hard.

146
00:08:23.025 --> 00:08:23.556
There you go.

147
00:08:23.556 --> 00:08:27.258
And then I'm getting the top left,
which I don't want, but

148
00:08:27.258 --> 00:08:32.139
you can change the position of how the
cropping is happening if ever you need to.

149
00:08:32.139 --> 00:08:34.166
But like that, there we go.

150
00:08:34.166 --> 00:08:38.261
You can see, once I close my dev tools
there, I'm zoomed out a lot right now,

151
00:08:38.261 --> 00:08:41.159
just so we're getting this
version of the layout, but

152
00:08:41.159 --> 00:08:44.440
we can see it's coming together
pretty nicely at this point.

153
00:08:44.440 --> 00:08:49.183
Or actually, one second, sorry.

154
00:08:49.183 --> 00:08:52.743
The only thing that's different right
now is the ordering of the images.

155
00:08:52.743 --> 00:08:53.967
This one's down at the bottom here.

156
00:08:53.967 --> 00:08:57.439
So we go top, bottom, top, and
this one has its own spot.

157
00:08:57.439 --> 00:09:00.110
When we're at the smallest to screen size.

158
00:09:00.110 --> 00:09:02.611
Right now, they're just always at the top.

159
00:09:02.611 --> 00:09:03.801
So we can leave those ones alone.

160
00:09:03.801 --> 00:09:04.943
We don't have to worry about it.

161
00:09:04.943 --> 00:09:08.106
But just to make life a little
bit more interesting and

162
00:09:08.106 --> 00:09:10.361
to come in with another fun selector.

163
00:09:10.361 --> 00:09:15.473
If I come to here and
we go to that middle size as well,

164
00:09:15.473 --> 00:09:18.156
or I'll zoom back in a bit.

165
00:09:18.156 --> 00:09:19.715
When we get to two columns here.

166
00:09:19.715 --> 00:09:21.885
It's kind of boring if the images
are always at the top.

167
00:09:21.885 --> 00:09:24.800
Just we have this type of layout,
we want a little bit of movement.

168
00:09:24.800 --> 00:09:28.496
So inside, of the 600 media query, or

169
00:09:28.496 --> 00:09:32.522
if you have another one for
your card images.

170
00:09:32.522 --> 00:09:36.998
I'll do it here actually just because
we have our card image selector, so

171
00:09:36.998 --> 00:09:39.393
just just keep all of those in one spot.

172
00:09:39.393 --> 00:09:47.271
Card image, I'm gonna do
the ampersand inf child, no, whoops.

173
00:09:47.271 --> 00:09:50.397
We want the media query first at media.

174
00:09:50.397 --> 00:09:51.898
I'll do this outside of nesting,

175
00:09:51.898 --> 00:09:54.346
because it's gonna be easier
to understand actually.

176
00:09:54.346 --> 00:09:55.183
Let's do an app.

177
00:09:55.183 --> 00:10:02.701
Media is geater than, this would be
the other media query, 600 pixels.

178
00:10:03.715 --> 00:10:06.403
&gt;&gt; Kevin Powell: So
now that we're in that media query,

179
00:10:06.403 --> 00:10:11.707
what I can do is select my cards that are
an nth child of, I want the second one.

180
00:10:11.707 --> 00:10:14.612
So let's just shrink that down.

181
00:10:14.612 --> 00:10:16.468
I want this one here and this one here.

182
00:10:16.468 --> 00:10:18.442
So that's my second and fourth one.

183
00:10:18.442 --> 00:10:24.328
So if the nth child is even, I wanna
select the image that's inside of it and

184
00:10:24.328 --> 00:10:27.131
change the order of that image, and

185
00:10:27.131 --> 00:10:32.003
now the image goes to the third so
it goes all the way at the end.

186
00:10:32.003 --> 00:10:34.893
And this one does as well.

187
00:10:34.893 --> 00:10:37.257
This is something you probably
won't do very often, but

188
00:10:37.257 --> 00:10:39.925
it's one of those fun little things
that you can throw on there.

189
00:10:39.925 --> 00:10:44.004
The one thing to be careful with is when
you are changing the order of things,

190
00:10:44.004 --> 00:10:46.378
be really careful this
is what you wanna do.

191
00:10:46.378 --> 00:10:49.523
And this doesn't only apply
to using the order property,

192
00:10:49.523 --> 00:10:53.310
it also applies to when you're using
grid template areas to rearrange

193
00:10:53.310 --> 00:10:55.249
different things within a layout.

194
00:10:55.249 --> 00:11:00.026
And that's because the order that matters
is the order that we have in the HTML.

195
00:11:00.026 --> 00:11:02.795
If something's going through that,
this is what they're seeing.

196
00:11:02.795 --> 00:11:05.448
And then we're visually
moving things around, and

197
00:11:05.448 --> 00:11:07.202
that can have an impact on things.

198
00:11:07.202 --> 00:11:10.746
If you have cards that you're moving
around within a bento grid like this, but

199
00:11:10.746 --> 00:11:14.304
there's a tab there's a focusable
element in there that you're tabbing to.

200
00:11:14.304 --> 00:11:17.354
And you change the order, and
the person's tabbing through them.

201
00:11:17.354 --> 00:11:19.637
And the order of the tabbing
doesn't make any sense.

202
00:11:19.637 --> 00:11:21.986
It's a really strange user experience.

203
00:11:21.986 --> 00:11:25.125
There's really big websites out there that
have done this where you're hitting tab

204
00:11:25.125 --> 00:11:27.570
and it's going, like three quarters
of the way back up the page.

205
00:11:27.570 --> 00:11:30.067
Because they've messed around
with the tabbing order of things.

206
00:11:30.067 --> 00:11:33.229
So if you have focusable elements,
be very careful and

207
00:11:33.229 --> 00:11:35.784
do lots of testing if
the order has changed.

208
00:11:35.784 --> 00:11:38.307
I'm very liberal with
moving an image up and

209
00:11:38.307 --> 00:11:40.694
down or moving a heading somewhere else,

210
00:11:40.694 --> 00:11:45.347
but always do it the correct way in the
HTML, the way that it should be logically.

211
00:11:45.347 --> 00:11:47.525
And then if you need to tweak it for
whatever reason,

212
00:11:47.525 --> 00:11:48.722
you can move things around.

213
00:11:48.722 --> 00:11:51.173
But just remember it's
only a visual movement.

214
00:11:51.173 --> 00:11:54.234
And always test things to make sure that

215
00:11:54.234 --> 00:11:58.140
it makes sense the order
that you've put them in.

216
00:12:00.323 --> 00:12:04.789
&gt;&gt; Kevin Powell: Any questions
about this or anything there?

217
00:12:04.789 --> 00:12:09.226
&gt;&gt; Speaker 2: Do you have any best
practices around how big the scroll is on

218
00:12:09.226 --> 00:12:14.664
mobile devices when you have a lot of
cards and things ended up stacking?

219
00:12:14.664 --> 00:12:16.498
&gt;&gt; Kevin Powell: Just
like how far it's going?

220
00:12:16.498 --> 00:12:19.777
&gt;&gt; Speaker 2: Yeah, even just maybe
from a design choice or perspective or

221
00:12:19.777 --> 00:12:23.203
just a rule of thumb for
how far you want users to have to scroll.

222
00:12:23.203 --> 00:12:27.697
&gt;&gt; Kevin Powell: I think the people are so
used to scrolling now it can be,

223
00:12:27.697 --> 00:12:30.853
I will say if you get
to this type of not so

224
00:12:30.853 --> 00:12:36.035
much where our bento grid is here,
but if we get to the other one.

225
00:12:36.035 --> 00:12:39.718
Let me just make it one column,
this one here, if it was one column.

226
00:12:39.718 --> 00:12:43.415
It is kind of long, but to me,
in a way, a user, I'm guessing,

227
00:12:43.415 --> 00:12:47.248
would use the filters, hopefully,
if there's too many of them,

228
00:12:47.248 --> 00:12:51.712
they might not get to the content after
it, if it's a little bit ridiculous.

229
00:12:51.712 --> 00:12:55.129
But even especially now with shorts or
Instagram,

230
00:12:55.129 --> 00:12:59.188
everything on mobile now is swipe,
swipe, swipe, swipe.

231
00:12:59.188 --> 00:13:01.775
You could come in with
horizontal scrolling,

232
00:13:01.775 --> 00:13:05.370
instead it's one option,
just you're swiping the other way.

233
00:13:05.370 --> 00:13:09.333
On mobile, that experience can be really
good because people are used to it now.

234
00:13:09.333 --> 00:13:12.750
But then it's super awkward if someone's
on a narrow screen on desktop, like

235
00:13:12.750 --> 00:13:16.344
you shrink your window off to the side and
you're going through and using a mouse.

236
00:13:16.344 --> 00:13:19.600
And then if you don't have a touch device,
it's really awkward because you're like,

237
00:13:19.600 --> 00:13:21.582
shift scrolling, or
you have to grab the scroll bar.

238
00:13:21.582 --> 00:13:26.975
So it's definitely one of those things
that you have to balance out a little bit,

239
00:13:26.975 --> 00:13:31.390
yeah,
&gt;&gt; Kevin Powell: User testing as usual.

240
00:13:31.390 --> 00:13:34.260
[LAUGH] So one of those things
that comes into it as well, but

241
00:13:34.260 --> 00:13:36.853
that's the expensive part
that nobody can afford.

