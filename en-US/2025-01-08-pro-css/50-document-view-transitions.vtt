WEBVTT

1
00:00:00.000 --> 00:00:03.948
Now the next one we're gonna be looking
at is the same document view transitions.

2
00:00:03.948 --> 00:00:07.069
And our filtering section is
the perfect area to do this.

3
00:00:07.069 --> 00:00:11.130
It's really easy to add in these
types of view transitions as well.

4
00:00:11.130 --> 00:00:13.317
So for the same document,
view transitions, though,

5
00:00:13.317 --> 00:00:14.955
it's not the CSS rule like we saw before.

6
00:00:14.955 --> 00:00:18.832
So once again,
I'm gonna use back ticks here and

7
00:00:18.832 --> 00:00:22.345
to say mushroom card-${mushroomId}.

8
00:00:22.345 --> 00:00:26.012
So once again,
I'm gonna use back ticks here and

9
00:00:26.012 --> 00:00:29.333
to say mushroom card-${mushroomId}.

10
00:00:29.333 --> 00:00:34.301
So for us, our filter cards would get
that so if we go back to our code, and

11
00:00:34.301 --> 00:00:36.669
we go back to our mushroom filter.

12
00:00:36.669 --> 00:00:39.445
Where we were doing our filter cards here,

13
00:00:39.445 --> 00:00:43.078
we could just do our
document.startViewTransition.

14
00:00:45.663 --> 00:00:51.658
&gt;&gt; Kevin Powell: We only want one of
those filter cards, and there we go.

15
00:00:51.658 --> 00:00:54.208
So just by doing it like this,

16
00:00:54.208 --> 00:00:59.213
it's going to run across same
document view transition.

17
00:00:59.213 --> 00:01:03.480
And by default, just like we had before,
it will be a fading animation.

18
00:01:03.480 --> 00:01:07.137
So here we can bring this to be spring or
it didn't work.

19
00:01:07.137 --> 00:01:09.062
Let me try it again, did I save it?

20
00:01:09.062 --> 00:01:11.968
So here, where we have our filter cards,

21
00:01:11.968 --> 00:01:16.123
we can bring in that
document.startViewTransition, and

22
00:01:16.123 --> 00:01:19.875
then in here we want to do
an arrow function like that.

23
00:01:19.875 --> 00:01:23.991
And then we can filter our cards.

24
00:01:25.271 --> 00:01:29.582
&gt;&gt; Kevin Powell: Sorry,
that should be dropped, no, it doesn't.

25
00:01:29.582 --> 00:01:31.722
And then we just close
the parentheses there at the end.

26
00:01:31.722 --> 00:01:36.323
And now, when we come and we filter our
cards, you can see that it's fading.

27
00:01:36.323 --> 00:01:39.308
Let's go to summer, it fades over instead.

28
00:01:39.308 --> 00:01:44.439
And let's go back to all and all, and you
can see the cards sort of fade in and out.

29
00:01:44.439 --> 00:01:48.111
This probably be more obvious if I make
this bigger, so let's do it like that.

30
00:01:48.111 --> 00:01:49.317
And then there we go.

31
00:01:49.317 --> 00:01:53.788
Looks nice and pretty, and we have
the view transition working no match.

32
00:01:53.788 --> 00:01:56.032
It still sort of fades around instead,

33
00:01:56.032 --> 00:01:58.693
which is just a really
nice way to enable this.

34
00:01:58.693 --> 00:02:01.143
A little bit nicer of
an animation happening.

35
00:02:01.143 --> 00:02:02.808
We can definitely do more with this but

36
00:02:02.808 --> 00:02:05.213
I did mention we want to do
a progressive enhancement.

37
00:02:05.213 --> 00:02:07.392
And right now,
this isn't a progressive enhancement.

38
00:02:07.392 --> 00:02:07.998
Right now,

39
00:02:07.998 --> 00:02:12.134
this will actually break browsers where
the view transition isn't supported.

40
00:02:12.134 --> 00:02:16.462
Because it's only going to work
if the browser has the start view

41
00:02:16.462 --> 00:02:17.993
transition in there.

42
00:02:17.993 --> 00:02:22.450
Right now,
this will actually break browsers

43
00:02:22.450 --> 00:02:26.915
where the view transition isn't supported.

44
00:02:26.915 --> 00:02:28.169
Right now, this will actually
break browsers where the view

45
00:02:28.169 --> 00:02:28.845
transition isn't supported.

46
00:02:28.845 --> 00:02:34.970
So we can say, if the browser doesn't
have a document.startViewTransition.

47
00:02:38.052 --> 00:02:40.279
&gt;&gt; Kevin Powell: Then we just
filter our cards normally.

48
00:02:42.668 --> 00:02:45.129
&gt;&gt; Kevin Powell: So to do it without
trying to do a view transition.

49
00:02:45.129 --> 00:02:48.739
So right now, this should still work fine,
I mean a browser where it's supported.

50
00:02:48.739 --> 00:02:52.758
And we can see it faded if I turn
this off, or I won't turn it off,

51
00:02:52.758 --> 00:02:57.531
because it's not going to work at all,
because my browser does support it.

52
00:02:57.531 --> 00:03:00.640
But If we do it through where
a browser is not supported,

53
00:03:00.640 --> 00:03:02.702
it's just gonna fire it regularly.

54
00:03:02.702 --> 00:03:04.368
And if the view transition is supported,

55
00:03:04.368 --> 00:03:06.756
then it's going to do it with
the view transition on there.

56
00:03:06.756 --> 00:03:08.851
Now the one thing with
that is you don't want,

57
00:03:08.851 --> 00:03:12.454
if the browser gets to this point and
it doesn't support the view transitions,

58
00:03:12.454 --> 00:03:13.880
you sort of want it to end here.

59
00:03:13.880 --> 00:03:16.284
So you can add a return here as well,
so that way,

60
00:03:16.284 --> 00:03:19.349
we're doing start view transition,
it doesn't have that.

61
00:03:19.349 --> 00:03:21.779
It filters the cards and
then it returns just so

62
00:03:21.779 --> 00:03:25.472
it doesn't run into any problems
with what's following after that.

63
00:03:25.472 --> 00:03:27.515
It probably wouldn't cause
an issue anyway, but

64
00:03:27.515 --> 00:03:29.081
just a little safeguard right there.

65
00:03:29.081 --> 00:03:32.510
Now, the animations are fine when they're
filtering this way, it looks kind of nice.

66
00:03:32.510 --> 00:03:35.701
They fade in and out instead of
it just changing right away.

67
00:03:35.701 --> 00:03:40.009
But this is the type of situation where
you can very easily make things look

68
00:03:40.009 --> 00:03:40.782
a lot nicer.

69
00:03:40.782 --> 00:03:44.687
And that's because we can add
some movement going around if

70
00:03:44.687 --> 00:03:46.494
one of the elements moves.

71
00:03:46.494 --> 00:03:50.213
And that's because right now,
what's happening is,

72
00:03:50.213 --> 00:03:54.814
let's say I go to Spring and
I have my False Morel that's right here.

73
00:03:54.814 --> 00:03:56.190
And then I go back to all.

74
00:03:56.190 --> 00:04:00.261
That False Morel is still on the page, but
it's like moved all the way down to here.

75
00:04:00.261 --> 00:04:04.291
And right now it's just fading between one
and the other, because the browser is not

76
00:04:04.291 --> 00:04:08.519
aware that it's the same element, if that
makes sense, it's just, it's updating.

77
00:04:08.519 --> 00:04:11.545
There's a whole bunch of new stuff there,
and it just fades everything into place.

78
00:04:11.545 --> 00:04:14.786
But I could actually tell it that's
the same element, and that instead

79
00:04:14.786 --> 00:04:18.528
of fading from there, it's actually going
to move it from one place to the other.

80
00:04:18.528 --> 00:04:24.060
For this to work, every element needs
to have a unique view transition name.

81
00:04:24.060 --> 00:04:27.635
And view transition name is a CSS
property, and it's one of those things

82
00:04:27.635 --> 00:04:30.991
that's a little bit frustrating
if you're not using Javascript.

83
00:04:30.991 --> 00:04:35.829
Cuz if you're not using Javascript,
it means you're just doing nth-child(1)

84
00:04:35.829 --> 00:04:39.245
view transition name, and
child to view transition name.

85
00:04:39.245 --> 00:04:40.658
It can get old really fast.

86
00:04:40.658 --> 00:04:45.356
With JavaScript, and if you are using
view transition names, unless it's for

87
00:04:45.356 --> 00:04:46.907
one very specific thing.

88
00:04:46.907 --> 00:04:49.947
I would strongly recommend
doing it with some JavaScript,

89
00:04:49.947 --> 00:04:52.395
like we're going to do now for
all of our cards.

90
00:04:52.395 --> 00:04:56.616
So for this, we already have our cards,
and we have a forEach going right here,

91
00:04:56.616 --> 00:05:00.018
but I don't wanna include Included
in this forEach statement.

92
00:05:00.018 --> 00:05:03.150
Cuz this forEach is getting,
every time we filter our cards, so

93
00:05:03.150 --> 00:05:06.050
every time I change to Summer,
we're firing that again cuz

94
00:05:06.050 --> 00:05:08.620
we're filtering through
the cards that are there.

95
00:05:08.620 --> 00:05:12.866
And I don't wanna make the browser reput
all of the names on there every time,

96
00:05:12.866 --> 00:05:14.836
cuz that just seems like overkill.

97
00:05:14.836 --> 00:05:17.484
So just at the beginning,
when the page loads, we can have

98
00:05:17.484 --> 00:05:20.908
this come on all of the cards, and
then they'll just be there all the time.

99
00:05:20.908 --> 00:05:25.157
And it just does it once,
instead of every time we filter our cards.

100
00:05:25.157 --> 00:05:28.792
So we can say cards.forEach.

101
00:05:28.792 --> 00:05:33.696
Once again, we just say in here, we're
gonna say card, but we're gonna look for

102
00:05:33.696 --> 00:05:34.490
two things.

103
00:05:34.490 --> 00:05:37.822
We need your card and the index,
cuz when you do a forEach,

104
00:05:37.822 --> 00:05:40.680
you can keep track of every
time it loops through.

105
00:05:40.680 --> 00:05:43.018
And it knows the number
that's coming in there.

106
00:05:43.018 --> 00:05:49.665
And we can do our fat arrow, our curly
braces, and do some stuff with these.

107
00:05:49.665 --> 00:05:55.558
So for this, we're going to say
const mushroomId is equal to.

108
00:05:55.558 --> 00:05:57.814
I'm going to put back ticks here, just so

109
00:05:57.814 --> 00:06:00.982
it makes it a little bit easier
to write what we're doing.

110
00:06:00.982 --> 00:06:04.017
So we can say that we
have our mushroom and

111
00:06:04.017 --> 00:06:06.887
then we can come in with a dollar sign.

112
00:06:06.887 --> 00:06:10.646
And then, by doing this, we have
a string here and then inside of this,

113
00:06:10.646 --> 00:06:12.161
we can put some JavaScript.

114
00:06:12.161 --> 00:06:18.427
So in right there,
between the two parentheses.

115
00:06:18.427 --> 00:06:23.219
Again, say Index +1,
the reason I'm doing +1 is because

116
00:06:23.219 --> 00:06:28.022
the first index would be zero,
so just count from 1 and go up.

117
00:06:28.022 --> 00:06:30.618
And then so that's gonna keep
track of the ID for each one.

118
00:06:30.618 --> 00:06:38.435
Then we just have to do
card.style.viewTransitionName =,

119
00:06:38.435 --> 00:06:43.451
and then we put whatever we want it to be.

120
00:06:43.451 --> 00:06:51.446
So once again,
I'm gonna use back ticks here and

121
00:06:51.446 --> 00:06:58.672
to say mushroom card-${mushroomId}.

122
00:06:58.672 --> 00:07:01.715
Nothing should look like it's changed.

123
00:07:01.715 --> 00:07:05.773
But if we come and
take a look at each one of our cards,

124
00:07:05.773 --> 00:07:09.571
we should see,
let's put this back on the side.

125
00:07:09.571 --> 00:07:11.512
It'll be a bit easier to see.

126
00:07:11.512 --> 00:07:16.018
And we can grab that card, and I can
see there's a view-transition-name and

127
00:07:16.018 --> 00:07:17.936
mushroom-card-mushroom 2.

128
00:07:17.936 --> 00:07:19.274
Maybe it's not the best name in the world.

129
00:07:19.274 --> 00:07:20.225
It really doesn't matter.

130
00:07:20.225 --> 00:07:26.549
So I guess we could take this mushroom
off and just have it as card.

131
00:07:29.226 --> 00:07:29.935
&gt;&gt; Kevin Powell: There we go, so

132
00:07:29.935 --> 00:07:32.839
now we have view-transition-name:
card-mushroom-1.

133
00:07:32.839 --> 00:07:38.630
The next card after that will be our
view-transition-name: card-mushroom-2,

134
00:07:38.630 --> 00:07:39.271
3, 4.

135
00:07:39.271 --> 00:07:41.783
For as long as every one
of them is a unique ID.

136
00:07:41.783 --> 00:07:42.810
It really doesn't matter.

137
00:07:42.810 --> 00:07:46.676
You just need them all to have
their own view transition name, and

138
00:07:46.676 --> 00:07:48.164
then just by doing that.

139
00:07:48.164 --> 00:07:52.562
Now, you'll see that they actually slide
around when we're filtering them because

140
00:07:52.562 --> 00:07:55.630
the page is able, or
the browser is able to keep track that.

141
00:07:55.630 --> 00:07:58.501
Okay, these are the two same things
when we're going from the old state to

142
00:07:58.501 --> 00:07:59.116
the new state.

143
00:07:59.116 --> 00:08:02.457
So instead of just doing a cross
fade animation, when it does,

144
00:08:02.457 --> 00:08:05.751
it actually takes a picture of
the before and the after state.

145
00:08:05.751 --> 00:08:09.438
So in that,
when it's doing the transition,

146
00:08:09.438 --> 00:08:14.838
now it can actually move the thing across,
which is, it's magic.

147
00:08:14.838 --> 00:08:15.553
It's magic.

148
00:08:15.553 --> 00:08:18.831
I don't really know how
they figured all this out.

149
00:08:18.831 --> 00:08:22.583
But I'm really happy that we have it now,
because it's super cool how easy it is

150
00:08:22.583 --> 00:08:25.554
to do this type of thing, and
I'm really happy that we have it.

151
00:08:25.554 --> 00:08:28.563
And once again, if you wanted
to do fancier stuff with this,

152
00:08:28.563 --> 00:08:32.695
you have those view transition names on
there, you could definitely go through and

153
00:08:32.695 --> 00:08:35.489
add your own animations and
try and play around with it.

154
00:08:35.489 --> 00:08:38.874
In this situation, I can't think of
anything too crazy that you'd want to do.

155
00:08:38.874 --> 00:08:42.365
Just sliding around or fading in and
out seems to make a lot of sense.

156
00:08:42.365 --> 00:08:44.936
But if ever you want to experiment
with this a little bit and

157
00:08:44.936 --> 00:08:48.890
add unique animations while they're moving
around or while they're fading in and out.

158
00:08:48.890 --> 00:08:52.717
You could definitely take play around with
it and see what you can do with them.

159
00:08:52.717 --> 00:08:57.663
&gt;&gt; Student 1: I want to know if your
transition is affected by slow connection?

160
00:08:57.663 --> 00:08:58.878
&gt;&gt; Kevin Powell: That's
a really good question.

161
00:08:58.878 --> 00:09:01.366
I don't think I don't think so.

162
00:09:01.366 --> 00:09:04.879
If it's affected by slow connections,

163
00:09:04.879 --> 00:09:09.333
potentially it could be
on cross-document ones.

164
00:09:09.333 --> 00:09:12.204
Because that is the one
with a cross-document 1,

165
00:09:12.204 --> 00:09:15.693
it does have to load the page
before it starts the transition.

166
00:09:15.693 --> 00:09:17.377
Because it needs to know what they get.

167
00:09:17.377 --> 00:09:18.819
It loads the page, takes a picture.

168
00:09:18.819 --> 00:09:20.544
Extra of it, and then fades over to that.

169
00:09:20.544 --> 00:09:23.432
So if you're on a slow connection,
it's possible.

170
00:09:23.432 --> 00:09:27.366
And even right now,
like if you're on a good connection,

171
00:09:27.366 --> 00:09:31.877
when you click that,
there'll be a slightly slower experience.

172
00:09:31.877 --> 00:09:36.077
So it would be potentially
something that's worth testing and

173
00:09:36.077 --> 00:09:38.383
seeing how it's being impacted.

174
00:09:38.383 --> 00:09:40.990
Yeah, that's a good question.

175
00:09:40.990 --> 00:09:46.269
I know there's ways of optimizing it too,
because you can actually

176
00:09:46.269 --> 00:09:51.284
put blockers in place to make
sure that it's doing it properly.

177
00:09:51.284 --> 00:09:55.210
I don't know enough about
that to go into detail, but

178
00:09:55.210 --> 00:09:59.749
the Google Chrome developers blog,
Bramus has a few articles

179
00:09:59.749 --> 00:10:04.472
on them that go really far in depth
on the stuff you can do with it.

180
00:10:04.472 --> 00:10:08.930
Yeah, but it does talk about that as
an issue and in our JavaScript design

181
00:10:08.930 --> 00:10:14.284
patterns for web apps, course, Max Firtman
has a few lessons on view transitions too.

182
00:10:14.284 --> 00:10:17.366
&gt;&gt; Student 2: And they're in
the context of a Javascript app, and

183
00:10:17.366 --> 00:10:19.895
there's a little bit of coverage in like.

184
00:10:19.895 --> 00:10:23.653
Responding to the events on
both ends of the transition.

185
00:10:23.653 --> 00:10:25.994
&gt;&gt; Kevin Powell: Yeah,
because you can get really deep in and

186
00:10:25.994 --> 00:10:30.054
knowing what the page swap is, and
the page coming in, the page coming out.

187
00:10:30.054 --> 00:10:34.198
When you're doing it,
it gets deep really fast.

188
00:10:34.198 --> 00:10:37.651
But on the simple level, you can do some
really cool stuff without too much work.

