WEBVTT

1
00:00:00.000 --> 00:00:02.728
&gt;&gt; Kevin Powell: Now one thing
that often surprises people,

2
00:00:02.728 --> 00:00:06.348
is that sometimes users don't
have JavaScript enabled.

3
00:00:06.348 --> 00:00:09.422
Sometimes it's through their own
choice and sometimes it's not.

4
00:00:09.422 --> 00:00:12.111
And we have a decision that we
have to make in terms of how we're

5
00:00:12.111 --> 00:00:14.871
gonna treat it if somebody
doesn't have JavaScript running.

6
00:00:14.871 --> 00:00:17.001
There's a number of
reasons why they don't.

7
00:00:17.001 --> 00:00:21.680
The general consensus is about 1%
of users, don't have JavaScript.

8
00:00:21.680 --> 00:00:24.981
When they visit your site,
it could be a slow connection and

9
00:00:24.981 --> 00:00:27.820
if a connection is really
slow on a mobile network,

10
00:00:27.820 --> 00:00:30.740
the browser can decide on
its own just not to bother.

11
00:00:30.740 --> 00:00:31.944
It could be they've disabled it.

12
00:00:31.944 --> 00:00:37.518
There's all sorts of different reasons it
happens, it does happen from time to time.

13
00:00:37.518 --> 00:00:42.092
Sometimes the situations are it's really
hard to come up with an alternative,

14
00:00:42.092 --> 00:00:44.834
like with our mobile
navigation as an example.

15
00:00:44.834 --> 00:00:47.722
Luckily there, if they're on
a hopefully on a larger screen,

16
00:00:47.722 --> 00:00:50.348
at least they can still access
the navigation properly.

17
00:00:50.348 --> 00:00:54.782
But in situations like that,
it can just be, it is what it is.

18
00:00:54.782 --> 00:00:56.283
I don't like really saying that.

19
00:00:56.283 --> 00:01:00.114
Maybe we could come up with a solution
to solve in those situations.

20
00:01:00.114 --> 00:01:04.614
You could actually do it with
what we're doing now as well.

21
00:01:04.614 --> 00:01:05.707
But with our filter,

22
00:01:05.707 --> 00:01:09.186
there's actually a really easy way
that we could also deal with it.

23
00:01:09.186 --> 00:01:13.267
And you could build fallbacks in if you
really wanted to keep your filtering

24
00:01:13.267 --> 00:01:13.796
as well.

25
00:01:13.796 --> 00:01:17.903
But for me, this is one of those like
super easy progressive enhancements,

26
00:01:17.903 --> 00:01:19.968
where we could just hide the filters.

27
00:01:19.968 --> 00:01:22.811
And then, use JavaScript to enable them.

28
00:01:22.811 --> 00:01:25.561
The other one though is
using the CSS-only fallback.

29
00:01:25.561 --> 00:01:26.922
I'm not gonna come in,

30
00:01:26.922 --> 00:01:30.337
but if you wanted to,
we could add a no JS class to your body.

31
00:01:30.337 --> 00:01:32.282
And then, if that's on there,

32
00:01:32.282 --> 00:01:36.398
we're using the CSS filtering
option that I talked about earlier.

33
00:01:36.398 --> 00:01:40.545
And then, if JavaScript's enabled,
then we get the JavaScript version of it.

34
00:01:40.545 --> 00:01:43.829
The advantage with the JavaScript version
is we do have that message that's gonna be

35
00:01:43.829 --> 00:01:45.508
popping up, if none of the filters match.

36
00:01:45.508 --> 00:01:48.806
And the other advantages we're gonna see
when we start adding some animations and

37
00:01:48.806 --> 00:01:51.795
more fun things, much more robust,
if you're using JavaScript for it.

38
00:01:51.795 --> 00:01:55.661
So there's reasons to be
going down that route.

39
00:01:55.661 --> 00:01:59.599
I'm just gonna go with the very simple
version that we have right here.

40
00:01:59.599 --> 00:02:04.498
Where if we come back over to here,
in our document, as is one of those

41
00:02:04.498 --> 00:02:09.651
things just to ask yourself, like,
when you're creating something,

42
00:02:09.651 --> 00:02:14.056
just what would happen if
the user doesn't have JavaScript?

43
00:02:14.056 --> 00:02:15.468
Maybe it just completely breaks it,

44
00:02:15.468 --> 00:02:18.482
you might have an app that's completely
reliant on JavaScript, it happens.

45
00:02:18.482 --> 00:02:22.966
But if you have a simple feature,
that just is better with JavaScript, and

46
00:02:22.966 --> 00:02:25.684
it's really easy to check for
these things.

47
00:02:25.684 --> 00:02:31.893
It's easy enough just to come on both
of these, and add a hidden attribute.

48
00:02:31.893 --> 00:02:35.895
So by default, if a user comes on this
page, and for some reason JavaScript's not

49
00:02:35.895 --> 00:02:39.723
working, they just don't know there
would be any filters in the first place.

50
00:02:39.723 --> 00:02:43.592
They just have to look through them all,
they get that information, it's all there,

51
00:02:43.592 --> 00:02:44.709
no problem whatsoever.

52
00:02:44.709 --> 00:02:50.418
But we could come down, and
just say function enable

53
00:02:50.418 --> 00:02:55.608
filtering, and
all this is doing is grabbing,

54
00:02:55.608 --> 00:03:00.149
we already have them selected to the top,

55
00:03:00.149 --> 00:03:05.211
it's our seasonalFilter.hidden = false,

56
00:03:05.211 --> 00:03:09.781
and our edibleFilter.hidden = false.

57
00:03:09.781 --> 00:03:14.907
And then we can just say enable
filtering at the bottom, like that.

58
00:03:14.907 --> 00:03:20.073
Because that means, if the page loads the
JavaScript file,this function is firing,

59
00:03:20.073 --> 00:03:24.121
it's removing those hidden attributes,
javaScript is working.

60
00:03:24.121 --> 00:03:26.183
It's a really simple version of this,

61
00:03:26.183 --> 00:03:29.254
just to sort of give an excuse
to talk about it a little bit.

62
00:03:29.254 --> 00:03:31.807
It's something that a lot of
people don't think about, and

63
00:03:31.807 --> 00:03:33.420
it really does depend on the feature.

64
00:03:33.420 --> 00:03:36.477
But if it's a really simple thing like
this, it's an extra three lines or

65
00:03:36.477 --> 00:03:39.831
something that would just improve the user
experience, cuz if a user got here and

66
00:03:39.831 --> 00:03:42.940
they had the dropdowns and they start
using them and they're not working,

67
00:03:42.940 --> 00:03:43.954
it can be frustrating.

68
00:03:43.954 --> 00:03:47.214
So, it's just a nice little simple
alternative that you can build in for

69
00:03:47.214 --> 00:03:48.183
what you're doing.

70
00:03:48.183 --> 00:03:52.055
But again, it's really case by case
it depends on what you're building,

71
00:03:52.055 --> 00:03:54.698
and you can do much bigger
enhancements than this,

72
00:03:54.698 --> 00:03:58.771
where you're taking just some like a basic
list and turning it into a full tab.

73
00:03:58.771 --> 00:04:02.115
Where you're reworking the DOM in
a very heavy way to make a tab system,

74
00:04:02.115 --> 00:04:05.651
whereas without it, the JavaScript,
you're just getting a basic list.

75
00:04:05.651 --> 00:04:09.700
So, you can do this at a lightweight
level, like we're looking at here, or

76
00:04:09.700 --> 00:04:13.715
you can take it to a much bigger level
depending on what you feel like doing.

