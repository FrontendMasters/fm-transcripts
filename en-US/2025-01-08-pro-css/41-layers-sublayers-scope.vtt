WEBVTT

1
00:00:00.000 --> 00:00:02.453
&gt;&gt; Kevin Powell: On this topic
of organization and everything,

2
00:00:02.453 --> 00:00:05.223
I do want to talk about layers,
sub layers and scope.

3
00:00:05.223 --> 00:00:07.911
So the first thing we talked
about this very early on,

4
00:00:07.911 --> 00:00:09.532
when I started with the layers.

5
00:00:09.532 --> 00:00:12.513
We can define all of the layers at
the beginning, if we want to, and

6
00:00:12.513 --> 00:00:13.694
then just use them below.

7
00:00:13.694 --> 00:00:17.288
And that first declaration is what's
actually setting the order of them for

8
00:00:17.288 --> 00:00:18.477
how important they are.

9
00:00:18.477 --> 00:00:23.357
The first ones, the least important, the
one at the end is the most important, so

10
00:00:23.357 --> 00:00:25.290
it has the highest precedence.

11
00:00:25.290 --> 00:00:27.642
So that's one way we can
organize our layers,

12
00:00:27.642 --> 00:00:31.926
I've mentioned sublayers a bunch of times,
but I haven't really been using them,

13
00:00:31.926 --> 00:00:35.633
just because I feel like in this
situation, I didn't really need them.

14
00:00:35.633 --> 00:00:39.881
And I feel like it makes you ask more
questions sometimes [LAUGH] Along the way.

15
00:00:39.881 --> 00:00:43.126
And you spend more time trying to
get organized with everything,

16
00:00:43.126 --> 00:00:45.967
rather than just throwing it in there and
making it work.

17
00:00:45.967 --> 00:00:48.915
So you do wanna balance that out,
but as a project grows,

18
00:00:48.915 --> 00:00:52.674
you might think about refactoring
a little bit to introduce sublayers.

19
00:00:52.674 --> 00:00:55.825
Sublayers work exactly
the same way as layers, but

20
00:00:55.825 --> 00:00:59.934
within like the scope of the parent
layer that they're inside of.

21
00:00:59.934 --> 00:01:04.554
So you could have your root here and your
general styling just to be more organized,

22
00:01:04.554 --> 00:01:09.253
you won't run into any conflicts there,
so it's really just about organization.

23
00:01:09.253 --> 00:01:13.313
The other thing though that you
don't want to do is use layers

24
00:01:13.313 --> 00:01:14.991
as a scoping mechanism.

25
00:01:14.991 --> 00:01:18.111
And I'm saying that because this
is one thing that I see people

26
00:01:18.111 --> 00:01:19.314
doing sometimes, is.

27
00:01:19.314 --> 00:01:21.581
They'll do components, and
then they have their cards, and

28
00:01:21.581 --> 00:01:22.726
then they have their buttons.

29
00:01:22.726 --> 00:01:26.826
So they're trying to make a layer
based on exactly what that

30
00:01:26.826 --> 00:01:28.967
class is that's inside of it.

31
00:01:28.967 --> 00:01:32.285
And it feels like that's sort
of what layers should do,

32
00:01:32.285 --> 00:01:34.684
alot of people went to this early on, but

33
00:01:34.684 --> 00:01:39.504
there's drawbacks to doing this because
of the way that the specificity works.

34
00:01:39.504 --> 00:01:43.251
Within layers, because layers are really
about organizing specificity.

35
00:01:43.251 --> 00:01:48.388
They're not about organizing, so we have,
yeah, it's just easier to overwrite.

36
00:01:48.388 --> 00:01:52.176
We're less worried about how specific
a selector is, because I know my utility

37
00:01:52.176 --> 00:01:55.128
class is always the highest precedent and
I can overwrite it.

38
00:01:55.128 --> 00:01:59.022
But because they have that impact on
specificity, the example is right here,

39
00:01:59.022 --> 00:01:59.907
if I did my cards.

40
00:01:59.907 --> 00:02:04.733
And I had this really high level selector
here to put the background color of

41
00:02:04.733 --> 00:02:06.735
a button in a card to be yellow.

42
00:02:06.735 --> 00:02:11.054
And then I did another layer down here
where I'm saying the background would be

43
00:02:11.054 --> 00:02:11.586
purple.

44
00:02:11.586 --> 00:02:14.602
The background would be purple,
even though this is a lower,

45
00:02:14.602 --> 00:02:16.052
it looks lower specificity,

46
00:02:16.052 --> 00:02:19.829
but this sub layer is higher precedence
because it comes after my cards here.

47
00:02:19.829 --> 00:02:23.097
So all of a sudden,
your generic button comes into play, and

48
00:02:23.097 --> 00:02:27.455
then the order of things matters again,
and it becomes a lot bigger of a mess, and

49
00:02:27.455 --> 00:02:29.331
it just gets really complicated.

50
00:02:29.331 --> 00:02:33.976
So just to highlight that here quickly,
we can see it in action,

51
00:02:33.976 --> 00:02:38.792
where it lets us come on my,
we'll just do this in the base layer for

52
00:02:38.792 --> 00:02:43.524
fun, you don't have to replicate
this is just going to highlight

53
00:02:43.524 --> 00:02:47.246
the problems that you can
run into with sub layers.

54
00:02:47.246 --> 00:02:50.382
So say, I came here and I said,

55
00:02:50.382 --> 00:02:54.981
this is my layer of typography,
or heading.

56
00:02:54.981 --> 00:02:58.323
Yeah, we'll do type, typography, and

57
00:02:58.323 --> 00:03:04.146
then over here I do an at layer of,
we'll do a utilities one here as well,

58
00:03:04.146 --> 00:03:08.739
type, how old call it helpers,
or something like that.

59
00:03:08.739 --> 00:03:13.540
So my typography one, I might come in
with a specific one of section title.

60
00:03:13.540 --> 00:03:20.638
And then I do the section title is
going to be a background of blue.

61
00:03:20.638 --> 00:03:23.418
I don't know why we would do that,
but just so we can see it on the page.

62
00:03:23.418 --> 00:03:27.377
And then maybe even this is like
my only if it's an H2, again,

63
00:03:27.377 --> 00:03:29.938
we're boosting the specificity of it.

64
00:03:29.938 --> 00:03:35.319
And then you have a helper class here
that's just like a very generic selector,

65
00:03:35.319 --> 00:03:36.537
h1, h2, h3.

66
00:03:36.537 --> 00:03:41.220
For some reason, as a generic selector,
you do a background of green.

67
00:03:41.220 --> 00:03:44.862
It's a very terrible example, but
you can see that the green is winning,

68
00:03:44.862 --> 00:03:47.274
even though it's lower
specificity selector,

69
00:03:47.274 --> 00:03:49.947
because the layer the importance
of the layers here.

70
00:03:49.947 --> 00:03:55.440
So it's just to say that don't use layers
to target specific elements and don't

71
00:03:55.440 --> 00:04:00.948
create sub-layers, even though it feels
like this really natural thing to do.

72
00:04:00.948 --> 00:04:04.587
Don't use it to create these different
things, like components and then my cards,

73
00:04:04.587 --> 00:04:07.712
my buttons, my other things,
because it's rare that it happened, but

74
00:04:07.712 --> 00:04:11.174
there's this possibility for conflict,
and it becomes really hard to debug.

75
00:04:11.174 --> 00:04:13.905
The dev tools do show you how
the layers are impacting things.

76
00:04:13.905 --> 00:04:16.299
So it does help, but
just to be careful with that, and

77
00:04:16.299 --> 00:04:18.230
don't treat them as scoping mechanisms.

78
00:04:18.230 --> 00:04:22.883
If you do wanna use scope, scope is
a thing in CSS right now ,you can see it's

79
00:04:22.883 --> 00:04:26.686
limited availability as of
the time of creating this course.

80
00:04:26.686 --> 00:04:30.541
It's kind of cool, it's kind of complex,
so I'm not going to dive into it, but

81
00:04:30.541 --> 00:04:31.687
you can look into that.

82
00:04:31.687 --> 00:04:34.550
That's where you could actually scope
styles to a specific selector, and

83
00:04:34.550 --> 00:04:36.231
they won't bleed out of that,
and scope and

84
00:04:36.231 --> 00:04:38.427
layers could work really well together,
potentially.

85
00:04:38.427 --> 00:04:42.663
Just to say, that could be the next level
if you do need that extra complexity for

86
00:04:42.663 --> 00:04:45.146
the organization of your
project as it grows.

