WEBVTT

1
00:00:00.000 --> 00:00:01.377
&gt;&gt; Kevin Powell: Next up
we have our typography.

2
00:00:01.377 --> 00:00:03.902
There's two different fonts
that are being used in here,

3
00:00:03.902 --> 00:00:05.820
we can get that from
the typography guides.

4
00:00:05.820 --> 00:00:10.225
You'll see them both right here in
the list of the fonts being used,

5
00:00:10.225 --> 00:00:13.706
there's Outfit-Bold and
Fira Sans-Regular, and

6
00:00:13.706 --> 00:00:17.047
there's a bit of Fira Sans-Bold
in there as well.

7
00:00:17.047 --> 00:00:21.805
So these are Google fonts just to make our
life a bit easier and a little bit faster.

8
00:00:21.805 --> 00:00:24.480
For this project,
you can just come here and copy this and

9
00:00:24.480 --> 00:00:25.835
bring it into your project.

10
00:00:25.835 --> 00:00:29.574
This will link to the Google fonts for
both Fira Sans and

11
00:00:29.574 --> 00:00:35.121
the Outfit that we'll be using with all
the font weights that you do need to have.

12
00:00:35.121 --> 00:00:37.816
I'd say if you do want to do
a little bit extra on yourself,

13
00:00:37.816 --> 00:00:40.130
I would actually recommend
self-hosting them.

14
00:00:40.130 --> 00:00:43.574
Google Fonts makes it a lot
easier to download things now.

15
00:00:43.574 --> 00:00:46.960
The priority for
them used to be doing it this way, but

16
00:00:46.960 --> 00:00:51.037
self-hosting fonts tends to be
a little bit faster these days.

17
00:00:51.037 --> 00:00:55.567
And you don't give any advantages of
caching cuz there's no cross-site

18
00:00:55.567 --> 00:00:56.963
caching that we have.

19
00:00:56.963 --> 00:01:01.295
But for today, I am just going to do
it the easy way for this project.

20
00:01:01.295 --> 00:01:05.464
And if you wanna take that extra
step to self-host, by all means,

21
00:01:05.464 --> 00:01:08.590
it can be a nice little
bonus that you could do, but

22
00:01:08.590 --> 00:01:11.584
we could bring the two of
them in just like that.

23
00:01:11.584 --> 00:01:16.312
Then in our style sheets, the two things
I would do is we can stay in our root

24
00:01:16.312 --> 00:01:19.686
folder here, and
we can just get those two working.

25
00:01:19.686 --> 00:01:23.652
So again, I like doing --ff, you'll
see a lot of people who are a lot of

26
00:01:23.652 --> 00:01:26.516
times you'll get recommendations for
something,

27
00:01:26.516 --> 00:01:31.088
whoops, that's not what I wanted to do,
but an ff-serif or an ff-sans-serif.

28
00:01:31.088 --> 00:01:33.598
But we have a problem with this one,

29
00:01:33.598 --> 00:01:38.802
serif is both of these fonts
are sans-serif fonts, which you often get.

30
00:01:38.802 --> 00:01:43.693
Different namings that I've used
over the time has been base and

31
00:01:43.693 --> 00:01:46.965
accent, just to separate the two of them.

32
00:01:46.965 --> 00:01:50.490
Is one option if, depending on how
they're being used within the project.

33
00:01:50.490 --> 00:01:53.011
In this case,
I think it's completely fine,

34
00:01:53.011 --> 00:01:56.374
just to say this is our body font
style and this is our heading,

35
00:01:56.374 --> 00:02:00.335
because the headings all use outfit and
the body text all uses Fira Sans.

36
00:02:00.335 --> 00:02:01.946
So I'll be doing it this way,

37
00:02:01.946 --> 00:02:05.173
if you have a different name
that you'd like to use you can.

38
00:02:05.173 --> 00:02:08.485
And it just be "Fira Sans",

39
00:02:08.485 --> 00:02:13.385
sans-serif as a simple
font stack there and

40
00:02:13.385 --> 00:02:18.823
then here you can do "Outfit", sans-serif.

41
00:02:18.823 --> 00:02:23.729
And the reason now that I prefix
things the way I do is because VS Code

42
00:02:23.729 --> 00:02:27.156
makes it a lot easier to
use different styles.

43
00:02:27.156 --> 00:02:31.947
So if I came here and I say my font
family, you don't actually have to

44
00:02:31.947 --> 00:02:36.167
write the whole var and
then start writing everything out.

45
00:02:36.167 --> 00:02:38.222
You can just do -- and then push ff, and

46
00:02:38.222 --> 00:02:40.950
you're going to get a list
of your two font families.

47
00:02:40.950 --> 00:02:44.085
So then you can choose from
the two that you want.

48
00:02:44.085 --> 00:02:47.849
And then for the color, we can do the same
thing, we're gonna change this in a bit.

49
00:02:47.849 --> 00:02:50.439
But for your color, you do --clr-b and

50
00:02:50.439 --> 00:02:54.362
you just get a list of all the ones
that start with what you want.

51
00:02:54.362 --> 00:02:57.301
So it just makes it easier if you're
trying to pick through colors having

52
00:02:57.301 --> 00:02:58.370
a little prefix on there.

53
00:02:58.370 --> 00:02:59.570
Then you get the list and

54
00:02:59.570 --> 00:03:03.120
then you know which one from there
makes your life a little bit faster.

55
00:03:03.120 --> 00:03:06.900
So for now, let's just do that so
we can see if it works.

56
00:03:06.900 --> 00:03:10.993
And again, we can make this the 500 is our
lightest one, just so we can see that we

57
00:03:10.993 --> 00:03:14.582
can see a bit of a brown color on
the page there and see that it's working.

58
00:03:14.582 --> 00:03:18.364
Next up with our typography, one of
the fun things with Figma is when you get

59
00:03:18.364 --> 00:03:22.467
the font sizes from it, most of the time
you're gonna be getting them in pixels.

60
00:03:22.467 --> 00:03:25.485
We're gonna talk a little bit
about pixels versus other units.

61
00:03:25.485 --> 00:03:30.401
The one time you don't wanna be
using pixels is for font sizes.

62
00:03:30.401 --> 00:03:34.692
It's the only time I'm ever gonna
argue on what unit you should use.

63
00:03:34.692 --> 00:03:37.611
And I would generally suggest using REM,

64
00:03:37.611 --> 00:03:41.541
it's what all the font sizes
will be setting up now are.

65
00:03:41.541 --> 00:03:43.539
Again, this just takes a little
bit of time to set up.

66
00:03:43.539 --> 00:03:45.298
If you using some sort of preprocessor,

67
00:03:45.298 --> 00:03:48.206
you can always come up with a calculator
or something else to do it.

68
00:03:48.206 --> 00:03:53.203
The reason I'm saying that is this for
accessibility reasons.

69
00:03:53.203 --> 00:03:56.932
If you set things up in pixels, if a user
is set a specific thing at their browser

70
00:03:56.932 --> 00:03:58.867
level in pixels, it will overwrite it.

71
00:03:58.867 --> 00:04:00.661
If you're doing it in M or REM,

72
00:04:00.661 --> 00:04:04.597
it's going to adjust itself to
whatever the user preferences are.

73
00:04:04.597 --> 00:04:08.528
And usually, if the users actually change
the font size in their preferences,

74
00:04:08.528 --> 00:04:12.005
they've changed it because they
probably want the text to be bigger.

75
00:04:12.005 --> 00:04:14.381
And that means maybe they have bad vision,

76
00:04:14.381 --> 00:04:17.493
could be anything that's
usually probably what it is.

77
00:04:17.493 --> 00:04:20.517
If they end up on your website and
you said 14 pixels, and

78
00:04:20.517 --> 00:04:24.373
this text is really small, they might
zoom in, or they might just leave.

79
00:04:24.373 --> 00:04:27.083
And if people have made those decisions,
we might as well respect them.

80
00:04:27.083 --> 00:04:31.844
So by not having font sizes in pixels,
you're respecting those decisions.

81
00:04:31.844 --> 00:04:35.591
So it does take a little bit of time,
and I'm not gonna once again, just for

82
00:04:35.591 --> 00:04:38.586
the custom properties,
I am going to provide them for you.

83
00:04:38.586 --> 00:04:41.123
Just so you don't have to do all
the calculations yourself on

84
00:04:41.123 --> 00:04:42.626
getting the different font sizes.

85
00:04:42.626 --> 00:04:44.463
It's just a little bit tedious and

86
00:04:44.463 --> 00:04:48.528
we're not learning a ton by just
dividing everything by 16 along the way.

87
00:04:48.528 --> 00:04:53.517
The one question that might come up on
that is the font size 62.5% thing you can

88
00:04:53.517 --> 00:04:55.050
do on your HTML element.

89
00:04:55.050 --> 00:04:55.980
You can do that,

90
00:04:55.980 --> 00:04:59.975
it's sort of fallen out a favor from
everything I've seen these days.

91
00:04:59.975 --> 00:05:03.417
And it's not that hard to work
in REM once you get used to it.

92
00:05:03.417 --> 00:05:06.103
So I've gotten used to working that way,
and

93
00:05:06.103 --> 00:05:09.295
it's how I'm going to be
doing things along the way.

94
00:05:09.295 --> 00:05:12.699
But, ooh, sorry, before we go to there,
we do have the two different font

95
00:05:12.699 --> 00:05:16.175
sizes that we have to deal with for
the small screens and our larger screens.

96
00:05:16.175 --> 00:05:19.265
And this is really where custom
properties help us out a lot.

97
00:05:19.265 --> 00:05:23.745
Because native custom properties in CSS
can be redefined within media queries, so

98
00:05:23.745 --> 00:05:26.505
it just makes life really
easy to be able to do this.

99
00:05:26.505 --> 00:05:29.951
There's also ways you can do fluid type
with Clamp, and other things like that,

100
00:05:29.951 --> 00:05:31.075
that people really like.

101
00:05:31.075 --> 00:05:34.819
I love that, if it's a personal project of
mine, where I'm just figuring out stuff on

102
00:05:34.819 --> 00:05:37.766
my own, and designing it on my own,
I love doing that type of thing.

103
00:05:37.766 --> 00:05:40.260
But when you have these types
of things we are set for

104
00:05:40.260 --> 00:05:43.450
specific things from a Figma file,
it can be really hard to figure

105
00:05:43.450 --> 00:05:46.128
out the calculations to get
fluid typography to work.

106
00:05:46.128 --> 00:05:49.608
So if you wanna go for it, that's awesome,
if you can get it to work,

107
00:05:49.608 --> 00:05:50.752
that's really good.

108
00:05:50.752 --> 00:05:53.946
But I find it's not worth the headache, so

109
00:05:53.946 --> 00:05:57.507
I tend to avoid it in
those types of situations.

110
00:05:57.507 --> 00:06:01.665
So in my root, once again,
we have the colors that we're gonna have,

111
00:06:01.665 --> 00:06:04.207
ooh, sorry, the font sizes we have here.

112
00:06:04.207 --> 00:06:07.173
Same idea as before, of just going up and

113
00:06:07.173 --> 00:06:11.638
down based on my numbering system for
the exact same reason.

114
00:06:11.638 --> 00:06:16.979
But I'm as again, CSS vibes,
my base size is 400 instead of 500 colors,

115
00:06:16.979 --> 00:06:21.938
500 is my middle font size,
my body's font size I always do is 400.

116
00:06:21.938 --> 00:06:25.458
The reason I choose 400 is cuz usually you
don't have a lot of things smaller than

117
00:06:25.458 --> 00:06:26.525
your body's font size.

118
00:06:26.525 --> 00:06:29.169
You'll definitely have one
thing along the way, but

119
00:06:29.169 --> 00:06:31.588
you'll have a lot of font
sizes that are bigger.

120
00:06:31.588 --> 00:06:36.009
So all I'm doing here with those font
sizes is I've taken all the ones we have

121
00:06:36.009 --> 00:06:37.887
here, switch them over to REM.

122
00:06:37.887 --> 00:06:43.039
And just in order from biggest to smallest
font size 300 up to in this case,

123
00:06:43.039 --> 00:06:47.903
I had to go to 1,000 cuz that's how
many different font sizes I had.

124
00:06:47.903 --> 00:06:52.777
So we can copy that, And

125
00:06:52.777 --> 00:06:56.106
bring that into here.

126
00:06:57.230 --> 00:07:02.400
So I think I have my font families,
twice now, we can get rid of those.

127
00:07:02.400 --> 00:07:06.157
And now I have my font sizes
just making sure it works,

128
00:07:06.157 --> 00:07:09.093
we can just come here and say font-size.

129
00:07:09.093 --> 00:07:12.372
And once again, you don't have to
rate the var out, you just do fs, so

130
00:07:12.372 --> 00:07:14.387
you know it's font size, which is handy.

131
00:07:14.387 --> 00:07:17.720
And then, let's just say, I don't know,
600, so that should actually, whoa,

132
00:07:17.720 --> 00:07:19.603
it didn't auto-complete for
me there, okay.

133
00:07:19.603 --> 00:07:21.119
All right we'll do it the long way.

134
00:07:21.119 --> 00:07:26.109
--fs-600, save and my font got bigger or
we can do a 700 for now,

135
00:07:26.109 --> 00:07:29.750
we can see it getting bigger so
we know it's working.

136
00:07:32.181 --> 00:07:35.452
Then we need a media query because
this is for my small screen sizes.

137
00:07:35.452 --> 00:07:39.124
When we get to larger screen sizes,
we do want these font sizes to get bigger.

138
00:07:39.124 --> 00:07:43.633
If you were doing this the old way,
we would just come outside of here, make

139
00:07:43.633 --> 00:07:48.592
a new root selector or a media query, and
then add another root selector in there.

140
00:07:48.592 --> 00:07:53.503
But CSS has nesting now, and nesting is
awesome, and especially for media queries.

141
00:07:53.503 --> 00:07:55.887
It's the best use case for
nesting, in my opinion.

142
00:07:55.887 --> 00:07:58.513
So inside your selector,
you can just throw a media query now.

143
00:07:58.513 --> 00:08:01.598
So inside the root selector, we can do it.

144
00:08:01.598 --> 00:08:03.884
And I'm gonna use
the range syntax as well.

145
00:08:03.884 --> 00:08:09.821
So width &gt; is the same,
I'll just do it first, 760 pixels.

146
00:08:09.821 --> 00:08:12.644
We'll talk about break points after.

147
00:08:12.644 --> 00:08:16.889
760 is a bit of a magic number,
I'm just gonna use it for now,

148
00:08:16.889 --> 00:08:19.102
if we need to adjust it, we will.

149
00:08:19.102 --> 00:08:23.108
As far as the syntax I'm using here,
again, that's the range syntax for

150
00:08:23.108 --> 00:08:23.957
a media query.

151
00:08:23.957 --> 00:08:28.650
They have this in CSS now, which is
great cuz this used to be a min-width,

152
00:08:28.650 --> 00:08:30.554
that would be the same thing.

153
00:08:30.554 --> 00:08:34.325
min-width is always this weird thing cuz
you're putting the word min, but it means

154
00:08:34.325 --> 00:08:38.059
bigger than, which is this weird cognitive
thing that you eventually get used to.

155
00:08:38.059 --> 00:08:41.693
But at the beginning,
I always found it confusing, and

156
00:08:41.693 --> 00:08:44.643
I always noticed people
had trouble with it.

157
00:08:44.643 --> 00:08:48.994
And just saying width &gt; 760,
is a lot easier,

158
00:08:48.994 --> 00:08:55.948
you can do &lt; if you want it the other way,
you can do &lt;=, whoops, there we go.

159
00:08:55.948 --> 00:08:59.868
The same all the different types of
operators, that you'd want or normally do.

160
00:08:59.868 --> 00:09:03.519
So we can have our width &gt; 760 and

161
00:09:03.519 --> 00:09:08.519
then we can redefine those
font sizes wrong way.

162
00:09:09.940 --> 00:09:12.798
So I can just take those
same font sizes again,

163
00:09:12.798 --> 00:09:16.185
I just got all these from Figma,
I redefined them all.

164
00:09:16.185 --> 00:09:19.992
And at the larger font sizes,
I decided what they should be.

165
00:09:19.992 --> 00:09:24.894
So now, when this gets smaller,
that font size should decrease and

166
00:09:24.894 --> 00:09:26.705
increase, there we go.

167
00:09:26.705 --> 00:09:28.884
You can see it's from the small size, and

168
00:09:28.884 --> 00:09:31.882
then it jumps up to a bigger
size at that larger viewport.

169
00:09:31.882 --> 00:09:34.317
So I know that it's actually working.

170
00:09:34.317 --> 00:09:37.323
A couple of really fast things
here before we move on.

171
00:09:37.323 --> 00:09:40.979
You'll notice my font size, 900 and
1000 are the same at small screen sizes.

172
00:09:40.979 --> 00:09:43.071
That's just that part that I talked about,

173
00:09:43.071 --> 00:09:46.636
where at small screens they had to be
the same, but at larger screen sizes,

174
00:09:46.636 --> 00:09:48.918
there's a difference
between the two of them.

175
00:09:48.918 --> 00:09:50.790
This, for me, is the easiest way to do it,

176
00:09:50.790 --> 00:09:53.295
some people don't necessarily
like having it that way.

177
00:09:53.295 --> 00:09:56.268
So if you have a different approach you'd
like to take, by all means, go for it.

178
00:09:56.268 --> 00:09:58.759
But I just said these
are both the same here, but

179
00:09:58.759 --> 00:10:02.016
when we get to the larger screen size,
they're both bigger.

180
00:10:02.016 --> 00:10:05.130
The other thing I did do is,
I'm redeclaring a few of them,

181
00:10:05.130 --> 00:10:06.451
these two stay the same.

182
00:10:06.451 --> 00:10:08.319
There's not really a point in having it.

183
00:10:08.319 --> 00:10:12.184
So we could just do it this way and only
have the ones that are actually changing

184
00:10:12.184 --> 00:10:14.746
at larger screen sizes,
that's perfectly fine.

