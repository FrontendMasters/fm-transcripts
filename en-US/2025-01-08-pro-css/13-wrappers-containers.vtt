WEBVTT

1
00:00:00.000 --> 00:00:03.377
&gt;&gt; Kevin Powell: Next up, we wanna start
talking about layout a little bit.

2
00:00:03.377 --> 00:00:06.630
And I mentioned that I wanna start doing
it from sort of a big picture point of

3
00:00:06.630 --> 00:00:08.712
view and
then working our way down a little bit.

4
00:00:08.712 --> 00:00:12.915
So for me, a big picture point of view
is creating some sort of wrapper or

5
00:00:12.915 --> 00:00:13.696
container.

6
00:00:13.696 --> 00:00:16.762
I'm gonna talk about the naming
of them in a second, but

7
00:00:16.762 --> 00:00:19.188
I'm just gonna full screen this right now.

8
00:00:19.188 --> 00:00:22.751
This we can see the content right now is
stretching from one side of the page to

9
00:00:22.751 --> 00:00:25.325
the other,
which we definitely don't wanna happen.

10
00:00:25.325 --> 00:00:30.395
In most designs you get, there'll
always be some sort of limitation on

11
00:00:30.395 --> 00:00:36.068
the total width of things, and so this is
a very common design pattern to end up.

12
00:00:36.068 --> 00:00:38.132
I'll just put that here.

13
00:00:38.132 --> 00:00:40.925
To have your containers or your wrappers,

14
00:00:40.925 --> 00:00:44.349
I didn't put any in when I
was going through things.

15
00:00:44.349 --> 00:00:47.026
Again, if you did already, that's awesome.

16
00:00:47.026 --> 00:00:50.320
But all the way up at the top here,
where I have my site-header,

17
00:00:50.320 --> 00:00:52.156
I do wanna limit the width of those.

18
00:00:52.156 --> 00:00:55.029
So in the site-header,
I could just come in.

19
00:00:55.029 --> 00:00:56.125
There's two ways of doing this.

20
00:00:56.125 --> 00:01:00.125
If you did it like I did,
where you did everything already,

21
00:01:00.125 --> 00:01:04.210
you can actually select within VS Code,
everything there.

22
00:01:04.210 --> 00:01:07.894
If you're on Windows,
it'd be Ctrl + Shift key, you're on Mac,

23
00:01:07.894 --> 00:01:12.048
CMD + Shift key, and you hit wrap, and
it gives you a wrap with emit option.

24
00:01:12.048 --> 00:01:16.939
And once you've select that, I'm just
gonna push Enter or Return on my keyboard.

25
00:01:16.939 --> 00:01:21.964
And then I can do .wrapper and
hit Enter, and it wraps the whole thing.

26
00:01:21.964 --> 00:01:25.416
So my starting wrapper is there and
the ending one is there.

27
00:01:25.416 --> 00:01:28.366
If you don't like using that,
we can just manually do it,

28
00:01:28.366 --> 00:01:30.728
I'll probably do that for
the next sections.

29
00:01:30.728 --> 00:01:34.886
But we do wanna have this, or
as I keep saying, wrapper or container,

30
00:01:34.886 --> 00:01:38.208
because the really common name for
these is container.

31
00:01:38.208 --> 00:01:42.015
The common but not as common is wrapper.

32
00:01:42.015 --> 00:01:44.294
I used to use container all the time.

33
00:01:44.294 --> 00:01:47.649
Every time I did it,
it was just the name I liked, and

34
00:01:47.649 --> 00:01:50.794
wrapper was used as well,
but I like container.

35
00:01:50.794 --> 00:01:55.378
And then we got container queries in CSS,
and I find having a container query and

36
00:01:55.378 --> 00:02:00.316
then having a class that's container that
has nothing to do with container queries.

37
00:02:00.316 --> 00:02:01.722
Potentially confusing.

38
00:02:01.722 --> 00:02:05.107
So that's why I switched and
started calling them wrapper.

39
00:02:05.107 --> 00:02:09.179
But again, the naming convention for
those is completely up to you.

40
00:02:09.179 --> 00:02:14.764
So inside my hero, once again, we can come
in and I'm just gonna do it this way.

41
00:02:14.764 --> 00:02:18.480
Instead, I can do a wrapper,
grab that closing div, and

42
00:02:18.480 --> 00:02:23.061
just drag it down to where I want it
to go instead of using the shortcut.

43
00:02:23.061 --> 00:02:28.490
It doesn't really matter how you go
through, whether you're using the shortcut

44
00:02:28.490 --> 00:02:34.168
to wrap things or we're doing it this way,
.wrapper, hit Tab, grab that one here.

45
00:02:34.168 --> 00:02:37.708
It's a little bit hard when you're
dragging to know where you want it to end,

46
00:02:37.708 --> 00:02:40.009
you're just looking for
those closed sections.

47
00:02:40.009 --> 00:02:43.070
This is also specific to this design,
just before we go through it,

48
00:02:43.070 --> 00:02:46.364
because in this design, we have
these alternating background colors.

49
00:02:46.364 --> 00:02:49.691
If you don't have alternating background
colors like this, then you might be able

50
00:02:49.691 --> 00:02:52.416
to get away with one single one and
put all the sections inside of it.

51
00:02:52.416 --> 00:02:56.485
So it really depends project to project on
how you're gonna have to organize this.

52
00:02:56.485 --> 00:02:59.617
But because we do have the alternating
background colors where we need

53
00:02:59.617 --> 00:03:02.815
the background to stretch the whole size,
this is the easy way to do it.

54
00:03:02.815 --> 00:03:07.702
There are some interesting CSS tricks
where you could actually get background

55
00:03:07.702 --> 00:03:12.530
colors to bleed outside of wrappers,
but I don't wanna get into doing that.

56
00:03:12.530 --> 00:03:19.388
It's kind of weird and you might come
across it in the future, actually.

57
00:03:19.388 --> 00:03:22.420
And people might not understand
what's actually happening, or

58
00:03:22.420 --> 00:03:25.904
you won't understand your own code cuz
it's kind of strange how it works.

59
00:03:25.904 --> 00:03:28.345
So I like keeping things simple.

60
00:03:28.345 --> 00:03:31.004
There's also ways of doing this with grid.

61
00:03:31.004 --> 00:03:34.414
We have a grid set on your body and then
the contents being placed inside of it.

62
00:03:34.414 --> 00:03:38.887
It's a pattern that I actually kind of
like, but on a project of this size,

63
00:03:38.887 --> 00:03:42.082
I'd like just coming in and
making sure I have these,

64
00:03:42.082 --> 00:03:45.717
even if it's a little bit tedious
to add them after the fact.

65
00:03:45.717 --> 00:03:47.031
I'm not gonna put one in my footer.

66
00:03:47.031 --> 00:03:50.367
You could put one, but
our content is so small.

67
00:03:50.367 --> 00:03:53.055
Maybe I'll regret it and
I'll have to add one later, but

68
00:03:53.055 --> 00:03:55.298
I think I'm gonna leave mine like that for
now.

69
00:03:55.298 --> 00:03:57.209
And then we can come up to my styles and

70
00:03:57.209 --> 00:03:59.500
we need to decide where
we're gonna put it.

71
00:03:59.500 --> 00:04:03.971
And if you're using layers,
I'm just gonna collapse the ones we have,

72
00:04:03.971 --> 00:04:06.039
we created our reset, our base.

73
00:04:06.039 --> 00:04:07.416
We have utilities and

74
00:04:07.416 --> 00:04:11.859
you have to decide where you think
something like wrapper should go.

75
00:04:11.859 --> 00:04:13.997
I personally like having a layout.

76
00:04:13.997 --> 00:04:18.478
The idea of putting it in the base makes
sense to me just cuz it is something

77
00:04:18.478 --> 00:04:20.618
that's sort of generic general.

78
00:04:20.618 --> 00:04:23.704
So if you're throwing it in there,
I think it's fine.

79
00:04:23.704 --> 00:04:24.982
Oops, I did layout.

80
00:04:24.982 --> 00:04:28.437
I do this all the time, and then can't
figure out why my CSS is broken.

81
00:04:28.437 --> 00:04:31.840
It's layer layout.

82
00:04:31.840 --> 00:04:35.693
The reason I like doing it this way,

83
00:04:35.693 --> 00:04:41.099
my layout classes are gonna
be very generic ones.

84
00:04:41.099 --> 00:04:45.057
It's not gonna be a specific layout for,
say, the bento grid, we do the bento grid.

85
00:04:45.057 --> 00:04:47.496
No, I'll probably make that a component.

86
00:04:47.496 --> 00:04:52.437
But I just like separating away from the
base just because it sort of gives me more

87
00:04:52.437 --> 00:04:57.333
things to organize things in, and it
makes it easier for me to find something.

88
00:04:57.333 --> 00:05:00.651
I know if it's very generic,
it's styling my element selectors,

89
00:05:00.651 --> 00:05:02.056
it's probably in the base.

90
00:05:02.056 --> 00:05:07.349
If it has to do with layout in any way or
generic layout, it's in my layout one.

91
00:05:07.349 --> 00:05:09.871
Again, if it's a utility,
it goes in my utilities and so on.

92
00:05:09.871 --> 00:05:13.326
But the way I'm setting up my
layers is definitely not the way

93
00:05:13.326 --> 00:05:17.548
you necessarily have to set them up,
I just wanna make that really clear.

94
00:05:17.548 --> 00:05:23.441
.wrapper or .container, and we have to
decide how we're going to do this as well,

95
00:05:23.441 --> 00:05:29.258
because as I mentioned, we have three
different ones, right, actually better.

96
00:05:29.258 --> 00:05:33.422
Let's go back to the course website for a
second, just because here I took a picture

97
00:05:33.422 --> 00:05:36.477
with some lines on it to show us
that we have variations of it.

98
00:05:36.477 --> 00:05:39.751
So we have to decide how we're gonna
create the variations of it and

99
00:05:39.751 --> 00:05:40.753
which one ideally.

100
00:05:40.753 --> 00:05:44.481
If you do have variations,
you probably have a default one, and

101
00:05:44.481 --> 00:05:47.389
then the variations based
off of the default one.

102
00:05:47.389 --> 00:05:50.829
So you have to decide
which one the default is.

103
00:05:50.829 --> 00:05:54.147
I tend to choose sort of with my colors,
where I like having a middle and

104
00:05:54.147 --> 00:05:57.706
then things that get lighter and darker,
or font sizes that go up and down.

105
00:05:57.706 --> 00:06:00.375
I tend to do the same
thing with my layouts,

106
00:06:00.375 --> 00:06:03.646
where I choose the middle
one as sort of the default.

107
00:06:03.646 --> 00:06:05.749
Again, it depends on the project, but

108
00:06:05.749 --> 00:06:10.351
it could be the most commonly used one as
well, again, looking across all the pages.

109
00:06:10.351 --> 00:06:14.167
So it depends project to project
a little bit on that front, but

110
00:06:14.167 --> 00:06:17.623
I'm gonna choose this top one
as my default wrapper, and

111
00:06:17.623 --> 00:06:21.080
then we can modify them for
these two that are right here.

112
00:06:21.080 --> 00:06:24.684
The other fun part is figuring out
how big it should actually be,

113
00:06:24.684 --> 00:06:27.974
cuz there is a bit of a problem
in getting sizes from Figma.

114
00:06:27.974 --> 00:06:32.028
So I can just click into these and
I can see it.

115
00:06:32.028 --> 00:06:35.060
And again, my UI is super small,
but on the right side,

116
00:06:35.060 --> 00:06:38.103
you should see what the actual
width is of that element.

117
00:06:38.103 --> 00:06:41.951
And so that sort of can inform
you on what the size is gonna be,

118
00:06:41.951 --> 00:06:45.202
but we'll see what the problem
with doing that is.

119
00:06:45.202 --> 00:06:50.242
So in this case,
I'm gonna do a max-width of 1130,

120
00:06:50.242 --> 00:06:57.286
whoops, that's Num Lock is off, 1130,
which is the size from the Figma.

121
00:06:57.286 --> 00:07:02.201
That's the width, it might be 31 or
something, I'm gonna round it off a bit.

122
00:07:02.201 --> 00:07:06.023
If we do that, we need a margin, and
I'm gonna use the logical property.

123
00:07:06.023 --> 00:07:10.302
I talked a little bit about it before,
but a margin-inline of auto.

124
00:07:10.302 --> 00:07:12.985
The nice thing with margin-inline,
it's the inline axis,

125
00:07:12.985 --> 00:07:16.606
so it's your left to right axis, and it's
not gonna touch the top and bottom ones.

126
00:07:16.606 --> 00:07:21.719
Sometimes you'll see just
a regular margin: 0 auto,

127
00:07:21.719 --> 00:07:26.742
just cuz we don't wanna touch the top and
bottom ones.

128
00:07:26.742 --> 00:07:27.846
So we're just saying it's 0.

129
00:07:27.846 --> 00:07:29.119
It was already 0.

130
00:07:29.119 --> 00:07:33.005
And potentially, you could run into
a time where you have a utility or

131
00:07:33.005 --> 00:07:36.825
something else where you actually
need to add margin on one of them.

132
00:07:36.825 --> 00:07:42.528
And then if you add a margin shorthand,
it overwrites this, it causes problems.

133
00:07:42.528 --> 00:07:47.233
So I only want a margin on the left and
right, so I like doing the margin-inline.

134
00:07:47.233 --> 00:07:50.665
It's a nice quality of life
thing I find as a developer.

135
00:07:50.665 --> 00:07:53.617
And the last thing is,
at small screen sizes,

136
00:07:53.617 --> 00:07:58.624
it's still stuck to the side of the page,
which I don't want it to be stuck to.

137
00:07:58.624 --> 00:08:01.224
So I would generally
look at the Figma file.

138
00:08:01.224 --> 00:08:04.539
Go over to the mobile version of it, and

139
00:08:04.539 --> 00:08:08.762
just get the space that's
coming between these.

140
00:08:08.762 --> 00:08:11.990
Again, generally, you could either do
math, get the width of the big one,

141
00:08:11.990 --> 00:08:13.314
get the width of the small one.

142
00:08:13.314 --> 00:08:18.100
You could draw a box, sometimes
the design will actually be provided,

143
00:08:18.100 --> 00:08:20.672
but I'll just let you know this time.

144
00:08:20.672 --> 00:08:24.897
And I'm gonna do padding-inline, cuz
again, I want this only on the left and

145
00:08:24.897 --> 00:08:25.546
the right.

146
00:08:25.546 --> 00:08:28.169
It's 16 pixels, I'm gonna 1rem.

147
00:08:28.169 --> 00:08:31.433
If you prefer pixels,
you can definitely do 16 pixels,

148
00:08:31.433 --> 00:08:34.438
it's not gonna cause a big
issue one way or the other.

149
00:08:34.438 --> 00:08:38.798
I've just gotten so accustomed to
using rem, I use them for everything.

150
00:08:38.798 --> 00:08:42.161
But if you prefer pixels for
spacing and other things like that,

151
00:08:42.161 --> 00:08:45.225
when people zoom in out,
the pixel gets modified anyway.

152
00:08:45.225 --> 00:08:48.738
So the difference between the two in
this case is gonna be very, very small.

153
00:08:48.738 --> 00:08:52.765
There's a few edge cases where you
might see a few differences, but

154
00:08:52.765 --> 00:08:53.904
that should work.

155
00:08:53.904 --> 00:08:57.749
We can see now I have a bit of
space around the sides, and

156
00:08:57.749 --> 00:09:01.523
if I did this properly,
when I go larger, here we go.

157
00:09:01.523 --> 00:09:02.372
We're holding your content.

158
00:09:02.372 --> 00:09:06.122
We're wrapping our content,
we're preventing it from getting too big.

159
00:09:06.122 --> 00:09:08.427
So that's off to a decent start.

160
00:09:08.427 --> 00:09:10.455
Nothing amazing, but a nice simple win.

161
00:09:10.455 --> 00:09:13.687
I wanna talk about the problem
with the max-width here.

162
00:09:13.687 --> 00:09:17.827
This max-width is based on
exactly the max-width that I

163
00:09:17.827 --> 00:09:19.990
grabbed from the Figma file.

164
00:09:19.990 --> 00:09:24.082
When I came to here and
I got the width of this area,

165
00:09:24.082 --> 00:09:30.820
which if I double-click enough,
there we go, that'd be 1130 pixels wide.

166
00:09:30.820 --> 00:09:34.901
The problem now is when I
added this padding-inline,

167
00:09:34.901 --> 00:09:39.792
it's actually because we did
the box sizing change in our reset.

168
00:09:39.792 --> 00:09:42.860
That 1130 is 16 pixels
smaller on each side now,

169
00:09:42.860 --> 00:09:45.336
we've actually reduced that total space.

170
00:09:45.336 --> 00:09:47.809
This is one of the problems in
getting sizes out of Figma.

171
00:09:47.809 --> 00:09:50.950
If it's a width or a max-width that
you're getting from something,

172
00:09:50.950 --> 00:09:54.357
you do have to be careful about the width
of the element plus how the padding is

173
00:09:54.357 --> 00:09:55.389
interacting with it.

174
00:09:55.389 --> 00:09:57.488
In a lot of cases,
you're gonna be completely fine.

175
00:09:57.488 --> 00:09:58.896
If it's an isolated component,

176
00:09:58.896 --> 00:10:01.168
you probably not even getting
the width of it anyway.

177
00:10:01.168 --> 00:10:07.898
But in a case like this, [LAUGH] this is
something I've recently started doing,

178
00:10:07.898 --> 00:10:14.335
is actually saying that the box-sizing
of this one thing is content-box.

179
00:10:14.335 --> 00:10:17.868
And resetting this one thing
back to what the default was.

180
00:10:17.868 --> 00:10:19.683
I don't do this on personal projects or

181
00:10:19.683 --> 00:10:22.433
things that aren't based
specifically on a Figm file, but

182
00:10:22.433 --> 00:10:25.405
I've run into enough things in
Figma where I grab the size of it.

183
00:10:25.405 --> 00:10:27.773
And then when I get to here,
my line breaks are all messed up, or

184
00:10:27.773 --> 00:10:30.114
the width isn't matching exactly
what I thought it would be.

185
00:10:30.114 --> 00:10:34.166
And it's just because of the padding
reducing the actual max-width,

186
00:10:34.166 --> 00:10:36.202
the content is a little bit narrow.

187
00:10:36.202 --> 00:10:39.362
And with 1rem, you won't see it too much,
but if you go up to 2, or

188
00:10:39.362 --> 00:10:42.312
you have bigger padding on the sides,
you see it more and more.

189
00:10:42.312 --> 00:10:44.478
There's definitely other
ways of accomplishing this.

190
00:10:44.478 --> 00:10:50.138
You can actually do a calc here to bring
the padding back into the total size.

191
00:10:50.138 --> 00:10:54.167
If you prefer that, you could definitely
do it with that approach, but

192
00:10:54.167 --> 00:10:55.050
I don't know.

193
00:10:55.050 --> 00:10:58.517
This works and it's simple,
so I tend to do that.

194
00:10:58.517 --> 00:11:01.814
If you do it, and this is something
you're gonna be working on,

195
00:11:01.814 --> 00:11:05.477
you might wanna put a comment here
about why you're actually doing it,

196
00:11:05.477 --> 00:11:07.387
cuz it might be kinda weird to see it.

197
00:11:07.387 --> 00:11:10.423
This is not conventional, you will
not see a lot of people doing this.

198
00:11:10.423 --> 00:11:13.760
But when working with Figma files,
every now and then,

199
00:11:13.760 --> 00:11:16.539
I found that it can actually
be useful to do it.

200
00:11:16.539 --> 00:11:21.067
But yeah, just really fast,
if you'd prefer the other one,

201
00:11:21.067 --> 00:11:26.568
you could do a calc, and it's + 2rem,
or the pixel value, or whatever.

202
00:11:26.568 --> 00:11:30.746
You do need to double whatever this
value is because it's 16 on each side or

203
00:11:30.746 --> 00:11:31.872
1rem on each side.

204
00:11:31.872 --> 00:11:35.278
So it's either something like that or
something like this,

205
00:11:35.278 --> 00:11:37.898
you can choose which one
you'd prefer to use.

206
00:11:37.898 --> 00:11:42.518
I don't know, the math here,
I don't think we really need it, but

207
00:11:42.518 --> 00:11:47.070
if you prefer that approach,
there's no problems with it at all.

208
00:11:49.854 --> 00:11:53.117
&gt;&gt; Kevin Powell: There's another way we
could actually do this without doing it

209
00:11:53.117 --> 00:11:56.252
this way, that just uses a width and
uses a min function, and

210
00:11:56.252 --> 00:11:58.794
you could definitely go
down that route as well.

211
00:11:58.794 --> 00:12:02.999
I like it, but just for simplicity,
this works really well.

212
00:12:02.999 --> 00:12:06.296
I think this type of approach
is a nice way to go, but

213
00:12:06.296 --> 00:12:10.994
it does leave us with the question of
how we can make modifiers from here.

214
00:12:10.994 --> 00:12:16.468
And so
one option is we have our wrapper-wide.

215
00:12:16.468 --> 00:12:20.748
This would be the demo way of doing it,
wide.

216
00:12:20.748 --> 00:12:26.242
And then you have a wrapper--narrow,
let's say, something like that.

217
00:12:26.242 --> 00:12:32.226
Oops, this is probably the most
common way people create modifiers.

218
00:12:32.226 --> 00:12:36.841
If you haven't seen Bem before and you're
wondering why I'm doing double hyphen,

219
00:12:36.841 --> 00:12:41.196
the Bem approach, the double hyphen,
is just to say that we're taking this and

220
00:12:41.196 --> 00:12:43.549
then making a slight change or
tweak to it.

221
00:12:43.549 --> 00:12:46.929
So we change the max-width
either to be bigger or smaller.

222
00:12:46.929 --> 00:12:52.621
This is probably the most common
way that I see people do things.

223
00:12:52.621 --> 00:12:55.904
So if this is how you prefer working,
100% go that way.

224
00:12:55.904 --> 00:12:59.589
I'm gonna offer up an alternative and I'll
let you decide which one you like better.

225
00:12:59.589 --> 00:13:04.955
And the alternative is to
instead use the data attribute,

226
00:13:04.955 --> 00:13:12.746
which looks kind of weird if you've never
seen it before, equals, let's say, y.

227
00:13:12.746 --> 00:13:14.876
And doing it that way,
and people will be like,

228
00:13:14.876 --> 00:13:17.129
why would you do a modifier
with a data attribute?

229
00:13:17.129 --> 00:13:19.874
It looks kinda strange,
it's not something we're used to seeing.

230
00:13:19.874 --> 00:13:23.347
I agree,
it does raise the specificity as well,

231
00:13:23.347 --> 00:13:28.359
cuz now we have a class selector,
plus we have an attribute selector.

232
00:13:28.359 --> 00:13:29.400
With the wrapper,

233
00:13:29.400 --> 00:13:33.836
it's maybe not the type of thing where
you'd actually run into an issue with it.

234
00:13:33.836 --> 00:13:37.331
But with other things that have modifiers,
like buttons, where you

235
00:13:37.331 --> 00:13:41.438
might actually be hooking into it with
JavaScript to change the button, state.

236
00:13:41.438 --> 00:13:44.586
Or change the way the button looks,
or other things, data attributes or

237
00:13:44.586 --> 00:13:45.729
JavaScript are the best.

238
00:13:45.729 --> 00:13:49.600
And they're easier to deal with with
classes, cuz sometimes you may have three

239
00:13:49.600 --> 00:13:53.268
classes, and then having to remove one
of them or change only one of those.

240
00:13:53.268 --> 00:13:56.885
If you have data attributes,
it's just a lot easier to work with.

241
00:13:56.885 --> 00:14:02.584
And depending on what you think, but let's
say this two column area needs to be wide.

242
00:14:02.584 --> 00:14:08.714
So you can have wrapper wrapper--wide,
like that, which completely fine.

243
00:14:08.714 --> 00:14:13.926
If I did it with data attributes,
I'm just gonna do

244
00:14:13.926 --> 00:14:19.515
it on multiple lines, and
say, data-width = wide.

245
00:14:19.515 --> 00:14:23.453
I just find it's very
clear what's happening.

246
00:14:23.453 --> 00:14:27.533
So I have a wrapper and
my wrapper has a width of wide.

247
00:14:27.533 --> 00:14:29.665
Again, it comes really down
to personal preference.

248
00:14:29.665 --> 00:14:33.090
I know a lot of people don't like this,
or it makes them feel icky or

249
00:14:33.090 --> 00:14:35.306
strange, probably cuz it's different.

250
00:14:35.306 --> 00:14:38.374
If that's the case, I would actually
recommend that you try doing it for

251
00:14:38.374 --> 00:14:40.751
this project just because
it's something different.

252
00:14:40.751 --> 00:14:43.504
And whenever you come across different
things that feel different or strange or

253
00:14:43.504 --> 00:14:46.273
that you shouldn't do them, it's worth
experimenting with it and trying it.

254
00:14:46.273 --> 00:14:48.780
And then at the end, you'll be like,
no, I still hate it, and that's fine.

255
00:14:48.780 --> 00:14:51.930
You just go back to using
the regular modifiers after.

256
00:14:51.930 --> 00:14:54.755
If you really don't wanna use this and
you wanna use modifiers,

257
00:14:54.755 --> 00:14:55.968
that's completely fine.

258
00:14:55.968 --> 00:15:00.037
There is one last advantage to
the data attributes, though,

259
00:15:00.037 --> 00:15:01.925
it allows us to use nesting.

260
00:15:01.925 --> 00:15:06.306
So I could do like this instead,
with an ampersand, and

261
00:15:06.306 --> 00:15:10.981
we used a little bit of nesting
with our media query before.

262
00:15:10.981 --> 00:15:18.513
So let's just come here,
max-width is, there we go.

263
00:15:18.513 --> 00:15:20.598
I think this one is 1330.

264
00:15:22.433 --> 00:15:25.699
&gt;&gt; Kevin Powell: So, we could do
it this way with the ampersand.

265
00:15:25.699 --> 00:15:28.275
And when you're using nesting in CSS,

266
00:15:28.275 --> 00:15:33.360
the ampersand is just a placeholder for
the initial selector on the outside.

267
00:15:33.360 --> 00:15:37.821
So this would just be wrapper.data-width
= wide, and this would work.

268
00:15:37.821 --> 00:15:43.247
If you're using a preprocessor or
a post-processor, something like Sass or

269
00:15:43.247 --> 00:15:48.356
post CSS, their nesting would allow
you to do this, and that would work.

270
00:15:48.356 --> 00:15:51.162
In native CSS, this doesn't work.

271
00:15:51.162 --> 00:15:54.184
You can't put this here
because the ampersand

272
00:15:54.184 --> 00:15:56.981
in native CSS is actually a live selector.

273
00:15:56.981 --> 00:16:00.494
It's a placeholder, but
it's not getting compiled to anything.

274
00:16:00.494 --> 00:16:04.447
So writing it this way would actually be
the same thing as writing it like this.

275
00:16:04.447 --> 00:16:08.460
And that's just gibberish,
it doesn't mean anything at all,

276
00:16:08.460 --> 00:16:13.012
cuz the browser doesn't know what this is,
basically, the --wide.

277
00:16:13.012 --> 00:16:17.721
So one of the reasons I do like the data
attributes as well is because I can

278
00:16:17.721 --> 00:16:19.224
nest them in this way.

279
00:16:19.224 --> 00:16:23.214
And again, that's the equivalent
of not nesting it, and

280
00:16:23.214 --> 00:16:26.560
this is the placeholder for
my .wrapper there.

281
00:16:26.560 --> 00:16:29.432
One thing people don't like with
the ampersand usually comes into

282
00:16:29.432 --> 00:16:31.078
the readability of it's a bit weird.

283
00:16:31.078 --> 00:16:35.853
You do get used to it, and because this
is part of native CSS, if we come and

284
00:16:35.853 --> 00:16:39.010
take a look at that area
where I have the wide one,

285
00:16:39.010 --> 00:16:41.880
which I think is this
area in your DevTools.

286
00:16:41.880 --> 00:16:45.474
It wasn't that one,
I'll make this bigger in a second.

287
00:16:45.474 --> 00:16:47.043
I think I screwed up something.

288
00:16:47.043 --> 00:16:50.528
No, it's probably the section or this one.

289
00:16:53.116 --> 00:16:54.859
&gt;&gt; Kevin Powell: I didn't save my file.

290
00:16:58.274 --> 00:17:00.658
&gt;&gt; Kevin Powell: Wrapper,
there's the wide one.

291
00:17:00.658 --> 00:17:05.581
Okay, so if I make this a bit bigger,
you can actually see that the selector

292
00:17:05.581 --> 00:17:08.802
here is exactly the same
selector I'm getting.

293
00:17:08.802 --> 00:17:12.007
In the days of preprocessors,
the compiled CSS would be different.

294
00:17:12.007 --> 00:17:14.597
You wouldn't be able to find
that selector directly,

295
00:17:14.597 --> 00:17:16.243
it would change when it compiled.

296
00:17:16.243 --> 00:17:19.428
Here you can see the line of
code that it's written on, and

297
00:17:19.428 --> 00:17:21.707
you can see exactly what the selector is.

298
00:17:21.707 --> 00:17:23.020
So it's a little bit up to you.

299
00:17:23.020 --> 00:17:25.601
Again, if you don't like nesting,
you don't have to nest it.

300
00:17:25.601 --> 00:17:27.600
If you don't like the data
attribute on here,

301
00:17:27.600 --> 00:17:29.452
you don't have to use the data attribute.

302
00:17:29.452 --> 00:17:33.987
But for me, I'm really partial to this,
and we're gonna see other use cases of

303
00:17:33.987 --> 00:17:38.541
creating modifiers like this that might
convince you that it's not a bad idea.

304
00:17:43.742 --> 00:17:48.134
&gt;&gt; Speaker 2: Hey, Kevin, since
padding is being used with a rem unit,

305
00:17:48.134 --> 00:17:54.336
when a person has a larger default browser
font, will they have a larger padding?

306
00:17:54.336 --> 00:17:55.593
And is that a problem?

307
00:17:55.593 --> 00:17:58.782
&gt;&gt; Kevin Powell: Yes, so
they would have a larger padding.

308
00:17:58.782 --> 00:18:05.132
In general, because I use rem everywhere,
everything's scaling up.

309
00:18:05.132 --> 00:18:09.404
And so if they've boosted things enough, I
sort of want all of that scaling to happen

310
00:18:09.404 --> 00:18:12.427
together, which is why I tend
to use rem for a lot of things.

311
00:18:12.427 --> 00:18:15.454
Not so much for
the spacing down the sides, but

312
00:18:15.454 --> 00:18:18.334
say you're doing it with
a gutter on a grid.

313
00:18:18.334 --> 00:18:21.213
If all of a sudden all of the grid
stuff is getting bigger, but

314
00:18:21.213 --> 00:18:25.408
the gap is still only 16 pixels, they're
almost gonna look like they're touching.

315
00:18:25.408 --> 00:18:28.387
Whereas, if that gap is
increasing in size as well,

316
00:18:28.387 --> 00:18:30.906
it just creates a bit
more of a consistency.

317
00:18:30.906 --> 00:18:35.160
But it's definitely also one of those
things that you probably wanna test and

318
00:18:35.160 --> 00:18:37.005
just see what actually happens.

319
00:18:37.005 --> 00:18:41.206
And there's definitely arguments for both
sides on that, and I've seen both, and

320
00:18:41.206 --> 00:18:42.281
they're both good.

321
00:18:42.281 --> 00:18:46.982
So I think, yeah, it's a hard one
to have a definitive answer for.

