WEBVTT

1
00:00:00.000 --> 00:00:01.576
&gt;&gt; Kevin Powell: So
to create the filtering,

2
00:00:01.576 --> 00:00:04.013
we could include this
in our main file here.

3
00:00:04.013 --> 00:00:05.974
So if you wanna do that,
that's completely fine.

4
00:00:05.974 --> 00:00:09.436
I'm just gonna do it in a separate file
'cuz that way, for our own purposes,

5
00:00:09.436 --> 00:00:10.729
it keeps it more organized.

6
00:00:10.729 --> 00:00:13.776
We won't get mixed up with the two
different bits of JavaScript that

7
00:00:13.776 --> 00:00:14.421
are going on.

8
00:00:14.421 --> 00:00:17.257
Plus, we only need it on this page anyway.

9
00:00:17.257 --> 00:00:24.055
So we can just do mushroom-filtering.js,
or maybe mushroom-filter.js.

10
00:00:24.055 --> 00:00:28.558
And [LAUGH] as usual,
never forget when you do this,

11
00:00:28.558 --> 00:00:34.229
that you wanna go back and
make sure you add the link to that file.

12
00:00:34.229 --> 00:00:35.716
So, we can come all the way back up.

13
00:00:35.716 --> 00:00:37.799
I have this script here.

14
00:00:37.799 --> 00:00:39.879
Let's just close that for a second.

15
00:00:39.879 --> 00:00:43.207
And I can come in with another script,

16
00:00:43.207 --> 00:00:47.687
src="/mushroom-filter, and I can defer it.

17
00:00:47.687 --> 00:00:48.304
Now, in here,

18
00:00:48.304 --> 00:00:51.207
we're gonna need three different
things that we're gonna need to get.

19
00:00:51.207 --> 00:00:53.157
The first one is we need
to get all of the cards,

20
00:00:53.157 --> 00:00:56.070
cuz we're gonna need to look at those
cards to be able to filter them.

21
00:00:56.070 --> 00:01:00.584
So we need to say const cards and

22
00:01:00.584 --> 00:01:05.453
document.querySelectorAll.

23
00:01:05.453 --> 00:01:08.867
In the last time we did it, it was a query
selector cuz we only needed one element.

24
00:01:08.867 --> 00:01:12.224
This time, I need a lot of elements,
so I'm gonna get all.

25
00:01:12.224 --> 00:01:15.729
And on this page,
we have more than one set of cards.

26
00:01:15.729 --> 00:01:18.997
I have these cards here, but
our Bento, we also use cards as well.

27
00:01:18.997 --> 00:01:23.921
But this is always just a CSS selector,
and we have that mushroom guide parent.

28
00:01:23.921 --> 00:01:27.327
So I can say '.mushroom.guide
space .card', and

29
00:01:27.327 --> 00:01:30.297
it scopes that selector or
the variable there.

30
00:01:30.297 --> 00:01:34.753
So we're only getting the cards that
are inside of our mushroom guide.

31
00:01:34.753 --> 00:01:39.210
The other thing we need to get is we
need to know what's selected from our

32
00:01:39.210 --> 00:01:40.413
two selects here.

33
00:01:40.413 --> 00:01:45.498
So to be able to do that,
we can come in with a const of,

34
00:01:45.498 --> 00:01:52.964
we'll do a seasonalFilter is going to
be equal to document.querySelector.

35
00:01:52.964 --> 00:01:59.335
And for that, I just recently put that id
on there, so we can do the id of #season.

36
00:01:59.335 --> 00:02:06.250
And const edibleFilter =
document.querySelector and

37
00:02:06.250 --> 00:02:11.441
the id of #edible on that one right there.

38
00:02:11.441 --> 00:02:16.228
Before we do anything else,
we need to keep track of which filters

39
00:02:16.228 --> 00:02:20.504
are actually selected at any
given time with JavaScript.

40
00:02:20.504 --> 00:02:24.330
So the easiest thing to do, in my opinion,
is to create an object at the beginning

41
00:02:24.330 --> 00:02:26.713
that will update to be able
to keep track of those.

42
00:02:26.713 --> 00:02:30.174
So we can call that our
current filter currentFilters,

43
00:02:30.174 --> 00:02:32.390
cuz we have two different filters.

44
00:02:32.390 --> 00:02:33.971
And this looks a bit different, but

45
00:02:33.971 --> 00:02:36.245
we're gonna do it like that
with the curly braces.

46
00:02:36.245 --> 00:02:40.139
So we're creating an object that we can
store different information inside of.

47
00:02:40.139 --> 00:02:44.423
And season by default will be all,
right, cuz we have all of our seasons.

48
00:02:44.423 --> 00:02:46.700
That's the first one
that will always be on.

49
00:02:46.700 --> 00:02:48.752
Don't put a semicolon, put a comma here.

50
00:02:48.752 --> 00:02:51.640
I always put semicolons,
and it gets me in trouble.

51
00:02:51.640 --> 00:02:54.557
And then we can say,
whoops, edible is also all,

52
00:02:54.557 --> 00:02:58.114
cuz that's the default filters
that we're starting with.

53
00:02:58.114 --> 00:03:01.002
So we have our cards,
we're selecting all of them.

54
00:03:01.002 --> 00:03:04.222
We have each one of the two
filters just so we have them,

55
00:03:04.222 --> 00:03:07.455
that we can be able to access
the information in there.

56
00:03:07.455 --> 00:03:11.538
And then we're saying, currently, when the
page first loads and the JavaScript fires,

57
00:03:11.538 --> 00:03:13.483
we have a season of all and
an edible of all.

58
00:03:13.483 --> 00:03:16.290
So our filters are currently
showing us everything.

59
00:03:16.290 --> 00:03:21.013
To look quickly at what we can do with
this, let's grab that seasonalFilter.

60
00:03:21.013 --> 00:03:24.964
And we saw this earlier,
we can add an event listener.

61
00:03:24.964 --> 00:03:28.289
Last time we looked at
the addEventListener, we did a click and

62
00:03:28.289 --> 00:03:29.932
then we did the function here.

63
00:03:29.932 --> 00:03:34.823
So we're not gonna keep the click,
but I'll set it up like this.

64
00:03:34.823 --> 00:03:38.151
The reason we don't wanna do it as a click
is cuz that means when I click on it,

65
00:03:38.151 --> 00:03:40.757
it's gonna do this function
that we're putting in there.

66
00:03:40.757 --> 00:03:42.487
And if I do that every time I click,

67
00:03:42.487 --> 00:03:45.075
it means it's firing when
I'm opening it as well.

68
00:03:45.075 --> 00:03:48.520
And the click, just so you know,
if I'm using space bar to open it,

69
00:03:48.520 --> 00:03:50.393
the click is still firing there, and

70
00:03:50.393 --> 00:03:53.737
that just doesn't seem like the right
type of way to approach it.

71
00:03:53.737 --> 00:03:57.790
So another event listener that
we can put here is change.

72
00:03:57.790 --> 00:04:01.381
And what change is doing is it's looking
for when, if I click on Seasons and

73
00:04:01.381 --> 00:04:04.801
then I just select the same one or
I click away, nothing's changed, so

74
00:04:04.801 --> 00:04:06.858
the event listener doesn't do anything.

75
00:04:06.858 --> 00:04:09.745
If I come here and
I actually change what's selected,

76
00:04:09.745 --> 00:04:13.343
now, we're gonna do whatever
we're doing within this function.

77
00:04:13.343 --> 00:04:15.926
Again, an easy way to
be able to adjust this.

78
00:04:15.926 --> 00:04:18.346
What we can do is we can
look at this current filter.

79
00:04:18.346 --> 00:04:23.505
So we could come here and we could say
that the currentFilters, and we're doing

80
00:04:23.505 --> 00:04:28.590
our seasonalFilter, so I can say the
season is going to be equal to something.

81
00:04:28.590 --> 00:04:33.344
And what I wanted to get is the value
of whatever I've clicked in here.

82
00:04:33.344 --> 00:04:39.572
Cuz if you remember when we set this up
in the select, let's just do it, select,

83
00:04:39.572 --> 00:04:45.719
we gave each one of these a value, and
we can get that value when it's selected.

84
00:04:45.719 --> 00:04:49.280
To be able to do that, when we have
our function that's going here,

85
00:04:49.280 --> 00:04:52.532
I'm gonna put an event, just so
we're able to use the event.

86
00:04:52.532 --> 00:04:55.982
So whenever it changes, and
we'll see what this event is in a second,

87
00:04:55.982 --> 00:04:59.211
we're gonna use that event and
get where we're getting from it.

88
00:04:59.211 --> 00:05:02.282
Or actually, let's see what the event
is before we do this next step, just so

89
00:05:02.282 --> 00:05:04.525
it makes a bit of sense if
you haven't done this before.

90
00:05:04.525 --> 00:05:10.451
So we can console.log the event
itself that's happening.

91
00:05:10.451 --> 00:05:11.693
We'll inspect on there.

92
00:05:11.693 --> 00:05:13.217
Let me just move this down to the bottom.

93
00:05:16.261 --> 00:05:21.727
&gt;&gt; Kevin Powell: We'll jump on over to
my console and we'll go find my select.

94
00:05:21.727 --> 00:05:24.551
And if I do spring,
you can see the event fires.

95
00:05:24.551 --> 00:05:26.845
So it's saying here's the event, and

96
00:05:26.845 --> 00:05:30.330
it's giving me all this information
that I can get from it.

97
00:05:30.330 --> 00:05:32.389
The type was changed,
cuz that's what we were looking for.

98
00:05:32.389 --> 00:05:35.094
So that makes sense that that's
what we're getting here.

99
00:05:35.094 --> 00:05:37.233
And there's lots of different
stuff that we can grab.

100
00:05:37.233 --> 00:05:41.378
And one of those things is the actual
trusted, type, target, and

101
00:05:41.378 --> 00:05:43.462
there's all this information.

102
00:05:43.462 --> 00:05:46.407
But one thing we can get from it,
it's with the target there.

103
00:05:46.407 --> 00:05:49.336
So we can see there's a target,
is our season.

104
00:05:49.336 --> 00:05:54.585
So if we say event.target and
I go and I choose Spring,

105
00:05:54.585 --> 00:05:58.246
you see I'm getting the id of season.

106
00:05:58.246 --> 00:06:00.626
And there's all this other
stuff that's in there.

107
00:06:00.626 --> 00:06:07.314
And we can get the one that was selected
by coming on here and saying .value.

108
00:06:07.314 --> 00:06:11.072
And if I have that, when I click Spring,
you can see it's grabbing the spring.

109
00:06:11.072 --> 00:06:13.055
It's not grabbing it
because of the text here,

110
00:06:13.055 --> 00:06:15.989
it's grabbing it because that was
the value that we had on the option.

111
00:06:15.989 --> 00:06:19.350
So if I go to Summer,
we get summer coming through here.

112
00:06:19.350 --> 00:06:25.061
So what I wanna do is use
that event.target filter.

113
00:06:25.061 --> 00:06:27.295
We don't need any console.log anymore.

114
00:06:27.295 --> 00:06:31.337
We wanna say that the current filter,
the season,

115
00:06:31.337 --> 00:06:37.078
instead of being all, is now equal to
that value that we had right there.

116
00:06:37.078 --> 00:06:42.041
So if I do that, and then we do
a console.log again, but we do it for

117
00:06:42.041 --> 00:06:45.410
our currentFilters, if I change to Spring,

118
00:06:45.410 --> 00:06:50.046
you can see now the season is 'spring',
edible: 'all'.

119
00:06:50.046 --> 00:06:54.779
If I change the edible to toxic, we should
see, I didn't set one on that one yet,.

120
00:06:54.779 --> 00:06:58.432
We can change the season though, Summer,
and we can change to the fall, and

121
00:06:58.432 --> 00:06:59.813
it's coming up to the fall.

122
00:06:59.813 --> 00:07:04.836
So we're updating the current filter every
time that we choose something there.

123
00:07:04.836 --> 00:07:07.836
Now, one thing we could do is,
as we just realized,

124
00:07:07.836 --> 00:07:10.923
we don't have anything on this side for
that filter.

125
00:07:10.923 --> 00:07:15.905
So the option that we have here is
actually to take all of this, copy it,

126
00:07:15.905 --> 00:07:20.413
paste it, and then do the exact
same thing for the other filter.

127
00:07:20.413 --> 00:07:23.696
Whenever you do that, especially in
JavaScript, same thing in CSS, though,

128
00:07:23.696 --> 00:07:26.549
if we can make something more generic,
that's usually a good idea.

129
00:07:26.549 --> 00:07:29.772
Just cuz if then ever you need to update
it, you're only updating it once.

130
00:07:29.772 --> 00:07:33.237
So anytime you need to do the same thing
twice, it's probably a good idea to see

131
00:07:33.237 --> 00:07:36.175
if you can find a way to make something
more generic that can work for

132
00:07:36.175 --> 00:07:37.086
either one of them.

133
00:07:37.086 --> 00:07:38.679
So that's what we're gonna do next.

