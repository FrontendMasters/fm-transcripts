WEBVTT

1
00:00:00.000 --> 00:00:02.539
&gt;&gt; Steve Kinney: There's another
one here called Socialite,

2
00:00:02.539 --> 00:00:04.107
which is a social media app.

3
00:00:04.107 --> 00:00:06.701
It's great, you should totally use it.

4
00:00:06.701 --> 00:00:11.026
And it has the ability
to post stuff as well.

5
00:00:11.026 --> 00:00:15.537
And so your job is to npm start.

6
00:00:15.537 --> 00:00:20.957
And this one's a little bit more fun,
because unlike

7
00:00:20.957 --> 00:00:26.015
the rest of them that had
a hard coded set of users,

8
00:00:26.015 --> 00:00:30.120
you can go ahead and sign up too, right?

9
00:00:30.120 --> 00:00:33.512
You can make an account, and
if it's running on localhost,

10
00:00:33.512 --> 00:00:35.386
you can talk to yourself all day.

11
00:00:35.386 --> 00:00:40.326
You can make two accounts and
talk to yourself, too, that seems legit.

12
00:00:40.326 --> 00:00:44.289
And let's see if we can kind of
create a version of the same attack.

13
00:00:44.289 --> 00:00:46.668
You could even take that
meme page I had at evil and

14
00:00:46.668 --> 00:00:49.589
just point it at a different localhost and
be good, right?

15
00:00:49.589 --> 00:00:51.108
You can set up your own page.

16
00:00:51.108 --> 00:00:54.700
You can do whatever makes you happiest,
right, but let's try it out.

17
00:00:54.700 --> 00:00:59.549
And it'll be the same technique to fix it,
but I think there's enough step in

18
00:00:59.549 --> 00:01:04.172
this one that it's worth getting your
hands dirty to generate a token with

19
00:01:04.172 --> 00:01:07.991
the session, put it in here if
you can watch me sign up later.

20
00:01:07.991 --> 00:01:08.953
You'll see a tweet form.

21
00:01:08.953 --> 00:01:10.868
It looks like what you
think it looks like.

22
00:01:10.868 --> 00:01:15.080
And we can hopefully protect that
post request from CSRF or CSRF.

23
00:01:18.885 --> 00:01:21.414
&gt;&gt; Steve Kinney: So
I made one booboo in the very beginning,

24
00:01:21.414 --> 00:01:23.951
which is when the booboos get you, right?

25
00:01:23.951 --> 00:01:27.077
A joke that when you're writing
code at home or at work,

26
00:01:27.077 --> 00:01:30.617
you make a booboo in the very beginning,
you just fix it later.

27
00:01:30.617 --> 00:01:33.976
When you're teaching a live coding,
[LAUGH] then you have to go and

28
00:01:33.976 --> 00:01:37.904
act like you have to go kind of start
from where that where we had that detour.

29
00:01:37.904 --> 00:01:44.022
Let me show you the booboo that I made.

30
00:01:44.022 --> 00:01:47.858
The very beginning when I made that table,

31
00:01:47.858 --> 00:01:52.122
I called the ID column
sessionid instead of ID,

32
00:01:52.122 --> 00:01:55.545
right, so, sessions.sessionid.

33
00:01:55.545 --> 00:02:00.077
Instead of session.id, and so
in the very beginning,

34
00:02:00.077 --> 00:02:06.081
in that middleware that we had,
I'll show you in getSession,

35
00:02:06.081 --> 00:02:09.504
even before that, in getSession.

36
00:02:12.424 --> 00:02:14.802
&gt;&gt; Steve Kinney: One of those first
helper functions that I made,

37
00:02:14.802 --> 00:02:18.514
which I guess I can make the point that
having one helper function in one place

38
00:02:18.514 --> 00:02:22.342
means that if I was using this all over my
code base, it would not be the greatest

39
00:02:22.342 --> 00:02:26.236
terrors I've ever caused my codebase was
find and replace gone out of control.

40
00:02:26.236 --> 00:02:29.763
Was originally when I
first wrote the code,

41
00:02:29.763 --> 00:02:33.205
this was ID, I meant this to be sessionid.

42
00:02:33.205 --> 00:02:39.030
So one of the things that we have in
the database now is this sessionid,

43
00:02:39.030 --> 00:02:40.821
userid, and token.

44
00:02:40.821 --> 00:02:44.527
I wish I made this id, so
it was sessions.id, but

45
00:02:44.527 --> 00:02:46.925
I'm not changing the code now.

46
00:02:46.925 --> 00:02:49.461
And this is how tech debt accrues,
everyone, right?

47
00:02:49.461 --> 00:02:52.669
It works, and
I'm not changing the code and

48
00:02:52.669 --> 00:02:56.232
you come to regret that
six to nine months later.

49
00:02:56.232 --> 00:02:57.328
Cool, cool, cool.

50
00:02:57.328 --> 00:03:01.720
You know that thing when you're doing a
PR, whether you're the one opening it, or

51
00:03:01.720 --> 00:03:06.049
you're the one commenting, where the two
of you have just given up and we're just

52
00:03:06.049 --> 00:03:10.346
gonna merge it because nobody wants the
morale on the team to go any further down.

53
00:03:10.346 --> 00:03:11.302
So we have that table in there.

54
00:03:11.302 --> 00:03:14.386
I did make two abstractions,
which did help me.

55
00:03:14.386 --> 00:03:18.268
This create Session, really, all it
does is we make two different tokens.

56
00:03:18.268 --> 00:03:22.973
We make this sessionid, uuid,
could have also been that random hex

57
00:03:22.973 --> 00:03:26.344
that we made before, and
we make this tokenid.

58
00:03:26.344 --> 00:03:28.018
Why did we make two different IDs?

59
00:03:28.018 --> 00:03:31.627
Because one goes in the cookie and
one is gonna be hidden in the form, right?

60
00:03:31.627 --> 00:03:35.177
Because if they somehow got
the ability to send the cookie,

61
00:03:35.177 --> 00:03:38.660
we don't want them to also have
the token right next to it.

62
00:03:38.660 --> 00:03:41.262
Cuz if you put two keys
to launch missile and

63
00:03:41.262 --> 00:03:46.047
you put the two keys on the same key
chain, you haven't really done anything.

64
00:03:46.047 --> 00:03:47.495
So we've got those separate and

65
00:03:47.495 --> 00:03:50.882
we do store them in the database with
my regretful sessionid instead of ID.

66
00:03:50.882 --> 00:03:54.067
But we're here, we deal with it.

67
00:03:54.067 --> 00:03:57.068
I think it's cuz I had it called up here,
whatever, it doesn't matter.

68
00:03:57.068 --> 00:04:00.432
And then we've got this getSession where,
again, I had that mistake earlier that

69
00:04:00.432 --> 00:04:03.430
we've since fixed, which is where
we sessionid matches the sessionid.

70
00:04:03.430 --> 00:04:04.482
We'll go ahead and get a session.

71
00:04:04.482 --> 00:04:06.892
So I've got some abstractions for
getting and setting sessions.

72
00:04:06.892 --> 00:04:11.217
This one is more important, cuz I do
it on both sign up and log in, right?

73
00:04:11.217 --> 00:04:14.313
And so now, we go ahead and
we do, in fact,

74
00:04:14.313 --> 00:04:18.710
when we post to both of those,
we go ahead, we make the user.

75
00:04:18.710 --> 00:04:20.930
There's no user, then we're like, hey,

76
00:04:20.930 --> 00:04:23.931
there's nobody in there with
that username and password.

77
00:04:23.931 --> 00:04:28.071
If there is one, then we go ahead,
we create that session in the database and

78
00:04:28.071 --> 00:04:30.092
then we set the cookie accordingly.

79
00:04:30.092 --> 00:04:34.363
We do basically the same thing
on the account creation.

80
00:04:34.363 --> 00:04:39.008
Then in that current user middleware,
we have to do a little bit more of a dance

81
00:04:39.008 --> 00:04:43.447
than we had previously, where we
start out with that sessionid, right?

82
00:04:43.447 --> 00:04:45.385
We go and get the session.

83
00:04:45.385 --> 00:04:47.139
We can console.log it for sanity.

84
00:04:47.139 --> 00:04:49.343
If there's no session, keep it moving.

85
00:04:49.343 --> 00:04:50.998
Don't even go looking for a user,

86
00:04:50.998 --> 00:04:53.577
cuz you're not gonna find
anything in the database.

87
00:04:53.577 --> 00:04:57.208
At that point, there will be no local for
the user set and no local for

88
00:04:57.208 --> 00:04:58.182
the session set.

89
00:04:58.182 --> 00:05:02.732
But if we did have a session in place,
okay, then ideally we should have a user.

90
00:05:02.732 --> 00:05:06.018
Now, could you write bad code and
if someone deletes their account,

91
00:05:06.018 --> 00:05:08.294
not delete their session and
get weird with it?

92
00:05:08.294 --> 00:05:12.062
No, cuz I don't think they could log in.

93
00:05:12.062 --> 00:05:14.481
So a little more error handling
might be helpful here.

94
00:05:14.481 --> 00:05:17.344
But then we basically set it, so
now we've got access to the token.

95
00:05:17.344 --> 00:05:20.051
We've got access to the userid.

96
00:05:20.051 --> 00:05:24.655
And that kinda creates the same,
little bit more complicated, but

97
00:05:24.655 --> 00:05:26.287
roughly the same flow.

98
00:05:26.287 --> 00:05:31.443
I mean, the last part was just in posts,
we do the same move with the hidden field.

99
00:05:31.443 --> 00:05:37.248
And then when they go to post one,
which is the very

100
00:05:37.248 --> 00:05:43.897
fun endpoint called app.post/ or
app.post/posts.

101
00:05:46.947 --> 00:05:47.550
&gt;&gt; Steve Kinney: Right,

102
00:05:47.550 --> 00:05:52.810
we do the same check that we did in
the last one where we got to do that part.

103
00:05:52.810 --> 00:05:58.318
We can grab the content and
the CSRF token and basically,

104
00:05:58.318 --> 00:06:06.031
yeah, if that's not the one attached
to their session, we want res.locals.

105
00:06:10.567 --> 00:06:13.654
&gt;&gt; Steve Kinney: Then tell them
they're not authorized, right?

106
00:06:13.654 --> 00:06:18.076
And so we've got those same protections on
our post requests now that we had earlier

107
00:06:18.076 --> 00:06:22.056
with a little bit more dance of what we
saw with creating sessions at the very

108
00:06:22.056 --> 00:06:22.771
beginning.

109
00:06:22.771 --> 00:06:27.561
So ideally, what I ate for
lunch today, I had burrito bowl.

110
00:06:30.639 --> 00:06:32.470
&gt;&gt; Steve Kinney: No, now what?

111
00:06:32.470 --> 00:06:33.744
It should be easy.

112
00:06:33.744 --> 00:06:37.950
Local session token, yeah,
that's not what it's called.

113
00:06:39.634 --> 00:06:40.482
&gt;&gt; Steve Kinney: What did I call it?

114
00:06:40.482 --> 00:06:43.626
My last one, so close, so close.

115
00:06:43.626 --> 00:06:45.440
I called it just res.locals.token.

116
00:06:45.440 --> 00:06:49.206
Okay, cool, cool, cool.

117
00:06:53.012 --> 00:06:55.174
&gt;&gt; Steve Kinney: We know the system works.

118
00:06:55.174 --> 00:06:58.480
Cool, and so now we've got it
in there as well, right, and so

119
00:06:58.480 --> 00:07:00.205
we kind of complete the circle.

