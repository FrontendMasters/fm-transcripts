WEBVTT

1
00:00:00.046 --> 00:00:04.348
&gt;&gt; Steve Kinney: All right, so
we're gonna run npm start to look at

2
00:00:04.348 --> 00:00:07.946
our list of all of our fun examples today.

3
00:00:07.946 --> 00:00:12.834
The first one we gonna look at is this one
called cookie jar, and we'll open it up.

4
00:00:12.834 --> 00:00:17.152
And for starters, it is a relatively

5
00:00:17.152 --> 00:00:21.901
simple app that we are going to exploit.

6
00:00:21.901 --> 00:00:25.571
So this is an Express
app running on Node.js.

7
00:00:25.571 --> 00:00:30.054
We'll use a SQLite database that's
kind of like the standard kit for us,

8
00:00:30.054 --> 00:00:33.539
because like, yes,
the principles apply regardless.

9
00:00:33.539 --> 00:00:37.608
And we will try for the most part we
use one or two libraries, but for

10
00:00:37.608 --> 00:00:42.404
the most part, we'll keep things to
the stuff that is generally applicable to

11
00:00:42.404 --> 00:00:45.965
whatever, whether using like Next or
Sveltkit or Rails or

12
00:00:45.965 --> 00:00:51.145
some Java monstrosity that has existed
long before you work there, like whatever.

13
00:00:51.145 --> 00:00:53.982
We'll kind of play around that as well.

14
00:00:53.982 --> 00:00:57.282
I just kind of made this little
abstraction here, honestly, so that we

15
00:00:57.282 --> 00:01:01.247
could keep a lot of the boilerplate code
that wasn't important out of the way.

16
00:01:01.247 --> 00:01:02.866
You can go ahead and
take a look at if you want.

17
00:01:02.866 --> 00:01:08.867
It's just, configuring the ability
to parse request bodies,

18
00:01:08.867 --> 00:01:13.995
so on and so forth, and
some various settings as well.

19
00:01:13.995 --> 00:01:16.787
Cool and sue.

20
00:01:16.787 --> 00:01:19.954
Let's go back over to where
I was in a cookie jar,

21
00:01:19.954 --> 00:01:24.691
we've got this index.js,
which is our server at this point.

22
00:01:24.691 --> 00:01:29.178
Out of the box, Express does not come
with any support for cookies, so

23
00:01:29.178 --> 00:01:31.627
we'll talk about how to pull that in.

24
00:01:31.627 --> 00:01:35.313
For future ones, I just had it already
set up, so I overrided it with being

25
00:01:35.313 --> 00:01:40.291
I don't really want cookies right now,
and then we'll add them in ourselves.

26
00:01:40.291 --> 00:01:42.800
That way, we can tweak them and
see them a little bit, and

27
00:01:42.800 --> 00:01:45.068
we can see some of the changes
that we're gonna do.

28
00:01:45.068 --> 00:01:48.155
So this will be done for
us kinda going forward, but just so

29
00:01:48.155 --> 00:01:51.749
it doesn't look like magic to you,
let's try this out real quick.

30
00:01:51.749 --> 00:01:57.710
So there is this well named
library called cookie parser.

31
00:01:57.710 --> 00:01:59.259
It does what you think it does.

32
00:01:59.259 --> 00:02:03.299
It takes that request header that is It's
got the cookie that we saw before, and

33
00:02:03.299 --> 00:02:05.487
it has a string with all those semicolons.

34
00:02:05.487 --> 00:02:07.398
And you know what it does?

35
00:02:07.398 --> 00:02:10.047
It grabs that header off
the request object, and

36
00:02:10.047 --> 00:02:14.247
then it separates out all of the different
keys and values by the semicolons so

37
00:02:14.247 --> 00:02:17.166
that you're not doing string
manipulation by hand.

38
00:02:17.166 --> 00:02:21.937
Which kind of hits one of the core tenets
of what we're gonna talk about today,

39
00:02:21.937 --> 00:02:26.419
which is, don't write your own database,
don't roll your crypto, and

40
00:02:26.419 --> 00:02:30.320
honestly, like, in terms of when
it comes down to a sanitizer or

41
00:02:30.320 --> 00:02:33.170
anything like that, grab a library, right?

42
00:02:33.170 --> 00:02:36.963
Look at it, because there are some
that are known deprecated, right,

43
00:02:36.963 --> 00:02:39.187
especially when we see, Csurf, right?

44
00:02:39.187 --> 00:02:43.082
There is an express module that was built
into Express that has been deprecated cuz

45
00:02:43.082 --> 00:02:45.936
it was actually riddled
with security holes.

46
00:02:45.936 --> 00:02:48.349
So do your research, but
maybe don't roll it yourself so

47
00:02:48.349 --> 00:02:50.581
you're implementing your
own new security holes.

48
00:02:50.581 --> 00:02:55.906
There's something about having eyes
across the industry on something.

49
00:02:57.036 --> 00:03:01.995
Cool, and so we'll get that in place,
and we're just gonna pop in that middle

50
00:03:01.995 --> 00:03:06.429
where we'll say app.use and
we'll bring in this cookie parser and so

51
00:03:06.429 --> 00:03:10.660
if there were no cookies at all,
we got that cookies are disabled.

52
00:03:10.660 --> 00:03:15.665
This app should and does restart
whenever we change the server.

53
00:03:15.665 --> 00:03:17.919
So we don't have to kill
the server every time as well.

54
00:03:17.919 --> 00:03:20.725
Again, these are the things I didn't
wanna do over and over again.

55
00:03:20.725 --> 00:03:24.326
So now if we refresh it, we actually get
the real page, which is this login screen.

56
00:03:24.326 --> 00:03:29.212
Now, this is intentionally at first
not a particularly secure app, but

57
00:03:29.212 --> 00:03:31.373
if we look in our database file,

58
00:03:31.373 --> 00:03:37.010
we've got just some users that are already
loaded into the database, right?

59
00:03:37.010 --> 00:03:39.832
And so,
we've got our good friend bobbytables.

60
00:03:39.832 --> 00:03:45.303
We will look at XKCD a cartoon later if
you have not seen it, cuz it's worth it.

61
00:03:45.303 --> 00:03:50.170
And you're actually legally required,
if you do any like course on web security,

62
00:03:50.170 --> 00:03:53.160
to reference that cartoon,
which I'll show you,

63
00:03:53.160 --> 00:03:55.889
but you're legally required to references.

64
00:03:55.889 --> 00:03:59.903
Otherwise you actually can't like
brand the courses web security.

65
00:03:59.903 --> 00:04:01.821
So, great.

66
00:04:01.821 --> 00:04:06.319
And so we got bobbytables here with
some of my favorite CSS colors as their

67
00:04:06.319 --> 00:04:08.192
insecure passwords.

68
00:04:08.192 --> 00:04:11.029
So let's go ahead and we'll try that out.

69
00:04:11.029 --> 00:04:16.672
And we'll say we got bobbytables,
papaya whip.

70
00:04:16.672 --> 00:04:18.516
Now you can argue, if he was live coding,

71
00:04:18.516 --> 00:04:20.592
why didn't he pick
passwords he could spell?

72
00:04:20.592 --> 00:04:24.067
That's a great question,
I'm glad you asked it.

73
00:04:24.067 --> 00:04:28.147
And so we've got this little application
that seems like a precarious button.

74
00:04:28.147 --> 00:04:31.154
Before we hit that button,
let's go ahead and

75
00:04:31.154 --> 00:04:34.167
look at some of those
other tools I saw you.

76
00:04:34.167 --> 00:04:37.428
That's called like,
building intrigue, by the way.

77
00:04:37.428 --> 00:04:41.449
All right, so we've got this application.

78
00:04:41.449 --> 00:04:43.957
And we don't wanna throttle.

79
00:04:43.957 --> 00:04:48.118
We wanna go to this application here and

80
00:04:48.118 --> 00:04:54.809
can see that I've logged in and
I am bobbytables, right?

81
00:04:54.809 --> 00:04:55.744
But this is already bad.

82
00:04:55.744 --> 00:04:59.079
Does anyone know what crucial
mistake I have already made here?

83
00:04:59.079 --> 00:05:01.249
We've stored who we are in plain text.

84
00:05:01.249 --> 00:05:03.517
And anyone go ahead and
decide, you know what?

85
00:05:03.517 --> 00:05:05.987
I am going to be someone else.

86
00:05:05.987 --> 00:05:08.997
And now when the browser goes,
it sends that request.

87
00:05:08.997 --> 00:05:12.272
We look for that username directly, it
turns out now if they get something wrong,

88
00:05:12.272 --> 00:05:15.466
they're not in the database and this app
does not have great error handling it.

89
00:05:15.466 --> 00:05:20.723
But this is already like, again, yes,
an obvious mistake, but also the theme of,

90
00:05:20.723 --> 00:05:25.407
you can obfuscate this, you can encrypt
it, you can do all sorts of stuff.

91
00:05:25.407 --> 00:05:30.338
But if someone still has various levels
of sophistication for getting it,

92
00:05:30.338 --> 00:05:35.190
you end up in the same, some version of
the course of our day will likely end

93
00:05:35.190 --> 00:05:39.024
us in the same situation that
we are in the very beginning,

94
00:05:39.024 --> 00:05:43.356
just with added layers of
sophistication as we go along, right?

