WEBVTT

1
00:00:00.226 --> 00:00:01.803
&gt;&gt; Steve Kinney: So questions,
comments, concerns,

2
00:00:01.803 --> 00:00:05.070
cries of outrage, anything you want me
to talk about that we didn't talk about?

3
00:00:05.070 --> 00:00:09.213
The one thing I will also
say is the same idea,

4
00:00:09.213 --> 00:00:14.681
we didn't encrypt any passwords
the whole way in, right?

5
00:00:14.681 --> 00:00:17.984
And again,
that falls under you do it once,

6
00:00:17.984 --> 00:00:23.443
you can hash passwords the same way,
which is there is a secret, right?

7
00:00:23.443 --> 00:00:28.234
Actually, you can do a one-way hashing
algorithm, which is that password will

8
00:00:28.234 --> 00:00:32.118
hash into the same thing every
time just like jQuery did, right?

9
00:00:32.118 --> 00:00:35.259
And all those other things, and
you store the hash version.

10
00:00:35.259 --> 00:00:38.709
You check the password they send you,
which should be password 123 or whatever.

11
00:00:38.709 --> 00:00:42.666
It should always hash in the same mess,
right?

12
00:00:42.666 --> 00:00:47.072
And so when exfiltrates everything in your
database, they theoretically only have

13
00:00:47.072 --> 00:00:50.496
the encrypted versions,
which you can't go the other way with.

14
00:00:50.496 --> 00:00:55.487
The problem is,
have you all ever heard of rainbow tables?

15
00:00:55.487 --> 00:00:58.820
Yeah, so when there is a data leak
from somebody who didn't encrypt their

16
00:00:58.820 --> 00:01:01.953
passwords, right, there's a bunch
of known passwords out there.

17
00:01:01.953 --> 00:01:06.122
You run it through the encryption
algorithm, you get the hashed versions,

18
00:01:06.122 --> 00:01:07.895
you can just use those, right?

19
00:01:07.895 --> 00:01:09.465
You can't use the hashed version.

20
00:01:09.465 --> 00:01:14.208
You just know that if I see f$a6#,
whatever,

21
00:01:14.208 --> 00:01:20.346
that's really password 123,
and then you're good to go.

22
00:01:20.346 --> 00:01:23.060
So the best practice there
is what's called a salt,

23
00:01:23.060 --> 00:01:24.672
which is just something else.

24
00:01:24.672 --> 00:01:29.047
The same way we had a secret for our
cookies and we had a secret for our JOTS.

25
00:01:29.047 --> 00:01:32.503
You say, I'm gonna take the password and
this other thing, and

26
00:01:32.503 --> 00:01:34.296
I'm gonna hash those together.

27
00:01:34.296 --> 00:01:37.703
So you would need both the other thing and
the password in order to get there,

28
00:01:37.703 --> 00:01:40.329
and that's one additional
layer of protection, right?

29
00:01:40.329 --> 00:01:44.474
Having something that is at least
harder to know that way if you lose.

30
00:01:44.474 --> 00:01:48.039
Sometimes, the name of the game is don't
lose two things or don't lose everything.

31
00:01:48.039 --> 00:01:50.074
If you only have one thing and
you lose it, it's everything.

32
00:01:50.074 --> 00:01:53.705
If you have two things, right?

33
00:01:53.705 --> 00:01:57.880
Then, you have the ability, maybe one
thing was kept an environment variable.

34
00:01:57.880 --> 00:02:01.605
So even if they did a SQL injection,
you're good to go, right?

35
00:02:01.605 --> 00:02:05.642
Not good to go, you still have a lot of
apologizing to do in the media, right?

36
00:02:05.642 --> 00:02:12.564
[LAUGH] But generally speaking, you can at
least kind of have those pieces in place.

37
00:02:12.564 --> 00:02:16.217
Cuz you can even store that salt,
you can have a different salt for

38
00:02:16.217 --> 00:02:19.018
every single user,
that's just a random thing.

39
00:02:19.018 --> 00:02:22.553
And cool,
the hash is a two thing combined, so

40
00:02:22.553 --> 00:02:25.100
even if they had a rainbow table.

41
00:02:25.100 --> 00:02:29.865
They can't do anything with
the hashed version, right?

42
00:02:29.865 --> 00:02:32.676
But then if you lose the salt,
you've lost everyone's password.

43
00:02:32.676 --> 00:02:36.098
So, it's kinda getting kinda a lock.

44
00:02:36.098 --> 00:02:40.005
It works until you lose the keys and
you two are locked out, right?

45
00:02:40.005 --> 00:02:41.948
And these are the trade offs,
and these are things.

46
00:02:41.948 --> 00:02:47.106
The one thing that I will say that
we didn't cover as well, and again,

47
00:02:47.106 --> 00:02:52.967
this is now somewhat like we're getting
to the true esoteric as we wrap up here,

48
00:02:52.967 --> 00:02:55.599
is there are many versions of this.

49
00:02:55.599 --> 00:03:00.173
The one that I've used in the past is,
especially, honestly,

50
00:03:00.173 --> 00:03:02.728
if you're on AWS, you use AWS's.

51
00:03:02.728 --> 00:03:04.123
If you're on Azure, use Azure's.

52
00:03:04.123 --> 00:03:07.528
If you're on Google Clouds,
they all have stupid names that

53
00:03:07.528 --> 00:03:10.547
tell you exactly what they do and
aren't cool at all.

54
00:03:10.547 --> 00:03:14.148
But they are ways that if you have
multiple services that all need to share

55
00:03:14.148 --> 00:03:15.033
the same secret,

56
00:03:15.033 --> 00:03:18.593
updating a whole bunch of environment
variables at once is untenable.

57
00:03:18.593 --> 00:03:22.213
So this gives you a way to kind of
manage that in whatever cloud service.

58
00:03:22.213 --> 00:03:25.055
I think there are third-party ones
if you're cloud agnostic as well.

59
00:03:25.055 --> 00:03:27.775
I'm not, so whatever.

60
00:03:27.775 --> 00:03:32.752
But ways to kinda give you
a secure place to put those keys,

61
00:03:32.752 --> 00:03:39.163
cuz losing those keys is bad, right,
and then practice around rotating.

62
00:03:39.163 --> 00:03:43.674
Things that are less web security,
more security, rotate your keys,

63
00:03:43.674 --> 00:03:48.575
all that kinda stuff, don't leave stuff
out in the open, so on and so forth.

64
00:03:48.575 --> 00:03:51.999
But that kind of for
the pieces of the cookie security stuff,

65
00:03:51.999 --> 00:03:55.100
making sure we actually
understand the CSPs and that.

66
00:03:55.100 --> 00:03:58.659
CSP and CORS sometimes get a bad rap,
cuz when we're first starting an app,

67
00:03:58.659 --> 00:04:00.561
it feels like, why is nothing working?

68
00:04:00.561 --> 00:04:01.379
Why is nothing loading?

69
00:04:01.379 --> 00:04:03.774
I hate this, how do I turn it off, right?

70
00:04:03.774 --> 00:04:07.890
But these are actually important
mechanisms that taken thoughtfully and

71
00:04:07.890 --> 00:04:11.276
carefully and
actually understanding philosophically how

72
00:04:11.276 --> 00:04:15.338
they work empowers you to actually
have multiple layers of protection.

73
00:04:15.338 --> 00:04:20.057
Because the security hole comes from
either something you never knew about or

74
00:04:20.057 --> 00:04:25.588
something when they real tired, right, and
just a mistake that invalidates something.

75
00:04:25.588 --> 00:04:27.822
So having those multiple layers and

76
00:04:27.822 --> 00:04:32.300
kind of configuring them properly
becomes a really powerful concept.

77
00:04:32.300 --> 00:04:40.193
I have been lucky so far that I have not
personally had to sit in the postmortem.

78
00:04:40.193 --> 00:04:43.622
I run the team, so if anyone's great
screws it up on my team, it's my fault.

79
00:04:43.622 --> 00:04:46.797
But I've never had to do that yet,
knock on wood.

80
00:04:46.797 --> 00:04:53.519
I hope it's wood, but no, that's not
anything anyone wants to do, right?

81
00:04:53.519 --> 00:04:57.029
And also, users and
they're important, I guess.

82
00:04:57.029 --> 00:05:01.447
But yeah, yes, any final questions or
anything Dustin, from the chat?

83
00:05:04.403 --> 00:05:06.820
[INAUDIBLE].

84
00:05:06.820 --> 00:05:10.447
&gt;&gt; Steve Kinney: All right,
thank you all so much, whoo.

85
00:05:10.447 --> 00:05:13.533
&gt;&gt; [APPLAUSE]

