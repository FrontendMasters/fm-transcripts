WEBVTT

1
00:00:00.080 --> 00:00:02.887
&gt;&gt; Steve Kinney: There's more
than one way that kind of,

2
00:00:02.887 --> 00:00:05.210
we deal with identity on the web.

3
00:00:05.210 --> 00:00:10.114
But let's start with probably, I think
it's safe to say the most common one,

4
00:00:10.114 --> 00:00:11.839
which is cookies, right?

5
00:00:11.839 --> 00:00:16.540
The web HTTP is effectively stateless,
right?

6
00:00:16.540 --> 00:00:19.698
Which means there's no idea
of you are logged in and

7
00:00:19.698 --> 00:00:23.015
authenticated except that
we kind of cheat, right?

8
00:00:23.015 --> 00:00:28.761
There is basically this mutually
accepted by both servers in the browser,

9
00:00:28.761 --> 00:00:32.236
where you'd be you tell me who I am,
server.

10
00:00:32.236 --> 00:00:33.201
I'm gonna hold on to that.

11
00:00:33.201 --> 00:00:37.244
I'm gonna keep reminding you of who
I am on every subsequent request,

12
00:00:37.244 --> 00:00:39.642
which then takes a stateless protocol and

13
00:00:39.642 --> 00:00:43.149
has this idea of what we will
in this workshop call a session.

14
00:00:43.149 --> 00:00:47.553
Most of us I would assume have
used the internet before and

15
00:00:47.553 --> 00:00:51.039
you do not necessarily
need to be logged in but

16
00:00:51.039 --> 00:00:56.671
a common way is you've logged in now
further requests are, you are you.

17
00:00:56.671 --> 00:01:00.050
And we'll kind of this tweet will now come
from you because you have access to do it,

18
00:01:00.050 --> 00:01:01.372
you have access to these pages.

19
00:01:01.372 --> 00:01:06.134
You can see these certain resources,
you can put this stuff in your cart.

20
00:01:06.134 --> 00:01:10.106
And you don't necessarily
need to be logged in, right?

21
00:01:10.106 --> 00:01:14.520
There's a whole industry of tracking and
advertising that is just,

22
00:01:14.520 --> 00:01:17.270
they don't necessarily know who you are.

23
00:01:17.270 --> 00:01:20.874
They just know about all the guitars you
looked at in the last week, all right?

24
00:01:20.874 --> 00:01:25.649
And can show you reverb ads in the middle
of researching a bunch of stuff on web

25
00:01:25.649 --> 00:01:26.401
security.

26
00:01:26.401 --> 00:01:29.929
And then you get distracted, and you
go look at guitars for a little bit, so

27
00:01:29.929 --> 00:01:30.720
on and so forth.

28
00:01:30.720 --> 00:01:34.587
And sometimes you'll see the experience
where you can add stuff to a shopping

29
00:01:34.587 --> 00:01:37.560
cart, then you go to check out,
and you maybe you log in, or

30
00:01:37.560 --> 00:01:40.378
you create an account and
your cart Is still persisted.

31
00:01:40.378 --> 00:01:42.010
So on and so forth that's again cookies.

32
00:01:42.010 --> 00:01:47.062
So it's not always tied to,
authentication and authorization.

33
00:01:47.062 --> 00:01:50.851
But for our purposes that's the one we're
interested in finding some rondo shopping

34
00:01:50.851 --> 00:01:52.649
cart without any payment information.

35
00:01:52.649 --> 00:01:55.472
Sure steal that cookie, I guess.

36
00:01:55.472 --> 00:01:59.730
But usually you want the one with
the credit card attached to it.

37
00:01:59.730 --> 00:02:04.699
And for our purposes, we care mostly about
that kind of authenticated user session,

38
00:02:04.699 --> 00:02:07.873
but obviously cookies are used for
a bunch of things and

39
00:02:07.873 --> 00:02:09.887
the technology works either way.

40
00:02:09.887 --> 00:02:14.309
And the interesting part about cookies
is like many things on the Internet,

41
00:02:14.309 --> 00:02:18.122
the original implementation was
kind of fast and loose, right?

42
00:02:18.122 --> 00:02:20.825
There is, story with the image tag,
which is,

43
00:02:20.825 --> 00:02:24.070
there was a whole long thread
when we're gonna add images

44
00:02:24.070 --> 00:02:27.606
to web pages about what does
the semantics of the image tag be?

45
00:02:27.606 --> 00:02:29.694
And Netscape got annoyed and

46
00:02:29.694 --> 00:02:33.965
just shipped the image tag that
we all know and love today.

47
00:02:33.965 --> 00:02:35.553
And it's well, we did it.

48
00:02:35.553 --> 00:02:36.852
And so that's the one we have now.

49
00:02:36.852 --> 00:02:40.301
And that's why we have
six others at this point,

50
00:02:40.301 --> 00:02:45.773
very similar Netscape again,
in 94 I think the original implementation,

51
00:02:45.773 --> 00:02:50.251
they only spent a few days on it,
and it had no spec whatsoever.

52
00:02:50.251 --> 00:02:55.165
It was just a thing that Netscape did,
most of the early stages of

53
00:02:55.165 --> 00:03:01.080
the internet now, also all of us who write
JavaScript have a lot of empathy for

54
00:03:01.080 --> 00:03:05.273
our good friend ES4,
which never actually existed.

55
00:03:05.273 --> 00:03:08.341
There was an attempt to
standardize it in 97.

56
00:03:08.341 --> 00:03:11.876
Another one called Cookie2,
which were incompatible changes, right?

57
00:03:11.876 --> 00:03:14.381
And that's a theme that we're gonna see,

58
00:03:14.381 --> 00:03:18.150
which is there are some things on
the web that we know are broken.

59
00:03:18.150 --> 00:03:23.105
And we know are terrible, but
you can't break the web sometimes you can.

60
00:03:23.105 --> 00:03:27.217
Sometimes Google and Chrome will
just decide new rules, deal with it.

61
00:03:27.217 --> 00:03:34.055
But generally speaking, some of the worst
parts of securing your web application

62
00:03:34.055 --> 00:03:40.711
are choices people made during the grunge
era right, and now we live with them.

63
00:03:40.711 --> 00:03:45.446
So yeah, an attempt to specify in 2000,
and then finally, in 2011,

64
00:03:45.446 --> 00:03:47.549
we actually got a real spec for it.

65
00:03:47.549 --> 00:03:52.696
But that means that there was more
time that it was completely unspecced

66
00:03:52.696 --> 00:03:58.382
than we've actually had it, with actual
specification and actually rules.

67
00:03:58.382 --> 00:04:00.200
And kind of cross browser support.

68
00:04:00.200 --> 00:04:04.044
The nice part is, we live in the web
standards world now where, luckily,

69
00:04:04.044 --> 00:04:06.907
a lot of these things are easier,
not always the case.

70
00:04:06.907 --> 00:04:12.335
We'll see different browsers roll
stuff out at different times, and

71
00:04:12.335 --> 00:04:18.961
eventually, all of them, sometimes maybe,
but a cookie is set as a header, right?

72
00:04:18.961 --> 00:04:21.535
We will spend a lot of time to actually,

73
00:04:21.535 --> 00:04:26.917
you will not only learn how to secure your
web app, you will also just learn way more

74
00:04:26.917 --> 00:04:32.308
than you ever wanted to know about how the
web actually works in the HTTP protocol.

75
00:04:32.308 --> 00:04:36.558
And how servers and browsers do their
dance together as a accident because

76
00:04:36.558 --> 00:04:39.380
ultimately that is what
we are trying to secure.

77
00:04:39.380 --> 00:04:44.294
So, when we've got a cookie that has
been set, there's a set cookie header on

78
00:04:44.294 --> 00:04:48.686
a response, and then the browser is,
I will hold on to that value, and

79
00:04:48.686 --> 00:04:53.464
we'll kind of see where Chrome can hold
on to it, and we can see the cookies.

80
00:04:53.464 --> 00:04:56.321
And then on subsequent requests, and

81
00:04:56.321 --> 00:05:00.615
we'll talk about, for
how long and why, and whatever.

82
00:05:00.615 --> 00:05:05.194
It's hey, remember when you told me,
after I logged in that my username or

83
00:05:05.194 --> 00:05:09.499
my session ID was whatever I'm
reminding you again, this is who I am.

84
00:05:09.499 --> 00:05:14.127
And this is critical to securing our
applications, because if somebody else

85
00:05:14.127 --> 00:05:17.985
can say I am Bobby Tables in this case,
right then, guess what?

86
00:05:17.985 --> 00:05:20.474
As far as the service concerned,
they are, right?

87
00:05:20.474 --> 00:05:25.234
There's not extra, there is little things
you can do or bigger things, right,

88
00:05:25.234 --> 00:05:27.548
two-factor auth, so on and so forth.

89
00:05:27.548 --> 00:05:31.284
But it is somewhat difficult
to then if you can say that,

90
00:05:31.284 --> 00:05:34.701
if you can prove that you are,
even if you're not,

91
00:05:34.701 --> 00:05:38.459
the person who really is that
person has a real problem.

92
00:05:38.459 --> 00:05:41.453
And so we'll kind of see how to
deal with that as we go along.

93
00:05:41.453 --> 00:05:43.372
And it's weird, right?

94
00:05:43.372 --> 00:05:49.240
Most things, there is a document.cookie
in the DOM that you can access.

95
00:05:49.240 --> 00:05:53.482
And it's kind of weird, which is if you
then set it to different values as you go

96
00:05:53.482 --> 00:05:56.784
along, you're this should
change the cookie completely.

97
00:05:56.784 --> 00:05:59.541
It doesn't, just actually
appends it to the cookie, right?

98
00:05:59.541 --> 00:06:03.552
And this is kind of the initial first
thing of this stuff is weird, and

99
00:06:03.552 --> 00:06:07.718
that's kind of what makes it a both
really interesting attack vector.

100
00:06:07.718 --> 00:06:11.478
And a somewhat one that if you're kind
of just going in with the I know how

101
00:06:11.478 --> 00:06:12.551
JavaScript works.

102
00:06:12.551 --> 00:06:16.935
I know how the web works, you will have
these little blind spots that, again,

103
00:06:16.935 --> 00:06:19.470
nobody really likes to
deal with this stuff.

104
00:06:19.470 --> 00:06:24.025
Nobody really likes to be the person
responsible for the multi-million

105
00:06:24.025 --> 00:06:28.291
dollar vulnerability, and
we will see some of those as we go along.

106
00:06:28.291 --> 00:06:32.935
And so, it's these little
places in the gaps in our

107
00:06:32.935 --> 00:06:37.796
understanding where the attackers thrive,
right?

108
00:06:37.796 --> 00:06:39.759
And so
we'll kind of play around with that.

109
00:06:39.759 --> 00:06:44.615
In at any point you can do this on
any webpage because again the web is

110
00:06:44.615 --> 00:06:47.059
code executing in your browser.

111
00:06:47.059 --> 00:06:50.662
You can open up the developer tools and
go to the application tab and

112
00:06:50.662 --> 00:06:52.475
you can kind of see that sidebar.

113
00:06:52.475 --> 00:06:56.973
You can see the cookies that
are set on your browser right now.

114
00:06:56.973 --> 00:06:59.663
Now it is just one string right?

115
00:06:59.663 --> 00:07:03.146
But the browser kinda looks for
the semicolons, parses it out, and

116
00:07:03.146 --> 00:07:06.874
puts in a table for you, and you kinda
get a sense as you're developing,

117
00:07:06.874 --> 00:07:09.160
are these behaving
the way I think they are?

118
00:07:09.160 --> 00:07:12.644
Do these look correct,
and so on, and so forth?

119
00:07:12.644 --> 00:07:15.795
I also bring this up because we're gonna
work on a bunch of apps, we're gonna break

120
00:07:15.795 --> 00:07:18.919
into them, we're probably gonna wanna
clean up after ourselves occasionally.

121
00:07:18.919 --> 00:07:22.276
You can go in here and
delete your cookies as well.

