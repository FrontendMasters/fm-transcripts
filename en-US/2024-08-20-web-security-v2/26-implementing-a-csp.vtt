WEBVTT

1
00:00:00.000 --> 00:00:02.125
&gt;&gt; Steve Kinney: Let's actually
take a look at an example, and

2
00:00:02.125 --> 00:00:05.243
we'll see a page that we have going,
where we can play around with.

3
00:00:05.243 --> 00:00:09.912
And that is,
&gt;&gt; Steve Kinney: Csp-playground,

4
00:00:09.912 --> 00:00:10.731
that's a great name.

5
00:00:12.887 --> 00:00:13.927
&gt;&gt; Steve Kinney: Cool, we'll grab that.

6
00:00:13.927 --> 00:00:19.213
And this site is possibly my best design
work ever, and I'm very proud of it.

7
00:00:22.494 --> 00:00:26.661
&gt;&gt; Steve Kinney: So
we've got an awesome Google font.

8
00:00:26.661 --> 00:00:28.093
I don't know if you've
heard of this Google font.

9
00:00:28.093 --> 00:00:30.866
You can load any font.

10
00:00:30.866 --> 00:00:36.504
We do have some inline scripting
that's happening, some CSS.

11
00:00:36.504 --> 00:00:38.718
We've got this cat meme.

12
00:00:38.718 --> 00:00:42.198
And this is from
the Frontend Masters site,

13
00:00:42.198 --> 00:00:47.097
so if you move this image ever,
you will break my site, okay?

14
00:00:47.097 --> 00:00:50.927
We've got some stuff to play with,
CORS headers that we may or may not use.

15
00:00:50.927 --> 00:00:52.213
But yeah,
we've got a whole bunch of stuff.

16
00:00:52.213 --> 00:00:54.439
We can look at my awesome markup too.

17
00:00:54.439 --> 00:00:58.638
If anyone wants to see that,
it's really great.

18
00:01:00.028 --> 00:01:03.386
&gt;&gt; Steve Kinney: Yeah, we can go into,
I think it's just public, no,

19
00:01:03.386 --> 00:01:06.891
it's in Views cuz we need to
put one value in there later.

20
00:01:06.891 --> 00:01:10.148
So you can see I load a bunch of
the Google fonts, as they call them.

21
00:01:10.148 --> 00:01:13.771
I have a favicon from, this is cool.

22
00:01:13.771 --> 00:01:18.336
If you ever need a favicon,
it's just fav.farm and

23
00:01:18.336 --> 00:01:23.575
then slash any emoji, and
that becomes your favicon.

24
00:01:23.575 --> 00:01:27.865
We got tailwind coming
from somewhere else.

25
00:01:27.865 --> 00:01:33.783
We've got that Google
font style sheet as well.

26
00:01:33.783 --> 00:01:38.262
We've got some inline styles that
make my awesome style happen.

27
00:01:38.262 --> 00:01:42.224
A whole bunch of fun stuff,
remote pictures,

28
00:01:42.224 --> 00:01:47.619
local pictures, just really
some of my best work, honestly.

29
00:01:47.619 --> 00:01:53.212
And we can go ahead and
we can put in a CSP to prevent.

30
00:01:53.212 --> 00:01:56.838
So I've got inline scripting running, and

31
00:01:56.838 --> 00:02:00.665
this is XSS attack waiting to happen,
right?

32
00:02:00.665 --> 00:02:06.491
I'm just gonna innerHTML this stuff right
in here and everything's gonna be great.

33
00:02:06.491 --> 00:02:12.950
And so all of that seems really precarious
and something I probably shouldn't do.

34
00:02:12.950 --> 00:02:18.624
And the cool part about the CSP
is that you can just go ahead and

35
00:02:18.624 --> 00:02:23.973
give it a very granular list
of what is and is not allowed.

36
00:02:23.973 --> 00:02:27.902
And honestly, it's one of those things
when someone shows you a CSP header,

37
00:02:27.902 --> 00:02:31.771
you want to cry, because it's a bunch
of things you don't understand, but

38
00:02:31.771 --> 00:02:33.728
it's actually, it's not that bad.

39
00:02:33.728 --> 00:02:37.742
So like I said before,
you can put the tags in the head.

40
00:02:37.742 --> 00:02:41.109
If you have Express,
you can use this library called Helmet,

41
00:02:41.109 --> 00:02:43.715
which is kinda cool cuz it's headers,
get it?

42
00:02:43.715 --> 00:02:47.396
But we'll do that, but
either one will work.

43
00:02:47.396 --> 00:02:51.958
And again, the overall idea is the same,
whether or not you use Express or

44
00:02:51.958 --> 00:02:54.840
something else, it doesn't really matter.

45
00:02:54.840 --> 00:02:57.223
So in this case,
we will go ahead and import helmet.

46
00:03:00.375 --> 00:03:06.683
&gt;&gt; Steve Kinney: Helmet from 'helmet',
and then you can use it as middleware.

47
00:03:06.683 --> 00:03:10.232
So you can do app.use(helmet()).

48
00:03:10.232 --> 00:03:12.842
And that kinda just sets up
with some basic stuff, but

49
00:03:12.842 --> 00:03:14.534
then what we wanna do is app.use.

50
00:03:14.534 --> 00:03:16.543
There's other setters you
can set here as well.

51
00:03:16.543 --> 00:03:21.059
You can even do course policies,

52
00:03:21.059 --> 00:03:26.875
you do helmet.contentSecurityPolicy.

53
00:03:28.768 --> 00:03:31.960
&gt;&gt; Steve Kinney: And if you wanna
play around with the CORS pieces,

54
00:03:31.960 --> 00:03:34.860
I've got that cors-field in there as well.

55
00:03:34.860 --> 00:03:38.577
And so we can just start out with, I
forget what happens if I just put an empty

56
00:03:38.577 --> 00:03:40.705
one here, but
we can find out the hard way.

57
00:03:40.705 --> 00:03:44.629
It does some mostly
reasonable ideas at first.

58
00:03:44.629 --> 00:03:48.909
You can see fonts are okay,

59
00:03:48.909 --> 00:03:53.757
local images are okay as well.

60
00:03:53.757 --> 00:03:57.950
The CSS seems to be good, but the remote
image didn't load, because again,

61
00:03:57.950 --> 00:04:00.090
that could have been a bad get request.

62
00:04:00.090 --> 00:04:02.888
You can see my inline scripts
don't load anymore, right?

63
00:04:02.888 --> 00:04:07.669
And so even if a script got injected,
it doesn't matter, right?

64
00:04:07.669 --> 00:04:11.369
Cuz if we take a look at this,

65
00:04:11.369 --> 00:04:16.629
you can see the browser was like, nope.

66
00:04:16.629 --> 00:04:18.096
Not allowing these things cuz it's not.

67
00:04:18.096 --> 00:04:20.090
My favicon didn't even load.

68
00:04:20.090 --> 00:04:23.303
My beautiful little emoji
favicon didn't even load.

69
00:04:23.303 --> 00:04:30.174
We could get even more draconian here,
where we could say, we'll say,

70
00:04:30.174 --> 00:04:35.582
let's only go with,
you can say no iframes whatsoever,

71
00:04:35.582 --> 00:04:41.119
which we'll find out why that
might be a good thing later.

72
00:04:41.119 --> 00:04:43.219
You can fully sandbox this thing.

73
00:04:43.219 --> 00:04:45.393
You can get to the point where
even forms can't be submitted.

74
00:04:45.393 --> 00:04:49.617
But let's go ahead and we'll just say,
let's just say these two here.

75
00:04:49.617 --> 00:04:54.136
So we're not even loading
fonts from anywhere else.

76
00:04:54.136 --> 00:04:57.177
Oop, let's see.

77
00:04:57.177 --> 00:05:00.172
No, I don't want that either.

78
00:05:05.105 --> 00:05:06.872
&gt;&gt; Steve Kinney: The one thing I'm not.

79
00:05:12.113 --> 00:05:14.876
&gt;&gt; Steve Kinney: Those are the ones
loading internally, but

80
00:05:14.876 --> 00:05:16.825
the font isn't, let's see.

81
00:05:26.312 --> 00:05:28.354
&gt;&gt; Steve Kinney: So
we got a few of them blocked here.

82
00:05:28.354 --> 00:05:31.615
My defaultSrc, I wonder what happens
if I change this one to none.

83
00:05:36.645 --> 00:05:37.832
&gt;&gt; Steve Kinney: Maybe I have it cached.

84
00:05:37.832 --> 00:05:39.352
I gotta see, let's open.

85
00:05:42.522 --> 00:05:44.909
&gt;&gt; Steve Kinney: Truly breaking everything
I'm not super interested in, so

86
00:05:44.909 --> 00:05:46.655
I'm not gonna play
around with it too much.

87
00:05:46.655 --> 00:05:51.233
But we can see that it doesn't
matter what the inline scripts are,

88
00:05:51.233 --> 00:05:53.533
mostly protected immediately.

89
00:05:53.533 --> 00:05:58.785
I had it really broken before, where it
looked like a regular old plain HTML page.

90
00:05:58.785 --> 00:06:04.318
That is while I aspire to show you that,
not really useful or helpful.

91
00:06:04.318 --> 00:06:09.268
So I'm not gonna spend too much
time fussing with that, but

92
00:06:09.268 --> 00:06:13.240
we can begin to loosen it
up a little bit as well.

93
00:06:13.240 --> 00:06:17.763
So we've got a lot of that in place,
and we can,

94
00:06:17.763 --> 00:06:24.117
I think I said before, we can begin
to build it out a little bit too.

95
00:06:24.117 --> 00:06:28.735
So for instance,
I think if we wanted to allow,

96
00:06:28.735 --> 00:06:32.667
you saw before, did I have the CSS from?

97
00:06:32.667 --> 00:06:35.377
Let's see, let's say images, right?

98
00:06:35.377 --> 00:06:36.729
We wanna let Frontend Masters in.

99
00:06:39.624 --> 00:06:42.884
&gt;&gt; Steve Kinney: I think if I do that,
that's how I broke the CSS.

100
00:06:42.884 --> 00:06:45.670
I let otherwise harmless CSS in.

101
00:06:45.670 --> 00:06:48.582
If I say only for my own origin,

102
00:06:48.582 --> 00:06:54.525
then now I'm down to the ugliest
version possible of the page.

103
00:06:54.525 --> 00:06:59.285
Because we're not loading that third party
tailwind style sheet or anything along

104
00:06:59.285 --> 00:07:03.569
those lines, we are saying only stuff
coming from the own origin, which is

105
00:07:03.569 --> 00:07:08.125
basically solely that cat picture,
I think, if I'm remembering correctly.

106
00:07:08.125 --> 00:07:12.271
I think I only left that in there for
that reason, but

107
00:07:12.271 --> 00:07:18.206
I could say something like,
that should bring back the tailwind stuff.

108
00:07:18.206 --> 00:07:19.015
Yeah, that's fine.

109
00:07:19.015 --> 00:07:21.476
We can go look at the source, but
you can begin to put these things in,

110
00:07:21.476 --> 00:07:22.976
you've got script, you've got style.

111
00:07:22.976 --> 00:07:29.747
If you wanted to let that other code
run again, you could say, quotes.

112
00:07:32.425 --> 00:07:33.166
&gt;&gt; Steve Kinney: My quoting got weird.

113
00:07:33.166 --> 00:07:36.617
There we go.

114
00:07:36.617 --> 00:07:39.825
I don't know what that is,
we'll take that out for a second.

115
00:07:39.825 --> 00:07:41.438
So unsafe-inline, you can allow, again,

116
00:07:41.438 --> 00:07:43.099
I'm gonna explain to
you why you shouldn't.

117
00:07:47.190 --> 00:07:48.899
&gt;&gt; Steve Kinney: And yeah, you can play
around with a whole bunch of stuff here.

118
00:07:48.899 --> 00:07:53.462
But the idea is, this is one of the
fundamental principles that we wanna talk

119
00:07:53.462 --> 00:07:58.260
about here, which is instead of just
trying to block out the bad stuff, right?

120
00:07:58.260 --> 00:08:00.851
Cuz someone's gotta
find a way around that.

121
00:08:00.851 --> 00:08:03.449
What you begin to do is you just say, hey,

122
00:08:03.449 --> 00:08:07.555
here is the list of things that I
want to begin to build up, right?

123
00:08:07.555 --> 00:08:10.544
And you can kinda compose it over time,
right?

124
00:08:10.544 --> 00:08:12.986
And kinda get all of that
in place as well, and

125
00:08:12.986 --> 00:08:15.894
start to just allow list
those domains that you want.

126
00:08:15.894 --> 00:08:19.512
So if we go look at this page, right, so

127
00:08:19.512 --> 00:08:25.018
we could say something like,
for the font source, right?

128
00:08:25.018 --> 00:08:28.627
Not that I really want that font back
all that badly, but to make a point.

129
00:08:33.801 --> 00:08:36.116
&gt;&gt; Steve Kinney: You could say whether or
not you allow data attributes in there.

130
00:08:36.116 --> 00:08:38.731
If you want to on the Socialite app, and

131
00:08:38.731 --> 00:08:43.893
I'll leave this as an exercise to the
reader, you can put in a URL for a photo.

132
00:08:43.893 --> 00:08:48.015
So you could literally devoid yourself and
hit everyone with a worm, right?

133
00:08:48.015 --> 00:08:50.528
Cuz then everyone who sees
your thing will also post.

134
00:08:50.528 --> 00:08:53.957
So you can also block anything, but

135
00:08:53.957 --> 00:08:58.771
either data attributes or
stuff from the on site.

136
00:08:58.771 --> 00:09:01.058
You can kinda play around with
a bunch of these different examples.

137
00:09:01.058 --> 00:09:05.158
So this is one that will get
me back to the glory days, but

138
00:09:05.158 --> 00:09:07.355
a more protected glory days.

139
00:09:07.355 --> 00:09:11.879
So this is one that allows all the same
stuff, but if new, [LAUGH] it's like,

140
00:09:11.879 --> 00:09:15.004
if new script injection happened,
I would be safe.

141
00:09:15.004 --> 00:09:18.472
So we can kinda walk through
this one here, where by default,

142
00:09:18.472 --> 00:09:21.285
the default self is anything
from the own origin.

143
00:09:21.285 --> 00:09:24.504
Here, we can choose whether or
not we want to allow the save-inline.

144
00:09:24.504 --> 00:09:27.623
I am gonna choose to still block that,
I think.

145
00:09:27.623 --> 00:09:34.005
And then we've got this idea of, we've got
whether or not we wanna inject styles.

146
00:09:34.005 --> 00:09:36.024
I'm gonna say no to that,
but keep the rest.

147
00:09:36.024 --> 00:09:39.374
Awesome, images, here we can let it from

148
00:09:39.374 --> 00:09:44.077
static.frontendmasters as
well as my favicon, right?

149
00:09:44.077 --> 00:09:47.099
But now, if new stuff gets added for
any reason, right?

150
00:09:47.099 --> 00:09:48.713
And even if you had a content site,

151
00:09:48.713 --> 00:09:51.172
let's say you were making it on Instagram,
right?

152
00:09:51.172 --> 00:09:54.534
They upload the photo,
that photo's probably on your CDN, right?

153
00:09:54.534 --> 00:09:58.418
So you would then say, hey, the S3 bucket
that I have with Cloud flare with the DNS,

154
00:09:58.418 --> 00:09:59.537
I'm gonna allow that.

155
00:09:59.537 --> 00:10:04.056
But if other images get put in here
somewhere, that could be a CSRF attack,

156
00:10:04.056 --> 00:10:06.369
it could be, I don't know if you can.

157
00:10:06.369 --> 00:10:11.354
I mean, it could actually be,
there is one of the XSS attacks that

158
00:10:11.354 --> 00:10:15.250
I can show you in a second
if you really wanna see it,

159
00:10:15.250 --> 00:10:19.419
is you throw in an image tag
with a BS-like source, and

160
00:10:19.419 --> 00:10:23.884
then you give it the onerror
attribute to run JavaScript.

161
00:10:23.884 --> 00:10:27.793
It immediately breaks, and
this will even stop that as well, right?

162
00:10:27.793 --> 00:10:31.177
Cuz it wouldn't be in that list,
it would never try to load that resource.

163
00:10:31.177 --> 00:10:34.678
So actually, it's like, no,
I only care about script injection.

164
00:10:34.678 --> 00:10:39.009
No, you care about a wide range of
things cuz it doesn't always have to be

165
00:10:39.009 --> 00:10:41.210
JavaScript to execute JavaScript.

166
00:10:41.210 --> 00:10:45.570
Your sanitizer should get that,
of course, but if it doesn't,

167
00:10:45.570 --> 00:10:50.903
we saw that with the onmouseover link
that was one of the Twitter worms, right?

168
00:10:50.903 --> 00:10:55.825
A CSP would have caught that
if CSPs fully existed then.

169
00:10:55.825 --> 00:10:59.024
So you do wanna start out draconian.

170
00:10:59.024 --> 00:11:02.288
Now, I get it, you have a legacy app,
you probably can't do that.

171
00:11:02.288 --> 00:11:06.478
There is a header to set it to report,
right?

172
00:11:06.478 --> 00:11:11.104
At which point, it won't block anything,
but you can either have it show up

173
00:11:11.104 --> 00:11:15.528
in your console, or you can give it
a URI to actually send the reports to.

174
00:11:15.528 --> 00:11:18.672
So you can actually see
where the violations are and

175
00:11:18.672 --> 00:11:21.391
begin to kinda build it
up like that as well.

176
00:11:21.391 --> 00:11:26.316
So we'll say, yeah, no iframes as well.

177
00:11:26.316 --> 00:11:27.930
Put all of this in place.

178
00:11:27.930 --> 00:11:33.058
This is the reportTo,
I think you can set a URL later.

179
00:11:33.058 --> 00:11:34.583
So on and so forth.

180
00:11:34.583 --> 00:11:37.873
Where do we allow fonts from?

181
00:11:37.873 --> 00:11:41.566
Cool, and so that should get me
back to the glory days, right?

182
00:11:41.566 --> 00:11:45.659
You can see my inline script didn't load,
that I had before, that pink bar.

183
00:11:45.659 --> 00:11:55.101
If I put back that,
&gt;&gt; Steve Kinney: Now

184
00:11:55.101 --> 00:11:59.973
my inline script loads because I
had to opt in to inline scripting.

185
00:11:59.973 --> 00:12:04.370
So just the act of having one,
honestly, at all,

186
00:12:04.370 --> 00:12:10.146
I think even if this was anywhere,
I think I can put a star in here.

187
00:12:10.146 --> 00:12:13.996
But the point is, it would still,
I think, out of the box,

188
00:12:13.996 --> 00:12:18.474
save you from at least the worst,
which is not everything, though.

189
00:12:18.474 --> 00:12:22.709
And it's why, if you can, one of
the principles is allow list your way up,

190
00:12:22.709 --> 00:12:24.806
not deny list your way down, right?

191
00:12:24.806 --> 00:12:27.592
And start to add those
things in accordingly.

192
00:12:27.592 --> 00:12:33.060
So in summary, let's look at
the content security policies.

193
00:12:33.060 --> 00:12:34.517
Why do they exist?

194
00:12:34.517 --> 00:12:36.774
To stop cross-site scripting, right?

195
00:12:36.774 --> 00:12:41.728
Cuz again, as we saw,
the CSP attacks that we saw, first of all,

196
00:12:41.728 --> 00:12:44.538
they all had earlier dates, right?

197
00:12:44.538 --> 00:12:48.174
I think a lot of the cookie
policies protect you there.

198
00:12:48.174 --> 00:12:53.723
The CSP is here to solve the idea they
got the code in on your same site, right?

199
00:12:53.723 --> 00:12:58.976
And so, by only allowing things
that you allow for, again,

200
00:12:58.976 --> 00:13:04.961
the name of the game is shrinking
the surface area as low as possible.

201
00:13:04.961 --> 00:13:06.825
So you're already sanitizing inputs,

202
00:13:06.825 --> 00:13:09.519
you're already trying to strip
out that onmouseover it.

203
00:13:09.519 --> 00:13:12.057
But if they do something where it's like,

204
00:13:12.057 --> 00:13:15.429
I found out putting a new line
between Java and script loads it.

205
00:13:15.429 --> 00:13:18.357
And now it's around your filter,
you then, all right,

206
00:13:18.357 --> 00:13:21.472
welcome to my next line of defense,
please go away, right?

207
00:13:21.472 --> 00:13:26.196
And at some points, if it's just become so
hard to attack you,

208
00:13:26.196 --> 00:13:30.208
maybe there is a one
one-thousandth of a chance, but

209
00:13:30.208 --> 00:13:35.137
at some point, the idea is to make
it as unappealing as possible.

210
00:13:35.137 --> 00:13:35.746
Cool.

211
00:13:37.916 --> 00:13:41.680
&gt;&gt; Steve Kinney: Like I said, if you need
to, you can actually set a second header

212
00:13:41.680 --> 00:13:44.966
called
Content-Security-Policy-Report-Only,

213
00:13:44.966 --> 00:13:46.940
which will allow you to log them.

214
00:13:46.940 --> 00:13:49.167
You can actually give it
a URL to send it to, and

215
00:13:49.167 --> 00:13:51.177
so you could collect them server-side.

216
00:13:51.177 --> 00:13:53.603
Again, if you can get
away without doing this,

217
00:13:53.603 --> 00:13:57.244
don't do it because you're not
necessarily getting the protection,

218
00:13:57.244 --> 00:14:01.391
you're just getting a way to start paying
down tech debt to get all the way there.

219
00:14:01.391 --> 00:14:05.597
There are some old headers, so check your
code base for these, they're deprecated.

220
00:14:05.597 --> 00:14:12.167
Maybe they still work, but
assume they don't, right?

221
00:14:12.167 --> 00:14:17.334
Cool, and again,
if you can get it all the way down,

222
00:14:17.334 --> 00:14:25.441
you can get to the point where you don't
necessarily have to worry about too much,

223
00:14:25.441 --> 00:14:30.282
but at least get to
the point we're not letting.

224
00:14:30.282 --> 00:14:34.030
You can do the refractor that gets your
inline scripts out to script files

225
00:14:34.030 --> 00:14:35.757
that you load on your own domain.

226
00:14:35.757 --> 00:14:38.816
And so that at least,
if someone does get another inline script,

227
00:14:38.816 --> 00:14:40.327
those are completely blocked.

228
00:14:40.327 --> 00:14:43.711
Inline style,
which you can do on that XSS playground,

229
00:14:43.711 --> 00:14:46.163
you can also put a div with a background.

230
00:14:46.163 --> 00:14:50.832
You do a div that is a style tag in it and
it says body background red.

231
00:14:50.832 --> 00:14:54.951
You can do all sorts of stuff to that
page that is all very rude and have fun.

232
00:14:54.951 --> 00:14:59.069
But you can also then try it on that page
too, put a CSP on that page and see,

233
00:14:59.069 --> 00:15:01.470
of those attacks, which ones still work?

234
00:15:01.470 --> 00:15:02.696
Almost none of them will.

