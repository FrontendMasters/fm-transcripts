WEBVTT

1
00:00:00.000 --> 00:00:03.900
And so I kind of alluded to before,
Lax is probably the best

2
00:00:03.900 --> 00:00:08.213
balance because you can send links and
stuff along those lines.

3
00:00:08.213 --> 00:00:13.072
But strict, obviously, if you can get
away with it, sure, yeah, do that.

4
00:00:13.072 --> 00:00:17.071
But you probably can't for a lot of cases.

5
00:00:17.071 --> 00:00:21.122
But if you're working on developer tool, I
don't know, some Someone sends you a link,

6
00:00:21.122 --> 00:00:24.794
maybe it's fair to make you log in again,
but if you are a social media bar store,

7
00:00:24.794 --> 00:00:25.678
that's not okay?

8
00:00:25.678 --> 00:00:27.539
And so it all depends on the use case.

9
00:00:27.539 --> 00:00:31.289
And this is that balance between
the trade offs, between UX and

10
00:00:31.289 --> 00:00:35.336
security sometimes, which is if
your site is inhospitable to use.

11
00:00:35.336 --> 00:00:37.878
You don't really need to worry about
security that much because you only got no

12
00:00:37.878 --> 00:00:39.817
users, generally speaking,
as far as we're concerned.

13
00:00:39.817 --> 00:00:40.929
This is the law of the land.

14
00:00:40.929 --> 00:00:46.035
But I worry about, particularly people

15
00:00:46.035 --> 00:00:53.100
who have older machines that
maybe don't get updates.

16
00:00:53.100 --> 00:00:58.476
And so you're not totally out of
the woods there, but generally speaking,

17
00:00:58.476 --> 00:01:03.101
you can hope but you ideally have
analytics on the browser usage.

18
00:01:03.101 --> 00:01:06.272
If you see 100% that everything's
above this, then sure,

19
00:01:06.272 --> 00:01:08.689
you can hope for
the same site lax as the default.

20
00:01:08.689 --> 00:01:13.466
You can also set it as Lax when you
set the cookie, or strict as well.

21
00:01:13.466 --> 00:01:17.412
But if it's a giant microservice
architecture, stuff is going around,

22
00:01:17.412 --> 00:01:21.039
you have this whole legacy thing,
and maybe it's It's hard to do,

23
00:01:21.039 --> 00:01:24.944
to set it, but generally speaking,
this is the kind of timeline there.

24
00:01:24.944 --> 00:01:28.673
There's one exception which
people have taken advantage of,

25
00:01:28.673 --> 00:01:32.892
which we'll call the two-minute rule,
which is effectively OAuth,

26
00:01:32.892 --> 00:01:37.394
when there's that kind of back and
forth dance between different origins to

27
00:01:37.394 --> 00:01:40.091
set the cooking and
stuff along those lines.

28
00:01:40.091 --> 00:01:44.147
If you're not setting explicitly,
there's a two-minute window

29
00:01:44.147 --> 00:01:48.000
where it's not such that lack
security can be none in that case.

30
00:01:48.000 --> 00:01:52.498
But that's a very tiny window for
an attack, especially when we're talking

31
00:01:52.498 --> 00:01:56.303
about CSRF, which means in the time
that you've just logged in,

32
00:01:56.303 --> 00:01:59.852
you would then need to make it
to the nefarious site, right?

33
00:01:59.852 --> 00:02:04.116
That's not to ruin the end of
the first Star Wars movie, but

34
00:02:04.116 --> 00:02:08.308
it is unlikely that charge is
getting into the Death Star.

35
00:02:08.308 --> 00:02:13.451
But yeah, to be clear, if I needed
to further hone my point of you

36
00:02:13.451 --> 00:02:20.238
should still do the protections we're
gonna see, here's an appeal to that point.

37
00:02:20.238 --> 00:02:23.828
Cool, so we'll do this in a second,
same site, cookies.

38
00:02:23.828 --> 00:02:29.167
We will definitely again, Lax is the
default, but it doesn't hurt to set it.

39
00:02:29.167 --> 00:02:33.938
And then we saw before,
which is if the issue is that we need some

40
00:02:33.938 --> 00:02:38.727
amount of unpredictability,
we can just put unpredictable.

41
00:02:38.727 --> 00:02:40.402
Ability into our form,

42
00:02:40.402 --> 00:02:45.361
that you need to know some special
thing that only the user would know.

43
00:02:45.361 --> 00:02:49.558
Because again, they're not in your app,
they're somewhere else.

44
00:02:49.558 --> 00:02:54.047
If theoretically, don't have any
kind of weird token that you made.

45
00:02:54.047 --> 00:02:58.654
Kind of when we saw the signing the cookie
before, they don't have that available.

46
00:02:58.654 --> 00:03:03.182
You can can leak it and there are easy
ways to do that which you'll see as well.

47
00:03:03.182 --> 00:03:08.364
But generally speaking,
some of these will work.

48
00:03:08.364 --> 00:03:10.994
But we're gonna focus on the first one.

49
00:03:10.994 --> 00:03:15.442
The referrer-based validation is
tracking the referrer header, but

50
00:03:15.442 --> 00:03:17.600
you can spoof that it's not hard.

