WEBVTT

1
00:00:00.000 --> 00:00:01.820
&gt;&gt; Steve Kinney: So now, we're gonna
do a little bit of a victory lap here.

2
00:00:01.820 --> 00:00:06.665
We're gonna talk about ones that involve
at least a certain amount of social

3
00:00:06.665 --> 00:00:08.188
engineering, right?

4
00:00:08.188 --> 00:00:12.017
Which means, before,
with cross-site request forgery,

5
00:00:12.017 --> 00:00:16.306
we were tricking the browser into
doing something on their behalf.

6
00:00:16.306 --> 00:00:20.003
In cross-site scripting,
we were tricking, again,

7
00:00:20.003 --> 00:00:24.891
the browser into doing something on
their behalf in a more insidious way.

8
00:00:24.891 --> 00:00:31.192
In this kinda next kinda example,
what we're gonna do is effectively look

9
00:00:31.192 --> 00:00:36.702
at how can we trick the user into
just doing the bad thing, right?

10
00:00:36.702 --> 00:00:41.836
And one of those is called clickjacking,

11
00:00:41.836 --> 00:00:46.686
and that's a definition that I wrote.

12
00:00:46.686 --> 00:00:49.733
I'm gonna give you the shorter
version of that definition.

13
00:00:49.733 --> 00:00:54.865
You take the thing you want them to do and
you make it an opacity of 0,

14
00:00:54.865 --> 00:01:00.268
and then you put something else that
they want to do behind it and you hope

15
00:01:00.268 --> 00:01:05.976
that the mouse clicks the bad thing
that you want to have happened, right?

16
00:01:05.976 --> 00:01:09.952
And so basically, you are kind of
definitely click this button and

17
00:01:09.952 --> 00:01:13.511
realizing that button does
something nefarious, right?

18
00:01:13.511 --> 00:01:16.978
Again, this involves that they
don't look at the URL bar.

19
00:01:16.978 --> 00:01:22.980
This involves, you get a lot of things
just right depending on what you work on,

20
00:01:22.980 --> 00:01:27.909
the target audience for
this attack could be different, right,

21
00:01:27.909 --> 00:01:33.391
which is why it's kinda in our bonus
run victory lap section of the show.

22
00:01:33.391 --> 00:01:38.538
But effectively, we'll talk about it and
then I will show you kind of

23
00:01:38.538 --> 00:01:44.327
a quick example, which is they take
a your webpage, they embed it in iframe.

24
00:01:44.327 --> 00:01:49.738
They either put something in front of
it or put it in front of something and

25
00:01:49.738 --> 00:01:55.419
play around the opacity and positioning
to make where you click on the iframe

26
00:01:55.419 --> 00:02:00.769
the thing they wanna have happen,
but hide it from you with deception.

27
00:02:00.769 --> 00:02:03.563
That way, the user thinks
they're doing something else and

28
00:02:03.563 --> 00:02:05.988
they're doing the thing
that you wanted them to do.

29
00:02:05.988 --> 00:02:07.941
That's cool, words are nice.

30
00:02:07.941 --> 00:02:10.511
Let's go take a look.

31
00:02:10.511 --> 00:02:12.699
So you can imagine what
this in the examples,

32
00:02:12.699 --> 00:02:15.125
then what this one called
clickjacking might do.

33
00:02:15.125 --> 00:02:16.739
So let's check that one out.

34
00:02:21.717 --> 00:02:25.160
&gt;&gt; Steve Kinney: So yeah,
npm start, clickjacking.

35
00:02:25.160 --> 00:02:31.099
So I'm running two different ports
right now, the attacker and the victim.

36
00:02:31.099 --> 00:02:34.153
Let's look at the victim site first.

37
00:02:34.153 --> 00:02:36.595
No, holding option is not what I wanted.

38
00:02:36.595 --> 00:02:42.477
So this is the legit site, right?

39
00:02:42.477 --> 00:02:45.524
Yeah, I wasn't building
an entire another bank UI, okay?

40
00:02:45.524 --> 00:02:50.257
This button, you click it,
it sends $100 to Alice, right?

41
00:02:50.257 --> 00:02:55.305
Ideally, you're logged in,
everything's fine, yay, yay, yay.

42
00:02:55.305 --> 00:03:01.865
The attack site, and I purposely,
just to kind of make a point,

43
00:03:01.865 --> 00:03:08.807
the attack site here has this cool
button that says Win a Free Prize.

44
00:03:08.807 --> 00:03:11.505
Let's go click that button.

45
00:03:11.505 --> 00:03:14.524
You also sent $100 to Alice, right?

46
00:03:14.524 --> 00:03:19.453
Now, again, I'm peeking out the old UI so
I can make a point, but

47
00:03:19.453 --> 00:03:24.205
ideally you could either play
with the opacity a little bit, or

48
00:03:24.205 --> 00:03:27.791
get the positioning just right,
to be, yeah,

49
00:03:27.791 --> 00:03:31.579
one of those stupid games or
something like that.

50
00:03:31.579 --> 00:03:34.011
Do the thing and make it happen, right?

51
00:03:34.011 --> 00:03:36.656
Again, this involves that
they don't look at the URL,

52
00:03:36.656 --> 00:03:38.978
that you get the entire look and
feel just right.

53
00:03:38.978 --> 00:03:44.052
But we all have people in our lives
that we know would fall for this.

54
00:03:44.052 --> 00:03:45.686
Let's be honest with ourselves.

55
00:03:45.686 --> 00:03:49.975
If you close your eyes, you can think
about somebody you know in your family

56
00:03:49.975 --> 00:03:52.168
that would definitely fall for this.

57
00:03:52.168 --> 00:03:53.395
Honestly, it could be my 11-year-old son,
[LAUGH] right?

58
00:03:53.395 --> 00:03:58.498
So we go through and we can kinda

59
00:03:58.498 --> 00:04:04.398
get a sense of kinda how this works.

60
00:04:04.398 --> 00:04:09.075
This is just starting the two different
servers, yada yada, nothing to see here.

61
00:04:09.075 --> 00:04:12.791
Okay, victim is just a normal site,
nothing that you wouldn't expect to see,

62
00:04:12.791 --> 00:04:14.463
it's got a button, it does stuff.

63
00:04:14.463 --> 00:04:19.179
The attacker is a little more interesting,
which is, if you look,

64
00:04:19.179 --> 00:04:23.647
we've got this iframe, which is,
other than ports are hard and

65
00:04:23.647 --> 00:04:27.318
local host,
assume that that is a real domain name.

66
00:04:27.318 --> 00:04:30.198
It's got an iframe, and
we can kind of go take a look.

67
00:04:30.198 --> 00:04:33.619
That one is set to actually be seen.

68
00:04:33.619 --> 00:04:37.143
I think I can change the opacity of 0, but

69
00:04:37.143 --> 00:04:41.191
the more important part
is there is a CSS class.

70
00:04:41.191 --> 00:04:45.066
I'm using the Tailwind one, but there's
a CSS property called pointer-events-none.

71
00:04:45.066 --> 00:04:48.628
That means I don't care what happens
when you click on this thing.

72
00:04:48.628 --> 00:04:53.700
Make believe that it's unclickable,
unanythingable, right?

73
00:04:53.700 --> 00:04:58.627
And if you look, effectively,
what you can do is absolute position, and

74
00:04:58.627 --> 00:05:03.238
you're just putting it over the other
one and saying all click events

75
00:05:03.238 --> 00:05:08.268
should pass through to the underlying
to whatever's beneath it, right?

76
00:05:08.268 --> 00:05:12.945
And this is useful in a whole
bunch of places, but in this case,

77
00:05:12.945 --> 00:05:17.822
all that is really happening is,
I think, if I'm not mistaken.

78
00:05:17.822 --> 00:05:23.164
I just thought it was better to show it,
but if we're not mistaken,

79
00:05:23.164 --> 00:05:27.773
yeah, this looks like we made
the other one an opacity 0.

80
00:05:27.773 --> 00:05:29.295
Still there, right?

81
00:05:29.295 --> 00:05:33.164
All click events go through
the malicious site and

82
00:05:33.164 --> 00:05:36.582
pass down into the invisible site, right?

83
00:05:36.582 --> 00:05:39.784
And so this could be, and
they're logged in, right?

84
00:05:39.784 --> 00:05:41.480
That's a legit cookie session.

85
00:05:41.480 --> 00:05:44.253
We're not CSRFing anything, right?

86
00:05:44.253 --> 00:05:48.753
It's a fine click event
that was totally cool and

87
00:05:48.753 --> 00:05:53.373
very normal,
except that it wasn't cool at all.

88
00:05:53.373 --> 00:05:56.212
And something could happen
behind the scenes, and

89
00:05:56.212 --> 00:05:58.728
they probably wouldn't even know, right?

90
00:05:58.728 --> 00:06:04.072
And so
how do we protect yourself against this?

91
00:06:04.072 --> 00:06:04.706
Do we have any ideas?

92
00:06:06.943 --> 00:06:08.817
&gt;&gt; Steve Kinney: I have
slides if we don't, but-

93
00:06:08.817 --> 00:06:10.807
&gt;&gt; Student: There's some headers that I've

94
00:06:10.807 --> 00:06:11.663
used before.

95
00:06:11.663 --> 00:06:12.784
&gt;&gt; Steve Kinney: Like what?

96
00:06:12.784 --> 00:06:14.042
&gt;&gt; Student: I'd have to
look, I can't remember.

97
00:06:14.042 --> 00:06:16.599
&gt;&gt; Steve Kinney: So
you've got a few options.

98
00:06:16.599 --> 00:06:20.814
There is this one that will work,

99
00:06:20.814 --> 00:06:25.935
which is frame-options, which you can

100
00:06:25.935 --> 00:06:32.271
guess what either deny or
same origin do, right?

101
00:06:32.271 --> 00:06:34.877
Deny means, no, you cannot frame me.

102
00:06:34.877 --> 00:06:36.185
I will not be framed.
Literally,

103
00:06:36.185 --> 00:06:39.792
I guess you are truly
being framed in this case.

104
00:06:39.792 --> 00:06:43.254
God, I hate puns, hate puns.

105
00:06:43.254 --> 00:06:46.404
But you can deny it outright or

106
00:06:46.404 --> 00:06:51.698
you say only things from the same origin,
right?

107
00:06:51.698 --> 00:06:57.129
So only things from the origin that I
have as a page can also frame me, right?

108
00:06:57.129 --> 00:07:01.673
Which is probably also useful
if you need to embed your own

109
00:07:01.673 --> 00:07:04.238
content into the page, right?

110
00:07:04.238 --> 00:07:09.320
And it's tricky because a lot of times you
see those, this whole idea of iframes.

111
00:07:09.320 --> 00:07:13.484
And sharing cross origin work makes
total sense in a lot of cases,

112
00:07:13.484 --> 00:07:18.479
because you think about those, you go to
a site and you see a comment section and

113
00:07:18.479 --> 00:07:21.602
you're already logged into Facebook,
right?

114
00:07:21.602 --> 00:07:24.689
Those comments are in an iframe, right?

115
00:07:24.689 --> 00:07:28.889
That is, that Facebook is hosting, so
your Facebook cookie works, right?

116
00:07:28.889 --> 00:07:33.027
And so there's a lot of reasonable use
cases that can be taken advantage of.

117
00:07:33.027 --> 00:07:37.212
But if you know that you're not
doing one of these things, and

118
00:07:37.212 --> 00:07:39.235
you can also set this header.

119
00:07:39.235 --> 00:07:40.934
This is an example of not using Helmet.

120
00:07:40.934 --> 00:07:45.021
If you just wanted to see, I think, for
the CSP, there's enough going on, and

121
00:07:45.021 --> 00:07:47.705
trying to do string
interpolation was not worth it.

122
00:07:47.705 --> 00:07:50.771
But you can also just
set a header as well.

123
00:07:50.771 --> 00:07:54.306
So let's go ahead and
we'll try that one out first, there it is.

124
00:07:54.306 --> 00:07:55.465
We can do this.

125
00:08:01.807 --> 00:08:03.678
&gt;&gt; Steve Kinney: We can
deny any kind of framing.

126
00:08:03.678 --> 00:08:08.016
And now, if we go back,
&gt;&gt; Steve Kinney: Let's see,

127
00:08:08.016 --> 00:08:09.139
I might have to kill this.

128
00:08:09.139 --> 00:08:12.023
I don't know if this one
totally refreshes the same way.

129
00:08:12.023 --> 00:08:13.585
Can I try to load two at the same time?

130
00:08:13.585 --> 00:08:14.200
We'll find out.

131
00:08:18.023 --> 00:08:20.517
&gt;&gt; Steve Kinney: It has an opacity 0, too,
I think why we got to put that one back.

132
00:08:20.517 --> 00:08:23.788
So we can actually see the fact that,
let's click.

133
00:08:23.788 --> 00:08:26.207
No, I'm still borked.

134
00:08:30.925 --> 00:08:36.188
&gt;&gt; Steve Kinney: All right, I'll check
the header on that one in a second.

135
00:08:36.188 --> 00:08:39.569
We got some other options too,
but that should work.

136
00:08:39.569 --> 00:08:40.197
We'll find out what.

137
00:08:45.442 --> 00:08:47.891
&gt;&gt; Steve Kinney: So
why it didn't work before?

138
00:08:47.891 --> 00:08:53.009
Disable cache doesn't disable the cache if
your developer tools aren't open, right?

139
00:08:53.009 --> 00:08:56.504
And so it cached the header from that
first time and said, this is fine,

140
00:08:56.504 --> 00:08:59.767
which is kind of one of the problems
a little bit with some of these,

141
00:08:59.767 --> 00:09:03.184
the caching, which is you need to
figure out a way to bust that cache.

142
00:09:03.184 --> 00:09:06.726
And we can talk about that
later if you really want to,

143
00:09:06.726 --> 00:09:11.076
involves fun with CDNs and
other stuff like that in a lot of cases.

144
00:09:11.076 --> 00:09:13.773
But if we kinda disable the cache,
we get a fresh page.

145
00:09:13.773 --> 00:09:20.294
You'll see that,
&gt;&gt; Steve Kinney: Refuses to display it,

146
00:09:20.294 --> 00:09:23.014
because the frame options
were set to deny.

147
00:09:23.014 --> 00:09:25.697
And this would be same, it's true,

148
00:09:25.697 --> 00:09:30.645
cuz, I don't know that same origin
on ports matter in the real web.

149
00:09:30.645 --> 00:09:34.380
I'm pretty sure you get a little bit
more leeway with localhost, right?

150
00:09:34.380 --> 00:09:35.712
So I can start up an NGINX thing.

151
00:09:35.712 --> 00:09:40.469
You can see that as well, but I'm not
convinced that same origin would actually

152
00:09:40.469 --> 00:09:42.388
do what I want it to do right now.

153
00:09:42.388 --> 00:09:44.334
And so yeah, that'll do the trick.

154
00:09:44.334 --> 00:09:48.021
And let's see other options that you
have that you can play around with.

155
00:09:48.021 --> 00:09:49.985
Let's see.

156
00:09:49.985 --> 00:09:54.980
So the other one is just
a regular CSP header, which is,

157
00:09:54.980 --> 00:09:59.127
you have one that you
can say frame ancestors,

158
00:09:59.127 --> 00:10:04.357
which is arguably, personally,
I think I have both set.

159
00:10:04.357 --> 00:10:08.941
I think X-Frame-Options is older and
maybe not as widely supported,

160
00:10:08.941 --> 00:10:12.785
but I set both because,
you know what doesn't cost me a lot?

161
00:10:12.785 --> 00:10:17.317
The 20 bytes of setting two headers,

162
00:10:17.317 --> 00:10:20.621
cuz I'm paranoid, right?

163
00:10:20.621 --> 00:10:23.304
But you can kinda have
that in place too and

164
00:10:23.304 --> 00:10:27.915
if you look at the X-Frame-Options,
you had only same origin and deny.

165
00:10:27.915 --> 00:10:30.422
Here, you can also allow list
other ones as well, right?

166
00:10:30.422 --> 00:10:35.689
So I would argue if, for
some reason, you are allergic

167
00:10:35.689 --> 00:10:40.853
to setting both,
go with this one, I guess, right?

168
00:10:40.853 --> 00:10:44.318
It kinda depends on the origin,
unless you're on some shared origin, but

169
00:10:44.318 --> 00:10:45.199
you probably not.

170
00:10:45.199 --> 00:10:47.041
So you can set it there as well.

171
00:10:47.041 --> 00:10:53.062
And the other option is you can write
JavaScript that can check to see

172
00:10:53.062 --> 00:10:59.202
if it has a parent, and if so,
just bust out of the frame completely.

173
00:10:59.202 --> 00:11:03.364
Let's give it, yeah, send-money.ts.

174
00:11:03.364 --> 00:11:07.614
I'm pretty sure I can do,
&gt;&gt; Steve Kinney: Yeah,

175
00:11:07.614 --> 00:11:09.608
something like this should do the trick.

176
00:11:09.608 --> 00:11:12.532
I think TypeScript's going to
get a little angrier with me,

177
00:11:12.532 --> 00:11:17.790
but,
&gt;&gt; Steve Kinney: Let's try this out.

178
00:11:17.790 --> 00:11:24.483
So I'm basically saying,
window has a property called self,

179
00:11:24.483 --> 00:11:30.181
which is itself, and
then top is the parent, right?

180
00:11:30.181 --> 00:11:34.253
And if you are by yourself,
you're your own parent,

181
00:11:34.253 --> 00:11:38.156
and if you're not,
you're in an iframe, right?

182
00:11:38.156 --> 00:11:42.580
And so basically, what we're gonna
to say is, if window.self and

183
00:11:42.580 --> 00:11:46.862
window.top are not the same,
bust me out of this frame, right?

184
00:11:46.862 --> 00:11:50.123
And so let's see if that works.

185
00:11:50.123 --> 00:11:52.662
Except we didn't load the frame at all,
cuz I still have that CSP header.

186
00:11:52.662 --> 00:11:55.429
So let's take that out.

187
00:11:55.429 --> 00:11:57.889
Too much protection.

188
00:11:57.889 --> 00:11:58.773
Where is it?

189
00:11:58.773 --> 00:12:00.783
Alphabetical order is hard.

190
00:12:00.783 --> 00:12:04.343
&gt;&gt; Dustin: I know your browser's blocking
something in the upper right corner.

191
00:12:04.343 --> 00:12:11.824
Is that the redirect it in
the URL bar on the upper right?

192
00:12:11.824 --> 00:12:19.404
&gt;&gt; Steve Kinney: Yeah, hey,
there we go, let's try it again.

193
00:12:19.404 --> 00:12:23.439
Dustin saves the day.

194
00:12:23.439 --> 00:12:25.792
Yeah, it was kinda interesting, because
maybe you need both in this case, too.

195
00:12:25.792 --> 00:12:29.778
But basically,
the very legit site is saying,

196
00:12:29.778 --> 00:12:34.571
if I'm in a frame,
get me out of the frame, right?

197
00:12:34.571 --> 00:12:39.066
Re-navigate me out of back to
innocent payment site, right, and

198
00:12:39.066 --> 00:12:40.682
not where I was before.

199
00:12:40.682 --> 00:12:42.464
Now, it's interesting.

200
00:12:42.464 --> 00:12:47.445
Chrome's security then was like, whoa,
your code is trying to change all this,

201
00:12:47.445 --> 00:12:49.211
so maybe you need to do both.

202
00:12:49.211 --> 00:12:55.904
But theoretically, you can also choose
to try to navigate yourself out as well.

203
00:12:55.904 --> 00:12:58.228
And so that basically just
tries to destroy out the frame.

204
00:12:58.228 --> 00:13:01.850
Arguably, I would say that if it
is truly concerning both, again,

205
00:13:01.850 --> 00:13:05.407
to our theme of earlier today,
which is ideally have the CSP saying

206
00:13:05.407 --> 00:13:09.727
your frame doesn't load, and then also
maybe have the fallback, which is if for

207
00:13:09.727 --> 00:13:12.803
some reason it did,
not because CSPs will ever fail you.

208
00:13:12.803 --> 00:13:18.488
I've never heard of an issue where
it's CSPs were broken in a browser,

209
00:13:18.488 --> 00:13:23.035
but I have heard times when
somebody made a tiny change and

210
00:13:23.035 --> 00:13:28.267
then the CSP didn't work anymore,
see also me earlier, right?

211
00:13:28.267 --> 00:13:32.439
And so having that fallback mechanism,
even if you never need it,

212
00:13:32.439 --> 00:13:37.357
is good because a lot of times security
misconfigurations are honest mistakes

213
00:13:37.357 --> 00:13:41.772
that somebody did while they're
working on something else, right?

214
00:13:41.772 --> 00:13:45.102
And so having both, I think,
makes total sense, and you should do it.

