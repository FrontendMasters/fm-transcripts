WEBVTT

1
00:00:00.000 --> 00:00:03.853
[MUSIC]

2
00:00:03.853 --> 00:00:06.220
&gt;&gt; Scott Moss: If you
head over to the repo and

3
00:00:06.220 --> 00:00:11.340
if you check out the step-1 branch,
that's where we'll be.

4
00:00:14.606 --> 00:00:18.840
So if we open that up, what you
should see is you should have this,

5
00:00:18.840 --> 00:00:20.890
you should have a client.

6
00:00:20.890 --> 00:00:24.395
You probably don't have this this folder,
that's fine, this is a compiled folder.

7
00:00:24.395 --> 00:00:26.929
It's not even checked into source control,

8
00:00:26.929 --> 00:00:30.538
so don't worry about if you don't
have this folder right here.

9
00:00:30.538 --> 00:00:33.818
You should have client, if you don't
have node modules, do an npm install so

10
00:00:33.818 --> 00:00:36.260
you can install your node modules.

11
00:00:36.260 --> 00:00:40.043
So your objective is,
if you go look in the webpack config,

12
00:00:40.043 --> 00:00:43.840
there's some notes in here,
and it's pretty much set up.

13
00:00:43.840 --> 00:00:46.150
There's some things that I excluded,

14
00:00:46.150 --> 00:00:48.426
if you go look at the example
that we just talked about.

15
00:00:48.426 --> 00:00:52.266
I don't have contacts,
I don't have, I'll put that path.

16
00:00:52.266 --> 00:00:55.670
And that's for a very specific reason, and
we'll talk about that once you're done.

17
00:00:55.670 --> 00:01:00.770
But there's a to do in here that
you have to figure out, and

18
00:01:00.770 --> 00:01:05.960
that to do is,
we need to create a loader pattern for

19
00:01:05.960 --> 00:01:10.030
our JavaScript files cuz right now,
we're handling HTML files.

20
00:01:10.030 --> 00:01:13.852
We're handling stylus files, but
we're not handling our JavaScript files,

21
00:01:13.852 --> 00:01:16.318
which is the meat and
potatoes of our application.

22
00:01:16.318 --> 00:01:17.730
So we need to write a loader for that.

23
00:01:18.920 --> 00:01:25.510
And then, if you go look in our
gulpfile.js, there's a task called build.

24
00:01:25.510 --> 00:01:30.325
And its job is to use webpack
to build our application, so

25
00:01:30.325 --> 00:01:33.347
we need to define those two things.

26
00:01:33.347 --> 00:01:36.797
And we can just look around in the file
for some context on what's happening, and

27
00:01:36.797 --> 00:01:39.140
you'll get a general
idea of what's going on.

28
00:01:39.140 --> 00:01:43.410
So once you have that, we'll be able to go
ahead and start building our application.

29
00:01:43.410 --> 00:01:44.860
&gt;&gt; Audience: We have
a question from online.

30
00:01:44.860 --> 00:01:48.520
John M would like to know where
can we see documentation on what

31
00:01:48.520 --> 00:01:49.790
loaders are available?

32
00:01:49.790 --> 00:01:50.840
&gt;&gt; Scott Moss: That's a good question.

33
00:01:53.442 --> 00:01:56.580
&gt;&gt; Scott Moss: The best way that
I find out, there really isn't.

34
00:01:56.580 --> 00:01:59.870
So webpack, if you go to the webpack
website actually, let me see.

35
00:01:59.870 --> 00:02:04.781
If you go to the, here we go,
if you go to the webpack website,

36
00:02:04.781 --> 00:02:11.023
go to documentation, and as you click
on loaders, let's see where are they.

37
00:02:12.120 --> 00:02:14.525
Here we go, list of loaders, boom.

38
00:02:14.525 --> 00:02:18.855
And they have a list of common
loaders that you'll be using, but

39
00:02:18.855 --> 00:02:23.023
remember we said we were gonna
use Babel as our transpower, so

40
00:02:23.023 --> 00:02:26.327
that's a hint on what
loader you probably need.

41
00:02:26.327 --> 00:02:28.450
And if you look in the package.json,
it's in there too.

42
00:02:28.450 --> 00:02:29.750
So you can kind of figure it out.

43
00:02:31.080 --> 00:02:35.672
So how you know this works is when
you think you've got this working,

44
00:02:35.672 --> 00:02:40.440
you can go to your command line and
just run, let's see if I set it up.

45
00:02:40.440 --> 00:02:44.699
Yeah, you just run npm start, and you'll
see some some stuff in your output, and

46
00:02:44.699 --> 00:02:46.379
you'll see some stuff happen.

47
00:02:46.379 --> 00:02:50.027
If no errors are thrown and if you
just open up, if you go to the port,

48
00:02:50.027 --> 00:02:53.690
whatever port it says, it will tell
you what port it's serving on.

49
00:02:53.690 --> 00:02:56.734
If you go to that port, and
you see an alert, you're good.

50
00:02:56.734 --> 00:02:58.872
If you don't see an alert and
you got an error in your console,

51
00:02:58.872 --> 00:03:00.400
you messed something up.

52
00:03:00.400 --> 00:03:03.504
Because what's happening
is we have this app.js,

53
00:03:03.504 --> 00:03:06.404
which has some ES6 stuff in it,
or ES 2015.

54
00:03:06.404 --> 00:03:08.191
So you know what this looks, if you don't
know what this is, don't worry about it.

55
00:03:08.191 --> 00:03:10.990
We'll get there, but
it's just doing an alert.

56
00:03:10.990 --> 00:03:15.051
So if this compiles down correctly,
it will throw an alert in your browser.

57
00:03:15.051 --> 00:03:18.834
So that's how you know
you've got it working.

58
00:03:18.834 --> 00:03:21.643
So, the result should
look something like this.

59
00:03:21.643 --> 00:03:28.260
So if you come in here and you put npm
start, you will see this with no errors.

60
00:03:28.260 --> 00:03:30.745
You will see all of this output from gulp.

61
00:03:30.745 --> 00:03:34.621
You will see webpack says,
created a bundle.js and

62
00:03:34.621 --> 00:03:39.026
a bundle.js.map,
all of this other stuff from gulp, and

63
00:03:39.026 --> 00:03:43.274
then it says, cool,
you're serving on port 4500.

64
00:03:43.274 --> 00:03:49.598
So if we go look at that,
&gt;&gt; Scott Moss: We'll

65
00:03:49.598 --> 00:03:50.934
see this alert pop up.

66
00:03:54.840 --> 00:03:59.358
&gt;&gt; Scott Moss: If you look in the console,
there's no errors.

67
00:03:59.358 --> 00:04:01.937
That's what you should see.

68
00:04:01.937 --> 00:04:04.427
&gt;&gt; Audience: Can you show us
what your source map looks like?

69
00:04:04.427 --> 00:04:05.973
&gt;&gt; Scott Moss: The actual file?

70
00:04:05.973 --> 00:04:08.164
&gt;&gt; Audience: Or just like,
if you were to debug it.

71
00:04:08.164 --> 00:04:09.129
&gt;&gt; Scott Moss: If I was gonna debug it?

72
00:04:09.129 --> 00:04:11.886
&gt;&gt; Audience: Yeah.
&gt;&gt; Scott Moss: So did you try to go look

73
00:04:11.886 --> 00:04:17.920
at it like in here, and
it didn't show the stuff?

74
00:04:17.920 --> 00:04:20.893
Yeah, so
there's some stuff going on with that, and

75
00:04:20.893 --> 00:04:23.548
the way, let's check it out,
I'll show you.

76
00:04:23.548 --> 00:04:28.397
So if you're going to app,
let's just do a debugger.

77
00:04:34.287 --> 00:04:36.070
&gt;&gt; Scott Moss: So
you see the debugger, right?

78
00:04:36.070 --> 00:04:37.740
It shows my code, it's great.

79
00:04:37.740 --> 00:04:43.392
But there's some timing issues going
on with when the browser reloads and

80
00:04:43.392 --> 00:04:45.954
when the bundle.js is created.

81
00:04:45.954 --> 00:04:49.646
So sometimes you have to refresh, cuz the
browser reloads by itself because they're

82
00:04:49.646 --> 00:04:51.559
using a plugin called
browser sync in gulp.

83
00:04:51.559 --> 00:04:54.510
Sometimes it reloads before
this thing is created.

84
00:04:54.510 --> 00:04:57.966
So you don't have that, back kitchens
have to reload again manually.

85
00:04:57.966 --> 00:05:02.297
And then also, if you just try to go
to sources and look at it by yourself,

86
00:05:02.297 --> 00:05:03.560
it won't show up.

87
00:05:03.560 --> 00:05:05.266
&gt;&gt; Audience: Yeah,
that's what I tried to do.

88
00:05:05.266 --> 00:05:06.980
&gt;&gt; Scott Moss: You'll see webpack's code,

89
00:05:06.980 --> 00:05:11.750
which is just like really,
cuz it's emulating comma js, so

90
00:05:11.750 --> 00:05:15.580
it's a lot of boiler plate in there,
so it will be kinda hard to block.

91
00:05:15.580 --> 00:05:18.880
So yeah, you pretty much have
to have an error thrown or

92
00:05:18.880 --> 00:05:22.640
initiate a debugger yourself to
actually walk through your source code.

93
00:05:22.640 --> 00:05:27.660
Note, though, that the webpack source map

94
00:05:27.660 --> 00:05:32.190
is just like one of like ten different
dev tool options you can pass in here.

95
00:05:32.190 --> 00:05:35.300
So there are many other dev tool
options that you can play around with

96
00:05:35.300 --> 00:05:36.620
that might be better.

97
00:05:36.620 --> 00:05:39.867
They have like an in line mode,
they have like a eval mode.

98
00:05:39.867 --> 00:05:42.406
I urge you to go look at what
they have on the website, but

99
00:05:42.406 --> 00:05:43.715
there might be a better one.

100
00:05:43.715 --> 00:05:46.068
We're just using sourcemap because
that's the most common one.

101
00:05:46.068 --> 00:05:47.070
&gt;&gt; Audience: Sure.
&gt;&gt; Scott Moss: Okay?

