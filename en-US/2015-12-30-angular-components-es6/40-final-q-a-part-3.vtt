WEBVTT

1
00:00:00.000 --> 00:00:03.932
[MUSIC].

2
00:00:03.932 --> 00:00:06.748
&gt;&gt; Speaker 2: So you hosted the notes for

3
00:00:06.748 --> 00:00:10.533
the workshop on net [INAUDIBLE]
&gt;&gt; Scott Moss: Yeah.

4
00:00:10.533 --> 00:00:12.211
&gt;&gt; Speaker 2: What is that?

5
00:00:12.211 --> 00:00:12.806
&gt;&gt; Scott Moss: Neda file?

6
00:00:12.806 --> 00:00:14.788
&gt;&gt; Speaker 2: Do you like it?

7
00:00:14.788 --> 00:00:15.780
&gt;&gt; Scott Moss: Where is it at?

8
00:00:15.780 --> 00:00:16.652
Neda file.

9
00:00:16.652 --> 00:00:18.641
Where did it go?

10
00:00:18.641 --> 00:00:19.260
I don't know where it went.

11
00:00:20.430 --> 00:00:22.442
This is it, yeah, okay.

12
00:00:22.442 --> 00:00:25.410
I literally just found it two
days ago I was looking I was like

13
00:00:25.410 --> 00:00:28.211
I need to host some static site and
I Googled and

14
00:00:28.211 --> 00:00:31.690
this came up and I was because I use it
as use like firebase deployed as it's so

15
00:00:31.690 --> 00:00:36.240
easy to fivers deploy I was,
it's an opportunity to find something new.

16
00:00:36.240 --> 00:00:39.512
So I looked up and I saw this and
all it was drag a folder over to it and

17
00:00:39.512 --> 00:00:41.790
it deployed aside two seconds.

18
00:00:41.790 --> 00:00:44.649
So I used it, it was free.

19
00:00:44.649 --> 00:00:45.960
I didn't have to sign up for anything.

20
00:00:47.910 --> 00:00:50.596
So that's why I use it, so
I don't know how much I like it, yet

21
00:00:50.596 --> 00:00:54.011
other than the fact that it definitely
uploaded to a site in two seconds yeah and

22
00:00:54.011 --> 00:00:55.539
the dash for it looks really nice.

23
00:00:55.539 --> 00:00:56.791
And hopefully it stays up.

24
00:00:56.791 --> 00:00:57.820
Hopefully it stays up [LAUGH].

25
00:00:57.820 --> 00:01:01.139
&gt;&gt; Speaker 2: If it gets longer,
I don't know.

26
00:01:01.139 --> 00:01:01.710
&gt;&gt; Scott Moss: If not,

27
00:01:01.710 --> 00:01:05.881
what I'll do is we could put
the URL on the readme in the repo.

28
00:01:05.881 --> 00:01:08.284
It's here's the URL for
the notes, if it changes.

29
00:01:08.284 --> 00:01:13.610
&gt;&gt; Speaker 2: I've got
1 more question here.

30
00:01:13.610 --> 00:01:17.990
Abdula wants to know, what advice would
you give to beginners approaching ES6

31
00:01:17.990 --> 00:01:20.320
not having much experience
with Angular either?

32
00:01:22.290 --> 00:01:25.380
&gt;&gt; Scott Moss: Well there's ES2015
course here Front End Masters.

33
00:01:25.380 --> 00:01:27.270
I actually took that one.

34
00:01:27.270 --> 00:01:31.410
And that's how I got excited when I used
2015 air frost as want to strike that does

35
00:01:31.410 --> 00:01:33.250
that not guys amazing.

36
00:01:33.250 --> 00:01:35.128
So definitely check that
if you're in the ES 2015.

37
00:01:35.128 --> 00:01:38.705
He goes in a way more depth about
everything that we talked about just

38
00:01:38.705 --> 00:01:42.660
way more in-depth and then as far as
Angular there's like two approaches I

39
00:01:42.660 --> 00:01:45.070
take when learning something new.

40
00:01:45.070 --> 00:01:48.120
The first way is I try to go
very practical with it and

41
00:01:48.120 --> 00:01:51.050
that's learn how to use it very well and

42
00:01:51.050 --> 00:01:53.950
only way to do that is if you just
start building stuff with it all right.

43
00:01:53.950 --> 00:01:57.170
Because if you start building something
let's say in this case Angular let's say

44
00:01:57.170 --> 00:02:00.600
you start rebuilding Twitter
with Angular just the front end.

45
00:02:00.600 --> 00:02:03.220
So what happen is you read a blog
post to see how to get started.

46
00:02:03.220 --> 00:02:05.820
Then you'll get started and
then you ran into an error but

47
00:02:05.820 --> 00:02:09.050
the error is great because that
error is gonna explain to you.

48
00:02:09.050 --> 00:02:14.410
It's gonna help you format and
a very direct question on what to ask

49
00:02:14.410 --> 00:02:17.940
your friend or the Internet or whatever
and you get a very specific answer back

50
00:02:17.940 --> 00:02:21.670
versus how do I get started with Angular
you get a whole bunch of answers.

51
00:02:21.670 --> 00:02:24.440
But if you just Googled this one error or
if you asked someone else this one error,

52
00:02:24.440 --> 00:02:27.630
or if you jut read this one error
you'll get a great specific answer.

53
00:02:27.630 --> 00:02:30.050
So if you just start
first you'll be great.

54
00:02:30.050 --> 00:02:32.870
So I'll start building stuff,
a couple of apps here and

55
00:02:32.870 --> 00:02:36.330
there until I feel like
I'm very good at using it.

56
00:02:36.330 --> 00:02:39.160
Even though I don't understand
what's going on underneath it.

57
00:02:39.160 --> 00:02:41.860
Once I get to that point where I'm just
comfortable as using it then I'll try go

58
00:02:41.860 --> 00:02:44.090
understand it and
that started committing it.

59
00:02:44.090 --> 00:02:48.790
So I go to GitHub, fork it go like
angular has a good, they do a good

60
00:02:48.790 --> 00:02:53.720
job on the repo of like separating out the
issues by like how difficult they are so

61
00:02:53.720 --> 00:02:57.450
you can go like pick easy ones like they
might be comments they might be whatever.

62
00:02:57.450 --> 00:03:00.820
Some people even like they will open
up issues like here's a solution code.

63
00:03:00.820 --> 00:03:01.965
Somebody want to paste this in.

64
00:03:01.965 --> 00:03:02.791
Here's a test for it.

65
00:03:02.791 --> 00:03:05.582
Somebody who wanna pay this in and
get a commit and like ook for

66
00:03:05.582 --> 00:03:09.034
opportunities like that to help,
where your confidence on open source and

67
00:03:09.034 --> 00:03:12.020
also understand a framework and
then if you really are up for it.

68
00:03:12.020 --> 00:03:15.040
Start trying to rebuild
different components

69
00:03:15.040 --> 00:03:18.157
of the framework to help you
understand it a little more.

70
00:03:18.157 --> 00:03:21.677
That's gonna help you and
then start developing your own plugins for

71
00:03:21.677 --> 00:03:22.531
the framework.

72
00:03:22.531 --> 00:03:24.327
And then now you know how
to use it very well and

73
00:03:24.327 --> 00:03:26.615
now you actually understand how it works.

74
00:03:26.615 --> 00:03:28.865
So that's the approach
that I do in that order.

75
00:03:28.865 --> 00:03:31.455
I don't do the how it works first,
I just get lost.

76
00:03:31.455 --> 00:03:32.555
I have no context.

77
00:03:32.555 --> 00:03:33.227
&gt;&gt; Speaker 2: Right.
&gt;&gt; Scott Moss: If I try to understand how

78
00:03:33.227 --> 00:03:35.144
it works.
&gt;&gt; Speaker 2: Have you looked at

79
00:03:35.144 --> 00:03:40.570
Tero Parviainen's book,
How to build your own Angular.

80
00:03:40.570 --> 00:03:41.548
&gt;&gt; Scott Moss: How to build
your own Angular, yeah,

81
00:03:41.548 --> 00:03:42.473
that one's pretty good actually.

82
00:03:42.473 --> 00:03:43.838
I read the first chapter of it, and

83
00:03:43.838 --> 00:03:46.630
it actually gave me the motivation
to start rebuilding it for myself.

84
00:03:46.630 --> 00:03:48.410
So yeah,
that's actually a really good book.

85
00:03:48.410 --> 00:03:51.330
At least the first couple chapters
about rebuilding the scope,

86
00:03:51.330 --> 00:03:53.870
that's kind of where I left off,
was actually really, really good.

87
00:03:53.870 --> 00:03:57.200
So I can't recommend the books that
I've never really finished it but

88
00:03:57.200 --> 00:04:01.980
I know the first those first couple
chapters were pretty exciting pretty good

89
00:04:01.980 --> 00:04:06.072
really detailed on how something
it looks like magic really is it.

90
00:04:06.072 --> 00:04:10.864
It's, that's that's all it does like
I don't know that until I kind of

91
00:04:10.864 --> 00:04:15.542
like brought angular down a level like
yeah you're just a framework, so.

92
00:04:15.542 --> 00:04:21.725
[LAUGH]
Any other questions?

93
00:04:26.042 --> 00:04:28.566
&gt;&gt; Scott Moss: All right, if we don't have
any other questions what I'm gonna do is

94
00:04:28.566 --> 00:04:31.133
I'm gonna show you some cool stuff
that I wanted to show everybody that

95
00:04:31.133 --> 00:04:31.710
was on my mind.

96
00:04:32.720 --> 00:04:35.070
One thing was this thing called RamJet.

97
00:04:36.940 --> 00:04:37.580
You've ever seen that?

98
00:04:39.380 --> 00:04:40.080
Man, check this out.

99
00:04:41.540 --> 00:04:42.780
Get out of here, Google.

100
00:04:44.910 --> 00:04:46.090
There you go, Rich-Harris, there it is.

101
00:04:47.160 --> 00:04:49.760
This was legit, especially,
if you're a big fan of animations or

102
00:04:49.760 --> 00:04:51.550
material design or whatever.

103
00:04:51.550 --> 00:04:56.758
So this is an animation library that
animates one element to another element.

104
00:04:56.758 --> 00:04:58.200
It's pretty, pretty awesome.

105
00:04:59.250 --> 00:05:02.905
So this is great for material,
because they have transitions and

106
00:05:02.905 --> 00:05:05.305
their spec are supposed to work like this.

107
00:05:05.305 --> 00:05:07.333
So, check this one out.

108
00:05:07.333 --> 00:05:11.130
I'm trying to make the animation library
using this, but I haven't had the time.

109
00:05:11.130 --> 00:05:12.661
So, this is really good.

110
00:05:12.661 --> 00:05:18.781
There is a another one for SVGs.

111
00:05:18.781 --> 00:05:19.900
Let me see if I can
remember the name of it.

112
00:05:21.110 --> 00:05:29.282
Vivus, so
vivus is an animation library for SVGs.

113
00:05:29.282 --> 00:05:31.782
I actually got to show the demo
page that's what I got to do,

114
00:05:31.782 --> 00:05:32.839
it's just ridiculous.

115
00:05:35.660 --> 00:05:38.945
So it was like draws
the stuff on your page.

116
00:05:38.945 --> 00:05:44.540
I like different types of animations and
this is like pretty good.

117
00:05:44.540 --> 00:05:46.380
It makes it pretty easy to do it too.

118
00:05:46.380 --> 00:05:50.750
So yeah I realize I'm just
in love with animation so.

119
00:05:53.220 --> 00:05:55.280
&gt;&gt; Speaker 2: So
you're gonna love Cirus course?

120
00:05:55.280 --> 00:05:56.412
&gt;&gt; Scott Moss: Yeah,
I'm like I can't wait for it.

121
00:05:56.412 --> 00:05:57.140
&gt;&gt; Speaker 2: Yeah a couple months.

122
00:05:57.140 --> 00:05:57.841
&gt;&gt; Scott Moss: I will be on.

123
00:05:57.841 --> 00:06:00.275
&gt;&gt; Speaker 2: You'll be on?

124
00:06:00.275 --> 00:06:00.821
&gt;&gt; Scott Moss: Yeah.

125
00:06:00.821 --> 00:06:02.024
[LAUGH]
&gt;&gt; Speaker 2: Nice.

126
00:06:02.024 --> 00:06:03.604
&gt;&gt; Scott Moss: I will be on.
This one's cool.

127
00:06:03.604 --> 00:06:07.913
I'll post these links in the chat here.

128
00:06:11.684 --> 00:06:15.499
&gt;&gt; Scott Moss: And then there's-
&gt;&gt; Speaker 2: John M was asking if

129
00:06:15.499 --> 00:06:17.580
RamJet's hardware accelerated?

130
00:06:17.580 --> 00:06:20.329
&gt;&gt; Scott Moss: Yes, it is, I hope so.

131
00:06:20.329 --> 00:06:22.486
I haven't looked at the source code but
just by looking at it.

132
00:06:22.486 --> 00:06:26.253
Yeah, it better be.

133
00:06:29.318 --> 00:06:32.783
&gt;&gt; Scott Moss: The other one I
wanted to show you was dynamics,

134
00:06:34.640 --> 00:06:38.760
&gt;&gt; Scott Moss: Dynamics.

135
00:06:38.760 --> 00:06:42.591
&gt;&gt; Speaker 2: Rob W wants to know if
it's important to provide fallbacks for

136
00:06:42.591 --> 00:06:44.220
people with JS disabled?

137
00:06:45.240 --> 00:06:47.650
He heard a recent podcast
saying it was lazy not to.

138
00:06:48.960 --> 00:06:51.605
&gt;&gt; Scott Moss: Are we talking about
animations or just in general?

139
00:06:51.605 --> 00:06:52.184
&gt;&gt; Speaker 2: Just in general I think.

140
00:06:52.184 --> 00:06:54.390
&gt;&gt; Scott Moss: Yeah, I mean if
accessibility is your thing, then yeah.

141
00:06:54.390 --> 00:06:56.190
I mean like, there are times where.

142
00:06:58.030 --> 00:07:01.090
So, if you're making a website.

143
00:07:01.090 --> 00:07:02.810
I don't know, a blog or something.

144
00:07:02.810 --> 00:07:06.492
Yeah, you should probably have it to
where it could run without JavaScript.

145
00:07:06.492 --> 00:07:08.919
But if you're like making
an internal dashboard for your team.

146
00:07:10.660 --> 00:07:12.480
Why they have JavaScript off?

147
00:07:12.480 --> 00:07:16.044
So I guess it depends on who your audience
is or who your customer is so yeah.

148
00:07:16.044 --> 00:07:20.550
I guess the rule of thumb is
if you have like a concept

149
00:07:20.550 --> 00:07:25.530
heavy website like this just like
its value is it in its content?

150
00:07:25.530 --> 00:07:30.443
Then yeah you should be able to interact
with its website without JavaScript but

151
00:07:30.443 --> 00:07:35.136
if your website is like based off of
just interactions it's value it's like

152
00:07:35.136 --> 00:07:37.724
interaction is an app it does something.

153
00:07:37.724 --> 00:07:41.257
It's like a real time thing or whatever
then you probably need JavaScript so

154
00:07:41.257 --> 00:07:43.032
I guess that's like my rule of thumb.

155
00:07:43.032 --> 00:07:48.265
&gt;&gt; Speaker 2: Cool, let's see Biko are I'm
not sure I understand this question but

156
00:07:48.265 --> 00:07:53.763
he's asking how do you handle template
cache invalidation server side or

157
00:07:53.763 --> 00:07:56.960
does webpack do hashing filenames or?

158
00:07:56.960 --> 00:07:58.890
&gt;&gt; Scott Moss: Yes, they do,
they hashing filenames.

159
00:07:58.890 --> 00:08:05.430
Good question, so webpack handles, yeah,
that's like super advanced webpack.

160
00:08:05.430 --> 00:08:07.010
We didn't talk about any of that,
but yeah.

161
00:08:07.010 --> 00:08:11.270
Webpack will handle hashing
the filenames and everything.

162
00:08:11.270 --> 00:08:15.460
Let me show you where it's
at in code splitting?

163
00:08:18.330 --> 00:08:20.420
I'm not sure where it is
here I can look forever but

164
00:08:20.420 --> 00:08:23.860
there's a there's a spot I shows you
how it handles the different hashes and

165
00:08:23.860 --> 00:08:30.360
how you just set them to whatever
you want, so yeah it will do that.

166
00:08:30.360 --> 00:08:34.652
Again this is the other thing dynamics.js
animation library just recently released

167
00:08:34.652 --> 00:08:36.980
by this guy who works at stripe.

168
00:08:36.980 --> 00:08:39.940
Who if you can look at their website
lately they have made a lot of

169
00:08:39.940 --> 00:08:42.290
attention for
their pretty sweet animations.

170
00:08:42.290 --> 00:08:45.700
And he just opened source animation
library that he used to create this stuff.

171
00:08:45.700 --> 00:08:48.090
This is really good.

172
00:08:48.090 --> 00:08:49.552
It's like physics based animation.

173
00:08:49.552 --> 00:08:53.730
It's like, theory like famous,
it kind of feels like that, but

174
00:08:53.730 --> 00:08:55.920
it definitely isn't the same API.

175
00:08:55.920 --> 00:09:01.471
This one's pretty cool.

176
00:09:01.471 --> 00:09:07.866
Other cool stuff, I can't think of
anything else that's super cool that you,

177
00:09:07.866 --> 00:09:12.639
I actually have like a bookmark
that just says cool stuff but

178
00:09:12.639 --> 00:09:17.522
I think it's outdated, so
I can't think of anything else.

179
00:09:17.522 --> 00:09:18.841
&gt;&gt; Speaker 2: I have a personal question.

180
00:09:18.841 --> 00:09:19.730
&gt;&gt; Scott Moss: Yo.

181
00:09:19.730 --> 00:09:22.300
&gt;&gt; Speaker 2: We're kind of
deploying an architecture in-house,

182
00:09:22.300 --> 00:09:27.450
where we'll be building some components
that teams will share around.

183
00:09:28.530 --> 00:09:33.320
So one team might want 5 out
of 15 components we build,

184
00:09:33.320 --> 00:09:37.620
another team might want a different four,
another team might want three of those or

185
00:09:37.620 --> 00:09:40.270
something with some overlap.

186
00:09:40.270 --> 00:09:45.200
I've been kind of debating with the junior

187
00:09:45.200 --> 00:09:50.460
people I have building out our
build process, should I be

188
00:09:52.350 --> 00:09:57.160
bundling up separate packages of
the components that make sense?

189
00:09:57.160 --> 00:10:01.850
So maybe a blog and
blog post and add blog and

190
00:10:01.850 --> 00:10:07.842
then a some other set of other
ones that have like four or

191
00:10:07.842 --> 00:10:10.728
five different bundles.

192
00:10:10.728 --> 00:10:12.647
&gt;&gt; Scott Moss: Right.
&gt;&gt; Speaker 2: Plus the aggregate set or

193
00:10:12.647 --> 00:10:16.362
does it make more sense for
us to just have the aggregate set and

194
00:10:16.362 --> 00:10:20.800
ship that to everyone and let them pick
and choose what they need out of it.

195
00:10:20.800 --> 00:10:23.820
&gt;&gt; Scott Moss: Yeah I mean that's I guess
it depends on that there's a lot of

196
00:10:23.820 --> 00:10:24.450
things behind that.

197
00:10:24.450 --> 00:10:27.168
But I guess it depends on how you made
your component like what are you using?

198
00:10:27.168 --> 00:10:27.984
Are you using angular?

199
00:10:27.984 --> 00:10:28.756
&gt;&gt; Speaker 2: Yeah.
&gt;&gt; Scott Moss: Okay, so

200
00:10:28.756 --> 00:10:29.757
if you're using angular.

201
00:10:29.757 --> 00:10:33.790
If you are really moderate with a follow
like approach like this which you could do

202
00:10:33.790 --> 00:10:37.054
you could rely on my sometime
package management system right and

203
00:10:37.054 --> 00:10:40.257
that way each component would know
which component it needed and

204
00:10:40.257 --> 00:10:44.150
who is download it right so that when
you don't have the pre-bought of them.

205
00:10:44.150 --> 00:10:46.290
You can just say I made new package.

206
00:10:46.290 --> 00:10:49.740
All right, I'm making a new blog
component or a blog post component.

207
00:10:51.330 --> 00:10:54.800
Actually, I'm making a new blog component,
but it needs the blog post component, too.

208
00:10:54.800 --> 00:10:57.620
So, what you would do is, and
init.packaged.json you would say,

209
00:10:57.620 --> 00:10:58.551
you need this as well.

210
00:10:58.551 --> 00:11:02.471
So, when you npn install that blog post
or, I'm sorry, that blog component,

211
00:11:02.471 --> 00:11:05.040
it would also npn install
the blog post component.

212
00:11:05.040 --> 00:11:07.621
That way you don't have
to bundle it yourself.

213
00:11:07.621 --> 00:11:10.690
But, then you need a private npn
register or something like that.

214
00:11:10.690 --> 00:11:13.745
Or if you don't mind put the public out
there, you can put them in public, but

215
00:11:13.745 --> 00:11:15.113
you know you need something like.

216
00:11:15.113 --> 00:11:19.447
That way you will not have to really worry
about that, but if you didn't have that

217
00:11:19.447 --> 00:11:23.462
what I would do is I would just definitely
separate all of them for sure, but

218
00:11:23.462 --> 00:11:27.330
then what you would do is you would go
back in then you would be like okay.

219
00:11:28.370 --> 00:11:31.666
Is there any chance that I would ever
use this component without this one.

220
00:11:31.666 --> 00:11:33.780
Any chance and if there is,
keep them separate.

221
00:11:33.780 --> 00:11:34.480
If there's no chance,

222
00:11:34.480 --> 00:11:38.040
then bundle them keep them just like that
they're always gonna be the other and

223
00:11:38.040 --> 00:11:42.180
just keeping together and
then you already separated to begin with.

224
00:11:42.180 --> 00:11:45.692
So the option is there too just in case
they want to take that component and

225
00:11:45.692 --> 00:11:49.321
add it to another one as well so it's
because it's always born with this one

226
00:11:49.321 --> 00:11:52.686
doesn't mean it will be bundled up
with another one as well, right?

227
00:11:52.686 --> 00:11:53.733
It's still one of them separately.

228
00:11:53.733 --> 00:11:56.664
&gt;&gt; Speaker 2: One other question.

229
00:11:56.664 --> 00:12:01.719
I'm on a team that's still getting very

230
00:12:01.719 --> 00:12:06.187
used to these newer technologies.

231
00:12:06.187 --> 00:12:08.820
So, me personally, super excited.

232
00:12:08.820 --> 00:12:12.640
I would want to write you a six
code would want to use Web pack.

233
00:12:16.080 --> 00:12:19.632
Do all of these really awesome
things that would make life easier.

234
00:12:19.632 --> 00:12:22.303
&gt;&gt; Scott Moss: Right.
&gt;&gt; Speaker 2: But at the same time it's

235
00:12:22.303 --> 00:12:27.565
a struggle for
basic JavaScript like ES-5 concepts for

236
00:12:27.565 --> 00:12:32.825
some and there's a lot of still
kind of mental churn going

237
00:12:32.825 --> 00:12:37.648
on with other tooling like
basic tooling like git and

238
00:12:37.648 --> 00:12:42.798
it's just I'm not really sure
whether that just kind of

239
00:12:42.798 --> 00:12:49.811
how much firehose I can have them drink
fro and whether like if I can add this,

240
00:12:49.811 --> 00:12:53.930
if I get away with it or if it would just-
&gt;&gt; Scott Moss: If it were me-

241
00:12:53.930 --> 00:12:55.220
&gt;&gt; Speaker 2: Create three to six months

242
00:12:55.220 --> 00:12:57.430
of just people not doing
anything about this.

243
00:12:57.430 --> 00:12:59.920
&gt;&gt; Scott Moss: If it were me I
would just add it, to be honest.

244
00:12:59.920 --> 00:13:01.569
They're engineers, that's their job.

245
00:13:01.569 --> 00:13:04.610
They're supposed to know nothing but
figure everything out.

246
00:13:04.610 --> 00:13:06.570
I would just add it [LAUGH].

247
00:13:06.570 --> 00:13:07.220
&gt;&gt; Speaker 3: And then, Scott,

248
00:13:07.220 --> 00:13:10.720
we made tests make sure that
everyone you know for me.

249
00:13:10.720 --> 00:13:11.790
&gt;&gt; Scott Moss: Yeah exactly.

250
00:13:11.790 --> 00:13:15.720
I was out because I mean if you say
that any experiences might be a great

251
00:13:15.720 --> 00:13:19.200
opportunity for
them to get experience with something new.

252
00:13:19.200 --> 00:13:19.720
&gt;&gt; Speaker 2: Yeah.

253
00:13:19.720 --> 00:13:21.330
&gt;&gt; Scott Moss: So
this could be a good time for the latter.

254
00:13:21.330 --> 00:13:24.125
It might be a little hard at it if you
have a team full of experienced people who

255
00:13:24.125 --> 00:13:28.470
don't wanna change they don't want
something new that's like no we

256
00:13:28.470 --> 00:13:30.810
use this we've been using
it forever it works, right?

257
00:13:30.810 --> 00:13:32.980
Whereas you are like,
okay well this is new.

258
00:13:32.980 --> 00:13:34.920
So, this might be really, really good.

259
00:13:34.920 --> 00:13:37.850
&gt;&gt; Speaker 2: And the fact that you could
just easily go ahead and add a built

260
00:13:37.850 --> 00:13:42.110
system and start using ES2015 now,
without changing any of your other codes.

261
00:13:42.110 --> 00:13:43.880
&gt;&gt; Scott Moss: It will still work fine.

262
00:13:43.880 --> 00:13:45.587
That means that they can still
continue to write what they

263
00:13:45.587 --> 00:13:47.878
feel comfortable writing and you could
start writing the new features now.

264
00:13:47.878 --> 00:13:48.896
&gt;&gt; Speaker 2: Yeah.
&gt;&gt; Scott Moss: All right, and

265
00:13:48.896 --> 00:13:51.400
along the way, teach them and
leave them some good comments behind.

266
00:13:51.400 --> 00:13:53.120
Let them know what's going on.

267
00:13:53.120 --> 00:13:55.170
Or maybe update or
read me something like that.

268
00:13:55.170 --> 00:13:56.712
&gt;&gt; Speaker 2: Yeah.
&gt;&gt; Scott Moss: And eventually you know it

269
00:13:56.712 --> 00:13:58.250
will happen progressively

