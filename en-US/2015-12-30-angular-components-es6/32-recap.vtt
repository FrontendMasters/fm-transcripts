WEBVTT

1
00:00:00.000 --> 00:00:03.757
[MUSIC]

2
00:00:03.757 --> 00:00:04.593
&gt;&gt; Scott Moss: A little bit of recap,

3
00:00:04.593 --> 00:00:07.542
cuz after this you're gonna get set loose
and you're literally gonna be making

4
00:00:07.542 --> 00:00:09.405
a component from scratch
with no hand-holding.

5
00:00:09.405 --> 00:00:11.989
Literally just you on your
own making the thing.

6
00:00:11.989 --> 00:00:14.142
And then we're gonna get
into some automation stuff.

7
00:00:14.142 --> 00:00:19.949
So a few things to remember when taking
the component approach with 1.x.

8
00:00:19.949 --> 00:00:23.525
This is some things that I
thought was just important.

9
00:00:23.525 --> 00:00:25.590
We've talked about a ton, but these
are just some of the important things.

10
00:00:26.760 --> 00:00:29.509
Pick a file naming convention
before you start and stick to it.

11
00:00:29.509 --> 00:00:31.908
So I've said that a couple times,
but definitely do that.

12
00:00:31.908 --> 00:00:35.330
You don't have to use my convention,
it's just what works for me.

13
00:00:35.330 --> 00:00:37.570
Some people think it is just too verbose.

14
00:00:37.570 --> 00:00:41.600
Some people like to use shortcuts,
instead of writing template or whatever,

15
00:00:41.600 --> 00:00:43.780
they'll put TPL or CTRL for controller.

16
00:00:43.780 --> 00:00:47.652
I just like to just write
the whole thing out, whatever.

17
00:00:47.652 --> 00:00:49.235
Look at JSPM, it's awesome.

18
00:00:49.235 --> 00:00:53.480
Hard to config, but it's definitely the
thing that people are going to be using.

19
00:00:53.480 --> 00:00:56.810
In fact maybe you'll help push it and
actually add some plugins to it.

20
00:00:56.810 --> 00:00:57.810
It definitely needs some more.

21
00:00:57.810 --> 00:01:01.440
But that's probably what I'm gonna
start using from here on out,

22
00:01:01.440 --> 00:01:07.340
even though I really like WebPack, but
JSPM is like, this is very powerful.

23
00:01:07.340 --> 00:01:11.790
The new router will only work with
components, so get used to them.

24
00:01:11.790 --> 00:01:15.020
The new router, it's called
the new router, angular router.

25
00:01:15.020 --> 00:01:16.741
It's literally gonna look for

26
00:01:16.741 --> 00:01:20.921
a folder called components with similar
stuff to what we've been making.

27
00:01:20.921 --> 00:01:24.319
And each thing inside the components
folder needs to have a JS file and

28
00:01:24.319 --> 00:01:27.200
a template, which is pretty
much what we've been doing.

29
00:01:27.200 --> 00:01:29.550
We have more, we have style and
directive and all that stuff, but

30
00:01:29.550 --> 00:01:31.065
that's what it's gonna be looking for.

31
00:01:31.065 --> 00:01:35.887
So get used to that,
that's supposed to be coming in 1.5,

32
00:01:35.887 --> 00:01:38.930
so you're gonna be ready for that.

33
00:01:38.930 --> 00:01:43.700
Decide if you're going to use named
exports or not and stick with it.

34
00:01:43.700 --> 00:01:47.490
So we've been using named exports
with the brackets around them.

35
00:01:47.490 --> 00:01:50.340
If you don't wanna use that,
you just wanna use default, then do that.

36
00:01:50.340 --> 00:01:52.050
For the longest,
I just used default for everything.

37
00:01:52.050 --> 00:01:54.920
And literally two weeks ago,
I decided to just name everything.

38
00:01:54.920 --> 00:01:56.630
So sometimes it switches.

39
00:01:56.630 --> 00:02:00.740
But whatever you do,
just only use that one time.

40
00:02:00.740 --> 00:02:07.910
Because the way we write our code,
it's rare that we'll be going up multiple

41
00:02:07.910 --> 00:02:11.350
levels of a file to import something,
because everything's a component.

42
00:02:11.350 --> 00:02:16.590
So it's rare that you have that, so
just make sure that when you pick and

43
00:02:16.590 --> 00:02:19.860
choose, either do the name ones or
do the defaults.

44
00:02:19.860 --> 00:02:23.720
And you should be fine, but just keep
it the same across the entire app.

45
00:02:23.720 --> 00:02:27.752
If you forget to isolate your
scopes on your components,

46
00:02:27.752 --> 00:02:30.526
you may have unexpected side effects.

47
00:02:30.526 --> 00:02:34.155
If you don't believe me, just go take
off isoscope on all the components and

48
00:02:34.155 --> 00:02:35.983
refresh the page to see what happens.

49
00:02:35.983 --> 00:02:39.207
Something's not gonna work,
I guarantee you.

50
00:02:39.207 --> 00:02:41.549
One component is gonna have
another component's controller,

51
00:02:41.549 --> 00:02:43.511
which might have another
component's controller.

52
00:02:43.511 --> 00:02:48.529
And you won't know what's

53
00:02:48.529 --> 00:02:53.990
going on until you go in here.

54
00:02:53.990 --> 00:02:59.143
Do angular, and actually, anybody
know how to look at the scope of a-

55
00:02:59.143 --> 00:03:00.534
&gt;&gt; Off Camera 1: Yes.

56
00:03:00.534 --> 00:03:02.855
angular.element.

57
00:03:02.855 --> 00:03:03.416
&gt;&gt; Scott Moss: Right, yeah.

58
00:03:03.416 --> 00:03:06.008
So if you click on an image, or I'm sorry.

59
00:03:06.008 --> 00:03:09.210
In any element on the page, right,
first of all, you know if you click on

60
00:03:09.210 --> 00:03:12.905
the element of page, and you go into
console and do $0, it'll show the element?

61
00:03:12.905 --> 00:03:15.734
&gt;&gt; [INAUDIBLE]
&gt;&gt; Scott Moss: So

62
00:03:15.734 --> 00:03:21.330
if I go to this box right here,
I clicked on it.

63
00:03:21.330 --> 00:03:23.211
I go to console.

64
00:03:23.211 --> 00:03:24.740
And I did $0.

65
00:03:26.320 --> 00:03:27.569
I get the element, right?

66
00:03:27.569 --> 00:03:28.969
So-
&gt;&gt; Off Camera 2: Well that's pretty cool.

67
00:03:28.969 --> 00:03:31.329
&gt;&gt; Scott Moss: Yeah,
you could also copy it too.

68
00:03:31.329 --> 00:03:33.689
So if you type in copy, all right?

69
00:03:33.689 --> 00:03:34.581
And you do $0.

70
00:03:34.581 --> 00:03:38.137
I don't know what this is gonna do
actually cuz I don't know how this is

71
00:03:38.137 --> 00:03:41.120
gonna work, but
that will copy it to your paste buffer.

72
00:03:41.120 --> 00:03:42.090
So, then I can paste it.

73
00:03:43.680 --> 00:03:47.060
But, anyway, what I was gonna,
get out of here,

74
00:03:47.060 --> 00:03:51.870
okay, okay, okay, okay.

75
00:03:51.870 --> 00:03:54.130
There we go, there we go, okay.

76
00:03:54.130 --> 00:03:59.530
What I was gonna say is angular.element.

77
00:03:59.530 --> 00:04:02.035
And then the element that you want in
this case, the one I just clicked on,

78
00:04:02.035 --> 00:04:06.550
zero.scope as a function,
it'll give me the element scope.

79
00:04:07.770 --> 00:04:08.920
And I can go inspect the scope.

80
00:04:10.400 --> 00:04:11.690
So you can go right here and look at it.

81
00:04:11.690 --> 00:04:14.445
So my point was if you remove
the isoscope from everything,

82
00:04:14.445 --> 00:04:17.860
the only way you're gonna figure out
what's going on is you can look at all

83
00:04:17.860 --> 00:04:21.210
the scopes and be like, okay,
what scope are you really?

84
00:04:21.210 --> 00:04:22.355
What is really happening?

85
00:04:22.355 --> 00:04:23.034
What's going on?

86
00:04:27.363 --> 00:04:30.234
&gt;&gt; Scott Moss: So
that's a quick way to look at the scope.

87
00:04:30.234 --> 00:04:31.355
Quick debugging tip.

88
00:04:31.355 --> 00:04:33.963
So that's angular.element.

89
00:04:33.963 --> 00:04:36.718
Pass in some element here.

90
00:04:36.718 --> 00:04:37.611
I mean, it can be any element.

91
00:04:37.611 --> 00:04:41.195
It doesn't have to be the one we
pasted in, it could be a selector or

92
00:04:41.195 --> 00:04:42.739
whatever element you want.

93
00:04:42.739 --> 00:04:47.378
But we're just gonna use the one we
clicked on, and you'll get the scope.

94
00:04:51.700 --> 00:04:53.403
&gt;&gt; Scott Moss: So that's one thing.

95
00:04:53.403 --> 00:04:57.499
Yeah, so please use isoscopes on your
components, not on your directives.

96
00:04:57.499 --> 00:04:59.439
If you're just making a directive
that's not a component,

97
00:04:59.439 --> 00:05:01.387
then it's up to you how you want
to complete that directive.

98
00:05:01.387 --> 00:05:03.394
But for components, just use isoscopes.

99
00:05:07.387 --> 00:05:11.920
&gt;&gt; Scott Moss: So there is no
standard way to adopt a component

100
00:05:11.920 --> 00:05:17.034
architecture in 1.x yet,
and there may never be,

101
00:05:17.034 --> 00:05:22.750
because everybody's so
focused on angular 2 right now.

102
00:05:25.880 --> 00:05:29.615
But the approach we learned is a
collection of my best practices, trial and

103
00:05:29.615 --> 00:05:32.414
error, and
community collections on what works best.

104
00:05:32.414 --> 00:05:37.306
So, feel free to adjust and
change for what works for you.

105
00:05:37.306 --> 00:05:37.902
I just can't spell.

106
00:05:37.902 --> 00:05:38.918
Look at that.

107
00:05:38.918 --> 00:05:42.506
[LAUGH] Just be sure
you're still having fun.

108
00:05:42.506 --> 00:05:43.495
So, there's a lot of ways you can do it.

109
00:05:43.495 --> 00:05:46.150
If you find some better ways to do this,
let me know.

110
00:05:46.150 --> 00:05:50.635
Those would be great, because I'm always
curious to know what's better out there.

111
00:05:50.635 --> 00:05:53.844
I just don't code with my head down and
not look up and see what's happening.

112
00:05:53.844 --> 00:05:56.242
So if you find something
that works better, or

113
00:05:56.242 --> 00:05:59.387
anything that just might look better,
totally let me know.

114
00:05:59.387 --> 00:06:01.043
I'm really interested in that stuff.

115
00:06:01.043 --> 00:06:03.139
But yeah,
there is no standard way, really.

116
00:06:03.139 --> 00:06:05.660
I mean, the new router's coming out and
you have to use components.

117
00:06:05.660 --> 00:06:09.030
But there really isn't like,
this is the way you have to do it,

118
00:06:09.030 --> 00:06:11.141
not like it is with Angular 2, right?

119
00:06:11.141 --> 00:06:14.513
This is the way, there's no if,
ands, or buts about it.

120
00:06:14.513 --> 00:06:18.590
There's no .service or .factory or
.constant, no, this is the way.

121
00:06:18.590 --> 00:06:19.370
This is how it's gonna work.

122
00:06:21.850 --> 00:06:23.210
So, we don't have that in 1.x.

