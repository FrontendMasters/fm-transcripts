WEBVTT

1
00:00:00.560 --> 00:00:03.608
The first thing that we're gonna
do if we wanna get a book listing,

2
00:00:03.608 --> 00:00:05.676
because we've got a cover,
I want these to,

3
00:00:05.676 --> 00:00:08.750
like I don't wanna them to just
be like big spaghetti things.

4
00:00:08.750 --> 00:00:10.940
So I'm gonna add a little
bit of styling in here.

5
00:00:10.940 --> 00:00:14.070
And we're going to create
a new folder called styles.

6
00:00:14.070 --> 00:00:16.318
And we'll call this book.module.css.

7
00:00:16.318 --> 00:00:20.264
We're using the CSS module approach
because it gives us scoped

8
00:00:20.264 --> 00:00:23.167
styles without having to
install like a CSS and

9
00:00:23.167 --> 00:00:26.310
JS library or
learn some specialty syntax of CSS.

10
00:00:26.310 --> 00:00:29.333
This is just plain old CSS,
what you've always used, we just get to

11
00:00:29.333 --> 00:00:34.070
trust that it's gonna be scoped because of
the way that CSS modules are implemented.

12
00:00:34.070 --> 00:00:38.045
So in here, I've got a listing that's
gonna be the actual book wrapper.

13
00:00:38.045 --> 00:00:44.164
We want that to be display flex
because I want the cover and

14
00:00:44.164 --> 00:00:49.136
the details to live side by side and
we'll give

15
00:00:49.136 --> 00:00:54.250
it a gap of 2ram and
a margin-bottom of 2ram.

16
00:00:54.250 --> 00:00:58.911
Then we want a heading and the heading.

17
00:00:58.911 --> 00:01:01.389
I'm just going to set a margin
of 0 because otherwise,

18
00:01:01.389 --> 00:01:04.502
what will happen is the heading will
get bumped below the book cover and

19
00:01:04.502 --> 00:01:06.473
it'll have this kind of like weird offset.

20
00:01:06.473 --> 00:01:07.620
And I don't wanna deal with that.

21
00:01:07.620 --> 00:01:09.340
So we're going to do that.

22
00:01:09.340 --> 00:01:11.312
And that's good enough
like all I want is for

23
00:01:11.312 --> 00:01:14.310
this to just not be like
completely un-styled.

24
00:01:14.310 --> 00:01:18.986
So then I can create a template for
this, because remember we do

25
00:01:18.986 --> 00:01:23.760
use that create page API,
we need to have a template to use.

26
00:01:23.760 --> 00:01:25.540
So I'm gonna create
a template called book.

27
00:01:26.640 --> 00:01:31.087
And in this, we're gonna import
everything as react from react.

28
00:01:33.447 --> 00:01:36.680
And then we're going to import graphql.

29
00:01:36.680 --> 00:01:39.020
And, my God, stop helping.

30
00:01:39.020 --> 00:01:41.710
And link from gatsby.

31
00:01:43.840 --> 00:01:47.610
And finally, we're gonna use that
Gatsby image that we set up.

32
00:01:47.610 --> 00:01:51.783
So let's import GatsbyImage and

33
00:01:51.783 --> 00:01:57.004
getImage from gatsby-plugin-image.

34
00:01:59.850 --> 00:02:03.330
And then I am also going to import
those styles we just created.

35
00:02:03.330 --> 00:02:08.090
So, listing and heading from our styles.

36
00:02:08.090 --> 00:02:10.730
So let's get the book.module.css.

37
00:02:10.730 --> 00:02:12.759
And if we want to get a query, so

38
00:02:12.759 --> 00:02:16.830
this one is going to be a query
because it includes the book ID.

39
00:02:18.080 --> 00:02:20.190
So we're gonna have our graphql.

40
00:02:21.540 --> 00:02:26.000
And inside of that, let's go out here and
build a query for this.

41
00:02:26.000 --> 00:02:27.530
So this is running, so
I can come over here.

42
00:02:28.940 --> 00:02:30.380
And I wanna get a book.

43
00:02:30.380 --> 00:02:36.210
So let's close up author and
instead we're gonna get book and

44
00:02:36.210 --> 00:02:42.280
I want my book to come in with a,
I don't need the ISP and do I.

45
00:02:42.280 --> 00:02:48.650
I want a name,
I want the author name and slug.

46
00:02:50.490 --> 00:02:53.350
I want the series and the series order.

47
00:02:54.680 --> 00:02:56.930
Then I want the cover.

48
00:02:56.930 --> 00:03:00.730
And I want the cover to have a child
image sharp and Gatsby image data.

49
00:03:01.730 --> 00:03:04.160
And we could set this to be whatever.

50
00:03:04.160 --> 00:03:09.288
I'm just gonna leave all the defaults
because it's fine, but I am gonna restrict

51
00:03:09.288 --> 00:03:13.910
the width to 150 because I want the cover
to be pretty small on the page.

52
00:03:15.390 --> 00:03:20.826
And so once we've set that I
can change this over to like,

53
00:03:20.826 --> 00:03:24.790
say book will get the ID equal string, and

54
00:03:24.790 --> 00:03:28.990
then we would wanna
filter by the ID as well.

55
00:03:28.990 --> 00:03:35.270
So I have this and we want it to equal and
we'll say it's going to equal the ID.

56
00:03:35.270 --> 00:03:37.359
So I can copy this, bring it over here.

57
00:03:38.500 --> 00:03:43.140
In this is going to get us all
the details about our book.

58
00:03:43.140 --> 00:03:46.850
And while I'm thinking about it,
let's also get our buyLink in here.

59
00:03:46.850 --> 00:03:50.584
So now I have my data,
we're going to get the individual

60
00:03:50.584 --> 00:03:55.360
book that we're trying to query for,
and we can build our components.

61
00:03:55.360 --> 00:03:59.110
So export default function BookPage,

62
00:03:59.110 --> 00:04:03.320
and we'll get data from our graphql query.

63
00:04:05.840 --> 00:04:09.927
Here, let's extract the book
out of that data, so

64
00:04:09.927 --> 00:04:14.790
data.book; and then we can
return a whole bunch of markup.

65
00:04:14.790 --> 00:04:18.200
So let's get a fragment setup.

66
00:04:18.200 --> 00:04:21.651
And then we will set
the classname to be our listing,

67
00:04:21.651 --> 00:04:24.530
because that's the book listing.

68
00:04:24.530 --> 00:04:27.900
And then we are going to
use this GatsbyImage.

69
00:04:27.900 --> 00:04:33.760
And we'll pass in the image
of from the book cover.

70
00:04:33.760 --> 00:04:37.417
And so this getImages a helper from Gatsby
to dive in and get the image sharp and

71
00:04:37.417 --> 00:04:40.118
the GatsbyImage data and
all the things that it needs, so

72
00:04:40.118 --> 00:04:43.270
that we don't have to remember
to type all that out.

73
00:04:43.270 --> 00:04:44.710
And then we can set the alt.

74
00:04:44.710 --> 00:04:48.129
I'm gonna cop out a little bit here and
call the book,name.

75
00:04:48.129 --> 00:04:50.868
Probably better all
text should be written.

76
00:04:50.868 --> 00:04:54.200
And we can set the h1, I'm going to set.

77
00:04:54.200 --> 00:05:00.160
This needs a class name of heading.

78
00:05:00.160 --> 00:05:05.551
Otherwise we'll get that awkward
top margin that I don't want,

79
00:05:05.551 --> 00:05:09.780
and we'll use the book.name as our h1.

80
00:05:09.780 --> 00:05:12.070
Let's set the author here.

81
00:05:13.420 --> 00:05:14.710
And we're gonna link to our author.

82
00:05:16.190 --> 00:05:21.180
So in here,
we're going to link to book.author.slug.

83
00:05:23.440 --> 00:05:27.410
And then we want to do book.author.name,
right?

84
00:05:27.410 --> 00:05:32.440
So we're just going to using this data,
nothing too out of the ordinary here.

85
00:05:32.440 --> 00:05:36.056
And then we're gonna link
through the book.series,

86
00:05:36.056 --> 00:05:40.780
if there is a book.series,
we're gonna add some extra information.

87
00:05:40.780 --> 00:05:44.098
So if there's a book series,

88
00:05:44.098 --> 00:05:48.890
we'll say, this is book.seriesOrder.

89
00:05:50.500 --> 00:05:52.830
Don't need that dollar sign there.

90
00:05:52.830 --> 00:06:00.148
This is (book.seriesOrder)
of the book.series.

91
00:06:00.148 --> 00:06:06.370
And then finally below that,
we can just start closing things up.

92
00:06:06.370 --> 00:06:08.610
So let's close up that div.

93
00:06:08.610 --> 00:06:09.889
That one's already closed.

94
00:06:12.210 --> 00:06:18.396
Okay, and then we'll take them back to
a yet to be created all books listing and

95
00:06:18.396 --> 00:06:24.510
we'll just do the same thing a left arrow,
HTML entity and back to all books.

96
00:06:25.700 --> 00:06:30.160
Okay, so now that this is created,
we can actually use it.

97
00:06:30.160 --> 00:06:35.570
So let's get into Gatsby node and
in let's make this thing work.

98
00:06:35.570 --> 00:06:40.500
So what we're gonna have to do is pull in,
in create pages.

99
00:06:40.500 --> 00:06:42.082
I'm gonna start collapsing these so

100
00:06:42.082 --> 00:06:44.540
that it's a little easier to
see what we're working on.

101
00:06:45.750 --> 00:06:48.870
There's another helper that you get
in create pages called graphql.

102
00:06:48.870 --> 00:06:53.742
And this allows us to make a query
against our graphql data layer while

103
00:06:53.742 --> 00:06:57.210
we are inside of the create pages API.

104
00:06:57.210 --> 00:07:00.900
So, by doing this,
that means I can make a query down here.

105
00:07:00.900 --> 00:07:05.389
Now, this is a little bit
unintuitive because in

106
00:07:05.389 --> 00:07:09.990
Gatsby components, it's a template tag.

107
00:07:09.990 --> 00:07:12.560
In create pages, it's a function.

108
00:07:12.560 --> 00:07:16.080
So, [LAUGH] it's otherwise
exactly the same.

109
00:07:16.080 --> 00:07:21.050
We're just gonna get query for
all of our books.

110
00:07:21.050 --> 00:07:24.160
And what I want in this is allbook.

111
00:07:24.160 --> 00:07:25.430
We'll get the nodes.

112
00:07:25.430 --> 00:07:31.910
We will get the id, the series,
and the name, all right?

113
00:07:31.910 --> 00:07:34.492
And I'm gonna get the result of that,

114
00:07:34.492 --> 00:07:37.930
we need to await this or
else would get a promise.

115
00:07:37.930 --> 00:07:40.330
And that means I need to make this async.

116
00:07:40.330 --> 00:07:44.032
This is a cool thing about Gatsby is
the API is can be run synchronously or

117
00:07:44.032 --> 00:07:45.770
asynchronously.

118
00:07:45.770 --> 00:07:49.121
So if you ever wanna await something, you
can just toss that async in front of it,

119
00:07:49.121 --> 00:07:52.100
and you'll be able to do that instead
of having to do promise juggling.

120
00:07:53.990 --> 00:07:55.819
Once we've got that result,

121
00:07:55.819 --> 00:07:59.340
we can set up a little bit of
logic to determine our books.

122
00:07:59.340 --> 00:08:02.580
So let's get the books
themselves out of here.

123
00:08:02.580 --> 00:08:09.470
And that's going to be
result.data.allbook.nodes; okay?

124
00:08:09.470 --> 00:08:10.510
Then let's loop through them.

125
00:08:10.510 --> 00:08:11.665
So books.forEach, and

126
00:08:11.665 --> 00:08:15.040
we're using forEach here because
we don't return anything, right?

127
00:08:15.040 --> 00:08:18.634
That's when you would use forEach book.

128
00:08:21.902 --> 00:08:24.063
All right, so
we've got our books were looping and

129
00:08:24.063 --> 00:08:25.880
I'm gonna start by getting the bookSlug.

130
00:08:25.880 --> 00:08:30.923
So, as you identified,
whoever asked that question,

131
00:08:30.923 --> 00:08:35.990
we do indeed need to make that easier,
why is that?

132
00:08:35.990 --> 00:08:37.670
That's not what we want at all.

133
00:08:37.670 --> 00:08:41.280
We just wants slugify like that.

134
00:08:41.280 --> 00:08:43.160
Let's put that up here.

135
00:08:43.160 --> 00:08:48.784
So we've got slugify and
we're going to slugify the book.name and

136
00:08:48.784 --> 00:08:51.850
again we're gonna go lower:true.

137
00:08:54.080 --> 00:08:58.596
And if we have a book.series,

138
00:08:58.596 --> 00:09:04.154
if it's no then we can create a page and

139
00:09:04.154 --> 00:09:07.120
that will be a path.

140
00:09:08.160 --> 00:09:12.650
It's gonna be bookSlug.

141
00:09:14.010 --> 00:09:18.890
We're gonna set the component
to be required.resolve.

142
00:09:18.890 --> 00:09:28.240
And we'll do src/templates/book.js.

143
00:09:28.240 --> 00:09:32.902
And for the context we're going to
include the id; have book.id, and

144
00:09:32.902 --> 00:09:37.190
that so that we can look up the book
when we get into that template.

145
00:09:37.190 --> 00:09:42.233
Remember we needed to have this variable,
that's how we're getting it in,

146
00:09:42.233 --> 00:09:47.545
we pass that id as context and
now we actually have it available to us.

147
00:09:47.545 --> 00:09:50.675
So that will create our
pages in that place.

148
00:09:51.945 --> 00:09:59.009
Then, if we do have a series
I'm gonna create a seriesSlug,

149
00:09:59.009 --> 00:10:04.290
and we'll slugIfy the book.series.

150
00:10:04.290 --> 00:10:11.850
And again, we'll go lower:true and
we can createPage.

151
00:10:11.850 --> 00:10:15.639
And I'm realizing now that
this is ripe for refactoring.

152
00:10:19.474 --> 00:10:23.650
So this one would go seriesSlug.

153
00:10:25.070 --> 00:10:28.408
And then again, it's the template in the
book and again, it's the context and id.

154
00:10:28.408 --> 00:10:34.019
So I don't know why I didn't just check
for the slug or something but it's okay.

155
00:10:36.289 --> 00:10:39.239
Me being good at this type of code
is not the point of this work.

156
00:10:39.239 --> 00:10:44.606
[LAUGH] But we are gonna get what we
need here of creating the page and

157
00:10:44.606 --> 00:10:50.668
we'll get the right template and
the books get created at the right slug.

158
00:10:50.668 --> 00:10:52.978
No matter what we are doing there and

159
00:10:52.978 --> 00:10:56.990
I caught a typo before it broke
everything, what a great day.

160
00:10:58.370 --> 00:11:06.235
So let's stop and restart because
we just updated our Gatsby node.

161
00:11:06.235 --> 00:11:09.805
And that's gonna take us
out to local host here.

162
00:11:10.845 --> 00:11:15.155
And what I wanna be able to
do is get to all of my books.

163
00:11:15.155 --> 00:11:17.067
So what should happen
is once this reloads,

164
00:11:17.067 --> 00:11:20.875
I should be able to click into one
of these books and actually see it.

165
00:11:20.875 --> 00:11:22.735
So let's see how that goes.

166
00:11:22.735 --> 00:11:23.330
I'm gonna click in.

167
00:11:27.540 --> 00:11:29.214
And we're just waiting for this to finish.

168
00:11:31.250 --> 00:11:37.520
There it goes, all right,
we refresh, and there is our book.

169
00:11:37.520 --> 00:11:40.130
Okay, I can see something has screwed up.

170
00:11:40.130 --> 00:11:44.750
I needed to put all of this into a div so

171
00:11:44.750 --> 00:11:48.780
that it floats properly.

172
00:11:48.780 --> 00:11:50.760
So let's do that.

173
00:11:50.760 --> 00:11:51.690
There we got that looks better.

174
00:11:51.690 --> 00:11:53.225
That's more like what we wanted.

175
00:11:53.225 --> 00:11:56.655
So now we have the ability
to display our books.

176
00:11:56.655 --> 00:12:01.245
They're sort of styled so
that they look at least somewhat legible.

177
00:12:01.245 --> 00:12:07.010
And then we come back to this /books page,
which is not yet created.

178
00:12:07.010 --> 00:12:09.180
So I'm gonna create one more page here and

179
00:12:09.180 --> 00:12:11.849
this one can just be a regular
old listing of books.

180
00:12:11.849 --> 00:12:15.690
So we're gonna import
everything as react from react.

181
00:12:18.594 --> 00:12:22.720
We're going to import, graphql,

182
00:12:22.720 --> 00:12:29.520
Link from gatsby,
we're going to import slugify.

183
00:12:29.520 --> 00:12:31.345
I'm really now that it's
been pointed out to me,

184
00:12:31.345 --> 00:12:34.810
I'm feeling very foolish about having
duplicated all this slugify work.

185
00:12:34.810 --> 00:12:39.588
And we're gonna do this as
a static query again, so

186
00:12:39.588 --> 00:12:44.144
let's export default function booksPage,
and

187
00:12:44.144 --> 00:12:48.489
let's get the useStaticQuery
in here again.

188
00:12:53.922 --> 00:12:58.620
So I'm gonna get data
out of useStaticQuery.

189
00:12:58.620 --> 00:13:03.032
That's gonna be our tag
to graphql template and

190
00:13:03.032 --> 00:13:07.320
inside of it, I wanna getAllBooks.

191
00:13:07.320 --> 00:13:11.830
So we're gonna run a query for
allBook, nodes.

192
00:13:11.830 --> 00:13:18.001
And then inside I want the id,
the name, the author the name and

193
00:13:18.001 --> 00:13:22.090
slug have the author and the series name.

194
00:13:26.090 --> 00:13:33.022
And that's our graphql query
Typos all over the place.

195
00:13:33.022 --> 00:13:35.740
Let's, make that better.

196
00:13:35.740 --> 00:13:37.700
Okay, then down here,
I can get the book out.

197
00:13:37.700 --> 00:13:43.576
So let's get books=data.allBook.nodes and

198
00:13:43.576 --> 00:13:47.080
then we can do our markup.

199
00:13:47.080 --> 00:13:51.865
So what I wanna do for this is again,
we just wrap it in a fragment.

200
00:13:51.865 --> 00:13:55.420
We will stand up a heading, says books.

201
00:13:56.500 --> 00:13:58.570
And then we'll list through our books.

202
00:13:58.570 --> 00:14:02.072
So we'll say books.map(book) and for

203
00:14:02.072 --> 00:14:06.480
each of these we are going
to do a little bit of logic.

204
00:14:09.100 --> 00:14:14.630
And that logic is going to
be to create a bookSlug.

205
00:14:14.630 --> 00:14:20.399
So again,
we will slugify the book.name lower:true.

206
00:14:23.905 --> 00:14:28.700
Then we're gonna do this whole thing
about generating the path again.

207
00:14:28.700 --> 00:14:31.986
So if book.series,

208
00:14:31.986 --> 00:14:37.833
then we wanna create the seriesSlug.

209
00:14:37.833 --> 00:14:45.623
And that's gonna be slugify(book.series),

210
00:14:45.623 --> 00:14:48.779
(lower:true).

211
00:14:48.779 --> 00:14:53.064
And then we'll set the path to be

212
00:14:53.064 --> 00:14:59.919
book/seriesSlug, BookSlug.

213
00:15:04.949 --> 00:15:08.858
Or else we will set it to be path=/book/.

214
00:15:10.788 --> 00:15:12.353
BookSlug.

215
00:15:14.328 --> 00:15:15.449
Okay.

216
00:15:18.588 --> 00:15:23.247
Once we've got that,
we can return our actual

217
00:15:23.247 --> 00:15:27.558
markup which will be
a list item with a key.

218
00:15:27.558 --> 00:15:30.020
That'll be the book.id.

219
00:15:30.020 --> 00:15:35.503
And then we're gonna set
a link to the path and

220
00:15:35.503 --> 00:15:40.708
that's gonna be the book.name and then.

221
00:15:40.708 --> 00:15:45.478
We also wanna say by link to, and

222
00:15:45.478 --> 00:15:49.022
that's going to be to.

223
00:15:49.022 --> 00:15:52.800
We want to make this forces to the root
because the author slug isn't a path.

224
00:15:52.800 --> 00:15:57.187
It's just the author slug, so if we only
put an author slug, what would happen is,

225
00:15:57.187 --> 00:15:59.020
it would make the links relative.

226
00:16:00.250 --> 00:16:06.310
So we're gonna link to the author's
page with book.author.name.

227
00:16:06.310 --> 00:16:09.310
And that reminds me that we
need to go book.author.slug.

228
00:16:10.820 --> 00:16:16.715
Okay, so you save all that and now,
assuming I did all this right,

229
00:16:16.715 --> 00:16:22.520
which I think we did, I should be
able to reload and get our books.

230
00:16:22.520 --> 00:16:24.920
Okay, so let's do a quick check.

231
00:16:24.920 --> 00:16:27.980
We're on the books page,
I click into a given book.

232
00:16:27.980 --> 00:16:28.770
Back to all books.

233
00:16:28.770 --> 00:16:32.760
I go to an author page, I get a list
of their books go to all authors.

234
00:16:34.290 --> 00:16:38.870
And here we are okay, so we're authors,
N.K Jemisin and click to a book.

235
00:16:38.870 --> 00:16:42.940
We get the book,
we go back to all books, we get a list.

236
00:16:42.940 --> 00:16:46.060
Click to an author, this is wonderful.

237
00:16:46.060 --> 00:16:47.520
Look how great this is.

238
00:16:47.520 --> 00:16:49.389
We have built ourselves
a book club website.

