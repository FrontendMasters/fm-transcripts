WEBVTT

1
00:00:00.200 --> 00:00:04.480
The first thing I'm gonna do, I think,
is start committing these changes.

2
00:00:04.480 --> 00:00:09.728
So I will check out a new
branch called progress,

3
00:00:09.728 --> 00:00:13.960
and I'm going to add everything here.

4
00:00:15.390 --> 00:00:22.380
And we'll say, set up for
Dev and create a custom page.

5
00:00:24.440 --> 00:00:27.780
All right, so then I'm gonna just
push to this steadily as we go.

6
00:00:27.780 --> 00:00:32.815
So that If at any point you get stuck,
you will be able to head over

7
00:00:32.815 --> 00:00:37.500
to this repo here,
which just opened in the wrong browser.

8
00:00:37.500 --> 00:00:38.790
So let's pull that over this way.

9
00:00:39.840 --> 00:00:43.406
Any point you get stuck, you can just
pull up this progress branch, and

10
00:00:43.406 --> 00:00:45.735
you'll be able to see
whatever we're doing.

11
00:00:45.735 --> 00:00:49.228
You can pull that down and
get back up to date with where we are.

12
00:00:49.228 --> 00:00:56.510
So, next up,
let's get some custom data into Gatsby.

13
00:00:56.510 --> 00:01:00.164
And this is something that I have so
much fun with,

14
00:01:00.164 --> 00:01:03.210
because it's just a powerful approach.

15
00:01:03.210 --> 00:01:07.120
Like you can do some really, really
cool things with custom data and Gatsby.

16
00:01:07.120 --> 00:01:11.739
And there's some some work that was
done between Gatsby one, Gatsby two and

17
00:01:11.739 --> 00:01:12.903
now Gatsby three.

18
00:01:12.903 --> 00:01:17.169
That took this from being
really esoteric and kind of,

19
00:01:17.169 --> 00:01:21.620
you had to know a whole bunch
about the internals to now.

20
00:01:21.620 --> 00:01:26.302
It It feels like, you still have
to know what the things are, but

21
00:01:26.302 --> 00:01:30.260
it doesn't feel nearly as mentally taxing.

22
00:01:30.260 --> 00:01:32.820
I don't feel like I have to
know exactly how Gatsby works.

23
00:01:32.820 --> 00:01:36.590
I feel like I just need to know these
API's, and that is really exciting to me.

24
00:01:36.590 --> 00:01:41.791
So, why don't we start up by
going into our Gatsby node again,

25
00:01:41.791 --> 00:01:44.560
and I want to work with this.

26
00:01:44.560 --> 00:01:45.530
Authors and books data.

27
00:01:45.530 --> 00:01:47.186
So looking inside these files,

28
00:01:47.186 --> 00:01:51.370
I put together like we're gonna build
a little book club website today, right?

29
00:01:51.370 --> 00:01:52.670
That's our, that's our goal.

30
00:01:52.670 --> 00:01:57.570
So I found a few authors and
put those into a JSON file.

31
00:01:57.570 --> 00:02:03.190
And then I took a few books and
these books, I grabbed their ISPN.

32
00:02:03.190 --> 00:02:08.966
So that's like a universal identifier,
the name of the author's Slug.

33
00:02:08.966 --> 00:02:12.795
And whether or not it's part of a series,
so like these three are part of a series,

34
00:02:12.795 --> 00:02:14.180
these ones are not.

35
00:02:14.180 --> 00:02:17.270
And anyways, these are some books,
they're good books.

36
00:02:17.270 --> 00:02:18.800
If you haven't read them you should.

37
00:02:18.800 --> 00:02:20.475
And I want to pull these in, and

38
00:02:20.475 --> 00:02:24.470
make these available as custom
data types on my Gatsby site.

39
00:02:24.470 --> 00:02:32.407
Start this up before we before
we get rolling So the the site,

40
00:02:32.407 --> 00:02:37.090
when it's in development mode is gonna
generate this GraphQL API that we can run.

41
00:02:37.090 --> 00:02:42.315
Now it's important to remember this
GraphQL layer is only available during.

42
00:02:42.315 --> 00:02:48.145
The build time, so it isn't something that
you can like query from the client side.

43
00:02:49.365 --> 00:02:51.238
But what's nice about it,

44
00:02:51.238 --> 00:02:55.590
is that it gives us the ability
to kind of explore our data.

45
00:02:55.590 --> 00:02:56.958
And as you can see right now,

46
00:02:56.958 --> 00:03:00.600
there's not much in here because
we haven't added a lot of data.

47
00:03:00.600 --> 00:03:03.620
But we can see that, here's all
of our pages that we've created.

48
00:03:03.620 --> 00:03:06.434
So our custom pages there,
our home pages there,

49
00:03:06.434 --> 00:03:09.188
the dev 404 which is for
during development.

50
00:03:09.188 --> 00:03:12.610
If you try to create something that's or
try to hit a route that doesn't exist.

51
00:03:12.610 --> 00:03:15.840
It'll like give you some hints,
which I can show you.

52
00:03:15.840 --> 00:03:20.930
Actually, if I go over to like
the 404 page, this is their dev 404.

53
00:03:20.930 --> 00:03:24.600
So this only shows up in development,
it doesn't show up in production.

54
00:03:24.600 --> 00:03:29.200
But it's really handy because if you get
lost, and you're trying to find a site.

55
00:03:29.200 --> 00:03:33.422
You can look here, instead of having
to go build a way to dump the data or

56
00:03:33.422 --> 00:03:34.790
something like that.

57
00:03:36.230 --> 00:03:38.890
So let's get some custom data in.

58
00:03:38.890 --> 00:03:46.280
So what I wanna do, is I wanna import my
authors and we're gonna get that from.

59
00:03:46.280 --> 00:03:50.461
Source, data, authors and then I'm going

60
00:03:50.461 --> 00:03:55.870
to duplicate that and
we're gonna get our books.

61
00:03:55.870 --> 00:04:01.210
So once we have our books, I wanno
be able to load up data into Gatsby.

62
00:04:01.210 --> 00:04:04.503
And the way that Gatsby does
that is through a hook,

63
00:04:04.503 --> 00:04:08.080
that it calls source nodes,
and source nodes.

64
00:04:08.080 --> 00:04:12.730
Is a another API hook,
it's a cycle that runs during the build.

65
00:04:12.730 --> 00:04:14.900
We can see it up here somewhere.

66
00:04:17.510 --> 00:04:19.021
They all happen in order, source and

67
00:04:19.021 --> 00:04:21.030
transform nodes is when
that one's happening.

68
00:04:21.030 --> 00:04:23.335
I don't know, why that one has a different
name than like these other ones,

69
00:04:23.335 --> 00:04:25.070
that are just called what they are.

70
00:04:25.070 --> 00:04:28.710
But, source nodes will give us,
an actions object and

71
00:04:28.710 --> 00:04:32.600
then it also gives us some
helpers that we're gonna need.

72
00:04:32.600 --> 00:04:34.760
I wanna be able to create a node ID.

73
00:04:34.760 --> 00:04:37.250
We'll talk a little bit about
node structure here in a second.

74
00:04:37.250 --> 00:04:40.127
And then we also need a content digest,

75
00:04:40.127 --> 00:04:44.757
which is a way to determine whether or
not the node has changed.

76
00:04:44.757 --> 00:04:48.520
Which is really important for
making Gatsby build faster.

77
00:04:48.520 --> 00:04:51.115
It's part of the caching mechanism so,

78
00:04:51.115 --> 00:04:54.560
let's talk about what a node
structure is in Gatsby.

79
00:04:54.560 --> 00:04:59.290
So, a Gatsby node is
going to be an object.

80
00:04:59.290 --> 00:05:03.720
And inside of that object,
it needs to have some kind of an ID.

81
00:05:03.720 --> 00:05:08.510
And, the way that you generally create
a node ID, is to just use this helper.

82
00:05:08.510 --> 00:05:11.063
And, you can put any string in
here as long as it's unique.

83
00:05:15.450 --> 00:05:19.280
Then, we need to say whether or
not there's a parent node.

84
00:05:19.280 --> 00:05:21.553
In a lot of cases,
this is gonna be null, but

85
00:05:21.553 --> 00:05:24.079
if you're doing something
where you want like.

86
00:05:24.079 --> 00:05:26.490
You're deriving data from a node.

87
00:05:26.490 --> 00:05:31.231
A good example of this, is if you have
images in Gatsby, you'll have the file and

88
00:05:31.231 --> 00:05:32.857
then underneath the file.

89
00:05:32.857 --> 00:05:38.790
You have the child Gatsby sharp or child
image sharp, that's a parent relationship.

90
00:05:38.790 --> 00:05:41.285
In that case,
you would set the parent, and

91
00:05:41.285 --> 00:05:43.650
in this one we're not gonna deal with it.

92
00:05:43.650 --> 00:05:47.996
Children is also an empty array,
there are no child nodes here and

93
00:05:47.996 --> 00:05:51.030
then there's this internal block.

94
00:05:51.030 --> 00:05:53.694
And these are things,
that Gatsby uses to determine whether or

95
00:05:53.694 --> 00:05:55.310
not this node has changed.

96
00:05:55.310 --> 00:05:58.550
So the first thing we're gonna do is,
we're gonna set a type and

97
00:05:58.550 --> 00:06:00.290
that can be any arbitrary string.

98
00:06:00.290 --> 00:06:04.209
It just needs to be unique, so
my custom type or whatever.

99
00:06:07.279 --> 00:06:10.920
And then we wanna set what the content is.

100
00:06:10.920 --> 00:06:15.038
This one's optional, but
it's kind of a nice way to make sure that,

101
00:06:15.038 --> 00:06:18.940
you've got like whatever
your node content is.

102
00:06:18.940 --> 00:06:20.356
And this would be an object,

103
00:06:20.356 --> 00:06:23.020
I'll show this in an actual
example here in a second.

104
00:06:23.020 --> 00:06:27.700
We're just looking at the details and
then, you need a content digest.

105
00:06:27.700 --> 00:06:32.342
And so what a content digest is,
if you've ever seen like a checksum,

106
00:06:32.342 --> 00:06:37.005
or other way of validating that
files contents match, what they did.

107
00:06:37.005 --> 00:06:40.205
At the time of publishing,
that's what we're doing here.

108
00:06:40.205 --> 00:06:43.501
We're creating a digest of
what's inside of this node,

109
00:06:43.501 --> 00:06:47.225
so that Gatsby can say,
is this the same node that it was before?

110
00:06:47.225 --> 00:06:50.727
If so, skip it don't do any work
because we know that nothing changed.

111
00:06:50.727 --> 00:06:53.814
If the digest did change,
then we need to blow this node away and

112
00:06:53.814 --> 00:06:56.397
create it fresh because
there's new information.

113
00:06:57.677 --> 00:07:01.637
If we don't set this, Gatsby will
recreate every node, every time and

114
00:07:01.637 --> 00:07:03.917
that's gonna slow down our build.

115
00:07:03.917 --> 00:07:06.900
So setting this is is very important, and

116
00:07:06.900 --> 00:07:10.919
we would do that again by
setting like the node content.

117
00:07:11.970 --> 00:07:13.580
And you can put whatever you want in here.

118
00:07:13.580 --> 00:07:16.108
Like if you only have two
fields that are unique, and

119
00:07:16.108 --> 00:07:18.990
like one of them is randomly generated,
cool, whatever.

120
00:07:18.990 --> 00:07:22.474
I don't know why you would have
a randomly generated field and

121
00:07:22.474 --> 00:07:24.490
data but, you do have that option.

122
00:07:24.490 --> 00:07:27.602
You only have to digest what
needs to be digested, and

123
00:07:27.602 --> 00:07:30.070
you can make the call for what.

124
00:07:30.070 --> 00:07:32.930
Needs to change or
what should change and when.

125
00:07:32.930 --> 00:07:35.090
So, this is the basic structure.

126
00:07:35.090 --> 00:07:39.367
And what I wanna do is,
I want to create nodes,

127
00:07:39.367 --> 00:07:44.430
which will do using a helper
from the actions object.

128
00:07:44.430 --> 00:07:46.040
This is another nice one.

129
00:07:46.040 --> 00:07:50.380
So this one's called create node,
and we pull that out of actions.

130
00:07:52.220 --> 00:07:56.639
Inside of this, I'm going to then
just loop through my authors.

131
00:07:58.769 --> 00:08:04.700
And I want to For
each of these create a node.

132
00:08:04.700 --> 00:08:06.458
So I'm gonna create a node,

133
00:08:06.458 --> 00:08:10.680
and it's gonna start by just
putting in like the author fields.

134
00:08:10.680 --> 00:08:14.180
Because you'll notice down here, these are
the fields that are required by Gatsby.

135
00:08:14.180 --> 00:08:17.339
I didn't put any data in here, but
like I can put whatever I want.

136
00:08:20.759 --> 00:08:21.470
Right?

137
00:08:21.470 --> 00:08:23.521
And then this is what I'll
actually be able to query.

138
00:08:23.521 --> 00:08:27.215
Inside of Gatsby as I'd be able to get,
my custom type sum, and

139
00:08:27.215 --> 00:08:30.170
then that would give me the value of data,
right?

140
00:08:30.170 --> 00:08:31.530
That's what a node looks like.

141
00:08:31.530 --> 00:08:36.430
So I'm dropping in the author, so
that we get access to its slug and name.

142
00:08:38.640 --> 00:08:43.443
Then we're gonna create an ID, and
we're gonna use create node ID, and

143
00:08:43.443 --> 00:08:45.980
pass in some kinda of a unique string.

144
00:08:45.980 --> 00:08:50.152
So, this is a way to do it
that's guaranteed unique like,

145
00:08:50.152 --> 00:08:55.350
in the off chance that you had
a another section of like people.

146
00:08:55.350 --> 00:08:59.760
And you had a people object
that included like N.K Jemisin.

147
00:08:59.760 --> 00:09:02.977
You wouldn't want a collision
where the author, and

148
00:09:02.977 --> 00:09:05.790
the people would both have the same slug.

149
00:09:05.790 --> 00:09:09.310
So then the data types would collide
because they'd have the same ID.

150
00:09:09.310 --> 00:09:11.495
This is a way to just,
put the type name in there and

151
00:09:11.495 --> 00:09:14.360
then you're guaranteed
it's going to be unique.

152
00:09:14.360 --> 00:09:16.910
Then we're going to set there's no parent.

153
00:09:16.910 --> 00:09:20.993
I'm actually just going to copy paste
this part, because why type it twice.

154
00:09:20.993 --> 00:09:25.300
So here's my parent and children,
and then for the internal.

155
00:09:25.300 --> 00:09:29.580
Our type is going to be author,

156
00:09:29.580 --> 00:09:35.681
our content will be Json stringify author.

157
00:09:35.681 --> 00:09:42.251
And the content digest, is gonna be
create content digest of author.

158
00:09:48.570 --> 00:09:56.080
Okay, so if I get rid of this,
Let's just give that a try, right?

159
00:09:56.080 --> 00:09:59.277
Let's see how that goes so,
I've now created.

160
00:09:59.277 --> 00:10:03.484
Theoretically three new
nodes inside of Gatsby,

161
00:10:03.484 --> 00:10:07.900
cuz we've got three entries
in this author object.

162
00:10:09.000 --> 00:10:12.879
Alright, so now that this is running,
what we should see is when this pops open,

163
00:10:12.879 --> 00:10:16.040
we should be able to query for
an author type in Gatsby.

164
00:10:16.040 --> 00:10:18.030
And remember that's not available now.

165
00:10:18.030 --> 00:10:20.520
So without refreshing the page.

166
00:10:20.520 --> 00:10:25.980
Here's directory file site,
site build meta function page plug in.

167
00:10:25.980 --> 00:10:26.580
That's it right?

168
00:10:26.580 --> 00:10:27.480
So let me refresh.

169
00:10:28.770 --> 00:10:32.980
Hey, there's our author and
inside of it, look, we've got filters.

170
00:10:32.980 --> 00:10:35.744
We've got the ability to sort, limit skip,

171
00:10:35.744 --> 00:10:40.544
and then I can get into my nodes and
I can get the name and the slug.

172
00:10:40.544 --> 00:10:46.544
And if I query these, look at that,
we now have custom data in Gatsby.

173
00:10:46.544 --> 00:10:47.074
What a great day.

