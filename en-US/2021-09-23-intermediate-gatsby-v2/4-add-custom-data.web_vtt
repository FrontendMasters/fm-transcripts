WEBVTT

1
00:00:00.070 --> 00:00:04.258
The first thing I'm gonna do, I think,
is start committing these changes.

2
00:00:04.258 --> 00:00:11.072
So I will check out a new
branch called progress.

3
00:00:11.072 --> 00:00:16.070
And I'm going to add everything here,

4
00:00:16.070 --> 00:00:20.309
and we'll say, set up for dev and

5
00:00:20.309 --> 00:00:25.015
create a customer page, all right?

6
00:00:25.015 --> 00:00:27.591
So then I'm gonna just push
to this steadily as we go.

7
00:00:27.591 --> 00:00:30.679
So that if, at any point, you get stuck,

8
00:00:30.679 --> 00:00:34.119
you will be able to head
over to this repo here,

9
00:00:34.119 --> 00:00:39.530
which just opened in the wrong browser,
so let's pull it over this way.

10
00:00:39.530 --> 00:00:43.293
Any point you get stuck, you can just
pull up this progress branch, and

11
00:00:43.293 --> 00:00:45.752
you'll be able to see
whatever we're doing.

12
00:00:45.752 --> 00:00:50.251
You can pull that down and
get back up-to-date with where we are.

13
00:00:50.251 --> 00:00:56.393
So next up,
let's get some custom data into Gatsby.

14
00:00:56.393 --> 00:01:00.048
And this is something that I have so
much fun with,

15
00:01:00.048 --> 00:01:03.101
because it's just a powerful approach.

16
00:01:03.101 --> 00:01:06.894
You can do some really, really cool
things with custom data in Gatsby.

17
00:01:06.894 --> 00:01:11.653
And there's some work that was
done between Gatsby 1, Gatsby 2,

18
00:01:11.653 --> 00:01:16.577
and now Gatsby 3 that took this from
being really esoteric and kinda,

19
00:01:16.577 --> 00:01:20.101
you had to know a whole
bunch about the internals.

20
00:01:20.101 --> 00:01:25.142
To now, you still have to
know what the things are,

21
00:01:25.142 --> 00:01:29.959
but it doesn't feel nearly
as mentally taxing.

22
00:01:29.959 --> 00:01:32.549
I don't feel like I have to
know exactly how Gatsby works.

23
00:01:32.549 --> 00:01:36.409
I feel like I just need to know these
APIs, and that is really exciting to me.

24
00:01:36.409 --> 00:01:41.381
So why don't we start up by going
into our gatsby-node again.

25
00:01:41.381 --> 00:01:45.389
And I wanna work with this authors and
books data.

26
00:01:45.389 --> 00:01:49.685
So looking inside these files, I put
together, we're gonna build a little book

27
00:01:49.685 --> 00:01:52.543
club website here today,
right, that's our goal.

28
00:01:52.543 --> 00:01:57.535
So I found a few authors and
put those into a JSON file, and

29
00:01:57.535 --> 00:01:59.618
then I took a few books.

30
00:01:59.618 --> 00:02:05.636
And these books, I grabbed their ISBN,
so that's a universal identifier.

31
00:02:05.636 --> 00:02:10.155
The name, the author slug, and
whether or not it's part of a series.

32
00:02:10.155 --> 00:02:13.941
So these three are part of a series,
these ones are not.

33
00:02:13.941 --> 00:02:16.465
And anyways, these are some books.

34
00:02:16.465 --> 00:02:18.360
They're good books,
if you haven't read them, you should.

35
00:02:18.360 --> 00:02:20.191
And I wanna pull these in and

36
00:02:20.191 --> 00:02:24.263
make these available as custom
data types on my Gatsby site.

37
00:02:24.263 --> 00:02:26.909
Start this up before we get rolling.

38
00:02:31.353 --> 00:02:33.995
So the site,
when it's in development mode,

39
00:02:33.995 --> 00:02:36.927
is gonna generate this
GraphQL API that we can run.

40
00:02:36.927 --> 00:02:39.262
Now, it's important to remember,

41
00:02:39.262 --> 00:02:43.115
this GraphQL layer is only
available during the build time.

42
00:02:43.115 --> 00:02:49.102
So this isn't something that you
can query from the client side.

43
00:02:49.102 --> 00:02:55.336
But what's nice about it is that it gives
us the ability to kinda explore our data.

44
00:02:55.336 --> 00:02:58.236
And as you can see right now,
there's not much in here,

45
00:02:58.236 --> 00:03:00.356
because we haven't added a lot of data.

46
00:03:00.356 --> 00:03:03.412
But we can see that, here's all
of our pages that we've created.

47
00:03:03.412 --> 00:03:06.222
So our custom page is there,
our home page is there.

48
00:03:06.222 --> 00:03:08.975
The dev 404, which is for
during development,

49
00:03:08.975 --> 00:03:13.393
if you try to create something that's, or
try to hit a route that doesn't exist,

50
00:03:13.393 --> 00:03:14.945
it'll give you some hints.

51
00:03:14.945 --> 00:03:19.615
Which I can show you, actually,
if I go over to the 404 page.

52
00:03:19.615 --> 00:03:20.989
This is their dev 404.

53
00:03:20.989 --> 00:03:24.339
So this only shows up in development,
it doesn't show up in production.

54
00:03:24.339 --> 00:03:29.870
But it's really handy, because if you get
lost and you're trying to find a site,

55
00:03:29.870 --> 00:03:34.438
you can look here instead of having
to build a way to dump the data, or

56
00:03:34.438 --> 00:03:35.984
something like that.

57
00:03:35.984 --> 00:03:38.694
So let's get some customer data in.

58
00:03:38.694 --> 00:03:43.521
So what I wanna do is,
I wanna import my authors.

59
00:03:43.521 --> 00:03:51.000
And we're gonna get that
from /src/data/authors.

60
00:03:51.000 --> 00:03:55.684
And then I'm gonna duplicate that,
and we're gonna get our books.

61
00:03:55.684 --> 00:04:00.988
So once we have our books, I wanna
be able to load up data into Gatsby.

62
00:04:00.988 --> 00:04:06.485
And the way that Gatsby does that is
through a hook that it calls sourceNodes.

63
00:04:06.485 --> 00:04:10.564
And sourceNodes is another API hook.

64
00:04:10.564 --> 00:04:12.524
It's a cycle that runs during the build.

65
00:04:12.524 --> 00:04:17.282
We can see it up here somewhere.

66
00:04:17.282 --> 00:04:18.834
They all happen in order, source and

67
00:04:18.834 --> 00:04:20.896
transform nodes is when
that one's happening.

68
00:04:20.896 --> 00:04:23.923
I don't know why that one has a different
name than these other ones that are just

69
00:04:23.923 --> 00:04:24.788
called what they are.

70
00:04:24.788 --> 00:04:28.335
But sourceNodes will give
us an actions object, and

71
00:04:28.335 --> 00:04:32.295
then it also gives us some
helpers that we're gonna need.

72
00:04:32.295 --> 00:04:34.508
I wanna be able to create a node ID.

73
00:04:34.508 --> 00:04:36.840
We'll talk a little bit about
node structure here in a second.

74
00:04:36.840 --> 00:04:39.783
And then we also need a contentDigest,

75
00:04:39.783 --> 00:04:44.518
which is a way to determine whether or
not the node has changed.

76
00:04:44.518 --> 00:04:48.068
Which is really important for
making Gatsby build faster,

77
00:04:48.068 --> 00:04:50.346
it's part of the caching mechanism.

78
00:04:50.346 --> 00:04:54.439
So let's talk about what
a node structure is in Gatsby.

79
00:04:54.439 --> 00:04:58.332
So a Gatsby node is going to be an object,
and

80
00:04:58.332 --> 00:05:03.508
inside of that object,
it needs to have some kind of an ID.

81
00:05:03.508 --> 00:05:08.620
And the way that you generally create
a node ID is to just use this helper.

82
00:05:08.620 --> 00:05:10.978
And you can put any string in here,
as long as it's unique.

83
00:05:15.408 --> 00:05:19.223
Then we need to say whether or
not there's a parent node.

84
00:05:19.223 --> 00:05:20.899
In a lot of cases, this is gonna be null.

85
00:05:20.899 --> 00:05:26.205
But if you're doing something where you
want, you're deriving data from a node?

86
00:05:26.205 --> 00:05:30.104
A good example of this is if
you have images in Gatsby.

87
00:05:30.104 --> 00:05:37.153
You'll have the file, and then underneath
the file, you have the child Gatsby Sharp.

88
00:05:37.153 --> 00:05:41.738
That's a parent relationship,
in that case you would set the parent.

89
00:05:41.738 --> 00:05:43.412
In this case,
we're not gonna deal with it.

90
00:05:43.412 --> 00:05:48.826
Children is also an empty array,
there are no child nodes here.

91
00:05:48.826 --> 00:05:52.695
And then there's this internal block,
and these are things that Gatsby uses to

92
00:05:52.695 --> 00:05:55.073
determine whether or
not this node has changed.

93
00:05:55.073 --> 00:05:57.581
So the first thing we're gonna do is,
we're gonna set a type.

94
00:05:57.581 --> 00:06:01.954
And that can be any arbitrary string,
it just needs to be unique, so

95
00:06:01.954 --> 00:06:03.812
MyCustomType or whatever.

96
00:06:07.190 --> 00:06:10.639
And then we wanna set what the content is.

97
00:06:10.639 --> 00:06:12.624
This one's optional, but

98
00:06:12.624 --> 00:06:18.681
it's kind of a nice way to make sure that
you've got whatever your nodeContent is.

99
00:06:18.681 --> 00:06:20.112
And this would be an object,

100
00:06:20.112 --> 00:06:22.806
I'll show this in an actual
example here in a second.

101
00:06:22.806 --> 00:06:27.473
We're just looking at the details,
and then you need a contentDigest.

102
00:06:27.473 --> 00:06:31.806
And so what a contentDigest is is,
if you've ever seen a checksum or

103
00:06:31.806 --> 00:06:36.746
other way of validating that a file's
contents match what they did at the time

104
00:06:36.746 --> 00:06:39.953
of publishing,
that's what we're doing here.

105
00:06:39.953 --> 00:06:43.383
We're creating a digest of
what's inside of this node, so

106
00:06:43.383 --> 00:06:46.964
that Gatsby can say,
is this the same node that it was before?

107
00:06:46.964 --> 00:06:50.453
If so, skip it, don't do any work,
cuz we know that nothing changed.

108
00:06:50.453 --> 00:06:55.194
If the digest did change, then we need to
blow this node away and create it fresh,

109
00:06:55.194 --> 00:06:57.380
because there's new information.

110
00:06:57.380 --> 00:07:01.565
If we don't set this, Gatsby will
recreate every node every time, and

111
00:07:01.565 --> 00:07:03.671
that's gonna slow down our build.

112
00:07:03.671 --> 00:07:06.778
So setting this is very important,

113
00:07:06.778 --> 00:07:11.656
and you would do that again
by setting the nodeContent.

114
00:07:11.656 --> 00:07:13.812
And you can put whatever you want in here.

115
00:07:13.812 --> 00:07:16.384
If you only have two
fields that are unique and

116
00:07:16.384 --> 00:07:19.572
one of them's randomly generated,
cool, whatever.

117
00:07:19.572 --> 00:07:23.097
I don't know why you would have
a randomly generated field in data, but

118
00:07:23.097 --> 00:07:24.348
you do have that option.

119
00:07:24.348 --> 00:07:29.226
You only have to digest what needs to be
digested, and you can make the call for

120
00:07:29.226 --> 00:07:32.696
what needs to change, or
what should change and when.

121
00:07:32.696 --> 00:07:39.663
So this is the basic structure, and what
I wanna do is, I want to create nodes,

122
00:07:39.663 --> 00:07:44.748
we'll we'll do using a helper
from the actions object.

123
00:07:44.748 --> 00:07:49.620
This is another nice one, so
this one's called createNode, and

124
00:07:49.620 --> 00:07:51.932
we pulled that out of actions.

125
00:07:51.932 --> 00:07:58.687
Inside of this, I'm going to then
just loop through my authors.

126
00:07:58.687 --> 00:08:04.589
And I want to, for
each of these, create a node.

127
00:08:04.589 --> 00:08:06.728
So I'm gonna create a node, and

128
00:08:06.728 --> 00:08:10.462
it's gonna start by just
putting in the author fields.

129
00:08:10.462 --> 00:08:13.907
Because you'll notice down here, these are
the fields that are required by Gatsby.

130
00:08:13.907 --> 00:08:17.268
I didn't put any data in here,
but I can put whatever I want.

131
00:08:20.686 --> 00:08:24.844
Right, and then this is what I'll actually
be able to query inside of Gatsby,

132
00:08:24.844 --> 00:08:27.112
is I'd be able to get my MyCustomType sum,

133
00:08:27.112 --> 00:08:29.948
and then that would give me
the value of data, right?

134
00:08:29.948 --> 00:08:31.295
That's what a node looks like.

135
00:08:31.295 --> 00:08:38.390
So I'm dropping in the author so
that we get access to its slug and name.

136
00:08:38.390 --> 00:08:43.170
Then we're gonna create an ID, and
we're gonna use createNodeId and

137
00:08:43.170 --> 00:08:45.692
pass in some kind of a unique string.

138
00:08:45.692 --> 00:08:50.538
So this is a way to do it
that's guaranteed unique.

139
00:08:50.538 --> 00:08:55.013
In the off chance that you had
another section of people, and

140
00:08:55.013 --> 00:09:00.103
you had a people object that included
N K Jemisin, you wouldn't want

141
00:09:00.103 --> 00:09:05.578
a collision where the author and
the people would both have the same slug.

142
00:09:05.578 --> 00:09:09.090
So then the data types would collide,
because they'd have the same ID.

143
00:09:09.090 --> 00:09:11.848
This is a way to just put
the type name in there, and

144
00:09:11.848 --> 00:09:14.564
then you're guaranteed
it's gonna be unique.

145
00:09:14.564 --> 00:09:16.688
Then we're gonna set, there's no parent.

146
00:09:16.688 --> 00:09:21.399
I'm actually gonna just copy-paste
this part, because why type it twice?

147
00:09:21.399 --> 00:09:25.759
So here's my parent and
children, and then for

148
00:09:25.759 --> 00:09:29.799
the internal, our type is going to Author.

149
00:09:29.799 --> 00:09:35.573
Our content will be
json.stringify(author).

150
00:09:35.573 --> 00:09:42.291
And the contentDigest is gonna
be createContentDigest(author).

151
00:09:48.491 --> 00:09:55.492
Okay, so if I get rid of this,
Let's just give that a try, right?

152
00:09:55.492 --> 00:09:57.327
Let's see how that goes.

153
00:09:57.327 --> 00:10:04.572
So I've now created, theoretically,
three new nodes inside of Gatsby.

154
00:10:04.572 --> 00:10:08.728
Cuz we've got three entries
in this Author object.

155
00:10:08.728 --> 00:10:11.932
All right, so now that this is running,
what we should see is,

156
00:10:11.932 --> 00:10:15.810
when this pops open, we should be able
to query for an author type in Gatsby.

157
00:10:15.810 --> 00:10:17.894
And remember, that's not available now.

158
00:10:17.894 --> 00:10:22.173
So without refreshing the page,
here's Directory, File, Site,

159
00:10:22.173 --> 00:10:26.401
SiteBuildMeta, Function, Page,
Plugin, that's it, right?

160
00:10:26.401 --> 00:10:30.047
So let me refresh, hey,
there's our author.

161
00:10:30.047 --> 00:10:34.451
And inside of it, look, we've got filters,
we've got the ability to sort,

162
00:10:34.451 --> 00:10:35.339
limit, skip.

163
00:10:35.339 --> 00:10:40.239
And then I can get into my nodes,
and I can get the name and the slug.

164
00:10:40.239 --> 00:10:43.483
And if I query these, look at that.

165
00:10:43.483 --> 00:10:47.074
We now have custom data in Gatsby,
what a great day.

