[00:00:00]
>> Now that we've got our development environment, we've got a mono repo. Let's dig in and start just making some stuff. So the first thing I wanna do is I want to build a custom page. And I wanna do this without using files instead I wanna use the node API's.

[00:00:17]
So Gatsby has this concept of node API's where during the build process, it will expose hooks into different parts of the process. So there's a create pages API, a source nodes API. We're gonna look into how we can use those to customize our Gatsby site. So the first one we're gonna look at is called create pages.

[00:00:37]
And the way that this works is we are going to create a new file at the root called Gatsby, node.js and inside of this, we can export any number of hooks that we want to. And so the one that we're actually looking at first is create pages, so exports create pages.

[00:00:56]
Now remember this is node, so it needs to be done, let me turn off copilot, so it doesn't, yeah. Copilot gets really confusing if I'm trying to do one thing, and it's helping, so in here, we've got the ability to export a function. And whatever we do in this function will get run as part of the create pages step of the Gatsby build process.

[00:01:22]
And for us, we just wanna create our first page, so let's pull out of the actions, the create page action. And this is an object that gets passed in with various helpers. We'll, use a handful of these throughout the day. I'll go into what the ones we use are, but know that's not an exhaustive list, there's more stuff you can do with the Gatsby APIs.

[00:01:48]
I'm gonna do the ones that are most practically useful. Some of them get a little esoteric like you can get into changing the Webpack and double config, which I would recommend you don't. [LAUGH] I mean, you can do whatever you want, but it's it's gonna. Anytime you get into the internals, you're probably gonna have a bad time unless you've got a very good reason for doing so.

[00:02:11]
So the way the create page API works is we're gonna pass it an object, and create page requires three things. The first thing is a path, the second thing is a component, and the third thing is optional, which is context, so let's actually leave context out for now.

[00:02:32]
So a component is gonna actually look for a file of react component that we can use to render this page, so we need to build that. So before we save this file, let's actually go in here, and let's make ourselves a template. So I'm gonna create a folder called templates, if I can spell it.

[00:02:52]
Templates, and we'll call this one custom.js, this is gonna be more of a proof of concept page. And inside of it, let's make a pretty standard react component. We're gonna import everything as react. From react, this is a workaround for react 17 not requiring the global react import anymore, but Gatsby not having implemented that yet.

[00:03:16]
So you have to pull in the whole library, and then we're going to export default function, custom page. And inside of it, we can add some, let's leave that part out actually, we'll get to that in a minute. So let's return just a basic div, and inside of it we can say custom page.

[00:03:45]
All right, so now that we've got that we can load this in. So we're gonna use require.resolve, which is a way to get the the absolute path. To a component and we're gonna use the templates/custom.js that we just created. And I'm gonna set this at a path of custom, so the path is just whatever we want it to be on the site.

[00:04:03]
So /custom will be mysite.com/custom. And now that I've done that if we stop and restart, because we just added a new process. And we can look at the stages in here as well as this builds as it starts. So there's these hooks here on pre-init. And on pre-bootstrap and create schema customization.

[00:04:32]
And there's create pages, so when we ran create pages Gatsby picked up our changes. And now, if we go in here and look, we can go to our custom page, and there it is. So this is a really powerful workflow, right? It lets us do a lot, but it's not particularly useful right now because you this way, what's the benefit of doing this versus just like creating a page called custom.js, right, there's no, real benefit here.

[00:05:01]
So where the create page starts to become extremely interesting is when we start including context. So with context, we can just pass in any object, and whatever we pass here is gonna be made available to our Gatsby site. So I'm gonna keep this pretty simple, let's do a custom page.

[00:05:21]
And then we'll add some meta stuff, so we'll do a description. And inside that we can say a custom page with context. And that's probably good enough, right, and then let's change this out before we restart that thing. So anything that we pass in context is gonna be available in this prop pass to the page called page context.

[00:05:46]
And so in here, if we look at it, we can now use this to just set things up. So remember, we had that title, so let's just grab that title and use it as our page title. And then for the sake of brevity, since this is just to demonstrate the concept before we go deeper.

[00:06:05]
I'm just gonna dump everything else in page context into a pretext so we can see what's in there, so let's save that, let's come out here and let's restart that browser. Looks like it didn't do it, so I'm gonna stop and restart it manually. This is one of the things that can get a little tedious with doing more advanced Gatsby stuff is when you start messing with the config files with Gatsby node.

[00:06:31]
And some of the other ones you'll end up stopping and restarting the server a lot. So when you've got good reason to do it, absolutely, you should do it when you just don't opt in voluntary suffering is my least favorite kind. So do as little as you have to that's a motto, let's take a look at this.

[00:06:54]
So basically what we did here is we passed in this context. And everything that we passed in, this gets passed directly as page context which we can see looking at the site, because this is what got dumped out of that page context variable. This is a really handy way to pass in information and theoretically speaking, you could build your whole Gatsby site without ever looking at the GraphQL layer by just passing in context like this.

[00:07:22]
You could load things from a third party API, drop it into this custom page context. And then use that to set up your titles and your blog role and all that stuff, it is fairly useful. But as you get into more and more complex pages, it can get pretty challenging.

[00:07:41]
So we'll look at a way to make this a little bit better as we get into some of the custom data. And see a more useful pattern for for using context and how we can kind of level that up to make things easier. The other thing that I don't like is that if we use this approach; Were all the data is in context, then I don't actually know what's here until I go and look at Gatsby node.

[00:08:07]
So there's a little bit of like hopping between files to figure out what's available to me to use it. And I kind of prefer the the GraphQL way where the query that shows me what data is in the file is just right up above. So this is like baby steps with create page, but let's go a little bit further here.

