[00:00:00]
>> And that dear friends, I believe is the end of the coding we're gonna do today. So let's talk a little bit first and foremost, if you wanna see the lessons, remember that you can go and find the lesson that we follow today is on frontendmasters.learnwithJason dev/intermediate-gatsby. The source code for the project is at github.com/jlengstorf/frontend-masters-intermediate-gatsby-project.

[00:00:26]
The very succinctly named repo, and that's gonna be on the progress branch because the main branch is the starting point. So check out that progress branch if you wanna see what we built today. So, if you are looking for what to do next, if you wanna figure out next steps here.

[00:00:44]
I mean at this point, everything else you're gonna want to do is gonna be a deep dive into the docks. If the intro to gatsby course that we did that you can find it'll be under my author profile on front end masters. If that doesn't get you where you wanna go along with this one that we did today, then you're starting to look at more edge casey things.

[00:01:05]
And the docs have really good references all the API's are there they're documented. They're usually example repos attached where you can see how something is used, how you can apply different techniques to get different outcomes. You can also reach out to, the Gatsby team is pretty responsive, you can you can send messages to me on Twitter, you can open issues on the repo.

[00:01:27]
In general, the repo should be for project questions, hit me up on Twitter if you have more general questions. Cuz I won't check the repo often enough for it to be a good tech support venue. But I do love to hear from people, and most importantly the way that you're gonna level up at Gatsby is by building things in Gatsby.

[00:01:48]
The reason that I can do all of this stuff that I can do, is because I've probably built over 100 Gatsby sites. And a lot of them are our teeny tiny goofy little things that were just toys that I wanted to see if I could try. Like what if I did this thing with themes or what happened if I set up client side routing.

[00:02:05]
Or he how do I make auth work that little proof of concept we did today of protected routes. All of those little projects, building them and shipping them strengthens that muscle. It's gonna make you better as a developer to get those reps and do the thing over and over again, and try it a little bit different every time.

[00:02:22]
And that's gonna make you a really excellent developer, more so than watching every tutorial in the world you gonna get out there and you gotta actually build, right? So please get out there, go try something, build something, send me a message and and show me what you built, I'd love to see it.

[00:02:37]
So fun things, silly things, serious things work things, I'd love to see them all. So hit me up on Twitter and send me a message show me what you built, and I hope you have a whole lot of fun with Gatsby.
>> Is there a limit to the amount of processing a serverless function can do?

[00:02:56]

>> Every serverless function is gonna have memory limits and time limits, you can work around those with different processes. So for example if you wanna run a serverless function for longer than I think 20 seconds is the usual limit, then there's a pattern called background functions. Which on Netlify is you just add a dot background to the function name and it'll let it run for more than 20 seconds.

[00:03:25]
Memory varies I think AWS lambda which backs a lot of the services out there, has a six megabyte limit. So if you're trying to do like huge images or other types of processing, you may need to look at a different solution there. So those are the two real big limits, Yeah, I think there's the memory limit, there's the time limit, and I think that's everything.

[00:03:55]

>> What of build time, generally speaking, how are they affecting build time?
>> Serverless functions don't affect build time, you're deploying those as on demand, so they run on demand. So there's a little bit of a bundling cost but the bundling cost is negligible, it's a few seconds and it doesn't really scale too linearly.

[00:04:19]
And I think that if everybody's not already using it here in pretty short order, esbuild is gonna be the de facto standard for bundling serverless functions. And we saw on Netlify that if you're bundling several dozen functions, esbuild's doing it in hundreds of milliseconds, so it's unbelievably fast.

[00:04:44]
And yeah I would not factor built time in at all with the use of serverless functions.

