WEBVTT

1
00:00:00.299 --> 00:00:05.014
The next thing that I wanna dig into is,
how can we use this information,

2
00:00:05.014 --> 00:00:10.120
these the several function and actually
build out some protected routes, how

3
00:00:10.120 --> 00:00:15.022
do we create a section of our site where
you need to be logged in to access it.

4
00:00:15.022 --> 00:00:21.183
And the way that we're gonna do that is
we are going to create some new files.

5
00:00:21.183 --> 00:00:25.170
So, let's jump in to our pages and

6
00:00:25.170 --> 00:00:30.119
create one in a folder called account, and

7
00:00:30.119 --> 00:00:33.981
we'll call this one login.js.

8
00:00:33.981 --> 00:00:40.816
So, what we're doing with login.js
is we are going to create a form.

9
00:00:40.816 --> 00:00:45.441
And we're really just a button because
what we're gonna do is let people call

10
00:00:45.441 --> 00:00:50.282
that serverless function, a more complete
service you might have a username and

11
00:00:50.282 --> 00:00:52.505
password that people needed to use.

12
00:00:52.505 --> 00:00:57.498
But our goal here is to demonstrate
not to build something that we can

13
00:00:57.498 --> 00:00:59.080
ship to production.

14
00:00:59.080 --> 00:01:02.633
Then we're gonna use this
navigate from Gatsby again, and

15
00:01:02.633 --> 00:01:04.916
that'll be if something goes wrong.

16
00:01:04.916 --> 00:01:09.383
If we're already logged in, we don't wanna
stay on this page and so on and so forth.

17
00:01:09.383 --> 00:01:14.166
So, what I wanna do is I'm gonna start,

18
00:01:14.166 --> 00:01:18.117
let's build out our component.

19
00:01:18.117 --> 00:01:22.154
So, let's export default
function login page.

20
00:01:24.239 --> 00:01:30.982
And in this we're gonna do a login
status and a set login status.

21
00:01:30.982 --> 00:01:35.283
Do react use state and
we'll leave this one undefined,

22
00:01:35.283 --> 00:01:39.585
and I'm explicitly leaving
it undefined because what I

23
00:01:39.585 --> 00:01:44.454
want to happen here is we haven't
gotten any information yet.

24
00:01:44.454 --> 00:01:49.724
So, what we can do then
is let's return a button,

25
00:01:49.724 --> 00:01:53.490
and that button is gonna say login.

26
00:01:53.490 --> 00:01:57.651
And what I wanna do is if we're logged in,
so

27
00:01:57.651 --> 00:02:02.603
if you are logged in, and
that login status is true.

28
00:02:02.603 --> 00:02:07.099
What I wanna happen instead
of actually seeing anything,

29
00:02:07.099 --> 00:02:10.319
is we should just immediately navigate.

30
00:02:10.319 --> 00:02:15.427
And I wanna navigate over
to account dashboard,

31
00:02:15.427 --> 00:02:20.171
which we'll have to
create here in a second.

32
00:02:20.171 --> 00:02:24.541
And I'm gonna use a feature of
the Gatsby API, which is replace,

33
00:02:24.541 --> 00:02:29.165
and I'll show you why here in a second,
and then we'll return null.

34
00:02:29.165 --> 00:02:31.991
So that if for whatever reason,

35
00:02:31.991 --> 00:02:37.969
we still have to return a component,
this it just doesn't know up.

36
00:02:37.969 --> 00:02:43.018
So, this is not the most full featured
page and it actually won't work

37
00:02:43.018 --> 00:02:47.897
the way that we want it to right now,
but let's get this developed or

38
00:02:47.897 --> 00:02:53.389
get this running and develop so that
we can look at the navigation behavior.

39
00:02:53.389 --> 00:02:58.686
Okay, so let's make sure we're logged out
so that when we do get to this point,

40
00:02:58.686 --> 00:03:03.450
it doesn't immediately bounce us and
then let's go to account login.

41
00:03:03.450 --> 00:03:08.896
So here is our account login and right
now this button doesn't do anything so

42
00:03:08.896 --> 00:03:11.461
when I click it, nothing happens.

43
00:03:11.461 --> 00:03:17.985
But if I want to set my login to true,
what I want to happen is it'll,

44
00:03:17.985 --> 00:03:24.637
yeah, that's what we want is it
should automatically redirect us.

45
00:03:24.637 --> 00:03:30.161
So I go to account login, and
we immediately go to the dashboard because

46
00:03:30.161 --> 00:03:35.143
we're already logged in,
we don't need to see the login page.

47
00:03:35.143 --> 00:03:41.068
But if I go back,
you see how it took me to the homepage.

48
00:03:41.068 --> 00:03:45.306
The reason that we want that replace
is that if we don't do that,

49
00:03:45.306 --> 00:03:48.453
what happens is we cut off
our users in the past.

50
00:03:48.453 --> 00:03:52.403
And what ends up happening is
if I go to the homepage, and

51
00:03:52.403 --> 00:03:56.365
then from here,
I tried to go to the account login page.

52
00:03:56.365 --> 00:04:00.298
And I go, I didn't want to do that,
let me go back home.

53
00:04:00.298 --> 00:04:02.065
Wait, why did that work,
maybe I need to refresh.

54
00:04:06.278 --> 00:04:10.438
We go to account login, and
then I tried to go back and

55
00:04:10.438 --> 00:04:14.705
it's apparently,
outsmarting me for some reason.

56
00:04:14.705 --> 00:04:17.386
What does happen when it's not replacing?

57
00:04:17.386 --> 00:04:23.409
I'm not sure why it's ignoring me on this
is that it will cause, you hit login.

58
00:04:23.409 --> 00:04:26.196
And then you go to dashboard, and
then when you try to hit back,

59
00:04:26.196 --> 00:04:28.783
you go to login again,
which redirects you to dashboard.

60
00:04:28.783 --> 00:04:33.187
So you put people in a dead end where they
can't use the back button anymore, and

61
00:04:33.187 --> 00:04:36.428
it's not the end of the world but
it's an inconvenience.

62
00:04:36.428 --> 00:04:39.805
It's something that you don't want
to force people to deal with if they

63
00:04:39.805 --> 00:04:40.603
don't have to.

64
00:04:40.603 --> 00:04:46.388
So, what we are gonna do is use
this replace attribute which causes

65
00:04:46.388 --> 00:04:53.122
the site to give us the behavior that we
wanna bounce back and forth like that.

66
00:04:53.122 --> 00:04:58.571
So next,
let's actually wire this thing up,

67
00:04:58.571 --> 00:05:04.449
so I want a function called
a sync function login.

68
00:05:04.449 --> 00:05:10.317
And login is going to pull
the status out of await,

69
00:05:10.317 --> 00:05:16.335
we're gonna fetch and
we wanna fetch api/login.

70
00:05:16.335 --> 00:05:22.582
So just write to that api that we wrote,
and then we'll get it out as json.

71
00:05:27.222 --> 00:05:30.420
And we don't actually need this I don't
know why VS code keeps trying to help.

72
00:05:34.729 --> 00:05:39.507
So if the status is not okay,then
we know that the function

73
00:05:39.507 --> 00:05:44.101
failed because that function
will always return okay?

74
00:05:44.101 --> 00:05:47.726
So if the status is not okay,
we're gonna throw a new error and

75
00:05:47.726 --> 00:05:52.356
we're just gonna put in the status
because something definitely went weird.

76
00:05:52.356 --> 00:05:59.231
Otherwise, we will navigate
to account dashboard.

77
00:06:00.906 --> 00:06:05.667
All right, so what this will do is that'll

78
00:06:05.667 --> 00:06:09.899
let us do that navigation, and then,

79
00:06:09.899 --> 00:06:16.133
I don't know why I put this up here,
this needs in here.

80
00:06:19.811 --> 00:06:24.362
So No,

81
00:06:24.362 --> 00:06:28.145
I'm overthinking things,
okay, here we are.

82
00:06:28.145 --> 00:06:29.895
So we do want that to be out here.

83
00:06:29.895 --> 00:06:34.269
And then I also want the ability
to check the login status and

84
00:06:34.269 --> 00:06:37.606
that's where this login
status is gonna be.

85
00:06:37.606 --> 00:06:42.009
So what we're actually gonna
do is right when you log in,

86
00:06:42.009 --> 00:06:44.595
we're going to check the login.

87
00:06:44.595 --> 00:06:50.150
But first, why don't we just go ahead and
have this thing login so

88
00:06:50.150 --> 00:06:57.224
I'm gonna unclick and we will log in then
I need to set this back to, don't do that.

89
00:06:57.224 --> 00:06:59.880
Right, yes, that's what we wanted.

90
00:06:59.880 --> 00:07:01.340
So we're pulling this out.

91
00:07:01.340 --> 00:07:05.426
Honestly, we could put this wherever
we wanted, we could put it in here.

92
00:07:05.426 --> 00:07:09.402
So I'm just rearranging
deck chairs at that point.

93
00:07:09.402 --> 00:07:13.250
But so let's go to our account login page,
it takes us here.

94
00:07:13.250 --> 00:07:18.290
And if I look at our cookies again,
when I log in, there's our cookie,

95
00:07:18.290 --> 00:07:22.501
and we're now on the dashboard
that we still need to build.

96
00:07:22.501 --> 00:07:26.960
So, this is pretty dang cool,
but if I go back to my Login,

97
00:07:26.960 --> 00:07:31.692
you see how it shows us the login
even though the cookie is set.

98
00:07:31.692 --> 00:07:34.704
So we need one more function
that's gonna check for

99
00:07:34.704 --> 00:07:38.501
the presence of that cookie that
we can run right at the get-go.

100
00:07:38.501 --> 00:07:43.703
So, we're going to do an async
function called checklogin,

101
00:07:43.703 --> 00:07:48.014
and this one is going to
take the setter from react.

102
00:07:48.014 --> 00:07:52.168
So, when we have a login status,
we wanna set login status,

103
00:07:52.168 --> 00:07:55.190
we're gonna pass that right through here.

104
00:07:55.190 --> 00:08:00.417
And in it, we're gonna get the logged in,
will defaulted to false in

105
00:08:00.417 --> 00:08:06.481
case something goes wrong with the call,
and we will await another fetch call.

106
00:08:10.409 --> 00:08:12.983
To api check auth.

107
00:08:16.274 --> 00:08:20.284
And after that,
we will get the response as json.

108
00:08:26.603 --> 00:08:30.719
And then we can just
set that login status.

109
00:08:30.719 --> 00:08:33.543
So we'll set the login status
to whatever logged in is, so

110
00:08:33.543 --> 00:08:35.458
that's either gonna be true or false.

111
00:08:35.458 --> 00:08:39.922
And if it's true, we'll get redirected, so

112
00:08:39.922 --> 00:08:43.817
by saving this and refreshing the page.

113
00:08:46.532 --> 00:08:48.582
Nothing happens because we
didn't actually call this yet.

114
00:08:48.582 --> 00:08:54.266
So, [LAUGH] let's actually call this,
let's add a helper

115
00:08:54.266 --> 00:09:00.066
function down here,
we're gonna use react, use effect.

116
00:09:00.066 --> 00:09:06.564
And as soon as the page loads which
we signify with an empty array,

117
00:09:06.564 --> 00:09:13.549
we want to call, check login and
we'll pass in that set login status.

118
00:09:13.549 --> 00:09:17.177
So this should set up our loop,
and there it goes.

119
00:09:17.177 --> 00:09:21.779
So now if I go to login,
when I'm logged in, it'll work and

120
00:09:21.779 --> 00:09:26.948
if I go to api/logout, and
then I go back to account login, oops.

121
00:09:31.201 --> 00:09:33.325
It takes me to the login.

122
00:09:33.325 --> 00:09:35.953
So that's a working login page, right?

123
00:09:35.953 --> 00:09:38.566
And so
there's a decent amount going on here.

124
00:09:38.566 --> 00:09:41.596
But again,
we are largely just writing react,

125
00:09:41.596 --> 00:09:44.028
we're not doing a lot of gatsby here.

126
00:09:44.028 --> 00:09:50.280
The biggest thing that we're doing
with gatsby is these navigation calls.

127
00:09:50.280 --> 00:09:53.540
So, because the serverless
functions made it so

128
00:09:53.540 --> 00:09:58.150
straightforward to update that cookie and
check that cookie value,

129
00:09:58.150 --> 00:10:02.057
we don't really have to do
a whole lot to manage this auth.

130
00:10:02.057 --> 00:10:06.029
And again, that's sort of the power of
this approach is we're able to very

131
00:10:06.029 --> 00:10:10.319
quickly stand up the serverless functions
and get things built instead of having

132
00:10:10.319 --> 00:10:12.903
to think really hard about
how to get them built or

133
00:10:12.903 --> 00:10:16.586
get clever about implementing it in
the browser in a way that secure.

134
00:10:18.344 --> 00:10:21.405
So next, let's go ahead and
build the dashboard page.

135
00:10:24.398 --> 00:10:28.682
And this dashboard page is going
to be fairly straightforward,

136
00:10:28.682 --> 00:10:33.061
I don't know that it's gonna have
anything super special in it.

137
00:10:33.061 --> 00:10:38.598
It's actually gonna be in an almost
exact duplicate in terms of a lot

138
00:10:38.598 --> 00:10:43.951
of the functionality to the point
that I might just copy paste it.

139
00:10:43.951 --> 00:10:48.538
Let's throw this over and just say
cuz we still wanna check the login,

140
00:10:48.538 --> 00:10:52.969
so if we were gonna have a bunch of
dashboard pages, I would probably

141
00:10:52.969 --> 00:10:57.432
say let's try this out and
put this into a custom hook or something.

142
00:10:57.432 --> 00:11:01.492
But given that we're only using it twice,
I'm kind of okay with leaving it so

143
00:11:01.492 --> 00:11:03.751
that it's really clear what's going on.

144
00:11:03.751 --> 00:11:09.029
The difference is that we are going
to instead of tracking the login,

145
00:11:09.029 --> 00:11:13.678
we're going to track log out and
call this function log out.

146
00:11:18.365 --> 00:11:24.659
And after we've logged out, we want to go
to the login page, not the dashboard page.

147
00:11:24.659 --> 00:11:29.114
So let's call this one dashboard page,

148
00:11:29.114 --> 00:11:35.279
we will still set our login status and
set login status.

149
00:11:35.279 --> 00:11:39.493
We're still gonna check
the login at instantiation but

150
00:11:39.493 --> 00:11:44.782
with this one, instead what we'll
do is we'll check if it's false,

151
00:11:44.782 --> 00:11:48.388
and we will head over to
the login page instead.

152
00:11:48.388 --> 00:11:52.910
And if you get here, we wanna actually
show you a little bit of a dashboard.

153
00:11:52.910 --> 00:11:58.267
So we're not gonna put too
much on this dashboard but

154
00:11:58.267 --> 00:12:05.081
what we can do is say each one,
wow, look at all this secret stuff,

155
00:12:05.081 --> 00:12:09.123
and underneath it we can show a button.

156
00:12:13.052 --> 00:12:18.033
Let's get that out of there,
that in there and

157
00:12:18.033 --> 00:12:20.729
this one we will logout.

158
00:12:24.607 --> 00:12:29.195
Okay, so this will be our dashboard.

159
00:12:29.195 --> 00:12:32.670
And so what should happen now
is if I try to go to login,

160
00:12:32.670 --> 00:12:35.472
it should bounce me back to the dashboard.

161
00:12:35.472 --> 00:12:37.605
But now if I log out, cookies gone.

162
00:12:37.605 --> 00:12:41.331
And I go to the login page if
I try to go to the dashboard,

163
00:12:41.331 --> 00:12:43.683
bounce back to the login, right?

164
00:12:43.683 --> 00:12:46.779
So, we've got a pretty
solid experience here of

165
00:12:46.779 --> 00:12:49.356
going around to these different pages.

166
00:12:49.356 --> 00:12:55.431
And we could wrap this in a kind
of require off sort of thing,

167
00:12:55.431 --> 00:13:01.143
and then us multiple pages
with a require auth component

168
00:13:01.143 --> 00:13:06.142
around them that just did
this navigation form.

169
00:13:06.142 --> 00:13:10.858
This is the basic pattern that we're
looking at when we get into authenticated

170
00:13:10.858 --> 00:13:11.434
routes.

171
00:13:11.434 --> 00:13:16.607
And the main difference is that when we
check this off, the logic that we run in

172
00:13:16.607 --> 00:13:21.800
this function, this is the logic that
would need to be based on your service.

173
00:13:21.800 --> 00:13:26.338
So, whatever service you're using,
if you're using a JSON web token,

174
00:13:26.338 --> 00:13:31.095
you would send that as a header and then
you would need to validate that against

175
00:13:31.095 --> 00:13:34.115
whatever service you're using and
manage off.

176
00:13:34.115 --> 00:13:35.657
Or if you're using cookies,

177
00:13:35.657 --> 00:13:39.554
you would need to make sure that whatever
details you needed to set are set.

178
00:13:39.554 --> 00:13:41.250
So that somebody can't spoof it,

179
00:13:41.250 --> 00:13:45.170
there are things that definitely need
to be considered about authentication.

180
00:13:45.170 --> 00:13:50.628
But the mechanics of it are pretty
similar, everywhere that you'll go,

181
00:13:50.628 --> 00:13:54.688
you need some kind of way to
validate the information.

182
00:13:54.688 --> 00:13:57.623
Usually that means calling
out to an off-service, and

183
00:13:57.623 --> 00:14:01.369
once you get that confirmation or
a signal that it's not a valid login,

184
00:14:01.369 --> 00:14:04.003
you can either bounce
somebody to the login page.

185
00:14:04.003 --> 00:14:08.350
Or you bounce them to where they're
supposed to go and just send back this,

186
00:14:08.350 --> 00:14:10.910
yeah I am logged in or
you're not logged in.

187
00:14:10.910 --> 00:14:14.291
Then the app can kinda
handle the rest of that.

188
00:14:14.291 --> 00:14:16.447
And honestly,
we could make this even more,

189
00:14:16.447 --> 00:14:18.792
you could send a header
that would be a redirect.

190
00:14:18.792 --> 00:14:21.104
So, after somebody hits this function,

191
00:14:21.104 --> 00:14:23.620
they get redirected to
where they should be.

192
00:14:23.620 --> 00:14:29.290
There's a lot of stuff that you can do,
and there's no hard and fast rule here.

193
00:14:29.290 --> 00:14:32.230
But ultimately, it comes down to a pretty

194
00:14:32.230 --> 00:14:36.682
straight forward flow of saying
are they logged in, yes or no?

195
00:14:36.682 --> 00:14:40.608
And then on the client side, checking that
and showing people or not showing people

196
00:14:40.608 --> 00:14:43.768
things based on that yes or
no flag from your serverless function.

197
00:14:49.394 --> 00:14:52.403
And then the last thing that I
wanna do is what if somebody goes

198
00:14:52.403 --> 00:14:53.762
to just account directly.

199
00:14:55.444 --> 00:14:59.404
I don't wanna have to
build an account page, so

200
00:14:59.404 --> 00:15:03.566
why don't we just add
a client only route in here?

201
00:15:03.566 --> 00:15:08.263
And this is actually something
pretty cool about these

202
00:15:08.263 --> 00:15:12.867
client only routes is that,
this one's a catch all.

203
00:15:12.867 --> 00:15:18.469
There fallback, so if dashboard exists,
dashboard will still hit dashboard.js,

204
00:15:18.469 --> 00:15:21.503
but something that doesn't
exist the route or

205
00:15:21.503 --> 00:15:24.947
if I put in some nonsense,
will still hit this page.

206
00:15:24.947 --> 00:15:29.794
So I can,
in here I'll import everything as react.

207
00:15:29.794 --> 00:15:34.061
From react and
then we're gonna get navigate again.

208
00:15:35.385 --> 00:15:40.116
And then down here, we're gonna
do a very lightweight component

209
00:15:40.116 --> 00:15:42.961
that effectively is just a redirectS.

210
00:15:42.961 --> 00:15:47.687
So this is gonna redirect
to the account dashboard.

211
00:15:47.687 --> 00:15:52.654
And I could add some off detection and
stuff and redirect to the right place, but

212
00:15:52.654 --> 00:15:55.920
because that's already
there with the dashboard,

213
00:15:55.920 --> 00:15:59.278
I'm just gonna be okay with
an additional redirect.

214
00:16:01.669 --> 00:16:06.815
So, we want this to run as soon
as somebody hits the page,

215
00:16:06.815 --> 00:16:10.799
and we will navigate to account dashboard.

216
00:16:10.799 --> 00:16:13.100
And again, we wanna replace true so

217
00:16:13.100 --> 00:16:18.479
that they don't end up with a broken back
button, and we'll just return nothing.

218
00:16:18.479 --> 00:16:23.332
So, we want that navigation
to happen immediately and

219
00:16:23.332 --> 00:16:26.185
it will return null otherwise.

220
00:16:26.185 --> 00:16:31.864
So let's, where did I mess up?

221
00:16:31.864 --> 00:16:33.673
Need to call it a function
cuz it's function.

222
00:16:38.627 --> 00:16:40.735
There we go, okay, so now I can hit.

223
00:16:43.426 --> 00:16:46.894
Any route, will bounce me back
to where I need to be and.

224
00:16:49.377 --> 00:16:54.029
If I go to just the the plain account
route, takes me to the dashboard.

225
00:16:54.029 --> 00:16:59.776
And so then from there we can
go into the gatsby config and

226
00:16:59.776 --> 00:17:05.666
say, all right,
let's add the account to our nav here.

227
00:17:05.666 --> 00:17:09.383
And I don't have to go straight to login
or dashboard, I can just go to account and

228
00:17:09.383 --> 00:17:11.751
then when I hit that,
it takes me where I need to go.

229
00:17:11.751 --> 00:17:16.530
So I can log out, go to Books,
go to Login, right?

230
00:17:16.530 --> 00:17:22.812
And we have access to this whole kinda
nice experience with a protected route,

231
00:17:22.812 --> 00:17:26.914
we've got our list of books,
our list of authors.

232
00:17:26.914 --> 00:17:33.220
These are all pretty powerful,
pretty nice setups and good flows.

