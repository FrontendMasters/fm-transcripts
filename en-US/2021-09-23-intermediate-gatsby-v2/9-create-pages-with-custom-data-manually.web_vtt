WEBVTT

1
00:00:00.560 --> 00:00:04.574
The first thing that we're gonna do if we
want to get a book listing because we've

2
00:00:04.574 --> 00:00:08.665
got a cover, I want these two, I don't
want them to just be big spaghetti things.

3
00:00:08.665 --> 00:00:11.085
So I'm gonna add a little
bit of styling in here.

4
00:00:11.085 --> 00:00:14.052
And we're gonna create
a new folder called styles.

5
00:00:14.052 --> 00:00:16.489
And we'll call this book.module.css.

6
00:00:16.489 --> 00:00:21.504
We're using the CSS module approach
because it gives a scoped styles without

7
00:00:21.504 --> 00:00:26.455
having to install a CSS and JS library or
learn some specialty syntax of CSS.

8
00:00:26.455 --> 00:00:30.250
This is just plain old CSS, what you've
always used, we just get to trust that

9
00:00:30.250 --> 00:00:33.892
it's gonna be scoped because of the way
that CSS modules are implemented.

10
00:00:33.892 --> 00:00:37.865
So in here, I've got a listing,
that's gonna be the actual book wrapper.

11
00:00:37.865 --> 00:00:42.677
We want that to be display
flex because I want

12
00:00:42.677 --> 00:00:47.757
the cover and
the details to live side by side.

13
00:00:47.757 --> 00:00:54.325
And we'll give it a gap of 2 RAM and
a margin, bottom of 2 RAM.

14
00:00:54.325 --> 00:00:57.655
Then we want a heading.

15
00:00:57.655 --> 00:01:01.132
And the heading,
I'm just gonna set a margin of 0 because.

16
00:01:01.132 --> 00:01:04.472
Otherwise, what will happen is the heading
will get bumped below the book cover and

17
00:01:04.472 --> 00:01:07.443
it'll have this kind of weird offset,
and I don't wanna deal with that.

18
00:01:07.443 --> 00:01:09.082
So we're going to do that.

19
00:01:09.082 --> 00:01:14.133
And that's good enough all I want is for
this to just not be completely unstyled.

20
00:01:14.133 --> 00:01:18.880
So then I can create a template for
this because remember we do

21
00:01:18.880 --> 00:01:23.544
use that Create Page API,
we need to have a template to use.

22
00:01:23.544 --> 00:01:26.420
So I'm going to create
a template called book.

23
00:01:26.420 --> 00:01:33.431
And in this, we're going to import
everything as react from react.

24
00:01:33.431 --> 00:01:36.421
And then we're going to import graph QL.

25
00:01:36.421 --> 00:01:43.622
And my god, stop helping,
and link from Gatsby.

26
00:01:43.622 --> 00:01:47.391
And finally, we're gonna use that
Gatsby image, that we set up.

27
00:01:47.391 --> 00:01:51.995
So let's import Gatsby image, and

28
00:01:51.995 --> 00:01:57.216
get image, from a Gatsby plugin image.

29
00:01:59.593 --> 00:02:04.748
And then I am also going to import
those styles we just created so

30
00:02:04.748 --> 00:02:07.873
listing and heading from our styles.

31
00:02:07.873 --> 00:02:10.471
So let's get the book.module.css.

32
00:02:10.471 --> 00:02:12.786
And if we wanna get a query so

33
00:02:12.786 --> 00:02:17.838
this one is gonna be a query
because it includes the book ID.

34
00:02:17.838 --> 00:02:21.283
So we're gonna have our graph QL.

35
00:02:21.283 --> 00:02:25.863
And inside of that, let's go out here and
build a query for this.

36
00:02:25.863 --> 00:02:28.753
So this is running so
I can come over here.

37
00:02:28.753 --> 00:02:36.366
And I wanna get a book so let's close up
author and instead we're gonna get book.

38
00:02:36.366 --> 00:02:42.063
And I want my book to come in with
a I don't need the ISPI, do I?

39
00:02:42.063 --> 00:02:44.642
I want a name.

40
00:02:44.642 --> 00:02:50.271
I want the author name and slug.

41
00:02:50.271 --> 00:02:54.323
I want the series and the series order.

42
00:02:54.323 --> 00:02:56.711
And then I want the cover.

43
00:02:56.711 --> 00:02:59.232
And I want the cover to
have a child image sharp.

44
00:02:59.232 --> 00:03:03.233
And get the image data, and
we can set this to be whatever,

45
00:03:03.233 --> 00:03:07.162
am just gonna leave all
the defaults because it's fine.

46
00:03:07.162 --> 00:03:10.714
But I am gonna restrict the width to 150,

47
00:03:10.714 --> 00:03:15.133
because I want the cover to
be pretty small on the page.

48
00:03:15.133 --> 00:03:20.066
And so once we've set that
I can change this over to

49
00:03:20.066 --> 00:03:24.411
like say book will get
the ID equal string and

50
00:03:24.411 --> 00:03:28.772
then we would wanna
filter by the ID as well.

51
00:03:28.772 --> 00:03:35.052
So I have this and we wanna it to equal
and we'll say it's gonna equal the ID.

52
00:03:35.052 --> 00:03:36.442
So I can copy this.

53
00:03:36.442 --> 00:03:38.243
Bring it over here.

54
00:03:38.243 --> 00:03:43.140
In this is going to get us all
the details about our book.

55
00:03:43.140 --> 00:03:46.633
And while I'm thinking about it,
let's also get our biolink in here.

56
00:03:46.633 --> 00:03:51.382
So now I have my data we're going to
get the individual book that we're

57
00:03:51.382 --> 00:03:55.101
trying to query for, and
we can build our components.

58
00:03:55.101 --> 00:04:00.193
So export default function, book page,

59
00:04:00.193 --> 00:04:05.581
and we'll get data from
our graph qL query.

60
00:04:05.581 --> 00:04:09.600
Here, let's extract the book
out of that data so

61
00:04:09.600 --> 00:04:14.611
data.book, and then we can
return a whole bunch of markup.

62
00:04:14.611 --> 00:04:17.942
So let's get a fragment setup.

63
00:04:17.942 --> 00:04:21.701
And then we will set the class
name to be our listing,

64
00:04:21.701 --> 00:04:24.270
because that's the book listing.

65
00:04:24.270 --> 00:04:28.699
And then we are going to
use this Gatsby image and

66
00:04:28.699 --> 00:04:33.760
we'll pass in the image
of from the book cover.

67
00:04:33.760 --> 00:04:36.673
And so this get images a helper
from Gatsby to like dive in and

68
00:04:36.673 --> 00:04:40.464
get the image sharp and the Gatsby image
data and all the things that it needs so

69
00:04:40.464 --> 00:04:43.052
that we don't have to remember
to type all that out.

70
00:04:43.052 --> 00:04:44.493
And then we can set the alt.

71
00:04:44.493 --> 00:04:48.091
I'm going to cop out a little bit here and
call it the book name.

72
00:04:48.091 --> 00:04:53.264
Probably better alt text should be
written and we can set the h1 I'm

73
00:04:53.264 --> 00:04:59.901
going to set this needs
a class name Of heading.

74
00:04:59.901 --> 00:05:05.746
Otherwise, we'll get that awkward
top margin that I don't want and

75
00:05:05.746 --> 00:05:09.780
we'll use the book.name as our h1.

76
00:05:09.780 --> 00:05:13.202
Let's set the author here.

77
00:05:13.202 --> 00:05:16.014
And we're going to link to our author.

78
00:05:16.014 --> 00:05:23.182
So in here,
we're going to link to book.author.slug.

79
00:05:23.182 --> 00:05:27.232
And then we wanna do book.author.name,
right?

80
00:05:27.232 --> 00:05:32.938
So we're just going to using this data,
nothing too out of the ordinary here,

81
00:05:32.938 --> 00:05:36.401
and then we're going to
link through the book.

82
00:05:36.401 --> 00:05:40.641
Series, if there is a book series,
we're going to add some extra information.

83
00:05:40.641 --> 00:05:44.867
So if there's a book series,

84
00:05:44.867 --> 00:05:50.282
we'll say this is book series order.

85
00:05:50.282 --> 00:05:52.612
Don't need that dollar sign there.

86
00:05:52.612 --> 00:06:01.190
This is book series order
of the book series.

87
00:06:01.190 --> 00:06:06.193
And then finally below that,
we can just start closing things up.

88
00:06:06.193 --> 00:06:08.583
So let's close up that div.

89
00:06:08.583 --> 00:06:13.661
That one's already closed, okay?

90
00:06:13.661 --> 00:06:18.999
And then we'll take them back to a yet
to be created all books listing.

91
00:06:18.999 --> 00:06:25.522
And we'll just do the same thing, a left
arrow, HTML entity and back to all books.

92
00:06:25.522 --> 00:06:29.942
Okay, so now that this is created,
we can actually use it.

93
00:06:29.942 --> 00:06:32.462
So let's get into Gatsby node.

94
00:06:32.462 --> 00:06:35.391
And let's make this thing work.

95
00:06:35.391 --> 00:06:40.417
So what we're going to have to do is
pull in, in create pages I'm gonna start

96
00:06:40.417 --> 00:06:45.532
collapsing these so that it's a little
easier to see what we're working on.

97
00:06:45.532 --> 00:06:48.612
There's another helper that you get
in create pages called graph QL.

98
00:06:48.612 --> 00:06:53.055
And this allows us to make
a query against our graph QL data

99
00:06:53.055 --> 00:06:56.956
layer while we are inside
of the create pages API.

100
00:06:56.956 --> 00:07:00.643
So by doing this,
that means I can make a query down here.

101
00:07:00.643 --> 00:07:05.303
Now this is a little bit
unintuitive because in

102
00:07:05.303 --> 00:07:09.732
Gatsby components, it's a template tag.

103
00:07:09.732 --> 00:07:12.463
In create pages, it's a function.

104
00:07:12.463 --> 00:07:15.944
So it's otherwise exactly the same.

105
00:07:15.944 --> 00:07:20.793
We're just going to get query for
all of our books.

106
00:07:20.793 --> 00:07:23.982
And what I want in this is all book.

107
00:07:23.982 --> 00:07:25.212
We'll get the nodes.

108
00:07:25.212 --> 00:07:30.491
We will get the ID,
the series, and the name.

109
00:07:30.491 --> 00:07:35.814
All right, and I'm going to get the result
of that we need to await this or

110
00:07:35.814 --> 00:07:37.751
else would get a promise.

111
00:07:37.751 --> 00:07:40.111
And that means I need to make this async.

112
00:07:40.111 --> 00:07:44.398
This is a cool thing about Gatsby is
the API is can be run synchronously or

113
00:07:44.398 --> 00:07:45.552
asynchronously.

114
00:07:45.552 --> 00:07:49.664
So if you ever want to await something,
you can just toss that async in front of

115
00:07:49.664 --> 00:07:53.732
it, and you'll be able to do that instead
of having to do promise juggling.

116
00:07:53.732 --> 00:07:55.649
Once we've got that result,

117
00:07:55.649 --> 00:07:59.340
we can set up a little bit of
logic to determine our books.

118
00:07:59.340 --> 00:08:02.322
So let's get the books
themselves out of here.

119
00:08:02.322 --> 00:08:08.753
And that's going to be
result.data.allbook.nodes.

120
00:08:08.753 --> 00:08:11.315
Okay, then let's loop through them so
books for each.

121
00:08:11.315 --> 00:08:14.821
And we're using for each year because
we don't return anything, right?

122
00:08:14.821 --> 00:08:17.599
That's when you would use for each book.

123
00:08:21.762 --> 00:08:25.545
All right, so we've got our books,
we're looping and

124
00:08:25.545 --> 00:08:28.453
I'm gonna start by getting the book slug.

125
00:08:28.453 --> 00:08:32.263
So as you identified,
whoever asked that question,

126
00:08:32.263 --> 00:08:34.982
we do indeed need to make that easier.

127
00:08:34.982 --> 00:08:36.419
Why is that?

128
00:08:36.419 --> 00:08:37.493
That's not what we want at all.

129
00:08:37.493 --> 00:08:41.062
We just wants liquify like that.

130
00:08:41.062 --> 00:08:42.942
Let's put that up here.

131
00:08:42.942 --> 00:08:48.840
So we've got slugify and
we're going to slugify the book.name.

132
00:08:48.840 --> 00:08:51.959
And again, we're gonna go lower, true.

133
00:08:51.959 --> 00:08:57.423
And if we have a book series

134
00:09:00.222 --> 00:09:06.633
If it is, no,
then we can create a page and

135
00:09:06.633 --> 00:09:13.791
that will be a path,
it's gonna be book slug.

136
00:09:13.791 --> 00:09:19.482
We're going to set the component
to be required.resolve.

137
00:09:19.482 --> 00:09:23.466
And we'll do source templates, book.js.

138
00:09:23.466 --> 00:09:30.276
And for the context, we're going
to include the ID of book.id and

139
00:09:30.276 --> 00:09:36.973
that so that we can look up the book
when we get into that template.

140
00:09:36.973 --> 00:09:41.211
Remember we needed to have this variable.

141
00:09:41.211 --> 00:09:44.895
That's how we're getting it in
we pass that ID as context and

142
00:09:44.895 --> 00:09:47.367
now we actually have it available to us.

143
00:09:47.367 --> 00:09:51.726
So that will create our
pages in that place.

144
00:09:51.726 --> 00:09:59.358
Then, if we do have a series I'm
going to create a series slug,

145
00:09:59.358 --> 00:10:04.112
and we'll slugify the book.series.

146
00:10:04.112 --> 00:10:11.672
And again, we'll go lower through and
we can create the page.

147
00:10:11.672 --> 00:10:16.604
And I'm realizing now that
this is ripe for refactoring.

148
00:10:19.372 --> 00:10:24.811
So this one would go series slug.

149
00:10:24.811 --> 00:10:29.704
And then again, it's the template in
the book and again, it's the context ID.

150
00:10:29.704 --> 00:10:34.229
So I don't know why I didn't just
check for the slug or something, but

151
00:10:34.229 --> 00:10:39.078
it's okay, me being good at this type
of code is not the point of this work.

152
00:10:39.078 --> 00:10:45.216
[LAUGH] But we are going to get what
we need here of creating the page and

153
00:10:45.216 --> 00:10:50.389
we'll get the right template and
the books get created at the right slug,

154
00:10:50.389 --> 00:10:52.829
no matter what we are doing there.

155
00:10:52.829 --> 00:10:58.189
And I caught a typo before it broke
everything, what a great day?

156
00:10:58.189 --> 00:11:04.610
So let's stop and restart because
we just updated our Gatsby node.

157
00:11:05.931 --> 00:11:10.587
And that's going to take
us out to local host here.

158
00:11:10.587 --> 00:11:15.155
And what I want to be able to
do is to get to all of my books.

159
00:11:15.155 --> 00:11:17.532
So what should happen
is once this reloads,

160
00:11:17.532 --> 00:11:20.695
I should be able to click into
one of these books and see it.

161
00:11:20.695 --> 00:11:23.454
So let's see how that goes,
I'm going to click in.

162
00:11:27.451 --> 00:11:29.270
And we're just waiting for this to finish.

163
00:11:31.090 --> 00:11:32.653
There it goes.

164
00:11:32.653 --> 00:11:34.842
All right, we refresh.

165
00:11:34.842 --> 00:11:37.261
And there is our book.

166
00:11:37.261 --> 00:11:41.209
Okay, I can see something I screwed up.

167
00:11:41.209 --> 00:11:48.642
I needed to put all of this into a div so
that it floats properly.

168
00:11:48.642 --> 00:11:50.543
So let's do that.

169
00:11:50.543 --> 00:11:53.006
There we got that looks better,
that's more like what we want.

170
00:11:53.006 --> 00:11:56.436
So now we have the ability
to display our books.

171
00:11:56.436 --> 00:12:01.350
They're sort of styled so
that they look at least somewhat legible.

172
00:12:01.350 --> 00:12:06.792
And then we come back to this slash
books page, which is not yet created.

173
00:12:06.792 --> 00:12:09.160
So I'm going to create
one more page here and

174
00:12:09.160 --> 00:12:11.922
this one can just be a regular
old listing of books.

175
00:12:11.922 --> 00:12:15.563
So we're going to import
everything as react from react.

176
00:12:18.343 --> 00:12:24.265
We're going to import, graph qL and link.

177
00:12:24.265 --> 00:12:29.520
From Gatsby, we're gonna import slugify.

178
00:12:29.520 --> 00:12:33.332
I'm really, now that it's been pointed
out to me I'm feeling very foolish about

179
00:12:33.332 --> 00:12:35.336
having duplicated all this slugify work.

180
00:12:35.336 --> 00:12:40.567
And we're gonna do this as
a static query again so

181
00:12:40.567 --> 00:12:45.422
let's export default function books page.

182
00:12:45.422 --> 00:12:48.693
And let's get the useStaticQuery
in here again.

183
00:12:53.693 --> 00:12:58.403
So I'm gonna get data
out of useStaticQuery.

184
00:12:58.403 --> 00:13:03.079
That's gonna be our tag
to graphql template.

185
00:13:03.079 --> 00:13:07.142
And inside of it, I wanna get all books.

186
00:13:07.142 --> 00:13:11.891
So we're gonna run a query for
all book nodes and

187
00:13:11.891 --> 00:13:16.876
then inside I want the ID,
the name, the author,

188
00:13:16.876 --> 00:13:22.248
the name and slug of the author,
and the series name.

189
00:13:26.014 --> 00:13:27.392
And that's our graph QL query.

190
00:13:31.273 --> 00:13:32.692
Typos all over the place.

191
00:13:32.692 --> 00:13:35.563
Let's make that better.

192
00:13:35.563 --> 00:13:39.564
Okay, then down here I
can get the book out so

193
00:13:39.564 --> 00:13:46.822
let's get books equals data.allbook.nodes,
and then we can do our markup.

194
00:13:46.822 --> 00:13:51.865
So what I wanna do for this is again,
we just wrap it in a fragment.

195
00:13:51.865 --> 00:13:56.242
We will stand up a heading, says books.

196
00:13:56.242 --> 00:13:58.392
And then we'll list through our books.

197
00:13:58.392 --> 00:14:02.790
So we'll say book stop map book and for

198
00:14:02.790 --> 00:14:08.842
each of these we are going
to do a little bit of logic.

199
00:14:08.842 --> 00:14:14.413
And that logic is gonna
be to create a book slug.

200
00:14:14.413 --> 00:14:18.883
So again, we will slugify

201
00:14:18.883 --> 00:14:23.766
the book.name lower true.

202
00:14:23.766 --> 00:14:28.700
Then we're gonna do this whole thing
about generating the path again.

203
00:14:28.700 --> 00:14:31.714
So if book.series

204
00:14:33.912 --> 00:14:38.303
Then we wanna create the series slug.

205
00:14:38.303 --> 00:14:46.112
And that's gonna be slugify book.series,
lower true.

206
00:14:48.990 --> 00:14:53.893
And then we'll set

207
00:14:53.893 --> 00:14:59.103
the path to be book,

208
00:14:59.103 --> 00:15:05.846
series slug, book slug,

209
00:15:05.846 --> 00:15:11.056
or else we will set it

210
00:15:11.056 --> 00:15:18.419
to be path equals book slug.

211
00:15:18.419 --> 00:15:23.329
Okay, once we've got that,
we can return our actual markup

212
00:15:23.329 --> 00:15:28.261
which will be a list item with a key,
that'll be the book ID.

213
00:15:28.261 --> 00:15:33.402
And then we're gonna set
a link to the path and

214
00:15:33.402 --> 00:15:37.065
that's gonna be the book name.

215
00:15:39.353 --> 00:15:43.929
And then we also want to say by link to,

216
00:15:43.929 --> 00:15:47.370
and that's going to be too.

217
00:15:47.370 --> 00:15:52.580
We want to make this forces to the root
because the author slug isn't a path.

218
00:15:52.580 --> 00:15:56.660
It's just the author slug so
if we only put an author slug what

219
00:15:56.660 --> 00:16:00.031
would happen is it would
make the links relative.

220
00:16:00.031 --> 00:16:06.053
So we're going to link to the author's
page with book.author.name.

221
00:16:06.053 --> 00:16:10.644
And that reminds me that we
need to go book.author.slug.

222
00:16:10.644 --> 00:16:16.500
Okay, so you save all that and now,
assuming I did all this right,

223
00:16:16.500 --> 00:16:22.263
which I think we did, I should be
able to reload and get our books.

224
00:16:22.263 --> 00:16:24.703
Okay, so let's do a quick check.

225
00:16:24.703 --> 00:16:29.632
We're on the books page, I click into
a given book back to all books I go

226
00:16:29.632 --> 00:16:34.075
to an author page, I get a list
of their books go to all authors.

227
00:16:34.075 --> 00:16:34.822
And here we are.

228
00:16:34.822 --> 00:16:38.693
Okay, so we're authors nk jemisin,
click to a book.

229
00:16:38.693 --> 00:16:41.114
We get the book, we go back to all books.

230
00:16:41.114 --> 00:16:42.761
We get a list.

231
00:16:42.761 --> 00:16:44.966
Click to an author.

232
00:16:44.966 --> 00:16:45.841
This is wonderful.

233
00:16:45.841 --> 00:16:47.492
Look how great this is.

234
00:16:47.492 --> 00:16:49.360
We have built ourselves
a book club website.

