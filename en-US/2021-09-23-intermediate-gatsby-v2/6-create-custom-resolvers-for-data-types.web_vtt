WEBVTT

1
00:00:00.400 --> 00:00:04.973
What we've done thus far is we looked
at the beginnings of how to get

2
00:00:04.973 --> 00:00:09.954
custom data into Gatsby, our custom
pages into Gatsby, I should say and

3
00:00:09.954 --> 00:00:13.563
then we've we've dug into
getting custom data in.

4
00:00:13.563 --> 00:00:17.827
And we were able to get authors and
books into the data layer and

5
00:00:17.827 --> 00:00:20.725
create relationships between them.

6
00:00:20.725 --> 00:00:25.456
But I actually wanna take that a step
further where I want to extend

7
00:00:25.456 --> 00:00:30.186
this a little bit because right now,
if we go and look at our data,

8
00:00:30.186 --> 00:00:33.580
there's no way to purchase these books.

9
00:00:33.580 --> 00:00:39.364
So I can get, the ID,
I can get the series, series order, but

10
00:00:39.364 --> 00:00:44.940
there's no opportunity for
me to get, purchase the book.

11
00:00:44.940 --> 00:00:52.470
So we're going to extend this thing and
add the capability to buy it.

12
00:00:52.470 --> 00:00:55.730
So let's get into our Gatsby node again.

13
00:00:55.730 --> 00:00:59.463
And what we're gonna do now is I'm
just gonna head down to the bottom,

14
00:00:59.463 --> 00:01:03.090
we're gonna use a third API,
this API is called CreateResolvers.

15
00:01:04.460 --> 00:01:08.926
And a little bit of vocabulary here,
a resolver is a term in GraphQL for

16
00:01:08.926 --> 00:01:11.970
a function that returns data for
a given field.

17
00:01:11.970 --> 00:01:14.650
That's how the field resolves.

18
00:01:14.650 --> 00:01:19.750
So, if we want to have a custom field,
we need to provide a custom resolver for

19
00:01:19.750 --> 00:01:24.600
it, which is why we're going
to use CreateResolvers here.

20
00:01:24.600 --> 00:01:26.596
And Gatsby's smart enough to infer data so

21
00:01:26.596 --> 00:01:28.910
that we don't have to
also declare the type.

22
00:01:28.910 --> 00:01:33.777
We could, it wouldn't hurt anything but
it's gonna make our lives a little bit

23
00:01:33.777 --> 00:01:38.890
easier to have all this code in one place,
so I'm gonna pull in another helper.

24
00:01:38.890 --> 00:01:41.790
So CreateResolvers and
then CreateResolvers.

25
00:01:41.790 --> 00:01:43.141
All right, then,

26
00:01:43.141 --> 00:01:49.580
the way that we define resolvers is as
an object that loosely matches the schema.

27
00:01:49.580 --> 00:01:54.038
So, if our data type is book,
we add an object called book, and

28
00:01:54.038 --> 00:01:59.270
then any fields that we wanna add
in the book, we can add here.

29
00:01:59.270 --> 00:02:00.760
So I wanna create one called bio link.

30
00:02:02.760 --> 00:02:06.160
And the bio link for
this book is also an object.

31
00:02:06.160 --> 00:02:10.630
And inside of it, it's gonna have two
things, a type, and a resolve function.

32
00:02:12.910 --> 00:02:17.750
So this is the core setup
of a custom resolver.

33
00:02:17.750 --> 00:02:23.170
So let's start by just running this so
that we can see how it works.

34
00:02:23.170 --> 00:02:26.760
So we call CreateResolvers by
passing in these resolvers.

35
00:02:26.760 --> 00:02:31.964
I'm gonna make this a string and
I'm going to have it

36
00:02:31.964 --> 00:02:38.250
just return a string that says to do and
let's give this a shot.

37
00:02:38.250 --> 00:02:39.910
Let's see what happens
when we actually run this.

38
00:02:41.860 --> 00:02:43.150
So I'm running Netlify Dev.

39
00:02:44.620 --> 00:02:47.300
It's starting up the Gatsby
development server.

40
00:02:47.300 --> 00:02:51.249
And when we come out here and
refresh the page,

41
00:02:51.249 --> 00:02:55.905
we now have a bio link and
if I, so let's get the books,

42
00:02:55.905 --> 00:03:00.280
turn off the author,
though, how about that?

43
00:03:00.280 --> 00:03:04.360
Let's get just the name and the bio
link to make it a little bit easier.

44
00:03:05.720 --> 00:03:08.333
So we can see,
here's the title of the book and

45
00:03:08.333 --> 00:03:12.970
now we can see that our bio link is to do,
so we were able to add a new field.

46
00:03:12.970 --> 00:03:15.579
And now we can do
whatever we want in here.

47
00:03:15.579 --> 00:03:18.254
I wanna make this actually
return a link and

48
00:03:18.254 --> 00:03:22.190
the link that I wanna return
is gonna be to Pauwels books.

49
00:03:22.190 --> 00:03:30.200
So I have an ISBN and so Pauwels books
is a huge bookstore in Portland, Oregon.

50
00:03:31.240 --> 00:03:33.960
And I was looking around
to see how this works.

51
00:03:33.960 --> 00:03:37.240
And it turns out that if you search for
an ISBN, you will find it.

52
00:03:37.240 --> 00:03:42.667
So if I go into one of my books, and
I get the ISBN, I come back here and

53
00:03:42.667 --> 00:03:50.250
search, We have a URL that
results in finding the book.

54
00:03:50.250 --> 00:03:51.570
So this isn't perfect.

55
00:03:51.570 --> 00:03:52.700
There's probably a better way to do it.

56
00:03:52.700 --> 00:03:57.020
But this one doesn't require an API key
and it supports an independent bookstore.

57
00:03:57.020 --> 00:03:58.310
So I'm pretty happy about that.

58
00:03:58.310 --> 00:04:05.100
So let's grab this link here, and
I want to return this bio link and

59
00:04:05.100 --> 00:04:11.420
I'm, see does that hot reload here and
actually tried this.

60
00:04:11.420 --> 00:04:11.920
Let's see.

61
00:04:13.200 --> 00:04:16.840
It does not how we load, so
I'm not gonna restart the server.

62
00:04:16.840 --> 00:04:20.200
But as you can see this is close,
this would give us a bio link.

63
00:04:20.200 --> 00:04:22.650
But we've hard coded the ISBN.

64
00:04:22.650 --> 00:04:25.774
Fortunately, the resolver
is gonna get the node and

65
00:04:25.774 --> 00:04:30.030
pass it in as the first argument,
so we can call that source.

66
00:04:30.030 --> 00:04:34.233
And then if I convert this
to a template string,

67
00:04:34.233 --> 00:04:39.277
I can actually go right in here and
say source.ISBN, and

68
00:04:39.277 --> 00:04:46.100
now it should on resolution give us
a custom bio link for each book.

69
00:04:46.100 --> 00:04:51.010
So, we've been able to enrich our data
now, so let's restart this thing.

70
00:04:51.010 --> 00:04:52.120
See how it goes.

71
00:04:52.120 --> 00:04:54.860
All right, okay, so let's double
check that one of these works.

72
00:04:54.860 --> 00:04:59.713
So here's A Man Called Ove,
and if you click it takes

73
00:04:59.713 --> 00:05:04.560
you right to the Pauwel site and
there's the book.

74
00:05:04.560 --> 00:05:05.800
Okay, perfect.

75
00:05:05.800 --> 00:05:12.469
So, we now have enriched data and
our Gatsby site, pretty excellent.

76
00:05:12.469 --> 00:05:18.165
But we're not quite there yet because this
is a book club and I wanna be able to

77
00:05:18.165 --> 00:05:24.210
show a little bit more data, I wanna
be able to show the cover of the book.

78
00:05:24.210 --> 00:05:28.650
And for us to do that, we need to figure
out how to get the cover first and

79
00:05:28.650 --> 00:05:29.416
foremost.

80
00:05:29.416 --> 00:05:33.940
But we also then, it's gonna be remote.

81
00:05:33.940 --> 00:05:35.678
I wanna be able to bring
that into Gatsby and

82
00:05:35.678 --> 00:05:37.620
take advantage of Gatsby
image optimization.

