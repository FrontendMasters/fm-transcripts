WEBVTT

1
00:00:00.400 --> 00:00:05.559
What we've done thus far is we
looked at the the beginnings

2
00:00:05.559 --> 00:00:10.420
of how to get our custom pages
into Gatsby I should say.

3
00:00:10.420 --> 00:00:15.436
And then we've we've dug into getting
custom data in and And we were able to get

4
00:00:15.436 --> 00:00:20.725
authors and books into the data layer and
create relationships between them.

5
00:00:20.725 --> 00:00:25.505
But I actually wanna take that
a step further where I wanna extend

6
00:00:25.505 --> 00:00:30.371
this a little bit because right now,
if we go and look at our data,

7
00:00:30.371 --> 00:00:33.491
there's no way to purchase these books.

8
00:00:33.491 --> 00:00:39.026
So I can get the ID,
I can get the series series order,

9
00:00:39.026 --> 00:00:44.940
but there's no opportunity for
me to purchase the book.

10
00:00:44.940 --> 00:00:52.436
So we're going to extend this thing and
add the capability to buy it.

11
00:00:52.436 --> 00:00:55.760
So let's get into our Gatsby node again.

12
00:00:55.760 --> 00:00:58.651
And what we're gonna do now is I'm
just gonna head down to the bottom,

13
00:00:58.651 --> 00:00:59.884
we're gonna use a third API.

14
00:00:59.884 --> 00:01:03.090
This API is called create resolvers.

15
00:01:04.460 --> 00:01:08.927
And a little bit of vocabulary here,
a resolver is a term in graph qL for

16
00:01:08.927 --> 00:01:11.978
a function that returns data for
a given field.

17
00:01:11.978 --> 00:01:14.650
That's how the field resolves.

18
00:01:14.650 --> 00:01:20.083
So if we want to have a custom field,
we need to provide a custom resolver for

19
00:01:20.083 --> 00:01:24.502
it, which is why we're going
to use create resolvers here.

20
00:01:24.502 --> 00:01:26.483
And got to be smart
enough to infer data so

21
00:01:26.483 --> 00:01:28.910
that we don't have to
also declare the type.

22
00:01:28.910 --> 00:01:33.812
We could, it wouldn't hurt anything but
it's gonna make our lives a little bit

23
00:01:33.812 --> 00:01:38.807
easier to have all this code in one place,
so I'm gonna pull in a another helper.

24
00:01:38.807 --> 00:01:41.790
So create resolvers and
then create resolvers.

25
00:01:41.790 --> 00:01:46.100
All right, then,
the way that we define resolvers Is as

26
00:01:46.100 --> 00:01:49.504
an object that loosely matches the schema.

27
00:01:49.504 --> 00:01:53.914
So, if our data type is book,
we add an object called book and

28
00:01:53.914 --> 00:01:59.270
then any fields that we wanna add
in the book, we can add here.

29
00:01:59.270 --> 00:02:02.617
So I wanna create one called bio link.

30
00:02:02.617 --> 00:02:06.160
And the bio link for
this book is also an object.

31
00:02:06.160 --> 00:02:12.804
And inside of it, it's gonna have two
things a type and a resolve function.

32
00:02:12.804 --> 00:02:18.131
So this is the core setup
of a custom resolver.

33
00:02:18.131 --> 00:02:23.170
So let's start by just running this so
that we can see how it works.

34
00:02:23.170 --> 00:02:26.787
So we call create resolvers by
passing in these resolvers.

35
00:02:26.787 --> 00:02:30.135
I'm gonna make this a string and

36
00:02:30.135 --> 00:02:36.096
I'm going to have it just return
a string that says to do.

37
00:02:36.096 --> 00:02:38.250
And let's give this a shot.

38
00:02:38.250 --> 00:02:41.753
Let's see what happens
when we actually run this.

39
00:02:41.753 --> 00:02:43.150
So I'm running netlify Dev.

40
00:02:44.620 --> 00:02:47.189
It's starting up the Gatsby
development server.

41
00:02:47.189 --> 00:02:50.847
And when we come out here and
refresh the page, we now have a biolink

42
00:02:55.653 --> 00:02:58.260
Let's get the books.

43
00:02:58.260 --> 00:03:00.180
Turn off the author though,
how about that?

44
00:03:00.180 --> 00:03:04.360
Let's get just the name and the bio-link
to make it a little bit easier.

45
00:03:05.720 --> 00:03:08.259
So we can see here's
the title of the book.

46
00:03:08.259 --> 00:03:12.970
And now we can see that our bio-link is
to do so we were able to add a new field.

47
00:03:12.970 --> 00:03:16.531
And now we can do
whatever we want in here.

48
00:03:16.531 --> 00:03:18.744
I wanna make this actually
return a link and

49
00:03:18.744 --> 00:03:22.190
the link that I wanna return is
going to be to pauwels books.

50
00:03:22.190 --> 00:03:24.679
So, I have an ISDN.

51
00:03:24.679 --> 00:03:30.200
And so pals books is a huge
bookstore in Portland, Oregon.

52
00:03:31.240 --> 00:03:33.850
And I was looking around
to see how this works.

53
00:03:33.850 --> 00:03:37.240
And it turns out that if you search for
an ISDN you will find it.

54
00:03:37.240 --> 00:03:43.601
So if I go into one of my books, and I get
the ISBN and I come back here and search.

55
00:03:47.140 --> 00:03:50.274
We have a URL that results
in finding the book.

56
00:03:50.274 --> 00:03:52.736
So this isn't perfect,
there's probably a better way to do it.

57
00:03:52.736 --> 00:03:54.950
But this one doesn't require an API key.

58
00:03:54.950 --> 00:03:57.051
And it supports an independent bookstore.

59
00:03:57.051 --> 00:03:58.310
So I'm pretty happy about that.

60
00:03:58.310 --> 00:04:03.677
So let's grab this link here and
I want to return

61
00:04:03.677 --> 00:04:09.044
this bio-link and
does that hot reload here and

62
00:04:09.044 --> 00:04:13.084
actually tried this, let's see.

63
00:04:13.084 --> 00:04:16.840
It does not hot reload, so
I'm not gonna restart the server.

64
00:04:16.840 --> 00:04:20.180
But as you can see this is close
like this would give us a bio-link.

65
00:04:20.180 --> 00:04:22.650
But we've hard coded the ISBN.

66
00:04:22.650 --> 00:04:28.285
Fortunately, the resolver is gonna get the
node and pass it in as the first argument.

67
00:04:28.285 --> 00:04:30.030
So we can call that source.

68
00:04:30.030 --> 00:04:34.073
And then if I convert this
to a template string,

69
00:04:34.073 --> 00:04:38.634
I can actually go right in here and
say source.ispn.

70
00:04:38.634 --> 00:04:46.100
And now it should on resolution give
us a custom bio-link for each book.

71
00:04:46.100 --> 00:04:48.767
So we've been able to enrich our data now.

72
00:04:48.767 --> 00:04:51.010
So let's restart this thing.

73
00:04:51.010 --> 00:04:52.718
See how it goes all right.

74
00:04:52.718 --> 00:04:54.860
Okay, so let's double check
that one of these works.

75
00:04:54.860 --> 00:05:00.227
So here's a man called of.

76
00:05:00.227 --> 00:05:04.560
And if you click, it takes you right to
the Powell site and there's the book.

77
00:05:04.560 --> 00:05:05.732
Okay, perfect.

78
00:05:05.732 --> 00:05:12.075
So we now have enriched data and
our Gatsby site pretty excellent.

79
00:05:12.075 --> 00:05:18.063
But we're not quite there yet because this
is a book club and I wanna be able to

80
00:05:18.063 --> 00:05:24.210
show a little bit more data I wanna be
able to show the cover of the book.

81
00:05:24.210 --> 00:05:25.822
And for us to do that,

82
00:05:25.822 --> 00:05:30.397
we need to figure out how to get
the cover first and foremost.

83
00:05:30.397 --> 00:05:33.798
But it's gonna be remote.

84
00:05:33.798 --> 00:05:35.652
I wanna be able to bring
that into Gatsby and

85
00:05:35.652 --> 00:05:37.620
take advantage of Gatsby
image optimization

