WEBVTT

1
00:00:00.000 --> 00:00:01.790
&gt;&gt; Scott Moss: So yeah, once you
check that out, let me go ahead and

2
00:00:01.790 --> 00:00:03.436
check out here,
you should have less than one.

3
00:00:03.436 --> 00:00:05.186
And then if you take a look around,
first of all,

4
00:00:05.186 --> 00:00:06.630
take a look around the app if you want.

5
00:00:06.630 --> 00:00:09.757
Obviously, there's a lot of stuff
here that's gonna be filled out,

6
00:00:09.757 --> 00:00:12.896
that way we can progress through
the course at a reasonable pace here.

7
00:00:12.896 --> 00:00:20.048
But if you take a look inside of source
index.js, you'll see some stuff here.

8
00:00:22.853 --> 00:00:26.434
&gt;&gt; Scott Moss: Basically, what we're doing
here is, and this is something I didn't do

9
00:00:26.434 --> 00:00:29.343
on v1, is that we're gonna
build this app using Webpack.

10
00:00:29.343 --> 00:00:32.317
I know people are thinking,
why we using Webpack on the server side?

11
00:00:32.317 --> 00:00:34.310
Trust me,
we're gonna build this app with Webpack.

12
00:00:34.310 --> 00:00:38.310
One, that's gonna allow everybody to use
the latest features, like imports, ES6

13
00:00:38.310 --> 00:00:41.694
imports, and all the latest and greatest
if you're in a different version of node.

14
00:00:41.694 --> 00:00:45.520
And two, we can use hot module reloading
on the server side, which is pretty cool,

15
00:00:45.520 --> 00:00:47.870
which is a way better approach
than using something like Nodemon,

16
00:00:47.870 --> 00:00:50.770
which just refreshes the server and
doesn't keep state.

17
00:00:50.770 --> 00:00:53.080
So this allows us to
keep state in the app.

18
00:00:53.080 --> 00:00:54.640
If you have a cache or
something like that,

19
00:00:54.640 --> 00:00:59.680
it'll just replace the module at runtime
if it's there, so we're gonna use that.

20
00:00:59.680 --> 00:01:02.130
So you can ignore all this stuff here,

21
00:01:02.130 --> 00:01:07.390
we can talk more about how to set
up module hot reloading later.

22
00:01:07.390 --> 00:01:14.670
But basically, what your objective is in
the index.js, I want to be able to, this

23
00:01:14.670 --> 00:01:20.040
is where I wanna start my server, so this
app right here, it's gonna be the server.

24
00:01:20.040 --> 00:01:23.554
This is gonna be the express
app that I showed here,

25
00:01:23.554 --> 00:01:28.727
this is the express app, and
you see I'm listening to it on port 3000.

26
00:01:28.727 --> 00:01:32.950
Inside of here, I wanna go ahead and
actually start that server.

27
00:01:32.950 --> 00:01:35.621
This app is gonna be that express app,
so that's what I wanna do.

28
00:01:35.621 --> 00:01:39.025
And then inside of server.js,
we actually need to make app something.

29
00:01:39.025 --> 00:01:42.374
Right now it's just null,
it's literally nothing, so

30
00:01:42.374 --> 00:01:44.337
we need to make it an express app.

31
00:01:44.337 --> 00:01:46.680
So if you look at the example
that I have here,

32
00:01:46.680 --> 00:01:49.033
you can see how one might
go about doing that.

33
00:01:49.033 --> 00:01:52.409
But basically,
app needs to be an express app.

34
00:01:52.409 --> 00:01:56.012
Go ahead and set up a Hello World Route
on index that does something so

35
00:01:56.012 --> 00:01:57.607
you can at least check it out.

36
00:02:01.948 --> 00:02:05.619
&gt;&gt; Scott Moss: And then you need to go
ahead and listen to that server inside of

37
00:02:05.619 --> 00:02:10.433
index, somewhere here, whatever port
you want, whatever port you have open.

38
00:02:10.433 --> 00:02:15.257
There are some ports you can't use, but
you'll figure it out if you type it in,

39
00:02:15.257 --> 00:02:17.646
[LAUGH] and that's all this example is.

40
00:02:17.646 --> 00:02:23.745
So what we're gonna do is,
what time is it now, it's almost 10,

41
00:02:23.745 --> 00:02:28.667
so let's say,
this one's not gonna take too long, so

42
00:02:28.667 --> 00:02:31.684
let's come back at 10:15.

43
00:02:31.684 --> 00:02:36.245
And then we'll go over it,
cool, I'll leave this up here.

