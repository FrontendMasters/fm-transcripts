WEBVTT

1
00:00:02.443 --> 00:00:04.060
&gt;&gt; Scott Moss: So GraphQL and Express.

2
00:00:05.580 --> 00:00:06.911
Why do we need both of them, right?

3
00:00:06.911 --> 00:00:08.138
Did I just show you some crazy stuff?

4
00:00:08.138 --> 00:00:10.440
Why do we need Express anymore?

5
00:00:10.440 --> 00:00:13.180
We still need Express,
GraphQL doesn't do everything.

6
00:00:13.180 --> 00:00:16.710
GraphQL is not a server framework and,
in fact, it's not a framework at all.

7
00:00:16.710 --> 00:00:20.360
It's just a Korean language, so
we still need some infrastructure here.

8
00:00:20.360 --> 00:00:24.127
So let's talk about some benefits knowing
that now we're all Express experts and

9
00:00:24.127 --> 00:00:25.390
we're learning GraphQL.

10
00:00:25.390 --> 00:00:28.267
Let's talk about some benefits here
that we need to use them both together.

11
00:00:28.267 --> 00:00:31.640
So with GraphQL,
we could continue to use our REST routes.

12
00:00:31.640 --> 00:00:32.730
You could totally do that.

13
00:00:32.730 --> 00:00:34.310
And like I said, there are so
many ways to do that.

14
00:00:34.310 --> 00:00:38.510
You could use them side-by-side,
on top of each other, and it's in so

15
00:00:38.510 --> 00:00:39.780
many ways you can actually use it.

16
00:00:39.780 --> 00:00:43.540
It depends on your business needs that
the quick answer is however you want.

17
00:00:43.540 --> 00:00:48.690
You can do whatever you want because
GraphQL does not replace res although

18
00:00:48.690 --> 00:00:50.740
it will eventually.

19
00:00:50.740 --> 00:00:52.350
It doesn't have to replace it.

20
00:00:52.350 --> 00:00:55.480
It's more of a layer that sits
in front of it if you choose.

21
00:00:55.480 --> 00:00:57.990
GraphQL is something that site
in front of your API, and

22
00:00:57.990 --> 00:01:00.050
then it doesn't care
about what your API is.

23
00:01:00.050 --> 00:01:03.790
It doesn't make any inferences about what
your API is, what your data layer is.

24
00:01:03.790 --> 00:01:06.580
It's just like, I'm gonna check
the query before it comes in,

25
00:01:06.580 --> 00:01:09.490
and I'm going to check
the data that you give me.

26
00:01:09.490 --> 00:01:11.230
If it doesn't match, I'm gonna complain.

27
00:01:11.230 --> 00:01:12.200
That's GraphQL.

28
00:01:12.200 --> 00:01:14.070
So it doesn't care where it's coming from.

29
00:01:14.070 --> 00:01:16.540
Doesn't matter How
you're getting the data.

30
00:01:16.540 --> 00:01:17.140
That's it.
So

31
00:01:17.140 --> 00:01:18.860
that means you can do whatever you want.

32
00:01:18.860 --> 00:01:22.272
Underneath it, before it,
after it, it doesn't matter.

33
00:01:23.436 --> 00:01:25.950
&gt;&gt; Scott Moss: You could
benefit from middleware here.

34
00:01:25.950 --> 00:01:30.660
So if you wanna setup some global
middleware for your entire GraphQL API,

35
00:01:30.660 --> 00:01:33.830
you can still benefit from
that middleware there.

36
00:01:33.830 --> 00:01:38.090
But there are Better
approaches to doing things for

37
00:01:38.090 --> 00:01:41.240
your GraphQL resolvers then
setting up global middleware, or

38
00:01:41.240 --> 00:01:44.760
maybe you just want some global stuff,
and in our case we probably will, but

39
00:01:44.760 --> 00:01:48.430
then there's like protecting like isolated
resolvers which is a different approach

40
00:01:48.430 --> 00:01:52.390
than global middleware, but you could
still benefit from it it's very very easy

41
00:01:52.390 --> 00:01:55.910
setup with GraphQL because I said
yesterday Express is the go-to framework

42
00:01:55.910 --> 00:01:59.530
and there's pretty much a plugin,
everybody makes a plugin for Express So

43
00:01:59.530 --> 00:02:03.950
you can be assured that there's probably a
plug in Express with GraphQL and there is.

44
00:02:03.950 --> 00:02:06.320
There's so many of them.

45
00:02:06.320 --> 00:02:10.470
You benefit from error handling with
Express so GraphQL depending on what

46
00:02:10.470 --> 00:02:16.090
server framework you use has its own error
handling built in but you can also benefit

47
00:02:16.090 --> 00:02:19.390
from the error handling that you have with
Express, kind of like we made yesterday,

48
00:02:19.390 --> 00:02:21.240
where the arrows bubble up and
they do stuff like that.

49
00:02:21.240 --> 00:02:22.760
You can still benefit from that.

50
00:02:22.760 --> 00:02:23.680
Which is really cool.

51
00:02:23.680 --> 00:02:25.800
And then you could also
reuse the Express libraries,

52
00:02:25.800 --> 00:02:28.250
which is the biggest benefit
of using them both together.

53
00:02:28.250 --> 00:02:31.690
Express does a good job of packaging
the requests that comes in,

54
00:02:31.690 --> 00:02:33.160
it gives you all the different
information about it.

55
00:02:33.160 --> 00:02:36.590
The path, the query string,
all the headers,

56
00:02:36.590 --> 00:02:38.460
it gives you access to
all that cool stuff.

57
00:02:38.460 --> 00:02:42.640
We still want that in GraphQL, we still
want to use that inside our resolvers.

58
00:02:42.640 --> 00:02:45.790
So I will say that's the biggest benefit
of using GraphQL with Express and

59
00:02:45.790 --> 00:02:48.470
is that we can benefit from those
libraries that Express gives us

60
00:02:48.470 --> 00:02:50.070
access to instead of our controllers.

61
00:02:50.070 --> 00:02:52.360
That request object is like powerful.

62
00:02:52.360 --> 00:02:55.701
And we want to be able to use that
instead of GraphQL resolvers.

