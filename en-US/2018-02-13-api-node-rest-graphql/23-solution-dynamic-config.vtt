WEBVTT

1
00:00:02.401 --> 00:00:03.870
&gt;&gt; Scott Moss: All right, welcome back.

2
00:00:03.870 --> 00:00:08.280
So I hope everyone had fun making their
configuration driven application.

3
00:00:09.430 --> 00:00:13.170
Either taking inspiration from what I did,
using what I did or creating your own.

4
00:00:13.170 --> 00:00:15.930
At the end of the day,
there's really no wrong answer.

5
00:00:15.930 --> 00:00:18.950
You just wanna make sure that you're
able to change your configurations.

6
00:00:18.950 --> 00:00:22.670
So things like secrets, URLs,
pretty much anything that needs to change,

7
00:00:22.670 --> 00:00:24.340
depending on where you are.

8
00:00:24.340 --> 00:00:25.480
You wanna make that dynamic.

9
00:00:25.480 --> 00:00:29.100
And the best way to do that service
side is with environment variables.

10
00:00:29.100 --> 00:00:30.990
So we gotta walk through
pretty much how I did it.

11
00:00:32.110 --> 00:00:34.158
So I'm curious,
anybody do something different?

12
00:00:34.158 --> 00:00:39.290
Slightly different, no?

13
00:00:39.290 --> 00:00:43.160
Yeah, I mean the only other way I could
think of doing something like this is,

14
00:00:43.160 --> 00:00:45.430
you can do a dynamic require, right.

15
00:00:45.430 --> 00:00:47.960
So this name right here is dynamic.

16
00:00:47.960 --> 00:00:50.920
But I don't recommend doing that.

17
00:00:50.920 --> 00:00:55.470
Then, we can do some pretty cool
things with webpack as well but

18
00:00:55.470 --> 00:00:56.100
you don't have to.

19
00:00:56.100 --> 00:00:59.190
I say this is probably the safest
way that you can do it,

20
00:00:59.190 --> 00:01:03.300
and then if you wanna load in secrets
there is a package called .env

21
00:01:03.300 --> 00:01:08.350
that you can use locally to,
you can add a .env file to your repo.

22
00:01:08.350 --> 00:01:11.351
And then, probably during development,
maybe testing,

23
00:01:11.351 --> 00:01:14.834
you'll load up those environment
variables in your environment and

24
00:01:14.834 --> 00:01:18.991
then you'll have access to them, that way
you'll never even do stuff like this.

25
00:01:18.991 --> 00:01:22.434
This is all inside of a file, and then
just make sure you don't commit that file

26
00:01:22.434 --> 00:01:26.041
to git.
&gt;&gt; Scott Moss: Any questions on

27
00:01:26.041 --> 00:01:27.560
configuration development.

28
00:01:27.560 --> 00:01:28.860
Why we needed?

29
00:01:28.860 --> 00:01:29.950
Why it's important?

30
00:01:29.950 --> 00:01:30.770
Why you should have it?

31
00:01:30.770 --> 00:01:31.670
Yes?
&gt;&gt; Speaker 2: What

32
00:01:31.670 --> 00:01:34.330
is a good place to keep your secrets?
&gt;&gt; Scott Moss: Yeah, so

33
00:01:34.330 --> 00:01:37.140
a good place to keep your secrets is,
so let's say, let's take this out.

34
00:01:37.140 --> 00:01:40.690
Let's say we were doing
something with stripe.

35
00:01:40.690 --> 00:01:42.110
All right, everybody uses stripe, right?

36
00:01:42.110 --> 00:01:46.617
So, let's say we were doing that and
we were like, you know,

37
00:01:46.617 --> 00:01:48.711
new stripe or stripe equals.

38
00:01:48.711 --> 00:01:53.710
So new stripe thing and we had to pass
in some secrets right here, right.

39
00:01:53.710 --> 00:01:55.008
To this object to this new stripe.

40
00:01:55.008 --> 00:01:58.240
I'll tell you what you don't do and

41
00:01:58.240 --> 00:02:00.190
then we'll eventually get
to what we should be doing.

42
00:02:00.190 --> 00:02:03.110
So let's say we need to
put the secret right here.

43
00:02:03.110 --> 00:02:08.690
You're not gonna put it right here,
because it's in plain sight.

44
00:02:08.690 --> 00:02:11.510
You commit this to GitHub now
your secret is there, right?

45
00:02:11.510 --> 00:02:14.460
Even if you got a private repo it's
still somewhere on the Internet, right?

46
00:02:14.460 --> 00:02:15.660
So you're not gonna put it there.

47
00:02:15.660 --> 00:02:20.640
So the next thing you might say is,
well, I'll put it on my config, right?

48
00:02:20.640 --> 00:02:23.860
So you'll have config.stripeseeker.

49
00:02:23.860 --> 00:02:27.070
Okay, that's cool but let's see how
you actually put that on your config.

50
00:02:27.070 --> 00:02:28.149
So let's go down to config.

51
00:02:29.160 --> 00:02:32.727
So you definitely want this to be config
driven, so then you go down to you config

52
00:02:32.727 --> 00:02:36.308
and you're like, cool let me put my
start in here, and my hard in here.

53
00:02:36.308 --> 00:02:38.288
That's the same thing it's
still in plain sight, so

54
00:02:38.288 --> 00:02:39.703
you definitely don't wanna do that.

55
00:02:39.703 --> 00:02:43.686
So what you do instead is you
using environment variable

56
00:02:43.686 --> 00:02:48.390
process.env.STRIPE_KEY or whatever, right?

57
00:02:48.390 --> 00:02:51.590
So you have that, and
then what you would do is you would make

58
00:02:51.590 --> 00:02:57.040
a .env file locally right here.

59
00:02:57.040 --> 00:02:58.750
Right here make a .env file.

60
00:02:58.750 --> 00:03:02.310
And you'll get that environment variable,
which was called stripe key like this.

61
00:03:03.920 --> 00:03:04.620
You'll do that.

62
00:03:04.620 --> 00:03:06.128
And you'll give it its key value or

63
00:03:06.128 --> 00:03:10.203
whatever it is.
&gt;&gt; Scott Moss: And

64
00:03:10.203 --> 00:03:11.490
then just save this file.

65
00:03:11.490 --> 00:03:13.500
But then you don't check
this file in the GitHub.

66
00:03:13.500 --> 00:03:18.400
You put it in gitignore, you just don't
put it in GitHub, it's only local, right?

67
00:03:18.400 --> 00:03:23.568
And then you use a package called .env,

68
00:03:23.568 --> 00:03:28.510
it's called .env right here.

69
00:03:28.510 --> 00:03:33.724
Let me make this bigger.
&gt;&gt; Scott Moss: .env basically allows

70
00:03:33.724 --> 00:03:39.268
you to, it'll read the .env file on the
root of your repo and it will take every

71
00:03:39.268 --> 00:03:45.100
environment available in there and
load it into your environment for you.

72
00:03:45.100 --> 00:03:46.520
So you only need this for development.

73
00:03:46.520 --> 00:03:49.430
So you'll be like, if it's development,
or if it's testing.

74
00:03:49.430 --> 00:03:51.610
Let me go ahead and
load up this environment file, and

75
00:03:51.610 --> 00:03:52.380
it'll load it up for you.

76
00:03:52.380 --> 00:03:54.000
So that's what you would do locally.

77
00:03:54.000 --> 00:03:57.850
And then production, you use your platform
to inject your environment variables.

78
00:03:57.850 --> 00:03:59.100
You don't need this file.

79
00:03:59.100 --> 00:04:00.550
So that's why don't need
to check it into GitHub.

80
00:04:00.550 --> 00:04:04.500
Because in production you would
just go in the back end of Heroku,

81
00:04:04.500 --> 00:04:08.135
AWS, Digital Ocean, whatever you're doing,
and you would put them in there, right?

82
00:04:09.690 --> 00:04:11.290
So those are the places for a birevel so

83
00:04:11.290 --> 00:04:15.710
that means like that means summon
your readme you put something like.

84
00:04:15.710 --> 00:04:18.440
You would tell basically you
would do is to practice this.

85
00:04:18.440 --> 00:04:23.780
You would come in here, because the .env
file is not gonna detect in GitHub, you'd

86
00:04:23.780 --> 00:04:29.540
make a new file called .env like, stat
sample or something like that, or example.

87
00:04:29.540 --> 00:04:33.713
And then you come in here and
you put the keys of all

88
00:04:33.713 --> 00:04:37.210
the env variables that someone
would need to run this locally.

89
00:04:37.210 --> 00:04:41.800
So you're like, hey, and
then you'd be like, get it from Sarah.

90
00:04:41.800 --> 00:04:43.870
And then you would put
all that stuff here.

91
00:04:43.870 --> 00:04:47.370
And then what they would do is, they
will come in here and then you read me.

92
00:04:47.370 --> 00:04:52.530
You like, hey, there's a .env,
.simple for each key in there.

93
00:04:52.530 --> 00:04:55.180
You can read where you need
to go get that key from.

94
00:04:55.180 --> 00:04:59.970
Your data team uses this like, vault where
you store your secrets or something.

95
00:04:59.970 --> 00:05:01.970
Wherever that is,
you would get it from there.

96
00:05:01.970 --> 00:05:04.470
You would make a .env file and
put them in there.

97
00:05:04.470 --> 00:05:07.650
This is an example file
of what keys you need.

98
00:05:07.650 --> 00:05:08.890
Or we could just put them in the read me.

99
00:05:08.890 --> 00:05:11.552
But basically somewhere in
your repo you need to say,

100
00:05:11.552 --> 00:05:13.244
these are the keys that you need.

101
00:05:13.244 --> 00:05:17.440
Go get the values from our place where we
store our values, wherever that is, and

102
00:05:17.440 --> 00:05:21.731
then they will just use that and
then everybody has their own local.env.

103
00:05:21.731 --> 00:05:25.910
.env never gets checked in but
the env sample does.

104
00:05:25.910 --> 00:05:27.880
Does that make sense?
&gt;&gt; Speaker 2: Because I was wondering

105
00:05:27.880 --> 00:05:32.200
where do you keep all
the secrets maybe online?

106
00:05:32.200 --> 00:05:36.510
Who is the bearer of the secrets?
&gt;&gt; Scott Moss: I see what you're saying.

107
00:05:36.510 --> 00:05:38.990
Like I said,
it depends on your platform, right?

108
00:05:40.690 --> 00:05:43.970
If you're talking about keeping
the secrets for production,

109
00:05:43.970 --> 00:05:47.620
you literally just put them in like,
let me,

110
00:05:47.620 --> 00:05:51.730
if I can just show a quick
example without showing some.

111
00:05:51.730 --> 00:05:56.640
Have you ever deployed on AWS or Heroku?

112
00:05:56.640 --> 00:05:57.460
Heroku, so

113
00:05:57.460 --> 00:05:59.910
Heroku you can go to the settings,
you just put them in right there.

114
00:06:01.200 --> 00:06:02.900
Have you ever done that before?

115
00:06:02.900 --> 00:06:05.010
Yeah, so whatever your secrets
are you'll put them in there.

116
00:06:05.010 --> 00:06:08.380
But if you're just saying where do you
store those, so you can remember them.

117
00:06:08.380 --> 00:06:09.340
That's up to your team.

118
00:06:09.340 --> 00:06:13.400
Your team could use something like,
man, there's so

119
00:06:13.400 --> 00:06:16.880
many secret password things out there.

120
00:06:16.880 --> 00:06:19.020
Basically, use some type
of encrypted vault.

121
00:06:19.020 --> 00:06:22.540
I can't think of one off the top of
my head cuz I don't use them anymore.

122
00:06:22.540 --> 00:06:26.430
But, cuz most of the secrets we have are
generated from a third party because most

123
00:06:26.430 --> 00:06:30.290
of our secrets tie into like, this is
your secret for this API key like Stripe.

124
00:06:30.290 --> 00:06:32.010
Or here's your AWS secret, and

125
00:06:32.010 --> 00:06:36.350
we keep that in like a CSV file somewhere
locally, or something like that.

126
00:06:36.350 --> 00:06:38.880
So most of the secrets we have
are not generated by us, so

127
00:06:38.880 --> 00:06:40.720
we don't need to save them somewhere.

128
00:06:40.720 --> 00:06:42.500
But they're usually generated
from third party, and

129
00:06:42.500 --> 00:06:45.400
we just go to that third party's app and
copy from the settings.

130
00:06:45.400 --> 00:06:46.470
So it's created there.

131
00:06:46.470 --> 00:06:51.460
But yeah, there are secret sharing apps,
I don't know why I can't think of one

132
00:06:51.460 --> 00:06:54.684
right now, there's so many of them that
you can use and they all cost money.

133
00:06:54.684 --> 00:06:56.910
Last pass is one of them,
they do passwords.

134
00:06:56.910 --> 00:06:58.850
You can also do secret stuff.

135
00:06:58.850 --> 00:07:03.440
There's also 1Password.

136
00:07:05.290 --> 00:07:06.120
1Password is one.

137
00:07:06.120 --> 00:07:09.820
Yeah, you can do 1Password,
pretty much anything like this,

138
00:07:09.820 --> 00:07:13.530
allows you to store your secrets and
share them across your team.

139
00:07:13.530 --> 00:07:14.370
So however you wanna do it.

140
00:07:14.370 --> 00:07:16.050
You can throw them in
a Firebase if you want like,

141
00:07:16.050 --> 00:07:19.910
put them in an adjacent file on S3,
whatever you wanna do.

142
00:07:19.910 --> 00:07:20.410
Good question.

