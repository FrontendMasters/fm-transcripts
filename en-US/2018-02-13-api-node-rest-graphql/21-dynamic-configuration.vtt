WEBVTT

1
00:00:00.040 --> 00:00:01.390
&gt;&gt; Scott Moss: A config driven app.

2
00:00:01.390 --> 00:00:05.830
Basically in order to make
this production ready and

3
00:00:05.830 --> 00:00:09.610
easy to work with there's some things
we just don't wanna hard code in and

4
00:00:09.610 --> 00:00:13.540
we want to change the values depending
on what environment we're in.

5
00:00:13.540 --> 00:00:17.580
So just like any service side framework or
language you would use,

6
00:00:17.580 --> 00:00:19.950
you would have access to
environment variables.

7
00:00:19.950 --> 00:00:23.519
Who here doesn't know what
environment variables are?

8
00:00:23.519 --> 00:00:28.255
All right, so your code is executed
in some environment on some computer,

9
00:00:28.255 --> 00:00:32.401
right, so Linux computer,
in my case this computer right here.

10
00:00:32.401 --> 00:00:35.501
We can inject variables from that
environment that's executed in our code

11
00:00:35.501 --> 00:00:38.270
into our applications, and
we can reference those in variables.

12
00:00:38.270 --> 00:00:40.560
And those variables are live, so

13
00:00:40.560 --> 00:00:46.030
that's a good way to switch
configurations based off environment.

14
00:00:46.030 --> 00:00:49.292
So, for instance, my environment is
testing, I might have a different url for

15
00:00:49.292 --> 00:00:50.229
my testing database.

16
00:00:50.229 --> 00:00:51.389
If it's production,

17
00:00:51.389 --> 00:00:55.364
I have to put my production database
in it because it's deployed somewhere.

18
00:00:55.364 --> 00:00:57.540
So you want to switch things like that.

19
00:00:57.540 --> 00:00:59.940
A really good example for
service is the port.

20
00:00:59.940 --> 00:01:02.960
You have no idea what port you're gonna be
on when you deploy the service somewhere.

21
00:01:02.960 --> 00:01:05.449
How do you know what port to put in there?

22
00:01:05.449 --> 00:01:07.870
Well it's coming from
the environment variable.

23
00:01:07.870 --> 00:01:11.955
Whatever service or stack that's hosting
your application, its job is to inject

24
00:01:11.955 --> 00:01:15.520
that port in the environment variable
because it can probably change.

25
00:01:15.520 --> 00:01:17.200
Who knows what it's gonna be.

26
00:01:17.200 --> 00:01:21.860
So you would just listen to it
from the environment variable.

27
00:01:21.860 --> 00:01:24.820
So we want to keep all
the configuration in one place.

28
00:01:24.820 --> 00:01:29.010
It's also a great place for
things like secrets and stuff like that.

29
00:01:29.010 --> 00:01:31.890
So you wanna use config values in
a place of hard coded values in our app.

30
00:01:31.890 --> 00:01:35.440
So in our app I think we're hard
coded in the DB connection urls,

31
00:01:35.440 --> 00:01:39.270
we're hard coding the ports,
we do not have one secret.

32
00:01:39.270 --> 00:01:41.085
We don't really talk about it, but

33
00:01:41.085 --> 00:01:44.380
the authentication section
has a JSON web token secret.

34
00:01:44.380 --> 00:01:45.530
That's hard-coded.

35
00:01:45.530 --> 00:01:48.070
We want that to change for
production and stuff as well.

36
00:01:48.070 --> 00:01:50.940
So all those places where things
need to change depending on

37
00:01:50.940 --> 00:01:54.230
where our app is deployed, we should
put that in a configuration file.

38
00:01:54.230 --> 00:01:57.090
And then what we need to do is we need
to generate that configuration file,

39
00:01:57.090 --> 00:02:00.750
depending on what environment
our code is executing in.

40
00:02:00.750 --> 00:02:05.610
So we'll have a base configuration file,
and from there it will require

41
00:02:05.610 --> 00:02:09.940
the appropriate production, staging,
local, testing configuration.

42
00:02:09.940 --> 00:02:11.160
It will merge itself and

43
00:02:11.160 --> 00:02:13.470
then give you a configuration
file you can use in your app.

44
00:02:13.470 --> 00:02:14.560
And then it has different values on it.

45
00:02:15.840 --> 00:02:19.640
So this is a better approach to building
out APIs to build stuff on the fly and

46
00:02:19.640 --> 00:02:22.860
not locking yourself into mistakes and

47
00:02:22.860 --> 00:02:27.200
accidentally putting secrets in your
git repo and all types of nasty things.

48
00:02:27.200 --> 00:02:29.020
So you totally wanna do this,
take advantage of this.

49
00:02:29.020 --> 00:02:31.500
You can't do something like this on
a client side because you can't inject

50
00:02:31.500 --> 00:02:33.410
environment variables in a client side.

51
00:02:33.410 --> 00:02:38.080
Any code you put in the client's gonna be
in the browser, right, you can't hide it,

52
00:02:38.080 --> 00:02:38.990
it's gonna be there.

53
00:02:38.990 --> 00:02:40.670
This, nobody's gonna see
environment variables.

54
00:02:40.670 --> 00:02:41.920
They're coming from the environment.

55
00:02:41.920 --> 00:02:43.700
They can only see the reference to it.

56
00:02:43.700 --> 00:02:45.400
So it's perfect for that.

57
00:02:45.400 --> 00:02:46.630
So that's what we're gonna use.

58
00:02:46.630 --> 00:02:51.258
So let's take note of all the places
where we're hardcoding things, again, and

59
00:02:51.258 --> 00:02:55.633
then we'll talk about how we can create
a configuration system around that.

60
00:02:55.633 --> 00:02:58.300
So one of the first places I
know was in dbjs right here.

61
00:02:58.300 --> 00:03:02.652
It's a hardcoded url for Mongo database.

62
00:03:02.652 --> 00:03:06.872
If we deployed this,
if we try to connect to this, it'll break.

63
00:03:06.872 --> 00:03:11.207
This will totally break, unless,
for instance, you have your own

64
00:03:11.207 --> 00:03:16.270
Linux machine up in the cloud where you
had your own Mongo instance created.

65
00:03:16.270 --> 00:03:18.280
Then okay, maybe it would work.

66
00:03:18.280 --> 00:03:20.570
But most likely,
you're probably using some cloud DB or

67
00:03:20.570 --> 00:03:24.570
something that's being hosted
somewhere else, through some VPC or

68
00:03:24.570 --> 00:03:27.350
something like that, and
you need a different url.

69
00:03:27.350 --> 00:03:29.640
You're gonna use that right rail for
that, so that's one.

70
00:03:29.640 --> 00:03:33.081
The other one is the main one,
which is the port inside of index.js.

71
00:03:33.081 --> 00:03:35.205
This just says 3000.

72
00:03:35.205 --> 00:03:40.060
This is not flexible at all, so
some configuration needs to be changed.

73
00:03:41.800 --> 00:03:45.600
And then the last place is inside of
off.js, which is this secret right here.

74
00:03:45.600 --> 00:03:49.820
This needs to change, and
then for extra credit,

75
00:03:49.820 --> 00:03:55.520
this disableAuth right here, this allows
us to turn off authentication for testing.

76
00:03:55.520 --> 00:03:59.930
So for testing, this is hey, can you just
not check authentication please, thanks.

77
00:03:59.930 --> 00:04:01.430
That's what that does.

78
00:04:01.430 --> 00:04:04.620
So we can set all this up
inside of a configuration file.

79
00:04:05.620 --> 00:04:10.957
So the way that will look is if inside
your API, if you were to create a,

80
00:04:10.957 --> 00:04:15.217
actually let me check out
what's in this other branch.

81
00:04:20.522 --> 00:04:24.007
&gt;&gt; Scott Moss: Lesson-7, okay.

82
00:04:24.007 --> 00:04:28.629
So we're on lesson 7, and, oop,
let me check out today's solution.

83
00:04:31.764 --> 00:04:37.080
&gt;&gt; Scott Moss: Do we check
out [INAUDIBLE] okay.

84
00:04:37.080 --> 00:04:43.130
So cool, so if you're inside of here,
your repo, the way I've been doing it is,

85
00:04:43.130 --> 00:04:45.620
like I said, I want to keep
the configuration in one place.

86
00:04:45.620 --> 00:04:49.810
I want it to be dynamic so depending
on the environment, it inherits and

87
00:04:49.810 --> 00:04:52.590
merges its properties based on
those different environments.

88
00:04:52.590 --> 00:04:54.000
And it's solely based on that.

89
00:04:54.000 --> 00:04:56.890
So that I can feel confident that, hey,
all I have to do is change the node

90
00:04:56.890 --> 00:04:59.160
environment to testing and
I get a testing configuration.

91
00:04:59.160 --> 00:05:01.910
All I do is change it to staging and
I get a staging configuration.

92
00:05:01.910 --> 00:05:02.880
It's pretty simple.

93
00:05:02.880 --> 00:05:06.050
So to do that, if you look, and
you don't have to turn off the branch,

94
00:05:06.050 --> 00:05:07.760
you can just look at my code right here.

95
00:05:07.760 --> 00:05:10.410
We start off with a base config,
something like this.

96
00:05:10.410 --> 00:05:12.220
So you have a base config.

97
00:05:12.220 --> 00:05:15.220
Where the first thing is,
you can forget about this import, but

98
00:05:15.220 --> 00:05:19.400
the first thing is you wanna make sure
you have the environment variable

99
00:05:19.400 --> 00:05:21.030
that you're gonna read from.

100
00:05:21.030 --> 00:05:25.060
For us, and Node,
the standard is NODE_ENV.

101
00:05:25.060 --> 00:05:26.510
That's just what we use in Nodes.

102
00:05:26.510 --> 00:05:31.046
You inject the appropriate environment
in which we are running our code in.

103
00:05:31.046 --> 00:05:33.525
So process.env.

104
00:05:33.525 --> 00:05:37.520
Notice that there's no variable here for
called process or anything like that.

105
00:05:37.520 --> 00:05:39.020
And that's because,

106
00:05:39.020 --> 00:05:43.780
again, in NOde, your entire code
just wraps in a function like this.

107
00:05:43.780 --> 00:05:45.230
So I talked about this before, right, but

108
00:05:45.230 --> 00:05:47.540
what I didn't talk about
is what passed in here.

109
00:05:47.540 --> 00:05:49.180
You get some stuff that's passed in here.

110
00:05:49.180 --> 00:05:53.893
You get dir name,
which is a variable that represents

111
00:05:53.893 --> 00:05:57.700
your current directory that you're in.

112
00:05:57.700 --> 00:06:03.550
You get require, which we use to
require stuff, you get file name,

113
00:06:03.550 --> 00:06:08.690
and there's tons of other stuff in here.

114
00:06:08.690 --> 00:06:11.160
And finally, you get process.

115
00:06:11.160 --> 00:06:14.890
Process is this, so
even though you don't see it in here,

116
00:06:14.890 --> 00:06:20.490
it's given to you at run time, Node,
execute your code in a iffy, like this.

117
00:06:20.490 --> 00:06:23.690
That's how it creates modules, that's all
a module is, a module's just a closure.

118
00:06:23.690 --> 00:06:25.720
That's all it is, so
you just get a closure,

119
00:06:25.720 --> 00:06:29.140
it's just a scope, so
that's where that process comes from.

120
00:06:29.140 --> 00:06:32.370
You also get this thing called global.

121
00:06:32.370 --> 00:06:35.022
I'm not gonna tell you about it cuz
you just don't use it, all right?

122
00:06:35.022 --> 00:06:37.200
[LAUGH] Do not use global.

123
00:06:37.200 --> 00:06:38.890
You're like, yeah I'm just
gonna put everything on global.

124
00:06:38.890 --> 00:06:41.150
No please don't, do not use global.

125
00:06:41.150 --> 00:06:42.990
So process is there.

126
00:06:42.990 --> 00:06:45.270
And we want the .env property of it and

127
00:06:45.270 --> 00:06:47.096
then the environment variable
that we want is env.

128
00:06:47.096 --> 00:06:48.074
Node.env, so

129
00:06:48.074 --> 00:06:50.769
every environment variables you got on
your computer you can read them in here.

130
00:06:51.850 --> 00:06:52.950
Go assessment variables and read them.

131
00:06:52.950 --> 00:06:54.670
You'll see, they'll show up right here.

132
00:06:54.670 --> 00:06:55.780
So we want the Node.env.

133
00:06:55.780 --> 00:06:57.180
So basically what we're saying here is,

134
00:06:58.600 --> 00:07:01.130
we're gonna set it to development
if it's not set already.

135
00:07:01.130 --> 00:07:02.320
We're defaulting to development.

136
00:07:02.320 --> 00:07:04.980
That's what this is doing, right?

137
00:07:04.980 --> 00:07:08.750
Node_env, or if that's nothing than
it's going to equal development.

138
00:07:08.750 --> 00:07:10.370
So that's the first step.

139
00:07:10.370 --> 00:07:12.224
And the second step is to
create you baseConfig.

140
00:07:12.224 --> 00:07:15.820
This is default configuration,
everything is based off this,

141
00:07:15.820 --> 00:07:17.030
here is my default for everything.

142
00:07:17.030 --> 00:07:21.830
So by default port is 3000, I don't
have any secrets, [INAUDIBLE] object,

143
00:07:21.830 --> 00:07:26.330
my database has a url string that
is just this local database.

144
00:07:26.330 --> 00:07:26.890
Pretty simple?

145
00:07:26.890 --> 00:07:31.290
Okay?
And then what we do is,

146
00:07:31.290 --> 00:07:35.570
depending on the env, right here,
depending on that env, what we're gonna do

147
00:07:35.570 --> 00:07:41.580
is we're going to load up the appropriate
file that has its own configuration in it.

148
00:07:41.580 --> 00:07:45.610
So if you notice here,
there is a dev file, a prod file,

149
00:07:45.610 --> 00:07:49.560
a testing file Depending on what
the env is if it's development or

150
00:07:49.560 --> 00:07:51.030
dev it's gonna load up that file.

151
00:07:51.030 --> 00:07:53.470
If it's testing or
test it's gonna load up that file.

152
00:07:53.470 --> 00:07:56.940
If it's production our project is gonna
load up that file defaulting back

153
00:07:56.940 --> 00:07:57.580
to just f.

154
00:07:58.770 --> 00:08:00.490
And then it merges it.

155
00:08:00.490 --> 00:08:05.610
It merges the env config on top of the
base config overriding what's on the left.

156
00:08:05.610 --> 00:08:09.630
And then now when we require
this file we get a extendable

157
00:08:09.630 --> 00:08:13.550
configuration that changes depending
on node environment, all right?

158
00:08:13.550 --> 00:08:17.320
All we have to do override that
environment is when we execute any

159
00:08:17.320 --> 00:08:18.460
scripts, and for us,

160
00:08:18.460 --> 00:08:21.810
only one we have is start,
is that you just pass in an environment.

161
00:08:21.810 --> 00:08:24.410
Notice right here,
I have NODE_ENVE=testing.

162
00:08:24.410 --> 00:08:27.850
So if this was development I
can explicitly pass it in but

163
00:08:27.850 --> 00:08:30.370
although we do default to
development I don't have to do it.

164
00:08:30.370 --> 00:08:34.530
But if this was production I could do
that, and now we're in production mode.

165
00:08:34.530 --> 00:08:37.700
It'll make sure the configure's
production, the database url is production

166
00:08:37.700 --> 00:08:41.980
database url, the secrets are expected
to be injected, all that good stuff.

167
00:08:43.820 --> 00:08:44.930
That's how you would do it.

168
00:08:44.930 --> 00:08:48.590
On your platform of choice where you
deploy it they have somewhere in their

169
00:08:48.590 --> 00:08:50.940
options somewhere that you can
put environment variables.

170
00:08:50.940 --> 00:08:54.930
If they don't, leave that platform
because you shouldn't be using them.

171
00:08:54.930 --> 00:08:56.070
Every platform has that.

172
00:08:56.070 --> 00:08:59.210
You just put your environment variables in
there and that's how you inject them and

173
00:08:59.210 --> 00:09:00.420
then you can change them.

174
00:09:00.420 --> 00:09:05.010
And that also means that because you
have a configuration driven development.

175
00:09:05.010 --> 00:09:08.790
Let's say for some reason you
have the wrong database url.

176
00:09:08.790 --> 00:09:10.210
Some reason,
it's hitting the wrong database url.

177
00:09:10.210 --> 00:09:12.420
All you gotta do is go ahead
change your environment variable.

178
00:09:12.420 --> 00:09:14.920
You don't have to redeploy cuz
you're like, it's got the wrong.

179
00:09:14.920 --> 00:09:17.000
It says staging,
supposed to be production.

180
00:09:17.000 --> 00:09:18.350
Change to production and you're done.

181
00:09:18.350 --> 00:09:20.246
You don't have to redeploy your whole app.

182
00:09:20.246 --> 00:09:22.143
You just change the environment variable.

183
00:09:22.143 --> 00:09:22.793
These are live.

184
00:09:22.793 --> 00:09:24.853
It'll restart your app,
the service provider.

185
00:09:24.853 --> 00:09:26.840
But you don't have to redeploy.

186
00:09:26.840 --> 00:09:31.430
So you want to configure as many things as
possible on your environment variable and

187
00:09:31.430 --> 00:09:34.750
not hardcode them cuz it
limits you having to redeploy.

188
00:09:34.750 --> 00:09:37.980
It also allows you to
change it on the fly.

189
00:09:37.980 --> 00:09:39.590
And it just makes sense logically.

190
00:09:39.590 --> 00:09:41.820
It saves you code, less if statements.

191
00:09:41.820 --> 00:09:45.210
You can put one if statement
inside this config file.

192
00:09:45.210 --> 00:09:46.850
Or a switch statement in my case.

193
00:09:46.850 --> 00:09:49.370
Or you can put an if statement in every
single file that you would ever need

194
00:09:49.370 --> 00:09:50.800
a dynamic value.

195
00:09:50.800 --> 00:09:53.930
So I'd rather just have one place where it
has the switch and if statements instead.

