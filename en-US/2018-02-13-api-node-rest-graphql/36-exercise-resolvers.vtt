WEBVTT

1
00:00:00.260 --> 00:00:02.790
&gt;&gt; Scott Moss: What you're gonna be doing
is pretty much just writing the resolvers

2
00:00:03.860 --> 00:00:06.620
for the song type and the playlist type.

3
00:00:06.620 --> 00:00:10.213
So if you check out to lesson 11,
you should see the ones for

4
00:00:10.213 --> 00:00:12.273
the user type already filled out.

5
00:00:16.350 --> 00:00:18.243
&gt;&gt; Scott Moss: So
if you go to user.resolvers.

6
00:00:34.497 --> 00:00:36.590
&gt;&gt; Scott Moss: That's just
a basic resolver in there, right?

7
00:00:36.590 --> 00:00:39.497
So we need to do the same thing for

8
00:00:39.497 --> 00:00:44.550
the playlist type,
&gt;&gt; Scott Moss: And the song type.

9
00:00:44.550 --> 00:00:46.050
Now as far as what
resolvers need to write,

10
00:00:46.050 --> 00:00:48.260
I want you to think about what
we did yesterday with REST.

11
00:00:48.260 --> 00:00:49.844
Think about all the things
we did with get,

12
00:00:49.844 --> 00:00:51.390
remember what we did with get yesterday?

13
00:00:51.390 --> 00:00:53.722
We did getOne, and getAll.

14
00:00:53.722 --> 00:00:56.810
For each type,
I want you to write two resolvers.

15
00:00:56.810 --> 00:01:01.471
One that gets one song and then one
that gets all songs, and also do it for

16
00:01:01.471 --> 00:01:02.488
the playlist.

17
00:01:04.228 --> 00:01:05.352
&gt;&gt; Scott Moss: Does that make sense?

18
00:01:05.352 --> 00:01:09.480
So I'm gonna do with song right quick,
just so you can see.

19
00:01:09.480 --> 00:01:12.370
So let's walk through the whole
flow of what you have to do.

20
00:01:12.370 --> 00:01:14.037
The first thing you would have
to do is you have to come here,

21
00:01:15.908 --> 00:01:16.480
&gt;&gt; Scott Moss: Then you have to

22
00:01:16.480 --> 00:01:17.420
make a query.

23
00:01:17.420 --> 00:01:18.950
But you can not put type Query,

24
00:01:18.950 --> 00:01:21.250
because we already made a type
called Query, this'll break.

25
00:01:21.250 --> 00:01:24.210
You actually have to extend the type,
Query.

26
00:01:25.618 --> 00:01:30.700
Query was already defined in the user, so
use the keyword extend in front of type,

27
00:01:30.700 --> 00:01:33.450
otherwise its going to try to
make a new type called Query,

28
00:01:33.450 --> 00:01:34.860
which was already defined here.

29
00:01:36.000 --> 00:01:39.020
You cannot make another type of
the same thing, it'll break.

30
00:01:39.020 --> 00:01:41.090
Query was already defined so
therefore we need to extend it.

31
00:01:42.280 --> 00:01:44.750
This is just like a merge in GraphQL,
that's all this is.

32
00:01:44.750 --> 00:01:47.400
It's like I'm merging the two query types
together, that's all this is doing.

33
00:01:48.560 --> 00:01:50.960
So for song,
let's say we wanna get one song.

34
00:01:50.960 --> 00:01:54.078
For me I like to follow the convention
of using the name of the type,

35
00:01:54.078 --> 00:01:54.700
for getting one.

36
00:01:54.700 --> 00:01:57.920
So I'll say song, it takes an id,
whose type is ID, and

37
00:01:57.920 --> 00:02:04.100
it returns a song that is not null,
so I would say that.

38
00:02:04.100 --> 00:02:08.690
I'm gonna pull this up side by side to
the resolvers, that I did not make.

39
00:02:08.690 --> 00:02:12.784
So you will have to come in here and
make another file for song.resolver.

40
00:02:15.454 --> 00:02:17.114
&gt;&gt; Scott Moss: And
then I'm gonna make a function called.

41
00:02:22.021 --> 00:02:23.639
&gt;&gt; Speaker 2: Should be plural, resolvers.

42
00:02:23.639 --> 00:02:24.713
&gt;&gt; Scott Moss: Thank you.

43
00:02:29.922 --> 00:02:32.133
&gt;&gt; Scott Moss: Resolvers, and
I'm gonna make a function called,

44
00:02:32.133 --> 00:02:35.047
you can call it whatever you want,
it's just however you export it,

45
00:02:35.047 --> 00:02:36.920
it better be called capital Song.

46
00:02:36.920 --> 00:02:41.757
So I'm gonna call it just like getOneSong,
and it's just

47
00:02:41.757 --> 00:02:46.530
going to take in a root
value which is nothing.

48
00:02:46.530 --> 00:02:50.051
It is gonna take an id as the arc,
and that's really all I need.

49
00:02:50.051 --> 00:02:53.029
Then I need to import the song model from

50
00:02:53.029 --> 00:02:56.574
song.model,
&gt;&gt; Scott Moss: Which is what we used in

51
00:02:56.574 --> 00:02:57.681
our controllers yesterday.

52
00:02:57.681 --> 00:03:01.960
And I'm just going to just query and get
one song, so I'm just gonna say return.

53
00:03:01.960 --> 00:03:06.918
Song.findById, cuz we have an id here,
pass an id,

54
00:03:06.918 --> 00:03:10.567
call exec, and that will get one song.

55
00:03:10.567 --> 00:03:14.221
And then only thing I gotta
do now is export this,

56
00:03:16.655 --> 00:03:17.933
&gt;&gt; Scott Moss: SongResolvers,

57
00:03:24.525 --> 00:03:25.499
&gt;&gt; Scott Moss: And I need to export it

58
00:03:25.499 --> 00:03:26.700
on my Query.

59
00:03:26.700 --> 00:03:31.180
Remember, cuz I'm merging the query yype,
and I have a query called Song,

60
00:03:31.180 --> 00:03:34.270
whose value is that getOneSong function.

61
00:03:35.400 --> 00:03:39.878
So now that I have that,
the next thing I need to do is

62
00:03:39.878 --> 00:03:44.255
export these resolvers
onto the graphQLRouter,

63
00:03:44.255 --> 00:03:49.170
like this, but in order to do that,
I need to export it.

64
00:03:53.695 --> 00:03:55.800
&gt;&gt; Scott Moss: Did I already export it,
where's it at?

65
00:03:57.430 --> 00:04:01.600
Okay, yeah, so all I have to do is just
import that there from the graphQLRouter.

66
00:04:01.600 --> 00:04:05.046
And then you can just copy this from
users, you can do the same thing.

67
00:04:05.046 --> 00:04:08.481
You could say, songResolver,

68
00:04:12.836 --> 00:04:14.863
&gt;&gt; Scott Moss: There you go.

69
00:04:14.863 --> 00:04:17.561
And then you would need to add
in the songResolvers down below.

70
00:04:21.450 --> 00:04:24.345
&gt;&gt; Scott Moss: There you go, and I think
the last thing I need to do is make sure

71
00:04:24.345 --> 00:04:27.760
that this is exported from the index,
so lets see how we did that in user.

72
00:04:29.038 --> 00:04:30.980
Actually no,
it's already good cuz it's in the router.

73
00:04:32.220 --> 00:04:34.700
You gotta export it in the router,
so export star.

74
00:04:34.700 --> 00:04:42.375
I'm sorry,
export songResolvers from song.resolvers.

75
00:04:46.035 --> 00:04:48.284
&gt;&gt; Scott Moss: There we go,
and if you were to run this,

76
00:04:54.140 --> 00:04:55.492
&gt;&gt; Scott Moss: Duplicate decloration,

77
00:04:55.492 --> 00:04:57.462
song, I got that in there twice..

78
00:04:59.312 --> 00:05:02.460
&gt;&gt; Scott Moss: Right here, there we go.

79
00:05:02.460 --> 00:05:04.826
So it'd be to run this,
and then re-refresh this.

80
00:05:06.769 --> 00:05:09.300
&gt;&gt; Scott Moss: We should look at Query and
there should be Song right there.

81
00:05:11.210 --> 00:05:17.360
So I want you to do the getOne, getAll for
Song, getOne, getAll for Playlist.

82
00:05:17.360 --> 00:05:18.700
And then hook them up.

83
00:05:18.700 --> 00:05:21.133
I'm gonna write that down on the slides,
I don't know why it's not there.

