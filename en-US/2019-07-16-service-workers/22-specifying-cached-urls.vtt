WEBVTT

1
00:00:00.040 --> 00:00:03.850
&gt;&gt; Kyle Simpson: So let's make our service
worker do something a little bit more

2
00:00:03.850 --> 00:00:06.460
interesting than just
send messages around.

3
00:00:06.460 --> 00:00:10.208
Let's make it actually start proactively
caching things, since this is going to be

4
00:00:10.208 --> 00:00:14.920
another major change to our service worker
and I'm going to update it to version # 3.

5
00:00:14.920 --> 00:00:17.980
And I'm going to choose as because
I'm tracking those versions.

6
00:00:17.980 --> 00:00:23.500
I'm going to choose to keep all of my
cache files in a version cache name.

7
00:00:23.500 --> 00:00:25.660
And that sounds more
sophisticated than it is.

8
00:00:25.660 --> 00:00:29.290
It just means that I have
a string called cacheName,

9
00:00:29.290 --> 00:00:32.780
which has the version
number included in it.

10
00:00:32.780 --> 00:00:36.854
So I'll just give it some
useful name like ramblings and

11
00:00:36.854 --> 00:00:39.895
then include my version number in there.

12
00:00:39.895 --> 00:00:43.740
So that's just gonna say ramblings-3 or
ramblings-4.

13
00:00:43.740 --> 00:00:49.950
That's just a string name to refer
to my collection of my cached items.

14
00:00:49.950 --> 00:00:54.615
What that means is that anytime I update
my version, all of the files are gonna get

15
00:00:54.615 --> 00:00:58.039
re-cached under a new cache name and
the old caches are gonna go away.

16
00:00:59.840 --> 00:01:02.070
If you don't want to do atomic updates,

17
00:01:02.070 --> 00:01:07.450
then you would use a cache name that was
fixed rather than version dependent.

18
00:01:07.450 --> 00:01:09.740
And then you just have to
manage determining whether or

19
00:01:09.740 --> 00:01:11.890
not something had been updated.

20
00:01:11.890 --> 00:01:16.910
You might for example have an API on
your server like a backend admin API.

21
00:01:16.910 --> 00:01:21.310
That the service worker can hit and it
gives it a list of only the resources that

22
00:01:21.310 --> 00:01:24.200
have updated and then you
incrementally put those in the cache.

23
00:01:24.200 --> 00:01:26.710
There's lots of ways that
you might approach it,

24
00:01:26.710 --> 00:01:29.570
I'm just going to go the sort of all or
nothing update approach here.

25
00:01:31.310 --> 00:01:36.570
Okay, so we now have a cacheName, but
we need to know what we want to cache.

26
00:01:36.570 --> 00:01:39.130
There's a couple of different ways
that we might go about this, but

27
00:01:39.130 --> 00:01:42.330
I'm going to choose kind of
the easiest for these purposes.

28
00:01:42.330 --> 00:01:47.760
I'm going to hard code into my service
worker, the logged out resources that I

29
00:01:47.760 --> 00:01:53.820
want, and by logged out I mean the stuff
that's not sensitive to the sessions.

30
00:01:53.820 --> 00:01:58.240
I'm going to cache those resources by
listing them specifically in an array.

31
00:01:58.240 --> 00:02:01.180
Again, this could be something
that you load from your server

32
00:02:01.180 --> 00:02:03.750
dynamically if you
prefer to go that route.

33
00:02:03.750 --> 00:02:08.580
A lot of people have their service worker
generated by their build process and

34
00:02:08.580 --> 00:02:12.690
it just dumps all of their
resources into the service worker.

35
00:02:12.690 --> 00:02:14.770
Kind of like a template,
it just dumps them in.

36
00:02:14.770 --> 00:02:16.710
So, however you would
like to go about that,

37
00:02:16.710 --> 00:02:23.440
we're gonna make urlsTocache,
as an object.

38
00:02:23.440 --> 00:02:28.980
And I'm gonna make a distinction, although
for our purposes, it won't matter.

39
00:02:28.980 --> 00:02:34.110
I'm gonna make a distinction
of resources that I'm calling,

40
00:02:34.110 --> 00:02:36.730
let me not say is logged out.

41
00:02:36.730 --> 00:02:39.360
I'll just call them loggedOut.

42
00:02:45.241 --> 00:02:49.871
&gt;&gt; Kyle Simpson: I'll call them loggedOut,
so that theoretically we can have another

43
00:02:49.871 --> 00:02:53.479
list of resources that
are sensitive to a session, and

44
00:02:53.479 --> 00:02:57.179
we only cash those when
somebody is actually logged in.

45
00:02:58.460 --> 00:03:00.898
I've used that in my app, for example,

46
00:03:00.898 --> 00:03:06.430
that I cached the admin pages,
but only for an admin user.

47
00:03:06.430 --> 00:03:10.930
And so I have that list that gets
populated with resources, but only for

48
00:03:10.930 --> 00:03:11.830
admin users.

49
00:03:11.830 --> 00:03:15.610
I don't want to push all of the admin
code out there unnecessarily for

50
00:03:15.610 --> 00:03:17.230
people that aren't admins.

51
00:03:17.230 --> 00:03:20.965
So you can distinguish between the two,
for our purposes in this workshop,

52
00:03:20.965 --> 00:03:23.966
basically,we're we only
need this one list.

53
00:03:23.966 --> 00:03:28.730
Okay, so I'm going to grab,
I'm going to start listing strings for

54
00:03:28.730 --> 00:03:29.360
all these things.

55
00:03:29.360 --> 00:03:33.110
And if you were to open
up the web directory,

56
00:03:33.110 --> 00:03:36.310
it's basically all of these web files
that we need to be able to load.

57
00:03:36.310 --> 00:03:39.070
So I'm going to start
listing each one of these.

58
00:03:39.070 --> 00:03:46.090
I need to list the CSS, the images,
each of these JavaScript files.

59
00:03:46.090 --> 00:03:51.900
And the URLs for these HTML pages,
remember we don't use the .HTML extension.

60
00:03:51.900 --> 00:03:54.160
But I'm gonna need the URLs for
each one of those.

61
00:03:54.160 --> 00:03:57.427
So I will just start listing that out.

62
00:04:13.772 --> 00:04:17.040
&gt;&gt; Kyle Simpson: You might choose
to order these in a particular way.

63
00:04:18.740 --> 00:04:22.623
If there was something like more critical
than something else, you might put

64
00:04:22.623 --> 00:04:26.280
the more critical ones at the top,
for our purposes it doesn't matter.

65
00:04:35.505 --> 00:04:43.244
&gt;&gt; Kyle Simpson: I'll start listing out
the pages that I know we wanna cache,

66
00:04:43.244 --> 00:04:48.880
like /, /about, /contact, /login.

67
00:04:48.880 --> 00:04:53.835
That's just the login form page,
that's not anything else and

68
00:04:53.835 --> 00:05:00.108
then /
&gt;&gt; Kyle Simpson: 404, /offline,

69
00:05:00.108 --> 00:05:06.215
we haven't talked about that page yet, but
we'll talk about that in a little bit.

70
00:05:06.215 --> 00:05:09.224
Let's lift out some JavaScript files, like

71
00:05:45.680 --> 00:05:46.334
&gt;&gt; Kyle Simpson: Okay,

72
00:05:46.334 --> 00:05:52.329
there's our list of URLs that we
want to make sure we've cached.

