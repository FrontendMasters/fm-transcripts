WEBVTT

1
00:00:00.610 --> 00:00:04.010
How can I work with persistent storage?

2
00:00:04.010 --> 00:00:07.500
Well, we can use an API.

3
00:00:09.010 --> 00:00:10.240
We should use an API.

4
00:00:11.260 --> 00:00:16.430
The API is actually pretty simple,
it's navigator.storage.persist.

5
00:00:16.430 --> 00:00:19.056
It will return as a promise, and

6
00:00:19.056 --> 00:00:23.350
it will give us a hint saying
if it was granted or not.

7
00:00:24.810 --> 00:00:29.629
This API is today working in Chrome,
in Firefox,

8
00:00:29.629 --> 00:00:32.510
and recently also in Safari.

9
00:00:34.030 --> 00:00:41.990
So even if the user is not installing your
PWA, you can request persistent storage.

10
00:00:41.990 --> 00:00:46.191
Firefox is the only browser
that will ask the user,

11
00:00:46.191 --> 00:00:49.326
we will see that in action in a minute.

12
00:00:49.326 --> 00:00:53.653
So the user will see a dialogue saying,
hey, do you want persistent storage for

13
00:00:53.653 --> 00:00:54.500
this website?

14
00:00:54.500 --> 00:00:57.275
Chrome or Chromium will grant or

15
00:00:57.275 --> 00:01:03.237
deny persistent storage based on
a criteria that changes with time,

16
00:01:03.237 --> 00:01:09.424
that has to do with engagement with
that origin, and many other rules.

17
00:01:09.424 --> 00:01:12.640
For example,
if the user has installed a PWA,

18
00:01:12.640 --> 00:01:16.199
typically it will grant
you persistent if you ask.

19
00:01:16.199 --> 00:01:19.961
If the user has subscribed
to web push notifications,

20
00:01:19.961 --> 00:01:22.490
it will grant you persistent.

21
00:01:22.490 --> 00:01:25.256
Because hey, if the push message arrives,

22
00:01:25.256 --> 00:01:29.000
there should be a service
worker to attend that message.

23
00:01:29.000 --> 00:01:33.290
So we don't want that service
worker to be evicted, okay?

24
00:01:33.290 --> 00:01:38.311
But if you don't request
persistent storage,

25
00:01:38.311 --> 00:01:42.830
okay, if you don't request explicitly,

26
00:01:42.830 --> 00:01:46.105
it's best effort by default.

27
00:01:46.105 --> 00:01:48.386
Okay, makes sense?

28
00:01:48.386 --> 00:01:54.152
Also, you can ask, will persist,
look at the last ed,

29
00:01:54.152 --> 00:01:58.204
and that will not request persistent,

30
00:01:58.204 --> 00:02:01.790
will check if it is granted or not.

31
00:02:02.790 --> 00:02:09.210
So let's get out of here for
a second and let's open a browser.

32
00:02:09.210 --> 00:02:11.009
For example, let's start with Firefox.

33
00:02:11.009 --> 00:02:15.193
So here in the console,
I can try, okay, and

34
00:02:15.193 --> 00:02:19.943
say navigator.storage.persist or
persisted.

35
00:02:19.943 --> 00:02:23.150
Persisted will give me a promise,

36
00:02:23.150 --> 00:02:27.906
and it will tell me if it's
currently persisted and

37
00:02:27.906 --> 00:02:32.233
I can wait for it, okay,
and now it's false.

38
00:02:32.233 --> 00:02:35.283
Well, I'm here in Firefox, so for example,

39
00:02:35.283 --> 00:02:39.055
if I wanna see if I do have
persistent storage or I'm not.

40
00:02:39.055 --> 00:02:45.327
So if I wanna request permission for
store the data persistently,

41
00:02:45.327 --> 00:02:50.367
I'm going to say,
navigator.storage.persist,

42
00:02:50.367 --> 00:02:55.071
and that will open a dialog,
asking the user allow

43
00:02:55.071 --> 00:02:59.890
google.com to store data
in persistent storage.

44
00:02:59.890 --> 00:03:02.330
So in this case, the user is in charge.

45
00:03:02.330 --> 00:03:05.795
This is the only browser doing this, okay?

46
00:03:05.795 --> 00:03:11.682
If I say Allow, now it's true so
now if I ask again, I'm persisted.

47
00:03:11.682 --> 00:03:15.435
What about Chrome?

48
00:03:15.435 --> 00:03:20.707
So back in Chrome, if I try google.com,

49
00:03:20.707 --> 00:03:27.725
for example, I open my inspector and

50
00:03:27.725 --> 00:03:35.636
I try await navigator.storage.persistent,
it's false.

51
00:03:35.636 --> 00:03:39.513
And if I'm asking,
I'm requesting persistent storage,

52
00:03:39.513 --> 00:03:44.940
it give me an immediate true, but not for
every website, it's google.com that,

53
00:03:44.940 --> 00:03:49.890
yeah, well, it's google.com,
it's Chrome, Google, right?

54
00:03:49.890 --> 00:03:56.170
Anyway, it's supposed to be based on
your engagement with that origin.

55
00:03:56.170 --> 00:04:00.812
If it says false, there is nothing
you can do about that, okay?

56
00:04:00.812 --> 00:04:04.999
So if the browser is denying
you persistent storage, I mean,

57
00:04:04.999 --> 00:04:07.573
you can try to ask again next time, and

58
00:04:07.573 --> 00:04:14.240
that's what you typically do when the page
loads your requests persistent storage.

59
00:04:14.240 --> 00:04:20.478
Remember, what's the advantage here that
if we are granted persistent storage,

60
00:04:20.478 --> 00:04:26.375
my storage won't be a bit on storage
pressure or after end days of inactivity.

61
00:04:26.375 --> 00:04:27.025
Make sense?
So

62
00:04:27.025 --> 00:04:30.704
only if the user goes
explicitly to clear the data.

