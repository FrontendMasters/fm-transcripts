WEBVTT

1
00:00:00.580 --> 00:00:03.556
So we have two more things
left to take a look at, and

2
00:00:03.556 --> 00:00:06.069
the first is dealing with local packages.

3
00:00:06.069 --> 00:00:10.292
This is where we're getting
into modular architecture, and

4
00:00:10.292 --> 00:00:14.515
what we're gonna do in this
chapter is bring that library that

5
00:00:14.515 --> 00:00:19.407
we created together at the beginning
of the workshop, chat-stdlib.

6
00:00:19.407 --> 00:00:24.307
We're gonna bring that into our
chat project and in doing so,

7
00:00:24.307 --> 00:00:30.635
demonstrate how you can just use yarn and
get a lot of the benefits of a mono repo.

8
00:00:30.635 --> 00:00:33.442
This is something you
can't do with yarn1.x.

9
00:00:33.442 --> 00:00:36.419
You need to have a modern version
of yarn in order for this to work.

10
00:00:36.419 --> 00:00:40.504
What we're gonna look at
first is like how does yarn

11
00:00:40.504 --> 00:00:44.887
understand that we're working
with a mono repo here?

12
00:00:44.887 --> 00:00:51.297
So we'll look at the root level package
json and this is very important.

13
00:00:51.297 --> 00:00:56.662
When we're dealing with yarn workspaces,
and have a workspaces property in

14
00:00:56.662 --> 00:01:01.876
our package json that is describing
where all of the packages can be found.

15
00:01:01.876 --> 00:01:05.561
Where you call each one of
these things a workspace,

16
00:01:05.561 --> 00:01:08.676
where the various workspaces can be found.

17
00:01:08.676 --> 00:01:10.979
This is a convention that
a lot of people follow.

18
00:01:10.979 --> 00:01:13.196
They have packages slash, and

19
00:01:13.196 --> 00:01:17.981
then every subfolder of packages
ends up being its own workspace.

20
00:01:17.981 --> 00:01:21.823
So I'm following that here, but
you could make this whatever you like.

21
00:01:21.823 --> 00:01:25.628
And what that means is,
if we close this up a little bit,

22
00:01:27.625 --> 00:01:30.232
These are all different packages here.

23
00:01:30.232 --> 00:01:33.816
So if you've taken TypeScript
fundamentals or intermediate TypeScript,

24
00:01:33.816 --> 00:01:35.778
here are our notes for those two courses.

25
00:01:35.778 --> 00:01:37.478
This is the course website.

26
00:01:37.478 --> 00:01:40.581
This is a fundamentals little
like hello TypeScript project.

27
00:01:40.581 --> 00:01:42.930
Here's that HTTP error.

28
00:01:42.930 --> 00:01:46.454
Dependency we brought in that didn't
have any type information, but

29
00:01:46.454 --> 00:01:48.197
it had this like HTTP error class.

30
00:01:48.197 --> 00:01:52.077
Turns out that has been
in here as a workspace.

31
00:01:52.077 --> 00:01:54.223
And now we're gonna work with these two.

32
00:01:54.223 --> 00:01:59.555
We're gonna bring this
package into this one here.

33
00:01:59.555 --> 00:02:03.046
The benefits will become pretty
clear as we do this, but

34
00:02:03.046 --> 00:02:08.335
the first benefit we're gonna, I think we
already see, is you get encapsulation.

35
00:02:08.335 --> 00:02:13.114
Here or publishing package, but
we're building a dist folder.

36
00:02:13.114 --> 00:02:18.062
And it has a very deliberately created
DTS roll up where we can say this

37
00:02:18.062 --> 00:02:21.999
is a private thing that one
should be able to call this.

38
00:02:21.999 --> 00:02:23.878
I can opt into beta features.

39
00:02:23.878 --> 00:02:28.444
So you could have some stuff
in here that sort of internal.

40
00:02:28.444 --> 00:02:31.977
You're managing complexity by doing this.

41
00:02:31.977 --> 00:02:37.318
We'll see other benefits in a moment here,
but for now let's bring the package in.

42
00:02:37.318 --> 00:02:41.971
So we're gonna go to chats package json,
and

43
00:02:41.971 --> 00:02:46.016
we are gonna add a new dependency here.

44
00:02:46.016 --> 00:02:46.974
Chat.

45
00:02:49.059 --> 00:02:53.530
Standard library, and
that's pretty accurate there.

46
00:02:53.530 --> 00:02:56.693
Workspace:*.

47
00:02:56.693 --> 00:03:01.411
So this is the special
yarn workspace thing.

48
00:03:01.411 --> 00:03:05.852
NPM will not understand this, so
don't try to use this with NPM.

49
00:03:05.852 --> 00:03:08.603
Or you're in for a bad time.

50
00:03:08.603 --> 00:03:14.655
This you can think of as kind of the same,
you can do like this.

51
00:03:14.655 --> 00:03:22.285
It sort of relates to defining how
this dependency will float forward.

52
00:03:22.285 --> 00:03:26.667
It's not actually important in
the context of this project because for

53
00:03:26.667 --> 00:03:32.012
this to matter, this character here, you'd
have to be publishing this stuff to NPM.

54
00:03:32.012 --> 00:03:35.464
That's where this starts to matter.

55
00:03:35.464 --> 00:03:43.089
What version of chat-std lib does chat
need, like if they were both libraries?

56
00:03:43.089 --> 00:03:48.077
That would be defined in terms of this.

57
00:03:48.077 --> 00:03:52.505
Whether you'll accept a major version or
a minor version, change,

58
00:03:52.505 --> 00:03:54.652
that's where you'd find that.

59
00:03:54.652 --> 00:04:00.325
So, we're going to need to then run yarn.

60
00:04:00.325 --> 00:04:02.619
Because it's gonna wire up dependencies.

61
00:04:02.619 --> 00:04:05.423
Some representation of this,
I believe ends up in,

62
00:04:05.423 --> 00:04:08.608
maybe not, just gonna say could
end up in the lock file, but

63
00:04:08.608 --> 00:04:11.692
I guess just having it in
the package json is sufficient.

64
00:04:11.692 --> 00:04:19.444
Sorry, I didn't save
this How I've indicated.

65
00:04:21.728 --> 00:04:25.131
So we can look at what we see there.

66
00:04:25.131 --> 00:04:27.993
Sure enough, there we go.

67
00:04:30.148 --> 00:04:38.152
So it's saying, You could just see that
it had some effect on the yarn lock file.

68
00:04:38.152 --> 00:04:43.010
I'm not gonna try to read
through a lock file there.

69
00:04:43.010 --> 00:04:47.120
So the next thing we're gonna do is
delete a few files from our chat

70
00:04:47.120 --> 00:04:50.261
app because we're not gonna
need them anymore and

71
00:04:50.261 --> 00:04:54.167
we're gonna depend on the library
we wrote to deliver these.

72
00:04:54.167 --> 00:04:56.250
So they're gonna be in the utils folder.

73
00:04:56.250 --> 00:05:01.143
We'll delete error,
it's gonna be deferred an error.

74
00:05:01.143 --> 00:05:02.768
So delete those.

75
00:05:05.773 --> 00:05:10.451
And then we can delete their
equivalent tests because we have test

76
00:05:10.451 --> 00:05:12.843
coverage in the library itself.

77
00:05:12.843 --> 00:05:19.012
So in tests, utils, there's deferred and
error, getting rid of those.

78
00:05:22.261 --> 00:05:29.890
Cool, now, we're gonna go
into our networking TS file.

79
00:05:29.890 --> 00:05:31.999
This one here in our utils folder,

80
00:05:31.999 --> 00:05:37.105
which is currently very unhappy because
it's missing its stringifyError thing.

81
00:05:37.105 --> 00:05:43.764
And here, we're just gonna to say,
chat-stdlib, there's stringifyError.

82
00:05:43.764 --> 00:05:45.877
It has no exported member.

83
00:05:48.220 --> 00:05:53.439
I think some of you might know
what we'll have to do there,

84
00:05:53.439 --> 00:05:56.113
and that is opt into the beta.

85
00:05:56.113 --> 00:05:57.653
So we'll go into our tsconfig.

86
00:05:57.653 --> 00:06:03.760
Actually, I'm just gonna copy it
cuz we already did this work for

87
00:06:03.760 --> 00:06:07.325
the tests, for this little library.

88
00:06:07.325 --> 00:06:10.656
Right here,
we're just gonna need this line,

89
00:06:10.656 --> 00:06:16.501
to get that beta stringifyError function,
we got to point it to the correct types.

90
00:06:16.501 --> 00:06:21.881
So, I'm going to apply this to the outer,

91
00:06:21.881 --> 00:06:25.924
that's the test's tsconfig.

92
00:06:25.924 --> 00:06:27.833
I'm gonna put it in our main tsconfig.

93
00:06:27.833 --> 00:06:30.544
So we already have a paths object there,

94
00:06:30.544 --> 00:06:35.411
we can get rid of that,
Add a comma, all right,

95
00:06:35.411 --> 00:06:40.062
I'm just gonna think carefully about what
the relative path is to get to that file.

96
00:06:40.062 --> 00:06:44.456
So I'm in packages &gt; chat, so

97
00:06:44.456 --> 00:06:50.884
I wanna go one up and
then into chat-stdlib.

98
00:06:50.884 --> 00:06:53.143
So this will get me out to packages, and

99
00:06:53.143 --> 00:06:57.598
then I'm gonna enter into chat-stdli/dist,
and then there's the beta.

100
00:06:57.598 --> 00:07:01.222
And go back here and
the error is resolved.

101
00:07:01.222 --> 00:07:04.110
StringifyError is coming through.

102
00:07:04.110 --> 00:07:06.706
There's the beta annotation there.

103
00:07:06.706 --> 00:07:10.370
So we're now consuming
this as a dependency.

104
00:07:10.370 --> 00:07:13.709
It's as if it's in our
node modules folder.

105
00:07:13.709 --> 00:07:14.921
Pretty cool.

106
00:07:14.921 --> 00:07:18.399
So we just did the beta types.

107
00:07:18.399 --> 00:07:21.134
Let's just run yarn type check.

108
00:07:21.134 --> 00:07:22.450
I bet there's more.

109
00:07:24.514 --> 00:07:25.604
There's got to be.

110
00:07:27.838 --> 00:07:29.100
Maybe this one.

111
00:07:32.476 --> 00:07:36.141
Sorry, it's time checking
the whole repo now.

112
00:07:38.906 --> 00:07:41.737
There it is, api.ts.

113
00:07:41.737 --> 00:07:43.000
It needs deferred.

114
00:07:43.000 --> 00:07:46.316
We're gonna bring that in from
chat standard library, and

115
00:07:46.316 --> 00:07:48.317
it'll resolve cuz it's in there.

116
00:07:55.345 --> 00:07:56.205
That should be it.

117
00:07:56.205 --> 00:07:58.567
I thought this was just like a two-liner.

118
00:07:58.567 --> 00:07:59.768
Yep, there we go.

