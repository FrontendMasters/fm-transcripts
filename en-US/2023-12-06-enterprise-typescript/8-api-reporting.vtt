WEBVTT

1
00:00:00.150 --> 00:00:04.746
The next thing we're gonna
add to our little TypeScript

2
00:00:04.746 --> 00:00:09.160
library is an API surface report and
documentation.

3
00:00:10.320 --> 00:00:15.305
So we're gonna install some new
tools in order to make this work.

4
00:00:15.305 --> 00:00:17.040
I'm gonna kill my yarn watch.

5
00:00:18.460 --> 00:00:20.145
I'm gonna make a quick git commit.

6
00:00:27.747 --> 00:00:29.645
Just seeing what was changed here.

7
00:00:29.645 --> 00:00:31.781
This just looks like the yarn watch stuff.

8
00:00:38.190 --> 00:00:43.302
Really important that
we start this next part

9
00:00:43.302 --> 00:00:48.285
of the course with
a clean git staging area.

10
00:00:51.414 --> 00:00:56.017
Cleat, it's not what Linux knows about.

11
00:00:56.017 --> 00:01:00.698
All right, so
time to add a couple new dependencies,

12
00:01:00.698 --> 00:01:06.433
yarn add -d for dev dependency,
microsoft/api-extractor.

13
00:01:08.379 --> 00:01:12.786
Microsoft/api-documenter.

14
00:01:17.474 --> 00:01:18.391
That is all.

15
00:01:25.324 --> 00:01:30.985
So as before, new tool, new config file,
new way to create a starting point

16
00:01:30.985 --> 00:01:36.574
with a little CLI command so we don't
have to write a bunch of stuff by hand.

17
00:01:36.574 --> 00:01:44.689
And this one is yarn api-extractor --init.

18
00:01:44.689 --> 00:01:46.355
No, sorry, no dash dash.

19
00:01:49.498 --> 00:01:54.215
Okay, this route was ran successfully.

20
00:01:54.215 --> 00:01:58.637
api-extractor.com, that's where you
can look if you wanna learn more about

21
00:01:58.637 --> 00:01:59.297
this tool.

22
00:01:59.297 --> 00:02:05.162
The purpose we are using this tool for
is a couple of things.

23
00:02:05.162 --> 00:02:09.474
It's gonna generate an API surface
report so that if we make pull requests

24
00:02:09.474 --> 00:02:13.923
against this library, that might change
the public API surface, it'll be

25
00:02:13.923 --> 00:02:18.324
super obvious to us and we'll know
exactly how the public API is changing.

26
00:02:18.324 --> 00:02:23.404
Sometimes this can be a little bit subtle,
when you have deep modules

27
00:02:23.404 --> 00:02:27.871
within a library and
maybe the return type of some function is

28
00:02:27.871 --> 00:02:33.144
ultimately exposed through
the library's publicly usable surface.

29
00:02:33.144 --> 00:02:36.770
It's a great change
detection mechanism there.

30
00:02:36.770 --> 00:02:42.540
And we're also going to use it to
create declaration file roll ups.

31
00:02:42.540 --> 00:02:47.841
So I mentioned that we're gonna have this
idea of the publicly visible types, like

32
00:02:47.841 --> 00:02:53.159
people who just conventionally consume
this library, they'll use these types.

33
00:02:53.159 --> 00:02:55.467
We'll have a type for beta testers.

34
00:02:55.467 --> 00:02:58.236
We'll have some types for alpha testers.

35
00:02:58.236 --> 00:03:02.881
And then we might have a set of types
that's just for it's exposing all

36
00:03:02.881 --> 00:03:07.778
the internal stuff too, maybe we use
that for our Jest testing purposes.

37
00:03:07.778 --> 00:03:11.499
If we really wanted to write tests
against some internal things,

38
00:03:11.499 --> 00:03:16.450
there's another declaration file that lets
us reveal all the internal stuff as well.

39
00:03:16.450 --> 00:03:22.310
But you wouldn't see those, you'd have
to do something explicit to consume

40
00:03:22.310 --> 00:03:28.819
anything other than sort of the public
types, that's what everyone gets normally.

41
00:03:28.819 --> 00:03:34.333
All right, so let's look at this file
that was created, api-extractor.json.

42
00:03:34.333 --> 00:03:38.520
It's pretty huge, and we're gonna make
a couple very small changes here.

43
00:03:38.520 --> 00:03:43.674
So where's this outline?

44
00:03:43.674 --> 00:03:48.436
So this little outline thing is nice when
you're browsing a big JSON document,

45
00:03:48.436 --> 00:03:50.008
it's part of VS Code now.

46
00:03:50.008 --> 00:03:54.004
We're going to focus on
this dtsRollup section.

47
00:03:54.004 --> 00:04:01.674
You could also scroll down here and look
for a top-level key, dtsRollup, right?

48
00:04:01.674 --> 00:04:04.373
But if you're somewhere else and
you click this,

49
00:04:04.373 --> 00:04:07.080
it'll take you right to it,
which is kinda nice.

50
00:04:07.080 --> 00:04:12.812
Okay, so we've got something here called.

51
00:04:12.812 --> 00:04:17.358
Well, first we wanna say that add
a comma here after enabled true,

52
00:04:17.358 --> 00:04:20.535
cuz we're gonna uncomment
some stuff below.

53
00:04:20.535 --> 00:04:24.359
And next we're gonna go to
this untrimmedFilePath.

54
00:04:24.359 --> 00:04:28.083
The untrimmed file,
like the declaration file roll up,

55
00:04:28.083 --> 00:04:31.349
will contain all the private and
internal stuff.

56
00:04:31.349 --> 00:04:37.058
So we're gonna add a little
word after that, -private.

57
00:04:37.058 --> 00:04:44.485
This tool in this unscoped package name,
it's just gonna put chat-stdlib.

58
00:04:44.485 --> 00:04:48.037
It's gonna get that from package json,
it's the name of your package,

59
00:04:48.037 --> 00:04:48.922
we'll go there.

60
00:04:48.922 --> 00:04:50.932
So there's your untrimmedFilePath.

61
00:04:50.932 --> 00:04:52.449
We're gonna keep scrolling down.

62
00:04:52.449 --> 00:04:55.042
We've got an alphaTrimmedFilePath.

63
00:04:55.042 --> 00:05:00.635
If we look at that, hey, an alpha's
already there, that's totally acceptable.

64
00:05:00.635 --> 00:05:03.648
A betaTrimmedFilePath,
we'll uncomment this as well,

65
00:05:03.648 --> 00:05:07.342
there's a -beta, that's something
someone would have to opt into.

66
00:05:07.342 --> 00:05:10.959
And then publicTrimmedFilePath.

67
00:05:10.959 --> 00:05:14.939
And I'm gonna delete the public here so

68
00:05:14.939 --> 00:05:21.583
that it's just the name of the package,
chat-stdlib.d.ts.

69
00:05:21.583 --> 00:05:26.032
There's one more thing
we gotta enable here.

70
00:05:26.032 --> 00:05:32.851
And I believe it's all the way
up at the top, yes it is.

71
00:05:32.851 --> 00:05:37.776
It's gonna be mainEntryPointFilePath,
it's right below the Schema.

72
00:05:37.776 --> 00:05:40.827
So go up to the top of the file,

73
00:05:40.827 --> 00:05:46.701
it'll be the first uncommented
thing that you see here.

74
00:05:46.701 --> 00:05:52.160
The input for
API extractor is the declaration file,

75
00:05:52.160 --> 00:05:57.508
the entry point declaration file for
your library.

76
00:05:57.508 --> 00:06:00.442
So this is in our dist folder.

77
00:06:00.442 --> 00:06:03.610
If your library had more than one file,

78
00:06:03.610 --> 00:06:09.092
these roll up files would contain
all of the types for your library.

79
00:06:09.092 --> 00:06:11.680
You look in there and
there would be module declarations.

80
00:06:11.680 --> 00:06:15.556
It's still one file, but it would
represent all of the different modules

81
00:06:15.556 --> 00:06:19.637
that you're publishing with your library,
that's what makes it a rollup.

82
00:06:19.637 --> 00:06:23.769
We won't see that here because
we're dealing with one file.

83
00:06:23.769 --> 00:06:30.004
Okay, that should be everything we
need to do in this config file, so

84
00:06:30.004 --> 00:06:35.275
we can go ahead and close this and
not worry about it again.

85
00:06:35.275 --> 00:06:38.800
Let's make a new directory called etc.

86
00:06:42.247 --> 00:06:46.357
And then we're gonna
run yarn api-extractor,

87
00:06:53.504 --> 00:06:56.461
run --local.

88
00:06:56.461 --> 00:07:01.463
The next thing you're gonna run is
yarn api-extractor run --local.

89
00:07:01.463 --> 00:07:02.457
We're gonna press Enter.

90
00:07:06.377 --> 00:07:07.747
And here's what it spits out.

91
00:07:11.248 --> 00:07:15.226
So first, because we're using
a very modern version of

92
00:07:15.226 --> 00:07:19.978
the TypeScript compiler right now,
it's telling us about this.

93
00:07:19.978 --> 00:07:24.179
Everything's gonna be okay, we're not
using any TypeScript 5.3 features in this

94
00:07:24.179 --> 00:07:25.627
library, so it'll be fine.

95
00:07:25.627 --> 00:07:31.347
And this is kept up-to-date,
it just lags a little bit behind,

96
00:07:31.347 --> 00:07:36.342
but it will be ready in a couple of weeks,
I would assume.

97
00:07:36.342 --> 00:07:40.809
And it says the api report file was
missing, so a new file was created,

98
00:07:40.809 --> 00:07:42.639
please add this file to git.

99
00:07:42.639 --> 00:07:46.518
And it looks like in our etc folder,
it created a markdown file.

100
00:07:46.518 --> 00:07:48.634
Let's look at what's in that file.

101
00:07:48.634 --> 00:07:51.525
So here's our etc folder.

102
00:07:51.525 --> 00:07:54.474
Here's this, and
I'm gonna view this markdown file.

103
00:07:58.339 --> 00:08:02.448
And look at that, here's our api
report and rendered markdown.

104
00:08:02.448 --> 00:08:07.092
And you can see that we've got a public
and then we've got a beta here.

105
00:08:07.092 --> 00:08:09.822
We're told not to edit this file directly,
but

106
00:08:09.822 --> 00:08:12.832
it sort of describes the API
surface of our library.

107
00:08:12.832 --> 00:08:15.474
It's not really documentation,

108
00:08:15.474 --> 00:08:21.312
there are code comments around deferred
and the stringify error function.

109
00:08:21.312 --> 00:08:24.245
It's not there,
this is just the API surface.

110
00:08:24.245 --> 00:08:27.840
So what we'll wanna do here,
what do I need to do?

111
00:08:31.089 --> 00:08:32.846
I'm not gonna worry about that.

112
00:08:32.846 --> 00:08:35.765
I have marked down linting in
another part of this project, but

113
00:08:35.765 --> 00:08:36.875
we should be fine here.

114
00:08:36.875 --> 00:08:41.672
So I'm gonna close this,
I'm gonna close this, and it's important.

115
00:08:41.672 --> 00:08:45.650
We have to make one more change and
then we're gonna, well,

116
00:08:45.650 --> 00:08:48.782
two more changes, and
then we're gonna save.

117
00:08:48.782 --> 00:08:51.376
So we're gonna create a temp folder.

118
00:08:53.093 --> 00:08:55.652
And we wanna git ignore this.

119
00:08:55.652 --> 00:08:59.200
It seems, I already have
something in this temp folder.

120
00:08:59.200 --> 00:09:03.448
I don't wanna check this into git,
this is just sort of working state.

121
00:09:03.448 --> 00:09:06.767
This is files that API
extractor leaves around for

122
00:09:06.767 --> 00:09:09.463
other things that are built on top of it.

123
00:09:09.463 --> 00:09:12.868
So let's go into gitignore, and
down at the bottom we can say,

124
00:09:21.178 --> 00:09:24.576
Something like that.

125
00:09:24.576 --> 00:09:28.386
And then one more thing before we commit,
and

126
00:09:28.386 --> 00:09:33.998
that is going back to our package json,
we wanna be very deliberate

127
00:09:33.998 --> 00:09:38.824
about what types we expose to
consumers of this library.

128
00:09:38.824 --> 00:09:43.680
And if we look right now,
we've got this dist/index.js.

129
00:09:43.680 --> 00:09:47.936
And so what's implied by
this is in our dist folder,

130
00:09:47.936 --> 00:09:54.133
this index.d.ts kind of describes
the types associated with index.js,

131
00:09:54.133 --> 00:09:58.905
and that's what's gonna end
up being consumed, right?

132
00:09:58.905 --> 00:10:02.897
But we can change our mind there,
we can make it more explicit.

133
00:10:02.897 --> 00:10:07.578
And we're gonna say it's

134
00:10:07.578 --> 00:10:13.327
dist/chat-stdlib.d.ts.

135
00:10:13.327 --> 00:10:18.099
And why don't we go ahead and look at the
differences between our index declaration

136
00:10:18.099 --> 00:10:21.662
file and all of these things
that came out of api-extractor?

137
00:10:21.662 --> 00:10:23.936
These are our roll ups,
this is part of what came out.

138
00:10:26.366 --> 00:10:29.465
So this was the line I added.

139
00:10:29.465 --> 00:10:35.433
So our index declaration file,
the important thing to note here is this.

140
00:10:35.433 --> 00:10:40.723
This stringifyError function
is exported from our library,

141
00:10:40.723 --> 00:10:44.800
but we indicated that it is for
beta users only.

142
00:10:44.800 --> 00:10:49.729
This should not be included
in the stable API surface of

143
00:10:49.729 --> 00:10:52.418
our library, but it is here.

144
00:10:52.418 --> 00:10:58.832
If we go to this thing that
we're calling our public types,

145
00:10:58.832 --> 00:11:02.821
there's no function at the bottom.

146
00:11:02.821 --> 00:11:08.292
Hey, and there's even a note telling
us something could have been here,

147
00:11:08.292 --> 00:11:10.242
but it was stripped away.

148
00:11:10.242 --> 00:11:15.616
Because it's not part of what should
be exposed for this release type,

149
00:11:15.616 --> 00:11:20.644
like a stable public release,
including no beta functionality.

150
00:11:20.644 --> 00:11:21.974
And we'll go and look at beta.

151
00:11:21.974 --> 00:11:26.768
We'll sort of go in reverse
order of maturity here.

152
00:11:26.768 --> 00:11:35.142
Well, beta, it does include a function
declaration for this function.

153
00:11:35.142 --> 00:11:38.834
Alpha, well,
it's also gonna include the beta thing.

154
00:11:38.834 --> 00:11:42.301
But if there were things marked alpha,
they would first appear here,

155
00:11:42.301 --> 00:11:44.077
they wouldn't be in the beta file.

156
00:11:44.077 --> 00:11:51.492
And then finally, in the private file,
we should see stringifyError.

157
00:11:51.492 --> 00:11:54.061
We don't see a private thing here.

158
00:11:54.061 --> 00:11:55.797
Okay, there's one more thing.

159
00:11:59.298 --> 00:12:02.918
You don't have to make this change,
but I'll just show you how it works.

160
00:12:02.918 --> 00:12:07.951
If we did this and ran our api-extractor.

161
00:12:07.951 --> 00:12:10.229
&gt;&gt; Do you have to rebuild the index DTS,

162
00:12:10.229 --> 00:12:12.973
since that's the-
&gt;&gt; I will, I will.

163
00:12:12.973 --> 00:12:15.224
Yeah, I do have to rebuild,
thanks for catching that.

164
00:12:17.845 --> 00:12:19.103
I think it'll work now.

165
00:12:23.160 --> 00:12:25.024
There it is.

166
00:12:25.024 --> 00:12:29.684
So that's private, and let's switch it
back to internal and see what happens.

167
00:12:33.854 --> 00:12:34.572
Build.

168
00:12:40.981 --> 00:12:42.393
And it's gone.

169
00:12:42.393 --> 00:12:46.678
Part of why it's gone,
or the reason it's gone,

170
00:12:46.678 --> 00:12:50.771
is in our tsconfig we had
an option here called,

171
00:12:53.193 --> 00:12:55.626
It's up here, stripInternal.

172
00:12:55.626 --> 00:13:01.078
Disable admitting declarations that have
the internal tag in their js.comments.

173
00:13:01.078 --> 00:13:04.341
So that would be something where
you truly, you want it dropped.

174
00:13:04.341 --> 00:13:07.979
You don't want any declarations
there in any of the rollups.

175
00:13:07.979 --> 00:13:12.947
But you have three different
pre-GA release types you

176
00:13:12.947 --> 00:13:18.023
can deal with there,
you have private, alpha, beta.

177
00:13:20.332 --> 00:13:21.875
So you can imagine.

178
00:13:21.875 --> 00:13:24.992
And we when we import
this into our chat app,

179
00:13:24.992 --> 00:13:27.951
we're gonna need to use a beta function.

180
00:13:27.951 --> 00:13:32.997
And I'll show you how you
can explicitly refer to that

181
00:13:32.997 --> 00:13:37.721
DTS rollup and
say I wanna use that one as my types.

182
00:13:37.721 --> 00:13:42.371
And this is I think okay,
because if you have someone

183
00:13:42.371 --> 00:13:47.245
who's opting into that,
that's a deliberate step.

184
00:13:47.245 --> 00:13:50.266
And in doing so, they're consuming
something that says beta, and

185
00:13:50.266 --> 00:13:51.758
they have to write the word beta.

186
00:13:51.758 --> 00:13:57.625
And they couldn't come back and
say, hey, you've changed this.

187
00:13:57.625 --> 00:14:02.078
So we got a question in the class about
what happens if you don't see all

188
00:14:02.078 --> 00:14:04.505
of these different DTS rollup files?

189
00:14:04.505 --> 00:14:06.846
And what happens if the wrong
things are in there,

190
00:14:06.846 --> 00:14:08.757
if you're not seeing what I'm seeing?

191
00:14:08.757 --> 00:14:13.800
The thing that I would check is, first,
if you're seeing anything at all in there,

192
00:14:13.800 --> 00:14:18.632
you probably have this main entry point
defined properly, that's the input for

193
00:14:18.632 --> 00:14:19.644
API extractor.

194
00:14:19.644 --> 00:14:23.069
And then you wanna go and
look at untrimmedFilePath.

195
00:14:23.069 --> 00:14:29.290
And this is when we're talking about
untrimmed, aside from stripInternal,

196
00:14:29.290 --> 00:14:33.447
untrimmed means the private
stuff is left in there.

197
00:14:33.447 --> 00:14:37.007
In fact, if you didn't have
stripInternal turned on,

198
00:14:37.007 --> 00:14:41.115
the internal stuff would be in
there as well, truly untrimmed.

199
00:14:41.115 --> 00:14:43.720
&gt;&gt; Sorry, could you scroll over there?

200
00:14:43.720 --> 00:14:46.856
Yeah, mine did not specify the -private.

201
00:14:46.856 --> 00:14:48.114
&gt;&gt; I added that when
we were going through.

202
00:14:48.114 --> 00:14:51.038
&gt;&gt; That's what I missed, thank you.

203
00:14:51.038 --> 00:14:53.753
&gt;&gt; Their defaults are a little different
compared to what I would prefer.

204
00:14:53.753 --> 00:14:56.213
They have this as the default here.

205
00:14:56.213 --> 00:14:59.929
And I like, if a user's gonna
consume my private types,

206
00:14:59.929 --> 00:15:04.125
I would like them to write the word
private, so I tend to do this.

207
00:15:04.125 --> 00:15:08.476
And they added the word,
if we go down to the public one,

208
00:15:08.476 --> 00:15:13.027
publicTrimmedFilepath, they
add the word public here.

209
00:15:13.027 --> 00:15:16.622
And I want the default to be public.

210
00:15:16.622 --> 00:15:20.337
If you're just using
library name DTS like that,

211
00:15:20.337 --> 00:15:26.085
you're not writing the word private,
you're not writing the word public,

212
00:15:26.085 --> 00:15:31.050
those are the types,
that's the library, that's the default.

213
00:15:31.050 --> 00:15:33.890
That's my own convention, you can
pick whatever convention you'd like.

214
00:15:33.890 --> 00:15:37.102
Some people even like to put this
DTS file in a different folder,

215
00:15:37.102 --> 00:15:40.978
like a temporary folder, and then
they'll just build these rollup things.

216
00:15:40.978 --> 00:15:44.365
So they'll basically get rid of
this file as part of their build,

217
00:15:44.365 --> 00:15:46.285
which is a valid thing to do, right?

218
00:15:46.285 --> 00:15:50.787
Nobody needs that file anymore, and it's
just one more thing someone could point

219
00:15:50.787 --> 00:15:53.282
to, and then there's this beta thing here.

220
00:15:53.282 --> 00:15:59.300
But that would simply be a matter of
making your out there a little different.

221
00:15:59.300 --> 00:16:04.338
Or having a rim raf star dot disk slash
startup DTS, something like that,

222
00:16:04.338 --> 00:16:09.800
to strip those away, and you would only
do that after the rollups are complete.

