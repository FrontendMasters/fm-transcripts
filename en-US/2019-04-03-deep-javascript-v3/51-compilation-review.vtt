WEBVTT

1
00:00:00.090 --> 00:00:03.250
&gt;&gt; Kyle Simpson: Okay, so hopefully we're
feeling pretty good about lexical scope.

2
00:00:03.250 --> 00:00:08.730
But let's test some of the little edges
and corner cases that exist within this.

3
00:00:08.730 --> 00:00:11.750
Let's make sure our
understanding is fully working.

4
00:00:11.750 --> 00:00:15.560
So, we're gonna process this exactly the
same way as we did on the previous slide,

5
00:00:15.560 --> 00:00:20.580
which is that we want to first do the
compilation, and then do the execution.

6
00:00:20.580 --> 00:00:23.530
Since you're now all experts and
certified in this I'm gonna expect

7
00:00:23.530 --> 00:00:27.850
you to be able to follow along and
say out loud with me all of these things.

8
00:00:27.850 --> 00:00:31.080
So processing begins with the compiler
talking to the scope manager.

9
00:00:31.080 --> 00:00:33.920
And compiler says on line one,
hey scope manager.

10
00:00:33.920 --> 00:00:36.680
Hey global scope, I have a,
what kind of reference?

11
00:00:37.820 --> 00:00:42.310
I have a formal declaration, in execution
it will be a target reference but,

12
00:00:42.310 --> 00:00:44.210
during my compilation I have a formal

13
00:00:44.210 --> 00:00:45.850
declaration for

14
00:00:45.850 --> 00:00:46.550
&gt;&gt; Speaker 2: Teacher
&gt;&gt; Kyle Simpson: Teacher.

15
00:00:46.550 --> 00:00:47.180
Ever heard of it?

16
00:00:47.180 --> 00:00:48.210
And the answer is

17
00:00:48.210 --> 00:00:49.370
&gt;&gt; Speaker 2: Yes
&gt;&gt; Speaker 3: No

18
00:00:49.370 --> 00:00:50.550
&gt;&gt; Kyle Simpson: No, haven't heard of it.

19
00:00:50.550 --> 00:00:52.400
This is in compilation stage.

20
00:00:52.400 --> 00:00:54.100
We will of heard of it in execution.

21
00:00:54.100 --> 00:00:56.200
In compilation stage
we'd never heard of it.

22
00:00:56.200 --> 00:00:59.570
So we go ahead and
create what kind of marble?

23
00:00:59.570 --> 00:01:00.779
&gt;&gt; Speaker 3: Red.
&gt;&gt; Kyle Simpson: Here's your red

24
00:01:00.779 --> 00:01:01.740
marble, okay?

25
00:01:01.740 --> 00:01:06.200
And we drop the red ball, boop,
directly into the red bucket.

26
00:01:06.200 --> 00:01:09.120
Now we find the next formal
declaration on what line?

27
00:01:09.120 --> 00:01:09.690
&gt;&gt; Speaker 3: Three.

28
00:01:09.690 --> 00:01:10.570
&gt;&gt; Kyle Simpson: Line three.

29
00:01:10.570 --> 00:01:11.860
We have the formal declaration.

30
00:01:11.860 --> 00:01:15.320
Hey global scope formal declaration for
an identifier called.

31
00:01:16.390 --> 00:01:17.520
OtherClass.
OtherClass, ever heard of it?

32
00:01:17.520 --> 00:01:18.590
And the answer is?

33
00:01:18.590 --> 00:01:19.300
&gt;&gt; Speaker 3: No.

34
00:01:19.300 --> 00:01:20.330
&gt;&gt; Kyle Simpson: Never heard of it.

35
00:01:20.330 --> 00:01:22.162
Great, so we need a what?

36
00:01:22.162 --> 00:01:23.214
&gt;&gt; Speaker 3: Red marble.
&gt;&gt; Kyle Simpson: Red marble.

37
00:01:23.214 --> 00:01:26.370
Here's your red marble, boop,
goes in the red bucket.

38
00:01:26.370 --> 00:01:28.710
By the way, global scope,
that's a function.

39
00:01:28.710 --> 00:01:30.330
It needs its own bucket.

40
00:01:30.330 --> 00:01:31.960
Can you make me a blue bucket?

41
00:01:31.960 --> 00:01:34.150
Sure, we make a blue bucket.

42
00:01:34.150 --> 00:01:37.230
Here is your blue bucket and
now we step into that scope and

43
00:01:37.230 --> 00:01:40.900
we process its plan, or we make it's plan.

44
00:01:40.900 --> 00:01:44.850
So where is the next formal
declaration that we find?

45
00:01:44.850 --> 00:01:45.935
&gt;&gt; Speaker 2: Line four.

46
00:01:45.935 --> 00:01:47.429
&gt;&gt; Speaker 3: Nine.

47
00:01:47.429 --> 00:01:48.602
&gt;&gt; Speaker 2: Wait a minute.

48
00:01:48.602 --> 00:01:50.540
&gt;&gt; Kyle Simpson: Is line
four a formal declaration?

49
00:01:50.540 --> 00:01:51.910
&gt;&gt; Speaker 3: No.
&gt;&gt; Kyle Simpson: There's no var there.

50
00:01:51.910 --> 00:01:54.030
What about line five,
is that a formal declaration?

51
00:01:54.030 --> 00:01:55.199
&gt;&gt; Speaker 3: No.
&gt;&gt; Kyle Simpson: What about line six,

52
00:01:55.199 --> 00:01:56.330
formal declaration?

53
00:01:56.330 --> 00:01:56.880
&gt;&gt; Speaker 2: No.

54
00:01:56.880 --> 00:01:58.680
&gt;&gt; Kyle Simpson: We don't
make any blue marbles, do we?

55
00:01:59.790 --> 00:02:02.490
Okay, so keep that in mind.

56
00:02:02.490 --> 00:02:04.500
You may be wondering what's
gonna happen with line five, and

57
00:02:04.500 --> 00:02:08.510
we'll talk about that during execution,
but from the perspective of the compiler,

58
00:02:08.510 --> 00:02:11.219
we didn't have any formal declarations,
so there's no marbles to create.

59
00:02:12.750 --> 00:02:15.250
Okay so we're done with the blue bucket.

60
00:02:15.250 --> 00:02:18.800
Effectively it exists, but
effectively it has no marbles in it.

61
00:02:18.800 --> 00:02:20.500
We step back out to the global scope.

62
00:02:20.500 --> 00:02:23.190
Do we find anymore formal
declarations in this program?

63
00:02:23.190 --> 00:02:24.110
&gt;&gt; Speaker 3: No.

64
00:02:24.110 --> 00:02:25.950
&gt;&gt; Kyle Simpson: So
we're done with compilation.

65
00:02:25.950 --> 00:02:27.870
Thumbs up, thumbs down, how do we feel?

66
00:02:27.870 --> 00:02:29.589
Okay, same process as before.

67
00:02:29.589 --> 00:02:32.822
And I'm trying to train you to have
that narrative in your head even if

68
00:02:32.822 --> 00:02:36.210
you never say the words out loud
ever again after this workshop.

69
00:02:36.210 --> 00:02:38.440
I want you to think that
narrative in your head.

70
00:02:38.440 --> 00:02:42.650
Think about the question and answering
that is happening because that talks about

71
00:02:42.650 --> 00:02:49.270
or illustrates the interchange that occurs
between the compiler and the scope plan.

72
00:02:49.270 --> 00:02:50.870
That's how you understand how scopes work,

73
00:02:50.870 --> 00:02:54.820
is when you understand how they get
set up, and how they get used, okay?

74
00:02:54.820 --> 00:02:56.330
So now, let's execute this code.

75
00:02:56.330 --> 00:03:01.720
It executes exactly the same way as we
would have, done in the previous slide.

76
00:03:01.720 --> 00:03:04.063
So we remember,
there's no formal declarations but

77
00:03:04.063 --> 00:03:05.890
there are executable statements.

78
00:03:05.890 --> 00:03:08.120
Line one has an executable statement.

79
00:03:08.120 --> 00:03:10.410
And so we are the engine and

80
00:03:10.410 --> 00:03:14.450
we say, hey, global scope,
I have a.what kind of reference?

81
00:03:15.510 --> 00:03:16.790
&gt;&gt; Speaker 3: Target.
&gt;&gt; Kyle Simpson: I have a target reference

82
00:03:16.790 --> 00:03:17.399
for teacher.

83
00:03:17.399 --> 00:03:18.050
Ever heard of it?

84
00:03:18.050 --> 00:03:19.360
And the answer is,
&gt;&gt; Speaker 2: Yes.

85
00:03:19.360 --> 00:03:20.449
&gt;&gt; Kyle Simpson: Nope.
&gt;&gt; Speaker 2: Yeah.

86
00:03:20.449 --> 00:03:21.194
&gt;&gt; Kyle Simpson: Here's your red marble.

87
00:03:21.194 --> 00:03:22.648
Yes, right yes.

88
00:03:22.648 --> 00:03:24.058
Here’s your what color marble?

89
00:03:24.058 --> 00:03:24.944
&gt;&gt; Speaker 3: Red.

90
00:03:24.944 --> 00:03:26.184
&gt;&gt; Kyle Simpson: Here’s your red marble.

91
00:03:26.184 --> 00:03:30.405
Great, we take the value quote Kyle,
we assign it into the red marble, and

92
00:03:30.405 --> 00:03:32.310
we are complete.

93
00:03:32.310 --> 00:03:33.580
Everybody good with that?

94
00:03:33.580 --> 00:03:34.190
All right.

95
00:03:34.190 --> 00:03:37.220
Now remember, functions are declarations,
they don't really exist.

96
00:03:37.220 --> 00:03:39.380
At least, they're only here symbolically.

97
00:03:39.380 --> 00:03:43.940
So we're going to move from the function
to the next execution line of code,

98
00:03:43.940 --> 00:03:45.480
which would be line nine.

99
00:03:45.480 --> 00:03:46.849
How does line nine execute?

100
00:03:49.220 --> 00:03:50.580
&gt;&gt; Speaker 3: Hey global scope.

101
00:03:50.580 --> 00:03:52.960
&gt;&gt; Kyle Simpson: Hey global scope,
that's the red bucket.

102
00:03:52.960 --> 00:03:55.550
Hey global scope I have what
kind of reference here?

103
00:03:55.550 --> 00:03:57.050
What kind of reference
do I have on line nine?

104
00:03:57.050 --> 00:03:57.752
&gt;&gt; Speaker 2: Source.

105
00:03:57.752 --> 00:03:59.809
&gt;&gt; Kyle Simpson: Source reference,
I have a source reference for

106
00:03:59.809 --> 00:04:01.580
an identifier called other class.

107
00:04:01.580 --> 00:04:03.410
Have you ever heard of him before?

108
00:04:03.410 --> 00:04:04.670
And the answer is?

109
00:04:04.670 --> 00:04:05.300
&gt;&gt; Speaker 2: Yes, here's your red marble.

110
00:04:05.300 --> 00:04:06.470
&gt;&gt; Kyle Simpson: Here's your red marble.

111
00:04:06.470 --> 00:04:07.573
Thanks, you're picking up on it.

112
00:04:07.573 --> 00:04:10.140
Right, here's your red marble, okay?

113
00:04:10.140 --> 00:04:11.280
I know it sounds silly.

114
00:04:11.280 --> 00:04:14.070
But it helps you process what would
otherwise be a really dry and

115
00:04:14.070 --> 00:04:14.750
boring topic.

116
00:04:14.750 --> 00:04:16.250
So, just stick with me, all right.

117
00:04:16.250 --> 00:04:17.430
Here's your red marble.

118
00:04:17.430 --> 00:04:20.850
So, what do we find in that red marble?

119
00:04:20.850 --> 00:04:21.430
&gt;&gt; Speaker 2: A reference.

120
00:04:21.430 --> 00:04:23.340
&gt;&gt; Kyle Simpson: A reference to
the function which we've called

121
00:04:23.340 --> 00:04:27.580
otherClass here which has attached
to it this blue bucket of scope.

122
00:04:27.580 --> 00:04:32.000
So we find that function, we execute it
with the parenthesis on line nine, and

123
00:04:32.000 --> 00:04:33.295
execution moves to what line?

124
00:04:33.295 --> 00:04:34.160
&gt;&gt; Speaker 3: Four.

125
00:04:34.160 --> 00:04:37.180
&gt;&gt; Kyle Simpson: Line four,
how does line four execute?

126
00:04:37.180 --> 00:04:38.300
&gt;&gt; Speaker 3: Hey, blue bucket.

127
00:04:38.300 --> 00:04:40.770
&gt;&gt; Kyle Simpson: Hey, blue bucket,
I have a, what kind of reference?

128
00:04:41.830 --> 00:04:42.700
&gt;&gt; Speaker 3: Source.

129
00:04:42.700 --> 00:04:46.170
&gt;&gt; Kyle Simpson: I have a target reference
because it is receiving an assignment.

130
00:04:46.170 --> 00:04:48.230
I have a target reference for teacher.

131
00:04:48.230 --> 00:04:49.880
Ever heard of it, and the answer is?

132
00:04:49.880 --> 00:04:50.480
&gt;&gt; Speaker 3: No.

133
00:04:50.480 --> 00:04:51.640
&gt;&gt; Kyle Simpson: So where do we go?

134
00:04:51.640 --> 00:04:52.820
One up.
&gt;&gt; Speaker 2: Up one.

135
00:04:52.820 --> 00:04:56.090
&gt;&gt; Kyle Simpson: Hey, global scope,
I have a target reference for

136
00:04:56.090 --> 00:04:57.570
teacher ever heard of it.

137
00:04:57.570 --> 00:04:58.570
&gt;&gt; Speaker 2: Yes.

138
00:04:58.570 --> 00:04:59.325
&gt;&gt; Kyle Simpson: Here's your.

139
00:04:59.325 --> 00:05:00.700
&gt;&gt; Speaker 3: Red marble.

140
00:05:00.700 --> 00:05:04.250
&gt;&gt; Kyle Simpson: Important to see that
it's a red marble here not a blue marble.

141
00:05:04.250 --> 00:05:09.030
Even though we're inside of the blue
scope, we are referencing a red marble.

142
00:05:09.030 --> 00:05:10.020
You with me?

143
00:05:10.020 --> 00:05:13.580
So we get a red marble and
when we assign quote Suzy to it,

144
00:05:13.580 --> 00:05:17.090
we are assigning over the value
that was currently there,

145
00:05:17.090 --> 00:05:20.500
the quote Kyle,
because it's the same marble in this case.

146
00:05:20.500 --> 00:05:24.501
This wasn't shadowed because we didn't
declare teacher inside of the otherClass

147
00:05:24.501 --> 00:05:25.080
function.

