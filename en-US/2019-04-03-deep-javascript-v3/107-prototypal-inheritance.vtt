WEBVTT

1
00:00:00.060 --> 00:00:01.250
&gt;&gt; Kyle Simpson: Speaking of inheritance,

2
00:00:01.250 --> 00:00:04.990
if we wanted to do a true sort of
child class in the prototypal style,

3
00:00:06.080 --> 00:00:10.320
we'd define line eight and
another workshop contructor.

4
00:00:10.320 --> 00:00:13.839
And the way we make
another workshop extend or

5
00:00:13.839 --> 00:00:19.034
inherit from the workshop is this
line right here, oops, sorry.

6
00:00:19.034 --> 00:00:24.160
This line right here,
line 11, object dot create.

7
00:00:24.160 --> 00:00:27.128
On line 11, object dot create,

8
00:00:27.128 --> 00:00:32.970
we are saying take the prototype that I
initially got, which is not what I want,

9
00:00:32.970 --> 00:00:37.493
and change where it is linked to make sure
that it links the workshop dot prototype.

10
00:00:37.493 --> 00:00:39.581
Object dot create does two things.

11
00:00:39.581 --> 00:00:42.260
It's a utility built in the es5 and
it does two things.

12
00:00:43.280 --> 00:00:44.750
See if this sounds familiar.

13
00:00:44.750 --> 00:00:47.920
The first thing that object dot create
does is create a brand new empty

14
00:00:47.920 --> 00:00:48.830
object dot of thin air.

15
00:00:50.020 --> 00:00:53.120
And then, the second thing it does is
it links that object to another object.

16
00:00:54.480 --> 00:00:57.070
It's the first two steps
of the new algorithm

17
00:00:57.070 --> 00:01:00.610
as a specific API method
called object dot create.

18
00:01:00.610 --> 00:01:05.089
So here, we're saying I want my
another workshop prototype to

19
00:01:05.089 --> 00:01:08.733
be prototype linked to
the workshop do prototype.

20
00:01:08.733 --> 00:01:12.977
Alternatively, again,
it's a bit of an anti pattern, but

21
00:01:12.977 --> 00:01:17.807
alternatively, you could have said
another workshop dot prototype

22
00:01:17.807 --> 00:01:21.340
dot dunderproto equals
workshop dot prototype.

23
00:01:21.340 --> 00:01:24.045
You could have rewired it that way.

24
00:01:24.045 --> 00:01:28.393
But we're creating a new
object to get a new linkage.

25
00:01:28.393 --> 00:01:33.667
And that is the effect, then,
that the js recent parts object that I've

26
00:01:33.667 --> 00:01:38.769
created on line 16, that object is
linked to the prototype object,

27
00:01:38.769 --> 00:01:42.758
which is linked to the workshop
dot prototype object.

28
00:01:42.758 --> 00:01:45.196
They're linked through that
hidden prototype chain.

29
00:01:47.030 --> 00:01:50.513
&gt;&gt; Kyle Simpson: Now, the linkage
that exists between these objects,

30
00:01:50.513 --> 00:01:52.490
that's not a bad thing at all.

31
00:01:52.490 --> 00:01:54.570
That's actually a magical awesome thing.

32
00:01:55.590 --> 00:01:58.020
But we have a whole bunch of
complexity layered on top.

33
00:01:58.020 --> 00:02:00.880
We've got all these things that
look like constructor functions.

34
00:02:00.880 --> 00:02:03.190
We've got all this verbose
dot prototype stuff.

35
00:02:03.190 --> 00:02:06.310
We've got confusing new keyword instances.

36
00:02:06.310 --> 00:02:11.039
And all of this artifice is on top of
these three objects linked together.

37
00:02:12.386 --> 00:02:15.304
&gt;&gt; Kyle Simpson: And it's the objects
being linked together that actually

38
00:02:15.304 --> 00:02:17.050
creates all of the power here.

39
00:02:17.050 --> 00:02:22.360
It creates the ability for me to say
line 18 js recent parts dot speak up.

40
00:02:22.360 --> 00:02:25.140
Does that object have
a speak up method on it?

41
00:02:26.800 --> 00:02:32.000
The line here, line 18, is there
a speak up method on JSRecentParts?

42
00:02:32.000 --> 00:02:32.620
&gt;&gt; Speaker 2: No.

43
00:02:32.620 --> 00:02:34.170
&gt;&gt; Kyle Simpson: So where does it go next?

44
00:02:34.170 --> 00:02:35.000
&gt;&gt; Speaker 2: Another workshop?

45
00:02:35.000 --> 00:02:36.730
&gt;&gt; Kyle Simpson: It goes to
another workshop prototype

46
00:02:36.730 --> 00:02:38.730
which does have a speak up.

47
00:02:38.730 --> 00:02:42.400
So when that function is invoked,
what is the thisKeyword gonna point at?

48
00:02:42.400 --> 00:02:43.310
&gt;&gt; Speaker 3: JSRecentParts.

49
00:02:43.310 --> 00:02:45.450
&gt;&gt; Kyle Simpson: Still gonna
point to JSRecentParts.

50
00:02:45.450 --> 00:02:47.025
And it says this dot ask.

51
00:02:47.025 --> 00:02:50.641
So does JSRecentParts have an ask method?

52
00:02:50.641 --> 00:02:51.820
So where's it gonna go?

53
00:02:53.170 --> 00:02:55.200
Backup to another workshop prototype.

54
00:02:55.200 --> 00:02:57.480
Does that one have an ask method on it?

55
00:02:58.950 --> 00:02:59.840
So where's it gonna go?

56
00:03:00.970 --> 00:03:03.260
Does this one have an ask method on it?

57
00:03:03.260 --> 00:03:06.420
Yes, when it invokes,
what's the this keyword gonna point at?

58
00:03:07.760 --> 00:03:10.190
Still gonna point at JSRecentParts.

59
00:03:10.190 --> 00:03:14.730
No matter how many times up the prototype
chain you have to resolve to find your

60
00:03:14.730 --> 00:03:17.720
methods, and no matter how far up they go,

61
00:03:17.720 --> 00:03:20.860
the this binding is still controlled
at the root by the call site.

62
00:03:22.200 --> 00:03:27.480
And I have a fancy academic term for
that, I call that super unicorn magic.

63
00:03:27.480 --> 00:03:33.100
That's amazing and awesome that it
can find these functions in all these

64
00:03:33.100 --> 00:03:38.140
different places in the prototype chain,
and still make sure their this context

65
00:03:38.140 --> 00:03:41.960
is exactly what we would expect,
which is rooted at the call stack.

66
00:03:43.050 --> 00:03:43.597
You had a question?

67
00:03:45.526 --> 00:03:48.285
&gt;&gt; Speaker 4: Just to absolutely confirm.

68
00:03:48.285 --> 00:03:52.206
Were line 11 not to exist, this would
break because another workshop dot

69
00:03:52.206 --> 00:03:55.030
prototype would just point
to object dot prototype.

70
00:03:55.030 --> 00:03:56.840
&gt;&gt; Kyle Simpson: That is correct, yes.

71
00:03:56.840 --> 00:03:59.500
Line 11 is the extends clause,
if you will.

72
00:03:59.500 --> 00:04:02.820
That's how we make another
workshop link to workshop.

