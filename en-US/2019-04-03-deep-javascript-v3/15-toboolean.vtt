WEBVTT

1
00:00:00.390 --> 00:00:02.880
&gt;&gt; Kyle Simpson: And finally, let's look
at the ToBoolean abstract operation.

2
00:00:02.880 --> 00:00:05.710
And by the way, these four are what we're
looking at, two primitive, two string,

3
00:00:05.710 --> 00:00:07.160
two number, and two Boolean.

4
00:00:07.160 --> 00:00:10.580
There are other abstract operations
that they refer to and use.

5
00:00:10.580 --> 00:00:12.445
So read those in the spec
if you're curious, but

6
00:00:12.445 --> 00:00:14.319
these are the major ones
you're gonna run into.

7
00:00:14.319 --> 00:00:19.575
So ToBoolean, section 7.1.2 in the spec.

8
00:00:19.575 --> 00:00:22.629
Anytime you have any value
that is not a Boolean, and

9
00:00:22.629 --> 00:00:26.930
it's used in a place that needs a Boolean,
this operation occurs.

10
00:00:26.930 --> 00:00:29.380
Exactly the same as the other ones, okay?

11
00:00:29.380 --> 00:00:33.630
This operation is less algorithmic and
more lookup.

12
00:00:34.810 --> 00:00:38.740
There's not really anything to do,
other than to say, is the value,

13
00:00:38.740 --> 00:00:43.120
what we call falsy, or not,
that's really the only question here.

14
00:00:43.120 --> 00:00:45.420
So there's essentially a look up table.

15
00:00:45.420 --> 00:00:49.700
Literally in the spec, that says, here is
the value of one of these things if so

16
00:00:49.700 --> 00:00:55.250
return false, meaning the false value
is what came back from ToBoolean.

17
00:00:55.250 --> 00:00:57.810
And otherwise just return true.

18
00:00:57.810 --> 00:01:03.680
So it defines a very specific and short
limited list of what we call falsy values.

19
00:01:03.680 --> 00:01:08.140
That is values that will return
false when coerced to a Boolean,

20
00:01:09.920 --> 00:01:12.720
and any of the various ways that
you can coerce to a Boolean.

21
00:01:12.720 --> 00:01:13.920
These are the falsy values.

22
00:01:13.920 --> 00:01:18.010
The empty string, either of the 0,
the null, the NaN, the false, and

23
00:01:18.010 --> 00:01:19.100
the undefined.

24
00:01:19.100 --> 00:01:21.756
Those are our falsy values.

25
00:01:25.439 --> 00:01:30.660
&gt;&gt; Kyle Simpson: If it's not on that list,
it is always truthy, okay?

26
00:01:30.660 --> 00:01:32.400
If it's not on the list, it is truthy.

27
00:01:32.400 --> 00:01:36.036
So some examples of things on that list,
that list is infinitely long.

28
00:01:36.036 --> 00:01:38.680
But some examples would be a string,

29
00:01:38.680 --> 00:01:42.442
a number, an object,
an array, true, function.

30
00:01:42.442 --> 00:01:43.540
Those are all truthy values.

31
00:01:44.960 --> 00:01:46.610
Let's see if you're paying attention.

32
00:01:46.610 --> 00:01:52.940
What would happen if you try
to two Boolean an empty array?

33
00:01:52.940 --> 00:01:55.260
Would it be truthy or would it be falsy?

34
00:01:55.260 --> 00:01:58.970
So pay very close attention to
how I describe to ToBoolean,

35
00:01:58.970 --> 00:02:02.600
it does not invoke the two
primitive algorithm.

36
00:02:02.600 --> 00:02:07.990
Or the two number, or the to string,
or anything, it just does a look up.

37
00:02:09.210 --> 00:02:12.729
So is the empty array
on the falsy the list?

38
00:02:12.729 --> 00:02:13.474
&gt;&gt; class: No.

39
00:02:13.474 --> 00:02:14.213
&gt;&gt; Kyle Simpson: So what must it return?

40
00:02:14.213 --> 00:02:14.994
&gt;&gt; class: Truthy.

41
00:02:14.994 --> 00:02:16.872
&gt;&gt; Kyle Simpson: True, okay?

42
00:02:16.872 --> 00:02:20.532
That's a key thing to keep in your
mind when you're doing to Booleans,

43
00:02:20.532 --> 00:02:24.690
when that's what's happening,
there's no other coercion stuff happening.

44
00:02:24.690 --> 00:02:27.830
It's just a straight look up,
is it there or is it not.

45
00:02:27.830 --> 00:02:30.880
You can't override it with a value
over to string or anything.

46
00:02:30.880 --> 00:02:33.310
It's just is it on the list or
is it not, okay?

47
00:02:34.940 --> 00:02:37.170
So that's how we get our falsy and
truthy values.

48
00:02:37.170 --> 00:02:39.560
Essentially, memorize the falsy the list,
and

49
00:02:39.560 --> 00:02:43.390
then always ask is the value on that list
if so falsy, otherwise, it must be truthy.

