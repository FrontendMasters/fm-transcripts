WEBVTT

1
00:00:00.000 --> 00:00:03.085
&gt;&gt; Kyle Simpson: So to understand that
thing that I would like there to be in

2
00:00:03.085 --> 00:00:06.879
the middle, the all or nothing sort
of conundrum that we're facing,

3
00:00:06.879 --> 00:00:10.960
I wanna dig into those pros and
cons a little bit more specifically.

4
00:00:10.960 --> 00:00:15.560
These are just my takes on the pros and
cons, this is not some objective list.

5
00:00:15.560 --> 00:00:20.652
Number one, I think one of the big pros
about systems like TypeScript and Flow,

6
00:00:20.652 --> 00:00:25.292
I said this earlier, they make the types
much more obvious in your code.

7
00:00:25.292 --> 00:00:27.790
And that's a big improvement.

8
00:00:27.790 --> 00:00:32.358
A big improvement over writing code
that's essentially completely uncertain,

9
00:00:32.358 --> 00:00:36.370
unascertainable what's gonna happen
with this particular operation.

10
00:00:37.420 --> 00:00:39.050
Making those types
obvious is a good thing.

11
00:00:40.550 --> 00:00:46.710
It's also a very strong positive
that the design of TypeScript and

12
00:00:46.710 --> 00:00:51.800
Flow, to put a pun here,
goes with the flow,

13
00:00:51.800 --> 00:00:55.920
if you will, of the way static typing
works in a lot of other languages.

14
00:00:55.920 --> 00:00:57.739
The syntaxes are very similar.

15
00:00:57.739 --> 00:00:59.709
And so
there's a strong sense of familiarity.

16
00:00:59.709 --> 00:01:03.277
When you show up to something like that,
you're not in this entirely different

17
00:01:03.277 --> 00:01:05.790
world than you've ever
done with types before.

18
00:01:05.790 --> 00:01:09.740
It feels very much like the types
that you have from a more

19
00:01:10.990 --> 00:01:14.750
typically typed language,
like a Java or C++.

20
00:01:14.750 --> 00:01:18.430
So the familiarity is a strong pro, and
I'm sure that was part of their design.

21
00:01:19.980 --> 00:01:21.035
They are extremely popular.

22
00:01:21.035 --> 00:01:25.800
It's undeniable the popularity,
especially of TypeScript.

23
00:01:25.800 --> 00:01:29.520
It seems like everyday we get an
announcement of some new major open source

24
00:01:29.520 --> 00:01:32.710
project that's completely
converting over to TypeScript.

25
00:01:32.710 --> 00:01:37.528
And just like the hype curves that build
up in the community behind something

26
00:01:37.528 --> 00:01:42.642
like a React or a Vue, they've built up
in such a strong way, with a big backing,

27
00:01:42.642 --> 00:01:46.650
TypeScript being from Microsoft,
Flow being from Facebook.

28
00:01:46.650 --> 00:01:49.388
They've built up in such a big
way with the community and

29
00:01:49.388 --> 00:01:52.651
the corporate support behind it,
that the investment to learn and

30
00:01:52.651 --> 00:01:56.810
get into one of those is gonna be an
investment that pays off for a long time.

31
00:01:56.810 --> 00:02:00.530
It's not some fad that's
gonna go away next week.

32
00:02:00.530 --> 00:02:03.030
So the popularity is a strong suit.

33
00:02:03.030 --> 00:02:05.774
There's a big community behind it,
a ton of documentation,

34
00:02:05.774 --> 00:02:09.171
a ton of momentum behind these projects,
and it certainly does make sense.

35
00:02:09.171 --> 00:02:13.504
In fact, I would absolutely say,
whether I liked TypeScript or not,

36
00:02:13.504 --> 00:02:16.882
it would be silly to me for
you to be working in a system,

37
00:02:16.882 --> 00:02:21.800
say you worked in a Microsoft .NET shop
and you wrote C# all day on the backend,

38
00:02:21.800 --> 00:02:25.200
and then you needed to do some JavaScript.

39
00:02:25.200 --> 00:02:28.453
I can't imagine a scenario where
you wouldn't use TypeScript.

40
00:02:28.453 --> 00:02:32.178
Cuz the mental context switching of,
I've been in types world and

41
00:02:32.178 --> 00:02:35.980
now I'm in non-types world,
would be nuts to me.

42
00:02:35.980 --> 00:02:38.966
So there's lots of scenarios
where it makes completes sense.

43
00:02:38.966 --> 00:02:41.980
And the popularity of that,
that's the reason why it's growing.

44
00:02:42.980 --> 00:02:47.640
And they're very sophisticated, and that
makes them really good at what they do.

45
00:02:47.640 --> 00:02:51.711
I'm actually kind of amazed at how
much something like TypeScript or

46
00:02:51.711 --> 00:02:55.992
Flow can infer from code that I even
intentionally try to obfuscate, and

47
00:02:55.992 --> 00:02:58.880
they're still able to
figure those things out.

48
00:02:58.880 --> 00:03:02.010
These tools are fantastic at that.

49
00:03:02.010 --> 00:03:07.770
So these are all strong pros, but I also
have some strong negatives against them.

