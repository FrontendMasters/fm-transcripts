WEBVTT

1
00:00:00.130 --> 00:00:03.980
&gt;&gt; Speaker 1: We've been talking about
functions in the compilation phase,

2
00:00:03.980 --> 00:00:10.250
adding their identifier as a colored
marble in the enclosing scope.

3
00:00:10.250 --> 00:00:13.720
In this example,
we have a function teacher on line one,

4
00:00:13.720 --> 00:00:15.568
what color marble is teacher gonna be?

5
00:00:15.568 --> 00:00:16.532
&gt;&gt; Speaker 2: Red.

6
00:00:16.532 --> 00:00:18.780
&gt;&gt; Speaker 1: Red, okay.

7
00:00:18.780 --> 00:00:21.510
But let's look at line three because
line looks a little bit different.

8
00:00:21.510 --> 00:00:24.380
And line three might look a little bit
more like some of the functions that

9
00:00:24.380 --> 00:00:27.230
you've seen more commonly.

10
00:00:27.230 --> 00:00:30.700
It's maybe a little less common to see
the old school function decoration,

11
00:00:30.700 --> 00:00:34.410
although I strongly prefer function
decorations just for the record.

12
00:00:34.410 --> 00:00:39.320
But most people seem to like these
days to declare variables and

13
00:00:39.320 --> 00:00:43.770
assign functions to them and usually they
even use a constant instead of a var.

14
00:00:43.770 --> 00:00:46.810
So that might look a little bit
like what you've seen recently.

15
00:00:46.810 --> 00:00:48.232
So what's happening there and

16
00:00:48.232 --> 00:00:50.919
is it any different than what's
happening with line one?

17
00:00:50.919 --> 00:00:55.881
Well, remember, there is a difference
between what can happen at compile time

18
00:00:55.881 --> 00:00:58.334
and what can happen at execution time.

19
00:00:58.334 --> 00:01:02.732
So, we do know that an identifier called
myTeacher is going to be created and

20
00:01:02.732 --> 00:01:04.669
what color marble is it gonna be?

21
00:01:04.669 --> 00:01:05.440
&gt;&gt; Speaker 2: Red.

22
00:01:05.440 --> 00:01:07.262
&gt;&gt; Speaker 1: It's gonna be red.

23
00:01:07.262 --> 00:01:10.702
We do know that there's a function
called anotherTeacher there, so

24
00:01:10.702 --> 00:01:12.789
we need to create a bucket for
it at least.

25
00:01:12.789 --> 00:01:14.700
We need to make a blue bucket.

26
00:01:14.700 --> 00:01:18.070
But because that function
is not a declaration,

27
00:01:18.070 --> 00:01:21.440
we're not gonna handle its
marble color in the same way.

28
00:01:22.840 --> 00:01:26.460
The key difference here is that
the anotherTeacher identifier,

29
00:01:26.460 --> 00:01:31.400
the one right here on line three, that
identifier is going to end up as a marble

30
00:01:31.400 --> 00:01:35.050
at compile time but it's gonna be a
different colored marble than you expect.

31
00:01:35.050 --> 00:01:38.130
It's not a red marble, it's a blue marble.

32
00:01:39.150 --> 00:01:40.870
So there is a key difference here.

33
00:01:40.870 --> 00:01:45.526
This is called a function expression
as opposed to what line one is,

34
00:01:45.526 --> 00:01:47.989
is called a function declaration.

35
00:01:47.989 --> 00:01:52.671
And one of the key differences, and
we'll see more throughout the course but

36
00:01:52.671 --> 00:01:56.418
one of the key differences
between function declarations and

37
00:01:56.418 --> 00:02:00.814
function expressions, is that
function declarations and their name,

38
00:02:00.814 --> 00:02:05.783
they attach their marble to the enclosing
scope, so we make a red marble on line one

39
00:02:05.783 --> 00:02:10.208
whereas function expressions will
add their marble to their own scope.

40
00:02:12.019 --> 00:02:15.800
&gt;&gt; Speaker 1: So the blue scope is where
the blue marble anotherTeacher ends up.

41
00:02:18.390 --> 00:02:21.532
&gt;&gt; Speaker 1: That's why on line four,
we can reference in anotherTeacher because

42
00:02:21.532 --> 00:02:24.980
there is in fact a blue
marble called anotherTeacher.

43
00:02:24.980 --> 00:02:28.930
But down on line nine,
there is no anotherTeacher, is there?

44
00:02:30.350 --> 00:02:31.750
When we're out in the global scope and

45
00:02:31.750 --> 00:02:35.750
we asked global scope you ever heard of
this red marble, it's gonna say nope,

46
00:02:35.750 --> 00:02:40.850
never heard of that red marble and what
we're gonna get there, reference error.

47
00:02:41.940 --> 00:02:45.350
So key difference, function expressions,

48
00:02:45.350 --> 00:02:48.859
put there identify your
into their own scope.

49
00:02:48.859 --> 00:02:49.840
There's a little nuance.

50
00:02:49.840 --> 00:02:51.010
Let me get to that question in a moment.

51
00:02:51.010 --> 00:02:54.880
There's a little, also, additional
nuance which is not only does that blue

52
00:02:54.880 --> 00:02:58.970
marble show up in the blue scope but
it's also read only.

53
00:03:00.180 --> 00:03:03.350
You cannot reassign
anotherTeacher on line four.

54
00:03:03.350 --> 00:03:05.219
You could not reassign
it to some other value.

55
00:03:06.230 --> 00:03:07.200
You have a question, yes?

56
00:03:07.200 --> 00:03:07.960
&gt;&gt; Speaker 2: Why would you do this?

57
00:03:07.960 --> 00:03:11.449
Why would you actually have the named
function on the right side of

58
00:03:11.449 --> 00:03:12.471
that expression?

59
00:03:12.471 --> 00:03:16.113
&gt;&gt; Speaker 1: You've probably more often
seen it as an anonymous function there,

60
00:03:16.113 --> 00:03:20.699
and we're about to discuss the difference
between what are so-called named function

61
00:03:20.699 --> 00:03:24.369
expressions, and the more common
anonymous function expression.

62
00:03:24.369 --> 00:03:26.850
Okay, so
we'll get into that in just a moment.

63
00:03:26.850 --> 00:03:30.660
So great segue, let's talk about
named function expressions.

64
00:03:32.600 --> 00:03:34.050
What is a named function expression?

65
00:03:34.050 --> 00:03:35.275
We're super creative,

66
00:03:35.275 --> 00:03:38.610
that means a function expression
that's been given a name, okay?

67
00:03:38.610 --> 00:03:40.720
So let's look at these two.

68
00:03:40.720 --> 00:03:43.220
Line one,
I'm declaring a function expression.

69
00:03:43.220 --> 00:03:44.549
Why is it a function expression?

70
00:03:47.062 --> 00:03:48.430
&gt;&gt; Speaker 2: It's assigned to a variable?

71
00:03:48.430 --> 00:03:50.690
&gt;&gt; Speaker 1: Because it's
not a function declaration,

72
00:03:50.690 --> 00:03:53.330
how do we know if something's
a function declaration

73
00:03:53.330 --> 00:03:57.040
if the word function is literally
the first thing in the statement?

74
00:03:58.390 --> 00:04:03.492
So if it's not the first thing in
the statement, if there's a variable or

75
00:04:03.492 --> 00:04:09.021
an operator or parentheses or anything,
then it's not a declaration, it is?

76
00:04:09.021 --> 00:04:10.497
&gt;&gt; Speaker 2: An expression.
&gt;&gt; Speaker 1: An expression, so

77
00:04:10.497 --> 00:04:14.430
on line one, we see a function expression,
but we see no name.

78
00:04:14.430 --> 00:04:17.990
So that's called a anonymous
function expression,

79
00:04:17.990 --> 00:04:22.520
whereas the one on line five is
a named function expression.

80
00:04:22.520 --> 00:04:25.550
So setting aside the difference
between function expressions and

81
00:04:25.550 --> 00:04:27.170
declarations for a moment.

82
00:04:27.170 --> 00:04:31.008
Here, I just wanna focus our
attention to the difference between

83
00:04:31.008 --> 00:04:35.000
anonymous function expressions and
named function expressions.

84
00:04:35.000 --> 00:04:39.183
And what I'm gonna claim is that
even though anonymous function

85
00:04:39.183 --> 00:04:43.599
expressions are vastly more common,
vastly more popular In fact,

86
00:04:43.599 --> 00:04:48.020
most of you have maybe never even
seen a named function expression.

87
00:04:48.020 --> 00:04:52.069
And that's how uncommon and
unpopular it is.

88
00:04:52.069 --> 00:04:59.129
I'm going to make the claim that you
should always, 100%, zero exception.

89
00:04:59.129 --> 00:05:02.835
I don't make very many statements
that are that absolute, 100%,

90
00:05:02.835 --> 00:05:06.480
zero exceptions, you should prefer
the named function expression,

91
00:05:06.480 --> 00:05:08.720
over the anonymous function expression.

