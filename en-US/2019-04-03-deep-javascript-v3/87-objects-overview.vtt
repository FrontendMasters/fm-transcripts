WEBVTT

1
00:00:00.231 --> 00:00:01.782
&gt;&gt; Kyle Simpson: At
the outset of the course,

2
00:00:01.782 --> 00:00:04.571
I talked about three core
pillars of the language.

3
00:00:04.571 --> 00:00:08.549
And one of those three core
pillars that's very critical for

4
00:00:08.549 --> 00:00:11.908
you to understand is
the objects oriented system.

5
00:00:11.908 --> 00:00:15.590
The objects, the this keyword and
the prototypes,

6
00:00:15.590 --> 00:00:18.694
those make up the objects oriented system.

7
00:00:18.694 --> 00:00:23.053
I'm deliberately saying objects
oriented instead of object oriented

8
00:00:23.053 --> 00:00:25.812
because this is not
strictly a class system,

9
00:00:25.812 --> 00:00:29.450
there is classes that have
been layered on top of it.

10
00:00:29.450 --> 00:00:32.810
And that is an option that
many people prefer, but

11
00:00:32.810 --> 00:00:35.530
it is not inherently a class system.

12
00:00:35.530 --> 00:00:38.510
So we're gonna start by
understanding this keyword,

13
00:00:38.510 --> 00:00:41.230
which is one of
the foundational pieces here.

14
00:00:41.230 --> 00:00:43.580
We'll look at what the class system does,

15
00:00:43.580 --> 00:00:46.800
the class keyword layered
on top of JavaScript.

16
00:00:46.800 --> 00:00:52.370
And then we'll circle back to understand
where that is syntactic sugar on top of,

17
00:00:52.370 --> 00:00:55.040
which is actually the prototype system.

18
00:00:55.040 --> 00:00:58.880
And then after we've fully
understood how JavaScript's

19
00:00:58.880 --> 00:01:03.310
objects system has been used to
implement the class pattern,

20
00:01:03.310 --> 00:01:08.460
what I'm gonna leave you with at the end
of this unit is a discussion about

21
00:01:08.460 --> 00:01:13.450
the inheritance pattern from classes
as opposed to the delegation pattern.

22
00:01:13.450 --> 00:01:17.490
And I'm gonna argue that the delegation
pattern is a more powerful pattern

23
00:01:17.490 --> 00:01:21.220
that we basically aren't taking
advantage of because we're

24
00:01:21.220 --> 00:01:25.650
focused on only doing classes
with JavaScript's prototypes.

25
00:01:25.650 --> 00:01:32.014
The delegation pattern is much more
powerful and much more widespread,

26
00:01:32.014 --> 00:01:36.724
but we sort of focus very
myopically only on classes.

27
00:01:36.724 --> 00:01:41.938
And that leads us to a comparison of
coding styles where OO is class oriented

28
00:01:41.938 --> 00:01:47.564
in JavaScript, and I've come up with a
different style of code that I call OLOO,

29
00:01:47.564 --> 00:01:51.160
which stands for
objects linked to other objects.

