WEBVTT

1
00:00:00.000 --> 00:00:02.012
&gt;&gt; Kyle Simpson: So
they can only go so far.

2
00:00:02.012 --> 00:00:04.173
They can tell you what we can
tell you at compile time, but

3
00:00:04.173 --> 00:00:07.342
they can't really tell you anything about
what's gonna happen in the real world.

4
00:00:07.342 --> 00:00:10.692
They're just gonna hope that
none of that bites you.

5
00:00:12.218 --> 00:00:14.717
&gt;&gt; Kyle Simpson: So
some examples of TypeScript and Flow, and

6
00:00:14.717 --> 00:00:17.980
these examples are actually
identical between the two.

7
00:00:17.980 --> 00:00:20.763
They use identical syntax in these cases.

8
00:00:20.763 --> 00:00:22.677
There are a few little
nuanced differences.

9
00:00:22.677 --> 00:00:27.379
But I was actually remarkably surprised
in my research for this preparation how

10
00:00:27.379 --> 00:00:31.321
similar TypeScript and Flow are in
terms of of what they look like.

11
00:00:31.321 --> 00:00:35.551
I expected a lot of differences and
there are very few, okay?

12
00:00:35.551 --> 00:00:39.391
So number one, if you don't do any
typing at all, both TypeScript and

13
00:00:39.391 --> 00:00:41.770
Flow by default will do some inferencing.

14
00:00:41.770 --> 00:00:46.170
So here they're doing a static types
inference, which means my intent that

15
00:00:46.170 --> 00:00:51.132
they're guessing, is that I want teacher,
the variable to only ever hold strings.

16
00:00:51.132 --> 00:00:53.540
And when I later try to assign
it something non-string,

17
00:00:53.540 --> 00:00:57.220
it throws me an error, and says, you're
doing an assignment that you shouldn't do.

18
00:00:58.240 --> 00:00:59.690
That's their best guess.

19
00:01:02.840 --> 00:01:09.070
Some people feel that one of the biggest
problems within types is that we

20
00:01:09.070 --> 00:01:14.414
accidentally assign a value to a variable
that is not the type we thought.

21
00:01:14.414 --> 00:01:18.617
And so for them,
static types are a big deal.

22
00:01:18.617 --> 00:01:23.445
I'm being honest with you when I
tell you that in my 20 plus years in

23
00:01:23.445 --> 00:01:28.525
coding never once, not once has a bug
been as a result of me accidentally

24
00:01:28.525 --> 00:01:33.798
assigning a number to a variable that
used to hold a string, for example.

25
00:01:33.798 --> 00:01:37.736
I do that on purpose a lot, but never
once has that accidentally happened, and

26
00:01:37.736 --> 00:01:39.450
been the source of a bug.

27
00:01:39.450 --> 00:01:42.870
So for me, that's not one of
the problems that I have.

28
00:01:42.870 --> 00:01:44.380
If it is a problem that you have,

29
00:01:44.380 --> 00:01:48.810
where bugs come because you've reassigned
something incorrectly, this is helpful.

30
00:01:50.110 --> 00:01:52.470
This is one of those features that,
for a long time,

31
00:01:52.470 --> 00:01:55.340
I said I don't need that
part of TypeScript.

32
00:01:55.340 --> 00:01:58.350
I don't like for it to complain to
me about what I assign variables,

33
00:01:58.350 --> 00:02:01.060
cuz I like to be able to assign
a number and then later a string.

34
00:02:01.060 --> 00:02:02.600
That to me is helpful, so

35
00:02:02.600 --> 00:02:05.530
I didn't like this part, and I felt like
it was solving a problem I didn't have.

36
00:02:06.900 --> 00:02:09.560
But that's what we refer
to as static types,

37
00:02:09.560 --> 00:02:14.340
inferring that the variable has a type
based upon the value that goes into it.

38
00:02:14.340 --> 00:02:17.213
JavaScript variables don't have types, but

39
00:02:17.213 --> 00:02:21.125
we're layering on this extra
requirement if you will, okay?

40
00:02:21.125 --> 00:02:23.274
So that's when we don't
annotate the types, but

41
00:02:23.274 --> 00:02:24.870
of course we can annotate the types.

42
00:02:24.870 --> 00:02:27.666
We can say teacher is definitely a string.

43
00:02:27.666 --> 00:02:31.890
We're gonna get basically the same error,
but here we're not guessing at the error.

44
00:02:31.890 --> 00:02:36.460
We're literally saying I intended for
this thing to only ever hold strings, and

45
00:02:36.460 --> 00:02:39.050
now you're trying to put
something non-string to it.

46
00:02:39.050 --> 00:02:42.240
In both cases TypeScript and
Flow are gonna throw us an error and say,

47
00:02:42.240 --> 00:02:45.000
you're assigning something
you shouldn't have, okay?

48
00:02:45.000 --> 00:02:45.500
Great

