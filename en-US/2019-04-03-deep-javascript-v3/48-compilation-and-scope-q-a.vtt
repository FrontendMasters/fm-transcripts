WEBVTT

1
00:00:00.000 --> 00:00:04.210
&gt;&gt; Speaker 1: I have a question about
the function when the compilation is

2
00:00:04.210 --> 00:00:10.780
happening, the function other class gets
its contents in the marble did you say?

3
00:00:12.380 --> 00:00:13.865
&gt;&gt; Kyle Simpson: I'm
not sure I'm following.

4
00:00:13.865 --> 00:00:18.110
&gt;&gt; Speaker 1: So
when other class is being compiled-

5
00:00:18.110 --> 00:00:19.580
&gt;&gt; Kyle Simpson: There's a map,

6
00:00:19.580 --> 00:00:24.290
like a plan, like a roadmap,
made up by the compiler to say, for

7
00:00:24.290 --> 00:00:28.380
that blue bucket, you need to create
an identifier called teacher.

8
00:00:28.380 --> 00:00:29.042
&gt;&gt; Speaker 1: Okay.

9
00:00:29.042 --> 00:00:32.278
&gt;&gt; Kyle Simpson: Yeah, that's what
compiler outputs is basically a plan for

10
00:00:32.278 --> 00:00:33.720
that scope.

11
00:00:33.720 --> 00:00:37.920
&gt;&gt; Speaker 1: So
when does the targeting part happen?

12
00:00:37.920 --> 00:00:40.586
&gt;&gt; Kyle Simpson: That's at run time,
which is the stage we're in now.

13
00:00:40.586 --> 00:00:45.350
At run time, when that otherClass
function is pulled from some variable,

14
00:00:45.350 --> 00:00:47.240
like it is on line 13, and

15
00:00:47.240 --> 00:00:51.660
it's executed, well now we know there's
a whole plan to make this blue bucket.

16
00:00:51.660 --> 00:00:55.690
So let's go first make the whole blue
bucket with all the marbles, and

17
00:00:55.690 --> 00:00:57.670
now we're in it and we're running it.

18
00:00:57.670 --> 00:00:59.973
And when we run across line four,

19
00:00:59.973 --> 00:01:04.020
there's a marble called teacher
in the target position.

20
00:01:05.280 --> 00:01:10.890
So we discover the source
versus target position

21
00:01:10.890 --> 00:01:15.024
at compile time, but we don't use
that information until run time.

22
00:01:15.024 --> 00:01:15.984
Does that help?

23
00:01:15.984 --> 00:01:17.148
&gt;&gt; Speaker 1: Yep, thank you.

24
00:01:17.148 --> 00:01:19.690
&gt;&gt; Speaker 3: So
it creates a place holder essentially?

25
00:01:19.690 --> 00:01:22.420
&gt;&gt; Kyle Simpson: Yeah, basically think
of it like a treasure map, right.

26
00:01:22.420 --> 00:01:26.576
There's a map, there's a plan,
it's like a to do list for every scope,

27
00:01:26.576 --> 00:01:30.213
that's what compiler outputs,
that's the executable code.

28
00:01:30.213 --> 00:01:35.960
And then when it runs is when it
all actually comes into existence.

29
00:01:35.960 --> 00:01:37.600
Yeah.
&gt;&gt; Speaker 4: One more question.

30
00:01:37.600 --> 00:01:42.300
When we enter the scope of that function,
I mean if we enter

31
00:01:42.300 --> 00:01:47.150
multiple times, there's another process
that resets the values and things.

32
00:01:47.150 --> 00:01:49.984
How does that work,
you know what I'm saying?

33
00:01:49.984 --> 00:01:51.800
&gt;&gt; Kyle Simpson: Every time
you execute a function,

34
00:01:51.800 --> 00:01:54.330
the environment is recreated from scratch.

35
00:01:54.330 --> 00:01:57.800
&gt;&gt; Speaker 4: Okay, so what does that
actually, is it like in the compiler?

36
00:01:57.800 --> 00:01:58.500
I don't know.

37
00:01:58.500 --> 00:02:02.070
&gt;&gt; Kyle Simpson: So remember, the compiler
only makes a plan for the bucket, it says,

38
00:02:02.070 --> 00:02:04.940
hey whenever you need a green bucket, this
is what the green bucket ought to look

39
00:02:04.940 --> 00:02:08.750
like, and this is what it's contents ought
to be, but it doesn't actually exist yet.

40
00:02:08.750 --> 00:02:14.500
And then every time you execute the green
bucket, that plan is effected into memory.

41
00:02:14.500 --> 00:02:18.070
And then when the green bucket finishes
that plan, all that stuff goes away, and

42
00:02:18.070 --> 00:02:23.620
then the next time you run it,
it creates it from the plan again, okay.

43
00:02:23.620 --> 00:02:28.520
So the compiler output is not actually
reserved memory, it's the plan for

44
00:02:28.520 --> 00:02:30.940
how to reserve memory and
make marbles and all that.

