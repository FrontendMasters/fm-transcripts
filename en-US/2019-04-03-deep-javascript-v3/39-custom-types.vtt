WEBVTT

1
00:00:00.080 --> 00:00:02.830
&gt;&gt; Kyle Simpson: We can get much more
sophisticated when we talk about function

2
00:00:02.830 --> 00:00:04.720
parameters and return values.

3
00:00:04.720 --> 00:00:08.397
You can define custom types like this.

4
00:00:08.397 --> 00:00:13.355
Here I'm defining that an object of a type
that has a property called name that is

5
00:00:13.355 --> 00:00:15.860
of type string, that is a type.

6
00:00:15.860 --> 00:00:19.720
And then I can pass values
of that type as parameters.

7
00:00:19.720 --> 00:00:23.190
And I can receive values
back as parameters.

8
00:00:23.190 --> 00:00:27.390
So here I am passing in
studentRec of the type student.

9
00:00:27.390 --> 00:00:29.100
I'm defining my own type if you will.

10
00:00:30.670 --> 00:00:34.410
So it's much more powerful in that
you can define these custom types.

11
00:00:34.410 --> 00:00:38.296
And this program, just to be clear,
this program doesn't have any errors.

12
00:00:38.296 --> 00:00:43.014
Because what it knows is that when I
do line 4 a return of studentRec.name,

13
00:00:43.014 --> 00:00:47.750
it knows that studentRec was an object
with a name property that was string.

14
00:00:47.750 --> 00:00:49.609
So it knows it's returning a string and

15
00:00:49.609 --> 00:00:52.776
when line 9 I try to assign it
a string it knows everything is fine.

16
00:00:52.776 --> 00:00:57.017
But you'll notice that
most of the guarantee

17
00:00:57.017 --> 00:01:01.377
here is are things being
assigned correctly.

18
00:01:01.377 --> 00:01:03.259
Are they being assigned the right types?

19
00:01:04.760 --> 00:01:08.970
A parameter to a function
is a lot like a variable.

20
00:01:08.970 --> 00:01:12.704
If you're saying I wanna only be
able to pass in numbers, then you're

21
00:01:12.704 --> 00:01:16.839
basically saying the same thing as I
want this variable to only hold numbers.

22
00:01:18.959 --> 00:01:23.377
&gt;&gt; Kyle Simpson: Where I to uses something
like typescript I probably would define

23
00:01:23.377 --> 00:01:27.430
many more of my parameters
as say union types.

24
00:01:27.430 --> 00:01:31.880
Or I would say, you know what, I'm gonna
allow strings, numbers, and nulls.

25
00:01:31.880 --> 00:01:36.000
Because it's rare that I want it to be so
restrictive

26
00:01:36.000 --> 00:01:40.000
that it can only ever receive exactly this
kind of structured object for example.

27
00:01:41.980 --> 00:01:46.720
But nevertheless,
it's able to do some very useful

28
00:01:46.720 --> 00:01:50.730
guarantees if the problems that you
have are misassignments of types.

