WEBVTT

1
00:00:00.110 --> 00:00:03.760
&gt;&gt; Kyle Simpson: By the way,
this prototype system, not bad at all.

2
00:00:03.760 --> 00:00:09.210
It's incredibly amazingly unicorn design,
it's very powerful.

3
00:00:09.210 --> 00:00:11.960
It's just a different design
pattern than classes.

4
00:00:13.060 --> 00:00:17.260
It's a different design pattern
which is called delegation.

5
00:00:17.260 --> 00:00:19.800
Now, I didn't make up this term,
by the way.

6
00:00:19.800 --> 00:00:23.770
I've been studying the prototype system
and how these things work for a long time.

7
00:00:23.770 --> 00:00:28.350
I didn't make up delegation,
what I did was I understood, I broke

8
00:00:28.350 --> 00:00:32.300
down all the pieces of how JavaScript
works and the linkages and it's not copy.

9
00:00:32.300 --> 00:00:35.250
And I built up this mental
model of the system and

10
00:00:35.250 --> 00:00:39.050
then one day, I was just surfing on
the internet trying to research stuff and

11
00:00:39.050 --> 00:00:44.260
I ran across a Wikipedia
page called Delegation, and

12
00:00:44.260 --> 00:00:47.270
I started reading about this
design pattern called Delegation.

13
00:00:48.760 --> 00:00:53.870
And I was like, that sounds really,
really, really familiar.

14
00:00:55.200 --> 00:00:58.930
The light bulb moment,
that's what JavaScript is.

15
00:00:58.930 --> 00:01:01.160
I didn't invent the term.

16
00:01:01.160 --> 00:01:03.570
Delegation or behavior delegation.

17
00:01:03.570 --> 00:01:05.460
I just called an apple an apple.

18
00:01:07.030 --> 00:01:09.530
That's what JavaScript's system is.

19
00:01:09.530 --> 00:01:13.560
Its prototype system is a delegation
system, not a class system.

20
00:01:15.600 --> 00:01:19.439
If you think about delegation and
classes as different design pattern.

21
00:01:20.640 --> 00:01:23.110
Rather than saying one is bad and
the other is good,

22
00:01:23.110 --> 00:01:25.400
I'm not saying that classes are bad.

23
00:01:25.400 --> 00:01:30.103
I'm just saying they don't fit in a system
that was designed to be a delegation

24
00:01:30.103 --> 00:01:30.679
system.

25
00:01:31.878 --> 00:01:33.664
&gt;&gt; Kyle Simpson: And
we've been trying to make it fit and

26
00:01:33.664 --> 00:01:36.600
we keep trying to shove it in there and
duct tape it to make it fit.

27
00:01:37.690 --> 00:01:42.090
And maybe the more effective thing is to
say, hey, system, how are you designed?

28
00:01:42.090 --> 00:01:46.580
What amazing things can I do with you if
I use the way that you actually work?

29
00:01:48.170 --> 00:01:50.600
This thought is not unique to me.

30
00:01:50.600 --> 00:01:55.216
But it has been observed that,
if you're comparing a prototypal system,

31
00:01:55.216 --> 00:02:00.198
a delegation system, to a class system,
that the prototypal system is actually

32
00:02:00.198 --> 00:02:03.370
significantly more powerful
than a class system.

33
00:02:03.370 --> 00:02:08.114
And here's why, it is as if the prototypal
system is sort of the super set and

34
00:02:08.114 --> 00:02:09.983
the class system is a subset.

35
00:02:09.983 --> 00:02:13.297
And here's why,
because you can implement a class

36
00:02:13.297 --> 00:02:18.690
system inside of a prototypal language,
but you cannot do the reverse.

37
00:02:18.690 --> 00:02:22.550
You cannot implement a prototype
system in a class-oriented language.

38
00:02:24.290 --> 00:02:28.730
So we chose to take this amazingly
powerful system and use it in

39
00:02:28.730 --> 00:02:33.490
one very specific way that's not even
a particularly good usage of the system.

40
00:02:33.490 --> 00:02:35.580
And then we spent 20
years banging our heads.

41
00:02:35.580 --> 00:02:38.267
Why doesn't this work like
it does in other languages?

42
00:02:38.267 --> 00:02:43.175
My response is because you're
doing the wrong pattern.

43
00:02:43.175 --> 00:02:45.650
You can do classes.

44
00:02:45.650 --> 00:02:49.450
And some of you have to do classes because
you work with frameworks that make that

45
00:02:49.450 --> 00:02:50.851
choice for you.

46
00:02:50.851 --> 00:02:55.450
But what I don't want you to do is walk
away from this discussion thinking well,

47
00:02:55.450 --> 00:02:57.400
it's my only option.

48
00:02:57.400 --> 00:02:59.070
It's not your only option.

49
00:02:59.070 --> 00:03:02.540
This system exists, and there's so
much untapped potential.

50
00:03:02.540 --> 00:03:05.680
And what I wanna dig into in our
final time together in this unit,

51
00:03:05.680 --> 00:03:10.300
what I wanna dig into is, what can we
do with delegation if we set aside our

52
00:03:10.300 --> 00:03:14.850
preconceptions that classes are the only
design pattern that matters?

