WEBVTT

1
00:00:00.000 --> 00:00:01.937
&gt;&gt; Kyle Simpson: Doug Crockford
famously said,

2
00:00:01.937 --> 00:00:05.809
iif a feature is sometimes useful and
sometimes dangerous, and

3
00:00:05.809 --> 00:00:09.769
if there's a better option,
then always use the better option.

4
00:00:09.769 --> 00:00:14.644
As a matter of fact almost all
of the good parts stems from

5
00:00:14.644 --> 00:00:17.980
this one foundational perspective.

6
00:00:17.980 --> 00:00:20.749
I respect what Doug has done for
our industry,

7
00:00:20.749 --> 00:00:24.020
but I couldn't disagree
more with this prospective.

8
00:00:25.490 --> 00:00:30.345
Partially I disagree with this because
we throw this principle around,

9
00:00:30.345 --> 00:00:33.699
and we don't even say what
we mean by these words.

10
00:00:33.699 --> 00:00:38.890
So what is useful in what is dangerous,
only what dog thinks is useful dangerous?

11
00:00:38.890 --> 00:00:42.170
Is there some universal definition for
useful dangerous?

12
00:00:42.170 --> 00:00:45.340
How about better option?

13
00:00:45.340 --> 00:00:47.169
How do we define better option?

14
00:00:47.169 --> 00:00:51.979
Is there some universal standard
by which we measure better?

15
00:00:51.979 --> 00:00:56.100
The statement is not useful
in its abstract sense.

16
00:00:56.100 --> 00:01:00.530
It's used in its abstract sense,
but it's not useful.

17
00:01:02.820 --> 00:01:06.456
So, let me put my mark in the sand and

18
00:01:06.456 --> 00:01:10.829
tell you what I mean by those words, okay?

19
00:01:10.829 --> 00:01:16.081
Number one, useful is when the reader
is focused on what's important,

20
00:01:16.081 --> 00:01:20.997
and dangerous is when the reader
can't tell what's gonna happen.

21
00:01:20.997 --> 00:01:24.160
And better is when the reader
understands the code.

22
00:01:28.370 --> 00:01:30.073
&gt;&gt; Kyle Simpson: So
you could take that principle and

23
00:01:30.073 --> 00:01:34.161
apply the specific meaning to it, but you
can't simply throw that sentence around as

24
00:01:34.161 --> 00:01:37.759
a justification for why you avoid
learning an entire part of the language.

25
00:01:40.730 --> 00:01:47.551
&gt;&gt; Kyle Simpson: The big crux here is, in
Doug's opinion, there's a better option,

26
00:01:47.551 --> 00:01:52.419
which is just don't learn and
understand types.

27
00:01:52.419 --> 00:01:55.754
My perspective is that's
not better at all,

28
00:01:55.754 --> 00:02:01.480
because it leads to developers
systemically not understanding their code.

29
00:02:01.480 --> 00:02:04.009
It's not better because it
leads to less understanding.

30
00:02:04.009 --> 00:02:09.561
The takeaway, I want you to get here is
that it is irresponsible to knowingly

31
00:02:09.561 --> 00:02:14.619
avoid usage of a feature that can and
does improve code readability.

32
00:02:14.619 --> 00:02:18.723
It is not just simply, you're not
taking advantage of some great things,

33
00:02:18.723 --> 00:02:20.949
you are actually making code worse off.

34
00:02:20.949 --> 00:02:24.065
Not only for your future self, but for
all other people that need to read and

35
00:02:24.065 --> 00:02:24.970
maintain your code.

36
00:02:26.569 --> 00:02:29.560
&gt;&gt; Kyle Simpson: That tool exists and it's
irresponsible not to learn and use it.

