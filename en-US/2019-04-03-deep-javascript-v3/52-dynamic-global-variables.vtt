WEBVTT

1
00:00:00.530 --> 00:00:03.410
&gt;&gt; Kyle Simpson: Moving on then to line
five because there's certainly a question

2
00:00:03.410 --> 00:00:05.720
as to what's gonna happen with line five.

3
00:00:05.720 --> 00:00:08.880
What's gonna happen with
this topic variable?

4
00:00:08.880 --> 00:00:11.740
Well, it's gonna process exactly the same,
same questions.

5
00:00:11.740 --> 00:00:13.740
That's why I'm teaching
you their narrative.

6
00:00:13.740 --> 00:00:14.960
So how does that start?

7
00:00:14.960 --> 00:00:16.380
Hey scope of.

8
00:00:16.380 --> 00:00:16.890
&gt;&gt; Speaker 2: Other class.

9
00:00:16.890 --> 00:00:17.530
&gt;&gt; Kyle Simpson: Other class.

10
00:00:17.530 --> 00:00:19.900
I have a what kind of reference?

11
00:00:19.900 --> 00:00:21.210
&gt;&gt; Speaker 3: Target.
&gt;&gt; Kyle Simpson: I have a target

12
00:00:21.210 --> 00:00:22.120
reference, thank you.

13
00:00:22.120 --> 00:00:25.290
I have a target reference for
the identifier topic.

14
00:00:25.290 --> 00:00:26.250
Ever heard of it?

15
00:00:26.250 --> 00:00:26.980
&gt;&gt; Speaker 2: No.

16
00:00:26.980 --> 00:00:28.330
&gt;&gt; Kyle Simpson: So where do we go next?

17
00:00:28.330 --> 00:00:29.100
&gt;&gt; Speaker 2: Global scope.

18
00:00:29.100 --> 00:00:30.350
&gt;&gt; Kyle Simpson: A global scope.

19
00:00:30.350 --> 00:00:33.250
I have a target reference for
the variable called topic.

20
00:00:33.250 --> 00:00:33.860
Ever heard of it?

21
00:00:33.860 --> 00:00:34.900
And the answer is?

22
00:00:34.900 --> 00:00:35.646
&gt;&gt; Speaker 3: No.

23
00:00:35.646 --> 00:00:37.511
&gt;&gt; Kyle Simpson: Well we would like for
the answer to be no.

24
00:00:37.511 --> 00:00:42.661
It seems very reasonable for
the answer to be no.

25
00:00:42.661 --> 00:00:47.815
In fact it seems somewhat crazy that it
would ever be anything other than no but

26
00:00:47.815 --> 00:00:52.256
here we see one of the historical
bad parts of JavaScript which is in

27
00:00:52.256 --> 00:00:56.775
the early days to be as forgiving
as possible for people that didn't

28
00:00:56.775 --> 00:01:01.722
understand the language, they
instituted this idea of auto global's.

29
00:01:01.722 --> 00:01:07.460
So if you try to assign to a variable
that's never been formally declared.

30
00:01:07.460 --> 00:01:11.570
Once you arrive at the global scope,
if you say hey, global scope,

31
00:01:11.570 --> 00:01:15.340
I'm looking for this marble called topic,
ever heard of it?

32
00:01:15.340 --> 00:01:18.720
And the global scope instead
of saying nope, sorry error,

33
00:01:18.720 --> 00:01:21.570
the global scope's gonna say
I just created one for you.

34
00:01:21.570 --> 00:01:22.280
Aren't I helpful.

35
00:01:23.660 --> 00:01:27.890
And it's gonna hand us a red marble,
not a blue marble.

36
00:01:27.890 --> 00:01:31.100
Why do you suppose it only hands us
a red marble and not a blue marble?

37
00:01:31.100 --> 00:01:32.070
&gt;&gt; Speaker 4: Because it is non globally.

38
00:01:32.070 --> 00:01:34.120
&gt;&gt; Kyle Simpson: Cuz we're
talking to the global scope now.

39
00:01:34.120 --> 00:01:37.540
We've already passed up the scope where
that would have been formally declared and

40
00:01:37.540 --> 00:01:38.890
now we're talking to the global scope and

41
00:01:38.890 --> 00:01:41.110
it's the global scope that
gives us the variable.

42
00:01:41.110 --> 00:01:42.290
Are you with me?

43
00:01:43.580 --> 00:01:47.480
So we've created an auto
global called topic which

44
00:01:47.480 --> 00:01:50.180
that sounds terrible
because it is terrible.

45
00:01:50.180 --> 00:01:52.760
But now there's a global
variable called topic and

46
00:01:52.760 --> 00:01:56.240
when we get that red marble back and
make the assignment on line five,

47
00:01:56.240 --> 00:02:00.220
there's a global variable now
with the value React in it, okay?

48
00:02:00.220 --> 00:02:03.320
&gt;&gt; Speaker 4: So topic is just like
teacher saying there's no difference then

49
00:02:03.320 --> 00:02:04.740
at the global level there too.

50
00:02:04.740 --> 00:02:06.810
&gt;&gt; Kyle Simpson: I wouldn't
say there's no difference.

51
00:02:06.810 --> 00:02:10.440
Certainly creating a declaration
at compile time and

52
00:02:10.440 --> 00:02:14.230
creating it dynamically during
the run time, have differences.

53
00:02:14.230 --> 00:02:17.270
There are performance differences and
other sorts of things but

54
00:02:17.270 --> 00:02:21.750
mechanically they are two global
variables at this point okay.

55
00:02:21.750 --> 00:02:25.260
&gt;&gt; Speaker 4: Or down the road if you wrap
it around then it will make difference

56
00:02:25.260 --> 00:02:28.590
because it would pop again up.

57
00:02:28.590 --> 00:02:31.471
&gt;&gt; Kyle Simpson: Yeah, I mean if this
wasn't the global scope again then.

58
00:02:31.471 --> 00:02:33.680
&gt;&gt; Speaker 4: But
if erupted again later on and.

59
00:02:33.680 --> 00:02:37.101
&gt;&gt; Kyle Simpson: Teacher
wouldn't be a red marble anymore.

60
00:02:37.101 --> 00:02:38.694
[CROSSTALK].

61
00:02:38.694 --> 00:02:42.594
Okay, regardless of how you wrap your
brains around this just take this

62
00:02:42.594 --> 00:02:47.339
particular takeaway, never ever under any
circumstances did you intentionally auto

63
00:02:47.339 --> 00:02:49.410
create global's like that.

64
00:02:49.410 --> 00:02:52.130
Always declare the variables that
you want to use declare them in

65
00:02:52.130 --> 00:02:56.130
whatever scope you need them in, but
don't auto create them like this, yes.

66
00:02:56.130 --> 00:02:59.000
&gt;&gt; Speaker 2: That would occur
also if topic equals react were

67
00:02:59.000 --> 00:03:00.730
in the global scope under
variable of teacher.

68
00:03:00.730 --> 00:03:01.910
&gt;&gt; Kyle Simpson: That's true.

69
00:03:01.910 --> 00:03:06.280
Yeah, any assignment to a variable
that is undeclared at that moment,

70
00:03:06.280 --> 00:03:10.080
it is not available to any
scope that we have access to,

71
00:03:10.080 --> 00:03:12.360
not declared to any
scope we have access to.

72
00:03:12.360 --> 00:03:16.210
Any undeclared variable is going to
end up creating this auto global.

73
00:03:16.210 --> 00:03:18.650
Now, the reason why that happens

74
00:03:18.650 --> 00:03:21.499
is because you'll notice that this
program is not running in strict mode.

75
00:03:22.620 --> 00:03:25.650
And in just a moment,
we'll see when we flip on strict mode,

76
00:03:25.650 --> 00:03:27.120
it will change that behavior.

77
00:03:27.120 --> 00:03:31.460
But this is running in the non-strict
mode or sometimes called, sloppy mode.

78
00:03:31.460 --> 00:03:33.940
You should be using strict mode,
and if you were using strict mode,

79
00:03:33.940 --> 00:03:35.430
you wouldn't see this behavior.

80
00:03:35.430 --> 00:03:38.230
But since this code snip it isn't,
that's what happens,

81
00:03:38.230 --> 00:03:41.290
as we end up creating a global
variable called topic, okay?

82
00:03:42.840 --> 00:03:46.420
So execution is then done in the function.

83
00:03:46.420 --> 00:03:49.590
We execute console.log the same
way as we have before.

84
00:03:49.590 --> 00:03:51.310
Execution moves to line 11.

85
00:03:51.310 --> 00:03:53.130
How does the execution of line 11 work?

86
00:03:54.140 --> 00:03:58.926
Hey, we gotta talk to a scope, right, same
conversation as before, same narrative.

87
00:03:58.926 --> 00:04:02.170
So hey, global scope, hey red bucket.

88
00:04:02.170 --> 00:04:03.460
I have a what kind of reference?

89
00:04:03.460 --> 00:04:04.150
&gt;&gt; Speaker 3: Source reference.

90
00:04:04.150 --> 00:04:06.700
&gt;&gt; Kyle Simpson: A source
reference to a variable called?

91
00:04:06.700 --> 00:04:07.290
Teacher.
Teacher.

92
00:04:07.290 --> 00:04:08.370
Ever heard of it?
And the answer is?

93
00:04:08.370 --> 00:04:09.510
&gt;&gt; Speaker 3: Yes.

94
00:04:09.510 --> 00:04:11.890
&gt;&gt; Kyle Simpson: So we go get that
marble and we look for its value.

95
00:04:11.890 --> 00:04:13.990
And what value does it have?

96
00:04:13.990 --> 00:04:14.570
&gt;&gt; Speaker 3: Suzy.

97
00:04:14.570 --> 00:04:15.560
&gt;&gt; Kyle Simpson: It has Suzy.

98
00:04:15.560 --> 00:04:17.980
Remember?
Because of line four,

99
00:04:17.980 --> 00:04:19.910
we assigned to a red marble.

100
00:04:19.910 --> 00:04:22.310
We've overwritten
the value in that variable.

101
00:04:22.310 --> 00:04:25.530
It's not a separate variable,
not a separate marble.

102
00:04:25.530 --> 00:04:27.060
Okay, line 12 then,
how does line 12 execute?

103
00:04:27.060 --> 00:04:28.130
&gt;&gt; Speaker 3: Hey global scope.

104
00:04:29.990 --> 00:04:31.770
&gt;&gt; Kyle Simpson: Hey global scope,
I have a?

105
00:04:31.770 --> 00:04:34.130
&gt;&gt; Speaker 3: Source.
&gt;&gt; Kyle Simpson: Source reference for?

106
00:04:34.130 --> 00:04:37.070
Topic.
Topic, you're experts at this, very good.

107
00:04:37.070 --> 00:04:38.650
Ever heard of topic?

108
00:04:38.650 --> 00:04:39.890
And global scope's gonna say?

109
00:04:39.890 --> 00:04:40.950
Here's your red marble.

110
00:04:40.950 --> 00:04:42.220
Here's your red marble.

111
00:04:42.220 --> 00:04:45.460
And when we look at the value in
the red marble it's gonna say?

112
00:04:45.460 --> 00:04:46.170
&gt;&gt; Speaker 2: React.

113
00:04:46.170 --> 00:04:49.230
&gt;&gt; Kyle Simpson: React, react.

114
00:04:49.230 --> 00:04:53.160
&gt;&gt; Speaker 3: So if line 11 ran before
line 9, teacher would still be top.

115
00:04:54.460 --> 00:04:55.580
&gt;&gt; Kyle Simpson: Say that again I'm sorry?

116
00:04:55.580 --> 00:04:59.337
&gt;&gt; Speaker 3: So
if line 11 was actually in line 8.

117
00:04:59.337 --> 00:05:00.300
&gt;&gt; Kyle Simpson: I think
you're talking about line 12?

118
00:05:00.300 --> 00:05:03.890
&gt;&gt; Speaker 3: I'm talking about line 11.

119
00:05:03.890 --> 00:05:04.850
&gt;&gt; Kyle Simpson: Okay, so

120
00:05:04.850 --> 00:05:09.930
if line 11 was on line 8 then
teacher would say Kyle, correct.

121
00:05:09.930 --> 00:05:14.440
What would happen if
line 12 was on line 8?

122
00:05:14.440 --> 00:05:17.578
There would be no identifier, right?

123
00:05:17.578 --> 00:05:20.428
We'll see that case in the next slide.

124
00:05:20.428 --> 00:05:23.398
But there is an identifier
on line 12 because

125
00:05:23.398 --> 00:05:28.088
the function otherClass auto created it
by assigning to a non-declared variable.

