WEBVTT

1
00:00:00.000 --> 00:00:02.739
&gt;&gt; Kyle Simpson: Let me summarize
how double equals works.

2
00:00:02.739 --> 00:00:05.969
This is summary of the algorithm, you
can read the algorithm but it's summary.

3
00:00:05.969 --> 00:00:09.100
If the types of the same it's
just gonna use triple equals.

4
00:00:09.100 --> 00:00:14.639
If either of them both of them are no or
undefined, they are equal.

5
00:00:14.639 --> 00:00:17.653
If there are non primitives
involved in the comparison,

6
00:00:17.653 --> 00:00:20.179
they are always gonna
become primitive first.

7
00:00:20.179 --> 00:00:22.839
And then once you have
primitives prefer to number.

8
00:00:24.890 --> 00:00:29.144
&gt;&gt; Kyle Simpson: And I'm just optimistic
enough to believe that every developer

9
00:00:29.144 --> 00:00:33.869
from the junior developer with two
weeks of experience in JavaScript,

10
00:00:33.869 --> 00:00:37.491
up to the experienced
developer with 20 plus years,

11
00:00:37.491 --> 00:00:41.529
can understand a fairly
straightforward system like that.

12
00:00:41.529 --> 00:00:45.076
And by understanding it, avoid
the places where it can be problematic.

13
00:00:48.370 --> 00:00:50.129
&gt;&gt; Kyle Simpson: So
what are those problematic cases?

14
00:00:50.129 --> 00:00:54.407
Many of these are ones we've already seen,
but let's talk about the corner cases,

15
00:00:54.407 --> 00:00:56.950
we gotta talk about them so
that we can avoid them.

