WEBVTT

1
00:00:00.050 --> 00:00:02.230
&gt;&gt; Kyle Simpson: Now the argument
I always get back from people,

2
00:00:02.230 --> 00:00:05.000
and some of you may be thinking
this at this moment is, yeah,

3
00:00:05.000 --> 00:00:08.970
but even if I sat through your workshop
and I learned all these nuances and

4
00:00:08.970 --> 00:00:13.310
I read the spec, what about all
the junior devs on my code base?

5
00:00:13.310 --> 00:00:15.350
They would never understand this stuff.

6
00:00:15.350 --> 00:00:19.040
This I actually, in theory, hits me
almost more than any question I ever get.

7
00:00:20.330 --> 00:00:23.350
This mindset that says,
well I'm smart enough but

8
00:00:23.350 --> 00:00:26.050
those junior devs they're too
dumb to understand this stuff.

9
00:00:27.320 --> 00:00:29.990
That is complete and total nonsense.

10
00:00:29.990 --> 00:00:31.700
I don't know what your backgrounds are,
but

11
00:00:31.700 --> 00:00:34.000
everyone of you is
excellent at what you do.

12
00:00:34.000 --> 00:00:37.930
You may know more or less about JavaScript
but that doesn't make you dumber and

13
00:00:37.930 --> 00:00:42.770
less capable of understanding stuff,
less capable of learning things.

14
00:00:45.190 --> 00:00:47.790
I do not subscribe to
the belief that we should

15
00:00:47.790 --> 00:00:51.450
dumb down our code basis to
the lowest common denominator.

16
00:00:52.750 --> 00:00:56.910
You should absolutely use the tools
as effectively as you can.

17
00:00:56.910 --> 00:01:01.000
You should be as obvious about how
you're using the tools as possible.

18
00:01:01.000 --> 00:01:04.630
And when somebody is on the code
base who doesn't understand,

19
00:01:04.630 --> 00:01:06.500
use it as an opportunity for
them to learn.

20
00:01:07.930 --> 00:01:08.970
Use code reviews,

21
00:01:08.970 --> 00:01:12.470
use a culture of peer-to-peer learning,
of pairing together.

22
00:01:12.470 --> 00:01:15.990
All of those things to help everybody
learn how the tool works better.

23
00:01:17.060 --> 00:01:21.770
When you receive a code review and
some junior developer did something dumb,

24
00:01:21.770 --> 00:01:26.020
like they didn't do a coercion correct and
maybe there's some corner case they didn't

25
00:01:26.020 --> 00:01:29.930
know about, you don't reject the code
review and say, you're dumb.

26
00:01:29.930 --> 00:01:31.330
You say, hey,
come sit with me for a minute,

27
00:01:31.330 --> 00:01:35.760
let me just talk to you about this corner
case that you weren't aware of, and

28
00:01:35.760 --> 00:01:38.749
if you did this thing instead we'd
avoid that corner case entirely.

29
00:01:40.130 --> 00:01:41.900
Now you learned better and
they learned better.

30
00:01:43.030 --> 00:01:46.870
This is a complete bunk argument,
it's a lazy excuse for

31
00:01:46.870 --> 00:01:50.290
not wanting to actually do what we ought
to do on our developer teams, which is

32
00:01:50.290 --> 00:01:53.810
promote that everybody should be learning,
everybody should be headed upward.

33
00:01:53.810 --> 00:01:56.920
I don't care where you are, I care what
your direction is, are you headed upward?

34
00:01:56.920 --> 00:01:58.730
Are you learning more about your tool?

35
00:02:00.280 --> 00:02:03.370
This is not an excuse for
not using the tools well.

36
00:02:03.370 --> 00:02:07.640
It is also not an excuse for
being clever, right.

37
00:02:07.640 --> 00:02:10.900
Some people say,
well the slippery slope argument here.

38
00:02:10.900 --> 00:02:14.430
I can do all this clever bit-wise math,
right.

39
00:02:14.430 --> 00:02:17.370
I'm using the tool and
I'm being clever, and I'm doing all of

40
00:02:17.370 --> 00:02:20.820
my programming on one line of code,
the way we used to do in Perl.

41
00:02:20.820 --> 00:02:21.880
That's not what I'm saying, either.

42
00:02:23.930 --> 00:02:27.920
What I'm actually saying is that your
code is a form of communication, and

43
00:02:27.920 --> 00:02:31.860
there is an effective way to communicate
that understands and uses the tool well.

44
00:02:33.800 --> 00:02:38.270
If you ask the reader of a code to
understand something about the tool so

45
00:02:38.270 --> 00:02:42.670
that they can understand that line of
code, that is an investment on their part.

46
00:02:42.670 --> 00:02:46.020
Make sure that that investment
pays off beyond that line of code.

47
00:02:47.240 --> 00:02:51.600
Make sure that when they learn how that
worked, they're gonna see more of that.

48
00:02:51.600 --> 00:02:54.070
Rather than,
they learn how you did something weird,

49
00:02:54.070 --> 00:02:58.560
esoteric bitwise trick, and then they
never get to use that ever again.

50
00:02:59.560 --> 00:03:00.640
That's a waste of their time.

51
00:03:01.910 --> 00:03:03.900
Makes you feel good but
it's a waste of the time.

52
00:03:03.900 --> 00:03:07.820
And it's part of the reason why we
struggle so much to have good dev culture,

53
00:03:08.890 --> 00:03:14.930
cuz we're not focused on promoting that
everybody should be able to understand.

54
00:03:14.930 --> 00:03:18.710
From the person who is three weeks into
JavaScript to somebody who's been at it

55
00:03:18.710 --> 00:03:20.090
for 20 plus years like me,

56
00:03:20.090 --> 00:03:23.642
we all oughta be able to interoperate on
the same code base and communicate well.

57
00:03:23.642 --> 00:03:28.130
Yeah, the junior devs gonna need to learn
some stuff, but that's what happens in

58
00:03:28.130 --> 00:03:32.120
every job and in every industry,
you have to learn some stuff.

59
00:03:32.120 --> 00:03:33.310
You don't see an architect saying,

60
00:03:33.310 --> 00:03:37.090
well we're not gonna design that building
well cuz we've got an intern on the job.

61
00:03:37.090 --> 00:03:40.120
You teach the intern how
to build the building well.

62
00:03:40.120 --> 00:03:42.140
That's what we need to be doing.

63
00:03:42.140 --> 00:03:44.020
We need to be doing with all
parts of JavaScript, but

64
00:03:44.020 --> 00:03:47.610
especially the parts that everybody
tells you to ignore like types.

