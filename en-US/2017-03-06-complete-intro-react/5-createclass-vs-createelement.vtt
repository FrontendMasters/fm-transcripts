WEBVTT

1
00:00:00.470 --> 00:00:02.460
&gt;&gt; Brian Holt: So
let's talk about creatClass for a second.

2
00:00:02.460 --> 00:00:05.620
There's a creatClass in React and
there's also a createElement.

3
00:00:06.790 --> 00:00:10.613
What createClass is, is you're creating
a blueprint for a new type of component.

4
00:00:10.613 --> 00:00:15.326
Right, so now I have this
MyFirstComponent component, right?

5
00:00:15.326 --> 00:00:19.356
And that is a new type of element
that I can render out to the dom.

6
00:00:19.356 --> 00:00:22.702
And every time I render that out,
I can render this out 15 different times.

7
00:00:22.702 --> 00:00:26.900
And I'll get 15 different divs
with 15 h1s inside of that, right?

8
00:00:26.900 --> 00:00:30.145
So it's a blueprint, it's a new stamp for

9
00:00:30.145 --> 00:00:33.670
stamping out different
My First Components.

10
00:00:34.840 --> 00:00:36.390
Then we're gonna have
react create element,

11
00:00:36.390 --> 00:00:38.900
which we're about to use
here in just a second.

12
00:00:38.900 --> 00:00:42.080
And what react create element
is it's one stamp, right?

13
00:00:42.080 --> 00:00:45.680
It's creating one instance of
that particular new element.

14
00:00:48.220 --> 00:00:53.405
So let's actually go do that right here,
underneath my first component.

15
00:00:53.405 --> 00:01:00.958
Wanna say ReactDOM.render.

16
00:01:00.958 --> 00:01:03.753
Okay, so this is actually where we're
going to put it unto the DOM cuz nothing

17
00:01:03.753 --> 00:01:04.443
has happened yet.

18
00:01:04.443 --> 00:01:06.867
We haven't actually put
it onto the DOM yet.

19
00:01:06.867 --> 00:01:14.147
And we're gonna sayReactDOM.render,
React.createElement.

20
00:01:14.147 --> 00:01:19.813
So we're gonna do one stamp
here of MyFirstComponent,

21
00:01:19.813 --> 00:01:24.643
and then you just have to
tell it where to put it.

22
00:01:24.643 --> 00:01:33.216
So I'm gonna say
document.getElementById app, right?

23
00:01:33.216 --> 00:01:39.039
So I'm just telling it put it here,
up in this particular div, up here.

24
00:01:43.981 --> 00:01:46.999
&gt;&gt; Brian Holt: All right, does this
distinction between createElement and

25
00:01:46.999 --> 00:01:48.288
createClass make sense?

26
00:01:48.288 --> 00:01:51.131
Okay, cool.

27
00:01:54.889 --> 00:01:59.260
&gt;&gt; Brian Holt: So, actually, if you
really wanted to get into it, this div,

28
00:01:59.260 --> 00:02:03.640
react.DOM.div, is just a helper
method to create divs.

29
00:02:03.640 --> 00:02:05.550
You really could just say,

30
00:02:05.550 --> 00:02:12.215
react.create element,
&gt;&gt; Brian Holt: And

31
00:02:12.215 --> 00:02:16.619
have this be a div, right?

32
00:02:16.619 --> 00:02:20.178
And then I think it would
be null after that.

33
00:02:20.178 --> 00:02:23.477
So here you would just be
creating one instance of a div.

34
00:02:23.477 --> 00:02:29.534
But this React.DOM helper makes it a
little bit easier to see what's going on.

35
00:02:29.534 --> 00:02:30.395
&gt;&gt; Speaker 2: You've got a typo.

36
00:02:30.395 --> 00:02:31.554
&gt;&gt; Brian Holt: Do I?

37
00:02:31.554 --> 00:02:34.697
&gt;&gt; Speaker 2: Yeah,
element is element app.

38
00:02:34.697 --> 00:02:36.394
&gt;&gt; Brian Holt: Ele.

39
00:02:36.394 --> 00:02:39.042
&gt;&gt; Speaker 2: Little further,
getElementById.

40
00:02:39.042 --> 00:02:39.561
&gt;&gt; Brian Holt: GetElement.

41
00:02:39.561 --> 00:02:40.637
&gt;&gt; Speaker 2: getElementAt.

42
00:02:40.637 --> 00:02:41.529
&gt;&gt; Brian Holt: Okay, thank you.

43
00:02:45.349 --> 00:02:46.194
&gt;&gt; Speaker 2: Thanks, Jacob.

44
00:02:46.194 --> 00:02:54.428
&gt;&gt; Brian Holt: [LAUGH] Cool, so let's
go actually open this in our browser.

45
00:02:57.628 --> 00:03:02.668
&gt;&gt; Brian Holt: So just Cmd + open,

46
00:03:02.668 --> 00:03:08.596
and I am in talks, fem,

47
00:03:10.671 --> 00:03:16.903
react and Index.html.

48
00:03:21.256 --> 00:03:23.361
&gt;&gt; Brian Holt: Yes,
this is my first component.

49
00:03:28.619 --> 00:03:32.930
&gt;&gt; Brian Holt: So,
this is obviously a really stupid example.

50
00:03:32.930 --> 00:03:35.620
It would be way easier to just
write the HTML directly, right?

51
00:03:35.620 --> 00:03:37.900
Why the hell would you
actually ever do this?

52
00:03:37.900 --> 00:03:43.340
But I wanna show you that React
itself is pretty simple, right?

53
00:03:43.340 --> 00:03:45.810
There's just really not a whole lot to it.

54
00:03:45.810 --> 00:03:50.140
We like to build these castles around
it and make it much more grandiose and

55
00:03:50.140 --> 00:03:50.950
complex than it really is.

56
00:03:50.950 --> 00:03:54.264
But the library itself,
there's not really much to it and

57
00:03:54.264 --> 00:03:56.979
there's not much to getting it up and
running.

58
00:03:56.979 --> 00:04:00.788
How many people have seen the classic
Angular demo where they show you how

59
00:04:00.788 --> 00:04:02.918
to do ng-repeat and your mind is blown.

60
00:04:02.918 --> 00:04:07.300
Because you did this crazy ng-repeat
with only five lines of code.

61
00:04:07.300 --> 00:04:08.311
You can do that shit in React.

62
00:04:08.311 --> 00:04:12.554
It's just, it's no longer impressive,
I think so.

63
00:04:12.554 --> 00:04:14.313
Anyway, rant over.

64
00:04:18.667 --> 00:04:19.338
&gt;&gt; Brian Holt: Okay.

65
00:04:19.338 --> 00:04:24.112
&gt;&gt; Speaker 2: Question.

66
00:04:24.112 --> 00:04:24.780
&gt;&gt; Brian Holt: Sure.

67
00:04:24.780 --> 00:04:26.450
&gt;&gt; Speaker 2: Coming from AB.

68
00:04:26.450 --> 00:04:29.230
Why is DOM part of the React library?

69
00:04:29.230 --> 00:04:31.980
Shouldn't it come in React DOM?

70
00:04:31.980 --> 00:04:35.030
What's the use of React.DOM
whle coding for native?

71
00:04:36.080 --> 00:04:39.830
&gt;&gt; Brian Holt: So the answer to your
question is there's no use for native.

72
00:04:39.830 --> 00:04:42.519
And this is just a bunch
of tiny helper methods.

73
00:04:43.890 --> 00:04:47.650
So I think they just left it in
because it is so convenient.

74
00:04:47.650 --> 00:04:50.280
But they are really just
helper methods that wrap to be

75
00:04:52.190 --> 00:04:53.740
createElement calls, right?

76
00:04:53.740 --> 00:04:58.112
They're just very thin wrappers.

77
00:04:58.112 --> 00:05:01.219
So they're so small,
it's probably bytes on the wire.

78
00:05:01.219 --> 00:05:04.966
So they just leave it in in
the main package, probably for

79
00:05:04.966 --> 00:05:07.632
compatibility reasons, to be honest.

80
00:05:07.632 --> 00:05:09.823
&gt;&gt; Speaker 2: Okay, I'm not exactly
understanding the question.

81
00:05:09.823 --> 00:05:10.766
Could you look in the chat.

82
00:05:10.766 --> 00:05:15.291
He's got a follow up,
AB at the bottom says,

83
00:05:15.291 --> 00:05:18.395
DOM.div, DOM.h1, is it?

84
00:05:18.395 --> 00:05:20.529
&gt;&gt; Brian Holt: Yeah, I think it's just
referring to these two particular

85
00:05:20.529 --> 00:05:21.135
calls right here.

86
00:05:21.135 --> 00:05:22.610
&gt;&gt; Speaker 2: Right, yeah, but

87
00:05:22.610 --> 00:05:28.990
I guess I'm not sure if he's asking
to follow up to what you just said.

88
00:05:28.990 --> 00:05:30.229
&gt;&gt; Brian Holt: They're helper methods,
&gt;&gt; Speaker 2: Yeah.

89
00:05:30.229 --> 00:05:32.709
&gt;&gt; Brian Holt: There's not
much more to it than that.

90
00:05:32.709 --> 00:05:35.536
And actually, you can make this
a little bit more nicer looking, so

91
00:05:35.536 --> 00:05:36.885
it looks even more like markup.

92
00:05:36.885 --> 00:05:41.886
If you say var div = React.DOM.div and

93
00:05:41.886 --> 00:05:46.593
you say var h1 = REact.DOM.h1 and

94
00:05:46.593 --> 00:05:50.727
then you can just get rid of this.

95
00:05:56.493 --> 00:05:58.990
&gt;&gt; Brian Holt: And
now it looks even more like markup, right?

96
00:06:01.700 --> 00:06:05.490
But I wanna demonstrate to you that
components in React are nothing

97
00:06:05.490 --> 00:06:06.570
but functions.

98
00:06:06.570 --> 00:06:11.250
So that's the mapping you need to
get into your head that a component,

99
00:06:11.250 --> 00:06:14.540
a tag, an element is just a function call.

100
00:06:14.540 --> 00:06:19.240
Everything's a function call,
which is cool.

101
00:06:20.450 --> 00:06:24.261
Because we can start doing
high order functions and

102
00:06:24.261 --> 00:06:28.881
stuff like that, you can do some
really cool stuff with that.

103
00:06:28.881 --> 00:06:30.143
Any other questions?

104
00:06:30.143 --> 00:06:30.735
This make sense?

105
00:06:30.735 --> 00:06:31.767
&gt;&gt; Speaker 2: Again, follow up,

106
00:06:31.767 --> 00:06:34.760
I think they're asking where
did those things come from?

107
00:06:34.760 --> 00:06:36.762
&gt;&gt; Brian Holt: They're
from the React package.

108
00:06:36.762 --> 00:06:42.201
There's this .DOM kind of mini
library with React of just

109
00:06:42.201 --> 00:06:47.710
a bunch of helper methods for
specifically React's DOM.

110
00:06:47.710 --> 00:06:49.000
And it doesn't exist in native.

111
00:06:49.000 --> 00:06:50.490
It's only for DOM.

112
00:06:50.490 --> 00:06:53.120
And it's in there for historical reasons.

113
00:06:53.120 --> 00:06:54.080
They just leave it in there.

114
00:06:54.080 --> 00:06:56.621
&gt;&gt; Speaker 2: So it does not
come from the React-DOM package?

115
00:06:56.621 --> 00:06:57.954
&gt;&gt; Brian Holt: Nope, [INAUDIBLE].

116
00:06:57.954 --> 00:07:00.187
&gt;&gt; Speaker 2: That's, I think,
the sticking point they're having.

117
00:07:00.187 --> 00:07:02.883
&gt;&gt; Brian Holt: I'm 95%, I'm sure of that.

118
00:07:02.883 --> 00:07:04.158
You might want to check me on that.

119
00:07:04.158 --> 00:07:07.966
But they're so small, but I can't imagine
it adds anything to the page weight,

120
00:07:07.966 --> 00:07:09.431
so they just leave it in there.

121
00:07:12.807 --> 00:07:15.652
&gt;&gt; Brian Holt: The only thing that we're
using from React-DOM is specifically this

122
00:07:15.652 --> 00:07:18.605
right here, the .render method,
which actually puts it onto the DOM.

123
00:07:20.937 --> 00:07:22.730
&gt;&gt; Brian Holt: I guess
that bears mentioning.

124
00:07:22.730 --> 00:07:26.070
Whenever you include these
node_modules/react/dist/react,

125
00:07:26.070 --> 00:07:29.860
it's creating a global
variable called react, right?

126
00:07:29.860 --> 00:07:32.310
So if that was unclear
where that was coming from,

127
00:07:32.310 --> 00:07:34.440
it's coming from this right here.

128
00:07:34.440 --> 00:07:40.860
Same with React.DOM, this global variable
comes from, including this script, right?

129
00:07:40.860 --> 00:07:42.440
That's where the magic happens.

