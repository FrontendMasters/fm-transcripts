WEBVTT

1
00:00:00.440 --> 00:00:05.013
&gt;&gt; Speaker 2: Couple of questions going
different way, why are we using compose?

2
00:00:05.013 --> 00:00:09.503
&gt;&gt; Brian: This is kinda just the way
that you apply this middleware.

3
00:00:09.503 --> 00:00:12.077
I don't know if I know exactly
what compose itself does.

4
00:00:12.077 --> 00:00:16.284
Redux compose.

5
00:00:16.284 --> 00:00:20.177
This is the only reason I've used compose,
just for the DevTools.

6
00:00:20.177 --> 00:00:21.558
Composes a function right to left.

7
00:00:25.131 --> 00:00:27.525
&gt;&gt; Brian: You want to apply
several store enhancers in a row.

8
00:00:27.525 --> 00:00:31.686
So it's just if you want to do
multiple different store enhancers,

9
00:00:31.686 --> 00:00:35.125
which I'm guessing the DevTool
is one store enhancer.

10
00:00:35.125 --> 00:00:37.435
It's also the only store
enhancer I've ever used.

11
00:00:37.435 --> 00:00:43.509
So, that's what I got.

12
00:00:43.509 --> 00:00:46.200
&gt;&gt; Speaker 2: And then how would
we architect the filtering of

13
00:00:46.200 --> 00:00:47.549
the shows as a reducer?

14
00:00:52.868 --> 00:00:57.638
&gt;&gt; Brian: So, I guess the way that you
would do that is you would keep all of

15
00:00:57.638 --> 00:00:59.721
the shows inside of Redux.

16
00:00:59.721 --> 00:01:05.089
And then when you're doing your map
state to props inside of there,

17
00:01:05.089 --> 00:01:09.986
you'll do the filter, so
that you'd only be parsing the ones

18
00:01:09.986 --> 00:01:14.432
that you needed from,
inside of that map state to prop.

19
00:01:14.432 --> 00:01:15.895
That's probably the way I would do it.

20
00:01:19.829 --> 00:01:23.998
&gt;&gt; Speaker 2: There was a question for
what resources would you recommend,

21
00:01:23.998 --> 00:01:27.054
I guess for
making production quality code?

22
00:01:30.546 --> 00:01:32.219
&gt;&gt; Brian: Specifically for
React and Redux?

23
00:01:35.065 --> 00:01:36.687
&gt;&gt; Brian: A lot of that comes
down to build tools and

24
00:01:36.687 --> 00:01:38.184
how you're using your build tools.

25
00:01:38.184 --> 00:01:43.490
So, Kent C Dodds course on webpack
would be a good place to start.

26
00:01:45.740 --> 00:01:49.624
There's another one coming out from
Jim Young on how to deploy it and

27
00:01:49.624 --> 00:01:52.229
stuff like that,
that would be a good place.

28
00:01:52.229 --> 00:01:56.391
Again, there's not too much
specific to making React more

29
00:01:56.391 --> 00:01:59.230
production quality than it already is.

30
00:01:59.230 --> 00:02:04.192
The one key that you need to run
a webpack in production mode and

31
00:02:04.192 --> 00:02:08.297
you have to send your node
M to equal production, so

32
00:02:08.297 --> 00:02:13.165
that it builds React in production
mode and not in dev mode and

33
00:02:13.165 --> 00:02:17.954
that's pretty much it for
development verse production.

34
00:02:17.954 --> 00:02:21.995
&gt;&gt; Speaker 2: And
there's a request, Francois said,

35
00:02:21.995 --> 00:02:27.421
you mentioned you'd get to it,
but he would really like

36
00:02:27.421 --> 00:02:32.859
to hear what the signs are that
would make one use Redux.

37
00:02:32.859 --> 00:02:35.728
&gt;&gt; Brian: I alluded to it a little bit
earlier, but it's mostly that I have

38
00:02:35.728 --> 00:02:38.238
multiple components trying
to read from the same data.

39
00:02:38.238 --> 00:02:43.433
Multiple unlike components, so I have
all these TV shows that I need to read

40
00:02:43.433 --> 00:02:48.875
from and I have ten different components
that are spread across my entire app,

41
00:02:48.875 --> 00:02:51.524
trying to read from these same shows.

42
00:02:51.524 --> 00:02:54.218
That's a big smell that I should like,
okay,

43
00:02:54.218 --> 00:02:56.854
I need to centralize
these shows in some way.

44
00:02:56.854 --> 00:03:00.569
Now there are some people that say,
like go ahead and stick it on context.

45
00:03:00.569 --> 00:03:02.873
That's not the way I choose to do it.

46
00:03:02.873 --> 00:03:07.529
The way I choose to do it is to use
something like Redux to distribute that

47
00:03:07.529 --> 00:03:09.014
across my entire app.

48
00:03:11.418 --> 00:03:16.282
&gt;&gt; Brian: But yeah, it's when you need to
centralize your source of truth and you're

49
00:03:16.282 --> 00:03:21.840
trying not to duplicate or keep things in
sync, that's probably the best indicator.

50
00:03:21.840 --> 00:03:25.191
When you're trying to keep things in sync
like you have two things that you're

51
00:03:25.191 --> 00:03:27.135
trying to keep synchronous, never do that.

52
00:03:27.135 --> 00:03:29.749
Just centralize your truth,
roll it all together.

53
00:03:29.749 --> 00:03:33.071
Do something like Redux.

54
00:03:33.071 --> 00:03:37.756
We're gonna add one more thing
to Redux before I move on.

55
00:03:37.756 --> 00:03:43.884
I've shown you how to do synchronous
Redux and pretty much, I've shown you.

56
00:03:43.884 --> 00:03:45.320
&gt;&gt; Speaker 2: Sorry
question just popped in.

57
00:03:45.320 --> 00:03:46.190
&gt;&gt; Brian: Sure.

58
00:03:46.190 --> 00:03:50.537
&gt;&gt; Speaker 2: Craig is asking, can you
use the form element properties from

59
00:03:50.537 --> 00:03:53.554
the method you call in
the forms on submit?

60
00:03:53.554 --> 00:03:59.691
&gt;&gt; Brian: The form element properties?

61
00:03:59.691 --> 00:04:02.558
Like are you trying to
read the HTML attributes?

62
00:04:02.558 --> 00:04:04.097
Is that the question?

63
00:04:04.097 --> 00:04:06.110
&gt;&gt; Speaker 2: I don't know for sure.

64
00:04:06.110 --> 00:04:09.319
&gt;&gt; Speaker 3: You're probably
serializing the inputs or something.

65
00:04:09.319 --> 00:04:13.840
&gt;&gt; Speaker 2: Hang on let me ask that
again, can you read the form input element

66
00:04:13.840 --> 00:04:18.041
properties from the method you
call in the forms on submit?

67
00:04:21.730 --> 00:04:23.631
&gt;&gt; Brian: I mean,
there's many ways you can do that right.

68
00:04:23.631 --> 00:04:30.962
Like you can,
it's a long answer to that question.

69
00:04:30.962 --> 00:04:36.130
The answer is I think what
he's asking is- Like for

70
00:04:36.130 --> 00:04:39.366
instance, the hidden input or something,

71
00:04:39.366 --> 00:04:43.832
some some value in it and
when you submit the form.

72
00:04:43.832 --> 00:04:47.266
And you're just keeping track of what's
happening at the form level rather than

73
00:04:47.266 --> 00:04:48.739
each individual input possibly?

74
00:04:48.739 --> 00:04:49.992
&gt;&gt; Speaker 2: Yeah.

75
00:04:49.992 --> 00:04:54.721
&gt;&gt; Brian: The answer is you can absolutely
do that, like it's just an HTML form.

76
00:04:56.832 --> 00:04:58.975
&gt;&gt; Brian: For the most part, I would
assert that, that's not what you wanna do.

77
00:04:58.975 --> 00:05:02.077
It's better to have React worry
about each one of them individually.

78
00:05:02.077 --> 00:05:06.793
It's not always totally possible
if you have like a dynamic form

79
00:05:06.793 --> 00:05:10.284
that you don't know what's gonna be in it,
but

80
00:05:10.284 --> 00:05:15.812
I would say as much as possible,
it's better to just be explicit about it.

81
00:05:15.812 --> 00:05:16.607
&gt;&gt; Speaker 2: Okay.

82
00:05:16.607 --> 00:05:18.308
&gt;&gt; Brian: Okay.

83
00:05:18.308 --> 00:05:20.068
&gt;&gt; Speaker 2: Another question.

84
00:05:20.068 --> 00:05:26.311
Anton is asking, is that okay to
use Redux without React router?

85
00:05:26.311 --> 00:05:28.200
&gt;&gt; Brian: Is it okay to use
Redux without React router?

86
00:05:28.200 --> 00:05:31.191
Yeah, I mean, our example,
they're no way married to each other.

87
00:05:31.191 --> 00:05:35.900
So, you can use one without the other.

88
00:05:35.900 --> 00:05:39.170
They do not affect each other,
unless you make them.

