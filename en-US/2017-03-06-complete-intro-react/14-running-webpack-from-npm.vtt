WEBVTT

1
00:00:00.510 --> 00:00:02.504
&gt;&gt; Brian Holt: So yeah,
one thing I want you to do now,

2
00:00:02.504 --> 00:00:04.628
is I want you to go to your package.json.

3
00:00:04.628 --> 00:00:11.466
And inside of your scripts,
we're gonna put another one, build.

4
00:00:11.466 --> 00:00:14.960
And build is just going to be, webpack.

5
00:00:24.287 --> 00:00:26.075
&gt;&gt; Speaker 2: Onri has a question.

6
00:00:26.075 --> 00:00:27.109
Wants to know,

7
00:00:27.109 --> 00:00:32.150
can I use Webpack with JavaScript
files which are not doing any export?

8
00:00:32.150 --> 00:00:33.801
Will it combine all of them together?

9
00:00:35.543 --> 00:00:38.324
&gt;&gt; Brian Holt: If you have multiple
files that aren't exporting

10
00:00:38.324 --> 00:00:43.520
anything,
&gt;&gt; Brian Holt: It needs to know.

11
00:00:43.520 --> 00:00:52.240
So if I have JavaScript file one, webpack
is only going to follow that first file.

12
00:00:52.240 --> 00:00:54.470
So if you have no reference
to the second file,

13
00:00:54.470 --> 00:00:56.430
webpack doesn't know to
include the second file.

14
00:00:57.450 --> 00:01:01.270
You can give webpack multiple entries.

15
00:01:01.270 --> 00:01:06.818
And I'm assuming now, so this is me
just talking about my intuition.

16
00:01:06.818 --> 00:01:09.796
I assume it will just execute
both of those files, but

17
00:01:09.796 --> 00:01:13.846
if you need multiple entries I would
say look at the documentation on it.

18
00:01:13.846 --> 00:01:16.125
Because I've never had
that use case before.

19
00:01:22.133 --> 00:01:25.661
&gt;&gt; Brian Holt: Also, Frontend Masters has
a great webpack course that you should

20
00:01:25.661 --> 00:01:26.929
definitely check out.

21
00:01:26.929 --> 00:01:28.347
&gt;&gt; Speaker 3: I'm surprised
how popular it is.

22
00:01:28.347 --> 00:01:29.334
&gt;&gt; Speaker 4: I'm not.

23
00:01:29.334 --> 00:01:29.953
&gt;&gt; Brian Holt: It's a complicated.

24
00:01:29.953 --> 00:01:33.338
[CROSSTALK]
&gt;&gt; Speaker 3: It's like the whole course

25
00:01:33.338 --> 00:01:36.480
is just like configuring stuff, right?

26
00:01:36.480 --> 00:01:36.990
&gt;&gt; Brian Holt: Yep.
&gt;&gt; Speaker 3: And

27
00:01:36.990 --> 00:01:40.210
setting up build processes, and yet,
it's just like, incredibly popular.

28
00:01:40.210 --> 00:01:41.080
&gt;&gt; Brian Holt: I think it's fun.

29
00:01:41.080 --> 00:01:45.010
I like build processes, but
I think I'm like kind of in the minority.

30
00:01:45.010 --> 00:01:48.283
&gt;&gt; Speaker 3: Well, clearly, you're not in
the minority because it's super popular.

31
00:01:48.283 --> 00:01:49.556
&gt;&gt; Brian Holt: [LAUGH] Fair enough.

32
00:01:49.556 --> 00:01:52.810
Or maybe this is people sick of the docks,
yeah?

33
00:01:52.810 --> 00:01:54.614
&gt;&gt; Speaker 2: Can you flip
back to the webpack config?

34
00:01:54.614 --> 00:01:55.430
&gt;&gt; Brian Holt: Yeah.

35
00:01:55.430 --> 00:01:58.510
&gt;&gt; Speaker 2: Travis has a question
about excluding node modules.

36
00:01:58.510 --> 00:02:01.860
&gt;&gt; Brian Holt: Mm-hm, yeah,
that's probably a good idea to do.

37
00:02:03.380 --> 00:02:07.667
So what you could do here is,
you could say exclude, and

38
00:02:07.667 --> 00:02:10.507
probably should, node_modules.

39
00:02:14.036 --> 00:02:17.147
&gt;&gt; Brian Holt: And
this actually will speed up our build.

40
00:02:17.147 --> 00:02:20.597
And what you're just doing here,
is you're telling hey,

41
00:02:20.597 --> 00:02:24.880
don't run my node modules through Babel,
because that's really slow.

42
00:02:24.880 --> 00:02:26.602
And for the most part you don't need to.

43
00:02:26.602 --> 00:02:28.690
We will need to at the end of the day.

44
00:02:28.690 --> 00:02:33.871
And actually, if you want to get even
more explicit, what you want to do,

45
00:02:33.871 --> 00:02:38.148
is you actually want to just include,
rather than exclude.

46
00:02:38.148 --> 00:02:40.516
So we're just gonna include
anything that's in the,

47
00:02:46.164 --> 00:02:47.480
&gt;&gt; Brian Holt: The JS directory.

48
00:02:49.479 --> 00:02:51.134
Whatever, we'll leave the node modules.

49
00:03:02.156 --> 00:03:05.530
&gt;&gt; Brian Holt: Whatever, obviously there
are many ways to solve this problem.

50
00:03:05.530 --> 00:03:07.430
But let's go ahead and do it the good way.

51
00:03:07.430 --> 00:03:14.677
We'll say include: and
we're gonna say path.resolve("js")

52
00:03:19.437 --> 00:03:24.022
&gt;&gt; Brian Holt: (__dirname, 'js').

53
00:03:25.822 --> 00:03:27.354
&gt;&gt; Brian Holt: Hopefully
that should still work.

54
00:03:30.996 --> 00:03:34.572
&gt;&gt; Brian Holt: But you're just, now we're
explicitly saying if this is not in my JS

55
00:03:34.572 --> 00:03:37.110
source directory,
do not run it through Babel.

56
00:03:38.950 --> 00:03:40.609
And let's see.

57
00:03:40.609 --> 00:03:44.624
The dangers of configuring webpack on
the fly, I never suggest that, but

58
00:03:44.624 --> 00:03:45.808
let's see how I did.

59
00:03:47.516 --> 00:03:49.992
&gt;&gt; Brian Holt: Cool, and
notice that it actually went a lot faster,

60
00:03:49.992 --> 00:03:52.700
because we're not doing any
of our node modules anymore.

