WEBVTT

1
00:00:00.170 --> 00:00:01.130
&gt;&gt; Brian Holt: Other questions?

2
00:00:01.130 --> 00:00:04.910
&gt;&gt; Speaker 2: David is asking,
I've seen a little bit of react

3
00:00:04.910 --> 00:00:09.250
in a component I have returned,
and then there's a string.

4
00:00:09.250 --> 00:00:15.510
So, element div, element h1,
some string, closing h1, closing div.

5
00:00:15.510 --> 00:00:18.500
How is this different then from what
you're doing with the function?

6
00:00:18.500 --> 00:00:19.710
&gt;&gt; Speaker 3: He's talking about JSX.

7
00:00:19.710 --> 00:00:23.030
&gt;&gt; Brian Holt: Yeah,
we'll get to JSX in like a couple hours.

8
00:00:23.030 --> 00:00:26.370
So hold on to that question if you don't
feel like it's been answered then.

9
00:00:27.550 --> 00:00:28.984
It will get answered, so
don't worry about it.

10
00:00:28.984 --> 00:00:34.878
[LAUGH]
&gt;&gt; Brian Holt: Yeah,

11
00:00:34.878 --> 00:00:39.000
so we are using barebones-react
with no compilation.

12
00:00:39.000 --> 00:00:41.070
No JSX or anything like that,
just to show you

13
00:00:42.680 --> 00:00:47.200
that this is pretty
simple behind the scene.

14
00:00:47.200 --> 00:00:50.700
And I also say like, you can, you don't
ever have to useJSX, or Babble, or

15
00:00:50.700 --> 00:00:52.020
Webpack, or any of these things.

16
00:00:53.210 --> 00:00:55.660
You can really write apps this way,
I've seen people do it.

17
00:00:55.660 --> 00:00:57.360
I just don't recommend it.

18
00:00:57.360 --> 00:01:01.920
I would say of all of the React people
that I know, which is quite a few,

19
00:01:01.920 --> 00:01:05.800
There's exactly one company that I
know that writes React without JSX.

20
00:01:07.080 --> 00:01:08.960
I'm not gonna call them out,
but it's kinda weird.

21
00:01:10.430 --> 00:01:13.760
&gt;&gt; Speaker 2: You said that
null was the attribute field,

22
00:01:13.760 --> 00:01:17.415
does that translate to the HTML
attribute for that component?

23
00:01:17.415 --> 00:01:19.718
&gt;&gt; Brian Holt: Mm-hm.

24
00:01:19.718 --> 00:01:22.050
&gt;&gt; Speaker 2: Okay, so
we're just giving it no attributes?

25
00:01:22.050 --> 00:01:22.830
&gt;&gt; Brian Holt: Correct.
&gt;&gt; Speaker 2: Okay.

26
00:01:22.830 --> 00:01:23.920
&gt;&gt; Brian Holt: Yep.
&gt;&gt; Speaker 2: Cool.

27
00:01:23.920 --> 00:01:26.070
Question about downloading the dev tools.

28
00:01:26.070 --> 00:01:27.830
Should we do it or
should they do not do it?

29
00:01:27.830 --> 00:01:30.670
&gt;&gt; Brian Holt: That is the end
of tomorrow or end of today?

30
00:01:30.670 --> 00:01:35.122
We have a specific session just
on dev tools too, good question.

31
00:01:38.036 --> 00:01:39.740
&gt;&gt; Brian Holt: I thought there was
something else I was gonna say.

32
00:01:42.460 --> 00:01:43.970
Nope, I don't remember,
it wasn't important.

33
00:01:48.424 --> 00:01:49.160
&gt;&gt; Brian Holt: Okay.

34
00:01:49.160 --> 00:01:53.420
So let's go ahead and move on and
create our second component.

35
00:01:56.600 --> 00:01:58.830
Yeah, I think I covered everything.

36
00:01:58.830 --> 00:02:02.760
So first of all, this is super annoying so
let's go ahead and create a new file.

37
00:02:04.660 --> 00:02:09.720
And call it, we're just gonna
create a new folder, call it js.

38
00:02:09.720 --> 00:02:16.374
And inside of js, we're gonna
create a file called ClientApp.js.

39
00:02:21.482 --> 00:02:26.616
&gt;&gt; Brian Holt: Okay, and then in
the HTML of that js, we're gonna just

40
00:02:26.616 --> 00:02:31.675
cut all this stuff out and
move that to ClientApp.js.

41
00:02:31.675 --> 00:02:38.200
And then here, we're going to
just pull it in as a script.

42
00:02:38.200 --> 00:02:42.890
So we're going to say,
"js/ClientApp.js." All right?

43
00:02:42.890 --> 00:02:44.560
And then we can move everything
into a separate file.

44
00:02:47.683 --> 00:02:49.350
&gt;&gt; Brian Holt: Cuz this is
getting annoying really fast.

45
00:02:55.578 --> 00:02:56.632
&gt;&gt; Brian Holt: Syntax highlighting.

46
00:02:56.632 --> 00:03:00.673
For those of you that are using Sublime,
I highly, highly,

47
00:03:00.673 --> 00:03:05.200
highly suggest using Package Control,
that you Install Package.

48
00:03:05.200 --> 00:03:10.810
I'm gonna List Package and
Install the Babel package.

49
00:03:10.810 --> 00:03:14.180
This is gonna make your syntax
highlighting ten billion times better.

50
00:03:14.180 --> 00:03:16.569
So make sure that you
install the Babel package,

51
00:03:16.569 --> 00:03:19.290
and then what you'll have
to do is go into a js file.

52
00:03:19.290 --> 00:03:22.946
You're gonna say open all,

53
00:03:22.946 --> 00:03:27.973
with current extension as Let's see,

54
00:03:27.973 --> 00:03:31.950
Babel, JavaScript/Babel.

55
00:03:31.950 --> 00:03:35.340
Just do it,
it's gonna save you a bunch of heartache.

56
00:03:35.340 --> 00:03:38.190
It also handles ES6 really well, so, yeah.

57
00:03:38.190 --> 00:03:40.750
It's definitely the one to use.

58
00:03:40.750 --> 00:03:44.560
If you are using Vim one, good luck.

59
00:03:44.560 --> 00:03:48.690
But two,
I've heard Vim Box is really good for JSX.

60
00:03:48.690 --> 00:03:50.130
So check out Vim Box.

61
00:03:50.130 --> 00:03:51.630
It's written by one of
the React Core team.

62
00:03:51.630 --> 00:03:55.477
So you can probably be
pretty sure that it works.

63
00:03:55.477 --> 00:04:01.060
[LAUGH] And if you're Emacs,
uninstall it and then install Vim, right.

64
00:04:01.060 --> 00:04:02.220
Like that's the joke.

65
00:04:02.220 --> 00:04:05.050
I don't care, I use Sublime cuz I'm lazy.

66
00:04:05.050 --> 00:04:07.630
I think Adam and code work out
of the box pretty well with JSX.

67
00:04:07.630 --> 00:04:09.353
I think you're gonna be okay.

68
00:04:14.581 --> 00:04:18.022
&gt;&gt; Brian Holt: Cool, so
what we're gonna do now,

69
00:04:18.022 --> 00:04:22.280
is we're gonna create a second component.

70
00:04:22.280 --> 00:04:30.540
We're gonna say var MyTitle
= React.createClass.

71
00:04:30.540 --> 00:04:33.000
This is what I was wanting to say earlier.

72
00:04:34.020 --> 00:04:34.880
The render function.

73
00:04:38.088 --> 00:04:42.098
&gt;&gt; Brian Holt: Every component in
React must have a render method,

74
00:04:42.098 --> 00:04:47.850
unexceptionally, always 100% of
the time must have a render method.

75
00:04:47.850 --> 00:04:51.800
And that render method
must always return markup.

76
00:04:53.340 --> 00:04:56.430
Those are two cardinal rules of React.

77
00:04:59.070 --> 00:05:02.500
Furthermore, that render method
must be a pure function.

78
00:05:02.500 --> 00:05:04.820
To borrow the functional
programming terminology.

79
00:05:04.820 --> 00:05:08.040
It just means that it should
not modify any state.

80
00:05:08.040 --> 00:05:11.080
It should not do anything
that has any lasting effect.

81
00:05:11.080 --> 00:05:14.860
You should be able to run that
render method 10 billion times.

82
00:05:14.860 --> 00:05:15.510
And the 10 billionth and

83
00:05:15.510 --> 00:05:19.610
first time you get the exact same
response as you did on the first time.

84
00:05:25.421 --> 00:05:26.650
&gt;&gt; Brian Holt: So, yeah.

85
00:05:26.650 --> 00:05:28.960
That is super helpful to keep in mind.

86
00:05:32.734 --> 00:05:37.934
&gt;&gt; Brian Holt: Okay, so we're gonna
return here and we're gonna return

87
00:05:37.934 --> 00:05:43.629
a div(null,)
&gt;&gt; Brian Holt: with

88
00:05:43.629 --> 00:05:49.163
an h1 inside of that that says (null)
&gt;&gt; Brian Holt: Check

89
00:05:49.163 --> 00:05:54.100
out this component or whatever you
wanna put there, whatever string, okay.

90
00:05:54.100 --> 00:05:57.190
And what we're gonna get
rid of this h1 right here.

91
00:05:59.140 --> 00:06:03.570
And we're gonna put a React.createClass,
sorry, createElement rather

92
00:06:05.420 --> 00:06:10.606
of MyTitle
&gt;&gt; Brian Holt: And

93
00:06:10.606 --> 00:06:12.160
put commas in between those.

94
00:06:19.913 --> 00:06:26.100
&gt;&gt; Brian Holt: So something I'll tell you
here with these divs and create class.

95
00:06:26.100 --> 00:06:31.555
You can either give it multiple separate
parameters or you can give it an array.

96
00:06:38.257 --> 00:06:39.760
&gt;&gt; Brian Holt: Both of those work okay.

97
00:06:39.760 --> 00:06:41.540
I guess we don't have
to indent it anymore.

98
00:06:44.693 --> 00:06:45.208
&gt;&gt; Brian Holt: Well, maybe you do.

99
00:06:45.208 --> 00:06:47.354
Anyway, cool.

100
00:06:50.516 --> 00:06:53.310
&gt;&gt; Brian Holt: So
let's talk about what's going on here.

101
00:06:53.310 --> 00:06:56.310
So I created this MyTitle stamp.

102
00:06:56.310 --> 00:06:59.040
I did the createClass and
I created a new type of component.

103
00:07:00.060 --> 00:07:04.770
And then here, inside of MyFirstComponent
which is on yet another class,

104
00:07:04.770 --> 00:07:08.430
I created multiple instances
of this MyTitle component.

105
00:07:09.510 --> 00:07:12.950
So this is kinda to demonstrate to
you that you build small components.

106
00:07:12.950 --> 00:07:17.300
And then you build bigger components that
encapsulate multiple, smaller components.

107
00:07:17.300 --> 00:07:18.760
And that's all apps are in React.

108
00:07:18.760 --> 00:07:21.895
It's just components made of
components made up of more components.

109
00:07:25.108 --> 00:07:30.412
&gt;&gt; Brian Holt: Okay, so save that and
come back to your page, refresh, and

110
00:07:30.412 --> 00:07:35.410
you should see check out this
component multiple times.

111
00:07:39.791 --> 00:07:42.300
&gt;&gt; Brian Holt: So again,
this isn't super compelling yet, right,

112
00:07:42.300 --> 00:07:43.560
this is still pretty dumb.

113
00:07:44.720 --> 00:07:46.760
It will be way easier to write
this mark up on our own.

114
00:07:48.130 --> 00:07:51.390
But we're getting to where this gets cool,
I promise, just stick it out with me.

115
00:07:53.450 --> 00:07:53.950
Any questions?

116
00:07:58.764 --> 00:08:00.340
&gt;&gt; Brian Holt: Anyone having any issues?

117
00:08:02.490 --> 00:08:04.340
&gt;&gt; Speaker 2: Can you go back
to the source for a minute?

118
00:08:04.340 --> 00:08:04.840
&gt;&gt; Brian Holt: Yeah.

119
00:08:08.170 --> 00:08:09.690
This part okay?

120
00:08:09.690 --> 00:08:10.190
&gt;&gt; Speaker 2: Yep.

121
00:08:20.406 --> 00:08:21.600
&gt;&gt; Brian Holt: Okay, yep.

122
00:08:21.600 --> 00:08:23.700
So everything there looks good.

123
00:08:31.421 --> 00:08:33.890
&gt;&gt; Brian Holt: Yeah,
you can ignore the warnings.

124
00:08:33.890 --> 00:08:38.200
They probably are warnings in the,
well I don't even see warnings.

125
00:08:38.200 --> 00:08:43.210
But if there are warnings,
you can ignore those for now.

126
00:08:47.883 --> 00:08:51.070
&gt;&gt; Brian Holt: I saw that Christopher B
asks why am I not using semi colons.

127
00:08:51.070 --> 00:08:52.550
Because death to semi colons.

128
00:08:52.550 --> 00:08:53.050
That's why.

129
00:08:54.570 --> 00:08:59.790
We're using lay to table using
standard to lint our code which just

130
00:08:59.790 --> 00:09:02.950
infuriates lots of people, and
I just feed on their hate.

131
00:09:02.950 --> 00:09:05.460
I just love it.

132
00:09:05.460 --> 00:09:09.680
No, I just, I don't think semicolons
are necessary in java scripts.

133
00:09:09.680 --> 00:09:14.120
So in my personal projects and
by extension you, when you listen to me,

134
00:09:14.120 --> 00:09:16.050
I don't use semicolons, so.

135
00:09:17.060 --> 00:09:21.490
&gt;&gt; Speaker 2: There are a few cases
which bugs can arise but like you said

136
00:09:21.490 --> 00:09:25.880
uses taint standard JavaScript-
&gt;&gt; Brian Holt: Which catches all of them.

137
00:09:25.880 --> 00:09:29.220
&gt;&gt; Speaker 2: Library lint which
would catch any of those edge cases.

138
00:09:29.220 --> 00:09:29.720
&gt;&gt; Brian Holt: Yep.

139
00:09:31.450 --> 00:09:34.030
So you can use semicolons you
would just be wrong, that's all.

140
00:09:34.030 --> 00:09:37.510
&gt;&gt; Speaker 2: If you don't know
those rules you should at least look

141
00:09:37.510 --> 00:09:39.860
them up if you're not
going to use a linter.

142
00:09:39.860 --> 00:09:40.620
&gt;&gt; Brian Holt: Yeah.

143
00:09:40.620 --> 00:09:41.570
We'll just a linter.

144
00:09:41.570 --> 00:09:44.130
I think that's the answer
to that question.

