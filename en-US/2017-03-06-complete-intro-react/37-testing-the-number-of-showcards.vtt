WEBVTT

1
00:00:00.320 --> 00:00:01.821
&gt;&gt; Brian Holt: So yeah, we are going
to write two more quick tests.

2
00:00:01.821 --> 00:00:04.640
So, we're gonna import ShowCard.

3
00:00:04.640 --> 00:00:12.600
If you really want to, you can just put
another snapshot test here for ShowCard.

4
00:00:14.450 --> 00:00:21.986
I'm not going to and
then we are going to import preload,

5
00:00:21.986 --> 00:00:30.130
import preload from '../public/data/json'.

6
00:00:30.130 --> 00:00:35.177
I'm gonna move these up.

7
00:00:40.166 --> 00:00:43.553
&gt;&gt; Brian Holt: And what I wanna
test now is I have 15 TV shows,

8
00:00:43.553 --> 00:00:48.750
I just want to make sure that it
renders 15 ShowCards for 15 TV shows.

9
00:00:50.510 --> 00:00:51.978
So, I'm gonna write a test.

10
00:00:55.148 --> 00:01:01.920
&gt;&gt; Brian Holt: 'Search should
render a ShowCard for each show.

11
00:01:10.913 --> 00:01:15.296
&gt;&gt; Brian Holt: And say, const component =

12
00:01:15.296 --> 00:01:20.046
shallow(&lt;Search /&gt;) and

13
00:01:20.046 --> 00:01:24.062
then I'm just gonna write

14
00:01:24.062 --> 00:01:31.929
an expect
(preload.shows.length).toEqual(component.-

15
00:01:31.929 --> 00:01:39.417
find(ShowCard).length).

16
00:01:46.267 --> 00:01:49.189
&gt;&gt; Speaker 2: The QA person tells
me that those should be reversed.

17
00:01:52.997 --> 00:01:55.077
&gt;&gt; Brian Holt: That snapshot
shouldn't be first.

18
00:01:55.077 --> 00:01:59.510
&gt;&gt; Speaker 2: The component find ShowCard
length should be inside the expect and

19
00:01:59.510 --> 00:02:03.360
preload shows length
should be what it equals.

20
00:02:03.360 --> 00:02:04.250
&gt;&gt; Brian Holt: Okay.

21
00:02:04.250 --> 00:02:05.952
&gt;&gt; Speaker 2: But
that's the QA person in me.

22
00:02:05.952 --> 00:02:10.741
&gt;&gt; Brian Holt: [LAUGH]
The developer in me just doesn't give

23
00:02:10.741 --> 00:02:11.739
a shit about anything.

24
00:02:11.739 --> 00:02:15.014
So, [LAUGH] it works on my computer.

25
00:02:15.014 --> 00:02:17.432
I buy that.

26
00:02:25.231 --> 00:02:27.691
&gt;&gt; Brian Holt: Lord knows,
I am the worst at QA.

27
00:02:37.909 --> 00:02:41.580
&gt;&gt; Brian Holt: So,
let's chat about what's going on here.

28
00:02:41.580 --> 00:02:42.877
So, we're doing another
shallow render of search.

29
00:02:42.877 --> 00:02:46.819
By now you've seen what that looks like.

30
00:02:46.819 --> 00:02:48.634
We're saying, .find, which more or

31
00:02:48.634 --> 00:02:52.360
less works like how you would
expect like a jQuery type selector.

32
00:02:52.360 --> 00:02:56.411
With the additional feature that we can
pass it actually a React component says,

33
00:02:56.411 --> 00:03:00.284
hey, go out and find all the show card
components that you have inside of me and

34
00:03:00.284 --> 00:03:02.444
tell me how many you
have with that length.

35
00:03:02.444 --> 00:03:06.880
It's going to give you an array
back of all these components.

36
00:03:06.880 --> 00:03:12.150
So I said, you should find as
many ShowCards as I have shows.

37
00:03:12.150 --> 00:03:13.718
That's the basic gist of
what this is testing.

38
00:03:13.718 --> 00:03:18.370
So if I have 15 shows inside of my
preload, then I should have 15 ShowCards.

39
00:03:21.979 --> 00:03:24.480
&gt;&gt; Brian Holt: So
if I save that and run it.

40
00:03:31.643 --> 00:03:32.566
&gt;&gt; Brian Holt: Should pass.

41
00:03:34.317 --> 00:03:36.698
&gt;&gt; Brian Holt: But a test is only as
interesting as how well you can break it,

42
00:03:36.698 --> 00:03:37.600
so let's go break it.

43
00:03:38.870 --> 00:03:43.790
So if we go into search, what happens if
I give it a default searchTerm if I say,

44
00:03:43.790 --> 00:03:44.359
house?

45
00:03:46.970 --> 00:03:51.481
Well, now it won't render all 15,
this can only render 2.

46
00:03:51.481 --> 00:03:53.880
So, we expect this test to now fail.

47
00:03:56.382 --> 00:03:59.437
&gt;&gt; Brian Holt: So,
I expected to get 21 and I received 2.

48
00:04:02.611 --> 00:04:05.660
&gt;&gt; Brian Holt: Yeah, so
I guess the QA part of you was right,

49
00:04:05.660 --> 00:04:09.050
[LAUGH] cuz you wouldn't expect it to.

50
00:04:09.050 --> 00:04:10.900
Yeah, I'm a slum uptake, but you're right.

51
00:04:12.670 --> 00:04:15.430
So, does that make sense
of why that failed?

52
00:04:15.430 --> 00:04:16.310
It's kind of an interesting test.

53
00:04:16.310 --> 00:04:22.090
That's not necessarily the way you would
expect it to break, but that's how it is.

