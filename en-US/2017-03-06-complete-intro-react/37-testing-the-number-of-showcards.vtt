WEBVTT

1
00:00:00.320 --> 00:00:01.821
&gt;&gt; Brian Holt: So yeah, we are going
to write two more quick tests.

2
00:00:01.821 --> 00:00:04.640
So, we're gonna import ShowCard.

3
00:00:04.640 --> 00:00:12.600
If you really want to, you can just put
another snapshot test here for ShowCard.

4
00:00:14.450 --> 00:00:21.986
I'm not going to and
then we are going to import preload,

5
00:00:21.986 --> 00:00:30.130
import preload from '../public/data/json'.

6
00:00:30.130 --> 00:00:34.258
I'm gonna move these

7
00:00:34.258 --> 00:00:40.420
up.
&gt;&gt; Brian Holt: And

8
00:00:40.420 --> 00:00:43.553
what I wanna test now
is I have 15 TV shows,

9
00:00:43.553 --> 00:00:48.750
I just want to make sure that it
renders 15 ShowCards for 15 TV shows.

10
00:00:50.510 --> 00:00:56.437
So, I'm gonna write a test.
&gt;&gt; Brian Holt: 'Search

11
00:00:56.437 --> 00:01:01.920
should render a ShowCard for each show.

12
00:01:10.913 --> 00:01:15.296
&gt;&gt; Brian Holt: And say, const component =

13
00:01:15.296 --> 00:01:20.046
shallow(&lt;Search /&gt;) and

14
00:01:20.046 --> 00:01:24.062
then I'm just gonna write

15
00:01:24.062 --> 00:01:31.929
an expect
(preload.shows.length).toEqual(component.-

16
00:01:31.929 --> 00:01:39.417
find(ShowCard).length).

17
00:01:46.267 --> 00:01:47.691
&gt;&gt; Speaker 2: The QA person tells me that

18
00:01:47.691 --> 00:01:53.265
those should be reversed.
&gt;&gt; Brian Holt: That

19
00:01:53.265 --> 00:01:56.978
snapshot shouldn't be first.
&gt;&gt; Speaker 2: The component find ShowCard

20
00:01:56.978 --> 00:02:01.886
length should be inside the expect and
preload shows length should be what

21
00:02:01.886 --> 00:02:04.250
it equals.
&gt;&gt; Brian Holt: Okay.

22
00:02:04.250 --> 00:02:05.699
&gt;&gt; Speaker 2: But that's the QA person in

23
00:02:05.699 --> 00:02:09.151
me.
&gt;&gt; Brian Holt: [LAUGH]

24
00:02:09.151 --> 00:02:10.741
The developer in me just doesn't give

25
00:02:10.741 --> 00:02:11.739
a shit about anything.

26
00:02:11.739 --> 00:02:15.014
So, [LAUGH] it works on my computer.

27
00:02:15.014 --> 00:02:17.432
I buy that.

28
00:02:25.231 --> 00:02:26.196
&gt;&gt; Brian Holt: Lord knows,

29
00:02:26.196 --> 00:02:27.691
I am the worst at QA.

30
00:02:37.909 --> 00:02:41.580
&gt;&gt; Brian Holt: So,
let's chat about what's going on here.

31
00:02:41.580 --> 00:02:42.877
So, we're doing another
shallow render of search.

32
00:02:42.877 --> 00:02:46.819
By now you've seen what that looks like.

33
00:02:46.819 --> 00:02:48.634
We're saying, .find, which more or

34
00:02:48.634 --> 00:02:52.360
less works like how you would
expect like a jQuery type selector.

35
00:02:52.360 --> 00:02:56.411
With the additional feature that we can
pass it actually a React component says,

36
00:02:56.411 --> 00:03:00.284
hey, go out and find all the show card
components that you have inside of me and

37
00:03:00.284 --> 00:03:02.444
tell me how many you
have with that length.

38
00:03:02.444 --> 00:03:06.880
It's going to give you an array
back of all these components.

39
00:03:06.880 --> 00:03:12.150
So I said, you should find as
many ShowCards as I have shows.

40
00:03:12.150 --> 00:03:13.718
That's the basic gist of
what this is testing.

41
00:03:13.718 --> 00:03:18.370
So if I have 15 shows inside of my
preload, then I should have 15 ShowCards.

42
00:03:21.979 --> 00:03:23.715
&gt;&gt; Brian Holt: So if I save that and

43
00:03:23.715 --> 00:03:32.104
run it.
&gt;&gt; Brian Holt: Should

44
00:03:32.104 --> 00:03:34.457
pass.
&gt;&gt; Brian Holt: But

45
00:03:34.457 --> 00:03:37.600
a test is only as interesting as how well
you can break it, so let's go break it.

46
00:03:38.870 --> 00:03:43.790
So if we go into search, what happens if
I give it a default searchTerm if I say,

47
00:03:43.790 --> 00:03:44.359
house?

48
00:03:46.970 --> 00:03:51.481
Well, now it won't render all 15,
this can only render 2.

49
00:03:51.481 --> 00:03:56.702
So, we expect this test to now fail.
&gt;&gt; Brian Holt: So,

50
00:03:56.702 --> 00:04:03.092
I expected to get 21 and I received 2.
&gt;&gt; Brian Holt: Yeah,

51
00:04:03.092 --> 00:04:09.050
so I guess the QA part of you was right,
[LAUGH] cuz you wouldn't expect it to.

52
00:04:09.050 --> 00:04:10.900
Yeah, I'm a slum uptake, but you're right.

53
00:04:12.670 --> 00:04:15.430
So, does that make sense
of why that failed?

54
00:04:15.430 --> 00:04:16.310
It's kind of an interesting test.

55
00:04:16.310 --> 00:04:22.090
That's not necessarily the way you would
expect it to break, but that's how it is.

