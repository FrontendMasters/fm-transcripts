WEBVTT

1
00:00:00.590 --> 00:00:04.030
&gt;&gt; Brian Holt: So now,
we are able to import our CSS files as if

2
00:00:04.030 --> 00:00:07.700
they were like JavaScript,
which is weird but kind of cool.

3
00:00:07.700 --> 00:00:09.890
Yeah, let's go into clientapp.js.

4
00:00:09.890 --> 00:00:11.988
So, save this, first of all.

5
00:00:11.988 --> 00:00:14.090
Go into clientapp.js.

6
00:00:14.090 --> 00:00:16.040
First, we're gonna not
use MyTitle anymore.

7
00:00:16.040 --> 00:00:17.300
You're welcome to keep it.

8
00:00:17.300 --> 00:00:18.650
You're welcome to drop it.

9
00:00:18.650 --> 00:00:20.570
Up to you, but
we will no longer be writing to it.

10
00:00:22.040 --> 00:00:24.820
So, we're kind of starting
from the beginning again.

11
00:00:24.820 --> 00:00:26.690
So in fact, I'm going to do just that.

12
00:00:26.690 --> 00:00:27.961
And I'm going to start all over.

13
00:00:30.321 --> 00:00:32.681
&gt;&gt; Brian Holt: Again,
this is in client app.js.

14
00:00:32.681 --> 00:00:34.902
So, import react from react.

15
00:00:37.902 --> 00:00:46.010
&gt;&gt; Brian Holt: Then we're going
to import render from react-dom.

16
00:00:46.010 --> 00:00:50.020
Now this might look like
some wierd syntax to you.

17
00:00:50.020 --> 00:00:54.750
This is just saying that the react-dom
package exports a render function.

18
00:00:54.750 --> 00:00:55.620
I just want that.

19
00:00:55.620 --> 00:00:59.030
Now, not only does that make it
a little bit more convenient for

20
00:00:59.030 --> 00:01:00.980
writing I don't have to
say react-dom.render.

21
00:01:00.980 --> 00:01:02.870
I can just call the render function.

22
00:01:02.870 --> 00:01:05.790
But we talked a little bit about how
webpack can eliminate debt code.

23
00:01:05.790 --> 00:01:10.630
This is saying the only thing I need
from react is the render function.

24
00:01:10.630 --> 00:01:14.050
Include everything it needs to run that,
don't include anything else.

25
00:01:14.050 --> 00:01:16.540
So this is giving webpack the opportunity

26
00:01:16.540 --> 00:01:19.310
to eliminate a bunch of dead code
from the react-dom package for you.

27
00:01:20.660 --> 00:01:21.470
I think that's pretty great.

28
00:01:23.430 --> 00:01:24.312
You can disagree with me,
but you're wrong.

29
00:01:27.292 --> 00:01:30.605
&gt;&gt; Brian Holt: Just kidding, that's
a really dumb thing to say, okay, so.

30
00:01:30.605 --> 00:01:33.660
[LAUGH] Any questions about that?

31
00:01:33.660 --> 00:01:36.270
Yeah, that's all those curly braces mean.

32
00:01:36.270 --> 00:01:38.050
It's like just give me
this particular piece.

33
00:01:39.630 --> 00:01:42.940
Okay, and then here we're gonna
do that fancy pants CSS import.

34
00:01:42.940 --> 00:01:50.507
So I'm gonna say,
../public/normalize.css and

35
00:01:50.507 --> 00:01:55.670
import ../public/style.css.

36
00:01:55.670 --> 00:01:59.520
So now, all of our styles
are going to be pulled in.

37
00:02:00.690 --> 00:02:05.400
And just so you can see it, first of all,
I left you a little note there.

38
00:02:05.400 --> 00:02:09.160
If anyone wants to look at my CCS,
this is bad CSS.

39
00:02:09.160 --> 00:02:11.620
Do not write to your CSS this way.

40
00:02:11.620 --> 00:02:15.530
So, I felt like if I wrote it in the file,
then you'd have to listen to me.

41
00:02:15.530 --> 00:02:17.430
That almost never seems to work that way,
but whatever.

42
00:02:19.270 --> 00:02:23.330
But I wrote it really structurally
based so that you don't have to write

43
00:02:23.330 --> 00:02:26.350
a bunch of class names cuz that
gets really tedious really fast.

44
00:02:26.350 --> 00:02:28.700
So, as long as you follow my naming
conventions and my structuring,

45
00:02:28.700 --> 00:02:30.110
all the style just get comes for free.

46
00:02:31.200 --> 00:02:33.072
Cuz look at somebody's lectures,
like they're just stupid.

47
00:02:35.514 --> 00:02:37.012
&gt;&gt; Brian Holt: Like this one,
this is my favorite.

48
00:02:39.792 --> 00:02:42.452
&gt;&gt; Brian Holt: I did that for
you, each and every one of you.

49
00:02:42.452 --> 00:02:46.680
[LAUGH] Okay, so that's what style.css is.

50
00:02:48.930 --> 00:02:53.070
Okay, and then we're just going
to start building our new app.

51
00:02:53.070 --> 00:03:01.100
const App = React.createClass, okay.

52
00:03:01.100 --> 00:03:06.090
Render and then return

53
00:03:10.660 --> 00:03:14.750
and we are going to do,

54
00:03:14.750 --> 00:03:18.590
div class name equals app.

55
00:03:19.920 --> 00:03:21.760
So, another point of annoyance for

56
00:03:21.760 --> 00:03:25.260
new comers to react and
I guess everyone for that matter.

57
00:03:26.580 --> 00:03:28.870
It's not class it's class name, right?

58
00:03:28.870 --> 00:03:32.320
And that's just something you gotta
get used to with writing React.

59
00:03:33.950 --> 00:03:36.170
Now people starts to question why?

60
00:03:36.170 --> 00:03:37.930
It seems like a silly thing to do.

61
00:03:37.930 --> 00:03:41.710
Well, class is a JavaScript reserved word,
right?

62
00:03:43.020 --> 00:03:43.922
So, unfortunately we just can't.

63
00:03:46.302 --> 00:03:49.875
&gt;&gt; Brian Holt: But I will say that it's
not without reason that they do it

64
00:03:49.875 --> 00:03:50.630
this way.

65
00:03:50.630 --> 00:03:54.870
The name of the DOM API
to manipulate class or

66
00:03:54.870 --> 00:03:57.130
read from class is actually className.

67
00:03:57.130 --> 00:04:01.382
So that's actually where it comes from
&gt;&gt; Brian Holt: So

68
00:04:01.382 --> 00:04:05.610
I'm not making it up,
it's still kind of dump though.

69
00:04:05.610 --> 00:04:13.172
Okay, div className = 'landing',
&gt;&gt; Brian Holt: Okay,

70
00:04:13.172 --> 00:04:14.980
and then we're gonna have a h1 here.

71
00:04:16.820 --> 00:04:18.850
That's gonna be our brand name.

72
00:04:18.850 --> 00:04:19.899
You can call it whatever you want.

73
00:04:21.350 --> 00:04:24.460
I called mine svideo for
reasons I cannot remember.

74
00:04:24.460 --> 00:04:27.190
I remember I wrote this at
like three in the morning so

75
00:04:27.190 --> 00:04:29.550
that was the best brand name I could
come up with at that point in time.

76
00:04:30.870 --> 00:04:32.170
There was probably whiskey involved.

77
00:04:34.280 --> 00:04:40.120
I'm gonna put in input,
type equals text Placeholder

78
00:04:40.120 --> 00:04:46.190
equals search under your closing
slash coz you need it and

79
00:04:46.190 --> 00:04:50.000
then an a tag or browse all,

80
00:04:56.060 --> 00:05:00.570
okay pretty much all is
application of what things that

81
00:05:00.570 --> 00:05:05.500
we've already done.

82
00:05:05.500 --> 00:05:06.460
&gt;&gt; Speaker 2: Question.

83
00:05:06.460 --> 00:05:09.471
&gt;&gt; Brian Holt: Yeah.
&gt;&gt; Speaker 2: Any preference of using jsx

84
00:05:09.471 --> 00:05:12.510
versus js for the extension?

85
00:05:12.510 --> 00:05:15.610
&gt;&gt; Brian Holt: The answer is,
I don't really care.

86
00:05:15.610 --> 00:05:20.990
The reason why I went with JS for
this particular workshop is that's

87
00:05:20.990 --> 00:05:26.290
kind of the direction Facebook has gone,
as far as I can tell externally.

88
00:05:27.370 --> 00:05:32.280
But some people like to make their
JSX files have the extension,

89
00:05:32.280 --> 00:05:36.759
file extension JSX to like signify this
is the file that needs to be compiled.

90
00:05:38.070 --> 00:05:39.330
I don't care.

91
00:05:39.330 --> 00:05:44.700
As long as you like keep it straight I
don't think it really matters, okay.

92
00:05:44.700 --> 00:05:50.162
Okay, and then we need to put
a render call down at the bottom app,

93
00:05:54.540 --> 00:05:57.378
&gt;&gt; Brian Holt: DocumentsgetElementById

94
00:05:57.378 --> 00:06:04.800
app, so this might look a little
weird to you right here, app.

95
00:06:04.800 --> 00:06:06.870
But remember what this gets transpiled to.

96
00:06:06.870 --> 00:06:09.737
This is just getting compiled
to react.createElements, so

97
00:06:09.737 --> 00:06:11.455
might as well just write it that way.

98
00:06:18.076 --> 00:06:18.895
&gt;&gt; Brian Holt: Any questions about that?

99
00:06:25.490 --> 00:06:26.495
&gt;&gt; Brian Holt: I'll give you
sec to finish writing it down.

100
00:06:35.117 --> 00:06:38.435
&gt;&gt; Speaker 3: Why did you say app is and
carrots in the render call?

101
00:06:38.435 --> 00:06:42.675
Or is React like,
is written like an HTML tag?

102
00:06:42.675 --> 00:06:46.182
&gt;&gt; Brian Holt: Because if you remember
the way we wrote it previously was

103
00:06:46.182 --> 00:06:52.210
React.createElement,
&gt;&gt; Brian Holt: App, right?

104
00:06:52.210 --> 00:06:56.370
And then, so we were writing
React.createElement there, right?

105
00:06:56.370 --> 00:07:00.210
It's like the there's a stamp and
then there's an individual stamp, right?

106
00:07:00.210 --> 00:07:03.480
So we needed to make an individual stamp,
like one instance of that.

107
00:07:03.480 --> 00:07:06.805
So instead of doing react.create element
here, since that's getting transpiled to

108
00:07:06.805 --> 00:07:09.430
react.create element anyway,
we can just write it like that.

109
00:07:09.430 --> 00:07:11.500
Does that make sense?

110
00:07:11.500 --> 00:07:12.480
Cool, yeah.

111
00:07:12.480 --> 00:07:14.930
&gt;&gt; Speaker 4: Question
about syntax highlighting.

112
00:07:16.140 --> 00:07:20.835
If the JSX code,
making that look pretty and sublime,

113
00:07:20.835 --> 00:07:25.850
is that a different package
than the Babel package?

114
00:07:25.850 --> 00:07:29.240
&gt;&gt; Brian Holt: Nope it's not, but you need
to actually use the Babble package, right?

115
00:07:29.240 --> 00:07:32.270
So, I know it's really tiny, I don't know
how to make it any bigger but the bottom

116
00:07:32.270 --> 00:07:36.700
right here you can see JavaScript
with babble in parentheses right?

117
00:07:36.700 --> 00:07:40.180
So, you need to make sure that you're
not using JavaScript right here,

118
00:07:40.180 --> 00:07:42.980
you're using babble JavaScript babble.

119
00:07:45.190 --> 00:07:47.110
Very key that you do that or
else it looks horrible.

120
00:07:47.110 --> 00:07:52.770
&gt;&gt; Speaker 3: And also the color
theme you're using in sublime.

121
00:07:52.770 --> 00:07:55.350
Might be changing at least the colors run.

122
00:07:55.350 --> 00:07:58.230
&gt;&gt; Brian Holt: Yeah, I use the one
the comes with the battle package

123
00:07:58.230 --> 00:08:00.680
which is Monachi, something or other.

124
00:08:01.780 --> 00:08:04.280
Color scheme, Babel, Monachi Phoenix.

125
00:08:04.280 --> 00:08:05.340
That's what I'm using.

126
00:08:05.340 --> 00:08:10.106
I don't know if it's any better,
that just happens to be what I use.

127
00:08:14.926 --> 00:08:15.684
&gt;&gt; Brian Holt: Other questions?

128
00:08:20.824 --> 00:08:23.926
&gt;&gt; Brian Holt: Okay, so save that.

129
00:08:30.524 --> 00:08:31.164
&gt;&gt; Brian Holt: Let's see.

130
00:08:43.066 --> 00:08:46.040
&gt;&gt; Brian Holt: Okay, cool,
I'm about to do that.

131
00:08:46.040 --> 00:08:49.460
So, we did Web Pack watch, that's fine.

132
00:08:49.460 --> 00:08:52.210
So yeah,
make sure your Web Pack watch is running.

133
00:08:52.210 --> 00:08:53.970
So npm run watch.

134
00:08:58.870 --> 00:08:59.760
Wait for it to build.

135
00:08:59.760 --> 00:09:01.180
It built.

136
00:09:01.180 --> 00:09:02.170
We are gonna refresh.

137
00:09:04.200 --> 00:09:06.700
I have a path problem, ha, path problems.

138
00:09:06.700 --> 00:09:11.830
You probably should see
something like this.

139
00:09:11.830 --> 00:09:15.225
Some of you might be
seeing background images.

140
00:09:15.225 --> 00:09:16.720
But we'll fix this momentarily.

141
00:09:20.018 --> 00:09:26.038
&gt;&gt; Brian Holt: Because if you look
at your, you should be, inspector.

142
00:09:26.038 --> 00:09:27.279
Anyway.

143
00:09:31.438 --> 00:09:36.789
&gt;&gt; Brian Holt: So that's should be more or
less what you're seeing here.

144
00:09:38.330 --> 00:09:41.608
I think in the style.css I
messed up the path for this.

145
00:09:44.550 --> 00:09:46.389
&gt;&gt; Brian Holt: Yeah, so
if you wanna make this work now,

146
00:09:46.389 --> 00:09:49.770
you just have to take off that leading
slash and I think that should work now.

147
00:09:49.770 --> 00:09:53.550
We'll fix it so
that won't matter here momentarily anyway.

148
00:09:53.550 --> 00:09:57.870
In fact you have to have the slash on,
so probably just leave it on.

149
00:09:59.430 --> 00:10:01.050
You can also switch
the number there if you want.

150
00:10:01.050 --> 00:10:06.111
I put one through five, if you want
different kinds of backgrounds.

151
00:10:06.111 --> 00:10:09.147
But, whatever, okay.

152
00:10:14.189 --> 00:10:16.060
&gt;&gt; Brian Holt: Any questions about this so
far?

153
00:10:16.060 --> 00:10:18.169
Let's go ahead and push a branch.

154
00:10:20.100 --> 00:10:20.910
Yes.
&gt;&gt; Speaker 5: My webpack

155
00:10:20.910 --> 00:10:24.620
is angry that you used
the universal selector in the CSS.

156
00:10:25.870 --> 00:10:26.820
&gt;&gt; Brian Holt: Is it?

157
00:10:26.820 --> 00:10:27.460
&gt;&gt; Speaker 5: Why would that be?

158
00:10:29.040 --> 00:10:31.580
&gt;&gt; Speaker 4: Yeah, Christopher is
having the same problem I think.

159
00:10:31.580 --> 00:10:33.450
&gt;&gt; Brian Holt: Yeah,
kill your web pack and run it again.

160
00:10:33.450 --> 00:10:35.248
Cuz that's something I
constantly forget to do.

161
00:10:39.910 --> 00:10:41.220
&gt;&gt; Speaker 5: All right, we're happy.

162
00:10:41.220 --> 00:10:42.000
&gt;&gt; Brian Holt: Cool.

163
00:10:42.000 --> 00:10:42.580
&gt;&gt; Speaker 5: Thank you.

164
00:10:42.580 --> 00:10:43.560
&gt;&gt; Brian Holt: Yep.

165
00:10:43.560 --> 00:10:45.690
These are problems like constantly
happen over and over again.

166
00:10:45.690 --> 00:10:47.560
It's like Groundhog's Day with these bugs.

167
00:10:47.560 --> 00:10:49.600
But it always still happens.

168
00:10:51.450 --> 00:10:54.310
&gt;&gt; Speaker 4: Jacob's asking you if we're
going to be using hot reload today?

169
00:10:54.310 --> 00:10:55.260
&gt;&gt; Brian Holt: No.
&gt;&gt; Speaker 4: He's very tired

170
00:10:55.260 --> 00:10:55.889
of refreshing.

171
00:10:58.110 --> 00:11:02.158
&gt;&gt; Brian Holt: Well, tough shit, I guess.

172
00:11:02.158 --> 00:11:05.070
[LAUGH] Sorry, Jacob.

173
00:11:05.070 --> 00:11:09.360
I'm not doing hot module reload because
they are in the midst of rewriting and

174
00:11:09.360 --> 00:11:12.630
the old one is not worth setting up,
and the new one's not done yet, so.

175
00:11:13.910 --> 00:11:16.730
How module three is coming.

176
00:11:16.730 --> 00:11:18.100
But it's still an early early alpha.

177
00:11:18.100 --> 00:11:20.840
They told me that the APIs
are not near complete.

178
00:11:20.840 --> 00:11:23.912
So, hashtag sorry not sorry.

179
00:11:23.912 --> 00:11:24.893
[LAUGH]

