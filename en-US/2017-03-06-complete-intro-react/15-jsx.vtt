WEBVTT

1
00:00:00.170 --> 00:00:02.620
&gt;&gt; Brian: So, JSX.

2
00:00:02.620 --> 00:00:06.890
To this point, we have been writing
just vanilla JavaScript with React and

3
00:00:06.890 --> 00:00:07.790
that is sufficient.

4
00:00:07.790 --> 00:00:09.310
That will get you as
far as you want to go.

5
00:00:10.770 --> 00:00:12.640
So why do we actually have JSX?

6
00:00:14.870 --> 00:00:18.458
Well, I think it's actually interesting to
talk a little about the history about JSX.

7
00:00:18.458 --> 00:00:23.560
So Facebook launched React and I'm trying
to remember which conference was it.

8
00:00:23.560 --> 00:00:29.474
It wasn't at JS Conf it was like,
I don't remember.

9
00:00:29.474 --> 00:00:34.322
Anyways conference they came out on stage
like hey we have this great new framework

10
00:00:34.322 --> 00:00:35.100
library out.

11
00:00:35.100 --> 00:00:37.130
It's amazing and you all should try it.

12
00:00:37.130 --> 00:00:38.790
Here it is go take a look and
people saw it.

13
00:00:38.790 --> 00:00:42.320
They had HTML inside of their JavaScript,
and

14
00:00:42.320 --> 00:00:46.370
they saw this compiled step that
they have to go through to get it

15
00:00:46.370 --> 00:00:50.190
to actually work and people were
like nope not touching that, right?

16
00:00:50.190 --> 00:00:51.200
They thought it was really gross and

17
00:00:51.200 --> 00:00:53.410
they thought it was a horrible idea,
myself included.

18
00:00:53.410 --> 00:00:54.740
I watched this keynote and

19
00:00:54.740 --> 00:00:58.400
I was like man Pete Hutton get off
the stage, what are you doing?

20
00:00:58.400 --> 00:01:01.420
This is embarrassing and horrible and why?

21
00:01:01.420 --> 00:01:05.910
You should feel bad about yourself and
go take a shower, something like that.

22
00:01:05.910 --> 00:01:11.890
So anyway, he gave his talk, people just
kind of dismissed it pretty quickly.

23
00:01:11.890 --> 00:01:17.880
And it took me about six months
to finally revisit React.

24
00:01:17.880 --> 00:01:20.990
It was because an engineer came in from
another company that was using a little

25
00:01:20.990 --> 00:01:25.850
bit of React on the side, and he's like,
we should give this another shot.

26
00:01:25.850 --> 00:01:29.690
He's like, just push through the JSX
hate and then just try it out.

27
00:01:31.030 --> 00:01:33.420
So I pushed through,
tried it, ended up loving it.

28
00:01:33.420 --> 00:01:35.380
Ended up writing a big
piece of our code in it.

29
00:01:36.930 --> 00:01:40.110
So, JSX it's HTML inside
of your JavaScript.

30
00:01:40.110 --> 00:01:41.970
That's the simplest way to put it.

31
00:01:41.970 --> 00:01:45.540
The more correct it's XMLX syntax right?

32
00:01:45.540 --> 00:01:50.080
Basically, it makes it almost
a new primitive for JavaScript.

33
00:01:50.080 --> 00:01:52.632
Everything else is 100% normal JavaScript,

34
00:01:52.632 --> 00:01:55.981
it just adds this little bit of
HTML into your JavaScript flavor.

35
00:01:57.868 --> 00:02:02.150
&gt;&gt; Brian: The reason why that actually
ends up being okay, according to me,

36
00:02:02.150 --> 00:02:06.630
is that, as you saw, when we were
writing our React without JSX.

37
00:02:06.630 --> 00:02:10.140
We're writing JavaScript
code to mimic markup, right?

38
00:02:11.280 --> 00:02:15.006
So, if we're writing JavaScript code to
mimic markup, wouldn't it be nice if we

39
00:02:15.006 --> 00:02:18.257
could just, right, mark up, right,
and just skip that middle step?

40
00:02:18.257 --> 00:02:22.802
So you have less of that cognitive
translation layer of going from okay, I

41
00:02:22.802 --> 00:02:27.563
want this mark up, now I have to translate
that in my head to this JavaScript,

42
00:02:27.563 --> 00:02:31.250
which then ends up going
back to the mark up, right.

43
00:02:31.250 --> 00:02:33.040
It'd be better if we could
just write markup, and

44
00:02:33.040 --> 00:02:35.980
it just ends up being markup,
that's the basic gist.

45
00:02:37.680 --> 00:02:41.950
Another funny part about that,
which I forgot where I heard this.

46
00:02:41.950 --> 00:02:47.476
But the reason why JSX arose was not
because they thought it was a great idea.

47
00:02:47.476 --> 00:02:53.242
But at Facebook they had a PHP
variance that was very similar to JSX,

48
00:02:53.242 --> 00:02:57.709
that they were writing this
kind of HTML like in PHP.

49
00:02:57.709 --> 00:03:01.645
And they actually wrote JSX to mimic
this particular market that they had

50
00:03:01.645 --> 00:03:05.640
at Facebook, and that ended up sticking
and people ended up liking it.

51
00:03:05.640 --> 00:03:07.130
Despite the fact it was
actually written for

52
00:03:07.130 --> 00:03:10.180
PHP developers and not necessarily for
us, as JavaScript developers.

53
00:03:11.330 --> 00:03:14.431
Anyway, I thought that was
an interesting caveat.

54
00:03:16.912 --> 00:03:17.820
&gt;&gt; Brian: Cool.

55
00:03:17.820 --> 00:03:22.941
So let's actually go to mytitle.js,

56
00:03:22.941 --> 00:03:27.906
and we're going to convert this to JSX

57
00:03:27.906 --> 00:03:32.730
instead of this function call here.

58
00:03:33.950 --> 00:03:39.153
So, what we're gonna do,

59
00:03:39.153 --> 00:03:43.226
is we're gonna say,

60
00:03:43.226 --> 00:03:48.219
div, h1 style = style.

61
00:03:48.219 --> 00:03:49.277
We'll just do it this way.

62
00:03:53.604 --> 00:03:57.320
&gt;&gt; Brian: Oops, come on.

63
00:03:59.191 --> 00:04:05.183
&gt;&gt; Brian: And then we're gonna
say this.props.title, okay?

64
00:04:05.183 --> 00:04:08.917
And then we need to go define our style,
so

65
00:04:08.917 --> 00:04:14.598
we're gonna say const style
= color: this.props.color.

66
00:04:24.005 --> 00:04:27.650
&gt;&gt; Brian: Now like I said, most
people's immediate reaction to this is,

67
00:04:27.650 --> 00:04:29.140
that looks really gross.

68
00:04:29.140 --> 00:04:29.830
Why do I want that?

69
00:04:32.050 --> 00:04:33.420
Understandable.

70
00:04:33.420 --> 00:04:35.130
It was definitely my first reaction, too.

71
00:04:35.130 --> 00:04:38.644
So that's an okay reaction to have.

72
00:04:38.644 --> 00:04:42.802
And I invite you to, at least for
this workshop, to just push through it and

73
00:04:42.802 --> 00:04:46.960
if at at the end of this workshop you're
not grateful for it then go ahead and

74
00:04:46.960 --> 00:04:47.759
don't do it.

75
00:04:47.759 --> 00:04:52.659
But like I said, no one I know
that writes React besides this

76
00:04:52.659 --> 00:04:56.580
one guy at one company writes anything but
JSX.

77
00:04:58.993 --> 00:05:02.935
&gt;&gt; Brian: A common argument pointed at
JSX is, we spent years and years and

78
00:05:02.935 --> 00:05:05.855
years trying to get
JavaScript out of our HTML,

79
00:05:05.855 --> 00:05:09.660
why the hell are we putting HTML
into our JavaScript, right?

80
00:05:11.430 --> 00:05:13.366
Which is a fair question to ask.

81
00:05:16.042 --> 00:05:20.165
&gt;&gt; Brian: And this kinda goes back to
my mashing together concerns idea.

82
00:05:20.165 --> 00:05:22.425
So now everything for MyTitle here, right?

83
00:05:23.535 --> 00:05:25.315
We have everything all together.

84
00:05:25.315 --> 00:05:26.315
We have the markup together.

85
00:05:27.355 --> 00:05:29.465
We could potentially have
the style here together.

86
00:05:29.465 --> 00:05:33.910
But we have the markup and the behavior
all mashed together here in one file.

87
00:05:33.910 --> 00:05:37.660
So if we ever have any problems with
MyTitle, there's exactly one place to

88
00:05:37.660 --> 00:05:41.220
start looking for that problem,
and that's here inside of MyTitle.

89
00:05:41.220 --> 00:05:44.260
And by just understanding what the bug is,

90
00:05:44.260 --> 00:05:49.030
knowing where to start, that's a very,
very powerful debugging tool, right?

91
00:05:49.030 --> 00:05:52.720
Like I said with older versions of
Angular, just by knowing what the bug is,

92
00:05:52.720 --> 00:05:54.810
you are no closer to
really to finding the bug.

93
00:05:56.870 --> 00:06:00.463
So I find that to be a very
powerful part of React.

94
00:06:02.200 --> 00:06:05.080
&gt;&gt; Brian: And by extension JSX.

95
00:06:06.700 --> 00:06:11.060
Okay, so let's kind of break down what
you are seeing here right, h1s and

96
00:06:11.060 --> 00:06:12.270
divs, right?

97
00:06:12.270 --> 00:06:14.960
This all looks familiar to anyone
that's written any HTML before.

98
00:06:16.920 --> 00:06:20.380
Let's talk about these
curly braces right here.

99
00:06:20.380 --> 00:06:24.180
This is basically the way
that you signify to JSX like,

100
00:06:24.180 --> 00:06:29.398
I want you to put out whatever the value
of this.props.title is, right?

101
00:06:29.398 --> 00:06:32.194
It's saying like,
this is a JavaScript expression,

102
00:06:32.194 --> 00:06:34.340
please output that here, right?

103
00:06:34.340 --> 00:06:36.726
If I took off these curly braces,

104
00:06:36.726 --> 00:06:42.023
it would literally print out the string,
this.props.title, right?

105
00:06:42.023 --> 00:06:42.770
Does that make sense?

106
00:06:43.990 --> 00:06:45.380
So, by putting these curly braces on,

107
00:06:45.380 --> 00:06:48.140
you're saying,
this is a JavaScript expression.

108
00:06:48.140 --> 00:06:50.210
Please return the output
of this expression.

109
00:06:51.340 --> 00:06:54.966
Like, so for example,
I would say toUpperCase here, and

110
00:06:54.966 --> 00:06:58.226
call function,
that would be totally acceptable.

111
00:07:03.253 --> 00:07:05.550
&gt;&gt; Brian: Okay, style right.

112
00:07:05.550 --> 00:07:08.560
We're just putting this object here.

113
00:07:11.840 --> 00:07:18.590
Now you can put this down here and
just skip this assignment step.

114
00:07:18.590 --> 00:07:20.760
The reason why I don't initially do that?

115
00:07:20.760 --> 00:07:24.268
Because people get confused by seeing
the two curly braces next to each other.

116
00:07:24.268 --> 00:07:27.265
And I wanted you to distinguish
that they are different, right?

117
00:07:27.265 --> 00:07:30.785
The outer set means JavaScript expression,
the inner set means JavaScript object.

118
00:07:32.295 --> 00:07:34.255
So that's why I separate those.

119
00:07:34.255 --> 00:07:34.843
It's just so

120
00:07:34.843 --> 00:07:38.433
it's very visually apparent to you that
those are separate concepts going on.

121
00:07:42.883 --> 00:07:44.000
&gt;&gt; Brian: Any questions so far?

122
00:07:47.510 --> 00:07:52.074
So if we save this and
refresh here everything should always,

123
00:07:52.074 --> 00:07:54.898
except you have to run web pack again.

124
00:07:59.939 --> 00:08:00.980
&gt;&gt; Brian: I left a period in there.

125
00:08:02.930 --> 00:08:03.600
That's pretty nice, too.

126
00:08:03.600 --> 00:08:06.933
It says hey, you screwed up right there,
just so you know.

127
00:08:15.102 --> 00:08:18.070
&gt;&gt; Brian: So I'm getting real sick of
running webpack every single time.

128
00:08:18.070 --> 00:08:23.329
So you can just say webpack --watch.

129
00:08:23.329 --> 00:08:24.536
And it's just going to build it once.

130
00:08:24.536 --> 00:08:27.320
And then it's just going to incrementally
rebuild it as you keep building.

131
00:08:29.130 --> 00:08:31.720
Another little trick,
which I'll probably use later but

132
00:08:31.720 --> 00:08:33.880
you can say npm run build right?

133
00:08:33.880 --> 00:08:37.570
Which we know behind the scenes
is going to be webpack, right?

134
00:08:37.570 --> 00:08:42.060
You're gonna actually say dash, dash which
basically says, everything after this,

135
00:08:42.060 --> 00:08:46.920
passed directly to web pack --watch,
right?

136
00:08:46.920 --> 00:08:51.400
So now I'm gonna run webpack --watch
using the build step, right?

137
00:08:51.400 --> 00:08:55.700
So you can see here,
this is what it actually ran, right here,

138
00:08:55.700 --> 00:08:57.497
webpack "--watch".

139
00:08:57.497 --> 00:08:58.329
Does that make sense?

140
00:08:59.750 --> 00:09:02.870
So, that's a very useful thing, so you
can pass additional flags if you need to.

141
00:09:04.620 --> 00:09:06.957
Actually, we come back
to your package.json.

142
00:09:06.957 --> 00:09:10.005
And let's actually just put that in there.

143
00:09:10.005 --> 00:09:13.534
So, you can saw "watch":.

144
00:09:13.534 --> 00:09:16.801
Now, you can do one of two things here,
you can say webpack --watch,

145
00:09:16.801 --> 00:09:17.520
if you want to.

146
00:09:19.090 --> 00:09:23.436
Or you can say,
&gt;&gt; Brian: npm run build --.

147
00:09:25.782 --> 00:09:28.170
So it can actually be self-referential and
that's okay.

148
00:09:29.965 --> 00:09:34.634
What's nice about this, if I add anything
to webpack like say I had to add -p here,

149
00:09:34.634 --> 00:09:39.374
something like that, or something else
that would automatically get translated to

150
00:09:39.374 --> 00:09:41.867
watch, which may or
may not be helpful but.

151
00:09:41.867 --> 00:09:45.134
&gt;&gt; [INAUDIBLE]
&gt;&gt; Brian: Either way,

152
00:09:45.134 --> 00:09:46.831
I'm fine with you putting it either way.

153
00:09:50.497 --> 00:09:54.073
&gt;&gt; Brian: So now I can come over here and
say npm run watch.

154
00:09:57.120 --> 00:09:57.960
&gt;&gt; Brian: And now we're good to go.

