WEBVTT

1
00:00:00.760 --> 00:00:04.420
&gt;&gt; Brian Holt: One of the things that we
haven't done so far but is interesting in

2
00:00:04.420 --> 00:00:10.980
particular to React itself, is this idea
of what we call a higher order component.

3
00:00:10.980 --> 00:00:14.050
Or basically a component that
has no display of its own.

4
00:00:14.050 --> 00:00:16.930
It doesn't actually
show the user anything.

5
00:00:16.930 --> 00:00:19.480
All it does is it encapsulates behavior.

6
00:00:20.640 --> 00:00:22.220
So that's what HashRouter is here.

7
00:00:22.220 --> 00:00:26.610
It doesn't actually show you anything, all
it does is it encapsulates this behavior.

8
00:00:26.610 --> 00:00:32.350
In this case it's a router,
it can route from page to different page.

9
00:00:32.350 --> 00:00:35.290
And so that's what HashRouter is,
that's what Match is.

10
00:00:36.290 --> 00:00:39.150
They are considered higher
order components, or

11
00:00:39.150 --> 00:00:40.736
behavior oriented components.

12
00:00:40.736 --> 00:00:46.700
Which is kind of peculiar, but I think
ends up being a really cool abstraction.

13
00:00:48.294 --> 00:00:51.200
So HashRouter is just saying,
here is my app.

14
00:00:52.210 --> 00:00:55.850
And usually, your HashRouter is going
to be your route component, typically.

15
00:00:58.580 --> 00:01:02.500
Then everything inside of HashRouter
is going to be displayed.

16
00:01:02.500 --> 00:01:05.640
So it's going to display
out this particular div.

17
00:01:05.640 --> 00:01:09.340
But let's say you have a navigation bar at
the top and that was at the top of every

18
00:01:09.340 --> 00:01:13.088
single page, you can also put
your nav right here as well.

19
00:01:13.088 --> 00:01:18.320
Nav, that can also go right there.

20
00:01:18.320 --> 00:01:21.584
And then that would get built
out on every single page.

21
00:01:25.317 --> 00:01:29.210
&gt;&gt; Brian Holt: Then we have this match
components which are interesting.

22
00:01:29.210 --> 00:01:32.300
So this basically saying,
this is one particular route.

23
00:01:32.300 --> 00:01:35.700
So anytime that the URL matches
this particular pattern,

24
00:01:35.700 --> 00:01:37.340
the slash pattern which is the homepage.

25
00:01:38.400 --> 00:01:40.720
And it matches that exactly.

26
00:01:42.390 --> 00:01:44.530
Then display this landing component.

27
00:01:46.930 --> 00:01:49.570
Now, why exactly?

28
00:01:49.570 --> 00:01:56.520
Well if I have here, about,
and I don't have exactly here.

29
00:01:56.520 --> 00:01:57.940
This is actually, still going to match.

30
00:01:59.480 --> 00:02:00.890
Wait, hold on.
That's not what I meant.

31
00:02:00.890 --> 00:02:05.085
So, it's gonna be about, and
let's say the URL is /about,

32
00:02:05.085 --> 00:02:07.380
/about will still match the /.

33
00:02:07.380 --> 00:02:10.120
Because it's going to match
everything to the left.

34
00:02:12.520 --> 00:02:16.678
So if I have /about/me,

35
00:02:16.678 --> 00:02:21.776
/about will still match that, as will /.

36
00:02:21.776 --> 00:02:23.700
So that's why you need exactly to say,

37
00:02:23.700 --> 00:02:28.890
I don't you to do like this fuzzy matching
business, I want you to just match.

38
00:02:28.890 --> 00:02:30.490
And it has to match everything in the URL.

39
00:02:31.870 --> 00:02:34.433
Did I sufficiently muddy up that water for
you?

40
00:02:34.433 --> 00:02:41.467
[LAUGH]
&gt;&gt; Brian Holt: Cool.

41
00:02:46.627 --> 00:02:49.639
&gt;&gt; Brian Holt: I don't know, sometimes
that would be a desirable behavior for

42
00:02:49.639 --> 00:02:50.845
you to do this matching.

43
00:02:50.845 --> 00:02:54.895
Of like, match everything despite
everything that comes after it.

44
00:02:58.254 --> 00:03:02.200
&gt;&gt; Brian Holt: But almost always you
want your homepage to be exactly.

45
00:03:03.790 --> 00:03:06.267
Cuz otherwise that's going to
match literally everything.

46
00:03:13.124 --> 00:03:14.592
&gt;&gt; Brian Holt: So
let's talk about HashRouter,

47
00:03:14.592 --> 00:03:16.217
because this is kind of a weird thing.

48
00:03:20.219 --> 00:03:23.944
&gt;&gt; Speaker 2: Question, going back
again to the issue of using class and

49
00:03:23.944 --> 00:03:28.533
extend,
&gt;&gt; Speaker 2: Versus just

50
00:03:28.533 --> 00:03:30.940
the create component thing.

51
00:03:32.690 --> 00:03:36.217
Any comment on why Facebook has
started suggesting using extend?

52
00:03:38.981 --> 00:03:43.898
&gt;&gt; Brian Holt: We'll certainly talk more
about this tomorrow, but I think the thing

53
00:03:43.898 --> 00:03:50.350
is that Facebook is not interested in
maintaining their own version of classes.

54
00:03:50.350 --> 00:03:52.150
They're trying to cut down on
the size of the code base and

55
00:03:52.150 --> 00:03:56.330
if they can get rid of create class, it's
just less code that they have to include.

56
00:03:56.330 --> 00:04:00.170
If they get to use ES6 classes which
is already built into the browser,

57
00:04:00.170 --> 00:04:04.269
that's probably a net win for
users, not necessarily developers.

58
00:04:05.910 --> 00:04:08.157
Think that's the gist of why
they're trying to do that.

59
00:04:10.374 --> 00:04:12.862
&gt;&gt; Brian Holt: And if that answer
doesn't make sense to you yet,

60
00:04:12.862 --> 00:04:14.767
I promise I will explain it tomorrow.

61
00:04:18.121 --> 00:04:23.022
&gt;&gt; Brian Holt: So HashRouter,
some of you may have seen this before and

62
00:04:23.022 --> 00:04:29.940
experienced the #/ phenomenon
of routing in client-side apps.

63
00:04:29.940 --> 00:04:32.950
Why people do this is,
obviously, this is ugly.

64
00:04:32.950 --> 00:04:34.860
No one wants to do it this way.

65
00:04:34.860 --> 00:04:38.140
However, your server doesn't
have to care anything

66
00:04:38.140 --> 00:04:39.312
about what's going on on the client.

67
00:04:41.180 --> 00:04:47.743
And the way I mean that,
let's say I have a django backend.

68
00:04:47.743 --> 00:04:53.053
And I have a search term, every time I
add a URL to my frontend I have to go

69
00:04:53.053 --> 00:04:58.993
into my django server and make sure that
that is routing directly to this app And

70
00:04:58.993 --> 00:05:03.390
not only routing there, but
it needs to route to slash.

71
00:05:03.390 --> 00:05:05.590
Because that's where
my app actually lives.

72
00:05:05.590 --> 00:05:08.940
In other words,
you have to make your server aware of your

73
00:05:08.940 --> 00:05:11.750
client side routing routes.

74
00:05:11.750 --> 00:05:13.590
So you either have to
duplicate your routes.

75
00:05:13.590 --> 00:05:16.460
So every time you add something
on the client side, you have

76
00:05:16.460 --> 00:05:21.160
to duplicate it in the Python side, or
Ruby side, or Java side, or whatever.

77
00:05:21.160 --> 00:05:24.710
Or, you have to have some
sort of fancy pants like,

78
00:05:24.710 --> 00:05:28.050
I generated a JSON manifest
that both sides consume.

79
00:05:28.050 --> 00:05:29.810
Both of which are less than ideal.

80
00:05:29.810 --> 00:05:32.860
So some people just throw up their hands
and say I'm not dealing with this,

81
00:05:32.860 --> 00:05:37.700
I'm just going to put #/,
which the url will still be routed here.

82
00:05:37.700 --> 00:05:40.418
So if I put #/ here.

83
00:05:43.280 --> 00:05:45.128
&gt;&gt; Brian Holt: Django
doesn't care about pounds,

84
00:05:45.128 --> 00:05:47.280
it doesn't do anything with anchors.

85
00:05:47.280 --> 00:05:49.070
That's actually what they are called.

86
00:05:49.070 --> 00:05:52.940
It just always routes those to / or
whatever that URL is.

87
00:05:52.940 --> 00:05:54.320
So it basically makes it so

88
00:05:54.320 --> 00:05:58.770
you don't have to configure your server
to care about your client side routing.

89
00:05:58.770 --> 00:06:01.060
That's why HashRouter exists.

90
00:06:01.060 --> 00:06:04.090
It's a hack, but it is a useful hack.

91
00:06:04.090 --> 00:06:06.013
For example at Reddit,
I say this with Django,

92
00:06:06.013 --> 00:06:08.740
because that is literally
what I was doing.

93
00:06:08.740 --> 00:06:10.040
This is what we had to do for a long time,

94
00:06:10.040 --> 00:06:11.950
because we couldn't make our
server care about those URLs.

95
00:06:11.950 --> 00:06:15.195
Does that make sense?

96
00:06:19.630 --> 00:06:22.390
&gt;&gt; Brian Holt: If you can,
avoid using HashRouter.

97
00:06:22.390 --> 00:06:23.610
But I wanted to show you that exists,

98
00:06:23.610 --> 00:06:28.100
because some of us really just don't
have the option of using browser-router,

99
00:06:28.100 --> 00:06:32.020
which I'm about to show you
how use browser-router.

100
00:06:32.020 --> 00:06:35.280
It's way better if that
URL is just /search/term.

101
00:06:37.634 --> 00:06:42.242
&gt;&gt; Brian Holt: And if you're using Node,
you really have no reason to,

102
00:06:42.242 --> 00:06:46.083
because Node can consume
React Router routes.

103
00:06:48.663 --> 00:06:50.960
&gt;&gt; Brian Holt: Which I will show you
how to do with universal rendering.

104
00:06:50.960 --> 00:06:54.070
You look like you have a question.

105
00:06:54.070 --> 00:06:56.180
&gt;&gt; Speaker 3: How do you
comment inside JSX blocks?

106
00:06:56.180 --> 00:06:57.450
&gt;&gt; Brian Holt: How do you comment?

107
00:06:57.450 --> 00:07:01.770
&gt;&gt; Speaker 3: Yes, I think seems
to be breaking a bunch of stuff.

108
00:07:01.770 --> 00:07:02.706
&gt;&gt; Brian Holt: Yeah,
this doesn't work, right?

109
00:07:02.706 --> 00:07:04.447
&gt;&gt; Speaker 3: Yeah [LAUGH].

110
00:07:04.447 --> 00:07:07.907
&gt;&gt; Brian Holt: So the way you have to
do it, which is kind of hacky, but

111
00:07:07.907 --> 00:07:10.103
it will already make sense to you.

112
00:07:13.016 --> 00:07:17.504
&gt;&gt; Brian Holt: You need to put a
JavaScript block, and then this does work.

113
00:07:23.008 --> 00:07:24.528
&gt;&gt; Speaker 4: The comment
is more expressive.

114
00:07:29.352 --> 00:07:31.490
&gt;&gt; Brian Holt: And the other thing
is HTML comments don't work at all.

115
00:07:32.750 --> 00:07:33.250
That doesn't work.

116
00:07:35.130 --> 00:07:38.560
There might be a way to get that to work,
I don't know how to do it though,

117
00:07:38.560 --> 00:07:41.080
cuz I don't need HTML comments.

118
00:07:41.080 --> 00:07:42.479
That seems kinda counterintuitive.

