WEBVTT

1
00:00:00.190 --> 00:00:02.460
&gt;&gt; Brian Holt: Does this still
seem like black magic to anyone?

2
00:00:02.460 --> 00:00:06.580
&gt;&gt; Speaker 2: I think the chat is
going crazy with all the black magic.

3
00:00:06.580 --> 00:00:08.070
I don't even know how to ask the question.

4
00:00:08.070 --> 00:00:13.519
They're talking about how props get
from one place to another place.

5
00:00:13.519 --> 00:00:18.290
&gt;&gt; Brian Holt: Sure, so
these props right here, right?

6
00:00:18.290 --> 00:00:20.530
This is what's coming from BrowserRouter,
right?

7
00:00:20.530 --> 00:00:22.258
When BrowserRouter matches a route,

8
00:00:22.258 --> 00:00:24.581
it passes just a handful of properties in,
right?

9
00:00:24.581 --> 00:00:30.310
So we wanted to preserve those properties,
cuz we need to reference the ID, right?

10
00:00:31.850 --> 00:00:36.700
Well, we don't in this particular one, but
eventually, in details we will have to.

11
00:00:39.180 --> 00:00:42.410
So this is called the spread operator.

12
00:00:42.410 --> 00:00:46.780
And we did this previously with,
jeez, where did we do it?

13
00:00:46.780 --> 00:00:52.839
ShowCard, yeah, so we did it inside
of search, right here, right?

14
00:00:54.010 --> 00:00:57.760
Same thing right here, we're taking
a show and instead of writing out

15
00:00:57.760 --> 00:01:02.240
poster = show.poster, title = show.title,
all those different things.

16
00:01:02.240 --> 00:01:04.265
We're not doing that anymore,

17
00:01:04.265 --> 00:01:08.465
we're just passing everything
from show onto ShowCard, right?

18
00:01:08.465 --> 00:01:11.830
We did that,
this is literally no different.

19
00:01:11.830 --> 00:01:15.263
There's nothing different between
what's happening here, and

20
00:01:15.263 --> 00:01:17.180
what was happening with ShowCard.

21
00:01:17.180 --> 00:01:18.567
It's the same operator.

22
00:01:21.192 --> 00:01:23.115
&gt;&gt; Speaker 2: Okay,
I have a clarification.

23
00:01:23.115 --> 00:01:24.370
[LAUGH]
&gt;&gt; Brian Holt: Sure.

24
00:01:24.370 --> 00:01:28.990
&gt;&gt; Speaker 2: The question actually was,
why did you need to import React

25
00:01:28.990 --> 00:01:32.590
when you were building
this dateless component.

26
00:01:33.810 --> 00:01:36.610
&gt;&gt; Brian Holt: You might not actually
have to, let me think about that.

27
00:01:36.610 --> 00:01:38.140
No you still have to.

28
00:01:38.140 --> 00:01:43.570
Reason being is you have to remember,
we're using JSX and

29
00:01:43.570 --> 00:01:52.150
JSX is transpiled from the JSX that we
wrote to being functional calls, right?

30
00:01:52.150 --> 00:01:58.010
Well, it's being transpiled
to React.createClass.

31
00:01:58.010 --> 00:02:03.252
So if I have const Comp

32
00:02:03.252 --> 00:02:08.380
=,
&gt;&gt; Brian Holt: Right?

33
00:02:08.380 --> 00:02:09.800
If I have something that looks like this,

34
00:02:09.800 --> 00:02:12.900
where this is just really a function
that returns a div, right?

35
00:02:12.900 --> 00:02:17.558
This is actually being transpiled to

36
00:02:17.558 --> 00:02:22.368
the var Comp = function () {return

37
00:02:22.368 --> 00:02:28.700
React.createElement('div')}, right?

38
00:02:28.700 --> 00:02:32.430
That's more or
less what it gets transpiled to.

39
00:02:32.430 --> 00:02:36.230
So the transpiled code uses React,
right, so you still have to import it.

40
00:02:36.230 --> 00:02:39.076
So anywhere that you're using JSX,
you also have to pull in React.

41
00:02:39.076 --> 00:02:42.160
&gt;&gt; Speaker 3: So there was a question
earlier that asked how does React

42
00:02:42.160 --> 00:02:45.100
know that it needs to
do that transpilation?

43
00:02:45.100 --> 00:02:49.395
And the answer, I guess,
is that your importing React.

44
00:02:49.395 --> 00:02:54.511
And it sees that your returning,
just a bigger

45
00:02:54.511 --> 00:03:00.030
angle bracket without
quotation mark around it.

46
00:03:01.110 --> 00:03:02.366
&gt;&gt; Brian Holt: Say that
last part one more time.

47
00:03:02.366 --> 00:03:05.320
&gt;&gt; Speaker 3: So because the function
is returning something with

48
00:03:05.320 --> 00:03:06.870
angle brackets around it.

49
00:03:07.980 --> 00:03:11.916
&gt;&gt; Brian Holt: Yes, precisely, so
everywhere that you see jsx, it did

50
00:03:11.916 --> 00:03:17.492
transpires that to React.createElement,
right, that just always happens.

51
00:03:17.492 --> 00:03:19.488
And you can configure Babel
to do something else, right?

52
00:03:19.488 --> 00:03:25.835
There's other libraries that use JSX,
JSX, is not specific to React.

53
00:03:25.835 --> 00:03:29.150
You can do it with Vue,
you can do it with Deku,

54
00:03:29.150 --> 00:03:33.149
you can do it with a bunch of
other different libraries.

55
00:03:33.149 --> 00:03:34.530
But React is just the most common one.

56
00:03:36.230 --> 00:03:37.570
Does that address your question?

57
00:03:37.570 --> 00:03:38.721
&gt;&gt; Speaker 3: Thanks,
yeah, that's perfect.

58
00:03:38.721 --> 00:03:39.221
&gt;&gt; Brian Holt: Cool.

59
00:03:42.439 --> 00:03:46.150
&gt;&gt; Brian Holt: Okay, so you feel good
about this component right here and

60
00:03:46.150 --> 00:03:48.050
what's going on right here?

61
00:03:49.800 --> 00:03:52.050
It's a little dense, but
I want to make sure that you get it.

62
00:03:52.050 --> 00:03:54.160
Cuz it is a really cool use case for
React.

63
00:03:54.160 --> 00:03:56.210
&gt;&gt; Speaker 2: Yeah,
I think there's still questions.

64
00:03:56.210 --> 00:03:58.070
If you go back to details,

65
00:03:58.070 --> 00:04:01.760
actually, is where the problems
are that I think they're having.

66
00:04:01.760 --> 00:04:05.064
When you're at line eight and
you're saying this.props,

67
00:04:05.064 --> 00:04:07.471
they want to know where
does that come from?

68
00:04:07.471 --> 00:04:14.048
&gt;&gt; Brian Holt: this.props is, what
properties are being passed in, right?

69
00:04:14.048 --> 00:04:16.280
And do they're just passed
in from the router.

70
00:04:16.280 --> 00:04:18.615
The router just passes down
a bunch of properties.

71
00:04:18.615 --> 00:04:21.710
&gt;&gt; Speaker 2: Right, how does it ends up
on this, I think, is also a question?

72
00:04:22.720 --> 00:04:24.015
&gt;&gt; Brian Holt: How does
it ends up on this?

73
00:04:24.015 --> 00:04:24.750
&gt;&gt; Speaker 2: Mm-hm.

74
00:04:24.750 --> 00:04:27.915
&gt;&gt; Brian Holt: Through
the internals of React [LAUGH].

75
00:04:27.915 --> 00:04:29.974
&gt;&gt; Speaker 2: It's the binding
basically that route-

76
00:04:29.974 --> 00:04:31.087
&gt;&gt; Brian Holt: Right, so

77
00:04:31.087 --> 00:04:34.310
I can see what you're saying.

78
00:04:35.950 --> 00:04:37.720
The answer of how it's getting there?

79
00:04:37.720 --> 00:04:39.510
If we go back to back to the ClientApp.Js.

80
00:04:39.510 --> 00:04:41.902
So we have BrowserRouter, right?

81
00:04:41.902 --> 00:04:45.810
And then to BrowserRouter,
we're passing in a component.

82
00:04:45.810 --> 00:04:49.150
And the one that actually renders
that component is in inside of

83
00:04:49.150 --> 00:04:50.210
ReactRouter, right?

84
00:04:50.210 --> 00:04:53.479
So ReactRouter's actually
instantiating our component and

85
00:04:53.479 --> 00:04:55.310
passing it a bunch of properties.

86
00:04:55.310 --> 00:04:57.280
So that happens all inside of ReactRouter.

87
00:05:00.854 --> 00:05:02.570
&gt;&gt; Brian Holt: Any other questions?

88
00:05:02.570 --> 00:05:03.460
Or does that address that?

89
00:05:04.490 --> 00:05:05.740
&gt;&gt; Speaker 2: I don't know
if it's addressed it or not.

90
00:05:07.210 --> 00:05:09.590
Christopher, can you come back and
tell us if you've got it yet?

91
00:05:11.040 --> 00:05:14.300
&gt;&gt; Brian Holt: Well, we can definitely
come back if it's still confusing.

92
00:05:14.300 --> 00:05:16.540
So let's go to search.js.

93
00:05:16.540 --> 00:05:20.520
Now we're getting passed in shows
as one of our props, right?

94
00:05:20.520 --> 00:05:24.800
So instead of importing it up here,
we're going to delete that.

95
00:05:28.480 --> 00:05:33.592
And here where it says preload.shows,
we're gonna

96
00:05:33.592 --> 00:05:38.886
say this.props
&gt;&gt; Brian Holt: So,

97
00:05:38.886 --> 00:05:40.710
see the other reference.

98
00:05:40.710 --> 00:05:41.740
Yep.

99
00:05:41.740 --> 00:05:43.612
So that should be it.

100
00:05:46.694 --> 00:05:48.043
&gt;&gt; Brian Holt: I need
to fix my notes there.

101
00:05:48.043 --> 00:05:49.278
&gt;&gt; Speaker 2: What did you
delete from the imports?

102
00:05:49.278 --> 00:05:50.744
&gt;&gt; Brian Holt: The preload.

103
00:05:53.394 --> 00:05:54.893
&gt;&gt; Brian Holt: So this is in search.js?

104
00:05:54.893 --> 00:06:01.499
I had,
&gt;&gt; Brian Holt: That one.

105
00:06:06.919 --> 00:06:09.767
&gt;&gt; Speaker 4: And
you just import, preload?

106
00:06:09.767 --> 00:06:10.269
&gt;&gt; Brian Holt: What's that?

107
00:06:10.269 --> 00:06:12.020
&gt;&gt; Speaker 4: Import preload, you just.

108
00:06:12.020 --> 00:06:13.370
&gt;&gt; Brian Holt: Yeah, I just delete it.

109
00:06:13.370 --> 00:06:14.170
&gt;&gt; Speaker 4: Okay.

110
00:06:14.170 --> 00:06:16.618
&gt;&gt; Brian Holt: And then instead of
saying preload.shows down here,

111
00:06:16.618 --> 00:06:18.008
you say this.props.shows.

112
00:06:20.373 --> 00:06:23.043
&gt;&gt; Brian Holt: And then I'll push
a branch right after we finish this.

113
00:06:28.020 --> 00:06:31.473
&gt;&gt; Brian Holt: Okay, so now if we say
if 1, our linter will yell at us,

114
00:06:31.473 --> 00:06:33.683
cuz now we're using shows up here.

115
00:06:42.378 --> 00:06:46.080
&gt;&gt; Brian Holt: So now, if we go back to
search, we should have not broken it.

116
00:06:47.570 --> 00:06:50.220
So it should still work,
nothing should have changed, right?

117
00:06:50.220 --> 00:06:53.533
But now the shows are coming
from client app as a parameter

118
00:06:53.533 --> 00:06:55.958
instead of being imported through JSON.

119
00:07:01.302 --> 00:07:06.731
&gt;&gt; Brian Holt: Okay, so
let's go back to search and

120
00:07:06.731 --> 00:07:09.714
fix our propTypes.

121
00:07:13.405 --> 00:07:14.501
&gt;&gt; Brian Holt: So, what are shows?

122
00:07:18.911 --> 00:07:21.634
&gt;&gt; Brian Holt: shows: is an arrayOf,

123
00:07:26.280 --> 00:07:28.921
&gt;&gt; Brian Holt: An arrayOf shapes with

124
00:07:28.921 --> 00:07:31.840
title and description.

125
00:07:40.527 --> 00:07:41.340
&gt;&gt; Brian Holt: Which are strings.

126
00:07:43.070 --> 00:07:48.698
Then we got to just pull them out up here,

127
00:07:48.698 --> 00:07:52.507
const { arrayOf, shape,

128
00:07:52.507 --> 00:07:57.156
string } = React.PropTypes.

129
00:07:59.200 --> 00:08:01.753
&gt;&gt; Brian Holt: So arrayOf,
hopefully self-describing, but

130
00:08:01.753 --> 00:08:05.060
it's just saying that I am going
to have an array of something.

131
00:08:06.190 --> 00:08:07.160
Shape, we used before,

132
00:08:07.160 --> 00:08:10.090
it's just gonna say,
I'm gonna have an array of objects, right?

133
00:08:10.090 --> 00:08:12.553
And the objects all are gonna
have title and description.

134
00:08:15.120 --> 00:08:16.134
&gt;&gt; Brian Holt: That will be strings.

135
00:08:22.166 --> 00:08:24.596
&gt;&gt; Brian Holt: Now again,
I want to point out, I'm using arrayOf,

136
00:08:24.596 --> 00:08:27.630
which means I'm going to describe
what's going to be in my array.

137
00:08:28.670 --> 00:08:30.510
But say it's not homogenous,

138
00:08:30.510 --> 00:08:33.890
right, they're not all the same type
of objects, with all the same types.

139
00:08:33.890 --> 00:08:36.901
You can just say this is going
to be an array of stuff.

140
00:08:36.901 --> 00:08:43.124
You would just do that by saying array and
getting rid of all this stuff, right?

141
00:08:43.124 --> 00:08:43.740
It'll look like that.

142
00:08:45.730 --> 00:08:47.020
But we want to be more descriptive,

143
00:08:47.020 --> 00:08:51.510
because we know those objects look
like and they are homogeneous.

144
00:08:51.510 --> 00:08:54.079
&gt;&gt; Speaker 2: So if you had multiple
different types of objects inside of your

145
00:08:54.079 --> 00:08:55.832
array, but you knew what all of them were.

146
00:08:55.832 --> 00:08:59.175
You could just say arrayOf and
then separate them with commas?

147
00:08:59.175 --> 00:09:00.547
Does that work?
&gt;&gt; Brian Holt: I don't think so.

148
00:09:00.547 --> 00:09:01.047
&gt;&gt; Speaker 2: Okay.

149
00:09:03.813 --> 00:09:04.740
&gt;&gt; Brian Holt: I don't think so.

150
00:09:04.740 --> 00:09:06.090
&gt;&gt; Speaker 2: Okay.
&gt;&gt; Brian Holt: Not that I know of.

151
00:09:06.090 --> 00:09:07.940
&gt;&gt; Speaker 2: That's a question for
the docs.

152
00:09:07.940 --> 00:09:08.610
&gt;&gt; Brian Holt: Yeah, definitely,

153
00:09:08.610 --> 00:09:13.040
the one thing I will say about props is,
you can write your own prop types.

154
00:09:13.040 --> 00:09:16.040
So, in that particular case,
you could write your own prop type.

155
00:09:16.040 --> 00:09:19.660
And say, this is going to be this,
it's going to be pairs of this, right?

156
00:09:19.660 --> 00:09:20.160
That would work.

