WEBVTT

1
00:00:00.240 --> 00:00:03.500
&gt;&gt; Brian Holt: Moving on to the next two
tools that we're gonna be talking about.

2
00:00:03.500 --> 00:00:07.050
We're going to be talking
about Webpack and Babel.

3
00:00:07.050 --> 00:00:11.380
We're gonna be using Webpack 2 today,
which is the new version.

4
00:00:11.380 --> 00:00:14.360
It's still technically in beta, but

5
00:00:14.360 --> 00:00:17.080
the only reason it's still in
beta is the documentation.

6
00:00:17.080 --> 00:00:19.570
The actual core code itself is done,
not changing.

7
00:00:19.570 --> 00:00:21.630
They just need to finish
the documentation.

8
00:00:21.630 --> 00:00:23.478
And as far as I know they're almost done.

9
00:00:23.478 --> 00:00:27.541
Pretty close.
&gt;&gt; Brian Holt: So,

10
00:00:27.541 --> 00:00:30.900
let's talk first about Webpack.

11
00:00:30.900 --> 00:00:31.990
It's a phenomenal tool.

12
00:00:31.990 --> 00:00:34.150
I definitely suggest it for

13
00:00:34.150 --> 00:00:38.233
anyone that's gonna be building new apps.
&gt;&gt; Brian Holt: The basic,

14
00:00:38.233 --> 00:00:43.019
most basic part about Webpack is it takes
all of your modules that you create and

15
00:00:43.019 --> 00:00:48.110
then it puts them together in one file and
then makes that available to send down.

16
00:00:48.110 --> 00:00:52.200
Like that is the core, basic part of
what Webpack is gonna do for you.

17
00:00:52.200 --> 00:00:55.490
It basically allows you to separate
your one giant JavaScript file

18
00:00:55.490 --> 00:00:56.990
into multiple smaller ones.

19
00:00:56.990 --> 00:00:59.340
And then you can just say okay,
import this from this one,

20
00:00:59.340 --> 00:01:00.214
import this from this one.

21
00:01:00.214 --> 00:01:03.289
It's gonna make you one bundle file and
you send that down the wire.

22
00:01:05.020 --> 00:01:07.640
That's the most basic part of it.

23
00:01:07.640 --> 00:01:10.450
Then there's 15 billion other
things you can do with it, right?

24
00:01:10.450 --> 00:01:12.930
So it has what are called loaders.

25
00:01:12.930 --> 00:01:16.218
Loaders are basically say okay,
I'm gonna pull in this file,

26
00:01:16.218 --> 00:01:18.699
but I'm also going to run
it through this like,

27
00:01:18.699 --> 00:01:22.000
middle processing to go from
this format to another format.

28
00:01:22.000 --> 00:01:25.380
And I'm gonna run this one
through the linter, right?

29
00:01:25.380 --> 00:01:27.650
It does all sorts of crazy other stuff for

30
00:01:27.650 --> 00:01:31.989
you.
&gt;&gt; Brian Holt: But a tool like Webpack or

31
00:01:31.989 --> 00:01:36.951
Browserify or rollup, or
any of these other packaging tools,

32
00:01:36.951 --> 00:01:41.726
are essential because if you
have an app the size of Netflix,

33
00:01:41.726 --> 00:01:45.490
you need to break it down
into smaller modules.

34
00:01:45.490 --> 00:01:48.360
Like that's just a given,
that must happen, and

35
00:01:48.360 --> 00:01:51.910
it's up to you to figure out how
that happens, but it has to happen.

36
00:01:52.990 --> 00:01:56.610
It becomes untenable to
have a 50,000 line file.

37
00:01:56.610 --> 00:02:00.230
Like, that's a non-starter, right?

38
00:02:00.230 --> 00:02:02.960
So enter Webpack,
that's the tool that we're gonna use.

39
00:02:02.960 --> 00:02:07.930
I think today Webpack 2 is definitely
the best piece of software that it

40
00:02:07.930 --> 00:02:12.885
does everything the best.
&gt;&gt; Brian Holt: Okay, so

41
00:02:12.885 --> 00:02:17.870
let's actually just go and
do a quick experiment

42
00:02:17.870 --> 00:02:23.230
with it to show you exactly
what I'm talking about.

43
00:02:23.230 --> 00:02:27.351
So go into, or create a new file,
and put it in your JS directory.

44
00:02:29.646 --> 00:02:33.620
&gt;&gt; Brian Holt: And call it MyTitle.js.

45
00:02:33.620 --> 00:02:37.730
Okay, then go to client app and

46
00:02:37.730 --> 00:02:43.724
just rip out all of this MyTitle stuff.
&gt;&gt; Brian Holt: Actually,

47
00:02:43.724 --> 00:02:48.490
I just take that whole thing up there.
&gt;&gt; Brian Holt: Okay, and

48
00:02:48.490 --> 00:02:50.834
we're gonna go to MyTitle.js.

49
00:02:52.440 --> 00:02:53.410
Paste all that in there.

50
00:02:55.110 --> 00:02:57.110
This doesn't need React.DOM,
so we can get rid of that.

51
00:02:57.110 --> 00:02:57.810
&gt;&gt; Speaker 2: Could you boost

52
00:02:57.810 --> 00:02:58.510
the font a little bit?
&gt;&gt; Brian Holt: Yeah.

53
00:03:01.994 --> 00:03:02.987
&gt;&gt; Brian Holt: Better?

54
00:03:04.564 --> 00:03:05.762
&gt;&gt; Speaker 2: There you go, thank you.

55
00:03:05.762 --> 00:03:06.710
&gt;&gt; Brian Holt: Yep.

56
00:03:10.724 --> 00:03:11.848
&gt;&gt; Brian Holt: Okay, so you're gonna

57
00:03:11.848 --> 00:03:16.559
have.
&gt;&gt; Brian Holt: CreateClass here, so

58
00:03:16.559 --> 00:03:21.431
this is just what we had before.
&gt;&gt; Brian Holt: And

59
00:03:21.431 --> 00:03:26.362
then what we're gonna do down here.
&gt;&gt; Brian Holt: Let's

60
00:03:26.362 --> 00:03:29.272
see.
&gt;&gt; Brian Holt: Yeah,

61
00:03:29.272 --> 00:03:34.904
we'll fix that in just a second.
&gt;&gt; Brian Holt: We're

62
00:03:34.904 --> 00:03:38.380
going to say, there, okay, cool.

63
00:03:40.210 --> 00:03:44.900
So rather than have that global react at
the top, we're gonna say import React from

64
00:03:44.900 --> 00:03:49.787
'react.'
&gt;&gt; Brian Holt: And what this is signaling

65
00:03:49.787 --> 00:03:54.204
to our packagers like, hey, I need you
to go out and grab the React module,

66
00:03:54.204 --> 00:03:58.870
which it's just gonna know to grab
from your node modules directory.

67
00:03:58.870 --> 00:04:03.030
And bring that in as the React variable,
right?

68
00:04:03.030 --> 00:04:04.350
I could call this Blah, right?

69
00:04:04.350 --> 00:04:06.690
And it would just refer to it as Blah.

70
00:04:08.020 --> 00:04:10.320
But we're gonna say that React, right?

71
00:04:10.320 --> 00:04:12.250
Now we have React available in this scope.

72
00:04:12.250 --> 00:04:15.940
So now this isn't coming from
the global scope, this is coming and

73
00:04:15.940 --> 00:04:18.460
being locally injected here, okay?

74
00:04:18.460 --> 00:04:23.540
And then what we're gonna do down here
at the bottom is we're gonna say,

75
00:04:23.540 --> 00:04:30.910
export default MyTitle.

76
00:04:30.910 --> 00:04:36.740
And what that is doing is it's saying,
I created this MyTitle piece of code.

77
00:04:36.740 --> 00:04:41.480
Now whenever someone else requests this
particular module, give them this, right?

78
00:04:41.480 --> 00:04:44.060
You're just identifying here
is the thing I'm trying to

79
00:04:44.060 --> 00:04:48.889
export from this particular file.
&gt;&gt; Brian Holt: And the default part just

80
00:04:48.889 --> 00:04:52.332
comes from, because you're can
export multiple different things,

81
00:04:52.332 --> 00:04:55.183
right?
&gt;&gt; Brian Holt: So

82
00:04:55.183 --> 00:04:59.320
you can export multiple different things.

83
00:04:59.320 --> 00:05:03.150
So this is called,
these are ES6 modules, right?

84
00:05:03.150 --> 00:05:05.560
And there's a couple different ways
of doing modules in JavaScript.

85
00:05:05.560 --> 00:05:10.490
I would say the most common way,
ha ha, is CommonJS, right?

86
00:05:10.490 --> 00:05:12.300
And that's one that node, in particular,

87
00:05:12.300 --> 00:05:16.119
uses.
&gt;&gt; Brian Holt: Node is trying to find

88
00:05:16.119 --> 00:05:19.830
the way to get in to ES 6 modules but
they haven't figured that out yet.

89
00:05:19.830 --> 00:05:23.340
I think they kind of have figured it out
but now they need to just implement it but

90
00:05:23.340 --> 00:05:27.470
they're still kind of landing on that,
but this is the syntax of the future.

91
00:05:27.470 --> 00:05:30.480
This is the one that you kind
of want to start moving towards

92
00:05:30.480 --> 00:05:32.029
because this is what
we're going to settle on.

93
00:05:34.030 --> 00:05:38.010
For those of you that are used to
writing CommonJS, this var React =

94
00:05:38.010 --> 00:05:43.930
require('react'), that's these two
are essentially synonymous, right?

95
00:05:45.360 --> 00:05:50.360
So you don't need that, that's just, and

96
00:05:50.360 --> 00:05:52.963
those two are synonymous.
&gt;&gt; Brian Holt: If

97
00:05:52.963 --> 00:05:56.040
we're used to writing CommonJS.

98
00:05:56.040 --> 00:05:57.810
Any questions about ES6 modules?

99
00:05:57.810 --> 00:05:59.280
That's the one we're using today, so.
&gt;&gt; Speaker 3: So

100
00:05:59.280 --> 00:06:05.220
on these files running the Webpack.
&gt;&gt; Brian Holt: Sorry?

101
00:06:05.220 --> 00:06:07.140
&gt;&gt; Speaker 3: You're using Webpack?

102
00:06:07.140 --> 00:06:07.965
&gt;&gt; Brian Holt: I haven't started using

103
00:06:07.965 --> 00:06:08.730
Webpack yet.
&gt;&gt; Speaker 3: No?

104
00:06:08.730 --> 00:06:09.280
&gt;&gt; Brian Holt: I'll show you in

105
00:06:09.280 --> 00:06:09.870
just a second.
&gt;&gt; Speaker 3: Okay.

106
00:06:09.870 --> 00:06:11.061
&gt;&gt; Speaker 2: I'm converting it so

107
00:06:11.061 --> 00:06:13.383
that it will be in Webpack-like syntax.

