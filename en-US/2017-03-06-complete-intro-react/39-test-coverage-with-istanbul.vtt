WEBVTT

1
00:00:00.380 --> 00:00:04.849
&gt;&gt; Brian Holt: We're gonna talk about
coverage real quick, code coverage,

2
00:00:04.849 --> 00:00:09.414
which is stupid easy because
actually already built into Jest.

3
00:00:09.414 --> 00:00:16.952
So all we're gonna do is say
npm run test -- --coverage.

4
00:00:16.952 --> 00:00:17.721
Like that.

5
00:00:21.304 --> 00:00:23.470
&gt;&gt; Brian Holt: Run that,
it's gonna run our test again.

6
00:00:23.470 --> 00:00:29.090
But it's gonna give us a code
coverage report via Istanbul,

7
00:00:29.090 --> 00:00:31.830
which is the one that everyone uses for
JavaScript.

8
00:00:33.670 --> 00:00:36.590
And it's going to give us this nice
little graph here that says hey,

9
00:00:36.590 --> 00:00:39.980
you tested every line in Search,
so you can be like,

10
00:00:39.980 --> 00:00:45.060
every line in Search.js
got covered by a test.

11
00:00:45.060 --> 00:00:49.713
And we also covered 50% of statements in
ShowCard just by pulling it in, right,

12
00:00:49.713 --> 00:00:52.280
which is also kind of interesting.

13
00:00:52.280 --> 00:00:53.419
It tells you the lines that you missed.

14
00:00:57.120 --> 00:01:00.578
But we got 100% of branching,
100% of functions,

15
00:01:00.578 --> 00:01:02.710
which is just really interesting.

16
00:01:02.710 --> 00:01:04.600
And then what's cool about
it is all this is for free.

17
00:01:04.600 --> 00:01:06.110
We wrote nothing to get this.

18
00:01:06.110 --> 00:01:07.880
This is just already build into Jest.

19
00:01:09.570 --> 00:01:12.898
What's even cooler about this
is you can say, open this.

20
00:01:15.578 --> 00:01:22.046
&gt;&gt; Brian Holt: Coverage, and
then there's that lcov-report/index.html.

21
00:01:24.559 --> 00:01:26.690
&gt;&gt; Brian Holt: So
this'll open in your browser.

22
00:01:26.690 --> 00:01:28.250
Just notice that I opened
like in the files.

23
00:01:28.250 --> 00:01:32.420
So you can just do like a command
open here, and find it as well.

24
00:01:32.420 --> 00:01:37.750
But it's the lcov-report, and
then the index.html in there.

25
00:01:37.750 --> 00:01:40.130
&gt;&gt; Speaker 2: That open
by the way is only OSX.

26
00:01:40.130 --> 00:01:41.810
&gt;&gt; Brian Holt: Yeah,
I think it only is OSX.

27
00:01:43.250 --> 00:01:47.060
Sorry.
[LAUGH]

28
00:01:47.060 --> 00:01:48.510
But just open in your browser,

29
00:01:48.510 --> 00:01:50.540
right, that's the sum of the story here.

30
00:01:52.300 --> 00:01:55.070
So we can actually look and
get like this nice report.

31
00:01:55.070 --> 00:01:57.300
You can see this got ran 65 times.

32
00:01:57.300 --> 00:01:58.850
This got ran 84 times.

33
00:01:58.850 --> 00:02:01.230
This got run once, right?

34
00:02:02.580 --> 00:02:06.880
We can go back to the ShowCard and we can
see this was run once, this was run once,

35
00:02:06.880 --> 00:02:10.920
but you can notice here that
render was never run, right?

36
00:02:10.920 --> 00:02:13.340
So we actually never
rendered a ShowCard but

37
00:02:13.340 --> 00:02:17.470
everything else we can guarantee is at
least syntactically correct, right?

38
00:02:17.470 --> 00:02:19.102
And that it doesn't have
any runtime errors.

39
00:02:21.453 --> 00:02:23.379
&gt;&gt; Brian Holt: But I think it's cool,

40
00:02:23.379 --> 00:02:27.528
it shows you these two
statements didn't get run.

41
00:02:27.528 --> 00:02:29.906
And that's all stuff just
built into Istanbul for free.

42
00:02:33.306 --> 00:02:38.049
&gt;&gt; Brian Holt: So we're gonna quickly just
put a line here in package.json just for

43
00:02:38.049 --> 00:02:38.880
coverage.

44
00:02:38.880 --> 00:02:44.874
So we're gonna say
"cover": "npm" run test.

45
00:02:47.258 --> 00:02:48.715
&gt;&gt; Brian Holt: -- --coverage.

46
00:02:51.488 --> 00:02:52.426
&gt;&gt; Brian Holt: Right, that's what it was?

47
00:02:55.481 --> 00:02:58.463
&gt;&gt; Brian Holt: Yep, so now we can
do npn run cover anytime you want

48
00:02:58.463 --> 00:02:59.741
to know what that is.

49
00:03:04.978 --> 00:03:12.627
&gt;&gt; Brian Holt: And-
&gt;&gt; Speaker 3: Can we see that again?

50
00:03:12.627 --> 00:03:13.370
&gt;&gt; Brian Holt: See this?

51
00:03:13.370 --> 00:03:18.492
Okay, so my last little note
before I let you go for the day,

52
00:03:18.492 --> 00:03:24.260
we kind of addressed a little bit
earlier is hot module reload.

53
00:03:24.260 --> 00:03:28.100
I talked about how that works, that it
just lets you kind of plug in pieces.

54
00:03:28.100 --> 00:03:31.877
We're not gonna work on it in
this workshop just because we're

55
00:03:31.877 --> 00:03:36.500
in-between major versions and

56
00:03:36.500 --> 00:03:39.910
the new one's not fully baked,
the old one doesn't work super well.

57
00:03:39.910 --> 00:03:43.050
Doesn't work super well, but
that's not how I want to qualify it.

58
00:03:43.050 --> 00:03:45.270
But it wouldn't work well with this app.

59
00:03:45.270 --> 00:03:47.490
So we're not gonna cover it today.

60
00:03:49.180 --> 00:03:51.790
But it is a cool technology,
one that you should investigate and

61
00:03:51.790 --> 00:03:54.820
definitely look out when
the new version comes out.

62
00:03:54.820 --> 00:03:57.770
And I'll definitely keep
on the version 2 repo

63
00:03:59.120 --> 00:04:02.370
a note on how to do it once
the new version comes out.

64
00:04:03.950 --> 00:04:05.470
But that will do us for today.

65
00:04:05.470 --> 00:04:08.631
Is there any questions that you all
wanna talk about before we leave?

66
00:04:13.086 --> 00:04:17.260
&gt;&gt; Speaker 3: In the npm scripts we have
like a dash dash kind of between commands.

67
00:04:17.260 --> 00:04:22.050
So like the last one has npm
run test dash dash, space dash,

68
00:04:22.050 --> 00:04:26.270
is that kind of like the same as
just doing an ampersand ampersand?

69
00:04:26.270 --> 00:04:29.980
&gt;&gt; Brian Holt: No, so
what this does is it says,

70
00:04:29.980 --> 00:04:32.770
I want you to do whatever is in test,
right?

71
00:04:32.770 --> 00:04:34.440
So it's gonna run this
statement right here.

72
00:04:34.440 --> 00:04:39.460
And then I want you to pass whatever's
after this directly to that, right?

73
00:04:39.460 --> 00:04:43.490
So this would be the same
as doing --coverage, right?

74
00:04:43.490 --> 00:04:44.844
So it just appends that to the end.

75
00:04:48.513 --> 00:04:49.480
&gt;&gt; Brian Holt: Good question.

