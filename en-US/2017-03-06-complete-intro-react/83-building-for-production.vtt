WEBVTT

1
00:00:00.008 --> 00:00:02.477
&gt;&gt; Brian Holt: Any questions?

2
00:00:02.477 --> 00:00:07.261
&gt;&gt; Speaker 2: Can you show again that
[INAUDIBLE] environment that you run for

3
00:00:07.261 --> 00:00:09.996
[INAUDIBLE]
&gt;&gt; Brian Holt: Yeah, [INAUDIBLE] equals

4
00:00:09.996 --> 00:00:15.524
server, nodomanserver,js No damon
[INAUDIBLE] use the term like node or

5
00:00:15.524 --> 00:00:21.340
the command node, the no damon just drops
in and just puts in a file watcher.

6
00:00:22.390 --> 00:00:23.730
And there's 10 of these.

7
00:00:23.730 --> 00:00:25.910
There's N, and I think there's, not N.

8
00:00:25.910 --> 00:00:26.520
It might be N.

9
00:00:27.710 --> 00:00:30.155
Watchmen, any number of
these things they all work.

10
00:00:30.155 --> 00:00:35.195
So, [COUGH] just to show
you real quick how you

11
00:00:35.195 --> 00:00:40.960
might consider building for production.

12
00:00:40.960 --> 00:00:43.520
Notice that these bundles are huge, right?

13
00:00:43.520 --> 00:00:45.500
But these are developer builds.

14
00:00:47.261 --> 00:00:50.236
&gt;&gt; Brian Holt: So instead, one might
consider when you're building for

15
00:00:50.236 --> 00:00:53.930
production, you wanna do it
with some specific flags.

16
00:00:53.930 --> 00:01:00.114
So you're gonna do
NODE_ENV=production webpack -p.

17
00:01:00.114 --> 00:01:03.690
That lets it know build for product.

18
00:01:09.190 --> 00:01:11.510
Okay, notice these got slightly smaller.

19
00:01:13.600 --> 00:01:14.900
Not that much smaller.

20
00:01:16.090 --> 00:01:23.670
&gt;&gt; Brian Holt: I feel like this still
should have gotten smaller than it did.

21
00:01:23.670 --> 00:01:31.160
All right,
what happens if I just run web pack?

22
00:01:41.849 --> 00:01:43.101
&gt;&gt; Brian Holt: Cuz I'm
not running Uglify am I.

23
00:01:43.101 --> 00:01:48.102
&gt;&gt; Brian Holt: Well, in any case,

24
00:01:48.102 --> 00:01:56.058
what you would run with uglify.

25
00:01:58.648 --> 00:02:06.434
&gt;&gt; Brian Holt: [INAUDIBLE]
&gt;&gt; Brian Holt: [INAUDIBLE]

26
00:02:06.434 --> 00:02:08.392
guides.

27
00:02:11.247 --> 00:02:13.400
&gt;&gt; Brian Holt: Building for production,
that's what I'm looking for.

28
00:02:18.989 --> 00:02:21.590
&gt;&gt; Brian Holt: That's fine,
minification this is all I'm looking for.

29
00:02:23.130 --> 00:02:23.630
Yep.

30
00:02:32.270 --> 00:02:35.063
&gt;&gt; Brian Holt: So, what we're gonna do
here just real quick just to show you how

31
00:02:35.063 --> 00:02:36.739
to build for project, with webpack.

32
00:02:38.220 --> 00:02:42.190
You're gonna say const
webpack = require webpack,

33
00:02:42.190 --> 00:02:47.267
this is inside of your webpack config,
&gt;&gt; Brian Holt: And

34
00:02:47.267 --> 00:02:55.108
we're gonna just put-
&gt;&gt; Brian Holt: Plugins.

35
00:02:58.789 --> 00:03:01.235
&gt;&gt; Brian Holt: And we're gonna give
it this little bit right here,

36
00:03:01.235 --> 00:03:03.190
which I just pulled off the webpack docs.

37
00:03:05.826 --> 00:03:08.390
&gt;&gt; Brian Holt: Webpack.optimize.Uglify,
right.

38
00:03:08.390 --> 00:03:10.070
It's built right into webpack.

39
00:03:10.070 --> 00:03:12.450
And this is going to all of it and
uglify and

40
00:03:12.450 --> 00:03:14.751
minify and do all that funny stuff, okay?

41
00:03:17.193 --> 00:03:19.096
&gt;&gt; Speaker 3: Nevermind.

42
00:03:19.096 --> 00:03:21.569
&gt;&gt; Brian Holt: Got it [LAUGH].

43
00:03:21.569 --> 00:03:22.760
So, let's try that again.

44
00:03:35.100 --> 00:03:36.110
Unexpected token.

45
00:03:36.110 --> 00:03:38.200
I probably didn't need the second one.

46
00:03:53.989 --> 00:03:54.871
&gt;&gt; Brian Holt: Okay.

47
00:03:57.852 --> 00:04:01.650
&gt;&gt; Brian Holt: Turn it that as
well It's annoying if I do.

48
00:04:08.922 --> 00:04:10.710
&gt;&gt; Brian Holt: I had this
working differently, but.

49
00:04:19.861 --> 00:04:23.164
&gt;&gt; Brian Holt: It must be including
something in here that's bigger than what

50
00:04:23.164 --> 00:04:24.170
I had previously.

51
00:04:26.070 --> 00:04:28.210
&gt;&gt; Brian Holt: But in any case.

52
00:04:28.210 --> 00:04:30.140
That's more or less how you
start building for production.

53
00:04:30.140 --> 00:04:34.280
You define your enviroment
to be production.

54
00:04:34.280 --> 00:04:37.270
You turn on Uglify In any case,

55
00:04:37.270 --> 00:04:42.590
we end up with a pretty big bill
because we have things like react.

56
00:04:42.590 --> 00:04:43.780
We have redux.

57
00:04:43.780 --> 00:04:45.500
We have some data that we're pulling in.

58
00:04:45.500 --> 00:04:48.590
We have some stuff that
web pack is including.

59
00:04:48.590 --> 00:04:52.770
We're including way too many poly
fills with our babblerc file.

60
00:04:54.490 --> 00:04:56.560
That might be part of it too.

61
00:04:56.560 --> 00:05:00.850
&gt;&gt; Speaker 4: Philip suggesting, I think,
Dev Tool cheap module source map.

62
00:05:01.880 --> 00:05:03.010
&gt;&gt; Brian Holt: That's what it is.

63
00:05:03.010 --> 00:05:04.020
Is that what I had?

64
00:05:04.020 --> 00:05:05.498
Cheap module source map.

65
00:05:05.498 --> 00:05:07.119
Yep,

66
00:05:07.119 --> 00:05:16.204
cheap-module-source-map.

67
00:05:16.204 --> 00:05:21.372
[BLANK AUDIO].

68
00:05:21.372 --> 00:05:26.910
So that's good.

69
00:05:36.784 --> 00:05:41.603
&gt;&gt; Brian Holt: Just get rid of devtool

70
00:05:41.603 --> 00:05:47.440
together, momentarily.

71
00:05:50.570 --> 00:05:53.980
&gt;&gt; Brian Holt: Because you don't want
to shut those out to production anyway.

72
00:05:53.980 --> 00:05:57.190
If it doesn't work then, screw it,
we don't want it anyway.

73
00:05:59.660 --> 00:06:02.050
&gt;&gt; Speaker 4: Craig is also asking
if production includes everything

74
00:06:02.050 --> 00:06:02.660
in low dash.

75
00:06:04.120 --> 00:06:05.899
&gt;&gt; Brian Holt: No,
because that's only server side.

76
00:06:07.390 --> 00:06:13.819
And you can click everything you want,
willy-nilly server side.

77
00:06:16.712 --> 00:06:20.070
&gt;&gt; Brian Holt: Okay, yes,
this is more I was looking for.

78
00:06:20.070 --> 00:06:24.890
Okay, so our production build ends
up being 218K for the main app.

79
00:06:24.890 --> 00:06:30.980
13K For 13-15 K for

80
00:06:30.980 --> 00:06:35.480
the smaller bundles this is more
aligned with what I was expecting.

81
00:06:37.210 --> 00:06:42.150
So not horrible,
not great but, 218 is not a bad

82
00:06:42.150 --> 00:06:46.130
pace to work with that's about all the
libraries we are working with that's axis,

83
00:06:46.130 --> 00:06:49.560
reaxis and reducts All those additional
things that we're pulling as well.

84
00:06:50.580 --> 00:06:51.760
Not horrible.

85
00:06:51.760 --> 00:06:56.880
Writing another 100K of
uglified/sp code is a lot of code.

86
00:06:58.350 --> 00:07:05.260
And what the web pack team suggested
is don't ship anything much more than

87
00:07:05.260 --> 00:07:09.950
300K in a bundle if you can, split that
off routes are an easy place to do that.

88
00:07:11.270 --> 00:07:15.660
Our friend asked us does it
tell you what code is dropped?

89
00:07:15.660 --> 00:07:16.620
It looks like it does.

