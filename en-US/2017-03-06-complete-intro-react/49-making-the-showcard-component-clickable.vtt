WEBVTT

1
00:00:00.350 --> 00:00:02.790
&gt;&gt; Brian: Lastly, we want to make it so
if you actually click on,

2
00:00:02.790 --> 00:00:06.050
the show card will actually take
you to the details page, right?

3
00:00:06.050 --> 00:00:08.340
Because, right now, you kind of have
to URL hack it to get it to work.

4
00:00:09.440 --> 00:00:15.120
So, let's go back

5
00:00:15.120 --> 00:00:18.620
to show card, which is where we'll end up.

6
00:00:19.800 --> 00:00:24.407
Hopefully, this is what Search was for
the person that was

7
00:00:24.407 --> 00:00:33.822
asking.
&gt;&gt; Brian: Okay,

8
00:00:33.822 --> 00:00:37.069
so let's go to ShowCard real quick, and
the only thing is we're gonna basically

9
00:00:37.069 --> 00:00:41.506
wrap everything in a link.
&gt;&gt; Brian: So,

10
00:00:41.506 --> 00:00:45.945
we're gonna say Import Link.

11
00:00:48.805 --> 00:00:51.099
&gt;&gt; Brian: From react-router.

12
00:00:51.099 --> 00:00:54.708
We're gonna just wrap
everything in a link.

13
00:00:54.708 --> 00:01:02.596
Link to /details/$,

14
00:01:02.596 --> 00:01:10.489
this.props.indbId.

15
00:01:14.202 --> 00:01:15.187
&gt;&gt; Brian: Oops.

16
00:01:27.225 --> 00:01:28.621
&gt;&gt; Brian: That's all we did is we just

17
00:01:28.621 --> 00:01:29.480
imported link.

18
00:01:30.510 --> 00:01:34.540
We're having it take you to the details
page with the proper imdbID and

19
00:01:34.540 --> 00:01:41.037
just wrap everything in a link.
&gt;&gt; Speaker 2: So,

20
00:01:41.037 --> 00:01:45.225
let's see Header, again, for a second.

21
00:01:45.225 --> 00:01:49.727
[LAUGH] And Mario says,
if header returns undefined,

22
00:01:49.727 --> 00:01:54.639
should we move prop types
below the function definition?

23
00:01:56.865 --> 00:01:58.180
&gt;&gt; Brian: I mean, we did, right?

24
00:01:58.180 --> 00:01:59.610
That's what we did right here.

25
00:01:59.610 --> 00:02:02.720
Does that, am I misunderstanding?
&gt;&gt; Speaker 2: I guess I'm not quite sure

26
00:02:02.720 --> 00:02:08.831
what they're asking either.
&gt;&gt; Speaker 3: We looped it and

27
00:02:08.831 --> 00:02:10.880
then moved it back.
&gt;&gt; Brian: Yeah, exactly.

28
00:02:10.880 --> 00:02:11.900
&gt;&gt; Speaker 2: Okay, okay,

29
00:02:11.900 --> 00:02:14.210
maybe that was it.
&gt;&gt; Brian: Yeah, I moved it to demonstrate

30
00:02:14.210 --> 00:02:15.850
that it wouldn't work.
&gt;&gt; Speaker 2: Right.

31
00:02:15.850 --> 00:02:16.730
&gt;&gt; Brian: But, this is how you do it with

32
00:02:16.730 --> 00:02:21.220
the SX classes.
&gt;&gt; Speaker 2: Scott is asking,

33
00:02:21.220 --> 00:02:24.120
do you have to use the link for
routing to work?

34
00:02:25.200 --> 00:02:28.540
Why not just use the a bracket.
&gt;&gt; Brian: You can, but

35
00:02:28.540 --> 00:02:31.540
you get some functionally for
free by using link.

36
00:02:32.810 --> 00:02:35.430
So if I change my router, for
example, it will still work.

37
00:02:35.430 --> 00:02:37.550
It won't break all my links.

38
00:02:37.550 --> 00:02:41.100
And breaking everything is
generally something I try to avoid.

39
00:02:41.100 --> 00:02:45.979
So that's why you use Link.
&gt;&gt; Brian: Ultimately what

40
00:02:45.979 --> 00:02:47.450
Link renders out anyway-
&gt;&gt; Speaker 2: I see,

41
00:02:47.450 --> 00:02:50.570
what they're talking about,
I think is that the last push.

42
00:02:50.570 --> 00:02:52.030
I believe, the header props

43
00:02:52.030 --> 00:02:54.385
was still before.
&gt;&gt; Brian: Okay.

44
00:02:54.385 --> 00:02:55.960
&gt;&gt; Speaker 2: So- Good job, Brian.

45
00:02:55.960 --> 00:02:57.170
Okay.
&gt;&gt; Brian: Yeah,

46
00:02:57.170 --> 00:03:01.010
I'll push a new branch here momentarily.
&gt;&gt; Speaker 2: Okay, okay.

47
00:03:01.010 --> 00:03:07.945
Also, I think they found a typo.
&gt;&gt; Speaker 2: Someone

48
00:03:07.945 --> 00:03:10.385
says there's missing
an equals after the two,

49
00:03:10.385 --> 00:03:12.530
maybe in the link to part.
&gt;&gt; Brian: Probably.

50
00:03:14.270 --> 00:03:14.809
Show card.

51
00:03:16.070 --> 00:03:18.901
Yup, right there.
&gt;&gt; Speaker 2: Good

52
00:03:18.901 --> 00:03:23.059
catch you guys.
&gt;&gt; Brian: Yeah,

53
00:03:23.059 --> 00:03:25.770
most of you are maybe used
to doing pair programming.

54
00:03:25.770 --> 00:03:27.870
It's best if you just have
200 people watching you code.

55
00:03:27.870 --> 00:03:32.610
That's way easier.
&gt;&gt; Speaker 2: Yeah, also adding

56
00:03:32.610 --> 00:03:37.527
the IMDB ID to prop type?
&gt;&gt; Brian: Yeah, we'll have to do that too,

57
00:03:37.527 --> 00:03:46.657
good call.
&gt;&gt; Brian: And

58
00:03:46.657 --> 00:03:51.844
you can even just do this, right, imdbID,
and then drop this stop props right there.

59
00:04:03.503 --> 00:04:04.163
&gt;&gt; Brian: I really like this

60
00:04:04.163 --> 00:04:04.990
pattern right here.

61
00:04:04.990 --> 00:04:09.210
I end up doing it a lot because I
feel like when you come down here,

62
00:04:09.210 --> 00:04:11.140
this just gets really readable.

63
00:04:11.140 --> 00:04:11.800
So they say, okay.

64
00:04:11.800 --> 00:04:12.510
That's the title.

65
00:04:12.510 --> 00:04:14.360
You don't have this
this.props to parse out

66
00:04:14.360 --> 00:04:19.294
in your brain too.
&gt;&gt; Brian: Okay,

67
00:04:19.294 --> 00:04:21.620
so letâ€™s make sure that
this actually works.

68
00:04:23.460 --> 00:04:25.760
So, now you can see you can
click on each one of these.

69
00:04:25.760 --> 00:04:30.870
And if I click on Bloodline,
which is an underrated show.

70
00:04:30.870 --> 00:04:33.580
&gt;&gt; Speaker 2: Question, about is required?

71
00:04:34.950 --> 00:04:40.694
Why are you using it for your prop types?
&gt;&gt; Brian: I just didn't.

72
00:04:40.694 --> 00:04:45.350
[LAUGH] So if your component requires
something and it wouldn't work without it.

73
00:04:45.350 --> 00:04:46.060
Like for example,

74
00:04:46.060 --> 00:04:51.159
our show cards can be pretty shitty if it
doesn't have all of these things, right.

75
00:04:52.680 --> 00:04:59.270
Then you just wanna drop isRequired here.
&gt;&gt; Brian: I just didn't do it.

76
00:04:59.270 --> 00:05:04.447
It is, it's even in my notes, right, so.
&gt;&gt; Brian: Oops.

77
00:05:06.602 --> 00:05:08.395
&gt;&gt; Brian: What you could do there is just

78
00:05:08.395 --> 00:05:09.618
say .isRequired.

79
00:05:18.297 --> 00:05:20.745
&gt;&gt; Brian: So yeah, if you want React to

80
00:05:20.745 --> 00:05:26.520
yell at you if it doesn't show up,
then put isRequired.

81
00:05:26.520 --> 00:05:29.139
That's the gist of when you would
put it versus when you wouldn't.

82
00:05:32.542 --> 00:05:33.194
&gt;&gt; Speaker 2: Okay, so

83
00:05:33.194 --> 00:05:38.190
Martin is getting an error about
warning about React.createElement.

84
00:05:38.190 --> 00:05:40.150
Type should not be null,
undefined, boolean, or

85
00:05:40.150 --> 00:05:42.580
number.
&gt;&gt; Brian: So

86
00:05:42.580 --> 00:05:45.510
you'll see that often times if you.

87
00:05:45.510 --> 00:05:48.144
Like for example,

88
00:05:48.144 --> 00:05:54.250
if I put let's go to Search.js real quick.

89
00:05:54.250 --> 00:05:58.830
So I, I'm importing header right here
right but if I go back to header and

90
00:05:58.830 --> 00:06:04.700
I forget to put this export.statement down
here so it's not exporting anything so

91
00:06:04.700 --> 00:06:07.030
whenever I import header it's
just going to get undefined.

92
00:06:07.030 --> 00:06:11.060
And then if I try and
render out that undefined.

93
00:06:11.060 --> 00:06:13.120
It's going to give you
a warning that looks like that.

94
00:06:13.120 --> 00:06:14.950
Usually that's an export problem.

95
00:06:14.950 --> 00:06:18.600
It means somewhere you are trying
to render something that's

96
00:06:18.600 --> 00:06:19.590
not a react component.

97
00:06:21.130 --> 00:06:23.743
I find that's usually
a problem with export.

98
00:06:29.696 --> 00:06:31.830
&gt;&gt; Brian: Other questions?

99
00:06:31.830 --> 00:06:33.270
&gt;&gt; Speaker 3: Can you talk a little bit

100
00:06:33.270 --> 00:06:37.210
more about passing around
functions between components?

101
00:06:37.210 --> 00:06:39.480
The way you do with handle
search term change?

102
00:06:39.480 --> 00:06:41.300
&gt;&gt; Brian: Yeah, okay, so

103
00:06:41.300 --> 00:06:45.459
passing around a function like I
did with handle search term change.

104
00:06:47.520 --> 00:06:50.640
So just keep in mind that when
you're passing around parameters

105
00:06:50.640 --> 00:06:54.830
to all these different component, they're
just java script primitives, right,

106
00:06:54.830 --> 00:06:58.930
or whatever you can score in
a variable can be passed around

107
00:07:02.030 --> 00:07:06.920
in java script, so
I'm just passing down a function.

108
00:07:06.920 --> 00:07:07.700
Right?
This handle

109
00:07:07.700 --> 00:07:09.120
search term changed right here.

110
00:07:09.120 --> 00:07:12.550
This is being passed
in rather from search.

111
00:07:13.910 --> 00:07:15.480
So it's calling this method, right?

112
00:07:15.480 --> 00:07:22.590
And if you remember my rant that I had
yesterday about if you have a problem

113
00:07:22.590 --> 00:07:26.490
with the component, the only place that
can modify a component is itself, right?

114
00:07:26.490 --> 00:07:31.220
So this, that setState right here,
the only place that I can call setState is

115
00:07:31.220 --> 00:07:38.310
the component itself since this is
where we're keeping track of it.

116
00:07:38.310 --> 00:07:41.730
So instead of having some external method
that it can call to modify the state,

117
00:07:41.730 --> 00:07:45.900
what it does is it passes down a method
where it modifies itself and it.

118
00:07:45.900 --> 00:07:48.660
Exposes that function
to another component.

119
00:07:48.660 --> 00:07:50.630
Does that make sense?
&gt;&gt; Speaker 3: Yeah,

120
00:07:50.630 --> 00:07:51.480
that makes perfect sense.

121
00:07:51.480 --> 00:07:52.790
That's what I figured was going on.

122
00:07:52.790 --> 00:07:57.450
So the reason you do
that is that the value of

123
00:07:57.450 --> 00:08:01.340
this It is preserved when you pass that
function so that this can refer to search

124
00:08:01.340 --> 00:08:03.857
so that it can modify its own state.
&gt;&gt; Speaker 4: I'm not a super-java script

125
00:08:03.857 --> 00:08:05.817
person, and
that's a very functional thing.

126
00:08:05.817 --> 00:08:11.083
[INAUDIBLE] is a function
as a first-class citizen,

127
00:08:11.083 --> 00:08:16.604
so I appreciate that.
&gt;&gt; Brian: Yeah, definitely, so

128
00:08:16.604 --> 00:08:21.630
JavaScript context is just a beast.

129
00:08:21.630 --> 00:08:26.190
Like what this is,
is always a big question.

130
00:08:26.190 --> 00:08:30.250
So again, I'm gonna plug Kyle Simpson's
Advanced JavaScript class again.

131
00:08:30.250 --> 00:08:35.980
He really well explains what this can be.
&gt;&gt; Brian: But

132
00:08:35.980 --> 00:08:38.930
I talked a bit like while a createClass.

133
00:08:38.930 --> 00:08:42.140
The reason why we don't have to do any
sort of fancy binding is that this is auto

134
00:08:42.140 --> 00:08:49.320
bound to wherever it's created,
thanks to the create class methodology.

135
00:08:49.320 --> 00:08:50.620
So it's bound to search.

136
00:08:50.620 --> 00:08:52.640
If we were doing it with a ES6 component,

137
00:08:52.640 --> 00:08:56.530
we would actually have to explicitly call
bind to make sure that it stayed bound to

138
00:08:56.530 --> 00:08:57.560
search.
&gt;&gt; Speaker 3: Sure.

139
00:08:57.560 --> 00:08:58.280
&gt;&gt; Brian: Just so

140
00:08:58.280 --> 00:08:58.971
you know.
&gt;&gt; Speaker 3: Cool.

141
00:09:01.727 --> 00:09:02.953
&gt;&gt; Brian: Other questions?

142
00:09:05.991 --> 00:09:06.874
&gt;&gt; Brian: That was a good question.

143
00:09:06.874 --> 00:09:08.640
That was definitely a good
thing to point out.

