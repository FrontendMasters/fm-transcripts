WEBVTT

1
00:00:00.230 --> 00:00:01.714
&gt;&gt; Brian Holt: Go create yet another file.

2
00:00:01.714 --> 00:00:08.367
Call it actions.js
&gt;&gt; Brian Holt: And

3
00:00:08.367 --> 00:00:13.610
we're gonna say export
const SET_SEARCH_TERM

4
00:00:13.610 --> 00:00:21.060
= 'SET_SEARCH_TERM'.
&gt;&gt; Brian Holt: Now

5
00:00:21.060 --> 00:00:22.420
you don't have to do this this way.

6
00:00:24.090 --> 00:00:25.620
However, I suggest that you do, and

7
00:00:25.620 --> 00:00:29.230
I'm going to assert that most
people do actions this way.

8
00:00:29.230 --> 00:00:31.340
So actions.js will have zero logic and

9
00:00:31.340 --> 00:00:35.250
it's just going to export a bunch
of different like const, right?

10
00:00:36.590 --> 00:00:39.250
So in this particular one,
SET_SEARCH_TERM.

11
00:00:39.250 --> 00:00:41.780
Instead of actually using the string
SET_SEARCH_TERM everywhere,

12
00:00:41.780 --> 00:00:45.080
we're going to import this,
right, and then use that.

13
00:00:46.120 --> 00:00:48.110
This helps for readability,
refactorability,

14
00:00:48.110 --> 00:00:49.960
all bunch of different things.

15
00:00:49.960 --> 00:00:54.318
So if ever we wanna change actions,
or the strings that they are, or

16
00:00:54.318 --> 00:00:57.987
something like that,
it's all in one central place, so

17
00:00:57.987 --> 00:01:02.906
it's helpful believe me.
&gt;&gt; Brian Holt: Okay,

18
00:01:02.906 --> 00:01:07.398
then we go create yet
another file, that's going to be

19
00:01:07.398 --> 00:01:13.829
actionCreators.js.
&gt;&gt; Brian Holt: Okay,

20
00:01:13.829 --> 00:01:17.925
so first thing we're gonna do, is we're
going import that action we just created.

21
00:01:17.925 --> 00:01:24.872
{ SET_SEARCH_TERM

22
00:01:24.872 --> 00:01:33.290
} from './actions'.

23
00:01:33.290 --> 00:01:37.080
So notice that actions
has no export default.

24
00:01:37.080 --> 00:01:40.453
We have a named export there which
is why we need the curly braces.

25
00:01:40.453 --> 00:01:42.561
So that's how you do a named export in

26
00:01:42.561 --> 00:01:47.476
ES6.
&gt;&gt; Brian Holt: Okay.

27
00:01:52.034 --> 00:01:54.323
&gt;&gt; Brian Holt: And then down here we're

28
00:01:54.323 --> 00:01:58.250
going to export function setSearchTerm.

29
00:02:00.810 --> 00:02:02.080
Which take in a searchTerm.

30
00:02:04.670 --> 00:02:10.007
And all does is that,
it returns an object of type:

31
00:02:10.007 --> 00:02:15.480
SET_SEARCH_TERM and
searchTerm: searchTerm.

32
00:02:20.600 --> 00:02:24.880
So it's a function that you call and it
gives you back a correctly shaped action.

33
00:02:28.110 --> 00:02:30.710
Again this is useful because you don't
have to remember how to create those

34
00:02:30.710 --> 00:02:32.660
actions inside of your UI.

35
00:02:32.660 --> 00:02:35.389
Your UI has no concern of
how to create these actions.

36
00:02:36.390 --> 00:02:44.821
It just does that correctly.
&gt;&gt; Brian Holt: Now this being ES6,

37
00:02:44.821 --> 00:02:48.088
we can actually just do,
because it's search term,

38
00:02:48.088 --> 00:02:51.520
colon, search term, and
it's the same thing.

39
00:02:51.520 --> 00:02:56.480
With ES6 we can just say searchTerm,
like that, and

40
00:02:56.480 --> 00:03:00.830
it will automatically expand that
out to the searchTerm: searchTerm.

41
00:03:00.830 --> 00:03:02.702
If you're interested in being lazy,

42
00:03:02.702 --> 00:03:09.172
like I am.
&gt;&gt; Brian Holt: Okay,

43
00:03:09.172 --> 00:03:12.940
so, again this API seems
a little burdensome.

44
00:03:12.940 --> 00:03:17.850
You can totally just dispatch
an action from the UI with the string,

45
00:03:17.850 --> 00:03:20.540
and the correct searchTerm.

46
00:03:20.540 --> 00:03:24.030
And side step, both the action
creators and the actions file.

47
00:03:24.030 --> 00:03:26.470
However, I am going to tell you that
you're eventually going to hate that.

48
00:03:27.690 --> 00:03:30.410
It's really easy up front, it sucks later.

49
00:03:30.410 --> 00:03:32.750
So it is useful to separate
these out into pieces.

