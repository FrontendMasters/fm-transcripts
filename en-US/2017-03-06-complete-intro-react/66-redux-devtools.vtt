WEBVTT

1
00:00:00.470 --> 00:00:05.395
&gt;&gt; Brian Holt: This is as far
as we're gonna take this app.

2
00:00:05.395 --> 00:00:08.738
This is kinda like the complete, so
now everything works in varying fashions.

3
00:00:11.102 --> 00:00:12.839
&gt;&gt; Brian Holt: It's part of its Redux.

4
00:00:12.839 --> 00:00:17.892
We probably would have migrated more of
this to Redux if we were fully doing it,

5
00:00:17.892 --> 00:00:22.267
but I've taught you all of the concepts
when it comes to doing that.

6
00:00:22.267 --> 00:00:25.640
Actually, that's not true I'm gonna
teach you one more thing with Redux.

7
00:00:25.640 --> 00:00:30.457
We're gonna migrate our AJAX
call from React to Redux

8
00:00:30.457 --> 00:00:34.000
to show you how to do async Redux calls.

9
00:00:35.120 --> 00:00:39.817
But first,
I'm gonna show you Redux DevTools.

10
00:00:39.817 --> 00:00:42.733
So Redux also has its
own set of DevTools and

11
00:00:42.733 --> 00:00:46.870
they are pretty fascinating,
I think they're super cool.

12
00:00:50.017 --> 00:00:54.180
&gt;&gt; Brian Holt: So, go to your store.js.

13
00:00:54.180 --> 00:01:00.409
Well, first, install the Redux DevTools.

14
00:01:05.949 --> 00:01:09.627
&gt;&gt; Brian Holt: Okay so
they're available for

15
00:01:09.627 --> 00:01:15.002
Chrome right there and they're available,

16
00:01:15.002 --> 00:01:19.396
as well for Redux DevTools Firefox.

17
00:01:19.396 --> 00:01:21.058
They're also available on Firefox too.

18
00:01:21.058 --> 00:01:25.271
So the nice with the DevTools
is there are actually,

19
00:01:25.271 --> 00:01:29.789
you can actually embedded
them in your program itself.

20
00:01:29.789 --> 00:01:34.548
So you can like run your program in
embed mode and since it's all HTML,

21
00:01:34.548 --> 00:01:38.904
JavaScript and CSS, you can actually
embed it inside of your app

22
00:01:38.904 --> 00:01:43.583
which means things like Reactive Native
can use the Redux DevTools,

23
00:01:43.583 --> 00:01:48.612
because you can actually embed it in
your app itself which is kind of cool.

24
00:01:48.612 --> 00:01:52.731
So go ahead and add that,
I think I already have it and

25
00:01:52.731 --> 00:01:58.742
the DevTools don't work without a little
bit of instrumentation of Redux.

26
00:01:58.742 --> 00:02:03.352
Whereas the React ones,
if you're on a React page, they just work.

27
00:02:03.352 --> 00:02:06.925
But with Redux, you actually have
to activate them within your store.

28
00:02:06.925 --> 00:02:09.989
So, we're gonna go to
store.js real quick and

29
00:02:09.989 --> 00:02:15.054
we have to do something a little bit more
fancy here to get the DevTools to work.

30
00:02:15.054 --> 00:02:20.140
We're gonna use compose from

31
00:02:20.140 --> 00:02:24.819
Redux as well which is going

32
00:02:24.819 --> 00:02:29.702
to allow us to instrument our

33
00:02:29.702 --> 00:02:34.787
code to use the def tools, but

34
00:02:34.787 --> 00:02:39.475
we don't want it to run in.

35
00:02:39.475 --> 00:02:40.724
We don't want it to run a node,

36
00:02:40.724 --> 00:02:43.040
cuz we're about to do universal
rendering with our app.

37
00:02:43.040 --> 00:02:45.429
And so, we have to make sure that
it only runs in the browser.

38
00:02:45.429 --> 00:02:53.451
So the way we're gonna do that is
say if window is === to object,

39
00:02:53.451 --> 00:02:58.754
which basically means we're in the browser

40
00:02:58.754 --> 00:03:04.074
&amp;&amp; typeof window.devToolsExtension.

41
00:03:04.074 --> 00:03:08.348
So it's saying, hey, and this person
also has a Redux devTools installed,

42
00:03:08.348 --> 00:03:09.944
cuz not equal to undefined.

43
00:03:16.464 --> 00:03:19.720
&gt;&gt; Brian Holt: This is a turn area,
if anyone's not familiar with it.

44
00:03:19.720 --> 00:03:24.980
It's like if both of
those things are true,

45
00:03:24.980 --> 00:03:29.531
then activate the devToolsExtension

46
00:03:29.531 --> 00:03:34.377
else
&gt;&gt; Brian Holt: Do nothing.

47
00:03:39.337 --> 00:03:40.010
&gt;&gt; Brian Holt: I didn't write this.

48
00:03:40.010 --> 00:03:42.316
I literally pulled this
out of the documentation.

49
00:03:42.316 --> 00:03:47.515
So I didn't write this, but
this is more or less what it does.

50
00:03:47.515 --> 00:03:49.039
That's what this f does.

51
00:03:49.039 --> 00:03:52.873
F, f thing says, do nothing essentially.

52
00:03:52.873 --> 00:03:54.192
Return what you are given.

53
00:04:02.817 --> 00:04:05.207
&gt;&gt; Brian Holt: So now this
instruments it so if Redux DevTools,

54
00:04:05.207 --> 00:04:09.016
if we're in the browser and DevTools
are available, then run the DevTools.

55
00:04:09.016 --> 00:04:13.435
If not, then do nothing.

56
00:04:13.435 --> 00:04:18.780
So if we come back here and I have
the DevTools installed, you might be

57
00:04:18.780 --> 00:04:24.785
able to see right there, I have a little
green electron thing going up there.

58
00:04:24.785 --> 00:04:28.086
So if I click on it,
this will open the DevTools for Redux and

59
00:04:28.086 --> 00:04:32.394
now you can start visualizing all
the different actions that are happening.

60
00:04:35.018 --> 00:04:39.769
&gt;&gt; Brian Holt: So, let's actually go to
the Browse All part and I'm gonna type.

61
00:04:42.203 --> 00:04:44.405
&gt;&gt; Brian Holt: Let's see.

62
00:04:44.405 --> 00:04:47.214
So, I'm gonna type house in here.

63
00:04:47.214 --> 00:04:53.099
So think of all of the actions I
distribute, I dispatch by typing house.

64
00:04:53.099 --> 00:04:56.689
I dispatch one for H.

65
00:04:56.689 --> 00:05:01.336
I dispatch one for H-O, one for
H-O-U, H-O-U-S and H-O-U-S-E.

66
00:05:01.336 --> 00:05:04.632
So, I dispatch like five
actions just by typing.

67
00:05:04.632 --> 00:05:11.464
So if I look at it, you can see all
these actions that I just dispatched.

68
00:05:11.464 --> 00:05:15.930
So if I click on one of these,
I can see what that looks like.

69
00:05:18.903 --> 00:05:22.340
&gt;&gt; Brian Holt: Now, here's where this
gets pretty compelling in my opinion.

70
00:05:23.500 --> 00:05:25.693
If I start clicking back right here,

71
00:05:25.693 --> 00:05:30.872
it's gonna start walking backwards through
time of all the action I just dispatched.

72
00:05:30.872 --> 00:05:35.494
So if you watch here in the background,
more shows are going to start showing up.

73
00:05:38.366 --> 00:05:40.468
&gt;&gt; Brian Holt: I can go backwards and
forwards through time.

74
00:05:43.702 --> 00:05:46.170
&gt;&gt; Brian Holt: This is called time
travelling debugging for that reason.

75
00:05:46.170 --> 00:05:48.594
You're going backwards and
forwards through time, and

76
00:05:48.594 --> 00:05:50.115
kind of seeing what's happening.

77
00:05:50.115 --> 00:05:53.876
So, it's we playing all these
different actions back and forth.

78
00:05:53.876 --> 00:05:56.313
I can even as far and
come in here and say, you know what?

79
00:05:56.313 --> 00:06:01.328
I don't want this one to happen, so
I just don't apply that action anymore.

80
00:06:01.328 --> 00:06:03.186
And now it's cutting that
out of the history, so

81
00:06:03.186 --> 00:06:05.452
you can see what that would look
like without that action and

82
00:06:05.452 --> 00:06:10.030
then you can add it back in,
&gt;&gt; Brian Holt: So skip that one,

83
00:06:10.030 --> 00:06:14.395
skip that one, skip that one,
&gt;&gt; Brian Holt: So

84
00:06:14.395 --> 00:06:17.830
if I skip all the actions and
only apply the last one.

85
00:06:28.866 --> 00:06:31.350
&gt;&gt; Brian Holt: And
then they'll end up with that one,

86
00:06:31.350 --> 00:06:33.997
because this action was dispatch house.

87
00:06:33.997 --> 00:06:36.767
You can actually see what
the action looks like right there.

88
00:06:36.767 --> 00:06:42.130
SET_SEARCH_TERM was the name of the action
and the searchTerm was house, cuz

89
00:06:42.130 --> 00:06:47.747
it sends the value of event.target.value,
the entire value every single time.

90
00:06:47.747 --> 00:06:51.668
It's not just sending E on that action,
it's sending the entire word house.

91
00:06:59.298 --> 00:07:01.580
&gt;&gt; Brian Holt: Any questions about that?

92
00:07:01.580 --> 00:07:02.683
Go ahead.

93
00:07:02.683 --> 00:07:03.470
&gt;&gt; Speaker 2: So not about that.

94
00:07:03.470 --> 00:07:03.995
&gt;&gt; Brian Holt: Okay.

95
00:07:03.995 --> 00:07:05.770
&gt;&gt; Speaker 2: It's a broader question.

96
00:07:05.770 --> 00:07:11.219
I'm wondering if you have recommendations
about good practices for writing

97
00:07:11.219 --> 00:07:16.437
ReactJS programs like documentation or
books, or those sort of things.

98
00:07:16.437 --> 00:07:19.237
&gt;&gt; Brian Holt: They're
docs are phenomenal, so.

99
00:07:19.237 --> 00:07:20.537
&gt;&gt; Speaker 2: The React
docs themselves are.

100
00:07:20.537 --> 00:07:22.923
&gt;&gt; Brian Holt: Yeah, the React docs, the-
&gt;&gt; Speaker 2: I think they're asking for

101
00:07:22.923 --> 00:07:24.807
something a little more
high-level on that.

102
00:07:24.807 --> 00:07:25.984
&gt;&gt; Brian Holt: A little
bit more high level?

103
00:07:27.984 --> 00:07:30.258
&gt;&gt; Brian Holt: This very course itself,
just kidding.

104
00:07:30.258 --> 00:07:30.826
&gt;&gt; Speaker 2: Yeah.

105
00:07:30.826 --> 00:07:37.673
&gt;&gt; Brian Holt: [LAUGH] So the question
is what resources do I recommend?

106
00:07:37.673 --> 00:07:39.504
&gt;&gt; Speaker 2: Yeah, let's go with that.

107
00:07:47.037 --> 00:07:49.180
&gt;&gt; Brian Holt: I think about that for
a second.

108
00:07:49.180 --> 00:07:54.400
What do I get like, the next thing I
react is this a pretty small library

109
00:07:54.400 --> 00:08:01.780
like I evoluted to earlier and I've pretty
much all of the must do best practices.

110
00:08:03.860 --> 00:08:08.689
Beyond that, a lot of it is just
up to you, your own opinion.

111
00:08:08.689 --> 00:08:15.017
Maybe go in and dig through some public
open source React projects like,

112
00:08:15.017 --> 00:08:18.969
for example, the mobile website of Reddit.

113
00:08:18.969 --> 00:08:21.029
It is totally available online.

114
00:08:21.029 --> 00:08:23.581
The entire code base and
it's all written in React,

115
00:08:23.581 --> 00:08:27.420
and I think some of the later revisions
is actually somewhat well written too.

116
00:08:27.420 --> 00:08:29.761
So, I think that's a place
you could check out.

117
00:08:32.384 --> 00:08:35.437
&gt;&gt; Speaker 3: Like the Brave web
browser is completely free and

118
00:08:35.437 --> 00:08:38.649
open to us, and
that's in React Native and React.

119
00:08:38.649 --> 00:08:39.658
&gt;&gt; Brian Holt: Electron.
&gt;&gt; Speaker 3: Electron.

120
00:08:39.658 --> 00:08:45.209
&gt;&gt; Brian Holt: Yeah, so that's a good one
to check out as is the Firefox DevTools.

121
00:08:45.209 --> 00:08:47.261
They're all written in React and Redux.

122
00:08:47.261 --> 00:08:50.418
It's debugger.html.

123
00:08:50.418 --> 00:08:52.349
One can check out that,
that's pretty well written.

124
00:08:52.349 --> 00:08:55.966
I mean, Lin Clark and
her team that write it and James Longster.

125
00:08:55.966 --> 00:08:57.068
They're all brilliant people.

126
00:08:57.068 --> 00:08:57.881
So.

127
00:08:59.882 --> 00:09:02.609
&gt;&gt; Brian Holt: I don't know if I have
any better suggestions than that.

128
00:09:02.609 --> 00:09:04.557
Anything that Dan Abramov wrote,
definitely.

129
00:09:04.557 --> 00:09:06.030
That man is gospel.

