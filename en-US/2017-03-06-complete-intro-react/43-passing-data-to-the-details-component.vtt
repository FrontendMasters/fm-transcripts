WEBVTT

1
00:00:00.390 --> 00:00:04.110
&gt;&gt; Brian Holt: Now because the client
app is aware of what the show is, right?

2
00:00:04.110 --> 00:00:08.377
Now we can make it past the correct show,
down to details.

3
00:00:11.173 --> 00:00:12.441
&gt;&gt; Brian Holt: So
if we come back to clientapp.js.

4
00:00:13.551 --> 00:00:15.314
&gt;&gt; Brian Holt: We're gonna do a same,

5
00:00:15.314 --> 00:00:18.850
similar thing that we
did here with component.

6
00:00:18.850 --> 00:00:22.160
But what we're gonna do instead
of passing down all of the shows,

7
00:00:22.160 --> 00:00:25.447
we're only going to pass down
to the correct show, okay?

8
00:00:25.447 --> 00:00:32.840
&gt;&gt; Brian Holt: And we're gonna base
that on the ID parameter, right?

9
00:00:36.725 --> 00:00:38.650
&gt;&gt; Brian Holt: Cuz we don't wanna
have to pass down all of the shows.

10
00:00:38.650 --> 00:00:40.900
We don't the details to have
to select it's own show.

11
00:00:40.900 --> 00:00:43.650
We wanna say here is the correct show for
you.

12
00:00:48.105 --> 00:00:50.230
&gt;&gt; Brian Holt: Yeah, hold on,
let me push a branch real quick.

13
00:00:56.986 --> 00:00:58.720
&gt;&gt; Speaker 2: Question while
you're doing that as well.

14
00:00:58.720 --> 00:00:59.650
&gt;&gt; Brian Holt: Sure.

15
00:00:59.650 --> 00:01:02.110
&gt;&gt; Speaker 2: Asking why is
defining prop types important

16
00:01:03.190 --> 00:01:05.400
if in production code it isn't included?

17
00:01:06.930 --> 00:01:08.740
&gt;&gt; Brian Holt: Debugging purposes.

18
00:01:08.740 --> 00:01:13.160
Debugging purposes and
forced documentation.

19
00:01:14.700 --> 00:01:16.540
In other words, you don't have to.

20
00:01:16.540 --> 00:01:19.550
But our linter forces us to so we do.

21
00:01:21.620 --> 00:01:22.780
I think it's a good idea, too.

22
00:01:22.780 --> 00:01:26.700
So, I'll say at Netflix we do do
prototypes, and I have found it helpful.

23
00:01:30.353 --> 00:01:31.347
&gt;&gt; Brian Holt: Git add commit.

24
00:01:31.347 --> 00:01:32.700
Good job, okay.

25
00:01:41.208 --> 00:01:44.515
&gt;&gt; Brian Holt: Okay, so
I just pushed out v2-13.

26
00:01:47.726 --> 00:01:50.966
&gt;&gt; Brian Holt: Other questions?

27
00:01:52.826 --> 00:01:53.352
&gt;&gt; Brian Holt: Okay.

28
00:01:58.433 --> 00:02:03.323
&gt;&gt; Brian Holt: So what we're gonna do now
is we're gonna make this another function

29
00:02:03.323 --> 00:02:04.260
right here.

30
00:02:07.626 --> 00:02:08.954
&gt;&gt; Brian Holt: This is going to
be a little bit more complicated.

31
00:02:08.954 --> 00:02:12.310
So, this is going to
take in props as well.

32
00:02:15.858 --> 00:02:18.617
&gt;&gt; Brian Holt: Remember, these are the
props that we saw being passed into search

33
00:02:18.617 --> 00:02:20.200
when we dumped those out.

34
00:02:20.200 --> 00:02:23.100
So, inside of these props is
going to be whatever this ID is.

35
00:02:23.100 --> 00:02:29.220
So, we can use this ID to match up to
the correct show to pass down to details.

36
00:02:30.330 --> 00:02:33.970
So what we're gonna do is we're gonna say,
we're just gonna put a filter.

37
00:02:36.513 --> 00:02:40.057
&gt;&gt; Brian Holt: There is a better way to do
this, but I'm just gonna do it this way.

38
00:02:40.057 --> 00:02:42.552
Shows.filter

39
00:02:46.074 --> 00:02:54.780
&gt;&gt; Brian Holt:
props.params.id===show.imdbID.

40
00:02:54.780 --> 00:02:57.774
We'll return

41
00:02:57.774 --> 00:03:04.511
details show={show[0]}

42
00:03:04.511 --> 00:03:12.000
{...props} /&gt; component.

43
00:03:17.800 --> 00:03:20.730
So, why is this imperfect?

44
00:03:20.730 --> 00:03:25.600
Well, we're making a big assumption
that id is going to be a correct show.

45
00:03:25.600 --> 00:03:28.980
This is obviously not the way you wanna
do a production if the ID was not found,

46
00:03:28.980 --> 00:03:32.520
you'd wanna show 404 or
redirect somewhere else.

47
00:03:32.520 --> 00:03:34.750
All things you can definitely do.

48
00:03:34.750 --> 00:03:37.410
For now, we're just going to assume
it's always going to be a correct ID.

49
00:03:41.270 --> 00:03:45.695
&gt;&gt; Brian Holt: The way you would do that,
so basically if I don't have any shows of

50
00:03:45.695 --> 00:03:50.517
length zero, what you would do is
instead of returning details you would

51
00:03:50.517 --> 00:03:55.950
return to redirect component, and
redirect components will redirect.

52
00:03:55.950 --> 00:03:58.030
That's the way that they work.

53
00:03:58.030 --> 00:04:04.490
Or you could also do like a return
the missed page, the 404 page, yeah?

54
00:04:04.490 --> 00:04:07.930
&gt;&gt; Speaker 2: Question, is there any
lightweight, good substitute for

55
00:04:07.930 --> 00:04:10.640
React Router, just like Preact for React?

56
00:04:13.941 --> 00:04:17.290
&gt;&gt; Brian Holt: React Router is
pretty much the de facto standard.

57
00:04:20.690 --> 00:04:24.790
I think the answer is, is there are,
are there's, I'm not aware of them.

58
00:04:25.920 --> 00:04:28.738
We do use one at Netflix, but
it's internal and not open source.

59
00:04:28.738 --> 00:04:33.310
So, I guess before react router,
I used director, but

60
00:04:33.310 --> 00:04:38.410
director is not necessarily specific
to react, it's just a router library.

61
00:04:41.000 --> 00:04:42.910
&gt;&gt; Speaker 2: Another question,

62
00:04:42.910 --> 00:04:47.180
is there another way to render
the component of each route and

63
00:04:47.180 --> 00:04:51.994
pass properties to it without having
to call an anonymous function?

64
00:04:51.994 --> 00:04:52.715
&gt;&gt; Brian Holt: Yes.

65
00:04:52.715 --> 00:04:56.359
[LAUGH] Yes, there is.

66
00:04:56.359 --> 00:04:58.215
&gt;&gt; Speaker 2: I kinda thought
there gonna be real answer.

67
00:04:58.215 --> 00:05:02.520
&gt;&gt; Brian Holt: Yeah, it's there
is a lot of ways to do it right.

68
00:05:02.520 --> 00:05:06.390
You can probably make some sort of
component that encapsulates this behavior.

69
00:05:06.390 --> 00:05:11.830
I like this because you see
everything happening right here so to

70
00:05:13.220 --> 00:05:18.510
my preference to do this way and
you're stuck in my world so deal with it.

71
00:05:18.510 --> 00:05:21.780
Just kidding I don't know
a better way to explain that.

72
00:05:21.780 --> 00:05:26.350
&gt;&gt; Speaker 2: On line 24 does there need
to be a variable declaration for the cost?

73
00:05:26.350 --> 00:05:32.220
&gt;&gt; Brian Holt: Yeah yeah thank you.

74
00:05:35.975 --> 00:05:45.975
[SILENCE]

75
00:05:47.492 --> 00:05:53.774
Cool.

76
00:05:53.774 --> 00:05:54.611
Any other questions?

77
00:05:58.493 --> 00:06:01.489
&gt;&gt; Brian Holt: So now, if we save this and

78
00:06:01.489 --> 00:06:06.413
go to details such as
&gt;&gt; Brian Holt: And

79
00:06:06.413 --> 00:06:09.037
it'll just reuse this
the way it is right now,

80
00:06:09.037 --> 00:06:13.229
we can now hopefully see the correct
TV show being passed down to details.

81
00:06:16.877 --> 00:06:19.196
&gt;&gt; Brian Holt: So, if I details/ and

82
00:06:19.196 --> 00:06:25.210
remember this is gonna match
the imdbID from data.json.

83
00:06:25.210 --> 00:06:27.450
So, I'm just gonna grab
House of Cards right here.

84
00:06:27.450 --> 00:06:29.590
This number right here.

85
00:06:31.200 --> 00:06:33.780
Copy that, paste that right here.

86
00:06:36.473 --> 00:06:39.480
&gt;&gt; Brian Holt: Notice that I'm
getting the show as House of Cards.

87
00:06:41.940 --> 00:06:43.720
Any questions of how that got there?

88
00:06:43.720 --> 00:06:46.620
I mean we put it there.

89
00:06:46.620 --> 00:06:47.460
That's how it got there.

90
00:06:47.460 --> 00:06:49.790
But is anyone confused
with why it got there?

91
00:06:54.783 --> 00:06:58.487
&gt;&gt; Brian Holt: So again, like I find this
really compelling because now we've taken

92
00:06:58.487 --> 00:07:02.490
this logic out of deciding which show
to pass into detail, out of detail.

93
00:07:02.490 --> 00:07:07.200
Details just gets to be a nice dumb route
that just shows beautiful markup and

94
00:07:07.200 --> 00:07:08.340
does nothing else.

95
00:07:08.340 --> 00:07:13.240
Only thing that logic in the router which
That logic more belongs in the router

96
00:07:13.240 --> 00:07:16.520
because your routing it
to the correct show.

97
00:07:16.520 --> 00:07:17.100
I think it's cool.

98
00:07:19.507 --> 00:07:20.778
&gt;&gt; Brian Holt: So, that's why we did it.

99
00:07:20.778 --> 00:07:23.133
[LAUGH] Cool.

100
00:07:23.133 --> 00:07:27.000
Any other questions before I move on?

101
00:07:27.000 --> 00:07:28.270
&gt;&gt; Speaker 3: I think you touched on it,
but

102
00:07:28.270 --> 00:07:33.210
could you maybe just mention again
if you did If you remove the ID from

103
00:07:33.210 --> 00:07:38.900
the Details path, that just kinda
renders kind of a blank state.

104
00:07:38.900 --> 00:07:41.100
So, what would be a good
way to handle that?

105
00:07:42.500 --> 00:07:46.520
&gt;&gt; Brian Holt: So, if I had some
time at the end, I'll touch on it.

106
00:07:46.520 --> 00:07:52.320
But there's a miscomponent
that React router shift with.

107
00:07:52.320 --> 00:07:56.850
So, you would just well,
this one get the miss.

108
00:07:59.180 --> 00:08:00.540
It would, it would get miss.

109
00:08:00.540 --> 00:08:03.691
So, you would hit the miss, and then
you could just wrap that to a 404 page.

110
00:08:03.691 --> 00:08:04.560
&gt;&gt; Speaker 3: Okay.

111
00:08:04.560 --> 00:08:07.901
&gt;&gt; Brian Holt: Or you could render a
redirect component, and anytime you render

112
00:08:07.901 --> 00:08:11.840
out a redirect component,
react router will redirect somewhere else.

113
00:08:11.840 --> 00:08:13.980
So you'd redirect to a better place.

114
00:08:13.980 --> 00:08:15.621
&gt;&gt; Speaker 3: Okay.

115
00:08:15.621 --> 00:08:20.875
&gt;&gt; Brian Holt: Both of
those are in the reacts,

116
00:08:20.875 --> 00:08:24.188
router, dot come.

117
00:08:24.188 --> 00:08:24.955
I make sure it is not changed.

118
00:08:24.955 --> 00:08:30.023
I'll have a link in my notes if you

119
00:08:30.023 --> 00:08:34.548
want to go grab it from there.

120
00:08:34.548 --> 00:08:39.260
But this is where the docs are now for
v4, specifically.

121
00:08:39.260 --> 00:08:43.790
If you go to React Router's main web page
right now, it's still the v2, v3 docs.

122
00:08:46.020 --> 00:08:48.230
So, the key is look for the red.

123
00:08:48.230 --> 00:08:48.940
The red is v4.

124
00:08:50.390 --> 00:08:52.010
If it's blue, then it's v2 or 3.

125
00:08:52.010 --> 00:08:55.400
It's secret language.

