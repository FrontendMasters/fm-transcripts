WEBVTT

1
00:00:00.490 --> 00:00:03.810
&gt;&gt; Brian Holt: So, we're going to
go do a ajax request real quick,

2
00:00:03.810 --> 00:00:05.470
just to show you kind of how that works.

3
00:00:05.470 --> 00:00:09.480
So, go to your details.js.

4
00:00:09.480 --> 00:00:17.260
And up here at the top,
we're going to import axios from axios.

5
00:00:17.260 --> 00:00:18.730
This is just an Ajax client.

6
00:00:18.730 --> 00:00:21.080
I'm fine if you use any other Ajax client.

7
00:00:21.080 --> 00:00:24.450
I just happened to like axios because
I find it really easy to use.

8
00:00:24.450 --> 00:00:26.940
You can use fetch in here if you want to,
that's fine as well.

9
00:00:28.160 --> 00:00:32.897
But axios is written by my friend
out of Utah and go team Utah.

10
00:00:35.393 --> 00:00:39.694
&gt;&gt; Speaker 2: There's a request to explain
the component will update life cycle

11
00:00:39.694 --> 00:00:40.700
method again.

12
00:00:41.960 --> 00:00:43.370
Do you want to cover it again?

13
00:00:43.370 --> 00:00:46.520
&gt;&gt; Brian Holt: So
yeah there is one I forgot to talk about.

14
00:00:46.520 --> 00:00:49.480
Which I think it is compartible update.

15
00:00:49.480 --> 00:00:52.000
Again not one that I typically use.

16
00:00:52.000 --> 00:00:54.630
No, the one I'm thinking about
is component will receive props.

17
00:00:54.630 --> 00:00:55.720
I think it's what it is.

18
00:00:57.330 --> 00:00:59.129
&gt;&gt; Speaker 2: Okay their asking
about component will update.

19
00:01:00.490 --> 00:01:02.320
&gt;&gt; Brian Holt: All right let's go
look at the docks, because there's so

20
00:01:02.320 --> 00:01:04.008
many of these I can't
necessarily keep them straight.

21
00:01:04.008 --> 00:01:07.458
React life.

22
00:01:12.844 --> 00:01:15.402
&gt;&gt; Brian Holt: Component life cycle,
component mount, renderer,

23
00:01:15.402 --> 00:01:16.800
component div mount, okay.

24
00:01:17.910 --> 00:01:19.070
Component will receive props.

25
00:01:19.070 --> 00:01:22.340
Should component update, component
will update and component did update.

26
00:01:23.910 --> 00:01:27.270
So, this is like the long tail.

27
00:01:27.270 --> 00:01:28.920
I almost never use these.

28
00:01:28.920 --> 00:01:31.920
In fact, I couldn't even tell you what
component will update necessarily does.

29
00:01:33.360 --> 00:01:36.060
So yeah, component will update
is invoked immediately before

30
00:01:36.060 --> 00:01:37.989
rendering when new props or
state are being received.

31
00:01:40.120 --> 00:01:41.720
So if you need it, this is what it says.

32
00:01:41.720 --> 00:01:45.420
If you need to prepare something
before you do an update the DOM,

33
00:01:45.420 --> 00:01:46.970
this is where one would do it.

34
00:01:46.970 --> 00:01:50.250
I would say this is something more
like maybe something with D3.

35
00:01:50.250 --> 00:01:54.934
If you're integrating directly with D3,
and you need to inform D3's okay.

36
00:01:54.934 --> 00:01:59.020
I got a new state, I got new props, here's
new data to put it into your D3 charts.

37
00:02:00.220 --> 00:02:02.410
But this is definitely the long tail.

38
00:02:03.660 --> 00:02:06.197
I've never written component
will update personally.

39
00:02:09.320 --> 00:02:10.460
&gt;&gt; Brian Holt: Component did update.

40
00:02:10.460 --> 00:02:13.105
There's some other long tail things here.

41
00:02:13.105 --> 00:02:17.235
But the docs are great,
I would just suggest reading the docs.

42
00:02:17.235 --> 00:02:21.375
If you find yourself needing more
fine granular control of life cycle.

43
00:02:24.169 --> 00:02:28.649
&gt;&gt; Brian Holt: Like I said,
95% goes into componentDidMount().

44
00:02:30.826 --> 00:02:33.940
&gt;&gt; Brian Holt: Component
will amount force update.

45
00:02:33.940 --> 00:02:35.180
Yeah, that's really it.

46
00:02:35.180 --> 00:02:38.260
&gt;&gt; Speaker 2: Can you just real quick,
just go over a little bit of the things

47
00:02:38.260 --> 00:02:42.010
for componentDidMount,
the things that you like to do there?

48
00:02:42.010 --> 00:02:43.050
&gt;&gt; Brian Holt: Yeah.
&gt;&gt; Speaker 2: Cuz that happens only in

49
00:02:43.050 --> 00:02:44.560
the browser.

50
00:02:44.560 --> 00:02:48.830
&gt;&gt; Brian Holt: Yep, so anything you have
to interact with the DOM, AJAX calls,

51
00:02:48.830 --> 00:02:53.880
event listeners, and
integration with external libraries.

52
00:02:53.880 --> 00:03:02.496
That's, that's most of it.

53
00:03:02.496 --> 00:03:03.030
&gt;&gt; Brian Holt: Okay.

54
00:03:03.030 --> 00:03:06.870
Check out the react docs on this, they're
pretty explicit and they are really good.

