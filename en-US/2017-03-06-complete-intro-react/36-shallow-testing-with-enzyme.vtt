WEBVTT

1
00:00:00.600 --> 00:00:03.920
&gt;&gt; Brian Holt: I put something here
in show-card to interest something,

2
00:00:03.920 --> 00:00:08.160
I'm gonna go ahead and assert that's
kind of problematic about this.

3
00:00:08.160 --> 00:00:11.080
I changed something in show-card yet

4
00:00:11.080 --> 00:00:16.030
my test in search is failing and
I think that's a problem.

5
00:00:16.030 --> 00:00:17.210
Other people may disagree with me.

6
00:00:17.210 --> 00:00:21.979
I think it's a problem because if
there's a problem with show-card,

7
00:00:21.979 --> 00:00:24.850
I want my show-card test to fail, right?

8
00:00:24.850 --> 00:00:27.638
And if I have a problem with search,
I want my search test to fail so

9
00:00:27.638 --> 00:00:29.380
it tells me exactly where my problem is.

10
00:00:30.800 --> 00:00:32.340
Well, why is this failing?

11
00:00:32.340 --> 00:00:37.120
Well, I have this test render and
it renders everything underneath search.

12
00:00:37.120 --> 00:00:40.850
It'd be really nice if it could only
render everything underneath search

13
00:00:40.850 --> 00:00:42.144
that only go one layer deep.

14
00:00:42.144 --> 00:00:43.610
Only have a shallow render and

15
00:00:43.610 --> 00:00:48.810
not necessarily have all of the components
underneath it render as well.

16
00:00:48.810 --> 00:00:52.034
And that way those tests can fail, so
if I have a problem with show-card,

17
00:00:52.034 --> 00:00:54.220
only show-card fails and
search doesn't fail.

18
00:00:55.510 --> 00:00:58.840
Luckily there is actually
a way to accomplish this.

19
00:00:58.840 --> 00:01:03.891
And we're going to bring in, excuse me,
another library called Enzyme to do so.

20
00:01:06.660 --> 00:01:11.423
&gt;&gt; Brian Holt: But
first let's go to package.json.

21
00:01:14.339 --> 00:01:17.570
&gt;&gt; Brian Holt: And
I'm sick of it writing all that stuff.

22
00:01:17.570 --> 00:01:22.050
So I'm gonna say test =

23
00:01:22.050 --> 00:01:27.652
"NODE_ENV=test jest",

24
00:01:27.652 --> 00:01:32.806
or whatever flavor of shell

25
00:01:32.806 --> 00:01:36.850
that you're using.

26
00:01:50.299 --> 00:01:55.206
&gt;&gt; Brian Holt: Okay, now I can just
run npm run test, everyone's happy,

27
00:01:55.206 --> 00:01:57.081
right, npm run test.

28
00:02:02.163 --> 00:02:04.949
&gt;&gt; Brian Holt: Yeah,
I broke it, so that's why.

29
00:02:04.949 --> 00:02:08.580
But just as an npm sidenote,
instead of npm run test,

30
00:02:08.580 --> 00:02:12.456
since supposedly we should
be testing our code, right,

31
00:02:12.456 --> 00:02:17.550
a lot npm gives you the convenience
of saying npm test that also works.

32
00:02:17.550 --> 00:02:19.893
Or you can actually even go
as short as saying npm t.

33
00:02:22.101 --> 00:02:25.150
&gt;&gt; Brian Holt: And that always
corresponds to the test in scripts.

34
00:02:25.150 --> 00:02:29.090
That's just a shortcut that they gave you.

35
00:02:29.090 --> 00:02:30.576
I think start does that as well, but

36
00:02:30.576 --> 00:02:32.667
I think those are the only
two that it'll do that.

37
00:02:36.286 --> 00:02:41.751
&gt;&gt; Brian Holt: Cool, so come back to spec.

38
00:02:41.751 --> 00:02:44.042
And we have that in our package.json, so

39
00:02:44.042 --> 00:02:48.640
we're gonna move from react-test-renderer
to using what's called Enzyme.

40
00:02:48.640 --> 00:02:52.131
Enzyme is a library from
our friends over at Airbnb.

41
00:02:52.131 --> 00:02:56.939
It is not necessarily the official testing
library of React because they refuse to

42
00:02:56.939 --> 00:02:59.320
bless any one library as that.

43
00:02:59.320 --> 00:03:03.520
But it is the library that Facebook uses,
which pretty much makes it official.

44
00:03:05.717 --> 00:03:08.426
&gt;&gt; Brian Holt: We use Enzyme,
if you're gonna be testing React,

45
00:03:08.426 --> 00:03:10.830
you're gonna be using Enzyme or
you should.

46
00:03:13.310 --> 00:03:17.352
&gt;&gt; Brian Holt: So what I'm gonna do here,
is I'm gonna say,

47
00:03:17.352 --> 00:03:20.781
import { shallow } from 'enzyme'.

48
00:03:23.012 --> 00:03:29.907
&gt;&gt; Brian Holt: And
we're going to import { shallowToJson

49
00:03:29.907 --> 00:03:35.132
} from 'enzyme-to-json',

50
00:03:37.199 --> 00:03:38.708
&gt;&gt; Brian Holt: Which is not from Airbnb.

51
00:03:38.708 --> 00:03:41.102
It's from someone else
that's really smart.

52
00:03:41.102 --> 00:03:42.392
I don't remember who it is.

53
00:03:45.710 --> 00:03:49.980
&gt;&gt; Brian Holt: And we're gonna slightly
modify our snapshot test down here.

54
00:03:51.040 --> 00:03:55.240
So I showed you the other one,
initially, that's the barebones one.

55
00:03:55.240 --> 00:03:57.390
But I think the Enzyme way of
doing it's a little bit better.

56
00:04:00.140 --> 00:04:07.580
So we're gonna say shallow here and
tree is going to be shallowToJson.

57
00:04:11.854 --> 00:04:15.588
&gt;&gt; Brian Holt: Component and
then the last line stays the same.

58
00:04:25.833 --> 00:04:27.800
&gt;&gt; Brian Holt: So to talk about shallow.

59
00:04:27.800 --> 00:04:31.560
Shallow does exactly what I was
describing a few minutes ago,

60
00:04:31.560 --> 00:04:35.060
which is that it's going to
render out everything in search.

61
00:04:35.060 --> 00:04:37.030
But it's not going to go
any deeper than that.

62
00:04:37.030 --> 00:04:39.986
So it's gonna hit show-card and
it's just going to say, okay,

63
00:04:39.986 --> 00:04:41.344
here's another component.

64
00:04:41.344 --> 00:04:44.496
This is the component, this is
the properties that we'll receive, but

65
00:04:44.496 --> 00:04:46.571
I'm not going to render
that component at all.

66
00:04:46.571 --> 00:04:48.410
I'll show you what that looks like.

67
00:04:48.410 --> 00:04:49.630
But it only goes one layer deep.

68
00:04:51.170 --> 00:04:56.317
ShallowToJson, DumpSetToJson,
which then you can do a snapshot test on.

69
00:04:56.317 --> 00:05:00.277
The other thing I should tell you
about jest in snapshot testing,

70
00:05:00.277 --> 00:05:03.690
all it does is compare one
JSON structure to another.

71
00:05:03.690 --> 00:05:05.220
That's all it does.

72
00:05:05.220 --> 00:05:07.670
So if you're testing server responses for

73
00:05:07.670 --> 00:05:11.190
your node server, you can just
dump that to a JSON structure.

74
00:05:11.190 --> 00:05:13.490
Do a snapshot test on that and
there you go.

75
00:05:13.490 --> 00:05:14.240
You just roll with that.

76
00:05:14.240 --> 00:05:17.160
So anything that you can dump
to some sort of JSON structure,

77
00:05:17.160 --> 00:05:18.400
you can do snapshot testing on.

78
00:05:21.036 --> 00:05:21.995
&gt;&gt; Brian Holt: Which I
think's pretty cool.

79
00:05:23.759 --> 00:05:29.098
&gt;&gt; Brian Holt: Okay, save that,
come back over here, say npm test.

80
00:05:29.098 --> 00:05:32.200
It's gonna fail miserably now
because a lot has changed.

81
00:05:35.606 --> 00:05:38.635
&gt;&gt; Brian Holt: injectEnvironment
can be called once.

82
00:05:38.635 --> 00:05:39.708
That's new.

83
00:05:51.905 --> 00:05:52.690
&gt;&gt; Brian Holt: No cache.

84
00:05:52.690 --> 00:05:54.560
I can't imagine that would be the reason,
but.

85
00:05:58.795 --> 00:06:00.883
&gt;&gt; Brian Holt: Yeah, yeah,
that's the problem here.

86
00:06:00.883 --> 00:06:06.122
So we have render array here, which is
actually used internally in Enzyme.

87
00:06:06.122 --> 00:06:07.190
So you actually have to dump that.

88
00:06:08.330 --> 00:06:10.583
So this line right here, line 3,

89
00:06:10.583 --> 00:06:14.710
import renderer from react-test-render,
drop that line.

90
00:06:25.850 --> 00:06:30.380
&gt;&gt; Brian Holt: So now, if you look up here
in the green, this is what you expect.

91
00:06:30.380 --> 00:06:32.990
You see all these divs, right?

92
00:06:32.990 --> 00:06:36.414
With Club de Cuervos,
Making a Murder, right?

93
00:06:36.414 --> 00:06:39.562
But if you look down
here at the new output,

94
00:06:39.562 --> 00:06:42.632
it just outputs the jsx version, right?

95
00:06:42.632 --> 00:06:45.113
So it says, okay, well,
this was a ShowCard and

96
00:06:45.113 --> 00:06:47.294
here's all the properties I got with it.

97
00:06:47.294 --> 00:06:50.080
imdbID poster, right?

98
00:06:50.080 --> 00:06:51.290
And that's what we actually want.

99
00:06:55.850 --> 00:07:01.100
So we're actually gonna go
put that to a package.json.

100
00:07:01.100 --> 00:07:03.952
So go back to your package.json.

101
00:07:03.952 --> 00:07:11.134
Underneath test,
we're gonna have one called update-test,

102
00:07:11.134 --> 00:07:15.820
which is going to be npm run test -- -u.

103
00:07:15.820 --> 00:07:18.849
Npm run test -- -u.

104
00:07:18.849 --> 00:07:21.420
Which you're gonna call every
time you wanna update your tests.

105
00:07:23.176 --> 00:07:25.825
&gt;&gt; Brian Holt: That way you don't have to
remember the flag because I am terrible at

106
00:07:25.825 --> 00:07:27.275
remembering flags, so I refuse to.

107
00:07:32.009 --> 00:07:36.725
&gt;&gt; Brian Holt: Save that, come back

108
00:07:36.725 --> 00:07:41.179
to your terminal and

109
00:07:41.179 --> 00:07:47.230
say npm run update-test.

110
00:07:47.230 --> 00:07:49.710
And now we have one solid snapshot test.

111
00:07:49.710 --> 00:07:54.510
So this is nice because ShowCard can
go break in whatever way it wants to.

112
00:07:54.510 --> 00:07:58.680
And it should fail your ShowCard
test that you'll write later.

113
00:07:58.680 --> 00:08:03.115
Well, I'm not gonna write it,
but you should write it.

114
00:08:03.115 --> 00:08:05.610
[LAUGH] But
it should fail the ShowCard test and

115
00:08:05.610 --> 00:08:07.090
it should not fail the search test.

116
00:08:11.294 --> 00:08:14.460
&gt;&gt; Brian Holt: Okay,
I'm going to go take out that h3, yeah.

117
00:08:21.306 --> 00:08:27.128
&gt;&gt; Brian Holt: Any questions
about snapshot testing?

118
00:08:28.938 --> 00:08:33.369
&gt;&gt; Speaker 2: How did you get it to
print the JSON out in your terminal,

119
00:08:33.369 --> 00:08:35.169
when you run the test?

120
00:08:35.169 --> 00:08:36.680
&gt;&gt; Brian Holt: To print out this stuff?

121
00:08:37.810 --> 00:08:38.650
I failed the test.

122
00:08:40.450 --> 00:08:45.560
Yeah, so when it fails, [COUGH] excuse me,
it'll print out the div.

123
00:08:46.670 --> 00:08:48.695
&gt;&gt; Speaker 2: Okay,
it's really cuz I didn't do the ShowCard.

124
00:08:53.922 --> 00:08:54.798
&gt;&gt; Brian Holt: Any other questions?

125
00:09:00.301 --> 00:09:04.931
&gt;&gt; Speaker 2: There's just a little
general confusion about when you

126
00:09:04.931 --> 00:09:07.500
would do this sort of testing.

127
00:09:08.710 --> 00:09:11.380
&gt;&gt; Brian Holt: So generally I would
take in a component that I wrote and

128
00:09:11.380 --> 00:09:13.030
just write a quick snapshot test for it.

129
00:09:13.030 --> 00:09:19.280
So I'm not gonna assert maybe for
each component test or for each component.

130
00:09:19.280 --> 00:09:24.490
But maybe for important components or
specifically display components.

131
00:09:24.490 --> 00:09:25.639
It's usually helpful.

132
00:09:25.639 --> 00:09:29.627
&gt;&gt; Speaker 2: Yeah, they're saying things
like, it should be more stable probably.

133
00:09:29.627 --> 00:09:32.687
If your output is changing a lot and you
haven't quite got your design figured out

134
00:09:32.687 --> 00:09:34.303
and things like that-
&gt;&gt; Brian Holt: [CROSSTALK] Yeah,

135
00:09:34.303 --> 00:09:35.323
then it's just noise.

136
00:09:35.323 --> 00:09:36.651
&gt;&gt; Speaker 2: Yeah.

137
00:09:36.651 --> 00:09:40.965
&gt;&gt; Brian Holt: So it's a cheap test that
easily breaks but it's easy to update, so

138
00:09:40.965 --> 00:09:42.490
that's the tradeoff.

139
00:09:47.806 --> 00:09:51.569
&gt;&gt; Speaker 3: They're asking if
we can do a test on ShowCard,

140
00:09:51.569 --> 00:09:55.857
it's
&gt;&gt; Brian Holt: One may, I will not.

141
00:09:55.857 --> 00:09:58.520
[LAUGH] We're gonna write two more tests,
though.

142
00:09:58.520 --> 00:10:03.000
I'm just gonna test search, but

143
00:10:03.000 --> 00:10:04.930
you're welcome to go test
everything else if you want to

