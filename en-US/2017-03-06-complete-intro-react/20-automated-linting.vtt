WEBVTT

1
00:00:00.160 --> 00:00:01.425
&gt;&gt; Biran Holt: What would be really cool,

2
00:00:01.425 --> 00:00:05.360
what happens if Webpack just automatically
rsn our linter on files that change?

3
00:00:05.360 --> 00:00:11.390
And so instead of having to wait until
I actually go to like do my git,

4
00:00:11.390 --> 00:00:15.480
what was I trying say?

5
00:00:15.480 --> 00:00:16.860
The hooks before I do a commit.

6
00:00:16.860 --> 00:00:22.470
It would be great if we could just
see instantly in our console that

7
00:00:22.470 --> 00:00:26.250
something was going wrong,
so let's go do that.

8
00:00:26.250 --> 00:00:30.300
So go to your loaders,
inside of your webpack.config.js.

9
00:00:30.300 --> 00:00:37.115
As your first rule,
we're gonna do enforce: 'pre'.

10
00:00:37.115 --> 00:00:40.569
And what this is saying,

11
00:00:40.569 --> 00:00:46.489
hey before you do any
of the build process,

12
00:00:46.489 --> 00:00:50.610
I want you to run this loader.

13
00:00:50.610 --> 00:00:54.886
Now the reason why you want to do it
before our build process is you don't

14
00:00:54.886 --> 00:00:58.260
wanna lint the output,
you wanna lint the input.

15
00:00:58.260 --> 00:00:59.670
You don't care what the output looks like.

16
00:00:59.670 --> 00:01:01.230
As long as it runs, right?

17
00:01:01.230 --> 00:01:03.140
You don't care what bundle.js looks like,
but

18
00:01:03.140 --> 00:01:05.510
you do care what your
source files look like.

19
00:01:05.510 --> 00:01:06.910
So we're gonna do enforce 'pre'.

20
00:01:08.420 --> 00:01:10.090
The test is gonna look just like this one.

21
00:01:10.090 --> 00:01:11.923
You can actually just copy and
paste it if you want to.

22
00:01:15.549 --> 00:01:19.203
&gt;&gt; Biran Holt: Then you're gonna say,

23
00:01:19.203 --> 00:01:25.844
loader: and, sorry, eslint-loader.

24
00:01:25.844 --> 00:01:32.630
And you can do an include/exclude, but
most importantly you just don't want

25
00:01:32.630 --> 00:01:36.830
to lint anything in node modules, right?

26
00:01:36.830 --> 00:01:38.894
Because you don't care what
everyone else's style is,

27
00:01:38.894 --> 00:01:43.877
you only care about what yours is.
&gt;&gt; Biran Holt: And

28
00:01:43.877 --> 00:01:49.870
eslint loader is smart enough to read
from your eslint.json so that's okay.

29
00:01:49.870 --> 00:01:55.101
Yeah, everything should be good here.
&gt;&gt; Biran Holt: So save that.

30
00:01:58.357 --> 00:02:00.962
&gt;&gt; Biran Holt: Come back to here and

31
00:02:00.962 --> 00:02:06.423
do an npm run watch.
&gt;&gt; Biran Holt: Again,

32
00:02:06.423 --> 00:02:09.190
if you're already running watch,
stop it and start it.

33
00:02:10.650 --> 00:02:14.090
So I have no errors right now,
so it's going to build okay.

34
00:02:14.090 --> 00:02:16.705
But if I come in here to like
client app and I just say like,

35
00:02:16.705 --> 00:02:22.810
const x = 5 right, I come back here,

36
00:02:22.810 --> 00:02:26.180
it's gonna say hey, you defined x but you
never used it so why are you doing that?

37
00:02:28.740 --> 00:02:32.397
So these will just automatically pop up
in your console as you're having errors,

38
00:02:32.397 --> 00:02:35.206
which I think is a better,
to shorten that feedback loop is much

39
00:02:35.206 --> 00:02:40.210
better.
&gt;&gt; Biran Holt: And

40
00:02:40.210 --> 00:02:45.060
then again if I get rid of it,
save it, come back.

41
00:02:45.060 --> 00:02:45.840
Everything's okay again.

42
00:02:48.790 --> 00:02:52.050
Questions?
&gt;&gt; Speaker 2: Can you just show

43
00:02:52.050 --> 00:02:52.980
the rules again?

44
00:02:52.980 --> 00:02:58.679
&gt;&gt; Biran Holt: Yeah.
&gt;&gt; Biran Holt: Where is it?

45
00:02:58.679 --> 00:02:59.620
Right there.

46
00:03:02.350 --> 00:03:11.172
So this one right here.
&gt;&gt; Speaker 2: How

47
00:03:11.172 --> 00:03:15.460
much does the loader affect build time?
&gt;&gt; Biran Holt: That

48
00:03:15.460 --> 00:03:16.940
varies wildly by loader.

49
00:03:18.240 --> 00:03:20.852
Obviously Babble is going to be-
&gt;&gt; Speaker 2: The eslint-loader in

50
00:03:20.852 --> 00:03:25.160
particular.
&gt;&gt; Biran Holt: Minimally, I would imagine.

51
00:03:25.160 --> 00:03:28.252
I guess it depends on how many source
files you're rebuilding at once.

52
00:03:28.252 --> 00:03:34.790
But Webpack watch is smart
enough to incrementally rebuild.

53
00:03:34.790 --> 00:03:37.420
So you're only going to
lint files that changed.

54
00:03:38.970 --> 00:03:43.540
Now if you're running the entire suite,
like on all of your files?

55
00:03:43.540 --> 00:03:45.340
It might take a bit longer.

56
00:03:45.340 --> 00:03:50.185
Eslint's pretty damn fast though, so
I would feel okay about including it into

57
00:03:50.185 --> 00:03:58.706
your build process.
&gt;&gt; Biran Holt: Any

58
00:03:58.706 --> 00:04:03.421
other questions?
&gt;&gt; Biran Holt: Okay.

59
00:04:03.421 --> 00:04:05.448
&gt;&gt; Speaker 2: Their question about

60
00:04:05.448 --> 00:04:07.705
the enforce pre thing.

61
00:04:08.855 --> 00:04:11.499
They wanna know if that's
the same as a pre-loader.

62
00:04:11.499 --> 00:04:12.833
&gt;&gt; Biran Holt: So a pre-loader is the way

63
00:04:12.833 --> 00:04:14.900
of doing it with Webpack 1.

64
00:04:14.900 --> 00:04:18.796
And that went away and now this is the way
they do pre-loaders in Webpack 2, but

65
00:04:18.796 --> 00:04:27.539
that is a synonymous concept.
&gt;&gt; Biran Holt: Good

66
00:04:27.539 --> 00:04:31.443
question.
&gt;&gt; Biran Holt: In fact, if you look at

67
00:04:31.443 --> 00:04:34.245
the old version of this workshop,
you'll see that it is called a pre-loader.

68
00:04:38.430 --> 00:04:40.690
Cool, so-
&gt;&gt; Speaker 2: You need a change bar on

69
00:04:40.690 --> 00:04:42.680
that sucker right there.
&gt;&gt; Biran Holt: What's that?

70
00:04:42.680 --> 00:04:43.402
&gt;&gt; Speaker 2: A change bar.

71
00:04:43.402 --> 00:04:44.590
&gt;&gt; Biran Holt: Yeah.

72
00:04:44.590 --> 00:04:47.680
[LAUGH] Cool.

73
00:04:47.680 --> 00:04:51.326
So now we're going to do the dev server,
Webpack dev server.

74
00:04:51.326 --> 00:04:53.950
This is gonna take it even one step
further than what we're doing here

75
00:04:53.950 --> 00:04:55.040
with watch.

76
00:04:55.040 --> 00:04:59.020
That we're actually going to have
a Webpack kind of act as our dev

77
00:04:59.020 --> 00:05:00.550
server for us.

78
00:05:00.550 --> 00:05:04.980
And so if you have a back-end service,
like maybe you're talking to Python or

79
00:05:04.980 --> 00:05:08.280
Ruby, or something like that, this is
a really good way to set up your app.

80
00:05:08.280 --> 00:05:13.900
If you're running a note server, then
you probably don't, but that's okay too.

