WEBVTT

1
00:00:00.120 --> 00:00:03.584
Now, the next thing that I
wanna do is a little bit of

2
00:00:03.584 --> 00:00:07.220
trickery up here at the top with fonts and
font sizes.

3
00:00:07.220 --> 00:00:10.570
So I'm going to set up my type scale.

4
00:00:10.570 --> 00:00:15.388
I have actually demonstrated how to put
together this type scale now in several

5
00:00:15.388 --> 00:00:16.230
courses.

6
00:00:16.230 --> 00:00:19.339
What I'm going to do is I'm
gonna do a bunch of typing and

7
00:00:19.339 --> 00:00:24.569
then I will kind of explain to you what
exactly all of these things are doing.

8
00:00:24.569 --> 00:00:29.180
Basically, the broad arc of where we're
going is we're going to set up some

9
00:00:29.180 --> 00:00:30.509
numbers.

10
00:00:30.509 --> 00:00:34.969
One will be a base font size and
the other one is a scale.

11
00:00:34.969 --> 00:00:39.802
And as we scale things by multiplying
our scale number times the numbers that

12
00:00:39.802 --> 00:00:44.031
came before, we will create font
sizes that will be harmonious and

13
00:00:44.031 --> 00:00:46.688
make our graphic designers super happy.

14
00:00:46.688 --> 00:00:51.592
And it'll make us happy because it
will do the math for us automatically,

15
00:00:51.592 --> 00:00:56.038
and we can override our sizes just
by changing one number later on.

16
00:00:57.178 --> 00:01:02.280
So what I'm gonna do now is I'm going
to set up a variable called base-size.

17
00:01:03.390 --> 00:01:06.730
And I'm going to set this to
be something called 1rem.

18
00:01:06.730 --> 00:01:08.603
What is a rem?

19
00:01:08.603 --> 00:01:10.796
R-E-M.

20
00:01:10.796 --> 00:01:13.349
Gen Xers, what is R-E-M?

21
00:01:16.060 --> 00:01:17.570
Rapid eye movement.

22
00:01:17.570 --> 00:01:18.950
It's not rapid eye movement.

23
00:01:18.950 --> 00:01:22.889
It is not a band that rocked
down in the 80s and the 90s, no.

24
00:01:22.889 --> 00:01:28.419
In this case,
rem is root relative super helpful, right?

25
00:01:29.559 --> 00:01:31.806
What is an E-M?

26
00:01:33.902 --> 00:01:36.014
Anybody know?

27
00:01:36.014 --> 00:01:38.300
&gt;&gt; Is it referring to an space,
the width of an?

28
00:01:38.300 --> 00:01:43.992
&gt;&gt; Yes, it is the width of the letter m,
the letter m.

29
00:01:43.992 --> 00:01:46.608
And for
some fonts it's a very fat letter m, for

30
00:01:46.608 --> 00:01:50.808
some fonts it's a very skinny letter m,
but it's a relative type of space.

31
00:01:50.808 --> 00:01:55.315
Here we're making that relative to
the root of the document just like

32
00:01:55.315 --> 00:01:57.652
the root that we saw here, ha-ha.

33
00:01:57.652 --> 00:02:00.234
And so 1rem generally speaking,

34
00:02:00.234 --> 00:02:04.068
corresponds with 16 pixels in browsers,
okay?

35
00:02:04.068 --> 00:02:05.484
Why do we use rems?

36
00:02:06.724 --> 00:02:09.058
Why wouldn't we just say 16 pixels?

37
00:02:09.058 --> 00:02:11.753
&gt;&gt; Because whenever you change
the root it will affect

38
00:02:11.753 --> 00:02:13.098
&gt;&gt; Yes, because when we change

39
00:02:13.098 --> 00:02:16.724
the root then everything scales
up appropriately, right?

40
00:02:16.724 --> 00:02:20.294
And it works better for
accessibility purposes as well.

41
00:02:20.294 --> 00:02:24.850
So rems are generally a great
unit to use for our font sizes.

42
00:02:24.850 --> 00:02:28.867
Okay, so we have a base font size and
then we're going to have scale.

43
00:02:28.867 --> 00:02:33.817
And I'm gonna set this to be 1.2, later
once we get all the math in place, you're

44
00:02:33.817 --> 00:02:38.590
welcome to play around with this and see
how this changes our heading sizes here.

45
00:02:40.360 --> 00:02:47.261
Then what I'm going to do is I'm going
to set up an h6, a variable called h6,

46
00:02:47.261 --> 00:02:52.611
and I'm going to make this
equivalent to another variable.

47
00:02:56.074 --> 00:02:59.716
It may seem kind of weird to have
a variable equal to another variable, but

48
00:02:59.716 --> 00:03:02.739
hey, you used to do it in algebra too,
didn't you, right?

49
00:03:02.739 --> 00:03:05.294
You made one variable equal
to another variable, and

50
00:03:05.294 --> 00:03:09.189
this sometimes can become helpful
because base-size may change.

51
00:03:09.189 --> 00:03:11.039
And now h6 is gonna change and

52
00:03:11.039 --> 00:03:15.529
it's actually going to change
as we put in more sizes here.

53
00:03:15.529 --> 00:03:22.183
So if my h6 is a base-size, my h5 is,
we're gonna do a little bit of math.

54
00:03:22.183 --> 00:03:28.223
And math is done using
the calc here inside of CSS.

55
00:03:28.223 --> 00:03:32.463
So this calc with two parentheses and
a semicolon.

56
00:03:32.463 --> 00:03:36.387
Calc of course is calculation,
and CSS only knows addition,

57
00:03:36.387 --> 00:03:39.833
subtraction, multiplication, and division.

58
00:03:39.833 --> 00:03:41.876
That's it., that's all it knows.

59
00:03:41.876 --> 00:03:45.466
It is the most basic calculator
on the planet, okay?

60
00:03:45.466 --> 00:03:48.046
So only addition, subtraction,
multiplication, and division.

61
00:03:48.046 --> 00:03:51.576
So no exponents,
nothing whacked out and crazy.

62
00:03:51.576 --> 00:03:54.373
No calculus even though it looks like it.

63
00:03:54.373 --> 00:03:59.248
Okay, inside of calc,
what we're going to do is we're

64
00:03:59.248 --> 00:04:04.385
going to say our variable of h6, Right?

65
00:04:04.385 --> 00:04:08.935
Whatever size that is,
which we set down here, right?

66
00:04:08.935 --> 00:04:13.149
And we're gonna multiply that by var,

67
00:04:18.003 --> 00:04:19.965
Oops, I've got too many
parentheses in there.

68
00:04:22.791 --> 00:04:23.612
Sorry about that.

69
00:04:23.612 --> 00:04:29.385
Okay, var, h5.

70
00:04:29.385 --> 00:04:32.431
I'm sorry, wrong one, var scale.

71
00:04:32.431 --> 00:04:32.931
There we go.

72
00:04:34.241 --> 00:04:38.654
So we're gonna take our h6,
which was our base-size of 1 rem, and

73
00:04:38.654 --> 00:04:42.330
we're gonna multiply it by our scale,
which is 1.2.

74
00:04:42.330 --> 00:04:46.485
So what does that size
does that make our h5 now?

75
00:04:49.641 --> 00:04:50.976
&gt;&gt; 1.2 rems.

76
00:04:50.976 --> 00:04:55.096
&gt;&gt; 1.2 rems, awesome, okay?

77
00:04:55.096 --> 00:04:56.795
We're gonna continue this.

78
00:04:56.795 --> 00:05:01.322
I'm just gonna copy that line of code and
I'm going to make an h4.

79
00:05:05.219 --> 00:05:11.155
And here for my h4, I'm gonna take my
h5 value and multiply it by the scale.

80
00:05:11.155 --> 00:05:15.319
So we said h5 was 1.2.

81
00:05:15.319 --> 00:05:17.985
We're gonna multiply it by the scale,
which is 1.2.

82
00:05:17.985 --> 00:05:20.960
And we get?

83
00:05:20.960 --> 00:05:28.046
I know it's really early for math, but
it's like 12 times 12, 1.44, right?

84
00:05:28.046 --> 00:05:33.062
Okay, and by expressing these in these
complicated looking math equations,

85
00:05:33.062 --> 00:05:38.078
this is gonna allow us later to go back
and change just the value of base-size or

86
00:05:38.078 --> 00:05:43.489
scale and affect all of these font
sizes at the same time, makes sense?

87
00:05:43.489 --> 00:05:46.973
Okay, so let's continue on here.

88
00:05:51.731 --> 00:05:57.712
So we're gonna have our h3,
which is gonna be our h4 times the scale.

89
00:06:01.292 --> 00:06:07.717
We're gonna have our h2,
which is our h3 times the scale.

90
00:06:09.237 --> 00:06:16.515
And we're going to have our h1,
which is our h2 times the scale.

91
00:06:19.841 --> 00:06:25.222
And so you can see the impact of that
right here on our headings, okay?

92
00:06:25.222 --> 00:06:26.138
Yes.

93
00:06:26.138 --> 00:06:31.077
&gt;&gt; If you create a typo here,
which seems very possible

94
00:06:31.077 --> 00:06:35.344
when writing all these nested parentheses,

95
00:06:35.344 --> 00:06:39.547
are you gonna be alerted to that problem?

96
00:06:39.547 --> 00:06:41.949
&gt;&gt; [CROSSTALK] Yeah, not necessarily.

97
00:06:41.949 --> 00:06:46.569
One of the things you can do here in
CodePen is there is a little down

98
00:06:46.569 --> 00:06:49.509
arrow here, and you can say Analyze CSS,

99
00:06:49.509 --> 00:06:53.469
and that'll do a sort of
a basic syntax check on things.

100
00:06:53.469 --> 00:06:56.799
You might have seen my little
message come up there on the top.

101
00:06:56.799 --> 00:07:00.889
Let's just say that I have left off that.

102
00:07:03.239 --> 00:07:04.256
Let's see what it does.

103
00:07:04.256 --> 00:07:08.186
Analyze CSS, it actually is
very happy with that as well,

104
00:07:08.186 --> 00:07:10.846
[LAUGH] even though that means nothing.

105
00:07:13.306 --> 00:07:15.136
Let me try making a better error.

106
00:07:16.716 --> 00:07:20.546
Let's call it font-fam,
which is not a thing, okay?

107
00:07:20.546 --> 00:07:25.173
So now, if I go through and
analyze my CSS It will flag that,

108
00:07:25.173 --> 00:07:28.886
it didn't know what font-fam is,
all right?

109
00:07:31.446 --> 00:07:32.406
So that's helpful.

110
00:07:33.756 --> 00:07:37.747
And so that will help pick out
some of those syntax mistakes and

111
00:07:37.747 --> 00:07:41.680
the other thing is the format
is also really helpful as well.

112
00:07:41.680 --> 00:07:45.880
Because that will go through and put in
all of your indents and everything else,

113
00:07:45.880 --> 00:07:47.017
make it look pretty.

