WEBVTT

1
00:00:00.270 --> 00:00:03.790
&gt;&gt; Jason Pamental: Another couple little
details that I have here that you can take

2
00:00:03.790 --> 00:00:09.400
a look at is playing around
with the coloring version.

3
00:00:09.400 --> 00:00:13.060
So this is something that quite often

4
00:00:13.060 --> 00:00:17.320
when you switch around that figure
group relationship with color.

5
00:00:17.320 --> 00:00:20.740
If you don't do anything with text grade,

6
00:00:20.740 --> 00:00:24.980
sometimes things can get
a little bit harder to read.

7
00:00:24.980 --> 00:00:29.546
So, often times by flipping that around
you actually want to play around it

8
00:00:29.546 --> 00:00:39.260
a little bit with the text grade so that,
&gt;&gt; Jason Pamental: There we go.

9
00:00:39.260 --> 00:00:42.670
So when I add the text grading,

10
00:00:42.670 --> 00:00:46.180
you can see it sort of increases
that contrast just a little bit.

11
00:00:46.180 --> 00:00:50.497
And I think I've sort of forced
the grade in the inverse mode,

12
00:00:50.497 --> 00:00:56.074
because without the text grade then this
all can tend to be a little bit spindly.

13
00:00:56.074 --> 00:01:00.474
The text doesn't really have enough
contrast to stand apart from

14
00:01:00.474 --> 00:01:01.690
the background.

15
00:01:01.690 --> 00:01:04.350
But that's all stuff that's
really easy to change.

16
00:01:04.350 --> 00:01:06.969
Let me take a look at what
that looks like in the CSS.

17
00:01:18.917 --> 00:01:20.241
&gt;&gt; Jason Pamental: So, that little

18
00:01:20.241 --> 00:01:23.458
JavaScript toggle, all it does is add or

19
00:01:23.458 --> 00:01:27.600
remove a class of inverse
on the HTML element.

20
00:01:27.600 --> 00:01:32.510
So what I've done is here,
when the inverse

21
00:01:32.510 --> 00:01:36.420
class is present it just changes
the background color and the text color.

22
00:01:36.420 --> 00:01:38.880
But it does a couple of things here,

23
00:01:40.100 --> 00:01:44.470
it changes the text grade when I
have the inverse class present.

24
00:01:45.670 --> 00:01:52.440
And what's also worth pointing out is
how this stuff is actually written out.

25
00:01:52.440 --> 00:01:58.060
So I wanna actually get into more detail
here cuz this is where we start to

26
00:01:58.060 --> 00:02:02.630
make good use of CSS variables outside
just the calculations for scale.

27
00:02:05.220 --> 00:02:08.480
One of the things that I
had mentioned early on

28
00:02:08.480 --> 00:02:12.330
is when you have the font
variation settings, and

29
00:02:12.330 --> 00:02:17.990
you write them all out with static values,
you have to rewrite the whole string.

30
00:02:17.990 --> 00:02:23.503
So if we go back to
a slide where I have that,

31
00:02:30.030 --> 00:02:32.256
&gt;&gt; Jason Pamental: Here, so in this slide,

32
00:02:32.256 --> 00:02:37.559
my font variations settings
would a width an italic value or

33
00:02:37.559 --> 00:02:42.757
optical sizing,
if you wanna change one of those values,

34
00:02:42.757 --> 00:02:46.720
you have to rewrite the whole string.

35
00:02:46.720 --> 00:02:49.890
So when you wanna do things
like just change the weight.

36
00:02:50.930 --> 00:02:54.810
Or like if somebody's hovering something
and you want to actually just increase

37
00:02:54.810 --> 00:02:58.290
the weight of the text, or something like
that, you have to rewrite this whole

38
00:02:58.290 --> 00:03:01.340
string every time and
that could be really cumbersome.

39
00:03:01.340 --> 00:03:06.260
And what I realized was this is
another instance where CSS variables

40
00:03:06.260 --> 00:03:09.470
can really come into play and
be really handy.

41
00:03:09.470 --> 00:03:17.969
So the first thing that I do up here,
&gt;&gt; Jason Pamental: When I

42
00:03:17.969 --> 00:03:19.850
write these things out.

43
00:03:19.850 --> 00:03:22.400
So this looks a little bit crazy.

44
00:03:22.400 --> 00:03:27.190
But for any element where
I'm gonna change the text

45
00:03:27.190 --> 00:03:32.390
size, I create this baseline declaration.

46
00:03:32.390 --> 00:03:36.920
Now this typeface, the FF Meta,
only has weight and italics.

47
00:03:38.140 --> 00:03:42.920
But I just define the font family,
font, weight, and style normal, so

48
00:03:42.920 --> 00:03:46.270
that way browsers don't try and
fake bold a heading.

49
00:03:46.270 --> 00:03:49.220
That's something that browsers will
do is try to set the size to bold

50
00:03:49.220 --> 00:03:53.170
if they think you're suppose to have it
even if we're specifying a font weight.

51
00:03:54.460 --> 00:03:58.344
And then, set the base font
variation settings of weight and

52
00:03:58.344 --> 00:04:00.830
italics using those CSS variables.

53
00:04:00.830 --> 00:04:03.100
I don't have to do anything else.

54
00:04:03.100 --> 00:04:07.270
But now, at any point where
I want to change the weight,

55
00:04:07.270 --> 00:04:12.560
all I have to do is re-assign the variable
and scope it to that selector.

56
00:04:12.560 --> 00:04:19.700
So that makes it really easy for me to do
things like down here for the heading.

57
00:04:22.450 --> 00:04:26.440
All I'm doing is changing text weight,
the variable assignment.

58
00:04:26.440 --> 00:04:31.350
So, whatever is applied to an h1,
just change that one value.

59
00:04:31.350 --> 00:04:35.052
So, it makes it much simpler while
rewriting much smaller code.

60
00:04:35.052 --> 00:04:40.918
And now, if I wanna take that whole
stack and change the base weight for

61
00:04:40.918 --> 00:04:47.530
everything in a little chunk of code
that I put in a widget in a side bar.

62
00:04:47.530 --> 00:04:52.444
I could scope sidebar widget font
weight change that one value,

63
00:04:52.444 --> 00:04:57.140
it'll impact everything
that's scoped inside it.

64
00:04:57.140 --> 00:05:01.130
So, it really makes it useful and
portable, especially in a design system,

65
00:05:01.130 --> 00:05:03.700
for you to have all of
this stuff encapsulated.

66
00:05:03.700 --> 00:05:08.180
And wherever you place that widget you
could have some CSS that redefines

67
00:05:08.180 --> 00:05:12.390
just that one variable,
that one aspect that you wanna change.

68
00:05:12.390 --> 00:05:17.410
And it will affect everything that's
encapsulated in that one object.

69
00:05:17.410 --> 00:05:22.217
So using CSS variables this way
is really in a way letting you

70
00:05:22.217 --> 00:05:27.043
theme these different elements,
and write way less code.

71
00:05:27.043 --> 00:05:30.220
Because you don't have to rewrite
all of these declarations.

72
00:05:30.220 --> 00:05:32.950
All you have to do is just
reassign that one thing.

73
00:05:34.070 --> 00:05:39.240
So you can see when I get down
into some of these things.

74
00:05:39.240 --> 00:05:45.420
All I'm doing is setting text italic
here further down in some of these

75
00:05:45.420 --> 00:05:50.560
other elements, like the block quote.

76
00:05:52.080 --> 00:05:53.640
Just changing text weight.

77
00:05:53.640 --> 00:05:57.090
So the paragraph inside the block quote
gets a difference text weight calculation

78
00:05:58.150 --> 00:06:03.160
an Italic value, citation gets
something a little different.

79
00:06:03.160 --> 00:06:07.190
So again, all I'm doing, I'm never
rewriting that font variation settings.

80
00:06:07.190 --> 00:06:10.372
I've done that once in the entire file,
and

81
00:06:10.372 --> 00:06:14.854
just applied all the elements
that I want it to be relevant to.

82
00:06:14.854 --> 00:06:19.530
And then the whole rest of the file, all
I've got to do is just redefine variables.

83
00:06:19.530 --> 00:06:21.600
So it really makes it much, much simpler.

