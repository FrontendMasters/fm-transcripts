WEBVTT

1
00:00:00.050 --> 00:00:05.090
&gt;&gt; Jason Pamental: So the notion of
progressive enhancement is creating a good

2
00:00:05.090 --> 00:00:09.850
baseline experience for
any device, any user, any browser.

3
00:00:09.850 --> 00:00:11.540
Everything else is an enhancement.

4
00:00:11.540 --> 00:00:17.180
So the core experience is the HTML
document, that's really the basis.

5
00:00:17.180 --> 00:00:20.120
So no styles whatsoever, that's the core.

6
00:00:20.120 --> 00:00:22.630
Is it marked up semantically correctly?

7
00:00:22.630 --> 00:00:25.480
So, do you have things
in a sensible order?

8
00:00:25.480 --> 00:00:27.740
If you were to turn off the stylesheet and

9
00:00:27.740 --> 00:00:31.260
load it on your phone, that's kind
of the litmus test right there.

10
00:00:31.260 --> 00:00:34.794
If you can read the page and you can
get the content, and you can understand

11
00:00:34.794 --> 00:00:38.556
the hierarchy of headings to give you an
idea of what you should be looking at and

12
00:00:38.556 --> 00:00:41.761
what's more important than something else,
that's the basis.

13
00:00:41.761 --> 00:00:43.820
That's the baseline, right there.

14
00:00:43.820 --> 00:00:47.450
So, notice I said that it's
the HTML without anything else.

15
00:00:47.450 --> 00:00:51.720
So, where does that leave things
that are entirely driven and

16
00:00:51.720 --> 00:00:52.850
delivered by JavaScript?

17
00:00:54.700 --> 00:00:56.080
Nowhere.

18
00:00:56.080 --> 00:01:01.515
And again, I'm not trying to dig on
JavaScript at all here, especially

19
00:01:01.515 --> 00:01:07.858
not in Mark's house cuz I think he'd get
pretty upset with me, but it is important.

20
00:01:07.858 --> 00:01:14.520
gov.uk, about 1% of the users don't
get JavaScript, they don't know why.

21
00:01:14.520 --> 00:01:18.546
Maybe 0.3% have actively turned it off,
the rest of them?

22
00:01:18.546 --> 00:01:21.410
Somewhere along the line
the delivery failed.

23
00:01:21.410 --> 00:01:27.388
So if the gov.uk site required that
the JavaScript be present in order

24
00:01:27.388 --> 00:01:33.893
to function, they would not be serving
literally millions of people a day.

25
00:01:33.893 --> 00:01:37.685
I mean, it's a small percentage
of a really, really big number,

26
00:01:37.685 --> 00:01:42.630
the people that go to the gov.uk site,
it's still a very large number of users.

27
00:01:42.630 --> 00:01:46.770
So the whole premise of progressive
enhancement is that you're delivering

28
00:01:46.770 --> 00:01:50.170
something that will still function,
everything else is an enhancement.

29
00:01:50.170 --> 00:01:56.190
So CSS is an enhancement to make
the layout better, start to add more

30
00:01:56.190 --> 00:02:00.330
definition and hierarchy and structure
to the way things layout on the page.

31
00:02:00.330 --> 00:02:02.460
The fonts are another enhancement.

32
00:02:02.460 --> 00:02:06.970
So that, the CSS,
should be there to style things and

33
00:02:06.970 --> 00:02:11.694
create greater levels of
more intentional hierarchy.

34
00:02:11.694 --> 00:02:14.302
But then the font itself
coming in is another

35
00:02:14.302 --> 00:02:17.755
enhancement that will add
a little bit more tone of voice,

36
00:02:17.755 --> 00:02:23.000
a little bit more brand recognition,
a little bit more emotional appeal.

37
00:02:23.000 --> 00:02:28.640
So, what we want to make sure
when we are adding in our fonts,

38
00:02:28.640 --> 00:02:33.240
notice the first line is
just linking to the CSS.

39
00:02:33.240 --> 00:02:35.800
So that could be linking
out to Google Web Fonts,

40
00:02:35.800 --> 00:02:40.620
it could be linking to Typekit, it could
be linking to fonts.com, doesn't matter.

41
00:02:40.620 --> 00:02:42.990
First thing is you're
linking to a style sheet.

42
00:02:44.020 --> 00:02:45.920
It's not dependent upon JavaScript.

43
00:02:45.920 --> 00:02:49.310
The stuff that comes after
is another enhancement.

44
00:02:49.310 --> 00:02:54.060
So, in this case, we're going to be
using Bram Stein's Font Face Observer,

45
00:02:54.060 --> 00:02:58.670
which is a really great JavaScript library
that manages the loading process for us.

46
00:02:58.670 --> 00:03:04.200
But it's all based on, first, you load
it with CSS, that's the first link.

47
00:03:04.200 --> 00:03:07.650
And then JavaScript will handle
that process asynchronously,

48
00:03:07.650 --> 00:03:09.940
if JavaScript is working.

49
00:03:09.940 --> 00:03:14.260
So that's the interesting
little layer on top of that.

50
00:03:14.260 --> 00:03:19.181
And looking down at what's
happening in those first few lines

51
00:03:19.181 --> 00:03:23.353
of JavaScript, first,
we've called for the CSS.

52
00:03:23.353 --> 00:03:27.536
And then as it starts to get in here,
we're going to be adding and

53
00:03:27.536 --> 00:03:31.873
removing some classes that will
allow our CSS to tie into whether or

54
00:03:31.873 --> 00:03:34.049
not those web fonts have loaded.

55
00:03:35.070 --> 00:03:39.900
And that's using the font loading API,
that's at the browser level, but

56
00:03:39.900 --> 00:03:42.080
it's also using session storage.

57
00:03:42.080 --> 00:03:44.301
So there's a weird little
thing that Chrome does.

58
00:03:44.301 --> 00:03:46.119
Even if a font is in cache,

59
00:03:46.119 --> 00:03:51.530
it's probably still going to repaint
the screen one page to the next.

60
00:03:51.530 --> 00:03:53.430
This completely avoids that.

61
00:03:53.430 --> 00:03:58.010
So, it's one simple little thing that
gets rid of this really annoying bug,

62
00:03:58.010 --> 00:04:01.743
where even after a subsequent
page loads the content comes in,

63
00:04:01.743 --> 00:04:06.060
then it redraws the whole screen in
order to flip it over to the web fonts.

64
00:04:06.060 --> 00:04:10.147
For whatever reason, instead of having
it go look at the browser cache,

65
00:04:10.147 --> 00:04:12.660
using session storage is faster.

66
00:04:12.660 --> 00:04:17.240
So, you don't see all of the code here,
but what it's doing is it's going through,

67
00:04:17.240 --> 00:04:21.940
and we're constructing a promise
that will list each of the different

68
00:04:21.940 --> 00:04:26.700
fonts that are being loaded, and
it will check if they have been loaded,

69
00:04:26.700 --> 00:04:31.470
it'll set that session storage variable,
and it just works every time.

70
00:04:31.470 --> 00:04:35.740
So it really dramatically speeds up
the shift from content loading and

71
00:04:35.740 --> 00:04:37.990
content now in the web font itself.

72
00:04:37.990 --> 00:04:40.210
In some cases it becomes
totally imperceptible.

73
00:04:42.010 --> 00:04:44.290
Again, this is the important part here.

74
00:04:44.290 --> 00:04:47.410
We're backwards compatible and
we are future friendly

75
00:04:47.410 --> 00:04:51.800
by using that link to the CSS, and
then adding everything else beyond that.

76
00:04:53.270 --> 00:04:56.540
There are two things that you have
to remember when you link to CSS,

77
00:04:56.540 --> 00:04:59.760
it's a blocking request.

78
00:04:59.760 --> 00:05:00.970
When you link to JavaScript,

79
00:05:00.970 --> 00:05:05.550
unless you do something specifically,
that is likewise a blocking request.

80
00:05:05.550 --> 00:05:10.360
So in the life cycle of that page,
the HTML is downloaded, then it starts to

81
00:05:10.360 --> 00:05:14.720
parse through the DOM and it looks for
external assets that it needs to go get.

82
00:05:14.720 --> 00:05:18.540
It's gonna find the CSS,
you want that CSS to come in.

83
00:05:18.540 --> 00:05:22.640
You want it to process all of that CSS
before it starts rendering the rest of

84
00:05:22.640 --> 00:05:25.500
the page, and
there's a few good reasons for that.

85
00:05:25.500 --> 00:05:31.060
But JavaScript, in most cases, if it is
enhancing what's going on on the page,

86
00:05:31.060 --> 00:05:36.230
it's okay to either have some things
load asynchronously or deferred.

87
00:05:36.230 --> 00:05:38.860
Depends on the order in which
you need them to process.

88
00:05:38.860 --> 00:05:40.970
So I'm not gonna get too deeply into that,

89
00:05:40.970 --> 00:05:45.810
but you have those two main choices when
you're adding JavaScript to a page to

90
00:05:45.810 --> 00:05:48.920
decide, is it okay if this
is an isolated thing?

91
00:05:48.920 --> 00:05:52.092
And it just goes off and
does its thing and then it starts to work.

92
00:05:52.092 --> 00:05:54.280
Or, is it a dependency?

93
00:05:54.280 --> 00:05:57.340
I need to have jQuery
load before this plugin.

94
00:05:57.340 --> 00:06:00.900
You can defer them both, and
it starts dealing with them

95
00:06:00.900 --> 00:06:04.860
after it has drawn the page,
then it will go get the JavaScript.

