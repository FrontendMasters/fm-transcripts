WEBVTT

1
00:00:00.030 --> 00:00:02.790
&gt;&gt; Jason Pamental: I'm going to dig
a little bit more into some examples and

2
00:00:02.790 --> 00:00:05.470
details about responsive typography.

3
00:00:05.470 --> 00:00:08.093
And then we'll be able to start and
flip over and

4
00:00:08.093 --> 00:00:10.334
look at some of the sample pages as we go.

5
00:00:10.334 --> 00:00:13.890
And then we're gonna take
a look at variable fonts, and

6
00:00:13.890 --> 00:00:16.700
that's going to sort of
take us up to lunch.

7
00:00:17.860 --> 00:00:21.390
So I went through these earlier.

8
00:00:21.390 --> 00:00:23.920
Now we're gonna go into
a little bit more detail.

9
00:00:23.920 --> 00:00:28.903
So this is sort of the core tenets
of what I think about when I

10
00:00:28.903 --> 00:00:31.488
say responsive typography.

11
00:00:31.488 --> 00:00:34.220
So performance being the first one,

12
00:00:35.660 --> 00:00:40.180
part of performance is
simply making good choices.

13
00:00:40.180 --> 00:00:45.650
Making sure that when you're
choosing to use a given typeface or

14
00:00:45.650 --> 00:00:50.320
font, that you are only
loading what you really need.

15
00:00:50.320 --> 00:00:55.310
And that's been the hardest part about
dealing with typographic systems,

16
00:00:55.310 --> 00:01:00.400
is that in print, on a magazine cover,
you might end up using eight or ten or

17
00:01:00.400 --> 00:01:05.920
more different weights and variants of
a given typeface, or several typefaces.

18
00:01:05.920 --> 00:01:09.660
Where on the web,
if you want to load more than three or

19
00:01:09.660 --> 00:01:12.890
four, it's going to start
to become a real burden and

20
00:01:12.890 --> 00:01:15.940
it's going to really start to
slow down the user experience.

21
00:01:15.940 --> 00:01:19.960
So the first step is
to not add everything.

22
00:01:21.030 --> 00:01:22.765
You wanna make sure that
you load what you need.

23
00:01:22.765 --> 00:01:25.690
And so I've been using these terms,
typeface and font.

24
00:01:26.760 --> 00:01:30.030
Recently there's been a little
bit of a question on whether or

25
00:01:30.030 --> 00:01:31.350
not we need to draw the distinction.

26
00:01:31.350 --> 00:01:35.080
But I do think it's important
fo you to know what people mean.

27
00:01:35.080 --> 00:01:38.290
So Trade Gothic is a typeface.

28
00:01:38.290 --> 00:01:39.490
It's a family.

29
00:01:39.490 --> 00:01:44.310
It's got a range of widths,
a range of weights, there's italics.

30
00:01:44.310 --> 00:01:47.740
When I say bold, specifically,

31
00:01:47.740 --> 00:01:53.430
that is one instance of that typeface,
that's the font.

32
00:01:53.430 --> 00:01:54.970
And more specifically,

33
00:01:54.970 --> 00:01:58.922
that is actually a piece of software
that you're installing on your computer.

34
00:01:58.922 --> 00:02:04.210
Where if we were talking about metal,
then it would be the case full of

35
00:02:04.210 --> 00:02:07.880
metal formed letters
at that physical size.

36
00:02:07.880 --> 00:02:12.800
So in digital type,
that font can be a range of sizes.

37
00:02:12.800 --> 00:02:16.838
But it is just the bold, or
just the regular, or just the condensed.

38
00:02:19.173 --> 00:02:21.527
&gt;&gt; Jason Pamental: Every time
you add another one of these,

39
00:02:21.527 --> 00:02:24.140
you're adding more to the page load.

40
00:02:24.140 --> 00:02:28.888
And you're adding more at the point in
time that will most directly impact that

41
00:02:28.888 --> 00:02:30.200
person's user experience.

42
00:02:30.200 --> 00:02:31.641
So adding in, well,

43
00:02:31.641 --> 00:02:37.360
it's a whole other discussion about
how much JavaScript you're loading.

44
00:02:37.360 --> 00:02:39.170
I won't wade into that right now.

45
00:02:39.170 --> 00:02:43.480
But at least a lot of those things can be
managed a little bit more effectively and

46
00:02:43.480 --> 00:02:46.110
loaded asynchronously later.

47
00:02:46.110 --> 00:02:48.150
And the page can actually render.

48
00:02:48.150 --> 00:02:52.550
But in order to get the page up on screen,
have the content render and

49
00:02:52.550 --> 00:02:55.950
be in a usable state,
fonts are gonna be an issue.

50
00:02:55.950 --> 00:02:58.680
And you need to make sure that
you're loading them properly.

51
00:02:58.680 --> 00:03:03.465
So when I go into Typekit, and I made

52
00:03:03.465 --> 00:03:07.110
this screenshot a while ago, but their
interface hasn't changed all that much.

53
00:03:07.110 --> 00:03:10.360
When you go into Typekit,
and you create a kit,

54
00:03:10.360 --> 00:03:13.600
or if you're using Google Web Fonts and
you say I wanna use this font,

55
00:03:13.600 --> 00:03:17.510
and you start to check off all the
different weights that you want to use.

56
00:03:17.510 --> 00:03:23.880
If I check off all of them,
and this is for quarto slab,

57
00:03:23.880 --> 00:03:27.880
if I check off all the different
weights and variants, that's 450 K.

58
00:03:27.880 --> 00:03:31.950
That's a lot of stuff to be loading, and
there's some real question about whether

59
00:03:31.950 --> 00:03:34.560
or not I would actually
make use of all of those.

60
00:03:34.560 --> 00:03:38.600
I might like to, but
I probably could make do.

61
00:03:38.600 --> 00:03:43.580
And so as a designer,
my responsibility is the whole experience,

62
00:03:43.580 --> 00:03:47.050
not just what I think visually looks good.

63
00:03:47.050 --> 00:03:50.040
So instead I pare back.

64
00:03:50.040 --> 00:03:54.215
I use two different, a sort of
a demi-bold and a demi-bold italic, and

65
00:03:54.215 --> 00:03:58.580
then same thing for a book and
book-italic, so like a regular weight.

66
00:03:58.580 --> 00:04:03.110
That brings it down to 121k, so
that's a little bit more manageable.

67
00:04:03.110 --> 00:04:07.160
And one of the things to keep in mind
is that font assets are cacheable.

68
00:04:07.160 --> 00:04:11.500
So if you're handling it properly,
that's not going to result in a penalty or

69
00:04:11.500 --> 00:04:15.070
a double download from one
page view to the next.

70
00:04:15.070 --> 00:04:17.876
And there are ways that
you can mitigate some of,

71
00:04:17.876 --> 00:04:21.170
I think particularly Chrome
still has a weird behavior.

72
00:04:21.170 --> 00:04:21.983
Do you have a question?

73
00:04:21.983 --> 00:04:26.940
&gt;&gt; Student: Yeah, does the size impact
how long it'll take the font to load?

74
00:04:26.940 --> 00:04:30.774
Or will it actually slow down
the whole site depending on

75
00:04:30.774 --> 00:04:35.320
how big the font size is when
it's coming from a CDN like that?

76
00:04:35.320 --> 00:04:39.290
&gt;&gt; Jason Pamental: Well, the size of the
asset, it's just another asset that has to

77
00:04:39.290 --> 00:04:42.150
be downloaded in order to
render things correctly.

78
00:04:42.150 --> 00:04:46.503
So if you're loading fonts asynchronously,

79
00:04:46.503 --> 00:04:51.830
which you should do, then it's not gonna
slow down the page being rendered.

80
00:04:51.830 --> 00:04:56.520
But it is going to impact repaint,
once the web font has loaded.

81
00:04:56.520 --> 00:05:02.240
Now, doesn't matter whether it's coming
self-hosted from a CDN, from a service.

82
00:05:02.240 --> 00:05:05.870
One way or
another the asset has to get there.

83
00:05:05.870 --> 00:05:10.590
The bonus is, at least, if you're
using this stuff consistently across

84
00:05:10.590 --> 00:05:13.220
the website it gets downloaded once.

85
00:05:13.220 --> 00:05:17.760
Whereas if you think about that is
the same size of a JPEG that you've stuck

86
00:05:17.760 --> 00:05:21.920
in the header behind a bunch of
text covering up the whole screen,

87
00:05:21.920 --> 00:05:24.170
that's a different image every page.

88
00:05:24.170 --> 00:05:28.010
This at least is a reused thing,
so it only happens once.

