WEBVTT

1
00:00:00.000 --> 00:00:03.423
&gt;&gt; Jason Pamental: Anybody have
more questions about this,

2
00:00:03.423 --> 00:00:07.148
these few pages that
we've been looking at?

3
00:00:07.148 --> 00:00:12.108
&gt;&gt; Speaker 2: A little earlier you showed
a calculation to figure out what the font

4
00:00:12.108 --> 00:00:17.763
width would be, and then as you were
scrolling there were a whole bunch more,

5
00:00:17.763 --> 00:00:20.665
and I was just wondering if you could-
&gt;&gt; Jason Pamental: Sure.

6
00:00:20.665 --> 00:00:21.885
&gt;&gt; Speaker 2: Maybe walk
through one of those.

7
00:00:21.885 --> 00:00:23.683
&gt;&gt; Jason Pamental: Sure, absolutely.
&gt;&gt; Speaker 2: As far as what's happening,

8
00:00:23.683 --> 00:00:25.233
and why it's happening?

9
00:00:25.233 --> 00:00:27.547
&gt;&gt; Jason Pamental: And let's see.

10
00:00:32.748 --> 00:00:37.734
&gt;&gt; Jason Pamental: Well,
I'll do one of ones in this ff meta page,

11
00:00:37.734 --> 00:00:44.102
cuz I think this is probably clean but
not too overwhelming.

12
00:00:44.102 --> 00:00:48.862
Because with install var I'll
look at that one with you but

13
00:00:48.862 --> 00:00:52.264
that ones actually doing more stuff and so

14
00:00:52.264 --> 00:00:55.870
this might be a little
bit easier to follow.

15
00:00:57.320 --> 00:01:02.616
In looking at what we're doing with
the H1, the things that we want to vary

16
00:01:02.616 --> 00:01:07.913
are going to be the text weight making
sure that the italic is set properly,

17
00:01:07.913 --> 00:01:12.620
we are going to play around with
line height, and then we are also,

18
00:01:12.620 --> 00:01:16.604
no, those are the two things
we are going to calculate.

19
00:01:16.604 --> 00:01:20.390
So, this is a little bit
easier to kind of look at.

20
00:01:20.390 --> 00:01:25.542
And, the tool tips are a little
bit [LAUGH] If those could

21
00:01:25.542 --> 00:01:31.265
go away that would be awesome,
I'm sure that's a setting.

22
00:01:31.265 --> 00:01:36.090
So here's, similar to what we
were looking at in the slides.

23
00:01:36.090 --> 00:01:41.641
At the low end, we start with
the variable for the font size minimum.

24
00:01:41.641 --> 00:01:46.370
And at the high end font size max.

25
00:01:46.370 --> 00:01:48.755
So that's the easy part.

26
00:01:48.755 --> 00:01:54.078
Start out with the low end and then
whatever your largest break point is where

27
00:01:54.078 --> 00:01:59.940
you want it stop scaling, then that's
where you set it inside a media query.

28
00:01:59.940 --> 00:02:03.262
Stop at that maximum value.

29
00:02:03.262 --> 00:02:04.950
It's the point in the middle.

30
00:02:04.950 --> 00:02:08.679
As soon as we hit the first break point,
where you want font size to start

31
00:02:08.679 --> 00:02:11.367
changing, that's where
stuff starts to happen.

32
00:02:11.367 --> 00:02:14.100
For line height, here's what's happening.

33
00:02:14.100 --> 00:02:19.762
We've got, it's starting out with making

34
00:02:19.762 --> 00:02:24.821
that same calculation of line height.

35
00:02:24.821 --> 00:02:26.120
Time one m.

36
00:02:26.120 --> 00:02:31.447
Plus the line height
max minus the minimum.

37
00:02:31.447 --> 00:02:36.140
So it's only a calculation to
essentially find the midpoint.

38
00:02:36.140 --> 00:02:37.329
That's essentially what it's doing.

39
00:02:37.329 --> 00:02:38.502
You got the low end value and

40
00:02:38.502 --> 00:02:41.750
then you're taking the high end
value minus the low end value.

41
00:02:41.750 --> 00:02:47.513
So if it was five and ten,
like we had in that other example.

42
00:02:47.513 --> 00:02:52.458
It's taking the low end value,
which is five, and

43
00:02:52.458 --> 00:02:59.256
then the high end value minus the low
end value, so that's also five.

44
00:02:59.256 --> 00:03:02.724
And,
&gt;&gt; Jason Pamental: And

45
00:03:02.724 --> 00:03:08.126
then adding those things and
multiplying by 100 viewport units,

46
00:03:08.126 --> 00:03:13.446
and then it get's into playing
around with the break point values.

47
00:03:13.446 --> 00:03:15.686
I will be totally honest with you,

48
00:03:15.686 --> 00:03:20.644
I would have a very hard time explaining
to you every piece of these formula.

49
00:03:20.644 --> 00:03:23.710
That's why I'm so grateful for
Tim Brown for figuring it out.

50
00:03:23.710 --> 00:03:25.917
But effectively what this is doing,

51
00:03:25.917 --> 00:03:29.487
the hundred viewport with
units is like saying a 100%.

52
00:03:29.487 --> 00:03:34.416
And it's taking out a piece of
that which is a division based

53
00:03:34.416 --> 00:03:37.530
on the break point values.

54
00:03:37.530 --> 00:03:42.383
And that amount is always going to be
varying based on what does 100 viewport

55
00:03:42.383 --> 00:03:43.494
with units mean?

56
00:03:43.494 --> 00:03:45.800
With the width of this window.

57
00:03:45.800 --> 00:03:50.453
So that's the piece that makes
this sort of magic work is

58
00:03:50.453 --> 00:03:55.115
that the scalable value is
100 view port with units.

59
00:03:55.115 --> 00:04:00.340
Because that renders to a different number
of pixels every time you move the window.

60
00:04:00.340 --> 00:04:04.632
So that's what,
that multiplier is constantly changing.

61
00:04:04.632 --> 00:04:07.300
And being added to the low end of value.

62
00:04:07.300 --> 00:04:10.340
So that's essentially what's happening,

63
00:04:10.340 --> 00:04:15.700
is it's creating a scalable amount of zero
to the difference between the low and

64
00:04:15.700 --> 00:04:21.147
the high end value, based on a multiplier
of this scaling value of Window width.

65
00:04:21.147 --> 00:04:23.320
I mean,
that's effectively what it's doing.

66
00:04:23.320 --> 00:04:30.080
So 100 view port with units
translates to a pixel value.

67
00:04:30.080 --> 00:04:34.995
That's what the browser is doing with it,
so as that pixel value keeps changing and

68
00:04:34.995 --> 00:04:40.754
it goes from 400 to 500 to 600 to 1200 to
1600, that number is being swapped into

69
00:04:40.754 --> 00:04:45.140
this formula and it's then recalculating
what that font size should be.

70
00:04:46.180 --> 00:04:50.983
So for your daily use of this,
what you would need to know are what's

71
00:04:50.983 --> 00:04:55.620
the low end value you want,
what's the high end value you want and

72
00:04:55.620 --> 00:05:01.039
where are the two break points where
you want those calculations to happen.

73
00:05:01.039 --> 00:05:04.221
So just those four pieces of information
are the only things that you need

74
00:05:04.221 --> 00:05:05.520
to change.

75
00:05:05.520 --> 00:05:11.004
And so what I did was set up
a series of variables up here or

76
00:05:11.004 --> 00:05:15.440
I just kinda group them all together,
just so

77
00:05:15.440 --> 00:05:18.855
I can see them all at the same time.

78
00:05:18.855 --> 00:05:23.268
So, for the h1 my line height min and
max values,

79
00:05:23.268 --> 00:05:29.310
font size min and max values,
and then weight multipliers.

80
00:05:29.310 --> 00:05:34.126
So the other thing that's interesting
about working with a variable font

81
00:05:34.126 --> 00:05:38.242
this way is I actually am not
setting an explicit weight value,

82
00:05:38.242 --> 00:05:40.509
other than on the paragraph text.

83
00:05:40.509 --> 00:05:42.590
Everything else is a multiplier.

84
00:05:42.590 --> 00:05:44.236
So it's all proportional.

85
00:05:44.236 --> 00:05:49.533
If I go back and I change the font weight
of what my normal text is from 300 to 325,

86
00:05:49.533 --> 00:05:53.590
everything else is gonna
recalculate from there.

87
00:05:53.590 --> 00:05:58.698
So that's another sort of useful
thing about having everything

88
00:05:58.698 --> 00:06:02.963
based on this set of variables and
then multipliers.

89
00:06:02.963 --> 00:06:07.253
That makes it a little bit easier for me
to fine-tune things by just going in and

90
00:06:07.253 --> 00:06:11.070
changing a base weight or
changing how much I want it to vary.

91
00:06:11.070 --> 00:06:18.655
So in this case I have,
I've defined my text weight,

92
00:06:18.655 --> 00:06:23.557
my initial text weight is 350.

93
00:06:23.557 --> 00:06:28.000
And this is where I'm setting
the variable for my paragraph weight.

94
00:06:28.000 --> 00:06:29.690
It is set to the text weight.

95
00:06:30.970 --> 00:06:34.318
These are just multipliers, so

96
00:06:34.318 --> 00:06:38.658
If I go back down to that heading section,

97
00:06:38.658 --> 00:06:42.626
which I think is somewhere down here.

98
00:06:42.626 --> 00:06:44.298
H1, there we go.

99
00:06:44.298 --> 00:06:49.960
Text weight is I've taken my paragraph
weight times the multiplier.

100
00:06:49.960 --> 00:06:55.008
So, if I change with that paragraph
equates to then this is going to be

101
00:06:55.008 --> 00:06:59.969
multiplier based on that and
I can change those multipliers if I want

102
00:06:59.969 --> 00:07:05.104
based on break points so because what
I noticed is I can be more subtle,

103
00:07:05.104 --> 00:07:09.572
not only in text size, but
also in weight differentiation.

104
00:07:09.572 --> 00:07:11.940
On small screen to large.

105
00:07:11.940 --> 00:07:14.929
You need bold to stand out
a little bit more on a big screen,

106
00:07:14.929 --> 00:07:16.884
little bit more than you do on a small.

107
00:07:16.884 --> 00:07:18.028
So, that way,

108
00:07:18.028 --> 00:07:23.939
you can create more of these ranges to say
I want this value to shift a little bit.

109
00:07:24.940 --> 00:07:30.029
But only in this usage, so
going back to where these were

110
00:07:30.029 --> 00:07:35.998
defined I've got multipliers for
kinda small medium and large.

111
00:07:35.998 --> 00:07:40.754
That's just sort of a semantic name for
me to say in a medium break

112
00:07:40.754 --> 00:07:45.160
point I'm gonna shift my multiplier and
so if I wanted to and

113
00:07:45.160 --> 00:07:50.900
see here in the h2 I'm actually
changing that weight multiplier.

114
00:07:50.900 --> 00:07:55.582
So as the screen size changes
that weight is also changing.

115
00:07:55.582 --> 00:07:57.760
And so if I go back here.

116
00:07:58.950 --> 00:08:01.453
So this is an h2.

117
00:08:01.453 --> 00:08:03.461
And as this gets smaller,

118
00:08:03.461 --> 00:08:09.300
you'll see the weight of that is
actually getting a little bit less.

119
00:08:09.300 --> 00:08:14.244
Not a ton, but the advantage is,
at a smaller size, by having that slightly

120
00:08:14.244 --> 00:08:19.114
lighter weight, it keeps the shape of
the characters very open and clear,

121
00:08:19.114 --> 00:08:22.462
but still gives me the visual
emphasis that I need.

122
00:08:22.462 --> 00:08:27.940
So as it get physically bigger it can
support that heavier stroke weight.

123
00:08:27.940 --> 00:08:32.725
So you can see there I hope
this got a little bit heavier.

124
00:08:32.725 --> 00:08:36.565
The front weight just got
maybe a 100 value a little

125
00:08:36.565 --> 00:08:39.990
greater than it is at
this smaller shift value.

126
00:08:41.220 --> 00:08:45.892
And so it stands out nicely
at a physically bigger size.

127
00:08:45.892 --> 00:08:46.821
Does that make sense?

128
00:08:53.730 --> 00:08:57.716
&gt;&gt; Jason Pamental: We'll keep coming
back to this with a few different

129
00:08:57.716 --> 00:09:01.061
applications and a few different usages.

130
00:09:01.061 --> 00:09:06.100
One thing I will say is after I wrote
this the first time I've refined it

131
00:09:06.100 --> 00:09:11.567
a couple of times, but I've taken almost
the exact same CSS and brought it in

132
00:09:11.567 --> 00:09:17.481
to other projects and all I've really had
to do is start to change some variables.

133
00:09:17.481 --> 00:09:23.605
It has so far now, granted, this is
testing across eight different demos,

134
00:09:23.605 --> 00:09:26.678
it's not doing stuff in production.

135
00:09:26.678 --> 00:09:31.200
My site is gonna be the first production
site that I launch using those techniques.

136
00:09:31.200 --> 00:09:34.042
That's my job on the plane home tomorrow.

137
00:09:34.042 --> 00:09:38.783
But that's so far, it has been the most

138
00:09:38.783 --> 00:09:43.819
reusable framework that I've created.

139
00:09:43.819 --> 00:09:47.357
Because that's usually what happens
with a framework is it's great for

140
00:09:47.357 --> 00:09:51.417
this one thing that you're doing, but then
it becomes really rigid when you try and

141
00:09:51.417 --> 00:09:53.350
use it elsewhere.

142
00:09:53.350 --> 00:09:57.916
This so far to me has felt like it has
the right amount of flexibility without

143
00:09:57.916 --> 00:10:00.681
having to touch the really
crazy hard stuff.

144
00:10:00.681 --> 00:10:04.760
But it is behaving nicely across
the whole range of screen sizes.

145
00:10:05.800 --> 00:10:10.962
One second, I just want to put this up
on screen so you can actually see this

146
00:10:10.962 --> 00:10:16.706
in action, I need to, I did not get the
java script connected the right way, which

147
00:10:16.706 --> 00:10:21.951
I will have to update in the repository,
but this was just a way for people to

148
00:10:21.951 --> 00:10:27.315
see things in action kinda stacking
from the minimum to the maximum weight.

149
00:10:27.315 --> 00:10:30.010
That used to be going
in a looped animation.

150
00:10:31.590 --> 00:10:36.429
Loop and key frame animations in the web
are still horrible memory sucks,

151
00:10:36.429 --> 00:10:40.567
and will kill bowsers faster than
you could possibly imagine so

152
00:10:40.567 --> 00:10:44.002
If I left that running through two or
three cycles and

153
00:10:44.002 --> 00:10:49.335
about half the browsers on the market,
it would use 100% of your CPU cycles.

154
00:10:49.335 --> 00:10:50.460
I have no idea why.

155
00:10:50.460 --> 00:10:55.573
It's not really doing all that much, but
web animation is still a little bit weird,

156
00:10:55.573 --> 00:10:58.887
so that's why I set it to
basically use JavaScript to,

157
00:10:58.887 --> 00:11:01.786
time out after 4 seconds and
remove the class.

158
00:11:01.786 --> 00:11:04.780
So it'll animate a little bit and
then it'll just go back.

159
00:11:04.780 --> 00:11:10.109
But, you can take a look at the code, the
key frame animation is pretty interesting.

160
00:11:10.109 --> 00:11:15.281
And it's just a simple JavaScript with a
timer function that will remove the class.

161
00:11:15.281 --> 00:11:16.880
So hopefully those things will be useful.

