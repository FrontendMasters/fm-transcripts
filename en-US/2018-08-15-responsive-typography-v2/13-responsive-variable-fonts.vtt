WEBVTT

1
00:00:00.150 --> 00:00:01.700
&gt;&gt; Jason Pamental: Responsive type itself.

2
00:00:01.700 --> 00:00:05.210
I'm gonna talk a little
bit about variable fonts.

3
00:00:05.210 --> 00:00:07.900
So, September 12th, 2016,

4
00:00:07.900 --> 00:00:12.560
this was at the A Type Eye Conference,
which is the largest,

5
00:00:12.560 --> 00:00:16.730
sort of international conference for
the type and typography industry.

6
00:00:18.370 --> 00:00:23.050
Four companies got up and introduced an
evolution to the OpenType specification,

7
00:00:23.050 --> 00:00:26.500
OpenType 1.8, font variations.

8
00:00:26.500 --> 00:00:31.180
And it was Microsoft, Google, Apple and
Adobe, all worked on this together

9
00:00:31.180 --> 00:00:35.079
with input from Monotype and
many other individuals in the industry.

10
00:00:36.310 --> 00:00:40.930
That was an evolution of this
OpenType specification that included

11
00:00:40.930 --> 00:00:45.110
what I called different registered and
costumed axes of variation.

12
00:00:46.190 --> 00:00:50.640
And this was a big deal for
a couple of reasons,

13
00:00:50.640 --> 00:00:55.240
there had been two attempts at
creating some form of variable font.

14
00:00:55.240 --> 00:01:00.280
Before, multiple masters in the 90s and
a similar time frame true type GX where

15
00:01:00.280 --> 00:01:06.990
other attempts at creating a single
file that can act like many files.

16
00:01:06.990 --> 00:01:10.860
Variable fonts is the first
one that really worked.

17
00:01:10.860 --> 00:01:15.740
And it's also the first one to come about
when we have the web on which to use it.

18
00:01:15.740 --> 00:01:19.260
And this where I find the most
significant benefits.

19
00:01:19.260 --> 00:01:22.670
So rather than having all
of these separate files,

20
00:01:22.670 --> 00:01:24.840
it's all together in a single file.

21
00:01:26.290 --> 00:01:29.690
And you get all of these things together.

22
00:01:29.690 --> 00:01:32.530
All the different widths,
all the different weights.

23
00:01:32.530 --> 00:01:36.850
All the different x-heights,
if that's what somebody wants to create.

24
00:01:36.850 --> 00:01:41.080
There are a whole bunch of different
axes that you can play with

25
00:01:41.080 --> 00:01:45.480
if the type designer has exposed that and
build it into the typeface itself.

26
00:01:45.480 --> 00:01:48.050
So it's an important
thing to keep in mind.

27
00:01:48.050 --> 00:01:51.480
This is not stretching or
deforming a font.

28
00:01:51.480 --> 00:01:55.470
Itâ€™s actually only using what
has been deliberately put there

29
00:01:55.470 --> 00:01:56.960
by the typeface designer.

30
00:01:56.960 --> 00:02:03.150
So it gives you a fairly safe playground
in which to play with these values.

31
00:02:03.150 --> 00:02:04.318
You can also get slammed.

32
00:02:07.812 --> 00:02:10.029
&gt;&gt; Jason Pamental: Now,
the notion of registered axes.

33
00:02:11.450 --> 00:02:16.000
This is meant to map things back
to concepts that we already know.

34
00:02:16.000 --> 00:02:19.770
So there are a small number of
registered axes, things like weight.

35
00:02:19.770 --> 00:02:22.943
And you'll see, font weight,
that's kinda normal,

36
00:02:22.943 --> 00:02:25.248
that's something that we're used to.

37
00:02:25.248 --> 00:02:29.973
We're used to keywords, but we also
have those number values of 100 to 900,

38
00:02:29.973 --> 00:02:31.873
that's what's typical in CSS.

39
00:02:31.873 --> 00:02:39.380
What this allows us to do is vary
the weight numerically and animate it.

40
00:02:40.380 --> 00:02:43.090
So it actually gives you
everything along that range.

41
00:02:43.090 --> 00:02:45.270
And every typeface might have
a different set of values.

42
00:02:45.270 --> 00:02:47.750
One might go from 100 to 1000.

43
00:02:47.750 --> 00:02:50.600
Others might only go from 300 to 700.

44
00:02:50.600 --> 00:02:54.390
But whatever the designer wants
to expose is gonna work, and

45
00:02:54.390 --> 00:02:56.037
width works the same way.

46
00:02:56.037 --> 00:03:00.718
So font stretch has never been
particularly useful before now,

47
00:03:00.718 --> 00:03:05.312
it can actually be mapped to a true
variation from compressed or

48
00:03:05.312 --> 00:03:10.272
condensed all the way out to extend
it in the width of that typeface.

49
00:03:13.389 --> 00:03:17.540
&gt;&gt; Jason Pamental: Now, slant is
a little bit different than italic.

50
00:03:17.540 --> 00:03:20.546
Slant is often referred to as oblique.

51
00:03:20.546 --> 00:03:24.570
San Sarif typefaces are more often
going to have something like this,

52
00:03:24.570 --> 00:03:29.080
where there are no changes in
the letter form shapes just the angle.

53
00:03:29.080 --> 00:03:32.849
And so by being able to specify
that in a number of degrees,

54
00:03:33.860 --> 00:03:37.830
we could actually oblique
that text a specific amount.

55
00:03:37.830 --> 00:03:40.770
It doesn't always have to be all on or
all off, and

56
00:03:40.770 --> 00:03:42.740
you could also animate
the states in between.

57
00:03:44.340 --> 00:03:46.410
Italics is a little different.

58
00:03:46.410 --> 00:03:51.520
So we have font style oblique and
degrees, or font style normal or italic.

59
00:03:51.520 --> 00:03:53.120
This is either on or off.

60
00:03:53.120 --> 00:03:56.317
But if you pay attention to
the lower case a, in particular,

61
00:03:56.317 --> 00:04:00.600
when this shifts over to italic, you can
see that even the glyph changed itself.

62
00:04:00.600 --> 00:04:04.140
So the shape of the a is swapped out for
a totally different one.

63
00:04:05.680 --> 00:04:08.830
So that actually brings
up an important point.

64
00:04:08.830 --> 00:04:11.890
These axes don't have to be a continuum.

65
00:04:11.890 --> 00:04:15.580
They can either be on or
off or have steps in between.

66
00:04:15.580 --> 00:04:19.184
Again, however the typeface designer
has decided to make this work.

67
00:04:22.504 --> 00:04:26.860
&gt;&gt; Jason Pamental: Now optical size
is the fifth registered access.

68
00:04:26.860 --> 00:04:30.640
It also requires a little
bit more understanding.

69
00:04:30.640 --> 00:04:33.010
I'll get into this a little
bit more later on,

70
00:04:33.010 --> 00:04:37.720
but the main thing you want to
take away from here is this

71
00:04:37.720 --> 00:04:43.090
optical sizing is about appropriate for
the size at which it's being displayed.

72
00:04:43.090 --> 00:04:49.230
So you'll pay attention when I click
a button here, watch the thick and

73
00:04:49.230 --> 00:04:54.140
thin in the stroke contrast, as
the physical size of the type gets bigger.

74
00:04:56.150 --> 00:05:01.180
See how the strokes in the lowercase a and

75
00:05:01.180 --> 00:05:04.440
the n, and the connecting points
in the d or the crossbar in the H.

76
00:05:06.600 --> 00:05:09.380
See how much thicker that
is at the smaller size.

77
00:05:09.380 --> 00:05:13.230
That's intended to keep it readable
at a physically smaller size.

78
00:05:13.230 --> 00:05:17.374
So initially, when people were making
metal type they would do this so

79
00:05:17.374 --> 00:05:22.519
that when you're printing something on
a newspaper, the details don't disappear.

80
00:05:22.519 --> 00:05:27.152
And because there was finite limitations
to the actual technology of printing it,

81
00:05:27.152 --> 00:05:31.020
we have a similar consideration
with screens for phones.

82
00:05:31.020 --> 00:05:34.480
As it's a physically smaller size, you
wanna make sure that it's still sharp and

83
00:05:34.480 --> 00:05:36.670
crisp and
doesn't lose any of those fine details.

84
00:05:36.670 --> 00:05:40.140
So optical sizing is really useful there.

85
00:05:40.140 --> 00:05:45.000
But the interesting thing about this
format is that it's completely extensible.

86
00:05:45.000 --> 00:05:50.430
So a typeface designer can create
whatever axis they want, and

87
00:05:50.430 --> 00:05:55.410
as long as they expose it with
that four letter abbreviation,

88
00:05:55.410 --> 00:05:59.470
then expose a number range or whatever
values they want to allow people to

89
00:05:59.470 --> 00:06:02.520
supply, you can do all
kinds of other things.

90
00:06:02.520 --> 00:06:05.510
So one of the more common ones is grade.

91
00:06:05.510 --> 00:06:10.620
And there's a notion in text that
increases the contrast between the text

92
00:06:10.620 --> 00:06:14.810
and the background without changing
the physical space that the text occupies.

93
00:06:14.810 --> 00:06:20.080
So if you think about ambient light or
people with low vision,

94
00:06:20.080 --> 00:06:23.540
being able to increase the grade of the
text creates something that's a little bit

95
00:06:23.540 --> 00:06:26.820
more readable or stands apart from
the background a little bit more.

96
00:06:26.820 --> 00:06:30.130
Without doing something really obvious or
reflowing.

97
00:06:30.130 --> 00:06:32.880
That could also be really
useful in UI animation.

98
00:06:32.880 --> 00:06:36.760
So if you wanna make something
bolder without changing the physical

99
00:06:36.760 --> 00:06:40.780
characteristics of all the stuff
around it, it makes it really easy.

100
00:06:42.840 --> 00:06:46.340
One of the touches that I was
showing you earlier as I was

101
00:06:46.340 --> 00:06:51.360
resizing one of those pages, were
things about ascenders and descenders.

102
00:06:51.360 --> 00:06:56.950
Watch what happens with the axes
that we have here in Amstelvar.

103
00:06:56.950 --> 00:07:00.466
We can control the height and depth
of those ascenders and descenders, so

104
00:07:00.466 --> 00:07:02.450
when we want to set text closer together,

105
00:07:02.450 --> 00:07:05.985
we don't get those collisions between
the upper and lowercase letters.

106
00:07:09.113 --> 00:07:13.692
&gt;&gt; Jason Pamental: Now, this is more of
a demonstration of how ridiculous you

107
00:07:13.692 --> 00:07:14.600
can be.

108
00:07:14.600 --> 00:07:18.656
Deck of R is in no way intended
to be a production typeface, but

109
00:07:18.656 --> 00:07:22.796
it does show you just how extreme
some of the variations can be.

110
00:07:22.796 --> 00:07:29.584
And while that may not be necessarily
readable, it's still regular text,

111
00:07:29.584 --> 00:07:35.620
that would still be read by
a screen reader, no problem at all.

112
00:07:35.620 --> 00:07:38.220
Or you could create
an accessibility setting where

113
00:07:38.220 --> 00:07:40.320
you might have something
that's very decorative, but

114
00:07:40.320 --> 00:07:42.600
if somebody has a hard time,
that might be able to click a button and

115
00:07:42.600 --> 00:07:47.590
then have it actually revert back to
something that's a bit more standard.

116
00:07:47.590 --> 00:07:51.360
So things like this actually
challenge the notion of

117
00:07:51.360 --> 00:07:54.000
what typography is in the first place.

118
00:07:54.000 --> 00:07:58.790
So it's not just setting text on screen
and making things in understandable size

119
00:07:58.790 --> 00:08:05.300
hierarchies, it's actually how much do you
want to change that experience over time?

120
00:08:05.300 --> 00:08:11.870
How much do you want to create that
emotional tie that actually can change?

121
00:08:11.870 --> 00:08:14.660
There's another typeface,
I'll have to look for a link to it.

122
00:08:14.660 --> 00:08:20.960
That was shared with me by another foundry
where the access that they've created

123
00:08:20.960 --> 00:08:27.030
was time, so that you could along the axis
and animated, it would draw the letters.

124
00:08:27.030 --> 00:08:30.830
That was really interesting and
you could either draw them all at once or

125
00:08:30.830 --> 00:08:32.460
draw them one after another.

126
00:08:32.460 --> 00:08:37.330
So in animating that, actually having a
message that kind of draws itself out, but

127
00:08:37.330 --> 00:08:40.590
the text is actually all there
instantly for a screen reader or

128
00:08:40.590 --> 00:08:43.760
for SEO purposes,
that's pretty remarkable.

129
00:08:43.760 --> 00:08:47.030
So you can create that effect without
compromising the things that make

130
00:08:47.030 --> 00:08:47.910
the web, the web.

131
00:08:50.720 --> 00:08:53.000
&gt;&gt; Jason Pamental: This is
what it looks like inside.

132
00:08:53.000 --> 00:08:55.450
So this is sort of the exploded view.

133
00:08:55.450 --> 00:09:01.460
So if you see the most defined shape, is
the regular dimensions of the character.

134
00:09:01.460 --> 00:09:05.530
And the way the font format works,
is it stores deltas, or

135
00:09:05.530 --> 00:09:09.100
point differences from
one extreme to the other.

136
00:09:09.100 --> 00:09:13.950
So you can see that those points
move up and out for a wider,

137
00:09:13.950 --> 00:09:17.160
even heavier stroke, and also thin.

138
00:09:17.160 --> 00:09:21.122
So if you kinda look closely at this,
there's the very thinnest,

139
00:09:21.122 --> 00:09:24.539
narrowest shape as well as
the narrowest fattest shape.

140
00:09:24.539 --> 00:09:28.750
And all those points are stored
inside the font file itself.

141
00:09:28.750 --> 00:09:31.972
And the browser can then interpolate
between the placement of those points.

142
00:09:31.972 --> 00:09:35.560
So that way as you slide the long or
with throw away access,

143
00:09:35.560 --> 00:09:40.029
you have these points to go by and
figure out how to draw that character and

144
00:09:40.029 --> 00:09:43.193
maintain the integrity of
the shapes themselves.

145
00:09:43.193 --> 00:09:47.937
Now it's not without this complication,
it is tricky to say at least,

146
00:09:47.937 --> 00:09:52.838
it's a lot of work for the type designers
but it creates a typeface that can

147
00:09:52.838 --> 00:09:57.540
be use in infinitely more ways than
anything currently in existence.

148
00:09:57.540 --> 00:10:01.690
So instead of there being
18 different weights for

149
00:10:01.690 --> 00:10:05.030
something, you really have hundreds.

150
00:10:05.030 --> 00:10:08.090
You can explore whatever
in-between state that you want.

151
00:10:08.090 --> 00:10:12.280
And it allows us to modulate
the weight of headings

152
00:10:12.280 --> 00:10:14.990
that's appropriate to
the size of the text.

153
00:10:14.990 --> 00:10:21.510
So instead of only having one heavier
weight that we use at 18 pixels,

154
00:10:21.510 --> 00:10:26.620
24 pixels, 36, 48 and
it gets sort of increasingly muddy or

155
00:10:26.620 --> 00:10:29.260
increasingly spindly as it gets bigger.

156
00:10:29.260 --> 00:10:32.220
We could have slightly different
weights all along and that way,

157
00:10:32.220 --> 00:10:36.605
you'd have greater clarity and greater
expressiveness by being able to dial in to

158
00:10:36.605 --> 00:10:39.734
exactly what you want to establish
that typographic hierarchy.

