WEBVTT

1
00:00:00.030 --> 00:00:03.970
&gt;&gt; Jason Pamental: Again,
bring coming back to implementing type.

2
00:00:06.070 --> 00:00:08.480
Fout or flash of unstyled text,

3
00:00:10.260 --> 00:00:12.860
my favorite way of describing
it is this is a feature.

4
00:00:12.860 --> 00:00:14.380
It's not a bug.

5
00:00:14.380 --> 00:00:18.499
What we want to do, again, is make sure
that the content shows up there on

6
00:00:18.499 --> 00:00:21.416
the left,
as opposed to what happens on the right.

7
00:00:21.416 --> 00:00:25.959
A little bit of history here,
when web fonts were first implemented,

8
00:00:25.959 --> 00:00:28.500
they would always show the fall back and

9
00:00:28.500 --> 00:00:32.230
then flip over to showing
the web font once it loaded.

10
00:00:32.230 --> 00:00:35.430
Safari very quickly changed and

11
00:00:35.430 --> 00:00:38.839
decided they wouldn't show anything
until the web font loaded.

12
00:00:40.170 --> 00:00:44.520
And when I mean they wouldn't show
anything, there was no time out.

13
00:00:44.520 --> 00:00:48.180
So if that web font never loaded,
you never got any content.

14
00:00:48.180 --> 00:00:51.440
That was really frustrating,
there are very few ways around that,

15
00:00:51.440 --> 00:00:54.210
other than things like
we're gonna look at today.

16
00:00:54.210 --> 00:00:59.190
More recently font display has
been adopted by most browsers so

17
00:00:59.190 --> 00:01:04.880
that in the @font-face declaration you
can say font display swap if you like.

18
00:01:04.880 --> 00:01:09.480
Which means as soon as it sees this, it
will say okay, I will go to the fall back

19
00:01:09.480 --> 00:01:12.980
font, render stuff and
then swap it out when the web font loads.

20
00:01:12.980 --> 00:01:15.670
That in my mind,
is the most desired behavior.

21
00:01:15.670 --> 00:01:20.000
That's what I usually lean towards so
that we get the content on screen.

22
00:01:20.000 --> 00:01:21.670
And then once the web font loads,

23
00:01:21.670 --> 00:01:25.210
it kind of comes into the look
that we would expect.

24
00:01:25.210 --> 00:01:29.690
But you'll notice that that blocking
request with the CSS waiting for

25
00:01:29.690 --> 00:01:32.650
the web fonts was even blocking
this photo from loading.

26
00:01:32.650 --> 00:01:36.727
So, there's a whole lot of other
unintended consequences that you end up

27
00:01:36.727 --> 00:01:38.713
with by not managing that process.

28
00:01:38.713 --> 00:01:44.480
And it's been possible since 2010, through
various different font loading libraries.

29
00:01:45.550 --> 00:01:49.623
So, the whole key are these classes.

30
00:01:49.623 --> 00:01:52.681
WF for web font inactive or active.

31
00:01:52.681 --> 00:01:56.579
And those are not native to the browser,
they just happens to be what enough people

32
00:01:56.579 --> 00:01:58.800
started to use that
it's relatively common.

33
00:01:58.800 --> 00:02:01.620
So, I kinda try and standardize on that.

34
00:02:01.620 --> 00:02:03.869
But that's what Typekit
will inject in your page,

35
00:02:03.869 --> 00:02:06.292
that's what fonts.com will
now inject in your page.

36
00:02:06.292 --> 00:02:09.217
So that way if you are using
something from a service or

37
00:02:09.217 --> 00:02:12.868
you are working on stuff on your own,
it sort of stays consistent.

38
00:02:12.868 --> 00:02:17.318
And that way, you will always have
a class on the html element that you

39
00:02:17.318 --> 00:02:22.020
can look at and scope your CSS to style
things when they get to the screen.

40
00:02:23.510 --> 00:02:28.160
So, now we can do something really simple
like if Trade Gothic is the web font that

41
00:02:28.160 --> 00:02:35.250
I want, if I then include right below it,
WF inactive body.

42
00:02:35.250 --> 00:02:38.820
And I just specify Helvetica and
Arial instead of Trade Gothic.

43
00:02:38.820 --> 00:02:43.380
Whenever that class is present, it
renders the content on screen instantly.

44
00:02:43.380 --> 00:02:46.680
And what we can also do if we like is add

45
00:02:46.680 --> 00:02:51.210
styling to that inactive
class description, so

46
00:02:51.210 --> 00:02:56.140
that we can play around with letter
spacing, line height, font size, margins.

47
00:02:56.140 --> 00:02:58.050
So that we can minimize the re-flow, and

48
00:02:58.050 --> 00:03:01.670
I have a good example that we'll
look at today of seeing this action.

49
00:03:01.670 --> 00:03:04.166
It takes a little bit of extra work,

50
00:03:04.166 --> 00:03:10.171
because now you're tweaking styles across
break points with these non-web fonts.

51
00:03:10.171 --> 00:03:13.123
But the benefit that you
get out of that is a nearly

52
00:03:13.123 --> 00:03:17.230
seamless experience where none
of the content moves around.

53
00:03:17.230 --> 00:03:19.770
So, when things load up initially and

54
00:03:19.770 --> 00:03:24.320
the web fonts haven't shown up yet,
the design integrity is still maintained.

55
00:03:24.320 --> 00:03:28.820
As long as you have a fall back
font that is even relatively close,

56
00:03:28.820 --> 00:03:31.260
you can get it to not reflow.

57
00:03:32.710 --> 00:03:35.670
Obviously if you're using like a script
typeface or something handwritten,

58
00:03:35.670 --> 00:03:40.530
it's a little bit harder, but
I will come back to looking at this.

59
00:03:42.900 --> 00:03:48.439
Watch that square on the left with
the heading back to some conference.

60
00:03:50.010 --> 00:03:53.540
It comes into that hand written font but
it still doesn't really reflow or

61
00:03:53.540 --> 00:03:55.350
move the design around that much.

62
00:03:55.350 --> 00:03:59.540
So it is possible to just get
the metrics close enough,

63
00:03:59.540 --> 00:04:03.810
so you can imagine it like a jpeg
coming in that's all rough and blurry.

64
00:04:03.810 --> 00:04:06.690
And then it gets more and more clear.

65
00:04:06.690 --> 00:04:08.290
It's a similar experience.

66
00:04:08.290 --> 00:04:11.830
And in a lot of testing
with users that I've done,

67
00:04:11.830 --> 00:04:13.690
sometimes they just don't even notice.

68
00:04:13.690 --> 00:04:14.790
They just tune it out.

69
00:04:14.790 --> 00:04:18.580
As long as things stay in the same place
and they can interact with the content,

70
00:04:18.580 --> 00:04:21.440
they don't even really notice that it
went from one font to another one.

71
00:04:23.360 --> 00:04:27.400
I'm not sure what that says about the font
choices, but we'll leave that one alone.

72
00:04:27.400 --> 00:04:33.030
So I'm stressing this last point
because it really has been possible,

73
00:04:33.030 --> 00:04:36.730
since less than a year
after Typekit launched, for

74
00:04:36.730 --> 00:04:41.410
us to manage this process, and it's
still not a commonly done thing today.

75
00:04:41.410 --> 00:04:44.140
And that's really disappointing.

76
00:04:44.140 --> 00:04:47.220
It clearly means that I'm not
popular enough on the web, and

77
00:04:47.220 --> 00:04:52.310
nobody is listening to me enough to
make this part of their normal workflow.

78
00:04:52.310 --> 00:04:54.170
Make me feel better about myself.

79
00:04:54.170 --> 00:04:55.720
Build this into your process.

80
00:04:55.720 --> 00:04:57.370
I'm giving you a starting point.

81
00:04:57.370 --> 00:05:02.970
It's going to make your site and
your application so much better for users.

82
00:05:02.970 --> 00:05:06.700
Especially when we're dealing
with everything about online and

83
00:05:06.700 --> 00:05:09.240
offline, network latency.

84
00:05:09.240 --> 00:05:14.050
All of things things are impacted and
made better when you have these kinds of

85
00:05:14.050 --> 00:05:18.080
fall back tuning in place so that people
get a good experience right away.

86
00:05:19.700 --> 00:05:22.020
So here's a little bit
more of this in action.

87
00:05:23.240 --> 00:05:23.890
So you can see,

88
00:05:23.890 --> 00:05:27.868
I'm gonna start over again.
&gt;&gt; Jason Pamental: This is it,

89
00:05:27.868 --> 00:05:30.014
what it should look like
with the web fonts loaded.

90
00:05:32.062 --> 00:05:32.927
&gt;&gt; Jason Pamental: Now this is,

91
00:05:32.927 --> 00:05:37.290
the web fonts have not loaded,
but they're not corrected.

92
00:05:37.290 --> 00:05:39.640
And what you'll note is,

93
00:05:39.640 --> 00:05:44.810
look at the spacing of A Whale of a Tale,
that main heading, and

94
00:05:44.810 --> 00:05:50.830
Moby's Trip up top, and sort of the line
breaks down here in the body copy.

95
00:05:50.830 --> 00:05:53.134
Now, we've added a little
bit of correction to it.

96
00:05:53.134 --> 00:05:57.810
Things kinda tightened up a little bit and
then finally the web fonts load.

97
00:05:57.810 --> 00:05:59.590
Nothing's moved around.

98
00:05:59.590 --> 00:06:02.310
So, all of the content is
stayed in the same place,

99
00:06:02.310 --> 00:06:05.740
the navigation hasn't broken or
wrapped in a weird way.

100
00:06:05.740 --> 00:06:08.270
Things aren't jumping around.

101
00:06:08.270 --> 00:06:13.610
Because of small corrections that only
have to get done once, and really,

102
00:06:13.610 --> 00:06:18.230
the truth is, you only have to worry
about whatever's gonna be in view.

103
00:06:19.240 --> 00:06:24.597
So make sure the navigation is okay,
the main level headings,

104
00:06:24.597 --> 00:06:28.753
and the paragraph size and
wrap is close enough.

105
00:06:28.753 --> 00:06:32.469
Because really things are gonna
load before people start to scroll.

106
00:06:32.469 --> 00:06:37.070
You're really just worried about how does
that first screen full of content look.

107
00:06:37.070 --> 00:06:39.340
So you don't have to get
really deeply into it,

108
00:06:39.340 --> 00:06:42.310
you've got to customize three or
four different elements

109
00:06:42.310 --> 00:06:46.530
to make sure that that loading process
is gonna give us smooth experience.

