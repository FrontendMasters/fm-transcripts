WEBVTT

1
00:00:00.230 --> 00:00:01.872
&gt;&gt; Scott Moss: We're
talking about the types.

2
00:00:01.872 --> 00:00:04.290
We're talking about the queries,
mutations.

3
00:00:04.290 --> 00:00:06.920
The only other thing
that I wanna show you is

4
00:00:06.920 --> 00:00:09.450
a special type which is
called an input type.

5
00:00:10.530 --> 00:00:14.168
So, you have types which are really cool.

6
00:00:14.168 --> 00:00:17.768
But, in order to be able to accept
arguments on like a mutation,

7
00:00:17.768 --> 00:00:19.605
you need to create input types.

8
00:00:19.605 --> 00:00:23.220
Which are the exact same things as types,
literally the exact same thing except for

9
00:00:23.220 --> 00:00:26.680
the own users inputs or
arguments, that's it.

10
00:00:26.680 --> 00:00:29.670
You create an exact and the same way
with the difference of just one word.

11
00:00:29.670 --> 00:00:35.370
So for instance, if I wanted to
make a newCat who has this syntax,

12
00:00:35.370 --> 00:00:39.060
what I will do is, one, I know I need
to create a mutation for anewCat.

13
00:00:39.060 --> 00:00:43.700
So what I'll do is I'll come down
here to Mutation and I create newCat.

14
00:00:43.700 --> 00:00:46.090
I know it will return to newCat,
I've got that part.

15
00:00:46.090 --> 00:00:49.300
But, I need to pass

16
00:00:49.300 --> 00:00:53.180
the fields of the newCat up to
the server somehow and then use them.

17
00:00:53.180 --> 00:00:54.480
So, like, how would I do that?

18
00:00:54.480 --> 00:00:57.170
Well, the way I would do that
is I need to accept arguments.

19
00:00:57.170 --> 00:01:01.451
So, I'd have to say, okay,
this newCat takes arguments.

20
00:01:01.451 --> 00:01:03.110
And the syntax follows like this.

21
00:01:03.110 --> 00:01:05.320
The first part is,
you can call this whatever you want,

22
00:01:05.320 --> 00:01:06.580
just like a JavaScript function.

23
00:01:06.580 --> 00:01:07.606
This is an argument place for it.

24
00:01:07.606 --> 00:01:09.020
You can call it whatever you want.

25
00:01:09.020 --> 00:01:13.980
I like to use input, that way inside of my
resolvers I always can use argument.input,

26
00:01:13.980 --> 00:01:15.720
and I always use that.

27
00:01:15.720 --> 00:01:17.550
So I just like to use input for
everything.

28
00:01:17.550 --> 00:01:20.230
And then, use a semicolon,
you have to give it a type.

29
00:01:20.230 --> 00:01:22.410
What is this input's type?

30
00:01:22.410 --> 00:01:24.830
And this is what I was saying,
you have to make an input type.

31
00:01:24.830 --> 00:01:28.655
So if we already have a type
called Cat that has a name,

32
00:01:28.655 --> 00:01:33.342
an age and bestFriends,
then I need to make an input type for Cat.

33
00:01:33.342 --> 00:01:36.844
And the way I could do that is
just type in the word input, and

34
00:01:36.844 --> 00:01:39.390
it's the same thing as creating a type.

35
00:01:39.390 --> 00:01:44.740
In this case, I also like to use the word
input for my input, so I'll say catInput.

36
00:01:44.740 --> 00:01:48.626
This is a thing that I like to do, so
I know that this is an input type and

37
00:01:48.626 --> 00:01:49.773
not a regular type.

38
00:01:51.320 --> 00:01:55.106
&gt;&gt; Scott Moss: So I'll say catInput for
this input type, and then I'll say,

39
00:01:55.106 --> 00:01:59.260
you can create a cat with a name,
just like the regular type up there.

40
00:02:01.068 --> 00:02:04.284
&gt;&gt; Scott Moss: You can create a Cat
that's an age, but it's required,

41
00:02:04.284 --> 00:02:06.980
because that's what it is up there.

42
00:02:06.980 --> 00:02:09.012
And then,
you also have to give me a bestFriend.

43
00:02:11.656 --> 00:02:13.021
&gt;&gt; Scott Moss: I was
gonna say best friend.

44
00:02:17.054 --> 00:02:21.580
&gt;&gt; Scott Moss: So now I just made
an input for the Cat called catInput.

45
00:02:21.580 --> 00:02:23.670
And now I can go down to my mutation and
say, all right, for

46
00:02:23.670 --> 00:02:30.040
this variable called input,
it must be the catInput type.

47
00:02:30.040 --> 00:02:30.927
I'm gonna make that required.

48
00:02:32.260 --> 00:02:34.380
&gt;&gt; Scott Moss: So
now if you wanna do mutation,

49
00:02:34.380 --> 00:02:38.148
you can pass up an object that
looks like this catInput and

50
00:02:38.148 --> 00:02:42.324
it will be accessible to you
inside of the resolver for newCat.

51
00:02:42.324 --> 00:02:45.636
And that's how you would pass an argument.

52
00:02:45.636 --> 00:02:48.850
So again, an input type is the same
thing as a type, except for

53
00:02:48.850 --> 00:02:51.050
it uses the word input, that's it.

54
00:02:51.050 --> 00:02:53.270
If it's the exact fields,
which in this case it is,

55
00:02:53.270 --> 00:02:54.946
you still couldn't put cat down here.

56
00:02:56.163 --> 00:02:57.680
&gt;&gt; Scott Moss: I couldn't put cat here.

57
00:02:57.680 --> 00:02:59.190
Yes, David?

58
00:02:59.190 --> 00:02:59.875
&gt;&gt; Speaker 2: What is newCat?

59
00:03:01.404 --> 00:03:04.050
&gt;&gt; Scott Moss: I'm sorry, you're right,
it should be cat, there we go.

