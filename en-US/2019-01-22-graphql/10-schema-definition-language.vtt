WEBVTT

1
00:00:00.120 --> 00:00:02.890
&gt;&gt; Scott Moss: So now we're gonna talk
about creating schemas with SDL, and

2
00:00:02.890 --> 00:00:04.450
we'll talk about what that is.

3
00:00:04.450 --> 00:00:09.700
But there's basically many ways to
create GraphQL schemas, SDL is the best.

4
00:00:09.700 --> 00:00:11.060
So what is SDL?

5
00:00:11.060 --> 00:00:13.950
It's basically short for
Schema Definition Language.

6
00:00:13.950 --> 00:00:17.360
So if we go back to our code,
you're already doing that.

7
00:00:17.360 --> 00:00:21.100
This string right here that you
were writing in, that's SDL.

8
00:00:21.100 --> 00:00:22.830
That's the Schema Definition Language.

9
00:00:22.830 --> 00:00:25.710
You are literally creating a schema
inside of this string right here.

10
00:00:25.710 --> 00:00:28.980
And this is the preferred
way to write a schema.

11
00:00:28.980 --> 00:00:30.990
And I'm not saying preferred
as in this is what I prefer,

12
00:00:30.990 --> 00:00:32.590
this is what the community prefers.

13
00:00:32.590 --> 00:00:35.110
This is what the documentation uses now.

14
00:00:35.110 --> 00:00:37.230
This was about a year and a half ago.

15
00:00:37.230 --> 00:00:41.870
The way you would have written
schemas in GraphQL was using objects.

16
00:00:41.870 --> 00:00:46.482
So you would use GraphQL.js
which still has these objects.

17
00:00:46.482 --> 00:00:51.490
And you would use objects and functions
to create schemas which offer some

18
00:00:51.490 --> 00:00:55.724
benefits as in they're pragmatic and
you can do execution and stuff like that.

19
00:00:55.724 --> 00:00:58.300
But they're really hard to
look at creating schemas with

20
00:00:58.300 --> 00:01:00.760
functions versus just
writing them purely as this.

21
00:01:00.760 --> 00:01:02.460
So this is the Schema Definition Language.

22
00:01:02.460 --> 00:01:05.630
And right now we're writing as a string
but we'll be writing in the file later.

23
00:01:07.280 --> 00:01:10.900
&gt;&gt; Speaker 2: So
those types are SDL types?

24
00:01:10.900 --> 00:01:12.023
&gt;&gt; Scott Moss: Yes.
&gt;&gt; Speaker 2: String and ints and

25
00:01:12.023 --> 00:01:12.635
so forth.

26
00:01:12.635 --> 00:01:19.440
&gt;&gt; Scott Moss: Yep, this entire string
right here is a valid GraphQL Schema.

27
00:01:19.440 --> 00:01:23.938
And using the words like type and
schema in query,

28
00:01:23.938 --> 00:01:29.650
these are constants or reserve names
in the Schema Definition Language.

29
00:01:29.650 --> 00:01:33.380
&gt;&gt; Speaker 2: Like name String,
so the string is an SDL type?

30
00:01:33.380 --> 00:01:34.465
&gt;&gt; Scott Moss: This type right here?

31
00:01:34.465 --> 00:01:35.498
&gt;&gt; Speaker 2: GraphQL specific.

32
00:01:35.498 --> 00:01:37.685
&gt;&gt; Scott Moss: Yeah,
we'll get to these types, yes.

33
00:01:37.685 --> 00:01:40.967
Yeah, these are what we
call scholar types, yeah.

34
00:01:40.967 --> 00:01:43.740
So we'll get to the scholar types
in a minute, good question.

35
00:01:49.656 --> 00:01:50.637
&gt;&gt; Scott Moss: So like I said, yeah,

36
00:01:50.637 --> 00:01:54.720
instead of using functions, we use the
string syntax cuz it's just way better.

37
00:01:54.720 --> 00:01:58.430
And the sweet thing about using the string
syntax is that you can transform it to be

38
00:01:58.430 --> 00:02:03.460
whatever you want later on,
because GraphQL is a language, basically.

39
00:02:03.460 --> 00:02:06.390
You can convert it down to an AST
using the tools that are provided, so

40
00:02:06.390 --> 00:02:07.270
you can do whatever you want.

41
00:02:07.270 --> 00:02:09.240
This is why the tooling is so legit,

42
00:02:09.240 --> 00:02:14.960
cuz if you have an AST that's representing
a schema, I mean, I could take this and

43
00:02:14.960 --> 00:02:17.360
I could probably generate some
front-end components if I wanted to.

44
00:02:17.360 --> 00:02:18.680
I could generate some forms,

45
00:02:18.680 --> 00:02:22.860
I can generate all types of stuff
based off this, if I had an AST.

46
00:02:22.860 --> 00:02:29.969
So transforming this to something other
than a string is very trivial in GraphQL.

47
00:02:29.969 --> 00:02:31.990
And like I said, it's much easier to read.

48
00:02:33.820 --> 00:02:35.815
It can be composable and
that's what we're going to be doing.

49
00:02:35.815 --> 00:02:39.190
We're gonna be having multiple schema
files and we can pose them together.

50
00:02:39.190 --> 00:02:41.470
And we'll see some different
techniques on how to do that.

51
00:02:41.470 --> 00:02:44.141
That way we're not putting our scheme
in just one place and one file,

52
00:02:44.141 --> 00:02:45.660
which can be kind of gross.

53
00:02:45.660 --> 00:02:48.615
And we could co-locate them depending
on where they need to be for

54
00:02:48.615 --> 00:02:51.410
database models and stuff like that.

55
00:02:51.410 --> 00:02:55.240
And so far the Schema Definition Language
is supported by pretty much every tool

56
00:02:55.240 --> 00:02:57.340
that I've every used in GraphQL.

57
00:02:57.340 --> 00:03:02.220
That's just the preferred way now because
the JavaScript implementation of GraphQL

58
00:03:02.220 --> 00:03:04.910
which is GraphQL.js just
has amazing support for

59
00:03:04.910 --> 00:03:07.000
transformations across GraphQL now.

60
00:03:07.000 --> 00:03:08.789
And it's pretty much supported everywhere.

