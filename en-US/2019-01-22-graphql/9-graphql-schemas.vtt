WEBVTT

1
00:00:00.070 --> 00:00:01.136
&gt;&gt; Scott Moss: Creating schemas.

2
00:00:01.136 --> 00:00:02.430
So you kinda just created one but

3
00:00:02.430 --> 00:00:06.840
now we're really about to create a schema,
and get into the nitty gritty of things.

4
00:00:08.080 --> 00:00:11.610
Okay, so
we already have a database schema.

5
00:00:11.610 --> 00:00:13.290
So, why don't we just use that?

6
00:00:13.290 --> 00:00:17.000
Like, why do we need another schema
if we already have a database schema?

7
00:00:17.000 --> 00:00:20.480
It kind of doesn't really make any
sense to have two different schemas.

8
00:00:20.480 --> 00:00:24.650
Well, basically graphical schema
strictly defines what resources,

9
00:00:24.650 --> 00:00:26.900
how they're relayed, and
how a client can consume them.

10
00:00:27.930 --> 00:00:31.140
So, when you compare that to a day to
day schema, a day to day schema is like

11
00:00:31.140 --> 00:00:35.460
I have no idea, I don't even
know what API I'm being used on,

12
00:00:35.460 --> 00:00:39.390
if I'm even being used on an API, this is
just how you can save data in a database.

13
00:00:39.390 --> 00:00:44.480
Graphical schema, is more about
how a client can retrieve data,

14
00:00:44.480 --> 00:00:45.600
how the data relates to each other.

15
00:00:47.528 --> 00:00:50.960
&gt;&gt; Scott Moss: So like I said, DB Schema
is keeping data consistent when entering

16
00:00:50.960 --> 00:00:54.763
our database, whereas the GraphQL
schema is for defining what resources

17
00:00:54.763 --> 00:00:58.770
are available for querying, how they
relate and then how you can query them.

18
00:01:00.910 --> 00:01:03.600
Both schemas can be the same or not.

19
00:01:04.760 --> 00:01:08.520
Basically what I'm saying is, if you
already have some database models that you

20
00:01:08.520 --> 00:01:11.523
created, and you try to create
a graph to a server on top of that.

21
00:01:11.523 --> 00:01:14.839
Yeah, database schemas and models
are a really good starting point for

22
00:01:14.839 --> 00:01:18.374
your GraphQL schemas, as far as modeling
your data and what they look like,

23
00:01:18.374 --> 00:01:21.192
you can totally do that they
are really good starting point,

24
00:01:21.192 --> 00:01:24.423
but that doesn't mean it's going to
be one for one exactly the same.

25
00:01:24.423 --> 00:01:27.449
And you'll find out why,
because one GraphQL is super powerful and

26
00:01:27.449 --> 00:01:30.316
allows you to virtualize a lot of
different things that you may or

27
00:01:30.316 --> 00:01:33.204
may not be able to do in your database or
maybe you don't want to.

28
00:01:33.204 --> 00:01:35.940
And then two, there is probably some
private stuff that you just don't want

29
00:01:35.940 --> 00:01:37.130
exposed to your GraphQL.

30
00:01:37.130 --> 00:01:40.533
So, you can update into what ever you want
but they are a good starting point as far

31
00:01:40.533 --> 00:01:43.909
as modeling your GraphQL schemas, because
you can use your day to day schemas.

32
00:01:46.742 --> 00:01:50.278
&gt;&gt; Scott Moss: So the GraphQL schema
sits in front of your database queries,

33
00:01:50.278 --> 00:01:52.800
and it validates the incoming request.

34
00:01:52.800 --> 00:01:55.630
So like if we have the schemas
that we just created and

35
00:01:55.630 --> 00:01:59.070
a query comes in, that query gets

36
00:01:59.070 --> 00:02:03.820
validated against the schema that you
created before your database even runs.

37
00:02:03.820 --> 00:02:06.904
Before your resolvers even run,
before anything even runs.

38
00:02:06.904 --> 00:02:11.090
If that query is not valid against
that schema, nothing will execute.

39
00:02:11.090 --> 00:02:12.440
That's what GraphQL does.

40
00:02:12.440 --> 00:02:14.240
So, that's why it's a little
different than schema,

41
00:02:14.240 --> 00:02:18.660
because the validation is gonna happen
before the resolvers even execute.

42
00:02:18.660 --> 00:02:22.060
If the resolvers are executing,
that means that the query is valid.

43
00:02:22.060 --> 00:02:26.060
So, if you're getting an error before
your resolver is even happening,

44
00:02:26.060 --> 00:02:29.820
it's because it's an invalid query and
GraphQL will tell you where it's invalid,

45
00:02:29.820 --> 00:02:30.880
why it's invalid.

46
00:02:30.880 --> 00:02:36.393
And most of the time,
it's because it's just not formatted for

47
00:02:36.393 --> 00:02:39.364
the schema that it was created.

48
00:02:39.364 --> 00:02:42.100
&gt;&gt; Scott Moss: There are a bunch
of GraphQL tools out there,

49
00:02:42.100 --> 00:02:47.140
that literally create like full GraphQL
APIs, based off your database schemas.

50
00:02:47.140 --> 00:02:49.400
So literally,
if you already have a database out there,

51
00:02:49.400 --> 00:02:52.610
a postgres database,
a Mongo database that's got some schemas,

52
00:02:52.610 --> 00:02:56.500
there are tools out there that will
take those and generate a full API.

53
00:02:56.500 --> 00:02:58.670
That's exactly like
the schemas that you have.

54
00:02:58.670 --> 00:03:00.360
And there's tools that do the opposite.

55
00:03:00.360 --> 00:03:03.150
You give it a GraphQL schema and
it will create database models for you.

56
00:03:04.200 --> 00:03:07.120
So, there's this tons of
stuff out there that do that,

57
00:03:07.120 --> 00:03:09.620
because of how similar that they are.

58
00:03:09.620 --> 00:03:11.570
So, if you just wanna
spin up something quick,

59
00:03:11.570 --> 00:03:14.000
at the end of the course I can show
you what some of those tools are.

60
00:03:15.110 --> 00:03:18.330
But we're going to be doing everything
manual in this course the hard way.

