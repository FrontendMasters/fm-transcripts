WEBVTT

1
00:00:01.124 --> 00:00:02.461
&gt;&gt; Scott Moss: Dates.

2
00:00:02.461 --> 00:00:07.636
So, basically,
if you don't wanna use ints, floats, or

3
00:00:07.636 --> 00:00:13.030
strings for dates then come over
to Google, date scalar GQL.

4
00:00:14.050 --> 00:00:17.315
And I'm sure there's tons of them so
let's see,

5
00:00:17.315 --> 00:00:21.222
custom scalars, GraphQL,
I bet there's one right here.

6
00:00:21.222 --> 00:00:25.672
Data Scalar, yep,
there's literally example in

7
00:00:25.672 --> 00:00:31.060
the documentation of creating
a date scalar that you can use.

8
00:00:31.060 --> 00:00:35.830
So, basically, what you have to do is just
like we create resolvers for queries and

9
00:00:35.830 --> 00:00:39.388
types, and fields you have to
create a resolver for a scalar.

10
00:00:39.388 --> 00:00:42.979
So you can make a new scalar with this
syntax like saying scalar date then you

11
00:00:42.979 --> 00:00:46.945
just need to make a resolver for it using
the new graphqlscolortype from Graph QL.

12
00:00:46.945 --> 00:00:50.406
And, basically,
you just need to describe three functions.

13
00:00:50.406 --> 00:00:52.383
What happens when that value is parsed.

14
00:00:52.383 --> 00:00:54.746
What happens when that
value is serialized,

15
00:00:54.746 --> 00:00:56.617
like when it's sent to the client.

16
00:00:56.617 --> 00:01:00.880
And what happen when it's
literally parse from the AST.

17
00:01:00.880 --> 00:01:04.296
So once you define those three functions
then you now have a new scalar and

18
00:01:04.296 --> 00:01:06.372
this way you can create
any scalar you want.

19
00:01:06.372 --> 00:01:09.907
I mean, you could literally
create URL scalar, email scalar,

20
00:01:09.907 --> 00:01:14.040
you can do validations in here for
[INAUDIBLE], URLs, and emails.

21
00:01:14.040 --> 00:01:16.913
You can do whatever you want,
you can make whatever scalar you want and

22
00:01:16.913 --> 00:01:18.819
then you can use them in
your schema like that.

23
00:01:18.819 --> 00:01:21.503
So there's tons of packages like that,
but a date one is pretty simple,

24
00:01:21.503 --> 00:01:22.869
you can even copy and paste that one.

