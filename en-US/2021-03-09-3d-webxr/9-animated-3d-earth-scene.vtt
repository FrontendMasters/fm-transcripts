WEBVTT

1
00:00:00.000 --> 00:00:04.219
We've been working with
the online editors, but

2
00:00:04.219 --> 00:00:07.960
we have to run everything locally.

3
00:00:07.960 --> 00:00:12.704
So this is how we would start by importing

4
00:00:12.704 --> 00:00:17.308
as specific modules from Three.js and

5
00:00:17.308 --> 00:00:26.510
our Three.js paths that we are downloading
is listed on tsconfig file.

6
00:00:26.510 --> 00:00:31.667
It is also looking for some of the
Three.js's extra files, which is kind of

7
00:00:31.667 --> 00:00:37.250
confusing because they are part of
the examples, not part of the package.

8
00:00:37.250 --> 00:00:40.718
So I did add them for you.

9
00:00:40.718 --> 00:00:45.553
And if you look at our server,
we have a very simple

10
00:00:45.553 --> 00:00:51.079
Express Node.js server and
it is serving our folders for

11
00:00:51.079 --> 00:00:55.358
Three.js and extra folders of Three.js.

12
00:00:57.406 --> 00:01:02.472
And now I can type in npm run dev,

13
00:01:02.472 --> 00:01:07.916
which will run the type scripts and

14
00:01:07.916 --> 00:01:13.560
start our server at port 3000.

15
00:01:13.560 --> 00:01:17.835
So now if you go to your browser and

16
00:01:17.835 --> 00:01:21.960
type in localhost:3000,

17
00:01:21.960 --> 00:01:26.250
you should see what we have here.

18
00:01:27.280 --> 00:01:32.599
I wanted to create the same thing

19
00:01:32.599 --> 00:01:39.700
that we have in the Three.js editor here.

20
00:01:41.090 --> 00:01:47.795
So far what we have is
a canvas element most of time.

21
00:01:47.795 --> 00:01:53.335
The examples are creating a canvas
element and adding it to the HTML.

22
00:01:53.335 --> 00:01:58.437
I kind of think that it's
unnecessary because HTML is so

23
00:01:58.437 --> 00:02:03.009
much more performing and
it happens really fast.

24
00:02:03.009 --> 00:02:07.868
And having to run the JavaScript code to
add another canvas if that's the only

25
00:02:07.868 --> 00:02:11.694
thing that you're going to do
is kind of waste of the energy.

26
00:02:11.694 --> 00:02:17.942
So instead, I added to my HTML and

27
00:02:17.942 --> 00:02:24.200
then call it by getElementByID.

28
00:02:24.200 --> 00:02:27.960
We have the PerspectiveCamera with
the same settings and the Scene.

29
00:02:27.960 --> 00:02:30.074
Finally, we have the rendering.

30
00:02:30.074 --> 00:02:33.815
Let's talk about the antialias thing.

31
00:02:33.815 --> 00:02:39.173
This is what makes your 3D
models not very square like,

32
00:02:39.173 --> 00:02:46.135
not like minecraft, so basically it
smooths out the edges a little bit.

33
00:02:46.135 --> 00:02:52.001
And instead of adding a new canvas here,
we are saying the canvas

34
00:02:52.001 --> 00:02:57.009
that you will use is this one
that we selected earlier.

35
00:02:59.660 --> 00:03:06.309
And we have a SphereGeometry and
I use the radius,

36
00:03:06.309 --> 00:03:12.810
first thing is the radius
which is 0.5 units.

37
00:03:12.810 --> 00:03:18.564
And then this are the height and width
segments that we play with on the editor.

38
00:03:18.564 --> 00:03:23.749
After that we translate
the position of it and

39
00:03:23.749 --> 00:03:26.481
define our materials.

40
00:03:26.481 --> 00:03:31.883
So for our material too,
we were able to add wireframe

41
00:03:31.883 --> 00:03:36.940
on the editor,
we can also do the same thing here.

42
00:03:36.940 --> 00:03:41.774
So as you can see we do
have a lot of polygons,

43
00:03:41.774 --> 00:03:46.107
so we can actually maybe reduce those.

44
00:03:46.107 --> 00:03:52.340
So we were looking at
the antialiasing on our renderer.

45
00:03:52.340 --> 00:03:58.154
So antialiasing if we enable it,
that allows our models,

46
00:03:58.154 --> 00:04:02.795
renderer actually to
render less pixelated.

47
00:04:02.795 --> 00:04:06.860
So it will be less of the big squares and

48
00:04:06.860 --> 00:04:10.426
then smooth edges on the shapes.

49
00:04:10.426 --> 00:04:14.826
So we have the renderer with our
canvas that is already in our HTML.

50
00:04:14.826 --> 00:04:20.304
Now we have the SphereGeometry,
we are running our dev server,

51
00:04:20.304 --> 00:04:24.065
so we can go ahead and
see what is happening.

52
00:04:24.065 --> 00:04:28.384
So as you can see there's a lot
of vertices we have to, well,

53
00:04:28.384 --> 00:04:30.262
we don't need this much.

54
00:04:30.262 --> 00:04:34.946
So I'm going to lower
the number of segments,

55
00:04:37.805 --> 00:04:39.610
Maybe 14 here too.

56
00:04:42.388 --> 00:04:48.260
And when we refresh it, we should be
able to see less and still smooth edges.

57
00:04:48.260 --> 00:04:53.720
So this is good for our purposes.

58
00:04:53.720 --> 00:04:58.229
I'm going to comment out the wireframe.

59
00:04:58.229 --> 00:05:02.708
wireframe part is the part
that is rendering

60
00:05:02.708 --> 00:05:08.040
the polygons instead of
running a smooth material.

61
00:05:08.040 --> 00:05:11.974
Here I have a random color generator, so

62
00:05:11.974 --> 00:05:19.278
every time basically I refresh it,
we have a different color just for fun.

63
00:05:19.278 --> 00:05:27.602
And our earth Mesh includes this geometry
that we just created and material.

64
00:05:27.602 --> 00:05:32.101
We have two functions that we are running,
one of them is init function

65
00:05:32.101 --> 00:05:36.374
which we define all of the things
that are necessary for the scene,

66
00:05:36.374 --> 00:05:37.995
that will run just once.

67
00:05:37.995 --> 00:05:42.892
And the animate function, that's
the function that will run 60 frames per

68
00:05:42.892 --> 00:05:46.069
second and
we'll get to their definition below.

69
00:05:47.495 --> 00:05:52.427
First thing that we are setting for
the renderer, the PixelRatio,

70
00:05:52.427 --> 00:05:55.294
we are using the by devicePixelRatio.

71
00:05:55.294 --> 00:06:00.155
And we are setting the size to
fill up all of our screen with

72
00:06:00.155 --> 00:06:04.628
setting it to window.innerWdth and
innerHeight.

73
00:06:06.181 --> 00:06:13.538
And we are adding a new event listener
when our maybe screen is resized,

74
00:06:13.538 --> 00:06:18.688
then we have to take
the windows new innerWidth and

75
00:06:18.688 --> 00:06:22.135
innerHeight and re-render it.

76
00:06:22.135 --> 00:06:27.691
If we don't do that,
we will have some distorted objects

77
00:06:27.691 --> 00:06:32.917
instead of the actual objects
that we first created.

78
00:06:34.860 --> 00:06:39.953
I would like to keep
the camera on 0,0,0 because

79
00:06:39.953 --> 00:06:47.375
whenever you are on a device like HoloLens
or maybe some other devices also.

80
00:06:47.375 --> 00:06:52.272
The person who is wearing it is
the camera and they are the 0,0,0,

81
00:06:52.272 --> 00:06:53.687
they are the start.

82
00:06:53.687 --> 00:06:57.880
So everything that you create, you have to
move it a little bit for people to see it.

83
00:06:58.970 --> 00:07:03.800
Because of that, I'm moving it on
the z axis and adding it to our scene.

84
00:07:05.130 --> 00:07:11.514
onWindowResize, again we are setting
the aspect ratio of the camera and

85
00:07:11.514 --> 00:07:15.503
then we are updating
the projection matrix.

86
00:07:15.503 --> 00:07:20.096
This is going to define where
the things are going to be,

87
00:07:20.096 --> 00:07:25.683
how they're going to be projected
with using the new aspect ratio.

88
00:07:25.683 --> 00:07:30.971
And setting this renderer.setSize
window.innerWidth and

89
00:07:30.971 --> 00:07:36.263
height and render it again so
all of these changes will apply.

90
00:07:36.263 --> 00:07:40.407
We have the animate function.

91
00:07:40.407 --> 00:07:46.836
This is actually was supposed
to be requestAnimationFrame,

92
00:07:49.859 --> 00:07:57.289
Function that is taking the animate again.

93
00:07:57.289 --> 00:08:02.146
The second one is for VR purposes we
are going to use that in next one.

94
00:08:02.146 --> 00:08:06.691
If we are not in VR yet,
we can use requestAnimationFrame and

95
00:08:06.691 --> 00:08:09.647
again, we're adding to the y-axis.

96
00:08:09.647 --> 00:08:14.929
So it kind of turns in one direction

97
00:08:14.929 --> 00:08:20.583
that looks like Earth's rotation.

98
00:08:20.583 --> 00:08:24.517
And one thing that we
are missing is light and

99
00:08:24.517 --> 00:08:28.353
you can copy the lights information here.

100
00:08:28.353 --> 00:08:33.785
Its the HemisphereLight and
position is set outside

101
00:08:33.785 --> 00:08:38.361
of the center and
then we add it to the scene.

102
00:08:38.361 --> 00:08:43.513
All right, we can add this light
information to our init functions

103
00:08:43.513 --> 00:08:48.119
because it's going to run once
when we initiate the scene.

104
00:08:52.594 --> 00:09:00.502
And we saw what the bump map
does to our Earth's geometry.

105
00:09:00.502 --> 00:09:06.012
This is a great example from the three.js

106
00:09:06.012 --> 00:09:13.576
examples of how you can use to
render the details of skin.

107
00:09:13.576 --> 00:09:16.548
This is very interesting.

108
00:09:16.548 --> 00:09:19.406
If you take out the bump map,

109
00:09:19.406 --> 00:09:24.540
it will not look like anything
like a person at all.

110
00:09:24.540 --> 00:09:29.586
And now I think I want to
go to the same materials.

111
00:09:29.586 --> 00:09:36.715
I'll just copy and paste this one to
make sure that they are the same.

112
00:09:36.715 --> 00:09:44.334
So, Okay, I'm going to paste it here.

113
00:09:44.334 --> 00:09:47.975
For textures,
we have to use the TextureLoader and

114
00:09:47.975 --> 00:09:50.267
load the files that are in here.

115
00:09:50.267 --> 00:09:52.631
Well, we can just comment out this one.

116
00:09:52.631 --> 00:09:57.801
It's doing the same thing,
but we also have

117
00:09:57.801 --> 00:10:03.252
to move material information
up a little bit or

118
00:10:03.252 --> 00:10:07.182
move geometry down, all right?

119
00:10:09.081 --> 00:10:10.848
Now we have it.

120
00:10:10.848 --> 00:10:15.390
So we don't need
the randomized color anymore.

121
00:10:15.390 --> 00:10:21.510
Few other things that I'm defining
is specular on this material,

122
00:10:21.510 --> 00:10:27.750
which is the attribute that makes
it a little bit more like a mirror.

123
00:10:28.820 --> 00:10:34.590
shininess is how much light
will be reflected off of it.

124
00:10:34.590 --> 00:10:38.752
And bumpMap as we saw in
the Earth bump example,

125
00:10:38.752 --> 00:10:43.260
the same one, and
we are defining the scale of it.

126
00:10:43.260 --> 00:10:46.650
This will change how
much it's being applied.

127
00:10:46.650 --> 00:10:52.780
And we also have the texture now we
are defining instead of using the editor.

128
00:10:52.780 --> 00:10:54.468
Cool, let's take a look.

129
00:10:55.951 --> 00:10:58.385
Yeah, finally.

130
00:10:58.385 --> 00:11:02.632
We do have our 3D Earth.

131
00:11:02.632 --> 00:11:04.478
It's turning a little bit too fast.

132
00:11:04.478 --> 00:11:11.910
[LAUGH] It's dizzyingly fast, so
let's lower the animation a bit.

133
00:11:11.910 --> 00:11:15.583
I'm just going to add another
0 here to the rotation.y.

134
00:11:26.641 --> 00:11:33.048
So we have a little bit more reasonable
time passing in our new Earth.

135
00:11:33.048 --> 00:11:37.471
I don't see as much of a bump map,
it's not looking very good.

136
00:11:37.471 --> 00:11:43.192
So I'm going to increase
the materials bump a little bit,

137
00:11:43.192 --> 00:11:46.594
maybe to 15 and see what it does.

138
00:11:54.495 --> 00:11:56.387
Maybe even much higher.

139
00:12:04.591 --> 00:12:13.030
All right, so it's up to you to decide
how much of it you want to happen.

