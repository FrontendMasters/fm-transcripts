WEBVTT

1
00:00:00.700 --> 00:00:06.130
So before we start building our
applications on our local development

2
00:00:06.130 --> 00:00:11.150
environment, we have some tools
that we need to download.

3
00:00:11.150 --> 00:00:14.310
Node js is one, emulator is another one.

4
00:00:14.310 --> 00:00:18.290
And if you're on iOS devices,
WebEx are vivre.

5
00:00:18.290 --> 00:00:23.954
And one thing that we will be
doing is serving our pages and

6
00:00:23.954 --> 00:00:27.210
save just opening the files.

7
00:00:27.210 --> 00:00:30.800
So we need a web server
you can use any server.

8
00:00:30.800 --> 00:00:35.280
If you would like to use the Python
server or create your own.

9
00:00:36.350 --> 00:00:40.603
You can do that but
if you don't want to deal with that,

10
00:00:40.603 --> 00:00:46.320
one extension that is really useful
is the web server for Chrome.

11
00:00:46.320 --> 00:00:51.523
What you do is you just give
the whole folder structure to it and

12
00:00:51.523 --> 00:00:55.941
it's serves all files
starting from index.html.

13
00:00:55.941 --> 00:01:01.080
So, this is the cultural for developments.

14
00:01:01.080 --> 00:01:04.189
And one thing that is important for,

15
00:01:04.189 --> 00:01:08.610
VXR is it has to be served
over HTTPS instead of HTTP.

16
00:01:10.210 --> 00:01:13.015
So if you have an experience created and

17
00:01:13.015 --> 00:01:17.440
if you are running into issues
that's one thing to look into.

18
00:01:19.450 --> 00:01:24.669
Any, code editor will be
useful to work with but

19
00:01:24.669 --> 00:01:28.490
I do use Visual Studio Code.

20
00:01:28.490 --> 00:01:31.410
And if you would like to download,
it's a free download.

21
00:01:32.430 --> 00:01:33.720
It's an open source tool.

22
00:01:35.220 --> 00:01:40.441
And Visual Studio Code also have a live
server extension that you can download and

23
00:01:40.441 --> 00:01:42.820
serve your files from.

24
00:01:42.820 --> 00:01:46.354
For our example,
I did have create a server so

25
00:01:46.354 --> 00:01:49.060
you don't have to worry about it.

26
00:01:51.710 --> 00:01:58.870
As I mentioned, type threeJS both threeJS
and BabylonJS are written with TypeScript.

27
00:01:58.870 --> 00:02:02.244
Anytime a project is
written in TypeScript,

28
00:02:02.244 --> 00:02:07.590
it's much better idea to work with
TypeScript instead of JavaScript.

29
00:02:08.620 --> 00:02:14.594
Because what TypeScript gives you
is the extra type definition which

30
00:02:14.594 --> 00:02:21.495
allows us to get some tips from our editor
about how to implement our functions,

31
00:02:21.495 --> 00:02:26.760
or what values that we have to pass in for
some of the methods.

32
00:02:27.950 --> 00:02:31.508
If you are scared of TypeScript, don't be,

33
00:02:31.508 --> 00:02:36.680
it has five minutes introduction
if you're interested.

34
00:02:36.680 --> 00:02:43.650
And learn x and y is another resource that
I go to anytime I need a little refresher.

35
00:02:43.650 --> 00:02:47.840
And other than that, if you just copy and
paste the JavaScript code,

36
00:02:47.840 --> 00:02:50.280
it will still work on a Ts file.

37
00:02:50.280 --> 00:02:55.477
The only difference is that we have
to compile to JavaScript which

38
00:02:55.477 --> 00:03:01.240
are scripts in the folder that we
are going to work is going to do.

39
00:03:01.240 --> 00:03:02.800
So you don't have to
worry about that either.

40
00:03:04.400 --> 00:03:10.705
And, or if you don't have Github
you can create an account or

41
00:03:10.705 --> 00:03:17.760
just go to the repository and
download it instead of cloning it.

42
00:03:17.760 --> 00:03:19.680
We will use Chrome Dev Tools.

43
00:03:19.680 --> 00:03:22.968
You can use edge dev tools as well,
they are the same ones.

44
00:03:22.968 --> 00:03:27.913
But Firefox is not the one
that I'm familiar with so

45
00:03:27.913 --> 00:03:31.110
we're going to use that one.

46
00:03:31.110 --> 00:03:36.330
We are ready to start developing
our in our local environments.

47
00:03:36.330 --> 00:03:42.570
If you have already downloaded
the resources that I mentioned earlier,

48
00:03:42.570 --> 00:03:47.890
now you can check out this repository,
you have to clone it and

49
00:03:47.890 --> 00:03:52.494
then go into the folder and
npm install everything and

50
00:03:52.494 --> 00:03:56.300
we will run the development environments.

51
00:03:59.890 --> 00:04:04.009
So let's take a look at
our Github repository and

52
00:04:04.009 --> 00:04:07.260
get ourselves familiar with.

53
00:04:07.260 --> 00:04:11.510
I always start reading
a report from the bottom.

54
00:04:11.510 --> 00:04:16.469
First thing I look at is the NPM modules,
and

55
00:04:16.469 --> 00:04:22.233
once you are here,
if you are using visual studio,

56
00:04:22.233 --> 00:04:26.388
your code, you can type in control,

57
00:04:26.388 --> 00:04:30.030
shift, p to open up your input.

58
00:04:30.030 --> 00:04:34.400
[LAUGH] I don't know what is this called.

59
00:04:34.400 --> 00:04:38.010
And create a new terminal If
you already don't have one.

60
00:04:39.790 --> 00:04:43.056
And you can use an external terminal or

61
00:04:43.056 --> 00:04:48.400
anything else you are in,
you feel comfortable with.

62
00:04:48.400 --> 00:04:51.872
So once we are in the workshop folder,

63
00:04:51.872 --> 00:04:56.984
I'm going to run npm install and
wait for it to install.

64
00:04:56.984 --> 00:05:03.768
The code that we are writing is going
to be under source and under clients.

65
00:05:03.768 --> 00:05:08.786
We have ar.ts but we are going

66
00:05:08.786 --> 00:05:13.840
to start from the earth.ts.

67
00:05:13.840 --> 00:05:18.902
And once we run our npm run dev scripts,

68
00:05:18.902 --> 00:05:23.814
what it will do is turn TypeScript code

69
00:05:23.814 --> 00:05:29.040
into JavaScript code inside this folder

