WEBVTT

1
00:00:00.420 --> 00:00:03.940
&gt;&gt; Shirley Wu: You guys might
have seen the force lay out as

2
00:00:03.940 --> 00:00:06.370
something like these right?

3
00:00:06.370 --> 00:00:12.819
I think this is, the lamaze,
is this the lamaze?

4
00:00:12.819 --> 00:00:16.695
This might not the lamaze, but
you've seen force lay outs,

5
00:00:16.695 --> 00:00:21.103
all right you've seen things
like this where it's graph and

6
00:00:21.103 --> 00:00:24.681
all that the force lay out d3
force does for you, a lot.

7
00:00:24.681 --> 00:00:29.712
But it basically calculates the X and
Y positions of

8
00:00:29.712 --> 00:00:34.977
each of the nodes for you,
so that you don't have to,

9
00:00:34.977 --> 00:00:40.953
because having to calculate
this is kind of painful, yeah.

10
00:00:40.953 --> 00:00:45.797
So the force layout tries to
do the most optimal layout it

11
00:00:45.797 --> 00:00:50.229
can given as little overlap
of nodes as possible and

12
00:00:50.229 --> 00:00:55.280
as little overlap of links as possible and
of course each of

13
00:00:55.280 --> 00:01:00.968
those attributes are things that
you can specify with D3 force.

14
00:01:00.968 --> 00:01:05.934
Yeah, so
how D3 force works under the hood, and

15
00:01:05.934 --> 00:01:13.100
this is my favorite slide because
each of those little dots are a node.

16
00:01:13.100 --> 00:01:20.640
And what the force layout does is it
figures out, okay here's my node, and

17
00:01:20.640 --> 00:01:26.540
what are all the attractive
forces between the nodes?

18
00:01:26.540 --> 00:01:32.025
So, three goes through and says, okay,

19
00:01:32.025 --> 00:01:36.582
given this red node in the center.

20
00:01:36.582 --> 00:01:40.973
Apply all the attractive
forces that basically

21
00:01:40.973 --> 00:01:44.712
are pulling all of the other nodes to it.

22
00:01:44.712 --> 00:01:49.196
Yeah, so attractive forces pull
nodes together, and that's so

23
00:01:49.196 --> 00:01:51.240
that you can conserve space.

24
00:01:51.240 --> 00:01:53.750
So if you don't have
the attractive forces,

25
00:01:53.750 --> 00:01:57.460
all of these nodes would just kind
of fly away from your center or

26
00:01:57.460 --> 00:02:01.140
something like that, or be really big and
doesn't fit on your screen, right?

27
00:02:01.140 --> 00:02:06.874
So there's attractive forces,
denoted by the hearts.

28
00:02:06.874 --> 00:02:11.219
And there are also repulsive forces,
that act on each of the nodes.

29
00:02:11.219 --> 00:02:15.914
And so that's kind of like yeah.

30
00:02:15.914 --> 00:02:18.479
The forces that push nodes apart and

31
00:02:18.479 --> 00:02:23.533
that just makes sure that these
nodes don't overlap with each other.

32
00:02:23.533 --> 00:02:27.848
Cuz sometimes your nodes might be circles
that are 50 pixels or 100 pixels or

33
00:02:27.848 --> 00:02:29.061
something like that.

34
00:02:29.061 --> 00:02:33.440
So actually you really
shouldn't maybe ten pixels.

35
00:02:33.440 --> 00:02:37.141
And so they don't overlap, and
make sure they don't overlap.

36
00:02:37.141 --> 00:02:40.237
And so underneath the hood,

37
00:02:40.237 --> 00:02:46.300
what Force Layout does is it
repeats this calculation.

38
00:02:46.300 --> 00:02:51.760
So, it's basically figuring out the x and
y positions,

39
00:02:51.760 --> 00:02:55.967
of that node,
just that red node given all of

40
00:02:55.967 --> 00:03:00.878
the forces that the other
nodes are applying on it.

41
00:03:00.878 --> 00:03:05.481
Attractive and repulsive,
and it figures this out for

42
00:03:05.481 --> 00:03:11.284
every single node to get every single
node, their x and y positions,

43
00:03:11.284 --> 00:03:16.407
and that whole process is called one tic,
so one tic, yeah.

44
00:03:16.407 --> 00:03:21.108
So that whole process is called one tic,
and

45
00:03:21.108 --> 00:03:26.062
the whole point of a force
layout is that it runs

46
00:03:26.062 --> 00:03:31.923
thousands of iterations of
these quote unquote tics.

47
00:03:34.121 --> 00:03:40.832
&gt;&gt; Shirley Wu: To converge on an optimal,
quote unquote optimal layout.

48
00:03:40.832 --> 00:03:45.029
And so it's basically running
a simulation where at each tick,

49
00:03:45.029 --> 00:03:49.468
nodes are nudging each other apart or
pulling each other together.

50
00:03:49.468 --> 00:03:53.260
And over thousands and
thousands of iterations,

51
00:03:53.260 --> 00:03:58.235
you hopefully arrive at something
that looks good on the screen.

52
00:03:58.235 --> 00:04:02.563
So, this might be actually
a pretty good example.

53
00:04:05.393 --> 00:04:07.406
&gt;&gt; Shirley Wu: You can see,
can you see that?

54
00:04:07.406 --> 00:04:12.850
It's pretty fast but then like it
starts a little bit in the middle,

55
00:04:12.850 --> 00:04:17.310
and then it kind of expands so that
none of them are overlapping each other,

56
00:04:18.320 --> 00:04:21.180
and let me see if there is any
other ones that might be good.

57
00:04:23.080 --> 00:04:28.116
So, every single movement that you
see that's a tic, so as it and

58
00:04:28.116 --> 00:04:32.597
stuff that's a tic,
where the positions are being calculated.

59
00:04:39.834 --> 00:04:45.126
&gt;&gt; Shirley Wu: And I have a article
that I wrote that kind of goes through,

60
00:04:45.126 --> 00:04:52.375
this is version three, but it kind of goes
through what the force layout is for.

61
00:04:52.375 --> 00:04:53.328
How do you use it?

62
00:04:59.378 --> 00:05:01.480
&gt;&gt; Shirley Wu: What does
the data structure look like?

63
00:05:01.480 --> 00:05:06.302
And this is where you pass
in your nodes and links for

64
00:05:06.302 --> 00:05:10.240
the force layout to calculate its x and y.

65
00:05:10.240 --> 00:05:13.610
And you have to tell it
to start the simulation.

66
00:05:13.610 --> 00:05:18.620
And then, as the simulation is going,
you want to be

67
00:05:18.620 --> 00:05:23.480
setting the, maybe the x and
y attribute of the node,

68
00:05:23.480 --> 00:05:28.490
and the x and y attribute of,
if you have any links on each tick.

69
00:05:29.770 --> 00:05:35.150
Or you could be doing that after the whole
simulation has finished running on end.

70
00:05:40.865 --> 00:05:44.718
&gt;&gt; Shirley Wu: And then there is like,
there is a little bit of like tricky

71
00:05:44.718 --> 00:05:50.238
things about the force layout but I think
I have mentioned them all in this article.

72
00:05:50.238 --> 00:05:55.304
And then I also go in to detail
about all of the different

73
00:05:55.304 --> 00:06:02.480
forces that the d3 force layout applies,
and how those are kind of working.

74
00:06:02.480 --> 00:06:05.716
So this is for d3 version 3 and

75
00:06:05.716 --> 00:06:11.453
there's some things that
have changed in version 4.

76
00:06:11.453 --> 00:06:19.017
Where instead of having these default
forces applied on our simulation,

77
00:06:19.017 --> 00:06:24.757
in d3 version 4 we can specify
the forces that we want.

78
00:06:27.274 --> 00:06:31.384
&gt;&gt; Shirley Wu: So we can pick and
choose between all of these different,

79
00:06:31.384 --> 00:06:34.560
do we want the force to
center all the nodes?

80
00:06:34.560 --> 00:06:39.184
Do we want collision detection to
makes sure to push apart the nodes so

81
00:06:39.184 --> 00:06:41.749
that they don't overlap each other.

82
00:06:41.749 --> 00:06:44.024
And then, do we have links?

83
00:06:44.024 --> 00:06:48.852
And with links then, links,
you can push apart nodes so

84
00:06:48.852 --> 00:06:51.845
that the links unfurl correctly.

85
00:06:51.845 --> 00:06:57.920
And there's a lot of different
things that you can kind of pick and

86
00:06:57.920 --> 00:07:00.251
choose and put in there.

87
00:07:00.251 --> 00:07:04.805
And that freedom is really
awesome in version four that

88
00:07:04.805 --> 00:07:07.584
didn't exist in version three.

89
00:07:07.584 --> 00:07:12.537
So yeah, definitely if you're
interested in the forced layout,

90
00:07:14.557 --> 00:07:18.386
&gt;&gt; Shirley Wu: Check out the article and

91
00:07:18.386 --> 00:07:23.492
then check out the documentation

92
00:07:23.492 --> 00:07:27.690
to kind of see the changes.

93
00:07:27.690 --> 00:07:32.361
Yeah, between those two, cuz I think
force layout is one of the things that

94
00:07:32.361 --> 00:07:36.308
changed quite a bit,
between version three and version four.

95
00:07:36.308 --> 00:07:39.600
And then, this is the example.

96
00:07:41.410 --> 00:07:46.194
This is a super simple,
I think this is Les Mis data set, and

97
00:07:46.194 --> 00:07:52.706
then it's basically just all of the,
each of the nodes are character and

98
00:07:52.706 --> 00:07:57.717
all of the links are co-occurances
throughout the musical.

99
00:07:57.717 --> 00:08:02.998
And then, so
this is where I defined forcedSimulation,

100
00:08:02.998 --> 00:08:08.284
and this is where I say all of
the forces that I want to use.

101
00:08:08.284 --> 00:08:13.268
So, I'm specifying that I have links,
specifying that I want a certain

102
00:08:13.268 --> 00:08:18.512
amount of retraction and a certain
amount of reportion between the forces.

103
00:08:18.512 --> 00:08:24.232
Specifying that I want the [INAUDIBLE]
be pulled to the center,

104
00:08:24.232 --> 00:08:29.953
because if I don't have that,
it's going to be at zero zero.

105
00:08:29.953 --> 00:08:34.651
And then the slightly different thing
from everything that we've done

106
00:08:34.651 --> 00:08:39.190
previously is notice that with
the links and circles that I defined,

107
00:08:39.190 --> 00:08:44.063
notice that it doesn't have any CX or
CI attributes that they are not set.

108
00:08:44.063 --> 00:08:48.675
When we create this circles and
you certainly can set them but

109
00:08:48.675 --> 00:08:51.930
you don't have those x and
y attributes yet

110
00:08:51.930 --> 00:08:55.832
because you haven't run
the full simulation yet.

111
00:08:55.832 --> 00:08:59.710
So once you start, I think this is, yeah.

112
00:08:59.710 --> 00:09:05.500
So once, I think in version
actually in version four

113
00:09:06.510 --> 00:09:11.330
the four simulation runs automatically
as soon as you define it.

114
00:09:11.330 --> 00:09:16.950
So as it starts running,
then you start getting the x and

115
00:09:16.950 --> 00:09:21.848
y attributes for each of those nodes and
that's when you can

116
00:09:21.848 --> 00:09:28.450
apply them in a take call back function.

117
00:09:28.450 --> 00:09:32.962
So for example, if I just take this and

118
00:09:32.962 --> 00:09:38.179
then put them here, that's what happens,

119
00:09:38.179 --> 00:09:43.397
yeah because you're
only updating the x and

120
00:09:43.397 --> 00:09:47.909
y when the circles are being created,

121
00:09:47.909 --> 00:09:52.704
which isn't necessarily when the force

122
00:09:52.704 --> 00:09:56.817
simulation has stopped running.

123
00:09:56.817 --> 00:10:00.032
And often times it's definitely
not when the force simulation has,

124
00:10:00.032 --> 00:10:02.766
like it's at the very beginning
of the force simulation.

125
00:10:02.766 --> 00:10:07.715
So then you want to make
sure to update the x and

126
00:10:07.715 --> 00:10:11.896
y as the force simulation is running.

127
00:10:11.896 --> 00:10:14.860
And then you'll get the right x and
y attributes.

