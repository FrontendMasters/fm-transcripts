WEBVTT

1
00:00:00.090 --> 00:00:05.576
&gt;&gt; Shirley Wu: Before we get into this
exercise and how it works and all of that,

2
00:00:05.576 --> 00:00:11.070
I want to make sure to cover three
things that arose in the break.

3
00:00:12.260 --> 00:00:17.733
The first being, there were some questions
while we were talking about the enter,

4
00:00:17.733 --> 00:00:21.029
update, exit about how to
use that within React.

5
00:00:21.029 --> 00:00:25.907
Or any of the other MVC frameworks
that with a V part might also

6
00:00:25.907 --> 00:00:27.930
want control of the dom.

7
00:00:27.930 --> 00:00:31.667
So if there is enough people
that are interested in it I have

8
00:00:31.667 --> 00:00:35.805
after this exercise,
one more section about the force layout.

9
00:00:35.805 --> 00:00:40.831
And then after that I was just
planning on open Q and A,

10
00:00:40.831 --> 00:00:48.130
so if enough people are interested we
can cover React and D3 in that section.

11
00:00:48.130 --> 00:00:52.680
And I have a talk that's
about 15 minutes long

12
00:00:52.680 --> 00:00:57.129
that I can go through for
that, so let me know.

13
00:00:57.129 --> 00:01:02.910
The second thing is earlier
we were talking about,

14
00:01:02.910 --> 00:01:08.930
so there is an old
introduction to D3 that I did.

15
00:01:08.930 --> 00:01:15.611
This is working off of version 3, there's
some parts that are a little bit broken.

16
00:01:15.611 --> 00:01:20.898
So when you put in the data, you have to

17
00:01:20.898 --> 00:01:26.527
make sure to do comma space comma space.

18
00:01:26.527 --> 00:01:30.670
But if you play around
with this it gives a nice

19
00:01:30.670 --> 00:01:35.480
intuitive feel of how enter,
update, exit works.

20
00:01:36.890 --> 00:01:42.239
And for example, if you just do this

21
00:01:42.239 --> 00:01:47.300
and then you run code and
that's not what you were expecting.

22
00:01:48.660 --> 00:01:54.970
But if you guys want to play around with
this little site in your own time so

23
00:01:54.970 --> 00:01:59.320
that you can get even more of an intuitive
feel about how enter, update, exit works.

24
00:01:59.320 --> 00:02:03.340
I've covered pretty much everything that
you need to know about it in our workshop

25
00:02:03.340 --> 00:02:04.260
and in my slides.

26
00:02:04.260 --> 00:02:09.216
But if you want to just get away from
having to actually write the code to

27
00:02:09.216 --> 00:02:11.151
create the divs and stuff.

28
00:02:11.151 --> 00:02:16.807
And you just want to play around with,
if I do this data and then do append or

29
00:02:16.807 --> 00:02:21.760
enter append, what happens,
and get the sense from that.

30
00:02:21.760 --> 00:02:26.905
It's at my website sxywu.com/c3intro,
yeah I've

31
00:02:26.905 --> 00:02:33.692
gotten good feedback on it that it helped
a lot in terms of trying to learn,

32
00:02:33.692 --> 00:02:38.518
enter, update, exit,
that's the second thing.

33
00:02:38.518 --> 00:02:44.398
And then the third thing that we were
talking about during break is we

34
00:02:44.398 --> 00:02:50.291
learned something that was really
cool which is I did not know this.

35
00:02:50.291 --> 00:02:56.529
But if you notice, the first time around,
when we do the transitions, and

36
00:02:56.529 --> 00:03:03.110
we set duration 1,000, that one
gets transitioned over one second.

37
00:03:03.110 --> 00:03:05.880
But after that,
all of these are super fast and

38
00:03:05.880 --> 00:03:08.220
I never thought to think
about why it was super fast.

39
00:03:08.220 --> 00:03:12.980
Turns out it's because after the first
time, this actually solves so

40
00:03:12.980 --> 00:03:15.940
many questions that I had when
I was working on other things.

41
00:03:15.940 --> 00:03:22.240
But it turns out,
once you've called D3 transition,

42
00:03:22.240 --> 00:03:26.478
and the timer has started,
etc., any subsequent times,

43
00:03:26.478 --> 00:03:30.350
I'm guessing this is it,
I haven't dug into it or anything.

44
00:03:30.350 --> 00:03:34.500
It turns out, all of the subsequent
times it seems to default back to

45
00:03:35.510 --> 00:03:38.500
the default settings for D3 transition.

46
00:03:38.500 --> 00:03:45.290
So that's why actually, after we applied
it the first time around, all of these

47
00:03:45.290 --> 00:03:50.790
are now getting transitioned with a 250
millisecond duration which is the default.

48
00:03:50.790 --> 00:03:56.370
So if we just put this into
the update bars function and

49
00:03:58.670 --> 00:04:06.030
redeclare it every single time, then
it actually does the correct behavior.

50
00:04:06.030 --> 00:04:10.170
So every single time that we
need to call a transition and

51
00:04:10.170 --> 00:04:15.700
we need to recreate it, redefine it, yeah.

52
00:04:15.700 --> 00:04:18.680
And now it's behaving correctly and

53
00:04:18.680 --> 00:04:24.520
animating over a second as opposed to
250 milliseconds that it was before.

54
00:04:24.520 --> 00:04:27.184
So something cool I learned today,
thank you.

55
00:04:30.913 --> 00:04:37.669
&gt;&gt; Shirley Wu: Cool, okay so now on to
the exercise, how was it this time,

56
00:04:37.669 --> 00:04:42.825
was it manageable, was it understandable?

57
00:04:42.825 --> 00:04:43.915
&gt;&gt; Speaker 2: I made a circle [LAUGH].

58
00:04:43.915 --> 00:04:44.539
&gt;&gt; Shirley Wu: You made a circle?

59
00:04:44.539 --> 00:04:50.220
&gt;&gt; Speaker 2: That's about the extent.

60
00:04:50.220 --> 00:04:55.660
&gt;&gt; Shirley Wu: Okay, let's go through it
and you guys can struggle with me because

61
00:04:55.660 --> 00:05:01.260
it's not like I memorized this course,
so tell me what to do if I look stuck.

62
00:05:07.936 --> 00:05:13.069
&gt;&gt; Shirley Wu: I should have saved that,
well, okay, cool,

63
00:05:13.069 --> 00:05:20.430
let's see, I'm going to just start
by console logging our response.

64
00:05:28.807 --> 00:05:33.366
&gt;&gt; Shirley Wu: How many people were
able to get it to animate, update,

65
00:05:33.366 --> 00:05:36.570
like through the states and animate?

66
00:05:36.570 --> 00:05:38.068
30 minutes too short?

67
00:05:38.068 --> 00:05:38.782
Okay.

68
00:05:41.949 --> 00:05:47.064
&gt;&gt; Shirley Wu: All right, hopefully I
can do it in such a way that everything

69
00:05:47.064 --> 00:05:52.297
makes sense okay, so
this is what each of the data looks like.

70
00:05:52.297 --> 00:05:57.505
So then we're using the attribute site and
we're using year and

71
00:05:57.505 --> 00:06:03.880
we're going to use yield, I'm going to
ignore the other attributes in here.

72
00:06:05.920 --> 00:06:10.382
So the first thing we want to
do is we have our xscale and

73
00:06:10.382 --> 00:06:13.170
yscale, so let's set those.

74
00:06:13.170 --> 00:06:19.920
So as I mentioned previously,
x-scale is in this case discreet,

75
00:06:19.920 --> 00:06:25.550
so we're using scale band, which
means that we need to go and get the,

76
00:06:32.139 --> 00:06:35.903
&gt;&gt; Shirley Wu: All of the unique sites and

77
00:06:35.903 --> 00:06:41.890
so let's see, let me call this xDomain,

78
00:06:41.890 --> 00:06:46.520
I'm very bad at naming things.

79
00:06:49.463 --> 00:06:53.254
&gt;&gt; Shirley Wu: I think if I do d3.map,

80
00:06:53.254 --> 00:06:59.540
I think,
&gt;&gt; Shirley Wu: And

81
00:06:59.540 --> 00:07:05.077
then I pass in response and
I say I want d.site,

82
00:07:05.077 --> 00:07:13.120
that should give me an array of
600 somethings with just the site.

83
00:07:14.850 --> 00:07:19.280
And I don't actually remember
off the top of my head how to

84
00:07:19.280 --> 00:07:24.262
get a unique set of sites without,

85
00:07:33.219 --> 00:07:34.090
&gt;&gt; Shirley Wu: Is that what you guys were

86
00:07:34.090 --> 00:07:40.346
expecting,
&gt;&gt; Shirley Wu: d3.map?

87
00:07:40.346 --> 00:07:41.820
&gt;&gt; Speaker 3: How many sites are there?

88
00:07:41.820 --> 00:07:46.538
&gt;&gt; Shirley Wu: There is apparently six,
one, two, three, four, five, six,

89
00:07:46.538 --> 00:07:47.394
six sites.

90
00:07:52.075 --> 00:07:54.109
&gt;&gt; Shirley Wu: Okay,
I'm going to cheat a little bit,

91
00:07:55.759 --> 00:07:56.388
&gt;&gt; Shirley Wu: [LAUGH] And

92
00:07:56.388 --> 00:07:57.469
look at my code.

93
00:07:59.838 --> 00:08:01.442
Response that map, okay.

94
00:08:04.120 --> 00:08:06.540
&gt;&gt; Shirley Wu: I usually
do this with low dash.

95
00:08:08.550 --> 00:08:13.226
Okay, so here,
I'm just getting all of the sites.

96
00:08:13.226 --> 00:08:16.590
Let's console.log that.

97
00:08:19.499 --> 00:08:25.180
&gt;&gt; Shirley Wu: And apparently I guess if
I just pass this in, let's test this.

98
00:08:25.180 --> 00:08:30.080
So we have our xScale and
then let's set this domain on it.

99
00:08:30.080 --> 00:08:33.870
And let's see if d3 is
smart enough to take this

100
00:08:33.870 --> 00:08:37.790
array of 600 something sight names.

101
00:08:37.790 --> 00:08:40.505
And unique it and
get the right side of domains.

102
00:08:43.190 --> 00:08:47.462
&gt;&gt; Shirley Wu: And the way that you
can see what's the domain that got set

103
00:08:47.462 --> 00:08:51.022
on the scale is you just do xScale.domain,
and

104
00:08:51.022 --> 00:08:57.720
then call it without passing anything in,
and look at that, d3 is so smart.

105
00:08:57.720 --> 00:09:02.942
It took our array of 600 site names and
then it was like, okay,

106
00:09:02.942 --> 00:09:08.690
unique it all and then here's my
domain which is this six site names.

107
00:09:10.170 --> 00:09:10.670
Perfect.

108
00:09:15.680 --> 00:09:18.610
&gt;&gt; Shirley Wu: And
now let's get our y scale.

109
00:09:19.870 --> 00:09:22.818
Well actually let's do this first.

110
00:09:22.818 --> 00:09:27.475
Let's get our, and I said it was yield.

111
00:09:27.475 --> 00:09:33.680
So, I wonder if these bugs any
of you guys that I'm switching

112
00:09:33.680 --> 00:09:38.680
between arrow function and
not arrow function.

113
00:09:38.680 --> 00:09:40.830
Does that bother you, guys?

114
00:09:40.830 --> 00:09:43.418
[LAUGH] Okay.

115
00:09:43.418 --> 00:09:46.180
Okay, so up to you guy's judgement call,

116
00:09:46.180 --> 00:09:49.882
would you like to use this
extent where the min is 2.9?

117
00:09:49.882 --> 00:09:53.226
Or would you want to just do a min
of 0 and just get the y max?

118
00:09:56.210 --> 00:09:58.800
&gt;&gt; Speaker 4: 0
&gt;&gt; Shirley Wu: 0, 0, okay.

119
00:09:58.800 --> 00:10:01.080
I heard one person say 0 so
I'm going with it.

120
00:10:01.080 --> 00:10:08.680
Okay, so let's do yMax and
then we'll do max.

121
00:10:10.020 --> 00:10:16.197
And so yMax, then get our 75.5,

122
00:10:16.197 --> 00:10:21.590
yScale.domain is 0 and yMax.

123
00:10:23.210 --> 00:10:28.040
And we can console.log to double-check.

124
00:10:31.870 --> 00:10:33.760
&gt;&gt; Shirley Wu: And it is correct, cool.

125
00:10:35.150 --> 00:10:42.514
Okay, so now that we have the scales,
&gt;&gt; Shirley Wu: I

126
00:10:42.514 --> 00:10:45.740
think we can start drawing the circles.

127
00:10:45.740 --> 00:10:46.460
What do you guys think?

128
00:10:48.110 --> 00:10:49.090
Right?

129
00:10:49.090 --> 00:10:49.780
Okay.

130
00:10:49.780 --> 00:10:55.590
So I'm going to, for now, call update
with the response and the start year.

131
00:10:55.590 --> 00:10:58.290
And then, let's get started.

132
00:11:00.100 --> 00:11:04.090
Let's, for now, just draw the circles for
the first year.

133
00:11:05.430 --> 00:11:07.490
Do I have a color scale?

134
00:11:07.490 --> 00:11:08.154
Okay, okay.

135
00:11:11.610 --> 00:11:17.560
&gt;&gt; Shirley Wu: So, the first thing we
might want to do is just set the data,

136
00:11:17.560 --> 00:11:19.589
filter the data by,

137
00:11:28.342 --> 00:11:31.690
&gt;&gt; Shirley Wu: d.year is equal to year.

138
00:11:31.690 --> 00:11:35.250
So filter it just by.

139
00:11:35.250 --> 00:11:41.070
Only get the data points where the year
matches the year that we passed in, cool.

140
00:11:41.070 --> 00:11:45.500
And that turns out to be 53 data points.

141
00:11:45.500 --> 00:11:48.393
And let's just make sure
that they're all 1927.

142
00:11:48.393 --> 00:11:50.660
I mean, not all of them are,
but let's go through.

143
00:11:50.660 --> 00:11:52.865
Cool, they're all 1927.

144
00:11:52.865 --> 00:11:59.190
And so
those are the circles we want to make.

145
00:12:01.620 --> 00:12:02.293
Okay, so

146
00:12:02.293 --> 00:12:09.417
first thing we need to do,
&gt;&gt; Shirley Wu: Is

147
00:12:09.417 --> 00:12:15.860
get all of the circles that don't yet
exist and bind data to it.

148
00:12:18.420 --> 00:12:19.880
Which our data is that.

149
00:12:19.880 --> 00:12:22.214
And then what should be our key function?

150
00:12:27.591 --> 00:12:31.719
&gt;&gt; Speaker 4: [INAUDIBLE]
&gt;&gt; Shirley Wu: Yeah, apparently I do that.

151
00:12:31.719 --> 00:12:33.790
[LAUGH] d.key is a key function.

152
00:12:33.790 --> 00:12:39.599
[LAUGH] I was scrolling down
cuz I felt like I defined this.

153
00:12:39.599 --> 00:12:45.760
Okay, and then just for the,
I guess, sake of argument.

154
00:12:45.760 --> 00:12:50.810
Let's do exit last just to see
that it's exactly the same thing.

155
00:12:50.810 --> 00:12:54.580
If not,
then I need to relearn some things.

156
00:12:54.580 --> 00:12:56.433
Okay, so let's first do the enter.

157
00:13:03.050 --> 00:13:05.542
&gt;&gt; Shirley Wu: .ent.circle.

158
00:13:05.542 --> 00:13:07.510
.enter.append.

159
00:13:21.375 --> 00:13:23.040
&gt;&gt; Shirley Wu: Append circle, actually.

160
00:13:27.650 --> 00:13:29.686
Let's make sure they're all showing up.

161
00:13:36.261 --> 00:13:40.070
&gt;&gt; Shirley Wu: There's 57 circles created,
cool.

162
00:13:40.070 --> 00:13:46.280
And I never set this earlier but
it was fine.

163
00:13:46.280 --> 00:13:49.236
It made sense that circle's here.

164
00:13:49.236 --> 00:13:51.521
The reason why, and
we can call .enter on it,

165
00:13:51.521 --> 00:13:55.240
is because circles here is actually
what .data returns, right?

166
00:13:55.240 --> 00:13:57.080
You can't call .enter
on just any selection.

167
00:13:57.080 --> 00:14:01.944
It has to be what .data returns.

168
00:14:01.944 --> 00:14:05.480
Cuz I realize I didn't
mention that earlier, but

169
00:14:05.480 --> 00:14:07.370
that was pretty apparent, right?

170
00:14:07.370 --> 00:14:08.740
Okay, cool.

171
00:14:08.740 --> 00:14:15.300
And then on enter, let's see.

172
00:14:15.300 --> 00:14:19.640
What are attributes we might
need to set on center?

173
00:14:19.640 --> 00:14:22.790
Or do all of them depend on the data?

174
00:14:22.790 --> 00:14:29.070
We have our x attribute, our y attribute,
our radius, and our color.

175
00:14:30.280 --> 00:14:34.970
Is it just color that,
they all depend on the data, right?

176
00:14:34.970 --> 00:14:38.555
Cuz even the color I think we might
have said was a site or do we-

177
00:14:38.555 --> 00:14:41.611
&gt;&gt; Speaker 5: We set a color scale.

178
00:14:41.611 --> 00:14:44.230
&gt;&gt; Shirley Wu: We set a color scale,
but then how do we use it?

179
00:14:45.730 --> 00:14:46.420
How do we use it?

180
00:14:46.420 --> 00:14:49.850
&gt;&gt; Speaker 7: I think we didn't invoke
it yet after the data was loaded.

181
00:14:49.850 --> 00:14:54.310
&gt;&gt; Shirley Wu: Okay,
I think my computer may have frozen.

182
00:14:56.000 --> 00:15:00.965
I took a look at the other one,
and it turns out

183
00:15:00.965 --> 00:15:06.338
that the color,
the fill is actually that last.

184
00:15:06.338 --> 00:15:12.233
Do you remember how there's
also the gen on the data?

185
00:15:12.233 --> 00:15:17.049
I think that's the genome of the barley,
and

186
00:15:17.049 --> 00:15:21.368
apparently that's what we call her by.

187
00:15:25.900 --> 00:15:31.844
&gt;&gt; Shirley Wu: So let's get that going,
enter.append, var enter is equal to,

188
00:15:31.844 --> 00:15:38.330
and you don't actually have to do
this var enter every single time.

189
00:15:38.330 --> 00:15:41.690
Actually, let me show you both sides.

190
00:15:41.690 --> 00:15:47.940
So I could either do enter and then enter.

191
00:15:49.020 --> 00:15:54.920
And do circles as enter.merge, circle.

192
00:15:54.920 --> 00:15:56.480
I mean, not merge, circle, sorry.

193
00:15:57.700 --> 00:16:04.345
Circles, the variable, and then I can,
&gt;&gt; Shirley Wu: Be like cx for

194
00:16:04.345 --> 00:16:10.427
the circle is supposed to be,
&gt;&gt; Shirley Wu: It

195
00:16:10.427 --> 00:16:15.293
was xScale and then we used sites,
right, d.site.

196
00:16:17.566 --> 00:16:18.797
&gt;&gt; Shirley Wu: Let's double check.

197
00:16:25.455 --> 00:16:27.071
&gt;&gt; Shirley Wu: Yeah,
I need to call update.

198
00:16:37.895 --> 00:16:39.206
&gt;&gt; Shirley Wu: Okay, here we are.

199
00:16:44.268 --> 00:16:48.480
&gt;&gt; Shirley Wu: Cool, okay so
we call xScale with the d.site and

200
00:16:48.480 --> 00:16:52.600
we get these back and
with the cx set correctly.

201
00:16:54.410 --> 00:16:59.340
Now,
&gt;&gt; Shirley Wu: Let's do the cy.

202
00:17:01.290 --> 00:17:03.665
yScale and we set d.yield.

203
00:17:06.335 --> 00:17:16.014
&gt;&gt; Shirley Wu: And finally, the r,
&gt;&gt; Shirley Wu: Is r constant?

204
00:17:18.043 --> 00:17:18.871
&gt;&gt; Shirley Wu: Is r constant?

205
00:17:18.871 --> 00:17:19.371
&gt;&gt; Speaker 5: Yup.
&gt;&gt; Speaker 6: No, we're driving it, right?

206
00:17:19.371 --> 00:17:19.942
&gt;&gt; Speaker 5: No.

207
00:17:19.942 --> 00:17:22.611
&gt;&gt; [INAUDIBLE]

208
00:17:22.611 --> 00:17:23.580
&gt;&gt; Shirley Wu: Did we?

209
00:17:23.580 --> 00:17:27.800
&gt;&gt; Speaker 5: You said
a radius variable that time.

210
00:17:27.800 --> 00:17:30.992
&gt;&gt; Shirley Wu: But it's a constant 10.

211
00:17:30.992 --> 00:17:36.130
So, actually,
&gt;&gt; Shirley Wu: Sorry,

212
00:17:36.130 --> 00:17:39.240
what I meant was,
is the radius dependent on the data?

213
00:17:39.240 --> 00:17:41.800
And apparently the radius is
not dependent on the data.

214
00:17:41.800 --> 00:17:45.333
It's just a constant 10.

215
00:17:47.540 --> 00:17:50.546
&gt;&gt; Shirley Wu: Yehey, and it appears.

216
00:17:50.546 --> 00:17:54.654
[APPLAUSE] Okay, and
then finally let's give it a fill.

217
00:17:59.264 --> 00:18:05.793
&gt;&gt; Shirley Wu: Colors actually I think,
yeah colorScale(d.gen).

218
00:18:05.793 --> 00:18:07.147
And then it's colored.

219
00:18:08.946 --> 00:18:10.027
&gt;&gt; Shirley Wu: Cool.

220
00:18:16.323 --> 00:18:17.363
&gt;&gt; Shirley Wu: And then,

221
00:18:25.872 --> 00:18:27.557
&gt;&gt; Shirley Wu: I did lie earlier.

222
00:18:29.627 --> 00:18:35.910
&gt;&gt; Shirley Wu: The exit selection
should be above the enter and update.

223
00:18:35.910 --> 00:18:44.470
Only if, if and only if you've set circles
to the enter and update selection.

224
00:18:44.470 --> 00:18:50.312
So if I don't have that, circles is
still that what .data gave back so

225
00:18:50.312 --> 00:18:54.210
then I can say exit.remove like normal.

226
00:18:54.210 --> 00:18:58.987
But if I, here do circles equal,
to then I overrode what

227
00:18:58.987 --> 00:19:03.766
.data gave back with the enter and
update selections so

228
00:19:03.766 --> 00:19:08.600
then that .exit function
will no longer work on that.

229
00:19:08.600 --> 00:19:11.750
So I think that's why,
that's probably why we do it like that so

230
00:19:11.750 --> 00:19:14.190
that, cuz sometimes you will need that, so

231
00:19:14.190 --> 00:19:20.370
you'll need to reset that circles
variable so that you can act on it,

232
00:19:20.370 --> 00:19:25.276
if you nest elements and stuff.

233
00:19:25.276 --> 00:19:29.510
So usually better to just remove first,
yeah.

234
00:19:29.510 --> 00:19:35.340
But you could put it
down there if you don't

235
00:19:35.340 --> 00:19:38.340
override circles with a new function.

236
00:19:38.340 --> 00:19:45.200
I also want to show, we don't have to
set the enter variable all the time.

237
00:19:45.200 --> 00:19:48.327
We could also just do this.

238
00:19:50.022 --> 00:19:54.187
&gt;&gt; Shirley Wu: So this does exactly
the same thing because up until this point

239
00:19:54.187 --> 00:19:56.510
it's the enter selection.

240
00:19:56.510 --> 00:20:02.110
And then we're merging the enter selection
with the update selection of circles and

241
00:20:02.110 --> 00:20:06.860
so it has exactly the same,
the exact same effect.

242
00:20:08.040 --> 00:20:13.383
The only time you might want
to separate out the enter

243
00:20:13.383 --> 00:20:18.605
selection is from the-
the only time that maybe you

244
00:20:18.605 --> 00:20:23.583
want to do the enter first and
then merge enter and

245
00:20:23.583 --> 00:20:28.563
update separately in two
different variables is

246
00:20:28.563 --> 00:20:33.072
if you are needing to
nest a group elements.

247
00:20:33.072 --> 00:20:36.375
So if you're entering a group element,

248
00:20:36.375 --> 00:20:40.553
and that group element
actually has rectangles and

249
00:20:40.553 --> 00:20:46.480
text underneath it then you might need
to declare the enter selection and

250
00:20:46.480 --> 00:20:51.750
then only create the rectangle and
text on the enter selection.

251
00:20:51.750 --> 00:20:54.870
Because you don't want to do that
again in the update selection or

252
00:20:54.870 --> 00:20:59.960
else you'll create extra rectangles and
text every single time you update.

253
00:20:59.960 --> 00:21:03.449
So that's the only time
you might want to separate

254
00:21:03.449 --> 00:21:07.355
out,
&gt;&gt; Shirley Wu: That you might actually

255
00:21:07.355 --> 00:21:10.117
want to separate out
the enter like this and

256
00:21:10.117 --> 00:21:13.780
then merge the enter with
the update separately.

257
00:21:13.780 --> 00:21:18.580
But if you don't need to nest anything,
like if you don't need to work

258
00:21:18.580 --> 00:21:23.545
on just the enter selection, or
append on just the enter selection,

259
00:21:23.545 --> 00:21:27.537
then you can just have this and
that works fine too.

260
00:21:27.537 --> 00:21:36.262
Cool, so this do everything and,
&gt;&gt; Shirley Wu: And

261
00:21:36.262 --> 00:21:41.527
then,
&gt;&gt; Shirley Wu: Actually

262
00:21:41.527 --> 00:21:45.505
now,
&gt;&gt; Shirley Wu: This will actually update

263
00:21:45.505 --> 00:21:49.026
correctly or should update
correctly every second, yeah.

264
00:21:49.026 --> 00:21:53.526
So this doesn't have the transition yet
but, that's actually

265
00:21:53.526 --> 00:21:58.435
all the code you need,
&gt;&gt; Shirley Wu: To

266
00:21:58.435 --> 00:22:00.170
go between each of the, yeah.

267
00:22:00.170 --> 00:22:02.730
So that's all that you needed.

268
00:22:06.552 --> 00:22:09.260
&gt;&gt; Shirley Wu: And then,
let's put in our transitions.

269
00:22:09.260 --> 00:22:13.050
I don't think we needed
to transition the x.

270
00:22:14.140 --> 00:22:21.730
Let me hold on and comment this out so
we don't get that same problem again.

271
00:22:21.730 --> 00:22:25.731
Actually, is so far so good for you guys?

272
00:22:25.731 --> 00:22:32.239
Cool, okay, so,
&gt;&gt; Shirley Wu: We

273
00:22:32.239 --> 00:22:36.250
said we wanted to animate the x and the y.

274
00:22:37.480 --> 00:22:41.220
No, not the x, not the x because
the sites should be the same.

275
00:22:41.220 --> 00:22:44.290
But the yields could change
between years and also,

276
00:22:44.290 --> 00:22:49.620
I think I did something fancy where I just

277
00:22:49.620 --> 00:22:55.390
animate the radius of the circle
down to zero, and then exit it.

278
00:22:57.090 --> 00:23:02.090
Okay, so that means all we have to do is,
let's define

279
00:23:02.090 --> 00:23:08.497
the transition,
&gt;&gt; Shirley Wu: Within our update function,

280
00:23:08.497 --> 00:23:14.150
var t = d3.transition and
let's transition for a second.

281
00:23:15.690 --> 00:23:21.884
And then, for our exit selection,

282
00:23:21.884 --> 00:23:26.013
let's transition t and

283
00:23:26.013 --> 00:23:31.390
then attribute r down to zero.

284
00:23:33.630 --> 00:23:41.728
And then we also said we wanted to
transition just the line attribute.

285
00:23:45.804 --> 00:23:50.360
&gt;&gt; Shirley Wu: So, with those three
lines we should get the right animation.

286
00:23:50.360 --> 00:23:57.579
So I'm going to uncomment this and
then see if we get the right image.

287
00:23:57.579 --> 00:24:02.360
Yehey, notice that all of the things
that are entering are like

288
00:24:02.360 --> 00:24:06.080
slopping down from the top because,
do you guys see that?

289
00:24:06.080 --> 00:24:09.620
It's like any of them, I guess,
it's not entering for a while.

290
00:24:09.620 --> 00:24:13.590
But when it enters that,
so yeah, there we go.

291
00:24:13.590 --> 00:24:19.230
It drops down from the top because our
y attribute is defaulting to zero,

292
00:24:19.230 --> 00:24:21.540
which is the top, and
it's dropping down like that.

293
00:24:21.540 --> 00:24:26.776
So if we don't want that
what we can do is just after

294
00:24:26.776 --> 00:24:31.514
the enter selection, we just say, hey, for

295
00:24:31.514 --> 00:24:37.564
our y,
&gt;&gt; Shirley Wu: When you enter,

296
00:24:37.564 --> 00:24:45.498
just start with the y that,
&gt;&gt; Shirley Wu: That y so

297
00:24:45.498 --> 00:24:47.930
that you don't get that drop.

298
00:24:48.930 --> 00:24:52.620
If you want the drop,
that's like totally up to you.

299
00:24:52.620 --> 00:24:55.629
But,
&gt;&gt; Speaker 7: So

300
00:24:55.629 --> 00:24:58.661
that just preserves the y
from the previous selection?

301
00:25:02.693 --> 00:25:07.013
&gt;&gt; Shirley Wu: Yeah, I think and then
there's, I think I'm not gonna go into

302
00:25:07.013 --> 00:25:12.170
detail about all of the different
things you could do with transitions.

303
00:25:12.170 --> 00:25:16.052
But if you look up the D3
transition documentation,

304
00:25:16.052 --> 00:25:18.170
there is different things
that you can do with timing.

305
00:25:18.170 --> 00:25:21.710
So for example,
you can use a function called .delay so

306
00:25:21.710 --> 00:25:24.798
that you can stagger
the animations that come in.

307
00:25:24.798 --> 00:25:29.595
So with .delay maybe you return when

308
00:25:29.595 --> 00:25:35.630
the animation starts
like every ten seconds or

309
00:25:35.630 --> 00:25:39.508
something given your index.

310
00:25:39.508 --> 00:25:43.696
You can also chain different transitions,
so if you have a rectangle and

311
00:25:43.696 --> 00:25:46.853
you want it to like first, or
say if you have a circle and

312
00:25:46.853 --> 00:25:50.130
you first want the radius
to expand to ten.

313
00:25:50.130 --> 00:25:53.870
And then you want to move it
to it's right y position or

314
00:25:53.870 --> 00:25:57.470
something, you can also
chain these transitions.

315
00:25:57.470 --> 00:26:00.870
I don't go into detail just because

316
00:26:04.260 --> 00:26:06.570
it's also another huge section
that we can spend hours on.

