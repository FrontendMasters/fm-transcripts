WEBVTT

1
00:00:00.100 --> 00:00:01.970
&gt;&gt; Shirley Wu: I think
a lot of the examples for

2
00:00:01.970 --> 00:00:06.720
force stimulation is like not only graphs,
but in version four.

3
00:00:06.720 --> 00:00:13.350
I'm like in love with version four for
simulation, because it put into like,

4
00:00:13.350 --> 00:00:17.730
it now provides position and collision.

5
00:00:18.960 --> 00:00:25.740
So what position is, is you can actually
provide X and Y positions that you

6
00:00:25.740 --> 00:00:31.130
want the nodes to go towards, but
not exactly those X and Y positions.

7
00:00:31.130 --> 00:00:34.050
Yeah, so basically,
you can provide at focal points.

8
00:00:34.050 --> 00:00:39.940
You can be like, I want these
nodes to center on 100 by 100,

9
00:00:39.940 --> 00:00:45.000
and then these nodes to be 200 and
200, or something like that.

10
00:00:45.000 --> 00:00:49.470
And then,
what force simulation will do will be,

11
00:00:49.470 --> 00:00:53.060
it will calculate the positions
of all of those nodes,

12
00:00:53.060 --> 00:00:56.480
such that it does go to their focal
point but don't overlap each other.

13
00:00:56.480 --> 00:00:59.820
Or something along those lines because
you have repulsion set on them.

14
00:00:59.820 --> 00:01:05.050
And collision is something called
collision detection which you can say

15
00:01:05.050 --> 00:01:12.180
like, I want, I want absolutely
no overlap between the nodes.

16
00:01:12.180 --> 00:01:16.950
So then for each node make
sure I have a buffer space of

17
00:01:18.230 --> 00:01:21.080
this much radius or something like that.

18
00:01:21.080 --> 00:01:26.570
And these were previously like pieces of
code that you can copy and paste into your

19
00:01:26.570 --> 00:01:31.390
own code, but wasn't built into D3, and
in version four it got added into D3s for

20
00:01:31.390 --> 00:01:36.780
simulation and you can now just
kind of like build and use it.

21
00:01:36.780 --> 00:01:44.878
And I absolutely love that.
&gt;&gt; Shirley Wu: Because,

22
00:01:44.878 --> 00:01:50.507
apparently this is not the link.
&gt;&gt; Shirley Wu: I love using,

23
00:01:50.507 --> 00:01:56.032
position and collision together
because then I can do something

24
00:01:56.032 --> 00:02:01.152
like,
&gt;&gt; Shirley Wu: Something

25
00:02:01.152 --> 00:02:06.206
like this.
&gt;&gt; Shirley Wu: Yeah, where each of these

26
00:02:06.206 --> 00:02:12.330
dots are, so this is just like
my vacation pictures and yeah.

27
00:02:12.330 --> 00:02:14.430
So basically took my pictures and

28
00:02:14.430 --> 00:02:20.630
I took the five most primary colors in my
vacation pictures and then I map them.

29
00:02:20.630 --> 00:02:24.110
So here, each of these
are a different day in a trip.

30
00:02:24.110 --> 00:02:27.450
So first of all I map them to the day
that they were taken in the trip.

31
00:02:29.740 --> 00:02:34.990
And then also I think
the radius is actually, yeah.

32
00:02:34.990 --> 00:02:40.036
So time like time of day of the trip and
then I'm the,

33
00:02:40.036 --> 00:02:43.705
I guess is that, angle, sorry,

34
00:02:43.705 --> 00:02:49.693
angle is the time of day, and
then radius is the hue, I think.

35
00:02:49.693 --> 00:02:54.346
Yeah, hue going from red to blue.

36
00:02:54.346 --> 00:02:57.598
If I didn't have focus X, focus Y,

37
00:02:57.598 --> 00:03:02.912
I wouldn't all of this would
just be converge they'll all

38
00:03:02.912 --> 00:03:08.225
be overlapping each other, but
because I have that you can

39
00:03:08.225 --> 00:03:13.340
see little things like some
days I take the most okay so.

40
00:03:13.340 --> 00:03:18.056
Through this exercise I actually learnt
something about myself which is I

41
00:03:18.056 --> 00:03:22.465
really like taking pictures of the sky and
the oceans, so the blue and

42
00:03:22.465 --> 00:03:24.990
nature so the blues make a lot of sense.

43
00:03:24.990 --> 00:03:27.610
But, then I was like,
why do I have so many red things?

44
00:03:27.610 --> 00:03:31.180
Cuz, like what things in nature are red,
right.

45
00:03:31.180 --> 00:03:34.680
So, I actually dug into this and
apparently these are all food pictures.

46
00:03:34.680 --> 00:03:37.186
So,
&gt;&gt; Speaker 2: [INAUDIBLE].

47
00:03:37.186 --> 00:03:41.105
&gt;&gt; Shirley Wu: Yeah, food pictures.

48
00:03:41.105 --> 00:03:44.810
So you, can see you're up, mostly food.

49
00:03:45.880 --> 00:03:49.030
Asia, this was when I went to Tokyo,
or yeah.

50
00:03:50.670 --> 00:03:53.110
This like I just ate through Japan,
apparently.

51
00:03:53.110 --> 00:03:58.890
And Hawaii, and I think this was Iceland,
so this was a lot of water.

52
00:03:58.890 --> 00:04:03.289
But if I didn't have position and
collision then I

53
00:04:03.289 --> 00:04:08.525
wouldn't be able to show you
this whole big chunks of blue or

54
00:04:08.525 --> 00:04:14.010
big chunks of red that led to my
discovery that I just eat a lot.

55
00:04:14.010 --> 00:04:15.360
So that's one of the things.

56
00:04:15.360 --> 00:04:20.369
And the other place that I used
that was in the other place

57
00:04:20.369 --> 00:04:26.018
I use the Force Layout a lot is in
the Hamilton one that I showed,

58
00:04:26.018 --> 00:04:29.536
previously, where if you see, like,

59
00:04:29.536 --> 00:04:35.040
at the very beginning it,
all the dots come together.

60
00:04:35.040 --> 00:04:36.890
That's using the Force Layout.

61
00:04:36.890 --> 00:04:40.421
I'm making them come together, and

62
00:04:40.421 --> 00:04:44.370
then there's specific positions
that they're going to, and

63
00:04:44.370 --> 00:04:49.660
then it snaps into the star and
then once you scroll a little

64
00:04:49.660 --> 00:04:55.180
bit it whizzes out and then as you
scroll all of this is bouncing.

65
00:04:55.180 --> 00:04:58.712
It's actually this force
called force menu body, and

66
00:04:58.712 --> 00:05:03.087
I'm just telling it like just apply
a bunch of repulsion around it,

67
00:05:03.087 --> 00:05:06.189
repulsions to push them
apart from each other.

68
00:05:06.189 --> 00:05:10.286
And then, it snaps back and

69
00:05:10.286 --> 00:05:14.950
then it goes into this view.

70
00:05:14.950 --> 00:05:19.460
But even calculating and this is what I
was mentioning earlier about being like

71
00:05:19.460 --> 00:05:24.310
okay this set of nodes should focus around
this center point, and center point, and

72
00:05:24.310 --> 00:05:25.490
this center point.

73
00:05:25.490 --> 00:05:32.994
So this is like all of the nodes group
by other lines grouped by their song.

74
00:05:32.994 --> 00:05:38.843
And so I use D3 force to calculate
the positions of all these.

75
00:05:38.843 --> 00:05:45.910
So that's basically to use T3 force
to calculate positions for nodes.

76
00:05:45.910 --> 00:05:47.830
And it's very versatile and

77
00:05:47.830 --> 00:05:51.270
it's very awesome.
&gt;&gt; Speaker 2: Is positioning using

78
00:05:51.270 --> 00:05:54.080
force layout deterministic?

79
00:05:54.080 --> 00:06:00.140
Is there any randomness to it or?
&gt;&gt; Shirley Wu: Okay, so

80
00:06:00.140 --> 00:06:04.798
by positioning they don't mean this force,
the focus

81
00:06:04.798 --> 00:06:10.070
position, but just positioning in general.
&gt;&gt; Speaker 2: That's right.

82
00:06:10.070 --> 00:06:13.410
&gt;&gt; Shirley Wu: Great question, so

83
00:06:13.410 --> 00:06:18.240
with the force layout
if you give it an X and

84
00:06:18.240 --> 00:06:21.200
Y to start with,
it will start with that X and Y.

85
00:06:21.200 --> 00:06:24.700
And then,
it will calculate a quote on quote,

86
00:06:24.700 --> 00:06:29.000
the best set of positions,
most optimal layout it can.

87
00:06:29.000 --> 00:06:34.527
If you don't provide it with X and
Y attributes to start

88
00:06:34.527 --> 00:06:40.175
with then D3 just like randomly
generates an X and Ys for

89
00:06:40.175 --> 00:06:45.702
you, and then converges on
a lay out starting with that

90
00:06:45.702 --> 00:06:52.119
randomly position instead of nodes, yeah.
&gt;&gt; Speaker 2: Excellent okay,

91
00:06:52.119 --> 00:06:54.270
so that's very good.

92
00:06:54.270 --> 00:06:58.570
The next question is,
is there a performance impact for

93
00:06:58.570 --> 00:07:03.930
force layout especially on mobile devices?
&gt;&gt; Shirley Wu: Yes [LAUGH] as you

94
00:07:03.930 --> 00:07:08.800
can imagine what I was saying
before is it loops through.

95
00:07:08.800 --> 00:07:13.660
Basically so D3 is smart in that

96
00:07:13.660 --> 00:07:19.470
is uses a quatri underneath the hood so
then it's not it's at least not

97
00:07:19.470 --> 00:07:24.540
o of n squared, it's, so at least,

98
00:07:24.540 --> 00:07:29.650
as it goes through all of the notes,
it's not going through everything twice.

99
00:07:29.650 --> 00:07:34.752
Or wait, n squared, it's so,

100
00:07:34.752 --> 00:07:38.220
I think it's, and log in.

101
00:07:38.220 --> 00:07:43.600
But even then, you can imagine, it loops
through all of the nodes on each tick, and

102
00:07:43.600 --> 00:07:50.280
then it ticks for a thousands of times,
that's super, super resource intensive.

103
00:07:50.280 --> 00:07:54.610
And I think performance starts degrading.

104
00:07:56.210 --> 00:08:00.900
After maybe, I want to say 1,000 nodes,
or a few thousand nodes, or

105
00:08:00.900 --> 00:08:02.690
something like that, on desktop.

106
00:08:02.690 --> 00:08:05.460
And on mobile it's worse, yeah.
&gt;&gt; Speaker 2: So

107
00:08:05.460 --> 00:08:10.570
a follow up question would be, is there a
sneaky cheap and free way to get a forced

108
00:08:10.570 --> 00:08:16.760
layout to converge faster?
&gt;&gt; Shirley Wu: Yes so, there is.

109
00:08:16.760 --> 00:08:21.539
So I think I don't remember of

110
00:08:21.539 --> 00:08:26.516
the top of my head the, yes.

111
00:08:26.516 --> 00:08:29.851
One way is you can just loop through,

112
00:08:29.851 --> 00:08:34.261
like you can just like
do loop 1,000 times,

113
00:08:34.261 --> 00:08:39.140
and then on each loop,
just call simulation.tick.

114
00:08:39.140 --> 00:08:44.250
And that basically forces
a tick calculation.

115
00:08:44.250 --> 00:08:47.020
And then that's only, you can be like,

116
00:08:47.020 --> 00:08:50.740
tick 100 times or tick 1,000 times or
something like that.

117
00:08:51.970 --> 00:08:56.887
And, although it's not like100%.

118
00:08:56.887 --> 00:09:02.558
It's not as optimal as if you had
just let it run the whole time,

119
00:09:02.558 --> 00:09:10.060
but I find that usually by 1,000 ticks
it's gotten to a pretty decent layout.

120
00:09:10.060 --> 00:09:13.619
And then 1,000 ticks is pretty quick.

121
00:09:13.619 --> 00:09:17.020
I think it finishes within a second or
two.

122
00:09:17.020 --> 00:09:19.780
So that's one of the things I've
seen often done in version three.

123
00:09:19.780 --> 00:09:23.360
And I think in version four,
what you can also do is,

124
00:09:23.360 --> 00:09:27.860
there's this concept called alpha,
that you can read about in my blog.

125
00:09:27.860 --> 00:09:31.700
But it's essentially the cooling
perimeter, and you can specify an alpha

126
00:09:31.700 --> 00:09:37.680
min to have the force simulation end
earlier than it's originally intended.

127
00:09:37.680 --> 00:09:39.270
So it's called alpha min, yeah.

