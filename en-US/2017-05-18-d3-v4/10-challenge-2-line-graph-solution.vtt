WEBVTT

1
00:00:00.350 --> 00:00:04.360
&gt;&gt; Shirley Wu: All this exercise is,
is that same data set with our cities and

2
00:00:04.360 --> 00:00:05.370
temperatures and dates.

3
00:00:05.370 --> 00:00:11.940
Yeah, just get your previous exercise up,
and then we will figure out how to turn

4
00:00:11.940 --> 00:00:17.080
this bar chart into that line
chart in only a few magical steps.

5
00:00:17.080 --> 00:00:19.380
Okay, let's figure this out
together exactly what we need.

6
00:00:19.380 --> 00:00:24.576
So we still need our scales,
&gt;&gt; Shirley Wu: But

7
00:00:24.576 --> 00:00:29.080
we actually, I think don't need our height
scale anymore, so we can delete that.

8
00:00:29.080 --> 00:00:32.140
Then we actually fork this, okay.

9
00:00:32.140 --> 00:00:34.990
So we don't need that
height scale anymore.

10
00:00:36.010 --> 00:00:38.250
And let's actually delete our rectangles,

11
00:00:38.250 --> 00:00:39.840
because we don't need
the rectangles anymore.

12
00:00:46.284 --> 00:00:49.397
&gt;&gt; Shirley Wu: So does anyone wanna tell
me what I should be doing to create that

13
00:00:49.397 --> 00:00:50.380
one line?

14
00:00:50.380 --> 00:00:51.230
Any brave souls?

15
00:00:53.790 --> 00:00:58.060
&gt;&gt; Speaker 2: You'll have to create
a path to append to the SVG.

16
00:00:58.060 --> 00:01:01.667
&gt;&gt; Shirley Wu: Yeah,
do I need to enter append?

17
00:01:01.667 --> 00:01:03.794
&gt;&gt; Speaker 2: I don't know because
I don't know how paths work in SVG.

18
00:01:03.794 --> 00:01:08.370
&gt;&gt; Shirley Wu: Okay, so paths work
exactly like how recs have been working.

19
00:01:08.370 --> 00:01:13.910
And it's basically just another SBG
element and we do want to append.

20
00:01:13.910 --> 00:01:17.746
But the reason why we won't
need to append anymore or for

21
00:01:17.746 --> 00:01:21.914
this particular exercises is
because we only need one path.

22
00:01:21.914 --> 00:01:25.717
And so, I mean like you cut up like and
to append one path,

23
00:01:25.717 --> 00:01:28.730
you know exactly how many paths you need.

24
00:01:28.730 --> 00:01:35.280
You only want to use enter
append when you have data sets,

25
00:01:35.280 --> 00:01:40.328
and you don't know how
many paths you need,

26
00:01:40.328 --> 00:01:43.338
or rectangles you needs?

27
00:01:43.338 --> 00:01:45.589
If you only need one, you can just append.

28
00:01:45.589 --> 00:01:47.649
So that's what we'll do.

29
00:01:47.649 --> 00:01:52.221
We'll append a path, and
you'll see nothing shows up.

30
00:02:02.366 --> 00:02:04.074
&gt;&gt; Shirley Wu: And
we need that d attribute.

31
00:02:07.853 --> 00:02:11.353
&gt;&gt; Shirley Wu: And right now, we don't
know what to do with that d attribute.

32
00:02:11.353 --> 00:02:15.806
So let's create our,

33
00:02:21.044 --> 00:02:26.254
&gt;&gt; Shirley Wu: d3.line and then help me.

34
00:02:26.254 --> 00:02:29.820
How do I specify how to get the x for
the line?

35
00:02:32.980 --> 00:02:35.357
Did I phrase that correctly?

36
00:02:35.357 --> 00:02:40.404
Okay, d 3 dot line and
then how do I tell a d

37
00:02:40.404 --> 00:02:45.610
3 dot line to get an x
value out of the data.

38
00:02:47.150 --> 00:02:49.320
&gt;&gt; Speaker 2: That's gonna be the date.

39
00:02:49.320 --> 00:02:56.450
&gt;&gt; Shirley Wu: Okay, so
I want to do the exact function is .x,

40
00:02:56.450 --> 00:03:04.210
and then I just say return, but
wrap the date in the xScale, right?

41
00:03:04.210 --> 00:03:05.470
&gt;&gt; Speaker 2: Yes.

42
00:03:05.470 --> 00:03:09.864
&gt;&gt; Shirley Wu: I return xScale d.date,
and then for

43
00:03:09.864 --> 00:03:15.788
our y,
&gt;&gt; Shirley Wu: We use the yScale,

44
00:03:15.788 --> 00:03:18.890
and then it was dcity.

45
00:03:18.890 --> 00:03:23.819
So, this looks pretty much that function,
pretty much the accessor looks

46
00:03:23.819 --> 00:03:27.666
pretty much exactly like the one
we used for the bar chart.

47
00:03:27.666 --> 00:03:32.030
And the only thing is that we
with d3 line, you tell it .x and

48
00:03:32.030 --> 00:03:36.840
.y instead of .otter,
cuz it's a completely different thing.

49
00:03:36.840 --> 00:03:42.680
But this is how you tell a d3 line how
to get the x and y out of our data.

50
00:03:45.070 --> 00:03:50.600
And now,
all we got to do is theoretically that,

51
00:03:50.600 --> 00:03:53.800
and it's not working because I
totally forgot to bind data.

52
00:03:55.400 --> 00:03:57.830
Wait, no, that's not it, hold on.

53
00:03:57.830 --> 00:04:01.780
It's not working because line is a
function, and we need to pass in our data.

54
00:04:06.612 --> 00:04:08.080
&gt;&gt; Shirley Wu: Ta da.

55
00:04:10.370 --> 00:04:18.691
&gt;&gt; Shirley Wu: Are you guys like, this is
not what I was expecting, [LAUGH] what?

56
00:04:18.691 --> 00:04:20.658
&gt;&gt; Speaker 3: Why is it closed?

57
00:04:20.658 --> 00:04:24.748
&gt;&gt; Shirley Wu: Yeah, so, I think,
I actually don't know off the top of

58
00:04:24.748 --> 00:04:28.683
my head, if d3 closes the path
automatically for us.

59
00:04:28.683 --> 00:04:31.807
So how you close the path is with z, but

60
00:04:31.807 --> 00:04:37.289
I actually don't know if d3 line
gives you back something with z.

61
00:04:37.289 --> 00:04:40.887
I think it actually, yeah?

62
00:04:40.887 --> 00:04:42.871
&gt;&gt; Speaker 2: I think it does close, but

63
00:04:42.871 --> 00:04:49.170
I think the reason why it did is because
the default on chrome is to fill it right?

64
00:04:49.170 --> 00:04:54.860
&gt;&gt; Shirley Wu: I think the default on most
browsers is to fill it with black, so

65
00:04:54.860 --> 00:04:59.040
for pads usually whether its closed or
not,

66
00:04:59.040 --> 00:05:03.130
most browsers will try to fill it with
the default color which is black.

67
00:05:03.130 --> 00:05:07.390
So what you want to do is
actually tell it I want no fill,

68
00:05:09.040 --> 00:05:15.200
and then the default from those browsers
is, I speak like I know most browsers.

69
00:05:15.200 --> 00:05:16.480
I only use Chrome usually.

70
00:05:18.040 --> 00:05:22.490
Is a stroke none so
then you have to specify a color for

71
00:05:22.490 --> 00:05:26.680
your stroke, and
then that's what we were expecting.

72
00:05:28.220 --> 00:05:31.610
And then if you wanna go crazy with it,

73
00:05:31.610 --> 00:05:35.860
you can I don't know this
off the top of my head.

74
00:05:35.860 --> 00:05:38.975
So I actually,
I have to look at the documentation.

75
00:05:38.975 --> 00:05:41.710
But does everybody have this?

76
00:05:41.710 --> 00:05:48.106
Like I'm going to switch to
a different tab really quickly.

77
00:05:48.106 --> 00:05:52.942
Let's see the tab is d3.shape,

78
00:05:52.942 --> 00:05:56.590
that's d3.scale.

79
00:05:56.590 --> 00:06:04.164
This is axis I know d3.shape.

80
00:06:06.050 --> 00:06:06.990
Okay, so

81
00:06:06.990 --> 00:06:12.850
that curve thing I mentioned earlier,
&gt;&gt; Shirley Wu: Just kind of really fun.

82
00:06:12.850 --> 00:06:17.205
So all I have to do is say .curve like for
example,

83
00:06:17.205 --> 00:06:21.163
this one is giving me
like curveCatmullRom.

84
00:06:21.163 --> 00:06:26.059
Which is like something down
here curveCatmullRom, yeah,

85
00:06:26.059 --> 00:06:29.997
so this is the curve that
we will be using for fun.

86
00:06:29.997 --> 00:06:36.200
So .curved3.curveCatmullRom we
can take out alpha for now.

87
00:06:37.280 --> 00:06:39.070
So let's just press in this curve.

88
00:06:39.070 --> 00:06:43.020
And then this case we are either
like slide change where there is

89
00:06:43.020 --> 00:06:45.600
because we have so many data points,
it's kind of hard to see.

90
00:06:45.600 --> 00:06:49.930
But do you guys see how it went from
a straight line between points,

91
00:06:49.930 --> 00:06:51.110
so a slight curve.

92
00:06:51.110 --> 00:06:52.310
Can you see the slight curve?

93
00:06:53.890 --> 00:07:02.932
I promise you it's there, [LAUGH]
&gt;&gt; Shirley Wu: Actually,

94
00:07:02.932 --> 00:07:08.210
maybe if I just be like slice .data,

95
00:07:08.210 --> 00:07:14.010
if I do .slice I should be able to get 0.

96
00:07:14.010 --> 00:07:18.560
Like if I just slice 0 to 10,
maybe not 10.

97
00:07:21.193 --> 00:07:22.400
&gt;&gt; Shirley Wu: That's not what I mean.

98
00:07:25.490 --> 00:07:28.800
That's definitely not what I mean,
I'm really bad with JavaScript,

99
00:07:28.800 --> 00:07:30.470
I use a lot of bow dash.

100
00:07:30.470 --> 00:07:31.005
How do I like?

101
00:07:31.005 --> 00:07:36.670
If I want the first like ten values,
how do I do that?

102
00:07:38.381 --> 00:07:39.777
&gt;&gt; Shirley Wu: data.

103
00:07:44.824 --> 00:07:45.835
&gt;&gt; Shirley Wu: .slice, right?

104
00:07:45.835 --> 00:07:48.888
&gt;&gt; Speaker 4: Yeah 0, 10.

105
00:07:48.888 --> 00:07:50.400
&gt;&gt; Shirley Wu: Right?

106
00:07:50.400 --> 00:07:51.724
And that's what's
returning to me right now.

107
00:07:51.724 --> 00:07:55.613
&gt;&gt; Speaker 4: But it returns the-
&gt;&gt; Shirley Wu: And

108
00:07:55.613 --> 00:07:58.073
then I have to do data.4h.

109
00:07:58.073 --> 00:08:01.809
Wait, that's not ten though.

110
00:08:01.809 --> 00:08:04.010
&gt;&gt; Speaker 5: You have to
define a new variable that is-

111
00:08:04.010 --> 00:08:05.318
&gt;&gt; Speaker 2: Yeah, why not just make it

112
00:08:05.318 --> 00:08:06.726
twice-
&gt;&gt; Speaker 4: Without the-

113
00:08:06.726 --> 00:08:07.894
&gt;&gt; Shirley Wu: I'm just going to be

114
00:08:07.894 --> 00:08:09.134
a really bad person.

115
00:08:09.134 --> 00:08:11.727
Yay, a hundred.

116
00:08:11.727 --> 00:08:17.753
Yeah, [LAUGH] Yeah,
do you guys see the curves now?

117
00:08:20.338 --> 00:08:21.851
&gt;&gt; Shirley Wu: There's one time for

118
00:08:21.851 --> 00:08:26.895
one of my projects I spent way too long
just looking at all of the curves,

119
00:08:26.895 --> 00:08:31.196
and how that [LAUGH] looks like for,
I think there's one.

120
00:08:31.196 --> 00:08:36.018
My current favorite curve is not a curve
at all, and it's actually a block.

121
00:08:36.018 --> 00:08:43.190
Wait, hold on, curve step, yeah.

122
00:08:43.190 --> 00:08:49.020
Yeah, look at that, makes me feel like
I'm in a weird Lego set or something.

123
00:08:49.020 --> 00:08:53.271
Yeah, life is fun with d3, and

124
00:08:53.271 --> 00:08:57.530
that's super simple, right?

125
00:08:57.530 --> 00:09:01.986
That's just that one extra line
additional where as like if you look

126
00:09:01.986 --> 00:09:06.598
underneath the hud the path d
attributes vastly different underneath

127
00:09:06.598 --> 00:09:11.150
the hud to render all of these
different curves and steps and, yeah.

128
00:09:14.780 --> 00:09:16.890
So there it is D3 shape.

129
00:09:16.890 --> 00:09:19.950
Do you guys want to take a quick break?

130
00:09:21.380 --> 00:09:25.265
And because the next thing we're going
to get into is this thing called Update

131
00:09:25.265 --> 00:09:26.500
&amp; Exit.

132
00:09:26.500 --> 00:09:30.570
So it's the update and
exit of the enter update exit.

133
00:09:30.570 --> 00:09:33.300
It's gonna be a big one,
so ten minute break?

