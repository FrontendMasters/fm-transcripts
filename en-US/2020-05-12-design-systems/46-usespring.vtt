WEBVTT

1
00:00:00.000 --> 00:00:01.890
react-spring is an awesome
animation library.

2
00:00:01.890 --> 00:00:04.502
It is physics-based.

3
00:00:04.502 --> 00:00:07.670
It uses React hooks to
create complex animations.

4
00:00:07.670 --> 00:00:09.720
And it's super fun, super easy to use.

5
00:00:11.920 --> 00:00:14.674
Kind of the bread and butter hook,
the main hook is called useSpring.

6
00:00:14.674 --> 00:00:19.491
So we can actually use this to transform
different CSS properties on an HTML

7
00:00:19.491 --> 00:00:20.185
element.

8
00:00:20.185 --> 00:00:21.838
So you can see here we're defining from.

9
00:00:21.838 --> 00:00:24.316
These are the properties where
it's going to start, and

10
00:00:24.316 --> 00:00:26.060
to is where it's going to end.

11
00:00:26.060 --> 00:00:28.572
And react-spring can interpolate
the values in between.

12
00:00:28.572 --> 00:00:31.613
We don't need to worry about
setting all those different steps.

13
00:00:35.661 --> 00:00:38.307
So you can also transition
just on enter and exit,

14
00:00:38.307 --> 00:00:40.575
as well as relative to your React state.

15
00:00:40.575 --> 00:00:44.340
In this example here, we can see we
actually use our react-spring state

16
00:00:44.340 --> 00:00:45.890
to trigger different states.

17
00:00:45.890 --> 00:00:48.650
So if our modal is shown,
we want it to be fully visible.

18
00:00:48.650 --> 00:00:50.090
We want it to be in the viewport.

19
00:00:50.090 --> 00:00:52.174
We want it to be perfectly opaque.

20
00:00:52.174 --> 00:00:55.482
If the modal is supposed to be hidden,
we don't want that shown at all.

21
00:00:55.482 --> 00:00:59.850
And this is kind of different from
an animation that would happen once.

22
00:01:00.970 --> 00:01:03.230
So when you visit a page, for example,

23
00:01:03.230 --> 00:01:05.820
maybe you wanna trigger
an animation just one time.

24
00:01:05.820 --> 00:01:09.311
So this is what I wanted to transition to,
but it also works really,

25
00:01:09.311 --> 00:01:11.170
really well with your React state.

26
00:01:11.170 --> 00:01:19.530
So it can be done in relation to what
kind of data that your state has.

27
00:01:19.530 --> 00:01:22.921
And all we need to do to get this to
render is we define our animation here

28
00:01:22.921 --> 00:01:26.322
with the useSpring hook,
define what properties we're animating.

29
00:01:26.322 --> 00:01:30.940
And then whatever elements are going to be
animated, we just need to set animated..

30
00:01:30.940 --> 00:01:33.645
So, animated.div, animated.h1.

31
00:01:33.645 --> 00:01:36.420
That tells react-spring,
this is the item that's gonna be animated.

32
00:01:38.200 --> 00:01:41.972
And once we pick that element, all we need
to do is pass in our animation that we

33
00:01:41.972 --> 00:01:44.308
just defined with the style prop,
that's it.

34
00:01:46.921 --> 00:01:49.570
Let's go to a CodePen example.

35
00:01:49.570 --> 00:01:53.562
At the bottom, it says this Code Sandbox,
that's the link you're gonna wanna go to.

36
00:01:53.562 --> 00:01:57.015
So the first thing we can see down here,
react-spring has already been installed.

37
00:01:57.015 --> 00:02:00.364
That's great, so what are we gonna do?

38
00:02:00.364 --> 00:02:02.485
This emoji carousel, first of all,
let's get rid of this.

39
00:02:02.485 --> 00:02:06.135
In the index file, change this to,
I'm sorry, not index.

40
00:02:06.135 --> 00:02:10.665
In our app, we're showing the wrong thing,
let's change this to FadeIn.

41
00:02:10.665 --> 00:02:11.814
It's rendering the wrong thing.

42
00:02:15.691 --> 00:02:17.912
Okay, so what are we gonna do?

43
00:02:17.912 --> 00:02:22.532
We're going to animate text in and
out, depending upon our state.

44
00:02:22.532 --> 00:02:25.070
So we've got a button that
says Toggle animation,

45
00:02:25.070 --> 00:02:28.030
and we've got a paragraph that says,
Animate me on click.

46
00:02:29.170 --> 00:02:31.612
Okay, this is kind of what it looks like.

47
00:02:31.612 --> 00:02:35.096
So the first thing that we
need to do is set some state.

48
00:02:35.096 --> 00:02:41.927
So const [showText,
setShowText] = useState.

49
00:02:44.205 --> 00:02:46.445
Let's say (true),
we'll have it showing by default.

50
00:02:48.115 --> 00:02:53.828
Let's make our animation, so
const animation = useSpring.

51
00:02:53.828 --> 00:02:55.225
Okay, it's gonna take an object.

52
00:02:57.681 --> 00:03:02.413
So let's do opacity, so
let's say if we're showing our text,

53
00:03:02.413 --> 00:03:04.436
we want this to be visible.

54
00:03:04.436 --> 00:03:07.570
So opacity 1 if we're showing.

55
00:03:07.570 --> 00:03:09.076
And otherwise, let's set it to 0.

56
00:03:11.483 --> 00:03:15.642
And I said in the instructions that I
wanted this to actually slide in from

57
00:03:15.642 --> 00:03:18.360
the top, 30% on show, so let's do that.

58
00:03:18.360 --> 00:03:19.420
Let's do a transform.

59
00:03:20.700 --> 00:03:25.150
And if our text is showing,
we're gonna translate our y.

60
00:03:25.150 --> 00:03:28.072
So it's gonna slide in,
so 'translateY(0)'.

61
00:03:28.072 --> 00:03:30.542
If it's showing,
we want it to be in its natural position.

62
00:03:33.042 --> 00:03:35.992
If it's not, let's animate it out, -30%.

63
00:03:35.992 --> 00:03:38.150
So it'll slide out to the top.

64
00:03:39.340 --> 00:03:40.154
So what do we wanna animate?

65
00:03:40.154 --> 00:03:45.254
We wanna animate this text, right, so
it has to be prefaced by animated.p.

66
00:03:48.662 --> 00:03:51.814
And we have to pass this in the style
attribute, so style=[animation].

67
00:03:55.705 --> 00:04:00.437
Now we just need to update our
style onClick, so onClick,

68
00:04:00.437 --> 00:04:04.311
we'll do setShowText, and we'll toggle it.

69
00:04:04.311 --> 00:04:07.982
So whatever ShowText is,
let's do the opposite.

70
00:04:11.822 --> 00:04:15.326
So it's not actually
transitioning our transform, but

71
00:04:15.326 --> 00:04:19.980
it is actually transitioning the opacity,
so that's really good.

72
00:04:19.980 --> 00:04:21.111
There it is.

73
00:04:21.111 --> 00:04:25.100
Sometimes CodeSandbox is a little buggy,
where it won't refresh properly.

74
00:04:26.380 --> 00:04:27.388
Okay, let's put that backup.

75
00:04:27.388 --> 00:04:29.610
So this is saying if our text is showing,

76
00:04:29.610 --> 00:04:32.020
we want to translate that
down to its natural position.

77
00:04:32.020 --> 00:04:34.242
Otherwise, we want to feed it out and
slide out.

78
00:04:34.242 --> 00:04:35.902
Okay, so that's just useSpring.

79
00:04:35.902 --> 00:04:37.800
Again, you can hook into your state.

80
00:04:37.800 --> 00:04:40.483
You can set whatever CSS
properties you want to transition.

81
00:04:40.483 --> 00:04:43.372
And then just tell react-spring,
this is the element we want to animate.

