WEBVTT

1
00:00:00.040 --> 00:00:01.650
So what types of fonts?

2
00:00:01.650 --> 00:00:04.930
Serif fonts have short lines or
strokes on the ends of their letters.

3
00:00:04.930 --> 00:00:09.070
So Times New Roman is just the default
serif font that everyone knows of.

4
00:00:09.070 --> 00:00:11.686
Droid Serif,
anything that's a serif is a serif font.

5
00:00:14.050 --> 00:00:18.026
Again, Sans-serif or Sans-serif, sans
means without in French, so they don't

6
00:00:18.026 --> 00:00:21.730
have lines on the ends of their letters or
strokes on the ends of their letters.

7
00:00:22.880 --> 00:00:27.179
So IBM Plex Sans, PT Sans, Helvetia,
those are all Sans-serif fonts.

8
00:00:27.179 --> 00:00:31.019
And serif fonts are typically very
traditional, you'll probably see it in

9
00:00:31.019 --> 00:00:35.042
printed newspapers or things that are a
little bit more prestigious, I guess.

10
00:00:35.042 --> 00:00:38.090
And then,
Sans-serif are gonna be more modern, so

11
00:00:38.090 --> 00:00:40.376
you might see this on a technical blog or

12
00:00:40.376 --> 00:00:45.105
another website that's a little more
colloquial, it's a little more casual.

13
00:00:45.105 --> 00:00:48.978
We've got Monospaced fonts, which are our
favorites, we use them in our IDEs and

14
00:00:48.978 --> 00:00:50.470
our text editors.

15
00:00:50.470 --> 00:00:52.510
So these are fonts where the letters and

16
00:00:52.510 --> 00:00:55.790
the characters occupy
the same amount of space.

17
00:00:55.790 --> 00:00:57.394
So in other fonts like you'll see here,

18
00:00:57.394 --> 00:00:59.431
like the letters actually
span different widths.

19
00:00:59.431 --> 00:01:02.324
In monospaced fonts, every letter
takes up the same amount of space.

20
00:01:05.683 --> 00:01:07.434
Let's talk about font measurements for
a second.

21
00:01:08.650 --> 00:01:12.941
We're all familiar with pixels, so
pixels are the units used by designers and

22
00:01:12.941 --> 00:01:14.910
we often use it throughout our UIs.

23
00:01:14.910 --> 00:01:18.051
And there's still some debate
as to whether pixels or Or

24
00:01:18.051 --> 00:01:19.533
Rem is the best unit to use.

25
00:01:19.533 --> 00:01:22.786
We're gonna talk about all three today,
so pixels can be used but

26
00:01:22.786 --> 00:01:25.520
they traditionally did pose
an accessibility issue.

27
00:01:25.520 --> 00:01:27.280
So let's talk about that.

28
00:01:27.280 --> 00:01:30.640
We've got And we've got Rem, so
these are the relative units.

29
00:01:31.880 --> 00:01:35.280
So Rem is actually going to be relative
to the document body, I believe.

30
00:01:35.280 --> 00:01:37.780
It's either HTML element or
the the body element.

31
00:01:37.780 --> 00:01:42.032
We're gonna set this when we actually
code our our global styles today.

32
00:01:42.032 --> 00:01:46.300
And anything that we set a Rem
value on is going to be relative.

33
00:01:46.300 --> 00:01:50.260
So like if we have 16 pixels
on our HTML element, and

34
00:01:50.260 --> 00:01:53.560
we set 1.2 Rem on a text
element like a header, for

35
00:01:53.560 --> 00:01:58.560
example, it's gonna multiply 1.2 times
that base 16 value, and why is that great?

36
00:01:58.560 --> 00:02:02.480
That's really great because users who
are visually impaired can go into their

37
00:02:02.480 --> 00:02:05.280
browsers and
change the default base size of the font.

38
00:02:05.280 --> 00:02:08.240
So typically, it would be 16 pixels,
I believe, but

39
00:02:08.240 --> 00:02:11.560
if I'm a user who has a visual impairment
and I go into my browser settings and

40
00:02:11.560 --> 00:02:14.890
I change that to 20 pixels, by using Rem,

41
00:02:14.890 --> 00:02:20.960
I'm actually able to adjust the relative
size of all of my text content.

42
00:02:20.960 --> 00:02:24.970
You shouldn't use Rem and For spacing,
those can get a little weird with layouts,

43
00:02:24.970 --> 00:02:26.780
but they're really good for font.

44
00:02:26.780 --> 00:02:29.375
In relation is going to be
relative to the nearest

45
00:02:29.375 --> 00:02:33.010
parent element that has
a designated pixel value.

46
00:02:33.010 --> 00:02:38.400
So those are a little bit more,
they're not as standardized as like Rem.

47
00:02:38.400 --> 00:02:40.930
You set it on the base, you know
everything is gonna be consistent.

48
00:02:40.930 --> 00:02:42.529
If you set it on a parent
somewhere in the DOM,

49
00:02:42.529 --> 00:02:45.030
it's gonna be a little bit harder
to calculate what that's gonna be.

