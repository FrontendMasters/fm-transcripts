WEBVTT

1
00:00:00.460 --> 00:00:03.940
Once you prioritize your components,
we're gonna start designing them,

2
00:00:03.940 --> 00:00:05.390
we're gonna start building them.

3
00:00:05.390 --> 00:00:08.090
And before we add them to our design kit,

4
00:00:08.090 --> 00:00:11.490
we wanna actually make sure that
they meet certain criteria, right?

5
00:00:11.490 --> 00:00:14.370
The whole point of a system is
to do things the right way,

6
00:00:14.370 --> 00:00:19.140
to be accessible to have everything we
need to know before we develop them.

7
00:00:19.140 --> 00:00:24.000
So, in terms of a checklist, I like having
a checklist to say, hey, can all users,

8
00:00:24.000 --> 00:00:25.770
regardless of circumstance,
use this component?

9
00:00:26.820 --> 00:00:28.000
How should a user, or

10
00:00:28.000 --> 00:00:30.630
how should a component respond when
a user actually interacts with it?

11
00:00:30.630 --> 00:00:31.970
How can they interact with it?

12
00:00:33.780 --> 00:00:35.600
When and
where should this component be used?

13
00:00:35.600 --> 00:00:39.180
Where would I use a link versus a tertiary
button which looks just like a link?

14
00:00:39.180 --> 00:00:41.605
What's the differentiation here?

15
00:00:41.605 --> 00:00:45.186
Are all of the different states, like
the default or neutral state, the hover,

16
00:00:45.186 --> 00:00:47.200
focus, disabled, or all of those defined?

17
00:00:48.850 --> 00:00:51.440
Does this component rely upon any content?

18
00:00:51.440 --> 00:00:54.500
If so, you might wanna talk
to like a content editor.

19
00:00:54.500 --> 00:00:56.215
How about customization?

20
00:00:56.215 --> 00:00:58.414
If you have different products
under a brand identity,

21
00:00:58.414 --> 00:01:00.660
you might have different colors maybe for
each product,

22
00:01:00.660 --> 00:01:02.700
what aspects of our
components can be customized?

23
00:01:02.700 --> 00:01:07.100
And then what happens if I resize
a browser, or if I'm on a mobile device?

24
00:01:07.100 --> 00:01:11.670
What are the differentiating
characteristics on those different

25
00:01:11.670 --> 00:01:13.400
resolutions.

26
00:01:13.400 --> 00:01:16.018
And once it gets through design checklist,
we've then got to build it.

27
00:01:16.018 --> 00:01:18.620
And this is pretty similar
accessibility is gonna be the same.

28
00:01:18.620 --> 00:01:20.630
We have to make sure that
it's keyboard accessible,

29
00:01:20.630 --> 00:01:22.335
I work with assistive technology.

30
00:01:22.335 --> 00:01:26.349
It has to be responsive, so we need to
make sure we implement those designs.

31
00:01:27.390 --> 00:01:31.100
Completion, does actually account for
all aspects of design.

32
00:01:31.100 --> 00:01:34.124
We often get high fidelity
designs from our designers and

33
00:01:34.124 --> 00:01:37.152
maybe it's not pixel perfect,
that's a huge problem.

34
00:01:37.152 --> 00:01:39.728
If you think about it,
all these little pixels, they add up and

35
00:01:39.728 --> 00:01:41.050
they can make a big difference.

36
00:01:42.689 --> 00:01:45.100
Error handling and prop validation.

37
00:01:45.100 --> 00:01:48.790
So, what happens if someone passes
around prop we're using TypeScript or

38
00:01:48.790 --> 00:01:49.800
we're using prop types?

39
00:01:49.800 --> 00:01:53.360
How do we validate the data
coming into our components and

40
00:01:53.360 --> 00:01:55.490
what happens if someone passes
the wrong kind of data?

41
00:01:57.020 --> 00:01:59.700
Also, do all of these work across
all the supported browsers or

42
00:01:59.700 --> 00:02:01.760
do we need to include polyfills somewhere.

43
00:02:01.760 --> 00:02:03.273
This is gonna vary depending
upon your company.

44
00:02:03.273 --> 00:02:08.150
You probably have some set of browsers
that you have to be compatible with.

45
00:02:08.150 --> 00:02:09.070
So just check on them.

