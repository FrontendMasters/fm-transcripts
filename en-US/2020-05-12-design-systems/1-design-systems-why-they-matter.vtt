WEBVTT

1
00:00:00.130 --> 00:00:01.633
Well, what is a design system?

2
00:00:01.633 --> 00:00:04.191
There's no industry definition for
a design system.

3
00:00:04.191 --> 00:00:07.518
But if you hear a designer
talking about a design system,

4
00:00:07.518 --> 00:00:11.332
they're most likely talking about
the UI kit, the foundational

5
00:00:11.332 --> 00:00:15.995
elements like color and typography,
grid, iconography, things like that.

6
00:00:15.995 --> 00:00:17.997
And when you hear an engineer
discuss design systems,

7
00:00:17.997 --> 00:00:20.754
they're probably referring to
the component library in the style guide.

8
00:00:22.850 --> 00:00:25.726
But really a design system
is kinda all these things.

9
00:00:25.726 --> 00:00:29.404
It incorporates pieces from design,
pieces from engineering all wrapped up.

10
00:00:32.970 --> 00:00:34.249
So why do design systems matter?

11
00:00:34.249 --> 00:00:35.071
Why are they important?

12
00:00:35.071 --> 00:00:36.050
Why are we all here today?

13
00:00:37.540 --> 00:00:39.866
So everyone, regardless of circumstance,

14
00:00:39.866 --> 00:00:43.365
needs to be able to achieve the same
results from your application.

15
00:00:43.365 --> 00:00:46.613
They don't necessarily have to be able
to do it in the same exact way, but

16
00:00:46.613 --> 00:00:49.565
you have to provide the means for
them to accomplish their tasks.

17
00:00:49.565 --> 00:00:54.308
And design systems are gonna ensure that
you have an accessible color palette,

18
00:00:54.308 --> 00:00:58.768
that your type scale is appropriate
enough where people can actually go and

19
00:00:58.768 --> 00:01:01.987
zoom in on the browser and
actually see your content.

20
00:01:01.987 --> 00:01:04.776
And they have to be able to navigate
your application with a keyboard and

21
00:01:04.776 --> 00:01:06.183
use it with assistive technology.

22
00:01:06.183 --> 00:01:07.780
So design systems help with those.

23
00:01:11.110 --> 00:01:13.710
Design systems facilitate consistency.

24
00:01:13.710 --> 00:01:16.098
So we live in a time when
it's really common for

25
00:01:16.098 --> 00:01:18.986
large enterprise companies
to own multiple products.

26
00:01:18.986 --> 00:01:21.235
If we think of Google,
you could think of G Suite.

27
00:01:21.235 --> 00:01:23.300
If you think of Gmail, Google Flights,

28
00:01:23.300 --> 00:01:25.865
all of those interfaces
kind of all look the same.

29
00:01:25.865 --> 00:01:28.182
You can look at that and say,
that's a Google product.

30
00:01:28.182 --> 00:01:31.679
And that's because they're using material
design which is a design system.

31
00:01:31.679 --> 00:01:35.749
So having a system really
allows your company to

32
00:01:35.749 --> 00:01:40.743
unify your different products and
their brand identity.

33
00:01:40.743 --> 00:01:44.250
Updating is no longer a pain in the butt
when you have multiple products.

34
00:01:44.250 --> 00:01:47.941
You can update a style or an interaction
in one place in your system.

35
00:01:47.941 --> 00:01:50.403
And then,
it'll propagate out to every package or

36
00:01:50.403 --> 00:01:54.025
every products that's using it with
just a simple update to your package.

37
00:01:57.269 --> 00:02:00.408
Responsiveness ,so mobile
devices account for

38
00:02:00.408 --> 00:02:04.692
about half of all web traffic worldwide,
and so we need to make sure

39
00:02:04.692 --> 00:02:09.687
that our interfaces and our components
account for different screen sizes.

40
00:02:09.687 --> 00:02:13.564
This one's a fun one, this isn't something
I can just thought of before, but

41
00:02:13.564 --> 00:02:14.458
this is two fold.

42
00:02:14.458 --> 00:02:19.360
So when you onboard new hires, having
a design system that's well documented

43
00:02:19.360 --> 00:02:22.118
is really a great way
to get them onboarded.

44
00:02:22.118 --> 00:02:25.381
It gives them an intro to all the
technologies and all of the processes for

45
00:02:25.381 --> 00:02:27.730
getting up and running, essentially.

46
00:02:27.730 --> 00:02:31.017
But if you have multiple teams
working on different products, and

47
00:02:31.017 --> 00:02:35.006
you're all using the same design system,
you can take a developer from squad A,

48
00:02:35.006 --> 00:02:37.960
put them on squad B and
there is zero time to get up and going.

49
00:02:37.960 --> 00:02:39.232
So that's really, really useful.

50
00:02:41.760 --> 00:02:46.035
You're probably confused why flexibility
is on here because I just said

51
00:02:46.035 --> 00:02:48.005
consistency is very important.

52
00:02:48.005 --> 00:02:52.317
And flexibility, I mean that's in terms of
setting parameters on the different types

53
00:02:52.317 --> 00:02:55.341
of components that our engineers and
our designers can use.

54
00:02:55.341 --> 00:02:58.543
So you can't just provide one button and
that is it, right?

55
00:02:58.543 --> 00:03:02.336
We need to provide different sizes maybe,
or buttons that have status colors and

56
00:03:02.336 --> 00:03:03.290
things like that.

57
00:03:03.290 --> 00:03:08.414
So by providing boundaries on
the flexibility, we're not restricting our

58
00:03:08.414 --> 00:03:13.787
designers or engineers, but we are giving
them a set of tools that they can use.

59
00:03:13.787 --> 00:03:14.776
And then lastly is speed.

60
00:03:14.776 --> 00:03:18.929
So once you actually have your first
big release, your stable release,

61
00:03:18.929 --> 00:03:23.170
to actually build new features and
design new features is so much faster.

