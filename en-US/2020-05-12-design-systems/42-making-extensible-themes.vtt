WEBVTT

1
00:00:00.000 --> 00:00:01.815
So we have one theme.

2
00:00:01.815 --> 00:00:05.344
Let's go ahead and make a second theme.

3
00:00:05.344 --> 00:00:09.164
I'm gonna copy and paste my entire
theme inside of themes.js, and

4
00:00:09.164 --> 00:00:11.454
I'm gonna call this darkTheme, okay?

5
00:00:11.454 --> 00:00:14.792
If you have designed something in Figma,
I saw some really great designs for

6
00:00:14.792 --> 00:00:17.960
the modals and for the buttons that
actually already were dark themed.

7
00:00:17.960 --> 00:00:18.981
Feel free to do a light theme.

8
00:00:18.981 --> 00:00:20.077
Just do something different,

9
00:00:20.077 --> 00:00:22.445
something that can differentiate
between two different themes.

10
00:00:24.492 --> 00:00:29.166
All right, so I'm gonna change this
to neutral[100], neutral[200], so

11
00:00:29.166 --> 00:00:33.520
we're essentially just kinda like
flopping all these values here.

12
00:00:33.520 --> 00:00:36.507
It's gonna be neutral[300].

13
00:00:36.507 --> 00:00:41.514
My textColor is now gonna be blue[300].

14
00:00:41.514 --> 00:00:46.121
My textColorInverted is
gonna be neutral[100].

15
00:00:48.163 --> 00:00:53.896
My textColor, I lied,
this is gonna be blue[300], okay?

16
00:00:53.896 --> 00:01:00.000
textColorOnPrimary is
also gonna be blue[300].

17
00:01:00.000 --> 00:01:04.199
disabled I'm gonna keep as neutral[400].

18
00:01:04.199 --> 00:01:06.490
textOnDisabled is also gonna be the same.

19
00:01:06.490 --> 00:01:10.580
Our font is the same and I'm just gonna
keep our statuses the same as well.

20
00:01:10.580 --> 00:01:12.910
You'll notice that if I was
actually building a dark theme,

21
00:01:12.910 --> 00:01:15.380
a lot of these colors are not
going to be appropriate.

22
00:01:15.380 --> 00:01:18.029
But we don't need to worry about if
they're accessible or not for today.

23
00:01:18.029 --> 00:01:20.550
If you are building a system,
please make them accessible.

24
00:01:20.550 --> 00:01:22.440
This is kind of just for
demonstration purposes.

25
00:01:25.000 --> 00:01:28.120
So now that we've got two themes,
let's use some state.

26
00:01:28.120 --> 00:01:31.280
Let's add some state to our application
and see if we can make this work.

27
00:01:31.280 --> 00:01:36.865
Okay, so inside of index.js, we're
gonna import {useState} from "react".

28
00:01:40.101 --> 00:01:45.120
We are also going to import our dark theme
and our default theme from our utils.

29
00:01:45.120 --> 00:01:49.710
So darkTheme or whatever your new
theme is, and our defaultTheme.

30
00:01:52.680 --> 00:01:54.460
So right now we're just
returning some JSX.

31
00:01:54.460 --> 00:01:57.270
And if we want to add some state,
it has to be top level.

32
00:01:57.270 --> 00:01:58.570
So I'm gonna refactor this.

33
00:01:58.570 --> 00:01:59.882
Oops, this is gonna be
our return statement.

34
00:01:59.882 --> 00:02:02.412
Here's our JSX we're gonna return.

35
00:02:02.412 --> 00:02:03.436
Now let's add some state.

36
00:02:03.436 --> 00:02:09.687
So const[useDarkTheme and
this is gonna be setUseDarkTheme.

37
00:02:09.687 --> 00:02:12.713
This is React Hooks.

38
00:02:12.713 --> 00:02:14.421
We're gonna initialize this to false.

39
00:02:14.421 --> 00:02:15.997
Okay, so if you haven't worked with Hooks,

40
00:02:15.997 --> 00:02:17.662
I definitely would
recommend checking it out.

41
00:02:17.662 --> 00:02:20.230
useState is kind of the basic one here.

42
00:02:20.230 --> 00:02:24.160
What we're saying is, we want some state,
here's our default value, it's false.

43
00:02:24.160 --> 00:02:27.140
And when you call this, it's gonna
return an array with two items in it.

44
00:02:27.140 --> 00:02:30.420
We are destructuring them out
into two different variables.

45
00:02:30.420 --> 00:02:33.444
This is gonna be our actual state value
and this gonna be our updater function.

46
00:02:37.263 --> 00:02:42.090
So now that we have state, we can actually
go and try to toggle some of this.

47
00:02:42.090 --> 00:02:45.332
So I saw some of you in the chat asking
why we weren't using theme provider.

48
00:02:45.332 --> 00:02:46.911
The short answer is we are.

49
00:02:46.911 --> 00:02:49.300
I just wanted to walk you through
the process of how you would build this

50
00:02:49.300 --> 00:02:50.590
incrementally.

51
00:02:50.590 --> 00:02:54.236
So let's import themeProvider
from styled components.

52
00:02:54.236 --> 00:03:01.430
import {ThemeProvider} from
"styled-components", okay?

53
00:03:01.430 --> 00:03:05.162
ThemeProvider is gonna allow us to
essentially pass our theme down through

54
00:03:05.162 --> 00:03:06.890
all of our different components.

55
00:03:08.630 --> 00:03:12.600
All we have to do now is replace this
wrapping div with ThemeProvider,

56
00:03:12.600 --> 00:03:15.890
and we have to give it a theme
that we want it to actually use.

57
00:03:18.100 --> 00:03:21.041
Well, now we know we've got some
state about which theme we're using.

58
00:03:22.170 --> 00:03:27.070
So let's say our theme,
we're gonna be a JSX expression.

59
00:03:27.070 --> 00:03:32.100
So, if we are using darkTheme,
okay, we wanna use our darkTheme.

60
00:03:32.100 --> 00:03:34.586
Otherwise we want to use our defaultTheme.

61
00:03:34.586 --> 00:03:37.722
Now if you have multiple themes,
maybe you have a bunch of radio buttons,

62
00:03:37.722 --> 00:03:39.200
maybe you have a select dropdown.

63
00:03:39.200 --> 00:03:40.650
This is obviously gonna change.

64
00:03:40.650 --> 00:03:42.771
You wouldn't use a Boolean for
your state value at that point.

65
00:03:42.771 --> 00:03:46.206
You might use an enum with
different values, things like that.

66
00:03:46.206 --> 00:03:48.625
But we just have two, so
we'll just toggle between them.

67
00:03:51.955 --> 00:03:54.555
We now actually need a way to toggle
through these different themes, so

68
00:03:54.555 --> 00:03:56.305
we need a way to actually
update our state.

69
00:03:56.305 --> 00:03:59.646
So what I'm gonna do is just create
a couple of buttons here to do that.

70
00:04:02.453 --> 00:04:05.180
I could use our buttons,
I'm just gonna use default buttons.

71
00:04:05.180 --> 00:04:06.690
I'm gonna show you two.

72
00:04:06.690 --> 00:04:10.800
If you haven't worked with React inline
styling, you can also just do it this way.

73
00:04:10.800 --> 00:04:12.780
I'm just gonna set a couple of
different style properties.

74
00:04:12.780 --> 00:04:17.703
So I'm just gonna give this
a margin of "0 16 px 24 px",

75
00:04:17.703 --> 00:04:21.491
so this will set zero margin on the top,
left and

76
00:04:21.491 --> 00:04:25.504
right will have 16, and
bottom will have 24.

77
00:04:25.504 --> 00:04:32.254
I'm gonna give it padding of 8px and

78
00:04:32.254 --> 00:04:36.401
a background of none.

79
00:04:36.401 --> 00:04:40.419
Okay, I'm just gonna say here dark theme,
and

80
00:04:40.419 --> 00:04:46.051
I also just need to add an onClick
handler here to update our state.

81
00:04:46.051 --> 00:04:51.666
So onClick, we wanna update our state.

82
00:04:51.666 --> 00:04:58.774
So setUseDarkTheme, and
I'm gonna set it to true.

83
00:04:58.774 --> 00:05:00.940
So if we click this dark theme button,
we wanna use dark theme.

84
00:05:01.950 --> 00:05:03.220
We also need to do the default theme.

85
00:05:03.220 --> 00:05:05.370
So I'm just gonna copy and paste that.

86
00:05:05.370 --> 00:05:06.890
It'll have the same styling.

87
00:05:06.890 --> 00:05:09.169
This will be our default theme.

88
00:05:09.169 --> 00:05:11.274
And this will just
setUseDarkTheme to false.

89
00:05:11.274 --> 00:05:16.824
Okay, very simple.

90
00:05:22.931 --> 00:05:25.852
The one other thing I'm gonna do is
wrap our primary, secondary, and

91
00:05:25.852 --> 00:05:28.840
tertiary buttons in a div
with a little bit of styling.

92
00:05:28.840 --> 00:05:31.869
We need to actually be able to
change the background color so

93
00:05:31.869 --> 00:05:35.151
we can see what our dark theme
would look like on our components.

94
00:05:35.151 --> 00:05:41.051
So I'm gonna wrap all of our
buttons here in a div, And

95
00:05:41.051 --> 00:05:44.877
on this div, I'm just gonna
set a couple of styles here.

96
00:05:44.877 --> 00:05:49.251
So, Our background color,
we want to change.

97
00:05:49.251 --> 00:05:54.149
So if we're using our dark theme
I want our background color to be

98
00:05:54.149 --> 00:05:57.244
the primary color of our default theme.

99
00:05:57.244 --> 00:06:01.760
So defaultTheme.primaryColor.

100
00:06:01.760 --> 00:06:04.980
Otherwise, I want to use our
dark theme primary color.

101
00:06:07.430 --> 00:06:10.200
If we didn't do this, it'd be really hard
to kind of tell what our components look

102
00:06:10.200 --> 00:06:11.230
like in the opposite theme.

103
00:06:11.230 --> 00:06:13.030
So this is just making
that a little easier.

104
00:06:14.200 --> 00:06:19.292
I'm gonna set this to a width of a 100vw,
height to 100vh.

105
00:06:19.292 --> 00:06:21.627
This is just to make sure
we can see our components.

106
00:06:24.062 --> 00:06:25.570
I'm also gonna use some flexbox.

107
00:06:25.570 --> 00:06:33.188
So let's display: "flex",
alignItems: center.

108
00:06:33.188 --> 00:06:34.610
This is what I was talking about earlier.

109
00:06:34.610 --> 00:06:37.845
So when you do in-line styling with React,
these are actually camel-case,

110
00:06:37.845 --> 00:06:41.240
versus when we use style components,
it's just plain CSS, which is a lot nicer.

111
00:06:42.510 --> 00:06:46.660
And I'll just do
justifyContent: "space-around".

112
00:06:46.660 --> 00:06:49.217
So this should give us
a nice little visual.

113
00:06:52.606 --> 00:06:55.030
So if we come back here, we can see
we've got a couple of buttons up here.

114
00:06:55.030 --> 00:06:56.990
We've got our dark theme and
our default theme button.

115
00:06:56.990 --> 00:06:58.480
We've got our buttons here rendering.

116
00:07:00.120 --> 00:07:02.791
And now if I set dark theme,
it changes the background to dark theme.

117
00:07:02.791 --> 00:07:05.472
I'm gonna remove these modifiers
because like I said before,

118
00:07:05.472 --> 00:07:07.862
I didn't actually change
the modifiers in the themes.

119
00:07:07.862 --> 00:07:09.100
They're just the same.

120
00:07:09.100 --> 00:07:11.350
So we can't actually tell
that our theme is working.

121
00:07:11.350 --> 00:07:13.680
I'm gonna remove our modifiers.

122
00:07:17.353 --> 00:07:21.180
So if I change to dark theme,
this is not working.

123
00:07:21.180 --> 00:07:23.060
So, right now, if I toggle to dark theme,

124
00:07:23.060 --> 00:07:26.940
my components are not actually
rendering the dark theme styling.

125
00:07:28.670 --> 00:07:31.290
Can anyone tell me,
does anyone have a guess maybe as to why?

126
00:07:32.730 --> 00:07:34.533
This is our button code here.

127
00:07:34.533 --> 00:07:37.380
So which-
&gt;&gt; You're using default theme.

128
00:07:37.380 --> 00:07:39.620
&gt;&gt; I am using default theme.

129
00:07:39.620 --> 00:07:43.100
So this is not actually pulling any of the
state information from our theme provider.

130
00:07:43.100 --> 00:07:46.292
This is just simply using default
theme and that's the problem here.

131
00:07:46.292 --> 00:07:47.560
Great, that was great, Matt.

132
00:07:48.930 --> 00:07:54.375
So in order to use this anywhere
that we see this defaultTheme.,

133
00:07:54.375 --> 00:07:56.256
I'm going to Cmd + D.

134
00:07:56.256 --> 00:07:57.610
I'm gonna highlight all of this.

135
00:07:57.610 --> 00:07:59.376
All right, that's a lot of instances.

136
00:08:02.380 --> 00:08:05.090
Actually, I don't wanna just do it.

137
00:08:05.090 --> 00:08:07.965
Let's go through this
button modifier section.

138
00:08:07.965 --> 00:08:08.820
Let's do an example here.

139
00:08:08.820 --> 00:08:11.311
So we've got defaultTheme.status.

140
00:08:11.311 --> 00:08:15.760
These are gonna accept properties now, so
ThemeProvider is going to pass a property.

141
00:08:15.760 --> 00:08:16.345
So props.

142
00:08:19.490 --> 00:08:24.560
If we set this to props.status,
Should work.

143
00:08:24.560 --> 00:08:27.420
So the modifiers are different
because they're actually

144
00:08:27.420 --> 00:08:30.280
taking in parameters here,
they're taking in props here.

145
00:08:30.280 --> 00:08:32.359
So we can do this here.

146
00:08:32.359 --> 00:08:37.122
Shoot, So

147
00:08:37.122 --> 00:08:41.401
if I select all of the different
states here in our modifiers props,

148
00:08:41.401 --> 00:08:44.716
destructure that out,
you can just set props here.

149
00:08:48.610 --> 00:08:49.110
Props.

150
00:08:53.681 --> 00:08:55.190
It's gonna take a second for
me to type out.

151
00:08:56.400 --> 00:09:00.583
So anywhere here where I have
this open and closed parentheses,

152
00:09:00.583 --> 00:09:01.980
I wanna select that.

153
00:09:03.540 --> 00:09:05.665
And I wanna fill those with props.

154
00:09:08.810 --> 00:09:14.123
And then what I can do is just,
again, let's select all

155
00:09:14.123 --> 00:09:19.901
of these defaultTheme,
I'm gonna replace you with props.

156
00:09:19.901 --> 00:09:23.400
You'll see, so the modifiers are gonna be
a little bit different of a format than

157
00:09:23.400 --> 00:09:27.090
the traditional buttons, and
I'll show you in just a second.

158
00:09:27.090 --> 00:09:28.766
That's why I'm not selecting all of these.

159
00:09:31.332 --> 00:09:33.841
So with modifiers,
we have these opening and

160
00:09:33.841 --> 00:09:38.900
closing parentheses that takes a parameter
and it's gonna return this CSS, okay?

161
00:09:38.900 --> 00:09:41.640
But when we're actually creating
styled components like we do here,

162
00:09:41.640 --> 00:09:44.870
we don't have those opening and
closing parentheses.

163
00:09:44.870 --> 00:09:49.720
So what we need to do is we're
gonna take props as an argument and

164
00:09:49.720 --> 00:09:52.387
then we can replace this defaultTheme.,
okay?

165
00:09:53.940 --> 00:09:56.295
So this will be props.primaryHoverColor.

166
00:09:58.110 --> 00:10:02.760
So I'm just gonna go ahead,
this will take just a second.

167
00:10:04.445 --> 00:10:07.171
That's the only problem with not
being able to find and replace all,

168
00:10:07.171 --> 00:10:08.683
cuz they have different structures.

169
00:10:12.470 --> 00:10:14.649
I think I can safely select those though.

170
00:10:18.220 --> 00:10:22.148
So just be careful when you're auto
selecting that you don't accidentally put

171
00:10:22.148 --> 00:10:23.095
the wrong format.

172
00:10:23.095 --> 00:10:26.430
So, props.

173
00:10:31.949 --> 00:10:35.600
So if I messed up horribly
we'll find out real easy.

174
00:10:35.600 --> 00:10:38.048
&gt;&gt; Is it props.Theme?

175
00:10:38.048 --> 00:10:42.120
&gt;&gt; Yes, thank you [LAUGH].

176
00:10:44.146 --> 00:10:48.383
Let me do, where'd you go, props.?

177
00:10:50.048 --> 00:10:54.434
So our styles weren't being applied
originally because we were just hard

178
00:10:54.434 --> 00:10:56.919
coding in these defaultTheme.values.

179
00:10:56.919 --> 00:10:59.330
We can remove this now from our import.

180
00:10:59.330 --> 00:11:02.605
So again for the modifiers,
we can simply destructure props and

181
00:11:02.605 --> 00:11:03.947
we can say props.theme.

182
00:11:03.947 --> 00:11:05.290
And then whatever we're using.

183
00:11:05.290 --> 00:11:09.683
In this case, status is also nested.

184
00:11:09.683 --> 00:11:14.216
In our actual components here, wherever
you have this expression, wherever you

185
00:11:14.216 --> 00:11:19.180
need to evaluate the color, you take props
as an argument, and then call props.theme.

186
00:11:19.180 --> 00:11:20.196
And then whatever value.

187
00:11:24.154 --> 00:11:25.710
All right, any questions?

188
00:11:25.710 --> 00:11:26.510
This is what it looks like.

189
00:11:26.510 --> 00:11:31.440
By the way, if we toggle we can see,
it's not working, okay?

