WEBVTT

1
00:00:00.190 --> 00:00:04.259
There's one other thing that we can
look at with react-spring right now,

2
00:00:04.259 --> 00:00:06.657
useTransition, this is a really good one.

3
00:00:06.657 --> 00:00:10.833
This you can use to transition
an array of elements.

4
00:00:10.833 --> 00:00:16.630
So what you can do is have
an array of items here.

5
00:00:16.630 --> 00:00:20.699
And you can call useTransition and
say hey, these are the items we want,

6
00:00:20.699 --> 00:00:22.375
this is the key for each item.

7
00:00:22.375 --> 00:00:25.525
And when it enters,
this is the value it's gonna have.

8
00:00:25.525 --> 00:00:27.601
When it leaves, we want it fade out.

9
00:00:27.601 --> 00:00:30.379
So what this is gonna be doing
is taking a list of items, and

10
00:00:30.379 --> 00:00:33.501
when it's toggling through them,
it's going to fade them in and

11
00:00:33.501 --> 00:00:35.805
out depending upon if they're showing or
not.

12
00:00:37.445 --> 00:00:38.529
And this is really useful.

13
00:00:38.529 --> 00:00:42.555
This would be really useful if you
had a photo gallery, for example.

14
00:00:42.555 --> 00:00:44.846
Okay, you can also toggle
between two different elements.

15
00:00:44.846 --> 00:00:49.963
So if you have a hello and goodbye,
you can just transition between the two.

16
00:00:49.963 --> 00:00:54.416
So useTransition is super nice because it
mounts and unmounts elements from the DOM.

17
00:00:54.416 --> 00:00:56.094
This is great if you have modals, right?

18
00:00:56.094 --> 00:00:57.610
We'll use this for our modal.

19
00:00:57.610 --> 00:01:01.032
We don't need our modal in
our DOM if it's not visible.

20
00:01:01.032 --> 00:01:02.814
So there are three things this can do.

21
00:01:02.814 --> 00:01:07.138
It can toggle between two elements, it
can transition an array of elements, like

22
00:01:07.138 --> 00:01:11.349
a photo album, or it can just mount and
unmount one element from the DOM, okay?

23
00:01:11.349 --> 00:01:14.376
So let's just do one more example,
it's in the same exact code pen, so

24
00:01:14.376 --> 00:01:15.747
you don't have to go anywhere.

25
00:01:18.392 --> 00:01:22.980
If you go in index,
we're gonna render EmojiCarousel.

26
00:01:22.980 --> 00:01:27.846
I'm sorry, in app, we're gonna
render EmojiCarousel, EmojiCarousel.

27
00:01:27.846 --> 00:01:32.105
And basically,
we just have an array of emojis here, and

28
00:01:32.105 --> 00:01:34.782
we just wanna toggle between them.

29
00:01:37.176 --> 00:01:39.723
So we have a button here it says,
Make happy,

30
00:01:41.433 --> 00:01:43.557
That's actually not an array of elements,
that's just two different elements.

31
00:01:43.557 --> 00:01:46.515
So if I say, Make happy,
I want it to be happy, and if it's,

32
00:01:46.515 --> 00:01:48.208
Make sad, I want it to make it sad.

33
00:01:54.287 --> 00:01:56.393
So, first, let's set a Boolean state here.

34
00:01:56.393 --> 00:02:01.772
So if I'm happy, it'll be true.

35
00:02:01.772 --> 00:02:03.353
And we'll you setHappy
as our updater function.

36
00:02:03.353 --> 00:02:05.441
So useState,
we'll set it to true by default,

37
00:02:05.441 --> 00:02:07.017
let's have it be happy by default.

38
00:02:09.930 --> 00:02:14.876
Now let's make our transition,
so, Define a new constant,

39
00:02:14.876 --> 00:02:17.106
and this will use the useTransition hook.

40
00:02:19.474 --> 00:02:20.625
This is gonna take three arguments.

41
00:02:20.625 --> 00:02:25.742
The first is gonna be our state,
so our happy value.

42
00:02:25.742 --> 00:02:28.564
The next is just gonna be null, so
if you had an array of different items,

43
00:02:28.564 --> 00:02:30.112
this would be the key for each element.

44
00:02:30.112 --> 00:02:34.121
But we don't have an array of items,
we're just toggling between two.

45
00:02:34.121 --> 00:02:38.574
And then, again, the last argument is
just an object that contains our from,

46
00:02:38.574 --> 00:02:43.096
where we want this to animate from, on
enter, what do we want this to look like,

47
00:02:43.096 --> 00:02:45.811
and on leave,
what do we want this to look like?

48
00:02:45.811 --> 00:02:50.254
Ours are gonna be pretty simple,
we'll just say opacity of 0.

49
00:02:50.254 --> 00:02:53.578
So I want it to fade in opacity of 0.

50
00:02:53.578 --> 00:02:56.736
We also need to set this
at position absolute.

51
00:02:56.736 --> 00:02:59.555
Absolute, this has to be a string here.

52
00:02:59.555 --> 00:03:03.227
Because otherwise what's gonna happen if
we're transitioning to elements is that if

53
00:03:03.227 --> 00:03:06.714
it's not positioned absolutely, you're
gonna get some weird jumping around.

54
00:03:06.714 --> 00:03:09.298
Because it's gonna be unmounting,
and then it's gonna be mounting, and

55
00:03:09.298 --> 00:03:10.496
it's gonna be all sorts of weird.

56
00:03:10.496 --> 00:03:13.856
So, by setting position absolute,
we'll make sure it'll fade in and

57
00:03:13.856 --> 00:03:15.373
out of the same exact position.

58
00:03:16.952 --> 00:03:18.436
On enter, so opacity to 1.

59
00:03:18.436 --> 00:03:21.425
And then again,
we want it to just fade out.

60
00:03:24.660 --> 00:03:29.339
So onClick of this button,
let's just toggle our state, so onClick,

61
00:03:31.349 --> 00:03:35.065
We'll do setHappy and
then whatever the opposite is,

62
00:03:35.065 --> 00:03:38.960
so make it sad if it's happy,
make it happy if it's sad.

63
00:03:38.960 --> 00:03:42.389
So unlike useSpring, where we could
just simply set a style attribute and

64
00:03:42.389 --> 00:03:45.429
pass in our animation,
we actually have to map over transition,

65
00:03:45.429 --> 00:03:47.219
it's a little bit more complicated.

66
00:03:47.219 --> 00:03:51.518
So let's create opening and
closing curly brackets here.

67
00:03:51.518 --> 00:03:54.528
So let's map over.

68
00:03:54.528 --> 00:03:57.864
We need to extract out our item and
its props.

69
00:03:57.864 --> 00:04:00.899
It's a little confusing, so
make sure you have this argument here.

70
00:04:00.899 --> 00:04:03.168
And it's destructuring out item and props.

71
00:04:06.507 --> 00:04:08.258
And we have a return statement.

72
00:04:08.258 --> 00:04:10.579
So we're gonna destructure out item and
props here.

73
00:04:10.579 --> 00:04:13.915
This is a little confusing when you're
transitioning between two elements,

74
00:04:13.915 --> 00:04:15.288
this is essentially our state.

75
00:04:15.288 --> 00:04:18.917
So react-spring has
some weird terminology.

76
00:04:18.917 --> 00:04:22.044
Sometimes it calls things props,
sometimes it's called things item,

77
00:04:22.044 --> 00:04:23.230
it's a little confusing.

78
00:04:23.230 --> 00:04:27.232
But if item exists, so if our state
is true, we want it to be happy, or

79
00:04:27.232 --> 00:04:30.903
if our happy state is true,
let's render the happy elements.

80
00:04:30.903 --> 00:04:32.186
So I'm gonna copy this span here.

81
00:04:33.830 --> 00:04:37.620
So if we're happy, return our happy span.

82
00:04:37.620 --> 00:04:41.270
And remember what I said,
this has to be animated.span.

83
00:04:41.270 --> 00:04:44.484
Because otherwise react-spring's
not gonna know what to do with it.

84
00:04:44.484 --> 00:04:53.672
But if we're not happy, let's render our
send span, And again, animated.span.

85
00:04:56.168 --> 00:04:59.354
The only other thing we need to pass is
these props that we're destructuring out.

86
00:04:59.354 --> 00:05:04.061
This is our style, so
this needs to be style = [props], and

87
00:05:04.061 --> 00:05:06.241
you set that on both of them.

88
00:05:11.291 --> 00:05:11.927
Okay.

89
00:05:18.548 --> 00:05:23.800
I always add Ss to things when
there shouldn't be an S, Okay,

90
00:05:23.800 --> 00:05:28.928
you're yelling at me cuz it says
not accessible, but, Make happy.

91
00:05:28.928 --> 00:05:30.560
This happens really quickly, but

92
00:05:30.560 --> 00:05:33.549
you can see it's fading out
before the other one's fading in.

93
00:05:33.549 --> 00:05:38.337
And just to be very explicit,
if we remove this position absolute,

94
00:05:38.337 --> 00:05:43.070
what you will see,
Is that weird jumping, right?

95
00:05:43.070 --> 00:05:47.633
Cuz it's mounting and
unmounting things from the DOM.

96
00:05:47.633 --> 00:05:53.853
So if we don't set position absolute here,
It's a little weird.

97
00:05:53.853 --> 00:05:56.283
Okay, so that's how you would
transition between two elements.

