WEBVTT

1
00:00:00.650 --> 00:00:05.471
Last hook which was new in React 17 is,
use the bug value,

2
00:00:05.471 --> 00:00:10.882
which we did talk about for
a hot second in complete intro to React.

3
00:00:13.771 --> 00:00:16.618
So here, well, first, I'll show you this,

4
00:00:16.618 --> 00:00:20.415
we have this use debug value
example here and it's gonna say,

5
00:00:20.415 --> 00:00:24.310
do you need a coat today, and
the answer is either yes or maybe.

6
00:00:26.210 --> 00:00:29.589
And if I look at my react dev tools,
which again,

7
00:00:29.589 --> 00:00:34.371
this is built into code sandbox here but
this is the same dev tools that

8
00:00:34.371 --> 00:00:39.332
you might download from Chrome and
I click here on debug value component

9
00:00:41.730 --> 00:00:49.829
If it loads, Try refreshing it again.

10
00:00:58.517 --> 00:00:59.017
There we go.

11
00:01:00.230 --> 00:01:02.822
So notice this part where it says,
is not ringing.

12
00:01:04.970 --> 00:01:09.546
Basically what you use
this debug value here,

13
00:01:09.546 --> 00:01:14.354
is so that in your dev tools
you can expose a custom

14
00:01:14.354 --> 00:01:18.363
debugging value for your custom hooks.

15
00:01:20.470 --> 00:01:25.298
So debugging custom hooks that's what you
use debug value for, if you're not in

16
00:01:25.298 --> 00:01:29.860
a custom hook don't use this even
if you are doing the custom hooks.

17
00:01:29.860 --> 00:01:34.012
Again, I'm gonna say this is typically for
library authors and or

18
00:01:34.012 --> 00:01:37.202
like a design system sort
of situation typically,

19
00:01:37.202 --> 00:01:42.690
you can just look in your own custom
hook and figure out what's going on.

20
00:01:42.690 --> 00:01:44.377
This is more useful for like, hey,

21
00:01:44.377 --> 00:01:48.145
I know someone that's not me is going to
later use this custom hook and they might

22
00:01:48.145 --> 00:01:52.360
need some internal debugging value
that they can't introspect themselves.

23
00:01:52.360 --> 00:01:53.258
I'm going to use,

24
00:01:53.258 --> 00:01:56.750
use debug value to surface something
that's interesting to them right?

25
00:01:58.130 --> 00:02:02.260
So this particular case,
do you need a coat today, it's just doing

26
00:02:02.260 --> 00:02:06.751
math not random, and if it's raining
it says yes, and if it's raining,

27
00:02:06.751 --> 00:02:11.098
it says maybe and the debug value here
is I'm trying to surface what is,

28
00:02:11.098 --> 00:02:16.047
is raining, because that's not immediately
obvious from looking at the code.

29
00:02:16.047 --> 00:02:20.834
So today it says that it is not raining so
therefore it says maybe here, but

30
00:02:20.834 --> 00:02:24.387
if I refresh that,
it might say something different,

31
00:02:24.387 --> 00:02:28.035
so today it is raining, so
therefore it says yes there.

32
00:02:32.069 --> 00:02:35.666
So again, if you're making your own custom
hooks, you can typically just mess with

33
00:02:35.666 --> 00:02:39.140
your own custom hooks and do your
console logs and all that kinda stuff.

34
00:02:39.140 --> 00:02:42.534
It's that if your packaging you custom
hooks, and giving it to someone else and

35
00:02:42.534 --> 00:02:45.930
you need to give them some debugging
information, that's when you would use,

36
00:02:45.930 --> 00:02:47.460
use debug value, that's it.

37
00:02:47.460 --> 00:02:51.008
That is all the hooks in React 17 that
are built into React itself everything

38
00:02:51.008 --> 00:02:54.666
else you can just kind of combine and all
the various different hooks together to

39
00:02:54.666 --> 00:02:57.030
get the interesting
functionality that you need.

40
00:02:58.260 --> 00:03:01.166
There are more hooks coming in React 18,

41
00:03:01.166 --> 00:03:05.442
the most useful that I think we
might use this one called use ID,

42
00:03:05.442 --> 00:03:11.870
which will generate like a GUID for you,
so that you can use that for keys, right?

43
00:03:11.870 --> 00:03:14.727
That'll be kind of useful,
it'll be really useful for hydrating, so

44
00:03:14.727 --> 00:03:17.678
you'll generate something on the server
and then you'll have your react

45
00:03:17.678 --> 00:03:21.690
bootstrap and you can guarantee that
the ID on both sides is gonna be the same.

46
00:03:21.690 --> 00:03:25.544
That's where user IDs can be helpful, they
have some other ones coming that they're

47
00:03:25.544 --> 00:03:29.390
talking about but they haven't settled
what they're going to do with them yet?

48
00:03:29.390 --> 00:03:33.353
So we'll talk about that in React,
Intermediate React 55,

49
00:03:33.353 --> 00:03:34.935
whenever that happens.

