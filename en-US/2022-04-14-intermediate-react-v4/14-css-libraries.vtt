WEBVTT

1
00:00:00.490 --> 00:00:03.507
Good time to check in as how enraged
am I a Tailwind at the moment?

2
00:00:03.507 --> 00:00:09.235
[LAUGH] It definitely is, it's challenging

3
00:00:09.235 --> 00:00:15.285
to what people think that
how we should do CSS.

4
00:00:15.285 --> 00:00:20.840
But I'll tell you that I think it
does help, It helps me go fast,

5
00:00:20.840 --> 00:00:22.860
particularly when I'm
prototyping something.

6
00:00:24.560 --> 00:00:26.290
But here's the trade off here.

7
00:00:26.290 --> 00:00:28.650
These class names are unruly, right?

8
00:00:28.650 --> 00:00:30.590
These get kinda long.

9
00:00:30.590 --> 00:00:34.428
And as you might imagine,
this is not that long.

10
00:00:34.428 --> 00:00:37.940
[LAUGH] They can get significantly longer.

11
00:00:41.100 --> 00:00:45.036
As you guessed here,
this number represents the lightness.

12
00:00:45.036 --> 00:00:51.112
Actually, 100 being the lightest, and
then 900 being the darkest version of it.

13
00:00:51.112 --> 00:00:52.268
via is a middle stop.

14
00:00:52.268 --> 00:00:55.510
So, I mean, just to demonstrate,

15
00:00:55.510 --> 00:01:00.707
you could have made this
go via-cyan-count, it does.

16
00:01:00.707 --> 00:01:03.876
Then you get this just sack of goodness.

17
00:01:03.876 --> 00:01:10.886
[LAUGH]
But it's the middle stop, right?

18
00:01:10.886 --> 00:01:14.328
If you're familiar with gradients, you can
put stops in them, that's what via is.

19
00:01:18.193 --> 00:01:22.678
Margin-bottom, width-full, right,

20
00:01:22.678 --> 00:01:29.909
you can also do like width, dash,
yeah, 6 or something like that.

21
00:01:29.909 --> 00:01:32.389
There's a various different
ways of doing that.

22
00:01:32.389 --> 00:01:36.701
text-center, center the text,
padding, all that kind of stuff.

23
00:01:36.701 --> 00:01:42.358
And then text-6xl,
you can do small, medium, large,

24
00:01:42.358 --> 00:01:48.949
xl, double xl, up to 9xl,
that's the largest, and then hover.

25
00:01:48.949 --> 00:01:51.360
So if you look here, when we hover,
it goes a little darker.

26
00:01:51.360 --> 00:01:53.951
It's probably kinda hard
to see on my screen, but

27
00:01:53.951 --> 00:01:55.688
you can probably see it on yours.

28
00:01:55.688 --> 00:02:00.655
The way that you do that is with these
hover: whatever you wanna add, right?

29
00:02:00.655 --> 00:02:06.290
So you could do hover,
I think, does it text,

30
00:02:08.877 --> 00:02:13.502
I gotta remember, text-, is it underline?

31
00:02:16.470 --> 00:02:18.050
Anyway, you can do whatever you want.

32
00:02:18.050 --> 00:02:19.987
I'd have to go look up
how you do underline.

33
00:02:19.987 --> 00:02:25.534
But anything that you put under hover
will only be applied on hover states.

34
00:02:27.807 --> 00:02:34.358
So this is a terrible idea, but right now
it only centers when you hover over it.

35
00:02:36.947 --> 00:02:41.268
I think focus is one of them as well,
there's several of them.

36
00:02:41.268 --> 00:02:45.797
&gt;&gt; People are saying they were having
a hard time, given it's showing up.

37
00:02:45.797 --> 00:02:52.409
And this solution seems to be deleting
the Parcel build and the dist.

38
00:02:52.409 --> 00:02:59.103
Or some peoples were saying holding Shift
and then hitting Refresh worked for them.

39
00:02:59.103 --> 00:03:04.016
&gt;&gt; Sure, yeah, so if you're having
a hard time at this point doing it,

40
00:03:04.016 --> 00:03:06.831
I'll show you how to do a full rebuild.

41
00:03:06.831 --> 00:03:10.962
If you really wanna let go totally
nuclear and just do everything,

42
00:03:10.962 --> 00:03:16.848
remove .parcel-cache, parcel-cashe

43
00:03:16.848 --> 00:03:22.789
dist node-modules, and
then run npm install again.

44
00:03:22.789 --> 00:03:27.026
So I would do that, that's gonna take
a second cuz there's a lot of packages.

45
00:03:27.026 --> 00:03:33.090
npm install, That'll take
a second to reinstall everything.

46
00:03:33.090 --> 00:03:35.518
And then you can do npm run dev again,
it might take a second for

47
00:03:35.518 --> 00:03:38.860
it to get started because it's
having to do a full rebuild.

48
00:03:38.860 --> 00:03:43.326
Then go over here, I would say just
close the tab that you're on, and

49
00:03:43.326 --> 00:03:44.640
then open it again.

50
00:03:46.800 --> 00:03:49.415
And that should get you
into a better state.

51
00:03:49.415 --> 00:03:57.688
&gt;&gt; Do you have a huge style.css now
that you're including Tailwind?

52
00:03:57.688 --> 00:03:59.527
&gt;&gt; I mean,
look at what it's including here.

53
00:03:59.527 --> 00:04:03.356
It's probably a development build,
but let's see what's in it.

54
00:04:03.356 --> 00:04:06.872
It's 8.91 kilobytes at the moment.

55
00:04:06.872 --> 00:04:11.050
The idea with Tailwind,
is obviously we have width one, width two,

56
00:04:11.050 --> 00:04:14.810
width three,
all the purveyors' different permutations.

57
00:04:14.810 --> 00:04:18.375
But because of the way that PostCSS and,

58
00:04:20.973 --> 00:04:25.425
Tailwind and React and Parcel all work
together, when you actually build this for

59
00:04:25.425 --> 00:04:31.170
production, you're only including the
styles that you're actually using, right?

60
00:04:31.170 --> 00:04:35.960
So for example, you can see my code here,
I'm not using p5 anywhere, right?

61
00:04:35.960 --> 00:04:40.089
So when I build this for production,
p5 will not be included in my file,

62
00:04:40.089 --> 00:04:41.520
in my final style sheet.

63
00:04:44.128 --> 00:04:49.640
In theory, your CSS should be much
smaller, significantly smaller.

64
00:04:51.630 --> 00:04:55.296
And it has a logical max in terms of
if you use literally every piece of

65
00:04:55.296 --> 00:04:58.530
Tailwind CSS, it still can
only be a certain size, right?

66
00:04:58.530 --> 00:05:00.669
Because it cannot expand
beyond a certain size.

67
00:05:00.669 --> 00:05:05.550
Whereas, I remember when I worked at
LinkedIn, our CSS was two megabytes.

68
00:05:07.300 --> 00:05:11.950
Yep, that was a whole another story.

69
00:05:11.950 --> 00:05:16.702
Anyway, I got a bit of trauma
coming up there for just a second.

70
00:05:16.702 --> 00:05:19.429
[LAUGH] You can't hit that with Tailwind,
right?

71
00:05:19.429 --> 00:05:23.140
Tailwind has a logical max of how
much CSS I can actually ever include.

72
00:05:23.140 --> 00:05:27.363
So, in general, I would say that
your Tailwind build should be

73
00:05:27.363 --> 00:05:30.083
much smaller than normal builds of CSS.

74
00:05:30.083 --> 00:05:33.482
The question is just how well
does your current CSS zip?

75
00:05:33.482 --> 00:05:37.288
My guess is not well,
[LAUGH] even if it's maximized,

76
00:05:37.288 --> 00:05:40.090
Tailwind can probably beat it, yeah.

77
00:05:41.700 --> 00:05:46.652
&gt;&gt; Could you contrast Tailwind versus
Bootstrap and some of the other options?

78
00:05:46.652 --> 00:05:48.845
&gt;&gt; Emotion.

79
00:05:48.845 --> 00:05:51.790
&gt;&gt; Yeah,
that actually bears talking about.

80
00:05:51.790 --> 00:05:56.985
So let's start with Tailwind versus
Emotion and styled-components and

81
00:05:56.985 --> 00:06:02.777
JSX styles and all those various different
permutations of CSS and JS libraries.

82
00:06:04.797 --> 00:06:07.973
In Complete Intro to React version 5, so

83
00:06:07.973 --> 00:06:12.432
that would be Intermediate React v1,
I taught Emotion.

84
00:06:12.432 --> 00:06:15.954
And before Emotion I taught
styled-components, which are both awesome

85
00:06:15.954 --> 00:06:18.919
libraries, I actually know both
of the authors really well.

86
00:06:18.919 --> 00:06:22.153
I was literally just texting with
Kai right before I came up here and

87
00:06:22.153 --> 00:06:24.601
started talking,
who is the creator of Emotion.

88
00:06:27.518 --> 00:06:33.276
They're awesome, they're super useful,
tons of companies are still using them.

89
00:06:33.276 --> 00:06:38.460
So I'm just showing you one of the various
different approaches to CSS and React.

90
00:06:38.460 --> 00:06:42.840
But there's lots of really valid
reasons to use the other ones.

91
00:06:42.840 --> 00:06:46.383
Emotion and styled-components, which are
very similar in terms of their approach,

92
00:06:46.383 --> 00:06:48.840
I'm fine if you choose
either one of those to use.

93
00:06:48.840 --> 00:06:50.771
In general, I tend to use a Emotion more,

94
00:06:50.771 --> 00:06:53.763
it's just because it's the one
I'm more habituated to using.

95
00:06:53.763 --> 00:06:57.153
But styled-components,
especially recently,

96
00:06:57.153 --> 00:07:00.707
has really upped their game,
it's a great library.

97
00:07:00.707 --> 00:07:05.070
If you have a lot of programmatic
manipulation of your CSS,

98
00:07:05.070 --> 00:07:09.085
you need your JavaScript to
be managing your CSS a lot,

99
00:07:09.085 --> 00:07:14.431
that's where Emotion and
styled-components really, really shine.

100
00:07:14.431 --> 00:07:17.958
Because they've moved all of
that to the JavaScript layer,

101
00:07:17.958 --> 00:07:22.118
which allows you to basically then
use React to manipulate it, right?

102
00:07:22.118 --> 00:07:24.696
Whereas here,
we're just putting tags, right?

103
00:07:24.696 --> 00:07:27.293
We can control what tags go in there,
right?

104
00:07:27.293 --> 00:07:30.548
And that would work just as well.

105
00:07:30.548 --> 00:07:36.049
But if you wanna do computation of color
and hue and saturation and lightness and

106
00:07:36.049 --> 00:07:41.811
things like that, that's where something
like Emotion and styled really shine.

107
00:07:41.811 --> 00:07:47.053
Whereas something like Tailwind is
a lot harder to achieve that with.

108
00:07:47.053 --> 00:07:50.072
It's not a typical use case, right?

109
00:07:50.072 --> 00:07:54.448
I'm totally fine as well if you just
choose, why I like Emotion anyway,

110
00:07:54.448 --> 00:07:56.827
it's a totally fine way of doing code.

111
00:07:56.827 --> 00:08:00.118
So Tailwind, Emotion, styled-components,

112
00:08:00.118 --> 00:08:03.900
all achieve the same thing
with different approaches.

113
00:08:03.900 --> 00:08:05.141
I think that's kinda what
I want to say about that.

114
00:08:05.141 --> 00:08:08.935
But they're still just tools
to use to write styles,

115
00:08:08.935 --> 00:08:11.980
they're just different methodologies.

116
00:08:11.980 --> 00:08:16.465
Something like Bootstrap, and
there's lots of them out there now,

117
00:08:16.465 --> 00:08:19.030
things that are similar to Bootstrap.

118
00:08:19.030 --> 00:08:23.404
Bootstrap is one that I used for a good
chunk of my career, particularly when I

119
00:08:23.404 --> 00:08:28.004
was a lot earlier, like Bootstrap 2 and
before, it's a style system, right?

120
00:08:28.004 --> 00:08:33.084
So they say, all right,
here's your input control,

121
00:08:33.084 --> 00:08:37.510
here's your modal, here's your jumbotron.

122
00:08:37.510 --> 00:08:39.869
Here's all those kind of
various different things, and

123
00:08:39.869 --> 00:08:42.880
it's premade components that you just
put the components on your page.

124
00:08:44.040 --> 00:08:48.818
These are awesome, if you don't really
care what your website looks like, and

125
00:08:48.818 --> 00:08:52.250
you just need it to look generally nice,
right?

126
00:08:52.250 --> 00:08:55.210
So I'll use the example
of a company intranet.

127
00:08:55.210 --> 00:08:57.402
You don't want it to look like this,

128
00:08:57.402 --> 00:09:01.880
where it's just someone just throwing
out HTML and style tags on the page.

129
00:09:01.880 --> 00:09:05.019
But you want it to be laid out nicely or
something like that.

130
00:09:05.019 --> 00:09:09.427
Use Bootstrap, dear God, do not write that
CSS yourself, there's no reason to, right?

131
00:09:09.427 --> 00:09:12.601
You don't need to look on brand for
your company,

132
00:09:12.601 --> 00:09:16.998
you just need it to be readable and
useful, and it looks plenty nice.

133
00:09:16.998 --> 00:09:20.951
The reason why I say don't put that on
maybe your production consumer facing

134
00:09:20.951 --> 00:09:25.213
website is, there was a hot second in the
industry where every site looked exactly

135
00:09:25.213 --> 00:09:27.641
the same, because everyone used Bootstrap.

136
00:09:27.641 --> 00:09:33.250
Every company used Bootstrap,
present company included, I did.

137
00:09:33.250 --> 00:09:35.306
We used it at Reddit,
we used it at Needle,

138
00:09:35.306 --> 00:09:38.510
which is the company that
I worked at before Reddit.

139
00:09:38.510 --> 00:09:41.570
Everybody used Bootstrap,
it was the hotness at the time, right?

140
00:09:43.310 --> 00:09:47.320
Eventually it was like, hey, maybe
all websites shouldn't look the same.

141
00:09:47.320 --> 00:09:49.473
It was a novel thought at the time.

142
00:09:49.473 --> 00:09:54.388
And so that's when people kind
of moved away from Bootstrap.

143
00:09:54.388 --> 00:09:59.120
But that's when you wanna use Bootstrap is
when you just need something to look nice

144
00:09:59.120 --> 00:10:00.958
and you wanna be quick about it.

145
00:10:00.958 --> 00:10:03.050
Okay, yeah, I think I'm pretty
satisfied with that answer.

146
00:10:06.685 --> 00:10:08.738
Cool, other questions?

147
00:10:12.803 --> 00:10:13.877
All right.

148
00:10:16.687 --> 00:10:19.263
So I showed you hover, but

149
00:10:19.263 --> 00:10:25.243
there's also disabled is another
one that you can put here.

150
00:10:25.243 --> 00:10:27.899
So if something's disabled,
it'll do something different.

151
00:10:27.899 --> 00:10:29.941
Focus, right,
which is different than hover.

152
00:10:32.128 --> 00:10:33.232
Stuff like that.

