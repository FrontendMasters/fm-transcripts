WEBVTT

1
00:00:00.760 --> 00:00:05.095
All right, we gotta go quickly

2
00:00:05.095 --> 00:00:10.440
refactor the update functions here.

3
00:00:10.440 --> 00:00:17.892
So now we have to get a useDispatch
up here from react Redux.

4
00:00:17.892 --> 00:00:20.540
So this is doing everything that
we need to, to read from it.

5
00:00:20.540 --> 00:00:27.301
In fact, I think, if I'm not mistaken,
we could say npm run dev.

6
00:00:27.301 --> 00:00:29.240
I think this will load,
it just won't update.

7
00:00:31.110 --> 00:00:34.700
Yep, so you can see here,
now it says Seattle here.

8
00:00:34.700 --> 00:00:39.977
But notice that we've run into the problem
again that I can't update this,

9
00:00:39.977 --> 00:00:41.053
same problem.

10
00:00:41.053 --> 00:00:44.128
There's nothing updating, right,
nothing's calling the reducers, right?

11
00:00:44.128 --> 00:00:47.503
So now we have to go call a dispatch with

12
00:00:47.503 --> 00:00:51.310
our actions to be able
to update the store.

13
00:00:51.310 --> 00:00:53.186
Does that make sense?

14
00:00:53.186 --> 00:00:57.514
Again, just maybe to walk
through it explicitly.

15
00:00:57.514 --> 00:01:03.153
If I type into location,
right, that's going to update.

16
00:01:05.883 --> 00:01:08.730
React then catches that event,
which says, something happened.

17
00:01:08.730 --> 00:01:13.566
I'm going to re-render, so
it calls search params again and

18
00:01:13.566 --> 00:01:15.804
it pulls location out here.

19
00:01:15.804 --> 00:01:17.847
Well, what is location?

20
00:01:17.847 --> 00:01:20.622
It's still the same that it was last
render, nothing updated the store.

21
00:01:20.622 --> 00:01:25.130
So it remains Seattle,
Washington here, right?

22
00:01:25.130 --> 00:01:28.923
So now we have to go write
the function that updates that.

23
00:01:28.923 --> 00:01:33.071
And we're gonna do that with
something called useDispatch.

24
00:01:33.071 --> 00:01:37.383
Okay, and then we're going to import
all of our action creators as well.

25
00:01:37.383 --> 00:01:41.720
changeAnimal from changeAnimal,

26
00:01:41.720 --> 00:01:46.923
import, changeBreed from changeBreed,

27
00:01:46.923 --> 00:01:50.397
import, changeLocation.

28
00:01:50.397 --> 00:01:53.025
I'm kinda wishing I had put
these all in the same file now.

29
00:01:53.025 --> 00:01:59.168
[LAUGH] Import,
changeTheme from changeTheme, okay.

30
00:01:59.168 --> 00:02:03.101
So now we have all of our
action creators here.

31
00:02:03.101 --> 00:02:06.541
Here, underneath theme,

32
00:02:06.541 --> 00:02:12.078
you can say const dispatch = useDispatch.

33
00:02:12.078 --> 00:02:13.668
You don't have to give that anything.

34
00:02:13.668 --> 00:02:20.564
This is just now a function that we
can now send actions into Redux.

35
00:02:23.326 --> 00:02:26.834
Okay, and then we're just gonna replace
everything that we have here, or

36
00:02:26.834 --> 00:02:27.564
sorry, here.

37
00:02:27.564 --> 00:02:32.968
Instead of saying update location,
we're just gonna say dispatch.

38
00:02:36.922 --> 00:02:45.864
And then inside of that, we're gonna
say changeLocation, To be that.

39
00:02:45.864 --> 00:02:48.231
Right, so
this is gonna take our e.target.value,

40
00:02:48.231 --> 00:02:50.398
which is whatever the value
of that location is.

41
00:02:50.398 --> 00:02:55.650
It's going to pass that into our
changeLocation function here.

42
00:02:55.650 --> 00:03:01.080
Which takes in a location and
returns a well-formed action, right?

43
00:03:01.080 --> 00:03:04.370
It's going to pass that into Redux.

44
00:03:04.370 --> 00:03:09.398
Redux is then going to call our route
reducer, right, this combineReducers.

45
00:03:09.398 --> 00:03:13.073
It's then going to pass that
into the location reducer,

46
00:03:13.073 --> 00:03:16.988
which is then going to read,
is this a load change location?

47
00:03:16.988 --> 00:03:21.354
It is, and therefore,
it will update the location.

48
00:03:21.354 --> 00:03:24.575
That's going to inform Redux,
hey, something changed.

49
00:03:24.575 --> 00:03:28.007
Run through all of your subscriptions,
right,

50
00:03:28.007 --> 00:03:31.953
which we created a subscription
here in search params.

51
00:03:31.953 --> 00:03:33.237
This is going to change here.

52
00:03:33.237 --> 00:03:36.828
And this is going to let React know,
hey, this component changed,

53
00:03:36.828 --> 00:03:40.860
cuz it's state changed, and this will
cause a re-render of search param.

54
00:03:40.860 --> 00:03:42.848
That's the whole circle.

55
00:03:48.151 --> 00:03:53.356
Okay, so let's go ahead and
finish rounding these out.

56
00:03:56.076 --> 00:03:58.925
So again, I'll just show you here how
you would have done this, otherwise.

57
00:03:58.925 --> 00:04:02.750
You would have said, type, right?

58
00:04:02.750 --> 00:04:06.822
You could have explicitly written
in here the shape of the action and

59
00:04:06.822 --> 00:04:08.730
that would have been fine.

60
00:04:08.730 --> 00:04:10.619
People do it that way.

61
00:04:10.619 --> 00:04:13.064
This just reads better to me.

62
00:04:13.064 --> 00:04:15.820
And then I don't have to remember then,
all of my action types, right?

63
00:04:15.820 --> 00:04:18.782
I can put that into another file.

64
00:04:18.782 --> 00:04:24.837
Okay, dispatch actually,
we can just do this,

65
00:04:24.837 --> 00:04:30.011
and I can write them
both at the same time.

66
00:04:30.011 --> 00:04:37.477
So I can say, dispatch,

67
00:04:40.459 --> 00:04:45.295
changeAnimal, and that animal is

68
00:04:45.295 --> 00:04:49.802
going to be e.target.value.

69
00:04:52.227 --> 00:04:54.156
I think I need another parenthesis there.

70
00:04:58.786 --> 00:05:02.278
Now why don't I, notice,
I had two function calls there.

71
00:05:02.278 --> 00:05:05.299
But now I just have two different
things subscribing to changeAnimal.

72
00:05:05.299 --> 00:05:08.190
It's actually only going to
dispatch one changeAnimal.

73
00:05:08.190 --> 00:05:12.759
I don't have to explicitly
dispatch an empty thing for

74
00:05:12.759 --> 00:05:17.737
breed because breed is already
listening for that change.

75
00:05:17.737 --> 00:05:20.308
So that's another nice thing about Redux,

76
00:05:20.308 --> 00:05:25.323
is you can these kind of dependencies work
themselves out to be better code, I think.

77
00:05:25.323 --> 00:05:31.457
Instead of having two hooks calls,
I have one action dispatch.

78
00:05:31.457 --> 00:05:36.575
Okay, updateBreed

79
00:05:36.575 --> 00:05:41.697
here, same thing.

80
00:05:41.697 --> 00:05:45.012
We're just gonna say,

81
00:05:45.012 --> 00:05:53.477
dispatch(changeBreed(e.target.value)),
okay?

82
00:05:53.477 --> 00:05:57.962
And theme here, same business,

83
00:05:57.962 --> 00:06:05.181
dispatch(changeTheme(e.target.value)).

84
00:06:11.358 --> 00:06:13.469
Cool.

85
00:06:16.670 --> 00:06:20.837
So, I will say, this is so
much nicer than it used to be.

86
00:06:20.837 --> 00:06:24.994
React Redux and didn't support hooks for
a while, and so you had to

87
00:06:24.994 --> 00:06:29.388
do some really awkward finessing to
get everything to work together.

88
00:06:29.388 --> 00:06:34.540
With the latest version of React Redux,
this is very pleasant to use.

89
00:06:36.340 --> 00:06:37.884
After I refactor this
from the old version,

90
00:06:37.884 --> 00:06:39.354
of course to the new version, of course.

91
00:06:39.354 --> 00:06:42.946
It's like, yeah,
I could probably use Redux again now,

92
00:06:42.946 --> 00:06:44.864
this is actually kind of nice.

93
00:06:44.864 --> 00:06:49.580
Okay, so
now you should be able to type in here and

94
00:06:49.580 --> 00:06:54.774
say, Salt Lake City, and
I can change cat to be that.

95
00:06:54.774 --> 00:06:57.087
This is all still working again, right?

96
00:07:04.079 --> 00:07:07.111
So everything's still working
as we think it is, yeah.

97
00:07:07.111 --> 00:07:11.353
&gt;&gt; Why create dispatch instead
of using useDispatch directly?

98
00:07:16.489 --> 00:07:22.317
&gt;&gt; So the question is,
why is this API the way it is?

99
00:07:24.888 --> 00:07:25.953
Well, it's a hook, right?

100
00:07:25.953 --> 00:07:28.255
And so,
you don't wanna variably call hooks.

101
00:07:28.255 --> 00:07:32.467
In fact, that you can't call
a hook in an action, or, sorry,

102
00:07:32.467 --> 00:07:37.638
in an event listener, because it's
not in a react-function body, right?

103
00:07:37.638 --> 00:07:39.910
That's the only time you can use hooks.

104
00:07:39.910 --> 00:07:44.376
So it's just giving you a contextual
function that you're able to call from

105
00:07:44.376 --> 00:07:45.085
anywhere.

106
00:07:45.085 --> 00:07:50.875
In other words, it's a necessary technical

107
00:07:50.875 --> 00:07:55.607
constraint, due to how hooks work.

108
00:07:55.607 --> 00:08:01.380
Cool, other questions?

109
00:08:04.149 --> 00:08:05.353
All right.
One more thing.

110
00:08:05.353 --> 00:08:07.733
We have to go make it so
that if we're on this page,

111
00:08:07.733 --> 00:08:10.138
notice that this button is not updating,
right?

112
00:08:10.138 --> 00:08:14.950
You're actually seeing green,
which is the default context.

113
00:08:14.950 --> 00:08:18.784
So I'm gonna show you how to quickly
do this with a class component,

114
00:08:18.784 --> 00:08:21.691
which you're gonna see
this is far less pleasant.

115
00:08:21.691 --> 00:08:26.612
So, head over to Details.js and

116
00:08:26.612 --> 00:08:32.426
we wanna be able to read our theme here.

117
00:08:32.426 --> 00:08:34.748
So first of all,
delete your theme context.

118
00:08:34.748 --> 00:08:38.401
We're not doing that anymore, and

119
00:08:38.401 --> 00:08:43.766
we're going to import
connect from react-redux.

120
00:08:46.948 --> 00:08:49.539
Okay, theme context is gone, that's fine.

121
00:08:49.539 --> 00:08:55.235
We're gonna get rid of
theme context here So

122
00:08:55.235 --> 00:09:02.463
the theme consumer and
all that stuff, we're dumping that.

123
00:09:02.463 --> 00:09:08.448
And then we'll repopulate this
theme here in just a second.

124
00:09:08.448 --> 00:09:16.067
This will actually end up
being this.props.theme, okay?

125
00:09:23.809 --> 00:09:28.777
Now what I would actually do [LAUGH]
if this was me, I would just say

126
00:09:28.777 --> 00:09:33.755
const theme = use selector and
I would actually just do it here.

127
00:09:33.755 --> 00:09:38.511
Doing this exact same pattern that we do
with use params, that would totally work.

128
00:09:38.511 --> 00:09:39.979
We'd have no problems.

129
00:09:39.979 --> 00:09:43.525
You could even do useDispatch and
pass the dispatch and

130
00:09:43.525 --> 00:09:46.467
you would just pass it
in as a prop to details.

131
00:09:46.467 --> 00:09:49.706
And that would be 100%
the best way to do this.

132
00:09:49.706 --> 00:09:54.452
I'm gonna show you the old way to
do it because you'll probably run

133
00:09:54.452 --> 00:09:55.650
into this code.

134
00:09:55.650 --> 00:10:04.386
Okay, so we're gonna write
a function called mapStateToProps.

135
00:10:04.386 --> 00:10:10.037
This is gonna be a function
that takes in theme,

136
00:10:11.774 --> 00:10:15.557
And it returns an object theme.

137
00:10:19.231 --> 00:10:23.961
So, just to clarify that
kind of dense syntax here,

138
00:10:23.961 --> 00:10:30.205
this is basically just a function
that takes in props and it returns,

139
00:10:33.466 --> 00:10:37.903
theme: props.theme.

140
00:10:40.361 --> 00:10:45.921
This right here, returns this, and
the reason why you do it this way,

141
00:10:45.921 --> 00:10:52.247
as opposed to just returning the object
directly is we want just theme, right?

142
00:10:52.247 --> 00:10:53.532
It's a subscription, right?

143
00:10:53.532 --> 00:11:00.229
So we're letting it know,
if theme changes, then give me back theme.

144
00:11:00.229 --> 00:11:02.225
That's what that is.

145
00:11:04.976 --> 00:11:08.691
Okay, I'll leave that in there so
you can look at that.

146
00:11:08.691 --> 00:11:13.270
Then we're gonna make a new component
here called ReduxWrappedDetails.

147
00:11:13.270 --> 00:11:18.452
So, const ReduxWrappedDetails =

148
00:11:18.452 --> 00:11:25.195
connect(mapStateToProps)(Details).

149
00:11:28.014 --> 00:11:30.584
Okay, so now we've, I know this is weird.

150
00:11:30.584 --> 00:11:32.317
It's a function that returns a function.

151
00:11:32.317 --> 00:11:35.485
So we're calling this, this right here,

152
00:11:35.485 --> 00:11:40.775
what I've highlighted returns a function,
which this then invokes.

153
00:11:40.775 --> 00:11:42.392
I know it's a strange API,

154
00:11:42.392 --> 00:11:45.848
this was just really common
back in earlier days of React.

155
00:11:45.848 --> 00:11:52.041
This ends up with a component that
looks like this, ReduxWrappedDetails.

156
00:11:52.041 --> 00:11:56.347
And then here in WrappedDetails,

157
00:11:56.347 --> 00:12:02.735
we'll return ReduxWrappedDetails,
like that.

158
00:12:11.249 --> 00:12:13.936
If you're looking at me like,
why the hell are we doing this?

159
00:12:15.664 --> 00:12:18.287
I didn't want to either, but
you needed to know that.

160
00:12:18.287 --> 00:12:23.356
[LAUGH] One, I wanted you to know how
much better it got with the Hooks API.

161
00:12:23.356 --> 00:12:27.517
And two, again, if you're going into
a job where they have a lot of Redux and

162
00:12:27.517 --> 00:12:30.587
a lot of old Redux,
you're gonna see this everywhere.

163
00:12:30.587 --> 00:12:34.500
So it's good for
you to recognize how this used to be.

164
00:12:37.372 --> 00:12:42.338
Okay, so basically, what's happening
here is we created this function here,

165
00:12:42.338 --> 00:12:43.587
mapStateToProps.

166
00:12:43.587 --> 00:12:46.779
This grabs theme out of the store, okay?

167
00:12:46.779 --> 00:12:51.136
And then that's going to pass that
into ReduxWrappedDetails, right?

168
00:12:51.136 --> 00:12:56.081
So now this component here is
having theme being passed into it

169
00:12:56.081 --> 00:12:58.468
as a prop from Redux, right?

170
00:12:58.468 --> 00:13:01.212
Okay, and then from here,
we're passing that down into here.

171
00:13:01.212 --> 00:13:09.907
So now, here, this.props.theme
will be coming from Redux.

172
00:13:09.907 --> 00:13:12.361
Now we're not doing mapDispatchToProps,
but that's how you would do.

173
00:13:12.361 --> 00:13:15.337
There's another thing that you could do
here that will allow you to basically

174
00:13:15.337 --> 00:13:16.727
dispatch actions as well to Redux.

175
00:13:16.727 --> 00:13:20.362
We just don't have to do that
in this particular component.

176
00:13:20.362 --> 00:13:24.747
But now if you refresh the page here,

177
00:13:24.747 --> 00:13:30.548
we'll make this Peru and
we'll go look at Luna,

178
00:13:30.548 --> 00:13:36.363
and you can see here,
this is the correct color.

179
00:13:38.632 --> 00:13:40.738
Okay.
Any questions?

180
00:13:40.738 --> 00:13:42.448
This is it by the way,

181
00:13:42.448 --> 00:13:47.405
this is all the code that we're
going to write here for Redux.

182
00:13:47.405 --> 00:13:54.528
I'm gonna show you the big payoff of like,
okay, but the cool part of using Redux.

183
00:13:54.528 --> 00:13:58.285
Is RxJS similar to Redux?

184
00:13:58.285 --> 00:14:02.961
Let's go with no, they're
fundamentally very different things,

185
00:14:02.961 --> 00:14:06.356
they just happen to be
spelled fairly similarly.

186
00:14:06.356 --> 00:14:10.749
There's plenty of cool stuff on
Observables and RxJS on front of Masters.

187
00:14:10.749 --> 00:14:14.666
Is Joffers' course the newest
thing in that, Mark?

188
00:14:14.666 --> 00:14:15.358
&gt;&gt; Steve Kinney's.

189
00:14:15.358 --> 00:14:18.310
&gt;&gt; Steve Kinney's, okay, so
check out Steve Kinney's course on RxJS.

190
00:14:18.310 --> 00:14:23.611
So a question from Muhammad is,
how do we get data to the store?

191
00:14:23.611 --> 00:14:27.460
The only way to get data to
the store is through actions.

192
00:14:27.460 --> 00:14:32.390
That's the point is it's like a front
gateway into your data that has

193
00:14:32.390 --> 00:14:36.995
to go through a reducer and
there's no other way to mess with it.

194
00:14:36.995 --> 00:14:38.850
And that's very intentional and
it's a very good thing.

195
00:14:44.032 --> 00:14:49.110
And another question is, would I rather
do this with Context, absolutely.

196
00:14:49.110 --> 00:14:51.493
Yeah, this would be way
easier to do with Context.

197
00:14:51.493 --> 00:14:54.627
As you saw, we refactored from
Context to Redux, and for

198
00:14:54.627 --> 00:14:58.560
this particular use case,
Redux is just 10 billion times overkill.

