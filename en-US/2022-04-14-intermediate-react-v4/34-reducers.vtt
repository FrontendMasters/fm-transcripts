WEBVTT

1
00:00:00.594 --> 00:00:01.999
So now we have the store object.

2
00:00:01.999 --> 00:00:06.279
This is what actually all of
our data is going to be stored.

3
00:00:06.279 --> 00:00:08.648
It's aptly named, I'll put it that way.

4
00:00:10.737 --> 00:00:16.057
Okay, so
now I want you to make a folder inside

5
00:00:16.057 --> 00:00:21.241
of source and
I want you to call it reducers.

6
00:00:24.191 --> 00:00:31.549
Okay, instead of reducers,
I want you to make a file called index.js.

7
00:00:31.549 --> 00:00:36.994
And I want you to import
something called combineReducers

8
00:00:36.994 --> 00:00:41.994
from Redux and
then we're going to import location,

9
00:00:41.994 --> 00:00:48.121
which is something we're about
to write from dot ./location.

10
00:00:48.121 --> 00:00:51.252
Okay, and
then we're going to export default.

11
00:00:53.881 --> 00:00:57.680
CombineReducers, which is
gonna be an object and

12
00:00:57.680 --> 00:01:00.761
we will wanna put location, location.

13
00:01:03.107 --> 00:01:06.953
So location is going to be like a sub
reducer that we're about to write.

14
00:01:06.953 --> 00:01:11.581
And if you're familiar with JavaScript,
you know that if you have something,

15
00:01:11.581 --> 00:01:16.089
the key and the value are called the same
thing, you can just do that, right?

16
00:01:16.089 --> 00:01:20.978
So location, Those

17
00:01:20.978 --> 00:01:25.340
two lines are equivalent,
right, line five and line six.

18
00:01:25.340 --> 00:01:28.884
So because this is really nice to read,
we're just gonna do that.

19
00:01:32.357 --> 00:01:35.856
So let's talk about what
combineReducers does.

20
00:01:35.856 --> 00:01:40.424
combineReducers is a kind of just a little
helper function that Redux provides

21
00:01:40.424 --> 00:01:40.986
for you.

22
00:01:40.986 --> 00:01:44.982
Is like, all right, for all of my
various different pieces of state,

23
00:01:44.982 --> 00:01:48.729
I'm gonna have one little tiny
reducer that handles it, right?

24
00:01:48.729 --> 00:01:53.710
combinedReducers says, all right, what I'm
going to do with this location reducer is

25
00:01:53.710 --> 00:01:55.947
I'm gonna have a key called location.

26
00:01:55.947 --> 00:01:59.950
I'm going to call this micro
reducer that's going to just handle

27
00:01:59.950 --> 00:02:01.128
the location one.

28
00:02:01.128 --> 00:02:05.534
And then I'll make like
an overarching parent reducer for you.

29
00:02:05.534 --> 00:02:10.208
You can write your own parent reducer,
it would just look something like this,

30
00:02:10.208 --> 00:02:11.409
function reducer.

31
00:02:11.409 --> 00:02:16.179
It would take an action and a state,
you don't have to follow along by the way.

32
00:02:16.179 --> 00:02:19.065
And then it would just be
a giant switch statement.

33
00:02:19.065 --> 00:02:24.565
Switch, right, and
you'd switch on (action, type).

34
00:02:27.063 --> 00:02:30.727
And then you would say case,
location, or change location or

35
00:02:30.727 --> 00:02:32.566
something like that, right?

36
00:02:32.566 --> 00:02:35.639
And then you'd just write out
this giant switch statement.

37
00:02:35.639 --> 00:02:40.593
Actually, if you remember
from the useReducer section,

38
00:02:40.593 --> 00:02:45.051
we actually wrote one that
looks exactly like that.

39
00:02:50.485 --> 00:02:53.053
So this reducer right here,

40
00:02:53.053 --> 00:02:57.984
this is exactly what a parent
reducer would look like.

41
00:02:57.984 --> 00:02:59.538
In this case, do this.

42
00:02:59.538 --> 00:03:01.094
In this casem, do this.

43
00:03:01.094 --> 00:03:05.319
And instead of saying return here,
what you would be doing is,

44
00:03:05.319 --> 00:03:09.066
all right,
in case INCREMENT_R called the R reducer,

45
00:03:09.066 --> 00:03:12.673
called the G reducer,
called the B reducer, right?

46
00:03:12.673 --> 00:03:16.013
This gets really burdensome to write
over and over and over again and

47
00:03:16.013 --> 00:03:17.020
kinda hard to read.

48
00:03:17.020 --> 00:03:20.415
So combineReducer makes it really
easy to just say like, all right,

49
00:03:20.415 --> 00:03:23.530
I have a location reducer that
only thinks about the location.

50
00:03:23.530 --> 00:03:28.745
So set that to be the case for this one.

51
00:03:31.769 --> 00:03:32.477
Up to you.

52
00:03:32.477 --> 00:03:35.483
Actually, in previous versions of
this class, I actually taught it,

53
00:03:35.483 --> 00:03:38.356
where we actually coded this out and
we did not use combineReducer.

54
00:03:38.356 --> 00:03:42.175
But at the end of the day,
whenever I do write Redux, which honestly

55
00:03:42.175 --> 00:03:46.665
is not frequently anymore, I always use
combineReducer cuz it's so helpful.

56
00:03:46.665 --> 00:03:51.432
Okay, one more thing I wanted
to call out here, store.

57
00:03:51.432 --> 00:03:57.728
I noticed insanely important reducer from
./reducers and not ./reducers/index.

58
00:03:57.728 --> 00:04:00.548
This is just like a little
node trick that you can do.

59
00:04:00.548 --> 00:04:03.807
If you say import something
from a directory and

60
00:04:03.807 --> 00:04:09.196
you don't specify which file,
it'll automatically look for an index.js.

61
00:04:09.196 --> 00:04:13.469
So in this particular case, I'm not
specifying to import from index.js, but

62
00:04:13.469 --> 00:04:17.316
it is, because that's something
that no JS just does automatically.

63
00:04:20.214 --> 00:04:25.624
Okay, so
let's go make the location reducer.

64
00:04:25.624 --> 00:04:29.655
When we're at location.js,
this is going in the Reducers folder.

65
00:04:31.621 --> 00:04:36.200
And here, we're going to make
a very small little reducer.

66
00:04:36.200 --> 00:04:40.681
Export, default, function, location,

67
00:04:44.104 --> 00:04:47.904
And you have to give it a default value.

68
00:04:47.904 --> 00:04:50.441
So the way to do that in
JavaScript is to say a state.

69
00:04:50.441 --> 00:04:55.474
If here's my default state,
which I'm gonna call "Seattle,

70
00:04:55.474 --> 00:05:01.643
WA" for my default state for the location,
but you can put whatever you want.

71
00:05:01.643 --> 00:05:07.579
And then the action,
you do not wanna default for the action.

72
00:05:07.579 --> 00:05:11.891
And then you're gonna say switch

73
00:05:11.891 --> 00:05:16.819
(action.type) in the case that you

74
00:05:16.819 --> 00:05:22.363
were get issued a "CHANGE_LOCATION",

75
00:05:22.363 --> 00:05:28.369
action type, then return action.payload,

76
00:05:28.369 --> 00:05:32.535
otherwise, return the state.

77
00:05:35.252 --> 00:05:38.502
A lot of reducers end up looking
pretty similar to something like this.

78
00:05:38.502 --> 00:05:42.755
So let's talk about something
like how the reducer has to work.

79
00:05:42.755 --> 00:05:48.152
Every reducer without exception
will take in the current state and

80
00:05:48.152 --> 00:05:52.887
then we'll take an action,
that action must have a type.

81
00:05:52.887 --> 00:05:56.690
The only thing that it
must have is a type.

82
00:05:56.690 --> 00:06:01.509
Okay, so in this particular case,
the only action that this

83
00:06:01.509 --> 00:06:06.043
reducer cares about is
a "CHANGE_LOCATION" action,

84
00:06:06.043 --> 00:06:11.245
in which case, you just return
whatever that action payload is.

85
00:06:11.245 --> 00:06:14.698
So this could come in with like
Salt Lake City, Utah, right?

86
00:06:14.698 --> 00:06:17.770
And it will return Salt Lake City, Utah,
and that would be the new state, right?

87
00:06:17.770 --> 00:06:20.597
We're not doing anything special here.

88
00:06:20.597 --> 00:06:23.245
I don't know if it was important
that it was always to uppercase.

89
00:06:23.245 --> 00:06:28.157
You could totally do
something like to upper case.

90
00:06:28.157 --> 00:06:33.229
In which case, you could give this
any sort of action payload here and

91
00:06:33.229 --> 00:06:37.345
it will always return to
something uppercase, right?

92
00:06:37.345 --> 00:06:40.720
But any sort of modification you
need to do, you would do here.

93
00:06:40.720 --> 00:06:44.583
Okay, if any other type of
action gets called with this,

94
00:06:44.583 --> 00:06:49.100
then you just wanna say like,
don't change my location, right?

95
00:06:49.100 --> 00:06:52.160
If this gets called with change animal,

96
00:06:52.160 --> 00:06:57.119
that doesn't affect the location,
so it's just gonna do that.

97
00:06:57.119 --> 00:07:02.276
So something key to note,
this reducer will get called with every

98
00:07:02.276 --> 00:07:07.263
single action, whether or not,
this reducer cares about it.

99
00:07:07.263 --> 00:07:09.663
This reducer will be called
with every single action,

100
00:07:09.663 --> 00:07:11.914
which is why we have to have
this default case here.

101
00:07:13.626 --> 00:07:18.662
So if I issue a change animal action,
this reducer is still going to run.

102
00:07:18.662 --> 00:07:22.772
Which means if nothing changed,
then just return the state as it was.

103
00:07:24.832 --> 00:07:29.055
If you return the same state, then you're
telling Redux nothing changed here,

104
00:07:29.055 --> 00:07:32.924
therefore, do not update anything and
subscribe to my changes, right?

105
00:07:32.924 --> 00:07:37.456
So for example,
if you have this SearchParams thing,

106
00:07:37.456 --> 00:07:40.124
all it cares about is location.

107
00:07:40.124 --> 00:07:43.567
And location doesn't update but
something else upstate.

108
00:07:43.567 --> 00:07:47.548
Redux won't inform it as long as
location itself didn't change.

109
00:07:47.548 --> 00:07:52.714
And we'll talk more about that
once we actually start plugging

110
00:07:52.714 --> 00:07:58.943
everything together, Okay,
so that's a reducer,

111
00:07:58.943 --> 00:08:04.264
yeah, just a couple of key
things to keep in mind here.

112
00:08:04.264 --> 00:08:06.390
It has to return the state always.

113
00:08:06.390 --> 00:08:13.095
It has to have a default state and
it has to accept actions.

114
00:08:13.095 --> 00:08:18.386
Notice I called this action.payload,
that's not required.

115
00:08:18.386 --> 00:08:20.376
Though, I'll say it's common.

116
00:08:20.376 --> 00:08:24.668
Like whatever things that
you're updating with,

117
00:08:24.668 --> 00:08:29.160
there's a thing called
a flux-standard-action,

118
00:08:29.160 --> 00:08:34.065
flux-standard-action, I
think is what it's called.

119
00:08:38.425 --> 00:08:42.732
It's a spec that someone wrote
that basically says like, hey,

120
00:08:42.732 --> 00:08:46.103
there's a lot of Redux
like libraries out there.

121
00:08:46.103 --> 00:08:49.085
Let's all make all of the action
shapes the same thing so

122
00:08:49.085 --> 00:08:53.161
that if we have action type libraries,
they can interrupt with each other.

123
00:08:53.161 --> 00:08:55.582
I'll say that I don't know of any
libraries that actually depend on this.

124
00:08:55.582 --> 00:08:59.389
So the value prop is nebulous.

125
00:08:59.389 --> 00:09:03.335
I just liked that someone else thought
about this and came up with a good idea so

126
00:09:03.335 --> 00:09:04.984
I don't have to think about it.

127
00:09:04.984 --> 00:09:08.692
But okay,
everything has a type that's 100% true.

128
00:09:08.692 --> 00:09:13.567
They'll have a payload if they have
something to dispatch to that particular

129
00:09:13.567 --> 00:09:20.109
reducer and then they also can have
an error, so, Must have a type,

130
00:09:20.109 --> 00:09:25.080
can have an error, can have a payload,
and can have a meta property.

131
00:09:25.080 --> 00:09:30.017
So meta can be stuff that's
like extra information.

132
00:09:30.017 --> 00:09:31.681
Maybe it might be like telemetry.

133
00:09:31.681 --> 00:09:34.564
It might be timing, it might be something
that doesn't have anything to do

134
00:09:34.564 --> 00:09:37.744
with the payload, but it's just additional
meta information about the action.

135
00:09:37.744 --> 00:09:44.865
Actually I'll say that I've used
error before, I've never used meta.

136
00:09:44.865 --> 00:09:48.965
Okay, so that's why I'm calling
things the way that I'm calling them.

137
00:09:48.965 --> 00:09:52.809
This is not required, it's just I
think it's a good idea maybe, okay?

138
00:09:56.912 --> 00:10:06.288
So this is now a incredibly
testable reducer, right?

139
00:10:06.288 --> 00:10:09.649
This has no side effects,
which reduces can't and they shouldn't, or

140
00:10:09.649 --> 00:10:10.649
anything like that.

141
00:10:10.649 --> 00:10:14.854
All it does is like,
given a state, given an action,

142
00:10:14.854 --> 00:10:17.942
do I get the correct new state out of it?

143
00:10:17.942 --> 00:10:22.928
So if I call this with Seattle or if I
call the state, the old state Seattle, and

144
00:10:22.928 --> 00:10:26.479
I give it with an action.payload
of Salt Lake City, and

145
00:10:26.479 --> 00:10:28.541
I call that ten trillion times.

146
00:10:28.541 --> 00:10:33.437
On the ten trillion first time,
what is the new payload?

147
00:10:33.437 --> 00:10:37.110
Salt Lake City, right,
cuz it's just overriding it, right?

148
00:10:37.110 --> 00:10:42.704
So old state = Seattle.

149
00:10:42.704 --> 00:10:47.906
And then action is type,

150
00:10:47.906 --> 00:10:55.348
CHANGE_LOCATION, and payload.

151
00:10:59.654 --> 00:11:03.293
Salt Lake City or
something like that, right?

152
00:11:03.293 --> 00:11:10.700
The new state at the end of this
would end up being SLC, right?

153
00:11:10.700 --> 00:11:14.032
This is extremely nice because
now I write one unit test and

154
00:11:14.032 --> 00:11:18.321
I guarantee you this never drifts,
right, that I will not have bugs here.

155
00:11:18.321 --> 00:11:22.208
This is why use Redux,
is this particular part is this,

156
00:11:22.208 --> 00:11:26.941
this delta in old state and
new state and making that very testable.

157
00:11:26.941 --> 00:11:30.394
That is why Redux is great.

158
00:11:31.885 --> 00:11:36.029
Okay, I hope I've belabor
that point enough.

159
00:11:36.029 --> 00:11:41.581
[LAUGH] So let's go make the rest of
the reducers that we need to make now.

160
00:11:41.581 --> 00:11:46.754
We're gonna make another
one called theme.js and

161
00:11:46.754 --> 00:11:52.775
you could probably just basically copy and
paste this one.

162
00:11:52.775 --> 00:11:57.610
And the default is gonna be darkblue.

163
00:11:57.610 --> 00:12:02.200
This is gonna be called theme,
and instead of change location,

164
00:12:02.200 --> 00:12:05.687
it's gonna be CHANGE_THEME, and that's it.

165
00:12:07.934 --> 00:12:11.801
There's probably some library that will
generate these really basic ones for you.

166
00:12:14.577 --> 00:12:15.798
I don't know what it is though.

167
00:12:20.962 --> 00:12:24.220
Okay, we're gonna do animal as well, oops.

168
00:12:30.990 --> 00:12:35.689
Animal.js, this will be called animal.

169
00:12:35.689 --> 00:12:43.248
The default animal is no animal, and
this only listens for animal changes.

170
00:12:48.888 --> 00:12:51.914
Okay, one more.

171
00:12:51.914 --> 00:12:53.378
We're gonna make breed.js.

172
00:12:53.378 --> 00:12:58.251
This one actually has something more,
which makes it a little bit more exciting.

173
00:12:58.251 --> 00:13:00.965
I guess it depends if you
get excited about Redux,

174
00:13:00.965 --> 00:13:02.721
in which case I have questions.

175
00:13:02.721 --> 00:13:09.149
Okay, this is gonna be breed,
the default breed is no breed.

176
00:13:09.149 --> 00:13:14.735
This one listens for obviously change
breed themes, so CHANGE_BREED.

177
00:13:14.735 --> 00:13:19.535
But this will actually listen for
one more action type.

178
00:13:19.535 --> 00:13:24.698
And this will listen actually as well for
a case "CHANGE_ANIMAL" as well.

179
00:13:24.698 --> 00:13:31.450
If you remember, we don't wanna
have poodle cats or cockatiel dogs.

180
00:13:31.450 --> 00:13:37.067
So we'll say return empty string
in that particular case, right?

181
00:13:37.067 --> 00:13:42.154
So if anyone changes the animal,
we wanna set breed to be empty string.

182
00:13:45.351 --> 00:13:50.880
So this is why it's actually advantageous
that every reducer gets called with

183
00:13:50.880 --> 00:13:57.536
every action, cuz now, multiple reducers
can concern themselves with one action.

184
00:13:57.536 --> 00:14:03.762
Okay, now all we have to do is
go back to our index.js and

185
00:14:03.762 --> 00:14:10.638
import all of these,
import breed from our /breed.

186
00:14:10.638 --> 00:14:15.087
And we'll do animal from animal and

187
00:14:15.087 --> 00:14:18.648
we'll do theme from theme.

188
00:14:18.648 --> 00:14:24.371
And then again,
we'll do breed animal and theme.

189
00:14:29.124 --> 00:14:33.515
Okay, and
now all of our reducers are setup.

190
00:14:33.515 --> 00:14:38.918
&gt;&gt; So just to confirm, so
our combineReducers, that's just making

191
00:14:38.918 --> 00:14:45.776
sure that these other individual reducers
we set up all run at the same time, right?

192
00:14:45.776 --> 00:14:51.120
&gt;&gt; This combineReducer is generating
a function that basically does this.

193
00:14:51.120 --> 00:14:54.593
And it's just like a much longer one
that we don't have to care about.

194
00:14:54.593 --> 00:14:58.251
[COUGH] The other nicety that it does for
you is, notice here,

195
00:14:58.251 --> 00:15:01.992
we're not listening for
the entire state object all at once.

196
00:15:01.992 --> 00:15:05.603
It's actually giving you
just the state of animal.

197
00:15:05.603 --> 00:15:07.461
That's the other nicety that it does.

198
00:15:07.461 --> 00:15:12.989
Otherwise, instead of saying return state
here, you'd have to do like an object

199
00:15:12.989 --> 00:15:17.890
of a sign to make sure that you're
modifying just that part of the state.

200
00:15:17.890 --> 00:15:21.490
combineReducers takes care of a lot
of that just plumbing up for you.

