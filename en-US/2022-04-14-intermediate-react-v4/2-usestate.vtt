WEBVTT

1
00:00:00.000 --> 00:00:04.551
The next thing that we're gonna do is
we're gonna go over all the hooks that

2
00:00:04.551 --> 00:00:06.947
are available and react, all of them.

3
00:00:06.947 --> 00:00:12.778
So what I want you to do go back
to your course website here,

4
00:00:12.778 --> 00:00:15.993
and come down to hooks in depth.

5
00:00:15.993 --> 00:00:20.949
So suddenly, as you've seen before,
like you state and use effect,

6
00:00:20.949 --> 00:00:23.895
but some of these will
be brand new to you.

7
00:00:23.895 --> 00:00:29.353
And I kind of tried to go in order of
how useful they're going to be to you.

8
00:00:29.353 --> 00:00:31.055
So let's go ahead and
start with you state.

9
00:00:31.055 --> 00:00:34.284
Obviously the most useful of that we're
gonna do this all in code sandbox.

10
00:00:34.284 --> 00:00:38.044
It seems like a good way to fit this
all into one kind of cohesive view.

11
00:00:38.044 --> 00:00:41.883
If you're not familiar with
code sandbox it's like any one

12
00:00:41.883 --> 00:00:46.412
of these like online code editors like
GitHub Code Spaces or code pen or

13
00:00:46.412 --> 00:00:51.200
stack blitz or JS fiddle, there's
a million of these out there, right?

14
00:00:51.200 --> 00:00:53.420
I like code sandbox.

15
00:00:53.420 --> 00:00:56.332
Just, I mean, I like the team and

16
00:00:56.332 --> 00:01:02.061
I think it's a relatively nice
use of the VS code base, right.?

17
00:01:02.061 --> 00:01:04.740
Obviously this is very VS codey.

18
00:01:06.530 --> 00:01:09.340
That is a word VS codey,
just in case you're wondering.

19
00:01:09.340 --> 00:01:11.211
Thanks for asking.

20
00:01:11.211 --> 00:01:14.846
Okay, so
this is a fairly simple project here but

21
00:01:14.846 --> 00:01:19.902
you can see here actually just put
all of the examples onto one page so

22
00:01:19.902 --> 00:01:25.597
you can kind of just go down and see step
by step each one of the examples here.

23
00:01:25.597 --> 00:01:29.875
So we have used state to use effect,
all that kind of stuff,

24
00:01:29.875 --> 00:01:34.081
you can see here the state
component is here, state.js.

25
00:01:34.081 --> 00:01:41.415
And we're just going to go over bit by bit
all of these various different use cases.

26
00:01:41.415 --> 00:01:43.190
Here we go.

27
00:01:43.190 --> 00:01:48.859
So, to show you this top one, if you just
click on it, it goes from red to green.

28
00:01:48.859 --> 00:01:53.853
I must have been in like
a Christmas move when I wrote this.

29
00:01:53.853 --> 00:01:57.557
That's also super inaccessible if you're
colorblind, I'm very sorry about that.

30
00:01:57.557 --> 00:01:59.415
That just occurred to me.

31
00:01:59.415 --> 00:02:00.276
[LAUGH].

32
00:02:00.276 --> 00:02:02.021
If you are red green colorblind,

33
00:02:02.021 --> 00:02:05.961
you can like Brian is a horrible
person which is objectively true.

34
00:02:05.961 --> 00:02:11.448
[LAUGH] But if you click on it, I promise
you it is changing between red and green.

35
00:02:11.448 --> 00:02:15.687
So yeah, we could change this
from crimson to be, I don't know,

36
00:02:15.687 --> 00:02:17.933
like cyan or something like that.

37
00:02:17.933 --> 00:02:19.185
There you go.

38
00:02:19.185 --> 00:02:21.945
That's probably, I mean,
now it's not super

39
00:02:21.945 --> 00:02:26.919
accessible as against a white background,
but at least it's red green colorblind.

40
00:02:26.919 --> 00:02:32.056
That seemed like intentional and
I promise you it was not [LAUGH].

41
00:02:32.056 --> 00:02:36.499
Okay, so for
this particular hook here, use state,

42
00:02:36.499 --> 00:02:39.875
we set it to be true, this value is true.

43
00:02:39.875 --> 00:02:44.056
Something I'm gonna just throw
out here as a word of caution.

44
00:02:44.056 --> 00:02:47.760
It is the default value, but if you're
doing something here, that's like costly.

45
00:02:47.760 --> 00:02:50.680
So a good example that is,
I don't know why you would do it.

46
00:02:54.560 --> 00:02:57.292
Whatever, this doesn't matter.

47
00:02:57.292 --> 00:03:02.083
But if you do something like
document.createelement('div') or

48
00:03:02.083 --> 00:03:07.695
something like that here where you're
actually doing something that's doing.

49
00:03:07.695 --> 00:03:12.094
This is not a cheap procedure
to create and destroy DOM nodes.

50
00:03:12.094 --> 00:03:14.680
This would be the default value,
it would be a div, right?

51
00:03:14.680 --> 00:03:18.464
But every time that you ran this function
it would be creating a div that you would

52
00:03:18.464 --> 00:03:20.285
just be ignoring after that, right?

53
00:03:20.285 --> 00:03:23.050
So this is where you would not
wanna do something like that.

54
00:03:23.050 --> 00:03:27.904
And just make sure that whatever you
put in here as the default state is

55
00:03:27.904 --> 00:03:31.429
either already computed or
it's cheap, right?

56
00:03:31.429 --> 00:03:35.790
Just kind of a performance
thing to think about there.

57
00:03:35.790 --> 00:03:39.230
Also, I don't know why you would create a
div and keep it in state but I don't know.

58
00:03:39.230 --> 00:03:42.070
So I'm sure somewhere
someone has that use case.

59
00:03:44.768 --> 00:03:50.097
Okay, I think,
can you just give this a function?

60
00:03:50.097 --> 00:03:51.587
I don't know.

61
00:03:51.587 --> 00:03:55.100
That's a better question coz then it
would only get invoked the first time.

62
00:04:02.616 --> 00:04:05.718
Just so you know,
this does have its own console.

63
00:04:05.718 --> 00:04:08.440
So if we look down here
at the console it does.

64
00:04:08.440 --> 00:04:11.040
That's kind of cool.

65
00:04:11.040 --> 00:04:13.698
So today I learned.

66
00:04:13.698 --> 00:04:16.787
So what's advantageous about this is
now this div's all you need be created

67
00:04:16.787 --> 00:04:17.421
once, right?

68
00:04:17.421 --> 00:04:20.271
It's gonna only invoke that function once.

69
00:04:20.271 --> 00:04:24.186
Which means that this document or this
does only thing get created the first time

70
00:04:29.163 --> 00:04:35.063
Right now I want you to go away
cancel this one, there it is, okay.

71
00:04:35.063 --> 00:04:39.343
Okay, and then here you're just calling
this is giving you back a tuple.

72
00:04:39.343 --> 00:04:44.562
Which I intentionally say incorrectly, so
that upsets people that come from Python,

73
00:04:44.562 --> 00:04:48.362
it's a tuple but I calling it
a tuple which is just a pair right?

74
00:04:48.362 --> 00:04:50.740
The first thing is the current state so
is green.

75
00:04:50.740 --> 00:04:52.060
Is it green or not?

76
00:04:52.060 --> 00:04:56.014
And I guess now I've made it yeah,
this green.

77
00:04:56.014 --> 00:04:59.600
And then I have this thing
to set is it green or not.

78
00:04:59.600 --> 00:05:04.836
Here on the on click which we're doing in
a very inaccessible way at the moment,

79
00:05:04.836 --> 00:05:09.836
we are calling a function that's setting
the green to be is it the opposite of

80
00:05:09.836 --> 00:05:12.047
it's currently green, right?

81
00:05:12.047 --> 00:05:16.116
So if it's green it's making it not green
if it's not green it's making it green.

82
00:05:16.116 --> 00:05:20.539
And that is useState which should
not be surprising to you if

83
00:05:20.539 --> 00:05:23.200
you're coming from the intro react

