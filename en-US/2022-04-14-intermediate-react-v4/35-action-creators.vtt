WEBVTT

1
00:00:01.030 --> 00:00:04.320
We're gonna do the action
creator pattern here.

2
00:00:04.320 --> 00:00:06.540
We you don't have to do it this way.

3
00:00:06.540 --> 00:00:09.692
I think it's just helpful at least for me.

4
00:00:09.692 --> 00:00:14.400
So I want you to make another
directory called action creators.

5
00:00:22.647 --> 00:00:25.996
So when you dispatch these actions,
just like we were talking about,

6
00:00:25.996 --> 00:00:28.454
they have to be of like
a particular shape, right?

7
00:00:28.454 --> 00:00:32.310
Where it has to have a type and
a payload and all that kind of stuff.

8
00:00:32.310 --> 00:00:37.910
People will just craft those objects on
the fly, which can be kind of annoying.

9
00:00:37.910 --> 00:00:43.107
If you make an action creator, it's just
a function that takes in a payload and

10
00:00:43.107 --> 00:00:45.330
returns a well-shaped object.

11
00:00:45.330 --> 00:00:47.931
So there are little helper functions.

12
00:00:47.931 --> 00:00:51.988
And I'll say that I see a lot
of people do it this way.

13
00:00:51.988 --> 00:00:55.698
So you can either make
one actionCreators.js and

14
00:00:55.698 --> 00:00:57.558
export a bunch of times.

15
00:00:57.558 --> 00:01:02.571
That's totally valid or you can do
this where you're just gonna make

16
00:01:02.571 --> 00:01:08.465
a directory that has a bunch of individual
JavaScript files that are very short.

17
00:01:08.465 --> 00:01:10.465
So let's do changeTheme.js.

18
00:01:10.465 --> 00:01:15.130
All you're gonna do is export
a default function here

19
00:01:15.130 --> 00:01:20.002
called changeTheme,
that takes in a theme parameter,

20
00:01:20.002 --> 00:01:24.579
and returns a well formed
object of CHANGE_THEME.

21
00:01:24.579 --> 00:01:27.718
And its payload is theme.

22
00:01:31.961 --> 00:01:35.769
So it's just a three liner.

23
00:01:35.769 --> 00:01:37.659
So again,
instead of making an action creator here,

24
00:01:37.659 --> 00:01:40.060
you could just craft this object
every single time that you need to.

25
00:01:42.720 --> 00:01:44.970
It's up to you if you find
that offensive or not.

26
00:01:46.980 --> 00:01:51.209
You can have action creators
that maybe do a little bit more.

27
00:01:51.209 --> 00:01:54.530
I wouldn't really imagine that they
would do too much more, but you could.

28
00:01:57.134 --> 00:01:59.882
Okay, and so we're gonna go make
a bunch of those too, right?

29
00:01:59.882 --> 00:02:03.324
So we're gonna create one
called changeAnimal.js.

30
00:02:03.324 --> 00:02:07.223
It's gonna look really similar,

31
00:02:07.223 --> 00:02:12.338
changeAnimal, animal, CHANGE_ANIMAL.

32
00:02:14.037 --> 00:02:18.033
The big win here is that you don't
have to remember the type, and

33
00:02:18.033 --> 00:02:22.107
you're never gonna fat finger
what this very special string is.

34
00:02:25.964 --> 00:02:32.614
Okay, we'll make another one for
breed, changeBreed.js.

35
00:02:37.952 --> 00:02:42.724
Breed, breed, breed, Breed,

36
00:02:42.724 --> 00:02:47.662
and breed, Okay?

37
00:02:47.662 --> 00:02:52.545
And then you guessed it, changeLocation.

38
00:03:01.033 --> 00:03:07.963
As you can see here,
I'm showing you one way of doing this.

39
00:03:07.963 --> 00:03:11.944
There's a lot of people with a lot of
opinions about what's the correct way to

40
00:03:11.944 --> 00:03:12.688
write Redux.

41
00:03:12.688 --> 00:03:16.559
And I'll let you argue with them cuz
I'm very sick of arguing with them over

42
00:03:16.559 --> 00:03:17.182
the years.

43
00:03:21.045 --> 00:03:25.353
Basically, of all the patterns that I saw,

44
00:03:25.353 --> 00:03:29.433
here's the most common one I saw emerge.

45
00:03:30.440 --> 00:03:33.570
Okay, so one more thing here.

46
00:03:33.570 --> 00:03:38.618
In previous versions of this course,
I think V4 is the last time I taught this.

47
00:03:38.618 --> 00:03:42.971
I actually did show you how to do
Redux Thunk and how to do async.

48
00:03:42.971 --> 00:03:45.860
Instead of dispensing an action here,
you dispense or dispatch.

49
00:03:45.860 --> 00:03:50.512
You dispatch a function to Redux, and
Redux would run a function for you to do

50
00:03:50.512 --> 00:03:55.326
all the async thing, which would then
later dispatch a function to the store.

51
00:03:55.326 --> 00:03:58.470
But we're not gonna do that today.

52
00:03:58.470 --> 00:03:59.325
Yeah, Mark.

53
00:03:59.325 --> 00:04:04.292
&gt;&gt; Dispatch will run through
all reducers in order, correct?

54
00:04:04.292 --> 00:04:05.350
&gt;&gt; That's a good question.

55
00:04:05.350 --> 00:04:08.823
What order does combine reducers go in?

56
00:04:08.823 --> 00:04:17.006
Well, one, your code, not only should it
not care what order it goes in, it can't.

57
00:04:17.006 --> 00:04:20.353
It can't because all these functions
need to have no side effects and

58
00:04:20.353 --> 00:04:23.077
not care about the environment
that they're running.

59
00:04:23.077 --> 00:04:28.974
So if you depend on an order being
correct, you're not doing Redux correctly,

60
00:04:28.974 --> 00:04:32.770
and you're gonna have
bugs arise from that.

61
00:04:32.770 --> 00:04:36.727
However, I'm pretty sure that that
assumption is technically correct,

62
00:04:36.727 --> 00:04:40.449
that whatever order you put them in
should be the order that it runs in.

63
00:04:40.449 --> 00:04:45.195
But it's also, I think, dependent on
the JavaScript engine that's running it.

64
00:04:45.195 --> 00:04:50.308
I think according to spec,
if you call object.keys on something,

65
00:04:50.308 --> 00:04:55.165
I don't think it has to be the back
in the order that it was set in.

66
00:04:55.165 --> 00:04:57.541
You'd have to read the spec at that point,
cuz now,

67
00:04:57.541 --> 00:05:00.354
we're really into the find
details of how JavaScript works.

68
00:05:00.354 --> 00:05:02.621
But certainly, I'll say this.

69
00:05:02.621 --> 00:05:05.009
Some engines don't respect it,
whether or not they should.

70
00:05:06.439 --> 00:05:08.287
Probably, all modern engines would.

71
00:05:12.745 --> 00:05:14.913
Cause a lot of mismatched information.

72
00:05:14.913 --> 00:05:20.963
The key underlying message there
is don't depend on an order.

73
00:05:20.963 --> 00:05:26.290
In case you're wondering there, I think
they're referring to this order here.

74
00:05:26.290 --> 00:05:29.481
So location would be called first,
then breed, then animal, then theme.

