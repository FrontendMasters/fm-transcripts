WEBVTT

1
00:00:00.204 --> 00:00:04.534
So pop over to error boundary .js and

2
00:00:04.534 --> 00:00:09.150
renamed this to error boundary .tsx.

3
00:00:09.150 --> 00:00:13.854
And you can see here we
actually only have errors here,

4
00:00:13.854 --> 00:00:16.826
everything else is looking good.

5
00:00:16.826 --> 00:00:21.929
And so luckily this is an error,
as you might guess, is an error.

6
00:00:24.889 --> 00:00:26.382
That's kinda nice, right?

7
00:00:26.382 --> 00:00:28.269
Kinda descriptive?

8
00:00:28.269 --> 00:00:32.765
All right, can you guess what info is?

9
00:00:32.765 --> 00:00:36.971
It is ErrorInfo,

10
00:00:40.296 --> 00:00:46.112
This one we actually do have to import
from react, so little cheat here.

11
00:00:46.112 --> 00:00:50.132
You can see error info, it comes from
react, if you just click on that.

12
00:00:50.132 --> 00:00:52.645
It'll actually just
automatically import it for you.

13
00:00:55.425 --> 00:01:00.248
That's it, congratulations,
you just did error boundary.

14
00:01:00.248 --> 00:01:04.711
So, I mean, again, that's what I was
saying about whack a mole with TypeScript

15
00:01:04.711 --> 00:01:08.401
errors and things like that is,
frequently it's really simple.

16
00:01:08.401 --> 00:01:11.979
Some of these files, you might not
even have to make any changes.

17
00:01:11.979 --> 00:01:13.965
You just change the file extension,
it's gonna be like, cool.

18
00:01:13.965 --> 00:01:17.531
I got everything let's keep going.

19
00:01:17.531 --> 00:01:19.587
So it's good to always check.

20
00:01:19.587 --> 00:01:21.006
So let's go do carousel.

21
00:01:21.006 --> 00:01:24.078
There's obviously gonna be a little
bit more, or maybe not obviously, but

22
00:01:24.078 --> 00:01:25.087
there is more to do here.

23
00:01:25.087 --> 00:01:30.074
So we're gonna rename
this to carousel.tsx.

24
00:01:32.041 --> 00:01:36.979
Up here at the top from
react we're going to import,

25
00:01:36.979 --> 00:01:42.364
MouseEvent and ReactNode, Okay?

26
00:01:42.364 --> 00:01:49.447
Here above Carousel we're
gonna do an interface.

27
00:01:49.447 --> 00:01:52.489
And again,
you can call this I props or props.

28
00:01:52.489 --> 00:01:57.439
I frequently still call it I props because
the the TS lint rules that I used to use

29
00:01:57.439 --> 00:02:02.389
before the TypeScript es lint came along
required that you called interfaces I

30
00:02:02.389 --> 00:02:07.634
props I don't know if it's useful or
not, I mean,

31
00:02:07.634 --> 00:02:11.416
the thing to always keep in mind is if
you see an I there, I think this is like

32
00:02:11.416 --> 00:02:15.696
a .net thing, if I remember correctly,
which makes sense TypeScript came from.

33
00:02:15.696 --> 00:02:20.017
Anders Helzberg, which wrote both
Typescript and C sharp and so

34
00:02:20.017 --> 00:02:24.268
that community has a high amount
of overlap, anyway up to you.

35
00:02:24.268 --> 00:02:27.990
It's up to you if you want to use
that Iprops which is called props.

36
00:02:27.990 --> 00:02:34.279
Images is a string array, that's the kind
of props we're expecting here and

37
00:02:34.279 --> 00:02:39.421
here under component,
we're gonna call this Iprops, okay?

38
00:02:39.421 --> 00:02:44.588
So now we know that carousel
is a component that

39
00:02:44.588 --> 00:02:49.762
expects a string array called Images,
okay?

40
00:02:49.762 --> 00:02:51.554
Active is already good here,

41
00:02:51.554 --> 00:02:54.930
we already know this is gonna
be a number that's great.

42
00:02:54.930 --> 00:02:58.476
Let's go down to handle index click.

43
00:02:58.476 --> 00:03:04.490
So our event here is going
to be a mouse event.

44
00:03:04.490 --> 00:03:08.281
And the target of that is
going to be an HTML element.

45
00:03:11.210 --> 00:03:14.437
Okay?
So now that we know that that's an event,

46
00:03:14.437 --> 00:03:17.733
this is a specifically
a mouse event from react.

47
00:03:17.733 --> 00:03:21.323
You could have just said this was
our mouse event from the DOM and

48
00:03:21.323 --> 00:03:22.896
their shapes are the same.

49
00:03:22.896 --> 00:03:26.113
But it's good to be specific if
you know the difference, okay?

50
00:03:28.379 --> 00:03:32.669
Here it's gonna say like well, I don't
know if we're gonna get this cuz this

51
00:03:32.669 --> 00:03:36.381
could be no and that would make
this something other than a number.

52
00:03:36.381 --> 00:03:41.717
So, we need you to be a bit
more specific about this.

53
00:03:41.717 --> 00:03:48.450
So, we have to be a bit more defensive and

54
00:03:48.450 --> 00:03:53.005
say if event.target is not

55
00:03:53.005 --> 00:03:57.566
an instance of HTML element

56
00:04:03.138 --> 00:04:07.626
Then return, okay?

57
00:04:10.403 --> 00:04:12.197
Then we have to ask, okay,

58
00:04:12.197 --> 00:04:16.417
now we definitely know event.target
is a HTML element, cool.

59
00:04:16.417 --> 00:04:24.974
And then we have to ask again
event.target.dataset.index.

60
00:04:24.974 --> 00:04:27.264
And then set this to be that.

61
00:04:30.409 --> 00:04:34.641
Now, again, this will annoy some people,
this was working before.

62
00:04:34.641 --> 00:04:36.850
Why do I have to be so
defensive about this and

63
00:04:36.850 --> 00:04:40.453
it's just to appease the TypeScript Gods
cuz now you're guaranteed?

64
00:04:40.453 --> 00:04:44.581
But if you get down to here,
this is definitely there, so

65
00:04:44.581 --> 00:04:48.452
therefore we can do that and
everything will be fine.

66
00:04:50.551 --> 00:04:53.763
But another fun thing here,
I think if you delete this, save it

67
00:04:56.762 --> 00:04:59.808
It makes a string, interesting,
and it's fine with that.

68
00:05:02.649 --> 00:05:06.340
Now it's a number, I thought it
would have been upset by that.

69
00:05:10.241 --> 00:05:12.159
Yeah, no okay, sure.

70
00:05:17.535 --> 00:05:22.283
So, Yeah,

71
00:05:22.283 --> 00:05:25.931
again you can specify an I state
here if you wanted to, and

72
00:05:25.931 --> 00:05:30.271
say that active is a number, but
implicitly it gets that from here.

73
00:05:35.020 --> 00:05:35.867
Cool.

74
00:05:38.879 --> 00:05:42.223
I think I had here in my notes,
you can see that this is a void

75
00:05:42.223 --> 00:05:45.999
return type here if you want to
cuz it's not returning anything.

76
00:05:45.999 --> 00:05:50.671
Again, in older versions of this course,
we used the TS Lint rules which required

77
00:05:50.671 --> 00:05:54.950
you to specify the return type of
everything, which was annoying as hell.

78
00:05:54.950 --> 00:05:58.505
Luckily the new versions of this don't,
so we don't have to do that anymore.

79
00:05:58.505 --> 00:06:01.139
In fact, I think I have reenact node here.

80
00:06:01.139 --> 00:06:05.170
We used to have to specify here that
this was a returning a react node,

81
00:06:05.170 --> 00:06:06.571
in which it is, right?

82
00:06:06.571 --> 00:06:09.743
But these new Type Script rules I
think are better because it allows

83
00:06:09.743 --> 00:06:12.986
you that implicit return,
we know that's returning a react node.

84
00:06:12.986 --> 00:06:16.454
That's not useful to anybody to say
that that's returning a react node, so

85
00:06:16.454 --> 00:06:17.547
you can get rid of that.

86
00:06:20.687 --> 00:06:24.245
It also used to require you to
put public on all of these cuz

87
00:06:24.245 --> 00:06:26.782
they're technically public methods.

88
00:06:26.782 --> 00:06:28.776
Again, it's obvious that they are?

89
00:06:28.776 --> 00:06:31.209
I didn't like putting it in there,
but it used to require that.

90
00:06:33.659 --> 00:06:35.319
So, don't have to put that anymore either.

91
00:06:37.760 --> 00:06:40.617
Okay, so I think carousel is done now.

92
00:06:40.617 --> 00:06:42.550
No errors, everything looks happy.

93
00:06:42.550 --> 00:06:46.314
Any questions about carousel?

94
00:06:46.314 --> 00:06:50.817
&gt;&gt; Earlier you had mentioned
something about default props and

95
00:06:50.817 --> 00:06:55.493
using an interface and
how if we have a default props assigned,

96
00:06:55.493 --> 00:06:58.052
we didn't have to use interface,

97
00:06:58.052 --> 00:07:02.660
could you just explain what is
happening herein that regard?

98
00:07:02.660 --> 00:07:05.106
&gt;&gt; Sure, yeah, I think you probably
couldn't just leave this off.

99
00:07:10.048 --> 00:07:16.043
Is that true or, It doesn't.

100
00:07:20.560 --> 00:07:24.709
I think there is a way to get
that to work together and

101
00:07:24.709 --> 00:07:27.229
I don't remember how I did it.

102
00:07:29.317 --> 00:07:34.000
Yeah, cuz this should be images
which is a string array.

103
00:07:34.000 --> 00:07:36.685
Yeah I'd have to dig into it,
I can't remember off top my head.

104
00:07:36.685 --> 00:07:38.959
But that is one thing
that you can get working.

105
00:07:43.101 --> 00:07:48.621
And obviously it's enough here for state.

106
00:07:51.692 --> 00:07:54.368
Yeah, it might be having issues
with the class properties.

107
00:07:56.653 --> 00:08:02.377
I think maybe if you do carousel.default

108
00:08:02.377 --> 00:08:08.269
props equals blah and move this down here.

109
00:08:24.929 --> 00:08:27.125
Nope, still upset by that.

110
00:08:27.125 --> 00:08:29.289
Okay, yeah,
I don't know I'd have to go look.

111
00:08:29.289 --> 00:08:34.219
It's okay, the way you are represented
here makes more sense to me,

112
00:08:34.219 --> 00:08:39.062
I feel it's more readable anyways so,
&gt;&gt; I mean, if it's more

113
00:08:39.062 --> 00:08:44.285
readable absolutely do it that way too,
yeah, cool.

114
00:08:44.285 --> 00:08:49.559
Good question though.

115
00:08:49.559 --> 00:08:54.115
Cool so
you can see TypeScript dash three now.

116
00:08:54.115 --> 00:08:59.828
If you wanna get up to the point on
the migration that we're in at the moment,

117
00:08:59.828 --> 00:09:01.357
get rid of that too.

118
00:09:03.880 --> 00:09:06.747
Okay, I think now if we
went back to details,

119
00:09:14.708 --> 00:09:19.340
Sometimes it won't update quickly.

120
00:09:23.606 --> 00:09:25.889
It's still upset by Carousel,
I wonder why that is.

121
00:09:25.889 --> 00:09:30.844
Anyway, it'll eventually sort itself out,
I find that frequently,

122
00:09:30.844 --> 00:09:34.239
I can delete pet out of there and
details as well.

123
00:09:34.239 --> 00:09:38.379
It's that they work really hard on
the backend of the TypeScript server

124
00:09:38.379 --> 00:09:42.940
that's running in JavaScript to make
sure that it doesn't slow down VS code.

125
00:09:42.940 --> 00:09:45.637
So it doesn't always run your
code when you expect it to.

126
00:09:45.637 --> 00:09:49.200
So sometimes it'll show you errors
when you don't have errors.

127
00:09:49.200 --> 00:09:53.910
So, I advise you to have a healthy
amount of distress is like, hey,

128
00:09:53.910 --> 00:09:57.806
there's an error here,
maybe it just hasn't run yet.

129
00:09:57.806 --> 00:10:02.050
I mean,
if you can always do a reload window,

130
00:10:02.050 --> 00:10:05.977
that's always gonna fully run it again.

131
00:10:13.099 --> 00:10:14.165
And now we're not seeing any errors.

132
00:10:14.165 --> 00:10:19.746
So, Where is it?

133
00:10:19.746 --> 00:10:21.464
There is an error in this?

134
00:10:21.464 --> 00:10:25.710
&gt;&gt; I think it's
this.props.params id line 24.

135
00:10:25.710 --> 00:10:29.701
&gt;&gt; Line 24, oh.params.id,

136
00:10:29.701 --> 00:10:35.123
cuz we didn't make that defensive, right?

137
00:10:35.123 --> 00:10:39.915
So sometimes the, that's a good point.

138
00:10:39.915 --> 00:10:48.609
So if, This.props.params.id, then return.

139
00:10:51.341 --> 00:10:52.556
And that'll fix that.

140
00:10:57.818 --> 00:11:00.622
Right, cuz the problem here
is we made id optional.

141
00:11:03.492 --> 00:11:07.131
So we have to be defensive like, hey, if
you didn't get ID here, then don't try and

142
00:11:07.131 --> 00:11:08.586
request something from the API.

143
00:11:14.202 --> 00:11:16.862
Cool, and now details is fully good to go.

