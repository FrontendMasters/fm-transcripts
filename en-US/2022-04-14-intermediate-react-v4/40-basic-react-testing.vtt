WEBVTT

1
00:00:00.430 --> 00:00:04.584
So I'm gonna make a new file
here called pet.test.js.

2
00:00:04.584 --> 00:00:07.248
But Brian,
why did you call it pet.test.js?

3
00:00:07.248 --> 00:00:09.467
You don't have to call it test.js.

4
00:00:09.467 --> 00:00:10.695
Force of habit.

5
00:00:10.695 --> 00:00:13.355
I also like the cool
little special logo I get.

6
00:00:13.355 --> 00:00:17.186
It's kinda like a cute little vial there.

7
00:00:17.186 --> 00:00:19.063
I'm very easily entertained.

8
00:00:21.438 --> 00:00:23.406
But it's not necessary,
I don't have to call it that.

9
00:00:23.406 --> 00:00:28.238
It's actually, to be totally honest, it's
so I can find it quickly with Command+P or

10
00:00:28.238 --> 00:00:29.296
CTRL+P, right?

11
00:00:29.296 --> 00:00:32.784
Cuz now all I have to do is pet.test, and
I know exactly which one I'm looking at.

12
00:00:32.784 --> 00:00:35.143
That's honestly the real
reason why I do it that way.

13
00:00:38.446 --> 00:00:41.633
Okay, so
the first thing we gotta do up here is,

14
00:00:41.633 --> 00:00:46.414
we have to give it a special comment to
let us know this is going to be run in

15
00:00:46.414 --> 00:00:50.519
a browser like environment,
jest.environment.jsdom.

16
00:00:50.519 --> 00:00:52.801
This is just telling just, hey,

17
00:00:52.801 --> 00:00:58.031
I'm gonna be doing browser leave things
here, please instantiate js DOM.

18
00:00:58.031 --> 00:01:00.956
Js DOM is a fake DOM implementation.

19
00:01:00.956 --> 00:01:03.772
It is heavy because the DOM is heavy.

20
00:01:03.772 --> 00:01:07.229
So you only wanna instantiate it on tests
that actually use it, which is gonna be

21
00:01:07.229 --> 00:01:10.447
most of your React test, so just get
used to copying pasting this around.

22
00:01:13.053 --> 00:01:17.272
Okay, we're gonna import some

23
00:01:17.272 --> 00:01:21.961
helpers from jest import expect and

24
00:01:21.961 --> 00:01:26.968
test from @jests/globals, okay?

25
00:01:26.968 --> 00:01:31.747
We're gonna import render from

26
00:01:31.747 --> 00:01:39.191
@testing/array/react, that's goodness.

27
00:01:39.191 --> 00:01:43.875
And then we're going to
import pet from ../pet

28
00:01:47.076 --> 00:01:51.556
Okay, and we're gonna write a test,

29
00:01:51.556 --> 00:01:55.338
displays a default thumbnail.

30
00:01:58.083 --> 00:02:04.820
I used to be really into the, it, should,
that kind of terminology for testing.

31
00:02:04.820 --> 00:02:07.891
And it's like fluent testing or

32
00:02:07.891 --> 00:02:12.675
there's some term for
it that no one cares about.

33
00:02:12.675 --> 00:02:14.508
And I came back around to is like,

34
00:02:14.508 --> 00:02:17.533
if something fails I just
wanna know what what failed.

35
00:02:17.533 --> 00:02:20.556
So make sure whatever
string you're putting here,

36
00:02:20.556 --> 00:02:25.102
if you see this test is failing, but you
know what that test was supposed to do.

37
00:02:25.102 --> 00:02:26.728
So I think this is very clear.

38
00:02:26.728 --> 00:02:32.947
If it doesn't display a default thumbnail,
then you know what's what's going wrong.

39
00:02:32.947 --> 00:02:39.924
Okay, I'm gonna make an a sync
function here I'm gonna say

40
00:02:39.924 --> 00:02:46.429
const pet=render pet, like that.

41
00:02:46.429 --> 00:02:50.125
I'm gonna say const

42
00:02:50.125 --> 00:02:58.392
petthumbnail=await pet.findbytestid.

43
00:03:00.818 --> 00:03:01.879
Thumbnail.

44
00:03:04.681 --> 00:03:12.322
And expect pet thumbnail.source,

45
00:03:12.322 --> 00:03:17.254
to contain none.jpg.

46
00:03:21.801 --> 00:03:24.610
This doesn't work yet, by the way,
just bear with me for a second.

47
00:03:26.360 --> 00:03:30.060
Okay, we're going to render our pet,
right?

48
00:03:30.060 --> 00:03:31.292
Good, we like that.

49
00:03:31.292 --> 00:03:35.911
We're then going to look at what
it renders to find the thumbnail,

50
00:03:35.911 --> 00:03:38.722
which we have not put this test Id in yet.

51
00:03:38.722 --> 00:03:41.234
I'll show you what that
is here in just a second.

52
00:03:41.234 --> 00:03:43.793
And then we're gonna check to see,

53
00:03:43.793 --> 00:03:49.433
if I don't give it any images information,
what is the thumbnail going to be?

54
00:03:49.433 --> 00:03:50.651
And we want it to be none, right?

55
00:03:50.651 --> 00:03:52.820
Which is our placeholder image.

56
00:03:52.820 --> 00:03:56.074
And you can imagine some situation
where we were having foreign images or

57
00:03:56.074 --> 00:03:59.540
it wasn't displaying anything,
you'd write this test to prevent that from

58
00:03:59.540 --> 00:04:08.110
happening, Okay?

59
00:04:09.410 --> 00:04:11.383
So now if we do NPM test.

60
00:04:14.312 --> 00:04:21.133
This is what I thought was gonna happen,
okay, So

61
00:04:21.133 --> 00:04:23.742
we do have to install preset React.

62
00:04:23.742 --> 00:04:29.807
So one more thing that we have to
do with our babelrc really quick,

63
00:04:29.807 --> 00:04:36.663
we have to do NPM installed capital
P app babble/preset-React, okay?

64
00:04:36.663 --> 00:04:42.249
This one saw one more transformation that
does all of our React transformations for

65
00:04:42.249 --> 00:04:43.542
us in our babel RC.

66
00:04:43.542 --> 00:04:47.450
I should have believed Pass Brian,
Pass Brian was correct.

67
00:04:47.450 --> 00:04:52.986
We have to put this presets in here and
we have to tell it that we want it to run.

68
00:04:58.112 --> 00:05:03.174
Preset, Let

69
00:05:03.174 --> 00:05:07.605
me just go back to my notes here,
I can't remember this off the top my head.

70
00:05:07.605 --> 00:05:14.319
It is @babel/preset-React

71
00:05:18.684 --> 00:05:21.390
If you're following along with me,
just totally go copy this out of my notes.

72
00:05:21.390 --> 00:05:24.840
There's no reason that you
need to copy this by hand.

73
00:05:24.840 --> 00:05:33.890
You have to tell it
the runtime is automatic Okay?

74
00:05:33.890 --> 00:05:38.845
And then down here you have to say,
@babel/preset- nth,

75
00:05:38.845 --> 00:05:42.648
right, which is what we
were doing down here.

76
00:05:45.541 --> 00:05:50.542
All right, and
I think that should fix our problem.

77
00:05:56.221 --> 00:06:00.292
Cool, yes, that Is perfect.

78
00:06:00.292 --> 00:06:04.376
So to sum up here,
make sure that you install preset-env,

79
00:06:04.376 --> 00:06:07.079
make sure you install preset-react.

80
00:06:07.079 --> 00:06:09.969
And then you need this babel
RC to make sure that it's

81
00:06:09.969 --> 00:06:12.932
doing the correct transformations for
production.

82
00:06:12.932 --> 00:06:17.589
So this first preset ones is going
to do all the transformations for

83
00:06:17.589 --> 00:06:21.426
everything, whether it's in node or
in the browser.

84
00:06:21.426 --> 00:06:26.699
Then this env one is
specifically if node env=test,

85
00:06:26.699 --> 00:06:33.155
then transpile your code to target
node js inside of the browser.

86
00:06:33.155 --> 00:06:39.237
That's everything that this
babel RC does All right,

87
00:06:39.237 --> 00:06:43.845
now that we have chosen the correct
go-to sacrifice, our tests are working.

88
00:06:43.845 --> 00:06:46.611
Well, they're not working,
but they could work.

89
00:06:46.611 --> 00:06:50.080
[LAUGH] It's important.

90
00:06:50.080 --> 00:06:53.719
So our test actually caught a bug, right?

91
00:06:53.719 --> 00:06:57.671
So it's like, hey,
I'm trying to run this with no images and

92
00:06:57.671 --> 00:07:02.325
images.length, this is not an array,
therefore this doesn't work.

93
00:07:02.325 --> 00:07:04.380
So our tests have already caught a bug.

94
00:07:04.380 --> 00:07:05.683
That's a positive thing.

95
00:07:09.875 --> 00:07:13.688
So now head to your pet.js, and

96
00:07:13.688 --> 00:07:17.645
here's this images.length and

97
00:07:17.645 --> 00:07:24.582
the first thing that we have
to ask here if images, right?

98
00:07:24.582 --> 00:07:30.766
If this is anything or you could do
something like, array.js array, right?

99
00:07:30.766 --> 00:07:32.083
That's probably even better.

100
00:07:48.327 --> 00:07:50.373
Okay, so now that we put that in.

101
00:07:53.827 --> 00:07:55.840
Now we have a different error.

102
00:07:55.840 --> 00:07:58.490
So we solved that image or that problem.

103
00:07:58.490 --> 00:08:00.982
So this is actually a real bug
that did exist in the code,

104
00:08:00.982 --> 00:08:02.740
which honestly I didn't intend to do.

105
00:08:02.740 --> 00:08:03.940
I wrote the entire course and

106
00:08:03.940 --> 00:08:07.840
came back later is like, this kind
of bug that I intend on being there.

107
00:08:07.840 --> 00:08:10.650
But I left it in cuz that's
how you're supposed to fix it.

108
00:08:10.650 --> 00:08:11.780
Now we have a different problem.

109
00:08:14.210 --> 00:08:15.810
This has a link in it.

110
00:08:17.860 --> 00:08:22.698
Link comes from React Router-DOM and
React Router dash DOM does

111
00:08:22.698 --> 00:08:27.459
not work if it does not have
a router that's encapsulating it.

112
00:08:27.459 --> 00:08:30.702
So, very easy fix to that.

113
00:08:30.702 --> 00:08:35.905
All we have to do is say,
import static router from this will

114
00:08:35.905 --> 00:08:41.330
be familiar if you took the section
on server side rendering.

115
00:08:42.440 --> 00:08:48.606
This will come from
React Router Dom/slash server.

116
00:08:48.606 --> 00:08:50.273
And then here all we have to do.

117
00:08:54.279 --> 00:08:59.627
Cap this in a static router And

118
00:08:59.627 --> 00:09:04.215
that's it, I don't think we have to even
tell it like a URL or anything like that,

119
00:09:04.215 --> 00:09:06.088
it doesn't matter now, right?

120
00:09:06.088 --> 00:09:07.618
So now we can do NPM test.

121
00:09:10.591 --> 00:09:13.480
Still not passing, but
we're not getting that, use h=ref problem.

122
00:09:15.520 --> 00:09:18.240
Now we're trying to do
this find by test ID, but

123
00:09:18.240 --> 00:09:20.760
we haven't actually set that yet, right?

124
00:09:22.030 --> 00:09:25.805
So this is what I want you to do
with this, head back over to pet.js.

125
00:09:27.967 --> 00:09:28.980
And then here.

126
00:09:30.140 --> 00:09:31.100
We have this image here.

127
00:09:31.100 --> 00:09:32.040
This is our thumbnail.

128
00:09:32.040 --> 00:09:34.346
This is the one that we care about, right?

129
00:09:34.346 --> 00:09:38.910
So we're just going to say
a data-testid=thumbnail.

130
00:09:43.477 --> 00:09:47.576
Okay, and then now if you'd run
NPM test So, now what passes.

131
00:09:49.083 --> 00:09:51.440
So let's talk about why
we're doing it this way.

132
00:09:51.440 --> 00:09:54.220
There's a couple ways you
can do selectors here.

133
00:09:54.220 --> 00:09:57.594
I could totally query by CSS selectors
like all right, give me the image

134
00:09:57.594 --> 00:10:02.090
tag that's inside of the image container
or give me the, whatever, class name.

135
00:10:02.090 --> 00:10:04.220
Let me tell you why I
think this is better.

136
00:10:04.220 --> 00:10:08.324
We're now decoupling the functionality and
the testing logic,

137
00:10:08.324 --> 00:10:12.576
which I think is positive because
let's say I move the thumbnail and

138
00:10:12.576 --> 00:10:16.120
it's down here now for some reason, right?

139
00:10:16.120 --> 00:10:18.275
As I said UI's thrash all the time.

140
00:10:18.275 --> 00:10:20.099
Because the test ID went with,

141
00:10:20.099 --> 00:10:23.755
it it doesn't matter that
the CSS selector changed, right?

142
00:10:23.755 --> 00:10:28.145
And I hate finagling back and forth like,
well what's the CSS selector now?

143
00:10:28.145 --> 00:10:30.709
I'm decoupling the display logic
from the testing logic and

144
00:10:30.709 --> 00:10:32.173
I think that's a positive thing.

145
00:10:35.813 --> 00:10:41.000
Okay, that makes sense?

146
00:10:41.000 --> 00:10:44.344
And that's actually a big point inside
of testing library that they try and

147
00:10:44.344 --> 00:10:47.382
emphasize, try and keep those two
things as separate as possible.

148
00:10:54.360 --> 00:10:58.653
So, let me show you another
very cool thing you can do.

149
00:11:02.690 --> 00:11:08.520
We're gonna do NPM run test:watch.

150
00:11:11.030 --> 00:11:12.540
Is it gonna make me do this with Git?

151
00:11:12.540 --> 00:11:13.697
That's kind of interesting.

152
00:11:16.606 --> 00:11:19.810
Okay, so you can just do a git init here.

153
00:11:19.810 --> 00:11:21.518
This isn't.

154
00:11:21.518 --> 00:11:23.812
No, it's not.

155
00:11:23.812 --> 00:11:24.940
All right, now it's a git init.

156
00:11:26.510 --> 00:11:28.532
Now I can do NPM run test watch.

157
00:11:32.226 --> 00:11:34.325
So I guess you have to be
inside of a git repo for

158
00:11:34.325 --> 00:11:36.420
the tenth watch functionality to work.

159
00:11:36.420 --> 00:11:38.341
It's interesting, I didn't know that.

160
00:11:38.341 --> 00:11:42.118
Now I have this really cool front end to
my testing suite and it's like, alright,

161
00:11:42.118 --> 00:11:44.440
you know what,
I wanna run all my tests right now.

162
00:11:44.440 --> 00:11:47.230
I'll hit a, and
they'll run all of my tests again.

163
00:11:47.230 --> 00:11:49.286
And I can go back and
forth like, all right,

164
00:11:49.286 --> 00:11:52.630
now only run tests that have changed
since the last time I updated this.

165
00:11:52.630 --> 00:11:55.848
So you can say, and this will run this
because this is a new test, right?

166
00:11:55.848 --> 00:11:59.554
But if I have a bunch of tests that
didn't run before, it won't run those.

167
00:11:59.554 --> 00:12:03.318
Or if I save this again,
it'll automatically watch for tests and or

168
00:12:03.318 --> 00:12:06.157
files that are being imported
by tests to change and

169
00:12:06.157 --> 00:12:10.060
then that'll only run the tests
that I'm changing, right?

170
00:12:10.060 --> 00:12:13.790
So it gives me a really fast feedback
cycle of things that are changing.

171
00:12:14.940 --> 00:12:15.830
Does that make sense?

172
00:12:17.090 --> 00:12:18.630
I love this,
I actually use it all the time.

173
00:12:20.150 --> 00:12:21.804
Until we talked about
the VS code extension,

174
00:12:21.804 --> 00:12:23.930
which actually makes this even easier.

175
00:12:23.930 --> 00:12:26.830
But for now, I'm gonna show you this,
we'll stick with this for a bit.

176
00:12:26.830 --> 00:12:29.790
All right,
let's write one more test for this.

177
00:12:29.790 --> 00:12:32.886
We're gonna say test, and

178
00:12:32.886 --> 00:12:38.140
we'll say displays a non
default thumbnail.

179
00:12:40.050 --> 00:12:42.138
This is gonna look really similar, right?

180
00:12:42.138 --> 00:12:44.925
We're gonna go and say blah.

181
00:12:44.925 --> 00:12:48.908
We're gonna say,
it's actually pretty much mostly this.

182
00:12:48.908 --> 00:12:53.580
We'll copy this,
we'll paste this down here, but

183
00:12:53.580 --> 00:12:59.312
instead now we're gonna say pet and
we're gonna say images=,

184
00:12:59.312 --> 00:13:03.771
and we're given an array of 1.jpg,
2.png and

185
00:13:03.771 --> 00:13:07.090
3.webm, or something like that.

186
00:13:09.620 --> 00:13:12.990
So we would expect, and actually now it's
failing, right, cuz I didn't change this.

187
00:13:12.990 --> 00:13:17.860
We'd expect the thumbnail to be the first
thing in here, so it should be 1.jpg.

188
00:13:17.860 --> 00:13:19.220
Same thing here.

189
00:13:19.220 --> 00:13:23.121
This is good and
then this is gonna be 1.jpg.

190
00:13:28.949 --> 00:13:30.443
And what did I not do here?

191
00:13:33.587 --> 00:13:34.978
This is an async function.

192
00:13:37.907 --> 00:13:38.980
Yeah, make sure that 21.

193
00:13:38.980 --> 00:13:40.780
It has to be async because we're
doing a weight right here.

194
00:13:40.780 --> 00:13:45.140
And now it's passing, right?

195
00:13:45.140 --> 00:13:49.803
So if I give it images,
it'll pick the correct one to display.

196
00:13:52.301 --> 00:13:56.827
And so, now I've pretty much written tests
that assure me that No matter what I'm

197
00:13:56.827 --> 00:13:59.977
doing with all of my various
different thumbnail logic,

198
00:13:59.977 --> 00:14:02.360
that both of those use cases are captured.

199
00:14:05.440 --> 00:14:06.012
But notice,

200
00:14:06.012 --> 00:14:09.580
this is from the perspective of the user
as opposed to implementation details.

201
00:14:09.580 --> 00:14:14.690
I'm not looking for
that Pet is storing the correct hook here.

202
00:14:14.690 --> 00:14:19.020
I'm not checking is hero set to
the correct path or something like that?

203
00:14:19.020 --> 00:14:21.368
Or are the correct
prompts being passed in?

204
00:14:21.368 --> 00:14:24.992
I'm checking,
does the user see the correct image?

205
00:14:27.896 --> 00:14:29.610
Make it about the user don't
make it about yourself.

206
00:14:31.310 --> 00:14:33.859
That's career advice for you right there.

207
00:14:33.859 --> 00:14:35.545
I'm actually kind of
serious about that one.

