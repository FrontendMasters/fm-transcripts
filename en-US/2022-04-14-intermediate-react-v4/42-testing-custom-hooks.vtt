WEBVTT

1
00:00:00.520 --> 00:00:02.595
All right,
we're gonna test our custom hook next.

2
00:00:06.783 --> 00:00:10.104
So let's make a new file here.

3
00:00:10.104 --> 00:00:17.074
It's gonna be called usebreedList.test.JS.

4
00:00:19.442 --> 00:00:24.223
We're gonna need that, bring that
pragma over, that's a color pragma.

5
00:00:25.660 --> 00:00:28.663
It's like a comment at the top that
means that something's special.

6
00:00:30.940 --> 00:00:37.943
Import, expect, and
test from up @jest/global.

7
00:00:40.345 --> 00:00:47.035
Import render from @testinglibrary/react.

8
00:00:47.035 --> 00:00:51.833
And import useBreedList

9
00:00:51.833 --> 00:00:57.320
from ../useBreedList.

10
00:01:00.529 --> 00:01:08.335
So I wanna write a tests that test to make
sure that useBreedList works correctly.

11
00:01:10.324 --> 00:01:13.531
The problem with that breedList
is that it has a hook, right?

12
00:01:13.531 --> 00:01:16.747
Hooks can only run inside
of react components.

13
00:01:16.747 --> 00:01:19.291
So how do we test that?

14
00:01:19.291 --> 00:01:25.558
Well, we're gonna make
a fake react component.

15
00:01:25.558 --> 00:01:29.030
So I'm gonna write a function
here that says, getBreedList.

16
00:01:32.441 --> 00:01:33.850
And it's gonna take an animal.

17
00:01:37.321 --> 00:01:42.993
Say Let List, Function TestComponent.

18
00:01:46.541 --> 00:01:52.109
List is gonna be equal to
useBreedList with animal.

19
00:01:55.504 --> 00:01:57.200
And then it's just gonna return null.

20
00:01:59.648 --> 00:02:03.003
React components that return
null just don't render anything,

21
00:02:03.003 --> 00:02:05.870
right, which that's a valid
thing to return in react.

22
00:02:05.870 --> 00:02:14.690
I'm gonna render TestComponent,
And then I'm gonna return List.

23
00:02:17.350 --> 00:02:21.380
So now I have this function that I can
call, that basically renders a dummy

24
00:02:21.380 --> 00:02:25.350
component, runs a custom hook in there,
pulls that out and returns it.

25
00:02:27.060 --> 00:02:29.685
We're very much dangerously
toeing the line of,

26
00:02:29.685 --> 00:02:33.190
we're testing implementation details now,
right?

27
00:02:33.190 --> 00:02:38.590
But I also argue that testing your
custom hook is a valid thing to do.

28
00:02:38.590 --> 00:02:41.109
And this is the only way that we
can get something out of a hook.

29
00:02:43.321 --> 00:02:49.197
So let's write a test that uses that,
gives an empty List with no animal.

30
00:02:52.044 --> 00:02:56.028
A sink blah is equals that,

31
00:02:56.028 --> 00:03:00.534
const breedList status equals

32
00:03:00.534 --> 00:03:06.078
getBreedList with nothing, right,

33
00:03:06.078 --> 00:03:11.275
we're not gonna give it anything,

34
00:03:11.275 --> 00:03:16.662
expect breedList toHaveLength 0.

35
00:03:18.466 --> 00:03:25.468
And expect status toBe unloaded.

36
00:03:30.575 --> 00:03:31.650
That passes.

37
00:03:40.801 --> 00:03:46.410
So again, I grant you,
this is very strange.

38
00:03:46.410 --> 00:03:49.714
In fact,
there's a way easier way to do this.

39
00:03:49.714 --> 00:03:53.050
I had to do it the hard way to just see
that, I'm gonna show you a little tester

40
00:03:53.050 --> 00:03:55.889
thing that we can do,
our little tester library that we can use.

41
00:03:55.889 --> 00:03:59.146
That basically does this for
you under the hood, but

42
00:03:59.146 --> 00:04:02.561
it just hides all
the implementation details for you.

43
00:04:02.561 --> 00:04:07.358
So stop your tests here for just a second
and I want you to npm install -D.

44
00:04:07.358 --> 00:04:08.726
This is

45
00:04:08.726 --> 00:04:18.726
testing-Library/react-hooks@7.0.2.

46
00:04:22.985 --> 00:04:30.720
Okay, this is just a little tiny helper
that does exactly what we just did for us.

47
00:04:30.720 --> 00:04:36.146
Okay and then we can put back on here npm
run test go and watch to get that back.

48
00:04:36.146 --> 00:04:39.182
And I'll just minimize that for a second.

49
00:04:39.182 --> 00:04:43.048
Okay, and then here,
we're gonna get render hook and

50
00:04:43.048 --> 00:04:46.168
we're gonna get that from react dash hook.

51
00:04:48.261 --> 00:04:52.992
So this is another little tester helper
function that we can do specifically for

52
00:04:52.992 --> 00:04:53.916
a custom hook.

53
00:04:53.916 --> 00:04:56.668
So you can delete all of
this get read list stuff.

54
00:04:59.428 --> 00:05:02.578
Deleting code is my favorite thing.

55
00:05:02.578 --> 00:05:07.936
Okay, and
then you just have to do basically const

56
00:05:07.936 --> 00:05:13.945
result equals renderhook,
and you give it a function,

57
00:05:15.879 --> 00:05:21.174
That it's going to run
inside of a react context.

58
00:05:21.174 --> 00:05:28.077
So use BreedList with nothing or empty
string, either one of those, that's fine.

59
00:05:30.543 --> 00:05:39.274
And then here we'll just
say const breedList,

60
00:05:39.274 --> 00:05:44.298
comma status, =result.

61
00:05:51.170 --> 00:05:52.758
Result is not inferable.

62
00:05:53.856 --> 00:05:55.719
Result.current, sorry.

63
00:05:59.028 --> 00:05:59.916
There we go.

64
00:06:04.752 --> 00:06:06.946
That's got a lot easier to read, right?

65
00:06:06.946 --> 00:06:10.126
You don't have to have that entire helper
function that we are gonna have to

66
00:06:10.126 --> 00:06:10.636
maintain.

67
00:06:10.636 --> 00:06:15.257
So basically this is just going to be run
inside of a react component context so

68
00:06:15.257 --> 00:06:17.188
that all this stuff can happen.

69
00:06:17.188 --> 00:06:18.896
And then it's gonna
give you back a result,

70
00:06:18.896 --> 00:06:20.613
you're gonna pull out a result.current.

71
00:06:20.613 --> 00:06:23.275
Whatever you expect it
to get out of that hook,

72
00:06:23.275 --> 00:06:26.904
this is a really nice helper function for
testing react hooks.

73
00:06:31.449 --> 00:06:34.252
Cool, any questions about that?

74
00:06:34.252 --> 00:06:37.566
One of the points of making your
own custom hooks is that this is

75
00:06:37.566 --> 00:06:38.855
testable now, right?

76
00:06:38.855 --> 00:06:40.697
We can pull them out and
test them really well.

77
00:06:40.697 --> 00:06:43.850
So if you're making custom hooks,
you shouldn't write tests for them.

