WEBVTT

1
00:00:00.310 --> 00:00:03.560
So today we're gonna be
learning to test with Jest.

2
00:00:03.560 --> 00:00:05.230
I'm fine if you don't like Jest.

3
00:00:05.230 --> 00:00:08.292
There's a lot of people out there that
have very strong opinions on testing

4
00:00:08.292 --> 00:00:09.858
frameworks, and I am not one of them.

5
00:00:09.858 --> 00:00:12.855
I use Jest because I have used Jest.

6
00:00:12.855 --> 00:00:16.945
That sounds like a weak reason,
it's because it is a weak reason.

7
00:00:16.945 --> 00:00:21.959
[LAUGH] But I've used Moca, I've never
used other professionally but people that

8
00:00:21.959 --> 00:00:26.549
use it seem to quite like it I've never
used no tape or no tap or any of those.

9
00:00:26.549 --> 00:00:29.256
But again all of them
seem to work fairly well.

10
00:00:29.256 --> 00:00:34.810
Jest has more batteries included that it
kinda does a lot of the things for you.

11
00:00:34.810 --> 00:00:37.160
It's also put out by
the Facebook team themselves.

12
00:00:37.160 --> 00:00:41.330
So that means that it's
frequently used with React.

13
00:00:41.330 --> 00:00:46.440
But again, I really don't have
a strong opinion on the matter.

14
00:00:46.440 --> 00:00:50.680
It is helpful to know that Jest
is built on top of Jasmine.

15
00:00:51.750 --> 00:00:55.121
So if you have questions about
the specific testing helpers and

16
00:00:55.121 --> 00:00:58.999
all that kinda stuff, or if you wanna
use a library that augments Jasmine

17
00:00:58.999 --> 00:01:01.810
generally it will just work
with Jest out of the box.

18
00:01:03.460 --> 00:01:06.146
So you can think of just as
the framework around Jasmine.

19
00:01:08.899 --> 00:01:12.529
Okay, so we have our product here,
we ran node module or

20
00:01:12.529 --> 00:01:17.030
npm install to get our node modules and
we're going to install Jest.

21
00:01:19.360 --> 00:01:24.645
So we're going to npm
install dash capital D,

22
00:01:24.645 --> 00:01:29.804
and we're going to do Jest at 27.5.1.

23
00:01:30.830 --> 00:01:33.424
And we're gonna

24
00:01:33.424 --> 00:01:41.953
install @testing-library/react@12.1.3

25
00:01:47.004 --> 00:01:49.598
Okay, so Jest is a testing framework, and

26
00:01:49.598 --> 00:01:53.570
then you need like some specific
like helpers to work with React.

27
00:01:55.030 --> 00:01:56.941
We used to use a thing called enzyme and

28
00:01:56.941 --> 00:01:59.670
previous versions of this
course I taught enzyme.

29
00:01:59.670 --> 00:02:03.000
It was a library put up by Airbnb
to make it easier to test React.

30
00:02:03.000 --> 00:02:06.700
And it was way better than
what was available before.

31
00:02:06.700 --> 00:02:10.132
But then the open source community
came out with testing library,

32
00:02:10.132 --> 00:02:12.160
which ended up being even more useful.

33
00:02:12.160 --> 00:02:13.580
So we're gonna use that.

34
00:02:13.580 --> 00:02:16.110
And in general,
people don't use enzyme anymore.

35
00:02:17.690 --> 00:02:20.140
So if you do happen to
a company that is using enzyme,

36
00:02:20.140 --> 00:02:22.940
my suggestion to you is try and
get them on testing library.

37
00:02:22.940 --> 00:02:24.273
It's just way easier to work with.

38
00:02:27.528 --> 00:02:30.570
Okay, that gets us starting here.

39
00:02:33.600 --> 00:02:38.040
Testing libraries/react used to be
called react dash testing dash library.

40
00:02:38.040 --> 00:02:42.874
They just renamed it because now there's
like testing library dash angular

41
00:02:42.874 --> 00:02:44.843
testing library dash svelte.

42
00:02:44.843 --> 00:02:47.241
They make all of those helpers now.

43
00:02:49.600 --> 00:02:54.961
Okay, so inside of your source
directory I want you to create a new

44
00:02:54.961 --> 00:03:01.019
directory called underscore underscore
tests underscore underscore.

45
00:03:02.850 --> 00:03:04.940
Now why the weird nomenclature?

46
00:03:06.580 --> 00:03:08.680
Well, we talked a little
bit about this before.

47
00:03:08.680 --> 00:03:11.233
It's the Dunder,
write the double underscore,

48
00:03:11.233 --> 00:03:14.818
which is more of a Python construct
than it is a JavaScript construct,

49
00:03:14.818 --> 00:03:19.370
but we're borrowing from the Python
community in this particular case.

50
00:03:19.370 --> 00:03:22.716
It just the double underscores on
both sides just means like this is

51
00:03:22.716 --> 00:03:23.660
a magic name.

52
00:03:23.660 --> 00:03:26.201
Something special will happen
if you name it this, so

53
00:03:26.201 --> 00:03:28.580
in other words please do not rename this,
right?

54
00:03:28.580 --> 00:03:30.590
Or else you're gonna break something.

55
00:03:30.590 --> 00:03:34.202
So in this particular case
everything in underscore test,

56
00:03:34.202 --> 00:03:39.800
Jest is gonna assume everything that lives
in that live, in that directory is a test.

57
00:03:39.800 --> 00:03:42.080
So it will run everything in there.

58
00:03:42.080 --> 00:03:46.594
It will also, if you make something
called model.test.JS, it will

59
00:03:46.594 --> 00:03:51.409
also assume because you put the dot
test dot JS in there that that's a test,

60
00:03:51.409 --> 00:03:56.090
but it's very contingent on you naming
it something that Jest can find.

61
00:03:57.650 --> 00:03:59.260
I'm fine with either way.

62
00:03:59.260 --> 00:04:00.760
I tend to do this underscore
under square test.

63
00:04:00.760 --> 00:04:02.580
Cause I like all my
tests to live together.

64
00:04:02.580 --> 00:04:04.794
But you can disagree with that and
I'm fine with that.

65
00:04:07.866 --> 00:04:13.302
Cool, we do need to set up Babel
to run on our tests, right?

66
00:04:13.302 --> 00:04:19.811
Because we're gonna be trying to run
React and JSX in a Node environment.

67
00:04:19.811 --> 00:04:22.920
Right, so we have to set up so
that Babel knows how to do that.

68
00:04:24.940 --> 00:04:30.973
So I want you to pop
into your Babel RC here.

69
00:04:32.189 --> 00:04:39.827
And what we're gonna do here
is we're gonna put in nth.

70
00:04:43.491 --> 00:04:49.611
This is gonna run specific Babel rules
whenever node F is equal to test,

71
00:04:49.611 --> 00:04:52.475
that's what this is going to do.

72
00:04:52.475 --> 00:04:57.621
And we're gonna have to tell it for

73
00:04:57.621 --> 00:05:04.902
our presets with at Babel
l sash preset dash mth.

74
00:05:09.257 --> 00:05:14.928
Okay, there's that and then another
one here this is gonna be an object.

75
00:05:17.949 --> 00:05:20.968
No, sorry, that's what that is.

76
00:05:20.968 --> 00:05:24.262
This is also an array, it is.

77
00:05:24.262 --> 00:05:29.702
The way you set up
a configuration in Babel RCs,

78
00:05:29.702 --> 00:05:35.750
it's a lot of curly braces and
square brackets.

79
00:05:35.750 --> 00:05:39.300
Okay, and
then we're gonna have to tell it targets.

80
00:05:45.235 --> 00:05:46.813
Sorry, this is an object.

81
00:05:48.979 --> 00:05:49.989
Targets.

82
00:05:52.196 --> 00:05:55.109
Node current.

83
00:05:59.281 --> 00:06:00.343
Okay.

84
00:06:04.620 --> 00:06:06.596
Now that we've kinda set this up,

85
00:06:06.596 --> 00:06:11.172
we also have to tell it what to do in a
normal environment as well unfortunately.

86
00:06:13.328 --> 00:06:17.129
So, we're gonna have to set this
up here as well of presets.

87
00:06:20.640 --> 00:06:22.260
It's gonna look really similar.

88
00:06:24.180 --> 00:06:25.115
It's a comma there.

89
00:06:25.115 --> 00:06:30.666
@babble/preset-react, I actually

90
00:06:30.666 --> 00:06:35.078
don't think we need to do this.

91
00:06:36.970 --> 00:06:38.093
Let's try to see what happens.

92
00:06:44.407 --> 00:06:48.811
Something might correct us here but
what we'll see.

93
00:06:48.811 --> 00:06:49.935
All right, so

94
00:06:49.935 --> 00:06:55.471
I think now you do have to say npm
install at babble slash preset -mth.

95
00:07:01.454 --> 00:07:05.970
And you actually should
do that with a dash D.

96
00:07:05.970 --> 00:07:13.380
So let me fix that really quick,
npm on babble slash preset mth.

97
00:07:21.641 --> 00:07:28.841
Okay, so now what we wanna do
is we're going to package.JSON.

98
00:07:32.562 --> 00:07:34.930
And we're gonna make a test command.

99
00:07:37.690 --> 00:07:41.590
And that is going to just be Jest and
Jest might have to figure everything else.

100
00:07:41.590 --> 00:07:47.421
And we'll make one more command here,
which is test watch.

101
00:07:47.421 --> 00:07:51.086
Because Jest has a really cool function
called watch, that we wanna use as well.

102
00:07:59.978 --> 00:08:04.953
So a fun fact, npm has a couple
shorthands, npm i is one I've been

103
00:08:04.953 --> 00:08:10.040
showing you, but if you do npm t,
it'll run whatever is in tests.

104
00:08:10.040 --> 00:08:14.558
So instead of saying npm run tests
like this, you can do npm t and

105
00:08:14.558 --> 00:08:16.955
that'll run your test command.

106
00:08:16.955 --> 00:08:20.699
Okay, so
this is what we expect to say is like,

107
00:08:20.699 --> 00:08:26.174
hey I could not find any tests that's
true we haven't written one so

108
00:08:26.174 --> 00:08:29.743
let's go ahead and go and
try and write one.

109
00:08:31.905 --> 00:08:36.897
So, before we get too much into the
specific syntax of writing a Jest test for

110
00:08:36.897 --> 00:08:41.109
React, let me explain to you my
methodology of testing UI code,

111
00:08:41.109 --> 00:08:45.328
which is hard won over years of
writing a lot of tests and UI code.

112
00:08:48.350 --> 00:08:52.740
The worst thing in
the world is a bad test.

113
00:08:52.740 --> 00:08:55.960
It's way worse than having
no test in my opinion.

114
00:08:55.960 --> 00:08:59.440
Because if you have a bad test, that means
you don't trust your tests in general.

115
00:08:59.440 --> 00:09:02.702
And when you don't trust your tests, that
means when you actually do have a problem,

116
00:09:02.702 --> 00:09:05.130
you're not gonna believe your test suite,
right?

117
00:09:05.130 --> 00:09:07.390
You're gonna say,
they're just being finicky again.

118
00:09:07.390 --> 00:09:10.610
You're gonna ignore it and you actually
was catching a problem for you.

119
00:09:10.610 --> 00:09:15.399
So in general, I try and write as few
tests as possible to that give me as much

120
00:09:15.399 --> 00:09:18.000
confidence in my code as possible.

121
00:09:18.000 --> 00:09:22.200
And when I have a bad or finicky test,
I either need to fix it or delete it.

122
00:09:22.200 --> 00:09:25.745
And there's like no two ways about that.

123
00:09:25.745 --> 00:09:28.736
So I'm kinda a testing minimalist.

124
00:09:28.736 --> 00:09:33.228
I try not to test implementation
details like I try not to test like

125
00:09:33.228 --> 00:09:38.129
internal state of like a code of like
if this goes from this hook inside my

126
00:09:38.129 --> 00:09:40.020
React code goes from A to B.

127
00:09:40.020 --> 00:09:42.540
I try not to test stuff like that.

128
00:09:42.540 --> 00:09:45.392
I tried to test things which are more
like the user clicked this button and

129
00:09:45.392 --> 00:09:47.000
expected this thing to happen, right?

130
00:09:47.000 --> 00:09:50.376
So it's more told from a user story
perspective than a developer story kinda

131
00:09:50.376 --> 00:09:51.069
perspective.

132
00:09:53.600 --> 00:09:58.700
Every bit of UI that I've
ever worked on changes a lot.

133
00:09:58.700 --> 00:10:03.299
So I really try not to test user
interfaces cuz I don't like the thrash of

134
00:10:03.299 --> 00:10:06.990
trying to update tests
as interfaces change.

135
00:10:06.990 --> 00:10:09.870
I instead try and test,
can the user log in?

136
00:10:09.870 --> 00:10:11.270
Can the user find their name?

137
00:10:11.270 --> 00:10:13.490
Can the user change their email, right?

138
00:10:13.490 --> 00:10:14.899
These things that a user would care about.

139
00:10:16.870 --> 00:10:18.800
I try and
test things that are important, right?

140
00:10:19.800 --> 00:10:24.052
Like, it's maybe it's not important that
a user can go from light mode to dark mode

141
00:10:24.052 --> 00:10:26.830
or I don't know, something like that.

142
00:10:26.830 --> 00:10:30.960
But I'm much more concerned
about can a user login.

143
00:10:30.960 --> 00:10:35.531
Like things are absolutely critical, I'd
rather have five tests covering something

144
00:10:35.531 --> 00:10:39.864
important than five tests that cover a
bunch of things that aren't in important.

145
00:10:39.864 --> 00:10:44.120
Which is a different way of me saying,
I don't believe in 100% test coverage.

146
00:10:44.120 --> 00:10:46.630
I think that's a fool's errand, and
I think it's just a vanity metric.

147
00:10:48.200 --> 00:10:52.163
Cuz I can give you 100% test coverage
with that tell you nothing, or

148
00:10:52.163 --> 00:10:56.540
I can give you 10% test coverage
that tells you everything.

149
00:10:56.540 --> 00:11:00.340
I prefer the latter.

150
00:11:00.340 --> 00:11:04.509
So I'm just disclaiming my feelings about
testing because it's a bit hostile.

151
00:11:04.509 --> 00:11:07.531
[LAUGH] And people disagree with me but

152
00:11:07.531 --> 00:11:12.220
I'm gonna to teach you that
with my personal bias there.

153
00:11:12.220 --> 00:11:15.420
So if you disagree with me just take it
with a grain of salt that's appropriate.

