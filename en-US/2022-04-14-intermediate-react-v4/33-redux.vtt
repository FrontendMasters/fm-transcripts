WEBVTT

1
00:00:00.340 --> 00:00:04.820
As a reminder, we are here section 14 and
we're going to do Redux.

2
00:00:06.060 --> 00:00:08.640
I am going to stop my server here.

3
00:00:08.640 --> 00:00:12.501
I'm going to get out of this,

4
00:00:12.501 --> 00:00:19.440
I'm gonna copy over my portals and
refs folder.

5
00:00:19.440 --> 00:00:22.680
And I'm going to copy that into a folder
called like Redux or something.

6
00:00:22.680 --> 00:00:28.326
And then inside of redux,
we're gonna run npm install.

7
00:00:32.289 --> 00:00:33.431
That'll take a second.

8
00:00:41.516 --> 00:00:46.950
And then I will open Redux in my editor.

9
00:00:46.950 --> 00:00:48.036
This one can go away.

10
00:00:48.036 --> 00:00:50.000
I don't care about TypeScript anymore.

11
00:00:51.450 --> 00:00:53.460
Though, before we get started here.

12
00:00:56.370 --> 00:00:59.001
TypeScript and
Redux work together super well.

13
00:00:59.001 --> 00:01:02.655
Like those things are like made for
each other, if you gonna be doing Redux,

14
00:01:02.655 --> 00:01:05.240
I strongly suggest that you
pair it with TypeScript.

15
00:01:05.240 --> 00:01:09.462
Because all of the actions and stores and
things like that, which we'll get into

16
00:01:09.462 --> 00:01:12.954
it will make sense in a second,
but they work super well together.

17
00:01:12.954 --> 00:01:14.935
So let's talk about Redux,

18
00:01:14.935 --> 00:01:20.970
particularly if you've been watching all
of complete intro and all of intermediate.

19
00:01:22.900 --> 00:01:24.550
I've alluded to Redux quite a bit.

20
00:01:24.550 --> 00:01:27.926
And it's just because it's a really
popular library to pair together

21
00:01:27.926 --> 00:01:29.520
with React.

22
00:01:29.520 --> 00:01:32.622
There was a time where basically
like React Redux was like a complete

23
00:01:32.622 --> 00:01:35.190
thought that people just
assumed always win together.

24
00:01:36.400 --> 00:01:40.920
I would say that I did not
always feel that way and

25
00:01:40.920 --> 00:01:46.232
I'll say that with the advent
of a useful context API and

26
00:01:46.232 --> 00:01:52.895
hooks that that has more mostly
obviated the need for Redux.

27
00:01:52.895 --> 00:01:56.904
I'll say that like 95% of the use cases
of what you used to use Redux for

28
00:01:56.904 --> 00:02:00.651
are no longer applicable, you can
do it just in straight up react and

29
00:02:00.651 --> 00:02:01.999
you don't need Redux.

30
00:02:01.999 --> 00:02:06.360
There are still some use cases
where Redux is helpful and useful.

31
00:02:06.360 --> 00:02:08.910
And I'll maybe talk about that at the end.

32
00:02:09.950 --> 00:02:11.900
But still,
we're gonna talk about Redux now,

33
00:02:11.900 --> 00:02:14.110
we're gonna go through
a full implementation of it.

34
00:02:15.190 --> 00:02:18.765
And the reason why is when people
learn react, their first question is,

35
00:02:18.765 --> 00:02:19.830
is what about Redux?

36
00:02:19.830 --> 00:02:23.540
And so now because so
many people have that question.

37
00:02:23.540 --> 00:02:25.349
I want them to be able to answer
that question for themselves.

38
00:02:27.171 --> 00:02:30.100
So why do we have Redux?

39
00:02:30.100 --> 00:02:33.700
One context used to be really
bad react context that is and so

40
00:02:33.700 --> 00:02:38.600
that got fixed quite a bit, but it used
to really be bad, so we didn't have that.

41
00:02:40.010 --> 00:02:45.736
The second thing I'll say is this Redux
is extremely testable, and we saw that

42
00:02:45.736 --> 00:02:51.573
with the use reducer when we were going
over that in the hooks and depth section.

43
00:02:51.573 --> 00:02:57.020
Use reducer is just imitating Redux,
right, that's the point of it.

44
00:02:59.020 --> 00:03:02.881
But Redux is kind of the big
value proposition of Redux is

45
00:03:02.881 --> 00:03:07.330
that everything that you write
in Redux is extremely testable.

46
00:03:07.330 --> 00:03:08.480
It's extremely modular.

47
00:03:08.480 --> 00:03:13.077
And so that makes it,
useful for a subset of things.

48
00:03:13.077 --> 00:03:17.768
And then the other thing I'll say is it
has this really cool debugging story that

49
00:03:17.768 --> 00:03:22.549
has like a whole extension, we'll I'll
show you how to use it here in just a bit.

50
00:03:22.549 --> 00:03:27.389
But the bugging Redux is actually quite
nice, the tradeoff here is that Redux

51
00:03:27.389 --> 00:03:32.006
can be kind of hard to follow, like it
can be kind of hard to read the code and

52
00:03:32.006 --> 00:03:38.400
I'll say that it is a,
Simple, but hard library.

53
00:03:38.400 --> 00:03:41.420
You can actually implement Redux
in about 80 lines of code.

54
00:03:41.420 --> 00:03:43.900
It's really not doing very much for you.

55
00:03:45.030 --> 00:03:49.510
But I'll say, despite the fact that it's
simple in the sense that it's a small API

56
00:03:49.510 --> 00:03:53.350
and it doesn't do a lot, it's actually
really hard to kind of wrap your

57
00:03:53.350 --> 00:03:56.424
mind around what you're supposed
to be doing with it so.

58
00:03:56.424 --> 00:04:00.420
And I'll contrast that with something
that's like complicated but easy.

59
00:04:00.420 --> 00:04:05.448
So I would judge personally that Angular
is a very easy thing to work with,

60
00:04:05.448 --> 00:04:11.930
but it's complicated, right, and it's
big and it does a lot of things for you.

61
00:04:11.930 --> 00:04:14.690
So take that for what you will.

62
00:04:16.960 --> 00:04:21.920
So React state management is a pretty
simple thing as it exists today.

63
00:04:21.920 --> 00:04:25.679
You call set state or
you call like a use state hook or

64
00:04:25.679 --> 00:04:30.662
the set state from US From the hook,
and then you update the state and

65
00:04:30.662 --> 00:04:35.225
then react re renders like
the contract there is very simple.

66
00:04:35.225 --> 00:04:40.060
The problem is that Redux can solve for

67
00:04:40.060 --> 00:04:47.390
you is that it's hard to test
changes in state, right?

68
00:04:47.390 --> 00:04:50.963
So if I'm going from state A to state B,
inside of a React component,

69
00:04:50.963 --> 00:04:53.800
you would have to expose that
to make that testable, or

70
00:04:53.800 --> 00:04:56.040
you have to pull it out
to make it testable.

71
00:04:57.210 --> 00:05:01.069
Whereas with Redux, it does that for you
pulls all of the state management out of

72
00:05:01.069 --> 00:05:03.846
it, so you can just test
the state management part of it.

73
00:05:03.846 --> 00:05:08.130
That's the best thing that I
can say about Redux there.

74
00:05:10.220 --> 00:05:14.740
So let's go over the entire lifecycle
of what happens with Redux.

75
00:05:14.740 --> 00:05:17.990
And then we're gonna go code it up.

76
00:05:17.990 --> 00:05:22.030
The reason why we're gonna do this is
because Redux is kind of all or nothing.

77
00:05:22.030 --> 00:05:23.090
Like it was nice with TypeScript.

78
00:05:23.090 --> 00:05:26.296
I could like we could write a little
bit and then see if it worked and

79
00:05:26.296 --> 00:05:28.877
then write a little bit and
see if it worked, right?

80
00:05:28.877 --> 00:05:31.217
Redux unfortunately is like you
have to go from 0 to 100 and

81
00:05:31.217 --> 00:05:32.613
there's no middle ground, right?

82
00:05:32.613 --> 00:05:34.668
So we're gonna have to
do a full rewrite and

83
00:05:34.668 --> 00:05:38.607
we don't get to have any like checkpoints
or milestones or something like that you

84
00:05:38.607 --> 00:05:42.110
just got to go from zero to the to
the end and pray that everything worked.

85
00:05:42.110 --> 00:05:45.161
So I want to explain everything
that's about to happen to you,

86
00:05:45.161 --> 00:05:48.098
then we're gonna do it, and
you're gonna experience it and

87
00:05:48.098 --> 00:05:50.300
you're gonna say what
the hell are we doing?

88
00:05:50.300 --> 00:05:53.148
And then at the end of it, you might still
be asking what the hell we're doing, but

89
00:05:53.148 --> 00:05:55.318
you'll at least have some
understanding of why we got there.

90
00:05:57.978 --> 00:06:03.160
Okay, so let's open our application
here and I'm gonna run my server.

91
00:06:04.230 --> 00:06:06.520
I think I already installed, right?

92
00:06:07.640 --> 00:06:09.395
I didn't, so we're running on 1, 2, 3, 4.

93
00:06:09.395 --> 00:06:14.760
So here's our application.

94
00:06:14.760 --> 00:06:20.980
And I wanna explain to you, I guess what
Redux does first it's a data store, right?

95
00:06:20.980 --> 00:06:26.889
So if you think back to context, it's
like application level available data.

96
00:06:26.889 --> 00:06:31.804
Basically, what Redux is gonna do is
we're going to basically pull all of

97
00:06:31.804 --> 00:06:35.865
your data out into a store that
lives side by side with React.

98
00:06:35.865 --> 00:06:41.662
And then every time that we update
the data store the data store then informs

99
00:06:41.662 --> 00:06:46.740
react like hey stuff changed
please update accordingly, okay?

100
00:06:48.070 --> 00:06:51.097
So instead of location living
in a hook here, right,

101
00:06:51.097 --> 00:06:53.130
we're gonna move this into Redux.

102
00:06:54.350 --> 00:06:57.670
So if you remember here I'll
show you in search params.

103
00:06:59.130 --> 00:07:04.726
If I type into the location here,
I press A,

104
00:07:04.726 --> 00:07:10.390
that is going to call
update location here.

105
00:07:10.390 --> 00:07:14.930
This is a function that came from the hook
and then that's going to update React.

106
00:07:16.340 --> 00:07:19.297
Search params is going to run
again it's gonna rerender and

107
00:07:19.297 --> 00:07:23.030
the state of the hook here is going to be,
whatever I type in there, right?

108
00:07:23.030 --> 00:07:28.176
So if I type A in this cause update
location that informs React,

109
00:07:28.176 --> 00:07:32.656
my hook has changed React re-renders and
here we are.

110
00:07:32.656 --> 00:07:35.672
Right, pretty short little cycle there,

111
00:07:35.672 --> 00:07:39.123
what happens if this was a Redux,
enabled form?

112
00:07:39.123 --> 00:07:46.280
I would type in the form, right, that
would call the event listener down here.

113
00:07:48.490 --> 00:07:54.957
Instead of this calling update location,
it would dispatch an action to Redux.

114
00:07:54.957 --> 00:07:58.134
So typically you're gonna
call the action creator,

115
00:07:58.134 --> 00:08:00.682
which is going to create an action object.

116
00:08:00.682 --> 00:08:05.080
So that action object is then going
to be passed to Redux, right?

117
00:08:05.080 --> 00:08:09.335
Redux is then gonna pass that into
the route reducer and a route reducer,

118
00:08:09.335 --> 00:08:12.819
all it does is it takes in old state,
it takes in an action and

119
00:08:12.819 --> 00:08:14.934
returns to you news state, right?

120
00:08:14.934 --> 00:08:18.445
And that's the progression, so
we pass it to the root reducer,

121
00:08:18.445 --> 00:08:22.490
the root reducer might delegate it to
a sub like another reducer, right?

122
00:08:22.490 --> 00:08:27.374
So that your root reducer is very simple
and then you have like sub reducers that

123
00:08:27.374 --> 00:08:31.150
handle all the various different
types of actions, right?

124
00:08:32.200 --> 00:08:35.777
That reducer will return a new state
given the action and the old state,

125
00:08:35.777 --> 00:08:39.310
which will return to the root reducer
which will then return to redux.

126
00:08:39.310 --> 00:08:42.140
Redux will say cool I got new state.

127
00:08:42.140 --> 00:08:46.408
Redux will then call into reactors and
say, hey, I have new state here at which

128
00:08:46.408 --> 00:08:49.512
point reacts will say, cool,
I'm gonna rerender it and

129
00:08:49.512 --> 00:08:52.955
then you'll see the change
manifested in the user interface.

130
00:08:54.470 --> 00:08:59.050
So we took what used to be two steps and
made it into ten steps.

131
00:09:01.700 --> 00:09:04.383
I hope you're asking something like,
does that seem worth it?

132
00:09:06.454 --> 00:09:11.099
And the reason why it's useful that it's
broken to ten steps is basically all of

133
00:09:11.099 --> 00:09:12.913
those steps are now testable.

134
00:09:12.913 --> 00:09:17.742
You can say given this given this I get
this, right, and you can test that all

135
00:09:17.742 --> 00:09:21.687
along the pathway from user types
into user sees it and react.

136
00:09:21.687 --> 00:09:26.355
And I said this earlier in the course,
but I'll repeat the mantra here, which is

137
00:09:26.355 --> 00:09:31.313
basically most bugs arise from handling
change in your application poorly, right?

138
00:09:31.313 --> 00:09:35.581
Change in state, it's some manifestation
that your state did not change in a way

139
00:09:35.581 --> 00:09:36.915
that you expected it to.

140
00:09:36.915 --> 00:09:41.703
This is one way to assure is like if I
have this and I have this and I get this,

141
00:09:41.703 --> 00:09:44.040
then everything's gonna be okay.

142
00:09:44.040 --> 00:09:49.730
And you can assure yourself of that,
that's the entire point of Redux, okay?

143
00:09:50.980 --> 00:09:54.060
So I know we're very
abstract at the moment.

144
00:09:54.060 --> 00:09:56.650
Let's go and actually make this
concrete and start by working on this.

145
00:09:58.760 --> 00:10:02.279
So pause your application for
just a second,

146
00:10:02.279 --> 00:10:07.191
and let's go ahead install
npm install redux@4.1.2 and

147
00:10:07.191 --> 00:10:11.728
react-redux which is just
bindings from react to redux so

148
00:10:11.728 --> 00:10:15.510
that they can talk to each other well.

149
00:10:15.510 --> 00:10:18.909
You can actually implement yourself
react- redux fairly simply,

150
00:10:18.909 --> 00:10:21.840
don't cuz someone else did it and
they did it really well.

151
00:10:21.840 --> 00:10:30.561
But I'll tell you that React Redux
is just not that complicated.

152
00:10:30.561 --> 00:10:36.681
At 7.2,6, okay?

153
00:10:39.237 --> 00:10:44.694
Awesome, and you can probably start your
server again or whatever hold check later.

154
00:10:44.694 --> 00:10:49.563
And then we're gonna create
a new file here and source and

155
00:10:49.563 --> 00:10:56.200
we're gonna call it store.js, Okay,

156
00:10:56.200 --> 00:11:02.025
new file store.js We're gonna import

157
00:11:02.025 --> 00:11:08.566
a function called Create store from Redux.

158
00:11:08.566 --> 00:11:13.872
Okay, then here we'll import something

159
00:11:13.872 --> 00:11:18.576
called reducer from./reducers.

160
00:11:18.576 --> 00:11:22.600
We'll make this here in just a second,
but for now,

161
00:11:22.600 --> 00:11:28.460
just pretend this as a function that
we're gonna write here in a little bit.

162
00:11:28.460 --> 00:11:33.687
Okay, create something called a store and
equals create store.

163
00:11:35.748 --> 00:11:36.650
Reducer.

164
00:11:38.430 --> 00:11:42.543
Now this would be enough for
us to get started here and

165
00:11:42.543 --> 00:11:47.699
then you just say export default store,
and we will be done here.

166
00:11:47.699 --> 00:11:52.436
We're gonna look at the Redux dev
tools here in just a second, so

167
00:11:52.436 --> 00:11:55.520
let's go ahead and make that available.

168
00:11:55.520 --> 00:12:00.077
So the first thing we're gonna
do is we're gonna be kind of

169
00:12:00.077 --> 00:12:03.531
defensive of if we instantiate this or
not.

170
00:12:03.531 --> 00:12:09.446
So we're gonna say, and I just took this
directly from their docs by the way,

171
00:12:09.446 --> 00:12:12.380
if typeof window === 'object'.

172
00:12:12.380 --> 00:12:13.995
So if we're not in node, right,

173
00:12:13.995 --> 00:12:16.953
cuz we want this to still be
able to server side render, and,

174
00:12:21.120 --> 00:12:27.743
typeof window.__REDUX_DEVTOOLS_extension
which,

175
00:12:27.743 --> 00:12:32.283
by the way, you can totally just copy this

176
00:12:32.283 --> 00:12:37.105
from the Docs cuz this
is exactly what I did.

177
00:12:37.105 --> 00:12:41.535
__ So
as they call it in Python land the Dunder,

178
00:12:41.535 --> 00:12:45.872
I did not make that,
tp the double underscore.

179
00:12:47.793 --> 00:12:50.592
That's not undefined.

180
00:12:59.870 --> 00:13:02.890
Okay, we'll do a ternary here.

181
00:13:04.510 --> 00:13:07.368
Either we gonna call this
cuz this will be a function.

182
00:13:10.741 --> 00:13:15.903
Otherwise, just give it a this would
be called an identity function,

183
00:13:15.903 --> 00:13:20.110
all right, that might be
a little bit easier to read now.

184
00:13:21.490 --> 00:13:22.950
So what have we done here?

185
00:13:22.950 --> 00:13:26.520
One, you don't really need to care,
again, if you just copy the stripe here.

186
00:13:26.520 --> 00:13:30.170
The docs, you would never care what it's
actually doing that we can even just put

187
00:13:30.170 --> 00:13:31.240
a comma in here.

188
00:13:31.240 --> 00:13:34.970
This enables the redux dev tools.

189
00:13:36.430 --> 00:13:40.293
But if you're curious what it does,
it checks to see are you in the browser?

190
00:13:40.293 --> 00:13:42.710
And do they have the extension installed?

191
00:13:42.710 --> 00:13:46.566
If they do,
enable the extension, otherwise,

192
00:13:46.566 --> 00:13:50.148
give it a function that
will just do nothing.

193
00:13:53.412 --> 00:13:57.136
So here what we're doing is
we're giving Redux a middleware.

194
00:13:57.136 --> 00:14:01.919
So Redux actually has tons of middlewares
that you can use with it one of them is

195
00:14:01.919 --> 00:14:06.848
like Redux thunk that's a really popular
ones actually talk about that in one of

196
00:14:06.848 --> 00:14:08.116
my former courses.

197
00:14:08.116 --> 00:14:14.270
Redux sagas Redux promises Is Redux RxJS,
or I think it's called Redux Observable.

198
00:14:14.270 --> 00:14:15.480
All of those things would go here.

199
00:14:15.480 --> 00:14:19.180
And those are all basically ways of
handling asynchronous code inside

200
00:14:19.180 --> 00:14:20.150
of Redux.

201
00:14:20.150 --> 00:14:24.990
At the moment, Redux doesn't do any
asynchronous code out of the box.

202
00:14:24.990 --> 00:14:29.410
You have to augment it with additional
capabilities via middlewares to be able to

203
00:14:29.410 --> 00:14:29.930
do that.

