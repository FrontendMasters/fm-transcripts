WEBVTT

1
00:00:00.640 --> 00:00:03.401
&gt;&gt; Mike North: The next tool I'm
going to show you is called syncpack.

2
00:00:03.401 --> 00:00:11.120
And what this helps you do is detect
variants in the versions of packages.

3
00:00:11.120 --> 00:00:15.894
Sorry, the variance in the versions
of external dependencies

4
00:00:15.894 --> 00:00:18.480
that your packages depend on.

5
00:00:18.480 --> 00:00:21.562
So this is the tool that
will help you identify how

6
00:00:21.562 --> 00:00:24.878
many versions of React are in
your micro front ends.

7
00:00:24.878 --> 00:00:31.284
And potentially it will help
you consolidate down so

8
00:00:31.284 --> 00:00:34.641
that your checkout times.

9
00:00:34.641 --> 00:00:42.010
So your like npm install or
pnpm install times are faster.

10
00:00:42.010 --> 00:00:45.886
And you're starting to benefit
from the idea of a monorepo,

11
00:00:45.886 --> 00:00:51.210
which means there's a greater sense of
sort of the whole repo advancing together.

12
00:00:53.830 --> 00:00:56.470
There is an alpha version of this.

13
00:00:56.470 --> 00:00:59.890
They have a stable release that's like,
I think they're V12 and

14
00:00:59.890 --> 00:01:01.910
we're using their V13.

15
00:01:01.910 --> 00:01:04.650
So by the time you take this course,
it might not be alpha, but

16
00:01:04.650 --> 00:01:05.670
this will work today.

17
00:01:05.670 --> 00:01:09.864
It's just a faster version of the tool.

18
00:01:09.864 --> 00:01:13.025
So let's install it.

19
00:01:16.654 --> 00:01:22.559
And let's see what it did just now.

20
00:01:22.559 --> 00:01:25.823
Just package.json and
the lock file, makes sense.

21
00:01:25.823 --> 00:01:33.201
All right,
now we're gonna do pnpm syncpack lint.

22
00:01:36.779 --> 00:01:38.160
No issues found.

23
00:01:40.090 --> 00:01:42.320
I have to create the issues.

24
00:01:42.320 --> 00:01:45.038
Sorry.
I intended to sneakily drop in a bunch of

25
00:01:45.038 --> 00:01:47.930
problems here that we
would be able to find.

26
00:01:47.930 --> 00:01:51.610
If you're copying and pasting from the
course notes, you will find those things.

27
00:01:51.610 --> 00:01:53.450
But here's what we're going to do.

28
00:01:53.450 --> 00:01:58.709
I'm going to say we're using TypeScript

29
00:01:58.709 --> 00:02:02.916
5.7 here and in their server,

30
00:02:02.916 --> 00:02:09.690
we're going to say we're
using TypeScript581.

31
00:02:11.209 --> 00:02:14.308
And then elsewhere we have 5.8.3,
so pnpmi.

32
00:02:19.877 --> 00:02:24.169
5.8.3 is, wait, what is it telling me?

33
00:02:25.609 --> 00:02:27.449
No, version 5.8.1.

34
00:02:30.009 --> 00:02:32.009
Maybe that package was pulled.

35
00:02:36.900 --> 00:02:37.400
Really?

36
00:02:41.540 --> 00:02:47.994
Did I type a number that was
greater than 5 or greater than 8?

37
00:02:47.994 --> 00:02:51.240
All right, so
it's saying in server package.json.

38
00:02:54.312 --> 00:02:57.441
This error's not making any sense to me.

39
00:02:57.441 --> 00:02:59.762
We'll try that one, that's fine.

40
00:02:59.762 --> 00:03:02.050
A release candidate, great.

41
00:03:02.050 --> 00:03:03.650
Now it's telling me about the UI package.

42
00:03:03.650 --> 00:03:08.245
Sorry, I'm floundering a little bit
as I try to get us onto a varied

43
00:03:08.245 --> 00:03:11.210
range of different TypeScript versions.

44
00:03:11.210 --> 00:03:12.473
Great.

45
00:03:12.473 --> 00:03:17.609
So now I've got some 5.7.x
version in my Ui package,

46
00:03:17.609 --> 00:03:21.786
some 5.6.x version in my server package.

47
00:03:21.786 --> 00:03:27.201
And in models, I'm going to float as far

48
00:03:27.201 --> 00:03:32.312
as I can in the 5.8 release stream.

49
00:03:32.312 --> 00:03:37.920
We should get a lint hit here, and we do.

50
00:03:37.920 --> 00:03:44.510
So we can see that it's telling us
we've got three copies of TypeScript,

51
00:03:44.510 --> 00:03:49.360
and these are the things
that it has identified.

52
00:03:49.360 --> 00:03:54.320
Now, personally, I like the check
like the lint command here.

53
00:03:54.320 --> 00:03:57.023
It also has a sync pack fix,

54
00:03:57.023 --> 00:04:02.562
which what that will do is go and
forcibly bump these up.

55
00:04:02.562 --> 00:04:07.005
And I guess if you're super confident
that that's gonna work out, okay,

56
00:04:07.005 --> 00:04:08.990
maybe that's what you wanna do.

57
00:04:08.990 --> 00:04:13.143
But in a project of any
significant complexity,

58
00:04:13.143 --> 00:04:16.283
I would be doing these one at a time and

59
00:04:16.283 --> 00:04:21.042
I might have a check like this
be part of a nightly build or

60
00:04:21.042 --> 00:04:26.514
a weekly build where I could sort
of periodically get a report and

61
00:04:26.514 --> 00:04:30.998
keep tabs on how much floating
is actually going on.

62
00:04:30.998 --> 00:04:37.380
How much variance on certain packages is
actually going on within my monorepo.

63
00:04:37.380 --> 00:04:38.700
So still a good tool.

64
00:04:38.700 --> 00:04:42.780
And imagine the case where you have
200 packages in your monorepo.

65
00:04:42.780 --> 00:04:48.098
This really will help you
detect where things are getting

66
00:04:48.098 --> 00:04:52.760
a little weird, especially for
patch versions.

67
00:04:52.760 --> 00:04:58.173
I think they have some arguments

68
00:04:58.173 --> 00:05:03.184
lint help where you can change

69
00:05:03.184 --> 00:05:07.000
the specifier types.

70
00:05:11.080 --> 00:05:15.041
You can look for specific packages,

71
00:05:15.041 --> 00:05:19.644
whether they're runtime dependencies or

72
00:05:19.644 --> 00:05:24.690
dev dependencies or peer dependencies.

73
00:05:24.690 --> 00:05:30.564
So this would be like if your mission is
we're reducing the variance in React,

74
00:05:30.564 --> 00:05:34.481
and we finally get everything
on one REACT version,

75
00:05:34.481 --> 00:05:37.611
then you might have something like this.

76
00:05:37.611 --> 00:05:45.320
And in our case, it'd be,
&gt;&gt; Mike North: Something like that,

77
00:05:45.320 --> 00:05:47.980
where I will inline this into CI.

78
00:05:47.980 --> 00:05:50.460
You have just introduced
a new version of React.

79
00:05:50.460 --> 00:05:51.420
You can't do that.

80
00:05:52.700 --> 00:05:57.260
We fought hard to dedupe and
we're holding the line.

81
00:05:57.260 --> 00:06:00.864
And so this is a nice tool that you
can sort of inline into that and

82
00:06:00.864 --> 00:06:03.460
provide a very actionable failure message.

83
00:06:03.460 --> 00:06:06.046
I just love like, this is a CLI that
someone put a lot of care into.

