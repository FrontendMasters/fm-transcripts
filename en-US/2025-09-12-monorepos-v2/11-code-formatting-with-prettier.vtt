WEBVTT

1
00:00:00.160 --> 00:00:04.106
&gt;&gt; Mike North: In this next section of
the course, we're going to work on getting

2
00:00:04.106 --> 00:00:07.640
linting and code formatting
working throughout our repo.

3
00:00:07.640 --> 00:00:11.582
It's something that we had in
the beginning state of our project and

4
00:00:11.582 --> 00:00:16.217
we have since lost it, in part because
the prettier and the linting stuff is only

5
00:00:16.217 --> 00:00:19.840
happening within the context of
our UI package at this point.

6
00:00:19.840 --> 00:00:24.160
Right, we kind of left,
left the left those concerns there.

7
00:00:24.160 --> 00:00:28.559
So we also want to take on some other

8
00:00:28.559 --> 00:00:32.970
developer experience niceties.

9
00:00:32.970 --> 00:00:38.506
So one of these is if we look
at one place where we're missing

10
00:00:38.506 --> 00:00:43.823
a developer experience nicety
is if we pull up a component

11
00:00:43.823 --> 00:00:48.587
that depends on something
from like seed models and

12
00:00:48.587 --> 00:00:54.980
we command click on this,
we'll end up in a declaration file.

13
00:00:54.980 --> 00:00:58.660
We're in the dist folder
right now of our dependency.

14
00:00:58.660 --> 00:01:04.274
And if we really want to deliver on
the promise of the way you navigate code,

15
00:01:04.274 --> 00:01:09.780
the way your tools work,
the way your scripts work, it's the same.

16
00:01:09.780 --> 00:01:10.420
It's the same.

17
00:01:10.420 --> 00:01:14.387
At the end of the day,
once we've converted this to a monorepo,

18
00:01:14.387 --> 00:01:17.619
we had better be able to jump
to these source files and

19
00:01:17.619 --> 00:01:20.720
be able to seamlessly step through and
navigate.

20
00:01:20.720 --> 00:01:26.665
In particular, this is likely to be
a potential hazard because this,

21
00:01:26.665 --> 00:01:31.201
especially with the building
out to modern modules,

22
00:01:31.201 --> 00:01:35.760
it looks a lot like a TypeScript file,
like a TS file.

23
00:01:37.280 --> 00:01:41.158
And it'd be very easy to kind of make
the mistake that you think you're editing

24
00:01:41.158 --> 00:01:43.760
the source, but
you're editing the build output.

25
00:01:43.760 --> 00:01:46.083
And you drive yourself crazy wondering,

26
00:01:46.083 --> 00:01:48.680
why does my change keep
getting overwritten?

27
00:01:48.680 --> 00:01:50.400
Why hasn't it taken effect?

28
00:01:50.400 --> 00:01:51.840
So we're gonna address that too.

29
00:01:53.360 --> 00:01:58.410
Then finally, because we're going to
be working with some config files

30
00:01:58.410 --> 00:02:04.371
in this area, we're going to apply this
concept of TypeScript project references,

31
00:02:04.371 --> 00:02:09.920
which will have each package
generating a build information file.

32
00:02:09.920 --> 00:02:11.953
That will improve
the performance of our build,

33
00:02:11.953 --> 00:02:14.440
that'll improve the performance
of our language server.

34
00:02:14.440 --> 00:02:20.509
Because TypeScript will have a much richer
source of information in terms of what

35
00:02:20.509 --> 00:02:27.820
has been changed since the last build,
what needs to be incrementally recompiled.

36
00:02:27.820 --> 00:02:32.820
It won't be on a package by package basis,
it'll more be on a module by module basis.

37
00:02:32.820 --> 00:02:35.444
We'll take a look at
the inside of these files and

38
00:02:35.444 --> 00:02:37.820
it should make sense why this works so
well.

39
00:02:41.660 --> 00:02:45.060
So first off, let's focus on prettier.

40
00:02:45.060 --> 00:02:50.329
If we were to run this
command at the project root,

41
00:02:50.329 --> 00:02:54.100
we should get this error prettier.

42
00:02:54.100 --> 00:02:58.827
Plugins Felt is not found and
a reference to a file here,

43
00:02:58.827 --> 00:03:05.940
which is a generated thing, so
that doesn't help us too much in the air.

44
00:03:05.940 --> 00:03:08.959
But if we look at our prettierrc,
we can see, hey,

45
00:03:08.959 --> 00:03:11.710
we've got this prettier-plugin-svelte.

46
00:03:13.150 --> 00:03:16.430
So this is a cue that we have.

47
00:03:19.390 --> 00:03:23.914
Like we haven't yet
pulled something that's kind of like

48
00:03:23.914 --> 00:03:28.670
a project wide tool up to
the top of our monorepo.

49
00:03:28.670 --> 00:03:32.548
So when you think about linting,
when you think about code formatting,

50
00:03:32.548 --> 00:03:36.950
things like that, you generally want those
to be applied across your whole repo.

51
00:03:36.950 --> 00:03:39.890
Now, it would have been fine if
we left prettierrc inside ui and

52
00:03:39.890 --> 00:03:43.130
that's the only place we wanted
code formatting to happen.

53
00:03:43.130 --> 00:03:44.890
That would have worked perfectly well too.

54
00:03:44.890 --> 00:03:49.730
We would have only been able to run this
task when we're within that package.

55
00:03:49.730 --> 00:03:53.632
But we want the benefits of a modern repo
and having the same code style applied

56
00:03:53.632 --> 00:03:57.690
broadly throughout all of the packages
that we're authoring together.

57
00:03:57.690 --> 00:04:02.250
So we're gonna go into
our ui package JSON.

58
00:04:04.490 --> 00:04:06.010
Here it is.

59
00:04:06.010 --> 00:04:10.910
And there is a prettier-plugin-svelte.

60
00:04:10.910 --> 00:04:14.550
In fact, we can grab prettier and
take it out of here as well.

61
00:04:14.550 --> 00:04:18.470
It's going to be running prettier
will be running at the project root.

62
00:04:18.470 --> 00:04:21.670
It's not a dev dependency
of any one project anymore.

63
00:04:21.670 --> 00:04:25.910
Once we do this and we can add those here.

64
00:04:29.350 --> 00:04:30.390
There we go.

65
00:04:30.390 --> 00:04:34.413
If I was using some
opinionated formatting here,

66
00:04:34.413 --> 00:04:38.640
maybe we'd end up making
these more alphabetical.

67
00:04:40.160 --> 00:04:41.760
Okay, now let's try this again.

68
00:04:44.000 --> 00:04:45.280
Sorry.

69
00:04:45.280 --> 00:04:49.246
We touched a package JSON,

70
00:04:49.246 --> 00:04:54.160
therefore pnpm i and there we go.

71
00:04:54.160 --> 00:04:58.850
We can see if you're looking closely,
it's probably more clear to me on my

72
00:04:58.850 --> 00:05:01.760
screen than it is if
you're watching at home.

73
00:05:02.990 --> 00:05:05.630
Some of these files you can
see unchanged is missing.

74
00:05:05.630 --> 00:05:08.630
Next to some of them,
formatting was applied.

75
00:05:08.630 --> 00:05:13.150
So now we're formatting in the models
package, in the server package in the ui.

76
00:05:13.150 --> 00:05:20.110
We have sort of hoisted this tool up, so
it's now working at the monorepo level.

77
00:05:20.110 --> 00:05:26.030
What we can do is create
a nice NPM script for this.

78
00:05:26.030 --> 00:05:31.940
So instead of saying the way we
format across the monorepo is by

79
00:05:31.940 --> 00:05:37.170
invoking the format script
on each Monorepo package,

80
00:05:37.170 --> 00:05:45.128
we're going to replace this with something
that operates at the monorepo level and

81
00:05:45.128 --> 00:05:50.600
it's going to look like
prettier write packages, any.

82
00:05:50.600 --> 00:05:51.400
Any package.

83
00:05:51.400 --> 00:05:52.200
Right.

84
00:05:52.200 --> 00:05:56.768
And then either the file source or

85
00:05:56.768 --> 00:06:01.336
tests and then any subfolder ts if

86
00:06:01.336 --> 00:06:06.240
you copy from the workspace notes.

87
00:06:06.240 --> 00:06:08.440
So this would be a basic version of this.

88
00:06:08.440 --> 00:06:10.280
That'll get all of your source and tests.

89
00:06:11.320 --> 00:06:16.072
If you go to the workspace notes I've got
a string here that you probably don't

90
00:06:16.072 --> 00:06:17.960
want to figure out yourself.

91
00:06:17.960 --> 00:06:20.440
That also will format the config files.

92
00:06:20.440 --> 00:06:23.660
So we'll grab that and
we'll paste it here as well.

93
00:06:23.660 --> 00:06:25.620
Getting the comma in the right place.

94
00:06:27.060 --> 00:06:32.580
PNPM format and
it does basically the same thing.

95
00:06:32.580 --> 00:06:37.506
Looks like some of those new files
that were picked up this time

96
00:06:37.506 --> 00:06:40.900
didn't end up getting affected.

97
00:06:40.900 --> 00:06:45.972
So here you can see this vitend file was
in the last invocation that was picked up,

98
00:06:45.972 --> 00:06:51.930
but now we've got things that are not in
the source folder, like these down here.

99
00:06:51.930 --> 00:06:52.890
So great.

100
00:06:52.890 --> 00:06:55.370
Prettier formatting is
working across our monorep.

