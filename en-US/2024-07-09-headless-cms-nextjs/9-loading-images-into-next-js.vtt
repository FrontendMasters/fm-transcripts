WEBVTT

1
00:00:00.008 --> 00:00:04.670
&gt;&gt; Scott Moss: Almost done, now,
in order to use these assets, what,

2
00:00:04.670 --> 00:00:10.305
the image tag in Next.js,
you have to tell Next.js about the domain

3
00:00:10.305 --> 00:00:16.940
in which these images will be loaded from,
they have to be in this approved list.

4
00:00:18.100 --> 00:00:19.406
So we need to do that.

5
00:00:19.406 --> 00:00:22.354
The way you do that with
Next.js is in the config.

6
00:00:22.354 --> 00:00:27.284
So what that's gonna look
like in the Next.js config.

7
00:00:27.284 --> 00:00:29.464
Next.js, there we go.

8
00:00:29.464 --> 00:00:32.313
So we need to add the domain here for
Contentful,

9
00:00:32.313 --> 00:00:35.244
which is using Azure cuz
that's why it's .net.

10
00:00:35.244 --> 00:00:38.395
We have to add it here so
we can use the images that are coming back

11
00:00:38.395 --> 00:00:41.310
from Contentful with the image
component from Next.js,

12
00:00:41.310 --> 00:00:44.102
you basically have to put
it on this allow list.

13
00:00:44.102 --> 00:00:49.222
You could do that in the Next.js config,
so we're just gonna do that here.

14
00:00:49.222 --> 00:00:56.649
So I'm just gonna copy that,
go to my Next.js config, and add that.

15
00:01:01.117 --> 00:01:05.552
&gt;&gt; Scott Moss: Okay, now that we have
that, let's go to our clients, and

16
00:01:05.552 --> 00:01:10.255
we need to make our server component
that is going to wrap this,

17
00:01:10.255 --> 00:01:13.886
make the call, and pass in the data.

18
00:01:13.886 --> 00:01:18.276
So first, I'm just gonna declare some
props in this clients because it's gonna

19
00:01:18.276 --> 00:01:20.286
be passed in versus it being called.

20
00:01:20.286 --> 00:01:26.282
So I'm just gonna say it's
gonna take in content,

21
00:01:26.282 --> 00:01:32.976
and the type of that is going
to be the LogoWallQuery, but

22
00:01:32.976 --> 00:01:39.403
we want a sub piece of it,
so assetCollections items.

23
00:01:40.893 --> 00:01:42.418
So that's what it's for.

24
00:01:42.418 --> 00:01:47.158
I need to wrap this in an object and
say content is that type.

25
00:01:49.228 --> 00:01:53.788
So now if you see content, it's actually
like content, it's an array, right?

26
00:01:53.788 --> 00:01:57.188
So if I say,
&gt;&gt; Scott Moss: That's an image.

27
00:02:00.291 --> 00:02:03.976
&gt;&gt; Scott Moss: Okay, so we got that,
then we just need to make a component that

28
00:02:03.976 --> 00:02:08.309
wraps this and use this inside of our
homepage instead of this component.

29
00:02:08.309 --> 00:02:12.545
So I'm just gonna make a new component
here in the components folder and

30
00:02:12.545 --> 00:02:14.179
I'll call it logo-wall.

31
00:02:15.709 --> 00:02:17.879
I'm just gonna follow the convention
of their file naming.

32
00:02:17.879 --> 00:02:22.377
I typically like to capitalize my
components, but it's all good, so

33
00:02:22.377 --> 00:02:23.607
this is LogoWall.

34
00:02:27.581 --> 00:02:34.200
&gt;&gt; Scott Moss: It literally just
renders the clients from Clients.

35
00:02:38.691 --> 00:02:45.646
&gt;&gt; Scott Moss: It's for a default
LogoWall, and then up here, async.

36
00:02:45.646 --> 00:02:53.095
I'm gonna say data = await
getContentForLogoWall.

37
00:02:56.359 --> 00:02:57.070
&gt;&gt; Scott Moss: There we go.

38
00:02:57.070 --> 00:02:59.054
So we got our data, and

39
00:02:59.054 --> 00:03:05.151
I'm gonna say content is gonna
be data.assetCollection.items.

40
00:03:05.151 --> 00:03:09.987
This goes the way, I think it does,
it's still gonna have an error, and

41
00:03:09.987 --> 00:03:12.622
I hope it does so we can talk about that.

42
00:03:12.622 --> 00:03:15.710
So let's go and try to run this.

43
00:03:18.815 --> 00:03:20.081
&gt;&gt; Scott Moss: Wait,
I didn't add it to the homepage.

44
00:03:20.081 --> 00:03:22.920
Sorry, guess you gotta do that.

45
00:03:22.920 --> 00:03:28.300
So here, instead of using Clients here,
I'm gonna get rid of that.

46
00:03:29.690 --> 00:03:31.452
Actually I'm just gonna say,

47
00:03:31.452 --> 00:03:37.844
let's make this logo,
&gt;&gt; Scott Moss: LogoWall.

48
00:03:41.156 --> 00:03:42.466
&gt;&gt; Scott Moss: There we go.

49
00:03:42.466 --> 00:03:43.916
So now let's try that.

50
00:03:48.045 --> 00:03:48.996
&gt;&gt; Scott Moss: Okay, no error.

51
00:03:48.996 --> 00:03:49.896
I guess that works just fine.

52
00:03:51.096 --> 00:03:54.857
It's still showing the hard-coded ones, so

53
00:03:54.857 --> 00:04:00.556
let's go into the Clients and
actually put in the ones from the props.

54
00:04:00.556 --> 00:04:04.479
So instead of doing this,
I'm just gonna just copy one,

55
00:04:04.479 --> 00:04:08.417
since they're all the same
minus the heights and stuff.

56
00:04:08.417 --> 00:04:11.521
I'm gonna get rid of the rest of these,

57
00:04:11.521 --> 00:04:15.954
they're just repeating, so
get rid of all this stuff.

58
00:04:15.954 --> 00:04:17.613
Where does this end?

59
00:04:17.613 --> 00:04:19.137
I think it ends here.

60
00:04:22.202 --> 00:04:23.120
&gt;&gt; Scott Moss: No-
&gt;&gt; Student 1: One too many.

61
00:04:23.120 --> 00:04:23.661
&gt;&gt; Scott Moss: One too many.

62
00:04:23.661 --> 00:04:24.958
Okay, here we go.

63
00:04:24.958 --> 00:04:25.908
There we go.

64
00:04:25.908 --> 00:04:33.348
Okay, so I'm gonna do that, and then I'm
gonna say content.map, give me a logo.

65
00:04:33.348 --> 00:04:36.348
And then for each logo, I'm gonna do this.

66
00:04:36.348 --> 00:04:39.098
I'll put a key on this so
React can leave me alone.

67
00:04:41.198 --> 00:04:45.257
The key will be the logo.url.

68
00:04:45.257 --> 00:04:50.044
And then here for
the source, that's logo.url.

69
00:04:50.044 --> 00:04:52.437
Alternate is logo.title.

70
00:04:54.494 --> 00:04:57.050
&gt;&gt; Scott Moss: width = (logo.width).

71
00:04:59.326 --> 00:05:02.346
&gt;&gt; Scott Moss: height = (logo.height).

72
00:05:02.346 --> 00:05:03.516
There we go.

73
00:05:05.461 --> 00:05:07.523
&gt;&gt; Scott Moss: I might have to do
a restart with the next config.

74
00:05:07.523 --> 00:05:08.023
We'll see.

75
00:05:09.523 --> 00:05:11.413
Nope, looks exactly the same.

76
00:05:11.413 --> 00:05:15.953
So that's how we we know it works
because we put the same images up there.

77
00:05:15.953 --> 00:05:19.173
So everything works exactly
the way it's supposed to.

78
00:05:19.173 --> 00:05:23.120
&gt;&gt; Student 2: Would you control the order,
or is that just like another GraphQL?

79
00:05:23.120 --> 00:05:24.106
&gt;&gt; Scott Moss: That's a great question.

80
00:05:24.106 --> 00:05:26.806
So the question was,
how do you control the order?

81
00:05:26.806 --> 00:05:28.133
I was just about to talk about that.

82
00:05:28.133 --> 00:05:32.376
So, two ways, just two ways.

83
00:05:33.616 --> 00:05:37.596
It depends on who you want to
have control of the order.

84
00:05:37.596 --> 00:05:41.933
If you want the content folks to be able
to control the order, then you need to go

85
00:05:41.933 --> 00:05:46.626
make another content model that isn't the
asset model in which you link an asset to.

86
00:05:47.716 --> 00:05:51.716
And then that way you can
query that content model.

87
00:05:51.716 --> 00:05:53.709
You can attach that to a collection, and

88
00:05:53.709 --> 00:05:56.473
that collection will have
a list in which they can sort.

89
00:05:56.473 --> 00:05:58.336
Pretty much it'll look just like this.

90
00:05:58.336 --> 00:06:01.914
We already have an example of it,
while I'm talking, I can just show you.

91
00:06:01.914 --> 00:06:06.112
Basically if we go to our hero,
right, we have this list,

92
00:06:06.112 --> 00:06:08.399
I can sort this list, right?

93
00:06:08.399 --> 00:06:12.538
So you would make a collection
called LogoWall, and

94
00:06:12.538 --> 00:06:16.299
it would have a field called logos.

95
00:06:16.299 --> 00:06:20.983
That field would just be a collection of
assets which you can just drag like this.

96
00:06:20.983 --> 00:06:24.133
And that's how you would get the order,
if you wanted them to control the order.

97
00:06:24.133 --> 00:06:27.350
Now if you wanted to control the order,
you would just add that to your GraphQL

98
00:06:27.350 --> 00:06:30.353
query on whatever order you wanted,
programmatically.

99
00:06:30.353 --> 00:06:31.952
So that's how you would do it.

100
00:06:33.850 --> 00:06:35.523
&gt;&gt; Scott Moss: Yep.

101
00:06:35.523 --> 00:06:39.926
What is this internally doing for
configuring domain images?

102
00:06:39.926 --> 00:06:42.254
Could you talk about
that a little bit more?

103
00:06:44.244 --> 00:06:46.174
What is it internally doing?

104
00:06:46.174 --> 00:06:47.954
Setting up CORS rules or something?

105
00:06:47.954 --> 00:06:51.094
Yeah, it could be some CORS, I don't know.

106
00:06:51.094 --> 00:06:52.803
I don't know exactly
what it would be doing.

107
00:06:52.803 --> 00:06:58.399
I'm guessing by default, they don't
want you, that image component is very,

108
00:06:58.399 --> 00:07:03.668
there's a lot going on in the image
component as far as optimizing images and

109
00:07:03.668 --> 00:07:05.337
things like that.

110
00:07:05.337 --> 00:07:08.137
So it needs to be like
an opt-in experience.

111
00:07:08.137 --> 00:07:12.812
They don't want you accidentally trying
to optimize images you didn't mean to

112
00:07:12.812 --> 00:07:13.557
optimize.

113
00:07:13.557 --> 00:07:17.576
So I think it's just an opt-in experience,
but

114
00:07:17.576 --> 00:07:21.986
I'm sure there's something
going on as far as like,

115
00:07:21.986 --> 00:07:26.984
if you go look at the Next.js docs,
they have stuff set up for

116
00:07:26.984 --> 00:07:30.627
all the different CMSs, so integrations.

117
00:07:30.627 --> 00:07:35.337
So if I go look at Contentfull,
there we go.

118
00:07:35.337 --> 00:07:38.237
They have specific integrations and
things that they have.

119
00:07:38.237 --> 00:07:43.008
So I wouldn't be surprised if they're
just trying to figure out the different

120
00:07:43.008 --> 00:07:44.322
types of mind types.

121
00:07:44.322 --> 00:07:47.564
They're trying to figure out how to
optimize the image, and that's a lot of

122
00:07:47.564 --> 00:07:50.872
work to be doing if you didn't want
it to happen in the first place.

123
00:07:50.872 --> 00:07:53.542
So, I think it's just
an opt-in experience.

124
00:07:53.542 --> 00:07:56.780
I don't think it has a lot to do with
the network since we're doing it on local

125
00:07:56.780 --> 00:07:58.918
host, and
I don't see any other calls going out.

126
00:07:58.918 --> 00:08:03.186
I think it's mostly just
an opt-in experience, yes?

127
00:08:03.186 --> 00:08:05.755
&gt;&gt; Student 2: Are you gonna
get into versioning content?

128
00:08:05.755 --> 00:08:08.428
&gt;&gt; Scott Moss: Am I gonna
get into versioning content?

129
00:08:08.428 --> 00:08:13.361
No, I'm not gonna get into
versioning content because that's

130
00:08:13.361 --> 00:08:16.569
really advanced and platform specific.

131
00:08:16.569 --> 00:08:17.406
I could talk about it.

132
00:08:17.406 --> 00:08:20.571
We won't be doing it.

133
00:08:20.571 --> 00:08:24.997
[LAUGH] But that's very platform specific,

134
00:08:24.997 --> 00:08:30.907
there's different camps of
thought on how that works.

135
00:08:30.907 --> 00:08:35.646
Some products don't believe in versioning
and they'd rather just have a better

136
00:08:35.646 --> 00:08:40.455
draft, publish process or they have
multi-stays processes where content can go

137
00:08:40.455 --> 00:08:45.157
through multiple stages and
have custom stages and approval workflows.

138
00:08:45.157 --> 00:08:46.994
And then you have the camp of, yeah,

139
00:08:46.994 --> 00:08:50.527
I want people to be able to pull down
different histories of whatever.

140
00:08:50.527 --> 00:08:55.517
So it's just too specific to really
go into, and it's quite complicated.

141
00:08:55.517 --> 00:09:00.777
But at the end of the day, it's just
gotta be an API call that you can make.

142
00:09:00.777 --> 00:09:04.704
How you set that up practically and
what that actually does,

143
00:09:04.704 --> 00:09:07.788
that's where the use
cases are very specific.

144
00:09:07.788 --> 00:09:12.656
Because why would you need a older version
of something when you could just make

145
00:09:12.656 --> 00:09:17.685
the older version be the latest version
and always just have the latest version?

146
00:09:17.685 --> 00:09:20.558
So it's just very specific,
so probably not.

