WEBVTT

1
00:00:00.349 --> 00:00:03.410
&gt;&gt; Scott Moss: So how about we
start thinking about some more

2
00:00:03.410 --> 00:00:06.792
different scenarios that
are interesting and but

3
00:00:06.792 --> 00:00:11.962
also quite common when it comes to
developing a content model for a website.

4
00:00:11.962 --> 00:00:14.711
For instance, this one right here,

5
00:00:14.711 --> 00:00:19.684
this logo wall, it's images,
it's scrolling, it's moving.

6
00:00:19.684 --> 00:00:23.249
There's some organization
to it as far as the sizing,

7
00:00:23.249 --> 00:00:25.426
the width, and stuff like that.

8
00:00:25.426 --> 00:00:29.578
So what we can do is we can create, let's
create some shapes, some content models to

9
00:00:29.578 --> 00:00:33.033
represent this, and let's pull
those down and make those dynamics.

10
00:00:33.033 --> 00:00:35.749
So our sales team can
get on the website and

11
00:00:35.749 --> 00:00:38.706
add a new logo when they close a deal,
right?

12
00:00:38.706 --> 00:00:41.585
So let's do that.

13
00:00:41.585 --> 00:00:46.037
So what we wanna do is, first,
I like to go into the website, the code,

14
00:00:46.037 --> 00:00:49.602
to see what is actually needed
to render one of these, and

15
00:00:49.602 --> 00:00:53.121
that way I know what to put
on the content model, right?

16
00:00:53.121 --> 00:00:56.719
So I'm gonna go look in the code.

17
00:00:56.719 --> 00:01:02.577
And I think that is gonna be
in a component called clients.

18
00:01:02.577 --> 00:01:05.661
Yes, that's in a component called clients.

19
00:01:05.661 --> 00:01:06.322
Yes.

20
00:01:06.322 --> 00:01:09.062
This is the problem I thought we were
gonna run into with the hero, but

21
00:01:09.062 --> 00:01:10.678
we're actually gonna run into it here.

22
00:01:10.678 --> 00:01:17.521
So clients, here's that turbo
effect thing that's going crazy.

23
00:01:17.521 --> 00:01:18.200
This one's interesting.

24
00:01:18.200 --> 00:01:22.984
So it's basically literally pulling
in each one of these logos.

25
00:01:22.984 --> 00:01:25.900
Each one of these is a company logo.

26
00:01:25.900 --> 00:01:29.260
And it's not iterating over, it was
just hard code and then one for one.

27
00:01:29.260 --> 00:01:34.204
They all have different widths and
heights and things like that.

28
00:01:34.204 --> 00:01:38.860
And we want this to be dynamic.

29
00:01:38.860 --> 00:01:42.578
We want people to be able to put whatever
they want versus hardcoding it like this

30
00:01:42.578 --> 00:01:45.198
because otherwise the sales
team is gonna contact you.

31
00:01:45.198 --> 00:01:49.149
They're gonna slack you when they get
a new deal, and they're gonna say,

32
00:01:49.149 --> 00:01:53.225
go put that logo on the page, and then
they're gonna send you a blurry JPEG for

33
00:01:53.225 --> 00:01:56.576
the logo, and then you're just
not gonna wanna do it, right?

34
00:01:56.576 --> 00:02:00.498
So the whole point is so
that they can do it.

35
00:02:00.498 --> 00:02:03.332
But there's some inconsistencies
here that we need to figure out.

36
00:02:03.332 --> 00:02:06.647
Luckily for us,
the Next.js image tag is pretty smart and

37
00:02:06.647 --> 00:02:08.281
it's thought a lot of this.

38
00:02:08.281 --> 00:02:11.724
The other problem, though,
is that we're in a client component.

39
00:02:11.724 --> 00:02:15.538
We're in a client component, how do we
get the data for a server side query,

40
00:02:15.538 --> 00:02:17.215
because you can't do that here.

41
00:02:17.215 --> 00:02:20.949
So we just get the data client side and

42
00:02:20.949 --> 00:02:25.055
just use a fact or what should we do here?

43
00:02:25.055 --> 00:02:29.539
Well, the answer is actually simpler
than what you might imagine.

44
00:02:29.539 --> 00:02:32.011
Just wrap this function
in a server component and

45
00:02:32.011 --> 00:02:34.555
have that component get the data and
pass it to it.

46
00:02:34.555 --> 00:02:35.974
And that's exactly what we're gonna do.

47
00:02:35.974 --> 00:02:38.487
So let's model the data first,
then we'll come back and we'll do that.

48
00:02:38.487 --> 00:02:40.621
So as far as the data modeling go,
let's see what we need.

49
00:02:40.621 --> 00:02:47.228
We need the URL, we need an alternate tag,
we need the width, we need the height.

50
00:02:47.228 --> 00:02:49.795
Is there any name associated with these?

51
00:02:49.795 --> 00:02:50.859
I don't see a name.

52
00:02:50.859 --> 00:02:52.481
I think that's it.

53
00:02:52.481 --> 00:02:55.432
So if that's the case,
I know for instance,

54
00:02:55.432 --> 00:02:59.482
most CMSs already have a built-in
content model for assets.

55
00:02:59.482 --> 00:03:02.059
Assets are just like a built-in mode, and

56
00:03:02.059 --> 00:03:05.508
they usually cover at least
these three things for sure.

57
00:03:05.508 --> 00:03:09.859
So we don't really need to go
make a custom model type for

58
00:03:09.859 --> 00:03:13.385
this if there isn't any more needed, okay?

59
00:03:13.385 --> 00:03:17.929
I don't know if Contentful lets you add an
alternate tag or not, we'll see, but for

60
00:03:17.929 --> 00:03:21.513
the most part we should be able for
free to just to add some assets and

61
00:03:21.513 --> 00:03:22.612
get away with that.

62
00:03:22.612 --> 00:03:25.545
So, let's go try, so
I'm gonna go back to Contentful.

63
00:03:27.755 --> 00:03:30.580
&gt;&gt; Scott Moss: And
at the top, you'll see Media.

64
00:03:30.580 --> 00:03:34.875
You can click that,
you click Add assets, Multiple assets.

65
00:03:34.875 --> 00:03:42.709
So here I'm gonna go to Code I'm gonna
go to I think this is inside of courses,

66
00:03:42.709 --> 00:03:48.627
I'm gonna go in there,
I'm gonna go to headless-next.

67
00:03:48.627 --> 00:03:52.904
And then inside of here,
there should be a public folder.

68
00:03:52.904 --> 00:03:56.395
Inside that public folder should
be an image folder, images.

69
00:03:56.395 --> 00:04:00.385
And here we go,
we have all of the images for this app.

70
00:04:00.385 --> 00:04:06.542
The ones that we want are gonna
be the SVGs that say customer.

71
00:04:06.542 --> 00:04:11.121
There are a bunch of other customers,
like customer background and

72
00:04:11.121 --> 00:04:15.938
like some customer PNGs, but the ones for
that logo wall are customer,

73
00:04:15.938 --> 00:04:18.686
I'm sorry, are the client SVG, okay?

74
00:04:18.686 --> 00:04:19.529
Now I'm lost, let's go see.

75
00:04:19.529 --> 00:04:20.745
&gt;&gt; Student: It's client.

76
00:04:20.745 --> 00:04:22.081
&gt;&gt; Scott Moss: It's client.

77
00:04:22.081 --> 00:04:24.050
Yeah, yeah, you're right, it's client SVG.

78
00:04:24.050 --> 00:04:28.295
So what I can do, at least on the Mac,
is I can just start here and

79
00:04:28.295 --> 00:04:33.202
I can go to where I wanna end and
hit Shift and it'll just select them all.

80
00:04:33.202 --> 00:04:35.272
I don't know how you do that on Windows.

81
00:04:35.272 --> 00:04:35.878
&gt;&gt; Student: Same.

82
00:04:35.878 --> 00:04:36.480
&gt;&gt; Scott Moss: It's the same?

83
00:04:36.480 --> 00:04:37.478
Okay, cool.

84
00:04:37.478 --> 00:04:42.474
So I'm just gonna select all those,
all the clients that have SVG and

85
00:04:42.474 --> 00:04:44.292
I'm just gonna open up.

86
00:04:44.292 --> 00:04:47.903
And voila, we have all our logos.

87
00:04:47.903 --> 00:04:48.852
I'm gonna hit Upload.

88
00:04:56.642 --> 00:04:59.849
&gt;&gt; Scott Moss: And it's processing.

89
00:04:59.849 --> 00:05:02.907
It's updating, there we go.

90
00:05:02.907 --> 00:05:04.437
We now have logos.

91
00:05:04.437 --> 00:05:06.570
They are here.

92
00:05:06.570 --> 00:05:13.442
But like I said, they're treated like,
it's literally a built-in content model.

93
00:05:13.442 --> 00:05:15.426
This is what I did when I built the CMS,

94
00:05:15.426 --> 00:05:19.339
we just made a content model called
assets or media that was already there.

95
00:05:19.339 --> 00:05:20.918
And that's basically what this is.

96
00:05:20.918 --> 00:05:23.501
They have their own fields, right?

97
00:05:23.501 --> 00:05:25.807
But they're not published,
so let's publish them.

98
00:05:25.807 --> 00:05:26.877
I'm gonna go here.

99
00:05:26.877 --> 00:05:30.811
Look, you can do mass stuff here,
why didn't it show me on the other one?

100
00:05:30.811 --> 00:05:31.766
It's crazy.

101
00:05:31.766 --> 00:05:33.315
&gt;&gt; Student: Can't delete all your content.

102
00:05:33.315 --> 00:05:35.671
&gt;&gt; Scott Moss: But
you can delete your media though.

103
00:05:35.671 --> 00:05:37.174
Yeah, there we go.

104
00:05:37.174 --> 00:05:40.542
I'm gonna hit Publish, that's gonna
publish all of these hopefully, it does.

105
00:05:40.542 --> 00:05:42.774
There we go.
So now we have that.

106
00:05:42.774 --> 00:05:47.169
And then you know what I'm gonna do.

107
00:05:47.169 --> 00:05:51.922
I wanna query these in the Graph QL Apollo
studio so I can see what the query is,

108
00:05:51.922 --> 00:05:55.087
copy it and then bring it in so
I can grab it, right?

109
00:05:55.087 --> 00:05:56.847
So that's what I'm gonna do.

110
00:05:56.847 --> 00:05:58.111
And this solves a lot of problems for

111
00:05:58.111 --> 00:06:00.443
us because now we don't have to
read the documentation, right?

112
00:06:00.443 --> 00:06:01.892
If we were using reset or something,

113
00:06:01.892 --> 00:06:04.715
we don't have to read the documentation
on how to actually query that.

114
00:06:04.715 --> 00:06:07.928
But because this thing has built-in
documentation, we just go in here and

115
00:06:07.928 --> 00:06:08.847
play around with it.

116
00:06:08.847 --> 00:06:10.852
So I'm gonna go all the way back.

117
00:06:10.852 --> 00:06:14.906
There's an asset thing here,
I'm gonna click that.

118
00:06:14.906 --> 00:06:21.044
There we go and I'm gonna say,
this is getting an asset by an ID.

119
00:06:21.044 --> 00:06:25.109
We don't want that one,
we want asset collection.

120
00:06:25.109 --> 00:06:26.092
That's the one that we want.

121
00:06:26.092 --> 00:06:31.136
So asset collection, and
I'm gonna say where,

122
00:06:31.136 --> 00:06:39.389
and I'm pretty sure, let's see they all
have a just file name or is this title?

123
00:06:42.228 --> 00:06:44.023
&gt;&gt; Scott Moss: I guess
that's file name and title.

124
00:06:44.023 --> 00:06:44.711
I don't know.

125
00:06:44.711 --> 00:06:46.258
But we can filter by that.

126
00:06:46.258 --> 00:06:50.870
So I can say, I want all the ones

127
00:06:50.870 --> 00:06:55.668
whose title contains clients.

128
00:06:55.668 --> 00:06:58.674
So I'm gonna select that.

129
00:06:58.674 --> 00:07:01.513
And what fields do I
want from these items?

130
00:07:01.513 --> 00:07:05.911
I want the width, I want the URL.

131
00:07:05.911 --> 00:07:09.055
I'll take the title,
that'd be the alt tag.

132
00:07:09.055 --> 00:07:11.915
And I'll get the height.

133
00:07:11.915 --> 00:07:13.236
And that's it.

134
00:07:13.236 --> 00:07:16.110
So then here are my
variables title_contains,

135
00:07:16.110 --> 00:07:21.094
I'll put clients
&gt;&gt; Scott Moss: And now I'll run this.

136
00:07:21.094 --> 00:07:21.883
And there we go.

137
00:07:21.883 --> 00:07:22.782
We got all over.

138
00:07:28.344 --> 00:07:30.864
&gt;&gt; Scott Moss: So if it works here,
it's gonna work in our app.

139
00:07:30.864 --> 00:07:33.358
It's the same thing.

140
00:07:33.358 --> 00:07:35.150
So I'm just gonna copy this.

141
00:07:35.150 --> 00:07:37.164
Now that I have that.

142
00:07:37.164 --> 00:07:39.638
I'm gonna go back to our queries.

143
00:07:39.638 --> 00:07:43.568
And I'm gonna say exports, const get.

144
00:07:45.190 --> 00:07:50.166
&gt;&gt; Scott Moss: ContentForLogoWall,
or whatever you wanna call it.

145
00:07:52.089 --> 00:07:52.855
&gt;&gt; Scott Moss: Query.

146
00:07:57.698 --> 00:08:00.576
&gt;&gt; Scott Moss: Yes, that's got to be this.

147
00:08:03.968 --> 00:08:05.084
&gt;&gt; Scott Moss: There we go.

148
00:08:05.084 --> 00:08:07.977
There's my query.

149
00:08:07.977 --> 00:08:11.940
I'm gonna copy the insides of this query,
and I'm gonna go make a type.

150
00:08:11.940 --> 00:08:17.213
So I'm gonna go to my types,
I'm gonna make a logo wall query type.

151
00:08:29.413 --> 00:08:32.482
&gt;&gt; Scott Moss: Paste that in
we don't need these arguments.

152
00:08:32.482 --> 00:08:35.447
We'll talk about arguments
in a little bit.

153
00:08:35.447 --> 00:08:37.198
That's an object type.

154
00:08:37.198 --> 00:08:44.177
This is an array of objects and
this is a pretty sure this is a number.

155
00:08:44.177 --> 00:08:46.260
This is a string.

156
00:08:46.260 --> 00:08:47.902
This is a string.

157
00:08:47.902 --> 00:08:49.737
And this is a number.

158
00:08:52.636 --> 00:08:56.575
&gt;&gt; Scott Moss: There we go, LogoWallQuery.

159
00:08:56.575 --> 00:09:03.996
So I'm gonna take this, go to our queries,
and let's make the queries.

160
00:09:03.996 --> 00:09:08.524
So I'll say data = weight.

161
00:09:08.524 --> 00:09:09.365
What is it called?

162
00:09:09.365 --> 00:09:10.943
ContentGqlFetcher.

163
00:09:10.943 --> 00:09:16.813
So contentGqlFetcher,
pass in our query here.

164
00:09:16.813 --> 00:09:23.336
Pass in our logo wall query
that I import from types.

165
00:09:23.336 --> 00:09:28.240
But we do have to satisfy this constraint
we'll get an error Graph QL because

166
00:09:28.240 --> 00:09:32.390
we're saying that this operation
quick little Graph QL thing.

167
00:09:32.390 --> 00:09:35.606
This is just saying,
I'm declaring a variable called where,

168
00:09:35.606 --> 00:09:39.489
whose type is it Graph ql type and I'm
passing it into this function who wants

169
00:09:39.489 --> 00:09:42.057
an argument called where,
who is that variable.

170
00:09:42.057 --> 00:09:46.246
So I just need to pass in
a variables that has this.

171
00:09:46.246 --> 00:09:52.769
So I'll say variables, there is a where.

172
00:09:52.769 --> 00:09:54.502
In fact,
I'm just gonna go copy what we had here.

173
00:09:54.502 --> 00:09:55.520
It's literally the same thing.

174
00:10:00.627 --> 00:10:02.646
&gt;&gt; Scott Moss: And it's that.

175
00:10:02.646 --> 00:10:05.997
It's just variables, where,
title contains, client.

176
00:10:05.997 --> 00:10:07.706
Cool, so we got that.

177
00:10:07.706 --> 00:10:12.508
Next thing I'll do my check,
if not data, throw an error.

178
00:10:15.974 --> 00:10:19.056
&gt;&gt; Scott Moss: Otherwise, return the data.

179
00:10:19.056 --> 00:10:20.613
I don't really care about the error.

180
00:10:20.613 --> 00:10:24.270
It's just if I don't do that,
the type will always be data or

181
00:10:24.270 --> 00:10:28.676
undefined everywhere, and I don't
wanna deal with that inside of JSX.

