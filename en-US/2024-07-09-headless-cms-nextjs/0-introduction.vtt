WEBVTT

1
00:00:00.171 --> 00:00:01.630
&gt;&gt; Scott Moss: How's it going everybody?

2
00:00:01.630 --> 00:00:07.284
Welcome to Headless CMS with Next.js, I'm
super excited about teaching this course.

3
00:00:07.284 --> 00:00:09.000
If you haven't taken a course with me,

4
00:00:09.000 --> 00:00:11.185
let me give you a little
background about myself.

5
00:00:11.185 --> 00:00:13.580
My name is Scott Moss,
I'm gonna be your instructor.

6
00:00:13.580 --> 00:00:16.032
I've been an engineer for
over 10 years now,

7
00:00:16.032 --> 00:00:19.281
I've worked at companies like Netflix,
early startups, and

8
00:00:19.281 --> 00:00:22.609
even created some startups of my
own that I'll talk about soon.

9
00:00:22.609 --> 00:00:28.147
Currently, I'm making another startup
in AI right now after being inspired,

10
00:00:28.147 --> 00:00:30.885
after taking so many AI pitches as a VC.

11
00:00:30.885 --> 00:00:35.326
And today I'm gonna teach you about
how to use a headless CMS in Next.js.

12
00:00:35.326 --> 00:00:40.133
So, little small nugget, but one of
the first startups that I ever created

13
00:00:40.133 --> 00:00:43.199
was headless CMS back in 2015, 2016.

14
00:00:43.199 --> 00:00:46.221
So I'm pretty deep in the space
from many different angles,

15
00:00:46.221 --> 00:00:50.369
whether it's creating one, trying to
sell one, creating integrations for one,

16
00:00:50.369 --> 00:00:53.585
using one in my projects, and
now teaching about headless CMS.

17
00:00:53.585 --> 00:00:57.358
So I have a lot of different perspectives
that I would love to share with you.

18
00:00:57.358 --> 00:01:00.258
I think one of the best ways to
use a headless CMS is to just use

19
00:01:00.258 --> 00:01:03.216
it on a site that you already have,
because realistically,

20
00:01:03.216 --> 00:01:05.309
that's what's gonna happen in the wild.

21
00:01:05.309 --> 00:01:08.251
You're already gonna have
a website that's done and

22
00:01:08.251 --> 00:01:11.793
you're gonna need to integrate
some part of that to be dynamic.

23
00:01:11.793 --> 00:01:13.219
So that's what we're
gonna do in this course.

24
00:01:13.219 --> 00:01:18.096
So here you can see it's this nice fancy
website that I spent about ten minutes

25
00:01:18.096 --> 00:01:22.672
making, cuz that's about how long it
took to sign up at my credit card and

26
00:01:22.672 --> 00:01:24.192
buy this and download.

27
00:01:24.192 --> 00:01:28.296
And what we're gonna do is we're gonna
take some of these static elements here

28
00:01:28.296 --> 00:01:32.737
and convert them to be dynamic using
a headless CMS, which is the whole point.

29
00:01:32.737 --> 00:01:37.042
I think for the most part that,
reflects what's gonna happen in real life.

30
00:01:37.042 --> 00:01:38.823
It's gonna be very hard for

31
00:01:38.823 --> 00:01:43.946
you to build a website from scratch while
also trying to make content dynamic.

32
00:01:43.946 --> 00:01:47.362
It's like writing a database schema for
an app you know nothing about.

33
00:01:47.362 --> 00:01:51.006
So I think realistically,
that's typically how it's gonna go.

34
00:01:51.006 --> 00:01:52.531
So for today, I have a repo for

35
00:01:52.531 --> 00:01:56.385
you all, that way we can start with
the same app that I just walked through.

36
00:01:56.385 --> 00:02:01.882
And basically, the repo is pretty bare
bones when it comes to dynamic content,

37
00:02:01.882 --> 00:02:05.017
but it's a fully built out website.

38
00:02:05.017 --> 00:02:06.864
And you can take a look around but

39
00:02:06.864 --> 00:02:10.776
it's just a standard Next.js
website that use the app directory.

40
00:02:10.776 --> 00:02:14.920
There's some things in there that you
don't need to touch for the most part,

41
00:02:14.920 --> 00:02:20.269
we're just gonna be replacing a lot of
those different static pieces of content.

42
00:02:20.269 --> 00:02:24.960
As far as course notes, we don't really
have any course notes because a lot

43
00:02:24.960 --> 00:02:28.610
of this is gonna be like thought
process and discussion and

44
00:02:28.610 --> 00:02:31.831
philosophy around how you
design content models.

45
00:02:31.831 --> 00:02:34.621
How do you get someone on your team
who's not technical to use it,

46
00:02:34.621 --> 00:02:36.179
and what are the trade offs?

47
00:02:36.179 --> 00:02:40.307
So we're just gonna talk about it and walk
through it ourselves, and that way you can

48
00:02:40.307 --> 00:02:44.512
kinda understand from your own perspective
what some of those constraints might be.

49
00:02:44.512 --> 00:02:46.128
Go ahead and pull that down.

50
00:02:47.308 --> 00:02:51.116
And if you're on the main branch,
that's the complete version,

51
00:02:51.116 --> 00:02:52.547
don't run that branch.

52
00:02:52.547 --> 00:02:56.468
Check out to the step/0 branch,
that's what we'll be starting.

53
00:02:56.468 --> 00:03:01.340
That's the fresh website that you just
saw that I purchased and downloaded.

54
00:03:01.340 --> 00:03:05.693
So, it's not using the CMS,
it's using some CLI thing, but

55
00:03:05.693 --> 00:03:09.564
all the content is pretty
much static in that website.

56
00:03:09.564 --> 00:03:10.791
So that's the version you wanna be on.

57
00:03:12.931 --> 00:03:19.090
The reason I went with this approach
is because from my experience,

58
00:03:19.090 --> 00:03:25.910
for the most part, people use headless
CMS to a website they already have.

59
00:03:25.910 --> 00:03:28.965
There are occasions where
people start a new website and

60
00:03:28.965 --> 00:03:33.515
they're thinking about headless CMS, but
what I realized in that scenario is that

61
00:03:33.515 --> 00:03:36.580
they don't actually know how
to use the headless CMS.

62
00:03:36.580 --> 00:03:39.628
They don't know what to do with it yet,
because they don't have a structure for

63
00:03:39.628 --> 00:03:40.274
their website.

64
00:03:40.274 --> 00:03:43.410
At minimum, you most likely need
a design from your designers, so

65
00:03:43.410 --> 00:03:46.938
you know what the content places and
layouts and blocks are going to be, and

66
00:03:46.938 --> 00:03:48.959
maybe you can do
a headless CMS from there.

67
00:03:48.959 --> 00:03:51.928
But if you don't even have that,
it's gonna be quite difficult.

68
00:03:51.928 --> 00:03:56.358
So, I didn't think building something
from scratch and then adding a CMS along

69
00:03:56.358 --> 00:04:00.869
the way was the actual practical way that
most people do it, it's usually this.

70
00:04:00.869 --> 00:04:04.730
They have some website in production and
now they wanna manage some or

71
00:04:04.730 --> 00:04:06.671
all of the content in production.

72
00:04:06.671 --> 00:04:07.860
So then they go through and

73
00:04:07.860 --> 00:04:10.869
progressively add certain things
that they wanna change out.

74
00:04:10.869 --> 00:04:14.932
Maybe they start with an experiment for
AB testing on a hero, and then they move

75
00:04:14.932 --> 00:04:19.060
on to, we wanna add a testimonial section
where people can add testimonials and

76
00:04:19.060 --> 00:04:20.125
it progressively.

77
00:04:20.125 --> 00:04:21.108
It goes that way.

78
00:04:21.108 --> 00:04:23.114
So that's how we're gonna do it,
because for

79
00:04:23.114 --> 00:04:25.490
the most part that's what
I've seen a lot of folks do.

80
00:04:25.490 --> 00:04:31.728
Size requirements, because it's Next.js,
you just need Node.js.

81
00:04:31.728 --> 00:04:35.908
So make sure you have
node.js V20 at the minimal,

82
00:04:35.908 --> 00:04:40.001
I haven't tested it on
anything other than V20.

83
00:04:40.001 --> 00:04:42.132
I've tested with bun,
it works with bun, but

84
00:04:42.132 --> 00:04:45.957
I highly recommend just using node because
I have a package json in there, and if you

85
00:04:45.957 --> 00:04:50.076
want the same versions of the dependencies
that I have, then you want to use npm.

86
00:04:50.076 --> 00:04:54.148
So make sure you use npm, it does
run with bun, just install with npm.

87
00:04:54.148 --> 00:04:55.376
You can run with bun if you want.

88
00:04:55.376 --> 00:05:00.145
As far as knowledge prerequisites,
what you would need to know to take this

89
00:05:00.145 --> 00:05:04.396
course, you don't really need
to know that much about Next.js.

90
00:05:04.396 --> 00:05:08.301
So if you've taken an intro course and
have never done anything else,

91
00:05:08.301 --> 00:05:12.750
you're probably fine, we're not gonna
be diving into crazy Next.js stuff.

92
00:05:12.750 --> 00:05:14.995
That was an intermediate
course that I just taught.

93
00:05:14.995 --> 00:05:17.060
If you wanna know more about that,
go take that course.

94
00:05:17.060 --> 00:05:20.590
We actually got into the weeds of a lot
of different things, Llke caching and

95
00:05:20.590 --> 00:05:21.430
stuff like that.

96
00:05:21.430 --> 00:05:24.099
And we'll talk a little bit
about caching and stuff, but

97
00:05:24.099 --> 00:05:25.439
not in too much detail here.

98
00:05:25.439 --> 00:05:28.850
The focus is definitely CMS, so
a little bit of experience with Next.js,

99
00:05:28.850 --> 00:05:30.946
definitely some experience with Node.js.

100
00:05:30.946 --> 00:05:34.572
If you never use Node or anything
like that, that could be a blocker,

101
00:05:34.572 --> 00:05:38.198
highly recommend taking a Node.js
course that we have here as well,

102
00:05:38.198 --> 00:05:40.533
if you wanna do that
before you get started.

103
00:05:40.533 --> 00:05:43.977
Disclaimer, we will be using
some GraphQL here, but

104
00:05:43.977 --> 00:05:48.185
you do not need to know GraphQL to use it,
it's abstracted away so

105
00:05:48.185 --> 00:05:52.406
simple that if you know what JSON is,
you know what we're doing.

106
00:05:52.406 --> 00:05:56.056
So, you do not need to know GraphQL
to actually use this, but yeah,

107
00:05:56.056 --> 00:05:59.471
we will be using some GraphQL,
you just don't need to know it.

108
00:05:59.471 --> 00:06:01.376
So I'm not even gonna say
that's a prerequisite.

