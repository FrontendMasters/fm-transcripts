WEBVTT

1
00:00:00.190 --> 00:00:04.610
All right, so now we've reached a really
good point because not only can we do

2
00:00:04.610 --> 00:00:07.874
dynamic data in our templates,
not only can we update and

3
00:00:07.874 --> 00:00:10.059
style our templates and components.

4
00:00:10.059 --> 00:00:12.972
We can do dynamic data in our components,
we can update and

5
00:00:12.972 --> 00:00:15.766
style our components,
we can compose our components,

6
00:00:15.766 --> 00:00:19.408
our component-like behavior stuff
is getting really strong, right?

7
00:00:19.408 --> 00:00:23.482
We got most of us stuff we need except for
how do you make decisions?

8
00:00:23.482 --> 00:00:25.473
How do you make a decision
in your component?

9
00:00:25.473 --> 00:00:30.227
When I say make a decision, I'm talking
about conditional logic, right?

10
00:00:30.227 --> 00:00:34.152
So how do you conditionally
display things in your component?

11
00:00:34.152 --> 00:00:39.217
Well, we have something called
control flow, which is just language,

12
00:00:39.217 --> 00:00:44.627
not a special feature, just language,
control flow using the @if syntax.

13
00:00:44.627 --> 00:00:48.554
All right, anybody ever use
Blazor before by any chance,

14
00:00:48.554 --> 00:00:50.812
anybody at home ever use Blazor?

15
00:00:50.812 --> 00:00:53.573
Okay, so if you use Blazor,
you might have seen this,

16
00:00:53.573 --> 00:00:57.492
we get this comment every single
time people see this, that's Blazor.

17
00:00:57.492 --> 00:01:00.486
It's not Blazor, but
it definitely looks like Blazor, and

18
00:01:00.486 --> 00:01:03.431
this syntax was actually chosen
by the Angular community.

19
00:01:03.431 --> 00:01:07.167
We had our own ideas about
what the syntax should be.

20
00:01:07.167 --> 00:01:11.110
We liked the hashtag and
then the community was like, no,

21
00:01:11.110 --> 00:01:14.501
we hate this,
[LAUGH] we really like the @ symbol.

22
00:01:14.501 --> 00:01:17.567
And so we changed because the Angular
team said, well, we'd like to do,

23
00:01:17.567 --> 00:01:20.735
we're an evidence driven team,
meaning we take evidence Information from

24
00:01:20.735 --> 00:01:23.372
the community and we try to serve
our community the best we can.

25
00:01:23.372 --> 00:01:26.618
And so, y'all said y'all didn't like it,
so we changed it.

26
00:01:26.618 --> 00:01:29.956
Okay, let's say that if
you see this component,

27
00:01:29.956 --> 00:01:34.258
you could probably get an idea of
what the intended behavior is.

28
00:01:34.258 --> 00:01:40.171
The intended behavior is that you
could show one or the other, right?

29
00:01:40.171 --> 00:01:42.662
One or the other,
please login or welcome back.

30
00:01:42.662 --> 00:01:44.466
But how could you do
that in your template?

31
00:01:44.466 --> 00:01:46.182
What logic and things could you do?

32
00:01:46.182 --> 00:01:49.181
Okay, here's how we can make that happen,
all right?

33
00:01:49.181 --> 00:01:54.092
So the idea is that we have maybe
a user object in our class, and

34
00:01:54.092 --> 00:01:59.671
it has a property called isLoggedIn,
which is true or false, right?

35
00:01:59.671 --> 00:02:02.537
And so if that's there or not,
we want to do that thing.

36
00:02:02.537 --> 00:02:08.783
So here's what you do in Angular, you use
the control flow with the @if syntax.

37
00:02:08.783 --> 00:02:11.962
This goes directly in your template,
okay, this is at the template level.

38
00:02:11.962 --> 00:02:14.373
So you use @if parentheses and

39
00:02:14.373 --> 00:02:19.857
what goes in there is a expression
that evaluates to truly or falsely.

40
00:02:19.857 --> 00:02:24.770
And I had to use that language because
of JavaScript's complicated relationship

41
00:02:24.770 --> 00:02:25.774
with the truth.

42
00:02:25.774 --> 00:02:26.815
&gt;&gt; [LAUGH]
&gt;&gt; All right,

43
00:02:26.815 --> 00:02:29.228
JavaScript has a very complicated
relationship with the truth.

44
00:02:29.228 --> 00:02:32.824
So you want a truly or
falsely expression there.

45
00:02:32.824 --> 00:02:38.336
And here's what's really nice about this,
it's a very declarative style.

46
00:02:38.336 --> 00:02:42.530
I know in other frameworks, it's like
you've got to do an expression in there

47
00:02:42.530 --> 00:02:46.480
and then put your if and else statement,
then come out of the expression.

48
00:02:46.480 --> 00:02:49.022
So this is just a different way to do it,
right,

49
00:02:49.022 --> 00:02:52.026
but the same way that you can
still make your decisions.

50
00:02:52.026 --> 00:02:54.599
And you can group everything
by those curly braces.

51
00:02:54.599 --> 00:02:58.124
So you can conditionally
display groups of elements and

52
00:02:58.124 --> 00:03:00.974
components, right, and not just one line.

53
00:03:00.974 --> 00:03:03.768
It could be a group,
whatever fits in your curly braces, okay?

54
00:03:03.768 --> 00:03:05.190
But here's what gets really nice.

55
00:03:05.190 --> 00:03:09.658
So now we got our expression
user.isLoggedIn, and no curly braces,

56
00:03:09.658 --> 00:03:12.851
no double curly,
cuz this is not interpolation.

57
00:03:12.851 --> 00:03:17.426
We're not displaying the value,
we're just conditionally choosing things.

58
00:03:17.426 --> 00:03:18.462
Guess what, though?

59
00:03:18.462 --> 00:03:19.648
It can get better.

60
00:03:19.648 --> 00:03:21.058
You wanna see how it gets better?

61
00:03:21.058 --> 00:03:22.691
Give me a thumbs up if you
wanna see it get better.

62
00:03:22.691 --> 00:03:29.562
Check this out, [SOUND] a nice clean else,
a nice declarative else, right?

63
00:03:29.562 --> 00:03:32.185
Okay, and then you got your else block,

64
00:03:32.185 --> 00:03:35.975
but it can get even better
because we also support else if.

65
00:03:38.043 --> 00:03:41.851
So If the amount is &lt; 50,
else if, do this thing and

66
00:03:41.851 --> 00:03:45.588
as many of those as you want,
right, and then else.

67
00:03:45.588 --> 00:03:46.718
So what does this give you?

68
00:03:46.718 --> 00:03:49.213
Instead of having to do a bunch of ifs and

69
00:03:49.213 --> 00:03:53.678
trying to rearrange things in your
template and lots of messy syntax,

70
00:03:53.678 --> 00:03:57.706
cuz we used to have that,
it used to be not as ergonomic as this.

71
00:03:57.706 --> 00:03:59.833
This is a new feature for Angular.

72
00:03:59.833 --> 00:04:03.058
We used to do it through
what's called directives,

73
00:04:03.058 --> 00:04:08.136
which would allow us to tag an element and
say ng if this thing and that other thing.

74
00:04:08.136 --> 00:04:11.292
It was just harder to read, harder
to reason about, but this is better.

75
00:04:11.292 --> 00:04:13.179
And guess what's great about this?

76
00:04:13.179 --> 00:04:16.783
This is built into our template system,
our syntax,

77
00:04:16.783 --> 00:04:20.240
so no external dependencies are required,
okay?

78
00:04:20.240 --> 00:04:21.981
You just start typing this, okay?

79
00:04:24.948 --> 00:04:29.971
All right, so let's jump back in it.

80
00:04:29.971 --> 00:04:31.576
Let's get back cooking, all right?

81
00:04:34.015 --> 00:04:36.536
I'm gonna close all these up for us.

82
00:04:36.536 --> 00:04:40.718
Keep our workspace clean,
stop my other server.

83
00:04:43.138 --> 00:04:49.199
And then I wanna go to 04,
control-flow with if, all right?

84
00:04:49.199 --> 00:04:50.818
And then go to the README.

85
00:04:52.508 --> 00:04:54.955
Now README should be updated, okay?

86
00:04:54.955 --> 00:05:00.873
Very cool, I'm just gonna grab the how to
run this example script just to keep it.

87
00:05:03.039 --> 00:05:04.758
I feel like somebody at home was like,
man,

88
00:05:04.758 --> 00:05:07.368
this is really helpful that every
example has what I need to start.

89
00:05:07.368 --> 00:05:08.578
I know, I thought about y'all.

90
00:05:08.578 --> 00:05:11.710
Listen, I was thinking about
y'all when I was designing this,

91
00:05:11.710 --> 00:05:14.620
how can I make your lives better and
have a good experience?

92
00:05:14.620 --> 00:05:16.538
So I'm glad that this is working for you.

93
00:05:18.386 --> 00:05:22.843
All right, so
let's go through what our task is.

94
00:05:22.843 --> 00:05:26.152
All right, so we have this example.

95
00:05:26.152 --> 00:05:29.254
Now if I go to the example,
it's updated for me right?

96
00:05:29.254 --> 00:05:31.587
But we have our
Frontend Masters' credit card.

97
00:05:31.587 --> 00:05:32.758
Mark, I'm sorry about that.

98
00:05:32.758 --> 00:05:36.518
[LAUGH] He's like,
how'd you get my information?

99
00:05:36.518 --> 00:05:40.383
Okay, this is the credit card system,
but if you notice the levels are kind of

100
00:05:40.383 --> 00:05:44.690
messed up because it's showing all levels,
you can't be all those at the same time.

101
00:05:44.690 --> 00:05:46.997
And we're missing some information here.

102
00:05:46.997 --> 00:05:50.632
So your task is to fill
in the information and

103
00:05:50.632 --> 00:05:55.065
then conditionally show
the level based on the data.

104
00:05:55.065 --> 00:05:59.823
Conditionally show the level
based on the data.

105
00:05:59.823 --> 00:06:03.593
Now, how do we get started here, right?

106
00:06:03.593 --> 00:06:05.276
Well, let's look at it.

107
00:06:05.276 --> 00:06:09.206
So we need to add the user
information to the credit card using

108
00:06:09.206 --> 00:06:10.834
the Account Info class.

109
00:06:10.834 --> 00:06:13.272
So we update the app.component.ts.

110
00:06:13.272 --> 00:06:17.936
But this is gonna be our first
introduction to using types in our

111
00:06:17.936 --> 00:06:19.716
components, okay?

112
00:06:19.716 --> 00:06:22.656
Explicitly using types, we've been
using types this whole time, but

113
00:06:22.656 --> 00:06:24.179
they've just been inferred types.

114
00:06:24.179 --> 00:06:26.977
Now we're gonna be explicit
about using our types.

115
00:06:26.977 --> 00:06:29.903
And let's look at how that works for us.

116
00:06:33.948 --> 00:06:35.495
So I already created the type for you.

117
00:06:36.955 --> 00:06:40.522
And just to let you know, friends, I'm
not going to do any of the, I mean, very

118
00:06:40.522 --> 00:06:44.437
little of the CSS writing or little of the
HTML, cuz that's not what you're here for.

119
00:06:44.437 --> 00:06:46.121
You can learn that at any other time,
right?

120
00:06:46.121 --> 00:06:49.926
I'm focusing only on Angular and so
TypeScript stuff, I've provided you with

121
00:06:49.926 --> 00:06:53.064
TypeScript because you don't want
to spend time on that for now.

122
00:06:54.484 --> 00:06:56.984
All right, so we got some places
where our data should go.

123
00:06:58.583 --> 00:07:01.698
And then we got our first
example of our type.

124
00:07:01.698 --> 00:07:04.292
So I'm just gonna talk through this
because you'll see this when you write

125
00:07:04.292 --> 00:07:04.833
Angular code.

126
00:07:06.303 --> 00:07:10.134
So you get your property name,
followed by colon, and

127
00:07:10.134 --> 00:07:12.726
then your type information, okay?

128
00:07:12.726 --> 00:07:16.806
And that's our type information, so
if we go to our AccountInfo type,

129
00:07:16.806 --> 00:07:19.394
then we can see what our
type information is.

130
00:07:19.394 --> 00:07:24.405
What's interesting about AccountInfo,
we got this union here between silver,

131
00:07:24.405 --> 00:07:29.648
gold, or platinum, so membership status
could only have one of those three values.

132
00:07:31.328 --> 00:07:33.668
And this just makes it nicer,
that way you get type checking.

133
00:07:33.668 --> 00:07:36.790
And the way TypeScript works
is that it takes that string,

134
00:07:36.790 --> 00:07:40.434
it turns that into its own type value,
so it's not just any string.

135
00:07:40.434 --> 00:07:43.350
So then it could tell you if you're
right or not, all right, and

136
00:07:43.350 --> 00:07:46.968
that'll help you during developer time,
which is one of the main things we were

137
00:07:46.968 --> 00:07:49.623
thinking about with hey,
writing code with TypeScript.

138
00:07:49.623 --> 00:07:53.055
There's lots of developer value,
so you'll know if it's wrong and

139
00:07:53.055 --> 00:07:56.261
save you from that string misspelling
problem that you can get.

140
00:07:57.523 --> 00:08:01.219
But not the only way to do this, this is
the way that I decided to do this, okay?

141
00:08:01.219 --> 00:08:03.035
All right, so off you go.

142
00:08:03.035 --> 00:08:07.753
Going to implement the parts,
I'll let you get started.

143
00:08:07.753 --> 00:08:11.107
And then I'll take some questions from
our community while you friends start

144
00:08:11.107 --> 00:08:11.887
typing this out.

145
00:08:14.344 --> 00:08:16.563
Do you have any questions
from chat at home?

146
00:08:20.078 --> 00:08:23.083
OK, well chat, go ahead and
do your thing, yes?

147
00:08:23.083 --> 00:08:27.511
&gt;&gt; I think with WebStorm, you need
the latest version to do control flow.

148
00:08:27.511 --> 00:08:28.406
&gt;&gt; Really?

149
00:08:28.406 --> 00:08:30.925
&gt;&gt; I think so,
just in case anyone has an issue.

150
00:08:30.925 --> 00:08:32.818
&gt;&gt; So you're using WebStorm, all right?

151
00:08:32.818 --> 00:08:35.628
No, it's good you're using WebStorm.

152
00:08:35.628 --> 00:08:40.483
So WebStorm is another Web IDE by
the friends who make IntelliJ.

153
00:08:40.483 --> 00:08:45.439
But one of our uber TL on our team,
Jeremy Elbourn, loves WebStorm and

154
00:08:45.439 --> 00:08:50.907
he's been trying to convert the whole
team to use WebStorm this entire time.

155
00:08:50.907 --> 00:08:51.850
It's not working, though.

156
00:08:51.850 --> 00:08:55.047
But he wants us all to use WebStorm,
because it's so good.

157
00:08:55.047 --> 00:08:59.317
I used to use WebStorm, or I used to use
IntelliJ when I did mobile development

158
00:08:59.317 --> 00:09:03.211
with Flutter and it's incredibly powerful,
incredibly powerful.

159
00:09:05.161 --> 00:09:09.373
&gt;&gt; In chat, people just said thanks for
this awesome content and

160
00:09:09.373 --> 00:09:10.994
well done, Mark, so.

161
00:09:10.994 --> 00:09:12.875
&gt;&gt; You better stop being so nice to me.

162
00:09:12.875 --> 00:09:13.889
You know I got something for you.

163
00:09:13.889 --> 00:09:14.395
You see this?

164
00:09:14.395 --> 00:09:15.535
[COUGH] That's for y'all.

165
00:09:15.535 --> 00:09:17.659
Just enjoy it, no,
I'm glad you're having a good time.

166
00:09:17.659 --> 00:09:20.757
I hope everyone's having a nice time and
I'm having a blast, I'm having a blast.

167
00:09:26.127 --> 00:09:28.609
All right,
I'll let you folks get a head start and

168
00:09:28.609 --> 00:09:32.877
then now we're just gonna start filling it
in, so the data object's called a count.

169
00:09:35.851 --> 00:09:36.987
So these parts.

170
00:09:40.043 --> 00:09:41.693
This should be the name, right?

171
00:09:41.693 --> 00:09:45.034
Okay, so why did I include some
of the string interpolation,

172
00:09:45.034 --> 00:09:47.999
even though we've already
done that a bunch of times?

173
00:09:47.999 --> 00:09:51.399
Just for repetition, I want you to
get more comfortable with it and

174
00:09:51.399 --> 00:09:52.749
continue to do it, okay?

175
00:09:52.749 --> 00:09:56.257
So then we've got account.,
this is valid through, so

176
00:09:56.257 --> 00:09:59.340
I think I have a validThru property,
yep, we do.

177
00:09:59.340 --> 00:10:04.492
And then this one is

178
00:10:04.492 --> 00:10:09.002
account.CVV.

179
00:10:09.002 --> 00:10:12.384
I'm gonna save that.

180
00:10:12.384 --> 00:10:16.058
And then we start to see some information,
looks good,

181
00:10:16.058 --> 00:10:20.212
looks great, but now here's
where the magic really comes in.

182
00:10:20.212 --> 00:10:21.401
We gotta get this party started.

183
00:10:22.581 --> 00:10:23.562
So first things first,

184
00:10:23.562 --> 00:10:26.611
don't make the mistake that I
make all the time when I do this.

185
00:10:26.611 --> 00:10:30.241
I make this mistake because I'm just
not used to it, cuz this is brand new.

186
00:10:30.241 --> 00:10:33.300
I type this,
which looks really good, right?

187
00:10:33.300 --> 00:10:39.931
So I do if (account.,
I think it's status, is it?

188
00:10:39.931 --> 00:10:45.438
Yeah, status) === everything looks good so
far, right, no problems.

189
00:10:45.438 --> 00:10:49.148
But you'll see what the problem I made
already, some of you already spotted it.

190
00:10:49.148 --> 00:10:52.609
So is this a silver one, I wanna
make sure I spell that right, okay?

191
00:10:52.609 --> 00:10:58.389
This is gold, okay, so if it's gold,
then we wanna do this thing, okay?

192
00:10:58.389 --> 00:10:59.092
Can I move it up?

193
00:10:59.092 --> 00:11:01.622
Okay, cool let's go.

194
00:11:01.622 --> 00:11:05.002
All right, looks good.

195
00:11:05.002 --> 00:11:08.002
What's going on?

196
00:11:08.002 --> 00:11:11.502
Because I'm so
used to writing if without the @ sign.

197
00:11:12.532 --> 00:11:13.734
That's why, you see?

198
00:11:13.734 --> 00:11:17.220
And now, Angular is like,
hey, I see stuff is broken.

199
00:11:17.220 --> 00:11:19.100
Why don't you like this?

200
00:11:19.100 --> 00:11:20.010
&gt;&gt; Membership status.

201
00:11:20.010 --> 00:11:21.012
&gt;&gt; It's membership status.

202
00:11:21.012 --> 00:11:22.281
&gt;&gt; Membership status.

203
00:11:22.281 --> 00:11:26.463
Okay, see, use your IntelliSense here,

204
00:11:26.463 --> 00:11:30.653
membership status, okay, now it works.

205
00:11:30.653 --> 00:11:34.523
But beware, here's another place
where you can get caught up.

206
00:11:34.523 --> 00:11:40.350
Else if, you feel like it should just
carry that @ through the system for you?

207
00:11:40.350 --> 00:11:42.164
No, you gotta type @ again.

208
00:11:42.164 --> 00:11:46.265
This is something that if I had a choice,
I would probably

209
00:11:46.265 --> 00:11:50.545
put this as an opportunity for
us to consider some changes.

210
00:11:50.545 --> 00:11:53.703
But I don't have a choice on this part,
because I assume for

211
00:11:53.703 --> 00:11:57.998
me as a developer cuz I have that first @
it should apply to this whole structure,

212
00:11:57.998 --> 00:11:59.472
but it's not how it works.

213
00:11:59.472 --> 00:12:00.372
You gotta keep putting that @.

214
00:12:01.502 --> 00:12:03.232
And guess how I figured this out?

215
00:12:03.232 --> 00:12:05.819
Because I was stuck
developing this example, and

216
00:12:05.819 --> 00:12:09.465
I couldn't figure out what was wrong and
I started over from scratch.

217
00:12:09.465 --> 00:12:12.672
I literally deleted the whole thing,
I was like, it must be my environment.

218
00:12:14.422 --> 00:12:18.533
And then it was the @ symbol, and I was
like, yeah, see this is a opportunity for

219
00:12:18.533 --> 00:12:22.286
us to either give better tooling support
here or some hints or something,

220
00:12:22.286 --> 00:12:25.073
because I think people
are gonna type this.

221
00:12:25.073 --> 00:12:25.573
I just do.

222
00:12:27.153 --> 00:12:30.243
Man, I'm being a little transparent here,
let me, this is gonna be recorded.

223
00:12:30.243 --> 00:12:33.153
Hey, don't tell people
on my team I said that.

224
00:12:33.153 --> 00:12:36.256
All right, [LAUGH] they're like,
we're all here.

225
00:12:36.256 --> 00:12:39.005
Let's see, this one is platinum, right?

226
00:12:39.005 --> 00:12:43.145
Okay, so if we know this one is platinum,
and we only have three possible values,

227
00:12:43.145 --> 00:12:45.137
wait, what can I put for this last one?

228
00:12:46.607 --> 00:12:47.107
&gt;&gt; Else.
&gt;&gt; Just else.

229
00:12:47.107 --> 00:12:47.806
&gt;&gt; Just else, yeah,

230
00:12:47.806 --> 00:12:49.887
that's our that's our last case.

231
00:12:49.887 --> 00:12:55.919
And there's a bonus in this example
actually, I'm gonna show it to you, Okay?

232
00:12:55.919 --> 00:12:56.984
So we got that.

233
00:12:56.984 --> 00:13:01.087
Now if we look, cool,
it's working in our favor.

234
00:13:01.087 --> 00:13:03.807
But you might say, Mark,
that didn't work, well, let's change it.

235
00:13:03.807 --> 00:13:07.527
Let's change it, so
what if I put something else?

236
00:13:07.527 --> 00:13:10.287
Let's say somebody tried to hack
my system, they say I'm a ruby.

237
00:13:12.315 --> 00:13:13.529
Look at that.

238
00:13:13.529 --> 00:13:17.948
See, our TypeScript is helping us
because I put that type union there,

239
00:13:17.948 --> 00:13:20.316
no worry about the mistake spelling.

240
00:13:20.316 --> 00:13:22.784
It's telling me right here in
developer time, I can't even cheat.

241
00:13:22.784 --> 00:13:26.033
Okay, so let's put platinum.

242
00:13:29.421 --> 00:13:30.971
There you go, okay?

243
00:13:30.971 --> 00:13:35.578
We did, and
then I think the default was gold, but

244
00:13:35.578 --> 00:13:40.908
let's just make sure silver also works,
okay?

245
00:13:40.908 --> 00:13:44.465
Which is great, so now,
we got the data, we got interpolation,

246
00:13:44.465 --> 00:13:45.769
and we have our syntax.

247
00:13:45.769 --> 00:13:46.661
So we got this done.

248
00:13:46.661 --> 00:13:52.592
Now at the bottom of this, So
if somebody said this in their mind,

249
00:13:52.592 --> 00:13:56.701
why would you do an if here,
if you know all the possible values.

250
00:13:56.701 --> 00:14:01.424
What's a different way to conditionally
show things when you have

251
00:14:01.424 --> 00:14:04.133
a set of values that you already know?

252
00:14:04.133 --> 00:14:05.505
What's a different way to do that?

253
00:14:05.505 --> 00:14:07.569
In regular programming,
not even with Angular in regular-

254
00:14:07.569 --> 00:14:08.181
&gt;&gt; Switch.

255
00:14:08.181 --> 00:14:14.728
&gt;&gt; A switch, Angular also supports
the switch statement as well, okay?

256
00:14:14.728 --> 00:14:15.790
So we could rewrite this.

257
00:14:15.790 --> 00:14:18.898
Now this one, I'm gonna do it and
I bet you I'm gonna get it wrong cuz of

258
00:14:18.898 --> 00:14:21.662
the syntax, but
we're going to work it out together, okay?

259
00:14:21.662 --> 00:14:24.308
So let's start with
the first thing we need.

260
00:14:24.308 --> 00:14:32.425
We're gonna switch, and we're going to
switch on account.membershipStatus, okay?

261
00:14:32.425 --> 00:14:33.550
So you do that.

262
00:14:33.550 --> 00:14:35.855
Okay, no error, so far, so good.

263
00:14:35.855 --> 00:14:37.444
I'm not messing this up.

264
00:14:37.444 --> 00:14:39.572
I can't write a switch statement
to save my life sometimes.

265
00:14:39.572 --> 00:14:41.095
All right, it's probably @case.

266
00:14:42.295 --> 00:14:46.381
And then I wonder if
it's case parenthesis and

267
00:14:46.381 --> 00:14:52.786
then just the type value that I'm
looking for, gold, would this do it?

268
00:14:52.786 --> 00:14:54.003
I might have to look this up.

269
00:14:54.003 --> 00:14:55.235
Let's see, let's just see.

270
00:14:55.235 --> 00:14:56.128
Let's see if I can get it to work.

271
00:14:58.018 --> 00:15:02.540
Cuz yeah, this is all super new, but
okay, that doesn't like that works.

272
00:15:02.540 --> 00:15:04.108
Maybe it's no parentheses?

273
00:15:05.198 --> 00:15:08.556
Maybe, no, I have to look this up,
let's see.

274
00:15:08.556 --> 00:15:09.451
&gt;&gt; Curly brackets.

275
00:15:09.451 --> 00:15:11.339
&gt;&gt; Is it just curly brackets?

276
00:15:11.339 --> 00:15:12.705
&gt;&gt; Parenthesis for the value.

277
00:15:12.705 --> 00:15:14.309
&gt;&gt; Yeah.

278
00:15:14.309 --> 00:15:18.309
[INAUDIBLE]
&gt;&gt; There you go, thank you.

279
00:15:18.309 --> 00:15:19.738
Look at you, teamwork.

280
00:15:19.738 --> 00:15:20.820
Yeah, I got something for you, see this?

281
00:15:20.820 --> 00:15:25.496
I'm gonna warm it up, [SOUND] high
five Steve, there you go, nice job.

282
00:15:25.496 --> 00:15:26.724
All right, very good.

283
00:15:26.724 --> 00:15:30.356
Okay, so then we could rewrite this
whole thing just like that, right?

284
00:15:30.356 --> 00:15:35.564
And then I mean from a programming point
of view, that probably makes sense

285
00:15:35.564 --> 00:15:40.871
to do it this way, but the switch syntax,
you probably use this less often.

286
00:15:40.871 --> 00:15:43.640
I know in my work, in my career,
I've used it sometimes,

287
00:15:43.640 --> 00:15:47.727
well, you use if more often, but it's cool
to know that you can do both ways, right?

288
00:15:47.727 --> 00:15:50.446
So then we take this one as well.

289
00:15:50.446 --> 00:15:55.138
So platinum, and then technically this

290
00:15:55.138 --> 00:15:59.973
will be our default case, so @default.

291
00:15:59.973 --> 00:16:02.389
And then I think we just
do our curly brackets, yep.

292
00:16:02.389 --> 00:16:05.188
So see, that feels good, that feels good.

293
00:16:05.188 --> 00:16:09.257
I actually like that set up there.

294
00:16:09.257 --> 00:16:12.242
Okay, good, so we get both ways,
both ways are valid.

295
00:16:12.242 --> 00:16:14.787
So let me just kinda explain to
people at home what we just did.

296
00:16:14.787 --> 00:16:19.246
We just switch this from,
no pun intended, but

297
00:16:19.246 --> 00:16:22.819
okay, we went from if else to switch.

298
00:16:22.819 --> 00:16:27.630
In our case, because we have a numerated
set of values that we kind of know what

299
00:16:27.630 --> 00:16:32.457
they're gonna be, a switch feels like
a nice alternative here for this one.

300
00:16:32.457 --> 00:16:36.104
And it should work the same,
I wanna comment out this.

301
00:16:40.494 --> 00:16:44.727
All right, wait,
where did this one come from?

302
00:16:44.727 --> 00:16:46.613
It formatted it with.

303
00:16:46.613 --> 00:16:48.323
That's okay, not the end of world.

304
00:16:48.323 --> 00:16:50.710
Okay, still works, still works.

305
00:16:50.710 --> 00:16:53.443
Yeah, the formatting,
you see how it brought it to a new line?

306
00:16:55.120 --> 00:16:56.241
We'll continue to improve this.

307
00:16:56.241 --> 00:17:01.064
Like I said, these are features that
are new as of Angular version 17

308
00:17:01.064 --> 00:17:03.763
that just released November 8th, but

309
00:17:03.763 --> 00:17:08.121
what's really rad is that this
is the future of our framework.

310
00:17:08.121 --> 00:17:12.016
This is how it's going to work moving
forward, so no matter when you watch this,

311
00:17:12.016 --> 00:17:15.590
you'll have up-to-date syntax and
really cool stuff going on for you.

