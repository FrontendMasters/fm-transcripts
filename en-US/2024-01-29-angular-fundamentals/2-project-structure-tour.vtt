WEBVTT

1
00:00:00.160 --> 00:00:01.060
Okay, friends.

2
00:00:01.060 --> 00:00:05.803
So if you got this, that's letting
us know that the Angular CLI

3
00:00:05.803 --> 00:00:09.150
was able to launch the local dev server.

4
00:00:09.150 --> 00:00:14.211
Now, because we wanna give
you good tools that help you,

5
00:00:14.211 --> 00:00:18.435
the local dev server for
Angular is actually Vite.

6
00:00:18.435 --> 00:00:21.580
So pretty fast, pretty modern.

7
00:00:21.580 --> 00:00:24.747
But one question that we get a lot
of times on the Angular team is,

8
00:00:24.747 --> 00:00:27.200
why aren't you using XYZ tool, right?

9
00:00:27.200 --> 00:00:29.000
Yeah, we don't like to break people.

10
00:00:29.000 --> 00:00:30.190
That is really our answer to that.

11
00:00:30.190 --> 00:00:33.210
And so what we try to do is watch and
learn.

12
00:00:33.210 --> 00:00:36.955
See where the industry is going,
see which solutions are the best, and

13
00:00:36.955 --> 00:00:39.899
then we try to incorporate
what makes sense to Angular.

14
00:00:39.899 --> 00:00:44.187
But we don't just jump on the latest thing
at the latest time because that's not

15
00:00:44.187 --> 00:00:48.021
always the right answer for
us and for developer community.

16
00:00:48.021 --> 00:00:54.661
All right, now that we've updated some
Angular code, you've run it locally.

17
00:00:54.661 --> 00:00:58.403
The next thing to do, let's actually
understand what's in a project.

18
00:00:58.403 --> 00:01:01.096
Okay, so
if you have not done this step already,

19
00:01:01.096 --> 00:01:05.680
which is to open up our project in
VS Code, let's go ahead and do that.

20
00:01:05.680 --> 00:01:09.170
And then I'm gonna jump over to VS Code,
and we're just gonna explore.

21
00:01:09.170 --> 00:01:11.950
Let's just explore, let's get involved.

22
00:01:11.950 --> 00:01:16.649
So in any Angular project, you're gonna
have a bunch of folders that are needed,

23
00:01:16.649 --> 00:01:20.470
like our .angular folder for
some settings, angular.json.

24
00:01:20.470 --> 00:01:21.962
Very important file,

25
00:01:21.962 --> 00:01:27.628
the angular.json is where your project
configuration lives a lot of times, right?

26
00:01:27.628 --> 00:01:30.026
So we're talking about
low-level configuration.

27
00:01:30.026 --> 00:01:32.547
Things like if you have
your translation set up,

28
00:01:32.547 --> 00:01:35.510
which translations do
your application support?

29
00:01:35.510 --> 00:01:37.780
And which builder are you gonna use?

30
00:01:37.780 --> 00:01:40.170
Are you gonna use ES build or
a different build?

31
00:01:40.170 --> 00:01:42.222
I mean, so
we have low-level configuration, and

32
00:01:42.222 --> 00:01:43.665
then some project configuration.

33
00:01:43.665 --> 00:01:45.602
If I wanna open this up,
it's just a ton of stuff.

34
00:01:45.602 --> 00:01:49.505
So I'm not gonna ask you to understand it,
or try to reason about it, friends.

35
00:01:49.505 --> 00:01:51.032
But what I want you to see is,

36
00:01:51.032 --> 00:01:53.845
this is where I can find out
things about my project.

37
00:01:53.845 --> 00:01:58.065
So if we look at the one we just
worked on, the Hello Angular project.

38
00:01:58.065 --> 00:02:01.208
You can see the project type,
you can see names and rules and files.

39
00:02:01.208 --> 00:02:03.411
I mean, lots of stuff that you can do.

40
00:02:03.411 --> 00:02:05.823
Lots of stuff that you can
do in this project, okay?

41
00:02:05.823 --> 00:02:08.437
Your package.json will
have your dependencies,

42
00:02:08.437 --> 00:02:12.218
very common to what you see in just
any node-based environment usually.

43
00:02:12.218 --> 00:02:15.587
Package.json with your requirements,
your dependencies.

44
00:02:15.587 --> 00:02:17.620
So you have all your
Angular dependencies and

45
00:02:17.620 --> 00:02:20.363
any developer dependencies that
you need for your project.

46
00:02:21.977 --> 00:02:26.980
Now, let's keep going.

47
00:02:26.980 --> 00:02:29.020
One really cool thing about Angular.

48
00:02:29.020 --> 00:02:33.758
We were the first library or framework
to be built with TypeScript way back in

49
00:02:33.758 --> 00:02:37.543
the day before we knew TypeScript
would win the war, right?

50
00:02:37.543 --> 00:02:41.568
We didn't know what was gonna happen,
and we're like, this is a good idea.

51
00:02:41.568 --> 00:02:43.809
I'll tell you a funny part about
the story's little context.

52
00:02:43.809 --> 00:02:46.328
We were actually gonna make our own thing.

53
00:02:46.328 --> 00:02:48.468
It's very Googly of us,
let's be honest, right?

54
00:02:48.468 --> 00:02:49.408
We were gonna make our own thing.

55
00:02:49.408 --> 00:02:51.778
We were gonna make
something called @script.

56
00:02:51.778 --> 00:02:54.667
And then it was like or,
the TM mark is almost like or,

57
00:02:54.667 --> 00:02:57.819
instead of doing your own thing,
we got this other project

58
00:02:57.819 --> 00:03:00.807
that we're working on that
might be a really good fit.

59
00:03:00.807 --> 00:03:03.316
And then we ended up
collaborating with that team and

60
00:03:03.316 --> 00:03:07.356
then we were the first project to really
make it where it's TypeScript first.

61
00:03:07.356 --> 00:03:10.406
So you can't write Angular apps in
JavaScript, it's TypeScript first.

62
00:03:10.406 --> 00:03:11.726
It's TypeScript only.

63
00:03:11.726 --> 00:03:14.156
Really, you can't even
use regular JavaScript.

64
00:03:14.156 --> 00:03:18.196
And so that's how we were part of
that story early on using TypeScript.

65
00:03:18.196 --> 00:03:20.336
And so you get your TypeScript config for
your project.

66
00:03:20.336 --> 00:03:23.024
So let's jump into this project folder.

67
00:03:23.024 --> 00:03:27.678
Now, this project folder, you may not see
this in a standard Angular project, okay?

68
00:03:27.678 --> 00:03:32.331
Because I'm doing a setup that allows
us to have one set of dependencies, and

69
00:03:32.331 --> 00:03:34.658
then a bunch of applications in it.

70
00:03:34.658 --> 00:03:38.192
That was to make our time together easier,
but it's also used for

71
00:03:38.192 --> 00:03:39.998
things like mono repos, right?

72
00:03:39.998 --> 00:03:43.114
So if you wanna do the mono repo
structure, we have multiple independent

73
00:03:43.114 --> 00:03:46.487
applications but one set of dependencies,
that's what I chose for today, so

74
00:03:46.487 --> 00:03:50.263
that way every time we switch, you don't
have to npm install every single time.

75
00:03:50.263 --> 00:03:52.123
We can just switch and go, okay?

76
00:03:52.123 --> 00:03:55.914
So underneath this project folder,
I have a bunch of examples,

77
00:03:55.914 --> 00:03:58.733
if we go to our Hello World example,
all right?

78
00:03:58.733 --> 00:04:00.633
So this is interesting.

79
00:04:00.633 --> 00:04:05.760
Because we have some more
TypeScript-project-specific configuration,

80
00:04:05.760 --> 00:04:10.267
and then in the source folder is
where all the magic happens, okay?

81
00:04:10.267 --> 00:04:11.437
This is where all the magic happens.

82
00:04:11.437 --> 00:04:14.683
This where you find your components,
your global styles.

83
00:04:14.683 --> 00:04:17.166
So we have our global
styles that we'll have for

84
00:04:17.166 --> 00:04:19.097
the entire application lives here.

85
00:04:19.097 --> 00:04:21.585
Okay, the entire application
global styles lives there.

86
00:04:21.585 --> 00:04:25.866
main.ts, this is like our Bootstrap file.

87
00:04:25.866 --> 00:04:26.956
So let's say you've done React before.

88
00:04:26.956 --> 00:04:28.696
Anybody ever done React before?

89
00:04:28.696 --> 00:04:32.160
Okay, so
I think there's an index.js file that

90
00:04:32.160 --> 00:04:35.715
has the main function that
kicks off everything.

91
00:04:35.715 --> 00:04:37.879
For us that's main.ts, okay?

92
00:04:37.879 --> 00:04:38.997
So in the Angular world,

93
00:04:38.997 --> 00:04:42.046
main.ts is where it kicks off
everything that you're gonna have.

94
00:04:42.046 --> 00:04:46.131
And the magic line, is line 5,
is bootstrapApplication.

95
00:04:46.131 --> 00:04:50.616
So you say what your root component is
to kick off the entire application, and

96
00:04:50.616 --> 00:04:53.817
then you provide
an application configuration.

97
00:04:53.817 --> 00:04:57.527
And we'll get into that even more
as we have to edit that file and

98
00:04:57.527 --> 00:04:58.877
edit that object.

99
00:04:58.877 --> 00:05:04.382
But for now, just know which component
will I load my application with?

100
00:05:04.382 --> 00:05:06.742
Well, you've looked in main.ts and
it tells you.

101
00:05:06.742 --> 00:05:10.783
So can you tell me what's the name of
the component that we will bootstrap this

102
00:05:10.783 --> 00:05:11.852
application with?

103
00:05:14.012 --> 00:05:14.692
&gt;&gt; App component?

104
00:05:14.692 --> 00:05:15.882
&gt;&gt; Yeah, that wasn't a trick question.

105
00:05:15.882 --> 00:05:17.322
I know I asked it like
it was a trick question.

106
00:05:17.322 --> 00:05:18.822
It was not.
I don't ask trick questions.

107
00:05:18.822 --> 00:05:20.052
That's not interesting to me.

108
00:05:20.052 --> 00:05:21.592
No, it is app component.

109
00:05:21.592 --> 00:05:22.774
Okay, very good, very good.

110
00:05:22.774 --> 00:05:23.888
Excellent work, friends, right.

111
00:05:23.888 --> 00:05:24.854
So, app component.

112
00:05:26.524 --> 00:05:29.841
Now, if we were to go into app component,
let's actually,

113
00:05:29.841 --> 00:05:33.884
just having a look and we'll go into
what all of this stuff turns out to be.

114
00:05:33.884 --> 00:05:36.182
But remember when you
were just in angular.dev,

115
00:05:36.182 --> 00:05:39.614
and you updated that line of code,
this is the same type of code.

116
00:05:39.614 --> 00:05:41.956
It's the same behavior.

117
00:05:41.956 --> 00:05:44.850
Got an application config,
which if you have routing and

118
00:05:44.850 --> 00:05:47.563
other things, again,
we'll spend more time here,

119
00:05:47.563 --> 00:05:50.353
but this is just like a high
level overview of project.

120
00:05:50.353 --> 00:05:52.946
app.routes, if you have
routes that you wanna define,

121
00:05:52.946 --> 00:05:55.015
you put them in that file, okay?

122
00:05:55.015 --> 00:05:57.535
And this is the structure
of a Angular application.

123
00:05:59.815 --> 00:06:00.970
This is it.
Okay, this is it.

124
00:06:00.970 --> 00:06:02.875
This is a very basic Angular application.

125
00:06:02.875 --> 00:06:04.814
Application can actually be deployed.

126
00:06:04.814 --> 00:06:08.757
If you took this and you set up
a deployment, let's say with Firebase or

127
00:06:08.757 --> 00:06:13.097
something like that, which we have
a really nice integration with, you could

128
00:06:13.097 --> 00:06:17.503
deploy this with, you install Firebase
into your project, and then sign in and

129
00:06:17.503 --> 00:06:22.091
ng-deploy, and then this can go up to
the Internet if you wanted it to, okay.

130
00:06:22.091 --> 00:06:24.091
And I'll be totally transparent.

131
00:06:24.091 --> 00:06:27.081
Angular has had an interesting reputation.

132
00:06:27.081 --> 00:06:30.565
One of the things you probably have heard
is that it's really hard to learn and

133
00:06:30.565 --> 00:06:33.081
there's a high barrier to entry.

134
00:06:33.081 --> 00:06:36.140
The team has done a lot of
work to change that and

135
00:06:36.140 --> 00:06:41.262
just the number of files has been reduced
to help reduce that learning curve.

136
00:06:41.262 --> 00:06:45.338
So that way when you're ready for
more files, you add them.

137
00:06:45.338 --> 00:06:47.528
We haven't deprecated support for them.

138
00:06:47.528 --> 00:06:49.472
We're just like, hey,
what do you really need to get started?

139
00:06:49.472 --> 00:06:51.045
And we give you what you
need to get started now.

