WEBVTT

1
00:00:00.110 --> 00:00:02.133
Displaying dynamic values in components,

2
00:00:02.133 --> 00:00:04.492
let's talk about that
because that is a core part.

3
00:00:04.492 --> 00:00:08.457
Because right now we have static data, we
can have whatever we just want to write,

4
00:00:08.457 --> 00:00:10.040
but we can do better.

5
00:00:10.040 --> 00:00:14.300
Let's take our component, let's say
this is app.component.html, okay?

6
00:00:15.840 --> 00:00:17.320
This is not the best user experience.

7
00:00:17.320 --> 00:00:20.328
What if you signed into your banking
app and it was like, welcome user.

8
00:00:20.328 --> 00:00:21.618
You're like, this is a scam.

9
00:00:21.618 --> 00:00:22.878
This is not a real baking app.

10
00:00:22.878 --> 00:00:23.918
This is fraud.

11
00:00:23.918 --> 00:00:26.458
Okay, what you probably
want to do is change that.

12
00:00:26.458 --> 00:00:29.778
You want to go from user to
something actually like real there.

13
00:00:29.778 --> 00:00:31.548
Okay, here's how you do it.

14
00:00:31.548 --> 00:00:36.671
In our component class,
you get to define class properties, okay?

15
00:00:36.671 --> 00:00:40.799
So now we got a userName = codingChamp.

16
00:00:40.799 --> 00:00:43.297
That's the username.

17
00:00:43.297 --> 00:00:45.722
Now, here's what's super interesting.

18
00:00:45.722 --> 00:00:49.803
You remember I said that, wait, can you
tell me what components are written in?

19
00:00:49.803 --> 00:00:51.437
What language do we use?

20
00:00:51.437 --> 00:00:52.043
&gt;&gt; TypeScript.

21
00:00:52.043 --> 00:00:54.700
&gt;&gt; TypeScript, but
we don't see any types here.

22
00:00:55.843 --> 00:00:57.260
Why is that?

23
00:00:57.260 --> 00:01:04.950
Why don't we see any types So
this is a nice feature of TypeScript.

24
00:01:04.950 --> 00:01:09.299
TypeScript is really smart.

25
00:01:09.299 --> 00:01:10.264
Microsoft team.

26
00:01:10.264 --> 00:01:11.283
Shout out to you for this.

27
00:01:11.283 --> 00:01:12.248
Wow, that's for you.

28
00:01:12.248 --> 00:01:16.771
Okay, this is able to infer
that codingChamp is a string,

29
00:01:16.771 --> 00:01:20.279
so I don't have to
explicitly put the type.

30
00:01:20.279 --> 00:01:25.153
So type inference, and TypeScript is
really natural and very, very good, right?

31
00:01:25.153 --> 00:01:29.021
it can't infer every single type of course,
but especially things like primitives,

32
00:01:29.021 --> 00:01:30.081
it'll know, right?

33
00:01:30.081 --> 00:01:33.777
And if your type signatures are set
up properly from functions that

34
00:01:33.777 --> 00:01:38.067
return things, it'll be able to do type
inference and know what type it's so

35
00:01:38.067 --> 00:01:40.313
you don't have to write the type there.

36
00:01:40.313 --> 00:01:42.245
But I could write the type there.

37
00:01:42.245 --> 00:01:45.975
I could do that if I wanted to, okay?

38
00:01:45.975 --> 00:01:48.965
So now, we have our property, userName.

39
00:01:49.995 --> 00:01:51.451
But we want to go back into our template.

40
00:01:51.451 --> 00:01:53.526
How do we link the userName
to our template?

41
00:01:53.526 --> 00:01:55.490
Well, here's how you do that, all right?

42
00:01:55.490 --> 00:01:57.423
So how do we make it work?

43
00:01:57.423 --> 00:02:01.906
Well, first you use double curly braces,
right, the double curlies.

44
00:02:03.551 --> 00:02:06.437
That's what we call string interpolation,
okay?

45
00:02:06.437 --> 00:02:08.294
So in your template,
you use double curlys.

46
00:02:08.294 --> 00:02:11.075
I think in Reacts,
its only single curlies, right?

47
00:02:11.075 --> 00:02:12.655
Is that right?

48
00:02:12.655 --> 00:02:16.125
Yeah, okay, so
gotta be different, why not?

49
00:02:16.125 --> 00:02:18.663
All right, so
we use double curlies here, okay.

50
00:02:20.054 --> 00:02:22.904
And then, inside the double curlies,
what can go there?

51
00:02:22.904 --> 00:02:24.599
What are the valid values?

52
00:02:24.599 --> 00:02:27.444
Expressions are the valid values, right?

53
00:02:27.444 --> 00:02:29.971
So it can be a string is
a valid value there, right?

54
00:02:29.971 --> 00:02:32.214
Because it evaluates just being a string.

55
00:02:32.214 --> 00:02:34.084
Or you could put like a calculation.

56
00:02:34.084 --> 00:02:35.504
If you did like 1 + 1,

57
00:02:35.504 --> 00:02:39.426
the expression results into
something that can go there, okay?

58
00:02:39.426 --> 00:02:44.553
So now with our interpolation,
we can put our userName

59
00:02:44.553 --> 00:02:50.221
with a userName links back
to our component, okay?

60
00:02:50.221 --> 00:02:51.251
Guess what though?

61
00:02:51.251 --> 00:02:52.691
Let's get involved.

62
00:02:52.691 --> 00:02:53.321
Let's get involved.

63
00:02:53.321 --> 00:02:56.009
One thing I wanted to show you,
it's better for you to do it.

64
00:02:56.009 --> 00:02:59.121
Let's go to O2- displaying -dynamic -data.

65
00:02:59.121 --> 00:03:04.016
Friends at home 02 displaying
dynamic data in our projects.

66
00:03:05.764 --> 00:03:07.342
All right, so we're done with this.

67
00:03:07.342 --> 00:03:09.262
Lemme teach you something real
quick that's gonna help you.

68
00:03:09.262 --> 00:03:14.502
If you go back, your application is still
running, go ahead and stop it with Ctrl C.

69
00:03:14.502 --> 00:03:17.202
That'll just save you
some heartache later.

70
00:03:17.202 --> 00:03:19.209
Cuz you're like,
what happened to my application?

71
00:03:19.209 --> 00:03:21.571
It's usually because you
have one still running.

72
00:03:21.571 --> 00:03:24.041
So go ahead and
stop the application right there.

73
00:03:24.041 --> 00:03:26.732
So we're going to our second project.

74
00:03:26.732 --> 00:03:30.540
And then let's see what the tasks are for
this project, okay?

75
00:03:32.739 --> 00:03:33.642
Okay, great.

76
00:03:35.249 --> 00:03:40.740
So we're gonna do some more with just
template syntax and interpolation.

77
00:03:40.740 --> 00:03:41.505
So here's what we gotta do.

78
00:03:41.505 --> 00:03:42.972
So an app.component.ts,

79
00:03:42.972 --> 00:03:46.154
we gotta update the template
property to use interpolation.

80
00:03:46.154 --> 00:03:49.481
Interpolation is those
double curly braces, right?

81
00:03:49.481 --> 00:03:53.808
To display the real values from the item
property defined in the component

82
00:03:53.808 --> 00:03:54.727
class, okay?

83
00:03:54.727 --> 00:03:58.209
So let's check out our component class,
because all the hints are there for

84
00:03:58.209 --> 00:03:59.033
us it looks like.

85
00:03:59.033 --> 00:04:00.262
So let's check it out.

86
00:04:00.262 --> 00:04:06.196
So we're going to source,
app, app.component.ts.

87
00:04:07.453 --> 00:04:09.287
Look at those hints.

88
00:04:09.287 --> 00:04:10.850
I left some hints for you.

89
00:04:12.905 --> 00:04:17.821
All right, so
those are the locations of the things.

90
00:04:17.821 --> 00:04:21.329
Now I want you to make the changes.

91
00:04:21.329 --> 00:04:24.597
All right, so there's some styles in here,
just so you can see that we have styles.

92
00:04:24.597 --> 00:04:28.659
And if you want, you can actually run
this just to see what it looks like which

93
00:04:28.659 --> 00:04:30.258
sometimes I'll do that too.

94
00:04:30.258 --> 00:04:32.014
So I'll just start this up just so

95
00:04:32.014 --> 00:04:35.350
I can see what we're working with
what it looks like right now.

96
00:04:35.350 --> 00:04:44.090
So I do 02-displaying,
-Dynamic, all right?

97
00:04:44.090 --> 00:04:44.839
So we go back.

98
00:04:47.585 --> 00:04:49.118
All right, so here's what we have.

99
00:04:49.118 --> 00:04:51.855
It's like a little
pop-up that you can get.

100
00:04:51.855 --> 00:04:55.973
Hey, order now for this bonus offer,
because you've been such a great,

101
00:04:55.973 --> 00:04:59.171
part of the community,
part of our shopping community.

102
00:04:59.171 --> 00:05:03.869
So let's make session has some values,
what questions can I answer?

103
00:05:03.869 --> 00:05:06.617
Any questions that I can answer right now,
it's a great time for questions.

104
00:05:06.617 --> 00:05:08.517
Sure.

105
00:05:08.517 --> 00:05:10.077
&gt;&gt; Folks, were asking,

106
00:05:10.077 --> 00:05:14.849
what's the specificity story around
the styles and the component.

107
00:05:14.849 --> 00:05:16.967
Are they added to a different layer or

108
00:05:16.967 --> 00:05:20.805
are they always going to override
global styles to the component?

109
00:05:20.805 --> 00:05:26.043
Or are they just global styles
that if you already have a really

110
00:05:26.043 --> 00:05:31.903
specific style in your global
will it override the component?

111
00:05:31.903 --> 00:05:32.833
&gt;&gt; That's a great question.

112
00:05:32.833 --> 00:05:34.783
What's the specificity story?

113
00:05:34.783 --> 00:05:36.933
Specificity story, yes.

114
00:05:36.933 --> 00:05:37.883
That one I'm not sure about.

115
00:05:37.883 --> 00:05:42.952
I have never tried to override
a highly specific value.

116
00:05:42.952 --> 00:05:46.932
Let's say to put a component in
the global style for something, right?

117
00:05:46.932 --> 00:05:50.336
That's like as specific as you can get,
right, down to the name well, and

118
00:05:50.336 --> 00:05:53.381
then try to override it, so
I don't know what the conflict areas.

119
00:05:53.381 --> 00:05:56.337
But we can try it, we can actually
try to during the time today.

120
00:05:56.337 --> 00:05:57.805
I'm taking notes to try that example.

121
00:05:57.805 --> 00:06:01.089
So stick around because we will take some
time to answer some of the more complex

122
00:06:01.089 --> 00:06:02.947
questions that I don't
know out of my head.

123
00:06:02.947 --> 00:06:07.265
We'll try, I'm taking notes.

124
00:06:07.265 --> 00:06:09.323
I'm going to call that
exercise be specific.

125
00:06:10.623 --> 00:06:11.243
Get it, no?

126
00:06:11.243 --> 00:06:12.913
Okay, I'll see myself out.

127
00:06:12.913 --> 00:06:16.483
Let's jump back in together and
solve this together.

128
00:06:16.483 --> 00:06:19.219
All right, so first thing for item price,

129
00:06:19.219 --> 00:06:22.188
what's the first thing
I need to change here.

130
00:06:22.188 --> 00:06:24.572
Tell me the first thing I should do.

131
00:06:25.843 --> 00:06:28.404
&gt;&gt; Get rid of the dollar sign and
the comma.

132
00:06:28.404 --> 00:06:30.787
&gt;&gt; Why do you get rid of the dollar sign?

133
00:06:30.787 --> 00:06:32.492
&gt;&gt; Because you don't need it.

134
00:06:32.492 --> 00:06:34.748
&gt;&gt; It's a dollar amount though.

135
00:06:36.055 --> 00:06:37.738
Didn't that work for you?

136
00:06:37.738 --> 00:06:38.625
With the dollar sign?

137
00:06:40.615 --> 00:06:41.839
Okay, it's a trick.

138
00:06:41.839 --> 00:06:44.959
&gt;&gt; I was gonna say,
double curly braces, right?

139
00:06:44.959 --> 00:06:48.759
&gt;&gt; Yeah, double curly braces,
yeah, that's first thing I want.

140
00:06:49.849 --> 00:06:51.109
Yeah, it's okay.

141
00:06:51.109 --> 00:06:55.572
I think that enough people have taught
in the world where they try to trick

142
00:06:55.572 --> 00:06:59.377
the learner that this little
trepidation at first like wait,

143
00:06:59.377 --> 00:07:01.361
what is he really asking?

144
00:07:01.361 --> 00:07:02.941
I usually ask what I really mean.

145
00:07:02.941 --> 00:07:04.521
Like, I'm never trying to trick you.

146
00:07:04.521 --> 00:07:05.589
Okay, I promise you, yeah.

147
00:07:05.589 --> 00:07:09.658
&gt;&gt; I think some people might have
gotten hung up on the dollar sign with

148
00:07:09.658 --> 00:07:11.337
the interpolation of the.

149
00:07:11.337 --> 00:07:15.098
&gt;&gt; Yeah, so
I found this out that this was an issue.

150
00:07:15.098 --> 00:07:18.383
If you don't put a space between them,
it'll do some weird angle stuff.

151
00:07:18.383 --> 00:07:19.925
Here's another thing you can do.

152
00:07:19.925 --> 00:07:21.965
You can do I think it's called Add dollar.

153
00:07:23.285 --> 00:07:25.435
Yeah, so you can do that as well.

154
00:07:25.435 --> 00:07:29.237
Yeah, I didn't know about the space
until when I was reviewing it,

155
00:07:29.237 --> 00:07:31.365
I was like, I need a space there.

156
00:07:31.365 --> 00:07:31.970
So it's a little weird.

157
00:07:31.970 --> 00:07:33.545
I apologize anybody get
hung up on that one.

158
00:07:33.545 --> 00:07:35.515
That is one thing I did not mean for
it to happen.

159
00:07:35.515 --> 00:07:37.205
So we got a price in there.

160
00:07:37.205 --> 00:07:37.975
Price looks good.

161
00:07:37.975 --> 00:07:39.275
This bonus offers only $30.

162
00:07:39.275 --> 00:07:40.495
You got to jump on this.

163
00:07:40.495 --> 00:07:42.975
Now, let's jump into the next thing.

164
00:07:44.335 --> 00:07:45.615
What do I type here?

165
00:07:47.678 --> 00:07:49.310
&gt;&gt; Curly braces item.name.

166
00:07:49.310 --> 00:07:55.775
&gt;&gt; Perfect, double curly braces, we do
item, or that was not item, item.name.

167
00:07:55.775 --> 00:07:57.915
But you see how it was giving
me IntelliSense in the template?

168
00:07:59.115 --> 00:08:02.820
That's where the Angular language
services comes into play, right?

169
00:08:02.820 --> 00:08:06.357
Is it can know in a string that
we're doing Angular code, okay?

170
00:08:06.357 --> 00:08:08.773
And then here's another value there.

171
00:08:08.773 --> 00:08:10.221
Then I can also do things like,

172
00:08:10.221 --> 00:08:12.883
I'm holding down the command
key on my keyboard.

173
00:08:12.883 --> 00:08:14.315
And then I can like Command click and

174
00:08:14.315 --> 00:08:16.573
go right down to what
that property is defined.

175
00:08:16.573 --> 00:08:18.926
So the angular language service
really changed your life developer

176
00:08:18.926 --> 00:08:19.783
experience there.

177
00:08:19.783 --> 00:08:22.918
All right, and
then let's get to our description.

178
00:08:22.918 --> 00:08:25.797
And let's see how we're doing here and
we'll do.

179
00:08:28.334 --> 00:08:30.140
Item.description, okay?

180
00:08:30.140 --> 00:08:31.549
Fantastic friends.

181
00:08:31.549 --> 00:08:34.557
And like I said, for
this dollar sign thing,

182
00:08:34.557 --> 00:08:37.415
that wasn't meant to be like a trick here.

183
00:08:37.415 --> 00:08:40.438
So if you do it like that, you get some
errors and then it just doesn't work.

184
00:08:40.438 --> 00:08:44.333
I have to ask one of our compiler
engineers, why is that a thing?

185
00:08:44.333 --> 00:08:48.287
Because this must mean something else
that I'm just not aware of what it means,

186
00:08:48.287 --> 00:08:49.949
where it's giving you an error.

187
00:08:49.949 --> 00:08:52.914
Where if you do a space,
it figures it out.

188
00:08:52.914 --> 00:08:56.697
And I thought it might
be JavaScript related,

189
00:08:56.697 --> 00:08:59.802
like if you're do a template string.

190
00:08:59.802 --> 00:09:01.871
It's a template string.

191
00:09:01.871 --> 00:09:04.823
So the backtick, come on, Mark.

192
00:09:04.823 --> 00:09:06.754
I promised I have a job, okay?

193
00:09:06.754 --> 00:09:07.952
Listen, this is what happened.

194
00:09:07.952 --> 00:09:09.151
This is the problem with this.

195
00:09:09.151 --> 00:09:11.843
And this is a good learning moment for
everybody, right?

196
00:09:11.843 --> 00:09:15.866
The backtick makes it a,
what's that one called?

197
00:09:15.866 --> 00:09:16.859
&gt;&gt; A template string.

198
00:09:16.859 --> 00:09:18.002
&gt;&gt; A template string.

199
00:09:18.002 --> 00:09:21.680
When you do a dollar sign, so
this isn't an angular thing.

200
00:09:21.680 --> 00:09:24.040
This is a JavaScript or
a TypeScript thing.

201
00:09:24.040 --> 00:09:28.810
It thinks you're trying to do
replacement in a string template.

202
00:09:28.810 --> 00:09:30.080
So that's why it's freaking out.

203
00:09:30.080 --> 00:09:32.040
Man, Mark, come on.

204
00:09:32.040 --> 00:09:32.740
Let's go.

205
00:09:32.740 --> 00:09:34.410
Look at us learning together,
I like that energy.

206
00:09:34.410 --> 00:09:36.918
So then if you just change the $,
you can do that.

207
00:09:36.918 --> 00:09:38.429
That's why that works, okay?

208
00:09:38.429 --> 00:09:40.646
No mysteries, no magic.

209
00:09:40.646 --> 00:09:44.019
Yeah, and then if we go back,
here's our product,

210
00:09:44.019 --> 00:09:48.630
we got our values interpolated there and
everything's feeling good.

211
00:09:48.630 --> 00:09:51.686
What questions can I answer
about this before we go on?

212
00:09:51.686 --> 00:09:55.244
And to be super specific, why do I use
back ticks instead of just single quotes

213
00:09:55.244 --> 00:09:58.116
if that's a possibility that we
can get that weird behavior?

214
00:09:58.116 --> 00:10:01.789
Because with the template strings,
you can do multi-lines, right?

215
00:10:01.789 --> 00:10:04.319
And so that lets you just
kind of format it nicely.

216
00:10:04.319 --> 00:10:08.825
If I do a single or double quote,
then I'll have to concatenate each line.

217
00:10:08.825 --> 00:10:11.889
And that just gets a little cumbersome and
not a good experience.

218
00:10:11.889 --> 00:10:14.329
Yeah, man, look at that.

219
00:10:14.329 --> 00:10:16.169
Look at that, okay?

220
00:10:16.169 --> 00:10:21.085
&gt;&gt; Similar to the questions earlier about
the styles, we've got local data here,

221
00:10:21.085 --> 00:10:24.643
right, the item is scoped to
this particular component.

222
00:10:24.643 --> 00:10:28.543
I assume that there might be data that's
available at the application level.

223
00:10:28.543 --> 00:10:29.057
&gt;&gt; Sure.

224
00:10:29.057 --> 00:10:34.187
&gt;&gt; We're in a broader template, and our
component can access that data as well.

225
00:10:34.187 --> 00:10:39.420
&gt;&gt; So the communication between data and
the local component, right?

226
00:10:39.420 --> 00:10:40.926
And then other parts of application.
We will get to that.

227
00:10:40.926 --> 00:10:45.341
There's a whole section dedicated
to that which we will get to.

228
00:10:45.341 --> 00:10:46.712
Good question.

