WEBVTT

1
00:00:00.000 --> 00:00:05.240
So we're in 08-routing-recap.

2
00:00:05.240 --> 00:00:08.441
So the reason I call it the recap,
because when we do these,

3
00:00:08.441 --> 00:00:11.784
we usually will combine multiple
elements together, okay?

4
00:00:11.784 --> 00:00:13.309
So we'll combine multiple elements.

5
00:00:13.309 --> 00:00:18.151
So we're gonna be working on getting some
links set up, we're gonna work on enabling

6
00:00:18.151 --> 00:00:19.045
routing, and

7
00:00:19.045 --> 00:00:23.975
we're gonna be working on making sure
that we have our router outlet in place.

8
00:00:23.975 --> 00:00:25.213
And I believe in you all and

9
00:00:25.213 --> 00:00:27.809
I know you got this,
you gotta cover it like a blanket.

10
00:00:27.809 --> 00:00:28.966
Let's do this.

11
00:00:30.817 --> 00:00:33.764
We're building, okay,
I'm gonna go check the application.

12
00:00:33.764 --> 00:00:38.593
So the router recap is here but
it's not doing anything, all right?

13
00:00:38.593 --> 00:00:39.725
So we can just do better.

14
00:00:39.725 --> 00:00:40.425
We just do better.

15
00:00:40.425 --> 00:00:42.913
Let's start with the first step.

16
00:00:42.913 --> 00:00:45.417
First that was close this up so
it's more clear.

17
00:00:45.417 --> 00:00:48.327
Okay, so we got router-outlet, looks good.

18
00:00:48.327 --> 00:00:54.526
So in an app.routes.ts, define a route for
HomeComponent as the default route.

19
00:00:54.526 --> 00:00:56.331
So we'll do that now.

20
00:01:00.164 --> 00:01:06.557
So I'm in 08-routing-recap,
source app, app.routes.

21
00:01:06.557 --> 00:01:09.644
Okay, so we need to do that first one.

22
00:01:09.644 --> 00:01:13.519
We use our syntax for a route,

23
00:01:13.519 --> 00:01:17.711
excuse me, and we'll do path.

24
00:01:17.711 --> 00:01:22.270
Because it's default,
it should be the empty string, okay?

25
00:01:22.270 --> 00:01:25.569
Now what's the component we should go to?

26
00:01:25.569 --> 00:01:27.888
Somebody yell it out for me.

27
00:01:27.888 --> 00:01:29.732
&gt;&gt; HomeComponent.

28
00:01:29.732 --> 00:01:31.392
&gt;&gt; Perfect, HomeComponent.

29
00:01:31.392 --> 00:01:34.282
Make sure it's the one
from your current project.

30
00:01:34.282 --> 00:01:37.549
That way it doesn't get us all
mixed up like it did earlier.

31
00:01:37.549 --> 00:01:38.497
We got that.

32
00:01:38.497 --> 00:01:40.846
Okay, so we did our first step.

33
00:01:40.846 --> 00:01:44.918
So we're in app.routes.ts, and
we set up our HomeComponent.

34
00:01:44.918 --> 00:01:45.937
Okay, excellent.

35
00:01:45.937 --> 00:01:53.461
Now we define routes for DetailsComponent,
all but we're gonna add a URL parameter.

36
00:01:53.461 --> 00:01:55.868
So remember that placeholder, okay?

37
00:01:55.868 --> 00:01:57.916
So let's do that.

38
00:01:57.916 --> 00:02:03.273
So I'm gonna take this string for you and
we're gonna go back to app.routes.ts.

39
00:02:03.273 --> 00:02:07.064
We're gonna add another
entry to our routes array.

40
00:02:07.064 --> 00:02:09.012
We call it path.

41
00:02:09.012 --> 00:02:13.913
Okay, okay, okay, look at that,
and we got component.

42
00:02:13.913 --> 00:02:16.061
And what component should it be?

43
00:02:19.826 --> 00:02:20.834
&gt;&gt; Details [INAUDIBLE].

44
00:02:20.834 --> 00:02:22.016
&gt;&gt; Yeah, there you go.

45
00:02:22.016 --> 00:02:23.306
You cooking.

46
00:02:23.306 --> 00:02:24.539
You smell that?

47
00:02:24.539 --> 00:02:26.735
Cuz only her cooking, I like that.

48
00:02:26.735 --> 00:02:30.642
Yeah [LAUGH] I'm so sorry.

49
00:02:30.642 --> 00:02:32.141
I can't control myself.

50
00:02:32.141 --> 00:02:35.562
All right, now, so we done the first
two things, our routes are defined.

51
00:02:35.562 --> 00:02:37.580
We have one standard route, and

52
00:02:37.580 --> 00:02:42.684
then we have another route that has a URL
parameter, that placeholder colon ID.

53
00:02:42.684 --> 00:02:44.847
So that is part of our story.

54
00:02:44.847 --> 00:02:50.408
So in app.component.ts,
we need to add our router-outlet.

55
00:02:50.408 --> 00:02:53.328
So let's go to app.component.ts.

56
00:02:57.973 --> 00:03:00.680
Okay, so we have RouterOutlet there.

57
00:03:00.680 --> 00:03:03.684
It's already importing for you,
you're welcome, I care about you, I know.

58
00:03:03.684 --> 00:03:06.475
But man, he's so nice, I am so nice.

59
00:03:06.475 --> 00:03:07.674
I put that there for you.

60
00:03:07.674 --> 00:03:10.505
All right, but
we do need to put our RouterOutlet.

61
00:03:10.505 --> 00:03:13.814
And as we discussed a few moments ago,
it could really go anywhere but

62
00:03:13.814 --> 00:03:16.505
we'll put it right here,
right, right under the h1.

63
00:03:16.505 --> 00:03:19.871
But it could be moved
around as you desire.

64
00:03:19.871 --> 00:03:21.955
Okay, so here's what the error is.

65
00:03:21.955 --> 00:03:28.049
On line 11, I have a forward slash
as a part of the route definition.

66
00:03:28.049 --> 00:03:32.148
An angular routes cannot
start with a slash.

67
00:03:32.148 --> 00:03:37.350
So to make this work,
we'll delete that forward slash

68
00:03:37.350 --> 00:03:41.997
from our route definition
in app.routes.ts.

69
00:03:47.688 --> 00:03:49.285
Okay, excellent stuff.

70
00:03:49.285 --> 00:03:51.513
So now, see, look at that.

71
00:03:51.513 --> 00:03:53.943
All right, so
now we can go on to the next step.

72
00:03:53.943 --> 00:03:57.573
So I'm back at the README, and now we're
working on updating our components.

73
00:03:57.573 --> 00:04:02.511
So in app.component.ts,
dynamically generate a list of links for

74
00:04:02.511 --> 00:04:04.647
products in productTitles.

75
00:04:04.647 --> 00:04:07.655
How do we dynamically
generate a list of links?

76
00:04:07.655 --> 00:04:12.398
Or how do we dynamically
generate a list to render?

77
00:04:12.398 --> 00:04:13.997
What's our tool for that?

78
00:04:13.997 --> 00:04:15.272
&gt;&gt; For.

79
00:04:15.272 --> 00:04:17.313
&gt;&gt; For, that's right.

80
00:04:17.313 --> 00:04:20.661
So this says to do it where though.

81
00:04:20.661 --> 00:04:22.115
We're gonna do this in upper corner.

82
00:04:22.115 --> 00:04:26.943
Okay, cool, so someplace,
I'm gonna say do it between

83
00:04:26.943 --> 00:04:31.283
the h1 title tag and
the router-outlet, right?

84
00:04:31.283 --> 00:04:35.488
Because you probably want the list of
links, and then when you click them,

85
00:04:35.488 --> 00:04:37.379
the content is displayed below.

86
00:04:37.379 --> 00:04:42.579
So let's do at for, and
we got, so we'll say,

87
00:04:42.579 --> 00:04:46.612
title, maybe, of productTitles.

88
00:04:46.612 --> 00:04:50.802
We'll track productTitles.

89
00:04:50.802 --> 00:04:53.355
Well, we would track title, excuse me.

90
00:04:53.355 --> 00:04:56.930
Now we gotta make those links.

91
00:04:56.930 --> 00:04:58.529
So we gotta make a link.

92
00:04:58.529 --> 00:05:02.599
So I'm just gonna do this just because
I like to get something working.

93
00:05:02.599 --> 00:05:05.792
So in general,
whenever I'm solving any problem,

94
00:05:05.792 --> 00:05:10.001
I like to get something working before
I spend too much time going deep

95
00:05:10.001 --> 00:05:14.448
into the details, because then I don't
know where I failed on the path.

96
00:05:14.448 --> 00:05:18.619
So let's just get the links working
without the fancy stuff, right?

97
00:05:18.619 --> 00:05:22.932
So I'm gonna do title and just make
sure I can get that to display and

98
00:05:22.932 --> 00:05:24.174
see what happens.

99
00:05:24.174 --> 00:05:28.567
All right, that looks good,
that looks good.

100
00:05:28.567 --> 00:05:30.612
But you notice what I noticed?

101
00:05:30.612 --> 00:05:34.273
I left this in big for some purpose, for
you to solve this any way you want to.

102
00:05:34.273 --> 00:05:36.505
They're all on the same line,
probably hardest to read.

103
00:05:36.505 --> 00:05:41.788
So you could do a list or you could do
a p tag, something with a block level.

104
00:05:41.788 --> 00:05:43.693
Styling, you got a lot of choices.

105
00:05:43.693 --> 00:05:46.538
You do whatever you want here, okay?

106
00:05:46.538 --> 00:05:51.886
I'm just gonna make it easy for
myself and just do a p, okay?

107
00:05:51.886 --> 00:05:54.802
Optional, but I'm saying what I'm doing,
okay friends?

108
00:05:54.802 --> 00:06:00.080
So back in, so now, you see,
so I got a p wrapped around.

109
00:06:00.080 --> 00:06:01.448
Here, let me get that out of there.

110
00:06:01.448 --> 00:06:02.147
Okay, there you go.

111
00:06:02.147 --> 00:06:05.385
So you all can see it without
it highlighting everything.

112
00:06:05.385 --> 00:06:07.807
Okay, so I got that p wrapped
around that a tag, okay?

113
00:06:07.807 --> 00:06:10.866
So all that does is make
it in the straight line so

114
00:06:10.866 --> 00:06:12.552
I can see it more clearly.

115
00:06:12.552 --> 00:06:18.720
Okay, now we got RouterOutlet.

116
00:06:18.720 --> 00:06:20.915
I already know what we need next,
but I'll tell you.

117
00:06:20.915 --> 00:06:24.324
Okay, see,
we need the routerLink attribute.

118
00:06:24.324 --> 00:06:25.571
Remember that?

119
00:06:25.571 --> 00:06:29.103
So you get routerLink.

120
00:06:29.103 --> 00:06:35.083
But for it to work,
you gotta import RouterLink.

121
00:06:35.083 --> 00:06:37.515
Okay, I'll let you catch on that part.

122
00:06:37.515 --> 00:06:41.595
You import Routerlink, and
then you gotta set it to be a value.

123
00:06:41.595 --> 00:06:45.940
Okay, we're not all the way there yet,
we gotta continue going.

124
00:06:45.940 --> 00:06:48.346
So here's what we want.

125
00:06:48.346 --> 00:06:52.148
So when you do on a routerLink and
you do in a parameter,

126
00:06:52.148 --> 00:06:56.213
like URL with the parameter,
you gotta give it two parts.

127
00:06:56.213 --> 00:07:02.353
You gotta say where you wanna go and
what parameter you wanna use, okay?

128
00:07:02.353 --> 00:07:04.478
So first, where do I wanna go?

129
00:07:04.478 --> 00:07:07.191
Anybody remember?

130
00:07:07.191 --> 00:07:08.179
What page this goes to?

131
00:07:08.179 --> 00:07:09.246
What route?

132
00:07:09.246 --> 00:07:09.899
&gt;&gt; Details.

133
00:07:09.899 --> 00:07:12.001
&gt;&gt; Details, very nice, I like that.

134
00:07:12.001 --> 00:07:13.330
That's where I wanna go.

135
00:07:18.576 --> 00:07:21.612
And then I need a value here.

136
00:07:21.612 --> 00:07:23.097
Right, I need a value.

137
00:07:25.746 --> 00:07:28.936
So here's how we're gonna sort it out for
now, okay?

138
00:07:28.936 --> 00:07:31.818
If they're gonna sort out you
can use this thing called index.

139
00:07:31.818 --> 00:07:37.547
This is a value that's available within
the scope of our for, okay, $index.

140
00:07:37.547 --> 00:07:39.662
It's available within
the scope of the for.

141
00:07:39.662 --> 00:07:42.101
It just provides it for you, okay?

142
00:07:44.647 --> 00:07:52.226
So now, Do we have to, I think we
gotta wrap this in square brackets.

143
00:07:52.226 --> 00:07:54.801
Okay, yeah, so
the way you use this thing, right?

144
00:07:54.801 --> 00:07:56.027
There you go.

145
00:07:56.027 --> 00:07:58.821
There you go, now we should be able to.

146
00:07:58.821 --> 00:08:01.329
Yeah, there you go, cool.

147
00:08:01.329 --> 00:08:04.027
All right, so we're pretty close.

148
00:08:04.027 --> 00:08:07.026
Okay, but I'm gonna go back here so
you can catch up with me there.

149
00:08:07.026 --> 00:08:08.725
So we had to put our routerLink.

150
00:08:08.725 --> 00:08:11.626
And remember what I told you
about binding to things.

151
00:08:11.626 --> 00:08:16.661
It's universally true, but
we'll see one context where it'll be like,

152
00:08:16.661 --> 00:08:19.078
I thought I should bind but I didn't.

153
00:08:19.078 --> 00:08:24.031
In this case you had to bind, because
if we didn't bind, guess what happens?

154
00:08:24.031 --> 00:08:25.933
The right hand side is a string.

155
00:08:25.933 --> 00:08:27.019
How did I know that it was a string?

156
00:08:27.019 --> 00:08:27.809
Let me show you.

157
00:08:27.809 --> 00:08:33.060
Well, if I take this off,
you see the kind of color changed.

158
00:08:34.829 --> 00:08:38.406
So the IDE was telling
us the hint right there,

159
00:08:38.406 --> 00:08:42.921
that what was being sent to
routerLink was a string value.

160
00:08:42.921 --> 00:08:44.793
You see, but you can't.

161
00:08:44.793 --> 00:08:47.751
And then once I put
the bindings it's like,

162
00:08:47.751 --> 00:08:50.936
this is actually a value
which represents the path.

163
00:08:50.936 --> 00:08:52.352
And then we got that index.

164
00:08:52.352 --> 00:08:55.913
If you want to see that index,
just so you can see, right?

165
00:08:55.913 --> 00:08:58.942
I'm just gonna put this, you don't have
to type this, I'm just gonna show you.

166
00:08:58.942 --> 00:09:00.920
So you see what the values
of the index is.

167
00:09:02.805 --> 00:09:07.234
It's like, there ain't no value.

168
00:09:07.234 --> 00:09:09.688
Okay, hold on.

169
00:09:09.688 --> 00:09:11.295
All right, there you go, interpolated.

170
00:09:11.295 --> 00:09:11.891
You see?

171
00:09:11.891 --> 00:09:16.468
So it's just the indices of the array,
like your i, your iterator value.

172
00:09:16.468 --> 00:09:17.398
There you go right there.

173
00:09:17.398 --> 00:09:20.103
You could do a dollar sign
index in your for, okay?

174
00:09:20.103 --> 00:09:23.023
Fantastic, we are cooking.

175
00:09:23.023 --> 00:09:25.193
We are out here hotter than
fish grease right now.

176
00:09:25.193 --> 00:09:27.287
Stop playing, all right?

177
00:09:30.455 --> 00:09:35.925
We did this, we did that, so
now we're in the DetailsComponent.

178
00:09:35.925 --> 00:09:39.224
Now we gotta do that setter thing, okay?

179
00:09:39.224 --> 00:09:42.149
And that syntax is a little
tricky in the beginning so

180
00:09:42.149 --> 00:09:45.471
I gave it to you in the next step so
you can just get it to work,

181
00:09:45.471 --> 00:09:48.820
cuz I don't want you to spend
time trying to remember that.

182
00:09:48.820 --> 00:09:52.730
Oops, sorry,
I want you to spend time working on that.

183
00:09:52.730 --> 00:09:53.805
So let's do that.

184
00:09:53.805 --> 00:09:55.140
So let's go to details.

185
00:09:55.140 --> 00:09:58.344
So let me just recap where we
are cuz we've done a lot of steps,

186
00:09:58.344 --> 00:09:59.712
recap where we are so far.

187
00:09:59.712 --> 00:10:04.531
What we've done,
we've listed all of the products,

188
00:10:04.531 --> 00:10:08.211
and we made them links using routerLink.

189
00:10:08.211 --> 00:10:13.145
We've defined a path in our
routes.ts that has a placeholder for

190
00:10:13.145 --> 00:10:18.182
the productId that we're talking
about that we wanna reference.

191
00:10:18.182 --> 00:10:22.895
Now the step is to go into
details.component.ts and

192
00:10:22.895 --> 00:10:25.100
create that productId.

193
00:10:25.100 --> 00:10:27.823
Okay, now we wanna create that productId.

194
00:10:27.823 --> 00:10:30.889
So let's go to there.

195
00:10:30.889 --> 00:10:34.292
So we go to details.component.ts.

196
00:10:37.518 --> 00:10:39.691
So we got some products in here.

197
00:10:39.691 --> 00:10:43.343
All right, that looks good,
that feels crisp.

198
00:10:43.343 --> 00:10:47.465
First thing we're gonna do,
we need the productId.

199
00:10:47.465 --> 00:10:50.482
Now I set this to -1, you know why?

200
00:10:50.482 --> 00:10:52.899
Cuz it's just a way to represent
that it's not there, but

201
00:10:52.899 --> 00:10:56.219
I don't wanna do undefined because you
know TypeScript do not like undefined.

202
00:10:56.219 --> 00:10:58.096
And no, TypeScript gets really angry.

203
00:10:58.096 --> 00:10:59.512
So I just do [LAUGH] -1.

204
00:10:59.512 --> 00:11:02.105
Somebody in the comments
tell me if that's wrong,

205
00:11:02.105 --> 00:11:04.291
that's fine, I'll adjust my behavior.

206
00:11:04.291 --> 00:11:07.964
But the next thing we need
to do is get to this input.

207
00:11:07.964 --> 00:11:11.493
We gotta get this input going, okay?

208
00:11:11.493 --> 00:11:15.385
And I'll explain this code again
cuz I know we went through it but

209
00:11:15.385 --> 00:11:17.778
it's still new behavior, all right?

210
00:11:17.778 --> 00:11:19.460
So I'm gonna import it.

211
00:11:19.460 --> 00:11:22.444
Okay, let me save, and let's make
sure we have some decent spacing.

212
00:11:22.444 --> 00:11:24.913
So I have an input called id, but

213
00:11:24.913 --> 00:11:30.592
I use a special JavaScript thing called
set, right, to make it a setter.

214
00:11:30.592 --> 00:11:32.354
Okay, it's called a setter.

215
00:11:32.354 --> 00:11:34.435
You can have getters and setters.

216
00:11:34.435 --> 00:11:36.506
This is a setter.

217
00:11:36.506 --> 00:11:39.787
Okay, and then I say, set the id.

218
00:11:39.787 --> 00:11:42.187
Stop with the help,
I don't want the help right now.

219
00:11:42.187 --> 00:11:48.630
Host of the Id, and then you got a value,
because it's a setter, it takes the value.

220
00:11:48.630 --> 00:11:50.789
You see, that's why you can
set the value for this thing.

221
00:11:50.789 --> 00:11:52.738
Why is this setter interesting?

222
00:11:52.738 --> 00:11:54.789
Think about it like this.

223
00:11:54.789 --> 00:11:59.186
What if you wanted to
transform the value being

224
00:11:59.186 --> 00:12:03.366
passed in any format you want to do,
right?

225
00:12:03.366 --> 00:12:08.329
You ask someone for a username, and
you wanna change it to all lowercase or

226
00:12:08.329 --> 00:12:11.542
something before you do
the final assignment.

227
00:12:11.542 --> 00:12:13.761
That's why you have a setter here, right?

228
00:12:13.761 --> 00:12:18.485
We have a chance to do something
before we set the value of our

229
00:12:18.485 --> 00:12:23.318
input versus just taking the value and
assigning it, okay?

230
00:12:23.318 --> 00:12:24.715
This just gives us
a chance to do something.

231
00:12:24.715 --> 00:12:26.023
And we do wanna do something.

232
00:12:26.023 --> 00:12:30.241
We wanna actually take
that parameter URL and

233
00:12:30.241 --> 00:12:33.682
we wanna assign it to our productId.

234
00:12:33.682 --> 00:12:34.946
That's all we wanna do.

235
00:12:42.120 --> 00:12:46.766
&gt;&gt; Is it this.productId or this.Id?

236
00:12:46.766 --> 00:12:50.074
&gt;&gt; No, it's productId because
that's this property right here.

237
00:12:50.074 --> 00:12:55.037
I'm gonna try something in the minute
cuz I wonder if we can get

238
00:12:55.037 --> 00:12:57.146
away because it's just.

239
00:12:57.146 --> 00:12:59.938
Well, this becomes a string.

240
00:12:59.938 --> 00:13:00.809
We'll think about it.

241
00:13:00.809 --> 00:13:04.848
Cuz I'm wondering,
is there even smoother syntax to this?

242
00:13:04.848 --> 00:13:07.729
No, I'm just thinking about it out loud,
I like to experiment with stuff.

243
00:13:07.729 --> 00:13:11.465
Okay, but first, let's continue our
story and then we'll come back to that.

244
00:13:11.465 --> 00:13:13.519
We'll see if there's even
a smoother experience.

245
00:13:13.519 --> 00:13:17.169
Okay, so we got our product list.

246
00:13:17.169 --> 00:13:21.488
Looking good, feeling great, how are you?

247
00:13:24.201 --> 00:13:26.216
[LAUGH] You didn't see nothing.

248
00:13:26.216 --> 00:13:28.683
All right, so we got that,
now we just gotta update the details.

249
00:13:28.683 --> 00:13:31.148
Y'all know how to do that already, right?

250
00:13:31.148 --> 00:13:32.957
Y'all know how to update the details.

251
00:13:32.957 --> 00:13:34.703
So go ahead and knock that out.

252
00:13:36.672 --> 00:13:42.950
So we'll say, we want this.,
and we have product list.

253
00:13:48.878 --> 00:13:53.980
Dot, whatever thing we want,
that's what, title.

254
00:13:53.980 --> 00:13:56.819
Okay, we're gonna put that in our curlies.

255
00:13:56.819 --> 00:13:59.431
Oops, that's too many, super curly.

256
00:14:03.485 --> 00:14:09.949
Okay, we got this.producList.,
what's the next one, price, I think.

257
00:14:09.949 --> 00:14:11.196
I don't remember what
the other property is.

258
00:14:11.196 --> 00:14:13.891
&gt;&gt; [INAUDIBLE] Your index into that array?

259
00:14:13.891 --> 00:14:19.581
&gt;&gt; You jumped ahead of me, cuz I told
you the I knew it, I saw that earlier.

260
00:14:19.581 --> 00:14:20.768
&gt;&gt; These are red squiggles.

261
00:14:20.768 --> 00:14:25.322
&gt;&gt; I know where I was gonna,
well, so I'll get to that now.

262
00:14:25.322 --> 00:14:27.378
I was hoping someone would call that out,

263
00:14:27.378 --> 00:14:29.857
that's actually exactly
what I wanted you to do.

264
00:14:29.857 --> 00:14:34.290
So that way we could talk about the
difference of what's supposed to happen.

265
00:14:34.290 --> 00:14:37.890
Because right now productList is an array,
but

266
00:14:37.890 --> 00:14:41.496
we want an individual
element from that array.

267
00:14:41.496 --> 00:14:44.158
What do we do here?

268
00:14:44.158 --> 00:14:47.137
We gotta use that, the indices.

269
00:14:47.137 --> 00:14:49.634
It's still an array even
though we're in Angular,

270
00:14:49.634 --> 00:14:53.816
because sometimes what can happen is that
when you start working within a framework,

271
00:14:53.816 --> 00:14:57.650
you kind of lose the distinction between
what's specific to the framework and

272
00:14:57.650 --> 00:15:00.404
what's just programming,
what's just JavaScript.

273
00:15:00.404 --> 00:15:04.107
This is just JavaScript stuff right now,
or TypeScript in this case.

274
00:15:04.107 --> 00:15:08.711
So your same logic which is totally right,
we gotta get that ID but

275
00:15:08.711 --> 00:15:10.228
we can do productId.

276
00:15:14.444 --> 00:15:17.827
Okay, we get productId,
which is super red.

277
00:15:17.827 --> 00:15:20.762
ProductId, and then productId.

278
00:15:20.762 --> 00:15:28.037
Okay, we save this,
just understanding of what's happening.

279
00:15:28.037 --> 00:15:30.618
Let's display.

280
00:15:30.618 --> 00:15:34.837
Before we get to displaying anything else,
can we display productId?

281
00:15:34.837 --> 00:15:37.381
Because what if the ID is just
a value that we don't know about or

282
00:15:37.381 --> 00:15:38.782
something we aren't expecting?

283
00:15:40.992 --> 00:15:42.451
Okay, -1 is the first one.

284
00:15:42.451 --> 00:15:46.673
I think that's what our problem is cuz I
said it's a -1, but I thought this input

285
00:15:46.673 --> 00:15:50.483
was supposed to happen before that,
which makes me feel some type of way.

286
00:15:50.483 --> 00:15:53.720
So if I do 0 here, it fixes it.

287
00:15:53.720 --> 00:15:59.622
Okay, that's Python that you can do -1 and
it wraps around.

288
00:15:59.622 --> 00:16:00.772
This is annoying to me.

289
00:16:00.772 --> 00:16:02.502
&gt;&gt; Mine's working with -1.

290
00:16:02.502 --> 00:16:05.310
&gt;&gt; It is, mine is not, mine is like, no.

291
00:16:05.310 --> 00:16:06.694
That's okay, it is fine,

292
00:16:06.694 --> 00:16:10.681
but at least you know if you had that
weird issue without displaying anything.

293
00:16:10.681 --> 00:16:12.272
Here's what I want to check out.

294
00:16:12.272 --> 00:16:14.627
So here's what I want to experiment with,
with angular.

295
00:16:14.627 --> 00:16:23.050
Can I do @Input of
ID without the setter?

296
00:16:28.142 --> 00:16:30.232
&gt;&gt; Did you say we had to add something,

297
00:16:30.232 --> 00:16:33.797
an additional component in order
to do these input setters?

298
00:16:33.797 --> 00:16:37.070
Did we do that, or
am I thinking of the slides?

299
00:16:37.070 --> 00:16:40.165
It did add something else in addition
to the routing to be able to pass this

300
00:16:40.165 --> 00:16:40.739
parameter.

301
00:16:40.739 --> 00:16:43.950
&gt;&gt; That's why yours is working and mine
isn't, cuz you followed the directions.

302
00:16:43.950 --> 00:16:45.542
You're totally right.

303
00:16:45.542 --> 00:16:51.062
Okay, let me explain my thinking
behind why I was so perplexed.

304
00:16:51.062 --> 00:16:55.193
So I said something under my breath but
I'll explain it to you outwardly.

305
00:16:55.193 --> 00:16:59.952
Okay, there's an order of operations
in angular called the life

306
00:16:59.952 --> 00:17:02.209
cycle of a component, right?

307
00:17:02.209 --> 00:17:02.976
There's an order.

308
00:17:02.976 --> 00:17:06.997
Same thing like React has life cycles,
we have life cycles.

309
00:17:06.997 --> 00:17:11.724
Your inputs are bound before
the template is rendered.

310
00:17:11.724 --> 00:17:15.994
The -1 shouldn't matter
because I should get

311
00:17:15.994 --> 00:17:20.272
the value before it
renders through our input.

312
00:17:20.272 --> 00:17:23.517
You see, I'm saying I thought the input
should be done first but I was like,

313
00:17:23.517 --> 00:17:24.492
why is it not working?

314
00:17:24.492 --> 00:17:31.937
That's why it's not working because
I skipped a step of providing.

315
00:17:31.937 --> 00:17:36.847
Wow, good catch, look at you go.

316
00:17:36.847 --> 00:17:40.301
You know what, let me tell you something,
I like people like you,

317
00:17:40.301 --> 00:17:42.719
bringing in the value, okay, no seriously.

318
00:17:42.719 --> 00:17:46.754
Cuz we have to provide, is called provide

319
00:17:46.754 --> 00:17:51.494
components something,
input binding inputs.

320
00:17:51.494 --> 00:17:53.337
[INAUDIBLE]
&gt;&gt; Something, yeah,

321
00:17:53.337 --> 00:17:56.896
I knew there's something like that,
yeah, withComponentInputBinding.

322
00:17:56.896 --> 00:18:00.552
Yeah, so
provide router withComponentInputBinding.

323
00:18:00.552 --> 00:18:02.676
Yeah, so
it's supposed to read like that, right?

324
00:18:02.676 --> 00:18:06.538
So the sentence is supposed to read,
provide the router, these routes,

325
00:18:06.538 --> 00:18:08.236
withComponentInputBinding.

326
00:18:08.236 --> 00:18:10.095
Yeah, there we go,
that's what I was missing.

327
00:18:10.095 --> 00:18:15.334
Good catch, I like that energy cuz now
it should all be what we're hoping for.

328
00:18:15.334 --> 00:18:17.155
Yeah, you see?

329
00:18:17.155 --> 00:18:22.058
Yes, everything is, we're into money.

330
00:18:22.058 --> 00:18:25.369
We're in the money,
way to cook together team.

331
00:18:25.369 --> 00:18:27.628
Look at that, withComponentInputBinding.

332
00:18:27.628 --> 00:18:32.067
Just to reiterate what happened
here is that without this,

333
00:18:32.067 --> 00:18:37.321
it wasn't binding our value for
the input, so it wasn't setting it.

334
00:18:37.321 --> 00:18:42.125
So it was using -1 and then it was just
trying to access an array with -1.

335
00:18:42.125 --> 00:18:46.350
But guess what happens with the arrays?

336
00:18:48.277 --> 00:18:54.925
So I'm gonna let this list = [1,
2, 3], right?

337
00:18:54.925 --> 00:18:56.235
So this is just a list.

338
00:18:56.235 --> 00:18:59.569
So if I do a list, okay,
list.length, right?

339
00:18:59.569 --> 00:19:02.419
Everything, length.

340
00:19:02.419 --> 00:19:08.434
Okay, so we agreed it's just a list, that
there's nothing special about this list.

341
00:19:08.434 --> 00:19:10.044
Neither was there about our product list.

342
00:19:10.044 --> 00:19:14.982
So if you do this and -1,
you see what it gives you?

343
00:19:14.982 --> 00:19:18.832
Undefined, so
that's how we were getting that undefined.

344
00:19:18.832 --> 00:19:22.814
But I feel like there's a proposal
right now for JavaScript,

345
00:19:22.814 --> 00:19:28.110
that they're gonna change this, that -1
will be the end of the list by default.

346
00:19:28.110 --> 00:19:30.372
Cuz in Python,
I think you can go negative index.

347
00:19:30.372 --> 00:19:31.809
I actually know you can in Python.

348
00:19:31.809 --> 00:19:35.745
Ooh, router-recap, that was a big one.

349
00:19:35.745 --> 00:19:38.555
Lot of little moving parts,
easy to get tripped up.

350
00:19:38.555 --> 00:19:40.616
&gt;&gt; We finally got it good
in the chat [LAUGH].

351
00:19:40.616 --> 00:19:43.097
&gt;&gt; All right,
that's what I'm talking about.

352
00:19:43.097 --> 00:19:44.979
Since you're doing good,
I got something for you.

353
00:19:44.979 --> 00:19:48.227
I've been saving it, hold on. It's like bow,
that's for you, okay.

