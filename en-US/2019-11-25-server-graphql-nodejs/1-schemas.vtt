WEBVTT

1
00:00:00.444 --> 00:00:02.110
&gt;&gt; Scott Moss: All right, so
let's hop right into the Schemas and

2
00:00:02.110 --> 00:00:04.380
then we'll start writing some code.

3
00:00:04.380 --> 00:00:07.874
So the first thing we wanna do is
when we create a GraphQL server,

4
00:00:07.874 --> 00:00:09.503
is we need to create a schema.

5
00:00:09.503 --> 00:00:11.098
So I talked about it a little bit but

6
00:00:11.098 --> 00:00:14.950
a schema you have to create what's called
a type definitions and you go from there.

7
00:00:14.950 --> 00:00:19.741
And the way we do that is we use something
called a Schema Definition Language, or

8
00:00:19.741 --> 00:00:20.662
SDL for short.

9
00:00:20.662 --> 00:00:24.096
It'a basically, I think when people
think of GraphQL, they think of this.

10
00:00:24.096 --> 00:00:26.644
When they say I'm using GraphQL,
I'm writing GraphQL,

11
00:00:26.644 --> 00:00:29.201
what they're are actually
thinking about the language.

12
00:00:29.201 --> 00:00:33.902
So the actual syntax that you use to
write GraphQL, this is what it is.

13
00:00:33.902 --> 00:00:36.615
It's called
the Schema Definition Language,

14
00:00:36.615 --> 00:00:39.409
so we're gonna be using
that to create a schema.

15
00:00:39.409 --> 00:00:44.230
You can also programmatically create a
schema using like the language constructs.

16
00:00:44.230 --> 00:00:48.881
So recently JavaScript,
there's a GraphQL JavaScript library that

17
00:00:48.881 --> 00:00:53.470
allows you to actually use objects and
functions to create schemas.

18
00:00:53.470 --> 00:00:55.849
That's how it used to be
when GraphQL first came out.

19
00:00:55.849 --> 00:00:59.279
The community kinda moved away from that
and they use Schema Definition Language,

20
00:00:59.279 --> 00:01:00.463
which is more declarative.

21
00:01:00.463 --> 00:01:03.778
But if you're going to be doing
dynamic GraphQL queries or

22
00:01:03.778 --> 00:01:07.106
GraphQL Schemas on the fly,
and really advanced things.

23
00:01:07.106 --> 00:01:10.520
You're probably gonna know how to do the
programmatic approach of using JavaScript

24
00:01:10.520 --> 00:01:12.068
or Ruby or whatever your language is.

25
00:01:12.068 --> 00:01:16.610
To create a schema versus concatenating
strings together, which is really hard.

26
00:01:16.610 --> 00:01:21.620
I've done both, and concatenating strings
together is way worse than just using

27
00:01:21.620 --> 00:01:23.780
functions, so that's that.

28
00:01:25.590 --> 00:01:27.205
So now what we're gonna do is,

29
00:01:27.205 --> 00:01:31.071
we're gonna use the Schema Definition
Language to create some Schemas.

30
00:01:31.071 --> 00:01:32.670
So I just wanna talk about
some of the base parts,

31
00:01:32.670 --> 00:01:33.812
and then we'll hop right into it.

32
00:01:33.812 --> 00:01:37.368
So some of the basic parts of a Schema,
we have Types, and

33
00:01:37.368 --> 00:01:40.640
Types are constructs defining
a shape with fields.

34
00:01:40.640 --> 00:01:45.020
So again, these are very much the same
thing as types as you would have in like

35
00:01:45.020 --> 00:01:46.468
a type-safe language.

36
00:01:46.468 --> 00:01:51.130
Fields are literally keys on those
Types that describe what type of

37
00:01:51.130 --> 00:01:52.637
value they can have.

38
00:01:52.637 --> 00:01:55.898
Scalars are a primitive type of
value built into GraphQL, and

39
00:01:55.898 --> 00:02:00.110
there's different types of scalars and
we're gonna go over those.

40
00:02:00.110 --> 00:02:01.720
And than you have Queries and
Mutations and

41
00:02:01.720 --> 00:02:05.550
those are specific types that
GraphQL expects you to create.

42
00:02:05.550 --> 00:02:08.266
Queries allow you to get data,
Mutation allow you to create data.

43
00:02:08.266 --> 00:02:12.330
And those are basically the basic
parts of creating a schema.

