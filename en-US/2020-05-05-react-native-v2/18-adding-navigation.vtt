WEBVTT

1
00:00:00.150 --> 00:00:04.155
Now let's actually add some
navigation into our app.

2
00:00:05.536 --> 00:00:08.449
There are two main types of
navigation on your phone,

3
00:00:08.449 --> 00:00:11.720
there's a bottom navigation and
a stack navigation.

4
00:00:11.720 --> 00:00:14.060
You've definitely seen
both of these before, but

5
00:00:14.060 --> 00:00:16.870
you probably like not been
consciously thinking about it.

6
00:00:16.870 --> 00:00:23.717
So if you open an app,
I'm gonna go to Headspace.

7
00:00:23.717 --> 00:00:27.609
But you can open another app like Twitter,
Instagram, any app, but

8
00:00:27.609 --> 00:00:30.380
I thought Headspace is a nice one.

9
00:00:30.380 --> 00:00:36.910
I like the UI [LAUGH] so notice at
the bottom, this is the bottom navigation.

10
00:00:36.910 --> 00:00:38.350
And most apps have this.

11
00:00:38.350 --> 00:00:42.610
And one thing to note is that as I
navigate between these screens and

12
00:00:42.610 --> 00:00:44.470
the page loads immediately.

13
00:00:45.490 --> 00:00:49.312
This means that actually all the bottom
navigation route pages that you have gets

14
00:00:49.312 --> 00:00:51.573
rendered as soon as you
open your application.

15
00:00:51.573 --> 00:00:56.164
So if you have any, like crazy
data fetching that you're doing,

16
00:00:56.164 --> 00:01:00.756
be mindful of the fact that everything
that gets launched when you

17
00:01:00.756 --> 00:01:04.530
launch the route page,
get launched straight away.

18
00:01:07.140 --> 00:01:13.372
Navigation in site pages is in stacks.

19
00:01:13.372 --> 00:01:16.841
Okay, so this open a full screen one but
let's us look at this one, okay.

20
00:01:16.841 --> 00:01:21.204
So here, okay,
notice that I'm tapping into a page, and

21
00:01:21.204 --> 00:01:26.300
it's opening a new page and
it's giving me this back button.

22
00:01:26.300 --> 00:01:30.540
But if you look at the bottom,
I'm still in the sleep menu.

23
00:01:30.540 --> 00:01:34.370
So it's adding another page
on top of my stack, but

24
00:01:34.370 --> 00:01:37.180
I'm not actually going to
a whole different page.

25
00:01:37.180 --> 00:01:43.130
And another thing to notice is if I know
being in this second page on the stack,

26
00:01:43.130 --> 00:01:47.790
if I go to home, and then back to here,
notice I didn't reset the stack.

27
00:01:47.790 --> 00:01:50.190
I'm still where I left off.

28
00:01:50.190 --> 00:01:54.243
So those are just two things to kind
of notice about native navigation.

29
00:01:54.243 --> 00:01:57.771
Currently, we won't be adding boat
navigation because we don't need it.

30
00:01:57.771 --> 00:02:00.290
We are just going to
have a stack navigator.

31
00:02:00.290 --> 00:02:05.027
So what we wanna do is we wanna have a
page that has a list of color schemes that

32
00:02:05.027 --> 00:02:06.020
you can tap on.

33
00:02:06.020 --> 00:02:12.282
When you tap on them, they will open
a page that lists that color scheme.

34
00:02:12.282 --> 00:02:16.103
All right, so these instructions
are both Export and non-Export.

35
00:02:16.103 --> 00:02:18.780
So let's install the stack navigator.

36
00:02:20.260 --> 00:02:21.900
React Navigation has pretty much,

37
00:02:21.900 --> 00:02:25.750
they've broken all the different
navigators into small libraries.

38
00:02:25.750 --> 00:02:27.374
So you just installed
the bits that you need.

39
00:02:35.152 --> 00:02:39.230
Now, I usually have a screens
directory where I keep all my screens.

40
00:02:39.230 --> 00:02:41.100
So I'm going to do this here.

41
00:02:41.100 --> 00:02:46.317
So I already got components,
and now let's just create

42
00:02:46.317 --> 00:02:53.810
another folder called screens, And
this is where we'll keep all our screens.

43
00:02:53.810 --> 00:02:56.110
Now, we want to create two screens.

44
00:02:56.110 --> 00:02:59.290
So we have a home screen and
a color palette screen.

45
00:02:59.290 --> 00:03:00.420
So let's just go ahead and to that.

46
00:03:01.498 --> 00:03:06.133
Home.js &gt; c=ColorPalette.js,

47
00:03:06.133 --> 00:03:11.214
and for the home screen, let's just add

48
00:03:11.214 --> 00:03:16.004
our default Hello world thing again.

49
00:03:16.004 --> 00:03:22.923
import React, Import a View and

50
00:03:22.923 --> 00:03:27.225
a Text of you and
it Text from react-native.

51
00:03:30.351 --> 00:03:36.256
We create a constant called Home, And

52
00:03:36.256 --> 00:03:40.061
we have it return a View with some Text.

53
00:03:51.191 --> 00:03:55.846
And finally we export the Home
at the end of the file.

54
00:04:03.262 --> 00:04:07.549
So for the color palettes, we actually
already know what we wanna render there.

55
00:04:07.549 --> 00:04:11.530
So we want to render pretty
much this entire page.

56
00:04:11.530 --> 00:04:18.355
So if we go to App.js and we copy
the code that renders our color palette.

57
00:04:19.355 --> 00:04:24.346
So we'll have all of this,

58
00:04:24.346 --> 00:04:28.469
let's gonna do import

59
00:04:28.469 --> 00:04:33.464
React from react, const.

60
00:04:41.237 --> 00:04:43.683
So this export defaulted.

61
00:04:54.790 --> 00:04:58.233
And we'll also need to
add all these imports.

62
00:05:11.785 --> 00:05:14.641
And we'll need to add the colorBox input.

63
00:05:14.641 --> 00:05:17.485
Notice that we're in
a different directory now, so

64
00:05:17.485 --> 00:05:21.181
we'll have to navigate up a directory
in order to go to components.

65
00:05:31.736 --> 00:05:36.089
And finally, I think we can just
copy all the styles as well.

66
00:05:40.742 --> 00:05:45.365
Do the same,
don't forget to import the StyleSheet.

67
00:05:54.208 --> 00:05:54.952
All right,

68
00:05:54.952 --> 00:05:59.573
so now you should have a Home component
that just renders our Hello world.

69
00:05:59.573 --> 00:06:03.412
And the colour palette that
should just has all the code

70
00:06:03.412 --> 00:06:07.270
in from our App.js that
rendered the color palettes.

71
00:06:07.270 --> 00:06:10.541
Now, what we wanna do is
actually while all of this up.

72
00:06:10.541 --> 00:06:14.659
So the first thing we need to do
is we're going to go to App.js and

73
00:06:14.659 --> 00:06:18.420
remove all the code that we
copied away to color palettes.

74
00:06:20.060 --> 00:06:25.455
So we don't need the styles,
we don't need this.

75
00:06:25.455 --> 00:06:29.721
We don't need to colors,
and don't need any of this

76
00:06:32.194 --> 00:06:33.990
So we just have the navigation container.

77
00:06:35.790 --> 00:06:42.802
Next up, let's import both the home and
the color palette screens.

78
00:06:47.142 --> 00:06:52.314
Now, we wanna import
the createStackNavigator

79
00:06:52.314 --> 00:06:56.103
from react-navigation/stack.

80
00:07:00.224 --> 00:07:01.804
And you wanna create a stack.

81
00:07:04.145 --> 00:07:08.972
And this basically creates
kind of like a sandbox of

82
00:07:08.972 --> 00:07:13.700
screens that you can
navigate between in a stack.

83
00:07:16.670 --> 00:07:19.880
And now we're going to use it
inside a navigation container.

84
00:07:19.880 --> 00:07:26.174
So we have a Stack., what's it called?

85
00:07:26.174 --> 00:07:27.588
Navigator.

86
00:07:31.194 --> 00:07:35.710
All right, so this is actually
defining the stack navigator.

87
00:07:35.710 --> 00:07:42.227
And then, we're defining all
the screens in the stack.

88
00:07:42.227 --> 00:07:48.211
So we do Stack.Screen, And
we give it a name and a component.

89
00:07:48.211 --> 00:07:53.962
So name="Home" component.

90
00:07:59.513 --> 00:08:01.446
Let's add another one for
the color palette.

91
00:08:07.841 --> 00:08:12.067
Cool, so now we got a NavigationContainer,
we have a Stack.Navigator and

92
00:08:12.067 --> 00:08:13.590
we have two screens.

93
00:08:13.590 --> 00:08:18.750
Notice that the screen that you add to
the top will be visible by default,

94
00:08:18.750 --> 00:08:21.380
so that will be the root of the stack.

95
00:08:23.250 --> 00:08:24.143
If I made this to top.

96
00:08:28.621 --> 00:08:29.950
Okay, maybe not.

97
00:08:32.170 --> 00:08:34.440
Cool, so now we got a Home and
a ColorPalette and

98
00:08:34.440 --> 00:08:36.140
we'd like to navigate between them.

99
00:08:36.140 --> 00:08:40.859
So what I wanna do is I want this to
say solarized, and if I press on this,

100
00:08:40.859 --> 00:08:42.921
I want that new page to appear.

101
00:08:46.432 --> 00:08:48.923
So let's go to Home.

102
00:08:48.923 --> 00:08:53.811
And in order to add
interactivity into applications,

103
00:08:53.811 --> 00:08:58.580
we need some way for
them to register user taps.

104
00:08:58.580 --> 00:09:02.470
Now, on the web you would have
a button that has an on click, but

105
00:09:02.470 --> 00:09:04.910
on the phone we don't click, we press.

106
00:09:04.910 --> 00:09:08.350
So we have a selection
of touchable components.

107
00:09:09.430 --> 00:09:10.320
I got a list of them here.

108
00:09:10.320 --> 00:09:12.827
There's TouchableOpacity,
TouchableHighlight,

109
00:09:12.827 --> 00:09:15.770
TouchableWithoutFeedback, and
TouchableNativeFeedback.

110
00:09:17.510 --> 00:09:19.872
Most of the time,
you'll be using TouchableOpacity and

111
00:09:19.872 --> 00:09:21.588
TouchableWithoutFeedback.

112
00:09:21.588 --> 00:09:26.515
Basically, TouchableOpacity will
create some opacity while the press is

113
00:09:26.515 --> 00:09:30.043
ongoing in the component
that it's wrapped around.

114
00:09:30.043 --> 00:09:33.995
And TouchableWithoutFeedback has no visual
feedback, but it will register the tap.

115
00:09:36.071 --> 00:09:38.525
So let's go ahead and
use a TouchableOpacity.

116
00:09:39.980 --> 00:09:42.605
The way that the touchable
elements work is that

117
00:09:42.605 --> 00:09:46.795
you basically wrap them around the area
that you want to make touchable.

118
00:09:46.795 --> 00:09:52.123
So let's import this, And

119
00:09:52.123 --> 00:09:55.301
let's just wrap it around the text.

120
00:10:00.414 --> 00:10:06.852
Now on the web, you would have an onClick
and on Native you have an onPress.

121
00:10:09.570 --> 00:10:12.460
And onPress takes a function

122
00:10:12.460 --> 00:10:15.190
of something you wanna do when
the user presses on this.

123
00:10:16.330 --> 00:10:18.942
Now, how do we navigate between screens?

124
00:10:18.942 --> 00:10:24.203
Well, I think you should
definitely get used

125
00:10:24.203 --> 00:10:30.445
to looking at documentation
because I do a lot,

126
00:10:30.445 --> 00:10:37.476
So if we just spec navigation doc's
there's a light mode as well,

127
00:10:37.476 --> 00:10:44.990
if that's more to your liking and, Well,
basically, we use the navigation prop.

128
00:10:44.990 --> 00:10:52.370
So any screen that is inside this
stack navigator that's defined here.

129
00:10:52.370 --> 00:10:55.880
So any screen that you
pass into as a component

130
00:10:55.880 --> 00:10:59.740
also gets this special prop
Boston called navigation.

131
00:10:59.740 --> 00:11:02.210
And navigation has a bunch of
things that unless you do,

132
00:11:02.210 --> 00:11:03.800
you can navigate between screens.

133
00:11:03.800 --> 00:11:06.242
You can reset the navigator states.

134
00:11:06.242 --> 00:11:09.110
You can go back, you can set prompts, etc.

135
00:11:09.110 --> 00:11:11.471
So we're going to use it to
navigate to different screen.

136
00:11:14.367 --> 00:11:18.300
So Home and
this gets passed into navigation.

137
00:11:20.712 --> 00:11:26.040
And, so all we can do,
is here in the onPress,

138
00:11:26.040 --> 00:11:30.012
we can do navigation.navigate.

139
00:11:30.012 --> 00:11:34.178
And then we just pass in the name of
the screen you want to navigate to.

140
00:11:38.769 --> 00:11:46.260
Now, if I press on this,
I've forgot to copy the colors.

141
00:11:46.260 --> 00:11:49.506
So if you're following on with me,

142
00:11:49.506 --> 00:11:54.269
I like I forgot to copy over
the colors property, and

143
00:11:54.269 --> 00:11:58.181
I forgot to import text from React Native.

144
00:11:58.181 --> 00:12:00.545
By the way, this works, that's great.

145
00:12:00.545 --> 00:12:02.521
I'm gonna rename this to Solarized.

146
00:12:06.936 --> 00:12:09.595
Yeah, we've got the basics.

147
00:12:09.595 --> 00:12:15.100
So one of the things to notice is that in
React navigation the default color for

148
00:12:15.100 --> 00:12:18.520
the background is actually not white,
it's kind of this grayish color.

149
00:12:18.520 --> 00:12:22.630
So I usually end up making the color

150
00:12:24.270 --> 00:12:29.304
white, so if I do container

151
00:12:29.304 --> 00:12:37.810
backgroundColor : ' white'.

152
00:12:37.810 --> 00:12:42.070
And we also don't need
the SafeAreaView anymore because,

153
00:12:42.070 --> 00:12:46.171
as you can see,
because we have this header bar already.

154
00:12:46.171 --> 00:12:52.153
And React navigation kind of handles the
safe area for us, which is kind of handy.

155
00:12:53.201 --> 00:12:55.130
And so
we're going to use this [INAUDIBLE].

156
00:12:57.010 --> 00:12:57.510
Cool.

157
00:12:59.410 --> 00:13:07.070
So the thing to note is we use the actual
name of the screen to navigate to it.

158
00:13:07.070 --> 00:13:08.793
So the screen names need to be unique.

159
00:13:08.793 --> 00:13:12.490
So if you look at App.js, we're actually
using this Home or ColorPalette.

160
00:13:12.490 --> 00:13:13.954
So if we rename this name,

161
00:13:13.954 --> 00:13:17.761
we'll have to also rename all
the places where we used to navigate.

162
00:13:27.293 --> 00:13:28.799
Cool.

163
00:13:28.799 --> 00:13:31.312
Well, now we got navigation.

164
00:13:31.312 --> 00:13:36.080
&gt;&gt; What's the difference between
the navigator versus the push method?

165
00:13:42.892 --> 00:13:48.058
&gt;&gt; There push adds the screen to the top
of the stack whereas, I think navigate

166
00:13:48.058 --> 00:13:53.238
is if you use the bottom nav, you could
navigate to a different nav as well.

167
00:13:53.238 --> 00:13:58.864
Cuz I think push would automatically just
add it to the top of the current stack.

168
00:13:58.864 --> 00:14:03.370
Whereas navigate you could use to also
navigate between the bottom navs.

169
00:14:03.370 --> 00:14:08.762
So we don't have a bottom nav at
the moment, so we don't have difference.

170
00:14:08.762 --> 00:14:13.040
&gt;&gt; So that header barred kind of
just came with it magically, right?

171
00:14:13.040 --> 00:14:14.130
&gt;&gt; Yeah.
&gt;&gt; Do you have control

172
00:14:14.130 --> 00:14:15.075
over the way that looks?

173
00:14:15.075 --> 00:14:18.174
&gt;&gt; Yes, so
you have complete control over it.

174
00:14:18.174 --> 00:14:24.600
Yes, okay, so you can pass in
options into the stack screen.

175
00:14:24.600 --> 00:14:31.748
And you can also set this dynamically,
By using the options again,

176
00:14:31.748 --> 00:14:35.584
but you can add basically parameters to
the route and you can use these parameters

177
00:14:35.584 --> 00:14:38.756
data dynamically, which we will
going to do in the next exercise.

