WEBVTT

1
00:00:00.390 --> 00:00:03.750
I know you're really keen to start coding,
there's actually one more

2
00:00:03.750 --> 00:00:07.310
thing that I think we should do,
and that is adding a linter.

3
00:00:07.310 --> 00:00:10.160
If you're using plain React Native,
it actually comes with with

4
00:00:10.160 --> 00:00:15.010
a linter pre installed, but
if you're using expo It doesn't.

5
00:00:15.010 --> 00:00:18.210
And trust me adding a linter
improves your experience a lot.

6
00:00:18.210 --> 00:00:22.790
And if you're using an editor, you can
turn on auto fixing so that your code will

7
00:00:22.790 --> 00:00:25.564
be formatted the same way as mine and
it might be easier to follow.

8
00:00:25.564 --> 00:00:31.040
I 100% always use a linter

9
00:00:31.040 --> 00:00:35.640
even on my personal project, even if it's
an API, that's just a single file API,

10
00:00:35.640 --> 00:00:38.700
like the first thing I do is I
install linter, I install eslint, and

11
00:00:38.700 --> 00:00:42.680
I install auto fixing, just because like,
I don't want to think about them.

12
00:00:42.680 --> 00:00:45.370
And I just really strongly
recommend you do the same.

13
00:00:47.020 --> 00:00:50.350
So there's some instructions here that you
can copy depending on whether you're using

14
00:00:51.830 --> 00:00:54.050
yarn or whether using NPM.

15
00:00:56.090 --> 00:01:03.884
So let's go So

16
00:01:03.884 --> 00:01:06.790
here we're installing eslint.

17
00:01:06.790 --> 00:01:10.210
And the React Native
community eslint config, and

18
00:01:10.210 --> 00:01:13.270
we're saving them as
development dependencies.

19
00:01:13.270 --> 00:01:17.700
And next thing we do is we
add the configuration files.

20
00:01:18.850 --> 00:01:23.035
That actually I'm gonna, so for the React
Native I actually have it pre-installed.

21
00:01:23.035 --> 00:01:27.215
So I'm gonna install this on Expo instead,
still have the same experience.

22
00:01:28.765 --> 00:01:32.819
So I can just go ahead and
copy this whole thing, all right?

23
00:01:32.819 --> 00:01:37.146
So this is the hexcode project,
so in a root level,

24
00:01:37.146 --> 00:01:41.712
I'm just gonna create a new
file called eslint.rc.

25
00:01:41.712 --> 00:01:48.523
Rc stands for run commands I recently
found out, dot js, paste this in.

26
00:01:53.677 --> 00:01:56.629
This basically let's linter know which
configuration package we wanna use.

27
00:01:57.690 --> 00:02:01.410
And then finally, we create a prettier RC.

28
00:02:01.410 --> 00:02:04.890
So this configuration package already
has prettier pre installed, so

29
00:02:04.890 --> 00:02:08.580
we don't have to install it, but
we do have to add the configuration.

30
00:02:08.580 --> 00:02:12.132
So dot prettier RC.JS, and

31
00:02:12.132 --> 00:02:16.720
these are the configurations I use.

32
00:02:18.190 --> 00:02:21.060
And you can change them if
you have strong opinions.

33
00:02:22.170 --> 00:02:27.545
But basically I like having spacing around
your brackets, so this is like import

34
00:02:30.690 --> 00:02:35.187
Right, so without this,
it would not add spacing, but

35
00:02:35.187 --> 00:02:38.770
I prefer having spacing, like this.

36
00:02:38.770 --> 00:02:42.170
And the other thing is having
single quotes versus double quotes.

37
00:02:42.170 --> 00:02:45.240
And the last thing is basically,
if you have an array of

38
00:02:45.240 --> 00:02:50.220
items, we'll add a trailing
comma at the end of the item.

39
00:02:50.220 --> 00:02:55.030
So this is actually quite handy because
if you don't have a trailing comma, and

40
00:02:55.030 --> 00:02:58.990
then you just you move items around
like this, you'll get an error.

41
00:02:58.990 --> 00:03:02.225
Whereas if you have a trailing comma,
you don't get the error is also handy and

42
00:03:02.225 --> 00:03:07.205
get this because if you change this line,
it doesn't show up as two lines changed.

43
00:03:10.095 --> 00:03:14.640
Cool, I noticed that I added single
quotes and now doesn't single quotes.

44
00:03:14.640 --> 00:03:15.140
Yay.

45
00:03:17.389 --> 00:03:21.810
And finally,
you can add eslint to the run script.

46
00:03:21.810 --> 00:03:26.160
So if you open your package.json,
it's under scripts, again to create

47
00:03:27.330 --> 00:03:31.920
a new line and basically,
this says that if you run NPM,

48
00:03:31.920 --> 00:03:35.450
run lint or yarn lint,
you will lint, the existing code.

49
00:03:36.460 --> 00:03:38.050
So you can try this out in your terminal.

50
00:03:43.380 --> 00:03:44.680
I know linter years which is great.

51
00:03:45.788 --> 00:03:51.100
And then lastly,
you can add it to your code editor.

52
00:03:51.100 --> 00:03:54.340
So I recommend you do it because I do,
it's great.

53
00:03:54.340 --> 00:04:02.920
If you're using VS code,
it's code preferences, extensions.

54
00:04:02.920 --> 00:04:07.260
And if you type in eslint,
you can see I already have it installed.

55
00:04:07.260 --> 00:04:10.702
It might trigger you to
restart your editor as well.

56
00:04:15.419 --> 00:04:20.115
As a result if you go to a file and for
example, remove this bracket spacing and

57
00:04:20.115 --> 00:04:21.860
press save it will be added.

58
00:04:23.300 --> 00:04:27.900
I have format on save turned on as well.

59
00:04:27.900 --> 00:04:29.690
So I think this is format on save.

60
00:04:31.300 --> 00:04:33.350
Yeah, so I had this turned
on because I find it handy.

61
00:04:33.350 --> 00:04:36.560
So if you want to much more
configuration you can do this.

62
00:04:39.210 --> 00:04:42.835
I've added some links here as well
on what you would expect to find.

63
00:04:42.835 --> 00:04:47.550
So, if you are an expert,
this is the depth of what we just added.

