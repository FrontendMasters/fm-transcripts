WEBVTT

1
00:00:00.230 --> 00:00:04.370
Now what we want to do is
navigate back to our home screen.

2
00:00:05.380 --> 00:00:12.670
So the way that you can do it is, so
we have navigation, remember we have

3
00:00:12.670 --> 00:00:17.110
access to a navigation prop here because
a modal is our top level component.

4
00:00:19.060 --> 00:00:25.475
And we could just do navigation.goBack.

5
00:00:31.004 --> 00:00:32.103
We need else.

6
00:00:34.991 --> 00:00:38.349
So there and
that will actually close the modal.

7
00:00:42.182 --> 00:00:46.344
But this is not what we want because we
want to actually interact with the screen

8
00:00:46.344 --> 00:00:49.410
before and
tell it what the user has inputted.

9
00:00:49.410 --> 00:00:53.581
So we can't use goBack,
we want to use navigation.navigate,

10
00:00:53.581 --> 00:00:57.608
because here we can actually
pass props to the screen, yeah.

11
00:01:00.452 --> 00:01:03.220
So this name of the screen,
I think was Home.

12
00:01:04.720 --> 00:01:06.130
So that's how we get to Home.

13
00:01:06.130 --> 00:01:07.474
Let's check that this works.

14
00:01:12.086 --> 00:01:13.940
Cool, okay, so this works.

15
00:01:13.940 --> 00:01:17.530
And now because we're navigating
back to Home, we can actually add

16
00:01:17.530 --> 00:01:21.340
another argument here, which will be
our palette that we just created.

17
00:01:22.480 --> 00:01:30.214
So let's do newColorPalette.

18
00:01:30.214 --> 00:01:33.168
And I'm actually just gonna
create a constant here.

19
00:01:35.722 --> 00:01:41.714
And this will just have the name,
because we're going to have colors here.

20
00:01:41.714 --> 00:01:43.500
Let's just do empty colors for now.

21
00:01:46.968 --> 00:01:49.969
All right, so
now this is being passed into Home.

22
00:01:53.052 --> 00:01:58.386
And where we access it,

23
00:01:58.386 --> 00:02:04.796
I think is in the route prop.

24
00:02:04.796 --> 00:02:10.009
And we can do newColorPalette

25
00:02:10.009 --> 00:02:17.939
will be route.params.newColorPalette.

26
00:02:17.939 --> 00:02:20.470
Make sure that that's what we called it,
yeah.

27
00:02:21.800 --> 00:02:26.402
And I already know that this is going
to cause an error and that is because

28
00:02:26.402 --> 00:02:31.330
the route.params are actually
undefined if no params are passed in.

29
00:02:31.330 --> 00:02:34.550
So if I save this,
this is going to cause an error.

30
00:02:34.550 --> 00:02:38.390
And that is because, by default,
when we render the screen,

31
00:02:38.390 --> 00:02:41.960
it's rendered as a route screen and
it doesn't have any params.

32
00:02:41.960 --> 00:02:43.940
So we need to actually
make this conditional.

33
00:02:45.400 --> 00:02:51.162
So we do if route.params and
this, otherwise, undefined.

34
00:02:53.717 --> 00:02:54.217
Nice.

35
00:02:57.230 --> 00:03:03.368
And now what we're gonna do is if this
has been just added into our screen,

36
00:03:03.368 --> 00:03:09.070
we want to take it and
add it to the top of our color palettes.

37
00:03:09.070 --> 00:03:12.334
So I'm actually going
to use a useEffect for

38
00:03:12.334 --> 00:03:15.880
this because it is dynamic
based on the rendering cycle.

39
00:03:17.750 --> 00:03:20.342
So let's do a useEffect.

40
00:03:23.802 --> 00:03:26.236
That's better.

41
00:03:29.533 --> 00:03:32.369
And let's take this,

42
00:03:32.369 --> 00:03:37.330
we want to add it to setColorPalettes.

43
00:03:37.330 --> 00:03:43.085
So we want to if this exists, so
if there is a new color palette.

44
00:03:43.085 --> 00:03:46.800
Remember this is either undefined or
it is the palette object.

45
00:03:48.710 --> 00:03:56.345
Then you wanna take this setColorPalettes.

46
00:03:59.180 --> 00:04:01.981
And you wanna take the current palettes.

47
00:04:05.370 --> 00:04:08.646
You want to return
the current one first and

48
00:04:08.646 --> 00:04:12.657
then we're just going to
spread the rest of them in.

49
00:04:14.942 --> 00:04:18.064
So this basically returns a new
array where the new part that

50
00:04:18.064 --> 00:04:20.760
was just added will be added
at the top of the array.

51
00:04:23.030 --> 00:04:27.438
And the last thing we need to do is
because this use effect will only run

52
00:04:27.438 --> 00:04:33.142
once, by default, remember, and you will
go, okay, there are no new color palettes.

53
00:04:33.142 --> 00:04:35.631
Because by default nothing
is passed into Home, and

54
00:04:35.631 --> 00:04:37.280
then it will just never run again.

55
00:04:37.280 --> 00:04:39.043
So in order for this to work,

56
00:04:39.043 --> 00:04:43.016
we actually need to also pass
this into our dependencies array.

57
00:04:46.975 --> 00:04:56.600
Now if I do New Palette,
Did I name this something else?

58
00:04:56.600 --> 00:05:00.065
Okay, so this is meant to be not name but
paletteName.

59
00:05:05.955 --> 00:05:07.422
All right, let's try this again.

60
00:05:10.852 --> 00:05:14.143
Okay, cool, so
we didn't actually add any colors.

61
00:05:14.143 --> 00:05:16.049
So we just have this name here.

62
00:05:19.492 --> 00:05:22.600
Yeah, so we've added two new
color palettes but with no color.

63
00:05:22.600 --> 00:05:26.343
So we've got that bit wired up,
which is great.

64
00:05:26.343 --> 00:05:28.377
Let's actually go ahead and

65
00:05:28.377 --> 00:05:32.962
make this Launch Modal button
a little bit bigger to match this.

66
00:05:32.962 --> 00:05:35.164
So let's just make it big and
make it teal.

67
00:05:41.785 --> 00:05:50.090
So style=(styles.buttonText).

68
00:05:50.090 --> 00:05:52.949
I should do buttonText.

69
00:05:52.949 --> 00:05:58.767
Let's make a fontSize of 18,

70
00:05:58.767 --> 00:06:02.647
fontWeight, bold.

71
00:06:02.647 --> 00:06:05.843
And let's, what else do we have?

72
00:06:05.843 --> 00:06:09.921
Yeah, font color, let's make it teal.

73
00:06:11.544 --> 00:06:13.143
And add some marginBottom as well.

74
00:06:21.832 --> 00:06:28.054
Nice, okay, so
here we've got our Launch Modal button.

75
00:06:28.054 --> 00:06:33.501
I'm just going to name

76
00:06:33.501 --> 00:06:39.524
this Add a color scheme.

77
00:06:43.344 --> 00:06:47.053
Nice, okay, so now we've got the name and
we've got the text.

78
00:06:47.053 --> 00:06:50.793
Now we need to figure out
how to do those millions of,

79
00:06:50.793 --> 00:06:54.882
well, feels like millions,
of little toggle buttons.

80
00:06:54.882 --> 00:06:59.670
Well, what I'm going to
do is I'm gonna just take

81
00:06:59.670 --> 00:07:03.205
one of them and make it work with one.

82
00:07:04.724 --> 00:07:10.424
Because if you ever have a challenge, you
don't know where to start, just get going.

83
00:07:10.424 --> 00:07:11.279
That's what I usually do.

84
00:07:11.279 --> 00:07:14.915
You just start from there,
from the smallest possible thing and

85
00:07:14.915 --> 00:07:16.338
things tend to work out.

86
00:07:18.656 --> 00:07:23.479
All right, so we'll need a switch,

87
00:07:23.479 --> 00:07:27.065
so let's import a switch.

88
00:07:27.065 --> 00:07:31.718
And let's add the Switch under here.

89
00:07:36.100 --> 00:07:40.402
Let's do value true.

90
00:07:40.402 --> 00:07:43.602
And was it on change or was it on toggle?

91
00:07:46.035 --> 00:07:48.723
I don't use a Switch very often.

92
00:07:48.723 --> 00:07:52.933
Okay, so it's on change or
on value change.

93
00:07:52.933 --> 00:07:56.992
Okay, on a value change it's the one that
receives a new value as an argument and

94
00:07:56.992 --> 00:07:58.277
that's the one we want.

95
00:07:58.277 --> 00:08:00.261
Because we want to know if it's true or
false.

96
00:08:01.360 --> 00:08:05.633
Okay, so onValueChange,

97
00:08:05.633 --> 00:08:12.702
I'm just gonna pass
an empty function here.

98
00:08:12.702 --> 00:08:16.695
Okay, cool, and so this works and

99
00:08:16.695 --> 00:08:20.973
we kind of want it to be a row of items.

100
00:08:20.973 --> 00:08:25.644
So I'm just gonna do a View first and

101
00:08:25.644 --> 00:08:28.772
put the Switch inside.

102
00:08:28.772 --> 00:08:35.446
And then add some text, so Color Name,

103
00:08:40.132 --> 00:08:45.520
Nice, and now we kind of want
them to be side by side.

104
00:08:45.520 --> 00:08:51.030
So we'll have to give this containing view
a style to make these display in a row.

105
00:08:51.030 --> 00:08:56.460
So let's do style, styles.color,

106
00:09:07.657 --> 00:09:11.910
And this will be

107
00:09:11.910 --> 00:09:19.780
flexDrection row, nice.

108
00:09:19.780 --> 00:09:24.420
And now we want them to be
like on opposite ends, so

109
00:09:24.420 --> 00:09:27.079
we can use justifyContent.

110
00:09:27.079 --> 00:09:28.254
And there's a couple of options here.

111
00:09:28.254 --> 00:09:34.617
There's space between, space around,
you probably wanna use space between.

112
00:09:38.647 --> 00:09:41.371
Cool, so
now they're like on the opposite ends.

113
00:09:41.371 --> 00:09:46.348
And we kind of want that color to actually
be centered with the toggle button

114
00:09:46.348 --> 00:09:46.981
as well.

115
00:09:46.981 --> 00:09:52.023
So let's just use alignItems

116
00:09:52.023 --> 00:09:56.061
center, okay, cool.

117
00:09:56.061 --> 00:10:00.033
So now they're centered with each other,
which is nice.

118
00:10:00.033 --> 00:10:03.557
And now I'm just going
to add some padding,

119
00:10:06.333 --> 00:10:11.366
To the top and bottom,
with paddingVertical.

120
00:10:14.526 --> 00:10:19.174
Nice, and then finally,
I think all of these in

121
00:10:19.174 --> 00:10:25.062
the example actually had
a little line underneath.

122
00:10:25.062 --> 00:10:27.620
Yeah, so I'm just gonna add
a little line underneath as well.

123
00:10:27.620 --> 00:10:29.150
Actually there's padding here.

124
00:10:29.150 --> 00:10:30.421
So maybe there should
be padding all around.

125
00:10:30.421 --> 00:10:32.312
Let's do that.

126
00:10:32.312 --> 00:10:36.830
Let's just do padding 10 and

127
00:10:36.830 --> 00:10:40.655
borderBottomWidth 1 and

128
00:10:40.655 --> 00:10:46.403
borderBottomColor, let's do grey.

129
00:10:49.710 --> 00:10:52.560
Nice, you can't see it at
the moment because the Submit

130
00:10:52.560 --> 00:10:56.025
button is in the way but
you'll see that it won't actually matter.

