WEBVTT

1
00:00:00.215 --> 00:00:05.210
And now we've reached the end of the very
long list of things that we set out to do,

2
00:00:05.210 --> 00:00:06.300
which is pretty cool.

3
00:00:06.300 --> 00:00:11.540
I know it started off pretty slow, and
then it kind of exponentially grew.

4
00:00:11.540 --> 00:00:13.832
And well, that's the case with everything.

5
00:00:13.832 --> 00:00:17.380
So just a recap on some of
the things that we learned.

6
00:00:17.380 --> 00:00:21.400
We learned about what is React Native and
what problem is it solving.

7
00:00:21.400 --> 00:00:25.510
We learned about what's the difference
between Expo and plain React Native.

8
00:00:25.510 --> 00:00:27.540
We looked at how we can debug our code.

9
00:00:28.770 --> 00:00:32.450
We had a very quick intro into React.

10
00:00:32.450 --> 00:00:37.510
We looked at how to style components
using the style sheets, and without.

11
00:00:37.510 --> 00:00:41.260
We looked at component-based architecture
in React Native applications.

12
00:00:41.260 --> 00:00:45.710
We looked at how to display lists in
a mobile optimized way using FlatLists and

13
00:00:45.710 --> 00:00:46.565
SectionLists.

14
00:00:46.565 --> 00:00:51.210
Looked at what navigation options
are available for React Native, and

15
00:00:51.210 --> 00:00:54.210
we wired up React navigation.

16
00:00:54.210 --> 00:00:57.700
For the React Native-specific parts,

17
00:00:57.700 --> 00:01:01.072
we looked at how to actually
install native modules.

18
00:01:01.072 --> 00:01:04.580
We covered the main three React hooks.

19
00:01:04.580 --> 00:01:08.020
We looked at how to fetch
data from network requests.

20
00:01:08.020 --> 00:01:10.870
We added a pull to
refresh to our FlatLists.

21
00:01:10.870 --> 00:01:15.750
We looked at launching a modal, and
we had an overview of how to build forms.

22
00:01:15.750 --> 00:01:18.413
So that is a huge amount we covered.

23
00:01:18.413 --> 00:01:20.150
I'm very proud of us.

24
00:01:20.150 --> 00:01:22.766
It was actually very difficult for
me to put together this course.

25
00:01:22.766 --> 00:01:28.865
Because as I was adding things, I found
a million other things I wanted to add.

26
00:01:28.865 --> 00:01:33.415
But unfortunately, I can't keep everyone
around for hours and hours on end.

27
00:01:34.700 --> 00:01:39.092
And so I've added just a couple of ideas
that what you might want to look into that

28
00:01:39.092 --> 00:01:42.391
I really wanted to cover today,
but it just didn't fit in.

29
00:01:44.141 --> 00:01:48.431
One of the main things that I was really
ashamed to have cut from this course was

30
00:01:48.431 --> 00:01:49.530
animation.

31
00:01:49.530 --> 00:01:52.600
Honestly, animation could
be a workshop on it's own.

32
00:01:52.600 --> 00:01:54.802
Because you can't do CSS animations and

33
00:01:54.802 --> 00:01:59.360
React Native, animation is done using
an animation prop that's built in.

34
00:01:59.360 --> 00:02:02.860
And you actually have to check
the values that do the animation.

35
00:02:02.860 --> 00:02:06.640
So there's actually a lot that goes
into that, it's quite an advanced topic.

36
00:02:06.640 --> 00:02:09.780
And I couldn't really
figure out a way to just

37
00:02:09.780 --> 00:02:14.040
have a small amount of animation
in that in a meaningful way.

38
00:02:14.040 --> 00:02:17.010
So that's something to look
into if you're interested.

39
00:02:17.010 --> 00:02:20.530
There's the animated API,
which is built into React Native.

40
00:02:20.530 --> 00:02:24.695
And if you're interested in pure native
animations in a library that's like

41
00:02:24.695 --> 00:02:27.202
already existing,
you can check out Lottie.

42
00:02:27.202 --> 00:02:31.752
Which is from,
it's in React Native community now.

43
00:02:31.752 --> 00:02:36.095
It's by Airbnb, but basically it's

44
00:02:36.095 --> 00:02:40.860
very pretty animations in React Native.

45
00:02:40.860 --> 00:02:44.990
The other thing that I just really
wanted to mention Is about images.

46
00:02:44.990 --> 00:02:47.608
So React Native has an image
component that's built in, but

47
00:02:47.608 --> 00:02:49.005
it's really not very optimal.

48
00:02:49.005 --> 00:02:53.136
And that's another one of the things that
is in there because you should be able to

49
00:02:53.136 --> 00:02:54.061
display images.

50
00:02:54.061 --> 00:02:56.139
But Facebook themselves don't use it, so

51
00:02:56.139 --> 00:02:59.260
they don't really spend
much time optimizing it.

52
00:02:59.260 --> 00:03:02.260
So most React Native applications
actually end up using

53
00:03:02.260 --> 00:03:04.120
something like React Native Fast Image.

54
00:03:05.660 --> 00:03:10.311
Because the image component that's built
into React Native doesn't really do any

55
00:03:10.311 --> 00:03:14.243
caching, and it's not really optimal for
sustained applications.

56
00:03:17.252 --> 00:03:21.228
The other thing we kinda looked
into what we didn't actually add,

57
00:03:21.228 --> 00:03:23.170
is a bottom tab navigator.

58
00:03:23.170 --> 00:03:26.455
Obviously most mobile applications
will have bottom tab navigation.

59
00:03:27.590 --> 00:03:29.630
But we ran out of time and
features to add it.

60
00:03:29.630 --> 00:03:33.109
So that's something to check out, and
there's some documentation for it here.

61
00:03:34.779 --> 00:03:38.900
There's also React Hook that I
actually use very often day to day.

62
00:03:38.900 --> 00:03:42.835
But I didn't really feel like there
was any need to add a fourth one,

63
00:03:42.835 --> 00:03:45.540
cuz there was already
an information overload.

64
00:03:45.540 --> 00:03:50.212
So you should really check out useMemo,
which is a really handy function for

65
00:03:50.212 --> 00:03:53.061
creating memoised values
which are dynamic.

66
00:03:55.773 --> 00:04:00.125
There's also a couple of topics that I
added here under extra credit that you

67
00:04:00.125 --> 00:04:02.670
could check out on your own time.

68
00:04:02.670 --> 00:04:07.400
If you're using, especially if you
did this workup workshop with Expo,

69
00:04:07.400 --> 00:04:10.260
you could have a look
at ejecting from Expo.

70
00:04:10.260 --> 00:04:15.709
So basically what you do is you go to
your Expo project and you run expo eject.

71
00:04:15.709 --> 00:04:21.830
And what this does is it converts your
Expo project into a React Native project.

72
00:04:21.830 --> 00:04:25.840
So the folder structure will actually
end up looking exactly like mine.

73
00:04:25.840 --> 00:04:28.905
So you'll have the Android folder,
iOS folder, and

74
00:04:28.905 --> 00:04:32.803
you'll have to figure out how to
manage the application yourself.

75
00:04:34.902 --> 00:04:38.486
The other thing that you could look
into his platform-specific code.

76
00:04:38.486 --> 00:04:44.095
So most of the time, we really want to
just have our one code base stream.

77
00:04:44.095 --> 00:04:47.350
But sometimes it's just not possible.

78
00:04:47.350 --> 00:04:50.820
So there are a couple of
really nice built-in ways

79
00:04:50.820 --> 00:04:53.350
that you can toggle
things between platforms.

80
00:04:53.350 --> 00:04:57.560
You can either have an individual
parameter that's conditionally rendered.

81
00:04:57.560 --> 00:05:01.487
Or you can just have a whole file where,

82
00:05:01.487 --> 00:05:06.140
on Android picks up one,
and on iOS the other.

83
00:05:06.140 --> 00:05:09.000
And finally,
if you are serious about React Native, and

84
00:05:09.000 --> 00:05:10.460
you're going to go to production,

85
00:05:11.660 --> 00:05:16.120
there is some security concerns
that you should probably look into.

86
00:05:16.120 --> 00:05:19.590
Just to be aware of
the common misconceptions.

87
00:05:19.590 --> 00:05:24.460
So here are some, this is actually
a copy of some security documentation

88
00:05:24.460 --> 00:05:28.720
that I wrote for the React Native
docs that is currently in a PR.

89
00:05:28.720 --> 00:05:31.020
But I've copied it here for convenience.

90
00:05:31.020 --> 00:05:36.541
And once he gets merged, I will just
link to the official documentation.

91
00:05:39.318 --> 00:05:43.345
Some other advanced topics that
you might want to consider.

92
00:05:43.345 --> 00:05:44.927
You could look into CodePush.

93
00:05:44.927 --> 00:05:49.418
CodePush is basically a tool that allows
you to do over-the-air updates for

94
00:05:49.418 --> 00:05:50.890
you deployed app.

95
00:05:50.890 --> 00:05:55.290
It's kind of what Expo does,
but you manage it yourself.

96
00:05:55.290 --> 00:05:59.294
So you have your Native app in the App
Store, and people have it on their phone.

97
00:05:59.294 --> 00:06:03.019
And then rather than them having
to go to the App Store and update,

98
00:06:03.019 --> 00:06:06.695
you can send the updated JavaScript
bundle over the air to them.

99
00:06:06.695 --> 00:06:09.080
So it would be more like web update,
which is pretty cool.

100
00:06:11.222 --> 00:06:13.607
I added two testing
libraries to React Native.

101
00:06:13.607 --> 00:06:18.360
So Detox is the go-to library for
interim testing.

102
00:06:18.360 --> 00:06:22.980
You can write tests in JavaScript, so
it's quite nice for very new developers.

103
00:06:24.430 --> 00:06:30.285
And then for unit testing, if you test
anything with the actual React components,

104
00:06:30.285 --> 00:06:32.205
React Native Testing Library
is pretty handy.

105
00:06:34.415 --> 00:06:38.085
And finally, for
automating the building and

106
00:06:38.085 --> 00:06:41.780
releasing of your apps,
Fastlane is a cool thing to check out.

107
00:06:41.780 --> 00:06:46.470
Because it manages some of the more
difficult things like credentials and

108
00:06:46.470 --> 00:06:49.110
keys on the store.

109
00:06:50.260 --> 00:06:54.470
&gt;&gt; I noticed there's two different
React Native testing libraries.

110
00:06:54.470 --> 00:06:58.474
There's one that has an owl for
a logo and another one that's a whale.

111
00:06:58.474 --> 00:07:03.740
[LAUGH] You linked to the owl one,
but did you have any opinion,

112
00:07:03.740 --> 00:07:06.950
or do you know that there's
another one with the same name?

113
00:07:06.950 --> 00:07:08.770
&gt;&gt; Do you mean the native testing library?

114
00:07:10.430 --> 00:07:13.404
&gt;&gt; There's one at
nativetestinglibrary.com.

115
00:07:14.940 --> 00:07:15.868
&gt;&gt; Yeah, I think it's this one.

116
00:07:18.485 --> 00:07:21.550
So I have used
React Native Testing Library, and

117
00:07:21.550 --> 00:07:26.190
I've had good results in there,
which is why I clicked on this one.

118
00:07:26.190 --> 00:07:29.292
Thank you so much for taking the course.

119
00:07:29.292 --> 00:07:33.620
Really my goal today was just
to show you how I build things.

120
00:07:33.620 --> 00:07:37.180
My goal was to Google things,
look at the documentation, and

121
00:07:37.180 --> 00:07:40.630
then just write things from scratch
the way I write them day to day.

122
00:07:40.630 --> 00:07:42.892
So I hope it was useful for you, and

123
00:07:42.892 --> 00:07:46.877
you'll be building lots of
awesome apps using these tools.

124
00:07:46.877 --> 00:07:50.860
Thank you very much.

125
00:07:50.860 --> 00:07:54.655
&gt;&gt; [APPLAUSE]

