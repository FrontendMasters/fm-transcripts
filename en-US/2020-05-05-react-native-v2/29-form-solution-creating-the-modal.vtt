WEBVTT

1
00:00:00.300 --> 00:00:04.590
So, the first thing I'm gonna do is I
think I'm gonna go into the Modal and

2
00:00:04.590 --> 00:00:07.794
then just add the text input
where the user can type in.

3
00:00:12.102 --> 00:00:14.156
So, here's the Modal.

4
00:00:14.156 --> 00:00:16.750
Let's import the TextInput.

5
00:00:18.820 --> 00:00:20.425
And let's add it here.

6
00:00:25.791 --> 00:00:33.670
And we'll want to do useState to
store the value for the TextInput.

7
00:00:33.670 --> 00:00:38.506
So let's do, will be called

8
00:00:38.506 --> 00:00:43.542
it'll be a name and setName,

9
00:00:43.542 --> 00:00:48.578
useState and that's default

10
00:00:48.578 --> 00:00:52.809
this to an empty string,

11
00:00:52.809 --> 00:00:58.047
let's do value, being name,

12
00:00:58.047 --> 00:01:03.291
so on TextInput, TextInput.

13
00:01:06.582 --> 00:01:11.261
Yeah, I want to show you in the
documentation, but let's say TextInput,

14
00:01:11.261 --> 00:01:14.605
it's just really handy to
just have the reference for

15
00:01:14.605 --> 00:01:19.540
the component open, because it's
easy to forget what their names are.

16
00:01:19.540 --> 00:01:22.520
So on the web, you will have an onChange.

17
00:01:22.520 --> 00:01:26.630
But on text input, you can actually
use onChange or on change text.

18
00:01:26.630 --> 00:01:31.290
So I usually use onChange text because for

19
00:01:31.290 --> 00:01:33.089
the argument,
it just gives you the new text.

20
00:01:34.640 --> 00:01:36.800
So let's do onChanged text.

21
00:01:40.550 --> 00:01:43.855
And for this,
basically we'll get to the new value.

22
00:01:43.855 --> 00:01:48.142
And we'll call setName with the new value.

23
00:01:48.142 --> 00:01:51.920
And you can see it because we're
passing the arguments state true,

24
00:01:51.920 --> 00:01:55.310
we can actually omit this step and
then just pass in setName.

25
00:01:57.295 --> 00:02:03.290
Cool, so now if we launch the modal,
what is this?

26
00:02:04.860 --> 00:02:11.330
And that's save, so
it is actually showing up.

27
00:02:11.330 --> 00:02:15.632
Here it is, but text inputs don't
have any style by default, so

28
00:02:15.632 --> 00:02:18.754
you can hardly see it
even though it does work.

29
00:02:18.754 --> 00:02:22.361
So the second thing we'll do is import
StyleSheet and add some styles so

30
00:02:22.361 --> 00:02:23.571
we could actually see.

31
00:02:26.376 --> 00:02:27.617
Our input.

32
00:02:30.494 --> 00:02:37.883
So let's create the styles
with StyleSheet.create.

33
00:02:41.331 --> 00:02:45.240
And do input.

34
00:02:45.240 --> 00:02:50.511
Let's start off by adding a border, so

35
00:02:50.511 --> 00:02:55.470
let's do borderColor: 'grey'.

36
00:02:55.470 --> 00:03:02.455
BorderWidth: 1, we show we need and

37
00:03:02.455 --> 00:03:08.579
let's style, styles.input.

38
00:03:11.483 --> 00:03:16.236
Cool, let's add some
padding to it as well.

39
00:03:16.236 --> 00:03:23.290
Padding, let's do 5, let's do 10,
not 5 10, that's a lot.

40
00:03:23.290 --> 00:03:27.790
Okay 10 and we're gonna just add
some styles to the view as well.

41
00:03:27.790 --> 00:03:29.516
So just so we could have some padding.

42
00:03:38.861 --> 00:03:40.716
I'm gonna call it container.

43
00:03:43.073 --> 00:03:45.984
And let's do.

44
00:03:45.984 --> 00:03:51.018
Padding: 5, and let's do

45
00:03:51.018 --> 00:03:56.903
backgroundColor: 'white'.

46
00:03:58.846 --> 00:04:02.465
And you can see that's, this isn't
actually taking up the whole screen, so

47
00:04:02.465 --> 00:04:05.320
in order to do that,
we'll do add a flex: 1, here as well.

48
00:04:08.940 --> 00:04:14.480
And I think here in the example actually
added some rounded corners in the inputs.

49
00:04:14.480 --> 00:04:17.109
So let's do that as well.

50
00:04:17.109 --> 00:04:23.748
Can use borderRadius, let's make it 5.

51
00:04:23.748 --> 00:04:27.722
Cool, so now we've got an input.

52
00:04:27.722 --> 00:04:30.240
Whoops and now we got an input.

53
00:04:31.630 --> 00:04:32.838
That works, which is great.

54
00:04:36.352 --> 00:04:37.280
What should we do next?

55
00:04:37.280 --> 00:04:38.430
Let's add a submit button.

56
00:04:41.870 --> 00:04:42.380
What do we call it?

57
00:04:42.380 --> 00:04:43.390
Let's call it submit.

58
00:04:44.480 --> 00:04:48.812
So let's do a TouchableOpacity.

59
00:04:51.330 --> 00:04:55.099
With some Text that says Submit.

60
00:04:56.530 --> 00:05:02.373
And let's import TouchableOpacity,

61
00:05:02.373 --> 00:05:06.096
I misspelled anything.

62
00:05:06.096 --> 00:05:06.700
I did.

63
00:05:06.700 --> 00:05:13.138
[SOUND].

64
00:05:13.138 --> 00:05:20.593
Okay and let's give it some styles,

65
00:05:20.593 --> 00:05:26.847
style={styles button} and

66
00:05:26.847 --> 00:05:34.320
styles.buttonText [COUGH] button.

67
00:05:34.320 --> 00:05:42.687
We're going to add some height
that's too maybe 60 and

68
00:05:42.687 --> 00:05:49.740
backgroundColor, Which I
think they used teal.

69
00:05:53.110 --> 00:05:56.938
I guess 60's a bit much, let's do 40,

70
00:05:56.938 --> 00:06:00.879
kinda refer to the rounded edges here or
not.

71
00:06:02.730 --> 00:06:05.014
Okay, a bit of rounded edges,
surrounded edges.

72
00:06:09.692 --> 00:06:16.854
Okay and now I want to center or
submit text so

73
00:06:16.854 --> 00:06:21.694
you can use use flex for that so

74
00:06:21.694 --> 00:06:28.278
we got justifyContent: 'center' and

75
00:06:28.278 --> 00:06:32.936
alignItems: 'center'.

76
00:06:32.936 --> 00:06:38.532
And last thing you wanna do is let's
just update the button text so

77
00:06:38.532 --> 00:06:41.593
it's white so we can see it better.

78
00:06:41.593 --> 00:06:45.779
So color: 'white'

79
00:06:45.779 --> 00:06:50.899
fontWeight: 'bold'.

80
00:06:50.899 --> 00:06:58.290
Nice and I'm gonna add some padding
just at the bottom of the input.

81
00:06:59.560 --> 00:07:03.013
That's margin, I it should be margin,
marginBottom so they're not so

82
00:07:03.013 --> 00:07:03.870
close together.

83
00:07:06.660 --> 00:07:11.890
Okay, now let's add a little text.

84
00:07:11.890 --> 00:07:15.060
Here's to tell the user that,
what this input is for.

85
00:07:15.060 --> 00:07:21.100
So the little text and
name of the palette,

86
00:07:25.275 --> 00:07:29.025
actually we could add
a placeholder here as well.

87
00:07:30.725 --> 00:07:34.004
Placeholder the palette name.

88
00:07:40.787 --> 00:07:45.832
I'm gonna add some styles

89
00:07:45.832 --> 00:07:53.626
to this name with a palette text as well,

90
00:07:53.626 --> 00:07:58.228
just to add some space.

91
00:08:07.348 --> 00:08:10.233
I think,
I'm gonna make the container padding 10,

92
00:08:10.233 --> 00:08:12.310
just to give it a little bit more space.

93
00:08:13.680 --> 00:08:16.932
All right, so now we've got an input.

94
00:08:18.941 --> 00:08:22.906
We got an input, we got a title for
the input, and we got a Submit button.

95
00:08:25.314 --> 00:08:30.331
So first thing we should do is,
let's just see that

96
00:08:30.331 --> 00:08:35.710
we can pass the parameters
back to our home component.

97
00:08:36.790 --> 00:08:39.862
And without actually doing
the selecting of the colors, so

98
00:08:39.862 --> 00:08:43.806
I'm going to wire up the submit button
without passing in the colors first.

99
00:08:47.172 --> 00:08:55.440
So let's do, okay let's create
a handle submit hook here.

100
00:08:55.440 --> 00:08:57.570
So let's use useCallback.

101
00:09:01.830 --> 00:09:06.732
And let's create a new

102
00:09:06.732 --> 00:09:13.183
constant for handle Submit.

103
00:09:16.219 --> 00:09:20.420
The idea is that this gets called when
the user presses the submit button.

104
00:09:23.480 --> 00:09:27.993
So if you remember, one of
the requirements was that if the name is

105
00:09:27.993 --> 00:09:32.836
empty, you want the user to get
an alert saying please enter a name, so

106
00:09:32.836 --> 00:09:34.414
let's add this here.

107
00:09:34.414 --> 00:09:40.072
Now to do this, we can use the alert
module that's built into react-native.

108
00:09:40.072 --> 00:09:45.525
And what we can do here is if !name so
if name is false,

109
00:09:45.525 --> 00:09:49.796
which is an empty string, or undefined.

110
00:09:49.796 --> 00:09:52.489
We can do Alert.alerts, actually, so

111
00:09:52.489 --> 00:09:55.669
it actually call Alerts
on alert to trigger it.

112
00:09:57.500 --> 00:10:00.718
Whatever you pass in here will be
displayed to the user on the screen.

113
00:10:00.718 --> 00:10:06.230
So please enter

114
00:10:06.230 --> 00:10:11.750
a pallet name.

115
00:10:11.750 --> 00:10:15.660
Yeah and finally,
we should wire this handle submit up so

116
00:10:15.660 --> 00:10:18.480
we pass it into our touchable opacity.

117
00:10:18.480 --> 00:10:22.520
So unpress, we call handleSubmit.

118
00:10:25.850 --> 00:10:27.590
Now if you press submit,

119
00:10:27.590 --> 00:10:30.740
we get a little alert that says
please enter a palette name.

120
00:10:33.910 --> 00:10:38.460
Now if I actually enter a name,
I press Submit.

121
00:10:38.460 --> 00:10:39.410
We've still got this error.

122
00:10:40.690 --> 00:10:43.830
And hopefully you can already
see why this is happening.

123
00:10:43.830 --> 00:10:48.850
And the reason is because we are relying
on the value of this name, but

124
00:10:48.850 --> 00:10:51.280
we haven't added it here
to the hooks array.

125
00:10:51.280 --> 00:10:55.170
So in this case, we want this
to change when the name changes.

126
00:10:55.170 --> 00:10:56.210
So we add the name here.

127
00:10:58.570 --> 00:10:59.515
So in this case.

128
00:10:59.515 --> 00:11:03.480
[SOUND] Like this doesn't
trigger the alert.

129
00:11:03.480 --> 00:11:06.820
We haven't actually done the modal
thing yet but this works correctly.

