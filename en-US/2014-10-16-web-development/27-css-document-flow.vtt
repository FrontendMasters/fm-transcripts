WEBVTT

1
00:00:00.008 --> 00:00:03.925
[MUSIC]

2
00:00:03.925 --> 00:00:06.998
&gt;&gt; Brian Holt: Document flow,
everyone has been waiting for this,

3
00:00:06.998 --> 00:00:08.370
this is the big moment!

4
00:00:09.700 --> 00:00:13.980
Just kidding, you are going to be very
disappointed if this was your big moment.

5
00:00:13.980 --> 00:00:19.270
Okay, CSS has a concept called float,
right?

6
00:00:19.270 --> 00:00:23.690
So right now if you saw all those divs
they are all on different lines, right?

7
00:00:23.690 --> 00:00:26.160
Let's say I have a section
on my webpage here and

8
00:00:26.160 --> 00:00:29.990
I want another section of my webpage
to be right here next to it.

9
00:00:29.990 --> 00:00:31.480
How do I do that?

10
00:00:31.480 --> 00:00:33.866
So there's a thing called float.

11
00:00:33.866 --> 00:00:38.560
He said, so I want you to move yourself
as far to the left as you possibly can,

12
00:00:38.560 --> 00:00:40.690
and then you tell the thing blow it,

13
00:00:40.690 --> 00:00:43.120
please move yourself as far to
the left as you possibly can.

14
00:00:43.120 --> 00:00:46.040
And so they'll start stacking each
other until they can no longer fill

15
00:00:46.040 --> 00:00:49.180
on the same line, and then what they
do is they wrap underneath it and

16
00:00:49.180 --> 00:00:50.940
then they start floating
next to each other again.

17
00:00:52.070 --> 00:00:54.660
So, how many Pinterest users in here?

18
00:00:54.660 --> 00:00:56.819
Pinterest does a really cool thing,
it's not quite floats,

19
00:00:56.819 --> 00:00:58.367
it's actually more advanced than floats.

20
00:00:58.367 --> 00:01:02.020
But notice they kind of put everything
right next to each other, right?

21
00:01:02.020 --> 00:01:07.201
That's kind of what we're
talking about here.

22
00:01:07.201 --> 00:01:10.160
So, I said as many block level items.

23
00:01:10.160 --> 00:01:12.620
So, floating will only
work on block level items.

24
00:01:12.620 --> 00:01:16.420
So, you can't float a spin, that doesn't
really make sense because a spin is

25
00:01:16.420 --> 00:01:18.510
already kind of moving next to each other.

26
00:01:21.694 --> 00:01:30.654
&gt;&gt; Speaker 2: [INAUDIBLE].

27
00:01:30.654 --> 00:01:33.980
&gt;&gt; Brian Holt: Yes, I see where
you're coming from, and there's,

28
00:01:33.980 --> 00:01:38.385
it does do that, but it's so
much more complex than that.

29
00:01:38.385 --> 00:01:40.590
&gt;&gt; Speaker 2: Line floated,

30
00:01:40.590 --> 00:01:44.090
it actually move it exactly the way
it was in a previous state.

31
00:01:45.910 --> 00:01:47.927
&gt;&gt; Brian Holt: Okay, yeah,
I can see why you're saying that.

32
00:01:47.927 --> 00:01:53.463
[LAUGH] I hadn't thought of it like that,
so.

33
00:01:53.463 --> 00:01:56.522
&gt;&gt; Brian Holt: Yeah,
we'll go through some examples, and

34
00:01:56.522 --> 00:01:59.300
then go through it some more.

35
00:01:59.300 --> 00:02:02.026
So in fact,
let's just jump in to a CodePen here.

36
00:02:06.670 --> 00:02:10.332
&gt;&gt; Speaker 3: In chat they're kind of
wondering how does Pinterest do what they

37
00:02:10.332 --> 00:02:11.670
do like using grids or?

38
00:02:12.770 --> 00:02:16.467
&gt;&gt; Brian Holt: Pinterest
does it with JavaScript.

39
00:02:19.868 --> 00:02:22.050
&gt;&gt; Brian Holt: It's actually
quite complicated and

40
00:02:22.050 --> 00:02:26.070
people have tried to replicate it and
they did a really bad job.

41
00:02:26.070 --> 00:02:30.015
There's a plug in called Masonry that
kind of replicates it and it's awful.

42
00:02:30.015 --> 00:02:35.098
[LAUGH] So they have a bunch of really
smart people that got paid to do it.

43
00:02:36.571 --> 00:02:38.027
&gt;&gt; Brian Holt: Okay, so.

44
00:02:38.027 --> 00:02:39.550
Good question though.

45
00:02:39.550 --> 00:02:42.470
I believe this is just all the same
blog HTML, and you can look over it.

46
00:02:42.470 --> 00:02:46.470
But it really ends up being the same as
what we've been looking at previously.

47
00:02:46.470 --> 00:02:50.017
Now I have blog post 1 and
blog post 2 being next to each other.

48
00:02:52.854 --> 00:02:53.862
&gt;&gt; Brian Holt: Okay?

49
00:02:53.862 --> 00:02:57.105
And now I have floated
them next to each other.

50
00:02:57.105 --> 00:03:01.329
So notice,
this one's longer than this one.

51
00:03:03.334 --> 00:03:04.849
&gt;&gt; Brian Holt: Yeah.

52
00:03:04.849 --> 00:03:07.323
So let's talk about how that happened.

53
00:03:12.806 --> 00:03:14.800
&gt;&gt; Brian Holt: Codepen is
doing this weird thing.

54
00:03:14.800 --> 00:03:15.690
Anyway, whatever.

55
00:03:17.340 --> 00:03:21.089
So here I just changed the font family,
changed the color of the text.

56
00:03:21.089 --> 00:03:25.533
Apparently, 333 is a shade of black
that's less offensive, it's less stark.

57
00:03:25.533 --> 00:03:27.817
So did that.

58
00:03:27.817 --> 00:03:31.681
Made the background color gray or
we can change this to be like red or

59
00:03:31.681 --> 00:03:34.172
something like that, right, whatever.

60
00:03:37.090 --> 00:03:41.619
&gt;&gt; Brian Holt: And then here I've
defined it to be a width of 45%.

61
00:03:41.619 --> 00:03:44.688
So you can define width in
terms of percentages, right?

62
00:03:44.688 --> 00:03:48.085
It is gonna look at its parent
container and say, how wide are you?

63
00:03:48.085 --> 00:03:53.693
And then say, okay, I want to be
45% of whatever your maximum is.

64
00:03:53.693 --> 00:03:59.487
So in this particular case, we're saying
the width, its parent is the body.

65
00:03:59.487 --> 00:04:00.986
So the body is the width
of the entire page.

66
00:04:00.986 --> 00:04:02.954
And so I want to be 45% of that.

67
00:04:02.954 --> 00:04:08.240
And then I said after that,
please give me 2% margin to the right.

68
00:04:09.500 --> 00:04:14.500
So what's cool about this is,
I guess it's kind of but

69
00:04:14.500 --> 00:04:16.730
it kind of resizes itself
as the page resizes.

70
00:04:16.730 --> 00:04:21.672
It's kind of responsive design,
kind of not really, cuz as you can see,

71
00:04:21.672 --> 00:04:23.357
it messes up right here.

72
00:04:26.237 --> 00:04:28.900
&gt;&gt; Brian Holt: And but let's actually
talk about that for a second.

73
00:04:28.900 --> 00:04:30.505
If I go too small, what happens?

74
00:04:30.505 --> 00:04:32.190
It wraps.

75
00:04:32.190 --> 00:04:36.127
That's what this floating thing does is
it tries to fit as much crap as it can on

76
00:04:36.127 --> 00:04:36.685
one line.

77
00:04:36.685 --> 00:04:40.915
And once it does,
it just kind of shoves it down.

78
00:04:40.915 --> 00:04:45.140
If your things are not uniform height,
this can cause some weird behavior, right?

79
00:04:45.140 --> 00:04:49.830
Because if I have super long div right
here, and I have things wrapping,

80
00:04:49.830 --> 00:04:53.960
it's gonna wrap underneath those things.

81
00:04:53.960 --> 00:04:55.190
But not always.

82
00:04:55.190 --> 00:05:03.000
Because a floated element cannot be higher
than a previous floated element, right?

83
00:05:03.000 --> 00:05:06.973
So if I have thing A, actually hold on.

84
00:05:06.973 --> 00:05:10.200
I have a good example
of this on my CodePen.

85
00:05:22.029 --> 00:05:24.318
&gt;&gt; Brian Holt: This one right here.

86
00:05:24.318 --> 00:05:28.590
Luckily I did this.

87
00:05:28.590 --> 00:05:31.950
So I have two fatties right here and
a skinny right here, right?

88
00:05:31.950 --> 00:05:33.030
And these three skinnies.

89
00:05:33.030 --> 00:05:37.190
Notice that these skinnies are not
pushing up all the way to the top.

90
00:05:37.190 --> 00:05:37.930
Right.
It's cuz

91
00:05:39.520 --> 00:05:43.090
this fatty right here is
actually higher in the HTML.

92
00:05:43.090 --> 00:05:45.620
And so these skinnies can
actually push past the fatty.

93
00:05:45.620 --> 00:05:48.483
That fatty is as far high as they can go.

94
00:05:48.483 --> 00:05:52.135
And the difference is why they're going
to the left and right is these are being

95
00:05:52.135 --> 00:05:54.976
floated to the right and
these are being floated to the left.

96
00:05:57.330 --> 00:06:02.291
&gt;&gt; Brian Holt: All of this is to
illustrate floats can have some

97
00:06:02.291 --> 00:06:04.159
weird behavior.

98
00:06:04.159 --> 00:06:06.040
This typically would not be a problem,

99
00:06:06.040 --> 00:06:09.370
because what I would do is I would
just float everything to the left.

100
00:06:09.370 --> 00:06:12.982
And, you typically would not float to the
right and float to the left and try and

101
00:06:12.982 --> 00:06:14.421
have the pushing of behavior.

102
00:06:14.421 --> 00:06:18.520
But, that's kind of what
I was getting at there.

103
00:06:21.476 --> 00:06:26.403
&gt;&gt; Brian Holt: Okay, so,
again like if I change this to be like

104
00:06:26.403 --> 00:06:30.650
50% they're gonna wrap, right?

105
00:06:30.650 --> 00:06:35.566
Because it's trying to have 50% width and
then 2% margin to the right.

106
00:06:35.566 --> 00:06:38.410
That's 52% or 104% if you try and
slam them together.

107
00:06:39.810 --> 00:06:40.350
Do the math.

108
00:06:40.350 --> 00:06:43.370
104 is actually bigger than 100, so

109
00:06:43.370 --> 00:06:46.010
it cannot fit on the same line,
therefore it wraps.

110
00:06:48.410 --> 00:06:49.870
Okay.

111
00:06:49.870 --> 00:06:52.050
So something kind of
interesting that we can do.

112
00:06:52.050 --> 00:06:55.759
If I say float: right,
and move this back to 45.

113
00:06:58.570 --> 00:06:59.210
Check it out.

114
00:06:59.210 --> 00:07:06.790
Now blog post 1 is on the right, whereas
if I say float: left, they're gonna swap.

115
00:07:08.740 --> 00:07:09.760
Kind of sweet, right?

116
00:07:11.380 --> 00:07:13.686
And it just has to do with
the order that it's happening.

117
00:07:13.686 --> 00:07:16.420
So it's gonna take blog post 1,
render it, and then say okay,

118
00:07:16.420 --> 00:07:17.570
shove yourself to the right.

119
00:07:17.570 --> 00:07:19.927
And then it's gonna take
blog post 2 render it, and

120
00:07:19.927 --> 00:07:22.670
then shove it to the right and
that's kinda how floats work.

121
00:07:24.500 --> 00:07:25.290
Questions about that?

122
00:07:25.290 --> 00:07:27.370
Does that make some sense?

123
00:07:27.370 --> 00:07:27.950
&gt;&gt; Speaker 3: In the chat room,

124
00:07:27.950 --> 00:07:29.700
they want to know how to
make them equal heights, so.

125
00:07:29.700 --> 00:07:32.090
I think by just putting that in there?

126
00:07:34.380 --> 00:07:36.414
&gt;&gt; Brian Holt: The x box makes
equal heights really easy [LAUGH].

127
00:07:38.480 --> 00:07:40.930
Equal heights is another pain in the ass.

128
00:07:40.930 --> 00:07:44.995
So well the easiest way is like if I say

129
00:07:44.995 --> 00:07:50.610
height: 200 pixels, right?

130
00:07:50.610 --> 00:07:52.100
And then say overflow.

131
00:07:54.500 --> 00:07:56.148
Scroll or something like that.

132
00:07:57.930 --> 00:07:59.290
&gt;&gt; Brian Holt: Okay.

133
00:07:59.290 --> 00:08:02.671
Now they are equal height because I've
actually pre-defined their heights to be

134
00:08:02.671 --> 00:08:03.360
200 pixels.

135
00:08:05.744 --> 00:08:12.000
Now if you want them to be both responsive
and the same height, that's a trick.

136
00:08:13.380 --> 00:08:15.630
I hesitant to show you
because it's a little weird.

137
00:08:17.120 --> 00:08:18.249
All right.
We'll show,

138
00:08:18.249 --> 00:08:21.480
someone might find it interesting,
if this blows your mind, for

139
00:08:21.480 --> 00:08:22.728
God sake just ignore it.

140
00:08:22.728 --> 00:08:24.176
Okay, so.

141
00:08:28.006 --> 00:08:31.627
&gt;&gt; Brian Holt: This is,
you'll find with CSS, it's so old and so

142
00:08:31.627 --> 00:08:36.490
broken, that you kinda have
to hack around it sometimes.

143
00:08:36.490 --> 00:08:38.201
So I'm gonna say height: 0.

144
00:08:38.201 --> 00:08:40.710
So these are all of a sudden
gonna disappear, right?

145
00:08:40.710 --> 00:08:42.820
Cuz they're gonna have no height.

146
00:08:42.820 --> 00:08:49.550
Then I'm gonna say, padding-bottom and
I'm gonna say like 50%.

147
00:08:49.550 --> 00:08:52.770
So what happened here?

148
00:08:52.770 --> 00:08:54.760
Notice that they actually
are the same height now.

149
00:08:54.760 --> 00:08:57.350
And they kind of size dynamically as well.

150
00:08:58.450 --> 00:09:01.409
So what they're doing is they're
maintaining aspect ratio, right?

151
00:09:01.409 --> 00:09:04.957
Like you think about your TV and
it's like 4:3 or 16:9.

152
00:09:04.957 --> 00:09:06.310
It's essentially what
you're doing it here.

153
00:09:06.310 --> 00:09:10.740
Padding-bottom is, despite the fact that
it's actually a vertical measurement,

154
00:09:10.740 --> 00:09:13.240
it's measured in terms of its width.

155
00:09:13.240 --> 00:09:17.330
And so
if I'm telling padding-bottom to be 50%.

156
00:09:17.330 --> 00:09:23.290
I'm instructing it that you're supposed to
be 50% of whatever your maximum height is,

157
00:09:23.290 --> 00:09:24.565
or maximum width, sorry.

158
00:09:24.565 --> 00:09:28.080
If that doesn't make any sense,
that's totally cool.

159
00:09:28.080 --> 00:09:31.430
That's advanced CSS,
don't worry too much about it.

160
00:09:31.430 --> 00:09:32.740
But it's kind of cool, right?

161
00:09:32.740 --> 00:09:36.870
A lot of our website is
built on this principle.

162
00:09:36.870 --> 00:09:38.006
It's total hack.

163
00:09:38.006 --> 00:09:39.228
Right?

164
00:09:39.228 --> 00:09:40.635
Okay.

165
00:09:40.635 --> 00:09:43.158
&gt;&gt; Speaker 2: I have a question.

166
00:09:43.158 --> 00:09:44.059
&gt;&gt; Brian Holt: Yeah.

167
00:09:44.059 --> 00:09:51.163
&gt;&gt; Speaker 2: When you're
considering your margin.

168
00:09:51.163 --> 00:09:56.134
[INAUDIBLE].

169
00:09:56.134 --> 00:10:01.191
You said you have 200 for width, right?

170
00:10:01.191 --> 00:10:05.767
And everything you do under,
say, under your blog post, so

171
00:10:05.767 --> 00:10:10.434
everything you do on your blog post,
and say that's 200,

172
00:10:10.434 --> 00:10:15.680
does everything need to add to that 150,
what did I say, 200?

173
00:10:15.680 --> 00:10:16.690
Whatever I said.

174
00:10:16.690 --> 00:10:17.420
I'm sorry.
&gt;&gt; Brian Holt: That's okay.

175
00:10:17.420 --> 00:10:21.320
&gt;&gt; Speaker 2: Does it need to
add up to that web size so

176
00:10:21.320 --> 00:10:26.190
that you can have enough room to get
all your content, images on that page?

177
00:10:27.330 --> 00:10:29.136
&gt;&gt; Brian Holt: Okay, so,
let me rephrase what you're asking and

178
00:10:29.136 --> 00:10:30.350
see if I understand.

179
00:10:30.350 --> 00:10:31.550
&gt;&gt; Speaker 2: Okay.

180
00:10:31.550 --> 00:10:34.570
&gt;&gt; Brian Holt: You have a parent container
that's gonna be 200 pixels wide.

181
00:10:35.634 --> 00:10:38.360
You're asking if I want everything
to fit inside my container,

182
00:10:38.360 --> 00:10:40.400
did they need to add up to 200 pixels?

183
00:10:40.400 --> 00:10:41.860
&gt;&gt; Speaker 2: Right.

184
00:10:41.860 --> 00:10:44.300
&gt;&gt; Brian Holt: The answer to that
question is it depends on what you want.

185
00:10:45.800 --> 00:10:48.819
There's sometimes that you want your
content to flow outside of it, right?

186
00:10:49.840 --> 00:10:54.878
So, there you've seen those full bleed,
Kickstarter has one I think at the top,

187
00:10:54.878 --> 00:10:58.420
or even Redditgifts so
let's just look at Redditgifts.

188
00:10:58.420 --> 00:11:03.420
They have this full bleed image, right?

189
00:11:03.420 --> 00:11:06.430
So, sometimes you might want those
images to flow outside of it, so

190
00:11:06.430 --> 00:11:08.556
you're only looking at part of your image,
right?

191
00:11:10.560 --> 00:11:14.380
And that's how they achieve that technique
is they actually have a flow outside of it

192
00:11:14.380 --> 00:11:16.990
but, its parent actually can't
contain the full width of it.

193
00:11:18.560 --> 00:11:20.880
If you want everything to fit on one line,
then yeah,

194
00:11:20.880 --> 00:11:26.120
it needs to be less than or
equal to the parent's width.

195
00:11:26.120 --> 00:11:28.610
Does that answer your question?

196
00:11:28.610 --> 00:11:29.110
Cool.

