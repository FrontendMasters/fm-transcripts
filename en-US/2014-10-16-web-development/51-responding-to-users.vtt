WEBVTT

1
00:00:00.000 --> 00:00:03.931
[MUSIC]

2
00:00:03.931 --> 00:00:06.891
&gt;&gt; Male Student 1: What happens if
you give the text function we've

3
00:00:06.891 --> 00:00:08.710
written an argument?

4
00:00:08.710 --> 00:00:12.180
Will it be called or
will jQuery text function be called?

5
00:00:12.180 --> 00:00:15.700
&gt;&gt; Brian Holt: Say that one more time.

6
00:00:15.700 --> 00:00:16.580
&gt;&gt; Male Student 1: What happens if we give

7
00:00:16.580 --> 00:00:19.820
the text function we've
written an argument?

8
00:00:19.820 --> 00:00:22.468
Will it be called or
will the jQuery text function be called?

9
00:00:22.468 --> 00:00:25.380
I guess, [INAUDIBLE].
&gt;&gt; Brian Holt: Okay.

10
00:00:25.380 --> 00:00:31.580
So this is kind of talking
about overloading a method.

11
00:00:31.580 --> 00:00:37.230
It doesn't exist in JavaScript.
&gt;&gt; Brian Holt: So the answer is,

12
00:00:37.230 --> 00:00:42.601
if you call text with no
parameters versus one parameter,

13
00:00:42.601 --> 00:00:50.510
versus two parameters it's not like Java
will actually refer to a different method.

14
00:00:50.510 --> 00:00:52.960
It all refers to the same method.

15
00:00:52.960 --> 00:00:57.162
And it's up to your JavaScript that
you write to deal with those different

16
00:00:57.162 --> 00:01:02.860
parameters.
&gt;&gt; Brian Holt: Here we're now

17
00:01:02.860 --> 00:01:06.520
actually going to leverage those anonymous
functions that we were talking about.

18
00:01:08.450 --> 00:01:09.810
Something that happens, sorry.

19
00:01:09.810 --> 00:01:11.820
Go ahead.
&gt;&gt; Male Student 1: Now I think they're

20
00:01:11.820 --> 00:01:16.032
saying, what if you even just did
find your own function called

21
00:01:16.032 --> 00:01:21.784
text.
&gt;&gt; Male Student 1: Object.text

22
00:01:21.784 --> 00:01:24.210
versus dollar sign dot text.

23
00:01:26.240 --> 00:01:29.260
If you created your own object and

24
00:01:29.260 --> 00:01:33.260
had a text method on that.
&gt;&gt; Brian Holt: Which you

25
00:01:33.260 --> 00:01:34.930
want to call?
&gt;&gt; Male Student 1: Right.

26
00:01:37.230 --> 00:01:38.130
&gt;&gt; Brian Holt: I guest it depends

27
00:01:38.130 --> 00:01:41.570
if it's a jQuery object,
if it is a jQuery object

28
00:01:41.570 --> 00:01:45.900
you can't overwrite your text method and
then call your own.

29
00:01:45.900 --> 00:01:47.440
That is a possibility.
&gt;&gt; Male Student 1: But

30
00:01:47.440 --> 00:01:50.100
if it was a completely
separate object it would be

31
00:01:50.100 --> 00:01:52.930
calling your implementation.
&gt;&gt; Brian Holt: Calling your

32
00:01:52.930 --> 00:01:53.550
implementation.

33
00:01:53.550 --> 00:01:56.680
So jQuery only modifies it's own objects.

34
00:01:56.680 --> 00:02:01.180
It doesn't actually go and override other
things objects or methods or whatever.

35
00:02:02.690 --> 00:02:05.060
Does that address it?
&gt;&gt; Male Student 1: I'll check here.

36
00:02:05.060 --> 00:02:06.700
&gt;&gt; Brian Holt: Okay, let's

37
00:02:06.700 --> 00:02:08.700
talk about pressing buttons, right.

38
00:02:08.700 --> 00:02:12.910
It's a common practice that you'll
press a button on a website.

39
00:02:12.910 --> 00:02:14.450
And it'll do something, right.

40
00:02:14.450 --> 00:02:20.210
So you want to have that ability
to react to user inputs.

41
00:02:21.550 --> 00:02:24.720
So in this particular case,
we have a button right here.

42
00:02:24.720 --> 00:02:27.580
So button class="alert-btn".

43
00:02:27.580 --> 00:02:28.780
It says click me on it.

44
00:02:30.420 --> 00:02:32.660
So now that we click it, it's gonna say,

45
00:02:32.660 --> 00:02:37.017
hey there.
&gt;&gt; Brian Holt: Let's talk about

46
00:02:37.017 --> 00:02:37.626
how we did that.

47
00:02:37.626 --> 00:02:45.041
Let's just make this a lot bigger here.
&gt;&gt; Brian Holt: Okay,

48
00:02:45.041 --> 00:02:47.040
we grab alert button here.

49
00:02:47.040 --> 00:02:50.370
This should look familiar from
what we were doing last time.

50
00:02:50.370 --> 00:02:52.990
And then there is a thing
called the .click function.

51
00:02:54.110 --> 00:02:58.896
That's essentially saying, every time my
button gets clicked, run this function.

52
00:02:58.896 --> 00:03:03.200
So again, I can click it again and
again, and again, and

53
00:03:03.200 --> 00:03:05.150
again it happens every single time.

54
00:03:07.320 --> 00:03:14.000
So what's actually happening
here in JavaScript or at least

55
00:03:14.000 --> 00:03:16.840
in the dom which is the document object
model, we talked a little about that.

56
00:03:17.850 --> 00:03:23.480
There is a thing called an event, so
every time I click on this, whether or

57
00:03:23.480 --> 00:03:26.000
not I'm listening for
the event, it happens, right.

58
00:03:26.000 --> 00:03:30.170
Like JavaScript,
like I'm clicking right here in the body.

59
00:03:30.170 --> 00:03:33.290
JavaScript is throwing off all of these
events for me clicking on the body and

60
00:03:33.290 --> 00:03:36.910
just nothing is happening because
no one is listening right.

61
00:03:36.910 --> 00:03:39.660
It's kind of those things like
a tree falls in the forest kind of

62
00:03:39.660 --> 00:03:40.560
problem, right.

63
00:03:41.690 --> 00:03:43.773
So in this particular case, when we say,

64
00:03:43.773 --> 00:03:47.938
call this .click function the tree is
falling in the forest and we're listening,

65
00:03:47.938 --> 00:03:53.460
so it does make a sound.
&gt;&gt; Brian Holt: So

66
00:03:53.460 --> 00:03:58.048
yeah, when call the click function,
it is essentially saying I want to be

67
00:03:58.048 --> 00:04:03.530
notified when this event happens and
I want you to run this block of code.

68
00:04:03.530 --> 00:04:06.800
All right, so here I'm saying,
alert("Hey there!"), so

69
00:04:06.800 --> 00:04:10.100
every time this is clicked
it calls hey there.

70
00:04:10.100 --> 00:04:12.210
That kinda make sense?

71
00:04:13.270 --> 00:04:15.950
There's lots of events
in JavaScript [COUGH].

72
00:04:15.950 --> 00:04:19.930
Click is just happens to be one of
the most commonly used one, right.

73
00:04:19.930 --> 00:04:23.725
Because that's usually a direct sign of
user interaction with your website than

74
00:04:23.725 --> 00:04:26.816
when they click on something,
they expect something to happen.

75
00:04:26.816 --> 00:04:30.688
So you should be listening for it.
&gt;&gt; Brian Holt: Questions about

76
00:04:30.688 --> 00:04:35.917
this?
&gt;&gt; Male Student 2: That single

77
00:04:35.917 --> 00:04:41.550
click event or
the action of clicking on that button.

78
00:04:41.550 --> 00:04:44.820
Actually, created a whole
stream of events, correct.

79
00:04:44.820 --> 00:04:46.190
It's just that we're listening for

80
00:04:47.650 --> 00:04:49.880
the alert button click.
&gt;&gt; Brian Holt: Yeah.

81
00:04:49.880 --> 00:04:50.450
&gt;&gt; Male Student 2: Cuz there's actually

82
00:04:50.450 --> 00:04:52.690
a click in the context of the browser

83
00:04:52.690 --> 00:04:53.650
window as well.
&gt;&gt; Brian Holt: Right.

84
00:04:54.820 --> 00:04:56.470
Definitely.
&gt;&gt; Male Student 1: I didn't

85
00:04:56.470 --> 00:04:56.970
catch all that.

86
00:04:56.970 --> 00:04:58.390
It might have addressed that,

87
00:04:58.390 --> 00:05:02.220
but they're asking, can you explain more
on how events are set up in the DOM and

88
00:05:02.220 --> 00:05:07.126
how it exactly listens.
&gt;&gt; Brian Holt: The question is always

89
00:05:07.126 --> 00:05:09.640
how much depth to go

90
00:05:09.640 --> 00:05:16.914
into.
&gt;&gt; Brian Holt: I'm

91
00:05:16.914 --> 00:05:22.550
gonna one defer to the other
jQuery class with Carl.

92
00:05:22.550 --> 00:05:28.170
I'm sure he touches on it
much more than then I should.

93
00:05:29.770 --> 00:05:34.860
But essentially every time that you
press a key, you click on something,

94
00:05:34.860 --> 00:05:40.090
you move your mouse, your mouse enters
something, your mouse leaves something.

95
00:05:40.090 --> 00:05:43.990
You push down the mouse button, you let up
the mouse button, you click the button,

96
00:05:43.990 --> 00:05:44.950
you double click the button.

97
00:05:44.950 --> 00:05:47.954
Those are all different events
that the browser will fire.

98
00:05:47.954 --> 00:05:52.500
And essentially,
the browser does is it says, hey,

99
00:05:52.500 --> 00:05:57.310
an event happened here and then it kinda
just bubbles up and different things.

100
00:05:57.310 --> 00:05:59.840
So you can have multiple
things listening for example.

101
00:06:01.600 --> 00:06:09.570
If I say, (' .alert-btn').click,
I mean this is contrived.

102
00:06:09.570 --> 00:06:14.216
You really would just put it up here,
but let's just,

103
00:06:14.216 --> 00:06:21.035
I can spell function.
&gt;&gt; Brian Holt: And

104
00:06:21.035 --> 00:06:22.600
we'll say like.

105
00:06:27.283 --> 00:06:32.285
&gt;&gt; Brian Holt:
$('alert-btn').text('changed'), right.

106
00:06:47.670 --> 00:06:49.222
&gt;&gt; Brian Holt: Hope yeah,

107
00:06:49.222 --> 00:06:52.051
period right there.

108
00:06:52.051 --> 00:06:57.490
Okay, so
what I'm trying to demonstrate here is,

109
00:06:57.490 --> 00:07:01.540
like these events bubble up, and there can
be many people listening for these events.

110
00:07:01.540 --> 00:07:06.070
Essentially the browser says,
like hey this happened in the browser.

111
00:07:06.070 --> 00:07:09.610
And like everything all your listeners
can say, like we don't care.

112
00:07:09.610 --> 00:07:12.430
Like go pound sand or whatever.

113
00:07:12.430 --> 00:07:16.007
Or they can say like, okay that happened
I care, I'm gonna fire off my code

114
00:07:16.007 --> 00:07:21.024
now.
&gt;&gt; Brian Holt: So in this particular

115
00:07:21.024 --> 00:07:26.090
case alert-btn now has two different
event listeners that are gonna

116
00:07:26.090 --> 00:07:30.930
do different things based on those events.
&gt;&gt; Male Student 2: So just declaring that

117
00:07:32.370 --> 00:07:36.289
jQuery function call registers the event.

118
00:07:37.360 --> 00:07:39.210
There's no sequencing, or

119
00:07:39.210 --> 00:07:41.730
no positioning dependency variable.
&gt;&gt; Brian Holt: It's really that

120
00:07:41.730 --> 00:07:44.429
simple.
&gt;&gt; Brian Holt: And

121
00:07:44.429 --> 00:07:48.354
again that's why we are going over jQuery,
it makes things like this just

122
00:07:48.354 --> 00:07:52.990
deadly simple.
&gt;&gt; Male Student 2: They are just asking if

123
00:07:52.990 --> 00:07:55.780
the onclick and
setting that to a function do it in HTML?

124
00:07:55.780 --> 00:07:57.810
Is that the same thing we're doing here,

125
00:07:57.810 --> 00:08:01.710
it's just jQuery's taking care of it?
&gt;&gt; Brian Holt: It amounts to be

126
00:08:01.710 --> 00:08:03.320
the same thing.

127
00:08:03.320 --> 00:08:04.640
That's a really bad way to do it.

128
00:08:04.640 --> 00:08:08.070
You do not wanna put your
JavaScript into your HTML.

129
00:08:08.070 --> 00:08:11.500
It's just, it's the worst
thing you can do for yourself.

130
00:08:11.500 --> 00:08:12.409
Like stick to this.

131
00:08:13.510 --> 00:08:17.690
Now if you want to ask me, can you do
it in raw JavaScript without jQuery?

132
00:08:17.690 --> 00:08:19.380
That's fine,
you can totally do it that way and

133
00:08:19.380 --> 00:08:24.270
just not use jQuery at all.
&gt;&gt; Male Student 2: What if you wanted to

134
00:08:24.270 --> 00:08:28.860
reference something that
didn't have a tag, or

135
00:08:28.860 --> 00:08:30.970
maybe does have a tag but
you don't know what it is.

136
00:08:30.970 --> 00:08:34.410
Like you wanted to change
the nav bar on the browser.

137
00:08:34.410 --> 00:08:39.460
Or you wanted to do some other device?
&gt;&gt; Brian Holt: You need some

138
00:08:39.460 --> 00:08:40.860
way to get at it.

139
00:08:40.860 --> 00:08:42.760
Whether that's a class, that's an ID,

140
00:08:42.760 --> 00:08:46.570
it's a tag name, you can't get at
something if you don't know what it is.

141
00:08:47.790 --> 00:08:50.380
So it can be defined dynamically, right.

142
00:08:50.380 --> 00:08:56.810
Like I could have like.
&gt;&gt; Brian Holt: Var button, right.

143
00:08:56.810 --> 00:09:02.900
And that's equal to this and

144
00:09:02.900 --> 00:09:07.810
I can say, right there button and
here button as well.

145
00:09:09.400 --> 00:09:11.950
So that can be filled in
later dynamically, right.

146
00:09:11.950 --> 00:09:14.680
But you still have to give
it some indication like

147
00:09:14.680 --> 00:09:17.410
this is what I'm listening for, right.

148
00:09:17.410 --> 00:09:22.188
You can even get super annoying and

149
00:09:22.188 --> 00:09:25.830
say, like body, right.

150
00:09:25.830 --> 00:09:27.240
So any time the body is clicked,

151
00:09:27.240 --> 00:09:32.411
it's gonna get really annoying with me.
&gt;&gt; Brian Holt: Don't

152
00:09:32.411 --> 00:09:33.738
even have to click on the body anymore.

153
00:09:33.738 --> 00:09:37.450
Oops, this page.

154
00:09:37.450 --> 00:09:39.637
So again, that can be changed
it can be dynamic, right.

155
00:09:39.637 --> 00:09:44.260
But.
&gt;&gt; Male Student 2: So it's only things

156
00:09:44.260 --> 00:09:47.470
that are in the dom, not anything
that's outside in the browser itself?

157
00:09:47.470 --> 00:09:48.030
&gt;&gt; Brian Holt: Okay, so

158
00:09:48.030 --> 00:09:50.070
you can create synthetic events, right.

159
00:09:50.070 --> 00:09:55.340
Like that's possible like the browser
generates a bunch of really useful events.

160
00:09:55.340 --> 00:09:59.110
But you're talking about
outside the window.

161
00:09:59.110 --> 00:10:00.050
&gt;&gt; Male Student 2: Outside of the DOM.

162
00:10:01.390 --> 00:10:03.960
So if you wanted to modify,

163
00:10:03.960 --> 00:10:09.620
there's websites you go to that open
additional tabs, or things like that that

164
00:10:09.620 --> 00:10:11.770
are outside of the context of the DOM.
&gt;&gt; Brian Holt: So

165
00:10:11.770 --> 00:10:13.970
your tab is pretty well sandboxed.

166
00:10:13.970 --> 00:10:19.160
For example, my codepen tap,
cannot listen to my Google.

167
00:10:19.160 --> 00:10:21.340
That's a huge privacy implication, right.

168
00:10:21.340 --> 00:10:25.610
You don't want other people
listening on what you're doing.

169
00:10:25.610 --> 00:10:28.530
So you are confine to your webpage,
whatever that is.

170
00:10:29.550 --> 00:10:35.280
There's minor exceptions to it but
I won't worry about it.

171
00:10:35.280 --> 00:10:38.500
You can only listen to your own stuff,
that's the bottom line.

172
00:10:38.500 --> 00:10:39.150
&gt;&gt; Male Student 2: What if about things,

173
00:10:39.150 --> 00:10:42.230
like if you were writing an app for like
a mobile device where you're looking for

174
00:10:42.230 --> 00:10:46.150
tilt angle like an accelerometer or
something like that?

175
00:10:46.150 --> 00:10:51.672
And how would you reference that event?
&gt;&gt; Brian Holt: So

176
00:10:51.672 --> 00:10:56.917
the short answer to that is, a lot of
that can't be done in the browser.

177
00:10:56.917 --> 00:10:59.422
You have to drop into a mobile app,
where you

178
00:10:59.422 --> 00:11:02.270
actually have access to those APIs.
&gt;&gt; Male Student 1: Isn't there

179
00:11:02.270 --> 00:11:04.509
accelerometer API.
&gt;&gt; Brian Holt: I think there is but

180
00:11:04.509 --> 00:11:05.674
I've never used it.

181
00:11:05.674 --> 00:11:07.702
So I'm not [INAUDIBLE].
&gt;&gt; Male Student 1: [INAUDIBLE]

182
00:11:07.702 --> 00:11:08.899
Device orientation.

183
00:11:08.899 --> 00:11:12.558
It's called device orientation API.
&gt;&gt; Male Student 2: Does GPS.

184
00:11:12.558 --> 00:11:13.219
&gt;&gt; Male Student 1: Right.

185
00:11:13.219 --> 00:11:13.923
Yeah.

186
00:11:13.923 --> 00:11:20.105
[CROSSTALK] To get the way
that the API works.

187
00:11:20.105 --> 00:11:21.428
&gt;&gt; Brian Holt: That one exists.

188
00:11:21.428 --> 00:11:22.573
&gt;&gt; Male Student 1: You ask giant

189
00:11:22.573 --> 00:11:27.257
permission to see location and
then user clicks yes,

190
00:11:27.257 --> 00:11:30.600
and then you get a location out there.

191
00:11:30.600 --> 00:11:32.530
And so it's called the view location API.
&gt;&gt; Brian Holt: Yeah,

192
00:11:34.250 --> 00:11:36.260
some of it does exist.

193
00:11:36.260 --> 00:11:37.520
But yeah.
&gt;&gt; Male Student 1: Some that's

194
00:11:37.520 --> 00:11:41.869
to discuss in the intro to HTML 5,
and this three course [INAUDIBLE].

195
00:11:41.869 --> 00:11:45.435
&gt;&gt; Brian Holt: Good question for

196
00:11:45.435 --> 00:11:46.720
sure.
&gt;&gt; Female Student 1: So

197
00:11:46.720 --> 00:11:48.750
there's a question of mine.

198
00:11:48.750 --> 00:11:55.430
Somebody is asking, so you can define
it like this bar dollar sign element

199
00:11:55.430 --> 00:12:02.449
with no parentheses equals
$ element with parenthesis.

200
00:12:02.449 --> 00:12:07.958
I'm not sure if that makes sense.
&gt;&gt; Female Student 1: $

201
00:12:07.958 --> 00:12:13.514
var $ element is not
really used in jQuery.

202
00:12:16.789 --> 00:12:18.837
&gt;&gt; Brian Holt: Yeah.

203
00:12:18.837 --> 00:12:20.468
&gt;&gt; Male Student 1: Are you talking about

204
00:12:20.468 --> 00:12:23.733
storing a reference to the jQuery object?

205
00:12:23.733 --> 00:12:27.652
I think yeah, so
saying dollar sign button and

206
00:12:27.652 --> 00:12:33.290
wrapping that in a jQuery and
then calling $(button).click.

207
00:12:41.450 --> 00:12:42.412
&gt;&gt; Male Student 1: Put a dollar sign in

208
00:12:42.412 --> 00:12:44.660
front of my button.
&gt;&gt; Brian Holt: Okay.

209
00:12:44.660 --> 00:12:45.571
&gt;&gt; Male Student 1: To show that it's

210
00:12:45.571 --> 00:12:50.211
a jQuery object.
&gt;&gt; Brian Holt: Something like that

211
00:12:50.211 --> 00:12:51.520
is also possible.

212
00:12:51.520 --> 00:12:55.700
You can store a reference
to these jQuery dom] notes,

213
00:12:55.700 --> 00:12:58.390
also totally works.
&gt;&gt; Female Student 1: You

214
00:12:58.390 --> 00:13:00.740
said it was really more of a statement?
&gt;&gt; Brian Holt: Yeah.

215
00:13:01.870 --> 00:13:03.600
Yeah, this is a useful pattern as well.

216
00:13:03.600 --> 00:13:07.360
So particularly if you can
reference it a bunch of times.

217
00:13:07.360 --> 00:13:11.630
Every time you do this, this dollar sign,
it does a look up on the dom.

218
00:13:11.630 --> 00:13:14.050
While it's quite fast, it's not free.

219
00:13:14.050 --> 00:13:18.540
So if you're gonna reference it a bunch of
times, it's a good idea to store it and

220
00:13:18.540 --> 00:13:19.990
then call those functions like that.

