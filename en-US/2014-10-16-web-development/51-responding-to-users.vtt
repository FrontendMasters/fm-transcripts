WEBVTT

1
00:00:00.000 --> 00:00:03.931
[MUSIC]

2
00:00:03.931 --> 00:00:06.891
&gt;&gt; Male Student 1: What happens if
you give the text function we've

3
00:00:06.891 --> 00:00:08.710
written an argument?

4
00:00:08.710 --> 00:00:12.180
Will it be called or
will jQuery text function be called?

5
00:00:12.180 --> 00:00:15.700
&gt;&gt; Brian Holt: Say that one more time.

6
00:00:15.700 --> 00:00:18.240
&gt;&gt; Male Student 1: What happens if
we give the text function we've

7
00:00:18.240 --> 00:00:19.820
written an argument?

8
00:00:19.820 --> 00:00:22.468
Will it be called or
will the jQuery text function be called?

9
00:00:22.468 --> 00:00:24.770
I guess, [INAUDIBLE].

10
00:00:24.770 --> 00:00:25.380
&gt;&gt; Brian Holt: Okay.

11
00:00:25.380 --> 00:00:31.580
So this is kind of talking
about overloading a method.

12
00:00:31.580 --> 00:00:33.282
It doesn't exist in JavaScript.

13
00:00:35.586 --> 00:00:40.408
&gt;&gt; Brian Holt: So the answer is,
if you call text with no parameters

14
00:00:40.408 --> 00:00:45.562
versus one parameter,
versus two parameters it's not

15
00:00:45.562 --> 00:00:50.510
like Java will actually
refer to a different method.

16
00:00:50.510 --> 00:00:52.960
It all refers to the same method.

17
00:00:52.960 --> 00:00:55.941
And it's up to your JavaScript
that you write to deal

18
00:00:55.941 --> 00:00:57.990
with those different parameters.

19
00:01:02.182 --> 00:01:04.792
&gt;&gt; Brian Holt: Here we're now actually
going to leverage those anonymous

20
00:01:04.792 --> 00:01:06.520
functions that we were talking about.

21
00:01:08.450 --> 00:01:09.810
Something that happens, sorry.

22
00:01:09.810 --> 00:01:10.470
Go ahead.

23
00:01:10.470 --> 00:01:12.456
&gt;&gt; Male Student 1: Now I
think they're saying,

24
00:01:12.456 --> 00:01:16.513
what if you even just did find
your own function called text.

25
00:01:20.620 --> 00:01:24.210
&gt;&gt; Male Student 1: Object.text
versus dollar sign dot text.

26
00:01:26.240 --> 00:01:31.500
If you created your own object and
had a text method on that.

27
00:01:32.990 --> 00:01:34.720
&gt;&gt; Brian Holt: Which you want to call?

28
00:01:34.720 --> 00:01:35.220
&gt;&gt; Male Student 1: Right.

29
00:01:37.230 --> 00:01:41.570
&gt;&gt; Brian Holt: I guest it depends if it's
a jQuery object, if it is a jQuery object

30
00:01:41.570 --> 00:01:45.900
you can't overwrite your text method and
then call your own.

31
00:01:45.900 --> 00:01:47.350
That is a possibility.

32
00:01:47.350 --> 00:01:50.100
&gt;&gt; Male Student 1: But if it was
a completely separate object it would be

33
00:01:50.100 --> 00:01:52.440
calling your implementation.

34
00:01:52.440 --> 00:01:53.550
&gt;&gt; Brian Holt: Calling
your implementation.

35
00:01:53.550 --> 00:01:56.680
So jQuery only modifies it's own objects.

36
00:01:56.680 --> 00:02:01.180
It doesn't actually go and override other
things objects or methods or whatever.

37
00:02:02.690 --> 00:02:03.910
Does that address it?

38
00:02:03.910 --> 00:02:05.060
&gt;&gt; Male Student 1: I'll check here.

39
00:02:05.060 --> 00:02:08.700
&gt;&gt; Brian Holt: Okay,
let's talk about pressing buttons, right.

40
00:02:08.700 --> 00:02:12.910
It's a common practice that you'll
press a button on a website.

41
00:02:12.910 --> 00:02:14.450
And it'll do something, right.

42
00:02:14.450 --> 00:02:20.210
So you want to have that ability
to react to user inputs.

43
00:02:21.550 --> 00:02:24.720
So in this particular case,
we have a button right here.

44
00:02:24.720 --> 00:02:27.580
So button class="alert-btn".

45
00:02:27.580 --> 00:02:28.780
It says click me on it.

46
00:02:30.420 --> 00:02:33.306
So now that we click it,
it's gonna say, hey there.

47
00:02:36.367 --> 00:02:37.626
&gt;&gt; Brian Holt: Let's talk
about how we did that.

48
00:02:37.626 --> 00:02:40.229
Let's just make this a lot bigger here.

49
00:02:44.549 --> 00:02:47.040
&gt;&gt; Brian Holt: Okay,
we grab alert button here.

50
00:02:47.040 --> 00:02:50.370
This should look familiar from
what we were doing last time.

51
00:02:50.370 --> 00:02:52.990
And then there is a thing
called the .click function.

52
00:02:54.110 --> 00:02:58.896
That's essentially saying, every time my
button gets clicked, run this function.

53
00:02:58.896 --> 00:03:03.200
So again, I can click it again and
again, and again, and

54
00:03:03.200 --> 00:03:05.150
again it happens every single time.

55
00:03:07.320 --> 00:03:14.000
So what's actually happening
here in JavaScript or at least

56
00:03:14.000 --> 00:03:16.840
in the dom which is the document object
model, we talked a little about that.

57
00:03:17.850 --> 00:03:23.480
There is a thing called an event, so
every time I click on this, whether or

58
00:03:23.480 --> 00:03:26.000
not I'm listening for
the event, it happens, right.

59
00:03:26.000 --> 00:03:30.170
Like JavaScript,
like I'm clicking right here in the body.

60
00:03:30.170 --> 00:03:33.290
JavaScript is throwing off all of these
events for me clicking on the body and

61
00:03:33.290 --> 00:03:36.910
just nothing is happening because
no one is listening right.

62
00:03:36.910 --> 00:03:39.660
It's kind of those things like
a tree falls in the forest kind of

63
00:03:39.660 --> 00:03:40.560
problem, right.

64
00:03:41.690 --> 00:03:45.558
So in this particular case, when we say,
call this .click function the tree

65
00:03:45.558 --> 00:03:49.141
is falling in the forest and
we're listening, so it does make a sound.

66
00:03:53.312 --> 00:03:55.828
&gt;&gt; Brian Holt: So yeah,
when call the click function,

67
00:03:55.828 --> 00:04:00.342
it is essentially saying I want to be
notified when this event happens and

68
00:04:00.342 --> 00:04:03.530
I want you to run this block of code.

69
00:04:03.530 --> 00:04:06.800
All right, so here I'm saying,
alert("Hey there!"), so

70
00:04:06.800 --> 00:04:10.100
every time this is clicked
it calls hey there.

71
00:04:10.100 --> 00:04:12.210
That kinda make sense?

72
00:04:13.270 --> 00:04:15.950
There's lots of events
in JavaScript [COUGH].

73
00:04:15.950 --> 00:04:19.930
Click is just happens to be one of
the most commonly used one, right.

74
00:04:19.930 --> 00:04:23.725
Because that's usually a direct sign of
user interaction with your website than

75
00:04:23.725 --> 00:04:26.816
when they click on something,
they expect something to happen.

76
00:04:26.816 --> 00:04:28.416
So you should be listening for it.

77
00:04:29.792 --> 00:04:31.072
&gt;&gt; Brian Holt: Questions about this?

78
00:04:34.880 --> 00:04:41.550
&gt;&gt; Male Student 2: That single click event
or the action of clicking on that button.

79
00:04:41.550 --> 00:04:44.820
Actually, created a whole
stream of events, correct.

80
00:04:44.820 --> 00:04:49.160
It's just that we're listening for
the alert button click.

81
00:04:49.160 --> 00:04:49.880
&gt;&gt; Brian Holt: Yeah.

82
00:04:49.880 --> 00:04:52.690
&gt;&gt; Male Student 2: Cuz there's actually
a click in the context of the browser

83
00:04:52.690 --> 00:04:53.470
window as well.

84
00:04:53.470 --> 00:04:54.820
&gt;&gt; Brian Holt: Right.

85
00:04:54.820 --> 00:04:56.100
Definitely.

86
00:04:56.100 --> 00:04:56.970
&gt;&gt; Male Student 1: I
didn't catch all that.

87
00:04:56.970 --> 00:04:59.270
It might have addressed that,
but they're asking,

88
00:04:59.270 --> 00:05:04.140
can you explain more on how events are set
up in the DOM and how it exactly listens.

89
00:05:04.140 --> 00:05:10.589
&gt;&gt; Brian Holt: The question is
always how much depth to go into.

90
00:05:16.402 --> 00:05:22.550
&gt;&gt; Brian Holt: I'm gonna one defer
to the other jQuery class with Carl.

91
00:05:22.550 --> 00:05:28.170
I'm sure he touches on it
much more than then I should.

92
00:05:29.770 --> 00:05:34.860
But essentially every time that you
press a key, you click on something,

93
00:05:34.860 --> 00:05:40.090
you move your mouse, your mouse enters
something, your mouse leaves something.

94
00:05:40.090 --> 00:05:43.990
You push down the mouse button, you let up
the mouse button, you click the button,

95
00:05:43.990 --> 00:05:44.950
you double click the button.

96
00:05:44.950 --> 00:05:47.954
Those are all different events
that the browser will fire.

97
00:05:47.954 --> 00:05:52.500
And essentially,
the browser does is it says, hey,

98
00:05:52.500 --> 00:05:57.310
an event happened here and then it kinda
just bubbles up and different things.

99
00:05:57.310 --> 00:05:59.840
So you can have multiple
things listening for example.

100
00:06:01.600 --> 00:06:09.570
If I say, (' .alert-btn').click,
I mean this is contrived.

101
00:06:09.570 --> 00:06:16.136
You really would just put it up here,
but let's just, I can spell function.

102
00:06:20.723 --> 00:06:22.600
&gt;&gt; Brian Holt: And we'll say like.

103
00:06:27.283 --> 00:06:32.285
&gt;&gt; Brian Holt:
$('alert-btn').text('changed'), right.

104
00:06:47.670 --> 00:06:52.051
&gt;&gt; Brian Holt: Hope yeah,
period right there.

105
00:06:52.051 --> 00:06:57.490
Okay, so
what I'm trying to demonstrate here is,

106
00:06:57.490 --> 00:07:01.540
like these events bubble up, and there can
be many people listening for these events.

107
00:07:01.540 --> 00:07:06.070
Essentially the browser says,
like hey this happened in the browser.

108
00:07:06.070 --> 00:07:09.610
And like everything all your listeners
can say, like we don't care.

109
00:07:09.610 --> 00:07:12.430
Like go pound sand or whatever.

110
00:07:12.430 --> 00:07:16.295
Or they can say like, okay that happened
I care, I'm gonna fire off my code now.

111
00:07:19.453 --> 00:07:24.256
&gt;&gt; Brian Holt: So in this particular case
alert-btn now has two different event

112
00:07:24.256 --> 00:07:29.340
listeners that are gonna do different
things based on those events.

113
00:07:29.340 --> 00:07:36.289
&gt;&gt; Male Student 2: So just declaring that
jQuery function call registers the event.

114
00:07:37.360 --> 00:07:41.270
There's no sequencing, or
no positioning dependency variable.

115
00:07:41.270 --> 00:07:41.978
&gt;&gt; Brian Holt: It's really that simple.

116
00:07:44.239 --> 00:07:46.772
&gt;&gt; Brian Holt: And
again that's why we are going over jQuery,

117
00:07:46.772 --> 00:07:49.250
it makes things like
this just deadly simple.

118
00:07:50.640 --> 00:07:53.730
&gt;&gt; Male Student 2: They are just
asking if the onclick and

119
00:07:53.730 --> 00:07:55.780
setting that to a function do it in HTML?

120
00:07:55.780 --> 00:08:01.010
Is that the same thing we're doing here,
it's just jQuery's taking care of it?

121
00:08:01.010 --> 00:08:03.320
&gt;&gt; Brian Holt: It amounts
to be the same thing.

122
00:08:03.320 --> 00:08:04.640
That's a really bad way to do it.

123
00:08:04.640 --> 00:08:08.070
You do not wanna put your
JavaScript into your HTML.

124
00:08:08.070 --> 00:08:11.500
It's just, it's the worst
thing you can do for yourself.

125
00:08:11.500 --> 00:08:12.409
Like stick to this.

126
00:08:13.510 --> 00:08:17.690
Now if you want to ask me, can you do
it in raw JavaScript without jQuery?

127
00:08:17.690 --> 00:08:20.610
That's fine, you can totally do it that
way and just not use jQuery at all.

128
00:08:22.430 --> 00:08:26.490
&gt;&gt; Male Student 2: What if you
wanted to reference something that

129
00:08:26.490 --> 00:08:30.970
didn't have a tag, or maybe does have
a tag but you don't know what it is.

130
00:08:30.970 --> 00:08:34.410
Like you wanted to change
the nav bar on the browser.

131
00:08:34.410 --> 00:08:37.700
Or you wanted to do some other device?

132
00:08:37.700 --> 00:08:40.860
&gt;&gt; Brian Holt: You need
some way to get at it.

133
00:08:40.860 --> 00:08:42.760
Whether that's a class, that's an ID,

134
00:08:42.760 --> 00:08:46.570
it's a tag name, you can't get at
something if you don't know what it is.

135
00:08:47.790 --> 00:08:50.380
So it can be defined dynamically, right.

136
00:08:50.380 --> 00:08:51.280
Like I could have like.

137
00:08:53.467 --> 00:08:56.810
&gt;&gt; Brian Holt: Var button, right.

138
00:08:56.810 --> 00:09:02.900
And that's equal to this and

139
00:09:02.900 --> 00:09:07.810
I can say, right there button and
here button as well.

140
00:09:09.400 --> 00:09:11.950
So that can be filled in
later dynamically, right.

141
00:09:11.950 --> 00:09:14.680
But you still have to give
it some indication like

142
00:09:14.680 --> 00:09:17.410
this is what I'm listening for, right.

143
00:09:17.410 --> 00:09:22.188
You can even get super annoying and

144
00:09:22.188 --> 00:09:25.830
say, like body, right.

145
00:09:25.830 --> 00:09:29.077
So any time the body is clicked,
it's gonna get really annoying with me.

146
00:09:32.170 --> 00:09:33.738
&gt;&gt; Brian Holt: Don't even have
to click on the body anymore.

147
00:09:33.738 --> 00:09:37.450
Oops, this page.

148
00:09:37.450 --> 00:09:39.637
So again, that can be changed
it can be dynamic, right.

149
00:09:39.637 --> 00:09:43.590
But.

150
00:09:43.590 --> 00:09:44.790
&gt;&gt; Male Student 2: So
it's only things that are in the dom,

151
00:09:44.790 --> 00:09:47.470
not anything that's outside
in the browser itself?

152
00:09:47.470 --> 00:09:50.070
&gt;&gt; Brian Holt: Okay, so
you can create synthetic events, right.

153
00:09:50.070 --> 00:09:55.340
Like that's possible like the browser
generates a bunch of really useful events.

154
00:09:55.340 --> 00:09:59.110
But you're talking about
outside the window.

155
00:09:59.110 --> 00:10:00.050
&gt;&gt; Male Student 2: Outside of the DOM.

156
00:10:01.390 --> 00:10:06.340
So if you wanted to modify,
there's websites you go to that open

157
00:10:06.340 --> 00:10:11.560
additional tabs, or things like that that
are outside of the context of the DOM.

158
00:10:11.560 --> 00:10:13.970
&gt;&gt; Brian Holt: So
your tab is pretty well sandboxed.

159
00:10:13.970 --> 00:10:19.160
For example, my codepen tap,
cannot listen to my Google.

160
00:10:19.160 --> 00:10:21.340
That's a huge privacy implication, right.

161
00:10:21.340 --> 00:10:25.610
You don't want other people
listening on what you're doing.

162
00:10:25.610 --> 00:10:28.530
So you are confine to your webpage,
whatever that is.

163
00:10:29.550 --> 00:10:35.280
There's minor exceptions to it but
I won't worry about it.

164
00:10:35.280 --> 00:10:38.500
You can only listen to your own stuff,
that's the bottom line.

165
00:10:38.500 --> 00:10:39.150
&gt;&gt; Male Student 2: What if about things,

166
00:10:39.150 --> 00:10:42.230
like if you were writing an app for like
a mobile device where you're looking for

167
00:10:42.230 --> 00:10:46.150
tilt angle like an accelerometer or
something like that?

168
00:10:46.150 --> 00:10:47.935
And how would you reference that event?

169
00:10:51.498 --> 00:10:53.766
&gt;&gt; Brian Holt: So
the short answer to that is,

170
00:10:53.766 --> 00:10:56.917
a lot of that can't be
done in the browser.

171
00:10:56.917 --> 00:11:01.535
You have to drop into a mobile app, where
you actually have access to those APIs.

172
00:11:01.535 --> 00:11:03.477
&gt;&gt; Male Student 1: Isn't
there accelerometer API.

173
00:11:03.477 --> 00:11:05.674
&gt;&gt; Brian Holt: I think there is but
I've never used it.

174
00:11:05.674 --> 00:11:07.135
So I'm not [INAUDIBLE].

175
00:11:07.135 --> 00:11:08.899
&gt;&gt; Male Student 1: [INAUDIBLE]
Device orientation.

176
00:11:08.899 --> 00:11:11.118
It's called device orientation API.

177
00:11:11.118 --> 00:11:12.558
&gt;&gt; Male Student 2: Does GPS.

178
00:11:12.558 --> 00:11:13.219
&gt;&gt; Male Student 1: Right.

179
00:11:13.219 --> 00:11:13.923
Yeah.

180
00:11:13.923 --> 00:11:20.105
[CROSSTALK] To get the way
that the API works.

181
00:11:20.105 --> 00:11:21.428
&gt;&gt; Brian Holt: That one exists.

182
00:11:21.428 --> 00:11:25.280
&gt;&gt; Male Student 1: You ask giant
permission to see location and

183
00:11:25.280 --> 00:11:30.600
then user clicks yes, and
then you get a location out there.

184
00:11:30.600 --> 00:11:32.400
And so it's called the view location API.

185
00:11:32.400 --> 00:11:36.260
&gt;&gt; Brian Holt: Yeah,
some of it does exist.

186
00:11:36.260 --> 00:11:37.520
But yeah.
&gt;&gt; Male Student 1: Some that's

187
00:11:37.520 --> 00:11:41.869
to discuss in the intro to HTML 5,
and this three course [INAUDIBLE].

188
00:11:41.869 --> 00:11:46.439
&gt;&gt; Brian Holt: Good question for sure.

189
00:11:46.439 --> 00:11:48.750
&gt;&gt; Female Student 1: So
there's a question of mine.

190
00:11:48.750 --> 00:11:55.430
Somebody is asking, so you can define
it like this bar dollar sign element

191
00:11:55.430 --> 00:12:02.449
with no parentheses equals
$ element with parenthesis.

192
00:12:02.449 --> 00:12:04.352
I'm not sure if that makes sense.

193
00:12:07.658 --> 00:12:13.514
&gt;&gt; Female Student 1: $ var $ element
is not really used in jQuery.

194
00:12:16.789 --> 00:12:18.837
&gt;&gt; Brian Holt: Yeah.

195
00:12:18.837 --> 00:12:23.733
&gt;&gt; Male Student 1: Are you talking about
storing a reference to the jQuery object?

196
00:12:23.733 --> 00:12:27.652
I think yeah, so
saying dollar sign button and

197
00:12:27.652 --> 00:12:33.290
wrapping that in a jQuery and
then calling $(button).click.

198
00:12:41.450 --> 00:12:44.220
&gt;&gt; Male Student 1: Put a dollar
sign in front of my button.

199
00:12:44.220 --> 00:12:44.781
&gt;&gt; Brian Holt: Okay.
&gt;&gt; Male Student 1: To

200
00:12:44.781 --> 00:12:46.488
show that it's a jQuery object.

201
00:12:48.824 --> 00:12:51.520
&gt;&gt; Brian Holt: Something
like that is also possible.

202
00:12:51.520 --> 00:12:57.680
You can store a reference to these
jQuery dom] notes, also totally works.

203
00:12:57.680 --> 00:12:59.570
&gt;&gt; Female Student 1: You said it
was really more of a statement?

204
00:13:00.600 --> 00:13:01.870
&gt;&gt; Brian Holt: Yeah.

205
00:13:01.870 --> 00:13:03.600
Yeah, this is a useful pattern as well.

206
00:13:03.600 --> 00:13:07.360
So particularly if you can
reference it a bunch of times.

207
00:13:07.360 --> 00:13:11.630
Every time you do this, this dollar sign,
it does a look up on the dom.

208
00:13:11.630 --> 00:13:14.050
While it's quite fast, it's not free.

209
00:13:14.050 --> 00:13:18.540
So if you're gonna reference it a bunch of
times, it's a good idea to store it and

210
00:13:18.540 --> 00:13:19.990
then call those functions like that.

