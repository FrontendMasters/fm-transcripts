WEBVTT

1
00:00:00.000 --> 00:00:03.839
[MUSIC]

2
00:00:03.839 --> 00:00:08.010
&gt;&gt; Nina Zakharenko: So the way that
we store values in JavaScript is with

3
00:00:08.010 --> 00:00:09.079
variables.

4
00:00:09.079 --> 00:00:13.450
And you can either declare it and
initialize it online,

5
00:00:13.450 --> 00:00:16.730
which is what you'll usually see.

6
00:00:16.730 --> 00:00:22.190
Or you can declare it first and then
initialize it somewhere down the line.

7
00:00:22.190 --> 00:00:26.699
Until that value is initialized,
that variable, it has no value.

8
00:00:29.699 --> 00:00:33.780
&gt;&gt; Nina Zakharenko: And really important
to consider, don't forget the var.

9
00:00:34.960 --> 00:00:36.880
Like right here, this var y.

10
00:00:36.880 --> 00:00:42.230
Don't forget that keyword when you're
using a variable for the very first time.

11
00:00:42.230 --> 00:00:44.440
If you don't have it in there, and

12
00:00:44.440 --> 00:00:49.460
you use that same variable name again,
you might accidentally overwrite it.

13
00:00:49.460 --> 00:00:52.902
And we'll talk about scope
a little bit more in detail later.

14
00:00:55.422 --> 00:00:59.337
&gt;&gt; Nina Zakharenko: So Brian mentioned
some of this before how to it applies

15
00:00:59.337 --> 00:01:00.490
to CSS.

16
00:01:00.490 --> 00:01:06.930
So for CSS, classes, for example,
you name them word dash word.

17
00:01:06.930 --> 00:01:10.940
In JavaScript,
we name our variables in camelCase.

18
00:01:10.940 --> 00:01:13.820
So that's lowercase word and then

19
00:01:15.890 --> 00:01:20.240
word with an uppercase first letter is
the next word, and so on and so on.

20
00:01:22.340 --> 00:01:27.310
Variables either start with a lowercase
letter, a dollar sign, or an underscore.

21
00:01:27.310 --> 00:01:33.430
But make sure they don't contain any
special symbols like exclamation point or

22
00:01:33.430 --> 00:01:36.280
pound, hashtag,
whatever you wanna call it.

23
00:01:36.280 --> 00:01:38.312
That's not supported,
and you'll get an error.

24
00:01:41.072 --> 00:01:43.960
&gt;&gt; Nina Zakharenko: So some words
are reserved by the JavaScript language.

25
00:01:43.960 --> 00:01:46.120
And they can't be used as
variable names either.

26
00:01:48.700 --> 00:01:52.630
For a beginner this is kind of a weird
error cuz you'll get an error and

27
00:01:52.630 --> 00:01:54.530
your code looks right.

28
00:01:54.530 --> 00:01:58.390
And you aren't really
sure what's going on.

29
00:01:58.390 --> 00:02:03.470
But these are some pretty common words
that you can't use as JavaScript variables

30
00:02:03.470 --> 00:02:07.700
like in or do, this, for.

31
00:02:07.700 --> 00:02:09.804
There's a pretty long list of them and

32
00:02:09.804 --> 00:02:13.968
after class you can go through it there's
a link on the bottom of the slide.

33
00:02:16.688 --> 00:02:20.370
&gt;&gt; Nina Zakharenko: So,
variables can be of different types.

34
00:02:20.370 --> 00:02:22.980
And JavaScript is cool
because it's dynamic.

35
00:02:22.980 --> 00:02:28.190
You don't have to let it know what type of
variable is gonna be before you use it.

36
00:02:28.190 --> 00:02:31.690
So, strings are contained in two quotes.

37
00:02:33.670 --> 00:02:39.010
It's any sort of characters, numbers
that you won't be using mathematically.

38
00:02:40.450 --> 00:02:45.910
Numbers don't have the quotes and
they can be with or without the decimal.

39
00:02:47.800 --> 00:02:52.614
So if we go
&gt;&gt; Nina Zakharenko: Back into

40
00:02:52.614 --> 00:02:56.348
our
&gt;&gt; Nina Zakharenko: Console here.

41
00:03:01.408 --> 00:03:03.258
&gt;&gt; Nina Zakharenko: Sorry,
I'm trying to make it bigger, it's.

42
00:03:07.978 --> 00:03:08.698
&gt;&gt; Nina Zakharenko: There we go.

43
00:03:12.578 --> 00:03:15.558
&gt;&gt; Nina Zakharenko: Can
everyone see that font?

44
00:03:15.558 --> 00:03:17.968
So, let's try to declare some variables.

45
00:03:22.048 --> 00:03:24.593
&gt;&gt; Nina Zakharenko: So
this variable is called name and

46
00:03:24.593 --> 00:03:27.590
it's a string because it's in quotes.

47
00:03:30.130 --> 00:03:35.190
If you press enter,
you'll see undefined which means that

48
00:03:35.190 --> 00:03:40.720
running this line of code,
didn't return anything.

49
00:03:40.720 --> 00:03:42.390
To make one more variable called age.

50
00:03:44.440 --> 00:03:45.330
This one's a number.

51
00:03:47.000 --> 00:03:51.870
So in JavaScript if you wanna
see the type of variable,

52
00:03:53.290 --> 00:03:55.320
you can use this typeof command.

53
00:03:55.320 --> 00:03:58.950
And it's a special function.

54
00:03:58.950 --> 00:04:03.160
You're not calling it with parenthesis,
which you'll see later one.

55
00:04:03.160 --> 00:04:06.100
So just note that this
one isn't gonna look

56
00:04:06.100 --> 00:04:08.220
like some of the other things
you're going to try today.

57
00:04:09.260 --> 00:04:17.680
So, if we do typeof name, we're gonna get
back a string, typeof age is a number.

58
00:04:17.680 --> 00:04:20.415
We'll talk about functions later on but

59
00:04:20.415 --> 00:04:23.800
let's create an empty one
let's call it myFunc.

60
00:04:31.326 --> 00:04:35.395
&gt;&gt; Nina Zakharenko: So a totally empty
function it takes no arguments if we do

61
00:04:35.395 --> 00:04:38.522
typeof myFunc we'll get back a function.

62
00:04:54.140 --> 00:04:58.660
&gt;&gt; Nina Zakharenko: So another kind
of variable type is a Boolean.

63
00:04:58.660 --> 00:05:01.600
And Booleans can have two values.

64
00:05:01.600 --> 00:05:05.900
True which is yes or false which is no.

65
00:05:09.260 --> 00:05:14.530
There are also special types,
if you declare a variable and

66
00:05:14.530 --> 00:05:19.250
you don't set you don't put anything
in it the value of that is undefined.

67
00:05:21.170 --> 00:05:25.720
If you want to explicitly empty
a variable you can set it to null.

68
00:05:25.720 --> 00:05:26.840
And that'll clear out the value.

