WEBVTT

1
00:00:00.000 --> 00:00:03.941
[MUSIC]

2
00:00:03.941 --> 00:00:09.305
&gt;&gt; Speaker 1: So something really
important to note here is that Linux and

3
00:00:09.305 --> 00:00:13.940
Mac OS, those files are case sensitive.

4
00:00:13.940 --> 00:00:18.830
So what that means is if you have
all lower case, and you try to refer

5
00:00:18.830 --> 00:00:23.870
to maybe an extension that's all upper
case, those files are not the same.

6
00:00:25.810 --> 00:00:28.130
Except Windows doesn't really care.

7
00:00:29.780 --> 00:00:32.740
So that's really something
to be mindful of, yeah.

8
00:00:34.780 --> 00:00:36.651
Windows honey badger don't care.

9
00:00:38.892 --> 00:00:42.701
&gt;&gt; Speaker 1: So to navigate to
a different directory, we would use cd,

10
00:00:42.701 --> 00:00:45.690
which I showed in the slide before.

11
00:00:45.690 --> 00:00:47.820
Stands for change directory.

12
00:00:47.820 --> 00:00:52.764
On Windows we would use chdir.

13
00:00:52.764 --> 00:00:56.900
So a little bit of a more
of verbose command.

14
00:00:58.420 --> 00:01:01.385
If we wanted to move up one directory, and

15
00:01:01.385 --> 00:01:04.451
I could do a quick demo of this for
you guys.

16
00:01:07.651 --> 00:01:09.520
&gt;&gt; Speaker 1: So here is Brian's terminal.

17
00:01:10.990 --> 00:01:17.490
We can go ahead and use some of
those commands that we learned.

18
00:01:17.490 --> 00:01:23.890
So pwd will tell us
that we're currently in

19
00:01:23.890 --> 00:01:30.520
the /Users/brian/talks/intro-to-webdev
directory.

20
00:01:30.520 --> 00:01:35.320
If I wanted to see what the contents of
this directory were, I could type ls,

21
00:01:36.880 --> 00:01:42.280
and I could see that we have some
files and some folders here.

22
00:01:43.570 --> 00:01:50.350
If I wanted to use a flag,
this ls command accepts a flag, -l.

23
00:01:50.350 --> 00:01:55.456
So this is sending in
an option to this ls command.

24
00:01:55.456 --> 00:01:58.246
So, -l means I want this stuff as a list.

25
00:01:58.246 --> 00:02:01.760
And even though we're
running the same commands,

26
00:02:01.760 --> 00:02:04.140
we're getting the information
back in a different format.

27
00:02:06.450 --> 00:02:08.210
So to move up one directory,

28
00:02:09.410 --> 00:02:14.240
you type in this cd command, and
you follow it by two spaces.

29
00:02:16.940 --> 00:02:21.915
So now, if we do our pwd again,
we'll see that instead of being

30
00:02:21.915 --> 00:02:28.790
intro-to-webdev-app followed by the app
folder, we've moved up one directory back.

31
00:02:28.790 --> 00:02:33.180
So we hopped up to the parent directory.

32
00:02:33.180 --> 00:02:35.801
Does this make sense to everyone?

33
00:02:35.801 --> 00:02:37.521
Yeah, all right.

34
00:02:40.260 --> 00:02:43.000
&gt;&gt; Speaker 1: So
this is a really important slide.

35
00:02:44.110 --> 00:02:48.590
And relative versus absolute paths is

36
00:02:48.590 --> 00:02:53.860
something you'll just come across over and
over and over again in web development.

37
00:02:53.860 --> 00:02:58.520
So a relative path is
a path that starts from

38
00:02:58.520 --> 00:03:00.980
the point in the directory
structure that you are in,

39
00:03:02.430 --> 00:03:06.810
while an absolute path means it starts
all the way from the beginning.

40
00:03:09.140 --> 00:03:11.540
So let's go back to our terminal.

41
00:03:13.880 --> 00:03:18.840
And we'll go back up one directory.

42
00:03:18.840 --> 00:03:21.160
We'll do our directory listing.

43
00:03:21.160 --> 00:03:25.500
So here Brian has a bunch of different
folders that I represented in pink.

44
00:03:26.990 --> 00:03:32.820
If I wanted to get at something that
was in the files folder from this point

45
00:03:32.820 --> 00:03:37.718
in our directory structure,
which we can see via pwd, so

46
00:03:37.718 --> 00:03:42.760
we're in Users/brian/talks,
we can just say files, whatever.

47
00:03:42.760 --> 00:03:46.900
Like whatever file is in here,
we can access it from here.

48
00:03:46.900 --> 00:03:50.980
And the important thing to note
here is there is no forward slash

49
00:03:50.980 --> 00:03:53.150
at the beginning of files.

50
00:03:56.970 --> 00:04:02.790
If I wanted to get to this file from
anywhere else in the tree structure,

51
00:04:02.790 --> 00:04:06.864
and know that I was always
starting from the root,

52
00:04:06.864 --> 00:04:10.261
you would type this forward slash first.

53
00:04:10.261 --> 00:04:15.180
And that forward slash is just the root
of all the files here on the Mac.

54
00:04:15.180 --> 00:04:20.090
So if I navigate to here and
list my files, we'll see everything.

55
00:04:20.090 --> 00:04:24.629
We got our applications folder,
the library folders, the users.

56
00:04:25.670 --> 00:04:32.670
So, from here, to access that talks
directory, we would do Users/brian/talks,

57
00:04:32.670 --> 00:04:38.630
and then we would do files and
access anything in that files directory.

58
00:04:38.630 --> 00:04:40.551
So, that's providing the whole path.

59
00:04:44.311 --> 00:04:46.897
&gt;&gt; Speaker 1: When you're
doing web development,

60
00:04:46.897 --> 00:04:52.910
a lot of times you'll be trying to access
files and directories in a relative way.

61
00:04:52.910 --> 00:04:58.030
So in your web app, for example, you'll
have a public folder that might have

62
00:04:58.030 --> 00:05:03.109
a js folder with all your JavaScript files
or an images folder with all your images.

63
00:05:05.050 --> 00:05:09.849
And so you would say, I want image,
and so I would do images,

64
00:05:09.849 --> 00:05:16.550
then the forward slash, which means the
folder, and then access the file in there.

65
00:05:16.550 --> 00:05:18.910
Does that make sense to everyone?

66
00:05:18.910 --> 00:05:19.500
Yeah?

67
00:05:19.500 --> 00:05:20.000
Cool.

68
00:05:21.480 --> 00:05:25.399
&gt;&gt; Speaker 2: Someone once explained to me
relative paths versus absolute paths as

69
00:05:25.399 --> 00:05:26.622
addresses, right?

70
00:05:26.622 --> 00:05:31.330
An absolute address is like
she lives on 200 Main Street.

71
00:05:31.330 --> 00:05:34.399
If you know exactly where to go,
I could say from anywhere in the city,

72
00:05:34.399 --> 00:05:35.240
go to 200 Main.

73
00:05:35.240 --> 00:05:38.730
It doesn't matter where you are,
200 Main is the same spot.

74
00:05:38.730 --> 00:05:42.790
But if I'm giving you directions like go
down to the gas station, take a left and

75
00:05:42.790 --> 00:05:45.870
then take a right,
that is relative to where you are.

76
00:05:45.870 --> 00:05:48.360
And if you get that same direction
in another part of the city,

77
00:05:48.360 --> 00:05:49.440
it's no longer true.

78
00:05:49.440 --> 00:05:52.602
So that's relative from where you are and
where you're going.

79
00:05:52.602 --> 00:05:55.462
&gt;&gt; Speaker 1: Yeah, I really like
that analogy, that's a good one.

80
00:05:55.462 --> 00:05:56.360
Yeah?

81
00:05:56.360 --> 00:06:00.355
&gt;&gt; Speaker 3: Is anybody else having
trouble with the dir command on Windows,

82
00:06:00.355 --> 00:06:01.710
saying command not found?

83
00:06:01.710 --> 00:06:05.100
I don't know if when you
mentioned to open git,

84
00:06:05.100 --> 00:06:07.700
did you have them open
git bash on Windows?

85
00:06:07.700 --> 00:06:09.820
&gt;&gt; Speaker 1: So
just a quick note on that.

86
00:06:09.820 --> 00:06:12.730
If they're using git bash,
git bash is smart.

87
00:06:12.730 --> 00:06:16.810
And they can go ahead and
use the Linux style commands in git bash.

88
00:06:16.810 --> 00:06:19.630
&gt;&gt; Speaker 3: But then I think
the Windows ones won't work, right?

89
00:06:19.630 --> 00:06:20.140
&gt;&gt; Speaker 1: Right.
&gt;&gt; Speaker 3: And

90
00:06:20.140 --> 00:06:24.330
I think we might be-
&gt;&gt; Speaker 2: So if you're on Windows and

91
00:06:24.330 --> 00:06:31.521
you want to use the Windows commands open
the cmd.exe on your Windows computer.

92
00:06:31.521 --> 00:06:33.210
&gt;&gt; Speaker 1: If you are on Windows and

93
00:06:33.210 --> 00:06:37.701
want to use the Unix style commands
you can do those in git bash.

94
00:06:45.621 --> 00:06:49.980
&gt;&gt; Speaker 1: So here's a visual
kind of directory structure.

95
00:06:49.980 --> 00:06:51.340
Someone there is trying to hide something.

96
00:06:52.360 --> 00:06:55.120
But if I wanted to do

97
00:06:57.390 --> 00:07:01.945
an absolute path to c.html,
I would do forward slash WWW,

98
00:07:01.945 --> 00:07:06.868
forward slash the name of this bottom
folder, which is cut off here,

99
00:07:06.868 --> 00:07:11.590
forward slash c.html.

100
00:07:11.590 --> 00:07:16.769
Now if I was here in this XXX folder and
I wanted to access

101
00:07:16.769 --> 00:07:21.730
b.html I could just type b.html and
I'd be there.

