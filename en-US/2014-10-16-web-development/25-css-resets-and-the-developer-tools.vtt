WEBVTT

1
00:00:00.000 --> 00:00:03.777
[MUSIC]

2
00:00:03.777 --> 00:00:07.290
&gt;&gt; Speaker 1: The other question was
on resets, on why it's useful or not?

3
00:00:07.290 --> 00:00:09.940
&gt;&gt; Brian Holt: So,
there's such a thing as CSS reset.

4
00:00:11.240 --> 00:00:13.828
It's just a little tiny,
in fact, let's just go find it.

5
00:00:13.828 --> 00:00:21.070
I like meyerweb.css.reset.

6
00:00:23.590 --> 00:00:24.950
This is just a really smart guy.

7
00:00:26.000 --> 00:00:31.341
Don't quote me on it, I believe he

8
00:00:31.341 --> 00:00:37.070
is a Mozilla employee, Eric Meyer.

9
00:00:37.070 --> 00:00:40.949
He just gives you like this really
general CSS style sheet that takes

10
00:00:42.440 --> 00:00:50.650
all of those default stylings, you know
how the, sorry I lost my train of thought.

11
00:00:50.650 --> 00:00:54.620
You know how the headers are bold and
different sizes and stuff like that?

12
00:00:54.620 --> 00:00:58.640
It takes all of that default styling and
just does away with them.

13
00:00:58.640 --> 00:01:02.940
And so, everything just starts from
a very normal, very same place.

14
00:01:02.940 --> 00:01:03.700
Why is that useful?

15
00:01:03.700 --> 00:01:06.940
Because different browsers have
different default styles which is really

16
00:01:06.940 --> 00:01:08.460
frustrating.

17
00:01:08.460 --> 00:01:11.787
Something you're gonna find out if you
go further in front-end development is

18
00:01:11.787 --> 00:01:15.175
supporting different browsers is hard
because they all do things differently.

19
00:01:16.535 --> 00:01:19.875
So what this does is it gets all
the browsers on equal footing.

20
00:01:22.105 --> 00:01:23.065
Now what do I recommend about it?

21
00:01:23.065 --> 00:01:24.105
I recommend using them.

22
00:01:24.105 --> 00:01:25.965
You should use something like this.

23
00:01:25.965 --> 00:01:29.305
In fact, I recommend this very one.

24
00:01:29.305 --> 00:01:33.791
But no, seriously, margin 0, padding 0,
border 0, font size 100%, font inherit,

25
00:01:33.791 --> 00:01:35.935
vertical-align baseline.

26
00:01:35.935 --> 00:01:38.390
Just very sane defaults that

27
00:01:38.390 --> 00:01:40.980
kind of bring all of the browsers
onto a level playing field.

28
00:01:42.740 --> 00:01:48.620
So, just search for
Meyer web CSS reset and you'll find it.

29
00:01:48.620 --> 00:01:51.610
Or, you could even search for CSS reset
and I think it's still the top result.

30
00:01:54.930 --> 00:01:58.150
That's the CSS reset,
it's just like a little tiny stylesheet.

31
00:01:58.150 --> 00:01:59.780
&gt;&gt; Speaker 3: I use normalize.

32
00:01:59.780 --> 00:02:01.230
&gt;&gt; Brian Holt: Normalize
works really well.

33
00:02:01.230 --> 00:02:06.456
Yeah, all of them work.

34
00:02:06.456 --> 00:02:07.670
They're all pretty similar, too.

35
00:02:14.120 --> 00:02:17.220
Cool, and then we asked a little
bit about the developer tools.

36
00:02:17.220 --> 00:02:19.060
Let's just check it out for a second.

37
00:02:19.060 --> 00:02:20.760
So again, Inspect Element, right?

38
00:02:23.920 --> 00:02:26.350
So, I have also no class right here.

39
00:02:26.350 --> 00:02:30.890
See that it's background color's cyan,
border red.

40
00:02:30.890 --> 00:02:32.890
So, you can kind of see
the cascade effect here, right?

41
00:02:32.890 --> 00:02:35.169
Because it says parent-div,
div and then this one shows up.

42
00:02:35.169 --> 00:02:40.001
And if you scroll down, this one is still
trying to enforce it's background color,

43
00:02:40.001 --> 00:02:43.830
but it's being outspecified by this one,
so it gets crossed out.

44
00:02:45.260 --> 00:02:48.018
So like if I undo this one,
if I uncheck it,

45
00:02:48.018 --> 00:02:50.789
now it's gonna be back to orange, right?

46
00:02:50.789 --> 00:02:55.590
That kind of makes sense
what's going on there?

47
00:02:56.980 --> 00:02:59.220
Keep in mind that as soon
as I refresh the page,

48
00:02:59.220 --> 00:03:02.020
everything that I do in
this inspector goes away.

49
00:03:03.600 --> 00:03:08.933
Or another interesting thing if I look
here at this two ids plus classes and

50
00:03:08.933 --> 00:03:10.749
I Inspect Element here.

51
00:03:10.749 --> 00:03:14.480
Notice that it says element.style,
that's the elements own style.

52
00:03:14.480 --> 00:03:19.070
So, I did the inline style,
that's what this element.style is.

53
00:03:19.070 --> 00:03:21.250
It's pink, again, if I get rid of that,

54
00:03:21.250 --> 00:03:23.750
it goes back to purple,
what the ID was styled on.

55
00:03:26.720 --> 00:03:27.370
Good question.

56
00:03:27.370 --> 00:03:31.090
&gt;&gt; Speaker 1: I think, explain how you
could get the boxes to line up using

57
00:03:31.090 --> 00:03:37.260
float, I believe, and vertical align,
if you can explain that.

58
00:03:37.260 --> 00:03:38.780
&gt;&gt; Brian Holt: Vertical
align is another tough one.

59
00:03:39.890 --> 00:03:41.440
We'll talk about floats
here in just a sec.

60
00:03:44.490 --> 00:03:47.575
So I have this two classes right here,
right?

61
00:03:47.575 --> 00:03:50.890
But notice it's left-aligned.

62
00:03:50.890 --> 00:03:54.289
So if I go down here to the div one,
right here.

63
00:03:54.289 --> 00:03:56.048
So this is the one that's div, right?

64
00:03:56.048 --> 00:04:01.470
And I add a new thing that
says text-align: center,

65
00:04:01.470 --> 00:04:07.509
notice how all text now is
centered in all of these, right?

66
00:04:07.509 --> 00:04:11.130
Now the next question you might ask is,
how do I vertically align this?

67
00:04:12.340 --> 00:04:17.461
Vertical aligning is tough because
there's five different ways to do it and

68
00:04:17.461 --> 00:04:20.150
there's no one way to do it.

69
00:04:20.150 --> 00:04:22.380
It really depends on what you're doing,
where.

70
00:04:24.520 --> 00:04:30.600
There is a property that's
called vertical-align.

71
00:04:30.600 --> 00:04:35.006
I'll put it in here, vertical-align:

72
00:04:35.006 --> 00:04:40.120
middle; is what you'd put, but
notice it has absolutely no effect.

73
00:04:40.120 --> 00:04:41.060
Why does it not work?

74
00:04:41.060 --> 00:04:45.160
It only works on tables,
so it has to be like,

75
00:04:46.670 --> 00:04:50.950
it has to be put into a table, and
then have the table display in the middle.

76
00:04:50.950 --> 00:04:55.249
It's a total mess, I would recommend
probably never doing it that way.

77
00:04:55.249 --> 00:05:00.189
There is a lot of like, hacks to it.

78
00:05:00.189 --> 00:05:02.214
Like making the line height equal,

79
00:05:02.214 --> 00:05:06.030
like there's a thousand ways
to kind of hack it together.

80
00:05:06.030 --> 00:05:09.180
I'm not gonna go into them,
because they are really hacky and

81
00:05:09.180 --> 00:05:14.310
difficult to kind of
wrap your mind around.

82
00:05:14.310 --> 00:05:17.060
So, I would say there are lots
of resources on Google,

83
00:05:17.060 --> 00:05:21.780
such as Google that when you need to cross
that bridge but it's a huge pain the ass.

84
00:05:23.690 --> 00:05:28.979
And, I'll give you the reason,
the reason is that, document flow.

85
00:05:28.979 --> 00:05:33.460
The document's trying to fit as much
as they can on one line, so it's for

86
00:05:33.460 --> 00:05:35.430
the most part agnostic.

87
00:05:35.430 --> 00:05:38.391
for how tall things are, and it's really
worried about how wide things are.

88
00:05:38.391 --> 00:05:43.749
So everything's in terms
of how wide it is.

89
00:05:43.749 --> 00:05:47.879
And so because of that, when it creates
a div, it does not necessarily know

90
00:05:47.879 --> 00:05:52.271
how tall it's going to be when it first
creates it, because what happens is that

91
00:05:52.271 --> 00:05:55.510
it goes through and
has to render everything inside of it.

92
00:05:55.510 --> 00:05:58.290
And it will then have to go back out and

93
00:05:58.290 --> 00:06:02.180
center everything on the way back
out which is not really performant.

94
00:06:04.850 --> 00:06:08.300
Anyway, the tldr,

95
00:06:08.300 --> 00:06:13.760
the summary of that is that browsers
try to be agnostic to the height,

96
00:06:13.760 --> 00:06:15.150
and they just worry
mostly about the width.

