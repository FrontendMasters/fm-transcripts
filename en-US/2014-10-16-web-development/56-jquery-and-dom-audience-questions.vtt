WEBVTT

1
00:00:00.000 --> 00:00:03.706
[MUSIC]

2
00:00:03.706 --> 00:00:07.510
&gt;&gt; Brian Holt: We've been using just
part of the jQuery library so far.

3
00:00:07.510 --> 00:00:14.310
Like I said, the jQuery library is huge,
and the DOM manipulation part of it,

4
00:00:14.310 --> 00:00:20.280
while it is the most prevalent and
the most well used part of it, we will

5
00:00:20.280 --> 00:00:23.690
be talking about another part which is
called Ajax here in just one second, but

6
00:00:23.690 --> 00:00:27.260
we have some other questions to address.
&gt;&gt; Speaker 2: The first one is,

7
00:00:27.260 --> 00:00:30.380
why would you use jQuery to add and
remove styling classes,

8
00:00:30.380 --> 00:00:35.130
versus changing CSS directly?
&gt;&gt; Brian Holt: That's a great question,

9
00:00:35.130 --> 00:00:37.724
and the answer comes in
the form of it's reusable.

10
00:00:38.810 --> 00:00:43.125
So, if you're just changing CSS in the
JavaScript, it's kind of an anti-pattern

11
00:00:43.125 --> 00:00:46.429
and when I say anti-pattern it
means it's just not a good idea.

12
00:00:46.429 --> 00:00:52.627
Because if I put it into a CSS class and
then add and remove a class,

13
00:00:52.627 --> 00:00:57.970
I can now use that everywhere
on my website, right?

14
00:00:57.970 --> 00:01:01.030
For example, if I have an error
class that jQuery adds and removes,

15
00:01:01.030 --> 00:01:04.990
what happens if I load a page
with an error class, right?

16
00:01:04.990 --> 00:01:09.520
Then I kind of have bifurcated my efforts
here, that I have to maintain both

17
00:01:09.520 --> 00:01:13.230
the jQuery CSS and this other class
that mean essentially the same thing.

18
00:01:14.260 --> 00:01:16.000
Whereas, if I just add or remove classes,

19
00:01:16.000 --> 00:01:19.960
it's all available always to be
used across their entire website.

20
00:01:21.140 --> 00:01:25.460
Laziness, that's my key
answer right there.

21
00:01:25.460 --> 00:01:26.080
&gt;&gt; Speaker 2: And then the next

22
00:01:26.080 --> 00:01:30.490
question was, does the hidden
element still take up space

23
00:01:30.490 --> 00:01:31.452
then.
&gt;&gt; Brian Holt: So

24
00:01:31.452 --> 00:01:33.906
we saw this yesterday
when we talked about CSS.

25
00:01:33.906 --> 00:01:35.410
The answer is no to that question.

26
00:01:36.430 --> 00:01:40.790
When you set display to be none it
essentially takes the entire element out

27
00:01:40.790 --> 00:01:47.620
of the document flow so it essentially
has no bearing on the DOM itself.

28
00:01:49.856 --> 00:01:52.669
Good question, though.
&gt;&gt; Speaker 3: Well, it's still there,

29
00:01:52.669 --> 00:01:55.705
right, cuz you could just switch
that to not be hidden, and

30
00:01:55.705 --> 00:01:57.032
it would appear.
&gt;&gt; Brian Holt: Exactly.

31
00:01:57.032 --> 00:01:58.940
&gt;&gt; Speaker 3: Essentially go re-download

32
00:01:58.940 --> 00:02:02.819
that piece, so it's still there.
&gt;&gt; Brian Holt: It is still there, correct,

33
00:02:02.819 --> 00:02:04.395
definitely.

34
00:02:04.395 --> 00:02:07.255
You just have to say display block or
display inline or

35
00:02:07.255 --> 00:02:10.215
whatever it's supposed to be and
it would show back up.

36
00:02:10.215 --> 00:02:12.775
Or in this particular case
you would just say show.

37
00:02:14.815 --> 00:02:15.695
Yeah, it's still there.

38
00:02:15.695 --> 00:02:20.829
It's just not making any manifestation

39
00:02:20.829 --> 00:02:24.176
of itself, cool.
&gt;&gt; Speaker 4: Question,

40
00:02:24.176 --> 00:02:27.617
did I miss explanation
of the DOM in detail,

41
00:02:27.617 --> 00:02:32.453
kind of what happens with jQuery
pulling stuff out of the DOM,

42
00:02:32.453 --> 00:02:35.595
did you explain that?
&gt;&gt; Brian Holt: Not a whole lot,

43
00:02:35.595 --> 00:02:40.773
the DOM is a complicated beast,
and as supposed to diving in and

44
00:02:40.773 --> 00:02:43.816
getting really confusing about it.

45
00:02:43.816 --> 00:02:46.486
I think it's better to just
kind of take a surface,

46
00:02:46.486 --> 00:02:50.396
kind of take it as a black box right now
and say, this is very complicated but

47
00:02:50.396 --> 00:02:54.370
here's a couple buttons I know if I can
press and it will do certain things for

48
00:02:54.370 --> 00:02:58.827
me, but-
&gt;&gt; Speaker 3: There's an article on

49
00:02:58.827 --> 00:03:01.344
CSS Trader called What is the DOM?

50
00:03:01.344 --> 00:03:06.163
And it kinda explains
it very laymen's terms.

51
00:03:06.163 --> 00:03:09.265
It's basically a tree-like structure, and

52
00:03:09.265 --> 00:03:13.504
there's these elements.
&gt;&gt; Brian Holt: But when jQuery pulls

53
00:03:13.504 --> 00:03:18.796
something out of it, does it insert
something back into that DOM

54
00:03:18.796 --> 00:03:23.485
that's kind of a new HTML format or file?
&gt;&gt; Speaker 3: Well, when you use

55
00:03:23.485 --> 00:03:28.449
the jQuery object you're just wrapping
the element in the jQuery object so

56
00:03:28.449 --> 00:03:32.125
it's not taking it out of
the DOM in order to modify it.

57
00:03:32.125 --> 00:03:37.290
It's just doing it jQuery's way, right.

58
00:03:37.290 --> 00:03:39.850
It's not really like taking it out.

59
00:03:39.850 --> 00:03:45.800
If you say .remove that will
take it out of the DOM but-

60
00:03:45.800 --> 00:03:47.380
&gt;&gt; Brian Holt: So the simple answer to,

61
00:03:47.380 --> 00:03:51.730
I think what you're
confusing here is that,

62
00:03:51.730 --> 00:03:55.430
when I say get the user input, right.

63
00:03:55.430 --> 00:03:58.275
It's not actually yanking it out of the
DOM, it's actually just pointing at it.

64
00:03:58.275 --> 00:04:02.280
It's pointing at it where it is right now.

65
00:04:02.280 --> 00:04:04.810
So it's just referencing
what's already there.

66
00:04:04.810 --> 00:04:07.660
It's not pulling it out,
messing with it and putting it back.

67
00:04:07.660 --> 00:04:10.226
It's just changing it in its place.

68
00:04:10.226 --> 00:04:11.993
Does that make sense?
&gt;&gt; Speaker 4: Okay,

69
00:04:11.993 --> 00:04:13.180
yeah.
&gt;&gt; Brian Holt: Cool.

