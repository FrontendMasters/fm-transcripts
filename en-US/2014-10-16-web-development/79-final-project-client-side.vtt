WEBVTT

1
00:00:00.000 --> 00:00:03.809
[MUSIC]

2
00:00:03.809 --> 00:00:08.115
&gt;&gt; Brian Holt: We have now introduced all
the new concepts you would ever need to

3
00:00:08.115 --> 00:00:10.130
ever develop any app ever.

4
00:00:10.130 --> 00:00:11.580
No, that's actually not true, but

5
00:00:11.580 --> 00:00:15.420
we've introduced every concept that we're
going to introduce in this workshop.

6
00:00:15.420 --> 00:00:19.760
So from here on out this is just gonna be
a giant review and we're just going to

7
00:00:19.760 --> 00:00:26.090
code up essentially a very basic
version of Twitter/ It's not going

8
00:00:26.090 --> 00:00:29.430
to have any concept of users or followers
or re-tweets or anything like that.

9
00:00:29.430 --> 00:00:32.610
It's gonna be more like Secret,
if you've ever heard of the Secret app,

10
00:00:32.610 --> 00:00:36.420
that people are just going to post
little anonymous tweets out there.

11
00:00:37.670 --> 00:00:42.300
So we have an entire app just coded for
you that you can look at here.

12
00:00:42.300 --> 00:00:46.900
And the entire thing is already finished
and ready to go if you wanna look at it.

13
00:00:46.900 --> 00:00:50.460
&gt;&gt; Speaker 2: Cuz I have a quick
question about request.body when

14
00:00:50.460 --> 00:00:53.460
were that comes from or going from.

15
00:00:55.160 --> 00:00:59.530
&gt;&gt; Brian Holt: Sure, let's go ahead and
take a look at that, request.body.

16
00:00:59.530 --> 00:01:02.256
We refer to it here in posting.

17
00:01:02.256 --> 00:01:06.823
So right, request.body username,

18
00:01:06.823 --> 00:01:10.139
request.body password.

19
00:01:10.139 --> 00:01:14.710
So if we look at the posting.JS right
here, I'm setting up a username and

20
00:01:14.710 --> 00:01:18.810
password kind of like
payload with J Query, right?

21
00:01:18.810 --> 00:01:23.130
Now the server side needs
the ability to access that.

22
00:01:23.130 --> 00:01:24.720
It does it through the body.

23
00:01:24.720 --> 00:01:28.770
So if I called this like user, right?

24
00:01:28.770 --> 00:01:32.230
I would have to go back and
change this to be user.

25
00:01:32.230 --> 00:01:34.513
So it's just kinda this
contract of how the client and

26
00:01:34.513 --> 00:01:36.350
the server are going
to talk to each other.

27
00:01:37.720 --> 00:01:38.959
Does that make sense?

28
00:01:40.350 --> 00:01:40.850
Okay.

29
00:01:45.030 --> 00:01:47.450
So let's talk about our
project really quick.

30
00:01:47.450 --> 00:01:50.054
I'm going to go over the client
side development of it, and

31
00:01:50.054 --> 00:01:53.039
then I'm going to hand it off to
Nina to finish off the node portion.

32
00:01:55.518 --> 00:02:01.760
&gt;&gt; Brian Holt: Cool, so
If you haven't already cloned it,

33
00:02:01.760 --> 00:02:05.880
this is the address for that.

34
00:02:08.520 --> 00:02:12.420
And here essentially are the requirements,
like imagine the product team coming to

35
00:02:12.420 --> 00:02:17.390
you, you're going to build this app,
and saying here, we need this, and

36
00:02:17.390 --> 00:02:21.000
it's up to you to solve that problem.

37
00:02:21.000 --> 00:02:22.780
So we're going to write
a server in node.js,

38
00:02:22.780 --> 00:02:28.350
the server will serve the HTML,CSS and
JS necessary to run our server.

39
00:02:29.890 --> 00:02:34.560
It's going to accept a GET of the latest
servers, meaning it's going to accept

40
00:02:34.560 --> 00:02:37.319
an AJAX request to pull
down all the latest tweets.

41
00:02:38.710 --> 00:02:43.240
It's going to accept posts that
we're going to put out there, so

42
00:02:43.240 --> 00:02:45.100
that we can post new tweets.

43
00:02:46.200 --> 00:02:48.680
And then, for each new tweet,
the server will

44
00:02:51.830 --> 00:02:54.250
attach the time of when it was posted,
right?

45
00:02:54.250 --> 00:02:57.310
So, you can like, this was posted
yesterday, at 5 o clock, or

46
00:02:57.310 --> 00:02:58.610
this was posted ten minutes ago.

47
00:03:01.220 --> 00:03:05.354
So those are our basic requirements,

48
00:03:05.354 --> 00:03:10.440
then we're going to create

49
00:03:10.440 --> 00:03:15.390
a webapp that's going to make
an Ajax request to get new tweets.

50
00:03:15.390 --> 00:03:19.650
It's going to have the ability to
accept user inputs via POST, so

51
00:03:19.650 --> 00:03:21.530
that people can tweet new things.

52
00:03:21.530 --> 00:03:25.490
And we'll display in a pretty way those
tweets when the server loads, as well as

53
00:03:25.490 --> 00:03:29.640
after you post a new tweet, it's going
to add that tweet onto that page.

54
00:03:31.260 --> 00:03:32.970
Things that we are not going to do,

55
00:03:34.870 --> 00:03:36.820
there's going to be no database to this,
right?

56
00:03:36.820 --> 00:03:39.870
So if you restart your server
your tweets magically disappear.

57
00:03:41.300 --> 00:03:43.550
So obviously this is not
a really complete web app.

58
00:03:43.550 --> 00:03:45.300
You need some sort of persistence, right?

59
00:03:45.300 --> 00:03:48.980
And we're not gonna have any notion
of user follows, re-tweets, or

60
00:03:48.980 --> 00:03:49.550
anything like that.

61
00:03:49.550 --> 00:03:51.940
This is just purely anonymous tweets.

62
00:03:53.350 --> 00:03:55.119
So I'm gonna start here with the web app.

63
00:03:58.098 --> 00:04:02.735
&gt;&gt; Brian Holt: So let's, essentially, what
we're gonna do is we gonna go over here in

64
00:04:02.735 --> 00:04:05.939
node, or in app, so
this entire app lives in app.

65
00:04:05.939 --> 00:04:07.579
So the first thing you gonna wanna do.

66
00:04:11.579 --> 00:04:14.185
&gt;&gt; Brian Holt: Is if you're just
here following along with me,

67
00:04:14.185 --> 00:04:18.510
you gonna have to do npm install with
package.json Mine are already installed,

68
00:04:18.510 --> 00:04:20.530
so it's not going to do anything.

69
00:04:20.530 --> 00:04:23.960
But if you do not have it installed,
it's gonna split out its whole log.

70
00:04:25.260 --> 00:04:26.640
Okay.
And now you should have

71
00:04:26.640 --> 00:04:31.241
a node modules which will
have body-parser and express.

72
00:04:31.241 --> 00:04:32.388
All right.

73
00:04:32.388 --> 00:04:32.888
Cool.

74
00:04:34.378 --> 00:04:35.937
&gt;&gt; Brian Holt: So.

75
00:04:35.937 --> 00:04:39.161
We're gonna be working purely
in the public directory.

76
00:04:42.257 --> 00:04:43.937
&gt;&gt; Brian Holt: We're
gonna have index.html.

77
00:04:46.077 --> 00:04:49.020
&gt;&gt; Brian Holt: And it's gonna be pure and
simple html, right?

78
00:04:49.020 --> 00:04:51.760
Don't worry about the charset.

79
00:04:51.760 --> 00:04:55.560
We're gonna have a link at the top or

80
00:04:55.560 --> 00:04:58.370
a title at the top,
like on the very top tab, right?

81
00:04:58.370 --> 00:05:00.490
So if you're talking about
title like right here.

82
00:05:01.830 --> 00:05:06.880
It's gonna be called Tweeter, okay, and

83
00:05:06.880 --> 00:05:10.000
here we're going to load in
some Google fonts, right?

84
00:05:10.000 --> 00:05:12.190
I get kinda sick of using
the default font all the time,

85
00:05:12.190 --> 00:05:15.010
so there's a thing called Google fonts.

86
00:05:16.120 --> 00:05:20.160
If you're not familiar with it,
you just search for Google fonts.

87
00:05:23.440 --> 00:05:25.740
They're essentially a bunch a free
fonts that you can use on your website.

88
00:05:25.740 --> 00:05:28.020
We're just going to use this
top one right here, open sans.

89
00:05:30.650 --> 00:05:35.810
Okay, we're going to load that up top and
that's just loaded by css style sheet, and

90
00:05:35.810 --> 00:05:40.530
then we're going to load style.css which
is a style that we've written right here.

91
00:05:45.290 --> 00:05:48.410
Okay?
We actually haven't really talked about

92
00:05:48.410 --> 00:05:51.540
this so far, but
this is how you load external stylesheets.

93
00:05:52.600 --> 00:05:54.140
You put a link tag on the top,

94
00:05:54.140 --> 00:05:59.320
there's an href which is essentially
pointing to where your stylesheet lives.

95
00:05:59.320 --> 00:06:02.810
In this particular case,
it lives in the same directory.

96
00:06:02.810 --> 00:06:07.310
So we're going to tell
it just load style.css.

97
00:06:07.310 --> 00:06:09.258
It lives in the same directory.

98
00:06:09.258 --> 00:06:11.387
Pretty simple.

99
00:06:13.427 --> 00:06:14.260
&gt;&gt; Brian Holt: Okay.

100
00:06:14.260 --> 00:06:15.260
That's our head tag.

101
00:06:15.260 --> 00:06:17.189
Now we're going to go into the body tag.

102
00:06:19.840 --> 00:06:23.300
And in the body type we're gonna
have an h1, it's gonna say Tweeter.

103
00:06:24.500 --> 00:06:25.000
Okay.

104
00:06:26.230 --> 00:06:31.200
It's got a tweet container, actually let's
go ahead and just like look at this and

105
00:06:31.200 --> 00:06:33.980
then we'll come back and
discuss how it actually is working.

106
00:06:33.980 --> 00:06:34.480
So.

107
00:06:40.104 --> 00:06:45.800
&gt;&gt; Brian Holt: We're in app,
and I'm gonna say nodemon

108
00:06:45.800 --> 00:06:50.565
app.js
&gt;&gt; Brian Holt: So

109
00:06:50.565 --> 00:06:54.170
now we should just be able to go here,
close this out.

110
00:06:55.780 --> 00:06:56.900
Okay.

111
00:06:56.900 --> 00:06:59.039
This is the basic styling and such.

112
00:07:01.380 --> 00:07:04.079
&gt;&gt; Brian Holt: And these
are the different tweets, essentially.

113
00:07:04.079 --> 00:07:05.139
Okay?

114
00:07:06.740 --> 00:07:11.640
&gt;&gt; Brian Holt: So we're gonna have, this
is the say something part of it, right.

115
00:07:11.640 --> 00:07:13.640
So this is gonna be this part right here.

116
00:07:13.640 --> 00:07:15.604
Or you can actually type in something and
tweet it out.

117
00:07:15.604 --> 00:07:16.272
Okay.

118
00:07:16.272 --> 00:07:20.800
It's gonna replace all
that we talked about.

119
00:07:20.800 --> 00:07:25.890
That that's a grey text in the background
and it's gonna have a class

120
00:07:25.890 --> 00:07:29.910
if new text input and Id that we're
gonna reference later in the JavaScript.

121
00:07:29.910 --> 00:07:32.060
Okay and then a button this
kind allow them to tweet.

122
00:07:33.920 --> 00:07:38.050
Okay, then we have this div right
here which is called tweets.

123
00:07:38.050 --> 00:07:43.360
We're then going to later fill this tweets
with the tweets from the server, okay.

124
00:07:43.360 --> 00:07:47.930
We're loading jQuery,
we're going to load our tweet.js.

125
00:07:47.930 --> 00:07:53.280
Notice that this order actually is
important that JQuery comes first and

126
00:07:53.280 --> 00:07:57.440
then comes our tweet.js because our
tweet.js which is this js that we written

127
00:07:57.440 --> 00:07:58.880
is going to reference JQuery.

128
00:07:58.880 --> 00:08:04.510
Therefore, JQuery must be available for
tweet.js to work.

129
00:08:04.510 --> 00:08:05.380
Okay.

130
00:08:05.380 --> 00:08:08.500
So let's go into tweet.js this
is JavaScript that we are going

131
00:08:08.500 --> 00:08:09.760
to have written.

132
00:08:09.760 --> 00:08:13.920
&gt;&gt; Speaker 3: So could you talk about
why those JavaScript includes are at

133
00:08:13.920 --> 00:08:18.170
the bottom, instead of at the top,
with the CSS?

134
00:08:18.170 --> 00:08:20.940
&gt;&gt; Brian Holt: Definitely.
Good question.

135
00:08:20.940 --> 00:08:23.510
It may seem a little weird
that the CSS goes to the top,

136
00:08:23.510 --> 00:08:27.940
and the JavaScript goes at the bottom.

137
00:08:27.940 --> 00:08:31.450
The short answer,
is that it's a best practice.

138
00:08:31.450 --> 00:08:34.100
It's just something that you do,
because it's the best thing to do.

139
00:08:34.100 --> 00:08:35.720
Now, the reason why it's
the best thing to do,

140
00:08:35.720 --> 00:08:40.610
is that when you load a content, you
don't wanna load ugly un-styled content.

141
00:08:40.610 --> 00:08:45.150
And so you want your CSS to load
before your html finishes loading.

142
00:08:45.150 --> 00:08:49.110
So that when your content loads for
this the first time it's already pretty.

143
00:08:49.110 --> 00:08:49.610
Right?

144
00:08:49.610 --> 00:08:52.080
It's not so,
it loads with like no style and

145
00:08:52.080 --> 00:08:55.080
then all of a sudden everything
just magically looks better.

146
00:08:55.080 --> 00:08:56.410
It's a bad user experience.

147
00:08:58.060 --> 00:08:58.980
Okay?

148
00:08:58.980 --> 00:09:02.950
But we want all of our
pretty styling to load, and

149
00:09:02.950 --> 00:09:04.770
then we want all of our JS to run.

150
00:09:06.360 --> 00:09:09.680
So we don't want our
page to be load slower

151
00:09:09.680 --> 00:09:12.550
because the JavaScript has to
load first before it can render.

152
00:09:14.240 --> 00:09:15.340
And the browser's dumb.

153
00:09:15.340 --> 00:09:16.650
It's just gonna go down line by line.

154
00:09:16.650 --> 00:09:18.190
It's like, okay,
I'm gonna do this and wait.

155
00:09:18.190 --> 00:09:19.290
I'm gonna do this and wait.

156
00:09:19.290 --> 00:09:20.270
I'm gonna do this and wait.

157
00:09:20.270 --> 00:09:22.078
So if you have your JavaScript up here,

158
00:09:22.078 --> 00:09:26.570
it's gonna see like I'm gonna load all
my JavaScript which doesn't really make

159
00:09:26.570 --> 00:09:30.500
much sense anyway because your stuff
isn't there to be interacted upon yet.

160
00:09:32.100 --> 00:09:38.990
So again short stories, it makes your
page load faster if you do it this way.

161
00:09:38.990 --> 00:09:39.960
Okay, good question.

162
00:09:42.470 --> 00:09:46.675
So the first thing that we do when you
load the page is we're gonna do a GET

163
00:09:46.675 --> 00:09:51.325
on /ajax, which Nina will talk
about what that actually is.

164
00:09:51.325 --> 00:09:53.975
But notice that this is different
from like the Reddit API,

165
00:09:53.975 --> 00:09:56.515
which we had a full URL for, right?

166
00:09:56.515 --> 00:10:01.875
/ajax is actually on the same
server as where this index.html.

167
00:10:01.875 --> 00:10:03.494
It's a relative path, right?

168
00:10:05.254 --> 00:10:09.000
&gt;&gt; Brian Holt: So it's going to
load ajax from the same server.

169
00:10:09.000 --> 00:10:13.240
And then here you have the success
function here that's going to

170
00:10:13.240 --> 00:10:18.930
cause append new tweet with
these tweet data items right.

171
00:10:18.930 --> 00:10:26.700
And in the tweet data item, there is
a tweet.text and there's a tweet.time.

172
00:10:28.820 --> 00:10:33.510
So we haven't really talked about this,
a really common way of keeping time in

173
00:10:33.510 --> 00:10:37.812
programming is essentially
it's called epic time,

174
00:10:37.812 --> 00:10:42.530
epoch time,
I'm not really sure how you say that.

175
00:10:42.530 --> 00:10:43.030
E P O C H.

176
00:10:44.230 --> 00:10:47.170
It's seconds since January 1, 1970.

177
00:10:49.495 --> 00:10:50.034
&gt;&gt; Brian Holt: Yes.

178
00:10:50.034 --> 00:10:55.880
In this particular case
it is milliseconds.

179
00:10:55.880 --> 00:10:57.580
Often it is just seconds though.

180
00:10:57.580 --> 00:10:59.710
But just make sure you're aware
of what we're talking about.

181
00:10:59.710 --> 00:11:00.830
Either seconds or milliseconds.

182
00:11:00.830 --> 00:11:01.330
Anyway.

183
00:11:02.690 --> 00:11:05.160
So it's just a big number, right?

184
00:11:05.160 --> 00:11:07.280
So I mean, it's a huge number right now.

185
00:11:07.280 --> 00:11:11.570
Think of how many seconds of the past
in the past almost 50 years, right?

186
00:11:13.600 --> 00:11:16.620
Yeah, so that's what's this is doing.

187
00:11:16.620 --> 00:11:21.000
This is taking a time in
the seconds since 1970 and

188
00:11:21.000 --> 00:11:23.519
it's just turning it into,
if you look over here

189
00:11:25.240 --> 00:11:28.450
a nice little like well formatted time
that actually makes sense to humans.

190
00:11:29.590 --> 00:11:31.870
That's so what that's happened there okay.

191
00:11:31.870 --> 00:11:38.092
And then we're just wrapping it in a bunch
of html which we then have styled okay.

192
00:11:38.092 --> 00:11:43.970
And then I realize that I've actually
called this append new tweet and

193
00:11:43.970 --> 00:11:46.160
later I called it prepend.

194
00:11:46.160 --> 00:11:47.140
I call prepend.

195
00:11:47.140 --> 00:11:50.960
Which you imagine append puts it at
the end prepend puts it at the beginning.

196
00:11:50.960 --> 00:11:55.800
But I did that because you want the most
recent tweet to be at the top, right?

197
00:11:55.800 --> 00:11:58.500
You don't want to have to scroll down
to actually see your new tweets.

198
00:11:58.500 --> 00:11:59.399
So that's why we use prepend.

199
00:12:00.570 --> 00:12:01.960
Okay.

200
00:12:01.960 --> 00:12:03.160
Questions about that so far?

201
00:12:06.800 --> 00:12:07.300
Okay.

202
00:12:09.720 --> 00:12:15.064
So here we're calling a click
listener on the tweet ID,

203
00:12:15.064 --> 00:12:19.050
so let's go look at the tweet ID.

204
00:12:19.050 --> 00:12:22.319
Which is here, id tweet.

205
00:12:25.019 --> 00:12:27.314
&gt;&gt; Brian Holt: Okay so
every time that button is clicked,

206
00:12:27.314 --> 00:12:29.680
it's gonna send out an ajax request.

207
00:12:29.680 --> 00:12:31.520
It's gonna post to ajax.

208
00:12:33.190 --> 00:12:36.650
Notice that there's,
we have a get on ajax right here.

209
00:12:36.650 --> 00:12:40.060
And we have a post on ajax right here.

210
00:12:40.060 --> 00:12:42.790
But on the server,
we've actually separated those two out.

211
00:12:42.790 --> 00:12:43.910
Nina's going to talk about that.

212
00:12:43.910 --> 00:12:46.500
We're going to send JSON.

213
00:12:46.500 --> 00:12:51.210
And we're going to tell the server, hey
server, I'm sending you JSON, just FYI.

214
00:12:51.210 --> 00:12:54.370
And then we're going to
send it to Jason.stringify.

215
00:12:54.370 --> 00:12:57.660
We seen that before, we're taking
an object and making it a string.

216
00:12:57.660 --> 00:13:02.861
And, we're going to send a tweet,
which is going to have the value of,

217
00:13:02.861 --> 00:13:06.340
right, yeah it's over here.

218
00:13:07.380 --> 00:13:09.380
Whatever is in here.

219
00:13:09.380 --> 00:13:11.520
So we're gonna tweet
whatever comes out of here.

220
00:13:13.100 --> 00:13:15.150
That's what that payload's
gonna have right here.

221
00:13:17.030 --> 00:13:21.480
On success it's gonna get back data.

222
00:13:21.480 --> 00:13:26.400
Data's actually gonna be a new tweet
of this tweet that you've sent that

223
00:13:26.400 --> 00:13:27.710
you're gonna get handed to the server,

224
00:13:27.710 --> 00:13:30.330
the server's going to essentially hand
it back to you so you can display it.

225
00:13:30.330 --> 00:13:33.630
And then you are going to call
the append new tweet, and

226
00:13:33.630 --> 00:13:35.290
here you will just clear out the value.

227
00:13:35.290 --> 00:13:39.930
So just so you can see how this works,
so this is my new tweet.

228
00:13:40.960 --> 00:13:42.510
Okay, you click tweet.

229
00:13:42.510 --> 00:13:45.285
Reaches out to the server,
the server then hands it back to you and

230
00:13:45.285 --> 00:13:47.100
pre-pends that new tweet right here.

231
00:13:50.020 --> 00:13:52.653
Cool, any questions about
how the JavaScript works?

232
00:13:55.297 --> 00:13:55.830
&gt;&gt; Brian Holt: Okay.

233
00:13:58.850 --> 00:14:03.270
So, now we have style.css,
talked about box-sizing, right?

234
00:14:03.270 --> 00:14:06.427
We're doing border box just
to make everything easier.

235
00:14:06.427 --> 00:14:10.110
Like I said I put this on every CSS
file or every CSS project rather.

236
00:14:12.500 --> 00:14:17.630
Body, we're gonna give it a font
family of Open Sans right?

237
00:14:17.630 --> 00:14:20.390
That's the one we're loading in by Google.

238
00:14:20.390 --> 00:14:24.480
And then here we have sans-serif
sometimes people are not

239
00:14:24.480 --> 00:14:28.560
able to load external fonts so
we give them kind of a fall back, right?

240
00:14:28.560 --> 00:14:32.040
Everyone has a sans-serif font
on their computer guaranteed so

241
00:14:32.040 --> 00:14:35.850
you say if you don't have open sans
available please use a sans-serif font.

242
00:14:38.480 --> 00:14:41.989
We're gonna set the text color
to a nice un-harsh black.

243
00:14:43.080 --> 00:14:49.670
And if we don't do this,
this margin 0, let's just change that.

244
00:14:52.000 --> 00:14:53.620
I'm sorry,
that doesn't work in CSS, does it.

245
00:14:53.620 --> 00:14:55.940
So let's just take it out.

246
00:14:55.940 --> 00:14:59.990
If we take this out,
notice that like right now,

247
00:14:59.990 --> 00:15:02.330
this border goes all the way to the edge.

248
00:15:02.330 --> 00:15:05.160
If I refresh the page now, it actually
won't push up against the border.

249
00:15:06.220 --> 00:15:09.710
So you have to have that margin 0 or
else it won't push up against the border.

250
00:15:11.360 --> 00:15:16.310
So again, now it'll push up
against the border, okay.

251
00:15:16.310 --> 00:15:20.790
Leader-h, that's gonna be
that thing at the top, right.

252
00:15:20.790 --> 00:15:23.630
It has a background-color of black and

253
00:15:23.630 --> 00:15:26.340
it has a color of this is like
a really like an un-harsh white.

254
00:15:28.680 --> 00:15:30.360
Okay so it had a padding

255
00:15:31.440 --> 00:15:34.780
on it which is essentially because of
this nice black look around it right.

256
00:15:34.780 --> 00:15:39.886
If it didn't have that padding around
it would just be like really flat and

257
00:15:39.886 --> 00:15:41.970
in fact let's just take a look.

258
00:15:45.740 --> 00:15:50.670
Okay yeah so like it has, like it just
kind of pushes up it's kind of ugly.

259
00:15:50.670 --> 00:15:51.738
That's not what we're going for.

260
00:15:51.738 --> 00:15:55.929
&gt;&gt; [INAUDIBLE]
&gt;&gt; Brian Holt: Okay.

261
00:15:55.929 --> 00:15:59.530
Tweet-container.

262
00:15:59.530 --> 00:16:01.000
So that's gonna be these
things right here.

263
00:16:03.940 --> 00:16:05.300
We give them a nice border-radius.

264
00:16:05.300 --> 00:16:06.760
I don't think we've looked at that before.

265
00:16:06.760 --> 00:16:10.100
But look at these, they have nice,
little rounded corners.

266
00:16:10.100 --> 00:16:11.599
Fine spect element on that.

267
00:16:15.240 --> 00:16:18.650
&gt;&gt; Brian Holt: So, tweet container,
so border radius right here.

268
00:16:18.650 --> 00:16:23.150
If I take it off,
notice that it has pointy corners now.

269
00:16:23.150 --> 00:16:25.240
That everyone likes nice
friendly round corners.

270
00:16:25.240 --> 00:16:28.647
So, just gonna throw those up there.

271
00:16:28.647 --> 00:16:31.770
Has a width of 80% of the screen.

272
00:16:31.770 --> 00:16:33.570
Notice it doesn't push
all the way to the edges.

273
00:16:33.570 --> 00:16:35.910
It actually just sits
there nice in the middle.

274
00:16:35.910 --> 00:16:37.126
The auto centers it.

275
00:16:37.126 --> 00:16:44.750
And I'm pretty sure.

276
00:16:44.750 --> 00:16:47.060
So we do this overflow:hidden right here.

277
00:16:47.060 --> 00:16:49.050
Remember we talked about
the great collapse and

278
00:16:49.050 --> 00:16:51.479
how you have to sometimes
clear it with clearfixes.

279
00:16:52.760 --> 00:16:54.800
So this tweet button is
floating to the right.

280
00:16:54.800 --> 00:16:59.390
And if you take an overflow hidden off
the container's not actually aware

281
00:16:59.390 --> 00:17:02.670
of how that flow is supposed to
play into the document flow.

282
00:17:02.670 --> 00:17:04.520
So if you tell overflow
hidden it will reset it and

283
00:17:04.520 --> 00:17:06.760
say, okay this is actually
supposed to fit inside me.

284
00:17:06.760 --> 00:17:08.039
So that's what that does.

285
00:17:10.062 --> 00:17:12.120
&gt;&gt; Brian Holt: Let's look
inside a tweet container now.

286
00:17:13.760 --> 00:17:19.122
Tweet time, giving it a smaller font size,
make it italic right?

287
00:17:19.122 --> 00:17:22.640
So now it's actually leaning a little bit.

288
00:17:22.640 --> 00:17:24.610
Color's gray because
it's not the focus of it.

289
00:17:24.610 --> 00:17:26.430
This is not design school.

290
00:17:26.430 --> 00:17:27.300
I'm not a designer.

291
00:17:27.300 --> 00:17:30.015
But margin bottom there.

292
00:17:30.015 --> 00:17:32.690
Tweet-body.

293
00:17:32.690 --> 00:17:34.290
Just made the font size bigger,
essentially.

294
00:17:34.290 --> 00:17:40.390
And I think we've essentially gone
through pretty much the style.

295
00:17:40.390 --> 00:17:42.320
Let's talk about this up here.

296
00:17:43.970 --> 00:17:47.416
So I actually made the input
a little bit more fancy right?

297
00:17:49.110 --> 00:17:51.309
Like this blue border is not typical.

298
00:17:54.573 --> 00:18:00.260
&gt;&gt; Brian Holt: Where is the focus?

299
00:18:00.260 --> 00:18:06.390
Okay, so we have new-tweet-input with
the 100% height, border, border-radius.

300
00:18:06.390 --> 00:18:08.620
All those things look familiar.

301
00:18:08.620 --> 00:18:10.640
Then we have thing called focus.

302
00:18:10.640 --> 00:18:12.730
It's called a pseudo class, right.

303
00:18:12.730 --> 00:18:15.070
So right now, it's not focused.

304
00:18:15.070 --> 00:18:15.850
It has a grey border.

305
00:18:15.850 --> 00:18:18.430
As soon as I click on it,
it is now focused.

306
00:18:18.430 --> 00:18:22.030
So you can have it actually apply
different CSS when it's focused on.

307
00:18:23.630 --> 00:18:25.730
There's lot of different states for
this and I'll show you one here for

308
00:18:25.730 --> 00:18:27.940
Tweet as well right?

309
00:18:27.940 --> 00:18:30.960
As soon as I start hovering over it,
it gets lighter.

310
00:18:30.960 --> 00:18:34.330
As soon as I push it down, it gets darker.

311
00:18:34.330 --> 00:18:36.830
That's all done with CSS and
let's take a look at how that's happening.

312
00:18:38.520 --> 00:18:40.640
So btn-tweet,
it has all these styles right here.

313
00:18:40.640 --> 00:18:43.640
None of those should look
very intimidating to you.

314
00:18:43.640 --> 00:18:47.890
But hover, we move from this font color to

315
00:18:47.890 --> 00:18:52.440
this font color which is maybe in
color green, lighter green and

316
00:18:52.440 --> 00:18:56.600
then when it goes active, which just means
I'm pushing it down, it goes darker green.

317
00:18:58.140 --> 00:19:00.152
Questions about that?

318
00:19:02.211 --> 00:19:03.749
&gt;&gt; Brian Holt: Okay.

319
00:19:03.749 --> 00:19:06.809
And like that's essentially it for
the client side code.

320
00:19:09.729 --> 00:19:13.896
&gt;&gt; Brian Holt: It would be kind of
an interesting exercise for you to,

321
00:19:13.896 --> 00:19:20.890
after you've watched this video, or after
this, to go back and recreate just this.

322
00:19:20.890 --> 00:19:24.870
Not looking at the code I've written, but
instead doing it kind of your own way.

