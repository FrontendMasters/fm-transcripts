WEBVTT

1
00:00:00.000 --> 00:00:04.100
[MUSIC]

2
00:00:04.100 --> 00:00:07.246
&gt;&gt; Brian Holt: One of the really, really
fun parts for me talking about Node.

3
00:00:07.246 --> 00:00:09.696
Which is kind of a new and hot thing.

4
00:00:09.696 --> 00:00:10.720
Let's see.

5
00:00:12.530 --> 00:00:16.220
So we're gonna be running JavaScript
which is the language that

6
00:00:16.220 --> 00:00:18.120
we already learned today and yesterday.

7
00:00:19.200 --> 00:00:22.670
But this is not gonna be
JavaScript run in the browser.

8
00:00:22.670 --> 00:00:24.440
This is gonna be JavaScript
run on the server.

9
00:00:25.900 --> 00:00:27.930
So it's the same syntax.

10
00:00:27.930 --> 00:00:32.260
It's just there's some not slight but
large differences to it.

11
00:00:33.490 --> 00:00:39.290
So essentially what Node is, is they took
the JavaScript engine which is in Chrome,

12
00:00:39.290 --> 00:00:42.940
and they just ripped it out of the browser
and they stuck it on the server.

13
00:00:43.990 --> 00:00:47.780
So what you can expect from
Google Chrome's JavaScript engine you can

14
00:00:47.780 --> 00:00:48.800
expect from Node.

15
00:00:50.650 --> 00:00:52.780
It's really cool,
it's really fun to program, and

16
00:00:52.780 --> 00:00:56.369
if you're using it correctly
it can be extremely fast.

17
00:00:57.760 --> 00:00:59.090
So who uses Node?

18
00:00:59.090 --> 00:01:02.920
I mean as you can see,
not a bunch of slackers on this list.

19
00:01:02.920 --> 00:01:08.620
This is actually a pretty big group of
people doing huge amounts of scale and

20
00:01:08.620 --> 00:01:10.790
using Node in really cool ways.

21
00:01:10.790 --> 00:01:13.810
I was reading an interview with
one of the guys of Walmart and

22
00:01:13.810 --> 00:01:17.090
they said that their black Friday last
year was boring because Node made it so

23
00:01:17.090 --> 00:01:18.860
easy to deal with the traffic.

24
00:01:18.860 --> 00:01:20.720
Which is crazy.

25
00:01:20.720 --> 00:01:24.140
I can tell you because our site went
down on Black Friday, theirs not.

26
00:01:26.130 --> 00:01:31.150
So let's talk a little bit like,
what is it.

27
00:01:31.150 --> 00:01:34.370
So again, JavaScript on the server and

28
00:01:34.370 --> 00:01:37.450
this is really cool because
typically when you've been learning

29
00:01:37.450 --> 00:01:41.180
web development you have to learn
one language for the browser, and

30
00:01:41.180 --> 00:01:44.540
then you had to go and learn another
language to code on the server,.

31
00:01:44.540 --> 00:01:47.450
So you had to either learn,
like, JavaScript and PHP, or

32
00:01:47.450 --> 00:01:49.890
JavaScript and Ruby, or
JavaScript and Python.

33
00:01:49.890 --> 00:01:53.040
Like, you had to kinda have these like,
mental contact switches.

34
00:01:53.040 --> 00:01:57.810
When now, you just have to remember like,
I'm on Node, so

35
00:01:57.810 --> 00:01:59.150
I don't have to use the window.

36
00:01:59.150 --> 00:02:04.186
Or I'm on the browser, so
I have to use the window.

37
00:02:04.186 --> 00:02:07.470
So the one thing I will give you
as a caveat, if you're coming from

38
00:02:07.470 --> 00:02:11.010
another language like Ruby,
like Python, Node is quite different.

39
00:02:12.310 --> 00:02:13.760
It's cool, but it is different.

40
00:02:15.650 --> 00:02:17.200
Let's go and do some Hello World.

41
00:02:19.550 --> 00:02:25.714
There's no code pen, or at least no
code pen that I was satisfied for Node.

42
00:02:25.714 --> 00:02:30.431
So we're gonna actually have to
clone repository, which good thing

43
00:02:30.431 --> 00:02:34.996
Nina did her thing, so now we can go
out and clone what we need to do.

44
00:02:34.996 --> 00:02:38.022
All right, so pull back your terminal,

45
00:02:38.022 --> 00:02:42.670
in case you, I don't think
Nina went over this, but like.

46
00:02:42.670 --> 00:02:44.960
So say I have a whole bunch of stuff
on my screen and I wanna clear it out,

47
00:02:44.960 --> 00:02:47.620
if you just type clear, it's gone.

48
00:02:47.620 --> 00:02:48.513
So.

49
00:02:50.529 --> 00:02:53.633
&gt;&gt; Brian Holt: Let's just go to desktop.

50
00:02:53.633 --> 00:02:57.546
So if you're on a Mac, that'll work.

51
00:02:57.546 --> 00:03:02.070
So here on our desktop, we still
have some of Nina's folders on here.

52
00:03:02.070 --> 00:03:05.530
We're gonna go out and clone one of the
repositories that I've already written for

53
00:03:05.530 --> 00:03:07.418
you, so
let's go back to GitHub real quick.

54
00:03:10.938 --> 00:03:14.766
&gt;&gt; Brian Holt: Okay,
gitHubbtholt, and it's gonna be,

55
00:03:14.766 --> 00:03:19.835
if you can just go to my user profile,
it's not in here, so

56
00:03:19.835 --> 00:03:24.906
if you go to my repositories,
intro-to-webdev-app,

57
00:03:24.906 --> 00:03:27.718
that's what I'm looking for.

58
00:03:27.718 --> 00:03:32.529
github.com/btholt/intro-to-webdev-app.

59
00:03:36.104 --> 00:03:39.495
&gt;&gt; Brian Holt: So we're gonna
come down here to this SSH level,

60
00:03:39.495 --> 00:03:42.066
or like click the copy, right here.

61
00:03:42.066 --> 00:03:48.748
We're gonna go back to our terminal and
we're gonna say git clone, now typically,

62
00:03:48.748 --> 00:03:54.600
like Nina had you fork it, in reality,
you guys, I don't think anyway.

63
00:03:54.600 --> 00:03:56.980
You're not gonna be pushing
code back to my repository.

64
00:03:56.980 --> 00:04:00.119
So you can just clone it straight
from my repository and that's fine.

65
00:04:00.119 --> 00:04:03.035
The only reason that you would fork is
like, I wanna make changes to this and

66
00:04:03.035 --> 00:04:04.810
then I wanna commit my
changes back to Brian.

67
00:04:08.690 --> 00:04:12.630
So we're just gonna do git clone,
we're gonna paste that, and

68
00:04:12.630 --> 00:04:14.950
we're gonna let it clone
onto our computer.

69
00:04:16.890 --> 00:04:21.160
So now if you look, intro to webdev app
is there and we're gonna go into that.

70
00:04:21.160 --> 00:04:22.440
Anyone have any issues with that?

71
00:04:25.190 --> 00:04:26.090
Seems pretty.

72
00:04:27.090 --> 00:04:27.780
Pretty straight forward.

73
00:04:30.330 --> 00:04:33.778
So now notice at the readme we have an
app, that's gonna be the last part of this

74
00:04:33.778 --> 00:04:36.935
workshop, but right now we're just
gonna go into the Node exercises.

75
00:04:40.072 --> 00:04:43.860
&gt;&gt; Brian Holt: So just in case you wanted
to see what this actually looks like in

76
00:04:43.860 --> 00:04:48.718
the finder, this is gonna be a Mac-only
command and I'm sorry that I don't know

77
00:04:48.718 --> 00:04:52.432
what it is in Linux or in Windows,
but you can say open in Mac and

78
00:04:52.432 --> 00:04:56.840
then we're gonna say space period
which just means this directory.

79
00:04:56.840 --> 00:04:59.960
So I'm gonna say, open period.

80
00:04:59.960 --> 00:05:03.410
And now you can actually see what it looks
like in the finder, which is pretty cool.

81
00:05:05.410 --> 00:05:08.370
Or like, it's also my desktop so I
could've just double clicked on that too.

82
00:05:08.370 --> 00:05:08.980
That would've been fine.

83
00:05:10.820 --> 00:05:16.480
Anyway, so
we're gonna go into Node exercises.

84
00:05:16.480 --> 00:05:17.590
And we're go into basic.

85
00:05:17.590 --> 00:05:18.460
That's the first one.

86
00:05:20.370 --> 00:05:25.560
Something else I'm not sure Nina talked
about, but I'll re-address if she did.

87
00:05:25.560 --> 00:05:30.246
So notice I have, like right there,
I have basic, I have express, posting,

88
00:05:30.246 --> 00:05:32.460
params, cheer-jeer, whatever.

89
00:05:32.460 --> 00:05:37.386
I can type ba and if I hit tab,
like the, the terminal just knows,

90
00:05:37.386 --> 00:05:38.829
like you typed ba.

91
00:05:38.829 --> 00:05:41.040
I'm assuming you wanna
go into something real.

92
00:05:41.040 --> 00:05:44.700
So it just finished it for you.

93
00:05:44.700 --> 00:05:46.680
It's really fast cuz we're all lazy.

94
00:05:46.680 --> 00:05:48.100
We don't wanna type all the words.

95
00:05:48.100 --> 00:05:52.496
So I was like,
I'm only typing two letters.

96
00:05:52.496 --> 00:05:56.170
So now we have this app.js.

97
00:05:56.170 --> 00:06:00.490
So now we're actually start using sublime
which is gonna be a out text editor right

98
00:06:00.490 --> 00:06:09.070
here, so I guess you need to open this in
sublime somehow so you can say sublime,

99
00:06:09.070 --> 00:06:14.530
project, where is it,
add folder to project?

100
00:06:15.950 --> 00:06:18.330
Click that and

101
00:06:18.330 --> 00:06:21.160
then you need to go find wherever it
is in your computer that you put this.

102
00:06:21.160 --> 00:06:25.572
Mine happens to be on my
desktop which is right here and

103
00:06:25.572 --> 00:06:29.898
then click on the intro to webdev app and
click Open.

104
00:06:33.023 --> 00:06:34.310
&gt;&gt; Brian Holt: Can we follow that?

105
00:06:34.310 --> 00:06:40.105
&gt;&gt; Speaker 2: Can you say the path
again within the project?

106
00:06:40.105 --> 00:06:43.381
&gt;&gt; Brian Holt: So you need to go find
where ever you cloned your intro to webdev

107
00:06:43.381 --> 00:06:45.594
app and you just need to open that folder.

108
00:06:47.513 --> 00:06:48.453
&gt;&gt; Brian Holt: The entire folder.

109
00:06:48.453 --> 00:06:49.476
Nothing inside of it.

110
00:06:49.476 --> 00:06:52.210
So I click on this and
then I would click open right now.

111
00:06:52.210 --> 00:06:57.304
I'm not gonna do it cuz mine actually
is already opened to my project.

112
00:06:57.304 --> 00:07:01.208
&gt;&gt; Speaker 3: Now,
do you have to create a new project first?

113
00:07:01.208 --> 00:07:03.028
&gt;&gt; Brian Holt: You don't
have to explicitly do it,

114
00:07:03.028 --> 00:07:06.626
if you don't already have a project
Sublime just creates one on the fly.

115
00:07:06.626 --> 00:07:12.579
&gt;&gt; [INAUDIBLE]
&gt;&gt; Brian Holt: Is that working for people?

116
00:07:14.286 --> 00:07:21.192
&gt;&gt; [INAUDIBLE]
&gt;&gt; Brian Holt: So

117
00:07:21.192 --> 00:07:23.520
something else you can do
which is along those lines.

118
00:07:23.520 --> 00:07:27.020
If I have this open right here,
I can just take this whole folder and

119
00:07:27.020 --> 00:07:30.210
drag it on to Sublime
which I have right here.

120
00:07:31.280 --> 00:07:32.517
That'll work, too.

121
00:07:35.780 --> 00:07:39.316
&gt;&gt; Brian Holt: And if I just do that then
it'll open a brand new window with that

122
00:07:39.316 --> 00:07:40.335
project opened.

123
00:07:49.624 --> 00:07:50.786
&gt;&gt; Brian Holt: Feeling good about this?

124
00:07:50.786 --> 00:07:52.803
This is gonna really suck if
you don't have this opened.

125
00:07:52.803 --> 00:07:55.581
So I wanna make sure everyone has it open.

126
00:07:55.581 --> 00:08:01.642
&gt;&gt; Speaker 4: [INAUDIBLE]
&gt;&gt; Brian Holt: Do

127
00:08:01.642 --> 00:08:03.680
you wanna go help her, Nina?

128
00:08:06.358 --> 00:08:08.736
&gt;&gt; Brian Holt: Everyone else good?

129
00:08:09.999 --> 00:08:17.161
&gt;&gt; Brian Holt: It seems that for
the most part, people have it open so

130
00:08:17.161 --> 00:08:21.947
let's go ahead and close that out.

131
00:08:21.947 --> 00:08:28.143
So we have this nice project open now,
and we're gonna go into Node exercises.

132
00:08:28.143 --> 00:08:29.445
We have basic right here.

133
00:08:29.445 --> 00:08:34.049
That's gonna be our first little
exercise we're gonna work on, so

134
00:08:34.049 --> 00:08:36.245
open Basic and look at app.js.

135
00:08:37.470 --> 00:08:39.230
You should see something akin to this.

136
00:08:39.230 --> 00:08:42.588
It might be different colors,
but it should look like that.

137
00:08:47.484 --> 00:08:52.711
&gt;&gt; Brian Holt: So again, intro to web
dev app, node exercise basic app js.

138
00:08:56.978 --> 00:09:01.120
&gt;&gt; Brian Holt: Here, we have like the most
basic at the most basic note app,

139
00:09:01.120 --> 00:09:02.630
the Hello World.

140
00:09:02.630 --> 00:09:05.580
Like the only thing this is ever
gonna do is say Hello World.

141
00:09:08.260 --> 00:09:12.887
So before we get too much into
like what actual code is doing,

142
00:09:12.887 --> 00:09:16.528
let's go ahead and
run it and see what happens.

143
00:09:16.528 --> 00:09:21.408
So again, I'm here now

144
00:09:21.408 --> 00:09:26.534
in the basic directory.

145
00:09:26.534 --> 00:09:30.366
I'm assuming Node has already been
installed because that was one of

146
00:09:30.366 --> 00:09:34.214
the prerequisites of the class,
so you're gonna type node, okay?

147
00:09:34.214 --> 00:09:40.885
And then, or sorry app.js, so
you're telling Node run app.js.

148
00:09:42.290 --> 00:09:45.670
And you should say server
running at that address.

149
00:09:47.660 --> 00:09:50.868
Is that happening for most people?

150
00:09:50.868 --> 00:09:53.556
Lots of head shaking, I like that.

151
00:09:53.556 --> 00:09:58.498
So just grab this http right here,
copy that,

152
00:09:58.498 --> 00:10:04.202
come back into web browser,
paste that right there,

153
00:10:04.202 --> 00:10:08.526
should see Hello World on your browser.

154
00:10:12.227 --> 00:10:13.652
&gt;&gt; Brian Holt: Minds
being blown right now,

155
00:10:13.652 --> 00:10:16.281
you just wrote your first web
app which is pretty cool.

156
00:10:16.281 --> 00:10:19.153
&gt;&gt; Class: [LAUGH]
&gt;&gt; Brian Holt: Like this is the basis for

157
00:10:19.153 --> 00:10:20.620
everything that we're gonna do.

158
00:10:20.620 --> 00:10:25.482
&gt;&gt; Speaker 6: So Node is actually
launching a web server locally,

159
00:10:25.482 --> 00:10:26.510
is that-
&gt;&gt; Brian Holt: So

160
00:10:26.510 --> 00:10:29.490
you now have a web server
running on your computer.

161
00:10:30.970 --> 00:10:34.260
By the way, if this number looks annoying,
it is annoying.

162
00:10:34.260 --> 00:10:39.460
You can type localhost,
and that works too.

163
00:10:39.460 --> 00:10:41.906
That's just letting your computer
know please reference yourself.

164
00:10:41.906 --> 00:10:50.158
[LAUGH] [SOUND] Okay, cool.

165
00:10:50.158 --> 00:10:52.067
Someone's super excited about Node.

166
00:10:52.067 --> 00:10:57.035
&gt;&gt; Class: [LAUGH]
&gt;&gt; Brian Holt: Then, we have this colon

167
00:10:57.035 --> 00:11:02.310
88 at the end, that's just letting
the browser know which port to look on.

168
00:11:02.310 --> 00:11:06.000
If you don't necessary what ports
are something like it has to do with

169
00:11:06.000 --> 00:11:08.860
like routing web traffic and
something that not a huge deal.

170
00:11:10.550 --> 00:11:15.390
But it's necessary,
it must be there so please include it.

171
00:11:15.390 --> 00:11:18.815
So let's dissect what
actually happened here.

172
00:11:18.815 --> 00:11:23.348
So I'm gonna put some space in here so
we can just see what's going on.

173
00:11:25.748 --> 00:11:28.672
&gt;&gt; Brian Holt: I'll put
that on a new line.

174
00:11:28.672 --> 00:11:32.517
Okay, so I think this console.log
looks really familiar to you.

175
00:11:32.517 --> 00:11:36.771
Instead of console.log writing to
your webs, your browser's console,

176
00:11:36.771 --> 00:11:39.980
it's actually gonna be
printing it out straight here.

177
00:11:39.980 --> 00:11:45.585
So we see server running at this,
and here we say server running here,

178
00:11:45.585 --> 00:11:49.012
that's how that's actually happening.

179
00:11:49.012 --> 00:11:51.230
Let's talk about require.

180
00:11:51.230 --> 00:11:54.310
This is kind of an interesting one,
it's unique to Node, as in,

181
00:11:54.310 --> 00:11:57.220
you don't actually do this in the browser.

182
00:11:57.220 --> 00:11:58.328
Not natively anyway.

183
00:11:58.328 --> 00:12:00.950
But we'll just say for right now
that you don't do it in the browser.

184
00:12:02.160 --> 00:12:07.510
So you're saying to Node, I say Node,
I know you have a library called HTTP.

185
00:12:07.510 --> 00:12:08.990
Please give it to me.

186
00:12:08.990 --> 00:12:09.690
That's what that means.

187
00:12:11.230 --> 00:12:16.005
Now, there's quiet a few HTTP one is gonna
be the one that were gonna be using today.

188
00:12:16.005 --> 00:12:20.781
But there's one like fs for file system
like if you needed to read files from your

189
00:12:20.781 --> 00:12:24.727
system note includes a bunch of
just useful things for you to use.

190
00:12:24.727 --> 00:12:29.342
So we're saying go out fetch this
HTTP library give it to me, and

191
00:12:29.342 --> 00:12:34.218
then we're just gonna use that to
create our own little web server.

192
00:12:34.218 --> 00:12:41.767
So we're gonna say HTTP,
please go ahead and create a web server.

193
00:12:41.767 --> 00:12:46.256
And then, that takes just
a quick little argument, and

194
00:12:46.256 --> 00:12:48.930
if we give the server a function,

195
00:12:48.930 --> 00:12:54.486
it's going to return that on literally
every request you give to it.

196
00:12:54.486 --> 00:12:58.173
So going back to our little browser here,
you can put anything after this and

197
00:12:58.173 --> 00:12:59.913
it's still gonna say Hello World.

198
00:12:59.913 --> 00:13:04.117
Any address, doesn't matter.

199
00:13:04.117 --> 00:13:07.847
Either that, or I coded that really
long web address in there secretly, but

200
00:13:07.847 --> 00:13:08.440
I didn't.

201
00:13:10.640 --> 00:13:14.429
So it's fun for toy purposes but
it's actually not terribly useful for

202
00:13:14.429 --> 00:13:15.769
writing a real webpage.

203
00:13:18.117 --> 00:13:19.514
&gt;&gt; Brian Holt: I do a writeHead.

204
00:13:19.514 --> 00:13:22.649
So you remember Nina talking
about status codes, right?

205
00:13:22.649 --> 00:13:25.130
200 is successful.

206
00:13:25.130 --> 00:13:28.010
If I did 404, what would that mean?

207
00:13:28.010 --> 00:13:31.699
&gt;&gt; [INAUDIBLE]
&gt;&gt; Brian Holt: Can't find the page.

208
00:13:31.699 --> 00:13:35.060
But we want everything to be found,
so we're giving 200s out.

209
00:13:36.160 --> 00:13:38.750
And then, we're writing this Content-Type.

210
00:13:38.750 --> 00:13:43.090
So you have to let the browser know what
you're giving it because the browser has

211
00:13:43.090 --> 00:13:45.870
a bunch of different modes it goes
into to render different things.

212
00:13:45.870 --> 00:13:49.460
In this case, it's just like,
we're just sending you actual text.

213
00:13:49.460 --> 00:13:51.970
Typically we're gonna be
sending things like HTML or

214
00:13:51.970 --> 00:13:55.670
CSS or
in our little app we're about to do JSON.

215
00:13:57.240 --> 00:14:02.498
So here, just saying your
content type is text/plain.

216
00:14:02.498 --> 00:14:04.780
And then, there's one called end and

217
00:14:04.780 --> 00:14:08.040
that's essentially saying
I'm going to end my request.

218
00:14:08.040 --> 00:14:10.810
Here, is what I'm going
to give back to the user.

219
00:14:10.810 --> 00:14:15.770
So res stands for response,
req stands for request, we'll actually

220
00:14:15.770 --> 00:14:19.990
get into requests later, but right now,
we're just worried about res or response.

221
00:14:19.990 --> 00:14:25.370
So it's saying, please end this response,
and tell them Hello World finished.

222
00:14:26.860 --> 00:14:29.285
Once you call end you can't
actually send anymore,

223
00:14:29.285 --> 00:14:31.760
cuz it actually wraps up all of
your data and sends it back.

224
00:14:31.760 --> 00:14:34.350
So just keep that in mind,
once it called end, it really is the end.

225
00:14:37.260 --> 00:14:38.160
We have this listen.

226
00:14:39.210 --> 00:14:42.526
This is where chaining again,
if you remember that.

227
00:14:42.526 --> 00:14:47.040
.listen on port 8080 which is
where that business comes from.

228
00:14:47.040 --> 00:14:48.820
This is really can be an arbitrary number.

229
00:14:48.820 --> 00:14:51.667
Just make it over 1,000.

230
00:14:51.667 --> 00:14:52.862
It'll make your life easier.

231
00:14:52.862 --> 00:14:55.582
It can be lower, but just do that.

232
00:14:55.582 --> 00:14:58.919
And this is essentially saying
you're gonna be on localhost.

233
00:14:58.919 --> 00:15:01.288
Which is that number.

234
00:15:01.288 --> 00:15:05.572
That's, 127.0.0.1 just refers to
yourself if you're a computer, so

235
00:15:05.572 --> 00:15:10.630
it refers to this computer right here,
I'm gonna be running my server on here.

236
00:15:10.630 --> 00:15:13.320
It's a magic number, wouldn't worry
too much about what it means or

237
00:15:13.320 --> 00:15:14.890
where it comes from,
in fact I'm not really sure.

238
00:15:14.890 --> 00:15:18.800
So that's why I'm not
gonna tell you about it.

239
00:15:18.800 --> 00:15:20.870
And that is the anatomy of
the app that we just wrote.

