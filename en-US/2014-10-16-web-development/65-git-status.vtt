WEBVTT

1
00:00:00.380 --> 00:00:03.995
[MUSIC]

2
00:00:03.995 --> 00:00:07.070
&gt;&gt; Nina Zakharenko: So
now that you guys all have this file.

3
00:00:07.070 --> 00:00:11.030
I'm going to introduce a command
that we'll be using over and

4
00:00:11.030 --> 00:00:12.360
over and over again.

5
00:00:12.360 --> 00:00:15.070
And that command is git status.

6
00:00:16.610 --> 00:00:17.850
So let's go ahead and type that.

7
00:00:19.940 --> 00:00:22.590
&gt;&gt; Speaker 2: Can you clear the terminal,
so you're kinda towards the top?

8
00:00:22.590 --> 00:00:23.510
&gt;&gt; Nina Zakharenko: Yeah.

9
00:00:23.510 --> 00:00:26.900
So, git status.

10
00:00:26.900 --> 00:00:28.510
So, you guys should all see this.

11
00:00:30.530 --> 00:00:34.590
There will be a section called untracked
files, and your file will be in there.

12
00:00:36.990 --> 00:00:38.180
Does anyone not see that?

13
00:00:42.340 --> 00:00:43.230
Cool.

14
00:00:43.230 --> 00:00:48.830
So, there's a lot of information

15
00:00:48.830 --> 00:00:52.740
when we run this command and
let's go through it line by line.

16
00:00:52.740 --> 00:00:57.330
So, that first line, On branch master,

17
00:00:57.330 --> 00:01:01.950
tells us that we're working
in the master branch.

18
00:01:01.950 --> 00:01:05.120
That's the main branch for
most repositories.

19
00:01:05.120 --> 00:01:08.170
And we'll cover how to create new
branches a little bit later on.

20
00:01:09.220 --> 00:01:13.650
That second line, it says that my branch
is up-to-date with origin/master.

21
00:01:13.650 --> 00:01:16.510
That means that no one else has, yes?

22
00:01:16.510 --> 00:01:20.270
&gt;&gt; Speaker 3: I think, just online,
I think a couple people are behind.

23
00:01:20.270 --> 00:01:21.090
&gt;&gt; Nina Zakharenko: Okay.

24
00:01:21.090 --> 00:01:25.850
&gt;&gt; Speaker 3: One person is getting syntax
error, when they're trying to clone it.

25
00:01:26.950 --> 00:01:31.720
Maybe you can just show the,
how to do the cloning,and then the URL.

26
00:01:33.110 --> 00:01:36.290
&gt;&gt; Nina Zakharenko: So, the URL is
gonna be different for all of us.

27
00:01:36.290 --> 00:01:37.550
&gt;&gt; Speaker 3: For each person, right?

28
00:01:37.550 --> 00:01:38.160
&gt;&gt; Nina Zakharenko: Yeah.

29
00:01:38.160 --> 00:01:38.720
but that is
&gt;&gt; Speaker 3: And

30
00:01:38.720 --> 00:01:41.300
then the other thing after,
they're like wondering what to do after

31
00:01:41.300 --> 00:01:45.770
they clone maybe did you explain
how to create that directory?

32
00:01:45.770 --> 00:01:50.950
&gt;&gt; Nina Zakharenko: Yeah so
that's the git clone command up there.

33
00:01:53.390 --> 00:01:55.080
And then if I clear that out.

34
00:01:58.520 --> 00:02:01.469
And I go up one directory and I do an ls.

35
00:02:02.900 --> 00:02:08.611
I'll see what's on my desktop there is
now a directory called pull-request-1,

36
00:02:08.611 --> 00:02:11.594
that was created when I didn't get cloned.

37
00:02:18.575 --> 00:02:21.149
&gt;&gt; Nina Zakharenko: Yeah, so
there's this git clone in the URL.

38
00:02:22.290 --> 00:02:25.480
All of our URLs should be different
because we all take a fork

39
00:02:25.480 --> 00:02:26.720
from Brian's branch.

40
00:02:28.250 --> 00:02:29.795
So you should be git clone in,

41
00:02:29.795 --> 00:02:34.790
github.com/ and then whatever you'll get,
git user name is.

42
00:02:36.380 --> 00:02:40.570
&gt;&gt; Speaker 3: Could you just show on
the video where you get the clone URL?

43
00:02:40.570 --> 00:02:47.843
&gt;&gt; Nina Zakharenko: Yes.
&gt;&gt; Speaker 3: I think that's.

44
00:02:55.726 --> 00:02:56.287
&gt;&gt; Nina Zakharenko: Sorry,

45
00:02:56.287 --> 00:02:59.900
Brian's computer is set up
all different than mine.

46
00:03:01.180 --> 00:03:06.028
Okay, so just again I went to

47
00:03:06.028 --> 00:03:13.513
github.com/btholt/pull-requests.

48
00:03:17.456 --> 00:03:20.320
&gt;&gt; Nina Zakharenko: And
I can put this URL on the slide.

49
00:03:43.355 --> 00:03:44.590
&gt;&gt; Nina Zakharenko: Get
that fork out of the way.

50
00:03:46.570 --> 00:03:51.106
Can everyone who's following
along online see that?

51
00:03:55.726 --> 00:04:00.540
&gt;&gt; Nina Zakharenko: So
then the step to create a fork

52
00:04:00.540 --> 00:04:05.190
was to go to this URL and then.

53
00:04:05.190 --> 00:04:06.595
Click on this guy right here.

54
00:04:10.136 --> 00:04:14.556
&gt;&gt; Nina Zakharenko: There's
a helpful pop-up.

55
00:04:14.556 --> 00:04:21.420
It says, it'll fork your own copy of
bthold/pull-requests to your own account.

56
00:04:25.460 --> 00:04:28.348
I see that there are only 29 forks,
so I'm just gonna give you guys-.

57
00:04:28.348 --> 00:04:31.207
&gt;&gt; Speaker 3: Refresh the page, we'll see.

58
00:04:31.207 --> 00:04:32.380
You have 30
&gt;&gt; Nina Zakharenko: 30.

59
00:04:32.380 --> 00:04:33.030
&gt;&gt; Speaker 3: There you go.

60
00:04:33.030 --> 00:04:38.790
You were just doing what you
have on the live stream clip.

61
00:04:39.860 --> 00:04:41.330
&gt;&gt; Speaker 4: Right now we got seven, so.

62
00:04:41.330 --> 00:04:41.860
&gt;&gt; Speaker 3: 44 people.

63
00:04:41.860 --> 00:04:42.450
&gt;&gt; Nina Zakharenko: I caught you.

64
00:04:42.450 --> 00:04:46.586
Who doesn't have a fork?

65
00:04:51.972 --> 00:04:53.670
&gt;&gt; Nina Zakharenko: Do you
have a GitHub account?

66
00:04:53.670 --> 00:04:54.830
&gt;&gt; Speaker 5: Yes.

67
00:04:54.830 --> 00:04:56.520
&gt;&gt; Nina Zakharenko: Okay.
&gt;&gt; Speaker 5: No I got that part I just

68
00:04:59.180 --> 00:04:59.790
&gt;&gt; Nina Zakharenko: You don't wanna, okay.

69
00:05:01.960 --> 00:05:06.330
Anyone else in here?

70
00:05:06.330 --> 00:05:08.776
I see 31.

71
00:05:13.216 --> 00:05:20.045
&gt;&gt; Nina Zakharenko: You guys in
the room all have your own forks?

72
00:05:20.045 --> 00:05:24.657
&gt;&gt; [INAUDIBLE]
&gt;&gt; Nina Zakharenko: Yes.

73
00:05:24.657 --> 00:05:29.051
&gt;&gt; [INAUDIBLE]
&gt;&gt; Nina Zakharenko: So Brian's repository

74
00:05:29.051 --> 00:05:32.539
is, very, very popular.

75
00:05:34.499 --> 00:05:37.850
&gt;&gt; Nina Zakharenko: [LAUGH]
&gt;&gt; Speaker 3: Now refresh the page,

76
00:05:37.850 --> 00:05:38.940
see how many people.

77
00:05:43.150 --> 00:05:43.750
That's all right.

78
00:05:46.250 --> 00:05:49.300
&gt;&gt; Nina Zakharenko: All right,
I'm gonna keep going.

79
00:05:49.300 --> 00:05:54.300
So, we made a text file that's our
first name and the first letter

80
00:05:54.300 --> 00:05:59.900
of our last name .txt in
the repository folder.

81
00:05:59.900 --> 00:06:06.490
So just to reiterate,
right now I'm on my desktop folder.

82
00:06:06.490 --> 00:06:08.550
I run the git clone.

83
00:06:08.550 --> 00:06:10.920
And I put in the URL from my fork.

84
00:06:11.990 --> 00:06:13.850
And I'll show you guys
where that is again.

85
00:06:13.850 --> 00:06:15.706
So, if I go to my own GitHub.

86
00:06:23.025 --> 00:06:29.334
&gt;&gt; Nina Zakharenko: Here,
I'll see there's this pull-request.

87
00:06:29.334 --> 00:06:34.790
And the URL is right here HTTPS clone URL,

88
00:06:34.790 --> 00:06:39.660
and you can just click this handy icon and
it'll copy it to your clipboard.

89
00:06:42.250 --> 00:06:47.900
So if do an ls in this directory, I see
that I have this pull-requests folder.

90
00:06:47.900 --> 00:06:50.729
I'm doing to cd,
change directory, into that.

91
00:06:53.200 --> 00:07:00.090
If I do an ls here,
I see that I have this txt file.

92
00:07:01.600 --> 00:07:03.530
Now I'm going to run and git-status.

