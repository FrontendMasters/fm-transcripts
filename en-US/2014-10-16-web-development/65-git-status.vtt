WEBVTT

1
00:00:00.380 --> 00:00:03.995
[MUSIC]

2
00:00:03.995 --> 00:00:07.070
&gt;&gt; Nina Zakharenko: So
now that you guys all have this file.

3
00:00:07.070 --> 00:00:11.030
I'm going to introduce a command
that we'll be using over and

4
00:00:11.030 --> 00:00:12.360
over and over again.

5
00:00:12.360 --> 00:00:15.070
And that command is git status.

6
00:00:16.610 --> 00:00:20.870
So let's go ahead and type that.
&gt;&gt; Speaker 2: Can you clear the terminal,

7
00:00:20.870 --> 00:00:23.510
so you're kinda towards the top?
&gt;&gt; Nina Zakharenko: Yeah.

8
00:00:23.510 --> 00:00:26.900
So, git status.

9
00:00:26.900 --> 00:00:28.510
So, you guys should all see this.

10
00:00:30.530 --> 00:00:34.590
There will be a section called untracked
files, and your file will be in there.

11
00:00:36.990 --> 00:00:38.180
Does anyone not see that?

12
00:00:42.340 --> 00:00:43.230
Cool.

13
00:00:43.230 --> 00:00:48.830
So, there's a lot of information

14
00:00:48.830 --> 00:00:52.740
when we run this command and
let's go through it line by line.

15
00:00:52.740 --> 00:00:57.330
So, that first line, On branch master,

16
00:00:57.330 --> 00:01:01.950
tells us that we're working
in the master branch.

17
00:01:01.950 --> 00:01:05.120
That's the main branch for
most repositories.

18
00:01:05.120 --> 00:01:08.170
And we'll cover how to create new
branches a little bit later on.

19
00:01:09.220 --> 00:01:13.650
That second line, it says that my branch
is up-to-date with origin/master.

20
00:01:13.650 --> 00:01:17.670
That means that no one else has, yes?
&gt;&gt; Speaker 3: I think, just online,

21
00:01:17.670 --> 00:01:21.090
I think a couple people are behind.
&gt;&gt; Nina Zakharenko: Okay.

22
00:01:21.090 --> 00:01:22.925
&gt;&gt; Speaker 3: One person is getting syntax

23
00:01:22.925 --> 00:01:25.850
error, when they're trying to clone it.

24
00:01:26.950 --> 00:01:28.190
Maybe you can just show the,

25
00:01:28.190 --> 00:01:34.120
how to do the cloning,and then the URL.
&gt;&gt; Nina Zakharenko: So, the URL

26
00:01:34.120 --> 00:01:36.430
is gonna be different for all of us.
&gt;&gt; Speaker 3: For

27
00:01:36.430 --> 00:01:38.160
each person, right?
&gt;&gt; Nina Zakharenko: Yeah.

28
00:01:38.160 --> 00:01:38.720
but that is
&gt;&gt; Speaker 3: And

29
00:01:38.720 --> 00:01:41.300
then the other thing after,
they're like wondering what to do after

30
00:01:41.300 --> 00:01:45.770
they clone maybe did you explain
how to create that directory?

31
00:01:45.770 --> 00:01:49.750
&gt;&gt; Nina Zakharenko: Yeah so that's the git

32
00:01:49.750 --> 00:01:50.950
clone command up there.

33
00:01:53.390 --> 00:01:55.080
And then if I clear that out.

34
00:01:58.520 --> 00:02:01.469
And I go up one directory and I do an ls.

35
00:02:02.900 --> 00:02:08.611
I'll see what's on my desktop there is
now a directory called pull-request-1,

36
00:02:08.611 --> 00:02:11.594
that was created when I didn't get cloned.

37
00:02:18.575 --> 00:02:19.115
&gt;&gt; Nina Zakharenko: Yeah, so

38
00:02:19.115 --> 00:02:21.149
there's this git clone in the URL.

39
00:02:22.290 --> 00:02:25.480
All of our URLs should be different
because we all take a fork

40
00:02:25.480 --> 00:02:26.720
from Brian's branch.

41
00:02:28.250 --> 00:02:33.390
So you should be git clone in,
github.com/ and then whatever you'll get,

42
00:02:33.390 --> 00:02:37.370
git user name is.
&gt;&gt; Speaker 3: Could you just show

43
00:02:37.370 --> 00:02:40.756
on the video where you get the clone URL?
&gt;&gt; Nina Zakharenko: Yes.

44
00:02:40.756 --> 00:02:47.843
&gt;&gt; Speaker 3: I think that's.

45
00:02:55.726 --> 00:02:56.287
&gt;&gt; Nina Zakharenko: Sorry,

46
00:02:56.287 --> 00:02:59.900
Brian's computer is set up
all different than mine.

47
00:03:01.180 --> 00:03:06.028
Okay, so just again I went to

48
00:03:06.028 --> 00:03:13.513
github.com/btholt/pull-requests.

49
00:03:17.456 --> 00:03:20.320
&gt;&gt; Nina Zakharenko: And
I can put this URL on the slide.

50
00:03:43.355 --> 00:03:44.073
&gt;&gt; Nina Zakharenko: Get that fork out

51
00:03:44.073 --> 00:03:44.590
of the way.

52
00:03:46.570 --> 00:03:51.106
Can everyone who's following
along online see that?

53
00:03:55.726 --> 00:03:58.503
&gt;&gt; Nina Zakharenko: So then the step to

54
00:03:58.503 --> 00:04:05.190
create a fork was to go to this URL and
then.

55
00:04:05.190 --> 00:04:11.538
Click on this guy right here.
&gt;&gt; Nina Zakharenko: There's

56
00:04:11.538 --> 00:04:14.556
a helpful pop-up.

57
00:04:14.556 --> 00:04:21.420
It says, it'll fork your own copy of
bthold/pull-requests to your own account.

58
00:04:25.460 --> 00:04:28.348
I see that there are only 29 forks,
so I'm just gonna give you guys-.

59
00:04:28.348 --> 00:04:31.207
&gt;&gt; Speaker 3: Refresh the page, we'll see.

60
00:04:31.207 --> 00:04:32.380
You have 30
&gt;&gt; Nina Zakharenko: 30.

61
00:04:32.380 --> 00:04:33.030
&gt;&gt; Speaker 3: There you go.

62
00:04:33.030 --> 00:04:37.350
You were just doing what
you have on the live

63
00:04:37.350 --> 00:04:41.330
stream clip.
&gt;&gt; Speaker 4: Right now we got seven, so.

64
00:04:41.330 --> 00:04:41.860
&gt;&gt; Speaker 3: 44 people.

65
00:04:41.860 --> 00:04:42.450
&gt;&gt; Nina Zakharenko: I caught you.

66
00:04:42.450 --> 00:04:52.077
Who doesn't have a fork?
&gt;&gt; Nina Zakharenko: Do

67
00:04:52.077 --> 00:04:53.670
you have a GitHub account?

68
00:04:53.670 --> 00:04:54.950
&gt;&gt; Speaker 5: Yes.
&gt;&gt; Nina Zakharenko: Okay.

69
00:04:54.950 --> 00:04:56.080
&gt;&gt; Speaker 5: No I got that

70
00:04:56.080 --> 00:04:59.790
part I just
&gt;&gt; Nina Zakharenko: You don't wanna, okay.

71
00:05:01.960 --> 00:05:06.330
Anyone else in here?

72
00:05:06.330 --> 00:05:13.769
I see 31.
&gt;&gt; Nina Zakharenko: You

73
00:05:13.769 --> 00:05:20.045
guys in the room all have your own forks?

74
00:05:20.045 --> 00:05:23.791
&gt;&gt; [INAUDIBLE]

75
00:05:23.791 --> 00:05:24.657
&gt;&gt; Nina Zakharenko: Yes.

76
00:05:24.657 --> 00:05:26.021
&gt;&gt; [INAUDIBLE]

77
00:05:26.021 --> 00:05:29.051
&gt;&gt; Nina Zakharenko: So Brian's repository

78
00:05:29.051 --> 00:05:36.870
is, very, very popular.
&gt;&gt; Nina Zakharenko: [LAUGH]

79
00:05:36.870 --> 00:05:37.850
&gt;&gt; Speaker 3: Now refresh the page,

80
00:05:37.850 --> 00:05:38.940
see how many people.

81
00:05:43.150 --> 00:05:47.140
That's all right.
&gt;&gt; Nina Zakharenko: All right,

82
00:05:47.140 --> 00:05:49.300
I'm gonna keep going.

83
00:05:49.300 --> 00:05:54.300
So, we made a text file that's our
first name and the first letter

84
00:05:54.300 --> 00:05:59.900
of our last name .txt in
the repository folder.

85
00:05:59.900 --> 00:06:06.490
So just to reiterate,
right now I'm on my desktop folder.

86
00:06:06.490 --> 00:06:08.550
I run the git clone.

87
00:06:08.550 --> 00:06:10.920
And I put in the URL from my fork.

88
00:06:11.990 --> 00:06:13.850
And I'll show you guys
where that is again.

89
00:06:13.850 --> 00:06:15.706
So, if I go to my own GitHub.

90
00:06:23.025 --> 00:06:23.944
&gt;&gt; Nina Zakharenko: Here,

91
00:06:23.944 --> 00:06:29.334
I'll see there's this pull-request.

92
00:06:29.334 --> 00:06:34.790
And the URL is right here HTTPS clone URL,

93
00:06:34.790 --> 00:06:39.660
and you can just click this handy icon and
it'll copy it to your clipboard.

94
00:06:42.250 --> 00:06:47.900
So if do an ls in this directory, I see
that I have this pull-requests folder.

95
00:06:47.900 --> 00:06:50.729
I'm doing to cd,
change directory, into that.

96
00:06:53.200 --> 00:07:00.090
If I do an ls here,
I see that I have this txt file.

97
00:07:01.600 --> 00:07:03.530
Now I'm going to run and git-status.

