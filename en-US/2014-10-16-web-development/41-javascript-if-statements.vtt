WEBVTT

1
00:00:00.000 --> 00:00:03.902
[MUSIC]

2
00:00:03.902 --> 00:00:07.608
&gt;&gt; Nina Zakharenko: So far, we've been
writing a lot of lines of code, and

3
00:00:07.608 --> 00:00:11.730
all of them have just been getting
executed one by one by one.

4
00:00:13.160 --> 00:00:17.861
So an if statement is a way for
JavaScript to decide what piece of code it

5
00:00:17.861 --> 00:00:21.780
wants to execute,
depending on which condition is true.

6
00:00:23.160 --> 00:00:26.320
So here's a super simple example.

7
00:00:28.010 --> 00:00:33.018
The anatomy of an if statement
is lowered if, followed by open

8
00:00:33.018 --> 00:00:37.880
parentheses, a condition which most
evaluate to a Boolean expression,

9
00:00:39.050 --> 00:00:43.430
closing parentheses, and
then open bracket, the code that

10
00:00:43.430 --> 00:00:48.340
will be executed only if that
condition is met, and closing bracket.

11
00:00:49.670 --> 00:00:50.773
So let's try this out.

12
00:00:54.412 --> 00:00:59.819
&gt;&gt; Nina Zakharenko: We're gonna make
a variable called number of apples.

13
00:01:01.020 --> 00:01:04.643
We're gonna set it to 5.

14
00:01:04.643 --> 00:01:06.843
And we're gonna write
our first if statement.

15
00:01:11.022 --> 00:01:15.168
&gt;&gt; Nina Zakharenko: So let's say,
if we have more than three apples, and

16
00:01:15.168 --> 00:01:20.608
if you're using the current developer
console and you wanna continue

17
00:01:20.608 --> 00:01:26.139
on line by line without having,
it just evaluate when you press Enter,

18
00:01:26.139 --> 00:01:30.222
press Shift and Enter and
it will go to the next line.

19
00:01:32.663 --> 00:01:37.673
&gt;&gt; Nina Zakharenko: So if we have more
than three apples, that's console.log and

20
00:01:37.673 --> 00:01:41.463
message to ourselves say, I'm apple rich!.

21
00:01:51.906 --> 00:01:56.034
&gt;&gt; Nina Zakharenko: So if we run it,
we will see that I'm really,

22
00:01:56.034 --> 00:01:57.890
really apple rich.

23
00:01:57.890 --> 00:02:00.470
I have all of five apples.

24
00:02:01.600 --> 00:02:06.576
If I go ahead and change this variable,
say, I make it 1,

25
00:02:06.576 --> 00:02:11.655
and I rerun my if statement,
you guys can do that by pressing

26
00:02:11.655 --> 00:02:16.531
up until you get to the line
of code which you wanna rerun,

27
00:02:16.531 --> 00:02:20.217
nothing happens because I'm apple poor.

28
00:02:22.877 --> 00:02:26.130
&gt;&gt; Nina Zakharenko: So there's ways
to add on to one if statement.

29
00:02:27.260 --> 00:02:29.190
The first way to do it is an else.

30
00:02:30.720 --> 00:02:34.010
So if your condition is not met,

31
00:02:34.010 --> 00:02:37.390
you always run the line of code
that's in the else statement.

32
00:02:38.570 --> 00:02:44.520
There's no other path of execution so one
or the other line of code will get wrong.

33
00:02:45.850 --> 00:02:50.760
There's also something called an else
if and you can have as many of those in

34
00:02:50.760 --> 00:02:54.750
between your if and your else as you
want and those are subconditions.

35
00:02:56.650 --> 00:02:58.112
So let's do an exercise.

36
00:03:00.752 --> 00:03:02.440
&gt;&gt; Nina Zakharenko: I hope
you guys like fruits.

37
00:03:02.440 --> 00:03:04.575
Brian was tupperware and I'm fruits, so.

38
00:03:04.575 --> 00:03:09.876
&gt;&gt; Students: [LAUGH]
&gt;&gt; Nina Zakharenko: Here

39
00:03:09.876 --> 00:03:15.070
we have this long if,
else if, and else statement.

40
00:03:15.070 --> 00:03:17.860
Let's just go over the anatomy
of this really quickly.

41
00:03:17.860 --> 00:03:20.260
So the if statement stays
in the same format.

42
00:03:22.330 --> 00:03:24.730
The else if must be on the line after it.

43
00:03:25.830 --> 00:03:29.650
And besides for adding an else in front,

44
00:03:29.650 --> 00:03:34.880
the format is the same,
the else is little bit different.

45
00:03:34.880 --> 00:03:37.980
There is no condition for
it, no parentheses.

46
00:03:37.980 --> 00:03:40.310
Because it will always get run.

47
00:03:42.870 --> 00:03:44.610
So we have three conditions here.

48
00:03:44.610 --> 00:03:49.190
One for if we have more than zero apples,

49
00:03:51.390 --> 00:03:57.780
one if we have less than three apples,
and the other one is like we're out.

50
00:03:58.930 --> 00:04:04.810
So let's try and change this variable and
see how our path of execution changes.

51
00:04:08.630 --> 00:04:14.040
So if I have -99 apples,
everything's the same.

52
00:04:15.710 --> 00:04:20.513
If I have 2 apples, someone tell me which

53
00:04:20.513 --> 00:04:25.192
of these conditions will get executed?

54
00:04:26.872 --> 00:04:27.672
&gt;&gt; Nina Zakharenko: What's that?

55
00:04:31.030 --> 00:04:35.854
&gt;&gt; Students: [CROSSTALK]
&gt;&gt; Nina Zakharenko: Yep, an apple.

56
00:04:37.914 --> 00:04:42.514
&gt;&gt; Nina Zakharenko: We'll
also print Go to the store.

57
00:04:42.514 --> 00:04:47.134
Let's run this.

58
00:04:47.134 --> 00:04:48.110
I'm sorry.

59
00:04:48.110 --> 00:04:51.340
We won't print go to the store
because we're in an else if.

60
00:04:51.340 --> 00:04:56.814
If we change our number to a value that's
greater than three, we will print.

61
00:05:01.294 --> 00:05:03.688
&gt;&gt; Male Student 1: [INAUDIBLE]
&gt;&gt; Nina Zakharenko: Yeah,

62
00:05:03.688 --> 00:05:06.194
let's change this.

63
00:05:06.194 --> 00:05:09.949
&gt;&gt; Female Student 1: It looks like if you
had it set to two, if you had five set to

64
00:05:09.949 --> 00:05:15.120
two, then it's going through and reading
the conditions and it just happened

65
00:05:15.120 --> 00:05:20.234
to come to eat an apple first, even
though it meant both conditions, right?

66
00:05:20.234 --> 00:05:26.342
&gt;&gt; Nina Zakharenko: Yeah, so if I go and
I change this, let's say less than five,

67
00:05:26.342 --> 00:05:33.174
even though these two things conflict,
it'll go to this one first.

68
00:05:39.434 --> 00:05:43.934
&gt;&gt; Male Student 1: Does JavaScript have
the concept of a switch statement?

69
00:05:43.934 --> 00:05:44.774
&gt;&gt; Male Student 2: It does.

70
00:05:47.334 --> 00:05:49.334
&gt;&gt; Nina Zakharenko: Does
this make sense to everyone?

71
00:05:49.334 --> 00:05:53.394
&gt;&gt; Female Student 1: Apples
are greater than five.

72
00:05:53.394 --> 00:05:55.714
It makes more sense.

73
00:05:55.714 --> 00:05:56.933
&gt;&gt; Nina Zakharenko: Okay.

74
00:05:59.574 --> 00:06:04.543
&gt;&gt; Nina Zakharenko: It's
not greater than five,

75
00:06:04.543 --> 00:06:09.114
it's not less than three so

76
00:06:09.114 --> 00:06:13.694
we've got no apples left.

77
00:06:13.694 --> 00:06:21.200
So it's a nice subtle logic bug
&gt;&gt; Nina Zakharenko: And

78
00:06:21.200 --> 00:06:24.214
in order to fix this,
we would put equals here.

79
00:06:28.214 --> 00:06:31.714
&gt;&gt; Nina Zakharenko: So
that should fix our, oops.

80
00:06:33.134 --> 00:06:37.361
&gt;&gt; Female Student 1: Four is sitting
right in between three and five, so

81
00:06:37.361 --> 00:06:39.889
[INAUDIBLE]
&gt;&gt; Nina Zakharenko: This will print Go to

82
00:06:39.889 --> 00:06:40.854
the store.

