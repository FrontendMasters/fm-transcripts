WEBVTT

1
00:00:00.000 --> 00:00:03.902
[MUSIC]

2
00:00:03.902 --> 00:00:07.608
&gt;&gt; Nina Zakharenko: So far, we've been
writing a lot of lines of code, and

3
00:00:07.608 --> 00:00:11.730
all of them have just been getting
executed one by one by one.

4
00:00:13.160 --> 00:00:17.861
So an if statement is a way for
JavaScript to decide what piece of code it

5
00:00:17.861 --> 00:00:21.780
wants to execute,
depending on which condition is true.

6
00:00:23.160 --> 00:00:26.320
So here's a super simple example.

7
00:00:28.010 --> 00:00:33.018
The anatomy of an if statement
is lowered if, followed by open

8
00:00:33.018 --> 00:00:37.880
parentheses, a condition which most
evaluate to a Boolean expression,

9
00:00:39.050 --> 00:00:43.430
closing parentheses, and
then open bracket, the code that

10
00:00:43.430 --> 00:00:48.340
will be executed only if that
condition is met, and closing bracket.

11
00:00:49.670 --> 00:00:55.117
So let's try this out.
&gt;&gt; Nina Zakharenko: We're

12
00:00:55.117 --> 00:00:59.819
gonna make a variable
called number of apples.

13
00:01:01.020 --> 00:01:04.643
We're gonna set it to 5.

14
00:01:04.643 --> 00:01:06.843
And we're gonna write
our first if statement.

15
00:01:11.022 --> 00:01:12.219
&gt;&gt; Nina Zakharenko: So let's say,

16
00:01:12.219 --> 00:01:17.381
if we have more than three apples,
and if you're using the current

17
00:01:17.381 --> 00:01:23.097
developer console and you wanna continue
on line by line without having,

18
00:01:23.097 --> 00:01:28.074
it just evaluate when you press Enter,
press Shift and Enter and

19
00:01:28.074 --> 00:01:32.852
it will go to the next line.
&gt;&gt; Nina Zakharenko: So

20
00:01:32.852 --> 00:01:37.673
if we have more than three apples,
that's console.log and

21
00:01:37.673 --> 00:01:41.463
message to ourselves say, I'm apple rich!.

22
00:01:51.906 --> 00:01:53.317
&gt;&gt; Nina Zakharenko: So if we run it,

23
00:01:53.317 --> 00:01:57.890
we will see that I'm really,
really apple rich.

24
00:01:57.890 --> 00:02:00.470
I have all of five apples.

25
00:02:01.600 --> 00:02:06.576
If I go ahead and change this variable,
say, I make it 1,

26
00:02:06.576 --> 00:02:11.655
and I rerun my if statement,
you guys can do that by pressing

27
00:02:11.655 --> 00:02:16.531
up until you get to the line
of code which you wanna rerun,

28
00:02:16.531 --> 00:02:23.043
nothing happens because I'm apple poor.
&gt;&gt; Nina Zakharenko: So

29
00:02:23.043 --> 00:02:26.130
there's ways to add on
to one if statement.

30
00:02:27.260 --> 00:02:29.190
The first way to do it is an else.

31
00:02:30.720 --> 00:02:34.010
So if your condition is not met,

32
00:02:34.010 --> 00:02:37.390
you always run the line of code
that's in the else statement.

33
00:02:38.570 --> 00:02:44.520
There's no other path of execution so one
or the other line of code will get wrong.

34
00:02:45.850 --> 00:02:50.760
There's also something called an else
if and you can have as many of those in

35
00:02:50.760 --> 00:02:54.750
between your if and your else as you
want and those are subconditions.

36
00:02:56.650 --> 00:03:01.234
So let's do an exercise.
&gt;&gt; Nina Zakharenko: I hope you

37
00:03:01.234 --> 00:03:02.440
guys like fruits.

38
00:03:02.440 --> 00:03:05.755
Brian was tupperware and I'm fruits, so.
&gt;&gt; Students: [LAUGH]

39
00:03:09.455 --> 00:03:11.349
&gt;&gt; Nina Zakharenko: Here we have this long

40
00:03:11.349 --> 00:03:15.070
if, else if, and else statement.

41
00:03:15.070 --> 00:03:17.860
Let's just go over the anatomy
of this really quickly.

42
00:03:17.860 --> 00:03:20.260
So the if statement stays
in the same format.

43
00:03:22.330 --> 00:03:24.730
The else if must be on the line after it.

44
00:03:25.830 --> 00:03:29.650
And besides for adding an else in front,

45
00:03:29.650 --> 00:03:34.880
the format is the same,
the else is little bit different.

46
00:03:34.880 --> 00:03:37.980
There is no condition for
it, no parentheses.

47
00:03:37.980 --> 00:03:40.310
Because it will always get run.

48
00:03:42.870 --> 00:03:44.610
So we have three conditions here.

49
00:03:44.610 --> 00:03:49.190
One for if we have more than zero apples,

50
00:03:51.390 --> 00:03:57.780
one if we have less than three apples,
and the other one is like we're out.

51
00:03:58.930 --> 00:04:04.810
So let's try and change this variable and
see how our path of execution changes.

52
00:04:08.630 --> 00:04:14.040
So if I have -99 apples,
everything's the same.

53
00:04:15.710 --> 00:04:20.787
If I have 2 apples,
someone tell me which of

54
00:04:20.787 --> 00:04:27.302
these conditions will get executed?
&gt;&gt; Nina Zakharenko: What's

55
00:04:27.302 --> 00:04:32.674
that?
&gt;&gt; Students: [CROSSTALK]

56
00:04:33.954 --> 00:04:35.854
&gt;&gt; Nina Zakharenko: Yep, an apple.

57
00:04:37.914 --> 00:04:40.609
&gt;&gt; Nina Zakharenko: We'll also print Go

58
00:04:40.609 --> 00:04:42.514
to the store.

59
00:04:42.514 --> 00:04:47.134
Let's run this.

60
00:04:47.134 --> 00:04:48.110
I'm sorry.

61
00:04:48.110 --> 00:04:51.340
We won't print go to the store
because we're in an else if.

62
00:04:51.340 --> 00:04:55.714
If we change our number to a value
that's greater than three,

63
00:04:55.714 --> 00:05:02.854
we will print.
&gt;&gt; Male Student 1: [INAUDIBLE]

64
00:05:02.854 --> 00:05:03.688
&gt;&gt; Nina Zakharenko: Yeah,

65
00:05:03.688 --> 00:05:07.446
let's change this.
&gt;&gt; Female Student 1: It looks like if you

66
00:05:07.446 --> 00:05:12.221
had it set to two, if you had five set
to two, then it's going through and

67
00:05:12.221 --> 00:05:17.076
reading the conditions and it just
happened to come to eat an apple first,

68
00:05:17.076 --> 00:05:20.234
even though it meant both conditions,
right?

69
00:05:20.234 --> 00:05:22.113
&gt;&gt; Nina Zakharenko: Yeah, so if I go and

70
00:05:22.113 --> 00:05:26.342
I change this, let's say less than five,

71
00:05:26.342 --> 00:05:33.174
even though these two things conflict,
it'll go to this one first.

72
00:05:39.434 --> 00:05:41.121
&gt;&gt; Male Student 1: Does JavaScript have

73
00:05:41.121 --> 00:05:44.144
the concept of a switch statement?
&gt;&gt; Male Student 2: It

74
00:05:44.144 --> 00:05:48.503
does.
&gt;&gt; Nina Zakharenko: Does this make sense

75
00:05:48.503 --> 00:05:50.270
to everyone?
&gt;&gt; Female Student 1: Apples

76
00:05:50.270 --> 00:05:53.394
are greater than five.

77
00:05:53.394 --> 00:05:56.933
It makes more sense.
&gt;&gt; Nina Zakharenko: Okay.

78
00:05:59.574 --> 00:06:03.351
&gt;&gt; Nina Zakharenko: It's not greater than

79
00:06:03.351 --> 00:06:09.114
five, it's not less than three so

80
00:06:09.114 --> 00:06:13.694
we've got no apples left.

81
00:06:13.694 --> 00:06:21.200
So it's a nice subtle logic bug
&gt;&gt; Nina Zakharenko: And

82
00:06:21.200 --> 00:06:22.553
in order to fix this,

83
00:06:22.553 --> 00:06:28.483
we would put equals here.
&gt;&gt; Nina Zakharenko: So

84
00:06:28.483 --> 00:06:34.904
that should fix our, oops.
&gt;&gt; Female Student 1: Four is sitting right

85
00:06:34.904 --> 00:06:39.024
in between three and five, so [INAUDIBLE]
&gt;&gt; Nina Zakharenko: This will

86
00:06:39.024 --> 00:06:40.854
print Go to the store.

