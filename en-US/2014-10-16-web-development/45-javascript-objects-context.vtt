WEBVTT

1
00:00:00.000 --> 00:00:03.866
[MUSIC]

2
00:00:03.866 --> 00:00:08.326
&gt;&gt; Brian Holt: Let's get talking
about JavaScript objects.

3
00:00:08.326 --> 00:00:13.600
Many of you, I'm sure are familiar
with object oriented programming.

4
00:00:13.600 --> 00:00:14.590
I'm sure many of you are not.

5
00:00:14.590 --> 00:00:16.640
So we're just going to
assume that you are not.

6
00:00:18.340 --> 00:00:22.770
So objects in JavaScript are like
a collection of properties.

7
00:00:24.110 --> 00:00:27.390
That sounds kind of really technical and
computer science.

8
00:00:27.390 --> 00:00:29.220
It's actually not very technical.

9
00:00:29.220 --> 00:00:31.360
So we'll look at it here in just a sec.

10
00:00:31.360 --> 00:00:34.450
But they can contain other numbers,
other objects,

11
00:00:34.450 --> 00:00:38.480
other strings, functions,
anything for like that.

12
00:00:38.480 --> 00:00:41.510
And they're useful for
grouping like properties together.

13
00:00:43.280 --> 00:00:45.140
So let's take a look at this car, right?

14
00:00:45.140 --> 00:00:48.550
We have this var car,
which is an object, right?

15
00:00:48.550 --> 00:00:52.310
You can kind of differentiate
an object from anything else

16
00:00:52.310 --> 00:00:54.069
by the curly braces, right?

17
00:00:55.240 --> 00:01:00.560
So here the car has a make,
a model, an acceleration and then

18
00:01:00.560 --> 00:01:04.090
I gave it a function called accelerate,
which would just make it go even faster.

19
00:01:04.090 --> 00:01:08.340
It would increase that
acceleration by ten.

20
00:01:09.510 --> 00:01:11.820
We can talk about this here,
literally in the next slide so

21
00:01:11.820 --> 00:01:15.270
if this doesn't make sense to you we're
about to talk about it so it's good.

22
00:01:16.780 --> 00:01:20.760
So it's kind of a simple pattern right?

23
00:01:20.760 --> 00:01:25.750
But just imagine trying if you were
creating cars in your JavaScript right?

24
00:01:25.750 --> 00:01:28.170
That you have to keep track
of 30 different cars and

25
00:01:28.170 --> 00:01:29.990
you have to keep the track of make one,

26
00:01:29.990 --> 00:01:34.420
make two, makes three as opposed you
could just keep track of car1, car2 and

27
00:01:34.420 --> 00:01:39.840
then they would each have like
their own set of properties.

28
00:01:39.840 --> 00:01:43.770
It's a really powerful practice because
then you can start assuming things about

29
00:01:43.770 --> 00:01:45.060
the objects, right?

30
00:01:45.060 --> 00:01:47.710
We'll see that here in just a second.

31
00:01:47.710 --> 00:01:51.818
And I think Nina actually touched on
it yesterday as well that if you have

32
00:01:51.818 --> 00:01:54.710
a person and a person has an name and
a age, right?

33
00:01:54.710 --> 00:02:01.320
You can always assume that that
person has that name and age.

34
00:02:01.320 --> 00:02:04.280
Yeah, so
let's talk a little bit about this.

35
00:02:06.010 --> 00:02:08.530
So I'm sure all of you have this
this sign around right like

36
00:02:08.530 --> 00:02:12.890
no smoking in this building or
no parking next to this building, right?

37
00:02:12.890 --> 00:02:16.850
So what does this mean in this
particular context, right?

38
00:02:16.850 --> 00:02:18.710
It means the building that it's next to.

39
00:02:18.710 --> 00:02:20.280
It makes sense next to a building.

40
00:02:20.280 --> 00:02:23.580
But what happens if I take that
no smoking in this building and

41
00:02:23.580 --> 00:02:24.750
just stick it in the middle of a field?

42
00:02:25.930 --> 00:02:27.890
Just doesn't make any sense, right.

43
00:02:27.890 --> 00:02:30.420
What is this, what is this building.

44
00:02:30.420 --> 00:02:36.270
So this kind of contextual awareness of
the word this applies also in programming.

45
00:02:36.270 --> 00:02:40.950
The word this refers to whatever I'm
next to, whatever I'm in, right?

46
00:02:41.950 --> 00:02:44.625
So hopefully that makes
sense on a high level,

47
00:02:44.625 --> 00:02:47.200
that's like concretely what that means.

48
00:02:50.310 --> 00:02:56.820
Yeah, this can be complicated particularly
in JavaScript, so just be careful with it.

49
00:02:56.820 --> 00:02:59.111
That's all I'm gonna say about that.

50
00:02:59.111 --> 00:03:00.751
So, let's go ahead and open this.

51
00:03:09.430 --> 00:03:10.310
&gt;&gt; Brian Holt: Maybe it will open.

52
00:03:10.310 --> 00:03:14.579
There we go.
&gt;&gt; Brian Holt: So

53
00:03:14.579 --> 00:03:18.348
let's make this a little bit bigger here
since you don't really need to see that.

54
00:03:18.348 --> 00:03:22.520
So, here.
&gt;&gt; Speaker 2: Where was that?

55
00:03:22.520 --> 00:03:29.718
What slide was that on?
&gt;&gt; Brian Holt: That is on slide one

56
00:03:29.718 --> 00:03:35.750
of them, 124.
&gt;&gt; Speaker 2: Thank

57
00:03:35.750 --> 00:03:36.480
you.
&gt;&gt; Brian Holt: Okay, you're welcome.

58
00:03:37.910 --> 00:03:39.600
So we have a favorite.

59
00:03:39.600 --> 00:03:42.790
And then we also have this
person here that has a favorite.

60
00:03:42.790 --> 00:03:44.740
Okay, so let's first talk about this one.

61
00:03:46.260 --> 00:03:50.280
If our person has a favorite car and
it's a Nissan Leaf, and

62
00:03:50.280 --> 00:03:53.240
we have this function called get fave.

63
00:03:53.240 --> 00:03:56.330
Right, this says return this dot favorite.

64
00:03:56.330 --> 00:04:03.550
So in the context of this object,
get fave is the object.

65
00:04:03.550 --> 00:04:06.070
Right, I think that kind of makes sense,
right?

66
00:04:06.070 --> 00:04:09.450
This refers to essentially a person,
right?

67
00:04:09.450 --> 00:04:11.710
Cuz it's being called within
the context of the person,

68
00:04:11.710 --> 00:04:15.810
it's kind of like sticking the no smoking
sign in this building on your object.

69
00:04:15.810 --> 00:04:19.320
It makes sense that this object
is what this refers to okay?

70
00:04:20.520 --> 00:04:25.280
So we call it document.right
person.getFave okay and

71
00:04:25.280 --> 00:04:28.390
we're calling that
function off the object.

72
00:04:28.390 --> 00:04:30.680
Right here which is what these
parenthesis means, right.

73
00:04:30.680 --> 00:04:33.870
Like it means that I'm
calling that function.

74
00:04:33.870 --> 00:04:38.210
And so it's calling this function,
it's returning this.favorite, okay.

75
00:04:38.210 --> 00:04:43.820
And this.favorite in this particular
case refers to this.favorite right here,

76
00:04:43.820 --> 00:04:45.510
the Nissan Leaf, okay.

77
00:04:47.040 --> 00:04:48.200
Then I'm writing a new line just so,

78
00:04:48.200 --> 00:04:50.960
you know it's easier to read right there,
okay?

79
00:04:52.400 --> 00:04:57.940
This is kind of a, some black magic,
so bear with me for a second.

80
00:04:57.940 --> 00:05:02.270
Right here I'm saying func
equals person.getFave without

81
00:05:02.270 --> 00:05:05.470
the parenthesis, okay?

82
00:05:05.470 --> 00:05:06.070
What does that mean?

83
00:05:06.070 --> 00:05:07.960
It means I'm actually not
calling the function,

84
00:05:07.960 --> 00:05:10.940
I'm just ripping the function
out of the object, right?

85
00:05:12.400 --> 00:05:15.640
All right,
actually to be more succinct about it,

86
00:05:15.640 --> 00:05:17.810
I'm creating another reference to it.

87
00:05:17.810 --> 00:05:19.860
So both of these still exist, right?

88
00:05:19.860 --> 00:05:22.710
So this getFave exists and
this func exists, but

89
00:05:22.710 --> 00:05:24.240
they essentially refer to the same thing.

90
00:05:25.410 --> 00:05:28.570
I mean it's kind of like,
if I say var x equals five, and

91
00:05:28.570 --> 00:05:31.490
I say var y equals x, right?

92
00:05:31.490 --> 00:05:33.350
What is y right now?

93
00:05:33.350 --> 00:05:36.190
It's five, and what is x?

94
00:05:36.190 --> 00:05:37.610
Also five, okay?

95
00:05:37.610 --> 00:05:40.230
Same idea here,
we're just doing it with a function.

96
00:05:40.230 --> 00:05:45.710
You can treat functions like variables in
JavaScript, which is kind of mind blowing,

97
00:05:45.710 --> 00:05:47.548
but it's also extremely powerful.

98
00:05:47.548 --> 00:05:51.320
And if you want to explain why it's
the most powerful pattern in the world,

99
00:05:51.320 --> 00:05:55.480
there's a front end masters course
called Hard Core functional Programming,

100
00:05:55.480 --> 00:05:57.100
that's just mind blowing.

101
00:05:57.100 --> 00:05:58.780
My mind melted when I watched it.

102
00:05:58.780 --> 00:06:01.280
It was awesome.
&gt;&gt; Speaker 3: Launching next month.

103
00:06:01.280 --> 00:06:02.320
&gt;&gt; Brian Holt: Launching next month.

104
00:06:03.880 --> 00:06:04.396
&gt;&gt; Brian Holt: Cool, so

105
00:06:04.396 --> 00:06:06.750
that is exactly what's happening here.

106
00:06:06.750 --> 00:06:12.980
I've now ripped func out so now func
right here refers to this getFave, okay?

107
00:06:12.980 --> 00:06:16.440
So that thus far should make sense, but

108
00:06:16.440 --> 00:06:19.800
now I'm running document.write,
and I'm calling Func.

109
00:06:20.870 --> 00:06:23.350
So essentially now what
I've done is I've ripped

110
00:06:23.350 --> 00:06:27.680
the no smoking in this building
sign off the building and

111
00:06:27.680 --> 00:06:31.040
then I threw it in the middle of
the field to see what happens, right.

112
00:06:32.460 --> 00:06:35.190
So now I'm doing document.write func.

113
00:06:35.190 --> 00:06:39.815
It's no longer in the context of
this person, it's like a lost puppy.

114
00:06:39.815 --> 00:06:43.440
[LAUGH] So what does it do?

115
00:06:43.440 --> 00:06:46.411
There is a global object
in JavaScript right,

116
00:06:46.411 --> 00:06:50.240
in the case of the browser which
is most of what we deal with.

117
00:06:50.240 --> 00:06:53.870
It's the window,
like the window the entire browser object.

118
00:06:55.880 --> 00:06:59.380
So I have up here var favorite,
which is not in any particular context,

119
00:06:59.380 --> 00:07:02.470
it has no scope to it,
it's just in the global object.

120
00:07:02.470 --> 00:07:07.830
So when I call document.write func,
what's it actually looking for?

121
00:07:07.830 --> 00:07:09.945
It's looking for this favorite up here,

122
00:07:09.945 --> 00:07:15.640
right because it's now a no
smoking this building sign and

123
00:07:15.640 --> 00:07:19.490
that's on the entire world and this
favorite is the only one that i can see.

124
00:07:21.790 --> 00:07:24.620
Are we okay with that,
how do we feel about that?

125
00:07:24.620 --> 00:07:29.850
Right, we got Nissan Leaf right here and
we have Tesla Model S right here.

126
00:07:29.850 --> 00:07:33.850
That's the explanation,
that's what context is.

127
00:07:33.850 --> 00:07:38.083
This is mostly to, this isn't actually
a very useful pattern by the way,

128
00:07:38.083 --> 00:07:40.970
this is purely like an academic exercise.

129
00:07:40.970 --> 00:07:44.570
You don't actually wanna rip functions out
and then typically you wanna know exactly

130
00:07:44.570 --> 00:07:47.460
what this refers to and
you don't want this to be changing.

131
00:07:47.460 --> 00:07:52.041
So, yeah, it's powerful, it's cool,

132
00:07:52.041 --> 00:07:55.434
it's a little confusing.
&gt;&gt; Speaker 2: So,

133
00:07:55.434 --> 00:08:00.260
it's calling both models as a favorite.
&gt;&gt; Brian Holt: Mm-hm,

134
00:08:00.260 --> 00:08:03.730
so, I'm calling the function twice.

135
00:08:03.730 --> 00:08:06.110
Right here, person.get fav.

136
00:08:06.110 --> 00:08:09.330
That's, I'm calling it within
this context of the person,

137
00:08:09.330 --> 00:08:11.460
therefore it's returning Nissan Leaf.

138
00:08:13.330 --> 00:08:17.130
I'm then calling it again in
the context of the global object.

139
00:08:17.130 --> 00:08:20.200
And that is referring to
this favorite up here.

140
00:08:20.200 --> 00:08:23.432
That's why it says Nissan Leaf first,
which is this one.

141
00:08:23.432 --> 00:08:28.116
Right, and then it says Tesla Model S
down after calling this one,

142
00:08:28.116 --> 00:08:32.898
which refers to this one.
&gt;&gt; Brian Holt: Now this is

143
00:08:32.898 --> 00:08:34.680
actually quite difficult JavaScript.

144
00:08:34.680 --> 00:08:38.210
There's actually many front end
developers that won't grasp this.

145
00:08:38.210 --> 00:08:41.353
I will tell you that because it's one
of our interview questions at Reddit,

146
00:08:41.353 --> 00:08:43.594
and a lot of people miss it.
&gt;&gt; Speaker 2: [LAUGH]

147
00:08:43.594 --> 00:08:46.090
&gt;&gt; Brian Holt: So, this is really cool.

148
00:08:46.090 --> 00:08:48.750
I think it's really cool
to learn it very early on

149
00:08:48.750 --> 00:08:51.460
because once you kinda grasp this,
kind of the sky's the limit.

150
00:08:51.460 --> 00:08:53.280
There's really cool stuff
you can do with ConTEXT.

