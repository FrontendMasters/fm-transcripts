WEBVTT

1
00:00:00.180 --> 00:00:04.016
[MUSIC]

2
00:00:04.016 --> 00:00:05.400
&gt;&gt; Brian Holt: Receiving parameters.

3
00:00:05.400 --> 00:00:06.358
Okay.

4
00:00:06.358 --> 00:00:10.924
So let's take, for example,

5
00:00:10.924 --> 00:00:14.969
ESPN.com, for example.

6
00:00:14.969 --> 00:00:18.510
They have a page for
each individual NBA basketball team.

7
00:00:19.560 --> 00:00:22.530
I don't' want to have to explicitly
write a brand new page for

8
00:00:22.530 --> 00:00:24.070
every team in the NBA, right?

9
00:00:24.070 --> 00:00:26.660
What I actually want to do is
I wanna write one page and

10
00:00:26.660 --> 00:00:29.610
then have it adapt to
whatever team goes in it.

11
00:00:29.610 --> 00:00:34.790
However, that means your page has to
be aware of how it's being reached.

12
00:00:34.790 --> 00:00:37.459
So, for example,
if I want to go to teams/Jazz or

13
00:00:37.459 --> 00:00:41.930
teams/Timberwolves
&gt;&gt; Brian Holt: Sorry.

14
00:00:44.070 --> 00:00:47.710
I want them to go to the same page,
but with different parameters.

15
00:00:47.710 --> 00:00:50.856
This is very possible and
very easy with Express.

16
00:00:53.576 --> 00:00:56.377
&gt;&gt; Brian Holt: So, let's go ahead and
take a look at that.

17
00:00:58.307 --> 00:01:00.300
&gt;&gt; Brian Holt: So,
we're gonna get out of here.

18
00:01:00.300 --> 00:01:04.774
We're going to go to params, okay?

19
00:01:04.774 --> 00:01:07.470
Npm install Express.

20
00:01:07.470 --> 00:01:10.710
I'll let you do that.

21
00:01:10.710 --> 00:01:14.758
Mine's already there, so I'm not gonna
keep wasting it, keep wasting bandwidth.

22
00:01:17.806 --> 00:01:23.478
&gt;&gt; Brian Holt: Okay,
we're going to go to params, app.js.

23
00:01:23.478 --> 00:01:27.050
Close that one.

24
00:01:27.050 --> 00:01:28.396
Okay?
This top by now should look

25
00:01:28.396 --> 00:01:29.170
super familiar.

26
00:01:29.170 --> 00:01:31.560
And we're gonna do app.get.

27
00:01:31.560 --> 00:01:33.410
And then we have :name.

28
00:01:33.410 --> 00:01:35.260
So, this is new, right?

29
00:01:35.260 --> 00:01:37.160
We haven't seen this before.

30
00:01:37.160 --> 00:01:41.074
That colon means this is going
to be some sort of parameter,

31
00:01:41.074 --> 00:01:46.322
some sort of user generated, or not user
generated but dynamic parameter that I

32
00:01:46.322 --> 00:01:51.282
want to be able to pass back to my server
so it knows exactly what to serve me.

33
00:01:53.497 --> 00:01:55.910
&gt;&gt; Brian Holt: So in this particular
case we're going to set the header.

34
00:01:55.910 --> 00:01:58.502
It's gonna be text.plan again.

35
00:01:58.502 --> 00:02:02.400
And we're going to send
back you picked name.

36
00:02:02.400 --> 00:02:05.050
So, it's really, it doesn't even
really care what the parameter is,

37
00:02:05.050 --> 00:02:06.350
it's just going to give it back to you.

38
00:02:06.350 --> 00:02:07.930
But that's how you get it back.

39
00:02:07.930 --> 00:02:11.510
So this is the first time we're gonna
use req, which stands for requests,

40
00:02:11.510 --> 00:02:12.278
if you don't remember.

41
00:02:12.278 --> 00:02:17.075
And we're gonna look at the params,
and we're gonna get name.

42
00:02:18.456 --> 00:02:22.148
&gt;&gt; Speaker 2: There's a question, I think,
when you're moving T to an examples,

43
00:02:22.148 --> 00:02:26.279
they were wondering if there was a way
they didn't have to keep doing install,

44
00:02:26.279 --> 00:02:30.161
but I think you touched that a little
bit with installing to each different

45
00:02:30.161 --> 00:02:31.215
project, right?

46
00:02:31.215 --> 00:02:32.280
&gt;&gt; Brian Holt: Yeah.

47
00:02:32.280 --> 00:02:36.660
So, typically, you're not gonna
move between so many projects so

48
00:02:36.660 --> 00:02:37.516
quickly, right?

49
00:02:37.516 --> 00:02:39.730
We're doing a project every three minutes,
right?

50
00:02:39.730 --> 00:02:42.055
That's totally and completely atypical.

51
00:02:42.055 --> 00:02:46.058
Typically, you're gonna start on
a project, you're gonna work on it for

52
00:02:46.058 --> 00:02:49.690
it x amount of time, but
you only have to nmp install Express once.

53
00:02:49.690 --> 00:02:52.320
We're gonna talk about another way to do,

54
00:02:52.320 --> 00:02:55.670
to manage dependencies that's a little bit
easier, but that's in just one second.

55
00:02:57.430 --> 00:03:00.140
Okay.
So, how this code looking for you?

56
00:03:00.140 --> 00:03:02.200
Does this is kinda make sense?

57
00:03:02.200 --> 00:03:04.241
So let's take a look at
what it actually does.

58
00:03:07.136 --> 00:03:10.417
&gt;&gt; Brian Holt: We're
gonna do nodemon app.js.

59
00:03:12.637 --> 00:03:15.420
&gt;&gt; Brian Holt: And
now we're gonna go to, back to our app.

60
00:03:15.420 --> 00:03:23.990
And I'm gonna go to slash team slash Jazz,
right?

61
00:03:23.990 --> 00:03:30.260
You picked jazz, you picked
&gt;&gt; Brian Holt: Timberwolves, right?

62
00:03:30.260 --> 00:03:32.980
You picked anything.

63
00:03:32.980 --> 00:03:34.349
[LAUGH] It doesn't actually really care.

64
00:03:34.349 --> 00:03:39.710
So, but
that's just kind of a contrived example

65
00:03:39.710 --> 00:03:44.956
of how to get user or
client input on the server.

