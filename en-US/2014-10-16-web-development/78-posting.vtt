WEBVTT

1
00:00:00.000 --> 00:00:03.980
[MUSIC]

2
00:00:03.980 --> 00:00:07.200
&gt;&gt; Brian Holt: So
now we're gonna talk about POSTing, okay?

3
00:00:09.610 --> 00:00:13.710
Often we wanna send much more than just
like a single parameter to the server.

4
00:00:13.710 --> 00:00:17.489
Imagine when you're trying to
do like a form signup, right?

5
00:00:18.930 --> 00:00:21.710
You wanna set their user name,
their passwords, their email,

6
00:00:21.710 --> 00:00:23.370
their address or phone number.

7
00:00:23.370 --> 00:00:27.020
You wanna take an entire form of data in,
you gonna do this by posting.

8
00:00:29.750 --> 00:00:33.960
And right now we gonna use jQuery and
using Ajax,

9
00:00:33.960 --> 00:00:37.881
something that we've all done before and
we're going to post to the server.

10
00:00:39.190 --> 00:00:45.142
So let's go look at
node-exercises/posting.

11
00:00:48.202 --> 00:00:52.449
&gt;&gt; Brian Holt: So
notice I already gave you package.json, so

12
00:00:52.449 --> 00:00:54.580
let's get out of here.

13
00:00:55.630 --> 00:00:59.260
I'm going to go into posting.

14
00:00:59.260 --> 00:01:01.070
Everyone just run npm install.

15
00:01:06.170 --> 00:01:08.918
&gt;&gt; Brian Holt: Mine already installed,
so it's fine, but

16
00:01:08.918 --> 00:01:13.240
yours should give a whole
bunch of installing going on.

17
00:01:13.240 --> 00:01:15.270
And you should get both express and

18
00:01:15.270 --> 00:01:17.680
there's another one in
there called body parser.

19
00:01:17.680 --> 00:01:20.640
Which I'll show you here in just
a sec what that exactly does.

20
00:01:25.240 --> 00:01:28.660
&gt;&gt; Brian Holt: Okay, so
we're gonna look here at app.js.

21
00:01:28.660 --> 00:01:31.880
Require express and
then require bodyParser.

22
00:01:31.880 --> 00:01:37.069
And then we're gonna have the app
use the bodyParser for json parsing.

23
00:01:38.470 --> 00:01:40.440
Now why are we doing this?

24
00:01:40.440 --> 00:01:45.630
It's because express itself does
not actually understand json.

25
00:01:47.480 --> 00:01:51.630
And the reason for that is express is
flexible enough that if you want to have

26
00:01:51.630 --> 00:01:54.930
it speak XML or
you wanna have it speak another language.

27
00:01:54.930 --> 00:01:56.410
It's flexible enough
to be able to do that.

28
00:01:56.410 --> 00:02:00.180
So you just say here is the parser that
I want you to use when you're trying to

29
00:02:00.180 --> 00:02:06.870
understand what people
are trying to tell you.

30
00:02:06.870 --> 00:02:12.931
So, you're gonna do app.use,
the bodyParser, okay?

31
00:02:12.931 --> 00:02:15.060
Here we're doing the static,
sharing again.

32
00:02:15.060 --> 00:02:16.950
So that should look familiar.

33
00:02:18.280 --> 00:02:23.420
And then here, notice we're saying
app.post instead of app.get.

34
00:02:23.420 --> 00:02:26.540
Key difference there.

35
00:02:26.540 --> 00:02:30.723
And then from the user it's gonna
expect both the username and

36
00:02:30.723 --> 00:02:34.110
a password which come in this body object,
okay?

37
00:02:38.040 --> 00:02:41.480
And then here, we're actually gonna
do some switching based on, that

38
00:02:41.480 --> 00:02:46.180
if the name is Brian and the password is
pass, which is probably my best password.

39
00:02:46.180 --> 00:02:48.200
Don't steal my password.

40
00:02:49.990 --> 00:02:53.730
Then send a status of 200 which
means yeah, you logged in and

41
00:02:53.730 --> 00:02:56.900
you're gonna say status:success.

42
00:02:56.900 --> 00:03:00.570
Okay, if they have the incorrect
password or anything like that.

43
00:03:00.570 --> 00:03:03.340
You're gonna send him a 401
which means you can't log in,

44
00:03:03.340 --> 00:03:07.120
it means unauthorized and status failure.

45
00:03:08.550 --> 00:03:10.970
You also might have noticed that
we're not using end right now,

46
00:03:10.970 --> 00:03:13.800
we're using json, right?

47
00:03:13.800 --> 00:03:19.232
As you might guess this is gonna send
json back instead of just plain text.

48
00:03:20.980 --> 00:03:25.620
Okay, and
then here we're just saying app .listen.

49
00:03:25.620 --> 00:03:29.250
Here in the public directory,
I mean just so you can have an idea.

50
00:03:29.250 --> 00:03:33.229
I just have a little button
right here that's gonna do ajax,

51
00:03:33.229 --> 00:03:35.580
something that we curved earlier.

52
00:03:35.580 --> 00:03:39.390
And it just gonna send up both
the username and the password.

53
00:03:41.290 --> 00:03:41.790
Pretty cool.

54
00:03:42.870 --> 00:03:47.340
Okay, and then on success it's gonna
log out the data that it sends back.

55
00:03:49.640 --> 00:03:53.150
Questions about the code before we
move on to actually show you and

56
00:03:53.150 --> 00:03:56.170
then we can come back
to talk more about it.

57
00:03:57.990 --> 00:04:03.873
Okay, so
I'm gonna say nodemon app.js, okay?

58
00:04:03.873 --> 00:04:04.680
It started the app.

59
00:04:07.390 --> 00:04:08.700
Let's see, let's go back here.

60
00:04:10.930 --> 00:04:15.910
We're gonna go to index.html, which
is being served by the static assets.

61
00:04:17.070 --> 00:04:20.180
So I now have a username and password.

62
00:04:20.180 --> 00:04:22.120
Don't worry if you don't
see these asterisks,

63
00:04:22.120 --> 00:04:26.410
it's my last pass, it's an extension I
have installed, don't worry about it.

64
00:04:28.220 --> 00:04:32.520
So I'm gonna send up first of
all like Nina and wrong or

65
00:04:32.520 --> 00:04:34.818
something like that,
like some wrong password.

66
00:04:34.818 --> 00:04:40.050
And it's gonna tell me,
you are unauthorized to reach this API.

67
00:04:41.140 --> 00:04:45.780
But if I send up Brian and pass and

68
00:04:45.780 --> 00:04:48.840
I hit submit, I get success, right?

69
00:04:49.860 --> 00:04:52.360
This is obviously not the best
way to write your log in.

70
00:04:52.360 --> 00:04:57.150
But it's kind of a precursor example for

71
00:04:57.150 --> 00:04:59.019
how you would write some sort
of authorization system.

72
00:05:01.540 --> 00:05:03.600
Questions about that, make sense?

73
00:05:06.260 --> 00:05:07.640
&gt;&gt; Brian Holt: Okay, cool.

74
00:05:14.323 --> 00:05:17.675
&gt;&gt; Brian Holt: And
also notice right here in app.js,

75
00:05:17.675 --> 00:05:22.050
I'm logging out whatever username and
password.

76
00:05:22.050 --> 00:05:26.500
So you can see right here it knows the
name and it knows the password, etc., etc.

