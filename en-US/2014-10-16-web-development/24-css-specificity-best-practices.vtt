WEBVTT

1
00:00:00.000 --> 00:00:03.780
[MUSIC]

2
00:00:03.780 --> 00:00:07.112
&gt;&gt; Brian Holt: I hesitate to even
show you this because it's so bad.

3
00:00:07.112 --> 00:00:12.940
I'm gonna show you a really bad idea
because you'll probably see it somewhere.

4
00:00:17.832 --> 00:00:21.080
&gt;&gt; Brian Holt: My God everything
just went orange, right?

5
00:00:21.080 --> 00:00:23.830
But it's from div,
like what the hell happened?

6
00:00:23.830 --> 00:00:30.280
So, there is this idea of important, that
you can throw it on the property and it

7
00:00:30.280 --> 00:00:34.036
will override anything, it does not matter
how specific it is it'll override it.

8
00:00:35.926 --> 00:00:38.645
Now, there are even
more special things for

9
00:00:38.645 --> 00:00:41.680
accounting for
what if two importants conflict, but

10
00:00:41.680 --> 00:00:45.820
if you have importance conflicting,
you have a serious problem with your CSS.

11
00:00:45.820 --> 00:00:48.290
So do not use important.

12
00:00:49.600 --> 00:00:54.690
I really can't think of very many use
cases where you should be using important,

13
00:00:54.690 --> 00:00:58.486
what you should do is don't use important.

14
00:00:58.486 --> 00:01:02.800
And rather, if you need

15
00:01:02.800 --> 00:01:08.600
this one with no class to override it,
give it another class.

16
00:01:08.600 --> 00:01:10.720
Until you have enough classes.

17
00:01:10.720 --> 00:01:14.053
Until you can actually override
it using specificity, right?

18
00:01:19.070 --> 00:01:21.890
&gt;&gt; Brian Holt: So the reason right
here I said don't use a space.

19
00:01:21.890 --> 00:01:25.740
If you put a space there then
you are implying nesting.

20
00:01:25.740 --> 00:01:30.682
So for example,
let's just come up here and

21
00:01:30.682 --> 00:01:37.774
say all of these divs are inside
of a class="parent-div".

22
00:01:40.234 --> 00:01:40.956
&gt;&gt; Brian Holt: Okay.

23
00:01:40.956 --> 00:01:43.540
Move all these in a little bit.

24
00:01:43.540 --> 00:01:45.081
Come on.

25
00:01:48.761 --> 00:01:50.310
&gt;&gt; Brian Holt: Okay?

26
00:01:50.310 --> 00:01:53.129
So now all of these divs are nested
inside of a parent div, right?

27
00:01:54.260 --> 00:02:00.320
What can I actually, this is why you
don't style based on divs, right?

28
00:02:01.540 --> 00:02:06.795
Because now it's like weird looking, but
I guess what we can do now, we can say,

29
00:02:23.310 --> 00:02:25.050
&gt;&gt; Brian Holt: I think it is inherit.

30
00:02:26.490 --> 00:02:29.400
So it should loose its background-color.

31
00:02:29.400 --> 00:02:36.544
And border-color: transparent.

32
00:02:36.544 --> 00:02:40.600
And height: auto.

33
00:02:40.600 --> 00:02:42.050
So what have I done here?

34
00:02:44.170 --> 00:02:47.740
Really bad, right, that I'm
writing bad CSS for you right now.

35
00:02:47.740 --> 00:02:51.594
But-
&gt;&gt; [INAUDIBLE]

36
00:02:52.720 --> 00:02:54.550
&gt;&gt; Brian Holt: So, the issues here is that

37
00:02:54.550 --> 00:02:57.440
you should not style divs as just attack,
right?

38
00:02:57.440 --> 00:02:59.780
You should not give divs height or
something like that.

39
00:02:59.780 --> 00:03:02.568
That's awful because you can
use divs all over your code and

40
00:03:02.568 --> 00:03:05.300
you don't wanna have to override
it every single time, right?

41
00:03:05.300 --> 00:03:08.490
Rather, what I should have done is
I not should have styled on div and

42
00:03:08.490 --> 00:03:11.030
I should have just given
them all the same class.

43
00:03:11.030 --> 00:03:14.982
But, what I did here is background-color.

44
00:03:14.982 --> 00:03:18.350
I told there's you're gonna get, something
else is gonna give you a color and

45
00:03:18.350 --> 00:03:19.540
I want you to just totally ignore it.

46
00:03:19.540 --> 00:03:22.080
I want you to get whatever was
supposed to be in the first place.

47
00:03:22.080 --> 00:03:23.320
That's what inherit means.

48
00:03:24.330 --> 00:03:27.260
Border-color, I said you have a border,
just make it transparent.

49
00:03:27.260 --> 00:03:31.200
So the border actually is there,
it's just not being used.

50
00:03:31.200 --> 00:03:36.375
And then the highest said I want you to
take whatever space that you need to take,

51
00:03:36.375 --> 00:03:39.400
that's like the default for height, right?

52
00:03:39.400 --> 00:03:43.573
I have ten divs inside of me each one of
them has a hundred pixels so I should be

53
00:03:43.573 --> 00:03:47.760
a thousand pixels right, because I
have ten divs that are hundred pixels.

54
00:03:47.760 --> 00:03:52.910
It just says size or self accordingly
that's the point of a height: auto.

55
00:03:52.910 --> 00:03:55.890
So that was a lot of bad CSS,
just to teach you that.

56
00:03:57.970 --> 00:03:59.460
But notice like all the spaces here,
anyway.

57
00:04:02.200 --> 00:04:07.281
I said all this to say,
is like if I wanted

58
00:04:07.281 --> 00:04:12.670
to say parent-div, div and I said color.

59
00:04:16.610 --> 00:04:17.140
&gt;&gt; Brian Holt: I don't know.

60
00:04:17.140 --> 00:04:18.470
I think cyan's a color.

61
00:04:20.258 --> 00:04:21.721
I want background color though.

62
00:04:27.280 --> 00:04:30.421
&gt;&gt; Brian Holt: Have to get rid of that.

63
00:04:30.421 --> 00:04:31.640
Okay.

64
00:04:31.640 --> 00:04:35.355
So now, no class, also no class, and

65
00:04:35.355 --> 00:04:41.044
one class are all getting overridden,
but two classes and

66
00:04:41.044 --> 00:04:45.360
two classes in id are not
being overridden.

67
00:04:47.470 --> 00:04:52.500
So, this is where we start getting into
these weird specificity edge cases.

68
00:04:52.500 --> 00:04:53.000
Okay.

69
00:04:54.250 --> 00:04:56.800
So, let's go over it.

70
00:04:56.800 --> 00:04:58.830
It's overriding no class, right?

71
00:04:58.830 --> 00:05:01.890
Because now it has a class, right?

72
00:05:01.890 --> 00:05:03.210
I'm referring to the parent class.

73
00:05:03.210 --> 00:05:05.798
I don't have to necessarily
be referring to its class.

74
00:05:05.798 --> 00:05:11.413
It essentially just takes a tally
of how specific is this and

75
00:05:11.413 --> 00:05:15.130
from there apply these styles to that.

76
00:05:16.150 --> 00:05:18.680
So right now,
there's more specific than div,

77
00:05:18.680 --> 00:05:23.180
because there is one class plus one tag,
being referred to.

78
00:05:23.180 --> 00:05:26.130
So, that's why it's overwriting
one class or there's no class.

79
00:05:27.420 --> 00:05:30.029
And also no class,
because it's referring to a class, right?

80
00:05:32.620 --> 00:05:36.260
Now, another or
this class is being overwritten.

81
00:05:36.260 --> 00:05:42.070
This one class right here because
it has one class plus a tag.

82
00:05:42.070 --> 00:05:48.465
So it has a parent div plus a div
that are being referred to.

83
00:05:48.465 --> 00:05:49.039
Right?
So

84
00:05:49.039 --> 00:05:53.405
essentially it has two things
now being referred to.

85
00:05:53.405 --> 00:05:55.860
Does that mystical, magic make sense?

86
00:05:56.998 --> 00:06:03.170
So I'm gonna give you a rule of thumb now,
that should work 95% of the time.

87
00:06:03.170 --> 00:06:09.450
So just picture it like a,
I'm just gonna write up here.

88
00:06:09.450 --> 00:06:14.890
Like a four digit number,
we'll just say three digit number.

89
00:06:14.890 --> 00:06:20.074
So the first one is how many IDs does it
have referencing it, how many classes

90
00:06:20.074 --> 00:06:25.100
does it have referencing it and
how many tags does it have referencing it?

91
00:06:26.490 --> 00:06:29.690
So for example if I have one that
has just one tag referencing it.

92
00:06:29.690 --> 00:06:33.775
So when I say tag I mean div, p,
span, something like that, right?

93
00:06:35.690 --> 00:06:38.030
And then it would be 0 0 1, right?

94
00:06:38.030 --> 00:06:40.580
That would be like, div, right?

95
00:06:41.670 --> 00:06:46.493
But if I have like class this
class being referred to it

96
00:06:46.493 --> 00:06:51.220
would be 0 1 0 and
that would be like this-class.

97
00:06:51.220 --> 00:06:56.371
Or if I had like this class and
another class would be 0 2 0,

98
00:06:56.371 --> 00:07:00.722
and that would be
this-class.another-class.

99
00:07:03.802 --> 00:07:10.850
&gt;&gt; Brian Holt: So what I'm getting at is
1 0 is bigger than 1, so 1 0 wins, right?

100
00:07:10.850 --> 00:07:12.770
So I would need a lot of.

101
00:07:12.770 --> 00:07:18.980
It's actually not even that, but
it's just kind of a rule of thumb.

102
00:07:18.980 --> 00:07:23.250
You'd actually need 255
tags to override one class.

103
00:07:23.250 --> 00:07:25.510
You need 255 classes to override one ID.

104
00:07:26.970 --> 00:07:33.110
But, again, what I'm getting at
is if I had this-class-div so,

105
00:07:33.110 --> 00:07:36.738
it'd be 011, it'd be this class.

106
00:07:36.738 --> 00:07:41.290
Actually, be div.this-class, right?

107
00:07:43.320 --> 00:07:48.110
So, it's saying I want this class but
only want this classes that are on divs.

108
00:07:49.720 --> 00:07:54.650
And so that would have 11 specificities,
so it would beat 10 specificity.

109
00:07:57.000 --> 00:07:59.960
I'm using this mostly as a mnemonic for
if you have classes and

110
00:07:59.960 --> 00:08:03.890
divs, not that if you have ten tags
that it overrides one class, right?

111
00:08:03.890 --> 00:08:05.940
That's not what this illustrates.

112
00:08:07.710 --> 00:08:11.390
Again, and then if you have one ID.

113
00:08:11.390 --> 00:08:13.000
It doesn't matter how many classes,

114
00:08:13.000 --> 00:08:16.100
how many tags referencing,
the ID is always gonna be more specific.

115
00:08:18.590 --> 00:08:22.312
And if you have an important,
just think of it like this.

116
00:08:22.312 --> 00:08:23.231
It's 1000.

117
00:08:23.231 --> 00:08:27.092
It just overrides everything.

118
00:08:27.092 --> 00:08:29.930
And there's actually even
one more on top of that.

119
00:08:29.930 --> 00:08:34.620
So, let's go back to our HTML.

120
00:08:37.480 --> 00:08:38.950
Right here.

121
00:08:38.950 --> 00:08:41.823
So you can actually what's
called inline styling.

122
00:08:41.823 --> 00:08:48.782
So if I say style="background-color".

123
00:08:53.663 --> 00:08:57.984
&gt;&gt; Brian Holt: Pink or
something like that.

124
00:08:57.984 --> 00:09:00.664
Except let's put that one on
the ID just to illustrate it.

125
00:09:04.604 --> 00:09:07.620
&gt;&gt; Brian Holt: So if we go down here
notice that now it's pink even though I'm

126
00:09:07.620 --> 00:09:08.700
styled based on ID.

127
00:09:08.700 --> 00:09:13.780
In-line styles even override IDs,
but they do not override important.

128
00:09:16.360 --> 00:09:20.620
Now, you might be tempted
to use inline styles.

129
00:09:20.620 --> 00:09:23.810
There is never, not even one,
don't even do it.

130
00:09:23.810 --> 00:09:25.300
Do not inline your styles.

131
00:09:25.300 --> 00:09:27.410
It's just the worst thing you can do for
yourself.

132
00:09:28.910 --> 00:09:33.780
Because now, I have split my CSS
among my HTML file and my CSS, so

133
00:09:33.780 --> 00:09:34.930
if I have to go change.

134
00:09:34.930 --> 00:09:37.910
This was a pink div and
I need it to be gray.

135
00:09:37.910 --> 00:09:41.010
I don't know if it's in my CSS file,
I don't know if it's my HTML file

136
00:09:41.010 --> 00:09:43.910
It takes me now forever,
to find where's this style coming from?

137
00:09:45.250 --> 00:09:49.520
Keep all of your CSS in your CSS files,
it should be separate.

138
00:09:49.520 --> 00:09:50.961
Do not inline your styles.

139
00:09:54.082 --> 00:09:55.542
&gt;&gt; Speaker 2: We've got a few
questions keeping up here.

140
00:09:55.542 --> 00:09:56.922
&gt;&gt; Brian Holt: All right.

141
00:09:56.922 --> 00:10:00.483
&gt;&gt; Speaker 2: Do you think you could put
a link to this Code Pen out so they could.

142
00:10:00.483 --> 00:10:07.841
&gt;&gt; Brian Holt: Yeah, let me save.

143
00:10:07.841 --> 00:10:14.121
Okay, and I will just.

144
00:10:14.121 --> 00:10:14.680
Let's see.

145
00:10:14.680 --> 00:10:15.650
Where am I?

146
00:10:15.650 --> 00:10:16.850
Right there.

147
00:10:16.850 --> 00:10:19.022
Add new slide.

148
00:10:19.022 --> 00:10:21.807
&gt;&gt; Speaker 3: Is there a way of using the
Google Development Tools to look at what

149
00:10:21.807 --> 00:10:24.190
styles are being applied
to a particular element?

150
00:10:24.190 --> 00:10:25.240
&gt;&gt; Brian Holt: Absolutely.

151
00:10:25.240 --> 00:10:27.930
We looked at it but we'll look at
it again here in just one second.

152
00:10:27.930 --> 00:10:30.722
Let's see.

153
00:10:30.722 --> 00:10:31.582
Text.

154
00:10:36.793 --> 00:10:38.950
&gt;&gt; Brian Holt: Yeah,
you've gotta make it not black.

155
00:10:38.950 --> 00:10:43.212
Good job.

156
00:10:43.212 --> 00:10:47.920
Black, rem, I don't know,
something like that.

157
00:10:47.920 --> 00:10:49.372
Yeah.

158
00:10:49.372 --> 00:10:51.732
So, it's not pretty but
it's on the slides now.

159
00:10:51.732 --> 00:10:54.432
It's slide 67.

160
00:10:54.432 --> 00:10:56.192
Is that showing up for everybody?

161
00:10:56.192 --> 00:10:56.752
&gt;&gt; Speaker 2: Yep.

162
00:10:56.752 --> 00:10:57.492
&gt;&gt; Brian Holt: Okay.

163
00:11:03.752 --> 00:11:08.872
&gt;&gt; Speaker 2: I think one of them was kind
of doing some different things with these.

164
00:11:08.872 --> 00:11:14.094
How would I go about making these
boxes appear beside each other and

165
00:11:14.094 --> 00:11:16.992
then like fixing them to the footer?

166
00:11:16.992 --> 00:11:21.492
&gt;&gt; Brian Holt: Fixing them
to the footer is a trick.

167
00:11:21.492 --> 00:11:24.120
It requires some kind
of advanced techniques.

168
00:11:24.120 --> 00:11:27.695
So I would say look that
one up on your own.

169
00:11:27.695 --> 00:11:28.349
&gt;&gt; Speaker 2: Okay.

170
00:11:28.349 --> 00:11:31.665
&gt;&gt; Brian Holt: We're gonna
talk about document flow and

171
00:11:31.665 --> 00:11:34.585
floating here in just a sec so
that question will be in,

172
00:11:34.585 --> 00:11:37.145
I think it's literally in the next set
of slides, so we'll talk about that.

