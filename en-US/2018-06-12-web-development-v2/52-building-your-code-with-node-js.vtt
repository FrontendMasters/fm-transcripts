WEBVTT

1
00:00:00.020 --> 00:00:02.140
&gt;&gt; Brian Holt: I wanna take
this a little step further.

2
00:00:03.710 --> 00:00:05.310
If you start getting into web development,

3
00:00:05.310 --> 00:00:07.740
you'll notice that a lot of
things have a build step.

4
00:00:08.850 --> 00:00:11.740
That can be really intimidating because
we haven't talked at all about how to

5
00:00:11.740 --> 00:00:13.890
build something in JavaScript.

6
00:00:13.890 --> 00:00:17.310
It's an entirely different thing and
its actually kind of difficult there's

7
00:00:17.310 --> 00:00:22.150
an entire two-day course just on the most
popular bundler, which is called Webpack.

8
00:00:22.150 --> 00:00:25.170
We're not talking about
Webpack today because again,

9
00:00:25.170 --> 00:00:28.300
that's a two-day workshop and
I have like an hour.

10
00:00:28.300 --> 00:00:29.970
[LAUGH] So

11
00:00:31.260 --> 00:00:36.350
I wanna show you how to integrate these
libraries using a build step because

12
00:00:36.350 --> 00:00:42.340
I think that's important today to be
a JavaScript developer, so let's do that.

13
00:00:42.340 --> 00:00:45.440
The first thing that I need you to
do is I need you to install Node.js

14
00:00:45.440 --> 00:00:47.260
if you have not already installed it.

15
00:00:47.260 --> 00:00:51.269
If you click on this it'll take
you to the Node.js website,

16
00:00:51.269 --> 00:00:56.970
you can either click 8.11 or
you can do 10.1, I believe I'm using 10.1.

17
00:00:56.970 --> 00:01:02.061
Node is JavaScript on the server,
okay, so it's just running

18
00:01:02.061 --> 00:01:07.757
Node from my command line.
&gt;&gt; Brian Holt: So

19
00:01:07.757 --> 00:01:12.310
let's go back here, I already have it
installed but I'm gonna bring it up here.

20
00:01:12.310 --> 00:01:14.178
I'm gonna get rid of that,

21
00:01:14.178 --> 00:01:18.139
clear, let's see.
&gt;&gt; Brian Holt: So

22
00:01:18.139 --> 00:01:20.880
let's actually just go here.

23
00:01:22.730 --> 00:01:27.270
Welcome to the command line this is going
to be less scary than you think it is.

24
00:01:29.200 --> 00:01:33.710
The command line is just really
a fancy finder [LAUGH] right, so

25
00:01:33.710 --> 00:01:37.930
I can open my Finder here and most of us
are familiar with looking at this, right.

26
00:01:37.930 --> 00:01:41.752
I have my downloads,
I have my applications,

27
00:01:41.752 --> 00:01:45.330
I have my pictures and stuff like that.

28
00:01:45.330 --> 00:01:51.470
If you come over here to my terminal,
if I hit ls is the same things,

29
00:01:51.470 --> 00:01:56.020
right pictures in public and personal and
important and staff like that.

30
00:01:57.800 --> 00:02:02.230
That's all the terminal is, it's just
interacting with your filesystem but

31
00:02:02.230 --> 00:02:04.370
using letters and such.

32
00:02:06.550 --> 00:02:09.470
So right now, we'll get a little bit
more into that in our next lesson but

33
00:02:09.470 --> 00:02:13.040
for now we're gonna be messing with
Node and I'm gonna say nvm use 10,

34
00:02:13.040 --> 00:02:17.880
I don't have it, okay, doesn't matter.

35
00:02:17.880 --> 00:02:20.285
So it doesn't really matter what version
of Node as long as you're above 6,

36
00:02:20.285 --> 00:02:24.510
you should be okay,
as long as that's happening, okay.

37
00:02:26.320 --> 00:02:27.545
So now that you have Node,

38
00:02:27.545 --> 00:02:33.031
we're gonna be using,
&gt;&gt; Brian Holt: Node to build our project,

39
00:02:33.031 --> 00:02:37.535
so once you install Node it comes with a
thing called npm, which does not stand for

40
00:02:37.535 --> 00:02:42.300
Node Package Manager, but it definitely
stands for Node Package Manager.

41
00:02:42.300 --> 00:02:46.380
I don't know why they say that it does
not stand for Node Package Manager but

42
00:02:46.380 --> 00:02:50.680
it's a package manager for Node,
so it's Node Package Manager.

43
00:02:50.680 --> 00:02:56.300
I don't understand,
JavaScript's weird, okay.

44
00:02:56.300 --> 00:03:00.205
So I need you to find your
project using the terminal,

45
00:03:00.205 --> 00:03:07.470
mine is on my desktop, all right,
so I see it right there.

46
00:03:07.470 --> 00:03:08.738
So I'm gonna say,

47
00:03:08.738 --> 00:03:13.468
change directory cd into desktop.
&gt;&gt; Brian Holt: Okay so

48
00:03:13.468 --> 00:03:15.272
now I'm inside desktop you can see that.

49
00:03:15.272 --> 00:03:19.795
Yours won't looks like this I've setup
my terminal a little bit different but

50
00:03:19.795 --> 00:03:22.741
whatever let's use
terminal.app cuz then you can

51
00:03:22.741 --> 00:03:27.131
see.
&gt;&gt; Brian Holt: No it does look like that

52
00:03:27.131 --> 00:03:30.222
as well, never mind so it doesn't matter.

53
00:03:30.222 --> 00:03:36.673
So I am using iterm.app,
you can use Terminal.app if you're on Mac,

54
00:03:36.673 --> 00:03:43.890
if you're on Windows, you can use
something like, actually CMD should work.

55
00:03:43.890 --> 00:03:47.080
But beyond that I don't have Windows
setup, so I can't really show you, but

56
00:03:47.080 --> 00:03:48.120
you should bring up CMD.

57
00:03:48.120 --> 00:03:54.700
If you go to Start, Run you can type CMD
and then open the command prompt I believe

58
00:03:56.190 --> 00:03:59.830
and if you're on Linux you should
definitely know where the terminal is or

59
00:03:59.830 --> 00:04:03.840
as you should probably maybe
not use Linux, one or the two,

60
00:04:03.840 --> 00:04:06.510
I'm kidding that's mean
anyone can use Linux.

61
00:04:07.760 --> 00:04:10.440
Okay so I'm gonna go to desktop,
I'm on desktop if

62
00:04:10.440 --> 00:04:13.650
I hit ls that means list everything
that's inside of this directory.

63
00:04:13.650 --> 00:04:17.870
I found popdemo which is right there so
I'm gonna say cd popdemo and

64
00:04:17.870 --> 00:04:21.470
now I'm in my popdemo directory, right.

65
00:04:21.470 --> 00:04:26.189
Do we understand how I got here?
&gt;&gt; Brian Holt: Okay if I type clear that

66
00:04:26.189 --> 00:04:28.968
just clears, so I can see better.

67
00:04:28.968 --> 00:04:35.290
I'm gonna type npm install --global,

68
00:04:35.290 --> 00:04:41.500
this is going to install a tool that
I can use called parcel, parcel

69
00:04:41.500 --> 00:04:44.990
is a little tool that helps you bundle
your JavaScript application together.

70
00:04:44.990 --> 00:04:47.610
So I'm gonna hit that,
it's gonna go out to the network,

71
00:04:47.610 --> 00:04:49.670
it's going to download all
these JavaScript files,

72
00:04:49.670 --> 00:04:53.390
it's gonna bundle it all together for
me so I can use the tool called parcel.

73
00:04:54.840 --> 00:04:58.500
Parcel is a really, really awesome
thing let's go take a look at it.

74
00:04:59.880 --> 00:05:01.570
There's a bunch of documentation for it,

75
00:05:01.570 --> 00:05:05.290
it's really well made they'll walk
you through a bunch of the stuff.

76
00:05:05.290 --> 00:05:09.884
Parcel will allow you to.
&gt;&gt; Brian Holt: Bundle all this stuff

77
00:05:09.884 --> 00:05:11.630
together, right.

78
00:05:11.630 --> 00:05:16.350
Ultimately, what my goal is here,
right now on this project, where am I?

79
00:05:16.350 --> 00:05:20.893
This one, I'm loading from unpackage,
that pop motion library,

80
00:05:20.893 --> 00:05:25.591
I wanna bundle it all together so
it all comes in one nicely tight little

81
00:05:25.591 --> 00:05:30.260
bundle.
&gt;&gt; Brian Holt: So

82
00:05:30.260 --> 00:05:32.233
we're gonna wait for that to finish.

83
00:05:42.324 --> 00:05:43.108
&gt;&gt; Brian Holt: Parcel's awesome,

84
00:05:43.108 --> 00:05:44.151
if it's a tool that you use,

85
00:05:44.151 --> 00:05:49.359
you should definitely donate to them.
&gt;&gt; Brian Holt: I should donate to them,

86
00:05:49.359 --> 00:05:51.660
so now I have this thing called parcel.

87
00:05:53.550 --> 00:05:57.335
It doesn't know it, help maybe?

88
00:05:57.335 --> 00:06:01.256
Parcel.
&gt;&gt; Brian Holt: Which I didn't have this

89
00:06:01.256 --> 00:06:05.317
before, right, this is a JavaScript
bundler, and I got that from MPM, right,

90
00:06:05.317 --> 00:06:06.927
I told it go out to MPM grab this,

91
00:06:06.927 --> 00:06:11.849
put it on my computer.
&gt;&gt; Brian Holt: So now what I'm gonna do,

92
00:06:11.849 --> 00:06:13.512
unlock my computer here and

93
00:06:13.512 --> 00:06:18.723
make sure I'm doing the right things.
&gt;&gt; Brian Holt: Come

94
00:06:18.723 --> 00:06:23.667
down here to my project.
&gt;&gt; Brian Holt: So

95
00:06:23.667 --> 00:06:29.797
I'm gonna go delete this script tag.
&gt;&gt; Brian Holt: So

96
00:06:29.797 --> 00:06:33.310
I'm going to come in, where's my project?

97
00:06:33.310 --> 00:06:38.018
Code over here.
&gt;&gt; Brian Holt: And

98
00:06:38.018 --> 00:06:41.809
I'll come in here to index and

99
00:06:41.809 --> 00:06:46.260
delete this script tag, okay.

100
00:06:46.260 --> 00:06:49.662
So now I'm not loading
off of unpackage anymore,

101
00:06:49.662 --> 00:06:54.522
instead I'm gonna come here to
animation and right now I'm pulling all

102
00:06:54.522 --> 00:06:58.371
this stuff off of.
&gt;&gt; Brian Holt: This so

103
00:06:58.371 --> 00:07:03.417
let's refractor this so
that all of these have, whatever,

104
00:07:03.417 --> 00:07:09.223
it's fine.
&gt;&gt; Brian Holt: I don't wanna pull this

105
00:07:09.223 --> 00:07:13.689
off of popmotion anymore, what I want,
I'm gonna change window.popmotion to here.

106
00:07:13.689 --> 00:07:18.494
Let's do this const popmotion =

107
00:07:18.494 --> 00:07:26.374
require('popmotion').
&gt;&gt; Brian Holt: And

108
00:07:26.374 --> 00:07:27.502
then I'll get rid of this and

109
00:07:27.502 --> 00:07:30.996
I'll just say popmotion like that.
&gt;&gt; Brian Holt: So

110
00:07:30.996 --> 00:07:35.668
require is saying hey I need this library,
go pull it in for me so I can use it,

111
00:07:35.668 --> 00:07:39.610
okay, and then this right here is
pulling all those values out so

112
00:07:39.610 --> 00:07:44.080
that's what this line is doing,
it's pulling them out of this object.

113
00:07:44.080 --> 00:07:47.100
I could actually put this into one line
and put the required popmotion there but

114
00:07:47.100 --> 00:07:51.180
I separated it out, so hopefully you
can see those are two separate steps.

115
00:07:53.310 --> 00:07:56.890
Okay, and now I need to go get
popmotion so I can bundle it in here so

116
00:07:56.890 --> 00:07:58.770
I'm gonna come back to my
command line really quick.

117
00:08:00.820 --> 00:08:06.486
First thing I'm gonna say is npm init,
I to make this an npm project,

118
00:08:06.486 --> 00:08:10.649
so npm init- y,
&gt;&gt; Brian Holt: And

119
00:08:10.649 --> 00:08:12.717
it's gonna turn this to an npm project.

120
00:08:12.717 --> 00:08:16.297
So init does,
is it makes it an npm project, and

121
00:08:16.297 --> 00:08:21.413
dash y means just don't ask me any
questions, just make this work.

122
00:08:21.413 --> 00:08:24.766
If you leave that dash y off, if it's
gonna ask you a bunch of questions like

123
00:08:24.766 --> 00:08:27.853
what's the name of this,
how do you test this, what's your email,

124
00:08:27.853 --> 00:08:31.709
what's your mother’s maiden name, that's
a joke it's not gonna ask you that one.

125
00:08:31.709 --> 00:08:35.110
But it's gonna ask you a bunch of
questions that I don't really feel like

126
00:08:35.110 --> 00:08:38.020
answering right now,
it's not the boss of me, okay.

127
00:08:38.020 --> 00:08:42.120
So now I have this right
here package.json,

128
00:08:42.120 --> 00:08:45.850
this is how you configure node projects.

129
00:08:45.850 --> 00:08:49.830
So if I come in here I can look at
it JSON, we've seen that before,

130
00:08:49.830 --> 00:08:52.950
JSON are JavaScript Object Notation,
right, so

131
00:08:52.950 --> 00:08:57.670
it's just like a very bare bones
configuration so it's called popdemo.

132
00:08:57.670 --> 00:09:02.363
It's version 1.0.0, blah, blah, blah it
was all generated automatically, okay.

133
00:09:02.363 --> 00:09:07.000
So I wanna give it some dependencies, so

134
00:09:07.000 --> 00:09:11.080
what I'm gonna do here is I'm gonna
come back and I'm gonna say, npm.

135
00:09:11.080 --> 00:09:16.951
So go get this off of npm,
install popmotion.

136
00:09:16.951 --> 00:09:20.613
So it's going to go off of npm, it's
going to go install popmotion for me so

137
00:09:20.613 --> 00:09:25.847
I can start using it.
&gt;&gt; Brian Holt: And fairly quickly it

138
00:09:25.847 --> 00:09:29.824
comes in it added four packages, because
popmotion depends on other packages, so it

139
00:09:29.824 --> 00:09:35.380
has to go get all those packages as well.
&gt;&gt; Brian Holt: Yeah.

140
00:09:35.380 --> 00:09:36.202
&gt;&gt; Speaker 2: Popmotion is

141
00:09:36.202 --> 00:09:40.389
really into something that was on
the Internet or it's really into

142
00:09:40.389 --> 00:09:43.674
something that's on your computer.
&gt;&gt; Brian Holt: On the Internet.

143
00:09:43.674 --> 00:09:45.783
&gt;&gt; Speaker 2: Okay so just what if you

144
00:09:45.783 --> 00:09:49.868
said like npm install cats.
&gt;&gt; Brian Holt: It would probably work,

145
00:09:49.868 --> 00:09:53.311
let's do npm info cats because
I don't know what cats it is.

146
00:09:56.264 --> 00:09:58.778
&gt;&gt; Brian Holt: So it's written by a lovely

147
00:09:58.778 --> 00:10:03.520
fellow named Luciferous
&gt;&gt; Group: [LAUGH]

148
00:10:03.520 --> 00:10:05.000
&gt;&gt; Brian Holt: Newmanvon.

149
00:10:07.599 --> 00:10:10.864
&gt;&gt; Brian Holt: So you would go to this url

150
00:10:10.864 --> 00:10:17.770
to see what's there, I'm not gonna check.
&gt;&gt; Group: [LAUGH]

151
00:10:17.770 --> 00:10:20.195
&gt;&gt; Brian Holt: I don't trust Luciferous

152
00:10:20.195 --> 00:10:27.810
but like, let's say, npm info right here
loldash, cuz this is one that I wrote.

153
00:10:27.810 --> 00:10:33.322
So you can see up here.
&gt;&gt; Brian Holt: Brian Holt right there bt,

154
00:10:33.322 --> 00:10:37.706
you can see there, all that stuff,
you can go to the website which is again

155
00:10:37.706 --> 00:10:41.276
something that I wrote
&gt;&gt; Brian Holt: So

156
00:10:41.276 --> 00:10:46.195
it's just something off of, like there's
a registry it's actually at npm.com.

157
00:10:46.195 --> 00:10:49.383
Is it npm.com right, yeah,

158
00:10:49.383 --> 00:10:54.343
Npmjs.com.
&gt;&gt; Brian Holt: So this is where it's

159
00:10:54.343 --> 00:10:59.651
coming from, if I search for popmotion.
&gt;&gt; Brian Holt: You

160
00:10:59.651 --> 00:11:02.078
can see this is actually what
we're downloading right here.

161
00:11:04.340 --> 00:11:05.851
&gt;&gt; Brian Holt: So if I come here and

162
00:11:05.851 --> 00:11:11.049
say Quick Start, that's probably
the easiest way to get there,

163
00:11:11.049 --> 00:11:17.372
it says right here npm install popmotion.
&gt;&gt; Brian Holt: It

164
00:11:17.372 --> 00:11:21.113
says dash dash save here with the newest
versions of npm, the dash dash says,

165
00:11:21.113 --> 00:11:23.980
implied so
you don't have to worry about it.

166
00:11:23.980 --> 00:11:25.435
This is called the flag for

167
00:11:25.435 --> 00:11:28.676
those of you that are not familiar
with the command line and

168
00:11:28.676 --> 00:11:33.554
this flag is not necessary any more.
&gt;&gt; Brian Holt: So

169
00:11:33.554 --> 00:11:37.010
that's a good question, so
that's how I knew to do that.

170
00:11:37.010 --> 00:11:41.303
But anytime I need to come in here and
install libraries that I can use in fact

171
00:11:41.303 --> 00:11:45.679
you can see here it now, it's
automatically put this in here, popmotion.

172
00:11:45.679 --> 00:11:52.682
Come back to my command line.
&gt;&gt; Brian Holt: You can like npm install

173
00:11:52.682 --> 00:11:58.580
react, right, or npm install angular or
npm install all of those things.

174
00:12:01.850 --> 00:12:04.380
Okay so now I have popmotion and
I can make this work, so

175
00:12:04.380 --> 00:12:09.780
what I'm gonna say is that I'm
gonna say parcel index.html.

176
00:12:09.780 --> 00:12:14.900
So I'm gonna point it to my default,
whatever happen,

177
00:12:14.900 --> 00:12:18.060
index file for html right.

178
00:12:18.060 --> 00:12:22.055
Parcel is going to read that HTML file to
figure out where all my JavaScript and

179
00:12:22.055 --> 00:12:26.059
CSS is and then it's going to just make
this a tight little nice bundle for me.

180
00:12:26.059 --> 00:12:30.667
So if I do that,
&gt;&gt; Brian Holt: It's

181
00:12:30.667 --> 00:12:35.533
building my index.html.
&gt;&gt; Brian Holt: It's going and

182
00:12:35.533 --> 00:12:40.470
getting all the popmotion stuff and
it built it in eight seconds, okay.

183
00:12:40.470 --> 00:12:43.880
So now rather than going
like opening it with

184
00:12:45.180 --> 00:12:48.010
like as a file I'm actually
running a local server now.

185
00:12:49.080 --> 00:12:52.790
So if I click on this or
rather just copy and paste it and

186
00:12:52.790 --> 00:12:57.029
put it into my browser, localhost:1234.

187
00:12:58.770 --> 00:13:03.362
You can see here, it's working but it's
not downloading off of unpackage anymore,

188
00:13:03.362 --> 00:13:06.933
it's not doing any of that stuff,
it's being bundled together,

189
00:13:06.933 --> 00:13:11.890
all by Parcel.
&gt;&gt; Brian Holt: Does this make sense?

190
00:13:11.890 --> 00:13:15.000
I'll talk about the local host
thing here in just a second but

191
00:13:15.000 --> 00:13:17.240
does the bundling stuff make sense?

192
00:13:17.240 --> 00:13:20.940
So this is in develop mode, and
this is absolutely wonderful now.

193
00:13:20.940 --> 00:13:25.270
What's really cool about this, is how
every time that you made a change you have

194
00:13:25.270 --> 00:13:30.950
to refresh the page, if I come in here and
make a change to my CSS, Parcel's watching

195
00:13:30.950 --> 00:13:34.760
for changes and it'll automatically
update my stuff whenever I change it.

196
00:13:34.760 --> 00:13:39.373
So if I change this to
now be lime green and

197
00:13:39.373 --> 00:13:43.290
Save, I'm not going to refresh
the page I'm just gonna come over and

198
00:13:43.290 --> 00:13:47.960
it just updates itself, which is really
nice it helps me go even faster.

199
00:13:50.630 --> 00:13:56.293
That's called hot reload, or HMR, Hot
Module Refresh maybe, I don't remember too

200
00:13:56.293 --> 00:14:01.972
many acronyms really neat though, right.
&gt;&gt; Brian Holt: So,

201
00:14:01.972 --> 00:14:03.670
there's a bunch of
advantages to doing that.

202
00:14:04.990 --> 00:14:08.909
Another thing you can do now
that I'm doing a Parcel,

203
00:14:08.909 --> 00:14:14.395
I can make my another file called,
I'm in POPDEMO just like useless.js,

204
00:14:14.395 --> 00:14:19.468
I don't know I'm struggling to be
creative at this point of the day.

205
00:14:19.468 --> 00:14:24.591
And all I'm gonna do inside this
file is say console.log("this

206
00:14:24.591 --> 00:14:29.765
is entirely a useless file").
&gt;&gt; Brian Holt: Okay,

207
00:14:29.765 --> 00:14:33.380
so it's another JavaScript
file in my same project.

208
00:14:33.380 --> 00:14:35.590
If I come back over here and
open my command line or

209
00:14:35.590 --> 00:14:38.160
my console, it's not being logged out,
right now, right.

210
00:14:38.160 --> 00:14:43.138
It's not being a brought
into the project but

211
00:14:43.138 --> 00:14:48.641
if I go into animation.js and
up here at the top and

212
00:14:48.641 --> 00:14:53.881
I say const, it'll say require ./useless,

213
00:14:53.881 --> 00:15:00.124
the .js part's implied.
&gt;&gt; Brian Holt: It's going

214
00:15:00.124 --> 00:15:04.662
to run whatever is inside of useless, so
if I come back over here this is entirely

215
00:15:04.662 --> 00:15:09.533
a useless file.
&gt;&gt; Brian Holt: So

216
00:15:09.533 --> 00:15:11.803
you can actually bundle together
your own files this way,

217
00:15:11.803 --> 00:15:14.176
you can have multiple files,
you couldn't do that before.

218
00:15:14.176 --> 00:15:18.831
Require would not have worked before and
now it does,

219
00:15:18.831 --> 00:15:22.773
cool.
&gt;&gt; Brian Holt: Okay.

220
00:15:22.773 --> 00:15:24.261
&gt;&gt; Speaker 2: And that's what nodeJS does

221
00:15:24.261 --> 00:15:27.020
for you?
&gt;&gt; Brian Holt: Notice what's powering

222
00:15:27.020 --> 00:15:30.180
Parcel, so Parcel is the part
that's actually doing the bundling.

223
00:15:30.180 --> 00:15:35.493
So Parcel is written in Node,
we're about to do Node ourselves,

224
00:15:35.493 --> 00:15:41.594
so Node is just allowing you to execute
JavaScript outside of the browser.

225
00:15:41.594 --> 00:15:48.305
I wanted to show you that this is the old
way of doing modules with JavaScript,

226
00:15:48.305 --> 00:15:53.478
which is called Common JS,
not something you need to know.

227
00:15:53.478 --> 00:15:59.151
There is a new way of doing modules,
which is called ES6 modules.

228
00:15:59.151 --> 00:16:04.219
So I wanted to just show you both
ways because you'll see documentation

229
00:16:04.219 --> 00:16:09.296
in both ways, what's cool about VS
code is it will refactor it for you.

230
00:16:09.296 --> 00:16:12.835
So you see this little light
bulb right there, show fixes?

231
00:16:12.835 --> 00:16:17.555
Say convert to ES6 modules, and
it just fixes everything for

232
00:16:17.555 --> 00:16:23.933
you.
&gt;&gt; Brian Holt: That's import Popmotion

233
00:16:23.933 --> 00:16:27.630
from Popmotion, where as before it was
saying require, right, it's different now.

234
00:16:29.380 --> 00:16:32.230
This is the new way of doing it, in the
future you should probably do it this way.

235
00:16:33.340 --> 00:16:35.380
The problem is that Node
doesn't understand,

236
00:16:35.380 --> 00:16:37.910
Node inherently doesn't
understand import so

237
00:16:37.910 --> 00:16:42.562
it has to go through a translation layer
before it hits Node but we'll get there.

238
00:16:42.562 --> 00:16:46.363
Most browser code you'll see will
be using the new import way so

239
00:16:46.363 --> 00:16:47.950
I wanted to show you both.

