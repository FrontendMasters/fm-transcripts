WEBVTT

1
00:00:00.000 --> 00:00:03.592
&gt;&gt; Brian Holt: We're gonna
start writing some HTML now,

2
00:00:03.592 --> 00:00:06.498
which is gonna be super exciting.

3
00:00:06.498 --> 00:00:08.544
So this is the raw building materials,
right?

4
00:00:08.544 --> 00:00:12.388
So we're actually gonna pile up our lumber
in front of our house before we start

5
00:00:12.388 --> 00:00:13.099
building it.

6
00:00:13.099 --> 00:00:16.766
So HTML stands for
Hyper Text Markup Language.

7
00:00:16.766 --> 00:00:20.130
I had to look that up because I
can never remember what it is.

8
00:00:20.130 --> 00:00:22.930
In other words, it's not important
what it stands for, it's HTML.

9
00:00:22.930 --> 00:00:27.770
[LAUGH] So like I said before,
you don't run HTML.

10
00:00:27.770 --> 00:00:30.410
HTML is just,
it's like speaking English, right?

11
00:00:30.410 --> 00:00:33.816
You're literally just
describing what you want, and

12
00:00:33.816 --> 00:00:38.045
you have a browser that just reads it and
kind of displays it as it is.

13
00:00:39.732 --> 00:00:43.390
&gt;&gt; Brian Holt: So it is static,
which is the opposite of dynamic.

14
00:00:43.390 --> 00:00:47.488
It is unchanging, it's just,
you just, here's HTML,

15
00:00:47.488 --> 00:00:50.790
it's like presenting you
with like an essay, right?

16
00:00:50.790 --> 00:00:53.144
You're essay doesn't execute anything,
it's just an essay.

17
00:00:55.168 --> 00:00:59.640
&gt;&gt; Brian Holt: So
the basic building block of HTML is a tag.

18
00:01:00.690 --> 00:01:05.050
Or you'll hear me sometimes
use the word element, as well.

19
00:01:05.050 --> 00:01:08.180
An element is like one
specific instance of a tag.

20
00:01:08.180 --> 00:01:11.350
And we'll kind of explain
that as we go forward.

21
00:01:11.350 --> 00:01:14.270
But let's just get into an example,
I think that's the best way to learn.

22
00:01:14.270 --> 00:01:17.250
So here I had this H1, right?

23
00:01:17.250 --> 00:01:19.920
So this is called an angle bracket.

24
00:01:21.444 --> 00:01:25.840
Then h1,
which is the type of tag this is, right.

25
00:01:25.840 --> 00:01:27.190
So this is an h1 tag.

26
00:01:29.180 --> 00:01:31.420
Then you have your text inside of it.

27
00:01:31.420 --> 00:01:34.840
And then here, we have the closing h1 tag.

28
00:01:34.840 --> 00:01:38.750
Which is, you can tell it's angle bracket,
slash then a tag.

29
00:01:39.830 --> 00:01:41.563
And then closing angle bracket.

30
00:01:44.131 --> 00:01:47.769
&gt;&gt; Brian Holt: So I'll talk about what an
h1 specifically is here in just a second,

31
00:01:47.769 --> 00:01:51.050
but I want you to get familiar
with the premise of what a tag is.

32
00:01:52.140 --> 00:01:57.780
So this is basically saying that I
have this header, this h1, right?

33
00:01:57.780 --> 00:02:01.960
This is the text that's inside of there
and this is where it ends, right?

34
00:02:01.960 --> 00:02:05.750
So you can see here this is
the title of my document.

35
00:02:05.750 --> 00:02:07.971
Again, this is editable so
you can put things in here and

36
00:02:07.971 --> 00:02:09.589
you'll instantly see it inside there.

37
00:02:12.060 --> 00:02:17.025
&gt;&gt; Brian Holt: So
this is how HTML operates.

38
00:02:17.025 --> 00:02:19.947
It's just a bunch of tags with
stuff inside of it, right?

39
00:02:19.947 --> 00:02:23.283
In this case we just have
text inside of it but

40
00:02:23.283 --> 00:02:26.719
often tags will have
other tags inside of it.

41
00:02:29.548 --> 00:02:33.799
&gt;&gt; Brian Holt: So when it's rendered out
to the browser this is what it looks like.

42
00:02:34.990 --> 00:02:38.150
So an h1 specifically is a header, right?

43
00:02:38.150 --> 00:02:40.040
That's what the h stands for.

44
00:02:40.040 --> 00:02:43.840
And the h1, the 1 part of it means
it's the most important one for

45
00:02:43.840 --> 00:02:45.670
whatever section it's in, right?

46
00:02:46.810 --> 00:02:52.920
There's also h2s,
which are the second level, right?

47
00:02:52.920 --> 00:02:56.850
As you might imagine, you can have an h1,

48
00:02:56.850 --> 00:03:00.660
that's the title of the page and you
might have multiple subsections, right?

49
00:03:00.660 --> 00:03:03.480
Maybe you have a blog, and
you have multiple blog posts and

50
00:03:03.480 --> 00:03:07.370
each one of those titles of the blog
posts might be h2s, for example, right?

51
00:03:07.370 --> 00:03:09.340
So it's the second most important level.

52
00:03:09.340 --> 00:03:12.830
It's not that you can't have multiple h2s,
you can even have multiple h1s,

53
00:03:12.830 --> 00:03:13.490
that's fine, too.

54
00:03:16.770 --> 00:03:18.020
But it's kind of a hierarchy, right?

55
00:03:18.020 --> 00:03:21.020
So you're saying that when
you say something is an h2,

56
00:03:21.020 --> 00:03:22.700
it's not as important as the h1.

57
00:03:24.350 --> 00:03:27.680
And again,
this goes all the way down to actually h6.

58
00:03:28.840 --> 00:03:31.070
There's no h7, I'm sorry.

59
00:03:31.070 --> 00:03:34.330
It's just hopefully you
don't have six different,

60
00:03:34.330 --> 00:03:37.710
I don't think I've
actually ever used an h6.

61
00:03:37.710 --> 00:03:39.041
Like on a website that I've written.

62
00:03:40.947 --> 00:03:44.950
&gt;&gt; Brian Holt: Maybe I'm doing
something wrong but no, not typically.

63
00:03:44.950 --> 00:03:48.923
I think I've used like an h3 before,
I don't think I've gone any lower than h3.

64
00:03:52.472 --> 00:03:58.170
&gt;&gt; Brian Holt: Okay, so this is
the base layer of like what HTML is.

65
00:03:58.170 --> 00:04:03.755
It's just a bunch of tags
that's really about it [LAUGH].

66
00:04:03.755 --> 00:04:06.940
So, that's what this looks like.

67
00:04:06.940 --> 00:04:11.874
That's the h1 right there, and
that, in and of itself, is an h1.

68
00:04:13.750 --> 00:04:14.779
&gt;&gt; Brian Holt: So it's bigger and

69
00:04:14.779 --> 00:04:18.390
it's bolder because that's
what browsers do with h1s.

70
00:04:18.390 --> 00:04:19.809
They make things big and bold.

71
00:04:21.270 --> 00:04:25.860
The browser has a bunch of defaults of
what it thinks an h1 should look like.

72
00:04:25.860 --> 00:04:30.040
Now when we get into CSS, we'll figure
out later how to make it look like other

73
00:04:30.040 --> 00:04:34.210
things but just by putting an h1 on
the page, that's what the browser does,

74
00:04:34.210 --> 00:04:36.800
that's what it's supposed to do,
is make it big and bold.

75
00:04:36.800 --> 00:04:40.220
And you'll notice, when I was up here
messing around with this, when I put h1,

76
00:04:40.220 --> 00:04:42.830
it was really big, right?

77
00:04:42.830 --> 00:04:47.660
When I put h3 or h2,
it gets smaller each time, right?

78
00:04:47.660 --> 00:04:53.141
Down to h6 which is just a little
bit bigger than normal text.

79
00:04:57.358 --> 00:04:59.327
&gt;&gt; Brian Holt: So like I said, with CSS,

80
00:04:59.327 --> 00:05:04.984
you can change these things to make
them look and act differently, right?

81
00:05:04.984 --> 00:05:07.670
So why is it actually important that
we're using the correct tag, right?

82
00:05:07.670 --> 00:05:11.298
Why am I using the h1 if it's
ultimately meaningless if I can

83
00:05:11.298 --> 00:05:12.803
change the way it looks?

84
00:05:12.803 --> 00:05:16.590
Well, the reason why its actions have been
really important for a couple of reasons.

85
00:05:16.590 --> 00:05:20.766
The first and foremost one, and
I would deem the most important one,

86
00:05:20.766 --> 00:05:23.646
is that it makes this
website more accessible to

87
00:05:23.646 --> 00:05:28.050
people that are not using the website
like you do or maybe you do, right?

88
00:05:29.292 --> 00:05:32.410
So like there's things like screen
readers, right, for people that are blind,

89
00:05:32.410 --> 00:05:37.780
or hard of seeing, or otherwise
permanently or temporarily disabled.

90
00:05:37.780 --> 00:05:40.710
They'll have these screen readers that
will go through and it will actually look

91
00:05:40.710 --> 00:05:45.080
for the h1s on the page, it's like here
are the important parts of this website.

92
00:05:45.080 --> 00:05:49.110
So it's being used in ways that you
probably don't necessarily anticipate.

93
00:05:49.110 --> 00:05:52.604
So it's actually up to you as the
developer to just use good practices and

94
00:05:52.604 --> 00:05:55.809
say like, okay if this is the most
important part of this section,

95
00:05:55.809 --> 00:05:59.762
I'm going to use an h1 here, it's really
really important because the web is for

96
00:05:59.762 --> 00:06:00.764
everyone, right?

97
00:06:00.764 --> 00:06:03.678
It's not for
just seeing people it's for everyone,

98
00:06:03.678 --> 00:06:07.125
that's one of the actual
fundamental tenants of the website.

99
00:06:07.125 --> 00:06:09.322
Is that, it's for everyone, so

100
00:06:09.322 --> 00:06:14.921
make sure that your doing things like that
because it's really is an ethical issue.

101
00:06:14.921 --> 00:06:19.230
Beyond that it's also good for
like Google, and Bing, and DuckDuckGo,

102
00:06:19.230 --> 00:06:21.790
and things like that, that's how they're
actually looking at your website,

103
00:06:21.790 --> 00:06:25.520
it's like, okay, here's their h1, this is
actually probably pretty important to it.

104
00:06:25.520 --> 00:06:28.940
And so they'll use that when they're kinda
crawling your websites to determine where

105
00:06:28.940 --> 00:06:31.770
you're ranked, and how you're ranked,
and what keywords you rank for, and

106
00:06:31.770 --> 00:06:33.250
things like that.

107
00:06:33.250 --> 00:06:36.267
So that's another reason why it's
really important and then lastly,

108
00:06:36.267 --> 00:06:37.071
it's actually for

109
00:06:37.071 --> 00:06:40.500
your future self and your colleagues that
will be working on the same code as you.

110
00:06:40.500 --> 00:06:43.990
Your going to write this code and
then six months later,

111
00:06:43.990 --> 00:06:46.990
your gonna come back and it's like,
what the hell did I write, right?

112
00:06:46.990 --> 00:06:48.305
That always happens.

113
00:06:48.305 --> 00:06:50.871
[LAUGH] That's why it's
really important for

114
00:06:50.871 --> 00:06:53.378
you to write code that makes sense, right?

115
00:06:53.378 --> 00:06:55.755
Because when you come back later,
you want it to be descriptive so

116
00:06:55.755 --> 00:06:57.410
that when you read it,
it makes sense to you.

117
00:06:57.410 --> 00:07:01.822
A little known fact is that code is
actually more meant for you than it is for

118
00:07:01.822 --> 00:07:02.683
the machine.

119
00:07:02.683 --> 00:07:06.645
You're just basically taking notes in such
a way that the computer can understand it.

120
00:07:06.645 --> 00:07:09.638
[LAUGH] That's really what
code is at the end of the day,

121
00:07:09.638 --> 00:07:13.218
it's notes that the computer can
exercise or that can execute but

122
00:07:13.218 --> 00:07:16.819
you can understand when you come
back later to make changes to it.

123
00:07:17.850 --> 00:07:22.370
That's the point of writing good code is
that you can make it more readable and

124
00:07:22.370 --> 00:07:24.900
easier to modify later by yourself and
by others.

125
00:07:26.010 --> 00:07:28.080
So use good HTML.

126
00:07:28.080 --> 00:07:31.856
It's worth the thought that you put
into it to make sure it's good HTML.

127
00:07:35.275 --> 00:07:36.495
&gt;&gt; Brian Holt: Let's see what else.

128
00:07:38.218 --> 00:07:41.308
&gt;&gt; Brian Holt: The other thing is
that when you write things like this,

129
00:07:41.308 --> 00:07:45.318
when you write good HTML, you end up
making your code reusable, which is

130
00:07:45.318 --> 00:07:50.460
something that we as developers strive
a lot to do, is to make our code reusable.

131
00:07:50.460 --> 00:07:55.314
What's really nice about that is if I
make this really nice h1 like you know,

132
00:07:55.314 --> 00:07:59.942
matches the style of my website and
all that kind of stuff when I go later and

133
00:07:59.942 --> 00:08:03.377
I make another web page I can
just reuse that same h1 and

134
00:08:03.377 --> 00:08:05.635
not have to do any additional work.

135
00:08:05.635 --> 00:08:08.550
We'll get into that with CSS and
how we're able to do that, but

136
00:08:08.550 --> 00:08:12.125
if you use good coding styles you'll end
up making parts of your code reusable

137
00:08:12.125 --> 00:08:13.730
which makes you able to go faster.

138
00:08:15.440 --> 00:08:19.260
And less prone to bugs, that's
another thing that's really important.

139
00:08:19.260 --> 00:08:22.351
So hopefully, I've explained
to you at least a little bit,

140
00:08:22.351 --> 00:08:25.745
why it's important to put a little
bit of thought into your HTML and

141
00:08:25.745 --> 00:08:28.919
not just make everything,
you know, adiv or whatever it is.

142
00:08:30.577 --> 00:08:33.113
&gt;&gt; Brian Holt: So a tag,
whether it's opening or closing,

143
00:08:33.113 --> 00:08:35.261
it's surrounded by angle brackets.

144
00:08:35.261 --> 00:08:39.131
100% of the time,
all tags are surrounded by angle brackets.

145
00:08:39.131 --> 00:08:42.836
So each one inputs all that kind of stuff.

146
00:08:42.836 --> 00:08:46.662
This is what you're looking for when
you're reading HTML or the opening and

147
00:08:46.662 --> 00:08:47.989
closing angle brackets.

148
00:08:49.470 --> 00:08:54.366
Closing tags, always have a slash right
here after the opening angle bracket,

149
00:08:54.366 --> 00:08:57.440
for the,
that's how you know it's a closing tag.

150
00:08:58.890 --> 00:09:03.020
Lastly you have things that are called
void tags or self closing tags.

151
00:09:03.020 --> 00:09:06.930
And you'll see that slash here at the end
next to the closing angle bracket.

152
00:09:06.930 --> 00:09:11.161
These are tags that open and
close themselves, right?

153
00:09:11.161 --> 00:09:14.555
So they're self contained units.

154
00:09:14.555 --> 00:09:18.305
We'll explain here in a second
why you would have that, but

155
00:09:18.305 --> 00:09:21.380
just know you'll have both
self closing tags and

156
00:09:21.380 --> 00:09:26.047
then you'll also have tags that open and
then close eventually, right?

157
00:09:26.047 --> 00:09:32.189
So this one right here,
opens here, closes here, right?

158
00:09:32.189 --> 00:09:34.999
It's really important that,

159
00:09:34.999 --> 00:09:39.977
you basically treat these
like parentheses, right?

160
00:09:39.977 --> 00:09:41.421
If you have an opening parentheses,

161
00:09:41.421 --> 00:09:44.366
you need to close it before you close
any of the other parentheses, right?

162
00:09:44.366 --> 00:09:49.238
So, if I have, parentheses like that,
that's really hard to see.

163
00:09:49.238 --> 00:09:50.538
It's easier to see up there.

164
00:09:52.284 --> 00:09:54.304
&gt;&gt; Brian Holt: If I had like
a square bracket there,

165
00:09:54.304 --> 00:09:56.530
I wouldn't close it like that, right?

166
00:09:56.530 --> 00:09:58.364
That doesn't really make any sense.

167
00:10:00.002 --> 00:10:01.946
&gt;&gt; Brian Holt: Maybe make it a little
bit bigger, just temporarily,

168
00:10:01.946 --> 00:10:03.410
so you can see what I'm talking about.

169
00:10:03.410 --> 00:10:04.945
This is what I'm talking about.

170
00:10:07.933 --> 00:10:11.324
&gt;&gt; Brian Holt: So if you're doing
parentheses you would have parentheses on

171
00:10:11.324 --> 00:10:15.104
the interior and then you would have
square brackets on the outside,

172
00:10:15.104 --> 00:10:16.881
that would make sense, right?

173
00:10:16.881 --> 00:10:19.013
So you have to close the last
one that was opened,

174
00:10:19.013 --> 00:10:20.889
that's basically what I'm saying here.

175
00:10:20.889 --> 00:10:24.340
So if I have an h1 here that
opens I can't close the div.

176
00:10:24.340 --> 00:10:27.025
I have to close the h1 first.

177
00:10:27.025 --> 00:10:30.050
So like you see here where
I have the h1 here and

178
00:10:30.050 --> 00:10:33.239
the div here this is wrong
this is not valid HTML.

179
00:10:33.239 --> 00:10:37.549
So this h1 has to close
before I can close this div.

180
00:10:37.549 --> 00:10:38.931
That make sense?

181
00:10:38.931 --> 00:10:41.309
It's just one of the rules of HTML.

182
00:10:45.430 --> 00:10:48.328
&gt;&gt; Brian Holt: So
we'll talk about divs here in a second so

183
00:10:48.328 --> 00:10:50.590
at the end we go over a lot of tags.

184
00:10:56.533 --> 00:10:58.008
&gt;&gt; Brian Holt: Cool.

185
00:10:59.058 --> 00:11:03.470
&gt;&gt; Brian Holt: So a self closing tag
I'm just gonna put it right here.

186
00:11:03.470 --> 00:11:05.132
Something like an input.

187
00:11:08.111 --> 00:11:10.330
&gt;&gt; Brian Holt: So you can say here,
this is a text box, right?

188
00:11:12.540 --> 00:11:16.820
The way that you make this text box on
this page is with this input tag right,

189
00:11:16.820 --> 00:11:22.850
that's what it does, is it allows the
users to input stuff into a website that,

190
00:11:22.850 --> 00:11:26.600
eventually, whatever the user puts
there can be sent to you, right?

191
00:11:27.790 --> 00:11:29.360
So it makes sense that this
is a self-closing tag,

192
00:11:29.360 --> 00:11:30.940
you wouldn't actually have
anything inside of it,

193
00:11:30.940 --> 00:11:32.596
that wouldn't make any sense, right?

194
00:11:32.596 --> 00:11:36.390
Because this is like one atomic
unit that cannot be split apart, so

195
00:11:36.390 --> 00:11:38.240
that's kind of what these
self closing tags are,

196
00:11:38.240 --> 00:11:41.730
they're things that really just can't be
split apart, there's nothing inside of it,

197
00:11:41.730 --> 00:11:45.620
it doesn't make any sense to have anything
other than a self closing tag there.

198
00:11:47.750 --> 00:11:50.720
So, you see here, that's what
this trailing slash here means,

199
00:11:50.720 --> 00:11:52.349
it means this is a self closing tag.

200
00:11:52.349 --> 00:11:55.244
Unfortunately to make this
a little bit more confusing,

201
00:11:55.244 --> 00:11:57.789
you actually don't have
to put that slash there.

202
00:11:57.789 --> 00:12:01.469
So you can have an input like this,
this is actually valid HTML.

203
00:12:05.562 --> 00:12:08.161
&gt;&gt; Brian Holt: So it is in fact optional,
but no matter what,

204
00:12:08.161 --> 00:12:10.296
input tags are always self closing and

205
00:12:10.296 --> 00:12:15.051
there's several others that are that way
but for now we'll just talk about inputs.

