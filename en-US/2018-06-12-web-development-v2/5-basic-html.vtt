WEBVTT

1
00:00:00.000 --> 00:00:02.357
&gt;&gt; Brian Holt: We're gonna
start writing some HTML now,

2
00:00:02.357 --> 00:00:04.261
which is gonna be super exciting.

3
00:00:06.493 --> 00:00:08.288
&gt;&gt; Brian Holt: So
this is the raw building materials, right?

4
00:00:08.288 --> 00:00:12.651
So we're actually gonna pile up our lumber
in front of our house before we start

5
00:00:12.651 --> 00:00:13.453
building it.

6
00:00:13.453 --> 00:00:16.472
So HTML stands for
hypertext markup language.

7
00:00:16.472 --> 00:00:19.917
I had to look that up because I
can never remember what it is.

8
00:00:19.917 --> 00:00:23.438
Or in other words, it's not important
what it stands for, it's HTML.

9
00:00:23.438 --> 00:00:27.198
[LAUGH] So, like I said before,
you don't run HTML,

10
00:00:27.198 --> 00:00:30.107
HTML is like speaking English, right?

11
00:00:30.107 --> 00:00:33.247
You're literally just
describing what you want, and

12
00:00:33.247 --> 00:00:37.418
you have a browser that just reads it and
kind of just displays it as it is.

13
00:00:39.686 --> 00:00:45.037
&gt;&gt; Brian Holt: So it is static, which is
the opposite of dynamic, it is unchanging,

14
00:00:45.037 --> 00:00:50.680
it's just, here's HTML,
it's presenting you with an essay, right?

15
00:00:50.680 --> 00:00:55.185
Your essay doesn't execute anything,
it's just an essay.

16
00:00:55.185 --> 00:01:00.410
&gt;&gt; Brian Holt: So
the basic building block of HTML is a tag.

17
00:01:00.410 --> 00:01:04.827
Or you'll hear me sometimes
use the world element as well.

18
00:01:04.827 --> 00:01:08.174
An element is one specific
instance of a tag, and

19
00:01:08.174 --> 00:01:11.207
we'll kind of explain
that as I go forward.

20
00:01:11.207 --> 00:01:14.213
But let's just get into an example,
I think that's the best way to learn.

21
00:01:14.213 --> 00:01:17.331
So here I have this h1, right?

22
00:01:17.331 --> 00:01:22.273
So this is called an angle bracket,
then h1,

23
00:01:22.273 --> 00:01:28.882
which is the type of tag this is,
right, so this is an h1 tag.

24
00:01:28.882 --> 00:01:34.339
Then you have your text inside of it, and
then here we have the closing h1 tag,

25
00:01:34.339 --> 00:01:39.131
which is, you can tell it's angle
bracket slash, then the tag, and

26
00:01:39.131 --> 00:01:41.295
then a closing angle bracket.

27
00:01:44.136 --> 00:01:48.487
&gt;&gt; Brian Holt: So I'll talk about what an
h1 specifically here in just a second, but

28
00:01:48.487 --> 00:01:52.124
I want you to get familiar with
the premise of what a tag is.

29
00:01:52.124 --> 00:01:57.640
So this is basically saying that I
have this header, this h1, right?

30
00:01:57.640 --> 00:02:02.146
This is the text that's inside of there,
and this is where it ends right?

31
00:02:02.146 --> 00:02:05.521
So you can see here,
this is the title to my document.

32
00:02:05.521 --> 00:02:09.282
Again this is editable so
you can put things in here and

33
00:02:09.282 --> 00:02:12.701
you'll instantly see it inside of there.

34
00:02:12.701 --> 00:02:16.996
&gt;&gt; Brian Holt: So,
&gt;&gt; Brian Holt: This is how HTML operates,

35
00:02:16.996 --> 00:02:20.074
it's just a bunch of tags with
stuff inside of it, right?

36
00:02:20.074 --> 00:02:23.176
In this case,
we just have text inside of it, but

37
00:02:23.176 --> 00:02:26.068
often tags will have
other tags inside of it.

38
00:02:29.421 --> 00:02:32.689
&gt;&gt; Brian Holt: So
when it's rendered out to the browser,

39
00:02:32.689 --> 00:02:34.787
this is what it looks like.

40
00:02:34.787 --> 00:02:40.208
So an h1 specifically is a header,
right, that 's what the h stands for.

41
00:02:40.208 --> 00:02:44.301
And the h1, the 1 part of it means
it's the most important one for

42
00:02:44.301 --> 00:02:46.584
whatever section it's in, right?

43
00:02:46.584 --> 00:02:52.751
There's also h2s,
which are the second level, right?

44
00:02:52.751 --> 00:02:57.215
As you might imagine, you can have an h1,
that's like the title of the page, and

45
00:02:57.215 --> 00:03:00.092
then you might have multiple subsections,
right?

46
00:03:00.092 --> 00:03:03.142
Maybe you have a blog, and
you have multiple blog posts.

47
00:03:03.142 --> 00:03:07.249
And each one of those titles of those blog
posts might be h2s, for example, right?

48
00:03:07.249 --> 00:03:09.184
So it's the second most important level.

49
00:03:09.184 --> 00:03:12.652
It's not that you can't have multiple h2s,
you can even have multiple h1s,

50
00:03:12.652 --> 00:03:13.494
that's fine too.

51
00:03:16.620 --> 00:03:17.894
&gt;&gt; Brian Holt: But
it's kind of a hierarchy, right?

52
00:03:17.894 --> 00:03:21.736
So you're saying that when
you say something as an h2,

53
00:03:21.736 --> 00:03:24.123
it's not as important as the h1.

54
00:03:24.123 --> 00:03:29.889
And again, this goes all the way
down to actually h6, there's no h7.

55
00:03:29.889 --> 00:03:34.693
I'm sorry, it's just hopefully
you don't have six different,

56
00:03:34.693 --> 00:03:40.377
I don't think I've actually have used
an h6 on a website that I've written.

57
00:03:40.377 --> 00:03:44.855
Maybe I'm doing something wrong,
but no, not typically.

58
00:03:44.855 --> 00:03:48.603
I think I've used an h3 before,
I don't think I've gone any lower than h3.

59
00:03:52.503 --> 00:03:56.684
&gt;&gt; Brian Holt: Okay, so
this is the base layer of what HTML is,

60
00:03:56.684 --> 00:04:01.400
it's just a bunch of tags,
that's really about it.

61
00:04:01.400 --> 00:04:06.294
[LAUGH] So
that's what this looks like as the h1

62
00:04:06.294 --> 00:04:11.323
right there, and that in and
of itself is a h1.

63
00:04:13.837 --> 00:04:18.215
&gt;&gt; Brian Holt: So it's bigger and it's
bolder because that's what browsers do

64
00:04:18.215 --> 00:04:21.090
with h1s, they make things big and bold.

65
00:04:21.090 --> 00:04:25.740
The browser has a bunch of defaults of
what it thinks an h1 should look like.

66
00:04:25.740 --> 00:04:29.459
Now when we get into CSS, we'll figure
out later how to make it look like

67
00:04:29.459 --> 00:04:33.436
other things, but just by putting an h1
on the page, that's what it does.

68
00:04:33.436 --> 00:04:34.670
That's what the browser does,

69
00:04:34.670 --> 00:04:36.872
that's what it's supposed to
do is make it big and bold.

70
00:04:36.872 --> 00:04:41.164
And you'll notice when I was up here
messing around with this, when I put h1,

71
00:04:41.164 --> 00:04:42.671
it was really big, right?

72
00:04:42.671 --> 00:04:47.520
When I put h3 or h2,
it gets smaller each time, right?

73
00:04:47.520 --> 00:04:51.065
Down to h6, which is just a little
bit bigger than normal text.

74
00:04:57.630 --> 00:04:59.460
&gt;&gt; Brian Holt: So like I said, with CSS,

75
00:04:59.460 --> 00:05:04.708
you can change these things to make
them look and act differently, right?

76
00:05:04.708 --> 00:05:07.400
So why is it actually important that
we're using the correct tag, right?

77
00:05:07.400 --> 00:05:12.159
Why am I using h1 if it is ultimately
meaningless if I can change the way it

78
00:05:12.159 --> 00:05:12.713
looks?

79
00:05:12.713 --> 00:05:15.642
Well the reason why it actually
ends up being really important for

80
00:05:15.642 --> 00:05:16.500
a couple reasons.

81
00:05:16.500 --> 00:05:21.032
The first and foremost one, and
I would deem the most important one,

82
00:05:21.032 --> 00:05:25.801
is that it makes this website more
accessible to people that are not using

83
00:05:25.801 --> 00:05:29.109
the website like you do,
or maybe you do, right?

84
00:05:29.109 --> 00:05:33.370
So there's things like screen readers,
right, for people that are blind, or

85
00:05:33.370 --> 00:05:37.140
hard of seeing, or otherwise
permanently or temporarily disabled.

86
00:05:37.140 --> 00:05:40.803
They'll have these screen readers that'll
go through, and it'll actually look for

87
00:05:40.803 --> 00:05:41.716
the h1s on the page.

88
00:05:41.716 --> 00:05:44.995
It's like, here are the important
parts of this website.

89
00:05:44.995 --> 00:05:49.010
And so it's being used in ways that you
probably don't necessarily anticipate.

90
00:05:49.010 --> 00:05:53.337
So it's actually up to you as the
developer to just use good practices, and

91
00:05:53.337 --> 00:05:56.841
say okay, if this is the most
important part of the section,

92
00:05:56.841 --> 00:05:58.436
I'm gonna use an h1 here.

93
00:05:58.436 --> 00:06:00.720
It's really, really important because
the web is for everyone, right?

94
00:06:00.720 --> 00:06:03.614
It's not for just seeing people,
it's for everyone.

95
00:06:03.614 --> 00:06:08.596
That's one of actually the fundamental
tenants of the web is that it's for

96
00:06:08.596 --> 00:06:09.398
everyone.

97
00:06:09.398 --> 00:06:12.514
So make sure you're
doing things like that,

98
00:06:12.514 --> 00:06:15.220
because it really is an ethical issue.

99
00:06:15.220 --> 00:06:18.706
Beyond that, it's also good for
like Google and Bing and Duck Duck Go and

100
00:06:18.706 --> 00:06:19.629
things like that.

101
00:06:19.629 --> 00:06:21.647
That's how they're actually
looking at your website.

102
00:06:21.647 --> 00:06:25.500
It's like okay, here's your h1, this is
actually probably pretty important to it.

103
00:06:25.500 --> 00:06:29.054
And so they use that when they're kind of
crawling your websites to determine where

104
00:06:29.054 --> 00:06:32.404
you're ranked, and how you're ranked,
and what keywords you rank for, and

105
00:06:32.404 --> 00:06:33.240
things like that.

106
00:06:33.240 --> 00:06:34.877
So that's another reason
why it's really important.

107
00:06:34.877 --> 00:06:37.778
And then lastly, it's actually for
your future self and

108
00:06:37.778 --> 00:06:40.867
your colleagues that will be
working on the same code as you.

109
00:06:40.867 --> 00:06:44.701
You're gonna write this code, and then
six months later you're gonna come back,

110
00:06:44.701 --> 00:06:46.904
it's like,
what the hell did I write, right?

111
00:06:46.904 --> 00:06:50.706
That always happens, [LAUGH] that's
why it's really important for

112
00:06:50.706 --> 00:06:53.185
you to write code that makes sense, right?

113
00:06:53.185 --> 00:06:55.839
Because when you come back later,
you want it to be descriptive, so

114
00:06:55.839 --> 00:06:57.624
that when you read it,
it makes sense to you.

115
00:06:57.624 --> 00:07:01.808
A little known fact is that code is
actually more meant for you than it is for

116
00:07:01.808 --> 00:07:02.629
the machine.

117
00:07:02.629 --> 00:07:06.899
You're just basically taking notes in such
a way that the computer can understand it.

118
00:07:06.899 --> 00:07:09.616
[LAUGH] That's really what
code is at the end of the day.

119
00:07:09.616 --> 00:07:13.840
It's notes that the computer can exercise,
or that it can execute, but

120
00:07:13.840 --> 00:07:17.666
you can understand when you come
back later to make changes to it.

121
00:07:17.666 --> 00:07:23.043
That's the point of writing good code is
so that you can make it more readable and

122
00:07:23.043 --> 00:07:26.430
easier to modify later by yourself and
by others.

123
00:07:26.430 --> 00:07:27.735
So use good HTML,

124
00:07:27.735 --> 00:07:33.226
it's worth the thought that you put
into it make sure that it's good HTML.

125
00:07:35.303 --> 00:07:36.400
&gt;&gt; Brian Holt: Let's see what else.

126
00:07:38.297 --> 00:07:41.340
&gt;&gt; Brian Holt: The other thing is
that when you write things like this,

127
00:07:41.340 --> 00:07:45.103
when you write good HTML,
that you end up making your code reusable.

128
00:07:45.103 --> 00:07:48.626
Which is something that we as
developers strive a lot to do,

129
00:07:48.626 --> 00:07:50.393
is to make our code reusable.

130
00:07:50.393 --> 00:07:54.441
What's really nice about that is,
if I make this really nice h1 that matches

131
00:07:54.441 --> 00:07:57.078
the style of my website and
all that kind of stuff.

132
00:07:57.078 --> 00:08:02.260
When I go later and I make another
webpage, I can just reuse that same h1.

133
00:08:02.260 --> 00:08:05.660
And not have to do any additional work.

134
00:08:05.660 --> 00:08:08.120
We'll get into that with CSS,
and how we're able to do that.

135
00:08:08.120 --> 00:08:12.440
But if you use good coding styles you'll
end up making parts of your code reusable,

136
00:08:12.440 --> 00:08:13.760
which makes you able to go faster.

137
00:08:15.460 --> 00:08:19.280
And less prone to bugs, that's
another thing that's really important.

138
00:08:19.280 --> 00:08:23.580
So hopefully I've explained to you at
least a little bit why it's important to

139
00:08:23.580 --> 00:08:25.859
put a little bit of thought into HTML, and

140
00:08:25.859 --> 00:08:28.677
not just make everything a div,
or whatever it is.

141
00:08:30.783 --> 00:08:32.807
&gt;&gt; Brian Holt: So, a tag,
whether it's opening or

142
00:08:32.807 --> 00:08:35.350
closing, is surrounded by angle brackets.

143
00:08:35.350 --> 00:08:39.590
100% of the time all tags
are surrounded by angle brackets.

144
00:08:39.590 --> 00:08:43.885
So h1's, inputs, all that kind of stuff,
this is what you're looking for

145
00:08:43.885 --> 00:08:47.999
when you're reading HTML, are the opening
and closing angle brackets.

146
00:08:49.509 --> 00:08:53.940
&gt;&gt; Brian Holt: Closing tags always have
a slash right here after the opening angle

147
00:08:53.940 --> 00:08:57.430
bracket, that's how you
know it's a closing tag.

148
00:08:58.920 --> 00:09:03.040
Lastly, you have things that are called
void tags, or self-closing tags,

149
00:09:03.040 --> 00:09:07.840
and you'll see that slash here at the end
next to the closing angle bracket.

150
00:09:07.840 --> 00:09:12.101
These are tags that open and
close themselves, right,

151
00:09:12.101 --> 00:09:14.739
so they are self contained units.

152
00:09:14.739 --> 00:09:18.276
We'll explain here in a second
why you would have that, but

153
00:09:18.276 --> 00:09:21.319
just know you'll have both
self closing tags, and

154
00:09:21.319 --> 00:09:25.900
then you'll also have tags that open and
then close eventually, right?

155
00:09:25.900 --> 00:09:30.045
So this one right here opens here,
closes here, right?

156
00:09:32.438 --> 00:09:36.464
&gt;&gt; Brian Holt: It's really
important that you basically treat

157
00:09:36.464 --> 00:09:39.319
these like parentheses, right?

158
00:09:39.319 --> 00:09:40.980
That if you have an opening parenthesis,

159
00:09:40.980 --> 00:09:44.410
you need to close it before you close
any of the other parentheses, right?

160
00:09:44.410 --> 00:09:47.670
So, if I have parentheses like that,

161
00:09:47.670 --> 00:09:50.340
that's really hard to see,
it's easier to see up there.

162
00:09:52.500 --> 00:09:56.292
If I had a square bracket there,
I wouldn't close it like that, right,

163
00:09:56.292 --> 00:09:58.294
that doesn't really make any sense.

164
00:10:00.342 --> 00:10:02.319
&gt;&gt; Brian Holt: Maybe I'll make it
a little bit bigger just temporarily, so

165
00:10:02.319 --> 00:10:04.550
you can see what I'm talking about,
this what I'm talking about.

166
00:10:08.015 --> 00:10:09.805
&gt;&gt; Brian Holt: So,
if you're doing parentheses,

167
00:10:09.805 --> 00:10:11.999
you would have parentheses
on the interior,

168
00:10:11.999 --> 00:10:17.040
and then you would have square brackets on
the outside, that would make sense, right?

169
00:10:17.040 --> 00:10:19.510
So, you have to close
the last one that was opened,

170
00:10:19.510 --> 00:10:20.780
that's basically what I'm saying here.

171
00:10:20.780 --> 00:10:25.137
So, if I have an h1 here that opens,
I can't close the div,

172
00:10:25.137 --> 00:10:27.281
I have to close the h1 first.

173
00:10:27.281 --> 00:10:31.835
So like you see here, where I have the h1
here and the div here, this is wrong,

174
00:10:31.835 --> 00:10:33.790
this is not valid HTML.

175
00:10:33.790 --> 00:10:39.100
So this h1 has to close before I can
close this div, that make sense?

176
00:10:39.100 --> 00:10:40.941
That's just one of the rules of HTML.

177
00:10:45.509 --> 00:10:49.436
&gt;&gt; Brian Holt: So, I'll talk about
divs here in a second, at the end,

178
00:10:49.436 --> 00:10:51.120
we go over a lot of tags.

179
00:10:56.594 --> 00:10:59.211
&gt;&gt; Brian Holt: Cool,
so a self closing tag,

180
00:10:59.211 --> 00:11:04.674
I am just going to put it right here,
something like an input.

181
00:11:08.100 --> 00:11:10.370
&gt;&gt; Brian Holt: So you can say here,
this is a text box, right?

182
00:11:12.560 --> 00:11:16.060
The way that you make this text box
on this page is with this input tag,

183
00:11:16.060 --> 00:11:17.930
right, that's what it does.

184
00:11:17.930 --> 00:11:22.500
It allows the user to input stuff
into like a website so that you

185
00:11:22.500 --> 00:11:26.620
eventually that HTML, or whatever the user
puts there, can be sent to you, right?

186
00:11:27.810 --> 00:11:29.349
So it makes sense that this
is a self closing tag,

187
00:11:29.349 --> 00:11:31.014
you wouldn't actually have
anything inside of it.

188
00:11:31.014 --> 00:11:32.852
That wouldn't make any sense right,

189
00:11:32.852 --> 00:11:36.310
because this is like one atomic
unit that cannot be split apart.

190
00:11:36.310 --> 00:11:38.260
So that's kind of what these
self closing tags are,

191
00:11:38.260 --> 00:11:40.730
they're things that really
just can't be split apart.

192
00:11:40.730 --> 00:11:42.473
All right, there's nothing inside of it,

193
00:11:42.473 --> 00:11:45.640
it doesn't make any sense to have anything
other than a self closing tag there.

194
00:11:47.770 --> 00:11:50.390
So you see here that's what
this trailing slash here means,

195
00:11:50.390 --> 00:11:52.540
it means this is a self closing tax.

196
00:11:52.540 --> 00:11:54.740
Unfortunately to make this
a little bit more confusing,

197
00:11:54.740 --> 00:11:57.968
you actually don't have
to push that slash there.

198
00:11:57.968 --> 00:12:03.059
So you can have an input like this,
this is actually a valid HTML.

199
00:12:05.683 --> 00:12:08.538
&gt;&gt; Brian Holt: So it is in fact optional,
but no matter what,

200
00:12:08.538 --> 00:12:11.050
input tags are always self closing.

201
00:12:11.050 --> 00:12:13.120
And there's several others
that are that way, but for

202
00:12:13.120 --> 00:12:15.900
now we'll just talk about inputs.

203
00:12:15.900 --> 00:12:17.406
Any questions about HTML so far?

204
00:12:19.775 --> 00:12:21.211
&gt;&gt; off screen female: So actually,

205
00:12:21.211 --> 00:12:27.324
if you the slash at the end of
input you have a space before it?

206
00:12:27.324 --> 00:12:30.217
&gt;&gt; Brian Holt: Yeah, I think that's
just like a stylistic preference,

207
00:12:30.217 --> 00:12:31.995
I think that's technically fine.

208
00:12:34.530 --> 00:12:35.355
&gt;&gt; off screen male: You don't need it?

209
00:12:35.355 --> 00:12:37.540
&gt;&gt; Brian Holt: You don't need it, yeah.

210
00:12:37.540 --> 00:12:40.740
I always put it there,
I don't know if I have a good reason.

211
00:12:40.740 --> 00:12:45.260
Habit, I suppose,
[LAUGH] that's a good question, yeah?

212
00:12:45.260 --> 00:12:49.460
&gt;&gt; off screen female: So, for
best practices should you use

213
00:12:49.460 --> 00:12:54.000
the closing slash, or skip it, or
is that really just stylistic preferences?

214
00:12:54.000 --> 00:12:56.190
&gt;&gt; Brian Holt: I think the answer to
the question is stylistic preference.

215
00:12:57.320 --> 00:13:01.925
I used to not ever put the slash,
and then I started writing React,

216
00:13:01.925 --> 00:13:07.284
where you, with React specifically,
which is not the same as writing HTML.

217
00:13:07.284 --> 00:13:12.264
But React requires it, so
that's why I got back in the habit

218
00:13:12.264 --> 00:13:16.857
of putting it again, so
up to you I think is the answer.

219
00:13:16.857 --> 00:13:21.222
Good question, anyone else, yes?

220
00:13:21.222 --> 00:13:24.354
&gt;&gt; off screen male: In your example
where you have the word hi,

221
00:13:24.354 --> 00:13:30.020
you have the hi on a separate line from
h1 and the closing bracket on each one.

222
00:13:31.060 --> 00:13:35.391
Does it have to be on a separate line,
or can they all be on one single line?

223
00:13:35.391 --> 00:13:37.830
All the h1, opening and closing?

224
00:13:37.830 --> 00:13:40.430
&gt;&gt; Brian Holt: So, I like that question,
thank you very much.

225
00:13:43.310 --> 00:13:49.200
You can definitely do this,
right, is that your question?

226
00:13:49.200 --> 00:13:52.294
This is totally valid HTML,
this will go through a browser and

227
00:13:52.294 --> 00:13:53.970
it will work perfectly.

228
00:13:53.970 --> 00:13:57.876
This is very hard to read, [LAUGH] so

229
00:13:57.876 --> 00:14:02.333
the whitespace is what this is called.

230
00:14:05.554 --> 00:14:08.576
&gt;&gt; Brian Holt: If I go back to here,
like this, this whitespace here, so

231
00:14:08.576 --> 00:14:12.360
all these spaces and returns and
things like that, it's meaningless.

232
00:14:12.360 --> 00:14:15.203
It doesn't actually do anything,
it's purely for

233
00:14:15.203 --> 00:14:18.054
you as a programmer to make
it more readable for you.

234
00:14:18.054 --> 00:14:21.929
So this is far less dense, so it's easy
for my eye to peruse very quickly,

235
00:14:21.929 --> 00:14:24.132
which is ultimately what I'm going for.

236
00:14:24.132 --> 00:14:27.139
So even though there's
a bunch of space here,

237
00:14:27.139 --> 00:14:30.880
you'll notice that there's
no space before this.

238
00:14:30.880 --> 00:14:33.360
HTML cuts off all of that space,

239
00:14:33.360 --> 00:14:37.820
so that's a good question,
does that answer your question?

240
00:14:37.820 --> 00:14:40.215
Cool, so it's purely for you.

241
00:14:43.061 --> 00:14:43.932
&gt;&gt; Brian Holt: Other questions?

242
00:14:45.225 --> 00:14:46.254
&gt;&gt; off screen female: I
have one more question.

243
00:14:46.254 --> 00:14:46.818
&gt;&gt; Brian Holt: Please.

244
00:14:46.818 --> 00:14:49.460
&gt;&gt; off screen female: So
what is div and when do you use it?

245
00:14:49.460 --> 00:14:50.830
&gt;&gt; Brian Holt: I'll get to it,
just a second.

246
00:14:50.830 --> 00:14:54.080
&gt;&gt; off screen female: Okay.
&gt;&gt; Brian Holt: But a good question, yeah?

247
00:14:54.080 --> 00:14:58.020
&gt;&gt; off screen female: So when I do
the first h1, and I type in say h5,

248
00:14:58.020 --> 00:15:03.600
it seems to input into the result the h5,

249
00:15:03.600 --> 00:15:08.120
and it does highlight
the second h1 in red.

250
00:15:08.120 --> 00:15:08.660
&gt;&gt; Brian Holt: Like this.

251
00:15:08.660 --> 00:15:10.610
&gt;&gt; off screen female: It lets me do that,
yeah.

252
00:15:12.340 --> 00:15:14.451
&gt;&gt; Brian Holt: That's a good question,
it's like what's happening here?

253
00:15:14.451 --> 00:15:15.500
&gt;&gt; off screen female: Yeah.

254
00:15:16.520 --> 00:15:18.110
&gt;&gt; Brian Holt: HTML, and
browsers in particular,

255
00:15:18.110 --> 00:15:20.960
are very good at dealing with bad HTML.

256
00:15:20.960 --> 00:15:24.349
Because we have decades of
bad programmers behind us,

257
00:15:24.349 --> 00:15:27.524
and good programmers, but
also bad programmers.

258
00:15:27.524 --> 00:15:31.148
This used to be called quirks mode,
[LAUGH] anyone that had to deal with

259
00:15:31.148 --> 00:15:34.365
quirks mode will probably get
a little bit of PTSD right now.

260
00:15:34.365 --> 00:15:37.338
[LAUGH] But the short answer to it is,

261
00:15:37.338 --> 00:15:41.908
I don't actually know how
it's going to handle this.

262
00:15:41.908 --> 00:15:48.090
But the browser is very resilient and will
try to recover from mistakes like that.

263
00:15:48.090 --> 00:15:52.474
So this being red right here,
this has a syntax highlighter on it,

264
00:15:52.474 --> 00:15:55.390
that's why this is green and
this is black.

265
00:15:55.390 --> 00:15:58.690
And so that's the syntax highlighter
breaking, that's why it's red right there.

266
00:16:00.440 --> 00:16:05.301
This looks like it's actually
being rendered as an H5.

267
00:16:05.301 --> 00:16:08.838
Yeah, so
it looks like this is respecting the H5,

268
00:16:08.838 --> 00:16:14.117
which means that Firefox in this
particular case is respecting it as an H5.

269
00:16:16.204 --> 00:16:16.973
&gt;&gt; Brian Holt: Good question though.

270
00:16:22.296 --> 00:16:25.211
&gt;&gt; Brian Holt: Yeah, I think the sum of
the story is that the browser will do its

271
00:16:25.211 --> 00:16:26.041
best to recover.

272
00:16:28.396 --> 00:16:29.775
&gt;&gt; Brian Holt: And does a pretty good job.

