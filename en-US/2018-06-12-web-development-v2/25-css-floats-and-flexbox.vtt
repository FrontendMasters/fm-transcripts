WEBVTT

1
00:00:00.000 --> 00:00:02.450
&gt;&gt; Brian Holt: So floats and flex.

2
00:00:04.402 --> 00:00:06.358
&gt;&gt; Brian Holt: We talked
a little bit about floats.

3
00:00:08.580 --> 00:00:09.786
&gt;&gt; Brian Holt: Do I do it here?

4
00:00:14.078 --> 00:00:18.563
&gt;&gt; Brian Holt: So yeah, we'll talk
about floats here in just a second.

5
00:00:18.563 --> 00:00:21.236
What I wanna say is, for
the rest of this page,

6
00:00:21.236 --> 00:00:24.872
we're gonna be talking a lot about
how to get things to lay out,

7
00:00:24.872 --> 00:00:29.002
how to get them to stay in relation to
each other the way that you want to.

8
00:00:29.002 --> 00:00:33.483
So the entire time I'm gonna be
using three different boxes,

9
00:00:33.483 --> 00:00:36.075
box-1, box-2, and box-3.

10
00:00:36.075 --> 00:00:38.788
Box-1 is both tall and wide.

11
00:00:38.788 --> 00:00:42.132
Box-2 is just wide, and
box-3 is just tall.

12
00:00:42.132 --> 00:00:47.464
So this is the CSS I used to make them.

13
00:00:47.464 --> 00:00:51.546
So just so you know, I'm gonna be
reusing these boxes over and over again.

14
00:00:51.546 --> 00:00:52.816
This is where they're styled.

15
00:00:56.677 --> 00:01:00.299
&gt;&gt; Brian Holt: So floats, they're the old,
bullet-proof way of laying things out.

16
00:01:00.299 --> 00:01:04.747
If you need to support Windows XP,
you're gonna be using floats.

17
00:01:04.747 --> 00:01:08.617
Also, I'm sorry.

18
00:01:08.617 --> 00:01:12.934
Internet Explorer 6 has literally
taken years of my life [LAUGH].

19
00:01:12.934 --> 00:01:17.122
I used to work at a company
that worked on a website, and

20
00:01:17.122 --> 00:01:22.783
a good quarter of people browsing our
website were from the State of Utah.

21
00:01:22.783 --> 00:01:27.133
[LAUGH] Bored state employees, and
all of the computers, I think, for

22
00:01:27.133 --> 00:01:29.730
the State of Utah are still on Windows XP.

23
00:01:29.730 --> 00:01:32.010
So we had to support Windows XP,

24
00:01:32.010 --> 00:01:35.815
which means we have to
support Internet Explorer 6.

25
00:01:35.815 --> 00:01:39.121
Now, if you're just getting
into web development,

26
00:01:39.121 --> 00:01:44.275
you will hopefully never have to know
the woes of supporting IE6, but it's hard.

27
00:01:44.275 --> 00:01:48.491
I never had to support IE5,
which I'm told it was yet

28
00:01:48.491 --> 00:01:51.503
worse, but IE6 was pretty damn bad.

29
00:01:51.503 --> 00:01:56.104
No, you just have to deal with IE11,
which has its own problems,

30
00:01:56.104 --> 00:01:58.135
just not necessarily as bad.

31
00:01:58.135 --> 00:02:00.888
It supports flex, so [LAUGH].

32
00:02:00.888 --> 00:02:05.039
Okay, so floats.

33
00:02:05.039 --> 00:02:08.032
You would use floats typically
when you could not use flex.

34
00:02:08.032 --> 00:02:13.864
This isn't totally true, there are still
occasions where floats can be useful.

35
00:02:13.864 --> 00:02:19.684
Nonetheless,
&gt;&gt; Brian Holt: If I do .floated div,

36
00:02:19.684 --> 00:02:23.234
so all these divs in here.

37
00:02:25.029 --> 00:02:27.817
&gt;&gt; Brian Holt: I guess I didn't
talk about descendants, did I?

38
00:02:27.817 --> 00:02:30.373
I guess that bears mentioning for
just a second.

39
00:02:30.373 --> 00:02:34.117
So this is all the divs inside of floated.

40
00:02:34.117 --> 00:02:36.929
Typically, I would not
tell you to do this.

41
00:02:36.929 --> 00:02:40.769
Typically, I would tell you
to select each one of these,

42
00:02:40.769 --> 00:02:44.934
I would maybe just give each one
of these like box, box, box.

43
00:02:44.934 --> 00:02:49.113
If I was doing this for a real production
website, this is what I would do instead.

44
00:02:53.579 --> 00:02:56.302
&gt;&gt; Brian Holt: But,
&gt;&gt; Brian Holt: So

45
00:02:56.302 --> 00:02:59.969
if you put that space there,
you're saying a descendant of this, right?

46
00:02:59.969 --> 00:03:06.733
So .floated .box is
a box inside of floated.

47
00:03:08.589 --> 00:03:10.475
&gt;&gt; Brian Holt: Do we follow,
does it make sense?

48
00:03:12.793 --> 00:03:15.530
&gt;&gt; Brian Holt: Now,
if I even have boxes nested deeply inside,

49
00:03:15.530 --> 00:03:19.733
it doesn't matter how far the nest is,
just any box that's in floated, or

50
00:03:19.733 --> 00:03:24.237
that's inside of any floated, any box
that's inside of any floated, right?

51
00:03:24.237 --> 00:03:25.409
Cool.

52
00:03:27.267 --> 00:03:31.545
&gt;&gt; Brian Holt: If you wanted to limit it
to just the immediate descendants, so

53
00:03:31.545 --> 00:03:36.793
it has to be the first layer underneath
there, you can use this little arrow,

54
00:03:36.793 --> 00:03:39.961
and that will stay only
directly inside of it.

55
00:03:39.961 --> 00:03:44.045
So that is actually possible, but don't.

56
00:03:44.045 --> 00:03:47.953
These are called structural selectors,
and there are a few of them.

57
00:03:47.953 --> 00:03:52.872
For the most part you want
to steer clear of them.

58
00:03:52.872 --> 00:03:56.398
Because as soon as someone changes
the structure of your HTML,

59
00:03:56.398 --> 00:03:57.738
all of your CSS breaks.

60
00:03:57.738 --> 00:04:00.766
That's a bad thing, so.

61
00:04:00.766 --> 00:04:06.175
Okay, so
I have this blue floated right here,

62
00:04:06.175 --> 00:04:10.068
so this is box-1, it's blue.

63
00:04:10.068 --> 00:04:11.625
It floats to the left, right?

64
00:04:11.625 --> 00:04:13.618
So it pushes as far to
the left as it possibly can.

65
00:04:13.618 --> 00:04:15.827
Then I have box-2, which is the red one.

66
00:04:15.827 --> 00:04:18.042
It pushes as far to the left
as it possibly can.

67
00:04:18.042 --> 00:04:23.296
And then box-3 does not fit here on the
right, so then it wraps to the next line,

68
00:04:23.296 --> 00:04:26.795
and it goes here, and
it pushes against the blue one.

69
00:04:26.795 --> 00:04:31.600
And since it hits it there, it stops
there, which is kind of curious, right?

70
00:04:31.600 --> 00:04:36.413
So it doesn't go down here,
it actually goes here, right?

71
00:04:36.413 --> 00:04:41.128
Now, if I zoom out enough,
you'll see here that it actually will,

72
00:04:41.128 --> 00:04:43.775
because it can still fit on that line,

73
00:04:43.775 --> 00:04:48.031
it's still trying to float left,
it'll stay on that line.

74
00:04:48.031 --> 00:04:57.383
But if I zoom in further,
&gt;&gt; Brian Holt: Where am I?

75
00:04:57.383 --> 00:04:58.528
Okay, there we go.

76
00:05:01.789 --> 00:05:05.411
&gt;&gt; Brian Holt: So now this one
wraps cuz it doesn't fit, right?

77
00:05:05.411 --> 00:05:10.806
But what's curious is this number 3 one,
this is one of the limitations of flow.

78
00:05:10.806 --> 00:05:14.543
You would think that this would just
push up all the way up here, right?

79
00:05:14.543 --> 00:05:19.688
I thought it would, but
it doesn't because it will never

80
00:05:19.688 --> 00:05:24.633
push up higher than a box
that comes before it, right?

81
00:05:24.633 --> 00:05:29.301
So this is box-3,
box-3 will never be higher than box-2.

82
00:05:29.301 --> 00:05:32.071
So that's why it stops here.

83
00:05:32.071 --> 00:05:33.564
Why?

84
00:05:33.564 --> 00:05:35.982
I don't know, it's the way it is.

85
00:05:35.982 --> 00:05:39.524
And in case you're wondering,
if I make it even

86
00:05:39.524 --> 00:05:44.987
smaller,
&gt;&gt; Brian Holt: It

87
00:05:44.987 --> 00:05:46.710
just pushes to the next line.

88
00:05:50.330 --> 00:05:51.719
&gt;&gt; Brian Holt: Make sense?

89
00:05:57.780 --> 00:05:59.719
&gt;&gt; Brian Holt: Okay, cool.

90
00:06:02.263 --> 00:06:06.490
&gt;&gt; Brian Holt: That should be enough for
floats, you can also float right as well.

91
00:06:08.258 --> 00:06:09.859
&gt;&gt; Brian Holt: Does the opposite.

92
00:06:14.132 --> 00:06:17.505
&gt;&gt; Brian Holt: So
let's get into display: flex then,

93
00:06:17.505 --> 00:06:23.079
which is fun stuff
&gt;&gt; Brian Holt: So

94
00:06:23.079 --> 00:06:29.107
a key thing to know about flex is,
if I put display: flex on some element,

95
00:06:29.107 --> 00:06:34.861
when I set the properties, I am
controlling all of the children of it.

96
00:06:34.861 --> 00:06:38.467
I'm not controlling that element itself,
which is different from floating, right?

97
00:06:38.467 --> 00:06:43.670
I said, here, this box, right?

98
00:06:43.670 --> 00:06:47.131
I told that to float left,
which means it was controlling itself and

99
00:06:47.131 --> 00:06:48.602
pushing itself to the left.

100
00:06:48.602 --> 00:06:52.403
When I'm doing flex, I'm then controlling
everything inside of it, right?

101
00:06:52.403 --> 00:06:55.824
So you put display: flex
on the parent container.

102
00:06:55.824 --> 00:06:59.516
That's a key thing, and
we'll get there, and I'll show you.

103
00:06:59.516 --> 00:07:02.602
So I have flex-container right here,
right?

104
00:07:04.283 --> 00:07:08.930
&gt;&gt; Brian Holt: And here on flex-container,
I'm saying display: flex.

105
00:07:08.930 --> 00:07:12.765
And right now all that's doing is
just making everything lay out on

106
00:07:12.765 --> 00:07:13.666
the same line.

107
00:07:13.666 --> 00:07:18.852
But what's curious about this compared to
float, notice that if I make this smaller,

108
00:07:21.962 --> 00:07:24.389
&gt;&gt; Brian Holt: With display: flex,

109
00:07:24.389 --> 00:07:26.946
it squishes it rather.

110
00:07:26.946 --> 00:07:28.326
These even have width, right?

111
00:07:28.326 --> 00:07:30.851
Remember up top that we
set widths on these?

112
00:07:30.851 --> 00:07:36.323
But with display: flex,
I did not give it permission to wrap.

113
00:07:36.323 --> 00:07:38.341
Not like the hip-hop style.

114
00:07:38.341 --> 00:07:42.190
I also did not give it
permission to rap that way.

115
00:07:42.190 --> 00:07:46.019
But in this particular case,
it just squishes them proportionally.

116
00:07:46.019 --> 00:07:50.843
I could come up here and say,
&gt;&gt; Brian Holt: Flex-wrap, and

117
00:07:50.843 --> 00:07:55.980
wrap, and then it would,
it would wrap at that point.

118
00:07:58.642 --> 00:08:00.372
&gt;&gt; Brian Holt: But by default,
it thinks like, no,

119
00:08:00.372 --> 00:08:03.049
you want to try to squish as much
on the same line as possible.

120
00:08:12.830 --> 00:08:14.699
&gt;&gt; Brian Holt: Which is pretty cool,
I think, right?

121
00:08:15.786 --> 00:08:20.040
&gt;&gt; Brian Holt: So now we're gonna mess
with three things pretty extensively.

122
00:08:20.040 --> 00:08:24.939
I think, in my opinion,
these are the most useful things from flex

123
00:08:24.939 --> 00:08:29.590
are flex-direction,
justify-content and align-items.

124
00:08:29.590 --> 00:08:31.551
These are kinda the three
that you toy around with.

125
00:08:31.551 --> 00:08:35.578
There are far more powerful things
that you can do with display flex.

126
00:08:35.578 --> 00:08:38.568
And you should definitely watch Jen's
course on it on Frontend Masters.

127
00:08:38.568 --> 00:08:40.685
I think she goes more into
depth on some of these things.

128
00:08:40.685 --> 00:08:43.817
I'm giving you the 90% use,

129
00:08:43.817 --> 00:08:49.043
she will definitely teach
you the 10% use as well.

130
00:08:50.780 --> 00:08:55.174
&gt;&gt; Brian Holt: So flex-direction,
something that you could not

131
00:08:55.174 --> 00:09:00.395
previously really do,
I can tell it's like hey, reverse.

132
00:09:00.395 --> 00:09:04.770
So notice that 1 comes first, but
it's also the furthest to the right.

133
00:09:04.770 --> 00:09:08.638
This was really difficult/impossible
to do previously, but

134
00:09:08.638 --> 00:09:12.732
with flex you can just say yeah,
reverse that, and it just works.

135
00:09:12.732 --> 00:09:16.372
It just blows my mind still to this day,
super cool.

136
00:09:17.545 --> 00:09:20.783
&gt;&gt; Brian Holt: Notice I'm
still using flex-container,

137
00:09:20.783 --> 00:09:24.729
everything is still the same
from what it was up here.

138
00:09:24.729 --> 00:09:29.657
So right now I'm just adding just
flex-direction and it just reverses.

139
00:09:29.657 --> 00:09:33.818
So I'm trying to show to kinda isolate
these things to show you them in a vacuum.

140
00:09:34.858 --> 00:09:36.439
&gt;&gt; Brian Holt: Questions
about any of this so far?

141
00:09:38.928 --> 00:09:43.173
&gt;&gt; Brian Holt: Again, notice that I'm
messing with the parent container,

142
00:09:43.173 --> 00:09:45.876
I'm not messing with the boxes at all.

143
00:09:45.876 --> 00:09:50.373
All of the boxes in all of these
flex examples are exactly the same,

144
00:09:50.373 --> 00:09:53.520
I'm just messing with
the parent container.

145
00:09:53.520 --> 00:09:56.309
That's a key thing to
kinda keep in your head,

146
00:09:56.309 --> 00:09:59.108
with flex, you're messing with the parent.

147
00:10:00.840 --> 00:10:01.340
&gt;&gt; Brian Holt: Okay?

148
00:10:03.858 --> 00:10:06.733
&gt;&gt; Brian Holt: Now I can say,
rather than go in backwards or

149
00:10:06.733 --> 00:10:11.103
in a row, I want you to go in a column,
so I want you to go up and down.

150
00:10:11.103 --> 00:10:15.210
So you just say flex-direction: column,
and

151
00:10:15.210 --> 00:10:19.015
it just goes in a column,
and it just works.

152
00:10:21.514 --> 00:10:26.599
&gt;&gt; Brian Holt: I think you can even do
column-reverse, and you have 3, 2, 1.

153
00:10:26.599 --> 00:10:33.290
So that's also possible as well you,
can just keep doing that.

154
00:10:33.290 --> 00:10:37.730
Again, really cool stuff that it
was really difficult/impossible,

155
00:10:37.730 --> 00:10:42.615
in fact, this was impossible to do before,
you could not do this with floats.

156
00:10:44.654 --> 00:10:46.914
&gt;&gt; Brian Holt: So
let's put this back to column.

157
00:10:50.571 --> 00:10:52.852
&gt;&gt; Brian Holt: Yeah,
column-reverse also works.

158
00:10:52.852 --> 00:10:54.013
So I think that that's it for

159
00:10:54.013 --> 00:10:57.459
flex-direction, I don't think there's
really much else that you can do with it.

160
00:10:59.992 --> 00:11:02.329
&gt;&gt; Brian Holt: So justify-content.

161
00:11:07.780 --> 00:11:13.186
&gt;&gt; Brian Holt: Let me make this, I'm just
gonna zoom out of this a little bit so

162
00:11:13.186 --> 00:11:18.798
you can see these a little bit more,
otherwise it's hard to see.

163
00:11:18.798 --> 00:11:24.441
So justify-content right,
I do justify-content: flex-end, and

164
00:11:24.441 --> 00:11:30.374
when I say flex-end, it moves everything
as far to the right as possible.

165
00:11:30.374 --> 00:11:33.368
And that's what flex-end does,
move everything to the right.

166
00:11:33.368 --> 00:11:37.600
As you might imagine flex-start
it's everything to the left.

167
00:11:37.600 --> 00:11:41.231
But if you don't change anything,
it's flex-start, so

168
00:11:41.231 --> 00:11:45.742
by default it's flex-start,
which is why you don't typically see it.

169
00:11:47.093 --> 00:11:51.023
&gt;&gt; Brian Holt: Okay, justify-content:
center, as you might imagine,

170
00:11:51.023 --> 00:11:53.573
squishes everything into the middle.

171
00:11:53.573 --> 00:11:56.962
Now notice we're not doing
anything vertically at all yet.

172
00:11:56.962 --> 00:12:00.715
And you can see this box here,
this shows you that,

173
00:12:00.715 --> 00:12:03.521
this is how tall the element is right?

174
00:12:03.521 --> 00:12:07.028
Cuz it's as tall as number 3 is, but
we're just moving things left and

175
00:12:07.028 --> 00:12:10.561
right, we're not moving anything up and
down yet.

176
00:12:10.561 --> 00:12:12.895
&gt;&gt; Brian Holt: So
this is what justify-content: center does,

177
00:12:12.895 --> 00:12:14.566
it moves everything to the middle.

178
00:12:14.566 --> 00:12:19.339
I want you to be extremely grateful
right now that this is how

179
00:12:19.339 --> 00:12:21.642
easy it is to center things.

180
00:12:21.642 --> 00:12:26.281
The goats I had to sacrifice [LAUGH]
to get things to center previously,

181
00:12:26.281 --> 00:12:27.862
not proud of what I did.

182
00:12:27.862 --> 00:12:32.469
Just [LAUGH] yeah,
it used to be, centering

183
00:12:32.469 --> 00:12:37.469
used to be an extremely
difficult thing to do.

184
00:12:37.469 --> 00:12:40.562
And now with flex,
it's just really simple, or

185
00:12:40.562 --> 00:12:44.569
I'll go with the more
simple than it was before.

186
00:12:44.569 --> 00:12:48.631
&gt;&gt; Brian Holt: So now if I wanna space
things out evenly, where the left and

187
00:12:48.631 --> 00:12:53.749
the right are as far to the left and
right as they possibly can, and then have

188
00:12:53.749 --> 00:12:59.378
equal space in between, you can do
space-between, and that's what this does.

189
00:12:59.378 --> 00:13:06.082
So it will optimize to make these things
as evenly spaced as it possibly can.

190
00:13:07.566 --> 00:13:11.649
&gt;&gt; Brian Holt: And then space-around,
what it's going to do is

191
00:13:11.649 --> 00:13:15.928
it's going to put space
between the flex-start and

192
00:13:15.928 --> 00:13:20.514
the flex-end,
as well as space between these things.

193
00:13:20.514 --> 00:13:24.426
So this is space-around,
where the beginning and

194
00:13:24.426 --> 00:13:28.526
the end is half of these ones,
does that makes sense?

195
00:13:28.526 --> 00:13:35.163
You can also do space-evenly, and then
everything will be spaced literary evenly.

196
00:13:37.827 --> 00:13:39.355
&gt;&gt; Brian Holt: I tend to
use space-between more

197
00:13:43.491 --> 00:13:45.747
&gt;&gt; Brian Holt: So again, that's left and

198
00:13:45.747 --> 00:13:47.814
right, not up and down.

199
00:13:47.814 --> 00:13:53.702
Now we gonna do align-items,
which is up and down.

200
00:13:56.255 --> 00:14:00.727
&gt;&gt; Brian Holt: So align-items,
&gt;&gt; Brian Holt: I don't

201
00:14:00.727 --> 00:14:05.311
know why,
&gt;&gt; Brian Holt: Needs to do that,

202
00:14:05.311 --> 00:14:06.554
should just be able to do that.

203
00:14:08.774 --> 00:14:12.317
&gt;&gt; Brian Holt: Anyway, so
flex-end, align-items; flex-end,

204
00:14:12.317 --> 00:14:17.788
that's moving everything from the top,
it's actually gonna be at the bottom now.

205
00:14:17.788 --> 00:14:19.599
So this is all aligned against the bottom,

206
00:14:19.599 --> 00:14:24.480
it's not aligned against the top
&gt;&gt; Brian Holt: Again, previously this

207
00:14:24.480 --> 00:14:28.324
would have been an extremely difficult,
and now it's just one property.

208
00:14:28.324 --> 00:14:31.026
Is just a align-items: flex-end, and
everything just moves down to the bottom.

209
00:14:32.980 --> 00:14:34.507
&gt;&gt; Brian Holt: It moves
down to the bottom,

210
00:14:34.507 --> 00:14:38.078
right, notice that this container
is as big as number 3, right?

211
00:14:38.078 --> 00:14:42.318
Cuz that's the tallest one, and
it moves everything to the bottom of 3.

212
00:14:42.318 --> 00:14:46.969
So I could say here like,

213
00:14:50.655 --> 00:14:53.295
&gt;&gt; Brian Holt: padding-top, 20 pixels, and

214
00:14:53.295 --> 00:14:59.856
notice everything continues moving down to
the bottom as far as it could possibly go.

215
00:15:02.989 --> 00:15:05.149
&gt;&gt; Brian Holt: So that make sense?

216
00:15:05.149 --> 00:15:07.059
Cool.

217
00:15:12.375 --> 00:15:16.102
&gt;&gt; Brian Holt: align-item: center, so
now this is going to vertically center it.

218
00:15:18.535 --> 00:15:21.305
&gt;&gt; Brian Holt: So this one has equal space
here to equal space there, equal space,

219
00:15:21.305 --> 00:15:22.236
equal space, right?

220
00:15:22.236 --> 00:15:24.730
And this one's up against the top and
the bottom.

221
00:15:29.640 --> 00:15:32.090
&gt;&gt; Brian Holt: Okay, align-items: stretch.

222
00:15:32.090 --> 00:15:34.618
This is the only one that I had to
modify actually the boxes themselves.

223
00:15:34.618 --> 00:15:38.028
Cuz if you set a height,
it will actually respect the height, and

224
00:15:38.028 --> 00:15:40.831
I wanted it to actually just
stretch everything out.

225
00:15:40.831 --> 00:15:44.547
So if you say align-item: stretch,
anything that doesn't have a height

226
00:15:44.547 --> 00:15:48.329
necessarily, it's going to stretch
out to fit inside of that div, right?

227
00:15:48.329 --> 00:15:51.515
So this stretches from the top to
the bottom, top to the bottom,

228
00:15:51.515 --> 00:15:55.131
top to the bottom
&gt;&gt; Brian Holt: So

229
00:15:55.131 --> 00:15:57.560
I had to set a height here of
how much I want it to stretch.

230
00:15:57.560 --> 00:16:02.139
And if I set this to like 400,
it'll be stretched even further.

231
00:16:03.668 --> 00:16:06.756
Really, really cool stuff that's really
easy to change with just a couple of

232
00:16:06.756 --> 00:16:07.337
properties.

233
00:16:15.731 --> 00:16:18.864
&gt;&gt; Brian Holt: Or,
&gt;&gt; Brian Holt: I mean,

234
00:16:18.864 --> 00:16:20.913
really just awesome
stuff you could do here.

235
00:16:20.913 --> 00:16:28.111
If I said, get rid of that no-height
thing, and I got rid of this height thing.

236
00:16:28.111 --> 00:16:34.650
So now this container doesn't actually
have any sort of height set on the parent,

237
00:16:34.650 --> 00:16:40.715
but if I come in here and say box-3,
&gt;&gt; Brian Holt: And

238
00:16:40.715 --> 00:16:46.685
I set just the heights of
box-3 to be 250 pixels.

239
00:16:49.731 --> 00:16:51.991
&gt;&gt; Brian Holt: Yeah, I know I messed
up a lot of things by doing that.

240
00:16:51.991 --> 00:16:57.515
Notice that it's stretched
its sibling containers

241
00:16:57.515 --> 00:17:04.180
to match the height of the tallest
element, which is awesome.

242
00:17:04.180 --> 00:17:07.353
It's really cool that you can
just set one of the heights and

243
00:17:07.353 --> 00:17:09.206
all of them stretch to match that.

244
00:17:12.427 --> 00:17:16.210
&gt;&gt; Brian Holt: You might be thinking,
okay, cool, I don't care.

245
00:17:16.210 --> 00:17:17.793
It was so hard to do that before.

246
00:17:17.793 --> 00:17:21.374
[LAUGH] So, so hard.

247
00:17:21.374 --> 00:17:23.867
So I'm using the Cascade,
like I told you not to.

248
00:17:23.867 --> 00:17:28.769
[LAUGH] And I'm telling it, hey,
you previously had height set on you?

249
00:17:28.769 --> 00:17:30.961
First, ignore it.

250
00:17:30.961 --> 00:17:34.460
So it's saying that, you had
something set on you, ignore it and

251
00:17:34.460 --> 00:17:38.156
just get whatever the parent,
the ancestor height was previously.

252
00:17:40.840 --> 00:17:41.863
&gt;&gt; Brian Holt: Make sense?

253
00:17:41.863 --> 00:17:46.227
&gt;&gt; Speaker 2: I think that's
the answer [INAUDIBLE].

254
00:17:46.227 --> 00:17:47.211
&gt;&gt; Brian Holt: Either.

255
00:17:47.211 --> 00:17:47.804
&gt;&gt; Speaker 2: Okay.
&gt;&gt; Brian Holt: So

256
00:17:47.804 --> 00:17:51.186
in this case I have up here box-1,
box-2, and

257
00:17:51.186 --> 00:17:54.260
box-3, so their heights set way up there.

258
00:17:54.260 --> 00:17:56.699
I'm telling it to ignore those.

259
00:17:56.699 --> 00:18:00.611
&gt;&gt; Speaker 2: Okay, and
then whatever's after it to pick.

260
00:18:00.611 --> 00:18:02.379
Why did you do the inherit?

261
00:18:02.379 --> 00:18:05.724
&gt;&gt; Brian Holt: Cuz if I do this then
they're gonna have height, and so

262
00:18:05.724 --> 00:18:08.250
this stretch isn't gonna work.

263
00:18:08.250 --> 00:18:08.966
&gt;&gt; Speaker 2: Okay.

264
00:18:08.966 --> 00:18:12.080
&gt;&gt; Brian Holt: And that stretch is
only gonna work when they don't have

265
00:18:12.080 --> 00:18:12.815
height set.

266
00:18:12.815 --> 00:18:13.673
&gt;&gt; Speaker 2: Okay.

267
00:18:16.720 --> 00:18:19.488
&gt;&gt; Brian Holt: Good question.

268
00:18:19.488 --> 00:18:23.504
&gt;&gt; Speaker 3: And then I'm assuming,
once we get further into it,

269
00:18:23.504 --> 00:18:26.985
instead of saying, height is 200 pixels,

270
00:18:26.985 --> 00:18:31.828
you'll be able to set it according
to your device size, right?

271
00:18:31.828 --> 00:18:34.407
So you can do some sort of variable-
&gt;&gt; Brian Holt: Sure,

272
00:18:34.407 --> 00:18:37.408
you can say things like width 50%.

273
00:18:37.408 --> 00:18:37.976
&gt;&gt; Speaker 2: Okay.

274
00:18:37.976 --> 00:18:43.123
&gt;&gt; Brian Holt: Yeah, and that's actually
probably what you're gonna use the most.

275
00:18:43.123 --> 00:18:44.751
I don't really talk too much about
responsive web design in here, or

276
00:18:44.751 --> 00:18:45.266
responsive coding.

277
00:18:45.266 --> 00:18:49.074
That's the name of that technique,
is making things fit screens.

278
00:18:49.074 --> 00:18:56.176
Cuz scrolling side to side on a phone is
the great evil, [LAUGH] I don't like it.

279
00:18:56.176 --> 00:19:01.817
You do that using percentages and
another thing called media queries,

280
00:19:01.817 --> 00:19:08.599
which are kind of an advanced feature of
CSS worth investigation and understanding.

281
00:19:08.599 --> 00:19:10.699
You do have a responsive course,
don't you?

282
00:19:10.699 --> 00:19:14.117
&gt;&gt; Speaker 4: Yeah, the title of
the course is Responsive Web Design

283
00:19:14.117 --> 00:19:16.654
with CSS Queries and Flexible Layouts.

284
00:19:16.654 --> 00:19:20.978
&gt;&gt; Brian Holt: Cool, yeah, and
Grid in particular is really, really cool.

285
00:19:20.978 --> 00:19:23.599
Cuz you can just basically set up these,

286
00:19:23.599 --> 00:19:26.461
you can make your page
into a grid of things.

287
00:19:26.461 --> 00:19:30.076
And you say, okay, this takes up one unit,
this takes up two units, and

288
00:19:30.076 --> 00:19:33.989
this takes up one unit, and it just kind
of figures out all the spacing for you,

289
00:19:33.989 --> 00:19:35.147
which is really cool.

290
00:19:35.147 --> 00:19:36.851
So, yes,
the answer to your question is yes.

291
00:19:36.851 --> 00:19:40.603
[LAUGH] Other questions?

292
00:19:40.603 --> 00:19:41.628
Great questions so far.

293
00:19:45.940 --> 00:19:48.517
&gt;&gt; Brian Holt: Cool, so
what I wanted to show you here

294
00:19:48.517 --> 00:19:53.122
is you can start combining these
things to get really cool effects.

295
00:19:53.122 --> 00:19:55.313
So one that I will use quite often is,

296
00:19:55.313 --> 00:19:58.367
I'll have a div that's
gonna be of a certain size.

297
00:19:58.367 --> 00:20:01.575
And I wanna make sure everything
is horizontally centered and

298
00:20:01.575 --> 00:20:05.346
vertically centered, so I will
justify center and align items center.

299
00:20:05.346 --> 00:20:07.555
And that just makes
everything sit in the middle.

300
00:20:07.555 --> 00:20:11.370
If you remember at the top,
you go up here to the top of the page.

301
00:20:14.648 --> 00:20:19.350
&gt;&gt; Brian Holt: See how this Box 2 is
sitting exactly in the middle of the div?

302
00:20:19.350 --> 00:20:23.714
The way that I did that, if you notice,
display flex: align-item: center,

303
00:20:23.714 --> 00:20:25.604
justify-content: center, and

304
00:20:25.604 --> 00:20:29.725
that makes everything just be exactly
in the middle of the box at all times.

305
00:20:29.725 --> 00:20:34.448
And what's nice about that,
if I make this width 400, still centered.

306
00:20:34.448 --> 00:20:39.368
If I do height 400, still centered.

307
00:20:39.368 --> 00:20:45.698
If you want to make this width,
let's say, 50%.

308
00:20:48.025 --> 00:20:53.733
&gt;&gt; Brian Holt: That's too big, cuz there's
margins around it, but lets say 40%.

309
00:20:53.733 --> 00:20:59.469
Everything is still totally centered,
in terms of the Box 2 inside of it.

310
00:20:59.469 --> 00:21:03.785
So that's the trick for
centering something inside of something,

311
00:21:03.785 --> 00:21:08.643
is display: flex, align-item: center,
justify-content: center.

312
00:21:08.643 --> 00:21:10.260
You'll use that quite a bit.

313
00:21:15.400 --> 00:21:18.495
&gt;&gt; Brian Holt: Cool, so yeah.

314
00:21:18.495 --> 00:21:21.693
This is align-item: center, reverse, and

315
00:21:21.693 --> 00:21:26.043
justify-content space around,
it's what that looks like.

316
00:21:26.043 --> 00:21:31.144
Or if I do flex-container,
align-items, flex-end, and

317
00:21:31.144 --> 00:21:36.449
column, looks like that,
pushed up in the column on the right.

318
00:21:38.874 --> 00:21:41.758
&gt;&gt; Brian Holt: So I'm teaching you
a bunch of these individual properties in

319
00:21:41.758 --> 00:21:45.202
a vacuum, and the truth is you don't
really use them in a vacuum too much.

320
00:21:45.202 --> 00:21:48.927
It's usually in conjunction with a bunch
of these properties to achieve some

321
00:21:48.927 --> 00:21:51.173
effects that you're trying to sail, right?

322
00:21:51.173 --> 00:21:54.420
I don't know why you would make something
look like that, but for some reason,

323
00:21:54.420 --> 00:21:57.245
some day, you're gonna have to,
and that's how you do it, right?

324
00:21:57.245 --> 00:22:01.696
Is you combine all these things together
to get everything pushed to the right and

325
00:22:01.696 --> 00:22:02.427
in a column.

326
00:22:05.126 --> 00:22:05.998
&gt;&gt; Brian Holt: Questions?

327
00:22:11.661 --> 00:22:12.637
&gt;&gt; Brian Holt: Cool.

328
00:22:13.924 --> 00:22:16.213
&gt;&gt; Brian Holt: We talked
a hot second about flex-wrap.

329
00:22:16.213 --> 00:22:20.789
Which is, right now if you have too
many things on a line it squishes them

330
00:22:20.789 --> 00:22:24.090
together, and
it starts squishing their widths.

331
00:22:24.090 --> 00:22:27.744
And if you wanted to say, no, if this is
too wide, if I have too many things on

332
00:22:27.744 --> 00:22:31.822
this line, go down to the next line,
that's flex-wrap, that's what that does.

333
00:22:34.612 --> 00:22:37.467
&gt;&gt; Brian Holt: And then the last thing is,

334
00:22:37.467 --> 00:22:42.068
you can start doing
crazy stuff with order.

335
00:22:42.068 --> 00:22:45.715
So everything I showed you right now
goes on the container, at the container,

336
00:22:45.715 --> 00:22:46.606
the parent level.

337
00:22:46.606 --> 00:22:50.091
There's actually
properties that you can do

338
00:22:50.091 --> 00:22:55.092
with,
&gt;&gt; Brian Holt: On the children themselves.

339
00:22:55.092 --> 00:22:56.904
So I wonder if I can just do this and
show you.

340
00:23:00.028 --> 00:23:02.891
&gt;&gt; Brian Holt: I'm gonna do
it on this one, actually.

341
00:23:02.891 --> 00:23:09.588
So if I do another style here,
&gt;&gt; Brian Holt: And

342
00:23:09.588 --> 00:23:16.385
I do box-2, dangers of live coding.

343
00:23:16.385 --> 00:23:22.432
If I do box-2 and
I say align-self: flex-end,

344
00:23:22.432 --> 00:23:27.361
I can actually individually move boxes.

345
00:23:27.361 --> 00:23:30.592
And I can even start
messing with the order.

346
00:23:30.592 --> 00:23:36.570
I can say order: 5, and
I moved that to the beginning.

347
00:23:36.570 --> 00:23:44.617
Whereas if I do a box-1 here,
&gt;&gt; Brian Holt: I can

348
00:23:44.617 --> 00:23:49.692
use order to move that 10, and
that will move it to the beginning,

349
00:23:49.692 --> 00:23:53.360
so the higher ones are going
to be ordered first.

350
00:23:53.360 --> 00:23:56.129
But if I do 1 then that's
going to move it back, right?

351
00:23:56.129 --> 00:23:59.999
So now you have 2, then 1,
then the 1 that's unordered.

352
00:23:59.999 --> 00:24:04.565
Again, this was totally impossible before,
without flex and

353
00:24:04.565 --> 00:24:07.504
being able to set order on these things.

354
00:24:07.504 --> 00:24:14.975
And again, you could do align-self
here as well, align-self: flex-start.

355
00:24:14.975 --> 00:24:17.838
So now this is in the bottom,
this is on the top, and

356
00:24:17.838 --> 00:24:20.043
this one is technically in the middle.

357
00:24:22.527 --> 00:24:26.348
&gt;&gt; Brian Holt: So crazy stuff,
pretty cool stuff, anyway.

358
00:24:28.692 --> 00:24:31.670
&gt;&gt; Brian Holt: I don't wanna
get too much more into that.

359
00:24:31.670 --> 00:24:33.372
You can see this got really messed up.

360
00:24:33.372 --> 00:24:40.264
[LAUGH]
&gt;&gt; Brian Holt: The place to look on this,

361
00:24:40.264 --> 00:24:45.961
something I find myself constantly
referring to is CSS Tricks,

362
00:24:45.961 --> 00:24:48.607
A Complete Guide to Flexbox.

363
00:24:48.607 --> 00:24:50.773
I was talking to the guy
that writes this blog.

364
00:24:50.773 --> 00:24:53.022
This is by far their most popular page,

365
00:24:53.022 --> 00:24:55.689
literally ten times more
than any other page.

366
00:24:55.689 --> 00:24:59.840
It's because there's
a ton of stuff on here.

367
00:24:59.840 --> 00:25:01.796
It's impossible to keep all
this stuff in your head,

368
00:25:01.796 --> 00:25:03.850
there's just too much that
you can do with the Flexbox.

369
00:25:03.850 --> 00:25:07.042
So this page is a definitive reference for
it, and

370
00:25:07.042 --> 00:25:11.454
it's all really clear to understand,
which is what I like about it.

371
00:25:11.454 --> 00:25:13.253
So flex-direction's on here.

372
00:25:13.253 --> 00:25:15.253
I didn't even talk about flex-grow,

373
00:25:15.253 --> 00:25:19.510
that you can have things grow to take up
their space, that's really interesting.

374
00:25:19.510 --> 00:25:23.539
You can tell, this one should
be twice as big as the next one.

375
00:25:23.539 --> 00:25:26.977
You can give them kind of like ratios
like that, which is really cool.

376
00:25:26.977 --> 00:25:29.851
There's some really,
really cool stuff you can do with it.

377
00:25:29.851 --> 00:25:34.408
So become familiar with this page.

378
00:25:34.408 --> 00:25:36.927
They have one for Grid as well,
which is quite good.

