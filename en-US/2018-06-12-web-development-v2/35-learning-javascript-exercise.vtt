WEBVTT

1
00:00:00.014 --> 00:00:00.746
&gt;&gt; Brian Holt: Infinite loops.

2
00:00:00.746 --> 00:00:02.894
You have now seen it like five times.

3
00:00:02.894 --> 00:00:11.965
So you got it.
&gt;&gt; Brian Holt: So

4
00:00:11.965 --> 00:00:15.176
I do a little exercise for you down here.

5
00:00:15.176 --> 00:00:19.494
We're just gonna directly encode pin.

6
00:00:19.494 --> 00:00:24.608
So we're going to say,
const character is gonna

7
00:00:24.608 --> 00:00:29.222
be equal to 'a'; or we'll make this let,

8
00:00:29.222 --> 00:00:33.851
actually and const timesToRepeat = 50.

9
00:00:33.851 --> 00:00:38.569
We're gonna make a,

10
00:00:38.569 --> 00:00:44.596
we'll just put that down,

11
00:00:44.596 --> 00:00:49.313
for (let i = 0; i &lt;

12
00:00:49.313 --> 00:00:55.614
timesToRepeat; i++).

13
00:00:55.614 --> 00:01:01.253
And then we're gonna say character and
we can use plus equal here like we were,

14
00:01:01.253 --> 00:01:04.852
let's actually just do like,
a new string here.

15
00:01:04.852 --> 00:01:09.878
So I'm going to say, my answer's gonna be,

16
00:01:09.878 --> 00:01:13.979
let answer equal to empty string, so

17
00:01:13.979 --> 00:01:19.559
let's talk about empty string for
just a second.

18
00:01:19.559 --> 00:01:22.461
It's the two quotes just directly next,
it is a string,

19
00:01:22.461 --> 00:01:24.523
it's just a string of nothing, right.

20
00:01:24.523 --> 00:01:25.990
So it's a string of length zero.

21
00:01:25.990 --> 00:01:30.073
There's nothing in it but
it is a string, okay.

22
00:01:30.073 --> 00:01:36.461
And so here I'm gonna say, answer and
I could say answer = answer + whatever.

23
00:01:36.461 --> 00:01:38.972
But an easier way is just to say += again.

24
00:01:38.972 --> 00:01:42.365
And that's fine, character.

25
00:01:42.365 --> 00:01:47.005
So it's gonna keep adding
character to answer.

26
00:01:47.005 --> 00:01:50.069
And here at the end,

27
00:01:50.069 --> 00:01:55.666
I can say console.log(answer).

28
00:01:55.666 --> 00:02:02.975
And if I bring up the console here.
&gt;&gt; Brian Holt: Whatever,

29
00:02:02.975 --> 00:02:04.856
let's bring it up here.

30
00:02:04.856 --> 00:02:07.823
Console, we can see here I
have a repeated 50 times,

31
00:02:07.823 --> 00:02:12.894
right here.
&gt;&gt; Brian Holt: It

32
00:02:12.894 --> 00:02:18.216
makes sense?
&gt;&gt; Brian Holt: This

33
00:02:18.216 --> 00:02:19.272
happens 50 times, right?

34
00:02:19.272 --> 00:02:23.595
Cuz it's inside of a for
loop that goes from i, starting at 0.

35
00:02:23.595 --> 00:02:25.227
And as soon as this hits 51, right?

36
00:02:25.227 --> 00:02:29.281
51 is where this statement
actually becomes untrue,

37
00:02:29.281 --> 00:02:34.379
then it breaks out of that and
it comes down here and it logs the answer.

38
00:02:34.379 --> 00:02:40.522
So that's the process.
&gt;&gt; Brian Holt: Good?

39
00:02:43.761 --> 00:02:45.849
&gt;&gt; Student: Aren't there 51 As?

40
00:02:45.849 --> 00:02:46.700
&gt;&gt; Brian Holt: There would be 51,

41
00:02:46.700 --> 00:02:49.381
I think you're right.
&gt;&gt; Student: Okay, sorry.

42
00:02:49.381 --> 00:02:51.962
&gt;&gt; Brian Holt: No, that's okay.

43
00:02:51.962 --> 00:02:54.469
Yes, 51.

44
00:02:54.469 --> 00:02:59.048
So you'd have to make this
instead of greater or

45
00:02:59.048 --> 00:03:04.549
equal to, you just make it the equals and
now it's 50.

