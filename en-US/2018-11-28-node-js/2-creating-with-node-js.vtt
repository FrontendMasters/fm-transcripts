 WEBVTT

1
00:00:00.050 --> 00:00:02.280
&gt;&gt; Scott Moss: What can
I create with Nodejs?

2
00:00:04.150 --> 00:00:07.020
Pretty much anything a scripting and
server language like Python or

3
00:00:07.020 --> 00:00:08.530
Ruby can, but with JavaScript.

4
00:00:09.622 --> 00:00:13.356
Basically, pretty much anything
they can do, JavaScript can do.

5
00:00:13.356 --> 00:00:16.786
But again, there will be trade-offs like
we just talked about of how it works, and

6
00:00:16.786 --> 00:00:20.022
how efficient it might be, and what it's
better at and what it's not good at?

7
00:00:20.022 --> 00:00:24.450
But, it can do pretty much
anything those run times can do.

8
00:00:24.450 --> 00:00:29.210
So, things like tooling,
that includes building frameworks,

9
00:00:29.210 --> 00:00:33.800
like have you heard of Webpack or Gulp or
anything like that, those types of things.

10
00:00:33.800 --> 00:00:36.720
Automatons which also again
are like Gulp and Webpack or

11
00:00:36.720 --> 00:00:42.590
like I want to automate this deployment,
or push this to get, or version this.

12
00:00:42.590 --> 00:00:44.780
Node is just so amazing at automations.

13
00:00:44.780 --> 00:00:50.890
I usually, so I collect sneakers, and when
sneakers would launch on certain websites,

14
00:00:50.890 --> 00:00:52.520
I would just like
literally an hour before,

15
00:00:52.520 --> 00:00:54.740
I would just build a script
to just go buy them for me.

16
00:00:54.740 --> 00:00:55.650
So I don't have to do it and

17
00:00:55.650 --> 00:00:59.680
no like takes like an hour just go on the
website like okay, here's what it looks

18
00:00:59.680 --> 00:01:02.540
like and then I'll just crawl it in
node to buy the sneakers for me.

19
00:01:02.540 --> 00:01:04.970
Like I could not have
done that without note.

20
00:01:04.970 --> 00:01:07.600
So it's just like you can pretty much
build any type of automation you can

21
00:01:07.600 --> 00:01:09.750
think of so, it's pretty awesome.

22
00:01:09.750 --> 00:01:10.940
So it's great for tooling.

23
00:01:12.800 --> 00:01:14.540
It is really great for
API that I would say.

24
00:01:14.540 --> 00:01:20.300
It's in my opinion probably like, what
are the best run times for creating APIs.

25
00:01:20.300 --> 00:01:21.210
Go, Go is pretty good too.

26
00:01:21.210 --> 00:01:25.560
But I would say Node is just
more excepting than Go for

27
00:01:25.560 --> 00:01:27.350
like creating any type of API.

28
00:01:27.350 --> 00:01:32.130
So this includes like REST APIs
GraphQL APIs, if you use GraphQL.

29
00:01:32.130 --> 00:01:36.110
Realtime APIs are like web sockets,
especially Realtime APIs, and

30
00:01:36.110 --> 00:01:40.560
that's just because Node enables high
concurrency because of its event loop

31
00:01:40.560 --> 00:01:43.570
architecture and
we'll dive into that a little more.

32
00:01:43.570 --> 00:01:45.110
But it's basically
the same as the browser,

33
00:01:45.110 --> 00:01:47.290
it's just single threaded event based.

34
00:01:47.290 --> 00:01:51.139
So it's really great for that because
it can handle so many requests at once.

35
00:01:53.010 --> 00:01:57.750
CDNs, this is kind of new, and I wasn't
sure if I wanted to put this here yet

36
00:01:57.750 --> 00:02:02.065
because this is a new concept that's
coming soon to an app near you.

37
00:02:02.065 --> 00:02:08.420
But basically a CDN, this is like
a network of computers, right?

38
00:02:08.420 --> 00:02:12.572
Around some space, whether it's the world
or a nation, or a consonant whatever,

39
00:02:12.572 --> 00:02:16.213
it's a network of computers, and
you host your assets on that network.

40
00:02:16.213 --> 00:02:20.250
So therefore those assets are delivered
to your customers as fast as possible.

41
00:02:20.250 --> 00:02:23.140
So if I'm making a request from Minnesota
and there's a server in Minnesota,

42
00:02:23.140 --> 00:02:25.620
I will get my image from
this server in Minnesota,

43
00:02:25.620 --> 00:02:28.230
versus going all the way to Oregon and
Virginia.

44
00:02:28.230 --> 00:02:30.938
So, that is what a CDN is and
traditionally that has been built on

45
00:02:30.938 --> 00:02:33.448
some crazy architecture that
some low level language, but

46
00:02:33.448 --> 00:02:35.040
now you can do that in JavaScript.

47
00:02:35.040 --> 00:02:38.840
You can build a CDN in JavaScript now and
it's like pretty crazy,

48
00:02:38.840 --> 00:02:40.530
because it is life changing.

49
00:02:40.530 --> 00:02:44.800
So, that right there is another example
of what you can do in JavaScript and

50
00:02:44.800 --> 00:02:45.990
things I want to talk about that,

51
00:02:45.990 --> 00:02:49.440
I'm willing to go deep on that later
because that right there is life changing.

52
00:02:49.440 --> 00:02:51.360
You can do some crazy stuff with
that that you couldn't do before.

53
00:02:53.080 --> 00:02:56.180
Sharable libraries, so again I said
the community is pretty awesome.

54
00:02:56.180 --> 00:03:00.910
And what makes the community awesome is
that people can create these libraries and

55
00:03:00.910 --> 00:03:03.290
modules and then share them with people.

56
00:03:04.320 --> 00:03:06.130
But also that can be pretty scary.

57
00:03:06.130 --> 00:03:10.260
[LAUGH] But that's what makes it
pretty awesome like, okay, cool.

58
00:03:10.260 --> 00:03:14.260
I'm gonna build this,
my tenth REST API and I'm so

59
00:03:14.260 --> 00:03:16.260
sick of having to rebuild it
from scratch every single time.

60
00:03:16.260 --> 00:03:18.927
Then like, okay cool, just go download
this one that everybody uses and

61
00:03:18.927 --> 00:03:19.943
has great documentation.

62
00:03:19.943 --> 00:03:24.739
And you're good to go and
then somebody's supporting it.

63
00:03:24.739 --> 00:03:29.194
And I've never seen so many open-source
developers just quit their job and

64
00:03:29.194 --> 00:03:32.129
make money off open-source,
then before Node.

65
00:03:32.129 --> 00:03:36.523
It just wasn't a thing, you couldn't make
money off open-source before Node came,

66
00:03:36.523 --> 00:03:40.150
it was just, you did open-source
on the side, or either consulting.

67
00:03:40.150 --> 00:03:42.830
You would create Ruby on Rails, and
then you would go consult for it.

68
00:03:42.830 --> 00:03:45.380
But no, these people just literally
fix issues all day on open-source

69
00:03:45.380 --> 00:03:47.030
that they created, and they make money.

70
00:03:47.030 --> 00:03:49.060
And that's because so
many people use these things.

71
00:03:49.060 --> 00:03:53.340
The community is reliant on these packages
that people can just make money off of

72
00:03:53.340 --> 00:03:55.140
the code that they create for free.

73
00:03:55.140 --> 00:03:58.580
And its all donation based,
it's like may people just give then money,

74
00:03:58.580 --> 00:04:02.060
like, here you go take this money,
so it's pretty legit.

75
00:04:03.290 --> 00:04:08.168
The desktop applications, so there is like
three of four different runtimes that

76
00:04:08.168 --> 00:04:12.563
are like subsets of Node that you can
use to create desktop applications.

77
00:04:12.563 --> 00:04:13.076
So Electron.

78
00:04:15.835 --> 00:04:17.971
&gt;&gt; Scott Moss: I can't even think of
the names of the other ones there are so

79
00:04:17.971 --> 00:04:18.500
many of them.

80
00:04:18.500 --> 00:04:23.200
SWJS, but they enable you to
create native desktop applications

81
00:04:23.200 --> 00:04:28.110
with web technologies and it's all powered
by Node, which is pretty fantastic.

82
00:04:28.110 --> 00:04:30.689
So again you don't have
to use cocoa pods and

83
00:04:30.689 --> 00:04:34.254
like all this stuff to build your
Mac app or your Windows app.

84
00:04:34.254 --> 00:04:36.453
You can just write it once
in JavaScript and node and

85
00:04:36.453 --> 00:04:39.175
deploy it to like all operating
systems which is pretty legit.

86
00:04:42.156 --> 00:04:47.140
&gt;&gt; Scott Moss: IOT, this is really big so
a lot of IOT devices.

87
00:04:47.140 --> 00:04:54.055
There is so many frameworks for IOT
devices that you can use JavaScript on.

88
00:04:54.055 --> 00:04:56.410
Johnny five is one of the best ones.

89
00:04:56.410 --> 00:04:57.480
Yeah, there is a course for that, yeah.

90
00:04:57.480 --> 00:04:59.711
So that's a really good one,
that's the one I use,

91
00:04:59.711 --> 00:05:02.510
real legit raspberry pie
is great with JavaScript.

92
00:05:02.510 --> 00:05:04.880
There is so
many things you can do with node and

93
00:05:04.880 --> 00:05:09.130
IOT it's ridiculous and
you can pre, it's the same thing.

94
00:05:09.130 --> 00:05:09.920
Because it is Node,

95
00:05:09.920 --> 00:05:12.440
it's gonna work the same on your
machine that it is gonna be on IOT.

96
00:05:12.440 --> 00:05:16.043
So you can pretty make whatever you
want here and get away with it.

97
00:05:16.043 --> 00:05:20.476
In fact, before all this IOT stuff
was happening, me and my son,

98
00:05:20.476 --> 00:05:23.787
we actually had a 3D printer and
we printed out.

99
00:05:23.787 --> 00:05:26.647
This box that would go on a wall,
and all it would do,

100
00:05:26.647 --> 00:05:30.885
it would just tell us if a door or a
window was open in Morgan Freeman's voice.

101
00:05:30.885 --> 00:05:35.874
[LAUGH] We made that with just Nodejs and
it took us two weeks.

102
00:05:35.874 --> 00:05:39.463
And then a week later they came
out with I was like [SOUND], okay.

103
00:05:39.463 --> 00:05:40.210
&gt;&gt; Speaker 2: What did Morgan Freeman say?

104
00:05:40.210 --> 00:05:42.863
&gt;&gt; Scott Moss: [LAUGH]
&gt;&gt; Speaker 2: The door is open.

105
00:05:42.863 --> 00:05:44.104
&gt;&gt; Scott Moss: Yeah,
like, the door is opened.

106
00:05:44.104 --> 00:05:45.689
The front door is closed.

107
00:05:45.689 --> 00:05:48.686
We did that to the best of our ability.

108
00:05:48.686 --> 00:05:53.233
We had, like, we went on Fiverr and
found somebody who imitated his voice.

109
00:05:53.233 --> 00:05:54.690
[LAUGH] I sent Adam to hit record.

110
00:05:54.690 --> 00:05:55.993
We paid him $5.00 for it.

111
00:05:55.993 --> 00:05:56.607
It was pretty cool.

112
00:05:56.607 --> 00:06:00.168
&gt;&gt; Speaker 3: [LAUGH]
&gt;&gt; Scott Moss: [LAUGH] and we did that.

113
00:06:00.168 --> 00:06:03.780
It was really cool, we designed it,
we put lights on it and everything and

114
00:06:03.780 --> 00:06:05.140
it was all powered by Node.

115
00:06:05.140 --> 00:06:10.072
So it was an awesome project.

116
00:06:10.072 --> 00:06:14.293
Yeah, pretty much anything because
Node is on everything now.

117
00:06:14.293 --> 00:06:16.687
It literally is on everything.

118
00:06:16.687 --> 00:06:21.398
You can make your microwave powered by
Nodejs if you want to and build an app for

119
00:06:21.398 --> 00:06:22.497
it if you need to.

120
00:06:22.497 --> 00:06:26.734
Mark's got this Twitter that he follows
that he sends me to, it's pretty funny.

121
00:06:26.734 --> 00:06:28.630
But they do that a lot.

122
00:06:28.630 --> 00:06:30.641
So yeah,
you can pretty much make anything.

123
00:06:30.641 --> 00:06:33.869
So, if you can convince your company to
use Node then it would enable them to do

124
00:06:33.869 --> 00:06:34.771
all sorts of things.

125
00:06:34.771 --> 00:06:38.250
And it would just make you look like a
badass, because you'd be doing all of it.

126
00:06:38.250 --> 00:06:41.181
So yeah, highly recommend doing that.

127
00:06:41.181 --> 00:06:43.182
Any other questions,
any other ideas you might have had?

128
00:06:43.182 --> 00:06:43.682
Yeah.

129
00:06:44.760 --> 00:06:48.731
&gt;&gt; Speaker 4: So, you're not looking at
other server-side languages, like PHP and

130
00:06:48.731 --> 00:06:49.260
Python.

131
00:06:49.260 --> 00:06:50.927
A lot of libraries are core,

132
00:06:50.927 --> 00:06:54.155
you don't really need to
depend on a lot of libraries.

133
00:06:54.155 --> 00:06:54.669
&gt;&gt; Scott Moss: Yeah.

134
00:06:54.669 --> 00:06:59.777
&gt;&gt; Speaker 4: What scares me sometimes is
a billion packages that came installed,

135
00:06:59.777 --> 00:07:01.810
just on load step, right?

136
00:07:01.810 --> 00:07:03.053
&gt;&gt; Scott Moss: Yeah.
&gt;&gt; Speaker 4: How reliable

137
00:07:03.053 --> 00:07:06.760
is that especially in large scale
production of applications?

138
00:07:06.760 --> 00:07:11.620
I mean do companies really use those
dependencies or do they write their own?

139
00:07:11.620 --> 00:07:14.612
&gt;&gt; Scott Moss: Yeah, so two parts of
that question and one part is, so

140
00:07:14.612 --> 00:07:15.925
the internal modules.

141
00:07:15.925 --> 00:07:19.665
So Node does have internal modules that
people use, some are like you just cannot

142
00:07:19.665 --> 00:07:23.110
live without, and you're gonna
really work with some of those.

143
00:07:23.110 --> 00:07:25.950
But it definitely doesn't get you
far right eventually you need to

144
00:07:25.950 --> 00:07:26.460
do something else.

145
00:07:26.460 --> 00:07:30.750
So you do have to rely on a community and
you're right, it is pretty scary and

146
00:07:30.750 --> 00:07:33.360
to answer that like how reliable is it?

147
00:07:33.360 --> 00:07:39.240
It depends on who made it because there's
like node isn't doing anything to check.

148
00:07:39.240 --> 00:07:41.340
There's code to make sure
it's not malicious, so

149
00:07:41.340 --> 00:07:43.090
it will be up to you in the community.

150
00:07:43.090 --> 00:07:44.990
So there's just some things and

151
00:07:44.990 --> 00:07:47.610
I'll show you how to figure
out what modules to download.

152
00:07:47.610 --> 00:07:49.780
There's just some steps that you
have to go through to make sure that

153
00:07:49.780 --> 00:07:51.130
you're not getting something that's bad.

154
00:07:51.130 --> 00:07:54.820
And that's kind of why I wasn't able to
just go look at source code all the time.

155
00:07:54.820 --> 00:07:57.525
So I'm pretty sure, like,
this is happening, this is happening.

156
00:07:57.525 --> 00:07:59.516
But at the end of the day,
what I found out is that,

157
00:07:59.516 --> 00:08:01.994
if there's tons of people in
the community using something.

158
00:08:01.994 --> 00:08:06.184
And there's a healthy GitHub repo for
this project, there's tons of issues that

159
00:08:06.184 --> 00:08:10.800
are being closed, there's been activity in
the last week, there's really good stars,

160
00:08:10.800 --> 00:08:15.050
there's really good companies using it,
chances are it's pretty legit.

161
00:08:15.050 --> 00:08:17.980
But if you're downloading something
from three years ago that was created by

162
00:08:17.980 --> 00:08:21.540
someone who deleted their GitHub
account and it's like nothing on there,

163
00:08:21.540 --> 00:08:23.530
like probably not.

164
00:08:23.530 --> 00:08:27.050
So it really depends on like,
it's a case by case basis, and

165
00:08:27.050 --> 00:08:28.350
big companies do use this.

166
00:08:28.350 --> 00:08:31.910
I've worked with huge companies, like
some of the top companies in the world,

167
00:08:31.910 --> 00:08:34.610
and yeah they'll just get on there and
NPM install stuff.

168
00:08:34.610 --> 00:08:36.830
Where as other companies won't,
other companies won't do that and

169
00:08:36.830 --> 00:08:39.150
they have to go through
every single module.

170
00:08:39.150 --> 00:08:42.080
To check to make sure it's
got the right license on it,

171
00:08:42.080 --> 00:08:44.930
they're not competing and stuff like that.

172
00:08:44.930 --> 00:08:48.970
But at the end of the day, everybody
seems to be open to the idea of exploring

173
00:08:48.970 --> 00:08:51.570
modules created by
the community in some way.

174
00:08:51.570 --> 00:08:54.090
And like I said, they might have some
process in how they actually get in their

175
00:08:54.090 --> 00:08:56.550
app, but yeah, it's a pretty common thing.

176
00:08:56.550 --> 00:08:59.855
I haven't worked with or
seen a company that,

177
00:08:59.855 --> 00:09:03.766
only makes their own things ever,
I haven't seen it.

178
00:09:03.766 --> 00:09:09.586
I could imagine that sucking really bad,
so yeah.

179
00:09:09.586 --> 00:09:10.342
Any other questions?

180
00:09:13.450 --> 00:09:14.703
&gt;&gt; Scott Moss: We got one, Daniel?

181
00:09:14.703 --> 00:09:18.538
&gt;&gt; Speaker 5: Will a company sort of
maybe fork, if they're like, okay,

182
00:09:18.538 --> 00:09:19.752
this works to now.

183
00:09:19.752 --> 00:09:21.680
I did npm install, it worked now.

184
00:09:21.680 --> 00:09:23.345
But I don't want to be responsible for

185
00:09:23.345 --> 00:09:26.780
whatever weird changes this person
is gonna do to this library.

186
00:09:26.780 --> 00:09:31.525
I'm gonna fork it and now we're just gonna
have our own copy of like express or

187
00:09:31.525 --> 00:09:33.139
whatever the case may be.

188
00:09:33.139 --> 00:09:35.680
&gt;&gt; Scott Moss: Yeah, there's many
ways to do that, so forking is one.

189
00:09:35.680 --> 00:09:38.570
So people will fork it
when not only do they want

190
00:09:38.570 --> 00:09:41.520
to not have future changes and bugs.

191
00:09:41.520 --> 00:09:44.010
But because they wanna add
additions to themselves, so

192
00:09:44.010 --> 00:09:44.950
that's when you would fork it.

193
00:09:44.950 --> 00:09:48.520
But if you just want to be
excluded from any future changes,

194
00:09:48.520 --> 00:09:51.060
then the package manager would
actually handle that for you.

195
00:09:51.060 --> 00:09:54.020
You would just tell the package manager,
don't download any other versions,

196
00:09:54.020 --> 00:09:55.450
lock it to this version.

197
00:09:55.450 --> 00:09:57.420
And there's a thousand
ways to lock a version.

198
00:09:57.420 --> 00:10:00.700
So yeah, that really pays,
I find myself forking stuff all the time.

199
00:10:00.700 --> 00:10:05.150
In fact I'm at the point now of when I go
create a new module I almost don't need to

200
00:10:05.150 --> 00:10:05.850
start it from scratch.

201
00:10:05.850 --> 00:10:09.960
I'll go find something that already like
started it and like nobody finished it.

202
00:10:09.960 --> 00:10:12.030
And I'll be like this person started and
kind of gave up on it.

203
00:10:12.030 --> 00:10:14.530
So I'm gonna take what they had and
I'm gonna finish it or

204
00:10:14.530 --> 00:10:16.590
I'll take the idea that they had and
I'm gonna finish it.

205
00:10:16.590 --> 00:10:22.180
So I'll do that a lot to get things going
so yeah that is a very, very common thing.

206
00:10:22.180 --> 00:10:23.960
In fact, that's what happened to node.

207
00:10:25.010 --> 00:10:28.640
Somebody forked node,
and it was a big deal.

208
00:10:28.640 --> 00:10:31.007
Yeah, we can talk about that later,
but yeah.

209
00:10:31.007 --> 00:10:34.070
Luckily because of all that
drama node is even better now.

210
00:10:34.070 --> 00:10:36.063
But before that it was like [SOUND].

211
00:10:36.063 --> 00:10:37.410
Now it's like, okay, it's amazing.

212
00:10:37.410 --> 00:10:41.863
And that's because somebody pushed their
hand and forked it and scared everybody.

213
00:10:41.863 --> 00:10:43.170
So that was pretty awesome.

