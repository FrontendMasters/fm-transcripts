WEBVTT

1
00:00:00.000 --> 00:00:02.830
&gt;&gt; Scott Moss: So
now we're gonna talk about NPM.

2
00:00:02.830 --> 00:00:05.300
Nobody really knows what NPM stands for,
I mean you can google it but

3
00:00:05.300 --> 00:00:07.280
it's just node package manager.

4
00:00:07.280 --> 00:00:10.340
But you ask somebody else and it's like
no, i not, it's not node package manager.

5
00:00:10.340 --> 00:00:14.560
It's like a troll, it's like something
else like, its node package manager and

6
00:00:14.560 --> 00:00:16.410
that's what's doing.

7
00:00:16.410 --> 00:00:19.190
But basically it's a CLI
to manage remote modules.

8
00:00:19.190 --> 00:00:21.780
It's that thing that I said we needed.

9
00:00:21.780 --> 00:00:22.590
It ships with Node.

10
00:00:22.590 --> 00:00:23.420
So you all have it.

11
00:00:23.420 --> 00:00:27.412
So if you go to your terminal right
now and type NPM, or which NPM,

12
00:00:27.412 --> 00:00:28.890
you'll see that.

13
00:00:28.890 --> 00:00:30.561
You'll get that NPM.

14
00:00:30.561 --> 00:00:34.250
If you installed it with NVM,
you'll see it's an NVM version.

15
00:00:34.250 --> 00:00:37.050
If you installed Node the other way,
it'll be there, but you'll have it.

16
00:00:37.050 --> 00:00:41.178
You can also type NPM version,
or not versions.

17
00:00:41.178 --> 00:00:44.221
What version?

18
00:00:44.221 --> 00:00:45.510
Version.

19
00:00:45.510 --> 00:00:46.270
There we go.

20
00:00:46.270 --> 00:00:50.094
I have 6.20, which is the latest.

21
00:00:50.094 --> 00:00:50.849
NPM is a company.

22
00:00:50.849 --> 00:00:53.030
They have nothing to do with Node.

23
00:00:53.030 --> 00:00:55.432
But [LAUGH] Node ships with NPM.

24
00:00:55.432 --> 00:00:56.046
How did that happen?

25
00:00:56.046 --> 00:00:57.340
I don't really know.

26
00:00:57.340 --> 00:00:58.660
But they're a company in the Bay Area.

27
00:00:58.660 --> 00:01:03.690
And they're basically a remote
repository of modules, that's it.

28
00:01:03.690 --> 00:01:07.100
They're a repository full of modules and
a tool to help manage them.

29
00:01:07.100 --> 00:01:08.920
That's basically it.

30
00:01:08.920 --> 00:01:10.250
It ships with Node.

31
00:01:10.250 --> 00:01:13.610
It allows you to publish,
download, and update modules.

32
00:01:13.610 --> 00:01:15.250
So if I have a module
that I'm creating and

33
00:01:15.250 --> 00:01:18.030
I wanted to export it to world,
I could publish it with NPM.

34
00:01:18.030 --> 00:01:21.583
If I want to download a module for
my app, I can download and install it.

35
00:01:21.583 --> 00:01:24.530
If I wanted to update modules and
their versions, I could update them.

36
00:01:24.530 --> 00:01:25.820
That's what NPM's job is.

37
00:01:25.820 --> 00:01:26.665
It is not like Git.

38
00:01:26.665 --> 00:01:27.475
You might be thinking,
why does that sound like Git?

39
00:01:27.475 --> 00:01:29.800
Why don't we just put
this stuff on GitHub?

40
00:01:29.800 --> 00:01:32.453
It's not.
You still put this code on GitHub, but

41
00:01:32.453 --> 00:01:34.954
the versions and things that you release,

42
00:01:34.954 --> 00:01:38.027
and the access to those things,
are gonna be on NPM.

43
00:01:38.027 --> 00:01:41.735
And that's because GitHub has no
idea about how a package.json works,

44
00:01:41.735 --> 00:01:45.710
which we'll talk about in a little bit,
or how the Node module folder works.

45
00:01:45.710 --> 00:01:47.870
It doesn't know anything about that,
although it could.

46
00:01:47.870 --> 00:01:49.470
There's nothing stopping
GitHub from doing that.

47
00:01:49.470 --> 00:01:50.810
That's just not their job.

48
00:01:50.810 --> 00:01:55.510
That's NPM's job, and it hooks into Node
specifically, in its environment and

49
00:01:55.510 --> 00:01:56.460
its runtime.

50
00:01:56.460 --> 00:01:58.780
So you still have to host
these things on GitHub, but

51
00:01:58.780 --> 00:02:00.419
then you also release them to NPM.

52
00:02:01.980 --> 00:02:05.580
So the live code, the latest code is
always on GitHub, and all the development

53
00:02:05.580 --> 00:02:10.750
stuff, but whenever you cut a release for
version two, you also push out to NPM.

54
00:02:10.750 --> 00:02:14.530
So people can download from NPM versus
having to download from GitHub, and

55
00:02:14.530 --> 00:02:15.690
it gets more confusing.

56
00:02:15.690 --> 00:02:18.380
You can also use NPM to
download code from GitHub.

57
00:02:18.380 --> 00:02:19.170
Yeah, it's kinda confusing.

58
00:02:19.170 --> 00:02:23.099
You can point to any repository
that you want, whether it's NPM,

59
00:02:23.099 --> 00:02:27.397
whether it's yarn, whether it's
GitHub is a lot of different things.

60
00:02:27.397 --> 00:02:31.754
But NPM is the main one where you publish
your modules and how you can search for

61
00:02:31.754 --> 00:02:33.240
them and stuff like that.

62
00:02:33.240 --> 00:02:37.350
So if you go to npmjs.org,
you might have seen this logo before.

63
00:02:38.440 --> 00:02:39.583
That's the NPM logo.

64
00:02:39.583 --> 00:02:42.385
All right, that's what this is so
I can search for

65
00:02:42.385 --> 00:02:44.334
a package the first if I type in FS.

66
00:02:44.334 --> 00:02:47.810
Look at this see somebody
made one called fs.

67
00:02:47.810 --> 00:02:49.990
And you can see published two years ago.

68
00:02:49.990 --> 00:02:51.950
Yeah, keywords non, like this.

69
00:02:51.950 --> 00:02:52.840
There's no read me.

70
00:02:52.840 --> 00:02:53.952
There's nothing on here.

71
00:02:53.952 --> 00:02:57.640
It even says this package name is not
currently in use was but firmly copy.

72
00:02:57.640 --> 00:02:59.800
So this is like bad you
would not use this.

73
00:02:59.800 --> 00:03:02.360
But if you want to see what a good
module look like you might type in

74
00:03:02.360 --> 00:03:03.880
something like react.

75
00:03:03.880 --> 00:03:06.780
And you would see like, okay,
is this a really good one?

76
00:03:06.780 --> 00:03:07.280
Okay.

77
00:03:09.723 --> 00:03:10.327
&gt;&gt; Scott Moss: Two hours ago.

78
00:03:10.327 --> 00:03:11.710
Yeah, that's pretty active.

79
00:03:11.710 --> 00:03:13.140
Collaborators.

80
00:03:13.140 --> 00:03:15.500
That's a big one.

81
00:03:15.500 --> 00:03:16.800
Yeah, it seems pretty legit.

82
00:03:16.800 --> 00:03:17.700
How many downloads?

83
00:03:17.700 --> 00:03:19.020
2.8 million in a week.

84
00:03:19.020 --> 00:03:23.840
Yeah, I think this is a pretty good
package right, how do I install it?

85
00:03:23.840 --> 00:03:27.300
Just type in NPM i react,
we'll talk about that in a little bit, but

86
00:03:27.300 --> 00:03:29.266
that the name of the package, React.

87
00:03:29.266 --> 00:03:32.362
And then you can go follow onto there
GitHub and you can kind of see like,

88
00:03:32.362 --> 00:03:35.200
I''m going to look at there
GitHub to see if they're legit.

89
00:03:35.200 --> 00:03:36.413
How many released do they have?

90
00:03:36.413 --> 00:03:38.350
That's a lot of comments here.

91
00:03:38.350 --> 00:03:39.742
When was it update last?

92
00:03:39.742 --> 00:03:41.570
Two hours ago, confirm that.

93
00:03:41.570 --> 00:03:43.670
And here's the full ReadMe and
documentation.

94
00:03:43.670 --> 00:03:46.240
So this is how you have to look at your
modules to make sure they're legit.

95
00:03:46.240 --> 00:03:48.130
There's literally no other way.

96
00:03:48.130 --> 00:03:51.840
There's tools that are just now
starting to come out that will

97
00:03:51.840 --> 00:03:54.780
warn you of a vulnerabilities
inside of other modules.

98
00:03:54.780 --> 00:03:58.750
Because if one module has a vulnerability
and then you are using a module,

99
00:03:58.750 --> 00:04:01.610
that uses a module, that uses a module
that uses that vulnerable one,

100
00:04:01.610 --> 00:04:03.070
a tool will alert you about it.

101
00:04:03.070 --> 00:04:06.410
Like, this one module way down
there that you have never seen,

102
00:04:06.410 --> 00:04:09.900
that a dependency of your dependency
of your dependency is poison.

103
00:04:09.900 --> 00:04:12.961
You should change your stuff,
revert to this version and

104
00:04:12.961 --> 00:04:15.076
there's tools to help you do that now.

105
00:04:15.076 --> 00:04:16.646
It's the only help you got.

106
00:04:16.646 --> 00:04:19.230
[LAUGH] Other than like looking.

107
00:04:19.230 --> 00:04:24.063
It sounds bad and it is that bad but

108
00:04:24.063 --> 00:04:27.000
it's not that bad.

109
00:04:27.000 --> 00:04:28.090
[LAUGH] It's not a big deal.

110
00:04:28.090 --> 00:04:29.700
People just download the modules and
they use them.

111
00:04:29.700 --> 00:04:31.480
Like it's just do your due diligence.

112
00:04:31.480 --> 00:04:35.204
What I'm saying you don't have to spend
a week looking at every single module in

113
00:04:35.204 --> 00:04:38.900
your node modules folder and
like, you don't have to do that.

114
00:04:38.900 --> 00:04:40.820
If you want to, for sure.

115
00:04:40.820 --> 00:04:43.280
But you don't have to do that.

116
00:04:43.280 --> 00:04:45.440
Just look for the bad apples.

117
00:04:45.440 --> 00:04:46.423
And you know it's bad.

118
00:04:46.423 --> 00:04:48.870
There's just some bad
stuff on the internet.

119
00:04:48.870 --> 00:04:49.640
It just won't look right.

120
00:04:50.960 --> 00:04:51.794
Okay, cool so that's NPM.

121
00:04:51.794 --> 00:04:53.730
That's how you search for things.

122
00:04:54.920 --> 00:04:56.730
And if we get back to.

123
00:04:59.420 --> 00:05:03.910
Yeah, so you do all that stuff on NPM.

124
00:05:03.910 --> 00:05:06.100
And NPM uses what's called a package.json.

125
00:05:06.100 --> 00:05:08.840
So if you open up the repo,
you might notice a file and

126
00:05:08.840 --> 00:05:10.630
a root called package.json.

127
00:05:10.630 --> 00:05:13.389
If you haven't seen that
it looks like this.

128
00:05:17.440 --> 00:05:20.590
Looks something like this, so it's a JSON
file, and it's got some stuff like this.

129
00:05:22.090 --> 00:05:25.760
And there's all these fills on here,
and there's way more fills on this, but

130
00:05:25.760 --> 00:05:27.703
this is just the scaffolded out stuff.

131
00:05:27.703 --> 00:05:28.936
You'll see a name.

132
00:05:28.936 --> 00:05:31.440
That name is the name of your module.

133
00:05:31.440 --> 00:05:34.750
You didn't package it and bundle it
to the internet yet, but the name is

134
00:05:34.750 --> 00:05:37.540
by default is going to be the name of
the folder when you scaffold this out.

135
00:05:37.540 --> 00:05:40.190
So this is then the name of
this module's Intro to NodeJS.

136
00:05:40.190 --> 00:05:44.920
So if I push this up to NPM, and
you want us to install this, you would NPM

137
00:05:44.920 --> 00:05:49.340
install Intro to NodeJS and this is what
you would get if I packaged it correctly.

138
00:05:49.340 --> 00:05:51.340
Here is the version of it.

139
00:05:51.340 --> 00:05:54.580
The main file that we talked
about modules being a tree and

140
00:05:54.580 --> 00:05:56.440
there is usually an entry file somewhere.

141
00:05:56.440 --> 00:05:57.870
This is the entry file to this app.

142
00:05:57.870 --> 00:06:00.170
So I am saying hey this is
the entry file to this app.

143
00:06:00.170 --> 00:06:02.134
So if someone where to require this.

144
00:06:02.134 --> 00:06:05.530
If someone said require intro to NodeJS,
this is the file they would do.

145
00:06:06.770 --> 00:06:07.990
And that file has a dependencies and

146
00:06:07.990 --> 00:06:10.890
that file has dependencies and
go for it and go for it.

147
00:06:10.890 --> 00:06:13.303
All this other stuff like licenses,
not that important.

148
00:06:13.303 --> 00:06:16.990
And then you this thing called dev
dependencies and dependencies.

149
00:06:16.990 --> 00:06:21.160
These are lists of dependency
instructions for your app.

150
00:06:21.160 --> 00:06:24.370
If your app has a dependency
on these things,

151
00:06:25.400 --> 00:06:28.410
now NPM knows what to
install when you tell it to.

152
00:06:28.410 --> 00:06:32.400
So If you and I are working on
an application together and you installed

153
00:06:32.400 --> 00:06:36.010
a whole bunch of dependencies from NPM,
how would I know that you did it?

154
00:06:36.010 --> 00:06:38.380
Well, NPM saves them to this file.

155
00:06:38.380 --> 00:06:40.306
That way you don't have to
check in the modules to Git.

156
00:06:40.306 --> 00:06:43.387
Because that would suck if you had to
check in every single module that you

157
00:06:43.387 --> 00:06:44.280
downloaded to Git.

158
00:06:44.280 --> 00:06:44.950
It's kinda bad.

159
00:06:44.950 --> 00:06:45.790
You really don't want to do that.

160
00:06:45.790 --> 00:06:47.180
It's not the practice people use.

161
00:06:47.180 --> 00:06:49.560
There's an argument saying
that you should do it.

162
00:06:49.560 --> 00:06:50.960
But for now, you just don't do that.

163
00:06:50.960 --> 00:06:52.600
You don't check in your
downloaded modules.

164
00:06:52.600 --> 00:06:56.320
You just check in the list of
modules that you need to install.

165
00:06:56.320 --> 00:07:01.150
The machine who is running that code,
it's responsible to install those modules,

166
00:07:01.150 --> 00:07:03.710
which is what you did
when you ran npx jest.

167
00:07:03.710 --> 00:07:06.680
When you ran npx jest, it installed
all these modules every single time,

168
00:07:06.680 --> 00:07:09.970
because I didn't package those modules on
git, because I didn't want that to happen.

169
00:07:09.970 --> 00:07:11.740
I wanted you to freshly install them.

170
00:07:11.740 --> 00:07:13.801
Cuz you have to because they
might be different versions,

171
00:07:13.801 --> 00:07:16.322
they might have some post set up
instructions that need to happen on your

172
00:07:16.322 --> 00:07:17.514
computer when you install them.

173
00:07:17.514 --> 00:07:20.530
And there's just so much to check
in a git that's not our code.

174
00:07:20.530 --> 00:07:24.200
Could you imagine checking all that
code in to git when you only made like

175
00:07:24.200 --> 00:07:27.640
one line change but you added 30 modules,
what the code review would look like?

176
00:07:27.640 --> 00:07:28.380
It would be ridiculous.

177
00:07:28.380 --> 00:07:30.990
Look at all this code that's not
even ours that we have to look at.

178
00:07:30.990 --> 00:07:31.940
This is ridiculous.

179
00:07:31.940 --> 00:07:37.190
If one thing changes, you gotta to rebase
or something it's just ridiculous.

180
00:07:37.190 --> 00:07:39.880
So you don't just want to manually enter
other people's code and your gits.

181
00:07:39.880 --> 00:07:41.690
So you just don't check
in the remote modules,

182
00:07:41.690 --> 00:07:44.460
just instructions to what versions
they are, what names they are.

183
00:07:44.460 --> 00:07:46.760
And you just install them freshly again.

184
00:07:46.760 --> 00:07:49.863
So that's what dependencies and
dev dependencies are.

185
00:07:49.863 --> 00:07:53.170
Yeah, so that's where the package.json is.

186
00:07:53.170 --> 00:07:54.890
NPM uses that to determine and

187
00:07:54.890 --> 00:07:58.970
save instructions on what
dependencies to save and download.

188
00:07:58.970 --> 00:08:01.740
And what the name of the package is and
what version it is, and so

189
00:08:01.740 --> 00:08:07.430
all the meta information for
a module that needs to be public.

190
00:08:07.430 --> 00:08:10.090
So it is stores remote modules
in the node modules folder.

191
00:08:10.090 --> 00:08:13.620
So again, if you looked in that project
you might have seen something like

192
00:08:13.620 --> 00:08:14.950
node underscore modules.

193
00:08:14.950 --> 00:08:16.320
I didn't make that.

194
00:08:16.320 --> 00:08:17.770
NPM made that.

195
00:08:17.770 --> 00:08:22.671
Whatever you install a module remotely,
like for instance if I type in NPM.

196
00:08:22.671 --> 00:08:29.680
Install,
&gt;&gt; Scott Moss: Lodash.

197
00:08:29.680 --> 00:08:30.350
What's happening is,

198
00:08:30.350 --> 00:08:33.640
I used to NPM command,
I used the command called install.

199
00:08:33.640 --> 00:08:36.983
Sometimes on the Internet you'll see i for
short, which is short of install, so

200
00:08:36.983 --> 00:08:37.682
it's the NPM i.

201
00:08:37.682 --> 00:08:40.460
And then the name of the package,
that's it.

202
00:08:40.460 --> 00:08:42.871
Now this is what you might have
seen when you were running npx.js.

203
00:08:42.871 --> 00:08:45.160
It was doing something like this, right?

204
00:08:45.160 --> 00:08:48.310
That's because every single time you
ran that command, it was installing

205
00:08:48.310 --> 00:08:51.480
the modules over and over again,
cuz it never saved them to disk.

206
00:08:51.480 --> 00:08:54.050
It's just random in memory,
just to run this test once.

207
00:08:54.050 --> 00:08:55.760
That's why I have to do it every time.

208
00:08:55.760 --> 00:08:59.000
If you use NPM install,
it will save onto disc and you're good.

209
00:08:59.000 --> 00:09:02.000
So right now, I'm telling it to install
a module called lodash which is a very

210
00:09:02.000 --> 00:09:05.150
helpful library if you never used it,
super helpful.

211
00:09:05.150 --> 00:09:06.730
And it's downloading it.

212
00:09:06.730 --> 00:09:12.647
It's going to the internet and these are
all the other packages that it depends on.

213
00:09:12.647 --> 00:09:14.720
And the packages that
those things depend on.

214
00:09:14.720 --> 00:09:16.880
And the packages that
those things depend on.

215
00:09:16.880 --> 00:09:17.990
And it's just getting all of it.

216
00:09:17.990 --> 00:09:20.669
Just for one,
that's how many packages it is.

217
00:09:20.669 --> 00:09:25.961
So imagine if your app had I don't know,
a big app might have like 50 node modules

218
00:09:25.961 --> 00:09:30.890
that you explicitly install each one
of those had like 100 node modules.

219
00:09:30.890 --> 00:09:33.120
You'd have so many node modules.

220
00:09:33.120 --> 00:09:35.880
That's why you don't check it into git,
it's ridiculous.

221
00:09:35.880 --> 00:09:36.409
Yes?

222
00:09:36.409 --> 00:09:38.530
&gt;&gt; Speaker 2: It sounds bad, is this bad?

223
00:09:38.530 --> 00:09:40.857
&gt;&gt; Scott Moss: It does sound bad,
it does sound bad.

224
00:09:40.857 --> 00:09:42.150
No, it's not bad.

225
00:09:42.150 --> 00:09:46.902
[LAUGH] It is bad, but it's not bad.

226
00:09:46.902 --> 00:09:49.193
Everybody knows it's a problem.

227
00:09:49.193 --> 00:09:54.089
So it's bad as in anybody can take
advantage of this and destroy everybody,

228
00:09:54.089 --> 00:09:55.540
and they have.

229
00:09:55.540 --> 00:09:58.866
People in the past have taken
advantage of this system and

230
00:09:58.866 --> 00:10:00.745
caused chaos in the community.

231
00:10:00.745 --> 00:10:05.260
I mean, just Google something called
left pad and tell me what you find.

232
00:10:05.260 --> 00:10:08.906
It's just been chaos, but
those are a few bad apples.

233
00:10:08.906 --> 00:10:12.410
The good news is, people are fixing this.

234
00:10:12.410 --> 00:10:18.176
There are other tools that
are working around these problems.

235
00:10:18.176 --> 00:10:19.820
And the first thing.
NPM is one of them.

236
00:10:19.820 --> 00:10:21.030
Actually NPM is doing a lot better.

237
00:10:21.030 --> 00:10:23.100
Before this, NPM was really bad,
I would never use it.

238
00:10:23.100 --> 00:10:24.970
Now I'm actually considering
using NPM again.

239
00:10:24.970 --> 00:10:27.095
I don't use NPM.
I use something else and

240
00:10:27.095 --> 00:10:30.070
I'm going to talk about what it is.

241
00:10:30.070 --> 00:10:33.540
But it is bad if you take advantage of it,
but it's not bad.

242
00:10:33.540 --> 00:10:34.710
I mean, so is the browser.

243
00:10:34.710 --> 00:10:36.170
The browser's bad if you
take advantage of it.

244
00:10:36.170 --> 00:10:41.480
I mean I could give you a website with
an HTTP lock on, HTTPS, It looks nice.

245
00:10:41.480 --> 00:10:43.040
But really I'm just mining crypto.

246
00:10:43.040 --> 00:10:44.730
So like it is but

247
00:10:44.730 --> 00:10:46.800
it's not it really depends on
somebody takes advantage or not.

248
00:10:46.800 --> 00:10:49.910
So yeah, it's not that bad.

249
00:10:49.910 --> 00:10:51.020
Just don't be so trusting.

250
00:10:54.080 --> 00:10:54.960
Cool.

251
00:10:54.960 --> 00:11:00.240
So yeah, it installed it and then if
I go look in my Node modules folder.

252
00:11:01.380 --> 00:11:05.906
I'll see a few things,
so node_modules/lodash.

253
00:11:05.906 --> 00:11:09.000
Or I'll just do ls node_modules.

254
00:11:09.000 --> 00:11:09.864
There's a lot of stuff here.

255
00:11:09.864 --> 00:11:11.620
Look at all these modules inside.

256
00:11:11.620 --> 00:11:14.390
I didn't install half these modules,
more than half.

257
00:11:14.390 --> 00:11:18.680
But these are modules of modules,
so lodash would be here.

258
00:11:19.920 --> 00:11:21.080
So there's the module that I installed,
lodash.

259
00:11:21.080 --> 00:11:23.280
But all this other stuff
comes with everything else.

260
00:11:23.280 --> 00:11:26.837
Look, there's left pad, that's in there.

261
00:11:26.837 --> 00:11:28.470
God, left pad.

262
00:11:28.470 --> 00:11:30.750
So lodash got installed.

263
00:11:30.750 --> 00:11:33.957
The problem was if I go start
looking at package.json though.

264
00:11:33.957 --> 00:11:37.125
Okay, so by default,
if you just installed something,

265
00:11:37.125 --> 00:11:39.840
it won't go into the package.json.

266
00:11:39.840 --> 00:11:43.140
Which is a problem because,
when someone else pulls down your app and

267
00:11:43.140 --> 00:11:47.360
then they go install everything, it won't
install the modules that you installed.

268
00:11:47.360 --> 00:11:51.350
So you have to tell NPM to say, hey, not
only do I want to install this package,

269
00:11:51.350 --> 00:11:54.870
but I want to save it in the package.json,
so people can install it later.

270
00:11:54.870 --> 00:11:59.694
So what you would normally do is say, NPM
install, and then you would say --save.

271
00:12:00.760 --> 00:12:06.040
Save that in the package.json too.

272
00:12:06.040 --> 00:12:07.200
And that way it gets saved.

273
00:12:07.200 --> 00:12:08.170
Mine was already saved, though.

274
00:12:08.170 --> 00:12:11.641
So now that's there, it'll put
the version in there, it will save it and

275
00:12:11.641 --> 00:12:15.959
now when you pull this app down and
you run nPM install you'll be good to go.

276
00:12:17.410 --> 00:12:19.210
So that's how you install a single module.

277
00:12:19.210 --> 00:12:21.600
Now, how do you install
all of the modules?

278
00:12:21.600 --> 00:12:24.250
If you just pull down this repo from
scratch, how do you get all of the modules

279
00:12:24.250 --> 00:12:26.280
so you don't have to do
that npx js stuff anymore?

280
00:12:26.280 --> 00:12:28.850
You just type in NPM install.

281
00:12:28.850 --> 00:12:29.940
You just do this one time,

282
00:12:29.940 --> 00:12:33.870
it will look at the package.json and
install everything that is there.

283
00:12:33.870 --> 00:12:34.370
Then you're good.

284
00:12:35.950 --> 00:12:38.170
Looks like NPM's already checking for
vulnerabilities, see?

285
00:12:38.170 --> 00:12:41.340
They're getting better, they're getting
better, this is new, this is new stuff,

286
00:12:41.340 --> 00:12:43.540
they didn't do this three months ago.

287
00:12:43.540 --> 00:12:47.080
So they're checking for
vulnerabilities now, that's awesome.

288
00:12:47.080 --> 00:12:48.202
So it's getting better.

289
00:12:48.202 --> 00:12:50.592
So yeah, that's how you install
everything at package.json,

290
00:12:50.592 --> 00:12:53.710
that's how you install one module,
that's how you save it.

291
00:12:53.710 --> 00:12:58.680
And everything goes into the nodes module
folder and you don't check that into git.

292
00:12:58.680 --> 00:13:01.390
Just do not check the node
modules folder into git.

293
00:13:01.390 --> 00:13:02.980
Put it in your git ignore, don't do it.

294
00:13:05.460 --> 00:13:08.510
And then yet
NPM does a whole bunch of other stuff,

295
00:13:08.510 --> 00:13:13.260
aliasing, just so many other things.

296
00:13:13.260 --> 00:13:17.630
But 90% of the stuff you do with
NPMs is gonna be NPM install,

297
00:13:19.200 --> 00:13:22.690
NPM uninstall, that's about it.

298
00:13:22.690 --> 00:13:25.620
If you're publishing packages, which most
people don't really publish packages, but

299
00:13:25.620 --> 00:13:27.660
if you do then you'll use
it to publish packages.

300
00:13:27.660 --> 00:13:29.550
But eventually you'll get really
good at publishing packages and

301
00:13:29.550 --> 00:13:30.660
you don't wanna do that manually.

302
00:13:30.660 --> 00:13:33.760
So you'll have a bot do it for
you in like a CI environment.

303
00:13:33.760 --> 00:13:36.580
Or you'll have some automation tool
that you built that'll do it for you so

304
00:13:36.580 --> 00:13:38.910
you don't have to do it,
because that just gets really annoying.

305
00:13:38.910 --> 00:13:42.420
Especially when you get into
versioning and SemVer and patterns,

306
00:13:42.420 --> 00:13:43.650
you don't wanna do all that stuff.

307
00:13:43.650 --> 00:13:48.000
Change logs, releases, so
you have something do that for you.

308
00:13:48.000 --> 00:13:50.180
So you don't have to manually
go in there and do it,

309
00:13:50.180 --> 00:13:51.824
cuz it's really annoying to do that.

310
00:13:51.824 --> 00:13:55.700
But yeah, most of the time this is
gonna be install and uninstall.

