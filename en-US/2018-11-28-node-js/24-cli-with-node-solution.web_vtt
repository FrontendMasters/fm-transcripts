WEBVTT

1
00:00:00.110 --> 00:00:03.910
&gt;&gt; Speaker 1: I hope everyone had
a chance to create their first CLI.

2
00:00:03.910 --> 00:00:08.820
Hopefully if it was your first CLI,
congrats, you experience some power and

3
00:00:08.820 --> 00:00:12.810
just back in or system related program or
languages in general.

4
00:00:12.810 --> 00:00:16.500
And I didn't just know
anything like Python, PHP.

5
00:00:16.500 --> 00:00:19.690
Anything not related to mobile or web.

6
00:00:19.690 --> 00:00:21.070
This is what they can go.

7
00:00:21.070 --> 00:00:24.460
What's so special about this though is
that you did it in JavaScript which a lot

8
00:00:24.460 --> 00:00:26.260
of people just thought
it couldn't be done.

9
00:00:26.260 --> 00:00:29.260
So I remember when I created my first
CLI that's when it clicked for me and

10
00:00:29.260 --> 00:00:32.240
I was like, okay I can pretty
much do whatever I want here.

11
00:00:32.240 --> 00:00:36.740
Like, I own everything now so
that was really fun.

12
00:00:36.740 --> 00:00:38.260
So let's walk through this solution.

13
00:00:38.260 --> 00:00:41.920
So there were a couple things,
a lot of moving pieces here,

14
00:00:41.920 --> 00:00:44.490
a lot of things this literally whole
file I'll say don't even worry about it.

15
00:00:44.490 --> 00:00:46.850
I'm sure everyone wholooked
at it anyway was like.

16
00:00:46.850 --> 00:00:48.740
What is this, how's this working?

17
00:00:48.740 --> 00:00:50.440
We can talk a little bit
about what that is but

18
00:00:50.440 --> 00:00:53.520
I don't wanna go on too specific
about a package that's on internet.

19
00:00:53.520 --> 00:00:56.370
That probably has better
documentation than what I can say.

20
00:00:56.370 --> 00:01:00.670
But so let's just get started, so you
probably have like a contacts file here.

21
00:01:00.670 --> 00:01:02.420
It's just a JSON file and

22
00:01:02.420 --> 00:01:06.970
it's just an object with contexts where
the key, you can't tell by this, but

23
00:01:06.970 --> 00:01:11.050
it's first name last name as the key and
then you have all this other stuff.

24
00:01:11.050 --> 00:01:13.750
So what you would have to do is one,

25
00:01:13.750 --> 00:01:17.770
if you take a look at nxjs
you even get a hint in here.

26
00:01:17.770 --> 00:01:20.070
Install any missing modules.

27
00:01:20.070 --> 00:01:22.500
How do you know a module is missing?

28
00:01:22.500 --> 00:01:25.570
Well, you can just try to install it and
if it's already installed,

29
00:01:25.570 --> 00:01:26.690
it won't install it again.

30
00:01:26.690 --> 00:01:27.490
So you're fine.

31
00:01:27.490 --> 00:01:28.710
There's no double work there.

32
00:01:28.710 --> 00:01:30.850
It's not going to install it twice.

33
00:01:30.850 --> 00:01:33.280
You can install it and even if you
already have it, there's no problem.

34
00:01:33.280 --> 00:01:35.470
But if you want to verify there's
a couple of things you can do.

35
00:01:35.470 --> 00:01:36.310
For one, look at the tag.

36
00:01:36.310 --> 00:01:37.700
Is that JSON?

37
00:01:37.700 --> 00:01:38.720
Do you see in the tag?

38
00:01:38.720 --> 00:01:41.030
Is that JSON underneath
of the dependencies?

39
00:01:41.030 --> 00:01:42.708
No, I don't see.

40
00:01:44.180 --> 00:01:48.360
&gt;&gt; Speaker 1: I don't see commander and
inquirer in package.json.

41
00:01:48.360 --> 00:01:50.680
And how do I know those are node modules?

42
00:01:50.680 --> 00:01:52.530
Well, they don't have
dots in front of them.

43
00:01:52.530 --> 00:01:55.550
So that means they either have
to be internal modules or

44
00:01:55.550 --> 00:01:58.740
node modules somewhere on the internet and

45
00:01:58.740 --> 00:02:02.480
you could have just looked like five
seconds on the node documentation site.

46
00:02:02.480 --> 00:02:04.460
Is there something called commander here?

47
00:02:05.520 --> 00:02:06.610
I can promise you there's not.

48
00:02:06.610 --> 00:02:08.880
There's nothing internal
to node called commander.

49
00:02:08.880 --> 00:02:10.560
There's nothing internal
to node called inquirer.

50
00:02:10.560 --> 00:02:13.090
So most likely these are modules
downloaded from the internet.

51
00:02:13.090 --> 00:02:14.930
And our package.json
says we don't have them.

52
00:02:14.930 --> 00:02:18.100
So most likely they're not going to
be in our node modules folder either.

53
00:02:18.100 --> 00:02:19.060
But, we can check.

54
00:02:19.060 --> 00:02:21.030
We can go to node modules and
we can check.

55
00:02:21.030 --> 00:02:23.920
And I might have them here because
I probably already installed them.

56
00:02:23.920 --> 00:02:26.310
But let's check it out.

57
00:02:26.310 --> 00:02:27.030
So commander.

58
00:02:28.050 --> 00:02:29.020
Look at all this stuff in there.

59
00:02:29.020 --> 00:02:29.848
So much stuff.

60
00:02:34.737 --> 00:02:36.290
&gt;&gt; Speaker 1: Yeah, I already have
it because I already installed it.

61
00:02:36.290 --> 00:02:37.890
But this is another way you can check.

62
00:02:37.890 --> 00:02:41.310
But like I said,
it doesn't hurt to just install it again.

63
00:02:41.310 --> 00:02:45.690
So the way that you would do that, is, you
might see some people come in like, I'm

64
00:02:45.690 --> 00:02:49.960
just gonna type in the name of it here,
and be smart about it, type in commander.

65
00:02:49.960 --> 00:02:52.630
And then when I run mpm-install,
it'll install it.

66
00:02:52.630 --> 00:02:56.200
Yeah, you could do that, but how do you
know what version to put in, right?

67
00:02:56.200 --> 00:02:58.480
So you might get really smart,
and look at the documentation.

68
00:02:58.480 --> 00:03:01.550
It's like, well yeah, I know what
version to put in, I'll just do this.

69
00:03:01.550 --> 00:03:05.810
I'll just say commander and
I'll just put a star.

70
00:03:05.810 --> 00:03:06.820
Yeah, you could do that.

71
00:03:06.820 --> 00:03:08.210
You're going to get the latest thing.

72
00:03:08.210 --> 00:03:11.360
But now,
whenever there's a breaking change,

73
00:03:11.360 --> 00:03:13.960
you're going to download the breaking
change too, which could break your app.

74
00:03:13.960 --> 00:03:14.860
So you don't want to do that.

75
00:03:14.860 --> 00:03:18.960
These little carats and stuff have
small significance, like you know,

76
00:03:18.960 --> 00:03:21.580
you could download the next version,
but only up to a breaking change.

77
00:03:21.580 --> 00:03:24.920
And that has a lot to do with
something called symver,

78
00:03:24.920 --> 00:03:25.810
if you've ever heard of that.

79
00:03:25.810 --> 00:03:30.770
It's a system that open-source developers
use to release versions on their packages.

80
00:03:30.770 --> 00:03:36.610
So these packages should follow symver,
where the first number is a major change,

81
00:03:36.610 --> 00:03:38.660
the second number is
more like an addition or

82
00:03:38.660 --> 00:03:42.800
a fix, and this third number
here is just a small thing.

83
00:03:42.800 --> 00:03:43.570
That doesn't really matter.

84
00:03:43.570 --> 00:03:46.610
So you've got a patch,
a minor, and a major.

85
00:03:46.610 --> 00:03:49.170
So patches are small,
minors are just fixes,

86
00:03:49.170 --> 00:03:51.700
and majors are huge version changes.

87
00:03:51.700 --> 00:03:53.140
So anything that's a huge version change.

88
00:03:53.140 --> 00:03:54.960
Even that breaks gets a version bump.

89
00:03:54.960 --> 00:03:57.160
Everything else is just patches and
minors.

90
00:03:57.160 --> 00:04:01.305
So if this thing was 2.0 and
it downloaded 2.0.

91
00:04:01.305 --> 00:04:04.620
But my coach version 1.0 and if there's a
breaking change most likely my coach going

92
00:04:04.620 --> 00:04:05.990
to break her out me knowing about it.

93
00:04:05.990 --> 00:04:08.120
So that's kind of why you
don't want to do that.

94
00:04:08.120 --> 00:04:10.620
So, yeah, don't do that.

95
00:04:10.620 --> 00:04:11.550
Oops.

96
00:04:11.550 --> 00:04:16.730
So instead just use what I told you here,
which is just mpm.

97
00:04:16.730 --> 00:04:20.160
I for sure and then you can type
in the name of the package.

98
00:04:20.160 --> 00:04:24.390
So commander, and then, yeah you can type
in another one right next to it, and

99
00:04:24.390 --> 00:04:27.565
it works just as well, I just don't know
how to spell it, so I'm gonna go copy it.

100
00:04:27.565 --> 00:04:31.480
[LAUGH] There we go, grab that.

101
00:04:31.480 --> 00:04:34.640
So you can type as many as you want here,
you just put a space after it,

102
00:04:34.640 --> 00:04:37.030
no comma, no nothing, just npm.

103
00:04:37.030 --> 00:04:43.830
You could install, for the long the full
version, so you just type in install.

104
00:04:43.830 --> 00:04:45.420
And then,
we want to make sure we save these.

105
00:04:45.420 --> 00:04:48.040
We'll go save.

106
00:04:48.040 --> 00:04:51.060
Although I think the new version of npm
might even save these by default now.

107
00:04:51.060 --> 00:04:53.810
But I'm so used to doing this,
and I'm just gonna do it, anyway.

108
00:04:53.810 --> 00:04:54.790
So it'll save it.

109
00:04:54.790 --> 00:04:56.800
For me, it might go by really
fast because I already have it.

110
00:04:57.920 --> 00:05:00.820
And again, I use yarn,
which it caches all this stuff, anyway.

111
00:05:00.820 --> 00:05:02.750
So I'll let it do its job, and it'll save.

112
00:05:02.750 --> 00:05:03.810
So that's one fix.

113
00:05:03.810 --> 00:05:08.120
Did everybody get passed that fix,
just installing the node modules.

114
00:05:08.120 --> 00:05:09.560
Right, pretty simple to
install node modules.

115
00:05:09.560 --> 00:05:12.502
And if you didn't, you probably
would have got an error saying,

116
00:05:12.502 --> 00:05:14.868
cannot find missing module or
something like that.

117
00:05:17.623 --> 00:05:22.590
&gt;&gt; Speaker 1: So the next thing we wanted
to fix was these two functions in here.

118
00:05:22.590 --> 00:05:24.350
Get contacts.

119
00:05:24.350 --> 00:05:25.870
And save contacts.

120
00:05:25.870 --> 00:05:28.400
So yeah,
they're just two function to fix, but

121
00:05:28.400 --> 00:05:31.930
there's a lot of small things happening
here that a lot of people ran into.

122
00:05:31.930 --> 00:05:35.320
And I'm so glad a lot of people ran
into the little trap that I had here and

123
00:05:35.320 --> 00:05:36.195
it felt so good.

124
00:05:36.195 --> 00:05:40.060
[LAUGH] But it taught you
guys a lesson which was yeah,

125
00:05:40.060 --> 00:05:41.500
you have to use the path module.

126
00:05:41.500 --> 00:05:42.570
So let's get going with this.

127
00:05:42.570 --> 00:05:44.620
So the first thing is getContacts.

128
00:05:44.620 --> 00:05:48.180
It says it should read the contacts
at the @contactsLocation,

129
00:05:48.180 --> 00:05:51.750
which is this path and
convert it to a JavaScript object.

130
00:05:51.750 --> 00:05:53.690
So let's do that step-by-step.

131
00:05:53.690 --> 00:05:57.411
So first thing is, it should read
the contacts at the contactsLocation.

132
00:05:57.411 --> 00:05:58.157
Okay, so let's see that.

133
00:05:58.157 --> 00:06:06.800
So we'll say contacts = fs.readfilesync.

134
00:06:06.800 --> 00:06:12.857
And then we need the contacts location,
so contactsLocation.

135
00:06:12.857 --> 00:06:14.825
We'll do that.

136
00:06:14.825 --> 00:06:18.180
I was gonna put toString here just to
make sure it's a string and not a buffer.

137
00:06:20.660 --> 00:06:25.820
And we got that and then now it says we
need to convert it to a JavaScript object.

138
00:06:25.820 --> 00:06:30.220
Well, this is JSON and converting
is a JavaScript is just JSON.parse.

139
00:06:30.220 --> 00:06:36.937
So I'm just going to say
return JSON.parse(contacts).

140
00:06:36.937 --> 00:06:39.220
So you might have done this and
realize that you were good to go.

141
00:06:39.220 --> 00:06:40.850
You were done, right?

142
00:06:40.850 --> 00:06:42.290
So let's test it out.

143
00:06:42.290 --> 00:06:43.790
So I'm gonna run this command.

144
00:06:43.790 --> 00:06:52.200
And for get contacts,
it's gonna node exercises/cli/index.

145
00:06:52.200 --> 00:06:54.810
And then, forget context,
that's gonna be list.

146
00:06:55.950 --> 00:06:59.150
So if I run that, it says right there.

147
00:06:59.150 --> 00:06:59.730
You'll get this error.

148
00:06:59.730 --> 00:07:05.668
It's like error: ENOENT,
however you pronounce.

149
00:07:05.668 --> 00:07:09.530
It's basically saying, we tried to
find this file, but it doesn't exist.

150
00:07:09.530 --> 00:07:12.370
So you can see that it said
it tried to open the file.

151
00:07:12.370 --> 00:07:14.200
But that's a little weird.

152
00:07:14.200 --> 00:07:15.790
We didn't try to open a file.

153
00:07:15.790 --> 00:07:16.890
Well, actually, you did.

154
00:07:16.890 --> 00:07:20.190
When you go inside of Finder, or your
files on Windows, and you click on a file,

155
00:07:20.190 --> 00:07:21.280
you're actually opening it.

156
00:07:21.280 --> 00:07:22.100
You're viewing it.

157
00:07:22.100 --> 00:07:23.760
This is actually doing the same thing.

158
00:07:23.760 --> 00:07:25.360
It does the same thing your GUI does.

159
00:07:25.360 --> 00:07:25.870
When your GUI,

160
00:07:25.870 --> 00:07:29.090
when you click on things, the first
thing it does the exact same thing.

161
00:07:29.090 --> 00:07:31.290
It's doing the same operations that
you're normally do with the mouse

162
00:07:31.290 --> 00:07:32.380
and the keyboard.

163
00:07:32.380 --> 00:07:34.620
So it actually did try to open
a file which just didn't exist.

164
00:07:34.620 --> 00:07:38.170
So imagine if there was a file
represented in your Finder or

165
00:07:38.170 --> 00:07:41.720
your File Explorer that didn't actually
exist and you tried to open it.

166
00:07:41.720 --> 00:07:43.140
Yeah, you'd probably get a error too.

167
00:07:43.140 --> 00:07:44.180
This is what you just tried to do.

168
00:07:44.180 --> 00:07:45.819
You tried to open a file
that doesn't exist.

169
00:07:47.020 --> 00:07:48.630
So yeah, you would get the same error.

170
00:07:48.630 --> 00:07:52.770
Luckily graphics using their faces don't
really show you files that don't exist.

171
00:07:52.770 --> 00:07:54.050
So you should run into that problem.

172
00:07:54.050 --> 00:07:58.130
But if it did you would
get the same error.

173
00:07:58.130 --> 00:08:00.540
So that means this path is awful.

174
00:08:00.540 --> 00:08:01.060
We look here.

175
00:08:01.060 --> 00:08:03.570
We know that context
that JSON is a sibling.

176
00:08:03.570 --> 00:08:06.030
So maybe I just need to do that.

177
00:08:06.030 --> 00:08:07.040
Change that like that.

178
00:08:07.040 --> 00:08:10.350
And it's relative now, so let's try that.

179
00:08:10.350 --> 00:08:15.270
Okay, yeah, that didn't work either,
so you got to go back and think,

180
00:08:15.270 --> 00:08:19.180
okay, I'm trying to add this path.

181
00:08:19.180 --> 00:08:23.150
It's relative, but it's not working
although I know it's there.

182
00:08:23.150 --> 00:08:24.130
And there's a few things.

183
00:08:24.130 --> 00:08:27.650
One, remember I said,
don't ever use paths.

184
00:08:27.650 --> 00:08:30.730
Without using the path module,
unless you're doing a require.

185
00:08:30.730 --> 00:08:34.420
Don't ever do it,
because you cannot rely on,

186
00:08:34.420 --> 00:08:38.830
whatever tool you're passing that path to,
you cannot rely on the fact that it knows

187
00:08:38.830 --> 00:08:41.530
where you are, like,
it knows where it is in the app.

188
00:08:41.530 --> 00:08:43.250
It doesn't know about the dir name.

189
00:08:43.250 --> 00:08:45.310
Like, I just wouldn't expect it to.

190
00:08:45.310 --> 00:08:51.960
So most of these tools actually just use
like full paths, like full blown paths.

191
00:08:51.960 --> 00:08:55.280
So most of the time you've just
got to give them the full path.

192
00:08:55.280 --> 00:08:56.820
You could just construct a full path here.

193
00:08:56.820 --> 00:09:00.790
You can just say, okay,
I'm going to do cli exercises,

194
00:09:00.790 --> 00:09:03.150
I'm going to do all this stuff.

195
00:09:03.150 --> 00:09:04.490
But we have helpers for that.

196
00:09:04.490 --> 00:09:07.000
So what we can do instead is a few things.

197
00:09:07.000 --> 00:09:08.920
One, we have this dirname thing.

198
00:09:08.920 --> 00:09:10.150
We can do that.

199
00:09:10.150 --> 00:09:13.870
Dirname is gonna be the full
path of this directory.

200
00:09:13.870 --> 00:09:16.950
So that's one thing, and
then you might do something like this.

201
00:09:16.950 --> 00:09:18.320
You might do that.

202
00:09:18.320 --> 00:09:20.110
Well, now you gotta whole
bunch of different issues.

203
00:09:20.110 --> 00:09:21.960
One, if you're in Windows,
this might not work.

204
00:09:21.960 --> 00:09:23.630
Two, I don't know what's
on the end of that.

205
00:09:23.630 --> 00:09:24.429
It could be a slash.

206
00:09:25.520 --> 00:09:28.380
There's a dot here like I don't have
no idea what to do with this is too

207
00:09:28.380 --> 00:09:30.110
many things to in the edge cases.

208
00:09:30.110 --> 00:09:33.340
Most likely have the writer regex
to fix this which is this annoying.

209
00:09:33.340 --> 00:09:38.095
So instead get rid of that put a comma
here and then you can just use path.join.

210
00:09:39.880 --> 00:09:41.850
And you just join those two things and
it'll figure it out for

211
00:09:41.850 --> 00:09:43.430
you and you're done.

212
00:09:43.430 --> 00:09:43.960
That's it.

213
00:09:43.960 --> 00:09:46.190
So now that we have the right path.

214
00:09:46.190 --> 00:09:47.860
Everything's good to go.

215
00:09:47.860 --> 00:09:52.470
Hopefully we should be
able to run this command.

216
00:09:52.470 --> 00:09:56.980
And it's showing me contacts that I
can pick, so I'm gonna pick that one

217
00:09:56.980 --> 00:10:01.330
just to test it out with a contact
that actually has a real name.

218
00:10:02.970 --> 00:10:06.810
We can just say Ashley Smith and

219
00:10:06.810 --> 00:10:12.725
we'll just copy this
stuff over really quick.

220
00:10:22.152 --> 00:10:23.270
&gt;&gt; Speaker 1: There we go.

221
00:10:23.270 --> 00:10:28.050
So if I run this here you go,
see, I can select more than one.

222
00:10:28.050 --> 00:10:32.160
So I'll select Ashley Smith and boom, I
got her stuff, all right, so that worked.

223
00:10:32.160 --> 00:10:35.160
Everybody got this part done,
any questions on this part?

224
00:10:35.160 --> 00:10:40.600
&gt;&gt; Speaker 2: Did you need the ./
in front of contacts.JSON, there?

225
00:10:40.600 --> 00:10:41.330
&gt;&gt; Speaker 1: This one?

226
00:10:41.330 --> 00:10:41.890
&gt;&gt; Speaker 2: Yeah.

227
00:10:41.890 --> 00:10:43.590
&gt;&gt; Speaker 1: Nope, let's try that again.

228
00:10:45.120 --> 00:10:45.620
Boom.

229
00:10:47.450 --> 00:10:49.470
That's the sweet hing about path.

230
00:10:49.470 --> 00:10:50.860
It just does it for us.

231
00:10:50.860 --> 00:10:51.360
Didn't need to.

232
00:10:52.760 --> 00:10:54.580
If I had it, it would have fixed it.

233
00:10:54.580 --> 00:10:56.250
I'm pretty sure I could
have even done this.

234
00:10:59.230 --> 00:11:03.020
And it might still work, let's find out.

235
00:11:03.020 --> 00:11:04.440
Yeah.

236
00:11:04.440 --> 00:11:06.290
See?
You don't have to thik about it,

237
00:11:06.290 --> 00:11:07.390
it figured it out for you.

238
00:11:07.390 --> 00:11:11.690
It knew that you made a boo-boo
[LAUGH] and and fixed.

239
00:11:11.690 --> 00:11:13.470
It's like yeah,
you clearly didn't mean to do that.

240
00:11:13.470 --> 00:11:15.720
So let me go ahead and fix that for you.

241
00:11:15.720 --> 00:11:18.520
So yeah, that's pretty legit.

242
00:11:18.520 --> 00:11:19.267
Any questions on that?

243
00:11:22.124 --> 00:11:24.300
&gt;&gt; Speaker 1: Okay, the next part.

244
00:11:24.300 --> 00:11:25.170
Was the opposite.

245
00:11:25.170 --> 00:11:27.370
So this time,
we're getting a context object,

246
00:11:27.370 --> 00:11:32.000
and we need to save it
to the context file.

247
00:11:32.000 --> 00:11:37.070
Now, I didn't give you instructions
on whether this was a full context

248
00:11:37.070 --> 00:11:40.790
object or a object with just one context
that you had to update in a context, so

249
00:11:40.790 --> 00:11:42.340
you would have to figure that out.

250
00:11:42.340 --> 00:11:43.920
To see if you need to
overwrite the file or

251
00:11:43.920 --> 00:11:45.710
append the file,
because that's the difference.

252
00:11:45.710 --> 00:11:47.260
If there was a full context object here,

253
00:11:47.260 --> 00:11:49.480
you would just blow the whole file out and
rewrite it.

254
00:11:49.480 --> 00:11:53.190
If there was just one contact that you had
to append, then if you just did write file

255
00:11:53.190 --> 00:11:57.170
here, you would have all the missing
context, plus the one you just added.

256
00:11:57.170 --> 00:11:59.870
So you don't want that.

257
00:11:59.870 --> 00:12:03.550
So this is a full blown context object, so
you just want to rewrite the whole file.

258
00:12:03.550 --> 00:12:09.570
So the way you would do that is you
would just say fs.writefilesync.

259
00:12:09.570 --> 00:12:17.520
And then what you would do is you would
pass in the path to contactsLocation.

260
00:12:17.520 --> 00:12:23.110
And then you need to convert this
contacts object to JSON, right?

261
00:12:23.110 --> 00:12:26.570
So you would say JSON.stringify.

262
00:12:26.570 --> 00:12:30.395
The contact, contacts, and there you go.

263
00:12:30.395 --> 00:12:34.390
And now you saved it to the file,
so we can test this out.

264
00:12:34.390 --> 00:12:42.510
So what we'll do is we'll run the command
for new, and you should get this prompt.

265
00:12:42.510 --> 00:12:47.606
It's like First Name Tom Cat and

266
00:12:47.606 --> 00:12:50.255
a Phone Number.

267
00:12:52.174 --> 00:12:56.777
&gt;&gt; Speaker 1: Boom, and
then we can go check our context file and.

268
00:12:58.578 --> 00:13:00.040
&gt;&gt; Speaker 1: Where is Tom Cat?

269
00:13:00.040 --> 00:13:01.470
There it is, there's Tom Cat.

270
00:13:01.470 --> 00:13:03.730
That looks kinda ugly, so
let's format the JSON.

271
00:13:03.730 --> 00:13:05.810
This is a small JSON trick.

272
00:13:05.810 --> 00:13:07.460
That you can use.

273
00:13:07.460 --> 00:13:09.590
Definitely use it for
logging out stuff during debugging.

274
00:13:09.590 --> 00:13:14.910
You can put null 2 as
arguments in JSON.stringify.

275
00:13:14.910 --> 00:13:16.910
And it'll do some pretty cool stuff for
you.

276
00:13:16.910 --> 00:13:18.368
So let's run this again.

277
00:13:18.368 --> 00:13:24.890
And Jimmy Hendrix.

278
00:13:24.890 --> 00:13:28.385
And now, if we go look at it you
can see the format ofcourse.

279
00:13:28.385 --> 00:13:31.320
All right and then there's Jimmy Hendrix.

280
00:13:31.320 --> 00:13:33.160
So we just made an address book.

281
00:13:33.160 --> 00:13:34.610
Pretty legit.

282
00:13:34.610 --> 00:13:35.770
Pretty simple.

283
00:13:35.770 --> 00:13:39.825
You can start your startup,
get some pc funding with this now.

284
00:13:39.825 --> 00:13:42.616
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Speaker 1: And yeah it will be good.

285
00:13:42.616 --> 00:13:43.650
You have a question?

286
00:13:43.650 --> 00:13:48.350
&gt;&gt; Speaker 2: Yeah I'm just curious when
you recommend using path.join versus

287
00:13:48.350 --> 00:13:52.910
resolve or is there any real-
&gt;&gt; Speaker 1: I ask myself

288
00:13:52.910 --> 00:13:54.860
that question all the time.

289
00:13:56.260 --> 00:14:03.480
Sometimes I use path.resolve if
I'm not sure how to get to a path.

290
00:14:03.480 --> 00:14:04.070
&gt;&gt; Speaker 2: Okay.
&gt;&gt; Speaker 1: Like,

291
00:14:04.070 --> 00:14:06.640
I know the path exists somewhere up here.

292
00:14:06.640 --> 00:14:11.260
I am just hoping,
I just need path to figure it out for me.

293
00:14:11.260 --> 00:14:14.680
I just don't know how many levels up
it is because it will look ahead and

294
00:14:14.680 --> 00:14:16.070
figure it out for you.

295
00:14:16.070 --> 00:14:19.310
Whereas like path.join is like
I'm pretty sure it is here,

296
00:14:19.310 --> 00:14:21.030
I just want you to fix it for me.

297
00:14:21.030 --> 00:14:22.090
So that's the difference.

298
00:14:22.090 --> 00:14:25.350
But most of the time I always
know where my stuff is,

299
00:14:25.350 --> 00:14:27.540
I just need it to canchatinate correctly.

300
00:14:27.540 --> 00:14:30.740
So always use path.join but
your resolve is just like,

301
00:14:30.740 --> 00:14:34.880
I don't know if I'm ten levels deep or
four levels deep, so figure it out for me.

302
00:14:34.880 --> 00:14:35.910
That's what resolve does.

