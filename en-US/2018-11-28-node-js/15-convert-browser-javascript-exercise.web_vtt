WEBVTT

1
00:00:00.060 --> 00:00:00.620
&gt;&gt; Scott Moss: Exercise 2.

2
00:00:00.620 --> 00:00:03.870
This one's going to be legit.

3
00:00:03.870 --> 00:00:06.140
So, you're going to fork the repo.

4
00:00:06.140 --> 00:00:07.950
So the repo that I mentioned
at the beginning of class.

5
00:00:07.950 --> 00:00:12.580
So if you haven't, fork it, clone it,
however you want to do it, pull it down.

6
00:00:12.580 --> 00:00:14.500
Fork it if you want to push
it up to GitHub later.

7
00:00:14.500 --> 00:00:15.720
If you don't want to push
it up to GitHub later,

8
00:00:15.720 --> 00:00:18.350
you can just clone it and you're good.

9
00:00:18.350 --> 00:00:20.160
So get the repo on your machine.

10
00:00:20.160 --> 00:00:21.500
Check out to the start branch,

11
00:00:21.500 --> 00:00:23.640
there's a branch called start,
just check out to that branch.

12
00:00:23.640 --> 00:00:25.540
By default the master branch
is gonna be listed there and

13
00:00:25.540 --> 00:00:26.630
it's got all the solutions on it.

14
00:00:26.630 --> 00:00:27.430
It's totally fine.

15
00:00:27.430 --> 00:00:28.810
You could look at the solutions
if you want to but

16
00:00:28.810 --> 00:00:31.110
the start branch is where
you're gonna be working.

17
00:00:31.110 --> 00:00:32.140
So check out the start branch.

18
00:00:34.010 --> 00:00:35.980
The check the read me on how to run test.

19
00:00:37.490 --> 00:00:38.180
Look at that readme.

20
00:00:38.180 --> 00:00:39.840
There will be, for exercise 2,

21
00:00:39.840 --> 00:00:43.190
there will be instructions on what
command you need to run to run tests.

22
00:00:43.190 --> 00:00:46.220
For this exercise you're going to be
running tests, and we'll talk about that.

23
00:00:46.220 --> 00:00:48.730
You're gonna look at that command and
be like, what the hell is this?

24
00:00:48.730 --> 00:00:50.160
We never talked about this.

25
00:00:50.160 --> 00:00:50.910
That's fine.

26
00:00:50.910 --> 00:00:52.810
Just run the command.

27
00:00:52.810 --> 00:00:54.450
We're gonna talk about that command later.

28
00:00:54.450 --> 00:00:55.840
And what it's actually doing.

29
00:00:55.840 --> 00:00:57.620
But just run that command to run tests.

30
00:00:57.620 --> 00:00:59.880
If you know what it's doing,
that's fantastic.

31
00:00:59.880 --> 00:01:00.990
But we're going to talk about it later.

32
00:01:00.990 --> 00:01:04.760
So if you have questions save them for us
for the next before we come back because

33
00:01:04.760 --> 00:01:07.020
I don't want to put you down
that wrote that the path for

34
00:01:07.020 --> 00:01:08.610
that right now because
it's like a rabbit hole.

35
00:01:10.950 --> 00:01:13.620
So your tasks are to fix and

36
00:01:13.620 --> 00:01:18.006
convert the three JavaScript files and
exercises / module slides browser.

37
00:01:18.006 --> 00:01:20.350
So it's gonna be three
JavaScript files in there.

38
00:01:20.350 --> 00:01:27.920
And they all have code in them
that's meant for the browser.

39
00:01:27.920 --> 00:01:30.480
You need to convert them to Node code, so

40
00:01:30.480 --> 00:01:33.290
there's a folder right there
next to the browser called Node.

41
00:01:33.290 --> 00:01:38.280
You need to grab each one of those files
and make the appropriate file in Node

42
00:01:38.280 --> 00:01:40.860
folder and get rid of all
the browser stuff so it works.

43
00:01:40.860 --> 00:01:45.010
And the way you know it works is if
you run the test command and you pass.

44
00:01:45.010 --> 00:01:47.500
If the test is still failing
then you didn't fix it.

45
00:01:47.500 --> 00:01:49.730
So once you get the tests
to pass then your good.

46
00:01:49.730 --> 00:01:50.490
You will see all green.

47
00:01:51.690 --> 00:01:54.180
If the test didn't pass then, yeah.

48
00:01:54.180 --> 00:01:58.520
There might be some other tests
on there for some other exercise.

49
00:01:58.520 --> 00:01:59.490
Just ignore those.

50
00:01:59.490 --> 00:02:00.400
Let those fail.

51
00:02:00.400 --> 00:02:02.499
You only want to look at the test
that is for those three files.

52
00:02:03.830 --> 00:02:05.240
So again,
the test command is in the README.

53
00:02:05.240 --> 00:02:10.360
So fix those, and yeah, make sure all the
tests pass by running the test command.

54
00:02:10.360 --> 00:02:14.831
So I'm gonna walk through
it right quick so

55
00:02:14.831 --> 00:02:18.694
you can see what I'm talking about.

56
00:02:18.694 --> 00:02:22.900
So intro-to-node and

57
00:02:22.900 --> 00:02:30.060
I'm going to check out to start, code.

58
00:02:30.060 --> 00:02:33.670
So again if you look at the exercise
folder you will see a modules folder and

59
00:02:33.670 --> 00:02:36.010
if you click in there you
will see two folders.

60
00:02:36.010 --> 00:02:40.600
Browser and Node and browser is
literally a working browser app.

61
00:02:40.600 --> 00:02:45.420
I mean you could just open this as the
html file In the browser and like you'll

62
00:02:45.420 --> 00:02:52.040
get like, I guess it isn't thing doesn't
want to open with the file browser.

63
00:02:52.040 --> 00:02:54.850
Yeah, okay, whatever reason is
didn't want to open for me.

64
00:02:54.850 --> 00:02:56.970
But it's a it's a browser app.

65
00:02:56.970 --> 00:03:00.250
You got some script tags in here these
three they're loaded in the order

66
00:03:00.250 --> 00:03:00.840
they need to.

67
00:03:00.840 --> 00:03:03.910
So you need to look at this to see what
order they're loaded in because this is

68
00:03:03.910 --> 00:03:06.110
going to help you determine how
you require your modules and

69
00:03:06.110 --> 00:03:07.780
how you export them.

70
00:03:07.780 --> 00:03:09.800
And then you got this
embedded JavaScript file.

71
00:03:09.800 --> 00:03:11.090
You don't need to convert this.

72
00:03:11.090 --> 00:03:14.460
This is pure browser JavaScript file,
it even says it right here,

73
00:03:14.460 --> 00:03:17.440
browser only DOM code,
don't try to convert this to Node.

74
00:03:17.440 --> 00:03:18.390
This is just for the browser.

75
00:03:18.390 --> 00:03:20.740
So this is one file you
won't be converting, but

76
00:03:20.740 --> 00:03:22.710
you do need to convert these three files.

77
00:03:22.710 --> 00:03:25.260
So if you go look at one of them,
I'm not gonna say what's wrong with it,

78
00:03:25.260 --> 00:03:27.630
but you can probably look
based on what we talked about.

79
00:03:27.630 --> 00:03:32.350
There's some things here that just
aren't going to work and Node and

80
00:03:32.350 --> 00:03:34.290
you need to kind of understand
what is it trying to do.

81
00:03:34.290 --> 00:03:38.410
Like why is it doing
Window.App = Window.App?

82
00:03:38.410 --> 00:03:41.360
I talked about why people would do
that because there wasn't really

83
00:03:41.360 --> 00:03:42.000
a module system.

84
00:03:42.000 --> 00:03:44.840
So we have to share code somehow so
you got to look at that.

85
00:03:44.840 --> 00:03:46.849
There's some a lot of
Windows stuff happening here.

86
00:03:48.010 --> 00:03:50.800
So you need to look at all that, and

87
00:03:50.800 --> 00:03:55.410
then if you go to the node code,
you got these three files here.

88
00:03:55.410 --> 00:03:56.340
They're all blank.

89
00:03:56.340 --> 00:03:59.370
There's nothing in them, but they're
the same name as these files up here.

90
00:03:59.370 --> 00:04:01.940
So you need to take the code
out of each one of those files,

91
00:04:01.940 --> 00:04:04.000
paste it in here and then fix it.

92
00:04:04.000 --> 00:04:05.160
Make it to where it works, and again,

93
00:04:05.160 --> 00:04:07.839
the way you know it works is
when you run these tests.

94
00:04:09.160 --> 00:04:10.220
They all pass.

95
00:04:10.220 --> 00:04:16.340
So again, to run those tests, the command
is in the read me, and you'll see

96
00:04:16.340 --> 00:04:22.120
right here,
the command is gonna be npx jest.

97
00:04:22.120 --> 00:04:24.240
So in your terminal,
all you gotta do is just run that,

98
00:04:24.240 --> 00:04:28.100
npx jest, and you're gonna see,
it's gonna start running some tests.

99
00:04:28.100 --> 00:04:31.515
And then when they are,
they just got a fail.

100
00:04:31.515 --> 00:04:32.834
They just got a half-failing test.

101
00:04:32.834 --> 00:04:36.219
So when those pass, you're good to go.

102
00:04:36.219 --> 00:04:42.540
Npx, you didn't install that, but it
shipped with Node when you installed it.

103
00:04:42.540 --> 00:04:44.720
So Node came with something called npm and

104
00:04:44.720 --> 00:04:48.090
npx, we're gonna talk about those in the
next lesson, but just use that to test.

105
00:04:48.090 --> 00:04:49.350
And we're also gonna talk about jest.

106
00:04:49.350 --> 00:04:53.010
When we get to testing, but just trust me,
just run those commands, and

107
00:04:53.010 --> 00:04:53.870
that's how you're going to test.

108
00:04:53.870 --> 00:04:57.040
So, the tests you're going to be looking
at are going to be the ones that

109
00:04:57.040 --> 00:05:01.760
are appropriate for your exercises.

110
00:05:01.760 --> 00:05:06.490
So you're going to be looking for
exercises where it's only going to

111
00:05:06.490 --> 00:05:09.530
be testing those changes and
not the other ones.

112
00:05:09.530 --> 00:05:13.057
So the test will still fail, but that's
fine, as long as you get the ones that

113
00:05:13.057 --> 00:05:16.063
are important for you to be pass,
and you're gonna be good to go.

114
00:05:19.723 --> 00:05:21.770
&gt;&gt; Speaker 2: Which ones are they?

115
00:05:21.770 --> 00:05:23.880
&gt;&gt; Scott Moss: So
the test you wanna look for are gonna be,

116
00:05:23.880 --> 00:05:27.260
you have a test right here called data.

117
00:05:27.260 --> 00:05:28.470
So you see describe data,

118
00:05:28.470 --> 00:05:32.700
you have one called API, and
you have one called get post for user.

119
00:05:32.700 --> 00:05:37.798
So if I go back to the failing test,
you can see right here jest will

120
00:05:37.798 --> 00:05:43.824
say data &gt; users, data &gt; posts, api,
getUserById, api &gt; getUserById,

121
00:05:43.824 --> 00:05:49.420
all of these right here,
app.showUserProfile, yep, all of those.

122
00:05:49.420 --> 00:05:52.770
So pretty much all of the ones above

123
00:05:52.770 --> 00:05:55.350
cuz you have these other ones
that say exercises/testing.

124
00:05:55.350 --> 00:05:56.310
You're not concerned about those.

125
00:05:56.310 --> 00:05:57.330
That's for a future exercise.

126
00:05:57.330 --> 00:05:58.480
Don't worry about those.

127
00:05:58.480 --> 00:06:02.900
It's just the ones that are for
exercises/modules.

128
00:06:05.531 --> 00:06:12.200
&gt;&gt; Scott Moss: So data users, data post,
api getUserById, api getUserById.

129
00:06:12.200 --> 00:06:14.460
API get post for user.

130
00:06:14.460 --> 00:06:16.400
App show post for current user.

131
00:06:16.400 --> 00:06:17.570
App for show user profile.

132
00:06:17.570 --> 00:06:18.580
And again the way you check that,

133
00:06:18.580 --> 00:06:20.600
if you just look at the test file,
the names are here.

134
00:06:21.690 --> 00:06:24.580
The describe and the test,
those are the names of the test.

135
00:06:24.580 --> 00:06:28.090
So when you see those passing
in the print out, they are good.

136
00:06:28.090 --> 00:06:29.699
Other ones that aren't this name,
don't worry about them.

137
00:06:32.470 --> 00:06:37.800
&gt;&gt; Speaker 2: And if you want to open up
the index HTML, you can just open it.

138
00:06:39.710 --> 00:06:43.040
Like right click and open in finder.

139
00:06:43.040 --> 00:06:44.480
&gt;&gt; Scott Moss: I got it
open that in the browser.

140
00:06:44.480 --> 00:06:46.410
Yeah, I don't know why that
playing wasn't right now.

141
00:06:47.990 --> 00:06:49.230
There we go.

142
00:06:49.230 --> 00:06:51.390
Cool, so, yeah,
it's just a regular browser app.

143
00:06:51.390 --> 00:06:54.490
It's just, I mean nothing fancy,
it's just a browser website.

144
00:06:54.490 --> 00:06:56.060
So all that code works.

145
00:06:56.060 --> 00:06:57.460
It loads up all the stuff.

146
00:06:57.460 --> 00:07:01.200
So now you want to convert
that code to Node, but

147
00:07:01.200 --> 00:07:03.720
you're not gonna look at it in a browser
because Node's not a browser app.

148
00:07:03.720 --> 00:07:06.880
It's just code, we're just looking at pure
code, pure logic, we just want it to work.

149
00:07:06.880 --> 00:07:08.650
We want it to not fail.

150
00:07:08.650 --> 00:07:12.010
It's just an exercise of converting
the things that don't work.

151
00:07:12.010 --> 00:07:15.540
So hint you will be using modules here,
exporting and requiring.

152
00:07:15.540 --> 00:07:18.010
So if you haven't figured that
out you will be doing that.

153
00:07:18.010 --> 00:07:21.670
And then you will be trying to get rid
of code that only works in a browser and

154
00:07:21.670 --> 00:07:22.820
using it just in note.

155
00:07:22.820 --> 00:07:23.980
So those are two different things,

156
00:07:23.980 --> 00:07:26.430
two different things that we talked about
in this last lecture that you'll be doing.

