WEBVTT

1
00:00:02.567 --> 00:00:05.271
&gt;&gt; Scott Moss: Sharing modules, so
we talked about creating modules,

2
00:00:05.271 --> 00:00:08.050
we talked about about
pulling down the internet.

3
00:00:08.050 --> 00:00:10.610
But how do you share yours
to the rest of the world?

4
00:00:10.610 --> 00:00:13.370
If you want to, you should.

5
00:00:13.370 --> 00:00:16.950
If you could do something or legit,
like share it, share it like this,

6
00:00:16.950 --> 00:00:18.390
give it away, let people use it.

7
00:00:18.390 --> 00:00:19.560
And then let them fix it for

8
00:00:19.560 --> 00:00:23.660
you if the stuff is really good, then
people will fix your stuff if they use it.

9
00:00:23.660 --> 00:00:25.448
And then you can ask them for money.

10
00:00:25.448 --> 00:00:30.070
[LAUGH] You can put a donate badge on your
read me and have them buy you a coffee,

11
00:00:31.240 --> 00:00:34.090
like every other hipster that
creates open source for a living.

12
00:00:34.090 --> 00:00:36.140
So it's pretty simple.

13
00:00:36.140 --> 00:00:38.730
You just push your code to GitHub,
and then you publish it to NPM.

14
00:00:38.730 --> 00:00:39.910
That's basically it.

15
00:00:39.910 --> 00:00:40.730
So nothing really changed.

16
00:00:40.730 --> 00:00:43.930
There's just some things that you
have to change before you do it.

17
00:00:43.930 --> 00:00:48.460
Basically, you need to add node modules to
the gitignore file if you haven't already.

18
00:00:48.460 --> 00:00:51.110
Like I said that should not go in GitHub,
just don't add it.

19
00:00:52.750 --> 00:00:55.310
Super early breaking edge tip,

20
00:00:55.310 --> 00:00:58.800
this might change in the near future
cuz people are working on other things,

21
00:00:58.800 --> 00:01:01.950
other alternatives that npm and
yarn that do things differently.

22
00:01:01.950 --> 00:01:04.180
And your are in NPMR,
the ones working on it.

23
00:01:04.180 --> 00:01:05.960
So, this might change in the future, but

24
00:01:05.960 --> 00:01:09.420
as of right now do not check
any of this stuff into GitHub.

25
00:01:09.420 --> 00:01:12.364
Do not check your modules into GitHub,

26
00:01:12.364 --> 00:01:16.508
just rely on the package.json and
you are good.

27
00:01:16.508 --> 00:01:20.788
To declare remote modules at
devDependencies, if you only need them

28
00:01:20.788 --> 00:01:25.680
to develop jest If only you need them to
develop with, so something like jest.

29
00:01:25.680 --> 00:01:29.905
So basically what that means is,
if we're gonna look at our tag as JSON,

30
00:01:29.905 --> 00:01:32.690
a devDependency is something like jest.

31
00:01:32.690 --> 00:01:36.790
We don't need jest for our code to run,
we just use jest to help us develop.

32
00:01:36.790 --> 00:01:38.420
That was a testing thing that we used.

33
00:01:38.420 --> 00:01:40.400
But our app doesn't need jest to run.

34
00:01:40.400 --> 00:01:42.870
So we make that a devDependency.

35
00:01:42.870 --> 00:01:46.920
And the reason why we do that is
when someone installs this module,

36
00:01:46.920 --> 00:01:50.160
NPM is gonna look at deDependencies inside
of this file and install those, and

37
00:01:50.160 --> 00:01:54.060
we don't want it installing Jest, cuz we
don't need Jest, so why even install it?

38
00:01:54.060 --> 00:01:55.850
Jest was only for us to test things.

39
00:01:55.850 --> 00:01:58.380
So things that you needed for
development purposes,

40
00:01:58.380 --> 00:02:00.520
you would add to the devDependencies.

41
00:02:00.520 --> 00:02:04.860
And the way you would do that is when you
install npm install whatever the name of

42
00:02:04.860 --> 00:02:05.384
the package.

43
00:02:05.384 --> 00:02:08.310
When you --save,
you do --save-dev instead.

44
00:02:08.310 --> 00:02:14.800
So if you just save dev it'll
install it to the devDependency.

45
00:02:14.800 --> 00:02:18.210
The short cut is -D with a capital D.

46
00:02:18.210 --> 00:02:19.040
That's also a shortcut.

47
00:02:19.040 --> 00:02:21.270
So that means like it's just
a development dependency.

48
00:02:21.270 --> 00:02:24.510
I actually don't need my users to
download this for this to work.

49
00:02:24.510 --> 00:02:25.820
I just use it to develop on.

50
00:02:25.820 --> 00:02:26.780
It's a tool that I use.

51
00:02:26.780 --> 00:02:27.950
It's a testing framework.

52
00:02:27.950 --> 00:02:31.320
It's' whatever you use to develop with.

53
00:02:31.320 --> 00:02:33.200
That's why it's called a dev dependency.

54
00:02:33.200 --> 00:02:34.600
A testing framework is a really good one.

55
00:02:34.600 --> 00:02:36.560
Or anything that involves tests.

56
00:02:36.560 --> 00:02:39.650
Mostly test stuff you would do that.

57
00:02:39.650 --> 00:02:44.510
The other things you would put
here would also be for instance,

58
00:02:44.510 --> 00:02:50.090
if you were creating a React package or

59
00:02:50.090 --> 00:02:52.510
something like that,
say you were creating a React component.

60
00:02:52.510 --> 00:02:53.510
And you wanted to bundle it up and

61
00:02:53.510 --> 00:02:58.020
send it to someone, you wouldn't want to
bundle React with your React package,

62
00:02:58.020 --> 00:03:00.780
because the person that's gonna
install it, it's gonna have React.

63
00:03:00.780 --> 00:03:02.590
So now, there's two versions of React.

64
00:03:02.590 --> 00:03:05.980
You don't want that, so you're just
gonna rely on their version of React.

65
00:03:05.980 --> 00:03:09.320
So in your code, you would just
require React as if it existed,

66
00:03:09.320 --> 00:03:12.040
because it does locally on your
machine because you installed it.

67
00:03:12.040 --> 00:03:15.280
But you need to make it a devDependency so

68
00:03:15.280 --> 00:03:16.760
it doesn't get installed
again on their machine.

69
00:03:16.760 --> 00:03:20.060
And then they would have to resolve
the different versions of React.

70
00:03:20.060 --> 00:03:21.600
If your module's relying
on this version but

71
00:03:21.600 --> 00:03:23.810
they're relying on this version
there will be a conflict.

72
00:03:23.810 --> 00:03:26.570
So you need to like okay,

73
00:03:26.570 --> 00:03:28.220
here's all the stuff that they're
going to have to install.

74
00:03:28.220 --> 00:03:30.510
Here's the stuff that I know,
I need to install.

75
00:03:30.510 --> 00:03:31.720
There's also a need for development.

76
00:03:31.720 --> 00:03:34.540
You got to think about that
the easy way to think about it is

77
00:03:35.630 --> 00:03:40.210
most of the time just make everything
a devDependency almost all the time.

78
00:03:40.210 --> 00:03:42.100
If you're like if you're
about to publish a module for

79
00:03:42.100 --> 00:03:44.130
someone to use this make
it a devDependencies.

80
00:03:44.130 --> 00:03:46.140
If you're using some other
module most of the time.

81
00:03:46.140 --> 00:03:47.680
There's some small things
that you can just say, yeah,

82
00:03:47.680 --> 00:03:48.790
I'm just gonna bundle this.

83
00:03:48.790 --> 00:03:51.300
But most of the time,
it's a bigger library, like Lodash, React,

84
00:03:51.300 --> 00:03:52.920
something like that, some framework.

85
00:03:52.920 --> 00:03:56.660
Make it depth dependency because
they're gonna use it on their end, and

86
00:03:56.660 --> 00:03:58.390
it's not your concern to bundle it.

87
00:03:58.390 --> 00:03:59.170
And you don't want to do that.

88
00:03:59.170 --> 00:04:00.560
You'll have conflicts.

89
00:04:00.560 --> 00:04:02.340
So that's mostly it for that.

90
00:04:04.190 --> 00:04:06.690
Although, again, NPM does try to fix this.

91
00:04:06.690 --> 00:04:10.440
They try to resolve different versions cuz
right now NPM, they store everything flat.

92
00:04:10.440 --> 00:04:12.930
So they'll try to like,
you got two versions of React.

93
00:04:12.930 --> 00:04:15.740
We'll try to resolve the right one and
store it flat.

94
00:04:15.740 --> 00:04:17.000
I wouldn't rely on NPM to do that.

95
00:04:17.000 --> 00:04:18.870
So just don't do it.

96
00:04:18.870 --> 00:04:22.550
People will do it and they always are not
gonna do it, so it's gonna happen.

97
00:04:25.479 --> 00:04:27.730
&gt;&gt; Scott Moss: Think about if
this is private or public.

98
00:04:27.730 --> 00:04:29.340
Can the rest of the world see this?

99
00:04:29.340 --> 00:04:31.200
Or is it just something for
you and your company?

100
00:04:31.200 --> 00:04:35.210
NPM allows you to publish private modules
and public modules, just like you have

101
00:04:35.210 --> 00:04:37.600
private repos and public repos in GitHub,
same thing with NPM.

102
00:04:37.600 --> 00:04:40.660
You can say, I wanna put it on NPM,
but it needs to be private.

103
00:04:40.660 --> 00:04:44.250
So that way they have to add afile
to the repos as talking in it and

104
00:04:44.250 --> 00:04:46.360
that's all capacity use for
every request so

105
00:04:46.360 --> 00:04:51.740
it can be private, so
use private modules for everything, yes?

106
00:04:51.740 --> 00:04:57.610
&gt;&gt; Speaker 2: So you know we've written
the module we don't wanna blow the code

107
00:04:57.610 --> 00:05:02.730
bases to the people who install it so
we just put Lodash and devDependencies.

108
00:05:02.730 --> 00:05:05.280
But what if everyone
follows that same rule and

109
00:05:05.280 --> 00:05:08.470
now, no one has put low dash
in the actual dependencies.

110
00:05:08.470 --> 00:05:11.260
&gt;&gt; Scott Moss: No but they have to because
at the end of the day, so these are for

111
00:05:11.260 --> 00:05:11.940
libraries.

112
00:05:11.940 --> 00:05:14.850
For libraries, you will just be putting
them in devDependencies eventually

113
00:05:14.850 --> 00:05:16.860
you're gonna make an app.

114
00:05:16.860 --> 00:05:19.150
And an app is never gonna be
installed into another app, right.

115
00:05:19.150 --> 00:05:20.260
An app is just an app.

116
00:05:20.260 --> 00:05:24.180
You're not gonna like Wrap an app up into
a module and put it on NPM, it's an app.

117
00:05:24.180 --> 00:05:24.710
It doesn't go.

118
00:05:24.710 --> 00:05:25.740
It gets deployed to Heroku.

119
00:05:25.740 --> 00:05:27.850
It gets deployed to some CDN.

120
00:05:27.850 --> 00:05:29.840
So that's when you don't
need devDependencies, so

121
00:05:29.840 --> 00:05:31.900
you will have to install
Lodash at that point.

122
00:05:31.900 --> 00:05:32.960
So that's where it matters.

123
00:05:32.960 --> 00:05:35.090
Because eventually,
somebody's gonna use an app.

124
00:05:35.090 --> 00:05:37.740
And if they use an app,
you have to install everything.

125
00:05:37.740 --> 00:05:39.000
So yeah, that's what happens.

