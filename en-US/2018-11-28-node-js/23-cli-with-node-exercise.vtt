WEBVTT

1
00:00:00.040 --> 00:00:03.345
&gt;&gt; Scott Moss: So now that we're done with
that, we're gonna talk about Exercise 3,

2
00:00:03.345 --> 00:00:05.414
and you're gonna be
creating a CLI program.

3
00:00:05.414 --> 00:00:07.942
So CLI program is short for
command line interface,

4
00:00:07.942 --> 00:00:10.192
very similar to all
the tools we just used now.

5
00:00:10.192 --> 00:00:15.213
When we typed in node or we typed in NPM,
or we typed in YARN, those are all CLIs.

6
00:00:15.213 --> 00:00:18.850
You're gonna create one of those,
you're gonna make your own.

7
00:00:18.850 --> 00:00:21.342
And basically what it's gonna
do is it's gonna save and

8
00:00:21.342 --> 00:00:23.206
retrieve contacts from an address book.

9
00:00:23.206 --> 00:00:26.428
The program is partially there,
so it's almost done, but

10
00:00:26.428 --> 00:00:30.886
you must install some remote modules and
use the file system to get things to work.

11
00:00:30.886 --> 00:00:34.378
So there's gonna be some modules in there
that you have no idea how to use, and

12
00:00:34.378 --> 00:00:37.310
I built the app in a way that you
don't need to know how they work.

13
00:00:37.310 --> 00:00:39.547
Honestly, the work there
is already done for you.

14
00:00:39.547 --> 00:00:41.939
If you're curious of how they work,
you can go look them up and

15
00:00:41.939 --> 00:00:44.011
I can show you on the solution
of what they're doing.

16
00:00:44.011 --> 00:00:46.663
But most of the time I built it so
you don't need to know what they're doing.

17
00:00:46.663 --> 00:00:48.071
So just get that part out of your mind,

18
00:00:48.071 --> 00:00:49.751
like I have no idea what
that thing's doing?

19
00:00:49.751 --> 00:00:50.719
That's fine, you don't need to know.

20
00:00:50.719 --> 00:00:54.133
You just need to install it,
[LAUGH] and let it do its job.

21
00:00:54.133 --> 00:00:56.172
And then you need to do some
stuff with the file system, so

22
00:00:56.172 --> 00:00:57.331
I'm gonna walk you through it.

23
00:00:57.331 --> 00:01:00.392
But basically, checkout to the start
branch, again, if you have it,

24
00:01:00.392 --> 00:01:01.727
if you're on another branch.

25
00:01:01.727 --> 00:01:03.515
Install all your remote modules.

26
00:01:03.515 --> 00:01:06.560
I just showed you how to do that with NPM,
so just make sure you install everything.

27
00:01:06.560 --> 00:01:10.734
You can just do that with
one command with NPM.

28
00:01:10.734 --> 00:01:12.817
Check the README on how to run your CLI.

29
00:01:12.817 --> 00:01:15.790
There's some instructions
in there on how to run it.

30
00:01:15.790 --> 00:01:17.529
And then you need to fix the CLI so

31
00:01:17.529 --> 00:01:21.340
that the new command works by saving
contacts to the contacts.json.

32
00:01:21.340 --> 00:01:25.300
And you need to fix the CLI so that the
list command works by listing all contacts

33
00:01:25.300 --> 00:01:29.022
and allowing you to select one,
then it prints out the selected contact.

34
00:01:29.022 --> 00:01:31.979
So I'm gonna walk you through all that
cuz that just sounds like crazy stuff.

35
00:01:31.979 --> 00:01:34.996
So let me just stash.

36
00:01:34.996 --> 00:01:37.211
All right,
now I'm good with this, hold on.

37
00:01:37.211 --> 00:01:38.301
Yeah, we're good.

38
00:01:38.301 --> 00:01:42.321
So if we go look at the exercise,
if you look at the README,

39
00:01:42.321 --> 00:01:45.291
the README has more instructions on here.

40
00:01:45.291 --> 00:01:47.867
So right here, the CLI.

41
00:01:47.867 --> 00:01:50.240
The location is exercises/cli.

42
00:01:50.240 --> 00:01:52.283
These are commands that you can run for
this exercise.

43
00:01:52.283 --> 00:01:55.963
So always have these in the README,
put this on preview.

44
00:01:59.341 --> 00:02:00.453
&gt;&gt; Scott Moss: There we go.

45
00:02:01.827 --> 00:02:03.863
&gt;&gt; Scott Moss: So
we're gonna run these two commands.

46
00:02:03.863 --> 00:02:09.657
So if you type in this node
exercises/cli/index.js,

47
00:02:09.657 --> 00:02:11.593
why did it do that?

48
00:02:11.593 --> 00:02:15.358
New, you run this command,
it'll try to run that CLI command,

49
00:02:15.358 --> 00:02:19.053
just like if you type in npm install,
this is running your CLI,

50
00:02:19.053 --> 00:02:22.647
which doesn't have a name yet
and then the new command on it.

51
00:02:22.647 --> 00:02:24.694
I created a command called new.

52
00:02:24.694 --> 00:02:26.515
If you want to run the list command,

53
00:02:26.515 --> 00:02:29.569
you would type this in followed
by the command called list.

54
00:02:29.569 --> 00:02:34.078
Because the CLI doesn't have a name yet
we have to type in this full path and

55
00:02:34.078 --> 00:02:35.552
put node in front of it.

56
00:02:35.552 --> 00:02:39.517
If we were to package this up, we would
give this CLI a name like address book,

57
00:02:39.517 --> 00:02:42.461
and then we can say address book new,
address book list.

58
00:02:42.461 --> 00:02:43.497
But we're not doing that.

59
00:02:43.497 --> 00:02:45.198
That's complicated, that's later on.

60
00:02:45.198 --> 00:02:49.390
We're gonna just do what we know how to
do, we put node in front of a JS file,

61
00:02:49.390 --> 00:02:50.270
we execute it.

62
00:02:50.270 --> 00:02:52.944
The only difference that we're doing
now is we're passing an argument called

63
00:02:52.944 --> 00:02:53.601
new, that's it.

64
00:02:53.601 --> 00:02:58.256
And you're gonna see in the code how we
use something like process to get that

65
00:02:58.256 --> 00:03:01.035
stuff, and
there's a lot of tools in there.

66
00:03:01.035 --> 00:03:05.522
So you got to get these
two commands to work.

67
00:03:05.522 --> 00:03:08.640
The new command,
&gt;&gt; Scott Moss: When it works,

68
00:03:08.640 --> 00:03:12.567
it's going to ask you a couple questions
actually in a prompt about a first name,

69
00:03:12.567 --> 00:03:15.718
a last name and a phone number,
and it's gonna save it to a file.

70
00:03:15.718 --> 00:03:19.456
The list command is just going to
list all the contacts in a file.

71
00:03:19.456 --> 00:03:21.663
Once you got those two things working,
you're good.

72
00:03:21.663 --> 00:03:23.574
What you need to fix is going to be this.

73
00:03:23.574 --> 00:03:28.567
So we're going to exercises &gt; modules,
&gt;&gt; Scott Moss: cli,

74
00:03:28.567 --> 00:03:30.373
there's a couple things in here.

75
00:03:30.373 --> 00:03:34.340
So one, you'll see a contacts.json, your's
will probably just be like an empty, or

76
00:03:34.340 --> 00:03:36.927
actually it might have some
of these stuff already in it.

77
00:03:36.927 --> 00:03:38.033
If not, it doesn't matter,

78
00:03:38.033 --> 00:03:40.129
as long as there's a JSON
object in there you're good.

79
00:03:40.129 --> 00:03:42.563
And the file has to be there,
which it should be, so you should be good.

80
00:03:42.563 --> 00:03:45.287
This is just some fake stuff in there.

81
00:03:45.287 --> 00:03:47.377
Then you'll see an index.js.

82
00:03:47.377 --> 00:03:50.734
This is the code that I
say doesn't really matter.

83
00:03:50.734 --> 00:03:55.478
So once you get to the point where you
just install modules all the time,

84
00:03:55.478 --> 00:04:00.477
you have to let the code do its job and
just trust that it's gonna do its job.

85
00:04:00.477 --> 00:04:02.518
And if it doesn't do its job,
just don't use that module.

86
00:04:02.518 --> 00:04:04.784
So trust that this
code's gonna do its job.

87
00:04:04.784 --> 00:04:09.897
The thing that you're gonna have to
do is really nothing in this file.

88
00:04:09.897 --> 00:04:11.561
This file's pretty much good to go.

89
00:04:11.561 --> 00:04:14.728
But there's some modules here, you can
see it says install any missing modules.

90
00:04:14.728 --> 00:04:17.422
There's some modules here,
commander, inquirer,

91
00:04:17.422 --> 00:04:21.648
that just might not be installed, so maybe
just install those if they're not there.

92
00:04:21.648 --> 00:04:24.470
Otherwise you'll get an error
saying can't find this module, and

93
00:04:24.470 --> 00:04:26.112
you'll know exactly what to install.

94
00:04:26.112 --> 00:04:30.610
But what you're going to be doing is in
the utils folder there are two functions,

95
00:04:30.610 --> 00:04:34.730
getContacts and saveContacts, and
there's descriptions above them.

96
00:04:34.730 --> 00:04:38.876
getContacts should read the contacts
at the contactsLocation path,

97
00:04:38.876 --> 00:04:42.115
which is here, and
convert it to a JavaScript object.

98
00:04:42.115 --> 00:04:44.605
So this is a JSON file, so
you need to convert it to JavaScript.

99
00:04:44.605 --> 00:04:46.747
I know you know how to do
that if you write JavaScript.

100
00:04:46.747 --> 00:04:49.252
There's a function that converts
JSON to JavaScript and vice versa.

101
00:04:49.252 --> 00:04:53.026
So you need to do that in getContacts and
then return that object, and

102
00:04:53.026 --> 00:04:54.927
saveContacts does the opposite.

103
00:04:54.927 --> 00:04:58.399
It takes a contacts object,
converts it to JSON and

104
00:04:58.399 --> 00:05:03.157
saves it to the,
&gt;&gt; Scott Moss: contactsLocation path.

105
00:05:03.157 --> 00:05:07.118
So you're gonna have to use
the file system for this.

106
00:05:07.118 --> 00:05:09.622
So I talked about file system,
write file and read file,

107
00:05:09.622 --> 00:05:11.093
I can bring that example back up.

108
00:05:11.093 --> 00:05:14.383
We're most likely going to
have to use those to write and

109
00:05:14.383 --> 00:05:16.004
read from the file system.

110
00:05:16.004 --> 00:05:18.836
And for now just use
the synchronous version of those.

111
00:05:18.836 --> 00:05:21.802
If you want to get Async and
get fancy, be my guest, but

112
00:05:21.802 --> 00:05:24.267
I would stick with the sync methods for
that.

113
00:05:24.267 --> 00:05:28.587
And that's what you gotta do,
and once you do that, again,

114
00:05:28.587 --> 00:05:32.909
run those commands in the README,
that look just like this,

115
00:05:32.909 --> 00:05:38.800
node exercises/cli/index.js new,
node exercises/cli/index.js list.

116
00:05:38.800 --> 00:05:41.171
And you'll know when they're working,
cuz they won't error out.

117
00:05:41.171 --> 00:05:44.602
[LAUGH] If they error out,
then they're not working.

118
00:05:44.602 --> 00:05:45.723
So that's what you're gonna be doing.

119
00:05:45.723 --> 00:05:51.010
So it's 2 o'clock now, we'll come back
at 2:30 and we'll continue to move.

120
00:05:51.010 --> 00:05:54.068
And I'll go back to the example
of the file systems,

121
00:05:54.068 --> 00:05:58.666
I'm sure everybody probably wants to see
some of that, that I might have had.

122
00:05:58.666 --> 00:06:04.523
So you had something like fs.writefile.

123
00:06:06.634 --> 00:06:08.153
&gt;&gt; Scott Moss: Sync, and
again, the documentation,

124
00:06:08.153 --> 00:06:09.948
Node documentation's a great place for
this.

125
00:06:09.948 --> 00:06:14.302
I need fs.read, I'm not doing anything
that's not there, readFileSync.

126
00:06:14.302 --> 00:06:18.713
So write writeFileSync
takes in a path somewhere,

127
00:06:18.713 --> 00:06:23.030
so like lib.js,
&gt;&gt; Scott Moss: And

128
00:06:23.030 --> 00:06:26.386
then the string to save, right?

129
00:06:26.386 --> 00:06:30.192
And then readfile takes
in a path somewhere.

130
00:06:30.192 --> 00:06:33.031
And that's it, it'll return it.

131
00:06:33.031 --> 00:06:35.577
You can probably get away with this
exercise with just those two methods.

