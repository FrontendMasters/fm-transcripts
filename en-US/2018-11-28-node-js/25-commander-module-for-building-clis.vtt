WEBVTT

1
00:00:00.620 --> 00:00:04.110
&gt;&gt; Scott Moss: Cool, so
I'll just go briefly into this file.

2
00:00:04.110 --> 00:00:07.940
This is using one of many CLI program
tools out there called commander.

3
00:00:07.940 --> 00:00:14.420
Commander's pretty legit, but
basically it is a hackaround process.

4
00:00:14.420 --> 00:00:18.220
So remember I said I almost never
write an app that doesn't use process?

5
00:00:18.220 --> 00:00:20.260
Even though you didn't
use process directly,

6
00:00:20.260 --> 00:00:22.550
the Node module that you
installed did use it.

7
00:00:22.550 --> 00:00:25.438
Because process has got so
much good information on it,

8
00:00:25.438 --> 00:00:27.779
the one that's important
here is this argv.

9
00:00:27.779 --> 00:00:28.932
If you would've logged this out,

10
00:00:28.932 --> 00:00:31.216
it's just an array of all the arguments
that you passed in, right?

11
00:00:31.216 --> 00:00:35.477
So if I were to do something like this,
&gt;&gt; Scott Moss: So argv,

12
00:00:35.477 --> 00:00:42.330
I would just log that, and then rerun this
command, and pass in some more stuff here.

13
00:00:42.330 --> 00:00:45.330
Actually, it might break cuz, there it is.

14
00:00:45.330 --> 00:00:48.950
So yeah, you can see this
array is all the arguments.

15
00:00:48.950 --> 00:00:53.460
The first one is always gonna be
the path to the executable node itself.

16
00:00:53.460 --> 00:00:55.450
That's always gonna be the first
argument in the array.

17
00:00:55.450 --> 00:00:58.311
The second argument is always gonna be
the path to the file that's currently

18
00:00:58.311 --> 00:00:58.812
executing.

19
00:00:58.812 --> 00:01:01.617
And then everything after that are gonna
be whatever you passed in in that order.

20
00:01:01.617 --> 00:01:05.302
So you can see, I passed in new, then I
passed in thing, then I passed in hello,

21
00:01:05.302 --> 00:01:07.150
then I passed in this stuff.

22
00:01:07.150 --> 00:01:08.960
That's what happened here.

23
00:01:10.260 --> 00:01:13.420
So this is how you can capture
arguments from a CLI, and

24
00:01:13.420 --> 00:01:18.510
the commander module just did all that for
you.

25
00:01:18.510 --> 00:01:21.941
It knew what it was doing, and
it allowed you to create commands and

26
00:01:21.941 --> 00:01:23.731
have aliases with descriptions.

27
00:01:23.731 --> 00:01:27.139
And it helps you build a full CLI,
this is just one of many.

28
00:01:27.139 --> 00:01:29.666
This is why I said it's not important
that you don't need to know what this is

29
00:01:29.666 --> 00:01:30.466
because you didn't.

30
00:01:30.466 --> 00:01:33.550
You didn't need to know what this
was in order to do your job.

31
00:01:33.550 --> 00:01:38.573
But that's what this does, and it allows
you to create CLIs with flags and

32
00:01:38.573 --> 00:01:43.858
arguments and then execute some type
of action when those arguments are ran.

33
00:01:43.858 --> 00:01:47.496
And that's what this command does, there's
tons of these out there that do this.

34
00:01:47.496 --> 00:01:50.770
Inquirer is basically, it's

35
00:01:50.770 --> 00:01:54.360
the part of the CLI that had the prompts
that was asking you questions and stuff.

36
00:01:54.360 --> 00:01:55.720
That's what inquirer does.

37
00:01:55.720 --> 00:01:57.410
So if you were to look in this other file,

38
00:01:57.410 --> 00:02:01.690
you might see something called prompts,
and it's an array of prompts.

39
00:02:01.690 --> 00:02:03.010
That's basically what that does.

40
00:02:03.010 --> 00:02:05.970
It allows you to have that
interactive CLI experience.

41
00:02:05.970 --> 00:02:08.534
So if you can think of it,
you can do it in Node.

42
00:02:08.534 --> 00:02:12.390
I mean,
when I was teaching people how to code,

43
00:02:12.390 --> 00:02:16.710
I used to have this script that
hooked into the testing framework.

44
00:02:16.710 --> 00:02:21.402
And if they passed every single test,
a unicorn would pop up with glitter and

45
00:02:21.402 --> 00:02:21.924
stuff.

46
00:02:21.924 --> 00:02:24.159
Just [LAUGH] if you can think of it,
you can make it.

47
00:02:24.159 --> 00:02:27.850
There's literally anything you can do,
so it's pretty cool.

48
00:02:27.850 --> 00:02:30.486
Or I would have like if somebody
got all the tests wrong,

49
00:02:30.486 --> 00:02:33.850
or if they got them all right on
the first time, it'll load up Matrix and

50
00:02:33.850 --> 00:02:36.580
just sprinkle on their
screen the Matrix stuff.

51
00:02:36.580 --> 00:02:39.270
Cuz they were Neo and
they got it right the first time.

52
00:02:39.270 --> 00:02:41.240
So it was just a lot of stuff like that.

