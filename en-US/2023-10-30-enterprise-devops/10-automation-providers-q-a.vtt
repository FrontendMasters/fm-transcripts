WEBVTT

1
00:00:00.000 --> 00:00:04.026
Where do tools like
Ansible fit into all this?

2
00:00:04.026 --> 00:00:08.356
&gt;&gt; So Ansible is configuration focused,
right?

3
00:00:08.356 --> 00:00:13.949
Ansible is what you run after
everything's already been provisioned.

4
00:00:13.949 --> 00:00:18.415
And Ansible is really just
about what we said earlier,

5
00:00:18.415 --> 00:00:23.271
who can change the values or
configurations in services and

6
00:00:23.271 --> 00:00:26.881
other parts of my infrastructure, right?

7
00:00:26.881 --> 00:00:31.794
Ansible can do a lot of things
however I would strongly urge you

8
00:00:31.794 --> 00:00:35.397
to not use Ansible as
a one off solution tool.

9
00:00:35.397 --> 00:00:40.115
The biggest reason for that is
because then Ansible just becomes bash

10
00:00:40.115 --> 00:00:43.773
scripts [LAUGH] at the end of the day,
it really does and

11
00:00:43.773 --> 00:00:47.675
you know it equally with bash
scripts can be very flimsy or

12
00:00:47.675 --> 00:00:51.684
very effective depending on
how well you implement them.

13
00:00:51.684 --> 00:00:56.750
At Hippo, we do use Ansible but
we only use it for service configuration.

14
00:00:56.750 --> 00:00:57.622
That's it.

15
00:00:57.622 --> 00:01:02.315
So Ansible role will run against our
service configs and update everything.

16
00:01:02.315 --> 00:01:07.954
It doesn't create anything, it doesn't
delete anything, it doesn't move anything,

17
00:01:07.954 --> 00:01:13.085
it just takes values that already exists
and changes them if they need to, right?

18
00:01:13.085 --> 00:01:17.775
I don't really use Ansible that much
anymore these days to be honest,

19
00:01:17.775 --> 00:01:21.272
cloud providers and
automation tools have gotten so

20
00:01:21.272 --> 00:01:26.038
good now in a lot of ways where most
of the stuff and expectations that you

21
00:01:26.038 --> 00:01:30.434
need are already there, so
you just don't really need to use it.

22
00:01:30.434 --> 00:01:35.415
I would say be careful with what
you want to do with Ansible and

23
00:01:35.415 --> 00:01:39.916
try and like even with this,
focus one thing at a time.

24
00:01:39.916 --> 00:01:43.238
[LAUGH] You can use Ansible
to setup your dot files,

25
00:01:43.238 --> 00:01:48.787
like your developer environment if you
really want it to, Ansible is so flexible.

26
00:01:48.787 --> 00:01:53.634
Just try and keep that focus because
again, it's kind of a wonder tool, and

27
00:01:53.634 --> 00:01:55.626
you don't need a wonder tool.

28
00:01:55.626 --> 00:01:59.509
[LAUGH] Okay, any other questions?

29
00:02:02.648 --> 00:02:07.502
&gt;&gt; Does Ansible make sense for
on-premise cases?

30
00:02:07.502 --> 00:02:10.044
&gt;&gt; I think the only thing
Ansible really makes sense for

31
00:02:10.044 --> 00:02:13.796
us is if you're a single person trying
to connect to a bunch of things at once,

32
00:02:13.796 --> 00:02:15.908
because that's just really what it does.

33
00:02:15.908 --> 00:02:20.899
If you are an individual who's
managing a bunch of on prem stuff,

34
00:02:20.899 --> 00:02:25.890
and you want to at least get some
automation started, then yeah,

35
00:02:25.890 --> 00:02:29.640
actually, I think it's
a great place to start.

36
00:02:29.640 --> 00:02:33.187
Because you probably already
have SSH in place, right?

37
00:02:33.187 --> 00:02:37.664
You probably already have some basic stuff
there, but you don't wanna have to manage

38
00:02:37.664 --> 00:02:40.850
all these other things yet,
then that sure that could help.

39
00:02:40.850 --> 00:02:45.470
But that also might mean that your on
prem solution doesn't have really great

40
00:02:45.470 --> 00:02:47.260
automation API's, right?

41
00:02:47.260 --> 00:02:49.334
And you might have to do
more manual stuff, so

42
00:02:49.334 --> 00:02:51.360
I could see where Ansible
could help there.

43
00:02:51.360 --> 00:02:54.247
&gt;&gt; To build on Luke's question,

44
00:02:54.247 --> 00:03:00.806
can one use Terraform Pulumi to
manage self hosted on prem resources.

45
00:03:00.806 --> 00:03:02.267
&gt;&gt; So Terraform and

46
00:03:02.267 --> 00:03:08.329
Pulumi are going to require on
a provider already existing, right?

47
00:03:08.329 --> 00:03:12.980
So when I told you guys before I
used to run my own on prem stuff,

48
00:03:12.980 --> 00:03:19.168
I ran something called VM Ware V Center,
V center does have a Terraform provides.

49
00:03:19.168 --> 00:03:22.170
So that gave me the ability
to write Terraform code and

50
00:03:22.170 --> 00:03:23.846
create my resources with it.

51
00:03:23.846 --> 00:03:25.542
But if there's not a provider for it,

52
00:03:25.542 --> 00:03:28.199
unfortunately you can't use
the automation tool, yeah.

53
00:03:28.199 --> 00:03:30.784
That's when Ansible would come in for
sure.

54
00:03:30.784 --> 00:03:33.780
There's this automation that's
creating these things for you, right?

55
00:03:33.780 --> 00:03:38.295
But it has to have access to a lot of
permissions to be able to do that, just to

56
00:03:38.295 --> 00:03:43.555
make sure that you don't create and delete
everything underneath the world, right?

57
00:03:43.555 --> 00:03:47.597
And so I believe what they're saying is,
how do you make it so

58
00:03:47.597 --> 00:03:52.537
that if this is creating a network,
it can only create a network, right?

59
00:03:52.537 --> 00:03:57.475
It can't also touch lambdas or EC2s or
other things like that, right?

60
00:03:57.475 --> 00:03:59.141
Like how do you do that?

61
00:03:59.141 --> 00:04:02.955
That's honestly that's
a tough problem to solve.

62
00:04:02.955 --> 00:04:04.996
It really is.

63
00:04:04.996 --> 00:04:10.550
&gt;&gt; You said exactly that's my
&gt;&gt; Yeah, we have not solved that at HIPAA,

64
00:04:10.550 --> 00:04:15.011
[LAUGH] we just have a global admin key,
yeah.

65
00:04:15.011 --> 00:04:16.375
Why?

66
00:04:16.375 --> 00:04:21.245
Because it's so hard to predict
like what's the next thing.

67
00:04:21.245 --> 00:04:24.285
And we found ourselves
like what they said.

68
00:04:24.285 --> 00:04:28.517
Okay, now we got to add these permissions
and these permissions, and it's dude,

69
00:04:28.517 --> 00:04:29.129
no, okay?

70
00:04:29.129 --> 00:04:31.104
Terraform, you just manage everything,
okay?

71
00:04:31.104 --> 00:04:33.210
We trust you, just do it.

72
00:04:35.320 --> 00:04:37.203
Security might not like you though.

73
00:04:37.203 --> 00:04:41.595
[LAUGH] The security team might not
like that you're doing that though,

74
00:04:41.595 --> 00:04:44.154
but when if you wanted to really argue it,

75
00:04:44.154 --> 00:04:47.760
you could just say that it's
about saving time for money.

76
00:04:47.760 --> 00:04:51.891
How many hours do you want us to spend
every time we change a permission

77
00:04:51.891 --> 00:04:53.245
trying to figure out,

78
00:04:53.245 --> 00:04:57.897
we have to collaborate on that, you got
to tell me what permissions you need.

79
00:04:57.897 --> 00:04:59.559
I don't think it's valuable.

80
00:04:59.559 --> 00:05:03.707
I think what you should do instead is
focus on your security of your keys as

81
00:05:03.707 --> 00:05:05.145
well as your rotations.

82
00:05:05.145 --> 00:05:07.427
For me, I'm not really worried about keys,

83
00:05:07.427 --> 00:05:09.900
as long as I can rotate it
as quickly as possible.

84
00:05:09.900 --> 00:05:15.320
So, a good example of this, Circle CI
had a data breach about a year ago.

85
00:05:15.320 --> 00:05:19.755
I don't know if anyone had heard about
this, but it was huge to the point where

86
00:05:19.755 --> 00:05:23.931
Amazon even stepped in because so
many companies did exactly what we do.

87
00:05:23.931 --> 00:05:28.939
They just set up their Circle CI to
have access to everything, right?

88
00:05:28.939 --> 00:05:34.624
And so when that outage happened,
Circle CI actually had to go to Amazon and

89
00:05:34.624 --> 00:05:38.594
then they work together so
that Amazon would go in and

90
00:05:38.594 --> 00:05:42.491
reset all of the keys that were exploited,
right?

91
00:05:42.491 --> 00:05:45.620
Yeah, I mean it's tough.

92
00:05:45.620 --> 00:05:50.100
It's not fun and
what our takeaway from that was is maybe

93
00:05:50.100 --> 00:05:53.639
don't store secrets in Circle CI anymore.

94
00:05:53.639 --> 00:06:00.071
[LAUGH] That was our takeaway there,
it really was.

95
00:06:00.071 --> 00:06:03.549
So yeah,
it's got to be an organizational decision.

96
00:06:03.549 --> 00:06:06.839
And you need to be aware of
the decision you make, yeah.

97
00:06:06.839 --> 00:06:13.190
But for us we just said, just given access
to everything it's a specific key only.

98
00:06:13.190 --> 00:06:15.048
It's kinda like the Coca Cola recipe,

99
00:06:15.048 --> 00:06:18.666
only two people know it exists, [LAUGH]
only two people know how to access it.

100
00:06:18.666 --> 00:06:22.480
So keep it locked down, yeah.

101
00:06:22.480 --> 00:06:23.561
Any other questions?

102
00:06:23.561 --> 00:06:27.578
Yeah.
&gt;&gt; Are these, like this approach is this

103
00:06:27.578 --> 00:06:32.817
well defined enough or
mature enough that you can switch

104
00:06:32.817 --> 00:06:37.832
cloud providers easily enough or
is that are you still

105
00:06:37.832 --> 00:06:42.418
fairly locked into to
&gt;&gt; You mean the automation providers?

106
00:06:42.418 --> 00:06:46.481
&gt;&gt; Right, so if you have automation
providers, could you switch from Amazon to

107
00:06:46.481 --> 00:06:47.948
&gt;&gt; Yeah, absolutely.

108
00:06:47.948 --> 00:06:51.655
&gt;&gt; Almost seamlessly or is it
&gt;&gt; Well, so if you wanted to

109
00:06:51.655 --> 00:06:56.650
move from like Amazon to Google, you'd
have to create the resources for that.

110
00:06:56.650 --> 00:07:00.653
But what's nice about these providers
is they can talk to any of them.

111
00:07:00.653 --> 00:07:02.471
It's not just Amazon or whatever.

112
00:07:02.471 --> 00:07:06.170
So we gonna go over this in
the course a little later, but

113
00:07:06.170 --> 00:07:10.816
if you modularize it well enough,
you could have a module for Amazon,

114
00:07:10.816 --> 00:07:15.337
a module for Google, and
then just have Terraform run all of those.

115
00:07:15.337 --> 00:07:20.240
&gt;&gt; Do you recommend infrastructure as code
for database provisioning and management?

116
00:07:24.658 --> 00:07:29.274
&gt;&gt; So that's something I thought about
adding in this course, but because of so

117
00:07:29.274 --> 00:07:31.841
much we have to do,
I ended up not doing it.

118
00:07:31.841 --> 00:07:38.959
In that section, yes,
separate them though.

119
00:07:38.959 --> 00:07:42.922
Create your databases in one automation
pipeline and then create your, I'm sorry,

120
00:07:42.922 --> 00:07:45.400
create your instances in
one automation pipeline and

121
00:07:45.400 --> 00:07:47.289
then create your databases in another.

122
00:07:47.289 --> 00:07:48.628
Why?

123
00:07:48.628 --> 00:07:53.699
Well, because this can
then depend on this.

124
00:07:53.699 --> 00:07:58.319
So if you need to change this,
you don't have to change this too.

125
00:07:58.319 --> 00:08:02.094
Whereas, if you bind them together, then
not only does Terraform have to change

126
00:08:02.094 --> 00:08:05.258
your instance, it also has to be
able to access it and connect to it,

127
00:08:05.258 --> 00:08:08.888
which then makes it even more challenging
for the pipeline to be able to do so.

128
00:08:08.888 --> 00:08:11.715
Then we go back to permissions and
things like that.

129
00:08:11.715 --> 00:08:17.475
That container now can do more things,
whereas we say, okay, here's the Terraform

130
00:08:17.475 --> 00:08:22.599
for our RDS instances, here's
the Terraform for our Postgres databases.

131
00:08:22.599 --> 00:08:26.823
And this just takes a value of
what the RDS instance URL is, and

132
00:08:26.823 --> 00:08:29.594
just connects to it and runs it, right?

133
00:08:29.594 --> 00:08:33.253
So over here, I can change the database
URL, have all the same automation and

134
00:08:33.253 --> 00:08:36.031
have it run against a new database or
something like that.

135
00:08:36.031 --> 00:08:39.108
So I do think it's important
to just separate those two.

136
00:08:39.108 --> 00:08:42.578
That is what I do I have a workspace for
all my RDS instances and

137
00:08:42.578 --> 00:08:45.920
then I have a workspace for
my databases and stuff, yeah.

