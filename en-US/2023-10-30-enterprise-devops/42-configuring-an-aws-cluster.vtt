WEBVTT

1
00:00:00.200 --> 00:00:06.582
So we're gonna go to our
cluster repository, right?

2
00:00:06.582 --> 00:00:10.794
And again,
I would recommend in the browser going to

3
00:00:10.794 --> 00:00:14.061
the cluster repository for the course.

4
00:00:14.061 --> 00:00:18.559
So that's gonna be aws-cluster.

5
00:00:27.525 --> 00:00:29.691
And do the exact same thing before.

6
00:00:29.691 --> 00:00:34.100
We're gonna to our branch,
setup AWS automation, okay?

7
00:00:34.100 --> 00:00:38.395
So again, the branches match so
that you know you're on the right thing.

8
00:00:38.395 --> 00:00:43.211
So eci-terraform-aws-cluster, right?

9
00:00:43.211 --> 00:00:47.127
And then, I'm gonna do the exact same
thing I did before, data, lb, main,

10
00:00:47.127 --> 00:00:48.714
user_data, and variables.

11
00:00:48.714 --> 00:00:49.934
We're gonna create all these.

12
00:00:49.934 --> 00:00:55.236
It's a new file, data.tf.

13
00:00:55.236 --> 00:00:56.668
And I'm just gonna create
them all right now.

14
00:00:56.668 --> 00:01:01.924
So I have lb.tf, main.tf,

15
00:01:01.924 --> 00:01:07.936
and Variables.tf.

16
00:01:07.936 --> 00:01:12.191
Now, I'm using something called nnn,

17
00:01:12.191 --> 00:01:16.708
which is a very nice
file viewer in the CLI.

18
00:01:16.708 --> 00:01:20.246
But you can also just do touch,
and then the name to create those.

19
00:01:20.246 --> 00:01:22.226
So it's either of the two,
whichever you want.

20
00:01:22.226 --> 00:01:28.521
So data, Copy, paste, right?

21
00:01:31.229 --> 00:01:37.891
Lb, Copy, paste,

22
00:01:37.891 --> 00:01:45.469
main, Copy, paste.

23
00:01:45.469 --> 00:01:47.250
And I forgot the user data.

24
00:01:47.250 --> 00:01:51.397
I think, new file user_data.tpl.

25
00:01:51.397 --> 00:01:56.146
Now this is the unique one file that
is different than all the other files,

26
00:01:56.146 --> 00:02:01.829
because this is an actual template that's
gonna get injected into our EC2 instances.

27
00:02:01.829 --> 00:02:04.236
So just note that this
is actually a template.

28
00:02:04.236 --> 00:02:06.042
You don't need to change
anything in this file.

29
00:02:06.042 --> 00:02:08.565
[LAUGH] Just copy and paste it directly,

30
00:02:08.565 --> 00:02:12.245
it knows how to take care of
the terraform that it passes.

31
00:02:12.245 --> 00:02:17.315
So we do that, and
then we go to variables.

32
00:02:17.315 --> 00:02:19.814
Let me copy variables.

33
00:02:19.814 --> 00:02:24.434
Now I'm gonna stop here because I
wanna show you the variables for

34
00:02:24.434 --> 00:02:26.034
the cluster, right?

35
00:02:26.034 --> 00:02:30.948
We looked at the variables for the service
and we said, okay, well, we've got AZs,

36
00:02:30.948 --> 00:02:36.012
we've got cider block, we've got other
things, right, but what about our cluster?

37
00:02:36.012 --> 00:02:38.385
What is our cluster care about, right?

38
00:02:38.385 --> 00:02:42.347
Well, for starters, a cluster is actually
gonna care about the domain we're on.

39
00:02:42.347 --> 00:02:43.835
Why is it gonna care about that?

40
00:02:43.835 --> 00:02:46.989
Because our cluster manages
all of our load balancing,

41
00:02:46.989 --> 00:02:49.752
all of our ingress rules for
our load balancers.

42
00:02:49.752 --> 00:02:54.702
And so it won't know what domain you're
trying to route to unless it is a part of

43
00:02:54.702 --> 00:02:56.810
the actual automation, right?

44
00:02:56.810 --> 00:02:59.633
So that's gonna be the first thing
we're gonna add is our domain.

45
00:02:59.633 --> 00:03:03.767
Now again, don't worry about actually
making defaults or anything like that,

46
00:03:03.767 --> 00:03:05.298
right, just keep it as it is.

47
00:03:05.298 --> 00:03:06.765
The next one is environment.

48
00:03:06.765 --> 00:03:08.772
This one is probably pretty
straightforward, right?

49
00:03:08.772 --> 00:03:12.235
This is a cluster for
a specific environment.

50
00:03:12.235 --> 00:03:16.164
Now you might be like, hey, Eric, why?

51
00:03:16.164 --> 00:03:18.168
[LAUGH] You don't have to.

52
00:03:18.168 --> 00:03:19.779
If you don't want to, you don't have to.

53
00:03:19.779 --> 00:03:22.383
The nice thing about ECS
clusters is they're free,

54
00:03:22.383 --> 00:03:24.938
because they're not actually anything,
right?

55
00:03:24.938 --> 00:03:29.095
You pay for the EC2 instances,
not the ECS clusters.

56
00:03:29.095 --> 00:03:31.404
So in this scenario,
you could have a cluster,

57
00:03:31.404 --> 00:03:35.271
they're kind of like folders in a bit of
a way, where you could have a cluster for

58
00:03:35.271 --> 00:03:37.964
dev, a cluster for staging,
a cluster for whatever.

59
00:03:37.964 --> 00:03:41.992
And that's the paradigm that we're
essentially doing here, right?

60
00:03:41.992 --> 00:03:43.625
Then we have instance type.

61
00:03:43.625 --> 00:03:46.465
You'll notice this has a default.

62
00:03:46.465 --> 00:03:51.018
Can anyone guess why I might set
a sane default for the instance type?

63
00:03:51.018 --> 00:03:51.566
&gt;&gt; Cost.

64
00:03:51.566 --> 00:03:54.173
&gt;&gt; Cost, yeah,
[LAUGH] exactly, yeah, cost.

65
00:03:54.173 --> 00:03:58.238
And you might also notice right underneath
it, the second thing we're trying to do to

66
00:03:58.238 --> 00:04:01.637
save money, which is, we're gonna
use spot instances here, right?

67
00:04:01.637 --> 00:04:05.549
So just note that this
cluster has a domain for it.

68
00:04:05.549 --> 00:04:10.005
It has an environment that it's for, it
has an instance type that is predefined,

69
00:04:10.005 --> 00:04:13.503
it has a market type that is predefined,
then then it has a name.

70
00:04:13.503 --> 00:04:18.190
So we actually name the cluster, right,
and then what's called a vpc_name.

71
00:04:18.190 --> 00:04:21.411
Now you might be like, well, what's a VPC?

72
00:04:21.411 --> 00:04:26.478
The VPC is created in the network
module that we just made.

73
00:04:26.478 --> 00:04:31.239
So if we go back to our diagram,
technically, it's not just that

74
00:04:31.239 --> 00:04:36.262
we're creating a provider network module,
but in the same way, and

75
00:04:36.262 --> 00:04:41.300
this is something that it was too hard
to convey [LAUGH] in a flow chart.

76
00:04:41.300 --> 00:04:43.324
But in the same way,

77
00:04:43.324 --> 00:04:49.294
it's also a dependency of
the cluster workspace, right?

78
00:04:49.294 --> 00:04:56.865
So what we're doing is, again, we're using
to connect these things together, right?

79
00:04:56.865 --> 00:05:00.869
We have a variable in TFE, we have
a variable in GitHub, and now we're at

80
00:05:00.869 --> 00:05:05.481
the point where we wanna create a bunch of
networks and a bunch of clusters, right?

81
00:05:05.481 --> 00:05:10.444
So we need to have a sane way of
essentially wiring all that together,

82
00:05:10.444 --> 00:05:11.053
right?

83
00:05:11.053 --> 00:05:14.202
So the network is first,
that will create the VPC,

84
00:05:14.202 --> 00:05:19.344
everything we need on the lower level, and
then the cluster will sit on top of that.

85
00:05:19.344 --> 00:05:21.861
So if the cluster sits on top of that,

86
00:05:21.861 --> 00:05:24.875
what do you think
the services sit on top of?

87
00:05:24.875 --> 00:05:25.422
&gt;&gt; The cluster.

88
00:05:25.422 --> 00:05:27.680
&gt;&gt; On top of the cluster, exactly.

89
00:05:27.680 --> 00:05:30.079
Layered automation, right?

90
00:05:30.079 --> 00:05:35.026
So we're gonna go back here,
I'm gonna do a Terraform in it.

91
00:05:42.145 --> 00:05:43.052
And then I'm gonna do a validate.

92
00:05:47.387 --> 00:05:48.894
Beautiful, okay, cool.

93
00:05:48.894 --> 00:05:52.098
So we have an automation setup.

94
00:05:52.098 --> 00:05:54.550
Sorry, we have automation setup for
our cluster now as well.

95
00:05:54.550 --> 00:05:55.765
So I'm gonna get it checked out.

96
00:05:55.765 --> 00:06:00.019
I'm gonna create a branch again,
call it add resources.

97
00:06:00.019 --> 00:06:03.211
Git status, git add data.

98
00:06:03.211 --> 00:06:06.965
If you wanna make it a little bit easier,
you can just do this, star.tf.

99
00:06:09.234 --> 00:06:12.041
That'll add all your TF files for you.

100
00:06:12.041 --> 00:06:13.830
&gt;&gt; No back end yet?

101
00:06:13.830 --> 00:06:15.166
No back end?

102
00:06:15.166 --> 00:06:16.838
&gt;&gt; No back end yet.

103
00:06:16.838 --> 00:06:20.354
We're never gonna use a back end in
these repos, you'll see why in a second.

104
00:06:20.354 --> 00:06:23.220
And then add the user TPL.

105
00:06:24.502 --> 00:06:28.624
Cool, so we're gonna get commit,
this is the flow.

106
00:06:28.624 --> 00:06:33.689
Those back ends, you should never have
to touch going forward, is what I mean.

107
00:06:33.689 --> 00:06:36.730
So those back ends are only there for
the bootstrapping.

108
00:06:36.730 --> 00:06:40.540
Once we have those, everything is
configurable via TerraForm cloud and

109
00:06:40.540 --> 00:06:42.109
the automation we've made.

110
00:06:42.109 --> 00:06:47.616
So now what we're gonna do is, is we're
gonna say, feature added resources.

111
00:06:47.616 --> 00:06:53.284
Push, And then gh pr create.

112
00:06:53.284 --> 00:06:56.172
Or go to the repo, open up a PR.

113
00:06:59.954 --> 00:07:01.901
What's interesting about this?

114
00:07:01.901 --> 00:07:06.041
One of the things that's interesting
about this is that for starters,

115
00:07:06.041 --> 00:07:09.635
we don't see a status check on
either of these repos, right?

116
00:07:09.635 --> 00:07:14.515
Does anyone know why we don't see
status checks on these repos?

117
00:07:14.515 --> 00:07:16.002
[INAUDIBLE] Connected.

118
00:07:16.002 --> 00:07:17.871
&gt;&gt; There's no workspace, there's no back.

119
00:07:17.871 --> 00:07:21.027
Yeah, there's nothing, yeah,
it's just repos right now.

120
00:07:21.027 --> 00:07:25.331
But these are automation repos that
we know we wanna keep using, right?

121
00:07:25.331 --> 00:07:26.600
So that's okay, that's okay.

122
00:07:26.600 --> 00:07:28.352
So we're gonna hit squash and merge.

123
00:07:28.352 --> 00:07:30.207
Squash, there we go.

124
00:07:30.207 --> 00:07:33.205
And then [LAUGH] we will squash and
merge our changes, right?

125
00:07:33.205 --> 00:07:35.337
So we know we validated them, right?

126
00:07:35.337 --> 00:07:38.301
We did a TerraForm validate, oops,
that's not what I meant to do.

127
00:07:38.301 --> 00:07:40.741
Validate, right, cool.

128
00:07:40.741 --> 00:07:45.876
So then I'm going to git checkout main,

129
00:07:45.876 --> 00:07:51.916
git pull origin main,
and then git branch -d,

130
00:07:51.916 --> 00:07:55.703
sorry, added-resources.

131
00:07:55.703 --> 00:07:56.773
There we go.
Wait, what?

132
00:07:59.912 --> 00:08:00.534
Feature.

133
00:08:09.178 --> 00:08:10.277
I see.

134
00:08:10.277 --> 00:08:10.913
Yeah, it's fine.

135
00:08:14.109 --> 00:08:17.243
If you run into that error, it's because
we have a terraform.lock file sitting here

136
00:08:17.243 --> 00:08:20.132
and it's like, well, I don't wanna
delete something that's still there.

137
00:08:20.132 --> 00:08:21.481
It's like, [SOUND].

138
00:08:21.481 --> 00:08:25.802
it's okay, just dash d, capital D,
and it'll delete it for you.

139
00:08:25.802 --> 00:08:28.780
Okay, cool, so
I'm gonna pull in really quickly, awesome.

