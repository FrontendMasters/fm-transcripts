WEBVTT

1
00:00:00.350 --> 00:00:02.984
So now that I've got my repo cloned,
we can go ahead and

2
00:00:02.984 --> 00:00:05.752
get started by creating some
of our automation, right?

3
00:00:05.752 --> 00:00:09.076
Now, when we think about
the automation that we wanna create,

4
00:00:09.076 --> 00:00:13.163
we really need to consider the resources
that we're gonna be using, right?

5
00:00:13.163 --> 00:00:17.139
when you are working with
TerraForm 99.999% of the time,

6
00:00:17.139 --> 00:00:20.978
you're gonna be working with
these things called providers.

7
00:00:20.978 --> 00:00:24.448
Providers are really what make it so
that you can do things like multicloud.

8
00:00:24.448 --> 00:00:25.858
They're things that make it so

9
00:00:25.858 --> 00:00:28.686
that you can work with other
services in the same automation.

10
00:00:28.686 --> 00:00:35.936
In our case, what we wanna do is we wanna
look up terraform provider tfe, right?

11
00:00:35.936 --> 00:00:40.530
This is the Terraform HashiCorp provider
for Terraform Cloud Enterprise.

12
00:00:40.530 --> 00:00:43.782
Now, one of the things that's
really fun about providers,

13
00:00:43.782 --> 00:00:48.181
which you may not know is people like to
experiment with providers and see, well,

14
00:00:48.181 --> 00:00:49.924
what could I automate, right?

15
00:00:49.924 --> 00:00:55.444
One thing you might not know or
something that might shock you or

16
00:00:55.444 --> 00:01:01.817
find interesting is you can actually
automate your Spotify playlists.

17
00:01:01.817 --> 00:01:06.687
And that's the really great thing about
Terraform is providers are just things

18
00:01:06.687 --> 00:01:07.567
that we make.

19
00:01:07.567 --> 00:01:11.326
As long as it's an API that has
the ability to create things, an API that

20
00:01:11.326 --> 00:01:15.462
has the ability to delete things,
things like that, it's automatable, but

21
00:01:15.462 --> 00:01:19.181
the only thing you have to do is create
a provider that works with them.

22
00:01:19.181 --> 00:01:23.786
And so I would recommend in your homework
going into the TerraForm registry and kind

23
00:01:23.786 --> 00:01:28.215
of looking around and seeing about all
the different providers that they have.

24
00:01:28.215 --> 00:01:31.992
As you can see here, we've got
the AWS Azure, Google Cloud, Kubernetes,

25
00:01:31.992 --> 00:01:34.894
Alibaba, Oracle, right,
all these different things.

26
00:01:34.894 --> 00:01:39.567
And if we go further down, you can even
see things like Nomad, Helm, right?

27
00:01:39.567 --> 00:01:43.007
And so yeah, I highly recommend
taking a look at the providers,

28
00:01:43.007 --> 00:01:45.442
there's a lot of really
cool stuff in there.

29
00:01:45.442 --> 00:01:48.195
Okay, so again, we wanna work with
the Terraform Cloud Provider.

30
00:01:48.195 --> 00:01:50.713
This is gonna be a lot of your
experience with Terraform,

31
00:01:50.713 --> 00:01:53.545
which is just finding which
provider you're working with, and

32
00:01:53.545 --> 00:01:55.868
then figuring out the resources
that you wanna use.

33
00:01:55.868 --> 00:02:00.229
Now, the first resource that we really
wanna find is a project, right?

34
00:02:00.229 --> 00:02:04.601
The project is kind of our first level of
encapsulation in Terraform that makes it

35
00:02:04.601 --> 00:02:08.216
so that all of our workspace
automation can exist in one location.

36
00:02:08.216 --> 00:02:13.047
For example, if I wanted to say, I just
want the automation for service A, right,

37
00:02:13.047 --> 00:02:15.738
and that would be in
the service A project, and

38
00:02:15.738 --> 00:02:18.306
then I could click on that project, right?

39
00:02:18.306 --> 00:02:23.324
But I wanna note something about projects
or even these resources in general before

40
00:02:23.324 --> 00:02:27.853
I go any further, which is resources
are literally individuals, right?

41
00:02:27.853 --> 00:02:31.375
So what that means is, is that you
can have a resource that creates

42
00:02:31.375 --> 00:02:35.731
an organization, but then you also need
another resource that attaches users to

43
00:02:35.731 --> 00:02:38.246
that organization or
other things like that.

44
00:02:38.246 --> 00:02:43.704
And it can become a bit challenging
especially when you're like, I don't know,

45
00:02:43.704 --> 00:02:48.387
am I missing an attachment somewhere or
a policy resource somewhere?

46
00:02:48.387 --> 00:02:53.120
And so another really great way of
creating Terraform automation is actually

47
00:02:53.120 --> 00:02:55.613
leaning on Terraform modules, right?

48
00:02:55.613 --> 00:02:59.162
So we've got providers, but then we've
also got this concept of modules.

49
00:02:59.162 --> 00:03:03.546
And modules are really
community-driven Terraform codes that

50
00:03:03.546 --> 00:03:07.036
has been standardized,
it's been worked on, and

51
00:03:07.036 --> 00:03:12.979
it's also been essentially kinda of battle
tested for the use cases that are created.

52
00:03:12.979 --> 00:03:17.763
So you can see here we've got
aws-modules/iam, VPC, and we even use some

53
00:03:17.763 --> 00:03:22.722
of these modules in this workshop just
because it makes our lives a bit easier.

54
00:03:22.722 --> 00:03:25.654
And again, the goal here is
to create valuable modules,

55
00:03:25.654 --> 00:03:30.194
don't just create a module of a wrapper of
a resource, there's really no value there.

56
00:03:30.194 --> 00:03:33.943
However, I was able to actually
prepare some modules for us.

57
00:03:33.943 --> 00:03:38.255
And so if we actually type in ALT-F4-LLC,
which is my company, and

58
00:03:38.255 --> 00:03:41.615
we go to Project,
we can see that this is the project for

59
00:03:41.615 --> 00:03:46.681
creating Terraform Enterprise resources
essentially, or project resources.

60
00:03:46.681 --> 00:03:50.893
And what's nice about this resource versus
the other one is you'll actually see if we

61
00:03:50.893 --> 00:03:54.182
look in here, you can see that it
provides more than one resource.

62
00:03:54.182 --> 00:03:58.681
It'll take care of the project, but then
it'll also make sure that if it needs to

63
00:03:58.681 --> 00:04:01.592
say have access to a team or
multiple teams, right,

64
00:04:01.592 --> 00:04:05.379
I can just pass that to the resource and
it makes my life a lot easier.

65
00:04:05.379 --> 00:04:10.341
So we're gonna go ahead and
actually get started by using this module,

66
00:04:10.341 --> 00:04:14.406
and we're gonna create a brand
new main.tf file, okay?

67
00:04:14.406 --> 00:04:18.491
So I'm gonna go back to my source,
I'm gonna hit New File,

68
00:04:18.491 --> 00:04:21.286
main.tf, and then I'm gonna edit it.

69
00:04:21.286 --> 00:04:24.551
Now what I wanna do is I
really just wanna copy and

70
00:04:24.551 --> 00:04:28.565
paste that block of code that
exists really here, right?

71
00:04:28.565 --> 00:04:30.889
So if you look here,
you'll see provision resources.

72
00:04:30.889 --> 00:04:34.438
This is really how you can kind of
get started with a module, right?

73
00:04:34.438 --> 00:04:37.771
Now, what I copied was that
part plus a couple others,

74
00:04:37.771 --> 00:04:40.390
which is the values of what I need, right?

75
00:04:40.390 --> 00:04:42.993
So module, project, source, and version,

76
00:04:42.993 --> 00:04:47.151
these are all normally gonna be there
whenever you're using any module.

77
00:04:47.151 --> 00:04:51.181
The module is the actual meta argument
telling Terraform what it is.

78
00:04:51.181 --> 00:04:55.328
Project is the name, and
then your attributes are inside of that.

79
00:04:55.328 --> 00:05:00.318
You might notice that, for example,
in our previous one where you saw aws_vpc,

80
00:05:00.318 --> 00:05:04.730
something like this, you might notice
that it has three arguments, but

81
00:05:04.730 --> 00:05:05.909
then this has two.

82
00:05:05.909 --> 00:05:07.551
What's going on there, right?

83
00:05:07.551 --> 00:05:08.769
Well, the main point is, is one,

84
00:05:08.769 --> 00:05:10.958
we're telling Terraform here
that this is a module, right?

85
00:05:10.958 --> 00:05:12.995
Whereas here we're telling
it it's a resource.

86
00:05:12.995 --> 00:05:14.754
Modules don't have providers,

87
00:05:14.754 --> 00:05:18.533
and that's exactly what this is for,
the provider resource, right?

88
00:05:18.533 --> 00:05:21.301
In this case,
a module just has a name, really.

89
00:05:21.301 --> 00:05:24.795
So this is a little bit of a thing to
think about when you're creating and

90
00:05:24.795 --> 00:05:26.776
using modules is you can't just copy and

91
00:05:26.776 --> 00:05:30.294
paste a module unless you make sure
to rechange the name of that module.

92
00:05:30.294 --> 00:05:34.254
You won't actually be changing what
module it's using because it has a source

93
00:05:34.254 --> 00:05:38.454
definition and a version definition, but
you will need to make sure that project or

94
00:05:38.454 --> 00:05:41.934
whatever, if you wanna have more
than one project has more than one,

95
00:05:41.934 --> 00:05:44.874
it has to be unique, basically So
we're gonna go ahead and

96
00:05:44.874 --> 00:05:46.916
make sure that that is in there, right?

97
00:05:46.916 --> 00:05:49.944
Now with this, we can create a project.

98
00:05:49.944 --> 00:05:54.742
So if we go back to Terraform Cloud
really quickly and we go to Settings.

99
00:05:54.742 --> 00:05:56.485
I'm sorry.

100
00:05:56.485 --> 00:05:58.442
If we go back to Teraform Cloud
really quickly, and

101
00:05:58.442 --> 00:06:01.458
then we click on this little button right
here, these are all of our projects.

102
00:06:01.458 --> 00:06:04.479
Now you actually see I actually have
one here already, so let me just go and

103
00:06:04.479 --> 00:06:05.620
delete that really quick.

104
00:06:05.620 --> 00:06:07.035
All right, cool.

105
00:06:07.035 --> 00:06:11.007
So again, if I open this up, you can
see no workspaces were brand new, and

106
00:06:11.007 --> 00:06:12.752
you do get a default workspace.

107
00:06:12.752 --> 00:06:13.542
So that's nice.

108
00:06:13.542 --> 00:06:16.861
You do get a default workspace,
but we want a workspace for

109
00:06:16.861 --> 00:06:18.363
our actual application.

110
00:06:18.363 --> 00:06:23.286
So, the next thing I wanna do is
I wanna use a workspace resource.

111
00:06:23.286 --> 00:06:27.578
Now again, I could go back to Terraform
Module or TerraForm Provider and look for

112
00:06:27.578 --> 00:06:29.990
everything that's related to a workspace.

113
00:06:29.990 --> 00:06:33.579
Or I could see if maybe this
developer also created one form for

114
00:06:33.579 --> 00:06:36.627
me that I could use and
sure enough, yes, there is.

115
00:06:36.627 --> 00:06:39.560
This is the second part of
modules that's really cool.

116
00:06:39.560 --> 00:06:42.895
You can compose modules to
work with other modules.

117
00:06:42.895 --> 00:06:47.661
So, one of the things I decided to do,
which is why I created these modules was I

118
00:06:47.661 --> 00:06:52.576
didn't like how Terraform Cloud required
you to not just create something, but

119
00:06:52.576 --> 00:06:55.194
then also kind of attach things to things.

120
00:06:55.194 --> 00:06:57.447
It's multiple resources
that have to be done.

121
00:06:57.447 --> 00:07:00.688
My goal is to simply create a project and
a workspace, right?

122
00:07:00.688 --> 00:07:02.315
And so, what I did is I made it so

123
00:07:02.315 --> 00:07:06.591
that the project exported values that
the workspace would then expect, right?

124
00:07:06.591 --> 00:07:10.487
So it makes it easier for you to compose
your infrastructure with your own opinions

125
00:07:10.487 --> 00:07:13.140
by saying these are the actual
attributes I care about,

126
00:07:13.140 --> 00:07:14.728
these are the ones that I don't.

127
00:07:14.728 --> 00:07:17.873
And then this is where the Legos
really kinda come together,

128
00:07:17.873 --> 00:07:19.607
you make them fit well together.

129
00:07:19.607 --> 00:07:23.829
And so this workspace should be able
to work well with our module that we've

130
00:07:23.829 --> 00:07:24.709
already used.

131
00:07:24.709 --> 00:07:28.321
So I'm gonna copy this,
I'm gonna paste it in here, and

132
00:07:28.321 --> 00:07:31.805
I'm just gonna get rid of
this little line right here.

133
00:07:31.805 --> 00:07:33.532
Now, it said Insert Attributes, so

134
00:07:33.532 --> 00:07:36.663
we wanna insert attributes just
like we did with the other module.

135
00:07:36.663 --> 00:07:40.022
So I'm just gonna copy and
paste from the example code.

136
00:07:40.022 --> 00:07:41.676
And then sure enough, there we go.

137
00:07:41.676 --> 00:07:45.959
Now, we have a project and
a workspace, right?

138
00:07:45.959 --> 00:07:48.793
But you'll notice that
if you look at my code,

139
00:07:48.793 --> 00:07:52.732
I have variables here like
var.organization_name, right?

140
00:07:52.732 --> 00:07:57.324
The point of these variables is even
though we're making automation for

141
00:07:57.324 --> 00:08:01.314
ourselves, we don't wanna
necessarily keep unique values or

142
00:08:01.314 --> 00:08:04.566
things of that nature in
the repo if we can avoid it.

143
00:08:04.566 --> 00:08:08.141
We're gonna have things that
are gonna need to be there for sure,

144
00:08:08.141 --> 00:08:11.986
but at least not having it directly
in the automation code is helpful.

145
00:08:11.986 --> 00:08:16.165
And so what we can do with Terraform is we
can create variables that we can actually

146
00:08:16.165 --> 00:08:19.368
pass to the automation to make
this a little bit more dynamic.

147
00:08:19.368 --> 00:08:23.457
And so what we're gonna do now is
we're gonna actually close this out,

148
00:08:23.457 --> 00:08:28.311
we're gonna create a new file, and
we're gonna call this variables.tf, right?

149
00:08:28.311 --> 00:08:33.843
Now in this, we're going to create
a variable for, what was it?

150
00:08:33.843 --> 00:08:36.728
Our organization name, right?

151
00:08:36.728 --> 00:08:41.165
So I'm gonna go over here,
just gonna switch that for you guys so

152
00:08:41.165 --> 00:08:46.681
you can see both, and then I'm going to
paste in my variable block for you guys.

153
00:08:46.681 --> 00:08:52.143
Now again, you're gonna notice this
pattern with Terraform of meta argument,

154
00:08:52.143 --> 00:08:56.656
name or provider name, resource name,
and the name of resource.

155
00:08:56.656 --> 00:08:59.230
And this is what I meant before, right,

156
00:08:59.230 --> 00:09:03.709
when we were talking about Pulumi
versus Terraform versus whatever.

157
00:09:03.709 --> 00:09:08.319
This is why Terraform is so powerful
versus something like Pulumi, it's so

158
00:09:08.319 --> 00:09:09.551
straightforward.

159
00:09:09.551 --> 00:09:12.138
The expectations are so
easy that it really does get

160
00:09:12.138 --> 00:09:15.522
to the point where almost anyone
could start writing automation.

161
00:09:15.522 --> 00:09:19.874
The entry point is so low that it makes it
really easy to do a lot of these things.

162
00:09:19.874 --> 00:09:22.695
So when we're talking about
declaring a variable,

163
00:09:22.695 --> 00:09:25.975
it's literally the word variable,
right, which is nice.

164
00:09:25.975 --> 00:09:27.403
Again, it doesn't make it too confusing.

165
00:09:27.403 --> 00:09:31.529
What we want to do though is we
want to change the default value.

166
00:09:31.529 --> 00:09:33.953
Now you might be like
why are you doing this?

167
00:09:33.953 --> 00:09:38.417
Why don't you just copy and paste it into
the organization name where it is and

168
00:09:38.417 --> 00:09:39.248
call it a day?

169
00:09:39.248 --> 00:09:42.375
We wanna make these dynamic, like I said.

170
00:09:42.375 --> 00:09:46.672
And one of the nice thing about variables
is you can set defaults for variables,

171
00:09:46.672 --> 00:09:49.637
but then you can make them
overvariaiable if you want.

172
00:09:49.637 --> 00:09:53.141
So say, for example, if I wanted to use
this, but then I was like, you know what,

173
00:09:53.141 --> 00:09:55.261
I kind of want to put this
in a different org, right?

174
00:09:55.261 --> 00:09:56.813
I wanna take my whole infrastructure and

175
00:09:56.813 --> 00:09:58.647
I'm gonna put it in
a different organization.

176
00:09:58.647 --> 00:10:02.536
That's challenging, that's a very
daunting and challenging task.

177
00:10:02.536 --> 00:10:05.397
But if you make your
automation dynamic enough,

178
00:10:05.397 --> 00:10:07.850
it can actually make it easier to do that.

179
00:10:07.850 --> 00:10:10.647
And so,
we wanna add our organization name,

180
00:10:10.647 --> 00:10:14.914
which if I click on my Terraform Cloud,
and I look down on the bottom,

181
00:10:14.914 --> 00:10:20.157
you can see my organization name is my
randomly generated word set seat-rhetoric.

182
00:10:20.157 --> 00:10:21.537
So that's my org.

183
00:10:21.537 --> 00:10:26.786
So I'm gonna go into here,
I'm gonna type in seat R-H-E-T-O-R-I-C.

184
00:10:26.786 --> 00:10:28.377
I believe I spelled that correct.

185
00:10:28.377 --> 00:10:29.182
Yes, I did.

186
00:10:29.182 --> 00:10:30.291
Okay, cool.

187
00:10:30.291 --> 00:10:33.609
And then we're gonna right quit and
we're gonna save all of these.

188
00:10:33.609 --> 00:10:37.463
So again, let me go back to main one more
time just to show you what your main

189
00:10:37.463 --> 00:10:39.091
should look like, all right?

190
00:10:39.091 --> 00:10:42.238
You should have a project, and
you should have a workspace, and

191
00:10:42.238 --> 00:10:46.450
then you should have description and name,
and organization name for your project.

192
00:10:46.450 --> 00:10:50.030
And then you should have description,
execution_mode, name, organization_name,

193
00:10:50.030 --> 00:10:50.791
and project_id.

194
00:10:50.791 --> 00:10:55.569
Now there's one thing I wanna do and
show you really quickly before we move

195
00:10:55.569 --> 00:11:00.040
forward because this is a little bit
of a caveat to Terraform Cloud and

196
00:11:00.040 --> 00:11:02.447
the the personal free version of it.

197
00:11:02.447 --> 00:11:07.858
By default, they set a default
execution mode in your account.

198
00:11:07.858 --> 00:11:12.348
This is a difference when you use a paid
account because then there's a little bit

199
00:11:12.348 --> 00:11:13.480
more flexibility.

200
00:11:13.480 --> 00:11:17.602
But we wanna make sure for now, our
default execution mode is set to local,

201
00:11:17.602 --> 00:11:21.868
because everything we're gonna be
starting with at least is gonna be local.

202
00:11:21.868 --> 00:11:25.033
So what we're gonna do is we're
gonna go to Dettings, and

203
00:11:25.033 --> 00:11:29.747
then here where it says Default Execution
Mode, right, we're gonna set it to Local,

204
00:11:29.747 --> 00:11:32.219
and then we're gonna Update organization.

205
00:11:32.219 --> 00:11:33.532
This is important.

206
00:11:33.532 --> 00:11:35.901
Let's make sure everybody does this.

207
00:11:35.901 --> 00:11:38.894
Because this will make sure
that any other repositories or

208
00:11:38.894 --> 00:11:42.622
workspaces we use going forward,
it'll make sure to use local first and

209
00:11:42.622 --> 00:11:44.959
not trying to actually
set itself to remote.

210
00:11:44.959 --> 00:11:50.608
So we set that, and then again, we'll take
one more quick look at our variables.

211
00:11:50.608 --> 00:11:51.751
Looks good.

