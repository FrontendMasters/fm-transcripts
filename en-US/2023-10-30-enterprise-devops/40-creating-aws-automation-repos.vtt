WEBVTT

1
00:00:00.000 --> 00:00:03.240
So we've set up Terraform
cloud automation, fantastic,

2
00:00:03.240 --> 00:00:07.384
we've also made it so that we have dynamic
configuration so that we can add or

3
00:00:07.384 --> 00:00:09.749
remove workspaces pretty easily, cool.

4
00:00:09.749 --> 00:00:12.260
Then we've set up using VCS tracking so

5
00:00:12.260 --> 00:00:16.752
that every workspace we create Knows
that it must track a repository so

6
00:00:16.752 --> 00:00:20.651
that we have our GitOps paradigm
completely standardized.

7
00:00:20.651 --> 00:00:24.882
Then we set up our source control
automation so that when we wanna create

8
00:00:24.882 --> 00:00:29.482
additional automation repositories
going forward, we can easily do that.

9
00:00:29.482 --> 00:00:30.999
So what do we do next?

10
00:00:30.999 --> 00:00:33.436
Well, now we're finally at the fun part,

11
00:00:33.436 --> 00:00:36.426
which is we need to create
cloud resources, right?

12
00:00:36.426 --> 00:00:41.476
Now, with this going forward,
this is really going to be the standard

13
00:00:41.476 --> 00:00:46.798
process you're going to take to
creating resources within this system.

14
00:00:46.798 --> 00:00:48.763
It is now set up, right?

15
00:00:48.763 --> 00:00:51.311
We've created all the repos,
we've done all the importing,

16
00:00:51.311 --> 00:00:53.773
we've done all the keying pretty much and
everything else.

17
00:00:53.773 --> 00:00:56.710
Now there might be additional
keys in the future, all right?

18
00:00:56.710 --> 00:00:59.252
If it's Amazon or Google or whatever,

19
00:00:59.252 --> 00:01:02.419
but the process is pretty
much gonna be the same.

20
00:01:02.419 --> 00:01:06.691
So the first thing we wanna do is we
actually want to go to our GitHub

21
00:01:06.691 --> 00:01:10.745
automation because we want to
create our repos first, okay?

22
00:01:10.745 --> 00:01:14.571
So I'm gonna go to the locals file, here.

23
00:01:14.571 --> 00:01:20.733
Now before I do this actually, I wanna
create a branch, right, because I can't

24
00:01:20.733 --> 00:01:26.010
push the master anymore unless I
override it and I just reran my plan.

25
00:01:26.010 --> 00:01:28.077
So it's really not gonna let me do that.

26
00:01:28.077 --> 00:01:31.317
So you have two options, you can
either create a branch if you'd like,

27
00:01:31.317 --> 00:01:33.153
which is what I'm gonna go ahead and do.

28
00:01:33.153 --> 00:01:37.950
So I'm gonna say git checkout -b,
and we'll just call this

29
00:01:37.950 --> 00:01:42.573
feature/add-repos, just something simple,
right?

30
00:01:42.573 --> 00:01:45.960
Now, I'm in a brand new branch,
so I do get status.

31
00:01:45.960 --> 00:01:49.815
We can see that I'm now in
feature/add-repos, right and

32
00:01:49.815 --> 00:01:51.674
we wanna add some new repos.

33
00:01:51.674 --> 00:01:54.048
I'm gonna say locals.

34
00:01:58.071 --> 00:01:59.593
And we're gonna add two new repos.

35
00:01:59.593 --> 00:02:04.901
We're actually gonna do all of our
automation repos at once for Amazon.

36
00:02:04.901 --> 00:02:07.427
Sorry, copied a little too much there.

37
00:02:07.427 --> 00:02:11.121
Boy, let me just try
that copy one more time.

38
00:02:11.121 --> 00:02:12.150
How's that sound?

39
00:02:12.150 --> 00:02:16.706
Okay, so let's go here, copy.

40
00:02:16.706 --> 00:02:20.540
And again,
this is in the same GitHub repo.

41
00:02:20.540 --> 00:02:26.422
In the GitHub repo, if you go to the next
branch in the GitHub repo automation,

42
00:02:26.422 --> 00:02:28.130
this should be there.

43
00:02:28.130 --> 00:02:33.434
And so I believe it's five or
six, one of the two.

44
00:02:33.434 --> 00:02:35.173
&gt;&gt; Set up AWS infrastructure?

45
00:02:35.173 --> 00:02:36.448
&gt;&gt; Yes, yeah.

46
00:02:36.448 --> 00:02:37.834
Set up AWS infrastructure.

47
00:02:37.834 --> 00:02:43.575
Let me, AWS or GitHub.

48
00:02:43.575 --> 00:02:44.923
Yep, so here you go.

49
00:02:44.923 --> 00:02:50.447
This is for this, cool.

50
00:02:54.425 --> 00:02:59.552
Cool, so again,
you can use the second branch set up or

51
00:02:59.552 --> 00:03:03.579
the five branch to use
this as a reference.

52
00:03:03.579 --> 00:03:08.232
And you might want to, for the Amazon
part, this one's a little bit easier.

53
00:03:08.232 --> 00:03:09.350
But I'll do it as well.

54
00:03:09.350 --> 00:03:12.193
So I'll just go to locals,

55
00:03:12.193 --> 00:03:18.139
I'm gonna copy both terraform
network AWS and cluster.

56
00:03:18.139 --> 00:03:21.890
And don't forget we're gonna
wanna set these to public.

57
00:03:21.890 --> 00:03:25.359
Do not forget to set those to public
otherwise you might run into problems.

58
00:03:25.359 --> 00:03:26.740
And that's it.

59
00:03:26.740 --> 00:03:32.468
Validate, git add locals, git commit,

60
00:03:32.468 --> 00:03:36.403
or git status, git commit.

61
00:03:40.322 --> 00:03:42.703
Right?

62
00:03:42.703 --> 00:03:49.979
Added aws repos, git push, origin,
and then we're not gonna push main,

63
00:03:49.979 --> 00:03:54.149
we're actually gonna push to our branch.

64
00:03:54.149 --> 00:03:57.207
Now, what's really cool
about this approach,

65
00:03:57.207 --> 00:04:01.541
especially if you use GitHub CLI,
you can be really quick with this.

66
00:04:01.541 --> 00:04:05.829
So you can be like, all right, I've
made my changes, I made my branch, okay,

67
00:04:05.829 --> 00:04:06.608
gh pr create.

68
00:04:06.608 --> 00:04:12.024
And it will actually help you go through
the GitHub Creation PR process, right?

69
00:04:12.024 --> 00:04:13.875
This is how I create PRs.

70
00:04:13.875 --> 00:04:17.049
And this is why I think if you're using
GitHub at least, this is a good approach.

71
00:04:17.049 --> 00:04:21.649
Because if not,
then your other alternative is to go to

72
00:04:21.649 --> 00:04:25.049
the actual repository itself, right?

73
00:04:25.049 --> 00:04:28.661
See, I've got a new branch here,
compare and pull request, and

74
00:04:28.661 --> 00:04:31.170
then open up a pull request for
your changes.

75
00:04:31.170 --> 00:04:33.706
This is the developer flow now.

76
00:04:33.706 --> 00:04:39.356
I'm gonna go here, I'm gonna create one
for me, and then I'm just gonna make it so

77
00:04:39.356 --> 00:04:43.900
I can do it via CLI, and then I get
a nice little URL that it gives me.

78
00:04:43.900 --> 00:04:48.844
Now, what's cool,
look at that Terraform Cloud is also

79
00:04:48.844 --> 00:04:51.937
directly integrated into GitHub.

80
00:04:51.937 --> 00:04:55.762
So we have status checks and
pipelines built in.

81
00:04:55.762 --> 00:05:00.032
So now what I can do is I can click on
this little status check right here and

82
00:05:00.032 --> 00:05:04.517
then I can actually go to terraform cloud
and look at the run for that change.

83
00:05:04.517 --> 00:05:07.098
And look at that,
my new repos are getting created.

84
00:05:07.098 --> 00:05:10.250
And as I said before,
you might see bugs like this.

85
00:05:10.250 --> 00:05:13.620
It's fine, that's fine,
don't worry about that.

86
00:05:13.620 --> 00:05:17.566
We know that that's what we
wanna set it to, so it's okay.

87
00:05:17.566 --> 00:05:20.521
That's a bug in the GitHub
repository resource.

88
00:05:20.521 --> 00:05:24.153
But these are all brand new, okay?

89
00:05:24.153 --> 00:05:25.946
So what does that mean?

90
00:05:25.946 --> 00:05:28.566
It's really easy to create repos now.

91
00:05:28.566 --> 00:05:29.163
Really easy.

92
00:05:29.163 --> 00:05:32.343
I did it in five minutes if not less,
right?

93
00:05:32.343 --> 00:05:36.789
So what I'm gonna do is,
is I'm gonna go back to my pr,

94
00:05:36.789 --> 00:05:40.765
just review my changes really quickly,
right?

95
00:05:40.765 --> 00:05:43.813
And then I'm going to squash and merge.

96
00:05:46.135 --> 00:05:51.203
Now, if I go to my main branch,
just like the other branches,

97
00:05:51.203 --> 00:05:54.230
I should get a status check, right?

98
00:05:54.230 --> 00:06:03.163
So if I go to Details for this,
This is the actual real apply, right?

99
00:06:03.163 --> 00:06:05.922
So it gave us a plan in our branch, but

100
00:06:05.922 --> 00:06:11.265
this is where it'll actually give us
the ability to confirm and apply.

101
00:06:11.265 --> 00:06:13.065
So we're gonna hit Confirm and Apply.

102
00:06:15.046 --> 00:06:16.900
&gt;&gt; Is that because it was on
a branch that it didn't do?

103
00:06:16.900 --> 00:06:18.171
&gt;&gt; Yes, exactly.

104
00:06:18.171 --> 00:06:19.655
&gt;&gt; So it recognized that it's not main.

105
00:06:19.655 --> 00:06:21.480
&gt;&gt; Exactly, yeah.

106
00:06:21.480 --> 00:06:23.914
That's why it helps with
the developer flow, yeah.

107
00:06:23.914 --> 00:06:24.745
&gt;&gt; Yeah.

108
00:06:32.876 --> 00:06:36.317
Did we tell it that main is
the main branch somewhere?

109
00:06:36.317 --> 00:06:41.121
&gt;&gt; In the GitHub organization defaults,
it's main.

110
00:06:41.121 --> 00:06:43.900
Yeah, they moved from master to main.

111
00:06:43.900 --> 00:06:47.350
&gt;&gt; Now,
is this also creating the repo in GitHub?

112
00:06:47.350 --> 00:06:48.635
&gt;&gt; Yeah, it is.

113
00:06:48.635 --> 00:06:51.855
&gt;&gt; Or do we need
&gt;&gt; It is, yeah.

114
00:06:51.855 --> 00:06:56.459
So, cuz we just updated the GitHub repo,
GitHub automation repo.

115
00:06:56.459 --> 00:07:00.405
So now, if I go to my profile,

116
00:07:03.403 --> 00:07:07.495
I have six repos now, look at that.

117
00:07:09.540 --> 00:07:11.390
I told you we're gonna start cooking.

118
00:07:11.390 --> 00:07:16.062
All right, so now we got to
fem-eci-terraform-aws-cluster and

119
00:07:16.062 --> 00:07:18.488
eci-terrafrom-aws-network.

120
00:07:18.488 --> 00:07:22.487
And again, we also know that our
source of truth is updated, so

121
00:07:22.487 --> 00:07:25.664
we know that it's tracked and
it's maintained.

122
00:07:25.664 --> 00:07:27.591
Now, I'm just deleting the local branch.

123
00:07:27.591 --> 00:07:30.946
That's all I just did,
was just to clean up my TFE, GitHub repo,

124
00:07:30.946 --> 00:07:34.911
you don't have to do that but it's just
something I like to do in the off chance

125
00:07:34.911 --> 00:07:36.989
that I create a new branch in the future.

126
00:07:36.989 --> 00:07:41.439
You can also do get branch
-d feature/add-repos, and

127
00:07:41.439 --> 00:07:46.260
then it'll delete it if it's there but
I'm gonna go ahead and

128
00:07:46.260 --> 00:07:51.840
also pull in main because remember I
was on a branch, I wasn't on main.

129
00:07:51.840 --> 00:07:56.208
So I got to make sure I come back
to main and pull in my changes so

130
00:07:56.208 --> 00:08:00.072
that I can continue to
automate with the right state.

131
00:08:00.072 --> 00:08:02.402
Any questions about that?

132
00:08:04.779 --> 00:08:09.581
&gt;&gt; What if it didn't run when
the change was committed?

133
00:08:09.581 --> 00:08:13.068
&gt;&gt; What if it didn't run when
the change was committed?

134
00:08:13.068 --> 00:08:16.750
You can go into Terraform cloud and
manually do a run.

135
00:08:16.750 --> 00:08:20.585
Yeah, so if it didn't run for any reason,
you can always go into Terraform cloud.

136
00:08:20.585 --> 00:08:24.250
Go up in the top right-hand corner and
press Start Run.

137
00:08:29.977 --> 00:08:35.617
There are some times where GitHub
webhooks get weird and that might happen,

138
00:08:35.617 --> 00:08:40.390
but I would also make sure that
your VCs control is in fact set up.

