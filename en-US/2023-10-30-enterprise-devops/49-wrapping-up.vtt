WEBVTT

1
00:00:00.029 --> 00:00:03.470
Let's take a look at the homework
that you guys can essentially do.

2
00:00:03.470 --> 00:00:07.571
So if we go to
08-setup-configuration-directory,

3
00:00:07.571 --> 00:00:10.918
we've already had this concept of locals,
and

4
00:00:10.918 --> 00:00:14.947
we've got workspaces and
projects and stuff like that.

5
00:00:14.947 --> 00:00:17.455
And that's really nice, but

6
00:00:17.455 --> 00:00:22.282
it gets to a point where it
becomes really unmanageable.

7
00:00:22.282 --> 00:00:27.178
And we've talked about inputs, which is
something that is done through variables,

8
00:00:27.178 --> 00:00:31.404
but we haven't talked about something
which is called outputs, right?

9
00:00:31.404 --> 00:00:33.943
If we go to Terraform Cloud
really quickly,

10
00:00:36.189 --> 00:00:41.237
You'll see that my workspaces
provide me with inputs, right?

11
00:00:41.237 --> 00:00:46.498
But say if I go to terraform-tfe, you'll
also see that there are outputs here.

12
00:00:46.498 --> 00:00:48.710
Now there's none right now, but

13
00:00:48.710 --> 00:00:53.374
let's think about this from
a programming perspective for a second.

14
00:00:53.374 --> 00:00:57.040
We just wrote a whole bunch of code,
and we also made it so

15
00:00:57.040 --> 00:00:59.385
that it's configurable, right?

16
00:00:59.385 --> 00:01:04.857
What if we could pull variables not
just from the workspaces themselves,

17
00:01:04.857 --> 00:01:06.985
but from other workspaces.

18
00:01:06.985 --> 00:01:11.690
Like say, for example,
what if I said, I wanna make this

19
00:01:11.690 --> 00:01:16.788
a little bit more complicated,
and I actually wanna make it so

20
00:01:16.788 --> 00:01:21.216
my networks follow the same
pattern as other things.

21
00:01:21.216 --> 00:01:26.600
And so then I say, all right, well,
I'm gonna create another locals file.

22
00:01:26.600 --> 00:01:29.388
And this will be all of my
infrastructure configuration.

23
00:01:29.388 --> 00:01:33.042
So what we're gonna do is we're
gonna go to our workspace_aws file.

24
00:01:33.042 --> 00:01:37.950
Now you might say, why are we going
from locals to workspace_aws?

25
00:01:37.950 --> 00:01:40.893
Because we're gonna add more logic.

26
00:01:40.893 --> 00:01:48.311
It's a little complex, but the TL;DR is
it's just a big for loop on our networks.

27
00:01:48.311 --> 00:01:52.866
So in the same way that we're doing for
loops in other places, I can do for

28
00:01:52.866 --> 00:01:54.371
loops on our networks.

29
00:01:54.371 --> 00:01:57.896
And so then later on,
if I wanna create more networks,

30
00:01:57.896 --> 00:02:02.357
I don't have to do copy-paste,
even on the whole workspace level.

31
00:02:02.357 --> 00:02:07.012
I've now abstracted workspaces
into their own dynamic code.

32
00:02:07.012 --> 00:02:11.662
So that now I can say, all right, well,
if I wanna mess with infrastructure stuff,

33
00:02:11.662 --> 00:02:13.509
then I can just add a new network.

34
00:02:13.509 --> 00:02:18.106
So if I was to say, all right, I want to
add another network, in the old scenario,

35
00:02:18.106 --> 00:02:21.240
I'd have to copy that whole
workspace code, paste it,

36
00:02:21.240 --> 00:02:22.792
and then put in my changes.

37
00:02:22.792 --> 00:02:25.318
But in this scenario,
I don't have to do that.

38
00:02:25.318 --> 00:02:29.418
All I have to do is paste it like that,
commit and push, and

39
00:02:29.418 --> 00:02:31.610
now I have a whole new network.

40
00:02:31.610 --> 00:02:34.428
Same thing for the cluster, right?

41
00:02:34.428 --> 00:02:38.695
So another thing that you can do
with this, which is really awesome,

42
00:02:38.695 --> 00:02:43.122
is you can actually create what we
talk about in DevOps for developers.

43
00:02:43.122 --> 00:02:45.752
So be sure to check out the DevOps for
developers course.

44
00:02:45.752 --> 00:02:50.072
We create our own service directory,

45
00:02:50.072 --> 00:02:53.857
and that's in local_service.

46
00:02:53.857 --> 00:02:56.281
And I want you to stew on this for
just a second.

47
00:02:56.281 --> 00:03:00.715
The goal here is to make it so
that developers,

48
00:03:00.715 --> 00:03:04.809
if they want to configure their services,

49
00:03:04.809 --> 00:03:11.418
they only have to go to their
service repository or terraform-tfe.

50
00:03:11.418 --> 00:03:12.633
That's it.

51
00:03:12.633 --> 00:03:14.789
And this is how it works at Hippo.

52
00:03:14.789 --> 00:03:19.022
We have a main repository that has
this configuration inside of it, so

53
00:03:19.022 --> 00:03:22.252
that developers can go to
that repository and copy and

54
00:03:22.252 --> 00:03:26.581
paste a couple of lines of code,
put in their variables that they need.

55
00:03:26.581 --> 00:03:31.481
And then we have pipelines get
triggered downstream, right?

56
00:03:31.481 --> 00:03:34.992
So terraform-tfe gets applied and
saved, and

57
00:03:34.992 --> 00:03:40.009
the moment that's done,
we then say okay, well, let's do this.

58
00:03:40.009 --> 00:03:44.894
Let's go to our service repository, for
example, so let's go to that example repo.

59
00:03:44.894 --> 00:03:48.366
And again, this is homework for you guys.

60
00:03:52.469 --> 00:03:58.286
And let's go to the last
branch in that repo, 08.

61
00:03:58.286 --> 00:04:03.778
If we go here, looks pretty similar,
except for look at what we've got here.

62
00:04:03.778 --> 00:04:07.836
We have a data file, or a data resource.

63
00:04:07.836 --> 00:04:14.392
This data resource, look at
the workspace it's looking at, eci-tfe.

64
00:04:14.392 --> 00:04:18.728
So what's going on right now, right?

65
00:04:18.728 --> 00:04:21.096
What we're doing is we're making it so

66
00:04:21.096 --> 00:04:23.983
that the developers have
to touch less things.

67
00:04:23.983 --> 00:04:27.621
And we're saying, hey, Devs,
all the stuff you care about,

68
00:04:27.621 --> 00:04:32.100
it's in our configuration domain-specific
language in terraform-tfe.

69
00:04:32.100 --> 00:04:36.408
Just go there and we'll make sure that
the pipelines downstream get triggered.

70
00:04:36.408 --> 00:04:40.980
You don't have to worry about if it's a
cluster or if it's network or what's got,

71
00:04:40.980 --> 00:04:45.639
just we'll take care of that, put your
configuration in your repository, right?

72
00:04:45.639 --> 00:04:52.010
And so once this is added to
the terraform-product-service repository,

73
00:04:52.010 --> 00:04:58.389
what we can do then is we can then use
more logic to create all of our services.

74
00:04:58.389 --> 00:05:01.558
And so this is a fun little for loop,

75
00:05:01.558 --> 00:05:06.316
where if you look at this long
[LAUGH] value right here,

76
00:05:06.316 --> 00:05:11.194
you can kind of consider this
as an import in your code.

77
00:05:11.194 --> 00:05:17.324
But it's actually an API call
request made to the other workspace.

78
00:05:17.324 --> 00:05:21.168
So that it will check and see, okay,

79
00:05:21.168 --> 00:05:27.493
any non-sensitive values named services,
which we said,

80
00:05:27.493 --> 00:05:32.701
oop, sorry, which we said,
if we go back to our,

81
00:05:32.701 --> 00:05:37.984
GitHub, f4, sorry, two seconds, tfe,

82
00:05:37.984 --> 00:05:43.495
and then we go to outputs.

83
00:05:43.495 --> 00:05:45.829
This file is what makes it so

84
00:05:45.829 --> 00:05:50.905
that other workspaces can then
see those outputs, right?

85
00:05:50.905 --> 00:05:57.272
So if we think about the whole flow,
a developer comes to tfe, right?

86
00:05:57.272 --> 00:06:00.831
Adds their service to local_service,
right?

87
00:06:00.831 --> 00:06:02.205
And that's it.

88
00:06:02.205 --> 00:06:03.631
They walk away.

89
00:06:03.631 --> 00:06:10.029
They commit, all of the downstream
automation gets triggered.

90
00:06:10.029 --> 00:06:10.760
That's it.

91
00:06:10.760 --> 00:06:14.042
The developer doesn't have to ask,
did product service run, or

92
00:06:14.042 --> 00:06:15.163
did anything else run?

93
00:06:15.163 --> 00:06:19.212
No, because we only make sure you
care about just the one thing, right?

94
00:06:19.212 --> 00:06:21.599
If it doesn't get out in a matter of time,

95
00:06:21.599 --> 00:06:24.476
hit us up, let us know,
we'll help you, right?

96
00:06:24.476 --> 00:06:30.099
But it removes the need for developers
to have to touch as many things.

97
00:06:30.099 --> 00:06:36.241
And so again, if we look back at our
eci-terraform-product-service example,

98
00:06:36.241 --> 00:06:38.533
we have service here, right?

99
00:06:38.533 --> 00:06:43.662
And then, the other thing that
we do is we just go to main and

100
00:06:43.662 --> 00:06:46.396
then we wrap this in a for loop.

101
00:06:46.396 --> 00:06:47.970
And that's it.

102
00:06:47.970 --> 00:06:54.241
Now, whenever a product service is
updated, it will go out to tfe-workspace,

103
00:06:54.241 --> 00:06:59.789
download the data, and recognize if
there are any new services or not.

104
00:06:59.789 --> 00:07:04.926
If there are, it will add them to the for
loop and create those new services.

105
00:07:04.926 --> 00:07:10.670
If there aren't, it will delete any ones
that aren't in that for loop, right?

106
00:07:10.670 --> 00:07:13.874
This is service directory configuration.

107
00:07:13.874 --> 00:07:18.565
This enables you to have your
configuration at a very high level and

108
00:07:18.565 --> 00:07:21.598
then let it slowly go downstream, right?

109
00:07:21.598 --> 00:07:26.024
So that anything, okay, Google,
okay, Amazon, okay, Azure,

110
00:07:26.024 --> 00:07:29.997
developers don't have to care
about that anymore, right?

111
00:07:29.997 --> 00:07:34.472
Because it's just being brought
into the automation for them and

112
00:07:34.472 --> 00:07:39.351
the only thing that they have to worry
about is the configuration inside

113
00:07:39.351 --> 00:07:41.235
of the service directory.

114
00:07:41.235 --> 00:07:46.331
And that my friends is enterprise
cloud infrastructure in its fullest.

115
00:07:46.331 --> 00:07:51.883
Completely dynamic, completely
modularized, with its own separate

116
00:07:51.883 --> 00:07:56.969
updating life cycles,
its own separate approval and policies,

117
00:07:56.969 --> 00:08:02.908
as well as the complete control over
where and when you wanna update things.

118
00:08:02.908 --> 00:08:05.197
So I appreciate you guys watching.

119
00:08:05.197 --> 00:08:06.501
Thank you so much.

120
00:08:06.501 --> 00:08:08.286
Be sure to check out the repos.

121
00:08:08.286 --> 00:08:10.658
If you ever have any questions or
anything like that,

122
00:08:10.658 --> 00:08:13.511
you're more than welcome to watch me or
check me out on YouTube.

123
00:08:13.511 --> 00:08:15.521
I'm sorry, on Twitch.

124
00:08:15.521 --> 00:08:20.319
[LAUGH] But thank you guys so much for
being here, I appreciate it, and

125
00:08:20.319 --> 00:08:21.744
that is the course.

126
00:08:21.744 --> 00:08:25.709
&gt;&gt; [APPLAUSE]

