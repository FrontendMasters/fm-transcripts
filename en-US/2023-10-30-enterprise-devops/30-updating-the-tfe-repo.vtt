WEBVTT

1
00:00:00.230 --> 00:00:02.330
Okay, cool, so here's what I wanna do.

2
00:00:02.330 --> 00:00:03.445
Let's quickly, again,

3
00:00:03.445 --> 00:00:07.030
make sure to plan one more time just
to make sure we don't have any changes.

4
00:00:07.030 --> 00:00:09.742
I wanna make sure that you guys
are all caught up as well,

5
00:00:09.742 --> 00:00:13.740
cuz we're about to go into the next
section, which is setting up VCS tracking.

6
00:00:13.740 --> 00:00:15.900
So, okay, I'm gonna, looks good.

7
00:00:15.900 --> 00:00:18.885
Okay, so before we move to that,
let's do one more thing,

8
00:00:18.885 --> 00:00:21.474
which is I'm going to
actually commit my changes.

9
00:00:21.474 --> 00:00:23.900
So I'm gonna say git status, right?

10
00:00:23.900 --> 00:00:26.810
I'm gonna do git add -A.

11
00:00:26.810 --> 00:00:29.930
So I wanna just add everything, right?

12
00:00:29.930 --> 00:00:34.040
But when I do that,
look at what I'm accidentally adding here.

13
00:00:35.350 --> 00:00:38.972
I don't want my terraform
plan in my repository, right?

14
00:00:38.972 --> 00:00:42.360
And so this is something
else to pay attention to is,

15
00:00:42.360 --> 00:00:44.211
the git ignore can help you.

16
00:00:44.211 --> 00:00:47.741
But sometimes, if you have custom
naming conventions or stuff like that,

17
00:00:47.741 --> 00:00:51.385
there might be generated files that
accidentally get generated by terraform

18
00:00:51.385 --> 00:00:53.710
that you wanna make sure not to commit.

19
00:00:53.710 --> 00:00:59.130
So in this case, we'd actually say,
git rm terraform plan.

20
00:01:02.014 --> 00:01:04.698
Oops, sorry, actually get, what is it,

21
00:01:04.698 --> 00:01:09.300
sorry, is it git
&gt;&gt; Rm

22
00:01:09.300 --> 00:01:10.080
&gt;&gt; Is it rm?

23
00:01:10.080 --> 00:01:11.520
I thought that's what it was.

24
00:01:11.520 --> 00:01:17.980
Is it just force, there we go,
git rmm-- force.terraform, tfplan.

25
00:01:17.980 --> 00:01:23.350
So now if I do get status,
you'll see that that's now gone, right?

26
00:01:23.350 --> 00:01:26.310
So that makes sure that we don't
accidentally add that to state.

27
00:01:26.310 --> 00:01:29.380
If you wanted to,
you could also do that to the lock file.

28
00:01:29.380 --> 00:01:33.500
There's a bunch of other discussions on
why you'll do or do not wanna do that.

29
00:01:33.500 --> 00:01:35.654
For now,
we're just gonna keep the lock file.

30
00:01:35.654 --> 00:01:40.982
If you don't know what a lock file is,
it's essentially

31
00:01:40.982 --> 00:01:47.869
a file that holds specific version to
SHAs of every thing that you may use.

32
00:01:47.869 --> 00:01:51.303
And so this makes sure that if you
wanna use the provider tfe 48,

33
00:01:51.303 --> 00:01:55.612
that if you try installing a new one, the
lock file will actually say whoa, whoa,

34
00:01:55.612 --> 00:01:58.444
whoa, whoa, you've got 48,
you can't do 49.

35
00:01:58.444 --> 00:02:01.357
You got to update my lock
file to let you do that.

36
00:02:01.357 --> 00:02:03.239
So that's why people sometimes like it,

37
00:02:03.239 --> 00:02:06.208
that's why sometimes people hate
it cuz it's really annoying.

38
00:02:06.208 --> 00:02:10.507
I'm not a big fan of it, but for now just
to make our lives easier, we'll do it.

39
00:02:10.507 --> 00:02:15.582
So I'm gonna say git commit m "feat:

40
00:02:15.582 --> 00:02:20.662
initialized repository", right?

41
00:02:20.662 --> 00:02:27.210
And then I'm gonna push origin main, bam.

42
00:02:27.210 --> 00:02:35.640
So now if I go to my repo,
I should also see all of my other stuff.

43
00:02:35.640 --> 00:02:38.439
So you guys should be able
to see this too, right?

44
00:02:42.153 --> 00:02:46.792
This is now our source of truth, right?

45
00:02:46.792 --> 00:02:48.210
This is the GitOps part.

