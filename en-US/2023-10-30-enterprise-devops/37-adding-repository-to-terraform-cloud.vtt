WEBVTT

1
00:00:00.200 --> 00:00:05.158
All right, so now,
I'm going to save all of that and

2
00:00:05.158 --> 00:00:10.370
I'm going to do init doppler
run--terraform in it.

3
00:00:10.370 --> 00:00:12.080
I don't actually need Doppler here.

4
00:00:12.080 --> 00:00:13.570
Why don't I actually need Doppler here?

5
00:00:13.570 --> 00:00:14.540
Can anyone tell me?

6
00:00:14.540 --> 00:00:15.820
&gt;&gt; It's just local state.

7
00:00:15.820 --> 00:00:19.368
&gt;&gt; Why is it just a local state
&gt;&gt; This is the first time we're creating

8
00:00:19.368 --> 00:00:21.260
a state and we have yet to push it.

9
00:00:21.260 --> 00:00:23.710
&gt;&gt; Yep.
But what is the thing that makes it so

10
00:00:23.710 --> 00:00:27.170
it's not local,
there's a specific file that we create.

11
00:00:27.170 --> 00:00:29.150
&gt;&gt; The state or back end.

12
00:00:29.150 --> 00:00:30.830
&gt;&gt; Backend.tf, yeah.

13
00:00:30.830 --> 00:00:35.640
Basically whenever you have a backend.tf
file, you need credentials.

14
00:00:35.640 --> 00:00:38.880
If you don't have a backend.tf file,
you don't need credentials.

15
00:00:38.880 --> 00:00:42.020
So you might be like, well,
why aren't we doing that yet?

16
00:00:42.020 --> 00:00:45.116
Well, it's just to make sure that
everything gets inited fine and

17
00:00:45.116 --> 00:00:47.540
validated fine without it, right?

18
00:00:47.540 --> 00:00:52.430
Then what we do is we
add our backend.tf file.

19
00:00:52.430 --> 00:00:56.255
The cool thing about this is that we've
already done a lot of this work, right?

20
00:00:56.255 --> 00:01:00.182
We don't need to go back into
Terraform TFE or any of that stuff.

21
00:01:00.182 --> 00:01:04.140
We can just create a backend.tf file now.

22
00:01:04.140 --> 00:01:08.797
Right, and
just like we did with Terraform TFE,

23
00:01:08.797 --> 00:01:14.592
we're going to put in our
organization name seat-rhetoric

24
00:01:14.592 --> 00:01:19.589
I think that's what it is for
me, seat-rhetoric,

25
00:01:19.589 --> 00:01:24.701
and then the workspace that
it's supposed to track,

26
00:01:24.701 --> 00:01:29.048
right, which in this
case is FEM ECI Github.

27
00:01:29.048 --> 00:01:31.858
What's up?

28
00:01:35.437 --> 00:01:38.011
&gt;&gt; Doppler not specifying a project.

29
00:01:38.011 --> 00:01:40.495
&gt;&gt; Yeah, I get that too.

30
00:01:40.495 --> 00:01:42.320
Do Doppler setup.

31
00:01:42.320 --> 00:01:46.823
So if you get Doppler not specifying a
project that might mean that Doppler scope

32
00:01:46.823 --> 00:01:51.460
your credentials just to that one folder,
that's how it works sometimes.

33
00:01:51.460 --> 00:01:55.289
And so that means that you did it when you
did Doppler setup before you get in that

34
00:01:55.289 --> 00:01:59.530
folder, but if you go all the way to your
home directory and do Doppler setup.

35
00:01:59.530 --> 00:02:01.290
It'll go out through all
of your other stuff.

36
00:02:01.290 --> 00:02:02.510
So that's just one thing to note.

37
00:02:02.510 --> 00:02:04.910
I would actually say keep doing
it the way you're doing it.

38
00:02:04.910 --> 00:02:08.077
Just have your credentials scoped to
the directories next time you go in,

39
00:02:08.077 --> 00:02:10.110
it'll always know to
use those credentials.

40
00:02:10.110 --> 00:02:15.230
I don't have to do that because again,
I did the the global scoping thing.

41
00:02:15.230 --> 00:02:17.990
Actually, I don't know if I did or not.

42
00:02:17.990 --> 00:02:19.690
So we'll see I might
actually run into that too.

43
00:02:19.690 --> 00:02:22.804
&gt;&gt; So was that like when you say home-
&gt;&gt; The home directory, but

44
00:02:22.804 --> 00:02:24.480
your home your user directory.

45
00:02:24.480 --> 00:02:27.346
&gt;&gt; If all my repos are in
under like say projects and

46
00:02:27.346 --> 00:02:31.650
I put it under the project folder,
is that the equivalent?

47
00:02:31.650 --> 00:02:37.460
&gt;&gt; No you do it in your home directory
because that's where your user is yeah,

48
00:02:37.460 --> 00:02:38.021
yeah.

49
00:02:38.021 --> 00:02:43.070
&gt;&gt; We want to do a plan and
apply before we set up the backend.

50
00:02:43.070 --> 00:02:44.450
&gt;&gt; Locals.
Just, just in,

51
00:02:44.450 --> 00:02:45.640
&gt;&gt; No, just init and validate.

52
00:02:45.640 --> 00:02:46.150
&gt;&gt; And backend.

53
00:02:46.150 --> 00:02:46.720
&gt;&gt; Yeah.
&gt;&gt; Okay.

54
00:02:46.720 --> 00:02:48.130
&gt;&gt; Yep, and then backend, yeah.

55
00:02:48.130 --> 00:02:49.894
Init, validate and then backend, yeah.

56
00:02:56.503 --> 00:02:57.843
Okay, cool.

57
00:02:57.843 --> 00:02:59.891
So now that we've got this.

58
00:02:59.891 --> 00:03:03.611
Now we can do an init with Doppler run,
right?

59
00:03:10.670 --> 00:03:12.216
I got the same problem you guys did.

60
00:03:12.216 --> 00:03:15.490
So Doppler setup, right?

61
00:03:15.490 --> 00:03:20.268
Again, if you run into this problem or
if you initialize, then it's like,

62
00:03:20.268 --> 00:03:22.500
I can't talk to it, right?

63
00:03:22.500 --> 00:03:25.811
That means that your Doppler
credentials got shifted, so

64
00:03:25.811 --> 00:03:27.780
we do Doppler setup one more time.

65
00:03:27.780 --> 00:03:33.761
And then we tell this directory to also
use the Frontend Master's project,

66
00:03:33.761 --> 00:03:36.640
and then it should work.

67
00:03:36.640 --> 00:03:37.940
There we go, cool.

68
00:03:37.940 --> 00:03:39.760
So now we have a backend in place.

69
00:03:39.760 --> 00:03:44.970
We have our automation repository set up,
and we've added our configurations.

70
00:03:44.970 --> 00:03:46.855
Last chicken before the egg scenario.

71
00:03:46.855 --> 00:03:49.670
[LAUGH] Go ahead and do a plan for me.

72
00:03:49.670 --> 00:03:51.896
Go ahead and do a plan space.

73
00:03:51.896 --> 00:03:54.130
Don't forget the space if
you are using history.

74
00:03:55.510 --> 00:03:59.044
You might notice that when you do an ad or
when you do a plan,

75
00:03:59.044 --> 00:04:02.510
you got a bunch of stuff
that's being added.

76
00:04:02.510 --> 00:04:06.676
We're back in the scenario where it
doesn't know that something was created,

77
00:04:06.676 --> 00:04:11.240
right, because we've already created
two repos outside of the state.

78
00:04:11.240 --> 00:04:17.290
So what we want to do is we actually
want to import these into state.

79
00:04:17.290 --> 00:04:20.638
Now, some of our class members have
already had a little bit of experience

80
00:04:20.638 --> 00:04:23.480
with that, but I'm gonna show it for
everyone else.

81
00:04:23.480 --> 00:04:28.193
If you go to the main FVM repository,
the one that I showed you for

82
00:04:28.193 --> 00:04:30.129
Altair four, all right?

83
00:04:32.500 --> 00:04:33.657
The GitHub one.

84
00:04:39.566 --> 00:04:43.597
Nope, that's not the one I want but
we can get there.

85
00:04:43.597 --> 00:04:46.555
Two seconds guys, sorry.

86
00:04:46.555 --> 00:04:47.501
GitHub, yep.

87
00:04:47.501 --> 00:04:52.632
I included a very simple import.sh
script for you, now you don't need to

88
00:04:52.632 --> 00:04:58.034
use this script, but you do need to copy
and paste the commands in it, right?

89
00:04:58.034 --> 00:05:03.465
What we need to do is we need
to do Doppler run dash dash and

90
00:05:03.465 --> 00:05:07.870
then import the state
of the two repository.

91
00:05:07.870 --> 00:05:10.030
Now we just need to import the repos.

92
00:05:10.030 --> 00:05:12.550
We don't need to import
like branch protections or

93
00:05:12.550 --> 00:05:16.610
any other crazy things because Terraform
will pick that up for us, right?

94
00:05:16.610 --> 00:05:21.276
But this Command right here,
is what you need to run first and

95
00:05:21.276 --> 00:05:25.315
I'll leave that up for you so
that you guys can do it.

96
00:05:28.663 --> 00:05:32.059
Now what this command is gonna do
is it's gonna say for starters,

97
00:05:32.059 --> 00:05:33.435
hey Doppler, I need you.

98
00:05:33.435 --> 00:05:37.827
And then it's gonna say,
after I've imported the credentials,

99
00:05:37.827 --> 00:05:43.173
Terraform via this path
module.repository["fem-eci-terraform-gith-

100
00:05:43.173 --> 00:05:46.310
ub"].github_repository.self, right?

101
00:05:46.310 --> 00:05:51.957
Because the module contains the actual
GitHub repository resource,

102
00:05:51.957 --> 00:05:55.516
which in this case is named .self, right?

103
00:05:55.516 --> 00:05:59.840
And then we need to give it the name
of the actual resource we made, right?

104
00:05:59.840 --> 00:06:03.010
So fem-eci-terraform,
excuse me, terraform-github.

105
00:06:04.800 --> 00:06:08.875
So once I have this and I hit enter,
Terraform is gonna take a moment,

106
00:06:08.875 --> 00:06:13.798
it's gonna make sure everything is good
and then it's gonna import my resource for

107
00:06:13.798 --> 00:06:14.950
me, okay?

108
00:06:14.950 --> 00:06:19.042
So you're gonna wanna do
the same thing for both repos.

109
00:06:19.042 --> 00:06:22.575
So we're gonna do the same thing for
terraform-tfe now.

110
00:06:22.575 --> 00:06:23.960
Go like that.

111
00:06:23.960 --> 00:06:24.460
Hit enter.

112
00:06:28.722 --> 00:06:31.492
&gt;&gt; So that's importing
the first parameter there.

113
00:06:31.492 --> 00:06:34.250
That's from the local state?

114
00:06:34.250 --> 00:06:35.620
&gt;&gt; Yes, exactly.

115
00:06:35.620 --> 00:06:40.903
So even though we didn't create it,
because it's in configuration,

116
00:06:40.903 --> 00:06:46.021
we can still import it with it
knowing that it's in the code, right?

117
00:06:46.021 --> 00:06:48.532
Because it'll read the code and
it'll go, okay, well,

118
00:06:48.532 --> 00:06:51.384
is there any resource in
the code that exists that's this?

119
00:06:51.384 --> 00:06:51.937
I see it.

120
00:06:51.937 --> 00:06:53.760
It's module.repository, right?

121
00:06:54.860 --> 00:07:01.330
Because it's a for loop, we have to
do the quotes and all that stuff.

122
00:07:01.330 --> 00:07:05.638
And so yeah, what we basically
do is after we have that,

123
00:07:05.638 --> 00:07:10.050
we then import the actual name
of the repository itself.

124
00:07:10.050 --> 00:07:13.480
And so you might be like, well,
there's no Eric Reinert there, right?

125
00:07:13.480 --> 00:07:16.496
Well, because Doppler has GitHub
owner in its credentials,

126
00:07:16.496 --> 00:07:19.110
it already knows which one
we're looking at, yeah.

127
00:07:20.410 --> 00:07:22.110
So a little bit of magic there for sure.

128
00:07:23.640 --> 00:07:25.480
&gt;&gt; And if we had a literal string air.

129
00:07:26.760 --> 00:07:29.317
&gt;&gt; I'm slightly worried that
that might be a Windows thing.

130
00:07:34.566 --> 00:07:41.658
Can you put that into like a quick
PowerShell script and see if it runs?

131
00:07:41.658 --> 00:07:45.938
Like I'm trying to figure out how that,
yeah,

132
00:07:45.938 --> 00:07:51.502
we might have to Google and see,
cuz I'm not really too sure,

133
00:07:51.502 --> 00:07:57.550
I feel like it's like string escaping or
something weird.

134
00:07:57.550 --> 00:08:02.510
Why don't you Google really quick for
me, Terraform import PowerShell.

135
00:08:02.510 --> 00:08:05.000
I guarantee you somebody
else has dealt with this.

136
00:08:05.000 --> 00:08:07.750
So really quickly,
just see if that's your problem.

137
00:08:07.750 --> 00:08:10.450
Cause we're almost done with this section.

138
00:08:10.450 --> 00:08:12.970
So like I can come and
help you in a second.

139
00:08:12.970 --> 00:08:14.010
&gt;&gt; Yeah.

140
00:08:14.010 --> 00:08:16.696
One note in the chat that
if you copy paste it,

141
00:08:16.696 --> 00:08:19.238
it might be pasting like weird quotes.

142
00:08:19.238 --> 00:08:20.080
&gt;&gt; If you copy, okay.

143
00:08:20.080 --> 00:08:23.512
&gt;&gt; So you might wanna copy
paste into like notepad.

144
00:08:23.512 --> 00:08:24.578
&gt;&gt; There you go.
&gt;&gt; And then-

145
00:08:24.578 --> 00:08:25.540
&gt;&gt; Thank you, Chet-

146
00:08:25.540 --> 00:08:27.090
&gt;&gt; Clean set of quotes around it.

147
00:08:27.090 --> 00:08:28.530
&gt;&gt; There you go.
Yeah, give that a shot.

148
00:08:28.530 --> 00:08:30.130
Did everyone else get imported?

149
00:08:30.130 --> 00:08:31.910
Did that work for you?

150
00:08:31.910 --> 00:08:33.472
&gt;&gt; Escaping the double quotes.

151
00:08:33.472 --> 00:08:34.120
&gt;&gt; Beautiful.

152
00:08:34.120 --> 00:08:34.650
Awesome.

153
00:08:34.650 --> 00:08:35.330
Okay, cool.

154
00:08:35.330 --> 00:08:38.860
So now, now, we can do a plan.

155
00:08:38.860 --> 00:08:40.490
Alright, so we're gonna do a plan.

156
00:08:40.490 --> 00:08:41.780
Let's see what the plan says.

157
00:08:42.810 --> 00:08:45.579
Whoa, what happened first,
look at this up at the top.

158
00:08:46.620 --> 00:08:49.370
Refreshing state, okay, cool.

159
00:08:49.370 --> 00:08:53.768
So that means that Terraform Cloud now
sees our repos, it went out to GitHub,

160
00:08:53.768 --> 00:08:58.235
checked them, and then told us that
here's the stuff that we're gonna need or

161
00:08:58.235 --> 00:09:00.630
we're gonna need to change, right?

162
00:09:00.630 --> 00:09:04.510
So first off, you'll notice that it's
gonna create a branch protection.

163
00:09:04.510 --> 00:09:07.965
This is one of the first things
when it comes to automation and

164
00:09:07.965 --> 00:09:11.280
standardization that's really helpful.

165
00:09:11.280 --> 00:09:18.130
Every repo going forward, will now
have proper branch protections on it.

166
00:09:18.130 --> 00:09:21.070
I don't ever have to
think about this again.

167
00:09:21.070 --> 00:09:23.474
If I wanna update branch protections for

168
00:09:23.474 --> 00:09:28.082
every repo going forward I just go into
Terraform GitHub and I apply it, yes.

169
00:09:28.082 --> 00:09:32.491
&gt;&gt; Upgrade to GitHub Pro or make this
repo public to enable this feature.

170
00:09:32.491 --> 00:09:33.530
&gt;&gt; Make it public.

171
00:09:33.530 --> 00:09:34.470
Yeah, yeah.
Make it public.

172
00:09:34.470 --> 00:09:36.100
Yeah.
Go ahead and make that one public, yeah.

173
00:09:36.100 --> 00:09:37.100
These ones can be public.

174
00:09:37.100 --> 00:09:38.350
Yeah, yeah, yeah, that's fine.

175
00:09:38.350 --> 00:09:39.770
Go ahead and make that one public, yeah.

176
00:09:39.770 --> 00:09:42.735
&gt;&gt; We need to update the visibility and
locals then as well.

177
00:09:42.735 --> 00:09:44.841
&gt;&gt; Yeah, let's go ahead and do that.

178
00:09:44.841 --> 00:09:49.814
Wait, so did anyone else get that error?

179
00:09:49.814 --> 00:09:52.262
&gt;&gt; I thought it was-
&gt;&gt; I got it both in public.

180
00:09:52.262 --> 00:09:53.301
&gt;&gt; Okay.
&gt;&gt; They gotta go,

181
00:09:53.301 --> 00:09:54.903
so-
&gt;&gt; Okay, cool, yeah, so

182
00:09:54.903 --> 00:09:56.504
let's just do public just to be safe.

183
00:10:00.354 --> 00:10:03.679
So here, I'll do the same thing as you.

184
00:10:03.679 --> 00:10:07.840
So again, one quick change we're gonna
make is we're gonna set these to public.

185
00:10:07.840 --> 00:10:11.700
If you run into an error where it
says like, licensing can't do it,

186
00:10:11.700 --> 00:10:14.050
anything like that, that's okay.

187
00:10:14.050 --> 00:10:15.420
Just set them to public for now.

188
00:10:16.910 --> 00:10:18.646
This, I don't pay for this account, so

189
00:10:18.646 --> 00:10:21.120
I have no idea why it's
still doing that for me.

190
00:10:21.120 --> 00:10:26.022
But yeah,
if we set it to public we can plan one

191
00:10:26.022 --> 00:10:30.408
more time and then it should work, yes?

192
00:10:30.408 --> 00:10:31.356
Yes, okay.

193
00:10:31.356 --> 00:10:36.265
[LAUGH] Cool I was like, okay,
cool, all right, cool, yeah.

194
00:10:36.265 --> 00:10:42.431
So again, realistically these can be
private or this would be an organization.

195
00:10:42.431 --> 00:10:43.030
You know what I mean?

196
00:10:43.030 --> 00:10:45.560
If it was in an org, you wouldn't
be running into these problems.

197
00:10:45.560 --> 00:10:47.930
So again, let me just go back
through this one more time.

198
00:10:47.930 --> 00:10:49.050
So we've got it.

199
00:10:49.050 --> 00:10:52.010
We have our main repository, right?

200
00:10:52.010 --> 00:10:55.100
All of our main options
that we've created.

201
00:10:55.100 --> 00:11:01.979
We then also have our variables, which is
the owner that we are now passing, right.

202
00:11:03.030 --> 00:11:10.420
We then also have our locals, right, which
is our configuration for our repositories.

203
00:11:10.420 --> 00:11:13.087
And again, they're set to public for
now just so

204
00:11:13.087 --> 00:11:15.440
that we don't deal with any weird issues.

205
00:11:16.530 --> 00:11:19.847
And then we also have our backend.tf so

206
00:11:19.847 --> 00:11:24.481
that we can actually utilize
the cloud state, right?

207
00:11:24.481 --> 00:11:26.296
&gt;&gt; Did we already apply?

208
00:11:26.296 --> 00:11:28.540
&gt;&gt; No, we have not yet, no.

209
00:11:28.540 --> 00:11:30.910
Yeah, so
now we're gonna plan one last time.

210
00:11:30.910 --> 00:11:37.119
And again, we should only add two and
change two.

211
00:11:37.119 --> 00:11:39.261
That's it, right?

212
00:11:39.261 --> 00:11:40.960
So now I'm going to apply.

213
00:11:43.620 --> 00:11:48.191
And just like every other DevOps
engineer you cross your fingers and

214
00:11:48.191 --> 00:11:53.242
hope it works [LAUGH] And these companies
and their licensing man just give us

215
00:11:53.242 --> 00:11:58.556
a free trial [LAUGH] come on, okay cool so
everyone should be able to apply that.

216
00:11:58.556 --> 00:12:00.323
Is that correct, we can all apply that?

217
00:12:00.323 --> 00:12:05.005
Okay, great, that means going forward we
definitely don't have any other problems.

218
00:12:05.005 --> 00:12:07.260
Great, okay and
by the way you should go into QA

