WEBVTT

1
00:00:00.000 --> 00:00:07.158
So once we've got that, we're actually
okay with GitHub for right now, right?

2
00:00:07.158 --> 00:00:10.225
Cuz what we're really trying to do, is
we're just trying to set up everything so

3
00:00:10.225 --> 00:00:11.995
we don't have to think about it later,
okay?

4
00:00:11.995 --> 00:00:18.636
So we've set up Doppler, right?

5
00:00:18.636 --> 00:00:22.584
We've set up GitHub, and now we
wanna set up Terraform Cloud, right?

6
00:00:22.584 --> 00:00:26.236
So the next thing you're gonna wanna do
is you're gonna wanna navigate to your

7
00:00:26.236 --> 00:00:27.519
Terraform Cloud account.

8
00:00:27.519 --> 00:00:31.665
So it's like app.terraform.io.

9
00:00:34.418 --> 00:00:37.090
Now again,
I already have workspaces in here, but

10
00:00:37.090 --> 00:00:39.960
this is an example of what
Terraform Cloud looks like.

11
00:00:39.960 --> 00:00:43.404
You've got a lot of
the fundamentals in your mind now.

12
00:00:43.404 --> 00:00:46.216
So this should make a little sense, right,

13
00:00:46.216 --> 00:00:50.627
of what these workspaces are,
what resources they manage, right?

14
00:00:50.627 --> 00:00:54.389
As you'll notice in my existing
resources I have a cache, right?

15
00:00:54.389 --> 00:00:56.652
This is all my cache resources.

16
00:00:56.652 --> 00:00:58.689
Here's my cluster resources.

17
00:00:58.689 --> 00:01:03.149
And you'll notice that I have,
why is Bulbasaur in there?

18
00:01:03.149 --> 00:01:04.812
[INAUDIBLE]
&gt;&gt; Right,

19
00:01:04.812 --> 00:01:07.697
that's how I version my infrastructure.

20
00:01:07.697 --> 00:01:11.193
So instead of Version 1,
Version 2, I got nerdy with it and

21
00:01:11.193 --> 00:01:13.881
I said,
all of my versions are off of Pokemon.

22
00:01:13.881 --> 00:01:20.121
So technically, this cluster is the first
version of the AWS cluster for dev.

23
00:01:20.121 --> 00:01:21.202
Why do we do that?

24
00:01:21.202 --> 00:01:24.336
Why do we version our clusters like that?

25
00:01:24.336 --> 00:01:28.499
Well, it makes it so that I can have
multiple clusters per environment, right?

26
00:01:28.499 --> 00:01:32.436
So if I wanted to have an active and
a passive cluster, right,

27
00:01:32.436 --> 00:01:35.936
this is where these workspaces
really come into play.

28
00:01:35.936 --> 00:01:40.014
I could have an AWS cluster bulbasaur, or

29
00:01:40.014 --> 00:01:46.318
AWS cluster active-dev,
AWS cluster passive-dev, right?

30
00:01:46.318 --> 00:01:48.883
Each workspace manages its own cluster,
and

31
00:01:48.883 --> 00:01:53.484
then when I wanna shift between one to
the other, I just change the name, right?

32
00:01:53.484 --> 00:01:58.089
So having good naming conventions
is really crucial when it

33
00:01:58.089 --> 00:02:00.581
comes to setting up resources.

34
00:02:00.581 --> 00:02:06.707
Another thing you'll notice is what's
the first thing you read in my workspaces?

35
00:02:06.707 --> 00:02:08.283
That answers what question?

36
00:02:08.283 --> 00:02:08.995
&gt;&gt; Provider.

37
00:02:08.995 --> 00:02:13.482
&gt;&gt; Exactly, so if I was a developer and
I came in here and I said, where are they?

38
00:02:13.482 --> 00:02:15.464
Where, Amazon.

39
00:02:15.464 --> 00:02:17.294
What, cache.

40
00:02:17.294 --> 00:02:19.497
When, Bulbasaur, right?

41
00:02:19.497 --> 00:02:25.527
So you've got where, what, and when,
basically, all in your naming conventions.

42
00:02:25.527 --> 00:02:28.507
This is crucial to scale.

43
00:02:28.507 --> 00:02:29.474
It is, it really is.

44
00:02:29.474 --> 00:02:31.511
Naming is crucial.

45
00:02:31.511 --> 00:02:35.727
Knowing what is something and
what that name is, is very, very crucial,

46
00:02:35.727 --> 00:02:39.131
because it makes it easier for
people to find things, yep.

47
00:02:39.131 --> 00:02:42.021
&gt;&gt; So
this first time into Terraform Cloud,

48
00:02:42.021 --> 00:02:47.226
it gives you the option to pick between
provisioning example resources for

49
00:02:47.226 --> 00:02:51.455
a new user, creating a new
organization with a blank slate.

50
00:02:51.455 --> 00:02:54.905
&gt;&gt; Create a new org with blank slate,
yeah, go ahead and do that, yeah, yeah.

51
00:02:54.905 --> 00:02:58.172
So if you do get asked to create a new
org, just create an organization,

52
00:02:58.172 --> 00:02:59.812
make it your own name that you want.

53
00:02:59.812 --> 00:03:04.791
Basically get to the point where you have
a blank page with just what you see here

54
00:03:04.791 --> 00:03:07.143
without any resources in it, yeah.

55
00:03:11.584 --> 00:03:14.922
And again, you can see here,
hey, look at that!

56
00:03:14.922 --> 00:03:18.482
Even I have a GitHub and a TFE, right?

57
00:03:18.482 --> 00:03:23.314
And this is because, again, I follow that
same mentality of automate everything.

58
00:03:23.314 --> 00:03:26.118
The next thing we wanna do,
is we actually wanna create a token.

59
00:03:26.118 --> 00:03:28.894
All we're doing right now is just
setting up our environment, so

60
00:03:28.894 --> 00:03:32.290
we gotta have access to everything when
we go to start creating our automation.

61
00:03:32.290 --> 00:03:35.389
So I'm gonna click up in the top
here on my little profile, and

62
00:03:35.389 --> 00:03:37.308
then I'm gonna click User Settings.

63
00:03:37.308 --> 00:03:42.358
Now, there's two ways to create
tokens in Terraform Cloud,

64
00:03:42.358 --> 00:03:48.296
but there's a caveat in one way,
which is a token cannot manage itself.

65
00:03:48.296 --> 00:03:50.502
Does that make sense?

66
00:03:50.502 --> 00:03:54.894
Does anyone know maybe why
a token cannot manage itself?

67
00:03:54.894 --> 00:03:56.458
&gt;&gt; Because it'll expire?

68
00:03:56.458 --> 00:03:59.265
&gt;&gt; Sure, well,
it could delete itself, right?

69
00:03:59.265 --> 00:04:02.071
It could manipulate or
change things and things like that.

70
00:04:02.071 --> 00:04:07.024
And so, if you wanted to,
there is actually a way in

71
00:04:07.024 --> 00:04:12.339
Terraform Cloud to create tokens for
organizations.

72
00:04:12.339 --> 00:04:16.661
But they don't let you manage
everything because the user is

73
00:04:16.661 --> 00:04:20.993
what has complete access to
everything in Terraform Cloud.

74
00:04:20.993 --> 00:04:27.039
So this is a little bit of a caveat here,
which is, if you want to manage teams and

75
00:04:27.039 --> 00:04:32.838
higher level resources, it actually is
just easier to create a user token.

76
00:04:32.838 --> 00:04:36.906
Because this is like the admin
of the admin, essentially, and

77
00:04:36.906 --> 00:04:39.997
it has access to every org,
every permission.

78
00:04:39.997 --> 00:04:41.355
This is something I ran into.

79
00:04:41.355 --> 00:04:43.026
So we're gonna go to tokens for

80
00:04:43.026 --> 00:04:46.705
our user, and then we're gonna
click Create an API Token, right?

81
00:04:46.705 --> 00:04:50.766
I'm gonna type in my token, example token.

82
00:04:50.766 --> 00:04:54.898
90 days again, set an expiration, right?

83
00:04:54.898 --> 00:04:56.725
Then I'm gonna generate token.

84
00:04:56.725 --> 00:04:59.269
Now, there's my token, right?

85
00:04:59.269 --> 00:05:01.620
There's a button right here that
allows me to copy that token.

86
00:05:01.620 --> 00:05:04.695
So I'm gonna click Copy, and
then I'm gonna click Delete so

87
00:05:04.695 --> 00:05:06.399
that no one can delete anything.

88
00:05:06.399 --> 00:05:10.678
And then I'm gonna go back,
once again, to Doppler.

89
00:05:10.678 --> 00:05:16.245
And Just like we did with Github,
I'm gonna go to My Project,

90
00:05:16.245 --> 00:05:21.815
and I'm gonna add another token,
two technically, sorry,

91
00:05:21.815 --> 00:05:27.171
one TFE token, and
we're gonna paste the value there, and

92
00:05:27.171 --> 00:05:32.230
then another one is
TF_Token_App_Terraform_io.

93
00:05:32.230 --> 00:05:36.238
Now you might be like, why do we have
both of these with the same value?

94
00:05:36.238 --> 00:05:41.323
It's because one is for
native connection to Terraform Cloud,

95
00:05:41.323 --> 00:05:46.516
whereas the second one is using
it with the provider, all right?

96
00:05:46.516 --> 00:05:52.046
So the first one is to make sure that the
TFE token can actually access everything,

97
00:05:52.046 --> 00:05:54.851
but when we run it with Terraform itself,

98
00:05:54.851 --> 00:05:59.742
it uses TFE token underscore app provider,
because Terraform actually

99
00:05:59.742 --> 00:06:03.690
allows you to have your own
hosting service if you wanted.

100
00:06:03.690 --> 00:06:08.687
So they make it so that this is how you
target which Terraform cloud you're

101
00:06:08.687 --> 00:06:12.975
trying to talk to, essentially,
and what key you're using.

102
00:06:12.975 --> 00:06:16.933
And since we're using
the official TerraForm cloud,

103
00:06:16.933 --> 00:06:19.780
we just use App_TerraForm_IO, so.

104
00:06:19.780 --> 00:06:21.327
&gt;&gt; Is that for the runner itself?

105
00:06:21.327 --> 00:06:21.892
&gt;&gt; What's that?

106
00:06:21.892 --> 00:06:23.844
&gt;&gt; Is that for the runner?

107
00:06:23.844 --> 00:06:26.788
&gt;&gt; Well, we're gonna be doing
runs locally, but yeah, it's for

108
00:06:26.788 --> 00:06:28.052
the runner itself, yeah.

109
00:06:33.000 --> 00:06:35.376
And again, as far as I know,
this is still required.

110
00:06:35.376 --> 00:06:40.772
It might not be, but we're just gonna
add there just to be safe, right?

111
00:06:40.772 --> 00:06:43.850
So I'm gonna do this again,
12345, 123456, right?

112
00:06:43.850 --> 00:06:46.822
I'm gonna save, and save.

