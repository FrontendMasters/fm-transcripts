WEBVTT

1
00:00:00.021 --> 00:00:02.928
So okay,
let's talk about what we've done, right?

2
00:00:02.928 --> 00:00:06.149
And let's kind of just recap
really quickly, because again,

3
00:00:06.149 --> 00:00:08.111
there's a lot going on here, right?

4
00:00:08.111 --> 00:00:10.937
So I'm gonna pull up
that chart one more time,

5
00:00:10.937 --> 00:00:14.498
because I do feel like it helps
to see a visual aid, right?

6
00:00:14.498 --> 00:00:16.452
We're using Terraform cloud.

7
00:00:16.452 --> 00:00:18.578
This is where all of our state exists.

8
00:00:18.578 --> 00:00:24.425
This is where all of our source of truth
in the sense of what we've changed exists,

9
00:00:24.425 --> 00:00:25.030
right?

10
00:00:25.030 --> 00:00:29.126
And in Terraform cloud, although
unfortunately we won't be making teams

11
00:00:29.126 --> 00:00:32.059
this time, right,
it then has the concept of teams.

12
00:00:32.059 --> 00:00:37.330
So then underneath teams, we would have
our main automation workspaces, right?

13
00:00:37.330 --> 00:00:41.592
Each one of these workspace has
a different problem that it's trying to

14
00:00:41.592 --> 00:00:44.797
solve with state that it's
going to manage, right?

15
00:00:44.797 --> 00:00:48.300
So in this case, the first brick we were

16
00:00:48.300 --> 00:00:53.197
essentially building was
the TFE workspace, right?

17
00:00:53.197 --> 00:00:57.815
This is a part of the chicken before
the egg scenario, when we wanna make it so

18
00:00:57.815 --> 00:01:01.713
that we can push automation to
a repository and just be done, but

19
00:01:01.713 --> 00:01:05.926
the workspace that tracks that
repository is not set up yet, right?

20
00:01:05.926 --> 00:01:10.108
So we then create our repo first so
that, again,

21
00:01:10.108 --> 00:01:15.822
once we have our workspace created and
they're in the same state,

22
00:01:15.822 --> 00:01:21.433
meaning that the code that created
the workspace is now in the same

23
00:01:21.433 --> 00:01:26.862
state if it tried to apply over and
over, we then connect them.

24
00:01:26.862 --> 00:01:31.673
So we have no changes here and no changes
here, and then when we connect those two,

25
00:01:31.673 --> 00:01:33.855
they start synchronizing, right?

26
00:01:33.855 --> 00:01:38.497
And so now that we have this
synchronization, we can just go to our TFE

27
00:01:38.497 --> 00:01:43.300
repository going forward, to push changes,
which is what we saw, and

28
00:01:43.300 --> 00:01:48.932
why we then saw the plans automatically
start running in Terraform cloud, right?

29
00:01:48.932 --> 00:01:54.148
So again, it's that chicken before the egg
where we have to say, this is a scenario

30
00:01:54.148 --> 00:01:59.235
where it doesn't exist yet, but once it
does, it can be completely automated.

31
00:01:59.235 --> 00:02:02.736
We need to do the same thing for
GitHub, right?

32
00:02:02.736 --> 00:02:07.057
GitHub is kind of in the same boat where
we need to create the repo that tracks and

33
00:02:07.057 --> 00:02:11.190
creates all of our repositories, and
we need to create a workspace for it.

34
00:02:11.190 --> 00:02:16.701
So we have actually finished
the automation setup for Terraform cloud.

35
00:02:16.701 --> 00:02:21.318
Going forward, if you need another
workspace, you now know how to do it.

36
00:02:21.318 --> 00:02:24.816
If you need another project,
you now know how to do it, right?

37
00:02:24.816 --> 00:02:26.407
That's it.

38
00:02:26.407 --> 00:02:30.508
That's it, [LAUGH] that's all
that repository really does.

39
00:02:30.508 --> 00:02:37.041
But if you think about it at scale,
right, when you've got 50 projects and

40
00:02:37.041 --> 00:02:42.077
a hundred workspaces,
this becomes really nice, right?

41
00:02:42.077 --> 00:02:44.052
And this is that life cycle.

42
00:02:44.052 --> 00:02:49.710
So again, if you don't know, if you go to
the next repo we're gonna be creating,

43
00:02:49.710 --> 00:02:51.848
which is terraform-github.

44
00:02:51.848 --> 00:02:55.739
So that's gonna be
fem-eci-terraform-github.

45
00:02:55.739 --> 00:02:58.649
Let me copy this link for you and
give it to you guys really quickly.

46
00:02:58.649 --> 00:03:01.582
This is the next repo
we're gonna be creating.

47
00:03:01.582 --> 00:03:05.123
And this is where you can copy and
paste the code.

48
00:03:05.123 --> 00:03:10.137
And the branch that this exists in is
gonna be 04-setup-github-automation.

49
00:03:10.137 --> 00:03:13.088
So this is technically the branch
that we're gonna be working in.

50
00:03:13.088 --> 00:03:17.767
Now remember,
this branch is also the end result.

51
00:03:17.767 --> 00:03:20.455
[LAUGH] So use it as an example for now.

52
00:03:20.455 --> 00:03:22.362
And if I tell you to copy something,

53
00:03:22.362 --> 00:03:26.191
just be aware of what I have up here
versus what you're copying, okay?

54
00:03:26.191 --> 00:03:31.297
So what we wanna do is, we want to,
again, create a repository for

55
00:03:31.297 --> 00:03:36.241
GitHub the same way that we created
a repository for Terraform.

56
00:03:36.241 --> 00:03:38.970
But can we do that in automation yet?

57
00:03:38.970 --> 00:03:41.395
Can I have Terraform create a repo for
me yet?

58
00:03:41.395 --> 00:03:43.691
No, why not?

59
00:03:43.691 --> 00:03:45.457
&gt;&gt; You need the provider.

60
00:03:45.457 --> 00:03:48.258
&gt;&gt; Well, yeah, I need the provider,
yeah, exactly, and I need GitHub.

61
00:03:48.258 --> 00:03:52.050
So what we're gonna do is,
I could say, you know what,

62
00:03:52.050 --> 00:03:55.455
let's just put it in TFV call of the day,
I could.

63
00:03:55.455 --> 00:03:58.209
But then that means when I go
to update Terraform resources,

64
00:03:58.209 --> 00:04:00.378
I'm also gonna be updating
GitHub resources.

65
00:04:00.378 --> 00:04:04.566
That also means that that pipeline
needs two secrets now instead of one.

66
00:04:04.566 --> 00:04:08.471
That also means that that pipeline has
more of a chance to fail if one token

67
00:04:08.471 --> 00:04:10.724
expires and the other one is still there.

68
00:04:10.724 --> 00:04:14.232
This is why we separate life cycles,
right?

69
00:04:14.232 --> 00:04:16.697
Save ourselves problems in the future.

70
00:04:16.697 --> 00:04:20.184
So what we're gonna do is,
we're gonna go to GitHub.

71
00:04:20.184 --> 00:04:23.695
I'm gonna go to my personal
profile repositories, right, and

72
00:04:23.695 --> 00:04:25.393
I'm gonna click New, right?

73
00:04:25.393 --> 00:04:29.506
So I'm gonna create a new repo
under my personal account.

74
00:04:29.506 --> 00:04:34.434
And in this one, we're gonna say,
fem-eci-terraform,

75
00:04:34.434 --> 00:04:38.986
right, cuz the TerraForm
repository GitHub, right?

76
00:04:38.986 --> 00:04:43.188
Same thing as before, Private, Add Readme,

77
00:04:43.188 --> 00:04:47.404
and another TerraForm, Git ignore, right?

78
00:04:47.404 --> 00:04:49.494
So then I'm gonna click Create repository.

79
00:04:52.734 --> 00:04:59.134
And now, I should have
a fem-eci-terraform-github repository.

80
00:04:59.134 --> 00:05:01.558
I'll give you guys a few
seconds to catch up on that.

81
00:05:01.558 --> 00:05:05.266
&gt;&gt; Is it possible to do what you're
doing with separate branches instead of

82
00:05:05.266 --> 00:05:06.611
separate repositories?

83
00:05:06.611 --> 00:05:12.870
&gt;&gt; [LAUGH] I love developers [LAUGH].

84
00:05:12.870 --> 00:05:17.800
Yeah, I mean you can, but
then you have to manage branches.

85
00:05:17.800 --> 00:05:20.939
So what happens if your
branch gets deleted?

86
00:05:20.939 --> 00:05:21.726
What you can do then?

87
00:05:23.533 --> 00:05:28.430
I understand why you don't
want to create things and

88
00:05:28.430 --> 00:05:32.887
have to deal with more things,
I do, trust me.

89
00:05:32.887 --> 00:05:37.623
[LAUGH] There's a valid reason as to
why we're separating these things, and

90
00:05:37.623 --> 00:05:41.915
it's over years of me failing and
going through these pain points and

91
00:05:41.915 --> 00:05:43.551
realizing time and time.

92
00:05:43.551 --> 00:05:46.110
It's like one of those scenarios where
you know something's gonna fail.

93
00:05:46.110 --> 00:05:49.601
You know eventually,
if you think about it hard enough,

94
00:05:49.601 --> 00:05:52.669
there's a pinpoint
somewhere that could break.

95
00:05:52.669 --> 00:05:55.786
And if you don't consider that and
separate it properly,

96
00:05:55.786 --> 00:05:57.701
you're just gonna have problems.

97
00:05:57.701 --> 00:06:01.360
So yes, you could put it in a branch,
absolutely, you totally could.

98
00:06:01.360 --> 00:06:03.846
But again, then you have to
think about branch protection,

99
00:06:03.846 --> 00:06:05.809
make sure nobody deletes that branch,
right?

100
00:06:05.809 --> 00:06:11.195
You have to make sure that that branch
also has permissions around it for

101
00:06:11.195 --> 00:06:13.721
approvals and things like that.

102
00:06:13.721 --> 00:06:17.740
The repo is a production repo,
if you really think about it, right?

103
00:06:17.740 --> 00:06:22.960
And so your branches are just really
branches to that production main branch,

104
00:06:22.960 --> 00:06:23.524
right?

105
00:06:23.524 --> 00:06:27.798
But if you have additional branches that
are also production branches equivalently,

106
00:06:27.798 --> 00:06:30.784
then it doesn't really matter
necessarily where they are,

107
00:06:30.784 --> 00:06:32.382
but you have to be aware of that.

108
00:06:32.382 --> 00:06:36.014
I personally decide and
choose to separate them and

109
00:06:36.014 --> 00:06:41.346
make it easy just because I have so
many components that I'm dealing with.

110
00:06:41.346 --> 00:06:45.830
It's just easier to make sure
I'm not gonna trip over myself.

111
00:06:45.830 --> 00:06:50.798
So yeah, you definitely can, but
I really do think that you're gonna,

112
00:06:50.798 --> 00:06:55.123
I would be terrified of a branch
getting deleted or something.

113
00:06:55.123 --> 00:06:59.099
Normally the main branch,
it's something that's deleted.

114
00:06:59.099 --> 00:07:03.360
But you can, you absolutely can,
yeah, not recommended though.

