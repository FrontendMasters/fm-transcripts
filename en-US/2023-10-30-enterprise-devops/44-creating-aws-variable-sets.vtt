WEBVTT

1
00:00:00.090 --> 00:00:02.400
So we have this, but
we don't wanna apply this yet.

2
00:00:02.400 --> 00:00:04.510
Why don't we want to apply this yet?

3
00:00:04.510 --> 00:00:08.074
What might be wrong with these
workspaces once they're created?

4
00:00:10.951 --> 00:00:15.460
&gt;&gt; Feel we haven't been told how
to do anything with Amazon yet.

5
00:00:15.460 --> 00:00:18.107
&gt;&gt; Right, we haven't given it any
credentials or any of that yet.

6
00:00:18.107 --> 00:00:22.681
So, before we do this,
let's go back to our route, right?

7
00:00:22.681 --> 00:00:25.860
We'll go to settings,
go to variable sets, and

8
00:00:25.860 --> 00:00:29.980
now we're gonna create a new
variable set for Amazon, right?

9
00:00:29.980 --> 00:00:33.977
So we're gonna say, fem-eci-aws,

10
00:00:33.977 --> 00:00:39.835
now you won't be able to add
it to any workspaces yet.

11
00:00:39.835 --> 00:00:43.605
So that's the caveat here,
but that's okay, that's okay.

12
00:00:43.605 --> 00:00:45.745
We'll add three new variables.

13
00:00:45.745 --> 00:00:51.802
The first one is gonna be
AWS_ACCESS_KEY_ID, right?

14
00:00:51.802 --> 00:00:53.440
Where we need to get our access key.

15
00:00:53.440 --> 00:00:55.766
So let me go grab that
really quickly from Doppler.

16
00:00:55.766 --> 00:00:56.930
&gt;&gt; Environment variables?

17
00:00:56.930 --> 00:01:00.590
&gt;&gt; Yep, make sure you add it as
an environment variable, right?

18
00:01:00.590 --> 00:01:03.580
So there's my access key ID.

19
00:01:03.580 --> 00:01:04.750
I've added that.

20
00:01:04.750 --> 00:01:06.710
So you can see that's there, right?

21
00:01:06.710 --> 00:01:11.260
So then I'm gonna go to add a variable
again, environment variable.

22
00:01:11.260 --> 00:01:17.625
AWS_DEFAULT_REGION, us-west-2,
this doesn't need to be sensitive.

23
00:01:17.625 --> 00:01:22.832
Now we'll add one more which
does need to be sensitive

24
00:01:22.832 --> 00:01:27.005
which is our AWS_SECRET_ACCESS_KEY.

25
00:01:28.702 --> 00:01:31.728
I'll move this over really quick and
set that the to Sensitive and

26
00:01:31.728 --> 00:01:33.260
add that variable.

27
00:01:33.260 --> 00:01:37.710
So now you'll have three variables,
AWS_ACCESS_KEY_ID, AWS_DEFAULT_REGION and

28
00:01:37.710 --> 00:01:39.230
AWS_SECRET_ACCESS_KEY.

29
00:01:39.230 --> 00:01:41.620
So we'll hit, Create variable set.

30
00:01:41.620 --> 00:01:44.550
And now we should again
have three variable sets.

31
00:01:44.550 --> 00:01:46.730
One for tfe, one for
github, and one for aws.

32
00:01:46.730 --> 00:01:49.876
You can see now how this works, right?

33
00:01:49.876 --> 00:01:53.876
All right, so now that we've got that,
let's go back to our workspace.

34
00:01:55.876 --> 00:01:56.653
See details.

35
00:01:58.609 --> 00:02:00.320
Confirm and apply.

36
00:02:00.320 --> 00:02:05.450
Now, it may automatically run the repos or
it may not.

37
00:02:05.450 --> 00:02:08.380
It sometimes depends on just
how TerraForm cloud is feeling.

38
00:02:08.380 --> 00:02:12.049
I don't really know what the
differentiator is on when it wants to and

39
00:02:12.049 --> 00:02:13.580
when it doesn't.

40
00:02:13.580 --> 00:02:16.180
But you can see there's everything
that got created instantly.

41
00:02:16.180 --> 00:02:17.690
And of course, there we go.

42
00:02:17.690 --> 00:02:21.546
We can see that our plans are now being
set up, but we know they're gonna fail, so

43
00:02:21.546 --> 00:02:23.160
let's just let them fail.

44
00:02:23.160 --> 00:02:24.332
We'll go to settings again.

45
00:02:24.332 --> 00:02:29.232
Go to variable sets AWS, and
then we'll attach them to our

46
00:02:29.232 --> 00:02:37.120
AWS Projects or workspaces, sorry,
apply to our AWS workspaces.

47
00:02:37.120 --> 00:02:38.534
Now, there might be a question of,

48
00:02:38.534 --> 00:02:40.431
why don't you just add
it to the whole project?

49
00:02:40.431 --> 00:02:43.251
You could, if you wanted to, it could
make your life a little bit easier

50
00:02:43.251 --> 00:02:45.139
to where you don't have
to do this all the time.

51
00:02:45.139 --> 00:02:48.511
But you may not want AWS credentials
in your GitHub Automation,

52
00:02:48.511 --> 00:02:49.730
you know what I mean?

53
00:02:49.730 --> 00:02:52.370
Just so just think about it, consider.

54
00:02:53.380 --> 00:02:55.180
So we're gonna hit Save Variable Set.

55
00:02:55.180 --> 00:02:59.052
And then if we go back to workspaces,
we can see, in fact, it errored out,

56
00:02:59.052 --> 00:03:01.762
because we can't access anything,
which is fine.

57
00:03:01.762 --> 00:03:05.062
So we will go to our
AWS Network workspace first,

58
00:03:05.062 --> 00:03:09.499
which seems to still be trying to plan,
and in fact, it did fail.

59
00:03:09.499 --> 00:03:13.969
So, if I go to Variables really quick,
look at that.

60
00:03:16.726 --> 00:03:20.572
That's the power of Terraform cloud and
workspaces.

61
00:03:23.588 --> 00:03:27.128
So, you could see now if I wanted
another network, new workspace,

62
00:03:27.128 --> 00:03:29.941
couple of variables,
access keys, go out, right?

63
00:03:33.979 --> 00:03:36.999
So now I'm gonna go to runs,
new run, start run.

64
00:03:39.606 --> 00:03:43.675
And I'm actually gonna do the same thing,
actually, no, let's just do it for

65
00:03:43.675 --> 00:03:44.720
network right now.

66
00:03:44.720 --> 00:03:46.770
So let's just do the plan for network.

67
00:03:46.770 --> 00:03:48.694
And again, I know we're moving fast, but

68
00:03:48.694 --> 00:03:51.158
I'll definitely catch you
guys up here don't worry.

69
00:03:51.158 --> 00:03:54.700
&gt;&gt; You didn't have a top level
domain that will probably error out.

70
00:03:54.700 --> 00:03:55.280
&gt;&gt; No, it's fine.

71
00:03:55.280 --> 00:03:56.410
It doesn't do anything with it.

72
00:03:56.410 --> 00:03:58.663
It doesn't have to be a real one,

73
00:03:58.663 --> 00:04:02.610
it just has to be one that is
Parcelable and valid, right?

74
00:04:02.610 --> 00:04:05.733
So you can't just put in without a .com.

75
00:04:05.733 --> 00:04:12.785
[LAUGH] Awesome, look at that.

76
00:04:12.785 --> 00:04:14.435
All those resources.

77
00:04:16.310 --> 00:04:20.340
Slightly terrifying [LAUGH] but
let's go ahead and confirm and apply.

78
00:04:20.340 --> 00:04:23.068
&gt;&gt; Am I gonna be poor after this?

79
00:04:23.068 --> 00:04:23.676
&gt;&gt; What's that?

80
00:04:23.676 --> 00:04:26.167
&gt;&gt; [LAUGH]
&gt;&gt; None of them actually cost any money

81
00:04:26.167 --> 00:04:27.440
until they're used?

82
00:04:27.440 --> 00:04:30.457
&gt;&gt; No, we're gonna start
accumulating money now but

83
00:04:30.457 --> 00:04:34.964
don't worry you can delete it very
quickly that's why we have workspaces.

84
00:04:34.964 --> 00:04:37.636
[LAUGH] But there's free tier for
all of this.

85
00:04:37.636 --> 00:04:41.162
So, yeah, you're just going into
free tier stuff right now, yeah.

86
00:04:41.162 --> 00:04:43.962
So there you go it's gonna start
creating the VPC that's the first

87
00:04:43.962 --> 00:04:47.363
place it's gonna start because that's
what everything exists in, right, and

88
00:04:47.363 --> 00:04:49.140
then whoa look at that.

89
00:04:49.140 --> 00:04:50.472
Yeah.

90
00:04:50.472 --> 00:04:52.680
Isn't that just so satisfying?

91
00:04:52.680 --> 00:04:55.940
All the clicks you don't have to do,
so nice.

92
00:04:55.940 --> 00:04:58.040
And then this is really
the price costs are right here.

93
00:04:58.040 --> 00:04:59.800
It's the NAT gateway, right?

94
00:04:59.800 --> 00:05:02.860
Because we have private networking,
we have internal connections and

95
00:05:02.860 --> 00:05:06.226
things like that there needs to be a NAT
gateway there something that can access

96
00:05:06.226 --> 00:05:07.630
the Internet still.

97
00:05:07.630 --> 00:05:10.470
So this is hands down the most
expensive part of the whole cluster.

98
00:05:10.470 --> 00:05:12.123
It's like $30 a month.

99
00:05:12.123 --> 00:05:15.916
But don't worry, like I said,
it's very easy to delete these and

100
00:05:15.916 --> 00:05:19.588
just not have to worry about it so
I'll show you that in a second.

101
00:05:19.588 --> 00:05:20.780
This does actually take a second.

102
00:05:20.780 --> 00:05:23.270
So while this is running does
anyone have any questions

103
00:05:23.270 --> 00:05:25.756
&gt;&gt; Any way to disable a workspace without

104
00:05:25.756 --> 00:05:29.573
saving all your settings
without it being deployed live.

105
00:05:29.573 --> 00:05:33.090
&gt;&gt; Saving all your settings
without being deployed live.

106
00:05:33.090 --> 00:05:35.039
What would be your goal with that?

107
00:05:35.039 --> 00:05:38.334
&gt;&gt; If I didn't want it incurring costs but
wanted to maintain.

108
00:05:38.334 --> 00:05:40.255
&gt;&gt; Just destroy it and recreate it.

109
00:05:40.255 --> 00:05:40.941
&gt;&gt; Gotcha
&gt;&gt; Yeah,

110
00:05:40.941 --> 00:05:43.030
that would be my personal recommendation.

111
00:05:43.030 --> 00:05:44.830
Yeah, just destroy it and
recreate it when you need.

112
00:05:44.830 --> 00:05:47.193
So if you're like deving stuff, right?

113
00:05:47.193 --> 00:05:51.971
You just need to destroy them and create
them in the same dependency structure,

114
00:05:51.971 --> 00:05:52.480
right?

115
00:05:52.480 --> 00:05:55.206
So if it's cluster sits on top of network,

116
00:05:55.206 --> 00:06:00.850
then you gotta delete cluster first,
so then you can delete network safely.

117
00:06:00.850 --> 00:06:03.330
Otherwise it'll be,
why are you trying to delete routes, man?

118
00:06:03.330 --> 00:06:04.960
Cluster's still up.

119
00:06:04.960 --> 00:06:06.894
But yeah, this does take a second.

120
00:06:06.894 --> 00:06:10.599
NAT gateway and outbound traffic
cost money though, yes it does.

121
00:06:13.268 --> 00:06:16.994
We're not gonna be doing any
outbound traffic though,

122
00:06:16.994 --> 00:06:21.448
so it'll only be inbound
&gt;&gt; How do you typically map

123
00:06:21.448 --> 00:06:24.792
environment to workspace?

124
00:06:24.792 --> 00:06:31.007
Do you have workspace and then,
three different clusters for

125
00:06:31.007 --> 00:06:35.810
dev stage QA or
is it one workspace for each?

126
00:06:35.810 --> 00:06:38.240
&gt;&gt; Honestly it's up to you.

127
00:06:38.240 --> 00:06:42.630
I know that I'm only gonna create one
network for what I need right now.

128
00:06:42.630 --> 00:06:46.829
If I wanted another network then
I would be, network omething,

129
00:06:46.829 --> 00:06:48.240
you know what I mean?

130
00:06:48.240 --> 00:06:50.470
Just like we did with cluster prod.

131
00:06:50.470 --> 00:06:52.790
But I'm kind of doing
a few opinionation here.

132
00:06:52.790 --> 00:06:55.607
I'm first saying, okay,
I know I wanna create a network and

133
00:06:55.607 --> 00:06:57.220
I know I wanna reuse that network.

134
00:06:57.220 --> 00:06:59.690
So I'm not really worried about creating
a bunch of other networks right now.

135
00:07:00.840 --> 00:07:06.101
However, I do know that I might need
a another cluster in the future, right?

136
00:07:06.101 --> 00:07:09.181
And so that's where that can be helpful,

137
00:07:09.181 --> 00:07:13.230
although I am noticing that
is maybe not set properly.

138
00:07:13.230 --> 00:07:16.871
Let's take a quick look here cuz
that should actually have prod at

139
00:07:16.871 --> 00:07:17.670
the end of it.

140
00:07:17.670 --> 00:07:19.304
So let's do this.

141
00:07:19.304 --> 00:07:22.224
Let's go back to our TFE code real quick.

142
00:07:24.770 --> 00:07:28.094
It check out me Pull, so
let's not apply that yet

143
00:07:28.094 --> 00:07:32.650
cuz there might be something going
on here, so let's take a look.

144
00:07:38.487 --> 00:07:43.660
So there is no prod there,
but that's okay.

145
00:07:43.660 --> 00:07:44.680
We'll worry about it later.

146
00:07:44.680 --> 00:07:47.370
Don't worry, that's a spoiler for later.

147
00:07:47.370 --> 00:07:47.940
Yeah, go ahead.

148
00:07:48.950 --> 00:07:54.233
&gt;&gt; You utilize open source modules or
re-implement them from scratch so

149
00:07:54.233 --> 00:07:57.020
you have more control and quality.

150
00:07:57.020 --> 00:07:59.331
Let's say you notice that some
features are not supported

151
00:07:59.331 --> 00:08:00.550
by modules-
&gt;&gt; Yeah.

152
00:08:00.550 --> 00:08:01.530
&gt;&gt; Or done wrong.

153
00:08:01.530 --> 00:08:02.470
&gt;&gt; Yeah, we do.

154
00:08:02.470 --> 00:08:04.860
Yeah, it's a mixture of modules and
resources.

155
00:08:04.860 --> 00:08:07.730
It's just really depends on what
fits your needs best, yeah.

156
00:08:07.730 --> 00:08:12.200
&gt;&gt; We see many infrastructure
projects which use Terraform and

157
00:08:12.200 --> 00:08:14.830
have the folder per environment and

158
00:08:14.830 --> 00:08:19.860
resource in a single repository
from which Terraform is run.

159
00:08:19.860 --> 00:08:22.010
Are there any pros and cons to this setup?

160
00:08:22.010 --> 00:08:25.427
Or how would you approach changing
this at an organization and

161
00:08:25.427 --> 00:08:28.540
possibly migrating gradually from it?

162
00:08:28.540 --> 00:08:32.180
&gt;&gt; So, I think for me, it's all about
the design of the expectations, right?

163
00:08:32.180 --> 00:08:36.627
If it's just modules, then it's easy, or
if it's just repositories, it's just easy

164
00:08:36.627 --> 00:08:41.020
to understand repo, go to the network
repo, go to this repo, go to that repo.

165
00:08:41.020 --> 00:08:43.910
If you start merging things together,
just in general.

166
00:08:43.910 --> 00:08:45.600
It's gonna become more confusing, right?

167
00:08:45.600 --> 00:08:49.040
It's gonna, okay,
where is it inside of what now, right?

168
00:08:49.040 --> 00:08:52.850
At Hippo we do have Ms
in folders actually.

169
00:08:52.850 --> 00:08:59.370
We do that, but not everywhere,
only in certain spaces where we want to.

170
00:08:59.370 --> 00:09:03.374
Another thing that makes it a little bit
more challenging is you actually have to

171
00:09:03.374 --> 00:09:05.900
tell TerraForm which branch
to track in the repo.

172
00:09:05.900 --> 00:09:10.032
And there's been times before this is a
massive con where I've had a developer go

173
00:09:10.032 --> 00:09:13.420
into TerraForm and actually change
the branch it's pointed to.

174
00:09:13.420 --> 00:09:16.310
And then start working
off of their own branch.

175
00:09:16.310 --> 00:09:18.580
And then I'm like, what are you doing?

176
00:09:18.580 --> 00:09:20.800
That's the main branch,
what are you talking about?

177
00:09:20.800 --> 00:09:24.737
So for me,
I really don't prefer branching.

178
00:09:24.737 --> 00:09:29.503
If you wanted to get out of
the branching scenario you

179
00:09:29.503 --> 00:09:32.654
would just start creating repos.

180
00:09:32.654 --> 00:09:35.905
And then for every branch create a new
repo and then tell a workspace to point to

181
00:09:35.905 --> 00:09:38.220
that repo instead of that
specific path in the branch.

182
00:09:38.220 --> 00:09:42.290
The nice thing about all of this,
if you have two repos that have the exact

183
00:09:42.290 --> 00:09:47.350
same data, and you run them, Terraform
can't tell the difference, [LAUGH] right?

184
00:09:47.350 --> 00:09:49.610
Because it's just automation
underneath the hood.

185
00:09:49.610 --> 00:09:52.588
So you can move it all the way
to a completely new repo, and

186
00:09:52.588 --> 00:09:55.752
then just go in and change the VCS and
what you pointed to, and

187
00:09:55.752 --> 00:09:58.880
it's in a whole new location as
long as the code is the same.

