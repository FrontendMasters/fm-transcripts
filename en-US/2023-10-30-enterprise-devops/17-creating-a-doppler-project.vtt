WEBVTT

1
00:00:00.000 --> 00:00:04.158
So I am gonna go ahead and show you guys
really quickly how Doppler works now that

2
00:00:04.158 --> 00:00:05.997
you guys have gotten access to it.

3
00:00:05.997 --> 00:00:09.384
I'm gonna log into my personal account, so

4
00:00:09.384 --> 00:00:13.054
you'll notice here I
really use Doppler a lot.

5
00:00:13.054 --> 00:00:17.173
As a matter of fact, you can see
that same naming convention and

6
00:00:17.173 --> 00:00:20.220
structure that we've already talked about.

7
00:00:20.220 --> 00:00:25.962
Where if I go into Doppler and I'm like,
okay, I want a specific network's secrets,

8
00:00:25.962 --> 00:00:29.593
right, I can just type in network and
then there we go.

9
00:00:29.593 --> 00:00:32.598
I can look at
alt4llc-pulumi-network secrets.

10
00:00:32.598 --> 00:00:35.031
I can look at terraform-network secrets.

11
00:00:35.031 --> 00:00:39.396
And so this is one of the first things
that I really like about Doppler.

12
00:00:39.396 --> 00:00:41.130
Which is that, again,

13
00:00:41.130 --> 00:00:45.740
it enables me to have this
isolation per service, per person.

14
00:00:45.740 --> 00:00:50.296
And what you'll notice as well is that if
I go down here, not only do I have one for

15
00:00:50.296 --> 00:00:55.220
services, but I even have one for
myself, Right?

16
00:00:55.220 --> 00:00:56.887
This makes my environment variables for

17
00:00:56.887 --> 00:00:59.050
my development environment
completely portable.

18
00:00:59.050 --> 00:01:02.937
If you look here, you'll see that
I have something called NixOS.

19
00:01:02.937 --> 00:01:05.872
Now, the cool thing
isn't that I use NixOS.

20
00:01:05.872 --> 00:01:08.730
The cool thing is that this
is a configuration just for

21
00:01:08.730 --> 00:01:11.852
that operating system,
just for that computer, right?

22
00:01:11.852 --> 00:01:15.417
So say, if you're a developer who has
multiple computers, maybe you have a work

23
00:01:15.417 --> 00:01:18.930
machine and a personal machine, you can
even separate your configs based off of

24
00:01:18.930 --> 00:01:21.468
your own problems that you're
trying to solve, right?

25
00:01:21.468 --> 00:01:25.575
So for example, at Hippo, where is it?

26
00:01:25.575 --> 00:01:31.128
At Hippo,
my username is actually ereinert, right?

27
00:01:31.128 --> 00:01:35.818
And so basically what I did is I said
anything that's in the ereinert workspace

28
00:01:35.818 --> 00:01:40.660
is work related and anything in the
erikreinert workspace is personal, right?

29
00:01:40.660 --> 00:01:45.251
This is tough,
this alone is tough to do with dot ends.

30
00:01:45.251 --> 00:01:49.640
You're copying files, you're pasting
files, removing them from multiple places.

31
00:01:49.640 --> 00:01:51.441
This really solves that problem.

32
00:01:51.441 --> 00:01:55.381
The first way it solves it by doing
it as if you click on this and

33
00:01:55.381 --> 00:01:58.722
then you click on this,
here's all your secrets.

34
00:01:59.856 --> 00:02:06.737
And it's simple, anybody could look
at this and realize what's going on.

35
00:02:06.737 --> 00:02:08.559
It's really easy to use.

36
00:02:08.559 --> 00:02:11.033
There's a lot of really
cool features with it.

37
00:02:11.033 --> 00:02:15.823
It has a version built into it, so
every single one of these keys is version.

38
00:02:15.823 --> 00:02:18.898
If you change that key, you'll know.

39
00:02:18.898 --> 00:02:21.527
And not only that, but
let's do something else.

40
00:02:21.527 --> 00:02:26.188
Let's go to projects really quickly
Let's go to alt4llc-pulumi-bucket.

41
00:02:26.188 --> 00:02:27.430
Look at this.

42
00:02:27.430 --> 00:02:28.524
Thank God those were,

43
00:02:28.524 --> 00:02:32.159
[LAUGH] I was a little worried that I
thought those were secrets for a second.

44
00:02:32.159 --> 00:02:36.785
But what's another thing that's really
nice about Dopplers is you can use

45
00:02:36.785 --> 00:02:38.410
variables with Doppler.

46
00:02:38.410 --> 00:02:43.408
So say for example,
I wanna config for a specific thing,

47
00:02:43.408 --> 00:02:48.108
but I don't wanna have to
update it in tons of places.

48
00:02:48.108 --> 00:02:52.183
So with Doppler, what you can do is
as you'll see here, it's referencing

49
00:02:52.183 --> 00:02:56.910
erikreinert_nixos_AWS_ACCESS_ KEY,
which technically means when I provision

50
00:02:56.910 --> 00:03:01.199
a bucket, I'm just provisoning it with
my own personal access keys, right?

51
00:03:01.199 --> 00:03:05.009
But that means that when I'm doing it
locally, I can still use the same keys and

52
00:03:05.009 --> 00:03:07.101
everything but it's in a different repo.

53
00:03:07.101 --> 00:03:11.212
However, if eventually I get to a point,
now this is, again, you might be,

54
00:03:11.212 --> 00:03:12.490
why are you doing that?

55
00:03:12.490 --> 00:03:15.979
Why would you put your
personal secrets in that?

56
00:03:15.979 --> 00:03:16.810
Hold on.

57
00:03:16.810 --> 00:03:20.777
So the main reason why this is really
powerful is, is in the future,

58
00:03:20.777 --> 00:03:25.230
if you want to then rotate out and
make specific ones, remember, we had that

59
00:03:25.230 --> 00:03:30.261
question earlier about how do you manage
permissions for each Terraform workspace?

60
00:03:30.261 --> 00:03:31.893
This is a way you could do it.

61
00:03:31.893 --> 00:03:36.153
Where you could say, all right, I'm gonna
have global access with a specific set of

62
00:03:36.153 --> 00:03:39.766
secrets and then I'm gonna create
workspaces with their own secrets.

63
00:03:39.766 --> 00:03:43.434
And on top of that,
you can also rotate secrets.

64
00:03:43.434 --> 00:03:46.125
So this is another thing that's
really difficult, right?

65
00:03:46.125 --> 00:03:48.245
How do you rotate secrets?

66
00:03:48.245 --> 00:03:49.742
There's a bunch of different
ways of doing that.

67
00:03:49.742 --> 00:03:53.995
And again, this is another reason why
I didn't go heavily down the secrets

68
00:03:53.995 --> 00:03:55.218
road in this course.

69
00:03:55.218 --> 00:03:58.897
It's because there's a lot of different
things that you can achieve and

70
00:03:58.897 --> 00:04:02.892
a lot of different approaches you can
take to using and implementing secrets.

71
00:04:02.892 --> 00:04:06.357
Why I like Doppler is because Doppler
kind of goes, all right, well,

72
00:04:06.357 --> 00:04:07.900
you've got everything here.

73
00:04:07.900 --> 00:04:11.635
So if you wanna rotate,
we can rotate for you, right?

74
00:04:11.635 --> 00:04:15.490
And so that's what it can even do is
you can then add a rotated secret,

75
00:04:15.490 --> 00:04:19.291
which will then have its own rotation
pattern and things like that.

76
00:04:19.291 --> 00:04:21.144
And it'll get updated automatically.

77
00:04:21.144 --> 00:04:25.050
And what's nice about that is is these
rotated secrets can also be used with

78
00:04:25.050 --> 00:04:26.051
cloud providers.

79
00:04:26.051 --> 00:04:31.730
So if you wanna rotate secrets in a cloud
provider, say Amazon or something like

80
00:04:31.730 --> 00:04:37.410
that, this can go out to Amazon create
equivalent secrets in secrets manager or

81
00:04:37.410 --> 00:04:42.863
something like that and then it auto
syncs the to whenever you make changes.

82
00:04:42.863 --> 00:04:47.951
So if I was a developer and I wanted to
have a more abstracted configuration,

83
00:04:47.951 --> 00:04:52.881
I could move all of my configs to Doppler,
have developers update here and

84
00:04:52.881 --> 00:04:55.842
then just redeploy those changes, right?

85
00:04:55.842 --> 00:04:58.901
Now their interface
isn't even git any more.

86
00:04:58.901 --> 00:05:00.222
Now it's this really pretty interface.

87
00:05:00.222 --> 00:05:06.105
However, does this pretty interface
help us is the question, right?

88
00:05:06.105 --> 00:05:09.453
Now thankfully they do have auditing and
things like that, right,

89
00:05:09.453 --> 00:05:12.461
I'm not gonna go to it cuz I
think it actually shows secrets.

90
00:05:12.461 --> 00:05:16.457
But if I went to logs, I would see
an audit log of what was changed,

91
00:05:16.457 --> 00:05:19.381
when it was changed, and
who it was changed by.

92
00:05:19.381 --> 00:05:21.752
And not only that, but
I can even revert that.

93
00:05:21.752 --> 00:05:25.068
So, going all the way back to the first
part of the, this is why it was so

94
00:05:25.068 --> 00:05:29.020
important to have those conversations
about how to make these decisions, right?

95
00:05:29.020 --> 00:05:30.985
Because this is actually really powerful,

96
00:05:30.985 --> 00:05:33.221
if you look at what problem
it's trying to solve.

97
00:05:33.221 --> 00:05:36.820
Now, could this work with
production secrets and services?

98
00:05:36.820 --> 00:05:41.450
Yeah, it actually could, you would
just have to basically run this and

99
00:05:41.450 --> 00:05:44.010
tell this to run your service, right?

100
00:05:44.010 --> 00:05:46.782
But you could encapsulate
all of your secrets and

101
00:05:46.782 --> 00:05:49.427
everything into Doppler
with that approach.

102
00:05:49.427 --> 00:05:51.332
I'm gonna go to projects.

103
00:05:51.332 --> 00:05:55.015
And for starters I'm just gonna
say I'm gonna go to erikreinert,

104
00:05:55.015 --> 00:05:58.895
I'm gonna go to nixos, and
I'm gonna add my AWS_ACCESS_ KEY_ID,

105
00:05:58.895 --> 00:06:01.488
DEFAULT_REGION and SECRET_ACCESS_KEY.

106
00:06:01.488 --> 00:06:04.452
So I wanted to make sure I
can access Amazon, right?

107
00:06:04.452 --> 00:06:09.142
So after I've done that I'm gonna go
ahead and open up my Terminal and then,

108
00:06:09.142 --> 00:06:12.512
in my Terminal,
I keep forgetting I have my keyboard,

109
00:06:12.512 --> 00:06:15.546
I'm gonna make sure I have Doppler,
all right?

110
00:06:15.546 --> 00:06:19.239
So I'll just make sure I have Doppler,
I don't need to update, cool.

111
00:06:19.239 --> 00:06:21.169
Okay.
So now what I wanna do is I wanna actually

112
00:06:21.169 --> 00:06:23.405
see if my credentials
are injecting properly.

113
00:06:23.405 --> 00:06:26.783
So let's do this first, aws s3 ls.

114
00:06:26.783 --> 00:06:27.483
That should fail.

115
00:06:30.153 --> 00:06:33.334
In a minute, yeah, it failed.

116
00:06:33.334 --> 00:06:35.552
So now let's try the same approach but
with Doppler.

117
00:06:35.552 --> 00:06:42.011
So what I'm gonna do is I'm
gonna say doppler run == config.

118
00:06:42.011 --> 00:06:45.280
The config in this case is nixos.

119
00:06:45.280 --> 00:06:50.790
And then the project is my name.

120
00:06:50.790 --> 00:06:55.404
And I'm gonna do one last thing and
this is a shell thing

121
00:06:55.404 --> 00:07:00.027
which is I'm going to indirect
into the next command.

122
00:07:00.027 --> 00:07:04.811
Now what happens is when I
run this Doppler runs first,

123
00:07:04.811 --> 00:07:08.147
goes out to Doppler finds my secrets.

124
00:07:08.147 --> 00:07:12.274
Then creates a shell with those
secrets injected inside of it.

125
00:07:12.274 --> 00:07:16.108
Now, again, if I do aws s3 ls,
it's not gonna work.

126
00:07:16.108 --> 00:07:20.484
But if I do it this way Doppler is
creating a shell with those secrets

127
00:07:20.484 --> 00:07:23.153
inside it for that specific execution.

128
00:07:23.153 --> 00:07:26.776
Meaning that now I can actually access
things, I don't have to have secrets

129
00:07:26.776 --> 00:07:29.889
locally, I'd have to be worried
about which directory I'm in or

130
00:07:29.889 --> 00:07:31.834
what I'm trying to authenticate with.

131
00:07:31.834 --> 00:07:35.661
I can just literally inject my
secrets in when I want to and

132
00:07:35.661 --> 00:07:37.748
get access to whatever I need.

133
00:07:37.748 --> 00:07:40.964
So this is one of the reasons
why we're gonna need Doppler.

134
00:07:40.964 --> 00:07:44.701
Is because Doppler is what's going
to take control of all the secrets

135
00:07:44.701 --> 00:07:47.480
we create here so
that you guys know where they are.

136
00:07:47.480 --> 00:07:49.331
You guys know how to interface with them.

137
00:07:49.331 --> 00:07:52.742
And you guys also know where
you can change them if need be.

138
00:07:52.742 --> 00:07:55.376
Any questions on Doppler?

139
00:07:55.376 --> 00:08:00.098
Does everyone have it installed
at least in setup now?

140
00:08:00.098 --> 00:08:01.137
You good now?

141
00:08:01.137 --> 00:08:01.757
Cool.

142
00:08:01.757 --> 00:08:03.934
Okay, so do me a favor really quickly.

143
00:08:03.934 --> 00:08:07.172
And if you haven't already go
to projects up at the top and

144
00:08:07.172 --> 00:08:08.801
create a new project for me.

145
00:08:08.801 --> 00:08:12.484
And I'm gonna just reuse my own, but
I would recommend just using your name,

146
00:08:12.484 --> 00:08:15.842
just for now we'll just consider
this your dev environment, right?

147
00:08:15.842 --> 00:08:19.874
So in my case, I would type in,
erikreinert, and

148
00:08:19.874 --> 00:08:23.721
then give an example
like my personal project.

149
00:08:23.721 --> 00:08:27.921
My personal project ends right and
then click Create Project.

150
00:08:27.921 --> 00:08:32.433
Once you do that,
you'll get sent to the project's page.

151
00:08:32.433 --> 00:08:34.455
And you might have defaults here.

152
00:08:34.455 --> 00:08:37.220
And as a matter of fact here, I'll just
go through the process really quickly.

153
00:08:37.220 --> 00:08:44.585
So here example project.

154
00:08:44.585 --> 00:08:47.735
Something fun, create.

155
00:08:47.735 --> 00:08:51.988
So Doppler does try and assume they might
know what you have out of the gate and

156
00:08:51.988 --> 00:08:54.581
so they give you
a development environment and

157
00:08:54.581 --> 00:08:59.055
a production environment also to just
kind of show you how things work, right?

158
00:08:59.055 --> 00:09:02.537
Now if I was to use these with
my AWS CLI wouldn't work, right,

159
00:09:02.537 --> 00:09:06.378
cuz I haven't actually added any
secrets yet or anything like that.

160
00:09:06.378 --> 00:09:10.560
But this at least makes it so
that if I had a dev environment and

161
00:09:10.560 --> 00:09:12.036
a prod environment,

162
00:09:12.036 --> 00:09:16.880
I could make sure that I already am
separating those two the way I need.

163
00:09:16.880 --> 00:09:18.652
And then yeah,
this is really all we need so far.

164
00:09:18.652 --> 00:09:19.218
Yeah, go ahead.

165
00:09:19.218 --> 00:09:21.730
&gt;&gt; Now, mine gave me dev stage and
production.

166
00:09:21.730 --> 00:09:24.537
&gt;&gt; Okay.
So if it did that, got you, so

167
00:09:24.537 --> 00:09:29.312
if it did that,
that means that I overrode my settings.

168
00:09:29.312 --> 00:09:33.303
There's a button here that says
default environments on the right.

169
00:09:33.303 --> 00:09:35.197
Now, I don't use staging.

170
00:09:35.197 --> 00:09:38.333
I just go from dev to prod,
at least personally.

171
00:09:38.333 --> 00:09:40.495
So I got rid of staging for that example.

172
00:09:40.495 --> 00:09:44.425
But if you had other names,
other environments, things like that,

173
00:09:44.425 --> 00:09:45.526
you could do that.

174
00:09:45.526 --> 00:09:47.616
So if you wanna have it like mine,

175
00:09:47.616 --> 00:09:52.021
you go into Default Environments at
the top, and then I think you would

176
00:09:52.021 --> 00:09:55.920
just delete whichever one is in
there that you want to delete.

177
00:09:55.920 --> 00:09:59.490
And for example, this is another
common one, production, right?

178
00:09:59.490 --> 00:10:00.353
What do you call prod?

179
00:10:00.353 --> 00:10:01.957
Is it prod, is it production, right?

180
00:10:01.957 --> 00:10:03.657
This also can give you opportunities.

181
00:10:03.657 --> 00:10:05.397
Is it dev?

182
00:10:05.397 --> 00:10:07.690
Is it develop, right?

183
00:10:07.690 --> 00:10:13.043
To be fair, we call it dev and prod,
that's why I have it the way I do.

184
00:10:13.043 --> 00:10:17.827
But yeah, all we wanna achieve right
now is just make sure we've got Doppler

185
00:10:17.827 --> 00:10:21.652
set up and we have a project
created with at least one config.

186
00:10:21.652 --> 00:10:23.875
Now, again,
if you wanna rename the config,

187
00:10:23.875 --> 00:10:27.580
you can actually click on these little
three dots here and type in rename, and

188
00:10:27.580 --> 00:10:29.692
then you give it the name
as well as the slug.

189
00:10:29.692 --> 00:10:33.636
The slug is what we use in our Command,
right?

190
00:10:33.636 --> 00:10:38.298
So this NixOS is the slug from here,
right?

191
00:10:38.298 --> 00:10:42.765
So if I wanted to go to staging or
something else I would say okay, well,

192
00:10:42.765 --> 00:10:45.303
project, project, config, config.

193
00:10:45.303 --> 00:10:52.327
Now I apologize I have this incredible
OCD when it comes to proper alphabetical.

194
00:10:52.327 --> 00:10:55.569
So technically, you'd probably
wanna type it more like this so

195
00:10:55.569 --> 00:10:57.078
that it makes sense, right?

196
00:10:57.078 --> 00:11:00.819
So your project in this
case would be erikreinert.

197
00:11:00.819 --> 00:11:04.989
And then your config in
this case would be nixos.

198
00:11:04.989 --> 00:11:08.063
Or if it was something else,
it'd be like dev, right?

199
00:11:08.063 --> 00:11:11.279
And another thing that's
really nice about this too is,

200
00:11:11.279 --> 00:11:15.100
say you are working on a service,
like example=service, right?

201
00:11:15.100 --> 00:11:18.585
Well, you can run this in
the example service repository.

202
00:11:18.585 --> 00:11:21.273
But then later on, you can run
against another project, right?

203
00:11:21.273 --> 00:11:27.681
And there's no need for these secrets to
be on your system or anything like that.

204
00:11:27.681 --> 00:11:28.273
Cool.
So yeah,

205
00:11:28.273 --> 00:11:31.342
just make sure to give it some kind
of name that makes sense to you.

206
00:11:31.342 --> 00:11:33.362
And again, at least for this project,

207
00:11:33.362 --> 00:11:36.130
we're not gonna use any
other environments for now.

