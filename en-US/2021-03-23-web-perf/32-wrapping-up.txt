[00:00:00]
>> I mentioned this before, but there's a whole lot of very detailed nuance to the performance of big single page applications. The performance of JavaScript and how it runs, how well it's gonna render and interact with the DOM. Memory utilization, looping, all kinds of things like that. And there's a fantastic course that's in the catalog today from Steve.

[00:00:23]
All about that, that if you're building that kind of application, this course was a good jumping off point. But now take a deep dive into the performance of JavaScript. Related to that, there's another course about Webpack specifically. If you're gonna be building an app with obnoxious amounts of JavaScript, you're probably going to need build and bundling tools.

[00:00:43]
You probably want to send all of that JavaScript down to the client all at once. You'll probably wanna break it up into smaller bits, and deliver those quickly. Well, this course will teach you all about how to do that, how to think about that. And how to deliver the most performant experience you can while still delivering obnoxious amounts of JavaScript.

[00:01:05]
I encourage you to go look at both of those. This kind of wraps up part three, which as I said, the shortest parts. We talked about performance culture. How to work and interpret your data with non tech folks, springing back into their business terms. And thinking about what you would need to plan for when designing a new application or dealing with scenarios.

[00:01:27]
Just gonna briefly kind of recap what we talked about today, and then I'm gonna open it up for questions. So we did three parts today, we started with understanding, looked at improving and planning. In understanding we talked a lot about psychology of waiting, and I came back to this over and over again cuz it's super valuable and important to think about this.

[00:01:49]
There's going to be waits in your application, you're not gonna deliver everything instantly. And so when you need to introduce a weight, make sure that you're doing so in a way that people won't feel would exaggerate it to be slower than it actually is. We looked at web vitals and what they're measuring in the overall loading process.

[00:02:10]
The first contentful paint, the largest contentful paint, the commutative layout shift, and the first input delay. And we talked about signal to noise, measuring lab data versus field data, and what each kind of tells us about our performance. Then we dug into improving the core rule that applies in all things.

[00:02:32]
Performance is find a way to do less things. If you can find a way to do fewer things, you will go faster because there's just fewer things to do. A lot of that is finding fewer ways to get between two goalposts. If I want to get to largest contentful paint sooner, the way I'm going to do that is by removing a bunch of stuff that I don't need in order to hit that goalpost.

[00:02:57]
So we can crunch that down and focus on what's important. And overall, we applied a bunch of fixes to drop the performance of our example page quite a bit. And in planning, which we just talked about, a big emphasis I wanna make is on having data cuz if you don't have data, you can't decide what to work on.

[00:03:18]
You can't decide when you have enough performance. And you can't justify a performance false to actually fix it with the business. When you're thinking about performance, you gotta set your goals. Be sure you're thinking about who your users are, what they do, how long would they wait, and how do you impress them.

[00:03:40]
If you don't know what these things are, you're never going to have a fast website for them. So this was improving web performance. I hope you had a good time. If you ever have questions for me, you wanna reach out. You can either hit me up on Twitter, I'm @ToddHGardner.

[00:03:57]
Or you can email me directly, I'm Todd@requestmetrics.com. Happy to answer any questions I can. Thank you so much for joining me.

