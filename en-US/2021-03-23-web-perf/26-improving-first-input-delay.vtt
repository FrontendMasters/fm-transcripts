WEBVTT

1
00:00:00.060 --> 00:00:03.873
We are gonna move on to another score or
another metric.

2
00:00:03.873 --> 00:00:08.871
We're gonna look at first input delay,
which is a little bit more abstract.

3
00:00:08.871 --> 00:00:13.641
First input delay isn't a problem that we
would really have on the current request

4
00:00:13.641 --> 00:00:14.547
metrics site.

5
00:00:14.547 --> 00:00:20.578
The first input delay is the browser time
delay between the user's first click and

6
00:00:20.578 --> 00:00:23.300
the execution of application code.

7
00:00:23.300 --> 00:00:26.997
So by pushing all of
that stuff to do later,

8
00:00:26.997 --> 00:00:32.647
when the user thinks the page is ready,
have we put too many things

9
00:00:32.647 --> 00:00:37.991
on the browser's plate that it
can't respond fast enough and

10
00:00:37.991 --> 00:00:45.410
pass events to your code fast enough that
the user feels like the page is fast?

11
00:00:45.410 --> 00:00:49.722
Essentially, don't put too
much stuff on the page.

12
00:00:49.722 --> 00:00:54.159
This also has an interaction with LCP.

13
00:00:54.159 --> 00:00:59.204
Let's say you have an obnoxious
amount of JavaScript on your page,

14
00:00:59.204 --> 00:01:01.070
as far too many sites do.

15
00:01:02.170 --> 00:01:06.765
Well, if you have that obnoxious
amount of JavaScript before LCP,

16
00:01:06.765 --> 00:01:10.160
well, the user will kind of forgive you,
right?

17
00:01:10.160 --> 00:01:13.656
You're loading, maybe you even have
a loading screen that says, hey,

18
00:01:13.656 --> 00:01:17.750
here's a bunch of stuff that we have
to download in order to do something.

19
00:01:17.750 --> 00:01:21.780
Well, depending on the value that your
page is delivering, that might be okay.

20
00:01:21.780 --> 00:01:24.870
The user might understand and expect it.

21
00:01:24.870 --> 00:01:29.627
But if they don't understand and expect
a delay, while you load JavaScript and

22
00:01:29.627 --> 00:01:34.242
you've pushed it to after the largest
contentful paint as then you've shown

23
00:01:34.242 --> 00:01:36.031
the user, hey, I'm ready.

24
00:01:36.031 --> 00:01:39.353
But in the background,
the browser is still downloading and

25
00:01:39.353 --> 00:01:43.370
parsing and pulling together
huge JavaScript applications.

26
00:01:43.370 --> 00:01:46.890
We've given the browser too much to do.

27
00:01:46.890 --> 00:01:51.684
And when the user starts to interact, the
browser's gonna feel leggy it's gonna kind

28
00:01:51.684 --> 00:01:54.650
of jitter around and
it's gonna be a bad experience.

29
00:01:54.650 --> 00:01:58.605
It's gonna make the user feel
like if your app is slow, and

30
00:01:58.605 --> 00:02:00.964
that's going to make them angry.

31
00:02:00.964 --> 00:02:08.190
Dealing with first input delay, is largely
dependent on the psychology of waiting.

32
00:02:08.190 --> 00:02:12.602
So you've given the user an indication
that the page is ready when largest

33
00:02:12.602 --> 00:02:14.910
contentful paint happens.

34
00:02:14.910 --> 00:02:19.689
But if your page isn't ready,
because you really have a whole lot more

35
00:02:19.689 --> 00:02:23.901
JavaScript that is critical to
the function of your page, and

36
00:02:23.901 --> 00:02:29.653
is going to consume a lot of the browser's
resources, then your page isn't ready.

37
00:02:29.653 --> 00:02:31.012
And your people or

38
00:02:31.012 --> 00:02:37.460
the amount of stuff you need to do is
going to require the your user to wait.

39
00:02:37.460 --> 00:02:41.887
And so particularly I wanna call
out point number six here is that,

40
00:02:41.887 --> 00:02:44.110
people are gonna wait for value.

41
00:02:44.110 --> 00:02:50.230
If you're building an app, and
it is highly dynamic, highly interactive.

42
00:02:50.230 --> 00:02:55.460
It's got video, it's like the front end
master's course interaction kind of thing.

43
00:02:55.460 --> 00:02:59.510
The user will expect
a certain amount of waiting.

44
00:02:59.510 --> 00:03:02.620
They're gonna expect that you're
gonna deliver a lot of JavaScript.

45
00:03:02.620 --> 00:03:06.192
And they're gonna expect that like, it's
gonna take a while to figure out what this

46
00:03:06.192 --> 00:03:08.829
application is gonna do, and
they will forgive some of that.

47
00:03:09.880 --> 00:03:14.483
But if you landed on npr.org, or CNN or
New York Times or any of those new sites,

48
00:03:14.483 --> 00:03:18.473
and it prompted you with this obnoxious
loading screen before you got

49
00:03:18.473 --> 00:03:23.210
to your article, you'd be like screw this,
I don't need to wait for this.

50
00:03:23.210 --> 00:03:27.098
This is not something valuable
enough that you need to delay my

51
00:03:27.098 --> 00:03:30.251
experience to pull down
all this JavaScript for.

52
00:03:30.251 --> 00:03:34.190
And so first input delay is
a concerning metric for you.

53
00:03:34.190 --> 00:03:38.480
Chances are it means you're pushing
down too much JavaScript for

54
00:03:38.480 --> 00:03:40.976
the value your users see on your site.

55
00:03:42.921 --> 00:03:46.900
So, will a user wait for it?

56
00:03:46.900 --> 00:03:50.800
You need to consider what
the context is of your application.

57
00:03:51.980 --> 00:03:55.912
How anxious is your user when
they are loading the page?

58
00:03:55.912 --> 00:03:57.941
Did they just click on a news article and

59
00:03:57.941 --> 00:04:02.262
they're just avoiding what they should be
doing and wasting time on the Internet?

60
00:04:02.262 --> 00:04:05.100
They're anxious level is low.

61
00:04:05.100 --> 00:04:08.500
Are they waiting for a medical results?

62
00:04:08.500 --> 00:04:10.070
Are they waiting for their loan approval?

63
00:04:10.070 --> 00:04:14.640
Are they waiting for whether or
not they have this job?

64
00:04:14.640 --> 00:04:17.150
Their anxiety level is
probably pretty high.

65
00:04:17.150 --> 00:04:20.270
And they're going to be
less forgiving of a wait.

66
00:04:21.770 --> 00:04:23.960
How valuable is this thing to them?

67
00:04:23.960 --> 00:04:26.981
If you're building a site that
is delivering a lot of value,

68
00:04:26.981 --> 00:04:31.071
something that the user wouldn't expect
to just get from any old website, well,

69
00:04:31.071 --> 00:04:33.522
they'll be willing to
wait a little bit longer.

70
00:04:33.522 --> 00:04:39.770
You can now put a loading screen up and
the user will forgive you.

71
00:04:39.770 --> 00:04:42.030
They will expect it.

72
00:04:42.030 --> 00:04:48.915
But they wouldn't expect it if what you
have delivering is a lower value thing,

73
00:04:48.915 --> 00:04:52.843
like a new site,
a content site or whatever.

74
00:04:52.843 --> 00:04:55.930
And then do they understand the wait?

75
00:04:55.930 --> 00:05:01.080
You have made the user wait,
while you load of the client side app.

76
00:05:01.080 --> 00:05:02.234
Do they understand that?

77
00:05:02.234 --> 00:05:04.250
Do they understand why they're waiting?

78
00:05:04.250 --> 00:05:09.102
And do they value it
enough to do the wait?

79
00:05:09.102 --> 00:05:13.411
These are things that you need
to consider for your app.

80
00:05:13.411 --> 00:05:16.731
Okay, sorry, that's a little abstract.

81
00:05:16.731 --> 00:05:19.350
But first input delay is kind of abstract.

