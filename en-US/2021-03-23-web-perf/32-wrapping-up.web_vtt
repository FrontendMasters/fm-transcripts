WEBVTT

1
00:00:00.790 --> 00:00:05.791
I mentioned this before, but
there's a whole lot of very detailed

2
00:00:05.791 --> 00:00:10.359
nuance to the performance of
big single page applications.

3
00:00:10.359 --> 00:00:14.461
The performance of JavaScript and how
it runs, how well it's gonna render and

4
00:00:14.461 --> 00:00:15.716
interact with the DOM.

5
00:00:15.716 --> 00:00:19.759
Memory utilization, looping,
all kinds of things like that.

6
00:00:19.759 --> 00:00:23.642
And there's a fantastic course that's
in the catalog today from Steve.

7
00:00:23.642 --> 00:00:27.081
All about that, that if you're
building that kind of application,

8
00:00:27.081 --> 00:00:29.360
this course was a good jumping off point.

9
00:00:29.360 --> 00:00:32.420
But now take a deep dive into
the performance of JavaScript.

10
00:00:33.480 --> 00:00:37.107
Related to that, there's another
course about Webpack specifically.

11
00:00:37.107 --> 00:00:40.685
If you're gonna be building an app
with obnoxious amounts of JavaScript,

12
00:00:40.685 --> 00:00:43.480
you're probably going to need build and
bundling tools.

13
00:00:43.480 --> 00:00:47.508
You probably want to send all of that
JavaScript down to the client all at once.

14
00:00:47.508 --> 00:00:52.897
You'll probably wanna break it up into
smaller bits, and deliver those quickly.

15
00:00:52.897 --> 00:00:56.883
Well, this course will teach you all about
how to do that, how to think about that.

16
00:00:56.883 --> 00:01:01.307
And how to deliver the most performant
experience you can while still delivering

17
00:01:01.307 --> 00:01:03.267
obnoxious amounts of JavaScript.

18
00:01:05.187 --> 00:01:06.863
I encourage you to go
look at both of those.

19
00:01:06.863 --> 00:01:11.247
This kind of wraps up part three,
which as I said, the shortest parts.

20
00:01:11.247 --> 00:01:13.403
We talked about performance culture.

21
00:01:13.403 --> 00:01:16.680
How to work and
interpret your data with non tech folks,

22
00:01:16.680 --> 00:01:19.272
springing back into their business terms.

23
00:01:19.272 --> 00:01:22.172
And thinking about what
you would need to plan for

24
00:01:22.172 --> 00:01:25.860
when designing a new application or
dealing with scenarios.

25
00:01:27.300 --> 00:01:30.822
Just gonna briefly kind of recap
what we talked about today, and

26
00:01:30.822 --> 00:01:33.120
then I'm gonna open it up for questions.

27
00:01:34.460 --> 00:01:37.800
So we did three parts today,
we started with understanding,

28
00:01:37.800 --> 00:01:39.740
looked at improving and planning.

29
00:01:40.750 --> 00:01:43.758
In understanding we talked a lot
about psychology of waiting,

30
00:01:43.758 --> 00:01:47.049
and I came back to this over and
over again cuz it's super valuable and

31
00:01:47.049 --> 00:01:49.550
important to think about this.

32
00:01:49.550 --> 00:01:51.682
There's going to be waits
in your application,

33
00:01:51.682 --> 00:01:54.540
you're not gonna deliver
everything instantly.

34
00:01:54.540 --> 00:01:59.022
And so when you need to introduce
a weight, make sure that you're doing so

35
00:01:59.022 --> 00:02:03.286
in a way that people won't feel would
exaggerate it to be slower than it

36
00:02:03.286 --> 00:02:04.180
actually is.

37
00:02:05.710 --> 00:02:10.070
We looked at web vitals and what they're
measuring in the overall loading process.

38
00:02:10.070 --> 00:02:12.930
The first contentful paint,
the largest contentful paint,

39
00:02:12.930 --> 00:02:15.690
the commutative layout shift,
and the first input delay.

40
00:02:17.760 --> 00:02:22.618
And we talked about signal to noise,
measuring lab data versus field data, and

41
00:02:22.618 --> 00:02:25.680
what each kind of tells
us about our performance.

42
00:02:26.970 --> 00:02:32.300
Then we dug into improving the core
rule that applies in all things.

43
00:02:32.300 --> 00:02:35.820
Performance is find
a way to do less things.

44
00:02:35.820 --> 00:02:38.922
If you can find a way to do fewer things,

45
00:02:38.922 --> 00:02:43.719
you will go faster because
there's just fewer things to do.

46
00:02:43.719 --> 00:02:47.520
A lot of that is finding fewer
ways to get between two goalposts.

47
00:02:47.520 --> 00:02:51.857
If I want to get to largest contentful
paint sooner, the way I'm going to do that

48
00:02:51.857 --> 00:02:57.010
is by removing a bunch of stuff that I
don't need in order to hit that goalpost.

49
00:02:57.010 --> 00:02:59.510
So we can crunch that down and
focus on what's important.

50
00:03:01.150 --> 00:03:06.138
And overall, we applied a bunch of fixes
to drop the performance of our example

51
00:03:06.138 --> 00:03:07.280
page quite a bit.

52
00:03:08.720 --> 00:03:13.670
And in planning, which we just talked
about, a big emphasis I wanna make is on

53
00:03:13.670 --> 00:03:18.580
having data cuz if you don't have data,
you can't decide what to work on.

54
00:03:18.580 --> 00:03:21.410
You can't decide when you
have enough performance.

55
00:03:21.410 --> 00:03:26.564
And you can't justify a performance false
to actually fix it with the business.

56
00:03:29.318 --> 00:03:32.790
When you're thinking about performance,
you gotta set your goals.

57
00:03:32.790 --> 00:03:36.158
Be sure you're thinking about who
your users are, what they do,

58
00:03:36.158 --> 00:03:38.990
how long would they wait,
and how do you impress them.

59
00:03:40.610 --> 00:03:42.666
If you don't know what these things are,

60
00:03:42.666 --> 00:03:45.270
you're never going to have
a fast website for them.

61
00:03:47.710 --> 00:03:49.920
So this was improving web performance.

62
00:03:49.920 --> 00:03:51.060
I hope you had a good time.

63
00:03:51.060 --> 00:03:53.670
If you ever have questions for
me, you wanna reach out.

64
00:03:53.670 --> 00:03:57.476
You can either hit me up on Twitter,
I'm @ToddHGardner.

65
00:03:57.476 --> 00:04:02.070
Or you can email me directly,
I'm Todd@requestmetrics.com.

66
00:04:02.070 --> 00:04:04.500
Happy to answer any questions I can.

67
00:04:04.500 --> 00:04:05.626
Thank you so much for joining me.

