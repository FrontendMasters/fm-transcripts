WEBVTT

1
00:00:00.350 --> 00:00:04.600
Let's look overall,
did we improve performance?

2
00:00:04.600 --> 00:00:06.530
We made a whole bunch of changes.

3
00:00:06.530 --> 00:00:11.810
We made server changes to simulate
a faster network on a CDN.

4
00:00:11.810 --> 00:00:16.023
We made a bunch of asset changes
deferring stuff we didn't need and

5
00:00:16.023 --> 00:00:17.689
optimizing stuff we did.

6
00:00:17.689 --> 00:00:22.939
We compressed assets, we specified
the layout, we did a whole bunch

7
00:00:22.939 --> 00:00:29.109
of things that improved the different
metrics, but how did that actually work?

8
00:00:29.109 --> 00:00:33.213
Well, if you were capturing any
of the field data along the way,

9
00:00:33.213 --> 00:00:36.566
you could take that and
paste it into the dashboard.

10
00:00:36.566 --> 00:00:43.841
When I did it before and after this
course, as I was making changes,

11
00:00:43.841 --> 00:00:48.704
here's roughly what I saw before and
after.

12
00:00:48.704 --> 00:00:52.754
Before we had a really high LCP.

13
00:00:52.754 --> 00:00:58.980
And a really dynamic
commutative layout shift.

14
00:00:58.980 --> 00:01:01.220
Lots of stuff was happening.

15
00:01:01.220 --> 00:01:04.260
The first input delay wasn't
really relevant for the site,

16
00:01:04.260 --> 00:01:06.830
we didn't load obnoxious
amounts of JavaScript.

17
00:01:07.890 --> 00:01:11.070
And the first contentful
paint was pretty fast.

18
00:01:11.070 --> 00:01:13.402
We got a little bit faster.

19
00:01:13.402 --> 00:01:18.332
We saw huge dramatic
improvements when we fixed LCP.

20
00:01:18.332 --> 00:01:21.697
We greatly reduced the time
it took to deliver all

21
00:01:21.697 --> 00:01:24.910
of the assets to get to
that important metric.

22
00:01:26.440 --> 00:01:32.328
And we crushed CLS down to almost
0 by specifying those sizes.

23
00:01:32.328 --> 00:01:37.069
Now, based on our earlier
examples of how we

24
00:01:37.069 --> 00:01:41.941
tie this together with business analytics,

25
00:01:41.941 --> 00:01:46.941
well, there was a strong
correlation between

26
00:01:46.941 --> 00:01:51.960
the largest contentful paint and
what was it?

27
00:01:51.960 --> 00:01:55.530
The largest contentful paint and
the bounce rate and

28
00:01:55.530 --> 00:01:59.030
the cumulative layout shift and
the session time.

29
00:01:59.030 --> 00:02:01.804
And so if we improve these things,

30
00:02:01.804 --> 00:02:06.311
what would we forecast for
the future of those metrics?

31
00:02:06.311 --> 00:02:09.633
Well, the session time should go up.

32
00:02:09.633 --> 00:02:14.230
They'll spend way less time being
frustrated by layout shifts.

33
00:02:14.230 --> 00:02:16.160
And the bounce rates should go down,

34
00:02:16.160 --> 00:02:20.790
we should be delivering the core content
way sooner than they were before.

35
00:02:20.790 --> 00:02:25.236
And this is how these sort of
efforts need to be pitched to

36
00:02:25.236 --> 00:02:28.620
the powers of your organization.

37
00:02:28.620 --> 00:02:33.536
If you're trying to justify time to spend
improving the performance of your app,

38
00:02:33.536 --> 00:02:36.315
you can't necessarily
sell it by saying hey,

39
00:02:36.315 --> 00:02:39.320
we need to spend some time
making the site faster.

40
00:02:39.320 --> 00:02:42.311
You need to sell it by saying hey,
we're gonna try and

41
00:02:42.311 --> 00:02:46.448
improve the session time, we're gonna
try and reduce our bounce rates.

42
00:02:46.448 --> 00:02:49.535
You're gonna do it by
improving performance.

43
00:02:49.535 --> 00:02:53.510
But these are the metrics that most
business people are going to care

44
00:02:53.510 --> 00:02:55.245
about more.

45
00:02:55.245 --> 00:02:59.832
Now, we can authentically say how much
we're going to improve session time or

46
00:02:59.832 --> 00:03:02.685
how far we're going to reduce bounce rate.

47
00:03:02.685 --> 00:03:07.425
Because just like pirates don't
actually cause global warming.

48
00:03:07.425 --> 00:03:10.681
We don't know how tightly
these things are correlated.

49
00:03:10.681 --> 00:03:13.628
But we do know that there
is some correlation and

50
00:03:13.628 --> 00:03:16.427
that we would expect
these numbers to improve

51
00:03:16.427 --> 00:03:20.788
in the same general trajectory by
making performance improvements.

52
00:03:20.788 --> 00:03:25.564
That will make your business
people quite happy.

53
00:03:25.564 --> 00:03:31.890
Now, there's a lot of data that you'll
gather, especially from field data.

54
00:03:31.890 --> 00:03:35.222
If you've been looking at the field
data from our project and

55
00:03:35.222 --> 00:03:39.470
pasting it into the spreadsheet,
there's a lot of reports and those reports

56
00:03:39.470 --> 00:03:44.900
are pretty high level roll up of the data,
but they're representing every single hit.

57
00:03:44.900 --> 00:03:48.690
So every single time somebody hit your
page, you get something in there.

58
00:03:48.690 --> 00:03:53.656
And so there's a lot of ways that
we can show data about performance

59
00:03:53.656 --> 00:03:59.190
that's more helpful that reveals
more characteristics about it.

60
00:03:59.190 --> 00:04:03.480
And so I wanted to show you some
more real charts from real sites and

61
00:04:03.480 --> 00:04:05.442
what those things look like.

62
00:04:05.442 --> 00:04:09.351
So for example, this is what's
called a flame distribution,

63
00:04:09.351 --> 00:04:12.720
which is what a number of
different tools will do.

64
00:04:12.720 --> 00:04:15.637
This is what it looks
like on request metrics.

65
00:04:15.637 --> 00:04:20.800
A flame chart will show you
the relative performance

66
00:04:20.800 --> 00:04:25.300
of how each user experienced the page.

67
00:04:25.300 --> 00:04:29.750
And the size of it indicates how
many users had that experience.

68
00:04:29.750 --> 00:04:33.892
So, blue is fast, everything is great.

69
00:04:33.892 --> 00:04:35.200
Red is slow.

70
00:04:35.200 --> 00:04:37.460
They're having a whole lot of problems.

71
00:04:37.460 --> 00:04:42.020
We want big lines, because we want
lots of users to visit our site.

72
00:04:42.020 --> 00:04:44.170
And we want most of it to be blue.

73
00:04:44.170 --> 00:04:47.470
We want most users to
have a great experience.

74
00:04:48.690 --> 00:04:53.921
Now you can project that same data over
here on the right side and say well what

75
00:04:53.921 --> 00:04:59.087
was the median and 75th percentile
in 95th percentile over that time?

76
00:04:59.087 --> 00:05:04.523
And see what these actually users are
across the entire time or you can project

77
00:05:04.523 --> 00:05:10.141
that data over time and see how does
the median change how's the 75th change?

78
00:05:10.141 --> 00:05:11.333
How's the 95th change?

79
00:05:11.333 --> 00:05:15.988
Each of these will give you a different
kind of perspective into what the data

80
00:05:15.988 --> 00:05:16.508
means.

81
00:05:16.508 --> 00:05:22.128
Because field data is very noisy and
you need to look for the patterns.

82
00:05:22.128 --> 00:05:27.132
Here's another example of
web vitals specifically.

83
00:05:27.132 --> 00:05:31.960
Now web vitals largely are driven
by what Google thinks of them.

84
00:05:31.960 --> 00:05:34.094
This is one of the most common and

85
00:05:34.094 --> 00:05:38.150
objective measures because
Google is this gatekeeper.

86
00:05:38.150 --> 00:05:40.760
And you need to make sure
that Google is happy.

87
00:05:40.760 --> 00:05:44.750
So, Google has good, okay, poor ranges.

88
00:05:44.750 --> 00:05:48.950
We can roughly define those and
show you how you're doing over time.

89
00:05:48.950 --> 00:05:52.300
How many of your users had
each of these experiences?

90
00:05:52.300 --> 00:05:54.030
You'll never have 100% of your users good.

91
00:05:55.310 --> 00:05:59.800
Very unlikely, and
you'll never have 100% of your users bad.

92
00:05:59.800 --> 00:06:05.502
But as long as 75% of your users
are having a good experience,

93
00:06:05.502 --> 00:06:07.730
you're doing awesome.

94
00:06:07.730 --> 00:06:13.654
But don't worry about making sure that
every single session is not poor.

95
00:06:13.654 --> 00:06:16.227
You can't control everybody's device.

96
00:06:16.227 --> 00:06:20.890
So in this case, we have a cumulative
layout shift, which is fantastic for

97
00:06:20.890 --> 00:06:22.930
this particular data set.

98
00:06:22.930 --> 00:06:26.010
But the LCP is honestly not good.

99
00:06:26.010 --> 00:06:30.030
The median looks like it needs
improvement most of the time.

100
00:06:30.030 --> 00:06:33.303
And so
this site could obviously use some work.

101
00:06:33.303 --> 00:06:38.964
One of the other pieces of data that's
really interesting to capture over time,

102
00:06:38.964 --> 00:06:41.300
is what makes up that time.

103
00:06:41.300 --> 00:06:45.774
So if a page is taking a lot of time to do
its work, we can use some of that entry

104
00:06:45.774 --> 00:06:49.650
information that we talked
about earlier in the course.

105
00:06:49.650 --> 00:06:50.990
And we can chart that.

106
00:06:50.990 --> 00:06:55.440
So how long did the browser
spend doing a DNS lookup?

107
00:06:55.440 --> 00:06:58.110
How much did it spend
doing an SSL handshake?

108
00:06:58.110 --> 00:07:01.810
How long did it spend downloading
JavaScript and then rendering JavaScript?

109
00:07:01.810 --> 00:07:06.788
We can chart this information over time
to see when something starts going bad,

110
00:07:06.788 --> 00:07:08.210
what was the culprit?

111
00:07:12.212 --> 00:07:14.755
All right, this was our part 2.

112
00:07:14.755 --> 00:07:21.180
We talked at the beginning about some
business objectives and why we did this.

113
00:07:21.180 --> 00:07:23.464
We looked at each of
the web vital metrics and

114
00:07:23.464 --> 00:07:26.750
some tactics on how to think about
them and how to improve them.

115
00:07:26.750 --> 00:07:30.710
And we did a bunch of code demos,
and exercises.

116
00:07:31.930 --> 00:07:37.706
In part 3, we're gonna talk about planning
for a more performant organization.

117
00:07:37.706 --> 00:07:40.078
How do you incorporate
some of these ideas so

118
00:07:40.078 --> 00:07:44.130
that you're not constantly fighting
to build a more performant website.

