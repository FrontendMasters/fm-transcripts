WEBVTT

1
00:00:00.830 --> 00:00:05.694
When you're starting your process,
how do you you need to

2
00:00:05.694 --> 00:00:10.670
make performance goals like what
do you want your app to be?

3
00:00:10.670 --> 00:00:15.831
When you say you want it to be fast or
you want it to be not slow,

4
00:00:15.831 --> 00:00:19.720
what does that mean specifically?

5
00:00:19.720 --> 00:00:22.767
And to do that you need to
answer a couple of questions,

6
00:00:22.767 --> 00:00:25.990
about the larger ecosystem
of your project.

7
00:00:25.990 --> 00:00:27.530
So who are your users?

8
00:00:29.040 --> 00:00:32.404
I am amazed at how many developers I've
talked to who actually cannot even answer

9
00:00:32.404 --> 00:00:35.700
this question, you're building an app,
who are the people who are using it?

10
00:00:35.700 --> 00:00:38.600
like, tell me about them.

11
00:00:38.600 --> 00:00:40.240
What kind of device do they have, do they?

12
00:00:40.240 --> 00:00:41.110
Are they android people?

13
00:00:41.110 --> 00:00:42.130
Are they iOS people?

14
00:00:45.440 --> 00:00:46.898
Are they old crappy iOS people?

15
00:00:46.898 --> 00:00:50.760
Are they old crappy android people like
are they running running iPhone eights?

16
00:00:50.760 --> 00:00:52.610
Are they running android four?

17
00:00:52.610 --> 00:00:56.987
Are they in a corporate environment and
they're still locked into iE 11 for

18
00:00:56.987 --> 00:00:57.805
some reason.

19
00:00:57.805 --> 00:01:02.388
Like, there's all kinds of diversity out
there, and you need to make sure you

20
00:01:02.388 --> 00:01:06.010
understand who is using your stuff and
what device they have.

21
00:01:06.010 --> 00:01:11.570
Once you know that you need to think about
the psychology that you've put them in.

22
00:01:11.570 --> 00:01:14.010
Think about the psychology of waiting.

23
00:01:14.010 --> 00:01:18.340
How long are they going to be
willing to wait for your project?

24
00:01:18.340 --> 00:01:22.180
How anxious are they,
how much value do they get from it.

25
00:01:22.180 --> 00:01:26.160
How much overhead can you give them
without them being all pissed at you.

26
00:01:27.980 --> 00:01:31.083
And if it's about more than
them just not being pissed,

27
00:01:31.083 --> 00:01:36.030
how fast you need to make it for them
to be genuinely impressed by yourself.

28
00:01:36.030 --> 00:01:40.570
What is the competitor, and
how do you be 20% faster than them?

29
00:01:40.570 --> 00:01:41.920
How do you hit that mark?

30
00:01:43.610 --> 00:01:45.430
Is setting that goal.

31
00:01:45.430 --> 00:01:49.117
So bringing that down and
making it practical,

32
00:01:49.117 --> 00:01:52.710
you can answer a question by saying,
my site or

33
00:01:52.710 --> 00:01:58.750
my app should load in however many
seconds and load is an ambiguous term.

34
00:01:58.750 --> 00:02:00.870
It's not necessarily the load event.

35
00:02:00.870 --> 00:02:02.830
It could be largest contentful paint.

36
00:02:02.830 --> 00:02:05.450
It could be until your
loading screen is done.

37
00:02:05.450 --> 00:02:09.130
It could be whatever, whatever that is
appropriately to mean for your app.

38
00:02:10.300 --> 00:02:15.156
That site you should hit that marker
in how many seconds on what kind of

39
00:02:15.156 --> 00:02:16.169
connection.

40
00:02:16.169 --> 00:02:22.220
And by answering that, you can feed
that into how big can you make things.

41
00:02:22.220 --> 00:02:26.692
There's a fantastic site called
performancebudget.io where we can

42
00:02:26.692 --> 00:02:27.570
try this.

43
00:02:27.570 --> 00:02:29.250
So let's, I'm gonna do that together.

44
00:02:29.250 --> 00:02:30.882
You can do it too if you want,

45
00:02:30.882 --> 00:02:33.750
not necessarily if you do
not want to play with it.

46
00:02:33.750 --> 00:02:38.280
But here's performancebudget.io and
so we can put things together.

47
00:02:38.280 --> 00:02:42.786
So if I want my site request metrics.com,

48
00:02:42.786 --> 00:02:48.665
if I want to load in two seconds on a DSL,
how fast it are,

49
00:02:48.665 --> 00:02:53.295
and I go It allows me to
customize things like

50
00:02:53.295 --> 00:02:58.990
how much of different
things am I going to do?

51
00:02:58.990 --> 00:03:02.330
So, all right, I'm not going to write
a whole lot of JavaScript on it.

52
00:03:02.330 --> 00:03:08.110
I'm going to keep that like for
K,12K for CSS, and that seems okay.

53
00:03:08.110 --> 00:03:11.853
I'm probably gonna need
a little bit more images and

54
00:03:11.853 --> 00:03:14.329
then I'm not going to use a video.

55
00:03:18.890 --> 00:03:26.194
So, if I click go with this budgets,
here is what I would actually achieve so,

56
00:03:26.194 --> 00:03:30.177
on DSL I would load in
1 point 2 seconds if I

57
00:03:30.177 --> 00:03:35.070
can stay within these size
budgets approximately.

58
00:03:36.710 --> 00:03:41.214
And in the worst case on
a slow mobile 2G connection,

59
00:03:41.214 --> 00:03:44.529
it would take 70 seconds 56k 43.

60
00:03:45.630 --> 00:03:49.082
Super fast it's like you wouldn't
even know that you'd hit enter and

61
00:03:49.082 --> 00:03:50.600
the page would be done.

62
00:03:50.600 --> 00:03:51.150
It'd be awesome.

63
00:03:52.400 --> 00:03:55.350
Now this is hitting these size targets.

64
00:03:55.350 --> 00:03:57.890
This is what's called
your performance budget.

65
00:03:57.890 --> 00:04:03.050
How big can your stuff be and
still hits your performance targets?

66
00:04:03.050 --> 00:04:04.994
And if you're going to exceed that,

67
00:04:04.994 --> 00:04:08.140
you need to make it compromise
in one of two places.

68
00:04:08.140 --> 00:04:12.520
Either something else has to get
smaller or you're gonna get slower.

69
00:04:13.860 --> 00:04:18.413
It's an iron triangle, you can't
both keep piling JavaScript in and

70
00:04:18.413 --> 00:04:20.890
keep getting faster at the same time.

71
00:04:22.090 --> 00:04:24.050
Now, this is approximates, right?

72
00:04:24.050 --> 00:04:26.330
Because there's lots of
variables in the equation.

73
00:04:26.330 --> 00:04:31.570
We talked about, CDNs and
changing load times and what's necessary.

74
00:04:31.570 --> 00:04:36.290
So this is assuming you've applied most
general performance best practices.

75
00:04:36.290 --> 00:04:39.150
Here's how much stuff you have
to do to get to load time.

76
00:04:40.880 --> 00:04:44.490
Once you know this,
you've set a performance budget.

77
00:04:44.490 --> 00:04:49.145
And you can go from the beginning of your
project, knowing what that budget is and

78
00:04:49.145 --> 00:04:51.600
make decisions as you go.

79
00:04:51.600 --> 00:04:55.920
So if you get a feature coming
along you need to chart at this,

80
00:04:55.920 --> 00:04:59.075
beautiful interactive chart on your page.

81
00:04:59.075 --> 00:05:03.392
But to accomplish that you have
to pull down 100 low wage jobs,

82
00:05:03.392 --> 00:05:07.550
and blows you out of your budget,
then you can put that back to,

83
00:05:07.550 --> 00:05:13.110
whoever needs a good decision and
say hey, we totally have this feature.

84
00:05:13.110 --> 00:05:15.390
Schools slow down
the site by five seconds.

85
00:05:16.840 --> 00:05:21.515
And maybe it's worth it, maybe that
feature will make the site valuable enough

86
00:05:21.515 --> 00:05:23.270
that people will wait for it.

87
00:05:23.270 --> 00:05:27.455
Maybe you can put a spinner in and
that will be okay because you're about to

88
00:05:27.455 --> 00:05:31.830
deliver so much awesome that
they'll wait but they won't.

89
00:05:31.830 --> 00:05:36.996
If that's shocking, now,
the business person, the project manager,

90
00:05:36.996 --> 00:05:40.930
your peer, your boss,
you whoever needs to know that.

91
00:05:42.240 --> 00:05:46.820
Think about it in terms of is this
feature worth making the site slow?.

92
00:05:48.430 --> 00:05:51.740
This is a question that you need
to ask yourself all the time.

93
00:05:51.740 --> 00:05:52.850
For performance to be important.

