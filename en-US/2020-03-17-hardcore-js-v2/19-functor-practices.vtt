WEBVTT

1
00:00:00.190 --> 00:00:03.153
We're just going to do what
we did in the other examples.

2
00:00:03.153 --> 00:00:06.460
We're going to create a composition
where data flows through.

3
00:00:06.460 --> 00:00:11.332
We'll see just like composition,
this will be a nested because,

4
00:00:11.332 --> 00:00:13.688
in fact, this is composition.

5
00:00:13.688 --> 00:00:16.353
So we're just gonna string in a box.

6
00:00:16.353 --> 00:00:20.778
Pass that into the first thing that
happens nine do is that this happens

7
00:00:20.778 --> 00:00:22.360
before the parsefloat.

8
00:00:22.360 --> 00:00:23.431
Right?

9
00:00:23.431 --> 00:00:25.982
So we're gonna do that.

10
00:00:28.127 --> 00:00:33.774
And then we'll jump into the parsefloat.

11
00:00:33.774 --> 00:00:41.481
We'll do parsefloat s and I didn't take it
out of the box so this should be failing.

12
00:00:41.481 --> 00:00:44.135
And I've got a box of
five instead of five.

13
00:00:44.135 --> 00:00:46.708
So what I'll do is switch this to a fold.

14
00:00:46.708 --> 00:00:50.225
And that should pass cool.

15
00:00:50.225 --> 00:00:53.747
We had some issues for those online,
I hadn't saved it to auto run and

16
00:00:53.747 --> 00:00:55.345
there was a run button up here.

17
00:00:55.345 --> 00:00:56.844
So be aware of that.

18
00:00:56.844 --> 00:00:59.525
If it's not on auto run,
there should be a run button.

19
00:00:59.525 --> 00:01:04.533
And if it, yeah,
if you see that you'll have to click it.

20
00:01:04.533 --> 00:01:06.773
Neat, so that's all there is to it.

21
00:01:06.773 --> 00:01:12.647
We've created a linear flow and we do one
thing at a time and everybody's happy.

22
00:01:12.647 --> 00:01:15.300
Let's jump into the next one.

23
00:01:15.300 --> 00:01:18.406
Using box, refactor perfcentToFloat,

24
00:01:18.406 --> 00:01:24.530
just something that is interesting just to
tie this back to normal programming and

25
00:01:24.530 --> 00:01:29.871
hopefully we'll get to an application
where we're using this stuff.

26
00:01:29.871 --> 00:01:34.893
But if we start with box to frame our
problem this way, I can start to swap

27
00:01:34.893 --> 00:01:40.186
out box for something else and
get different effects, box has no effects.

28
00:01:40.186 --> 00:01:42.443
So it's kind of hard
to see that right now.

29
00:01:42.443 --> 00:01:45.942
But we will see some
interesting things happening.

30
00:01:45.942 --> 00:01:50.075
But also sometimes I just want
to .chain things and I can and

31
00:01:50.075 --> 00:01:54.869
this provides that for me and
I think it's reads quite nicely once you

32
00:01:54.869 --> 00:01:59.744
put it in the frame because you can
just do map, map, map, map, map,

33
00:01:59.744 --> 00:02:03.735
map and you have this nice
kinda a promise.man, right?

34
00:02:03.735 --> 00:02:07.442
Like you can kinda see each step in a row.

35
00:02:07.442 --> 00:02:08.235
Here we go.

36
00:02:08.235 --> 00:02:10.418
Let's jump in.

37
00:02:10.418 --> 00:02:14.899
Well, we do this whole thing where
I leave it on the screen, so

38
00:02:14.899 --> 00:02:16.897
we don't lose what it was.

39
00:02:16.897 --> 00:02:18.614
So let's see.

40
00:02:18.614 --> 00:02:22.387
First thing that happens is parsing
the float, actually that's not right.

41
00:02:22.387 --> 00:02:27.106
Look at that percenta flow is this

42
00:02:27.106 --> 00:02:31.151
since what we did down here,

43
00:02:31.151 --> 00:02:36.560
up there, this turns the money sign.

44
00:02:36.560 --> 00:02:37.835
This turns the percent.

45
00:02:37.835 --> 00:02:39.532
Nice good job Brand.

46
00:02:39.532 --> 00:02:45.847
[LAUGH] In any case, throw the string
in there, and map over it.

47
00:02:45.847 --> 00:02:48.880
First thing that happens
is this replace again.

48
00:02:48.880 --> 00:02:51.161
So we do that.

49
00:02:51.161 --> 00:02:53.693
Next thing that happens
is the parse float.

50
00:02:53.693 --> 00:02:59.785
And we'll take that we'll
call parse float S and

51
00:02:59.785 --> 00:03:03.059
then we wanna fold it out.

52
00:03:03.059 --> 00:03:05.060
And we have that float.

53
00:03:05.060 --> 00:03:08.200
So we're just gonna multiply those.

54
00:03:08.200 --> 00:03:09.502
And cool.

55
00:03:09.502 --> 00:03:10.940
Everybody's happy.

56
00:03:10.940 --> 00:03:13.724
So same thing again and again.

57
00:03:13.724 --> 00:03:16.983
Last couple things get
a little bit of this last one.

58
00:03:16.983 --> 00:03:19.277
This is where throw y'all a curveball.

59
00:03:19.277 --> 00:03:24.291
[LAUGH] So boxes a mon

60
00:03:24.291 --> 00:03:28.997
Ad and a functor.

61
00:03:28.997 --> 00:03:32.446
And this is where we see we need
a mon Ad instead of a functor.

62
00:03:32.446 --> 00:03:35.983
And let me kinda unpack that.

63
00:03:35.983 --> 00:03:40.916
So we have pricing discounts and

64
00:03:40.916 --> 00:03:47.137
get the money to float turns into cents.

65
00:03:47.137 --> 00:03:50.552
Okay, let me just start off by by figuring

66
00:03:50.552 --> 00:03:54.077
out [LAUGH] How to start
bringing this down.

67
00:03:54.077 --> 00:03:58.521
So we know let's just leave it same

68
00:03:58.521 --> 00:04:02.979
template that how it is down here.

69
00:04:02.979 --> 00:04:11.523
And, all right, so we're gonna leave
it with two arguments totally fine.

70
00:04:11.523 --> 00:04:14.011
We're gonna start with price.

71
00:04:14.011 --> 00:04:18.327
So first curveball [LAUGH]
through two arguments.

72
00:04:18.327 --> 00:04:22.725
But the more important part is this
we're gonna call them money to float.

73
00:04:22.725 --> 00:04:28.128
So a map that and
then we get cents out of there.

74
00:04:28.128 --> 00:04:34.694
And then we call parse percent to float
on the discount, not the cents so

75
00:04:34.694 --> 00:04:40.507
that doesn't make any that Nippon
does [LAUGH] desktop myself.

76
00:04:40.507 --> 00:04:41.184
All right.

77
00:04:41.184 --> 00:04:45.216
What we're gonna do is actually say,

78
00:04:45.216 --> 00:04:51.643
at this point where we actually
want to get sense out of here.

79
00:04:51.643 --> 00:04:52.460
We're just gonna nest.

80
00:04:54.449 --> 00:04:57.011
So lemme give myself some space

81
00:05:01.444 --> 00:05:05.507
Okay, so what's happening here is we're
calling money to flow and return cents.

82
00:05:05.507 --> 00:05:10.706
Well, we can't map money to float, right?

83
00:05:10.706 --> 00:05:14.041
So we can put that in another box.

84
00:05:14.041 --> 00:05:19.332
And now we can map over cents, And

85
00:05:19.332 --> 00:05:27.326
now that we have cents, we could probably
just do this percent to float on discount.

86
00:05:27.326 --> 00:05:29.676
And then we'll just do cents
minus cents total that.

87
00:05:29.676 --> 00:05:34.459
All right, let's try that and see if I
can make this a little bit nicer for

88
00:05:34.459 --> 00:05:37.768
y'all but
I just wanna get the test to pass first.

89
00:05:37.768 --> 00:05:42.245
So what is happening here we
have a box in a box of four.

90
00:05:42.245 --> 00:05:47.213
What [LAUGH] and
that I think that's expected

91
00:05:47.213 --> 00:05:52.055
fall out but we've got two boxes, right.

92
00:05:52.055 --> 00:05:56.719
And we can actually mess around
with this a little bit more to say

93
00:05:56.719 --> 00:06:01.571
like okay let me give this the right,
we're gonna do it this way.

94
00:06:01.571 --> 00:06:05.831
So instead of just putting price in
when I put the first thing there,

95
00:06:05.831 --> 00:06:08.461
and then we'll get the sense out of that.

96
00:06:08.461 --> 00:06:13.620
And now we have cents we can actually put
the second thing in here in a second box,

97
00:06:13.620 --> 00:06:14.166
right?

98
00:06:14.166 --> 00:06:20.822
And then we'll get
the actual savings here.

99
00:06:20.822 --> 00:06:26.208
This is probably a little nicer
way to write the same exact thing.

100
00:06:26.208 --> 00:06:29.644
Parenthesize it for the value and
again, we still have two boxes, right?

101
00:06:29.644 --> 00:06:32.200
We got the right answers for, but

102
00:06:32.200 --> 00:06:37.232
we're in a box in a box here why
don't we fold out of the first box.

103
00:06:37.232 --> 00:06:38.645
Now we're in one box.

104
00:06:38.645 --> 00:06:43.475
Fold out of this box,
and then we get four.

105
00:06:43.475 --> 00:06:44.694
So ha, I beat you.

106
00:06:44.694 --> 00:06:47.875
Maybe I don't know.

107
00:06:47.875 --> 00:06:54.552
[LAUGH] This is exactly the situation
that mon ads help us with.

108
00:06:54.552 --> 00:07:01.197
And we're gonna go add a method to
box right here to solve for that.

109
00:07:01.197 --> 00:07:06.119
But the idea is once you start working
with box in these compositions and

110
00:07:06.119 --> 00:07:10.468
you introduce another kind of
sub composition, they nest, so

111
00:07:10.468 --> 00:07:15.575
you end up with a box in a box and you
wanna flatten those boxes into one box.

112
00:07:15.575 --> 00:07:19.603
And we started off saying,
we have this array and

113
00:07:19.603 --> 00:07:23.049
we wanna map over it and, do things to it.

114
00:07:23.049 --> 00:07:27.244
And if I returned a nested array,
just like we did with box here,

115
00:07:27.244 --> 00:07:30.288
I would end up with an array or
array one right?

116
00:07:30.288 --> 00:07:33.671
And we have a flatten method on arrays,
right?

117
00:07:33.671 --> 00:07:35.704
And it would solve our problem for us.

