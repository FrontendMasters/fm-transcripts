WEBVTT

1
00:00:00.370 --> 00:00:03.583
There's that question mark
operator like optional chaining or

2
00:00:03.583 --> 00:00:05.377
whatever that's coming out soon.

3
00:00:05.377 --> 00:00:06.451
&gt;&gt; I haven't heard of that one.

4
00:00:06.451 --> 00:00:11.080
&gt;&gt; [LAUGH]
&gt;&gt; So,

5
00:00:11.080 --> 00:00:13.834
can we just sort of forget about
this either type now we have that?

6
00:00:14.995 --> 00:00:20.015
&gt;&gt; Yeah, that is a really good good point
and I'm glad we're able to repeat this for

7
00:00:20.015 --> 00:00:23.635
the audience and
the video is that the fact is,

8
00:00:23.635 --> 00:00:28.785
that is one specific syntax or on
a specific implementation or one quality.

9
00:00:28.785 --> 00:00:33.980
One way to use either, and
it's built in a syntax.

10
00:00:33.980 --> 00:00:39.375
And what we're finding with syntax like
that is that we could learn how to use

11
00:00:39.375 --> 00:00:45.047
these things in general and build a syntax
that works with whatever all of them.

12
00:00:45.047 --> 00:00:49.033
We keep specializing and
fixing to one specific thing and

13
00:00:49.033 --> 00:00:52.612
then it adds to syntax noise and
learning, taxes.

14
00:00:52.612 --> 00:00:57.363
And I'd much prefer staying general and
just working with these types cuz you

15
00:00:57.363 --> 00:01:01.740
only need like, five or
six functions to just do anything.

16
00:01:01.740 --> 00:01:09.030
And that's as we'll see before the days
up like chain map fold traverse, concat

17
00:01:09.030 --> 00:01:12.590
like these are the things that capture
almost anything you'll ever have to do.

18
00:01:13.650 --> 00:01:17.070
And these these contexts
these these types,

19
00:01:17.070 --> 00:01:20.040
they actually stack and
compose themselves.

20
00:01:20.040 --> 00:01:25.400
So, I hesitate to adopt new
syntax unless it's really

21
00:01:25.400 --> 00:01:27.752
going to solve a general problem.

22
00:01:27.752 --> 00:01:32.359
All right, lets jump in,
here is our front run function,

23
00:01:32.359 --> 00:01:35.567
is not written as
cleverly with the [LAUGH]

