WEBVTT

1
00:00:00.120 --> 00:00:04.290
I wanna kinda talk about how
a composition is dot chaining.

2
00:00:04.290 --> 00:00:05.210
It's the same thing.

3
00:00:06.430 --> 00:00:11.570
And so, if you're writing this thing on
the left here, where we call toLowerCase,

4
00:00:11.570 --> 00:00:15.970
and split, map, and reverse, that actually
ends up being much more ergonomic.

5
00:00:15.970 --> 00:00:19.120
And Java scripts are like Scala or
JavaScript.

6
00:00:19.120 --> 00:00:22.817
And so,
I tend to favor that in my day to day.

7
00:00:22.817 --> 00:00:26.980
Sometimes this actually expresses
the problem much nicer.

8
00:00:26.980 --> 00:00:28.505
So you can use compose there.

9
00:00:28.505 --> 00:00:32.601
But I want you all to see a compose and
how it works and get a feel for it,

10
00:00:32.601 --> 00:00:35.851
because if you go pick up PureScript or
Elm or Haskell,

11
00:00:35.851 --> 00:00:38.225
you're gonna run right smack into it.

12
00:00:38.225 --> 00:00:41.660
[LAUGH] And we're gonna get
a pipeline operator, apparently.

13
00:00:41.660 --> 00:00:42.770
Is that happening, is that real?

14
00:00:42.770 --> 00:00:45.019
We got a pipeline operator in JavaScript?

15
00:00:45.019 --> 00:00:47.220
It's the same thing as composition.

16
00:00:47.220 --> 00:00:49.454
So we'll have a third thing
down here is pipeline.

17
00:00:49.454 --> 00:00:51.975
[LAUGH] But yes, these two are equivalent.

