WEBVTT

1
00:00:00.340 --> 00:00:05.430
Cool, let's see what happens if I try to

2
00:00:05.430 --> 00:00:10.831
require fs ooh, look, it works awesome.

3
00:00:10.831 --> 00:00:16.494
Gotta love this app anyway all right
[LAUGH] so we got our from nullable.

4
00:00:16.494 --> 00:00:20.822
We got our definitions up here,
and we're on to this function,

5
00:00:20.822 --> 00:00:25.971
we're gonna use either to refactor this
function just like we did with box.

6
00:00:25.971 --> 00:00:31.353
Here we have a try catch though, seems
like a situation where we've this impure,

7
00:00:31.353 --> 00:00:35.409
not mathematical function, and
what we wanna do is transform

8
00:00:35.409 --> 00:00:39.707
it into a mathematical function
using either to return us value.

9
00:00:39.707 --> 00:00:43.926
And let us deal with it on the calling
side, instead of just trying to throw

10
00:00:43.926 --> 00:00:48.093
an error when which case like I don't
need to call try catch around this.

11
00:00:48.093 --> 00:00:50.863
There's nobody telling
me I need to do that and

12
00:00:50.863 --> 00:00:55.705
like I did it here return to 3000 but
if I took this out, it would just blow up.

13
00:00:55.705 --> 00:01:00.815
So try catch is pretty, pretty loose so
let's go ahead and do this.

14
00:01:00.815 --> 00:01:07.778
Let's rename this and
keep our pattern what stays on the screen,

15
00:01:07.778 --> 00:01:13.220
[SOUND] okay, so
the first thing to do here is to say,

16
00:01:13.220 --> 00:01:19.043
so, I'm gonna cheat on
the purity side to demonstrate

17
00:01:19.043 --> 00:01:25.896
this because we don't have any way
to capture [LAUGH] this IO yet.

18
00:01:25.896 --> 00:01:32.629
But we'll look at that next, so
let's put this in an either so

19
00:01:32.629 --> 00:01:37.421
we're going to say read
the fileFileSync so

20
00:01:37.421 --> 00:01:42.360
let's say fromNullable is it they're not?

21
00:01:42.360 --> 00:01:45.918
And actually,
that could just blow up right?

22
00:01:45.918 --> 00:01:49.781
So why don't we do a try
catch around that, and

23
00:01:49.781 --> 00:01:54.139
try catch is a function
that I've defined once, and

24
00:01:54.139 --> 00:01:58.712
[SOUND] this is where we gonna
bump it down just a little.

25
00:01:58.712 --> 00:02:03.868
Save us the trouble all right that's
cool is that still readable for y'all?

26
00:02:03.868 --> 00:02:09.270
Okay Let's see so what trycatch does,

27
00:02:09.270 --> 00:02:14.892
when I call this function, is if this
blows up, I'll get a left of the error,

28
00:02:14.892 --> 00:02:19.146
and if it doesn't, I get it right so
that's pretty neat.

29
00:02:19.146 --> 00:02:23.931
Let's go ahead and write, try to catch,

30
00:02:23.931 --> 00:02:30.783
let's try catch is a function
that takes a function right?

31
00:02:30.783 --> 00:02:36.896
And we got to write this once and
one time only try we'll call the function,

32
00:02:36.896 --> 00:02:40.600
put it in array,
if it's happy Return that.

33
00:02:40.600 --> 00:02:46.949
Otherwise catch the error and
return a left of the error, cool.

34
00:02:46.949 --> 00:02:50.707
So that's the one and
only time we have to write this and

35
00:02:50.707 --> 00:02:55.608
that'd be nice because we don't have
to go litter our code with all this

36
00:02:55.608 --> 00:02:59.940
syntactical stuff, and
deal with like this prickly syntax and

37
00:02:59.940 --> 00:03:03.641
the possibility of nobody
actually dealing with it.

38
00:03:03.641 --> 00:03:08.512
This is what we call the try catch here,
then we can map, right,

39
00:03:08.512 --> 00:03:12.771
if it works I get file contents,
let's see what we did.

40
00:03:12.771 --> 00:03:16.674
We parsed down, no,
this is gonna blow up possibly so

41
00:03:16.674 --> 00:03:21.921
let's first let's just pretend it
won't and then we'll deal with that.

42
00:03:21.921 --> 00:03:24.826
We'll go ahead and
get the config out of that and

43
00:03:24.826 --> 00:03:27.520
we'll grab the config.port, terrific.

44
00:03:27.520 --> 00:03:30.605
And then once we fold it
down where am I dying here?

45
00:03:30.605 --> 00:03:35.746
Console log, [SOUND] anybody result

46
00:03:35.746 --> 00:03:41.568
is this there is no curly braces, okay,

47
00:03:41.568 --> 00:03:46.705
so again we have a rate of 3000,

48
00:03:46.705 --> 00:03:54.267
let's just change that,
so it's not the same one.

49
00:03:54.267 --> 00:03:59.819
[LAUGH] So and then we'll fold it out and
if it's a left we'll return,

50
00:03:59.819 --> 00:04:05.494
whatever 8080, and if it's a right,
we'll just return right?

51
00:04:05.494 --> 00:04:08.612
Cool, we get 3000 what if we misspell it?

52
00:04:08.612 --> 00:04:10.961
Get 8080, how nice is that?

53
00:04:10.961 --> 00:04:16.829
This would have just blown up in our face,
but we're told by, right here, and we can

54
00:04:16.829 --> 00:04:22.469
actually move this right like we can make
read file sync actually let's do that.

55
00:04:22.469 --> 00:04:30.091
We'll make a little safer read file,
readFileSync, to just be that, right?

56
00:04:30.091 --> 00:04:36.930
And it takes a name or a path,
and it does that right there

57
00:04:38.730 --> 00:04:42.467
Terrific and actually this is wrong,

58
00:04:42.467 --> 00:04:47.617
the way this is defined is
the path is on the outside.

59
00:04:47.617 --> 00:04:53.149
Cuz they don't actually pass
the argument to the function,

60
00:04:53.149 --> 00:04:59.671
but now we can readFileSync with
['config.json'], there we go.

61
00:04:59.671 --> 00:05:05.315
So now just so we're clear, like,
I decided to make this because I don't

62
00:05:05.315 --> 00:05:11.157
want anyone to ever have the possibility
of calling this without try catch.

63
00:05:11.157 --> 00:05:13.918
And now they're forced to map over it.

