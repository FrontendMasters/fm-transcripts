WEBVTT

1
00:00:00.000 --> 00:00:04.489
For Deno,
if you actually go to Deno site here,

2
00:00:04.489 --> 00:00:11.687
one of the things that we did not talk
about is they have a really good manual.

3
00:00:11.687 --> 00:00:16.210
If you just go to their manual,
setting up your environment, and

4
00:00:16.210 --> 00:00:20.750
one of the things that Deno provides
the shell auto completions.

5
00:00:20.750 --> 00:00:24.490
So if we look at the CLR here,
I'm back in my terminal.

6
00:00:24.490 --> 00:00:28.268
If I need Deno and then tab,
it shows me all of

7
00:00:28.268 --> 00:00:33.180
the different directories
that might be called Deno.

8
00:00:33.180 --> 00:00:34.404
But if I do space tab,

9
00:00:34.404 --> 00:00:38.760
then it gives me all of the options on
the Deno object that I can actually run.

10
00:00:38.760 --> 00:00:42.366
So these are all the things that you can
pass to Deno, we've been doing Deno run,

11
00:00:42.366 --> 00:00:44.940
but these are all the other
things that you can do.

12
00:00:44.940 --> 00:00:48.517
And these are enabled by the autocomplete,

13
00:00:48.517 --> 00:00:52.393
which you can look and
dots on how to set that up.

14
00:00:52.393 --> 00:00:56.784
For any one of these,
you can pass a help flag too so for

15
00:00:56.784 --> 00:01:00.786
instance, like, let's Deno run---H, and

16
00:01:00.786 --> 00:01:07.620
then it will tell you all of the different
flags that you can pass in here.

17
00:01:07.620 --> 00:01:11.830
It's rapping quite a bit because the text
is so big, but here are the options.

18
00:01:11.830 --> 00:01:15.635
So any one of these items, any one of
these Deno items, you can just pass

19
00:01:15.635 --> 00:01:20.210
that -H2, and it will give you more
information on what you can do there.

20
00:01:20.210 --> 00:01:22.030
There are a lot of options.

21
00:01:23.590 --> 00:01:27.176
I wanna talk about a few of them
that I think are interesting,

22
00:01:27.176 --> 00:01:30.270
but we're not gonna talk about all.

23
00:01:30.270 --> 00:01:35.880
One of the things that Deno
includes is a built in format.

24
00:01:37.750 --> 00:01:40.410
So let's look at it.

25
00:01:40.410 --> 00:01:43.640
So I'm gonna paste some code in here and
I've actually got formatting turned on.

26
00:01:43.640 --> 00:01:47.291
So I'm gonna turn off Toggle formatting.

27
00:01:47.291 --> 00:01:50.380
All right, so I'm gonna save this file.

28
00:01:50.380 --> 00:01:53.670
And you'll notice that this
file has single quotes.

29
00:01:55.370 --> 00:01:59.360
If we were to run Deno
format on this file,

30
00:01:59.360 --> 00:02:05.860
if you watch it's gonna change
the single quotes to double quotes.

31
00:02:05.860 --> 00:02:08.370
I don't know if you just saw
do that pretty quickly there.

32
00:02:10.680 --> 00:02:13.890
This is very similar to prettier
if you've used prettier before.

33
00:02:15.610 --> 00:02:18.994
It's sort of a version of
prettier although it doesn't

34
00:02:18.994 --> 00:02:20.580
uses the D print library.

35
00:02:20.580 --> 00:02:22.430
So the formatting is
a little bit different.

36
00:02:22.430 --> 00:02:26.066
Like for instance, the Deno format
are really likes trailing commas, right?

37
00:02:26.066 --> 00:02:28.334
So if you have a list of items, all right?

38
00:02:28.334 --> 00:02:34.452
So if you have,
like const stuff is an array,

39
00:02:34.452 --> 00:02:37.353
and yet 1, 2, 3.

40
00:02:37.353 --> 00:02:40.837
I can't count 1, 2,
3 like if we format this with Deno,

41
00:02:40.837 --> 00:02:42.870
let's try this see what happens.

42
00:02:44.380 --> 00:02:48.620
It puts a trailing comma, see on the 3,
it just likes trailing commas.

43
00:02:48.620 --> 00:02:50.350
Prettier doesn't do trailing commas.

44
00:02:50.350 --> 00:02:52.370
So there are some differences there.

45
00:02:52.370 --> 00:02:55.221
In VS code to make this easier for
yourself,

46
00:02:55.221 --> 00:03:00.480
there's an extension called formatting
toggle, I think is what it's called.

47
00:03:02.680 --> 00:03:03.290
Yeah.

48
00:03:03.290 --> 00:03:09.106
And what this does is it just toggles on
and off something called format on Save.

49
00:03:09.106 --> 00:03:12.286
And so you can see that down
here in my status bar, it's X.

50
00:03:12.286 --> 00:03:15.100
I'm gonna turn this back
on this toggle formatting.

51
00:03:15.100 --> 00:03:20.930
And then I'm gonna go to my user settings
for a second here and show you something.

52
00:03:22.690 --> 00:03:25.649
So we go, let's get settings Jason.

53
00:03:29.417 --> 00:03:32.582
And then I'm gonna take this off
this default format or line and

54
00:03:32.582 --> 00:03:35.230
then look again at what happens here.

55
00:03:35.230 --> 00:03:41.030
And so we have this file,
it's in fact let's save.

56
00:03:41.030 --> 00:03:44.440
Now if we go to format this file,
so I'm gonna say format document.

57
00:03:44.440 --> 00:03:48.090
It's gonna tell me there's multiple
formatters, which one do you wanna use?

58
00:03:49.120 --> 00:03:50.190
And then we can configure.

59
00:03:50.190 --> 00:03:54.845
Now normally I use prettier but when you
install Deno you now have this additional

60
00:03:54.845 --> 00:03:58.580
format or so
you can choose Deno formatting as well.

61
00:03:58.580 --> 00:04:01.722
I'm gonna choose Deno and
then it adds this line

62
00:04:01.722 --> 00:04:06.685
to the settings file here where it sets
the default format for TypeScript.

63
00:04:06.685 --> 00:04:11.676
Now I think one of the questions
that's worth asking is

64
00:04:11.676 --> 00:04:14.943
why does Deno include a formatter?

65
00:04:14.943 --> 00:04:19.317
And I think the answer is that,
according to Ryan,

66
00:04:19.317 --> 00:04:24.325
at least is that it seems to
be primarily about two things.

67
00:04:24.325 --> 00:04:26.175
One of them is speed.

68
00:04:26.175 --> 00:04:30.235
And so the format is written in rust and
it's quite fast.

69
00:04:30.235 --> 00:04:34.403
In fact,
if we were to come over here to the Deno,

70
00:04:34.403 --> 00:04:40.875
in fact I cloned earlier,
I cloned all of Deno to my local machine.

71
00:04:40.875 --> 00:04:44.430
So if you got a Deno here oops,
let's do Deno.

72
00:04:44.430 --> 00:04:49.560
And then let's look at their
standard library which is here.

73
00:04:49.560 --> 00:04:51.610
This is their entire standard library,
right?

74
00:04:51.610 --> 00:04:56.036
So we could say, Deno format every
file in the standard library,

75
00:04:56.036 --> 00:04:58.702
and it's gonna go through and do that.

76
00:04:58.702 --> 00:05:01.788
It just checked 475 just formatted 400.

77
00:05:01.788 --> 00:05:04.993
No, it didn't make any changes cuz
there might have been formatted,

78
00:05:04.993 --> 00:05:07.480
but it's just significantly faster.

79
00:05:07.480 --> 00:05:09.470
And so that's one of the reasons.

80
00:05:09.470 --> 00:05:13.639
The other reason is I think,
I'm guessing here, but

81
00:05:13.639 --> 00:05:18.551
in current JavaScript and
node projects, you don't get all of

82
00:05:18.551 --> 00:05:24.590
the things that you need to really
have a good project out of the box.

83
00:05:24.590 --> 00:05:26.976
You have to vote on them all on,
one of them is formatting,

84
00:05:26.976 --> 00:05:28.510
you have to vote on prettier.

85
00:05:28.510 --> 00:05:31.060
If you want linting,
you have to vote on eslint.

86
00:05:31.060 --> 00:05:34.100
And Deno is including these
things out of the box.

87
00:05:34.100 --> 00:05:38.460
And so you don't have to add anything to
your project to get that, it just works.

88
00:05:39.540 --> 00:05:44.400
Additionally, Deno will run tests for
you, so it even includes a test runner.

89
00:05:44.400 --> 00:05:48.338
So you can see that it's a much more
comprehensive idea for your projects,

90
00:05:48.338 --> 00:05:51.400
so that you don't end up bolting
a lot of dependencies on is

91
00:05:51.400 --> 00:05:54.050
trying to eliminate those dependencies for
you.

92
00:05:57.050 --> 00:06:02.080
All right, that's the fourth matter,
which is kind of cool.

93
00:06:02.080 --> 00:06:04.934
Let's look at how you pass in
arguments to the Deno COI,

94
00:06:04.934 --> 00:06:08.030
because it's a little bit
important to understand this.

95
00:06:08.030 --> 00:06:11.640
Otherwise you can get confused in a hurry.

96
00:06:11.640 --> 00:06:16.296
And so before I think we were logging out,
let's go back to our,

97
00:06:16.296 --> 00:06:18.810
we're logging out our args here.

98
00:06:20.710 --> 00:06:23.450
Actually, we're just
logging out the first one.

99
00:06:24.750 --> 00:06:28.840
Let's just take this out to look at our
Deno.args, let's just look at all of them.

100
00:06:29.970 --> 00:06:34.812
So if we pass in, so
we can do Deno run app.ts 1,

101
00:06:34.812 --> 00:06:38.960
2, 3, and should return 1, 2, 3.

102
00:06:38.960 --> 00:06:44.513
Now you have to pass the args
after your file name here,

103
00:06:44.513 --> 00:06:47.820
and this is super important.

104
00:06:47.820 --> 00:06:50.780
Now this is not unlike other systems,

105
00:06:50.780 --> 00:06:54.858
but it is especially finicky
when it comes to flags.

106
00:06:54.858 --> 00:06:59.366
So in Deno we've got these like so
before we had these Deno run and

107
00:06:59.366 --> 00:07:02.805
then we did if y'all
remember we did allow read.

108
00:07:02.805 --> 00:07:06.830
And then we did app.ts which this isn't
gonna do anything but there we are.

109
00:07:06.830 --> 00:07:09.044
We didn't pass any parameters in.

110
00:07:09.044 --> 00:07:14.249
But if we had something where we needed
to read so let's console log Deno

111
00:07:14.249 --> 00:07:20.380
current working directory, right,
it's gonna we have to pass the flag in.

112
00:07:20.380 --> 00:07:25.492
That flag has to come
before the app.ts file.

113
00:07:25.492 --> 00:07:30.621
If you pass it after the file like this,
so if you do this, right?

114
00:07:30.621 --> 00:07:33.043
And then you try to pass in allow read,

115
00:07:33.043 --> 00:07:36.386
it's just gonna act like you didn't do it,
right?

116
00:07:36.386 --> 00:07:40.474
And it's very particular about that
some CLI are some art, but just know

117
00:07:40.474 --> 00:07:45.520
that all of your flags have to come before
the file name or they're not gonna work.

118
00:07:45.520 --> 00:07:48.178
So if you're passing a flag and
it's ignoring the flag, check and

119
00:07:48.178 --> 00:07:50.910
make sure that you're passing
it in the right location.

120
00:07:50.910 --> 00:07:55.082
So we've talked about passing in
arguments here, running programs,

121
00:07:55.082 --> 00:07:59.891
we talked about flags, they must be passed
before the name of the file to execute.

122
00:07:59.891 --> 00:08:05.059
There are a lot of different flags that
you're gonna end up passing to Deno,

123
00:08:05.059 --> 00:08:08.304
but there are two that
you're gonna pass a lot.

124
00:08:08.304 --> 00:08:15.480
Again, Deno has so much stuff that's built
in and it's just a lot of fun to use.

125
00:08:15.480 --> 00:08:21.350
For instance, it has a built in watcher so
we can do deno run, watch appt.ts.

126
00:08:21.350 --> 00:08:24.707
Now when I execute this it's
gonna tell me that it can't,

127
00:08:24.707 --> 00:08:28.240
because I also need to
pass in an unstable flag.

128
00:08:28.240 --> 00:08:32.217
So Deno has this idea where Deno is
stable, but a lot of the features in

129
00:08:32.217 --> 00:08:37.100
it are not and it gets around that by
putting them behind an unstable flag.

130
00:08:37.100 --> 00:08:42.884
So in order to use the watch,
we got to say run watch unstable app.ts.

131
00:08:42.884 --> 00:08:47.452
And now it's gonna run
process we didn't allow, but

132
00:08:47.452 --> 00:08:53.045
we can change this out, so
if we change this and said Hello World,

133
00:08:55.245 --> 00:08:59.670
And saved it, it changes and the boom,
Hello World's logged out, right?

134
00:08:59.670 --> 00:09:01.310
And so as you're going along developing,

135
00:09:01.310 --> 00:09:04.760
perhaps you don't wanna have to run it
every time, you can just leave it running.

136
00:09:04.760 --> 00:09:08.142
We'll do this later on when we're
actually building our project to see how

137
00:09:08.142 --> 00:09:09.010
that's helpful.

138
00:09:10.680 --> 00:09:14.132
So that's watching unstable,
you're gonna use those a lot.

139
00:09:14.132 --> 00:09:16.375
The unstable flag you'll use quite a bit,

140
00:09:16.375 --> 00:09:18.938
a lot of stuff is still
behind the unstable flag.

141
00:09:18.938 --> 00:09:23.046
There are a lot of other
flags that we can pass in,

142
00:09:23.046 --> 00:09:28.672
I think just as a summary we're gonna
pass in H in order to get help.

143
00:09:28.672 --> 00:09:31.789
We're going to pass in all
flags before the filename and

144
00:09:31.789 --> 00:09:35.115
we're gonna pass in our own
arguments after the file name.

145
00:09:35.115 --> 00:09:37.695
And that's basically what you
need to know about the Deno COI,

146
00:09:37.695 --> 00:09:39.795
you can explore the different
options on your own.

