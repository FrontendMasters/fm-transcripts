[00:00:00]
>> Well, welcome to this course Deno first look. The objective of this course is to help you understand what Deno is, and why on earth we need yet another JavaScript runtime. I mean, isn't that good enough? Why is that not good enough? Why do we need another? And then also, what I wanna do is help you understand how to build applications with Deno.

[00:00:26]
And so we're going to actually look at doing that. And we're gonna do that later on today and do something practical where we're gonna build a website. And do you think like templating, and routing and all the things that you would normally need to build both backend and frontend sort of a full stack application.

[00:00:47]
Depending on when you watch this, Deno may or may not have gained enough popularity in the JavaScript community to be really prolific. The truth is that we don't know if it ever will. There's just no way to know what things catch on and what things don't. But my hope is that going through this course will help you so that if it does you're not caught on your heels and that you're prepared.

[00:01:13]
Either way, today just might open your your mind into considering a different JavaScript runtime because Dino really does things very differently. If nothing else, it's going to cause you to think about the things you already know in a different way. And that's always good. So who should you be for this this course?

[00:01:36]
You should be a JavaScript developer with some knowledge of Node.js. I think I'm posturing that's probably most of you out there. If you work with JavaScript, you do work with node in some form or fashion, and that's because node is used to build pretty much every website these days.

[00:01:54]
It's used to build front end applications. We're use it for tooling on the on the command line, right like linting and web packing and Our frontend apps and CL eyes and things of that nature. Almost everybody that does JavaScript is familiar with node or NPM and NPM packages.

[00:02:12]
If you're very familiar with node as in like you build web applications with it specifically with like an express or the COA framework. This course will be particularly relevant to you because the application that we build is going to try to mirror some of the concepts that you already know there.

[00:02:31]
And a lot of what we're gonna do today, we're gonna compare back to node, because that's the only baseline that we have. in which to do that that's the only other JavaScript runtime that I'm aware of. I'm sure there are others. But that's really sort of the reality that we have.

[00:02:44]
That's the world we live in. And so that's the lens through which we're gonna view things. TypeScript would also be a plus if you know TypeScript, that's gonna be a plus. Although it's not specifically required, I'm not gonna spend a ton of time getting into the minutiae of TypeScript, because there's just a lot of it.

[00:03:08]
And there's quite a bit of it that leaks into Deno because TypeScript is a first class citizen in Deno. But my feeling on TypeScript is that If we spend too much time talking about that instead of Deno and getting caught up in those details, that it's really distracting from understanding the core principles of Deno and I don't wanna do that to you.

[00:03:27]
I don't wanna confuse you. I wanna excite you. So some knowledge of TypeScript will be helpful but it isn't required and plain JavaScript works just fine in TypeScript as it is. So I don't wanna get too hung up there. But we will be writing mostly TypeScript today. Although we're gonna stay away from the complex constructs in TypeScript, like things like interfaces and things like that.

[00:03:48]
We just not gonna talk about that. If you wanna get a general knowledge of TypeScript, there's a video here I've included in the course materials from Anders Hiles Berg when they first announced it, it's about an hour long, it's really all you need. If you wanna understand typeScript and excellent video, I highly recommend watching that, and you'll know pretty much everything you need to know to work with typeScript.

[00:04:10]
All right, The last time that I did a course here, I got a lot of pairs are mistakes that I made throughout. And I'm sure that I'll see them today as we go along. You'll see them too. Most of them will probably be grammatical errors. I tend to confuse it and it's all the time.

[00:04:30]
For some reason after 42 years of being alive, I still can't get that right. [LAUGH] So what I would like to ask is that if you're going through this course and you see mistakes, you'll see things that I can't because I just can't see them. If you would open a poll request or file an issue on the Deno first look repo, I would very much appreciate that.

[00:04:53]
If you wanna get in touch with me you can find me on Twitter you can contact me there if you wanna just hit me up directly. I'm just bird calm and on Twitter although I do try to avoid social media because I want to be happy, I don't want to be upset and sad.

[00:05:07]
So I tried to stay away from that. My name is Berg and I'm a content engineer at Microsoft, and that's where I do in my day to day job is primarily advocacy around VS code. I spent a lot of time working with the VS code team, GitHub, and also Azure, and then all things JavaScript.

[00:05:27]
So there's quite a few JavaScript folks at Microsoft, and we have a very strong sort of sub community inside of Microsoft that includes folks from TC39, and folks from NPM, and all of the different areas. And we work really, really hard to make Microsoft, and all of the things that we build at Microsoft a great place for JavaScript developers.

[00:05:49]
I've been a JavaScript developer for about 12 years. That's a long time, I'm dating myself, that's okay. I actually started as a C# developer. Well, that's not true. I did VB 6 and then I moved to C# and I did C# for a while. And I never really liked it because I never really felt like I was good at it.

[00:06:10]
I was reading books all the time, and I was really trying to learn it, but it always made me feel like I never could quite get it right. And I was never gonna be great. And then about the time that jQuery came out, I really got into JavaScript.

[00:06:24]
I love JavaScript because it makes me feel so smart and it makes me feel like I can do it. And I love that. And I think that JavaScript is bizarrely suited for applications of all types, browser apps, server apps, large apps, small apps. To me JavaScript is so cool because it takes all of the rules.

[00:06:46]
All of the things that we know about programming languages, basically throw them all out the window. And what we're left with is is this thing that it's just a beautiful disaster. I love it so much. I love teaching because it's really the best way to learn something. If you can explain something to someone, then then you probably understand it yourself.

[00:07:08]
Otherwise you can't explain it. It also lets me connect with people like all you folks here today, which is awesome. And through that I've learned that we are a lot more alike than we are different. Mostly I would say that everyone learning, I'm learning. So if you feel like that you don't get it, I promise you, you're not alone.

[00:07:30]
I don't get it most of the time either. So there's at least two of us. If you feel like that, it's you and me. There's at least two, you're not alone. I have this diagram that I always refer back to, which I think is very poetic that I always feel like I'm on the left that like what I know is just like this small subset and everybody else knows so much more than what I know.

[00:07:49]
But actually, what I know and what other people know probably equal size and we just overlap in some places, some places we don't. And so I love this diagram it makes me feel better about myself. I live in Nashville, Tennessee which is scientifically the greatest city in the United States, that's science I didn't make that up.

[00:08:12]
I have three teenage boys, and two pugs. I'm a huge fan of Overwatch. I play it a lot, probably too much. I mean the Wrecking Ball. I know a lot of people don't like the Wrecking Ball. They tell me all the time when we lose for some reason.

[00:08:30]
I also do some woodworking, some crafting, amateur, build some pieces of furniture. My wife on occasion will ask for things like hey, can you make me a bench for the bathroom and then I'll do that. It's woodworking and coding have a lot in common as soon as knitting.

[00:08:47]
If you've never tried knitting before, I'd encourage you to do that. If you like coding, you can go to the craft store and buy these like round, loom knits to make hats and yarn. And you'll find that the process of knitting and coding is very, very similar that it can it engages the same part of your brain, it's very fulfilling.

[00:09:05]
So my friend Brian kedleston got me into that, it's kind of cool. Again, if you'd like to connect, you can find me on Twitter. Although I'm not there a lot, I do try to avoid it. I also put my email address directly in here. If you'd like to email me directly, that's probably a better way to contact me.

[00:09:22]
And I would love to hear from you, I do read my emails. I will respond and I would love to hear from you. Why do we create this course? I think that the key to staying sane as a JavaScript developer. Well in tact, but it's even more exacerbated for JavaScript developers is to be open to learning new things.

[00:09:41]
And it's also good to learn in forget, a lot of times you feel like I don't know if I should invest time into doing that. Because what if it doesn't end up being a thing and then I spent all this time learning it and then now I've forgotten it and I don't use it.

[00:09:52]
I actually think that's not a bad thing. You will pick up things that stay with you that will pay dividends down the road. Deno maybe just a ripple in the vast ocean of JavaScript and tech. Or it may become the actual ocean. I mean, we just don't know.

[00:10:13]
And the fact that we don't know causes us distress because we're always trying to, we want to know. Learning something about Deno will remove the fear. Then you might have about it. And this is true for actually anything in life, I've discovered is that, if it scares you, if you learn more about it, it won't scare you as much.

[00:10:34]
It takes the power away from the fear. So try that out. There's also no idea that should be off the table when it comes to technology, I do believe that. So I think we should look at all of them and then pick the one that's right for you, your team, your brain, your project.

[00:10:49]
There's no one right answer only the answer that's right for you. There have been so many instances of this in technology, a great one is from the React project where when I was first writing JavaScript people always said never, ever put your JavaScript in your HTML together, you need to separate those out.

[00:11:09]
You they used to call it unobtrusive JavaScript. And then some guy said, Well, yeah, but what if we put the HTML in the JavaScript file, which is an insane idea, that's an insane idea. But today, we just call that JSX that's just react and we do that we don't think twice about it.

[00:11:24]
Bit and so we have to be willing to embrace these sort of ideas that sound kind of crazy because they may not be as crazy as as we think they are. I have another course on front end masters called VS code can do that. If you'd like to check that out, it's all about what you can do with VS code, it's completely free.

[00:11:43]
It's open to everyone no subscription is required. So you can check that out. So thank you for being here with me today. And that I hope you enjoy this course this Deno first look. By the way it is pronounced Dino, not deno I wasn't sure about that. So last night I went back to my room and I watched a video from the creator of deno and he pronounces the Deno.

[00:12:08]
So I don't know if it's one of those things where both Deno and Dyno are correct, but we're gonna say Deno is the right way to say it, since that's how Ryan says it.

