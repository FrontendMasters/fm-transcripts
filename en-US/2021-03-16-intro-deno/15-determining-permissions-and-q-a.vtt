WEBVTT

1
00:00:00.080 --> 00:00:04.470
Let's talk about determining
permissions that we might already have.

2
00:00:04.470 --> 00:00:09.469
Because we don't wanna ask users for
permissions that we already have.

3
00:00:09.469 --> 00:00:12.577
So you can query to get
a specific permission.

4
00:00:12.577 --> 00:00:17.940
So in this case, let's just log out,
I'm gonna just copy this in here.

5
00:00:17.940 --> 00:00:22.030
So we have this descriptor,
let me collapse this terminal.

6
00:00:22.030 --> 00:00:24.655
So what we're gonna do here
is just query and see,

7
00:00:24.655 --> 00:00:26.600
do we have this permission, right?

8
00:00:26.600 --> 00:00:29.231
And then we're just logging it out here.

9
00:00:29.231 --> 00:00:31.308
And then let's go ahead and

10
00:00:31.308 --> 00:00:37.120
query it afterwards to see what
the state of it is, and just do this.

11
00:00:37.120 --> 00:00:44.184
All right, so
now let's do deno run app.ts.

12
00:00:44.184 --> 00:00:48.340
All right, so you can see that
by default the state is prompt.

13
00:00:48.340 --> 00:00:50.870
So if we haven't, we now have
permissions the state is prompt.

14
00:00:50.870 --> 00:00:53.830
And if we say grant,
then it becomes granted.

15
00:00:53.830 --> 00:00:57.780
And if we were to do that again and
say deny, then the state is denied.

16
00:00:57.780 --> 00:01:01.671
Now, note that if you do this.

17
00:01:04.559 --> 00:01:07.890
Like this, if you pass this in,
what do you think is gonna happen?

18
00:01:09.370 --> 00:01:09.920
Well, let's find out.

19
00:01:13.150 --> 00:01:17.676
Nothing, it never asks us,
because it already sees that it's granted,

20
00:01:17.676 --> 00:01:20.290
so it just goes ahead and does that.

21
00:01:20.290 --> 00:01:23.740
However, if we were to give it
an insufficient amount of access,

22
00:01:23.740 --> 00:01:27.520
like allow read equals the current
directory, what will happen then?

23
00:01:29.000 --> 00:01:32.000
Then it asks us, because we didn't
give it enough permissions.

24
00:01:32.000 --> 00:01:36.926
So you can see that the permissions API is
pretty smart in so much as it's not gonna

25
00:01:36.926 --> 00:01:42.980
prompt you multiple times for permissions
if those permissions are already there.

26
00:01:42.980 --> 00:01:47.717
So the question was, if Deno is asking
you for permission, what what if node

27
00:01:47.717 --> 00:01:52.837
implements the same functionality,
wouldn't that defeat the purpose of Deno?

28
00:01:52.837 --> 00:01:56.010
I don't know if that would,
I don't think so.

29
00:01:56.010 --> 00:02:00.469
But I think that there's a better
point there, what you just made,

30
00:02:00.469 --> 00:02:05.552
which is that, will node begin to adopt
some of the things that Deno is doing,

31
00:02:05.552 --> 00:02:08.524
that we generally consider
to be good ideas or

32
00:02:08.524 --> 00:02:11.682
improvements on the current
state of affairs?

33
00:02:11.682 --> 00:02:15.420
And I think, yes, absolutely, it will.

34
00:02:15.420 --> 00:02:19.385
And in fact, I think that might
be a more likely outcome here,

35
00:02:19.385 --> 00:02:23.368
is that we begin to see node
adopt Deno's way of doing things.

36
00:02:23.368 --> 00:02:27.922
And then perhaps there's a merger at some
point down the road back into a single

37
00:02:27.922 --> 00:02:28.940
project.

38
00:02:28.940 --> 00:02:33.316
So the question was, we were executing
in the context of the current user, but

39
00:02:33.316 --> 00:02:36.653
what if we wanted to execute in
the context of another user?

40
00:02:36.653 --> 00:02:40.310
Is there a way to request
elevated permissions?

41
00:02:40.310 --> 00:02:44.704
I don't know, there isn't a way
that I know of Deno to do that, but

42
00:02:44.704 --> 00:02:49.101
I'm not exactly sure if that's
something that Deno should do, or

43
00:02:49.101 --> 00:02:51.870
if that's something that you should do.

44
00:02:54.600 --> 00:02:58.559
I guess I'm a little fuzzy on the use
case of Deno saying, hey, I know

45
00:02:58.559 --> 00:03:03.580
you're running as this user, but I wanna
run as a different user, can I do that?

46
00:03:03.580 --> 00:03:05.634
It seems like the answer to that would be,

47
00:03:05.634 --> 00:03:09.588
no, you just run Deno as that other user,
but perhaps I'm missing something.

48
00:03:09.588 --> 00:03:14.820
&gt;&gt; [INAUDIBLE]
&gt;&gt; Good question though.

49
00:03:14.820 --> 00:03:16.560
I bet there is a use case for
wanting to do that.

