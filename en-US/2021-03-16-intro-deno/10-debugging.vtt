WEBVTT

1
00:00:00.500 --> 00:00:02.090
So let's talk about debugging apps.

2
00:00:02.090 --> 00:00:03.877
Of course, you can't write or

3
00:00:03.877 --> 00:00:07.050
be functional with an application
that you can debug.

4
00:00:07.050 --> 00:00:08.740
And so you're gonna wanna do that.

5
00:00:08.740 --> 00:00:11.286
So let's go ahead and paste this in.

6
00:00:11.286 --> 00:00:16.433
And again, it's gonna be mad at us
over that isolated modules issue which

7
00:00:16.433 --> 00:00:21.346
we can get rid of by saying export
this right here and that will go away.

8
00:00:21.346 --> 00:00:26.277
All right, so in this case,
we're just gonna read in an argument and

9
00:00:26.277 --> 00:00:27.476
write that out.

10
00:00:27.476 --> 00:00:31.150
So let's see how we can debug this.

11
00:00:31.150 --> 00:00:34.776
In Dino, I'm gonna go ahead and quit this,

12
00:00:34.776 --> 00:00:40.230
there is a we could run and
we can pass in this inspect flag.

13
00:00:40.230 --> 00:00:42.370
So we do inspect app.ts.

14
00:00:42.370 --> 00:00:44.376
This will run attaches the debugger, but

15
00:00:44.376 --> 00:00:47.874
then it just immediately exits because
the program runs to completion,

16
00:00:47.874 --> 00:00:52.640
we now have an opportunity to set a break
point anywhere so not terribly useful.

17
00:00:52.640 --> 00:00:57.797
But if we do inspect -BRK,
which I think is the same convention

18
00:00:57.797 --> 00:01:03.390
that node uses, then it will stop,
it will actually stop.

19
00:01:03.390 --> 00:01:05.720
And it's just waiting for
us to connect debugger.

20
00:01:05.720 --> 00:01:08.920
So how do we connect the debugger?

21
00:01:08.920 --> 00:01:12.710
The one way to do it is in
a browser such as Edge or Chrome,

22
00:01:12.710 --> 00:01:17.400
both will work because
they're both chromium based.

23
00:01:17.400 --> 00:01:20.697
If you type in Edge, or actually, for

24
00:01:20.697 --> 00:01:25.643
those of you on Chrome, and
this will work in Edge too, so

25
00:01:25.643 --> 00:01:31.850
we'll just do this inspect Edge just
automatically maps this to Edge.

26
00:01:32.970 --> 00:01:38.500
This is the inspector that comes with
Chrome or chromium powered browsers.

27
00:01:38.500 --> 00:01:43.336
And so what you'll see here in
a minute is it should detect that

28
00:01:43.336 --> 00:01:45.759
we have a process running now.

29
00:01:45.759 --> 00:01:51.016
I wanna be forthright here and say that
I have not been able to get this to work

30
00:01:51.016 --> 00:01:56.022
with the WSL because It's looking for
a file that's in this location,

31
00:01:56.022 --> 00:01:59.040
and this is inside of
the WSL on my machine.

32
00:01:59.040 --> 00:02:01.636
If you're not familiar with
the windows subsystem,

33
00:02:01.636 --> 00:02:04.990
it's just a different file system
that's also running on Windows.

34
00:02:04.990 --> 00:02:08.562
And so what I've had to do to make
this work is actually open and

35
00:02:08.562 --> 00:02:11.601
run this on Windows,
to use the browser debugging.

36
00:02:11.601 --> 00:02:15.670
So what I wanna do here is I'm just
gonna reopen this folder in Windows.

37
00:02:15.670 --> 00:02:18.132
And then you'll notice that
we'll be in PowerShell.

38
00:02:18.132 --> 00:02:19.400
My terminal will be different.

39
00:02:19.400 --> 00:02:20.780
So we're in PowerShell here.

40
00:02:20.780 --> 00:02:22.745
So let's try this again.
Let's just do Dino run.

41
00:02:22.745 --> 00:02:30.283
We're gonna pass and inspect BRK oops,
let's move into exercise.

42
00:02:30.283 --> 00:02:32.127
Dino run.

43
00:02:32.127 --> 00:02:35.560
Collapse this, collapse, no,
I can't do that, all right.

44
00:02:36.820 --> 00:02:42.118
Then we add dino run --, jeez,
having all kinds of problems.

45
00:02:42.118 --> 00:02:46.623
Dino run, inspect-brk app.ts,

46
00:02:46.623 --> 00:02:50.834
I think that's all we need to do.

47
00:02:50.834 --> 00:02:54.809
And then I'm gonna pass in
world which is the value.

48
00:02:54.809 --> 00:02:58.458
They're gonna check it, and
then it should start it and

49
00:02:58.458 --> 00:03:01.186
start the debugger, really something.

50
00:03:04.012 --> 00:03:05.916
Just do this.

51
00:03:05.916 --> 00:03:08.874
By the way, did you know you can
just upgrade Dino with Dino upgrade?

52
00:03:08.874 --> 00:03:10.007
That's pretty nice.

53
00:03:10.007 --> 00:03:13.547
If you've used node before, you have to
remember, you need like a version manager?

54
00:03:13.547 --> 00:03:15.446
Don't need that with Dino, you just do it.

55
00:03:15.446 --> 00:03:16.446
So let's try that again.

56
00:03:22.148 --> 00:03:26.696
All right, so
the debugger is now listening, cool.

57
00:03:26.696 --> 00:03:29.529
So let's go back to the browser and
try this again.

58
00:03:32.403 --> 00:03:35.682
So this time we'll do edge inspect.

59
00:03:39.086 --> 00:03:42.985
And wait for it to detect our
running process and inspect.

60
00:03:45.122 --> 00:03:49.142
And now you can see we're broken inside
and we can actually see the value, and so

61
00:03:49.142 --> 00:03:52.802
if we look at Dino ARDS, do we not pass
one and we didn't pass an Oregon but

62
00:03:52.802 --> 00:03:54.422
normally we'd see that here and

63
00:03:54.422 --> 00:03:56.950
we can step over and
to completion of the program.

64
00:03:58.380 --> 00:04:02.775
Now, you probably aren't going
to debug with a browser,

65
00:04:02.775 --> 00:04:07.362
you can but the better way is to
do it with Visual Studio code.

66
00:04:07.362 --> 00:04:14.095
So let's reopen this in the WSL no.

67
00:04:14.095 --> 00:04:19.571
Try that again, reopen folder in WSL.

68
00:04:19.571 --> 00:04:23.333
So what we wanna do instead what we'd be
better is if we could like set a break

69
00:04:23.333 --> 00:04:27.363
point here like that, and debug inside of
Visual Studio code and we can do that.

70
00:04:27.363 --> 00:04:33.726
So to do that, what we need to do is we
need to go to our debug view in VS code,

71
00:04:33.726 --> 00:04:37.835
which is this little bug
with a play button, and

72
00:04:37.835 --> 00:04:44.750
then we need to create a launch.Json
file which tells it how to attach.

73
00:04:44.750 --> 00:04:48.477
Now fortunately, there's a Dino
option already in the list, so

74
00:04:48.477 --> 00:04:52.430
we don't have to figure this out
it's gonna preconfigure it for us.

75
00:04:52.430 --> 00:04:57.806
So I'm gonna click on this, and
it's going to create the launch.Json file,

76
00:04:57.806 --> 00:05:00.094
and then we'll take a look at it.

77
00:05:00.094 --> 00:05:05.079
So what we've got here is this
program is gonna run, and

78
00:05:05.079 --> 00:05:08.685
we need to point it at the right file, and

79
00:05:08.685 --> 00:05:14.962
our file is exercise app.ts, so
let's do that, exerciseapp.ts.

80
00:05:14.962 --> 00:05:18.560
And then the rest of this stuff,
we can just sort of leave that the same.

81
00:05:18.560 --> 00:05:23.470
The only thing is we wanna pass in some
arcs to this thing, so let's do that.

82
00:05:24.680 --> 00:05:29.361
Cuz it's the program is looking for
some arcs I'm just gonna pass in world.

83
00:05:29.361 --> 00:05:33.457
If we pass them in as runtime arcs,
it will get passed before the filename and

84
00:05:33.457 --> 00:05:37.810
then as we discussed, it wouldn't work,
arcs have to come after the file name.

85
00:05:40.590 --> 00:05:44.364
Okay, so in theory now we should
be able to just come here and

86
00:05:44.364 --> 00:05:45.880
click the play button.

87
00:05:45.880 --> 00:05:50.665
And we have now have this launch Dino
which comes from this name right here, and

88
00:05:50.665 --> 00:05:52.636
it should attach the debugger.

89
00:05:52.636 --> 00:05:53.740
So let's see.

90
00:05:55.000 --> 00:05:56.927
So we're gonna run, okay?

91
00:05:56.927 --> 00:05:57.430
Perfect.

92
00:05:57.430 --> 00:06:02.030
And then let's look at ARDS and
there's our ard it got passed in.

93
00:06:02.030 --> 00:06:07.488
And then if we continue on, console log,
and then we go back into the Dino code,

94
00:06:07.488 --> 00:06:12.060
and then things exit, but
we never actually got to see the output.

95
00:06:12.060 --> 00:06:13.690
Why is that?

96
00:06:13.690 --> 00:06:16.156
Well, that's because by default,

97
00:06:16.156 --> 00:06:20.140
VS code outputs to an internal
console that you can't see.

98
00:06:21.220 --> 00:06:26.811
And so you can change that by
coming to the launch.Json,

99
00:06:26.811 --> 00:06:30.550
let's collapse this terminal here.

100
00:06:30.550 --> 00:06:34.503
And we can say,
come here we can say console,

101
00:06:34.503 --> 00:06:38.785
I think we can change it
to integrated terminal.

102
00:06:38.785 --> 00:06:42.320
So by default, it's internal console,
which is when you can't see, so

103
00:06:42.320 --> 00:06:44.670
we're gonna change it
to integrated terminal.

104
00:06:45.740 --> 00:06:47.148
And then we're gonna run it again.

105
00:06:47.148 --> 00:06:49.951
So let's do it again.

106
00:06:49.951 --> 00:06:51.930
Let's make sure our break
point is still there.

107
00:06:54.470 --> 00:06:55.108
Right, it is.

108
00:06:55.108 --> 00:07:00.068
So let's go ahead and run it again,
and this time look, you see it,

109
00:07:00.068 --> 00:07:02.750
you can see it running.

110
00:07:02.750 --> 00:07:07.420
We're gonna step over, console log and we
can now see it here down in the console.

111
00:07:08.800 --> 00:07:13.457
So, that's how we debug apps with,
Dino apps with Visual Studio Code.

112
00:07:13.457 --> 00:07:17.514
It's pretty easy,
it's pretty much set it and forget it.

113
00:07:17.514 --> 00:07:19.950
It creates the launch configuration for
you.

114
00:07:19.950 --> 00:07:23.456
Not much that you have to do there
besides pointed out the correct file,

115
00:07:23.456 --> 00:07:26.650
the correct entry point for
your project, click play.

116
00:07:26.650 --> 00:07:27.432
We'll do this later on.

117
00:07:27.432 --> 00:07:29.580
We'll look at more complex
application as well.

