WEBVTT

1
00:00:00.050 --> 00:00:03.638
&gt;&gt; Kyle Simpson: So we did define
that cacheLoggedOutFiles function,

2
00:00:03.638 --> 00:00:05.981
but we gotta call it in a few places.

3
00:00:05.981 --> 00:00:08.670
Otherwise, it's just gonna sit there and
do nothing.

4
00:00:08.670 --> 00:00:10.020
So where do we want to call it?

5
00:00:10.020 --> 00:00:13.337
Well, we definitely wanna
call it anytime we start up.

6
00:00:13.337 --> 00:00:14.545
So I'm gonna to put it here.

7
00:00:22.922 --> 00:00:27.206
&gt;&gt; Kyle Simpson: You notice that I'm
calling it without passing the true to it.

8
00:00:27.206 --> 00:00:31.833
So basically here I'm just saying, hey, in
a good faith effort, if there's anything

9
00:00:31.833 --> 00:00:35.287
not in the cache, just try to go ahead and
prime the cache with it.

10
00:00:35.287 --> 00:00:37.507
And if you tell me we
restarted the service worker,

11
00:00:37.507 --> 00:00:41.275
if there's anything missing from the cache
get it, but if it's already in the cache,

12
00:00:41.275 --> 00:00:42.322
just ignore it, okay?

13
00:00:42.322 --> 00:00:45.515
But there's a time when I
definitely want to forcibly get

14
00:00:45.515 --> 00:00:47.388
it into the cache no matter what.

15
00:00:47.388 --> 00:00:51.420
And that is when I have activated
my service worker the first time.

16
00:00:51.420 --> 00:00:56.537
So in my onActivate call, we definitely

17
00:00:56.537 --> 00:01:01.358
want to also pull in those resources.

18
00:01:01.358 --> 00:01:04.010
And here, when we do

19
00:01:04.010 --> 00:01:09.715
cacheLoggedOutFiles,
&gt;&gt; Kyle Simpson: We’re

20
00:01:09.715 --> 00:01:12.206
gonna actually pass in true here.

21
00:01:12.206 --> 00:01:14.477
I have a little stylistic
thing that I like to do.

22
00:01:14.477 --> 00:01:16.887
Any time I’m passing Booleans,

23
00:01:16.887 --> 00:01:21.462
I always put an inline comment
with the name of that parameter.

24
00:01:21.462 --> 00:01:23.815
So that's just a little
stylistic thing I like to do.

25
00:01:26.519 --> 00:01:29.023
&gt;&gt; Kyle Simpson: But this tells it, hey,
I don't care whether it's in the cache or

26
00:01:29.023 --> 00:01:30.517
not, definitely go check the server.

27
00:01:30.517 --> 00:01:32.929
Make sure to load that
information from the server

28
00:01:43.219 --> 00:01:43.941
&gt;&gt; Kyle Simpson: Okay, well,

29
00:01:43.941 --> 00:01:47.436
this gives us an opportunity now to
show you how we can work with this,

30
00:01:47.436 --> 00:01:50.893
because we're not gonna update
the version of our service worker.

31
00:01:50.893 --> 00:01:54.651
And even though we've updated
that service worker code,

32
00:01:54.651 --> 00:01:59.482
before you reload anything, I wanna
show you how you can actually forcibly

33
00:01:59.482 --> 00:02:03.947
make sure that a service worker
regoes through its install process.

34
00:02:03.947 --> 00:02:09.034
Step number one, this is best
practice that I've determined.

35
00:02:09.034 --> 00:02:13.880
You might think, I can just immediately
click the Unregister or click the Update.

36
00:02:13.880 --> 00:02:18.736
I have found weirdnesses and quirks with
that, so what I always do, sort of like

37
00:02:18.736 --> 00:02:23.749
when you do a Shift+Refresh, my sort of
habit here is to stop the service worker.

38
00:02:23.749 --> 00:02:28.435
That way it's not running, it's not
consuming any resources, Unregister it.

39
00:02:28.435 --> 00:02:30.403
Now it'll say deleted.

40
00:02:30.403 --> 00:02:32.980
So the next time that we run,
it’ll load a new one and

41
00:02:32.980 --> 00:02:34.631
it’ll have this one down below.

42
00:02:34.631 --> 00:02:38.758
So then you end up with this really long
list of all the service workers you’ve

43
00:02:38.758 --> 00:02:39.909
ever unregistered.

44
00:02:39.909 --> 00:02:43.849
But anyway, let’s start everything
back over like we were doing before.

45
00:02:43.849 --> 00:02:47.675
Let’s,
&gt;&gt; Kyle Simpson: check our cache,

46
00:02:47.675 --> 00:02:49.047
storage is empty.

47
00:02:49.047 --> 00:02:52.931
Let’s go to our Console tab and
then come back to the page,

48
00:02:52.931 --> 00:02:55.326
we’ll do another navigate event.

49
00:02:57.419 --> 00:03:02.475
&gt;&gt; Kyle Simpson: Here we have installed
the v3 of our service worker.

50
00:03:02.475 --> 00:03:06.309
In our Network tab, you see all
these extra files being loaded.

51
00:03:06.309 --> 00:03:10.075
And you'll notice this little icon here,
and also the initiator,

52
00:03:10.075 --> 00:03:14.714
it tells us that it's our service worker
that's initiating all of those fetches.

53
00:03:14.714 --> 00:03:22.307
And then we come to our Application tab,
&gt;&gt; Kyle Simpson: Did something fail?

54
00:03:22.307 --> 00:03:25.235
How did it ask for all those and
not stick them in?

55
00:03:25.235 --> 00:03:26.219
That's interesting.

56
00:03:29.987 --> 00:03:34.330
&gt;&gt; Kyle Simpson: I think we
have a typo in the styles name.

57
00:03:34.330 --> 00:03:37.719
But why did it not put those in the cache?

58
00:03:41.824 --> 00:03:43.174
&gt;&gt; Kyle Simpson: Let's
double check the code.

59
00:03:43.174 --> 00:03:48.244
&gt;&gt; Speaker 2: I don't think you return
a response in your map, if (res.ok).

60
00:03:51.077 --> 00:03:52.736
&gt;&gt; Speaker 2: Does that matter at all?

61
00:03:52.736 --> 00:03:54.819
&gt;&gt; Kyle Simpson: It shouldn't because
we're putting it into the cache.

62
00:03:54.819 --> 00:03:58.100
All we're trying to do is
get these promises to wait.

63
00:03:58.100 --> 00:04:00.910
These async function promises to wait.

64
00:04:00.910 --> 00:04:08.320
Okay, I think we've had pointed
out the error is on line 73 here.

65
00:04:08.320 --> 00:04:14.018
Instead of saying caches.match,
it was supposed to be caches.open.

66
00:04:14.018 --> 00:04:18.497
We use caches.matchAll, but
when we want to open a cache to use it,

67
00:04:18.497 --> 00:04:20.077
we call caches.open.

68
00:04:20.077 --> 00:04:25.739
So I've also corrected
the CSS file to be style.css

69
00:04:25.739 --> 00:04:32.311
instead of styles.css, so
hopefully now, let's try it.

70
00:04:38.186 --> 00:04:41.487
&gt;&gt; Kyle Simpson: Okay,
I've unregistered my service worker,

71
00:04:41.487 --> 00:04:44.298
let's clear my Console and my Network.

72
00:04:44.298 --> 00:04:47.637
And we will navigate again.

73
00:04:47.637 --> 00:04:50.929
We see my service worker being activated.

74
00:04:50.929 --> 00:04:54.098
We see my network requesting those things.

75
00:04:54.098 --> 00:04:57.791
And, now we have items
in our cache storage.

76
00:04:57.791 --> 00:05:01.175
So if you see, we have ramblings-3 here.

77
00:05:01.175 --> 00:05:04.450
That is our cache entry
that we've created.

78
00:05:04.450 --> 00:05:06.741
You see all the URLs that we've asked for.

79
00:05:06.741 --> 00:05:10.657
And quite helpfully, you can click on
them and you can actually preview them,

80
00:05:10.657 --> 00:05:14.690
or see the headers that they were
responded with, if you need to.

81
00:05:14.690 --> 00:05:19.310
So we can verify that we have
the correct version of any file.

82
00:05:19.310 --> 00:05:22.983
In fact, if you're really getting
very low-level in your debugging,

83
00:05:22.983 --> 00:05:25.825
you can actually delete
individual entries from here.

84
00:05:25.825 --> 00:05:29.393
I don't recommend doing that very often,
just blow away the whole cache and

85
00:05:29.393 --> 00:05:30.020
reload it.

86
00:05:30.020 --> 00:05:33.920
But if you really just need to just
reload one file, you can do that.

87
00:05:34.980 --> 00:05:40.478
Or you can blow away the whole thing by
right-clicking and deleting over there.

88
00:05:40.478 --> 00:05:44.190
So this is a good way of verifying that
that we have loaded up all the stuff into

89
00:05:44.190 --> 00:05:45.094
the cache.

90
00:05:45.094 --> 00:05:50.089
That's a big step for us being able to go
offline, is now we have all that data and

91
00:05:50.089 --> 00:05:54.342
we can start intercepting all of
those requests if we are offline and

92
00:05:54.342 --> 00:05:56.149
responding with our cache.

