WEBVTT

1
00:00:00.100 --> 00:00:04.924
&gt;&gt; Kyle Simpson: The site that I've built
for you, and I use air quotes with that,

2
00:00:04.924 --> 00:00:08.255
is a very, very simple blog,
sort of a site,

3
00:00:08.255 --> 00:00:11.174
that has a couple of static pages on it.

4
00:00:11.174 --> 00:00:16.248
Couple of images, the CSS request,
but it also has a feature where you

5
00:00:16.248 --> 00:00:21.496
can write a blog post, which just
saves some HTML to a file, basically.

6
00:00:21.496 --> 00:00:27.595
So what I'm gonna do is first start
up the finished version of that,

7
00:00:27.595 --> 00:00:33.166
just to kind of click around and
show you how all of that works.

8
00:00:33.166 --> 00:00:35.480
Or not the finished version,
rather, the exercise version.

9
00:00:35.480 --> 00:00:40.464
So if you go and
start your server, you just type,

10
00:00:40.464 --> 00:00:46.412
in the sw-exercise directory,
type in node server.js.

11
00:00:46.412 --> 00:00:50.226
And again, it's gonna to be on port 8049.

12
00:00:50.226 --> 00:00:57.416
And so we're gonna switch over
to our browser and try 8049.

13
00:00:57.416 --> 00:01:01.849
And you'll notice it looks very similar to
the other one because that is the entirety

14
00:01:01.849 --> 00:01:04.860
of the CSS that I was willing
to dedicate to this project.

15
00:01:04.860 --> 00:01:08.259
So I reused it for this project [LAUGH].

16
00:01:08.259 --> 00:01:10.819
But you'll notice it loads a little image,
and

17
00:01:10.819 --> 00:01:14.900
it's gonna have a couple of pages
that you can click around on.

18
00:01:14.900 --> 00:01:21.230
It's not linked to, but
this does support being able to log in.

19
00:01:21.230 --> 00:01:25.190
So if you knew that you could go,
or you had bookmarked that URL,

20
00:01:25.190 --> 00:01:27.250
you can go to a login page.

21
00:01:27.250 --> 00:01:31.150
The username and
password are hardcoded in the server code,

22
00:01:31.150 --> 00:01:35.610
which is a terrible idea but
this is super hacky.

23
00:01:35.610 --> 00:01:43.043
The username is admin and the password,
all lowercase, all together, is changeme.

24
00:01:46.384 --> 00:01:48.339
&gt;&gt; Kyle Simpson: And
if you click the Login button,

25
00:01:48.339 --> 00:01:51.922
this is the only thing you can do
while logged in, is add a post.

26
00:01:51.922 --> 00:01:55.532
So there's no admin page or
whatever, this is real barebones.

27
00:01:55.532 --> 00:01:59.383
But you can actually add a blog post, so

28
00:01:59.383 --> 00:02:03.714
I'm gonna say, this is my first blog post.

29
00:02:03.714 --> 00:02:08.673
And then you have to actually
type some HTML here, so

30
00:02:08.673 --> 00:02:14.769
I'm gonna do a paragraph tag,
this is pretty cool, isn't it?

31
00:02:14.769 --> 00:02:19.507
And we'll throw in another paragraph

32
00:02:19.507 --> 00:02:24.103
that says, let's get to some code.

33
00:02:24.103 --> 00:02:30.381
Okay, and then you click Add Post,
and now you have a blog post.

34
00:02:30.381 --> 00:02:34.890
This is, you'll notice the URL there,
it's a post with that ID.

35
00:02:34.890 --> 00:02:38.993
And then if you go back to the home page,
that post is now listed.

36
00:02:38.993 --> 00:02:42.101
So if you add more posts to your thing,

37
00:02:42.101 --> 00:02:46.482
they're gonna be listed in
most recent first order.

38
00:02:46.482 --> 00:02:48.890
And then you can click on
those to see your blog posts.

39
00:02:48.890 --> 00:02:52.775
So that's the entirety of
the functionality of this app,

40
00:02:52.775 --> 00:02:54.449
it's not mind blowing.

41
00:02:54.449 --> 00:02:57.491
By the way, once you're logged in,

42
00:02:57.491 --> 00:03:02.214
if you go back to login,
it'll redirect you to add post.

43
00:03:02.214 --> 00:03:06.570
Unless your session has expired, in which
case then you have to log in again.

44
00:03:06.570 --> 00:03:10.430
Or you can actually click log out,
if you really wanna log out, and

45
00:03:10.430 --> 00:03:12.660
now you would have to log back in.

46
00:03:12.660 --> 00:03:15.741
So that's the basic bare
bones of this site.

47
00:03:15.741 --> 00:03:21.126
And what we wanna do is build and
add a service worker to this site.

48
00:03:21.126 --> 00:03:26.056
It's not an app, it's a site, and
we want this site to act as if it's

49
00:03:26.056 --> 00:03:30.731
gonna continue to behave as closely
as possible in an offline, or

50
00:03:30.731 --> 00:03:36.670
sort of bad network scenario, as it
does when we're in the online scenario.

51
00:03:36.670 --> 00:03:41.280
And by the way, there's at least two
different ways that you could think about

52
00:03:41.280 --> 00:03:45.220
being offline or
being in a bad network scenario.

53
00:03:45.220 --> 00:03:48.676
One is that the user's
device is disconnected.

54
00:03:48.676 --> 00:03:52.334
The other is that, for some reason,
they're online, but for some reason,

55
00:03:52.334 --> 00:03:53.865
they can't get to your server.

56
00:03:53.865 --> 00:03:58.433
Either there's a bad problem with routing
on the internet or your server is down.

57
00:03:58.433 --> 00:04:03.190
But in both cases, they really shouldn't
be presented with the blank screen of

58
00:04:03.190 --> 00:04:06.390
death, they really should
continue to see the site.

59
00:04:06.390 --> 00:04:09.050
At least as it was the last
time they loaded that.

60
00:04:09.050 --> 00:04:12.366
So that's our goal, is to try to
get this as close as possible.

61
00:04:12.366 --> 00:04:16.320
It's not 100%, but we can get a lot
better than what it currently is.

62
00:04:16.320 --> 00:04:19.111
To show you the blank screen of death,

63
00:04:19.111 --> 00:04:23.822
I'm gonna show you that in network
tab of your developer tools,

64
00:04:23.822 --> 00:04:28.199
you can simulate an offline
scenario by clicking offline.

65
00:04:28.199 --> 00:04:30.854
That's under the network tab
in Chrome developer tools,

66
00:04:30.854 --> 00:04:33.670
and there's a checkbox
there that says offline.

67
00:04:33.670 --> 00:04:38.690
And now, you see this little icon there
that's let you know that it is turned off.

68
00:04:38.690 --> 00:04:40.323
So if we come back here, and

69
00:04:40.323 --> 00:04:44.315
we try to click on a page,
now we get the white screen of death.

70
00:04:44.315 --> 00:04:47.862
Right, because this is what people
experience whenever they don't have

71
00:04:47.862 --> 00:04:48.440
Internet.

72
00:04:48.440 --> 00:04:52.711
We come back here and turn the Internet
back on, we refresh the page, and

73
00:04:52.711 --> 00:04:54.340
now the page is back.

74
00:04:54.340 --> 00:04:57.120
That's one scenario for that dying.

75
00:04:57.120 --> 00:05:01.900
The other scenario for it dying is if
the server is somehow unavailable.

76
00:05:01.900 --> 00:05:03.410
So we're gonna do both of these,
by the way.

77
00:05:03.410 --> 00:05:07.700
As we go through the exercise, we're
both gonna toggle the offline mode, and

78
00:05:07.700 --> 00:05:09.110
then we're gonna kill our server.

79
00:05:09.110 --> 00:05:12.310
And we want our site to continue
to behave in both of those.

80
00:05:12.310 --> 00:05:15.588
And we need to do code slightly
differently depending upon those

81
00:05:15.588 --> 00:05:16.261
scenarios.

82
00:05:16.261 --> 00:05:21.405
So we'll talk through all of these things,
but now when I come back to the browser,

83
00:05:21.405 --> 00:05:24.214
I ought to be able to see this page and
not die.

84
00:05:24.214 --> 00:05:27.851
And we got a slightly different kind of
error page in Chrome which has always

85
00:05:27.851 --> 00:05:28.560
confused me.

86
00:05:28.560 --> 00:05:30.177
I don't know why they have
different error pages.

87
00:05:30.177 --> 00:05:35.410
But anyway, that's the point, is that
we want to make that stuff not happen.

88
00:05:35.410 --> 00:05:38.470
And the way we're gonna go about
that is through service workers.

