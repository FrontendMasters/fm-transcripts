WEBVTT

1
00:00:00.000 --> 00:00:02.990
&gt;&gt; Kyle Simpson: The first thing that
we're gonna do is actually not in

2
00:00:02.990 --> 00:00:08.840
a service worker, we're gonna start
adding some code so that our blog page

3
00:00:08.840 --> 00:00:13.660
is able to detect when the user
has gone into an offline mode.

4
00:00:13.660 --> 00:00:17.470
And to indicate to the user that
they are in an offline mode.

5
00:00:17.470 --> 00:00:21.850
And part of the reason for that is
from a user experience perspective.

6
00:00:21.850 --> 00:00:25.920
Users want to know what to expect when
they're about to click a button or

7
00:00:25.920 --> 00:00:26.880
do something.

8
00:00:26.880 --> 00:00:30.480
They don't wanna click a button and
then be like, well, thanks for telling me.

9
00:00:30.480 --> 00:00:35.100
They would like to be able to know in
advance that something happened or

10
00:00:35.100 --> 00:00:36.600
that something is gonna happen.

11
00:00:36.600 --> 00:00:39.510
So giving them just some
sort of visual indication,

12
00:00:39.510 --> 00:00:41.350
it doesn't have to be
blaring in their face but

13
00:00:41.350 --> 00:00:45.250
giving them a visual indication, what
you're about to do might not work or what

14
00:00:45.250 --> 00:00:48.810
you're about to do may work differently,
that's a good friendly way of doing that.

15
00:00:48.810 --> 00:00:52.300
So that's our first task before we even
do the service worker, we just want for

16
00:00:52.300 --> 00:00:55.560
this site to be able to figure out,
am I online or not.

17
00:00:55.560 --> 00:00:58.090
And there's an API for that, and
there's some events for that.

18
00:00:58.090 --> 00:01:00.100
So that's our first task.

19
00:01:00.100 --> 00:01:03.404
So what I want you to do is
switch over to your editor.

20
00:01:03.404 --> 00:01:08.210
And I open up again,
we're in the SW exercise directory,

21
00:01:08.210 --> 00:01:12.650
in the web/JS directory,
there's a couple of JavaScript files,

22
00:01:12.650 --> 00:01:17.350
there's blog.JS and SW.JS,
that's going to be our service worker.

23
00:01:17.350 --> 00:01:19.830
So we're going to be working
heavily with these two.

24
00:01:19.830 --> 00:01:23.420
Later in the exercise we'll work through a
couple of other files, but for right now,

25
00:01:23.420 --> 00:01:25.959
we're gonna mostly focus our
time on these two files.

26
00:01:26.980 --> 00:01:30.900
I already have indicated, you can see
I already have indicated that there's

27
00:01:30.900 --> 00:01:34.490
an offline icon already in the page,
it's just not being used.

28
00:01:34.490 --> 00:01:38.030
So we're gonna toggle that to
visible whenever we've detected

29
00:01:38.030 --> 00:01:40.530
that they are offline.

30
00:01:40.530 --> 00:01:42.260
So the first thing we need to know is,

31
00:01:42.260 --> 00:01:46.420
when we first load the page, generally
speaking we are online at that point but

32
00:01:46.420 --> 00:01:48.780
when we first load the page we
want to know are we online.

33
00:01:48.780 --> 00:01:53.300
So I'm gonna make a variable
called isOnline similar to this

34
00:01:53.300 --> 00:01:58.390
isLoggedIn which i'll explain in just
a moment, but this one is going to look

35
00:01:58.390 --> 00:02:03.250
at the built-in detector for

36
00:02:03.250 --> 00:02:07.680
online status, so there is
a property on the navigator object.

37
00:02:07.680 --> 00:02:09.140
So we're going to say if and

38
00:02:09.140 --> 00:02:12.410
we need to feature detect whether
this property is even available.

39
00:02:12.410 --> 00:02:17.240
If on capital L line it's weird if on

40
00:02:17.240 --> 00:02:22.310
capital L line in navigator that lets us
know that this browser supports that API.

41
00:02:22.310 --> 00:02:24.190
And pretty much all of them
that you'll encounter do,

42
00:02:24.190 --> 00:02:27.040
but it's always a good idea to
just be a little bit careful.

43
00:02:27.040 --> 00:02:30.890
If it is available,
then we wanna use the status of that.

44
00:02:30.890 --> 00:02:36.440
So we're gonna say, navigator.on,
and don't forget the capital L line.

45
00:02:36.440 --> 00:02:40.870
And otherwise, let's just assume true,
because if this isn't on,

46
00:02:40.870 --> 00:02:46.180
we'll just assume that you probably
loaded this in an online scenario, okay?

47
00:02:46.180 --> 00:02:52.490
So then what we wanna do is detect or
based upon that detection,

48
00:02:52.490 --> 00:02:57.120
we want to flip the icon visible or not.

49
00:02:57.120 --> 00:03:00.420
So basically the icon
starts out invisible, and

50
00:03:00.420 --> 00:03:04.232
if we are not online at this
moment at the page load,

51
00:03:04.232 --> 00:03:08.620
when [INAUDIBLE] loaded his file here,
we want to actually make that visible.

52
00:03:08.620 --> 00:03:14.460
So I'm going to say if not,
isOnline at this exact moment,

53
00:03:14.460 --> 00:03:20.200
let's start out that icon in
the state of being offline.

54
00:03:20.200 --> 00:03:23.124
So we're going to say,

55
00:03:23.124 --> 00:03:28.690
offlineIcon.classList.remove hidden.

56
00:03:30.190 --> 00:03:33.720
Hidden is the name of the class if
you inspect the HTML you see this but

57
00:03:33.720 --> 00:03:36.600
hidden is the name of the class that
is currently making it invisible.

58
00:03:36.600 --> 00:03:39.920
So I'm going to remove that class name,
thereby making it visible,

59
00:03:42.290 --> 00:03:47.410
and then we want to detect changes to it.

60
00:03:47.410 --> 00:03:51.312
So we don't wanna just set-up a timer and
pull the navigator.online.

61
00:03:51.312 --> 00:03:54.430
We wanna set-up listeners that listen for

62
00:03:54.430 --> 00:03:59.420
that status changing, and it turns out
that there are two events that fire.

63
00:03:59.420 --> 00:04:04.530
So we're gonna do
window.addEventListener and

64
00:04:04.530 --> 00:04:08.056
the event that we want to listen for

65
00:04:08.056 --> 00:04:12.200
is if we've gone into the online state.

66
00:04:17.563 --> 00:04:20.643
&gt;&gt; Kyle Simpson: We're gonna assume that
if we've gone into the online state it was

67
00:04:20.643 --> 00:04:22.956
because we were previously
in the offline state.

68
00:04:22.956 --> 00:04:26.018
So we want to say,

69
00:04:26.018 --> 00:04:33.175
offlineIcon.classList.add hidden.

70
00:04:39.096 --> 00:04:43.845
&gt;&gt; Kyle Simpson: And then we wanna
change our Boolean variable to true,

71
00:04:43.845 --> 00:04:45.917
isOnline equals true.

72
00:04:58.450 --> 00:05:02.583
&gt;&gt; Kyle Simpson: The other
event is called offline.

73
00:05:02.583 --> 00:05:04.780
So we're gonna listen for that event.

74
00:05:06.450 --> 00:05:13.422
And do the reverse,
we will offLineIcon.classList.remove

75
00:05:13.422 --> 00:05:17.112
hidden and isOnLine equals false

76
00:05:30.522 --> 00:05:33.075
&gt;&gt; Speaker 2: Is this is supposed to
be online inNavigator or isNavigator?

77
00:05:33.075 --> 00:05:33.632
&gt;&gt; Kyle Simpson: In.

78
00:05:33.632 --> 00:05:34.218
&gt;&gt; Speaker 3: In.

79
00:05:34.218 --> 00:05:36.310
&gt;&gt; Speaker 2: Sorry about that, in, right.

80
00:05:36.310 --> 00:05:37.190
This, don't worry.

81
00:05:37.190 --> 00:05:38.050
&gt;&gt; Kyle Simpson: Sorry, typo.

82
00:05:38.050 --> 00:05:38.720
&gt;&gt; Speaker 2: I was like, whoa.

83
00:05:38.720 --> 00:05:41.000
&gt;&gt; Kyle Simpson: We would have found
that in just a moment when we ran it,

84
00:05:41.000 --> 00:05:42.290
we would have goten a syntax error.

85
00:05:43.550 --> 00:05:48.030
Okay, let's try it in our browser.

86
00:05:48.030 --> 00:05:52.810
When we refresh we shouldn't see anything
different but now when we switch over here

87
00:05:52.810 --> 00:05:58.350
and click the offline,
we now see that is icon is visible.

88
00:05:58.350 --> 00:06:02.300
That's the icon telling the user,
hey, you're not connected right now.

89
00:06:02.300 --> 00:06:06.120
So just be aware that
things might be broken.

90
00:06:06.120 --> 00:06:08.530
If you click on something,
it may or may not work.

91
00:06:08.530 --> 00:06:11.830
Now, we're gonna try to make that as
graceful as possible, but obviously,

92
00:06:11.830 --> 00:06:13.900
right now, if you were to click on
something, everything would fail.

93
00:06:15.330 --> 00:06:20.150
And then when we toggle it back,
now the icon comes on.

94
00:06:20.150 --> 00:06:24.230
We should point out this is only
detecting the user's connectivity status.

95
00:06:24.230 --> 00:06:29.040
It's not detecting whether or
not they have a continuous connection to

96
00:06:29.040 --> 00:06:34.350
the server, and we'll be able to load
things, you could probably fairly

97
00:06:34.350 --> 00:06:37.980
straightforwardly set something like that
up with like a web socket that stayed

98
00:06:37.980 --> 00:06:42.560
connected, and then if the web socket
ever disconnects then show the icon.

99
00:06:42.560 --> 00:06:45.850
That would generally not be something I
would do with a static webpage, that'd be

100
00:06:45.850 --> 00:06:49.970
something I did with an application
that really needed live connection,

101
00:06:49.970 --> 00:06:53.140
like maybe it's getting live
stock ticker updates and

102
00:06:53.140 --> 00:06:59.320
it really matters to the second whether
I know if I'm connected or not.

103
00:06:59.320 --> 00:07:03.020
But here we're just trying to make a good
faith effort to let the user know,

104
00:07:03.020 --> 00:07:05.640
you're in an offline mode,
just expect that you may not be able to

105
00:07:05.640 --> 00:07:09.340
do everything that you can do
in the normal online mode.

