WEBVTT

1
00:00:00.000 --> 00:00:03.915
[MUSIC]

2
00:00:03.915 --> 00:00:05.686
&gt;&gt; Kyle Simpson: Pull
exercise two up with me.

3
00:00:05.686 --> 00:00:08.822
Again, pull up the read me and the EX2.js.

4
00:00:10.593 --> 00:00:12.320
&gt;&gt; Kyle Simpson: I'll go ahead and
close exercise one,

5
00:00:12.320 --> 00:00:14.000
since we're not using that anymore.

6
00:00:14.000 --> 00:00:15.888
Let's look at the read me for
exercise two.

7
00:00:15.888 --> 00:00:18.625
It says define foo so
that it produces a function,

8
00:00:18.625 --> 00:00:22.342
we've already seen that, and
that function needs to remember only

9
00:00:22.342 --> 00:00:25.030
the first two arguments
that were passed to foo.

10
00:00:26.370 --> 00:00:28.243
And then the function
that we've returned back,

11
00:00:28.243 --> 00:00:29.858
it needs to always add those two together.

12
00:00:33.656 --> 00:00:35.726
&gt;&gt; Kyle Simpson: Parse
through that read me.

13
00:00:37.389 --> 00:00:39.459
&gt;&gt; Kyle Simpson: Make sure you fully
understand what it's asking for,

14
00:00:39.459 --> 00:00:40.226
here's the set up.

15
00:00:42.296 --> 00:00:45.420
&gt;&gt; Kyle Simpson: I should be able to
make a function called x that's already

16
00:00:45.420 --> 00:00:49.458
remembering the 3 and the 4, and
every time I call x I'm gonna get 7 out.

17
00:00:53.853 --> 00:00:56.987
&gt;&gt; Kyle Simpson: Not very many lines of
code, but let's make sure you have your

18
00:00:56.987 --> 00:00:59.720
brains wrapped around how
we can use closure, okay?

