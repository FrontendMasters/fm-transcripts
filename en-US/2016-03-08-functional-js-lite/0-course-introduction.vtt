WEBVTT

1
00:00:00.000 --> 00:00:10.000
[MUSIC]

2
00:00:39.195 --> 00:00:40.580
&gt;&gt; Kyle Simpson: Super
huge honor to be here.

3
00:00:40.580 --> 00:00:44.311
For those of you that haven't heard
of me before, my name's Kyle Simpson,

4
00:00:44.311 --> 00:00:48.508
known as @getify online and all the places
that matter, you can find me at @getify,

5
00:00:48.508 --> 00:00:51.392
so Twitter, GitHub, Gmail,
everywhere that you want.

6
00:00:51.392 --> 00:00:56.750
So I make all that stuff available so
that I can encourage feedback.

7
00:00:56.750 --> 00:00:59.980
I might say something today
that's particularly confusing, or

8
00:00:59.980 --> 00:01:04.450
I might say something that you
just totally disagree with, and

9
00:01:04.450 --> 00:01:07.640
that's entirely great if you want
to provide that sort of feedback.

10
00:01:07.640 --> 00:01:11.930
So in addition to, if your watching
the slide, in addition to the chat room,

11
00:01:11.930 --> 00:01:14.560
feel free afterwards, or
if you're watching these videos later,

12
00:01:14.560 --> 00:01:17.860
feel free to reach out with any
sort of feedback about that.

13
00:01:17.860 --> 00:01:21.670
Actually I think I want to self correct
myself so if I'm doing my counting or I,

14
00:01:21.670 --> 00:01:25.820
just so make sure for posterity
sake I think this actually might be

15
00:01:25.820 --> 00:01:29.700
workshop number seven and
then the next one we do is number eight.

16
00:01:29.700 --> 00:01:33.490
So I think I've had web performance,
I've had advanced JavaScript,

17
00:01:33.490 --> 00:01:38.570
I've had Node, I've had JavaScript basics,
I've had coercion,

18
00:01:38.570 --> 00:01:41.710
I've had organizing
JavaScript functionality.

19
00:01:41.710 --> 00:01:43.720
So today makes number seven,
so that's pretty awesome.

20
00:01:44.800 --> 00:01:46.480
It's a huge honor.

21
00:01:46.480 --> 00:01:50.140
I mention that not just to
point out what is available,

22
00:01:50.140 --> 00:01:54.800
but also I wanna always
give credit where it's due.

23
00:01:54.800 --> 00:01:55.870
That very first workshop,

24
00:01:55.870 --> 00:02:00.560
the web performance optimization, is the
very first workshop I did as a teacher.

25
00:02:00.560 --> 00:02:02.380
Mark reached out to me sight unseen.

26
00:02:02.380 --> 00:02:03.950
He'd seen a few of my conference talks.

27
00:02:03.950 --> 00:02:06.220
And he said, hey, have you ever
thought about doing some teaching?

28
00:02:06.220 --> 00:02:10.210
And he coerced me,
[LAUGH] convinced me to do some teaching.

29
00:02:10.210 --> 00:02:11.380
I'd thought about that before but

30
00:02:11.380 --> 00:02:14.700
never done this long-form
software development teaching.

31
00:02:14.700 --> 00:02:19.000
So he gave me my shot, and I am now
a full-time teacher as a result of that.

32
00:02:19.000 --> 00:02:22.010
So it's kinda like coming home,

33
00:02:22.010 --> 00:02:25.340
to come back to Frontend Masters
to be part of this.

34
00:02:25.340 --> 00:02:29.113
It's a fantastic platform and
I'm thankful for it, and

35
00:02:29.113 --> 00:02:32.425
you all are incredibly
lucky to have access to it.

36
00:02:32.425 --> 00:02:33.930
All right, so let's jump in.

37
00:02:33.930 --> 00:02:36.850
I'm gonna try to keep my intro
about myself a bit brief

38
00:02:36.850 --> 00:02:38.720
cuz they're on all the videos.

39
00:02:38.720 --> 00:02:42.120
But just for those of you that
haven't heard of me before or

40
00:02:42.120 --> 00:02:44.220
seen some of the stuff
that I've done before.

41
00:02:44.220 --> 00:02:48.180
Just real quickly, in addition to doing
this teaching thing about JavaScript,

42
00:02:48.180 --> 00:02:51.260
traveling all over and teaching and things
like that, I also do a lot of Open Source

43
00:02:51.260 --> 00:02:55.050
development and I've got several dozen,
a couple dozen repos out there.

44
00:02:55.050 --> 00:02:59.060
But just to point out a couple of ones
that are representative of the things I've

45
00:02:59.060 --> 00:03:03.740
done, so LABjs probably the one most well
known for, it's a dynamic script loader.

46
00:03:03.740 --> 00:03:05.880
It's been around now for
six and a half years.

47
00:03:05.880 --> 00:03:06.760
It's been very stable.

48
00:03:06.760 --> 00:03:11.300
It hasn't even changed in almost five
years because nothing has changed in

49
00:03:11.300 --> 00:03:13.915
the script loading world for
five years, but that is changing.

50
00:03:13.915 --> 00:03:17.958
HTTP version 2 coming along,
we're gonna see, I think, a renaissance or

51
00:03:17.958 --> 00:03:22.131
a rebirth of interest in intelligent
script loading because with version 2,

52
00:03:22.131 --> 00:03:26.328
you're gonna want to serve everything
as small and as many files as possible.

53
00:03:26.328 --> 00:03:29.554
So if you're looking for
a performance-optimized script loader,

54
00:03:29.554 --> 00:03:30.850
you might check out LABjs.

55
00:03:30.850 --> 00:03:32.390
Grips is a templating engine.

56
00:03:32.390 --> 00:03:35.490
Basically I've observed that there's
a bunch of problems that happen regardless

57
00:03:35.490 --> 00:03:37.360
of how we present our views.

58
00:03:37.360 --> 00:03:40.170
I think we've been fundamentally
asking the wrong questions.

59
00:03:40.170 --> 00:03:44.430
And even the complete rethinking that
has happened recently with virtual DOMS,

60
00:03:44.430 --> 00:03:48.980
React and Ember and all those, even those
are starting to make some of the same

61
00:03:48.980 --> 00:03:53.090
mistakes that templating approaches made,
in terms of not asking

62
00:03:53.090 --> 00:03:57.430
the tough questions about where where
the lines really should be drawn.

63
00:03:57.430 --> 00:04:01.957
They've sort of played a switcheroo
on us and redefined some terms,

64
00:04:01.957 --> 00:04:04.922
like what the notion of
concern actually is,

65
00:04:04.922 --> 00:04:07.979
compared to what we used
to say 15 years ago.

66
00:04:07.979 --> 00:04:10.925
And I was in the trenches when
we originally did those things,

67
00:04:10.925 --> 00:04:13.645
but basically there's a lot
of problems that occur, and

68
00:04:13.645 --> 00:04:17.290
I don't think that we've really asked
the right fundamental questions.

69
00:04:17.290 --> 00:04:22.070
So grips is an attempt, an experiment,
an ongoing research experiment,

70
00:04:22.070 --> 00:04:26.120
into asking maybe better questions about
where those lines should be drawn and

71
00:04:26.120 --> 00:04:29.170
what we should be able to do and what we
shouldn't be able to do with our views,

72
00:04:29.170 --> 00:04:32.660
what should be kept separate and
what shouldn't be kept separate.

73
00:04:32.660 --> 00:04:34.690
So if you've had any pain
points around those or

74
00:04:34.690 --> 00:04:37.935
if you feel like even with
the amazingness of something like React,

75
00:04:37.935 --> 00:04:41.830
if you feel like you're still running
into those questions about how do I know

76
00:04:41.830 --> 00:04:45.500
where something should be or
shouldn't be, you might check out grips.

77
00:04:45.500 --> 00:04:50.130
I also have a CSS templating engine on
top of it because CSS preprocessing

78
00:04:50.130 --> 00:04:53.370
is exactly the same thing with
exactly the same problems.

79
00:04:53.370 --> 00:04:56.040
And all of the current tools,
as great as they are,

80
00:04:56.040 --> 00:04:59.190
all fall short of answering those
same questions in the same ways.

81
00:04:59.190 --> 00:05:02.920
They didn't really learn any of those
lessons that we learned elsewhere.

82
00:05:02.920 --> 00:05:05.100
So that's an ongoing research experiment.

83
00:05:05.100 --> 00:05:07.412
It's not just a research experiment,

84
00:05:07.412 --> 00:05:11.754
I actually use it in production on all
the sites that I've ever built, but

85
00:05:11.754 --> 00:05:15.416
it is obviously in flux as I figure
out how to do things better.

86
00:05:15.416 --> 00:05:17.282
So that, and then asynquence.

87
00:05:17.282 --> 00:05:21.690
We're actually gonna not talk
much about asynquence today

88
00:05:21.690 --> 00:05:24.740
in this workshop on
functional programming,

89
00:05:24.740 --> 00:05:29.010
but it's a flow control library for
promises and generators and

90
00:05:29.010 --> 00:05:33.850
even higher order asynchronous patterns
like observables and things like that.

91
00:05:33.850 --> 00:05:36.870
It's designed specifically from
the perspective of teaching.

92
00:05:36.870 --> 00:05:39.210
So it tries to take these
higher order concepts,

93
00:05:39.210 --> 00:05:41.540
which are often pretty hard conceptually.

94
00:05:41.540 --> 00:05:43.690
We can barely get our
heads around the APIs for

95
00:05:43.690 --> 00:05:46.740
these things, but to understand
the concepts is really difficult.

96
00:05:46.740 --> 00:05:49.850
So I tried to design the API
to teach the concepts.

97
00:05:49.850 --> 00:05:51.720
That's what this library's all about.

98
00:05:51.720 --> 00:05:56.086
If you don't already have something that's
helping you understand not just callbacks

99
00:05:56.086 --> 00:06:00.220
or not just promises but even higher order
patterns like observables for example.

100
00:06:00.220 --> 00:06:03.087
If you don't have one library that is
helping you navigate all of that and

101
00:06:03.087 --> 00:06:04.760
understand the conceptuals.

102
00:06:04.760 --> 00:06:07.730
Or if you feel like, man I really just,
I don't even understand what it's doing.

103
00:06:07.730 --> 00:06:10.656
It's a black box and
I just treat it like that.

104
00:06:10.656 --> 00:06:14.095
I encourage you to maybe check out
asynquence, see if that might help.

105
00:06:14.095 --> 00:06:18.712
Okay, I am the head of curriculum for
Maker Square as of about three

106
00:06:18.712 --> 00:06:22.840
months ago from today, well,
almost four months ago now.

107
00:06:22.840 --> 00:06:25.830
So Maker Square is a developer
engineer training school.

108
00:06:25.830 --> 00:06:29.774
We currently have three campuses,
Austin, San Francisco, and Los Angeles.

109
00:06:29.774 --> 00:06:33.590
Other well-known names you might have
heard of like Iron Yard, General Assembly,

110
00:06:33.590 --> 00:06:37.512
Hack Reactor, we're actually part of the
Hack Reactor network of partner schools.

111
00:06:37.512 --> 00:06:38.920
We're owned by Hack Reactor.

112
00:06:38.920 --> 00:06:40.390
So if you've heard of
those sorts of schools.

113
00:06:40.390 --> 00:06:41.490
Flat Iron is another one,

114
00:06:41.490 --> 00:06:45.290
if you're from the New York area
you've probably heard of that.

115
00:06:45.290 --> 00:06:49.430
So we sort of are trying to
shift towards the upper end

116
00:06:49.430 --> 00:06:53.090
of this spectrum of developer
engineer training schools.

117
00:06:53.090 --> 00:06:57.360
Kind of like to say that we're trying
to become sort of like the MIT

118
00:06:57.360 --> 00:06:59.420
of developer training engineer schools.

119
00:07:02.010 --> 00:07:04.920
We're not just anybody that can commit.

120
00:07:04.920 --> 00:07:08.030
A lot of people apply and
can't pass the entrance test, for example.

121
00:07:08.030 --> 00:07:11.074
So we set a very high bar, but
that means that when you come out of

122
00:07:11.074 --> 00:07:13.730
the school you're even
further along in your career.

123
00:07:13.730 --> 00:07:15.810
You're a full-fledged
intermediate developer.

124
00:07:15.810 --> 00:07:17.490
So we take that very seriously.

125
00:07:17.490 --> 00:07:18.780
It's full stack JavaScript.

126
00:07:18.780 --> 00:07:20.730
And I'm newly in this post.

127
00:07:20.730 --> 00:07:24.460
I take it very seriously to make sure that
you have absolutely the best-in-class

128
00:07:24.460 --> 00:07:26.920
possible education around JavaScript.

129
00:07:26.920 --> 00:07:31.230
So in addition to doing trainings like
this, and we do corporate trainings,

130
00:07:31.230 --> 00:07:35.050
I also manage the curriculum for
those in-person classes.

131
00:07:35.050 --> 00:07:40.230
So if you're listening on the video or
here in person and you're interested

132
00:07:40.230 --> 00:07:43.570
in this, maybe you know somebody that
would like to get in or maybe you yourself

133
00:07:43.570 --> 00:07:47.050
would be interested in something, I'd love
for you to reach out and ask questions.

134
00:07:47.050 --> 00:07:49.330
I'd love to chat with you about that.

135
00:07:49.330 --> 00:07:52.890
In addition, you should also know,
and many of you probably have heard,

136
00:07:52.890 --> 00:07:55.500
of the book series that I wrote on
JavaScript called You Don't Know JS.

137
00:07:57.174 --> 00:08:00.150
I oftentimes get asked,
where does that name come from?

138
00:08:00.150 --> 00:08:02.480
Obviously there's a little bit
of tongue-in-cheek joke there.

139
00:08:02.480 --> 00:08:03.949
But where does the book come from?

140
00:08:03.949 --> 00:08:05.850
Where does the book title come from?

141
00:08:05.850 --> 00:08:06.980
Honestly, the reason for that,

142
00:08:06.980 --> 00:08:09.730
it was really more about
myself than anybody else.

143
00:08:09.730 --> 00:08:13.750
The two years that I spent writing
this six-book 1,100-page series,

144
00:08:13.750 --> 00:08:16.710
it's all available for
free online so you can check it out.

145
00:08:16.710 --> 00:08:17.970
You can also purchase the books.

146
00:08:19.600 --> 00:08:25.210
But the journey that I went through caused
me to realize that there is no attaining

147
00:08:25.210 --> 00:08:26.880
of full knowledge.

148
00:08:26.880 --> 00:08:28.240
It's asymptotic.

149
00:08:28.240 --> 00:08:33.390
You approach closer and closer to a full
understanding as you learn more and more,

150
00:08:33.390 --> 00:08:37.380
but you never actually fully arrive and so
we have to commit ourselves not to just,

151
00:08:37.380 --> 00:08:40.550
hey, I'm just gonna spend this month and
become a master of JavaScript.

152
00:08:40.550 --> 00:08:41.830
I've been at this 17 years and

153
00:08:41.830 --> 00:08:45.110
I'm nowhere near calling
myself a master of JavaScript.

154
00:08:45.110 --> 00:08:48.200
But what I've done is kept asking
those questions and getting closer and

155
00:08:48.200 --> 00:08:51.780
closer and closer to that line of
deeper and deeper understanding.

156
00:08:51.780 --> 00:08:55.540
And I regularly, regularly, week after
week and day after day, run across

157
00:08:55.540 --> 00:08:59.270
something that I thought I understood and
then I more fully understand it.

158
00:08:59.270 --> 00:09:00.570
And then I'm like, there's so

159
00:09:00.570 --> 00:09:03.250
much embarrassing code that I
wish I could go back and fix.

160
00:09:04.350 --> 00:09:08.210
So really the title of the series is to
sort of gently challenge all of us to

161
00:09:08.210 --> 00:09:10.810
adopt that continuous learning mindset.

162
00:09:10.810 --> 00:09:14.270
The workshops that I've done through
Frontend Masters are the same perspective,

163
00:09:14.270 --> 00:09:17.210
and they track very closely to the kinds
of things we talk about in the books.

