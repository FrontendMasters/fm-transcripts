WEBVTT

1
00:00:00.340 --> 00:00:01.930
So we got a second application.

2
00:00:01.930 --> 00:00:04.470
This one happens to be a react app.

3
00:00:04.470 --> 00:00:10.130
Now I am using the like
version of Electron Forge.

4
00:00:10.130 --> 00:00:12.520
There is also a webpack version for For

5
00:00:12.520 --> 00:00:16.190
those of you who remember how
to mess around with Webpack.

6
00:00:16.190 --> 00:00:17.780
I don't mean like that's most people.

7
00:00:17.780 --> 00:00:20.750
For me personally,
I work on a Svelte app all day.

8
00:00:20.750 --> 00:00:22.180
So I live in Vite.

9
00:00:22.180 --> 00:00:23.620
I have not touched Webpack in a few years.

10
00:00:23.620 --> 00:00:27.930
So I chose that one because I was looking
out for me and what I need in my life.

11
00:00:27.930 --> 00:00:32.702
But I will show you the amount of work
it took to get react installed in

12
00:00:32.702 --> 00:00:34.488
the Vite one, which is.

13
00:00:34.488 --> 00:00:40.592
I installed vitejs/plugin-react and
put it in there,

14
00:00:40.592 --> 00:00:45.630
and now my electron app supports react.

15
00:00:45.630 --> 00:00:46.700
And so that was it.

16
00:00:46.700 --> 00:00:47.575
That's the.
You know,

17
00:00:47.575 --> 00:00:51.380
that's our tutorial on how to use react
in an Electron Forge application.

18
00:00:51.380 --> 00:00:52.672
So good, good talk everyone.

19
00:00:52.672 --> 00:00:55.580
Does that become its own
section at this point?

20
00:00:55.580 --> 00:00:56.310
Or, okay.

21
00:00:56.310 --> 00:00:59.268
So with that, the layout of
the application is shockingly similar to

22
00:00:59.268 --> 00:01:01.870
before, because I didn't need
to reinvent the wheel here.

23
00:01:01.870 --> 00:01:06.860
Other than the fact that like we do the,
react dom dance.

24
00:01:06.860 --> 00:01:08.810
Right that we have done before.

25
00:01:08.810 --> 00:01:11.550
Use clipping looks complicated.

26
00:01:11.550 --> 00:01:15.346
It's just a use reducer that I didn't
wanna look at in the regular code,

27
00:01:15.346 --> 00:01:19.703
and that's all it's doing is then instead
of knowing that I'm using use reducer,

28
00:01:19.703 --> 00:01:23.340
it exports an addClipping,
removeClipping, and updateClipping.

29
00:01:23.340 --> 00:01:26.970
I don't even think I use the update
clipping, but it's simply a use reducer.

30
00:01:26.970 --> 00:01:29.360
That is hanging out its own hook.

31
00:01:30.400 --> 00:01:35.080
And yeah, there's some CSS
that we'll touch in a second.

32
00:01:35.080 --> 00:01:39.710
Most of what we care about and
need is just in application.tsx

33
00:01:39.710 --> 00:01:44.080
like everything else should
unless I made a boo boo.

34
00:01:44.080 --> 00:01:48.721
That I didn't, sometimes you start with
the app and then you build it in the apply

35
00:01:48.721 --> 00:01:53.362
the things you know you needed later, if I
missed one of those we'll have to pop in

36
00:01:53.362 --> 00:01:58.004
and change that but mostly everything we
need to do will be in application.tsx,

37
00:01:58.004 --> 00:02:01.590
main looks like the default
thing that we've seen and loved.

38
00:02:01.590 --> 00:02:03.180
So, like not a lot new here.

39
00:02:03.180 --> 00:02:08.190
The biggest change from the previous
one is we have react through

40
00:02:08.190 --> 00:02:14.125
a grand total of what I can assume is
under 25 characters in my Vite setup for

41
00:02:14.125 --> 00:02:20.280
the renderer, which is to include
the fact that we wanna parse JSX.

42
00:02:20.280 --> 00:02:21.300
Right, that's it.

43
00:02:21.300 --> 00:02:26.783
One can imagine that Svelte, Vue
what have you is exactly the same

44
00:02:26.783 --> 00:02:31.950
amount of work except instead
of a react plug-in you put in

45
00:02:31.950 --> 00:02:37.550
a spell plug-in and life goes on and
everything is good.

46
00:02:37.550 --> 00:02:39.470
So that is the kind of main change there.

