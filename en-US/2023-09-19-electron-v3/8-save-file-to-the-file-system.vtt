WEBVTT

1
00:00:00.000 --> 00:00:04.941
The thing that we're missing there's
a little more nuance to saving a file,

2
00:00:04.941 --> 00:00:08.832
we save your file behaves
a little bit differently, right?

3
00:00:08.832 --> 00:00:13.152
For instance, if you open a file and you
hit save, you do not wanna be asked where

4
00:00:13.152 --> 00:00:16.331
to save the file,
you simply wanna save the file, right?

5
00:00:16.331 --> 00:00:19.499
But if it's a brand new file and
you have not saved it yet,

6
00:00:19.499 --> 00:00:22.077
you do wanna be asked where to save it,
right?

7
00:00:22.077 --> 00:00:26.577
There are also some little
things that we come to know and

8
00:00:26.577 --> 00:00:30.423
love over time about
a given operating system.

9
00:00:30.423 --> 00:00:35.923
So for instance, if I take this same file
and I open it with a native Mac app.

10
00:00:35.923 --> 00:00:38.480
There are some things that you will like,
maybe you never noticed it.

11
00:00:38.480 --> 00:00:39.608
Maybe you don't use a Mac, but

12
00:00:39.608 --> 00:00:41.743
there are some little things
that you might've noticed.

13
00:00:41.743 --> 00:00:45.403
One, can see the name of
the file in the window.

14
00:00:45.403 --> 00:00:46.438
That seems good.

15
00:00:46.438 --> 00:00:51.508
Two, is if I hit command, I can actually
see where it is and I can actually

16
00:00:51.508 --> 00:00:56.599
take this and have a reference to
the file that I can drag around, right?

17
00:00:56.599 --> 00:00:58.367
This is again, this is a native Mac app.

18
00:00:58.367 --> 00:00:59.681
This is not an electron app.

19
00:00:59.681 --> 00:01:04.877
Next off is if I modify the file,
I can see very subtly that

20
00:01:04.877 --> 00:01:11.592
there's a little dot in here telling
me that the file has been modified and

21
00:01:11.592 --> 00:01:17.905
this gets a little, the opacity goes
down cuz it's not a saved file.

22
00:01:17.905 --> 00:01:21.559
And then upon saving the file,
that goes away, right?

23
00:01:21.559 --> 00:01:26.659
And so those are, again,
the little pieces of things that we

24
00:01:26.659 --> 00:01:32.960
come to expect on the UX of a given
application that we can and should bring.

25
00:01:32.960 --> 00:01:35.956
And Electron gives you the ability
to do all this stuff but

26
00:01:35.956 --> 00:01:39.955
the nuances of your application are as
such you have to kind of instruction on

27
00:01:39.955 --> 00:01:43.908
what this stuff means cuz there are some
things that doesn't, all right?

28
00:01:43.908 --> 00:01:48.354
Like if you look on the GitHub app,
that's not there but

29
00:01:48.354 --> 00:01:54.610
what is this unsaved file and I guess
they could do stuff there but they don't.

30
00:01:54.610 --> 00:01:57.538
In VS code they've done
a different pattern but you

31
00:01:57.538 --> 00:02:02.183
still got that little in the upper left
corner on an unsaved file change, right?

32
00:02:02.183 --> 00:02:09.479
And so, what you choose to do depends on
the nuances of your application, right?

33
00:02:09.479 --> 00:02:14.195
But generally speaking, electron
gives you all the APIs to do that it

34
00:02:14.195 --> 00:02:18.280
just doesn't know what you
wanted to do unless you tell it.

35
00:02:18.280 --> 00:02:21.271
So we have to go ahead and do that, cool.

36
00:02:21.271 --> 00:02:24.836
So now with saving a file we
should have the opportunity to

37
00:02:24.836 --> 00:02:29.738
slay some of those beasts of the OS
integration piece, cuz like I said before,

38
00:02:29.738 --> 00:02:34.745
a big especially in the new security model
and I like Tron New, is a strong word.

39
00:02:34.745 --> 00:02:36.638
The modern security model in electron,

40
00:02:36.638 --> 00:02:39.429
a lot of this is this
inter-process communication dance.

41
00:02:39.429 --> 00:02:43.789
The other part is like this
kind of OS integration piece.

42
00:02:43.789 --> 00:02:45.289
So we're saving a file.

43
00:02:45.289 --> 00:02:49.744
We encounter some new
ones in there as well.

44
00:02:49.744 --> 00:02:53.754
And so we have to kind of
deal with it there as well.

45
00:02:53.754 --> 00:02:59.307
So let's say,
now that we want to have, save file,

46
00:02:59.307 --> 00:03:06.652
and save file, it's really just
gonna be at this point the content.

47
00:03:06.652 --> 00:03:11.202
And I might regret that and need to change
it but we'll start with that for now.

48
00:03:11.202 --> 00:03:17.433
So we'll have the ability to save
a file and we'll give it the,

49
00:03:17.433 --> 00:03:22.620
SaveFile should be the content,
which is a string.

50
00:03:26.459 --> 00:03:27.645
Cool.

51
00:03:29.670 --> 00:03:30.865
It seems right.

52
00:03:30.865 --> 00:03:34.324
I'm just wondering why that thing didn't
work before, but we'll figure it out.

53
00:03:34.324 --> 00:03:35.419
Cool.

54
00:03:35.419 --> 00:03:39.918
And so we've got that in place as we have
the content and you'll see it invoke

55
00:03:39.918 --> 00:03:44.014
there as well, but we actually will
just start by sending a message.

56
00:03:44.014 --> 00:03:45.485
We'll do IPC renderer.

57
00:03:47.485 --> 00:03:51.947
And the pattern here that we're doing is
like IPC renderer is enclosure scope.

58
00:03:51.947 --> 00:03:53.549
It's not available to that
window object at all.

59
00:03:53.549 --> 00:03:57.369
All right,
the context bridge is in closure scope.

60
00:03:57.369 --> 00:04:02.094
The only thing that's available
are these four methods which are being

61
00:04:02.094 --> 00:04:03.201
very specific.

62
00:04:03.201 --> 00:04:05.660
There's no way to like send
a message from the renderer process.

63
00:04:05.660 --> 00:04:09.522
If we loaded a third party script or
something along those lines,

64
00:04:09.522 --> 00:04:13.666
there's no way to send something on
a channel that we are unaware of and

65
00:04:13.666 --> 00:04:16.210
this is not gonna get
you all the way there.

66
00:04:16.210 --> 00:04:19.879
We have CSP headers in here, right?

67
00:04:19.879 --> 00:04:24.723
Like untrusted third party scripts
of regular web security things also

68
00:04:24.723 --> 00:04:28.921
make total sense here and
these are present in our HTML file and

69
00:04:28.921 --> 00:04:30.950
you should have them as well.

70
00:04:30.950 --> 00:04:34.983
Don't trust arbitrary code
loaded to call whatever, right?

71
00:04:34.983 --> 00:04:36.924
We've got this in place, but

72
00:04:36.924 --> 00:04:42.137
these are the kind of core pieces kind of
give us a security posture here as well.

73
00:04:42.137 --> 00:04:47.449
Cool, so we've got the save file and
we do some of the very

74
00:04:47.449 --> 00:04:53.436
same pieces that we had before on
the render on the main process.

75
00:04:53.436 --> 00:04:57.071
So we had the export HTML,
we'll just go here and

76
00:04:57.071 --> 00:05:01.683
give ourselves new ones,
which is we need a show Save Dialog,

77
00:05:01.683 --> 00:05:06.757
which is going to have take the browser
window just as it did before.

78
00:05:06.757 --> 00:05:10.973
You can see it up there.

79
00:05:10.973 --> 00:05:13.379
Now nope, lowercase browser window.

80
00:05:13.379 --> 00:05:16.828
Doesn't know that's the function yet so

81
00:05:16.828 --> 00:05:23.230
I got to help IntelliSense along a little
bit there with the browser window and

82
00:05:23.230 --> 00:05:29.160
we know that it will take the content and
maybe a file path, we'll see.

83
00:05:29.160 --> 00:05:32.419
Cool, so we've got that in place and

84
00:05:32.419 --> 00:05:37.164
now a lot of this is very
similar to what we had before.

85
00:05:37.164 --> 00:05:39.778
We do know that it will
be a marked down file,

86
00:05:39.778 --> 00:05:44.091
we do know that we all the same stuff
that we typed previously is true, and

87
00:05:44.091 --> 00:05:48.139
then we get finally to the safe file
with a file path and the content.

88
00:05:48.139 --> 00:05:49.339
Now this is interesting.

89
00:05:49.339 --> 00:05:54.457
So this is where the first
nuance comes that we had before,

90
00:05:54.457 --> 00:05:58.959
which is we might already
have a file path, right?

91
00:05:58.959 --> 00:06:02.339
It's just maybe the content
that we need in this case.

92
00:06:02.339 --> 00:06:06.946
So, it could be possible that
how we choose to do this

93
00:06:06.946 --> 00:06:11.574
might be in the opposite
direction as well, right?

94
00:06:11.574 --> 00:06:15.119
Which is, if we don't have a file path,
then we need to keep it available.

95
00:06:15.119 --> 00:06:17.214
Now, how do you store
where the file path is?

96
00:06:17.214 --> 00:06:18.844
You could store it in the browser.

97
00:06:18.844 --> 00:06:20.676
That feels kind of weird, right?

98
00:06:20.676 --> 00:06:24.256
Cuz it's not the one that needs it and
then you can pass it back every time.

99
00:06:24.256 --> 00:06:28.034
What we might choose to do is like
keep track of what the current file

100
00:06:28.034 --> 00:06:29.389
is in the main process.

101
00:06:29.389 --> 00:06:32.099
We know when they open a file, right?

102
00:06:32.099 --> 00:06:37.064
And we know if it's the first time
that they've saved a file, right?

103
00:06:37.064 --> 00:06:40.508
And that we don't know what
the file path is, right?

104
00:06:40.508 --> 00:06:43.388
But then if they save a file,
we then know what the file path is.

105
00:06:43.388 --> 00:06:46.058
So we can kind of handle all of this here.

106
00:06:46.058 --> 00:06:49.267
Otherwise we're gonna have to
do a lot of back and forth and

107
00:06:49.267 --> 00:06:51.244
it makes sense to store it here now.

108
00:06:51.244 --> 00:06:54.157
Again, with one window, it is a lot
easier than with multiple windows.

109
00:06:54.157 --> 00:06:58.660
But the answer to that one is usually just
keep some kinda data structure that keeps

110
00:06:58.660 --> 00:07:01.412
track of the windows and
any state that they need.

111
00:07:01.412 --> 00:07:06.231
You can go anywhere from just a simple
JavaScript object all the way up to some

112
00:07:06.231 --> 00:07:11.067
kinda larger data store or a pattern
like Redux isn't always tied to React.

113
00:07:11.067 --> 00:07:13.617
You can use it here as well.

114
00:07:13.617 --> 00:07:19.383
So let's keep track just
as a top level variable,

115
00:07:19.383 --> 00:07:25.713
we'll just say we got a type,
which is MarkdownFile.

116
00:07:25.713 --> 00:07:28.035
And that's gonna have
some amount of content.

117
00:07:28.035 --> 00:07:31.013
And the reason why keep
track of the content is,

118
00:07:31.013 --> 00:07:36.164
I wanna know what the content was the last
time we interacted with the file system.

119
00:07:36.164 --> 00:07:39.144
I need this because it will
let me know whether or

120
00:07:39.144 --> 00:07:41.613
not the file has unsafe changes or not.

121
00:07:41.613 --> 00:07:43.050
Which is very simple.

122
00:07:43.050 --> 00:07:49.233
If current content equals previous
content, no unsaved changes.

123
00:07:49.233 --> 00:07:54.390
If they are different,
then they're different.

124
00:07:54.390 --> 00:07:57.539
So we'll also keep track of the file path.

125
00:07:57.539 --> 00:08:02.791
And since we might not have one
originally, we'll make these

126
00:08:02.791 --> 00:08:08.548
both optional on the type and
we'll just say that let current file,

127
00:08:08.548 --> 00:08:13.396
Markdown file will say that
content is an empty string cuz

128
00:08:13.396 --> 00:08:17.555
that will be what is
technically in the browser.

129
00:08:17.555 --> 00:08:21.075
If you do a dot value on an empty
text area, it's an empty string.

130
00:08:21.075 --> 00:08:23.158
So we're keeping track of that for
a moment.

131
00:08:23.158 --> 00:08:25.734
And file path will just keep as undefined.

132
00:08:25.734 --> 00:08:30.836
I could theoretically just not defined
on this object and get the same effect,

133
00:08:30.836 --> 00:08:35.409
but I'm gonna be nice to myself and
actually see the shape of the file.

134
00:08:35.409 --> 00:08:41.151
So now we know, now we get a little
more nuance down here, right?

135
00:08:41.151 --> 00:08:45.401
We go to save the file,
it's going to be a little bit of

136
00:08:45.401 --> 00:08:50.313
a different API because we only
need to show that safe dialog,

137
00:08:50.313 --> 00:08:54.004
if we need to figure out
where to save the file.

138
00:08:54.004 --> 00:08:58.565
If they've opened the file or
if they've previously saved the file,

139
00:08:58.565 --> 00:09:03.299
we know where to save the file,
we don't need to show them that, right?

140
00:09:03.299 --> 00:09:09.339
So in this case,
I might just do a return filePath, right?

141
00:09:09.339 --> 00:09:12.034
And so
now theoretically we can ask for it.

142
00:09:12.034 --> 00:09:14.249
I don't necessarily care
about the content anymore.

143
00:09:14.249 --> 00:09:18.370
So, it should be a little bit different
than expert cuz it's got a lot more

144
00:09:18.370 --> 00:09:20.579
intricacies we always wanted to show.

145
00:09:20.579 --> 00:09:25.350
It was very similar to the file open
dialogue before which is if you

146
00:09:25.350 --> 00:09:28.060
say open a file, what file, right?

147
00:09:28.060 --> 00:09:30.769
If you say export a file, we might
wanna export it over and over again.

148
00:09:30.769 --> 00:09:35.539
For save,
it's a different kind of UX around there,

149
00:09:35.539 --> 00:09:39.574
and so
we need to be cognizant of that as well.

150
00:09:39.574 --> 00:09:43.993
And so now we've got the save file,
which will probably take the content,

151
00:09:43.993 --> 00:09:45.124
which is a string.

152
00:09:47.967 --> 00:09:52.174
And then we can say
something like filePath,

153
00:09:58.275 --> 00:10:07.354
Is, CurrentFile.filePath,
or go get me one, right?

154
00:10:07.354 --> 00:10:13.779
And so we'll have either one
of those two kind of in place.

155
00:10:13.779 --> 00:10:14.801
Yeah, cool.

156
00:10:14.801 --> 00:10:16.179
I don't love this.

157
00:10:16.179 --> 00:10:17.927
I don't need that right there.

158
00:10:17.927 --> 00:10:20.382
Cuz we've got file path,
which is one way or the other,

159
00:10:20.382 --> 00:10:24.212
theoretically gonna be there cuz we could
theoretically get undefined from this one.

160
00:10:24.212 --> 00:10:27.565
So we will have to check one
more time if it's there.

161
00:10:27.565 --> 00:10:32.269
But ideally one way or the other we
should have gotten one cuz I get,

162
00:10:32.269 --> 00:10:37.490
I don't think you can get totally all
the way here but you could cancel it.

163
00:10:37.490 --> 00:10:42.047
So we'll say, if there's no file path,
don't save my file, right?

164
00:10:42.047 --> 00:10:51.539
Otherwise we can do the Did I get that,

165
00:10:51.539 --> 00:10:53.170
stop with that?

166
00:10:53.170 --> 00:10:56.554
IntelliSense is good most of the time.

167
00:10:56.554 --> 00:11:01.376
Cool, so we'll write to that
file path with the content, and

168
00:11:01.376 --> 00:11:03.704
we should have that in place.

169
00:11:03.704 --> 00:11:05.777
So I deviated from the plan a little bit.

170
00:11:05.777 --> 00:11:07.585
So let's find out if this works.

171
00:11:07.585 --> 00:11:12.700
So we know that we will have a save file,
message that we

172
00:11:12.700 --> 00:11:17.719
send along the way, and
we will seek to save the file.

173
00:11:17.719 --> 00:11:22.345
Let's go ahead and find out if that
does what we think it's going to do.

174
00:11:22.345 --> 00:11:24.175
I think that I probably.

175
00:11:24.175 --> 00:11:28.773
You notice that the nice
kind of Copilot help

176
00:11:28.773 --> 00:11:33.744
here is there's also
this get focused window,

177
00:11:33.744 --> 00:11:39.600
which will go ahead and
try to get the front most window.

178
00:11:39.600 --> 00:11:40.559
It'll work.

179
00:11:40.559 --> 00:11:43.992
It's not necessarily what
I want in this case, so

180
00:11:43.992 --> 00:11:47.361
I'm gonna do the same
pattern that I had before.

181
00:11:47.361 --> 00:11:50.252
Which is to always pass
in a browser window.

182
00:11:50.252 --> 00:11:52.360
And to be clear, this is fine.

183
00:11:52.360 --> 00:11:53.920
There's nothing wrong with this.

184
00:11:53.920 --> 00:11:57.370
There might be intricacies if I
had a multi-window application.

185
00:11:57.370 --> 00:11:58.809
Do I have the right window?

186
00:11:58.809 --> 00:12:03.174
I mostly, for my own sanity,

187
00:12:03.174 --> 00:12:11.388
this point care about consistency
across my API so far.

188
00:12:11.388 --> 00:12:16.990
So then we know that the browser window is
gonna be the one that sent the message.

189
00:12:16.990 --> 00:12:21.860
I feel like that is always gonna make me
happier, so I'm gonna do that instead.

190
00:12:24.409 --> 00:12:28.940
All right, so now we'll go and
see if we've got a current file path,

191
00:12:28.940 --> 00:12:30.674
if not we'll ask for one.

192
00:12:30.674 --> 00:12:33.914
If there's no file, still we're done,

193
00:12:33.914 --> 00:12:38.646
we're not doing anything here,
and we should be good to go.

194
00:12:40.634 --> 00:12:42.854
What is going on here?

195
00:12:45.664 --> 00:12:49.589
Find out why I'm getting yelled
at here because whatever or no?

196
00:12:49.589 --> 00:12:51.650
Yeah, there's no browser window,

197
00:12:51.650 --> 00:12:56.570
we have nowhere to get the file
contents from Deal with that later.

198
00:12:56.570 --> 00:13:00.224
I don't have a use case where I
wouldn't have a browser window.

199
00:13:00.224 --> 00:13:01.900
So we'll just keep TypeScript happy.

200
00:13:01.900 --> 00:13:06.550
So ideally, this should go through and
give me the effect that I'm looking for.

201
00:13:06.550 --> 00:13:11.401
If not, I will have to live debug and
figure it out cuz I made

202
00:13:11.401 --> 00:13:16.253
some decisions along the way
that felt right at the time and

203
00:13:16.253 --> 00:13:20.034
then we'll see as I think through it,
cool.

204
00:13:20.034 --> 00:13:24.474
So there'll be some other things
that we need to do here cuz we will

205
00:13:24.474 --> 00:13:29.267
theoretically at that point,
has a file, needs a file path, right?

206
00:13:29.267 --> 00:13:34.712
Somehow, yeah, we're getting
the file path, should be good along,

207
00:13:34.712 --> 00:13:39.428
a lot of these ways and yeah,
that should do the trick for me but

208
00:13:39.428 --> 00:13:44.540
as you can see, there's a lot of
confidence in my voice right now.

209
00:13:44.540 --> 00:13:45.739
so we will find out together.

210
00:13:50.514 --> 00:13:51.715
All right, moment of truth.

211
00:14:04.119 --> 00:14:09.669
Fun fact, if you don't turn the button on,
you have an issue there as well.

212
00:14:09.669 --> 00:14:12.940
I want to control that based
on that current file context.

213
00:14:12.940 --> 00:14:18.070
But let's cheat for a moment cuz that
button doesn't do anything currently.

214
00:14:18.070 --> 00:14:20.214
So let's get that in place as well.

215
00:14:20.214 --> 00:14:23.924
Cool.

216
00:14:23.924 --> 00:14:29.214
So we'll say elements I say File button.

217
00:14:33.360 --> 00:14:38.469
Get that will pass it through that should
do the trick for me at this point.

218
00:14:38.469 --> 00:14:40.995
We don't necessarily
need to await anything.

219
00:14:40.995 --> 00:14:43.974
And then we'll also just for now,

220
00:14:56.268 --> 00:14:59.994
SaveFileButton does not exist
as a save Markdown, cool.

221
00:15:02.749 --> 00:15:07.048
Are you glad to not live trying
to remember, get element by IDs?

222
00:15:07.048 --> 00:15:11.824
Cool, all right, so I shouldn't
need any changes at that point.

223
00:15:18.084 --> 00:15:20.259
Awesome.

224
00:15:22.335 --> 00:15:24.824
And now we'll go check that folder.

225
00:15:24.824 --> 00:15:27.764
We've got hello and it wrote the file.

226
00:15:27.764 --> 00:15:29.330
So now we can save the file,

227
00:15:29.330 --> 00:15:33.555
but saving it again gets me to the same
issue where I save it over and over and

228
00:15:33.555 --> 00:15:37.188
over again, that's not necessarily
what we wanted, right?

229
00:15:37.188 --> 00:15:41.480
So this is where those OS integrations
that we're talking about become kind of

230
00:15:41.480 --> 00:15:42.204
important.

231
00:15:42.204 --> 00:15:48.882
And we need to figure out how to tell our
browser window about all of these things.

232
00:15:48.882 --> 00:15:52.907
So begins to feel a little bit
more like a native application.

233
00:15:52.907 --> 00:15:56.450
So let's go ahead and take a look at that.

