WEBVTT

1
00:00:00.330 --> 00:00:05.220
So we have the ability to open one and
trigger a show open dialog, right?

2
00:00:05.220 --> 00:00:10.123
Show open dialog has
a sibling conveniently titled

3
00:00:10.123 --> 00:00:13.265
show save dialog, right?

4
00:00:13.265 --> 00:00:18.359
And show save dialog does somewhat
the same thing except the opposite and

5
00:00:18.359 --> 00:00:22.215
should be able to give you
the ability to export a file.

6
00:00:22.215 --> 00:00:27.164
We're going to worry about the exporting
the inner HTML of that rendered

7
00:00:27.164 --> 00:00:29.830
view because we're just exporting.

8
00:00:29.830 --> 00:00:32.191
I don't care about knowing
what the current file is and

9
00:00:32.191 --> 00:00:35.590
saving over the current file versus
prompting for a file if we don't have one.

10
00:00:35.590 --> 00:00:36.887
There's a little bit of nuance and

11
00:00:36.887 --> 00:00:39.330
intricacies with just saving
a file that I will spare you.

12
00:00:39.330 --> 00:00:41.110
If you want to try that one, go for it.

13
00:00:41.110 --> 00:00:43.431
But we'll try exporting the HTML,
all right,

14
00:00:43.431 --> 00:00:45.820
spend a little bit time
then we'll do together.

15
00:00:48.370 --> 00:00:52.310
&gt;&gt; Anon has a quick question
from the live coding.

16
00:00:54.190 --> 00:01:01.330
Why do we have to use the IPC renderer
on file opened in the preload script?

17
00:01:01.330 --> 00:01:08.122
Shouldn't preload script only contain what
it has to expose to the renderer process?

18
00:01:08.122 --> 00:01:12.650
Why are we even using an IPC
renderer in preload script?

19
00:01:12.650 --> 00:01:17.004
&gt;&gt; So the question is, why are we using
the IPC renderer in the preload script?

20
00:01:17.004 --> 00:01:21.357
I mean, part of that is it's
the only place we can use it, right?

21
00:01:21.357 --> 00:01:25.119
IPC render isn't available in
the browser context at all, right?

22
00:01:25.119 --> 00:01:27.558
Unless we pass something in and so

23
00:01:27.558 --> 00:01:33.580
the only place we would get any of these
electron modules is in the preload script.

24
00:01:33.580 --> 00:01:35.570
So it's our only kind of opportunity.

25
00:01:35.570 --> 00:01:40.020
Now we can argue that instead
of modifying the DOM directly,

26
00:01:40.020 --> 00:01:45.967
I should be labeled to maybe register
a callback or something along those lines.

27
00:01:45.967 --> 00:01:53.900
And I can do something like OnFileOpened
or onFileOpen I like that better.

28
00:01:53.900 --> 00:01:59.535
And this is a very okay pattern as
well and I could say something like,

29
00:01:59.535 --> 00:02:03.907
allow the renderer process
to just say OnFileOpen and

30
00:02:03.907 --> 00:02:09.190
then listen to that message and
pass the callback through.

31
00:02:09.190 --> 00:02:11.020
That will work as well.

32
00:02:11.020 --> 00:02:15.240
And then I don't modify the DOM in here,
right?

33
00:02:15.240 --> 00:02:19.092
And I do it in the renderer
process like that would work too.

34
00:02:19.092 --> 00:02:22.036
And arguably,
that's possibly better, right?

35
00:02:22.036 --> 00:02:24.097
I don't know at this
point in a simple app,

36
00:02:24.097 --> 00:02:27.260
I don't know how much it goes either way,
but we can go with that.

37
00:02:27.260 --> 00:02:29.670
Let's, let's actually just do it.

38
00:02:30.850 --> 00:02:33.850
So let's say we'll move this code through.

39
00:02:33.850 --> 00:02:40.559
And now in the renderer process,
Let's go and

40
00:02:40.559 --> 00:02:45.844
we'll say, I gotta add that to the type,

41
00:02:45.844 --> 00:02:49.620
so we'll say, OnFileOpen.

42
00:02:51.240 --> 00:02:54.780
Where are yeah, it will take a callback
that takes the string of the file content.

43
00:02:54.780 --> 00:02:56.580
And eventually it's gonna
take the file paths.

44
00:02:56.580 --> 00:02:58.920
Let's just be honest with ourselves.

45
00:02:58.920 --> 00:03:02.170
Or could take that since that is
the thing that goes to the channel.

46
00:03:02.170 --> 00:03:04.770
So now it takes a callback.

47
00:03:04.770 --> 00:03:09.243
And we can go into the render and
we can say now instead

48
00:03:13.747 --> 00:03:15.997
OnFileOpen.

49
00:03:19.138 --> 00:03:21.960
And that's where I could
say what I had before.

50
00:03:21.960 --> 00:03:24.010
This should do the trick as well.

51
00:03:25.640 --> 00:03:26.600
What did I call it?

52
00:03:26.600 --> 00:03:28.910
OnFileOpen to save that.

53
00:03:28.910 --> 00:03:36.860
I just think That looks off.

54
00:03:37.930 --> 00:03:40.660
I think it'll actually compile though,
we'll take a look at that a second.

55
00:03:40.660 --> 00:03:43.441
It seems like it's like running
off an old type file from the nine

56
00:03:43.441 --> 00:03:45.102
different times I've had this open.

57
00:03:45.102 --> 00:03:47.950
So I'm gonna have to quit VS code and
start it again.

58
00:03:47.950 --> 00:03:52.608
But this should do the trick where instead
of, to summarize what I just did here is

59
00:03:52.608 --> 00:03:56.306
before we were listening to
the message and modifying the DOM and

60
00:03:56.306 --> 00:04:00.375
there were questions of why should
the [INAUDIBLE] touch the DOM at all?

61
00:04:00.375 --> 00:04:01.306
And that's fair.

62
00:04:01.306 --> 00:04:05.266
So now we're actually saying hey,
we have this OnFileOpen where

63
00:04:05.266 --> 00:04:08.578
you can send us a call back of
what you would like to do and

64
00:04:08.578 --> 00:04:11.940
then we will then register
that here as well.

65
00:04:11.940 --> 00:04:14.199
So let's go ahead and
make sure that works and

66
00:04:14.199 --> 00:04:16.287
then we'll solve the other pieces well.

67
00:04:22.773 --> 00:04:28.030
Now we can open it,
go in here as well, same basic idea.

68
00:04:28.030 --> 00:04:30.090
So we can either do it directly in there,

69
00:04:30.090 --> 00:04:32.520
we can have the ability
to register callbacks.

70
00:04:32.520 --> 00:04:35.810
We'll do something like this
later in the workshop as well.

71
00:04:35.810 --> 00:04:38.080
Both of those are totally fine.

72
00:04:38.080 --> 00:04:42.154
Arguably this gives you a little bit
more granularity to have other yeah,

73
00:04:42.154 --> 00:04:44.010
especially in a larger app.

74
00:04:44.010 --> 00:04:46.858
Then might have components that
are mounted and unmounted and

75
00:04:46.858 --> 00:04:48.320
stuff along those lines.

76
00:04:48.320 --> 00:04:51.100
You might find yourself
doing something like this.

77
00:04:51.100 --> 00:04:53.630
In fact, you could theoretically,
if you're using React,

78
00:04:53.630 --> 00:04:55.685
you could write a React hook around this,
right?

79
00:04:55.685 --> 00:04:59.892
Which is just all of a sudden registers,
the things that it cares about, and

80
00:04:59.892 --> 00:05:01.820
handles stuff along those lines.

81
00:05:01.820 --> 00:05:04.920
All those abstractions
make total sense as well.

82
00:05:04.920 --> 00:05:05.940
So I've got that and

83
00:05:05.940 --> 00:05:10.210
now I don't care about any of the elements
in the DOM as well, so that's kinda cool.

84
00:05:11.690 --> 00:05:18.800
On the export piece, let's go and
solve for that as well.

85
00:05:18.800 --> 00:05:22.630
I'm gonna start in the type just simply so
I don't have to go back.

86
00:05:22.630 --> 00:05:25.683
And I think this is gonna start with,
showExportHtmlDialog,

87
00:05:25.683 --> 00:05:27.249
it seens like good enough name.

88
00:05:27.249 --> 00:05:32.641
And so we've got that there and
then in our preload we can

89
00:05:32.641 --> 00:05:40.351
just register that showExportHtmlDialog
which will then send a message over.

90
00:05:40.351 --> 00:05:46.660
Now, I could just show it and
then I could ask for the HTML again.

91
00:05:46.660 --> 00:05:50.194
But I'm probably sure if I'm going
to show the ExportHtmlDialog,

92
00:05:50.194 --> 00:05:52.990
what's going to happen next
after they pick a place?

93
00:05:52.990 --> 00:05:55.360
Probably going to save the HTML, right?

94
00:05:55.360 --> 00:05:57.200
So I'm going to choose to kind of send.

95
00:05:57.200 --> 00:06:01.940
So we're going to say that this
actually take some HTML as a string and

96
00:06:01.940 --> 00:06:05.900
call it content and
call it whatever you want.

97
00:06:05.900 --> 00:06:09.590
I will send that through as well,
make sure I said that my type.

98
00:06:09.590 --> 00:06:10.150
I did not.

99
00:06:12.560 --> 00:06:16.032
And there is a way to like derive
this from the context bridge which I

100
00:06:16.032 --> 00:06:18.946
was gonna show you later but
I might become impatient and

101
00:06:18.946 --> 00:06:21.750
show you sooner, we'll find out.

102
00:06:21.750 --> 00:06:24.130
All right, so we've got that.

103
00:06:25.620 --> 00:06:28.040
Now the next part is this.

104
00:06:28.040 --> 00:06:29.340
We don't need this console log anymore.

105
00:06:29.340 --> 00:06:30.510
We get the point.

106
00:06:30.510 --> 00:06:37.510
We'll do the elements,
ExportHtmlButton, where we'll grab.

107
00:06:37.510 --> 00:06:39.070
This is the rendered view.

108
00:06:40.210 --> 00:06:43.838
We'll grab the HTML from
the render view and

109
00:06:43.838 --> 00:06:48.030
we will send that to the show HTML dialog.

110
00:06:48.030 --> 00:06:49.219
What does it say of HTML?

111
00:06:53.610 --> 00:06:54.841
Elements plural.

112
00:06:58.840 --> 00:07:02.469
ExportHtmlButton, cool so
we'll grab it from the DOM and

113
00:07:02.469 --> 00:07:07.000
we're just gonna send it along that
message that we just set up, right?

114
00:07:07.000 --> 00:07:09.720
And now we need to go catch it
in our main process, right?

115
00:07:09.720 --> 00:07:11.600
So at this point, we should be.

116
00:07:11.600 --> 00:07:13.090
We should have the event listener.

117
00:07:13.090 --> 00:07:14.740
We should grab the HTML.

118
00:07:14.740 --> 00:07:19.797
The window.api.export or
showExportHtmlDialog will and

119
00:07:19.797 --> 00:07:24.090
I guess I could call
that export HTML as well.

120
00:07:24.090 --> 00:07:25.210
It's up to you.

121
00:07:25.210 --> 00:07:28.918
I'm changing my mind rapidly back and
forth in each direction, but

122
00:07:28.918 --> 00:07:30.870
we'll keep it for now.

123
00:07:30.870 --> 00:07:34.467
And we'll say, this will send
the message all along and again,

124
00:07:34.467 --> 00:07:38.010
you could just choose to call
it export HTML, that's not bad.

125
00:07:39.300 --> 00:07:44.342
And but let's go listen for it over on
this side, which is when we receive that

126
00:07:44.342 --> 00:07:49.167
message, we'll have the event,
we'll have the HTML that we received.

127
00:07:49.167 --> 00:07:51.550
I don't need the event just yet.

128
00:07:51.550 --> 00:07:57.262
Now, I get to choose whether or not I need
to tell the Window that this happened,

129
00:07:57.262 --> 00:07:59.490
right, in either direction.

130
00:07:59.490 --> 00:08:02.550
I don't necessarily need that immediately.

131
00:08:02.550 --> 00:08:07.212
And I will use this as an example to show
you the difference between invoke versus

132
00:08:07.212 --> 00:08:12.240
on, but let's keep it simple and
get the core functionality working first.

133
00:08:12.240 --> 00:08:15.715
And so we'll get this and
then actually I'm gonna

134
00:08:15.715 --> 00:08:20.610
want the event because I need the browser
window need is a strong word.

135
00:08:20.610 --> 00:08:22.770
I want to do the same thing where
it's attached to the window.

136
00:08:22.770 --> 00:08:25.390
So I need to know who sent it to me.

137
00:08:25.390 --> 00:08:28.496
So that becomes very similar to
what we had here, which is like,

138
00:08:28.496 --> 00:08:29.540
who sent this event?

139
00:08:30.590 --> 00:08:31.935
Get me the browser window so

140
00:08:31.935 --> 00:08:35.340
I can attach a dialogue to it is
effectively what we're saying here.

141
00:08:36.918 --> 00:08:43.490
And so now we've got,
let's give ourselves a function.

142
00:08:43.490 --> 00:08:47.350
Let's put it, let's be at least
a little bit organized here.

143
00:08:47.350 --> 00:08:51.241
We'll say, const show ExportHTMLDialogue,

144
00:08:51.241 --> 00:08:55.235
which will take the browser window and
the HTML.

145
00:08:57.389 --> 00:09:01.996
And this is again before we had
dialog dot show open dialog,

146
00:09:01.996 --> 00:09:07.720
this is simply gonna be,
it's going to be the showSaveDialog.

147
00:09:07.720 --> 00:09:09.720
The title you will not see on macOS.

148
00:09:09.720 --> 00:09:12.275
I think you might see it if it's
not attached to the window but

149
00:09:12.275 --> 00:09:14.290
I think it also depends
on the version of macOS.

150
00:09:14.290 --> 00:09:16.220
I don't know if you see
it at all these days.

151
00:09:16.220 --> 00:09:19.878
You will see it in Windows,
I believe, as well.

152
00:09:19.878 --> 00:09:24.980
I don't care about the default
path per se, you can specify

153
00:09:24.980 --> 00:09:30.196
all of those things too but
we'll have that for now in there.

154
00:09:30.196 --> 00:09:33.461
And let's see what else
would we want in here,

155
00:09:33.461 --> 00:09:39.010
I probably want to specify what
the default extension ought to be.

156
00:09:39.010 --> 00:09:42.050
So we'll go ahead, well,
that also it's weird.

157
00:09:42.050 --> 00:09:46.083
It's still filters, but it's mostly
to give it the same kind of like API,

158
00:09:46.083 --> 00:09:49.941
as we had before, which is we'll say
an HTML file with extension HTML.

159
00:09:49.941 --> 00:09:52.010
Could you do htm, you could.

160
00:09:52.010 --> 00:09:54.869
I'm not going to because I don't want to.

161
00:09:54.869 --> 00:09:57.810
So we'll have that result in there.

162
00:09:57.810 --> 00:10:00.285
And then one thing we do want
to do is if it was cancelled,

163
00:10:00.285 --> 00:10:02.884
they just said I don't want to do this,
stop the process.

164
00:10:02.884 --> 00:10:05.148
We're done here.

165
00:10:05.148 --> 00:10:09.733
And you could have different functionality
in here like if we wanted to

166
00:10:09.733 --> 00:10:12.540
tell the DOM like, you cancelled it.

167
00:10:12.540 --> 00:10:14.620
I don't particularly want to.

168
00:10:14.620 --> 00:10:18.978
So this one, that's not true,
because we don't have multiple file paths,

169
00:10:18.978 --> 00:10:24.180
because you can select multiple files, you
can't choose to save to multiple files.

170
00:10:24.180 --> 00:10:29.250
So at this point we'll
just say this is actually

171
00:10:29.250 --> 00:10:35.097
just a single file path
singular on the result object.

172
00:10:35.097 --> 00:10:39.410
Const, talking and
coding at the same time goes super well.

173
00:10:39.410 --> 00:10:41.444
And if for some reason, again, like,

174
00:10:41.444 --> 00:10:44.968
I don't think that I can get this
far without getting us a file path.

175
00:10:44.968 --> 00:10:49.583
But to keep TypeScript happy,
we will then, we don't have a export HTML

176
00:10:49.583 --> 00:10:53.760
just yet, so we're going to get yelled at,
but we'll write it.

177
00:10:55.820 --> 00:10:58.952
We'll say the file path that we'll get
from where they picked in the HTML that we

178
00:10:58.952 --> 00:11:00.530
pass the whole way through.

179
00:11:00.530 --> 00:11:02.150
So lastly, we just need to do that.

180
00:11:02.150 --> 00:11:05.110
So we'll say exportHtml.

181
00:11:05.110 --> 00:11:08.020
They'll take the file path and the string.

182
00:11:08.020 --> 00:11:14.350
And this just becomes node once again,
where we say, make an async function.

183
00:11:14.350 --> 00:11:16.185
And we'll just say like that,

184
00:11:16.185 --> 00:11:19.510
this is gonna be a write file
doesn't return anything.

185
00:11:21.470 --> 00:11:24.210
So pass that through the file path.

186
00:11:25.880 --> 00:11:29.720
Write file not the one from original-fs.

187
00:11:32.558 --> 00:11:37.118
Cool, so we've got this write file that
we've got to pull in from the file system

188
00:11:37.118 --> 00:11:38.270
promises library.

189
00:11:41.903 --> 00:11:49.373
And so we'll export the file it's
tricky like I am probably done here but

190
00:11:49.373 --> 00:11:56.610
I could theoretically also decide
that I want to send something back.

191
00:11:56.610 --> 00:12:00.270
As well of like, okay and
we exported a file.

192
00:12:00.270 --> 00:12:02.838
It's kind of up to you, right,
if you really wanna do that.

193
00:12:02.838 --> 00:12:06.413
I'm not gonna do it for now and we'll kind
of play around with it in a second and

194
00:12:06.413 --> 00:12:08.290
we'll do some experiments.

195
00:12:08.290 --> 00:12:09.880
So we've got the ability to show a file.

196
00:12:09.880 --> 00:12:11.040
We're not doing anything with it.

197
00:12:11.040 --> 00:12:15.101
Again, we need to listen for
this, so we'll go ahead and say.

198
00:12:18.880 --> 00:12:23.810
This should probably, unless I've made
some terrible Boo-Boo along the way,

199
00:12:23.810 --> 00:12:27.957
should receive the message,
show the ExportHTMLDialog, right?

200
00:12:27.957 --> 00:12:30.710
Get the file if it exists, pass it over.

201
00:12:30.710 --> 00:12:34.919
These could probably be put together,
but in following the pattern I did for

202
00:12:34.919 --> 00:12:38.205
open file, which I know there's
nine ways to open a file and

203
00:12:38.205 --> 00:12:42.175
I guess theoretically I think I would
always need a window for this one.

204
00:12:42.175 --> 00:12:43.761
So I could combine them,

205
00:12:43.761 --> 00:12:48.760
I'd rather consistent code than an extra
function ain't bothering nobody.

206
00:12:50.360 --> 00:12:54.210
Cool and so
we should have famous last words.

207
00:12:54.210 --> 00:12:59.161
We should have a somewhat consistent,
full loop here as well and

208
00:12:59.161 --> 00:13:03.019
so now we can go in both directions,
so we'll go,

209
00:13:09.229 --> 00:13:10.920
Let's save HTML, cool.

210
00:13:10.920 --> 00:13:15.330
You can see we automatically
get the .HTML extension.

211
00:13:15.330 --> 00:13:18.024
Everything is as we might expect.

212
00:13:19.950 --> 00:13:22.268
&gt;&gt; And we can save it and
if all went well,

213
00:13:22.268 --> 00:13:24.886
I think I saved it in important documents.

214
00:13:24.886 --> 00:13:26.500
We've got banana.html.

215
00:13:26.500 --> 00:13:31.914
All right, so just open from the file
system, we can write to the file system,

216
00:13:31.914 --> 00:13:36.917
we can do all of those things and get
a whole bunch of that kinda in place and

217
00:13:36.917 --> 00:13:39.730
have that full loop in both directions.

