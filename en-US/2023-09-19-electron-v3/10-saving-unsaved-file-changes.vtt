WEBVTT

1
00:00:00.059 --> 00:00:04.958
So now we want to see if we
have unsaved changes right, and

2
00:00:04.958 --> 00:00:10.877
this is part of the reason we kind of
save the content whenever we go and

3
00:00:10.877 --> 00:00:12.840
store a current file.

4
00:00:12.840 --> 00:00:17.464
And so that allows us to kind of know what
the last time we either originally opened

5
00:00:17.464 --> 00:00:18.080
the file.

6
00:00:18.080 --> 00:00:21.555
Or the last time we saved the file that's
currently kind of getting set in that

7
00:00:21.555 --> 00:00:23.704
case, that's why we do
it all on one function.

8
00:00:23.704 --> 00:00:28.362
Again, the actual specifics of your app
might call for a slightly different

9
00:00:28.362 --> 00:00:32.827
approach, but in the context of what
we're working with, this works.

10
00:00:32.827 --> 00:00:35.948
And so we could say,
is changed has changes,

11
00:00:35.948 --> 00:00:39.578
which one do we like with has changes or
has changed?

12
00:00:43.807 --> 00:00:44.357
&gt;&gt; Has changes.

13
00:00:44.357 --> 00:00:49.189
&gt;&gt; Yeah, has changes good, cuz that's what
I internally had decided too and I was

14
00:00:49.189 --> 00:00:54.184
gonna have to just be really polite if
you'd picked is changed, so that's cool.

15
00:00:54.184 --> 00:00:58.456
In this case, we can just basically say
this is gonna be a super easy function,

16
00:00:58.456 --> 00:01:02.237
which is yeah, current file content
is that the same as the content.

17
00:01:02.237 --> 00:01:07.433
So far, we've been just sending
messages and getting the response.

18
00:01:07.433 --> 00:01:12.383
To be clear, we have been doing
that because I tend to prefer

19
00:01:12.383 --> 00:01:16.749
it versus that kind of invoke,
which I said before.

20
00:01:16.749 --> 00:01:21.537
Allows you almost get a promise,
blurs the fact that they're sending

21
00:01:21.537 --> 00:01:26.176
a message receiving you basically
just get a promise that returns.

22
00:01:26.176 --> 00:01:29.390
But I will show it to you in this case
because I think it makes total sense,

23
00:01:29.390 --> 00:01:31.143
I want to say, does this have changes?

24
00:01:31.143 --> 00:01:34.329
Check the one we have in memory in
the main process and let me know.

25
00:01:34.329 --> 00:01:38.903
But I find that bound send to a response,
I always find out that,

26
00:01:38.903 --> 00:01:43.311
there's actually seven different
ways I want to open a file or

27
00:01:43.311 --> 00:01:46.302
five different ways I want to save a file.

28
00:01:46.302 --> 00:01:50.496
And I tend to want to decouple
the requests and response from each other.

29
00:01:50.496 --> 00:01:56.026
But in this case of like,
yo I got some content is the same

30
00:01:56.026 --> 00:02:02.272
as you have in memory that feels
safe to demonstrate this with.

31
00:02:02.272 --> 00:02:08.512
So instead of IPC main on,
we're gonna use IPC main.handle,

32
00:02:08.512 --> 00:02:14.988
and that is basically saying,
hey I'm gonna return the result,

33
00:02:14.988 --> 00:02:20.423
and that's gonna be a promise
on the render a process.

34
00:02:20.423 --> 00:02:25.769
Under the hood, this is simply just
making a Bi-directional send and

35
00:02:25.769 --> 00:02:28.771
listener and stuff along those lines.

36
00:02:28.771 --> 00:02:34.052
Which is why i find myself
often decoupling them,

37
00:02:34.052 --> 00:02:38.968
so it becomes an async function,
obviously.

38
00:02:38.968 --> 00:02:42.472
Personally care about the event,
the event object, and

39
00:02:42.472 --> 00:02:46.713
this is something I don't tend to use,
but I just wanna point it out.

40
00:02:46.713 --> 00:02:50.318
I'll show you over in this
one where I'm using an on.

41
00:02:50.318 --> 00:02:55.645
I don't tend to use this,
but this is another option

42
00:02:55.645 --> 00:03:01.230
that gets a very similar result,
which is that reply.

43
00:03:01.230 --> 00:03:05.097
It's basically the same way I was
getting the browser window and

44
00:03:05.097 --> 00:03:08.900
I was doing the browser
window.webcontents.send, right?

45
00:03:08.900 --> 00:03:10.864
Event.reply does that for you as well,

46
00:03:10.864 --> 00:03:13.418
the only reason you haven't
seen me use that so far.

47
00:03:13.418 --> 00:03:18.306
Is i've been passing that browser
window to the dialogs and

48
00:03:18.306 --> 00:03:23.389
doing a bunch of other stuff with
it before I send a message back.

49
00:03:23.389 --> 00:03:26.742
Event.reply is the same as
taking event.sender and

50
00:03:26.742 --> 00:03:28.612
sending a message back to it.

51
00:03:28.612 --> 00:03:32.339
I just happen to be doing other stuff
with that browser window outside of

52
00:03:32.339 --> 00:03:34.524
that event handler, so I am not using it.

53
00:03:34.524 --> 00:03:40.355
But it is an option available to you that
I don't tend to use at all that often,

54
00:03:40.355 --> 00:03:45.231
but you might have a use case for
it that I don't right, so yeah.

55
00:03:45.231 --> 00:03:49.888
A lot of what I'm building right
now is taking our various SDKs for

56
00:03:49.888 --> 00:03:53.116
the products that I work on and
building a UI.

57
00:03:53.116 --> 00:03:57.621
The same way that GitHub has got that GUI
for the git stuff, so I'm more decoupled

58
00:03:57.621 --> 00:04:01.492
and passing stuff around a lot more at
what I'm building currently.

59
00:04:01.492 --> 00:04:05.640
But it could be useful to you and is
simpler in a lot of cases, so here we just

60
00:04:05.640 --> 00:04:10.004
want to say has changes for the content,
that will look at the one in memory.

61
00:04:10.004 --> 00:04:14.975
And I would love it if that would
just return back right, to say like,

62
00:04:14.975 --> 00:04:17.386
yo are there changes here or not.

63
00:04:17.386 --> 00:04:22.301
So this will be IPC main.handle instead
of on that is going to be the difference,

64
00:04:22.301 --> 00:04:26.517
on is sending on or just sending
forget and hope the listener is there.

65
00:04:26.517 --> 00:04:31.041
Handle, to your question wherever you
mistype the channel name you will get

66
00:04:31.041 --> 00:04:31.747
yelled at.

67
00:04:31.747 --> 00:04:35.481
Because it is looking for that one and
trying to get a response from it as

68
00:04:35.481 --> 00:04:38.346
nothing catches it,
you will get yelled at, right.

69
00:04:38.346 --> 00:04:42.133
So handle is more of a giving, it still
promises it's still asynchronous, but

70
00:04:42.133 --> 00:04:45.749
it feels a little bit more I'm not sending
to a totally different process and

71
00:04:45.749 --> 00:04:47.289
waiting to hear a message back.

72
00:04:47.289 --> 00:04:51.577
You're just saying, I'm going to invoke
this and I would like the response

73
00:04:51.577 --> 00:04:55.811
in the next line of code, please and so
let's get a sense of how that works.

74
00:04:55.811 --> 00:05:01.695
And so we can start to determine
whether or not the file has changed.

75
00:05:01.695 --> 00:05:06.405
Cuz then we'll hide or
show the save button based on that, and

76
00:05:06.405 --> 00:05:11.582
then we'll also set the document
editing status as well with that.

77
00:05:11.582 --> 00:05:16.943
So yeah, so detecting unsaved changes,
now we need to also call this to see,

78
00:05:16.943 --> 00:05:20.747
cuz the DOM knows what it
currently has it's unsaved.

79
00:05:20.747 --> 00:05:23.050
And we don't know right now,

80
00:05:23.050 --> 00:05:28.497
we have no access to the browser from
here, we can only ask for things.

81
00:05:28.497 --> 00:05:31.211
In fact, we can't even send message,
if you had that browser window,

82
00:05:31.211 --> 00:05:32.855
you can send a message to it and
get a reply.

83
00:05:32.855 --> 00:05:37.493
But generally speaking, we'll have
the DOM on an input or whatever,

84
00:05:37.493 --> 00:05:39.545
I'll try to check, awesome.

85
00:05:39.545 --> 00:05:46.418
So we go back to our preload script, which
is our bridge between will do check for

86
00:05:46.418 --> 00:05:50.637
changes has changes check for
changes, right?

87
00:05:50.637 --> 00:05:54.211
Yeah, you could also watch on the file
system and do this file has changed on

88
00:05:54.211 --> 00:05:57.178
the file system, there's a bunch
of stuff that you could do.

89
00:05:57.178 --> 00:06:01.797
As well check for changes.

90
00:06:03.545 --> 00:06:05.022
Check for unsaved changes.

91
00:06:06.563 --> 00:06:09.826
Check for unsaved changes, here,

92
00:06:09.826 --> 00:06:15.381
we're going to do the IPC render check for
unsaved changes.

93
00:06:15.381 --> 00:06:16.936
I don't know if that's what
I called it over here,

94
00:06:16.936 --> 00:06:18.355
I think we just called it has changes,
right?

95
00:06:21.343 --> 00:06:26.153
Has changes and now you can see
that we hit invoke instead of send,

96
00:06:26.153 --> 00:06:31.249
invoke is basically send a message,
wait for the response, right?

97
00:06:31.249 --> 00:06:36.718
And then return that response
back into this process as well.

98
00:06:36.718 --> 00:06:42.507
So here we can just say, we can just
really return the result we can even

99
00:06:42.507 --> 00:06:48.803
that's an extra line, but let's start
with just console logging it as well.

100
00:06:52.773 --> 00:06:55.357
Cool and I will do something with
that information in a second,

101
00:06:55.357 --> 00:06:57.766
we'll just start by console
logging it as a sanity check.

102
00:06:57.766 --> 00:07:04.764
Before I get too far down
the coding rabbit hole here and

103
00:07:04.764 --> 00:07:09.645
I do need to add that over here as well.

104
00:07:09.645 --> 00:07:12.568
And that will return back
a promise that makes total sense,

105
00:07:12.568 --> 00:07:14.800
we gotta send in the content though,
right?

106
00:07:14.800 --> 00:07:16.864
That's probably what I was missing,
do we send in content?

107
00:07:16.864 --> 00:07:17.719
Yeah, we gotta get that.

108
00:07:21.291 --> 00:07:25.635
Cuz that was the first argument
that we send in content awesome,

109
00:07:25.635 --> 00:07:30.794
I'm just verifying that to make sure,
yep, we send in content as a string.

110
00:07:30.794 --> 00:07:34.537
We check, we return the Boolean,
perfect awesome, so

111
00:07:34.537 --> 00:07:36.933
now we're doing that here as well.

112
00:07:36.933 --> 00:07:41.060
We're also gonna console
log it along the way and

113
00:07:41.060 --> 00:07:46.708
now it's available on that window.api and
we can see it here too.

114
00:07:46.708 --> 00:07:53.728
So now we hopefully, really on the input
that's already an async function,

115
00:07:53.728 --> 00:07:59.219
we can do, Check for

116
00:07:59.219 --> 00:08:05.318
unsaved changes with that markdown,
and what's the issue?

117
00:08:05.318 --> 00:08:07.877
Expected 0 arguments got 1.

118
00:08:10.460 --> 00:08:14.162
Content string in the type, and so

119
00:08:14.162 --> 00:08:18.502
yeah we should have that in place now, so

120
00:08:18.502 --> 00:08:24.643
we will check that upon input,
and let's get a sense.

121
00:08:24.643 --> 00:08:29.060
I wonder I don't need to wait on
the rendering of the markdown on that

122
00:08:29.060 --> 00:08:32.253
response, that's going
to cause lag in my app.

123
00:08:32.253 --> 00:08:38.142
You are still on the hook for performance,
everything you know about web performance

124
00:08:38.142 --> 00:08:43.403
and JavaScript performance applies here
as well, you are not off the hook.

125
00:08:43.403 --> 00:08:46.050
I'm not going to go into
that rant right now though,

126
00:08:46.050 --> 00:08:50.155
we'll save performance talk for our
closing rant and we'll have this in place.

127
00:08:56.062 --> 00:08:59.562
Awesome, so it's changed, right?

128
00:08:59.562 --> 00:09:01.903
True, true, true, true,
true, false, right?

129
00:09:01.903 --> 00:09:04.487
Cuz it was an empty string to begin with,

130
00:09:04.487 --> 00:09:08.673
so now we know if the file has changed or
not, which is super cool.

131
00:09:08.673 --> 00:09:13.313
And so we can go ahead and begin to do
various things based on that information.

132
00:09:13.313 --> 00:09:18.717
And let's go ahead and open a file as
well just to verify that this all works

133
00:09:18.717 --> 00:09:24.751
as expected all right, currently changed,
unchanged, changed, unchanged.

134
00:09:24.751 --> 00:09:29.927
So now we can do two things based on that,
we can go ahead and say,

135
00:09:36.088 --> 00:09:41.389
Elements.save mark down
button disabled is,

136
00:09:47.031 --> 00:09:49.956
So disabled should be the opposite
of has changes, right?

137
00:09:54.021 --> 00:09:56.400
And we can get rid of that line
where I disable it always.

138
00:09:58.475 --> 00:09:59.431
Cool.

139
00:10:06.356 --> 00:10:11.778
The fun part of Vite in memory,
we still have the same file in memory,

140
00:10:11.778 --> 00:10:16.846
but then Vite did the hot module reload,
so that's fun, cool.

141
00:10:16.846 --> 00:10:18.197
So on off, on off,

142
00:10:18.197 --> 00:10:23.949
on off which is when did before I wasn't
messing too much with the nodemon stuff.

143
00:10:23.949 --> 00:10:27.182
Things moving out from under with me
multiple processes stresses me out.

144
00:10:27.182 --> 00:10:29.106
And I knew that if I
turned all that stuff on,

145
00:10:29.106 --> 00:10:31.875
I would have one moment of deep
confusion in front of all of you.

146
00:10:31.875 --> 00:10:36.950
For a very simple thing of one process
restarted when I didn't expect it to,

147
00:10:36.950 --> 00:10:37.515
sweet.

148
00:10:37.515 --> 00:10:40.895
So now we show and hide that button based
on the changes really what we need to do

149
00:10:40.895 --> 00:10:42.519
is now represent that in the window.

150
00:10:42.519 --> 00:10:45.594
Right and then we've got a fairly good,

151
00:10:45.594 --> 00:10:49.401
I might leave you to set
the revert button as well.

152
00:10:49.401 --> 00:10:54.813
In fact, that might be a thing that we do
as an extension exercise at some point.

153
00:10:54.813 --> 00:11:00.171
But we've got the ability to
represent it now in the UI,

154
00:11:00.171 --> 00:11:05.303
we just want to also represent
it in the main process.

155
00:11:05.303 --> 00:11:09.252
You could argue whether or
not it should be handled here or not,

156
00:11:09.252 --> 00:11:12.990
you can make it its own function,
I don't care what you do.

157
00:11:12.990 --> 00:11:17.876
So I'd have to pass in the whole
browser window in there, so

158
00:11:17.876 --> 00:11:20.135
what if I just said in this,

159
00:11:23.479 --> 00:11:29.168
Changed cuz that will be a boolean and
then we can say,

160
00:11:29.168 --> 00:11:33.753
we'll return that changed and we'll say,

161
00:11:41.657 --> 00:11:42.746
Event.

162
00:11:46.417 --> 00:11:53.304
We can't type like that in there, that's
silly, we'll get the browser window again.

163
00:11:59.326 --> 00:12:05.286
And if it is changed, we'll do
the browserWindow.setDocumentEdited

164
00:12:05.286 --> 00:12:08.029
to whether or not it's changed.

165
00:12:08.029 --> 00:12:11.941
And so now we should get that full
kinda OS integration there as well.

166
00:12:18.139 --> 00:12:22.270
And you can kind of see that small,
subtle little dot there,

167
00:12:22.270 --> 00:12:24.872
which is Mac OS's way of telling you.

168
00:12:24.872 --> 00:12:29.454
And I'll leave a little bit this is
an exercise to y'all along with revert,

169
00:12:29.454 --> 00:12:33.979
is that you do get like abilities to
listen for events on the window closed.

170
00:12:33.979 --> 00:12:35.635
So now in your main process,

171
00:12:35.635 --> 00:12:39.087
you know if that given window
has an edited status, right?

172
00:12:39.087 --> 00:12:42.959
And you can listen for a closed event and
you could do stuff, are you sure?

173
00:12:42.959 --> 00:12:46.642
Right, and
those all kind of leave as little extra,

174
00:12:46.642 --> 00:12:50.157
all those little nuances
are the I think the harder

175
00:12:50.157 --> 00:12:54.945
part of building an app is just
getting all those feel things right.

176
00:12:54.945 --> 00:12:56.400
But generally speaking,

177
00:12:56.400 --> 00:12:59.971
electron has given you almost
everything available to do that,

178
00:12:59.971 --> 00:13:04.283
you don't have to do any kind of crazy
stuff like reinvent your own title bar.

179
00:13:04.283 --> 00:13:07.599
A lot of electron apps you see do
reinvent their own title bar,

180
00:13:07.599 --> 00:13:11.965
right like VS code has done it
right behind me, the GitHub app has.

181
00:13:11.965 --> 00:13:18.616
But they're still using the built
in macOS close button same for

182
00:13:18.616 --> 00:13:23.305
windows and
stuff along those lines as well.

