WEBVTT

1
00:00:00.000 --> 00:00:03.602
Kind of like, yes, the things we said we
weren't gonna talk about too much today is

2
00:00:03.602 --> 00:00:05.263
the unique, packaging for every OS.

3
00:00:05.263 --> 00:00:10.007
In Electron Forge,
there is an npm-run package

4
00:00:10.007 --> 00:00:14.180
which will get you 90% of the way there.

5
00:00:14.180 --> 00:00:17.962
Putting in the App Store and getting
the signed certificates through Apple,

6
00:00:17.962 --> 00:00:20.710
that is not any different than
doing it for a native app.

7
00:00:20.710 --> 00:00:24.115
And also very like before I drag everyone
on a Windows computer through how to do it

8
00:00:24.115 --> 00:00:27.132
through the app store,
dropping a $100 in Apple developer thing.

9
00:00:27.132 --> 00:00:31.627
And again, through the Windows store,
that one I will kind of leave as a,

10
00:00:31.627 --> 00:00:35.038
separate process on the actual
productionalizing it,

11
00:00:35.038 --> 00:00:38.322
because that will always be
also a moving target too.

12
00:00:38.322 --> 00:00:41.645
Because Apple changes rules,
Microsoft changes the rules, and

13
00:00:41.645 --> 00:00:45.331
if you wanna be in the app store,
that's obviously different than if you

14
00:00:45.331 --> 00:00:48.486
just wanna sign an app and
put it out there, so on and so forth.

15
00:00:48.486 --> 00:00:53.688
But just npm-run package,
we'll go ahead and create you for

16
00:00:53.688 --> 00:00:58.902
the OS that you are presently on,
that's the other part too.

17
00:00:58.902 --> 00:01:03.190
If you wanna build a Mac, electron app,
you need to run NPM run package on a Mac,

18
00:01:03.190 --> 00:01:07.030
right, if you wanna build it for
Linux, you've got to run it on Linux,

19
00:01:07.030 --> 00:01:10.620
if you wanna build on windows,
you have to build it on windows.

20
00:01:10.620 --> 00:01:15.728
I will say that you are like one
Google search away from a 10

21
00:01:15.728 --> 00:01:22.573
line GitHub action script that says with
a matrix of Mac, Linux, and Windows,

22
00:01:22.573 --> 00:01:28.320
npm-run publish on each of those and
store the asset in there.

23
00:01:28.320 --> 00:01:32.036
There's a really great workshop called
Enterprise UI Development that goes really

24
00:01:32.036 --> 00:01:35.270
into GitHub Actions and how to store
the assets and all that stuff.

25
00:01:35.270 --> 00:01:38.089
So you should just watch that if you
want to figure out how to actually

26
00:01:38.089 --> 00:01:39.730
like bring those two things together.

27
00:01:41.670 --> 00:01:44.885
But generally speaking,
that piece, obviously,

28
00:01:44.885 --> 00:01:49.719
the signing stuff is very much Apple,
Microsoft, what have you, specific.

29
00:01:49.719 --> 00:01:52.436
But the npm-run package will work for
all those things, and

30
00:01:52.436 --> 00:01:55.160
that's why I would highly
recommend using Electron Forge.

31
00:01:55.160 --> 00:01:59.808
Even if you think that you don't need it,
having TypeScript support out of the box,

32
00:01:59.808 --> 00:02:02.754
being able to just plug in
to React Thing very easily,

33
00:02:02.754 --> 00:02:05.458
having the native modules
taken care of for you.

34
00:02:05.458 --> 00:02:10.296
Being able to package it does have support
for like your duty servers that you

35
00:02:10.296 --> 00:02:14.999
are running for the crash reporting,
and or use something like century.

36
00:02:14.999 --> 00:02:19.978
These are like most of those things
don't really differentiate too much

37
00:02:19.978 --> 00:02:22.997
from like how you doing
normally on the web,

38
00:02:22.997 --> 00:02:28.485
it's just that you also get a like Report
crash like method in electron as well.

39
00:02:28.485 --> 00:02:32.018
So those are kind of like a little bit
beyond the like first initial like pass

40
00:02:32.018 --> 00:02:33.941
of getting comfortable and exploring.

41
00:02:33.941 --> 00:02:37.507
Something we can talk about a later
date if we want to, but I think for

42
00:02:37.507 --> 00:02:41.200
the most part, like using Electron Forge
and being mindful that all of

43
00:02:41.200 --> 00:02:46.070
the performance characteristics that
are true in the browser and true in node.

44
00:02:46.070 --> 00:02:48.587
Just because you're using
node in the browser doesn't

45
00:02:48.587 --> 00:02:52.130
like expunge you from either of those,
and just kind of keeping those in mind.

46
00:02:52.130 --> 00:02:55.707
On the other hand, you have a lot of
power and you have the ability to mix and

47
00:02:55.707 --> 00:02:59.405
match these things in like incredibly
interesting ways to build UIs on top of

48
00:02:59.405 --> 00:03:01.870
Node modules or
command line tools that you hate.

49
00:03:01.870 --> 00:03:05.673
You could just orchestrate them and not
have to think about that anymore, like I

50
00:03:05.673 --> 00:03:09.389
like the GitHub App for making commits and
cherry picking and all that stuff.

51
00:03:09.389 --> 00:03:13.208
And it's easier for me than getting
the Shah and remembering the syntax and

52
00:03:13.208 --> 00:03:17.279
like rebasing and Vim and all those kinds
of things that don't want to anymore.

53
00:03:17.279 --> 00:03:20.912
And we're not going to Awesome,
thank you so much.

54
00:03:20.912 --> 00:03:23.481
And have fun building cool stuff right on.

55
00:03:23.481 --> 00:03:27.179
&gt;&gt; [APPLAUSE]

