WEBVTT

1
00:00:00.150 --> 00:00:02.310
All right, so now we've got that in place.

2
00:00:02.310 --> 00:00:07.133
There are a few just other
OS integration niceties and

3
00:00:07.133 --> 00:00:11.955
fun things to inspire you
that I think are super useful

4
00:00:11.955 --> 00:00:15.920
in these kinds of applications.

5
00:00:15.920 --> 00:00:17.120
So we can write to the clipboard.

6
00:00:17.120 --> 00:00:19.170
We can copy from the clipboard.

7
00:00:19.170 --> 00:00:25.340
The other thing that we can do is we
can register global shortcuts, right?

8
00:00:25.340 --> 00:00:28.458
So you saw before when I
made an application menu,

9
00:00:28.458 --> 00:00:33.356
I could have an accelerator like Command
or Ctrl O, right, that would trigger

10
00:00:33.356 --> 00:00:38.277
that file menu, but that's obviously
only while you're in the app, right?

11
00:00:38.277 --> 00:00:42.938
What would be cool if I wanted,
let's say this is holding memes instead of

12
00:00:42.938 --> 00:00:45.884
deep thoughts that I wanted to copy and
paste.

13
00:00:45.884 --> 00:00:50.744
What if I wanted to be able to at
a moment's notice, select something,

14
00:00:50.744 --> 00:00:53.660
hit a keystroke and
have it saved in there,

15
00:00:53.660 --> 00:00:58.200
right, or something along those lines,
from anywhere, right?

16
00:00:58.200 --> 00:01:01.704
And there are applications we probably
have on our computers like that new

17
00:01:01.704 --> 00:01:05.380
CounterEvent, whatever keystroke thing
pops up, or to-do list thing, or

18
00:01:05.380 --> 00:01:06.130
what have you.

19
00:01:06.130 --> 00:01:07.170
We can do that.

20
00:01:07.170 --> 00:01:11.856
That's totally possible in an Electron app
in a way that's not possible in a browser

21
00:01:11.856 --> 00:01:15.290
app, and to no one's surprise,
also, shockingly, easy.

22
00:01:17.420 --> 00:01:21.540
So we've got this thing called
the global shortcut module.

23
00:01:21.540 --> 00:01:24.160
It does what it says on the ten, right?

24
00:01:24.160 --> 00:01:25.660
It registers global shortcuts.

25
00:01:25.660 --> 00:01:28.491
We do need to make sure that our
application is ready, right now,

26
00:01:28.491 --> 00:01:30.970
that is just simply creating a window for
the first time.

27
00:01:30.970 --> 00:01:34.210
So what we do need to do is to say,
well, go.

28
00:01:34.210 --> 00:01:37.378
We still wanna create a window, but

29
00:01:37.378 --> 00:01:41.720
then also we want to
register a global shortcut.

30
00:01:41.720 --> 00:01:47.123
As you can see, GitHub Copilot knows that
I have now built this app about five

31
00:01:47.123 --> 00:01:53.670
times in the last week, and knows what I'm
gonna type next, which is super helpful.

32
00:01:53.670 --> 00:01:58.634
So yeah, in this case,
and again, you can choose.

33
00:01:58.634 --> 00:02:02.191
You know your computer better than me,
to know what keystrokes are not currently

34
00:02:02.191 --> 00:02:05.650
registered by something else that
you have some weird conflict.

35
00:02:05.650 --> 00:02:10.065
But in this case,
you basically, can go ahead,

36
00:02:10.065 --> 00:02:14.374
register a global shortcut
with the same kind of

37
00:02:14.374 --> 00:02:18.810
accelerator syntax that we saw before,
right?

38
00:02:18.810 --> 00:02:20.140
And we could do something like,

39
00:02:29.961 --> 00:02:33.370
Content is,
read whatever is on the clipboard.

40
00:02:33.370 --> 00:02:37.243
And then what we wanna do is send it, or

41
00:02:37.243 --> 00:02:43.310
let's even just do the simplest
possible thing right now.

42
00:02:43.310 --> 00:02:45.580
Again, you know how the IPC stuff works.

43
00:02:45.580 --> 00:02:49.045
You can send a message to,
in this case, our one browser window,

44
00:02:49.045 --> 00:02:52.410
you can get the currently
focused browser window, right?

45
00:02:52.410 --> 00:02:55.230
This application strikes me as one where
I only ever want one browser window.

46
00:02:55.230 --> 00:02:57.592
So I might choose to move
some of that logic and

47
00:02:57.592 --> 00:02:59.650
store it in a variable at the top scope.

48
00:02:59.650 --> 00:03:04.053
And you can send a message to it and
then, say, OS, this comes in,

49
00:03:04.053 --> 00:03:08.771
before we did, we registered the handler
ON file open, in a react app,

50
00:03:08.771 --> 00:03:13.280
we might choose to, for instance,
have a use effect hook, right?

51
00:03:13.280 --> 00:03:16.675
Component mounts, start listening for
anything over the channel,

52
00:03:16.675 --> 00:03:18.897
saying, a new clipping has come in, and

53
00:03:18.897 --> 00:03:22.360
then add it into the store the same
way we would in a react app.

54
00:03:22.360 --> 00:03:26.748
Let's just do the simplest possible thing
right now, cuz I think, how you wire up

55
00:03:26.748 --> 00:03:30.638
the different pieces is stuff we've
covered over and over again so far.

56
00:03:30.638 --> 00:03:36.434
But I think do the idea of
registering the global shortcode and

57
00:03:36.434 --> 00:03:41.895
seeing it in place, so
this is why I was to say, we'll do,

58
00:03:41.895 --> 00:03:46.595
yeah, I mean,
that's gonna be the main window.

59
00:03:52.663 --> 00:04:00.210
Browser window, just go ahead and
the return value of that create window.

60
00:04:00.210 --> 00:04:06.172
And we'll just say, Browserwindow.show,

61
00:04:11.080 --> 00:04:13.250
So window.focus.

62
00:04:13.250 --> 00:04:18.470
So from anywhere, I just even want to
pull the app up as the foremost thing.

63
00:04:18.470 --> 00:04:25.909
I'm trying to remember if I need to also,
if I wanna be able to make,

64
00:04:25.909 --> 00:04:31.210
yeah, let's also focus the app as well.

65
00:04:31.210 --> 00:04:33.710
So this should, theoretically,

66
00:04:33.710 --> 00:04:39.090
this is a live decision I've made
at the moment, Cmd, Ctrl+Shift+C.

67
00:04:39.090 --> 00:04:42.400
Just cuz I don't know what I've got
registered, I'm also gonna say all.

68
00:04:42.400 --> 00:04:44.561
So I've gotta hit Cmd,
Ctrl+Shift+Option+C.

69
00:04:44.561 --> 00:04:50.417
I don't think that does anything else on
my computer presently, so we'll find out.

70
00:04:50.417 --> 00:04:56.519
The other thing that I will say
that you do need to do is app dot,

71
00:04:58.910 --> 00:05:03.397
Onquit, or willquit, somewhere
along those lines in the lifecycle,

72
00:05:03.397 --> 00:05:07.457
you probably wanna do globalShortcut
unregisterAll, right.

73
00:05:07.457 --> 00:05:10.090
If you register them
when the app is quitting,

74
00:05:10.090 --> 00:05:13.530
you should give them back
to the OS cuz it's polite.

75
00:05:13.530 --> 00:05:20.750
So we'll have those two pieces in place,
and we'll just do npm, start again.

76
00:05:22.720 --> 00:05:25.119
Cool, and ideally,
what I wanna do is go over here.

77
00:05:26.370 --> 00:05:31.185
Look at that, I'm somewhere else,
I'm finding stuff, I have a thought,

78
00:05:31.185 --> 00:05:35.024
I'm gonna go back over the GitHub,
I'm gonna hit Command,

79
00:05:35.024 --> 00:05:37.875
Option, Shift C, Clip Master, right?

80
00:05:37.875 --> 00:05:42.507
And now it is ready to go and I can copy
something from the clipboard, right?

81
00:05:42.507 --> 00:05:47.246
And so you can register these shortcuts
and they kinda work almost anywhere, and

82
00:05:47.246 --> 00:05:50.045
they're ready to rock and
roll for you as well.

