WEBVTT

1
00:00:00.140 --> 00:00:05.898
With that, what we'd love to do
now is define some methods for

2
00:00:05.898 --> 00:00:12.460
writing data to the clipboard and
reading data from the clipboard.

3
00:00:12.460 --> 00:00:19.149
Now, the browser also does have some
browser-based clipboard stuff, but

4
00:00:19.149 --> 00:00:26.530
it is bound by all the same constraints
that it has in the browser as well, right?

5
00:00:26.530 --> 00:00:30.446
Especially you can turn web security
off in the browser window too,

6
00:00:30.446 --> 00:00:32.930
I'm just not gonna show
you how to do that.

7
00:00:32.930 --> 00:00:34.789
We're gonna pretend that doesn't exist.

8
00:00:36.850 --> 00:00:41.194
So the easiest way,
in the same way we've seen for

9
00:00:41.194 --> 00:00:47.500
a lot of things, there is
a clipboard module in there as well.

10
00:00:47.500 --> 00:00:52.770
And I'll kinda show you,
we can hopefully see in here.

11
00:00:52.770 --> 00:00:56.960
It's got available format,
so what's on the clipboard?

12
00:00:56.960 --> 00:00:59.600
Whether or not it's got a given format,
you can read from it.

13
00:00:59.600 --> 00:01:03.841
You could also just seek to only read,
get me the text, the html, the image,

14
00:01:03.841 --> 00:01:06.970
the rich text, for
whatever you're looking for.

15
00:01:06.970 --> 00:01:09.700
I'm just gonna pretend that the only
thing exists is text right now.

16
00:01:09.700 --> 00:01:12.529
But if you were making
an image resizing application,

17
00:01:12.529 --> 00:01:16.600
the ability to paste in an image on your
clipboard would be super cool, right?

18
00:01:16.600 --> 00:01:18.800
The ability to write
an image to the clipboard.

19
00:01:18.800 --> 00:01:19.550
Any of those things.

20
00:01:19.550 --> 00:01:22.610
You can do it programmatically as well,
right?

21
00:01:22.610 --> 00:01:23.468
You can do it with buffers.

22
00:01:23.468 --> 00:01:25.440
You can do anything that you want.

23
00:01:25.440 --> 00:01:27.850
You can look at all of
these on your own time.

24
00:01:27.850 --> 00:01:31.819
We're mostly just gonna kind of look at
the very base case of just the text at

25
00:01:31.819 --> 00:01:33.060
this point.

26
00:01:33.060 --> 00:01:36.160
And so we are gonna say ipcMain.

27
00:01:36.160 --> 00:01:37.060
Do I want handle?

28
00:01:37.060 --> 00:01:39.130
We could do handle.

29
00:01:39.130 --> 00:01:42.130
What are we thinking?

30
00:01:42.130 --> 00:01:42.940
Are we thinking handle or
are we thinking on?

31
00:01:44.060 --> 00:01:45.860
I'm thinking on is the right choice.

32
00:01:45.860 --> 00:01:49.288
I don't feel strongly about this,
.on, at least for

33
00:01:49.288 --> 00:01:53.340
the writing to the clipboard
cuz I don't need a response.

34
00:01:53.340 --> 00:01:58.339
We're gonna say write-to-clipboard, and

35
00:01:58.339 --> 00:02:01.294
we'll have that in place.

36
00:02:01.294 --> 00:02:03.251
Really, I just care about the value.

37
00:02:03.251 --> 00:02:05.977
The only other things
on the clipping type,

38
00:02:05.977 --> 00:02:09.953
as you can see before is I store
an ID cuz React gets very angry with

39
00:02:09.953 --> 00:02:13.435
me if I don't have a unique
ID when iterating over list.

40
00:02:13.435 --> 00:02:15.240
I don't actually use the type.

41
00:02:15.240 --> 00:02:18.487
It was just in case I
wanted to get fancy later,

42
00:02:18.487 --> 00:02:21.066
if I wanted to wing it at a later date,

43
00:02:21.066 --> 00:02:27.920
which I'm not feeling super strong about
after I could remember two dashes before.

44
00:02:27.920 --> 00:02:31.475
We're just gonna go with
the content in this case,

45
00:02:31.475 --> 00:02:35.740
at which point we can just say
write it to the clipboard.

46
00:02:35.740 --> 00:02:36.610
We'll do the other one.

47
00:02:36.610 --> 00:02:38.884
We could do a handle on that one.

48
00:02:41.732 --> 00:02:46.578
We'll say, so we've got the ability
to write to the clipboard,

49
00:02:46.578 --> 00:02:49.675
and we'll say read-from-clipboard.

50
00:02:53.725 --> 00:02:58.585
And as you can imagine, what these two
things do is pretty straightforward.

51
00:03:03.605 --> 00:03:07.070
Again, there's a whole bunch of different
ways you can modify this and kinda.

52
00:03:07.070 --> 00:03:11.983
One of my hopes is that there are a whole
bunch of ideas that you have,

53
00:03:11.983 --> 00:03:14.840
but like we can kinda get that in place.

54
00:03:14.840 --> 00:03:16.260
We've got to read-from-clipboard,
write-to-clipboard.

55
00:03:16.260 --> 00:03:20.580
We're gonna have to change these
a little bit as we go along, but

56
00:03:20.580 --> 00:03:24.270
we've got some of the core
kinda pieces in here.

57
00:03:24.270 --> 00:03:29.013
We could turn this into a handle,
we could turn into a event.reply,

58
00:03:29.013 --> 00:03:33.150
trying to think,
want to do handle this time?

59
00:03:33.150 --> 00:03:33.770
Handle feels good.

60
00:03:35.570 --> 00:03:39.380
All right, so we've got that in place.

61
00:03:39.380 --> 00:03:44.400
Yeah, let's try that out and
let's add that into our preload script.

62
00:03:45.840 --> 00:03:51.090
So now, what we do is we simply say,

63
00:03:51.090 --> 00:03:54.240
write to clipboard.

64
00:03:56.220 --> 00:03:59.155
We just decided to take the content,
right?

65
00:04:02.764 --> 00:04:07.620
And we'll say, that's not how that works.

66
00:04:07.620 --> 00:04:08.900
ipcRenderer.

67
00:04:11.210 --> 00:04:13.898
We'll send that, and then,

68
00:04:15.667 --> 00:04:20.695
read-from-clipboard is the other one
that we decided before I named it.

69
00:04:25.178 --> 00:04:26.620
Read-from-clipboard, that's a good name.

70
00:04:27.950 --> 00:04:32.790
read-from-clipboard, it
should be an async function.

71
00:04:35.160 --> 00:04:39.860
And what that's gonna do is,
we'll do ipcRenderer.invoke,

72
00:04:39.860 --> 00:04:43.350
read from clipboard,
and we'll return that.

73
00:04:43.350 --> 00:04:44.672
It doesn't actually need to be async,

74
00:04:44.672 --> 00:04:46.440
cuz we're just gonna return
the promise directly.

75
00:04:48.090 --> 00:04:54.271
So ideally, this will go ahead and,
it will send a message, right?

76
00:04:54.271 --> 00:04:56.865
That will then go back to index.ts.

77
00:04:56.865 --> 00:05:00.280
It will read, we do need to make
sure we return something here.

78
00:05:00.280 --> 00:05:05.750
It will return that back which
then we have access to, awesome.

79
00:05:05.750 --> 00:05:09.950
If we wanted to break this up, you could
do event.reply and have a from clipboard,

80
00:05:09.950 --> 00:05:11.514
something along those lines.

81
00:05:11.514 --> 00:05:14.334
Those are also options but
this is what we decided now.

82
00:05:14.334 --> 00:05:15.876
And so that's what we're gonna go with.

83
00:05:15.876 --> 00:05:23.860
The cool thing is if you look at api now,
it is like these functions by default.

84
00:05:23.860 --> 00:05:27.178
And then if we go into,

85
00:05:28.334 --> 00:05:32.570
Here you can see that they are now on
the window object automatically, right?

86
00:05:32.570 --> 00:05:37.940
And that's kind of what I did before
to set up that kinda dynamic typing.

87
00:05:37.940 --> 00:05:40.650
The other thing that we need
to do is contextBridge.

88
00:05:44.060 --> 00:05:48.016
And do the same thing,
under the API key, we take that object,

89
00:05:48.016 --> 00:05:52.208
we had that all in the same thing before,
now it's separated out.

90
00:05:52.208 --> 00:05:57.182
We can do the typing dynamically, we will
get all those things on the window.API

91
00:05:57.182 --> 00:06:00.640
thing, automagically,
everything will be good.

92
00:06:00.640 --> 00:06:06.710
So now, right now, this button
here doesn't do anything, right?

93
00:06:06.710 --> 00:06:11.274
Well, if I want to write something and
save it to this app, right,

94
00:06:11.274 --> 00:06:12.750
cool, cool, cool.

95
00:06:12.750 --> 00:06:14.027
I can do that.

96
00:06:14.027 --> 00:06:16.980
But this button to copy what's
currently on the clipboard and

97
00:06:16.980 --> 00:06:19.730
added to the app/ That
doesn't do anything, right?

98
00:06:19.730 --> 00:06:23.143
And so what I wanna do is I
want to make it do something.

99
00:06:23.143 --> 00:06:25.420
So it's pretty easy to do.

100
00:06:25.420 --> 00:06:31.555
We simply say, onClick.

101
00:06:37.667 --> 00:06:43.075
And we'll just say,
it wants to do the one from the browser,

102
00:06:43.075 --> 00:06:48.815
but we'll do actually the electron
one at this point, so await.

103
00:06:55.429 --> 00:06:57.142
So we'll get that.

104
00:06:57.142 --> 00:06:58.780
Is it read from clipboard?

105
00:06:58.780 --> 00:07:02.020
Yep, love me some TypeScript.

106
00:07:02.020 --> 00:07:09.348
And then, what we'll do is we'll do,
I've got that hook, that is just,

107
00:07:09.348 --> 00:07:15.068
it's dispatched to a useReducer to make
our life a little bit easier as well.

108
00:07:15.068 --> 00:07:18.910
The IPC stuff is not
like super well-typed.

109
00:07:18.910 --> 00:07:23.053
So, if I went in here,
and actually pro tip,

110
00:07:23.053 --> 00:07:27.209
we go into this read-from-clipboard and,

111
00:07:32.758 --> 00:07:35.075
That should actually get me
a slightly better typing.

112
00:07:35.075 --> 00:07:38.812
You are somewhat on the hook
on your own in this case.

113
00:07:38.812 --> 00:07:43.196
If I go into application now,
that should now be the right type.

114
00:07:43.196 --> 00:07:45.827
It's not perfect in that sense and

115
00:07:45.827 --> 00:07:50.737
I'm sure you can get real fancy
with the typing if you wanted to.

116
00:07:50.737 --> 00:07:55.965
If I was in full I'm teaching
TypeScript mode, I would, but I'm not.

117
00:07:55.965 --> 00:08:00.769
So now we've got that copy from clipboard
where we should be able to read from

118
00:08:00.769 --> 00:08:02.810
the clipboard and have it work.

119
00:08:02.810 --> 00:08:06.778
I don't know if I've restarted this
thing since I added those IPC hooks,

120
00:08:06.778 --> 00:08:09.216
so I'm gonna do that so
I don't lose my mind.

121
00:08:09.216 --> 00:08:15.034
And what I'm gonna do is go here,
I'm gonna say like Hello World.

122
00:08:15.034 --> 00:08:18.868
I'm gonna select that, I'm gonna cut it.

123
00:08:18.868 --> 00:08:22.412
Ad now read-from-the clipboard
through the main process.

