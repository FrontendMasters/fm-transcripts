WEBVTT

1
00:00:00.094 --> 00:00:02.448
&gt;&gt; Brian Holt: That's the product here.

2
00:00:02.448 --> 00:00:06.899
So hopefully, you kinda got to this point
and what you should do after this is you

3
00:00:06.899 --> 00:00:09.299
should go style this and
make it look nice.

4
00:00:09.299 --> 00:00:13.336
Again, the one that I had looks like this.

5
00:00:15.908 --> 00:00:18.141
&gt;&gt; Brian Holt: Looks a little bit nicer,
it has a nice header.

6
00:00:18.141 --> 00:00:22.096
And I put the select up
here in the header, so.

7
00:00:22.096 --> 00:00:26.671
Kind of sky's the limit there for
whatever you want to do with it.

8
00:00:29.082 --> 00:00:29.824
&gt;&gt; Brian Holt: Yeah.

9
00:00:29.824 --> 00:00:34.472
&gt;&gt; Speaker 2: So I'm still unclear about
when to put the semicolon in JavaScript

10
00:00:34.472 --> 00:00:39.286
because it looks like you, so
you put it after every expression, but

11
00:00:39.286 --> 00:00:40.874
not after a function.

12
00:00:40.874 --> 00:00:44.716
So if you scroll up,
what is that semi colon ending?

13
00:00:44.716 --> 00:00:46.882
&gt;&gt; Brian Holt: Which one?
&gt;&gt; Speaker 2: The event listener,

14
00:00:46.882 --> 00:00:48.637
the one on line 59.

15
00:00:48.637 --> 00:00:52.420
&gt;&gt; Brian Holt: So
it's ending at event listener right there.

16
00:00:52.420 --> 00:00:54.263
So you can see it matches
to that parentheses.

17
00:00:54.263 --> 00:00:57.283
You can see how they're both highlighted.

18
00:00:57.283 --> 00:01:00.253
&gt;&gt; Speaker 2: So do you need
that after every event listener?

19
00:01:00.253 --> 00:01:03.268
&gt;&gt; Brian Holt: You don't
ever really need it.

20
00:01:03.268 --> 00:01:09.157
So colons are technically
optional in JavaScript.

21
00:01:09.157 --> 00:01:12.473
And you'll see, I'm sure there's some time
in here that I didn't write it that I

22
00:01:12.473 --> 00:01:14.412
probably should have,
like this one, right?

23
00:01:14.412 --> 00:01:17.913
I should have written on that one,
but I didn't.

24
00:01:17.913 --> 00:01:19.063
&gt;&gt; Speaker 2: But it doesn't matter.

25
00:01:19.063 --> 00:01:20.565
&gt;&gt; Brian Holt: But it doesn't matter.

26
00:01:20.565 --> 00:01:22.182
&gt;&gt; Speaker 2: Okay.

27
00:01:22.182 --> 00:01:25.910
&gt;&gt; Brian Holt: So different people
have different stances on whether or

28
00:01:25.910 --> 00:01:29.102
not they want,
how they feel about semicolons.

29
00:01:29.102 --> 00:01:31.727
And I just don't care.

30
00:01:31.727 --> 00:01:36.590
I actually have a tool here that's called
prettier, you can see it down here,

31
00:01:36.590 --> 00:01:40.800
in the bottom right of my screen,
I turned it off for this workshop.

32
00:01:40.800 --> 00:01:45.013
But it actually reformats my code
every single time I saves, and

33
00:01:45.013 --> 00:01:48.381
it inserts all the semi-colons for me.

34
00:01:48.381 --> 00:01:52.605
&gt;&gt; Speaker 2: But it won't break
anything if you missed that semicolon or

35
00:01:52.605 --> 00:01:54.856
the one after data.message
&gt;&gt; Brian Holt: So

36
00:01:54.856 --> 00:02:00.187
there's one kind of quarter
case where it can mess you up.

37
00:02:00.187 --> 00:02:01.934
It's really weird.

38
00:02:01.934 --> 00:02:05.924
So if I had const x = something, and

39
00:02:05.924 --> 00:02:10.180
this was some sort of function call and

40
00:02:10.180 --> 00:02:13.638
I left off the semicolon here.

41
00:02:13.638 --> 00:02:20.759
And then on the next line I wanted
to do something like 1,2,3.map.

42
00:02:24.573 --> 00:02:28.878
&gt;&gt; Brian Holt: Then this takes some number
and doubles it or something like that.

43
00:02:33.768 --> 00:02:36.401
&gt;&gt; Brian Holt: Technically,
in this case, this is ambiguous.

44
00:02:36.401 --> 00:02:40.173
This not something you ever
really have to care about.

45
00:02:40.173 --> 00:02:42.971
Because if this goes
back to the next line,

46
00:02:42.971 --> 00:02:48.167
this could be accessing an array
of whatever something returns.

47
00:02:48.167 --> 00:02:51.635
&gt;&gt; Brian Holt: So it doesn't know
whether not this expression continues or

48
00:02:51.635 --> 00:02:52.930
whether not it stops.

49
00:02:52.930 --> 00:02:56.314
So in this case, you have to
put a semicolon to disambiguate

50
00:02:56.314 --> 00:02:58.626
if that's not actually what you meant.

51
00:02:58.626 --> 00:03:01.988
&gt;&gt; Speaker 2: But if you're ending
a function with a bracket or

52
00:03:01.988 --> 00:03:05.354
a parentheses you don't
necessarily need one.

53
00:03:05.354 --> 00:03:11.458
&gt;&gt; Brian Holt: No, this is the only
case that it's gonna mess you up.

54
00:03:11.458 --> 00:03:14.326
And what people will do is they'll
actually put the semicolon there,

55
00:03:14.326 --> 00:03:16.230
people that don't like writing semicolons.

56
00:03:16.230 --> 00:03:21.906
Again, you don't normally
have to write code.

57
00:03:21.906 --> 00:03:22.617
This is just trivia.
&gt;&gt; Speaker 2: So

58
00:03:22.617 --> 00:03:27.179
if we did use the image.style.display,

59
00:03:27.179 --> 00:03:33.018
how would we turn it back on
after you change it to none?

60
00:03:33.018 --> 00:03:37.973
&gt;&gt; Brian Holt: So,
&gt;&gt; Brian Holt: style.display = 'none',

61
00:03:37.973 --> 00:03:38.954
right?

62
00:03:38.954 --> 00:03:45.346
Then down here where I have show,
just turn it to block.

63
00:03:45.346 --> 00:03:45.901
&gt;&gt; Speaker 2: Okay.

