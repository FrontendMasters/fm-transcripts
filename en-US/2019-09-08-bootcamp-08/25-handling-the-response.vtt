WEBVTT

1
00:00:00.480 --> 00:00:04.770
&gt;&gt; Brian Holt: So here in the index.html,
I have a doggos class right there.

2
00:00:04.770 --> 00:00:08.130
It's empty div, nothing's in it.

3
00:00:08.130 --> 00:00:11.354
What I wanna do is every
time someone requests a dog,

4
00:00:11.354 --> 00:00:13.710
I want to append an image to it, okay?

5
00:00:14.710 --> 00:00:18.837
So what I'm gonna do here in Doggos.js,
here inside of the .then,

6
00:00:18.837 --> 00:00:21.340
we can get rid of that console down there.

7
00:00:23.370 --> 00:00:28.445
I'm gonna say const img = document,
and there's a thing here

8
00:00:28.445 --> 00:00:33.850
called createElement that we
haven't typically used yet.

9
00:00:33.850 --> 00:00:38.430
But as you might imagine,
this creates a brand new IMG tag, right?

10
00:00:38.430 --> 00:00:42.150
It hasn't attached to the DOM yet, so
we'll do that here in a second, but

11
00:00:42.150 --> 00:00:43.550
it actually creates a new element.

12
00:00:43.550 --> 00:00:46.807
So we're gonna say create a new IMG, okay?

13
00:00:46.807 --> 00:00:54.108
And I'm gonna say image.src
= data.message, right?

14
00:00:57.902 --> 00:00:59.849
&gt;&gt; Brian Holt: And
I'm gonna say image.alt,

15
00:00:59.849 --> 00:01:03.318
the alt text that's gonna be
on it is gonna be Cute doggo.

16
00:01:07.063 --> 00:01:12.461
&gt;&gt; Brian Holt: Then what I'm gonna
say here is, I'm gonna say document

17
00:01:12.461 --> 00:01:18.856
getElement by,
&gt;&gt; Brian Holt: What did I do up there?

18
00:01:18.856 --> 00:01:22.133
QuerySelecter rather,

19
00:01:22.133 --> 00:01:26.668
querySelector.doggos, okay?

20
00:01:26.668 --> 00:01:30.983
And then here I'm gonna say .appendChild.

21
00:01:34.058 --> 00:01:34.942
&gt;&gt; Brian Holt: img.

22
00:01:40.367 --> 00:01:41.882
&gt;&gt; Brian Holt: Or you could put this
on the same line if you want to.

23
00:01:44.616 --> 00:01:45.607
&gt;&gt; Brian Holt: That's up to you.

24
00:01:53.010 --> 00:01:55.450
&gt;&gt; Brian Holt: So line 8 here,
I created a new IMG tag, right?

25
00:01:56.800 --> 00:01:58.130
It doesn't exist yet on the DOM,

26
00:01:58.130 --> 00:02:00.220
I'm creating it programatically
with JavaScript.

27
00:02:01.290 --> 00:02:05.290
I'm setting that image tags source to
whatever message I get back from the API

28
00:02:05.290 --> 00:02:08.830
and sending the alt text to cute doggo.

29
00:02:08.830 --> 00:02:17.358
And then I'm appending that to inside of
the doggos HTML tag that I already have.

30
00:02:17.358 --> 00:02:20.880
That's what does,
is it just takes that element and

31
00:02:20.880 --> 00:02:24.342
it just tags on to the end
whatever you put in there, right?

32
00:02:26.695 --> 00:02:27.335
&gt;&gt; Brian Holt: Make sense?

33
00:02:29.103 --> 00:02:30.994
&gt;&gt; Brian Holt: So
now if you save and refresh this,

34
00:02:30.994 --> 00:02:35.048
hopefully you should start seeing some
dog pictures comeback from the API.

35
00:02:35.048 --> 00:02:38.506
And every time that you refresh
the page you should see a new one.

36
00:02:42.328 --> 00:02:44.833
&gt;&gt; Brian Holt: [LAUGH] I
guess that dog's famous.

37
00:02:44.833 --> 00:02:49.820
Dog has more trophies than I do.

38
00:02:49.820 --> 00:02:55.910
So again, you might image,
rather than requesting data from dog.co,

39
00:02:55.910 --> 00:02:58.192
you might be requesting tweets, right?

40
00:02:58.192 --> 00:03:02.733
And showing the latest tweets about
your favorite sports team, or

41
00:03:02.733 --> 00:03:05.255
politics, or something like that.

42
00:03:08.338 --> 00:03:09.748
&gt;&gt; Brian Holt: And
this is where you do all the processing or

43
00:03:09.748 --> 00:03:11.018
whatever you want to do with that data.

44
00:03:15.043 --> 00:03:19.920
&gt;&gt; Brian Holt: So this is cool, but,
&gt;&gt; Brian Holt: What if you wanna add

45
00:03:19.920 --> 00:03:21.072
a lot a dog pictures,

46
00:03:21.072 --> 00:03:24.977
cuz what's better than one dog picture
is definitely two dog pictures?

47
00:03:24.977 --> 00:03:28.398
So what I'm gonna do here is I'm
gonna go into the index.html, and

48
00:03:28.398 --> 00:03:30.147
I'm going to add another button.

49
00:03:33.693 --> 00:03:39.203
&gt;&gt; Brian Holt: And I'm just gonna say
here at the top button.add-doggo or

50
00:03:39.203 --> 00:03:45.158
something like that, and
we are gonna put an add-doggo button.

51
00:03:50.843 --> 00:03:52.642
&gt;&gt; Brian Holt: Okay, save that.

52
00:03:56.875 --> 00:03:59.970
&gt;&gt; Brian Holt: What I'm gonna do here is
I'm actually going to put all of this

53
00:03:59.970 --> 00:04:01.110
inside of a function.

54
00:04:02.240 --> 00:04:07.461
So I'm actually gonna just
call this function addDoggo.

55
00:04:10.730 --> 00:04:14.718
&gt;&gt; Brian Holt: And I'm just gonna cut
all of this and move it into there.

56
00:04:14.718 --> 00:04:18.238
Or if you're using VS Code you can just
hold Alt and I can just hit up and

57
00:04:18.238 --> 00:04:21.728
down and it will move it up and
down in my code, which is kind of nice.

58
00:04:27.886 --> 00:04:29.222
&gt;&gt; Brian Holt: And
now I have this function,

59
00:04:29.222 --> 00:04:31.473
addDoggo, that I can call
as many times as I want.

60
00:04:34.890 --> 00:04:38.371
&gt;&gt; Brian Holt: And then here at the bottom
I'm just gonna add an event listener

61
00:04:38.371 --> 00:04:43.449
document.addEventListener
&gt;&gt; Brian Holt: Sorry,

62
00:04:43.449 --> 00:04:50.187
not document, but
rather querySelector.add-doggo,

63
00:04:52.811 --> 00:04:54.264
&gt;&gt; Brian Holt: .addEventlistener.

64
00:04:56.447 --> 00:05:02.740
&gt;&gt; Brian Holt: And whenever someone
clicks, I'm just gonna call addDoggo.

65
00:05:08.551 --> 00:05:10.887
&gt;&gt; Brian Holt: Now, if you want you can
just literally move this function right

66
00:05:10.887 --> 00:05:11.933
here and put it right there.

67
00:05:11.933 --> 00:05:13.485
Either works, right?

68
00:05:21.645 --> 00:05:25.100
&gt;&gt; Brian Holt: So now hopefully it
won't load one on initial load, right,

69
00:05:25.100 --> 00:05:27.352
because we never called addDoggo yet.

70
00:05:27.352 --> 00:05:32.432
But if I click addDoggo,
&gt;&gt; Brian Holt: You

71
00:05:32.432 --> 00:05:34.241
can see this one's quite large.

72
00:05:34.241 --> 00:05:40.632
But if I click it again, you can see
there that it keeps adding things to API.

73
00:05:40.632 --> 00:05:44.440
If I click it a bunch of times there's
lots of dogs that come through.

74
00:05:46.510 --> 00:05:48.250
Does that .then thing make sense to you?

75
00:05:48.250 --> 00:05:51.830
It's like here I want you to do
something that's gonna take some time.

76
00:05:51.830 --> 00:05:55.842
And then you call .then, it's like okay,
after that's completed and come back,

77
00:05:55.842 --> 00:05:57.660
right, then do this other thing.

78
00:05:57.660 --> 00:05:59.510
This takes time, right?

79
00:05:59.510 --> 00:06:02.630
The processing of the data requires
the browser to go through and

80
00:06:02.630 --> 00:06:05.620
do a bunch of complicated parsing and
such.

81
00:06:05.620 --> 00:06:10.230
It's like go do that in the background and
then once you've finished, come back and

82
00:06:10.230 --> 00:06:12.160
tell me about it, and
that's what the .then is.

83
00:06:12.160 --> 00:06:16.330
It's like, do this, then do this,
then do this, then do this, then do this.

84
00:06:16.330 --> 00:06:18.472
And you can keep doing
that indefinitely as well.

