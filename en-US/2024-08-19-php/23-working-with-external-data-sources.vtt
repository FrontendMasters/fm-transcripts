WEBVTT

1
00:00:00.070 --> 00:00:05.848
Now, I'm going to make this example or
this lab a little bit more

2
00:00:05.848 --> 00:00:11.105
complicated, so
we're going to change the navigation.

3
00:00:11.105 --> 00:00:17.755
I'm going to keep this index.php as it is
with a different name, so let's rewrite

4
00:00:17.755 --> 00:00:23.835
it as all.php because we are seeing all
the objects at the same time, okay?

5
00:00:23.835 --> 00:00:28.072
And now we are going to create another
index, PHP, if you want, you can copy and

6
00:00:28.072 --> 00:00:30.618
paste that one, so
let's start with that one.

7
00:00:30.618 --> 00:00:35.603
So duplicate the PHP, so
keep the old version and the new one under

8
00:00:35.603 --> 00:00:40.781
the name PHP, because what I want
now we're going to do two things.

9
00:00:40.781 --> 00:00:45.679
We are going to try to end
up using a database, and

10
00:00:45.679 --> 00:00:52.861
also we will define a navigation using
what is known as a master detail.

11
00:00:52.861 --> 00:00:57.558
Master detail means we are going to
start with the list of options, and

12
00:00:57.558 --> 00:01:01.616
we will click in one option, and
we will go to a details page,

13
00:01:01.616 --> 00:01:03.866
that will render me the details.

14
00:01:03.866 --> 00:01:07.780
Nothing so complicated,
it's just the same data, but

15
00:01:07.780 --> 00:01:11.778
just to play with the idea of
navigation between pages and

16
00:01:11.778 --> 00:01:16.380
how to do that with PHP,
what's the design pattern behind this?

17
00:01:16.380 --> 00:01:20.336
Let's start with solving
the database problem, okay?

18
00:01:20.336 --> 00:01:24.586
In the data folder, I also have
a JSON version, but it's just for

19
00:01:24.586 --> 00:01:28.860
telling you that that's actually
simple if you wanna read JSON.

20
00:01:28.860 --> 00:01:34.794
So, we can quickly move this to that,
so instead of include data.php,

21
00:01:34.794 --> 00:01:40.653
what I can do is, I will do it quickly
because it doesn't add any value.

22
00:01:40.653 --> 00:01:46.081
Because we have already played with JSON,
but you can quickly create a JSON variable

23
00:01:46.081 --> 00:01:51.211
that you're going to use file, get
contents, remember we used that for a URL?

24
00:01:51.211 --> 00:01:54.886
Well, now we can use it for
a file, so we can take the JSON,

25
00:01:54.886 --> 00:01:58.712
I have double parentheses for
some reason, I have only one,

26
00:01:58.712 --> 00:02:02.252
I need only one, and then for
that JSON, what do I need?

27
00:02:02.252 --> 00:02:06.347
I need to decode it or encode it,

28
00:02:06.347 --> 00:02:11.213
what do you think, encode or decode?

29
00:02:11.213 --> 00:02:11.713
&gt;&gt; Student 1: Decode.
&gt;&gt; Student 2: Decode.

30
00:02:11.713 --> 00:02:12.213
&gt;&gt; Student 3: Decode.

31
00:02:12.213 --> 00:02:13.139
&gt;&gt; Maximiliano Firtman: Decode, so

32
00:02:13.139 --> 00:02:18.692
I'm going to decode that JSON into
exhibits, we are kind of done Yeah,

33
00:02:18.692 --> 00:02:23.600
maybe we need to check if you're
getting an object or an array or

34
00:02:23.600 --> 00:02:29.432
how that works, but it's kind of from
now on its kind of the same exercise,

35
00:02:29.432 --> 00:02:32.900
okay?
So, it's not a big deal, what I'm saying

36
00:02:32.900 --> 00:02:37.788
is you don't need to hard code your
data in a PHP file, you can use JSON for

37
00:02:37.788 --> 00:02:40.848
configuration settings or something.
And

38
00:02:40.848 --> 00:02:45.393
it's pretty simple to load the JSON and
parse it and

39
00:02:45.393 --> 00:02:50.347
then using it, does it make sense?
I think that the cool part

40
00:02:50.347 --> 00:02:54.756
is to use the database, so
let's focus on the database part.

41
00:02:54.756 --> 00:02:58.548
And for the database, maybe I wanna go

42
00:02:58.548 --> 00:03:04.356
back to OOP, so
let's create just to separate concerns,

43
00:03:04.356 --> 00:03:08.500
let's create the database object.
So,

44
00:03:08.500 --> 00:03:12.926
following the same pattern
that I did before,

45
00:03:12.926 --> 00:03:17.806
I'm going to create a folder
classes within here,

46
00:03:17.806 --> 00:03:24.272
I'm going to create a class DB PHP,
P1DV, PHP or database, PHP,

47
00:03:24.272 --> 00:03:29.334
we're going to create the class DB, okay?
Of course,

48
00:03:29.334 --> 00:03:34.208
we need PHP tag, class DB, and
by the way, we may have in the future,

49
00:03:34.208 --> 00:03:39.000
we can use here even inheritance
because we can have an abstract DB,

50
00:03:39.000 --> 00:03:42.401
do we have abstract classes here?
We do,

51
00:03:42.401 --> 00:03:48.019
you know what an abstract
class is in Java or

52
00:03:48.019 --> 00:03:51.469
C sharp?
Can anyone give us a definition?

53
00:03:54.646 --> 00:04:00.583
&gt;&gt; Speaker 4: It's a super class that
has functionality that can be inherited.

54
00:04:00.583 --> 00:04:06.029
&gt;&gt; Maximiliano Firtman: So, it's a class
that you cannot create options from it,

55
00:04:06.029 --> 00:04:10.028
so you cannot instantiate, and to use it,

56
00:04:10.028 --> 00:04:14.823
you have to create a subclass
that extends from it.

57
00:04:14.823 --> 00:04:20.020
And some of the methods might have code,
some of the methods might not have code.

58
00:04:20.020 --> 00:04:23.037
So, you can have abstract classes,
we don't need to create one, but

59
00:04:23.037 --> 00:04:24.023
if you want, you can.

60
00:04:24.023 --> 00:04:28.241
And then that will have a method,
for example, that will say open,

61
00:04:28.241 --> 00:04:32.311
we can have a function open,
again, you don't need to add code,

62
00:04:32.311 --> 00:04:34.690
you can stop there if you want, okay?

63
00:04:34.690 --> 00:04:39.179
Because it's an after class,
we don't need to get into that,

64
00:04:39.179 --> 00:04:42.068
I'm just telling you that that exists.

65
00:04:42.068 --> 00:04:47.416
So, and the idea is that I
wanna connect to a database,

66
00:04:47.416 --> 00:04:52.433
so let's talk a little bit
about databases in PHP.

67
00:04:52.433 --> 00:04:56.788
PHP, by default,
actually has no support for databases,

68
00:04:56.788 --> 00:05:00.968
which sounds, come on,
because we need to separate

69
00:05:00.968 --> 00:05:05.520
between what is known as
the standard library and libraries.

70
00:05:05.520 --> 00:05:09.893
So, every PHP runtime has
the standard library,

71
00:05:09.893 --> 00:05:14.891
the standard library is
actually the least, by the way,

72
00:05:14.891 --> 00:05:18.242
I have a typo here in the opening time.

73
00:05:18.242 --> 00:05:22.951
The standard library is everything you
see here when you start typing here a,

74
00:05:22.951 --> 00:05:26.935
everything you see here that you can see,
it's a very long list,

75
00:05:26.935 --> 00:05:29.705
just starting with a,
just starting with a.

76
00:05:29.705 --> 00:05:33.046
So, this is part of the standard library,
but

77
00:05:33.046 --> 00:05:37.247
then you can enable or
disable additional libraries, and

78
00:05:37.247 --> 00:05:42.239
some of those libraries are coming
from the same team, some are not.

79
00:05:42.239 --> 00:05:46.485
And this is something that you
set up in your PHP installation.

80
00:05:46.485 --> 00:05:51.602
By default, most of the installation
have a lot of libraries that

81
00:05:51.602 --> 00:05:58.031
are part sometimes of the same group,
the same PHP team created those libraries.

82
00:05:58.031 --> 00:06:01.354
And for that, we have let's say,

83
00:06:01.354 --> 00:06:06.403
providers to connect to
the most common databases.

84
00:06:06.403 --> 00:06:09.885
So it's not in the standard library,
but a kind of, so

85
00:06:09.885 --> 00:06:12.556
it's a sibling of the standard library.

86
00:06:12.556 --> 00:06:16.952
Anyway, it's always enabled
by default on most providers,

87
00:06:16.952 --> 00:06:21.685
maybe for performance reasons some
cloud provider will tell you,

88
00:06:21.685 --> 00:06:25.331
no, we have only these libraries enabled,
okay?

89
00:06:25.331 --> 00:06:27.607
So which databases can we use?

90
00:06:27.607 --> 00:06:31.099
Mostly everything, Postgres, Oracle,

91
00:06:31.099 --> 00:06:35.660
Microsoft, SQL Server,
MySQL, MariaDB, and so on.

92
00:06:35.660 --> 00:06:39.969
They're going to use, because of lack of
time, and also because I don't know if you

93
00:06:39.969 --> 00:06:42.719
have experience with working
with databases or not.

94
00:06:42.719 --> 00:06:48.092
It's not a requirement for this course,
we're going to use the simplest

95
00:06:48.092 --> 00:06:53.132
one that is also enabled by defaulting
PHP, that library is SQLite.

96
00:06:53.132 --> 00:06:58.700
I'm not sure if you have used it,
SQLite an open-source library,

97
00:06:58.700 --> 00:07:03.388
that is not targeting PHP,
it's actually available for

98
00:07:03.388 --> 00:07:09.066
every platform, you can use it right
now even on the web client side.

99
00:07:09.066 --> 00:07:13.804
So it's available on Android, on iPhone,
so if you have a phone with you,

100
00:07:13.804 --> 00:07:18.639
the library is included in your phone,
it's part of the operating system.

101
00:07:18.639 --> 00:07:23.860
It's actually, as it says here,
a small, fast, self-contained,

102
00:07:23.860 --> 00:07:28.472
high-reliability, full-feature
SQL database engine, so

103
00:07:28.472 --> 00:07:33.180
first, it's a SQL-based engine,
so it's not NoSQL, okay?

104
00:07:33.180 --> 00:07:36.830
It's not like Mongo,
you're not storing objects,

105
00:07:36.830 --> 00:07:41.058
you're creating tables,
records on those tables and so on.

106
00:07:41.058 --> 00:07:47.038
So, we should just use very simple
SQL language, so no worries,

107
00:07:47.038 --> 00:07:54.016
but you need to get into databases in
case you wanna extend the usage of this.

108
00:07:54.016 --> 00:07:57.193
And SQLite is not really a server,
which helps us in,

109
00:07:57.193 --> 00:08:01.219
we don't need to set up a server and
MySQL server or MariaDB server,

110
00:08:01.219 --> 00:08:05.910
that might take some time and see if you
have permissions and the port and blah.

111
00:08:05.910 --> 00:08:11.334
I need to understand how
to administrate that MySQL,

112
00:08:11.334 --> 00:08:16.394
it's just a file, but
we can talk to that file as if

113
00:08:16.394 --> 00:08:22.559
it is a MySQL database using
the same language, SQL, okay?

114
00:08:22.559 --> 00:08:25.815
Any questions on SQLite?

115
00:08:25.815 --> 00:08:30.374
I already created the database,
and the data is already there,

116
00:08:30.374 --> 00:08:34.605
it's this one, Data DB,
how can you see the database SQL?

117
00:08:34.605 --> 00:08:38.407
If you wanna see the details,
if you wanna see what's inside,

118
00:08:38.407 --> 00:08:42.997
because it's a binary format, so
if I say open anyway, with a text editor,

119
00:08:42.997 --> 00:08:46.103
this is what I see, well,
I see data there, okay?

120
00:08:46.103 --> 00:08:49.863
But yeah, it's a binary file, okay?

121
00:08:49.863 --> 00:08:54.047
But I need to find a viewer, there
are a lot of viewers out there for SQLite,

122
00:08:54.047 --> 00:08:57.183
there are even ones that
are just plug-ins for Chrome.

123
00:08:57.183 --> 00:09:03.812
So if you say Chrome plug-in for- SQLite,
viewer or editor, here are a lot, right?

124
00:09:03.812 --> 00:09:05.340
I will take just pick just one.

125
00:09:05.340 --> 00:09:06.916
&gt;&gt; Speaker 4: This extension was in-.

126
00:09:06.916 --> 00:09:10.955
&gt;&gt; Maximiliano Firtman: Yeah, there are
a lot, also you have for Firefox as well,

127
00:09:10.955 --> 00:09:14.827
I think there is one for Fox,
I think it's the best one,

128
00:09:14.827 --> 00:09:18.633
some of this one on Scrum,
some of them are not so good.

129
00:09:18.633 --> 00:09:23.976
Well, let's write this one, it's just
the first one I just picked, connect,

130
00:09:23.976 --> 00:09:29.101
make contact, this is a website, so
SQLite viewer, create a new database.

131
00:09:29.101 --> 00:09:33.736
No, I wanna open an existing
database that is in PHP,

132
00:09:33.736 --> 00:09:39.504
frontend museum, data, data DB,
select the table, exhibits,

133
00:09:39.504 --> 00:09:44.357
yep that's right and
there you can see the data, okay?

134
00:09:44.357 --> 00:09:48.947
So, it's the same data, but
now inside the database,

135
00:09:48.947 --> 00:09:53.440
of course this is compared
with the hardcoded array and

136
00:09:53.440 --> 00:09:59.411
the JSON this is not read-only you,
can update the data as well, okay?

137
00:09:59.411 --> 00:10:02.661
So, it's the JSON,
now it's just a JSON, actually,

138
00:10:02.661 --> 00:10:04.814
you can rewrite the JSON if you want.

139
00:10:04.814 --> 00:10:07.749
Okay, so
we were going to use that one, okay?

140
00:10:07.749 --> 00:10:12.095
That's the goal, so
we are going to use that database.

