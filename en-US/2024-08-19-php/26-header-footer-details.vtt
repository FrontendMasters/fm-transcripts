WEBVTT

1
00:00:00.210 --> 00:00:01.500
&gt;&gt; Maximiliano Firtman: Okay,
let's execute this.

2
00:00:01.500 --> 00:00:02.429
I don't know what will happen.

3
00:00:04.790 --> 00:00:09.068
&gt;&gt; Maximiliano Firtman: So
let me start here.

4
00:00:09.068 --> 00:00:15.920
Okay, I'm able to open database file,
and here I have the path, blah.

5
00:00:15.920 --> 00:00:19.862
Look at this,
its trying to it said it's the file,

6
00:00:19.862 --> 00:00:25.087
trying to see if I am seeing it's
here the constructor has to do there

7
00:00:25.087 --> 00:00:30.680
is a problem with the constructor okay
it cannot open the database file so

8
00:00:30.680 --> 00:00:35.448
this is the problem I'm in the DB and
I'm using dot dot I'm not

9
00:00:35.448 --> 00:00:40.768
sure if you remember when I type
that I ask should I do the dot.

10
00:00:40.768 --> 00:00:41.708
We'll see.

11
00:00:41.708 --> 00:00:44.028
Well, this is the moment to see.

12
00:00:44.028 --> 00:00:50.064
So, it says, well, we are in DB, so we
are going one level up to get into data,

13
00:00:50.064 --> 00:00:55.008
which seems like a good idea,
but seems like it's not working.

14
00:00:57.028 --> 00:00:57.998
Why is that?

15
00:00:57.998 --> 00:01:01.208
Because, actually,
our entry point Index PHP.

16
00:01:03.558 --> 00:01:07.108
Doesn't make sense, so
what happens if I do this instead?

17
00:01:08.748 --> 00:01:11.188
Remember, include is like copy and
pasting.

18
00:01:11.188 --> 00:01:12.938
We're not talking about modules here.

19
00:01:12.938 --> 00:01:17.528
These are not modules,
just including the file.

20
00:01:17.528 --> 00:01:21.969
We are including the DB file in Index PHP.

21
00:01:21.969 --> 00:01:26.937
So then this code is being executed
in the context of index PHP.

22
00:01:26.937 --> 00:01:28.588
Does it make sense?

23
00:01:28.588 --> 00:01:31.619
So then I can try again.

24
00:01:31.619 --> 00:01:34.399
And well, we are getting better.

25
00:01:34.399 --> 00:01:38.419
So we are getting something, but
it's not yet what we are expecting.

26
00:01:38.419 --> 00:01:43.895
So it says trying to access array
offset on integer on the index line 32.

27
00:01:43.895 --> 00:01:47.813
Okay.
By the way, I'm not ready with the index,

28
00:01:47.813 --> 00:01:53.497
but it's complaining here because
it doesn't have a description,

29
00:01:53.497 --> 00:01:56.885
which I think it should be right.

30
00:01:56.885 --> 00:02:02.132
So first, something that I can do is I
can do a bar dump of exhibits to see,

31
00:02:02.132 --> 00:02:04.905
okay, what do we have here?

32
00:02:04.905 --> 00:02:09.475
Okay, so if I refresh,
this is what we have.

33
00:02:09.475 --> 00:02:13.209
We have an array of four elements, okay?

34
00:02:13.209 --> 00:02:18.235
The four elements are directly this.

35
00:02:18.235 --> 00:02:23.303
So, I'm not sure if you realize what's
going on here I'm getting only one

36
00:02:23.303 --> 00:02:28.451
element it's an array of four it's only
one element only one exhibit let's

37
00:02:28.451 --> 00:02:33.842
try to understand what's going on before
moving on so I don't want to see this so

38
00:02:33.842 --> 00:02:39.072
I will actually delete that part because
I actually wanna do a master detail so

39
00:02:39.072 --> 00:02:40.786
when I get into a detail.

40
00:02:40.786 --> 00:02:42.576
So I, I'm going to delete the article.

41
00:02:43.636 --> 00:02:47.186
What I want actually is a list.

42
00:02:47.186 --> 00:02:55.236
I will create a UL outside and
I will close the UL here like that.

43
00:02:55.236 --> 00:02:57.716
And I'm going to create list items.

44
00:02:57.716 --> 00:02:58.266
Okay?

45
00:02:58.266 --> 00:02:58.766
Make sense?

46
00:03:00.146 --> 00:03:01.575
So I added the UL.

47
00:03:03.006 --> 00:03:03.586
And DLI.

48
00:03:03.586 --> 00:03:05.546
Do you understand why?

49
00:03:06.666 --> 00:03:14.176
I just wanna list the titles,
just that I don't wanna see the rest.

50
00:03:14.176 --> 00:03:19.574
Let's go back to the SQL Light 3
implementation that we have here.

51
00:03:19.574 --> 00:03:22.133
fetch array, this.

52
00:03:22.133 --> 00:03:26.773
I tried to see, I'm not sure if
VS Code will give me, yeah, I wanna,

53
00:03:26.773 --> 00:03:29.163
will give me the answer.

54
00:03:29.163 --> 00:03:33.383
It says, fetches a result row as
an associative or numerical array.

55
00:03:33.383 --> 00:03:38.572
So if you look here,
it fetch array is giving me just one row.

56
00:03:42.715 --> 00:03:48.970
&gt;&gt; Maximiliano Firtman: One row,
not all the rows, can you see that?

57
00:03:48.970 --> 00:03:53.540
Let's try to analyze
the solution in this way,

58
00:03:53.540 --> 00:04:00.165
just because we have this one that is
working let me do this let me go and

59
00:04:00.165 --> 00:04:04.980
grab from here let's change
this to execute one.

60
00:04:06.020 --> 00:04:06.900
One what?

61
00:04:06.900 --> 00:04:07.560
One result.

62
00:04:09.420 --> 00:04:11.310
Okay, so I want to receive one result.

63
00:04:12.820 --> 00:04:16.660
So we know that it works for
that situation, for one.

64
00:04:16.660 --> 00:04:17.820
And what are we going to do now?

65
00:04:19.150 --> 00:04:24.487
I'm going to take that index PHP and
I'm going to make another copy.

66
00:04:24.487 --> 00:04:28.135
And by the way, copy and
pasting doesn't seem like a good idea, but

67
00:04:28.135 --> 00:04:31.307
you will understand what
we are doing in a second.

68
00:04:31.307 --> 00:04:34.834
I will call this details PHP, Okay?

69
00:04:34.834 --> 00:04:40.572
But can you see that we have
always the same HML as a header,

70
00:04:40.572 --> 00:04:45.139
the same footer, and
we are copy and pasting,

71
00:04:45.139 --> 00:04:49.375
every page has the same header and footer.

72
00:04:49.375 --> 00:04:51.701
Do we have any other solution for that?

73
00:04:51.701 --> 00:04:55.903
Can you think on any other
solution instead of just

74
00:04:55.903 --> 00:04:58.612
duplicating the whole design?

75
00:05:01.478 --> 00:05:03.575
&gt;&gt; Maximiliano Firtman: Copy to an import?

76
00:05:03.575 --> 00:05:04.949
To an include.

77
00:05:04.949 --> 00:05:06.299
Include?

78
00:05:06.299 --> 00:05:08.299
Yeah, we can use includes.

79
00:05:08.299 --> 00:05:13.783
So for example, I can take,
&gt;&gt; Maximiliano Firtman: Maybe

80
00:05:13.783 --> 00:05:19.115
can be here to the main, this part.

81
00:05:19.115 --> 00:05:27.478
I will cut that part completely I will
create a new file, paste it as header.

82
00:05:28.628 --> 00:05:33.857
Sometimes we use a different ink,
this is pretty common,

83
00:05:33.857 --> 00:05:37.668
suffix or prefix, saying include.

84
00:05:37.668 --> 00:05:39.598
So you know it's an include.

85
00:05:39.598 --> 00:05:42.930
It's something for being included, okay?

86
00:05:42.930 --> 00:05:47.511
So then in details PHP here you open and

87
00:05:47.511 --> 00:05:54.107
you say I wanna include here
the header ink PHP, okay?

88
00:05:54.107 --> 00:05:57.250
And then, okay, that's all.

89
00:05:57.250 --> 00:06:01.870
And well, something to the end,
actually the footer is

90
00:06:01.870 --> 00:06:06.783
very simple here, but
let's do that for the first as well so

91
00:06:06.783 --> 00:06:11.433
I'm going to take that and
I'm to save it as footer ink.

92
00:06:11.433 --> 00:06:13.247
Does it make sense?

93
00:06:13.247 --> 00:06:14.029
Kind of?

94
00:06:15.369 --> 00:06:19.499
Would you usually put those all in
their own folder, the includes?

95
00:06:19.499 --> 00:06:24.393
We can also create the folder for
includes, yeah Sure.

96
00:06:24.393 --> 00:06:28.573
So now every page should have
the include here and there.

97
00:06:28.573 --> 00:06:33.523
This is, let's say it's an old way
to do this, to be honest, right?

98
00:06:33.523 --> 00:06:36.483
So it's not really the best way.

99
00:06:36.483 --> 00:06:40.973
The way that I like is to actually
do the reverse operation.

100
00:06:40.973 --> 00:06:43.391
Great idea of a master page.

101
00:06:43.391 --> 00:06:49.251
So, I create the HML, and I say here
is the placeholder for the data.

102
00:06:49.251 --> 00:06:52.417
But PHP doesn't have that incorporated, so

103
00:06:52.417 --> 00:06:56.761
you need to program that yourself,
the idea of a master page.

104
00:06:56.761 --> 00:07:01.281
Of course, if you're using a library or
a framework, typically they have that.

105
00:07:01.281 --> 00:07:04.811
You define a template that will
be your master page template, and

106
00:07:04.811 --> 00:07:06.427
then you change that, okay?

107
00:07:06.427 --> 00:07:07.813
Does it make sense?

108
00:07:07.813 --> 00:07:08.582
Any question?

109
00:07:11.469 --> 00:07:12.263
&gt;&gt; Maximiliano Firtman: No.

110
00:07:17.834 --> 00:07:21.020
&gt;&gt; Maximiliano Firtman: So now,
I can do the same for index PHP.

111
00:07:21.020 --> 00:07:22.775
So, I can delete everything.

112
00:07:24.016 --> 00:07:28.516
From here there, I paste it.

113
00:07:28.516 --> 00:07:36.003
Remember that include is just a copy and
paste, so that's why it should work.

114
00:07:36.003 --> 00:07:40.196
The advantage is now I can also
change the indentation if I want.

115
00:07:40.196 --> 00:07:46.175
So, it gets back simpler indentation now,
because now every page

116
00:07:46.175 --> 00:07:52.330
has only the part that belongs to
that page and nothing else, okay?

117
00:07:52.330 --> 00:07:55.660
So I think that that's that's pretty cool.

