WEBVTT

1
00:00:00.270 --> 00:00:04.288
&gt;&gt; Maximiliano Firtman: Arrays,
let's create a new one for array and

2
00:00:04.288 --> 00:00:05.670
collections.

3
00:00:07.950 --> 00:00:11.655
Arrays are actually pretty simple,
you just create a variable and

4
00:00:11.655 --> 00:00:12.840
you create a list.

5
00:00:12.840 --> 00:00:17.080
And the default constructor for
an array is the array function.

6
00:00:17.080 --> 00:00:18.907
And then you can say the list of number,
okay?

7
00:00:18.907 --> 00:00:22.360
So I can create something like this,
there's an array.

8
00:00:22.360 --> 00:00:26.113
By the way,
why is not coloring my PHP code?

9
00:00:26.113 --> 00:00:28.023
Everything is black and white.

10
00:00:28.023 --> 00:00:29.163
&gt;&gt; Speaker 2: You don't have a tag.

11
00:00:29.163 --> 00:00:31.243
&gt;&gt; Maximiliano Firtman: I
don't have the PHP tag.

12
00:00:31.243 --> 00:00:33.803
Remember, you will forget, okay?

13
00:00:33.803 --> 00:00:35.643
So I need a PHP tag.

14
00:00:35.643 --> 00:00:40.778
Maybe I don't need to close it, but
now at least I need to open, okay?

15
00:00:40.778 --> 00:00:45.052
Another way, and you would probably
like this is, from modern PHP,

16
00:00:45.052 --> 00:00:47.508
it wasn't there in the 90s.

17
00:00:47.508 --> 00:00:52.416
You can create, for example, a list
of countries and we can use kind of,

18
00:00:52.416 --> 00:00:57.448
Jason syntax so we can use scrap
brackets to create a little, right?

19
00:00:57.448 --> 00:00:59.618
So I will start from Argentina
because it's a, right?

20
00:00:59.618 --> 00:01:04.428
Not because it's the best country,
so, Argentina, Brazil,

21
00:01:04.428 --> 00:01:08.270
Canada, Denmark, whatever,
both are the same.

22
00:01:08.270 --> 00:01:11.650
I'm just creating the same kind of array,
okay?

23
00:01:11.650 --> 00:01:15.130
So it's sure syntax to
the array constructor.

24
00:01:16.590 --> 00:01:19.630
So also arrays, this is interesting.

25
00:01:19.630 --> 00:01:22.158
Arrays can always contain keys,

26
00:01:22.158 --> 00:01:26.406
it isn't an array without keys,
but I can create a key.

27
00:01:26.406 --> 00:01:27.656
What's a key?

28
00:01:27.656 --> 00:01:28.336
Anything.

29
00:01:28.336 --> 00:01:33.438
It can be a string,
it can be another number, so for

30
00:01:33.438 --> 00:01:40.578
example I can say for this list,
this is the ID, and then I can use this.

31
00:01:42.099 --> 00:01:45.539
The fat arrow to express key value.

32
00:01:45.539 --> 00:01:49.659
So and this is the limit, whatever.

33
00:01:49.659 --> 00:01:55.852
So I have a list and the first element
has a key, the second element has no key.

34
00:01:55.852 --> 00:01:58.069
You can match and mix so

35
00:01:58.069 --> 00:02:03.919
when you add a key it's called
an associative array in PHP.

36
00:02:03.919 --> 00:02:09.911
This is similar to a dictionary,
a hash table, a map on other platforms.

37
00:02:09.911 --> 00:02:11.081
Here, everything is an array.

38
00:02:13.311 --> 00:02:17.861
If you don't define a key, you will
have an index, as you're expecting.

39
00:02:17.861 --> 00:02:20.721
Okay, so I can say countries,

40
00:02:20.721 --> 00:02:26.622
it will give me Canada as you
are expect so that will work.

41
00:02:26.622 --> 00:02:31.119
But also I can get from the list,

42
00:02:31.119 --> 00:02:37.372
I can say subzero or
I can say sub id, okay?

43
00:02:37.372 --> 00:02:44.567
Similar how in JavaScript you can
browse an option because it has a key.

44
00:02:44.567 --> 00:02:50.367
I can use that key there as well,
make sense?

45
00:02:50.367 --> 00:02:54.198
It's actually simple,
I mean, it's not a big deal.

46
00:02:54.198 --> 00:02:56.910
That's an advantage of collections or
arrays.

47
00:02:56.910 --> 00:02:59.055
It's actually pretty simply PHP.

48
00:02:59.055 --> 00:03:01.564
And by the way, how do you think or

49
00:03:01.564 --> 00:03:06.768
how would you think that getting
the length of the array should work?

50
00:03:08.038 --> 00:03:15.429
So if I want to render this length first,
we haven't talked about objects,

51
00:03:15.429 --> 00:03:21.402
but should it be something like .size,
.length.

52
00:03:21.402 --> 00:03:23.086
Well, no, this is not an object.

53
00:03:23.086 --> 00:03:26.268
By default, PHP is not object-oriented.

54
00:03:26.268 --> 00:03:30.189
So, nothing is an object
unless it is an object.

55
00:03:30.189 --> 00:03:32.152
And we are not talking about objects yet.

56
00:03:32.152 --> 00:03:36.482
So, we don't have .syntax,
but that's for later.

57
00:03:36.482 --> 00:03:38.612
So, that's not an option.

58
00:03:38.612 --> 00:03:42.382
So, we work with functions,
global functions.

59
00:03:42.382 --> 00:03:44.476
Okay, so does anyone know?

60
00:03:44.476 --> 00:03:45.314
I'm sure of it.

61
00:03:45.314 --> 00:03:51.881
So you just count it's a global function.

62
00:03:51.881 --> 00:03:56.262
I think you mentioned, well, strings.

63
00:03:56.262 --> 00:04:00.032
Should I use counts for
strings to count the characters?

64
00:04:00.032 --> 00:04:03.099
If I have a string.

65
00:04:03.099 --> 00:04:04.037
Probably not.

66
00:04:04.037 --> 00:04:07.488
Probably not you say,
it's actually strlen.

67
00:04:09.478 --> 00:04:16.288
So strlen string length, it's actually
how you get the length of a string.

68
00:04:17.298 --> 00:04:23.123
Again, you will find this lack of
consistency many times in PHP, okay?

69
00:04:23.123 --> 00:04:25.913
It's not the same function,
it's a different function.

70
00:04:25.913 --> 00:04:28.875
Sometimes it's using
a different naming guideline.

71
00:04:28.875 --> 00:04:31.199
Okay, you will get used with time,

72
00:04:31.199 --> 00:04:34.770
mostly with the function that
you use on a daily basis.

