WEBVTT

1
00:00:00.000 --> 00:00:01.618
So it's time to talk about the web.

2
00:00:01.618 --> 00:00:06.366
And for the web, as we mentioned before,
we need a server, okay?

3
00:00:06.366 --> 00:00:08.875
So php is not a server.

4
00:00:08.875 --> 00:00:10.812
Php shows this.

5
00:00:10.812 --> 00:00:16.848
We run a script and then we get an output,
that's a php script.

6
00:00:16.848 --> 00:00:22.544
There is an exception to that is
that php contains a server for

7
00:00:22.544 --> 00:00:25.346
development purposes only.

8
00:00:25.346 --> 00:00:30.102
If you use php,
if you say in the terminal php-S,

9
00:00:30.102 --> 00:00:35.199
the capital is important
because it's not working,

10
00:00:35.199 --> 00:00:40.292
S, this from Serve, and
then an IP address or a host,

11
00:00:40.292 --> 00:00:46.294
such as localhost: and a port number,
any valid port number,

12
00:00:46.294 --> 00:00:50.398
will work, 4000, whatever, okay?

13
00:00:50.398 --> 00:00:52.067
It will create a server.

14
00:00:52.067 --> 00:00:54.077
It's a PHP development server.

15
00:00:54.077 --> 00:00:55.496
It's not for production.

16
00:00:55.496 --> 00:00:58.807
In production, you should use Apache or
other server, okay?

17
00:00:58.807 --> 00:01:03.730
So this is for us, for
start playing with PHP without actually

18
00:01:03.730 --> 00:01:07.430
setting up another server and
all that stuff.

19
00:01:07.430 --> 00:01:13.234
Now we can open the browser at
localhost:4000 and see what happens.

20
00:01:13.234 --> 00:01:16.261
If I do that, you can control click or

21
00:01:16.261 --> 00:01:20.962
command click from the terminal,
this is what we found.

22
00:01:20.962 --> 00:01:24.005
Not found, by the way,
this is a PHP color.

23
00:01:24.005 --> 00:01:29.205
That blue or purple,
something like that one.

24
00:01:29.205 --> 00:01:30.935
So that's be a PHP server, okay?

25
00:01:30.935 --> 00:01:35.580
So it means that that's
a PHP server responding that

26
00:01:35.580 --> 00:01:39.602
we don't have a default
file in our project.

27
00:01:39.602 --> 00:01:43.991
That means because it's
expecting an index.php.

28
00:01:43.991 --> 00:01:49.012
So if I create a new file, index.php, and

29
00:01:49.012 --> 00:01:53.764
in HTML, let's start with HTML first.

30
00:01:53.764 --> 00:01:56.374
I'm going to create index.html.

31
00:01:56.374 --> 00:02:02.153
I'm not sure if you have used this,
but you can use Emmet in VS Code.

32
00:02:02.153 --> 00:02:08.418
I'm not sure if you know what Emmet is,
but you use exclamation mark tab and

33
00:02:08.418 --> 00:02:12.705
it writes for
you the basic HTML template quickly.

34
00:02:12.705 --> 00:02:18.248
Again, in case you haven't done
that before, exclamation mark tab.

35
00:02:18.248 --> 00:02:20.990
For that to work,
you need to be in an HTML so

36
00:02:20.990 --> 00:02:23.678
you should already save the file, okay?

37
00:02:23.678 --> 00:02:31.458
So I can just say ruphb something like
that just to add something on the HTML.

38
00:02:31.458 --> 00:02:36.282
If I refresh now I'm seeing my HTML, okay?

39
00:02:36.282 --> 00:02:41.430
So this server is also serving
static files as well, okay?

40
00:02:41.430 --> 00:02:42.253
Make sense?

41
00:02:42.253 --> 00:02:45.562
So now I'm going to change
the extension of this file.

42
00:02:45.562 --> 00:02:53.313
Instead of HTML, I will change
the extension to PHP, index.php, okay?

43
00:02:53.313 --> 00:02:58.372
So if I keep it like this and refresh,
I'm still seeing the same thing.

44
00:02:58.372 --> 00:03:03.926
So that means that PHP by default,

45
00:03:03.926 --> 00:03:07.378
it's sending HTML.

46
00:03:07.378 --> 00:03:10.328
By default, it's sending HTML.

47
00:03:10.328 --> 00:03:15.207
What's the difference between
bin.html and.php that now

48
00:03:15.207 --> 00:03:18.848
in the middle of my HTML,
I can open a PHP tag.

49
00:03:18.848 --> 00:03:21.274
And I can do echo.

50
00:03:21.274 --> 00:03:25.104
For example, let's say, will this work?

51
00:03:27.967 --> 00:03:32.932
&gt;&gt; Maximiliano Firtman: So if I write some
PHP code now that echo will not go to

52
00:03:32.932 --> 00:03:38.245
the console,
to the terminal in my operating system,

53
00:03:38.245 --> 00:03:40.683
it will go to the client.

54
00:03:40.683 --> 00:03:41.849
Who is the client?

55
00:03:41.849 --> 00:03:44.356
The browser.

56
00:03:44.356 --> 00:03:49.385
And what we are doing here is what
is known as server-side rendering.

57
00:03:49.385 --> 00:03:55.443
So if I look at my page source,
I don't see PHP code in the browser.

58
00:03:55.443 --> 00:03:58.574
I just see the output that
the final generated code,

59
00:03:58.574 --> 00:04:01.715
this is still server-side generated code,
okay?

60
00:04:01.715 --> 00:04:04.471
There is no client-side,
everything is server-side.

61
00:04:04.471 --> 00:04:05.219
Make sense?

62
00:04:08.469 --> 00:04:12.887
&gt;&gt; Maximiliano Firtman: So in the modern
web development world, this is similar to

63
00:04:12.887 --> 00:04:17.861
some template engines that you
have with Express.js or Django.

64
00:04:17.861 --> 00:04:21.998
We have templating,
the PHP is templating by default.

65
00:04:21.998 --> 00:04:28.508
So by default, the servers in
PHP are always sending HTML.

66
00:04:28.508 --> 00:04:31.251
We will see later how to change that.

67
00:04:31.251 --> 00:04:33.487
So now we are on the web.

68
00:04:33.487 --> 00:04:35.755
So now we can start playing with the web,
okay?

69
00:04:35.755 --> 00:04:38.556
That was our first idea.

70
00:04:38.556 --> 00:04:44.199
And okay, so something that I wanna
show you is that if I inspect this,

71
00:04:44.199 --> 00:04:50.262
and I go to the network tab,
&gt;&gt; Maximiliano Firtman: We

72
00:04:50.262 --> 00:04:54.308
can see this is actually an HTTP request,

73
00:04:54.308 --> 00:04:58.816
a normal HTTP request,
trying to see if I can,

74
00:04:58.816 --> 00:05:03.670
maybe not,
I'm trying to make this part bigger,

75
00:05:03.670 --> 00:05:07.273
but yeah, so it has a lot of headers.

76
00:05:07.273 --> 00:05:13.783
So PHP is not just sending this,
it's sending headers as well.

77
00:05:13.783 --> 00:05:18.456
Lot of information,
receiving and sending headers.

78
00:05:18.456 --> 00:05:21.389
And again something similar
I mentioned before.

79
00:05:21.389 --> 00:05:27.026
So let's say that I'm going to change
this right, so this is not my final code.

80
00:05:27.026 --> 00:05:31.683
If I have a new file and
then say about PHP, and

81
00:05:31.683 --> 00:05:37.075
this about PHP will be another
HTML that will contain

82
00:05:37.075 --> 00:05:42.242
an about section that will
be playing something.

83
00:05:42.242 --> 00:05:45.042
So actually, how can I get to that file?

84
00:05:45.042 --> 00:05:51.231
Probably you already guessed that we
need to go to the URL, about.php.

85
00:05:51.231 --> 00:05:53.878
And I'm getting that file.

86
00:05:53.878 --> 00:05:56.228
So PHP works per request.

87
00:05:56.228 --> 00:06:00.848
Each file respond to each URL,

88
00:06:00.848 --> 00:06:04.585
that's how that works.

89
00:06:04.585 --> 00:06:07.656
So we have one file, one request.

90
00:06:07.656 --> 00:06:12.156
Maybe you're thinking, well, but
I don't like that, I want a router, blah,

91
00:06:12.156 --> 00:06:12.961
blah, blah.

92
00:06:12.961 --> 00:06:15.438
That's all PHP's responsibility,
to be honest.

93
00:06:15.438 --> 00:06:18.108
It's a server responsibility, and

94
00:06:18.108 --> 00:06:21.645
sometimes you can mix
a server with a framework.

95
00:06:21.645 --> 00:06:27.935
I mean, Laravel, CodeIgniter, they might
be doing things differently on top of PHP,

96
00:06:27.935 --> 00:06:31.340
but PHP by itself,
it's one URL, one script.

97
00:06:31.340 --> 00:06:33.514
That's all.

98
00:06:33.514 --> 00:06:39.927
So I know that these days,
reading a .php sounds like weird, right?

99
00:06:39.927 --> 00:06:40.837
In a URL.

100
00:06:40.837 --> 00:06:41.368
Means are still there.

101
00:06:41.368 --> 00:06:48.436
I mean, so, that's why, probably that
was 2006 or something like that.

102
00:06:48.436 --> 00:06:53.716
The new the new pattern up here,
known as friendly URLs,

103
00:06:53.716 --> 00:06:56.800
to remove the .PHP from the URL.

104
00:06:56.800 --> 00:07:00.007
But that's not a PHP problem,
that's a server problem.

105
00:07:00.007 --> 00:07:02.586
So you need to go and set up your server.

106
00:07:02.586 --> 00:07:07.599
So for example, when a request is coming,
it will add the .php or

107
00:07:07.599 --> 00:07:11.704
it will forward internally
that to a different file or

108
00:07:11.704 --> 00:07:14.639
things like that, the file in there.

109
00:07:14.639 --> 00:07:18.785
From a PHP point of view,
it should be a .php file.

110
00:07:18.785 --> 00:07:24.061
So you can map that in your web
server to a different URL later.

111
00:07:24.061 --> 00:07:27.785
But by default,
it's gonna be the name of your PHP file.

