WEBVTT

1
00:00:00.470 --> 00:00:03.210
&gt;&gt; Maximiliano Firtman: What
if we wanna create an API now?

2
00:00:03.210 --> 00:00:06.410
So now, we are also mobile developers.

3
00:00:06.410 --> 00:00:10.918
So we have a native mobile app
that wanna talk to our API, or

4
00:00:10.918 --> 00:00:13.520
we are a React developer.

5
00:00:13.520 --> 00:00:15.480
I wanna do a client-side
version of the app.

6
00:00:15.480 --> 00:00:19.182
We are not going to do
the client-side version, but

7
00:00:19.182 --> 00:00:21.635
we can maybe want to offer the API.

8
00:00:21.635 --> 00:00:25.360
Okay, and this case is an API
that is consuming other API,

9
00:00:25.360 --> 00:00:29.316
but anyway,
what's an API from a PHP point of view?

10
00:00:29.316 --> 00:00:33.206
It's just another PHP file.

11
00:00:34.396 --> 00:00:39.582
So we can call this api.php,
okay, that is going to be php,

12
00:00:39.582 --> 00:00:45.464
that it's going to use the same
CryptoConverter class.

13
00:00:45.464 --> 00:00:50.372
Maybe we wanna get the value,
let's say the code from GET

14
00:00:50.372 --> 00:00:55.499
now instead of from post,
just to do something different.

15
00:00:55.499 --> 00:00:58.430
Let's call it code, and then,

16
00:00:58.430 --> 00:01:03.860
we can say maybe we receive the amount or
maybe not we use 1,

17
00:01:03.860 --> 00:01:09.517
doesn't matter, and
then we need to call CryptoConverter.

18
00:01:09.517 --> 00:01:13.131
How do you call CryptoConverter from here?

19
00:01:13.131 --> 00:01:17.243
Should I create a converter like that?

20
00:01:17.243 --> 00:01:20.007
New CryptoConverter, will it work?

21
00:01:20.007 --> 00:01:21.957
What do I need?

22
00:01:21.957 --> 00:01:22.627
Why is it complaining?

23
00:01:22.627 --> 00:01:23.782
&gt;&gt; Speaker 1: You need to include it.

24
00:01:23.782 --> 00:01:25.377
&gt;&gt; Maximiliano Firtman: I
need to include it.

25
00:01:25.377 --> 00:01:27.097
So I can include the file directly.

26
00:01:27.097 --> 00:01:31.683
Remember, we already created
a classes.php that will include all

27
00:01:31.683 --> 00:01:33.587
the rest that we want.

28
00:01:33.587 --> 00:01:38.927
Now it's complaining because it
needs a code as an argument, okay?

29
00:01:38.927 --> 00:01:46.815
So, and then, it's an API, so
I just wanna return a JSON.

30
00:01:46.815 --> 00:01:47.855
Can I do just this?

31
00:01:48.955 --> 00:01:53.767
I will return a JSON that has the rate,
the current rate,

32
00:01:53.767 --> 00:01:57.276
and the current rate will be, actually,

33
00:01:57.276 --> 00:02:01.185
we need to get the value,
the rate of Bitcoin or

34
00:02:01.185 --> 00:02:07.090
let's say rate in USD to understand
better what I'm talking about.

35
00:02:07.090 --> 00:02:12.494
It's a converter and we will say I wanna
convert, and I won't pass any argument,

36
00:02:12.494 --> 00:02:18.270
will give me an error, but maybe we can
do is create a 1 as a default value.

37
00:02:18.270 --> 00:02:20.870
So if I don't parse a value it's 1,
1 Bitcoin.

38
00:02:20.870 --> 00:02:21.974
Does it make sense?

39
00:02:21.974 --> 00:02:24.508
So that's the default value.

40
00:02:24.508 --> 00:02:27.058
You can add spaces or not, it's up to you.

41
00:02:27.058 --> 00:02:34.416
So now I can just say I wanna adjust
the rate and the rate will be rate in USD,

42
00:02:34.416 --> 00:02:39.821
I closed this, like that,
I think it's fine.

43
00:02:39.821 --> 00:02:43.821
I'm writing a JSON manually,
actually, I don't need to do that.

44
00:02:43.821 --> 00:02:49.242
I can also create an object and
then parse it with JSON decode,

45
00:02:49.242 --> 00:02:54.531
okay, but the chat will show
you something different.

46
00:02:54.531 --> 00:02:55.145
It's just that.

47
00:02:55.145 --> 00:02:55.881
So, pretty simple.

48
00:02:55.881 --> 00:02:57.271
Okay, a couple of lines.

49
00:02:57.271 --> 00:03:01.795
I'm not done yet, so
if you're writing, give me a sec.

50
00:03:01.795 --> 00:03:05.065
So, if I try this, I'm getting error here.

51
00:03:05.065 --> 00:03:08.345
Line 4, it says, you don't have a code.

52
00:03:08.345 --> 00:03:09.505
Yeah, you're right.

53
00:03:09.505 --> 00:03:12.315
I didn't parse the code in the GET.

54
00:03:13.605 --> 00:03:15.935
What if we want a default 1?

55
00:03:15.935 --> 00:03:19.144
So, if you don't parse a code,
I want bitcoin.

56
00:03:21.967 --> 00:03:25.039
&gt;&gt; Maximiliano Firtman: Okay,
I will show you two ways to do that.

57
00:03:25.039 --> 00:03:27.135
Do you understand what I want you to do?

58
00:03:27.135 --> 00:03:32.056
First, I can check if,
&gt;&gt; Maximiliano Firtman: The code is

59
00:03:32.056 --> 00:03:35.813
not set, so I will check if it's set or

60
00:03:35.813 --> 00:03:40.642
if it's not set,
wherever you prefer, there.

61
00:03:40.642 --> 00:03:47.284
I will say that code = BTC.

62
00:03:47.284 --> 00:03:51.136
By the way, if you pay attention,
I'm using a lot of double quotes.

63
00:03:51.136 --> 00:03:52.951
I don't need them there,
I can use single quotes.

64
00:03:52.951 --> 00:03:59.866
Okay, so remember that, if not,
I will use the other thing.

65
00:03:59.866 --> 00:04:02.561
Okay, it's complaining.

66
00:04:02.561 --> 00:04:03.421
Why it's complaining?

67
00:04:03.421 --> 00:04:05.741
Let's see if someone realized
quickly what's going on.

68
00:04:05.741 --> 00:04:06.709
It's complaining here.

69
00:04:14.211 --> 00:04:15.473
&gt;&gt; Maximiliano Firtman: What?
It's a simple answer but

70
00:04:15.473 --> 00:04:17.421
yeah I went-
&gt;&gt; Speaker 2: Semicolon?

71
00:04:17.421 --> 00:04:19.429
&gt;&gt; Maximiliano Firtman: Semicolon,
yeah, I'm missing the semicolon.

72
00:04:19.429 --> 00:04:23.384
Now remember, okay, so
this is one way, okay?

73
00:04:23.384 --> 00:04:28.933
It's okay, it's fine, but
I will show you a better one.

74
00:04:28.933 --> 00:04:35.683
So now I will refresh, and
now it's giving me the right, BTC.

75
00:04:35.683 --> 00:04:40.636
If I add another code, ETH,
it's giving me a different rate.

76
00:04:40.636 --> 00:04:42.886
Now, it works, okay, pretty cool.

77
00:04:42.886 --> 00:04:49.116
I mean, it's fine, it's working but
this is kind of old code.

78
00:04:49.116 --> 00:04:55.266
We have better operators these days
to work with nulls and optionals.

79
00:04:55.266 --> 00:04:59.451
There is a new operator,
this is new in PHP, by the way,

80
00:04:59.451 --> 00:05:04.415
it's also available in JavaScript,
also these days.

81
00:05:04.415 --> 00:05:06.228
You can say, you know what?

82
00:05:06.228 --> 00:05:11.149
I wanna get the code from here,
but if there is no code there,

83
00:05:11.149 --> 00:05:13.295
I wanna default one.

84
00:05:13.295 --> 00:05:18.945
And for that, you use this operator,
double question mark.

85
00:05:18.945 --> 00:05:19.866
So you don't need the, if.

86
00:05:22.777 --> 00:05:26.753
&gt;&gt; Maximiliano Firtman: I mean,
it's the same, but it's maybe cleaner.

87
00:05:26.753 --> 00:05:29.231
So this will actually check.

88
00:05:29.231 --> 00:05:36.651
It will use this value, unless it's null,
and if it's null, is gonna use this one.

89
00:05:36.651 --> 00:05:40.217
&gt;&gt; Maximiliano Firtman: That's the idea,
okay?

90
00:05:40.217 --> 00:05:41.289
Okay, I think it's cool.

91
00:05:43.264 --> 00:05:48.590
&gt;&gt; Maximiliano Firtman: Also, what if you,
&gt;&gt; Maximiliano Firtman: Let's

92
00:05:48.590 --> 00:05:52.257
say this converter is not there and
you're getting this converter.

93
00:05:52.257 --> 00:05:54.429
I mean, I'm showing you this quickly.

94
00:05:54.429 --> 00:05:58.697
We're not going to try it, just for
you to understand something.

95
00:05:58.697 --> 00:06:02.208
We are getting the converter for
somewhere else, okay?

96
00:06:02.208 --> 00:06:07.185
Someone else, another file, I don't know
where it's giving me a converter, but

97
00:06:07.185 --> 00:06:08.403
what if it's null?

98
00:06:08.403 --> 00:06:11.701
If it's null,
I cannot execute a method on a null,

99
00:06:11.701 --> 00:06:14.792
it's going to give me an error,
an exception.

100
00:06:16.382 --> 00:06:19.470
Well, now there is a way to do this.

101
00:06:21.736 --> 00:06:26.992
&gt;&gt; Maximiliano Firtman: It's ?-&gt;,
that means if we have an object here call

102
00:06:26.992 --> 00:06:32.361
this method, if not just continue or
it will return no,

103
00:06:32.361 --> 00:06:37.055
okay, but
it will not generate an exception.

104
00:06:37.055 --> 00:06:38.847
This is called the safe call operator.

105
00:06:41.527 --> 00:06:42.865
&gt;&gt; Maximiliano Firtman: Okay,
so how mine is there.

106
00:06:42.865 --> 00:06:47.489
So for those of you complaining about PHP
because you need to write a lot of code,

107
00:06:47.489 --> 00:06:51.700
check about these new operators that
we have because probably it has to do

108
00:06:51.700 --> 00:06:52.405
with that.

109
00:06:52.405 --> 00:06:55.698
So a few years ago we didn't
have this operator, so

110
00:06:55.698 --> 00:06:59.005
yeah you have to make a lot
of if all the time, okay?

111
00:06:59.005 --> 00:07:02.254
Well now you have these
operators that are better.

