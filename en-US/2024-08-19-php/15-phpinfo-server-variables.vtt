WEBVTT

1
00:00:00.154 --> 00:00:01.388
&gt;&gt; Maximiliano Firtman: So we have cookie.

2
00:00:01.388 --> 00:00:04.621
We have session that we will
mention sessions later.

3
00:00:04.621 --> 00:00:07.329
We have files,
this is when you receive files,

4
00:00:07.329 --> 00:00:10.985
when you're uploading files,
when you have a upload button and

5
00:00:10.985 --> 00:00:15.064
you have uploading files,
when you receive from PHP, receive files.

6
00:00:15.064 --> 00:00:16.745
Now we have $_SERVER.

7
00:00:16.745 --> 00:00:21.936
With $_SERVER,
you receive a lot of information

8
00:00:21.936 --> 00:00:26.764
like the IP address, headers, information,

9
00:00:26.764 --> 00:00:30.763
the metadata about the current state.

10
00:00:30.763 --> 00:00:35.005
And we'll probably use one
of those variables later.

11
00:00:35.005 --> 00:00:36.985
I want you to try something.

12
00:00:36.985 --> 00:00:39.031
Create a new file.

13
00:00:39.031 --> 00:00:43.494
Let's save that as info.php,

14
00:00:43.494 --> 00:00:47.305
info, I have a typo there.

15
00:00:47.305 --> 00:00:51.348
Open &lt;?php and just call this

16
00:00:51.348 --> 00:00:56.488
function phpinfo(), that's all.

17
00:00:56.488 --> 00:01:01.550
And run it in the browser just that,
phpinfo(),

18
00:01:01.550 --> 00:01:08.485
you call the function,
&gt;&gt; Maximiliano Firtman: And

19
00:01:08.485 --> 00:01:09.684
open that in the browser.

20
00:01:09.684 --> 00:01:10.863
How do you open that in the browser?

21
00:01:10.863 --> 00:01:15.432
Well, it's local host,
the port that you use,

22
00:01:15.432 --> 00:01:18.673
in my case 4000/info.php.

23
00:01:18.673 --> 00:01:22.268
Remember, we are pointing
directly to the PHP file.

24
00:01:22.268 --> 00:01:26.509
So phpinfo is a quick
way to see if everything

25
00:01:26.509 --> 00:01:30.760
is working in with your PHP configuration.

26
00:01:30.760 --> 00:01:34.622
Also here you see all
the configuration information.

27
00:01:34.622 --> 00:01:38.962
Okay, all the plugins,
that you have available.

28
00:01:38.962 --> 00:01:43.665
I mean, of course It's a lot of
information for us at this point, but

29
00:01:43.665 --> 00:01:48.367
when you have a question about
the version of PHP that we are running in

30
00:01:48.367 --> 00:01:53.340
which folder is currently your PHP
being executed with which commands?

31
00:01:53.340 --> 00:01:54.441
Well, everything is here.

32
00:01:54.441 --> 00:01:58.896
Okay, phpinfo, just in general,
is there, okay?

33
00:01:58.896 --> 00:02:03.693
It's typically a quick way to when
you know my server is not working I

34
00:02:03.693 --> 00:02:08.845
don't know it's giving me an error
on the library well you run phpinfo.

35
00:02:08.845 --> 00:02:16.288
And then you see if something's wrong
okay you look into that file okay but

36
00:02:16.288 --> 00:02:21.449
I just want to tell you that
some of the things that we

37
00:02:21.449 --> 00:02:26.760
see here can be retrieved
using dollar sign server.

38
00:02:26.760 --> 00:02:32.171
Well, just because I'm talking about
super global variables, I'm going

39
00:02:32.171 --> 00:02:37.590
to maybe spoil something that was about
to talk later, but let's do it now.

40
00:02:37.590 --> 00:02:42.415
What if I wanna see
what's inside $_SERVER.

41
00:02:42.415 --> 00:02:45.002
So I wanna see what's inside.

42
00:02:45.002 --> 00:02:50.997
So you say what echo doing
console loading the JavaScript.

43
00:02:50.997 --> 00:02:55.775
Let's see,
first let's go back to I'm going

44
00:02:55.775 --> 00:03:00.192
to start closing things so it's convert.

45
00:03:00.192 --> 00:03:05.046
So the problem is, if I try to do
in an echo, because it's an array,

46
00:03:05.046 --> 00:03:09.241
it says array to a string
conversion online didn't work.

47
00:03:09.241 --> 00:03:13.627
And I'm just seeing this array,
and it's kind of, yeah,

48
00:03:13.627 --> 00:03:17.322
I was expecting to see something better,
right?

49
00:03:17.322 --> 00:03:20.219
Better than just array.

50
00:03:20.219 --> 00:03:23.882
So that's why instead of echo, for

51
00:03:23.882 --> 00:03:28.403
debugging purposes only, please, okay,

52
00:03:28.403 --> 00:03:33.181
there is a function called var_dump, okay?

53
00:03:33.181 --> 00:03:40.278
So actually, I'm trying to see why I'm
not seeing it here, but anyway, var_dump.

54
00:03:40.278 --> 00:03:44.077
var_dump, if I execute this now, again,

55
00:03:44.077 --> 00:03:49.432
I'm not saying it's so clear,
but it's a different thing.

56
00:03:49.432 --> 00:03:56.466
It's giving me a snapshot of
what's inside that variable.

57
00:03:56.466 --> 00:03:59.513
It's dumping all the variables content.

58
00:03:59.513 --> 00:04:04.858
So it's var_dump and
any variable, anything.

59
00:04:04.858 --> 00:04:10.379
And then you can see, okay,
it's an array of 35 elements.

60
00:04:10.379 --> 00:04:11.689
It has 'DOCUMENT_ROOT'.

61
00:04:11.689 --> 00:04:17.894
This is the path of my file,
the server software, the port.

62
00:04:17.894 --> 00:04:21.305
The protocol, so request method, post,

63
00:04:21.305 --> 00:04:25.680
the script filename, blah,
blah, blah, the host.

64
00:04:25.680 --> 00:04:33.147
Here, for example, I have all the headers,
the HTTP headers, such as the user agent.

65
00:04:33.147 --> 00:04:36.692
That's the name of the browser
that is requesting this.

66
00:04:36.692 --> 00:04:41.492
So, if you wanna know about the current

67
00:04:41.492 --> 00:04:47.165
browser this is the key
that you need to use, so

68
00:04:47.165 --> 00:04:52.707
the browser user agent
is server in this key.

69
00:04:52.707 --> 00:04:57.607
So i just wanna show you a way that you
you have a quick way to debug in a very

70
00:04:57.607 --> 00:04:58.435
dirty way.

71
00:04:58.435 --> 00:05:03.216
To actually expose,
to dump all the contents of a variable in

72
00:05:03.216 --> 00:05:07.830
the HTML itself, so
you can see what's in this variable.

73
00:05:07.830 --> 00:05:10.236
And then say,
I wanted the browser information.

74
00:05:10.236 --> 00:05:14.525
So then you have it in that now variable.

