WEBVTT

1
00:00:00.140 --> 00:00:04.832
So PHP is a widely-used open-source
scripting language, we'll go back to

2
00:00:04.832 --> 00:00:10.020
that later, especially to it for web
development and can be embedded into HTML.

3
00:00:10.020 --> 00:00:16.200
Also, you can see how HTML appears here,
KS, something part of the definition.

4
00:00:16.200 --> 00:00:20.274
By way, this definition is coming
from Wikipedia, I didn't write it.

5
00:00:20.274 --> 00:00:26.604
But actually it's in a scripting
language for web development.

6
00:00:26.604 --> 00:00:32.344
Typically we are talking about server-side
and it can be embedded into HTML.

7
00:00:33.644 --> 00:00:39.502
This is probably the most important
number that you will see today,

8
00:00:39.502 --> 00:00:43.406
PHP is used by 76% of
all the websites whose

9
00:00:43.406 --> 00:00:48.637
server-side perming language we know,
76, okay?

10
00:00:48.637 --> 00:00:53.551
That's a huge number, and
I'm pretty sure that if you ask young

11
00:00:53.551 --> 00:00:58.107
developers about this,
they will say it's 1%, right?

12
00:00:58.107 --> 00:01:02.465
Because the feeling that we have on the
web is that no one is using PHP anymore,

13
00:01:02.465 --> 00:01:04.446
but it's actually the opposite.

14
00:01:04.446 --> 00:01:08.142
So, of course there is a catch here, or

15
00:01:08.142 --> 00:01:13.881
several catches, so
we can try to narrow this number.

16
00:01:13.881 --> 00:01:19.281
First, when you look at large websites or,
the top Alexa 100

17
00:01:19.281 --> 00:01:25.095
websites versus the long tail,
we see a difference there.

18
00:01:25.095 --> 00:01:28.867
So, we have more PHP
penetration on the long tail,

19
00:01:28.867 --> 00:01:33.105
like smaller websites than
on the bigger startups.

20
00:01:33.105 --> 00:01:39.115
On the startup side, on the large
scale websites, or, I know, banks.

21
00:01:40.226 --> 00:01:45.499
Social Networks,
PHP usage is lower than on the long tail,

22
00:01:45.499 --> 00:01:52.726
blogs, small e-commerce websites and
so on, so it's not calibrated there.

23
00:01:52.726 --> 00:01:58.186
But anyway, there are still a lot
of large websites powered by

24
00:01:58.186 --> 00:02:05.326
PHP including most of the Meta websites,
Facebook and some parts of Instagram.

25
00:02:06.416 --> 00:02:11.373
Wikipedia is based on PHP, and
of course they are large website in

26
00:02:11.373 --> 00:02:16.257
terms of users, the use base and
of course what they're doing.

27
00:02:16.257 --> 00:02:21.670
We'll talk about what Facebook has done
in the past in a few minutes, okay?

28
00:02:21.670 --> 00:02:26.538
So PHP currently powers Facebook,
as I mentioned,

29
00:02:26.538 --> 00:02:32.293
many parts of the Microsoft
website is actually PHP-based,

30
00:02:32.293 --> 00:02:39.850
Wikipedia, and probably the 40% of
that 76% is actually WordPress.

31
00:02:39.850 --> 00:02:46.638
So WordPress is the most used CMS
content management system out there, and

32
00:02:46.638 --> 00:02:53.209
it's based on PHP, which also
the number 76% not actually a lie, but

33
00:02:53.209 --> 00:02:58.620
it's a data that we need to
get some granular information.

34
00:02:58.620 --> 00:03:03.981
So for example, that doesn't mean that
76% of the web developers are using PHP,

35
00:03:03.981 --> 00:03:08.889
because there are a lot of WordPress
websites out there that are based on PHP,

36
00:03:08.889 --> 00:03:12.514
but actually the owner,
the developer of that website,

37
00:03:12.514 --> 00:03:14.744
never brought any PHP line code.

38
00:03:14.744 --> 00:03:19.334
So they're just using WordPress, and
WordPress is based on PHP, okay?

39
00:03:19.334 --> 00:03:24.734
But If you're a developer and
you need to maintain WordPress websites,

40
00:03:24.734 --> 00:03:28.695
at some point, you need to get into PHP.

41
00:03:28.695 --> 00:03:32.834
You need to create a theme,
you need to create the plugin,

42
00:03:32.834 --> 00:03:38.156
you need to touch the WordPress code or
add something on top of that, and for

43
00:03:38.156 --> 00:03:44.133
that you need PHP, so that's why we
are covering today, PHP fundamentals.

44
00:03:44.133 --> 00:03:48.875
There's no show WordPress,
Drupal, Joomla, and

45
00:03:48.875 --> 00:03:52.215
many others out there using PHP, and

46
00:03:52.215 --> 00:03:56.849
also now going back to
the developer perspective,

47
00:03:56.849 --> 00:04:01.290
Magento, symphony, Laravel, code igniter.

48
00:04:01.290 --> 00:04:06.624
Those are frameworks for developers
that are using PHP behind the scenes,

49
00:04:06.624 --> 00:04:10.695
actually, you write PHP
to use those frameworks.

50
00:04:10.695 --> 00:04:16.851
And of course, there are a lot of jobs out
there for Laravel, CodeIgniter, and so on.

51
00:04:16.851 --> 00:04:21.326
Maybe for vanilla PHP, so
PHP without any framework,

52
00:04:21.326 --> 00:04:26.092
in terms of jobs,
might not be like the best scenario, but

53
00:04:26.092 --> 00:04:29.710
you do have a lot of
framework based things.

54
00:04:29.710 --> 00:04:36.265
So let's say that these frameworks
are kind of Express js or

55
00:04:36.265 --> 00:04:40.603
Django or similar that for PHP, okay?

56
00:04:40.603 --> 00:04:45.072
So they let you do their
frameworks on top of PHP to

57
00:04:45.072 --> 00:04:49.215
make server-side web development easier.

58
00:04:49.215 --> 00:04:54.299
Today, we will just cover the fundamentals
and we will do everything from scratch

59
00:04:54.299 --> 00:04:59.098
manually, like with vanilla PHP, so
no frameworks, no libraries, okay?

60
00:04:59.098 --> 00:05:03.865
This is interesting because most
people think that PHP is for

61
00:05:03.865 --> 00:05:08.630
the web, but actually PHP can be used for
chat scripting, so

62
00:05:08.630 --> 00:05:11.540
you can do scripting your computer.

63
00:05:11.540 --> 00:05:15.107
What is scripting,
whatever, you script for

64
00:05:15.107 --> 00:05:20.137
whatever you wanna do instead of
using Node or a JavaScript or Go or

65
00:05:20.137 --> 00:05:26.186
Pearl Python, you can use PHP to do
something every morning in your computer.

66
00:05:26.186 --> 00:05:28.557
Clean up some data, do a backup so

67
00:05:28.557 --> 00:05:32.809
you can run PHP scripts completely
separated from the web.

68
00:05:34.249 --> 00:05:38.731
Of course,
that being on the back end on a web server

69
00:05:38.731 --> 00:05:43.334
is 99.9% of the usage of PHP these days,
okay?

70
00:05:43.334 --> 00:05:48.740
And there is also some other, I actually,
during my career, I found, I think,

71
00:05:48.740 --> 00:05:53.750
two or three companies actually using
this third option that we have here,

72
00:05:53.750 --> 00:05:55.994
desktop applications with PHP.

73
00:05:55.994 --> 00:05:58.730
I'm not sure if I've ever
heard about that, but

74
00:05:58.730 --> 00:06:01.486
I got the three companies
companies doing that.

75
00:06:03.256 --> 00:06:06.916
There is a kind of a framework
that is not official, but

76
00:06:06.916 --> 00:06:10.430
it's kind of part of
the official things you can do.

77
00:06:10.430 --> 00:06:15.471
It's PHP-JTK, where you can create desktop

78
00:06:15.471 --> 00:06:20.002
applications, so forget about the web.

79
00:06:20.002 --> 00:06:23.769
Desktop applications with Windows,
like with PHP,

80
00:06:23.769 --> 00:06:27.628
multiplatform, by the way,
Windows, Mac, Linux.

81
00:06:27.628 --> 00:06:29.940
So you create Windows, buttons, of course,

82
00:06:29.940 --> 00:06:33.975
it looks like from the nineties meaning
even the image you see there, the website

83
00:06:33.975 --> 00:06:38.034
in general looks like from the nineties
because it's coming from the nineties.

84
00:06:38.034 --> 00:06:41.101
At that time it was kind of another way,
an alternative way,

85
00:06:41.101 --> 00:06:44.849
to create multi-platform desktop
applications, compared with Java.

86
00:06:44.849 --> 00:06:50.509
After that, .NET appear, but .NET wasn't
originally completely multi-platform,

87
00:06:50.509 --> 00:06:52.825
so it was a way to create desktop app.

88
00:06:52.825 --> 00:06:54.976
You can still make some quick,

89
00:06:54.976 --> 00:06:59.215
short desktop applications
with PHP using this framework.

90
00:07:00.319 --> 00:07:04.854
But yeah, it's not what we are expecting,
and also these days,

91
00:07:04.854 --> 00:07:06.859
we have some crazy ideas.

92
00:07:06.859 --> 00:07:14.362
So this is actually,
I wanna show you this directly in action.

93
00:07:14.362 --> 00:07:18.048
This is PHP, well,
it has a retro UI, okay,

94
00:07:18.048 --> 00:07:21.543
but this is a playground
to play with this.

95
00:07:21.543 --> 00:07:27.510
This is PHP client-side in the browser.

96
00:07:27.510 --> 00:07:30.887
So instead of writing JavaScript,

97
00:07:30.887 --> 00:07:35.394
you write PHP and
it runs client-side, okay?

98
00:07:35.394 --> 00:07:40.067
It's called phpwasm,
it's actually a WebAssembly interpreter

99
00:07:40.067 --> 00:07:44.914
of PHP that runs in the browser,
mobile devices, desktop devices.

100
00:07:44.914 --> 00:07:47.606
So it's an experiment, okay, but

101
00:07:47.606 --> 00:07:52.826
no one is using it in production,
but you can even talk to the DOM.

102
00:07:52.826 --> 00:07:57.086
So there are some demos here you can try,
so DOM access, for example, load.

103
00:07:57.086 --> 00:08:02.272
So here you can see, this is PHP,
we'll see the code later,

104
00:08:02.272 --> 00:08:08.087
but is the PHP changing some or
executing some code from PHP, okay?

105
00:08:10.077 --> 00:08:14.924
Again, it's just an experiment, but
there are people that still experimenting

106
00:08:14.924 --> 00:08:17.837
with PHP and
see what else can we do with PHP.

107
00:08:17.837 --> 00:08:21.004
Also there is another experiment
that will let you compile,

108
00:08:21.004 --> 00:08:22.941
PHP code into a web assembly module.

109
00:08:22.941 --> 00:08:26.880
By the way, I'm not sure if all of
you know what web assembly is, but

110
00:08:26.880 --> 00:08:29.646
it's a way that we have
in the browser this day,

111
00:08:29.646 --> 00:08:33.544
client side, on every browser to
execute kind of a compiled code.

112
00:08:33.544 --> 00:08:37.745
So we can compile some code from some
language, it can be C, it can be code,

113
00:08:37.745 --> 00:08:41.376
it can be codling, types script,
there are a lot of languages.

114
00:08:41.376 --> 00:08:43.377
You compile into a binary code and

115
00:08:43.377 --> 00:08:47.460
then you can execute that binary
code from JavaScript client side.

116
00:08:47.460 --> 00:08:52.143
Well, there is one compiler for
PHP, so you write PHP,

117
00:08:52.143 --> 00:08:57.835
you compile that PHP and
then JavaScript can execute that PHP code.

