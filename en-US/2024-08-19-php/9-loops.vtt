WEBVTT

1
00:00:00.000 --> 00:00:03.042
&gt;&gt; Maximiliano Firtman: Now, if you
have an array, how to go through the,

2
00:00:03.042 --> 00:00:07.026
how to loop through the array,
we have while, as you are used to,

3
00:00:07.026 --> 00:00:10.297
a while has need a Boolean
condition in parentheses.

4
00:00:10.297 --> 00:00:14.395
Okay, so coming from some languages where
it's not mandatory, here it's mandatory.

5
00:00:14.395 --> 00:00:17.080
You just have do while.

6
00:00:17.080 --> 00:00:20.100
Okay, that executes.

7
00:00:20.100 --> 00:00:21.497
Always first and

8
00:00:21.497 --> 00:00:27.098
then evaluate the condition to see
if it's do another loop or not.

9
00:00:27.098 --> 00:00:30.768
But for this case, I think if you
wanna render all the countries,

10
00:00:30.768 --> 00:00:32.517
it's verge have for, right?

11
00:00:32.517 --> 00:00:37.488
We do have the normal for the,
let's say the C based for

12
00:00:37.488 --> 00:00:41.068
the int i equals 0 or bar i Javascript.

13
00:00:41.068 --> 00:00:45.772
Well, now we don't define a type, or

14
00:00:45.772 --> 00:00:50.623
bar, or let, we just say bar $i= 0,

15
00:00:50.623 --> 00:00:54.606
i less than count of countries.

16
00:00:58.100 --> 00:01:00.139
&gt;&gt; Maximiliano Firtman: Do I have i++?

17
00:01:00.139 --> 00:01:06.522
Yes, we do have plus plus, but it said,
hey, you shouldn't be using here.

18
00:01:06.522 --> 00:01:07.557
Why?

19
00:01:07.557 --> 00:01:11.861
And this is something,
do I have plus equals one?

20
00:01:11.861 --> 00:01:14.031
&gt;&gt; Student: You need the dollars
in front of the other is.

21
00:01:14.031 --> 00:01:15.971
&gt;&gt; Maximiliano Firtman: I need,
yeah, you're right.

22
00:01:15.971 --> 00:01:17.322
&gt;&gt; Student: Okay.

23
00:01:17.322 --> 00:01:18.171
&gt;&gt; Maximiliano Firtman: You're right.

24
00:01:18.171 --> 00:01:21.252
Thank you for that.

25
00:01:21.252 --> 00:01:23.969
That's why I mentioned C or JavaScript.

26
00:01:23.969 --> 00:01:25.754
My brain, it says,
you wanna write JavaScript.

27
00:01:25.754 --> 00:01:28.310
So then it jumps to the JavaScript part.

28
00:01:28.310 --> 00:01:29.180
Thank you.

29
00:01:29.180 --> 00:01:32.584
So you can use a plus plus or
plus plus Y, as I mentioned.

30
00:01:32.584 --> 00:01:35.986
The order, in this case,
it won't make a difference.

31
00:01:35.986 --> 00:01:40.238
But in other cases, when you have
a property with a getter, and

32
00:01:40.238 --> 00:01:45.612
the ordering with first it tries to set
plus one and then it gets, or it gets and,

33
00:01:45.612 --> 00:01:50.610
I don't wanna get so deep there because
it's not really important here.

34
00:01:50.610 --> 00:01:52.547
But we do have a foreach.

35
00:01:52.547 --> 00:01:55.387
But the foreach is different
to other languages.

36
00:01:55.387 --> 00:01:56.373
I mean, not so different.

37
00:01:56.373 --> 00:01:57.829
The nature is the same.

38
00:01:57.829 --> 00:02:02.197
But you first, this is a partly different.

39
00:02:02.197 --> 00:02:06.524
The first variable you define
here is the collection,

40
00:02:06.524 --> 00:02:10.579
not the element that you will be using for
the loop.

41
00:02:10.579 --> 00:02:13.943
So, first, I use the collection.

42
00:02:13.943 --> 00:02:20.297
Then we are using the as keyword and
we create one or two values.

43
00:02:20.297 --> 00:02:24.334
For example, in this case I
can say country in singular.

44
00:02:24.334 --> 00:02:29.974
And for example I can do an echo
of the country, okay, makes sense?

45
00:02:29.974 --> 00:02:36.359
So this is actually this will
loop through all the countries.

46
00:02:36.359 --> 00:02:40.659
So we say for
each country as this is in JavaScript,

47
00:02:40.659 --> 00:02:44.163
this is if for off in JavaScript, right?

48
00:02:44.163 --> 00:02:48.629
Just to give you an alternative,
in JavaScript, you say, for

49
00:02:48.629 --> 00:02:50.832
each country, of countries.

50
00:02:50.832 --> 00:02:55.339
You see in php, we reverse the order.

51
00:02:55.339 --> 00:03:01.097
We first add the collection, and
then we use as and then the value.

52
00:03:01.097 --> 00:03:06.526
If you have only one expression here,
is actually the value.

53
00:03:06.526 --> 00:03:10.121
But for example, VS Code here,
when I was typing for

54
00:03:10.121 --> 00:03:13.324
each was actually
suggesting me this syntax.

55
00:03:13.324 --> 00:03:16.382
You can get also key.

56
00:03:16.382 --> 00:03:19.970
For example, in this case,
the key will be the index or the I,

57
00:03:19.970 --> 00:03:21.353
if you wanna call the I.

58
00:03:21.353 --> 00:03:24.570
So, if you want both,
I can now look at this.

59
00:03:24.570 --> 00:03:28.693
I can put this in a string,

60
00:03:28.693 --> 00:03:33.200
and I can say, i : country.

61
00:03:33.200 --> 00:03:35.680
Does it make sense?

62
00:03:35.680 --> 00:03:41.621
So if I try to execute this,
we will stop executing

63
00:03:41.621 --> 00:03:46.435
from the terminal in just a few minutes.

64
00:03:46.435 --> 00:03:52.364
So I can do php arrays, oops, arrays.php.

65
00:03:52.364 --> 00:03:59.529
You actually need to add the .php
when you are executing this.

66
00:03:59.529 --> 00:04:02.211
And I'm getting 0: Argentina,
blah, blah, blah.

67
00:04:02.211 --> 00:04:08.205
You see I'm not getting the new line
because if you want a new line in

68
00:04:08.205 --> 00:04:13.363
the output,
you have to manually add the new line, \n.

69
00:04:13.363 --> 00:04:15.707
And finally, I have that output.

70
00:04:18.649 --> 00:04:21.366
&gt;&gt; Maximiliano Firtman: Okay, make sense?

71
00:04:21.366 --> 00:04:26.207
Yep
&gt;&gt; Maximiliano Firtman: There is

72
00:04:26.207 --> 00:04:33.684
an alternative syntax, because,
right now, we are just making an output.

73
00:04:33.684 --> 00:04:37.180
It's just a one PHP file that I'm
pretty sure that you are really

74
00:04:37.180 --> 00:04:38.550
comfortable with this.

75
00:04:38.550 --> 00:04:43.761
But it was pretty common
before of doing this,

76
00:04:43.761 --> 00:04:50.719
I close the tag here, and
then I open the tag again here, php.

77
00:04:50.719 --> 00:04:53.932
So then I don't need to do an echo.

78
00:04:53.932 --> 00:04:55.356
I do this.

79
00:04:56.757 --> 00:05:01.563
&gt;&gt; Maximiliano Firtman: And, of course,
then I open another tag here.

80
00:05:01.563 --> 00:05:06.199
That was pretty common before.

81
00:05:06.199 --> 00:05:10.402
I can also use a shortcut, but I don't
wanna mess too much with shortcuts here.

82
00:05:10.402 --> 00:05:15.123
This and I see your faces.

83
00:05:15.123 --> 00:05:17.030
Why this was most common before?

84
00:05:17.030 --> 00:05:23.327
Because we will write HTML and
it was better to see the HTML.

85
00:05:23.327 --> 00:05:27.355
Here maybe we have a line with an article,
and

86
00:05:27.355 --> 00:05:32.239
the article has an h1, and
then this one goes inside.

87
00:05:32.239 --> 00:05:36.961
So it's better to write HTML
outside of PHP and then say, well,

88
00:05:36.961 --> 00:05:39.942
in this place, how do I want PHP, okay?

89
00:05:39.942 --> 00:05:41.438
Okay, makes sense?

90
00:05:41.438 --> 00:05:42.943
Well, this should work.

91
00:05:42.943 --> 00:05:47.023
Of course,
I'll put in this in the console.

92
00:05:47.023 --> 00:05:49.416
It's not nice, okay, but it works.

93
00:05:49.416 --> 00:05:53.564
You can see I'm seeing different analyze
with different articles, so it works.

94
00:05:53.564 --> 00:05:55.417
This is more for the browser, okay?

95
00:05:55.417 --> 00:05:57.530
But the problem with this, it works.

96
00:05:57.530 --> 00:06:00.205
I mean,
I was creating a lot of code like this.

97
00:06:00.205 --> 00:06:04.897
The problem is this,
closing the code block.

98
00:06:04.897 --> 00:06:10.279
You, after a while,
because here you can have another

99
00:06:10.279 --> 00:06:15.427
PHP that has another for,
then you don't know after

100
00:06:15.427 --> 00:06:20.352
a while which language
element you're closing.

101
00:06:21.827 --> 00:06:25.504
&gt;&gt; Maximiliano Firtman: Okay,
so you get lost quickly.

102
00:06:25.504 --> 00:06:32.910
So that's why in modern PHP, so if you
have experience with PHP in the past,

103
00:06:32.910 --> 00:06:39.067
this ain't new, you can remove
the code block and add a colon.

104
00:06:39.067 --> 00:06:47.500
And then instead of closing
the code block you use,

105
00:06:47.500 --> 00:06:52.217
endforeach;
&gt;&gt; Maximiliano Firtman: It's optional.

106
00:06:52.217 --> 00:06:55.160
It's an alternative syntax, okay?

107
00:06:55.160 --> 00:07:01.284
That is useful for
when you are mixing output with PHP and

108
00:07:01.284 --> 00:07:04.025
it's not chat for each.

109
00:07:04.025 --> 00:07:10.176
We have this for while, for if, for
all the flow control structures.

