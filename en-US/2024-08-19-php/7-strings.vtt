WEBVTT

1
00:00:00.180 --> 00:00:02.380
&gt;&gt; Maximiliano Firtman: So
let's talk a little bit about the strings.

2
00:00:02.380 --> 00:00:05.400
That is something that we
are going to deal a lot.

3
00:00:05.400 --> 00:00:07.920
First, remember, we create a PHP file.

4
00:00:07.920 --> 00:00:11.962
The next first step,
what is, opening the tag.

5
00:00:11.962 --> 00:00:13.933
If you don't do that,
you don't have a PHP file.

6
00:00:13.933 --> 00:00:15.911
I mean, you have a PHP file,

7
00:00:15.911 --> 00:00:20.752
but everything you're writing will
be just literal output, okay?

8
00:00:20.752 --> 00:00:25.074
Okay, so strings, so
you already thought that I can

9
00:00:25.074 --> 00:00:30.532
just create the title of this
course is PHP fundamentals.

10
00:00:30.532 --> 00:00:33.923
Okay, so we just assign a string,
but double quotes,

11
00:00:33.923 --> 00:00:36.732
single quotes, is that the same?

12
00:00:36.732 --> 00:00:40.234
Well, let's dig into that,
we have single quotes.

13
00:00:42.551 --> 00:00:43.175
&gt;&gt; Maximiliano Firtman: Okay?

14
00:00:43.175 --> 00:00:48.677
That works as well, and double quotes,
but they're not exactly the same, why?

15
00:00:50.417 --> 00:00:56.395
I can for example say that,
I will create a message here,

16
00:00:56.395 --> 00:01:00.008
and I can say, the welcome to, and

17
00:01:00.008 --> 00:01:05.147
I wanna concatenate with
the name of the title.

18
00:01:05.147 --> 00:01:07.287
Okay, so how do you concatenate?

19
00:01:07.287 --> 00:01:10.807
Well, I'm pretty sure that
you're expecting this, right?

20
00:01:10.807 --> 00:01:12.667
So you say +title.

21
00:01:14.777 --> 00:01:20.300
But this is PHP, so
the answer sometimes is not so simple.

22
00:01:21.990 --> 00:01:28.561
We don't have the plus operator for
concatenation in PHP.

23
00:01:30.665 --> 00:01:34.928
&gt;&gt; Maximiliano Firtman: Why did you say
no, no, yeah, I'm feeling your pain, so

24
00:01:34.928 --> 00:01:38.849
you need to get used to this,
yeah, I take some time.

25
00:01:38.849 --> 00:01:42.708
I remember myself when I was switching
languages from JavaScript to PHP

26
00:01:42.708 --> 00:01:46.324
that I was forgetting about that and
I said, what is the operator?

27
00:01:46.324 --> 00:01:52.381
Dot, we concatenate
the strings with the dot,

28
00:01:52.381 --> 00:01:57.379
okay, it takes time to get used to, but

29
00:01:57.379 --> 00:02:00.717
it's not plus it's dot.

30
00:02:00.717 --> 00:02:05.127
Actually, it's not the only language that
is not using the plus for concatenation,

31
00:02:05.127 --> 00:02:08.879
there were others, Objective-C,
and others where it was different.

32
00:02:08.879 --> 00:02:13.059
But yeah, now all the languages
try to use the plus, okay?

33
00:02:14.619 --> 00:02:18.195
Remember that it's not actually
concatenation does not really exist,

34
00:02:18.195 --> 00:02:21.252
it's actually created in a third string,
a new string.

35
00:02:21.252 --> 00:02:24.459
But instead of doing that,
and you will like this one,

36
00:02:24.459 --> 00:02:28.806
instead of doing that, I can also
create another version of the message.

37
00:02:28.806 --> 00:02:31.295
So message2, so maybe you want, hey,

38
00:02:31.295 --> 00:02:35.101
do we have a way to do something like,
I mean, in JavaScript,

39
00:02:35.101 --> 00:02:39.954
we have this idea, another template
string, where you can do the same thing.

40
00:02:39.954 --> 00:02:45.169
Well, here in PHP, we can do this,
let me show you first.

41
00:02:45.169 --> 00:02:49.993
By the way, I know it's wrong, so
if you know PHP, maybe you're saying,

42
00:02:49.993 --> 00:02:53.450
hey, Max, that's wrong,
yeah, but give me a sec.

43
00:02:53.450 --> 00:02:58.683
So, if I execute this, strings.php,
I'm getting welcome to dollar sign,

44
00:02:58.683 --> 00:03:02.261
title, so, yeah, it's not working, right?

45
00:03:02.261 --> 00:03:03.461
Why is it not working?

46
00:03:03.461 --> 00:03:05.302
Because I'm using single quotes, and

47
00:03:05.302 --> 00:03:08.341
that's the big difference between
single and double quotes.

48
00:03:08.341 --> 00:03:11.391
Double quotes will let
you use interpolation.

49
00:03:12.801 --> 00:03:18.077
Interpolation is when you have
a variable or an expression used it,

50
00:03:18.077 --> 00:03:21.697
but it should contain
a variable expression.

51
00:03:21.697 --> 00:03:26.397
I will get into that in a second,
in a string, so now if I execute this,

52
00:03:26.397 --> 00:03:29.127
it says, welcome to PHP fundamentals.

53
00:03:29.127 --> 00:03:34.000
So then, we don't need to use
the dot all the time, [LAUGH] okay,

54
00:03:34.000 --> 00:03:37.703
we can just use double quotes for
your strings and

55
00:03:37.703 --> 00:03:41.584
then just put the name of
your variable in sign, and

56
00:03:41.584 --> 00:03:47.134
the dollar sign will say,
this is the output, okay?

57
00:03:47.134 --> 00:03:49.735
&gt;&gt; Speaker 2: So that only works with
the double quotes, you're saying?

58
00:03:49.735 --> 00:03:51.196
&gt;&gt; Maximiliano Firtman: Double quotes,
yeah, only with double quotes.

59
00:03:51.196 --> 00:03:54.572
If you do single quotes,
it will not interpolate anything inside.

60
00:03:54.572 --> 00:03:59.482
So the string that you put is a string
that you get in the output as a literal.

61
00:03:59.482 --> 00:04:03.115
&gt;&gt; Speaker 2: Okay, would you generally
only use the double quotes then in-

62
00:04:03.115 --> 00:04:03.762
&gt;&gt; Maximiliano Firtman: I mean,

63
00:04:03.762 --> 00:04:06.135
that's a first reaction.

64
00:04:06.135 --> 00:04:09.745
What's the problem of
always using double quotes?

65
00:04:09.745 --> 00:04:13.291
Maybe performance,
maybe this might not be a big deal,

66
00:04:13.291 --> 00:04:18.197
but when you have double quotes, the
interpreter expects that there might be

67
00:04:18.197 --> 00:04:24.069
an interpolation inside, so I need to
check if there is or not an interpolation.

68
00:04:24.069 --> 00:04:26.755
And in single quotes,
it's a literal, so it's it notes,

69
00:04:26.755 --> 00:04:30.259
it doesn't need to search inside,
so it's about performance.

70
00:04:30.259 --> 00:04:35.138
And that's why, yeah, but if you look at
PHP code out there, probably no one care

71
00:04:35.138 --> 00:04:39.666
a lot about that, so yeah, most developers
are just using double quotes and

72
00:04:39.666 --> 00:04:45.157
just in case, what they're not, they
don't think about the performance part.

73
00:04:45.157 --> 00:04:48.155
Again, it's not a big performance issue,
right,

74
00:04:48.155 --> 00:04:52.650
it's a couple of milliseconds that might
take more if you have a double quote,

75
00:04:52.650 --> 00:04:55.048
a string, and no interpolation inside.

76
00:04:55.048 --> 00:04:57.908
So do we have any other type of string?

77
00:04:57.908 --> 00:05:05.137
Yeah, we have two more, that will
look probably all for a lot of you.

78
00:05:05.137 --> 00:05:09.260
So, we don't have the back tick, so
if you're coming from JavaScript,

79
00:05:09.260 --> 00:05:10.464
no back tick, okay.

80
00:05:10.464 --> 00:05:15.141
No triple double quotes,
some other languages as well, let go, no.

81
00:05:15.141 --> 00:05:21.727
We have this, we can create a variable
like it can be a, let's say a JSON.

82
00:05:21.727 --> 00:05:23.537
Because how can I make a JSON?

83
00:05:23.537 --> 00:05:26.548
Because a JSON, as a string,
let's talk about string,

84
00:05:26.548 --> 00:05:30.014
I'm not talking about the JSON format,
but as a string, right?

85
00:05:30.014 --> 00:05:32.327
It's typically one multiline, right?

86
00:05:32.327 --> 00:05:36.957
So I wanna go multiline and
I wanna do a lot of stuff inside.

87
00:05:36.957 --> 00:05:38.777
So, how can I do that?

88
00:05:38.777 --> 00:05:42.852
Well, the way to do that is using
this syntax that is coming.

89
00:05:42.852 --> 00:05:47.499
So, the double quotes and the single
quotes maybe are coming from C, Java,

90
00:05:47.499 --> 00:05:52.000
the JavaScript to get from that part,
this one, the one you will see now,

91
00:05:52.000 --> 00:05:55.062
I'm not sure if you have seen that before.

92
00:05:55.062 --> 00:05:59.871
So in fact, let me point you
to the documentation, php.net.

93
00:05:59.871 --> 00:06:06.640
We have a special for strings now, but
then should be inside types strings.

94
00:06:06.640 --> 00:06:12.713
So you have the heredoc syntax,
the nowdoc syntax, is it there what?

95
00:06:14.033 --> 00:06:18.909
So I here is the thing case
a third way to delimit a string

96
00:06:18.909 --> 00:06:22.831
is this syntax, so
let me explain that one,

97
00:06:22.831 --> 00:06:29.610
you start with three less characters and
a name, an identifier.

98
00:06:29.610 --> 00:06:33.959
Typically, we use upper case identifiers,
but it's not mandatory.

99
00:06:33.959 --> 00:06:38.101
We can say,
we are going to write JSON, okay, but

100
00:06:38.101 --> 00:06:43.160
it can be anything, like PRETTYJSON,
wherever, any anything.

101
00:06:43.160 --> 00:06:47.682
Then you can write code and
for example JSON,

102
00:06:47.682 --> 00:06:51.847
let's take any JSON sample from the web,

103
00:06:51.847 --> 00:06:55.308
any weird one, doesn't matter.

104
00:06:55.308 --> 00:07:02.309
And when PHP knows or expect that to end,
when you put the identifier again, so

105
00:07:02.309 --> 00:07:07.318
for example here,
I say PRETTYJSON, that's the end.

106
00:07:07.318 --> 00:07:11.449
So what, let's remove some lines so

107
00:07:11.449 --> 00:07:16.310
we can see the beginning at the end.

108
00:07:16.310 --> 00:07:21.539
This is how it looks like, so you start
with this, with an identifier, and

109
00:07:21.539 --> 00:07:27.771
then when the identifier repeat somewhere
in the string, it means, it's ending here.

110
00:07:31.768 --> 00:07:34.889
&gt;&gt; Speaker 3: Does it validate that
it's actually valid JSON depending

111
00:07:34.889 --> 00:07:35.567
on-
&gt;&gt; Maximiliano Firtman: No, no,

112
00:07:35.567 --> 00:07:36.410
that's a string.

113
00:07:36.410 --> 00:07:38.705
At this point,
this is just a string, okay?

114
00:07:38.705 --> 00:07:40.059
So it's just a string.

115
00:07:40.059 --> 00:07:46.349
We will talk about JSON parsing later,
but this is just a string, okay?

116
00:07:47.509 --> 00:07:52.049
And to make things even weirder,
yeah, it can get weirder.

117
00:07:53.089 --> 00:07:57.029
Let me remove this one,
I wanna increase the font size one point.

118
00:07:57.029 --> 00:08:01.746
So what if I wanna take message2 and
put it here?

119
00:08:01.746 --> 00:08:05.321
Can I interpolate like we did
with double quotes before,

120
00:08:05.321 --> 00:08:07.716
like using dollar sign, message2?

121
00:08:08.766 --> 00:08:14.910
So actually, no, so if I try this,
even if I try to do an echo,

122
00:08:14.910 --> 00:08:21.178
by the way, echo of JSON,
this PRETTYJSON needs a semicolon,

123
00:08:21.178 --> 00:08:25.635
cuz it's ending that line, that string.

124
00:08:25.635 --> 00:08:30.845
So if I try to do this, okay,
I'm getting the output.

125
00:08:30.845 --> 00:08:38.535
Welcome to fundamentals, that's because
I saved it, yeah, I didn't save.

126
00:08:38.535 --> 00:08:44.486
Okay, so actually,
the difference between single quotes and

127
00:08:44.486 --> 00:08:49.315
double quotes happen here
if you put the identifier

128
00:08:49.315 --> 00:08:52.807
in single quotes or without quotes.

129
00:08:52.807 --> 00:08:55.781
So that's weird, I mean, it is weird.

130
00:08:55.781 --> 00:09:00.550
And we were looking at
the documentation here.

131
00:09:00.550 --> 00:09:04.603
This is the difference,
are when you go at the top,

132
00:09:04.603 --> 00:09:08.958
we have the heredoc is the one
without the identifier.

133
00:09:08.958 --> 00:09:13.827
Here they are using END, but
any identifier works here.

134
00:09:13.827 --> 00:09:17.134
And the other one is called the nowdoc.

135
00:09:17.134 --> 00:09:20.362
The nowdoc is the one with single quotes.

136
00:09:22.421 --> 00:09:25.589
&gt;&gt; Maximiliano Firtman: It is just that,
okay, I mean, it's a weird thing, but

137
00:09:25.589 --> 00:09:29.615
it's not the creation of PHP, okay,
this is coming from other places.

138
00:09:29.615 --> 00:09:34.260
That's why PHP sometimes feels
like a fusion of different

139
00:09:34.260 --> 00:09:36.738
languages working together.

140
00:09:36.738 --> 00:09:39.022
&gt;&gt; Speaker 4: This is
a lot like Unix shell.

141
00:09:39.022 --> 00:09:40.371
&gt;&gt; Maximiliano Firtman: Yeah,
it's coming from there,

142
00:09:40.371 --> 00:09:42.694
it's coming from Unix shell,
it's coming from there.

143
00:09:42.694 --> 00:09:47.165
In fact, it's the same name, then these
names, these two names, heredoc and

144
00:09:47.165 --> 00:09:49.333
nowdoc, are coming from there.

145
00:09:49.333 --> 00:09:53.268
We use this only on some specific
situations like PRETTYJSON,

146
00:09:53.268 --> 00:09:57.351
that we don't typically write
a JSON like this, we use a parser,

147
00:09:57.351 --> 00:10:02.273
writing a SQL query that is multiline,
a very complex SQL query.

148
00:10:02.273 --> 00:10:06.554
So, those situations, okay,
it's not so common, to be honest.

149
00:10:06.554 --> 00:10:11.274
Most of the time we use just single
quotes, double quotes, and that's all.

150
00:10:11.274 --> 00:10:15.362
So, just as I remember,
single quotes won't do interpolation,

151
00:10:15.362 --> 00:10:18.209
double quotes are doing interpolations,
and

152
00:10:18.209 --> 00:10:22.424
if you wanna concatenate,
it's the dot operator, not the plus.

153
00:10:22.424 --> 00:10:29.439
I think those are the most important
parts regarding string management.

154
00:10:29.439 --> 00:10:34.822
Okay, so something else that
might be important here is that,

155
00:10:34.822 --> 00:10:40.512
you may be, if you want, for
example, let's say year 2024,

156
00:10:40.512 --> 00:10:44.190
and you may wanna add expressions as well.

157
00:10:44.190 --> 00:10:47.615
So what if you want to say year +1?

158
00:10:47.615 --> 00:10:50.333
What will happen here?

159
00:10:50.333 --> 00:10:56.143
Will it pre 2024 + 1 or
2025, well, actually,

160
00:10:56.143 --> 00:11:01.847
this is just going to interpolate
until here, so there.

161
00:11:01.847 --> 00:11:07.112
And then, if you wanna change that,
you can use kind

162
00:11:07.112 --> 00:11:13.458
of a code block here like that,
and then it works like that.

163
00:11:13.458 --> 00:11:16.752
And then you have an expression inside.

164
00:11:16.752 --> 00:11:20.225
&gt;&gt; Maximiliano Firtman: Okay, it's not
common, to be honest, it's not common.

165
00:11:20.225 --> 00:11:23.467
We typically, I mean, it's common
in another languages, but in PHP,

166
00:11:23.467 --> 00:11:24.598
we don't use that a lot.

