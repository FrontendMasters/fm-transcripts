WEBVTT

1
00:00:00.242 --> 00:00:04.288
&gt;&gt; Maximiliano Firtman: So,
you've seen before variables, so

2
00:00:04.288 --> 00:00:07.977
I didn't spoil a few variables, and

3
00:00:07.977 --> 00:00:13.337
that's one of the most
recognizable moments of php.

4
00:00:13.337 --> 00:00:16.956
Variables start with a dollar sign.

5
00:00:16.956 --> 00:00:22.030
So we know something is a variable
because It has a dollar sign prefix.

6
00:00:22.030 --> 00:00:27.013
So there is no bar key, no let key, okay?

7
00:00:27.013 --> 00:00:33.521
You just say, my name is Max, that's all.

8
00:00:33.521 --> 00:00:38.911
And by the way, semicolons are mandatory.

9
00:00:38.911 --> 00:00:39.643
Sorry about that.

10
00:00:39.643 --> 00:00:42.102
For some of you,
depends on where you're coming from.

11
00:00:42.102 --> 00:00:45.135
My brain is already connected with that.

12
00:00:45.135 --> 00:00:49.014
So it's not a problem for me, but
I know that if you're coming from other

13
00:00:49.014 --> 00:00:51.827
languages, Swift, Kotlin,
or things like that.

14
00:00:51.827 --> 00:00:54.242
But yeah, you have to add semicolons.

15
00:00:54.242 --> 00:00:59.678
The only exception to that semicolons
is when you're closing the tile.

16
00:00:59.678 --> 00:01:04.243
In case you have multiple tags,
if you're closing the tag,

17
00:01:04.243 --> 00:01:08.361
the last line doesn't need
to have a semicolon because

18
00:01:08.361 --> 00:01:12.317
the closing tag is also
ending the sentence, okay?

19
00:01:12.317 --> 00:01:16.931
But it's the only exception for the rule.

20
00:01:16.931 --> 00:01:21.353
That also means that you will most of
the time don't use the rule, because you,

21
00:01:21.353 --> 00:01:23.409
your brain needs to see everywhere.

22
00:01:23.409 --> 00:01:25.876
So, yeah.

23
00:01:25.876 --> 00:01:28.417
So yeah semicolons,
variables, you can add us.

24
00:01:28.417 --> 00:01:29.758
You can create variables in the fly.

25
00:01:29.758 --> 00:01:32.413
I don't need to declare
the variable beforehand.

26
00:01:32.413 --> 00:01:37.118
So I don't need to say,
this is a variable I will have later.

27
00:01:37.118 --> 00:01:38.768
No, you just use the variable.

28
00:01:38.768 --> 00:01:42.725
Okay, and the variables can be
of different types, of course.

29
00:01:42.725 --> 00:01:46.542
I know I can have a year, 2025.

30
00:01:46.542 --> 00:01:48.832
That's a number, the internal number,
the internal string.

31
00:01:48.832 --> 00:01:52.518
We'll get into strings in a second.

32
00:01:52.518 --> 00:01:57.307
We have of course, Boolean,
like is finished, and I can say true,

33
00:01:57.307 --> 00:01:58.492
I can say false.

34
00:02:00.562 --> 00:02:06.518
No one asks Yet but for example of course
i can do this what about if I do this?

35
00:02:06.518 --> 00:02:11.695
Will it work so if I run this so
if I say php test php

36
00:02:11.695 --> 00:02:17.145
warning undefined variable
name with capital N.

37
00:02:17.145 --> 00:02:23.350
So php for
variable names is case sensitive.

38
00:02:23.350 --> 00:02:27.353
So it's not the same if it's capital N or
lower case n,

39
00:02:27.353 --> 00:02:33.290
which is a rule that probably you are
expecting depends on where you're coming.

40
00:02:33.290 --> 00:02:38.883
But what you are not expecting is this.

41
00:02:38.883 --> 00:02:45.953
You can use true in capital case
in lower case, in title case.

42
00:02:45.953 --> 00:02:53.433
There are some constants such as true,
false, and null that are case insensitive.

43
00:02:53.433 --> 00:03:00.017
So you can do some weird
things like this and it works.

44
00:03:00.017 --> 00:03:03.392
So Variable names are case sensitive, but

45
00:03:03.392 --> 00:03:09.124
you will find some pieces of the language
where it's case insensitive.

46
00:03:09.124 --> 00:03:13.311
So again if something is null,

47
00:03:13.311 --> 00:03:19.597
this is null you can use
null capital letters.

48
00:03:19.597 --> 00:03:24.816
That's will be good for
your eyes if you're coming from C++, for

49
00:03:24.816 --> 00:03:30.678
example, or you can use null lowercase
if you're coming from Javascript,

50
00:03:30.678 --> 00:03:32.981
Java, it's the same value.

51
00:03:32.981 --> 00:03:34.567
I'm not talking about different values,
right?

52
00:03:34.567 --> 00:03:36.288
It's just case insensitive.

53
00:03:36.288 --> 00:03:41.648
So it means it's just the same value,
which also means that when you are opening

54
00:03:41.648 --> 00:03:46.528
a php code from another developer,
it might not be using the same rules,

55
00:03:46.528 --> 00:03:50.225
the same design guidelines
as you're used to, okay?

56
00:03:50.225 --> 00:03:54.159
The good news that we have this year,
or from this year,

57
00:03:54.159 --> 00:03:59.514
is that if you need to continue working
on a project that you didn't create,

58
00:03:59.514 --> 00:04:04.305
you can use AI to convert that code
into your own design guidelines.

59
00:04:04.305 --> 00:04:06.900
You can ask ChatGPT or Gemini, hey,

60
00:04:06.900 --> 00:04:12.447
I have this php code that is using capital
letters for true, false, and null.

61
00:04:12.447 --> 00:04:14.361
Can you change all of that to lowercase?

62
00:04:14.361 --> 00:04:15.681
And it will do that, okay?

63
00:04:15.681 --> 00:04:17.984
So it's not a big deal these days.

64
00:04:17.984 --> 00:04:24.148
But yeah, you have different
ways to do the same thing.

65
00:04:24.148 --> 00:04:28.364
By the way, you are realizing
that I'm not defining data types.

66
00:04:28.364 --> 00:04:30.913
I'm just creating a variable,
setting a value.

67
00:04:30.913 --> 00:04:33.439
Can I change the data types?

68
00:04:33.439 --> 00:04:39.493
By the way, comments,
that's one comment, let's go one by one.

69
00:04:39.493 --> 00:04:42.561
Can I do this?

70
00:04:42.561 --> 00:04:46.737
It is a string initially, and
then I'm changing it to number.

71
00:04:46.737 --> 00:04:48.530
Can I do that?

72
00:04:48.530 --> 00:04:53.552
Well, first I didn't save the file,
so let me save the file.

73
00:04:53.552 --> 00:04:54.698
Run this again.

74
00:04:54.698 --> 00:04:57.033
I mean, I log it in error, so it works.

75
00:04:57.033 --> 00:05:03.274
If I do another echo,
Cosine without parentheses at one point.

76
00:05:03.274 --> 00:05:05.367
So I know how to be fat first.

77
00:05:05.367 --> 00:05:07.493
You don't like it, but it's not so bad.

78
00:05:07.493 --> 00:05:12.488
So I get a new max and the four and
you can see I don't have any new space,

79
00:05:12.488 --> 00:05:13.657
a new line.

80
00:05:13.657 --> 00:05:17.837
Do we have an echo line or
something like that?

81
00:05:17.837 --> 00:05:19.167
No, not really.

82
00:05:19.167 --> 00:05:26.652
Something that we can do is we can
echo a new line like that, okay?

83
00:05:26.652 --> 00:05:29.797
Backward end is the new line character,

84
00:05:29.797 --> 00:05:34.713
because we are actually sending
a string to the output, okay?

85
00:05:34.713 --> 00:05:37.705
So you can see that in
terms of data types.

86
00:05:37.705 --> 00:05:40.130
This is dynamic typing.

87
00:05:40.130 --> 00:05:43.388
So it can change the type of a variable.

88
00:05:43.388 --> 00:05:47.085
It's not going to complain,
similar to JavaScript, actually,

89
00:05:47.085 --> 00:05:50.066
or Python,
similar to a lot of scripting languages.

90
00:05:51.286 --> 00:05:53.490
It has a dynamic nature.

91
00:05:53.490 --> 00:05:58.093
Anyway, give me some minutes,
because I will show you that there

92
00:05:58.093 --> 00:06:02.864
are ways to narrow the type on some
specific situations, but not for

93
00:06:02.864 --> 00:06:04.806
normal variables, okay?

94
00:06:04.806 --> 00:06:08.701
Also, you can see that I'm just
writing code, global code.

95
00:06:08.701 --> 00:06:12.100
There is no class here,
no function yet, but

96
00:06:12.100 --> 00:06:16.849
I don't need to create a class or
a function or a main function.

97
00:06:16.849 --> 00:06:21.328
No, it's just going to execute my
PHP code line by line from the.

98
00:06:21.328 --> 00:06:22.322
The top to the bottom.

99
00:06:22.322 --> 00:06:27.644
So I think that the first paradigm
that you need to get is that

100
00:06:27.644 --> 00:06:33.178
the goal of a PHP script is to
send outputs to the console.

101
00:06:33.178 --> 00:06:34.468
Right now is the console.

102
00:06:35.748 --> 00:06:37.510
Remember, we still don't
have any web server here.

103
00:06:37.510 --> 00:06:38.685
Where is the web server?

104
00:06:38.685 --> 00:06:39.997
Did we set up any web server?

105
00:06:39.997 --> 00:06:41.306
No, we're just writing a script.

106
00:06:41.306 --> 00:06:42.706
Script, okay?

107
00:06:42.706 --> 00:06:45.945
Ae will get into the web server part,
but so far,

108
00:06:45.945 --> 00:06:50.528
it just a script because we are just
learning the basic syntax of php.

109
00:06:50.528 --> 00:06:54.304
It's just a text, okay, that's all.

110
00:06:54.304 --> 00:06:56.956
So that's why you can use this for
a scripting, for

111
00:06:56.956 --> 00:06:59.326
something simple to use your terminal.

112
00:06:59.326 --> 00:07:01.879
I'm not saying this is a normal situation.

113
00:07:01.879 --> 00:07:05.725
But at least for playing with basic php,
it's good enough.

114
00:07:05.725 --> 00:07:08.614
So variables, name,

115
00:07:08.614 --> 00:07:14.248
the name should start
with the dollar sign.

116
00:07:14.248 --> 00:07:17.759
Of course then it's a normal identifier,
so don't use spacy,

117
00:07:17.759 --> 00:07:19.849
things like that in this identifier.

118
00:07:19.849 --> 00:07:21.300
I think at this point you know that.

119
00:07:21.300 --> 00:07:23.606
There are weird things,
things that we can do.

120
00:07:23.606 --> 00:07:27.518
For example, I'm not saying you will
do that or we will do that now.

121
00:07:27.518 --> 00:07:31.190
There is something known
as variable variable.

122
00:07:33.030 --> 00:07:35.166
What?
That's a name, variable variable.

123
00:07:35.166 --> 00:07:38.313
So we can create the variable variable.

124
00:07:38.313 --> 00:07:39.260
What?

125
00:07:39.260 --> 00:07:40.663
Well, it's something like this.

126
00:07:40.663 --> 00:07:48.055
You can create A variable with a name for
example it can be course.

127
00:07:49.225 --> 00:07:55.666
And then we can say variable
variable equals to php Fundamentals.

128
00:07:58.531 --> 00:08:01.329
&gt;&gt; Maximiliano Firtman: I know this
is gonna be really weird for you.

129
00:08:01.329 --> 00:08:01.877
So what is that?

130
00:08:01.877 --> 00:08:03.231
Okay, what's going on?

131
00:08:03.231 --> 00:08:04.207
Variable, variable.

132
00:08:04.207 --> 00:08:07.946
Well also, I call it variable,
which is adding another variable thing.

133
00:08:07.946 --> 00:08:10.831
In this situation it
can be called anything.

134
00:08:10.831 --> 00:08:14.532
So it can be,, let's say B name,
variable name.

135
00:08:14.532 --> 00:08:16.309
So just forget about the variable.

136
00:08:16.309 --> 00:08:18.041
It can be any name.

137
00:08:18.041 --> 00:08:20.861
So now I can echo course.

138
00:08:22.511 --> 00:08:23.056
Now you will get what's.

139
00:08:23.056 --> 00:08:23.706
What's going on?

140
00:08:24.926 --> 00:08:29.496
So what's going on here?I'm
creating a course variable, but

141
00:08:29.496 --> 00:08:32.806
the name of the variable
is inside the string.

142
00:08:36.546 --> 00:08:38.623
Okay, so the name of the variable,

143
00:08:38.623 --> 00:08:42.866
the variable is actually the I
have two variables here.

144
00:08:42.866 --> 00:08:46.181
Name, and course.

145
00:08:46.181 --> 00:08:48.405
But the definition of the course variable,

146
00:08:48.405 --> 00:08:51.359
the name of the variable is
coming from another variable.

147
00:08:51.359 --> 00:08:52.589
That's called a variable variable.

148
00:08:54.629 --> 00:08:56.499
I mean, it's weird.

149
00:08:56.499 --> 00:08:57.209
Yeah, it's weird.

150
00:08:57.209 --> 00:08:59.846
But it also makes
the language really flexible,

151
00:08:59.846 --> 00:09:03.367
because you can be downloading
variable names from a database.

152
00:09:03.367 --> 00:09:07.102
Which also adds a lot of security risk,

153
00:09:07.102 --> 00:09:11.748
probably if you don't
know what you're doing.

154
00:09:11.748 --> 00:09:17.387
But you can create variables based on,
it can be an array or something like that.

155
00:09:17.387 --> 00:09:18.987
That's called variable variable.

156
00:09:18.987 --> 00:09:20.551
Do you use it on a daily basis?

157
00:09:20.551 --> 00:09:21.067
No.

158
00:09:21.067 --> 00:09:21.837
Not really.

159
00:09:21.837 --> 00:09:22.637
Okay, not really.

160
00:09:22.637 --> 00:09:26.660
But some Important things that I wanna
show you about the language and variables.

