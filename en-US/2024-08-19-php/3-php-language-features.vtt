WEBVTT

1
00:00:00.220 --> 00:00:05.740
So I'm talking about language types to
understand where PHP is actually located.

2
00:00:05.740 --> 00:00:10.970
So we have compiled languages where
you write code in those languages and

3
00:00:10.970 --> 00:00:12.692
you ship machine code.

4
00:00:12.692 --> 00:00:19.050
For example, C, C++,
Go are languages in this part.

5
00:00:19.050 --> 00:00:23.614
We have languages where you write code in,
for

6
00:00:23.614 --> 00:00:29.088
example, C-sharp, and
you then ship bytecode.

7
00:00:29.088 --> 00:00:33.957
So you compile to an intermediate
language, and then you ship bytecode,

8
00:00:33.957 --> 00:00:35.378
for example, Java.

9
00:00:37.328 --> 00:00:41.470
And then we have interpreted languages,
or scripts Scripting languages,

10
00:00:41.470 --> 00:00:44.584
sometimes we say where we
directly ship the source code.

11
00:00:44.584 --> 00:00:49.908
Where we deploy to the server or
to the platform directly

12
00:00:49.908 --> 00:00:54.789
the source code,
PHP belongs to this list, okay?

13
00:00:54.789 --> 00:01:00.774
So with PHP, you will publish your source
code directly to the server, okay?

14
00:01:00.774 --> 00:01:03.861
Like with JavaScript
that we publish directly,

15
00:01:03.861 --> 00:01:06.444
the source code to the browser, okay?

16
00:01:06.444 --> 00:01:07.344
Things like that.

17
00:01:07.344 --> 00:01:11.314
Okay, so key features of PHP before
actually going and writing some code.

18
00:01:12.344 --> 00:01:15.604
It's a very, very, but
very flexible language.

19
00:01:15.604 --> 00:01:17.544
We mentioned that a couple
of times at this point.

20
00:01:17.544 --> 00:01:22.535
So it's platform, so the interpreter
is available for Unix-based system,

21
00:01:22.535 --> 00:01:25.753
for Windows, for Linux, for Mac.

22
00:01:25.753 --> 00:01:28.863
There is an interpreter for Android,
in case you want to do that.

23
00:01:28.863 --> 00:01:31.722
We mentioned that we have
one in JavaScript now, so

24
00:01:31.722 --> 00:01:34.183
you can actually run it in the browser.

25
00:01:34.183 --> 00:01:36.133
So we have interpreters of PHP everywhere.

26
00:01:37.553 --> 00:01:43.644
Also, it has a wide, probably one of the
widest database support APIs available.

27
00:01:43.644 --> 00:01:46.634
So you can actually use any database.

28
00:01:46.634 --> 00:01:50.874
Of course, that's on a language you
also have for the main providers, but

29
00:01:50.874 --> 00:01:54.364
there are some not so
well-known databases out there.

30
00:01:54.364 --> 00:01:57.454
Well, PHP has support for it.

31
00:01:57.454 --> 00:01:59.177
It's open source,
we already mentioned that.

32
00:01:59.177 --> 00:02:01.497
It's multi-paradigm,
this is what I said before.

33
00:02:01.497 --> 00:02:03.097
You wanna do OP, go ahead.

34
00:02:03.097 --> 00:02:04.777
You don't wanna repeat, you don't need to.

35
00:02:05.877 --> 00:02:11.277
So you can just write code like
spaghetti code and it will work.

36
00:02:12.667 --> 00:02:14.691
It has a very rich standard library,

37
00:02:14.691 --> 00:02:18.042
rich in terms of the amount of
functions that are available.

38
00:02:18.042 --> 00:02:22.830
That's also one of the main criticisms
are coming to that library,

39
00:02:22.830 --> 00:02:27.618
because it's actually a list of
thousands of global functions that

40
00:02:27.618 --> 00:02:31.720
are not sometimes following
the same naming guideline.

41
00:02:31.720 --> 00:02:34.874
As I mentioned before,
is null, is set, we have one,

42
00:02:34.874 --> 00:02:40.022
we underscore, the other one doesn't
have underscore, so it's kind of a rich.

43
00:02:40.022 --> 00:02:44.502
A list of functions, you will always
find a function you want, but

44
00:02:44.502 --> 00:02:50.192
sometimes you also have several ways to do
the same thing with different paradigms.

45
00:02:51.282 --> 00:02:54.742
This is something that
we don't see these days.

46
00:02:54.742 --> 00:03:00.595
It has session management built in that
one of the great advantages of PHP.

47
00:03:00.595 --> 00:03:05.160
And it's still a great advantage
today compared with Node.js or

48
00:03:05.160 --> 00:03:08.281
Python when you're doing backend.

49
00:03:08.281 --> 00:03:09.521
So what is session management?

50
00:03:10.741 --> 00:03:14.042
It has some kind of a library built in,
I mean, it's not magic,

51
00:03:14.042 --> 00:03:15.521
I will explain how it works.

52
00:03:15.521 --> 00:03:18.559
But when you visit a website, a PHP,

53
00:03:18.559 --> 00:03:23.070
you can store variables in the session,
server side.

54
00:03:24.220 --> 00:03:29.218
Then if the user continues
navigating your website,

55
00:03:29.218 --> 00:03:34.216
you can get those variables
on additional requests,

56
00:03:34.216 --> 00:03:40.513
on future requests, and
automatically, it just works.

57
00:03:40.513 --> 00:03:44.189
Internally, it's creating cookies and
to create a session ID and

58
00:03:44.189 --> 00:03:46.493
saving those variables service update.

59
00:03:46.493 --> 00:03:48.793
It has all that thing built in.

60
00:03:48.793 --> 00:03:53.208
So a web designer without branding
comes where programming knowledge or

61
00:03:53.208 --> 00:03:54.953
skills can quickly do that.

62
00:03:56.153 --> 00:04:00.742
So you fill your name in a form and you
save that In the session and then you know

63
00:04:00.742 --> 00:04:05.718
the name of the user, you don't need
a database, you don't need to do anything.

64
00:04:05.718 --> 00:04:10.918
You shall save something in the session
and automatically that works because

65
00:04:10.918 --> 00:04:15.719
you know that HTTP, the protocol
we're using on the web is stateless.

66
00:04:16.769 --> 00:04:20.098
So on every new HTP request
we are making it a new one.

67
00:04:20.098 --> 00:04:24.078
It doesn't have a relationship
with the previous one.

68
00:04:24.078 --> 00:04:28.077
So from a service point of view,
we don't know if this request is coming

69
00:04:28.077 --> 00:04:31.628
from the same user as five minutes ago,
so I don't know.

70
00:04:31.628 --> 00:04:34.838
So we have to use a design pattern.

71
00:04:34.838 --> 00:04:38.388
In fact, you hack that to know server
side if it's the same user or not.

72
00:04:38.388 --> 00:04:40.595
Well, session management is built in PHP.

73
00:04:42.645 --> 00:04:46.295
And we can get from an idea to
an app in a matter of minutes.

74
00:04:46.295 --> 00:04:49.712
When you already know PHP,
I mean, when you are doing that,

75
00:04:49.712 --> 00:04:54.268
when you're using, I don't know,
you want to use Express.js with Node.js,

76
00:04:54.268 --> 00:04:56.283
yeah, you need to create a server.

77
00:04:56.283 --> 00:04:59.665
You need to install dependency,
you need to do this and that.

78
00:04:59.665 --> 00:05:03.172
With PHP, you can just write three,
four lines of code and

79
00:05:03.172 --> 00:05:06.679
yeah, we can discuss if we can
scale that If it's secure,

80
00:05:06.679 --> 00:05:10.774
it doesn't matter, but we can get
an MVP [LAUGH] really fast, okay?

81
00:05:10.774 --> 00:05:13.434
A minimal viable product.

82
00:05:13.434 --> 00:05:16.423
Why did you learn PHP fundamentals now?

83
00:05:16.423 --> 00:05:21.450
Well, we already mentioned some parts,
but the web is powered by PHP.

84
00:05:21.450 --> 00:05:26.184
So it's always a good
skill to have in your

85
00:05:26.184 --> 00:05:31.030
resume to maintain legacy web apps.

86
00:05:31.030 --> 00:05:35.837
Because by the way, it's true, it's
difficult to find a company these days,

87
00:05:35.837 --> 00:05:40.497
mostly in a startup that says, we
are going to start a new AI company, and

88
00:05:40.497 --> 00:05:42.548
everything will be based in PHP.

89
00:05:42.548 --> 00:05:46.540
Yeah, that's not actually
the most common situation.

90
00:05:46.540 --> 00:05:48.004
Okay, for different reasons.

91
00:05:48.004 --> 00:05:52.294
It doesn't matter, but
it's true that that's not the situation.

92
00:05:52.294 --> 00:05:57.192
So it will be more common to maintain
web apps that were created in

93
00:05:57.192 --> 00:05:58.834
the past 25 years.

94
00:06:00.054 --> 00:06:02.685
Of course, if you use WordPress,
Joomla, Drupal,

95
00:06:02.685 --> 00:06:05.029
you will need PHP to
extend the basic behavior.

96
00:06:05.029 --> 00:06:08.699
So it's good to know the language and
understand the basics.

97
00:06:08.699 --> 00:06:12.027
Or if you're going to use one of the more
popular web frameworks these days,

98
00:06:12.027 --> 00:06:14.789
Symfony, Laravel, or Code Igniter,
there are more, okay?

99
00:06:14.789 --> 00:06:20.745
But those are more popular than Django or
Java frameworks for

100
00:06:20.745 --> 00:06:25.197
the web, they're far more popular, okay?

101
00:06:25.197 --> 00:06:29.888
Again, maybe in the long tail,
maybe not in the mainstream,

102
00:06:29.888 --> 00:06:34.942
cool Silicon Valley companies,
maybe in the long tail of the web,

103
00:06:34.942 --> 00:06:38.030
we have more usage of these frameworks.

