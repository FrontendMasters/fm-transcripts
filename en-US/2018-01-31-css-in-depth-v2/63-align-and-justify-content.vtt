WEBVTT

1
00:00:02.560 --> 00:00:08.097
&gt;&gt; Estelle Weyl: So aligning the grid,
these were items, place-items,

2
00:00:08.097 --> 00:00:12.290
right, align-items, justify-items.

3
00:00:12.290 --> 00:00:16.344
We now have justify and align content.

4
00:00:18.660 --> 00:00:21.390
&gt;&gt; Estelle Weyl: Just to
show you what it does.

5
00:00:22.470 --> 00:00:25.700
It only matters if you have extra space,
right?

6
00:00:27.580 --> 00:00:32.500
That grid did not take up its entire
parent's space, so basically,

7
00:00:32.500 --> 00:00:39.120
all of the items should they be like,
is basically, instead of the gap.

8
00:00:40.850 --> 00:00:44.050
You can have a gap and center them and
still maintain the gap, but

9
00:00:44.050 --> 00:00:49.080
you can basically overwrite the gap
as well, now that you saw it.

10
00:00:49.080 --> 00:00:55.113
So justify-content has the same values
as we saw in justify-content for

11
00:00:55.113 --> 00:01:01.649
Flexbox, and align-content has the same
values as we saw for Flexbox as well.

12
00:01:09.518 --> 00:01:14.070
&gt;&gt; Estelle Weyl: If you define something
as a specific width, it'll be that width.

13
00:01:15.300 --> 00:01:20.540
So it's only autotrack sizes that can be
stretched, so let's just play with this.

14
00:01:22.462 --> 00:01:25.009
&gt;&gt; Estelle Weyl: So each of those
items is always gonna 150 pixels,

15
00:01:25.009 --> 00:01:27.113
cuz we said it's going to be 150 pixels.

16
00:01:30.757 --> 00:01:32.058
&gt;&gt; Estelle Weyl: And
we could make it super tiny,

17
00:01:32.058 --> 00:01:34.770
because remember the place-items,
what does place-items do?

18
00:01:36.680 --> 00:01:38.210
&gt;&gt; Speaker 2: Combination of a line.

19
00:01:38.210 --> 00:01:42.040
&gt;&gt; Estelle Weyl: It's aligned-items and
justified-items.

20
00:01:42.040 --> 00:01:43.510
And now, we're going to focus on content.

21
00:01:44.540 --> 00:01:48.694
So align content, let's not do this,
let's just do stretch.

22
00:01:52.487 --> 00:01:58.280
&gt;&gt; Estelle Weyl: Okay so,
&gt;&gt; Estelle Weyl: Okay,

23
00:01:58.280 --> 00:02:03.232
so what we've declared,
is we've declared five columns,

24
00:02:03.232 --> 00:02:07.740
I mean, five columns, yup,
of a 150 pixels each.

25
00:02:07.740 --> 00:02:09.520
We only have nine items.

26
00:02:09.520 --> 00:02:12.142
We could do three, right?

27
00:02:14.283 --> 00:02:17.251
&gt;&gt; Estelle Weyl: Now, we have tons
of extra space on the right and

28
00:02:17.251 --> 00:02:18.216
on the bottom,

29
00:02:18.216 --> 00:02:22.763
because I actually put an outline
around the size of the grid container.

30
00:02:22.763 --> 00:02:29.272
So the grid container is this like,
600 by 400 box or something like that.

31
00:02:29.272 --> 00:02:34.979
So align content basically says,
take the rows and

32
00:02:34.979 --> 00:02:39.590
spread them evenly in a certain way.

33
00:02:39.590 --> 00:02:43.667
So we could do flex-start,
which is a default, and

34
00:02:43.667 --> 00:02:46.760
put them all at the top, right?

35
00:02:46.760 --> 00:02:50.390
We could do flex-end,
which puts them all at the end.

36
00:02:50.390 --> 00:02:54.180
We could do center,
which puts it in the center of that box.

37
00:02:54.180 --> 00:03:00.180
The box goes down a little bit further,
so you can, there.

38
00:03:00.180 --> 00:03:01.107
Now it keeps popping up.

39
00:03:03.281 --> 00:03:07.995
&gt;&gt; Estelle Weyl: Okay,
then we can do space-between.

40
00:03:11.450 --> 00:03:16.266
&gt;&gt; Estelle Weyl: And if we remember from
yesterday, space-between puts the first

41
00:03:16.266 --> 00:03:20.181
item along the,
&gt;&gt; Estelle Weyl: The main or

42
00:03:20.181 --> 00:03:23.174
cross axis, main-start or cross-start, and

43
00:03:23.174 --> 00:03:26.678
then it puts the last one at cross-end or
main-end, and

44
00:03:26.678 --> 00:03:31.050
then it puts the equal amount of
space between any additional ones.

45
00:03:31.050 --> 00:03:35.981
So between this first row, that space
between the first and second row, and

46
00:03:35.981 --> 00:03:39.384
the space between the second and
third row is equal.

47
00:03:39.384 --> 00:03:42.945
Space-around was that ugly
thing that we did, right,

48
00:03:42.945 --> 00:03:46.127
which puts one-sixth of
the space above the top,

49
00:03:46.127 --> 00:03:50.979
one-third between second and third row,
one-third between the first and

50
00:03:50.979 --> 00:03:55.036
second row, and
then one-third afterwards, which is ugly.

51
00:03:55.036 --> 00:03:59.855
And then space-evenly,
&gt;&gt; Estelle Weyl: Puts the same

52
00:03:59.855 --> 00:04:02.786
amount of space between the top and
the first row, the first row and

53
00:04:02.786 --> 00:04:06.260
the second row, the second row and the
third row, and the third row in the end.

54
00:04:07.670 --> 00:04:12.399
So now, that's how we did it,
spacing out different rows,

55
00:04:12.399 --> 00:04:15.477
justify content spaces out the combs.

56
00:04:15.477 --> 00:04:21.245
So we can do flex-start,
&gt;&gt; Estelle Weyl: Flex-end,

57
00:04:23.293 --> 00:04:24.093
&gt;&gt; Estelle Weyl: Center,

58
00:04:26.277 --> 00:04:28.517
&gt;&gt; Estelle Weyl: Space-between.

59
00:04:30.062 --> 00:04:32.467
&gt;&gt; Estelle Weyl: And then,
if we do space-between here,

60
00:04:32.467 --> 00:04:34.615
that might actually be what we want.

61
00:04:34.615 --> 00:04:40.056
Unlikely, I prefer this,

62
00:04:40.056 --> 00:04:44.321
this and grid-gap.

63
00:04:50.443 --> 00:04:54.010
&gt;&gt; Estelle Weyl: Gap, 20 pixels, right?

64
00:04:54.010 --> 00:04:55.269
To me, that looks better.

65
00:04:55.269 --> 00:05:01.056
But, if we have body,
&gt;&gt; Estelle Weyl: If

66
00:05:01.056 --> 00:05:06.547
we have background,
&gt;&gt; Estelle Weyl: Blue,

67
00:05:06.547 --> 00:05:09.502
you realize there's all this empty space,
so

68
00:05:09.502 --> 00:05:15.090
you might actually want,
&gt;&gt; Estelle Weyl: That,

69
00:05:15.090 --> 00:05:17.560
which is probably the look
you're going for.

70
00:05:19.710 --> 00:05:21.450
Does that make enough sense to people?

71
00:05:21.450 --> 00:05:24.170
I know, it doesn't make full sense
to people, it's just important to

72
00:05:24.170 --> 00:05:29.200
understand that you can actually,
if there's extra room, spread them out.

73
00:05:29.200 --> 00:05:34.730
And not just using gap, but actually
using justify content and align content.

74
00:05:34.730 --> 00:05:37.748
So when it says align-items and
justify-items,

75
00:05:37.748 --> 00:05:40.210
it's aligning each item individually.

76
00:05:40.210 --> 00:05:46.459
I mean, it's aligning each item within
itself but globally, to all of them.

77
00:05:46.459 --> 00:05:49.628
And when you do align content and
justify content,

78
00:05:49.628 --> 00:05:54.730
it's aligning the whole row and the whole,
like all the rows and all the columns.

