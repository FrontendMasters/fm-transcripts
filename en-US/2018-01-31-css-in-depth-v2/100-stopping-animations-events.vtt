WEBVTT

1
00:00:02.131 --> 00:00:04.360
&gt;&gt; Estelle Weyl: So
can you stop an animation?

2
00:00:04.360 --> 00:00:05.810
Yes, you can.

3
00:00:05.810 --> 00:00:12.290
On hover, it says right there,
:pencil:hover animation-play-state:paused.

4
00:00:12.290 --> 00:00:15.510
So you can just play the catch the pencil
game, it's not actually that fun.

5
00:00:17.440 --> 00:00:20.690
So the two values are paused and
running, which is why that

6
00:00:20.690 --> 00:00:24.190
naming a function running,
naming an animation running is a problem.

7
00:00:25.240 --> 00:00:26.820
And here is the game catch the pencil.

8
00:00:28.490 --> 00:00:30.554
And just to show that I'm hovering
over it, I've made it green.

9
00:00:32.820 --> 00:00:39.460
Okay, in terms of the animation,
the api within the css specification.

10
00:00:39.460 --> 00:00:40.980
There is an animation
api which is different.

11
00:00:42.660 --> 00:00:45.160
There are some events that
happen that you could capture.

12
00:00:45.160 --> 00:00:49.000
There is the animationstart,
animationend and animationiteration.

13
00:00:50.580 --> 00:00:54.040
The animationstart occurs
when the animation starts,

14
00:00:54.040 --> 00:00:58.010
the animationends when the animation ends.

15
00:00:58.010 --> 00:01:02.570
And the animationiteration happens at
the end of every iteration, except for

16
00:01:02.570 --> 00:01:07.870
if it's at the exact same time as the
animation end, then it will not be thrown.

17
00:01:07.870 --> 00:01:11.163
So if you start an animation
three-quarters of the way through

18
00:01:11.163 --> 00:01:13.720
the animation,
you will get the animation end.

19
00:01:15.860 --> 00:01:22.190
But if you do exactly one animation,
you'll never get an animation iteration.

20
00:01:22.190 --> 00:01:24.830
Or if you stop at a point nine,
you will never get an animation.

21
00:01:27.260 --> 00:01:31.690
So, one of the things you can do because
of that issue that I talked about,

22
00:01:31.690 --> 00:01:34.553
it being the last thing on the UI
thread is you can start an animation.

23
00:01:34.553 --> 00:01:40.050
If you need to sequential animations,
you can start the second animation

24
00:01:40.050 --> 00:01:45.914
after the first one ends by actually doing
an event on the animation and event.

25
00:01:45.914 --> 00:01:48.450
You can remove a class and
re-add the class.

26
00:01:48.450 --> 00:01:53.019
All right, that's actually how I
sometimes reiterate once but you want to,

27
00:01:53.019 --> 00:01:56.672
if you do a classroom move and
a class re-add at the same time,

28
00:01:56.672 --> 00:02:00.889
that's almost time for the browser
to realize that the animation was,

29
00:02:00.889 --> 00:02:03.730
the class was added or
removed at the same time.

30
00:02:03.730 --> 00:02:06.640
And so there's not enough time
to restart the animation.

31
00:02:06.640 --> 00:02:09.720
So I put 100 milliseconds, I think
you probably do five milliseconds and

32
00:02:09.720 --> 00:02:11.910
it would work.

33
00:02:11.910 --> 00:02:14.910
So here, we're gonna just open this up.

34
00:02:15.980 --> 00:02:20.193
We're gonna open up the console and
we're gonna see that,

35
00:02:20.193 --> 00:02:25.555
all you see is it looks like it's blue.
&gt;&gt; Estelle Weyl: And

36
00:02:25.555 --> 00:02:28.534
then it looks like it's green.
&gt;&gt; Estelle Weyl: And then,

37
00:02:28.534 --> 00:02:32.847
it's gonna look like it's red.
&gt;&gt; Estelle Weyl: And the reason is,

38
00:02:32.847 --> 00:02:39.450
the blue one is the one that you see on
top right cuz it's the last one to clear?

39
00:02:39.450 --> 00:02:42.608
But it lasts nine seconds cuz it's
three seconds times three iterations,

40
00:02:42.608 --> 00:02:43.460
that's nine seconds.

41
00:02:43.460 --> 00:02:48.240
The green one lasts 16 seconds cuz there's
four iterations of four seconds each and

42
00:02:48.240 --> 00:02:53.280
the red one shows last,
because it lasts a total of 25 seconds.

43
00:02:53.280 --> 00:02:59.390
But you have three animation starts,
cuz they all started.

44
00:02:59.390 --> 00:03:04.369
Then you have five animation iterations,
before the animation end of the blue.

45
00:03:04.369 --> 00:03:08.877
Then you have another three,
before the animation end of the green.

46
00:03:08.877 --> 00:03:12.565
And then you have one more animation
iteration of the red before it

47
00:03:12.565 --> 00:03:14.075
ends five seconds later.

48
00:03:14.075 --> 00:03:18.602
So that's the events.

