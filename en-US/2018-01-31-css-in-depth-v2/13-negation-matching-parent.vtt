WEBVTT

1
00:00:02.701 --> 00:00:05.400
&gt;&gt; Estelle Weyl: Okay, so let's cover
some other logical combinators,

2
00:00:05.400 --> 00:00:08.843
including negation, which you've
seen me use, matching and parent.

3
00:00:08.843 --> 00:00:12.037
So you've seen me type this a few times.

4
00:00:12.037 --> 00:00:14.254
What does it mean, :not?

5
00:00:14.254 --> 00:00:21.314
It means not whatever is
inside the parentheses.

6
00:00:21.314 --> 00:00:26.270
So this matches any element
that is not also matched by s1.

7
00:00:28.710 --> 00:00:32.701
s1 is a selector and
it's a simple selector.

8
00:00:32.701 --> 00:00:39.562
By simple selector,
I don't mean easy selector like e f.

9
00:00:39.562 --> 00:00:42.159
That's actually a combinator,
no combinators.

10
00:00:42.159 --> 00:00:48.207
A simple selector is
like nth of type 27 n+3.

11
00:00:48.207 --> 00:00:49.751
That's a simple selector.

12
00:00:49.751 --> 00:00:52.653
There's no spaces, there's no combinators.

13
00:00:52.653 --> 00:00:57.646
So you can say,
if you want to do everything but

14
00:00:57.646 --> 00:01:02.254
the first five list items, you could do e,

15
00:01:02.254 --> 00:01:07.644
not first of type of e, or
nth of type 2 e, right?

16
00:01:07.644 --> 00:01:09.292
So that'd be one way of doing it.

17
00:01:09.292 --> 00:01:17.756
So it basically matches any div that
does not have the class of excludeMe.

18
00:01:17.756 --> 00:01:22.280
So this basically excludes
everything that says it has a class

19
00:01:22.280 --> 00:01:26.755
of excludeMe.
&gt;&gt; Estelle Weyl: So specificity.

20
00:01:26.755 --> 00:01:32.196
The specificity of not is,
it doesn't have any specific weight.

21
00:01:32.196 --> 00:01:34.564
The not itself doesn't
have any specificity.

22
00:01:34.564 --> 00:01:38.698
Whatever is inside there is
what gives it the weight.

23
00:01:38.698 --> 00:01:44.073
So here the .excludeMe,
you would have 010 for

24
00:01:44.073 --> 00:01:48.323
the excludeMe, and 001 for the div.

25
00:01:48.323 --> 00:01:50.342
So that would be a 011.

26
00:01:50.342 --> 00:01:57.238
If this had been a pound sign,
all right, it would be,

27
00:02:01.094 --> 00:02:05.072
&gt;&gt; Estelle Weyl: 101, because 100 for

28
00:02:05.072 --> 00:02:09.400
the ID and 001 for the div.

29
00:02:09.400 --> 00:02:12.121
Does that make sense?
&gt;&gt; Estelle Weyl: Okay.

30
00:02:13.748 --> 00:02:14.503
&gt;&gt; Estelle Weyl: Has been supported for

31
00:02:14.503 --> 00:02:18.928
a long time.
&gt;&gt; Estelle Weyl: Not supported yet, or

32
00:02:18.928 --> 00:02:22.021
actually just in Safari
is saying many things.

33
00:02:22.021 --> 00:02:23.786
So you can put a list of things.

34
00:02:23.786 --> 00:02:28.410
So we could have done,
E:not nth of type 1 or

35
00:02:28.410 --> 00:02:32.319
nth of only type, that kind of stuff.

36
00:02:32.319 --> 00:02:37.973
Still they have to be simple selectors,
so no combinators within them.

37
00:02:37.973 --> 00:02:40.646
But you can put as many as you want,
and that will be supported.

38
00:02:40.646 --> 00:02:42.434
Safari is supporting it already.

39
00:02:42.434 --> 00:02:45.166
So it will match any div, except for

40
00:02:45.166 --> 00:02:50.004
the ones that have either
the classes excludeMe or excuseYou.

41
00:02:50.004 --> 00:02:53.988
You could also have written for right now,

42
00:02:53.988 --> 00:02:58.989
you can do,
&gt;&gt; Estelle Weyl: And string them together,

43
00:02:58.989 --> 00:03:04.056
that works.
&gt;&gt; Estelle Weyl: So

44
00:03:04.056 --> 00:03:06.990
let's take 60 seconds
to just play with this.

45
00:03:06.990 --> 00:03:09.487
Play with it on your own,
but I'm gonna do it up here.

46
00:03:09.487 --> 00:03:15.778
So all of them have the color
of blue to start with.

47
00:03:15.778 --> 00:03:20.311
And then, all of them change
to the color red, except for

48
00:03:20.311 --> 00:03:25.427
if it's the first child,
which would also be the first of type.

49
00:03:25.427 --> 00:03:29.490
And here, I can put

50
00:03:32.126 --> 00:03:38.024
&gt;&gt; Estelle Weyl: nth of type 2n.

51
00:03:38.024 --> 00:03:40.390
And that actually matches then every,

52
00:03:40.390 --> 00:03:44.626
I basically send don't match any
even ones, just match the odd ones.

53
00:03:44.626 --> 00:03:48.457
And then I could do +1 here and
that still matches.

54
00:03:48.457 --> 00:03:54.507
But I could not do,
&gt;&gt; Estelle Weyl: li,

55
00:03:54.507 --> 00:04:00.404
that is a child of an li
because that has a space in it.

56
00:04:00.404 --> 00:04:03.876
And that means that it
is a complex selector.

57
00:04:03.876 --> 00:04:06.457
Even though it's a really easy selector,
right,

58
00:04:06.457 --> 00:04:08.507
an li that is a descendant of another li.

59
00:04:08.507 --> 00:04:14.706
Or that is the descendant
of an unordered list.

60
00:04:14.706 --> 00:04:17.698
So you'd think that that would say,
any li except for

61
00:04:17.698 --> 00:04:20.372
the ones that is the child
of an unordered list.

62
00:04:20.372 --> 00:04:22.028
But that is complex selector,

63
00:04:22.028 --> 00:04:26.208
not a simple selector.
&gt;&gt; Estelle Weyl: And

64
00:04:26.208 --> 00:04:31.288
you can actually put
an attribute in there, so

65
00:04:31.288 --> 00:04:38.855
we could say not, well that's a link
within an li so I can't do that.

66
00:04:38.855 --> 00:04:45.007
Not so let's just do not nth-of-type,

67
00:04:45.007 --> 00:04:48.164
3n
&gt;&gt; Estelle Weyl: And

68
00:04:48.164 --> 00:04:50.104
then I need to add one more there.

69
00:04:50.104 --> 00:04:55.353
Okay, so let's go on to the next one, now
that you've played with that a little bit.

70
00:04:55.353 --> 00:04:59.817
We don't have matches yet,

71
00:04:59.817 --> 00:05:05.219
I don't believe.
&gt;&gt; Estelle Weyl: But

72
00:05:05.219 --> 00:05:10.534
matches is going to be cool because
it'll match a whole slew of things.

73
00:05:10.534 --> 00:05:16.169
So you can say li that matches, and have
all of these things that come after it.

74
00:05:16.169 --> 00:05:19.733
So it's basically using Sass selectors,

75
00:05:19.733 --> 00:05:25.673
without producing all that extra
cruft because how it basically adds,

76
00:05:25.673 --> 00:05:29.933
it puts it all in one line and
it doesn't expand it.

77
00:05:29.933 --> 00:05:31.418
It's nicely there.

78
00:05:31.418 --> 00:05:38.596
Seeing li that matches, it has a title,
it has a role, either one and then an a.

79
00:05:38.596 --> 00:05:42.078
So any a that is a deescendant of
the li that has a title or a role.

80
00:05:42.078 --> 00:05:45.759
It basically matches this.

81
00:05:45.759 --> 00:05:50.067
So this right here is
a very simple example.

82
00:05:50.067 --> 00:05:53.167
So the second one is actually
shorter than the first one.

83
00:05:53.167 --> 00:05:59.865
But you can imagine if you had long class
names, and 16 of them, or added here.

84
00:05:59.865 --> 00:06:02.780
We have any,

85
00:06:02.780 --> 00:06:08.705
oops,
&gt;&gt; Estelle Weyl: Where was I?

86
00:06:08.705 --> 00:06:14.714
Here, so I'll just put every
turn in here so I can see it.

87
00:06:14.714 --> 00:06:20.120
So, any a that is either focused or
active, right?

88
00:06:20.120 --> 00:06:25.314
That is nested within a slide,
that matches, that is either a descendant

89
00:06:25.314 --> 00:06:29.440
of home, an element with an ID of home,
or an element with an ID of contact.

90
00:06:29.440 --> 00:06:31.643
Right, so
it's one line that matches these four

91
00:06:31.643 --> 00:06:37.489
lines.
&gt;&gt; Estelle Weyl: And

92
00:06:37.489 --> 00:06:39.780
let me just get rid of all of this
to see if there's anything else.

93
00:06:39.780 --> 00:06:45.198
It is supported in Safari right now.
&gt;&gt; Estelle Weyl: So you

94
00:06:45.198 --> 00:06:49.822
could actually play with it live, and you
can do it if you're targeting only iOS.

95
00:06:49.822 --> 00:06:56.988
So similar to matches we actually
have something that does match.

96
00:06:56.988 --> 00:06:58.764
So this is something you can use.

97
00:06:58.764 --> 00:07:01.054
What I just explained
is that you can't use,

98
00:07:01.054 --> 00:07:04.110
you actually can use with prefix,
and I do.

99
00:07:04.110 --> 00:07:09.430
This is one of those things where
because in terms of JavaScript

100
00:07:09.430 --> 00:07:15.150
when I want to reach a bunch of elements,
I can do it this way.

101
00:07:15.150 --> 00:07:19.459
So I can use query selector all and
match and put these in matches.

102
00:07:19.459 --> 00:07:25.204
In Safari, it's matches, in Chrome and

103
00:07:25.204 --> 00:07:29.975
Android, it's -webkit-any.

104
00:07:29.975 --> 00:07:34.085
And in Firefox, it's -moz-any.

105
00:07:34.085 --> 00:07:37.022
So what does this not match?

106
00:07:37.022 --> 00:07:39.820
Edge, right?

107
00:07:39.820 --> 00:07:45.160
We're not targeting but if you're going to
do mobile, who here has a Windows Phone?

108
00:07:47.900 --> 00:07:50.191
So sad, I feel so bad for
them, no I don't.

109
00:07:50.191 --> 00:07:52.270
&gt;&gt; multiple: [LAUGH]

110
00:07:52.270 --> 00:07:54.259
&gt;&gt; Estelle Weyl: So you can actually use

111
00:07:54.259 --> 00:07:59.816
matches, but it's prefixed with any for
WebKit and Mozilla.

112
00:07:59.816 --> 00:08:04.624
So this is basically showing if you just

113
00:08:04.624 --> 00:08:09.150
used this, which is pretty simple.

114
00:08:09.150 --> 00:08:14.908
It expands out to that,
which is not so simple, right?

115
00:08:14.908 --> 00:08:19.395
So it's a span that's a descendant of ban,
bar, or foo,

116
00:08:19.395 --> 00:08:22.703
of a link that has
either of those classes.

117
00:08:22.703 --> 00:08:26.554
And so you would actually have to,
&gt;&gt; Estelle Weyl: And

118
00:08:26.554 --> 00:08:31.916
you can put the not.
&gt;&gt; Estelle Weyl: So you can any link other

119
00:08:31.916 --> 00:08:36.796
than one that has the class of bam,
bar, or foo.

120
00:08:36.796 --> 00:08:38.805
So match all the links
in this entire document,

121
00:08:38.805 --> 00:08:40.824
except for
ones that have these three classes.

122
00:08:40.824 --> 00:08:45.121
So you can put matches inside a not and
do really complex things.

123
00:08:45.121 --> 00:08:50.119
So the weird thing is, let's say we

124
00:08:50.119 --> 00:08:54.962
have foo, bar, and bam, right?

125
00:08:54.962 --> 00:08:58.643
What is the specificity of this?

126
00:08:58.643 --> 00:09:00.919
It depends what is matching.

127
00:09:00.919 --> 00:09:04.932
So if it matches, actually,
it's basically the highest,

128
00:09:04.932 --> 00:09:07.304
cuz in here, it'd be not, right?

129
00:09:07.304 --> 00:09:13.133
So the specificity would be one ID.
&gt;&gt; Estelle Weyl: One element and

130
00:09:13.133 --> 00:09:14.410
one element.

131
00:09:14.410 --> 00:09:19.170
So when you have three things in here,
I believe.

132
00:09:19.170 --> 00:09:21.365
And I'm not 100% sure, so
I would have to double-check.

133
00:09:21.365 --> 00:09:25.106
But I believe it is the one with the
strongest weight, when it's not matching.

134
00:09:25.106 --> 00:09:26.724
And when it is matching,

135
00:09:26.724 --> 00:09:30.585
it is whatever the weight of
the property that is matching.

136
00:09:30.585 --> 00:09:35.100
So here if it was bam,
it would be matching at 011, and

137
00:09:35.100 --> 00:09:38.782
if it was foo,
it would be matching at 101.

138
00:09:38.782 --> 00:09:44.557
Does that make sense?
&gt;&gt; Estelle Weyl: So

139
00:09:44.557 --> 00:09:48.997
we were gonna have the reference
combinator and it was removed.

140
00:09:48.997 --> 00:09:51.342
So I don't know if it
is supported anywhere.

141
00:09:51.342 --> 00:09:54.512
But that was basically,
if you could actually say,

142
00:09:54.512 --> 00:09:58.259
find an element that is referenced
by the self other element,

143
00:09:58.259 --> 00:10:01.830
which would be really good for
inputs and labels.

144
00:10:01.830 --> 00:10:06.837
And would be really good for ARIA,
because a lot of times in ARIA,

145
00:10:06.837 --> 00:10:09.673
you say labeled by this other thing.

146
00:10:09.673 --> 00:10:12.310
And would be good for data lists.

147
00:10:12.310 --> 00:10:14.515
Do you all know what a data list is?

148
00:10:14.515 --> 00:10:17.894
Okay, so an input,
have you ever seen a select and

149
00:10:17.894 --> 00:10:21.522
it looks like an input and
you have all these options.

150
00:10:21.522 --> 00:10:27.363
And like Google Chrome,
it's like what do I want for?

151
00:10:27.363 --> 00:10:29.078
And you think it would say Christmas, but

152
00:10:29.078 --> 00:10:32.720
it really is gonna be some inappropriate
thing that you can't repeat.

153
00:10:32.720 --> 00:10:36.710
Because people search for
really weird things online, and

154
00:10:36.710 --> 00:10:38.920
most people just fake it when
you have those pictures.

155
00:10:38.920 --> 00:10:42.375
And have you ever gone to Twitter,
and you've seen?

156
00:10:42.375 --> 00:10:44.481
That's because that's
what they search for,

157
00:10:44.481 --> 00:10:47.068
because I don't get the same
results that they do, yeah.

158
00:10:47.068 --> 00:10:50.055
They're just basically telling
you what they're searching for.

159
00:10:50.055 --> 00:10:52.933
So anyway, that's a drop-down, right?

160
00:10:52.933 --> 00:10:55.906
It's kind of like it's an input, but
there's a drop-down with options.

161
00:10:55.906 --> 00:10:59.557
There's a native element
in HTML that does that.

162
00:10:59.557 --> 00:11:04.937
It is the list attribute on the input,
so you put list and

163
00:11:04.937 --> 00:11:08.844
then you point it to
the ID of a data list.

164
00:11:08.844 --> 00:11:13.722
And the data list is basically a series
of options but it's not in a select.

165
00:11:13.722 --> 00:11:16.961
Instead it's in a data list element.

166
00:11:16.961 --> 00:11:21.390
And you basically give it
all sorts of options, and

167
00:11:21.390 --> 00:11:26.549
then when you are on,
I'll show you that during the break.

168
00:11:26.549 --> 00:11:31.222
It's really cool, and you can basically
do that natively in the browser

169
00:11:31.222 --> 00:11:34.139
without adding any JavaScript frameworks.

170
00:11:34.139 --> 00:11:35.695
So anyways, we don't get that.

171
00:11:35.695 --> 00:11:38.760
Instead, we go on to the Parent Selector.

172
00:11:38.760 --> 00:11:43.833
So originally, it was going to be this and
now it is going to be this.

173
00:11:43.833 --> 00:11:46.213
Not supported yet, so that could change.

174
00:11:46.213 --> 00:11:49.257
But a header that has an h1,
h2, basically,

175
00:11:49.257 --> 00:11:53.005
a header that has a heading is
what this would say, right?

176
00:11:53.005 --> 00:11:59.878
A header that does not have a heading,
right, header not has.

177
00:11:59.878 --> 00:12:04.383
So the reason that we haven't been able to
get a parent selector is because when I

178
00:12:04.383 --> 00:12:08.903
said earlier that things needed to be
pre-fixed until they were ready to ship.

179
00:12:08.903 --> 00:12:13.705
Performance of checking every element
to see what descendants they have,

180
00:12:13.705 --> 00:12:14.626
is very slow.

181
00:12:14.626 --> 00:12:18.285
So they've never figured out
a performant enough way to do this.

182
00:12:18.285 --> 00:12:23.400
And there is something down there and
I can't show it to you,

183
00:12:23.400 --> 00:12:27.026
or I could,
let me just show it to you here.

184
00:12:27.026 --> 00:12:32.026
Inspect, and then go to Slide,

185
00:12:32.026 --> 00:12:37.405
and then increase the slide size.

186
00:12:37.405 --> 00:12:40.598
So this is an Inspector,
I told you I will show you an Inspector.

187
00:12:40.598 --> 00:12:43.779
And what I wanna do is I wanna
increase the size of my slides.

188
00:12:43.779 --> 00:12:51.095
So I can actually live change my slides
and I just give it a height of 800, okay.

189
00:12:51.095 --> 00:12:54.834
So header,
contain something that is not a header.

190
00:12:54.834 --> 00:12:57.632
So this one says,

191
00:12:57.632 --> 00:13:03.610
a header that has something, right?

192
00:13:03.610 --> 00:13:06.769
It has a child that is not an H1,
H2, H3, so

193
00:13:06.769 --> 00:13:09.940
you can get really complex
with these things.

194
00:13:09.940 --> 00:13:15.388
So when you say you can't target something
without an ID or a class, yeah you can.

195
00:13:15.388 --> 00:13:17.443
I wouldn't do this in production.

196
00:13:17.443 --> 00:13:19.625
This is just too complex, but you can.

197
00:13:19.625 --> 00:13:21.251
You can actually do that.

198
00:13:21.251 --> 00:13:24.769
And so let's see if the parent
selector is supported yet.

199
00:13:24.769 --> 00:13:27.473
Open in a new window.

200
00:13:27.473 --> 00:13:32.512
And no,
parent selectors are not selected yet.

201
00:13:32.512 --> 00:13:37.249
So okay, so we still have to wait a while.

