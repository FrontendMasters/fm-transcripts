WEBVTT

1
00:00:02.320 --> 00:00:05.541
&gt;&gt; Estelle Weyl: And then there is
sometimes where CSS you have a problem and

2
00:00:05.541 --> 00:00:08.827
CSS is actually a solution
instead of using frameworks, so

3
00:00:08.827 --> 00:00:10.870
I came up with two things.

4
00:00:10.870 --> 00:00:17.194
I had a designer who really didn't
want the placeholder to be gray and

5
00:00:17.194 --> 00:00:22.001
he wanted it to stay when
the user was typing in code.

6
00:00:22.001 --> 00:00:26.698
So here if I type in the 5,

7
00:00:26.698 --> 00:00:32.686
the month, so May 44, right?

8
00:00:32.686 --> 00:00:36.196
You saw here that the Y was still
there and the Y is pink but

9
00:00:36.196 --> 00:00:38.970
I could change it and
make it green, right?

10
00:00:41.640 --> 00:00:43.670
Right now it's one pixel too high but
I can fix that.

11
00:00:45.530 --> 00:00:50.850
So I had this requirement
to figure out how

12
00:00:50.850 --> 00:00:55.470
to make it so
the placeholder was a different color so

13
00:00:55.470 --> 00:01:00.340
that it was a mask, it was input masking
so that when the user was entering data,

14
00:01:00.340 --> 00:01:04.340
they always saw it and
I thought how can I do this.

15
00:01:04.340 --> 00:01:08.150
I can either use jquery with
the input mask framework,

16
00:01:08.150 --> 00:01:11.390
which keeps it the same color, but
at least makes input mask black,

17
00:01:11.390 --> 00:01:15.090
cuz it's actually the value, or
I could come up with a solution.

18
00:01:15.090 --> 00:01:22.116
So my solution was to create
a span that is behind the input.

19
00:01:22.116 --> 00:01:28.469
So making the input transparent,
put a span behind it that says MM/YY.

20
00:01:28.469 --> 00:01:33.068
And when they fill in the first character,

21
00:01:33.068 --> 00:01:36.580
that first M goes transparent.

22
00:01:36.580 --> 00:01:38.850
When they fill in the second character,
that second M,

23
00:01:38.850 --> 00:01:42.670
it's still there as the number 5 but
it is transparent.

24
00:01:42.670 --> 00:01:45.570
And then when they enter 4 with
Javascript, I add the slash.

25
00:01:47.020 --> 00:01:52.600
But with the CSS, I make the mask that
they have already entered transparent.

26
00:01:52.600 --> 00:01:58.090
So what I did is I basically
set input idea for

27
00:01:58.090 --> 00:01:59.944
the ZIP code if this one's for
the ZIP code.

28
00:01:59.944 --> 00:02:07.890
I said id = zip, type = telephone so
that I get the keypad, the number keypad.

29
00:02:07.890 --> 00:02:12.005
Name is ZIP code, class is mask,
placeholder is xxxxx or

30
00:02:12.005 --> 00:02:15.980
5 x's,
pattern which is an HTML5 attribute.

31
00:02:15.980 --> 00:02:20.010
I said five digits exactly and
entitled five digits it could.

32
00:02:20.010 --> 00:02:22.310
With a little bit of JavaScript,
I progressively enhanced it.

33
00:02:22.310 --> 00:02:26.340
If they don't have JavaScript, it still
works fine cuz the above is totally valid

34
00:02:26.340 --> 00:02:29.790
HTML and the browser will validate it.

35
00:02:29.790 --> 00:02:37.294
If they have JavaScript,
it takes the masked.

36
00:02:37.294 --> 00:02:42.040
It puts a span in front of
it with Aria head untrue,

37
00:02:42.040 --> 00:02:46.560
the idea is that mask and
then if they had entered

38
00:02:46.560 --> 00:02:51.775
the number 123,
the number 123 is inside the I.

39
00:02:51.775 --> 00:02:55.710
And then the numbers if they haven't done
the mass that still there is not inside

40
00:02:55.710 --> 00:02:58.630
the eye and I made the eye transparent.

41
00:02:58.630 --> 00:03:03.170
So that whole span,
which goes before in the code,

42
00:03:03.170 --> 00:03:08.900
before the markup, before that input,
is just the actual

43
00:03:08.900 --> 00:03:13.640
final value that we're looking for, with
the stuff that's in the I transparent.

44
00:03:13.640 --> 00:03:19.040
So, this took very little JavaScript, it
took 125 lines of JavaScript to basically

45
00:03:19.040 --> 00:03:24.040
Not just create this but also to validate
to ensure that there's firm validation.

46
00:03:25.660 --> 00:03:30.750
And the css is basically
shell span color green,

47
00:03:30.750 --> 00:03:38.521
which you can change
&gt;&gt; Estelle Weyl: The I is transparent.

48
00:03:38.521 --> 00:03:43.455
And.
&gt;&gt; Estelle Weyl: It's kind

49
00:03:43.455 --> 00:03:47.608
of it.
&gt;&gt; Estelle Weyl: There's a GitHub Repo

50
00:03:47.608 --> 00:03:49.060
right here if you wanna take a look.

51
00:03:50.420 --> 00:03:53.430
There's a few more lines of CSS and for

52
00:03:53.430 --> 00:03:56.070
some reason I did not include
it in this little thing.

53
00:03:56.070 --> 00:03:59.949
Let's click on the GitHub Repo,
open in a new tab, and take a look.

54
00:04:18.158 --> 00:04:19.372
&gt;&gt; Estelle Weyl: The CSS

55
00:04:24.429 --> 00:04:26.154
&gt;&gt; Estelle Weyl: The input that's masked,

56
00:04:26.154 --> 00:04:29.154
the important part is
that it's transparent,

57
00:04:29.154 --> 00:04:33.060
that's the only feature that
is monospace and transparent.

58
00:04:33.060 --> 00:04:34.520
That's really the only
thing that's different.

59
00:04:36.010 --> 00:04:43.140
The shell span I is transparent or has an
opacity of zero or its visibility hidden.

60
00:04:43.140 --> 00:04:46.940
Anyone of these three will work and
that's the feature.

61
00:04:46.940 --> 00:04:50.380
So I put it exactly in the same location,

62
00:04:50.380 --> 00:04:55.010
because the span is actually positioned
absolutely with in that parent.

63
00:04:56.100 --> 00:05:01.210
So I put this behind the input.

64
00:05:01.210 --> 00:05:04.000
If I had it put in front of the input,

65
00:05:04.000 --> 00:05:06.770
because they wanted a background
color on the input, which is doable,

66
00:05:07.800 --> 00:05:12.260
all I would have had to do is put
pointer events none on the span.

67
00:05:12.260 --> 00:05:14.180
And the pointer events known
is actually a feature.

68
00:05:14.180 --> 00:05:15.830
We're gonna talk about it in,
like, two minutes.

69
00:05:17.390 --> 00:05:21.850
So another feature that I
wanted to do was to create

70
00:05:21.850 --> 00:05:26.580
an accessible carousel
without java script.

71
00:05:26.580 --> 00:05:28.940
There is three lines of java
script in this carousel.

72
00:05:32.400 --> 00:05:34.990
Right here, you can barely see it,
but the second.

73
00:05:36.720 --> 00:05:37.700
Circle was selected.

74
00:05:38.730 --> 00:05:43.049
I'm gonna click on the right arrow.
&gt;&gt; Estelle Weyl: I'm

75
00:05:43.049 --> 00:05:47.471
just clicking on the right arrow on my
keyboard, the left arrow on my keyboard,

76
00:05:47.471 --> 00:05:50.410
the up arrow, [COUGH] and the down arrow.

77
00:05:50.410 --> 00:05:52.880
You see how that's perfectly functional?

78
00:05:52.880 --> 00:05:56.179
It's completely accessible
because I'm using radio buttons.

79
00:05:58.080 --> 00:06:03.260
The only thing that JavaScript does
is it changes the class on the parent

80
00:06:03.260 --> 00:06:08.610
to give it a class,
to say which one's showing.

81
00:06:08.610 --> 00:06:12.524
And then I transition left and
right, based on that click.

82
00:06:12.524 --> 00:06:17.090
So HTML for this is field set and
then a legend.

83
00:06:17.090 --> 00:06:21.710
So to the screen, we're actually saying,
select an address to edit and

84
00:06:21.710 --> 00:06:25.630
then I have a label for my address and

85
00:06:25.630 --> 00:06:30.077
then I have an input type

86
00:06:30.077 --> 00:06:34.810
radio that has see label for

87
00:06:34.810 --> 00:06:38.990
address1 and this is id address1 and
it's checked.

88
00:06:40.190 --> 00:06:44.370
And then the next one gets checked and
all that happens is the class.

89
00:06:46.500 --> 00:06:50.090
Up here of left0 goes from left0,
left1, left2, left3, left4 or

90
00:06:50.090 --> 00:06:53.040
however many there are and that's it.

91
00:06:54.110 --> 00:06:56.584
All I'm doing is transitioning
the left property.

