WEBVTT

1
00:00:02.199 --> 00:00:06.001
&gt;&gt; Estelle Weyl: The next one
is a background image property.

2
00:00:06.001 --> 00:00:11.285
Originally, the background image is used
to declare an image on your background,

3
00:00:11.285 --> 00:00:13.105
it can be one or more images.

4
00:00:13.105 --> 00:00:17.194
Originally, we were just given one image,
and we had a few properties,

5
00:00:17.194 --> 00:00:21.756
including the background image, and
then background-repeat, attachment,

6
00:00:21.756 --> 00:00:22.979
position and color.

7
00:00:24.660 --> 00:00:27.500
&gt;&gt; Estelle Weyl: That's why I
always suggest to people to not use

8
00:00:27.500 --> 00:00:29.205
the background shorthand.

9
00:00:29.205 --> 00:00:32.713
Because when you use a shorthand
property you're actually overwriting

10
00:00:32.713 --> 00:00:33.862
the background color,

11
00:00:33.862 --> 00:00:37.899
the background position, the background
attachment and the background repeat.

12
00:00:37.899 --> 00:00:41.995
And I like to put my global reset,
background repeat, no repeat,

13
00:00:41.995 --> 00:00:45.157
cuz I very rarely wanna
repeat a background image.

14
00:00:46.720 --> 00:00:50.621
&gt;&gt; Estelle Weyl: So you could use as
a value for background image either non or

15
00:00:50.621 --> 00:00:55.225
the URI of an image or inherit and
then we'll inherit the image from its

16
00:00:55.225 --> 00:01:00.083
parent and I don't think anyone would
ever wanna do that intentionally.

17
00:01:02.138 --> 00:01:04.674
&gt;&gt; Estelle Weyl: A few tips for
background images.

18
00:01:04.674 --> 00:01:08.041
If you're going to use a background image,

19
00:01:08.041 --> 00:01:13.138
ensure there's enough contrast
between the text and your image.

20
00:01:13.138 --> 00:01:18.457
So we were talking about color contrast
ratio a little bit yesterday for

21
00:01:18.457 --> 00:01:24.765
people with low visibility or low vision
rather, you want a significant contrast.

22
00:01:24.765 --> 00:01:27.249
And then when you have a background image,

23
00:01:27.249 --> 00:01:32.156
unless there's transparency in that image,
you usually want a background color.

24
00:01:32.156 --> 00:01:34.945
Because if the image
doesn't come through and

25
00:01:34.945 --> 00:01:38.672
let's say you have a really dark image so
you have white text.

26
00:01:38.672 --> 00:01:41.986
And then you have a white background
cuz you didn't put a background color.

27
00:01:41.986 --> 00:01:46.499
Or you're gonna have white text on a white
background, and that's not gonna be good.

28
00:01:46.499 --> 00:01:48.718
Background images do not print by default,
and

29
00:01:48.718 --> 00:01:51.780
there's no way to improve
accessibility on background images.

30
00:01:51.780 --> 00:01:56.866
There's no way to say, background
images should be purely decorative

31
00:01:56.866 --> 00:02:01.712
because there's no way to provide
alt text to describe to the user.

32
00:02:01.712 --> 00:02:03.122
What the images,

33
00:02:03.122 --> 00:02:08.680
what to describe to your most
significant blind user which is Google.

34
00:02:08.680 --> 00:02:14.329
So the multiple background image syntax
is basically declaring one image,

35
00:02:14.329 --> 00:02:17.074
comma separated and the next image.

36
00:02:17.074 --> 00:02:21.004
And if you noticed here is its
background image green and then blue and

37
00:02:21.004 --> 00:02:24.755
if you're not color blind you see
that the blue one is in the back.

38
00:02:24.755 --> 00:02:27.703
So it basically gets
painted back to front, so

39
00:02:27.703 --> 00:02:32.706
the last one gets painted first and then
the first one gets painted on top of it.

40
00:02:34.473 --> 00:02:42.517
&gt;&gt; Estelle Weyl: They are comma
separated in the cross-fade function.

41
00:02:44.133 --> 00:02:48.821
&gt;&gt; Estelle Weyl: So cross-fading is the
ability to basically cross-fade between

42
00:02:48.821 --> 00:02:49.748
two images.

43
00:02:49.748 --> 00:02:55.184
And it is supported in some browsers and
not in others.

44
00:02:55.184 --> 00:02:57.875
So ones where it's not supported
then one that you declare,

45
00:02:57.875 --> 00:02:59.846
the image that declare
first will be on top.

46
00:03:04.208 --> 00:03:09.202
&gt;&gt; Estelle Weyl: Then image-set is
the ability to declare a set of images.

47
00:03:09.202 --> 00:03:13.108
And let's go again to can I use and
do image-set.

48
00:03:15.769 --> 00:03:19.816
&gt;&gt; Estelle Weyl: Again,
it works only with the webkit prefix.

49
00:03:19.816 --> 00:03:25.110
So this is something that you can't quite
use quite yet but I did wanna point

50
00:03:25.110 --> 00:03:30.171
it out, because it will eventually
come in, and it is part of the spec.

51
00:03:30.171 --> 00:03:35.476
So the type of images we can
currently use is the key term none,

52
00:03:35.476 --> 00:03:40.578
which is very useful when you're
overwriting an image that

53
00:03:40.578 --> 00:03:45.799
you already declared and
you don't want it on this element.

54
00:03:45.799 --> 00:03:48.295
You can use the URL, and so you put URL,

55
00:03:48.295 --> 00:03:51.570
and then in parentheses you
can put a single image.

56
00:03:51.570 --> 00:03:55.875
Or you can put the URL in parentheses with
a single image, and then the comma, and

57
00:03:55.875 --> 00:03:56.901
then the next one.

58
00:03:56.901 --> 00:03:58.776
You can also use data URIs.

59
00:03:58.776 --> 00:04:02.374
So in this first example I have a GIF and

60
00:04:02.374 --> 00:04:06.883
it's base64 and
the data URI is right there.

61
00:04:06.883 --> 00:04:09.234
And that reduces the number
of HTTP requests.

62
00:04:09.234 --> 00:04:11.577
We don't wanna do that if it's a tiny,

63
00:04:11.577 --> 00:04:16.056
little image because this is not the most
compact width pulling in images.

64
00:04:16.056 --> 00:04:20.237
So you won't wanna do a huge JPG or
PNG with that.

65
00:04:20.237 --> 00:04:24.163
And then the second one is an SVG image.

66
00:04:24.163 --> 00:04:27.187
So you can actually just put
the code right there and

67
00:04:27.187 --> 00:04:30.361
not have an HTTP request if
you're gonna have an SVG.

68
00:04:30.361 --> 00:04:33.620
And SVGs, it depends on what
you're creating with your SVG.

69
00:04:33.620 --> 00:04:38.322
Generally, my SVGs are tiny because
I am not a graphic designer, and

70
00:04:38.322 --> 00:04:40.846
I'm basically just making shapes.

71
00:04:40.846 --> 00:04:42.894
So it depends on the complexity, but

72
00:04:42.894 --> 00:04:47.461
that might be a useful way of reducing
an HTTP request and improving performance.

73
00:04:47.461 --> 00:04:50.754
Then we also have linear and
radial gradients.

74
00:04:50.754 --> 00:04:55.153
We also have linear repeating gradients
and repeating radial gradients,

75
00:04:55.153 --> 00:04:57.330
and we also have conical gradients.

76
00:04:57.330 --> 00:05:00.170
We'll go over the linear, radial and

77
00:05:00.170 --> 00:05:04.619
the repeating ones but
not the conical ones later on today.

78
00:05:04.619 --> 00:05:07.983
In the future if you look up
at the spec it says, image and

79
00:05:07.983 --> 00:05:11.778
then parenthesis elementand
then parenthesis, image set and

80
00:05:11.778 --> 00:05:15.299
then parenthesis and
cross-fade and then parenthesis.

81
00:05:15.299 --> 00:05:17.750
That's why I showed you the can I use,

82
00:05:17.750 --> 00:05:21.971
because there's these four other
features in a specification.

83
00:05:21.971 --> 00:05:27.751
And right now, it kind have only works in
Firefox cuz it's been working there for

84
00:05:27.751 --> 00:05:30.648
a long time, the image and the element.

85
00:05:30.648 --> 00:05:33.971
So in Firefox,
you can actually say element and

86
00:05:33.971 --> 00:05:38.722
you use to be able to do this,
I think they might have deprecated it.

87
00:05:38.722 --> 00:05:42.122
But you can actually put
a canvas on the page, or

88
00:05:42.122 --> 00:05:45.692
design a canvas in the background,
give it an ID,

89
00:05:45.692 --> 00:05:50.377
and then put it as the background
of image, of an element rather.

90
00:05:50.377 --> 00:05:56.028
And then with the image,
you can do a few things.

91
00:05:56.028 --> 00:06:01.686
The first one is basically picking up
a Sprite and then putting in hash and

92
00:06:01.686 --> 00:06:06.788
then saying xy and then width and
heights in the starting point and

93
00:06:06.788 --> 00:06:10.961
then the width and
height of the area you wanna show and

94
00:06:10.961 --> 00:06:14.145
basically clip your background image.

95
00:06:14.145 --> 00:06:18.278
This is not fully supported,
it was supported in Firefox long time ago.

96
00:06:18.278 --> 00:06:21.447
I don't know if it's even
still supported there.

97
00:06:21.447 --> 00:06:26.396
And then the second one is image and then
it's basically, try finding this image.

98
00:06:26.396 --> 00:06:28.073
If that doesn't work,
try finding the next image.

99
00:06:28.073 --> 00:06:29.825
If that doesn't work,
try finding the third.

100
00:06:29.825 --> 00:06:34.349
Which will be really nice if we could
have cuz then we could do a WebP and

101
00:06:34.349 --> 00:06:39.266
a JPG XR, and then just a regular JPG,
and see whichever one is supported in

102
00:06:39.266 --> 00:06:42.800
that browser,
they could use that for backgrounds.

103
00:06:42.800 --> 00:06:46.918
Cuz we do have the picture element,
and we do have media queries, but

104
00:06:46.918 --> 00:06:51.192
it would be nice to just be able to
declare a background image in one way.

