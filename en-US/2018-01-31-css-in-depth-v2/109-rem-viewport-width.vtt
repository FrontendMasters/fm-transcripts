WEBVTT

1
00:00:02.770 --> 00:00:07.335
&gt;&gt; Estelle Weyl: A rem unit which,
is root unit,has been around for

2
00:00:07.335 --> 00:00:09.364
a really long time, but

3
00:00:09.364 --> 00:00:14.447
people still aren't using it
cuz IE 8 didn't support it.

4
00:00:14.447 --> 00:00:18.630
But you can just basically declare
a font-size on your colon root, and

5
00:00:18.630 --> 00:00:22.632
when we talked about selectors,
we talked about this yesterday.

6
00:00:22.632 --> 00:00:26.720
And then basically,

7
00:00:26.720 --> 00:00:32.710
every time you declare a rem unit,
it's relative to that root unit.

8
00:00:32.710 --> 00:00:35.597
So basically inherits from it's parent, so

9
00:00:35.597 --> 00:00:40.666
you'll end up with really weird sizes by
accident, when you use instead of rem.

10
00:00:40.666 --> 00:00:42.200
And rem basically takes care of that.

11
00:00:44.540 --> 00:00:48.030
Then we had the viewport width,
viewport height, viewport minimum and

12
00:00:48.030 --> 00:00:49.470
viewport maximum.

13
00:00:49.470 --> 00:00:53.810
So if I say 5vw, that means 5%
of the width of the viewport.

14
00:00:53.810 --> 00:00:57.210
If I say 7vh it means 7% of
the height of the view port.

15
00:00:58.370 --> 00:01:05.620
If I say 4vmin, it means find 4%
of the height and 4% of the width.

16
00:01:05.620 --> 00:01:08.150
Whichever one is smaller, use that.

17
00:01:08.150 --> 00:01:12.270
If I say 8vmax, it says okay,
8% of the viewport height, and

18
00:01:12.270 --> 00:01:16.490
8% of the viewpoint width,
whichever is larger, use that one.

19
00:01:16.490 --> 00:01:21.800
Vmax I think doesn't work in IE or Edge,
but the other ones work everywhere.

20
00:01:22.910 --> 00:01:26.720
Under consideration are two
other units which are vi and vb.

21
00:01:26.720 --> 00:01:30.530
They're really not being used yet
at all, I don't think.

22
00:01:30.530 --> 00:01:34.330
But I want to include it just in case
this video lasts for like four or

23
00:01:34.330 --> 00:01:37.180
five years, and maybe it will come out.

24
00:01:37.180 --> 00:01:42.790
Which is vi is 1% of the containing block
in the direction of the inline axis.

25
00:01:42.790 --> 00:01:45.910
And vb is 1% of the containing
block in the direction

26
00:01:45.910 --> 00:01:47.569
of the root element's block axis.

27
00:01:48.690 --> 00:01:52.071
So vi, vb is basically you can
do it based on the containing

28
00:01:52.071 --> 00:01:55.108
block instead of the viewport,
which will be nice.

