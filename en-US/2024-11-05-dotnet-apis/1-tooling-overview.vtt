WEBVTT

1
00:00:00.000 --> 00:00:03.657
Let me dive in a little bit about
the tooling that we'll be using for

2
00:00:03.657 --> 00:00:04.453
this course.

3
00:00:04.453 --> 00:00:11.824
So if you did my C sharp workshop, a lot
of these things will look very similar.

4
00:00:11.824 --> 00:00:14.549
First and foremost,
we're gonna install the dotnet CLI.

5
00:00:14.549 --> 00:00:18.675
On this computer, I already have all
my tooling set up and ready to go, so

6
00:00:18.675 --> 00:00:20.308
I'm gonna go to dotnet CLI.

7
00:00:20.308 --> 00:00:23.764
So if you wanna just follow along,
open up this web page,

8
00:00:23.764 --> 00:00:26.293
click this nice purple download button.

9
00:00:26.293 --> 00:00:29.353
And click this one to install the SDK,

10
00:00:29.353 --> 00:00:35.389
that'll allow you to develop dotnet
applications on your local machine.

11
00:00:35.389 --> 00:00:37.968
So pretty simple, straightforward.

12
00:00:37.968 --> 00:00:44.070
And once you've done that, best way to
verify that you've done it correctly,

13
00:00:44.070 --> 00:00:48.096
go to your command prompt,
type in dotnet version.

14
00:00:48.096 --> 00:00:52.575
And you see that we've got
the correct version of dotnet.

15
00:00:52.575 --> 00:00:54.858
Next we'll be installing
Visual Studio Code.

16
00:00:54.858 --> 00:00:58.180
There's a couple of extensions that
that I think you'll wanna have,

17
00:00:58.180 --> 00:01:00.049
if you haven't installed it already.

18
00:01:00.049 --> 00:01:01.385
So let's open it up.

19
00:01:01.385 --> 00:01:06.311
If you go to the extensions thing here,
you'll see that I already

20
00:01:06.311 --> 00:01:11.070
have C# Dev Kit installed right there,
that's pretty good.

21
00:01:11.070 --> 00:01:12.960
We also have NuGet Gallery here.

22
00:01:12.960 --> 00:01:16.200
NuGet Gallery is just because
I'm unapologetically, a UI guy.

23
00:01:16.200 --> 00:01:21.346
You can choose to install NuGet packages,
via the command line.

24
00:01:21.346 --> 00:01:23.841
I choose to use a UI for this.

25
00:01:23.841 --> 00:01:27.431
So NuGet Gallery is my preferred way
to do that in Visual Studio Code.

26
00:01:27.431 --> 00:01:32.270
There's also an extension that I'll be
using, but it's not really important to

27
00:01:32.270 --> 00:01:37.053
this, course, if you don't wanna browse
the data, which is called SQL tools.

28
00:01:37.053 --> 00:01:43.537
And I'm gonna install that, and
I'm gonna install the SQLite one as well.

29
00:01:43.537 --> 00:01:47.150
It's optional,
if you wanna be able to browse the data,

30
00:01:47.150 --> 00:01:50.928
that's a little bit later, but
you can do that if you like.

31
00:01:50.928 --> 00:01:53.746
That should be it for Visual Studio Code.

32
00:01:53.746 --> 00:01:55.238
And then, yes, Postman.

33
00:01:55.238 --> 00:01:57.292
So you can install Postman.

34
00:01:57.292 --> 00:02:02.290
So we'll be building these, as we build
these APIs, you'll be able to execute

35
00:02:02.290 --> 00:02:06.634
them in browser using a tool called
Swagger, which we'll get into.

36
00:02:06.634 --> 00:02:10.940
But if you choose to use Postman,
I prefer it over using Swagger.

37
00:02:10.940 --> 00:02:15.813
So what you can do is just go to
postman.com slash downloads, and

38
00:02:15.813 --> 00:02:20.521
download the version that's
appropriate for your computer.

39
00:02:20.521 --> 00:02:24.525
When they install it, they want you
to sign in and create an account,

40
00:02:24.525 --> 00:02:26.122
you don't need to do that.

41
00:02:26.122 --> 00:02:28.178
You can just keep hitting skip
until you get to the end there.

42
00:02:28.178 --> 00:02:33.863
I'm gonna be using it,
not logged in for what it's worth.

43
00:02:33.863 --> 00:02:37.722
As far as going and actually building
a new project, I just wanna do a brief

44
00:02:37.722 --> 00:02:41.892
overview of some of the commands that
you're gonna see me run, first of all,

45
00:02:41.892 --> 00:02:42.598
dotnet new.

46
00:02:42.598 --> 00:02:47.003
Dotnet new is gonna be the thing
that allows us to actually,

47
00:02:47.003 --> 00:02:49.393
start and create our projects.

48
00:02:49.393 --> 00:02:55.926
We will be creating a new web app, and
I'll demonstrate that in the next section.

49
00:02:55.926 --> 00:02:59.649
If you wanna see a list of all
the available templates that you have,

50
00:02:59.649 --> 00:03:01.295
you can go to dotnet new list.

51
00:03:01.295 --> 00:03:06.324
The dotnet SDK comes with a huge
amount of them, already pre installed.

52
00:03:06.324 --> 00:03:10.679
There's also some community ones for
specialized use cases.

53
00:03:10.679 --> 00:03:14.884
If you wanna, for example,
install the SpaTemplates,

54
00:03:14.884 --> 00:03:17.605
collection of dotnet new projects.

55
00:03:17.605 --> 00:03:19.986
You could do that via the command line.

56
00:03:19.986 --> 00:03:23.592
You'll see me do dotnet run, quite a bit.

57
00:03:23.592 --> 00:03:25.385
Pretty straightforward, pretty standard.

58
00:03:25.385 --> 00:03:27.295
I'll also do it in the UI quite a bit.

59
00:03:27.295 --> 00:03:31.631
And dotnet test, which is one of my
favorite, we'll be running this one a lot,

60
00:03:31.631 --> 00:03:33.202
because we do lots of tests.

61
00:03:33.202 --> 00:03:36.681
We will be writing lots of tests,
it's part of this project.

62
00:03:36.681 --> 00:03:38.446
Couple of questions that I wanna address.

63
00:03:38.446 --> 00:03:40.014
First question was, do I need windows?

64
00:03:40.014 --> 00:03:41.070
Do I need Visual Studio?

65
00:03:41.070 --> 00:03:45.205
As I mentioned earlier, you absolutely do
not, I don't use them if I can help it.

66
00:03:45.205 --> 00:03:48.124
I do use Visual Studio, and
I think it's a fine piece of software.

67
00:03:48.124 --> 00:03:53.939
I do use it for legacy dotnet development,
stuff that was kinda 20 years old or so.

68
00:03:53.939 --> 00:03:57.051
But you don't have to have it, and
you certainly don't have to have Windows.

69
00:03:57.051 --> 00:04:00.214
Or I got an interesting question
in my other course as well.

70
00:04:00.214 --> 00:04:02.753
Which was, Visual Studio for
Mac is retired,

71
00:04:02.753 --> 00:04:05.303
Microsoft decided not
to support it anymore.

72
00:04:05.303 --> 00:04:08.874
Does that mean that they're not
gonna be supporting Mac very soon?

73
00:04:08.874 --> 00:04:10.594
And I said, absolutely not.

74
00:04:10.594 --> 00:04:11.756
That's not what that means.

75
00:04:11.756 --> 00:04:15.364
It's just Visual Studio for
Mac wasn't a very good product, frankly.

76
00:04:15.364 --> 00:04:18.275
So with that,
you can just use Visual Studio code.

77
00:04:18.275 --> 00:04:22.846
My preferred IDE for dotnet,
it's the best dotnet IDE in the world.

78
00:04:22.846 --> 00:04:25.472
Sorry, Microsoft is JetBrains Rider.

79
00:04:25.472 --> 00:04:30.014
It's fully featured, so
it has a lot of really nice

80
00:04:30.014 --> 00:04:34.253
convenience things, as you're developing.

81
00:04:34.253 --> 00:04:36.960
And it has a huge amount of
refactoring tools as well,

82
00:04:36.960 --> 00:04:38.412
which is what I use them for.

83
00:04:38.412 --> 00:04:41.849
It's also easy to find,
pretty much anything you ever wanna find.

84
00:04:41.849 --> 00:04:44.986
JetBrains Rider is by far,
my favorite IDE.

85
00:04:44.986 --> 00:04:46.941
I'll mention one last thing.

86
00:04:46.941 --> 00:04:51.620
If you don't have Docker installed,
you could install it.

87
00:04:51.620 --> 00:04:55.143
There's one thing that I kinda wanna just
show you at the very end of the course,

88
00:04:55.143 --> 00:04:57.416
that has to do with Docker,
but that's optional.

