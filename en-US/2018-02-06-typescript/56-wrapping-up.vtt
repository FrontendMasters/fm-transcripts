WEBVTT

1
00:00:00.370 --> 00:00:04.040
&gt;&gt; Mike North: I just wanna recap
the kinds of things we set out to do here.

2
00:00:04.040 --> 00:00:06.620
So hopefully we have a good idea

3
00:00:06.620 --> 00:00:10.700
about where the line between modern
JavaScript and TypeScript is.

4
00:00:10.700 --> 00:00:13.250
All of the stuff like generator functions,
async and

5
00:00:13.250 --> 00:00:16.450
await, they can be used with JavaScript.

6
00:00:16.450 --> 00:00:19.540
Types, generics, that kind of thing,

7
00:00:19.540 --> 00:00:23.410
interfaces, all of that
has to do with TypeScript.

8
00:00:24.850 --> 00:00:25.567
And more and

9
00:00:25.567 --> 00:00:30.232
more it seems like TypeScript just is
focused on the types simply because a lot

10
00:00:30.232 --> 00:00:35.043
of the ideas that were successful in
the TypeScript ecosystem are now inspiring

11
00:00:35.043 --> 00:00:39.605
similar language features being
developed in the JavaScript ecosystem.

12
00:00:39.605 --> 00:00:43.990
But we spent some time today
working with TypeScript and React.

13
00:00:43.990 --> 00:00:48.383
And hopefully you get to feel that you
have a lot more structure, you have a lot

14
00:00:48.383 --> 00:00:53.520
more compile time assurance that you're
passing the right things to a component.

15
00:00:53.520 --> 00:00:54.900
That when you reach into state or

16
00:00:54.900 --> 00:00:57.680
props you're not gonna get
mixed up between those two

17
00:00:57.680 --> 00:01:01.670
because it's almost like there's a white
list of things you're allowed to see.

18
00:01:01.670 --> 00:01:04.750
I even spotted around the room
some typos being caught

19
00:01:04.750 --> 00:01:09.670
just because you had one letter too
short on the name of a property, and

20
00:01:09.670 --> 00:01:12.860
like you got some immediate
feedback that that was happening.

21
00:01:14.370 --> 00:01:18.826
We definitely used the power of
types to make our code expressive.

22
00:01:18.826 --> 00:01:23.150
And that it's very clear what these
different types of functions we built

23
00:01:23.150 --> 00:01:27.790
want, and we're able to
basically throw up a red flag

24
00:01:27.790 --> 00:01:31.310
if we're ever misaligning the pieces of
code that weren't made to go together.

25
00:01:32.860 --> 00:01:35.640
When we started stripping away
some of the type definitions,

26
00:01:35.640 --> 00:01:39.730
particularly like in that autocomplete
function, we got rid of some of

27
00:01:39.730 --> 00:01:45.210
the explicit type definitions on
values that functions were returning.

28
00:01:45.210 --> 00:01:49.090
We see the type inference can
go a long way to figuring out

29
00:01:49.090 --> 00:01:52.740
what these things are gonna be without
us having to explicitly say so,

30
00:01:52.740 --> 00:01:54.370
which makes for easier refactoring.

31
00:01:55.760 --> 00:02:01.460
And then, hopefully, we've seen through
the use of explicit entities and implicit

32
00:02:01.460 --> 00:02:05.320
entities and going through and sort of
starting with loose type definitions and

33
00:02:05.320 --> 00:02:10.790
then tightening them up over time to sort
of lock some constraints into place.

34
00:02:10.790 --> 00:02:15.980
We can see how adopting TypeScript and
the JavaScript object and

35
00:02:15.980 --> 00:02:20.610
starting with a few areas of code and
moving forward, that

36
00:02:20.610 --> 00:02:25.490
is a different prospect than say switching
to something like CoffeeScript where

37
00:02:25.490 --> 00:02:30.380
it's a completely different programming
language and it's sort of a big upheaval.

38
00:02:30.380 --> 00:02:34.740
This is meant to be something
where you do a few adjustments

39
00:02:34.740 --> 00:02:36.470
as you flip the switch on.

40
00:02:36.470 --> 00:02:39.368
And then almost like
moving from CSS to SASS or

41
00:02:39.368 --> 00:02:43.640
something like that, you can take
advantage of more features that

42
00:02:43.640 --> 00:02:47.930
are TypeScript specific as you
choose to take advantage of those.

43
00:02:47.930 --> 00:02:53.540
But you can just start by adopting it at
sort of a basic level and move from there.

44
00:02:55.910 --> 00:02:57.830
So I hope you enjoyed the course.

45
00:02:57.830 --> 00:03:02.290
And I hope this encourages you to take
advantage of typing in your JavaScript and

46
00:03:02.290 --> 00:03:04.300
TypeScript projects.

47
00:03:04.300 --> 00:03:05.777
Thanks a lot.
&gt;&gt; [APPLAUSE]

