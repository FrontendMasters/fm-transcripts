WEBVTT

1
00:00:00.062 --> 00:00:04.483
&gt;&gt; Mike North: So one of the great
strengths of the TypeScript compiler

2
00:00:04.483 --> 00:00:07.126
is that is uses implicit typing.

3
00:00:07.126 --> 00:00:11.734
Unlike other strongly typed
programming languages,

4
00:00:11.734 --> 00:00:17.351
we don't necessarily need to define
the type upfront in our code.

5
00:00:17.351 --> 00:00:21.672
In this situation here,
we've got teacher's age equals 34, and

6
00:00:21.672 --> 00:00:23.249
we know 34 is a number.

7
00:00:23.249 --> 00:00:26.889
So we have enough information
to say teacher age,

8
00:00:26.889 --> 00:00:29.411
that variable's type is number.

9
00:00:29.411 --> 00:00:33.855
If we then, try to assign teacher age
to another value that's not a number,

10
00:00:33.855 --> 00:00:35.462
we're gonna get an error.

11
00:00:35.462 --> 00:00:40.846
And, what we're looking at here,
is the idea of type equivalents, right?

12
00:00:40.846 --> 00:00:44.171
It basically,
is trying to figure out if this

13
00:00:44.171 --> 00:00:48.291
string thing can be converted
into a number, somehow.

14
00:00:48.291 --> 00:00:51.556
And without any additional information,
like in this case,

15
00:00:51.556 --> 00:00:54.773
we would need to explicitly parse int or
something, right?

16
00:00:54.773 --> 00:00:57.329
To make that conversion work.

17
00:00:57.329 --> 00:01:01.945
So, this is one of the first things
you'll see about TypeScript, that after

18
00:01:01.945 --> 00:01:07.002
assigning, after a variable gets a type,
you're not allowed to change that type.

19
00:01:07.002 --> 00:01:09.770
And again, we'll type,
a the result of a the assignment.

20
00:01:12.423 --> 00:01:15.196
&gt;&gt; Mike North: JavaScript does let
you flip-flop between types, right?

21
00:01:15.196 --> 00:01:18.001
You could have run this code
without incident in JavaScript, and

22
00:01:18.001 --> 00:01:19.078
it would have been fine.

23
00:01:19.078 --> 00:01:22.832
But that is the kind of thing
that can lead to de-optimization.

24
00:01:22.832 --> 00:01:25.318
And if you have the slides and
click that link.

25
00:01:25.318 --> 00:01:30.423
There's a great blog post about it comes
up, called Hidden Classes In Chrome

26
00:01:30.423 --> 00:01:34.596
that describes some of the stuff
that I was just talking about.

27
00:01:34.596 --> 00:01:38.296
The hot code versus hot and
cold paths [LAUGH]

