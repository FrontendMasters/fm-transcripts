WEBVTT

1
00:00:00.370 --> 00:00:03.550
&gt;&gt; Mike North: Two more concepts
I wanna teach you before we

2
00:00:03.550 --> 00:00:06.010
jump into the next exercise.

3
00:00:06.010 --> 00:00:09.069
So, these are Access Modifier Keywords.

4
00:00:09.069 --> 00:00:15.430
These can be used with member data or
member functions on a class.

5
00:00:15.430 --> 00:00:20.930
And these mean the same things that they
mean in other programming languages.

6
00:00:20.930 --> 00:00:23.140
By default, everything is public, right?

7
00:00:23.140 --> 00:00:28.420
Meaning that if I create an instance
of account, I can access account ID,

8
00:00:28.420 --> 00:00:32.200
and I could, even if we had no
access modifier keywords here.

9
00:00:32.200 --> 00:00:37.890
I could say new account and then,
if I did A equals new account,

10
00:00:37.890 --> 00:00:40.430
I could do A dot account ID and
I'd get the value back out.

11
00:00:41.470 --> 00:00:43.870
Protected means that only Account and

12
00:00:43.870 --> 00:00:47.080
subclasses of Account
can access that data.

13
00:00:47.080 --> 00:00:51.850
So, you can see that email for this
SharedAccount, whatever that means, and

14
00:00:51.850 --> 00:00:56.810
the setEmail string,
it is free to use this protected value.

15
00:00:56.810 --> 00:01:00.444
Private means only Account can have
access to it, only that class,

16
00:01:00.444 --> 00:01:06.651
subclasses don't even get to see it.
&gt;&gt; Mike North: There

17
00:01:06.651 --> 00:01:12.509
are two other modifier keywords, one we've
seen already, which is static, and another

18
00:01:12.509 --> 00:01:18.400
which we'll see a little bit of tomorrow
and I'll clue you into it, read only.

19
00:01:18.400 --> 00:01:24.690
So if you say read only it protected
email string or something like that now,

20
00:01:24.690 --> 00:01:29.251
once it is set, itâ€™s effectively like a.

21
00:01:29.251 --> 00:01:31.850
&gt;&gt; Student: [INAUDIBLE]
&gt;&gt; Mike North: Pardon?

22
00:01:31.850 --> 00:01:33.520
&gt;&gt; Student: [INAUDIBLE] do get length or

23
00:01:33.520 --> 00:01:39.490
whatever?
&gt;&gt; Mike North: So, the difference there is

24
00:01:39.490 --> 00:01:45.230
if you only have an accessor
a mutation will have no effect.

25
00:01:46.320 --> 00:01:48.278
So you can attempt an assignment.
&gt;&gt; Student: Okay.

26
00:01:48.278 --> 00:01:50.915
&gt;&gt; Mike North: And it'll be like okay,

27
00:01:50.915 --> 00:01:53.610
sure, whatever.

28
00:01:53.610 --> 00:01:56.090
And no value will be changed.

29
00:01:56.090 --> 00:02:01.766
Now, if you use an object like
a property descriptor, right?

30
00:02:01.766 --> 00:02:05.580
It's like object.define property and

31
00:02:05.580 --> 00:02:10.520
there's an ability to set on the property
descriptor a read only attribute.

32
00:02:10.520 --> 00:02:14.133
And there you would end up with a run
time error if you ever try to write that

33
00:02:14.133 --> 00:02:17.672
thing.
&gt;&gt; Mike North: And

34
00:02:17.672 --> 00:02:19.560
that's what this read
only means by the way.

