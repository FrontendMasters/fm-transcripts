WEBVTT

1
00:00:00.270 --> 00:00:01.070
&gt;&gt; Will Sentance: But let's have thumb.

2
00:00:01.070 --> 00:00:02.690
You lost me, I'm clear.

3
00:00:02.690 --> 00:00:03.860
I have clarifications.

4
00:00:03.860 --> 00:00:05.960
Everybody thumbs out, I'm proud.

5
00:00:05.960 --> 00:00:09.170
Michelle has one, Mike has one.

6
00:00:09.170 --> 00:00:13.999
Mike, let's come to you first.
&gt;&gt; Mike: I'm just wondering how to

7
00:00:13.999 --> 00:00:18.890
recruit if you have layers,
if you have a set time out function

8
00:00:18.890 --> 00:00:22.985
called that requires some more time.
&gt;&gt; Will Sentance: Okay, so

9
00:00:22.985 --> 00:00:31.860
your saying if inside my printHello
I would defer further functionality.

10
00:00:31.860 --> 00:00:35.580
So call another function,
which isn't a real function, a facade for

11
00:00:35.580 --> 00:00:37.570
web browser feature.

12
00:00:37.570 --> 00:00:39.370
Yeah, okay, let's come to that.

13
00:00:39.370 --> 00:00:42.807
Michelle.
&gt;&gt; Michelle: My question is what if I'm

14
00:00:42.807 --> 00:00:48.038
actively executing something
on the call stack?

15
00:00:48.038 --> 00:00:48.549
&gt;&gt; Will Sentance: Excellent,

16
00:00:48.549 --> 00:00:49.500
where does that go?

17
00:00:49.500 --> 00:00:52.080
Exacly, spot on.

18
00:00:52.080 --> 00:00:55.750
Suppose I have like 10,000 console logs.

19
00:00:55.750 --> 00:00:58.140
When is the function allowed back in?

20
00:00:58.140 --> 00:00:59.610
Just as soon as ready?

21
00:00:59.610 --> 00:01:04.650
After five of those console logs,
after a few of them, what if I

22
00:01:04.650 --> 00:01:08.470
have a function as you say sitting on
the call stack for maybe 300 milliseconds?

23
00:01:08.470 --> 00:01:10.690
Or even 1000 milliseconds?

24
00:01:10.690 --> 00:01:14.430
When's the printHello allowed back on?

25
00:01:14.430 --> 00:01:16.550
It's gonna just come in randomly?

26
00:01:17.860 --> 00:01:18.560
Maybe.

27
00:01:18.560 --> 00:01:20.420
What a language design that would be.

28
00:01:20.420 --> 00:01:22.590
Let's just make sure we know
which are our facade functions.

29
00:01:22.590 --> 00:01:24.570
We've got set time out.

30
00:01:24.570 --> 00:01:27.950
When I say facade,
I mean it's a facade, it's a front.

31
00:01:27.950 --> 00:01:30.167
It looks like a JavaScript function,
it is not.

32
00:01:30.167 --> 00:01:35.081
It looks like it's gonna
create an execution context,

33
00:01:35.081 --> 00:01:39.060
it does not,
not in any way meaningful to us.

34
00:01:39.060 --> 00:01:40.833
Instead it just spins up background work.

35
00:01:40.833 --> 00:01:42.990
It's facade, it's a front.

36
00:01:42.990 --> 00:01:45.203
It's like those west world, God,

37
00:01:45.203 --> 00:01:49.571
those west world people with the face,
who watches the Westworld show?

38
00:01:49.571 --> 00:01:52.988
You know that bit where the faces
open up my God, fucking hate that.

39
00:01:52.988 --> 00:01:54.999
I literally I watched
the first two episodes and

40
00:01:54.999 --> 00:01:58.014
the first episode of the season,
with my fingers like this the whole way

41
00:01:58.014 --> 00:02:01.720
through incase anytime I saw one of those
people incase their faces opened up.

42
00:02:01.720 --> 00:02:02.700
And it happened.

43
00:02:02.700 --> 00:02:04.540
I saw a bit of it, and
I haven't watched it since.

44
00:02:04.540 --> 00:02:05.430
I don't like this show anymore.

45
00:02:05.430 --> 00:02:07.910
I don't want to see the faces opening up,
but this is what it's like.

46
00:02:07.910 --> 00:02:10.196
It's like a facade.
For those of you who have not seen

47
00:02:10.196 --> 00:02:14.679
Westworld, it's about pretend
versions of people or maybe not.

48
00:02:14.679 --> 00:02:16.025
Maybe they're as real as us.

49
00:02:16.025 --> 00:02:19.106
But they were originally
mechanically created,

50
00:02:19.106 --> 00:02:22.890
meaning behind the skin
was mechanical stuff.

51
00:02:22.890 --> 00:02:26.300
And we all know that humans
find that very, very creepy.

52
00:02:27.510 --> 00:02:29.210
Well, that's what setTimeout's like.

53
00:02:29.210 --> 00:02:32.750
It's a facade for
functionality outside of itself.

54
00:02:32.750 --> 00:02:34.640
It's not real, it's not pure JavaScript.

55
00:02:34.640 --> 00:02:35.810
It's pretend.

56
00:02:35.810 --> 00:02:36.760
There you go.

57
00:02:36.760 --> 00:02:39.170
I hate analogies,
that's why I hate analogies.

58
00:02:39.170 --> 00:02:42.590
Good, so we're interacting with
a world outside of JavaScript now.

59
00:02:42.590 --> 00:02:44.200
We need rules.

60
00:02:44.200 --> 00:02:46.410
We need strict rules for
how we're gonna interact with it.

61
00:02:46.410 --> 00:02:50.976
So we're gonna see this code here in order
to identify a bunch of scenarios that

62
00:02:50.976 --> 00:02:53.481
are gonna indicate what our rules must be.

63
00:02:53.481 --> 00:02:57.750
So here we go, line by line we're
gonna walk through our code.

64
00:02:57.750 --> 00:03:00.620
And then by the way we're gonna
get into pair programming.

65
00:03:01.670 --> 00:03:05.860
And then we're gonna see a brand
new solution that everybody loves

66
00:03:05.860 --> 00:03:07.620
that does not use this model.

