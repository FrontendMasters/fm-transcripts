WEBVTT

1
00:00:00.040 --> 00:00:02.740
&gt;&gt; Will Sentance: All right,
let's all thumb on this cause again,

2
00:00:02.740 --> 00:00:05.170
it's going to be a bunch of edge cases.

3
00:00:05.170 --> 00:00:09.420
What happens if x happens,
what happens if y happens?

4
00:00:09.420 --> 00:00:11.220
Everyone's thumbs out, you lost me?

5
00:00:11.220 --> 00:00:12.010
I'm clear?

6
00:00:12.010 --> 00:00:13.090
I have clarification.

7
00:00:13.090 --> 00:00:13.890
Everybody's thumbs out.

8
00:00:13.890 --> 00:00:18.385
Alex has clarification,
Ben's clear, Blessing's clear.

9
00:00:20.034 --> 00:00:21.690
&gt;&gt; Will Sentance: Sean
has a clarification.

10
00:00:21.690 --> 00:00:22.450
Mike has one.

11
00:00:22.450 --> 00:00:23.680
Brian's clear.

12
00:00:23.680 --> 00:00:25.660
Let's come to Alex.

13
00:00:25.660 --> 00:00:26.960
&gt;&gt; Alec: Alec.

14
00:00:26.960 --> 00:00:29.310
&gt;&gt; Will Sentance: To Alec apostrophe s.

15
00:00:29.310 --> 00:00:30.179
&gt;&gt; Alec: Yeah.
&gt;&gt; Will Sentance: That's why I

16
00:00:30.179 --> 00:00:30.727
was saying Alex.

17
00:00:30.727 --> 00:00:31.630
&gt;&gt; Alec: There we go yep.

18
00:00:31.630 --> 00:00:32.630
&gt;&gt; Will Sentance: That's
literally why I was saying.

19
00:00:32.630 --> 00:00:34.540
As I said it I thought,
that's interesting,

20
00:00:34.540 --> 00:00:39.540
if you speak in the possessive sense for
someone like Alec it's ambiguous.

21
00:00:39.540 --> 00:00:40.940
Let's come to Alec's question.

22
00:00:40.940 --> 00:00:42.490
&gt;&gt; Alec: Maybe we were
gonna get to this but

23
00:00:42.490 --> 00:00:46.350
I guess I was just wondering if it's
going to use the event loop like.

24
00:00:46.350 --> 00:00:50.800
&gt;&gt; Will Sentance: Absolutely, it is,
but in a really interesting way, Shawn.

25
00:00:50.800 --> 00:00:55.677
&gt;&gt; Sean: So my question was,
if the web browser feature directly

26
00:00:55.677 --> 00:01:00.150
sets the memory, or
if it uses the event loop?

27
00:01:00.150 --> 00:01:01.041
&gt;&gt; Will Sentance: That's
a very good question.

28
00:01:05.442 --> 00:01:07.597
&gt;&gt; Will Sentance: It certainly
gives precedence of setting that,

29
00:01:07.597 --> 00:01:10.695
more interesting is gonna be,
when does the function get triggered so

30
00:01:10.695 --> 00:01:12.690
let's hold that question for now.

31
00:01:12.690 --> 00:01:14.200
Mike?
&gt;&gt; Mike: I was just wondering if

32
00:01:14.200 --> 00:01:17.950
future data represents the promise
object that's getting value updated,

33
00:01:17.950 --> 00:01:18.930
why do we use a const?

34
00:01:22.630 --> 00:01:25.280
&gt;&gt; Will Sentance: Because okay, so you're
asking about const, and whether allow.

35
00:01:25.280 --> 00:01:26.900
So object, so the only thing about const.

36
00:01:26.900 --> 00:01:28.110
Const says, so

37
00:01:28.110 --> 00:01:30.740
const should be your default way
of storing data in JavaScript now.

38
00:01:32.010 --> 00:01:35.250
But for values, all right, for
primitive values, that means numbers,

39
00:01:35.250 --> 00:01:37.780
strings, true faults, bullions.

40
00:01:37.780 --> 00:01:40.630
If you wanna change there
value at any way at all,

41
00:01:40.630 --> 00:01:43.420
you're changing the position in memory so
you're not allowed to do so.

42
00:01:43.420 --> 00:01:47.460
But objects and arrays, as long as you
don't literally throw out the entire

43
00:01:47.460 --> 00:01:50.990
object and replace it with a brand new
one and just add properties to it or add

44
00:01:50.990 --> 00:01:55.180
positions to an array, elements in array,
that's well within the rights of conts.

45
00:01:55.180 --> 00:01:58.598
Conts only says do not throw me
out completely, my data, and

46
00:01:58.598 --> 00:02:01.300
replace with a brand new thing in memory.

47
00:02:01.300 --> 00:02:04.290
You're perfectly allowed to
add new properties to it,

48
00:02:04.290 --> 00:02:07.010
update the values of properties,
add new elements to an array..

49
00:02:07.010 --> 00:02:07.630
Does that make sense?

50
00:02:07.630 --> 00:02:11.790
And that's why we all default to const now
for everything, unless it's a primitive

51
00:02:11.790 --> 00:02:15.260
value where you know you wanna change
it from three to four, in which case,

52
00:02:15.260 --> 00:02:16.330
that's not allowed.

53
00:02:16.330 --> 00:02:19.100
Or if you know you wanna switch
an object completely out in memory, and

54
00:02:19.100 --> 00:02:22.550
say, thank you for that object, here's
a brand new one, then you would use that.

55
00:02:22.550 --> 00:02:25.610
But I don't know when you'd do
that particularly, but you might.

56
00:02:25.610 --> 00:02:27.290
So it's pretty much default to const now.

57
00:02:27.290 --> 00:02:31.110
And that's a helpful way of making
sure reassignments don't happen

58
00:02:31.110 --> 00:02:32.330
unintentionally.

59
00:02:32.330 --> 00:02:33.410
Good side question.

60
00:02:33.410 --> 00:02:37.040
Okay, further thumbs that were medium?

61
00:02:37.040 --> 00:02:40.070
Ben was clear, who else was medium thumb?

62
00:02:40.070 --> 00:02:45.900
Yes,
&gt;&gt; Will Sentance: Rick.

63
00:02:45.900 --> 00:02:48.140
&gt;&gt; Rick: Very good, all right.

64
00:02:48.140 --> 00:02:52.730
So when the future data's value is set,

65
00:02:53.780 --> 00:02:57.370
and it caused the on fulfillment function.

66
00:02:57.370 --> 00:02:58.920
&gt;&gt; Will Sentance: Let's say it
triggers the on fulfillment.

67
00:02:58.920 --> 00:03:00.250
&gt;&gt; Rick: Okay, so that-
&gt;&gt; Will Sentance: So we're gonna see in

68
00:03:00.250 --> 00:03:04.270
a moment, there's definitely some
intermediate steps before it gets called.

69
00:03:04.270 --> 00:03:06.657
&gt;&gt; Rick: So when it gets triggered,
is that in JavaScript, or

70
00:03:06.657 --> 00:03:08.470
is that part of the web browser feature?

71
00:03:08.470 --> 00:03:09.945
&gt;&gt; Will Sentance: It's in JavaScript and

72
00:03:09.945 --> 00:03:15.327
that's perhaps why we're gonna discover
JavaScript handles how it gets triggered,

73
00:03:15.327 --> 00:03:18.510
and therefore called in
a slightly different way.

74
00:03:18.510 --> 00:03:20.633
You've teemed something up nicely there,
Rick, so let's see.

