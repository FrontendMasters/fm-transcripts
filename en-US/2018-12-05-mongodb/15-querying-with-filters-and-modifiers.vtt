WEBVTT

1
00:00:00.470 --> 00:00:03.250
&gt;&gt; Scott Moss: So
is gonna show quick ways of viewing them.

2
00:00:03.250 --> 00:00:08.430
So in order to make this useful, I'm gonna
add some more properties to a student,

3
00:00:10.020 --> 00:00:11.290
so we can see what this looks like or

4
00:00:11.290 --> 00:00:13.800
actually introduce school,
school doesn't have anything.

5
00:00:13.800 --> 00:00:23.180
So school we can say openSince and
we can put a number here.

6
00:00:24.310 --> 00:00:28.380
Then we can say how many students it has,
we can put a number here.

7
00:00:29.420 --> 00:00:35.420
And we can also say isGreat,
is it a great school?

8
00:00:35.420 --> 00:00:38.111
Hopefully it is.

9
00:00:38.111 --> 00:00:39.390
Okay.

10
00:00:39.390 --> 00:00:41.465
So now that we have that,
what we can do is,

11
00:00:41.465 --> 00:00:43.731
I'm trying to comment
some of this stuff out.

12
00:00:43.731 --> 00:00:49.397
If we have this school, and
I'll just leave this findOneAndUpdate.

13
00:00:59.403 --> 00:01:01.574
&gt;&gt; Scott Moss: I'm just gonna make another
object so I'm not writing it twice.

14
00:01:05.465 --> 00:01:08.508
&gt;&gt; Scott Moss: So
if you have a school whose name is mlk.

15
00:01:16.939 --> 00:01:21.687
&gt;&gt; Scott Moss: And it is openSince 2009,

16
00:01:21.687 --> 00:01:24.613
and students are.

17
00:01:28.691 --> 00:01:30.203
&gt;&gt; Scott Moss: 1000 students.

18
00:01:30.203 --> 00:01:32.080
And is it great?

19
00:01:32.080 --> 00:01:32.580
You bet.

20
00:01:34.680 --> 00:01:36.910
Cool, so now that I have that,
I got one school.

21
00:01:36.910 --> 00:01:38.070
And then I'm going to make another one.

22
00:01:41.996 --> 00:01:44.577
&gt;&gt; Scott Moss: Which is basically the same
thing with some small differences.

23
00:01:53.261 --> 00:01:54.505
&gt;&gt; Scott Moss: Larry Middle school,

24
00:01:54.505 --> 00:01:57.458
I'm sure there's a Larry Middle
school somewhere.

25
00:01:57.458 --> 00:02:01.193
And this was openSince 1980,

26
00:02:01.193 --> 00:02:05.710
has 600 students and it's not great.

27
00:02:07.180 --> 00:02:11.320
So what I want to do and we do got
to get rid of these for a minute.

28
00:02:11.320 --> 00:02:14.913
As a first one we got to insert
both of these into the database.

29
00:02:14.913 --> 00:02:20.087
I'm just going to say schools =, and
the sweet thing about the create method

30
00:02:20.087 --> 00:02:24.877
on a model is that it can take an array
of things to create, not just one.

31
00:02:24.877 --> 00:02:30.248
So I can pass in an array of school and

32
00:02:30.248 --> 00:02:37.601
school2, so schoolconfig and then school2.

33
00:02:37.601 --> 00:02:40.274
So it will create both of
those long as they don't fail.

34
00:02:40.274 --> 00:02:43.249
If the second one messed up one
of the validations on here,

35
00:02:43.249 --> 00:02:46.406
like if this was unique and
this had the same name, then yeah,

36
00:02:46.406 --> 00:02:49.460
it just wouldn't work,
it would just fail on that one.

37
00:02:49.460 --> 00:02:50.570
But the first one wouldn't get saved.

38
00:02:51.750 --> 00:02:54.220
So yeah,
that's where transactions come in.

39
00:02:54.220 --> 00:02:57.080
And we're not gonna talk about
transactions right now, it's complicated.

40
00:02:58.480 --> 00:02:59.650
So this will create two schools.

41
00:02:59.650 --> 00:03:01.460
So now we have those two,
we can do some querying.

42
00:03:01.460 --> 00:03:07.399
So I'm gonna say, I wanna find the school,

43
00:03:12.282 --> 00:03:14.810
&gt;&gt; Scott Moss: findOne.

44
00:03:14.810 --> 00:03:16.610
And then now we're gonna do
some type of filter in here.

45
00:03:16.610 --> 00:03:21.089
So I wanna findOne where students

46
00:03:23.150 --> 00:03:28.240
is, and I'm gonna say greater than,
so if I use this $gt,

47
00:03:28.240 --> 00:03:30.710
that's gonna give me greater than.

48
00:03:30.710 --> 00:03:39.632
So students have to be
greater than 600 .exec.

49
00:03:39.632 --> 00:03:41.490
So if I do this, what should I get back?

50
00:03:43.210 --> 00:03:44.450
What school would I get back?

51
00:03:46.780 --> 00:03:47.533
&gt;&gt; Student: MLK.

52
00:03:47.533 --> 00:03:48.263
&gt;&gt; Scott Moss: Yeah, I get back MLK,

53
00:03:48.263 --> 00:03:49.930
that's the only one
that's greater than 600.

54
00:03:49.930 --> 00:03:54.912
This one's exactly 600, so it's not
greater than 600 so I should get back MLK.

55
00:04:01.348 --> 00:04:04.830
&gt;&gt; Scott Moss: Cool, and
I do, I get back MLK here.

56
00:04:04.830 --> 00:04:07.570
All right and
you can get pretty crazy with this.

57
00:04:07.570 --> 00:04:10.940
So there's nothing stopping me
from saying I wanna set a range.

58
00:04:10.940 --> 00:04:14.270
So it's also going to be
less than some other number.

59
00:04:16.350 --> 00:04:17.417
And we'll put this on another line.

60
00:04:21.947 --> 00:04:24.090
&gt;&gt; Scott Moss: And
however many filters you wanna do.

61
00:04:24.090 --> 00:04:28.293
So I have students here, I can also
start adding filters for openSince.

62
00:04:28.293 --> 00:04:30.626
Because that's a number, well,
that's a pretty good example.

63
00:04:30.626 --> 00:04:36.340
I would do isGreat, so isGreat must
be true, so I added a filter there.

64
00:04:36.340 --> 00:04:41.674
And as you can see, you can pretty much go
on and on with these filters like that.

65
00:04:41.674 --> 00:04:46.274
Really, one that's kinda hard to
conceptualize, at least for me it was,

66
00:04:46.274 --> 00:04:50.727
it kinda difficult cuz of Mongoose
changes it all the time is when you deal

67
00:04:50.727 --> 00:04:53.370
with arrays and how you search for arrays.

68
00:04:53.370 --> 00:04:56.050
Like if there's a document inside
of an array, how do I search for

69
00:04:56.050 --> 00:04:57.610
something inside of there?

70
00:04:57.610 --> 00:04:59.090
Well, I'm gonna show you.

71
00:04:59.090 --> 00:05:03.613
So if I add an array here of just staff,
and

72
00:05:03.613 --> 00:05:09.188
it's just gonna be an array of names,
so strings.

73
00:05:10.987 --> 00:05:15.868
&gt;&gt; Scott Moss: And I'm just gonna add one
like staff here, and they're just strings

74
00:05:15.868 --> 00:05:21.424
so they don't really have to be like,
I'm just gonna make them all different.

75
00:05:36.915 --> 00:05:37.498
&gt;&gt; Scott Moss: There we go.

76
00:05:37.498 --> 00:05:40.400
So they both have a similar b in them.

77
00:05:40.400 --> 00:05:43.490
And then I'm just gonna
just not do that again.

78
00:05:43.490 --> 00:05:46.990
Okay, so now if I wanna be able to
search what's inside of an array,

79
00:05:46.990 --> 00:05:49.400
it's actually pretty simple.

80
00:05:49.400 --> 00:05:55.259
So, I'm gonna get rid of these and then
what I can do is I can just say staff,

81
00:05:55.259 --> 00:06:00.117
and then for the array I could
just put whatever value I want b.

82
00:06:00.117 --> 00:06:03.436
And Mongoose is smart to know that
staff is array and I'm searching for

83
00:06:03.436 --> 00:06:07.390
something inside of an array, so
it's just gonna give me that.

84
00:06:07.390 --> 00:06:11.410
So if both of these have b in them,
then I should get back both of these.

85
00:06:11.410 --> 00:06:12.750
So let's see what happens.

86
00:06:13.770 --> 00:06:18.820
And there's an explicit way to
do this too, so right here.

87
00:06:18.820 --> 00:06:21.200
I did a findOne, so I only got one back.

88
00:06:21.200 --> 00:06:24.930
But if I did a find, I would've got
both of them back, so let's change that.

89
00:06:24.930 --> 00:06:25.610
So a find and

90
00:06:25.610 --> 00:06:29.695
I don't want to key increment this
cuz I don't wanna rewrite the code.

91
00:06:33.555 --> 00:06:34.570
&gt;&gt; Scott Moss: There we go.

92
00:06:34.570 --> 00:06:37.090
So now we got a lot of them back.

93
00:06:37.090 --> 00:06:38.860
We got four cuz I run the script twice,
right?

94
00:06:38.860 --> 00:06:39.760
So now we got four of them.

95
00:06:39.760 --> 00:06:42.210
As you can see like it's pretty powerful.

96
00:06:42.210 --> 00:06:44.963
So there's a lot of stuff that you
can do there with the current, and

97
00:06:44.963 --> 00:06:46.037
it's pretty intuitive.

98
00:06:47.629 --> 00:06:50.110
&gt;&gt; Scott Moss: Any questions on, yes.

99
00:06:50.110 --> 00:06:55.050
&gt;&gt; Student2: If you wanted to search
against multiple staff, would you use

100
00:06:55.050 --> 00:07:01.640
a regex to put in multiple names,
or would you put an array of names?

101
00:07:01.640 --> 00:07:02.280
&gt;&gt; Scott Moss: That's a good question.

102
00:07:02.280 --> 00:07:04.360
So if I wanted to do that,

103
00:07:04.360 --> 00:07:09.325
the way I would do that is I
would use the in operator, $in.

104
00:07:09.325 --> 00:07:11.440
I think it goes first, if it doesn't
go first there, we'll switch it.

105
00:07:11.440 --> 00:07:17.320
So I could say in staff, and
then I could put an array of values,

106
00:07:17.320 --> 00:07:23.930
so I could say v, b, g.

107
00:07:23.930 --> 00:07:28.415
So that means, if any one of
these schools has a staff with

108
00:07:28.415 --> 00:07:32.447
an array of one of these values,
then return that.

109
00:07:32.447 --> 00:07:35.600
Because every school I has that then yeah,
this will return everything.

110
00:07:38.880 --> 00:07:40.870
Whenever you see a dollar sign
on an operator like that,

111
00:07:40.870 --> 00:07:43.840
that's a native Mongo operator,
so native Mongo thing.

112
00:07:45.380 --> 00:07:45.880
Yes?

113
00:07:48.426 --> 00:07:53.426
&gt;&gt; Student3: So SQL has selects
top thousand or top ten records,

114
00:07:53.426 --> 00:07:57.970
so Mongo does have any
operation of that kind?

115
00:07:57.970 --> 00:07:58.990
&gt;&gt; Scott Moss: What was the operation?

116
00:08:00.450 --> 00:08:03.790
&gt;&gt; Student3: So like select top hundred or
select top ten.

117
00:08:03.790 --> 00:08:04.850
&gt;&gt; Scott Moss: Got it-
&gt;&gt; Student3: Does Mongo has that?

118
00:08:04.850 --> 00:08:06.650
&gt;&gt; Scott Moss: Yeah,
so that's like a limit,

119
00:08:06.650 --> 00:08:09.300
it's like I wanna like
only select this limit.

120
00:08:09.300 --> 00:08:16.750
Yeah so without sorting, yeah,
you could just do .limit, like this.

121
00:08:16.750 --> 00:08:20.390
And I can say .limit(2),
this will only give me the top two.

122
00:08:20.390 --> 00:08:21.470
But this isn't sorted so

123
00:08:21.470 --> 00:08:24.460
I mean you don't know which two
you're gonna get back, but yeah.

124
00:08:24.460 --> 00:08:27.586
And if you did wanna sort it,
you would do .sort.

125
00:08:29.473 --> 00:08:31.300
&gt;&gt; Scott Moss: This allows
you to sort by properties.

126
00:08:31.300 --> 00:08:37.360
So if I were to sort by
descending openSince,

127
00:08:37.360 --> 00:08:42.950
I could put -openSince, like that,
that'll sort descending.

128
00:08:42.950 --> 00:08:44.880
If I want ascending, I can split positive.

129
00:08:44.880 --> 00:08:49.542
If I don't want to use strings I can
use an object and say openSince: 1,

130
00:08:49.542 --> 00:08:52.390
which is ascending or -1 for descending.

131
00:08:52.390 --> 00:08:53.180
It's very flexible.

