WEBVTT

1
00:00:00.557 --> 00:00:07.042
&gt;&gt; Scott Moss: So if we were to run
the server, and hopefully this will work,

2
00:00:07.042 --> 00:00:11.674
we should be able to
just say node test.js.

3
00:00:11.674 --> 00:00:17.803
And I'm gonna stop here, because
this should be morgan, there we go.

4
00:00:21.929 --> 00:00:24.418
&gt;&gt; Scott Moss: Why does that do that?

5
00:00:24.418 --> 00:00:28.873
[LAUGH]
&gt;&gt; Scott Moss: We'll run that.

6
00:00:28.873 --> 00:00:34.669
Okay, so I didn't put a log here so
you can't see that my server is running,

7
00:00:34.669 --> 00:00:37.487
but it's running on port 5000.

8
00:00:37.487 --> 00:00:41.452
And if I do a GET request
to port 5000/note,

9
00:00:41.452 --> 00:00:44.934
I don't have any notes in the database, so

10
00:00:44.934 --> 00:00:50.510
I'd imagine I'd just get back
an empty array, which I do, right?

11
00:00:50.510 --> 00:00:52.349
Cuz I don't have any notes.

12
00:00:52.349 --> 00:00:55.437
And you can see, I got /note 200.

13
00:00:55.437 --> 00:01:00.316
I could create some notes, but I'd have to
open up a little GUI to do a POST request,

14
00:01:00.316 --> 00:01:02.010
or something like Postman.

15
00:01:02.010 --> 00:01:04.050
But yeah, that's basically it.

16
00:01:05.350 --> 00:01:07.233
So that's how you integrate with an API.

17
00:01:07.233 --> 00:01:08.873
I've integrated Mongo with Python before.

18
00:01:08.873 --> 00:01:12.940
I've integrated it with Java before.

19
00:01:12.940 --> 00:01:15.709
By far the easiest with Node,
especially with something like Express.

20
00:01:15.709 --> 00:01:17.659
So pretty simple.

21
00:01:17.659 --> 00:01:20.140
I use it with GraphQL, it's pretty simple.

22
00:01:20.140 --> 00:01:21.239
It's just super flexible.

23
00:01:21.239 --> 00:01:23.414
As you can see with the models,
you can kinda do whatever you want.

24
00:01:23.414 --> 00:01:28.051
A really good pattern is instead of
importing all your models into one file,

25
00:01:28.051 --> 00:01:32.762
is just attach them to some object that
you inject into all your controllers or

26
00:01:32.762 --> 00:01:33.570
something.

27
00:01:33.570 --> 00:01:37.540
So every controller has every model,
versus you trying to figure it out.

28
00:01:37.540 --> 00:01:42.420
So in this case, in Express you might
attach the models to the request object.

29
00:01:42.420 --> 00:01:45.080
You might do something like that so
they're all there.

30
00:01:45.080 --> 00:01:49.260
So you can just be like
request.models.find, whatever, and

31
00:01:49.260 --> 00:01:52.570
you can just do that without
having to import them all.

32
00:01:52.570 --> 00:01:54.425
So really,
it depends on how you organize your app.

