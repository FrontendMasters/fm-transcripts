WEBVTT

1
00:00:00.250 --> 00:00:02.420
&gt;&gt; Scott Moss: Like I said,
this is the last exercise of today.

2
00:00:02.420 --> 00:00:05.080
So what I wanna do is spend the last
couple of minutes just talking about

3
00:00:06.300 --> 00:00:10.380
next steps, how to take this to
the next level, what to check out next,

4
00:00:10.380 --> 00:00:14.010
how to do further integrations and
like kinda where the community is going.

5
00:00:14.010 --> 00:00:18.020
So what I always like to do is just talk
about some cool packages that kinda relate

6
00:00:18.020 --> 00:00:19.090
to all of this.

7
00:00:19.090 --> 00:00:23.690
So obviously, Mongoose is like
the coolest package in Mongo.

8
00:00:23.690 --> 00:00:27.840
Aside from that, there really isn't
a lot of cool stuff in Mongo.

9
00:00:27.840 --> 00:00:29.317
Mongo is, to be honest, a node.

10
00:00:29.317 --> 00:00:33.273
There's some utility libraries and
stuff that kinda make sense with Mongoose.

11
00:00:33.273 --> 00:00:36.705
But when it comes to kinda
doing everything for you,

12
00:00:36.705 --> 00:00:39.049
Mongoose takes the cake with that.

13
00:00:39.049 --> 00:00:42.620
I can't not think of anything that I
cannot live without when it comes to

14
00:00:42.620 --> 00:00:45.311
Mongoose and
Mongo other that just having Mongoose.

15
00:00:45.311 --> 00:00:46.660
So that's that.

16
00:00:46.660 --> 00:00:53.920
But specifically around helping you
build applications with databases and

17
00:00:53.920 --> 00:00:57.960
specifically Node.js,
there are a lot of other things out there.

18
00:00:57.960 --> 00:01:02.428
So for instance, if you prefer to check
out a different ORM or something,

19
00:01:02.428 --> 00:01:03.229
Waterline.

20
00:01:03.229 --> 00:01:07.246
I don't know why I googled that like it
was gonna show, it did, it's number two,

21
00:01:07.246 --> 00:01:08.420
wow, okay.

22
00:01:08.420 --> 00:01:13.080
Yeah, so Waterline,
I guess actually not that active anymore,

23
00:01:13.080 --> 00:01:15.930
three months ago, but
it used to be a very active package.

24
00:01:15.930 --> 00:01:18.520
It's an ORM that works for every database.

25
00:01:18.520 --> 00:01:24.220
So not just Mongo, but it works for
Postgres, SQL, pretty much everything.

26
00:01:24.220 --> 00:01:27.640
And it kinda uses a Mongoose
like syntax to do queries.

27
00:01:27.640 --> 00:01:30.570
So if you want something a little more
flexible, cuz you're using mini databases,

28
00:01:30.570 --> 00:01:33.274
you just wanna use one ORM,
Waterline's a good one.

29
00:01:33.274 --> 00:01:36.933
There used to be a framework
back in the day called Sails.js.

30
00:01:36.933 --> 00:01:40.800
I don't know if you ever heard of that,
it used Waterline, that's what it used.

31
00:01:40.800 --> 00:01:42.360
The creator created both of them.

32
00:01:42.360 --> 00:01:43.822
&gt;&gt; Speaker 2: So
this works with multiple different,

33
00:01:43.822 --> 00:01:45.290
it complies with different databases.

34
00:01:45.290 --> 00:01:46.870
&gt;&gt; Scott Moss: Yeah,
it works with multiple database and

35
00:01:46.870 --> 00:01:49.500
it gives you just one, Mongoose-like.

36
00:01:49.500 --> 00:01:52.451
You can see it even has the same syntax,
Organization.Create.

37
00:01:52.451 --> 00:01:52.971
It's literally the same one.

38
00:01:52.971 --> 00:01:55.710
&gt;&gt; Speaker 2: You treat it as one
database, but you have multiples.

39
00:01:55.710 --> 00:01:56.950
I know, not completely.

40
00:01:56.950 --> 00:01:58.232
&gt;&gt; Scott Moss: No, not completely.

41
00:01:58.232 --> 00:02:01.140
Yeah [LAUGH] gotta be legit though.

42
00:02:01.140 --> 00:02:05.350
That's a good idea,
we need to collaborate on that [LAUGH].

43
00:02:05.350 --> 00:02:06.590
I like that.

44
00:02:06.590 --> 00:02:09.250
But yeah, no it doesn't do that.

45
00:02:10.430 --> 00:02:11.490
So yeah, that's one.

46
00:02:11.490 --> 00:02:18.368
Other ones include, I can't really think
of any amazing stuff in the Mongo world.

47
00:02:18.368 --> 00:02:21.077
People don't really make plugins for
Mongoose or Mongo, you kinda just,

48
00:02:21.077 --> 00:02:21.770
they just don't.

49
00:02:21.770 --> 00:02:22.990
You kinda gotta do your own thing.

50
00:02:24.880 --> 00:02:29.050
Other cool stuff with just backends and
stuff in general, so

51
00:02:29.050 --> 00:02:32.780
there's like tons of different backends
as a service that kind of help.

52
00:02:32.780 --> 00:02:36.810
One in particular that's
really cool is called Prisma.

53
00:02:37.950 --> 00:02:40.430
Really good team, really good company.

54
00:02:40.430 --> 00:02:43.132
Why did I Google that, why, why, why?

55
00:02:43.132 --> 00:02:45.070
You never know what you're
gonna get when you Google.

56
00:02:45.070 --> 00:02:47.250
Right now they're talking
about GraphQL and stuff, but

57
00:02:47.250 --> 00:02:49.930
they're actually switching over
to just not just being GraphQL.

58
00:02:49.930 --> 00:02:53.420
But they're really cool,
they're basically like a ORM as a service.

59
00:02:53.420 --> 00:02:55.950
So if you don't want to like
if you're trying to go out,

60
00:02:55.950 --> 00:02:57.750
what does that even mean?

61
00:02:57.750 --> 00:02:59.860
Yeah, it's a new thing,
you got to read the documentation,

62
00:02:59.860 --> 00:03:02.980
but the other really cool highly
recommend checking them out.

63
00:03:02.980 --> 00:03:04.824
It's open source,
you can do a lot of things but

64
00:03:04.824 --> 00:03:06.732
like I said right now it
only works with GraphQL.

65
00:03:06.732 --> 00:03:09.318
So if you're doing GraphQL and
you just want like a free API for

66
00:03:09.318 --> 00:03:12.270
your back-end on your own database,
they're really cool for that.

67
00:03:14.280 --> 00:03:17.480
A really good one is also pashira io.

68
00:03:19.010 --> 00:03:23.190
Really good team out of India and
now they are in the Bay area.

69
00:03:23.190 --> 00:03:26.625
Super smart team,
I talk to the founders all the time.

70
00:03:26.625 --> 00:03:28.060
They're very similar to like Prism and

71
00:03:28.060 --> 00:03:30.810
stuff where they are like
a complete backend as a service.

72
00:03:30.810 --> 00:03:33.460
So they host everything for you.

73
00:03:33.460 --> 00:03:36.550
They connect to your own
Postgres database and do stuff.

74
00:03:36.550 --> 00:03:42.595
Really cool backend stuff.

75
00:03:42.595 --> 00:03:46.210
I cannot think of anything that
stands out from me for Mongoose.

76
00:03:46.210 --> 00:03:49.327
I do not use anything other than Mongoose
when it comes to my applications

77
00:03:49.327 --> 00:03:49.848
for Mongo.

78
00:03:49.848 --> 00:03:52.092
There is nothing else that I ever use.

79
00:03:52.092 --> 00:03:57.350
Actually, there's something that I wanted
to try out, it's called Mongo DB Stitch.

80
00:03:59.080 --> 00:04:00.100
This is really cool, actually.

81
00:04:00.100 --> 00:04:06.234
So this is serverless Mongo and
it's created by the people who made Mongo.

82
00:04:06.234 --> 00:04:09.844
We had to build our own
version of this at my company.

83
00:04:09.844 --> 00:04:13.569
Who here has built an application of
lambdas or service functions before?

84
00:04:14.660 --> 00:04:15.620
Nobody?

85
00:04:15.620 --> 00:04:21.100
Okay, cool so
the way that they work the functions

86
00:04:21.100 --> 00:04:24.110
they're not long lived processes.

87
00:04:24.110 --> 00:04:26.380
They fire then they close and that's it.

88
00:04:26.380 --> 00:04:27.890
So databases really weren't built for
that.

89
00:04:27.890 --> 00:04:32.110
Databases were meant to be on servers
that are open and operating forever.

90
00:04:32.110 --> 00:04:35.370
So they have everything how databases
work for service functions.

91
00:04:35.370 --> 00:04:37.230
This is Mongo's answer to that.

92
00:04:37.230 --> 00:04:39.800
So it's basically like Firebase but Mongo.

93
00:04:39.800 --> 00:04:40.583
That's basically what they're doing.

94
00:04:40.583 --> 00:04:42.448
They're competing with Firebase but
for Mongo.

95
00:04:42.448 --> 00:04:46.324
So you use this on service functions, but
looks like they're shooting for is for

96
00:04:46.324 --> 00:04:48.670
you to use this directly in your app.

97
00:04:48.670 --> 00:04:52.960
So you don't have a server anymore, you
just use Mongo right on your web app or

98
00:04:52.960 --> 00:04:53.920
your mobile app.

99
00:04:53.920 --> 00:04:56.880
And it's very much like Firebase,
you create the database from there.

100
00:04:56.880 --> 00:05:00.650
And the way that works is
because it's all over HTTP.

101
00:05:00.650 --> 00:05:03.930
So but they give you like an API
basically to hit your database,

102
00:05:03.930 --> 00:05:06.350
and your database is on
some server somewhere.

103
00:05:06.350 --> 00:05:11.490
So it's like this new thing of
HTTP based databases, if you will.

104
00:05:11.490 --> 00:05:12.410
There's ton of them.

105
00:05:12.410 --> 00:05:14.460
This is Mongo's version of it.

106
00:05:14.460 --> 00:05:15.350
Seems pretty legit.

107
00:05:15.350 --> 00:05:17.050
If I was going to use
something like Firebase,

108
00:05:17.050 --> 00:05:19.110
I would definitely look
at this as a contender.

109
00:05:19.110 --> 00:05:22.010
But, yeah, it kind of handles a lot
of stuff for you as as far as.

110
00:05:23.170 --> 00:05:26.600
It even has functions that
you can do in the Cloud.

111
00:05:26.600 --> 00:05:27.754
It will do authentication for you.

112
00:05:27.754 --> 00:05:29.640
It will do things like Twilio and Stripe.

113
00:05:29.640 --> 00:05:31.592
Pretty much do a lot of stuff for
you that you don't have to.

114
00:05:31.592 --> 00:05:33.396
So, highly recommend for
you to check it out and

115
00:05:33.396 --> 00:05:35.260
it's obviously built by
a really good company.

116
00:05:40.620 --> 00:05:43.230
Yep, that's all I got for
really cool stuff.

117
00:05:43.230 --> 00:05:48.786
As far as going forward and
what to learn from here,

118
00:05:48.786 --> 00:05:53.450
I highly recommend looking into Mongo 4.

119
00:05:53.450 --> 00:05:56.490
Mongo 4 just got released
like a couple months ago.

120
00:05:56.490 --> 00:05:59.570
Like everybody has been dying for Mongo 4.

121
00:05:59.570 --> 00:06:01.856
I highly recommend checking it out and

122
00:06:01.856 --> 00:06:06.380
seeing what's new with it because
again it made Mongo ACID compliant.

123
00:06:06.380 --> 00:06:09.220
And I think because of that a lot
of things are going to change in

124
00:06:09.220 --> 00:06:10.060
the Mongo world.

125
00:06:10.060 --> 00:06:12.280
If it isn't good already,
it's going to be really good soon.

126
00:06:12.280 --> 00:06:14.270
I highly recommend taking
advantage of that.

127
00:06:14.270 --> 00:06:16.470
So if you're team is
interested in using Mongo but

128
00:06:16.470 --> 00:06:20.760
you're like what about transactions and
ACID compliancy and all that stuff?

129
00:06:20.760 --> 00:06:21.710
Well, it does that now.

130
00:06:21.710 --> 00:06:22.860
So, check it out.

131
00:06:22.860 --> 00:06:26.350
A lot of cool stuff.

132
00:06:26.350 --> 00:06:27.600
No, I don't have any questions.

133
00:06:30.670 --> 00:06:31.680
&gt;&gt; Speaker 3: And pitch your course.

134
00:06:33.760 --> 00:06:35.580
&gt;&gt; Scott Moss: Yeah how
did I forget about that?

135
00:06:35.580 --> 00:06:37.300
I'm like thinking about cool stuff.

136
00:06:37.300 --> 00:06:38.850
I'm not thinking about my course.

137
00:06:38.850 --> 00:06:43.720
And also, yeah, so we did a little bit
of API stuff here at end with Mongo.

138
00:06:43.720 --> 00:06:46.227
I have a course on Frontend Masters.

139
00:06:48.271 --> 00:06:52.223
&gt;&gt; Scott Moss: That talks
about that in more detail so.

140
00:06:55.667 --> 00:06:57.000
&gt;&gt; Scott Moss: I should've
just typed in my name.

141
00:06:57.000 --> 00:06:58.480
Why did I not type my name?

142
00:06:58.480 --> 00:07:02.717
Okay so we have the REST &amp; GraphQL,
API Design in Node,js v2, so

143
00:07:02.717 --> 00:07:05.290
this is like the version two of it.

144
00:07:05.290 --> 00:07:09.857
But basically, I go in a little more
detail about using Express which

145
00:07:09.857 --> 00:07:11.916
is a node API based framework.

146
00:07:11.916 --> 00:07:15.660
And in that course we're also going to be
using Mongo and it clearly says that here.

147
00:07:15.660 --> 00:07:19.035
So you'll be building a REST
application with Express and Mongo and

148
00:07:19.035 --> 00:07:20.643
then I take it to the next level.

149
00:07:20.643 --> 00:07:23.890
And then I show you how to like convert
that REST application to GraphQL.

150
00:07:23.890 --> 00:07:26.720
And the differences between the two,
how they can work side by side,

151
00:07:26.720 --> 00:07:29.480
how they can work on top of each other,
all of the different things.

152
00:07:29.480 --> 00:07:34.120
So you will be touching
the whole spectrum of APIs,

153
00:07:34.120 --> 00:07:37.550
node, and Express,
which is my preferred method.

154
00:07:37.550 --> 00:07:40.610
So a lot of the stuff that I am teaching
in this course is literally the code that

155
00:07:40.610 --> 00:07:42.250
I use every day at my company.

156
00:07:42.250 --> 00:07:44.240
This is why I was so
excited to teach it because I was like,

157
00:07:44.240 --> 00:07:47.130
I just did a whole bunch of code stuff and
I wanna share it with everybody.

158
00:07:47.130 --> 00:07:51.030
So Mark let me teach it and
I appreciate that.

159
00:07:51.030 --> 00:07:51.760
Yeah, so check that out.

160
00:07:51.760 --> 00:07:54.090
That's a really good
next step to go further.

161
00:07:54.090 --> 00:07:56.870
And if you haven't used Node before,
this is your first time using Node,

162
00:07:56.870 --> 00:08:00.010
like I used Mongo today but
I haven't really used Node before.

163
00:08:00.010 --> 00:08:03.150
Then the course I just taught yesterday
is the Intro to Node, check that one out.

164
00:08:03.150 --> 00:08:07.490
It will be ready whenever the team
gets done with it and posting it but

165
00:08:07.490 --> 00:08:08.570
be on the look out for that one.

166
00:08:08.570 --> 00:08:11.920
And that one will give you a really
good introduction into Node in general.

167
00:08:11.920 --> 00:08:15.400
So the only requirement for that is
that you know JavaScript that's it.

168
00:08:15.400 --> 00:08:19.230
If you know JavaScript
you can take that course.

169
00:08:19.230 --> 00:08:22.610
Other than that, small plug here.

170
00:08:22.610 --> 00:08:26.440
Check out my product,
Tipe.io, Manager content,

171
00:08:26.440 --> 00:08:29.770
check out the video,
I think you'll figure out how it works.

172
00:08:29.770 --> 00:08:31.474
Sign up for beta, we'll be releasing soon.

173
00:08:31.474 --> 00:08:34.620
All right, well I appreciate
everybody coming for the course.

174
00:08:34.620 --> 00:08:38.475
And thanks, Mark and
the team for having me.

175
00:08:38.475 --> 00:08:42.496
&gt;&gt; [APPLAUSE]

