WEBVTT

1
00:00:00.000 --> 00:00:04.235
[MUSIC]

2
00:00:04.235 --> 00:00:09.043
&gt;&gt; Kyle Simpson: Let's jump into our
discussion today, about node.js.

3
00:00:09.043 --> 00:00:12.103
Now I promised you yesterday that
there's gonna be a lot more code and

4
00:00:12.103 --> 00:00:13.290
there will be.

5
00:00:13.290 --> 00:00:17.740
There's no, it's not that there's no
lecturing, there will be some lecturing.

6
00:00:17.740 --> 00:00:20.117
We'll have a little bit
more here at the beginning,

7
00:00:20.117 --> 00:00:23.152
I'm gonna talk about some HTML5,
APIs, some things like that.

8
00:00:23.152 --> 00:00:24.390
So we talk a little bit more about it.

9
00:00:24.390 --> 00:00:27.210
But by the time we're at lunchtime and
certainly this afternoon,

10
00:00:27.210 --> 00:00:29.170
it's gonna be an almost entirely coding.

11
00:00:29.170 --> 00:00:35.000
So, you're gonna have plenty
to get your hands dirty with.

12
00:00:35.000 --> 00:00:39.557
I call this second day into node js,
because again, as I said yesterday,

13
00:00:39.557 --> 00:00:44.409
at the beginning, my goal is to give you
a firm enough confidence of JavaScript

14
00:00:44.409 --> 00:00:46.267
that we can dive into node js.

15
00:00:46.267 --> 00:00:50.001
There have been many times that I've
read articles or books about Node or

16
00:00:50.001 --> 00:00:52.395
seen a screencast or
a tutorial done about it.

17
00:00:52.395 --> 00:00:57.400
And they all sort of assume that you
already understand JavaScript, and when

18
00:00:57.400 --> 00:01:03.340
you present that to someone that doesn't
fully have confidence about JavaScript.

19
00:01:03.340 --> 00:01:04.430
It's completely Greek to them.

20
00:01:04.430 --> 00:01:08.460
They have no idea what you're talking
about with a module and require and

21
00:01:08.460 --> 00:01:10.610
the scoping and
all of those sorts of things.

22
00:01:10.610 --> 00:01:14.420
So the goal yesterday, was to present
the things that were really necessary for

23
00:01:14.420 --> 00:01:19.320
you to have confidence in, so that when
you start coding inside of node.js,

24
00:01:19.320 --> 00:01:21.490
those things aren't the things
that you're questioning.

25
00:01:21.490 --> 00:01:25.080
And your brain can operate at a higher
level of abstraction, because now we're

26
00:01:25.080 --> 00:01:28.640
dealing with how do we deal with
the environment that node provides to us?

27
00:01:28.640 --> 00:01:32.590
How do we optimize ourselves for streaming
data and all those sorts of things?

28
00:01:32.590 --> 00:01:35.650
That's a higher level of abstraction,
and we don't want your brains

29
00:01:35.650 --> 00:01:39.050
worrying too much about,
I don't understand the lexical scope.

30
00:01:39.050 --> 00:01:42.540
So hopefully, you do have that confidence,
if you have questions,

31
00:01:42.540 --> 00:01:45.670
continue to feel free to reach out,
but that's the goal of this class,

32
00:01:45.670 --> 00:01:47.200
that's why we did it as two day class.

33
00:01:47.200 --> 00:01:53.450
So, we're diving into node.js and I'm
gonna focus on three major things today.

34
00:01:54.540 --> 00:01:59.040
We're gonna focus first on HTML5,
not that we're gonna spend an awful lot of

35
00:01:59.040 --> 00:02:01.370
time with that, I'm gonna try
to go pretty quickly through it.

36
00:02:01.370 --> 00:02:04.030
But I wanna expose you to some of

37
00:02:04.030 --> 00:02:07.790
the [COUGH] some of the API's
that are provided in HTML5.

38
00:02:07.790 --> 00:02:11.870
Which will assist us in doing
real time communication things,

39
00:02:11.870 --> 00:02:15.520
because that we're gonna get
real familiar with node and so.

40
00:02:15.520 --> 00:02:20.156
But we're not gonna spend the entire
day talking about every kind of like

41
00:02:20.156 --> 00:02:22.372
Browserify and ecosystem thing.

42
00:02:22.372 --> 00:02:25.896
We're going somewhere specifically
with our node interaction.

43
00:02:25.896 --> 00:02:28.658
And once we're comfortable with node and
how it works,

44
00:02:28.658 --> 00:02:32.891
where we're going is to wire ourselves up
with some real time communication things,

45
00:02:32.891 --> 00:02:35.980
because I think it's a good way
to show off nodes capability.

46
00:02:35.980 --> 00:02:39.920
One of its most one of its strongest
points is its ability to do high

47
00:02:39.920 --> 00:02:41.235
performance communications.

48
00:02:41.235 --> 00:02:45.480
So, we'll first deal with HTML5,
APIs that provide that.

49
00:02:45.480 --> 00:02:49.870
Then we're gonna talk about node, and
we will pair web sockets with node and

50
00:02:49.870 --> 00:02:53.130
show how web sockets provide
us a really great way of doing

51
00:02:53.130 --> 00:02:55.630
real time communication between client and
server.

52
00:02:55.630 --> 00:02:59.220
And finally by the end of the day,
we're gonna start talking about WebRTC,

53
00:02:59.220 --> 00:03:02.870
which is the next frontier
of real time communications.

54
00:03:02.870 --> 00:03:05.830
WebRTC enables peer to
peer communications.

55
00:03:05.830 --> 00:03:10.190
So rather than my laptop and your laptop
having to speak through an intermediate

56
00:03:10.190 --> 00:03:13.480
server, we can be introduced and
they can speak directly.

57
00:03:13.480 --> 00:03:16.440
And the fewer people
that are in between us,

58
00:03:16.440 --> 00:03:18.730
the more real time our
communications can get.

59
00:03:18.730 --> 00:03:21.380
So, we'll talk about what some
of the capabilities are and

60
00:03:21.380 --> 00:03:26.090
do some future thinking about where WebRTC
is gonna take the Web because I think

61
00:03:26.090 --> 00:03:30.840
WebRTC is the biggest inflection
point that has ever happened

62
00:03:30.840 --> 00:03:32.750
in the history of the web platform.

63
00:03:32.750 --> 00:03:35.800
And I recognize that's a pretty
big statement to be making.

64
00:03:35.800 --> 00:03:38.390
You can look back over the history
of the last 15 or 20 years and

65
00:03:38.390 --> 00:03:42.940
see the advent of JavaScript, you can see
the advent of Ajax, you can see the advent

66
00:03:42.940 --> 00:03:47.160
of the plug in web You can see
the advent of HTML5 and the open web.

67
00:03:47.160 --> 00:03:49.830
There's a whole bunch of little
inflection points, and I say little,

68
00:03:49.830 --> 00:03:51.310
sort of tongue in cheek.

69
00:03:51.310 --> 00:03:55.650
I think that the peer-to-peer web that we
are going to see develop over the next 10

70
00:03:55.650 --> 00:03:59.360
to 15 years, we'll look back and say,
I can't even believe that we spent so

71
00:03:59.360 --> 00:04:02.560
much time in that client-server model,
that old and busted model.

72
00:04:04.020 --> 00:04:04.910
Of the web.

73
00:04:04.910 --> 00:04:09.540
So, I want us to be aware of what web RTC
is possible but we're just now starting

74
00:04:09.540 --> 00:04:14.190
to dream up what that web, what that
version of the web is gonna look like.

75
00:04:14.190 --> 00:04:16.550
So, that's where we're headed today,
hopefully that will be exciting and

76
00:04:16.550 --> 00:04:18.230
interesting as we go throughout the day.

77
00:04:18.230 --> 00:04:23.556
We're gonna start again with HTML5.

78
00:04:23.556 --> 00:04:25.260
I just wanna make sure everybody's aware.

79
00:04:25.260 --> 00:04:30.560
Hopefully this should be pretty obvious,
but you definitely do need node.js.

80
00:04:30.560 --> 00:04:34.260
I recommend that you have at
least a version 10.23 or higher.

81
00:04:34.260 --> 00:04:39.200
So, if you go to your command line and
type in wherever your node instance can

82
00:04:39.200 --> 00:04:43.730
run, if you type in node, and then put
a space and then do dash, dash version.

83
00:04:45.040 --> 00:04:50.710
It should print out something for
you like 0.10.23 or higher.

84
00:04:50.710 --> 00:04:53.270
So 0.11 is fine.

85
00:04:53.270 --> 00:04:58.230
There isn't a 0.12 yet, but
we're anxiously awaiting the .12 release.

86
00:04:58.230 --> 00:05:04.050
If you have something like node .6 or node
.8, or .7 or 9, or something like that.

87
00:05:04.050 --> 00:05:05.010
Those are a little bit older and

88
00:05:05.010 --> 00:05:07.170
some of the stuff that we try to do may or
may not work.

89
00:05:07.170 --> 00:05:10.152
So, I recommend you
being on the ten branch,

90
00:05:10.152 --> 00:05:15.115
the newest version I think is 1026 or
1028 or something like that.

91
00:05:15.115 --> 00:05:20.218
1023, they actually made a bunch
of bug fixes to the HTTP method so

92
00:05:20.218 --> 00:05:22.997
that's why I say 1023 or higher.

93
00:05:22.997 --> 00:05:26.476
If you don't have that, there's plenty of
time while I lecture for you to fix that,

94
00:05:26.476 --> 00:05:29.720
but definitely make sure that you
have a good running node environment.

95
00:05:29.720 --> 00:05:33.060
That should also imply that you have
a good running NPM environment.

96
00:05:33.060 --> 00:05:36.030
If you're not aware of what in NPM is,
we'll teach you about NPM.

97
00:05:36.030 --> 00:05:40.940
But it's the package manager that allows
you to install node modules really easily.

98
00:05:40.940 --> 00:05:42.556
So you're gonna wanna have that up and
running.

99
00:05:42.556 --> 00:05:46.510
I say this specifically for the few of
you that may have Windows machines.

100
00:05:46.510 --> 00:05:48.440
Because I have seen in the past,

101
00:05:48.440 --> 00:05:51.190
some people have,
they can get node running just fine.

102
00:05:51.190 --> 00:05:55.062
But there have been times where certain
sorts of plugins that they try to install

103
00:05:55.062 --> 00:05:59.320
with NPM on Windows they require
a compilation, like socket IO for

104
00:05:59.320 --> 00:06:03.340
instance, and compilations on
Windows can be a little bit dicey.

105
00:06:03.340 --> 00:06:05.890
I've had people have problems where they

106
00:06:05.890 --> 00:06:08.940
required the .netSTK that they
didn't have installed or whatever.

107
00:06:08.940 --> 00:06:10.440
So just be aware of that.

108
00:06:10.440 --> 00:06:12.400
Kind of take a look at that
you've got plenty of time, but

109
00:06:12.400 --> 00:06:15.270
make sure you do have a fully
functioning NPM environment.

110
00:06:17.310 --> 00:06:21.628
Okay, what we're gonna talk about
today will be HTML5, node.js,

111
00:06:21.628 --> 00:06:23.833
web sockets,and finally WebRTC.

112
00:06:23.833 --> 00:06:26.300
So let's jump in to HTML5.

