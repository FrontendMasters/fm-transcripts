WEBVTT

1
00:00:01.171 --> 00:00:04.565
[MUSIC]

2
00:00:04.565 --> 00:00:05.774
&gt;&gt; Kyle Simpson: Next,
I wanna talk about canvas.

3
00:00:05.774 --> 00:00:08.830
I'm gonna pick on canvas a little
bit from the perspective of facades

4
00:00:08.830 --> 00:00:10.940
because there's a lot of
problems that canvas has.

5
00:00:10.940 --> 00:00:16.440
But I wanna just show you real
quick the facade that I created for

6
00:00:16.440 --> 00:00:18.010
it to try to address some things.

7
00:00:18.010 --> 00:00:20.360
So we create a canvas,
we give it a width and a height.

8
00:00:20.360 --> 00:00:23.920
The first, most annoying thing that I've
ever dealt with in dealing with canvas,

9
00:00:23.920 --> 00:00:28.400
the first annoying thing,
is that canvas actually has two different

10
00:00:28.400 --> 00:00:31.460
coordinate systems that you
have to concern yourself with.

11
00:00:31.460 --> 00:00:34.120
There's the addressable
space coordinate system,

12
00:00:34.120 --> 00:00:38.180
that is, the physical number of
pixels that your canvas can have.

13
00:00:38.180 --> 00:00:40.270
And there's the physical display space,

14
00:00:40.270 --> 00:00:45.680
that is, the CSS rendered with the height
that it shows up in your page.

15
00:00:45.680 --> 00:00:49.050
Theoretically, it seems like almost
all the time you would want those two

16
00:00:49.050 --> 00:00:50.180
to match.

17
00:00:50.180 --> 00:00:53.340
There are very few cases that I can think
of where I would want an addressable

18
00:00:53.340 --> 00:00:56.080
coordinate system different from
my visible coordinate system.

19
00:00:56.080 --> 00:01:00.080
Maybe zooming and stuff, but very rare.

20
00:01:00.080 --> 00:01:03.000
But canvas doesn't do anything
to help you with that.

21
00:01:03.000 --> 00:01:06.077
And so I built into this
facade the ability to say,

22
00:01:06.077 --> 00:01:10.110
like you see there on line four,
[COUGH] match the dimensions.

23
00:01:10.110 --> 00:01:14.110
So it will automatically render the CSS
to the same dimensions as the physically

24
00:01:14.110 --> 00:01:15.250
addressable pixel space.

25
00:01:17.440 --> 00:01:20.690
Another thing that's really annoying
about canvas is the fact that you

26
00:01:20.690 --> 00:01:21.670
have no chain ability.

27
00:01:21.670 --> 00:01:24.850
So this API uses chain ability,
as you can see.

28
00:01:24.850 --> 00:01:28.090
I can call set styles and
start path and define segments.

29
00:01:28.090 --> 00:01:30.850
So I have to keep repeating my
canvas over and over again.

30
00:01:30.850 --> 00:01:34.852
I took advantage of object literals to
kind of collect various, different styles

31
00:01:34.852 --> 00:01:38.912
together, so the stroke styles of width
and color are kind of collected together,

32
00:01:38.912 --> 00:01:41.524
and you don't have to repeat
yourself quite as much.

33
00:01:41.524 --> 00:01:46.422
Paths starting, there's a quirk in
canvas that some of you may have seen,

34
00:01:46.422 --> 00:01:48.697
I've seen this from time to time.

35
00:01:48.697 --> 00:01:51.926
And somebody sends out a demo that
everybody gets all excited about on

36
00:01:51.926 --> 00:01:55.825
Twitter, and everybody's like go look at
this really cool geometric pattern that

37
00:01:55.825 --> 00:01:56.673
I drew in canvas.

38
00:01:56.673 --> 00:02:01.289
And they're using some
mathematical function to draw

39
00:02:01.289 --> 00:02:03.906
some really cool curly thing.

40
00:02:03.906 --> 00:02:07.222
And I've noticed, from time to time,
that you pop that open in Chrome and

41
00:02:07.222 --> 00:02:10.720
you pop it open in Firefox, and
it's not quite the same thing.

42
00:02:10.720 --> 00:02:14.200
You'll see mostly the same design,
but in Firefox or in Chrome or

43
00:02:14.200 --> 00:02:17.790
whatever, you'll see a line just
kind of bizarrely going off.

44
00:02:17.790 --> 00:02:19.700
I don't know if anybody's
ever seen that before.

45
00:02:19.700 --> 00:02:23.860
The reason for that is there's a quirk
with canvas that if you don't give it

46
00:02:23.860 --> 00:02:28.560
an initial starting point, a registration
point for a path, it assumes zero, zero.

47
00:02:30.110 --> 00:02:33.310
Well, that's not always true because
some browsers assume zero, zero, and

48
00:02:33.310 --> 00:02:35.620
some just start with the first
point that you give it.

49
00:02:35.620 --> 00:02:38.140
So that's the reason
why you see that quirk

50
00:02:38.140 --> 00:02:42.170
difference because somebody didn't know
that and they didn't properly process.

51
00:02:42.170 --> 00:02:43.810
Facades are a clear way to fix that.

52
00:02:43.810 --> 00:02:50.500
So we can assume a zero, zero always and
correct those kinds of inconsistencies.

53
00:02:50.500 --> 00:02:53.400
The last thing I'll pick on with canvas,
which is something again that I tried to

54
00:02:53.400 --> 00:02:58.420
address with this facade, [COUGH] have
any of you ever done work with canvas?

55
00:02:58.420 --> 00:03:00.440
Anybody ever done any
drawings with the canvas?

56
00:03:00.440 --> 00:03:01.760
So a few of you are raising your hands.

57
00:03:01.760 --> 00:03:06.160
If you've ever dealt with canvas,
those of you that are online or

58
00:03:06.160 --> 00:03:07.510
listening, if you've
ever dealt with canvas,

59
00:03:07.510 --> 00:03:10.470
there's an interesting feature
that allows you to rotate.

60
00:03:10.470 --> 00:03:13.520
There's both rotating and
scaling and skewing, but

61
00:03:13.520 --> 00:03:15.410
I'll talk about rotate specifically.

62
00:03:15.410 --> 00:03:21.010
Because when I see rotate,
I think I'm rotating my drawing.

63
00:03:21.010 --> 00:03:25.550
And when I go read any number of books
out there that talk about canvas, or

64
00:03:25.550 --> 00:03:29.590
dozens and dozens of different respective
the blog posts that talk about canvas,

65
00:03:29.590 --> 00:03:33.460
they all suggest to you that when you
call rotate, it will rotate your drawing.

66
00:03:33.460 --> 00:03:38.810
And they suggest to you if you call
rotate and you pass in positive 45,

67
00:03:38.810 --> 00:03:43.210
that it will rotate your
drawing 45 degrees clockwise.

68
00:03:43.210 --> 00:03:45.814
I think I'm doing that backwards or
whatever, but you get the point.

69
00:03:45.814 --> 00:03:47.904
Pass in a positive 45, you get clockwise,

70
00:03:47.904 --> 00:03:51.820
a negative 45 you get counterclockwise,
or whatever they say.

71
00:03:51.820 --> 00:03:55.570
And so, you go and look at this really
cool tutorial and you're like awesome.

72
00:03:55.570 --> 00:03:57.500
So then you go to some canvas and

73
00:03:57.500 --> 00:04:02.490
you say here's my picture of my kitten
that I want to rotate it 45 degrees.

74
00:04:02.490 --> 00:04:06.510
And so I put my kitten on the canvas and
I call rotate 45, and

75
00:04:06.510 --> 00:04:10.100
my kitten went the other direction
from what I was expecting.

76
00:04:10.100 --> 00:04:11.800
And you go back and
you read the blog post or

77
00:04:11.800 --> 00:04:16.197
the book and you're like it says positive
should go this way, but negative.

78
00:04:16.197 --> 00:04:18.870
F it, and so you just put
a negative sign in front of it.

79
00:04:18.870 --> 00:04:20.990
And then all of a sudden it
goes in the right direction and

80
00:04:20.990 --> 00:04:24.120
you think, I don't know why, but
I'll just go on about my road.

81
00:04:24.120 --> 00:04:25.450
And nobody ever seems to stop and

82
00:04:25.450 --> 00:04:29.990
ask themselves, why is it that it's always
rotating in the wrong, damn direction?

83
00:04:29.990 --> 00:04:33.790
The reason is there's a conceptual problem
with the way these things are written,

84
00:04:33.790 --> 00:04:37.180
with the way the API's designed and
with the way things are documented.

85
00:04:37.180 --> 00:04:39.560
Because you're not actually
rotating the drawing,

86
00:04:39.560 --> 00:04:41.250
you're rotating the coordinate system.

87
00:04:41.250 --> 00:04:44.440
And when you rotate a coordinate system,

88
00:04:44.440 --> 00:04:46.909
you're gonna get the opposite
effect of rotating the drawing.

89
00:04:48.340 --> 00:04:52.230
But nobody seems to take the time to think
about those things and design API so that

90
00:04:53.440 --> 00:04:58.680
the way you use an API matches the way the
conceptuals work with the functionality.

91
00:04:58.680 --> 00:04:59.876
That's something I think we can fix,

92
00:04:59.876 --> 00:05:01.900
so I've tried to address
that with this facade.

93
00:05:01.900 --> 00:05:03.830
So facades can fix little,

94
00:05:03.830 --> 00:05:07.290
tiny problems, but they're mostly
concerned with just insulating us from

95
00:05:07.290 --> 00:05:10.490
weird cross browser quirks and
issues with the way APIs are designed.

