WEBVTT

1
00:00:00.000 --> 00:00:04.751
[MUSIC]

2
00:00:04.751 --> 00:00:07.242
&gt;&gt; Kyle Simpson: Now this next
exercise that I'm gonna give you,

3
00:00:07.242 --> 00:00:09.780
rather than having you type some stuff.

4
00:00:09.780 --> 00:00:12.980
I want you to go ahead and

5
00:00:12.980 --> 00:00:18.748
[COUGH] rather than copying 9.html over.

6
00:00:18.748 --> 00:00:26.410
[COUGH] I've already provided
you in your directory a 10.html.

7
00:00:26.410 --> 00:00:29.956
So I want you to open up 10.html.

8
00:00:29.956 --> 00:00:31.031
&gt;&gt; Speaker 2: Kyle.

9
00:00:31.031 --> 00:00:32.412
&gt;&gt; Kyle Simpson: Yes?
&gt;&gt; Speaker 2: There is a question from

10
00:00:32.412 --> 00:00:36.050
David W., how well does this scale with
hundreds or thousands of concurrent users.

11
00:00:39.180 --> 00:00:42.780
&gt;&gt; Kyle Simpson: Web sockets are designed
to scale fantastically well and

12
00:00:42.780 --> 00:00:44.460
so is node.

13
00:00:44.460 --> 00:00:49.290
But you do not scale them in quite the
same way as you scale normal concurrency

14
00:00:49.290 --> 00:00:53.090
server with concurrent
AJAX types of requests.

15
00:00:54.720 --> 00:00:57.450
I'm not really a front
end ops sort of guy.

16
00:00:57.450 --> 00:01:00.630
So I can't really speak to
the exact server configurations.

17
00:01:00.630 --> 00:01:06.430
But I know that essentially you set up
a pool of web socket endpoint servers.

18
00:01:06.430 --> 00:01:10.510
Kind of like a load balancing farm,
but specifically tuned for

19
00:01:10.510 --> 00:01:12.260
web sockets connections.

20
00:01:12.260 --> 00:01:18.270
And so you can get somewhere in
the neighborhood of 10 to 15,000

21
00:01:18.270 --> 00:01:22.840
concurrent web socket connections on the
same box if you have a pretty meaty box.

22
00:01:22.840 --> 00:01:28.110
So that means if you need to have 100,000
concurrent web socket connections,

23
00:01:28.110 --> 00:01:30.570
you're gonna need 10 servers in that farm.

24
00:01:30.570 --> 00:01:35.000
And you have a little round robin thing
that farms them out to these web sockets.

25
00:01:35.000 --> 00:01:37.580
But you establish,
when I'm a user and I connect,

26
00:01:37.580 --> 00:01:42.500
I establish a persistent connection to
one of those web sockets endpoints.

27
00:01:42.500 --> 00:01:46.712
And then those things usually then turn
around to make an internal connection back

28
00:01:46.712 --> 00:01:49.459
to your application server
either with web sockets or

29
00:01:49.459 --> 00:01:51.552
some other communication technology.

30
00:01:51.552 --> 00:01:55.873
But that's how, roughly speaking,
I understand that we did it when we did it

31
00:01:55.873 --> 00:01:58.950
at scale at the game
company that I worked at.

32
00:01:58.950 --> 00:02:02.640
We had about 60 million people
on the game at any given time.

33
00:02:02.640 --> 00:02:08.697
So they had a server farm of 200 something
servers running or something like that.

34
00:02:08.697 --> 00:02:18.095
[COUGH]
&gt;&gt; Kyle Simpson: [COUGH] Excuse me.

35
00:02:19.560 --> 00:02:20.981
All right, so 10.html,

36
00:02:20.981 --> 00:02:24.490
you should notice that it's gonna
have a couple of extra things in it.

37
00:02:24.490 --> 00:02:26.760
I didn't want you to have to
write some of this code, but

38
00:02:26.760 --> 00:02:31.720
there is here in line 47 some
code that you are gonna write.

39
00:02:31.720 --> 00:02:36.480
But then let's not deal with 10.html for
a moment, let's take 9.server.

40
00:02:36.480 --> 00:02:39.096
Go ahead and save that as 10.server.

41
00:02:42.169 --> 00:02:44.925
&gt;&gt; Kyle Simpson: Cuz I do want
you to write this part as well.

42
00:02:44.925 --> 00:02:48.138
[COUGH] And essentially what
we're going to do, this is gonna

43
00:02:48.138 --> 00:02:52.490
up the creepiness factor of what we've
been building which should be kind of fun.

44
00:02:52.490 --> 00:02:55.825
What we're gonna build here for
looking at the html file,

45
00:02:55.825 --> 00:03:01.050
you'll notice I have this little div
element here that I call spy_marker.

46
00:03:01.050 --> 00:03:06.367
And it's a little four by four
pixel element that's colored blue.

47
00:03:06.367 --> 00:03:09.759
And it's just a div in our page,
it's absolutely positioned.

48
00:03:09.759 --> 00:03:13.460
So what we've done is we've set
ourselves up with the mousemove command.

49
00:03:15.290 --> 00:03:20.130
And we're listening,
by the way we're gonna pull in jQuery,

50
00:03:20.130 --> 00:03:22.540
so I'm going to show you how to
load jQuery in just a moment.

51
00:03:22.540 --> 00:03:26.490
You'll add jQuery by adding in that script
tag, but that's already there for you.

52
00:03:26.490 --> 00:03:30.394
I'll show you how we enable that on
the server side in just a moment.

53
00:03:30.394 --> 00:03:35.772
[COUGH] But what we're going to do here
is [COUGH] every time the mouse moves,

54
00:03:35.772 --> 00:03:37.750
I want for you to wire up.

55
00:03:37.750 --> 00:03:42.556
Write a line or two of code here for
you to send the XY coordinate,

56
00:03:42.556 --> 00:03:46.208
the evt.pageX and
the evt.pageY coordinate.

57
00:03:46.208 --> 00:03:49.080
I want you to send those
coordinates off to the server.

58
00:03:50.620 --> 00:03:53.520
And then what I want you
to do on the server, so

59
00:03:53.520 --> 00:03:57.430
you can call that event name whatever
you want, you might call it spy.

60
00:03:57.430 --> 00:04:00.380
But then I want you to come
over here to the server and

61
00:04:00.380 --> 00:04:01.960
I want you to listen for that event.

62
00:04:01.960 --> 00:04:06.100
So, for instance, if you had called
it spy, I want you to listen for

63
00:04:06.100 --> 00:04:07.014
the spy event.

64
00:04:07.014 --> 00:04:11.180
[COUGH]
And

65
00:04:11.180 --> 00:04:13.860
you might get an x and
a y coordinate, or however you do it.

66
00:04:14.960 --> 00:04:18.762
And I want you to broadcast that back
out to the other connected users.

67
00:04:35.944 --> 00:04:39.930
&gt;&gt; Kyle Simpson: The other thing we're
gonna do is we need to set ourselves up

68
00:04:39.930 --> 00:04:43.437
an exception to our routing
roles that allows us to do

69
00:04:43.437 --> 00:04:48.105
static file serving of these helper
utilities like the jQuery.js.

70
00:04:48.105 --> 00:04:52.880
So I'm gonna say else if [COUGH]

71
00:04:52.880 --> 00:04:58.238
reg.url === /jquery.js.

72
00:04:58.238 --> 00:05:02.665
Then I want you to go ahead and

73
00:05:02.665 --> 00:05:06.176
do a static file surf.

74
00:05:15.219 --> 00:05:21.168
&gt;&gt; Kyle Simpson: [COUGH]
&gt;&gt; Kyle Simpson: So

75
00:05:21.168 --> 00:05:26.714
what you need to do is write this line
of code that allows you to listen,

76
00:05:26.714 --> 00:05:32.372
all right, allows you to emit the x and
y coordinates off to the server.

77
00:05:34.517 --> 00:05:37.045
&gt;&gt; Kyle Simpson: And I'll give you two or
three minutes to do that.

78
00:05:42.270 --> 00:05:46.510
&gt;&gt; Kyle Simpson: All right,
if we are to attempt to write line 47.

79
00:05:46.510 --> 00:05:49.966
You should have come up with
something roughly similar to line 47.

80
00:05:49.966 --> 00:05:57.254
I'm gonna call socket.emit, my name of
my event which I decided to call spy.

81
00:05:57.254 --> 00:06:01.430
I'm gonna pass along the page X and the
page Y coordinates of the mouse cursor.

82
00:06:02.900 --> 00:06:05.766
That should already start
to feel little bit creepy.

83
00:06:05.766 --> 00:06:11.275
[LAUGH] But now if we go to our command
line we stop the 9.server instance and

84
00:06:11.275 --> 00:06:13.994
we start up 10.server instance.

85
00:06:16.316 --> 00:06:20.055
&gt;&gt; Kyle Simpson: [COUGH] And
then we load up 10 in our browsers.

86
00:06:23.810 --> 00:06:29.656
&gt;&gt; Kyle Simpson: Now all of a sudden as I,
uh-oh, something must not be working.

87
00:06:36.090 --> 00:06:38.139
&gt;&gt; Kyle Simpson: We double check,
what did I do wrong?

88
00:06:40.822 --> 00:06:49.857
&gt;&gt; Kyle Simpson: [COUGH]
&gt;&gt; Kyle Simpson: Did

89
00:06:49.857 --> 00:06:51.230
it not load correctly?

90
00:07:04.008 --> 00:07:05.125
&gt;&gt; Kyle Simpson: No, it loaded correctly.

91
00:07:05.125 --> 00:07:11.084
&gt;&gt; Speaker 3: When jQuery was loading.

92
00:07:11.084 --> 00:07:15.068
&gt;&gt; [INAUDIBLE]
&gt;&gt; Kyle Simpson: I thought so.

93
00:07:15.068 --> 00:07:21.827
&gt;&gt; Speaker 3: Is it you have
a overwriting what you expect to.

94
00:07:44.867 --> 00:07:47.440
&gt;&gt; Kyle Simpson: I'm not listening for
the spy event yet, that's the problem.

95
00:07:47.440 --> 00:07:50.320
I forgot that we had to do that,
sorry about that.

96
00:07:50.320 --> 00:07:54.250
We have to listen for the spy event
from the server obviously and

97
00:07:54.250 --> 00:07:55.330
call our spy function.

98
00:07:57.680 --> 00:08:02.893
So now when I refresh the page,
you should start to see.

99
00:08:02.893 --> 00:08:05.020
Come on, what's it not doing right?

100
00:08:05.020 --> 00:08:08.803
The beauties of live coding, right?

101
00:08:31.522 --> 00:08:33.680
&gt;&gt; Kyle Simpson: I know what's wrong,
okay.

102
00:08:33.680 --> 00:08:35.948
We gotta come back to our server,

103
00:08:35.948 --> 00:08:40.486
because my HTML was assuming
an object with both properties in it.

104
00:08:40.486 --> 00:08:42.900
And I was trying to send
them as two separate ones.

105
00:08:42.900 --> 00:08:50.335
So it's easy to fix, we just send it
along as x and y as y, sorry about that.

106
00:08:50.335 --> 00:08:54.086
[COUGH] So if we stop our server and
restart it,

107
00:08:54.086 --> 00:08:56.967
hopefully that's the final bug.

108
00:08:59.602 --> 00:09:03.278
&gt;&gt; Kyle Simpson: And now as you can see,
as I move my mouse cursor on the right,

109
00:09:03.278 --> 00:09:07.190
I'm spying on the person's
mouse position in the left.

110
00:09:07.190 --> 00:09:10.542
And the same is true over here as
I move the mouse cursor around,

111
00:09:10.542 --> 00:09:12.890
you can see where it
moves the mouse cursor.

