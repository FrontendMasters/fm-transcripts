WEBVTT

1
00:00:00.000 --> 00:00:04.430
[MUSIC]

2
00:00:04.430 --> 00:00:08.074
&gt;&gt; Kyle Simpson: We've thoroughly
exhausted our discussion of node stuff and

3
00:00:08.074 --> 00:00:12.110
now we're ready to move on to
our discussion of web sockets.

4
00:00:12.110 --> 00:00:14.870
And this isn't going to be
much discussion at all,

5
00:00:14.870 --> 00:00:16.400
we're going to get right
back into the COBE.

6
00:00:16.400 --> 00:00:19.720
I just want to remind you we're
gonna use the socket.io library, but

7
00:00:19.720 --> 00:00:20.920
there's many of them out there.

8
00:00:22.100 --> 00:00:27.310
What a web socket connection amounts
to is that there's an initial

9
00:00:27.310 --> 00:00:31.280
http request made from
the browser back to the server.

10
00:00:31.280 --> 00:00:34.900
And in that request it has
a header in it that says,

11
00:00:34.900 --> 00:00:38.150
hey I would like to do web sockets.

12
00:00:38.150 --> 00:00:42.380
Server are you capable of
speaking the web socket protocol?

13
00:00:42.380 --> 00:00:46.290
Now the server may or may not be capable
of doing so but if he is capable of

14
00:00:46.290 --> 00:00:50.850
speaking that protocol, the response that
he gives back will be an upgrade response.

15
00:00:50.850 --> 00:00:55.160
That says, yes let's go ahead and
upgrade ourselves from this normal

16
00:00:55.160 --> 00:01:00.060
boring http connection to
a persistent web socket connection.

17
00:01:00.060 --> 00:01:02.220
So they make a handshake together and

18
00:01:02.220 --> 00:01:07.800
if you're using you most certainly
wanna be using SSL on your web sockets.

19
00:01:07.800 --> 00:01:11.490
Even with all of what we know
about open SSL issues lately.

20
00:01:11.490 --> 00:01:14.080
You want to be using SSL
on your web sockets.

21
00:01:14.080 --> 00:01:18.710
And so they're going to do
a handshake that's secured and

22
00:01:18.710 --> 00:01:21.890
establish a secure web socket connection.

23
00:01:21.890 --> 00:01:25.030
So there's an initially CDB
request that then gets upgraded

24
00:01:25.030 --> 00:01:28.430
to a web socket request and they do
an initial handshake back and forth.

25
00:01:28.430 --> 00:01:31.940
To make sure both of them have agreed on
what protocol they're going to speak and

26
00:01:31.940 --> 00:01:33.360
then everything's good.

27
00:01:33.360 --> 00:01:36.980
So all of that sounds like a fair
amount of complicated work for us to

28
00:01:36.980 --> 00:01:40.954
handle the good news is these frameworks
like socket.io do it all for us.

29
00:01:40.954 --> 00:01:43.400
In fact,
not only does the framework do it for

30
00:01:43.400 --> 00:01:47.950
us the built in web socket object in
the browser handles all that negotiation.

31
00:01:47.950 --> 00:01:52.130
Socket.io is not just web sockets it's

32
00:01:52.130 --> 00:01:56.220
actually an extension on top
of the web socket protocol.

33
00:01:56.220 --> 00:02:00.770
To add even additional features that
web sockets themselves don't have

34
00:02:00.770 --> 00:02:02.410
things like handshakes.

35
00:02:02.410 --> 00:02:05.590
If you send off a message to
the server and you wanna know

36
00:02:05.590 --> 00:02:09.910
that the server sends you sort of an ACK
back to let you know that it got it back.

37
00:02:09.910 --> 00:02:12.500
That's not built into the regular
web socket protocol but

38
00:02:12.500 --> 00:02:16.220
it is built into socket.io and
so they've added some additional

39
00:02:16.220 --> 00:02:20.610
things on top of the protocol,
some additional capabilities.

40
00:02:20.610 --> 00:02:23.010
That's another benefit of
using these frameworks but

41
00:02:23.010 --> 00:02:27.680
of course you don't have to,
so now we're going to get our

42
00:02:27.680 --> 00:02:32.720
hands dirty with writing our own
web socket code using socket.io.

43
00:02:32.720 --> 00:02:37.961
Now at this point I would
normally tell you to do npm

44
00:02:37.961 --> 00:02:42.600
install socket.io.

45
00:02:42.600 --> 00:02:46.690
Now the problem is don't do that yet,
because the problem is just a few days ago

46
00:02:46.690 --> 00:02:49.245
or within the last couple weeks or
something.

47
00:02:49.245 --> 00:02:54.042
Socket.io released an update
where they moved from 0.9 to

48
00:02:54.042 --> 00:02:56.640
1.0 pre-beta or something.

49
00:02:56.640 --> 00:03:01.460
There's been like for almost a year now,
a rewrite in progress but

50
00:03:01.460 --> 00:03:07.190
the official deployed version it
stayed on the zero point nine branch.

51
00:03:07.190 --> 00:03:12.790
All of my example code is
predicated on the 0.9.116 branch.

52
00:03:12.790 --> 00:03:15.270
And, so
if you just do a install socket.io,

53
00:03:15.270 --> 00:03:20.020
you're going to get an incompatible API,
incompatible version of socket.io.

54
00:03:20.020 --> 00:03:21.120
So, now what we want to do is,

55
00:03:21.120 --> 00:03:26.470
we want to specify specifically which
version of socket.io we want to install.

56
00:03:26.470 --> 00:03:30.890
So those of you that are home for the
purposes of the code that I've provided

57
00:03:30.890 --> 00:03:35.260
you're gonna want to get
the 0.9.16 version of socket.io,

58
00:03:35.260 --> 00:03:36.350
those of you here in person.

59
00:03:36.350 --> 00:03:41.065
You already have that version installed
it probably should just work for

60
00:03:41.065 --> 00:03:46.165
you but if not you need to do npm install
package name, the little act symbol and

61
00:03:46.165 --> 00:03:50.156
then the version number
&gt;&gt; Kyle Simpson: All right,

62
00:03:50.156 --> 00:03:53.890
[COUGH] let's talk about what
it takes inside of our server.

63
00:03:53.890 --> 00:03:59.228
So let's go ahead and do a Save as on
our 6.server and change it to 7.server.

64
00:03:59.228 --> 00:04:06.340
And then on our 6.html, let's do another
save as and turn that to 7.html.

65
00:04:06.340 --> 00:04:11.860
Make sure you update the 6 and
from the both of the 6 is to 7.

66
00:04:11.860 --> 00:04:14.458
So don't get yourself confused.

67
00:04:14.458 --> 00:04:21.180
Now the 7.server.js we need to
load in our socket.io library.

68
00:04:21.180 --> 00:04:24.980
So we're going to come down to the bottom
of our code and we're going to say,

69
00:04:24.980 --> 00:04:30.870
var socket=, sorry.

70
00:04:30.870 --> 00:04:39.500
IO is what I call it, io equals require
socket.io exactly as you would think.

71
00:04:41.920 --> 00:04:44.350
Now we've required in the library but

72
00:04:44.350 --> 00:04:48.930
we need to tell socket.io to be
listening for incoming requests.

73
00:04:48.930 --> 00:04:52.140
And here's another nicety of
the way this library works because

74
00:04:52.140 --> 00:04:54.620
there's a fair amount
of complexity route in

75
00:04:54.620 --> 00:04:57.360
terms of what the server
needs to do to handle this.

76
00:04:57.360 --> 00:05:00.560
And this server frameworks
gonna do it entirely for us.

77
00:05:00.560 --> 00:05:06.100
So the way we do it is
we tell it to io only

78
00:05:06.100 --> 00:05:11.300
make sure you get this exactly right

79
00:05:11.300 --> 00:05:16.866
[SOUND] where going to say io.listen.

80
00:05:16.866 --> 00:05:22.029
And we want to give it
our http server instance.

81
00:05:22.029 --> 00:05:25.620
So that http_service what I called it.

82
00:05:26.820 --> 00:05:32.340
We want to pass that in,
now what that is basically saying is

83
00:05:32.340 --> 00:05:37.790
I want you to hijack the existing http
server that we've already set up.

84
00:05:37.790 --> 00:05:41.930
And I want you to tell it to listen
also for socket.io connections.

85
00:05:41.930 --> 00:05:46.790
So remember I said socket.io's
a website connection starts

86
00:05:46.790 --> 00:05:50.140
out as a normal http connection
that upgrades itself.

87
00:05:50.140 --> 00:05:54.355
So we always need an http connection so
that we can then upgrade ourselves to

88
00:05:54.355 --> 00:05:56.410
socket.io and
that's the way it works here.

89
00:05:56.410 --> 00:06:00.090
We already have an http connection,
a server running and socket.io.

90
00:06:00.090 --> 00:06:03.590
The library basically comes along and
hijacks it for us.

91
00:06:03.590 --> 00:06:07.420
And it automatically listens for
all of the incoming requests and

92
00:06:07.420 --> 00:06:10.890
it automatically handles any
Web Socket requests for us.

93
00:06:10.890 --> 00:06:13.400
S we're not going to
have to do a single thing

94
00:06:13.400 --> 00:06:16.700
up in our routing logic to
handle anything socket related.

95
00:06:16.700 --> 00:06:19.640
We don't need to touch any
of this code whatsoever.

96
00:06:19.640 --> 00:06:22.740
We just add the io.listen
down here at the bottom,

97
00:06:22.740 --> 00:06:25.840
point it at our http server and
it will start listening.

98
00:06:28.860 --> 00:06:30.230
The last thing that we're gonna do so

99
00:06:30.230 --> 00:06:34.170
save out that file, the last thing
that we're gonna do is verify

100
00:06:34.170 --> 00:06:38.280
that the socket.io library is able
to be loaded into a web page.

101
00:06:38.280 --> 00:06:39.630
So come back to your 7.html, and

102
00:06:39.630 --> 00:06:44.640
at the bottom right before the body,
I want you to add a script tag.

103
00:06:44.640 --> 00:06:49.646
That tries to load /socket.io.,

104
00:06:49.646 --> 00:06:52.557
/socket.io,js.

105
00:06:52.557 --> 00:06:57.150
Now if you're paying close attention
you'll know we don't have a route

106
00:06:57.150 --> 00:06:57.752
set up for

107
00:06:57.752 --> 00:07:03.570
static file serving in fact we don't even
see a socket.io client library anywhere.

108
00:07:03.570 --> 00:07:04.950
How is that going to work?

109
00:07:04.950 --> 00:07:10.020
Well this is the exact same thing
that socket.io server side library is

110
00:07:10.020 --> 00:07:14.430
going to see the requests for that file in
a will automatically handle that for us.

111
00:07:14.430 --> 00:07:17.380
So we don't need to worry about it
all it automatically creates and

112
00:07:17.380 --> 00:07:19.410
sends out the client file for us.

113
00:07:21.240 --> 00:07:25.250
So last thing that we're gonna do in this
html just a verify that we were in fact

114
00:07:25.250 --> 00:07:29.870
able to load up the library is I
just want you to do console.log.

115
00:07:29.870 --> 00:07:34.551
And log out the io object which is
the global that you get from socket.io.

116
00:07:43.333 --> 00:07:44.028
&gt;&gt; Kyle Simpson: Everybody with me?

117
00:07:52.187 --> 00:07:54.315
&gt;&gt; Kyle Simpson: All right,
let's come back to our command line,

118
00:07:54.315 --> 00:07:55.740
let's start up our node server.

119
00:07:55.740 --> 00:08:00.200
Now, right off the bat you're gonna
see something different from.

120
00:08:00.200 --> 00:08:03.370
There is no doubt, but
you probably haven't seen before and

121
00:08:03.370 --> 00:08:07.220
that's going to see an info statement
says socket.io was started.

122
00:08:07.220 --> 00:08:11.180
If you don't see that message something's
wrong with your installation so

123
00:08:11.180 --> 00:08:14.080
way that me if you're not seeing
that message from the command line.

124
00:08:16.520 --> 00:08:24.147
Did it give you an error to just
stay blank, that's not good.

125
00:08:35.922 --> 00:08:38.813
&gt;&gt; Kyle Simpson: Put the code back up for
just a moment if you want to check and

126
00:08:38.813 --> 00:08:40.411
double check your server code.

127
00:08:48.497 --> 00:08:49.218
&gt;&gt; Kyle Simpson: Is it working?

128
00:08:49.218 --> 00:08:52.350
Okay, everybody good?

129
00:08:52.350 --> 00:08:55.440
All right, we've got that code running,
let's open up our browser.

130
00:08:55.440 --> 00:08:58.996
Now remember,
I need to change the URL to /7 now, so

131
00:08:58.996 --> 00:09:03.275
that we're loading up the new file,
so I'm gonna load up /7.

132
00:09:03.275 --> 00:09:09.306
Not only do I notice that I've loaded
7.html but here in my web console,

133
00:09:09.306 --> 00:09:13.420
I can see that it printed
out a socket.io object.

134
00:09:13.420 --> 00:09:17.894
So, I verified that it, in fact, was able
to load the client library from the server

135
00:09:17.894 --> 00:09:21.439
into my web page, did everybody
get something roughly like that?

