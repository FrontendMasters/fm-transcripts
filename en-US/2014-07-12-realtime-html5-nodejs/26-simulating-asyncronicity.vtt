WEBVTT

1
00:00:00.000 --> 00:00:04.613
[MUSIC]

2
00:00:04.613 --> 00:00:08.278
&gt;&gt; Kyle: By a show of hands, how many of
you feel like you've written node code

3
00:00:08.278 --> 00:00:12.556
now?
&gt;&gt; Kyle: If anybody doesn't raise their

4
00:00:12.556 --> 00:00:13.990
hand, I feel like I'm failing.

5
00:00:13.990 --> 00:00:14.899
Okay, yeah.

6
00:00:14.899 --> 00:00:15.960
Well, there's more to go.

7
00:00:15.960 --> 00:00:18.320
We're not even halfway through.

8
00:00:18.320 --> 00:00:24.400
We're just about to start five and the
plan calls for us to go through eleven.

9
00:00:24.400 --> 00:00:25.380
So there's more to go.

10
00:00:25.380 --> 00:00:28.140
There's plenty more fun stuff for
us to learn about.

11
00:00:28.140 --> 00:00:35.730
So speaking of that let's take our
4.Serve.JS and save as to5.server.Js.

12
00:00:40.610 --> 00:00:47.640
All right so what I want to do is I want
to rather than show you how to do this.

13
00:00:47.640 --> 00:00:51.120
I want to tell you what I want and
have you attempt it.

14
00:00:51.120 --> 00:00:55.320
And then again I'll kind of talk
through how I would approach it.

15
00:00:55.320 --> 00:00:59.250
So the first thing that I want you guys to
do and I'll give you maybe a minute and

16
00:00:59.250 --> 00:01:00.372
a half to do this.

17
00:01:00.372 --> 00:01:03.900
This is not hard, but
I want you to set up a couple of timeouts.

18
00:01:03.900 --> 00:01:06.370
You'll use the callback methodology.

19
00:01:06.370 --> 00:01:08.990
We're going to simulate
a little bit of asynchronicity.

20
00:01:08.990 --> 00:01:14.422
And what I want you to do is in the first
time out, you can make these take 500

21
00:01:14.422 --> 00:01:19.535
milliseconds apiece or a second apiece,
however long you want to do it.

22
00:01:19.535 --> 00:01:24.437
But in the first timeout after
the 500 milliseconds or 1,000 passes,

23
00:01:24.437 --> 00:01:28.830
I want you to generate a random number and
store that off in a variable.

24
00:01:29.970 --> 00:01:35.804
And then I want you to wait another 500 or
1,000 milliseconds and I want you to print

25
00:01:35.804 --> 00:01:41.202
a string, I mean, put together a string,
the Hello World plus the random number.

26
00:01:41.202 --> 00:01:45.792
And then in the third delay after
another 500 or 1,000 milliseconds,

27
00:01:45.792 --> 00:01:49.230
I want you to write that
out to the response stream.

28
00:01:49.230 --> 00:01:52.154
So it's a three step process.

29
00:01:52.154 --> 00:01:56.722
Wait and then generate the random number,
wait and then add it to the string,

30
00:01:56.722 --> 00:01:59.680
wait and
then send that out to the browser.

31
00:01:59.680 --> 00:02:01.060
Okay?

32
00:02:01.060 --> 00:02:04.480
And so, you could start by doing
that with a couple of set timeouts.

33
00:02:05.730 --> 00:02:09.470
But I will let you try your hand

34
00:02:12.330 --> 00:02:16.290
at it, and you'll do that right there,
basically, on line 5.

35
00:02:16.290 --> 00:02:19.784
Then turn line five into
[COUGH] some code to do that.

36
00:03:24.391 --> 00:03:25.120
&gt;&gt; Kyle: All right.

37
00:03:25.120 --> 00:03:29.859
So, you should be at least
partially along in this what we

38
00:03:29.859 --> 00:03:34.797
would wanna do is first set up
a setTimeout with the function

39
00:03:34.797 --> 00:03:40.059
that's gonna run after let's
say 500 milliseconds or so.

40
00:03:40.059 --> 00:03:45.360
And this setTimeout inside of that,
we want to generate a random number.

41
00:03:45.360 --> 00:03:48.971
So I'm gonna say,

42
00:03:48.971 --> 00:03:53.269
num = Math.random.

43
00:03:53.269 --> 00:04:01.520
And then I want to wait another
&gt;&gt; Kyle: Set of time.

44
00:04:01.520 --> 00:04:06.517
Let's say 500 milliseconds.
&gt;&gt; Kyle: Let me verify just

45
00:04:06.517 --> 00:04:08.430
make sure whether I did two or three.

46
00:04:08.430 --> 00:04:12.336
I can't remember if I said two or
three in the other one.

47
00:04:21.655 --> 00:04:23.670
&gt;&gt; Kyle: I know what it was, okay.

48
00:04:23.670 --> 00:04:30.547
So [COUGH]
&gt;&gt; Kyle: This

49
00:04:30.547 --> 00:04:39.866
is where we're going to do our,
&gt;&gt; Kyle: Res.end.Hello World and

50
00:04:39.866 --> 00:04:45.433
we're going to use the number that
we generated in our previous step.

51
00:04:45.433 --> 00:04:50.560
And I can change those back to 1000.

52
00:04:50.560 --> 00:04:53.280
So I misstated earlier when
I said doing three delays.

53
00:04:53.280 --> 00:04:55.500
In this case we only need
to do the two delays.

54
00:04:55.500 --> 00:04:57.770
The first delay to generate
the random number.

55
00:04:57.770 --> 00:04:59.390
Second delay to send out the response.

56
00:04:59.390 --> 00:05:04.635
Did everybody gets something
roughly approximate to that?

57
00:05:07.095 --> 00:05:09.095
Seeing several nodding heads, okay.

58
00:05:09.095 --> 00:05:10.545
Wave wildly at me.

59
00:05:10.545 --> 00:05:13.055
If you feel like we're getting off
track from what you've been doing.

