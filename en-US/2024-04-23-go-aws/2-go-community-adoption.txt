[00:00:00]
>> There may be a few recognizable faces here, but I wanna really double down from a perspective of recognizing what's going down in the environment in Tech, Twitter or whatever kind of influence scope you wanna discuss. Now is a really good time to learn Go. And there's some examples here.

[00:00:21]
So in the top left, there's a small content creator by the name of the Primogen, who used Rust at Netflix and just daily exclusive for two years, heavy into Rust, was known for being a Rust developer. And he is coming around to using Golang in 2024. And in this video that he has, it's a really great video.

[00:00:45]
He describes, yes, you can do very powerful things with Rust in 2024. Yes, it gives you more granular control. But that thinking is you're spending more time on these optimizations, and these things that can get you that extra juice from your application code. Whereas Go, if you don't need that extra squeeze, you can be as efficient and even faster with Go, question?

[00:01:13]

>> I just feel like I need to comment that Frontend Masters has been all in on Go since 2017, and we are very happy. Everything is scaling beautifully, and we basically had to rebuild a lot of what Netflix says.
>> Yep, like we were talking about this, I mean, Go, you rarely see cases where there's a bottleneck in how we're building stuff.

[00:01:35]
And look at the traffic, look at what Frontend Masters, as a best example, the throughput for data, all these different sign-ups, everything, and it scales, because Go just offers that flexibility, right? And you don't need a giant team. And I think that's really a beautiful point. You don't need a giant team to write really elegant, sufficient code.

[00:01:56]
Go gives you the tools to do it, right? And I think that's why it's picking up so much steam, because now people are like, wait, why? I don't actually have to spend a full day on this type safety mechanism, these base abstraction layers, Go just kinda does it for me.

[00:02:09]
And so that's why I think Prime and a lot others are adopting Go. And then we get to more interesting examples. The one in the middle, the one that says, I'M A GO SIMP, this is from a great creator by the name of Web Dev Cody. Web Dev Cody, this person only created videos using Next, using top of the line, front end JavaScript types of stuff.

[00:02:38]
And he made a video of why he's learning Go. Again, great video. But in that video, he basically talks about, he's exhausted from the types of ecosystem. He's exhausted from his current day-to-day, his current tooling, and his recognizing GO was just like this breath of fresh air. This is just a way to explore new features, new ways to write code.

[00:03:01]
And if someone who's coming from this heavy duty Web Dev background from a professional perspective and a content creating perspective, I can just showcase that Go is really picking up steam here. In this last slide, we have a creator by the name of Theo, who basically is the devoice of everything TypeScript, everything in Tech, React, all that.

[00:03:24]
He makes all these videos for them, right? And he made a video of, I'm Coming Around to Go. Now, this isn't a video where Theo is going to start making Go content, but fun fact, Theo actually started as an Elixir developer, than a Go developer, then TypeScript, weird character development.

[00:03:41]
But [LAUGH] he made this video where he's recognizing, yeah, I still have TypeScript, but it's hard to argue against Go at this point, right? The more you explore it, the more you check it out, you recognize that you can go very fast. The developer velocity is top notch when it comes to Go, and they agree that you can pick it up very, very quickly.

[00:04:04]
So those are the top row, and I made this by design, because the top row you can always make that argument like, they're doing it for views. They wanna get more views on their videos, and you're absolutely right, I don't want to abstract that. But if no one was interested in Go from a viewer perspective, these videos would not get views.

[00:04:24]
So there's this audience. There's these people who've heard it, wanna use it, and have this itch, and they're resonating with these videos. And I really wanna focus on this bottom row here. Not my update, you can ignore that one. I just put it there cuz I really like the thumbnail.

[00:04:42]
But the one to the left, why we switched from Svelte Kit to Golang plus HTMX. This is already built software. It already had users. This comes from a creator Anthony GG, right? This already was deployed, they were getting used to getting traffic using a very popular TypeScript library, Svelte, which is great.

[00:05:03]
But they made the decision to migrate away from that to use just core Golang and HTMX, right? And HTMX plays super well with Go. You have this complete control of your entire application, and it just has that versatility that if you wanna be like this back-end core developer, you don't need to learn a new JavaScript framework or even JavaScript to start with.

[00:05:25]
You can just build stuff, beautiful applications using HTMX and Golang, all right? And another very famous, well, I say very famous, one that interested me, was the one in the yellow. This was a content creator who built an entire system using Python, all right? Very popular language, I'm sure all of us have used it, heard of it, whatever.

[00:05:47]
And they were using Python for their pipelines, for ML pipelines, right? And they moved to Go, all right? They've used the Go routines, they've used the ability of Go. So all of this is to say, that if so many different individuals, engineers from different wakes of life, you have the front-ends, the Pythons, these Rust developers, whatever, are coming together at really the same time, this period of time in tech and saying, yeah, Go has something I think is very interesting.

[00:06:19]
I just think it emphasizes that right now is a really good time. So you have to pick it up, learn it, see any opportunities, and I just think it's gonna be growing more and more with all of this adoption, yes.
>> I was just gonna add, you talked about who made Go, two of those guys worked at Bell Labs-

[00:06:35]

>> Yeah.
>> Invented UNIX and Grep. It's very cool, very solid, computing until now.
>> Yeah, no, thank you for that. I should have added that. Those individuals aren't just known for working at Google or making Golang, they're some of the smartest individuals in computer science, in theory.

[00:07:01]
So, please search them up, check them out, cuz these are some heavyweights when it comes to programming, okay? Awesome, thanks for having that in.

