WEBVTT

1
00:00:00.204 --> 00:00:01.291
Let's move into ARIA.

2
00:00:01.291 --> 00:00:06.153
So I linked here to the official
ARIA documentation on MDN.

3
00:00:06.153 --> 00:00:09.181
So it stands for
Accessible Rich Internet Applications.

4
00:00:09.181 --> 00:00:13.090
Again, I think one thing,
I just love about accessibility and

5
00:00:13.090 --> 00:00:17.219
I always hesitate using this word,
but it feels easy in some ways,

6
00:00:17.219 --> 00:00:19.681
where you get to learn this cool stuff.

7
00:00:19.681 --> 00:00:23.246
And oftentimes,
it's just adding attributes to HTML.

8
00:00:23.246 --> 00:00:26.809
It just feels very doable to me,
like I feel like sometimes you learn

9
00:00:26.809 --> 00:00:29.387
a performance technique or
a caching strategy.

10
00:00:29.387 --> 00:00:31.444
And you get all excited, and
then you're like, okay, but

11
00:00:31.444 --> 00:00:33.062
how do I apply this to my application,
right?

12
00:00:33.062 --> 00:00:35.935
Like things get complicated very quickly.

13
00:00:35.935 --> 00:00:39.628
A lot of this stuff is really cool
because I mean really a lot of the time,

14
00:00:39.628 --> 00:00:41.289
it is just going into your HTML or

15
00:00:41.289 --> 00:00:45.248
going into your JSX or whatever, and
just adding some of these attributes.

16
00:00:45.248 --> 00:00:46.135
And then boom,

17
00:00:46.135 --> 00:00:50.237
you see this massive difference in
how people interact with your site.

18
00:00:50.237 --> 00:00:55.542
So this is the ARIA page, I would
recommend kind of getting started with.

19
00:00:55.542 --> 00:00:57.146
We've already talked about
some of these things, right?

20
00:00:57.146 --> 00:01:01.393
We've seen ARIA label, and we've seen
role which are both part of ARIA,

21
00:01:01.393 --> 00:01:03.115
but there's a lot more to it.

22
00:01:03.115 --> 00:01:05.072
So let's cover that a little bit.

23
00:01:05.072 --> 00:01:09.140
For those that like spec reading,
there's also the W3 spec with ARIA.

24
00:01:09.140 --> 00:01:13.344
So all of these things
are well-supported on browsers.

25
00:01:13.344 --> 00:01:16.361
All these things have official W3 support.

26
00:01:16.361 --> 00:01:20.267
You can kind of go through here and
see all these different properties we were

27
00:01:20.267 --> 00:01:23.941
just talking about has pop up or
hide something, keyboard shortcuts.

28
00:01:23.941 --> 00:01:28.165
Like we've seen label, we'll get into
a lot of these other ones pretty soon,

29
00:01:28.165 --> 00:01:30.728
expanded, all these
different great things.

30
00:01:30.728 --> 00:01:35.403
So the spec is pretty cool, although when
you click into them, it's very deep.

31
00:01:35.403 --> 00:01:39.043
So I know I don't often like mess
around with that too much, but

32
00:01:39.043 --> 00:01:40.563
it's really cool to see.

33
00:01:40.563 --> 00:01:43.392
So one thing I wanna talk about is labels.

34
00:01:43.392 --> 00:01:47.083
So we covered the label tag in HTML,
and it's great.

35
00:01:47.083 --> 00:01:49.131
But we also covered the shortcoming,

36
00:01:49.131 --> 00:01:52.012
which is that it only works
with labelable elements.

37
00:01:52.012 --> 00:01:55.318
And, so ARIA provides us with three
different tools that we can use,

38
00:01:55.318 --> 00:01:57.089
all the two of them do the same thing.

39
00:01:57.089 --> 00:02:01.306
For all this added context and this
ties in great with the question about,

40
00:02:01.306 --> 00:02:04.312
should you add labels to links and
things like that?

41
00:02:04.312 --> 00:02:08.460
So we have ARIA labeled by and
ARIA described by,

42
00:02:08.460 --> 00:02:13.124
ARIA label and
ARIA labeled by do the same exact thing.

43
00:02:13.124 --> 00:02:14.926
They add a label to something.

44
00:02:14.926 --> 00:02:17.754
The difference is that
the label is in line, right?

45
00:02:17.754 --> 00:02:22.749
So if I hop back over to the code
ARIA label works like this.

46
00:02:22.749 --> 00:02:24.391
So you find the element that you want.

47
00:02:24.391 --> 00:02:27.542
You give it an ARIA label
of anything that you want.

48
00:02:27.542 --> 00:02:31.767
The way that ARIA labelled by works,
it's kind of like label with its four, or

49
00:02:31.767 --> 00:02:33.185
it's implicit, right?

50
00:02:33.185 --> 00:02:38.061
Is that you could do like
a div with an ID of foo, and

51
00:02:38.061 --> 00:02:44.700
you could be like this GitHub page for
repository in the same thing.

52
00:02:44.700 --> 00:02:47.524
And then here,
you could do ARIA labelled by, and

53
00:02:47.524 --> 00:02:50.024
then you would just link to that ID,
so foo.

54
00:02:50.024 --> 00:02:53.867
So this is like very similar to, you can,
I mean it's just kind of handy if you have

55
00:02:53.867 --> 00:02:57.175
a big old description, you maybe
don't wanna put it in an attribute.

56
00:02:57.175 --> 00:02:58.122
So you put it here,

57
00:02:58.122 --> 00:03:02.337
although you'd probably also then wanna
do class equals visually hidden, right?

58
00:03:02.337 --> 00:03:04.105
If you're doing it here.

59
00:03:04.105 --> 00:03:07.985
Although, sometimes it works out really
nicely where you have a big paragraph

60
00:03:07.985 --> 00:03:09.408
about what the button does.

61
00:03:09.408 --> 00:03:12.099
And then, you have your button, and it's
just really nice to link the two of them

62
00:03:12.099 --> 00:03:13.820
together, but
you have a lot of flexibility here.

63
00:03:13.820 --> 00:03:18.670
So you can do an inline label, you can
do a separate label with labeled by.

64
00:03:18.670 --> 00:03:22.174
And then lastly,
you can do ARIA described by and

65
00:03:22.174 --> 00:03:25.949
this gets into some of
the more complex situations.

66
00:03:25.949 --> 00:03:28.031
So, I have a question that
I always get is like,

67
00:03:28.031 --> 00:03:30.749
what's the difference between
labeled by and described by?

68
00:03:30.749 --> 00:03:35.302
So the label is essential information
about the thing, like what is the button?

69
00:03:35.302 --> 00:03:36.444
What does it do?

70
00:03:36.444 --> 00:03:40.560
Description can provide extended
information that the user might need.

71
00:03:40.560 --> 00:03:42.804
So here's another example.

72
00:03:42.804 --> 00:03:45.458
We had that great question about
what if you have a button, and

73
00:03:45.458 --> 00:03:48.845
he buttons submits a form, but after it
submits the form, it does a redirect.

74
00:03:48.845 --> 00:03:52.515
So we talk quickly about roles,
which we'll get into next.

75
00:03:52.515 --> 00:03:55.890
The other thing that you could do is,
you could label the button submit form.

76
00:03:55.890 --> 00:03:59.312
And then, you could described by the
button, after this form submits you'll be

77
00:03:59.312 --> 00:04:02.200
redirected to the home page logged
in something like that, right?

78
00:04:02.200 --> 00:04:06.253
So even more ways that we can
communicate with a screen reader.

79
00:04:06.253 --> 00:04:08.872
Any questions about labels and
described by?

80
00:04:13.804 --> 00:04:14.416
Awesome.

81
00:04:14.416 --> 00:04:19.599
I will say for sure that it has been
my job before to go into existing

82
00:04:19.599 --> 00:04:24.312
code bases and just add a bunch
of labels and descriptions,

83
00:04:24.312 --> 00:04:29.323
which is like a pretty, nice and
easy kind of going thing to do.

84
00:04:29.323 --> 00:04:32.789
And then the feedback has been really
stellar from people that rely on it.

85
00:04:32.789 --> 00:04:36.388
So again, it's like small changes
that can have really big impact here,

86
00:04:36.388 --> 00:04:38.841
just kinda adding some labels and
descriptions.

87
00:04:38.841 --> 00:04:41.690
Another thing that we've done is
internationalized, the labels and

88
00:04:41.690 --> 00:04:42.711
descriptions, right?

89
00:04:42.711 --> 00:04:43.811
That's another cool thing.

90
00:04:43.811 --> 00:04:46.922
So if you use some kind of
internationalization library, instead of

91
00:04:46.922 --> 00:04:50.408
doing these inline labels, you can switch
to labelled by and described by and

92
00:04:50.408 --> 00:04:54.183
just wrap it in your internationalization
library get those strings translated.

93
00:04:54.183 --> 00:04:58.908
So that folks using screen readers who
speak different languages can get access

94
00:04:58.908 --> 00:05:00.679
to all that information too.

95
00:05:00.679 --> 00:05:05.811
&gt;&gt; Maybe this is a silly question,
but when you have more than

96
00:05:05.811 --> 00:05:11.807
a couple of labels or described by
they'll read from left to right?

97
00:05:11.807 --> 00:05:16.218
&gt;&gt; Yeah, I see when you have a couple of
labels are described by, as yeah, they'll

98
00:05:16.218 --> 00:05:20.454
read left to right or top to bottom like
first come, first serve order for sure.

99
00:05:20.454 --> 00:05:23.335
Awesome.
So labels are a big part of ARIA,

100
00:05:23.335 --> 00:05:27.777
another part of ARIA are roles,
states, and properties.

101
00:05:27.777 --> 00:05:30.161
And we've seen this a little bit already,
but

102
00:05:30.161 --> 00:05:33.352
it's actually got a wide range
of cool things that you can do.

103
00:05:33.352 --> 00:05:36.076
So we've seen this enroll equals button,
right?

104
00:05:36.076 --> 00:05:39.672
So if you have a button, and you tab to
add on a screen reader will say, hey,

105
00:05:39.672 --> 00:05:40.890
there's a button here.

106
00:05:40.890 --> 00:05:43.726
If you have a div with class A button,
it won't do that.

107
00:05:43.726 --> 00:05:48.270
But if you add role button, it's talking
directly to the screen reader and saying,

108
00:05:48.270 --> 00:05:50.901
hey, this is a button,
interact accordingly.

109
00:05:50.901 --> 00:05:52.381
Another one that we see,

110
00:05:52.381 --> 00:05:57.046
and again it's folks like in design
always they hate the way checkboxes look.

111
00:05:57.046 --> 00:06:00.722
This is like one of the most common
accessibility things that I see is

112
00:06:00.722 --> 00:06:04.659
that folks have completely rebuilt
their checkboxes out of like divs and

113
00:06:04.659 --> 00:06:06.809
spans with icons and things like that.

114
00:06:06.809 --> 00:06:08.864
Because they wanna slick animation, or

115
00:06:08.864 --> 00:06:11.591
they want just it to look
very different than it does.

116
00:06:11.591 --> 00:06:14.713
But often you lose a lot
of that accessibility that

117
00:06:14.713 --> 00:06:16.805
comes built in with check boxes.

118
00:06:16.805 --> 00:06:22.100
So I think a lot of the best checkbox
libraries built on top of real checkboxes,

119
00:06:22.100 --> 00:06:26.353
but if you're in a situation where
you do not do that adding role

120
00:06:26.353 --> 00:06:30.865
equals checkbox to it will do a lot for
users using screen readers.

121
00:06:30.865 --> 00:06:34.154
I have a full list of all the roles and
states and properties here.

122
00:06:34.154 --> 00:06:36.498
They're really cool.

123
00:06:36.498 --> 00:06:40.629
For the most part of the way I do this is
when I have something that I has a little

124
00:06:40.629 --> 00:06:43.662
bit of context to it,
I just come here to this MDN page and

125
00:06:43.662 --> 00:06:46.264
find the most similar thing like,
is it a tree?

126
00:06:46.264 --> 00:06:49.199
Like if you're doing code stuff
like on the left sidebar?

127
00:06:49.199 --> 00:06:51.090
Is it a form?

128
00:06:51.090 --> 00:06:52.757
Does it navigate you somewhere?

129
00:06:52.757 --> 00:06:57.573
Is it a menu, just kinda adding these
things or like a progress bar and a modal.

130
00:06:57.573 --> 00:07:01.913
Just adding these kinda roles where
appropriate will just help the screen

131
00:07:01.913 --> 00:07:03.037
readers out here.

132
00:07:03.037 --> 00:07:06.416
There's not a whole lot more to this,
you just add role equals and

133
00:07:06.416 --> 00:07:10.242
then any one of these are totally valid,
and support in a lot of browsers.

134
00:07:10.242 --> 00:07:12.671
One thing about roles is what they are,
right?

135
00:07:12.671 --> 00:07:15.092
And, so those are these up here,
like what structure or

136
00:07:15.092 --> 00:07:17.371
what composite roles they are,
like this is a grid.

137
00:07:17.371 --> 00:07:17.910
This is a list.

138
00:07:17.910 --> 00:07:19.910
This is a menu, is a link.

139
00:07:19.910 --> 00:07:23.291
Another thing that's really important
is that ARIA support state.

140
00:07:23.291 --> 00:07:27.598
So ARIA support state like,
checked, disabled, error message,

141
00:07:27.598 --> 00:07:30.328
expanded, hidden these kinds of things.

142
00:07:30.328 --> 00:07:31.894
These get a little bit more advanced,
right?

143
00:07:31.894 --> 00:07:36.328
Because these aren't simply applying
them to HTML, these are adding and

144
00:07:36.328 --> 00:07:39.126
removing them to HTML based on state,
right?

145
00:07:39.126 --> 00:07:43.583
So if you have a checkbox and when you
click it, it expands the tree of things or

146
00:07:43.583 --> 00:07:44.277
whatever.

147
00:07:44.277 --> 00:07:48.789
Then, the checkbox you would need to use
probably JavaScript to add an ARIA checked

148
00:07:48.789 --> 00:07:52.150
state on and off when it's checked or
when it's not checked.

149
00:07:53.400 --> 00:07:58.063
Similarly, expanded or removing expanded,
so they get a little bit more complicated,

150
00:07:58.063 --> 00:08:01.234
but I mean honestly,
it's just like setting attributes and

151
00:08:01.234 --> 00:08:04.232
removing attributes with
JavaScript is all it is there.

152
00:08:04.232 --> 00:08:08.746
Or if you use like react or something
like that in your render path if state is

153
00:08:08.746 --> 00:08:11.397
checked, you just render a different div,

154
00:08:11.397 --> 00:08:14.711
maybe with that ARIA elements,
something like that.

155
00:08:14.711 --> 00:08:18.092
So these can be really useful for a lot of
different things like just kind of helping

156
00:08:18.092 --> 00:08:20.305
users out with the current
state of the application.

157
00:08:22.625 --> 00:08:26.263
&gt;&gt; Sorry, two quick question with
one of the widgets I'm seeing.

158
00:08:26.263 --> 00:08:32.144
Without autocomplete, I've seen that some
browsers recommend to turn that off,

159
00:08:32.144 --> 00:08:34.168
or on given certain inputs.

160
00:08:34.168 --> 00:08:36.133
&gt;&gt; Yeah, that's really interesting.

161
00:08:36.133 --> 00:08:38.975
Autocomplete can be a little
bit tricky because right, so

162
00:08:38.975 --> 00:08:42.455
the question is about ARIA auto
autocomplete, and when to turn it off,

163
00:08:42.455 --> 00:08:44.555
when it turn on, these different things.

164
00:08:44.555 --> 00:08:48.245
It's really interesting, because
autocompletes work slightly differently.

165
00:08:48.245 --> 00:08:52.578
A lot of times the JavaScript, but the way
that I've seen it most often is like you

166
00:08:52.578 --> 00:08:56.622
said if suggestions are coming in from
the servers to have that on, right?

167
00:08:56.622 --> 00:08:59.826
So people know that they can down arrow
and up arrow through suggestions.

168
00:08:59.826 --> 00:09:01.658
And if the suggestions array is empty,

169
00:09:01.658 --> 00:09:07.652
then remove the attribute too
&gt;&gt; Thanks.

170
00:09:07.652 --> 00:09:08.677
&gt;&gt; Yeah, of course.

171
00:09:08.677 --> 00:09:10.594
What a great questions.

172
00:09:10.594 --> 00:09:13.387
Cool, so yeah, ARIA can do a lot of stuff.

173
00:09:13.387 --> 00:09:16.296
I think the roles and
the labels are very easy,

174
00:09:16.296 --> 00:09:19.141
they're just adding them to existing HTML.

175
00:09:19.141 --> 00:09:23.340
The states and the properties can get a
little bit trickier because they actually

176
00:09:23.340 --> 00:09:26.069
rely on your application
state to toggle on and off.

177
00:09:26.069 --> 00:09:27.894
So those ones can be a little harder.

178
00:09:27.894 --> 00:09:33.870
Again, I always wanna advocate for doing
some is so much better than doing none.

179
00:09:33.870 --> 00:09:38.121
So if you're at work, and you're trying
to get some budget for accessibility,

180
00:09:38.121 --> 00:09:41.936
like I think applying the 8020 kind
of rule to it where you're like,

181
00:09:41.936 --> 00:09:44.899
hey, let's get in there,
like label a bunch of stuff.

182
00:09:44.899 --> 00:09:47.686
Make sure we're using the right tags,
add some roles,

183
00:09:47.686 --> 00:09:51.146
like anything you can do is gonna
make the experience so much better.

184
00:09:51.146 --> 00:09:54.987
As with most things in development,
there's that long tail of stuff you could

185
00:09:54.987 --> 00:09:57.794
do to have it complete or
perfect or something like that.

186
00:09:57.794 --> 00:10:01.909
So, I mean, the more you can do,
the better obviously, but

187
00:10:01.909 --> 00:10:06.699
I really do think getting in here and
kind of doing the 80% is great.

188
00:10:06.699 --> 00:10:08.733
Another interesting thing with these,

189
00:10:08.733 --> 00:10:12.571
since they're data attributes is you
can use them in CSS selectors as well.

190
00:10:12.571 --> 00:10:15.171
So we can kind of see
here that you can do.

191
00:10:15.171 --> 00:10:18.990
I don't know if you've seen this before
you use an arrow pointing to the right,

192
00:10:18.990 --> 00:10:21.498
and then you click on the thing,
and it goes down, so

193
00:10:21.498 --> 00:10:23.215
it's kind of like a tree expanded.

194
00:10:23.215 --> 00:10:26.170
So you can even do that if you
apply the ARIA role to it,

195
00:10:26.170 --> 00:10:29.603
you can actually grab it with CSS and
kind of change the thing.

196
00:10:29.603 --> 00:10:34.559
So they're just data selectors, so
you can use them in CSS and vice versa.

197
00:10:34.559 --> 00:10:36.300
You can use the CSS to style them.

