WEBVTT

1
00:00:00.130 --> 00:00:03.590
So, labels are really interesting,
again easy but big impact.

2
00:00:04.780 --> 00:00:08.984
So, form fields are an area where I see
accessibility problems all the time,

3
00:00:08.984 --> 00:00:12.280
they can be really confusing for
screen reader users.

4
00:00:12.280 --> 00:00:15.200
And there's a lot of different ways
that we can fix this, which is cool.

5
00:00:15.200 --> 00:00:19.774
So, this is a pattern that I see very
often in HTML, I'll see a form and

6
00:00:19.774 --> 00:00:22.600
it got some inputs and a submit.

7
00:00:22.600 --> 00:00:25.193
But it is labeled by these
paragraph tags and so for

8
00:00:25.193 --> 00:00:28.897
sighted users this looks pretty good
to me I mean, I'm not a designer,

9
00:00:28.897 --> 00:00:32.972
it's not very beautiful but you know first
name and you put in your first name,

10
00:00:32.972 --> 00:00:37.780
last name, you put in your last name,
put in a password and then hit submit.

11
00:00:37.780 --> 00:00:42.071
So the problem again, if we go ahead and
we open up the screen reader again.

12
00:00:42.071 --> 00:00:47.609
All right, So
here's voiceover [INAUDIBLE] And

13
00:00:47.609 --> 00:00:51.986
we start tabbing through you can see what
it's reading is just edit text blank,

14
00:00:51.986 --> 00:00:54.350
edit text blank, secure edit text blank.

15
00:00:54.350 --> 00:00:58.271
So, I have no idea what it is that I'm
supposed to be putting into these form

16
00:00:58.271 --> 00:01:02.380
fields and it becomes very
difficult if not impossible to use.

17
00:01:02.380 --> 00:01:07.415
And so instead of using these paragraph
tags, HTML provides these label tags and

18
00:01:07.415 --> 00:01:10.390
these will fix the problem immediately for
us.

19
00:01:10.390 --> 00:01:14.175
So, you can give your inputs and
ID and then you can use label and

20
00:01:14.175 --> 00:01:17.190
has this four attribute and
you put in the same ID.

21
00:01:18.250 --> 00:01:22.370
And so this form will look Identical
first name, last name, password.

22
00:01:22.370 --> 00:01:26.981
But again, if we were to go ahead and
use the screen reader now,

23
00:01:26.981 --> 00:01:30.980
it will [LAUGH] I guess
it didn't get actually.

24
00:01:30.980 --> 00:01:35.184
If we go ahead and use the screen reader
now, It will actually go through and

25
00:01:35.184 --> 00:01:37.210
read out the main tab through here.

26
00:01:37.210 --> 00:01:40.752
So, this is the one that's visual only
edit text blank, edit text blank,

27
00:01:40.752 --> 00:01:43.640
edit text blank and
then we go to these ones with the labels.

28
00:01:43.640 --> 00:01:48.077
And now the labels are saying first name,
edit text, last name, edit text,

29
00:01:48.077 --> 00:01:50.380
password, secure edit text.

30
00:01:50.380 --> 00:01:54.209
And so you can see just moving from
those paragraph tabs to the labels fixes

31
00:01:54.209 --> 00:01:55.780
this immediately.

32
00:01:55.780 --> 00:02:00.592
Labels also are kinda cool because they
can be used explicitly, which is this for

33
00:02:00.592 --> 00:02:05.473
attribute or they can be used implicitly,
which is to say they can wrap an input and

34
00:02:05.473 --> 00:02:08.420
they'll automatically be assigned to it.

35
00:02:08.420 --> 00:02:12.602
So, you can have like an empty label
tag with any text you want in here and

36
00:02:12.602 --> 00:02:17.136
then the input inside, so these are
totally equivalent as far as how they'll

37
00:02:17.136 --> 00:02:21.278
read for screen readers, so
whatever your style preferences there.

38
00:02:21.278 --> 00:02:24.480
So, label tags perfect for
almost everything.

39
00:02:24.480 --> 00:02:29.176
There's one exception which is that,
there are only certain elements that can

40
00:02:29.176 --> 00:02:34.300
be labelled, so like buttons, inputs,
meters, outputs, all these things.

41
00:02:34.300 --> 00:02:39.264
If you ever run into a situation where you
need something labeled that is not one of

42
00:02:39.264 --> 00:02:43.680
these elements for any reason,
this is where Arial comes in.

43
00:02:43.680 --> 00:02:48.341
And so, I have a whole section on Arial
later but just for now, know that Aria has

44
00:02:48.341 --> 00:02:53.213
this Aria label property which can be
added to any element, div, span paragraph,

45
00:02:53.213 --> 00:02:56.970
images, anything and this will
give it a label div aria label and

46
00:02:56.970 --> 00:03:00.970
then the screen reader will read
out that label when that has focus.

47
00:03:02.170 --> 00:03:06.331
So for the most part, labels are perfect,
they do kinda everything you would need to

48
00:03:06.331 --> 00:03:09.040
in certain situations like complex apps or
whatever.

49
00:03:09.040 --> 00:03:10.364
If you end up with a div or

50
00:03:10.364 --> 00:03:15.330
h1 or you have something like that needs
a label, always use Arial label for that.

51
00:03:15.330 --> 00:03:19.030
Should a label exist but be visually
hidden if there's no reason to see it?

52
00:03:19.030 --> 00:03:20.140
Absolutely.

53
00:03:20.140 --> 00:03:23.521
And this comes up a lot with designs,
right?

54
00:03:23.521 --> 00:03:27.060
Like a form with placeholders in them and
no labels on them.

55
00:03:27.060 --> 00:03:29.350
But you know for
accessibility that you need a label, so

56
00:03:29.350 --> 00:03:32.240
that a screen reader reads it,
absolutely, that's the way to do it.

57
00:03:32.240 --> 00:03:32.797
Add labels,

58
00:03:32.797 --> 00:03:36.337
give them a class of visually hidden which
are gonna look at in the next section, and

59
00:03:36.337 --> 00:03:39.540
then it'll be hidden from the screen but
they'll show up on screen later.

60
00:03:39.540 --> 00:03:40.800
That's a great question.

61
00:03:40.800 --> 00:03:46.960
&gt;&gt; Also, if the input is a child of
the label, is four still required?

62
00:03:46.960 --> 00:03:51.880
&gt;&gt; It is not, no if the input is a child
of the label, you don't need four at all.

63
00:03:51.880 --> 00:03:55.941
So, you can just do these blank labels,
any text and then this doesn't actually

64
00:03:55.941 --> 00:03:59.300
even need the ID, it could just be
an input type text at this point.

65
00:03:59.300 --> 00:04:03.820
So yeah, no, for if you wrap it, if you
don't wrap it then you wanna do the four.

66
00:04:03.820 --> 00:04:06.583
When are Arial labelled elements
read by screen readers?

67
00:04:06.583 --> 00:04:09.858
So that is tricky because in
our div example, this is great,

68
00:04:09.858 --> 00:04:13.006
it has a label except divs
aren't read by screen readers,

69
00:04:13.006 --> 00:04:15.980
right, because they are not
something read out loud.

70
00:04:15.980 --> 00:04:18.585
So, if in these situations
it would really be and

71
00:04:18.585 --> 00:04:20.690
we'll get into it in the next section.

72
00:04:20.690 --> 00:04:25.091
But if you take an element and you add
the ability for it to be focused, like for

73
00:04:25.091 --> 00:04:29.494
a good example would be like, have you
ever seen those sites where you can link

74
00:04:29.494 --> 00:04:33.081
directly to one of the h2 or h3,
so you can like a blog posts but

75
00:04:33.081 --> 00:04:36.513
a certain section of the blog
posts that you want to link to?

76
00:04:36.513 --> 00:04:40.245
So they do that by allowing you to
focus on the h2 h3, h4, whatever,

77
00:04:40.245 --> 00:04:43.150
which normally you aren't
able to focus those.

78
00:04:43.150 --> 00:04:46.687
So in that sense, when it's focusable,
which we'll get into the tab index,

79
00:04:46.687 --> 00:04:49.741
that's when you would add a label to it,
otherwise you're right,

80
00:04:49.741 --> 00:04:53.280
it won't read the label because
you can't ever focus that item.

81
00:04:53.280 --> 00:04:55.880
Cool, so yeah, this is something that
we've talked about a little bit already.

82
00:04:55.880 --> 00:04:59.060
Sometimes you just need to
communicate with a screen reader and

83
00:04:59.060 --> 00:05:02.070
you don't want it to show
up on the actual website.

84
00:05:02.070 --> 00:05:06.136
And so the way that we do that there's
a number of ways you can do it in CSS but

85
00:05:06.136 --> 00:05:09.350
the idea is that you add
a visually hidden class.

86
00:05:09.350 --> 00:05:12.053
And so, this one just absolutely
position something and

87
00:05:12.053 --> 00:05:15.045
then sends it off the screen
is simply all that it does.

88
00:05:15.045 --> 00:05:17.785
I think I got this one
from Twitter Bootstrap.

89
00:05:17.785 --> 00:05:21.768
But there's a number of ways you can do it
but I would recommend in your code base,

90
00:05:21.768 --> 00:05:26.135
just adding a shared class for visually
hidden and then putting it anywhere.

91
00:05:26.135 --> 00:05:29.845
So an anecdote that I like here, and
I mentioned it a little bit earlier.

92
00:05:29.845 --> 00:05:34.306
So when I was at Twitter, we came up with
all these great keyboard shortcuts like

93
00:05:34.306 --> 00:05:38.834
two key character shortcuts for like, make
a new tweet or reply or follow a user or

94
00:05:38.834 --> 00:05:40.520
search something like that.

95
00:05:40.520 --> 00:05:43.630
And then we're like well, how do we
surface all these great shortcuts, right?

96
00:05:43.630 --> 00:05:47.490
Like, it's cool that we have them,
but how do we let users know?

97
00:05:47.490 --> 00:05:52.230
And so our accessibility lead, he came up
with this really clever thing where he

98
00:05:52.230 --> 00:05:56.541
took a div and he put some text in it and
said, hey, we have all these great

99
00:05:56.541 --> 00:06:02.040
keyboard shortcuts, if you wanna check
them out, hit the question mark button.

100
00:06:02.040 --> 00:06:04.840
And he added a class of
visually hidden to that div and

101
00:06:04.840 --> 00:06:09.400
then he used JavaScript to prepend that
div to the entire document on twitter.com.

102
00:06:09.400 --> 00:06:11.156
So, when you very first hit twitter.com,

103
00:06:11.156 --> 00:06:14.030
the first thing that a screen
reader would see was this thing.

104
00:06:14.030 --> 00:06:17.344
So, it had the experience of the screen
reader was like being communicated with,

105
00:06:17.344 --> 00:06:20.430
right, like you would load twitter.com,
you would never see this thing.

106
00:06:20.430 --> 00:06:24.152
But if you loaded it with a screen reader
before it even read like the home nav,

107
00:06:24.152 --> 00:06:27.871
it would say, hey, if you're using
a screen reader, check out this thing,

108
00:06:27.871 --> 00:06:31.560
hit question mark, and we'll show you
all these cool keyboard shortcuts.

109
00:06:31.560 --> 00:06:35.195
So, there's some kind of neat ways that
you can think about making some content

110
00:06:35.195 --> 00:06:38.616
making a visually hidden, sticking in
at the beginning of the document and

111
00:06:38.616 --> 00:06:41.982
then you have a way of communicating
directly with screen reader users and

112
00:06:41.982 --> 00:06:43.850
non screen reader users will never see it

