WEBVTT

1
00:00:00.094 --> 00:00:04.261
So there's two things that are part
of WCAG that are very interesting.

2
00:00:04.261 --> 00:00:08.145
Things that you might not
think are part of WCAG.

3
00:00:08.145 --> 00:00:12.694
And almost, sort of go against what I said
at the beginning about related fields that

4
00:00:12.694 --> 00:00:14.178
are non-accessibility.

5
00:00:14.178 --> 00:00:18.848
So WCAG does specify that you need to
identify the language of the page.

6
00:00:18.848 --> 00:00:23.625
So I don't know how many people do this,
but like your HTML tag at the beginning,

7
00:00:23.625 --> 00:00:26.880
your website actually
takes a length property.

8
00:00:26.880 --> 00:00:29.097
This will flag in a lighthouse audit,

9
00:00:29.097 --> 00:00:32.158
but it's something I see
people not do all the time.

10
00:00:32.158 --> 00:00:35.173
So setting that is required
to have full conformance.

11
00:00:35.173 --> 00:00:39.703
And then if you have any subsections
that deviate from that language,

12
00:00:39.703 --> 00:00:41.869
setting those manually as well.

13
00:00:41.869 --> 00:00:42.850
So like examples here.

14
00:00:42.850 --> 00:00:46.773
If you have a blockquote in Spanish,
you can do it that way.

15
00:00:46.773 --> 00:00:52.017
Yeah, so that one's usually pretty easy
to just go add the default language.

16
00:00:52.017 --> 00:00:56.000
And then if you use some kind
of internationalization library,

17
00:00:56.000 --> 00:01:00.644
as that gets passed down to the frontend
you can just update the HTML tag to be

18
00:01:00.644 --> 00:01:02.874
whatever the current language is.

19
00:01:02.874 --> 00:01:05.888
The other one that seems like
it shouldn't be, but it is,

20
00:01:05.888 --> 00:01:08.481
is validation and
parsing errors in your markup.

21
00:01:08.481 --> 00:01:13.233
So we're talking about semantic HTML,
but this is actually talking about any

22
00:01:13.233 --> 00:01:17.484
kind of significant, like parsing
unclosed tags or malformed tags.

23
00:01:17.484 --> 00:01:21.220
Or tags that aren't allowed
to nest that you have nested,

24
00:01:21.220 --> 00:01:24.589
anything like that is actually
part of this as well.

25
00:01:24.589 --> 00:01:28.621
I do this sometimes in my
performance classes, but

26
00:01:28.621 --> 00:01:32.198
the W3 has a validator that's really nice.

27
00:01:32.198 --> 00:01:35.670
So you can go to validator.w3.org.

28
00:01:35.670 --> 00:01:38.060
And you have multiple different
ways you can put in a web address,

29
00:01:38.060 --> 00:01:40.080
if your site's already on production.

30
00:01:40.080 --> 00:01:45.100
You can upload a file like an HTML file,
or you can just paste some code.

31
00:01:45.100 --> 00:01:49.580
So you could just like, for an example,
I could go grab a big HTML file like

32
00:01:49.580 --> 00:01:53.219
this one, copy it, paste it in here and
check it like that.

33
00:01:53.219 --> 00:01:56.421
And so this will go ahead and it'll
tell me no errors or warnings to show.

34
00:01:56.421 --> 00:02:01.014
But I think, for example,
if I did, I don't know like an h7,

35
00:02:01.014 --> 00:02:05.545
maybe or if I spelled paragraph wrong or
something like that.

36
00:02:05.545 --> 00:02:09.782
If you had some like markup issues,
they would go ahead and return and say,

37
00:02:09.782 --> 00:02:11.605
hey, h7 is not a real element.

38
00:02:11.605 --> 00:02:15.545
I don't know for those that know, but
that only goes to h6 in the headings,

39
00:02:15.545 --> 00:02:16.787
that's why I use this.

40
00:02:16.787 --> 00:02:18.645
Pa is not a child element,
these kind of things.

41
00:02:18.645 --> 00:02:22.732
So, yeah, they're kind of interesting that
they're part of WCAG cuz they don't seem

42
00:02:22.732 --> 00:02:23.682
like they would be.

43
00:02:23.682 --> 00:02:28.010
But it's worth calling out making
sure that you have your language set.

44
00:02:28.010 --> 00:02:32.671
And making sure that your HTML
is free from those errors.

45
00:02:32.671 --> 00:02:34.881
So before we move into the preferences,

46
00:02:34.881 --> 00:02:37.421
do we have any questions
on kind of this stuff?

47
00:02:37.421 --> 00:02:41.257
So all the stuff that we've covered so
far in this section?

48
00:02:41.257 --> 00:02:43.764
Are there any good accessibility
boilerplates like normalizer?

49
00:02:43.764 --> 00:02:46.414
I don't think there are.

50
00:02:49.518 --> 00:02:53.148
I know, so, for an example,
if you're using HTML 5 boilerplate,

51
00:02:53.148 --> 00:02:56.731
I know that they are very involved
in the accessibility community.

52
00:02:56.731 --> 00:02:58.055
So they would just be a good one to use.

53
00:02:58.055 --> 00:03:04.446
But I think moving forward, and Bootstrap,
also very big in the community.

54
00:03:04.446 --> 00:03:07.826
But I do think moving forward
they're finding either a linter or

55
00:03:07.826 --> 00:03:11.340
an automated tool, like lighthouse
is gonna be kind of required.

56
00:03:11.340 --> 00:03:11.982
It's a really good question.

57
00:03:11.982 --> 00:03:15.071
But yeah, I can't think of anything that.

58
00:03:15.071 --> 00:03:20.841
And it's tricky too cuz the boiler plates
are gonna provide just the basic elements.

59
00:03:20.841 --> 00:03:23.553
So hopefully they'll have the language
set, they'll have a doc type,

60
00:03:23.553 --> 00:03:24.671
they won't have any errors.

61
00:03:24.671 --> 00:03:26.631
But as soon as you start
adding your own tags,

62
00:03:26.631 --> 00:03:29.535
right, we'll need something like
it suits you on your own image.

63
00:03:29.535 --> 00:03:30.761
We'll need something to verify out.

64
00:03:30.761 --> 00:03:34.296
So, that's a very good question.

