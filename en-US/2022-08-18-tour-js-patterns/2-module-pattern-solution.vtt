WEBVTT

1
00:00:00.350 --> 00:00:04.590
So just to walk you through the solution,
so the very first thing that we first have

2
00:00:04.590 --> 00:00:08.095
to do is create another file called
math.js, change everything or

3
00:00:08.095 --> 00:00:12.590
move everything here, export them because
we want to use them in our index.js file.

4
00:00:12.590 --> 00:00:19.198
So we need to explicitly at the export
keyword to make them public or

5
00:00:19.198 --> 00:00:24.390
at least available in other modules,
import them,

6
00:00:24.390 --> 00:00:29.941
sum, subtract, divide,
multiply, from math.js.

7
00:00:29.941 --> 00:00:34.313
And then, the last step that I
always forget type module, or

8
00:00:34.313 --> 00:00:39.383
we could have used the MJS extension,
so now with this, we can use it.

9
00:00:39.383 --> 00:00:44.033
So now, it's also easier to show you
that if we added a secret value here,

10
00:00:44.033 --> 00:00:47.336
cause secret equals a or
123, that's fine too.

11
00:00:47.336 --> 00:00:52.105
And we wanted to import that,
it will throw an error.

12
00:00:54.538 --> 00:00:58.970
Because the requested module doesn't
provide that named exports secret.

13
00:00:58.970 --> 00:01:01.841
So this is a really good way to keep
secret encapsulated to just that

14
00:01:01.841 --> 00:01:04.890
module cuz the function inside it can,
of course, use secret.

15
00:01:04.890 --> 00:01:08.970
We can have a function that returns secret
from the module that would then expose it,

16
00:01:08.970 --> 00:01:12.080
but we cannot just import anything
that hasn't been exported.

17
00:01:13.860 --> 00:01:19.382
&gt;&gt; So if the browser supports ESX modules
by adding the type module attribute,

18
00:01:19.382 --> 00:01:22.229
why do we need to use module bundlers for

19
00:01:22.229 --> 00:01:26.128
bundling our dependencies in one or
multiple files?

20
00:01:26.128 --> 00:01:29.768
&gt;&gt; Well, the fact that it's a module
doesn't mean that it contains all

21
00:01:29.768 --> 00:01:30.978
the files that we use.

22
00:01:30.978 --> 00:01:33.247
So normally with like a module bundler,

23
00:01:33.247 --> 00:01:37.920
what they also do is they make sure that
if we're requesting another module maybe,

24
00:01:37.920 --> 00:01:41.389
a node module which is also a great
thing that we could use now,

25
00:01:41.389 --> 00:01:46.021
as they're all within that one file all
bundled within that file that we request.

26
00:01:46.021 --> 00:01:49.081
If we wanted to import say,
a note module and

27
00:01:49.081 --> 00:01:53.070
we're just using that in
the script maybe I can show you.

28
00:01:53.070 --> 00:01:58.726
I'll just go back to, I guess here.

29
00:01:58.726 --> 00:02:01.864
I guess I didn't save the solution,
but if actually,

30
00:02:01.864 --> 00:02:05.153
I'll probably do this one
because this one had the HTML.

31
00:02:09.120 --> 00:02:13.119
We can of course say that okay,
index.js is of type module, and

32
00:02:13.119 --> 00:02:16.541
in here it is nice because
we're importing math.js.

33
00:02:16.541 --> 00:02:21.361
But if we wanted to import,
say a node module that was, I don't know,

34
00:02:21.361 --> 00:02:24.380
in our package, or we added import.

35
00:02:24.380 --> 00:02:28.803
Okay, I don't have any node modules here,
but I don't know calendar from calendar

36
00:02:28.803 --> 00:02:31.560
somehow, we have like
a calendar node module.

37
00:02:31.560 --> 00:02:35.358
By default, the browser doesn't know what
calendar is, it doesn't know what to

38
00:02:35.358 --> 00:02:39.154
fetch from, so normally a bundler make
sure that it goes through all the imports,

39
00:02:39.154 --> 00:02:42.344
make sure that it bundles them,
it gets that code that we're using,

40
00:02:42.344 --> 00:02:44.020
funnels them into that one bundle.

41
00:02:44.020 --> 00:02:46.971
We'll also cover this later,
by the way, how bundlers work, and

42
00:02:46.971 --> 00:02:48.457
how we can use them with modules.

43
00:02:48.457 --> 00:02:52.082
But yeah, so a bundler just make sure that
everything is available to the browser

44
00:02:52.082 --> 00:02:53.857
when it's actually being requested.

