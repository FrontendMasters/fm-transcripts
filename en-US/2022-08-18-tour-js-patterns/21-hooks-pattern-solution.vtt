WEBVTT

1
00:00:00.450 --> 00:00:03.806
So the first thing we're going to do is
I would like to create a new folder just

2
00:00:03.806 --> 00:00:04.990
called Hooks.

3
00:00:04.990 --> 00:00:09.140
As in here, I'm going to create
a new file called UseListings.tsx.

4
00:00:11.060 --> 00:00:15.515
Now I'm just going to move the data that
we have here that stateful data over to

5
00:00:15.515 --> 00:00:17.100
this Hook.

6
00:00:17.100 --> 00:00:21.768
So I can do export defaults
function used listings.

7
00:00:21.768 --> 00:00:28.205
So here I'm just going to
import react real quick and

8
00:00:28.205 --> 00:00:36.123
then here I'm just going to return
actually just return a data.

9
00:00:36.123 --> 00:00:38.097
Could have called it listings but
I'll just call it data.

10
00:00:38.097 --> 00:00:40.400
So now we can use this Hook
throughout our application.

11
00:00:40.400 --> 00:00:48.720
So let's see instead of here,
Let's see, where am I getting prompts?

12
00:00:50.420 --> 00:00:54.860
Did I just have it or not?

13
00:00:54.860 --> 00:00:58.095
You're here, so instead I'm
going to do like presentational.

14
00:00:58.095 --> 00:01:01.514
Or actually I'll just use it
from Duterte listings instead.

15
00:01:01.514 --> 00:01:06.086
There are just multiple ways to do it but
I'm just gonna do it here for

16
00:01:06.086 --> 00:01:10.820
a reason naturally I'll do it here
sorry about that and for us listings

17
00:01:10.820 --> 00:01:15.814
from Hooks use listings hopefully I
imported from the right folder here.

18
00:01:15.814 --> 00:01:18.048
Okay.

19
00:01:18.048 --> 00:01:22.482
Now for example if you say use
listings is used listings we can pass

20
00:01:22.482 --> 00:01:26.834
the props here again so
listings live listings, listings, but

21
00:01:26.834 --> 00:01:30.725
this time cuz now it's still
using that like container.

22
00:01:31.755 --> 00:01:32.465
I don't want that.

23
00:01:32.465 --> 00:01:33.969
I just want to have this one so

24
00:01:33.969 --> 00:01:37.185
I'm going to import listings
from the presentational one.

25
00:01:38.475 --> 00:01:43.746
Listings from presentational,
let's use listings,

26
00:01:43.746 --> 00:01:48.272
because I'm passing listings here and
it's data

27
00:01:51.696 --> 00:01:57.222
Let's see, where am I using listings and
other find?

28
00:01:57.222 --> 00:02:02.322
&gt;&gt; Give for deep construct
the object return from listings?

29
00:02:02.322 --> 00:02:03.510
&gt;&gt; Let's see.

30
00:02:03.510 --> 00:02:08.345
&gt;&gt; An app the app.

31
00:02:08.345 --> 00:02:09.965
&gt;&gt; Let's see what's going on here.

32
00:02:11.505 --> 00:02:12.785
Well, it says it's not defined.

33
00:02:12.785 --> 00:02:16.994
So normally that's like
whenever you have a variable on

34
00:02:16.994 --> 00:02:19.688
line 14 that's always a fun one.

35
00:02:19.688 --> 00:02:22.355
&gt;&gt; Can you need to wait for
it to come back.

36
00:02:22.355 --> 00:02:28.477
&gt;&gt; Here, it returns the data where in
the app component, you are taking assets.

37
00:02:28.477 --> 00:02:31.030
&gt;&gt; So
we have to make sure this makes sense.

38
00:02:31.030 --> 00:02:34.983
So in here, we again have to make sure
that there are listings available because

39
00:02:34.983 --> 00:02:37.225
normally, we are like,
if there is no data,

40
00:02:37.225 --> 00:02:40.478
then render nothing,
if there is data then, render something.

41
00:02:40.478 --> 00:02:41.600
That's right, I forgot about that.

42
00:02:41.600 --> 00:02:44.725
So return no.

43
00:02:44.725 --> 00:02:48.036
&gt;&gt; So then yeah, I think we have to return
to call it listings you'd have to say

44
00:02:48.036 --> 00:02:49.398
listings dot listings.

45
00:02:49.398 --> 00:02:50.560
&gt;&gt; Gotcha.
Okay.

46
00:02:50.560 --> 00:02:51.390
All right.

47
00:02:51.390 --> 00:02:51.910
Okay.

48
00:02:51.910 --> 00:02:54.490
Sorry, [LAUGH] it is late or
at least late.

49
00:02:54.490 --> 00:02:57.688
Yes, I had to destructure
it sorry about that.

50
00:02:57.688 --> 00:03:01.175
Well, I mean, I could either say like
return data or just returned data listings

51
00:03:01.175 --> 00:03:03.966
and then yeah you get it,
you get it just the structuring thing.

52
00:03:03.966 --> 00:03:05.878
Yeah.
So this is how you could use a hook we can

53
00:03:05.878 --> 00:03:07.606
either use it here in app or we could use

54
00:03:07.606 --> 00:03:11.354
the directly in the listings component
here and the presentational components.

55
00:03:11.354 --> 00:03:14.874
Which in most cases because like here an
app up probably have way more components.

56
00:03:14.874 --> 00:03:18.654
So you probably don't wanna use the hook
up here because every time listing changes

57
00:03:18.654 --> 00:03:22.985
every time we re-render the page all
the components will get re rendered.

58
00:03:22.985 --> 00:03:29.375
So we could have done like listings,
maybe useless things like in here.

59
00:03:29.375 --> 00:03:33.310
And then again we have to say like
if no listings then return no or

60
00:03:33.310 --> 00:03:36.674
that nice little loading
spinner that we had before.

61
00:03:36.674 --> 00:03:40.986
But then here we can actually
just remove this we don't

62
00:03:40.986 --> 00:03:45.308
need this anymore then we
just need to import the hook.

63
00:03:45.308 --> 00:03:50.210
And listings here so
import us listings from

64
00:03:50.210 --> 00:03:55.377
hooks us listings we
again have to destructure

65
00:03:55.377 --> 00:04:00.050
it I guess, Listings.Listings.map.

66
00:04:00.050 --> 00:04:00.930
Okay, there you go.

67
00:04:00.930 --> 00:04:04.926
So, in this case, you can see that we can
easily create modularized components that

68
00:04:04.926 --> 00:04:06.460
all use that listings data.

69
00:04:06.460 --> 00:04:08.056
Now we could use this hook anywhere,

70
00:04:08.056 --> 00:04:10.280
our code that maybe also
needs this listings data.

71
00:04:11.440 --> 00:04:16.076
Yeah, this is just a nice way to easily,
I don't know, have stateful logic,

72
00:04:16.076 --> 00:04:17.427
in this case of fetch.

73
00:04:17.427 --> 00:04:21.557
And the nice thing also about Hooks
is just for this specific example,

74
00:04:21.557 --> 00:04:25.687
when I'm fetching data, I usually
like to use something called SWR,

75
00:04:25.687 --> 00:04:29.700
I'm wondering if I can,
actually already imported it.

76
00:04:29.700 --> 00:04:32.590
This is a really nice like fetching
library that also use Hooks.

77
00:04:32.590 --> 00:04:36.555
So I can use import like use SWR from SWR,
and for example, I could do like

78
00:04:36.555 --> 00:04:40.590
data error loading, or actually I
think it's just data error right now.

79
00:04:40.590 --> 00:04:43.460
They just updated their API is used SWR.

80
00:04:44.980 --> 00:04:46.054
And then this and

81
00:04:46.054 --> 00:04:50.440
then you just need to add some
fetcher logic with a certain fetcher.

82
00:04:50.440 --> 00:04:54.885
I always forget that,
like here goes to fetcher.

83
00:05:00.266 --> 00:05:04.706
So the next thing that we see here
is that the community can create so

84
00:05:04.706 --> 00:05:09.487
many Hooks that and again, so
this is actually using the same data now.

85
00:05:09.487 --> 00:05:13.127
Not as SWR is actually also adding some
fetching logic like stale while revalidate

86
00:05:13.127 --> 00:05:14.930
it automatically caches the response.

87
00:05:14.930 --> 00:05:19.252
So instead of like calling it on every
render, we just get it from cash first,

88
00:05:19.252 --> 00:05:22.121
if it hasn't been invalidated yet
all that stuff.

89
00:05:22.121 --> 00:05:24.155
But I just wanted to show you this,

90
00:05:24.155 --> 00:05:29.078
because, I think there's even the website
called like React Hooks or something.

91
00:05:29.078 --> 00:05:32.430
Okay, I should have looked this up first,
I don't know it's a website.

92
00:05:32.430 --> 00:05:36.109
And you just have like this library of so
many Hooks that like the community used

93
00:05:36.109 --> 00:05:38.448
and you can use it for so
many different use cases so

94
00:05:38.448 --> 00:05:41.904
instead of thinking like how can I add
the stateful logic to my component in

95
00:05:41.904 --> 00:05:46.070
a performant way you could just import
them from like NPM in your node modules.

96
00:05:46.070 --> 00:05:50.143
So it makes stuff a lot easier and
like it's kind of like a plug in, plug and

97
00:05:50.143 --> 00:05:52.220
play architecture almost.

98
00:05:52.220 --> 00:05:55.430
Yeah, anyway that was it on Hooks.

99
00:05:55.430 --> 00:06:00.898
Now to, are there any questions so
far on Hooks are good?

100
00:06:00.898 --> 00:06:04.677
Perfect.
&gt;&gt; Person just said they renamed Hooks.

101
00:06:04.677 --> 00:06:12.064
Rename the Hook to use data
&gt;&gt; Use data instead of, instead of what?

102
00:06:12.064 --> 00:06:13.745
&gt;&gt; Use listings.

103
00:06:13.745 --> 00:06:14.705
&gt;&gt; Got you, okay.

104
00:06:14.705 --> 00:06:19.080
Yeah, you can use any name as
long as it starts with use.

105
00:06:20.710 --> 00:06:21.890
I mean, yeah.

106
00:06:21.890 --> 00:06:26.047
If my state was called data like at here,
I mean, I could have said like listings,

107
00:06:26.047 --> 00:06:30.085
set listings, return listings I'd like
to use us listings if had like data, so

108
00:06:30.085 --> 00:06:31.800
data return data, so use data.

109
00:06:31.800 --> 00:06:33.550
I like to kind of keep that
in sync with the state,

110
00:06:33.550 --> 00:06:35.150
I'm setting what's the name of the state?

111
00:06:35.150 --> 00:06:36.460
What's the date I'm returning?

112
00:06:36.460 --> 00:06:39.364
But, yeah, that's all up to you.

113
00:06:39.364 --> 00:06:41.988
&gt;&gt; I was just thinking about
the example we did for

114
00:06:41.988 --> 00:06:44.620
the higher order components
with the loader.

115
00:06:44.620 --> 00:06:45.212
&gt;&gt; Yeah.
&gt;&gt; And

116
00:06:45.212 --> 00:06:48.928
I'm just thinking about like,
how that would convert to Hooks or

117
00:06:48.928 --> 00:06:51.846
like how you would combine
it with what we just did.

118
00:06:51.846 --> 00:06:53.129
&gt;&gt; Yeah.
&gt;&gt; With use listings.

119
00:06:53.129 --> 00:06:57.594
&gt;&gt; I mean one thing that we could do
here is I don't know if I have that

120
00:06:57.594 --> 00:07:01.650
little component but
what we could do is maybe have another

121
00:07:01.650 --> 00:07:06.790
state here called like const loading,
set loading or something.

122
00:07:06.790 --> 00:07:10.430
And then we can say like if loading,
loading I don't have that state right now

123
00:07:10.430 --> 00:07:13.794
so to throw an error but turn like
we're loading spinner or something.

124
00:07:13.794 --> 00:07:16.461
&gt;&gt; So
I'm gonna just link to use Hooks.com.

125
00:07:16.461 --> 00:07:19.697
&gt;&gt; Yeah, use Hooks.com, exactly I knew.

126
00:07:19.697 --> 00:07:22.230
Yeah, so this is the one I use so
many times for

127
00:07:22.230 --> 00:07:24.580
like the smaller things like use toggle.

128
00:07:24.580 --> 00:07:29.310
You can see all those,
I like how they used Hooks in this case.

129
00:07:29.310 --> 00:07:30.724
There's also some, some for

130
00:07:30.724 --> 00:07:33.990
like NPM libraries or
note modules that you can just import.

131
00:07:33.990 --> 00:07:37.453
But these are really good examples
of how you can use Hooks or

132
00:07:37.453 --> 00:07:42.350
if you ever just need,
I don't know anything that's listed here.

133
00:07:42.350 --> 00:07:46.930
Let's see, like use off the use event
listener and this one's really useful.

134
00:07:46.930 --> 00:07:49.830
I usually also use like use local
storage and all that stuff.

135
00:07:50.910 --> 00:07:52.240
Use why did you update?

136
00:07:52.240 --> 00:07:56.390
Yeah, so you're gonna be super creative
with Hooks, which is really fun.

