WEBVTT

1
00:00:00.270 --> 00:00:05.600
All right, let's look at the solution,
I'll just open it here, forkids.

2
00:00:05.600 --> 00:00:07.670
So first we're gonna go to
the temperature converter.

3
00:00:07.670 --> 00:00:12.268
So instead of just rendering those
components as is, we are using the props,

4
00:00:12.268 --> 00:00:13.909
so props.renderKelvin.

5
00:00:15.505 --> 00:00:18.575
And they are going to provide a prompt
that is equal to this value prop.

6
00:00:18.575 --> 00:00:20.748
I'm just going to copy paste
this calculation here,

7
00:00:20.748 --> 00:00:22.205
I don't really know that by heart.

8
00:00:22.205 --> 00:00:24.315
And then we also have
the props.render Fahrenheit.

9
00:00:26.255 --> 00:00:33.470
And this value is math.floor some kind of,
here.

10
00:00:35.300 --> 00:00:37.690
So now it says not a function because
we haven't passed it here yet.

11
00:00:38.730 --> 00:00:42.119
So we're exporting the Kelvin and
Fahrenheit component here,

12
00:00:42.119 --> 00:00:44.630
which we will need in the app.tsx.

13
00:00:44.630 --> 00:00:49.377
And here I'm just going to import the
Kelvin Fahrenheit that we exported from

14
00:00:49.377 --> 00:00:51.150
the same file there.

15
00:00:51.150 --> 00:00:52.500
So now we can say render Kelvin.

16
00:00:53.530 --> 00:00:56.640
And we saw that we passed
this value prop here.

17
00:00:56.640 --> 00:01:04.455
So we can now say Kelvin value is value.

18
00:01:04.455 --> 00:01:07.640
And then the render Fahrenheit
goes pretty much the same way.

19
00:01:07.640 --> 00:01:10.555
So render Fahrenheit, Fahrenheit.

20
00:01:11.555 --> 00:01:13.465
Boom, we just got that done.

21
00:01:13.465 --> 00:01:16.336
So that's how you would
change from just rendering

22
00:01:16.336 --> 00:01:19.208
regular components like
rendering into Kelvin and

23
00:01:19.208 --> 00:01:23.855
Fahrenheit hard coded into the temperature
converter to be rendered props.

24
00:01:23.855 --> 00:01:27.320
So if we didn't wanna use the Kelvin here,
maybe we just wanted to, I don't know,

25
00:01:27.320 --> 00:01:28.100
do a paragraph.

26
00:01:28.100 --> 00:01:33.800
You just say value, and then it would
just be like this, nice, I don't know.

27
00:01:33.800 --> 00:01:37.126
Yeah, so you can see that it's like super
reusable if we ever want to change it, or

28
00:01:37.126 --> 00:01:39.491
render different components
based on maybe the patreon or

29
00:01:39.491 --> 00:01:41.210
the component they're using.

30
00:01:41.210 --> 00:01:43.880
Render props can be super, super useful.

31
00:01:46.070 --> 00:01:50.897
Any questions so
far about the solution, render props?

32
00:01:50.897 --> 00:01:54.621
So, actually one thing is that, for
example, if you're using react motion,

33
00:01:54.621 --> 00:01:56.710
one thing you'll often see.

34
00:01:56.710 --> 00:01:58.688
I just know that this is one of the,

35
00:01:58.688 --> 00:02:01.430
I just wanna go to
the documentation actually.

36
00:02:01.430 --> 00:02:04.260
I don't know where I can find those.

37
00:02:04.260 --> 00:02:06.700
Actually, I'll just do it there, GitHub.

38
00:02:06.700 --> 00:02:09.840
So one style that you often see is,

39
00:02:09.840 --> 00:02:15.050
let's see if they have it,
yeah, something like this.

40
00:02:15.050 --> 00:02:18.096
Now this is actually also
a render prop like we saw before.

41
00:02:18.096 --> 00:02:20.810
But this is actually
like a child render prop.

42
00:02:20.810 --> 00:02:25.425
So sometimes you can see that we're
getting those interpolating styles from

43
00:02:25.425 --> 00:02:30.182
this components, which, like in a way
would have called like props.child and

44
00:02:30.182 --> 00:02:32.540
then passed those props there.

45
00:02:32.540 --> 00:02:36.984
So if you ever see this, you're like,
hey, there's actually also render props,

46
00:02:36.984 --> 00:02:38.373
which can be very useful.

47
00:02:38.373 --> 00:02:41.911
And it's still used by a lot of
like animation libraries, and

48
00:02:41.911 --> 00:02:44.710
I think Graph QL uses it as well or
that of Apollo.

49
00:02:46.050 --> 00:02:48.422
Yeah, so you can still see
it in the wild pretty often.

50
00:02:48.422 --> 00:02:49.350
Question?

51
00:02:49.350 --> 00:02:53.528
&gt;&gt; Feels like if there's a set state
on app component, it will create a new

52
00:02:53.528 --> 00:02:58.210
component for render Kelvin and Fahrenheit
on every change of state of the app.

53
00:02:58.210 --> 00:02:59.000
Is that correct?

54
00:03:00.030 --> 00:03:03.978
&gt;&gt; It would Rerender, I mean, yeah,
if you're using state and app,

55
00:03:03.978 --> 00:03:08.620
it would just rerender all the children
that are within that component.

56
00:03:08.620 --> 00:03:12.048
But the same would've happened
if we didn't use render props,

57
00:03:12.048 --> 00:03:14.269
like that would have had the same effect,

58
00:03:14.269 --> 00:03:18.080
because it re renders all the children
within the app components.

59
00:03:18.080 --> 00:03:21.575
So whether we are rendering
it via a render prop or

60
00:03:21.575 --> 00:03:26.619
just regularly through a normal component,
it has the same outcome.

61
00:03:26.619 --> 00:03:30.194
But yeah, I guess just in general make
sure that if you're using a render prop

62
00:03:30.194 --> 00:03:33.934
and the component that you're using isn't
like unnecessarily calling state or

63
00:03:33.934 --> 00:03:35.209
rerendering or anything.

64
00:03:35.209 --> 00:03:37.581
But in this case it would
actually end up in a similar or

65
00:03:37.581 --> 00:03:38.970
in the same results actually.

