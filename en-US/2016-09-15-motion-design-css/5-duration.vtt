WEBVTT

1
00:00:00.000 --> 00:00:04.630
[MUSIC]

2
00:00:04.630 --> 00:00:06.069
&gt;&gt; Rachel Nabors: Let's focus
a little bit on theory.

3
00:00:06.069 --> 00:00:10.705
So back in 1993, Jacob Nielsen did
a bunch of research that showed that

4
00:00:10.705 --> 00:00:15.120
there were three major time limits to
keep in mind when optimizing human

5
00:00:15.120 --> 00:00:19.000
computer interaction,
specifically page loads.

6
00:00:19.000 --> 00:00:22.950
Now, it should be
mentioned that humans and

7
00:00:22.950 --> 00:00:25.940
their interactions with computers
have changed a lot since one 1993.

8
00:00:25.940 --> 00:00:31.100
We have people who are much more
used to using computers today

9
00:00:31.100 --> 00:00:35.020
on faster Internet connections and
even with gesture interfaces that

10
00:00:35.020 --> 00:00:38.080
respond immediately to them
like in the app environment.

11
00:00:38.080 --> 00:00:42.760
So our expectations today might be
different from how they were in 1993.

12
00:00:42.760 --> 00:00:45.900
However, these experiments
haven't been repeated and

13
00:00:45.900 --> 00:00:50.480
they do give us some temporal guidelines
to work from not to mention they do line

14
00:00:50.480 --> 00:00:53.710
up with some experiments I saw in the past
and I'll talk about them in a moment.

15
00:00:55.080 --> 00:00:58.340
So let's extrapolate
a bit from this research

16
00:00:58.340 --> 00:01:03.140
what you found was that 100 milliseconds
a jump cut that is to say going from one

17
00:01:03.140 --> 00:01:08.230
page to another takes 1000 milliseconds
will feel instantaneous to a user.

18
00:01:08.230 --> 00:01:10.100
They don't notice that
there's any kind of a lag it

19
00:01:11.200 --> 00:01:14.620
feels like they've just popped on to
the other page even if it took 100

20
00:01:14.620 --> 00:01:18.780
milliseconds to go from point A to
point B and re-render the page.

21
00:01:18.780 --> 00:01:21.800
In animation,
at one hundred milliseconds, happened so

22
00:01:21.800 --> 00:01:23.300
quickly that it's hard to perceive.

23
00:01:24.420 --> 00:01:29.000
Now, page loads from one hundred
milliseconds to one second long, they

24
00:01:29.000 --> 00:01:33.880
would be noticeable but people still felt
very connected to that interaction, right?

25
00:01:33.880 --> 00:01:38.520
So that's kind of your sweet spot, between
one hundred milliseconds and one second.

26
00:01:38.520 --> 00:01:41.250
This lines up with some
research that has been done

27
00:01:41.250 --> 00:01:43.910
about how long it takes
humans to notice change.

28
00:01:43.910 --> 00:01:48.080
Now, there's a huge variety
in people's temporal beats.

29
00:01:48.080 --> 00:01:51.680
Now you might have noticed
older people saying everything

30
00:01:51.680 --> 00:01:56.260
seems like it's going by so fast,
this has been scientifically proven.

31
00:01:56.260 --> 00:02:01.120
That many older people
experience time passing faster

32
00:02:01.120 --> 00:02:05.020
because their internal
metronome is ticking slower.

33
00:02:05.020 --> 00:02:08.700
Some people have internal
metronomes that tick very fast.

34
00:02:08.700 --> 00:02:11.820
So everything feels like it's
happening very slowly around them.

35
00:02:11.820 --> 00:02:16.520
These people can notice change
closer to around 70 milliseconds.

36
00:02:16.520 --> 00:02:21.910
Whereas, older people might be noticing
change happening over 700 milliseconds.

37
00:02:21.910 --> 00:02:24.700
That's that's a pretty big range, but

38
00:02:24.700 --> 00:02:29.100
that's one of the reasons why we notice
that there's this kind of a sweet spot,

39
00:02:29.100 --> 00:02:32.450
right between 1 second and
100 milliseconds.

40
00:02:32.450 --> 00:02:36.990
Because this is going to
capture the gross of humanity.

41
00:02:36.990 --> 00:02:40.500
We'll talk a little bit more
about that in a moment.

42
00:02:41.580 --> 00:02:46.256
So,
&gt;&gt; Rachel Nabors: There

43
00:02:46.256 --> 00:02:47.710
was this other thing too.

44
00:02:47.710 --> 00:02:51.180
Around 10 seconds response delay,
users no longer felt like their action and

45
00:02:51.180 --> 00:02:53.600
the interface's reaction were connected.

46
00:02:53.600 --> 00:02:59.430
That is to say, you can think of the 10
seconds point as the I'm bored point.

47
00:02:59.430 --> 00:03:03.270
If something takes ten seconds long,
if you're going to be running an animation

48
00:03:03.270 --> 00:03:08.260
for 10 seconds, probably needs a play
button on it, or it could be a movie.

49
00:03:08.260 --> 00:03:09.330
Just putting that out there.

50
00:03:11.908 --> 00:03:15.818
&gt;&gt; Rachel Nabors: So
here's my site at this time in 2016,

51
00:03:15.818 --> 00:03:22.170
here's my site with a one second
transition duration on this side bar.

52
00:03:25.704 --> 00:03:29.070
&gt;&gt; Rachel Nabors: When I was
developing this one second seemed fine.

53
00:03:30.070 --> 00:03:32.950
But you never seen this before?

54
00:03:32.950 --> 00:03:35.280
Probably feel like this is a little slow.

55
00:03:35.280 --> 00:03:37.910
This user interface feels slow to you.

56
00:03:37.910 --> 00:03:40.860
Okay that is fine,
that is a fair assumption.

57
00:03:40.860 --> 00:03:42.810
And the reason that it
would look fine to me.

58
00:03:42.810 --> 00:03:46.180
After spending a week or so
working on it is because, and

59
00:03:46.180 --> 00:03:49.240
this is a well known problem
in studio animation.

60
00:03:49.240 --> 00:03:53.450
When studio animators are working on
animations to get pulled into this

61
00:03:53.450 --> 00:03:55.360
warped sense of time.

62
00:03:55.360 --> 00:03:58.450
Because they're so busy studying
every frame of that animation.

63
00:03:58.450 --> 00:04:02.530
Imagine two people dancing they can see
every movement, that when they replay it

64
00:04:02.530 --> 00:04:05.320
they tend to replay it at speeds
where they can see each of those

65
00:04:05.320 --> 00:04:09.010
individual frames and actually experience
it because they're fine tuning it.

66
00:04:09.010 --> 00:04:11.589
They're playing it slowly they're
looking for the movements.

67
00:04:12.590 --> 00:04:17.215
So there's a rule of thumb in Animation
Studios which is that however long your

68
00:04:17.215 --> 00:04:19.990
pre-production animation is you
need to have its duration and

69
00:04:19.990 --> 00:04:23.910
then have it again that
is to say quarter it.

70
00:04:23.910 --> 00:04:28.630
When preparing final frames to show to
an audience, if I ran them at the same

71
00:04:28.630 --> 00:04:33.440
speed that I was working on the at
it would really be slow and

72
00:04:33.440 --> 00:04:35.580
it's the same for studio animators.

73
00:04:35.580 --> 00:04:41.090
That dance sequence that they spent, who
knows how many man hours making they're

74
00:04:41.090 --> 00:04:44.290
going to have to play it really quickly,
which is kind of sad for

75
00:04:44.290 --> 00:04:46.830
the art but hopefully someone
will take some beautiful stills.

76
00:04:48.730 --> 00:04:52.310
So here's my site with a 300
milliseconds duration.

77
00:04:52.310 --> 00:04:56.920
I found that 250 milliseconds was
a little bit too fast for the motion.

78
00:04:56.920 --> 00:05:01.800
You will find that motion, like actual
movements of things across screens,

79
00:05:01.800 --> 00:05:06.770
tends to do better with longer durations
the wider the distance it has to cross.

80
00:05:07.910 --> 00:05:12.720
So that's just because large things moving
quickly across the screen never look good.

81
00:05:16.520 --> 00:05:20.140
In user interface animation
250 to 300 milliseconds

82
00:05:20.140 --> 00:05:24.660
are a recurring theme and
they recur for a reason.

83
00:05:24.660 --> 00:05:28.440
In game development,
you also find 250 to 300 milliseconds.

84
00:05:28.440 --> 00:05:30.190
They show up over and over again.

85
00:05:31.360 --> 00:05:36.300
That is because this is kind of the gross
median for humans to notice change, and

86
00:05:36.300 --> 00:05:41.660
this is going to feel right to
probably the vast majority of users.

87
00:05:41.660 --> 00:05:45.810
Although a little fast perhaps, to people
whose metronomes are ticking a bit slower

88
00:05:45.810 --> 00:05:49.820
and a little slow to people whose
metronomes are ticking a bit faster.

89
00:05:49.820 --> 00:05:53.480
Now, there is an opportunity
with the Web Animations API,

90
00:05:53.480 --> 00:05:55.130
which is in development right now.

91
00:05:55.130 --> 00:06:00.800
It's shipping out In more and more
browsers there's discussion of letting

92
00:06:00.800 --> 00:06:05.940
users access the global timeline so
that they could say I want all

93
00:06:05.940 --> 00:06:11.100
animations that the web animations API
runs which would be CSS animations and

94
00:06:11.100 --> 00:06:15.940
CSS transitions because this API
underlies how the browser renders them.

95
00:06:15.940 --> 00:06:19.150
I want all of these to run a little
faster or a little slower.

96
00:06:19.150 --> 00:06:23.830
And this would be an accessibility
thing than the browser could go in and

97
00:06:23.830 --> 00:06:29.270
adjust the internal playback rate for all
of its animations in accordance with this.

98
00:06:29.270 --> 00:06:33.510
That's the hope to let people have
choice in how they perceive the web.

99
00:06:33.510 --> 00:06:36.760
So you can go with these default setting
look pretty good for everyone but

100
00:06:36.760 --> 00:06:38.990
users would then have
the choice to slow down or

101
00:06:38.990 --> 00:06:43.090
speed things up across the board
across the web for themselves.

102
00:06:43.090 --> 00:06:46.700
Just putting that out there,
it's a little bit in the future

103
00:06:46.700 --> 00:06:51.320
people who are watching this video in the
future might be like totally happened or

104
00:06:51.320 --> 00:06:54.090
they might be like totally didn't happen.

105
00:06:54.090 --> 00:06:56.390
But I wanted to remind you
that this is in the works.

106
00:06:58.400 --> 00:07:01.970
But keep in mind you do still
have a full second to play with

107
00:07:01.970 --> 00:07:04.040
people before they get bored.

108
00:07:04.040 --> 00:07:08.690
So if your animations like you're moving
something really big across the screen

109
00:07:08.690 --> 00:07:10.960
takes 800 milliseconds,
don't feel too bad about it.

110
00:07:10.960 --> 00:07:11.810
If that's what it takes for

111
00:07:11.810 --> 00:07:14.460
it to look right, you still haven't
gone over that one second mark.

112
00:07:17.130 --> 00:07:19.470
&gt;&gt; Rachel Nabors: And
that's an important note to make here.

113
00:07:21.330 --> 00:07:24.080
Who here is a major performance wank?.

114
00:07:24.080 --> 00:07:26.210
I know we've got some performance
wanks in the audience here.

115
00:07:26.210 --> 00:07:28.440
I see a little hand see another hand.

116
00:07:28.440 --> 00:07:33.210
We are really focused on performance
right now and that is wonderful It is so

117
00:07:33.210 --> 00:07:35.520
good to see people excited
about performance.

118
00:07:37.730 --> 00:07:42.410
But sometimes we forget why we were
originally excited about performance.

119
00:07:43.450 --> 00:07:47.430
We get so focused on just
getting information splashed

120
00:07:47.430 --> 00:07:49.880
on the screen as quickly as we
possibly can that we forgot

121
00:07:49.880 --> 00:07:52.390
why we were trying to do
that in the first place.

122
00:07:52.390 --> 00:07:56.620
It all comes down to that study by Jacob
Nielsen we wanna make sure that people

123
00:07:56.620 --> 00:08:00.170
can see that page has changed
within 100 milliseconds.

124
00:08:00.170 --> 00:08:04.900
We want them to feel like the interface is
reacting to them, is responsive to them,

125
00:08:04.900 --> 00:08:06.310
that things are being done.

126
00:08:06.310 --> 00:08:07.950
It's like having someone
pick up the phone and

127
00:08:07.950 --> 00:08:12.540
saying hey yeah we totally
understand you're having a problem.

128
00:08:12.540 --> 00:08:14.720
But they can still say I
have to put you on hold for

129
00:08:14.720 --> 00:08:16.090
one minute, I'll be back to you.

130
00:08:16.090 --> 00:08:18.930
And as long as they're back within
a reasonable amount of time

131
00:08:18.930 --> 00:08:22.610
that person calling the call
center will not be upset.

132
00:08:22.610 --> 00:08:26.180
But still much better to get that
notification that this is being handled

133
00:08:26.180 --> 00:08:29.940
than it is to get like a phone
that just keeps ringing.

134
00:08:29.940 --> 00:08:31.090
It's the same with performance.

135
00:08:32.630 --> 00:08:37.000
I hear a lot from people who love
performance that they don't like

136
00:08:37.000 --> 00:08:42.980
animations because they just shaved
you know 300 milliseconds off of,

137
00:08:42.980 --> 00:08:47.630
off of the load time for
a page by optimizing database calls and

138
00:08:47.630 --> 00:08:52.530
now I want to add 250 milliseconds to that
page load with the transition am I crazy,

139
00:08:53.750 --> 00:08:56.020
well that, yes and no.

140
00:08:57.970 --> 00:09:03.200
You have to keep in mind that deciphering
an interface Increases cognitive load time

141
00:09:03.200 --> 00:09:07.000
and can slow users down just
as badly as a slow load time.

142
00:09:07.000 --> 00:09:11.950
If you're going from a page that is very
different from the page where the user

143
00:09:11.950 --> 00:09:17.030
was adding a transition to show them
how they're getting there can help them

144
00:09:17.030 --> 00:09:22.200
reorient faster than if you just
got it to them in 50 milliseconds.

145
00:09:22.200 --> 00:09:25.660
So that's one of the reasons why
animations can be your friend too.

146
00:09:25.660 --> 00:09:27.460
They can also mask long load times.

147
00:09:27.460 --> 00:09:29.470
If you're going to take
fifty milliseconds,

148
00:09:29.470 --> 00:09:34.790
having a one hundred millisecond animation
on it, isn't necessarily a bad idea.

149
00:09:34.790 --> 00:09:37.060
You will be masking that load time.

150
00:09:37.060 --> 00:09:39.860
So animation and
performance can be friends and

151
00:09:39.860 --> 00:09:43.730
it's important to remember why
performance and animation are important.

152
00:09:43.730 --> 00:09:47.490
Because you want users to feel like
that interface is responding to them.

153
00:09:47.490 --> 00:09:51.260
But you also don't want them to be
confused if the interface suddenly and

154
00:09:51.260 --> 00:09:54.020
rapidly changes, all right.

155
00:09:55.550 --> 00:09:56.820
&gt;&gt; Speaker 2: So we had question.

156
00:09:56.820 --> 00:09:57.680
&gt;&gt; Rachel Nabors: Yes.

157
00:09:57.680 --> 00:10:01.950
&gt;&gt; Speaker 2: Before you move on, it was a
little bit back when you're talking about

158
00:10:01.950 --> 00:10:06.310
how this might not actually
be implemented quite yet.

159
00:10:06.310 --> 00:10:11.780
So the question is from the Nicholas asked
is there an option for us to control this

160
00:10:11.780 --> 00:10:15.700
via JavaScript in the meantime in other
words can we set some variables and

161
00:10:15.700 --> 00:10:18.880
allow users to manipulate
those through controls?

162
00:10:18.880 --> 00:10:22.070
&gt;&gt; Rachel Nabors: Can we let
people manipulate the global time

163
00:10:22.070 --> 00:10:24.300
line of animations today?

164
00:10:24.300 --> 00:10:28.980
Well, yeah kind of.

165
00:10:28.980 --> 00:10:32.750
That would require you to use
the web animations API polyfill.

166
00:10:32.750 --> 00:10:35.430
And you'd have to do things
where you basically run through

167
00:10:35.430 --> 00:10:40.550
all of the animations on the page,
and then adjust their playback rates.

168
00:10:40.550 --> 00:10:42.950
It's not quite feasible for today.

169
00:10:42.950 --> 00:10:46.110
But this is something that
hopefully within the next year or

170
00:10:46.110 --> 00:10:49.450
two will be possible and
a little bit more convenient and

171
00:10:49.450 --> 00:10:52.640
won't require a poly fill on quite so
many browsers.

172
00:10:52.640 --> 00:10:55.860
We'll talk a little bit more about
the Web animations API at the end.

173
00:10:55.860 --> 00:10:58.940
That was a very good question and
I'm happy to revisit it later too.

174
00:11:02.280 --> 00:11:05.376
&gt;&gt; Rachel Nabors: The other alternative
would be that you could write

175
00:11:05.376 --> 00:11:08.832
an alternative style sheet
with different durations and

176
00:11:08.832 --> 00:11:11.570
let people set their duration preferences.

177
00:11:11.570 --> 00:11:14.700
If you are working on a government site or
a site with profiles and

178
00:11:14.700 --> 00:11:16.310
accessibility options.

179
00:11:16.310 --> 00:11:20.470
Which, if you do work on a site, and
you have, you probably should have some

180
00:11:20.470 --> 00:11:24.970
accessibility options for a site with
a huge amount of different users of

181
00:11:24.970 --> 00:11:29.550
different capabilities and age ranges,
you probably should have some like would

182
00:11:29.550 --> 00:11:34.780
you like to use a font that is good for
people with dyslexia options somewhere.

183
00:11:34.780 --> 00:11:37.590
Along with font sizes etc for
people who don't want to dig

184
00:11:37.590 --> 00:11:41.050
around the guts of their browsers,
we're not all built for that.

185
00:11:41.050 --> 00:11:43.780
That would be a good place to
put that option like would you

186
00:11:43.780 --> 00:11:47.420
like animations to run a little
bit slower or possibly not at all.

187
00:11:47.420 --> 00:11:50.740
That would be a good place to add
an alternative stylesheet option.

188
00:11:53.260 --> 00:11:57.710
That's how I would do it without using
JavaScript, if push came to shove and

189
00:11:57.710 --> 00:12:00.050
that would work pretty much
across the board today.

190
00:12:00.050 --> 00:12:07.559
All right, so there is something
to keep in mind, though.

191
00:12:09.460 --> 00:12:10.920
That's not my mouse.

192
00:12:10.920 --> 00:12:14.360
If an animation is too fast to
be interpreted it's cognitive

193
00:12:14.360 --> 00:12:15.790
load benefits can be lost.

194
00:12:16.890 --> 00:12:19.820
Here's my site with 100 millisecond
duration on that slide.

195
00:12:20.910 --> 00:12:22.160
If you blink you'll miss it.

196
00:12:22.160 --> 00:12:26.660
It's happening so fast that very few
people are going to benefit from this.

197
00:12:26.660 --> 00:12:31.160
It may as well just be a jump coming in
and off the page without an animation.

198
00:12:31.160 --> 00:12:35.040
Now here, the animation is happening so
fast it's barely noticeable.

199
00:12:36.410 --> 00:12:37.810
Do we really need it?

200
00:12:37.810 --> 00:12:41.420
Probably not,
we could probably save some time,

201
00:12:41.420 --> 00:12:45.110
save a threat on the on the CPU or
the GPU in this case.

202
00:12:45.110 --> 00:12:48.560
I'm using transforms and
not bother to animate that.

203
00:12:48.560 --> 00:12:52.436
So If you're going to animate things
too quickly for them to help people,

204
00:12:52.436 --> 00:12:56.373
to help ease cognitive load, help them
see where things are coming from and

205
00:12:56.373 --> 00:13:00.522
where they're going, it's probably
better to just not animate them at all.

