WEBVTT

1
00:00:00.000 --> 00:00:03.801
[MUSIC]

2
00:00:03.801 --> 00:00:05.756
&gt;&gt; Rachel Nabors: We've
transitioned one property, but

3
00:00:05.756 --> 00:00:07.660
what if we wanna transition even more.

4
00:00:09.680 --> 00:00:12.660
Let's take a look,
I'm gonna transition the ball's color.

5
00:00:13.730 --> 00:00:16.049
So let's say,
we wanna change the ball's color too.

6
00:00:23.214 --> 00:00:25.075
&gt;&gt; Rachel Nabors: We wanna change its

7
00:00:25.075 --> 00:00:28.290
background color, to red.

8
00:00:28.290 --> 00:00:32.417
I'm a big fan of the color red.
&gt;&gt; Rachel Nabors: So

9
00:00:32.417 --> 00:00:33.596
how could we get it there?

10
00:00:33.596 --> 00:00:39.702
Well, one thing we could do, which
our lovely friend online asked about.

11
00:00:39.702 --> 00:00:42.338
Was we could do something
like transition all.

12
00:00:45.814 --> 00:00:46.950
&gt;&gt; Rachel Nabors: That worked.

13
00:00:46.950 --> 00:00:48.820
That transitions, all the properties.

14
00:00:48.820 --> 00:00:53.020
So in any property changes,
it's going to get transitioned.

15
00:00:53.020 --> 00:00:56.300
Now the downside is,
this means that any property that changes,

16
00:00:56.300 --> 00:00:57.370
will get transitioned.

17
00:00:57.370 --> 00:01:02.040
So let's say I wanted to also modify

18
00:01:04.290 --> 00:01:09.288
something else about it,
like give it a border of one pixel, and

19
00:01:09.288 --> 00:01:13.970
solid, and black.

20
00:01:13.970 --> 00:01:18.601
But I didn't intend for that to animate.

21
00:01:20.440 --> 00:01:23.924
But it's going to be transitioned,
it's going to animate anyway.

22
00:01:23.924 --> 00:01:26.698
So as you can see when
you use transition all,

23
00:01:26.698 --> 00:01:29.990
sometimes it can result in
interesting animations.

24
00:01:29.990 --> 00:01:33.503
Everything is going to be animated, any
change on this property will be animated.

25
00:01:35.375 --> 00:01:36.806
&gt;&gt; Rachel Nabors: Element.

26
00:01:38.110 --> 00:01:39.380
There's another downside.

27
00:01:41.020 --> 00:01:42.710
It's actually not very performant.

28
00:01:43.900 --> 00:01:47.920
Transition all basically, is a way of
saying to the browser, hey browser.

29
00:01:47.920 --> 00:01:52.165
Watch this element cuz at any given time,
anything might change.

30
00:01:52.165 --> 00:01:59.086
So the browser is like okay just, whatever
you do man like don't want any trouble.

31
00:01:59.086 --> 00:02:02.311
I'll just, put all of my resources
into watching this one element,

32
00:02:02.311 --> 00:02:04.580
to see if anything's
going to change on it.

33
00:02:04.580 --> 00:02:08.670
It doesn't let the browser optimize,
for things that might change and

34
00:02:08.670 --> 00:02:09.680
that can result in it.

35
00:02:09.680 --> 00:02:13.450
Devoting a little bit too many resources,
to being prepared for that.

36
00:02:13.450 --> 00:02:15.800
And like I said,
as far as maintenance down the line,

37
00:02:15.800 --> 00:02:17.750
say you've got a huge style sheet.

38
00:02:17.750 --> 00:02:22.430
And a designer comes in after you, and
they're like and on this other page.

39
00:02:22.430 --> 00:02:25.128
It should have a new background color.

40
00:02:25.128 --> 00:02:27.188
Well now when people
go to that other page,

41
00:02:27.188 --> 00:02:30.919
the background color is fading in what
you didn't intend for that to happen.

42
00:02:30.919 --> 00:02:36.980
The designers stumped and you get a bug
ticket, transition all not a cool friend.

43
00:02:38.130 --> 00:02:43.040
So what we might do, which could
be a lot better is a lot better.

44
00:02:43.040 --> 00:02:45.570
Why am I speaking in wishy washy words,

45
00:02:45.570 --> 00:02:49.810
it is much better to separate
what we do is we have.

46
00:02:49.810 --> 00:02:53.300
Multiple properties listed
with the same transition.

47
00:02:53.300 --> 00:02:58.530
This is the long form, where we
separate extra values with commas.

48
00:02:58.530 --> 00:03:02.820
There is a downside, which means
that you have to define every value,

49
00:03:02.820 --> 00:03:05.320
even defaults, so they all line up.

50
00:03:05.320 --> 00:03:07.806
So here you notice,
that the transition property.

51
00:03:07.806 --> 00:03:11.430
It's transitioning both color and
transform.

52
00:03:11.430 --> 00:03:13.776
The transition durations for
each of those,

53
00:03:13.776 --> 00:03:17.430
the color takes two seconds to
transform takes 300 milliseconds.

54
00:03:17.430 --> 00:03:21.522
And we want the transform
to run after the color.

55
00:03:21.522 --> 00:03:26.120
So we wait one second, while not after but
like midway through the color.

56
00:03:26.120 --> 00:03:30.181
So we wait one second and then,
we change the transform on it.

57
00:03:30.181 --> 00:03:33.039
However, we still have
to define the default,

58
00:03:33.039 --> 00:03:36.975
because color changes immediately
we have to put a zero in there.

59
00:03:36.975 --> 00:03:40.801
Can only imagine how frustrating it gets,
when you have four or

60
00:03:40.801 --> 00:03:43.699
five properties that you're transitioning.

61
00:03:43.699 --> 00:03:48.580
And you have a whole string of zeros,
to get to a one second delay.

62
00:03:48.580 --> 00:03:52.720
It gets a bit frustrating,
it doesn't have to be this way.

63
00:03:52.720 --> 00:03:56.668
Because the shorthand,
looks so much better.

64
00:03:56.668 --> 00:04:02.220
You separate statements with commas,
it provides a much nicer grouping here.

65
00:04:02.220 --> 00:04:05.383
Is that same one,
the color takes two seconds to transform,

66
00:04:05.383 --> 00:04:08.372
takes 300 milliseconds and
has a delay of one second.

67
00:04:08.372 --> 00:04:10.669
And all of the values
are paired up together,

68
00:04:10.669 --> 00:04:13.280
in nice little statements
separated with commas.

