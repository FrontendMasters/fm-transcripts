WEBVTT

1
00:00:00.000 --> 00:00:03.913
[MUSIC]

2
00:00:03.913 --> 00:00:08.660
&gt;&gt; Rachel Nabors: So there's a downside
stacking I mean it can be a little tough.

3
00:00:08.660 --> 00:00:12.990
If you have four or
five different animations on one element.

4
00:00:12.990 --> 00:00:17.370
Honestly though, I don't know what you'd
be doing to get to that level but okay,

5
00:00:17.370 --> 00:00:18.060
let's say,

6
00:00:18.060 --> 00:00:22.140
you are an animation maniac maybe you're
doing some really intense bouncing.

7
00:00:22.140 --> 00:00:26.332
And instead of using key frames, you've
decided that you need all these bounces

8
00:00:26.332 --> 00:00:29.660
to have their own different kinds
of individual key frames, and

9
00:00:29.660 --> 00:00:32.015
you wanna call them with
an animation stack.

10
00:00:32.015 --> 00:00:32.748
There is,

11
00:00:32.748 --> 00:00:38.535
well in addition to needing some serious
Sass mixins to calculate those durations.

12
00:00:38.535 --> 00:00:43.790
Watch what happens when I'm using stacked
animations with touch on my own site.

13
00:00:43.790 --> 00:00:46.570
Once again, I'm using my own site so
if I embarrass anyone it's me.

14
00:00:47.740 --> 00:00:49.000
Zooming in and zooming out.

15
00:00:49.000 --> 00:00:50.439
Zooming in, zooming out,

16
00:00:50.439 --> 00:00:54.832
pinching getting out of the context now
watch her eyeballs are going to disappear.

17
00:01:00.284 --> 00:01:01.986
&gt;&gt; Rachel Nabors: [SOUND] they're gone and

18
00:01:01.986 --> 00:01:05.823
then suddenly she's got
the new facial expression.

19
00:01:05.823 --> 00:01:07.201
[SOUND] what went wrong there?

20
00:01:07.201 --> 00:01:11.080
Obviously, some things were out of sync,

21
00:01:11.080 --> 00:01:16.038
I can't tell you exactly what
happened there because I

22
00:01:16.038 --> 00:01:20.911
don't have I don't have
the stats from safaris CPU.

23
00:01:20.911 --> 00:01:24.598
But I can tell you a little bit
about what might be happening there.

24
00:01:24.598 --> 00:01:29.044
CSS animations and transitions,
they run on the system's clock and

25
00:01:29.044 --> 00:01:31.505
if the main thread is crowded so much.

26
00:01:31.505 --> 00:01:35.146
So that it takes the browser
a long time to get back to it or

27
00:01:35.146 --> 00:01:40.194
if it's confused about where the current
animation should be on that clock.

28
00:01:40.194 --> 00:01:45.167
It can jump, it can cause jumps, this was
really noticeable back when Safari would

29
00:01:45.167 --> 00:01:47.242
pause all animations on Chester.

30
00:01:47.242 --> 00:01:51.040
So if you'd be scrolling or
swiping all the animations would pause.

31
00:01:51.040 --> 00:01:55.510
That problem would happen all the time
in that situation because the CSS

32
00:01:55.510 --> 00:01:59.500
was trying to jump ahead to
where the system clock was, but

33
00:01:59.500 --> 00:02:02.240
it wasn't actually bothering to wait and
do its animations.

34
00:02:02.240 --> 00:02:04.100
This is less of a problem today, but

35
00:02:04.100 --> 00:02:06.686
every once in a while you still
see some residuals from that.

36
00:02:06.686 --> 00:02:11.350
So we're gonna need something
a little bit more robust,

37
00:02:11.350 --> 00:02:13.930
you also have to consider that animations.

38
00:02:13.930 --> 00:02:20.010
Say you have a page with an animation
on it that takes ten seconds, right?

39
00:02:20.010 --> 00:02:22.950
It's a full ten second long animation,
didn't put a play button on it like I

40
00:02:22.950 --> 00:02:26.880
told you to but that's all right, I
understand, we all go through that phase.

41
00:02:26.880 --> 00:02:33.670
So that site takes a full,
I don't know, five seconds to load.

42
00:02:33.670 --> 00:02:36.250
It's a slow connection or
you're just really,

43
00:02:36.250 --> 00:02:38.990
really bad at condensing
all your CSS into one file.

44
00:02:38.990 --> 00:02:41.004
That's okay,
we all go through that phase too.

45
00:02:41.004 --> 00:02:45.889
So your browser the page isn't fully
rendered until five seconds in.

46
00:02:45.889 --> 00:02:50.538
The animation will actually be running
from five seconds in itself half way

47
00:02:50.538 --> 00:02:52.940
through its completion.

48
00:02:52.940 --> 00:02:57.120
When the page is fully rendered that's
why we use things like load events and

49
00:02:57.120 --> 00:03:00.460
scope those animations
to classes like loaded.

50
00:03:00.460 --> 00:03:03.720
Because that way we know they're not
starting on the system clock before

51
00:03:03.720 --> 00:03:04.440
anything's on the page.

52
00:03:05.510 --> 00:03:07.910
So that's a gotcha to
remember about animations.

53
00:03:07.910 --> 00:03:10.025
They're always paying attention
to the system clock so

54
00:03:10.025 --> 00:03:11.968
make sure they're starting
when you tell them to.

55
00:03:13.888 --> 00:03:16.288
&gt;&gt; Rachel Nabors: So
there are a couple of ways around this,

56
00:03:16.288 --> 00:03:18.150
one is overloading keyframes.

57
00:03:19.160 --> 00:03:20.600
We can overload the keyframes block,

58
00:03:20.600 --> 00:03:26.170
this is actually a handy technique
you can use, check this out.

59
00:03:26.170 --> 00:03:30.390
So there's only one animation dash
whatever property that you can use inside

60
00:03:30.390 --> 00:03:34.640
a keyframes block, and
that is an animation timing function.

61
00:03:34.640 --> 00:03:38.650
Believe it or not, you can change
the animation timing function

62
00:03:38.650 --> 00:03:41.280
halfway through your keyframes block.

63
00:03:41.280 --> 00:03:44.180
You could be changing it
from linear to ease in, and

64
00:03:44.180 --> 00:03:46.750
then make it ease out
on the next one down.

65
00:03:46.750 --> 00:03:48.850
This is pretty cool,
you can do bounces with this.

66
00:03:50.190 --> 00:03:52.190
Here's a demo, I'm gonna demo this one for

67
00:03:52.190 --> 00:03:55.820
you because I'm not gonna make you
go through this one on your own.

68
00:03:55.820 --> 00:04:01.240
I like it too much for that, so let's
change this view and notice he sits down.

69
00:04:01.240 --> 00:04:06.110
My goodness, how does he sit
down with only one CSS animation

70
00:04:06.110 --> 00:04:10.350
what did I do what black magic and
sorcery have I engaged in for this?

71
00:04:10.350 --> 00:04:16.260
Well, here it is combined cycle and
that looks so simple, how did I do that?

72
00:04:16.260 --> 00:04:18.850
Well, combined cycle is a little complex,

73
00:04:18.850 --> 00:04:22.560
you'll notice that the background
position at 0% is fine but

74
00:04:22.560 --> 00:04:26.971
I'm also setting the steps to 12 in
here the animation timing function.

75
00:04:26.971 --> 00:04:32.575
Now at exactly 66.6666, not a bad sign,

76
00:04:32.575 --> 00:04:36.820
I change that background position.

77
00:04:36.820 --> 00:04:40.438
But then at 0.00 something 1% later, so

78
00:04:40.438 --> 00:04:46.150
the change is instantaneous It's
not animated between these.

79
00:04:46.150 --> 00:04:51.295
I transition the background over
to the negative 400 pics and

80
00:04:51.295 --> 00:04:56.152
scooted over to the other side
of it's sprite where there's

81
00:04:56.152 --> 00:05:00.739
the sit down cycle and
use the steps five function there.

82
00:05:00.739 --> 00:05:03.544
There you go, so
if I didn't put steps five in here,

83
00:05:08.041 --> 00:05:09.629
&gt;&gt; Rachel Nabors: It would use linear,

84
00:05:09.629 --> 00:05:14.050
or pardon me, it would use ease
instead of using the steps.

85
00:05:16.397 --> 00:05:17.877
&gt;&gt; Rachel Nabors: So yes and by the way,

86
00:05:17.877 --> 00:05:23.985
keep in mind when you're setting animation
timing functions inside key frames block.

87
00:05:23.985 --> 00:05:29.388
The functions describe the timing function
that the next key frame block should,

88
00:05:29.388 --> 00:05:32.910
the next part of the key
frame block should use.

89
00:05:32.910 --> 00:05:38.208
Like to get from 0% to 66%
we gonna use steps 12 and

90
00:05:38.208 --> 00:05:45.130
then from 66% to 66.67% to
100% we're gonna use steps 5.

91
00:05:45.130 --> 00:05:47.340
Sometimes I get a little tripped
up about where it should be put.

92
00:05:47.340 --> 00:05:51.719
Putting my custom animation timing
functions in my key frames box but

93
00:05:51.719 --> 00:05:53.845
that's how you can keep in mind.

94
00:05:56.344 --> 00:05:58.598
&gt;&gt; Rachel Nabors: So
there are some downsides to this, and

95
00:05:58.598 --> 00:06:01.180
they are pretty big downsides.

96
00:06:01.180 --> 00:06:04.510
You don't get to loop those animations,
I mean what would we be doing?

97
00:06:04.510 --> 00:06:06.120
Looping tuna sitting down?

98
00:06:06.120 --> 00:06:12.030
Come on seriously this would be so
sad, this is the most that we can do.

99
00:06:12.030 --> 00:06:16.880
[SOUND] Let's see what
it looks like when we

100
00:06:16.880 --> 00:06:21.315
try to run it twice, while he walks and

101
00:06:21.315 --> 00:06:26.732
he sits down and
then he walks and he sits down.

102
00:06:26.732 --> 00:06:28.186
I don't get to loop him.

103
00:06:28.186 --> 00:06:33.791
I don't get to loop his walking cycle
twice, I don't have any control

104
00:06:33.791 --> 00:06:39.790
over that by overloading the the key
frames I have, let go of that ability.

105
00:06:41.740 --> 00:06:46.380
You only get one timing function at
a time for all animation properties, so

106
00:06:46.380 --> 00:06:52.387
that means even if I were to change his
background color like in between 0% and

107
00:06:52.387 --> 00:06:57.040
100% like let's see.

108
00:06:57.040 --> 00:07:01.676
Let's say I'm gonna say

109
00:07:01.676 --> 00:07:06.536
background-color red.

110
00:07:06.536 --> 00:07:08.792
All right, and you like that looked good,

111
00:07:08.792 --> 00:07:11.996
Rachel maybe you could do
background color white down here.

112
00:07:16.485 --> 00:07:17.882
&gt;&gt; Rachel Nabors: But you can't actually,

113
00:07:17.882 --> 00:07:21.323
actually that's kind of hard to
see maybe I'll slow this down.

114
00:07:21.323 --> 00:07:27.818
No, I can't actually but
the point is that the colors are tied,

115
00:07:27.818 --> 00:07:32.886
so you think,
well what if you put that to 30%.

116
00:07:32.886 --> 00:07:39.415
So it's like 30%, background color white.

117
00:07:39.415 --> 00:07:43.955
Nope, it's still being sucked
in by that one, timing function.

118
00:07:47.080 --> 00:07:48.523
&gt;&gt; Rachel Nabors: And lastly, it's mathy,

119
00:07:48.523 --> 00:07:51.730
you've gotta do a little bit of
math to get the timing right.

120
00:07:52.840 --> 00:07:55.130
Of course, you could write a Saas
mixin that does your math for

121
00:07:55.130 --> 00:07:56.750
you, that's what I do.

122
00:07:56.750 --> 00:07:58.850
But not all of us wanna do that, so

123
00:07:58.850 --> 00:08:03.860
for the rest of us we're gonna have to
come up with more robust technique.

124
00:08:05.580 --> 00:08:11.811
And for that, we have something very
special in our friend JavaScript,

125
00:08:11.811 --> 00:08:16.114
we have specific for
animation event listeners.

126
00:08:16.114 --> 00:08:19.992
All right, let me describe each of
them before must have JavaScript

127
00:08:19.992 --> 00:08:24.223
event listeners for handling CSS
animations and transitions are [SOUND].

128
00:08:24.223 --> 00:08:29.211
Animationstart which fires when
an animation begins animation end which

129
00:08:29.211 --> 00:08:32.026
fires when the animation has completed or

130
00:08:32.026 --> 00:08:35.819
stopped it will never fire
if it is running infinitely.

131
00:08:35.819 --> 00:08:42.302
Animation iteration which fires every
time it has completed its route from 0%

132
00:08:42.302 --> 00:08:47.919
to 100% or if you've got it set
to reverse from 100% to 0%.

133
00:08:47.919 --> 00:08:52.337
And transitionend which fires only
when a transition has completed.

134
00:08:52.337 --> 00:08:57.144
I'm surprised that there's no
transitionstart event, but okay, whatever,

135
00:08:57.144 --> 00:08:58.282
we'll go with it.

136
00:08:58.282 --> 00:09:00.259
Thanks W3C, maybe one day.

137
00:09:01.770 --> 00:09:04.300
Maybe there will be a need for
it, a demonstrable need.

138
00:09:06.000 --> 00:09:09.730
We can scope these to some
fairly complex chains but

139
00:09:09.730 --> 00:09:12.080
you must keep in mind there's one gotcha.

140
00:09:12.080 --> 00:09:15.920
These will fire for every animation or
transition on an event.

141
00:09:15.920 --> 00:09:21.670
So it makes sense if you're good
with your CSS JavaScript foo,

142
00:09:21.670 --> 00:09:27.280
do a little bit of detection to make sure
that the event firing the transition or

143
00:09:27.280 --> 00:09:30.180
animation on end, etc.,
is the one you're expecting.

144
00:09:30.180 --> 00:09:31.566
Maybe it's the correct property.

145
00:09:31.566 --> 00:09:33.006
Maybe it's the correct rule.

146
00:09:36.187 --> 00:09:40.972
&gt;&gt; Rachel Nabors: So of course, there
are browser prefixes to keep in mind.

147
00:09:40.972 --> 00:09:44.770
Number one Webkit it's all camel case.

148
00:09:44.770 --> 00:09:49.050
WebkitAnimationIteration uses for
Webkit based browsers.

149
00:09:49.050 --> 00:09:52.915
Microsoft of course
starts with capitals MSA.

150
00:09:52.915 --> 00:09:56.653
MSAnimationIteration for IE 10 and

151
00:09:56.653 --> 00:10:01.800
everybody else uses all lowercase,
no camelCase.

152
00:10:01.800 --> 00:10:03.890
I kind of wish that
the i were capitalized,

153
00:10:03.890 --> 00:10:06.924
I would have appreciated that cuz
they all look the same to me.

154
00:10:06.924 --> 00:10:10.609
I don't know why it's like that,
I probably [INAUDIBLE] it JavaScript

155
00:10:10.609 --> 00:10:12.988
function to map them all but
that's just me.

156
00:10:12.988 --> 00:10:15.252
But anyway [COUGH]

