WEBVTT

1
00:00:00.000 --> 00:00:03.732
[MUSIC]

2
00:00:03.732 --> 00:00:07.191
&gt;&gt; Rachel Nabors: So you may have noticed
that we have a lot of illustrations

3
00:00:07.191 --> 00:00:07.992
happening.

4
00:00:07.992 --> 00:00:11.252
Back in the day I was a cartoonist.

5
00:00:11.252 --> 00:00:15.392
Before I was a front end developer or
anywhere near web development.

6
00:00:15.392 --> 00:00:20.144
I built websites to help promote my
comics and they were read by 400,000

7
00:00:20.144 --> 00:00:25.140
teenage girls all across the world
every week and it was pretty awesome.

8
00:00:25.140 --> 00:00:27.670
It was sometime after web development,

9
00:00:27.670 --> 00:00:31.620
that I learned that my cartooning skills
had a really useful application and they

10
00:00:31.620 --> 00:00:36.690
were good for storyboarding, interactive
designs, and also for illustrating talks.

11
00:00:36.690 --> 00:00:38.932
My illustrations are so
much cooler than clip art.

12
00:00:38.932 --> 00:00:43.313
And also they let me do things
like bring back this little guy.

13
00:00:43.313 --> 00:00:48.052
He was my co-star back in the days
when I had comics, his name was Tuna.

14
00:00:48.052 --> 00:00:51.673
He's based on my actual cat who has
long since departed this world but

15
00:00:51.673 --> 00:00:54.373
I swore to immortalize him
forever in pop culture.

16
00:00:54.373 --> 00:00:55.613
Now that I don't make comics.

17
00:00:55.613 --> 00:00:58.719
He is my little teacher's assistant, and

18
00:00:58.719 --> 00:01:04.426
will be the subject of many of our
experiments I mean, coding examples today.

19
00:01:04.426 --> 00:01:06.406
Not that we're going to
cause him any trouble.

20
00:01:09.226 --> 00:01:13.646
&gt;&gt; Rachel Nabors: So let's get started
on the big bad CSS transitions.

21
00:01:18.906 --> 00:01:21.546
&gt;&gt; Rachel Nabors: It is not
a good day to have an itchy nose.

22
00:01:21.546 --> 00:01:24.701
You're going to have to watch
me rubbing my nose a lot.

23
00:01:24.701 --> 00:01:30.297
All right, so a transition,
a CSS transition specifically to describes

24
00:01:30.297 --> 00:01:35.728
how CSS property should display change
when it gets a different value.

25
00:01:35.728 --> 00:01:39.028
So you can think of this is
like you change the color.

26
00:01:39.028 --> 00:01:41.068
How long should that change take?

27
00:01:41.068 --> 00:01:44.548
Should it go from fast to slow or
slow to fast.

28
00:01:44.548 --> 00:01:47.599
Should it kind of a chunk
up in between like turn

29
00:01:47.599 --> 00:01:52.310
to various shades of another color
while it's going to its next color.

30
00:01:53.730 --> 00:01:57.820
Transitions are all about going
from one values to another.

31
00:01:57.820 --> 00:02:00.910
And this is how you write that.

32
00:02:00.910 --> 00:02:04.816
You need two ingredients, you need
the property that you're changing and

33
00:02:04.816 --> 00:02:06.990
you need its duration.

34
00:02:06.990 --> 00:02:09.170
These are not optional.

35
00:02:09.170 --> 00:02:12.200
You cannot write a transition
without these two values but

36
00:02:12.200 --> 00:02:15.480
there are a bunch of other
optional things we can give it.

37
00:02:15.480 --> 00:02:17.460
Let me demonstrate for you how these work.

38
00:02:21.160 --> 00:02:23.440
Come on mousey, there we are.

39
00:02:26.400 --> 00:02:26.900
Papa.

40
00:02:32.445 --> 00:02:33.870
&gt;&gt; Rachel Nabors: So this is CodePen.

41
00:02:33.870 --> 00:02:37.510
This also serves as my on boarding
chance for you in CodePen.

42
00:02:37.510 --> 00:02:40.740
When you go to CodePen you can,
if it's not already in the editor view.

43
00:02:40.740 --> 00:02:41.890
You can go to Change View.

44
00:02:43.360 --> 00:02:44.486
And then click Editor View.

45
00:02:49.365 --> 00:02:51.770
&gt;&gt; Rachel Nabors: And it will give
you access to these three panes.

46
00:02:53.040 --> 00:02:56.910
And you can double-click on the top bar of
any one of them to bring it into focus.

47
00:02:58.180 --> 00:03:02.940
And you can use Fork to make sure that
you keep a copy with your account

48
00:03:02.940 --> 00:03:05.860
if you would like to hang onto it for
future reference.

49
00:03:05.860 --> 00:03:09.960
So here we've got a ball div and
we've got an image.

50
00:03:09.960 --> 00:03:14.160
The image is the little paw, and
we are going to edit its CSS.

51
00:03:14.160 --> 00:03:16.960
Cuz we're not, we don't have
a lot that we can do with the,

52
00:03:16.960 --> 00:03:19.450
a lot that we can do with the HTML.

53
00:03:20.810 --> 00:03:26.180
So what's happening here, if you want
to refresh it you can just hit Enter or

54
00:03:26.180 --> 00:03:30.020
Tab, just anything and
it will reload the page automatically.

55
00:03:30.020 --> 00:03:34.130
So as you can see what's happening, every
time I change it, we're reloading and

56
00:03:34.130 --> 00:03:37.220
that paw is scooting across the page.

57
00:03:37.220 --> 00:03:42.210
Now you'll notice that the paw
originally has a transition on it.

58
00:03:43.480 --> 00:03:48.950
It's got a transition and the transitions'
property is the transform and

59
00:03:48.950 --> 00:03:52.380
it takes 0.25 seconds to run.

60
00:03:52.380 --> 00:03:58.960
Now beneath that you'll see
the playing-paw scope here.

61
00:03:58.960 --> 00:04:05.110
That changes the paw's transform and so
that it scoots it over by about 30 pixels.

62
00:04:05.110 --> 00:04:06.817
Watch what happens when
I remove the transition.

63
00:04:12.737 --> 00:04:15.480
&gt;&gt; Rachel Nabors: I said watch what
happens when I remove, it jumps.

64
00:04:15.480 --> 00:04:17.840
It doesn't do it slowly it
just jumps right over and

65
00:04:19.570 --> 00:04:23.360
if you're wondering where that playing
class is coming from, we've got a load.

66
00:04:23.360 --> 00:04:27.000
We've got a load event that's attaching
a class of playing to the body.

67
00:04:27.000 --> 00:04:30.247
That's very important because
without this change happening,

68
00:04:33.867 --> 00:04:35.630
&gt;&gt; Rachel Nabors: The paw never moves.

69
00:04:35.630 --> 00:04:39.980
So you can see that we needed
that class to trigger the change

70
00:04:39.980 --> 00:04:44.010
that the animation runs on,
the CSS transfer transition runs on.

71
00:04:46.260 --> 00:04:46.760
All right.

72
00:04:49.868 --> 00:04:52.240
&gt;&gt; Rachel Nabors: This is how
you write that in the long form.

73
00:04:53.410 --> 00:04:57.890
We have transition-property: color;
transition-duration: 2 seconds.

74
00:04:58.930 --> 00:05:02.320
It gets a little wordy, but
some people especially when they start out

75
00:05:02.320 --> 00:05:05.170
like to write these things
out very specifically.

76
00:05:05.170 --> 00:05:09.990
This makes a lot of sense if you're just
writing one transition or two transitions.

77
00:05:09.990 --> 00:05:13.454
Let's take a closer look at some of these,
some of these properties.

78
00:05:13.454 --> 00:05:17.060
So, transition-property, that's
the property you want to transition.

79
00:05:17.060 --> 00:05:21.590
I should make a point of saying,
that only some things are transitionable.

80
00:05:21.590 --> 00:05:24.380
There is a whole list of things
that are transitionable and

81
00:05:24.380 --> 00:05:26.240
the URL is provided on the screen.

82
00:05:26.240 --> 00:05:29.410
But not everything is and
if you are transitioning something and

83
00:05:29.410 --> 00:05:32.640
you're wondering, why can't I get
this to animate or transition.

84
00:05:32.640 --> 00:05:34.320
Why I want to do what I'm asking it to do.

85
00:05:34.320 --> 00:05:35.980
You might wanna check this list.

86
00:05:35.980 --> 00:05:40.090
I stayed up very late once trying to
get a radio gradient to animate and

87
00:05:40.090 --> 00:05:42.830
it turns out that linear
gradients can be animated.

88
00:05:42.830 --> 00:05:45.090
Radial gradients cannot be animated and

89
00:05:45.090 --> 00:05:48.330
I should have checked this
list a lot sooner than I did.

90
00:05:49.380 --> 00:05:51.980
So don't beat your head against the wall,
check the list.

91
00:05:53.480 --> 00:05:54.980
Transition duration.

92
00:05:54.980 --> 00:05:58.735
Now transition duration can take either
a seconds or milliseconds value.

93
00:05:58.735 --> 00:06:02.260
You;re gonna see a lot of seconds
written in these examples but

94
00:06:02.260 --> 00:06:05.790
I have found from working
with companies that.

95
00:06:05.790 --> 00:06:10.400
Milliseconds are actually a lot more
robust to use in production code.

96
00:06:10.400 --> 00:06:14.400
Partly this is because JavaScript
takes millisecond values, so

97
00:06:14.400 --> 00:06:17.680
if you should ever need to write
something that parses your CSS for

98
00:06:17.680 --> 00:06:20.980
timing values, it's a lot easier
to look for milliseconds.

99
00:06:20.980 --> 00:06:23.300
You don't have to run conversions on them.

100
00:06:23.300 --> 00:06:26.950
And also most of the things
that you are going to be

101
00:06:26.950 --> 00:06:30.450
animating are going to take
less than a second to run.

102
00:06:30.450 --> 00:06:33.720
So instead of littering your
CSS with decimal points,

103
00:06:33.720 --> 00:06:36.711
sometimes it just makes more
sense to use whole values.

104
00:06:36.711 --> 00:06:39.510
Transition timing function.

105
00:06:39.510 --> 00:06:41.375
My gosh it's so long.

106
00:06:41.375 --> 00:06:46.145
I wish it were just easing but
it is transition timing function.

107
00:06:46.145 --> 00:06:50.519
However, the cushioning for
the transition, it is optional,

108
00:06:50.519 --> 00:06:53.060
it has a default values of ease.

109
00:06:53.060 --> 00:06:55.100
Will talk a bit more
about timing functions,

110
00:06:55.100 --> 00:06:59.048
i promise they are a vast scoped concept.

111
00:06:59.048 --> 00:07:03.433
And then there's transition delay,
or the number of milliseconds or

112
00:07:03.433 --> 00:07:08.210
seconds you want to delay the transition
before firing it, also optional.

113
00:07:08.210 --> 00:07:11.160
Defaults to zero so
transitions run immediately.

114
00:07:11.160 --> 00:07:17.660
[COUGH]
So how do transitions and

115
00:07:17.660 --> 00:07:21.620
their durations and delays look when
you write them out in the short hand?

116
00:07:21.620 --> 00:07:24.567
How does the browser know,
how do you know specifically,

117
00:07:24.567 --> 00:07:28.840
which one of these is the duration and
which one of these is the delay?

118
00:07:28.840 --> 00:07:30.640
Well, one of them is optional.

119
00:07:30.640 --> 00:07:35.790
So the browser assumes the first one
it runs into is the mandatory duration.

120
00:07:35.790 --> 00:07:40.420
Thus the second one must be the delay.

