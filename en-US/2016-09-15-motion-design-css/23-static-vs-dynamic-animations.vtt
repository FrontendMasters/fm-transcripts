WEBVTT

1
00:00:00.000 --> 00:00:03.974
[MUSIC]

2
00:00:03.974 --> 00:00:07.678
&gt;&gt; Rachel Nabors: We have talked about UX,
we have talked about how we can use

3
00:00:07.678 --> 00:00:12.214
animations in designs and why they
might help users with certain things

4
00:00:12.214 --> 00:00:16.011
in certain places,
how they can help ease cognitive load.

5
00:00:16.011 --> 00:00:19.891
Now, we're gonna talk a little bit
about how we implement animations on

6
00:00:19.891 --> 00:00:22.680
the code side, programmatically.

7
00:00:22.680 --> 00:00:28.060
I want to clarify some different
ways of approaching animation.

8
00:00:28.060 --> 00:00:29.510
Let's see.

9
00:00:29.510 --> 00:00:33.470
So, first of all, there is the static way,
and this is where an animation,

10
00:00:33.470 --> 00:00:36.650
it runs from start to finish,
it has no branching logic.

11
00:00:36.650 --> 00:00:39.880
It's just free-defined sequences.

12
00:00:39.880 --> 00:00:43.870
This is an example of
a thing I made where the only

13
00:00:43.870 --> 00:00:46.980
interaction people have
is clicking that tassel.

14
00:00:46.980 --> 00:00:49.870
The rest of this is all CSS animations.

15
00:00:51.020 --> 00:00:53.470
It's running from start to end.

16
00:00:53.470 --> 00:00:55.880
It's really not interpreting
anything from us.

17
00:00:55.880 --> 00:00:58.200
It's not taking any extra information.

18
00:00:59.390 --> 00:01:01.550
It's just, it's static.

19
00:01:01.550 --> 00:01:02.530
No logic.

20
00:01:02.530 --> 00:01:05.180
It's very much just doing what we tell it.

21
00:01:05.180 --> 00:01:08.730
It's very declarative, for those people
familiar with programming terms.

22
00:01:08.730 --> 00:01:10.370
And there's stateful.

23
00:01:10.370 --> 00:01:14.440
Stateful animations are when you take
a default state, you have an event happen,

24
00:01:14.440 --> 00:01:18.060
like a hover or, a page transition,
something like that,

25
00:01:18.060 --> 00:01:19.640
and then it moves to a different state.

26
00:01:21.690 --> 00:01:23.090
It's a boolean input.

27
00:01:23.090 --> 00:01:24.700
Either it's happening or
it's not happening.

28
00:01:25.734 --> 00:01:28.250
I always see these a lot, on our devices.

29
00:01:28.250 --> 00:01:31.500
So it's become much more
pronounced in app environments.

30
00:01:31.500 --> 00:01:33.930
They really help us mounts between tasks.

31
00:01:33.930 --> 00:01:36.299
This is Evernote, one version of Evernote.

32
00:01:36.299 --> 00:01:38.160
Notice that there is a difference.

33
00:01:38.160 --> 00:01:39.600
There are three things
you can do with Evernote.

34
00:01:39.600 --> 00:01:43.640
You can either search for something,
or you can be writing something.

35
00:01:43.640 --> 00:01:48.470
Notice when you edit,
that whole thing slides up for you.

36
00:01:48.470 --> 00:01:58.230
We're in a writing state,
&gt;&gt; Rachel Nabors: Or, we could scoot back.

37
00:01:58.230 --> 00:02:02.780
And then there are dynamic animations and

38
00:02:02.780 --> 00:02:07.110
these are the hardest for us to do, we
can't do these with CSS, they're too much.

39
00:02:07.110 --> 00:02:10.760
This is where you take rules and
you take variables,

40
00:02:10.760 --> 00:02:15.490
and the computer generates the new
state based on the inputs and

41
00:02:15.490 --> 00:02:17.130
how they impact the rules
that you've given it.

42
00:02:18.420 --> 00:02:23.690
There are no predefined states that you
can use, it determines its own outcomes.

43
00:02:23.690 --> 00:02:26.830
This is a really big deal for
things like dashboards.

44
00:02:26.830 --> 00:02:29.940
This is a demo from a friend of mine,

45
00:02:29.940 --> 00:02:34.900
Alex Graul at CrowdStrike, he gave me
permission to use this to show you all.

46
00:02:34.900 --> 00:02:37.470
Now, you can't really imagine
this kind of a dashboard

47
00:02:37.470 --> 00:02:40.560
as a page with a bunch of
database line entries in it.

48
00:02:41.590 --> 00:02:44.100
You see, all the green dots mean
that the servers are secure but

49
00:02:44.100 --> 00:02:46.460
the orange ones indicate that
there might be a threat.

50
00:02:46.460 --> 00:02:48.740
So you would want to go investigate those.

51
00:02:49.880 --> 00:02:52.510
And you can see that the orange
ones just really pop right out.

52
00:02:52.510 --> 00:02:54.279
And you can go investigate them,
immediately.

53
00:02:55.420 --> 00:02:57.060
This, no.

54
00:02:57.060 --> 00:02:58.930
You would need JavaScript to do this.

55
00:02:58.930 --> 00:03:02.230
CSS is very much too declarative.

56
00:03:02.230 --> 00:03:06.440
However, you should keep in mind
that stateful animations exist, or

57
00:03:06.440 --> 00:03:09.490
dynamic and declarative overlap.

58
00:03:09.490 --> 00:03:12.010
So you've got your static,
you've got your dynamic animations, but

59
00:03:12.010 --> 00:03:13.270
you can combine them.

60
00:03:13.270 --> 00:03:17.450
Take a little bit of user input, determine
what state they should go to, and

61
00:03:17.450 --> 00:03:20.440
already have written out how
you want that state to look.

62
00:03:20.440 --> 00:03:23.460
And CSS is really good for that if you
mix in a little bit of JavaScript.

63
00:03:24.460 --> 00:03:27.940
Let's talk a little bit about different
ways of triggering state change.

64
00:03:30.860 --> 00:03:35.070
So, it's hard for a meaningful
animation to exist without JavaScript,

65
00:03:35.070 --> 00:03:38.124
we'd be limited to CSS's
hover pseudo-class, right?

66
00:03:38.124 --> 00:03:39.130
That's not so great.

67
00:03:39.130 --> 00:03:44.600
Or maybe the check-box hack which you
shouldn't be using for many many reasons.

68
00:03:45.700 --> 00:03:46.300
There are ways.

69
00:03:46.300 --> 00:03:47.090
There is loading.

70
00:03:47.090 --> 00:03:51.580
You can use JavaScript to sense when
a browser event has fired to indicate that

71
00:03:51.580 --> 00:03:53.050
the page has finished loading.

72
00:03:53.050 --> 00:03:56.776
A scrolling, that happens all the time,
it's actually one of the browser's few

73
00:03:56.776 --> 00:03:59.530
built-in animations that it does
natively and does very well.

74
00:04:00.770 --> 00:04:03.030
Human events like hovering,
we mentioned that.

75
00:04:03.030 --> 00:04:06.510
Also clicking or tapping, gestures.

76
00:04:06.510 --> 00:04:07.950
Timed events, for instance,

77
00:04:07.950 --> 00:04:12.790
when things time out, or if you want
to do things with choreography.

