WEBVTT

1
00:00:00.000 --> 00:00:04.054
[MUSIC]

2
00:00:04.054 --> 00:00:06.635
&gt;&gt; Rachel Nabors: Now it's time that
we have a talk about will-change.

3
00:00:06.635 --> 00:00:09.435
I've heard will-change come
up a bit in the chat room.

4
00:00:09.435 --> 00:00:11.835
It's important for us to cover this.

5
00:00:11.835 --> 00:00:13.817
Will-change, ostensibly,

6
00:00:13.817 --> 00:00:18.387
is a CSS property that lets us give
the browser a little heads up as to what

7
00:00:18.387 --> 00:00:23.320
other CSS properties we might
possibly be animating in the future.

8
00:00:23.320 --> 00:00:27.396
This lets the browser go, aha, and
it goes out there and makes some little,

9
00:00:27.396 --> 00:00:31.663
I don't know, tweaks, to how it's going
to be handling those properties, so

10
00:00:31.663 --> 00:00:33.916
that it can give us the best performance.

11
00:00:33.916 --> 00:00:38.902
Used to be that we would do this
using something called the hardware

12
00:00:38.902 --> 00:00:40.155
acceleration.

13
00:00:40.155 --> 00:00:43.615
And now what this does,
this is the translateZ hack.

14
00:00:43.615 --> 00:00:48.769
And the translateZ hack is where chrome
had this lovely feature, still probably

15
00:00:48.769 --> 00:00:54.140
has this feature, where it would take
3D transforms and put them on the GPU.

16
00:00:54.140 --> 00:00:57.850
So you would be getting these animations
off the CPU where the JavaScript

17
00:00:57.850 --> 00:01:01.860
threat is and all this other stuff
is going on, you put it on the GPU

18
00:01:01.860 --> 00:01:06.260
where it was all alone and happy and could
be taken care of all by its little self.

19
00:01:06.260 --> 00:01:08.126
Unless you were putting
everything on the GPU,

20
00:01:08.126 --> 00:01:11.165
in which case it could get pretty crowded
in there and your phone might crash.

21
00:01:11.165 --> 00:01:15.871
So this is why people would
add this translateZ thing,

22
00:01:15.871 --> 00:01:18.647
it's kind of a magical number.

23
00:01:18.647 --> 00:01:21.387
TranslateZ(0) is actually a way of saying,

24
00:01:21.387 --> 00:01:25.506
I'm going to transform this into 3D plane,
but you don't actually.

25
00:01:25.506 --> 00:01:29.387
So it was a way of tricking the browser
into kicking things over to the GPU.

26
00:01:29.387 --> 00:01:31.361
And sometimes, if it was used willy-nilly,

27
00:01:31.361 --> 00:01:34.110
it could actually cause
more harm than good.

28
00:01:34.110 --> 00:01:36.220
So if you're thinking about
using something like this,

29
00:01:36.220 --> 00:01:37.710
you probably shouldn't be.

30
00:01:37.710 --> 00:01:39.460
Magic fixes do not age well.

31
00:01:39.460 --> 00:01:42.170
When you have people coming in to maintain
your code, they'll be like, what is this,

32
00:01:42.170 --> 00:01:44.200
I better not touch it,
it might break something.

33
00:01:44.200 --> 00:01:48.960
So you can end up carrying all
these not necessarily performant

34
00:01:50.300 --> 00:01:52.630
magical fixes with you for a long time.

35
00:01:52.630 --> 00:01:53.767
It creates technical debt.

36
00:01:53.767 --> 00:01:55.940
So this is not how we like to do things.

37
00:01:57.030 --> 00:01:58.510
Hacks are not future friendly,

38
00:01:58.510 --> 00:02:01.520
they just make you think that
you're getting a good deal.

39
00:02:02.940 --> 00:02:06.280
So Chrome introduced
will-change in hopes that

40
00:02:06.280 --> 00:02:08.910
they could prevent people from
doing this sort of thing.

41
00:02:08.910 --> 00:02:13.230
The idea is that will-change,
what you do here,

42
00:02:13.230 --> 00:02:17.280
you're supposed to use will-change just
before you're going to animate something.

43
00:02:17.280 --> 00:02:19.190
This creates an interesting
set of problems.

44
00:02:19.190 --> 00:02:24.040
You think, well all right, I'm gonna
be using a transform on this thing

45
00:02:24.040 --> 00:02:28.200
in the future sometime, so
I'll just will-change all the transforms.

46
00:02:28.200 --> 00:02:29.220
Well, you could do that.

47
00:02:29.220 --> 00:02:33.730
But it would be even more performant if
you could do a just in time will-change

48
00:02:33.730 --> 00:02:34.450
on that transform.

49
00:02:34.450 --> 00:02:38.930
Say when somebody is hovering over
something that if they click it,

50
00:02:38.930 --> 00:02:45.640
it will be transformed, then you could
add the will-change just to that thing or

51
00:02:45.640 --> 00:02:47.920
maybe only if that thing is in view.

52
00:02:47.920 --> 00:02:50.805
So if you're using will-change,
you'll also probably,

53
00:02:50.805 --> 00:02:53.940
to use it most effectively,
going to be doing a lot of event-sniffing

54
00:02:53.940 --> 00:02:56.680
to figure out when people are getting
close to making that change.

55
00:02:56.680 --> 00:03:00.020
It sounds a lot like doing
the browser's work for it.

56
00:03:00.020 --> 00:03:02.700
And that is one of
the complaints I have heard.

57
00:03:02.700 --> 00:03:08.125
That this is really just something that
supports Chrome's, how shall I put this,

58
00:03:08.125 --> 00:03:13.210
Chrome's lack of focus on animation
in its development processes.

59
00:03:13.210 --> 00:03:18.320
Because there are browsers that claim
that they do not need will-change,

60
00:03:18.320 --> 00:03:19.250
Edge is one of them.

61
00:03:19.250 --> 00:03:26.178
I have heard an Edge developer on
the Internet say that Edge will never have

62
00:03:26.178 --> 00:03:30.940
will-change, because will-change is not
necessary for Edge's performance pipeline.

63
00:03:30.940 --> 00:03:33.660
So that gets into this thing,
different browsers have

64
00:03:33.660 --> 00:03:36.940
different rendering processes, and
some of them might not need this at all.

65
00:03:36.940 --> 00:03:40.297
So what is will-change but
a magic number for Chrome?

66
00:03:44.977 --> 00:03:47.535
&gt;&gt; Rachel Nabors: [LAUGH] So
if you are gonna use will-change,

67
00:03:47.535 --> 00:03:51.894
which I would say is the more sanctioned
version of the translateZ hack, as

68
00:03:51.894 --> 00:03:56.666
at least you're letting the browser decide
when it wants to put things on the GPU or

69
00:03:56.666 --> 00:03:58.357
whatever it's going to do.

70
00:03:58.357 --> 00:04:01.170
So don't slap it on everything.

71
00:04:01.170 --> 00:04:03.987
If you slap will-change on everything,
you are optimizing nothing.

72
00:04:03.987 --> 00:04:07.688
And let's take a look
at this browser spread.

73
00:04:07.688 --> 00:04:12.126
At Caniuse.com,
you'll see that will-change is rather well

74
00:04:12.126 --> 00:04:16.820
supported by Firefox, Chrome,
Safari, and Opera even, my God.

75
00:04:18.550 --> 00:04:22.270
But, iOS Safari, Opera Mini and

76
00:04:22.270 --> 00:04:25.744
Internet Explorer totally not buying
into the will-change movement.

77
00:04:27.090 --> 00:04:28.730
And I've all ready given
you the reasons for

78
00:04:28.730 --> 00:04:32.400
why those browsers might be recalcitrant
about adopting will-change.

