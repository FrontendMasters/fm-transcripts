WEBVTT

1
00:00:00.000 --> 00:00:04.089
[MUSIC]

2
00:00:04.089 --> 00:00:08.235
&gt;&gt; Rachel Nabors: Let's talk a little
bit about Frames per Second, or FPS.

3
00:00:10.852 --> 00:00:14.478
&gt;&gt; Rachel Nabors: So frame rate on the
computer is definitely not the same as it

4
00:00:14.478 --> 00:00:16.154
is in the movie theater.

5
00:00:16.154 --> 00:00:20.880
For instance, in the movie theater

6
00:00:20.880 --> 00:00:26.580
the optimal frame rate to maintain this
illusion of life is 24 frames per second.

7
00:00:26.580 --> 00:00:30.580
Whereas on our computer we keep hearing
people throwing around things like 60

8
00:00:30.580 --> 00:00:32.110
frames per second.

9
00:00:32.110 --> 00:00:34.940
How can those numbers be so disparate?

10
00:00:34.940 --> 00:00:37.820
How can movie theaters get away
with 24 frames per second, and

11
00:00:37.820 --> 00:00:40.460
we have to go out there and
refresh the screen 60 frames per second?

12
00:00:40.460 --> 00:00:41.319
It's ridiculous, right?

13
00:00:42.460 --> 00:00:47.245
Well that's because some photography has
this lovely thing called motion blurs.

14
00:00:47.245 --> 00:00:50.704
You'll notice that each one of
those 24 frames has this rather,

15
00:00:50.704 --> 00:00:52.868
when someone's moving really quickly,

16
00:00:52.868 --> 00:00:57.020
has this smear of action showing
an area where something is moving.

17
00:00:57.020 --> 00:01:02.010
The human eye actually sees
motion areas like this.

18
00:01:02.010 --> 00:01:04.430
It's hard for
me to describe how the human eye works,

19
00:01:04.430 --> 00:01:06.760
because we tend to think
of it as like a camera.

20
00:01:06.760 --> 00:01:09.320
And while it is taking in
data like a camera is,

21
00:01:09.320 --> 00:01:13.230
it is not processed in a photo
realistic way in our brains.

22
00:01:13.230 --> 00:01:15.920
It is used to create mental
models that we experience.

23
00:01:15.920 --> 00:01:21.130
Our mental model of what we're
experiencing cannot be distilled down

24
00:01:21.130 --> 00:01:23.060
to 60 or 200 frames per second.

25
00:01:23.060 --> 00:01:26.760
It becomes areas of motion or
areas of change

26
00:01:26.760 --> 00:01:31.460
that look a lot more like this if I
had to visually represent them to you.

27
00:01:31.460 --> 00:01:36.422
Doing my best here without having to
bring up a whole like I'm going to

28
00:01:36.422 --> 00:01:38.230
take the place of [LAUGH].

29
00:01:38.230 --> 00:01:41.219
We're going to do like a Nova
special where I'll be like,

30
00:01:41.219 --> 00:01:45.552
hi I'm Rachel Neighbors, and today we're
going to go on a magical experience where

31
00:01:45.552 --> 00:01:50.310
we're going to learn how your human
visual system processes information.

32
00:01:50.310 --> 00:01:51.750
We're not doing that today.

33
00:01:51.750 --> 00:01:54.260
So, I will just show you with words and

34
00:01:54.260 --> 00:01:57.860
pictures as best as I can and
not do any mind blowing.

35
00:01:59.700 --> 00:02:03.980
So there is this lovely,
this is done in Animation too, and

36
00:02:03.980 --> 00:02:07.650
this might be copyrighted material so
the videos might have this blanked out.

37
00:02:07.650 --> 00:02:10.710
But if you go to
animationsmears.tumblr.com,

38
00:02:10.710 --> 00:02:16.460
you can see some examples of
how this is done in animation.

39
00:02:16.460 --> 00:02:19.710
For instance this is
from Totally Spies and

40
00:02:19.710 --> 00:02:23.560
you can see that this is a single
frame from Totally Spies and

41
00:02:23.560 --> 00:02:27.030
you can see how our hands are moving
all around in this one frame.

42
00:02:27.030 --> 00:02:30.415
It makes it look like it's happening
really fast when you're playing these at

43
00:02:30.415 --> 00:02:31.507
24 frames per second.

44
00:02:31.507 --> 00:02:34.000
And the human eye is
totally taken in by this,

45
00:02:34.000 --> 00:02:36.897
cuz that's a lot like how
it's processing images.

46
00:02:41.315 --> 00:02:44.699
&gt;&gt; Rachel Nabors: So,
&gt;&gt; Rachel Nabors: [COUGH] More

47
00:02:44.699 --> 00:02:48.950
than anything,
consistency is the more important thing.

48
00:02:48.950 --> 00:02:51.590
It doesn't matter if you're
hitting 60 frames per second for

49
00:02:51.590 --> 00:02:56.030
some of your animations if others of
them fall down to 30 frames per second.

50
00:02:56.030 --> 00:02:58.910
The human eye will notice
that inconsistency and

51
00:02:58.910 --> 00:03:00.200
it will pay attention to it.

52
00:03:00.200 --> 00:03:04.280
It's not like you're cool so long as
you most of the times hit this goal.

53
00:03:04.280 --> 00:03:06.920
If you're not gonna make 60 frames
per second, you should aim for

54
00:03:06.920 --> 00:03:09.130
30 frames per second and stick to that.

55
00:03:10.520 --> 00:03:12.460
You might wanna add some motion blurs.

56
00:03:12.460 --> 00:03:14.610
I did see a really cute game once made for

57
00:03:14.610 --> 00:03:19.620
Firefox OS, where they had added
motion blurs to all the sprites.

58
00:03:19.620 --> 00:03:21.740
And they had capped

59
00:03:23.430 --> 00:03:28.370
the frame rate to 30 frames per second,
using requestAnimationFrame.

60
00:03:28.370 --> 00:03:32.930
And it played very smoothly,
because, a lot like a movie,

61
00:03:32.930 --> 00:03:37.510
each one of those limited numbers of
frames had a large area of motion.

62
00:03:37.510 --> 00:03:38.960
So the eye was able to interpret it.

63
00:03:40.370 --> 00:03:44.405
When we move things really fast across
the screen, say at 60 frames per second,

64
00:03:44.405 --> 00:03:48.031
what we're hoping is that we'll move
them fast enough that the eye won't

65
00:03:48.031 --> 00:03:50.860
be able to depict an individual
picture standing alone.

66
00:03:50.860 --> 00:03:52.752
You may have noticed earlier,

67
00:03:52.752 --> 00:03:57.189
when i was trying to show the ball
rolling across the screen, there was,

68
00:03:57.189 --> 00:04:01.380
if you look closely, there was
a time where it almost looked janky.

69
00:04:01.380 --> 00:04:03.720
Where it was like here was the ball,
and then the ball was here, and

70
00:04:03.720 --> 00:04:07.610
then it was here, it was moving really
fast from one section to the other.

71
00:04:07.610 --> 00:04:12.720
When you move things over large distances
really quickly, say 60 frames per second,

72
00:04:12.720 --> 00:04:15.110
it's gotta move from this side
of the wall to that side of

73
00:04:16.270 --> 00:04:17.840
the wall in 300 milliseconds.

74
00:04:19.800 --> 00:04:24.820
You're probably going to have great big
gaps of white in between those frames,

75
00:04:24.820 --> 00:04:28.140
as it races to the other side,
there's no blur there.

76
00:04:28.140 --> 00:04:33.060
And this is where that 60 frames per
second goal starts breaking down

77
00:04:33.060 --> 00:04:37.600
in large displays and yes.

78
00:04:37.600 --> 00:04:42.582
So, it's important to remember if you're
moving something across a large space,

79
00:04:42.582 --> 00:04:47.001
for instance, you've got a really big
display outdoors at a Cinemaplex or

80
00:04:47.001 --> 00:04:51.843
something, you might need to manually add
motion blurs to your images to make sure

81
00:04:51.843 --> 00:04:54.046
that it doesn't come across janky.

82
00:04:54.046 --> 00:04:59.452
60 frames per second doesn't look that
great if you've got a few frames and

83
00:04:59.452 --> 00:05:01.377
thousands of pixels to go.

84
00:05:05.793 --> 00:05:09.090
&gt;&gt; Rachel Nabors: Also I do
wanna point out one other thing.

85
00:05:09.090 --> 00:05:12.200
You may have noticed that
VR is coming into vogue and

86
00:05:12.200 --> 00:05:14.630
everyone is talking
about VR in the browser.

87
00:05:15.670 --> 00:05:20.859
Well, it's also come to be apparent
that we need to be hitting 90 frames

88
00:05:20.859 --> 00:05:25.799
per second for those experiences to
feel realistic and performent and

89
00:05:25.799 --> 00:05:30.589
non-janky, it's really,
really apparent in the VR head space.

90
00:05:30.589 --> 00:05:35.125
60 frames per second is sort of like this
arbitrary hardware/development limit that

91
00:05:35.125 --> 00:05:37.944
was set there because it was
good enough for screens and

92
00:05:37.944 --> 00:05:40.710
why bother making it more efficient.

93
00:05:40.710 --> 00:05:43.640
Now we're seeing browser developers
scramble to start hitting

94
00:05:43.640 --> 00:05:45.040
90 frames per second marks.

95
00:05:45.040 --> 00:05:47.170
So if you think 60 frames
per second is good enough,

96
00:05:47.170 --> 00:05:49.660
because it mimics the human eye,
it doesn't.

97
00:05:49.660 --> 00:05:52.810
It doesn't mimic the human eye,
motion blurs are closer to that.

98
00:05:52.810 --> 00:05:57.028
60 frames per second is just a nice
benchmark we try to get to to make

99
00:05:57.028 --> 00:06:00.062
ourselves feel better,
but it is not the be all,

100
00:06:00.062 --> 00:06:03.670
end all solution to your performance woes.

101
00:06:03.670 --> 00:06:07.880
It's all about context and consistency.

102
00:06:07.880 --> 00:06:12.684
So, that said, we can still have a look at
the frames per second at any given time

103
00:06:12.684 --> 00:06:14.429
using Chrome's Dev Tools.

104
00:06:15.780 --> 00:06:17.780
The instructions are on this slide.

105
00:06:17.780 --> 00:06:21.310
They may change in the future, because
Dev Tools tend to move things around.

106
00:06:21.310 --> 00:06:25.690
But this frames per second meter tends
to be in the same place every time.

107
00:06:25.690 --> 00:06:28.780
Rather than read the instructions to you,
I'm gonna show you how to do it.

108
00:06:30.570 --> 00:06:38.480
And I'm gonna show you using my site, cuz
how else would you want to investigate.

109
00:06:40.020 --> 00:06:43.680
It's really good too,
cuz every time I get to check this out,

110
00:06:43.680 --> 00:06:47.630
I get to see how my performance is doing
with the latest browser iteration.

111
00:06:47.630 --> 00:06:52.320
So, we've got our Dev Tools open,
we used Cmd or Ctrl + Alt + I.

112
00:06:52.320 --> 00:06:58.293
Now we're gonna hit Esc to
bring up the Console [SOUND].

113
00:06:58.293 --> 00:07:01.935
Now in the Console, what are we gonna do?

114
00:07:01.935 --> 00:07:04.517
[SOUND] Rendering, there we go.

115
00:07:04.517 --> 00:07:08.385
We use the three little dots, if you don't
already see it when a Rendering tab open,

116
00:07:08.385 --> 00:07:11.019
use the three little dots and
look for the Rendering tab.

117
00:07:11.019 --> 00:07:16.020
You grab it and you're gonna check
this box next to Show FPS meter.

118
00:07:16.020 --> 00:07:19.250
And boom, we get this lovely little meter
up here which is showing us how many

119
00:07:19.250 --> 00:07:21.530
frames per second we have going.

120
00:07:21.530 --> 00:07:25.590
You might say, Rachel it's showing your
site's happening at ten frames per second,

121
00:07:25.590 --> 00:07:26.990
that's so bad.

122
00:07:26.990 --> 00:07:31.680
I should remind you that right now
that spinner is only happening at ten

123
00:07:31.680 --> 00:07:33.042
frames per second.

124
00:07:33.042 --> 00:07:35.290
It's very slow animation.

125
00:07:35.290 --> 00:07:37.360
It's not trying to run
at 60 frames per second,

126
00:07:37.360 --> 00:07:42.050
it is literally only changing
the screen 10 times a second.

127
00:07:42.050 --> 00:07:43.710
So that's why it looks so low.

128
00:07:43.710 --> 00:07:45.590
Watch what happens when I start scrolling.

129
00:07:45.590 --> 00:07:49.160
You'll see that the 60 frames,
we start going much higher.

130
00:07:49.160 --> 00:07:52.510
We start seeing averages
up around like 50 and 60,

131
00:07:52.510 --> 00:07:57.490
that's how many times the screen
is being repainted per second

132
00:07:57.490 --> 00:08:02.400
as I'm engaging in this
native scrolling animation.

133
00:08:02.400 --> 00:08:06.659
Now let's see what happens when I
start playing with my side bar.

134
00:08:09.138 --> 00:08:11.877
&gt;&gt; Rachel Nabors: [SOUND] Let's
watch what happens to that meter.

135
00:08:11.877 --> 00:08:15.588
Whoosh, whoosh, whoosh,

136
00:08:15.588 --> 00:08:19.928
very nice, also sound effects.

137
00:08:19.928 --> 00:08:22.974
So that can be kind of a nice way
to just see what's happening,

138
00:08:22.974 --> 00:08:24.567
but it's not very conclusive.

139
00:08:24.567 --> 00:08:27.699
And it should also be mentioned that
these are browser Dev Tools, and

140
00:08:27.699 --> 00:08:31.750
that the very act of observing something's
performance often has a performance cost.

141
00:08:31.750 --> 00:08:35.360
So keep that in mind as we
go forward with these tools.

142
00:08:35.360 --> 00:08:38.760
They are not always the best
way to test for performance.

143
00:08:38.760 --> 00:08:42.090
Sometimes you just have to run
JavaScript in the background

144
00:08:42.090 --> 00:08:43.570
that actually checks this sort of thing.

145
00:08:45.220 --> 00:08:47.490
Let's try using this in
some wonderful new places.

146
00:08:48.510 --> 00:08:51.120
Here's a little animation
I did way back in the day.

147
00:08:51.120 --> 00:08:53.512
There is music for this,
it's really cool music, but

148
00:08:53.512 --> 00:08:55.852
we're not gonna listen to it today,
because it's so

149
00:08:55.852 --> 00:08:58.453
cool that it is distracting and
I want you to pay attention.

150
00:08:58.453 --> 00:09:01.530
So you gonna hit play, and
the music will start here.

151
00:09:01.530 --> 00:09:05.770
You can totally listen to this on your
own, but for now let's open it up

152
00:09:07.910 --> 00:09:11.430
and go to the Rendering tab,
show the frames per second meter.

153
00:09:11.430 --> 00:09:14.320
Let's watch what happens, cuz it's
gonna start moving really fast soon,

154
00:09:14.320 --> 00:09:16.100
there's a beat drop in here.

155
00:09:16.100 --> 00:09:17.880
It's going 60 frames per second right now,

156
00:09:17.880 --> 00:09:21.164
this looks really good on
my tricked out MacBook Pro.

157
00:09:21.164 --> 00:09:24.190
Just a couple of changes and
then the change is gonna come.

158
00:09:24.190 --> 00:09:25.800
There it goes, it's going much faster now.

159
00:09:26.800 --> 00:09:30.020
And you might be noticing that up in
the frames per second meter every once in

160
00:09:30.020 --> 00:09:33.590
a while it starts, yeah,
that's not very smooth.

161
00:09:33.590 --> 00:09:35.840
Now it's trying to move
everything much faster.

162
00:09:35.840 --> 00:09:37.360
Things are starting to get a little janky.

163
00:09:37.360 --> 00:09:40.230
These are all background
position animations by the way.

164
00:09:40.230 --> 00:09:42.750
I did not make these using transforms.

165
00:09:42.750 --> 00:09:44.726
They ran a lot better back in the day.

166
00:09:44.726 --> 00:09:47.801
They don't run so great now.

167
00:09:47.801 --> 00:09:52.168
[SOUND] alright, alright,
I'm gonna move over into Keynote.

168
00:09:52.168 --> 00:09:57.110
It's also fun to go to sites like CSS
Awards and go to some of their favorite

169
00:09:57.110 --> 00:10:01.820
this won an award type sites, and
check those out with the dev tools.

170
00:10:01.820 --> 00:10:02.540
I enjoy doing that.

