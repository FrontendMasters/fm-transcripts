WEBVTT

1
00:00:00.000 --> 00:00:03.776
[MUSIC]

2
00:00:03.776 --> 00:00:05.109
&gt;&gt; Speaker 1: The question is from Kevin.

3
00:00:05.109 --> 00:00:10.024
And it is instead of using tuna
clones what would be the context

4
00:00:10.024 --> 00:00:13.522
you would recommend
tuna being singular and

5
00:00:13.522 --> 00:00:18.760
having Skrollr switched to
a different background?

6
00:00:18.760 --> 00:00:24.860
&gt;&gt; Rachel Nabors: So the issue with tuna
is that tuna in the instance back there,

7
00:00:24.860 --> 00:00:29.680
you saw that tuna was actually
composed of three different tunas.

8
00:00:29.680 --> 00:00:31.750
There was the line work,

9
00:00:31.750 --> 00:00:35.910
there was a black tuna that blotted
out a glowing layer as well.

10
00:00:35.910 --> 00:00:41.340
So three tunas, the line work,
the glow and the blackness.

11
00:00:41.340 --> 00:00:46.873
Now, could you have made
that a single element and

12
00:00:46.873 --> 00:00:50.835
had Skrollr change that into tuna?

13
00:00:50.835 --> 00:00:54.629
The issue is that you need
those three elements.

14
00:00:55.850 --> 00:00:59.950
I can't actually think of a way that I
could do it with only two, without having

15
00:00:59.950 --> 00:01:06.930
maybe say a pseudo-class with
a background image of the grinning tuna.

16
00:01:06.930 --> 00:01:10.230
And then the regular
element of the black tuna.

17
00:01:10.230 --> 00:01:14.040
And then using Skrollr to
animate the opacity of well,

18
00:01:14.040 --> 00:01:17.100
you can't use Skrollr on
pseudo-elements so you can't.

19
00:01:17.100 --> 00:01:19.488
Pseudo-elements are CSS only thing.

20
00:01:19.488 --> 00:01:24.688
All right so, you can't change the
background position on the single element

21
00:01:24.688 --> 00:01:31.220
with Skrollr without it actually scrolling
the background element in a direction.

22
00:01:31.220 --> 00:01:35.455
So in this case with Skrollr you would
have to use at least two elements,

23
00:01:35.455 --> 00:01:37.161
physical elements to do it.

24
00:01:39.644 --> 00:01:41.520
&gt;&gt; Rachel Nabors: I hope
I answered his question.

25
00:01:41.520 --> 00:01:42.730
It's a good question but

26
00:01:42.730 --> 00:01:46.090
there are physical limitations
to what you can do with Skrollr.

27
00:01:46.090 --> 00:01:48.290
Doesn't work on pseudo-elements and

28
00:01:48.290 --> 00:01:52.370
you can't use background,
you can't fade background positions.

29
00:01:52.370 --> 00:01:55.832
So if you're gonna use
a background image for something,

30
00:01:55.832 --> 00:01:59.803
you have to change the opacity of
the whole thing if you wanna fade.

31
00:01:59.803 --> 00:02:03.141
&gt;&gt; Speaker 3: What if you change
the actual background image?

32
00:02:03.141 --> 00:02:06.939
&gt;&gt; Rachel Nabors: You can't
animate a background image change.

33
00:02:06.939 --> 00:02:12.291
It's one of those unanimatable
things like display.

34
00:02:12.291 --> 00:02:14.362
But that's a good question.

35
00:02:14.362 --> 00:02:16.640
What would the animation look like?

36
00:02:16.640 --> 00:02:18.610
&gt;&gt; Speaker 4: You can't
animate an image source.

37
00:02:18.610 --> 00:02:21.250
&gt;&gt; Rachel Nabors: Nope, can't animate
an image source on a background.

38
00:02:22.650 --> 00:02:24.840
All right, good question.

39
00:02:24.840 --> 00:02:26.530
Hope the answer was good too.

40
00:02:28.510 --> 00:02:31.190
Now, not every element

41
00:02:31.190 --> 00:02:35.880
that we wanna animate is gonna go simply
from one state to another, on off, etc.

42
00:02:35.880 --> 00:02:41.850
Sometimes we wanna run two different
animations in rapid succession.

43
00:02:41.850 --> 00:02:42.790
What do those look like?

44
00:02:42.790 --> 00:02:45.460
Well, there's this one
thing we can do called,

45
00:02:45.460 --> 00:02:48.229
I like to call it actually
animation stacking.

46
00:02:50.410 --> 00:02:51.980
Say we have the sequenced-thing.

47
00:02:51.980 --> 00:02:56.310
We have an element want to run two
animations one after the other on.

48
00:02:56.310 --> 00:02:59.440
We could do this technique called
animation stacking which is where we put

49
00:02:59.440 --> 00:03:03.284
a delay on the second animation so
that it runs after the first is completed.

50
00:03:03.284 --> 00:03:09.512
Here sequence1 takes one second for
each iteration, it runs twice.

51
00:03:09.512 --> 00:03:15.760
So sequence2, it has a two second
duration, two second delay.

52
00:03:17.160 --> 00:03:20.330
Because it's waiting two times
one second before it runs.

53
00:03:21.560 --> 00:03:23.310
This works all right, I've used it before.

54
00:03:24.370 --> 00:03:27.338
Specifically on this particular animation.

55
00:03:29.947 --> 00:03:32.870
&gt;&gt; Rachel Nabors: Notice he
goes from walking to running.

56
00:03:32.870 --> 00:03:39.220
If we take a look at the Editor,
we can see

57
00:03:41.460 --> 00:03:45.852
just in the CSS that we've
got these walk-cycles,

58
00:03:45.852 --> 00:03:50.260
a walk-to-run cycle and
a run cycle stacked on top of each other.

59
00:03:51.840 --> 00:03:56.148
So the walk-cycle he does it twice
to one second long animation.

60
00:03:56.148 --> 00:04:00.904
So the walk-to-run sequence doesn't
run until two seconds later.

61
00:04:00.904 --> 00:04:05.538
And the run-cycle has a two point
seventy five second delay on it,

62
00:04:05.538 --> 00:04:08.874
because the walk-to-run cycle is 0.75.

63
00:04:08.874 --> 00:04:13.028
So it keeps that duration,
the delay keeps being

64
00:04:13.028 --> 00:04:18.320
accumulative addition of
the previous durations behind it.

65
00:04:18.320 --> 00:04:21.380
And it's all very simple,
I'm sure if you build a fancy SAS mix

66
00:04:21.380 --> 00:04:25.340
in to handle your animation stacking for
you but there are some downsides.

