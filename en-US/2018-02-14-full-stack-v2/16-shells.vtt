WEBVTT

1
00:00:00.164 --> 00:00:03.524
&gt;&gt; Jem Young: Let's talk
a bit about shells.

2
00:00:03.524 --> 00:00:05.915
What is a shell?

3
00:00:05.915 --> 00:00:07.003
A seashell.

4
00:00:07.003 --> 00:00:12.047
A shell as we said before is a wrapper
around a bunch of processes.

5
00:00:12.047 --> 00:00:15.851
It's the shell runs some sort of
application, entered after the kernel and

6
00:00:15.851 --> 00:00:17.584
then spits back out, that's it.

7
00:00:17.584 --> 00:00:20.740
The shell does not directly
talk to the kernel, generally.

8
00:00:20.740 --> 00:00:23.450
You don't want to do that
computers are complicated,

9
00:00:23.450 --> 00:00:25.790
that's probably the best
way of putting it.

10
00:00:25.790 --> 00:00:29.060
We don't write binary we can't understand
exactly what is going on all the time so

11
00:00:29.060 --> 00:00:30.670
we have an application to do it for us.

12
00:00:30.670 --> 00:00:32.300
The shell is just a nice
wrapper around that.

13
00:00:33.470 --> 00:00:38.014
So if we want to show our current shell
we're gonna say echo $ 0 let's go run

14
00:00:38.014 --> 00:00:39.651
that see what's going on.

15
00:00:42.683 --> 00:00:44.178
&gt;&gt; Jem Young: Echo dollar sign zero,

16
00:00:44.178 --> 00:00:48.823
and we're running Bash, which you
should all be running Bash right now.

17
00:00:48.823 --> 00:00:51.103
If you're not,
you did something very, very wrong.

18
00:00:51.103 --> 00:00:56.492
Bash is the standard.

19
00:00:56.492 --> 00:00:57.061
Talk about change?

20
00:00:57.061 --> 00:00:59.740
No, so talk a little bit about Bash.

21
00:00:59.740 --> 00:01:05.140
Bash is a standard of Come on a lot
of popular warning distributions.

22
00:01:05.140 --> 00:01:06.700
There's a lot of different shells.

23
00:01:06.700 --> 00:01:11.500
There's, so there's the born shell which
is the original written by I wanted

24
00:01:11.500 --> 00:01:12.460
to say Jason Borne.

25
00:01:12.460 --> 00:01:16.250
Because in the movie but I know it's
not Jason, so someone name Borne.

26
00:01:16.250 --> 00:01:19.440
He wrote the bash shell,
or he wrote a shell.

27
00:01:19.440 --> 00:01:22.420
But there's also seashell.

28
00:01:22.420 --> 00:01:24.500
Now that's C shell,
that's C shell as in C-Shell.

29
00:01:24.500 --> 00:01:28.400
There's Z shell, there's Fish shell.

30
00:01:28.400 --> 00:01:32.170
There's a lot of different shells,

31
00:01:32.170 --> 00:01:35.710
I have a link somewhere in there
about the different between shells.

32
00:01:35.710 --> 00:01:39.030
Which I kind of opening for
google, which is a lie.

33
00:01:40.880 --> 00:01:42.832
Comparison of command shells.

34
00:01:42.832 --> 00:01:45.858
Yeah.
There's a few.

35
00:01:45.858 --> 00:01:49.370
But this is a practical course.

36
00:01:49.370 --> 00:01:52.111
Don't worry about [LAUGH] don't worry
about the different types for now.

37
00:01:52.111 --> 00:01:53.447
So we're on shells.

38
00:01:53.447 --> 00:01:54.535
So we know we're running the BAS shell.

39
00:01:54.535 --> 00:01:58.104
The BAS shell is short for
the born again shell.

40
00:01:58.104 --> 00:02:00.921
So it's, the born shell was
one of the originals, and

41
00:02:00.921 --> 00:02:03.640
it's just a better version
of the born shell.

42
00:02:03.640 --> 00:02:08.500
There's also seashell which is,
it's a bit more towards the user input,

43
00:02:08.500 --> 00:02:09.780
things like that.

44
00:02:09.780 --> 00:02:13.680
There is FishShell, TSH, I don't
actually know what the difference is.

45
00:02:13.680 --> 00:02:14.800
There is a lot of them.

46
00:02:14.800 --> 00:02:17.440
In general you got to
want to write bash and

47
00:02:17.440 --> 00:02:20.120
use bash shells because bash protectible,
we know how it works.

48
00:02:20.120 --> 00:02:23.770
It has auto-completion, it has history,
it has a lot of nice features to it.

49
00:02:23.770 --> 00:02:26.227
And Bash is just the standard.

50
00:02:26.227 --> 00:02:31.250
But if you wanted to, some people do,
we can, let's just change those real fast.

51
00:02:31.250 --> 00:02:32.792
Kind of useful to know all of them.

52
00:02:32.792 --> 00:02:34.698
So if you cat /etc/shells,

53
00:02:34.698 --> 00:02:38.595
it'll show you all the shells
that are available on your OS.

54
00:02:38.595 --> 00:02:40.750
All right, I'm gonna go ahead and

55
00:02:40.750 --> 00:02:44.847
change to the SH shell,
it's real fast and I'll change it back.

56
00:02:44.847 --> 00:02:52.592
Let's go with cat slash etc slash shells.

57
00:02:52.592 --> 00:02:54.040
It even tells you valid login shells.

58
00:02:54.040 --> 00:02:58.596
So if you wanna change to Tmax or screen,
I don't actually know what screen is,

59
00:02:58.596 --> 00:03:00.025
don' know everything.

60
00:03:00.025 --> 00:03:01.545
But you could if you wanted to, and

61
00:03:01.545 --> 00:03:03.917
this is just saying these
are things you can log in as.

62
00:03:03.917 --> 00:03:06.701
You can set your shell to this and
you'll be able to log in just fine.

63
00:03:06.701 --> 00:03:12.661
So if we wanna change the shell say change

64
00:03:12.661 --> 00:03:18.454
shell -s bin, change it to sh, cool.

65
00:03:18.454 --> 00:03:22.134
Now, because we're in a shell
we won't see any changes yet.

66
00:03:22.134 --> 00:03:23.651
So what we're gonna do
is we're gonna cheat.

67
00:03:23.651 --> 00:03:27.196
And we're just gonna switch
to our user again, but

68
00:03:27.196 --> 00:03:30.912
we're actually opening up
a new instance of a shell.

69
00:03:30.912 --> 00:03:34.397
No more friendly directory or
things like that, and if you notice, if

70
00:03:34.397 --> 00:03:38.427
you go up on the keyboard, its not history
anymore cuz this is a different shell.

71
00:03:38.427 --> 00:03:41.177
This is one of the things bass
gives you the up arrow gives you

72
00:03:41.177 --> 00:03:42.727
which you've already written.

73
00:03:42.727 --> 00:03:47.588
And if we say echo let's
see i it works here, yeah.

74
00:03:47.588 --> 00:03:49.020
Where we see we're in the shell.

75
00:03:49.020 --> 00:03:54.408
Now if we wanna exit out, we're back to
our normal shell that we were in before.

76
00:03:58.191 --> 00:04:00.455
&gt;&gt; Jem Young: But
don't forget this last step.

77
00:04:00.455 --> 00:04:03.512
Because you will log in, and
you'll be like what's happening?

78
00:04:03.512 --> 00:04:05.400
What happened to that,
all this friendliness?

79
00:04:05.400 --> 00:04:06.480
'Cuz we changed our shell.

80
00:04:06.480 --> 00:04:09.260
So when you exit and log back in,
gonna have a new shell.

81
00:04:09.260 --> 00:04:10.100
Let's keep it at BASH.

82
00:04:10.100 --> 00:04:15.840
So let's just say,
change shell dash s bin bash.

83
00:04:16.900 --> 00:04:19.100
And now we're good to go.

84
00:04:19.100 --> 00:04:22.960
If I su test, yeah, still in bash, cool.

85
00:04:22.960 --> 00:04:27.481
But we notice when we switch users we're
always opening another instance of

86
00:04:27.481 --> 00:04:28.195
the shell.

87
00:04:28.195 --> 00:04:32.358
That means any process running by my
former user is still running just

88
00:04:32.358 --> 00:04:33.012
the same.

89
00:04:33.012 --> 00:04:40.183
So when I switch to root I can exit
I'm in a new shell running as root.

90
00:04:40.183 --> 00:04:43.504
But if I exit I'm back in
my normal shell again.

91
00:04:43.504 --> 00:04:44.520
You can keep going all day.

92
00:04:44.520 --> 00:04:47.421
I don't know how many shells you can open
before it starts complaining to you but

93
00:04:47.421 --> 00:04:49.119
you exit exit exit you're
still in the shell.

94
00:04:50.400 --> 00:04:52.950
Okay, everybody understand
shells a little bit more and

95
00:04:52.950 --> 00:04:56.220
kind of just they're a wrapper around
the kernel, just a friendlier interface?

96
00:04:56.220 --> 00:04:58.480
And we have different
ways to change shells.

97
00:04:58.480 --> 00:05:00.060
I don't recommend it unless
you know what you're doing.

98
00:05:00.060 --> 00:05:06.140
But some people do, some people like
the nuances of other shells, cool.

99
00:05:06.140 --> 00:05:09.240
&gt;&gt; Speaker 2: Is anyone else
seeing it just not change?

100
00:05:09.240 --> 00:05:11.120
When you do chsh.

101
00:05:11.120 --> 00:05:14.550
&gt;&gt; Jem Young: Did you change, so you have
to open a new shell with that user, so

102
00:05:14.550 --> 00:05:16.180
if you SU your user name.

103
00:05:16.180 --> 00:05:16.830
&gt;&gt; Speaker 2: Okay.
Gotcha.

104
00:05:19.360 --> 00:05:24.140
&gt;&gt; Jem Young: You should see a new shell,
and make sure you change it back, though.

105
00:05:24.140 --> 00:05:28.396
So change shell dash s bin dash
&gt;&gt; Jem Young: And

106
00:05:28.396 --> 00:05:32.225
if you wanna look, compare some of
the command shells, there's a lot of them.

107
00:05:32.225 --> 00:05:33.593
Again, this is an intro class.

108
00:05:33.593 --> 00:05:37.109
I wouldn't worry about it for now,
but in the future, if you get really,

109
00:05:37.109 --> 00:05:40.477
really good, you might say,
I wanna run the fish shell cuz I'm cool.

110
00:05:40.477 --> 00:05:41.820
And I'll be like, you're cool.

111
00:05:41.820 --> 00:05:42.746
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Jem Young: I don't even

112
00:05:42.746 --> 00:05:44.815
know the difference but that's awesome.

