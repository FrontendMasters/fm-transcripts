WEBVTT

1
00:00:00.006 --> 00:00:01.318
&gt;&gt; Jem: Let's talk about
automated deployments.

2
00:00:01.318 --> 00:00:03.857
So we're stepping away
from containers now.

3
00:00:03.857 --> 00:00:07.945
We're talking about automating a standard
server, just like a server we brought up.

4
00:00:07.945 --> 00:00:09.942
There are better ways to do it.

5
00:00:09.942 --> 00:00:13.283
So instead of going through step one,
we did this, step two, we did this,

6
00:00:13.283 --> 00:00:13.877
step three.

7
00:00:13.877 --> 00:00:15.142
And it's kind of tedious.

8
00:00:15.142 --> 00:00:17.894
If you're thinking there has
to be a better way, there is.

9
00:00:17.894 --> 00:00:21.540
We did it by hand because if I did it for
you, you wouldn't learn anything.

10
00:00:21.540 --> 00:00:25.145
But now that you know and you
understand the commands you're running,

11
00:00:25.145 --> 00:00:27.682
you could run automation
tools that do it for you.

12
00:00:27.682 --> 00:00:32.427
You wanna bring up 50 instances of
the MySQL Nodes server that you just did,

13
00:00:32.427 --> 00:00:35.426
we can do that with Ansible or
Vagrant or Puppet.

14
00:00:35.426 --> 00:00:38.829
They're all a little bit different,
but in general, think of it,

15
00:00:38.829 --> 00:00:43.089
they have their own kinda languages they
use, different nuances, nomenclature.

16
00:00:43.089 --> 00:00:45.746
But at the core,
it's just bringing up a server, and

17
00:00:45.746 --> 00:00:47.409
it brings up 50 of them at once.

18
00:00:47.409 --> 00:00:48.756
And it automates all these things.

19
00:00:48.756 --> 00:00:51.623
So you want to create a user
that has your ssh key, so

20
00:00:51.623 --> 00:00:53.772
you can ssh into anyone's instance.

21
00:00:53.772 --> 00:00:55.954
You'd do it with automating
your deployments.

22
00:00:55.954 --> 00:01:00.296
Cuz no DevOps person worth their
salt is gonna be doing this by hand.

23
00:01:00.296 --> 00:01:01.272
That's a waste of time.

24
00:01:01.272 --> 00:01:05.614
And being a computer programmer is about
optimizing what the computer can do.

25
00:01:05.614 --> 00:01:06.868
So I can do less.

26
00:01:06.868 --> 00:01:09.653
For now I'm gonna use Vagrant as example,
Vagrant is just one.

27
00:01:09.653 --> 00:01:12.719
There's chef, there's Puppet, there's all
these other tools than can do it for you.

28
00:01:12.719 --> 00:01:17.593
Yeah, this is where DevOps
people tend to get really heated

29
00:01:17.593 --> 00:01:20.230
about their tool that they use.

30
00:01:20.230 --> 00:01:21.775
They're very particular.

31
00:01:21.775 --> 00:01:25.124
Which you tend to be as a DevOps person,
because you have your server just right

32
00:01:25.124 --> 00:01:28.185
and you're like, Vagrant is better
than Chef because of this or this.

33
00:01:28.185 --> 00:01:30.866
I couldn't tell you they'll
fine grain differences.

34
00:01:30.866 --> 00:01:34.477
But find your DevOps person and ask them
a question, they'll probably tell you.

35
00:01:34.477 --> 00:01:37.496
They're probably using something
like this, like Ansible or Vagrant.

36
00:01:37.496 --> 00:01:39.876
But what does a Vagrant script look like?

37
00:01:39.876 --> 00:01:41.431
It's looks something like this.

38
00:01:41.431 --> 00:01:44.174
vagrant init,
I'm gonna bring up precise64,

39
00:01:44.174 --> 00:01:47.517
which I think is a copy of Ubuntu,
one of the older versions.

40
00:01:47.517 --> 00:01:49.618
And I just bring up a new script.

41
00:01:49.618 --> 00:01:52.590
It's gonna instantiate that with
all the users, all of my ssh keys.

42
00:01:52.590 --> 00:01:55.539
My ports are open, all of my
software is installed by default.

43
00:01:55.539 --> 00:01:57.153
And it just does that for you.

44
00:01:57.153 --> 00:01:59.214
That's what I mean by
automating deployments,

45
00:01:59.214 --> 00:02:02.644
where we can just bring up 100 machines
at once, 200, and take them down.

46
00:02:02.644 --> 00:02:06.965
That's what these tools are really
good at, that's what they're for.

