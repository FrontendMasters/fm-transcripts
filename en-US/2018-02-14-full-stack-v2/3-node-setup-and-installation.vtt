WEBVTT

1
00:00:00.000 --> 00:00:02.795
&gt;&gt; Jem Young: All right,
we switch to the test user.

2
00:00:02.795 --> 00:00:04.714
Here's where it gets
a little bit trickier.

3
00:00:04.714 --> 00:00:09.471
So if i were just to apt install node,
we'd get node4.

4
00:00:09.471 --> 00:00:13.275
Node4, it's good, it's the work horse,
it's been around for a while.

5
00:00:13.275 --> 00:00:17.825
We want node6,
that has better ES 2015 support.

6
00:00:17.825 --> 00:00:21.876
It's a little bit nicer, mpm3,
it's a little bit faster.

7
00:00:21.876 --> 00:00:22.768
So what are we doing here?

8
00:00:22.768 --> 00:00:27.434
This is kind of funky, and as always,
don't just copy paste things,

9
00:00:27.434 --> 00:00:30.374
let's kind of understand what is going on.

10
00:00:30.374 --> 00:00:33.006
Curl is a way of making HTTP requests.

11
00:00:33.006 --> 00:00:37.309
Interacting with everything,
interacting with other servers,

12
00:00:37.309 --> 00:00:39.626
other domains, things like that.

13
00:00:39.626 --> 00:00:45.195
And then we're piping that into bash.
&gt;&gt; Jem Young: Let's just copy this,

14
00:00:45.195 --> 00:00:48.409
and let's just copy the curl part,
and we'll see what's going on.

15
00:00:54.240 --> 00:00:55.290
&gt;&gt; Jem Young: Look at that,

16
00:00:55.290 --> 00:00:56.960
it's a shell script.

17
00:00:58.210 --> 00:00:59.180
That's pretty cool.

18
00:01:00.580 --> 00:01:04.840
So this is a shell script that says, hey,
if I'm [INAUDIBLE], I want the latest,

19
00:01:04.840 --> 00:01:06.294
I want the node6 package.

20
00:01:06.294 --> 00:01:08.290
And then I'm gonna do all the set up for
you.

21
00:01:08.290 --> 00:01:09.640
That's pretty nice of them to do that.

22
00:01:09.640 --> 00:01:11.630
In the old days you had to
manually build these things.

23
00:01:11.630 --> 00:01:12.570
Now we don't do that anymore.

24
00:01:15.040 --> 00:01:16.022
Everybody with me so far?

25
00:01:16.022 --> 00:01:22.596
All right, so
we wanna pipe this into a bash shell.

26
00:01:22.596 --> 00:01:25.508
So we're gonna say sudo -E,
preserve our environment, and

27
00:01:25.508 --> 00:01:28.770
we have to run this as sudo
because we're installing packages.

28
00:01:28.770 --> 00:01:32.730
Then we're gonna say
bash Now dash just says,

29
00:01:32.730 --> 00:01:38.970
nothing else is gonna come after this, so
ignore any output past what we pipe in.

30
00:01:38.970 --> 00:01:48.672
Just gonna run that,
&gt;&gt; Jem Young: Nice,

31
00:01:48.672 --> 00:01:53.370
all right.
&gt;&gt; Jem Young: Everybody with me so far?

32
00:01:53.370 --> 00:01:55.830
Wasn't too bad, a little scary,
lot of code there, but

33
00:01:55.830 --> 00:01:57.520
we're gonna slowly ramp up.

34
00:01:58.750 --> 00:02:03.944
What's our next step?
&gt;&gt; Jem Young: Also I forgot,

35
00:02:03.944 --> 00:02:05.780
I'm so smart, just kidding.

36
00:02:05.780 --> 00:02:10.200
I added a link to ExplainShell,
which is extremely useful.

37
00:02:10.200 --> 00:02:13.509
So you're saying, man, Jim is talking so
fast and he's going on and on and on, but

38
00:02:13.509 --> 00:02:15.309
I don't understand what's happening, but

39
00:02:15.309 --> 00:02:17.860
I'm too scared to ask him
a question about what's happening.

40
00:02:17.860 --> 00:02:21.881
Explainshell.com, it'll tell you
exactly the options we're passing.

41
00:02:21.881 --> 00:02:24.695
It doesn't work for everything,
they do their best.

42
00:02:24.695 --> 00:02:28.380
But for this instance, it's explaining
what the curl-S and L mean.

43
00:02:28.380 --> 00:02:32.855
Super useful link, bookmark it for the
future, if you're just running commands,

44
00:02:32.855 --> 00:02:36.777
you're reading a blog post and
you don't really get what's happening.

45
00:02:36.777 --> 00:02:44.109
ExplainShell, nice.
&gt;&gt; Jem Young: All right,

46
00:02:44.109 --> 00:02:48.444
so let's install Node.js, so

47
00:02:48.444 --> 00:02:55.718
sudo apt install nodejs.
&gt;&gt; Jem Young: Yes.

48
00:03:08.463 --> 00:03:10.445
&gt;&gt; Jem Young: And let's just make sure you

49
00:03:10.445 --> 00:03:15.576
have the right version installed, so
you should be on node6 something.

50
00:03:15.576 --> 00:03:19.969
If it's not 6.11.4 don't worry about it,
especially if you're watching this

51
00:03:19.969 --> 00:03:23.680
in the future, the node version
will likely be upgraded a bit.

52
00:03:23.680 --> 00:03:28.640
But for now, it should be on node6
something if you did things correctly.

53
00:03:28.640 --> 00:03:31.883
If you didn't you
probably installed node4.

54
00:03:31.883 --> 00:03:34.754
So if that's the case,
just go back and start over,

55
00:03:34.754 --> 00:03:37.792
it's not that bad.
&gt;&gt; Jem Young: And

56
00:03:37.792 --> 00:03:40.626
the benefit of doing it this way versus
the other way is we don't have to sim

57
00:03:40.626 --> 00:03:43.478
link node like we did in the first time,
it automatically does it for you.

58
00:03:43.478 --> 00:03:48.350
So now when I type node, it's node
versus before we had to type nodejs

59
00:03:48.350 --> 00:03:51.470
cuz node was some radio frequency package.

60
00:03:51.470 --> 00:03:53.704
Yes, I still don't know what it does,

61
00:03:53.704 --> 00:03:59.078
no one does.
&gt;&gt; Jem Young: Now this is where it gets

62
00:03:59.078 --> 00:04:04.392
tricky and why we use Ubuntu
1610 last time and not 1604.

63
00:04:04.392 --> 00:04:08.155
Cuz we're gonna have to do some
trickery because the way node installs,

64
00:04:08.155 --> 00:04:09.771
but let's just double check.

65
00:04:09.771 --> 00:04:14.441
So let's say npm config get prefix,

66
00:04:14.441 --> 00:04:23.390
npm config get prefix
&gt;&gt; Jem Young: Hm, /user, that's not good.

67
00:04:23.390 --> 00:04:24.220
In fact, it's so

68
00:04:24.220 --> 00:04:28.100
not good that I have a big warning
on here about why it's not good.

69
00:04:28.100 --> 00:04:33.600
Because this is a true tale from life
where I've locked myself out of my own,

70
00:04:33.600 --> 00:04:35.750
all of my files.

71
00:04:35.750 --> 00:04:39.686
So what's happening is
node installed into, or

72
00:04:39.686 --> 00:04:45.900
mpn in node installed into /user
instead of /bin /user my name.

73
00:04:45.900 --> 00:04:50.350
/user is the root directory for
all the user owned files.

74
00:04:50.350 --> 00:04:52.540
The problem is, actually I'll just
show you the problem right now.

75
00:04:52.540 --> 00:04:57.695
So I'll just say sudo npm

76
00:04:57.695 --> 00:05:02.120
i -g, say forever.

77
00:05:02.120 --> 00:05:08.494
Love forever.
&gt;&gt; Jem Young: What

78
00:05:08.494 --> 00:05:14.620
will happen?
&gt;&gt; Jem Young: A little slow.

79
00:05:14.620 --> 00:05:18.246
That's okay cuz we use it with sudo,
but the problem with that

80
00:05:18.246 --> 00:05:23.158
is now forever can only run as sudo, which
we don't want, we want to run as my user.

81
00:05:23.158 --> 00:05:28.302
So if I said mpn -i -g,
I don't know, say gulp.

82
00:05:36.044 --> 00:05:39.490
&gt;&gt; Jem Young: All these errors, why?

83
00:05:39.490 --> 00:05:41.882
Because it's trying to install
the /user which I don't own,

84
00:05:41.882 --> 00:05:44.630
I don't own permission
to write to that file.

85
00:05:44.630 --> 00:05:46.380
Only root does, we have to pseudo it, but

86
00:05:46.380 --> 00:05:49.430
we don't want to pseudo it because we
don't want to run nodules as root,

87
00:05:49.430 --> 00:05:53.859
that's pretty dangerous.
&gt;&gt; Jem Young: All right, so

88
00:05:53.859 --> 00:05:55.029
we're gonna fix this.

89
00:05:56.380 --> 00:05:59.320
But so
I'll just tell you embarrassing stories.

90
00:05:59.320 --> 00:06:01.742
Naive approach, so I was like,
I know what to do,

91
00:06:01.742 --> 00:06:03.960
I'll just change ownership to /user to me.

92
00:06:03.960 --> 00:06:05.170
All right, that's fine.

93
00:06:05.170 --> 00:06:06.710
But root can no longer write to that.

94
00:06:06.710 --> 00:06:09.910
So all those applications that I write
to /user no longer have permission, and

95
00:06:09.910 --> 00:06:12.610
my whole machine locked up and
I had to start over from beginning.

96
00:06:12.610 --> 00:06:15.951
Because I decided to change
ownership of /user to me.

97
00:06:15.951 --> 00:06:16.790
Don't wanna do that.

98
00:06:16.790 --> 00:06:21.562
That's why I have this large warning,
these are mistakes that I've made,

99
00:06:21.562 --> 00:06:22.840
learn from my pain.

100
00:06:22.840 --> 00:06:27.059
So what we're gonna do is
NPM has this already set up.

101
00:06:27.059 --> 00:06:30.292
The long and short of it is we're
gonna make it a local directory

102
00:06:30.292 --> 00:06:34.780
called NPM global where we're gonna
solve all of our global NPM packages.

103
00:06:34.780 --> 00:06:38.390
We're gonna change the prefix
on that to that directory.

104
00:06:38.390 --> 00:06:40.440
We're gonna add that to our
current environment, and

105
00:06:40.440 --> 00:06:44.520
then we're gonna restart the environment
just to make sure that all of our shells

106
00:06:44.520 --> 00:06:49.640
are referenced to where it
installed the new NPM modules.

107
00:06:49.640 --> 00:06:51.820
Don't worry, this is kinda gnarly,
this is why I was trying to avoid it.

108
00:06:51.820 --> 00:06:55.615
But it's not that bad, we understand
a bit more about how shells work,

109
00:06:55.615 --> 00:06:58.360
how servers work, how permissions work.

110
00:06:58.360 --> 00:06:59.030
It's not too bad.

111
00:06:59.030 --> 00:07:01.683
And then I will walk through
this just to make sure

112
00:07:01.683 --> 00:07:04.351
we're all on the same page.
&gt;&gt; Speaker 2: What does it mean by back on

113
00:07:04.351 --> 00:07:05.160
the command line?

114
00:07:05.160 --> 00:07:07.695
Did I leave the command line?
&gt;&gt; Jem Young: Yes,

115
00:07:07.695 --> 00:07:12.387
on step three we opened
a .profile near local.

116
00:07:12.387 --> 00:07:15.156
Don't worry, if you are a little
confused I will walk through,

117
00:07:15.156 --> 00:07:17.838
I will do this myself just to
make sure you know I'm not lying.

118
00:07:17.838 --> 00:07:21.402
I don't have a server set up a head of
time where I'm like, it's so easy guys,

119
00:07:21.402 --> 00:07:23.077
come on, [LAUGH] it's already done.

120
00:07:23.077 --> 00:07:25.180
No, I'm gonna suffer with you,
if we make mistakes,

121
00:07:25.180 --> 00:07:29.620
we will make them together.
&gt;&gt; Speaker 3: So

122
00:07:29.620 --> 00:07:34.018
we should do a touch.profile?
&gt;&gt; Jem Young: You could have one there

123
00:07:34.018 --> 00:07:36.588
already.
&gt;&gt; Speaker 3: Just in the home/user?

124
00:07:36.588 --> 00:07:40.752
&gt;&gt; Jem Young: Yeah, home directory, yeah,

125
00:07:40.752 --> 00:07:43.383
if you do it ls -la.

126
00:07:43.383 --> 00:07:46.833
la -la, yeah, you should see .profile in

127
00:07:46.833 --> 00:07:52.692
there.
&gt;&gt; Jem Young: So

128
00:07:52.692 --> 00:07:55.792
I'm gonna go ahead and do this.

129
00:07:55.792 --> 00:08:00.752
So we do it mkdir

130
00:08:00.752 --> 00:08:08.006
-/.npm-global.

131
00:08:08.006 --> 00:08:09.591
Cool, next step.

132
00:08:09.591 --> 00:08:11.695
Npm config set prefix.

133
00:08:35.792 --> 00:08:37.190
&gt;&gt; Jem Young: I'm gonna
cheat cuz I'm lazy.

134
00:08:38.800 --> 00:08:40.680
Wait, no, I took it out.

135
00:08:40.680 --> 00:08:42.310
Wait, no I didn't.

136
00:08:42.310 --> 00:08:43.900
It's gonna, I took it out.

137
00:08:43.900 --> 00:08:46.290
I try to copy paste code
cuz I'm lazy sometimes.

138
00:08:46.290 --> 00:08:48.210
But you shouldn't do that,
you should write it down.

139
00:08:48.210 --> 00:08:51.076
So now I have to do it
the old fashioned way,

140
00:08:51.076 --> 00:08:54.464
vi,
&gt;&gt; Jem Young: Profile, and

141
00:08:54.464 --> 00:08:56.640
where are we going?

142
00:08:58.250 --> 00:09:02.364
Skip to the end, and

143
00:09:02.364 --> 00:09:09.140
we're going to say export PATH,

144
00:09:09.140 --> 00:09:13.738
that's right, yes,

145
00:09:13.738 --> 00:09:18.832
=-/.npm-global.

146
00:09:24.219 --> 00:09:25.233
&gt;&gt; Jem Young: /bin.

147
00:09:28.614 --> 00:09:32.739
&gt;&gt; Jem Young: And $PATH.

148
00:09:32.739 --> 00:09:33.817
That right?

149
00:09:33.817 --> 00:09:35.874
Yes, that looks good.

150
00:09:35.874 --> 00:09:39.471
Then we're gonna save it, cool.

151
00:09:39.471 --> 00:09:41.901
Then we're just gonna say source,

152
00:09:41.901 --> 00:09:46.851
just gonna reload this from our profile,
it's gonna reload our shell.

153
00:09:46.851 --> 00:09:51.180
And now it should be able to pm i -g

154
00:09:51.180 --> 00:09:56.446
forever without having to pseudo that.

155
00:09:56.446 --> 00:09:57.387
So I did things correctly.

156
00:10:06.681 --> 00:10:08.570
&gt;&gt; Jem Young: Sweet.
&gt;&gt; Speaker 3: We should also be able to

157
00:10:08.570 --> 00:10:11.170
check that just by running the npm
config get prefix again, right?

158
00:10:11.170 --> 00:10:12.130
&gt;&gt; Jem Young: Yes, but

159
00:10:12.130 --> 00:10:17.426
I always like to just double check,
you never know.

160
00:10:17.426 --> 00:10:20.260
All right, everybody with me so far?

161
00:10:21.850 --> 00:10:23.770
People looked frustrated already.

162
00:10:23.770 --> 00:10:25.780
That's a record, 45 minutes in.

163
00:10:25.780 --> 00:10:29.150
Now, all right, everybody with me?

164
00:10:29.150 --> 00:10:33.350
We can install NPM modules
without using sudo, globally.

165
00:10:33.350 --> 00:10:33.850
Cool.

166
00:10:36.550 --> 00:10:39.750
So to recap what we did, we created
a local directory, something we own.

167
00:10:39.750 --> 00:10:42.780
We set MTM to use that for
the global installation directory.

168
00:10:42.780 --> 00:10:46.380
We put that in our environments,
we're gonna reload it so

169
00:10:46.380 --> 00:10:49.110
NPM always knows about it, and that's it.

170
00:10:49.110 --> 00:10:49.800
Cool.

171
00:10:49.800 --> 00:10:53.133
It looks like a lot, the first time I
ran into this I said, what's going on?

172
00:10:53.133 --> 00:10:55.010
But then you realize it's
actually not that bad.

173
00:10:55.010 --> 00:10:58.460
If you go to the actual node page it's
a bit longer, a bit more verbose, but

174
00:10:58.460 --> 00:11:02.440
we do things the easy way,
aka, the lazy way.

175
00:11:02.440 --> 00:11:07.810
And let's make sure forever
installed just like I did, npm -isg.

176
00:11:07.810 --> 00:11:08.580
What does forever do?

177
00:11:08.580 --> 00:11:09.602
Someone remind me,

178
00:11:09.602 --> 00:11:13.460
we used it in last course.
&gt;&gt; Speaker 4: It keeps the apps the app

179
00:11:13.460 --> 00:11:14.620
running continuously without

180
00:11:14.620 --> 00:11:16.620
having to keep a window open.
&gt;&gt; Jem Young: So

181
00:11:16.620 --> 00:11:18.897
you say it keeps the app running forever?

182
00:11:18.897 --> 00:11:21.012
&gt;&gt; Speaker 5: [LAUGH]
&gt;&gt; Speaker 4: Perhaps.

183
00:11:21.012 --> 00:11:21.790
&gt;&gt; Jem Young: Perhaps.

184
00:11:21.790 --> 00:11:24.337
Yes, excellent answer.
&gt;&gt; Speaker 4: Forever is very committing.

185
00:11:24.337 --> 00:11:24.970
&gt;&gt; Jem Young: Yes.

186
00:11:24.970 --> 00:11:26.642
&gt;&gt; Speaker 4: I am not willing to do that

187
00:11:26.642 --> 00:11:27.953
as a back end.
&gt;&gt; Jem Young: [LAUGH] But

188
00:11:27.953 --> 00:11:29.790
you have to though,
these things are important.

189
00:11:29.790 --> 00:11:32.757
You don't know how long your
server is gonna stay up.

190
00:11:32.757 --> 00:11:33.860
I've showed Jem rules.

191
00:11:33.860 --> 00:11:36.390
That's a Jem rule, that you don't know
how long your server's gonna be up.

192
00:11:36.390 --> 00:11:38.280
Give it a good name cuz
you might regret it later.

193
00:11:39.540 --> 00:11:41.120
That is a funny story.

194
00:11:41.120 --> 00:11:43.990
I worked at a analyst company
called Chart Beat a few years ago.

195
00:11:43.990 --> 00:11:48.238
And we just had silly names for
our servers, they didn't make any sense.

196
00:11:48.238 --> 00:11:50.008
And someone said, why is this?

197
00:11:50.008 --> 00:11:52.373
Because someone ten years
ago named them something and

198
00:11:52.373 --> 00:11:54.542
we had keep naming this
weird naming convention.

199
00:11:54.542 --> 00:11:58.609
And it made no sense, but the take away
is server names are important because you

200
00:11:58.609 --> 00:12:01.048
don't know how long
they're gonna be around.

201
00:12:01.048 --> 00:12:02.884
And as I said in the last course,

202
00:12:02.884 --> 00:12:05.955
make sure its contextual
about what the server does.

203
00:12:05.955 --> 00:12:07.300
This is just a simple web server.

204
00:12:07.300 --> 00:12:09.439
But in the future you might
have a database server,

205
00:12:09.439 --> 00:12:11.544
you might have a proxy server,
things like that.

206
00:12:11.544 --> 00:12:14.819
So you wanna make sure it's not just Jem1,
Jem2, Jemfoo1,

207
00:12:14.819 --> 00:12:18.884
Jemfoo2, cuz again, let's say you're
starting a billion dollar company,

208
00:12:18.884 --> 00:12:21.814
you don't know how long your
server's gonna be around.

209
00:12:21.814 --> 00:12:24.732
Hope you all start billion
dollar companies, and

210
00:12:24.732 --> 00:12:30.277
10% to me as your advisor.
&gt;&gt; Jem Young: All right,

211
00:12:30.277 --> 00:12:36.040
now let's change our working
directory to /var/www.

212
00:12:36.040 --> 00:12:39.340
If it doesn't exist,
let's go ahead and create it.

213
00:12:39.340 --> 00:12:48.376
Make 0/p/var/www if it doesn't exist.
&gt;&gt; Jem Young: Yes,

214
00:12:48.376 --> 00:12:51.103
you will have to pseudo in slash
var because that is owned by

215
00:12:51.103 --> 00:12:54.413
roots.
&gt;&gt; Jem Young: And

216
00:12:54.413 --> 00:12:57.915
because just lotion is nice, they include
Git for us, we don't have to install that.

217
00:12:57.915 --> 00:13:00.692
But if you watch in the future, Git may or

218
00:13:00.692 --> 00:13:05.044
may not be installed on your machine,
so just app install Git.

219
00:13:05.044 --> 00:13:11.863
And then we're just gonna clone
the simple node server that I built.

220
00:13:11.863 --> 00:13:15.409
And we're gonna use that as a server
request a bit later on in the course.

221
00:13:15.409 --> 00:13:20.194
But for now, this is all just a setup
just to make sure we're on that

222
00:13:20.194 --> 00:13:23.494
nice paved road.
&gt;&gt; Speaker 2: cd fsfe 2, right?

223
00:13:23.494 --> 00:13:26.277
&gt;&gt; Jem Young: Yes, fsfe2,

224
00:13:26.277 --> 00:13:30.776
fullstack frontend2.

225
00:13:36.980 --> 00:13:38.892
&gt;&gt; Jem Young: So you are correct.

226
00:13:38.892 --> 00:13:43.616
Bam, nobody's perfect.
&gt;&gt; Jem Young: And

227
00:13:43.616 --> 00:13:46.340
you just run npm i,
might take a little bit.

228
00:13:46.340 --> 00:13:48.610
So I'm gonna go ahead and do this.

229
00:13:48.610 --> 00:13:52.237
So I'm gonna say cd /var/www.

230
00:13:52.237 --> 00:13:53.090
Doesn't exist.

231
00:13:53.090 --> 00:13:55.894
So sudo mkdir,

232
00:13:55.894 --> 00:14:01.071
mk directory, /var/ww,

233
00:14:01.071 --> 00:14:06.674
cool,
&gt;&gt; Jem Young: Also,

234
00:14:06.674 --> 00:14:09.224
git clone, what was it?

235
00:14:31.416 --> 00:14:32.630
&gt;&gt; Jem Young: Did I not change ownership?

236
00:14:32.630 --> 00:14:35.490
I did not, what a slacker.

237
00:14:35.490 --> 00:14:36.500
All right, so this is my bad.

238
00:14:36.500 --> 00:14:40.440
If you run into issues right now,
you're saying, why can't I clone anything?

239
00:14:40.440 --> 00:14:43.170
Jim's so smart he clearly
doesn't run errors like this.

240
00:14:43.170 --> 00:14:44.260
I do.

241
00:14:44.260 --> 00:14:47.290
We forgot, because we created
this directory with sudo,

242
00:14:47.290 --> 00:14:48.810
as in it belongs to root now.

243
00:14:48.810 --> 00:14:50.970
We need to change our ownership to us.

244
00:14:50.970 --> 00:14:52.220
How do we change ownership?

245
00:14:52.220 --> 00:14:54.580
Remind me.
We did it a lot last class.

246
00:14:54.580 --> 00:14:59.487
How do we change ownership in
a directory shown, change owner?

247
00:14:59.487 --> 00:15:06.930
So I'm going to say,
sudo shown -R out of habit, recursive.

248
00:15:06.930 --> 00:15:08.450
And we're gonna cheat and say user.

249
00:15:11.690 --> 00:15:14.368
And user, just a reference to ourselves.

250
00:15:14.368 --> 00:15:19.580
Let's say /var/www, cool.

251
00:15:20.650 --> 00:15:24.103
Now I have ownership and I can clone my

252
00:15:24.103 --> 00:15:29.873
repo.
&gt;&gt; Jem Young: Right, nobody's confused.

253
00:15:29.873 --> 00:15:30.526
This is great.

254
00:15:30.526 --> 00:15:33.534
We understand permissions
just a little bit.

255
00:15:33.534 --> 00:15:39.249
And I'm going to cd into that.
&gt;&gt; Jem Young: And

256
00:15:39.249 --> 00:15:40.900
I'm going to npmi.

257
00:15:59.921 --> 00:16:03.690
&gt;&gt; Jem Young: So how many people use
YARN and how many people use NPM still?

258
00:16:04.830 --> 00:16:05.330
YARN?

259
00:16:06.780 --> 00:16:07.500
A few people.

260
00:16:07.500 --> 00:16:09.260
NPM for everybody else?

261
00:16:09.260 --> 00:16:10.510
Any other strange one, JSPM?

262
00:16:10.510 --> 00:16:13.004
Think there's more.

263
00:16:13.004 --> 00:16:17.809
Yeah, unrelated to this course,
what's the difference

264
00:16:17.809 --> 00:16:20.947
between YARN and NPM?
&gt;&gt; Speaker 2: YARN is still faster.

265
00:16:20.947 --> 00:16:23.748
&gt;&gt; Speaker 6: Yeah, better package locking

266
00:16:23.748 --> 00:16:24.501
&gt;&gt; Jem Young: Yeah,

267
00:16:24.501 --> 00:16:27.139
YARN is a bit faster now.

268
00:16:27.139 --> 00:16:29.542
NPM has made great strides in the past.

269
00:16:29.542 --> 00:16:33.379
I've spoken with Laurie Voss,
who's the COO of NPM.

270
00:16:33.379 --> 00:16:35.761
He's like, yeah,
it's cool YARN did their thing.

271
00:16:35.761 --> 00:16:37.752
We encourage everybody to contribute back.

272
00:16:37.752 --> 00:16:40.160
NPM has gotten much better now.

273
00:16:40.160 --> 00:16:43.846
They've got locking, kind of a bit
more predictive when you NPM install,

274
00:16:43.846 --> 00:16:45.230
it's gonna install
the same way every time,

275
00:16:45.230 --> 00:16:48.400
versus before it was like maybe,
hopefully.

