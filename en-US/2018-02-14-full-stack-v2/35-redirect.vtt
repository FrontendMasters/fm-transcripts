WEBVTT

1
00:00:00.000 --> 00:00:02.764
&gt;&gt; Jem Young: So now we can add
in a redirect block if you want.

2
00:00:02.764 --> 00:00:05.108
This is optional because we don't
have anywhere to redirect to.

3
00:00:05.108 --> 00:00:10.753
This is just more fyi, this is actually
how my side is serving up these slides.

4
00:00:10.753 --> 00:00:13.493
If you go to
jemyoung.com/frontendfullstack,

5
00:00:13.493 --> 00:00:15.728
how it gets redirected to Google slides.

6
00:00:15.728 --> 00:00:18.836
I'm just doing this in
a location block on my server.

7
00:00:18.836 --> 00:00:23.834
So I'm saying the final location,
such as frontendfullstack2,

8
00:00:23.834 --> 00:00:27.000
and this return 301 to a different URL.

9
00:00:27.000 --> 00:00:29.854
That's it,
that's how you do redirects in Nginx.

10
00:00:29.854 --> 00:00:32.593
What's the difference between 301

11
00:00:32.593 --> 00:00:35.185
and 302 for responses?
&gt;&gt; Speaker 2: One is

12
00:00:35.185 --> 00:00:36.725
permanent
&gt;&gt; Jem Young: Yes,

13
00:00:36.725 --> 00:00:41.540
exactly one is permanent and one is
temporary, when its permanent as in 301.

14
00:00:41.540 --> 00:00:44.870
Google will cache that or
most web browsers and

15
00:00:44.870 --> 00:00:46.430
most search engines will cache that.

16
00:00:46.430 --> 00:00:48.340
So it doesn't even have
to look that up anymore.

17
00:00:48.340 --> 00:00:50.620
It doesn't have to hit your server,
get a 301 response.

18
00:00:50.620 --> 00:00:52.138
It has that in its cache.

19
00:00:52.138 --> 00:00:54.470
302 just means move temporarily.

20
00:00:54.470 --> 00:00:58.235
So just for
now we're gonna keep hitting the server or

21
00:00:58.235 --> 00:01:02.177
we're gonna honor this
redirect header temporarily.

22
00:01:02.177 --> 00:01:03.756
So that's the difference between 301 and
302.

23
00:01:03.756 --> 00:01:06.134
You can get into trouble
if you 301 a redirect and

24
00:01:06.134 --> 00:01:08.962
then you wanna fix that later
because it's already cached.

25
00:01:08.962 --> 00:01:10.903
So be careful with your redirects.

26
00:01:10.903 --> 00:01:15.466
But in general, I did it one more time.

27
00:01:15.466 --> 00:01:17.574
In general, if you wanna redirect,

28
00:01:17.574 --> 00:01:21.520
it's pretty straightforward in Nginx.
&gt;&gt; Speaker 3: Can you use a regular

29
00:01:21.520 --> 00:01:25.370
expression instead of plain name,
filename.

30
00:01:25.370 --> 00:01:26.770
&gt;&gt; Jem Young: Yes.

31
00:01:26.770 --> 00:01:29.330
Nice job, you're a nail on the question
that you can actually use the regular

32
00:01:29.330 --> 00:01:31.790
expression with location block.

33
00:01:31.790 --> 00:01:37.191
So if you wanna say I only wanna
redirect people that are looking for

34
00:01:37.191 --> 00:01:42.609
slash help and JPEG, so start at JPEG,
we can do that but not PNGs.

35
00:01:42.609 --> 00:01:44.393
If you wanna get very nuanced, but

36
00:01:44.393 --> 00:01:47.509
it takes regular expression just like grep does.

37
00:01:47.509 --> 00:01:50.920
But good question cuz if you're getting
to fine grains Nginx tuning, you

38
00:01:50.920 --> 00:01:54.498
probably start using regular expressions
for path matching and things like that.

39
00:01:54.498 --> 00:01:58.437
But yeah, so if you wanna add redirects,
that's how you do it in your website.

40
00:01:58.437 --> 00:02:01.578
And we're not just gonna do it
because it's pretty straightforward

