WEBVTT

1
00:00:00.220 --> 00:00:03.200
&gt;&gt; Jem Young: So
let's move on to Grep, finds files.

2
00:00:03.200 --> 00:00:05.817
Grep helps me look inside the files.

3
00:00:05.817 --> 00:00:09.544
The general formula is, grep, the options,

4
00:00:09.544 --> 00:00:13.761
the search expression,
and where we wanna search.

5
00:00:13.761 --> 00:00:18.891
So let's say you have some code that
you modified and you're getting repo,

6
00:00:18.891 --> 00:00:23.313
and you need to free the code itself,
that's where you use grep.

7
00:00:23.313 --> 00:00:26.476
Find the files and
you pipe it in the grep.

8
00:00:26.476 --> 00:00:29.326
And we will be piping things in
the grep later in the day, and

9
00:00:29.326 --> 00:00:30.865
you'll see how useful grep is.

10
00:00:30.865 --> 00:00:33.735
But it's just global regular expression.

11
00:00:33.735 --> 00:00:36.586
I will tell you I am not great
with regular expressions,

12
00:00:36.586 --> 00:00:38.708
I know a little bit but if you're really,

13
00:00:38.708 --> 00:00:42.246
really good at regular expressions,
you know the things you can do.

14
00:00:42.246 --> 00:00:46.380
You can validate email addresses in one
line, you can do lots of powerful things.

15
00:00:46.380 --> 00:00:52.330
For now I just use string searches.
&gt;&gt; Jem Young: Bonus tip.

16
00:00:52.330 --> 00:00:55.054
Let's say you wanna search
a inside a gzip file,

17
00:00:55.054 --> 00:00:59.518
zgrep will search inside a gzip file for
you, which is pretty useful actually.

18
00:00:59.518 --> 00:01:03.578
Because by default, most log files get
compressed after certain amount of time.

19
00:01:03.578 --> 00:01:07.302
Let's say we still wanna search inside
those log files for information,

20
00:01:07.302 --> 00:01:08.753
zgrep is where you wanna go.

21
00:01:08.753 --> 00:01:13.264
So it's the same as regular grep,
just put a z on it, for zipped.

22
00:01:13.264 --> 00:01:18.344
Makes sense, again,
they're naming is just so on point there.

23
00:01:18.344 --> 00:01:20.815
So this one's always useful.

24
00:01:20.815 --> 00:01:23.789
If we wanna find the running node process,

25
00:01:23.789 --> 00:01:28.260
and this is a command I use all
the time because I run Node at work.

26
00:01:28.260 --> 00:01:32.680
Netflix UI is built largely on Node,
at least the website is.

27
00:01:32.680 --> 00:01:34.942
And I have Node processes that
are just eating at that memory and

28
00:01:34.942 --> 00:01:36.640
I wanna find out where they are.

29
00:01:36.640 --> 00:01:40.540
So if I say ps aux,
just saying these are the file,

30
00:01:40.540 --> 00:01:43.026
what's running right now right now for
my user that I've permission to read.

31
00:01:43.026 --> 00:01:44.760
Then we're just gonna look for Node.

32
00:01:44.760 --> 00:01:45.730
So I'm just gonna do that right now.

33
00:01:47.940 --> 00:01:49.790
So this is back on my local machine.

34
00:01:49.790 --> 00:01:51.360
Clear this all out.

35
00:01:51.360 --> 00:01:54.650
Set ps aux, and we've run this by default.

36
00:01:54.650 --> 00:01:55.730
That's a lot of information.

37
00:01:57.580 --> 00:01:59.610
This is why we can pipe it to grep.

38
00:01:59.610 --> 00:02:04.913
So if I say, grep node, and
am I running an instance?

39
00:02:04.913 --> 00:02:09.073
Yes, I'm not running an instance, this is
just returning the instance of grep that

40
00:02:09.073 --> 00:02:11.079
I'm running, it's come full circle.

41
00:02:11.079 --> 00:02:15.751
But it's extremely useful because with
grep, you get all this verbose output and

42
00:02:15.751 --> 00:02:18.606
you get just the things
that you're looking for.

43
00:02:18.606 --> 00:02:24.106
Let's say I wanna find instances that
are running by me Jem Young, the user.

44
00:02:24.106 --> 00:02:26.538
And it's gonna return all that for me.

45
00:02:26.538 --> 00:02:29.059
Not as useful because I'm
the one running the machine.

46
00:02:29.059 --> 00:02:33.605
But ps aux and grepping something is
probably one of the fastest way to tell

47
00:02:33.605 --> 00:02:36.921
what sort of processes
are running on your computer.

48
00:02:36.921 --> 00:02:42.945
For your nginx process, your MySQL server,
you can see all those instances.

49
00:02:42.945 --> 00:02:45.082
And in many instances you
find zombie processes.

50
00:02:45.082 --> 00:02:48.573
You say, I didn't I was running
a PostgreSQL server at this point.

51
00:02:48.573 --> 00:02:50.862
Maybe you were and
you just forgot about it.

52
00:02:50.862 --> 00:02:55.286
ps aux and then greppng that,
super, super useful.

53
00:02:55.286 --> 00:02:57.823
All right,
everybody believe in power for grep and

54
00:02:57.823 --> 00:03:01.014
find?
&gt;&gt; Jem Young: Only a few people.

55
00:03:01.014 --> 00:03:03.266
You will, you'll believe by the end.

