WEBVTT

1
00:00:00.143 --> 00:00:02.671
&gt;&gt; Jem Young: Let's talk
about more server security.

2
00:00:02.671 --> 00:00:06.530
So we learned a bit that a firewall
stops you from connecting a port.

3
00:00:06.530 --> 00:00:09.808
It only leaves open the ports you want.

4
00:00:09.808 --> 00:00:12.917
But an iptable, an iptable is a network.

5
00:00:12.917 --> 00:00:17.430
It's an interface into the network
layer of Linux kernel.

6
00:00:17.430 --> 00:00:18.690
Their pretty gnarly.

7
00:00:18.690 --> 00:00:22.370
They're not fun to work with but we're
gonna learn what iptables are briefly and

8
00:00:22.370 --> 00:00:23.780
then we're gonna learn
a better way to do it.

9
00:00:23.780 --> 00:00:26.610
Then we're gonna learn
an even better way to do it.

10
00:00:26.610 --> 00:00:28.760
By better I mean, easier.

11
00:00:28.760 --> 00:00:29.790
The best way to do things.

12
00:00:31.400 --> 00:00:35.275
So what an iptable is just
a list of rules to follow for

13
00:00:35.275 --> 00:00:38.456
any connections coming into your server.

14
00:00:38.456 --> 00:00:41.124
So if I want to add a new server or
I want to add a new rule,

15
00:00:41.124 --> 00:00:42.874
I say append the rules to the input.

16
00:00:42.874 --> 00:00:46.586
So any connections coming in,
what's the protocol?

17
00:00:46.586 --> 00:00:49.353
TCP, it could be ICMP too.

18
00:00:49.353 --> 00:00:51.489
But for now TCP.

19
00:00:51.489 --> 00:00:53.145
The port, 22.

20
00:00:53.145 --> 00:00:55.920
And then we're gonna say, for
all connections that match this,

21
00:00:55.920 --> 00:00:56.939
we're gonna let it in.

22
00:00:59.380 --> 00:01:01.718
Yeah, it's not pretty, right?

23
00:01:01.718 --> 00:01:03.462
It's kind of annoying.

24
00:01:03.462 --> 00:01:06.500
Is there a better way to do this, yes.

25
00:01:06.500 --> 00:01:09.490
You should know what an iptable is, yes.

26
00:01:09.490 --> 00:01:12.765
So we are gonna over some quick
configuration tables for iptables.

27
00:01:12.765 --> 00:01:16.880
Now mind you, these are just theoretical
exercises, don't actually do this.

28
00:01:16.880 --> 00:01:20.890
Cuz if you mess with iptables, things
will go bad for you very very quickly.

29
00:01:20.890 --> 00:01:22.890
Jim, I can't log into my server.

30
00:01:22.890 --> 00:01:23.749
Nobody has asked that yet.

31
00:01:23.749 --> 00:01:26.713
But if you do this,
you can lock yourself out very easily, and

32
00:01:26.713 --> 00:01:28.713
I'll show you the better way of doing it.

33
00:01:28.713 --> 00:01:32.653
So, knowing what we do, so we know
there's an input, there's an accept,

34
00:01:32.653 --> 00:01:34.818
there's protocols and there's ports.

35
00:01:34.818 --> 00:01:36.778
Kind of straight forward.

36
00:01:36.778 --> 00:01:42.822
So can we create an iptable rule to
block all outgoing HTTP connections?

37
00:01:42.822 --> 00:01:48.710
Mm-hm.
&gt;&gt; Jem Young: iptables that's a output,

38
00:01:48.710 --> 00:01:50.879
so everything going out.

39
00:01:50.879 --> 00:01:55.056
The protocal, port is 80,
hP is always 80 for the most part.

40
00:01:55.056 --> 00:01:58.048
And we're just gonna say REJECT.

41
00:01:58.048 --> 00:01:59.390
Everybody with me so far?

42
00:01:59.390 --> 00:02:01.840
You don't have to memorize this
nomenclature, but this is for

43
00:02:01.840 --> 00:02:04.920
the future so that if you ever see it,
or if someone says iptable rules,

44
00:02:04.920 --> 00:02:06.170
you understand what they're talking about.

45
00:02:07.640 --> 00:02:10.180
Now if you're thinking why REJECT?

46
00:02:10.180 --> 00:02:11.590
Cuz there's drop as well.

47
00:02:11.590 --> 00:02:14.308
One, you're pretty smart if
you know that drop and REJECT,

48
00:02:14.308 --> 00:02:17.258
there's two ways two kinds deny
a request going out or coming in.

49
00:02:17.258 --> 00:02:19.713
You can REJECT, you can drop.

50
00:02:19.713 --> 00:02:22.040
Drop means,
if I try to connect it just won't connect.

51
00:02:22.040 --> 00:02:22.875
It won't tell me why.

52
00:02:22.875 --> 00:02:25.984
It just,
it will pretend like the port's not there.

53
00:02:25.984 --> 00:02:30.676
So my rookie mistake is always saying,
like, drop, but that's not useful at all.

54
00:02:30.676 --> 00:02:33.592
Let's say you close a port and
you try to connect to it later, and

55
00:02:33.592 --> 00:02:36.412
you're trying to connect and
it's just not doing anything.

56
00:02:36.412 --> 00:02:37.805
How are you going to debug that?

57
00:02:37.805 --> 00:02:39.437
Cuz you're just dropping the connection.

58
00:02:39.437 --> 00:02:40.573
And 71 rejects.

59
00:02:40.573 --> 00:02:43.824
We wanna actually say, no,
you're not allowed in, and

60
00:02:43.824 --> 00:02:46.280
that's just more helpful for debugging.

61
00:02:46.280 --> 00:02:50.231
If you look in the speaker comment,
add to the link to really smart person and

62
00:02:50.231 --> 00:02:54.458
they said, they explained everything drop
and reject and why you wanna do that.

63
00:02:54.458 --> 00:02:57.350
But I just wanna save
you all some trouble.

64
00:02:57.350 --> 00:02:59.360
Don't drop things, reject them.

65
00:02:59.360 --> 00:03:01.920
If you're thinking server security,
if I just drop them,

66
00:03:01.920 --> 00:03:02.790
people will know I'm there.

67
00:03:02.790 --> 00:03:04.820
Well they're gonna know
you're there anyways.

68
00:03:04.820 --> 00:03:07.950
So it's really not much
help to drop things.

69
00:03:09.520 --> 00:03:12.260
All right, a lot of iptables.

70
00:03:12.260 --> 00:03:13.510
I know it's tedious.

71
00:03:13.510 --> 00:03:14.459
These are the basics though.

72
00:03:16.130 --> 00:03:17.250
Till we create an iptable,

73
00:03:17.250 --> 00:03:21.270
we would only allow icmp connections on
port 892 from the IP address 192.0.0.1.

74
00:03:21.270 --> 00:03:24.650
That's all so ugly.

75
00:03:24.650 --> 00:03:28.500
Yes, we can though.

76
00:03:28.500 --> 00:03:30.040
We can do it.

77
00:03:30.040 --> 00:03:31.290
IT tables.

78
00:03:31.290 --> 00:03:34.599
The inputs.
So all incoming connections,

79
00:03:34.599 --> 00:03:41.464
-s saying from this IP address -p,
the protocol, icmp dport, 892.

80
00:03:41.464 --> 00:03:44.510
And we're just gonna say accept that.

81
00:03:44.510 --> 00:03:47.550
And if you go back you say,
this looks weird, then you see this.

82
00:03:47.550 --> 00:03:50.397
The more you do it, the more the rules
just makes sense in your head.

83
00:03:50.397 --> 00:03:55.288
They're easy to reason about, and even
iptables, as kind of ugly as they are,

84
00:03:55.288 --> 00:03:56.393
they make sense.

85
00:03:56.393 --> 00:03:59.187
They follow the same pattern all the time.

