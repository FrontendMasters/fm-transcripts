WEBVTT

1
00:00:00.000 --> 00:00:03.091
&gt;&gt; Steve Kinney: All right,
let's take a tour of one more example.

2
00:00:03.091 --> 00:00:08.088
And again, the goal here is that,
a week from now,

3
00:00:08.088 --> 00:00:12.285
you're like, I could do that thing.

4
00:00:12.285 --> 00:00:15.099
And there's some niceties to this,
yeah, it has to run in VS code.

5
00:00:15.099 --> 00:00:18.706
But you also have to worry about packaging
and distributing entire electron app or

6
00:00:18.706 --> 00:00:20.020
anything along those lines.

7
00:00:20.020 --> 00:00:24.083
You can kind of build
tooling that you need, but

8
00:00:24.083 --> 00:00:31.104
the one other example I kind of want to
show you, which is both super interesting.

9
00:00:31.104 --> 00:00:35.938
And then also, there are a few
things you need to know that

10
00:00:35.938 --> 00:00:40.770
will save you a lot of time
that I will never get back, is,

11
00:00:40.770 --> 00:00:45.833
well, what happens if we wanna
show a UI in VS code, right?

12
00:00:45.833 --> 00:00:46.685
We can do that as well.

13
00:00:46.685 --> 00:00:55.397
This is the same template
that I used earlier.

14
00:00:55.397 --> 00:01:01.085
There are only a few different senses.

15
00:01:01.085 --> 00:01:05.700
I took an annoying evaluate
regex function and

16
00:01:05.700 --> 00:01:11.627
put it in a different file so
you don't have to deal with it.

17
00:01:11.627 --> 00:01:14.777
It has nothing to do with VS Code.

18
00:01:14.777 --> 00:01:20.941
It just maps over some text
with a regular expression.

19
00:01:20.941 --> 00:01:26.371
You can read it if you want, you don't
want to, it's not that bad, it's 30 lines.

20
00:01:26.371 --> 00:01:29.812
And then I took an HTML file.

21
00:01:29.812 --> 00:01:34.687
The important part is, effectively,

22
00:01:34.687 --> 00:01:41.049
your HTML file has to be self-contained,
right?

23
00:01:41.049 --> 00:01:46.740
So extensions are not allowed to access
any kind of network or load any resources.

24
00:01:46.740 --> 00:01:54.356
So it's basically means your
script tags and stuff like that.

25
00:01:54.356 --> 00:02:00.121
It's got a HTML file with your CSS
in it and your JavaScript in it.

26
00:02:00.121 --> 00:02:04.765
Now, does that mean you have to
write all of that in that file?

27
00:02:04.765 --> 00:02:09.528
No, you just need some build tool
that will then collapse in it.

28
00:02:09.528 --> 00:02:14.246
There's a V plug in that does it, there's,
I think, probably do it ES build to.

29
00:02:14.246 --> 00:02:17.575
You just need the end result
to be one JavaScript file?

30
00:02:17.575 --> 00:02:20.767
A lot of the examples you
will see on the internet.

31
00:02:20.767 --> 00:02:24.907
I actually just have a template
string in the file with

32
00:02:24.907 --> 00:02:28.321
no syntax highlighting, and it's gross.

33
00:02:28.321 --> 00:02:32.674
So I at least pulled it out into its own
file so that the syntax highlighting is

34
00:02:32.674 --> 00:02:36.278
pretty, but if this was a more,
really, real thing, again,

35
00:02:36.278 --> 00:02:40.659
there's a V plug in that will take,
yeah, that way you can still use react.

36
00:02:40.659 --> 00:02:44.214
Or Svelte or Vue, or
Angular, or whatever, but

37
00:02:44.214 --> 00:02:47.701
the end result has to be
one portable HTML file.

38
00:02:47.701 --> 00:02:49.946
Your build tools can handle that for
you, right?

39
00:02:49.946 --> 00:02:54.817
I mean, you could even have a template
string where you just pull in the CSS

40
00:02:54.817 --> 00:02:59.787
file and the compiled JavaScript file,
and jam them in there too, right?

41
00:02:59.787 --> 00:03:04.668
But the end result is, no,
you cannot put a script tag that then

42
00:03:04.668 --> 00:03:09.183
loads another file and link,
perhaps, to slyles.css,

43
00:03:09.183 --> 00:03:13.052
it's all got to kind of be in one file,
like this,

44
00:03:13.052 --> 00:03:19.346
which is why i broke it out into it's own
file, because nobody wants to see that.

45
00:03:19.346 --> 00:03:25.373
But one other thing that I did
here that I want to point out,

46
00:03:25.373 --> 00:03:31.647
which is a lot of CSS variables
that I did not define, right?

47
00:03:31.647 --> 00:03:36.722
And what happens is,
when we will open up the inspector,

48
00:03:36.722 --> 00:03:42.958
and you'll see it in a second,
when VS code goes to load the HTML file,

49
00:03:42.958 --> 00:03:48.924
it populates a bunch of CSS variables
based on your theme, right?

50
00:03:48.924 --> 00:03:51.428
So if you wanna make it
look like Hot Dog Stand,

51
00:03:51.428 --> 00:03:53.625
you can put in whatever values you want.

52
00:03:53.625 --> 00:03:58.289
But if you wanna get like, what is
the color of their VS code foreground?

53
00:03:58.289 --> 00:04:03.109
What is the color of their
VS code editor background,

54
00:04:03.109 --> 00:04:08.902
those CSS variables will be set
surrounding your HTML, right?

55
00:04:08.902 --> 00:04:13.518
And so, you can hook into those and
then, I didn't do a perfect job,

56
00:04:13.518 --> 00:04:17.816
cuz I got bored at some point, and
I realized that styling CSS was

57
00:04:17.816 --> 00:04:21.979
not the most important thing I
should be doing at that moment.

58
00:04:21.979 --> 00:04:23.966
It's close enough, but

59
00:04:23.966 --> 00:04:28.980
I'm pulling in basically the stuff
from their VS Code theme and

60
00:04:28.980 --> 00:04:34.580
hopefully showing it roughly in
a way that looks consistent, right?

61
00:04:34.580 --> 00:04:38.938
Button active is a pressed background
button, so on and so forth.

62
00:04:38.938 --> 00:04:45.187
Cool, all right, so
that HTML file, nothing to see.

63
00:04:45.187 --> 00:04:52.270
There a bunch of CSS, a bunch of client
side JavaScript, the way that it works.

64
00:04:52.270 --> 00:04:57.063
And this is where we go back to the few
slides that I made, electron, or

65
00:04:57.063 --> 00:05:02.291
a lot of things, there are actually
workers or anything along those lines.

66
00:05:02.291 --> 00:05:06.107
You can send messages back and
forth between the processes, right?

67
00:05:06.107 --> 00:05:10.840
That extensions main process is all
the node goodness you could ever want.

68
00:05:10.840 --> 00:05:12.937
Doesn't know anything about the DOM.

69
00:05:12.937 --> 00:05:18.346
Your web view knows everything
about the DOM and cannot access.

70
00:05:18.346 --> 00:05:20.717
Yeah, it's like a browser and
a server, right?

71
00:05:20.717 --> 00:05:26.786
But instead of fetch with HTTP calls,
you send messages back and forth, right?

72
00:05:26.786 --> 00:05:29.677
And you could have multiple web views and

73
00:05:29.677 --> 00:05:32.835
they would all talk to
the one node process.

74
00:05:32.835 --> 00:05:34.839
I could spin up these web views, call now.

75
00:05:34.839 --> 00:05:40.026
It's basically having a main thread and
worker threads, right?

76
00:05:40.026 --> 00:05:43.742
That was worth switching all the way
back to keynote, right, I think so.

77
00:05:43.742 --> 00:05:46.881
So in this case, we have the send update,

78
00:05:46.881 --> 00:05:51.100
which is what's gonna happen
when they hit the button or

79
00:05:51.100 --> 00:05:56.664
any of these input changes, and
that's gonna post a message back to say,

80
00:05:56.664 --> 00:06:02.812
hey, run the evaluate regex command,
here's some other data for you, right?

81
00:06:02.812 --> 00:06:08.745
So just send a message back to node
in my extension and run it, right?

82
00:06:08.745 --> 00:06:12.234
But other than that, this otherwise
would have been like a form submit or

83
00:06:12.234 --> 00:06:13.501
a fetch request, right?

84
00:06:13.501 --> 00:06:19.009
Imagine it's a post request in this case,
that metaphor is not wrong.

85
00:06:19.009 --> 00:06:21.440
But let's go back into the extension.

86
00:06:21.440 --> 00:06:26.360
Okay, so given an extension ID,
we've got activate,

87
00:06:26.360 --> 00:06:31.490
which is, we have this open command,
which is we register

88
00:06:31.490 --> 00:06:36.637
the command and we open our little app,
so on and so forth.

89
00:06:36.637 --> 00:06:41.901
This subscription will then unregistered
the command when it gets deactivated.

90
00:06:41.901 --> 00:06:47.165
All right, and in here we go ahead and
we create a web view panel, right?

91
00:06:47.165 --> 00:06:52.534
Like some idea is literally,
this is just a string,

92
00:06:52.534 --> 00:06:55.594
I don't know why I got fancy.

93
00:06:55.594 --> 00:07:00.674
And the title, so
imagine the title element in an HTML file,

94
00:07:00.674 --> 00:07:05.668
that will be what's used in the tab,
where it should load.

95
00:07:05.668 --> 00:07:08.820
So in this point,
I'm gonna do it in view column 1.

96
00:07:08.820 --> 00:07:12.992
You've got one could see
what the other options are.

97
00:07:16.859 --> 00:07:22.092
&gt;&gt; Steve Kinney: There's nine.

98
00:07:22.092 --> 00:07:25.060
The currently active 1 beside
the currently active 1.

99
00:07:25.060 --> 00:07:29.232
Lots of choices, I chose one, why?

100
00:07:29.232 --> 00:07:30.809
I don't know.

101
00:07:30.809 --> 00:07:34.062
You can choose whether or
not JavaScript can run at all, right, so

102
00:07:34.062 --> 00:07:35.640
maybe it's just a static page.

103
00:07:35.640 --> 00:07:40.069
Maybe it's like, hey, give me
the status or run this command, and

104
00:07:40.069 --> 00:07:44.265
I wanna see something giving me like,
let's say if it was like,

105
00:07:44.265 --> 00:07:47.396
you wanted to do that web
pack bundle analysis.

106
00:07:47.396 --> 00:07:50.456
And then,
just show a chart of the biggest packages,

107
00:07:50.456 --> 00:07:52.568
that doesn't need any JavaScript.

108
00:07:52.568 --> 00:07:56.505
And if you donate JavaScript, you could
turn it off because especially if you find

109
00:07:56.505 --> 00:07:59.371
yourself like, yeah,
you're running on their machine.

110
00:07:59.371 --> 00:08:06.017
It's all the scary parts of electron app
and all the great parts at the same time,

111
00:08:06.017 --> 00:08:12.106
where you can load local things from,
great, does get WebView content.

112
00:08:12.106 --> 00:08:19.669
All that I'm doing there is I'm reading
that HTML file that you saw, that's all I.

113
00:08:19.669 --> 00:08:25.011
And so,
beyond that on the did receive message.

114
00:08:25.011 --> 00:08:28.971
You can see it here as well,
which is, if it is that,

115
00:08:28.971 --> 00:08:33.202
evaluate regex 1,
grab the other things off of there,

116
00:08:33.202 --> 00:08:37.631
call the function,
send a message back with the results.

117
00:08:37.631 --> 00:08:41.291
So all of the nodes stuff,
we send it to the main process,

118
00:08:41.291 --> 00:08:43.444
we do the thing, we send it back.

119
00:08:43.444 --> 00:08:47.467
Kind of thing, anything you think about,
the server and client totally works.

120
00:08:47.467 --> 00:08:53.503
It 100% makes it, let's do that,
that's better, right, we can all see.

121
00:08:53.503 --> 00:08:59.343
So we're sending this stuff back and
forth, and that is it,

122
00:08:59.343 --> 00:09:04.394
we're at 80 lines of code,
but not a lot, right?

123
00:09:04.394 --> 00:09:09.195
And so, with that, I explained it all
before you get to see what the thing was.

124
00:09:09.195 --> 00:09:12.918
I did it on purpose because I'm a jerk,
but it's fine.

125
00:09:12.918 --> 00:09:17.250
So here we've got an editor,
you can see I'm in that

126
00:09:17.250 --> 00:09:21.896
extension development host,
I've got the debugger.

127
00:09:24.335 --> 00:09:26.673
&gt;&gt; Steve Kinney: And
now we've got this new command,

128
00:09:26.673 --> 00:09:30.981
open regular expressionist,
which is a little regex playground.

129
00:09:30.981 --> 00:09:32.954
[LAUGH] See, I brought it all together.

130
00:09:32.954 --> 00:09:35.196
[LAUGH] All right,
told you I was gonna do it though.

131
00:09:35.196 --> 00:09:37.148
So where you can test something and

132
00:09:37.148 --> 00:09:47.130
you can say,
&gt;&gt; Steve Kinney: And

133
00:09:47.130 --> 00:09:49.803
wherever the regex matches will highlight.

134
00:09:49.803 --> 00:09:53.897
And so, for all of the other
fun stuff that you are doing,

135
00:09:53.897 --> 00:09:57.904
you can kind of see and
test out your regex in VS code, and

136
00:09:57.904 --> 00:10:02.882
then grab whatever that pattern is and
do something with it, right?

137
00:10:02.882 --> 00:10:06.048
And you can see that mostly if
I were to change the theme,

138
00:10:10.452 --> 00:10:12.364
&gt;&gt; Steve Kinney: Because I'm using those

139
00:10:12.364 --> 00:10:16.927
CSS variables,
we mostly fit into the aesthetic, right?

140
00:10:16.927 --> 00:10:17.808
And everything as well.

141
00:10:17.808 --> 00:10:23.231
But I have additional UI tools that I
can kind of build and play with, right?

142
00:10:23.231 --> 00:10:28.437
And we can argue, did I have to send
the entire string back to node?

143
00:10:28.437 --> 00:10:30.610
No, but
I was trying to make a point, right?

144
00:10:30.610 --> 00:10:33.488
Could I have probably done
this all in the client?

145
00:10:33.488 --> 00:10:35.705
100% I could have.

146
00:10:35.705 --> 00:10:39.507
But it is nice that now this
is a tab that I can just use.

147
00:10:39.507 --> 00:10:43.008
Right, and again,
we could have it just be a sidebar thing.

148
00:10:43.008 --> 00:10:46.654
We could render it somewhere
else if we really wanted to, but

149
00:10:46.654 --> 00:10:50.083
you can see that you could
build full on experiences, and

150
00:10:50.083 --> 00:10:53.728
we could theoretically,
obviously this is its own tab, but

151
00:10:53.728 --> 00:10:58.609
we could beforehand get access to the
current document and do something with it.

152
00:10:58.609 --> 00:11:01.936
And you could find all sorts of
different things that you wanna do.

153
00:11:01.936 --> 00:11:06.192
I just picked something that
mostly to make the joke,

154
00:11:06.192 --> 00:11:09.037
about regex, and, hook it all in.

155
00:11:09.037 --> 00:11:12.774
But you can build everything from that
AI playground all the way up to, yeah,

156
00:11:12.774 --> 00:11:16.240
just simple little tools to maybe
something that makes, a year or two.

157
00:11:16.240 --> 00:11:20.203
As we learn together today,
cuz I did not know,

158
00:11:20.203 --> 00:11:24.474
Tamagotchi pets that live in your editor,
right?

159
00:11:24.474 --> 00:11:29.253
All of these are possible, and
you can kind of extend this thing any way

160
00:11:29.253 --> 00:11:32.820
that you want from a wide
variety of things, right?

161
00:11:32.820 --> 00:11:37.574
And like I said, do I expect that right
now you know exactly what you wanna build.

162
00:11:37.574 --> 00:11:42.610
My hope is that, in a week, or a month,
or six months, you're like, that thing.

163
00:11:44.542 --> 00:11:46.453
&gt;&gt; Steve Kinney: I could do that, right?

164
00:11:46.453 --> 00:11:47.947
And we don't get a lot
of those these days.

