WEBVTT

1
00:00:00.000 --> 00:00:05.148
&gt;&gt; Steve Kinney: So a lot of talk about,
you can set your own key bindings.

2
00:00:05.148 --> 00:00:07.371
So let's talk about it.

3
00:00:07.371 --> 00:00:13.951
So like I said, if you find anything
in here that you might want to use and

4
00:00:13.951 --> 00:00:18.018
it does not have a key binding,
guess what?

5
00:00:18.018 --> 00:00:19.539
You can make one.

6
00:00:19.539 --> 00:00:21.312
Inf act,
there's a bunch of ways to do this.

7
00:00:21.312 --> 00:00:24.876
You could also just do,

8
00:00:24.876 --> 00:00:31.300
let's find what's one that we wanna add?

9
00:00:31.300 --> 00:00:32.950
I don't know, let's see what
we've got in here right now.

10
00:00:32.950 --> 00:00:37.152
So you have a file somewhere
depending on your operating system

11
00:00:37.152 --> 00:00:40.020
where applications keep their settings.

12
00:00:40.020 --> 00:00:42.805
That has all of your key bindings.

13
00:00:42.805 --> 00:00:44.333
Now, it is a JSON file.

14
00:00:44.333 --> 00:00:45.695
This is great for a few reasons.

15
00:00:45.695 --> 00:00:50.067
VS Code does have a thing called settings
sync, which will sync your settings.

16
00:00:50.067 --> 00:00:51.485
It does what it says on the tin.

17
00:00:51.485 --> 00:00:56.834
Having it as a JSON file, which is
true for almost all of our settings,

18
00:00:56.834 --> 00:01:02.006
will also allow you to copy and
paste them, which sometimes is super

19
00:01:02.006 --> 00:01:06.815
useful if you wanna share them or
something along those lines,

20
00:01:06.815 --> 00:01:11.372
you can kinda take something,
immediately have the JSON.

21
00:01:11.372 --> 00:01:15.482
So this is one I set up
earlier that we kinda saw, and

22
00:01:15.482 --> 00:01:21.217
we'll talk about the moving pieces
in here, which is as I said before,

23
00:01:21.217 --> 00:01:26.213
I'm actually gonna delete this one for
a second so we can see.

24
00:01:26.213 --> 00:01:31.830
If I go in here,
we close this for a second.

25
00:01:31.830 --> 00:01:36.729
Hitting control Backtick will open and
close the terminal, but

26
00:01:36.729 --> 00:01:40.733
that was never what I wanted,
and it drove me crazy.

27
00:01:40.733 --> 00:01:46.583
What I wanna do is do things here,
go back over to terminal,

28
00:01:46.583 --> 00:01:50.328
right, and then jump back and forth.

29
00:01:50.328 --> 00:01:54.793
So one of the key bindings
that we can add is,

30
00:01:54.793 --> 00:01:58.553
again, we saw that one here as well.

31
00:01:58.553 --> 00:02:03.413
If you see two in a row,
you just typed them two in a row, right?

32
00:02:03.413 --> 00:02:07.204
So in this case, desired key combination,

33
00:02:07.204 --> 00:02:12.436
you can press anything you want,
hold your favorite chord.

34
00:02:12.436 --> 00:02:15.645
What's the most egregious
thing I can press?

35
00:02:18.157 --> 00:02:25.311
&gt;&gt; Steve Kinney: Right, and here we've
got a commandId, and then when, right?

36
00:02:25.311 --> 00:02:28.968
The commandId, everything in VS
code has some kind of identifier,

37
00:02:28.968 --> 00:02:31.354
whether it's a setting or a given command.

38
00:02:31.354 --> 00:02:38.707
It's got some almost an object notation
of editor.focus whatever, right?

39
00:02:38.707 --> 00:02:43.319
We look up here, it's like
workbench.action.terminal.focus, right?

40
00:02:43.319 --> 00:02:47.367
And the other interesting part is
there is intellisense in here,

41
00:02:47.367 --> 00:02:48.772
which is pretty cool.

42
00:02:48.772 --> 00:02:54.333
So you could do something like this and
you will see all of the options but you

43
00:02:54.333 --> 00:03:00.257
can also begin to take a look and try to
figure out which one you were looking for.

44
00:03:00.257 --> 00:03:05.208
Now, there's probably an easier
way to do that, which is,

45
00:03:05.208 --> 00:03:09.690
again, let's say the sort lines ascending,
right?

46
00:03:09.690 --> 00:03:12.871
We could go ahead and
give it a key binding of, again,

47
00:03:12.871 --> 00:03:14.651
whatever you want that to be.

48
00:03:14.651 --> 00:03:19.821
If you are coming from an editor
where it has a keyboard shortcut,

49
00:03:19.821 --> 00:03:22.178
you could choose to use that.

50
00:03:22.178 --> 00:03:28.512
I cannot because text mate it
was F5 which is used in VS Code.

51
00:03:28.512 --> 00:03:32.678
So we could do something like

52
00:03:32.678 --> 00:03:37.545
ctrl+shift+alt+s, right?

53
00:03:37.545 --> 00:03:41.546
Cuz I probably messed up, I have You open
a file and have unsaved changes, and

54
00:03:41.546 --> 00:03:44.577
then you change in another editor,
things get sad on you.

55
00:03:44.577 --> 00:03:46.940
So let's go ahead, change that.

56
00:03:51.493 --> 00:03:59.466
&gt;&gt; Steve Kinney: Let's open up.

57
00:03:59.466 --> 00:04:02.016
Carrot in front and that's how we do it.

58
00:04:04.837 --> 00:04:08.054
&gt;&gt; Steve Kinney: So yeah, you can see that
this is like finding the one that is for

59
00:04:08.054 --> 00:04:09.287
sort lines ascending.

60
00:04:09.287 --> 00:04:10.899
It currently has no key binding.

61
00:04:10.899 --> 00:04:12.613
What happens when we clear out the search?

62
00:04:12.613 --> 00:04:14.863
It's all the options, right?

63
00:04:14.863 --> 00:04:19.480
And so for whatever you wanted to do,
you can just go in here search for

64
00:04:19.480 --> 00:04:21.640
the thing you were looking for.

65
00:04:21.640 --> 00:04:24.797
If you hit the gear,
it will hyper focus the search for you.

66
00:04:24.797 --> 00:04:28.123
If you just kinda open up
this keyboard shortcuts pane,

67
00:04:28.123 --> 00:04:32.748
you will see all the things, right,
as well as where they come from, right?

68
00:04:32.748 --> 00:04:38.366
The built-in ones come from system,
obviously the ones you define.

69
00:04:38.366 --> 00:04:45.914
So even though I don't remember the whole
one, I know it's terminal focus, right?

70
00:04:45.914 --> 00:04:47.487
There's there it is, right?

71
00:04:47.487 --> 00:04:54.022
You can see my user one versus all
the ones built into the system, right?

72
00:04:54.022 --> 00:04:55.778
So you can edit that JSON file.

73
00:04:55.778 --> 00:05:00.075
You can also just go in here and
come up with one as well.

74
00:05:00.075 --> 00:05:03.019
The name of the action is here as well,
but

75
00:05:03.019 --> 00:05:06.821
you probably found it
the normal way the key binding.

76
00:05:06.821 --> 00:05:11.611
The interesting part is this when right,
which is sometimes you only

77
00:05:11.611 --> 00:05:16.332
want the keyboard shortcut to work
in certain situations, right?

78
00:05:16.332 --> 00:05:20.028
And the more granular you get
here because you only have so

79
00:05:20.028 --> 00:05:23.805
many keys on your keyboard and
so many modifiers, right?

80
00:05:23.805 --> 00:05:27.394
And you can start doing that
weird command K other thing and

81
00:05:27.394 --> 00:05:31.936
start setting up entire chains and
do weird things like bending your hands

82
00:05:31.936 --> 00:05:36.640
in unnatural ways to try to hit command
option, control shift or whatever.

83
00:05:36.640 --> 00:05:41.216
But the other option is to
kind of get a little bit more

84
00:05:41.216 --> 00:05:45.587
granular on when something should work,
right?

85
00:05:45.587 --> 00:05:50.308
For instance, and we'll look at
a list in a second, you can say, hey,

86
00:05:50.308 --> 00:05:54.480
only when I'm in an active editor,
or only in the explorer, or

87
00:05:54.480 --> 00:05:57.902
only when I'm editing a JavaScript file,
right?

88
00:05:57.902 --> 00:06:02.689
And get really granular about when
you want one of these to happen,

89
00:06:02.689 --> 00:06:05.350
and kinda see those as well, right?

90
00:06:05.350 --> 00:06:10.669
So, obviously there are some
very common ones, but there's

91
00:06:10.669 --> 00:06:16.820
a very long list as well for anything
you might ever possibly wanna see.

92
00:06:16.820 --> 00:06:18.769
I think some of the ones
that you will see.

93
00:06:18.769 --> 00:06:21.696
Most common is editor text focus.

94
00:06:21.696 --> 00:06:24.120
You saw before in that terminal one,
I had terminal focus.

95
00:06:24.120 --> 00:06:26.950
So you can have different
keystrokes that only work when

96
00:06:26.950 --> 00:06:28.885
you're in the integrated terminal.

97
00:06:28.885 --> 00:06:31.085
And maybe they do something
different when you're in the editor.

98
00:06:31.085 --> 00:06:35.351
It kinda gets you double bang for
your buck if your brain can handle that.

99
00:06:35.351 --> 00:06:37.563
But ideally,
if you get to the muscle memory,

100
00:06:37.563 --> 00:06:40.133
your brain steps out of the equation for
a little bit.

101
00:06:40.133 --> 00:06:45.089
The other one that we saw before
is if it is just a true false,

102
00:06:45.089 --> 00:06:49.961
then you get to the point where
you can just put it in there.

103
00:06:49.961 --> 00:06:54.199
If you wanna say, does it equal something,
you can kinda say like, okay,

104
00:06:54.199 --> 00:06:55.826
if I am in a JavaScript file.

105
00:06:55.826 --> 00:07:02.928
And we will see various abbreviations for
TM, which actually does,

106
00:07:02.928 --> 00:07:07.832
for all the joking that I do stand for
TechMate.

107
00:07:07.832 --> 00:07:11.615
Which one of the things that editor
brought to the table, which is, yeah,

108
00:07:11.615 --> 00:07:13.729
let's say you're in a TypeScript file.

109
00:07:13.729 --> 00:07:17.979
It knows the TypeScript is a super set of
JavaScript, so anything that would work in

110
00:07:17.979 --> 00:07:21.212
the JavaScript context also
works in the TypeScript context.

111
00:07:21.212 --> 00:07:25.988
If you are in a JSX file,
that is technically JavaScript React,

112
00:07:25.988 --> 00:07:28.737
which is all of JavaScript plus JSX.

113
00:07:28.737 --> 00:07:33.515
TSX files get you into a language mode
called TypeScript React, which is

114
00:07:33.515 --> 00:07:38.461
all of JavaScript, all of JavaScript
React, all of TypeScript, right?

115
00:07:38.461 --> 00:07:42.952
And so there is a cascade,
kinda subclasses as well.

116
00:07:42.952 --> 00:07:44.824
So you do need to be a little
bit careful about that.

117
00:07:44.824 --> 00:07:48.618
But yeah, terminal focus, the diff
editor for when you're doing a get diff,

118
00:07:48.618 --> 00:07:51.736
you have different commands for
resolving conflicts, right?

119
00:07:51.736 --> 00:07:56.104
Again, all the things you find yourself
doing by hand if there's not a shortcut,

120
00:07:56.104 --> 00:07:57.894
you can give it one for yourself.

121
00:07:57.894 --> 00:08:02.269
That's a very personal journey, and
you should decide what works for

122
00:08:02.269 --> 00:08:05.173
you given whatever
keyboard layout you have.

123
00:08:05.173 --> 00:08:10.811
I've got a big boat of a keyboard at home
versus if you're always on a MacBook.

124
00:08:10.811 --> 00:08:15.671
I got an F20 key that I can play with but
that kinda changes.

125
00:08:15.671 --> 00:08:18.674
Some other ones that I
went cuz there's a lot,

126
00:08:18.674 --> 00:08:21.760
I'll show you how to see
all of them in a second.

127
00:08:21.760 --> 00:08:25.359
And to debug which one
you're in in one moment.

128
00:08:25.359 --> 00:08:32.055
Some other fun ones that maybe as I looked
at the big list could be useful to you.

129
00:08:32.055 --> 00:08:34.291
Again, sidebar focus, sure.

130
00:08:34.291 --> 00:08:37.219
A lot of the logical
operators that we know and

131
00:08:37.219 --> 00:08:41.701
love from JavaScript with one less
equal sign, work in here as well.

132
00:08:41.701 --> 00:08:43.726
So double equals [INAUDIBLE] equals.

133
00:08:43.726 --> 00:08:48.990
But generally speaking, okay,
if it's in the terminal focus and

134
00:08:48.990 --> 00:08:55.671
I've got a terminal open or if it is in an
editor and it's a JavaScript file, right?

135
00:08:55.671 --> 00:08:59.367
Or Ruby, what have you.

136
00:08:59.367 --> 00:09:03.340
If it's for inserting a comment, right?

137
00:09:03.340 --> 00:09:08.144
Certain languages have the same comment
syntax, right, C in JavaScript, for

138
00:09:08.144 --> 00:09:09.445
instance, as well.

139
00:09:09.445 --> 00:09:15.328
If you wanna find out, if you've
taken this to its natural conclusion,

140
00:09:15.328 --> 00:09:19.387
and you're really trying
to get super granular.

141
00:09:19.387 --> 00:09:22.704
VS Code is an electron app.

142
00:09:22.704 --> 00:09:27.424
Electron app is effectively node and

143
00:09:27.424 --> 00:09:30.926
Chrome blended together,

144
00:09:30.926 --> 00:09:35.781
which means,
&gt;&gt; Steve Kinney: You

145
00:09:35.781 --> 00:09:39.214
can toggle the developer tools and

146
00:09:39.214 --> 00:09:44.548
that looks like something we know and
love, as well.

147
00:09:44.548 --> 00:09:49.148
And so, now you could do something

148
00:09:49.148 --> 00:09:54.397
like,
&gt;&gt; Steve Kinney: I wanted the other one.

149
00:09:58.357 --> 00:09:59.530
&gt;&gt; Steve Kinney: Expect contact keys.

150
00:09:59.530 --> 00:10:01.861
And you get this fun red thing here,

151
00:10:01.861 --> 00:10:06.459
which kinda looks like when you're
inspecting an element in Chrome.

152
00:10:06.459 --> 00:10:08.476
And let's say,
I don't know what this file is.

153
00:10:08.476 --> 00:10:13.952
Let's go back to this
other file over here.

154
00:10:13.952 --> 00:10:18.570
Find something, and
you will see this giant object.

155
00:10:18.570 --> 00:10:25.487
If you really ever want to know what are
all the things I can win in a key binding?

156
00:10:25.487 --> 00:10:28.887
Well, this is the answer to your question,
and

157
00:10:28.887 --> 00:10:33.056
now you know why I didn't put
the full list on the website.

158
00:10:33.056 --> 00:10:37.658
And this will change depending on the
extensions you have installed, too, right?

159
00:10:37.658 --> 00:10:40.158
You can see, all these Github ones,

160
00:10:40.158 --> 00:10:44.686
I'll give you a lucky guess which
extension added those, right?

161
00:10:44.686 --> 00:10:49.524
But if you are trying to figure out,
you can kind of grab a given thing in

162
00:10:49.524 --> 00:10:53.061
the editor and get all the true and
falses, right?

163
00:10:53.061 --> 00:10:56.013
Obviously you're gonna get
more falses than trues, right?

164
00:10:56.013 --> 00:11:00.785
But you can say, okay,
input focus is true.

165
00:11:00.785 --> 00:11:03.877
I think editor focus, which is,

166
00:11:03.877 --> 00:11:09.961
I'm not finding it anytime soon,
will also be true in this case.

167
00:11:09.961 --> 00:11:11.330
So on and so forth.

168
00:11:11.330 --> 00:11:15.179
&gt;&gt; Speaker 2: So
can you chain these together when this and

169
00:11:15.179 --> 00:11:20.181
this is true and this and
you just keep combining things.

170
00:11:20.181 --> 00:11:23.815
&gt;&gt; Steve Kinney: Absolutely, so if we
check out this is like a system one, and

171
00:11:23.815 --> 00:11:28.686
you can actually go in there and see all
the system ones too, cuz it's JSON file.

172
00:11:28.686 --> 00:11:33.023
You can kinda get a sense of what it
might look like for some of these, for

173
00:11:33.023 --> 00:11:37.724
focus terminal, my user one terminal
has been created cuz I'm using the same

174
00:11:37.724 --> 00:11:40.424
keystroke as creating a new terminal pane.

175
00:11:40.424 --> 00:11:43.437
So if terminal has been created and
it supports terminal,

176
00:11:43.437 --> 00:11:45.414
there's ways to disable it, right?

177
00:11:45.414 --> 00:11:48.063
Cuz then don't do anything.

178
00:11:48.063 --> 00:11:51.716
But, for any of these, you can use
end to end, ors, equals, right?

179
00:11:51.716 --> 00:11:57.006
You get a few of the logical operators
where you can kind of get granular,

180
00:11:57.006 --> 00:11:59.448
exactly when this ought to work.

181
00:11:59.448 --> 00:12:02.374
That said,
the more complicated you may make this,

182
00:12:02.374 --> 00:12:05.113
it's one of those things
when it works is great.

183
00:12:05.113 --> 00:12:07.947
And when it doesn't,
kiss your morning goodbye, right?

184
00:12:07.947 --> 00:12:11.401
Cuz you will tweak this?

185
00:12:11.401 --> 00:12:16.212
But if you're getting false positives,
I think it's better to then,

186
00:12:16.212 --> 00:12:21.121
I wouldn't start out egregious with
a very long logical chain, right?

187
00:12:21.121 --> 00:12:23.828
I would start out with
the simplest possible option.

188
00:12:23.828 --> 00:12:26.420
And then if I got false positives
when it was triggering,

189
00:12:26.420 --> 00:12:29.394
when I didn't want it to get a little
bit more granular over time.

190
00:12:29.394 --> 00:12:35.686
And like I said, at any point,
you can toggle those developer tools,

191
00:12:35.686 --> 00:12:40.380
go back over here, and
do the inspect context keys,

192
00:12:40.380 --> 00:12:46.052
find exactly where you would have been or
wanna be in this case.

193
00:12:46.052 --> 00:12:48.631
And you will get all of the true and
false values and

194
00:12:48.631 --> 00:12:50.795
you can kinda work backwards from there.

195
00:12:50.795 --> 00:12:54.720
That way,
you're not playing a weird guessing game,

196
00:12:54.720 --> 00:12:58.486
because simpler version of
this is randomly guess.

197
00:12:58.486 --> 00:13:00.373
Or let's be honest with ourselves.

198
00:13:00.373 --> 00:13:02.760
Copy and
paste things you found from the Internet,

199
00:13:02.760 --> 00:13:04.491
which really works most of the time.

200
00:13:04.491 --> 00:13:06.793
Honestly, for simple things.

201
00:13:06.793 --> 00:13:12.176
If you're in some bespoke language
where there's not a lot of, if you're

202
00:13:12.176 --> 00:13:17.229
in a Lua file inside of whatever,
you might be on your own a little bit.

203
00:13:17.229 --> 00:13:19.960
And you can kind of deduce
it from here as well.

204
00:13:19.960 --> 00:13:24.672
So as we know, for
reasons that nobody quite understands.

205
00:13:24.672 --> 00:13:27.040
Windows and Linux use control for
everything.

206
00:13:27.040 --> 00:13:31.308
MacOS uses command,
there is no command key.

207
00:13:31.308 --> 00:13:32.219
This is the world we live in.

208
00:13:32.219 --> 00:13:36.028
This is why I can't switch computers, not
because the operating systems are better

209
00:13:36.028 --> 00:13:39.672
or worse, but because I have muscle memory
at this point, and so I pay too much for

210
00:13:39.672 --> 00:13:40.710
computer every time.

211
00:13:40.710 --> 00:13:41.746
Cuz that's where the keys are.

212
00:13:41.746 --> 00:13:46.520
You can also say in this case, if I wanted
it to be slightly different on a Mac,

213
00:13:46.520 --> 00:13:48.439
I could give it a Mac shortcut.

214
00:13:48.439 --> 00:13:53.241
This is useful if you're trying to make
a file that you are sharing whether

215
00:13:53.241 --> 00:13:56.894
as a VS code extension,
which we'll talk about later.

216
00:13:56.894 --> 00:13:59.830
I guess,
if you're syncing your settings and

217
00:13:59.830 --> 00:14:05.401
you're on two different computers I don't
know how you live like that, but whatever,

218
00:14:05.401 --> 00:14:10.545
you can theoretically specify it for a
different OS to be a different keystroke.

219
00:14:10.545 --> 00:14:14.965
So if you find that that key
means something on Linux, right,

220
00:14:14.965 --> 00:14:19.895
then you can choose to do something
slightly different in that case.

221
00:14:19.895 --> 00:14:24.033
Cool, the other ones we saw before,

222
00:14:24.033 --> 00:14:28.981
which are these multi stroke key bindings.

223
00:14:28.981 --> 00:14:33.186
And so for instance,
one of the ones that I use a lot is,

224
00:14:33.186 --> 00:14:38.031
let's say I have two panes and
I can't see anything anymore and

225
00:14:38.031 --> 00:14:40.604
I'm frustrated and I wanna cry.

226
00:14:40.604 --> 00:14:46.261
One of the ones where you can just kill
an entire editor group is Command K,

227
00:14:46.261 --> 00:14:51.937
then W, and that is just you hit
Command K and then w, real quick, right?

228
00:14:51.937 --> 00:14:55.860
And I won't save,
close that entire editor group, right?

229
00:14:55.860 --> 00:15:04.691
You can make these yourself
&gt;&gt; Steve Kinney: By

230
00:15:04.691 --> 00:15:09.185
simply doing something, it's a comma
in this case or a space rather.

231
00:15:09.185 --> 00:15:16.388
So if you did cmd-k, control backtick.

232
00:15:16.388 --> 00:15:20.997
Good luck switching your finger from
the Command key to the Control key and

233
00:15:20.997 --> 00:15:22.644
getting that dance down.

234
00:15:22.644 --> 00:15:25.509
But should you accomplish
that muscle memory, right?

235
00:15:25.509 --> 00:15:28.588
Now, you can kinda buy
yourself almost name space for

236
00:15:28.588 --> 00:15:32.431
some of these keyboard shortcuts,
because now you hit Command K.

237
00:15:32.431 --> 00:15:36.309
And if you get to the next one quick
enough, I would probably not choose

238
00:15:36.309 --> 00:15:39.549
another modifier, but
we saw before it was Command K, W.

239
00:15:39.549 --> 00:15:41.917
So you hit Command K,
and then you hit W, and

240
00:15:41.917 --> 00:15:44.158
then it'll close the entire editor tab.

241
00:15:44.158 --> 00:15:48.794
So if you ever see those, or if you
want to do something like that, you can

242
00:15:48.794 --> 00:15:53.965
theoretically have one followed by another
by yourself a little bit more space.

243
00:15:53.965 --> 00:15:56.910
Like I said, that is probably for

244
00:15:56.910 --> 00:16:02.495
the use case in which you know
what you're doing at that point.

245
00:16:02.495 --> 00:16:05.034
I cannot come up with
a hypothetical situation in which

246
00:16:05.034 --> 00:16:06.252
you would need to do that.

247
00:16:06.252 --> 00:16:11.684
But one time, maybe three years from now,
you'll be like, I need that.

248
00:16:11.684 --> 00:16:16.191
And I'm glad we did this together.

249
00:16:16.191 --> 00:16:17.352
Cool, cool, cool.

250
00:16:17.352 --> 00:16:19.942
I'm gonna put that back.

251
00:16:19.942 --> 00:16:23.101
As you can see, this one, for instance,
for defining key binding is command K.

252
00:16:23.101 --> 00:16:24.987
So you just double tap that one.

253
00:16:24.987 --> 00:16:26.997
And you could also just
press whatever you want,

254
00:16:26.997 --> 00:16:29.512
in case you don't wanna remember
the weird syntax, right?

255
00:16:29.512 --> 00:16:35.238
So you could do, I don't know,
ctrl+shift+f1, right?

256
00:16:35.238 --> 00:16:39.503
And that will be the new keystroke,
it will put a new one in there.

257
00:16:39.503 --> 00:16:45.036
I would probably use that visual
editor that you saw before,

258
00:16:45.036 --> 00:16:47.542
but it's up to you as well.

259
00:16:47.542 --> 00:16:52.218
Cool, questions, comments, concerns,
cries of outrage on key bindings?

260
00:16:52.218 --> 00:16:55.719
Don't get carried away cuz you will do
the thing where you set up a bunch and

261
00:16:55.719 --> 00:16:57.145
don't remember any of them.

262
00:16:57.145 --> 00:16:59.193
&gt;&gt; Speaker 2: Can you chain
commands together, so

263
00:16:59.193 --> 00:17:02.373
one key binding that could do
multiple commands at once.

264
00:17:02.373 --> 00:17:05.494
&gt;&gt; Steve Kinney: I love when you ask
a question that it's like, I'm ready for.

265
00:17:05.494 --> 00:17:08.225
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Steve Kinney: The question was,

266
00:17:08.225 --> 00:17:11.561
can you have one keystroke
that does multiple things?

267
00:17:11.561 --> 00:17:17.154
No ish, not out of the box,
there is an extension called

268
00:17:17.154 --> 00:17:22.638
multi command, which has 139,000 installs.

269
00:17:22.638 --> 00:17:24.602
So you are not the first
person to ask this question.

270
00:17:24.602 --> 00:17:29.269
And you can install this and as you
can kinda see what the syntax looks,

271
00:17:29.269 --> 00:17:34.258
where the command will be this
"extension.multiCommand.execute",

272
00:17:34.258 --> 00:17:38.154
but then it has a bunch of things
you can kinda type in a row.

273
00:17:38.154 --> 00:17:41.316
So you would set up the individual ones,

274
00:17:41.316 --> 00:17:46.159
and then you could have it,
it's kinda macro in Vim, right?

275
00:17:46.159 --> 00:17:50.973
Where you can kinda say, again,
this case is like cursor down three times,

276
00:17:50.973 --> 00:17:52.718
which is a thing, I guess.

277
00:17:52.718 --> 00:17:55.647
But you can put together
an entire sequence of things and

278
00:17:55.647 --> 00:17:58.464
change stuff together,
you just need an extension.

279
00:17:58.464 --> 00:18:00.718
Many times, if it is not built in,
the answer is,

280
00:18:00.718 --> 00:18:02.670
there's probably an extension for that.

281
00:18:02.670 --> 00:18:09.630
And the nice part is, when we look at
some of the extensions in a little bit,

282
00:18:09.630 --> 00:18:14.615
it should make it very clear
how crazy you can take it.

283
00:18:14.615 --> 00:18:18.415
You could build a full size
app inside of VS Code, right?

284
00:18:18.415 --> 00:18:20.295
And as many reasons why
you might wanna do that.

285
00:18:20.295 --> 00:18:24.191
Insofar that, a lot of stuff is
taken care of for you, right?

286
00:18:24.191 --> 00:18:26.523
You don't have to package your
own electron app then, or

287
00:18:26.523 --> 00:18:27.503
host your own website.

288
00:18:27.503 --> 00:18:28.940
You can just have an extension.

289
00:18:28.940 --> 00:18:33.870
We will see an official first
party extension later that very

290
00:18:33.870 --> 00:18:38.520
much walks that line of app
with inside of an app, right?

291
00:18:38.520 --> 00:18:41.155
Which could be useful for
a lot of various use cases.

292
00:18:41.155 --> 00:18:44.333
We'll even build a very
simple version because,

293
00:18:44.333 --> 00:18:49.337
most of the work is not necessarily VS
code related as regular old JavaScript.

294
00:18:49.337 --> 00:18:53.202
So we'll look at some examples towards
the end of building our own extensions as

295
00:18:53.202 --> 00:18:54.654
well, it's gonna be great.

296
00:18:54.654 --> 00:18:59.212
And it is one of those things where my
hope is, at the time you're like, yeah,

297
00:18:59.212 --> 00:19:00.122
that's cool.

298
00:19:00.122 --> 00:19:04.237
And then a week from now,
you're like, I can do that thing,

299
00:19:04.237 --> 00:19:08.047
that thing that I wanna do,
you almost definitely can.

300
00:19:08.047 --> 00:19:08.844
We're building one.

301
00:19:08.844 --> 00:19:12.631
I work at this company where we build
a developer tool called temporal, but

302
00:19:12.631 --> 00:19:15.874
then the ability to spin up the server,
to spin down the server,

303
00:19:15.874 --> 00:19:17.940
open the given workflow in the browser.

304
00:19:17.940 --> 00:19:21.212
Or see the list of running workflows,
you can do that all from the editor.

305
00:19:21.212 --> 00:19:25.467
And you can kinda take the thing
that you work on or something.

306
00:19:25.467 --> 00:19:28.692
This is obviously we're building this for
consumers of the product, right?

307
00:19:28.692 --> 00:19:31.429
To kinda be integrated
in there as well and

308
00:19:31.429 --> 00:19:34.570
be able to spin up all
those things very easily.

