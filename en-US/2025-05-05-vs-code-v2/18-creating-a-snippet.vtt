WEBVTT

1
00:00:00.291 --> 00:00:05.492
&gt;&gt; Steve Kinney: Let's talk about
snippets in which a previous iteration

2
00:00:05.492 --> 00:00:12.765
of myself felt the need to write the write
out the advantages of using snippets.

3
00:00:12.765 --> 00:00:16.370
I don't know that you need
a sales pitch on this.

4
00:00:16.370 --> 00:00:19.315
Do you write the same thing over and
over again?

5
00:00:19.315 --> 00:00:19.975
Would you like to.

6
00:00:19.975 --> 00:00:22.764
To not write the same thing over and
over again.

7
00:00:22.764 --> 00:00:29.381
Yay, do you somehow need more
cajoy into why snippets are good.

8
00:00:29.381 --> 00:00:31.539
Here you go.

9
00:00:31.539 --> 00:00:37.224
This is one of those things too where
we'll see remnants of this popping out,

10
00:00:37.224 --> 00:00:40.986
which is text mate themes,
work as VS code Themes,

11
00:00:40.986 --> 00:00:45.466
TextMate snippets are VS code snippets,
so on and so forth.

12
00:00:45.466 --> 00:00:49.060
And that's not just a like
TextMate to VS code like, for

13
00:00:49.060 --> 00:00:53.430
some reason that's true of like Adam,
I think maybe even sublime.

14
00:00:53.430 --> 00:00:56.429
I don't know how that worked
out like that, but here it is.

15
00:00:56.429 --> 00:00:59.778
A snippet is basically you
get a little shortcut.

16
00:00:59.778 --> 00:01:04.342
You type in that shortcut,
you get more stuff, right?

17
00:01:04.342 --> 00:01:09.484
This is useful for anything you might
wanna do, if it is given patterns

18
00:01:09.484 --> 00:01:15.512
you repeat in your code base, or could
just be the beginnings of React component.

19
00:01:15.512 --> 00:01:19.607
There are lots of extensions
that have snippets.

20
00:01:19.607 --> 00:01:26.470
I don't use any of them cuz
I am tightly wound, right?

21
00:01:26.470 --> 00:01:28.922
And like want the shortcuts
the way I want them,

22
00:01:28.922 --> 00:01:31.142
want the formatting
the way that I want it.

23
00:01:31.142 --> 00:01:34.685
And a lot of times it's like,
I like 25% of these snippets and

24
00:01:34.685 --> 00:01:36.650
don't want the rest of them in there.

25
00:01:36.650 --> 00:01:38.956
So there are, for most cases,

26
00:01:38.956 --> 00:01:43.755
do you need to write your own snippet for
like a react component?

27
00:01:43.755 --> 00:01:46.316
Probably not,
do you need to write your own snippet for

28
00:01:46.316 --> 00:01:48.049
React component the way you like it?

29
00:01:48.049 --> 00:01:50.381
Maybe, [LAUGH].

30
00:01:50.381 --> 00:01:53.764
So let's talk about that situation,
cuz the other one just involves going and

31
00:01:53.764 --> 00:01:55.567
finding the extension, installing it.

32
00:01:55.567 --> 00:01:56.448
We've covered that.

33
00:01:56.448 --> 00:01:58.644
So we're going to do the second case here,

34
00:01:58.644 --> 00:02:01.513
which is there is a thing that
you are doing all the time.

35
00:02:01.513 --> 00:02:06.398
Again, maybe it's just like your like
whatever like client that you all wrote

36
00:02:06.398 --> 00:02:11.210
to hit the backend APIs or just patterns
that you do in your code base that you do

37
00:02:11.210 --> 00:02:14.566
not want to do by hand anymore,
you can make snippet.

38
00:02:14.566 --> 00:02:15.504
We'll have some exercises.

39
00:02:15.504 --> 00:02:17.880
You'll get to play around
with this in a second, but

40
00:02:17.880 --> 00:02:21.554
I might skip around a little bit through
some of the advanced techniques before we

41
00:02:21.554 --> 00:02:22.867
head over to the exercises.

42
00:02:22.867 --> 00:02:28.248
But let's do the world's simplest
version of this, which is, again,

43
00:02:28.248 --> 00:02:33.030
I just need a file at this point,
so open that playground again.

44
00:02:33.030 --> 00:02:38.649
Just give myself a nice empty
file to play around with.

45
00:02:38.649 --> 00:02:44.462
And so one thing we can do is again,
the command palette is our friend.

46
00:02:44.462 --> 00:02:45.930
What happens if we type in snippets?

47
00:02:45.930 --> 00:02:49.333
Well, we've got configure snippets.

48
00:02:49.333 --> 00:02:53.346
That one seems like the one that we want,
but I open this for a reason.

49
00:02:53.346 --> 00:02:56.774
Insert snippet, that's good.

50
00:02:56.774 --> 00:02:58.426
You can also do it with the keyword.

51
00:02:58.426 --> 00:03:03.197
Trigger that we saw before,
where insert snippet is useful is we'll

52
00:03:03.197 --> 00:03:07.802
use it later if we want to actually
have a snippet for a keystroke and

53
00:03:07.802 --> 00:03:12.325
then fill file with snippet is
basically a way to instead of like,

54
00:03:12.325 --> 00:03:15.122
you just wanting maybe one method call or

55
00:03:15.122 --> 00:03:19.588
function this file you legit want
to create a new file template.

56
00:03:19.588 --> 00:03:24.352
So if it's like, I use the same boiler
plate for every single component in

57
00:03:24.352 --> 00:03:28.605
our design system it's gonna import
the same CSS file the same way.

58
00:03:28.605 --> 00:03:32.716
There's a bunch of different ways you
can do that, one of them is Snippets.

59
00:03:32.716 --> 00:03:40.023
But for our purposes, lets go back,
we're going to go configure Snippets.

60
00:03:40.023 --> 00:03:45.541
As you can see, there are a whole
bunch of snippets, either A,

61
00:03:45.541 --> 00:03:52.205
built in by VS code or B, they are added
by extensions or C, I guess from you,

62
00:03:52.205 --> 00:03:57.434
I believe that I tried to clear
most of them out beforehand.

63
00:03:57.434 --> 00:04:01.864
But yeah, you can see the ones for various
different languages also useful if you

64
00:04:01.864 --> 00:04:04.685
just wanna actually see
which ones were included.

65
00:04:04.685 --> 00:04:06.549
So like, we can go into the CSS 1.

66
00:04:06.549 --> 00:04:09.302
There's not really anything in here.

67
00:04:09.302 --> 00:04:12.402
These are on the user level,
so on and so forth.

68
00:04:12.402 --> 00:04:16.465
As you can see, you can also you
can have a global snippets file.

69
00:04:16.465 --> 00:04:20.343
You can also make one for this project.

70
00:04:20.343 --> 00:04:21.476
Which one do you do?

71
00:04:21.476 --> 00:04:24.101
It depends, do you want them for
the project?

72
00:04:24.101 --> 00:04:26.071
Do you want them global?

73
00:04:26.071 --> 00:04:28.080
If it's the unique
ergonomics of this project,

74
00:04:28.080 --> 00:04:29.753
obviously you want it from the project.

75
00:04:29.753 --> 00:04:33.763
If it is something you just like, if you
just wanna type in CL tab instead of

76
00:04:33.763 --> 00:04:37.195
console.log and move the cursor
instead of the parentheses,

77
00:04:37.195 --> 00:04:39.222
that would probably be a global one.

78
00:04:39.222 --> 00:04:46.209
Whichever one you choose to do is
up to you, I don't really care.

79
00:04:46.209 --> 00:04:51.609
So we can go ahead,
I can do one in this file, we can call it

80
00:05:00.152 --> 00:05:03.100
&gt;&gt; Steve Kinney: Very cool code snippets,

81
00:05:03.100 --> 00:05:04.039
right?

82
00:05:04.039 --> 00:05:06.207
And now we've got this file, and

83
00:05:06.207 --> 00:05:11.631
you can see that there is some amount of a
placeholder in here, and I think that, why

84
00:05:11.631 --> 00:05:16.542
don't we just uncomment that placeholder
to get a sense of how this works?

85
00:05:16.542 --> 00:05:20.741
And then what we'll do is kind of like,
tear it apart, and

86
00:05:20.741 --> 00:05:24.869
then change stuff and
add more stuff, so on and so forth.

87
00:05:24.869 --> 00:05:28.586
So a snippets file is a giant JSON file,

88
00:05:28.586 --> 00:05:34.456
just like everything in VS code,
it's JSON all the way down.

89
00:05:34.456 --> 00:05:36.194
All right, so what do we have in here?

90
00:05:36.194 --> 00:05:39.505
So first of all,
we've got this prefix, right?

91
00:05:39.505 --> 00:05:44.209
This is like, what you are going to type
in order to trigger the snippet, right?

92
00:05:44.209 --> 00:05:45.210
So in this case,

93
00:05:45.210 --> 00:05:50.002
this one is a console log with some weird
ceremony here that we will get through.

94
00:05:50.002 --> 00:05:54.096
We'll get by just typing in log, right?

95
00:05:54.096 --> 00:05:58.401
And again,
if you wanted that to be CL, fine.

96
00:05:58.401 --> 00:06:02.854
You can do various different things
See a description, and then again,

97
00:06:02.854 --> 00:06:04.683
what scopes it should run in.

98
00:06:04.683 --> 00:06:07.911
Obviously you do not want
this running in a Ruby file,

99
00:06:07.911 --> 00:06:10.221
cuz console log is not a thing in Ruby.

100
00:06:10.221 --> 00:06:13.944
You would want puts, or whatever.

101
00:06:13.944 --> 00:06:17.958
I used to write Ruby, so
now we've got this in here so

102
00:06:17.958 --> 00:06:21.348
we can go into a JavaScript file, ideally.

103
00:06:21.348 --> 00:06:28.307
And now we can see we've got this log
that we print to the console, cool.

104
00:06:28.307 --> 00:06:32.446
And as you can see,
it put my cursor right in the middle here.

105
00:06:34.539 --> 00:06:39.010
&gt;&gt; Steve Kinney: And then if I hit tab
again, it will go to the end there.

106
00:06:39.010 --> 00:06:40.413
All right, so let's go ahead.

107
00:06:40.413 --> 00:06:43.107
We don't want that one.

108
00:06:43.107 --> 00:06:45.189
We can see that we've got
these little placeholders.

109
00:06:45.189 --> 00:06:48.870
That's where my cursor went first, right?

110
00:06:48.870 --> 00:06:50.891
That's where my cursor went second.

111
00:06:50.891 --> 00:06:57.353
The other thing you can do is this
will always be the last one, right?

112
00:06:57.353 --> 00:07:00.068
So if it's like, hey,
I might be adding more.

113
00:07:00.068 --> 00:07:03.470
I don't wanna iterate that number for
the very end of where we should end up.

114
00:07:03.470 --> 00:07:10.758
$0 will always be the final place when
you filled out all the other fields.

115
00:07:10.758 --> 00:07:13.960
And body, in this case, is an array.

116
00:07:13.960 --> 00:07:17.869
Each item in the array is a line, right?

117
00:07:17.869 --> 00:07:26.100
And so, for instance, you wanted it
to be a multiline console log, right?

118
00:07:26.100 --> 00:07:28.974
I'll come up with a better
example in a second, I swear.

119
00:07:28.974 --> 00:07:36.326
You could theoretically
&gt;&gt; Steve Kinney: Add more lines.

120
00:07:40.959 --> 00:07:44.830
&gt;&gt; Steve Kinney: And
you can either put two spaces in here, or

121
00:07:44.830 --> 00:07:47.658
you can do like slash T for a tab.

122
00:07:47.658 --> 00:07:50.307
Whatever you wanna do,
doesn't really matter.

123
00:07:50.307 --> 00:07:56.183
So now if I did the same,
you can see that now a multiline,

124
00:07:56.183 --> 00:08:01.325
but it Does not like that
the quotes are on the wrong

125
00:08:01.325 --> 00:08:06.489
lines cuz JavaScript gets
very angry about that.

126
00:08:06.489 --> 00:08:09.710
Now, hold on,
that's where the back tick comes in.

127
00:08:09.710 --> 00:08:11.461
That's really unhappy about this.

128
00:08:13.471 --> 00:08:14.910
&gt;&gt; Steve Kinney: Because it wasn't
a valid string to begin with.

129
00:08:14.910 --> 00:08:18.526
Then theoretically if I did that,
it would work.

130
00:08:18.526 --> 00:08:24.156
But yeah, so you can add lines,
you can do whatever you want in there,

131
00:08:24.156 --> 00:08:27.890
but there's a lot more
power to these as well.

132
00:08:27.890 --> 00:08:32.975
So for instance, I'm going to grab
this one for a second cuz watching

133
00:08:32.975 --> 00:08:37.546
me type it out probably just
doesn't seem like that much fun.

134
00:08:37.546 --> 00:08:42.715
Again, this is a slightly more involved,
but not much.

135
00:08:42.715 --> 00:08:48.191
One, we've got a for loop, which is now
gonna have some placeholder values, right?

136
00:08:48.191 --> 00:08:52.837
Which is, yeah, array is probably fine.

137
00:08:52.837 --> 00:08:56.841
If I know it's called something else,
that's cool too, but

138
00:08:56.841 --> 00:08:58.774
we'll have a default value.

139
00:08:58.774 --> 00:09:00.610
So this is one of those kinda for

140
00:09:00.610 --> 00:09:05.003
loops that are just iterating the index
number as you find one every time.

141
00:09:05.003 --> 00:09:09.362
But the important parts
is you've got one array.

142
00:09:09.362 --> 00:09:13.175
The nice part that we'll see is,
as I change the first one,

143
00:09:13.175 --> 00:09:15.782
the second one changes as well, right?

144
00:09:15.782 --> 00:09:20.751
And then I can say what I want
the individual element to be is, and

145
00:09:20.751 --> 00:09:24.442
then finally we'll end up in the body,
right?

146
00:09:24.442 --> 00:09:28.269
And so, what does this one look like now?

147
00:09:33.214 --> 00:09:34.533
&gt;&gt; Steve Kinney: No, all right, fine.

148
00:09:34.533 --> 00:09:39.361
You want 10, let's do it.
So now you can see array.

149
00:09:39.361 --> 00:09:41.225
I can just change that to items.

150
00:09:41.225 --> 00:09:43.138
It changes in both places.

151
00:09:43.138 --> 00:09:46.173
I hit Tab, I can change this one now.

152
00:09:46.173 --> 00:09:48.274
And finally, no auto complete.

153
00:09:48.274 --> 00:09:50.978
Finally, I can do the body as well.

154
00:09:50.978 --> 00:09:55.287
And right,
you can begin to have placeholders,

155
00:09:55.287 --> 00:10:00.660
we can do actually,
some fairly powerful stuff in here too.

156
00:10:00.660 --> 00:10:06.165
Which is, the placeholders can keep
going for as much as you want.

157
00:10:06.165 --> 00:10:11.121
You can also put in various
different variables.

158
00:10:11.121 --> 00:10:16.009
So I'm gonna show you those in the,
I listed them out for

159
00:10:16.009 --> 00:10:20.587
you here, which is,
this is where that TM shows up.

160
00:10:20.587 --> 00:10:21.450
Which is TextMate.

161
00:10:21.450 --> 00:10:22.583
Life is weird.

162
00:10:22.583 --> 00:10:28.264
And so, for instance, if you have in
the dollar sign in these brackets,

163
00:10:28.264 --> 00:10:32.471
TM file name,
that is gonna be the current file name.

164
00:10:32.471 --> 00:10:35.924
And I'll show you a trick that you can do

165
00:10:35.924 --> 00:10:40.015
that's kinda powerful
with that in a second.

166
00:10:40.015 --> 00:10:45.746
Or if you don't want the extension,
if you want the directory,

167
00:10:45.746 --> 00:10:49.461
for anything that you might choose to do,

168
00:10:49.461 --> 00:10:53.616
the workspace name or
folder, current year.

169
00:10:53.616 --> 00:10:57.063
The two that I think are, I mean these,
you know if you need them,

170
00:10:57.063 --> 00:11:00.158
I don't need to explain what
the current date is, right?

171
00:11:00.158 --> 00:11:04.592
But clipboard,
no surprises what clipboard is, right?

172
00:11:04.592 --> 00:11:06.314
It's what's ever on your clipboard.

173
00:11:06.314 --> 00:11:10.622
I have never wanted to use any of these,
but

174
00:11:10.622 --> 00:11:14.582
they are there for you if you want them.

175
00:11:14.582 --> 00:11:19.579
The ones that I think are super
powerful is clipboard, obviously.

176
00:11:19.579 --> 00:11:24.089
Maybe your snippets just take whatever's
in the clipboard and put it in quotes or

177
00:11:24.089 --> 00:11:25.829
something along those lines.

178
00:11:25.829 --> 00:11:29.951
The other one I think is super
useful is this file name base,

179
00:11:29.951 --> 00:11:33.838
we'll do something interesting
with that in a second.

180
00:11:33.838 --> 00:11:38.930
And there's another one that I
don't think I have listed here,

181
00:11:38.930 --> 00:11:43.550
which is the comprehensive
list will have it probably, or

182
00:11:43.550 --> 00:11:46.111
I don't know how to make links.

183
00:11:46.111 --> 00:11:46.784
I'll fix that a little bit.

184
00:11:46.784 --> 00:11:50.279
But there's also one for
what is currently selected, right?

185
00:11:50.279 --> 00:11:52.649
So you can select some text,
use one of these, and

186
00:11:52.649 --> 00:11:54.916
be able to work with
whatever you had selected.

187
00:11:54.916 --> 00:11:59.568
So if you had a line and you wanted
to wrap it in a try-catch block,

188
00:11:59.568 --> 00:12:02.795
right, you could select some text, right?

189
00:12:02.795 --> 00:12:03.991
Do your snippet, and

190
00:12:03.991 --> 00:12:07.919
then that selected text will be
inside the try-catch block, right?

191
00:12:07.919 --> 00:12:09.952
Or an if statement, or whatever.

192
00:12:09.952 --> 00:12:14.848
So you can do a bunch of those, but
where it becomes a little more powerful is

193
00:12:14.848 --> 00:12:18.370
then also,
the ability to manipulate those as well.

194
00:12:18.370 --> 00:12:23.426
But let's also show some
various options and then we'll

195
00:12:23.426 --> 00:12:30.395
kinda talk about some of the manipulation
pieces as well, which sounds mean.

196
00:12:30.395 --> 00:12:31.905
Let's go back to our console log for
a second.

197
00:12:35.143 --> 00:12:37.802
&gt;&gt; Steve Kinney: So,
let's say we wanted to

198
00:12:37.802 --> 00:12:43.592
have
&gt;&gt; Steve Kinney: I'm

199
00:12:43.592 --> 00:12:47.765
just gonna call it cons,
or Print to Console.

200
00:12:49.631 --> 00:12:54.701
&gt;&gt; Steve Kinney: And in this case
we're gonna say that the trigger, or

201
00:12:54.701 --> 00:13:00.568
not the trigger, the prefix is,
we'll say log in this case.

202
00:13:00.568 --> 00:13:04.369
We've got back that console log,
but let's change it a little bit.

203
00:13:04.369 --> 00:13:09.330
Where we wanna say console,
and then what we're

204
00:13:09.330 --> 00:13:14.060
gonna do is make this
the second placeholder.

205
00:13:14.060 --> 00:13:17.358
And for the first one, what we're gonna do

206
00:13:17.358 --> 00:13:22.917
is,
&gt;&gt; Steve Kinney: All

207
00:13:22.917 --> 00:13:26.740
the various different console logging.

208
00:13:26.740 --> 00:13:33.989
Options in this case, I don't want pipes,
I want quotes, or commas, woo, talking.

209
00:13:33.989 --> 00:13:38.216
Cool, cool, cool.

210
00:13:38.216 --> 00:13:41.244
And I don't necessarily want the quotes
here, just in case it's a variable.

211
00:13:44.266 --> 00:13:51.362
&gt;&gt; Steve Kinney: So
let's go ahead and try that.

212
00:13:51.362 --> 00:13:54.000
The syntax highlighting gives
me a little bit of pause, but

213
00:13:54.000 --> 00:13:55.972
I'll find out where I'm wrong in a second.

214
00:14:00.364 --> 00:14:01.488
&gt;&gt; Steve Kinney: There we go.

215
00:14:01.488 --> 00:14:04.507
So, I can put a bunch of options
in these pipes next to it.

216
00:14:04.507 --> 00:14:09.268
So, before you saw, if I just had message,

217
00:14:09.268 --> 00:14:17.125
the default here would be
&gt;&gt; Steve Kinney: Message or,

218
00:14:17.125 --> 00:14:18.109
call it value.

219
00:14:18.109 --> 00:14:20.977
But here we'll get some options, right?

220
00:14:20.977 --> 00:14:23.384
So now I can do something like, and

221
00:14:23.384 --> 00:14:27.952
you can see there are various
different placeholders I can pick.

222
00:14:27.952 --> 00:14:31.648
From log, warn, and error,
I put those in the snippet.

223
00:14:31.648 --> 00:14:36.138
So if there are things you're doing
with one of three options, so

224
00:14:36.138 --> 00:14:40.464
on and so forth, you can put those
options in there as well, and

225
00:14:40.464 --> 00:14:44.565
then the value was the second
one that I tapped into, yeah.

226
00:14:47.796 --> 00:14:52.791
&gt;&gt; Steve Kinney: The other things you can
do here as well, again, the scopes for

227
00:14:52.791 --> 00:14:55.346
where you wanted to apply work.

228
00:14:55.346 --> 00:15:00.818
The other one I think is kinda cool is,
let's say, hypothetically,

229
00:15:00.818 --> 00:15:06.871
let's say we wanted to make a simple
beginning of a React component, right?

230
00:15:06.871 --> 00:15:09.936
We could do something like,
let's just call it rcc, or

231
00:15:09.936 --> 00:15:14.989
whatever,
&gt;&gt; Steve Kinney: React Component.

232
00:15:14.989 --> 00:15:18.496
And in this case what we're
gonna do is const, and

233
00:15:18.496 --> 00:15:22.181
then what should the name
of the React component be?

234
00:15:22.181 --> 00:15:28.562
The first thing I could do is
something like this 1:ComponentName.

235
00:15:30.731 --> 00:15:34.078
&gt;&gt; Steve Kinney: Sure, that seems good.

236
00:15:34.078 --> 00:15:38.098
But the interesting thing
that I could do here,

237
00:15:38.098 --> 00:15:42.921
keep that up for a second,
is I could take that variable,

238
00:15:42.921 --> 00:15:47.257
which is the file name that
we saw earlier, right?

239
00:15:47.257 --> 00:15:53.080
So I can do TM, was it Filename_Base?

240
00:15:53.080 --> 00:15:53.999
Yeah.

241
00:16:02.703 --> 00:16:05.128
&gt;&gt; Steve Kinney: All right, see, we got
the syntax right before I talk anymore.

242
00:16:07.695 --> 00:16:12.449
&gt;&gt; Steve Kinney: Nope,
&gt;&gt; Steve Kinney: I think it might have a.

243
00:16:17.844 --> 00:16:21.474
&gt;&gt; Steve Kinney: All right, so
now the component is called index,

244
00:16:21.474 --> 00:16:26.496
which makes some amount of sense,
because the file is called index.

245
00:16:26.496 --> 00:16:33.250
Let's make a new file real quick,
just to make my point,

246
00:16:33.250 --> 00:16:39.601
we'll call it very cool component,
.JSX, right?

247
00:16:41.659 --> 00:16:44.482
&gt;&gt; Steve Kinney: Well,
the is a little bit problematic,

248
00:16:44.482 --> 00:16:48.478
because those dashes are not
valid JavaScript, right?

249
00:16:48.478 --> 00:16:55.137
And so, I could see where I was going
with this, but it doesn't work.

250
00:16:55.137 --> 00:17:00.105
The cool thing that you can do is, I feel
like there's two themes to our workshop

251
00:17:00.105 --> 00:17:03.517
together, it's like it's
all JSON under the hood and

252
00:17:03.517 --> 00:17:06.503
also regular expressions
of your best friend.

253
00:17:06.503 --> 00:17:11.934
And so you can do
transformations on the snippets,

254
00:17:11.934 --> 00:17:15.972
so in this case, what we wanna say is,

255
00:17:15.972 --> 00:17:20.661
honestly, the entire thing, so dot star.

256
00:17:20.661 --> 00:17:25.460
And then there's a bunch of regular
expressions you work with, but

257
00:17:25.460 --> 00:17:30.610
you could also just type in Pascal case,
which is capital first letter.

258
00:17:30.610 --> 00:17:34.529
Then wherever there would be a dash or
white space capital letter, right?

259
00:17:34.529 --> 00:17:37.945
So snake case but with a capital letter.

260
00:17:37.945 --> 00:17:42.277
All right, doing that from memory,
let's see how that goes,

261
00:17:42.277 --> 00:17:46.770
for me, we want to do this in
very cool component, .JSX, nope,

262
00:17:46.770 --> 00:17:51.965
I think there's a slash at the end, and
I might have to put in curly braces.

263
00:17:51.965 --> 00:17:52.869
We're gonna see together.

264
00:17:52.869 --> 00:17:56.095
The actual syntax is in the notes,
by the way, all right, so

265
00:17:56.095 --> 00:17:58.452
I want the entire thing
that should be good.

266
00:17:58.452 --> 00:18:01.855
And then I'm gonna grab this line and
see if It's what I want first, and

267
00:18:01.855 --> 00:18:04.931
then if it's not, I'll deal with
that in a second, all right.

268
00:18:04.931 --> 00:18:09.221
So we'll peek at it in a second but
as you can see, it looks at the file name,

269
00:18:09.221 --> 00:18:13.878
it figures out what the component name
ought to be based on the file name, right.

270
00:18:13.878 --> 00:18:18.036
And the cool part about this is I could
also make it also export default that same

271
00:18:18.036 --> 00:18:20.874
file name and so
now I could get if I had a boilerplate.

272
00:18:20.874 --> 00:18:24.306
Again, it's we'll look at what
I just wrote, it's squirrely,

273
00:18:24.306 --> 00:18:26.158
I had to look at my own notes to do it.

274
00:18:26.158 --> 00:18:28.149
Am I ever expecting you to remember it?

275
00:18:28.149 --> 00:18:31.831
Absolutely not, but
know that it is an option,

276
00:18:31.831 --> 00:18:35.801
know that you can look it up,
and we're good here.

277
00:18:35.801 --> 00:18:40.625
Which is this bizarre syntax here
with lots of curly braces and

278
00:18:40.625 --> 00:18:42.673
stuff along those lines.

279
00:18:42.673 --> 00:18:48.242
But if we're thinking about it for
the first placeholder, right,

280
00:18:48.242 --> 00:18:53.422
then with another interpolation,
grab the FILENAME_BASE,

281
00:18:53.422 --> 00:18:58.420
all of it, and then run it
through this pascalcase, right?

282
00:18:58.420 --> 00:19:01.826
Yeah, go look that up, don't try to
memorize it, don't try to parse it in

283
00:19:01.826 --> 00:19:04.765
your brain, it'll give you
a headache like it's not worth it.

284
00:19:04.765 --> 00:19:08.302
But the important part is you can
take stuff like the file name or

285
00:19:08.302 --> 00:19:09.856
the project name, right?

286
00:19:09.856 --> 00:19:12.099
That's gonna be the workspace
name in this case, right?

287
00:19:12.099 --> 00:19:17.271
You have a bunch of like, so if you
are doing the thing where it's like,

288
00:19:17.271 --> 00:19:20.547
if you're doing the thing where it's like,

289
00:19:20.547 --> 00:19:26.262
you want the name of the component to be
the file name is the component, great.

290
00:19:26.262 --> 00:19:31.738
But if it's a directory where you have
maybe whatever .css or .module.css,

291
00:19:31.738 --> 00:19:37.471
then maybe component .tsx, you could go to
the directory name and do that as well.

292
00:19:37.471 --> 00:19:41.966
And you could have the ability
to actually pre-create all of

293
00:19:41.966 --> 00:19:45.591
the names of all the components
in there as well.

294
00:19:45.591 --> 00:19:49.993
And for all the various again,
we look at some of these variables,

295
00:19:49.993 --> 00:19:53.924
there's even, there's uppercase,
you can lowercase,

296
00:19:53.924 --> 00:19:57.714
everything you can do,
all the different case changes.

297
00:19:57.714 --> 00:20:01.375
In this case, I think I have it written,
all of the options written somewhere.

298
00:20:01.375 --> 00:20:08.500
There's the placeholder choices,
let's see what else I have for you.

299
00:20:08.500 --> 00:20:14.780
Placeholder and regular expressions,
you can also nest some of the snippets so

300
00:20:14.780 --> 00:20:19.652
if we had this component and
we also had this prop types one, or

301
00:20:19.652 --> 00:20:23.420
you can do it with typescript type,
whatever.

302
00:20:23.420 --> 00:20:29.400
You could literally also
reference a another snippet.

303
00:20:29.400 --> 00:20:33.460
You will take this too far at
one point in your life and

304
00:20:33.460 --> 00:20:38.649
you will regret it, there's a lot
of places to keep your code dry.

305
00:20:38.649 --> 00:20:42.627
A lot of places not to do it too,
but in a lot of cases,

306
00:20:42.627 --> 00:20:46.878
if you do want one to rely on another,
you could make this

307
00:20:46.878 --> 00:20:51.956
theoretically a snippet,
which is like component name, right?

308
00:20:51.956 --> 00:20:54.787
Take that crazy out into one place and

309
00:20:54.787 --> 00:21:00.826
then be able to use that nested snippet
here as well as here, so on and so forth.

310
00:21:00.826 --> 00:21:05.817
So you can kind kind of take common
things that you do all the time and

311
00:21:05.817 --> 00:21:08.862
turn them into reusable pieces of code.

312
00:21:08.862 --> 00:21:12.876
So now you just type in one thing, and you
seem like the fastest person on your team.

313
00:21:12.876 --> 00:21:16.737
Little do they know, it's because you
spent like six hours one day tweaking

314
00:21:16.737 --> 00:21:18.864
snippets instead of doing any real work.

315
00:21:18.864 --> 00:21:21.578
But that's what we call leverage, right?

316
00:21:21.578 --> 00:21:24.891
One day of six hours saved
you 10 minutes every day, and

317
00:21:24.891 --> 00:21:27.943
eventually that will be six hours and
10 minutes.

