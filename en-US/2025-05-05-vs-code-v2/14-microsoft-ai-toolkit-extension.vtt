WEBVTT

1
00:00:00.079 --> 00:00:02.470
&gt;&gt; Steve Kinney: And
then one more on that theme, and

2
00:00:02.470 --> 00:00:05.190
we'll scroll through here in a second.

3
00:00:05.190 --> 00:00:09.996
That is super cool, and
this one is from Microsoft,

4
00:00:09.996 --> 00:00:14.693
it is called AI Toolkit,
which is really useful for

5
00:00:14.693 --> 00:00:18.749
developing stuff on top of models, right?

6
00:00:18.749 --> 00:00:21.785
Let's take a tour of AI toolkit
because it is very cool, and

7
00:00:21.785 --> 00:00:25.699
here's some other git lens stuff that
happened after I installed that one.

8
00:00:25.699 --> 00:00:28.030
But let's take a look at this right now.

9
00:00:28.030 --> 00:00:34.799
So if I look on the side,
&gt;&gt; Steve Kinney: You can see you can have

10
00:00:34.799 --> 00:00:38.611
access to a bunch of different models that
are either hosted, like these are not ones

11
00:00:38.611 --> 00:00:42.227
you necessarily have to even download,
they are hosted by various providers.

12
00:00:42.227 --> 00:00:46.787
You can see that some of them are hosted
by GitHub, some of the hosts are OpenAI,

13
00:00:46.787 --> 00:00:50.280
some of the hosts are Anthropic,
so on and so forth, right?

14
00:00:50.280 --> 00:00:55.179
I added in Claude 3.7 and

15
00:00:55.179 --> 00:00:58.801
OpenAI GPT 4.0.

16
00:00:58.801 --> 00:01:01.573
For these, you need to have an API
key that's about it, the GitHub ones,

17
00:01:01.573 --> 00:01:02.884
you don't always need an API key.

18
00:01:02.884 --> 00:01:07.613
It just depends on which service you use,
it will tell you and prompt you for

19
00:01:07.613 --> 00:01:10.406
one of them if you're
supposed to have one.

20
00:01:10.406 --> 00:01:13.227
And you can even fine tune models,
not that I have the GPU for

21
00:01:13.227 --> 00:01:14.367
that on this computer.

22
00:01:14.367 --> 00:01:21.175
But where I think it becomes really
powerful is there is stuff like in

23
00:01:21.175 --> 00:01:26.681
the playground,
you can compare two models, right?

24
00:01:26.681 --> 00:01:31.535
So all of these different models,
especially the new ones that come out,

25
00:01:31.535 --> 00:01:35.387
have different things that they
are good at or not good at.

26
00:01:35.387 --> 00:01:39.629
So in this case,
I've got Claude on the left side, and

27
00:01:39.629 --> 00:01:42.869
I've got GPT-4.0 on the right side.

28
00:01:42.869 --> 00:01:48.083
And we can do is if you are trying to
develop a workflow on top of one of these

29
00:01:48.083 --> 00:01:53.404
models, you can go like, and you can
see that I was typing in both of them.

30
00:01:53.404 --> 00:01:59.203
How many moons does Saturn have?

31
00:01:59.203 --> 00:02:03.999
And it will run it through both of them,
and you can kind of see which, depending

32
00:02:03.999 --> 00:02:08.667
on what you're trying to do, what has
the better output for you in this case.

33
00:02:08.667 --> 00:02:12.848
So you can kinda see the output across
two different models and compare them.

34
00:02:12.848 --> 00:02:17.048
So if you are trying to figure out,
because a lot of times, obviously,

35
00:02:17.048 --> 00:02:20.268
I grabbed two fairly large
general-purpose models.

36
00:02:20.268 --> 00:02:25.216
But if you wanted to compare, hey, a very
small lightweight open-source model,

37
00:02:25.216 --> 00:02:28.199
is that good enough for
the task I'm trying to do?

38
00:02:28.199 --> 00:02:32.773
Right, you can at least compare
versus opening up 9,000 tabs and

39
00:02:32.773 --> 00:02:34.567
pasting the same thing in.

40
00:02:34.567 --> 00:02:40.319
You can kind of experiment with
different prompts to see what works.

41
00:02:40.319 --> 00:02:43.147
And a whole bunch of other stuff
that you can do in this case,

42
00:02:43.147 --> 00:02:44.626
you can give it instructions.

43
00:02:44.626 --> 00:02:49.558
There's the ability, one of the really
powerful things with a lot of these models

44
00:02:49.558 --> 00:02:53.792
is the typical use case for a lot of
people is just the chatbot, right?

45
00:02:53.792 --> 00:02:59.075
But for almost all of them, these days,
you can also give them a JSON schema and

46
00:02:59.075 --> 00:03:02.537
say, okay,
respond in this JSON format, right?

47
00:03:02.537 --> 00:03:04.163
And make sure it's valid to this schema.

48
00:03:04.163 --> 00:03:08.024
So then you can work with it
programmatically, which is really powerful

49
00:03:08.024 --> 00:03:11.570
for taking unstructured data that
you would normally set to sit and

50
00:03:11.570 --> 00:03:15.259
write a parser for, and
getting it back as structured JSON, right?

51
00:03:15.259 --> 00:03:20.814
And you can kind of do a lot of that, not
necessarily, when we think about Copilot

52
00:03:20.814 --> 00:03:25.979
or even the ChatGPt plugin, we think
about the AIs are writing code for us.

53
00:03:25.979 --> 00:03:30.210
This is kind of more the opposite,
which is if you are building some kind of

54
00:03:30.210 --> 00:03:33.758
workflow, some kind of feature
on top of one of these things,

55
00:03:33.758 --> 00:03:36.988
you can now compare and
contrast the different models.

56
00:03:36.988 --> 00:03:41.372
There's a bunch of other really
powerful features in here too.

57
00:03:41.372 --> 00:03:46.847
So you've got this prompt builder where
you can kind of, run it in this way, but

58
00:03:46.847 --> 00:03:52.511
you could also, again, change it to the
JSON schema that you would like to build.

59
00:03:52.511 --> 00:03:55.730
If you have a local JSON schema,
you can just load it right on up.

60
00:03:55.730 --> 00:04:00.506
Things that you can only do with the API
normally that you can't do in either like

61
00:04:00.506 --> 00:04:03.073
the cloud UI or the ChatGPT UI where it's,

62
00:04:03.073 --> 00:04:07.492
okay, I need the responses, not to be
just some pros and your thoughts and

63
00:04:07.492 --> 00:04:11.456
hot takes, I want them in the structure
JSON, so on and so forth.

64
00:04:11.456 --> 00:04:13.823
You can just find a JSON schema file.

65
00:04:13.823 --> 00:04:20.246
That JSON schema is just a JSON file that
defines a Typescript type basically.

66
00:04:20.246 --> 00:04:24.886
And load that all in, in this case,

67
00:04:24.886 --> 00:04:30.769
use an example, and
where you wanna save it.

68
00:04:30.769 --> 00:04:34.448
So in this case, I can run it, and
I will save it out to a JSON file.

69
00:04:34.448 --> 00:04:38.222
And you can see in this case, instead
of getting some pros, I get the steps.

70
00:04:38.222 --> 00:04:41.905
And now I could theoretically
in TypeScript or JavaScript,

71
00:04:41.905 --> 00:04:46.671
or honestly any language, because it's
JSON, work with this data structure

72
00:04:46.671 --> 00:04:50.877
instead of just a wad of when it
gets creative and thinks it's funny.

73
00:04:50.877 --> 00:04:54.340
And set the system prompts,
so on and so forth.

74
00:04:54.340 --> 00:04:59.511
The other really useful thing is
if you have a CSV full of data,

75
00:04:59.511 --> 00:05:06.473
maybe a bunch of values, and you wanna
just create 100 prompts with all of that,

76
00:05:06.473 --> 00:05:11.270
or that's gonna be expensive,
either on time or money.

77
00:05:11.270 --> 00:05:14.640
And send out a batch one where it
substitutes the values across like that

78
00:05:14.640 --> 00:05:17.460
where you're not doing the same
prompt ten times, right?

79
00:05:17.460 --> 00:05:21.785
You can either, in this case,
generate a data set or select a CSV or

80
00:05:21.785 --> 00:05:26.649
something along those lines,
generate a whole bunch of prompts, again,

81
00:05:26.649 --> 00:05:29.294
text or JSON schema, so on and so forth.

82
00:05:29.294 --> 00:05:34.449
Set a whole bunch of parameters that
are not available outside of the API.

83
00:05:34.449 --> 00:05:39.476
And again, begin to develop
software on top of these things.

84
00:05:39.476 --> 00:05:42.532
And the important part is I
kind of alluded to earlier,

85
00:05:42.532 --> 00:05:45.257
this is just an extension,
but you look at this,

86
00:05:45.257 --> 00:05:48.257
this is a full on almost app
inside of VS Code, right?

87
00:05:48.257 --> 00:05:52.702
So when we think about,
when we look at extensions later,

88
00:05:52.702 --> 00:05:57.512
there's everything from highlighting
the word to do in red all

89
00:05:57.512 --> 00:06:02.435
the way to building a full-on app
experience inside of VS Code.

90
00:06:02.435 --> 00:06:07.946
Again, there's you can create all sorts
of evaluations of different models and

91
00:06:07.946 --> 00:06:10.792
test them and basically benchmark them.

92
00:06:10.792 --> 00:06:13.415
If you are building software
on top of these models,

93
00:06:13.415 --> 00:06:15.629
there is a lot of features and
tools in here.

94
00:06:15.629 --> 00:06:20.249
I have personally not tried to fine
tune a model using this cuzI don't,

95
00:06:20.249 --> 00:06:22.411
this little guy can handle that.

96
00:06:22.411 --> 00:06:25.491
But theoretically,
if you had a more powerful machine,

97
00:06:25.491 --> 00:06:27.426
you could probably do that as well.

98
00:06:27.426 --> 00:06:29.215
You can grab open-source models,

99
00:06:29.215 --> 00:06:33.158
a bunch of really interesting stuff on
top of all of this, which is super cool.

100
00:06:33.158 --> 00:06:37.284
But I point this out for two reasons,
one, it's cool, it's free, yay.

101
00:06:37.284 --> 00:06:42.149
The other part is, I also picked it to
kind of show the extremes to how far you

102
00:06:42.149 --> 00:06:45.408
could take building a VS Code extension,
right?

103
00:06:45.408 --> 00:06:50.009
You could theoretically build an entire
app inside of VS Code, right?

104
00:06:50.009 --> 00:06:55.220
Everything from a SQL, a visual SQL IDE or
something along those lines,

105
00:06:55.220 --> 00:07:00.103
see all your SQLite tables for
your app, whatever you happen to do.

106
00:07:00.103 --> 00:07:02.560
If there's tooling that you need, right?

107
00:07:02.560 --> 00:07:06.751
You could theoretically kind of take the
foundation that's already here for you and

108
00:07:06.751 --> 00:07:10.068
integrate it in all sorts of
interesting ways, so on and so forth.

109
00:07:10.068 --> 00:07:17.406
You can see in this case, it will even
generate the Python code for me, right?

110
00:07:17.406 --> 00:07:22.104
I don't think at this moment that it
will generate the JavaScript code for

111
00:07:22.104 --> 00:07:23.632
me, but that's fine.

112
00:07:23.632 --> 00:07:26.968
Yeah, so there's a wide range.

