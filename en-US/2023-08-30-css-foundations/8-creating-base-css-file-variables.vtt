WEBVTT

1
00:00:00.219 --> 00:00:02.812
Of course, there's nothing in there
right now, so nothing's gonna change.

2
00:00:04.936 --> 00:00:09.152
But there are a couple of styles we know
that we want shared across index and

3
00:00:09.152 --> 00:00:10.651
speakers pages, right?

4
00:00:10.651 --> 00:00:15.257
So, again, we want our links to not be
blue and purple and not underlined.

5
00:00:15.257 --> 00:00:17.792
These are shared styles.

6
00:00:17.792 --> 00:00:19.434
So what we can do is copy and

7
00:00:19.434 --> 00:00:23.554
paste over our styles from the index
file to the Speaker's file.

8
00:00:23.554 --> 00:00:25.051
That's gonna cause duplication.

9
00:00:25.051 --> 00:00:30.325
So anytime I update the index CSS file,
I now have to update speakers CSS.

10
00:00:30.325 --> 00:00:33.902
And of course your bundle size is gonna
quickly blow as well because now you're

11
00:00:33.902 --> 00:00:36.351
maintaining essentially
two copies of shared code.

12
00:00:36.351 --> 00:00:40.911
So the second option here is to have one
base CSS file containing all of our code

13
00:00:40.911 --> 00:00:43.665
that's used across these pages and
share it.

14
00:00:43.665 --> 00:00:46.848
So that's we're gonna do.

15
00:00:46.848 --> 00:00:50.775
Inside styles we're gonna
make a base file, base.CSS.

16
00:00:53.319 --> 00:00:58.312
But we need a way to get this
CSS file into both of the other

17
00:00:58.312 --> 00:01:00.554
page CSS files, right?

18
00:01:00.554 --> 00:01:04.946
So we can import this file into both
of the HTML pages above the link for

19
00:01:04.946 --> 00:01:08.609
our CSS file but
there's something a little bit easier.

20
00:01:08.609 --> 00:01:12.023
Inside of our index CSS file,
we can use this app import.

21
00:01:14.646 --> 00:01:16.994
And then linked to the base
CSS file like this.

22
00:01:16.994 --> 00:01:21.799
So now everything in base is gonna
be imported into our index CSS file.

23
00:01:21.799 --> 00:01:23.924
Do the same here when we're on speakers.

24
00:01:23.924 --> 00:01:28.778
So in our base file, What happens if we

25
00:01:28.778 --> 00:01:32.026
wanna change our website background
to wait and have our text be orange?

26
00:01:32.026 --> 00:01:35.493
Like we do on our speakers page, right?

27
00:01:35.493 --> 00:01:36.789
Well, it's kind of an easy fix.

28
00:01:36.789 --> 00:01:40.395
We just swapped those values for
background color and color.

29
00:01:40.395 --> 00:01:41.752
Okay, so that works in this instance.

30
00:01:41.752 --> 00:01:45.394
But what if our designers come to us and
they say, hey, actually,

31
00:01:45.394 --> 00:01:46.962
we want to have a dark theme.

32
00:01:46.962 --> 00:01:50.363
Okay, well,
that becomes a little more nuanced, right?

33
00:01:50.363 --> 00:01:54.907
We don't want to have 1000s of lines
of CSS with these hard coded values.

34
00:01:54.907 --> 00:01:57.293
So this is where CSS
variables can come into play.

35
00:01:57.293 --> 00:01:58.779
And this is gonna help us,

36
00:01:58.779 --> 00:02:02.429
it's much like other programming
languages like JavaScript,

37
00:02:02.429 --> 00:02:07.106
we can use variables to reference these
different values like color, font size.

38
00:02:07.106 --> 00:02:10.461
So let's declare some of these and
use them.

39
00:02:10.461 --> 00:02:13.725
So inside of our base file,
we want to select the root element or

40
00:02:13.725 --> 00:02:16.327
defining all of these
variables here on the root.

41
00:02:16.327 --> 00:02:19.494
So the first one we're gonna
define is color primary.

42
00:02:19.494 --> 00:02:24.548
We're gonna set this to our hex value,
this orange here.

43
00:02:24.548 --> 00:02:27.445
So the FF7 B54.

44
00:02:27.445 --> 00:02:29.699
I'm gonna copy that over like that.

45
00:02:29.699 --> 00:02:33.814
So we've defined our color primary with
our orange, and now I'm gonna say color.

46
00:02:33.814 --> 00:02:36.596
I'm prefacing this with color so
I can look at it and be like,

47
00:02:36.596 --> 00:02:37.808
this is a color variable.

48
00:02:37.808 --> 00:02:39.122
You can name them however you want.

49
00:02:39.122 --> 00:02:43.819
I'm gonna call this text on primary.

50
00:02:43.819 --> 00:02:46.192
And this is gonna be our white.

51
00:02:46.192 --> 00:02:47.377
Okay, so we've got two.

52
00:02:47.377 --> 00:02:51.154
Now you'll notice I didn't call
these variables orange or white.

53
00:02:51.154 --> 00:02:53.390
I could, I can absolutely call them that.

54
00:02:53.390 --> 00:02:56.938
What happens when our primary color for
a dark theme, for example,

55
00:02:56.938 --> 00:02:58.315
is changed to a navy blue.

56
00:02:58.315 --> 00:03:00.111
Well, do I have go rename
all these variables?

57
00:03:00.111 --> 00:03:02.608
That would be a little redundant.

58
00:03:02.608 --> 00:03:06.811
So I'm choosing to use primary,
secondary, tertiary,

59
00:03:06.811 --> 00:03:10.770
these are the vocabulary
terms that am gonna be using.

60
00:03:10.770 --> 00:03:13.713
So the primary color of
our website is orange.

61
00:03:13.713 --> 00:03:17.158
And then if I need to update the color
palette, it's much easier to do that.

62
00:03:17.158 --> 00:03:21.621
We just change this value and
it's gonna propagate.

63
00:03:21.621 --> 00:03:23.825
Okay, so we've got our two variables here.

64
00:03:23.825 --> 00:03:25.463
Color, primary color, text on primary.

65
00:03:25.463 --> 00:03:30.934
Let's go back to our index file here and
replace these hardcoded hex values.

66
00:03:30.934 --> 00:03:33.995
So to use it,
I need to use the VAR function here, and

67
00:03:33.995 --> 00:03:38.461
I'm gonna say I want our background
color to be the primary color like that.

68
00:03:38.461 --> 00:03:43.300
Same thing for color it's gonna be var,

69
00:03:43.300 --> 00:03:47.295
color text on primary like that.

70
00:03:47.295 --> 00:03:53.389
So if I go back to my homepage,
it's rendering properly.

71
00:03:53.389 --> 00:03:56.683
So I'll also do this for
the font families just in case like we had

72
00:03:56.683 --> 00:04:00.772
an identity crisis and wanted to change
our entire personality of our website.

73
00:04:00.772 --> 00:04:02.641
So I will go back into base.

74
00:04:02.641 --> 00:04:06.718
I'm going to create one more
variable called font family.

75
00:04:06.718 --> 00:04:10.002
I'll call this inter silencer.

76
00:04:10.002 --> 00:04:14.253
Same process,
a copy this variable name, and

77
00:04:14.253 --> 00:04:19.277
then we'll go back to index.css,
so many pop-ups.

78
00:04:19.277 --> 00:04:25.978
I'm going to replace this here,
var font-family, so that works.

79
00:04:25.978 --> 00:04:30.890
I'm going to get rid of this bold,
that was just for show, but

80
00:04:30.890 --> 00:04:36.292
I'm also going to move the body and
link styles into that base file.

81
00:04:36.292 --> 00:04:41.361
Because these are gonna be shared so
just like that.

82
00:04:41.361 --> 00:04:44.823
So you shouldn't have any code other
than the import now in your index and

83
00:04:44.823 --> 00:04:47.108
speakers file,
everything should be in base.

