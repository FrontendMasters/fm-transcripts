WEBVTT

1
00:00:00.150 --> 00:00:05.106
Background, we can set many
different properties, color, image,

2
00:00:05.106 --> 00:00:07.380
repeat, size, and position.

3
00:00:07.380 --> 00:00:14.863
So background color, color name, you can
use hex, you can use RGB, looks like that.

4
00:00:14.863 --> 00:00:18.634
We can define a background-image, and I'll
show you, we'll do this in practice, but

5
00:00:18.634 --> 00:00:20.257
this is what it might look like in a UI.

6
00:00:20.257 --> 00:00:22.697
So if we wanna add this cat image here,

7
00:00:22.697 --> 00:00:26.677
you can declare a background
image by setting the url, cool.

8
00:00:26.677 --> 00:00:29.914
The image is way too large, so all we're
seeing right now is a green square.

9
00:00:29.914 --> 00:00:32.190
We can fix that with the other border,
or I'm sorry,

10
00:00:32.190 --> 00:00:34.274
with the other background properties,
right?

11
00:00:34.274 --> 00:00:38.437
So we can set the size of
the background image, right?

12
00:00:38.437 --> 00:00:42.368
There are many different values,
you can have a length, a percentage,

13
00:00:42.368 --> 00:00:46.115
these keywords, some global values,
we'll see this in practice.

14
00:00:46.115 --> 00:00:51.973
So, let's say we set a background
size to contain on our cat image.

15
00:00:51.973 --> 00:00:54.871
So what is that gonna do?

16
00:00:54.871 --> 00:00:58.510
Contain is gonna resize the image
to make sure it's fully visible.

17
00:00:58.510 --> 00:01:02.466
So, that's why we're seeing two cats, it's
preserving that dimension to make sure,

18
00:01:02.466 --> 00:01:04.440
that our whole cat image is appearing.

19
00:01:04.440 --> 00:01:07.108
But then there's some extra
space at the bottom so

20
00:01:07.108 --> 00:01:10.039
it's gonna repeat that image
to fill the whole space.

21
00:01:10.039 --> 00:01:12.989
Instead, we can use
background size of cover.

22
00:01:12.989 --> 00:01:15.498
So now the cap picture is
gonna cover that whole space.

23
00:01:18.645 --> 00:01:21.600
And if I'm flying through this,
it's because we're gonna see this in

24
00:01:21.600 --> 00:01:23.977
the speaker section it'll
become a little bit clearer.

25
00:01:23.977 --> 00:01:28.815
And then we can change how that image is
positioned within the background, right?

26
00:01:28.815 --> 00:01:32.120
You can do that with percentage,
with pixels, with these keywords.

27
00:01:32.120 --> 00:01:35.911
So I want our image to be centered, so I'm
just gonna set the background position to

28
00:01:35.911 --> 00:01:37.927
center, and now our cat image is centered.

29
00:01:41.594 --> 00:01:45.100
And we can also change the repeat
of a background is repeated.

30
00:01:45.100 --> 00:01:48.638
So remember how in this cap when we
just had background size contain it was

31
00:01:48.638 --> 00:01:53.070
repeated because it was trying to fill
the additional space at the bottom.

32
00:01:53.070 --> 00:01:57.321
If we didn't want that to repeat,
we can set background repeat no repeat so

33
00:01:57.321 --> 00:01:59.011
it won't repeat that image.

34
00:01:59.011 --> 00:02:02.328
But you're just going to have to be okay
with the fact that there's going to be

35
00:02:02.328 --> 00:02:05.780
some white space left here,
because it's preserving that dimension.

36
00:02:05.780 --> 00:02:09.404
So drop shadow, I don't think we're
going to use in our code, but

37
00:02:09.404 --> 00:02:12.080
it's important to be aware of.

38
00:02:12.080 --> 00:02:16.893
It's essentially a blurred offset version
of the image, like the alpha mask, so

39
00:02:16.893 --> 00:02:20.117
it's drawn in a color and
composited below the image.

40
00:02:20.117 --> 00:02:23.765
And we use it with declaring
the filter property.

41
00:02:23.765 --> 00:02:27.872
So here, we have a box with a width and
height of 100 pixels has

42
00:02:27.872 --> 00:02:32.220
a red background and we've set
a drop shadow filter of 10 pixels.

43
00:02:36.010 --> 00:02:39.958
So, these values correspond to
the x-offset, the y-offset,

44
00:02:39.958 --> 00:02:44.721
the blur radius, and the color that's
what those four values correspond to.

45
00:02:44.721 --> 00:02:49.710
So here, the x-offset is 10 pixels,
the y-offset is 10 pixels,

46
00:02:49.710 --> 00:02:53.301
so it's moved down and
to the right by 10 pixels.

47
00:02:53.301 --> 00:02:57.276
Has a spread or a blur radius of
10 pixels, so it's very blurry.

48
00:02:57.276 --> 00:02:58.847
And we want the color to be black.

49
00:03:00.604 --> 00:03:04.840
To get it up at the top left instead,
we can negate those values, so

50
00:03:04.840 --> 00:03:10.007
it's -10 pixels, -10 pixels moving
top left as opposed to bottom right.

51
00:03:10.007 --> 00:03:14.267
And if we want the drop shadow to be
a little bit more defined here, we can

52
00:03:14.267 --> 00:03:19.461
change this blur radius, the closer to 0,
the more like defined it's gonna be here.

53
00:03:19.461 --> 00:03:21.624
It was very fuzzy here it's more defined.

54
00:03:23.689 --> 00:03:25.958
Again, we're not really going
to use that in this course but

55
00:03:25.958 --> 00:03:27.750
it's really good to be
aware that that exists.

56
00:03:30.209 --> 00:03:32.541
We can also change our cursor values.

57
00:03:32.541 --> 00:03:36.830
So instead of like a pointer icon,
we can have help, we can have wait,

58
00:03:36.830 --> 00:03:39.249
we can have many different icon types.

59
00:03:39.249 --> 00:03:44.411
I'm not gonna go through all of them,
we will use pointer to indicate that

60
00:03:44.411 --> 00:03:49.426
an element is clickable, this is
really good for links, for example.

61
00:03:49.426 --> 00:03:52.881
But there are many different types of
cursors maybe not allowed is really good

62
00:03:52.881 --> 00:03:54.113
if something is disabled.

