WEBVTT

1
00:00:00.000 --> 00:00:03.552
So, we will begin building the home,
the rest of the homepage here.

2
00:00:03.552 --> 00:00:07.611
But before we do that, there are a few
concepts that we need to be aware of.

3
00:00:11.016 --> 00:00:15.733
So, the first is the box model,
and if you've heard of CSS,

4
00:00:15.733 --> 00:00:19.074
you may have heard of
the box model before.

5
00:00:19.074 --> 00:00:23.490
So, we go back to this concept of
block elements versus inline elements.

6
00:00:23.490 --> 00:00:26.107
So, again, block breaks onto a new line.

7
00:00:26.107 --> 00:00:27.707
We've got padding margin and

8
00:00:27.707 --> 00:00:30.660
border separating it from
other elements on the page.

9
00:00:32.220 --> 00:00:34.067
And when there is no explicit
width set on the element,

10
00:00:34.067 --> 00:00:35.322
it's gonna take up the whole width.

11
00:00:38.610 --> 00:00:41.004
Inline elements, again, they sit in line,

12
00:00:41.004 --> 00:00:44.091
they don't cause other elements
to break onto new lines.

13
00:00:44.091 --> 00:00:46.715
But only left and
right padding, and margin, and

14
00:00:46.715 --> 00:00:49.100
border are gonna move
elements away from it.

15
00:00:49.100 --> 00:00:54.814
It's not gonna respect top and
bottom for padding, margin, and border.

16
00:00:54.814 --> 00:00:56.270
We'll see what that means in a minute.

17
00:00:57.770 --> 00:01:01.627
And then,
we set inline block on our nav items.

18
00:01:01.627 --> 00:01:05.360
So we can set this on an element if we
don't want it to break onto a new line,

19
00:01:05.360 --> 00:01:09.205
but we do want to be able to set padding,
margin, and border.

20
00:01:09.205 --> 00:01:12.085
So this is what the box model
looks like in practicality.

21
00:01:12.085 --> 00:01:16.050
And if you were following along when I
was inspecting things you can see at

22
00:01:16.050 --> 00:01:18.260
the bottom of the Chrome Dev inspector,

23
00:01:18.260 --> 00:01:22.680
we've got a box model to picked it here
shows you margin, border, padding, and

24
00:01:22.680 --> 00:01:30.910
content So, content is the area
where our content is displayed.

25
00:01:30.910 --> 00:01:35.108
Padding is whitespace
that wraps the content.

26
00:01:38.070 --> 00:01:41.769
Border wraps the content and padding.

27
00:01:41.769 --> 00:01:44.569
And then, margin is gonna wrap content,
border, and padding.

28
00:01:47.223 --> 00:01:50.010
Now, here's where things
get a little spicy.

29
00:01:50.010 --> 00:01:52.525
We've got a standard box model.

30
00:01:52.525 --> 00:01:56.344
So, in the standard box model,
we actually can define the width and

31
00:01:56.344 --> 00:01:58.320
height of the content box.

32
00:01:58.320 --> 00:02:00.930
So, it's that inner box
that holds our content.

33
00:02:00.930 --> 00:02:02.949
And on top of that, padding and

34
00:02:02.949 --> 00:02:06.844
border are added to those
dimensions to get the total size.

35
00:02:06.844 --> 00:02:09.232
So, what does that look like?

36
00:02:09.232 --> 00:02:14.400
If we've got a box, and we set a width and
height of 200 pixels by 80 pixels,

37
00:02:14.400 --> 00:02:17.470
that defines the content
area within height.

38
00:02:17.470 --> 00:02:22.531
So, our content box is 200 pixels width,
80 pixels height.

39
00:02:22.531 --> 00:02:25.750
We've also defined padding and border.

40
00:02:25.750 --> 00:02:28.365
So, 20 pixels of padding
on all four sides,

41
00:02:28.365 --> 00:02:30.655
10 pixels of border on all four sides.

42
00:02:30.655 --> 00:02:32.455
So, the actual width and

43
00:02:32.455 --> 00:02:37.353
height of our box when it's being
calculated is not 200 by 80.

44
00:02:37.353 --> 00:02:42.102
The width is 200 pixels for
the content box,

45
00:02:42.102 --> 00:02:46.851
plus 20 pixels of left and
right padding, and

46
00:02:46.851 --> 00:02:51.020
10 pixels on left and right for border.

47
00:02:52.390 --> 00:02:53.335
The height is the same.

48
00:02:53.335 --> 00:02:58.025
We've defined a height of 80 pixels for
the content box, and on top of that, we've

49
00:02:58.025 --> 00:03:02.980
got a cumulative 40 pixels for padding,
and a cumulative 20 pixels of border.

50
00:03:02.980 --> 00:03:08.308
So, the actual dimensions of this,
with the standard box model,

51
00:03:08.308 --> 00:03:12.223
are not 200 by 80, it's 260 by 140.

52
00:03:12.223 --> 00:03:13.747
This is where you might see something
called box-sizing border-box.

53
00:03:13.747 --> 00:03:16.618
This is the alternative box model, so

54
00:03:16.618 --> 00:03:21.375
the size is the content area width
minus padding and border, so

55
00:03:21.375 --> 00:03:25.344
it will not be any larger
than what you've defined.

56
00:03:25.344 --> 00:03:29.664
So here, we set width and
height to 200 by 80 again,

57
00:03:29.664 --> 00:03:33.726
but because we have padding and
border also defined.

58
00:03:33.726 --> 00:03:36.705
We've set box sizing to border box, so

59
00:03:36.705 --> 00:03:41.850
we're saying we want this width
to be no larger than 200 pixels,

60
00:03:41.850 --> 00:03:46.119
regardless of padding, or
border, or content width.

61
00:03:46.119 --> 00:03:48.750
And we want the height
to be no higher than 80.

62
00:03:48.750 --> 00:03:53.341
So, to calculate the actual width and
height of the content box, you need to

63
00:03:53.341 --> 00:03:58.396
take that defined width, subtract out
the padding, and subtract out the border.

64
00:03:58.396 --> 00:04:02.960
So, the actual width and height of
the content box is gonna be 140 by 20.

65
00:04:02.960 --> 00:04:07.444
Versus here, it was the actual 200 by 80.

66
00:04:08.719 --> 00:04:12.524
It was just a quick explanation of
what box sizing border box does, but

67
00:04:12.524 --> 00:04:16.203
it is quite interesting, and
it's easier to set explicit width and

68
00:04:16.203 --> 00:04:20.031
height of elements if you really
need them to stay within boundaries.

