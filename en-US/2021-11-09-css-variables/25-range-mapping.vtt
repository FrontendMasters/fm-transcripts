WEBVTT

1
00:00:00.450 --> 00:00:03.976
Here we have some SVG that
creates these two eyes but

2
00:00:03.976 --> 00:00:07.678
it could be creating anything and
you can see it here.

3
00:00:07.678 --> 00:00:12.897
And we have some CSS to set where
these eyes are pointing to.

4
00:00:14.732 --> 00:00:20.815
And reasonable values would
be 75 to say roughly 25.

5
00:00:23.173 --> 00:00:24.973
But these values don't really make sense.

6
00:00:24.973 --> 00:00:30.070
We can't remember how do we
make the eyes look right?

7
00:00:30.070 --> 00:00:33.570
I have no idea I would have to fiddle and
see that it's actually 75.

8
00:00:33.570 --> 00:00:36.950
So we could abstract it
away with a variable.

9
00:00:38.440 --> 00:00:39.600
Say look.

10
00:00:41.200 --> 00:00:43.093
That goes from zero to one.

11
00:00:43.093 --> 00:00:47.007
Let's set it 2.5 for now.

12
00:00:47.007 --> 00:00:55.550
And then, We can specify a calc
expression to transform this variable.

13
00:00:55.550 --> 00:01:00.634
We have zero to one,
we want to transform it to 25 to 75.

14
00:01:01.680 --> 00:01:02.792
How would we do that?

15
00:01:04.782 --> 00:01:09.558
So, by trial and error,
we could probably figure out,

16
00:01:09.558 --> 00:01:15.250
that we could have this look variable,
it goes from zero to one.

17
00:01:15.250 --> 00:01:19.730
So the part that actually changes
our minimum is 25 pixels.

18
00:01:19.730 --> 00:01:22.980
And then it goes up to 75.

19
00:01:22.980 --> 00:01:29.330
So we won't look to be multiplied by 50 So
that it gives us the entire range

20
00:01:30.553 --> 00:01:35.732
And we can see that this now works,
it goes from zero to one

21
00:01:37.858 --> 00:01:44.800
And even though I'm using SVG here,
this point has nothing to do with SVG.

22
00:01:44.800 --> 00:01:49.729
What I want to show you is how you
can use this kind of range mapping

23
00:01:49.729 --> 00:01:54.492
to transform a range of values
to a different range of values.

24
00:01:58.597 --> 00:02:02.843
And it's actually the same formula
pretty much that we've seen earlier.

25
00:02:04.844 --> 00:02:09.163
Remember how we had the value
that was multiplied by

26
00:02:09.163 --> 00:02:13.893
the value we wanted to get as
a result if the value was 1.

27
00:02:13.893 --> 00:02:17.611
And then one minus the value
multiplied by what we wanted to get

28
00:02:17.611 --> 00:02:19.121
when the value was zero.

29
00:02:19.121 --> 00:02:24.260
So it turns out that actually
this very same formula works for

30
00:02:24.260 --> 00:02:27.501
getting the entire range in between.

31
00:02:27.501 --> 00:02:30.501
And this is essentially
the interpolation formula.

32
00:02:30.501 --> 00:02:34.511
Note that it's not necessary
that min is smaller than max.

33
00:02:34.511 --> 00:02:38.646
Min could actually be larger than max if
the value we want to get when our property

34
00:02:38.646 --> 00:02:42.863
is one is actually smaller than the value
we want to get when our property is zero.

