WEBVTT

1
00:00:00.590 --> 00:00:02.014
So the next exercise, and

2
00:00:02.014 --> 00:00:06.043
this is probably one of the most
substantial exercises of this workshop.

3
00:00:06.043 --> 00:00:07.823
We have a flexible pie chart,

4
00:00:07.823 --> 00:00:12.250
it's set through a single div element
with a bunch of custom properties.

5
00:00:13.350 --> 00:00:18.322
Let's open this in a separate code,
I wanna just show you, how this works,

6
00:00:18.322 --> 00:00:21.210
like what the finished product looks like.

7
00:00:21.210 --> 00:00:23.863
It supports up to five slices, and

8
00:00:23.863 --> 00:00:29.150
you could set their percentages
with custom properties.

9
00:00:29.150 --> 00:00:32.312
And it can be set in the HTML or
it can be set in the CSS the custom

10
00:00:32.312 --> 00:00:35.670
properties they can be
set however you want.

11
00:00:35.670 --> 00:00:38.291
You can set the colors optionally, but

12
00:00:38.291 --> 00:00:42.192
there are also default colors
if you don't wanna do that.

13
00:00:42.192 --> 00:00:47.014
So now we've set color three to
sky blue we could just as easily

14
00:00:47.014 --> 00:00:49.070
set color one to sky blue.

15
00:00:49.070 --> 00:00:53.875
And notice that any colors we haven't set,
are just automatically set to something.

16
00:00:56.712 --> 00:01:01.627
Let's make this a little bit bigger,
And we can set the size.

17
00:01:07.419 --> 00:01:16.257
So this is how it's used,
Now let's go back to the starting point,

18
00:01:16.257 --> 00:01:20.203
and let's open this in a new tab you
should actually have this slide.

19
00:01:20.203 --> 00:01:25.479
So you should be able to open the code pen
in a separate tab, so how does this work?

20
00:01:25.479 --> 00:01:28.790
You might be thinking what is
a conic gradient doing here?

21
00:01:28.790 --> 00:01:31.920
What the hell,
how is this making a pie chart?

22
00:01:31.920 --> 00:01:39.260
Let's go to a simpler conic gradient, so I
could walk you through how this is drawn.

23
00:01:39.260 --> 00:01:46.368
So right now we have two colors,
Let's remove this color stop as well.

24
00:01:46.368 --> 00:01:51.431
And this is the kind of conic gradient
you know and are familiar with,

25
00:01:51.431 --> 00:01:55.021
and right now this is
a gradient from red to gray.

26
00:01:55.021 --> 00:02:00.695
So, let's give our two colors,
Some color stock positions.

27
00:02:04.030 --> 00:02:08.703
And let's bring them
closer together slowly,

28
00:02:10.049 --> 00:02:15.330
And, we're bringing them closer together.

29
00:02:15.330 --> 00:02:19.668
And you see that now as I
bring them closer together,

30
00:02:19.668 --> 00:02:25.500
we get more areas of solid color,
and less area of an actual gradient.

31
00:02:25.500 --> 00:02:32.870
Now 40% of the gradient is actually
just red, another 40% here is just gray.

32
00:02:34.130 --> 00:02:38.774
And then we only have like 20%
that is an actual gradient, and

33
00:02:38.774 --> 00:02:41.361
we can eliminate that completely.

34
00:02:41.361 --> 00:02:47.419
We can bring the gray exactly at 40%, and
now we get a very very basic pie chart.

35
00:02:47.419 --> 00:02:52.302
And in fact, these two values
don't actually need to match.

36
00:02:52.302 --> 00:02:57.915
As long as the position of the second
color stop is either the same,

37
00:02:57.915 --> 00:03:02.826
or smaller than the previous color stop,
it just adapts,

38
00:03:02.826 --> 00:03:08.460
that's part of the typical gradient
fix up that the browser does.

39
00:03:08.460 --> 00:03:12.531
So it doesn't actually have
to be 40% it can be 30%,

40
00:03:12.531 --> 00:03:15.200
it can be 20%, or it can just be 0.

41
00:03:15.200 --> 00:03:19.862
And I tend to use 0s there,
because then I can change this number,

42
00:03:19.862 --> 00:03:25.875
without having to change anything else, so
I can just change the number in one place.

43
00:03:28.758 --> 00:03:32.945
And now let's add another color stop,

44
00:03:38.185 --> 00:03:39.428
And let's make it 40%.

45
00:03:40.569 --> 00:03:48.201
And notice that now,
we still get a gradient between these two.

46
00:03:49.823 --> 00:03:57.242
So what we actually need to do if
we want to have multiple slices,

47
00:03:58.645 --> 00:04:03.211
Is we need to insert
another color stop for

48
00:04:03.211 --> 00:04:09.217
this orange that is at 20%,
or as I said earlier 0.

49
00:04:09.217 --> 00:04:14.163
And actually modern browsers allow us
to combine these, when you have two

50
00:04:14.163 --> 00:04:20.164
consecutive color stops with two different
positions, you can actually combine them.

51
00:04:20.164 --> 00:04:25.564
So this allows you to eliminate
a little bit of repetition as well,

52
00:04:25.564 --> 00:04:31.170
Do notice something gradient color
stops are specified absolutely.

53
00:04:31.170 --> 00:04:36.598
They are not relative to the previous
color stop, so the orange ends at 40%

54
00:04:36.598 --> 00:04:41.628
of the gradient circle, not 40%
after the red color stop had ended.

55
00:04:41.628 --> 00:04:48.403
So to actually create a slice that shows
40%, we would need to specify 60% here.

56
00:04:51.851 --> 00:04:56.755
So, in other words it would be
the position of the previous color stop,

57
00:04:56.755 --> 00:05:00.190
plus the percentage we
actually want to display,

58
00:05:00.190 --> 00:05:03.403
let's see if that was
10% it would be this.

59
00:05:06.887 --> 00:05:12.327
Notice how the automatic colors I'm
specifying here are equidistant in

60
00:05:12.327 --> 00:05:17.601
terms of HSL, they just have a hue
that increases by 20% each time.

61
00:05:17.601 --> 00:05:20.950
It's not ideal because HSL is
not a great system for that, but

62
00:05:20.950 --> 00:05:22.247
it gives us something.

63
00:05:22.247 --> 00:05:26.605
The third one would actually be
the position of the previous

64
00:05:26.605 --> 00:05:31.242
color stop plus whatever percentage
we want to display there.

65
00:05:31.242 --> 00:05:35.534
So the exercise now is to actually
utilize these value1, value2,

66
00:05:35.534 --> 00:05:37.541
value3 variables, and so on.

67
00:05:37.541 --> 00:05:41.017
To make these slices not be hard coded but

68
00:05:41.017 --> 00:05:47.263
actually customizable cuz the hard
coded pie chart's not that useful.

69
00:05:47.263 --> 00:05:50.546
We don't wanna be setting gradient every
time we wanna change the values of this

70
00:05:50.546 --> 00:05:53.697
pie chart, we wanna be able to just
write some HTML and set some properties.

71
00:05:53.697 --> 00:05:58.770
And there it is, boom, we have a pie chart
with whatever colors and values we want.

72
00:05:58.770 --> 00:06:01.997
So, let's break and
take some time to do that, and

73
00:06:01.997 --> 00:06:05.600
if you do that really fast,
you could also explore how you

74
00:06:05.600 --> 00:06:09.830
could use Sass to reduce whatever
repetition you have in your CSS.

