WEBVTT

1
00:00:00.339 --> 00:00:05.422
So to remind you,
here we have a corner size custom property

2
00:00:05.422 --> 00:00:10.506
that lets us set cutout corners
with any kind of CSS length,

3
00:00:10.506 --> 00:00:13.470
even viewport units, whatever.

4
00:00:13.470 --> 00:00:18.128
And we want to explore how we
could have separate properties

5
00:00:18.128 --> 00:00:22.143
that set the horizontal and
vertical cut out size.

6
00:00:22.143 --> 00:00:25.580
Or the corner size property
that sets the entire corner so

7
00:00:25.580 --> 00:00:28.024
that we could have a 45 degree cut out.

8
00:00:28.024 --> 00:00:32.299
So we wanna support both in the same
way that CSS gives us longhands and

9
00:00:32.299 --> 00:00:33.191
shorthands.

10
00:00:33.191 --> 00:00:34.593
So how would we do that?

11
00:00:34.593 --> 00:00:38.959
And remember this section is about
fullbacks, so that's kind of essential.

12
00:00:38.959 --> 00:00:39.745
So let's see.

13
00:00:39.745 --> 00:00:41.500
How would this look like?

14
00:00:41.500 --> 00:00:45.575
We want to be able to set
a corner size x property and

15
00:00:45.575 --> 00:00:51.312
the corners size y property,
let's set it to, I don't know, 3em.

16
00:00:51.312 --> 00:00:53.629
So how can we make this work?

17
00:00:53.629 --> 00:00:58.627
And notice that here we also left
the corner size property for

18
00:00:58.627 --> 00:01:02.654
the second div because we
also want that to work.

19
00:01:02.654 --> 00:01:03.988
So we would go here and

20
00:01:03.988 --> 00:01:08.365
change this to corner size x cuz this
is the horizontal coordinates and

21
00:01:08.365 --> 00:01:13.057
we will change this to corner size y
cuz that's the vertical coordinates.

22
00:01:13.057 --> 00:01:18.305
And note that now the first one worked,
the first paragraph worked, but now

23
00:01:18.305 --> 00:01:23.807
we lost the second one because the second
one was still specifying corner size.

24
00:01:23.807 --> 00:01:27.849
So how can we enable both to work?

25
00:01:27.849 --> 00:01:32.657
We can just use a dynamic
fullback here that sets this

26
00:01:32.657 --> 00:01:36.711
to corner size,
if corner size x is not set.

27
00:01:36.711 --> 00:01:40.911
And we would set the same
fullback here as well.

28
00:01:40.911 --> 00:01:46.500
And now both of these work, so
we get the best of both worlds.

29
00:01:46.500 --> 00:01:51.357
Now who could tell me,
is this exactly like a shorthand?

30
00:01:51.357 --> 00:01:58.417
What's the difference between this and
an actual real CSS shorthand?

31
00:01:58.417 --> 00:02:01.192
All right, I'll give it away, so

32
00:02:01.192 --> 00:02:06.372
the difference comes up if we
include all three in the same rule.

33
00:02:06.372 --> 00:02:13.886
If this was a real CSS shorthand, this
declaration would override the first two.

34
00:02:13.886 --> 00:02:18.161
But here, this is independent,
it doesn't matter where we put it,

35
00:02:18.161 --> 00:02:21.050
it will always be a fullback and
nothing more.

36
00:02:21.050 --> 00:02:24.371
So if corner size x and
corner size y are present,

37
00:02:24.371 --> 00:02:29.245
corner size will never be applied,
very much unlike a real shorthand.

38
00:02:31.088 --> 00:02:34.471
So another takeaway is that
fullbacks can be dynamic,

39
00:02:34.471 --> 00:02:39.470
via our references we can basically daisy
chain as many of our reference as we want

40
00:02:39.470 --> 00:02:42.037
in the fullback parameter.

41
00:02:42.037 --> 00:02:47.006
And also that default values allow us
to create shorthands of sorts, but

42
00:02:47.006 --> 00:02:51.172
we should be careful because
these are not real shorthands.

43
00:02:51.172 --> 00:02:54.910
And maybe we should not be
thinking of them as shorthands.

