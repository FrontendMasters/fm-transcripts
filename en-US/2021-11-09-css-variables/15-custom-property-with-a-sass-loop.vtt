WEBVTT

1
00:00:00.133 --> 00:00:04.423
So this code works and
it does make another reusable

2
00:00:04.423 --> 00:00:08.428
component that we can use
in a number of places.

3
00:00:08.428 --> 00:00:12.957
But it's very unwieldy and
this is where SASS comes in we can

4
00:00:12.957 --> 00:00:17.769
actually use a SASS loop to make
this this code more palatable.

5
00:00:17.769 --> 00:00:21.479
If we're just writing CSS,
then we're done at this point,

6
00:00:21.479 --> 00:00:23.677
it's a little ugly, but it works.

7
00:00:23.677 --> 00:00:26.570
And anybody using our component
doesn't have to come into contact with

8
00:00:26.570 --> 00:00:27.203
his ugliness.

9
00:00:27.203 --> 00:00:32.250
Cuz it's all encapsulated inside
the CSS that styles, this pie chart.

10
00:00:32.250 --> 00:00:35.384
But if we actually to
go one step further and

11
00:00:35.384 --> 00:00:40.356
make the code a little more
maintainable with SASS, we can do that.

12
00:00:40.356 --> 00:00:45.427
So, SASS allows us to work to

13
00:00:45.427 --> 00:00:50.894
use SASS variables in names
of properties as well.

14
00:00:50.894 --> 00:00:55.003
So what we're going to have to do is,

15
00:00:55.003 --> 00:01:01.778
we're going to have a SASS loop
from i from one through five.

16
00:01:01.778 --> 00:01:05.849
And then we're gonna use this i variable,

17
00:01:10.005 --> 00:01:14.719
And remember we need
the interpolation syntax anytime we

18
00:01:14.719 --> 00:01:18.264
use a variable into a less common context.

19
00:01:18.264 --> 00:01:22.541
Property names,
custom property value, selectors,

20
00:01:22.541 --> 00:01:25.822
all these things require interpolation.

21
00:01:25.822 --> 00:01:28.442
So it's color and i.

22
00:01:31.156 --> 00:01:35.688
And then,
let's take one of these examples and

23
00:01:35.688 --> 00:01:38.982
we're going to parameterize it.

24
00:01:38.982 --> 00:01:44.272
So here we have color one,
which we are going to replace

25
00:01:44.272 --> 00:01:48.993
with color i and
then here the hue, we wanted to,

26
00:01:52.455 --> 00:01:58.514
Be i times 25 and at this point,
I think we're pretty

27
00:01:58.514 --> 00:02:04.855
much done with the colors I
should be able to remove this.

28
00:02:04.855 --> 00:02:09.544
Note that here we've done one through
five, so this should give us 25, 50 and so

29
00:02:09.544 --> 00:02:11.279
on, it doesn't give us zero.

30
00:02:11.279 --> 00:02:16.449
So we could subtract 25 or we could
just go with this different colors,

31
00:02:16.449 --> 00:02:18.920
I'm gonna subtract 25 for now.

32
00:02:18.920 --> 00:02:20.650
I used i without the dollar here.

33
00:02:24.809 --> 00:02:27.184
If nothing changes, we've done it right.

34
00:02:27.184 --> 00:02:29.898
Yes, excellent.

35
00:02:29.898 --> 00:02:33.125
Some of the repetition is gone.

36
00:02:33.125 --> 00:02:38.222
Now, we need to get rid
of this repetition with

37
00:02:38.222 --> 00:02:43.070
values as well, so
how are we gonna do that?

38
00:02:43.070 --> 00:02:46.190
Let's take value2 and
parameterize it here.

39
00:02:47.872 --> 00:02:53.036
A lot of it is similar,
we're just gonna 2 replace two with i and

40
00:02:53.036 --> 00:02:56.683
here we're gonna replace 1 with i minus 1.

41
00:02:56.683 --> 00:03:01.085
And then we're gonna replace
two with i again here,

42
00:03:01.085 --> 00:03:05.298
the problem is,
what happens with the first one?

43
00:03:05.298 --> 00:03:10.826
We don't have a value zero, we've provided

44
00:03:10.826 --> 00:03:17.382
a zero fallback here let's
make it 0% here as well.

45
00:03:17.382 --> 00:03:21.863
Actually that that was what it needed,
yeah.

46
00:03:21.863 --> 00:03:25.374
Especially since we don't actually
have a value zero property, so

47
00:03:25.374 --> 00:03:26.988
we do need a fallback for that.

48
00:03:26.988 --> 00:03:31.866
Because we are fully aware
that our first declaration,

49
00:03:31.866 --> 00:03:35.821
we'll have a property that doesn't exist.

50
00:03:35.821 --> 00:03:40.058
Let's take a look so see the compiled CSS,

51
00:03:40.058 --> 00:03:44.190
we have a value zero that doesn't exist.

52
00:03:44.190 --> 00:03:51.061
So, let's go back to the SASS, so
now we've removed a lot of the repetition.

53
00:03:54.573 --> 00:04:00.012
And the remaining repetition
is this list of color stops,

54
00:04:00.012 --> 00:04:07.016
so at this point we might say, okay,
we're done here and we could move on.

55
00:04:07.016 --> 00:04:11.511
But if we want to remove
that repetition as well

56
00:04:11.511 --> 00:04:15.673
we could use what's called lists in SASS.

57
00:04:15.673 --> 00:04:20.634
And we could have a list of stops and
then here,

58
00:04:23.718 --> 00:04:30.716
In the loop for each stop, And

59
00:04:30.716 --> 00:04:34.580
then in the loop,
we build a list of stops for

60
00:04:34.580 --> 00:04:38.454
the gradient by using the append function.

61
00:04:38.454 --> 00:04:43.233
So the append function takes
the actual list name and

62
00:04:43.233 --> 00:04:46.718
then the color and the two positions.

63
00:04:46.718 --> 00:04:51.476
So let's take one of the actual
color stops we have and

64
00:04:51.476 --> 00:04:56.987
parameterize that and
to make them a little bit more uniform.

65
00:04:56.987 --> 00:05:02.277
We can actually add a zero to the first
one that doesn't change anything.

66
00:05:02.277 --> 00:05:09.623
So we could go here,
change this, take this, And,

67
00:05:11.867 --> 00:05:17.672
Instead of one, we want our installer i

68
00:05:21.880 --> 00:05:28.166
And then same here, instead of value1,
we want value i and

69
00:05:28.166 --> 00:05:33.594
then we also need to specify
how we're appending.

70
00:05:33.594 --> 00:05:37.725
So we specify comma because we
want these to be comma separated.

71
00:05:37.725 --> 00:05:41.346
And let's see what this produces.

72
00:05:41.346 --> 00:05:44.676
Actually right now won't produce
anything because we haven't,

73
00:05:44.676 --> 00:05:46.109
output stops anywhere yet.

74
00:05:46.109 --> 00:05:52.917
So let's go to the gradient and output
the stops list, so we output stops here.

75
00:05:52.917 --> 00:05:57.002
We need to use the interpolation
syntax again but

76
00:05:57.002 --> 00:06:00.995
as we can see,
let's look at the compiled CSS.

77
00:06:00.995 --> 00:06:03.306
All our stops are right there.

78
00:06:03.306 --> 00:06:07.331
It's exactly the same as if we
had canned coded them well,

79
00:06:07.331 --> 00:06:11.534
except the formatting would
have been better but who cares?

80
00:06:11.534 --> 00:06:14.035
Except with a lot less repetition and

81
00:06:14.035 --> 00:06:18.804
if we want to support 15 color stops
instead of five, we can do that.

82
00:06:18.804 --> 00:06:23.704
We can just increase one number and I mean
we're not going to need more than that,

83
00:06:23.704 --> 00:06:24.221
right?

84
00:06:24.221 --> 00:06:27.990
We're not gonna need more
than 15 slices at that point

85
00:06:27.990 --> 00:06:30.483
the pie chart would get unreadable.

86
00:06:30.483 --> 00:06:35.259
So it's very at this point
it's a very customizable

87
00:06:35.259 --> 00:06:38.731
pie chart with how many lines of code,

88
00:06:38.731 --> 00:06:43.301
18, that's all there is, 18 lines of SASS.

