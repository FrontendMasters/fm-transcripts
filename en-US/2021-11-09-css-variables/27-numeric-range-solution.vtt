WEBVTT

1
00:00:00.320 --> 00:00:01.410
Let's take a look at this.

2
00:00:03.380 --> 00:00:08.134
So let's set our P property here for

3
00:00:08.134 --> 00:00:12.739
now, and let's set it to say one.

4
00:00:19.175 --> 00:00:23.028
And actually, let's use an intermediate
variable for this to make things clearer.

5
00:00:27.471 --> 00:00:29.877
So we want this to be 100% when P is one.

6
00:00:37.539 --> 00:00:38.597
And.

7
00:00:44.143 --> 00:00:51.212
It's very easy to mess up parenthesis
here, and we want it to be 20%.

8
00:00:51.212 --> 00:00:56.734
When P is zero, yeah,
we wanted it to be zero.

9
00:00:59.183 --> 00:01:01.860
And note actually we can simplify this.

10
00:01:01.860 --> 00:01:04.671
Since the second term is zero,
we can just remove it.

11
00:01:07.147 --> 00:01:13.050
And then we can just go here and
replace this, with the variable.

12
00:01:15.480 --> 00:01:20.470
So the gradient center we could have
probably figured it out without

13
00:01:20.470 --> 00:01:24.420
the formula, but
it gets a little bit trickier here.

14
00:01:26.320 --> 00:01:28.768
So, let's use a separate variable for
clarity.

15
00:01:31.165 --> 00:01:37.980
Let's call it text-shadow x, so
let's sum up what we have here.

16
00:01:39.590 --> 00:01:44.905
So when P is one we want it to

17
00:01:44.905 --> 00:01:50.462
be minus 1 minus 1m's and

18
00:01:50.462 --> 00:01:57.240
when P is 0, we want it to be 1m.

19
00:01:59.360 --> 00:02:02.367
So, we don't need to think,
we can just apply the formula.

20
00:02:09.113 --> 00:02:12.140
And let's see now does it work,
moment of truth.

21
00:02:14.010 --> 00:02:17.687
Okay, 0 works, let's hold down control and

22
00:02:17.687 --> 00:02:21.946
usually up arrows to try multiple values,
it works.

23
00:02:26.243 --> 00:02:33.396
And now we could even register this and
animate it.

24
00:02:38.524 --> 00:02:45.006
And we do want it to inherit in this case,
And

25
00:02:45.006 --> 00:02:53.723
let's specify some key frames
that take P from 0 to 1,

26
00:02:53.723 --> 00:02:58.544
and now we're gonna go here and

27
00:02:58.544 --> 00:03:05.230
say animation, let's say five seconds.

28
00:03:05.230 --> 00:03:10.994
Or a word we haven't given it a name,
let's say spotlight.

29
00:03:12.105 --> 00:03:20.390
And go make it infinite, and we wanted
to alternate when it reaches the end.

30
00:03:20.390 --> 00:03:21.746
So let's look at that.

31
00:03:26.204 --> 00:03:33.620
That's it, and obviously without range
mapping, we could have still done it.

32
00:03:33.620 --> 00:03:38.351
We could have animated gradients center
x and text shadow x individually.

33
00:03:38.351 --> 00:03:42.135
We could have included them
both in the key frames,

34
00:03:42.135 --> 00:03:44.867
we could have registered them both.

35
00:03:44.867 --> 00:03:49.272
But this kind of range mapping makes
things a lot easier because we control

36
00:03:49.272 --> 00:03:52.397
the entire range with just
one custom property, and

37
00:03:52.397 --> 00:03:56.350
this is really important when
we just one week want to expose.

38
00:03:56.350 --> 00:03:58.250
One custom property.

39
00:03:58.250 --> 00:04:03.550
For example, when we have
a component that's being styled and

40
00:04:03.550 --> 00:04:09.852
we want to expose a certain aspect of
its design through a custom property.

41
00:04:09.852 --> 00:04:14.637
But internally we need to use this
value to set multiple different

42
00:04:14.637 --> 00:04:20.125
properties internally, so we do need
to know how to do this range mapping.

