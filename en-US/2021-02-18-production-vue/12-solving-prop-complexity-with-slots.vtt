WEBVTT

1
00:00:00.080 --> 00:00:02.633
All right, so
let's do a little coding experiment.

2
00:00:02.633 --> 00:00:06.864
Credit goes to Damien and Delish, who's on
the core team, also known as Shentel and

3
00:00:06.864 --> 00:00:10.694
GitHub for orchestrating one of
the original versions of this, all right.

4
00:00:10.694 --> 00:00:13.319
So I want you to do is in your head,
you're gonna,

5
00:00:13.319 --> 00:00:16.393
you don't have to code this out so
this is all in your head.

6
00:00:16.393 --> 00:00:20.298
Task number 1, I want you to create
a button component that can display texts

7
00:00:20.298 --> 00:00:21.634
in the parent component.

8
00:00:21.634 --> 00:00:23.780
You'll see that, actually shoot,

9
00:00:23.780 --> 00:00:28.630
you'll see that there's the example right
in the middle of the submit button.

10
00:00:28.630 --> 00:00:30.765
So go ahead and
sketch that out in your head,

11
00:00:30.765 --> 00:00:32.979
how you might do that
base button component.

12
00:00:35.961 --> 00:00:40.131
Okay, now that you have, I assume you
have something basic, wanna go on.

13
00:00:40.131 --> 00:00:44.287
I want you to go ahead and the button
needs to be able to display an icon of

14
00:00:44.287 --> 00:00:46.860
your choice on the right side of the text.

15
00:00:46.860 --> 00:00:51.062
So as we see in the middle, you have the
submit button with that right arrow, and

16
00:00:51.062 --> 00:00:54.413
assume that you already have
a base component called app icon.

17
00:00:54.413 --> 00:00:57.760
That's what you're gonna
include inside of the HTML.

18
00:00:57.760 --> 00:01:00.439
So, give you a few seconds for that.

19
00:01:03.960 --> 00:01:07.642
Okay, now product has a new
requirement actually,

20
00:01:07.642 --> 00:01:12.840
they want you to be able to do icons
on either sides of the button.

21
00:01:12.840 --> 00:01:15.355
So go ahead and code that up in your head.

22
00:01:22.553 --> 00:01:25.948
Now we have an additional requirement
from design where we actually need to be

23
00:01:25.948 --> 00:01:29.580
able to replace the content with
a spinner when the user clicks on it.

24
00:01:29.580 --> 00:01:32.822
So you can see now that again, envision
you actually have a pulse loader icon that

25
00:01:32.822 --> 00:01:35.070
allows you to swap it in and out.

26
00:01:35.070 --> 00:01:39.071
So go ahead and enhance your button
with this loading spinner concept.

27
00:01:41.763 --> 00:01:45.730
Okay, I think hopefully you have
something there and then task five.

28
00:01:47.040 --> 00:01:49.314
Sometimes they want the whole
text to replace and

29
00:01:49.314 --> 00:01:53.130
other times they just want to replace
the icon on the right hand side.

30
00:01:53.130 --> 00:01:54.935
So go ahead and
like think of how you might do that.

31
00:01:59.217 --> 00:02:03.030
Okay, don't worry if you couldn't
do the whole thing in your head,

32
00:02:03.030 --> 00:02:06.400
it's more of a just a mental exercise and
the feeling for it.

33
00:02:07.420 --> 00:02:08.740
So when we all first started out,

34
00:02:08.740 --> 00:02:11.300
I imagine some of you started
with something like this, right?

35
00:02:11.300 --> 00:02:13.406
We have our template with
the type of button and

36
00:02:13.406 --> 00:02:16.300
then we have a text that
takes the props of text.

37
00:02:16.300 --> 00:02:19.410
This is fairly straightforward,
everyone can understand.

38
00:02:19.410 --> 00:02:24.389
But as the requirement start layering
on and on kind of looks like this.

39
00:02:24.389 --> 00:02:29.513
And it's kind of crazy because all
of a sudden it's basically my God,

40
00:02:29.513 --> 00:02:34.240
there's props everywhere and
it's so hard to track.

41
00:02:34.240 --> 00:02:36.440
So we're gonna watch that one more time.

42
00:02:36.440 --> 00:02:38.030
So that's just satisfying.

43
00:02:39.420 --> 00:02:40.111
Yes, [LAUGH].

44
00:02:40.111 --> 00:02:44.343
So it's crazy though, right because what
should be so simple as a base button,

45
00:02:44.343 --> 00:02:48.280
has suddenly become this crazy thing
that like, I don't know about you.

46
00:02:48.280 --> 00:02:51.725
I wouldn't wanna manage that
component that just seems crazy,

47
00:02:51.725 --> 00:02:54.490
I feel like I would break it so easily.

48
00:02:54.490 --> 00:02:58.768
And so, let's call it the prop based
solution to this little mental exercise.

49
00:03:00.409 --> 00:03:04.310
And so of course, you're thinking like,
is does that mean it's wrong?

50
00:03:04.310 --> 00:03:06.460
And the answer is no, it's not wrong.

51
00:03:06.460 --> 00:03:07.570
It does the job right.

52
00:03:07.570 --> 00:03:12.240
You fulfilled the requirement
from product and

53
00:03:12.240 --> 00:03:15.516
you got it working but is it good?

54
00:03:15.516 --> 00:03:18.170
Well, not exactly right.

55
00:03:18.170 --> 00:03:22.733
As we can see, if we keep layering
on requirements onto this button,

56
00:03:22.733 --> 00:03:24.550
it's just gonna be a mess.

57
00:03:26.760 --> 00:03:31.380
And so some of the problems with this are
that new requirements constantly increased

58
00:03:31.380 --> 00:03:32.169
complexity.

59
00:03:32.169 --> 00:03:36.385
And what starts out as a simple button
with a prop of text has now become this

60
00:03:36.385 --> 00:03:41.096
crazy thing where the props, objects and
text, even if you define it perfectly.

61
00:03:41.096 --> 00:03:45.333
Basically means that whenever a new
developer wants to come along and

62
00:03:45.333 --> 00:03:48.475
use base button,
they're basically gonna have to

63
00:03:48.475 --> 00:03:52.620
read a dictionary of an API
spec on how to use your button.

64
00:03:52.620 --> 00:03:57.529
And, again, we want to create components
that are intuitive and easy to use, and

65
00:03:57.529 --> 00:04:02.158
so I would ideally like to prevent when
we're creating components at scale,

66
00:04:02.158 --> 00:04:03.673
reducing that barrier.

67
00:04:03.673 --> 00:04:07.622
And learning obstacle is key to ensuring
that it reduces that complexity and

68
00:04:07.622 --> 00:04:10.990
that more people can use it and
it's actually reusable.

69
00:04:10.990 --> 00:04:12.661
Because you can imagine, right, otherwise,

70
00:04:12.661 --> 00:04:15.460
if people look at this base button going
forward, they're probably goona go,

71
00:04:15.460 --> 00:04:17.400
you know what,
I'm just gonna create my own button.

72
00:04:17.400 --> 00:04:20.925
I'm not dealing with this and all sudden
you have this fragmented ecosystem where

73
00:04:20.925 --> 00:04:24.380
this one button does a lot of things,
but no one wants to touch it anymore.

74
00:04:24.380 --> 00:04:26.540
And so
then they just create their own buttons.

75
00:04:26.540 --> 00:04:28.660
And that's just,
that's clearly technical debt and

76
00:04:28.660 --> 00:04:30.280
a fracture inside of your architecture.

77
00:04:32.100 --> 00:04:35.236
And so, as we can see,
there are a lot of responsibilities,

78
00:04:35.236 --> 00:04:38.635
templates in the conditional and
it's just super complicated.

79
00:04:41.040 --> 00:04:47.350
And so since this solution isn't the best,
is there a better alternative?

80
00:04:47.350 --> 00:04:49.625
And this being view, of course there is,

81
00:04:49.625 --> 00:04:53.270
we always try to provide new
solutions when you need them.

82
00:04:53.270 --> 00:04:56.556
And so,
the better solution is to use, right,

83
00:04:56.556 --> 00:05:01.440
I forgot in the words of service name
obviously, there is a better solution.

84
00:05:03.810 --> 00:05:08.640
And that is to use slots, and so for those
who haven't use slots before, I recommend

85
00:05:08.640 --> 00:05:13.700
checking out the docs for how they work
but basically think of it an HTML element.

86
00:05:13.700 --> 00:05:16.769
So, if I were to just show this
in live code for a second.

87
00:05:18.500 --> 00:05:21.566
When you have something with slots
like a base button, right, so

88
00:05:21.566 --> 00:05:24.690
I'm just gonna go ahead and
write this up real quick.

89
00:05:24.690 --> 00:05:27.910
So we have a button here with the slot.

90
00:05:29.140 --> 00:05:33.084
All this really says is I want you to
accept anything that would come in between

91
00:05:33.084 --> 00:05:34.030
this component.

92
00:05:34.030 --> 00:05:37.900
So let me just do this
a little bit more formally.

93
00:05:37.900 --> 00:05:39.490
So we have our based upon that view.

94
00:05:40.920 --> 00:05:44.306
And so here, right,
what base button allows you to do,

95
00:05:44.306 --> 00:05:49.230
because you're using a slot is to
rather than define everything as props.

96
00:05:49.230 --> 00:05:54.200
It means that everything that is provided
inside of our tags will actually be passed

97
00:05:54.200 --> 00:05:55.960
through into the child.

98
00:05:55.960 --> 00:05:58.150
So you wanna call it submit.

99
00:05:58.150 --> 00:05:58.750
This is great.

100
00:05:58.750 --> 00:06:02.340
You will actually get a button
that submits has the text submit.

101
00:06:02.340 --> 00:06:06.990
But if we need an icon, no problem,
app icon icon equals, right for example.

102
00:06:08.370 --> 00:06:11.948
And then in the event that we need a
button that can be on the left that's not

103
00:06:11.948 --> 00:06:13.030
a problem either.

104
00:06:13.030 --> 00:06:15.769
All you got to do is swap it
over to the other side and

105
00:06:15.769 --> 00:06:18.260
this would still work
granted I mess that up.

106
00:06:20.000 --> 00:06:24.000
And so slots are an extremely
powerful technique in view.

107
00:06:24.000 --> 00:06:27.570
So if you haven't gotten a chance to check
it out, definitely look into the docs.

108
00:06:27.570 --> 00:06:30.819
Again, there's a whole,
we could spend all day on slots and

109
00:06:30.819 --> 00:06:34.769
advanced slot technique usage, but
it is a very useful tool to have in your

110
00:06:34.769 --> 00:06:37.340
tool belt when creating
reusable components.

111
00:06:37.340 --> 00:06:39.550
So just want to keep this in mind.

