WEBVTT

1
00:00:01.340 --> 00:00:05.490
So, actually, yeah let's talk about this.

2
00:00:05.490 --> 00:00:09.484
So, the final phase of any good
convention is about maintenance,

3
00:00:09.484 --> 00:00:13.549
cuz over time we're gonna see
conventions either fall in favor, or

4
00:00:13.549 --> 00:00:16.240
fall out of favor with teammates.

5
00:00:16.240 --> 00:00:19.249
And so, the number one thing here
that I can't stress enough is that,

6
00:00:19.249 --> 00:00:22.780
it's really important to build emotional
safety and awareness within the team.

7
00:00:24.240 --> 00:00:28.461
When we have bugs and things, when
people feel if they're being blamed as

8
00:00:28.461 --> 00:00:32.290
individuals, you'll find that
it creates distrust on the team.

9
00:00:32.290 --> 00:00:35.004
And this will make it harder for
not only conventions to be followed, but

10
00:00:35.004 --> 00:00:38.100
like development speed will
ultimately get impacted.

11
00:00:38.100 --> 00:00:40.145
And so when something goes wrong,

12
00:00:40.145 --> 00:00:44.093
similar to like the bug question
that we had earlier from testing,

13
00:00:44.093 --> 00:00:49.120
it's really important to find systematic
solutions to what's happening.

14
00:00:49.120 --> 00:00:53.151
So rather than be like, the individual
did this incorrectly, we have to ask

15
00:00:53.151 --> 00:00:57.263
ourselves, what part of the system allow
the individual to make this mistake.

16
00:00:57.263 --> 00:01:00.639
Because again, even just being optimistic,

17
00:01:00.639 --> 00:01:05.180
I still think most people don't
set out to break production.

18
00:01:05.180 --> 00:01:09.039
They don't set out to accidentally
delete the production database.

19
00:01:09.039 --> 00:01:12.647
Like these are problems with
the system that doesn't protect people

20
00:01:12.647 --> 00:01:14.850
from making these mistakes.

21
00:01:14.850 --> 00:01:17.585
And so, another term you might
hear in the tech community or

22
00:01:17.585 --> 00:01:20.649
might not be just tech community but
foot guns or another thing, so

23
00:01:20.649 --> 00:01:23.880
preventing people from shooting
themselves in the foot.

24
00:01:23.880 --> 00:01:28.333
And so conventions do a good job of this,
because it allows us to focus on

25
00:01:28.333 --> 00:01:31.378
the problem at hand and
the repeatable pattern,

26
00:01:31.378 --> 00:01:35.860
rather than the individual which
is important for long term.

27
00:01:35.860 --> 00:01:39.090
Sort of team health and safety,
when it comes to these things.

28
00:01:40.480 --> 00:01:44.087
And if you happen to be in the power
where you are a team lead manager or

29
00:01:44.087 --> 00:01:48.510
some sort of leadership role,
do whatever you can to protect your devs.

30
00:01:48.510 --> 00:01:51.709
And so this means that when
things go wrong in production,

31
00:01:51.709 --> 00:01:54.710
like not scapegoating, not allowing.

32
00:01:54.710 --> 00:01:58.110
Other departments to say like, who is
the one person responsible for this?

33
00:01:58.110 --> 00:02:02.142
Because the moment scapegoating
becomes part of a, like a culture,

34
00:02:02.142 --> 00:02:06.860
you basically have people who are afraid
to explore and try out new ideas.

35
00:02:06.860 --> 00:02:09.979
And this is yeah,
this is extremely dangerous for

36
00:02:09.979 --> 00:02:14.149
the health of an organization,
and the ability to make progress.

37
00:02:19.048 --> 00:02:23.384
And so, there's this principle that
was popularized primarily by Toyota,

38
00:02:23.384 --> 00:02:26.070
it's called the jidoka principle.

39
00:02:26.070 --> 00:02:31.337
And so here it's basically, a productivity
sort of like it's like a philosophy,

40
00:02:31.337 --> 00:02:35.795
and it was popularized in Toyota I
think if I didn't say that earlier.

41
00:02:35.795 --> 00:02:37.524
And so it's a four step part,

42
00:02:37.524 --> 00:02:41.200
where the first piece is to
discover what that abnormality is.

43
00:02:41.200 --> 00:02:43.815
As I mentioned earlier,
when a mistake happen not

44
00:02:43.815 --> 00:02:47.939
figuring out what the individual did but,
what process allow that to happen.

45
00:02:49.010 --> 00:02:53.330
And so, this is being taken in
a manufacturing sort of context.

46
00:02:53.330 --> 00:02:55.410
So it says, to stop the process.

47
00:02:55.410 --> 00:02:59.099
Now granted, most of the time you're
not gonna stop development in

48
00:02:59.099 --> 00:03:02.078
its hole completely unlike
a manufacturing line, but

49
00:03:02.078 --> 00:03:06.730
it is important to especially if the bug
is a critical one or has a major impact.

50
00:03:06.730 --> 00:03:09.444
To sometimes have in all hands,
to be like, hey,

51
00:03:09.444 --> 00:03:13.908
we have this problem where production
database got super impacted, because when

52
00:03:13.908 --> 00:03:18.190
we ran the test, it accidentally pointed
to production instead of staging.

53
00:03:18.190 --> 00:03:19.345
How did this happen, right?

54
00:03:19.345 --> 00:03:22.629
These are the kind of things where you
do wanna stop the process, because these

55
00:03:22.629 --> 00:03:25.890
things pay dividends in the long run,
once you can figure out what's wrong.

56
00:03:27.190 --> 00:03:30.717
And so as we said, so
I went through some of the other steps,

57
00:03:30.717 --> 00:03:34.813
but the reason I'm introducing this
is because the jidoka principle

58
00:03:34.813 --> 00:03:39.275
is primarily responsible for what has
been popularized as the Andon Cord.

59
00:03:39.275 --> 00:03:44.210
And so, the idea here was that Toyota at
the time would basically have this cord,

60
00:03:44.210 --> 00:03:48.145
that anyone on the floor could
pull in order to stop production.

61
00:03:48.145 --> 00:03:51.255
And if you think of it from an assembly
line, this is super expensive.

62
00:03:51.255 --> 00:03:53.202
And traditionally speaking was like,

63
00:03:53.202 --> 00:03:55.446
no one could do it unless
the manager said so.

64
00:03:55.446 --> 00:03:59.049
But with the Andon Cord, what they
did is they said anyone on the floor,

65
00:03:59.049 --> 00:04:02.700
if they saw something wrong,
no matter how low level they were.

66
00:04:02.700 --> 00:04:03.710
They could pull the cord.

67
00:04:03.710 --> 00:04:08.370
And then this would kick off this process
of like, why was it pulled, what happened?

68
00:04:08.370 --> 00:04:09.560
What went wrong?

69
00:04:09.560 --> 00:04:13.840
And so, when it comes to emotional safety
and these sort of pieces of maintenance,

70
00:04:13.840 --> 00:04:17.340
I think every organization should
have that Andon Cord baiscally.

71
00:04:17.340 --> 00:04:20.682
Regardless of whether it's the intern or
the junior developer,

72
00:04:20.682 --> 00:04:24.217
who you might say, doesn't have
as much experience with things.

73
00:04:24.217 --> 00:04:28.377
If they feel there's a concern with
the way things are being done, it's like

74
00:04:28.377 --> 00:04:32.620
the environment we wanna create a safe
enough that anyone can bring that up.

75
00:04:32.620 --> 00:04:36.576
Because a lot of times it's the people who
haven't been immersed in the process for

76
00:04:36.576 --> 00:04:40.750
so long, that often can get a sense
of like maybe things could be better.

77
00:04:40.750 --> 00:04:44.920
And so, that's why I was wanting
to introduce this is because.

78
00:04:44.920 --> 00:04:48.480
As we think of tech culture
is going forward, right?

79
00:04:48.480 --> 00:04:51.897
We talk a lot about different
sort of like things to consider,

80
00:04:51.897 --> 00:04:55.150
when you're building
production level view apps.

81
00:04:55.150 --> 00:04:58.046
But I think we all know
that at the end of the day,

82
00:04:58.046 --> 00:05:02.973
what makes something production level and
scale over time is a lot of times that,

83
00:05:02.973 --> 00:05:07.393
that culture that allows things to
grow and whether it's new features,

84
00:05:07.393 --> 00:05:12.430
exploring new ideas, beyond JavaScript
frameworks and those things.

85
00:05:12.430 --> 00:05:17.110
And so, as all of you, for
those of you who are watching.

86
00:05:17.110 --> 00:05:22.196
As you're thinking about growing in
your career as senior developers, and

87
00:05:22.196 --> 00:05:27.280
how you can continue to build applications
not only scale, but again, grow

88
00:05:27.280 --> 00:05:32.297
the team as well, these are principles
I think that are often overlooked.

89
00:05:32.297 --> 00:05:34.576
And it's because at the end of the day,

90
00:05:34.576 --> 00:05:37.890
it's not the one technique
you use in view, right?

91
00:05:37.890 --> 00:05:41.087
It's not cause you figured out how to use
scope slots, or that you figured out this

92
00:05:41.087 --> 00:05:44.000
one technique that's ultimately
gonna make the difference.

93
00:05:44.000 --> 00:05:47.977
In the long term longevity
of an application, or

94
00:05:47.977 --> 00:05:50.790
basically engineering culture.

