WEBVTT

1
00:00:00.210 --> 00:00:03.190
Okay, so I've talked a lot about
the Vue CLI and why it's awesome.

2
00:00:03.190 --> 00:00:05.214
There are many other things
that we can go into, I mean,

3
00:00:05.214 --> 00:00:07.750
people have whole workshops and
stuff dedicated to this.

4
00:00:07.750 --> 00:00:11.344
But I also want to acknowledge the fact
that Vue CLI is not perfect for

5
00:00:11.344 --> 00:00:12.980
every scenario.

6
00:00:12.980 --> 00:00:15.954
Like a lot of things we discussed today,
there are gonna be times where the things

7
00:00:15.954 --> 00:00:18.625
I'm recommending won't necessarily
make sense given your context and

8
00:00:18.625 --> 00:00:20.040
the problem you're trying to solve.

9
00:00:21.420 --> 00:00:25.515
And so the main examples when it comes to
alternative to Vue CLI is for example,

10
00:00:25.515 --> 00:00:27.200
micro-frontends.

11
00:00:27.200 --> 00:00:31.023
This is becoming more of a big thing as we
have a lot of legacy architecture that it

12
00:00:31.023 --> 00:00:35.840
already works but let's say you only need
a little bit of dynamic functionality.

13
00:00:35.840 --> 00:00:40.165
Migrating your whole app or building all
of it n Vue CLI would honestly be overkill

14
00:00:40.165 --> 00:00:43.770
and so in that case I would recommend
using the CDN import as well.

15
00:00:43.770 --> 00:00:48.676
Think of it like a jQuery import, you drop
in the helper function and then you make

16
00:00:48.676 --> 00:00:53.584
the little bit on your application that
needs to have that view functionality and

17
00:00:53.584 --> 00:00:55.260
then leave the rest alone.

18
00:00:55.260 --> 00:00:59.905
So micro-frontends are a great
example where typically Vue CLI's

19
00:00:59.905 --> 00:01:01.460
not the best use case.

20
00:01:03.400 --> 00:01:06.590
Another example where Vue CLI doesn't
make sense is for legacy migrations.

21
00:01:06.590 --> 00:01:11.127
So I know a lot of people we deal with
legacy code bases that have been on Ruby

22
00:01:11.127 --> 00:01:15.050
on Rails or you know,
some PHP framework for a long time.

23
00:01:15.050 --> 00:01:18.678
And so, a lot of us as developers want
to leverage the latest and greatest but

24
00:01:18.678 --> 00:01:22.535
what happens is that when we do that, a
lot of times it doesn't align necessarily

25
00:01:22.535 --> 00:01:25.146
with product because they
want to ship new features and

26
00:01:25.146 --> 00:01:26.879
they need to get stuff to the users.

27
00:01:28.450 --> 00:01:31.502
And so in those scenarios,
rather than saying, hey, can we stop

28
00:01:31.502 --> 00:01:35.240
feature development for a month while we
migrate our legacy app to Vue, right?

29
00:01:35.240 --> 00:01:39.115
Most stakeholders are not going to
buy into that because again, that's

30
00:01:39.115 --> 00:01:43.960
a developer ergonomic and so they're
not as concerned with those things.

31
00:01:43.960 --> 00:01:48.514
Instead, what you can do is this is where
the CDN is extremely useful, because you

32
00:01:48.514 --> 00:01:52.747
can bring on the CDN package of Vue
just like you would in a micro-frontend.

33
00:01:52.747 --> 00:01:56.167
And this way,
you would slowly build features with Vue,

34
00:01:56.167 --> 00:02:01.156
basically progressively migrating the
legacy app over time until it makes sense,

35
00:02:01.156 --> 00:02:06.160
when you have basically most of the pieces
put together and most of the thing in Vue.

36
00:02:06.160 --> 00:02:09.667
Then you can probably make the case that,
hey if we just spent a week or

37
00:02:09.667 --> 00:02:12.267
two on this,
a few of the developers can go ahead and

38
00:02:12.267 --> 00:02:15.980
actually move it over to Vue CLI and
we'll have the full build pipeline.

39
00:02:15.980 --> 00:02:19.115
And if you're wondering,
does that really work at scale?

40
00:02:19.115 --> 00:02:23.800
100% it does, because Git lab is probably
the proverbial example at this point of

41
00:02:23.800 --> 00:02:27.051
doing this, because they were
on Ruby on Rails system, and

42
00:02:27.051 --> 00:02:31.360
they needed to migrate over so, or
sorry, they wanted to migrate over.

43
00:02:31.360 --> 00:02:35.313
And what they did is exactly that,
they dropped in the CDN and just kept

44
00:02:35.313 --> 00:02:40.004
progressively migrating certain pages,
and not even just pages, certain pieces

45
00:02:40.004 --> 00:02:44.442
on the page until one day, a lot of pieces
of Git lab are actually on Vue CLI now.

46
00:02:44.442 --> 00:02:45.881
So it does work at scale.

47
00:02:48.805 --> 00:02:52.802
And finally, when it comes to things
like server-side rendering, and

48
00:02:52.802 --> 00:02:57.454
you basically need more assistance on this
piece, this is where instead of Vue CLI,

49
00:02:57.454 --> 00:03:00.710
I would highly recommend
checking out Nuxt.

50
00:03:00.710 --> 00:03:04.560
And so Sarah Dresdner has her introduction
to Nuxt course that you can check out on

51
00:03:04.560 --> 00:03:05.531
frontend masters.

52
00:03:05.531 --> 00:03:10.237
But Nuxt is definitely a framework to keep
in mind as far as an awesome framework

53
00:03:10.237 --> 00:03:12.806
that takes what already
makes Vue great and

54
00:03:12.806 --> 00:03:15.468
then gives you even more built-in things.

55
00:03:15.468 --> 00:03:18.812
That allow you to focus on building a cool
application, but then taking care of

56
00:03:18.812 --> 00:03:23.080
things like server-side rendering,
progressive web apps those sort of things.

57
00:03:23.080 --> 00:03:27.185
So definitely check that
out as an alternative.

58
00:03:27.185 --> 00:03:30.821
So the question we have here is,
how do I feel about Vite?

59
00:03:30.821 --> 00:03:35.083
So also some people pronounce it Vite,
I guess a little bit of trivia,

60
00:03:35.083 --> 00:03:39.718
is that like Vue it's based on a French
word, and Vite in French means fast.

61
00:03:39.718 --> 00:03:43.616
And so Evan's been working on
a new project called Vite.

62
00:03:43.616 --> 00:03:48.070
Which is basically, an ESM bundler that
allows you to basically compile your

63
00:03:48.070 --> 00:03:52.934
application and just a different way of
approaching Build Tools, rather than say,

64
00:03:52.934 --> 00:03:55.050
for example, Webpack.

65
00:03:55.050 --> 00:03:56.502
And so while Vite and to be honest,

66
00:03:56.502 --> 00:03:59.840
I think a lot of frameworks
are exploring this concept right now.

67
00:03:59.840 --> 00:04:04.225
It lacks the, it's still a new
idea that people are pushing and

68
00:04:04.225 --> 00:04:06.580
trying out the limits on.

69
00:04:06.580 --> 00:04:09.526
But a lot of times when it comes
to enterprise level applications,

70
00:04:09.526 --> 00:04:11.990
let's face it,
we have a lot of dependencies.

71
00:04:11.990 --> 00:04:14.340
And while it be great to be on
the cutting edge of things,

72
00:04:14.340 --> 00:04:16.020
we do need things to be stable.

73
00:04:16.020 --> 00:04:17.540
So I think for anyone looking to do,

74
00:04:17.540 --> 00:04:20.680
again, if you're talking about
production grade level apps.

75
00:04:20.680 --> 00:04:22.599
I would recommend sticking with Webpack,

76
00:04:22.599 --> 00:04:25.700
because the ecosystem is very solid
there's a lot of support for it.

77
00:04:25.700 --> 00:04:29.260
But as far as like side projects and
playing around with Vite and

78
00:04:29.260 --> 00:04:33.225
other sort of build tools that can
take render time down from seconds to

79
00:04:33.225 --> 00:04:37.142
hundreds of milliseconds,
definitely worth playing around with.

80
00:04:37.142 --> 00:04:40.620
But as far as production app goes I don't
think it's quite at that level yet.

81
00:04:41.800 --> 00:04:45.050
&gt;&gt; Is the Vue CLI extendable?

82
00:04:45.050 --> 00:04:48.990
So if our organization
wanted to make our own

83
00:04:48.990 --> 00:04:53.049
configuration that we wanted to replicate.

84
00:04:53.049 --> 00:04:56.840
&gt;&gt; So the question here is,
is Vue CLI extendable?

85
00:04:56.840 --> 00:04:59.570
And so yep, the short answer is yes.

86
00:04:59.570 --> 00:05:03.598
When it comes it comes to Vue CLI,
basically think of it as the preset,

87
00:05:03.598 --> 00:05:06.860
that allows you to do what
you mostly want to do, right?

88
00:05:06.860 --> 00:05:09.933
Which solves most of your use cases but
at the end of the day,

89
00:05:09.933 --> 00:05:14.054
it still has a Webpack underneath, and
you can extend upon the configuration,

90
00:05:14.054 --> 00:05:17.450
to whether do custom imports,
or reconfigure things.

91
00:05:17.450 --> 00:05:20.827
And so true to Vue's ethos we wanna
give you just enough to get you up and

92
00:05:20.827 --> 00:05:23.691
running for most of the scenarios
you're solving for, but

93
00:05:23.691 --> 00:05:28.170
in case you need an escape hatch at
Vue CLI can totally allow you to do that.

94
00:05:28.170 --> 00:05:30.480
&gt;&gt; Is Vite comparable is Snowpack?

95
00:05:30.480 --> 00:05:34.580
&gt;&gt; Another question we have is regarding
Vite and whether it's similar to Snowpack.

96
00:05:34.580 --> 00:05:37.615
And so yeah, after listening to one
of Evan taught recently, yeah, so

97
00:05:37.615 --> 00:05:41.006
both of them were kind of conceived in
parallel without knowing the existence of

98
00:05:41.006 --> 00:05:42.100
one another.

99
00:05:42.100 --> 00:05:47.121
So yeah, Snowpack is another example
of another sort of exploration

100
00:05:47.121 --> 00:05:52.980
of what it'll be like to use ESM as
a primary build rather than Webpack.

101
00:05:52.980 --> 00:05:56.982
So as additional clarification to the
question regarding the extensibility of

102
00:05:56.982 --> 00:06:00.265
Vue CLI, the scenario being presented
is that what if we wanted to

103
00:06:00.265 --> 00:06:02.670
actually constrain down the options,
right?

104
00:06:02.670 --> 00:06:04.550
So, let me switch over.

105
00:06:04.550 --> 00:06:08.075
So one of the things we have
here in the Vue CLI is that, so

106
00:06:08.075 --> 00:06:11.600
the scenario here is that when
you create a new project,

107
00:06:11.600 --> 00:06:16.890
that there are basically different
presets, so let me just do MVC again.

108
00:06:16.890 --> 00:06:19.848
So basically defining the various
presets that are available so

109
00:06:19.848 --> 00:06:22.090
this can be done out of the box.

110
00:06:22.090 --> 00:06:25.339
In the event you wanna basically
define what goes in here, so

111
00:06:25.339 --> 00:06:27.330
that they can't choose their own.

112
00:06:27.330 --> 00:06:30.543
And then to the extent that if
someone needs to configure what

113
00:06:30.543 --> 00:06:33.006
options are actually
included in the Vue CLI.

114
00:06:33.006 --> 00:06:35.078
Vue CLI it is open source repo, so

115
00:06:35.078 --> 00:06:38.704
I don't see any reason why you
couldn't force the repo and

116
00:06:38.704 --> 00:06:43.452
then have basically people install
your company's version of the Vue CLI.

117
00:06:43.452 --> 00:06:46.815
That would then at least touch updates but
then you can configure the pieces that you

118
00:06:46.815 --> 00:06:48.753
might wanna necessarily
maybe restrict down.

119
00:06:48.753 --> 00:06:52.575
So something l wanted to mention
an extension of our discussion regarding

120
00:06:52.575 --> 00:06:56.954
extensibility of the Vue CLI is to mention
that it's actually a plug in architecture

121
00:06:56.954 --> 00:06:57.709
with Vue CLI.

122
00:06:57.709 --> 00:07:03.620
That l sort of mentioned it in the modern
mode, sorry, when l was in the Vue UI.

123
00:07:03.620 --> 00:07:06.773
But basically what Vue CLI
offers when it comes to plug

124
00:07:06.773 --> 00:07:11.343
ins is it allows you to have basically
have default ways of installing thing.

125
00:07:11.343 --> 00:07:16.310
And so you would simply run in this case,
so you can see in the docs example for

126
00:07:16.310 --> 00:07:18.882
Vue Router you would do Vue add Router.

127
00:07:18.882 --> 00:07:23.785
And what that would do is not simply just
NPM install the Vue Router but it'll

128
00:07:23.785 --> 00:07:28.774
actually go ahead and scuffle different
pieces for you as far as what it does.

129
00:07:28.774 --> 00:07:30.560
So just to demo this actually,

130
00:07:30.560 --> 00:07:35.070
I think it'll be easier if there's
a sort of a visual example of this.

131
00:07:35.070 --> 00:07:38.252
So here for example, right,
we have our production grade view repo and

132
00:07:38.252 --> 00:07:40.200
let's say we wanted to add TypeScript.

133
00:07:40.200 --> 00:07:43.694
Now typically what you might do is
you go NPM, install TypeScript,

134
00:07:43.694 --> 00:07:45.103
create your Ts config, and

135
00:07:45.103 --> 00:07:49.770
you have to make sure the Vue plugin knows
how to watch all your types of builds.

136
00:07:49.770 --> 00:07:53.287
But it's actually a lot easier than
this with Vue CLI's plugin architecture,

137
00:07:53.287 --> 00:07:55.140
you can go vue at typescript.

138
00:07:55.140 --> 00:07:56.582
And so it's gonna go through and

139
00:07:56.582 --> 00:08:00.120
the plugin architecture allows you to
do this sort of further extensibility.

140
00:08:00.120 --> 00:08:02.511
So you can write your own and
those sort of things but

141
00:08:02.511 --> 00:08:06.110
you can see here that it allows me
some options for the plugin, right?

142
00:08:06.110 --> 00:08:08.901
So in this case,
I don't want class style syntax, yep,

143
00:08:08.901 --> 00:08:12.040
give me Babel and can go ahead and
convert my GS file to TS, sure,

144
00:08:12.040 --> 00:08:14.800
go ahead and do that for me,
and allow GS to be compiled.

145
00:08:14.800 --> 00:08:19.370
You can see that capital N is the default,
so I'm gonna go ahead and say no as well.

146
00:08:19.370 --> 00:08:21.835
And then skip type checking of all
declaration file is gonna go ahead and

147
00:08:21.835 --> 00:08:23.080
do that, so that's recommended.

148
00:08:23.080 --> 00:08:26.991
And then so it's going to go ahead and
invoke the generator, install all

149
00:08:26.991 --> 00:08:31.440
the various dependencies, you need to make
sure that it works with Vue properly.

150
00:08:31.440 --> 00:08:36.134
And then what you're gonna see here now is
that we actually have had a bunch of our

151
00:08:36.134 --> 00:08:37.059
files change.

152
00:08:37.059 --> 00:08:41.544
Vue has not only gone in and created
things like our tsconfig, which for

153
00:08:41.544 --> 00:08:44.762
anyone who's configured
tsconfig from scratch,

154
00:08:44.762 --> 00:08:50.170
it's actually a decent amount of work and
a decent breath of an API to learn.

155
00:08:50.170 --> 00:08:53.530
On top of that, it goes ahead and
make sure that various things exists,

156
00:08:53.530 --> 00:08:54.599
inside of review app.

157
00:08:54.599 --> 00:08:59.052
So you can see that here's the shim
file that allows it to tell typescript

158
00:08:59.052 --> 00:09:02.124
more about what doc view files are,
for example.

159
00:09:02.124 --> 00:09:05.908
It's already converted all of our
JavaScript files to TS, for example.

160
00:09:05.908 --> 00:09:10.745
And it scaffolded even our Hello World
here to already swap out the language

161
00:09:10.745 --> 00:09:15.581
into the TS and then already use the
defined component which we need in order

162
00:09:15.581 --> 00:09:19.290
to work with TypeScript when
it comes to our components.

163
00:09:19.290 --> 00:09:22.894
So these are things that the plugin
architecture allows you to do as far

164
00:09:22.894 --> 00:09:25.643
as extending the functionality and
also helping to,

165
00:09:25.643 --> 00:09:27.793
for example, like define conventions.

166
00:09:27.793 --> 00:09:31.329
Per the situation we brought up earlier
regarding a company wanted more defined

167
00:09:31.329 --> 00:09:33.344
conventions regarding how things are done.

168
00:09:33.344 --> 00:09:34.810
So, hopefully that's helpful.

