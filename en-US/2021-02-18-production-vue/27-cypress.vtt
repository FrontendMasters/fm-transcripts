WEBVTT

1
00:00:00.250 --> 00:00:03.033
One of the things I wanna go ahead and
demo here, so

2
00:00:03.033 --> 00:00:07.345
I talked a little bit earlier about
Cypress, but I wanna actually go ahead and

3
00:00:07.345 --> 00:00:11.720
demonstrate it because I think this is one
of the things that you need to see it to

4
00:00:11.720 --> 00:00:13.770
believe it kind of thing.

5
00:00:13.770 --> 00:00:19.167
And so what I've brought up here is
the Cypress, basically the the UI here.

6
00:00:19.167 --> 00:00:23.724
And here as you can see we have a bunch of
different tasks that we can run, and so

7
00:00:23.724 --> 00:00:28.567
I'm gonna go ahead in this case run this
particular task, which in this case tests

8
00:00:28.567 --> 00:00:33.950
a payment app that goes through and does
things like navigate through the test.

9
00:00:33.950 --> 00:00:36.990
Enter things into the form data,
make sure that you click it,

10
00:00:36.990 --> 00:00:39.327
make sure you get the right response,
and and so

11
00:00:39.327 --> 00:00:42.090
this is actually acting like
interacting with a local.

12
00:00:42.090 --> 00:00:45.590
There's actually integrations here,
this is not just like stub information.

13
00:00:45.590 --> 00:00:47.820
And so it's going through, it's searching.

14
00:00:47.820 --> 00:00:49.340
It's doing all the things.

15
00:00:49.340 --> 00:00:51.550
And granted, it's blinking really fast.

16
00:00:51.550 --> 00:00:54.650
So you might be thinking that,
gosh, how useful is this?

17
00:00:54.650 --> 00:00:57.611
But one, I don't know about you all, but

18
00:00:57.611 --> 00:01:02.190
when it's my app and
I get to watch all my tests are passing.

19
00:01:02.190 --> 00:01:06.432
And on top of that I get to get this
visual representation of what's happening,

20
00:01:06.432 --> 00:01:07.840
it's super gratifying.

21
00:01:07.840 --> 00:01:08.986
So for example, right?

22
00:01:08.986 --> 00:01:10.890
Display new transaction errors.

23
00:01:10.890 --> 00:01:14.048
What you see here is that the Cypress
has gone to the extent, and

24
00:01:14.048 --> 00:01:17.360
this is why to me it's like
very similar to the view ethos.

25
00:01:17.360 --> 00:01:18.980
I'm making things just so easy.

26
00:01:18.980 --> 00:01:23.290
So like here, you're gonna see that
we're actually, time-traveling through

27
00:01:23.290 --> 00:01:26.670
the various points of our application
as the test goes through.

28
00:01:26.670 --> 00:01:29.580
We can see what happens in various inputs,
right?

29
00:01:29.580 --> 00:01:31.470
We can see what the response is.

30
00:01:31.470 --> 00:01:36.349
So you'll see that inside of the console
here, let me bump this up a little bit.

31
00:01:37.470 --> 00:01:39.091
You can actually see like the method,
right?

32
00:01:39.091 --> 00:01:43.619
What was the get,
what was the URL duration was a stubbed,

33
00:01:43.619 --> 00:01:45.381
what was the request.

34
00:01:45.381 --> 00:01:48.715
And being able to time travel and
you enter and

35
00:01:48.715 --> 00:01:54.960
test as someone who came from traditional
Selenium background is humongous.

36
00:01:54.960 --> 00:01:59.738
It puts just so much value as far as like
seeing what's really happening at certain

37
00:01:59.738 --> 00:02:02.100
states of your application.

38
00:02:02.100 --> 00:02:06.290
And so Cypress there's also some other
things to deal with flake as well.

39
00:02:06.290 --> 00:02:09.570
But it also tries to do things
to make things easier for you.

40
00:02:09.570 --> 00:02:14.067
So for example, if you try to tell Cypress
to click a button on the page that is

41
00:02:14.067 --> 00:02:16.688
disabled, it will actually fire an error.

42
00:02:16.688 --> 00:02:20.610
It won't just force its way through and
find a way to click it.

43
00:02:20.610 --> 00:02:22.386
It'll say that like, hey, by the way,

44
00:02:22.386 --> 00:02:26.154
this element you're saying that should be
clickable is not clickable at this point,

45
00:02:26.154 --> 00:02:28.600
it can intelligently
determine those things.

46
00:02:28.600 --> 00:02:33.353
So even to the point where, if you have
a modal where the Z index is covering it,

47
00:02:33.353 --> 00:02:37.530
it's not gonna click it,
it's gonna try that normal interaction of

48
00:02:37.530 --> 00:02:40.794
clicking that element and
trying to replicate that.

49
00:02:40.794 --> 00:02:45.989
And so on top of that too, what you
might not have realized here is that

50
00:02:45.989 --> 00:02:51.290
everything on the right here,
this is actually our app rendered.

51
00:02:51.290 --> 00:02:52.690
This is not just like a video.

52
00:02:52.690 --> 00:02:55.067
And so that's what traditionally
people are used to also the end to end

53
00:02:55.067 --> 00:02:55.840
test, right?

54
00:02:55.840 --> 00:02:59.722
You wait for the test to run,
then you watch the video and you find out

55
00:02:59.722 --> 00:03:03.963
something's broken, then you go back and
try to scrub the video like no.

56
00:03:03.963 --> 00:03:06.500
End to end testing has come a long way.

57
00:03:06.500 --> 00:03:12.163
And so again, having this really immersive
experience when going through and

58
00:03:12.163 --> 00:03:17.242
seeing what exactly is happening
at these different states, right?

59
00:03:17.242 --> 00:03:23.090
And watching this happen can be
honestly a really big game changer.

60
00:03:23.090 --> 00:03:27.201
And so I know even for me, it actually
encourages me to wanna write tests first.

61
00:03:27.201 --> 00:03:30.653
Because now I get this like basically
automatic preview of my app where

62
00:03:30.653 --> 00:03:34.511
I can then say like, so for this end to
end test, I wanna make sure that when

63
00:03:34.511 --> 00:03:38.046
I click the request button and
the pay button that it does these things.

64
00:03:38.046 --> 00:03:40.231
It'll just run through and
automatically be run and

65
00:03:40.231 --> 00:03:43.020
you get to see that like basically
like a GIF of what's happening.

66
00:03:45.030 --> 00:03:49.359
And so, as your team is thinking
of adding end to end tests or

67
00:03:49.359 --> 00:03:55.150
making their end to end tests better,
that they can trust and rely upon.

68
00:03:55.150 --> 00:04:00.499
Just understand that like the level of
tooling has gotten to this point now,

69
00:04:00.499 --> 00:04:05.360
where we can interact with our
actual application and debug things.

70
00:04:05.360 --> 00:04:08.208
And as you might imagine,
if you're like in development mode,

71
00:04:08.208 --> 00:04:11.760
as long as you watch the tests and
you save them, it'll automatically reload.

72
00:04:11.760 --> 00:04:16.140
So you basically get the hot
module reloading aspect.

73
00:04:16.140 --> 00:04:20.850
And so yeah, I could give a whole
day workshop [LAUGH] on Cypress, but

74
00:04:20.850 --> 00:04:25.910
I do wanna at least show you that this
is where end to end testing has come.

