WEBVTT

1
00:00:00.120 --> 00:00:01.765
&gt;&gt; Scott Moss: That's it,
that was the last exercise.

2
00:00:01.765 --> 00:00:06.300
It's all I wanted to talk to you about as
far as, using GraphQL on the front end.

3
00:00:06.300 --> 00:00:10.130
As far as next steps in
where to go beyond this,

4
00:00:10.130 --> 00:00:12.520
this is pretty much it when it
comes to GraphQL on the front end.

5
00:00:12.520 --> 00:00:16.898
I mean, there are some more advanced
strategies like persisted cruise.

6
00:00:16.898 --> 00:00:20.526
But that takes interaction between you and
your server, and

7
00:00:20.526 --> 00:00:25.163
other advanced strategies that might
come to watching your query manually.

8
00:00:25.163 --> 00:00:27.154
Although, I don't really
run into the use case but

9
00:00:27.154 --> 00:00:29.158
apollo has pretty good
documentation about that.

10
00:00:29.158 --> 00:00:32.952
All the stuff that i showed you
today are the stuff that is

11
00:00:32.952 --> 00:00:37.087
pretty much like 89 95% of
the stuff that I do in my apps.

12
00:00:37.087 --> 00:00:40.060
Everything else,
is just like a very specific use case.

13
00:00:40.060 --> 00:00:41.950
Other than that,
it's mostly all just this.

14
00:00:41.950 --> 00:00:45.540
And obviously, like separating it out to
different files and organizing your app.

15
00:00:45.540 --> 00:00:49.460
But most of the stuff you're gonna
see is this, this is basically it.

16
00:00:49.460 --> 00:00:52.260
I don't really do anything beyond
this other than, like I said,

17
00:00:52.260 --> 00:00:57.500
very custom stuff that we do ourselves,
and this is graph do.

18
00:00:58.560 --> 00:01:01.770
Any questions on the whole
experience of GraphUL with React?

19
00:01:02.860 --> 00:01:06.344
&gt;&gt; Speaker 2: It was easier than the last
time I tried to take your older course

20
00:01:06.344 --> 00:01:07.309
[CROSSTALK]
&gt;&gt; Scott Moss: Okay,

21
00:01:07.309 --> 00:01:09.300
it was easier now, okay.

22
00:01:09.300 --> 00:01:12.010
Cool, all right, that's good to know.

23
00:01:12.010 --> 00:01:18.020
Cuz I did, my purpose on this was to try
to focus as much on GraphQL as possible,

24
00:01:18.020 --> 00:01:19.630
and not so much on the React stuff.

25
00:01:19.630 --> 00:01:23.650
So glad to hear that, that's awesome.

26
00:01:23.650 --> 00:01:26.460
From here, I just wanna introduce you all
to a lot of cool stuff that I think will

27
00:01:26.460 --> 00:01:29.440
make your journey with GraphQL
on the front end a lot easier.

28
00:01:29.440 --> 00:01:34.590
So one of the other ones I wanna
talk about tools in GraphQL Voyager,

29
00:01:34.590 --> 00:01:42.090
which is very similar to playground,except
for, I'll just show you.

30
00:01:42.090 --> 00:01:43.920
It does this [LAUGH].

31
00:01:43.920 --> 00:01:47.495
Basically, it gives you a schema
expiration of every single type

32
00:01:47.495 --> 00:01:50.745
you have and you can see how it
connects to different nodes.

33
00:01:50.745 --> 00:01:52.412
And you can check on those edges and

34
00:01:52.412 --> 00:01:54.720
basically, see all
different types of stuff.

35
00:01:56.130 --> 00:02:00.600
So I think you can zoom in on this,
there you go.

36
00:02:00.600 --> 00:02:06.730
It's always a great way just to see how
your graph is connected, pretty cool.

37
00:02:06.730 --> 00:02:07.590
The team behind this,

38
00:02:07.590 --> 00:02:12.910
I think is the same team that does
graphql-lodash, and stuff like that.

39
00:02:12.910 --> 00:02:15.410
Which I think I've talked about that
before, but I'll show that again.

40
00:02:15.410 --> 00:02:20.950
Graphql-lodash Is a set of
client side directives that

41
00:02:20.950 --> 00:02:26.180
allow you to use Lodash to format
your data, which is really cool.

42
00:02:27.830 --> 00:02:29.420
So you don't have to talk
to the server to do that.

43
00:02:29.420 --> 00:02:31.630
I really like this directive.

44
00:02:31.630 --> 00:02:36.500
It's kind of a hack but at the same time,
it's like wow, that's really cool.

45
00:02:36.500 --> 00:02:38.089
Like, I like that.

46
00:02:39.725 --> 00:02:42.958
&gt;&gt; Scott Moss: So
other cool stuff that I like would be,

47
00:02:42.958 --> 00:02:45.820
this one product called OneGraph.

48
00:02:47.810 --> 00:02:51.124
OneGraph is a startup,
I think they're in the Bay.

49
00:02:51.124 --> 00:02:57.120
Okay, hold up, there we go.

50
00:02:58.340 --> 00:03:02.540
And basically, what they do is
they connect all your API's.

51
00:03:02.540 --> 00:03:05.300
Like Chris, if you have a SAS app and
your app uses stripe,

52
00:03:05.300 --> 00:03:08.650
it also uses GitHub it uses this,
uses that.

53
00:03:08.650 --> 00:03:09.520
They connect it all for

54
00:03:09.520 --> 00:03:12.410
you to give you a graphical API to use,
just one graphical API.

55
00:03:12.410 --> 00:03:15.120
This connects to all the stuff that
you use, and you can use that.

56
00:03:15.120 --> 00:03:16.520
Could you make that yourself?

57
00:03:16.520 --> 00:03:17.500
Of course, you could.

58
00:03:17.500 --> 00:03:21.300
But they'd handle a lot of the edge case
things like what if this thing fails?

59
00:03:21.300 --> 00:03:24.570
How do you get a partial response back and
things like that.

60
00:03:24.570 --> 00:03:28.800
So pretty good product I haven't
tested out myself but I mean,

61
00:03:28.800 --> 00:03:30.750
they got a lot of integrations here.

62
00:03:30.750 --> 00:03:34.000
And I know from experience writing these
integrations yourself inside of graph,

63
00:03:34.000 --> 00:03:37.050
do, can be tedious,
especially if you're new to it.

64
00:03:37.050 --> 00:03:38.800
So super, super awesome product.

65
00:03:41.060 --> 00:03:45.715
Another one would be, I guess I have to
mention this one cuz we've been using

66
00:03:45.715 --> 00:03:47.770
their stuff all day, is Apollo.

67
00:03:49.801 --> 00:03:52.850
&gt;&gt; Scott Moss: So Apollo,
GraphQL, this is their website.

68
00:03:52.850 --> 00:03:56.100
They have this new thing called Platform.

69
00:03:56.100 --> 00:03:59.950
It's kinda hard to describe, but
it pretty much does a lot of stuff.

70
00:03:59.950 --> 00:04:03.790
So what they do is if you use their Apollo
Client, which is what we used today, and

71
00:04:03.790 --> 00:04:07.070
your app is built into an Apollo server,
then you can opt in for

72
00:04:07.070 --> 00:04:08.990
a lot of these products
that they have here.

73
00:04:08.990 --> 00:04:11.190
So things like tracking your schema,

74
00:04:11.190 --> 00:04:15.280
which basically you can push your
schema up to their remote repository.

75
00:04:15.280 --> 00:04:17.880
And allows you to use it for
tooling in your editor.

76
00:04:17.880 --> 00:04:21.260
It also notifies you about schema changes.

77
00:04:21.260 --> 00:04:23.680
Some one change the schema,
you get notifications based off it and

78
00:04:23.680 --> 00:04:24.780
stuff like that.

79
00:04:24.780 --> 00:04:28.680
They give you analytics on a per
field level, which is really cool.

80
00:04:28.680 --> 00:04:33.970
Insights, you can protect that schema so
people can't make changes to it.

81
00:04:33.970 --> 00:04:37.160
They also do like caching,
they got a lot of stuff.

82
00:04:37.160 --> 00:04:39.920
Actually, I don't really know how they're
product works cuz they change it a lot.

83
00:04:39.920 --> 00:04:43.360
They used to only do caching a year ago,
and now they have all this stuff.

84
00:04:43.360 --> 00:04:46.672
But if you're really into GraphQL and
you want some of the best tools,

85
00:04:46.672 --> 00:04:48.536
I highly recommend checking them out.

86
00:04:48.536 --> 00:04:51.020
Looks like that got some
good companies using them.

87
00:04:51.020 --> 00:04:52.050
And it's built by a nice team.

88
00:04:52.050 --> 00:04:54.750
Same people that made Meteor,
so, they're pretty talented.

89
00:04:54.750 --> 00:04:56.170
But yeah, looks pretty cool.

90
00:04:58.460 --> 00:05:05.110
Another one I think is really awesome is,
I think I talked about this in another

91
00:05:05.110 --> 00:05:09.780
course but I'm really big on fly.io
right now, I really like this product.

92
00:05:09.780 --> 00:05:12.100
Has nothing to do with graphQL, but

93
00:05:12.100 --> 00:05:15.200
it's just JavaScript at the Edge
which I think is Super awesome.

94
00:05:15.200 --> 00:05:18.650
And you basically write JavaScript
on the CDN and do whatever you want.

95
00:05:18.650 --> 00:05:23.000
So you could make an app on the CDN,
that's kind of mind blowing.

96
00:05:23.000 --> 00:05:24.930
And I think this is really awesome.

97
00:05:24.930 --> 00:05:28.930
You can pretty much never have to use
an origin for a lot of your use cases and

98
00:05:28.930 --> 00:05:32.730
just serve everything from a node
closest to all your customers.

99
00:05:32.730 --> 00:05:33.860
And it's all in JavaScript.

100
00:05:33.860 --> 00:05:34.870
So they're really good.

101
00:05:34.870 --> 00:05:38.190
There's other alternatives to it,
a Koffler workers is another one.

102
00:05:38.190 --> 00:05:42.480
I know AWS has their lambda at edge,
which is very similar to this.

103
00:05:42.480 --> 00:05:45.310
So there's other alternatives but
this one's pretty good.

104
00:05:45.310 --> 00:05:46.960
I really like this product.

105
00:05:46.960 --> 00:05:51.180
Other than that, I can't really
think of anything super cool.

106
00:05:51.180 --> 00:05:55.440
From here, I would just look at the
awesome GraphQL list that's on GitHub and

107
00:05:55.440 --> 00:05:56.960
kind of pick apart.

108
00:05:56.960 --> 00:05:58.310
What's really cool in here?

109
00:05:58.310 --> 00:06:00.760
And I actually know there's one.

110
00:06:00.760 --> 00:06:04.240
There is, let's see if they had it.

111
00:06:04.240 --> 00:06:06.352
Generation, generation, generation.

112
00:06:08.267 --> 00:06:09.688
&gt;&gt; Scott Moss: Generate, generate.

113
00:06:15.079 --> 00:06:16.010
&gt;&gt; Scott Moss: I guess don't have it.

114
00:06:16.010 --> 00:06:19.090
I was looking for
one called GraphQL code generator.

115
00:06:19.090 --> 00:06:19.770
Is this the one?

116
00:06:19.770 --> 00:06:22.370
No, there's a-
&gt;&gt; Speaker 2: There I see it.

117
00:06:23.640 --> 00:06:24.160
&gt;&gt; Scott Moss: This one?

118
00:06:24.160 --> 00:06:25.040
&gt;&gt; Speaker 2: Yeah.
&gt;&gt; Scott Moss: I don't think this

119
00:06:25.040 --> 00:06:26.050
is the one, lemme see.

120
00:06:26.050 --> 00:06:26.680
&gt;&gt; Speaker 2: Sorry.
&gt;&gt; Scott Moss: This

121
00:06:26.680 --> 00:06:27.370
mightbe a different one.

122
00:06:27.370 --> 00:06:30.776
I don't know what this one is but
that looked hella cool, whatever that was.

123
00:06:30.776 --> 00:06:31.740
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Scott Moss: That was dope.

124
00:06:33.920 --> 00:06:35.970
This one generates code for
you based on the schema.

125
00:06:35.970 --> 00:06:37.870
That's pretty cool,
very similar to what I was talking about.

126
00:06:37.870 --> 00:06:40.760
Basically, I was looking for a tool and
I'm sure there's more than one now.

127
00:06:40.760 --> 00:06:45.400
That will generate you can basically turn
anything and it basically gives you low

128
00:06:45.400 --> 00:06:50.520
level access and hooks into the tree
walking ability of a graphical schema.

129
00:06:50.520 --> 00:06:52.610
So when the,
when the schema is being compiled,

130
00:06:52.610 --> 00:06:55.650
you can hook into it and
basically render whatever you want.

131
00:06:55.650 --> 00:07:00.170
So we use that tool to like generate UIs,
dashboards,

132
00:07:00.170 --> 00:07:04.010
components, database models,
type script definitions, whatever.

133
00:07:04.010 --> 00:07:06.490
You can do whatever you
want with a tool like that.

134
00:07:06.490 --> 00:07:09.910
That way you do what the community
is calling a schema first design.

135
00:07:09.910 --> 00:07:12.550
Where the first thing you do when you
make some new product is you just

136
00:07:12.550 --> 00:07:13.180
design the schema.

137
00:07:13.180 --> 00:07:16.030
You and your team sit down and see look
cool, here’s the graphic of the schema is

138
00:07:16.030 --> 00:07:20.634
going to look like and everything spins
from that, everything comes from that.

139
00:07:20.634 --> 00:07:24.953
Type script definitions,
Components, of course, queries and

140
00:07:24.953 --> 00:07:30.260
mutations, database models,
everything comes from the GraphQL schema.

141
00:07:30.260 --> 00:07:32.570
So it's really a good approach, actually.

142
00:07:32.570 --> 00:07:35.040
If everyone agrees on that schema and

143
00:07:35.040 --> 00:07:38.640
everything is being generated from that
schema, then everything just works.

144
00:07:38.640 --> 00:07:40.620
So it's a really good approach.

145
00:07:40.620 --> 00:07:42.230
And some people take it really far.

146
00:07:42.230 --> 00:07:45.330
And tools like this
should help you do that.

147
00:07:45.330 --> 00:07:47.830
And I think that's all, the only cool
stuff I've got off the top of my head.

148
00:07:47.830 --> 00:07:51.307
Any other questions for me?

149
00:07:51.307 --> 00:07:54.023
Anybody got any questions about using
GraphQL in something other than

150
00:07:54.023 --> 00:07:55.450
React on the frontend?

151
00:07:55.450 --> 00:07:59.718
Cuz I have experience using it in
Vue a lot, and sometimes in Angular.

152
00:08:02.216 --> 00:08:06.980
&gt;&gt; Scott Moss: Nope, okay, if you
ever need that, obviously if you just

153
00:08:06.980 --> 00:08:13.190
Google Vue Apollo, there's a plugin for
that, for Vue Apollo.

154
00:08:13.190 --> 00:08:15.910
I think it's made by one
of the Vue Corp members.

155
00:08:15.910 --> 00:08:18.230
It's a really good product,
I highly recommend you checking it out.

156
00:08:18.230 --> 00:08:20.800
I like their implementation of Apollo.

157
00:08:20.800 --> 00:08:24.190
View, much better than
implementation that we just read.

158
00:08:24.190 --> 00:08:25.780
And or that we just did and react.

159
00:08:25.780 --> 00:08:26.960
So check that out.

160
00:08:26.960 --> 00:08:31.730
If you use knucks, there's a plugin for
view Apollo inside of next.

161
00:08:31.730 --> 00:08:34.082
If you never heard of knucks
its views version of next js,

162
00:08:34.082 --> 00:08:35.460
which is a react framework.

163
00:08:35.460 --> 00:08:36.750
This is really cool.

164
00:08:36.750 --> 00:08:38.940
So I would check those out
if you're interested in it.

165
00:08:38.940 --> 00:08:46.170
And and for Angular,
I'm pretty sure there is a Angular Apollo.

166
00:08:46.170 --> 00:08:49.540
Apollo is, I know that team is
really hardcore in Angular, so

167
00:08:49.540 --> 00:08:50.480
I know they've got something.

168
00:08:50.480 --> 00:08:53.500
Yeah, there you go, so
they've got something here too.

169
00:08:53.500 --> 00:08:55.420
I didn't use this one,
I was using Angular at the time, so

170
00:08:55.420 --> 00:08:56.670
I can't comment on how well it is.

171
00:08:56.670 --> 00:08:57.650
But I'm sure it's pretty good.

172
00:08:57.650 --> 00:08:58.770
Thanks for coming to the course,

173
00:08:58.770 --> 00:09:02.715
and I hope you all get to build some
dope GraphQL stuff soon, thanks.

174
00:09:02.715 --> 00:09:06.176
&gt;&gt; Audience: [APPLAUSE]

