WEBVTT

1
00:00:00.220 --> 00:00:03.542
&gt;&gt; Speaker 2: How many directives, I just
mean for client records out of the box,

2
00:00:03.542 --> 00:00:06.400
how many other directives
are out of the box?

3
00:00:06.400 --> 00:00:08.700
&gt;&gt; Scott Moss: So the question was, how
many other directors are out of the box?

4
00:00:09.920 --> 00:00:14.270
Depends on what you're using and
it depends on what we're talking about.

5
00:00:14.270 --> 00:00:16.680
Are we talking client side or
are talking server side?

6
00:00:16.680 --> 00:00:21.070
Client side, out of the box,
purely graph qL spec.

7
00:00:21.070 --> 00:00:24.180
There are a few directors that I could
think of that definitely come to mind.

8
00:00:24.180 --> 00:00:26.695
There's going to be a,
and this is client side,

9
00:00:26.695 --> 00:00:33.670
there's going to be a skip directive,
there's going to be a include directive.

10
00:00:33.670 --> 00:00:37.480
And these directors take
arguments which allow you to say,

11
00:00:38.890 --> 00:00:43.910
you can basically say, I wanna skip
this field if a certain variable,

12
00:00:43.910 --> 00:00:46.333
and when I'm talking variable,
I'm literally talking variables,

13
00:00:46.333 --> 00:00:50.080
so you have to have variables,
if a certain variable is passed or not.

14
00:00:50.080 --> 00:00:53.250
So I wanna skip this field
if newPet is passed.

15
00:00:53.250 --> 00:00:57.610
Or I wanna include this field if newPet
is not passed, something like that.

16
00:00:57.610 --> 00:01:01.315
So I know skip and include does that.

17
00:01:01.315 --> 00:01:04.620
Those, I know, are in graphql.

18
00:01:04.620 --> 00:01:08.220
You also have things that
are experimental and or

19
00:01:08.220 --> 00:01:12.870
have custom third party support,
like defer.

20
00:01:12.870 --> 00:01:19.060
You have something called Live,
and that's just for client side.

21
00:01:19.060 --> 00:01:23.930
Server side, on a server schema, which
looks very much like this type of schema,

22
00:01:23.930 --> 00:01:30.980
you might have something like deprecated,
which basically will allow you

23
00:01:30.980 --> 00:01:36.110
to deprecate a field to let a developer
know that this field is no longer needed.

24
00:01:36.110 --> 00:01:40.210
You can put a reason there,
you can have something like reason,

25
00:01:40.210 --> 00:01:42.260
and you can put a reason
here why it's deprecated.

26
00:01:42.260 --> 00:01:46.465
And then that will show in graphql tools
or grapql playground to let you know that

27
00:01:46.465 --> 00:01:49.590
this field is deprecated and
you no longer need to use it.

28
00:01:49.590 --> 00:01:53.280
And the reason might be is
because we use birthday instead,

29
00:01:53.280 --> 00:01:55.160
we don't use age anymore.

30
00:01:55.160 --> 00:01:58.460
And that's the type of scenario where
people can get around from having to

31
00:01:58.460 --> 00:02:01.890
version their graphql schema,
you don't have to make a new version.

32
00:02:01.890 --> 00:02:04.370
Some people still do make versions,
like version two, version three.

33
00:02:04.370 --> 00:02:06.960
But if you just do it that way,
you just deprecate fields and

34
00:02:06.960 --> 00:02:09.960
add new fields, you never have to version
your schema, nothing ever changes,

35
00:02:09.960 --> 00:02:13.790
you're still good to go and you're fine.

36
00:02:13.790 --> 00:02:14.790
That's the approach that I take.

37
00:02:14.790 --> 00:02:18.480
As long as you got the resolvers and you
deprecate it, people will stop using it,

38
00:02:18.480 --> 00:02:20.310
and then you can just add more.

39
00:02:20.310 --> 00:02:22.610
Other ones include out of the box.

40
00:02:24.590 --> 00:02:27.470
I can't think of any other ones,
but I mean, one, they're not

41
00:02:27.470 --> 00:02:31.638
too difficult to make yourself,
especially on the server side and two,

42
00:02:31.638 --> 00:02:36.770
there are tons of third
party ones that you can use.

43
00:02:36.770 --> 00:02:41.846
So I'm pretty sure there's a whole library

44
00:02:41.846 --> 00:02:44.970
that just gives you a bag
full of directives.

45
00:02:46.770 --> 00:02:47.640
Where's that?

46
00:02:47.640 --> 00:02:50.189
There you go,
a collection of custom directives.

47
00:02:52.070 --> 00:02:56.158
This one gives you tons of directives
like camelCase, capitalize,

48
00:02:56.158 --> 00:02:58.133
kebabCase, lowerCase, trim,

49
00:02:58.133 --> 00:03:02.232
all this crazy stuff that you can do,
let me show you an example of it.

50
00:03:02.232 --> 00:03:05.580
So, like that.

51
00:03:08.613 --> 00:03:12.138
&gt;&gt; Scott Moss: I think these are mostly
all server site directives, and you can

52
00:03:12.138 --> 00:03:16.460
pass arguments up to them via inputs,
via your queries, and stuff like that.

53
00:03:16.460 --> 00:03:19.370
But yeah, there's tons of them and

54
00:03:19.370 --> 00:03:22.090
people are now starting to really
take advantage of directives.

55
00:03:22.090 --> 00:03:24.620
Before, it was really hard,
you couldn't really do it, but

56
00:03:24.620 --> 00:03:26.780
frameworks like Apollo make it
easy to make the directives now.

