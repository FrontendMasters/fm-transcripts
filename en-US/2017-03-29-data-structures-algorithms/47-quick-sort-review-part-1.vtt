WEBVTT

1
00:00:00.160 --> 00:00:04.570
&gt;&gt; Bianca Gandolfo: Before we get into
trees, we are going to review quick sort.

2
00:00:04.570 --> 00:00:10.190
So we are going to do the thing that we
do, where I pretend to run the code and

3
00:00:10.190 --> 00:00:14.160
we make a call stack and
kind of trace everything,

4
00:00:14.160 --> 00:00:19.320
except this time we're going to
do it with your help, right?

5
00:00:19.320 --> 00:00:23.940
So we're going to start at Andy, go to
Maurice, John, Timbit all the way down and

6
00:00:23.940 --> 00:00:28.320
then we're going to go in this loop and
we're going to talk about

7
00:00:28.320 --> 00:00:32.100
how the values are changing,
the order in which this code is executing.

8
00:00:32.100 --> 00:00:34.890
Don't forget to tell me when to
put something on the stack and

9
00:00:34.890 --> 00:00:36.660
when to pop it off the call stack, okay?

10
00:00:36.660 --> 00:00:39.100
Are you ready?

11
00:00:41.390 --> 00:00:42.950
Any questions before we jump in?

12
00:00:42.950 --> 00:00:43.699
About how this will work?

13
00:00:45.170 --> 00:00:46.535
&gt;&gt; Speaker 2: Were you just
gonna kind of talk through.

14
00:00:46.535 --> 00:00:47.930
&gt;&gt; Bianca Gandolfo: Mm-hm, yep.

15
00:00:49.890 --> 00:00:51.920
Okay let me make this the right size.

16
00:00:55.342 --> 00:00:58.785
&gt;&gt; Bianca Gandolfo: Okay, all right.

17
00:01:02.276 --> 00:01:05.190
&gt;&gt; Bianca Gandolfo: This one's so
long it's hard to fit on one.

18
00:01:08.816 --> 00:01:12.092
&gt;&gt; Bianca Gandolfo: Okay, all right.

19
00:01:16.131 --> 00:01:20.920
&gt;&gt; Bianca Gandolfo: So we just pasted this
body of code somewhere and we hit run.

20
00:01:20.920 --> 00:01:25.010
And we hit enter in our console, perhaps.

21
00:01:25.010 --> 00:01:26.570
What's the first thing
that's going to happen?

22
00:01:30.260 --> 00:01:33.080
&gt;&gt; Speaker 3: So
the quicksort function will run.

23
00:01:33.080 --> 00:01:37.460
We're passing in an array, but
we're not passing lo and hi.

24
00:01:37.460 --> 00:01:42.589
So the first If statement will be true,
and it'll set lo equal to zero.

25
00:01:42.589 --> 00:01:43.800
&gt;&gt; Bianca Gandolfo: Awesome, perfect.

26
00:01:45.150 --> 00:01:47.260
So we have quick sort,
we pass in the values,

27
00:01:48.390 --> 00:01:52.300
which means we're going to cue up this,
right.

28
00:01:52.300 --> 00:01:55.090
Our stack's going to be on the right this,
since we don't have that much space.

29
00:01:56.830 --> 00:01:59.000
Our array looks like this.

30
00:01:59.000 --> 00:02:00.510
And lo and hi is undefined.

31
00:02:00.510 --> 00:02:05.586
So just like Andy said, oops,
just like Andy said we are going to

32
00:02:05.586 --> 00:02:12.260
initialize them at zero in
the last index of the array.

33
00:02:12.260 --> 00:02:18.750
That's what this is,
awesome, okay, there it is.

34
00:02:18.750 --> 00:02:22.510
&gt;&gt; Speaker 2: So
then it compares the lo with the hi?

35
00:02:22.510 --> 00:02:23.520
&gt;&gt; Bianca Gandolfo: Hm.

36
00:02:23.520 --> 00:02:25.068
So lo is zero, what is hi?

37
00:02:25.068 --> 00:02:31.080
&gt;&gt; Speaker 2: High is five.

38
00:02:31.080 --> 00:02:31.930
&gt;&gt; Bianca Gandolfo: Yeah, four right.

39
00:02:31.930 --> 00:02:32.430
&gt;&gt; Speaker 2: Cool.

40
00:02:34.270 --> 00:02:36.640
&gt;&gt; Bianca Gandolfo: Zero,
one, two, three, four.

41
00:02:36.640 --> 00:02:37.220
&gt;&gt; Speaker 2: Both yes.

42
00:02:38.560 --> 00:02:40.290
&gt;&gt; Bianca Gandolfo: Yep.
So is zero less than four?

43
00:02:41.340 --> 00:02:41.860
True.
And

44
00:02:43.520 --> 00:02:45.840
then we're gonna jump into
the body of the function.

45
00:02:45.840 --> 00:02:47.350
John, you wanna go next?

46
00:02:47.350 --> 00:02:49.550
&gt;&gt; John: Is high four or is it two?

47
00:02:51.360 --> 00:02:57.900
Because the length is five but
you subtract one to get index of four.

48
00:02:57.900 --> 00:03:00.536
&gt;&gt; Bianca Gandolfo: Yep.
&gt;&gt; John: Zero, one, two, three,

49
00:03:00.536 --> 00:03:02.590
the index is for right?

50
00:03:02.590 --> 00:03:04.500
&gt;&gt; Bianca Gandolfo: Yeah.
&gt;&gt; John: So that would be two.

51
00:03:06.070 --> 00:03:06.838
Or am I confused?

52
00:03:06.838 --> 00:03:09.050
&gt;&gt; Bianca Gandolfo: Yeah, but
we're just saving the index number here.

53
00:03:09.050 --> 00:03:11.740
We're not actually accessing the value.

54
00:03:11.740 --> 00:03:12.920
&gt;&gt; John: Right.
Okay.

55
00:03:12.920 --> 00:03:13.875
Got it.

56
00:03:13.875 --> 00:03:16.739
&gt;&gt; Bianca Gandolfo: Good question though.

57
00:03:16.739 --> 00:03:19.620
&gt;&gt; John: All right, so since it's true,

58
00:03:22.919 --> 00:03:26.644
&gt;&gt; John: Then you're going to run this

59
00:03:26.644 --> 00:03:33.350
partition function with the array and
zero and four.

60
00:03:36.120 --> 00:03:37.170
&gt;&gt; Bianca Gandolfo: Zero and four.

61
00:03:38.190 --> 00:03:41.039
Great, I'm going to put it under there so
we can see it.

62
00:03:42.190 --> 00:03:44.720
So I'm gonna copy and
paste our partition function over.

63
00:03:48.130 --> 00:03:55.940
All right, so just a reminder of what
our values are, we're gonna put it here.

64
00:03:55.940 --> 00:03:56.820
Who's next?

65
00:03:56.820 --> 00:03:57.820
Timbit, do you want to go next?

66
00:04:00.380 --> 00:04:03.670
&gt;&gt; Timbit: Either increase
the indexes too or

67
00:04:04.820 --> 00:04:05.820
&gt;&gt; Bianca Gandolfo: For this one?

68
00:04:05.820 --> 00:04:09.422
&gt;&gt; Timbit: Yeah, that one is for

69
00:04:09.422 --> 00:04:13.910
the pivot in the example.

70
00:04:13.910 --> 00:04:15.920
&gt;&gt; Bianca Gandolfo: Yeah, this is two.

71
00:04:18.950 --> 00:04:20.578
So high is four.

72
00:04:20.578 --> 00:04:23.410
We're accessing two.

73
00:04:24.490 --> 00:04:27.048
That's our pivot, and
then what's our pivot location?

74
00:04:27.048 --> 00:04:28.765
&gt;&gt; Timbit: One.

75
00:04:28.765 --> 00:04:33.910
&gt;&gt; Bianca Gandolfo: Zero, right?

76
00:04:33.910 --> 00:04:34.910
Because we passed in zero.

77
00:04:36.750 --> 00:04:39.720
Which, again, this is an index,
and this is the value, and

78
00:04:41.060 --> 00:04:46.490
remember here the pivot,
that is the element

79
00:04:46.490 --> 00:04:51.340
that we want to have in its final
place after all the swapping happens.

80
00:04:51.340 --> 00:04:52.830
Okay?

81
00:04:52.830 --> 00:04:55.840
The pivot location is where
we're going to keep track

82
00:04:55.840 --> 00:04:57.748
of where that final location should be.

83
00:04:57.748 --> 00:04:59.312
Cool?

84
00:04:59.312 --> 00:05:02.440
All right.

85
00:05:02.440 --> 00:05:03.769
Miranda, what's the next
thing that happens?

86
00:05:05.230 --> 00:05:11.090
So in the for loop it sets

87
00:05:11.090 --> 00:05:17.548
I to pivot location zero.

88
00:05:17.548 --> 00:05:24.900
Zero is, is zero less than two, right?

89
00:05:26.910 --> 00:05:29.240
So this is just gonna
loop from zero to four.

90
00:05:30.570 --> 00:05:32.900
Right, cuz lo is zero.

91
00:05:32.900 --> 00:05:34.190
We have it over here.

92
00:05:34.190 --> 00:05:35.040
And hi is four.

93
00:05:36.410 --> 00:05:37.930
So that's what this does right here.

94
00:05:40.143 --> 00:05:45.210
&gt;&gt; Bianca Gandolfo: And then we'll
enter into the body of the loop.

95
00:05:46.650 --> 00:05:48.230
And we'll come across this condition.

96
00:05:48.230 --> 00:05:51.310
What does this condition say, David?

97
00:05:51.310 --> 00:05:56.610
&gt;&gt; Timbit: Well, we're comparing
the value and position i with the pivot.

98
00:05:56.610 --> 00:06:01.970
And i is zero, the value and
position zero is five.

99
00:06:01.970 --> 00:06:07.720
And so we're asking is 5 less than or
equal to 2, and I believe that's false.

100
00:06:07.720 --> 00:06:08.810
&gt;&gt; Bianca Gandolfo: Yeah,
last time I checked.

101
00:06:09.960 --> 00:06:11.510
Unless you guys are reading 1984.

102
00:06:11.510 --> 00:06:14.048
&gt;&gt; Timbit: Based on my training,
I'd say that's a false statement.

103
00:06:14.048 --> 00:06:16.432
&gt;&gt; Bianca Gandolfo: [LAUGH] Okay.

104
00:06:16.432 --> 00:06:17.180
False.

105
00:06:17.180 --> 00:06:21.400
So since it's false,
we're going to skip this If statement.

106
00:06:21.400 --> 00:06:22.530
And then what happens next?

107
00:06:24.680 --> 00:06:28.350
&gt;&gt; Timbit: And i is incremented when
we re-enter the loop with i equals one.

108
00:06:28.350 --> 00:06:34.030
&gt;&gt; Bianca Gandolfo: Yep, so
we'll increment, now i is one, still four.

109
00:06:35.790 --> 00:06:37.700
What's the next thing we do Jenn?

110
00:06:37.700 --> 00:06:42.836
Well, the increment in the array, so

111
00:06:42.836 --> 00:06:48.453
the one is three,
three is not less than or

112
00:06:48.453 --> 00:06:53.760
equal to two, so false, false again.

113
00:06:53.760 --> 00:06:55.320
All right.

114
00:06:55.320 --> 00:06:59.780
&gt;&gt; Bianca Gandolfo: Then what happens,
Rosie?

115
00:06:59.780 --> 00:07:02.140
&gt;&gt; Rosie: Pass,
I haven't had a chance to look at this.

116
00:07:02.140 --> 00:07:02.640
[LAUGH]
&gt;&gt; Bianca Gandolfo: Okay.

117
00:07:02.640 --> 00:07:03.930
Well we're just,

118
00:07:03.930 --> 00:07:07.140
since this is false we're just gonna
skip over the body of the if statement.

119
00:07:07.140 --> 00:07:09.740
And then we're gonna enter
into the loop again.

120
00:07:09.740 --> 00:07:11.460
Should we pass it over to you Andy?

121
00:07:11.460 --> 00:07:14.660
&gt;&gt; Andy: Yeah, so
that'll get incremented again.

122
00:07:15.930 --> 00:07:17.470
And we'll go in for another round.

123
00:07:17.470 --> 00:07:19.110
This time it's-
&gt;&gt; Bianca Gandolfo: Oops,

124
00:07:19.110 --> 00:07:23.582
sorry
&gt;&gt; Bianca Gandolfo: I'm sorry.

125
00:07:23.582 --> 00:07:25.756
[LAUGH] Wait.

126
00:07:25.756 --> 00:07:26.259
Two.

127
00:07:26.259 --> 00:07:26.762
Two.

128
00:07:26.762 --> 00:07:30.840
&gt;&gt; Andy: [LAUGH]
&gt;&gt; Bianca Gandolfo: There's two and then.

129
00:07:30.840 --> 00:07:32.700
&gt;&gt; Andy: Makes that one.

130
00:07:32.700 --> 00:07:33.270
&gt;&gt; Bianca Gandolfo: Yep.

131
00:07:33.270 --> 00:07:34.991
&gt;&gt; Andy: Which is less than two.

132
00:07:34.991 --> 00:07:36.260
&gt;&gt; Bianca Gandolfo: Whoo, we made it.

133
00:07:36.260 --> 00:07:37.860
So one is less than two.

134
00:07:37.860 --> 00:07:41.560
So then we're gonna enter into
the body of this function.

135
00:07:44.790 --> 00:07:48.569
&gt;&gt; Bianca Gandolfo: Maurice
do you want to take a stab?

136
00:07:48.569 --> 00:07:52.929
&gt;&gt; Maurice: So pivot location is,
&gt;&gt; Maurice: That's

137
00:07:52.929 --> 00:07:59.650
the value, right?

138
00:07:59.650 --> 00:08:01.550
No, that's the lo.

139
00:08:01.550 --> 00:08:02.470
&gt;&gt; Bianca Gandolfo: Pivot location, yeah.

140
00:08:02.470 --> 00:08:03.740
We initialize it at zero.

141
00:08:03.740 --> 00:08:04.470
&gt;&gt; Maurice: So that's two.

142
00:08:04.470 --> 00:08:09.280
So just swap-
&gt;&gt; Bianca Gandolfo: So

143
00:08:09.280 --> 00:08:10.860
we pass the entire array.

144
00:08:10.860 --> 00:08:11.870
&gt;&gt; Maurice: Array.

145
00:08:11.870 --> 00:08:15.530
&gt;&gt; Bianca Gandolfo: And
we have the pivot location, which is zero.

146
00:08:15.530 --> 00:08:19.480
And we swap it with i, which is two.

147
00:08:19.480 --> 00:08:20.930
&gt;&gt; Maurice: Is two.

148
00:08:20.930 --> 00:08:21.600
&gt;&gt; Bianca Gandolfo: Cool.
Should we

149
00:08:21.600 --> 00:08:23.680
take a look at what's
going on in our swap now?

150
00:08:26.260 --> 00:08:27.270
Which I didn't copy over.

151
00:08:28.790 --> 00:08:30.335
Let me grab our swap for us.

152
00:08:30.335 --> 00:08:33.800
[SOUND]

153
00:08:33.800 --> 00:08:37.960
Swap.

154
00:08:44.400 --> 00:08:46.040
&gt;&gt; Bianca Gandolfo: We'll
put a swap down here.

155
00:08:48.571 --> 00:08:49.071
&gt;&gt; Bianca Gandolfo: All right.

156
00:08:52.340 --> 00:08:53.058
&gt;&gt; Bianca Gandolfo: So we're gonna swap.

157
00:08:55.850 --> 00:09:00.070
&gt;&gt; Bianca Gandolfo: So,
this is where we leave off, right?

158
00:09:00.070 --> 00:09:01.610
Cuz we're jumping in to the swap.

159
00:09:01.610 --> 00:09:02.810
This is where we left off before.

160
00:09:06.731 --> 00:09:09.450
&gt;&gt; Bianca Gandolfo: All right.

161
00:09:09.450 --> 00:09:10.410
So now we have our swap.

162
00:09:11.530 --> 00:09:12.360
We have our array.

163
00:09:15.540 --> 00:09:17.800
&gt;&gt; Bianca Gandolfo: Zero and two.

164
00:09:17.800 --> 00:09:18.560
Okay, John, your turn.

165
00:09:20.350 --> 00:09:25.920
&gt;&gt; John: Okay, so it evaluates if 0 and
2 are the same, which they are not.

166
00:09:25.920 --> 00:09:26.590
&gt;&gt; Bianca Gandolfo: Okay.

167
00:09:26.590 --> 00:09:31.710
&gt;&gt; John: So,
&gt;&gt; John: So then it keeps going, yeah.

168
00:09:31.710 --> 00:09:37.980
So then it puts 0 in the variable temp,
it's just swapping them, of course, yeah.

169
00:09:39.430 --> 00:09:40.690
&gt;&gt; Bianca Gandolfo: So
what is temp at this point?

170
00:09:40.690 --> 00:09:42.930
&gt;&gt; John: So temp is 0, I'm sorry.

171
00:09:44.080 --> 00:09:45.010
&gt;&gt; Bianca Gandolfo: Temp is 5 right?

172
00:09:47.480 --> 00:09:50.610
&gt;&gt; John: Because of the index right,
yes so it's up there.

173
00:09:50.610 --> 00:09:51.300
&gt;&gt; Bianca Gandolfo: Yeah.

174
00:09:51.300 --> 00:09:53.280
&gt;&gt; John: So yeah temp is 5.

175
00:09:53.280 --> 00:09:56.330
&gt;&gt; Bianca Gandolfo: So
it's [INAUDIBLE] at 0 which is 5.

176
00:09:56.330 --> 00:10:04.000
&gt;&gt; John: Yeah then 5 equals 1 or
5 becomes 1.

177
00:10:04.000 --> 00:10:10.760
&gt;&gt; Bianca Gandolfo: So then we swap it so
now our array looks something like what?

178
00:10:13.790 --> 00:10:15.100
&gt;&gt; John: Like 1, 3.

179
00:10:15.100 --> 00:10:15.790
&gt;&gt; Bianca Gandolfo: Backwards 5.

180
00:10:15.790 --> 00:10:16.340
&gt;&gt; John: 4, 2.
&gt;&gt; Bianca Gandolfo: 4, 2.

181
00:10:16.340 --> 00:10:19.560
Okay.
&gt;&gt; John: And then

182
00:10:25.400 --> 00:10:27.936
&gt;&gt; John: Sorry, so what is i2, i2 is 2 so

183
00:10:27.936 --> 00:10:31.000
0, 1, 2 is 1, so 1 is now 5, or no.

184
00:10:31.000 --> 00:10:38.930
&gt;&gt; Bianca Gandolfo: So actually, right
that's what that looks like, there we go.

185
00:10:38.930 --> 00:10:41.660
&gt;&gt; John: Yes okay, there we go,
now it's 1, 3, 5, 4, 2.

186
00:10:41.660 --> 00:10:44.680
&gt;&gt; Bianca Gandolfo: And
now we're putting the five.

187
00:10:44.680 --> 00:10:45.410
&gt;&gt; John: 1, 3, 5, 4, 2.

188
00:10:45.410 --> 00:10:45.910
&gt;&gt; Bianca Gandolfo: Thank you.

189
00:10:47.730 --> 00:10:48.870
Got it.

190
00:10:48.870 --> 00:10:49.580
So we swap them.

191
00:10:49.580 --> 00:10:54.235
Great and we have this cancel out where
we can move on with our lives and

192
00:10:54.235 --> 00:10:56.860
we're gonna return this array.

193
00:10:58.870 --> 00:11:02.270
&gt;&gt; John: Is there any reason to return it?

194
00:11:02.270 --> 00:11:02.960
&gt;&gt; Bianca Gandolfo: Hm?

195
00:11:02.960 --> 00:11:04.169
&gt;&gt; John: Any reason to return the array?

196
00:11:05.610 --> 00:11:07.540
&gt;&gt; Bianca Gandolfo: No, I don't think so.

197
00:11:10.156 --> 00:11:12.883
&gt;&gt; Bianca Gandolfo: So, the reason
it doesn't really matter that we

198
00:11:12.883 --> 00:11:17.338
are returning the arrays is because we are
editing the same copy of this array for

199
00:11:17.338 --> 00:11:18.620
the entire function.

200
00:11:18.620 --> 00:11:23.220
So, we're not copying arrays and copying
arrays and changing anything around.

201
00:11:23.220 --> 00:11:24.680
We're actually editing the same array.

202
00:11:24.680 --> 00:11:27.130
Even when we're doing the recursive calls,
it's the same array.

203
00:11:30.100 --> 00:11:33.390
But this is probably just
a generic swap function.

204
00:11:35.390 --> 00:11:37.960
&gt;&gt; Bianca Gandolfo: Cool, so here we are.

205
00:11:39.100 --> 00:11:40.570
So we have a return.

206
00:11:40.570 --> 00:11:45.300
We're gonna pop it off, and
we're gonna continue back where we were.

