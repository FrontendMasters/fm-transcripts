WEBVTT

1
00:00:00.470 --> 00:00:03.124
&gt;&gt; Bianca: Imagine now we have
our matrixes initialized.

2
00:00:03.124 --> 00:00:07.106
We have some stuff in it, and
now we want to start adding edges.

3
00:00:07.106 --> 00:00:08.150
How do we do that?

4
00:00:13.615 --> 00:00:17.730
&gt;&gt; Bianca: First of all, what would
we pass to an add edge function?

5
00:00:19.540 --> 00:00:21.770
&gt;&gt; Male: A starting node and
an ending node N1, N2.

6
00:00:21.770 --> 00:00:22.330
&gt;&gt; Female: Yeah.

7
00:00:22.330 --> 00:00:27.585
&gt;&gt; Bianca: Let's say V.

8
00:00:27.585 --> 00:00:28.979
V1, V2.

9
00:00:28.979 --> 00:00:35.521
So that's our two vertices.

10
00:00:35.521 --> 00:00:37.660
Some things to think about.

11
00:00:37.660 --> 00:00:40.960
Are they directed?
Are they weighted?

12
00:00:40.960 --> 00:00:42.542
That kind of stuff, right?

13
00:00:42.542 --> 00:00:47.873
But we're not going to do that right now.

14
00:00:47.873 --> 00:00:49.390
So we're gonna add the edge.

15
00:00:49.390 --> 00:00:51.453
We have two vertices.

16
00:00:51.453 --> 00:00:56.574
They're already in a 2D array.

17
00:00:56.574 --> 00:01:04.010
Let's say the value is let's say two and
four, and we want to connect them.

18
00:01:04.010 --> 00:01:05.878
And it's an undirected graph,

19
00:01:05.878 --> 00:01:09.556
which means that they both should
be able to get to one another.

20
00:01:09.556 --> 00:01:13.380
So I could go from four to two,
and two to four, no big deal.

21
00:01:18.752 --> 00:01:23.469
&gt;&gt; Male: So, I mean, visually what
that would look like is both the two

22
00:01:23.469 --> 00:01:28.490
points that represent two and
four would both go from zero to one?

23
00:01:28.490 --> 00:01:33.845
&gt;&gt; Bianca: Yeah, so matrix,
so let's just say two.

24
00:01:33.845 --> 00:01:37.580
Let's see.

25
00:01:37.580 --> 00:01:38.493
Let's count.

26
00:01:38.493 --> 00:01:41.030
So two, four, and then four- Two.

27
00:01:41.030 --> 00:01:42.590
Four, two, yeah, two, four, right?

28
00:01:42.590 --> 00:01:44.091
&gt;&gt; Male: Yes.

29
00:01:50.010 --> 00:01:55.145
&gt;&gt; Bianca: Cool, so
we're starting to get a feel here for

30
00:01:55.145 --> 00:02:00.281
what's easy to do with
an adjacency matrix and

31
00:02:00.281 --> 00:02:05.697
what's a little bit more complicated,
right?

32
00:02:09.031 --> 00:02:10.160
&gt;&gt; Bianca: Adding an edge.

33
00:02:12.540 --> 00:02:14.191
Easy, right?

34
00:02:14.191 --> 00:02:16.580
Deleting an edge, we can guess.

35
00:02:16.580 --> 00:02:18.863
We can extrapolate from addedge.

36
00:02:18.863 --> 00:02:19.757
Perhaps it's also easy.

37
00:02:24.020 --> 00:02:24.979
&gt;&gt; Bianca: What's the hard thing?

38
00:02:24.979 --> 00:02:30.368
The only other thing that we've done?

39
00:02:32.640 --> 00:02:33.140
&gt;&gt; Male: The-
&gt;&gt; Female: The node?

40
00:02:33.140 --> 00:02:34.202
&gt;&gt; Male: Adding a node.

41
00:02:34.202 --> 00:02:35.920
&gt;&gt; Bianca: Yeah, adding a node.

42
00:02:35.920 --> 00:02:38.945
It opens up a lot of questions, right,

43
00:02:38.945 --> 00:02:40.335
for us?
If we

44
00:02:40.335 --> 00:02:44.187
&gt;&gt; Bianca: Have to expand our arrays,

45
00:02:44.187 --> 00:02:51.227
our nested arrays every time,
think about that.

46
00:02:51.227 --> 00:02:56.948
Every array that you have,
&gt;&gt; Bianca: In here, right?

47
00:02:56.948 --> 00:03:00.169
So we had to add one to
all of these arrays.

48
00:03:01.360 --> 00:03:03.924
So we had another row here.

49
00:03:03.924 --> 00:03:07.420
But then we have to also
add another column.

50
00:03:08.950 --> 00:03:16.281
So that's a fairly expensive operation for
literally adding one node, right?

51
00:03:16.281 --> 00:03:19.770
And then if we created
the matrix ahead of time, and

52
00:03:19.770 --> 00:03:23.706
we don't necessarily know-
&gt;&gt; Female: What the capacity is.

53
00:03:23.706 --> 00:03:26.770
&gt;&gt; Bianca: What the capacity is and
then if we have to grow it.

54
00:03:26.770 --> 00:03:30.085
Again, these are all kind of some things
that we have to think about when we're

55
00:03:30.085 --> 00:03:32.161
using adjacency matrix
to represent our graph.

56
00:03:32.161 --> 00:03:37.570
However, adding edges,
deleting edges, pretty simple.

57
00:03:37.570 --> 00:03:40.669
What about if we wanted to find a path?

58
00:03:43.800 --> 00:03:46.520
What if we wanted to know if we could go,
and

59
00:03:46.520 --> 00:03:50.162
let's look at an undirected graph just for
simplicity.

60
00:03:50.162 --> 00:03:54.544
What if we wanted to know if
there was a path from one to six?

61
00:03:58.130 --> 00:04:01.927
&gt;&gt; Female: Look for the binary value one.

62
00:04:01.927 --> 00:04:03.318
At one, six or six, one.

63
00:04:03.318 --> 00:04:08.830
&gt;&gt; Bianca: Yeah, so that would be
if we had a direct connection.

64
00:04:08.830 --> 00:04:13.500
But a path could go from one to
three to four to five to six.

65
00:04:13.500 --> 00:04:17.251
Or another path might be one
to two to four to five to six.

66
00:04:17.251 --> 00:04:21.820
&gt;&gt; Female: This was totally
an interview that I had to do.

67
00:04:21.820 --> 00:04:23.498
&gt;&gt; Bianca: You had to [INAUDIBLE].

68
00:04:23.498 --> 00:04:25.983
&gt;&gt; Female: Except it was using trains.

69
00:04:25.983 --> 00:04:26.630
&gt;&gt; Bianca: Yep.

70
00:04:26.630 --> 00:04:27.759
&gt;&gt; Female: And connecting cities.

71
00:04:27.759 --> 00:04:28.730
&gt;&gt; Bianca: Yep, yep.

72
00:04:28.730 --> 00:04:30.483
Very common type of interview
question graph actually.

73
00:04:30.483 --> 00:04:32.468
&gt;&gt; Female: It was a recursive solution.

74
00:04:32.468 --> 00:04:33.906
&gt;&gt; Bianca: Yep.

75
00:04:37.480 --> 00:04:39.310
&gt;&gt; Male: So it was like-
&gt;&gt; Bianca: Path.

76
00:04:39.310 --> 00:04:42.737
&gt;&gt; Male: I mean so you could like
walk back, so look at the row six.

77
00:04:42.737 --> 00:04:47.578
You see all it connects to is five,
so then you could move to five and

78
00:04:47.578 --> 00:04:50.700
you see that five connects to four and
six.

79
00:04:50.700 --> 00:04:56.239
So you could move to four and you see
four connects to two, three and five.

80
00:04:56.239 --> 00:05:01.003
So you could just keep following that and
then see if you're

81
00:05:01.003 --> 00:05:05.684
able to get back to your starting point or
do the opposite.

82
00:05:05.684 --> 00:05:07.210
&gt;&gt; Bianca: Yeah.

83
00:05:07.210 --> 00:05:08.696
So there's a way to do it, right?

84
00:05:08.696 --> 00:05:11.730
It's just really complicated,
especially when we have a lot of

85
00:05:11.730 --> 00:05:15.490
different connections going
all different kinds of ways.

86
00:05:15.490 --> 00:05:17.711
It's not the most straightforward thing.

87
00:05:17.711 --> 00:05:21.300
And finding paths with graphs,
pretty important.

88
00:05:23.539 --> 00:05:26.646
&gt;&gt; Bianca: For most, so
many graph algorithms are based on that.

89
00:05:26.646 --> 00:05:31.380
That's why this is called graphs and
paths today.

