WEBVTT

1
00:00:00.410 --> 00:00:04.670
&gt;&gt; Bianca Gandolfo: Let's just take a tour
of what this tree actually looks like.

2
00:00:15.681 --> 00:00:17.561
&gt;&gt; Bianca Gandolfo: You guys
see what I'm doing here?

3
00:00:17.561 --> 00:00:18.584
So we created a tree.

4
00:00:18.584 --> 00:00:20.520
We added three branches to the root.

5
00:00:21.840 --> 00:00:25.798
And now, from those branches,

6
00:00:25.798 --> 00:00:30.204
I'm gonna add some more children.

7
00:00:38.296 --> 00:00:39.640
&gt;&gt; Bianca Gandolfo: And
we're gonna walk through and

8
00:00:39.640 --> 00:00:41.609
we're gonna see what
this actually looks like.

9
00:00:43.450 --> 00:00:46.792
&gt;&gt; Bianca Gandolfo: Cool?
So we looked at the linked list, and

10
00:00:46.792 --> 00:00:49.620
they hold a reference to the next.

11
00:00:51.623 --> 00:00:52.145
&gt;&gt; Bianca Gandolfo: Let's check this out.

12
00:00:52.145 --> 00:00:56.391
So tree, we instantiate our new tree,

13
00:00:56.391 --> 00:01:03.220
which is an object that has this.value,
right, which is 1.

14
00:01:03.220 --> 00:01:07.139
And it also has another property,
this.children.

15
00:01:08.312 --> 00:01:10.237
&gt;&gt; Bianca Gandolfo: Let's
just remove the this, and

16
00:01:10.237 --> 00:01:15.150
it'll actually be object literal notation,
right, which starts out as empty.

17
00:01:15.150 --> 00:01:21.145
So there's our tree, and
we add a child, oops.

18
00:01:21.145 --> 00:01:24.836
When we add our child,

19
00:01:24.836 --> 00:01:28.923
it goes in here, right?

20
00:01:28.923 --> 00:01:32.382
The value is 2,
&gt;&gt; Bianca Gandolfo: children,

21
00:01:35.361 --> 00:01:35.984
&gt;&gt; Bianca Gandolfo: Is another array.

22
00:01:47.898 --> 00:01:52.034
&gt;&gt; Bianca Gandolfo: Okay, so
now we add another child with the value 3,

23
00:01:52.034 --> 00:01:55.423
with the value tree, the value this many.

24
00:01:55.423 --> 00:01:57.490
Where does it go?

25
00:02:01.952 --> 00:02:02.554
&gt;&gt; off screen male: Inside
the empty array.

26
00:02:02.554 --> 00:02:05.359
&gt;&gt; Bianca Gandolfo: Inside
the empty array?

27
00:02:05.359 --> 00:02:08.609
&gt;&gt; off screen male: branch2 is-
&gt;&gt; Bianca Gandolfo: It's outside, right,

28
00:02:08.609 --> 00:02:09.997
another new array?

29
00:02:09.997 --> 00:02:10.933
&gt;&gt; off screen male: What is page two?

30
00:02:10.933 --> 00:02:11.530
&gt;&gt; Bianca Gandolfo: I don't know,
what does the code say?

31
00:02:12.740 --> 00:02:18.880
So the code says, addChild, we pass 3,
so we're gonna create a new tree.

32
00:02:18.880 --> 00:02:20.300
&gt;&gt; off screen male: It's a new branch,
so yeah.

33
00:02:22.060 --> 00:02:24.948
&gt;&gt; Bianca Gandolfo: So value was 3,
and then children, right,

34
00:02:24.948 --> 00:02:28.090
it's gonna have its own children, yeah?

35
00:02:28.090 --> 00:02:29.360
&gt;&gt; off screen male: Yeah.
&gt;&gt; Bianca Gandolfo: And then we're gonna

36
00:02:29.360 --> 00:02:32.340
say this.children.push[child].

37
00:02:32.340 --> 00:02:33.350
So what is this?

38
00:02:34.750 --> 00:02:35.810
&gt;&gt; off screen male: The original tree?

39
00:02:35.810 --> 00:02:39.200
&gt;&gt; Bianca Gandolfo: The original tree,
whatever's to the left of this dot.

40
00:02:40.690 --> 00:02:45.510
So the original tree, which is our
first one, we're gonna push it.

41
00:02:45.510 --> 00:02:46.820
So it's gonna tack it on the end.

42
00:02:53.014 --> 00:02:55.162
&gt;&gt; Bianca Gandolfo: So
we put a comma there, and then we tack it.

43
00:02:55.162 --> 00:02:58.575
&gt;&gt; off screen male: So
it's making a new array with different

44
00:02:58.575 --> 00:03:01.180
elements
&gt;&gt; Bianca Gandolfo: It's the same array

45
00:03:01.180 --> 00:03:03.560
with an added, so
this is the original array.

46
00:03:03.560 --> 00:03:04.270
&gt;&gt; off screen male: Uh-huh.

47
00:03:04.270 --> 00:03:06.780
&gt;&gt; Bianca Gandolfo: And
then we're simply pushing to the next.

48
00:03:08.264 --> 00:03:09.560
&gt;&gt; off screen male: It's
adding a new element.

49
00:03:09.560 --> 00:03:14.432
&gt;&gt; Bianca Gandolfo: Yes, yes, exactly, and

50
00:03:14.432 --> 00:03:20.196
then what about this one, 4?

51
00:03:21.988 --> 00:03:24.590
&gt;&gt; off screen male: That
added a new element.

52
00:03:24.590 --> 00:03:25.870
&gt;&gt; Bianca Gandolfo: Yep,
to the same array.

53
00:03:27.112 --> 00:03:30.542
&gt;&gt; Bianca Gandolfo: I'm just
gonna put some dot dot dots here,

54
00:03:30.542 --> 00:03:33.509
cuz we understand that now, right?

55
00:03:35.360 --> 00:03:35.860
Cool.

56
00:03:38.262 --> 00:03:39.430
&gt;&gt; Bianca Gandolfo: What about this one?

57
00:03:39.430 --> 00:03:40.430
How does this affect our?

58
00:03:47.714 --> 00:03:48.720
&gt;&gt; Bianca Gandolfo: I'm
gonna put some dots there.

59
00:03:49.950 --> 00:03:54.100
So we say branch1.addChild(5).

60
00:03:56.651 --> 00:04:02.850
&gt;&gt; Bianca Gandolfo: So let's hop in here,
value is 5, so it'll look like this.

61
00:04:02.850 --> 00:04:05.280
And then we say this.children.push.

62
00:04:05.280 --> 00:04:07.370
The real question is, what is this?

63
00:04:11.542 --> 00:04:15.160
&gt;&gt; off screen female: branch1.

64
00:04:15.160 --> 00:04:16.310
&gt;&gt; Bianca Gandolfo: Yeah, this is branch1.

65
00:04:19.081 --> 00:04:23.040
&gt;&gt; Bianca Gandolfo: And remember,
branch1 is the one that has the value 2.

66
00:04:23.040 --> 00:04:27.612
And so this refers to this

67
00:04:27.612 --> 00:04:32.195
entire object, right?

68
00:04:32.195 --> 00:04:37.199
This is branch1, so

69
00:04:37.199 --> 00:04:42.490
.children dot push.

70
00:04:42.490 --> 00:04:43.400
So we're gonna push it there.

71
00:04:47.290 --> 00:04:48.430
&gt;&gt; Bianca Gandolfo: This
is getting really long.

72
00:04:49.950 --> 00:04:50.930
Let's do some indenting.

73
00:05:03.940 --> 00:05:07.711
&gt;&gt; Bianca Gandolfo: Put that in there,
etc.

74
00:05:10.454 --> 00:05:10.954
&gt;&gt; Bianca Gandolfo: Cool.

75
00:05:18.976 --> 00:05:22.137
&gt;&gt; Bianca Gandolfo: Do we
see what's happening here?

76
00:05:22.137 --> 00:05:25.360
So branch1.addChild(6).

77
00:05:25.360 --> 00:05:29.090
Again, here is branch1.

78
00:05:30.950 --> 00:05:32.630
We're gonna push it to a child array.

79
00:05:40.086 --> 00:05:42.645
&gt;&gt; Bianca Gandolfo: It has the value 6,
okay?

80
00:05:42.645 --> 00:05:47.139
If I wanted to

81
00:05:47.139 --> 00:05:53.410
add,
&gt;&gt; Bianca Gandolfo: A node or

82
00:05:53.410 --> 00:05:59.000
tree here into this children array,
how might I do that?

83
00:06:06.329 --> 00:06:09.760
&gt;&gt; off screen male: Well, you could just
add dot add child, whatever, to that line.

84
00:06:12.620 --> 00:06:13.464
&gt;&gt; Bianca Gandolfo: To this one?
&gt;&gt; off screen male: Yeah.

85
00:06:13.464 --> 00:06:15.580
&gt;&gt; Bianca Gandolfo: Mm-hm,
so we can chain it.

86
00:06:20.772 --> 00:06:24.122
&gt;&gt; Bianca Gandolfo: The reason we can
chain it is because we're returning

87
00:06:24.122 --> 00:06:24.870
the child.

88
00:06:26.590 --> 00:06:28.530
If we do not return the child,
we cannot chain.

89
00:06:28.530 --> 00:06:29.219
That's important.

90
00:06:31.685 --> 00:06:36.930
&gt;&gt; Bianca Gandolfo: Cool, so
now things are getting crazy.

91
00:06:36.930 --> 00:06:39.280
So this is our tree.

92
00:06:39.280 --> 00:06:45.800
So our tree is like a super nested
collection of objects and arrays, right?

93
00:06:45.800 --> 00:06:48.090
It could be a bajillion deep.

94
00:06:49.858 --> 00:06:52.970
&gt;&gt; Bianca Gandolfo: Cool, any questions
about what this is really looking?

95
00:06:52.970 --> 00:06:56.770
It looks all nice, right,
when we have our little

96
00:06:56.770 --> 00:07:00.290
constructor functions here and
our methods.

97
00:07:01.960 --> 00:07:04.620
But then when we get down to it,
it's a little messy.

98
00:07:06.750 --> 00:07:08.440
&gt;&gt; off screen male: It's kind of like,
is it a shell,

99
00:07:08.440 --> 00:07:09.830
kind of like that's growing inside?

100
00:07:12.472 --> 00:07:15.600
&gt;&gt; Bianca Gandolfo: A shell that's
growing inside, yeah, definitely.

101
00:07:15.600 --> 00:07:17.020
It's not growing outside, right?

102
00:07:17.020 --> 00:07:19.650
It's gonna keep growing from this root.

103
00:07:19.650 --> 00:07:20.150
&gt;&gt; off screen male: Yeah.

104
00:07:21.904 --> 00:07:25.310
&gt;&gt; Bianca Gandolfo: Right, from this root,
it's gonna grow inside this children.

105
00:07:25.310 --> 00:07:26.960
It's gonna be nested in there somewhere.

106
00:07:31.216 --> 00:07:36.158
&gt;&gt; Bianca Gandolfo: And then we could
add this entire tree as a child

107
00:07:36.158 --> 00:07:38.070
to another tree.

108
00:07:39.260 --> 00:07:41.650
And we would just be putting
it into their children array.

109
00:07:43.090 --> 00:07:43.990
Then it gets really crazy.

110
00:07:46.643 --> 00:07:50.806
&gt;&gt; Bianca Gandolfo: Cool, but
we know this is recursive because we

111
00:07:50.806 --> 00:07:54.560
see the same pattern over and over again.

112
00:07:54.560 --> 00:08:00.870
And when you think,
nested data structure, same pattern,

113
00:08:00.870 --> 00:08:05.710
your mind should be thinking,
this is a recursive algorithm, yeah?

114
00:08:07.240 --> 00:08:11.530
Cool, reflections on our tree?

115
00:08:14.235 --> 00:08:16.010
&gt;&gt; off screen male: Well,
I just had a quick question.

116
00:08:16.010 --> 00:08:17.731
&gt;&gt; Bianca Gandolfo: Yeah.
&gt;&gt; off screen male: You said if you don't

117
00:08:17.731 --> 00:08:21.254
put return child,
then you can't chain them.

118
00:08:21.254 --> 00:08:23.290
&gt;&gt; Bianca Gandolfo: Mm-hm.

119
00:08:23.290 --> 00:08:27.834
&gt;&gt; off screen male: So that does mean
you'd have to say branch1 dot, or you

120
00:08:27.834 --> 00:08:34.223
would have to create a variable for the
one that contains six, and then add it?

121
00:08:34.223 --> 00:08:36.040
Is that what you would have to do, or?

122
00:08:36.040 --> 00:08:38.796
&gt;&gt; Bianca Gandolfo: Yeah,
you'd have to somehow access,

123
00:08:38.796 --> 00:08:42.559
you'd have to save a reference
to this node, right?

124
00:08:42.559 --> 00:08:44.038
And if you don't return it,

125
00:08:44.038 --> 00:08:48.660
that means you're gonna have to traverse
through the data structure and find it.

126
00:08:48.660 --> 00:08:49.190
&gt;&gt; off screen male: I see.

127
00:08:49.190 --> 00:08:49.690
&gt;&gt; Bianca Gandolfo: Yeah.

128
00:08:51.710 --> 00:08:52.995
&gt;&gt; off screen male: Okay.
&gt;&gt; Bianca Gandolfo: Unless you're saving

129
00:08:52.995 --> 00:08:53.622
it somewhere.

130
00:08:53.622 --> 00:08:54.589
You'd have to save it somewhere.

131
00:08:56.870 --> 00:09:01.498
So what that would look like is some
recursive loop searching for the value 6.

132
00:09:01.498 --> 00:09:09.074
Yeah, okay, reflections?

133
00:09:12.772 --> 00:09:14.230
&gt;&gt; Bianca Gandolfo: Tell me about trees.

134
00:09:14.230 --> 00:09:15.530
What's your favorite thing about a tree?

135
00:09:19.130 --> 00:09:21.110
&gt;&gt; off screen male: They're leafy.

136
00:09:22.200 --> 00:09:22.760
&gt;&gt; Bianca Gandolfo: What's that?

137
00:09:22.760 --> 00:09:23.820
&gt;&gt; off screen male: They're leafy.

138
00:09:23.820 --> 00:09:26.930
&gt;&gt; Bianca Gandolfo: They're leafy,
leafy and green.

139
00:09:30.615 --> 00:09:34.940
&gt;&gt; Bianca Gandolfo: What else, anything?

140
00:09:34.940 --> 00:09:38.977
Did you guys find that when you approach
this data structure that you had

141
00:09:38.977 --> 00:09:43.500
the same blanking sensation from
a linked list or a stack and queue?

142
00:09:43.500 --> 00:09:44.980
&gt;&gt; off screen male: To me,
it just makes much more sense,

143
00:09:44.980 --> 00:09:46.200
for some reason
&gt;&gt; Bianca Gandolfo: Yeah?

144
00:09:46.200 --> 00:09:46.940
&gt;&gt; off screen male: Yeah.

145
00:09:46.940 --> 00:09:49.390
&gt;&gt; Bianca Gandolfo: Cool,
makes more sense.

146
00:09:49.390 --> 00:09:52.650
&gt;&gt; off screen male: I think it's
probably because most, I don't know,

147
00:09:54.050 --> 00:09:58.040
operating systems use the tree,
right, with the folders.

148
00:09:58.040 --> 00:09:59.220
&gt;&gt; Bianca Gandolfo: Yeah.
&gt;&gt; off screen male: Folder tree kinda

149
00:09:59.220 --> 00:10:02.260
things, so you're used to that structure,
I guess, I don't know.

150
00:10:02.260 --> 00:10:04.411
&gt;&gt; Bianca Gandolfo: Yeah, maybe,
but I feel like stacks and

151
00:10:04.411 --> 00:10:06.260
queues are pretty common as well.

152
00:10:06.260 --> 00:10:11.145
Linked list, maybe a little less
common that we recognize it, at least.

153
00:10:11.145 --> 00:10:11.960
&gt;&gt; off screen male: Mm-hm.

154
00:10:11.960 --> 00:10:15.152
&gt;&gt; Bianca Gandolfo: Yeah, yeah, and
we use trees a lot for frontend,

155
00:10:15.152 --> 00:10:16.376
our frontend DOM.

156
00:10:16.376 --> 00:10:17.407
&gt;&gt; off screen male: Mm-hm.

157
00:10:17.407 --> 00:10:18.575
&gt;&gt; Bianca Gandolfo: Yeah.

158
00:10:18.575 --> 00:10:22.762
&gt;&gt; off screen male: Your lists,
linked lists, you said, or

159
00:10:22.762 --> 00:10:26.800
trees, what's more common use?

160
00:10:26.800 --> 00:10:28.980
&gt;&gt; Bianca Gandolfo: What's more
commonly used, a linked list or a tree?

161
00:10:28.980 --> 00:10:29.886
&gt;&gt; off screen male: Yeah.

162
00:10:29.886 --> 00:10:32.400
&gt;&gt; Bianca Gandolfo: I don't know.

163
00:10:32.400 --> 00:10:36.894
I think that trees, you'll be working,
as a frontend engineer, you're gonna be

164
00:10:36.894 --> 00:10:41.770
working with trees a lot more than
a linked list, for sure, in JavaScript.

165
00:10:41.770 --> 00:10:43.471
Yeah, I can say that.

166
00:10:43.471 --> 00:10:44.451
&gt;&gt; off screen male: JSON.

167
00:10:44.451 --> 00:10:47.351
&gt;&gt; Bianca Gandolfo: Yeah, mm-hm.

168
00:10:47.351 --> 00:10:48.050
&gt;&gt; off screen male: Would
be a good example.

169
00:10:48.050 --> 00:10:49.775
&gt;&gt; Bianca Gandolfo: Yeah,
doesn't this look a lot like JSON?

170
00:10:49.775 --> 00:10:50.560
&gt;&gt; off screen male: Mm-hm.

171
00:10:50.560 --> 00:10:51.644
&gt;&gt; Bianca Gandolfo: Some
nested data structure.

172
00:10:51.644 --> 00:10:55.190
Yeah, absolutely.

173
00:10:55.190 --> 00:10:55.980
I like that connection.

174
00:10:58.011 --> 00:10:58.511
&gt;&gt; Bianca Gandolfo: Cool?

175
00:11:04.233 --> 00:11:06.348
&gt;&gt; Bianca Gandolfo: All right, so
it makes more sense that a linked list,

176
00:11:06.348 --> 00:11:07.010
queue or stack.

177
00:11:08.010 --> 00:11:08.930
Very interesting.

178
00:11:08.930 --> 00:11:12.820
I have a theory that it makes more sense

179
00:11:12.820 --> 00:11:15.760
because perhaps you've
seen the linked list.

180
00:11:17.200 --> 00:11:22.600
And now you have something to connect it
to, so sort of scaffolding those ideas.

181
00:11:22.600 --> 00:11:25.940
That's my sense, but I could be wrong.

182
00:11:26.990 --> 00:11:28.630
&gt;&gt; off screen male: Well, I didn't think
about the DOM until you said it, but

183
00:11:28.630 --> 00:11:29.920
that might be part of it too.

184
00:11:29.920 --> 00:11:30.730
&gt;&gt; Bianca Gandolfo: Yeah, yeah, yeah.

185
00:11:30.730 --> 00:11:32.230
&gt;&gt; off screen male: Just used to that, so.

186
00:11:32.230 --> 00:11:32.880
&gt;&gt; Bianca Gandolfo: Yeah.
&gt;&gt; off screen male: But, yeah.

187
00:11:32.880 --> 00:11:33.780
&gt;&gt; Bianca Gandolfo: Traversing the DOM.

188
00:11:35.590 --> 00:11:36.090
Cool.

