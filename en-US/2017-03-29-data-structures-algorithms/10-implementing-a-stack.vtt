WEBVTT

1
00:00:00.080 --> 00:00:03.867
&gt;&gt; Bianca: What I did is I just copied
from that slide into my text editor here.

2
00:00:03.867 --> 00:00:08.719
And we are going to live
code together because

3
00:00:08.719 --> 00:00:12.940
suddenly amnesia happening, right?

4
00:00:12.940 --> 00:00:15.950
Someone needs to tell me how.

5
00:00:15.950 --> 00:00:17.140
How do I fix this?

6
00:00:18.220 --> 00:00:19.660
This push function doesn't work.

7
00:00:21.530 --> 00:00:22.490
How did you make it work?

8
00:00:26.053 --> 00:00:26.700
&gt;&gt; Bianca: Anyone?

9
00:00:26.700 --> 00:00:28.139
Did anyone make it work?

10
00:00:28.139 --> 00:00:29.290
Yeah, Andy?

11
00:00:29.290 --> 00:00:31.056
&gt;&gt; Andy: For just the push?

12
00:00:31.056 --> 00:00:32.019
&gt;&gt; Bianca: Mm-hm.

13
00:00:32.019 --> 00:00:39.190
&gt;&gt; Andy: So
we did this.storage = this.storage.concat.

14
00:00:39.190 --> 00:00:39.738
This is right, isn't it?

15
00:00:39.738 --> 00:00:41.528
Okay, but if there's no comma.

16
00:00:41.528 --> 00:00:44.939
&gt;&gt; [INAUDIBLE]
&gt;&gt; Andy: For

17
00:00:44.939 --> 00:00:49.150
the first argument,
we did a three asterisks string.

18
00:00:49.150 --> 00:00:51.160
Reason that is our delimiter.

19
00:00:51.160 --> 00:00:55.334
And then comma, vowel.

20
00:00:55.334 --> 00:00:57.499
&gt;&gt; Bianca: That's awesome.

21
00:00:57.499 --> 00:00:59.840
All right.

22
00:00:59.840 --> 00:01:00.790
So here we are.

23
00:01:01.970 --> 00:01:06.780
Every time that we push,
we're going to push triple asterisks.

24
00:01:06.780 --> 00:01:08.750
I can never say that word.

25
00:01:08.750 --> 00:01:11.500
&gt;&gt; [LAUGH] [LAUGH]
&gt;&gt; Bianca: And then the value,

26
00:01:11.500 --> 00:01:16.320
and so those are the world where
our stack is now just a series of

27
00:01:16.320 --> 00:01:20.285
words separated by a triple asterisks.

28
00:01:20.285 --> 00:01:22.480
[LAUGH] Yeah?

29
00:01:22.480 --> 00:01:23.105
You're good?

30
00:01:23.105 --> 00:01:25.880
Cool.
All right, so

31
00:01:25.880 --> 00:01:31.110
given that, how do we pop?

32
00:01:32.210 --> 00:01:34.160
This is my mischievous look.

33
00:01:35.440 --> 00:01:36.040
How can we pop?

34
00:01:40.440 --> 00:01:45.290
What's the most easiest
way that you can think of?

35
00:01:46.290 --> 00:01:49.336
&gt;&gt; Andy: How we did it,
I don't know if it was the easiest.

36
00:01:49.336 --> 00:01:49.970
&gt;&gt; Bianca: [LAUGH] Sure.

37
00:01:49.970 --> 00:01:54.458
&gt;&gt; Andy: So
first I did a var return string equals

38
00:01:54.458 --> 00:02:01.221
this.storage.slice
&gt;&gt; Andy: And

39
00:02:01.221 --> 00:02:08.170
then for the argument in there,
this.storage.lastIndexOf.

40
00:02:08.170 --> 00:02:09.310
&gt;&gt; Bianca: .last, like this?

41
00:02:10.820 --> 00:02:12.600
&gt;&gt; Andy: lastIndexOf.

42
00:02:12.600 --> 00:02:13.650
&gt;&gt; Bianca: Is that a thing?
&gt;&gt; Andy: Mm-hm.

43
00:02:13.650 --> 00:02:14.895
&gt;&gt; Bianca: Yes.
Yes, it is.

44
00:02:14.895 --> 00:02:17.295
&gt;&gt; [LAUGH]
&gt;&gt; Andy: And then for the arguments for

45
00:02:17.295 --> 00:02:20.358
that, we give it a triple asterisks.

46
00:02:20.358 --> 00:02:21.988
&gt;&gt; Bianca: Like this?

47
00:02:21.988 --> 00:02:25.710
Ooh.

48
00:02:25.710 --> 00:02:30.780
&gt;&gt; Andy: Yep, but
then in between the two return parens

49
00:02:30.780 --> 00:02:35.235
you have, do a +3 to get, not a comma.

50
00:02:35.235 --> 00:02:37.576
&gt;&gt; Bianca: +, I see,
cuz you're doing math in there.

51
00:02:37.576 --> 00:02:38.453
&gt;&gt; Andy: Cuz we're taking
a slice that start.

52
00:02:38.453 --> 00:02:39.610
We want it at [INAUDIBLE].

53
00:02:39.610 --> 00:02:43.280
&gt;&gt; Bianca: So
this.storage at lastIndexOf, yeah, +3.

54
00:02:43.280 --> 00:02:44.110
Got it.

55
00:02:44.110 --> 00:02:47.160
Following loud and clear.

56
00:02:47.160 --> 00:02:51.983
&gt;&gt; Andy: And then, the next line,
we set this .storage

57
00:02:51.983 --> 00:02:55.974
equal to this.storage.substring.

58
00:02:57.450 --> 00:03:02.150
&gt;&gt; Andy: For the first argument,
we gave it 0.

59
00:03:03.200 --> 00:03:07.430
And the second one, we did this
.storage.lastIndexof then our delimiter.

60
00:03:17.810 --> 00:03:20.340
&gt;&gt; Andy: And then, last but
not least, we returned the string.

61
00:03:20.340 --> 00:03:21.019
&gt;&gt; Bianca: Cool.

62
00:03:22.860 --> 00:03:23.420
&gt;&gt; Andy: That's a new line.

63
00:03:25.610 --> 00:03:26.110
&gt;&gt; Bianca: Awesome.

64
00:03:27.250 --> 00:03:31.090
Cool, so let's do some pseudocode
just to walk us through here.

65
00:03:31.090 --> 00:03:35.365
So the first thing we're gonna
do is we're just gonna slice off

66
00:03:35.365 --> 00:03:42.661
the last characters

67
00:03:42.661 --> 00:03:47.650
up until the asterisks, right?

68
00:03:47.650 --> 00:03:50.606
That's essentially what we're doing there.

69
00:03:50.606 --> 00:03:54.840
Then, so that's how we're saving
the thing that we're gonna return, right?

70
00:03:54.840 --> 00:03:57.970
So when we pop, we're gonna remove it,
but we also wanna return that value.

71
00:03:57.970 --> 00:03:59.060
That's the interface of pop.

72
00:04:00.150 --> 00:04:06.453
So the next thing we wanna do is actually,
what are we doing here?

73
00:04:06.453 --> 00:04:13.614
[SOUND] Yeah, and
then this is actually slicing off,

74
00:04:13.614 --> 00:04:18.285
so this is actually updating the new

75
00:04:18.285 --> 00:04:23.120
stack without the last item, yeah?

76
00:04:23.120 --> 00:04:23.978
&gt;&gt; Andy: On line 10,

77
00:04:23.978 --> 00:04:29.140
is that actually finding the index of the
last item before it's actually slicing it?

78
00:04:31.560 --> 00:04:34.302
&gt;&gt; Bianca: So the order of operation
is whatever is happening inside of this

79
00:04:34.302 --> 00:04:35.991
parenthesis, is gonna happen first.

80
00:04:35.991 --> 00:04:37.080
Yup.

81
00:04:37.080 --> 00:04:37.580
&gt;&gt; Andy: Yup.

82
00:04:39.710 --> 00:04:42.918
&gt;&gt; Bianca: So
then we return the last item.

83
00:04:42.918 --> 00:04:44.400
&gt;&gt; Andy: Substring.

84
00:04:45.920 --> 00:04:49.248
&gt;&gt; Speaker 3: I'm realizing as I watch you
do it, it might have been better to do

85
00:04:49.248 --> 00:04:53.305
storage.lastIndex, like a storage,
storage.lastIndexof as a variable in

86
00:04:53.305 --> 00:04:57.376
the beginning since we are calling it
twice, and I could just use the variable.

87
00:04:57.376 --> 00:04:58.930
&gt;&gt; Bianca: Yeah, yeah.
So some optimizations,

88
00:04:58.930 --> 00:05:02.960
maybe is just saving that as a variable so
that we can refer to it later.

89
00:05:04.160 --> 00:05:07.670
Also we could name it something that might
be more meaningful to us, so that when

90
00:05:07.670 --> 00:05:12.900
someone comes after us, they'll be like,
what does this sort, that lastIndexof,

91
00:05:12.900 --> 00:05:17.558
it could be last eliminator,
whatever you wanna call it.

92
00:05:17.558 --> 00:05:22.090
Cool, all right.

93
00:05:22.090 --> 00:05:23.170
So what do we think?

94
00:05:23.170 --> 00:05:25.610
How was this process for you?

95
00:05:25.610 --> 00:05:28.737
Even if you didn't finish,
what was that like?

96
00:05:31.090 --> 00:05:32.678
&gt;&gt; Bianca: That was good?

97
00:05:32.678 --> 00:05:35.035
&gt;&gt; [INAUDIBLE]
&gt;&gt; Andy: Yeah, it's cool.

98
00:05:35.035 --> 00:05:35.670
&gt;&gt; Bianca: Yeah?

99
00:05:35.670 --> 00:05:38.413
What did you find challenging about it?

100
00:05:38.413 --> 00:05:41.209
As I heard, like this is mean-
&gt;&gt; [LAUGH] [LAUGH]

101
00:05:41.209 --> 00:05:42.990
&gt;&gt; Bianca: From some people.

102
00:05:42.990 --> 00:05:43.490
It's challenging.

103
00:05:47.505 --> 00:05:49.830
&gt;&gt; Andy: I don't usually
work with JavaScript.

104
00:05:49.830 --> 00:05:54.060
So I knew what I wanted to do,
but not exactly how to do it.

105
00:05:54.060 --> 00:05:56.070
&gt;&gt; Bianca: Yeah.
&gt;&gt; Andy: So that was a challenge.

106
00:05:56.070 --> 00:05:56.632
&gt;&gt; Bianca: Yeah, yeah, totally.

107
00:05:56.632 --> 00:05:57.244
Cool.

108
00:05:57.244 --> 00:06:00.650
What else?

109
00:06:00.650 --> 00:06:03.862
&gt;&gt; Speaker 4: Used to using built-in
functions, and just having them work.

110
00:06:03.862 --> 00:06:09.400
And so to actually design the structure
of making design decisions.

111
00:06:09.400 --> 00:06:10.470
Which you usually have to do.

112
00:06:11.620 --> 00:06:12.430
&gt;&gt; Bianca: Yeah, yeah, yeah, so

113
00:06:12.430 --> 00:06:16.520
actually implementing underneath
of how this is working.

114
00:06:16.520 --> 00:06:17.900
This is what this class is gonna be.

115
00:06:17.900 --> 00:06:21.952
You're gonna be like, that's kind of a
thing I've seen before, except it came for

116
00:06:21.952 --> 00:06:24.073
free out of the box, and
I took it for granted.

117
00:06:24.073 --> 00:06:27.980
And now, no,
now suddenly I have to write it.

118
00:06:27.980 --> 00:06:30.430
And it's just like this.

119
00:06:30.430 --> 00:06:35.361
It's all a process, and
it's your approach, right?

120
00:06:35.361 --> 00:06:40.130
And this is just forever a taste
of what this is gonna be like.

121
00:06:40.130 --> 00:06:44.064
We're gonna be throwing something a little
bit abstract, and we need to implement it.

122
00:06:44.064 --> 00:06:46.456
And we get to design it, right?

123
00:06:46.456 --> 00:06:51.150
And then later we'll talk about
how to optimize and all that.

124
00:06:51.150 --> 00:06:55.080
But this is just a first step in
designing our own data structure, right?

125
00:06:55.080 --> 00:06:59.680
Just like we said,
we could have used an array, absolutely.

126
00:06:59.680 --> 00:07:01.274
But a lot of these things don't come for
free, right?

127
00:07:02.300 --> 00:07:04.330
We don't have trees, for

128
00:07:04.330 --> 00:07:09.200
example, graphs/trees/linked lists,
anything like that.

129
00:07:09.200 --> 00:07:10.090
We don't get that for free.

130
00:07:10.090 --> 00:07:11.658
We have to implement them.

131
00:07:11.658 --> 00:07:13.718
And so, here we are doing that.

132
00:07:13.718 --> 00:07:17.818
So if you didn't get a chance to finish
this, I recommend, over the lunch,

133
00:07:17.818 --> 00:07:20.758
take a stab at finishing this up, yeah?

134
00:07:20.758 --> 00:07:22.528
Without looking at the answers.

135
00:07:22.528 --> 00:07:23.028
Great.

