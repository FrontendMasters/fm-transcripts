WEBVTT

1
00:00:00.260 --> 00:00:02.250
&gt;&gt; Bianca Gandolfo: What do we
know about depth-first search?

2
00:00:02.250 --> 00:00:06.970
It's the most awesome search.
&gt;&gt; Speaker 2: It's my favorite, certainly,

3
00:00:06.970 --> 00:00:09.830
but it's where you search
through everything and

4
00:00:09.830 --> 00:00:12.720
you go down first.
&gt;&gt; Bianca Gandolfo: Yeah, yeah.

5
00:00:12.720 --> 00:00:17.800
Exactly, so you go all the way down,
down, down, into the depths.

6
00:00:17.800 --> 00:00:20.470
And then, you go up, up, up, and

7
00:00:20.470 --> 00:00:24.531
then to the side.
&gt;&gt; Bianca Gandolfo: And

8
00:00:24.531 --> 00:00:26.294
I think I have, here we go.

9
00:00:26.294 --> 00:00:30.590
It probably makes more
sense than my description.

10
00:00:32.470 --> 00:00:35.610
All right, so
we call this graph traversing.

11
00:00:37.740 --> 00:00:41.160
Here is an example of depth-first search,
so we go all the way down to the bottom,

12
00:00:41.160 --> 00:00:45.530
and then we come up, and
then we go to the other side.

13
00:00:48.780 --> 00:00:53.370
So why, we can find paths,
cycles, connectivity and more.

14
00:00:53.370 --> 00:00:56.857
This is like, I don't know,
this is where the magic is,

15
00:00:56.857 --> 00:01:00.280
with paths and cycles for graphs.

16
00:01:00.280 --> 00:01:01.339
Lots of cool stuff that
you can do with that.

17
00:01:01.339 --> 00:01:05.758
Once you really master these
fundamentals that we're going over in

18
00:01:05.758 --> 00:01:10.486
this first couple days, it's gonna arm
you with a lot of tools to apply to

19
00:01:10.486 --> 00:01:15.740
some more advanced algorithms that
can really open up some cool stuff.

20
00:01:15.740 --> 00:01:18.260
For your life,
I don't know if you're into that.

21
00:01:18.260 --> 00:01:20.820
For your whole life will
be changed forever.

22
00:01:20.820 --> 00:01:24.610
[LAUGH] I might be exaggerating
a little bit, but.

23
00:01:26.450 --> 00:01:28.640
Or not, or maybe I'm not, I don't know,

24
00:01:28.640 --> 00:01:31.520
maybe it gets you a really good job.
&gt;&gt; Speaker 3: Maybe you're underselling

25
00:01:31.520 --> 00:01:32.020
it.
&gt;&gt; Bianca Gandolfo: Yeah,

26
00:01:32.020 --> 00:01:34.040
it's probably what I'm doing.

27
00:01:35.300 --> 00:01:37.880
Cool, so one thing that

28
00:01:39.570 --> 00:01:44.150
I want to talk about is this explored,
visited,

29
00:01:44.150 --> 00:01:49.960
undiscovered concept that we didn't
really talk about in trees as much.

30
00:01:51.020 --> 00:01:54.920
And this is one way that
people describe and

31
00:01:54.920 --> 00:02:01.020
represent in code whether we need to
keep exploring down a path, right?

32
00:02:01.020 --> 00:02:05.140
Because in a tree,
there's a natural termination, right?

33
00:02:05.140 --> 00:02:08.840
And that's not necessarily true with
a graph, because they're cycles.

34
00:02:08.840 --> 00:02:12.556
And so we have to flag if
something has been explored.

35
00:02:12.556 --> 00:02:19.424
Meaning that you have looked
at all of the adjacent nodes,

36
00:02:19.424 --> 00:02:22.940
or if it's visited, right?

37
00:02:22.940 --> 00:02:27.864
So once we go from A to B,
B is now visited, A is visited but

38
00:02:27.864 --> 00:02:32.588
not explored,
because we haven't explored all of its

39
00:02:32.588 --> 00:02:37.680
adjacent,
&gt;&gt; Bianca Gandolfo: Nodes, vertices,

40
00:02:37.680 --> 00:02:41.906
nodes, vertices.
&gt;&gt; Bianca Gandolfo: Cool, undiscovered

41
00:02:41.906 --> 00:02:46.743
means that we haven't gotten there yet.
&gt;&gt; Bianca Gandolfo: And so

42
00:02:46.743 --> 00:02:51.574
you can use these flags in your
code to help keep track on where

43
00:02:51.574 --> 00:02:55.422
you are
&gt;&gt; Bianca Gandolfo: Or

44
00:02:55.422 --> 00:02:59.858
you can just use one or two of them,
you don't have to use all three with some,

45
00:02:59.858 --> 00:03:02.260
it depends on which solution you look at.

