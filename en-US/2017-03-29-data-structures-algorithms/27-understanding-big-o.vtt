WEBVTT

1
00:00:00.280 --> 00:00:02.780
&gt;&gt; Bianca Gandolfo: Here's
a number of operations, so for

2
00:00:02.780 --> 00:00:04.888
the first one, we have n squared.

3
00:00:04.888 --> 00:00:09.939
We have two nested loops, where we're
comparing all numbers to each other, yeah?

4
00:00:11.420 --> 00:00:15.634
&gt;&gt; Bianca Gandolfo: Second one, we have
2n, where we just find the minimum and

5
00:00:15.634 --> 00:00:20.032
maximum, we loop through it once,
and have two operations.

6
00:00:29.937 --> 00:00:33.417
&gt;&gt; Bianca Gandolfo: So,
n times n equals 2n, or

7
00:00:33.417 --> 00:00:37.723
equals n,
&gt;&gt; Bianca Gandolfo: Squared,

8
00:00:37.723 --> 00:00:40.921
thank you, 2n equals n2.

9
00:00:50.946 --> 00:00:54.375
&gt;&gt; Bianca Gandolfo: So it's just n,
so 2n is 2 times n and

10
00:00:54.375 --> 00:00:59.427
n squared is n times n,
that's the difference, yeah.

11
00:01:01.496 --> 00:01:02.000
&gt;&gt; Bianca Gandolfo: Cool.

12
00:01:03.350 --> 00:01:05.791
&gt;&gt; Speaker 2: Somebody's asking
you to explain 2n one more time?

13
00:01:05.791 --> 00:01:08.300
&gt;&gt; Bianca Gandolfo: Yeah, sure so
I can explain 2n one more time.

14
00:01:09.350 --> 00:01:13.012
So, let's go to that slide.

15
00:01:14.962 --> 00:01:17.955
&gt;&gt; Bianca Gandolfo: So here,
as we're looping through,

16
00:01:17.955 --> 00:01:20.112
we can write out some code.

17
00:01:28.790 --> 00:01:30.421
&gt;&gt; Bianca Gandolfo: Right,
something like this,

18
00:01:30.421 --> 00:01:33.280
I'm not gonna type out the whole thing.

19
00:01:33.280 --> 00:01:38.382
We have to loop through it,
and then you have to say

20
00:01:38.382 --> 00:01:44.169
something like if,
&gt;&gt; Bianca Gandolfo: Let's

21
00:01:44.169 --> 00:01:48.800
just say like, is max,
something like that, is min.

22
00:01:51.573 --> 00:01:54.325
&gt;&gt; Bianca Gandolfo: So
as we're looping through, so

23
00:01:54.325 --> 00:01:57.640
i is the length of the hotels, right?

24
00:01:57.640 --> 00:02:02.626
That's our n, it's also the number
of columns that we have here.

25
00:02:04.183 --> 00:02:10.141
&gt;&gt; Bianca Gandolfo: As
we're going through we're

26
00:02:10.141 --> 00:02:16.334
doing two operations per loop.

27
00:02:16.334 --> 00:02:17.096
So per hotel, we're doing two operations.

28
00:02:19.506 --> 00:02:21.292
&gt;&gt; Bianca Gandolfo: So
for example, if we have,

29
00:02:23.287 --> 00:02:26.899
&gt;&gt; Bianca Gandolfo: 10 hotels in our list,

30
00:02:26.899 --> 00:02:32.922
we're doing a total of 20 operations.

31
00:02:35.196 --> 00:02:36.940
&gt;&gt; Bianca Gandolfo: And so that's 2n.

32
00:02:37.950 --> 00:02:42.667
And you can check that by expanding
out this graph or this table.

33
00:02:42.667 --> 00:02:46.312
And counting or
multiplying the number of boxes in here.

34
00:02:48.960 --> 00:02:53.071
&gt;&gt; Bianca Gandolfo: So for every time
we add one more unit to our hotels, 2n,

35
00:02:53.071 --> 00:02:56.936
it's gonna give us two more
things that we have to do.

36
00:03:00.318 --> 00:03:02.639
&gt;&gt; Bianca Gandolfo: Yeah, okay.

37
00:03:06.033 --> 00:03:08.401
&gt;&gt; Bianca Gandolfo: Good,
anymore questions about that?

38
00:03:10.391 --> 00:03:14.600
&gt;&gt; Bianca Gandolfo: So
here we're just thinking about,

39
00:03:14.600 --> 00:03:19.907
how does the work increase
as our input grows.

40
00:03:19.907 --> 00:03:21.548
That is the speed of our algorithm.

41
00:03:25.626 --> 00:03:32.478
&gt;&gt; Bianca Gandolfo: Cool, great,
&gt;&gt; Bianca Gandolfo: Awesome.

42
00:03:32.478 --> 00:03:36.234
So 2n we're just looping through when
we're checking for the minimum or maximum.

43
00:03:38.398 --> 00:03:41.200
&gt;&gt; Bianca Gandolfo: This should be 2,
we have a sorted list,

44
00:03:41.200 --> 00:03:43.614
and we'll find the first and last.

45
00:03:45.875 --> 00:03:46.540
&gt;&gt; Bianca Gandolfo: Cool?

46
00:03:48.585 --> 00:03:50.810
&gt;&gt; Bianca Gandolfo: So what does
that mean in computer science terms?

47
00:03:50.810 --> 00:03:53.517
So we've been talking about big O,
big O, big O,

48
00:03:53.517 --> 00:03:57.012
you might have seen them in some
of the solutions, what is this?

49
00:03:57.012 --> 00:04:00.260
So anything that is like a nested for

50
00:04:00.260 --> 00:04:04.807
loop or
has any sort of n squared time complexity,

51
00:04:04.807 --> 00:04:08.830
is gonna be quadratic time or
O of n squared.

52
00:04:10.430 --> 00:04:12.460
And that's the notation,
that's how we talk about it.

53
00:04:13.670 --> 00:04:18.550
Cool, and then for
2n we call that O of n, and

54
00:04:18.550 --> 00:04:21.388
we call that linear time.

55
00:04:21.388 --> 00:04:24.334
We drop any non significant digits, so

56
00:04:24.334 --> 00:04:29.349
if it's 2n it's just n we just drop it and
these are estimations.

57
00:04:29.349 --> 00:04:33.590
Right we're not calculating
the exact time complexity.

58
00:04:33.590 --> 00:04:38.773
Anything that doesn't have an n,
is gonna be considered constant.

59
00:04:38.773 --> 00:04:41.464
So it's the same no matter
how your dataset grows,

60
00:04:41.464 --> 00:04:43.912
it's gonna be the same
amount of operations.

61
00:04:47.341 --> 00:04:48.410
&gt;&gt; Bianca Gandolfo: Cool, awesome.

62
00:04:48.410 --> 00:04:55.746
And so here's sort of a range of
the different time complexities,

63
00:04:55.746 --> 00:04:59.938
with their names and their notation.

64
00:04:59.938 --> 00:05:02.778
So constant time is gonna
be the fastest one,

65
00:05:02.778 --> 00:05:06.217
logarithmic time which we'll
talk about in a second,

66
00:05:06.217 --> 00:05:11.180
this is second fastest, then we have
linear, quadratic, and exponential.

67
00:05:11.180 --> 00:05:16.636
So exponential is some constant to the n,
and that super slow.

68
00:05:16.636 --> 00:05:19.902
Anything that's above linear is considered
like a bad algorithm. Like you don't wanna

69
00:05:19.902 --> 00:05:24.982
be in quadratic or exponential time.

70
00:05:24.982 --> 00:05:29.126
&gt;&gt; Bianca Gandolfo: Anything
linear below is fine, of course,

71
00:05:29.126 --> 00:05:34.166
there's more details to be
filled in there depending

72
00:05:34.166 --> 00:05:39.209
on your data set and
what you need to be doing, right?

73
00:05:39.209 --> 00:05:41.027
But that's sort of a generalization.

74
00:05:41.027 --> 00:05:44.725
What about O of n log n,
we'll get to that later today.

75
00:05:49.072 --> 00:05:51.002
&gt;&gt; Speaker 2: Just curious
where the O comes from?

76
00:05:51.002 --> 00:05:55.320
&gt;&gt; Bianca Gandolfo: That is
a good question, I'm not sure.

77
00:05:55.320 --> 00:05:55.860
&gt;&gt; Speaker 2: Okay.

78
00:05:55.860 --> 00:05:56.766
Order?

79
00:05:56.766 --> 00:05:57.550
&gt;&gt; Bianca Gandolfo: What's that?

80
00:05:57.550 --> 00:05:58.741
&gt;&gt; Speaker 2: Order of one?

81
00:05:58.741 --> 00:06:01.460
&gt;&gt; Bianca Gandolfo: No,
they're mostly Greek letters.

82
00:06:01.460 --> 00:06:05.532
So there's big theta, there's big O,
big omega, little theta,

83
00:06:05.532 --> 00:06:07.756
there's a bunch of different ones.

84
00:06:07.756 --> 00:06:09.810
I'm not sure where the O comes from, yeah.

85
00:06:09.810 --> 00:06:14.690
I have a link at the end of the slide
deck that has more information about

86
00:06:14.690 --> 00:06:16.290
the different kinds of notation.

87
00:06:16.290 --> 00:06:17.520
&gt;&gt; Speaker 2: I think it does stand for

88
00:06:17.520 --> 00:06:21.034
order the the Greek letters
were introduced later by.

89
00:06:21.034 --> 00:06:24.234
&gt;&gt; Bianca Gandolfo: Really,
okay, cool, thank you.

90
00:06:24.234 --> 00:06:27.112
&gt;&gt; Speaker 2: The O comes
from math of course.

91
00:06:27.112 --> 00:06:30.974
&gt;&gt; Bianca Gandolfo: Love to have
a mathematician in the audience,

92
00:06:30.974 --> 00:06:32.958
that's great, cool.

93
00:06:32.958 --> 00:06:37.711
All right,
wow is this landing with everyone?

94
00:06:39.730 --> 00:06:42.647
&gt;&gt; Speaker 2: It's good, I've always
wanted to know what those things mean.

95
00:06:42.647 --> 00:06:47.377
&gt;&gt; Bianca Gandolfo: Yeah, they sound a lot
more scary than what it actually looks

96
00:06:47.377 --> 00:06:51.197
like, when you kinda break
it down in to a table.

97
00:06:53.465 --> 00:06:57.430
&gt;&gt; Bianca Gandolfo: Cool, can someone
explain to me in their own words,

98
00:07:02.406 --> 00:07:03.374
&gt;&gt; Bianca Gandolfo: This table.

99
00:07:04.501 --> 00:07:07.035
&gt;&gt; Bianca Gandolfo: Or this part,
not the algorithm part.

100
00:07:10.672 --> 00:07:17.516
&gt;&gt; Bianca Gandolfo: Let's see, let me ask.

101
00:07:17.516 --> 00:07:18.319
Let me ask Rosie.

102
00:07:19.615 --> 00:07:25.020
&gt;&gt; Bianca Gandolfo: Could you explain to
me one of these rows in your own words?

103
00:07:26.120 --> 00:07:30.836
Like how does the big O in the name

104
00:07:30.836 --> 00:07:36.259
relate to the number of operations?

105
00:07:43.253 --> 00:07:44.609
&gt;&gt; Rosie: Going-
&gt;&gt; Bianca Gandolfo: You can phone

106
00:07:44.609 --> 00:07:45.656
a friend, if you want.

107
00:07:45.656 --> 00:07:49.578
&gt;&gt; Rosie: [LAUGH] It's going from lots,
and lots, and

108
00:07:49.578 --> 00:07:55.270
lots operations and
probably running really slow too.

109
00:07:55.270 --> 00:07:59.274
On a very quantifiable number of
operations and run it pretty fast.

110
00:07:59.274 --> 00:08:03.152
&gt;&gt; Bianca Gandolfo: Yeah,
absolutely so constant time,

111
00:08:03.152 --> 00:08:07.150
every time you add another data point or

112
00:08:07.150 --> 00:08:10.914
hundreds or thousands or millions.

113
00:08:10.914 --> 00:08:18.020
It's always going to have to do
three operations, that's it.

114
00:08:18.020 --> 00:08:22.188
It's not related to the size
of the data set, for

115
00:08:22.188 --> 00:08:26.469
linear it's in this case two times,
or one time.

116
00:08:26.469 --> 00:08:30.888
And then quadratic, exponential, right?

117
00:08:32.398 --> 00:08:35.207
&gt;&gt; Speaker 2: I think it is helpful
to think about what happens if you

118
00:08:35.207 --> 00:08:36.893
double the size of the input, so

119
00:08:36.893 --> 00:08:40.180
for quadratic if you double
the input you quadruple the time.

120
00:08:40.180 --> 00:08:43.930
For linear if you double the input
you double the time, and for

121
00:08:43.930 --> 00:08:46.180
consonants if you double
the input it doesn't matter.

122
00:08:46.180 --> 00:08:50.000
&gt;&gt; Bianca Gandolfo: Yeah, yeah absolutely
I like that, I like that, awesome.

123
00:08:51.770 --> 00:08:54.757
Cool, we're gonna keep rolling,
here we are.

124
00:08:54.757 --> 00:08:57.558
You guys have probably
seen this graph before,

125
00:08:57.558 --> 00:09:01.702
have you guys seen this graph before
in computer science, whatever?

126
00:09:01.702 --> 00:09:08.193
This is from bigocheatsheet.com,
I highly recommend that website.

127
00:09:08.193 --> 00:09:14.921
And so this is time, and just like
David was saying, here is the input,

128
00:09:14.921 --> 00:09:20.600
or the space taken,
depending on what you're doing.

129
00:09:20.600 --> 00:09:25.150
So here is constant time, so
no matter how the input grows, so

130
00:09:25.150 --> 00:09:28.430
we can imagine that this is 1,
this is 100, this is 1,000,

131
00:09:28.430 --> 00:09:33.590
this is a million, a bajillion
is probably over here, roughly.

132
00:09:34.940 --> 00:09:37.042
As it grows, the amount of work and

133
00:09:37.042 --> 00:09:41.693
the amount of time that it takes to
complete is going to stay the same, yeah?

134
00:09:43.813 --> 00:09:48.439
&gt;&gt; Bianca Gandolfo: And
then when we have linear it's gong to grow

135
00:09:48.439 --> 00:09:52.715
exactly proportional to the input size.

136
00:09:54.775 --> 00:09:55.390
&gt;&gt; Bianca Gandolfo: See that?

137
00:09:56.940 --> 00:10:01.780
Log in is a pretty interesting one, so

138
00:10:01.780 --> 00:10:07.090
as it grows, the difference decreases.

139
00:10:07.090 --> 00:10:11.251
So obviously the time still gets slower,
but

140
00:10:11.251 --> 00:10:15.860
the difference between
the inputs is decreased.

141
00:10:15.860 --> 00:10:20.598
So you can see here, as this curve,
it curves, curves, curves really fast and

142
00:10:20.598 --> 00:10:23.170
then it kind of starts
to level out almost.

143
00:10:23.170 --> 00:10:25.221
And so that's a pretty good runtime.

144
00:10:28.137 --> 00:10:29.640
&gt;&gt; Bianca Gandolfo: Depending
on where you are.

145
00:10:30.700 --> 00:10:34.777
Cool, and then n squared, we just yeah and

146
00:10:34.777 --> 00:10:39.551
cubed all the way up, and
to the n all the way up.

147
00:10:43.115 --> 00:10:43.939
&gt;&gt; Bianca Gandolfo: Cool.

148
00:10:47.122 --> 00:10:49.460
&gt;&gt; Bianca Gandolfo: Any
observations about this graph?

149
00:10:51.370 --> 00:10:52.450
&gt;&gt; Speaker 2: I have one.

150
00:10:52.450 --> 00:10:55.320
So for
the green one the highest degree, so

151
00:10:55.320 --> 00:10:59.947
if you don't have the O(1) and
O(n) the green line intersects if

152
00:10:59.947 --> 00:11:03.968
the number of data is less than
that where they intersects.

153
00:11:03.968 --> 00:11:07.422
So it's probably better to
use the higher order one

154
00:11:07.422 --> 00:11:09.083
that the-
&gt;&gt; Bianca Gandolfo: Yeah,

155
00:11:09.083 --> 00:11:10.700
that's an awesome observation.

156
00:11:10.700 --> 00:11:15.492
So depending on how much data you have,
&gt;&gt; Bianca Gandolfo: Sometimes it's

157
00:11:15.492 --> 00:11:20.700
faster to use a slower one, or
it doesn't really matter at that point.

158
00:11:20.700 --> 00:11:25.666
So whenever people are asking me these
questions, you need to make sure that

159
00:11:25.666 --> 00:11:30.180
you're not pre-optimizing if you
don't even have that much data.

160
00:11:30.180 --> 00:11:35.437
If you have 10 to 100, or
even just 1,000 data points,

161
00:11:35.437 --> 00:11:40.518
probably is fine to do any of these,
except for maybe this one.

162
00:11:43.675 --> 00:11:47.375
&gt;&gt; Rosie: Is there an example
of the logarithmic situation?

163
00:11:47.375 --> 00:11:49.697
&gt;&gt; Bianca Gandolfo: Yeah, we're gonna
get to that in a second, yeah, yeah.

164
00:11:49.697 --> 00:11:52.431
&gt;&gt; Rosie: Cuz I can imagine what
a quadratic one is or like,

165
00:11:52.431 --> 00:11:54.444
an exponential one, linear rate.

166
00:11:54.444 --> 00:11:57.008
But I don't know what would qualify-
&gt;&gt; Bianca Gandolfo: As logarithmic.

167
00:11:57.008 --> 00:11:58.126
&gt;&gt; Rosie: To be logarithmic.

168
00:11:58.126 --> 00:11:58.978
&gt;&gt; Bianca Gandolfo: Yeah, so

169
00:11:58.978 --> 00:12:04.980
logarithmic happens when you cut
the problem in half every time.

170
00:12:04.980 --> 00:12:07.040
So as it grows, you cut it in half.

171
00:12:07.040 --> 00:12:07.851
&gt;&gt; Rosie: Yeah, okay.
&gt;&gt; Speaker 2: Research.

172
00:12:07.851 --> 00:12:10.600
&gt;&gt; Bianca Gandolfo: Yep.

173
00:12:10.600 --> 00:12:15.258
&gt;&gt; Speaker 2: Is the green line
still considered quadratic?

174
00:12:15.258 --> 00:12:17.466
&gt;&gt; Bianca Gandolfo: This one?

175
00:12:17.466 --> 00:12:18.714
&gt;&gt; Speaker 2: Yeah.

176
00:12:18.714 --> 00:12:24.385
&gt;&gt; Bianca Gandolfo: I'm not quite sure
about that one, that's a funky one.

177
00:12:24.385 --> 00:12:26.960
Mathematician, what say you?

178
00:12:26.960 --> 00:12:29.581
&gt;&gt; Speaker 2: It's the inverse
of a quadratic function, but

179
00:12:29.581 --> 00:12:30.833
it's not quadratic.

180
00:12:30.833 --> 00:12:32.046
Is it like n to the negative 2?

181
00:12:32.046 --> 00:12:33.537
&gt;&gt; Speaker 4: Into the one-half.

182
00:12:33.537 --> 00:12:35.170
&gt;&gt; Speaker 2: Into the one-half.

183
00:12:35.170 --> 00:12:37.589
&gt;&gt; Bianca Gandolfo: Okay yeah,
so that would be exponential.

184
00:12:40.149 --> 00:12:40.779
&gt;&gt; Bianca Gandolfo: Cool.

185
00:12:40.779 --> 00:12:41.479
&gt;&gt; Speaker 2: Does it
not have any negative?

186
00:12:41.479 --> 00:12:44.687
&gt;&gt; Speaker 4: It's a power, but
it's a power, linear is n to the 1.

187
00:12:44.687 --> 00:12:50.634
Square root is n to the one-half, and
then quadratic is n to the 2, right?

188
00:12:50.634 --> 00:12:51.426
&gt;&gt; Bianca Gandolfo: Got it.

189
00:12:51.426 --> 00:12:53.425
&gt;&gt; Speaker 2: So the bigger
the exponent they're the faster.

190
00:12:53.425 --> 00:12:57.450
&gt;&gt; Bianca Gandolfo: Yeah,
cool you won't really see that very often.

