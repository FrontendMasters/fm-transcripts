WEBVTT

1
00:00:00.250 --> 00:00:02.870
&gt;&gt; Bianca Gandolfo: So
let's pseudocode adding a node.

2
00:00:02.870 --> 00:00:08.202
What might a node look like, or a vertex?
&gt;&gt; off screen female: It's another row and

3
00:00:08.202 --> 00:00:11.082
column into our matrix.
&gt;&gt; Bianca Gandolfo: Mm-hm.

4
00:00:11.082 --> 00:00:11.894
&gt;&gt; off screen male: It's one or the other-

5
00:00:11.894 --> 00:00:14.062
&gt;&gt; off screen female: It's just a value.

6
00:00:14.062 --> 00:00:14.795
It's both, right?
&gt;&gt; off screen male: Well no, because

7
00:00:14.795 --> 00:00:16.891
the values are the edges, right?
&gt;&gt; off screen female: It's both of

8
00:00:16.891 --> 00:00:17.454
them.
&gt;&gt; off screen male: But

9
00:00:17.454 --> 00:00:18.486
one or the other, right?

10
00:00:18.486 --> 00:00:21.213
The combination of the two is an edge,

11
00:00:21.213 --> 00:00:26.262
right?
&gt;&gt; off screen male: The pairing of

12
00:00:26.262 --> 00:00:31.624
a column and a row is an edge,

13
00:00:31.624 --> 00:00:34.492
right?
&gt;&gt; Bianca Gandolfo: The pairing of

14
00:00:34.492 --> 00:00:37.635
a column and a row is an edge, yes.

15
00:00:37.635 --> 00:00:41.953
So here, 1 and 2, here's our edge.
&gt;&gt; off screen male: But

16
00:00:41.953 --> 00:00:46.830
just 1 or just 2 is a node?
&gt;&gt; off screen female: It's between

17
00:00:46.830 --> 00:00:48.391
the two.
&gt;&gt; Bianca Gandolfo: So

18
00:00:48.391 --> 00:00:51.180
you're asking, how do we represent this?
&gt;&gt; off screen female: Mm-hm.

19
00:00:51.180 --> 00:00:51.737
&gt;&gt; Bianca Gandolfo: Yeah, we're gonna

20
00:00:51.737 --> 00:00:52.764
get there in a second.
&gt;&gt; off screen male: Okay,

21
00:00:52.764 --> 00:00:53.549
sorry.
&gt;&gt; Bianca Gandolfo: Actually,

22
00:00:53.549 --> 00:00:54.090
we can go there now.

23
00:00:54.090 --> 00:00:56.020
You wanna go there now?

24
00:00:56.020 --> 00:01:00.260
So that's the big question with
the adjacency matrix is so,

25
00:01:00.260 --> 00:01:01.970
depending on the data
that you're representing,

26
00:01:01.970 --> 00:01:05.720
how are we gonna store this and
what value does it hold?

27
00:01:05.720 --> 00:01:11.910
I usually recommend that we use a hashing
algorithm or a hash table to store these

28
00:01:11.910 --> 00:01:18.510
and link it up to a index, right?

29
00:01:18.510 --> 00:01:20.739
So we want whatever our value is.

30
00:01:21.950 --> 00:01:27.983
Or whatever it is, right,
some object maybe, to hash.

31
00:01:27.983 --> 00:01:29.680
Actually, it's probably gonna
be a string on the object.

32
00:01:29.680 --> 00:01:35.780
We want it to hash into some index
that's between maybe some range,

33
00:01:35.780 --> 00:01:38.050
maybe we have an expected
range the size of our graph.

34
00:01:39.600 --> 00:01:44.090
So then, this here is only representing
the relationships, but perhaps for

35
00:01:44.090 --> 00:01:48.441
storing the actual value in an auxiliary
data structure like a hash table,

36
00:01:48.441 --> 00:01:50.532
which we'll talk about tomorrow.

37
00:01:50.532 --> 00:01:54.732
But essentially a hash
table is just an object,

38
00:01:54.732 --> 00:01:57.642
like a-
&gt;&gt; off screen female: Like a reference to

39
00:01:57.642 --> 00:02:02.885
what is where.
&gt;&gt; Bianca Gandolfo: Yeah, so for example,

40
00:02:02.885 --> 00:02:10.263
we have an object with the key 1 and
the value would be whatever our value is,

41
00:02:10.263 --> 00:02:14.900
whatever this node
actually is representing.

42
00:02:14.900 --> 00:02:21.610
If it's a city name, it might be St.
Paul, Minnesota, or whatever.

43
00:02:22.960 --> 00:02:25.390
But we're not gonna store it in an index,
right?

44
00:02:25.390 --> 00:02:31.648
And our adjacency matrix expects,
because they're arrays,

45
00:02:31.648 --> 00:02:36.969
expects a numeric index
that's a positive integer.

46
00:02:36.969 --> 00:02:41.989
So yeah, don't worry,
I'm not going to ask you

47
00:02:41.989 --> 00:02:48.836
to do that.
&gt;&gt; Bianca Gandolfo: Okay,

48
00:02:48.836 --> 00:02:53.689
so we're just gonna assume
all of our nodes have a value

49
00:02:53.689 --> 00:02:57.499
that's an integer that's less than ten.

50
00:02:57.499 --> 00:03:03.213
Just to make our life simple.
&gt;&gt; Bianca Gandolfo: So,

51
00:03:03.213 --> 00:03:07.603
what did we say, how do we add it?
&gt;&gt; off screen male: This is where

52
00:03:07.603 --> 00:03:09.533
I was confused.

53
00:03:09.533 --> 00:03:12.365
Like, do you add it to both,

54
00:03:12.365 --> 00:03:17.293
does it become a column and a row?
&gt;&gt; Bianca Gandolfo: Yeah.

55
00:03:19.544 --> 00:03:20.101
&gt;&gt; off screen female: How do you

56
00:03:20.101 --> 00:03:23.039
decide where to put it?
&gt;&gt; off screen male: Before that,

57
00:03:23.039 --> 00:03:27.664
why do we initialize
in the constructor and

58
00:03:27.664 --> 00:03:30.441
add up on that?
&gt;&gt; Bianca Gandolfo: Why do we initialize

59
00:03:30.441 --> 00:03:33.827
the constructor and what?
&gt;&gt; off screen male: To add inward,

60
00:03:33.827 --> 00:03:39.759
we initialize a value in the constructor?
&gt;&gt; Bianca Gandolfo: Yeah,

61
00:03:39.759 --> 00:03:43.994
so you're saying to add
a note that we should

62
00:03:43.994 --> 00:03:48.405
initialize the constructor?
&gt;&gt; off screen male: As initializing

63
00:03:48.405 --> 00:03:53.029
matrix, we intitialize
a value in the constructor.

64
00:03:53.029 --> 00:03:54.667
&gt;&gt; Bianca Gandolfo: Mm-hm, yeah,

65
00:03:54.667 --> 00:03:59.580
so you're saying instead of adding
the column and a row, when we add a node,

66
00:03:59.580 --> 00:04:02.970
maybe we just initialize
a matrix that's predefined and

67
00:04:02.970 --> 00:04:06.950
we'll just pop it in there.
&gt;&gt; off screen male: Is there one value or

68
00:04:06.950 --> 00:04:08.150
two value?

69
00:04:08.150 --> 00:04:11.522
At the beginning, we initialize and

70
00:04:11.522 --> 00:04:15.113
then add the node on that one?
&gt;&gt; Bianca Gandolfo: So the question

71
00:04:15.113 --> 00:04:19.030
is when we initialize our graph,
are we initializing a value with it?

72
00:04:20.610 --> 00:04:23.543
Yeah, yeah, probably, right?

73
00:04:23.543 --> 00:04:25.740
You'll probably initialize
it with at least one value.

74
00:04:28.854 --> 00:04:30.095
&gt;&gt; Bianca Gandolfo: I can buy that.

75
00:04:30.095 --> 00:04:36.436
It makes sense to me.
&gt;&gt; Bianca Gandolfo: Cool,

76
00:04:36.436 --> 00:04:38.427
so we have a question here.

77
00:04:38.427 --> 00:04:44.168
The question is, how do we add the node?

78
00:04:51.173 --> 00:04:53.817
&gt;&gt; Bianca Gandolfo: What were our
two things that we were gonna say?

79
00:04:53.817 --> 00:04:58.796
Do we add,
&gt;&gt; Bianca Gandolfo: To

80
00:04:58.796 --> 00:05:04.174
an already existing matrix or

81
00:05:04.174 --> 00:05:09.551
do we add a column every time,

82
00:05:09.551 --> 00:05:17.013
column row every time.
&gt;&gt; Bianca Gandolfo: What

83
00:05:17.013 --> 00:05:21.433
do you think is gonna be the easiest?

84
00:05:21.433 --> 00:05:26.853
And again, let's just assume,
&gt;&gt; Bianca Gandolfo: Assume node

85
00:05:26.853 --> 00:05:33.062
is a positive integer between 1 and
10, or 0 and 10.

86
00:05:46.533 --> 00:05:47.294
&gt;&gt; off screen male: So I mean,

87
00:05:47.294 --> 00:05:51.108
if the value was already
represented as a column row,

88
00:05:51.108 --> 00:05:53.667
we wouldn't add it again, right.

89
00:05:53.667 --> 00:05:55.846
Cuz that would mean that
we would increase the,

90
00:05:59.451 --> 00:06:00.169
&gt;&gt; off screen male: Well,

91
00:06:00.169 --> 00:06:06.391
in the ones we saw already,
there weren't repeating nodes so

92
00:06:06.391 --> 00:06:12.132
I would think we would not add
another one if we try to add,

93
00:06:12.132 --> 00:06:13.125
right?
&gt;&gt; Bianca Gandolfo: So

94
00:06:13.125 --> 00:06:16.420
you're saying that-
&gt;&gt; off screen male: Like if we already had

95
00:06:16.420 --> 00:06:21.229
zero, one, two, three, four as both rows
and columns, and then we went to add two.

96
00:06:21.229 --> 00:06:21.762
&gt;&gt; Bianca Gandolfo: Yeah, so

97
00:06:21.762 --> 00:06:25.848
you're saying maybe we initialize
the entire matrix at the beginning.

98
00:06:25.848 --> 00:06:31.061
That seems like it's easier than
starting out with maybe a matrix

99
00:06:31.061 --> 00:06:37.690
that's one by one.
&gt;&gt; off screen male: Right, I mean,

100
00:06:37.690 --> 00:06:43.044
I guess if we weren't expecting to have
all the values we could just do a check.

101
00:06:43.044 --> 00:06:44.900
I don't know.

102
00:06:44.900 --> 00:06:49.150
I guess it sort of depends on what
the purpose of the matrix is.

103
00:06:50.180 --> 00:06:51.670
&gt;&gt; Bianca Gandolfo: Yeah, exactly, so

104
00:06:51.670 --> 00:06:54.390
the thing about this matrix is that,

105
00:06:54.390 --> 00:06:58.600
since we know our values
are gonna be between 0 and 10,

106
00:06:58.600 --> 00:07:03.599
we can also use these numbers,
not only to represent the value, but

107
00:07:03.599 --> 00:07:07.487
to also represent the order
in which they are added.

108
00:07:07.487 --> 00:07:09.898
So depending on what you're doing, right?

109
00:07:09.898 --> 00:07:13.967
So if it's the order in which
they're added, so the first element,

110
00:07:13.967 --> 00:07:17.966
whatever value it may have, right,
we can save the value somewhere

111
00:07:17.966 --> 00:07:22.455
else with the same key.
&gt;&gt; Bianca Gandolfo: We

112
00:07:22.455 --> 00:07:25.130
can keep adding columns and
rows every time.

113
00:07:28.020 --> 00:07:34.324
However, what was the other case
that I just lost from my head?

114
00:07:34.324 --> 00:07:35.890
The second case?

115
00:07:35.890 --> 00:07:40.604
Amnesia.
The first case was these numbers

116
00:07:40.604 --> 00:07:46.322
represent the order in
which we add a node.

117
00:07:46.322 --> 00:07:49.444
Second case is these actually represent

118
00:07:49.444 --> 00:07:54.340
the value.
&gt;&gt; Bianca Gandolfo: Does that make sense?

119
00:07:55.820 --> 00:08:01.002
So for the case where we are using
these numbers to represent the value

120
00:08:01.002 --> 00:08:06.111
that we're adding, right, so
what if the first thing we add is 5?

121
00:08:06.111 --> 00:08:08.021
And that's an index, right?

122
00:08:08.021 --> 00:08:13.370
If you look at our adjacency matrix,
these are arrays.

123
00:08:13.370 --> 00:08:14.800
So 5 is gonna be here.

124
00:08:14.800 --> 00:08:20.893
And we need to have an array of 1,
2, 3, 4, 5, well, 5 by 5.

125
00:08:20.893 --> 00:08:23.021
[LAUGH] I can count.

126
00:08:23.021 --> 00:08:26.440
Initialized at that point.

127
00:08:28.540 --> 00:08:32.401
So again, it comes down to what
specific thing are you doing.

128
00:08:36.886 --> 00:08:39.385
&gt;&gt; Bianca Gandolfo: Cool, what else,

129
00:08:39.385 --> 00:08:44.852
what else do I wanna
put in your brain about

130
00:08:44.852 --> 00:08:51.264
this?
&gt;&gt; Bianca Gandolfo: So

131
00:08:51.264 --> 00:08:55.009
is it the value?
&gt;&gt; Bianca Gandolfo: Is it the order?

132
00:08:57.223 --> 00:08:58.445
&gt;&gt; Bianca Gandolfo: So much power,

133
00:08:58.445 --> 00:09:02.210
so many options, so
many questions to answer.

