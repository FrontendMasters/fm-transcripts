WEBVTT

1
00:00:00.350 --> 00:00:04.887
&gt;&gt; Bianca Gandolfo: So post-order,
let's take a little peek here.

2
00:00:09.222 --> 00:00:10.210
&gt;&gt; Bianca Gandolfo: So our 5, 3, 6.

3
00:00:10.210 --> 00:00:15.907
So if we're doing left, right, self,

4
00:00:15.907 --> 00:00:21.109
those terms, what is post-order?

5
00:00:21.109 --> 00:00:23.030
&gt;&gt; Speaker 2: Left, right, self.

6
00:00:23.030 --> 00:00:26.760
&gt;&gt; Bianca Gandolfo: Mm hm,
left, right, self.

7
00:00:26.760 --> 00:00:30.220
&gt;&gt; Speaker 2: But
the terms are in the pattern.

8
00:00:30.220 --> 00:00:31.347
&gt;&gt; Bianca Gandolfo: Mm hm.

9
00:00:31.347 --> 00:00:35.360
&gt;&gt; Speaker 2: Then then in is in between.

10
00:00:35.360 --> 00:00:35.892
&gt;&gt; Bianca Gandolfo: Yeah,

11
00:00:35.892 --> 00:00:40.338
in is actually in the correct
order of smallest to highest.

12
00:00:40.338 --> 00:00:44.459
Yep, exactly, good catch there.

13
00:00:44.459 --> 00:00:49.247
I think I really do think that computer
scientists coin terms to make things

14
00:00:49.247 --> 00:00:53.655
easier to remember, although
sometimes it's easier to forget when

15
00:00:53.655 --> 00:00:57.460
they start making up crazy words for
stuff like iteration.

16
00:00:58.670 --> 00:00:59.666
It's a loop.

17
00:00:59.666 --> 00:01:01.547
A lot of you would rather
call it integration.

18
00:01:01.547 --> 00:01:08.738
Anyway, or K catination, I don't know.

19
00:01:12.123 --> 00:01:13.707
&gt;&gt; Bianca Gandolfo: Like adding.

20
00:01:13.707 --> 00:01:15.839
&gt;&gt; Group: [INAUDIBLE] [LAUGH]
&gt;&gt; Bianca Gandolfo: Summation.

21
00:01:15.839 --> 00:01:17.370
Smoosh.

22
00:01:17.370 --> 00:01:18.900
Squish.

23
00:01:18.900 --> 00:01:19.700
Some fun ones.

24
00:01:21.030 --> 00:01:24.600
Or just name it something but

25
00:01:24.600 --> 00:01:29.375
a smaller version of you know, concat.

26
00:01:30.832 --> 00:01:34.440
&gt;&gt; Bianca Gandolfo: Too little, call it.

27
00:01:34.440 --> 00:01:37.959
Okay, so we're kind of seeing
a pattern here, right?

28
00:01:39.580 --> 00:01:45.384
So if we were gonna pseudocode this out,
we would say left, right, self.

29
00:01:50.402 --> 00:01:51.826
&gt;&gt; Bianca Gandolfo: So
let us get rid of these.

30
00:02:03.466 --> 00:02:08.638
&gt;&gt; Bianca Gandolfo: Okay,
&gt;&gt; Bianca Gandolfo: Left,

31
00:02:08.638 --> 00:02:12.390
right, self.

32
00:02:12.390 --> 00:02:16.390
So here's our solutions, it's not too
far off from our pseudo code, right?

33
00:02:18.200 --> 00:02:19.736
&gt;&gt; Speaker 5: No,
it looks exactly the same.

34
00:02:19.736 --> 00:02:22.807
&gt;&gt; Bianca Gandolfo: [CROSSTALK] Yeah,
let's think that is the same.

35
00:02:22.807 --> 00:02:29.784
So in order, we do the child,

36
00:02:29.784 --> 00:02:35.656
then left, then right.

37
00:02:35.656 --> 00:02:38.979
For pre-order, we do self left then right.

38
00:02:38.979 --> 00:02:42.676
Post-order, left, right, and then self.

39
00:02:46.325 --> 00:02:47.330
&gt;&gt; Bianca Gandolfo: It's quite elegant,
right?

40
00:02:49.810 --> 00:02:56.500
This is why we say, recursion is
elegant because doing a pretty complex

41
00:02:56.500 --> 00:03:01.610
traversal, we're doing a lot of things
here is actually just a few lines of code.

42
00:03:02.880 --> 00:03:04.050
It's kind of nice.

43
00:03:04.050 --> 00:03:08.830
Do you feel your appreciation growing for
recursion?

44
00:03:08.830 --> 00:03:12.110
Maybe day one recursion was like,
my God, scary.

45
00:03:12.110 --> 00:03:13.570
Hopefully at this point you're like, wow,

46
00:03:13.570 --> 00:03:19.320
I can see that it's quite useful once you
wrap your head around what's happening.

47
00:03:21.370 --> 00:03:26.760
So someone on chat was asking,
what's this breath first business and

48
00:03:26.760 --> 00:03:30.000
we're gonna talk about that
when we talk about graphs.

49
00:03:30.000 --> 00:03:36.570
But depth first, as the name suggests,
goes all the way to the bottom.

50
00:03:38.610 --> 00:03:44.460
Depth, depth, depth and then pops back
while breadth goes layer by layer.

51
00:03:44.460 --> 00:03:48.690
So if we have a tree which we do,
we've been making trees all day.

52
00:03:50.170 --> 00:03:51.620
Where's our tree?

53
00:03:51.620 --> 00:03:52.650
Lot of arrows.

54
00:03:54.020 --> 00:04:00.450
So breadth would go this, then this one
and this one and then this one, right?

55
00:04:00.450 --> 00:04:02.688
Well depth goes down first, but

56
00:04:02.688 --> 00:04:06.980
we'll get into specific implementation
details on that tomorrow.

