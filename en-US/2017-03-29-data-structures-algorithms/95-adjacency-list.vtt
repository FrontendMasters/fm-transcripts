WEBVTT

1
00:00:00.630 --> 00:00:01.350
&gt;&gt; Bianca Gandolfo: Adjacency list.

2
00:00:01.350 --> 00:00:03.810
This is what we're going
to actually use for

3
00:00:03.810 --> 00:00:08.820
the things that we're usually
interested in like finding paths and

4
00:00:08.820 --> 00:00:14.082
things like that, and finding
neighbors that aren't just immediate.

5
00:00:14.082 --> 00:00:16.490
It's gonna be easier to do
this with an adjacency list.

6
00:00:17.890 --> 00:00:22.890
So here we have our adjacency list,
we have it

7
00:00:22.890 --> 00:00:27.125
just the order we put in the list
to simplify our life, but

8
00:00:27.125 --> 00:00:33.475
we do know that this can represent
other data, we talked about that.

9
00:00:33.475 --> 00:00:39.387
So here is our array,

10
00:00:39.387 --> 00:00:45.627
each Value in the array

11
00:00:45.627 --> 00:00:50.890
represents what?

12
00:00:50.890 --> 00:00:51.930
&gt;&gt; Speaker 2: Vertices?

13
00:00:51.930 --> 00:00:55.800
&gt;&gt; Bianca Gandolfo: All the vertices
that are connected to that one.

14
00:00:55.800 --> 00:01:00.710
So we can see we have 1, 2, and 3.

15
00:01:00.710 --> 00:01:04.618
Sorry, 1 is connected to 2 and 3, so
we have at 1 connected to 2 and 3.

16
00:01:07.580 --> 00:01:09.391
&gt;&gt; Bianca Gandolfo: And
this is a directed graph, so

17
00:01:09.391 --> 00:01:12.620
you can imagine that this
might be a linked list, right?

18
00:01:12.620 --> 00:01:17.777
Linked list has a direction,
if it was weighted we'd

19
00:01:17.777 --> 00:01:22.932
have a linked list with some
more information in there

20
00:01:22.932 --> 00:01:27.987
like another .wait after
.net that kind of stuff.

21
00:01:27.987 --> 00:01:30.843
&gt;&gt; Speaker 3: That top line is just
the way of saying that one is connected to

22
00:01:30.843 --> 00:01:31.935
bullet two and three?

23
00:01:31.935 --> 00:01:32.563
&gt;&gt; Bianca Gandolfo: Mm-hm.

24
00:01:32.563 --> 00:01:35.227
&gt;&gt; Speaker 3: Cuz it's looks like to me
that looks like one is connected to two,

25
00:01:35.227 --> 00:01:38.680
two is connected to three
&gt;&gt; Bianca Gandolfo: Yeah,

26
00:01:38.680 --> 00:01:39.740
that's a good observation.

27
00:01:39.740 --> 00:01:43.479
So what this is saying is
1 is connected to 2 and 3.

28
00:01:43.479 --> 00:01:48.501
From 2 you can only go to 4,
from 3 you can only go to 4,

29
00:01:48.501 --> 00:01:53.523
from 4 you can only go to 5,
from 5 you can only go to 6,

30
00:01:53.523 --> 00:01:56.365
from 6 you can't go anywhere.

31
00:01:56.365 --> 00:01:56.900
&gt;&gt; Speaker 3: Okay.

32
00:01:56.900 --> 00:01:57.713
&gt;&gt; Bianca Gandolfo: Yeah.

33
00:02:00.496 --> 00:02:01.799
&gt;&gt; Bianca Gandolfo: Okay.

34
00:02:01.799 --> 00:02:02.299
Mm-hm.

35
00:02:04.524 --> 00:02:05.720
&gt;&gt; Bianca Gandolfo: All right.

36
00:02:05.720 --> 00:02:06.400
&gt;&gt; Speaker 3: So that thing,

37
00:02:06.400 --> 00:02:09.450
that construct on the right
is the adjacency list?

38
00:02:09.450 --> 00:02:12.020
&gt;&gt; Bianca Gandolfo: Yep,
these are adjacency lists.

39
00:02:12.020 --> 00:02:15.780
That's the one that you were looking
at that has the nodes in the object.

40
00:02:17.977 --> 00:02:19.388
&gt;&gt; Bianca Gandolfo: Mm-hm, question?

41
00:02:19.388 --> 00:02:24.203
&gt;&gt; Speaker 4: And this table's
saying that one connector to two two

42
00:02:24.203 --> 00:02:29.769
connector to three, one to two,
three two, another graph?

43
00:02:29.769 --> 00:02:36.800
This shows one connector to
two is connector two to three.

44
00:02:38.030 --> 00:02:39.628
&gt;&gt; Bianca Gandolfo: Yeah.
&gt;&gt; Speaker 4: So splitting the

45
00:02:44.629 --> 00:02:48.014
&gt;&gt; Speaker 4: Is that splitting things out

46
00:02:48.014 --> 00:02:53.091
cut after one row and just putting 1, 2,

47
00:02:53.091 --> 00:02:58.179
3, but the definition under something is.

48
00:02:59.230 --> 00:03:05.472
There is connection to front to two,
sorry, as the graph shows.

49
00:03:05.472 --> 00:03:10.300
&gt;&gt; Bianca Gandolfo: No, from one to three.

50
00:03:10.300 --> 00:03:13.192
So this means, from one,

51
00:03:13.192 --> 00:03:18.193
you can either go to two or
you can go to three.

52
00:03:20.860 --> 00:03:23.430
&gt;&gt; Bianca Gandolfo: From
two you can go to four.

53
00:03:23.430 --> 00:03:24.984
From three you can only go to four.

54
00:03:31.460 --> 00:03:35.410
&gt;&gt; Speaker 3: So in this in
the adjacency list you only look up.

55
00:03:35.410 --> 00:03:39.660
You only look at the leftmost number,
and then you know everything.

56
00:03:39.660 --> 00:03:42.800
So no matter how long line 1 got there,

57
00:03:42.800 --> 00:03:46.500
it would only be referring
what's connected to 1?

58
00:03:46.500 --> 00:03:47.000
&gt;&gt; Bianca Gandolfo: Yep.

59
00:03:48.730 --> 00:03:49.973
&gt;&gt; Speaker 3: Okay.

60
00:03:49.973 --> 00:03:54.792
And this is just a way of
talking about what's in a graph?

61
00:03:54.792 --> 00:03:56.730
&gt;&gt; Bianca Gandolfo: Yeah,
it's a way of representing our graph.

62
00:03:56.730 --> 00:03:58.190
&gt;&gt; Speaker 3: Where do I represent?

63
00:03:58.190 --> 00:04:00.580
&gt;&gt; Bianca Gandolfo: And
we'll explore some operations on it and

64
00:04:00.580 --> 00:04:03.340
we'll see why we would do it this way.

65
00:04:03.340 --> 00:04:03.850
&gt;&gt; Speaker 3: Okay.

66
00:04:03.850 --> 00:04:04.350
&gt;&gt; Bianca Gandolfo: Yeah.

