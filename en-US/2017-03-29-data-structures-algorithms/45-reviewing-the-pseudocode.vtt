WEBVTT

1
00:00:00.210 --> 00:00:02.170
&gt;&gt; Bianca Gandolfo: Alright so
lets debug this pseudocode.

2
00:00:02.170 --> 00:00:05.790
So we have our partition, we know our
partition is going to be a recursive

3
00:00:05.790 --> 00:00:11.920
element of our algorithm, right?

4
00:00:11.920 --> 00:00:12.950
And that's why we have low and

5
00:00:12.950 --> 00:00:18.510
high in the entire array because
every time we partition.

6
00:00:18.510 --> 00:00:25.630
We're going to pass it and give it a
different range of elements to partition.

7
00:00:25.630 --> 00:00:28.970
The first time we do this we're going
to partition the entire array and

8
00:00:28.970 --> 00:00:31.440
that's what we're going to
be thinking about right now.

9
00:00:31.440 --> 00:00:32.540
Okay?

10
00:00:32.540 --> 00:00:33.040
Are we good?
&gt;&gt; class: Yeah.

11
00:00:34.440 --> 00:00:39.290
&gt;&gt; Bianca Gandolfo: So this is what we
have, we choose the last element as

12
00:00:39.290 --> 00:00:45.671
a pivot, which at this point
is the end of the array.

13
00:00:47.510 --> 00:00:50.290
Here, I'm going to move this over,
so we have lots of space.

14
00:00:52.550 --> 00:00:53.423
And then I'm going to move over.

15
00:01:05.633 --> 00:01:06.444
&gt;&gt; Bianca Gandolfo: All right.

16
00:01:08.109 --> 00:01:09.952
&gt;&gt; Bianca Gandolfo: Cool,
so here's our thing.

17
00:01:20.794 --> 00:01:24.410
&gt;&gt; Bianca Gandolfo: All right,
we reset it back to how it was.

18
00:01:24.410 --> 00:01:26.850
So just a recap of what we wanna do here.

19
00:01:29.400 --> 00:01:31.680
Is, we want to think.

20
00:01:31.680 --> 00:01:33.020
Okay.

21
00:01:33.020 --> 00:01:36.070
Our pivot point,
which is going to be the last one.

22
00:01:36.070 --> 00:01:41.550
We want to move it to its
final location in the array.

23
00:01:41.550 --> 00:01:45.850
We know it's there when all of
the elements to the left are less,

24
00:01:45.850 --> 00:01:47.760
even if it's unsorted.

25
00:01:47.760 --> 00:01:50.800
And all the elements to the right
are greater, even if that is unsorted.

26
00:01:50.800 --> 00:01:55.362
We know that the 4 is gonna be in
its final place inside of the array.

27
00:01:57.622 --> 00:01:58.268
&gt;&gt; Bianca Gandolfo: Yeah.

28
00:01:58.268 --> 00:01:59.530
So that's the goal here.

29
00:02:00.720 --> 00:02:05.724
And so what we wanna do,
as we're doing this we wanna keep

30
00:02:05.724 --> 00:02:11.476
track of everywhere that is,
the part of the array that's less.

31
00:02:13.529 --> 00:02:15.480
&gt;&gt; Bianca Gandolfo: Than our pivot point,
we wanna keep track of that.

32
00:02:17.090 --> 00:02:19.410
And what else do we wanna keep track of?

33
00:02:20.490 --> 00:02:26.784
I wanna keep track of our actual
element in question and what else?

34
00:02:26.784 --> 00:02:27.284
Is that it?

35
00:02:28.600 --> 00:02:30.090
That's basically it,
am I missing anything?

36
00:02:31.740 --> 00:02:32.250
No?

37
00:02:32.250 --> 00:02:35.260
Okay, so the first thing we wanna do.

38
00:02:37.030 --> 00:02:41.110
Is, so we start at the beginning,
the beginning is our pivot location,

39
00:02:43.410 --> 00:02:50.960
so 3, so our pivot location starts at 0,
so 3, is 3 less than four?

40
00:02:50.960 --> 00:02:55.610
Yeah, so that's great, so
we increment our pivot location by 1 so,

41
00:02:55.610 --> 00:03:00.600
now our pivot location is here, index 1.

42
00:03:00.600 --> 00:03:05.815
And we compare, is 7 less than 4?

43
00:03:05.815 --> 00:03:08.960
Notice not, okay?

44
00:03:08.960 --> 00:03:14.400
Because it's not we wanna make sure
that our 7 get moved to the end.

45
00:03:14.400 --> 00:03:19.010
And our 4, need to increment to the left.

46
00:03:19.010 --> 00:03:20.960
So in it's current location minus 1, okay?

47
00:03:24.470 --> 00:03:31.015
So an easy way to do that
is we can swap 4 with 7 and

48
00:03:31.015 --> 00:03:37.899
then we have a second swap,
we'll swap 4 with 5.

49
00:03:37.899 --> 00:03:42.532
Note that our pivot location is still 1,
okay?

50
00:03:42.532 --> 00:03:49.499
This is important, because we need to make
sure that whenever our pivot location is,

51
00:03:49.499 --> 00:03:55.231
everything to the left, including itself,
needs to be less then 4.

52
00:03:55.231 --> 00:03:57.110
Okay.

53
00:03:58.130 --> 00:04:00.050
So we're good with the pivot location?

54
00:04:02.290 --> 00:04:03.320
So the next thing we do.

55
00:04:05.260 --> 00:04:12.070
Is we compare the same index,
we're still at 1, 5 to 4.

56
00:04:12.070 --> 00:04:15.290
Is 5 less than 4, no it's not,
so we're gonna swap again.

57
00:04:19.307 --> 00:04:24.223
&gt;&gt; Bianca Gandolfo: Oops, and then 2,

58
00:04:24.223 --> 00:04:27.990
4, awesome.

59
00:04:30.300 --> 00:04:36.890
Again we're still here, now we go to,
we loop again, back to where we were.

60
00:04:36.890 --> 00:04:40.870
We check 2, is 2 less than 4?

61
00:04:40.870 --> 00:04:46.200
Yes, so
we increment now our pivot location up.

62
00:04:48.500 --> 00:04:49.670
So there's our pivot location now.

63
00:04:51.970 --> 00:04:56.586
Then we check is 6 less than 4.

64
00:04:56.586 --> 00:04:57.385
No it's not.

65
00:04:57.385 --> 00:05:02.439
So we're going

66
00:05:02.439 --> 00:05:07.885
to do our swaps.

67
00:05:07.885 --> 00:05:08.385
All right.

68
00:05:10.370 --> 00:05:13.120
So now we're still at the same
pivot location index 2 and

69
00:05:13.120 --> 00:05:18.330
what we're gonna check is 1 less than 4.

70
00:05:18.330 --> 00:05:22.700
Yes and
then we increment our pivot location.

71
00:05:23.900 --> 00:05:26.100
Once our pivot location meets our pivot

72
00:05:27.440 --> 00:05:29.720
that's when we know our pivot
is in it's final place.

73
00:05:29.720 --> 00:05:32.465
I don't want to say final resting
place cuz that sounds kind of morbid.

74
00:05:32.465 --> 00:05:33.620
&gt;&gt; class: [LAUGH]
&gt;&gt; Bianca Gandolfo: But it's in it's final

75
00:05:35.290 --> 00:05:35.980
Place in the world,

76
00:05:35.980 --> 00:05:39.800
it's found it's place, it's purpose which
is the the V smack dab in the middle.

77
00:05:41.220 --> 00:05:41.720
Ya?

