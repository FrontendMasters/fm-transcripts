WEBVTT

1
00:00:00.030 --> 00:00:01.960
&gt;&gt; Will Sentance: Let's now see
JavaScript with other talent.

2
00:00:01.960 --> 00:00:04.710
Built-in enables a trigger node features.

3
00:00:04.710 --> 00:00:06.370
Because what are we trying to do, people?

4
00:00:06.370 --> 00:00:09.330
Our dream is about right JavaScript code

5
00:00:09.330 --> 00:00:13.180
that can look at an incoming message
off the Internet, introspective,

6
00:00:13.180 --> 00:00:17.190
look into it see what it's asking for,
and then send back the right tweets.

7
00:00:18.240 --> 00:00:19.530
That's our dream.

8
00:00:19.530 --> 00:00:23.760
So there'd better be a label from in here,
the axises or

9
00:00:23.760 --> 00:00:30.820
set up a nodes C++ feature that can access
the networking feature of our computer.

10
00:00:30.820 --> 00:00:32.510
There better be one.

11
00:00:32.510 --> 00:00:33.390
What is it?

12
00:00:33.390 --> 00:00:35.629
Well, actually the main one's called net.

13
00:00:35.629 --> 00:00:40.792
But there's a more
specialized one called HTTP.

14
00:00:40.792 --> 00:00:47.693
The node feature that's gonna access
the network card effectively and

15
00:00:47.693 --> 00:00:52.302
be able to receive messages
in the HTTP format.

16
00:00:52.302 --> 00:00:57.707
And we're gonna see HTTP more detail,
but for now just know it's

17
00:00:57.707 --> 00:01:03.217
a format by which you send messages or
requests from a web browser.

18
00:01:03.217 --> 00:01:09.810
And whenever you type in a URL and
press ENTER, you send out a message.

19
00:01:09.810 --> 00:01:14.950
And it's sent out automatically in the
HTTP format, Hypertext Transfer Protocol.

20
00:01:14.950 --> 00:01:19.330
Protocol means format of data and
rules by how you communicate.

21
00:01:19.330 --> 00:01:24.950
The format of data, HT,
hypertext, that's the structure

22
00:01:24.950 --> 00:01:30.630
of webpages linked between them,
transfer, that means transfer.

23
00:01:30.630 --> 00:01:31.130
Good.

24
00:01:33.240 --> 00:01:37.320
And we need to have our network open,
we're gonna

25
00:01:37.320 --> 00:01:41.370
discover we open a socket which is
an open connection to the Internet,

26
00:01:41.370 --> 00:01:44.574
an open channel to the internet,
two-way open channel to the Internet.

27
00:01:44.574 --> 00:01:48.510
We're gonna discover that open connection,
we need to have it formatted

28
00:01:48.510 --> 00:01:52.830
such that it's ready to receive
HTTP formatted messages.

29
00:01:52.830 --> 00:01:54.570
How are we gonna do that from JavaScript?

30
00:01:55.850 --> 00:01:58.060
Via what, Roman?

31
00:01:58.060 --> 00:01:59.520
&gt;&gt; Roman: With CSS.

32
00:01:59.520 --> 00:02:01.880
&gt;&gt; Will Sentance: Not with CSS, so-
&gt;&gt; Roman: I mean with C++.

33
00:02:01.880 --> 00:02:04.000
&gt;&gt; Will Sentance: With C++, exactly.

34
00:02:04.000 --> 00:02:08.484
Most probably in node featurable HTTP,
and its associated built-in

35
00:02:08.484 --> 00:02:11.980
label in JavaScript, and
guess just want me by label.

36
00:02:11.980 --> 00:02:15.130
It's a label a word in here that
will trigger something down here.

37
00:02:16.140 --> 00:02:16.700
It's called HTTP.

38
00:02:16.700 --> 00:02:18.020
Okay, here we go, people.

39
00:02:18.020 --> 00:02:25.700
Using HTTP feature of node to set up
an open socket connection to the Internet.

40
00:02:25.700 --> 00:02:28.240
Socket's a posh word for
open channel for data to go in and

41
00:02:28.240 --> 00:02:30.110
out of a place over the Internet.

42
00:02:31.290 --> 00:02:35.650
People, what do I wanna build?

43
00:02:35.650 --> 00:02:37.810
I wanna build a cool looking app.

44
00:02:37.810 --> 00:02:43.738
If we get this principle down,
there's nothing else to note.

45
00:02:43.738 --> 00:02:47.045
Today, we're gonna see all
features of node, besides two,

46
00:02:47.045 --> 00:02:48.960
we may have tied to the modularity.

47
00:02:50.675 --> 00:02:55.425
You may have time, and
we have time to do handling

48
00:02:55.425 --> 00:02:59.555
multiple threaded tasks in some
way handling multiple jobs or

49
00:02:59.555 --> 00:03:02.795
incident instances as a one
thing we're going to touch.

50
00:03:02.795 --> 00:03:06.065
But otherwise this model we're gonna
see will apply to every single node

51
00:03:06.065 --> 00:03:07.625
feature that you ever encounter.

52
00:03:07.625 --> 00:03:13.255
All right, here we go, using the HTTP
feature of node to open a socket

53
00:03:13.255 --> 00:03:19.079
to the Internet such that when an inbound
message comes in from the web,

54
00:03:19.079 --> 00:03:25.030
we can run code in JavaScript to send
back a message to Sarah Rose's Mac.

55
00:03:26.980 --> 00:03:30.753
Let's see how we use our
built in label up here.

56
00:03:30.753 --> 00:03:34.130
And I will say this, people,
immediately just so you're not confused.

57
00:03:34.130 --> 00:03:37.410
This built-in label is gonna
be HTTP.create server.

58
00:03:37.410 --> 00:03:41.550
It's a label for a node C++ feature that
says we're open channel to the Internet.

59
00:03:43.050 --> 00:03:46.689
That label is not automatically
available to us in JavaScript.

60
00:03:46.689 --> 00:03:50.960
We're gonna see a little bit later on, how
do we tell JavaScript that we want to have

61
00:03:50.960 --> 00:03:53.550
access to that background mood feature.

62
00:03:53.550 --> 00:03:56.110
One line will bring that labeling.

63
00:03:56.110 --> 00:03:58.840
It's not dissimilar though
to in the browser if you

64
00:03:58.840 --> 00:04:03.510
remember things like set time out,
which is unlabeled in JavaScript,

65
00:04:03.510 --> 00:04:07.220
there's no timer in JavaScript, so
there's a label in JavaScript for

66
00:04:07.220 --> 00:04:11.740
a feature in the web browser, but
set time out is built in automatically.

67
00:04:13.410 --> 00:04:17.150
It's very similar, this is not quite
built in automatically we have

68
00:04:17.150 --> 00:04:20.090
to announce we want it, but it's
effectively almost built-in automatically.

69
00:04:20.090 --> 00:04:21.890
We'll see announcing we want,
it will be later on.

70
00:04:21.890 --> 00:04:24.120
For now let's just use it.

71
00:04:24.120 --> 00:04:29.671
Let's use it, let's use it,
let's use it, let's use it.

