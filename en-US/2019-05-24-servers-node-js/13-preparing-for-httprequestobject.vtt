WEBVTT

1
00:00:02.981 --> 00:00:07.303
&gt;&gt; Will Sentance: So
JavaScript code, JavaScript code

2
00:00:07.303 --> 00:00:11.900
triggers virus labels code written in?

3
00:00:11.900 --> 00:00:13.526
&gt;&gt; Speaker 2: JavaScript?

4
00:00:13.526 --> 00:00:19.093
&gt;&gt; Will Sentance: Node C++ features,

5
00:00:19.093 --> 00:00:23.198
there they are.

6
00:00:25.917 --> 00:00:27.730
&gt;&gt; Will Sentance: There they are.

7
00:00:27.730 --> 00:00:32.092
But we don't just wanna do it in Node with
C++, they're really only their choice so

8
00:00:32.092 --> 00:00:32.948
we can control?

9
00:00:32.948 --> 00:00:33.910
&gt;&gt; Charlie: The computer.

10
00:00:33.910 --> 00:00:36.910
&gt;&gt; Will Sentance: The computer's
internals, exactly, thank you to Charlie.

11
00:00:36.910 --> 00:00:44.020
The computer's internal features,

12
00:00:44.020 --> 00:00:49.140
there they are, perfect.

13
00:00:49.140 --> 00:00:53.556
All right, which includes
features like networking, yeah,

14
00:00:53.556 --> 00:00:56.319
that's a networking feature for now.

15
00:00:56.319 --> 00:01:01.379
All right, now we're gonna write
Javascript code to control and

16
00:01:01.379 --> 00:01:05.960
to setup an open channel
to the internet hopefully.

17
00:01:05.960 --> 00:01:10.560
Let's do it all together, let's see if
we have the core part of that Node down.

18
00:01:10.560 --> 00:01:13.420
No pressure people but

19
00:01:13.420 --> 00:01:18.545
could call on any of you, at any moment.

20
00:01:18.545 --> 00:01:21.990
[LAUGH] Excellent.

21
00:01:21.990 --> 00:01:23.570
All right, Virginia.

22
00:01:23.570 --> 00:01:27.880
Line one, what are we doing,
left hand side first, declaring what?

23
00:01:29.380 --> 00:01:30.700
&gt;&gt; Virginia: A label called tweets?

24
00:01:30.700 --> 00:01:31.840
&gt;&gt; Will Sentance: Beautiful.

25
00:01:31.840 --> 00:01:36.470
And the right hand side and yes,
we are gonna go through each element.

26
00:01:36.470 --> 00:01:40.091
First element we're
adding to the array is?

27
00:01:40.091 --> 00:01:42.210
next element we're adding to array is?

28
00:01:42.210 --> 00:01:43.221
&gt;&gt; Virginia: Hi.
Laughing face.

29
00:01:43.221 --> 00:01:46.952
&gt;&gt; Will Sentance: Laugh,
I love seeing what each person calls it,

30
00:01:46.952 --> 00:01:51.230
it's definitely laughing, crying emoji.

31
00:01:51.230 --> 00:01:52.442
Jenny was wrong.

32
00:01:52.442 --> 00:01:58.320
There you go, laughing, crying
&gt;&gt; Virginia: And a more formal hello.

33
00:01:58.320 --> 00:02:01.888
&gt;&gt; Will Sentance: I don't
know how to draw this.

34
00:02:01.888 --> 00:02:04.869
&gt;&gt; Mohammed: [LAUGH]
&gt;&gt; Virginia: I mean you

35
00:02:04.869 --> 00:02:06.273
made your own slides, so.

36
00:02:06.273 --> 00:02:10.145
&gt;&gt; Mohammed: [LAUGH]
&gt;&gt; Will Sentance: It's better than normal.

37
00:02:14.604 --> 00:02:16.438
&gt;&gt; Mohammed: [LAUGH]
&gt;&gt; Will Sentance: Mohammed's got feedback

38
00:02:16.438 --> 00:02:16.967
on my art.

39
00:02:16.967 --> 00:02:20.054
&gt;&gt; Mohammed: [LAUGH],
&gt;&gt; Will Sentance: You'd like to come,

40
00:02:20.054 --> 00:02:21.841
[LAUGH] All right.

41
00:02:21.841 --> 00:02:25.729
Okay, next one, yeah go ahead Virginia.

42
00:02:25.729 --> 00:02:26.643
&gt;&gt; Virginia: The more formal hello.

43
00:02:26.643 --> 00:02:28.283
&gt;&gt; Will Sentance: More formal hello,
exactly.

44
00:02:28.283 --> 00:02:29.380
And then the next one?

45
00:02:29.380 --> 00:02:30.140
&gt;&gt; Virginia: A waving hand?

46
00:02:30.140 --> 00:02:31.606
&gt;&gt; Will Sentance: Hand waving emoji.

47
00:02:31.606 --> 00:02:33.953
So I'm gonna draw this one really well,
no,

48
00:02:33.953 --> 00:02:36.430
that's, that's very creepy hand isn't it?

49
00:02:36.430 --> 00:02:37.840
Okay, I'll fix that.

50
00:02:39.050 --> 00:02:43.046
This is important material people.

51
00:02:43.046 --> 00:02:43.900
Okay, here we go.

52
00:02:45.786 --> 00:02:49.660
There it is, little hand waving emoji and
the last one.

53
00:02:49.660 --> 00:02:54.340
Goodness, I can't draw this,
is the snapchat the ghost emoji.

54
00:02:54.340 --> 00:02:54.918
It is.

55
00:02:58.071 --> 00:03:00.400
&gt;&gt; Will Sentance: I should
learn how to draw this, guys.

56
00:03:00.400 --> 00:03:02.532
There he is.

57
00:03:02.532 --> 00:03:04.780
I'm actually putting way more
effort into this than normal.

58
00:03:04.780 --> 00:03:07.599
There he is, okay,
we saved our Tweets, our data.

59
00:03:07.599 --> 00:03:10.630
Thank you very much,
thank you everyone, no?

60
00:03:10.630 --> 00:03:12.107
No round of?
&gt;&gt; [APPLAUSE]

61
00:03:12.107 --> 00:03:13.597
&gt;&gt; Will Sentance: Muted round of applause,

62
00:03:13.597 --> 00:03:16.140
did you put that in your annotations?

63
00:03:16.140 --> 00:03:17.847
More muted round of applause.

64
00:03:17.847 --> 00:03:19.390
&gt;&gt; Virginia: Wasn't gonna clap?

65
00:03:19.390 --> 00:03:23.000
&gt;&gt; Will Sentance: It was less than that,
it was, yeah, exactly, that's true.

66
00:03:23.000 --> 00:03:25.600
All right, that's our data saved,
Tweet saved.

67
00:03:25.600 --> 00:03:29.110
In our little JavaScript memory, which
by the way, you're probably thinking,

68
00:03:29.110 --> 00:03:32.760
that's a bit of a weird place to
store data in the JavaScript memory.

69
00:03:32.760 --> 00:03:35.281
I have a feeling we might get
it from somewhere else later on,

70
00:03:35.281 --> 00:03:36.126
we'll get to that.

71
00:03:36.126 --> 00:03:38.190
William, next line.

72
00:03:39.200 --> 00:03:42.620
&gt;&gt; William: Then you're making a function
definition called do on incoming,

73
00:03:42.620 --> 00:03:44.168
&gt;&gt; Will Sentance: Do on incoming,

74
00:03:44.168 --> 00:03:47.602
how are we going to run this William?

75
00:03:47.602 --> 00:03:48.461
&gt;&gt; William: Yeah.

76
00:03:48.461 --> 00:03:50.694
&gt;&gt; Will Sentance: Are we
developers ever gonna run this.

77
00:03:50.694 --> 00:03:52.890
&gt;&gt; William: Are we going to know
&gt;&gt; Will Sentance: No.

78
00:03:52.890 --> 00:03:54.760
Definitely your first point
yes exactly as well, but

79
00:03:54.760 --> 00:03:56.660
we don't win runs ourselves ever.

80
00:03:56.660 --> 00:03:57.887
We're instead going to tell no.

81
00:03:57.887 --> 00:04:01.490
Please run this,
if you get inbound request.

82
00:04:01.490 --> 00:04:02.820
Perfect, all right.

83
00:04:02.820 --> 00:04:07.191
Next line, left hand side, Matt.

84
00:04:07.191 --> 00:04:12.263
&gt;&gt; Matt: Next line would be
we just did do it incoming,

85
00:04:12.263 --> 00:04:16.140
you were going into the function.

86
00:04:16.140 --> 00:04:19.575
&gt;&gt; Will Sentance: We don't go
inside a function until we do walk

87
00:04:19.575 --> 00:04:21.303
&gt;&gt; William: Its the next line so

88
00:04:21.303 --> 00:04:23.030
server equals
&gt;&gt; Will Sentance: Excellent so

89
00:04:23.030 --> 00:04:23.740
to be clear.

90
00:04:23.740 --> 00:04:25.160
So how do we say the left hand side.

91
00:04:25.160 --> 00:04:29.185
There is a low quality
technical communication Matt?

92
00:04:29.185 --> 00:04:32.272
How do we say the left hand side they're
conserving sort of fancy technical

93
00:04:32.272 --> 00:04:34.270
communication anyone wants to give a shot?

94
00:04:34.270 --> 00:04:35.290
&gt;&gt; Speaker 8: Label.

95
00:04:35.290 --> 00:04:35.940
&gt;&gt; Will Sentance: Yeah.

96
00:04:35.940 --> 00:04:37.968
&gt;&gt; Speaker 9: Define,
&gt;&gt; Will Sentance: You define a constant

97
00:04:37.968 --> 00:04:43.610
server, yeah, there it is to find
a constant server declare it, okay.

98
00:04:43.610 --> 00:04:47.631
Now things get interesting people,

99
00:04:47.631 --> 00:04:55.282
server is gonna be the output in
JavaScript of calling create server,

100
00:04:55.282 --> 00:04:59.839
and passing to the entire do on Incoming.

101
00:05:03.330 --> 00:05:07.129
&gt;&gt; Will Sentance: The whole function
definition does three thing.

102
00:05:07.129 --> 00:05:13.516
This http.create server does three things,
two in Node.

103
00:05:15.654 --> 00:05:18.070
&gt;&gt; Will Sentance: One in JavaScript.

104
00:05:18.070 --> 00:05:23.540
Do also tell me one of those
three things that it does?

105
00:05:23.540 --> 00:05:27.185
Yeah I fretted about it with Jeff
&gt;&gt; Jeff: Jeff, yeah, so

106
00:05:27.185 --> 00:05:33.173
he's going to set up
an incoming message in C++.

107
00:05:33.173 --> 00:05:39.329
&gt;&gt; Will Sentance: Yeah, it's going to
in C++ set here an instance of the HTTP

108
00:05:39.329 --> 00:05:44.641
feature which is really
just a network connection,

109
00:05:44.641 --> 00:05:52.508
with that code having a C++ that's
gonna happen in the computers tunnels.

110
00:05:52.508 --> 00:05:56.505
Where yeah, it's gonna set up
an open channel to the internet,

111
00:05:56.505 --> 00:06:00.440
was there even challenge in
the internet in networking Notes?

112
00:06:00.440 --> 00:06:01.686
&gt;&gt; Speaker 8: Word.
&gt;&gt; Will Sentance: Not quite?

113
00:06:01.686 --> 00:06:02.290
&gt;&gt; Speaker 9: Socket.

114
00:06:02.290 --> 00:06:03.760
&gt;&gt; Will Sentance: Socket, exactly.

115
00:06:05.940 --> 00:06:08.060
Socket, perfect.

116
00:06:08.060 --> 00:06:09.677
Yeah, that's thing number one it does.

117
00:06:09.677 --> 00:06:13.437
Andrew, what's the next thing it does?

118
00:06:13.437 --> 00:06:17.466
&gt;&gt; Andrew: Sets up some memory space for
incoming data, and

119
00:06:17.466 --> 00:06:23.177
some member space forward the labor
functions is set out going data.

120
00:06:23.177 --> 00:06:25.214
&gt;&gt; Will Sentance: Not really
until we get a message in,

121
00:06:25.214 --> 00:06:27.198
what's the next thing is gonna do?

122
00:06:27.198 --> 00:06:27.973
This is tough stuff.

123
00:06:27.973 --> 00:06:29.050
Virginia.

124
00:06:29.050 --> 00:06:32.734
&gt;&gt; Virginia: Is gonna sup afrea to
run the function doing the coming.

125
00:06:32.734 --> 00:06:37.882
&gt;&gt; Will Sentance: Is going to take
the dual incoming function and

126
00:06:37.882 --> 00:06:44.221
it's going to store to the autorun,
when what happens?

127
00:06:44.221 --> 00:06:46.231
Raise your hand if you know what,
yeah, Mohamed.

128
00:06:46.231 --> 00:06:47.840
&gt;&gt; Mohammed: When you
get an incoming message.

129
00:06:47.840 --> 00:06:50.000
&gt;&gt; Will Sentance: When you get
an incoming message, spot on.

130
00:06:50.000 --> 00:06:56.188
So let's grab the do and
incoming function and throw it into node.

131
00:06:56.188 --> 00:07:02.210
Okay, autorun do on Incoming, yeah people.

132
00:07:02.210 --> 00:07:07.719
This is a complex paradigm, but by the end
of it you're going to be bored of it,

133
00:07:07.719 --> 00:07:11.322
because it's always this for
the rest of the Node.

134
00:07:11.322 --> 00:07:14.921
Whatever background feature we right
now using the networking feature,

135
00:07:14.921 --> 00:07:18.940
file system feature, same paradigm,
same structures, same process.

136
00:07:18.940 --> 00:07:24.320
Okay, so thing number one it does,
set up this background feature.

137
00:07:24.320 --> 00:07:28.830
Thing number two it does,
store function to be autorun.

138
00:07:28.830 --> 00:07:32.986
Okay, thing number three that it does
at this moment is in JavaScript,

139
00:07:32.986 --> 00:07:35.776
who wants to tell me what
it does in JavaScript?

140
00:07:35.776 --> 00:07:41.359
&gt;&gt; Zep: Get a server object.

141
00:07:41.359 --> 00:07:46.337
&gt;&gt; Will Sentance: That's an object
which has a bunch of functions

142
00:07:46.337 --> 00:07:50.321
including listen and this function,

143
00:07:50.321 --> 00:07:58.798
all the functions that came out at that
moment in that object are edit functions.

144
00:07:58.798 --> 00:08:03.714
To edit this background node C++
feature if we want to do well

145
00:08:03.714 --> 00:08:06.279
what do we want to edit Charlie?

146
00:08:06.279 --> 00:08:08.454
&gt;&gt; Charlie: The port number.
&gt;&gt; Will Sentance: The port number.

147
00:08:08.454 --> 00:08:12.591
It doesn't default it would be nice, it
would be easier for me to sort introduce

148
00:08:12.591 --> 00:08:16.010
this concept if it defaulted to a port,
we have to set up our port.

149
00:08:17.020 --> 00:08:18.480
And that part we're gonna, so

150
00:08:18.480 --> 00:08:23.090
we're gonna use a lessen function
which is linked so to Node.

151
00:08:23.090 --> 00:08:29.180
Is it really a node functions or
node labels, labels for node features.

152
00:08:29.180 --> 00:08:34.572
And this one is a listen one,
we're gonna grab

153
00:08:34.572 --> 00:08:39.421
the listen function and pause it, 80.

154
00:08:39.421 --> 00:08:41.170
Who wants to be the lucky person?

155
00:08:41.170 --> 00:08:45.230
Who wants to come up here and
draw me a line in purple, for

156
00:08:45.230 --> 00:08:50.460
where this listen function is going
to actually have its consequence?

157
00:08:50.460 --> 00:08:56.914
Michael my friend, up you come, you're the
lucky to my favorite new interactive step.

158
00:08:56.914 --> 00:09:01.361
Give me a line were on the board
it's going to have an effect,

159
00:09:01.361 --> 00:09:04.168
this server don't listen function.

160
00:09:04.168 --> 00:09:05.531
See you doing.

161
00:09:05.531 --> 00:09:06.458
Here.

162
00:09:06.458 --> 00:09:07.778
&gt;&gt; Speaker 2: See, and there.

163
00:09:07.778 --> 00:09:11.200
Fantastic fantastic Thank you, Michael.

164
00:09:14.790 --> 00:09:17.750
The server not listen is having
effect down in node, and

165
00:09:17.750 --> 00:09:19.790
it's setting what Charlie?

166
00:09:19.790 --> 00:09:21.340
&gt;&gt; Will Sentance: Setting the port number.

167
00:09:21.340 --> 00:09:24.700
&gt;&gt; Speaker 2: The port to 80,
which is then doing that right here and

168
00:09:24.700 --> 00:09:28.190
opening up our entry
point to our computer.

169
00:09:28.190 --> 00:09:31.990
And that little bit here, speaking to the
underlying network, is done by C++ code,

170
00:09:31.990 --> 00:09:35.880
but it's a specific library of,
it goes into node.

171
00:09:35.880 --> 00:09:37.628
What's the name of that library?

172
00:09:37.628 --> 00:09:38.572
&gt;&gt; Will Sentance: Libuv.

173
00:09:38.572 --> 00:09:41.720
&gt;&gt; Speaker 2: LibUV, there it is.

174
00:09:41.720 --> 00:09:44.690
Okay, well done everybody.

175
00:09:44.690 --> 00:09:45.730
Three things,

176
00:09:45.730 --> 00:09:50.710
one setup the actual HDP feature of
node that sets up the open socket.

177
00:09:50.710 --> 00:09:55.770
Two, several function to auto run
by passing it into create server,

178
00:09:55.770 --> 00:10:00.650
into node, in auto run if
inbound message comes in, three.

179
00:10:00.650 --> 00:10:04.630
Setup in the JavaScript label server,
an object full of,

180
00:10:04.630 --> 00:10:08.320
let's call them edit functions,
functions that are node edits.

181
00:10:08.320 --> 00:10:11.664
And when you run one of them,
as Michael rightly showed,

182
00:10:11.664 --> 00:10:16.333
it directly links you back to node to set
up the port to be 80 which affects it can

183
00:10:16.333 --> 00:10:18.445
use internals of either port 80.

184
00:10:18.445 --> 00:10:21.770
Excellent for Michael,
very good of him to come up as well.

