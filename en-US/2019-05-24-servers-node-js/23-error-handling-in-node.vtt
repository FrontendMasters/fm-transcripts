WEBVTT

1
00:00:03.318 --> 00:00:04.730
&gt;&gt; Will Sentance: Handling errors.

2
00:00:04.730 --> 00:00:07.230
We get errors in server side development.

3
00:00:07.230 --> 00:00:10.810
Look, I'm dealing with someone
else's computer, Michael's,

4
00:00:10.810 --> 00:00:12.961
trying to send messages to my computer.

5
00:00:12.961 --> 00:00:16.148
There's 1,000 things that could
go wrong in that process.

6
00:00:16.148 --> 00:00:20.590
We need to be able to handle errors.

7
00:00:20.590 --> 00:00:22.020
In server side development, we got errors.

8
00:00:22.020 --> 00:00:27.320
This is the server side, the client side,
the server side, we get errors.

9
00:00:27.320 --> 00:00:32.388
Understandable, we are interacting
with others' computers,

10
00:00:32.388 --> 00:00:35.159
good apostrophe placement there.

11
00:00:35.159 --> 00:00:38.252
[LAUGH]
&gt;&gt; Will Sentance: Little tip here,

12
00:00:38.252 --> 00:00:39.820
always just, whatever.

13
00:00:40.970 --> 00:00:45.073
With the computers of others,
put it that's how you figure out the,

14
00:00:45.073 --> 00:00:47.496
others' computers over the Internet.

15
00:00:47.496 --> 00:00:49.762
There's a lot of issues that could arise.

16
00:00:49.762 --> 00:00:51.538
How do we handle this?

17
00:00:51.538 --> 00:00:56.759
We need to understand better how our

18
00:00:56.759 --> 00:01:02.340
background HTTP feature is working.

19
00:01:02.340 --> 00:01:06.820
Right now it only auto triggers
doOnIncoming, when the message comes in.

20
00:01:06.820 --> 00:01:11.090
But what if we get a corrupt
request message arriving?

21
00:01:11.090 --> 00:01:15.990
Do we want to look at it,
investigate it, and send something back?

22
00:01:15.990 --> 00:01:20.580
No, we want to look at it, but
log it, probably to a console, and

23
00:01:20.580 --> 00:01:22.570
see what error is at hand.

24
00:01:25.240 --> 00:01:27.680
That means we probably don't
wanna run this function.

25
00:01:27.680 --> 00:01:31.830
Wouldn't it be nice if we
could set up another function

26
00:01:31.830 --> 00:01:36.390
that will be the one that runs when
an error shows up, or a client error?

27
00:01:36.390 --> 00:01:38.075
The client is sending an error,

28
00:01:38.075 --> 00:01:41.530
a problematic URL,
corrupted data in some format.

29
00:01:42.550 --> 00:01:44.010
We wanna have a separate function.

30
00:01:44.010 --> 00:01:48.760
How can we indicate which
one we want to actually run?

31
00:01:48.760 --> 00:01:49.620
Turns out, people,

32
00:01:49.620 --> 00:01:53.850
there's a little piece of Node here
that I did not tell us about before.

33
00:01:53.850 --> 00:01:57.536
Which is that the auto run
function doOnIncoming,

34
00:01:57.536 --> 00:02:02.760
actually auto runs, let me rephrase that.

35
00:02:02.760 --> 00:02:07.220
When the inbound message arrives, it's
not automatically running this function.

36
00:02:07.220 --> 00:02:12.220
It actually sends out
a loud shout within Node.

37
00:02:12.220 --> 00:02:14.975
A message, they call it an event,

38
00:02:14.975 --> 00:02:20.395
just a word that gets shouted out,
broadcast, emitted, in Node.

39
00:02:20.395 --> 00:02:23.614
And that word that gets shouted out,
and this is a built-in word,

40
00:02:23.614 --> 00:02:24.774
we don't choose this.

41
00:02:24.774 --> 00:02:30.592
That word that gets shouted out
when a message arrives is, request.

42
00:02:30.592 --> 00:02:35.835
[SOUND] It shouts out request.

43
00:02:35.835 --> 00:02:41.015
And that is what triggers,
as someone awkwardly cleared their throat

44
00:02:41.015 --> 00:02:46.019
after that as an empathetic response
to my slightly strangled cry,

45
00:02:46.019 --> 00:02:48.850
that is what triggers this function.

46
00:02:50.710 --> 00:02:55.520
How do we tell Node that we want to have
this function triggered on that word

47
00:02:55.520 --> 00:02:58.060
that gets broadcast, flashed out?

48
00:02:58.060 --> 00:03:05.680
Well, we actually did that implicitly,
with passing doOnIncoming to createServer.

49
00:03:05.680 --> 00:03:11.160
That said, hey, Node, when you flash
out the word request run doOnIncoming.

50
00:03:11.160 --> 00:03:12.890
But we can actually also do it manually,
people.

51
00:03:12.890 --> 00:03:13.468
Check this out.

52
00:03:13.468 --> 00:03:18.781
Node will automatically send
out the appropriate event.

53
00:03:18.781 --> 00:03:23.319
These are the broadcast messages
that screams out within Node when

54
00:03:23.319 --> 00:03:25.110
the right thing happens.

55
00:03:25.110 --> 00:03:30.020
So in comes a message, it's a good one,
it's gonna flash out the word request.

56
00:03:30.020 --> 00:03:34.421
Now if we pass the function to
create server, that will actually,

57
00:03:34.421 --> 00:03:39.389
what it'll do is set, if you see word
request come in, run doOnIncoming.

58
00:03:39.389 --> 00:03:41.670
But we can actually also
set that up manually.

59
00:03:41.670 --> 00:03:45.670
Here, we're just gonna set up the create
with a server in the background.

60
00:03:45.670 --> 00:03:49.820
We're not going to pass doOnIncoming at
that moment, we're gonna do it manually.

61
00:03:49.820 --> 00:03:52.700
We're going to set up the server and

62
00:03:52.700 --> 00:03:57.699
then use another function,
that's another edit function.

63
00:03:57.699 --> 00:03:59.906
And we're gonna use auto run, and

64
00:03:59.906 --> 00:04:04.095
we're gonna pass it the word that
we know will be flashed out, and

65
00:04:04.095 --> 00:04:08.152
the function we want to auto run
on that word being flashed out.

66
00:04:08.152 --> 00:04:11.260
On request,
we want it to auto-run doOnIncoming.

67
00:04:11.260 --> 00:04:14.984
If we get an error message coming in,
though, a bad request,

68
00:04:14.984 --> 00:04:20.156
Node's gonna look at it and go uh-oh, and
it's not gonna flash out requests at all.

69
00:04:20.156 --> 00:04:22.669
It's not gonna broadcast
the word request within Node.

70
00:04:22.669 --> 00:04:24.929
It's not gonna emit the event.

71
00:04:24.929 --> 00:04:27.180
They all mean the same thing,
request within Node.

72
00:04:27.180 --> 00:04:31.060
It's gonna emit the event, what,
Michael, what is it likely to emit?

73
00:04:32.720 --> 00:04:34.830
What do you think it's gonna emit?

74
00:04:34.830 --> 00:04:37.160
What's the word, Sam,
that he's gonna flash out on error?

75
00:04:39.280 --> 00:04:40.630
&gt;&gt; Sam: Error.

76
00:04:40.630 --> 00:04:43.460
&gt;&gt; Will Sentance: Actually under the hood,
it does, but it packages up, Matt, as?

77
00:04:43.460 --> 00:04:44.100
&gt;&gt; Matt: Client error.

78
00:04:44.100 --> 00:04:44.950
&gt;&gt; Will Sentance: Client error.

79
00:04:44.950 --> 00:04:48.220
It's gonna flash out automatically
if we get an error coming in.

80
00:04:48.220 --> 00:04:50.810
And we'll see this all before,
we wouldn't worry.

81
00:04:50.810 --> 00:04:52.530
Client error.

82
00:04:52.530 --> 00:04:57.644
And we therefore need to say, if you
hear the word client error flash out,

83
00:04:57.644 --> 00:05:02.182
don't run doOnIncoming, run,
looks like we're gonna say it,

84
00:05:02.182 --> 00:05:05.746
run doOnError, and
that's what we're gonna do.

85
00:05:05.746 --> 00:05:07.885
And that's what we're gonna do.

86
00:05:07.885 --> 00:05:09.720
All right, here we go, people.

87
00:05:09.720 --> 00:05:13.118
We're gonna do it all from scratch again.

88
00:05:13.118 --> 00:05:19.294
So let's take a picture of these
extraordinary ramblings of a mad person.

89
00:05:19.294 --> 00:05:21.936
Okay, here, I don't want to use this.

90
00:05:21.936 --> 00:05:24.037
Here we go, folk, here we go.

91
00:05:24.037 --> 00:05:26.109
We're going to do it all from scratch.

92
00:05:26.109 --> 00:05:28.090
I'm gonna be calling on all of you.

93
00:05:28.090 --> 00:05:31.530
This is the last time, yeah,
I'm gonna rub my forehead, too.

94
00:05:31.530 --> 00:05:36.222
Exactly, William's right,
draining, exhausting, but

95
00:05:36.222 --> 00:05:39.350
if we get this down we're good for life.

96
00:05:39.350 --> 00:05:40.066
You saw this.

97
00:05:40.066 --> 00:05:43.930
You saw this in the challenge how it
already comes back to that auto run

98
00:05:43.930 --> 00:05:45.960
function, auto inserted data.

99
00:05:45.960 --> 00:05:48.325
Set up the background feature,
let's do it.

100
00:05:48.325 --> 00:05:52.431
After this, people, just so we know what's
coming, we're gonna use a different

101
00:05:52.431 --> 00:05:56.210
background feature from the computer,
the file system.

102
00:05:56.210 --> 00:06:01.162
And then the only last thing we've got to
cover is whether these auto run functions

103
00:06:01.162 --> 00:06:03.689
actually allow back in, at what moment.

104
00:06:03.689 --> 00:06:08.840
And that's going to introduce
us to the event loop, the cues.

105
00:06:08.840 --> 00:06:11.870
Some more live you v stuff, all to come.

106
00:06:11.870 --> 00:06:13.900
All right, here we go.

107
00:06:13.900 --> 00:06:16.260
We're still not quite done,
but it'll do, okay.

108
00:06:16.260 --> 00:06:21.457
So here we are, Twitter's computer that

109
00:06:21.457 --> 00:06:27.410
we're writing code for Twitter's computer.

110
00:06:27.410 --> 00:06:31.305
Then in orange was,
whose do we have this time?

111
00:06:31.305 --> 00:06:33.962
Charlie's computer.

112
00:06:33.962 --> 00:06:37.336
I'm gonna say, I can already start to
feel the tiredness of doing the same

113
00:06:37.336 --> 00:06:39.080
damn thing again and again.

114
00:06:39.080 --> 00:06:39.914
Okay, I can feel it.

115
00:06:39.914 --> 00:06:43.052
I'm gonna start doing the thing where
my head leans against the whiteboard.

116
00:06:43.052 --> 00:06:46.050
Excellent, Charlie's computer,
there it is.

117
00:06:46.050 --> 00:06:49.128
And now exactly as Andrew said,

118
00:06:49.128 --> 00:06:53.860
the computer,
&gt;&gt; Will Sentance: Internal features,

119
00:06:55.515 --> 00:06:57.987
&gt;&gt; Will Sentance: There they are.

120
00:06:57.987 --> 00:07:02.239
Now you might say, why do we just
not have these up here permanently?

121
00:07:02.239 --> 00:07:03.239
That's a good question.

122
00:07:07.291 --> 00:07:09.010
&gt;&gt; Will Sentance: That's the end of that,
that's a good question.

123
00:07:09.010 --> 00:07:14.598
All right, and
then we had Node C++ features,

124
00:07:14.598 --> 00:07:22.379
Node C++ features in the famous
color of Node Purple, all right?

125
00:07:22.379 --> 00:07:28.400
And then we had a JavaScript runtime.

126
00:07:28.400 --> 00:07:30.270
This bit up here is a JavaScript runtime.

127
00:07:30.270 --> 00:07:33.895
It's the place in which you
can run JavaScript code.

128
00:07:33.895 --> 00:07:36.817
Okay, perfect.

