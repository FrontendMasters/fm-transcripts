WEBVTT

1
00:00:00.431 --> 00:00:04.280
&gt;&gt; Will Sentance: We set it up, now,
let's use one of those methods,

2
00:00:04.280 --> 00:00:07.705
those functions,
that gives us edit access.

3
00:00:07.705 --> 00:00:09.098
Which one are we gonna use, Roman?

4
00:00:09.098 --> 00:00:11.371
Next, can you see?

5
00:00:11.371 --> 00:00:12.527
Before that one, Virginia?

6
00:00:12.527 --> 00:00:14.391
&gt;&gt; Virginia: Listen?
&gt;&gt; Will Sentance: Listen, let's use it.

7
00:00:14.391 --> 00:00:19.460
All right, let's first,
&gt;&gt; Will Sentance: Set up with listen,

8
00:00:19.460 --> 00:00:22.525
does it do anything
interesting in JavaScript?

9
00:00:22.525 --> 00:00:26.625
No, it's a function which
we grab from here that has

10
00:00:26.625 --> 00:00:31.479
an edit access to this HTTP and
therefore, this open socket.

11
00:00:31.479 --> 00:00:35.785
And it's going to do something in node,
and it's going to set port.

12
00:00:37.664 --> 00:00:39.205
&gt;&gt; Will Sentance: And that's what it does.

13
00:00:39.205 --> 00:00:47.552
Sets port to 80 which tells the computer's
network to open up at port 80.

14
00:00:47.552 --> 00:00:49.363
You're ready to receive measures why?

15
00:00:49.363 --> 00:00:53.923
Because whenever a browser opens a website
it sends a message it defaults to entering

16
00:00:53.923 --> 00:00:54.704
at port 80.

17
00:00:54.704 --> 00:00:58.914
Okay, so this may again,
see I'm sorry it's so repetitive.

18
00:00:58.914 --> 00:01:03.081
But it's just this, this is all that
node is and we have to get it right,

19
00:01:03.081 --> 00:01:05.385
otherwise we just lose it completely.

20
00:01:05.385 --> 00:01:09.169
Okay, but
we get to use another edit function,

21
00:01:09.169 --> 00:01:11.752
which one are we using now Michael?

22
00:01:11.752 --> 00:01:12.680
&gt;&gt; Michael: On.

23
00:01:12.680 --> 00:01:15.376
&gt;&gt; Will Sentance: On, here we go.

24
00:01:15.376 --> 00:01:20.004
We're going to take from
the server object the on function,

25
00:01:20.004 --> 00:01:24.995
which also has node edit functionality,
can edit the underlying

26
00:01:24.995 --> 00:01:29.365
instance of the HTTP server
that we've set up back here.

27
00:01:29.365 --> 00:01:32.340
Server.on.

28
00:01:33.649 --> 00:01:34.574
&gt;&gt; Will Sentance: And the way on works,

29
00:01:34.574 --> 00:01:37.152
and we figure this out by just
going to documentation node.

30
00:01:37.152 --> 00:01:42.206
But the way it works is,
actually, you know what?

31
00:01:42.206 --> 00:01:44.858
I'm gonna start off by saying,

32
00:01:44.858 --> 00:01:49.389
in the background here we
always have built in to node.

33
00:01:49.389 --> 00:01:55.400
The fact that if a message comes
in it will scream out request,

34
00:01:55.400 --> 00:01:57.722
that's always there.

35
00:01:57.722 --> 00:02:02.348
It would scream out request,
it will scream out client error,

36
00:02:02.348 --> 00:02:05.151
that's just built into node, okay?

37
00:02:05.151 --> 00:02:07.940
That was as soon as we set up the server,
it had these ready.

38
00:02:07.940 --> 00:02:12.019
But they've got nothing to happen
on them screaming it out right now,

39
00:02:12.019 --> 00:02:13.343
we need to set that up.

40
00:02:13.343 --> 00:02:16.255
And it is literally these words,
these are like keywords effectively,

41
00:02:16.255 --> 00:02:17.122
like node key words.

42
00:02:17.122 --> 00:02:21.742
And so we are going to set that up,
we're gonna say that if node you

43
00:02:21.742 --> 00:02:26.457
scream at request, run, auto run,
what function Sarah Rose?.

44
00:02:26.457 --> 00:02:29.913
If we scream at request and,
do on incoming, fantastic.

45
00:02:29.913 --> 00:02:30.727
Thank you.

46
00:02:30.727 --> 00:02:32.698
Do on incoming, there it is.

47
00:02:37.339 --> 00:02:39.355
&gt;&gt; Will Sentance: What's
this gonna set up?

48
00:02:39.355 --> 00:02:44.298
In node it's going to take this word,

49
00:02:44.298 --> 00:02:49.395
and this function, and set up down here

50
00:02:49.395 --> 00:02:54.347
a more nuanced auto running process.

51
00:02:54.347 --> 00:03:00.379
It's gonna say, if you get the word
request screened out from node,

52
00:03:00.379 --> 00:03:03.506
then auto run what function, Sam?

53
00:03:03.506 --> 00:03:04.370
&gt;&gt; Sam: DoOnIncoming.

54
00:03:04.370 --> 00:03:07.628
&gt;&gt; Will Sentance: DoOnIncoming.

55
00:03:07.628 --> 00:03:08.846
Fantastic from Sam.

56
00:03:10.218 --> 00:03:12.236
&gt;&gt; Will Sentance: There it is.

57
00:03:12.236 --> 00:03:16.027
Okay, good, I mean, it's very
similar to what we've seen before,

58
00:03:16.027 --> 00:03:17.522
but now we did it manually.

59
00:03:17.522 --> 00:03:21.109
We could have actually paused to one and
coming directly into create server, and

60
00:03:21.109 --> 00:03:24.324
it would have put request and do on
incoming in the background, set up for

61
00:03:24.324 --> 00:03:25.241
us automatically.

62
00:03:25.241 --> 00:03:27.869
The only thing that pauses each
grade server means it didn't

63
00:03:27.869 --> 00:03:31.233
have the request in there, that's was
just done for us when we did it before.

64
00:03:31.233 --> 00:03:32.831
Now we're taking more control.

65
00:03:32.831 --> 00:03:36.221
And we've taken more control so we don't
know how it actually works under hood.

66
00:03:36.221 --> 00:03:41.950
As it turns out that these messages get
flashed out also in interesting times.

67
00:03:41.950 --> 00:03:46.287
Including if you get an error object,
corrupted amount message,

68
00:03:46.287 --> 00:03:48.928
you get different message flashed out.

69
00:03:48.928 --> 00:03:52.072
Different events, so
say it did include events and

70
00:03:52.072 --> 00:03:57.351
they're emitted a different event emitted
and events have names the names request.

71
00:03:57.351 --> 00:04:00.465
I can prefer to consider my
messages within node that

72
00:04:00.465 --> 00:04:04.865
are flashed out at certain times
automatically when something happens.

73
00:04:04.865 --> 00:04:06.977
Let's have a next one.

74
00:04:06.977 --> 00:04:12.143
Server door on, client error and

75
00:04:12.143 --> 00:04:16.387
we're passing this time,

76
00:04:16.387 --> 00:04:20.638
which function Virginia?

77
00:04:20.638 --> 00:04:22.504
&gt;&gt; Virginia: DoOnError.
&gt;&gt; Will Sentance: DoOnError.

78
00:04:22.504 --> 00:04:24.277
Excellent, thank you Virginia.

79
00:04:24.277 --> 00:04:25.925
It was funny saying my sister's name.

80
00:04:25.925 --> 00:04:29.052
All right, she was the sister that
was closest in age to me growing up,

81
00:04:29.052 --> 00:04:30.378
I have four younger sisters.

82
00:04:30.378 --> 00:04:37.221
She was one who was as that picture
at the start of with my background.

83
00:04:37.221 --> 00:04:39.847
Yeah, she was the she's
working a very cool stuff.

84
00:04:39.847 --> 00:04:42.481
She works in the government,
working on Brexit.

85
00:04:42.481 --> 00:04:44.855
No, she stopped doing Brexit
she was too depressing.

86
00:04:44.855 --> 00:04:47.007
So now she works on environmental policy,

87
00:04:47.007 --> 00:04:50.969
which she's also notice environmental
policy policy when Brexit happened.

88
00:04:50.969 --> 00:04:53.489
So every piece of the government became.

89
00:04:53.489 --> 00:04:56.022
Okay, Brexit, there you go,
that's my political commentary.

90
00:04:56.022 --> 00:04:56.944
Nicely neutral.

91
00:04:56.944 --> 00:05:00.917
Everyone is exhausted by Brexit,
everybody, any person of any position.

92
00:05:00.917 --> 00:05:04.878
No, yeah, that's something we
can all universally agree on.

93
00:05:04.878 --> 00:05:07.974
All right, so this one, is this on method,

94
00:05:07.974 --> 00:05:11.927
which doing anything that
interesting in JavaScript?

95
00:05:11.927 --> 00:05:14.699
No, I did my answers has no voice,
so he need to say no.

96
00:05:14.699 --> 00:05:16.921
Good job Rich.

97
00:05:16.921 --> 00:05:20.181
All right,
&gt;&gt; Will Sentance: And there it is,

98
00:05:20.181 --> 00:05:25.520
it's instead doing stuff a note is
grabbing that word and saying, hey,

99
00:05:25.520 --> 00:05:31.050
node if you send out the flash message
the event emitted is called an error.

100
00:05:31.050 --> 00:05:35.694
Because you notice the inbound
requests message is corrupted,

101
00:05:35.694 --> 00:05:38.883
then please run, what function Virginia?

102
00:05:38.883 --> 00:05:40.107
&gt;&gt; Virginia: DoOnError.

103
00:05:40.107 --> 00:05:45.339
&gt;&gt; Will Sentance: DoOnError,
fantastic, doOnError.

104
00:05:45.339 --> 00:05:47.032
And there it is.

105
00:05:48.375 --> 00:05:50.881
&gt;&gt; Will Sentance: So
not radically different, but

106
00:05:50.881 --> 00:05:56.442
we've now introduced a major feature
of node, that of the event system.

107
00:05:56.442 --> 00:06:01.058
But what it does, I guess is gives
a bit more nuance to how our auto-run

108
00:06:01.058 --> 00:06:03.492
functions actually end up running.

109
00:06:03.492 --> 00:06:05.887
It depends on which event
triggers which auto-run function.

110
00:06:05.887 --> 00:06:07.258
And we've got to take control of that.

