WEBVTT

1
00:00:00.000 --> 00:00:04.080
&gt;&gt; Scott Moss: So for getMany, I don't
know, if we look at the test, it says,

2
00:00:04.080 --> 00:00:07.193
finds an array of docs by
an authenticated user.

3
00:00:07.193 --> 00:00:10.680
Okay, so what we can do is,

4
00:00:10.680 --> 00:00:14.934
we'll just say, docs = await.

5
00:00:14.934 --> 00:00:18.927
And we know getMany we can do model.find.

6
00:00:18.927 --> 00:00:23.568
And we wanna get it by the user,
which will be createdBy, And

7
00:00:23.568 --> 00:00:27.671
the user, excuse me,
is gonna be on req.user.id.

8
00:00:30.615 --> 00:00:32.015
&gt;&gt; Scott Moss: And then we'll say .exec.

9
00:00:35.503 --> 00:00:44.959
&gt;&gt; Scott Moss: And then we'll say
res.status(200).json([data: docs}.

10
00:00:48.760 --> 00:00:51.730
&gt;&gt; Scott Moss: And the reason I put data
here is like cuz that's what the test is

11
00:00:51.730 --> 00:00:52.415
looking for.

12
00:00:52.415 --> 00:00:56.990
[LAUGH] But no, it's a really good idea
to like namespace your responses from

13
00:00:56.990 --> 00:00:59.277
the server with some field on them, so

14
00:00:59.277 --> 00:01:03.226
your client knows that the data's
always gonna be on this field.

15
00:01:03.226 --> 00:01:08.544
Cuz if you just send back just the raw
thing like this, like for instance, docs.

16
00:01:08.544 --> 00:01:09.465
It's not socs.

17
00:01:09.465 --> 00:01:13.312
[LAUGH] Docs.

18
00:01:13.312 --> 00:01:15.439
Okay, if I send back docs like this,
that's an array.

19
00:01:15.439 --> 00:01:17.305
And then up here I sent back doc,
that's an object.

20
00:01:17.305 --> 00:01:19.448
Those are two different
types of data structures.

21
00:01:19.448 --> 00:01:21.873
And now the front end's gotta
check to see which one's which.

22
00:01:21.873 --> 00:01:27.997
So it's better just to always send back
the right, to send back a namespace.

23
00:01:27.997 --> 00:01:29.597
Always like to name place it with data.

24
00:01:29.597 --> 00:01:31.522
So always send an object that has data,
and

25
00:01:31.522 --> 00:01:35.008
then the result of the operation that
you want is always on the data property.

26
00:01:35.008 --> 00:01:36.816
And this allows you to
do other things too.

27
00:01:36.816 --> 00:01:39.946
If you wanted to also send back detailed
error messages, you could say errors.

28
00:01:39.946 --> 00:01:43.129
And if you have no list of detailed
error messages that you can display on

29
00:01:43.129 --> 00:01:44.678
the screen for some other reason.

30
00:01:44.678 --> 00:01:49.076
So it's just namespacing like the result
of the information that you asked for,

31
00:01:49.076 --> 00:01:53.096
versus just throwing the whole result
of the database as the root object.

32
00:01:53.096 --> 00:01:54.696
You kinda lose out on
a lot of free stuff there.

33
00:01:54.696 --> 00:01:56.704
So just pick a namespace.

34
00:01:56.704 --> 00:02:01.133
I use data cuz that's what Graph Field
does, and I use Graph Field a lot, so

35
00:02:01.133 --> 00:02:02.550
that's why I use that.

36
00:02:02.550 --> 00:02:09.867
Okay, so now if we run the test
&gt;&gt; Scott Moss: We're

37
00:02:09.867 --> 00:02:12.446
gonna see if this passed,
which it looks like it did.

38
00:02:12.446 --> 00:02:15.316
So cool, finds array of
documents by authenticated user.

39
00:02:15.316 --> 00:02:15.989
Got that.

