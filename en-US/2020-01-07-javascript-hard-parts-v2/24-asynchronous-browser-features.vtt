WEBVTT

1
00:00:00.160 --> 00:00:02.202
&gt;&gt; Will Sentance: Where does
JavaScript actually run?

2
00:00:02.202 --> 00:00:04.218
Where is it running its code?

3
00:00:04.218 --> 00:00:06.051
Peter, where's JavaScript running?

4
00:00:06.051 --> 00:00:07.663
&gt;&gt; Peter: Typically in a browser.

5
00:00:07.663 --> 00:00:08.316
&gt;&gt; Will Sentance: In the browser,

6
00:00:08.316 --> 00:00:10.562
yeah, we don't open an app
called JavaScript, right?

7
00:00:10.562 --> 00:00:17.116
We, run it in a browser we turn on,
now the browser is a remarkable creation.

8
00:00:17.116 --> 00:00:21.898
It has so much more than just
JavaScript in it, so let's just,

9
00:00:21.898 --> 00:00:25.712
we use a white pen here for
the JavaScript engine.

10
00:00:25.712 --> 00:00:31.228
As part of the blue,
the overall web browser,

11
00:00:31.228 --> 00:00:36.325
sort of say is, I can't draw the Firefox.

12
00:00:36.325 --> 00:00:41.624
There it is JavaScript, it doesn't run
in isolation, it has a ton of features

13
00:00:41.624 --> 00:00:47.107
in the web browser as well, what are the
other features that the web browser has?

14
00:00:47.107 --> 00:00:50.672
Adam, can you think of some other features
the web browser has that JavaScript

15
00:00:50.672 --> 00:00:51.381
does not have?

16
00:00:51.381 --> 00:00:53.672
&gt;&gt; Adam: Like dev tools?

17
00:00:53.672 --> 00:00:57.746
&gt;&gt; Will Sentance: Sure, yeah,
absolutely, honestly, yeah, dev tools,

18
00:00:57.746 --> 00:01:03.704
let's put it in dev tools, console, yeah,
absolutely, what other things, Matt?

19
00:01:03.704 --> 00:01:04.391
&gt;&gt; Matt: Web sockets?

20
00:01:04.391 --> 00:01:06.234
&gt;&gt; Will Sentance: Yeah, sure, sockets.

21
00:01:08.188 --> 00:01:09.930
&gt;&gt; Will Sentance: What other thing?

22
00:01:09.930 --> 00:01:13.243
There are some really key,
two really key ones, Dan, you got one?

23
00:01:13.243 --> 00:01:16.129
Can Javascript speak to the Internet?

24
00:01:16.129 --> 00:01:18.360
Can it make network
requests over the Internet?

25
00:01:18.360 --> 00:01:22.051
No, JavaScript does not have
the ability to speak to the Internet,

26
00:01:22.051 --> 00:01:24.339
that is not a feature inside JavaScript.

27
00:01:24.339 --> 00:01:27.877
So you know what,
the browser does, though,

28
00:01:27.877 --> 00:01:30.976
the browser can make network requests.

29
00:01:30.976 --> 00:01:36.303
The browser is this incredible app, that's
full of all of these, it's a composite

30
00:01:36.303 --> 00:01:41.342
of a JavaScript engine that this bit,
plus a ton of non-JavaScript features.

31
00:01:41.342 --> 00:01:46.064
One of which is the ability for
it to make network requests,

32
00:01:46.064 --> 00:01:50.510
what other thing does
JavaScript definitely not have?

33
00:01:50.510 --> 00:01:51.350
&gt;&gt; Matt: Rendering.

34
00:01:51.350 --> 00:01:55.849
&gt;&gt; Will Sentance: Yeah, rendering,
exactly, is that in JavaScript?

35
00:01:55.849 --> 00:02:01.249
No, that's in the web browser,
our HTML DOM,

36
00:02:01.249 --> 00:02:08.815
that is our model, our simplified
version of what's on the page.

37
00:02:08.815 --> 00:02:11.927
That's our simplified version
of what's on the page so

38
00:02:11.927 --> 00:02:15.381
that we can interact with it, so
we can add stuff to that page.

39
00:02:15.381 --> 00:02:20.127
Document Object Model, it's a model,
a simplified version in an object

40
00:02:20.127 --> 00:02:24.884
style format of what's on the document,
which is the visual of the page.

41
00:02:24.884 --> 00:02:28.948
Yeah, all these features we
cannot code for directly,

42
00:02:28.948 --> 00:02:33.711
they're written in whatever
the browser is written, in C++.

43
00:02:33.711 --> 00:02:37.262
Or whatever other languages,
the browser is written in,

44
00:02:37.262 --> 00:02:39.226
do we write for these directly?

45
00:02:39.226 --> 00:02:44.999
But people, we do have a programming
language that lets us use these features.

46
00:02:44.999 --> 00:02:49.761
And that programming language is
JavaScript, but we're not actually gonna

47
00:02:49.761 --> 00:02:54.389
find any of these features in JavaScript,
so how do we interact with them?

48
00:02:54.389 --> 00:02:56.937
How do we interface with them?

49
00:02:56.937 --> 00:03:00.903
In JavaScript we get a bunch of
what I call facade functions, and

50
00:03:00.903 --> 00:03:03.408
it's not catching on, I'll be clear.

51
00:03:03.408 --> 00:03:07.976
This phrase is not catching on, a bunch
of what's called, I call them facade

52
00:03:07.976 --> 00:03:12.149
functions, they are functions that
look like they're JavaScript.

53
00:03:12.149 --> 00:03:19.870
But are actually fronts, facades, for
web browser features and you know what?

54
00:03:19.870 --> 00:03:23.640
One of those web browser
features believe it or not,

55
00:03:23.640 --> 00:03:29.741
JavaScript doesn't even have the feature
of a timer that's in the web browser too.

56
00:03:29.741 --> 00:03:33.546
And we get labels for
each of these features,

57
00:03:33.546 --> 00:03:40.670
let's hope are perfectly aligned to
the name, that'll be very nice, right?

58
00:03:40.670 --> 00:03:44.708
If they were perfectly
aligned to the name instead,

59
00:03:44.708 --> 00:03:48.763
Kayla what do you think our label for
timer would be?

60
00:03:48.763 --> 00:03:50.687
&gt;&gt; Kayla: Timer?

61
00:03:50.687 --> 00:03:54.792
&gt;&gt; Will Sentance: That makes sense, that
would be a perfect name, but in reality,

62
00:03:54.792 --> 00:03:59.567
what label do we get in JavaScript in
order to start a timer to delay a function

63
00:03:59.567 --> 00:04:00.107
Kayla?

64
00:04:00.107 --> 00:04:01.919
&gt;&gt; Kayla: Set time out.

65
00:04:01.919 --> 00:04:05.635
&gt;&gt; Will Sentance: Set time out,
that's it, set time out is not doing

66
00:04:05.635 --> 00:04:10.044
anything of interest in JavaScript
instead it's a label for

67
00:04:10.044 --> 00:04:12.652
the timer built to the web browser.

68
00:04:12.652 --> 00:04:17.363
Braden, what's our label for the HTML DOM,
hopefully it's like DOM, right?

69
00:04:17.363 --> 00:04:18.487
&gt;&gt; Braydon: That would be nice.

70
00:04:18.487 --> 00:04:19.571
&gt;&gt; Will Sentance: That'd be nice,
what is it instead?

71
00:04:19.571 --> 00:04:20.536
&gt;&gt; Braydon: I don't know.

72
00:04:20.536 --> 00:04:24.171
&gt;&gt; Will Sentance: Well, what label do we
have in JavaScript whenever we wanna use

73
00:04:24.171 --> 00:04:28.768
a kind of collection of features of the
web browser that allow us to display, and

74
00:04:28.768 --> 00:04:31.119
render, and display stuff on the page?

75
00:04:31.119 --> 00:04:31.741
&gt;&gt; Peter: Document.

76
00:04:31.741 --> 00:04:33.520
&gt;&gt; Will Sentance: Document,
Peter's spot on.

77
00:04:33.520 --> 00:04:36.691
Exactly, Document, so
whenever you see Document,

78
00:04:36.691 --> 00:04:39.301
that ain't doing anything in JavaScript.

79
00:04:39.301 --> 00:04:43.649
It's a command to go and use a feature of
the web browser, that's kind of crazy.

80
00:04:43.649 --> 00:04:46.982
Todd, what do we have as our label for
the feature of the web

81
00:04:46.982 --> 00:04:50.809
browser that lets us do network
request speaking to the Internet?

82
00:04:50.809 --> 00:04:52.224
Anyone know?

83
00:04:52.224 --> 00:04:54.738
Dan you know?

84
00:04:54.738 --> 00:04:56.010
&gt;&gt; Dan: Is it get?

85
00:04:56.010 --> 00:04:59.179
&gt;&gt; Will Sentance: Not quite,
that's the one which we used to kind of,

86
00:04:59.179 --> 00:05:01.350
that was a wrapper for the feature.

87
00:05:01.350 --> 00:05:02.871
&gt;&gt; Dan: TCP UDP.

88
00:05:02.871 --> 00:05:04.000
&gt;&gt; Will Sentance: What did we have?
&gt;&gt; Dan: TCP UDP.

89
00:05:04.000 --> 00:05:04.787
&gt;&gt; Will Sentance: Not directly.

90
00:05:04.787 --> 00:05:06.038
&gt;&gt; Kayla: Fetch?

91
00:05:06.038 --> 00:05:08.830
&gt;&gt; Will Sentance: Fetch, Kayla's spot on,
that's our sort of newer name for

92
00:05:08.830 --> 00:05:12.020
it, but we used to have a different
name for it, everyone remember?

93
00:05:12.020 --> 00:05:13.128
&gt;&gt; Kayla: AJAX.

94
00:05:13.128 --> 00:05:15.841
&gt;&gt; Will Sentance: No, it was something
it was xhr, everyone remember xhr?

95
00:05:15.841 --> 00:05:22.453
Though, by the way, look how consistent
our names are with the underlying feature,

96
00:05:22.453 --> 00:05:26.890
okay, console,
this one's a little bit more reasonable,

97
00:05:26.890 --> 00:05:29.764
what's the label for console, Jeff?

98
00:05:29.764 --> 00:05:31.056
&gt;&gt; Jeff: Console.

99
00:05:31.056 --> 00:05:36.105
&gt;&gt; Will Sentance: Console, hold on Jeff,
excellent, Jeff landed that perfectly,

100
00:05:36.105 --> 00:05:42.053
and we have other features here like
local storage, IndexedDB, all of those.

101
00:05:42.053 --> 00:05:47.149
So local storage's name is local storage,
so they got better at it over time.

102
00:05:47.149 --> 00:05:50.016
They definitely got better at
naming the JavaScript label for

103
00:05:50.016 --> 00:05:51.676
the web browser feature over time.

104
00:05:51.676 --> 00:05:56.025
But in the early days, I don't know
these were not the smartest, whatever.

105
00:05:56.025 --> 00:06:00.978
Alright, so folk,
that means a big part of what we're

106
00:06:00.978 --> 00:06:05.727
doing in JavaScript isn't
even JavaScript at all.

107
00:06:05.727 --> 00:06:10.210
Meaning I'm gonna need to expand
my platform of JavaScript on here,

108
00:06:10.210 --> 00:06:14.403
taking it from being just those
big three pieces in JavaScript.

109
00:06:14.403 --> 00:06:17.223
Being the big three pieces in JavaScript,
plus,

110
00:06:17.223 --> 00:06:22.072
I'm gonna have everything below here be
stuff that's happening in the web browser.

111
00:06:22.072 --> 00:06:29.398
I'm gonna do in blue, and when you see
blue, it represents the web browser and

112
00:06:29.398 --> 00:06:35.173
not anything to do with JavaScript,
okay folks, here we go.

113
00:06:35.173 --> 00:06:39.828
It's a board wipe downtime, so turn to
your partner, turn to your neighbor and

114
00:06:39.828 --> 00:06:43.592
start trying to navigate and
verbalize what this code is doing.

115
00:06:43.592 --> 00:06:47.610
Give it a shot, we don't have
the tools yet to do this, but

116
00:06:47.610 --> 00:06:53.116
given that we know set timeout, is gonna
be a label for timer in the web browser.

117
00:06:53.116 --> 00:06:55.875
Have a think what might be happening here,
and

118
00:06:55.875 --> 00:06:58.794
have a think about how
one might explain Braden.

119
00:06:58.794 --> 00:07:03.556
And Ethan's instincts around what the
order of execution here might be, try and

120
00:07:03.556 --> 00:07:04.544
get ahead of it.

