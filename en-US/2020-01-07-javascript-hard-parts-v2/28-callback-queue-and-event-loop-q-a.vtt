WEBVTT

1
00:00:00.100 --> 00:00:02.140
&gt;&gt; Will Sentance: Let's go to Dan,
go ahead man.

2
00:00:02.140 --> 00:00:04.940
&gt;&gt; Dan: Tell me if I'm getting in the
weeds, but back to the last example where

3
00:00:04.940 --> 00:00:09.290
we have the thousand millisecond
timeout and it's just waiting.

4
00:00:09.290 --> 00:00:11.790
That event loop is just checking.

5
00:00:12.850 --> 00:00:15.750
Is there anything on the call sack for
that entire second?

6
00:00:15.750 --> 00:00:17.970
&gt;&gt; Will Sentance: Yeah, absolutely.

7
00:00:17.970 --> 00:00:23.835
The way it's gonna do it is continue
to assess if there's any code to run,

8
00:00:23.835 --> 00:00:28.565
and then each loop behind the scenes,
it's comparing what

9
00:00:28.565 --> 00:00:33.213
the timer says is the wait time
to what is the current time.

10
00:00:33.213 --> 00:00:36.858
And it's gonna constantly check, is enough
time passed, and as soon as it has,

11
00:00:36.858 --> 00:00:39.017
it's gonna grab that function and
execute it.

12
00:00:39.017 --> 00:00:42.587
&gt;&gt; Dan: Is that event loop running
constantly as long as your browser

13
00:00:42.587 --> 00:00:43.151
is open?

14
00:00:43.151 --> 00:00:45.410
&gt;&gt; Will Sentance: As long as our
application's running, yeah, yeah.

15
00:00:45.410 --> 00:00:46.400
Peter, go ahead.

16
00:00:46.400 --> 00:00:50.750
&gt;&gt; Peter: If, Lock for one second
was instead, running our loop for

17
00:00:50.750 --> 00:00:54.030
500 milliseconds and
then called Portillo and ran for

18
00:00:54.030 --> 00:00:57.156
another 500 milliseconds,
would we get that hello?

19
00:00:57.156 --> 00:01:01.750
And then @me first, and
then when the timer ran out another hello?

20
00:01:01.750 --> 00:01:03.190
&gt;&gt; Will Sentance: Well if
we are calling print hello,

21
00:01:03.190 --> 00:01:06.000
you say we're calling printHello
inside of blockFor1Sec.

22
00:01:06.000 --> 00:01:06.760
&gt;&gt; Peter: Yeah,
&gt;&gt; Will Sentance: Yeah, absolutely.

23
00:01:06.760 --> 00:01:10.190
So if we were calling printHello
in the conventional sense,

24
00:01:10.190 --> 00:01:13.570
and it's did we command
that print hello to run?

25
00:01:13.570 --> 00:01:18.180
So it's inside a blockFor1Sec,
we'd written call printHello ourselves.

26
00:01:18.180 --> 00:01:22.119
Well that's synchronous code, that's
regular, all your typical global code,

27
00:01:22.119 --> 00:01:24.700
not global code, code inside blockFor1Sec.

28
00:01:24.700 --> 00:01:26.400
That will just run when we tell it to run.

29
00:01:27.430 --> 00:01:31.290
This is when we, did we put any
parens on the end of printHello?

30
00:01:31.290 --> 00:01:32.600
With set timeout now.

31
00:01:32.600 --> 00:01:38.380
We're going to rely with set timeout
on that function to be able to run for

32
00:01:38.380 --> 00:01:41.735
us and we need very, very strict
rules when that can be auto run.

