WEBVTT

1
00:00:00.310 --> 00:00:03.590
All right, so
now we have the last part of this,

2
00:00:03.590 --> 00:00:06.632
which is the making this responsive piece.

3
00:00:06.632 --> 00:00:07.473
All right and

4
00:00:07.473 --> 00:00:12.303
the way we're gonna break this up was
we're gonna break it into two parts.

5
00:00:12.303 --> 00:00:16.669
So first of all, we're simply going
to make this go side by side.

6
00:00:16.669 --> 00:00:18.631
We have an image and we have our text.

7
00:00:18.631 --> 00:00:22.536
That's all we need to do,
with the image next to the text.

8
00:00:22.536 --> 00:00:27.352
And so to do that, there's a lot of
different methodologies out there for

9
00:00:27.352 --> 00:00:30.159
putting two things side by side like this.

10
00:00:30.159 --> 00:00:33.722
One methodology would be to use Flexbox,
and

11
00:00:33.722 --> 00:00:38.237
that would work just fine in
this particular situation.

12
00:00:38.237 --> 00:00:41.842
The other approach is called CSS Grid, and

13
00:00:41.842 --> 00:00:47.367
this is an even newer technology for
doing layouts than Flexbox.

14
00:00:47.367 --> 00:00:51.556
It seems to me that in a lot of coding
boot camps, we spend a lot of time on

15
00:00:51.556 --> 00:00:55.390
Flexbox, which is often leveraged
by Bootstrap and Tailwind.

16
00:00:55.390 --> 00:00:59.842
And lots of other responsive design
frameworks make heavy use of Flexbox, and

17
00:00:59.842 --> 00:01:01.942
Grid's sort of this afterthought.

18
00:01:01.942 --> 00:01:04.092
Now you can also use Grid, [LAUGH] and

19
00:01:04.092 --> 00:01:08.902
we don't really differentiate well
between these two layout methodologies.

20
00:01:08.902 --> 00:01:11.648
But I will tell you this right now,

21
00:01:11.648 --> 00:01:16.856
one of the things that Grid does
that Flexbox does not do is Grid can

22
00:01:16.856 --> 00:01:22.174
overlap two cells on top of each
other,.Flexbox cannot do that.

23
00:01:22.174 --> 00:01:27.069
The best Flexbox can do is put
two cells next to each other, but

24
00:01:27.069 --> 00:01:29.154
they will never overlap.

25
00:01:29.154 --> 00:01:33.645
Given that we are headed in this direction
of eventually overlapping these two

26
00:01:33.645 --> 00:01:36.298
particular items,
we are going to use Grid for

27
00:01:36.298 --> 00:01:39.511
our layout because then we
can overlap these two items.

28
00:01:39.511 --> 00:01:42.888
And we can do that very,
very efficiently with Grid.

29
00:01:42.888 --> 00:01:49.196
So, if you don't know Grid, that's okay, I
will sort of talk you through the process.

30
00:01:49.196 --> 00:01:54.891
And it's covered extensively in my course
here at Front End Masters on Flexbox and

31
00:01:54.891 --> 00:01:55.561
on Grid.

32
00:01:55.561 --> 00:01:59.801
So the first thing that we need
to do before we do anything else,

33
00:01:59.801 --> 00:02:04.762
is we need to manage our parents and
our children when it comes to our HTML.

34
00:02:04.762 --> 00:02:07.444
And because the way
these layouts are done,

35
00:02:07.444 --> 00:02:12.748
we're going to have some kind of parent,
where we're going to declare display Grid.

36
00:02:12.748 --> 00:02:17.978
Here we're gonna declare, display Grid.

37
00:02:17.978 --> 00:02:23.210
We've previously been doing display Flex,
now we're going to do display gGrid.

38
00:02:23.210 --> 00:02:28.948
Then we need to have, as children of
that particular element, only two items.

39
00:02:28.948 --> 00:02:32.932
We need to have all of our text,
that's one item, and our image,

40
00:02:32.932 --> 00:02:37.578
that's the second item, that way we
can manipulate those things in space.

41
00:02:37.578 --> 00:02:40.681
So given the fact that we have
lots of text, we have headings and

42
00:02:40.681 --> 00:02:43.787
we have paragraphs, and
we have lists and all kinds of things,

43
00:02:43.787 --> 00:02:47.445
we're gonna need some sort of element
to group all of that text together.

44
00:02:47.445 --> 00:02:52.115
So we have one thing that we can move
in space with all that text as a unit.

45
00:02:52.115 --> 00:02:53.396
And then we have the image,

46
00:02:53.396 --> 00:02:56.146
that's the other unit that
we're going to move in space.

47
00:02:56.146 --> 00:02:59.007
So let's just take a quick
peek at what we're doing here.

48
00:02:59.007 --> 00:03:04.394
There's our image inside of the article,
so we'll have our article become

49
00:03:04.394 --> 00:03:09.358
our parent, and then what we need to
do is wrap around all of this text,

50
00:03:09.358 --> 00:03:12.832
we need to wrap a div around it and
give it a class.

51
00:03:12.832 --> 00:03:19.211
So then what we'll have is the article and
its two children, the image and the text.

52
00:03:19.211 --> 00:03:22.842
So the way to set that up is as follows.

53
00:03:22.842 --> 00:03:26.247
Right here inside of
the HTML to start with,

54
00:03:26.247 --> 00:03:31.045
right after the article,
we'll say div with a class of text.

55
00:03:37.283 --> 00:03:44.965
And you can indent everything accordingly,
And then slash div.

56
00:03:47.527 --> 00:03:51.981
Okay, so just to one of the things you
can do here inside of code pan is you

57
00:03:51.981 --> 00:03:53.708
can collapse bits of code.

58
00:03:53.708 --> 00:03:57.354
So I'm gonna do that now just so
this looks a little bit clearer to you.

59
00:03:57.354 --> 00:04:01.543
So you have your article,
there's your div with your class of text,

60
00:04:01.543 --> 00:04:03.650
all the text is inside of that div.

61
00:04:03.650 --> 00:04:07.462
And then after that we have our image,
okay?

62
00:04:07.462 --> 00:04:09.807
So that's the first thing to do.

63
00:04:09.807 --> 00:04:14.633
Once that's in place, then we can jump
into our CSS and write some code for this.

64
00:04:17.194 --> 00:04:22.018
So what we're gonna say
here then Is at media,

65
00:04:24.953 --> 00:04:30.207
Min width, 550 pixels.

66
00:04:30.207 --> 00:04:34.236
So basically,
if the screen is 550 pixels wide or wider,

67
00:04:34.236 --> 00:04:37.949
then these are the styles
that are gonna take priority.

68
00:04:37.949 --> 00:04:41.108
What we have here right now,
this is awesome,

69
00:04:41.108 --> 00:04:46.295
that is what we wanna see on a mobile
device, phone, a phone type of screen.

70
00:04:46.295 --> 00:04:50.813
This is what we're going to see, now
we're gonna write these styles just for

71
00:04:50.813 --> 00:04:51.658
the desktop.

72
00:04:51.658 --> 00:04:56.560
And here we're going to say article, And

73
00:04:56.560 --> 00:05:00.810
we're going to say display Grid.

74
00:05:00.810 --> 00:05:04.611
Okay, nothing will happen, that's okay.

75
00:05:04.611 --> 00:05:09.538
All right, the thing about Grid, if you've
not worked with it before, Grid not

76
00:05:09.538 --> 00:05:14.557
only works in one dimension like Flexbox,
where you have a whole series of boxes.

77
00:05:14.557 --> 00:05:17.958
Grid works in two dimensions,
we have columns and we have rows.

78
00:05:17.958 --> 00:05:22.880
So what I want to have is I wanna
have my two items side by side.

79
00:05:22.880 --> 00:05:27.174
So I wanna have one column that has the
image, one column that has the text, and

80
00:05:27.174 --> 00:05:30.970
I want those side by side and
they're basically about the same size.

81
00:05:30.970 --> 00:05:34.489
So the way that I do that is I say Grid,

82
00:05:34.489 --> 00:05:39.384
hyphen template,
hyphen columns, one fr one fr.

83
00:05:39.384 --> 00:05:42.960
Now, that's pretty weird-looking notation,
what does that mean?

84
00:05:42.960 --> 00:05:46.708
So what that means is we're
going to have two columns.

85
00:05:46.708 --> 00:05:49.896
Hello Grid,
we're gonna have two columns, and

86
00:05:49.896 --> 00:05:53.560
I want them to be one fraction
of the screen-wide each.

87
00:05:53.560 --> 00:05:57.094
Okay, so you do the math,
Grid, I don't care,

88
00:05:57.094 --> 00:06:02.724
the screen is two fractions wide, and
each item gets one of those fractions.

89
00:06:02.724 --> 00:06:07.499
Now as you can see here we immediately
have a problem, and that is that this

90
00:06:07.499 --> 00:06:12.366
image is taking up most of that width
of the screen, why isn't it scaling?

91
00:06:12.366 --> 00:06:17.617
The reason why is up here
in our generic styles,

92
00:06:17.617 --> 00:06:23.013
so I'm gonna go up here around line 56,
57.

93
00:06:23.013 --> 00:06:28.198
Our images are currently displaying at the
widths that they are natively assigned.

94
00:06:28.198 --> 00:06:31.821
That's how big the images, and so
that's how big it is on the screen.

95
00:06:31.821 --> 00:06:39.243
We are gonna change that,
we're gonna say image has a width of 100%.

96
00:06:39.243 --> 00:06:44.138
And this is a small hack that will allow
your image to scale on the screen.

97
00:06:44.138 --> 00:06:49.721
So it will become larger, it will become
smaller depending on where it is in space.

98
00:06:49.721 --> 00:06:52.394
And so now that I've done that,

99
00:06:52.394 --> 00:06:57.642
now those two things are a little
bit more evenly sized, okay?

100
00:06:59.554 --> 00:07:03.502
So very fake responsive images.

101
00:07:03.502 --> 00:07:09.737
All right, scroll back on
down to my other styles here.

102
00:07:09.737 --> 00:07:14.674
So continuing on a back around line 244,
continuing on with my

103
00:07:14.674 --> 00:07:19.269
article style here,
we can also give this a regular old gap.

104
00:07:19.269 --> 00:07:27.302
One rung and so that will give us the
space in between the image and the text.

105
00:07:27.302 --> 00:07:30.704
And one of the things that you might
notice about this is that we have these in

106
00:07:30.704 --> 00:07:31.516
the wrong order.

107
00:07:31.516 --> 00:07:35.523
What we wanna have is,
we wanna have the image on the left and

108
00:07:35.523 --> 00:07:37.054
the text on the right.

109
00:07:37.054 --> 00:07:39.225
So there's two solutions to this problem.

110
00:07:39.225 --> 00:07:41.969
One would be to switch
the order in the HTML.

111
00:07:41.969 --> 00:07:46.710
But the problem with that is if we switch
the order of the HTML, what will happen is

112
00:07:46.710 --> 00:07:50.503
that you will encounter the picture
first followed by the text.

113
00:07:50.503 --> 00:07:53.434
And what I'd like people to
do is see the text first and

114
00:07:53.434 --> 00:07:55.402
then the image on my mobile device.

115
00:07:55.402 --> 00:07:59.936
So that's not gonna be
appropriate solution here.

116
00:07:59.936 --> 00:08:03.690
Instead, what I'm going to do is I'm
gonna make use of the order property,

117
00:08:06.885 --> 00:08:14.348
And we can put that on text,
my class of text.

118
00:08:14.348 --> 00:08:21.589
And we'll say order 2, okay, so
that just flips those right over.

119
00:08:21.589 --> 00:08:23.935
So now we have the image on the left and

120
00:08:23.935 --> 00:08:26.826
the text on the right
because I said order 2.

121
00:08:26.826 --> 00:08:32.058
So by default the image doesn't have
an order property assigned to it,

122
00:08:32.058 --> 00:08:33.728
so it will come first.

123
00:08:33.728 --> 00:08:40.355
And then lastly,
I can say text align right.

124
00:08:40.355 --> 00:08:44.896
Because that's an inherited property,
that'll cascade through every all of

125
00:08:44.896 --> 00:08:48.215
the text that's there on
the right side of the screen, and

126
00:08:48.215 --> 00:08:50.875
everything will automatically shift right.

127
00:08:50.875 --> 00:08:54.254
Pretty awesome, except for
that HTML, CSS and

128
00:08:54.254 --> 00:08:57.812
SVG, which is still over
on the left-hand side.

129
00:08:57.812 --> 00:08:59.104
Why is that?

130
00:08:59.104 --> 00:09:02.785
Because that was our list that
we use Flexbox to display.

131
00:09:02.785 --> 00:09:08.640
And remember that we had that set to
have our justify content of Flex Start.

132
00:09:08.640 --> 00:09:10.691
And that's exactly what it's still doing.

133
00:09:10.691 --> 00:09:13.340
It's at the start of that particular row.

134
00:09:13.340 --> 00:09:20.210
So what we'll need to do in our
media query then is say here for

135
00:09:20.210 --> 00:09:25.870
projects UL,
our justify content will be Flex and

136
00:09:25.870 --> 00:09:31.957
just go to the end of the row
instead of the start of it.

137
00:09:36.000 --> 00:09:39.421
We're almost there, isn't this exciting?

138
00:09:39.421 --> 00:09:42.827
Projects look amazing.

139
00:09:42.827 --> 00:09:48.770
It's beautiful, the colors are beautiful,
the spacing is good, you can do this.

