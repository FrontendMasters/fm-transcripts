WEBVTT

1
00:00:00.000 --> 00:00:05.269
All right, so the next thing to do to get
this navbar looking a little bit better,

2
00:00:05.269 --> 00:00:08.464
let's work on some of the styling for
our links.

3
00:00:08.464 --> 00:00:10.829
So we're gonna go to a nav a,

4
00:00:10.829 --> 00:00:16.457
which will style all of the states
of our links at this point in time.

5
00:00:16.457 --> 00:00:21.849
And so that would be the unvisited links,
the visited links, it actually covers

6
00:00:21.849 --> 00:00:27.100
the hover state of these, and the focus
state of these, and the active state.

7
00:00:27.100 --> 00:00:31.066
So in case you're not clear what all
those things are, all right, of course,

8
00:00:31.066 --> 00:00:34.324
unvisited, you haven't visited the link,
visited you have.

9
00:00:34.324 --> 00:00:38.930
Hover, you're probably familiar with, that
would be your mouse is hovered over it,

10
00:00:38.930 --> 00:00:41.660
remember that there is no
hover on a mobile device.

11
00:00:41.660 --> 00:00:43.988
Focus might be when you're
not as familiar with.

12
00:00:43.988 --> 00:00:47.232
Focus is,
if you are tabbing through your web page,

13
00:00:47.232 --> 00:00:51.733
usually your browser by default puts
a box around whatever is selected,

14
00:00:51.733 --> 00:00:56.333
that's an accessibility thing,
again, and that's what focus is for.

15
00:00:56.333 --> 00:00:59.139
And then active,
that one is a real old school one,

16
00:00:59.139 --> 00:01:02.674
it used to be important back in
the day when we were all on dial up.

17
00:01:02.674 --> 00:01:07.309
That is the moment between the link is
clicked and before the next page loads,

18
00:01:07.309 --> 00:01:11.324
does the link change color so
that you know the next page is coming.

19
00:01:11.324 --> 00:01:15.871
As you might imagine on a 2400 baud modem,
it really makes a difference to know that

20
00:01:15.871 --> 00:01:19.127
that link was actually clicked,
and the next page is coming.

21
00:01:19.127 --> 00:01:21.271
In our world of broadband,

22
00:01:21.271 --> 00:01:26.315
that particular link state is
much less relevant and valuable.

23
00:01:26.315 --> 00:01:27.734
But by just saying nav a,

24
00:01:27.734 --> 00:01:31.596
you're actually covering all of
those states all at the same time.

25
00:01:31.596 --> 00:01:35.818
So that's appropriate for
navbar because we don't really wanna see

26
00:01:35.818 --> 00:01:39.977
necessarily that you have or
haven't visited a link in the navbar.

27
00:01:39.977 --> 00:01:45.915
So we're gonna say color, and
maybe that's var(--white);.

28
00:01:48.557 --> 00:01:51.584
So the white that we
had programmed before.

29
00:01:51.584 --> 00:01:55.173
And we can say text-decoration: of none,

30
00:01:55.173 --> 00:01:59.926
again, this is a navbar, so
by the placement on the page,

31
00:01:59.926 --> 00:02:05.267
by the nav element, we have
identified this as a series of links.

32
00:02:05.267 --> 00:02:09.541
So it is less important that they
are underlined or we can turn that off.

33
00:02:09.541 --> 00:02:16.700
And then the last part here, which I think
is really important, is display: block;.

34
00:02:16.700 --> 00:02:19.977
Now, you might be wondering
why I am doing that.

35
00:02:19.977 --> 00:02:23.491
So by default,
the a element is an inline element,

36
00:02:23.491 --> 00:02:28.830
it's as wide as its content, that's
actually what we want most of the time.

37
00:02:28.830 --> 00:02:31.249
If we're reading a paragraph of text,

38
00:02:31.249 --> 00:02:34.926
we only want the link to be as
big as the words that we select.

39
00:02:34.926 --> 00:02:40.325
But in the case of a navbar, we want our
link to fill the full clickable area.

40
00:02:40.325 --> 00:02:44.589
We do not wanna have that
type of environment where you

41
00:02:44.589 --> 00:02:49.516
are trying to hover over something,
and you have to hover over

42
00:02:49.516 --> 00:02:54.099
just the text if the nav element
is very large on the page.

43
00:02:54.099 --> 00:02:59.174
You want all of that area to be clickable,
the way you get that done

44
00:02:59.174 --> 00:03:04.177
is by setting the display to block,
that is the best way to do it.

45
00:03:04.177 --> 00:03:09.976
And then finally,
we'll set our nav a:hover,

46
00:03:09.976 --> 00:03:13.803
color: var(--magenta).

47
00:03:15.207 --> 00:03:19.931
Okay, so now we have some
links we can hover over them,

48
00:03:19.931 --> 00:03:23.545
they're looking the way we want, okay?

49
00:03:23.545 --> 00:03:27.467
But again, we can make the display really,

50
00:03:27.467 --> 00:03:31.920
really big here,
everything is on the same line.

51
00:03:31.920 --> 00:03:36.888
So the last trick that we need to
have here is have your name show up

52
00:03:36.888 --> 00:03:38.181
on its own line.

53
00:03:38.181 --> 00:03:42.271
Does anyone have any suggestions about
how we might make that magic happen?

54
00:03:42.271 --> 00:03:47.176
How could we make just your
name show up on its own line?

55
00:03:47.176 --> 00:03:49.965
&gt;&gt; Title?

56
00:03:49.965 --> 00:03:52.869
&gt;&gt; Maybe, but not here.

57
00:03:52.869 --> 00:03:58.538
Okay, so what we're going to do is,
we're gonna add a style here,

58
00:03:58.538 --> 00:04:05.613
I'm gonna put it just after the nav UL,
and I'm going to say nav Li:first-child.

59
00:04:05.613 --> 00:04:10.696
Because my name is indeed the first
child inside of that list,

60
00:04:10.696 --> 00:04:14.423
it's the very first link in the list,
okay?

61
00:04:14.423 --> 00:04:17.976
Or the first list item in the list,
specifically.

62
00:04:17.976 --> 00:04:19.892
And for this particular one,

63
00:04:19.892 --> 00:04:23.807
remember that flex-box is all
about parents and children.

64
00:04:23.807 --> 00:04:30.791
The UL is our parent, we've declared
all kinds of properties on that UL.

65
00:04:30.791 --> 00:04:34.908
The Li then,
takes on different flex-box properties.

66
00:04:34.908 --> 00:04:38.541
And in this case, one of those
properties is the flex-basis properties.

67
00:04:38.541 --> 00:04:44.527
Flex-basis has to do with how wide,
so to speak, an element is.

68
00:04:44.527 --> 00:04:48.931
The difference between width,
as a CSS property, and flex-basis,

69
00:04:48.931 --> 00:04:53.646
if of course, first of all,
flex-basis can only be used with flex-box.

70
00:04:53.646 --> 00:04:59.800
But second of all, flex-basis is a little
squishy, it's the flex in flex-box.

71
00:04:59.800 --> 00:05:05.359
When we give width the value,
if we said the width is 25%,

72
00:05:05.359 --> 00:05:11.137
the width will always be 25%,
it will never be 24.9%,

73
00:05:11.137 --> 00:05:17.039
it will never be 25.1%,
it will always be exactly 25%.

74
00:05:17.039 --> 00:05:23.078
When we say 25% on our flex-basis,
it's a kind of kinda thing.

75
00:05:23.078 --> 00:05:27.987
So it might be a lot more than that,
it might be a lot less than that,

76
00:05:27.987 --> 00:05:34.145
whatever is going on with the flex in
flex-box, so flex-basis is your property.

77
00:05:34.145 --> 00:05:38.055
So here in our nav Li:first-child then,

78
00:05:38.055 --> 00:05:42.184
we'll set our flex-basis to 100%, and

79
00:05:42.184 --> 00:05:47.736
that will automatically push
that onto its own line, okay?

80
00:05:47.736 --> 00:05:55.118
And then all we have to do is say,
text-align: center.

81
00:05:55.118 --> 00:05:58.047
And if it's not obvious why that worked,

82
00:05:58.047 --> 00:06:03.333
remember my favorite debugging trick
in CSS is always to put a border on it.

83
00:06:03.333 --> 00:06:06.282
So if we said 1 pixel solid red,

84
00:06:06.282 --> 00:06:11.309
see how that Li is filling
the entire row all by itself,

85
00:06:11.309 --> 00:06:15.137
and without that text-align: center,

86
00:06:15.137 --> 00:06:19.316
the text is simply over
to the edge of the box.

87
00:06:19.316 --> 00:06:23.815
When we add that text-align: center,
we're just saying take the text and

88
00:06:23.815 --> 00:06:27.207
stick it in the center of the line,
so there it is, okay?

89
00:06:27.207 --> 00:06:29.905
And then you can get rid
of your debugging border.

90
00:06:29.905 --> 00:06:34.099
&gt;&gt; I don't understand the logic
of collect flex-basis 100%.

91
00:06:34.099 --> 00:06:39.526
Can you go over that again,
I may have missed it.

92
00:06:39.526 --> 00:06:40.313
&gt;&gt; Yeah, sure.

93
00:06:40.313 --> 00:06:45.438
So flex-basis indicates that we're
going to try to get as close to

94
00:06:45.438 --> 00:06:51.216
some number as possible, whatever
number it is that we happen to specify.

95
00:06:51.216 --> 00:06:54.999
By the way, flex-basis is
written in two different ways,

96
00:06:54.999 --> 00:06:57.504
one is the way that I have written here.

97
00:06:57.504 --> 00:07:02.827
The other way is flex,
sometimes you see it this way,

98
00:07:02.827 --> 00:07:07.554
like whatever, 0, 1, 100% or 0, 0,

99
00:07:07.554 --> 00:07:13.114
100%, something like that,
that is flex-grow,

100
00:07:13.114 --> 00:07:17.405
flex-shrink, and flex-basis, okay?

101
00:07:17.405 --> 00:07:21.992
So I have called mine out just simply
as the flex-basis property by itself.

102
00:07:21.992 --> 00:07:25.485
Does that help you at all,
have you seen the other notation?

103
00:07:25.485 --> 00:07:29.496
And maybe that's where your
confusion is coming from.

104
00:07:29.496 --> 00:07:32.193
&gt;&gt; Yeah, it's my first time
seeing the other notation, too.

105
00:07:32.193 --> 00:07:37.023
So basically,
what it does is that it tells that we need

106
00:07:37.023 --> 00:07:40.278
to occupy 100% of the log space.

107
00:07:40.278 --> 00:07:41.601
&gt;&gt; Yes, exactly.

108
00:07:41.601 --> 00:07:48.532
So this particular one Li, I want it to
occupy whatever space is available 100%.

109
00:07:48.532 --> 00:07:52.354
All of the other ones,
project, about, contact, etc,

110
00:07:52.354 --> 00:07:57.430
clearly they have to go to another
line because they can't exceed 100%.

111
00:07:57.430 --> 00:08:01.377
And they will take up whatever space is
available to them before they wrap onto

112
00:08:01.377 --> 00:08:02.600
another line, right?

