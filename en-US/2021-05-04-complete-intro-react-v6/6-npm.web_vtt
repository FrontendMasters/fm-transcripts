WEBVTT

1
00:00:00.000 --> 00:00:02.387
First thing we're gonna talk about is npm.

2
00:00:02.387 --> 00:00:06.624
Again, I work at Microsoft,
I'm a little biased, I quite like npm.

3
00:00:06.624 --> 00:00:09.747
npm does not stand for node package
manager despite the fact that it

4
00:00:09.747 --> 00:00:11.941
definitely stands for
node package manager.

5
00:00:11.941 --> 00:00:13.280
I don't know what else it would stand for.

6
00:00:15.440 --> 00:00:18.270
It is, however,
the package manager for Node.js.

7
00:00:18.270 --> 00:00:22.411
And by kinda extension, the JavaScript
frontend ecosystem as a whole.

8
00:00:25.553 --> 00:00:29.361
So, I imagine most of you, this is
probably not your first exposure to it.

9
00:00:29.361 --> 00:00:32.226
But if it is, what we're gonna do here
in a second is via the command line,

10
00:00:32.226 --> 00:00:34.350
we're gonna say npm install react.

11
00:00:34.350 --> 00:00:37.100
Don't do that quite yet,
but we're about to do that.

12
00:00:37.100 --> 00:00:41.685
And this is going to grab React, instead
of loading it off the CDN like we did with

13
00:00:41.685 --> 00:00:45.450
the script tag, it's going to
download it onto your computer and

14
00:00:45.450 --> 00:00:48.737
then we're going to bundle that
in with our source code so

15
00:00:48.737 --> 00:00:52.655
that the user's is only downloading
one file instead of ten files.

16
00:00:52.655 --> 00:00:57.319
&gt;&gt; Hey, Brian, is this safe to do,
will it mess with my current setup if I'm

17
00:00:57.319 --> 00:01:00.730
a React engineer already,
should I avoid this step?

18
00:01:01.960 --> 00:01:05.575
&gt;&gt; You're gonna have to do it.

19
00:01:05.575 --> 00:01:08.289
So, the question is, if you've
already installed React before, or

20
00:01:08.289 --> 00:01:11.960
you have a different setup in a different
project, am I gonna have to do this again?

21
00:01:11.960 --> 00:01:12.885
And the answer is yes,

22
00:01:12.885 --> 00:01:16.900
you are gonna have to do it because
the packages are installed per project.

23
00:01:16.900 --> 00:01:17.780
&gt;&gt; Okay, thank you.

24
00:01:17.780 --> 00:01:18.280
&gt;&gt; Yep.

25
00:01:21.571 --> 00:01:23.738
Cool, so let's go ahead and
get started with that.

26
00:01:23.738 --> 00:01:29.760
So, go to your project here,
I'm gonna open my terminal here.

27
00:01:29.760 --> 00:01:31.820
I promise this is not
a terminal heavy class, but

28
00:01:31.820 --> 00:01:33.740
you have to do a little
bit of terminal stuff.

29
00:01:33.740 --> 00:01:36.021
If you follow along with me,
you should be okay,

30
00:01:36.021 --> 00:01:38.530
even if you're not super familiar with it.

31
00:01:38.530 --> 00:01:42.626
There's a great course on Frontend Masters
on how to use the command line from a very

32
00:01:42.626 --> 00:01:45.800
handsome gentleman that I think
wore this exact same t-shirt.

33
00:01:45.800 --> 00:01:48.211
It's me, I taught a course on
the Linux and the command line.

34
00:01:48.211 --> 00:01:53.459
So, if that's something that you would
like to learn about, please hop into that.

35
00:01:53.459 --> 00:01:55.245
All right, so,
I'm gonna open the terminal.

36
00:01:55.245 --> 00:02:02.190
That's Ctrl tilde,
if you wanna know the shortcut.

37
00:02:02.190 --> 00:02:07.354
Okay, I am in my desktop adopt-me, okay?

38
00:02:07.354 --> 00:02:09.078
So, you wanna be in the root
of your project, so

39
00:02:09.078 --> 00:02:10.470
not in the source directory, right?

40
00:02:10.470 --> 00:02:12.810
So, I'm not inside of
the source directory.

41
00:02:12.810 --> 00:02:18.230
I'm inside of the adopt-me folder,
and I'm gonna type npm init.

42
00:02:20.230 --> 00:02:23.273
Now, if you do it this way,
it'll ask you a bunch of questions.

43
00:02:23.273 --> 00:02:25.204
I don't wanna answer any questions,
I just want it to work.

44
00:02:25.204 --> 00:02:28.462
So, you can put a -y,
it says just do whatever,

45
00:02:28.462 --> 00:02:32.055
I don't care what you do,
just do something, okay?

46
00:02:32.055 --> 00:02:35.581
And then, now, if I look inside of my
project, I have this package.json here.

47
00:02:38.585 --> 00:02:42.609
This package.json, again, don't really
care about anything that's in it.

48
00:02:42.609 --> 00:02:46.975
But it's like a manifest for
your project, right?

49
00:02:46.975 --> 00:02:50.204
It's basically saying whenever
you're installing this project anew,

50
00:02:50.204 --> 00:02:54.492
here's everything that you need to bring
with it to make this project work, right?

51
00:02:54.492 --> 00:02:57.622
So, at this moment, you can see
it doesn't have any dependencies.

52
00:02:57.622 --> 00:03:00.372
It doesn't have any dev dependencies or
normal dependencies.

53
00:03:00.372 --> 00:03:02.966
That's because we haven't
installed any yet.

54
00:03:02.966 --> 00:03:05.477
But pretty soon,
when we say npm install react,

55
00:03:05.477 --> 00:03:08.566
it'll keep track of what
version of React we're using.

56
00:03:08.566 --> 00:03:11.797
If that's a normal dependency, or
a dev dependency, or a test dependency, or

57
00:03:11.797 --> 00:03:15.078
a peer dependency,
there's a bunch of other stuff like that.

58
00:03:15.078 --> 00:03:17.722
But it's basically like a manifest for
your project.

59
00:03:19.414 --> 00:03:21.940
Lots of great Node content on
Frontend Masters, as well,

60
00:03:21.940 --> 00:03:24.063
they definitely dive
more into package.json.

61
00:03:24.063 --> 00:03:27.008
But if you're gonna be writing any
amount of Frontend or Node code,

62
00:03:27.008 --> 00:03:28.610
you need to get comfortable with it,

63
00:03:28.610 --> 00:03:31.418
cuz it's gonna be involved in
every single project that you do.

