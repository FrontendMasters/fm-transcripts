WEBVTT

1
00:00:00.410 --> 00:00:02.586
Let's go make like an animal drop down so

2
00:00:02.586 --> 00:00:06.691
we can choose what kind of animal we
wanna search for in our pet adoption app.

3
00:00:06.691 --> 00:00:10.086
So first,
we're just gonna say const ANIMALS.

4
00:00:10.086 --> 00:00:13.483
And this is a list of animals
that we can choose from.

5
00:00:13.483 --> 00:00:17.554
Bird, cat, dog,

6
00:00:17.554 --> 00:00:21.885
rabbit, reptile.

7
00:00:24.633 --> 00:00:28.293
I put it all in capital case you know
that like this is just a constant and

8
00:00:28.293 --> 00:00:29.170
never changes.

9
00:00:29.170 --> 00:00:34.867
This is just the name of the animals
that we can choose from.

10
00:00:34.867 --> 00:00:40.680
And then underneath the label here,
this one and write another label.

11
00:00:40.680 --> 00:00:50.504
This is htmlfor animal, Animal.

12
00:00:53.797 --> 00:00:56.838
And this is gonna be
a select underneath it.

13
00:01:03.323 --> 00:01:09.526
Okay, that's gonna have
an id of animal And

14
00:01:09.526 --> 00:01:16.173
the value is equal to, Animal And

15
00:01:16.173 --> 00:01:24.153
the onChange, We're going to set to e,

16
00:01:26.330 --> 00:01:32.711
Set animal e.target.value.

17
00:01:37.216 --> 00:01:42.509
And then we'll fix this in a second,
I'm gonna cause intentionally

18
00:01:42.509 --> 00:01:46.990
an accessibility error, so
you see what those look like.

19
00:01:46.990 --> 00:01:50.820
And that'll be the end of the select and

20
00:01:50.820 --> 00:01:54.774
then we'll close the label down there.

21
00:01:54.774 --> 00:01:59.391
Okay, so the first thing it's gonna
give me an error here is like,

22
00:01:59.391 --> 00:02:02.037
hey, onChange isn't quite enough.

23
00:02:02.037 --> 00:02:03.446
And to be truly accessible,

24
00:02:03.446 --> 00:02:06.854
you also have to worry about blur
because if someone tabs down there,

25
00:02:06.854 --> 00:02:10.928
it may not necessarily trigger an onChange
and it varies from browser to browser.

26
00:02:10.928 --> 00:02:14.930
So that's why I quite like that
accessibility one that we installed

27
00:02:14.930 --> 00:02:19.210
the furiously and it will remind you
of stuff like this that for example,

28
00:02:19.210 --> 00:02:22.954
I didn't necessarily know until
this were warned me about it.

29
00:02:22.954 --> 00:02:26.312
So we'll just add the same
event handler here for onblur.

30
00:02:29.816 --> 00:02:32.245
And now that gets rid of that one,
we haven't made this hook yet.

31
00:02:32.245 --> 00:02:33.921
So let's go to find that hook.

32
00:02:33.921 --> 00:02:36.755
It's gonna look exactly like this one.

33
00:02:36.755 --> 00:02:42.149
Const animal,
seAnimal equals useState and, you know,

34
00:02:42.149 --> 00:02:47.332
whatever default one you want,
you could put dog here.

35
00:02:47.332 --> 00:02:51.692
I'm just gonna leave it blank so that it's
as if someone hasn't selected an animal at

36
00:02:51.692 --> 00:02:57.578
first Okay,

37
00:02:57.578 --> 00:03:03.764
the first thing we wanna set is there
should be an option, For someone that

38
00:03:03.764 --> 00:03:08.541
hasn't selected anything, or because of
this JSX, you can actually just do that.

39
00:03:11.098 --> 00:03:12.487
So you can have self closing tags for

40
00:03:12.487 --> 00:03:15.605
things that aren't necessarily self
closing tags and JSX that doesn't care.

41
00:03:18.469 --> 00:03:24.748
Okay, and then here, we wanna do
an option for each one of these animals.

42
00:03:24.748 --> 00:03:28.817
So we wanna loop over and create a react
component for each one of those and

43
00:03:28.817 --> 00:03:30.894
I would rather not code that by hand.

44
00:03:30.894 --> 00:03:32.405
So what we can do here,

45
00:03:32.405 --> 00:03:37.827
is we can actually use these curly braces
to put a JavaScript expression in here.

46
00:03:37.827 --> 00:03:44.171
And I'm gonna say, ANIMALS.map.

47
00:03:44.171 --> 00:03:47.024
Cuz animals is just
an array of strings and

48
00:03:47.024 --> 00:03:51.681
.map is just gonna go over every
element in that particular array.

49
00:03:51.681 --> 00:03:55.874
And it's gonna create a new array with
everything that I returned from it.

50
00:03:55.874 --> 00:03:58.735
Okay, so animal.map, and
then I'm gonna have animal.

51
00:04:01.341 --> 00:04:03.260
And now I have a new function here.

52
00:04:03.260 --> 00:04:06.635
So I could say return, blur, right?

53
00:04:06.635 --> 00:04:08.669
It's actually kind of
a fun thing you can do.

54
00:04:08.669 --> 00:04:14.261
If I don't put any curly braces and
I instead put parentheses here,

55
00:04:14.261 --> 00:04:17.803
it's going to return whatever I put here.

56
00:04:17.803 --> 00:04:25.262
So I'm going to return an option,
Where value equals animal.

57
00:04:29.079 --> 00:04:33.688
And I'm gonna put animal in here as well.

58
00:04:33.688 --> 00:04:38.393
Now, it's gonna say here,
hey, you did a map here.

59
00:04:38.393 --> 00:04:39.358
And you didn't put a key.

60
00:04:39.358 --> 00:04:43.093
Remember that error that we saw earlier in
the browser about it wants to be able to

61
00:04:43.093 --> 00:04:45.200
have a key for each one of these?

62
00:04:45.200 --> 00:04:46.810
So let's go ahead and
put a key in there as well.

63
00:04:47.940 --> 00:04:52.788
Key, and you need to put some
unique string per option, right?

64
00:04:52.788 --> 00:04:55.551
This could be like an id,
this could be something like that.

65
00:04:55.551 --> 00:04:58.923
What we do have is we have animal and
we know that each animal is unique.

66
00:04:58.923 --> 00:05:02.526
The only thing that we care
about is that it's unique.

67
00:05:02.526 --> 00:05:06.125
So if I reorganized dog and rabbit and
I swapped him for whatever reason,

68
00:05:06.125 --> 00:05:10.259
it would know is like okay, those swapped
in, I'm just gonna move those options.

69
00:05:13.184 --> 00:05:16.361
So you can just put key
as animal ,typically,

70
00:05:16.361 --> 00:05:19.224
you don't wanna put it as index, right?

71
00:05:19.224 --> 00:05:23.839
The index is tied to,
if I move index zero to index one and

72
00:05:23.839 --> 00:05:29.457
index one to index zero,
their indexes will have changed, right?

73
00:05:29.457 --> 00:05:33.299
And they're not actually tied because
the thing would still be an index zero and

74
00:05:33.299 --> 00:05:36.697
it's still be at index one and
wouldn't move necessarily with that.

75
00:05:36.697 --> 00:05:40.065
So that's why indexes is not
a good thing to have for key.

76
00:05:43.866 --> 00:05:45.403
Okay.

77
00:05:45.403 --> 00:05:47.885
So, option, option.

78
00:05:50.427 --> 00:05:53.197
And that works,
I think this should work now.

79
00:05:53.197 --> 00:05:54.324
So let's go take a look.

80
00:05:56.362 --> 00:05:58.107
So we have Seattle, WA here.

81
00:05:59.822 --> 00:06:04.767
And now we have a drop down of bird,
cat, dog, rabbit and reptile.

82
00:06:04.767 --> 00:06:06.856
If I select dog, it selects dog.

83
00:06:09.129 --> 00:06:10.110
Good stuff right?

84
00:06:15.325 --> 00:06:17.356
Any questions about that?

85
00:06:17.356 --> 00:06:20.622
I know this can look a little strange
if you're not used to coding like this.

86
00:06:20.622 --> 00:06:21.753
But just keep in mind,

87
00:06:21.753 --> 00:06:25.098
this is basically a return statement
right here just implicitly.

88
00:06:25.098 --> 00:06:28.087
In fact,
that's actually literally what it is.

89
00:06:28.087 --> 00:06:32.875
If I did this,
it actually would just work.

90
00:06:32.875 --> 00:06:37.792
Right this return, I'd have to go
figure out the correct curly braces and

91
00:06:37.792 --> 00:06:42.250
whatever, right, but
by leaving out that's what it looks like.

92
00:06:42.250 --> 00:06:47.620
&gt;&gt; On line 29 you have given
self closing the option tag,

93
00:06:47.620 --> 00:06:54.486
but on line 31 and 34 you have closed
the actual tag, so is it valid?

94
00:06:54.486 --> 00:06:58.276
&gt;&gt; This isn't technically valid Java,
HTML.

95
00:06:58.276 --> 00:07:01.837
The way you write that
HTML would look like that.

96
00:07:01.837 --> 00:07:04.369
And you can actually leave it like
that if that makes you feel better.

97
00:07:04.369 --> 00:07:09.562
But this is basically like, value
equals blur and with nothing in there,

98
00:07:09.562 --> 00:07:14.693
if we go look over here, it's actually
this top one right here, right?

99
00:07:14.693 --> 00:07:20.089
It's the empty one that represents they
haven't selected any animal, right.

100
00:07:20.089 --> 00:07:23.932
These are the ones, like this
represents dog with value of dog.

101
00:07:23.932 --> 00:07:25.623
That makes sense.

102
00:07:25.623 --> 00:07:26.351
&gt;&gt; Yep.

103
00:07:26.351 --> 00:07:32.751
&gt;&gt; Cool, that might even be clear,
so feel free to leave it like that.

104
00:07:32.751 --> 00:07:34.971
But I was doing this
the lazy way of doing it.

105
00:07:34.971 --> 00:07:36.105
&gt;&gt; I have a question about the key.

106
00:07:36.105 --> 00:07:38.635
So for the animals,
what if it's a duplicate value?

107
00:07:38.635 --> 00:07:42.680
So if you have two dogs, would it be able
to distinguish as well between those two?

108
00:07:42.680 --> 00:07:45.669
&gt;&gt; Nope, it must be unique, right?

109
00:07:45.669 --> 00:07:51.402
So if I put in a dog here just to show
you how much it gets upset about that.

110
00:07:51.402 --> 00:07:55.402
If you look here in the encounter
two children with the same key and

111
00:07:55.402 --> 00:07:59.200
it just drops them so
I think actually it only just gets upset.

112
00:07:59.200 --> 00:08:02.666
It used to not even render them but
it'll be upset the whole

113
00:08:02.666 --> 00:08:07.357
time like you gave me multiplicate, I
trusted you and you gave me the same key.

114
00:08:07.357 --> 00:08:09.419
&gt;&gt; So that's why I'm confused.

115
00:08:09.419 --> 00:08:13.459
So why if it's a duplicate thing, would
it be better to use an index because you

116
00:08:13.459 --> 00:08:17.155
set the index if the index changes,
then it's going to cause an issue.

117
00:08:17.155 --> 00:08:22.309
So how would you deal with like an array

118
00:08:22.309 --> 00:08:27.633
that might contain a duplicate value?

119
00:08:27.633 --> 00:08:31.894
&gt;&gt; So if they're truly duplicate items and
they have no distinguishing features

120
00:08:31.894 --> 00:08:35.389
between the two of them,
then you would probably use the index.

121
00:08:35.389 --> 00:08:38.823
&gt;&gt; Okay.
&gt;&gt; Like that's the absolute last resort if

122
00:08:38.823 --> 00:08:42.888
is you would use the index but
hopefully they have an id or

123
00:08:42.888 --> 00:08:45.841
something like that that you could use.

124
00:08:45.841 --> 00:08:50.742
&gt;&gt; So using the index is like the worst
case like it's your last resort

125
00:08:50.742 --> 00:08:55.920
type of thing to fall back to if
there's nothing else to use as the key?

126
00:08:55.920 --> 00:09:00.025
&gt;&gt; Yeah, you're basically at
that point just doing it to make

127
00:09:00.025 --> 00:09:02.006
Eastland's shut up right?

128
00:09:02.006 --> 00:09:05.078
Because you'll get no benefit
from giving it index cuz

129
00:09:05.078 --> 00:09:09.236
basically what you're saying is if
anything ever re renders destroy it.

130
00:09:09.236 --> 00:09:13.697
&gt;&gt; How declared the animals array
outside of the component, but

131
00:09:13.697 --> 00:09:15.508
you are using it inside.

132
00:09:15.508 --> 00:09:18.511
Are we mutating the state?

133
00:09:18.511 --> 00:09:22.240
&gt;&gt; No, in fact it would,
you would wanna be careful to not,

134
00:09:22.240 --> 00:09:26.220
I mean I guess you could come up here and
say object.freeze.

135
00:09:26.220 --> 00:09:30.853
If you really want it to be
super guarded against that and

136
00:09:30.853 --> 00:09:35.100
now you can see here it's
actually a read only now.

137
00:09:35.100 --> 00:09:41.222
But here when you do map it doesn't
modify the array it creates a new one.

138
00:09:41.222 --> 00:09:42.639
That makes sense?

139
00:09:42.639 --> 00:09:44.106
&gt;&gt; Yeah.

140
00:09:46.540 --> 00:09:48.189
&gt;&gt; I mean, this is unnecessary.

141
00:09:48.189 --> 00:09:50.586
You don't have to do the object.freeze,
but

142
00:09:50.586 --> 00:09:54.648
if you want it to be triple secure that it
never got modified to tell you to do it.

143
00:09:54.648 --> 00:09:57.834
Let's make another one of these.

144
00:09:57.834 --> 00:10:01.983
So we're gonna create another hook here,
but we're gonna do it for breed.

145
00:10:07.387 --> 00:10:14.121
And, For now,
let's just make an empty array of breeds.

146
00:10:14.121 --> 00:10:18.526
So we're gonna say const
breeds = empty array.

147
00:10:18.526 --> 00:10:22.652
Then we'll come back to this cuz we're
gonna grab the breeds from the API.

148
00:10:25.487 --> 00:10:30.371
Here, what I'm gonna do is
I'm actually just gonna copy

149
00:10:30.371 --> 00:10:33.032
this whole label and paste it.

150
00:10:33.032 --> 00:10:36.154
And we'll just change everywhere
says animal to breed.

151
00:10:45.336 --> 00:10:47.399
So set breed.

152
00:10:47.399 --> 00:10:51.600
Breed, breed, breed.

153
00:10:51.600 --> 00:10:58.635
And then here instead of animals we're
gonna say, breed or breeds rather.

154
00:10:58.635 --> 00:11:04.187
And then here now for places where it
says animal, we're gonna say breed.

155
00:11:04.187 --> 00:11:09.008
So breed, breed and breed.

156
00:11:09.008 --> 00:11:11.600
Cuz we want it to function
relatively the same way.

157
00:11:11.600 --> 00:11:15.620
One of the VS code tricks that I just use
there for those that are using VS code.

158
00:11:15.620 --> 00:11:18.370
So if I highlight breed here and
notice it's highlighted.

159
00:11:18.370 --> 00:11:22.721
If I hit Command D, and
I think it's Ctrl+D as well, in Windows,

160
00:11:22.721 --> 00:11:26.237
it'll select the next
instance of that exact match.

161
00:11:26.237 --> 00:11:28.882
So you can see here now
I've matched both of those.

162
00:11:28.882 --> 00:11:33.257
And then Ctrl + D, Ctrl + D, again,
and now I've select all four,

163
00:11:33.257 --> 00:11:37.416
and I can put whatever here it'll
type in all four places at once.

164
00:11:41.397 --> 00:11:42.453
I use that all the time.

165
00:11:42.453 --> 00:11:45.055
So it's a useful trick if
you're not using it already.

166
00:11:48.764 --> 00:11:53.334
Okay, so now if we look over here, we'll
have a breed selector nothing is in it.

167
00:11:53.334 --> 00:11:54.887
It it's kind of what we expect.

168
00:11:54.887 --> 00:11:57.600
Well, there's one option,
it's the empty option.

