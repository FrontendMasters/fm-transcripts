WEBVTT

1
00:00:00.000 --> 00:00:03.919
[MUSIC]

2
00:00:03.919 --> 00:00:06.543
&gt;&gt; Scott Moss: So what we do now
is we have our root component, and

3
00:00:06.543 --> 00:00:07.870
this is all set up for us.

4
00:00:07.870 --> 00:00:08.650
We don't have to write this.

5
00:00:08.650 --> 00:00:11.290
All you have to do is just
register your root component

6
00:00:11.290 --> 00:00:13.690
using this AppRegistry register component.

7
00:00:13.690 --> 00:00:16.750
Which is to say, hey,
this is literally just like doing

8
00:00:16.750 --> 00:00:19.770
the render method inside of React
where you render the root component.

9
00:00:19.770 --> 00:00:21.920
This is the React native version of that.

10
00:00:21.920 --> 00:00:25.416
Because there is no DOM to render to,
you don't need to register your component.

11
00:00:25.416 --> 00:00:28.729
And that happens for you automatically, so
you almost never need to even come here

12
00:00:28.729 --> 00:00:32.100
and change this, unless you change the
name of your application halfway through.

13
00:00:33.290 --> 00:00:35.000
So this is here for you.

14
00:00:35.000 --> 00:00:37.870
I will talk about style later,
but that's basically it.

15
00:00:37.870 --> 00:00:41.470
It's the same thing, and
all the stuff that we did as far as

16
00:00:41.470 --> 00:00:45.360
the methods we set up,
most of that stuff is the same.

17
00:00:45.360 --> 00:00:49.960
You will run into some issues and we start
getting into the events, onChange and

18
00:00:49.960 --> 00:00:53.260
stuff like that, because these
aren't the same dummy events.

19
00:00:53.260 --> 00:00:54.660
So you're gonna run into
some stuff up there.

20
00:00:55.960 --> 00:00:57.290
But most of it is the same.

21
00:00:57.290 --> 00:01:00.179
But now let's actually just go through
some of those elements to kinda get you

22
00:01:00.179 --> 00:01:01.210
started with the to do app.

23
00:01:01.210 --> 00:01:06.190
So what we'll do first is, let's just
get rid of all this stuff in here.

24
00:01:07.670 --> 00:01:10.780
And then what we'll do is we'll just
go over some of the basic components.

25
00:01:10.780 --> 00:01:13.290
We'll talk about that hot loading
thing that just popped up in a minute.

26
00:01:13.290 --> 00:01:16.900
We'll go over some of these basic
components that we're gonna use.

27
00:01:16.900 --> 00:01:18.930
So we've got View which is like a div.

28
00:01:18.930 --> 00:01:20.280
And also in order to do app we had a what?

29
00:01:20.280 --> 00:01:24.566
We had a button, we had a text input,
and we had like a list of things.

30
00:01:24.566 --> 00:01:25.710
So let's just do that.

31
00:01:25.710 --> 00:01:31.999
So we'll say constructor.
&gt;&gt; Scott Moss: Super and

32
00:01:31.999 --> 00:01:33.620
we'll do the same thing.

33
00:01:33.620 --> 00:01:34.380
We'll make some states.

34
00:01:34.380 --> 00:01:39.700
So the exact same code here.
&gt;&gt; Scott Moss: And we have todos.

35
00:01:41.120 --> 00:01:41.620
There you go.

36
00:01:43.690 --> 00:01:46.351
And now I come down here I'm
just going to go ahead and

37
00:01:46.351 --> 00:01:47.936
just show you that is the same.

38
00:01:47.936 --> 00:01:50.394
I'm just going to iterate over the todos,
which are just numbers right now.

39
00:01:50.394 --> 00:01:56.808
And I'm just going to say
this.state.map or this.state.todos.map.

40
00:01:59.779 --> 00:02:03.450
&gt;&gt; Scott Moss: Todo, no, not that todo.

41
00:02:03.450 --> 00:02:08.336
And all I'm gonna to do is

42
00:02:08.336 --> 00:02:14.170
render a text that says todo.

43
00:02:14.170 --> 00:02:17.972
So when I hit save,

44
00:02:17.972 --> 00:02:23.441
this thing broke because,

45
00:02:23.441 --> 00:02:28.857
no, it's not an object.

46
00:02:28.857 --> 00:02:30.267
I'm doing hot reload, that's why.

47
00:02:30.267 --> 00:02:34.160
So let's refresh this bundle, there we go.

48
00:02:34.160 --> 00:02:38.047
So the reason that broke is because I
have hot reload on or hot module reload,

49
00:02:38.047 --> 00:02:41.023
which if you never have used React or
heard of that before,

50
00:02:41.023 --> 00:02:45.522
instead of reloading the entire app or the
entire browser or whatever, it's literally

51
00:02:45.522 --> 00:02:49.399
just going to patch the code that we
changed and send it directly to the app.

52
00:02:49.399 --> 00:02:52.370
That way we can keep the state,
and it doesn't have to reload.

53
00:02:52.370 --> 00:02:55.580
But because I actually did change
the state itself it broke, so

54
00:02:55.580 --> 00:02:57.520
I had to actually reload
the entire app for it to work.

55
00:02:58.790 --> 00:02:59.954
But there we go.
So then we have

56
00:02:59.954 --> 00:03:05.010
our todos it on the page here.
&gt;&gt; Scott Moss: Pretty simple yeah?

57
00:03:05.010 --> 00:03:06.389
&gt;&gt; Speaker 2: Got a question from

58
00:03:06.389 --> 00:03:07.560
the stream.

59
00:03:07.560 --> 00:03:10.720
Could you talk about
what super is a little?

60
00:03:10.720 --> 00:03:11.540
&gt;&gt; Scott Moss: Yeah the reason we need to

61
00:03:11.540 --> 00:03:15.920
call super here is because we're
extending from another class here and

62
00:03:15.920 --> 00:03:20.450
super is just calling this
class's constructor method.

63
00:03:20.450 --> 00:03:27.820
If you try to use the this keyword before
calling super, this is gonna break.

64
00:03:27.820 --> 00:03:30.940
Because then this is like, well why did
you even extend the component then?

65
00:03:30.940 --> 00:03:34.100
You need to set up the component
you're extending first before you set

66
00:03:34.100 --> 00:03:34.610
up this component.

67
00:03:34.610 --> 00:03:36.070
It's just inheritance.

68
00:03:36.070 --> 00:03:41.011
You would do this yourself manually if
you were not using the class syntax

69
00:03:41.011 --> 00:03:42.310
here in like ES5.

70
00:03:44.730 --> 00:03:46.950
Cool, so a few things to note here.

71
00:03:46.950 --> 00:03:49.030
One, this is exactly the same.

72
00:03:49.030 --> 00:03:51.276
Two, we've got some
weird yellow thing here.

73
00:03:51.276 --> 00:03:54.834
We're going to talk about this stuff in
a minute, but it's pretty much the same

74
00:03:54.834 --> 00:03:58.249
error we got in the browser when I forgot
to put the key property on the stuff.

75
00:03:58.249 --> 00:04:00.984
I'm sorry,
on the elements I was mapping over.

76
00:04:00.984 --> 00:04:04.104
It's just that React Native just puts
it in this nice yellow box that you

77
00:04:04.104 --> 00:04:04.680
can look at.

78
00:04:04.680 --> 00:04:08.204
Cuz right now we don't have any logs and
haven't talked about logs so

79
00:04:08.204 --> 00:04:12.126
this is a way that it just shoves it in
your face like, look, check this out.

80
00:04:12.126 --> 00:04:14.317
Obviously you're not gonna want
this here on production, and

81
00:04:14.317 --> 00:04:15.620
there's a way to turn it off.

82
00:04:15.620 --> 00:04:16.920
But this is here for you for development.

83
00:04:17.960 --> 00:04:19.690
And you can just say dismiss all.

84
00:04:19.690 --> 00:04:25.230
So that's for rendering, and then for
input, let's just input a text input here.

85
00:04:25.230 --> 00:04:30.393
So we can say TextInput, and
for the text input we can go

86
00:04:30.393 --> 00:04:35.340
just go ahead and
just put a TextInput, there we go.

87
00:04:35.340 --> 00:04:38.240
And we don't put any properties on it or
anything, we just say text input.

88
00:04:38.240 --> 00:04:42.140
And you'll see that right here,
we get a text input.

89
00:04:42.140 --> 00:04:46.750
It's really small because the styles,
&gt;&gt; Scott Moss: Can I zoom in a little bit?

90
00:04:46.750 --> 00:04:49.160
Yeah, it's really small because we
haven't messed with the styles.

91
00:04:49.160 --> 00:04:50.230
We can make it wider obviously.

92
00:04:50.230 --> 00:04:52.150
But that's a text input.

93
00:04:52.150 --> 00:04:54.990
And depending on what platform you're on,
iOS or Android,

94
00:04:54.990 --> 00:04:56.329
that text input is gonna look different.

95
00:04:57.540 --> 00:05:01.540
It's going to use the native version
of that, depending on the platform.

96
00:05:01.540 --> 00:05:04.900
So this is like a material-looking
input for Android.

97
00:05:04.900 --> 00:05:06.500
For iOS, it will look like an iOS input.

98
00:05:06.500 --> 00:05:08.350
It will be completely different.

99
00:05:08.350 --> 00:05:11.860
But you can also overwrite those styles,
which we'll get into later.

100
00:05:11.860 --> 00:05:13.590
So there's a text input.

101
00:05:13.590 --> 00:05:15.530
We can we can set value.

102
00:05:15.530 --> 00:05:16.890
We can listen for changes.

103
00:05:16.890 --> 00:05:23.203
For instance, for the text input,
you can say onChangeText.

104
00:05:23.203 --> 00:05:26.330
And you can pass in a function here and
you'll get the text that changed.

105
00:05:26.330 --> 00:05:31.560
You can also just say onChange as well
which just gives you the entire element.

106
00:05:32.610 --> 00:05:39.541
So we'll just say onChange was
the exact same thing we did last time,

107
00:05:39.541 --> 00:05:45.410
and we can just say
this.handleChange.bind(this).

108
00:05:45.410 --> 00:05:50.201
And now we can do the handleChange,

109
00:05:50.201 --> 00:05:55.000
so handleChange, and we can say e.

110
00:05:56.480 --> 00:06:00.606
We'll setup some new state here, newTodo.

111
00:06:00.606 --> 00:06:04.507
There's a string, and

112
00:06:04.507 --> 00:06:09.967
then we can just say const ( value

113
00:06:09.967 --> 00:06:16.014
) is going to be e.target.value,

114
00:06:16.014 --> 00:06:20.190
oops, e.target.

115
00:06:20.190 --> 00:06:24.700
So we get the value there, and
then we can also put a value on here.

116
00:06:25.740 --> 00:06:31.120
And we'll set this to this.state.newTodo,
exactly the same that we did in the web.

117
00:06:31.120 --> 00:06:32.880
It's the same thing.

118
00:06:32.880 --> 00:06:37.967
OnChange, handleClick, newTodo here,

119
00:06:37.967 --> 00:06:42.632
and we'll just say this.setState for

120
00:06:42.632 --> 00:06:45.750
the newTodo is the value.

121
00:06:47.570 --> 00:06:50.560
So that's gonna update that.

122
00:06:50.560 --> 00:06:51.970
Yes?
&gt;&gt; Speaker 2: Two questions.

123
00:06:54.612 --> 00:06:58.540
Andre Klaus's question is,
yes, but you need to

124
00:06:58.540 --> 00:07:03.300
actually create a separate entity just for
the key in your object array.

125
00:07:03.300 --> 00:07:07.780
Isn't there an easier way to do it?
&gt;&gt; Scott Moss: Butt you need to

126
00:07:07.780 --> 00:07:08.970
actually create.
&gt;&gt; Speaker 2: I'm not sure I

127
00:07:08.970 --> 00:07:11.390
understand the question.
&gt;&gt; Scott Moss: Yeah, I'm not sure I

128
00:07:11.390 --> 00:07:13.432
understand the question either.
&gt;&gt; Speaker 2: The second one is

129
00:07:13.432 --> 00:07:14.330
maybe easier.

130
00:07:14.330 --> 00:07:18.820
You got it, okay.
&gt;&gt; Scott Moss: Actually create

131
00:07:18.820 --> 00:07:22.640
a separate entity just for
the key in your objects.

132
00:07:22.640 --> 00:07:24.920
Plus array or a zero.

133
00:07:24.920 --> 00:07:26.820
Okay, I guess, yeah,
I think I know what he's saying.

134
00:07:26.820 --> 00:07:29.620
He's saying for
that warning we were getting for

135
00:07:30.900 --> 00:07:34.740
when you iterate over an element
in React and place it on.

136
00:07:34.740 --> 00:07:37.520
React needs a way to keep
track of of the elements.

137
00:07:37.520 --> 00:07:40.270
So a key is like a unique identifier for
the elements.

138
00:07:40.270 --> 00:07:42.334
That way you can render
things efficiently.

139
00:07:42.334 --> 00:07:45.510
So yeah, I think what he was saying is
like do we need to add on like a new

140
00:07:45.510 --> 00:07:50.220
property somewhere for
each object for the ID.

141
00:07:50.220 --> 00:07:53.420
Well in this case because it's an array I
mean with all the arrays have indexes, so

142
00:07:53.420 --> 00:07:55.450
we can just use index here.

143
00:07:55.450 --> 00:07:57.790
So we can just say i, and
then key can just be i.

144
00:08:00.740 --> 00:08:01.720
So that's one way you can do it.

145
00:08:01.720 --> 00:08:04.980
So anything unique about the stuff, in
case the index is unique for all of them,

146
00:08:04.980 --> 00:08:06.040
so we can just do i.

147
00:08:06.040 --> 00:08:07.300
That'll be the key.

148
00:08:07.300 --> 00:08:09.510
But if this was like coming
from the server or something,

149
00:08:09.510 --> 00:08:12.000
these are Todos from the server, they'll
probably have ID properties on them.

150
00:08:12.000 --> 00:08:18.810
And that's what you would use instead.
&gt;&gt; Scott Moss: Cool, so we have that.

151
00:08:18.810 --> 00:08:23.930
The only other element that
we didn't do was a button.

152
00:08:23.930 --> 00:08:26.670
So like-
&gt;&gt; Speaker 3: I got a question.

153
00:08:26.670 --> 00:08:28.767
Text input is not showing up for

154
00:08:28.767 --> 00:08:31.858
me on the simulator.
&gt;&gt; Scott Moss: Text input is not showing

155
00:08:31.858 --> 00:08:33.694
up for you.
&gt;&gt; Speaker 3: I'm importing it.

156
00:08:33.694 --> 00:08:34.835
&gt;&gt; Scott Moss: Importing text input,

157
00:08:34.835 --> 00:08:36.779
and are you self-closing it like this?

158
00:08:38.180 --> 00:08:39.571
You are?
Okay I will come,

159
00:08:39.571 --> 00:08:42.210
are you getting an error anywhere?
&gt;&gt; Speaker 3: No.

160
00:08:42.210 --> 00:08:42.733
&gt;&gt; Scott Moss: No, it's just not

161
00:08:42.733 --> 00:08:43.970
showing up?
&gt;&gt; Speaker 3: Yeah.

162
00:08:43.970 --> 00:08:44.650
&gt;&gt; Scott Moss: Are you

163
00:08:44.650 --> 00:08:45.170
using Android?
&gt;&gt; Speaker 3: No.

164
00:08:45.170 --> 00:08:45.890
&gt;&gt; Scott Moss: iOS?

165
00:08:45.890 --> 00:08:46.390
&gt;&gt; Speaker 3: Yep.

166
00:08:46.390 --> 00:08:47.450
&gt;&gt; Speaker 4: I have the same thing.

167
00:08:47.450 --> 00:08:48.620
&gt;&gt; Scott Moss: Same thing,

168
00:08:48.620 --> 00:08:49.690
it's not showing up?

169
00:08:49.690 --> 00:08:56.747
All right let's run on iOS and see.
&gt;&gt; Scott Moss: React-native.

170
00:08:58.997 --> 00:09:01.164
&gt;&gt; Scott Moss: Run-ios.

171
00:09:03.429 --> 00:09:04.336
&gt;&gt; Scott Moss: Yeah, so they try

172
00:09:04.336 --> 00:09:07.541
to keep all the components the same
across both platforms, but

173
00:09:07.541 --> 00:09:09.548
there's probably some differences.

174
00:09:09.548 --> 00:09:12.607
Maybe iOS you probably had to set
a default value or something like that for

175
00:09:12.607 --> 00:09:13.240
it to show up.

176
00:09:13.240 --> 00:09:15.990
I'm not sure, but let's check it out.

177
00:09:15.990 --> 00:09:19.290
Or maybe it is there and it's just like
invisible, because there's no styling.

178
00:09:19.290 --> 00:09:19.920
They're all different.

179
00:09:21.020 --> 00:09:21.740
Theyre like all-
&gt;&gt; Speaker 2: Yeah,

180
00:09:21.740 --> 00:09:23.760
they're saying you need
to give it a height.

181
00:09:23.760 --> 00:09:24.920
&gt;&gt; Scott Moss: Yeah, see there you go.

182
00:09:24.920 --> 00:09:30.011
You got to give it a height.
&gt;&gt; Speaker 2: For

183
00:09:30.011 --> 00:09:37.109
iOS.
&gt;&gt; Scott Moss: All right.

184
00:09:37.109 --> 00:09:39.240
That's a big iPhone 6.

185
00:09:39.240 --> 00:09:44.711
This iPhone 6 looks like a tablet
&gt;&gt; Speaker 2: You

186
00:09:44.711 --> 00:09:46.310
can change the size above.
&gt;&gt; Scott Moss: Yeah,

187
00:09:46.310 --> 00:09:49.349
it's just like it rendered
it like that like here is.

188
00:09:49.349 --> 00:09:51.751
Look, no, it's just like-
&gt;&gt; Speaker 2: Do Cmd+3,

189
00:09:51.751 --> 00:09:53.775
it'll make it small.
&gt;&gt; Scott Moss: Okay,

190
00:09:53.775 --> 00:09:57.613
I'm like, what,
is that what they look like now?

191
00:09:57.613 --> 00:10:03.555
[LAUGH] The retina!

192
00:10:03.555 --> 00:10:06.630
This is taking forever to build
cuz I almost never built with iOS.

193
00:10:06.630 --> 00:10:08.247
But yeah, it was the height thing.

194
00:10:08.247 --> 00:10:10.830
Sometimes you just got
to set some defaults.

195
00:10:10.830 --> 00:10:15.159
They try to keep it the same.

196
00:10:15.159 --> 00:10:17.480
What else was I talking about?

197
00:10:17.480 --> 00:10:18.928
Touchable input or touchable highlight.

198
00:10:18.928 --> 00:10:24.115
So touchable highlight is
one of the touchables,

199
00:10:24.115 --> 00:10:29.547
I guess that's the word,
for lack of better words,

200
00:10:29.547 --> 00:10:35.250
that you can do for buttons,
so TouchableHighlight.

201
00:10:35.250 --> 00:10:37.390
So it's almost like a button.

202
00:10:37.390 --> 00:10:39.610
In fact,
you can just use it as a button for now.

203
00:10:39.610 --> 00:10:42.320
It does some other things,
like it allows you to like

204
00:10:42.320 --> 00:10:46.730
subscribe to when the button was
pressed in, or when it's coming out.

205
00:10:46.730 --> 00:10:49.950
You can change opacity underneath it,
all types of nice things,

206
00:10:49.950 --> 00:10:51.470
but we're going to use it like a button.

207
00:10:51.470 --> 00:10:55.651
And we'll just say TouchableHighlight.

208
00:10:55.651 --> 00:11:01.758
And then what we'll do is
we'll put a Text here.

209
00:11:01.758 --> 00:11:06.850
It says tap me, and
then instead of onClick

210
00:11:06.850 --> 00:11:14.216
because there's no clicks on
a mobile device it's onPress.

211
00:11:14.216 --> 00:11:18.000
So you do onPress, and
at this point it's the same thing.

212
00:11:18.000 --> 00:11:22.710
So this .handlePress.bind

213
00:11:24.997 --> 00:11:27.787
&gt;&gt; Scott Moss: This.
&gt;&gt; Scott Moss: So

214
00:11:27.787 --> 00:11:31.488
we can save that.
&gt;&gt; Scott Moss: And

215
00:11:31.488 --> 00:11:36.320
I get an error because I
forgot to make that method.

216
00:11:36.320 --> 00:11:41.550
I just got ahead of myself, so
handlePress(), there you go.

217
00:11:41.550 --> 00:11:43.700
That's a nice error screen by the way,
it just pops up red and

218
00:11:43.700 --> 00:11:45.040
just throws up in your face.

219
00:11:45.040 --> 00:11:46.210
All right, here you go.

220
00:11:46.210 --> 00:11:48.349
So now you can see I can hit tap me, and

221
00:11:48.349 --> 00:11:53.451
we have like this button here.
&gt;&gt; Scott Moss: Cool,

222
00:11:53.451 --> 00:11:56.430
so I'll get into more of the details.

223
00:11:56.430 --> 00:12:00.690
Now the next exercise is to
convert what we had on the web.

224
00:12:02.900 --> 00:12:04.710
Use the scaffold app that
you just scaffold out or

225
00:12:04.710 --> 00:12:06.010
you're still scaffolding out and

226
00:12:06.010 --> 00:12:10.570
head over to the index.Android or the
index.iOS, whichever one you want to do.

227
00:12:10.570 --> 00:12:14.910
Or you can set up your new todo app inside
of source and import it into both so

228
00:12:14.910 --> 00:12:16.890
it works on both platforms if you want to.

229
00:12:16.890 --> 00:12:20.900
Either way convert your todo
app over to React Native and

230
00:12:20.900 --> 00:12:24.378
see if you can get it to work the same
way you had it working on a web.

231
00:12:24.378 --> 00:12:25.760
Let's not worry about styles right now.

232
00:12:25.760 --> 00:12:28.510
If you want to get fancy and
make it look good, you can do that, but

233
00:12:28.510 --> 00:12:30.240
we'll get into styles afterwards.

234
00:12:30.240 --> 00:12:32.306
So let's see if we can just
get it working at least.

235
00:12:32.306 --> 00:12:36.252
If you need to look at the docs
the see exactly what the properties or

236
00:12:36.252 --> 00:12:39.928
the props that you need to use or
the events, totally do that.

237
00:12:39.928 --> 00:12:41.060
I'll be walking around too.

238
00:12:41.060 --> 00:12:43.010
So there might be some small differences,
like for

239
00:12:43.010 --> 00:12:47.040
instance onPress compared to onClick,
so that way you would have known that.

240
00:12:47.040 --> 00:12:48.570
But most of it's the same.

241
00:12:50.020 --> 00:12:52.790
Actually, everything I just showed you
right now is pretty much all you need

242
00:12:52.790 --> 00:12:53.300
to do this.

