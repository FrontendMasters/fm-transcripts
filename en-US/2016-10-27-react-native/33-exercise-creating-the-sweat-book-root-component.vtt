WEBVTT

1
00:00:03.910 --> 00:00:05.860
&gt;&gt; Scott: As far as your task
what you're going to be doing.

2
00:00:05.860 --> 00:00:09.320
If we look back is we start,
we look at the designs.

3
00:00:09.320 --> 00:00:13.880
So pull open the designs and
know what we know about redux and

4
00:00:13.880 --> 00:00:15.720
the components as far as
breaking the components out.

5
00:00:15.720 --> 00:00:19.610
Look at those designs or start thinking
about what components actions and

6
00:00:19.610 --> 00:00:20.689
state will need in the apps.

7
00:00:22.620 --> 00:00:25.580
And all you have to do for this exercise
is just create the root component.

8
00:00:25.580 --> 00:00:29.350
So if you can, create one component that
we can import both in iOS and Android.

9
00:00:29.350 --> 00:00:30.930
Even if you're not using both.

10
00:00:30.930 --> 00:00:35.440
Just one component and import it in both
versus only in Android, only in iOS, or

11
00:00:35.440 --> 00:00:37.370
copying it, past into both places.

12
00:00:37.370 --> 00:00:40.122
Create like an app folder or
something, and put it in there.

13
00:00:40.122 --> 00:00:44.400
And then Prep redux with the store,

14
00:00:44.400 --> 00:00:47.660
the reducers in the actions that you
think we're gonna need for application.

15
00:00:47.660 --> 00:00:50.550
But I'm going to push
this link in here for

16
00:00:50.550 --> 00:00:53.210
the starter app that I
want you to use I have it.

17
00:00:53.210 --> 00:00:55.840
I just forgot the link to it.

18
00:00:55.840 --> 00:01:01.120
And that's gonna be as GitHub final master

19
00:01:04.764 --> 00:01:06.640
&gt;&gt; Scott: Sweat book.

20
00:01:06.640 --> 00:01:09.190
So if you go the GitHub
frontend master sweat book.

21
00:01:11.020 --> 00:01:11.920
That URL right there.

22
00:01:15.460 --> 00:01:17.520
And I'll post it in the chat too.

23
00:01:17.520 --> 00:01:23.050
If you grab that and
you check out the, there's a branch,

24
00:01:23.050 --> 00:01:25.020
don't start working on master.

25
00:01:25.020 --> 00:01:29.207
I think masters actually all the solutions
for the stuff but if you check outs,

26
00:01:29.207 --> 00:01:29.789
was that?

27
00:01:42.215 --> 00:01:42.745
&gt;&gt; Scott: Yep.
So

28
00:01:42.745 --> 00:01:44.895
if you check out to the bootstrap branch.

29
00:01:44.895 --> 00:01:46.865
That's exactly where you need to be.

30
00:01:46.865 --> 00:01:48.155
There's gonna be a file in there.

31
00:01:48.155 --> 00:01:49.345
Let's just look at it.

32
00:01:49.345 --> 00:01:49.845
Check out.

33
00:01:50.925 --> 00:01:51.785
Bootstrap.

34
00:01:54.160 --> 00:01:55.948
Yeah.
So check out the bootsrap branch.

35
00:01:58.741 --> 00:02:02.090
&gt;&gt; Scott: Not, this but this app.

36
00:02:02.090 --> 00:02:04.682
There's gonna be a file in
there you're gonna look at and

37
00:02:04.682 --> 00:02:09.210
I left that follows that's gonna be the
initial state for some of the reducers.

38
00:02:09.210 --> 00:02:12.080
And if you remember I kind of showed
you how to set up some initial state.

39
00:02:12.080 --> 00:02:14.020
There's another way to set up initial
states with reducers we're not going

40
00:02:14.020 --> 00:02:15.534
to use that way.

41
00:02:15.534 --> 00:02:17.620
So if you look at this file and
the source,

42
00:02:17.620 --> 00:02:21.480
there's an index dot js that
just says hello and change me.

43
00:02:21.480 --> 00:02:26.690
And then there's some initial state,
so like some initial exercises and

44
00:02:26.690 --> 00:02:32.590
categories of those exercises that we're
gonna use and that's basically about it.

45
00:02:32.590 --> 00:02:34.746
And there's a dv dot.jason that
we will use later for the server,

46
00:02:34.746 --> 00:02:36.260
what I use right now.

47
00:02:36.260 --> 00:02:39.640
The goal is remember, there's already
really like a rook component here.

48
00:02:39.640 --> 00:02:44.300
So you can fix it up ever you want and
when we need to go and initialize redux.

49
00:02:44.300 --> 00:02:47.560
So however much you have a little you
think that is so you might thinkg

50
00:02:47.560 --> 00:02:51.070
like well where do I really start with
that again if you look at the designs.

51
00:02:53.020 --> 00:02:54.680
We can kind of think about.

52
00:02:54.680 --> 00:02:55.770
What our app is gonna need.

53
00:02:55.770 --> 00:03:01.260
So again I know that we gonna be
keeping track of this current workout.

54
00:03:01.260 --> 00:03:06.090
That's like probably an array of
exercises or something like that right.

55
00:03:06.090 --> 00:03:08.470
So that might be something you
wanna keep track of and redux.

56
00:03:08.470 --> 00:03:11.700
If you could this plus buttongand
you see that we're searching for

57
00:03:11.700 --> 00:03:13.440
exercises that we're tapping out so.

58
00:03:13.440 --> 00:03:17.070
That means really only we're keeping track
of right now is this thing called current

59
00:03:17.070 --> 00:03:21.930
workout which is just like
an array of exercises and

60
00:03:21.930 --> 00:03:23.020
if you look at initial state.

61
00:03:23.020 --> 00:03:24.960
I have exercises already here.

62
00:03:27.430 --> 00:03:31.570
So the few ways you can do this you can
load up the exercises and the categories

63
00:03:31.570 --> 00:03:35.720
into redux as like initial states for
those properties which is what I did.

64
00:03:35.720 --> 00:03:38.070
Or you can just like bring
these into your file.

65
00:03:38.070 --> 00:03:40.740
However, you want to do
it our bodies in a redux.

66
00:03:40.740 --> 00:03:46.000
Remember the way you can

67
00:03:46.000 --> 00:03:51.260
load up an initial state

68
00:03:51.260 --> 00:03:57.310
in redux as if you do [SOUND].

69
00:03:57.310 --> 00:04:00.660
Or one of the ways you know a lot of
initial state redux is inside the reducer.

70
00:04:02.440 --> 00:04:05.370
If you go to look at the reducer remember
here I said state equals an object.

71
00:04:05.370 --> 00:04:07.970
That's the natural state for
this is a blank object but

72
00:04:07.970 --> 00:04:12.570
I can say you know whatever I want
here for the natural state for this so

73
00:04:12.570 --> 00:04:16.550
grab in that initial state file that's
in the report that I just gave you.

74
00:04:16.550 --> 00:04:20.060
You could make a new reducer for
exercises, new reducer for categories, and

75
00:04:20.060 --> 00:04:22.650
it's initial state are those objects or
that array.

76
00:04:22.650 --> 00:04:25.710
&gt;&gt; Speaker 2: Where is the best
place to put in like, you know,

77
00:04:25.710 --> 00:04:27.640
how you Ajax the JSON server.

78
00:04:29.310 --> 00:04:30.700
&gt;&gt; Scott: The best place to put Ajax?

79
00:04:30.700 --> 00:04:34.970
&gt;&gt; Speaker 2: Well I'm saying like if
you are calling from the server and

80
00:04:34.970 --> 00:04:36.800
this initial state.

81
00:04:36.800 --> 00:04:39.510
&gt;&gt; Scott: We're gonna get to do
that That's a whole another story.

82
00:04:39.510 --> 00:04:43.610
That's a sync action creators.

83
00:04:43.610 --> 00:04:44.560
That's all another thing.

84
00:04:44.560 --> 00:04:46.556
We're going to get to that today for sure.

85
00:04:46.556 --> 00:04:47.520
&gt;&gt; Speaker 2: Okay.

86
00:04:47.520 --> 00:04:49.310
&gt;&gt; Scott: So you put that stuff her.

87
00:04:49.310 --> 00:04:54.880
The other way to do initial state in
Redux is if you go to the actual store

88
00:04:54.880 --> 00:04:58.530
you can pass in a second argument here
which would be your initial state.

89
00:04:58.530 --> 00:05:01.910
As it's an object that looks exactly
like the object that you passed.

90
00:05:03.250 --> 00:05:04.680
It looks exactly like this object here.

91
00:05:04.680 --> 00:05:08.540
So in our case, in the to do app,
it's like a todo todos and

92
00:05:08.540 --> 00:05:09.780
then there's like a user.

93
00:05:09.780 --> 00:05:10.920
So our initial state could be that.

94
00:05:12.040 --> 00:05:12.939
We can also do a like that too.

