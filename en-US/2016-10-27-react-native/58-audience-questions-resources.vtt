WEBVTT

1
00:00:00.025 --> 00:00:03.728
[MUSIC]

2
00:00:03.728 --> 00:00:04.573
&gt;&gt; Scott: There was some other stuff
I had planned, like testing and

3
00:00:04.573 --> 00:00:06.310
animations and stuff like that, but
those are actually pretty long.

4
00:00:06.310 --> 00:00:11.704
So now I think it's a good time to just
open it up for questions about things that

5
00:00:11.704 --> 00:00:17.102
you wanted to know about that we probably
didn't cover or a better explanation

6
00:00:17.102 --> 00:00:22.705
of things that we did cover that you're
kind of not getting yet or anything else.

7
00:00:25.134 --> 00:00:27.497
&gt;&gt; Speaker 2: If you're
not gonna cover testing,

8
00:00:27.497 --> 00:00:30.022
where's a good place to look for that?

9
00:00:30.022 --> 00:00:36.573
&gt;&gt; Scott: Okay so,
&gt;&gt; Scott: I'll tell you this,

10
00:00:36.573 --> 00:00:39.050
it's not as simple as web.

11
00:00:39.050 --> 00:00:46.665
I would say the best part actually is,
&gt;&gt; Scott: The docs,

12
00:00:46.665 --> 00:00:50.276
actually, they have a good
section on testing in there.

13
00:00:50.276 --> 00:00:51.203
There we go.

14
00:00:51.203 --> 00:00:55.555
Yeah, the testing, they have a really good
thing, the one thing is, they use Jest.

15
00:00:55.555 --> 00:00:56.498
And I don't like Jest.

16
00:00:56.498 --> 00:00:58.680
But if you do use Jest,
you could try it out.

17
00:00:58.680 --> 00:01:00.750
I mean, there's nothing wrong with it,
I just don't like it.

18
00:01:02.950 --> 00:01:06.373
But you can set up tests with
Android actually, pretty easily.

19
00:01:06.373 --> 00:01:08.188
I had some problems running it on iOS.

20
00:01:08.188 --> 00:01:11.170
Well, they show you how to set
up pretty easily here, well,

21
00:01:11.170 --> 00:01:14.630
with Jest, and I ran through it and
it worked perfectly fine.

22
00:01:15.720 --> 00:01:16.870
I just don't like Jest.

23
00:01:16.870 --> 00:01:21.645
But you can also use,
&gt;&gt; Scott: There's a way where you can

24
00:01:21.645 --> 00:01:25.869
just run the JavaScript outside
of the platform itself.

25
00:01:25.869 --> 00:01:28.980
And just use like Mocha or something,
but that's a little harder to set up.

26
00:01:28.980 --> 00:01:31.636
So I would say to just use Jest, that
way you can just get it out the box and

27
00:01:31.636 --> 00:01:33.600
you can run it like on Traverse or
Circle for your CI.

28
00:01:34.730 --> 00:01:38.462
So, yeah, it's really not much different
than testing regular React with Jest.

29
00:01:38.462 --> 00:01:42.202
It's literally the same thing,
to be honest.

30
00:01:44.360 --> 00:01:46.980
&gt;&gt; Speaker 3: Just give a quick overview
of what it would take to convert like

31
00:01:46.980 --> 00:01:48.870
a web React app over to React Native.

32
00:01:50.610 --> 00:01:55.800
&gt;&gt; Scott: A quick way, yeah, so
there's really only two things.

33
00:01:55.800 --> 00:01:56.850
I mean we did it the first day, right?

34
00:01:56.850 --> 00:01:59.690
Yesterday, when we covered the basic
Todo app to the Native app.

35
00:01:59.690 --> 00:02:01.470
There's literally only two things.

36
00:02:01.470 --> 00:02:03.870
Everywhere where we're using DOM things,
get rid of it.

37
00:02:03.870 --> 00:02:06.870
So if your using the React DOM anywhere,
gotta go.

38
00:02:06.870 --> 00:02:09.000
It's not gonna work with React Native.

39
00:02:09.000 --> 00:02:10.060
If you doing anything else DOM,

40
00:02:10.060 --> 00:02:14.390
like DOM querying, jQuery stuff,
it's gotta go, all that stuff's gotta go.

41
00:02:14.390 --> 00:02:17.990
And then you need to change over

42
00:02:17.990 --> 00:02:23.570
the HTML elements that you're using
over to the components you use in React.

43
00:02:23.570 --> 00:02:29.180
So, View for div, ListView for ul,
Text for h1s and h6s and P tags.

44
00:02:29.180 --> 00:02:34.347
So, once you convert that over,
that's it, it's literally the same thing.

45
00:02:34.347 --> 00:02:37.490
&gt;&gt; Speaker 4: So,
can you not have a single code base?

46
00:02:37.490 --> 00:02:40.910
&gt;&gt; Scott: No, so the whole approach for
React is not to have a single code base.

47
00:02:40.910 --> 00:02:45.490
It's not build once, use Everywhere,
it's learn once, use Everywhere.

48
00:02:45.490 --> 00:02:47.600
So they want you to like,
you know React already,

49
00:02:47.600 --> 00:02:49.400
just build it again in React Native.

50
00:02:49.400 --> 00:02:53.814
But with that being said, you could
bring over the same non React stuff.

51
00:02:53.814 --> 00:02:58.190
For instance, this whole Redux thing, we
could create that in a whole separate repo

52
00:02:58.190 --> 00:03:00.960
and we can use that in our web,
we can use that in our Native.

53
00:03:00.960 --> 00:03:04.060
If we built an Electron app or a desktop
app using React, we could use it there.

54
00:03:04.060 --> 00:03:06.770
We could use that entire thing,
cuz that's not attached to anything.

55
00:03:06.770 --> 00:03:07.740
It has nothing to do with React.

56
00:03:07.740 --> 00:03:09.420
It has nothing to do with the DOM.

57
00:03:09.420 --> 00:03:11.120
It has nothing to do with an environment.

58
00:03:11.120 --> 00:03:11.950
It's just JavaScript.

59
00:03:11.950 --> 00:03:13.572
So that part we could, it's just,

60
00:03:13.572 --> 00:03:16.150
the things that are gonna be
different are gonna be the views.

61
00:03:16.150 --> 00:03:18.370
The UI is always gonna be different.

62
00:03:18.370 --> 00:03:21.775
Whereas, the logic can be used
on every application, but

63
00:03:21.775 --> 00:03:23.576
that has nothing to do with React,
that's just JavaScript.

64
00:03:25.830 --> 00:03:27.020
Does that make sense?

65
00:03:27.020 --> 00:03:28.930
Are you looking for a solution where
you can build once, use Everywhere?

66
00:03:28.930 --> 00:03:31.642
&gt;&gt; Speaker 4: No, not necessarily.

67
00:03:31.642 --> 00:03:36.530
&gt;&gt; Scott: Okay, cuz usually, if you find
that solution, there's gonna be drawbacks,

68
00:03:36.530 --> 00:03:40.300
they try to make it exactly like that,
you're gonna have some some issues there.

69
00:03:42.520 --> 00:03:43.170
Any other questions?

70
00:03:45.030 --> 00:03:50.210
&gt;&gt; Speaker 5: Does React Native have any
competitors in the JavaScript world for

71
00:03:50.210 --> 00:03:53.190
building Native apps?

72
00:03:53.190 --> 00:03:55.961
&gt;&gt; Scott: They definitely do.
I would say the closest one to them that's

73
00:03:55.961 --> 00:04:00.680
literally doing something very
similar is up and coming NativeScript.

74
00:04:01.840 --> 00:04:05.534
So NativeScript is a project built by
Telluric which does the same thing.

75
00:04:05.534 --> 00:04:08.603
It tries to accomplish the same
thing as React Native does but

76
00:04:08.603 --> 00:04:10.830
it takes a different approach.

77
00:04:10.830 --> 00:04:16.149
So React Native, or I'm sorry,
NativeScript 2.0 was just released and

78
00:04:16.149 --> 00:04:20.816
it now uses Angular 2 for
its components, which is really legit.

79
00:04:20.816 --> 00:04:26.909
So, for instance, if you run through
this you'll see it's pretty legit.

80
00:04:26.909 --> 00:04:28.454
They just updated this again.

81
00:04:28.454 --> 00:04:29.640
They just keep updating this stuff.

82
00:04:29.640 --> 00:04:33.560
So this is probably
the closest one to them.

83
00:04:33.560 --> 00:04:37.345
Honestly, in my opinion, if you can
get NativeScript to consistently work,

84
00:04:37.345 --> 00:04:39.310
it's a lot better than React Native.

85
00:04:39.310 --> 00:04:42.453
And that's just my opinion, maybe I'm
opinionated because I like Angular 2.

86
00:04:42.453 --> 00:04:46.425
But actually the thing that I like about
it the most, is that in React Native when

87
00:04:46.425 --> 00:04:49.710
you want to use a Native library,
you have to go wrap it yourself.

88
00:04:49.710 --> 00:04:52.935
You gotta write some Objective C or
some Swift and some Java and

89
00:04:52.935 --> 00:04:55.679
use React Native stuff to
convert it to JavaScript.

90
00:04:55.679 --> 00:04:59.010
Whereas, NativeScript, you don't have to,
you get everything immediately.

91
00:04:59.010 --> 00:05:02.050
They take a different approach of using
NativeScript, so if an update for

92
00:05:02.050 --> 00:05:04.930
iOS came out tonight,
your NativeScript app has it immediately.

93
00:05:04.930 --> 00:05:08.610
If you wanna use that Firebase version
3 that doesn't work in React Native,

94
00:05:08.610 --> 00:05:12.590
it works in Native Script right at
the box, you don't have to do anything.

95
00:05:12.590 --> 00:05:17.036
You can make a wrapper to simplify the API
for you, but out the box it just works

96
00:05:17.036 --> 00:05:21.250
because it reads the meta data from
the classes and it imports it.

97
00:05:21.250 --> 00:05:25.434
But because of that,
it's actually kind of touchy to set up,

98
00:05:25.434 --> 00:05:30.757
like I've had problems with it breaking
sometimes and not knowing what to do.

99
00:05:30.757 --> 00:05:33.999
But, here it is,
NativeScript with Angular.

100
00:05:33.999 --> 00:05:38.070
And it uses TypeScript, which I think is a
superior language, TypeScript is amazing.

101
00:05:38.070 --> 00:05:40.570
I used to hate it but
it's actually pretty good.

102
00:05:40.570 --> 00:05:41.870
So if you look at the docs here.

103
00:05:43.510 --> 00:05:46.160
Let's just show one piece of code,
you'll see what I'm talking about.

104
00:05:47.850 --> 00:05:50.353
Right here, so this Angular 2,
this is literally Angular 2.

105
00:05:50.353 --> 00:05:55.533
So just like React Native you could
actually build a NativeScript app,

106
00:05:55.533 --> 00:05:57.617
an Electron app, a web app.

107
00:05:57.617 --> 00:06:03.244
And use most of the same code base,
except for the UI stuff.

108
00:06:03.244 --> 00:06:05.373
These components are the only
thing that would be different for

109
00:06:05.373 --> 00:06:08.156
your NativeScript app versus your web app,
everything else is exactly the same.

110
00:06:08.156 --> 00:06:11.670
It's even using an Angular core here,
which is the same thing the web will use.

111
00:06:11.670 --> 00:06:13.220
So this is actually pretty good.

112
00:06:13.220 --> 00:06:16.494
Performance is on par with React Native,
if not better sometimes.

113
00:06:16.494 --> 00:06:20.590
It's just,
you have to know a lot about Node and

114
00:06:20.590 --> 00:06:25.030
a little bit about mobile development,
because this thing is not that reliable.

115
00:06:25.030 --> 00:06:29.698
You can just React init and it works, and
sometimes you gotta restart the emulator.

116
00:06:29.698 --> 00:06:31.105
But with NativeScript,

117
00:06:31.105 --> 00:06:35.265
sometimes I had to go to some cryptic
place to figure out what was going on.

118
00:06:35.265 --> 00:06:36.446
And there's no way,

119
00:06:36.446 --> 00:06:41.170
I don't think an average developer would
have even wanted to have done that.

120
00:06:41.170 --> 00:06:44.168
But when it works,
it's fantastic, it's amazing.

121
00:06:44.168 --> 00:06:46.230
So this is up and coming.

122
00:06:46.230 --> 00:06:49.392
I think they're gonna really far with this
now that Googles kind of behind it with

123
00:06:49.392 --> 00:06:50.680
Angular 2.

124
00:06:50.680 --> 00:06:53.440
I think it'll be great,
definitely worth watching.

125
00:06:53.440 --> 00:06:54.630
So that's the closest thing to them.

126
00:06:54.630 --> 00:06:58.732
Then there are other things too,
like, what is it, Xarman or?

127
00:06:58.732 --> 00:07:01.119
&gt;&gt; Speaker 6: Xamarin.

128
00:07:01.119 --> 00:07:04.418
&gt;&gt; Scott: Xamarin,
Titanium, all those things.

129
00:07:04.418 --> 00:07:09.017
And if you wanna go the hybrid approach,
of course you have Ionic,

130
00:07:09.017 --> 00:07:10.970
which uses Angular 2 now.

131
00:07:10.970 --> 00:07:14.624
But this is more like a hybrid app,
so it's a web view launched in a-

132
00:07:14.624 --> 00:07:16.145
&gt;&gt; Speaker 7: You said that in Cordova or

133
00:07:16.145 --> 00:07:17.200
whatever.

134
00:07:17.200 --> 00:07:18.073
&gt;&gt; Scott: Yeah, or use Cordova, so

135
00:07:18.073 --> 00:07:20.030
these are obviously gonna
have performance trade offs.

136
00:07:20.030 --> 00:07:21.000
At this point, honestly,

137
00:07:21.000 --> 00:07:23.555
I think you're better off just using
the Progressive Web App versus

138
00:07:23.555 --> 00:07:25.725
Cordova App to be honest.

139
00:07:25.725 --> 00:07:27.470
Just make a Progressive Web App,
it's so much better.

140
00:07:29.040 --> 00:07:30.270
Yeah, so that's pretty much it.

141
00:07:32.510 --> 00:07:33.690
Any other questions?

142
00:07:33.690 --> 00:07:35.545
&gt;&gt; Speaker 7: Ionic's actually
in the perfect position for

143
00:07:35.545 --> 00:07:37.081
Progressive Web Apps-
&gt;&gt; Scott: They are,

144
00:07:37.081 --> 00:07:38.602
they just lost a competition for it.

145
00:07:38.602 --> 00:07:41.000
They want people to submit
their Progressive Web Apps.

146
00:07:41.000 --> 00:07:42.533
Because they're in the perfect spot,

147
00:07:42.533 --> 00:07:44.581
because Angular 2 supports
Progressive Web Apps.

148
00:07:44.581 --> 00:07:47.758
And they use Angular 2 and
they've got all of these components,

149
00:07:47.758 --> 00:07:49.799
I'm like, y'all are like right there.

150
00:07:49.799 --> 00:07:51.680
And Progressive Web Apps are amazing.

151
00:07:51.680 --> 00:07:53.730
They're just as good as Mobile apps,
it's ridiculous.

152
00:07:56.650 --> 00:07:58.383
&gt;&gt; Speaker 7: Yeah,
they're a local company.

153
00:07:58.383 --> 00:08:01.397
Not like local to Minneapolis, but-
&gt;&gt; Scott: Yeah, they're in-

154
00:08:01.397 --> 00:08:02.358
&gt;&gt; Speaker 7: Milwaukee.

155
00:08:02.358 --> 00:08:03.524
&gt;&gt; Scott: Milwaukee, yeah.

156
00:08:05.024 --> 00:08:06.108
&gt;&gt; Speaker 6: Madison.

157
00:08:06.108 --> 00:08:07.316
&gt;&gt; Speaker 7: Madison.

158
00:08:07.316 --> 00:08:10.680
&gt;&gt; Scott: Madison, Wisconsin.

159
00:08:10.680 --> 00:08:12.217
&gt;&gt; Speaker 7: Skansin.

160
00:08:12.217 --> 00:08:14.847
&gt;&gt; Scott: Any other questions or
anything React Native or

161
00:08:14.847 --> 00:08:16.630
anything JavaScript related?

162
00:08:20.984 --> 00:08:23.159
&gt;&gt; Scott: No, okay, so
now I'm gonna show you some resources and

163
00:08:23.159 --> 00:08:25.300
other stuff to further your knowledge.

164
00:08:25.300 --> 00:08:27.152
So we didn't talk about
deploying to the App Store but

165
00:08:27.152 --> 00:08:29.190
I know a lot of people
wanted to check that out.

166
00:08:29.190 --> 00:08:31.100
So the docs talk about that pretty good,
and

167
00:08:31.100 --> 00:08:33.060
if you can read through the docs,
it'll get you there.

168
00:08:34.650 --> 00:08:39.000
But it's actually really no different
than deploying a regular Native App.

169
00:08:39.000 --> 00:08:39.596
It really isn't.

170
00:08:39.596 --> 00:08:43.970
So, you know that package manager we use,
rnpm, React Native Package Manager?

171
00:08:43.970 --> 00:08:46.650
They're trying to set it up to where
they can do all that stuff for you.

172
00:08:46.650 --> 00:08:50.530
But there exist tools that kinda
already stepped up and did this.

173
00:08:50.530 --> 00:08:55.270
So Siphon is one, Siphon React Native.

174
00:08:55.270 --> 00:08:59.990
So if you look at Siphon
this one's pretty cool.

175
00:08:59.990 --> 00:09:04.870
What it does is,
it will like create apps for you.

176
00:09:04.870 --> 00:09:08.590
It will allow you to send them out to
other users so they can beta test it out,

177
00:09:08.590 --> 00:09:10.470
which I think is pretty cool.

178
00:09:10.470 --> 00:09:14.400
It will push them to the store,
it'll deploy them to the store for you.

179
00:09:14.400 --> 00:09:17.370
And it will also update the code over
the air without having to send it

180
00:09:17.370 --> 00:09:21.120
back to the App Store,
because this is JavaScript bundle.

181
00:09:21.120 --> 00:09:23.252
So it does update your JavaScript bundles,
so

182
00:09:23.252 --> 00:09:26.330
when somebody opens your app again,
it's updated.

183
00:09:26.330 --> 00:09:27.580
There are some rules though,

184
00:09:27.580 --> 00:09:30.342
you can't update the whole visual
thing of your app over the air.

185
00:09:30.342 --> 00:09:33.610
I mean, technically you could,
but it's not allowed by Apple.

186
00:09:33.610 --> 00:09:35.738
They were like, yeah,
you can't update that,

187
00:09:35.738 --> 00:09:37.426
you can update like background things.

188
00:09:37.426 --> 00:09:40.376
How your app works but you can't
update the entire UI over the air

189
00:09:40.376 --> 00:09:42.840
cuz they would just take your
app out of the App Store.

190
00:09:44.120 --> 00:09:47.763
But yeah, you can do over the air
updates which I think is pretty dope.

191
00:09:47.763 --> 00:09:48.881
So, yeah, Siphon's good.

192
00:09:48.881 --> 00:09:54.281
There is another one, React Native deploy,
I forget the name of it,

193
00:09:54.281 --> 00:09:58.005
I think it starts like with an E or
something.

194
00:09:58.005 --> 00:09:58.880
AppHub is another one.

195
00:10:01.030 --> 00:10:03.145
So you could kind of do the same thing.

196
00:10:03.145 --> 00:10:04.980
Yeah, CodePush, that's what it is.

197
00:10:04.980 --> 00:10:05.590
CodePush by Microsoft.

198
00:10:06.833 --> 00:10:07.350
&gt;&gt; Scott: Who would have known?

199
00:10:10.590 --> 00:10:13.130
So CodePush allows you to,
and it's open source.

200
00:10:13.130 --> 00:10:18.095
You can just,
&gt;&gt; Scott: You can use CodePush to update

201
00:10:18.095 --> 00:10:19.087
your stuff over the air.

202
00:10:19.087 --> 00:10:21.708
This one's actually pretty good.

203
00:10:21.708 --> 00:10:23.414
It's really good actually.

204
00:10:27.367 --> 00:10:29.575
&gt;&gt; Scott: And there's tons of other
services that kind of do the same thing.

205
00:10:29.575 --> 00:10:34.022
But as you can see, a lot of people
use it, Facebook's using it.

206
00:10:34.022 --> 00:10:38.987
&gt;&gt; Speaker 7: The futuristic gun shooting
from a laptop to the phone is what got me.

207
00:10:38.987 --> 00:10:39.819
&gt;&gt; Scott: This one?

208
00:10:39.819 --> 00:10:41.152
&gt;&gt; Speaker 7: No, scroll up.

209
00:10:41.152 --> 00:10:42.673
&gt;&gt; Scott: No, down there [CROSSTALK].

210
00:10:42.673 --> 00:10:46.483
&gt;&gt; Speaker 7: Snap.
&gt;&gt; Scott: That's what got me.

211
00:10:46.483 --> 00:10:48.147
&gt;&gt; Speaker 6: Delivering the bits.

212
00:10:48.147 --> 00:10:50.438
&gt;&gt; Scott: I'm totally gonna
use this [INAUDIBLE].

213
00:10:53.289 --> 00:10:57.312
&gt;&gt; Scott: So, yeah, so you can use tools
like this to submit to the App Store, but

214
00:10:57.312 --> 00:11:01.085
basically, it's really the same
process as you would natively.

215
00:11:01.085 --> 00:11:05.586
You still have to go to Xcode and bundle
it and you have to sign it with Android,

216
00:11:05.586 --> 00:11:07.470
you gotta do all that yourself.

217
00:11:07.470 --> 00:11:09.390
Or you can pay some service to do it for
you for free.

218
00:11:09.390 --> 00:11:10.810
It's not different.

219
00:11:10.810 --> 00:11:12.700
They're working on it but
it's pretty much the same.

220
00:11:14.270 --> 00:11:16.804
So for iOS, that means sign up for
a developer account.

221
00:11:16.804 --> 00:11:18.656
For Android, sign up for
a developer account.

222
00:11:18.656 --> 00:11:20.560
Submitting to the App Store.

223
00:11:20.560 --> 00:11:25.544
I don't think Android does,
I can't remember, do they do reviews now?

224
00:11:25.544 --> 00:11:27.628
I still think Android doesn't do reviews,
so

225
00:11:27.628 --> 00:11:31.760
you could just literally publish it today,
it'll be there tonight.

226
00:11:31.760 --> 00:11:33.260
Whereas, iOS, it's faster now.

227
00:11:33.260 --> 00:11:35.828
I think it's like, what,
a week now on iOS?

228
00:11:35.828 --> 00:11:36.910
&gt;&gt; Speaker 4: One to two days.

229
00:11:36.910 --> 00:11:38.360
&gt;&gt; Scott: One to two days.

230
00:11:38.360 --> 00:11:40.320
So, yeah,
they'll tell you no in one to two days.

231
00:11:40.320 --> 00:11:43.807
[LAUGH] Yeah, so

232
00:11:43.807 --> 00:11:48.911
any other questions?

233
00:11:48.911 --> 00:11:53.476
For as far as future learnings, I highly
recommend if you're gonna be doing

234
00:11:53.476 --> 00:11:58.849
JavaScript development, whether on the web
or Native, I do recommend learning React.

235
00:12:00.780 --> 00:12:04.450
I think what React taught
JavaScript developers is amazing.

236
00:12:04.450 --> 00:12:08.150
React came out and changed the game with
JavaScript and a lot of people have.

237
00:12:10.290 --> 00:12:14.320
It just created a whole new
pave of methodologies and

238
00:12:14.320 --> 00:12:15.810
frameworks and libraries.

239
00:12:15.810 --> 00:12:17.928
So it's worth getting into React for
that reason.

240
00:12:17.928 --> 00:12:21.300
Regardless if you use it or not,
I think it just teaches you differently.

241
00:12:21.300 --> 00:12:23.190
before React,
I wrote code a completely different way,

242
00:12:23.190 --> 00:12:25.760
where only I could understand it.

243
00:12:25.760 --> 00:12:28.060
I couldn't give it to you and
have you understand it.

244
00:12:28.060 --> 00:12:29.980
Whereas, like now,
it's somewhat predictable.

245
00:12:31.760 --> 00:12:34.629
So I would definitely recommend
checking that out just because.

246
00:12:37.010 --> 00:12:42.290
And then, there really aren't too
many other React Native sources out

247
00:12:42.290 --> 00:12:45.990
there cuz it's still relatively new and
you've gotta be kind of brave to use it.

248
00:12:45.990 --> 00:12:47.260
But it works pretty good as a production.

249
00:12:47.260 --> 00:12:51.630
So I would say just build some more apps,
try out some more Native APIs.

250
00:12:51.630 --> 00:12:54.222
If you go look at the docs,
there's tons of other APIs and

251
00:12:54.222 --> 00:12:57.900
components that we didn't get to,
like Picker, which is like a drop-down.

252
00:12:57.900 --> 00:13:03.040
We've got progress bars,
refresh controls, all types of things.

253
00:13:03.040 --> 00:13:07.860
And then you've got like these APIs here,
like Alerts, Animated, which is fantastic.

254
00:13:09.920 --> 00:13:11.772
Push notifications for
iOS, there's all types.

255
00:13:11.772 --> 00:13:14.140
So the status bar,
you can change the code of the status bar.

256
00:13:15.630 --> 00:13:17.864
Pixel ratio, all types of things.

257
00:13:17.864 --> 00:13:20.957
So I highly recommend
just coming in here and

258
00:13:20.957 --> 00:13:24.894
just play around with this stuff,
it's pretty cool.

259
00:13:24.894 --> 00:13:27.343
And I think that's all I had.

260
00:13:27.343 --> 00:13:32.455
Yeah, so tonight, I have another branch
of all the stuff we didn't get to.

261
00:13:32.455 --> 00:13:35.560
I just need to write some instructions for
it since I'm not gonna be teaching it.

262
00:13:35.560 --> 00:13:36.985
So, I'm gonna write some instructions for
that and

263
00:13:36.985 --> 00:13:38.620
I'm gonna push that to the repo,
or the readme.

264
00:13:38.620 --> 00:13:42.380
So you can go through and if you wanna
work through the animated stuff or

265
00:13:42.380 --> 00:13:44.990
the other stuff that I had,
you can work through it.

266
00:13:44.990 --> 00:13:45.930
So that will be there tonight.

267
00:13:48.220 --> 00:13:49.730
Other than that, that is all I got.

268
00:13:51.970 --> 00:13:55.950
So, thank you for coming to the workshop,
I hope you learned some React Native.

269
00:13:55.950 --> 00:13:58.760
Feel free to go on and
continue building out that app.

270
00:13:58.760 --> 00:14:02.185
If somebody actually finishes that app and
adds some really cool stuff to it,

271
00:14:02.185 --> 00:14:03.930
send it to me, I wanna take a look at it.

272
00:14:03.930 --> 00:14:08.550
So I don't have to finish mine,
I can use yours, that would be great.

273
00:14:08.550 --> 00:14:09.645
And thanks for coming.

274
00:14:09.645 --> 00:14:15.464
&gt;&gt; [APPLAUSE]

