WEBVTT

1
00:00:00.000 --> 00:00:03.578
[MUSIC]

2
00:00:03.578 --> 00:00:04.768
&gt;&gt; Scott Moss: So
that's the Tab interface.

3
00:00:04.768 --> 00:00:09.710
So if we go back and
look at our app, our designs,

4
00:00:09.710 --> 00:00:12.830
it's not gonna be as simple, because
our design is actually quite different.

5
00:00:12.830 --> 00:00:18.949
And that's because this welcome screen is
actually not part of the Tab interface.

6
00:00:20.900 --> 00:00:26.608
So how do we go from this welcome
screen to the Tab interface?

7
00:00:26.608 --> 00:00:30.278
Hm, so you gotta figure that part out.

8
00:00:30.278 --> 00:00:32.180
It's actually not as hard as you'd think.

9
00:00:32.180 --> 00:00:34.360
You don't need a router to do this.

10
00:00:34.360 --> 00:00:37.176
It's just not that difficult.

11
00:00:37.176 --> 00:00:40.140
There's a couple ways you can do it is,
you got to think outside the box.

12
00:00:40.140 --> 00:00:40.888
But yeah, so

13
00:00:40.888 --> 00:00:45.376
you need to set up a way to navigate from
this welcome screen that you just made,

14
00:00:45.376 --> 00:00:49.810
regardless if it looks like this or not,
that route component that you made.

15
00:00:49.810 --> 00:00:54.279
And when you click
Start Workout it should render

16
00:00:54.279 --> 00:00:58.759
a new route component that
has a type interface.

17
00:00:59.920 --> 00:01:02.540
That's it, that's all we gotta do.

18
00:01:02.540 --> 00:01:03.529
Everybody understand the exercise?

19
00:01:03.529 --> 00:01:08.332
So you have this component that
you already made somewhere in that

20
00:01:08.332 --> 00:01:11.280
button when you click on it.

21
00:01:11.280 --> 00:01:15.932
However you wanna do it, it just needs
to render a new route component.

22
00:01:15.932 --> 00:01:18.750
And you can call this
component Current Workout.

23
00:01:18.750 --> 00:01:20.510
Let's save that in the container folder.

24
00:01:20.510 --> 00:01:24.570
It needs to render Current Workout,
and Current Workout

25
00:01:24.570 --> 00:01:28.117
just needs to have two tabs, that's it.
&gt;&gt; Speaker 2: What

26
00:01:28.117 --> 00:01:29.377
are the tabs?
&gt;&gt; Scott Moss: They can be

27
00:01:29.377 --> 00:01:30.080
whatever you want.

28
00:01:30.080 --> 00:01:34.484
They can be whatever you want for now.
&gt;&gt; Speaker 2: Got a question about the tab

29
00:01:34.484 --> 00:01:35.810
interface.

30
00:01:35.810 --> 00:01:38.500
The components you put in the tabs,

31
00:01:38.500 --> 00:01:41.290
do they stay mounted all the time?
&gt;&gt; Scott Moss: They do.

32
00:01:41.290 --> 00:01:43.220
So there's a way around that.

33
00:01:43.220 --> 00:01:47.352
There's a listener on the tab, if you
look at the docs, the way I fixed it is,

34
00:01:47.352 --> 00:01:50.669
there's a function that's fired
whenever a tab is changed.

35
00:01:50.669 --> 00:01:53.800
And it passes in the current
index of the tab.

36
00:01:53.800 --> 00:01:58.113
So I take that index and I pass to every
single tab a prop called active tab,

37
00:01:58.113 --> 00:01:59.028
like if index.

38
00:01:59.028 --> 00:02:04.830
So for instance if, so
this is index zero, right?

39
00:02:04.830 --> 00:02:09.759
So I'll update this state like,
currentTab or

40
00:02:09.759 --> 00:02:13.208
activeTab is gonna be true if, so

41
00:02:13.208 --> 00:02:17.658
I would have to set up
some statement here.

42
00:02:17.658 --> 00:02:21.143
But imagine if I had the state of index,
so

43
00:02:21.143 --> 00:02:27.040
if this.state.index triple equals 0,
which is this state.

44
00:02:27.040 --> 00:02:28.812
So this'll be true
inside of the component.

45
00:02:28.812 --> 00:02:33.703
So then in the component,
I would go into this Todo component and

46
00:02:33.703 --> 00:02:38.154
I would say, should component render,
stuff like that.

47
00:02:38.154 --> 00:02:41.119
Or I can come out just
to the render function,

48
00:02:41.119 --> 00:02:44.952
and I can just do a conditional
this.props.activetab.

49
00:02:44.952 --> 00:02:50.879
True, render this, if not render, an empty
view, or nothing, something like that.

50
00:02:50.879 --> 00:02:52.590
It depends on what you're
doing in the JavaScript.

51
00:02:52.590 --> 00:02:54.610
We're not doing any
asynchronous stuff in here.

52
00:02:54.610 --> 00:02:56.374
But if you were to do
asynchronous in here,

53
00:02:56.374 --> 00:02:57.991
not only do you wanna block the render,

54
00:02:57.991 --> 00:03:01.430
you probably wanna block it from getting
all the stuff from the server too, right?

55
00:03:01.430 --> 00:03:03.679
So yeah, I would do that.

56
00:03:03.679 --> 00:03:07.316
And component did mount, or component
should mount, or something like that.

57
00:03:07.316 --> 00:03:10.654
Only if this prop is active
do I wanna go do this stuff.

58
00:03:10.654 --> 00:03:13.305
If not, don't do anything,
it's totally up to you.

59
00:03:13.305 --> 00:03:14.336
But on the other side,

60
00:03:14.336 --> 00:03:17.390
maybe you want that stuff rendered
before the person slides over.

61
00:03:17.390 --> 00:03:19.218
So it's up to you, but that's how I do it.
&gt;&gt; Speaker 2: Right, so

62
00:03:19.218 --> 00:03:20.062
you see it as it slides in.
&gt;&gt; Scott Moss: So

63
00:03:20.062 --> 00:03:23.170
they see it as it slides over,
not when it just [SOUND] pops in.

64
00:03:23.170 --> 00:03:24.957
But there's ways around that, too.

65
00:03:24.957 --> 00:03:28.273
You can have it to where it just,
Facebook does on the web is,

66
00:03:28.273 --> 00:03:31.868
they render what event, a shell,
this is what it's gonna like.

67
00:03:31.868 --> 00:03:33.813
When it loads, it's just a placeholder.

68
00:03:33.813 --> 00:03:36.696
And then it just like fades in gradually,
so you could do that too.

69
00:03:36.696 --> 00:03:38.420
So many optimizations there, but

70
00:03:38.420 --> 00:03:41.910
just by passing in an active tab, you
get more control over what tab is what.

