WEBVTT

1
00:00:00.000 --> 00:00:03.854
[MUSIC]

2
00:00:03.854 --> 00:00:06.740
&gt;&gt; Scott Moss: Let's walk through
one more time, just to make sure.

3
00:00:06.740 --> 00:00:09.580
You just got,
you just understand what it's doing.

4
00:00:09.580 --> 00:00:12.090
Because tomorrow we're gonna
do asynchronous stuff and

5
00:00:12.090 --> 00:00:14.640
it's going to get pretty crazy
when we start doing thunks.

6
00:00:14.640 --> 00:00:17.640
And stuff like that because
we actually had to do that.

7
00:00:17.640 --> 00:00:19.529
So all we're, so basically yes?

8
00:00:21.080 --> 00:00:24.440
&gt;&gt; Speaker 2: Asking if you
can use the Redux dev tools.

9
00:00:24.440 --> 00:00:28.770
&gt;&gt; Scott Moss: Can you use the Redux
dev tools in Chrome during debugging?

10
00:00:32.810 --> 00:00:36.630
&gt;&gt; Scott Moss: No I don't think so because
I'm pretty sure the Redux dev tools rely

11
00:00:36.630 --> 00:00:39.270
on the dom although I could be wrong.

12
00:00:39.270 --> 00:00:40.470
Maybe they've modified it.

13
00:00:40.470 --> 00:00:43.260
I haven't used the Redux dev.tools in.

14
00:00:43.260 --> 00:00:47.870
I don't know so many months but last time
I checked it was attached to the dom.

15
00:00:47.870 --> 00:00:50.460
So I don't know if you can use it.

16
00:00:50.460 --> 00:00:53.562
I think you mentioned earlier that dev
tools would only really push people to

17
00:00:53.562 --> 00:00:56.791
Redux, are there any elements of it that
give it a get a nice advantage over RX?

18
00:00:56.791 --> 00:00:58.400
Yes the dev tools for

19
00:00:58.400 --> 00:01:02.910
Redux when using the web are great,
any other advantages given over RX?

20
00:01:02.910 --> 00:01:05.572
Yeah you don't have to learn RX,
which is really hard.

21
00:01:05.572 --> 00:01:09.550
[LAUGH] He had to learn observables which
is not the easiest thing to do at least

22
00:01:09.550 --> 00:01:10.140
it wasn't for me.

23
00:01:10.140 --> 00:01:11.600
Observables was a tough thing for

24
00:01:11.600 --> 00:01:14.470
me to understand whereas
Redux is just JavaScript.

25
00:01:14.470 --> 00:01:16.254
So I think that's the best overhead.

26
00:01:16.254 --> 00:01:20.850
With RXJS, you have to really understand
what you're doing to set up a structure

27
00:01:20.850 --> 00:01:23.580
similar to Redux because
Redux is like here.

28
00:01:23.580 --> 00:01:27.820
It's the only way to do it because RX,
like you could mess up and have like

29
00:01:27.820 --> 00:01:33.880
the worst architecture ever or the best,
it depends on how brilliant you are.

30
00:01:33.880 --> 00:01:39.360
Can you describe in a few words what
the advantages about using Redux, okay?

31
00:01:39.360 --> 00:01:44.100
But it's predictable, we can actually
predict our state or it's like, if you

32
00:01:44.100 --> 00:01:48.200
have local state and like 2A data binding
like for instance inside of a component.

33
00:01:48.200 --> 00:01:52.260
It's gonna be really hard to predict
where the state is, what's happening.

34
00:01:52.260 --> 00:01:53.040
Where it's being mutated,

35
00:01:53.040 --> 00:01:56.970
where it's not being mutated,
whereas Redux is actually really easy.

36
00:01:56.970 --> 00:02:00.160
The only way to modify
a state is to fire an action.

37
00:02:00.160 --> 00:02:02.900
And then only in our reducers
are we changing the state.

38
00:02:02.900 --> 00:02:06.140
So as we can actually kind of understand
what's happening where a state and

39
00:02:06.140 --> 00:02:09.290
because everything is all
the state is changed by an action.

40
00:02:09.290 --> 00:02:12.600
We get a timeline of every single thing
that's happening in our application,

41
00:02:12.600 --> 00:02:15.260
which is why Redux can like travel
through time which is like one of the big

42
00:02:15.260 --> 00:02:15.880
selling points.

43
00:02:15.880 --> 00:02:19.890
You can go back in time and undo the state
like go back to the previous state in your

44
00:02:19.890 --> 00:02:22.770
app which means you're walking
back in time in your application.

45
00:02:22.770 --> 00:02:24.940
And that's what the dev tool does,
it's actually pretty cool.

46
00:02:24.940 --> 00:02:28.388
I would highly recommend checking it
out using a Redux app on the web.

47
00:02:28.388 --> 00:02:31.597
It's like if this thing pop open and
you can this time travel through your app.

48
00:02:31.597 --> 00:02:35.869
It's really great for debugging too,
I've actually used it in production to

49
00:02:35.869 --> 00:02:38.739
track what users were doing
when an error happened.

50
00:02:38.739 --> 00:02:42.360
Go look at the logs in the Redux and
I can see exactly what actions they did.

51
00:02:42.360 --> 00:02:46.010
I can go back all the way to what they
were doing like this is where it fell.

52
00:02:46.010 --> 00:02:48.000
So it's pretty pretty good to do that.

53
00:02:50.648 --> 00:02:51.410
&gt;&gt; Scott Moss: Nice.

54
00:02:51.410 --> 00:02:55.180
Yeah, and testing is easy too because they
are just pure functions, no side effects.

55
00:02:55.180 --> 00:02:56.530
So you can test pretty easily.

56
00:02:58.820 --> 00:03:03.780
Any more questions on this stuff?

57
00:03:03.780 --> 00:03:06.067
Okay, so-
&gt;&gt; Speaker 3: What are the tricky parts of

58
00:03:06.067 --> 00:03:09.673
the downfalls of that approach,
from your perspective,

59
00:03:09.673 --> 00:03:14.210
you're talking about advantages but,
disadvantages.

60
00:03:14.210 --> 00:03:17.030
&gt;&gt; Scott Moss: Yeah, this advantages is
tons of border plate like if you look at

61
00:03:17.030 --> 00:03:18.250
this reducer here.

62
00:03:18.250 --> 00:03:19.980
This is actually just a small reducer.

63
00:03:19.980 --> 00:03:21.610
I've written apps with reducers are like,

64
00:03:21.610 --> 00:03:26.390
I don't know, just huge, huge reducers
doing all types of creative stuff.

65
00:03:26.390 --> 00:03:28.180
And there's so
much boilerplate because you'd be having

66
00:03:28.180 --> 00:03:29.420
the producers doing the same thing.

67
00:03:29.420 --> 00:03:34.040
So you find yourself trying to make
like these methods that do try to

68
00:03:34.040 --> 00:03:36.238
take care of all the cases for
if all your reducers.

69
00:03:36.238 --> 00:03:39.230
So a lot of boilerplate,
tons of boilerplate.

70
00:03:39.230 --> 00:03:43.110
You have to be really good organization,
like for

71
00:03:43.110 --> 00:03:47.750
instance, I always find myself typing
out these action names sometimes and

72
00:03:47.750 --> 00:03:49.970
I'm like what is going on and
it kind of breaks.

73
00:03:49.970 --> 00:03:53.430
The other thing for
me which is the biggest for

74
00:03:53.430 --> 00:03:57.660
me I would say is like Redux
doesn't handle side effects at all.

75
00:03:57.660 --> 00:04:01.430
A side effect is, so
I want this action to happen.

76
00:04:01.430 --> 00:04:04.700
So when it's action fires,
I want something else to happen.

77
00:04:04.700 --> 00:04:06.300
Like I want some asynchronous
thing to happen.

78
00:04:06.300 --> 00:04:10.315
So when I add a post I also want to go
ahead and make this call to the analytics

79
00:04:10.315 --> 00:04:13.450
TV or something like that and Redux
doesn't really handle that for you at all.

80
00:04:13.450 --> 00:04:14.680
There is no story for that.

81
00:04:14.680 --> 00:04:18.020
You gotta do it yourself so
that kind of sucks for me.

82
00:04:18.020 --> 00:04:21.370
Whereas I want to be able to describe
side effects when certain actions happen.

83
00:04:22.520 --> 00:04:28.120
And that's just not there..And then
the configuration is kind of tough

84
00:04:28.120 --> 00:04:32.610
I guess..You have to do a lot of things
like connecting it with the connect and

85
00:04:32.610 --> 00:04:34.800
all types other stuff like that.

86
00:04:34.800 --> 00:04:37.900
So there's a lot of configuration,
a lot of boilerplate, no support for

87
00:04:37.900 --> 00:04:42.836
side effects and yeah,
those are the downsides for me.

88
00:04:42.836 --> 00:04:46.680
Yeah, and the types making sure that
they're all the same other than that

89
00:04:46.680 --> 00:04:47.770
it's pretty good.

90
00:04:47.770 --> 00:04:51.520
It's still one of the best things
out there as far as state management

91
00:04:51.520 --> 00:04:53.300
goes for sure.

92
00:04:53.300 --> 00:04:55.880
But if you know RXJS I
recommended just using RXJS.

93
00:04:55.880 --> 00:04:57.279
If you don't know observables use Redux.

94
00:04:59.980 --> 00:05:04.240
I want to go over the stuff we did today
and get a chance to ask questions and

95
00:05:04.240 --> 00:05:06.520
then kind of go over the thing
were gonna build tomorrow.

96
00:05:06.520 --> 00:05:08.030
We're gonna be building
a fitness app tomorrow.

97
00:05:08.030 --> 00:05:10.610
An app that your,
it's actually gonna look pretty good.

98
00:05:10.610 --> 00:05:12.210
You could probably like
put in the app store.

99
00:05:12.210 --> 00:05:14.060
It's gonna be like a really good
looking app, it's really dope.

100
00:05:14.060 --> 00:05:14.810
It's called Sweatbook.

101
00:05:14.810 --> 00:05:15.946
It's gonna be amazing.

102
00:05:15.946 --> 00:05:20.170
[LAUGH] Yeah, Sweatbook,
but, yeah, so now,

103
00:05:20.170 --> 00:05:24.560
let's just go over all your questions for
today specifically because tomorrow we're

104
00:05:24.560 --> 00:05:27.010
gonna just,
we're gonna hit the ground running.

105
00:05:27.010 --> 00:05:29.945
Believe it or not, most of the stuff that
you learned today is pretty much already.

106
00:05:29.945 --> 00:05:32.797
There are some like APIs
that we haven't used but

107
00:05:32.797 --> 00:05:36.605
the API is a read the documentation
like that's nothing.

108
00:05:36.605 --> 00:05:38.525
But most of the basic concepts for
what you know now.

109
00:05:38.525 --> 00:05:41.435
You can actually build
an application because it's just,

110
00:05:41.435 --> 00:05:46.105
it's literally just the components,
these components

111
00:05:46.105 --> 00:05:50.260
with whatever JavaScript you want to
use for state management or whatever.

112
00:05:50.260 --> 00:05:51.870
But it's literally just these components.

113
00:05:51.870 --> 00:05:53.200
And how React works.

114
00:05:53.200 --> 00:05:54.890
Everything else is just JavaScript.

