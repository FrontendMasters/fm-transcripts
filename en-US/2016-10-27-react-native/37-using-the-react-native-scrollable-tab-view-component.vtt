WEBVTT

1
00:00:00.000 --> 00:00:04.042
[MUSIC]

2
00:00:04.042 --> 00:00:07.924
&gt;&gt; Scott Moss: What we wanna do first is
I'm just going to pull open the todo app.

3
00:00:17.778 --> 00:00:19.135
&gt;&gt; Scott Moss: And
it's actually pretty simple.

4
00:00:19.135 --> 00:00:22.485
The person that made this
did a really good job on it.

5
00:00:22.485 --> 00:00:23.985
I was working on my own and

6
00:00:23.985 --> 00:00:28.961
halfway through I found this and
I was like that's the one that I want.

7
00:00:28.961 --> 00:00:32.015
So we're gonna change a few things
around in our todo app to actually

8
00:00:32.015 --> 00:00:33.930
have this makes sense.

9
00:00:33.930 --> 00:00:36.034
Otherwise it's gonna be kind of crazy.

10
00:00:36.034 --> 00:00:39.850
So let's bring the area over there.

11
00:00:39.850 --> 00:00:42.055
Okay, let's just run this very quick.

12
00:00:47.284 --> 00:00:48.490
&gt;&gt; Scott Moss: All right so
I'll let that run, so

13
00:00:48.490 --> 00:00:50.750
the first thing we need to
do is actually download it.

14
00:00:50.750 --> 00:00:57.750
So we can download it by
NPM install this thing.

15
00:00:57.750 --> 00:01:00.930
React-native-scrollable-tab-view.

16
00:01:00.930 --> 00:01:01.760
Really verbose.

17
00:01:02.800 --> 00:01:04.623
So we'll download that and

18
00:01:04.623 --> 00:01:09.486
then we'll just import
the react-native-scrollable-tab-view.

19
00:01:09.486 --> 00:01:10.540
Sometimes you'll see require,

20
00:01:10.540 --> 00:01:13.120
if you're not familiar with node,
that's just the ES5.

21
00:01:15.230 --> 00:01:18.090
This is how you require
modules in common JS,

22
00:01:18.090 --> 00:01:20.980
we just used the ES6
version which is import.

23
00:01:20.980 --> 00:01:24.260
But when that compiles down to ES5,
it just turns to this anyway.

24
00:01:24.260 --> 00:01:26.389
So that means we can use require
in our code and still works.

25
00:01:29.440 --> 00:01:30.720
So let's download it.

26
00:01:30.720 --> 00:01:31.710
Let's head over and

27
00:01:31.710 --> 00:01:34.580
I now we just need to figure out
an appropriate place to put this.

28
00:01:34.580 --> 00:01:36.870
So if you think about it.

29
00:01:36.870 --> 00:01:41.024
Let's go back to the design arch,
now we're gonna be doing the todo app,

30
00:01:41.024 --> 00:01:43.040
we're now gonna go design our app.

31
00:01:43.040 --> 00:01:44.582
I know, so the todo app,

32
00:01:44.582 --> 00:01:49.372
I would say appropriate place would be
probably the root of our application.

33
00:01:49.372 --> 00:01:53.354
It would be to perfect place to put
the tab interview or the tab interface.

34
00:01:53.354 --> 00:02:01.911
So let's go there and then this case
it's actually, is it the wrong app?

35
00:02:01.911 --> 00:02:04.690
Well, there it is, todo,
you come up over here.

36
00:02:05.750 --> 00:02:06.470
Thank you.

37
00:02:06.470 --> 00:02:09.980
And this case is going to be main,
so main is the root.

38
00:02:09.980 --> 00:02:11.150
So this is where we are gonna import it.

39
00:02:11.150 --> 00:02:17.836
So we'll say import and
we'll say TabView from

40
00:02:17.836 --> 00:02:24.200
react-native-scrollable-tab-view.

41
00:02:25.210 --> 00:02:25.710
Cool.

42
00:02:26.820 --> 00:02:27.690
Yes?

43
00:02:27.690 --> 00:02:30.270
&gt;&gt; Speaker 2: Question I
think in the channel.

44
00:02:30.270 --> 00:02:38.100
Jessy T is asking about UI page view
controller from iOS, if that will work?

45
00:02:39.130 --> 00:02:45.678
&gt;&gt; Scott Moss: UI page view controller,
I'm pretty sure that's iOS only.

46
00:02:45.678 --> 00:02:49.545
UI page view.

47
00:02:49.545 --> 00:02:53.560
&gt;&gt; Speaker 2: So I don't understand the
question that they're asking actually, so.

48
00:02:56.870 --> 00:02:58.763
&gt;&gt; Scott Moss: Yeah,
I think what he's asking for is for

49
00:02:58.763 --> 00:03:02.186
older version of react native,
I don't they use that component anymore.

50
00:03:02.186 --> 00:03:05.389
They're trying to
standardize everything but

51
00:03:05.389 --> 00:03:10.070
usually if it says UI on it or
iOS only, it's only for that platform.

52
00:03:10.070 --> 00:03:13.410
So I guess that whatever Jessy is talking
about is only gonna work for iOS.

53
00:03:13.410 --> 00:03:16.000
But I'm also pretty sure
that that is deprecated.

54
00:03:16.000 --> 00:03:16.830
They no longer use it.

55
00:03:16.830 --> 00:03:20.010
Like a lot of the docs use some
stuff that's not used anymore.

56
00:03:22.890 --> 00:03:27.880
That is the container part of
the Android part, the container

57
00:03:27.880 --> 00:03:29.301
part of the Android
part that he mentioned.

58
00:03:32.650 --> 00:03:34.030
Not sure.

59
00:03:34.030 --> 00:03:38.793
Well, I had to come back to that,
I'm not sure what Jessy is talking about.

60
00:03:38.793 --> 00:03:44.720
Anyway, so the TabView here,
we run Java right here in the main.

61
00:03:44.720 --> 00:03:47.210
Well, the scroll view tab, yes,

62
00:03:47.210 --> 00:03:50.724
the scroll view tab view will totally work
because it's built in just JavaScript.

63
00:03:50.724 --> 00:03:53.890
This TabView that we're using right now

64
00:03:53.890 --> 00:03:56.450
is built to harvest in JavaScript which
means it works on both platforms.

65
00:03:56.450 --> 00:03:58.910
It doesn't have any native dependencies.

66
00:03:58.910 --> 00:03:59.870
So yes, it will totally work.

67
00:03:59.870 --> 00:04:03.080
We haven't gotten to the section where
we're gonna use native stuff yet.

68
00:04:03.080 --> 00:04:03.680
Cool, okay.

69
00:04:03.680 --> 00:04:07.810
So now we can just say scroll view or
whatever we call it TabView.

70
00:04:09.330 --> 00:04:12.050
We just drop that in there, shazam.

71
00:04:12.050 --> 00:04:15.820
And the way this works is if you look at
the docks, it's actually pretty cool.

72
00:04:17.380 --> 00:04:21.497
&gt;&gt; Scott Moss: All we have to do is just
pass in as children the components that we

73
00:04:21.497 --> 00:04:23.270
want to render.

74
00:04:23.270 --> 00:04:27.980
And it just have to have a tab label, we
can put a tab bar here if we wanted to but

75
00:04:27.980 --> 00:04:30.050
it will just render one by default for us.

76
00:04:30.050 --> 00:04:31.380
So let's just do that.

77
00:04:31.380 --> 00:04:36.527
So we'll just say TabView,
we have our todo and

78
00:04:36.527 --> 00:04:40.912
then we'll say tablabel equals Todos.

79
00:04:40.912 --> 00:04:42.046
That's it.

80
00:04:43.360 --> 00:04:44.430
So let's reload this.

81
00:04:44.430 --> 00:04:46.480
I think I got the wrong app one.

82
00:04:46.480 --> 00:04:47.257
Yeah.

83
00:04:54.736 --> 00:04:56.360
&gt;&gt; Scott Moss: Sweet notes.

84
00:04:56.360 --> 00:04:58.836
Think I had to build it now, well,
let's just reload just in case.

85
00:05:04.216 --> 00:05:05.886
&gt;&gt; Scott Moss: Okay, let me rebuild this.

86
00:05:08.786 --> 00:05:10.433
&gt;&gt; Scott Moss: Yeah, something's wrong.

87
00:05:18.572 --> 00:05:20.430
&gt;&gt; Scott Moss: Sweet.
So let this rebuild.

88
00:05:20.430 --> 00:05:24.394
So this is a simple way just to get
some pretty slick tabs in our app.

89
00:05:26.130 --> 00:05:26.720
Super easy.

90
00:05:30.180 --> 00:05:36.417
Any questions on this so far?

91
00:05:36.417 --> 00:05:38.573
All right, cool.

92
00:05:38.573 --> 00:05:39.073
Let this build.

93
00:05:48.940 --> 00:05:53.880
&gt;&gt; Scott Moss: Okay, adb devices.

94
00:05:53.880 --> 00:05:59.580
So the the device is offline, so I need
it to shut it down and open it back up.

95
00:05:59.580 --> 00:06:01.568
I think it tried to install
while there was an error up, so

96
00:06:01.568 --> 00:06:03.690
it just couldn't connect to it and
this happens sometimes.

97
00:06:03.690 --> 00:06:06.590
I'm just gonna start it up again.

98
00:06:06.590 --> 00:06:09.489
There we go.

99
00:06:09.489 --> 00:06:12.706
Now with this scroller tab view, one is
actually probably the best one I've seen

100
00:06:12.706 --> 00:06:15.550
because what it allows you
to do which others don't.

101
00:06:15.550 --> 00:06:21.520
Is it allows you to create your own
custom tab bar, where is it, where?

102
00:06:21.520 --> 00:06:25.060
So you can just render a bar,
you can pass any component that you want.

103
00:06:25.060 --> 00:06:30.350
And then he goes on and he specifies
what that tab are must be expecting.

104
00:06:30.350 --> 00:06:34.960
So as you look at our design,
we have this transparent tab

105
00:06:34.960 --> 00:06:39.330
bar here and
by running your own custom tab bar.

106
00:06:39.330 --> 00:06:42.220
You can do things like, so
I think by default it will highlight

107
00:06:42.220 --> 00:06:45.860
the bottom of each square in the tab
when it's like on active tab.

108
00:06:45.860 --> 00:06:49.200
But you can change that to don't hide
the bottom, just hide the whole square or

109
00:06:49.200 --> 00:06:52.700
change the code of the icon or
make it bigger, scale it.

110
00:06:52.700 --> 00:06:55.550
Or shrink it or wherever you want
just by running your own bar and

111
00:06:55.550 --> 00:06:59.130
it won't affect new transitioning
tabs which I think is pretty awesome.

112
00:07:00.630 --> 00:07:03.390
Okay, so we got that up and
I was right it again.

113
00:07:05.410 --> 00:07:07.053
Adb devices, there it is.

114
00:07:16.871 --> 00:07:19.286
&gt;&gt; Scott Moss: Actually, there is
a really good router that it's been like,

115
00:07:19.286 --> 00:07:21.890
I've noticed coming out of
the react native community.

116
00:07:21.890 --> 00:07:26.080
It's like a redux router I think,
somebody made it for

117
00:07:26.080 --> 00:07:29.110
react native, looks pretty good,
just haven't tried it out yet.

118
00:07:29.110 --> 00:07:30.914
I've been using the tabs.

119
00:07:32.938 --> 00:07:34.420
&gt;&gt; Scott Moss: All right.

120
00:07:34.420 --> 00:07:35.483
Let's check this out.

121
00:07:37.377 --> 00:07:39.954
&gt;&gt; Scott Moss: Let's go in here and
reload.

122
00:07:42.818 --> 00:07:44.104
&gt;&gt; Scott Moss: It's trying to
connect to a remote debugger.

123
00:07:44.104 --> 00:07:45.016
Go away!

124
00:07:49.618 --> 00:07:50.420
&gt;&gt; Scott Moss: Stop it.

125
00:07:52.560 --> 00:07:56.890
That's why it was messing our [INAUDIBLE],

126
00:07:56.890 --> 00:08:01.826
paused on an exception, remote debugger.

127
00:08:01.826 --> 00:08:07.205
Okay, let me try to exit this
without restarting everything.

128
00:08:07.205 --> 00:08:10.850
Please just stop.

129
00:08:10.850 --> 00:08:14.516
All right, so
I'm gonna shut this down again [LAUGH].

130
00:08:14.516 --> 00:08:16.378
I run it one more time.

131
00:08:21.050 --> 00:08:23.491
&gt;&gt; Scott Moss: Everybody see
the issue that I ran into?

132
00:08:23.491 --> 00:08:27.953
It connected to the remote debugger and
I clicked a breakpoint and

133
00:08:27.953 --> 00:08:31.047
it paused there and
I kept clicking on the UI.

134
00:08:31.047 --> 00:08:34.890
Refresh, reload, but it was like when you
told me the pause, I don't want to do.

135
00:08:34.890 --> 00:08:39.258
So the emulator crashes cuz I'm
sending these physical commands, but

136
00:08:39.258 --> 00:08:43.575
the software is I'm stuck, so
what do you want me to do, it just died.

137
00:08:47.821 --> 00:08:49.154
&gt;&gt; Scott Moss: So if I run it again,

138
00:08:49.154 --> 00:08:53.558
it's gonna connect to the debugger
cuz that was the last setting.

139
00:08:53.558 --> 00:08:58.811
And all I need to do is go into web and
uncheck that right-click.

140
00:08:58.811 --> 00:09:00.087
So it doesn't freak out.

141
00:09:04.341 --> 00:09:07.178
&gt;&gt; Scott Moss: There we go.

142
00:09:07.178 --> 00:09:09.461
So I'll come in here, go to sources.

143
00:09:13.568 --> 00:09:16.590
&gt;&gt; Speaker 2: Couple of questions or
problems from the chatroom.

144
00:09:16.590 --> 00:09:17.800
&gt;&gt; Scott Moss: Yes.

145
00:09:17.800 --> 00:09:21.580
&gt;&gt; Speaker 2: David is asking
about the ABD command.

146
00:09:21.580 --> 00:09:23.460
&gt;&gt; Scott Moss: Android Device Bridge.

147
00:09:23.460 --> 00:09:26.070
&gt;&gt; Speaker 2: I think it's ADB.

148
00:09:26.070 --> 00:09:27.312
&gt;&gt; Scott Moss: Yeah.
&gt;&gt; Speaker 2: Not ABD.

149
00:09:27.312 --> 00:09:29.770
&gt;&gt; Scott Moss: Yes, Android Device Bridge.

150
00:09:29.770 --> 00:09:32.034
So if you install Android
on your computer,

151
00:09:32.034 --> 00:09:35.104
you'll get this command called Android and
you can run it.

152
00:09:35.104 --> 00:09:38.370
And it will just open up like the
Android SDK installer and all the stuff.

153
00:09:38.370 --> 00:09:42.200
It also installs this thing called ADB,
which is a debugging tool

154
00:09:42.200 --> 00:09:46.710
that Android developers use to bridge
their device to their computer.

155
00:09:46.710 --> 00:09:50.740
So it's a great way to connect devices,
enter devices into your computer.

156
00:09:50.740 --> 00:09:54.931
I use it a lot not just react native
development before like adding ROMs and

157
00:09:54.931 --> 00:09:57.037
modifications to my Android phone.

158
00:09:57.037 --> 00:10:02.198
It's just a way to connect devices to your
computer and you're running adb devices,

159
00:10:02.198 --> 00:10:05.650
we can detect what devices
are attached to our computer.

160
00:10:05.650 --> 00:10:09.030
In this case, it's only this emulator one,
that is what that's for.

161
00:10:09.030 --> 00:10:11.319
&gt;&gt; Speaker 2: Okay, another issue,

162
00:10:11.319 --> 00:10:16.935
Mark H is saying he is getting
an error with iOS in TabView.

163
00:10:16.935 --> 00:10:20.320
Children.forEach is not a function.

164
00:10:20.320 --> 00:10:20.960
&gt;&gt; Speaker 3: Same here.

165
00:10:20.960 --> 00:10:22.332
&gt;&gt; Scott Moss: Same thing, okay.

166
00:10:22.332 --> 00:10:25.480
I will run to this issue and
we'll probably fix it.

167
00:10:25.480 --> 00:10:26.960
Let's see what happens.

168
00:10:26.960 --> 00:10:31.800
I've run an iOS before and I didn't
have issues, so it should be fine.

169
00:10:31.800 --> 00:10:33.130
All right.

170
00:10:33.130 --> 00:10:33.950
Sweet.

171
00:10:33.950 --> 00:10:38.903
So let's reload this, look,
I'm getting right now too, so

172
00:10:38.903 --> 00:10:41.765
children for each is not a function.

173
00:10:41.765 --> 00:10:42.700
Let's just refresh this.

174
00:10:44.020 --> 00:10:45.370
All right.
So I'm getting the same thing.

175
00:10:45.370 --> 00:10:49.010
Let's figure out where
this is coming from,

176
00:10:49.010 --> 00:10:54.350
if we look, go back at the docks,
probably forgot something.

177
00:10:55.400 --> 00:10:57.320
There we go.

178
00:10:57.320 --> 00:10:58.030
So it says here.

179
00:11:00.260 --> 00:11:00.786
Scroll over.

180
00:11:00.786 --> 00:11:02.983
&gt;&gt; Speaker 4: [INAUDIBLE] Tab [INAUDIBLE].

181
00:11:02.983 --> 00:11:04.570
&gt;&gt; Scott Moss: You just need
more than one tab, yeah.

182
00:11:04.570 --> 00:11:08.120
So let's just add a new view here.

183
00:11:08.120 --> 00:11:10.040
Just to quiet it.

184
00:11:10.040 --> 00:11:11.280
And also, it needs a tablabel.

185
00:11:14.020 --> 00:11:14.740
And we'll say other.

186
00:11:16.430 --> 00:11:18.096
There we go.

187
00:11:18.096 --> 00:11:18.993
What?

188
00:11:18.993 --> 00:11:19.676
Come on bro.

189
00:11:25.384 --> 00:11:25.930
&gt;&gt; Scott Moss: There we go.

190
00:11:27.020 --> 00:11:30.880
So now we have this nice
TabView with the Todos.

191
00:11:30.880 --> 00:11:34.580
The one that we already had right
here on this Todos right here.

192
00:11:34.580 --> 00:11:35.740
And then other.

193
00:11:35.740 --> 00:11:38.429
If you click on it, it will scroll, so

194
00:11:38.429 --> 00:11:41.800
that we can also just
slide over with a gesture.

195
00:11:41.800 --> 00:11:45.096
And you can see it's native, but

196
00:11:45.096 --> 00:11:49.590
it was built in JavaScript, that's crazy.

197
00:11:49.590 --> 00:11:53.520
If you ever try to do
this on my mobile web,

198
00:11:53.520 --> 00:11:57.210
you know that this is not easy to do and
still be 60 frames per second.

199
00:11:57.210 --> 00:11:58.800
That's just not a thing.

200
00:11:58.800 --> 00:12:02.750
Cuz the delay on the web with the touch
and the dragging is not meant for screens.

201
00:12:02.750 --> 00:12:06.580
It's just not gonna be the same,
but you can just come in here and

202
00:12:06.580 --> 00:12:09.650
you could do this all day and
it's like [INAUDIBLE] free.

203
00:12:09.650 --> 00:12:10.585
No junk there.

204
00:12:10.585 --> 00:12:12.119
And it's all javaScript which is amazing,

205
00:12:12.119 --> 00:12:13.580
that just blew my mind
when I first saw it.

