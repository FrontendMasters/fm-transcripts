WEBVTT

1
00:00:00.000 --> 00:00:03.764
[MUSIC]

2
00:00:03.764 --> 00:00:06.950
&gt;&gt; Scott: So now we're gonna talk about
the different routing strategies in React.

3
00:00:06.950 --> 00:00:08.580
And then the one that we're gonna use.

4
00:00:10.020 --> 00:00:15.676
So when you think of a mobile
app compared to a web app,

5
00:00:15.676 --> 00:00:19.090
routing is totally different.

6
00:00:19.090 --> 00:00:19.980
It's not even the same.

7
00:00:20.990 --> 00:00:25.248
There's completely different ways to route
but React Native actually standardized,

8
00:00:25.248 --> 00:00:26.808
I wouldn't say standardized.

9
00:00:26.808 --> 00:00:31.710
It actually brought over the way you
route from the web over to mobile.

10
00:00:31.710 --> 00:00:34.530
The only issue is that they created

11
00:00:34.530 --> 00:00:38.860
a navigation library when React Native
first came out and it was not,

12
00:00:38.860 --> 00:00:43.210
I don't wanna say it was horrible,
it was just people didn't like it.

13
00:00:43.210 --> 00:00:44.648
It wasn't that good.

14
00:00:44.648 --> 00:00:47.992
And I don't know if it was because they
were expecting it to be more like the web

15
00:00:47.992 --> 00:00:50.112
or if it was just,
we expected more like mobile.

16
00:00:50.112 --> 00:00:51.691
I don't know, people just didn't like it.

17
00:00:51.691 --> 00:00:55.027
But it's still in its React Native and
then couple months ago they

18
00:00:55.027 --> 00:00:59.350
actually started working on a new version
of it, and that's actually in there too.

19
00:00:59.350 --> 00:01:02.780
It's not really documented but it's in
Reactive Native and you can use it.

20
00:01:02.780 --> 00:01:06.724
So some people have taken that and
built their own routers on top of that,

21
00:01:06.724 --> 00:01:08.547
which are actually pretty neat.

22
00:01:08.547 --> 00:01:14.071
But because of the state of navigation
in React Native at this point and

23
00:01:14.071 --> 00:01:17.826
there's really not
a standard way of doing it.

24
00:01:17.826 --> 00:01:20.474
Yeah, you can use the one that
React Native provides but it's not the one

25
00:01:20.474 --> 00:01:24.170
the community wants, and the community's
still kind of making which ones they want.

26
00:01:24.170 --> 00:01:26.550
I decide to go with a tab navigation.

27
00:01:26.550 --> 00:01:29.040
So that we can avoid all
of the routing mess and

28
00:01:29.040 --> 00:01:33.400
just use tabs, which is a lot easier and
a lot more appropriate for this app.

29
00:01:33.400 --> 00:01:37.302
So we're gonna use tabs and
there's a couple ways we can do it.

30
00:01:37.302 --> 00:01:43.333
If we go look

31
00:01:43.333 --> 00:01:49.980
at the docs.

32
00:01:49.980 --> 00:01:51.910
Who here has build Native Android apps?

33
00:01:51.910 --> 00:01:53.150
I think I asked this yesterday.

34
00:01:53.150 --> 00:01:56.370
Nobody?
So there's this thing in

35
00:01:56.370 --> 00:02:00.824
Native Android called a, what is it?

36
00:02:00.824 --> 00:02:02.396
A view pager?

37
00:02:02.396 --> 00:02:03.790
Yeah.

38
00:02:03.790 --> 00:02:05.301
Which is more like,
it's just like a slide.

39
00:02:05.301 --> 00:02:08.085
Have you ever been on an app and
you get to the intro screen and

40
00:02:08.085 --> 00:02:10.548
you're just swiping through
this intro of the app.

41
00:02:10.548 --> 00:02:13.655
And then you can play it,
it's like a view pager.

42
00:02:13.655 --> 00:02:17.022
So Android has this stuff
kind of built in and

43
00:02:17.022 --> 00:02:21.845
most Android apps have really
sophisticated tab interfaces.

44
00:02:21.845 --> 00:02:23.145
And iOS, actually the UI kit,

45
00:02:23.145 --> 00:02:26.150
I forgot what version has a really
has really sweet tab interfaces too.

46
00:02:26.150 --> 00:02:30.060
So what they did was they try to
standardize that, but the one React Native

47
00:02:30.060 --> 00:02:34.200
provides actually wasn't,
I didn't think it was that extendable.

48
00:02:34.200 --> 00:02:36.210
So somebody created this really,
really awesome one,

49
00:02:36.210 --> 00:02:37.629
which is the one that we're gonna use.

50
00:02:37.629 --> 00:02:42.520
And it's called
react-native-scrollable-tab-view

51
00:02:42.520 --> 00:02:43.989
as really legit.

52
00:02:43.989 --> 00:02:46.969
And what I think is really cool about
it is that is actually built in a 100%

53
00:02:46.969 --> 00:02:48.360
JavaScript.

54
00:02:48.360 --> 00:02:49.766
There's no Native components for this.

55
00:02:49.766 --> 00:02:53.440
So, it's not wrapping like
the Native tab interface for IOS or

56
00:02:53.440 --> 00:02:58.452
the Native tab interface for Android,
it's purely JavaScript, which is amazing.

57
00:02:58.452 --> 00:03:01.655
And that's why I really like React Native
because you can just make everything in

58
00:03:01.655 --> 00:03:03.928
JavaScript that immediately works for
Android and IOS.

59
00:03:03.928 --> 00:03:06.990
Or you can grab the Native
version of IOS and wrap it and

60
00:03:06.990 --> 00:03:09.589
grab the Native Android version and
wrap it.

61
00:03:09.589 --> 00:03:12.109
It's totally up to you because
the performance in JavaScript is

62
00:03:12.109 --> 00:03:13.300
actually pretty good.

63
00:03:13.300 --> 00:03:14.560
So it's totally fine.

64
00:03:14.560 --> 00:03:18.121
So this person decided to use 100%
JavaScript, which I think is amazing.

65
00:03:18.121 --> 00:03:20.150
If you look at the source code,
it's actually pretty good.

66
00:03:20.150 --> 00:03:24.079
And it looks like this, it's animated,
and it's scrolling and it's legit.

67
00:03:24.079 --> 00:03:28.228
So I'm just gonna walk through how
to add this to the todo app, and

68
00:03:28.228 --> 00:03:31.710
what you're gonna do is add
this to the Sweat Book app.

