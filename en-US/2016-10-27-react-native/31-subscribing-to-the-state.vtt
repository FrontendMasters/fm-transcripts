WEBVTT

1
00:00:00.000 --> 00:00:03.898
[MUSIC]

2
00:00:03.898 --> 00:00:05.424
&gt;&gt; Scott Moss: All right, so now we're
actually gonna subscribe to the state,

3
00:00:05.424 --> 00:00:06.380
and then we're gonna see all this work.

4
00:00:06.380 --> 00:00:10.000
And this is actually pretty much the same
thing, we already did all the hard part.

5
00:00:10.000 --> 00:00:12.860
To get the state, we just make
another function here called map.

6
00:00:12.860 --> 00:00:14.300
You can call it whatever you want,

7
00:00:14.300 --> 00:00:18.760
but I'm was gonna call it mapStateToProps
cuz that's what we're doing.

8
00:00:18.760 --> 00:00:23.410
And where itâ€™s map actions to props takes
a dispatch that we're going to use.

9
00:00:23.410 --> 00:00:27.882
This is actually just going to take the
state, so the actual state object that we

10
00:00:27.882 --> 00:00:31.529
created to store,
let's call it store that makes sense.

11
00:00:31.529 --> 00:00:37.540
Let's just call it state this going to
state and just like map actions to props.

12
00:00:37.540 --> 00:00:39.410
It just takes an objects I'm
going to do the same thing,

13
00:00:39.410 --> 00:00:40.900
I'm going to take an object here.

14
00:00:40.900 --> 00:00:43.740
And the state that I want is I'm more
interested in todos I was always

15
00:00:43.740 --> 00:00:48.110
interested in, and
that's going to be state.todos.

16
00:00:48.110 --> 00:00:51.530
And the reason I know that's state.todos,
it's because if you go look at

17
00:00:51.530 --> 00:00:55.630
the reducers and
combine reducer you put it right there.

18
00:00:55.630 --> 00:00:58.550
The property called the property
name is todos whose value

19
00:00:58.550 --> 00:01:01.600
is also the todos reducer.

20
00:01:01.600 --> 00:01:03.110
So this is the state
that I want right here.

21
00:01:05.480 --> 00:01:11.470
I want that state and I'm buying to get
to the property with the same name todos.

22
00:01:11.470 --> 00:01:15.260
So now inside this component I can
say this stuff props got todos and

23
00:01:15.260 --> 00:01:15.880
I'll get that state.

24
00:01:18.330 --> 00:01:19.660
So now that we have that.

25
00:01:19.660 --> 00:01:21.120
Let's head down.

26
00:01:21.120 --> 00:01:25.650
Here and instead of iterating
over this.state.todos,

27
00:01:25.650 --> 00:01:28.400
we want it over this.props.todos.

28
00:01:31.930 --> 00:01:34.350
Everybody see that?

29
00:01:34.350 --> 00:01:36.120
So we'll just go iterate this.props.todos.

30
00:01:37.970 --> 00:01:42.080
And then I think there's actually one more
change I would wanna clear out the input.

31
00:01:42.080 --> 00:01:47.512
This.setState newtodo is a blank
string and now we don't need to

32
00:01:47.512 --> 00:01:53.090
keep track of the state.todo
this because it's a redux now.

33
00:01:53.090 --> 00:01:54.210
We're gonna keep track of this.

34
00:01:54.210 --> 00:01:56.340
I mean I guess you could
put this in redux but

35
00:01:56.340 --> 00:01:59.530
that means that every single keystroke or
you reduces or go to fire.

36
00:01:59.530 --> 00:02:01.690
So usually what forms.

37
00:02:01.690 --> 00:02:04.520
This is like the only time I ever keep
stating my components is with forms.

38
00:02:05.840 --> 00:02:08.500
That's the only time any other
time like just put it in a redux.

39
00:02:08.500 --> 00:02:11.730
Put every single thing in a redux
it'll help you out so much more.

40
00:02:11.730 --> 00:02:15.560
But with forms I'm just like well my whole
application doesn't need know about this

41
00:02:15.560 --> 00:02:18.580
thing that I'm typing in right now so
I'll keep it locally this component.

42
00:02:18.580 --> 00:02:20.720
But if your whole app needed to
know about this for some reason,

43
00:02:20.720 --> 00:02:23.930
if you had an app that was, I don't know.

44
00:02:23.930 --> 00:02:27.200
If you were typing in here somewhere and
the rest your application needed to know

45
00:02:27.200 --> 00:02:30.910
about it ,then I guess that makes it
a redux but most of time it doesn't.

46
00:02:30.910 --> 00:02:31.700
So just keep it here.

47
00:02:31.700 --> 00:02:34.020
Otherwise on every single time we do

48
00:02:35.360 --> 00:02:39.700
handle change that's gonna update the
value which we'll call the action of data

49
00:02:39.700 --> 00:02:42.520
the stuff Redux it would just be crazy.

50
00:02:42.520 --> 00:02:44.870
So I don't do that.

51
00:02:44.870 --> 00:02:46.100
Yes.
&gt;&gt; Speaker 2: Is

52
00:02:46.100 --> 00:02:49.910
there a reason that you are tracking the
form state in to do instead of to do form?

53
00:02:49.910 --> 00:02:51.193
&gt;&gt; Scott Moss: Is there a reason?

54
00:02:55.835 --> 00:02:58.940
&gt;&gt; Scott Moss: No there really isn't
a reason, I was just trying to keep to do

55
00:02:58.940 --> 00:03:01.820
form as like super lightweight and
minimal as possible.

56
00:03:01.820 --> 00:03:05.130
I mean you could track the state in there,
we'd just have

57
00:03:05.130 --> 00:03:09.510
to make to do form a component,
and not a stateless component now.

58
00:03:09.510 --> 00:03:12.580
Right now it's like super stateless,
it doesn't know anything.

59
00:03:12.580 --> 00:03:14.378
Whereas if I wanna keep track
of a state here actually could.

60
00:03:14.378 --> 00:03:15.997
It would still work the same way.

61
00:03:15.997 --> 00:03:20.189
I just wanted to be able to have
the consuming component have power of what

62
00:03:20.189 --> 00:03:23.022
they wanna do with the state,
that's about it.

63
00:03:23.022 --> 00:03:27.542
&gt;&gt; Speaker 2: If todo form,
track the state could todo be stateless?

64
00:03:27.542 --> 00:03:33.110
&gt;&gt; Scott Moss: Yes but we still have
to like have these methods area way to

65
00:03:33.110 --> 00:03:41.000
do like the handle or I'm sorry to handle
present that we still have to have this.

66
00:03:42.660 --> 00:03:46.720
Yeah we do that but so we're going to get
into the two different types of points

67
00:03:46.720 --> 00:03:48.820
container and you and I call it.

68
00:03:48.820 --> 00:03:51.550
You either some people call it
like representational components.

69
00:03:51.550 --> 00:03:55.727
So a container component is like to
do is this house is all the other UI

70
00:03:55.727 --> 00:03:57.730
components like, todo form.

71
00:03:57.730 --> 00:04:01.340
So like, when it comes to actual like
keep in track a state with forms.

72
00:04:01.340 --> 00:04:04.500
I think it really depends on
really wherever you want to put,

73
00:04:04.500 --> 00:04:06.680
if you want to put it
there like a silly five.

74
00:04:06.680 --> 00:04:09.970
I think it only matters when you get
to things like application state

75
00:04:09.970 --> 00:04:10.690
where you want to store it.

76
00:04:10.690 --> 00:04:13.370
So, yeah if you wanna
to put it in todo form,

77
00:04:13.370 --> 00:04:16.700
totally do it as I don't think
there's anything wrong with that.

78
00:04:16.700 --> 00:04:18.170
This is whatever you want.

79
00:04:18.170 --> 00:04:20.530
Like I said, the only reason I did it
is that is I just wanted this to be

80
00:04:20.530 --> 00:04:21.670
super simple.

81
00:04:21.670 --> 00:04:24.540
Whereas I'm okay with this being
a little complex cuz it's already doing

82
00:04:24.540 --> 00:04:27.320
all this connect and all this other
stuff so I was like whatever.

83
00:04:27.320 --> 00:04:30.350
I'll keep the complexity here and
keep this one simple.

84
00:04:30.350 --> 00:04:31.060
But it's totally up to you.

