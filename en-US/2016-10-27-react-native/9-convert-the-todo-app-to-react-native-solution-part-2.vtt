WEBVTT

1
00:00:00.000 --> 00:00:04.298
[MUSIC]

2
00:00:04.298 --> 00:00:08.750
&gt;&gt; Scott: So the first thing we wanna do
is assess some state, so a constructor.

3
00:00:11.784 --> 00:00:15.430
&gt;&gt; Scott: Remember, we need to call
super here, otherwise, it'll freak out.

4
00:00:15.430 --> 00:00:23.674
And I will say this.state = todos: and

5
00:00:23.674 --> 00:00:29.020
newTodo:, there we go.

6
00:00:29.020 --> 00:00:30.574
So we got to stay here, and

7
00:00:30.574 --> 00:00:34.612
what we'll do now is we'll just give
you that text will make a view.

8
00:00:34.612 --> 00:00:38.380
And inside that view,
we will have a TextInput.

9
00:00:41.480 --> 00:00:42.970
And I will set up a few things here.

10
00:00:42.970 --> 00:00:44.890
I want todos on multiple lines.

11
00:00:44.890 --> 00:00:52.353
The first is gonna be the value, and
that's gonna be this.state.newTodo.

12
00:00:52.353 --> 00:01:00.773
And then, onChange text which is gonna
pass in the text when it changes,

13
00:01:00.773 --> 00:01:06.590
let me say this.handleChange.bind(this).

14
00:01:06.590 --> 00:01:09.780
So we got that and

15
00:01:09.780 --> 00:01:14.010
then we need to go ahead and set up
a button, so we'll say touchableOpacity.

16
00:01:15.290 --> 00:01:20.540
And we'll pass in some text here and
we'll say, create,

17
00:01:20.540 --> 00:01:25.750
and for the event here is just onPress.

18
00:01:25.750 --> 00:01:35.690
I will say this.handlePress.bind(this).

19
00:01:35.690 --> 00:01:37.257
So we got that set up, and

20
00:01:37.257 --> 00:01:41.527
then the next thing we do is set up
the elements to render on the page.

21
00:01:41.527 --> 00:01:45.268
So then we'll make a new View here and
we'll just,

22
00:01:45.268 --> 00:01:49.290
well to be cheap and
do some text for the elements.

23
00:01:49.290 --> 00:01:59.210
So we'll say this.state.todos.map
over them get the todo.

24
00:01:59.210 --> 00:02:00.300
Let's look at the index too.

25
00:02:03.859 --> 00:02:09.357
&gt;&gt; Scott: And what we'll do is we'll
just return a Text with the key ={i} so

26
00:02:09.357 --> 00:02:11.290
it doesn't freak out.

27
00:02:11.290 --> 00:02:15.170
And then we'll just put
the todo in there like that.

28
00:02:20.454 --> 00:02:22.020
&gt;&gt; Scott: So,
we break this on another line.

29
00:02:30.860 --> 00:02:32.200
&gt;&gt; Scott: There we go.

30
00:02:32.200 --> 00:02:32.860
So, that's what I'm doing.

31
00:02:35.661 --> 00:02:36.700
&gt;&gt; Scott: Cool, so we got that.

32
00:02:39.220 --> 00:02:41.970
No, is not, so
this is the error you were getting?

33
00:02:41.970 --> 00:02:48.327
&gt;&gt; Speaker 2: Yeah.
&gt;&gt; Scott: So this.state.newTodo

34
00:02:48.327 --> 00:02:56.644
JS 21 are in this state need to do.

35
00:02:59.440 --> 00:03:04.170
&gt;&gt; Scott: We'll come
back to see what happens.

36
00:03:04.170 --> 00:03:05.800
Just let me, okay.

37
00:03:05.800 --> 00:03:08.610
As somebody tap before, so
I can actually continue to build.

38
00:03:11.460 --> 00:03:14.280
&gt;&gt; Scott: We'll get to the Text input,
all right.

39
00:03:14.280 --> 00:03:19.084
So, we've got all this stuff set up,
now let's go ahead and start setting up.

40
00:03:19.084 --> 00:03:24.504
Let's see here, let's do the button.

41
00:03:24.504 --> 00:03:27.040
So onPress, handle,
actually we do need to set the stage.

42
00:03:27.040 --> 00:03:32.135
So what we'll do is,
we'll say on text change, handleChange.

43
00:03:32.135 --> 00:03:34.140
HandleChange is going to get
the text from the button here.

44
00:03:34.140 --> 00:03:39.100
And then what we wanna do is
you want to set the State.

45
00:03:39.100 --> 00:03:45.060
So this.setState{newTodo: }
it's gonna be the text here.

46
00:03:46.170 --> 00:03:47.380
So we've got that.

47
00:03:47.380 --> 00:03:52.278
Constructor, there we go.

48
00:03:52.278 --> 00:03:53.692
Now, see why this was freaking out.

49
00:04:03.649 --> 00:04:10.941
&gt;&gt; Scott: Now, it's not freaking
out let's just reloaded it and

50
00:04:10.941 --> 00:04:15.683
make sure,
&gt;&gt; Scott: Undefined is not

51
00:04:15.683 --> 00:04:19.487
an object handlePress.bind.

52
00:04:24.073 --> 00:04:25.509
&gt;&gt; Scott: And wait,
did I call it something else?

53
00:04:25.509 --> 00:04:27.122
I know, yeah.

54
00:04:27.122 --> 00:04:28.160
&gt;&gt; Speaker 3: You haven't
created that yet.

55
00:04:28.160 --> 00:04:29.940
&gt;&gt; Scott: Yeah, I haven't created
that yet, it's freaking out.

56
00:04:31.130 --> 00:04:33.290
Let's do that then, to satisfy it.

57
00:04:38.863 --> 00:04:40.214
&gt;&gt; Scott: There we go.

58
00:04:40.214 --> 00:04:40.714
Let's reload.

59
00:04:42.797 --> 00:04:45.870
&gt;&gt; Scott: Okay,
looks like it's not freaking out anymore.

60
00:04:45.870 --> 00:04:47.070
Let's just reload it again.

61
00:04:50.700 --> 00:04:51.870
&gt;&gt; Scott: There we go.

62
00:04:51.870 --> 00:04:55.460
So there's our input, and
then there's our button.

63
00:04:55.460 --> 00:04:59.740
&gt;&gt; Scott: If yours doesn't look like this,
it's because I just changed.

64
00:04:59.740 --> 00:05:02.688
I got rid of like the styles under
the different component now,

65
00:05:02.688 --> 00:05:05.590
so it probably looks different,
but it should work the same.

66
00:05:05.590 --> 00:05:09.510
So input button,
now what we want to do is on change.

67
00:05:09.510 --> 00:05:10.210
We got the value,

68
00:05:10.210 --> 00:05:14.349
we know this is still working because
when we type the values is being updated.

69
00:05:15.420 --> 00:05:17.770
Again if I got rid of the on
change this wouldn't update.

70
00:05:18.790 --> 00:05:22.680
So that's there, and
then on create what we wanna do is.

71
00:05:25.488 --> 00:05:30.115
I'm sorry on handlePress all you wanna
do is just set this newTodo state into

72
00:05:30.115 --> 00:05:31.210
the todo arrays.

73
00:05:31.210 --> 00:05:33.080
So, we'll do the same
thing we did on the web.

74
00:05:33.080 --> 00:05:37.360
We'll get the CONST TODOS =

75
00:05:37.360 --> 00:05:42.891
[...this.state.todos] and

76
00:05:42.891 --> 00:05:45.744
then the newTodo,

77
00:05:45.744 --> 00:05:50.923
which is this.state.newTodo.

78
00:05:50.923 --> 00:05:55.433
And then we'll clear it, this.setState.

79
00:05:55.433 --> 00:05:59.360
We'll clear it, and then we'll update
the todo at the same time, so.

80
00:06:00.580 --> 00:06:03.935
Update the todos and then newTodo.

81
00:06:03.935 --> 00:06:05.286
It's just that.

82
00:06:10.402 --> 00:06:11.320
&gt;&gt; Scott: All right, so we'll save that.

83
00:06:13.210 --> 00:06:14.680
Nothing broke.

84
00:06:14.680 --> 00:06:16.730
The reason I don't have to refresh
is I have on hot reloading.

85
00:06:16.730 --> 00:06:18.400
We're gonna talk about
that after this solution.

86
00:06:19.720 --> 00:06:24.980
So, all that's good to go and
then now, if I type some stuff in here

87
00:06:24.980 --> 00:06:29.779
we should see this update with some todos.

88
00:06:29.779 --> 00:06:30.770
Let's see.

89
00:06:33.731 --> 00:06:35.950
&gt;&gt; Scott: Clean, there we go.

90
00:06:35.950 --> 00:06:39.487
So there is that one, it's sleep.

91
00:06:44.769 --> 00:06:47.346
&gt;&gt; Scott: Any questions on this stuff so
far?

92
00:06:55.454 --> 00:06:59.614
&gt;&gt; Scott: I think the only difference
here, the only one difference,

93
00:06:59.614 --> 00:07:04.101
obviously, besides the components
that we used not be in divs and

94
00:07:04.101 --> 00:07:08.820
buttons is that,
instead of onChange we use onChangeText.

95
00:07:08.820 --> 00:07:10.250
That is only difference.

96
00:07:10.250 --> 00:07:14.000
Everything else is exactly
the same from the web.

97
00:07:17.431 --> 00:07:18.730
&gt;&gt; Scott: So, this will be a diff.

98
00:07:18.730 --> 00:07:20.540
This will be an input.

99
00:07:20.540 --> 00:07:21.970
This will be a button.

100
00:07:21.970 --> 00:07:23.680
This will be our URL.

101
00:07:23.680 --> 00:07:25.620
But, everything else is
the same except for this.

102
00:07:34.735 --> 00:07:37.497
&gt;&gt; Scott: Any questions?

103
00:07:37.497 --> 00:07:42.520
So looks like someone had an error online,
application todo is not registered.

104
00:07:42.520 --> 00:07:45.020
That's because if you were following me,

105
00:07:45.020 --> 00:07:49.200
you need to change
the main component here.

106
00:07:49.200 --> 00:07:51.700
Cuz we have a component
called Todo already and

107
00:07:53.000 --> 00:07:54.410
I changed this one to the main.

108
00:07:54.410 --> 00:07:57.718
So you also need to change that in the
registry down below to that component main

109
00:07:57.718 --> 00:07:58.394
for both files.

110
00:08:04.936 --> 00:08:05.904
&gt;&gt; Scott: Cool.

111
00:08:05.904 --> 00:08:09.028
&gt;&gt; Speaker 4: [INAUDIBLE]
&gt;&gt; Scott: Yes.

112
00:08:09.028 --> 00:08:11.352
&gt;&gt; Speaker 4: Can we ask why
it's not outputting the issue?

113
00:08:11.352 --> 00:08:15.040
I'm sure if that's it.

114
00:08:15.040 --> 00:08:18.980
&gt;&gt; Scott: It's not outputting the issue,
I'm not sure, what issue?

115
00:08:18.980 --> 00:08:22.756
But, if it's the issue that I just
talked about it definitely says it's not

116
00:08:22.756 --> 00:08:25.120
registered, it will say
it like it will break.

117
00:08:25.120 --> 00:08:28.240
And I think it will even
spit it out of the console.

118
00:08:29.240 --> 00:08:31.520
So I'm not sure what issue, but
if it's that issue you should see it.

119
00:08:34.466 --> 00:08:37.813
&gt;&gt; Scott: Yeah,
I'll push the solution, for sure.

120
00:08:37.813 --> 00:08:41.112
I'll push it after this lecture.

121
00:08:41.112 --> 00:08:42.838
Cool, okay.
Any questions on the solution?

122
00:08:47.265 --> 00:08:49.096
&gt;&gt; Scott: Cuz now we about to get into,
I wasn't installing but

123
00:08:49.096 --> 00:08:50.888
I think it's appropriate
to do dev tools first, and

124
00:08:50.888 --> 00:08:52.330
then we're get to installing after lunch

