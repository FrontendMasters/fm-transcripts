WEBVTT

1
00:00:00.012 --> 00:00:04.043
[MUSIC]

2
00:00:04.043 --> 00:00:07.700
&gt;&gt; Scott: DevTools, we kinda saw a lot
of the stuff that I was going over.

3
00:00:07.700 --> 00:00:11.802
The main thing is, on your emulator,
on your device or whatever,

4
00:00:11.802 --> 00:00:15.392
as long as you can hit the menu button or
shake your device,

5
00:00:15.392 --> 00:00:18.059
you get access to the developer menu here.

6
00:00:18.059 --> 00:00:20.320
So let's just walk through some
of the stuff that's happening.

7
00:00:20.320 --> 00:00:22.771
On this developer menu,
the first thing we have is Reload,

8
00:00:22.771 --> 00:00:24.446
which does exactly what it sounds like.

9
00:00:24.446 --> 00:00:27.451
It's gonna reload your app,
completely reinitialize the state and

10
00:00:27.451 --> 00:00:28.240
reload your app.

11
00:00:30.030 --> 00:00:33.350
Debug JS Remotely, we're gonna do that
in just a second, it's pretty cool.

12
00:00:34.690 --> 00:00:38.204
Enable Live Reload,
that's just going to watch your files and

13
00:00:38.204 --> 00:00:40.867
then reload the app for
you when things change.

14
00:00:40.867 --> 00:00:44.010
It's different than the next thing,
which is Hot Reloading.

15
00:00:44.010 --> 00:00:45.540
The difference between the two is,

16
00:00:45.540 --> 00:00:48.250
Live Reloading is gonna reload
your entire application.

17
00:00:48.250 --> 00:00:51.210
It's just gonna be like, okay,
the file changed, reload the entire app.

18
00:00:51.210 --> 00:00:53.730
Hot Reloading is not gonna
reload your entire application.

19
00:00:53.730 --> 00:00:58.540
It's just going to patch the code that was
changed and keep the state in your app.

20
00:00:58.540 --> 00:01:02.020
Sometimes you actually have to reload,
though, If you change things.

21
00:01:02.020 --> 00:01:05.557
For instance, if one of your changes
consisted of a change in this status bar,

22
00:01:05.557 --> 00:01:08.463
which is a native component,
a Hot Reload might not catch that.

23
00:01:08.463 --> 00:01:12.715
And you might have to reload your entire
app to register that status bar change at

24
00:01:12.715 --> 00:01:14.810
the beginning of the app.

25
00:01:14.810 --> 00:01:16.259
So Hot Reload isn't
gonna catch everything,

26
00:01:16.259 --> 00:01:18.010
especially if you start
messing around with the state.

27
00:01:18.010 --> 00:01:19.530
Then you just gotta reload.

28
00:01:21.230 --> 00:01:23.433
But most of time,
Hot Reload is what you want.

29
00:01:23.433 --> 00:01:27.179
But again, you will catch yourself in some
situations where the code you wrote is not

30
00:01:27.179 --> 00:01:28.604
being reflected on the device,

31
00:01:28.604 --> 00:01:31.670
because the Hot Reloading isn't
patching things correctly.

32
00:01:31.670 --> 00:01:34.920
So you probably just gotta
just do a quick reload.

33
00:01:34.920 --> 00:01:37.650
Cool, Toggle Inspector,
let me just click on it.

34
00:01:38.730 --> 00:01:42.775
This is an inspector, so we can inspect
things on our device, like Performance,

35
00:01:42.775 --> 00:01:43.487
Touchables.

36
00:01:43.487 --> 00:01:46.460
And you can see it highlights all
the touchables on our device,

37
00:01:46.460 --> 00:01:49.558
like the only one that we have,
which is just TouchableOpacity.

38
00:01:49.558 --> 00:01:52.324
Performance things,
there's nothing to inspect,

39
00:01:52.324 --> 00:01:56.400
cuz we're not doing any movement
on the page and stuff like that.

40
00:01:56.400 --> 00:01:59.710
So let's go back to this menu here.

41
00:01:59.710 --> 00:02:01.920
We got a Performance Monitor.

42
00:02:01.920 --> 00:02:05.590
So you can see if your animations
are 60 frames per second,

43
00:02:05.590 --> 00:02:06.820
because they need to be smooth.

44
00:02:06.820 --> 00:02:10.990
So this is a big thing, especially for
mobile, this is really great.

45
00:02:10.990 --> 00:02:13.356
I think it's super awesome to have this.

46
00:02:13.356 --> 00:02:16.321
And it also tells you the UI and
the JavaScript and

47
00:02:16.321 --> 00:02:18.503
how many frames you dropped so far.

48
00:02:18.503 --> 00:02:22.936
It's ridiculous, it's pretty good.
&gt;&gt; Scott: And then we have things

49
00:02:22.936 --> 00:02:27.448
like Capture Heap, if you're having
some memory leaking issues and

50
00:02:27.448 --> 00:02:29.871
you just wanna see what's going on.

51
00:02:29.871 --> 00:02:33.080
If you also click on the Dev Settings,
you can do things like,

52
00:02:33.080 --> 00:02:36.990
you can tell Webpack packager to
minify the JavaScript for you.

53
00:02:36.990 --> 00:02:38.928
So if you just click this,
it'll minify it.

54
00:02:38.928 --> 00:02:43.906
This is to enable the Dev Mode, yes or
no, Animation Frames Per Second,

55
00:02:43.906 --> 00:02:45.638
and all the other stuff.

56
00:02:45.638 --> 00:02:48.530
And then this right here is, if you
wanna set up your own debugger manually,

57
00:02:48.530 --> 00:02:52.896
let's say, on some plugin that you made or
on another computer or

58
00:02:52.896 --> 00:02:54.860
on your IP address,
you would set this up here.

59
00:02:54.860 --> 00:02:55.940
Or actually, you would do this.

60
00:02:55.940 --> 00:02:59.660
This is for if you wanna just set up
remote debugging on a hardware device.

61
00:02:59.660 --> 00:03:02.975
So if you got a phone plugged up and
you wanna remote debugging that way,

62
00:03:02.975 --> 00:03:06.029
you would have to come in here and
change the IP address and stuff.

63
00:03:06.029 --> 00:03:06.932
That way, you can do remote debugging.

64
00:03:06.932 --> 00:03:09.812
But we're just gonna do remote
debugging right here, on the computer.

65
00:03:09.812 --> 00:03:14.267
Yo.
&gt;&gt; Speaker 2: Is that [COUGH] for

66
00:03:14.267 --> 00:03:15.808
only Android stuff?

67
00:03:15.808 --> 00:03:18.526
Cuz I don't see that on iOS.
&gt;&gt; Scott: IOS doesn't have this?

68
00:03:18.526 --> 00:03:19.526
&gt;&gt; Speaker 2: No.

69
00:03:19.526 --> 00:03:21.220
&gt;&gt; Scott: What?

70
00:03:21.220 --> 00:03:23.760
Let's check it out, let's run iOS.

71
00:03:23.760 --> 00:03:28.574
I think this is a reason why I decided
to do dev on Android and not iOS,

72
00:03:28.574 --> 00:03:30.108
for this same stuff.

73
00:03:30.108 --> 00:03:36.586
So I would say iOS has more support for
more plugins and stuff.

74
00:03:36.586 --> 00:03:39.145
But Android has a better
developer experience, for me.

75
00:03:39.145 --> 00:03:42.194
Just the developer experience,
it's always on point.

76
00:03:42.194 --> 00:03:44.583
iOS, I'm always having trouble developing.

77
00:03:44.583 --> 00:03:51.066
So for iOS, if we come in here and
we say, where is the shake at?

78
00:03:51.066 --> 00:03:56.825
Simulate, there we go, Shake.
&gt;&gt; Scott: Yeah,

79
00:03:56.825 --> 00:03:58.296
I guess they just don't have it.

80
00:03:58.296 --> 00:04:01.888
Yeah, they just don't want you to have it,
I guess.

81
00:04:01.888 --> 00:04:04.202
They just don't care about iOS.
&gt;&gt; Speaker 2: [LAUGH]

82
00:04:04.202 --> 00:04:05.868
&gt;&gt; Scott: Yeah, [LAUGH] yeah, so

83
00:04:05.868 --> 00:04:07.192
it's not there.

84
00:04:07.192 --> 00:04:08.205
Wow, this looks funny on iOS.

85
00:04:08.205 --> 00:04:10.811
What is going on here?

86
00:04:10.811 --> 00:04:13.524
Yeah, definitely some default styling.

87
00:04:13.524 --> 00:04:22.180
All right, cool, so now let's actually
get into how some of this stuff works.

88
00:04:22.180 --> 00:04:25.170
So if we're inside of our app,
now let's go into the Todo.

89
00:04:26.270 --> 00:04:28.506
And inside this constructor,

90
00:04:28.506 --> 00:04:34.757
we did a console.warn,
&gt;&gt; Scott: With Dev Mode,

91
00:04:34.757 --> 00:04:37.553
let me get rid of all of that stuff.

92
00:04:37.553 --> 00:04:39.513
Let me turn off Hot Reloading.

93
00:04:48.161 --> 00:04:48.685
&gt;&gt; Scott: Okay, okay,

94
00:04:48.685 --> 00:04:49.568
what's going on here?

95
00:04:49.568 --> 00:04:55.314
There we go.
&gt;&gt; Scott: Let

96
00:04:55.314 --> 00:05:00.780
me turn off this monitor.
&gt;&gt; Scott: There we go.

97
00:05:03.388 --> 00:05:09.951
Wait, I gotta unclick that.
&gt;&gt; Scott: Just go,

98
00:05:09.951 --> 00:05:14.218
thank you.
&gt;&gt; Scott: There we go, so

99
00:05:14.218 --> 00:05:17.540
that console.warn that I did,
it's right here at the bottom in yellow.

100
00:05:17.540 --> 00:05:22.069
So if you do console.warn,
it just pops up at the bottom in yellow.

101
00:05:22.069 --> 00:05:23.989
And it'll say the message that you logged.

102
00:05:23.989 --> 00:05:27.058
So this is a quick way to do some logging.

103
00:05:27.058 --> 00:05:31.469
So if you wanna check out an object,
like, I'm trying to console.log.

104
00:05:31.469 --> 00:05:34.602
I wanna see what this.state is.

105
00:05:34.602 --> 00:05:37.376
So I'll console.log(this.state).

106
00:05:37.376 --> 00:05:40.036
And then what you wanna do is,
you can make it pretty.

107
00:05:40.036 --> 00:05:44.556
So you can say stringify(this.state).

108
00:05:44.556 --> 00:05:50.634
And then you can say null, and you can
say 2, which will format it on 2 indents.

109
00:05:50.634 --> 00:05:52.335
You can save that.

110
00:05:52.335 --> 00:05:55.780
I thought I turned Hot Reloading off,
I don't know what it's doing.

111
00:05:59.771 --> 00:06:01.149
&gt;&gt; Scott: I need to reload again.

112
00:06:01.149 --> 00:06:02.864
There we go.

113
00:06:02.864 --> 00:06:07.829
Cool, so now, if we save this,
and if we reload one more

114
00:06:07.829 --> 00:06:12.835
time.
&gt;&gt; Scott: I put log, didn't I?

115
00:06:12.835 --> 00:06:20.494
It should be warn.
&gt;&gt; Scott: There we go, so

116
00:06:20.494 --> 00:06:24.473
we do console.warn, now we get the object
right there in a nice, pretty JSON format.

117
00:06:24.473 --> 00:06:28.330
So that's a quick way to do some logging.

118
00:06:28.330 --> 00:06:31.300
This is very handy on iOS because
you don't really have a logging.

119
00:06:31.300 --> 00:06:33.309
Unless you open up Xcode and
go look at the logs,

120
00:06:33.309 --> 00:06:35.025
you don't have a way to look at the logs.

121
00:06:35.025 --> 00:06:37.660
And Android,
I'll show you a way that you can do it.

122
00:06:37.660 --> 00:06:41.330
But on iOS, you don't.
&gt;&gt; Speaker 2: I was doing it in

123
00:06:41.330 --> 00:06:42.840
Chrome through iOS.
&gt;&gt; Scott: Yeah,

124
00:06:42.840 --> 00:06:43.946
you can do it through Chrome, too.

125
00:06:43.946 --> 00:06:49.030
Yeah, but I mean, you can actually look
at the logs in the terminal with Android,

126
00:06:49.030 --> 00:06:50.230
using adb logcat.

127
00:06:50.230 --> 00:06:54.568
But yeah,
you can look at the logs in Chrome.

128
00:06:54.568 --> 00:06:56.691
&gt;&gt; Scott: Cool, so that is for consoling.

129
00:06:56.691 --> 00:07:01.160
Let's get to some of the cool stuff,
which is Debug JS Remotely.

130
00:07:01.160 --> 00:07:03.478
This is probably my favorite feature.

131
00:07:03.478 --> 00:07:06.780
I think, as web developers,
we take this for granted.

132
00:07:06.780 --> 00:07:12.030
But if we do click Debug iOS Remotely,
it splits us out to Chrome.

133
00:07:12.030 --> 00:07:14.095
It opens up this tab here.

134
00:07:14.095 --> 00:07:15.710
You open up DevTools.

135
00:07:15.710 --> 00:07:19.180
You can see there's the logging
right there that I did.

136
00:07:19.180 --> 00:07:22.770
It pops up right there in Chrome,
pretty legit.

137
00:07:22.770 --> 00:07:23.940
That's not all we get.

138
00:07:23.940 --> 00:07:29.000
If you head over to Sources,
a few things you wanna do here is, one,

139
00:07:29.000 --> 00:07:32.240
just click this little menu right here,
go to Settings.

140
00:07:32.240 --> 00:07:35.980
And make sure you have enabled JavaScript
source maps, make sure that's checked.

141
00:07:35.980 --> 00:07:39.060
If you don't have source maps,
this is not gonna be that useful for you.

142
00:07:39.060 --> 00:07:42.578
So make sure you do have
source maps enabled.

143
00:07:42.578 --> 00:07:47.837
And then, also, just click this pause
here and say Pause On Caught Exceptions.

144
00:07:47.837 --> 00:07:50.650
That way, we can break on
those things automatically.

145
00:07:50.650 --> 00:07:53.345
Once you have all that set up,
if you head down over here,

146
00:07:53.345 --> 00:07:56.451
you'll see these cogwheels,
and it says debuggerworker.js.

147
00:07:56.451 --> 00:08:01.074
If you click that,
this is actually going to be our project.

148
00:08:01.074 --> 00:08:01.880
Right here,
here's all the source code for it.

149
00:08:02.960 --> 00:08:03.958
And it's only one file.

150
00:08:03.958 --> 00:08:07.090
So here's our source code right here.

151
00:08:07.090 --> 00:08:10.490
And then we can come here and
we can do web debugging.

152
00:08:10.490 --> 00:08:11.420
We can do breakpoints.

153
00:08:11.420 --> 00:08:14.120
We can step through,
step out of functions, all that stuff.

154
00:08:14.120 --> 00:08:18.600
So let's actually set up our
breakpoint on handle text Change.

155
00:08:18.600 --> 00:08:21.718
So let's have our breakpoint here.
&gt;&gt; Speaker 3: So you went through those

156
00:08:21.718 --> 00:08:23.600
settings too fast for me.
&gt;&gt; Scott: Sorry, I'll go back.

157
00:08:23.600 --> 00:08:24.593
&gt;&gt; Speaker 3: Can you back up?

158
00:08:24.593 --> 00:08:25.760
&gt;&gt; Scott: Yep, I will totally back up.

159
00:08:25.760 --> 00:08:31.459
So the first thing I did in the menu is
I enabled Remote JS Debugging, right?

160
00:08:31.459 --> 00:08:35.260
And that should pop up in Chrome for you.

161
00:08:36.510 --> 00:08:38.767
Did that pop up on a Chrome tab?

162
00:08:38.767 --> 00:08:39.953
Cool, so open up the DevTools in Chrome.

163
00:08:39.953 --> 00:08:43.873
And just make sure that,
if you go to Settings,

164
00:08:43.873 --> 00:08:48.041
which is just F1,
&gt;&gt; Scott: That Enable JavaScript source

165
00:08:48.041 --> 00:08:50.068
maps is definitely checked.

166
00:08:50.068 --> 00:08:52.264
I think it's checked by default,
so it should always be there.

167
00:08:52.264 --> 00:08:53.714
But some people turned it off.

168
00:08:53.714 --> 00:08:56.698
And once you have that, you're fine,
then you're good to go,

169
00:08:56.698 --> 00:08:57.282
yeah.
&gt;&gt; Speaker 3: Thanks.

170
00:08:57.282 --> 00:08:58.004
&gt;&gt; Scott: You could just click on

171
00:08:58.004 --> 00:08:59.610
the Sources tab, and
now you're inside of here.

172
00:09:00.740 --> 00:09:03.818
Sweet, so you'll also set a breakpoint
where we're setting a state on handle

173
00:09:03.818 --> 00:09:04.770
text Change.

174
00:09:04.770 --> 00:09:07.550
So we'll go back to our app.

175
00:09:07.550 --> 00:09:10.080
I'm just gonna reload, just in case.

176
00:09:10.080 --> 00:09:13.280
So now, when we start typing,

177
00:09:13.280 --> 00:09:16.910
it should break right here,
and we can inspect the stuff.

178
00:09:16.910 --> 00:09:20.500
So I'll type, and
it totally broke right here.

179
00:09:20.500 --> 00:09:25.306
So now it broke, and
now we can go and inspect everything,

180
00:09:25.306 --> 00:09:27.768
just like we would in the web.

181
00:09:27.768 --> 00:09:31.605
Pretty dope, we get the Closure,
so we get the context.

182
00:09:31.605 --> 00:09:36.362
We can open up the console here.
&gt;&gt; Scott: And we can go, oop, come back,

183
00:09:36.362 --> 00:09:37.793
come back, console.

184
00:09:37.793 --> 00:09:43.050
And we get access to our app.
&gt;&gt; Scott: We can look at the props,

185
00:09:43.050 --> 00:09:43.768
we can look at everything.

186
00:09:43.768 --> 00:09:45.643
So I think this is pretty cool.

187
00:09:45.643 --> 00:09:48.056
Again, we take this for
granted as web developers.

188
00:09:48.056 --> 00:09:50.663
But this is really big for
a mobile, I would say.

189
00:09:50.663 --> 00:09:53.990
So that's pretty great.

190
00:09:55.120 --> 00:10:01.168
Any questions on this stuff?
&gt;&gt; Scott: Like I said,

191
00:10:01.168 --> 00:10:03.541
I find myself not using this
a lot as a web developer.

192
00:10:03.541 --> 00:10:06.219
But ever since I've been using
React Native, I use it all the time.

193
00:10:06.219 --> 00:10:07.791
I can't live without it.

194
00:10:07.791 --> 00:10:09.394
I don't know why it's so different.

195
00:10:09.394 --> 00:10:12.092
Maybe because it's so
easy just to console.log in the web.

196
00:10:12.092 --> 00:10:13.764
I'm like, I don't need the debugger,
I'll just log it.

197
00:10:13.764 --> 00:10:17.025
But here, it's just like, well,
the logs go to Chrome anyway, so

198
00:10:17.025 --> 00:10:18.469
I might as well just use this.

199
00:10:18.469 --> 00:10:21.498
I don't know, I use this for everything.

200
00:10:21.498 --> 00:10:27.068
But if you keep this open,
if you keep the Remote JS Debugging open,

201
00:10:27.068 --> 00:10:31.194
it's gonna slow down
your development process.

202
00:10:31.194 --> 00:10:33.431
It's a lot slower, so sometimes you
just need to need to turn it off,

203
00:10:33.431 --> 00:10:34.871
if you just wanna build fast, right quick.

204
00:10:34.871 --> 00:10:37.800
And then turn it on when
you have a real problem.

205
00:10:37.800 --> 00:10:39.852
Otherwise, it takes forever to reload.

206
00:10:39.852 --> 00:10:43.130
And I've had issues where it's
eating up a lot of memory.

207
00:10:43.130 --> 00:10:45.330
So I'll just turn it off and
then turn it back on when I need it.

208
00:10:46.900 --> 00:10:50.500
So I'm gonna turn it off for now.
So the other things are, like I said,

209
00:10:50.500 --> 00:10:53.484
we have Live Reloading.

210
00:10:53.484 --> 00:10:55.400
Look, it's freaking out right now.

211
00:10:55.400 --> 00:10:58.060
So this is how you know this is amazing.

212
00:10:58.060 --> 00:10:59.853
I turned it off and
I'm trying to reset the app, but

213
00:10:59.853 --> 00:11:01.650
it's like, it's not responding.

214
00:11:01.650 --> 00:11:04.480
And that's because I haven't
unpaused it from this breakpoint.

215
00:11:04.480 --> 00:11:07.246
So it's just like,
you're telling me to do something, but

216
00:11:07.246 --> 00:11:09.160
the UI is reacting to me clicking things.

217
00:11:09.160 --> 00:11:12.270
But the app is just a paused state.

218
00:11:12.270 --> 00:11:13.730
So I just broke it.

219
00:11:13.730 --> 00:11:15.320
So that's pretty amazing.

220
00:11:15.320 --> 00:11:17.331
So I should've unpaused it first,
but I didn't.

221
00:11:17.331 --> 00:11:19.220
But anyway, now it's back.

222
00:11:20.430 --> 00:11:24.940
So again, let's look at Live Reload.

223
00:11:24.940 --> 00:11:25.700
So we do Live Reload.

224
00:11:27.500 --> 00:11:29.290
It's literally just gonna refresh
the app when we save the file.

225
00:11:29.290 --> 00:11:34.360
So if we do that, it just fetches
the JS bundle again, that's all.

226
00:11:34.360 --> 00:11:38.000
Every time you hit save,
it's just gonna fetch it again.

227
00:11:38.000 --> 00:11:39.420
That's what Live Reload does.

228
00:11:39.420 --> 00:11:43.620
You can actually enable Live Reload with
JS debugging, and it'll work just fine.

229
00:11:43.620 --> 00:11:45.120
It's totally fine.

230
00:11:45.120 --> 00:11:49.525
However, I do not recommend
enabling Live Reload.

231
00:11:49.525 --> 00:11:53.201
Or I do not recommend enabling
Hot Reload with the JS debugging,

232
00:11:53.201 --> 00:11:56.002
because then it gets kinda
crazy with the state.

233
00:11:56.002 --> 00:11:58.565
Cuz you patch the state
with the Hot Reload, but

234
00:11:58.565 --> 00:12:01.270
the debugger doesn't get
that patch sometimes.

235
00:12:01.270 --> 00:12:03.440
And it's just like,
you don't know what's going on.

236
00:12:03.440 --> 00:12:07.870
So I would not recommend enable
Hot Reloading with debugging remotely.

237
00:12:07.870 --> 00:12:11.283
But if you do enable Hot Reloading, again,
what happens here is we can change things.

238
00:12:11.283 --> 00:12:13.866
For instance, this says create.

239
00:12:13.866 --> 00:12:16.373
If I came down here and
was like, you know what?

240
00:12:16.373 --> 00:12:18.420
I want you to say make.

241
00:12:18.420 --> 00:12:21.156
If I hit that, it should just update it,
there it is, to make,

242
00:12:21.156 --> 00:12:23.134
without reloading the entire application.

243
00:12:23.134 --> 00:12:25.121
It just patched the code that I wanted.

244
00:12:25.121 --> 00:12:26.276
It's a Hot Reload.

245
00:12:26.276 --> 00:12:29.206
Any questions on that?

246
00:12:29.206 --> 00:12:33.855
So this will be helpful, for instance,
if you get in a navigation and

247
00:12:33.855 --> 00:12:38.850
you're four pages deep and you wanna
make this one change on this button.

248
00:12:38.850 --> 00:12:40.024
This is why Hot Reload is awesome,

249
00:12:40.024 --> 00:12:43.270
because you can just make that change to
the button, and it'll just Hot Reload it.

250
00:12:43.270 --> 00:12:45.716
Whereas if you did a Live Reload,
it'll refresh the entire page.

251
00:12:45.716 --> 00:12:49.430
And you gotta go navigate back to
that spot and then change the button.

252
00:12:49.430 --> 00:12:51.181
Whereas it wouldn't do
that with Hot Reload.

253
00:12:51.181 --> 00:12:52.295
It would just stay there and

254
00:12:52.295 --> 00:12:57.310
just change the code that you changed.
&gt;&gt; Scott: Make

255
00:12:57.310 --> 00:13:00.721
sense?
&gt;&gt; Scott: Cool, all right,

256
00:13:00.721 --> 00:13:05.673
I think I covered everything I
wanted to cover for development.

257
00:13:05.673 --> 00:13:09.944
I can't think of any other
awesome stuff here, so yeah.

258
00:13:09.944 --> 00:13:13.749
Yeah, also, if you do console.error,
I'm pretty sure it, yeah.

259
00:13:13.749 --> 00:13:18.844
console.error's just gonna spit up a big
red screen that I'm sure we've all seen so

260
00:13:18.844 --> 00:13:20.500
far, especially online.

261
00:13:20.500 --> 00:13:22.420
So we do console.error.

262
00:13:22.420 --> 00:13:24.130
See, the Hot Reload,
I don't think it caught that.

263
00:13:24.130 --> 00:13:30.670
So we need to refresh again, or reload.
&gt;&gt; Scott: It still it didn't catch it,

264
00:13:30.670 --> 00:13:35.271
let's see.
&gt;&gt; Scott: Let's just throw an error then,

265
00:13:35.271 --> 00:13:36.950
how about that?

266
00:13:36.950 --> 00:13:37.670
So we throw an error.

267
00:13:49.836 --> 00:13:52.980
&gt;&gt; Scott: And we reload it.

268
00:13:52.980 --> 00:13:54.550
There we go, so we throw an error.

269
00:13:54.550 --> 00:14:00.310
This big red page pops up with a call
stack, like, here's your error.

270
00:14:00.310 --> 00:14:02.740
Pretty much in your face,
can't get away from it.

271
00:14:05.080 --> 00:14:07.903
And those are pretty much all
the DevTools you have at your disposal.

272
00:14:07.903 --> 00:14:10.494
So if you use VS Code as your text editor,

273
00:14:10.494 --> 00:14:16.010
they have everything that I just walked
through built right into the editor.

274
00:14:16.010 --> 00:14:19.665
You can go into your code and
set breakpoints right here, in your code.

275
00:14:19.665 --> 00:14:22.431
And it will run the debugger
right in your editor.

276
00:14:22.431 --> 00:14:25.610
And you could interact with
the console and everything.

277
00:14:25.610 --> 00:14:28.770
It's pretty legit when it works, so.

