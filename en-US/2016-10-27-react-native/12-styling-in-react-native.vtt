WEBVTT

1
00:00:00.000 --> 00:00:04.194
[MUSIC]

2
00:00:04.194 --> 00:00:06.974
&gt;&gt; Scott Moss: Let's talk about styles and
how they actually make our apps

3
00:00:06.974 --> 00:00:10.778
look good because they don't look good
right now unless you did your own styles.

4
00:00:10.778 --> 00:00:19.510
So like bringing over
JavaScript from the web over.

5
00:00:19.510 --> 00:00:23.470
To native rag native did the same
thing with some CSS it's pretty much

6
00:00:23.470 --> 00:00:26.020
like a subset of CSS it's not all CSS.

7
00:00:26.020 --> 00:00:31.038
We can't do everything we could in CSS but
most of the stuff we could or we can do.

8
00:00:31.038 --> 00:00:35.937
So what they did was they provided us
with a, actually what I'm gonna do is,

9
00:00:35.937 --> 00:00:38.706
I'm just gonna make a new component here.

10
00:00:38.706 --> 00:00:43.855
All my new component now we

11
00:00:43.855 --> 00:00:49.714
call this a fancy component.

12
00:00:49.714 --> 00:00:54.842
So what we can do is we can actually
import, I'm just gonna to set this up

13
00:00:54.842 --> 00:01:01.228
right click.
&gt;&gt; Scott Moss: If

14
00:01:01.228 --> 00:01:08.060
we import StyleSheet from react native,
we can do some pretty cool stuff.

15
00:01:08.060 --> 00:01:12.810
So I'm gonna do text and StyleSheet and
that's, that's what I'll do here.

16
00:01:12.810 --> 00:01:14.005
So from 'react-native'.

17
00:01:25.978 --> 00:01:27.930
&gt;&gt; Scott Moss: There we go.
All right.

18
00:01:27.930 --> 00:01:31.860
So the StyleSheet does a few things for
us.

19
00:01:31.860 --> 00:01:35.800
Actually we don't really need Stylesheet,
but we should use it, and

20
00:01:35.800 --> 00:01:39.790
the reason we should use it because
it's going to validate those styles for

21
00:01:39.790 --> 00:01:42.274
us because the CSS style
we use is just a subset.

22
00:01:42.274 --> 00:01:46.840
So if we just if we just rely on writing
our own CSS without the validation.

23
00:01:48.020 --> 00:01:49.858
We're gonna have unintended result.

24
00:01:49.858 --> 00:01:51.750
So we use the StyleSheet to
kind of validate that stuff or

25
00:01:51.750 --> 00:01:54.380
so what that actually looks like
is which I've got a pattern

26
00:01:54.380 --> 00:01:56.870
that most people are doing
is below their component.

27
00:01:58.050 --> 00:02:01.601
They'll go ahead and
declare their styles and

28
00:02:01.601 --> 00:02:06.334
like a styles object so
you can say styles equals StyleSheet,

29
00:02:06.334 --> 00:02:10.630
Stylesheet.create, and
use passing an object to it.

30
00:02:10.630 --> 00:02:15.780
And this object is going to be
the styles for our components.

31
00:02:15.780 --> 00:02:17.350
So if you haven't guessed already,

32
00:02:18.450 --> 00:02:21.320
everything is going to be in line
styles for your components, so

33
00:02:21.320 --> 00:02:23.690
everything's in line but
you create the styles in JavaScript.

34
00:02:23.690 --> 00:02:26.030
So most people just put
them underneath here.

35
00:02:26.030 --> 00:02:29.349
You can put them in another file
somebody else create a plug-in and

36
00:02:29.349 --> 00:02:32.430
you can just write a CSS file or
SaaS file and it'll watch it and

37
00:02:32.430 --> 00:02:34.520
it'll turn it into a StyleSheet for you.

38
00:02:34.520 --> 00:02:38.163
You can totally do that too but it's just
a basic StyleSheet so let's just go over

39
00:02:38.163 --> 00:02:41.071
some of different styles for
some of the different components.

40
00:02:41.071 --> 00:02:42.063
So what are the most interest,

41
00:02:42.063 --> 00:02:44.400
actually this is render something right
click I can get this on the page.

42
00:02:57.666 --> 00:02:59.249
&gt;&gt; Scott Moss: So I'm just going

43
00:02:59.249 --> 00:03:04.220
to switch out,
this to do with our fancy one very quick.

44
00:03:15.190 --> 00:03:16.300
&gt;&gt; Scott Moss: And this was

45
00:03:16.300 --> 00:03:22.441
so.
&gt;&gt; Scott Moss: Yeah,

46
00:03:22.441 --> 00:03:24.340
so now I gotta reload this.

47
00:03:24.340 --> 00:03:26.284
Pop module reloading doesn't
know I made a new file.

48
00:03:29.230 --> 00:03:31.079
&gt;&gt; Scott Moss: And let's go,

49
00:03:31.079 --> 00:03:36.394
reload.
&gt;&gt; Scott Moss: Oops, sorry,

50
00:03:36.394 --> 00:03:41.358
app.
&gt;&gt; Scott Moss: There we go,

51
00:03:41.358 --> 00:03:45.986
okay.
&gt;&gt; Scott Moss: Yeah,

52
00:03:45.986 --> 00:03:47.589
I know, just reload yourself.

53
00:03:49.040 --> 00:03:51.769
So now it's stuck in this error loop and
it doesn't know how to rebuild so

54
00:03:51.769 --> 00:03:53.350
I was taking to rebuild it.

55
00:03:53.350 --> 00:03:57.630
So that's what hot mod reloading does
sometimes you get stuck inside that.

56
00:03:57.630 --> 00:03:59.630
So I'm just gonna rebuild
this shut that down.

57
00:04:01.440 --> 00:04:06.390
And I have an a list rn ra which
is just react native run Android.

58
00:04:06.390 --> 00:04:07.190
That is run.

59
00:04:07.190 --> 00:04:08.955
So I can say the type in it.

60
00:04:08.955 --> 00:04:12.203
That's my a list so
it's just react native run Android, and

61
00:04:12.203 --> 00:04:14.450
I will close this soon later down.

62
00:04:14.450 --> 00:04:14.950
For iOS.

63
00:04:17.880 --> 00:04:20.703
And you see this built so
much faster it's already pretty,

64
00:04:20.703 --> 00:04:23.200
it's already installing it
on the phone right now.

65
00:04:25.080 --> 00:04:26.349
So it should pop up
right here there it is.

66
00:04:27.690 --> 00:04:28.730
So there's our fancy thing.

67
00:04:29.780 --> 00:04:31.820
Now let's head back over
to our fancy stuff.

68
00:04:31.820 --> 00:04:36.525
So yeah now we have the stylus here so one
of the sweet things is flex boxes where it

69
00:04:36.525 --> 00:04:39.430
used flex boxes in CSS right it's amazing.

70
00:04:39.430 --> 00:04:45.874
So every element by default is a flex
element, its display type it flex.

71
00:04:45.874 --> 00:04:48.360
It's by default you don't have to
declare it, it's already there.

72
00:04:48.360 --> 00:04:52.061
So that means you can go ahead and
start using those flex properties like for

73
00:04:52.061 --> 00:04:53.069
instance the view.

74
00:04:53.069 --> 00:04:58.222
We can say we'll call this the container.

75
00:04:58.222 --> 00:04:59.329
So this will be our container.

76
00:04:59.329 --> 00:05:01.999
Our view.

77
00:05:01.999 --> 00:05:05.618
And the way the StyleSheet works is
you declare like you know the selector

78
00:05:05.618 --> 00:05:08.226
that your style in this case
will call a container and

79
00:05:08.226 --> 00:05:10.800
then objects and
inside the object are the styles.

80
00:05:10.800 --> 00:05:14.810
You can't do nested selectors,
you can't cover and save container.

81
00:05:14.810 --> 00:05:18.770
You know text and here's a styles for
text like it'll break,

82
00:05:18.770 --> 00:05:22.900
because it's gonna be like wait text
is not a valid property of the CSS.

83
00:05:22.900 --> 00:05:26.480
So you can't do nested,
there's a plugin allows you to do it but.

84
00:05:26.480 --> 00:05:27.680
I think it's just fine.

85
00:05:27.680 --> 00:05:31.200
So for container because this is
a flex we're gonna say flex 1.

86
00:05:31.200 --> 00:05:32.640
So what does that mean?

87
00:05:32.640 --> 00:05:36.893
I mean fill up the entire page, flex 1
take up all the space as the container and

88
00:05:36.893 --> 00:05:38.770
it will say background color red.

89
00:05:40.320 --> 00:05:45.183
So we'll do that and then what we'll do is
we'll head up to our render function and

90
00:05:45.183 --> 00:05:47.760
we'll place a style prop.

91
00:05:47.760 --> 00:05:54.988
And we'll set that equal to styles dot our
selector which is container, there you go.

92
00:05:54.988 --> 00:05:58.718
And as you could see it's now red and
it's filled up all the way,

93
00:05:58.718 --> 00:06:04.370
if I got rid of the flex 1.
&gt;&gt; Scott Moss: It's not, all right so

94
00:06:04.370 --> 00:06:11.090
flex 1 made it fill.
&gt;&gt; Scott Moss: There we go.

95
00:06:11.090 --> 00:06:16.136
So you can see we brought over flex
we also have background color,

96
00:06:16.136 --> 00:06:20.816
that's very similar and
you can pretty much pass in any value

97
00:06:20.816 --> 00:06:25.613
that you would in CSS, so
you know put in some hex colors here.

98
00:06:25.613 --> 00:06:30.091
I don't know any crazy hex colors.

99
00:06:30.091 --> 00:06:34.488
I don't know what that's gonna look like.

100
00:06:34.488 --> 00:06:35.596
There we go.

101
00:06:35.596 --> 00:06:39.621
X looks pretty good actually.
&gt;&gt; Speaker 2: [LAUGH]

102
00:06:39.621 --> 00:06:41.051
&gt;&gt; Scott Moss: [LAUGH] You can also

103
00:06:41.051 --> 00:06:43.820
do the CSS colors you saw I put red.

104
00:06:43.820 --> 00:06:48.540
You could also do light blue
then we get light blue.

105
00:06:48.540 --> 00:06:49.990
You can also do rgb.

106
00:06:49.990 --> 00:06:54.260
Let's just do black.

107
00:06:57.690 --> 00:07:04.555
You can also do rgba.
&gt;&gt; Scott Moss: So

108
00:07:04.555 --> 00:07:08.090
all those values work, it's pretty cool.

109
00:07:08.090 --> 00:07:09.980
And because this is just a string,

110
00:07:09.980 --> 00:07:13.020
you can use ES 6 or
you can rely on interpolation, right?

111
00:07:13.020 --> 00:07:16.720
So if this was a variable somewhere,
like this 0.3.

112
00:07:16.720 --> 00:07:20.340
This could be like opacity.

113
00:07:21.610 --> 00:07:27.198
And then you would have
like opacity equals 0.3 or

114
00:07:27.198 --> 00:07:32.151
that you can just pass
that in there like that,

115
00:07:32.151 --> 00:07:36.092
because it's just interpolation.

116
00:07:36.092 --> 00:07:41.790
But let's go back to the other color that
I have which was really nice, go back.

117
00:07:42.820 --> 00:07:45.065
To, wait, where did it go?

118
00:07:45.065 --> 00:07:45.980
There it is.

119
00:07:45.980 --> 00:07:48.532
Sweet.

