WEBVTT

1
00:00:00.040 --> 00:00:03.997
[MUSIC]

2
00:00:03.997 --> 00:00:08.160
&gt;&gt; Scott Moss: Any other questions
on the stuff that we covered today?

3
00:00:08.160 --> 00:00:09.140
Yo.
&gt;&gt; Speaker 2: Would you mind kinda

4
00:00:09.140 --> 00:00:11.945
recapping like the Redux stuff,
as far as like a higher level?

5
00:00:11.945 --> 00:00:16.977
&gt;&gt; Scott Moss: Yep, yeah, I'll say that
if anybody else doesn't have anything,

6
00:00:16.977 --> 00:00:18.462
I'll go over that.

7
00:00:18.462 --> 00:00:19.534
Anything else?

8
00:00:22.428 --> 00:00:26.590
&gt;&gt; Scott Moss: No?
Okay, all right, so higher-level Redux.

9
00:00:26.590 --> 00:00:28.230
So you gotta think about it like this.

10
00:00:28.230 --> 00:00:32.750
Let me, I'm gonna try to explain to
you that kinda made sense to me.

11
00:00:32.750 --> 00:00:36.410
Cuz I gotta read things a couple times
to kinda figure out what's going on.

12
00:00:36.410 --> 00:00:40.940
So the way I thought about it was, when
I learned Redux it actually changed my

13
00:00:40.940 --> 00:00:45.500
life I was like wow I get it was that
good to me it changed my life and

14
00:00:45.500 --> 00:00:46.400
you got think about it like this.

15
00:00:46.400 --> 00:00:48.810
So if you have state you're
in your application right.

16
00:00:50.150 --> 00:00:53.530
You have all these components and you
have state that you want to use in your

17
00:00:53.530 --> 00:00:57.400
application, application state not local
state specific to the gov on it but state.

18
00:00:57.400 --> 00:01:01.460
Are you gonna use everywhere maybe like
it lurks or notification stuff like that.

19
00:01:02.480 --> 00:01:08.010
And if you have them sitting
inside on the component state

20
00:01:08.010 --> 00:01:12.340
then you can't really predict who's
changing the state if it's new.

21
00:01:12.340 --> 00:01:14.810
If it's updated if it's still
like you just don't know

22
00:01:14.810 --> 00:01:16.200
because it's all it's in
many different places.

23
00:01:16.200 --> 00:01:17.790
What's the source of truth?

24
00:01:17.790 --> 00:01:21.020
So Redux is that source of truth is
like hey just like you have a database

25
00:01:21.020 --> 00:01:25.820
on the server is like a let's put
a single state store writing application.

26
00:01:25.820 --> 00:01:29.180
So Redux wasn't the first thing
to do that's just a flux thing.

27
00:01:29.180 --> 00:01:32.710
The thing about Redux that actually took
them off and like made a better was like

28
00:01:32.710 --> 00:01:37.605
if we like flux we like dispatching
actions, we like single state store, but

29
00:01:37.605 --> 00:01:41.530
we're gonna do that we're going to take
this mythology of like reducing things so

30
00:01:41.530 --> 00:01:47.040
what they do is the whole point is
to have your state in one place and

31
00:01:47.040 --> 00:01:50.410
that way when you stay in the one place
you can do things like transformations

32
00:01:50.410 --> 00:01:54.010
time travel logging you can apply
all these middleware to your

33
00:01:54.010 --> 00:01:57.000
state because it's in one place
exactly where your state is.

34
00:01:57.000 --> 00:02:00.350
And there's only one way to access it and
that's through action.

35
00:02:00.350 --> 00:02:02.430
There's no other way to access
that you can't come in here and

36
00:02:02.430 --> 00:02:07.580
say you know Redux.state.Todos+1
you can't do that.

37
00:02:07.580 --> 00:02:08.400
There's no way to do it.

38
00:02:08.400 --> 00:02:11.600
The only way to access the state
is a fire going to action.

39
00:02:11.600 --> 00:02:14.420
So now and
then you create those actions yourselves.

40
00:02:14.420 --> 00:02:15.480
Right.
And then with a reducer or

41
00:02:15.480 --> 00:02:19.700
does it taste action and
is like okay given this action.

42
00:02:19.700 --> 00:02:21.150
This is the new state.

43
00:02:21.150 --> 00:02:22.840
Is what the new state's gonna like.

44
00:02:22.840 --> 00:02:26.760
So there's no way that you can have like
unpredictable side effects because all

45
00:02:26.760 --> 00:02:28.620
the producers are pure functions.

46
00:02:28.620 --> 00:02:32.100
They don't do third party calls
they don't call the server they

47
00:02:32.100 --> 00:02:34.780
only return state they're
pure no side effects.

48
00:02:34.780 --> 00:02:38.720
So that means your state is exactly
gonna be the way you describe it to be

49
00:02:38.720 --> 00:02:40.260
nothing more nothing less.

50
00:02:40.260 --> 00:02:41.690
So now is really predictable.

51
00:02:41.690 --> 00:02:45.630
So now you've never really great tooling
and now you know what's actually happening

52
00:02:45.630 --> 00:02:48.530
because you can only change
the state with an action.

53
00:02:48.530 --> 00:02:50.950
You're not like worried about
like wow this is crazy but

54
00:02:50.950 --> 00:02:53.890
going on the why this thing equals
two you have to worry about

55
00:02:53.890 --> 00:02:57.610
that you never call the X in the first
place and there's no way that that state.

56
00:02:57.610 --> 00:02:59.710
Unless the action was
called somewhere else.

57
00:02:59.710 --> 00:03:03.290
It's really easy to figure out what's
actually happening in the application.

58
00:03:03.290 --> 00:03:04.870
You call a action.

59
00:03:04.870 --> 00:03:06.910
You change or you create a new state.

60
00:03:06.910 --> 00:03:08.500
And then the app updates.

61
00:03:08.500 --> 00:03:09.380
That's it.

62
00:03:09.380 --> 00:03:10.650
You don't modify the state ever.

63
00:03:10.650 --> 00:03:11.810
It's always immutable.

64
00:03:11.810 --> 00:03:13.760
If you go look at the reducers here.

65
00:03:13.760 --> 00:03:18.510
The reason we do this like why do we just
say state push action dot payload and

66
00:03:18.510 --> 00:03:19.650
just return that.

67
00:03:19.650 --> 00:03:21.290
As we would be modifying the state.

68
00:03:21.290 --> 00:03:24.030
So, what we do is we create
a entirely new array

69
00:03:24.030 --> 00:03:26.500
with the payload in it
plus the old stuff it.

70
00:03:27.720 --> 00:03:29.630
So, it's immutable, right.

71
00:03:29.630 --> 00:03:33.540
That way we don't have to like we're
not mutating state which is actually

72
00:03:33.540 --> 00:03:37.160
That's when stuff gets really confusing
we start mutating stuff like okay,

73
00:03:37.160 --> 00:03:38.840
I don't actually know what's
going on here anymore.

74
00:03:38.840 --> 00:03:41.910
We're just like you create a new
state every single time, always.

75
00:03:44.150 --> 00:03:47.540
So yeah, that's high level,
pretty much it.

76
00:03:47.540 --> 00:03:52.480
But basically for me it's just
like one place where the state is

77
00:03:52.480 --> 00:03:55.920
that we can do crazy things like
you'll see tomorrow we'll do thonks.

78
00:03:55.920 --> 00:04:00.030
On the Web you have like logging
you'll have all types of other stuff.

79
00:04:00.030 --> 00:04:03.660
And then just describing like what
happens when that stage changes.

80
00:04:03.660 --> 00:04:06.070
So what happens when somebody adds a post.

81
00:04:06.070 --> 00:04:06.660
This happens.

82
00:04:08.030 --> 00:04:08.740
And that's it.

83
00:04:08.740 --> 00:04:11.030
This is the only place that
is going to change the state.

84
00:04:11.030 --> 00:04:13.680
Nowhere else in this application is
the state ever going to get changed

85
00:04:13.680 --> 00:04:14.309
other than right here.

86
00:04:15.840 --> 00:04:18.600
So now we don't have to think about
where this actually happened or

87
00:04:18.600 --> 00:04:19.690
what actually happened.

88
00:04:19.690 --> 00:04:21.170
We can just look at the actions.

89
00:04:21.170 --> 00:04:24.270
Go back in time until we figure out
when this actually happened and

90
00:04:24.270 --> 00:04:26.590
if you can see what
the transformation was and that's it.

91
00:04:33.940 --> 00:04:35.629
Any other questions on this?

92
00:04:41.149 --> 00:04:43.660
&gt;&gt; Scott Moss: Yeah it's.

93
00:04:43.660 --> 00:04:46.820
All right so
do we have any more questions for today?

94
00:04:46.820 --> 00:04:49.220
I want to do is go over
briefly we're going tomorrow.

95
00:04:50.390 --> 00:04:55.381
So we're going to be doing tomorrow is so
amazing designs for the app.

96
00:04:57.373 --> 00:05:00.774
&gt;&gt; Scott Moss: Is look out of here.

97
00:05:00.774 --> 00:05:02.270
So about.

98
00:05:04.256 --> 00:05:06.210
&gt;&gt; Scott Moss: So
here's this sweat book app.

99
00:05:06.210 --> 00:05:08.310
Some pretty pretty okay out.

100
00:05:08.310 --> 00:05:10.920
To be like in our design this.

101
00:05:10.920 --> 00:05:12.060
So it's great.

102
00:05:12.060 --> 00:05:17.160
It's literally just it's
a fitness logging app so

103
00:05:17.160 --> 00:05:20.140
you can go to the you can go to the gym.

104
00:05:20.140 --> 00:05:21.060
You can as exercises and

105
00:05:21.060 --> 00:05:27.320
use as your sets is gonna be using
some A-P-I is like a secret storage so

106
00:05:27.320 --> 00:05:31.409
storing things locally on a device but
still getting the asynchronous.

107
00:05:32.600 --> 00:05:38.310
Lessons from fetching and it's going to
use in different opponents like we're

108
00:05:38.310 --> 00:05:41.850
going to use type aheads, we're going to
use linear gradient agency, we're going to

109
00:05:41.850 --> 00:05:47.560
have a sliding tab navigation, we're going
to have nav bars and all types of stuff.

110
00:05:47.560 --> 00:05:49.870
So we'll be covering a lot
of that stuff tomorrow.

111
00:05:49.870 --> 00:05:53.500
And it's, this will actually be like
a production ready app that you can, like,

112
00:05:53.500 --> 00:05:58.060
use on your phone or put somewhere and
it'll work, like a pretty solid one.

113
00:05:58.060 --> 00:06:01.070
And then there'll also be lessons for,
like, future stuff that we just didn't

114
00:06:01.070 --> 00:06:04.610
have time to build or
that you can add yourself too if you want.

115
00:06:04.610 --> 00:06:06.040
So this is what we'll be doing tomorrow.

