WEBVTT

1
00:00:00.000 --> 00:00:03.824
[MUSIC]

2
00:00:03.824 --> 00:00:06.180
&gt;&gt; Scott: All we need to do now is like
I said we've got to create a ListView.

3
00:00:06.180 --> 00:00:08.159
And I'm not going to focus
on the search bar right now.

4
00:00:08.159 --> 00:00:11.350
We'll just go ahead and create that
ListView and see what that looks like.

5
00:00:11.350 --> 00:00:18.319
So I'll make a new component
here called ExerciseList.

6
00:00:19.820 --> 00:00:25.078
And this is, we're just gonna
bootstrap this right quick,

7
00:00:25.078 --> 00:00:28.696
React, (Component) from 'react'.

8
00:00:28.696 --> 00:00:30.720
And this one's actually
gonna be really important.

9
00:00:30.720 --> 00:00:33.705
So definitely look at this one.

10
00:00:33.705 --> 00:00:40.881
So we're gonna have a View, some Text and
a ListView from 'react.native'.

11
00:00:44.054 --> 00:00:51.634
&gt;&gt; Scott: And we're just gonna
export class ExerciseList.

12
00:00:58.658 --> 00:01:03.627
&gt;&gt; Scott: Cool, the ListView is pretty
much just gonna be the native view

13
00:01:03.627 --> 00:01:07.301
component underneath either Android or
iOS.

14
00:01:07.301 --> 00:01:10.268
So it's not just like some regular
scroll view that's ill performant.

15
00:01:10.268 --> 00:01:11.951
So it's gonna native version of it.

16
00:01:11.951 --> 00:01:15.690
So it's the API is a little
different to work with.

17
00:01:15.690 --> 00:01:19.169
So the first thing we wanna do
is we'll say constructor and

18
00:01:19.169 --> 00:01:23.785
the ExerciseList is we're gonna pass
the ExerciseList a list of exercises.

19
00:01:23.785 --> 00:01:25.586
So let's just set up some
default props for that.

20
00:01:25.586 --> 00:01:34.234
So we'll say static defaultProps
= { exercises = [] }.

21
00:01:34.234 --> 00:01:34.908
So that will be it.

22
00:01:34.908 --> 00:01:35.453
&gt;&gt; Speaker 2: Scott.

23
00:01:35.453 --> 00:01:35.969
&gt;&gt; Scott: Yes?

24
00:01:35.969 --> 00:01:38.421
&gt;&gt; Speaker 2: You got an import
react on the top of that?

25
00:01:38.421 --> 00:01:39.317
You do?
&gt;&gt; Scott: Yes.

26
00:01:39.317 --> 00:01:41.435
&gt;&gt; Speaker 2: Then why's
it showing up in red?

27
00:01:41.435 --> 00:01:42.337
&gt;&gt; Scott: What is?

28
00:01:42.337 --> 00:01:43.714
This?

29
00:01:43.714 --> 00:01:44.842
&gt;&gt; Speaker 2: Yeah.

30
00:01:44.842 --> 00:01:48.773
&gt;&gt; Scott: Because my linter
doesn't know about that.

31
00:01:48.773 --> 00:01:50.033
&gt;&gt; Speaker 2: Okay.
&gt;&gt; Scott: My linter is not smart

32
00:01:50.033 --> 00:01:50.749
enough yet.

33
00:01:50.749 --> 00:01:52.218
&gt;&gt; Speaker 2: Sorry.
&gt;&gt; Scott: I'm not smart enough to tell my

34
00:01:52.218 --> 00:01:53.390
linter how to be smart enough.

35
00:01:53.390 --> 00:01:54.698
&gt;&gt; Speaker 2: Comment from the channel.

36
00:01:54.698 --> 00:01:57.507
&gt;&gt; Scott: Yeah,.
&gt;&gt; Speaker 2: This is some straight Jedi

37
00:01:57.507 --> 00:01:59.621
stuff here [LAUGH]
&gt;&gt; Scott: Yeah,

38
00:01:59.621 --> 00:02:03.690
so in the constructor what
we wanna do is call super.

39
00:02:05.370 --> 00:02:09.930
And we need to set up a specific
data source for our ListView.

40
00:02:09.930 --> 00:02:11.949
You can't just pass like object or
an array to ListView.

41
00:02:11.949 --> 00:02:14.615
You got to use this data source thing.

42
00:02:14.615 --> 00:02:19.567
So what we'll do is

43
00:02:19.567 --> 00:02:25.137
we'll say const ds =

44
00:02:25.137 --> 00:02:33.808
new ListView.cloneWithRows.

45
00:02:33.808 --> 00:02:35.558
That doesn't sound right.

46
00:02:35.558 --> 00:02:36.975
Just let me double check.

47
00:02:42.032 --> 00:02:46.870
&gt;&gt; Scott: It is,
no .DataSource row exchange.

48
00:02:46.870 --> 00:02:51.581
Yeah, so new ListView.DataSource
which is going to be

49
00:02:51.581 --> 00:02:54.870
a function here and takes an object.

50
00:02:54.870 --> 00:02:59.660
And we'll say rowHasChanged which is
going to be a method that determines if

51
00:02:59.660 --> 00:03:00.940
a row is different.

52
00:03:00.940 --> 00:03:06.521
So it uses like algorithm to determine
if the data you pass in is different so

53
00:03:06.521 --> 00:03:09.608
it can render the list performantly.

54
00:03:09.608 --> 00:03:14.755
rowHasChanged, and this is going to give
you the previous row with the next row.

55
00:03:14.755 --> 00:03:19.234
So we'll say rowHasChanged(r1,

56
00:03:19.234 --> 00:03:24.003
r2) and all this on one line is crazy.

57
00:03:27.497 --> 00:03:32.702
&gt;&gt; Scott: And we'll just say
return row one does not equals

58
00:03:34.603 --> 00:03:36.641
&gt;&gt; Scott: row two.

59
00:03:36.641 --> 00:03:38.232
So it's just going to
compare those two things.

60
00:03:38.232 --> 00:03:40.010
If they don't equal each other,
then it's changed.

61
00:03:40.010 --> 00:03:41.010
That's the algorithm that we want.

62
00:03:42.250 --> 00:03:42.903
So we got that.

63
00:03:46.792 --> 00:03:52.800
&gt;&gt; Scott: And then now we want
to do is say this.state = {,

64
00:03:52.800 --> 00:03:57.235
and we'll just call this exercise,

65
00:03:57.235 --> 00:04:03.979
we'll just call this ds for
short too, or dataSource.

66
00:04:05.640 --> 00:04:08.977
And this is gonna be ds.cloneWithRows and

67
00:04:08.977 --> 00:04:14.340
this is where we actually pass in
the data that we wanna provide.

68
00:04:14.340 --> 00:04:18.270
And by default we wanna use
the props that was passed in.

69
00:04:18.270 --> 00:04:21.440
So we can actually get props from
the constructor as the first argument, and

70
00:04:21.440 --> 00:04:24.710
we can say props.exercises.

71
00:04:24.710 --> 00:04:25.470
So that would be the default.

72
00:04:30.503 --> 00:04:32.037
&gt;&gt; Scott: So
that we have our new dataSource,

73
00:04:32.037 --> 00:04:33.900
we can actually render this ListView now.

74
00:04:33.900 --> 00:04:36.366
So what we're doing is we're
making a new dataDource,

75
00:04:36.366 --> 00:04:39.723
setting up the algorithm that's gonna
determinate if it change or not, and

76
00:04:39.723 --> 00:04:41.310
it's gonna bind that to our state.

77
00:04:41.310 --> 00:04:45.390
So we can use it, so
now we'll go make our render function.

78
00:04:47.662 --> 00:04:52.014
And we'll say ListView, and

79
00:04:52.014 --> 00:04:59.154
the ListView takes in
a dataSource which is gonna

80
00:04:59.154 --> 00:05:07.503
be this.state.dataSource
&gt;&gt; Scott: Actually is it dataSource?

81
00:05:07.503 --> 00:05:09.397
Let's double check.

82
00:05:09.397 --> 00:05:11.535
Yeah, it is dataSource, sweet.

83
00:05:15.090 --> 00:05:17.565
&gt;&gt; Scott: All right, so
it's gonna take in a dataSource.

84
00:05:17.565 --> 00:05:20.361
And this also is gonna take
in a renderRow method,

85
00:05:20.361 --> 00:05:24.169
which determines what the rows in
the ListView are gonna look like.

86
00:05:24.169 --> 00:05:25.224
So they can be any component we want.

87
00:05:25.224 --> 00:05:27.249
So we'll just in line it right quick.

88
00:05:27.249 --> 00:05:31.561
So let's just say it's going to be,

89
00:05:31.561 --> 00:05:38.108
we'll just say it's just going
to be a Wiew with a Text.

90
00:05:38.108 --> 00:05:41.925
And you get access to the individual row,
which will be the individual exercise, so

91
00:05:41.925 --> 00:05:43.900
we'll say exercise.

92
00:05:43.900 --> 00:05:48.392
And all exercises have names, so

93
00:05:48.392 --> 00:05:52.729
we'll say, exercise.name.

94
00:05:52.729 --> 00:05:57.326
So we're just gonna render a list
with the exercises on them, and

95
00:05:57.326 --> 00:06:00.678
have their names rendered,
thatâ€™s about it.

96
00:06:06.799 --> 00:06:09.169
&gt;&gt; Scott: Any questions on the ListView?

97
00:06:09.169 --> 00:06:10.526
This is just the beginning of it.

98
00:06:10.526 --> 00:06:12.809
There's more to it.

99
00:06:12.809 --> 00:06:15.691
Cuz then you gotta think about, well how
do we update this when the props come in?

100
00:06:18.975 --> 00:06:20.121
&gt;&gt; Scott: Because right now,

101
00:06:20.121 --> 00:06:24.707
it's just getting props.exercises which
is at first is gonna be empty array but

102
00:06:24.707 --> 00:06:28.022
when this updates,
we're not updating the dataSource.

103
00:06:28.022 --> 00:06:30.369
So we have to update the dataSource too.

104
00:06:30.369 --> 00:06:32.274
And wherever we wanna do that
it's actually just gonna be in

105
00:06:32.274 --> 00:06:33.007
the render function.

106
00:06:33.007 --> 00:06:34.750
And this is broken because
I didn't put a return.

107
00:06:36.750 --> 00:06:38.060
There we go.

108
00:06:38.060 --> 00:06:46.285
And we can do that in the render function,

109
00:06:46.285 --> 00:06:51.455
we can say const dataSoure

110
00:06:51.455 --> 00:06:55.686
= this.setState or

111
00:06:55.686 --> 00:07:00.395
this.state.clone.

112
00:07:00.395 --> 00:07:05.234
We'll call the same method cloneWithRows,
and

113
00:07:05.234 --> 00:07:10.197
we'll pass in the new
this.props.exercises.

114
00:07:10.197 --> 00:07:11.755
So this will updated it for us.

115
00:07:11.755 --> 00:07:15.420
So now we have dataSource and
we just pass in dataSource.

116
00:07:15.420 --> 00:07:18.043
The reason we do it here is you know the
render method is gonna be called whenever

117
00:07:18.043 --> 00:07:18.850
the props are updated.

118
00:07:18.850 --> 00:07:21.099
So this is a chance for
us to make a new dataSource.

119
00:07:21.099 --> 00:07:28.713
&gt;&gt; Speaker 2: Now type on the line
22 waiting your exercises.

120
00:07:28.713 --> 00:07:30.887
&gt;&gt; Scott: Ex, see?

121
00:07:30.887 --> 00:07:33.449
That's what happened to me last time,
I had to change everything in the app.

122
00:07:33.449 --> 00:07:37.652
Exercise cool all right so we have that.

123
00:07:37.652 --> 00:07:40.870
The other way is we can actually just
like, we can call connect and get

124
00:07:40.870 --> 00:07:44.831
the exercise ourselves right here too if
we want because this isn't ExerciseList.

125
00:07:44.831 --> 00:07:47.799
So, although it's a UI component,
we can literally just connect to it and

126
00:07:47.799 --> 00:07:50.688
get the exercises ourselves which I
think is what I did in this solution.

127
00:07:50.688 --> 00:07:52.976
But sometimes I do things differently.

128
00:07:52.976 --> 00:07:55.160
But we'll just pass it in, no big deal.

129
00:07:55.160 --> 00:07:59.800
If we got it if we got it ourselves
we wouldn't have to do this.

130
00:08:00.980 --> 00:08:02.780
But it's all good.

131
00:08:02.780 --> 00:08:05.955
So we got the ExerciseList,
we got the ExerciseModal, and

132
00:08:05.955 --> 00:08:10.070
then now all we need to do is just
hook this up to the search bar.

133
00:08:10.070 --> 00:08:12.489
So the search bar if we go look at it,

134
00:08:12.489 --> 00:08:16.140
it's freaking out because
it needs a onTextChange.

135
00:08:16.140 --> 00:08:20.876
And, yeah it just needs a onTextChage.

136
00:08:20.876 --> 00:08:24.839
So we need to give it a method
to when it changes the text.

137
00:08:24.839 --> 00:08:29.191
So we'll go back to the ExerciseModal and
we'll say,

138
00:08:29.191 --> 00:08:34.015
onTextChange, run some method
here that we don't have, so

139
00:08:34.015 --> 00:08:38.188
we need to pass that method
into the ExerciseModal.

140
00:08:38.188 --> 00:08:45.067
And the method that will pass in is,
what do we want to do on onTextChange?

141
00:08:45.067 --> 00:08:48.403
What we'll do, so
we got to make this like a class

142
00:08:50.627 --> 00:08:57.655
&gt;&gt; Scott: Export, extends, component.

143
00:09:07.186 --> 00:09:09.821
&gt;&gt; Scott: There we go.

144
00:09:09.821 --> 00:09:14.293
And we'll just copy this
stuff right here and

145
00:09:14.293 --> 00:09:20.093
render
&gt;&gt; Scott: There we go,

146
00:09:20.093 --> 00:09:21.540
so we still got that.

147
00:09:21.540 --> 00:09:23.200
So on the text change for this,

148
00:09:23.200 --> 00:09:25.780
we just need to make a method right quick,
and we'll just say like handle change.

149
00:09:27.140 --> 00:09:27.640
Oops.

150
00:09:29.822 --> 00:09:31.518
&gt;&gt; Scott: handleTextChange, that'll work.

151
00:09:31.518 --> 00:09:33.910
And this will give us the text.

152
00:09:33.910 --> 00:09:38.805
There we go and then with this text we're
gonna actually do something, sweet.

153
00:09:38.805 --> 00:09:44.445
So, now that we got that,
we need to do is go ahead and

154
00:09:44.445 --> 00:09:48.949
bring in the, wait where is the top part?

155
00:09:48.949 --> 00:09:52.670
There we go, SearchBar is in there,
LinearGradient is in there, cool.

156
00:09:52.670 --> 00:09:55.990
We need to go ahead and
bring in the ExerciseList in here.

157
00:09:55.990 --> 00:09:57.190
So we'll do that now.

158
00:09:57.190 --> 00:10:01.735
Say import { ExerciseList }

159
00:10:01.735 --> 00:10:06.840
from './ExerciseList';.

160
00:10:06.840 --> 00:10:08.998
There we go.

161
00:10:08.998 --> 00:10:10.136
And we'll place it down here.

162
00:10:14.288 --> 00:10:15.460
&gt;&gt; Scott: All right that was a whole lot.

