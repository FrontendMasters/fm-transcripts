WEBVTT

1
00:00:00.600 --> 00:00:05.040
We left off last on, What did we do?

2
00:00:05.040 --> 00:00:09.542
We had yeah, auth with JWTs, so we had
the sign in what the sign in page and

3
00:00:09.542 --> 00:00:13.570
the social auth with GitHub
using the next auth plugin.

4
00:00:13.570 --> 00:00:17.940
So now what we need to do is we need to
now they're able to create an account.

5
00:00:17.940 --> 00:00:22.014
And lock things down with the JWT, we
actually need to implement that lockdown

6
00:00:22.014 --> 00:00:25.790
on some of the resources that we
don't want people to get access to.

7
00:00:25.790 --> 00:00:30.514
So as of right now, the only resource we
wanna block people from is the app page,

8
00:00:30.514 --> 00:00:32.960
so that's what we're gonna do.

9
00:00:32.960 --> 00:00:37.363
So in order to do that, we're going to
start this new lesson over here protecting

10
00:00:37.363 --> 00:00:39.890
pages, which I'm already on.

11
00:00:39.890 --> 00:00:44.444
So we're gonna use the next auth client,
which gives us a function called

12
00:00:44.444 --> 00:00:49.610
getSession, that basically just gets
the current session of the user.

13
00:00:49.610 --> 00:00:53.310
And we can use that session
to determine if someone is or

14
00:00:53.310 --> 00:00:56.779
isn't signed in and
then we can pass that session.

15
00:00:56.779 --> 00:00:58.482
Because of that provider that we added,

16
00:00:58.482 --> 00:01:01.650
that session gets pretty much accessible
everywhere in our application.

17
00:01:01.650 --> 00:01:04.424
So we can do all types of stuff,
so that's what we're gonna do.

18
00:01:04.424 --> 00:01:08.097
We're gonna grab that session and
then we're going to,

19
00:01:08.097 --> 00:01:11.856
depending on if you're signed in or
not on that auth page.

20
00:01:11.856 --> 00:01:16.932
We're gonna basically redirect you,
try to get you out of there,

21
00:01:16.932 --> 00:01:21.290
so you can't see this page,
so let's do that.

22
00:01:21.290 --> 00:01:25.930
So I'm gonna head into my app,
I'm gonna close this stuff, there we go.

23
00:01:27.520 --> 00:01:31.217
And then I'm going to go into pages,

24
00:01:31.217 --> 00:01:35.641
app, and
then this to catch our route here.

25
00:01:41.179 --> 00:01:44.142
And then we're gonna go down here and

26
00:01:44.142 --> 00:01:50.174
we're going to create a server side
function, so we haven't done it yet.

27
00:01:50.174 --> 00:01:55.176
So we're gonna say export async

28
00:01:55.176 --> 00:02:00.739
function, getServerSideProps.

29
00:02:00.739 --> 00:02:04.049
So why are we doing get server side
props and not get static props and

30
00:02:04.049 --> 00:02:05.780
what's the difference, right?

31
00:02:05.780 --> 00:02:09.402
So we're not doing get static props here,

32
00:02:09.402 --> 00:02:15.490
because this part of our known
application is actually a dynamic page.

33
00:02:15.490 --> 00:02:20.158
It's not a static page,
we don't want to pre generate

34
00:02:20.158 --> 00:02:25.144
this page at build time,
although we could, we're not.

35
00:02:25.144 --> 00:02:28.417
And that's just because how
the behavior that we want for

36
00:02:28.417 --> 00:02:32.380
this you can think of this page is
basically like a single page app.

37
00:02:32.380 --> 00:02:35.510
We want it to be always be be dynamic,
it's always live.

38
00:02:35.510 --> 00:02:38.768
If we had to generate this ahead of time,
I mean that can hit our database and

39
00:02:38.768 --> 00:02:41.269
do a lot of calls, so
we're just not interested in that.

40
00:02:42.270 --> 00:02:46.887
So this is like the equivalent of
trying to statically generate your

41
00:02:46.887 --> 00:02:49.730
Facebook home feed or your Twitter feed.

42
00:02:49.730 --> 00:02:51.849
It doesn't make sense to do that I mean,
you could,

43
00:02:51.849 --> 00:02:55.570
you could pick the first ten tweets above
the fold and statically generate that.

44
00:02:55.570 --> 00:02:58.149
And as soon as it connects and
you scroll, you go get the rest,

45
00:02:58.149 --> 00:03:00.640
that's a big optimization,
but we're not gonna do that.

46
00:03:00.640 --> 00:03:02.634
We're most likely just
gonna make this dynamic,

47
00:03:02.634 --> 00:03:04.250
so there's two ways to make it dynamic.

48
00:03:04.250 --> 00:03:07.157
You make it a single page app,
you don't have anything on the server,

49
00:03:07.157 --> 00:03:08.350
which we could also do here.

50
00:03:09.520 --> 00:03:14.206
Or we can just say, let's just fetch
everything initially on the server, and

51
00:03:14.206 --> 00:03:17.680
then we'll handle like
mutations on the client.

52
00:03:17.680 --> 00:03:18.850
So that's pretty much what we're gonna do.

53
00:03:19.900 --> 00:03:23.527
So to get server side props here,
we're gonna get some contexts which is

54
00:03:23.527 --> 00:03:27.380
basically gonna have like the request and
the response object on it.

55
00:03:27.380 --> 00:03:32.389
Because get server side props actually
behaves very much like API route,

56
00:03:32.389 --> 00:03:36.440
very much like this where you
have a request and a response.

57
00:03:36.440 --> 00:03:37.005
Except for

58
00:03:37.005 --> 00:03:41.101
it's blocking whatever page this is
exported from that page won't render.

59
00:03:41.101 --> 00:03:45.680
Until this function has finished its
execution and return some props.

60
00:03:45.680 --> 00:03:50.030
So you can do whatever you want here,
whatever you can do inside of these

61
00:03:50.030 --> 00:03:54.440
functions you can do inside
of this function, anything.

62
00:03:54.440 --> 00:03:58.084
So that's what we're gonna do, so
the first thing we do is we're gonna

63
00:03:58.084 --> 00:04:01.510
get our session so
we should have a get session from up here.

64
00:04:01.510 --> 00:04:05.360
So I'll do next auth slash clients,

65
00:04:05.360 --> 00:04:10.210
there should be a get
a session here like that.

66
00:04:11.350 --> 00:04:16.135
And then what I'm going to do is
I'm going to get a session, so

67
00:04:16.135 --> 00:04:20.606
I'll say session, Equals, await, and

68
00:04:20.606 --> 00:04:26.300
then get session and I think this just
takes the context object like that.

69
00:04:27.710 --> 00:04:29.952
So I have a session here and
that was gonna return it as a problem.

70
00:04:33.085 --> 00:04:35.633
Like that, so now we have a session, so

71
00:04:35.633 --> 00:04:39.990
that provider that we made here
is now gonna get that session.

72
00:04:39.990 --> 00:04:42.774
It's gonna get added here cuz
these are the page props,

73
00:04:42.774 --> 00:04:46.270
these page props get created
when we return them here.

74
00:04:46.270 --> 00:04:49.100
And then it's going to get
injected into the provider, so

75
00:04:49.100 --> 00:04:51.820
that means we can actually use them.

76
00:04:51.820 --> 00:04:56.279
And a hook up here just like we did in the
sign in like if you look at the sign in.

77
00:04:56.279 --> 00:05:00.601
We use the hook here to get the session
that hook is hooking into that provider to

78
00:05:00.601 --> 00:05:02.730
share the context of the session.

79
00:05:02.730 --> 00:05:05.534
All right, so
get service I props injects it and

80
00:05:05.534 --> 00:05:08.139
then a hook allows us to
get it on the client.

81
00:05:09.840 --> 00:05:12.760
Now, you might be thinking, well,
how does it happen, it's on the server?

82
00:05:12.760 --> 00:05:16.796
Well, that's because RxJS
preserving that data, the nitty

83
00:05:16.796 --> 00:05:21.543
gritty of how they pass data from server
to client is at the end of the day.

84
00:05:21.543 --> 00:05:24.500
They associate pages with like
different hashes and IDs,

85
00:05:24.500 --> 00:05:26.940
this page is this hash this ID.

86
00:05:26.940 --> 00:05:29.983
Here's the data that was requested for
this page, when it loads up,

87
00:05:29.983 --> 00:05:31.890
save it in a JSON file somewhere.

88
00:05:31.890 --> 00:05:34.266
And then when we load
this up on the browser,

89
00:05:34.266 --> 00:05:39.150
match the hash with this hash we have over
here and passing that data to its props.

90
00:05:39.150 --> 00:05:42.010
That's basically what it's doing,
if you go look at the output of all this,

91
00:05:42.010 --> 00:05:44.970
it's JSON files that they're saving
stuff in and then they're passing it in.

92
00:05:44.970 --> 00:05:51.220
And that's how they pass the data from
server to client, so that's all there.

93
00:05:51.220 --> 00:05:56.238
And then we're gonna use that same hook,
so we're gonna do the useSession.

94
00:05:58.213 --> 00:06:02.245
Like that, and I'm gonna say const,

95
00:06:02.245 --> 00:06:07.285
I think it's like session and
there's loading

96
00:06:07.285 --> 00:06:12.202
I think we can call wherever you want,
right?

97
00:06:12.202 --> 00:06:17.290
It's all right, whatever and
then we'll say use session,

98
00:06:17.290 --> 00:06:23.230
I could also just pass this session
I mean, I am passing it as a prop.

99
00:06:23.230 --> 00:06:27.041
So I could also just refer to it here as
a prop, and you can get access to it,

100
00:06:27.041 --> 00:06:28.100
either way is fine.

101
00:06:28.100 --> 00:06:31.725
The same session doesn't matter,
but yeah, just to let you know,

102
00:06:31.725 --> 00:06:33.070
I could totally do that.

103
00:06:33.070 --> 00:06:35.520
So if you're wondering why, hey,
why don't you just use that as a prop?

104
00:06:35.520 --> 00:06:39.240
Yeah, I could it's here, but I'm just
gonna use this session thing here.

105
00:06:39.240 --> 00:06:45.332
So then what I'm gonna do is I'm gonna
say if were loading to get the session,

106
00:06:45.332 --> 00:06:48.070
I don't want you to see anything.

107
00:06:49.240 --> 00:06:51.994
I literally don't want you to
see anything on this page, so

108
00:06:51.994 --> 00:06:55.420
I'm just gonna return no,
you're just not gonna see anything.

109
00:06:55.420 --> 00:06:58.927
If you return those I've react
render it doesn't show anything, so

110
00:06:58.927 --> 00:07:00.840
that's what null does.

111
00:07:00.840 --> 00:07:05.158
So overloading, get out here,
you not gonna see anything and

112
00:07:05.158 --> 00:07:09.487
then what I wanna do is right now
this thing just says if false.

113
00:07:09.487 --> 00:07:14.424
So I don't wanna do that Instead I
wanna say, if it's not loading and

114
00:07:14.424 --> 00:07:19.600
we still don't have a session,
then you're not authorized.

115
00:07:19.600 --> 00:07:23.780
Cuz if we're downloading the session,
and we still don't have a session back.

116
00:07:23.780 --> 00:07:26.899
You're not authorized, so
I'm going to go ahead and

117
00:07:26.899 --> 00:07:29.890
open up this dialog which is a modal.

118
00:07:29.890 --> 00:07:33.907
And it's gonna say you're signed out,
click here to sign in, and

119
00:07:33.907 --> 00:07:37.540
I'm just making sure that
you can't close this modal.

120
00:07:37.540 --> 00:07:42.164
So you can't cancel it, you can't close
it, you can't click on the overlay,

121
00:07:42.164 --> 00:07:43.556
you can't hit escape.

122
00:07:43.556 --> 00:07:45.945
It's literally unclosable modal, and

123
00:07:45.945 --> 00:07:50.910
because it's inside of the if statement
I'm not even rendering the app.

124
00:07:50.910 --> 00:07:54.731
It's this modal, or it's this app like
you literally won't see anything, so

125
00:07:54.731 --> 00:07:59.090
while you're waiting for the session
to come back, you won't see anything.

126
00:07:59.090 --> 00:08:03.368
If the session comes back, and it's null
you'll see a modal, if it comes back and

127
00:08:03.368 --> 00:08:06.110
it's not null you'll see this page.

128
00:08:06.110 --> 00:08:09.412
And then the last thing I wanna
do is is pass in the user here,

129
00:08:09.412 --> 00:08:11.406
so I'll just say session dot user.

130
00:08:11.406 --> 00:08:14.880
Cuz we logged the session before, and
we saw that there was a user object on it.

131
00:08:14.880 --> 00:08:19.173
So that's actually what I'm passing
in here, session dot user, so

132
00:08:19.173 --> 00:08:22.150
now if we go try this, see what happens.

133
00:08:22.150 --> 00:08:26.583
So that should still be running,
let's go back to our browser.

134
00:08:28.288 --> 00:08:33.804
Try to do all this stuff again, Okay,

135
00:08:33.804 --> 00:08:37.946
so you can see right here, one thing you
might not have noticed is before I move

136
00:08:37.946 --> 00:08:41.150
on, so the whole null is
actually using that session hook.

137
00:08:42.250 --> 00:08:46.655
And what it does with it, it will,
depending on if you're logged in or

138
00:08:46.655 --> 00:08:51.299
not, it will put a button at the top
right at the null bar that says sign in.

139
00:08:51.299 --> 00:08:55.790
If you're not logged in, if you are logged
in it'll say go to dashboard, right.

140
00:08:55.790 --> 00:08:59.007
So it's doing that based off the session,
so you can see I am logged in so

141
00:08:59.007 --> 00:09:00.520
it says go to dashboard, right?

142
00:09:00.520 --> 00:09:05.794
But if I sign out, I don't know why
I clicked that I sign out of this by

143
00:09:05.794 --> 00:09:13.025
clearing these cookies, you can see it
says sign out, it immediately changed.

144
00:09:13.025 --> 00:09:16.666
Right and that's because we're getting
the session on the client side and

145
00:09:16.666 --> 00:09:19.265
it's getting that, it's being reactive.

146
00:09:19.265 --> 00:09:26.500
Also those hooks are very smart, hooks
like that react query and use and SWR.

147
00:09:26.500 --> 00:09:30.810
What they do is they'll track when you
focus and leave focus of your app.

148
00:09:30.810 --> 00:09:33.971
So for instance, if I click here,
and then click back,

149
00:09:33.971 --> 00:09:37.720
let me see if you see the network
tab here, watch this.

150
00:09:37.720 --> 00:09:38.625
So I'm in here,

151
00:09:38.625 --> 00:09:42.321
I'm gonna click over here you can
see you want to go get the session.

152
00:09:42.321 --> 00:09:45.457
I'm gonna click back over here,
and once you look at the session,

153
00:09:45.457 --> 00:09:48.384
I'm gonna click back over here,
and once we get the session.

154
00:09:48.384 --> 00:09:51.504
So it's keeping track of if I'm
focused on the window or not,

155
00:09:51.504 --> 00:09:53.186
to make a call to get the session.

156
00:09:53.186 --> 00:09:56.236
So you're always getting the latest
information about if someone

157
00:09:56.236 --> 00:09:57.059
signed in or not.

158
00:09:57.059 --> 00:10:02.950
It's pretty cool little feature that's
built into these hooks, so pretty nice.

159
00:10:02.950 --> 00:10:06.857
So yeah, it'll always go make a call,
so if someone like I'm gonna leave,

160
00:10:06.857 --> 00:10:08.396
I'm gonna go to another tab.

161
00:10:08.396 --> 00:10:11.869
And when they come back here, it's gonna
make a call to see if they are logged in.

162
00:10:11.869 --> 00:10:16.174
As soon as they come back,
as soon as this window focuses again,

163
00:10:16.174 --> 00:10:21.058
pretty nice, okay, so we're gonna
hit Sign Up, Sign in with a GitHub.

164
00:10:24.483 --> 00:10:29.080
Okay, I think it's because I'm not
passing in any folders that's right.

165
00:10:30.990 --> 00:10:35.538
It's here, I got a pass on then to
this thing, there's nothing here and

166
00:10:35.538 --> 00:10:37.640
that's why it's freaking out.

167
00:10:37.640 --> 00:10:42.796
We haven't got to this part yet okay,
so I'll just do something like that.

168
00:10:47.091 --> 00:10:48.263
I think that will do it.

169
00:10:52.512 --> 00:10:57.242
There we go, okay,
debugging that's crazy, okay, so

170
00:10:57.242 --> 00:11:01.293
to fix that bug, again,
that bug is basically.

171
00:11:01.293 --> 00:11:04.659
One of the ever green component was
freaking out because it's expecting it to

172
00:11:04.659 --> 00:11:06.230
have some children over menu item.

173
00:11:07.430 --> 00:11:11.694
No array was set so it was undefined so
it was freaking out, so

174
00:11:11.694 --> 00:11:16.140
I just gave it some mock data to satisfy,
so we can render.

175
00:11:16.140 --> 00:11:19.035
So you should see this, see this little
mock folder that I have here, so

176
00:11:19.035 --> 00:11:21.120
now that's because we're signed in now,
right.

177
00:11:21.120 --> 00:11:25.834
So if I try to go back to sign in,
It's gonna

178
00:11:25.834 --> 00:11:31.200
redirect me back here cuz I'm signed in
automatically I don't have to do anything.

179
00:11:31.200 --> 00:11:35.874
There's ways to get past that sudden flash
of, God, I don't see that jarring flash.

180
00:11:35.874 --> 00:11:39.830
At the sign up page and then coming
back here, but that's pretty much it.

181
00:11:39.830 --> 00:11:43.368
So now if I wanna sign out if
we want to test that modal so

182
00:11:43.368 --> 00:11:47.942
I go to application, I'm gonna clear
this will close this and boom.

183
00:11:47.942 --> 00:11:50.509
Soon as I close it session
expired automatically,

184
00:11:50.509 --> 00:11:52.100
I didn't have to do anything.

185
00:11:52.100 --> 00:11:55.496
That's because it's tracking that
session every time I focus and in and

186
00:11:55.496 --> 00:11:58.121
out of the window, so
I made the call to get the session.

187
00:11:58.121 --> 00:12:02.367
They didn't see it in the cookies, so
I can't do anything I try to click,

188
00:12:02.367 --> 00:12:03.610
can't go anywhere.

189
00:12:03.610 --> 00:12:06.965
There's no cancel button,
can't hit escape, so

190
00:12:06.965 --> 00:12:12.051
you got to click here to go sign in and
now we're back here, so I sign in again.

191
00:12:15.200 --> 00:12:19.992
And we're back, all right, also I
thought that was pretty easy to do, I've

192
00:12:19.992 --> 00:12:25.580
done something like this before manually,
and it's a lot more work than that.

193
00:12:25.580 --> 00:12:30.145
This was really easy, I mean even
just setting up that focusing on

194
00:12:30.145 --> 00:12:33.490
the windows and
analysis is not an easy task.

195
00:12:33.490 --> 00:12:36.243
So they did a really good job there,
yeah, so

196
00:12:36.243 --> 00:12:39.080
that's how we're gonna
lock down our pages.

197
00:12:39.080 --> 00:12:42.233
So if we had any of the pages in here
that we want to lock down, I don't know.

198
00:12:42.233 --> 00:12:46.930
We were charging people to look at blog
posts cuz our blog posts are that good.

199
00:12:46.930 --> 00:12:49.406
All right you do the same thing,

200
00:12:49.406 --> 00:12:53.914
[LAUGH] go do the same thing we
just did on the blog post page.

201
00:12:53.914 --> 00:12:55.470
And lock it down, if you want to I mean,
you got to survive out here.

202
00:12:55.470 --> 00:12:58.816
I just turned off,
I just disabled JavaScript and,

203
00:12:58.816 --> 00:13:01.860
[LAUGH] open up the incognito window.

204
00:13:01.860 --> 00:13:05.216
Want to read my New York Times post, but

205
00:13:05.216 --> 00:13:09.500
that's just me so,
[LAUGH] don't do that at home.

