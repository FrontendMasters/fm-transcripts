WEBVTT

1
00:00:00.110 --> 00:00:02.957
I guess one note I wanted to talk
about is kind of just deploying so

2
00:00:02.957 --> 00:00:06.491
we're gonna use a vercel, i don't know
if you pronounce it vercel or vercel but

3
00:00:06.491 --> 00:00:09.858
I think it's vercel, cuz I talked to
them a lot and they always say vercel.

4
00:00:09.858 --> 00:00:13.521
So I'm gonna say vercel,
we're gonna be using vercel for

5
00:00:13.521 --> 00:00:17.484
deploying mainly because the team
at vercel are the people that

6
00:00:17.484 --> 00:00:21.590
create an Next.js as well, so
we're gonna be using them.

7
00:00:21.590 --> 00:00:26.722
But I also wanted to note that since last
I talked about deploying with Next.js,

8
00:00:26.722 --> 00:00:31.625
Netlify and the team of Netlify has done
a really good job of adding support for

9
00:00:31.625 --> 00:00:32.420
Next.js.

10
00:00:32.420 --> 00:00:36.059
And here's a link here that you can
click on where they will show you how

11
00:00:36.059 --> 00:00:38.772
to do that It's really impressive work,
so more and

12
00:00:38.772 --> 00:00:41.931
more providers are coming online and
supporting next.js.

13
00:00:41.931 --> 00:00:46.475
So I think that just kind of shows,
you know just how much pool Next.js

14
00:00:46.475 --> 00:00:51.140
as start to have on the ecosystem,
so pretty, pretty nice.

15
00:00:51.140 --> 00:00:53.337
But yeah,
we'll get more into deploying later,

16
00:00:53.337 --> 00:00:56.910
this is just kind of like an intro to that
and a little update to what I said before.

17
00:00:58.260 --> 00:01:00.729
All right, let's walk through this app,

18
00:01:00.729 --> 00:01:04.310
let's actually see what
we're gonna be doing, okay?

19
00:01:04.310 --> 00:01:06.590
So what I want you to do is go ahead and

20
00:01:06.590 --> 00:01:10.230
if you haven't already is
just clone the actual app.

21
00:01:10.230 --> 00:01:14.371
So whatever your flavor is,
if you use SSH, like me or HTTPS, or

22
00:01:14.371 --> 00:01:18.460
apparently GitHub has a COI
now that you can clone things.

23
00:01:18.460 --> 00:01:22.010
I've never used that before, but that
seems legit, I guess we'll look into that,

24
00:01:22.010 --> 00:01:24.210
I wonder what else that seal I can do.

25
00:01:24.210 --> 00:01:28.442
But yeah, they have a COI option now, but
anyway, clone it, and then obviously,

26
00:01:28.442 --> 00:01:30.950
don't forget to install your modules.

27
00:01:30.950 --> 00:01:34.730
How many times have you pulled down a repo
or I don't know rebased a branch or

28
00:01:34.730 --> 00:01:35.980
whatever.

29
00:01:35.980 --> 00:01:38.770
And you go run and
you're like, this doesn't work.

30
00:01:38.770 --> 00:01:39.470
This is stupid.

31
00:01:39.470 --> 00:01:42.150
And then you go hit up
someone in your company and

32
00:01:42.150 --> 00:01:45.034
they're like, did you install the modules?

33
00:01:45.034 --> 00:01:48.514
[LAUGH] You're like, duh,
but you know you didn't.

34
00:01:48.514 --> 00:01:51.860
[LAUGH] Yeah, that happens all the time.

35
00:01:51.860 --> 00:01:53.400
It happens all the time to me.

36
00:01:53.400 --> 00:01:55.097
So, installing modules,

37
00:01:55.097 --> 00:01:59.742
I got to the point where I'll just add
hooks using like Husky in my package,

38
00:01:59.742 --> 00:02:04.930
Jason that, post Pull post rebase
whatever it is automatically installed.

39
00:02:04.930 --> 00:02:06.240
That way I don't forget it.

40
00:02:06.240 --> 00:02:08.570
So, pro tip, add some posts,

41
00:02:08.570 --> 00:02:14.490
you know rebase post merge hooks to
automatically install your stuff.

42
00:02:14.490 --> 00:02:18.910
Yeah, so it's kind of want to walk you
through all the stuff that's here.

43
00:02:18.910 --> 00:02:22.580
So like I said,
this is an app that's already built out.

44
00:02:22.580 --> 00:02:25.614
It's most of the UI,
not all the UI stuff is done so

45
00:02:25.614 --> 00:02:28.300
we won't be having to
work with any of that.

46
00:02:29.330 --> 00:02:31.380
It's just not ready for production.

47
00:02:31.380 --> 00:02:34.932
Like I said, some things are missing,
some things aren't complete,

48
00:02:34.932 --> 00:02:37.833
some things just weren't even thought of,
so that's our

49
00:02:37.833 --> 00:02:41.700
job as the team leader to come in here and
get this thing ready for production.

50
00:02:41.700 --> 00:02:44.400
And then we get to go home at noon, right?

51
00:02:44.400 --> 00:02:47.970
So [LAUGH] that's what we're gonna do.

52
00:02:47.970 --> 00:02:50.340
And, you know,
we collect the big checks for that.

53
00:02:50.340 --> 00:02:54.160
So, basically just a tour
of what's going on here.

54
00:02:54.160 --> 00:02:55.308
We have a components directory,

55
00:02:55.308 --> 00:02:57.880
like I said, you can feel free to
walk through here if you want to.

56
00:02:57.880 --> 00:03:02.630
We won't be working out of this directory,
like I said, I literally built a full app.

57
00:03:02.630 --> 00:03:04.820
My attempt have a notion clone wiki clone.

58
00:03:04.820 --> 00:03:06.270
So there's a lot of components in there.

59
00:03:06.270 --> 00:03:09.070
You know, feel free to go in there and
see what I'm doing.

60
00:03:09.070 --> 00:03:13.220
I don't think I'm doing anything
parrticularly special in there.

61
00:03:13.220 --> 00:03:13.720
Check it out.

62
00:03:14.990 --> 00:03:19.180
We have this db folder here that we'll
get to when we talk about a database.

63
00:03:19.180 --> 00:03:22.663
But you can look through here if you want
to, a lot of crazy things happening,

64
00:03:22.663 --> 00:03:26.270
It's called db, so you could probably
guess what it's gonna be used for.

65
00:03:26.270 --> 00:03:28.235
But if you look at the files and stuff,

66
00:03:28.235 --> 00:03:31.880
they're basically like no op
functions that don't do anything.

67
00:03:31.880 --> 00:03:35.170
So we're gonna have to make those
functions do something at some points.

68
00:03:35.170 --> 00:03:38.290
And then we have a middleware.

69
00:03:38.290 --> 00:03:42.586
Middleware is the equivalent of like
middleware you would have on an express

70
00:03:42.586 --> 00:03:43.130
server.

71
00:03:43.130 --> 00:03:45.410
Most of this is already done for you.

72
00:03:46.570 --> 00:03:50.371
I left this in here completed because
honestly, there just wasn't enough time to

73
00:03:50.371 --> 00:03:53.789
actually cover implementing the middle
where to now just didn't think it

74
00:03:53.789 --> 00:03:57.690
was gonna be that beneficial
because it's actually quite simple.

75
00:03:57.690 --> 00:04:01.020
So middleware,
we'll be using a set of our API routes.

76
00:04:01.020 --> 00:04:03.140
Pages, let's take a look at pages.

77
00:04:03.140 --> 00:04:07.700
So our app is basically three parts,
like an app you have real life so

78
00:04:07.700 --> 00:04:12.020
you have your landing page and
all that static stuff right?

79
00:04:12.020 --> 00:04:15.790
The pricing page your about us to
talk about how good your culture is?

80
00:04:15.790 --> 00:04:18.170
And how you all like dogs and
stuff like that.

81
00:04:18.170 --> 00:04:21.460
And then you have the second
part which is like your blog.

82
00:04:21.460 --> 00:04:24.723
So if you haven't put your company's
blog on medium you probably have

83
00:04:24.723 --> 00:04:28.270
it on your site maybe for your change
log on there to something like stripe.

84
00:04:28.270 --> 00:04:29.430
So that's the second part.

85
00:04:29.430 --> 00:04:31.800
And then the third part is
everything that's behind signed in.

86
00:04:31.800 --> 00:04:33.080
So the actual app.

87
00:04:33.080 --> 00:04:36.740
So our next day S app, our app here is
going to have all three of those parts.

88
00:04:36.740 --> 00:04:40.338
It's going to have the landing page
material, it's going to have a blog, and

89
00:04:40.338 --> 00:04:43.608
it's also going to have a sign in
experience with the actual app is, and

90
00:04:43.608 --> 00:04:47.320
just one framework where one
app that's pretty powerful.

91
00:04:47.320 --> 00:04:51.856
I'm a big fan of that because I mean,
it was kind of like that,

92
00:04:51.856 --> 00:04:55.610
you know 2012 2013 people did that.

93
00:04:55.610 --> 00:05:01.043
But it wasn't this way, It wasn't with
like, you know, server side rendered react

94
00:05:01.043 --> 00:05:06.650
and stuff like that it was more with like,
ejs, or handlebars or something like that.

95
00:05:06.650 --> 00:05:07.800
Right?
It was it was a little different.

96
00:05:07.800 --> 00:05:12.024
It wasn't client side, it was either
a spa or it was server side static,

97
00:05:12.024 --> 00:05:13.410
it wasn't both.

98
00:05:13.410 --> 00:05:15.060
So it's a little different.

99
00:05:15.060 --> 00:05:17.310
And it definitely wasn't using like
server less and stuff like that.

100
00:05:17.310 --> 00:05:21.751
So kind of like we're like moving full
circle now back to what we used to have

101
00:05:21.751 --> 00:05:27.180
which is better technologies rethought,
so pretty crazy to develop that way.

102
00:05:27.180 --> 00:05:32.660
But yeah, so we have a blog here,
we have a signing page index page.

103
00:05:32.660 --> 00:05:38.820
And then we have the actual app here,
which is the sign in experience.

104
00:05:38.820 --> 00:05:42.938
And of course, eventually we'll add an API
stuff because this is going to cover full

105
00:05:42.938 --> 00:05:46.360
stack and authentication and
database access and all types of stuff.

106
00:05:46.360 --> 00:05:49.270
So we'll add some API
routes in here as well.

107
00:05:49.270 --> 00:05:51.630
Posts, this is gonna be
a folder of MDX files.

108
00:05:51.630 --> 00:05:55.864
If you don't know what MDX is it's just
markdown that allows you to use react

109
00:05:55.864 --> 00:05:57.330
components inside of it.

110
00:05:58.350 --> 00:06:00.888
We won't be actually using any
react components inside of

111
00:06:00.888 --> 00:06:03.390
MDX because there's
really no value of that.

112
00:06:03.390 --> 00:06:05.310
In this course, but
it's set up to where you can do.

113
00:06:05.310 --> 00:06:10.026
It will just be used in regular markdown,
public folders, just whatever was scaffold

114
00:06:10.026 --> 00:06:15.360
here from Next.js, with some images that
are added, we won't be working in here.

115
00:06:15.360 --> 00:06:18.471
And then the styles is just some
global styles that I added and

116
00:06:18.471 --> 00:06:22.690
then I have this utils folder, which
just has some utility functions in here.

117
00:06:22.690 --> 00:06:26.586
I'm using some random gradient
generator to get some gradients and

118
00:06:26.586 --> 00:06:29.453
then a function to check
if we're on server side or

119
00:06:29.453 --> 00:06:34.027
not, by checking the type of window which
is honestly as hacky as it looks, this

120
00:06:34.027 --> 00:06:38.640
is the most legitimate way to check if
you're on the server or not, so use that.

121
00:06:39.710 --> 00:06:42.170
I promise you, it works.

122
00:06:42.170 --> 00:06:47.019
Other than that you pretty much just
got your standard eslintcc setup and

123
00:06:47.019 --> 00:06:48.430
things like that.

124
00:06:48.430 --> 00:06:50.270
This is a TypeScript app.

125
00:06:50.270 --> 00:06:53.329
So the reason I made it TypeScript is so
we can get autocomplete so

126
00:06:53.329 --> 00:06:54.970
we can move faster.

127
00:06:54.970 --> 00:06:57.957
If you don't want to use any
of that stuff, just put any.

128
00:06:57.957 --> 00:07:00.770
[LAUGH] Just put any, it's all good.

129
00:07:00.770 --> 00:07:04.620
But I added it so
you can move faster, specifically.

130
00:07:04.620 --> 00:07:07.210
And that's it,
that's just a tour of the app.

131
00:07:07.210 --> 00:07:10.380
Again, the app is called known,
so yeah, that's basically it.

132
00:07:10.380 --> 00:07:14.682
So what we'll do is we'll start it,
and because it's a Next.js app,

133
00:07:14.682 --> 00:07:16.990
we should be able to just run yarn dev.

134
00:07:18.230 --> 00:07:19.340
So we're gonna run yarn dev.

135
00:07:19.340 --> 00:07:23.956
We're gonna open this up,
and it shouldn't be broken.

136
00:07:23.956 --> 00:07:25.326
Let's see.

137
00:07:28.653 --> 00:07:32.600
Cool, so if you load it up,
you'll see something like this.

138
00:07:32.600 --> 00:07:35.940
You'll see we're on our static site or
landing page.

139
00:07:35.940 --> 00:07:39.360
Got some really horrible copy in
here that we would like I said this,

140
00:07:39.360 --> 00:07:41.580
this wasn't ready for production.

141
00:07:41.580 --> 00:07:43.430
They didn't do a good job, right?

142
00:07:43.430 --> 00:07:44.280
They got the UI, right?

143
00:07:44.280 --> 00:07:46.410
I mean, this logo was clean, right?

144
00:07:46.410 --> 00:07:48.510
But they didn't get everything right.

145
00:07:48.510 --> 00:07:50.660
This isn't this is not ready for
our users.

146
00:07:50.660 --> 00:07:53.570
So we really need to just this whip it up,
and that's what we're gonna be doing.

147
00:07:53.570 --> 00:07:57.070
We're gonna do that, so
you'll see this default title here,

148
00:07:57.070 --> 00:08:00.980
if you click on blog, Blog works but
there's just no blog posts here.

149
00:08:00.980 --> 00:08:02.340
So you're not gonna see anything.

150
00:08:02.340 --> 00:08:04.620
If you try to actually
go to an actual blog.

151
00:08:04.620 --> 00:08:06.600
It most likely will break.

152
00:08:06.600 --> 00:08:11.824
So, yeah, it'll break there
intentionally because this is not there.

153
00:08:11.824 --> 00:08:13.830
There was some blog posts
it finally loaded up.

154
00:08:13.830 --> 00:08:16.900
So yeah, obviously there's some
issues here and we need to fix them.

155
00:08:16.900 --> 00:08:20.114
And if you try to actually sign up,
you click the sign up button, you go to

156
00:08:20.114 --> 00:08:23.890
the sign in here, you try to log in with
GitHub, it literally doesn't do anything.

157
00:08:23.890 --> 00:08:26.725
It doesn't even do anything,
you can click it all day.

158
00:08:26.725 --> 00:08:30.180
So yeah, we got some work here,
so let's dive right in.

