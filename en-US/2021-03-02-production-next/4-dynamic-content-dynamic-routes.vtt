WEBVTT

1
00:00:00.030 --> 00:00:03.960
So the next one we're gonna talk
about is dynamic routes and content.

2
00:00:03.960 --> 00:00:09.110
So previously we talked about static
routes with content with static pages.

3
00:00:09.110 --> 00:00:11.949
So now we're gonna talk
about dynamic content

4
00:00:11.949 --> 00:00:15.320
on a dynamic route that
generates a static page.

5
00:00:15.320 --> 00:00:17.323
So again, so many terms, but

6
00:00:17.323 --> 00:00:22.370
I think it's important to really
understand how these work.

7
00:00:22.370 --> 00:00:26.700
Because depending on how you build your
app and the type of page it is, where

8
00:00:26.700 --> 00:00:31.770
you're getting the data from, it's going
to determine a user experience really.

9
00:00:31.770 --> 00:00:37.216
But the beautiful thing about it, is that
next.js allows you to basically opt in and

10
00:00:37.216 --> 00:00:41.450
opt out and pretty much do whatever
you want, whenever you want.

11
00:00:41.450 --> 00:00:43.315
It has so many options and
you're gonna see.

12
00:00:43.315 --> 00:00:47.280
And I'll highlight them here in
the syllabus, cuz even I'm just like,

13
00:00:47.280 --> 00:00:50.140
this is crazy and
this is insane that you can do this.

14
00:00:50.140 --> 00:00:52.060
So, yeah, enough about that.

15
00:00:52.060 --> 00:00:52.850
Let's hop right in.

16
00:00:52.850 --> 00:00:57.992
So, basically,
we're going to create a blog, right,

17
00:00:57.992 --> 00:01:02.394
so we want our blog to be
able to pull from our CMS.

18
00:01:02.394 --> 00:01:08.060
And we want it to be able to handle new
posts that come in and stuff like that.

19
00:01:08.060 --> 00:01:09.870
So that's what we're going to do.

20
00:01:09.870 --> 00:01:15.120
So, just a little recap on the app and
how things work.

21
00:01:15.120 --> 00:01:19.352
If we go look at our app here,
and we go look at the blog,

22
00:01:19.352 --> 00:01:21.500
we have two pages in here.

23
00:01:21.500 --> 00:01:26.227
So this index page, this is basically the
page when you go to someone's blog, and

24
00:01:26.227 --> 00:01:30.542
it shows you all the blog entries with
their summaries and you click on one,

25
00:01:30.542 --> 00:01:32.550
okay, that's what this page is.

26
00:01:32.550 --> 00:01:34.157
This is just a index for all your blogs,

27
00:01:34.157 --> 00:01:36.580
some people will paginate
this if they have a lot.

28
00:01:36.580 --> 00:01:39.380
We're not doing all that, we're just gonna
list all the blogs in our summaries here.

29
00:01:39.380 --> 00:01:42.861
And then when you click on the blog,
it's gonna take you to this page,

30
00:01:42.861 --> 00:01:44.339
which is an individual post.

31
00:01:45.600 --> 00:01:49.240
And that's where you'll actually be able
to see the full posts and all that stuff.

32
00:01:49.240 --> 00:01:52.540
So we're gonna make both
of these actually work.

33
00:01:52.540 --> 00:02:00.130
So, first thing we're going to do
is head over to the index page.

34
00:02:00.130 --> 00:02:04.555
And we need to basically do the same
thing we did for the landing page index,

35
00:02:04.555 --> 00:02:08.348
because right now it's just
getting posts from default props,

36
00:02:08.348 --> 00:02:11.110
which is empty, it's just a empty array.

37
00:02:11.110 --> 00:02:15.270
So we need to actually get
the posts from our CMS but

38
00:02:15.270 --> 00:02:18.650
also we have posts from our file system.

39
00:02:20.510 --> 00:02:23.423
I obviously wouldn't recommend
doing this in real life,

40
00:02:23.423 --> 00:02:27.051
having some content, some blog posts
coming from your file system, and

41
00:02:27.051 --> 00:02:29.530
then also having some
content coming from a CMS.

42
00:02:29.530 --> 00:02:31.000
I don't know why you would do that.

43
00:02:32.400 --> 00:02:34.240
But yeah, I don't recommend doing that.

44
00:02:34.240 --> 00:02:38.479
But we're doing it so I can show you the
power of how you can use different sources

45
00:02:38.479 --> 00:02:41.896
inside of your static props and
how you can mix things together,

46
00:02:41.896 --> 00:02:44.480
and how next.js just doesn't care.

47
00:02:44.480 --> 00:02:45.322
So that's what we're going to do.

48
00:02:45.322 --> 00:02:48.749
So we're going to pull from our CMS,
which if we go look at that,

49
00:02:48.749 --> 00:02:53.270
which is just content.js, where's that,
there we go content.ts, I'm sorry.

50
00:02:53.270 --> 00:02:57.257
You can see we have seen some
published blog posts down here,

51
00:02:57.257 --> 00:02:59.720
put in draft from one to two as well.

52
00:02:59.720 --> 00:03:01.152
So we're just going to
pull from both of these.

53
00:03:01.152 --> 00:03:04.233
So the first thing we wanna do is,
basically,

54
00:03:04.233 --> 00:03:08.630
we're gonna create our git static
props inside the index page.

55
00:03:08.630 --> 00:03:13.117
And there, the index page is basically
just gonna be responsible for just getting

56
00:03:13.117 --> 00:03:17.409
basically those blog posts, getting
your frontmatter from those NDX files,

57
00:03:17.409 --> 00:03:21.461
and we just want to be able to get
the title in the summary, and that's it.

58
00:03:21.461 --> 00:03:23.854
Cuz that's all we're going
to show in that preview,

59
00:03:23.854 --> 00:03:26.930
we don't really care about
the full post on that page.

60
00:03:26.930 --> 00:03:28.570
So we'll work on that.

61
00:03:28.570 --> 00:03:33.330
So the first thing we're going to do is
we're going to actually add the git static

62
00:03:33.330 --> 00:03:36.060
props on the index page, so let's do that.

63
00:03:36.060 --> 00:03:43.020
So I'm gonna go here to
the index page of blog.

64
00:03:43.020 --> 00:03:48.664
And I'm going to go down here, and I'm
going to say export const, or not const,

65
00:03:48.664 --> 00:03:53.816
let's do function, export function
getStaticProps like that, okay?

66
00:03:53.816 --> 00:03:58.950
And then what I wanna do here, is like
I said, we have some inside of the CMS,

67
00:03:58.950 --> 00:04:02.180
and then we have some
inside of the file system.

68
00:04:02.180 --> 00:04:03.990
So let's do the CMS first.

69
00:04:03.990 --> 00:04:06.230
I'm already importing it up top.

70
00:04:06.230 --> 00:04:10.990
I imported mine as posts from CMS,
so we don't confuse the two.

71
00:04:10.990 --> 00:04:12.230
So I'm gonna do that.

72
00:04:12.230 --> 00:04:16.480
So I'm gonna get the post from the CMS
here, it says return some props.

73
00:04:16.480 --> 00:04:19.910
And it looks like they need to
be in an array called post.

74
00:04:19.910 --> 00:04:21.819
So I'll just put post here.

75
00:04:21.819 --> 00:04:24.540
And then we need to actually
go make these posts here.

76
00:04:24.540 --> 00:04:29.852
So, the first thing we need to do
is if we look at the blog post,

77
00:04:29.852 --> 00:04:36.180
it doesn't matter if it's coming from
the CMS or not, it's just in DX.

78
00:04:36.180 --> 00:04:38.521
So you can see there's
some frontmatter here, and

79
00:04:38.521 --> 00:04:40.650
then there's some actual mark down, right?

80
00:04:40.650 --> 00:04:43.500
And if we go look at the ones on
the filesystem, they're the same thing.

81
00:04:43.500 --> 00:04:47.210
We got some frontmatter and
then some mark down, it's the same thing.

82
00:04:47.210 --> 00:04:50.690
So technically,
they should work the same way.

83
00:04:50.690 --> 00:04:51.840
So that's how we're gonna handle it.

84
00:04:51.840 --> 00:04:57.030
So the first thing we wanna do is we want
to transform the ones from the CMS to

85
00:04:57.030 --> 00:05:03.000
be able to get the actual data from
the frontmatter, we wanna parse that out.

86
00:05:03.000 --> 00:05:08.279
So what we'll do is we'll go ahead and
we'll say, these will be posts from,

87
00:05:08.279 --> 00:05:12.849
well, I guess it's already there,
I'll just call it CMS posts.

88
00:05:14.890 --> 00:05:19.750
And this is gonna eqauls postsFromCMS.map,
we're gonna map over those.

89
00:05:19.750 --> 00:05:20.840
We're gonna get a post.

90
00:05:20.840 --> 00:05:24.606
And then what we're gonna do here
is we're just going to return,

91
00:05:24.606 --> 00:05:27.790
I have a package up here called matter.

92
00:05:27.790 --> 00:05:30.766
So matter takes in a markdown string, and

93
00:05:30.766 --> 00:05:35.890
it will return the content and
then the frontmatter in a JSON object.

94
00:05:35.890 --> 00:05:37.380
So that's what we'll use.

95
00:05:37.380 --> 00:05:43.990
So I'm going to return matter, like this.

96
00:05:43.990 --> 00:05:48.297
And actually, I don't really want
the constant right here, okay.

97
00:05:48.297 --> 00:05:50.585
No, I gotta hit escape,
no, x, there we go.

98
00:05:50.585 --> 00:05:53.145
Okay, I almost hit escape.

99
00:05:53.145 --> 00:05:58.580
[LAUGH] So
I need to just return the matter here.

100
00:05:58.580 --> 00:06:02.537
So I'll just say data,
and then matter like this.

101
00:06:02.537 --> 00:06:06.696
And then what I can do is I
can pass in the posts, or

102
00:06:06.696 --> 00:06:09.957
I think this is postCMS.published.

103
00:06:09.957 --> 00:06:11.396
Is that published?

104
00:06:11.396 --> 00:06:15.760
Here we go, yeah, so
we look at the publish ones.

105
00:06:15.760 --> 00:06:18.371
Then I'm gonna get the post type scripts
written out, but it's all right.

106
00:06:18.371 --> 00:06:22.029
And then I want to pass in the post here,
this is going to give us a data,

107
00:06:22.029 --> 00:06:22.660
like that.

108
00:06:25.970 --> 00:06:29.590
Yeah, what's the return value obviously,
and then I'm just gonna return the data.

109
00:06:30.870 --> 00:06:33.600
So this is gonna return a JSON object for
this,

110
00:06:33.600 --> 00:06:36.580
it's basically alternatives to an object.

111
00:06:36.580 --> 00:06:40.598
So we'll have a title, a publishedOn,
an author summary, slug, same thing for

112
00:06:40.598 --> 00:06:42.150
the content.

113
00:06:42.150 --> 00:06:45.370
It's the same thing, title,
summary, slug, all that stuff.

114
00:06:45.370 --> 00:06:46.860
So we got that for the CMS post.

115
00:06:46.860 --> 00:06:49.932
We can do the same thing for
the filesystem post, all right?

116
00:06:49.932 --> 00:06:53.199
So the first thing we need to do is well,

117
00:06:53.199 --> 00:06:57.260
how do you read the filesystem and
node, right?

118
00:06:58.580 --> 00:06:59.408
Anyone know how to do that, right?

119
00:06:59.408 --> 00:07:02.925
You use the filesystem
packages built into node,

120
00:07:02.925 --> 00:07:05.780
but wait, we're in a react component.

121
00:07:06.910 --> 00:07:08.350
How are we importing?

122
00:07:08.350 --> 00:07:12.735
If you try to import this right now, and
create react app, tell me what happens,

123
00:07:12.735 --> 00:07:13.520
[LAUGH] right?

124
00:07:13.520 --> 00:07:15.470
It's not gonna be good, right?

125
00:07:15.470 --> 00:07:21.509
We're actually importing node stuff
inside of a client's react file,

126
00:07:21.509 --> 00:07:25.430
and I think that part can be confusing.

127
00:07:25.430 --> 00:07:30.725
The reason this works and the reason
that's magical is because next.js

128
00:07:30.725 --> 00:07:37.080
actually removes all the server side code
that's used and the server side functions.

129
00:07:37.080 --> 00:07:38.748
They don't actually get
bundled to the browser.

130
00:07:38.748 --> 00:07:42.230
They get executed on the server, but
they don't get bundled to the browser.

131
00:07:42.230 --> 00:07:47.285
So we can import node only code in here,
server side code,

132
00:07:47.285 --> 00:07:53.490
and be rest assured that it's still
gonna work in the browser, right?

133
00:07:53.490 --> 00:07:56.704
You can't use a filesystem in the browser,
you can't use path in a browser.

134
00:07:56.704 --> 00:08:00.591
But we can use it in a page index.js as
long as it's going to be used inside of

135
00:08:00.591 --> 00:08:01.658
a git static props.

136
00:08:01.658 --> 00:08:04.100
So that's what we're going to do.

137
00:08:04.100 --> 00:08:09.427
So let's get the directory so
we'll say post directory

138
00:08:09.427 --> 00:08:14.879
is going to equal fs.read,
lets do readerSync I guess.

139
00:08:14.879 --> 00:08:19.804
And we'll say process.cwd,
because we're in node,

140
00:08:19.804 --> 00:08:22.538
we can do process, all right?

141
00:08:22.538 --> 00:08:25.316
So we'll do that, and
then we'll pass in posts,

142
00:08:25.316 --> 00:08:28.834
because I'm pretty sure that's
where these are, all right?

143
00:08:28.834 --> 00:08:30.609
So we got post, that's the directory.

144
00:08:30.609 --> 00:08:33.310
So then what we want to do,
what was this thing.

145
00:08:36.020 --> 00:08:42.321
Okay, I think I just need to do,
let's make a path first.

146
00:08:42.321 --> 00:08:46.643
So let's make a posts path and
we'll do a path.join or actually,

147
00:08:46.643 --> 00:08:48.274
maybe a path.resolve.

148
00:08:48.274 --> 00:08:52.906
Let's do path.join.

149
00:08:52.906 --> 00:08:55.566
We'll do path.join and
we'll say process.cwd like this.

150
00:08:55.566 --> 00:09:01.370
And then we'll say posts like that.

151
00:09:01.370 --> 00:09:03.300
And then what we can do is we
can just pass this in here.

152
00:09:07.300 --> 00:09:10.200
Like that, posts path.

153
00:09:10.200 --> 00:09:11.450
There we go.

154
00:09:11.450 --> 00:09:13.730
So we'll read this,
we'll get the directory.

155
00:09:13.730 --> 00:09:20.474
And then what we want to do is we want
to loop over each thing here, right?

156
00:09:20.474 --> 00:09:22.961
We want to basically go and

157
00:09:22.961 --> 00:09:29.750
get every single file inside of
the directory, so like this.

158
00:09:29.750 --> 00:09:32.750
So like what I have here,
if you're following along here,

159
00:09:32.750 --> 00:09:35.930
you can see we're just gonna
loop over the file names, right?

160
00:09:35.930 --> 00:09:38.830
Because this is gonna give us
back an array of file names.

161
00:09:38.830 --> 00:09:40.150
So we just wanna loop over that.

162
00:09:40.150 --> 00:09:42.750
So that's what we're gonna do.

163
00:09:42.750 --> 00:09:43.736
Let me go back here.

164
00:09:43.736 --> 00:09:46.653
So we're gonna say, actually,
I'll probably just keep it consistent,

165
00:09:46.653 --> 00:09:47.780
I'll call this filenames.

166
00:09:49.060 --> 00:09:54.840
And then I'll just say this
will be filePosts, I guess.

167
00:09:54.840 --> 00:10:02.190
I will say filenames.map,
we'll get the name here.

168
00:10:03.240 --> 00:10:07.742
And then we actually
need to read the file, so

169
00:10:07.742 --> 00:10:11.190
we'll say file = fs.readFile.

170
00:10:11.190 --> 00:10:15.910
And then what we can do is we
can pass in the name like that.

171
00:10:15.910 --> 00:10:20.440
So we get the name, and
then we can do etf, e for the encoding.

172
00:10:20.440 --> 00:10:23.100
And we'll do readFileSync actually.

173
00:10:23.100 --> 00:10:26.748
So then we'll do readFileSync here,
why is this thing freaking out?

174
00:10:26.748 --> 00:10:28.140
I guess it wants me to do return.

175
00:10:28.140 --> 00:10:29.280
So then we'll get the file here.

176
00:10:29.280 --> 00:10:32.691
And now that we have the file, we're
pretty much in the same spot where we were

177
00:10:32.691 --> 00:10:35.970
up here, where we have a string,
we can pass it to matter.

178
00:10:35.970 --> 00:10:38.550
That'll give us back some data,
and so we'll do that.

179
00:10:38.550 --> 00:10:42.941
So we'll get the data here, oops.

180
00:10:42.941 --> 00:10:43.600
It came back up.

181
00:10:47.254 --> 00:10:49.345
There we go, get some data here.

182
00:10:49.345 --> 00:10:54.590
And, wait, why can't I type now?

183
00:10:55.690 --> 00:10:56.890
There we go, okay.

184
00:10:58.180 --> 00:11:04.013
And we'll say matter and we'll pass in
the file that'll give us the data and

185
00:11:04.013 --> 00:11:07.580
it will just return the data,
just like that.

186
00:11:07.580 --> 00:11:11.640
Everybody following me so far?

187
00:11:11.640 --> 00:11:15.850
So we got the post from our CMS,
we converted its frontmatter to objects.

188
00:11:15.850 --> 00:11:20.360
We got the post from the filesystem,
we converted those to objects.

189
00:11:20.360 --> 00:11:25.170
So now we have two arrays
of similar looking things.

190
00:11:25.170 --> 00:11:29.143
And we have this posting
that's supposed to be here, so

191
00:11:29.143 --> 00:11:34.636
then we'll just come down here and
we'll say const posts equals some array,

192
00:11:34.636 --> 00:11:37.341
I'm gonna spread over my cmsPosts and

193
00:11:37.341 --> 00:11:42.500
then I'm gonna spread over my file post,
filePosts, there we go.

194
00:11:42.500 --> 00:11:43.505
So now I got all those posts.

195
00:11:43.505 --> 00:11:46.253
And then I can just pass
them down like that, right,

196
00:11:46.253 --> 00:11:48.290
I need to add the actual full path.

197
00:11:48.290 --> 00:11:52.741
So let's get the fullPath of

198
00:11:52.741 --> 00:11:58.120
path.join(process.cwd) and

199
00:11:58.120 --> 00:12:04.985
then we want to get the,
what was it, post?

200
00:12:07.645 --> 00:12:08.188
Oops.

201
00:12:10.493 --> 00:12:12.298
And then we want to get the name,
like that.

202
00:12:12.298 --> 00:12:17.650
And then we can put that in there,
fullPath.

203
00:12:18.754 --> 00:12:21.600
I put post, it posts,
there we go, all right.

204
00:12:24.470 --> 00:12:25.480
I get it wrong all the time.

205
00:12:25.480 --> 00:12:30.114
Okay, and then now this one is saying,
basically, this is freaking out.

206
00:12:30.114 --> 00:12:33.386
Let me see, post props must be
returned as a plain object.

207
00:12:33.386 --> 00:12:37.022
Let's see, yeah, I guess I'll just
put an array here, obviously,

208
00:12:37.022 --> 00:12:40.020
that needs to be like posts, like that.

209
00:12:40.020 --> 00:12:40.791
So let's do that.

210
00:12:40.791 --> 00:12:43.530
And then, boom, now we got some posts.

211
00:12:43.530 --> 00:12:46.795
So you can see here,
if we go look at the content,

212
00:12:46.795 --> 00:12:51.270
I can tell you cuz I built this,
these two are gonna be from the CMS.

213
00:12:51.270 --> 00:12:53.960
And then these next three
are actually from the filesystem.

214
00:12:53.960 --> 00:12:58.949
So, we can go confirm, if I go look at
the CMS here, I have one that starts with,

215
00:12:58.949 --> 00:13:03.717
I'm looking at the published ones,
it says we're hiring as the title, and

216
00:13:03.717 --> 00:13:07.920
another one that says,
why you should write down everything.

217
00:13:07.920 --> 00:13:12.174
So, here's where hiring,
why you should write down everything,

218
00:13:12.174 --> 00:13:16.740
and then the rest of the three or
four, come from the filesystem, here.

219
00:13:16.740 --> 00:13:23.435
So again, next.js doesn't not care
where you pull this from, right?

220
00:13:23.435 --> 00:13:27.305
I pull something from a file system,
I pulled another one from our fake CMS,

221
00:13:27.305 --> 00:13:29.678
you can pull something
from an API somewhere.

222
00:13:29.678 --> 00:13:33.103
Wherever you want, you can totally do it,
this is an async function,

223
00:13:33.103 --> 00:13:35.245
you can do whatever you want.

224
00:13:35.245 --> 00:13:38.897
And eventually I'm going to show you how
we can actually access the database and

225
00:13:38.897 --> 00:13:41.965
one of these functions which is
really crazy if you think about it.

