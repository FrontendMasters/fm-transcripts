WEBVTT

1
00:00:00.350 --> 00:00:04.246
Then now we're gonna be
headed on to the next thing.

2
00:00:04.246 --> 00:00:08.555
The other part that everyone
was really asking me about,

3
00:00:08.555 --> 00:00:11.440
I had a lot of people ask me about auth.

4
00:00:11.440 --> 00:00:14.842
I think it's probably the one
number one requested thing,

5
00:00:14.842 --> 00:00:18.490
with next is like of,
because it's such a triply framework.

6
00:00:18.490 --> 00:00:23.278
It's like am I server side and
my client side, and

7
00:00:23.278 --> 00:00:26.366
my build time, and my runtime.

8
00:00:26.366 --> 00:00:29.066
It's really hard to figure out where
you are, and then try to figure out

9
00:00:29.066 --> 00:00:31.420
where the author goes in one of
those places is even trickier.

10
00:00:31.420 --> 00:00:34.831
So I get it, so
I'm gonna do my best to describe,

11
00:00:34.831 --> 00:00:39.679
how I handle off with next as at least
one of the ways my preferred way.

12
00:00:39.679 --> 00:00:44.294
And I'll talk about all the different
ways but, this one's gonna be a little

13
00:00:44.294 --> 00:00:48.070
all over the place,
because all kind of touches everywhere.

14
00:00:48.070 --> 00:00:53.176
Okay, so if we look at our app now,
the sign-out experience is pretty legit.

15
00:00:53.176 --> 00:00:57.935
I mean, if I wasn't mistaken, I would
think this was like, I don't know a 10

16
00:00:57.935 --> 00:01:03.510
million Ar 20 million Ar SAS company just
by looking at the landing page here.

17
00:01:03.510 --> 00:01:07.630
So it's looking pretty good,
we got our blog, it's all good.

18
00:01:07.630 --> 00:01:09.851
Now, we actually go to the product,
and we,

19
00:01:09.851 --> 00:01:13.640
we actually got to show this to
our VCs to get that funding.

20
00:01:13.640 --> 00:01:16.850
This has to work, we wanna be able to sign
in right now, it doesn't do anything.

21
00:01:16.850 --> 00:01:20.690
So the sign-out experience is done, we're
gonna move into the sign in experience.

22
00:01:20.690 --> 00:01:25.920
We're gonna get this app working, so
the first part is handling authentication.

23
00:01:25.920 --> 00:01:29.660
So let's do that, the way I like to
handle authentication is with JWTs.

24
00:01:29.660 --> 00:01:33.610
If you don't know what a JWTs,
it stands for a JSON web token.

25
00:01:33.610 --> 00:01:38.883
It's basically just a serialized
Jason is an encrypted

26
00:01:38.883 --> 00:01:42.930
serialized JSON object, that is used to.

27
00:01:44.330 --> 00:01:49.560
Identify and authorize you to access
some type of endpoint somewhere.

28
00:01:49.560 --> 00:01:54.110
That's basically the difference between
this, and a session is a session is

29
00:01:54.110 --> 00:01:58.570
something that's stored on the server in,
a cache, or a database.

30
00:01:58.570 --> 00:02:03.640
And that server keeps track of who is
logged in, and what they have access to.

31
00:02:03.640 --> 00:02:06.507
Whereas the govt is stored on the client,
and

32
00:02:06.507 --> 00:02:11.950
is sent every single request because
the server doesn't remember who you are.

33
00:02:11.950 --> 00:02:14.576
Every single request has to
be checked every single time,

34
00:02:14.576 --> 00:02:17.320
it doesn't associate a given
request with a given session.

35
00:02:18.640 --> 00:02:24.062
So we're going to be doing JW T's, but
also kind of using them as sessions,

36
00:02:24.062 --> 00:02:27.706
but just not stored in
the database as sessions, so

37
00:02:27.706 --> 00:02:30.930
you'll kind of see a little bit.

38
00:02:30.930 --> 00:02:34.240
So a couple things we
need to do in our app,

39
00:02:34.240 --> 00:02:38.700
is we need to allow people to
be able to create accounts.

40
00:02:38.700 --> 00:02:42.950
All right, we want people to be able to
make an account, that's the first thing.

41
00:02:42.950 --> 00:02:44.870
The second thing we want them
to be able to do is sign into,

42
00:02:44.870 --> 00:02:46.000
that account once they have one.

43
00:02:46.000 --> 00:02:50.101
And then we need to protect
the pages to our app, so

44
00:02:50.101 --> 00:02:55.210
if we go look at our URLs here,
we have a pages slash app.

45
00:02:55.210 --> 00:02:58.193
And we got this crazy looking file here,
that is not a typo,

46
00:02:58.193 --> 00:03:01.130
that is a file if you've never
seen that before next year.

47
00:03:01.130 --> 00:03:04.224
Yes, that's called an optional
catch-all row, and

48
00:03:04.224 --> 00:03:06.930
I'll talk about that a little bit.

49
00:03:06.930 --> 00:03:09.740
So we want to lock that down,
because that that is our app.

50
00:03:09.740 --> 00:03:12.812
That's the sign-in experience,
it's just one page, and this is again,

51
00:03:12.812 --> 00:03:14.830
this is where next year's
gets really powerful.

52
00:03:14.830 --> 00:03:19.480
It's just one page but it's actually like,
three pages and one page,

53
00:03:19.480 --> 00:03:21.350
I just handle it in one page.

54
00:03:21.350 --> 00:03:24.557
Then we need to lock down any database
access that we haven't done yet but

55
00:03:24.557 --> 00:03:25.090
we will do.

56
00:03:26.710 --> 00:03:30.442
Okay, so, we're gonna be using a package
called NextAuth, if you go look at it,

57
00:03:30.442 --> 00:03:32.940
they got a nice little landing page here.

58
00:03:32.940 --> 00:03:36.990
It has recently been upgraded,
which is why I'm recommending it now.

59
00:03:36.990 --> 00:03:40.515
A while ago,
it was just really kind of fell off, but

60
00:03:40.515 --> 00:03:43.410
the creator of it got some new motivation.

61
00:03:43.410 --> 00:03:45.614
Maybe he got some funding, I don't know,

62
00:03:45.614 --> 00:03:48.010
maybe because next.js
is doing really well.

63
00:03:48.010 --> 00:03:52.101
But NextAuth is one of
the best if not the only way

64
00:03:52.101 --> 00:03:56.000
to have a package kind of handled all for
you.

65
00:03:56.000 --> 00:03:58.214
Obviously, you could set this up yourself,
but

66
00:03:58.214 --> 00:04:00.800
we'd be here forever if I
had to set it up myself.

67
00:04:00.800 --> 00:04:05.990
So we're gonna use this package to get
things going a little faster, all right.

68
00:04:05.990 --> 00:04:13.420
So to get things started, we need
to configure our next off instance.

69
00:04:13.420 --> 00:04:18.930
So the way we can do that, is we're gonna
create a new API route at /api/auth.

70
00:04:18.930 --> 00:04:25.620
With a catch-all route of next auth
just like that, right, so, let's do it.

71
00:04:25.620 --> 00:04:30.643
So I'm gonna go to my code,
go to API, make a new folder,

72
00:04:30.643 --> 00:04:34.517
call it off,
make another file in here, and

73
00:04:34.517 --> 00:04:39.690
we're gonna call it data dot next,
and I'll do that.

74
00:04:39.690 --> 00:04:44.382
Yes, okay, so
this is creating a catch-all route,

75
00:04:44.382 --> 00:04:50.350
this basically means any request
to slash API slash auth.

76
00:04:50.350 --> 00:04:53.342
Slash any, slash thing, slash after,

77
00:04:53.342 --> 00:04:59.350
slash auth is going to hit this
route right, that's what that means.

78
00:04:59.350 --> 00:05:01.150
That's what this catch all means.

79
00:05:01.150 --> 00:05:04.768
Optional catch all,
which is what this looks like,

80
00:05:04.768 --> 00:05:08.058
is the same as this except for
it's inclusive,

81
00:05:08.058 --> 00:05:13.780
as in it will also include any requests
to just like the index as well.

82
00:05:13.780 --> 00:05:18.204
That's all it is, it includes the index,
whereas this one doesn't, okay, so

83
00:05:18.204 --> 00:05:19.150
we got that.

84
00:05:19.150 --> 00:05:23.943
And then from there, we're just
going to import a few things, so

85
00:05:23.943 --> 00:05:27.371
we're gonna import something from next.

86
00:05:27.371 --> 00:05:32.214
I wanna say I actually lose a call, there
we go, copy those to save some time, so,

87
00:05:32.214 --> 00:05:35.290
we're gonna import these things.

88
00:05:35.290 --> 00:05:38.410
Basically, the two things here is
the NextAuth is the configuration thing,

89
00:05:38.410 --> 00:05:41.740
that we're gonna use to actually
configure our authentication.

90
00:05:41.740 --> 00:05:46.436
And Providers is a utility to allow us
to add different types of providers, for

91
00:05:46.436 --> 00:05:48.520
our authentication strategy.

92
00:05:48.520 --> 00:05:53.994
Right now we're only gonna be
authorizing with GitHub, but you can do,

93
00:05:53.994 --> 00:05:59.390
I mean, if you go look at their docs,
they have so many providers here.

94
00:05:59.390 --> 00:06:04.075
Let me see if I can figure out
here they go, yeah, there you go,

95
00:06:04.075 --> 00:06:05.650
they got a lot of them.

96
00:06:05.650 --> 00:06:08.241
You can log in with Apple,
if you want to LinkedIn,

97
00:06:08.241 --> 00:06:11.910
you will log in with your
LinkedIn account, who does that?

98
00:06:11.910 --> 00:06:15.200
But you can do that, so yeah,
they got all this stuff.

99
00:06:15.200 --> 00:06:20.795
So what we're gonna do is,
we're going to export default and

100
00:06:20.795 --> 00:06:26.660
it's gonna be a function here,
so requests response.

101
00:06:26.660 --> 00:06:29.429
And this is just going
to use the next off,

102
00:06:29.429 --> 00:06:33.640
l wanna say it's new NextAuth maybe,
is it new next It's not.

103
00:06:36.240 --> 00:06:40.472
No, it's not, you don't need to
capitalize it, I don't know, anyway,

104
00:06:40.472 --> 00:06:41.870
so request response.

105
00:06:41.870 --> 00:06:47.052
And then I believe that next thing here
is going to be, let's see TypeScript,

106
00:06:47.052 --> 00:06:51.700
no, okay, the next thing is going to be,
yeah, the object as well.

107
00:06:51.700 --> 00:06:54.250
Okay, so then we're gonna
configure this object here, and

108
00:06:54.250 --> 00:06:56.310
this is where we're going
to clear everything.

109
00:06:56.310 --> 00:07:00.733
So the first thing I wanna do is, I wanna
put sessions, and I wanna turn by default,

110
00:07:00.733 --> 00:07:02.710
it's gonna use database sessions.

111
00:07:02.710 --> 00:07:07.460
I don't wanna do that I wanna use a DBT
say session data of a teacher like that.

112
00:07:07.460 --> 00:07:11.535
That's going to give us access to data,
etc, so that's the first thing,

113
00:07:11.535 --> 00:07:14.460
actually, it's better if I
just read them out here.

114
00:07:14.460 --> 00:07:19.374
He's already have them, labeled, so
we're gonna put the JW T's there,

115
00:07:19.374 --> 00:07:24.310
the next thing we're gonna do is we're
going to add a secret to our data t.

116
00:07:24.310 --> 00:07:29.136
So if you don't know how JW T's work,
basically, in order to encrypt a JW T,

117
00:07:29.136 --> 00:07:31.470
we need some type of secret.

118
00:07:31.470 --> 00:07:33.271
It's like the recipe for the encryption,

119
00:07:33.271 --> 00:07:35.810
you can put whatever you
want in a string value.

120
00:07:35.810 --> 00:07:39.263
Whatever you want, don't worry, I'm gonna
go over these environment variables, and

121
00:07:39.263 --> 00:07:41.890
how to set them, but
you could just put them here.

122
00:07:41.890 --> 00:07:46.820
So you can put any value you want, but
just put the process end jadibooti secret

123
00:07:46.820 --> 00:07:51.100
and we'll configure all this
stuff later in an environment.

124
00:07:51.100 --> 00:07:55.378
So this is saying we want to use AWT,
this is saying that JT has the secret,

125
00:07:55.378 --> 00:07:59.060
next thing is we're going to
do is the providers here.

126
00:07:59.060 --> 00:08:04.252
So if we go to these providers,
like I said, it's an array of whatever

127
00:08:04.252 --> 00:08:08.990
providers you wanna add,
we're only adding to GitHub one.

128
00:08:08.990 --> 00:08:12.432
But if I just hopefully this
thing has autocomplete on it,

129
00:08:12.432 --> 00:08:17.290
I don't know why it doesn't, I see
providers dot Google, they have providers.

130
00:08:17.290 --> 00:08:20.670
I mean I showed you a list of them,
they have them all here, providers.email.

131
00:08:20.670 --> 00:08:23.592
So if you want email password,
they even have password list,

132
00:08:23.592 --> 00:08:26.640
if you like password list sign up
which I think is pretty smooth.

133
00:08:26.640 --> 00:08:31.140
I know Verse use password list sign up,
It's really nice, so you can add that too.

134
00:08:31.140 --> 00:08:32.923
They kinda handle that all for you, so

135
00:08:32.923 --> 00:08:36.790
you got that, a function of functional
component, which is basically a render.

136
00:08:36.790 --> 00:08:38.522
It's just a big render,
we can't really want to come in here and

137
00:08:38.522 --> 00:08:40.270
block the render loop with an if
statement to do stuff like that.

138
00:08:40.270 --> 00:08:45.166
So we probably want to do a use effect,

139
00:08:45.166 --> 00:08:49.457
and I'm going to say use effect.

140
00:08:49.457 --> 00:08:50.403
And then what I want to do
is I want to get the router,

141
00:08:50.403 --> 00:08:51.700
so I'm going to say give me the router.

142
00:08:51.700 --> 00:08:56.254
Based off your database string, what type
of database you're connecting to, and

143
00:08:56.254 --> 00:08:58.996
it uses something called
type ORM underneath it.

144
00:08:58.996 --> 00:09:03.710
Which is like a universal ORM to
facilitate the connection, and,

145
00:09:03.710 --> 00:09:08.980
management of your models between
your application and that database.

146
00:09:08.980 --> 00:09:13.025
So we're using Mongo, this is gonna be
a Mongo URL that you're gonna create,

147
00:09:13.025 --> 00:09:14.630
it'll just detect it for you.

148
00:09:14.630 --> 00:09:17.422
You don't have to tell it,
it's pretty, pretty intuitive,

149
00:09:17.422 --> 00:09:19.910
what it's gonna do is gonna
create some models for you.

150
00:09:19.910 --> 00:09:23.462
In fact, you can probably look at the docs
and say the exact models are gonna make

151
00:09:23.462 --> 00:09:26.343
but I know for sure they're gonna
create the user model for you.

152
00:09:26.343 --> 00:09:30.070
That's gonna have like a user's email,
you know, their provider ID.

153
00:09:30.070 --> 00:09:33.605
So in this case, like a GitHub ID, or
something like that, it'll have their name

154
00:09:33.605 --> 00:09:37.610
It'll have an avatar, it'll have all
that stuff for the user collection.

155
00:09:37.610 --> 00:09:40.960
It'll create an account collection,
or table for using the sequel.

156
00:09:40.960 --> 00:09:43.410
And that's gonna have everything
associated with that,

157
00:09:43.410 --> 00:09:45.210
an account that associated with the user.

158
00:09:45.210 --> 00:09:48.560
So because I might have the same
user login with GitHub, and

159
00:09:48.560 --> 00:09:52.540
they also log in with Google,
they also log in with Twitter.

160
00:09:52.540 --> 00:09:55.800
They also log in with LinkedIn, that's the
same user, so those are multiple accounts.

161
00:09:55.800 --> 00:09:58.725
So it'll create that collection for
you, and

162
00:09:58.725 --> 00:10:01.200
I think the last one might be sessions.

163
00:10:01.200 --> 00:10:04.790
If you have sessions, there's probably no
there's only two we really care about.

164
00:10:04.790 --> 00:10:06.802
If you don't like those,
if you wanna change them,

165
00:10:06.802 --> 00:10:09.950
they have options to override those,
and change those using type.

166
00:10:09.950 --> 00:10:12.956
Or I am which is actually really
easy to use, you can look it up, and

167
00:10:12.956 --> 00:10:14.430
learning about an hour or less.

