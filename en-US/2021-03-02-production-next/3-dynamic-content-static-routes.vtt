WEBVTT

1
00:00:00.210 --> 00:00:01.500
More about the tech stack.

2
00:00:01.500 --> 00:00:03.769
Like I said, reason nextjs 10.

3
00:00:03.769 --> 00:00:05.316
We're using node js 10 plus.

4
00:00:05.316 --> 00:00:08.785
So if you don't have 10 plus,
just if you're not using nvm or

5
00:00:08.785 --> 00:00:12.452
into manage your node versions,
I highly recommend doing that and

6
00:00:12.452 --> 00:00:14.560
making sure you're on at least 10.

7
00:00:14.560 --> 00:00:17.010
I think this might work on eight.

8
00:00:17.010 --> 00:00:19.570
But 10 plus,
I think is where you wanna go.

9
00:00:19.570 --> 00:00:25.437
I'm pretty sure I'm on 12, so yeah,
we also are going to use the MongoDB.

10
00:00:25.437 --> 00:00:25.937
Hold up.

11
00:00:25.937 --> 00:00:28.416
Don't worry, if you don't have
MongoDB on your computer,

12
00:00:28.416 --> 00:00:29.690
you don't have to install it.

13
00:00:29.690 --> 00:00:33.080
I'm gonna show you how to
use a hosted solution.

14
00:00:33.080 --> 00:00:36.353
But if you do have it on your computer,
it might save you some time.

15
00:00:36.353 --> 00:00:39.180
But when we get to deployment,
you'll have to use a hosted one anyway.

16
00:00:39.180 --> 00:00:42.863
So there's no avoiding it unless
you just don't wanna walk through

17
00:00:42.863 --> 00:00:44.035
the deploying part.

18
00:00:44.035 --> 00:00:47.918
Which I get that, who wants to set up
environment variables where I get it?

19
00:00:47.918 --> 00:00:52.690
But yeah, that's basically
what we're gonna be doing.

20
00:00:52.690 --> 00:00:55.700
And that's pretty much it.

21
00:00:55.700 --> 00:00:58.323
I mentioned in here, like I said,
we're not gonna be doing the UI stuff.

22
00:00:58.323 --> 00:01:00.912
If you wanna intro to react and
how to do all that stuff,

23
00:01:00.912 --> 00:01:03.120
Brian who's a really
great instructor here.

24
00:01:03.120 --> 00:01:04.160
A friend of masters and

25
00:01:04.160 --> 00:01:07.844
works at Microsoft has a course on intro
to react that covers a lot of that stuff.

26
00:01:07.844 --> 00:01:11.290
We will not be covering JSX and
react in this course.

27
00:01:11.290 --> 00:01:12.710
We're just gonna breeze through that.

28
00:01:12.710 --> 00:01:14.820
We're gonna focus on next JS and
production.

29
00:01:14.820 --> 00:01:18.720
So if you're here to learn react,
you should go look at this one.

30
00:01:18.720 --> 00:01:20.250
But hey, stay sharp.

31
00:01:20.250 --> 00:01:20.930
Try to follow along.

32
00:01:20.930 --> 00:01:22.910
If you can't, you might learn some stuff.

33
00:01:22.910 --> 00:01:24.220
Okay, cool.

34
00:01:24.220 --> 00:01:28.530
Let's move on to our real first lesson.

35
00:01:28.530 --> 00:01:32.306
And then from there we'll
have a little break and

36
00:01:32.306 --> 00:01:35.610
kind of soak on what we just learned.

37
00:01:35.610 --> 00:01:40.023
So the first thing I wanna do is kinda
talk about something that I'm really

38
00:01:40.023 --> 00:01:42.690
passionate about and slightly biased.

39
00:01:42.690 --> 00:01:47.430
Because I'm the CEO of a company
that basically solves this problem.

40
00:01:47.430 --> 00:01:49.391
I wanna talk about dynamic content.

41
00:01:49.391 --> 00:01:54.514
Okay, so I wanna talk about how content is
data and I felt it was really important

42
00:01:54.514 --> 00:01:59.332
to make a separate page just about this
because next as and pretty much every

43
00:01:59.332 --> 00:02:03.790
server side render framework,
it's kind of built on this concept.

44
00:02:03.790 --> 00:02:06.002
And if you don't really buy
into this concept, it's,

45
00:02:06.002 --> 00:02:09.200
I think you're missing half the value
of what these frameworks offer you.

46
00:02:09.200 --> 00:02:12.800
So just buying into this concept
really just changes how you think.

47
00:02:12.800 --> 00:02:15.740
And it changes what you think is possible.

48
00:02:15.740 --> 00:02:16.662
And apps that you're making,

49
00:02:16.662 --> 00:02:19.560
like things that you didn't think were
possible are not going to be possible.

50
00:02:19.560 --> 00:02:22.540
Okay, so I want you to think
about how content is data.

51
00:02:22.540 --> 00:02:26.610
So what I'm basically talking about is,
imagine you made a react app.

52
00:02:26.610 --> 00:02:31.680
And I don't know you had at
the time you made the React app.

53
00:02:31.680 --> 00:02:34.508
You guys already had a million users
in a database because you already had

54
00:02:34.508 --> 00:02:37.530
a view app that was serving them
you're switching over to react.

55
00:02:37.530 --> 00:02:42.038
There's there's no way you're not gonna
make a react out that hard codes.

56
00:02:42.038 --> 00:02:44.482
All your millions of users data an app?

57
00:02:44.482 --> 00:02:45.900
I mean, how is that even possible?

58
00:02:45.900 --> 00:02:47.683
Like you can't even do it,
you have to pull it down from API.

59
00:02:47.683 --> 00:02:48.255
It's dynamic.

60
00:02:48.255 --> 00:02:49.712
That's the whole point of an app.

61
00:02:49.712 --> 00:02:52.700
Well, your content should
be thought of the same way.

62
00:02:52.700 --> 00:02:56.110
Right, your content is data.

63
00:02:56.110 --> 00:02:59.850
It just the users that that data belongs
to is actually the users on your team.

64
00:02:59.850 --> 00:03:02.080
Maybe even yourself, but it is data.

65
00:03:02.080 --> 00:03:03.330
It should also be dynamic.

66
00:03:03.330 --> 00:03:04.608
It should never be hard coded.

67
00:03:04.608 --> 00:03:06.900
And I think that's something
that we just overlook.

68
00:03:06.900 --> 00:03:11.446
Because as engineers working on
front end frameworks and JavaScript,

69
00:03:11.446 --> 00:03:16.580
we just haven't had the tools to
actually think about it that way.

70
00:03:16.580 --> 00:03:19.271
We just been forced to hard code strings.

71
00:03:19.271 --> 00:03:22.793
Inside of JSX, I think if you
had to do 18 in or localization,

72
00:03:22.793 --> 00:03:27.379
then maybe you were forced to, like take
it out to like do those translations, but

73
00:03:27.379 --> 00:03:31.707
other than that you almost never took
out like hard coded content in your JSX.

74
00:03:31.707 --> 00:03:32.832
That was it.

75
00:03:32.832 --> 00:03:36.355
That was like as far as you went,
maybe you build your own CMS.

76
00:03:36.355 --> 00:03:40.380
I don't know but you really got to
think about content being dynamic.

77
00:03:40.380 --> 00:03:42.410
The more you can make dynamic in your app.

78
00:03:43.730 --> 00:03:46.913
The especially on the team,
the more the more productive

79
00:03:46.913 --> 00:03:50.570
that everyone's going to be,
the more they're gonna like you.

80
00:03:50.570 --> 00:03:52.890
And the less work that you don't wanna do.

81
00:03:52.890 --> 00:03:54.298
You won't be on the hook for work.

82
00:03:54.298 --> 00:03:58.660
You don't wanna do basically you're right,
you're not going to get a call to come fix

83
00:03:58.660 --> 00:04:02.962
this typo, this punctuation error or move
this here that because you made a dynamic,

84
00:04:02.962 --> 00:04:05.680
so you're really,
just helping a lot of people out.

85
00:04:05.680 --> 00:04:09.986
Making things dynamic isn't gonna replace
your job, pulling a user's profile down

86
00:04:09.986 --> 00:04:14.910
from the database does it replace your job
so you shouldn't make everything dynamic.

87
00:04:14.910 --> 00:04:19.610
So in order to do that there's these
things out there called headless CMS says

88
00:04:19.610 --> 00:04:24.238
we won't be using a headless CMS in
today's course because there's just so

89
00:04:24.238 --> 00:04:25.485
many of those CMSs.

90
00:04:25.485 --> 00:04:27.880
And obviously with me being
a CEO of one of the CMSs.

91
00:04:27.880 --> 00:04:32.010
I just felt like it was just
too biased to put one in there.

92
00:04:32.010 --> 00:04:33.200
Especially if it's mine.

93
00:04:33.200 --> 00:04:36.330
So we won't be actually using one but
I wanted to make sure I modeled the course

94
00:04:36.330 --> 00:04:39.507
in a way that it doesn't really matter if
we're using one or not because the way

95
00:04:39.507 --> 00:04:42.252
that I'm gonna show you how to interact
with the CMS is gonna work for

96
00:04:42.252 --> 00:04:44.410
any CMS that you use doesn't
matter which one it is.

97
00:04:44.410 --> 00:04:45.620
They're all gonna work the same.

98
00:04:45.620 --> 00:04:50.295
So we're gonna be good, but
basically a headless CMS is a CMS that

99
00:04:50.295 --> 00:04:53.786
doesn't really care about
what app you're on.

100
00:04:53.786 --> 00:04:55.930
It doesn't know what app you have.

101
00:04:55.930 --> 00:04:59.541
It just gives you content
either via an API or Git.

102
00:04:59.541 --> 00:05:02.924
That's it and then it has like
a GUI associated with it for

103
00:05:02.924 --> 00:05:04.557
the non technical people.

104
00:05:04.557 --> 00:05:06.140
And that's where they
get to go edit stuff.

105
00:05:06.140 --> 00:05:09.624
You can think of it as like a form, they
get a form or they get to edit content,

106
00:05:09.624 --> 00:05:10.760
they hit a button.

107
00:05:10.760 --> 00:05:12.770
And then you can pull that
content down in your app.

108
00:05:12.770 --> 00:05:13.580
That's it.

109
00:05:13.580 --> 00:05:14.610
It's just data.

110
00:05:14.610 --> 00:05:16.665
It's really just data.

111
00:05:16.665 --> 00:05:18.330
And that's what a headless CMS is.

112
00:05:18.330 --> 00:05:22.760
So we're gonna be working with our own
CMS that we built into our app basically.

113
00:05:22.760 --> 00:05:29.054
And one bold prediction I want to say
here is I think by the end of 2021.

114
00:05:29.054 --> 00:05:32.820
If you, if, when starting an app,
you don't include a CMS.

115
00:05:32.820 --> 00:05:35.845
I think it's going to,
could be considered a bad practice,

116
00:05:35.845 --> 00:05:38.050
because if technology
is like next day yes.

117
00:05:38.050 --> 00:05:43.037
And all these other frameworks start going
further than they are now and making all

118
00:05:43.037 --> 00:05:47.640
these features that make it like obvious
to use a CMS, it's gonna be that.

119
00:05:47.640 --> 00:05:51.050
So, I highly recommend just
getting into that mindset.

120
00:05:51.050 --> 00:05:54.643
Have CMS and frameworks like next.js and
stuff like that.

121
00:05:54.643 --> 00:05:56.184
Any questions?

122
00:05:59.707 --> 00:06:02.480
Nope, okay, all right.

123
00:06:02.480 --> 00:06:06.290
And we'll move on to this one and
after this, we'll take a break.

124
00:06:06.290 --> 00:06:10.860
Okay, so I wanna talk about
static routes and content.

125
00:06:10.860 --> 00:06:14.540
So this is a mouthful, but
we're gonna start [COUGH] And

126
00:06:14.540 --> 00:06:17.424
this first lesson we're going to work on.

127
00:06:17.424 --> 00:06:19.420
[COUGH] Excuse me.

128
00:06:19.420 --> 00:06:20.296
Okay.

129
00:06:20.296 --> 00:06:26.600
We're gonna talk about dynamic content on
a static route for a static page right.

130
00:06:26.600 --> 00:06:28.383
So, three different things.

131
00:06:28.383 --> 00:06:31.600
So just picture that our
content is gonna be dynamic.

132
00:06:31.600 --> 00:06:34.657
The route is static, and
the page is also static.

133
00:06:34.657 --> 00:06:35.780
So that's what we're gonna work on.

134
00:06:35.780 --> 00:06:39.086
So if we go look at our app, we will
only have like one of those pages and

135
00:06:39.086 --> 00:06:42.690
that's kind of gonna be the the sign
up page or I'm sorry, the index page.

136
00:06:42.690 --> 00:06:44.350
We're gonna work on the index page.

137
00:06:44.350 --> 00:06:45.713
Right now this page if we look at it.

138
00:06:45.713 --> 00:06:51.750
It really, I mean, they did a good attempt
of trying to not heart code their content.

139
00:06:51.750 --> 00:06:56.940
They didn't hard code other than her JSX,
they actually passing it down as a prop.

140
00:06:56.940 --> 00:06:59.492
But the prop comes from default props.

141
00:06:59.492 --> 00:07:03.250
So, half step is still hard coded.

142
00:07:03.250 --> 00:07:05.050
It's just not in your JSX.

143
00:07:05.050 --> 00:07:06.120
We don't want this.

144
00:07:06.120 --> 00:07:10.154
We want this content to come from our CMS.

145
00:07:10.154 --> 00:07:12.650
So anyone on our team can edit this.

146
00:07:12.650 --> 00:07:13.550
So that's what we're gonna do.

147
00:07:13.550 --> 00:07:15.521
We're gonna make this content dynamic.

148
00:07:15.521 --> 00:07:20.057
Even though this page is static,
even though this route is static, as in,

149
00:07:20.057 --> 00:07:22.649
there's no parameters in this route, and

150
00:07:22.649 --> 00:07:27.411
dynamic static page as in, it's going
to be rendered statically by next day.

151
00:07:27.411 --> 00:07:29.381
Yes.
And we're not actually doing.

152
00:07:29.381 --> 00:07:32.376
Anything dynamic in here,
there's no hooks to make API calls or

153
00:07:32.376 --> 00:07:34.492
there's no client side, any of that stuff.

154
00:07:34.492 --> 00:07:35.407
It's completely static.

155
00:07:35.407 --> 00:07:37.058
You can serve this from a CDN.

156
00:07:37.058 --> 00:07:39.749
But we still want the content
to be dynamic, right.

157
00:07:39.749 --> 00:07:42.690
And that's where the beauty
of next JS comes in.

158
00:07:42.690 --> 00:07:44.316
So let's start with that.

159
00:07:44.316 --> 00:07:49.305
So we head back over to our
notes here is basically gonna

160
00:07:49.305 --> 00:07:52.780
start with get static props, right.

161
00:07:52.780 --> 00:07:56.969
So if you haven't heard of get static
props, I just talked about it on the,

162
00:07:56.969 --> 00:07:57.710
refresher.

163
00:07:57.710 --> 00:08:02.524
Basically what we're gonna do is
we're just gonna come down here and

164
00:08:02.524 --> 00:08:06.510
we're gonna export a function
called get static props.

165
00:08:09.180 --> 00:08:12.340
Like this good stuff prompts,
if I can type, there we go.

166
00:08:14.880 --> 00:08:16.880
Get rid of that R, cool.

167
00:08:16.880 --> 00:08:21.150
And then what we're gonna do is we're
going to return some data from our CMS.

168
00:08:21.150 --> 00:08:24.308
Like I said, I created like
a little small mini CMS here.

169
00:08:24.308 --> 00:08:25.225
Let's go look at it.

170
00:08:25.225 --> 00:08:28.540
[LAUGH] It's actually very complicated.

171
00:08:28.540 --> 00:08:33.203
It was the hardest part of the entire app
to make this file that spits out JSON.

172
00:08:33.203 --> 00:08:34.250
That's our CMS.

173
00:08:34.250 --> 00:08:36.660
So that's it.

174
00:08:36.660 --> 00:08:38.879
It's just a file that has JSON in it.

175
00:08:38.879 --> 00:08:40.829
And we're gonna use this as our CMS.

176
00:08:40.829 --> 00:08:44.005
And again,
this works exactly like any CMS.

177
00:08:44.005 --> 00:08:45.725
At the end of the day,
you're getting back some JSON.

178
00:08:45.725 --> 00:08:47.575
It doesn't really matter
where it comes from.

179
00:08:47.575 --> 00:08:49.379
And you'll see why
/next.js doesn't care or

180
00:08:49.379 --> 00:08:51.785
actually doesn't even
know where it comes from.

181
00:08:51.785 --> 00:08:53.267
So we'll be using this as our CMS.

182
00:08:53.267 --> 00:08:56.067
So I'm going to import
that at the top here.

183
00:08:57.117 --> 00:09:02.337
So we can import from wanna
say content like that, and

184
00:09:02.337 --> 00:09:07.557
then I wanna get the home
part from content like that.

185
00:09:07.557 --> 00:09:11.620
And then down here,
I wanna return some props.

186
00:09:11.620 --> 00:09:15.452
For and I wanna call it,
what are the props that it's looking for,

187
00:09:15.452 --> 00:09:19.972
it's looking for a prop called content,
so that's what I'm gonna call it and

188
00:09:19.972 --> 00:09:24.448
we'll return content down here and
I'm gonna set that to home.published.

189
00:09:24.448 --> 00:09:28.013
We're gonna do published values from
our CMS for now, we're gonna talk

190
00:09:28.013 --> 00:09:31.469
about drafts later and how you can
look at drafts and things like that.

191
00:09:31.469 --> 00:09:33.150
But for now,
we're just gonna return published.

192
00:09:33.150 --> 00:09:34.429
So I'm gonna save that.

193
00:09:34.429 --> 00:09:42.040
And then now if I go back, I shouldn't see
that really bad tagline and body anymore.

194
00:09:42.040 --> 00:09:44.620
I should see some real
content on our site.

195
00:09:44.620 --> 00:09:46.390
So let's go do that.

196
00:09:46.390 --> 00:09:48.384
Let's refresh this thing.

197
00:09:48.384 --> 00:09:49.193
And then there you go.

198
00:09:49.193 --> 00:09:50.980
We got some nice content on our site.

199
00:09:50.980 --> 00:09:54.342
I mean, obviously, this was pretty
trivial was pulling from a JSON file.

200
00:09:54.342 --> 00:09:58.450
What I want you to understand is,
there's really no difference.

201
00:09:58.450 --> 00:10:00.510
Imagine if this was an async function,
okay?

202
00:10:01.530 --> 00:10:08.787
Imagine this is async and this was a call
to like cms.get like my homepage right.

203
00:10:08.787 --> 00:10:10.850
This works exactly the same.

204
00:10:10.850 --> 00:10:13.443
It's still gonna work exactly the same.

205
00:10:13.443 --> 00:10:17.802
It doesn't matter what CMS you come from,
this still works exactly the same, right.

206
00:10:17.802 --> 00:10:21.517
So like next.js doesn't care where it
comes from inside of git static props.

207
00:10:21.517 --> 00:10:25.690
So that's why I didn't want us to actually
go through and sign up and use the CMS.

208
00:10:25.690 --> 00:10:27.664
We're just gonna use JSON,
it works the same.

