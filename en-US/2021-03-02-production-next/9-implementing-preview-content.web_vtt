WEBVTT

1
00:00:00.000 --> 00:00:04.150
So the first thing we need to do is
let's create our preview functionality.

2
00:00:04.150 --> 00:00:08.530
So we're gonna go into pages,
we're gonna make a new folder called API.

3
00:00:08.530 --> 00:00:11.774
Remember, if you make an API
folder inside index j s,

4
00:00:11.774 --> 00:00:17.120
it's gonna create API routes, very much
the same way that it does page routes.

5
00:00:17.120 --> 00:00:19.870
So we're going make one for API and
then we're going make it one call preview.

6
00:00:21.090 --> 00:00:25.646
Like that.
And what we're gonna do here is we're just

7
00:00:25.646 --> 00:00:30.350
going to exports some
default function here.

8
00:00:30.350 --> 00:00:35.520
That's gonna take a request objects and
a response objects, just like that.

9
00:00:35.520 --> 00:00:40.380
And then I'm just going to type check
this with the next API response.

10
00:00:40.380 --> 00:00:41.860
There we go.

11
00:00:41.860 --> 00:00:46.503
And then all I'm going to do is I'm going

12
00:00:46.503 --> 00:00:51.430
to say rows dot set
preview data like this.

13
00:00:51.430 --> 00:00:52.930
It's a function I'm gonna call it.

14
00:00:52.930 --> 00:00:54.570
Let's pass it in the object.

15
00:00:54.570 --> 00:00:56.330
Now I'm gonna pass into
the object right now.

16
00:00:58.760 --> 00:01:01.803
There is some stuff you can
pass here like the options

17
00:01:01.803 --> 00:01:04.370
object which is like a max age, basically.

18
00:01:04.370 --> 00:01:07.596
So by default the cookie has like,
I forgot what the default TTL or

19
00:01:07.596 --> 00:01:11.730
the time to live on this cookie is but
you can override to be whatever you want.

20
00:01:11.730 --> 00:01:14.030
And we'll talk about the nuances of that.

21
00:01:14.030 --> 00:01:17.970
But basically, how long do you want
this cookie to exist before it expires?.

22
00:01:17.970 --> 00:01:19.720
And you'll see why you want
this cookie to expire.

23
00:01:19.720 --> 00:01:25.566
If it doesn't it's going to lead to
a lot of panic that I found out and

24
00:01:25.566 --> 00:01:27.430
a lot of confusion.

25
00:01:27.430 --> 00:01:29.680
So you really want this cookie to go away.

26
00:01:29.680 --> 00:01:33.338
Otherwise, it's not going to be
a good day for some people, trust me.

27
00:01:33.338 --> 00:01:35.740
[LAUGH] That'll make
more sense in a minute.

28
00:01:35.740 --> 00:01:37.520
So we'll do that.

29
00:01:37.520 --> 00:01:43.209
And then what we want to do is
we want to redirect the user

30
00:01:43.209 --> 00:01:49.520
back to the page that they
wanted to see the preview on.

31
00:01:49.520 --> 00:01:53.480
So in order to do that, we need to know
what page you want to see the preview on.

32
00:01:53.480 --> 00:01:57.540
So we're going to require that you pass
up a parameter on the URL of the route

33
00:01:57.540 --> 00:02:01.780
that you're interested in seeing a preview
on so we can redirect you there.

34
00:02:01.780 --> 00:02:06.378
So we're gonna say rest
redirect to whatever

35
00:02:06.378 --> 00:02:12.090
the request that query,
that let's call it route.

36
00:02:12.090 --> 00:02:14.933
So you've gotta a query string
with a route parameter on it,

37
00:02:14.933 --> 00:02:18.130
set that equal to whatever route
that you want to see the preview on.

38
00:02:18.130 --> 00:02:22.420
And as long as you do a get request here,
will make that happen.

39
00:02:22.420 --> 00:02:26.180
So yeah, make that arrow function.

40
00:02:27.240 --> 00:02:28.690
There we go.

41
00:02:28.690 --> 00:02:29.630
So that's it.

42
00:02:29.630 --> 00:02:34.140
That's literally all you got to
do to make the previous work.

43
00:02:34.140 --> 00:02:38.160
So what I'm gonna do now is
just make sure this works.

44
00:02:38.160 --> 00:02:41.714
It's not gonna do anything yet because we
still got to hook it up to actual function

45
00:02:41.714 --> 00:02:43.990
but let's just make sure it works.

46
00:02:43.990 --> 00:02:48.478
So I'll go here, so I should be able to do

47
00:02:48.478 --> 00:02:53.100
a get request to slash API slash preview.

48
00:02:53.100 --> 00:02:56.855
And then I could do a query
string with a route, like that.

49
00:02:56.855 --> 00:02:59.595
I'm gonna say REL equals the Index page.

50
00:02:59.595 --> 00:03:01.195
So I wanna see your
preview of the Index page.

51
00:03:01.195 --> 00:03:04.945
So if I hit enter,
it's just gonna go back to the next page.

52
00:03:04.945 --> 00:03:09.104
Obviously, we don't have
preview setup here yet,

53
00:03:09.104 --> 00:03:13.355
but we're about to do but
if I go look at I don't know,

54
00:03:13.355 --> 00:03:18.220
maybe some cookies,
memory application, go to cookies.

55
00:03:18.220 --> 00:03:23.260
I should see some, there we go.

56
00:03:23.260 --> 00:03:23.930
Next preview.

57
00:03:23.930 --> 00:03:27.900
So next preview,
which looks like a JJ Beatty was set here.

58
00:03:27.900 --> 00:03:31.700
Alright, so boom, we're in the previous
state now, we're good to go, all right.

59
00:03:31.700 --> 00:03:35.067
Now what I need to do is need to make my
pages aware of the preview I needed to

60
00:03:35.067 --> 00:03:36.710
respect the preview.

61
00:03:36.710 --> 00:03:41.170
This is a very, very easy modification,
especially if you already have a CMS.

62
00:03:41.170 --> 00:03:46.750
To do that, I'm going to go into my home
index page grab this context object here.

63
00:03:46.750 --> 00:03:50.916
Then all I'm gonna do, instead of
returning back to public page by default,

64
00:03:50.916 --> 00:03:54.380
I'm gonna say, well,
let's look at context dot preview.

65
00:03:54.380 --> 00:03:55.620
This is going to be a Boolean.

66
00:03:55.620 --> 00:03:58.160
It's going to be true, the cookie is set,
it's going to be false.

67
00:03:58.160 --> 00:03:59.360
So the cookies not set.

68
00:03:59.360 --> 00:04:00.400
It's that simple.

69
00:04:00.400 --> 00:04:04.380
If we're in preview, then actually
I want to the home dot draft.

70
00:04:04.380 --> 00:04:08.445
You're not,
I want to do the home dot published.

71
00:04:08.445 --> 00:04:10.750
That's it.

72
00:04:10.750 --> 00:04:12.064
Right.
So now if I go back, and

73
00:04:12.064 --> 00:04:15.469
if the cookies still set,
you can actually yeah, you can see, look,

74
00:04:15.469 --> 00:04:17.930
my content just changed automatically.

75
00:04:17.930 --> 00:04:21.241
Because even though I didn't hit
the URL to go to the preview again,

76
00:04:21.241 --> 00:04:23.110
this cookie is still set.

77
00:04:23.110 --> 00:04:26.294
So it automatically showed me my draft
content and you can see right here.

78
00:04:26.294 --> 00:04:29.100
This is not some content that
I want the world to see yet.

79
00:04:29.100 --> 00:04:30.940
This is my draft content.

80
00:04:30.940 --> 00:04:32.060
I want my published content.

81
00:04:32.060 --> 00:04:35.795
So, and this is why I said it might
cause panic that cookie was lasting for

82
00:04:35.795 --> 00:04:37.360
like two days.

83
00:04:37.360 --> 00:04:41.208
And so like initiated a preview, and they
only looked at it for five minutes and

84
00:04:41.208 --> 00:04:42.446
then they went to lunch.

85
00:04:42.446 --> 00:04:46.387
And then they came back and they opened it
back up and they went to the website and

86
00:04:46.387 --> 00:04:47.532
it still showed this.

87
00:04:47.532 --> 00:04:49.220
They will be, they will freak out.

88
00:04:49.220 --> 00:04:52.225
They will think that their
draft content is now published,

89
00:04:52.225 --> 00:04:55.000
because they didn't click
on preview to see this.

90
00:04:55.000 --> 00:04:57.865
But because the cookie is set
your site loaded that up, right,

91
00:04:57.865 --> 00:04:59.280
it would freak them out.

92
00:04:59.280 --> 00:05:00.850
So you want to wait to
be able to clear this.

93
00:05:00.850 --> 00:05:03.958
So this is where I said you might want
to adjust the TTL the time to live, but

94
00:05:03.958 --> 00:05:05.730
even then, it's like a race condition.

95
00:05:05.730 --> 00:05:06.880
Like how long is too long?

96
00:05:06.880 --> 00:05:07.980
How short is too short?

97
00:05:07.980 --> 00:05:10.720
There's really no perfect number
that you can put in there.

98
00:05:10.720 --> 00:05:12.638
I mean you can probably put one second and

99
00:05:12.638 --> 00:05:14.790
that way it literally
only lasts one second.

100
00:05:14.790 --> 00:05:17.210
So as soon as you leave this tab,
it's gone.

101
00:05:17.210 --> 00:05:18.270
I think that might work.

102
00:05:18.270 --> 00:05:22.095
But if you ever wanna be able to share
previews, which I think is a really big

103
00:05:22.095 --> 00:05:25.800
feature that some CMS has started to
implement and maybe you could too.

104
00:05:25.800 --> 00:05:28.927
So where I want to send a link to someone
so they can preview this content and

105
00:05:28.927 --> 00:05:31.460
approve it or not,
then that TTL is not gonna work, right?

106
00:05:31.460 --> 00:05:33.020
You want to think about that.

107
00:05:33.020 --> 00:05:38.090
So, instead,
you just want to clear it explicitly.

108
00:05:38.090 --> 00:05:40.730
So next js allows us to do
that as well pretty easily.

109
00:05:40.730 --> 00:05:44.987
So the way we can do that as you make
another API route here, I'm gonna call

110
00:05:44.987 --> 00:05:49.740
this clear preview that TS and it's pretty
much just gonna do the same thing here.

111
00:05:49.740 --> 00:05:54.790
I'm going to copy that except
of setting the preview

112
00:05:54.790 --> 00:05:58.930
data is going to [COUGH]
Clear preview data.

113
00:05:59.960 --> 00:06:04.727
Right, and it's not gonna redicrect
you anywhere cuz we don't need to I

114
00:06:04.727 --> 00:06:08.087
mean if you wanted a better experience,
sure, but

115
00:06:08.087 --> 00:06:13.290
I'm just gonna say end and
I'm just gonna say preview mode disabled.

116
00:06:13.290 --> 00:06:15.330
That's all I'm gonna do, okay?

117
00:06:15.330 --> 00:06:21.454
So we're gonna do that and
then now if I go to /api/clearpreview

118
00:06:24.094 --> 00:06:26.950
Like that,
you can see boom preview mode is disabled.

119
00:06:28.120 --> 00:06:28.720
So we're good.

120
00:06:28.720 --> 00:06:30.280
So now if I go back to my Index page.

121
00:06:33.030 --> 00:06:36.350
I should be looking at
my published content.

122
00:06:36.350 --> 00:06:37.120
Right.
Pretty legit.

123
00:06:37.120 --> 00:06:38.670
So again,
let's walk through it one more time.

124
00:06:38.670 --> 00:06:42.932
So if i want to see your preview of
this homepage, I can say, do a get

125
00:06:42.932 --> 00:06:47.820
request to slash API slash preview with
the route parameter equals to here.

126
00:06:48.930 --> 00:06:50.880
This will show me a preview.

127
00:06:50.880 --> 00:06:51.790
I'm looking at a preview now.

128
00:06:53.190 --> 00:06:54.630
Now I'm done with this preview.

129
00:06:54.630 --> 00:06:55.680
I think it's.

130
00:06:55.680 --> 00:06:56.340
Good to go.

131
00:06:56.340 --> 00:07:00.150
So I'm gonna do a request
to API / clear preview.

132
00:07:00.150 --> 00:07:02.860
And that's gonna clear it.

133
00:07:02.860 --> 00:07:06.610
So now when I go back,
we're back on to publish.

134
00:07:09.230 --> 00:07:10.182
Any questions on that?

135
00:07:13.088 --> 00:07:16.530
Okay, this is where I said
this feature is meant for CMS.

136
00:07:16.530 --> 00:07:19.770
You see how we had to go in the URL and
do that every time?

137
00:07:19.770 --> 00:07:21.930
You don't want to do that,
that's really gross.

138
00:07:21.930 --> 00:07:26.040
You really want like a GUI that just says
click here to preview this thing, right?

139
00:07:26.040 --> 00:07:29.730
So that's where CMS comes in, because
a CMS is a place that holds your content.

140
00:07:29.730 --> 00:07:33.132
So if you're looking at place where
your content is if someone's in your

141
00:07:33.132 --> 00:07:36.032
teams like editing a markdown field or
whatever, they can say

142
00:07:36.032 --> 00:07:40.130
I want to preview this markdown field on
this blog post and it takes them there.

143
00:07:40.130 --> 00:07:42.952
So that's why I'm saying next
year has built this feature for

144
00:07:42.952 --> 00:07:45.310
CMS is to implement so you could use them.

145
00:07:45.310 --> 00:07:47.360
But there's nothing stopping
you from building your own GUI.

146
00:07:47.360 --> 00:07:52.290
For instance, I could literally
come down here I could just return

147
00:07:52.290 --> 00:07:55.030
them preview as a prop here, right?

148
00:07:55.030 --> 00:07:59.400
I can say okay, ctx.preview,
so now that's a prop.

149
00:07:59.400 --> 00:08:00.800
So that will appear.

150
00:08:00.800 --> 00:08:03.750
I get access to the preview
if preview is true here.

151
00:08:03.750 --> 00:08:06.170
I can like put a whole gooey in here now,
right?

152
00:08:06.170 --> 00:08:08.930
I can, I can do all types of
stuff in here now, right?

153
00:08:08.930 --> 00:08:11.880
And then when we get to authentication,
you can even detect that.

154
00:08:11.880 --> 00:08:13.745
Okay?
Not only does the user have to be logged

155
00:08:13.745 --> 00:08:17.730
in, but their email has to be one of
the emails that exist in our organization.

156
00:08:17.730 --> 00:08:19.590
Then show them the gooey for preview.

157
00:08:19.590 --> 00:08:20.593
Right?
You could do that.

158
00:08:20.593 --> 00:08:23.300
You'll be able to do this you can
kind of build your own thing.

159
00:08:23.300 --> 00:08:26.121
If you're just, if you're not
using a CMS that has previews or

160
00:08:26.121 --> 00:08:29.474
if you're not using a CMS in general,
you could just build your own thing,

161
00:08:29.474 --> 00:08:31.090
which actually is not a lot of work.

162
00:08:32.320 --> 00:08:33.260
Very powerful stuff.

163
00:08:33.260 --> 00:08:39.100
Okay, so we'll do the same thing for
the blog page here.

164
00:08:39.100 --> 00:08:42.470
This one is very much the same
as the one we just did.

165
00:08:42.470 --> 00:08:45.570
The difference is going to be here, right?

166
00:08:45.570 --> 00:08:48.650
So, so doing posts from CMS.

167
00:08:48.650 --> 00:08:50.410
We're gonna say get the context here.

168
00:08:50.410 --> 00:08:57.254
And then we're gonna say, well,
it really just depends on whether or

169
00:08:57.254 --> 00:09:02.010
not this is publishing
ourselves a CTA preview.

170
00:09:02.010 --> 00:09:06.160
If it isn't preview, then I'll do draft.

171
00:09:06.160 --> 00:09:08.790
If not, then I'll do that.

172
00:09:08.790 --> 00:09:09.790
Alright, that's it.

173
00:09:11.880 --> 00:09:14.499
So pretty much the same thing and

174
00:09:14.499 --> 00:09:19.156
then where it gets a little
different is here in the slug.

175
00:09:19.156 --> 00:09:25.800
So in the slug, it's like, okay, well, you
don't actually get access to the context.

176
00:09:25.800 --> 00:09:27.530
There's no context objects and
get static paths.

177
00:09:27.530 --> 00:09:29.660
So we can't check to
see this preview here.

178
00:09:29.660 --> 00:09:36.729
So what that means is, there is absolutely
no way to dine or to generate previews.

179
00:09:37.810 --> 00:09:41.240
At build time, because we don't know
if you're in preview mode or not.

180
00:09:41.240 --> 00:09:44.920
So anything that you want to preview
is not gonna be generated here.

181
00:09:44.920 --> 00:09:49.798
So if you ever want to see it, well,
you basically got to use fallback because

182
00:09:49.798 --> 00:09:53.480
the fallback was false.And
you try to use previews.

183
00:09:53.480 --> 00:09:58.345
&gt;&gt; And because previews can't be generated
here, then if you just create a blog post

184
00:09:58.345 --> 00:10:02.664
with a new slug that doesn't exist on
this built version of the site yet.

185
00:10:02.664 --> 00:10:04.962
Then there's no way you'll be able to,

186
00:10:04.962 --> 00:10:09.810
there's no way you'll ever be able to
preview it because it'll fail here.

187
00:10:09.810 --> 00:10:12.390
And because fallback is false,
that was just four Four.

188
00:10:12.390 --> 00:10:13.890
So you have to put fallback true.

189
00:10:13.890 --> 00:10:16.544
If you want to look at
previews on dynamic pages or

190
00:10:16.544 --> 00:10:19.570
even fall back blocking
either one of those.

191
00:10:19.570 --> 00:10:24.200
That way, I always did a skip here because
it doesn't exist, it wasn't there before.

192
00:10:24.200 --> 00:10:26.125
I need to go a little
straight down here and

193
00:10:26.125 --> 00:10:28.330
then it's pretty much the same thing,
right?

194
00:10:28.330 --> 00:10:30.470
So we're just gonna look at the previous.

195
00:10:30.470 --> 00:10:35.310
We're gonna say params,
we got a preview here, like that.

196
00:10:35.310 --> 00:10:38.848
And it's pretty much the same thing,
I was gonna just actually just, wait,

197
00:10:38.848 --> 00:10:39.580
where's it at?

198
00:10:40.610 --> 00:10:42.972
Go ahead and copy that thing, there we go.

199
00:10:50.899 --> 00:10:52.940
My goodness, what is it doing?

200
00:10:52.940 --> 00:10:53.468
There we go.
And

201
00:10:53.468 --> 00:10:56.420
let's get rid of that context like that.

202
00:10:56.420 --> 00:11:01.980
So yeah, that's pretty much it,
except for the posts.

203
00:11:01.980 --> 00:11:03.380
Not postFromCMS in this file.

204
00:11:03.380 --> 00:11:05.470
Should have kept them consistent.

205
00:11:07.190 --> 00:11:09.740
There you go.

206
00:11:09.740 --> 00:11:13.090
Yeah, that's pretty much it and
now we were able to preview this.

207
00:11:13.090 --> 00:11:14.060
So let's go check it out.

208
00:11:14.060 --> 00:11:17.440
So if I go here, I go to blog.

209
00:11:19.100 --> 00:11:21.280
You can see I got all my
production blocks here.

210
00:11:21.280 --> 00:11:22.310
I'm just on my published blog.

211
00:11:22.310 --> 00:11:24.689
So if I want to see some preview blocks.

212
00:11:24.689 --> 00:11:26.010
Okay, no problem.

213
00:11:26.010 --> 00:11:27.810
I go to API slash preview.

214
00:11:29.030 --> 00:11:32.608
And then what a route parameter equal
to slash blog because that's the,

215
00:11:32.608 --> 00:11:34.970
that's the route that I want to preview.

216
00:11:34.970 --> 00:11:35.600
So I'll do that.

217
00:11:37.520 --> 00:11:41.660
And now you can see it's
got the draft summary here.

218
00:11:41.660 --> 00:11:44.040
We'll come up with this summary later,
we'll come up with a summary later.

219
00:11:44.040 --> 00:11:45.500
This is the draft one, right?

220
00:11:45.500 --> 00:11:48.790
So, okay, now, that cookie is still set.

221
00:11:48.790 --> 00:11:53.090
So, if I go to read here,
it'll probably show me the draft.

222
00:11:54.340 --> 00:11:57.500
Right shows me the draft post for
this too, right.

223
00:11:57.500 --> 00:12:00.320
So now if I clear
the cookie I go back here.

224
00:12:01.800 --> 00:12:10.600
So, I say slash API slash clear preview,
like that.

225
00:12:10.600 --> 00:12:11.908
Then I go back to that route.

226
00:12:18.216 --> 00:12:25.230
It just there's no hot reloads, messed up.

227
00:12:25.230 --> 00:12:25.736
There it is.
So

228
00:12:25.736 --> 00:12:30.230
now you can see it shows me
the published value for that blog now.

229
00:12:30.230 --> 00:12:33.480
So pretty powerful stuff.

230
00:12:33.480 --> 00:12:38.347
I don't think I'll say this other
frameworks like next as actually charge

231
00:12:38.347 --> 00:12:39.590
for this feature.

232
00:12:39.590 --> 00:12:43.090
You have to pay to be able to do this.

233
00:12:43.090 --> 00:12:44.280
This is free.

234
00:12:44.280 --> 00:12:46.200
It's just code.

235
00:12:46.200 --> 00:12:49.380
Other platforms, you have to pay for this.

236
00:12:49.380 --> 00:12:52.260
And then you have to pay for
CMS to integrate into that.

237
00:12:52.260 --> 00:12:54.480
So you paying twice for the same feature.

238
00:12:54.480 --> 00:12:56.290
Next, yes, this gives it to you for free.

239
00:12:56.290 --> 00:12:58.635
So because it's a full stack framework,

240
00:12:58.635 --> 00:13:02.060
other competing frameworks
are not full stack frameworks.

241
00:13:02.060 --> 00:13:04.938
They're only static so they,
it's literally not possible for

242
00:13:04.938 --> 00:13:06.640
them to do this.

243
00:13:06.640 --> 00:13:09.130
So I think that's just mind blowing.

