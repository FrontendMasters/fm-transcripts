WEBVTT

1
00:00:00.200 --> 00:00:03.800
I think it also added a sign out here,
so you can click your name.

2
00:00:03.800 --> 00:00:07.972
If you follow along, you did the GitHub
thing, you should see your picture here

3
00:00:07.972 --> 00:00:11.783
and your GitHub name and email,
you should be able to sign out like that.

4
00:00:11.783 --> 00:00:17.300
&gt;&gt; How would I go if I
want to refresh the token?

5
00:00:17.300 --> 00:00:22.280
&gt;&gt; So if you wanna refresh the token,
that's a nasty experience, right?

6
00:00:22.280 --> 00:00:24.526
Now you've gotta click here and
Sign in again,

7
00:00:24.526 --> 00:00:28.300
if I just need to read like Heroku Heroku
does a refresh, and it's really nice.

8
00:00:28.300 --> 00:00:34.572
I like that, there is no automatic support
for token refreshes in the next auth,

9
00:00:34.572 --> 00:00:39.090
you have to manually set it
up using their callbacks.

10
00:00:39.090 --> 00:00:43.080
And I could kind of show you how you can
do that but it's still pretty simple.

11
00:00:43.080 --> 00:00:46.980
You just yeah, it's not it's not too
difficult because I'm pretty sure they

12
00:00:46.980 --> 00:00:49.360
don't have an automatic
one not that I know of.

13
00:00:49.360 --> 00:00:52.560
Let me see, look, that's the course right
there, how do I get a refresh token?

14
00:00:52.560 --> 00:00:55.350
Like literally right there,
so it's a thing.

15
00:00:55.350 --> 00:00:59.790
It's just a little process you have
to add, so yeah, not too difficult.

16
00:01:02.130 --> 00:01:08.608
So the question was, does the server, when
I have a page that has server side props,

17
00:01:08.608 --> 00:01:13.079
does the server side props
function get hit every time, or

18
00:01:13.079 --> 00:01:15.815
when I'm on the client side, do I,

19
00:01:15.815 --> 00:01:22.170
am I actually using client side
routing out right without a question?

20
00:01:22.170 --> 00:01:26.905
Okay, a couple things there,
so, let's talk about

21
00:01:26.905 --> 00:01:31.745
the server side props,
server side props is going to be

22
00:01:31.745 --> 00:01:37.234
executed every single time you
go to this route, every time.

23
00:01:37.234 --> 00:01:43.393
It's never not gonna go here, so let's
try it out, so I'm gonna go to sign in.

24
00:01:47.593 --> 00:01:49.570
And then we can go look
at the terminal here.

25
00:01:49.570 --> 00:01:53.150
You can see I got hit right there and
I will refresh it a couple times.

26
00:01:53.150 --> 00:01:59.330
One, two, three,
you can see I got hit three times.

27
00:01:59.330 --> 00:02:00.390
But that's a full refresh.

28
00:02:00.390 --> 00:02:02.250
Let's actually navigate and try it.

29
00:02:02.250 --> 00:02:06.443
So if I go here, which is the home,
click back on dashboard,

30
00:02:06.443 --> 00:02:08.460
which navigates to the app.

31
00:02:08.460 --> 00:02:11.310
You can see it did it another time, okay.

32
00:02:11.310 --> 00:02:15.403
So service I promise is always going to
be executed because it's server render,

33
00:02:15.403 --> 00:02:17.530
that's the full stack part.

34
00:02:17.530 --> 00:02:24.990
But depending on how you link between your
routes, and the key word here is link.

35
00:02:24.990 --> 00:02:29.086
Like for instance, if I go to my index,

36
00:02:29.086 --> 00:02:34.900
you can see that or
not index i guess it's top nav.

37
00:02:34.900 --> 00:02:37.900
Or home and home.

38
00:02:37.900 --> 00:02:41.500
Now you can see I'm using this
link component from next link.

39
00:02:41.500 --> 00:02:45.290
If I use this component, this is going
to give me client side rendering.

40
00:02:45.290 --> 00:02:49.778
So you can see right here by using this
component and navigating to blog, it's

41
00:02:49.778 --> 00:02:55.100
gonna be a client side render whereas if I
just used an anchor tag and went straight.

42
00:02:55.100 --> 00:02:58.408
And I just added the URL here that
won't be a client side render,

43
00:02:58.408 --> 00:03:02.205
it's gonna be a full server side render,
which is for better for worse and

44
00:03:02.205 --> 00:03:06.491
it might not be what you're trying to do,
I'm not sure but if you use the next link,

45
00:03:06.491 --> 00:03:10.414
you opt into, like prefetching it'll
prefetch this if it's static before

46
00:03:10.414 --> 00:03:13.180
you even click on it, so it's ready to go.

47
00:03:13.180 --> 00:03:14.910
They'll do different things like that.

48
00:03:14.910 --> 00:03:19.925
So it really depends on how you route
is going to determine the behavior

49
00:03:19.925 --> 00:03:26.110
of whether you're doing a full request to
the server versus client side routing.

50
00:03:26.110 --> 00:03:29.033
But none of that really matters
if the page you're routing to

51
00:03:29.033 --> 00:03:30.650
has server side props.

52
00:03:30.650 --> 00:03:32.677
Cuz it's gonna hit that server anyway,

53
00:03:32.677 --> 00:03:37.040
that page has to be served on server side
props, no matter how you route to it.

54
00:03:37.040 --> 00:03:41.535
It's always going to serve that,
so this is mostly just for like,

55
00:03:41.535 --> 00:03:47.075
if you have like a hybrid page, where
it's like okay It's server side rendered,

56
00:03:47.075 --> 00:03:51.080
or maybe it's statically
built at build time.

57
00:03:51.080 --> 00:03:53.930
But I'm doing some client side stuff
to address some hooks in there.

58
00:03:53.930 --> 00:03:59.320
I'm doing some API calls inside the JSX,
I'm doing some heavy client side stuff.

59
00:03:59.320 --> 00:04:00.780
So I want that to be snappy.

60
00:04:00.780 --> 00:04:04.728
So then yeah, you're probably using
next link to link to that because if you

61
00:04:04.728 --> 00:04:08.921
didn't, and you did an anchor tag It's
gonna go load up that whole page that that

62
00:04:08.921 --> 00:04:12.497
whole document all over again,
the index, HTML, everything, and

63
00:04:12.497 --> 00:04:15.950
then you're going to wait for
your JavaScript to load in.

64
00:04:15.950 --> 00:04:17.417
Whereas if you just did this,

65
00:04:17.417 --> 00:04:20.240
it'll just swap out the part
where the route is, right?

66
00:04:20.240 --> 00:04:22.460
So, yeah,
it really depends on how you link.

