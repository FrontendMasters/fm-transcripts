WEBVTT

1
00:00:00.000 --> 00:00:05.083
The last little topic we're
gonna talk about is unit types.

2
00:00:05.083 --> 00:00:11.710
Unit types, this term describes
types that could be only one value.

3
00:00:11.710 --> 00:00:15.730
JavaScript, and as a consequence,
TypeScript, they have a couple of these.

4
00:00:15.730 --> 00:00:18.768
Null is a unit type,
there's only one null.

5
00:00:18.768 --> 00:00:21.966
Every time you're writing null
you're referring to the same thing.

6
00:00:21.966 --> 00:00:25.240
Undefined is the same way.

7
00:00:25.240 --> 00:00:29.835
You could see these are not
interchangeable given that I have strict

8
00:00:29.835 --> 00:00:31.453
null checks turned on.

9
00:00:31.453 --> 00:00:34.845
If I had it turned off, this would pass.

10
00:00:34.845 --> 00:00:40.092
Wait, this would pass, the second one.

11
00:00:40.092 --> 00:00:42.878
Cuz it would say, all right,
undefined can accept a null.

12
00:00:42.878 --> 00:00:49.160
I don't think a null type could still
accept an undefined in that case.

13
00:00:49.160 --> 00:00:51.862
So one more is void.

14
00:00:51.862 --> 00:00:54.067
This is not a unit type, actually.

15
00:00:54.067 --> 00:00:57.930
It's almost a unit type.

16
00:00:57.930 --> 00:01:02.336
Void is what you get from
a function that does not return.

17
00:01:02.336 --> 00:01:07.895
It is an indication that you shouldn't
care about what something returns.

18
00:01:07.895 --> 00:01:10.450
I know those are two different statements.

19
00:01:10.450 --> 00:01:14.685
In TypeScript Fundamentals when
we talk about typing functions,

20
00:01:14.685 --> 00:01:18.097
this is in the constructibles and
callable section.

21
00:01:18.097 --> 00:01:22.745
We talked about how void with a function
declaration, that's one thing.

22
00:01:22.745 --> 00:01:26.941
But if you're using it to type a callback,
you could put something in there that does

23
00:01:26.941 --> 00:01:29.260
return something, but
it should be ignored.

24
00:01:29.260 --> 00:01:32.310
So if you need a refresher on that,
go look at that chapter.

25
00:01:32.310 --> 00:01:38.314
The important thing here is, all right,
we've got myVoid, it's of type void.

26
00:01:38.314 --> 00:01:42.950
And it's not only willing to accept voids,
but it's willing to accept undefinds.

27
00:01:42.950 --> 00:01:48.750
This is because at runtime,
these will actually be undefineds.

28
00:01:48.750 --> 00:01:51.420
It doesn't accept any other value.

29
00:01:51.420 --> 00:01:56.959
Voids can accept voids, but
they can also accept undefineds.

30
00:01:56.959 --> 00:02:02.029
Don't create variables of type void,
this is just here for completeness.

31
00:02:02.029 --> 00:02:06.604
And if you're creating a variable of type
void, it's a smell that something's wrong.

32
00:02:06.604 --> 00:02:11.548
You have stored the result of
a function that does not want

33
00:02:11.548 --> 00:02:13.716
you to store its result.

34
00:02:13.716 --> 00:02:14.819
Yes, sir.

35
00:02:14.819 --> 00:02:18.835
&gt;&gt; When we were using a type
that was one single number,

36
00:02:18.835 --> 00:02:24.060
would that also be considered a unit
type or a string of the letter A?

37
00:02:24.060 --> 00:02:27.782
&gt;&gt; It would be, it would be,
and that's absolutely true.

38
00:02:27.782 --> 00:02:31.491
You could create a unit
type just like this.

39
00:02:33.008 --> 00:02:36.939
Right, this is exactly the number 27.

40
00:02:36.939 --> 00:02:42.959
The reason I didn't add it to this
list is we don't have something

41
00:02:42.959 --> 00:02:48.218
that ships with Typescript
that is just the number 27.

42
00:02:48.218 --> 00:02:51.925
You can create a unit type
with a literal type, but

43
00:02:51.925 --> 00:02:56.601
I kind of wanted to cover mostly
these things that we work with,

44
00:02:56.601 --> 00:03:00.497
like undefined and null,
they have special names.

45
00:03:00.497 --> 00:03:02.300
They're not something you
have to explicitly create.

46
00:03:02.300 --> 00:03:04.450
They already are in TypeScript.

47
00:03:04.450 --> 00:03:08.488
But you're absolutely right,
this is a unit type.

48
00:03:08.488 --> 00:03:09.477
Only one thing.

49
00:03:09.477 --> 00:03:15.999
I mean, and if you were to do this,
Now it's not a unit type anymore.

50
00:03:15.999 --> 00:03:18.187
It could be two things.

51
00:03:18.187 --> 00:03:23.869
[LAUGH] sorry, this is wrong,
you get what I mean, though.

52
00:03:26.270 --> 00:03:27.806
I'd have to flip a coin here or something.

