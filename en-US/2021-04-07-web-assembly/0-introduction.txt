[00:00:00]
>> Thank you so much for joining me today. I am so excited to talk about web assembly, low level stuff, assembly scripts, all the good stuff. If I get stuff, I mean really, really technical things. Before we get to that, I should introduce myself a bit more, like I said, my name is Jem Young, that's me.

[00:00:21]
That is a real picture of me. The lighting is photoshopped, obviously, and the lasers. Yeah, I think those are photoshop too, but everything else is real. I'm actually wearing this Raman outfit, yeah, just a fun picture of me. It's actually a Halloween costume that I've never gotten a chance to wear.

[00:00:38]
So I just use this as my profile picture everywhere. Currently, I work as a senior software engineer at Netflix, where I work on growth infrastructure. So pretty much I support UI engineers, our future growth organization. A lot of the long term architecture projects. That's kind of the way I think about engineering.

[00:01:02]
But really, I think about all engineering is what problem are we gonna solve and how are we gonna solve it. A lot of those problems don't necessarily involve coding surprisingly, a lot of problems are just operational or a lot of problems are we're not thinking about the issue, we're trying to solve in the right frame of mind.

[00:01:22]
Anyways, that's, my engineering philosophy we'll learn a lot more about my philosophy over the course of this intro to WebAssembly. If you wanna find me on LinkedIn, I am on Twitter at, or I'm on Twitter @Jim young. I'm on LinkedIn too, I'm not on there much. I'm really thinking about becoming a thought leader on LinkedIn, I don't know.

[00:01:45]
We'll see how that goes, it seems to be a popular thing in Silicon Valley. I live right now in Oakland, California, which it's I like it here, I like you. But I'm still in Silicon Valley, so you're gonna hear lots of Silicon Valley memes, me poking fun of my fellow engineers who live here, as I often do on a podcast that I'm on called front end happy hour.

[00:02:07]
And that's a podcast where we talk about all things front ends, overtricks, just kind of a fun conversation. And I like to think the podcast reflects my own personal style about how to teach to just the informal casual, we're just a couple of friends. I don't have a beer right now or drink, but just having a talk and we have a conversation and we go back and forth.

[00:02:31]
So if you have questions feel free, post in the chat, send me questions to find a masters, I love questions. I try to get to them all. I guarantee there will be things you asked me and I won't know and you're gonna watch me Google like a madman.

[00:02:48]
That's part of being a senior engineers and knowing how to Google things properly. That's a secret, that's a Silicon Valley insider secret for my book coming out soon. I do teach two other courses on front end masters, the first one is called full stack for front end. That's a two day course where we cover literally everything.

[00:03:08]
We cover everything from a bit of containers, we do AWS, we do digitalocean, we do a lot of stuff. And I know a lot of people taking that course. And there's people in the chat that told me, hey, yeah, that course actually helped me get a job, which, honestly that's why I do this.

[00:03:27]
These things to make real impact in people's lives that yeah, that really makes me feel good. I won't get emotional, it's a little too early maybe later in the day. I also teach a course called interviewing for front end engineers. We have a lot of fun that course too, mostly because interviews are terrible.

[00:03:46]
I hate them, probably more than anybody else. So I wanna make a course for front engineers about what are the types of things you should expect, but also, what is the best way to conduct an interview? How do we give an interview so that we're empathetic and we really treat each other with respect and we do that?

[00:04:06]
So I love those courses too, so I'm very excited about introduction to Web Assembly, hopefully it'll be a new canon in my front of masters Webassembly, it's a difficult topic, I'm not gonna lie. I know I shouldn't say that as a professor or a teacher, I should say, it's easy, and it's fun and it's intuitive and you're gonna get it right off the bat.

[00:04:33]
And we're gonna build these awesome cool things, but I'm not gonna lie to you. This is a technical course, this is a deeply technical course. But,I promise when you come out the other side, you will be a better engineer. Even if you don't remember that much from this course at all, you will learn Cconcepts and ways to apply those concepts.

[00:04:55]
It will make you a better engineer, no matter what language you write. I like to think of it as we're doctors. We're doctors, we work on people, we have some tools that help us diagnose when there's issues and failures and things like that. But really, we just know surface level things.

[00:05:13]
Now imagine if we were doctors, we could dive in into someone, we can dive into the literal DNA of what makes us up, what we do. That's what we're gonna do today. We're gonna dive way down, we're gonna dive down to binary, and then we're gonna talk about assembly.

[00:05:33]
And then we're gonna talk about high level programming, and normally it's the other way around. We write JavaScript. JavaScript is the high level language that gets compiled down to machine code which gets compiled down into binary. That's how we all know and love programming and being in front engineer, and going the other way, it's really gonna change our perspective on things.

[00:05:56]
Honestly, you're probably gonna see me nerd out about this stuff and it's gonna be these low level micro architectures, CPU instructions, that sort of thing. And you're gonna be like, [SOUND] Jem, when do we get into the coding? We'll get there, but first we're gonna lay a foundation of knowledge, so that we all understand the same things, because I'm gonna say some pretty well, say very low level concepts, and I really need you to understand them.

[00:06:24]
Otherwise, all the code we write later today won't make any sense.

