WEBVTT

1
00:00:02.150 --> 00:00:06.308
&gt;&gt; Brian Holt: The basic jist here is I'm
going to give you an entire list of all

2
00:00:06.308 --> 00:00:07.961
the top cities in the US.

3
00:00:07.961 --> 00:00:15.245
Again, if you want to see those,
they are kept in this code pen.

4
00:00:15.245 --> 00:00:18.534
And it is just a bunch of city names,
right?

5
00:00:18.534 --> 00:00:21.390
Ordered, I believe in the 2012 census,
or something like that.

6
00:00:21.390 --> 00:00:24.450
So New York was the top one, LA, Chicago.

7
00:00:24.450 --> 00:00:26.920
And then if you get down here,
it's cities I've never heard of.

8
00:00:26.920 --> 00:00:29.290
Actually Spanish Fork
is definitely in Utah.

9
00:00:29.290 --> 00:00:35.415
I will not talk about it because people
from Spanish Fork might be watching.

10
00:00:38.591 --> 00:00:42.220
&gt;&gt; Brian Holt: I can say that,
I'm from Utah.

11
00:00:42.220 --> 00:00:48.000
Okay, so
what I'm gonna do here is you can see I'm

12
00:00:48.000 --> 00:00:52.540
gonna ask you to create a tree, I'm gonna
give you CITY_NAMES, so the first one I

13
00:00:52.540 --> 00:00:55.490
give you is just zero to ten so
you can start really, really simply.

14
00:00:56.660 --> 00:01:01.215
And the nice thing is a lot of the San
cities are some of the bigger ones.

15
00:01:01.215 --> 00:01:03.333
So San Antonio, San Diego and

16
00:01:03.333 --> 00:01:07.670
San Jose are gonna actually be
the ones that it completes to.

17
00:01:11.210 --> 00:01:16.450
&gt;&gt; Brian Holt: I am not judging you on
the order that you return them to me to.

18
00:01:16.450 --> 00:01:18.904
So whatever order you return them to,
that's fine.

19
00:01:21.420 --> 00:01:24.082
&gt;&gt; Brian Holt: That's why it's
doing this _.intersection thing,

20
00:01:24.082 --> 00:01:27.830
is it's just making sure everything is
in there that it expects to be in there.

21
00:01:30.481 --> 00:01:34.556
&gt;&gt; Brian Holt: Okay
&gt;&gt; Brian Holt: You don't have to use this

22
00:01:34.556 --> 00:01:36.000
node data structure.

23
00:01:36.000 --> 00:01:38.621
I just gave it to you because I
thought this would be a useful way for

24
00:01:38.621 --> 00:01:39.442
you to get started.

25
00:01:43.120 --> 00:01:45.710
&gt;&gt; Brian Holt: You'll almost certainly
need some sort of constructor.

26
00:01:47.800 --> 00:01:49.610
I create the root node here for you.

27
00:01:49.610 --> 00:01:53.191
This is going to be all
just a list of words.

28
00:01:53.191 --> 00:01:57.504
And then at the endm you should
give me back the list of

29
00:01:57.504 --> 00:02:00.657
three things that should go in there.

30
00:02:03.354 --> 00:02:07.193
&gt;&gt; Brian Holt: So again, I'd suggest
working on one unit a test at a time, and

31
00:02:07.193 --> 00:02:10.465
then from there,
kind of getting bigger and bigger.

32
00:02:12.489 --> 00:02:15.436
&gt;&gt; Brian Holt: Okay, I'll give you
a bit of time to complete this, and

33
00:02:15.436 --> 00:02:17.960
then we'll come back and
we'll talk about it.

