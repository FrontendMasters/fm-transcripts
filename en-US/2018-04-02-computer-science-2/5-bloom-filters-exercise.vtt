WEBVTT

1
00:00:00.150 --> 00:00:01.759
&gt;&gt; Brian Holt: So,
we are gonna go in here.

2
00:00:01.759 --> 00:00:04.860
We're going to click on
the exercise down here.

3
00:00:04.860 --> 00:00:11.770
It's going to take you to one of my
favorite websites, which is codepen.io.

4
00:00:11.770 --> 00:00:16.150
If you do not have a Code Pen account,
you don't have to have one,

5
00:00:16.150 --> 00:00:17.626
but I would suggest having one.

6
00:00:17.626 --> 00:00:19.500
One just cuz I like the product, but two,

7
00:00:19.500 --> 00:00:23.710
what you can do up here is
you can click Fork, and

8
00:00:23.710 --> 00:00:28.850
you can Fork my examples to your Code Pen,
and then you can keep them afterwards.

9
00:00:28.850 --> 00:00:32.505
I think it's useful to refer back to
code that you yourself have written.

10
00:00:36.556 --> 00:00:40.729
&gt;&gt; Brian Holt: You saw on the previous
screen that I have the answer on there as

11
00:00:40.729 --> 00:00:42.400
well, right.

12
00:00:42.400 --> 00:00:46.200
This is not a test, so you can definitely

13
00:00:46.200 --> 00:00:48.650
look at the answer if you are getting
stuck or something like that.

14
00:00:48.650 --> 00:00:51.190
I would definitely suggest
trying to solve it, right?

15
00:00:51.190 --> 00:00:55.730
That's the point of this and I think that
there's great value in pushing yourself

16
00:00:55.730 --> 00:00:58.692
and particularly in those moments you
are struggling to get to the answer and

17
00:00:58.692 --> 00:01:01.310
struggling to reason through things.

18
00:01:01.310 --> 00:01:03.050
I think that's when you
learn the mos,t at least for

19
00:01:03.050 --> 00:01:07.880
me personally that's when I learned
the most, so keep that in mind.

20
00:01:07.880 --> 00:01:13.481
The other thing I want to tell everyone
listening is, this stuff is hard [LAUGH].

21
00:01:13.481 --> 00:01:17.880
So if you're sitting here struggling and
feeling someone else is getting it and

22
00:01:17.880 --> 00:01:20.730
you're not, it's okay.

23
00:01:20.730 --> 00:01:23.580
This is definitely difficult and

24
00:01:23.580 --> 00:01:27.640
I'm teaching you way too much
material to learn in one sitting so

25
00:01:27.640 --> 00:01:31.380
if you're brain feels a little
squishy afterwards you are not alone.

26
00:01:31.380 --> 00:01:36.730
My brain feels squishy just talking
about it so we're all in this together,

27
00:01:36.730 --> 00:01:40.540
so that's just yeah,
don't be too hard on yourself.

28
00:01:40.540 --> 00:01:41.880
That's really what I'm getting at here.

29
00:01:43.630 --> 00:01:45.870
Okay, so
let's talk about the layout of this.

30
00:01:45.870 --> 00:01:49.680
First of all you should only have to
look at the JS part of this, right?

31
00:01:51.560 --> 00:01:53.940
All the JavaScript is being
run through Babble so

32
00:01:53.940 --> 00:01:57.270
no matter what browser you're using you
should be able to write modern JavaScript.

33
00:01:58.780 --> 00:02:02.890
And then we are running unit
test down here at the bottom.

34
00:02:05.770 --> 00:02:09.600
So this is Jasmine, just very
run-of-the-mill kind of old Jasmine,

35
00:02:09.600 --> 00:02:10.510
if we're being honest.

36
00:02:12.230 --> 00:02:16.689
It's going to run a couple
unit tests here, and you know,

37
00:02:16.689 --> 00:02:20.240
once they passed it was
turned up green right?

38
00:02:20.240 --> 00:02:25.322
Something I was suggest you do just
throughout the entire day here if you

39
00:02:25.322 --> 00:02:31.266
click on Settings up here, go to Behavior,
and turn off Auto-Updating Preview.

40
00:02:31.266 --> 00:02:33.950
It won't matter too much in this one.

41
00:02:33.950 --> 00:02:36.204
But when once we start getting
into recursive things,

42
00:02:36.204 --> 00:02:37.530
it's gonna matter a whole lot.

43
00:02:37.530 --> 00:02:41.040
Otherwise you're gonna crash your browser.

44
00:02:41.040 --> 00:02:45.070
So definitely turn off
Auto Updating Preview.

45
00:02:45.070 --> 00:02:48.550
Once you've done that, it won't just start
running the code every time you type.

46
00:02:48.550 --> 00:02:52.480
What it's gonna do is it's going to
give you this run button up here.

47
00:02:52.480 --> 00:02:54.540
So it's actually not going to run
your code until you click run.

48
00:02:55.970 --> 00:02:58.840
That's a good trick to know.

49
00:03:01.080 --> 00:03:05.150
Another thing that I will suggest
that you do or just another trick.

50
00:03:06.190 --> 00:03:11.992
You can hit, down on these unit tests,
if you hit x, right, here.

51
00:03:11.992 --> 00:03:13.790
If I click Run after that.

52
00:03:14.800 --> 00:03:18.780
It's actually not going to run any of
the tests that have x next to it, right?

53
00:03:20.480 --> 00:03:25.810
So you can see here there's three unit
tests, but it has one pending, right?

54
00:03:25.810 --> 00:03:27.350
That just means that I'm
skipping it right now, so

55
00:03:27.350 --> 00:03:29.650
you can kinda just focus
on one test at a time.

56
00:03:29.650 --> 00:03:31.395
I find that to be useful as well.

57
00:03:33.021 --> 00:03:37.992
&gt;&gt; Brian Holt: Lastly, CodePen has
some quirks sometimes, so if I put,

58
00:03:37.992 --> 00:03:42.530
let's say I just say const
function equals thing.

59
00:03:42.530 --> 00:03:47.230
Right, this is not going to compile
because this function's a reserved word.

60
00:03:47.230 --> 00:03:52.140
It's going to give me a red
exclamation point down there,

61
00:03:52.140 --> 00:03:53.370
which I find a little too subtle.

62
00:03:53.370 --> 00:03:56.780
I wish they were a little bit louder about
it, but just, if your code's not doing

63
00:03:56.780 --> 00:03:59.920
anything and you're like why the hell
is nothing happening, look for

64
00:03:59.920 --> 00:04:01.120
the red exclamation point.

65
00:04:01.120 --> 00:04:04.730
If you click on it, it's going to say,
I don't know what this line is.

66
00:04:04.730 --> 00:04:08.371
And sometimes that error is far less or
far more cryptic than that,

67
00:04:08.371 --> 00:04:11.635
just know that you probably
have a syntax error somewhere.

68
00:04:14.492 --> 00:04:17.820
&gt;&gt; Brian Holt: Okay, so those are things I
definitely wanted to get in front of you.

69
00:04:17.820 --> 00:04:18.980
I found them very frustrating, so

70
00:04:18.980 --> 00:04:21.570
I'm trying to Lessen your
frustration with this.

71
00:04:22.620 --> 00:04:25.100
So let's talk about what I want you to do.

72
00:04:25.100 --> 00:04:27.520
I want you to build a bloom filter.

73
00:04:27.520 --> 00:04:32.620
You can see, up here, that I gave
you three functions, h1, h2, and h3.

74
00:04:32.620 --> 00:04:37.800
You'll put in some sort of
string to this function.

75
00:04:37.800 --> 00:04:45.645
So you'll call it something like
&gt;&gt; Brian Holt: H1("Brian") right?

76
00:04:45.645 --> 00:04:52.590
And it's gonna give you back some
number so if I say console.log Brian.

77
00:04:53.800 --> 00:04:55.190
Open my console here.

78
00:04:55.190 --> 00:04:57.674
See if I can make that
a little bit bigger.

79
00:04:59.808 --> 00:05:00.886
&gt;&gt; Brian Holt: Say run.

80
00:05:04.010 --> 00:05:07.490
&gt;&gt; Brian Holt: You can see here I got 92
back from that function, right, cool?

81
00:05:10.070 --> 00:05:11.410
So that's how you're
gonna do that same thing.

82
00:05:11.410 --> 00:05:14.460
And if I call that again with h2 it's
gonna give me a different number.

83
00:05:14.460 --> 00:05:20.250
80 and with h3 I get it with a yet
different number.

84
00:05:20.250 --> 00:05:22.565
Cool, do we kind of see the pattern here?

85
00:05:22.565 --> 00:05:26.300
0, that's interesting, neat.

86
00:05:27.844 --> 00:05:31.385
&gt;&gt; Brian Holt: You don't have to care
particularly how these work, right,

87
00:05:31.385 --> 00:05:36.560
it's using a library called XXH,
that's what I was referring to earlier.

88
00:05:36.560 --> 00:05:42.020
And just using different seed values, but
suffice to say, you don't actually have

89
00:05:42.020 --> 00:05:45.680
to care about that, just know that it's
gonna give you a number between 0 and 100.

90
00:05:45.680 --> 00:05:48.460
Please make your bloom
filter use 100 spaces.

91
00:05:48.460 --> 00:05:49.758
That's why I did that for you.

92
00:05:51.111 --> 00:05:55.150
&gt;&gt; Brian Holt: And
then you need to code up two methods here.

93
00:05:55.150 --> 00:05:58.390
One called add, one called check, right?

94
00:05:58.390 --> 00:06:00.535
So you will be able to add
things to the Bloom filter and

95
00:06:00.535 --> 00:06:02.886
be able to check if something
might be in the Bloom filter.

96
00:06:04.229 --> 00:06:05.050
&gt;&gt; Brian Holt: Make sense?

97
00:06:06.752 --> 00:06:12.381
&gt;&gt; Brian Holt: Cool, let's give you and
just to let you know,

98
00:06:12.381 --> 00:06:18.220
this took me I think about
15 lines of code ish.

99
00:06:18.220 --> 00:06:22.860
So I'm gonna give you 15 minutes to
do this, come back in 15 minutes and

100
00:06:22.860 --> 00:06:24.930
we'll talk about how to do this.

