WEBVTT

1
00:00:00.210 --> 00:00:00.990
&gt;&gt; Brian Holt: Welcome back.

2
00:00:00.990 --> 00:00:04.010
Hopefully you had a good shot at this.

3
00:00:04.010 --> 00:00:05.829
And right now we're
gonna take a look at it.

4
00:00:05.829 --> 00:00:10.977
The one thing I was doing here as I was
converting all of these to HTML entities,

5
00:00:10.977 --> 00:00:14.877
you could totally just put like
an asterisks here and then,

6
00:00:14.877 --> 00:00:18.960
like that's what that would
look like right there.

7
00:00:18.960 --> 00:00:21.460
I like having like
a little X symbol there.

8
00:00:22.950 --> 00:00:24.800
So notice that this looks like an X,
rep but

9
00:00:24.800 --> 00:00:26.880
this is actually like
a multiplication sign, right?

10
00:00:28.210 --> 00:00:29.221
It's not just like a normal X.

11
00:00:29.221 --> 00:00:33.970
So let's just put them next to each other
and you can see what they look like.

12
00:00:33.970 --> 00:00:36.200
You can see here they
are a little bit different.

13
00:00:36.200 --> 00:00:40.041
&gt;&gt; Speaker 2: If I do it
the same as the stand, times,

14
00:00:40.041 --> 00:00:42.644
cuz that's what I have on mine.

15
00:00:42.644 --> 00:00:44.802
&gt;&gt; Brian Holt: Is it like?
&gt;&gt; Speaker 2: Yeah, that's [INAUDIBLE].

16
00:00:44.802 --> 00:00:45.439
&gt;&gt; Brian Holt: Yeah.

17
00:00:45.439 --> 00:00:51.284
Okay, same thing, same idea cool.

18
00:00:51.284 --> 00:00:56.458
I can just never remember this, so times
like the, there's some fancy name for

19
00:00:56.458 --> 00:01:01.649
but it's the formal name for it and then
what I showed you is just the code for it.

20
00:01:04.322 --> 00:01:06.303
&gt;&gt; Brian Holt: So is this one like and
division or something like that?

21
00:01:08.553 --> 00:01:09.113
&gt;&gt; Brian Holt: I didn't know that.

22
00:01:09.113 --> 00:01:11.636
VS code will do that for me, that's cool.

23
00:01:11.636 --> 00:01:12.591
And this is back arrow.

24
00:01:12.591 --> 00:01:14.760
&gt;&gt; [INAUDIBLE].

25
00:01:14.760 --> 00:01:16.730
&gt;&gt; Brian Holt: Uh-huh?
&gt;&gt; [LAUGH] [INAUDIBLE].

26
00:01:19.020 --> 00:01:19.890
&gt;&gt; Brian Holt: All right, neat.

27
00:01:21.830 --> 00:01:23.870
Cool, so now mine looks like it should.

28
00:01:23.870 --> 00:01:25.687
Did we mostly all get
to this point at least?

29
00:01:28.681 --> 00:01:29.363
&gt;&gt; Brian Holt: If not,

30
00:01:29.363 --> 00:01:35.020
there is a CodePen where you can
check out basically up to this point.

31
00:01:36.050 --> 00:01:37.150
Okay, getting here so

32
00:01:37.150 --> 00:01:40.610
we just did handle numbers, so
now we can actually click this.

33
00:01:40.610 --> 00:01:43.946
We're not doing anything with those
numbers and if we click any of these other

34
00:01:43.946 --> 00:01:47.447
things it's just ignoring it, right
that's where you should be to this point.

35
00:01:50.521 --> 00:01:53.770
&gt;&gt; Brian Holt: Let's see, if we refresh
here also notice that something that's

36
00:01:53.770 --> 00:01:58.170
kind of fun that we kind of accomplished,
I would say sort of by accident.

37
00:01:58.170 --> 00:02:00.375
If I press the zero a bunch of times you
wouldn't expect it to be zero, zero,

38
00:02:00.375 --> 00:02:01.040
zero, zero, right?

39
00:02:01.040 --> 00:02:05.050
You would expect it to just stay zero
until they actually click a real number.

40
00:02:05.050 --> 00:02:08.830
And we did that just because if
buffers triple equal to zero,

41
00:02:08.830 --> 00:02:13.770
then it just says numbers assigned or
buffers assign numbers string, so

42
00:02:13.770 --> 00:02:15.990
then it's gonna be reassigned to zero,
right?

43
00:02:15.990 --> 00:02:19.780
And then, this is always going to be true
as long as that first thing is 0, right?

44
00:02:19.780 --> 00:02:23.980
So that's kind of a neat thing that I
wasn't necessarily planning to happen, but

45
00:02:23.980 --> 00:02:26.955
it kind of happened just by writing
code this way, does it make sense?.

46
00:02:28.280 --> 00:02:28.780
Cool.

47
00:02:30.976 --> 00:02:34.070
&gt;&gt; Brian Holt: But
it does work once you do at a number.

48
00:02:36.050 --> 00:02:38.779
Okay, so now we have numbers,
the numbers are handled.

49
00:02:40.200 --> 00:02:44.577
Now we want to handle symbols.

50
00:02:51.358 --> 00:02:53.090
&gt;&gt; Brian Holt: So going to handleSymbol.

51
00:02:53.090 --> 00:02:57.670
And we're gonna do different things,
depending on whether or

52
00:02:57.670 --> 00:03:01.470
not it's some sort of math operation,
depending if they hit equals,

53
00:03:01.470 --> 00:03:04.336
depending if they hit clear or
something like that.

54
00:03:04.336 --> 00:03:07.660
So let's handle clear, I think that's
a pretty easy one to deal with.

55
00:03:08.890 --> 00:03:09.390
So if.

56
00:03:12.010 --> 00:03:17.300
&gt;&gt; Brian Holt: That our symbol
triple equals C, right?

57
00:03:17.300 --> 00:03:19.250
So they clicked the C button over here.

58
00:03:21.120 --> 00:03:23.370
Then, so what happened?

59
00:03:23.370 --> 00:03:24.360
I want you to think about this for

60
00:03:24.360 --> 00:03:27.970
a second before I tell you, what do you
think's gonna happen if they hit C,

61
00:03:27.970 --> 00:03:30.830
what are the steps that I need
to take to clear out everything.

62
00:03:31.970 --> 00:03:36.920
So if we go over to the one that's
finished, it's just minus there we go.

63
00:03:38.030 --> 00:03:41.243
If I hit 25 and
then I hit C, what happens?

64
00:03:46.031 --> 00:03:46.634
&gt;&gt; Brian Holt: Okay.

65
00:03:46.634 --> 00:03:49.990
I expect the buffer to clear out,
I expect the buffer to go back to zero.

66
00:03:49.990 --> 00:03:53.300
So, let's do that.

67
00:03:53.300 --> 00:03:54.865
Buffer is assigned zero.

68
00:03:58.736 --> 00:04:00.659
&gt;&gt; Brian Holt: What happens if I
have some sort of running total

69
00:04:00.659 --> 00:04:01.677
going here, all right?

70
00:04:01.677 --> 00:04:06.006
Like I've added 15, and
then 30, and then 35?

71
00:04:06.006 --> 00:04:08.581
Probably expect that all to
clear out as well, right?

72
00:04:08.581 --> 00:04:12.462
So we're gonna say runningTotal = 0.

73
00:04:17.191 --> 00:04:20.926
&gt;&gt; Brian Holt: And that should
probably be enough at least for now.

74
00:04:20.926 --> 00:04:21.557
Right?

