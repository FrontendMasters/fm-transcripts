WEBVTT

1
00:00:00.000 --> 00:00:03.798
What could be more exciting than right
now talking about SQL injection,

2
00:00:03.798 --> 00:00:04.990
I can fathom nothing.

3
00:00:06.150 --> 00:00:07.720
So that's what we're going to do.

4
00:00:07.720 --> 00:00:13.720
So, I want to talk about why we do this,
this part right here.

5
00:00:13.720 --> 00:00:15.800
Well think about this for just a second.

6
00:00:15.800 --> 00:00:17.724
We're taking an req.query.search.

7
00:00:18.880 --> 00:00:22.000
And this,
I need to rearrange my windows here.

8
00:00:22.000 --> 00:00:22.750
Here we go.

9
00:00:24.320 --> 00:00:25.430
This is coming from the user, right?

10
00:00:25.430 --> 00:00:29.510
Imagine this is just some thing
available to your message board user.

11
00:00:29.510 --> 00:00:33.808
And they're coming in here and they're
typing, you know, 45 and search and

12
00:00:33.808 --> 00:00:36.630
getting information back from the server.

13
00:00:36.630 --> 00:00:37.130
Okay?

14
00:00:38.790 --> 00:00:43.234
Everything that comes from the user
you have to assume as hostile right

15
00:00:43.234 --> 00:00:45.943
some not so
nice actor is going to come in and

16
00:00:45.943 --> 00:00:51.240
put things garbage in there that's going
to be destructive to what you're doing.

17
00:00:52.390 --> 00:00:52.890
Okay?

18
00:00:53.930 --> 00:00:57.065
If I put rec query dot
search directly into here,

19
00:00:57.065 --> 00:01:00.289
in fact I'm let's be irresponsible and
do this.

20
00:01:01.450 --> 00:01:03.060
So I'm going to put this instead.

21
00:01:05.250 --> 00:01:08.576
And instead of that I'm going to put this.

22
00:01:14.562 --> 00:01:18.650
Okay, so now I'm putting
directly into this query here.

23
00:01:18.650 --> 00:01:19.956
Whatever the user gives me.

24
00:01:19.956 --> 00:01:21.230
Why is this dangerous?

25
00:01:21.230 --> 00:01:24.930
Why is this terrible,
horrible, no good idea?

26
00:01:26.220 --> 00:01:30.850
Because the user could just give you
a number, which is what they should do.

27
00:01:30.850 --> 00:01:35.550
They can put 45 or
they can start giving you SQL, right?

28
00:01:36.800 --> 00:01:41.384
So what happens if the user comes in and

29
00:01:41.384 --> 00:01:46.112
says something like- One semicolon,

30
00:01:46.112 --> 00:01:51.140
DROP TABLE users, semi colon dash dash.

31
00:01:54.380 --> 00:01:57.323
I'm not going to do it because it
literally wrecked my database right now.

32
00:02:00.240 --> 00:02:01.760
Let's just replace it here.

33
00:02:01.760 --> 00:02:06.450
What happens if the user does like what
happens if I put that into my query?

34
00:02:08.420 --> 00:02:11.360
That's gonna drop my users table, right?

35
00:02:11.360 --> 00:02:16.280
It's gonna delete everything that I
have in that particular database.

36
00:02:17.520 --> 00:02:18.630
That's a huge problem.

37
00:02:20.860 --> 00:02:25.440
So if I put a semi-colon there, that
means I can start writing more queries.

38
00:02:25.440 --> 00:02:26.910
Like Postgres is not going to know.

39
00:02:26.910 --> 00:02:28.590
It was like,
I assume this is what you want to do.

40
00:02:28.590 --> 00:02:30.770
This is the information that you sent me.

41
00:02:30.770 --> 00:02:32.570
I'm going to do exactly what you're doing.

42
00:02:32.570 --> 00:02:35.080
They put this dash dash at
the end to comment out.

43
00:02:35.080 --> 00:02:40.120
If you have more query stuff after that,
this is called SQL injection right?

44
00:02:40.120 --> 00:02:43.910
You're interpreting user
input directly as SQL.

45
00:02:46.250 --> 00:02:50.080
Hopefully this is striking like the fear
of the hackers in your heart, right?

46
00:02:52.390 --> 00:02:54.330
That's why we don't do this this way.

47
00:02:54.330 --> 00:02:57.900
This is why you do parameterized
queries because what happens here.

48
00:02:57.900 --> 00:03:04.390
Is now the driver, PG goes and
escapes all of this and says nothing.

49
00:03:04.390 --> 00:03:07.505
SQL related can exist in search, req.

50
00:03:07.505 --> 00:03:09.240
Query.search.

51
00:03:09.240 --> 00:03:11.150
So they escape out all the characters.

52
00:03:11.150 --> 00:03:12.220
They don't allow comments.

53
00:03:12.220 --> 00:03:14.490
There's a bunch of stuff
that you cannot do in here.

54
00:03:14.490 --> 00:03:16.940
The driver will protect you from
shooting yourself in the foot.

55
00:03:17.940 --> 00:03:23.517
So let's just kind of do something for
fun here,

56
00:03:23.517 --> 00:03:28.413
so let's go back to
the way that I had this,

57
00:03:28.413 --> 00:03:33.581
all right, so
we do it this way and then I would

58
00:03:33.581 --> 00:03:38.614
change this to just be
returned common rez,

59
00:03:38.614 --> 00:03:42.680
okay now what happens if I come in?

60
00:03:42.680 --> 00:03:44.530
So right now I can just do 45 search.

61
00:03:44.530 --> 00:03:50.854
I got to restart my server to search,

62
00:03:50.854 --> 00:03:55.750
okay, this all works fine.

63
00:03:55.750 --> 00:03:57.650
The user is doing everything
that we expect them to.

64
00:03:57.650 --> 00:04:00.170
But what happens if I do one colon.

65
00:04:02.000 --> 00:04:05.180
What do I have here?

66
00:04:05.180 --> 00:04:09.809
Yeah, SELECT * FROM

67
00:04:09.809 --> 00:04:15.738
user; -- Did I break it?

68
00:04:15.738 --> 00:04:19.582
I might have.yeah,

69
00:04:19.582 --> 00:04:24.290
that's actually okay.

70
00:04:24.290 --> 00:04:25.610
Hold on.

71
00:04:25.610 --> 00:04:30.593
So this one, I'm just going to replace
this with 39 just for a second because

72
00:04:30.593 --> 00:04:35.063
normally not running two queries at
once based on the same user input.

73
00:04:35.063 --> 00:04:36.660
All right, one more time.

74
00:04:36.660 --> 00:04:37.310
Try this again.

75
00:04:38.580 --> 00:04:41.955
So, here's what happened here.

76
00:04:41.955 --> 00:04:49.400
I got the board bags, I got the post back,
but here's the issue.

77
00:04:50.550 --> 00:04:53.748
Now, what happened is it
ran a second query for

78
00:04:53.748 --> 00:04:56.620
me here with a Select rowCount 1000.

79
00:04:56.620 --> 00:04:59.310
I just leaked all my user information.

80
00:04:59.310 --> 00:05:03.860
Right you can see here that here's
all the emails usernames last log on.

81
00:05:03.860 --> 00:05:04.970
This is like a catastrophe.

82
00:05:04.970 --> 00:05:09.813
This is how like, whenever you see
like data leaks like have I been poned

83
00:05:09.813 --> 00:05:13.042
calm this is very frequently
how this happens,

84
00:05:13.042 --> 00:05:17.806
some uninformed developer or
developer that's just working too fast

85
00:05:17.806 --> 00:05:22.245
accidentally just leaves
themself up into SQL injection.

86
00:05:22.245 --> 00:05:29.545
And someone less nice can come through and
do some SQL injection here, right?

87
00:05:31.065 --> 00:05:38.290
Now this is like relatively, you know,
leaking emails is not good, right?

88
00:05:38.290 --> 00:05:39.976
But like leaking passwords,

89
00:05:39.976 --> 00:05:43.760
or leaking a bunch of other stuff
can be absolutely catastrophic.

90
00:05:45.100 --> 00:05:48.928
And if someone discovers that they can
do this, what they can actually do

91
00:05:48.928 --> 00:05:52.882
is they can go using Postgres set
themselves up as an administrative user,

92
00:05:52.882 --> 00:05:54.680
give themself a password.

93
00:05:54.680 --> 00:05:57.330
Figure out your IP and
then directly connect to your database and

94
00:05:57.330 --> 00:05:58.860
then they can get everything right.

95
00:05:58.860 --> 00:06:02.248
They can exfiltrate all of your data and
you would never know that there another

96
00:06:02.248 --> 00:06:05.070
user was in there and
stole all of your data.

97
00:06:05.070 --> 00:06:09.143
That's exactly what happens to again a lot
of big companies, if someone gets in there

98
00:06:09.143 --> 00:06:13.105
steals all their data, wipes, whatever
record of themselves being there, and no

99
00:06:13.105 --> 00:06:17.360
one ever knows that they were ever there,
right and they stole all of that data.

100
00:06:17.360 --> 00:06:20.310
They only know you know, three years later
when they see that their data is for sale.

101
00:06:23.970 --> 00:06:28.680
So all of this to say,
SQL injection, really big deal.

102
00:06:28.680 --> 00:06:30.430
Make sure you're doing
parameterized queries.

103
00:06:30.430 --> 00:06:34.495
This is like, if I teach, if you learn
nothing else from this course, it's

104
00:06:34.495 --> 00:06:39.006
probably the most important thing is it's
really important that you never do this,

105
00:06:39.006 --> 00:06:41.440
but I just showed you
how to do don't do that.

