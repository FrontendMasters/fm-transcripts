WEBVTT

1
00:00:00.210 --> 00:00:02.230
Let's talk about some command options.

2
00:00:04.400 --> 00:00:08.220
So there's a thing called n x and x x.

3
00:00:08.220 --> 00:00:12.389
And basically what you want to do is
like alright, Redis, set this and

4
00:00:12.389 --> 00:00:16.557
if it does exist fail or set this and
if it doesn't exist fail, right so

5
00:00:16.557 --> 00:00:19.730
you're kind of giving it like a condition.

6
00:00:19.730 --> 00:00:22.301
Did I only wanna set this
if it already exists, or

7
00:00:22.301 --> 00:00:25.130
I only wanna set this if it doesn't exist.

8
00:00:25.130 --> 00:00:27.331
So let's just kind of do an example here.

9
00:00:27.331 --> 00:00:32.954
So if I say set color, and
I haven't not set color yet, right?

10
00:00:32.954 --> 00:00:37.480
So if I say exists colour
it's gonna say zero, right?

11
00:00:37.480 --> 00:00:41.665
So if I say set colour blue and
then I put x x here,

12
00:00:41.665 --> 00:00:46.290
this is gonna fail because
this doesn't exist yet.

13
00:00:49.360 --> 00:00:52.750
Right and so if I say again exists colour.

14
00:00:52.750 --> 00:00:54.240
It's gonna say no still doesn't exist.

15
00:00:54.240 --> 00:00:55.770
So that's what this x x does.

16
00:00:55.770 --> 00:01:00.290
This option here basically says,
if this doesn't exist, don't set it.

17
00:01:00.290 --> 00:01:01.000
This should fail.

18
00:01:01.000 --> 00:01:03.500
Let me show you the flip side of that.

19
00:01:03.500 --> 00:01:05.770
If I say set color.

20
00:01:05.770 --> 00:01:07.020
NX.

21
00:01:07.020 --> 00:01:10.200
If it doesn't exist,
then it's going to succeed.

22
00:01:10.200 --> 00:01:11.100
It doesn't exist right now.

23
00:01:11.100 --> 00:01:12.620
So this will work.

24
00:01:12.620 --> 00:01:13.810
So you can see here it says okay.

25
00:01:15.220 --> 00:01:16.320
Worked.

26
00:01:16.320 --> 00:01:23.353
Exist color, it does exist,
get color, it should say blue.

27
00:01:23.353 --> 00:01:30.600
Now let's say if I say set color green,
and I put xx.

28
00:01:30.600 --> 00:01:34.420
This will succeed because
color already exists.

29
00:01:34.420 --> 00:01:38.446
Right?
Says okay, but now if I try and

30
00:01:38.446 --> 00:01:41.601
say set color yellow NX,

31
00:01:41.601 --> 00:01:46.417
this will fail because it does exist.

32
00:01:49.242 --> 00:01:51.266
So you're just kinda trying to say,

33
00:01:51.266 --> 00:01:55.760
you want to add a condition that this
only works if it does or doesn't exist.

34
00:01:55.760 --> 00:01:57.680
This is occasionally useful.

35
00:01:57.680 --> 00:02:02.095
I'm not going to say it's probably pretty
rarely useful to me but it's probably just

36
00:02:02.095 --> 00:02:06.324
good to know that it's out there that if
you do need something, some behavior like

37
00:02:06.324 --> 00:02:10.100
that, you can do it in one query instead
of asking exists and then set it.

38
00:02:10.100 --> 00:02:13.532
You can actually just do it in one
query and say if this query fails,

39
00:02:13.532 --> 00:02:16.310
then a new ad already
existed already didn't exist.

40
00:02:16.310 --> 00:02:21.307
So actually,
if we go back to our like our set plane,

41
00:02:21.307 --> 00:02:27.110
the one that I was doing before this,
get plane zero, zero.

42
00:02:27.110 --> 00:02:28.873
Before if I was doing this,

43
00:02:28.873 --> 00:02:32.947
I would have had to say I would
have to do two queries every time.

44
00:02:32.947 --> 00:02:34.370
Does this exist?

45
00:02:34.370 --> 00:02:37.480
And if it does, don't go that way.

46
00:02:37.480 --> 00:02:40.610
I could just do this with an NX, right?

47
00:02:41.760 --> 00:02:43.760
And then I could just see if
the query succeeded or failed.

48
00:02:43.760 --> 00:02:48.286
That would be a good use case for
using this XX and NX.

49
00:02:48.286 --> 00:02:50.678
Makes sense?

50
00:02:52.296 --> 00:02:55.470
For the record, I can never keep
straight if XX or NX does what.

51
00:02:55.470 --> 00:02:57.880
I have to look it up every single time.

52
00:02:57.880 --> 00:02:58.750
That's totally fine.

53
00:02:59.760 --> 00:03:04.486
I just the way that I can kind of keep it
in my mind is that nx succeeds when it

54
00:03:04.486 --> 00:03:07.290
does not exist when it not exists, right.

55
00:03:09.060 --> 00:03:12.125
I'll forget that in 20 minutes though I
can never remember you can see I have to

56
00:03:12.125 --> 00:03:14.770
look at my notes every single
time that I say it out loud.

57
00:03:14.770 --> 00:03:15.640
So I don't want like an idiot.

58
00:03:16.730 --> 00:03:18.330
More so than I already do.

59
00:03:18.330 --> 00:03:19.010
Let's talk about TTS.

60
00:03:19.010 --> 00:03:21.060
This one actually is fairly useful to me.

61
00:03:21.060 --> 00:03:24.220
I haven't talked about t TLS.

62
00:03:24.220 --> 00:03:26.880
In other databases,
they actually do exist in Postgres.

63
00:03:26.880 --> 00:03:29.800
They do exist in MongoDB for sure.

64
00:03:29.800 --> 00:03:33.130
I'm gonna assume they exist in Neo Forge.

65
00:03:33.130 --> 00:03:34.183
I've never actually looked but

66
00:03:34.183 --> 00:03:36.390
let's talk about because I use
them all the time in Redis.

67
00:03:36.390 --> 00:03:41.155
TTL stands for time to live and basically
it says that at some point I want this

68
00:03:41.155 --> 00:03:45.980
thing to expire like I want you
to delete this after 30 seconds.

69
00:03:45.980 --> 00:03:50.502
So a good example of when to use this
let's say you're querying your telemetry

70
00:03:50.502 --> 00:03:53.960
data, but
you want to do it every single day.

71
00:03:53.960 --> 00:03:57.632
What you can do is like okay put
this in cash save it for a day and

72
00:03:57.632 --> 00:04:00.520
after a day Just go ahead and delete it.

73
00:04:00.520 --> 00:04:02.270
That's what a TTL does.

74
00:04:02.270 --> 00:04:05.690
So let's say you're writing
like a fitness app.

75
00:04:05.690 --> 00:04:08.980
So you could say set fitness.

76
00:04:10.670 --> 00:04:15.150
The amount of total work done
today by the user bt Holt.

77
00:04:15.150 --> 00:04:21.880
And you can say that, you know, I burned
700 or I did 750 kilojoules of work today.

78
00:04:23.640 --> 00:04:25.730
I'd be proud of myself if I did that.

79
00:04:25.730 --> 00:04:26.500
I did not do that today.

80
00:04:27.650 --> 00:04:28.150
Okay.

81
00:04:29.560 --> 00:04:32.603
But let's say I need to refresh
this view every single day and

82
00:04:32.603 --> 00:04:35.180
I don't want to just have it,
you know, go stale.

83
00:04:35.180 --> 00:04:37.440
So what you can do is
you can give it a TTL.

84
00:04:37.440 --> 00:04:42.949
So if I put EX you can think
expires In 3600 seconds,

85
00:04:42.949 --> 00:04:47.180
so the EX is in seconds,
keep that in mind.

86
00:04:48.840 --> 00:04:53.750
Now, this will end up, staying alive for
was it like, 12 hours or

87
00:04:53.750 --> 00:04:55.400
something like that.

88
00:04:58.030 --> 00:05:01.540
Whatever 36 It's been a long day.

89
00:05:01.540 --> 00:05:03.030
I cannot do math in my head right now.

90
00:05:05.220 --> 00:05:06.710
So that's 300 minutes.

91
00:05:08.170 --> 00:05:09.210
Out of 65 hours.

92
00:05:09.210 --> 00:05:11.760
I don't know why I chose five hours but
there you go.

93
00:05:13.520 --> 00:05:18.938
So Now I can say get fitness.

94
00:05:18.938 --> 00:05:24.323
Total PT Holt and it'll get that back
that after a certain amount of time

95
00:05:24.323 --> 00:05:30.800
of 3600 seconds it's going to expire right
So let's just see an example of that.

96
00:05:30.800 --> 00:05:36.459
So I'm gonna say set
temp key to be high and

97
00:05:36.459 --> 00:05:41.810
we'll give an expiry of five seconds.

98
00:05:42.980 --> 00:05:46.430
See if I can do this fast enough
get temp key, they'll say hi.

99
00:05:46.430 --> 00:05:49.170
But if I keep doing this,
in fact, there you can see there.

100
00:05:49.170 --> 00:05:50.700
It expired.

101
00:05:50.700 --> 00:05:51.450
Now it's gone.

102
00:05:51.450 --> 00:05:52.540
It deletes itself.

103
00:05:54.120 --> 00:05:54.820
So that's a TTL.

104
00:05:57.470 --> 00:05:58.880
You can do with EX.

105
00:05:58.880 --> 00:06:02.010
There's also PX and this is milliseconds.

106
00:06:02.010 --> 00:06:09.100
So if I put 1000 that's
like 1000 milliseconds.

107
00:06:09.100 --> 00:06:13.737
Typically I don't need PX but it's there
if you need something more granular let's

108
00:06:13.737 --> 00:06:17.459
talk just just a moment about
the thundering herd Now if you're a web

109
00:06:17.459 --> 00:06:21.573
developer, you've either heard that
term before and you've just cringe

110
00:06:21.573 --> 00:06:26.209
inside when you hear the term thundering
herd, or you haven't experienced it yet,

111
00:06:26.209 --> 00:06:29.700
and hopefully I can save
you from experiencing it.

112
00:06:29.700 --> 00:06:33.650
But I probably won't, you probably will at
some point in your webdevelopment career.

113
00:06:33.650 --> 00:06:38.412
Thundering herd is this idea
that your cache expires and

114
00:06:38.412 --> 00:06:42.180
before you can refresh the cache.

115
00:06:42.180 --> 00:06:45.786
All these people come in and start hitting
your database, and everything just falls

116
00:06:45.786 --> 00:06:49.630
apart because it's the thundering herd
that just crashes on your database.

117
00:06:49.630 --> 00:06:51.300
So let me give you an example of that.

118
00:06:51.300 --> 00:06:55.851
A common way of doing caching is saying,
if I can find this thing in the cache,

119
00:06:55.851 --> 00:06:59.351
serve it from the cache,
if I can't find it from the cache,

120
00:06:59.351 --> 00:07:01.242
go get it from the database, and

121
00:07:01.242 --> 00:07:05.400
then serve it to or then set it in
the cache and serve it to the user.

122
00:07:05.400 --> 00:07:05.930
Right?

123
00:07:05.930 --> 00:07:09.700
That's kinda a obvious way
of doing caching, right?

124
00:07:09.700 --> 00:07:12.466
If I can get it serve it,
if I can't go get it and then set it, so

125
00:07:12.466 --> 00:07:14.970
I don't have to do it again later.

126
00:07:14.970 --> 00:07:16.040
And you'll do that with TTL.

127
00:07:16.040 --> 00:07:17.733
Right?
You'll say this cache is good for

128
00:07:17.733 --> 00:07:18.279
six hours.

129
00:07:19.600 --> 00:07:21.900
So here's the problem with
that particular setup.

130
00:07:22.910 --> 00:07:27.892
If you set it up like that,
during that very short window of when

131
00:07:27.892 --> 00:07:33.062
the caches expired and it hasn't yet
been set in the cache again,

132
00:07:33.062 --> 00:07:39.480
there's a period of time where if you have
a Mm users all hit that one endpoint.

133
00:07:39.480 --> 00:07:43.040
They are all gonna hit the database and
they're not gonna hit the cash.

134
00:07:44.220 --> 00:07:46.630
And it's it's called the Thundering Herd.

135
00:07:46.630 --> 00:07:47.850
It's gonna bring your app server down.

136
00:07:47.850 --> 00:07:51.420
This has happened to me multiple
times specifically at Reddit.

137
00:07:51.420 --> 00:07:55.040
We had we were doing a flash
sale on our Marketplace on red.

138
00:07:55.040 --> 00:07:58.360
And we hit the thundering herd.

139
00:07:58.360 --> 00:08:00.990
And I think we went down for
like two hours on Black Friday.

140
00:08:00.990 --> 00:08:03.440
I mean, it was a disaster for
like our e commerce.

141
00:08:03.440 --> 00:08:08.290
So hopefully,
I can save you a bit of grief.

142
00:08:08.290 --> 00:08:11.780
So let me talk about how do you
avoid thundering herd with TTS?

143
00:08:13.290 --> 00:08:17.810
Well, one, don't use TTS with
caches in this particular scenario.

144
00:08:17.810 --> 00:08:21.240
The much better way of doing this
is leaving that cache there.

145
00:08:21.240 --> 00:08:24.717
And then having a cron job or
some periodically running job in

146
00:08:24.717 --> 00:08:29.370
the background, that will go and set the
cache so that the cache is always there.

147
00:08:29.370 --> 00:08:34.136
And then there's something some background
job that's just resetting the cache

148
00:08:34.136 --> 00:08:35.520
every so often.

149
00:08:35.520 --> 00:08:38.662
And you're not relying on the app server
to do it because you're going to hit

150
00:08:38.662 --> 00:08:39.610
the thundering herd.

