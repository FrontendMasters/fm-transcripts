WEBVTT

1
00:00:00.490 --> 00:00:04.136
The first of the four different types
we're gonna be looking at today of

2
00:00:04.136 --> 00:00:08.910
databases, a NoSQL database, which is
a dumb marketing term, like serverless.

3
00:00:08.910 --> 00:00:12.820
Like any of those other dumb marketing
terms, which you're familiar with.

4
00:00:14.700 --> 00:00:19.120
What NoSQL means is that it's
a database that doesn't use SQL.

5
00:00:19.120 --> 00:00:20.370
And that's it.

6
00:00:20.370 --> 00:00:23.740
That's the whole thing of the term.

7
00:00:23.740 --> 00:00:27.414
It was a really hot
marketing term in like 2010,

8
00:00:27.414 --> 00:00:30.600
something like that and just stuck, right?

9
00:00:32.870 --> 00:00:35.744
It's a really meaningless term, but I'm
putting it in so that you see it because

10
00:00:35.744 --> 00:00:39.310
you're gonna be seeing it in documentation
all over and in marketing material.

11
00:00:39.310 --> 00:00:42.690
It just means it's a non
relational database.

12
00:00:42.690 --> 00:00:47.560
So you're gonna see that we're gonna talk
about SQL databases here in a second.

13
00:00:47.560 --> 00:00:51.830
NoSQL is anything that falls outside
of that, which is a lot of things.

14
00:00:51.830 --> 00:00:56.585
What we're really gonna be
talking about today is a document

15
00:00:56.585 --> 00:01:00.980
based database which fulfills
the the NoSQL paradigm.

16
00:01:03.530 --> 00:01:08.274
This even gets a little bit fuzzier when
you realize that some NoSQL databases can

17
00:01:08.274 --> 00:01:09.620
handle SQL queries.

18
00:01:09.620 --> 00:01:13.330
So it's wildly confusing and dumb.

19
00:01:13.330 --> 00:01:16.004
So yeah these databases end up being
quite dissimilar from each other, but

20
00:01:16.004 --> 00:01:17.073
still get grouped together.

21
00:01:20.197 --> 00:01:22.750
So there's a bunch of reasons that
you would choose one of these.

22
00:01:22.750 --> 00:01:28.394
One of the biggest advantages to a NoSQL
database is that their schema lists

23
00:01:28.394 --> 00:01:34.510
right so you can actually be defining
a data like a data schema on the fly.

24
00:01:34.510 --> 00:01:36.730
It makes it really easy to get up and
running with one of these.

25
00:01:36.730 --> 00:01:40.024
And it's also very conducive to
the dynamic scripting kind of

26
00:01:40.024 --> 00:01:44.330
thinking that you would get from
a JavaScript or Python type language.

27
00:01:44.330 --> 00:01:47.498
The the mental models
work well together and

28
00:01:47.498 --> 00:01:51.245
it's why we're gonna start with this one.

29
00:01:51.245 --> 00:01:55.730
The kind of the double edged sword here is
that you never have to define databases up

30
00:01:55.730 --> 00:01:59.575
front to define collections or
schemas or anything like that.

31
00:01:59.575 --> 00:02:03.026
But like if for example, if you misspell
something the database be like,

32
00:02:03.026 --> 00:02:05.240
you're creating a new field here you go,
right?

33
00:02:05.240 --> 00:02:08.453
So you kinda do have to be very careful
about what's going in and out and

34
00:02:08.453 --> 00:02:11.394
the more discipline that you can
bring to your data structures,

35
00:02:11.394 --> 00:02:13.320
the more queryable it's gonna be later.

36
00:02:13.320 --> 00:02:18.860
So with great power comes great
responsibility with data schemas.

37
00:02:18.860 --> 00:02:22.710
I think that sentence was written
about data schemas in the first place,

38
00:02:22.710 --> 00:02:23.980
I think not Spider Man.

