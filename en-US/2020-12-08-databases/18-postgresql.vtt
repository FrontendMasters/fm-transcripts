WEBVTT

1
00:00:00.140 --> 00:00:02.397
So we're gonna talk about Postgres.

2
00:00:02.397 --> 00:00:05.672
So you can see down here, PostgreSQL,

3
00:00:05.672 --> 00:00:11.043
the way you pronounce that aloud
is Postgres, just so you know.

4
00:00:11.043 --> 00:00:15.940
Great open source database,
has a huge market share,

5
00:00:15.940 --> 00:00:19.563
very well used with Node in particular.

6
00:00:19.563 --> 00:00:23.819
Has some really killer features, which
I'm excited to talk to you about today,

7
00:00:23.819 --> 00:00:25.330
very flexible, scalable.

8
00:00:27.130 --> 00:00:28.913
Yeah, very good database.

9
00:00:28.913 --> 00:00:32.622
So that's what we're
gonna talk about today.

10
00:00:32.622 --> 00:00:36.209
So going back here,

11
00:00:36.209 --> 00:00:41.278
I'm gonna get out of Mongo.

12
00:00:41.278 --> 00:00:46.265
And here I'm gonna say docker ps,
I called this test-mongo.

13
00:00:46.265 --> 00:00:49.737
So I'm gonna say docker kill test-mongo.

14
00:00:49.737 --> 00:00:53.379
Just so you know, this is going
to actually kill the server and

15
00:00:53.379 --> 00:00:55.000
will drop all of your data.

16
00:00:55.000 --> 00:00:58.140
So if you wanna keep it around,
just leave this running.

17
00:00:58.140 --> 00:00:58.760
I'm done with it.

18
00:00:58.760 --> 00:01:01.750
So I'm gonna say docker kill test-mongo.

19
00:01:01.750 --> 00:01:06.053
Now you can see it is no longer running.

20
00:01:06.053 --> 00:01:07.683
Instead I'm gonna run this one here.

21
00:01:09.587 --> 00:01:12.198
Docker run --name my-postgres.

22
00:01:12.198 --> 00:01:15.160
In retrospect, that's really funny.

23
00:01:15.160 --> 00:01:17.330
That's my SQL and
I'm calling it my Postgres.

24
00:01:17.330 --> 00:01:22.220
That was not intentional but kinda funny.

25
00:01:22.220 --> 00:01:28.005
You do have to give it a login password or
will not start Postgres for you.

26
00:01:28.005 --> 00:01:30.585
I mean, I think they're doing
that in the name of security.

27
00:01:30.585 --> 00:01:33.689
Obviously, we're not doing
anything secure here.

28
00:01:33.689 --> 00:01:36.022
So I just said mysecretpassword.

29
00:01:36.022 --> 00:01:42.121
We'll have to use it on a the connection
stream later, that's the only place.

30
00:01:42.121 --> 00:01:44.447
Port 5432,
that's the one that we wanna forward on.

31
00:01:44.447 --> 00:01:45.467
Make sure you're putting that in there.

32
00:01:46.547 --> 00:01:52.003
D for detach, --rm for
remove the logs when we're done.

33
00:01:52.003 --> 00:01:56.988
And we're gonna run Postgres:13.0.

34
00:02:00.062 --> 00:02:04.864
So that should be running now, and
then we're gonna run this right here,

35
00:02:04.864 --> 00:02:09.520
this docker exec right here,
to attach this program here called pSQL.

36
00:02:09.520 --> 00:02:11.810
That's the name of
the command line client.

37
00:02:13.500 --> 00:02:18.670
And you can see now I am
connected to Postgres.

38
00:02:18.670 --> 00:02:21.762
So again,
we're gonna start with databases, right?

39
00:02:21.762 --> 00:02:27.886
We are inside of a database and right now
we are connected to the Postgres database.

40
00:02:27.886 --> 00:02:31.490
By default, you connect to this
generic database called Postgres.

41
00:02:32.740 --> 00:02:34.861
We may wanna use something else.

42
00:02:34.861 --> 00:02:39.493
So let's make our own and
call it message boards, so

43
00:02:39.493 --> 00:02:44.460
we're gonna say,
CREATE DATABASE message_boards.

44
00:02:46.531 --> 00:02:49.430
Very critical here that
you put semicolons,

45
00:02:49.430 --> 00:02:53.559
Postgres doesn't know you're
done until you put a semicolon.

46
00:02:53.559 --> 00:02:56.970
And then you know something is successful
when it tells you that it repeats back.

47
00:02:56.970 --> 00:03:03.365
Just like, I created a database,
it'll say back to create database, okay?

48
00:03:03.365 --> 00:03:07.174
So now we've created a database and
now we have to use that database.

49
00:03:09.961 --> 00:03:15.208
So the way that we'll end up doing that,
not use, connect.

50
00:03:15.208 --> 00:03:18.283
That's what it is.

51
00:03:18.283 --> 00:03:21.724
Sometimes it's a struggle to keep all
of these various syntax in my head.

52
00:03:21.724 --> 00:03:27.052
All right, so
you're gonna say \c message_boards.

53
00:03:29.652 --> 00:03:32.431
And then it'll say you are now
connected to the database

54
00:03:32.431 --> 00:03:34.274
message_boards as user Postgres.

55
00:03:37.036 --> 00:03:41.950
So the backslash character is kind of,
by the way, you can also say connect.

56
00:03:43.220 --> 00:03:46.201
So this c is just short for that.

57
00:03:46.201 --> 00:03:52.435
The way that you do admin commands
in Postgres is use the backslash.

58
00:03:52.435 --> 00:03:56.279
So if I do \l, you can see here,
I have a message_boards database,

59
00:03:56.279 --> 00:03:59.815
a Postgres database, and
there's some template databases.

60
00:04:02.535 --> 00:04:07.213
That's kind of to list the databases out
to see all the tables in a database.

61
00:04:07.213 --> 00:04:09.909
Right now, we don't have any tables but

62
00:04:09.909 --> 00:04:14.210
\d will let me know all of
the tables in my database.

63
00:04:14.210 --> 00:04:18.250
If you just wanna see all the available
commands, \ question mark will output.

64
00:04:18.250 --> 00:04:21.005
Here's everything that you
can do with backslash.

65
00:04:21.005 --> 00:04:26.340
And if you do backslash, oop, yeah,
and it puts it into more, right?

66
00:04:26.340 --> 00:04:30.670
Cuz there's a lot of stuff
you can do with this, right.

67
00:04:30.670 --> 00:04:35.290
Anyway, and then \h.

68
00:04:35.290 --> 00:04:38.445
This will let you know here's all
the various different kinds of queries

69
00:04:38.445 --> 00:04:39.720
you can do.

70
00:04:39.720 --> 00:04:41.129
Again, that can sometimes be useful.

71
00:04:44.668 --> 00:04:47.713
I don't know why keeps beeping at me,
that's fine.

72
00:04:47.713 --> 00:04:50.970
You can hit Q to get out of those lists,
by the way, and

73
00:04:50.970 --> 00:04:53.080
Q will drop you out of those lists.

74
00:04:57.090 --> 00:05:00.720
And then lastly here, you can do --,

75
00:05:03.685 --> 00:05:09.575
And that's a comment, how you do
a comment in SQL is with dash dash.

76
00:05:09.575 --> 00:05:12.924
So anything after the dash dash is
a comment to the end of the line.

