WEBVTT

1
00:00:00.230 --> 00:00:02.702
Let's get into SQL.

2
00:00:02.702 --> 00:00:07.222
Now the first thing I wanna say
is that I still sometimes out

3
00:00:07.222 --> 00:00:09.630
of habit still called the SQL.

4
00:00:09.630 --> 00:00:12.535
You can tell that I have a lot
of habits around databases and

5
00:00:12.535 --> 00:00:14.490
I just cannot break free of them.

6
00:00:14.490 --> 00:00:16.440
Like I've been doing this for a decade.

7
00:00:16.440 --> 00:00:20.131
The correct way to say this is SQL,
and My SQL,

8
00:00:20.131 --> 00:00:24.500
but it's SQL server and
you writes SQL for SQL server.

9
00:00:25.640 --> 00:00:29.350
I still call it SQL, because I was around
a bunch of people that called it SQL.

10
00:00:29.350 --> 00:00:32.260
So I apologize, I really mean SQL.

11
00:00:33.710 --> 00:00:38.900
But when I say SQL, usually SQL is
associated with like the Microsoft stack.

12
00:00:38.900 --> 00:00:42.568
Unlike Microsoft SQL server,
so when I say SQL,

13
00:00:42.568 --> 00:00:46.609
if you see hear me say SQL,
I will try and stop myself.

14
00:00:46.609 --> 00:00:52.046
But obviously it was not successful,
records versus documents.

15
00:00:52.046 --> 00:00:56.860
Anyway, just like no SQL is
kind of a dumb marketing term.

16
00:00:56.860 --> 00:00:58.257
So as SQL databases,

17
00:00:58.257 --> 00:01:03.233
when I say SQL databases what I really
mean is really relational databases.

18
00:01:03.233 --> 00:01:06.348
And you also see that sometimes
abbreviated as RD BMS,

19
00:01:06.348 --> 00:01:09.680
which I think is relational
database management system.

20
00:01:09.680 --> 00:01:12.996
I think is what that stands for,
but again,

21
00:01:12.996 --> 00:01:17.580
that means an SQL based database
are a relational database.

22
00:01:19.960 --> 00:01:24.290
It's also important to remember that
not all relational databases use SQL.

23
00:01:24.290 --> 00:01:29.314
And not all non relational
databases don't use SQL.

24
00:01:29.314 --> 00:01:33.524
But again, I'm trying to use the most
common terminology here to hopefully

25
00:01:33.524 --> 00:01:35.180
demystify some of the stuff.

26
00:01:35.180 --> 00:01:38.755
So when you see SQL database,
you can kind of loosely associate or

27
00:01:38.755 --> 00:01:43.010
even strongly associate that with
relational database in your head.

28
00:01:43.010 --> 00:01:46.245
Hopefully that's as clear as
mud because marketing is done.

29
00:01:46.245 --> 00:01:49.664
I don't know why these people
still try and confuse us more, but

30
00:01:49.664 --> 00:01:51.956
let's talk about relational databases.

31
00:01:51.956 --> 00:01:53.134
For the rest of time, I'm gonna try and

32
00:01:53.134 --> 00:01:55.770
use relational databases that's actually
probably the closest thing to what I mean.

33
00:01:57.390 --> 00:01:58.669
So what is a relational database?

34
00:01:58.669 --> 00:02:02.577
The best thing to think about with
relational databases is Excel, right?

35
00:02:02.577 --> 00:02:05.530
Excel or numbers or
some sort of spreadsheet.

36
00:02:05.530 --> 00:02:10.270
That is like the easiest picture,
it's like a table of data.

37
00:02:10.270 --> 00:02:14.820
Notice, that the name of a collection in
a relational database is called a table.

38
00:02:14.820 --> 00:02:16.350
That that is no coincidence.

39
00:02:17.510 --> 00:02:22.114
Yeah, so it's good to think
of this as rows and columns.

40
00:02:22.114 --> 00:02:26.920
In fact, that's those are terms
that I'll use as rows and columns.

41
00:02:26.920 --> 00:02:31.083
One of the things with a relational
database is it has a defined and

42
00:02:31.083 --> 00:02:33.550
very structured schema.

43
00:02:33.550 --> 00:02:36.768
Whereas with if you remember in Mongo,
we were writing to our collection and

44
00:02:36.768 --> 00:02:39.270
we just added the owner field on the fly.

45
00:02:39.270 --> 00:02:41.580
That's very easy to do in MongoDB.

46
00:02:41.580 --> 00:02:44.566
And it's not very easy to do in SQL,
because SQL is like,

47
00:02:44.566 --> 00:02:48.950
you need to tell me about all of these
fields before you can give them to me.

48
00:02:48.950 --> 00:02:51.590
If you try and write something that
doesn't exist, it just won't let you.

49
00:02:51.590 --> 00:02:54.279
So what we would have to do
you actually have to issue

50
00:02:54.279 --> 00:02:57.166
an entire statement called
an alter table statement.

51
00:02:57.166 --> 00:03:01.000
Which you don't wanna do alter
tables are very expensive.

52
00:03:01.000 --> 00:03:02.550
As in like we used to do alter tables.

53
00:03:02.550 --> 00:03:06.262
When I worked at Reddit, it would
literally take down like Reddit for

54
00:03:06.262 --> 00:03:07.130
us to do that.

55
00:03:07.130 --> 00:03:11.080
So we were very cautious to not
alter our tables very much.

56
00:03:11.080 --> 00:03:14.520
So a big thing of up front
is defining your schema.

57
00:03:14.520 --> 00:03:18.318
Here's the secret power of relational
databases is that they're very good at

58
00:03:18.318 --> 00:03:20.840
describing relations, right?

59
00:03:20.840 --> 00:03:25.221
Whereas with MongoDB you don't wanna ever
have like this collection refer to this

60
00:03:25.221 --> 00:03:26.500
collection over here.

61
00:03:26.500 --> 00:03:28.491
That's not a good idea.

62
00:03:28.491 --> 00:03:33.200
With MongoDB one of the things you don't
wanna do is you don't want to have one

63
00:03:33.200 --> 00:03:36.980
collection refer to another
collection in general, right?

64
00:03:36.980 --> 00:03:40.520
That's a very expensive thing for
you to say.

65
00:03:40.520 --> 00:03:44.630
Join these two collections
based on this one field, right?

66
00:03:44.630 --> 00:03:47.770
In general with MongoDB when you're
architecting this type of data.

67
00:03:47.770 --> 00:03:49.980
You want all the like
data to live together and

68
00:03:49.980 --> 00:03:53.480
MongoDB provides you with a lot
of tools to be able to do that.

69
00:03:53.480 --> 00:03:57.076
Now, I was actually talking to my friend
who is the director of MongoDB and

70
00:03:57.076 --> 00:03:59.600
he's like, you can do it it's possible.

71
00:03:59.600 --> 00:04:03.270
And certain In situations,
it makes sense to do that with MongoDB.

72
00:04:03.270 --> 00:04:06.161
But I still hold to the rule
that if you're doing joins,

73
00:04:06.161 --> 00:04:08.140
you're doing MongoDB incorrectly.

74
00:04:09.400 --> 00:04:13.856
With SQL, that's like a core component
of how SQL actually works is

75
00:04:13.856 --> 00:04:17.870
that you wanna have data
that relates to each other.

76
00:04:17.870 --> 00:04:19.814
So you're gonna have multiple
different tables, and

77
00:04:19.814 --> 00:04:21.470
those tables are going
to refer to each other.

78
00:04:22.910 --> 00:04:23.830
The example that we're gonna

79
00:04:23.830 --> 00:04:26.640
do today is we're basically
gonna create a message board.

80
00:04:26.640 --> 00:04:31.454
And with that message board
we're gonna have a table of

81
00:04:31.454 --> 00:04:36.176
boards that are going to
refer to a table of contents.

82
00:04:36.176 --> 00:04:41.221
So table of comments, it's hard to say
that way, a table of comments, right?

83
00:04:41.221 --> 00:04:44.586
And there's gonna be two separate tables
that are going to refer to each other

84
00:04:44.586 --> 00:04:45.440
based on IDs.

85
00:04:45.440 --> 00:04:49.012
And we're gonna do joins and that's a big
power of what SQL databases can do.

86
00:04:52.216 --> 00:04:56.631
So that's why it's called relational
databases is because it's very oriented to

87
00:04:56.631 --> 00:04:58.784
the idea of data relating to each other.

88
00:05:01.560 --> 00:05:03.500
So what is SQL?

89
00:05:03.500 --> 00:05:05.873
Why do I keep referring
to this dumb acronym?

90
00:05:05.873 --> 00:05:06.862
I hate acronyms.

91
00:05:06.862 --> 00:05:08.750
Why do we have this one?

92
00:05:08.750 --> 00:05:12.050
SQL stands for structured query language,
which I had to look up.

93
00:05:12.050 --> 00:05:15.470
It was one of the things I still I never
knew, I just always knew what SQL was.

94
00:05:17.550 --> 00:05:20.020
And it's a powerful query language.

95
00:05:21.360 --> 00:05:24.197
Whereas, in MongoDB,
we were using JSON and

96
00:05:24.197 --> 00:05:27.470
JavaScript to write queries,
to query MongoDB.

97
00:05:27.470 --> 00:05:32.580
SQL is what you're gonna use instead
of JavaScript to query this database.

98
00:05:33.650 --> 00:05:41.570
So it's a very kind of structured query
language that's useful to say out loud.

99
00:05:41.570 --> 00:05:45.050
It's a language that is structured,
that you use to query databases.

100
00:05:45.050 --> 00:05:49.927
So if you use this kind of grammar, you'll
be telling the database, how and when,

101
00:05:49.927 --> 00:05:53.006
to do these kind of queries and
we'll get into that.

102
00:05:53.006 --> 00:05:56.210
Whereas there's not a ton of
document based databases out there.

103
00:05:56.210 --> 00:06:00.004
Like if you're gonna talk about
a document based database, you're gonna

104
00:06:00.004 --> 00:06:04.620
be talking about MongoDB most of the time,
that is definitely not the case for SQL.

105
00:06:04.620 --> 00:06:08.420
With SQL, there's a lot of
different types of databases.

106
00:06:08.420 --> 00:06:15.580
I chose Postgres because I think that's
kind of the accepted I will say accepted.

107
00:06:15.580 --> 00:06:20.520
It is one of the most used databases for
JavaScript developers.

108
00:06:20.520 --> 00:06:23.676
And it has a lot of features that I
think JavaScript developers will find

109
00:06:23.676 --> 00:06:25.070
interesting.

110
00:06:25.070 --> 00:06:26.410
And it's just well used today.

111
00:06:29.560 --> 00:06:31.000
Beyond that it's just my favorite, right?

112
00:06:31.000 --> 00:06:32.884
Like it's the one that
I would choose today,

113
00:06:32.884 --> 00:06:34.630
if I was gonna go write a new application.

114
00:06:36.430 --> 00:06:41.420
Now the elephant in the room that is
pinot intended, but also kind of funny.

115
00:06:41.420 --> 00:06:46.510
The elephant in the room would be
the mascot for Postgres is an elephant.

116
00:06:46.510 --> 00:06:47.939
That's why that's a dumb joke.

117
00:06:49.640 --> 00:06:51.402
The other would be my SQL,

118
00:06:51.402 --> 00:06:57.440
my SQL is the other relational open
source database that gets a ton of usage.

119
00:06:57.440 --> 00:07:00.144
And I actually,
my first job and my second job,

120
00:07:00.144 --> 00:07:02.315
I wrote a lot of things my SQL queries.

121
00:07:04.475 --> 00:07:07.583
It's great, it's scales enormously,

122
00:07:07.583 --> 00:07:11.055
Facebook is famously
based heavily on MySQL.

123
00:07:11.055 --> 00:07:13.069
So it does well.

124
00:07:14.080 --> 00:07:17.500
MySQL is also backed by Oracle.

125
00:07:17.500 --> 00:07:20.728
So obviously they know a thing or two
about databases so it's well supported.

126
00:07:20.728 --> 00:07:25.490
It's very good choice today as well.

127
00:07:25.490 --> 00:07:30.920
Google and Netflix are on two
other very big utilizers of MySQL.

128
00:07:30.920 --> 00:07:33.490
Some people don't want
to be tied to Oracle.

129
00:07:33.490 --> 00:07:38.721
And so
another group of the old core committers

130
00:07:38.721 --> 00:07:44.096
of MySQL formed a new
database called Maria DB.

131
00:07:44.096 --> 00:07:47.197
Maria DB is meant to be a drop
in replacement for MySQL, so

132
00:07:47.197 --> 00:07:48.891
they are largely compatible.

133
00:07:48.891 --> 00:07:52.728
It's just more open source,
it's not tied to a big company.

134
00:07:52.728 --> 00:07:57.420
It's another very well
used database as well.

135
00:07:57.420 --> 00:08:01.064
So those are kind of like the ones
that people mostly think about.

136
00:08:01.064 --> 00:08:06.242
The other one to kind of
just mention is SQL Lite.

137
00:08:06.242 --> 00:08:08.537
This one's a little bit different,
it's meant to be very small.

138
00:08:08.537 --> 00:08:10.999
It actually doesn't even have any
net code or anything like that.

139
00:08:10.999 --> 00:08:15.036
It's generally something you can
drop into like an IOT device.

140
00:08:15.036 --> 00:08:17.103
MyMac is currently running SQLite.

141
00:08:17.103 --> 00:08:21.263
Everyone's Mac is running SQLite it cheap
in a lot of things it's very small,

142
00:08:21.263 --> 00:08:22.597
it's very performant.

143
00:08:22.597 --> 00:08:28.690
It's been to kind of thing generally
not used in web does scenarios.

144
00:08:28.690 --> 00:08:33.320
I would not recommend it for
web development scenarios, but

145
00:08:33.320 --> 00:08:35.601
it is a very simple one to get.

146
00:08:35.601 --> 00:08:37.707
Because keep that in mind.

147
00:08:37.707 --> 00:08:43.024
And then the other one are like the big
corporate players like SQL Server,

148
00:08:43.024 --> 00:08:44.499
Oracle, IBM DB2.

149
00:08:44.499 --> 00:08:49.140
These are kind of like
the big corporate databases.

150
00:08:49.140 --> 00:08:50.751
They're very expensive.

151
00:08:50.751 --> 00:08:54.623
Like typically you're gonna sign like
a very large corporate contract,

152
00:08:54.623 --> 00:08:55.566
use one of these.

153
00:08:55.566 --> 00:08:59.606
I'm not gonna tell you about
them because I never used them.

154
00:08:59.606 --> 00:09:03.116
And I never have used them despite
the fact that like I said,

155
00:09:03.116 --> 00:09:05.301
my father literally worked on DB2.

156
00:09:05.301 --> 00:09:06.216
But they're out there as well.

157
00:09:06.216 --> 00:09:08.817
I'm sure some of your
companies are using them.

158
00:09:08.817 --> 00:09:11.962
There's, I mean,
they're obviously good products.

