WEBVTT

1
00:00:00.410 --> 00:00:04.100
Let's talk about logical operators.

2
00:00:04.100 --> 00:00:08.965
So we just talked about query operators
with like non equals and equals and

3
00:00:08.965 --> 00:00:12.090
greater than and greater than or equal to.

4
00:00:12.090 --> 00:00:14.514
So we're gonna be talking now about,

5
00:00:14.514 --> 00:00:18.320
let's say you needed two things
to be true at the same time.

6
00:00:18.320 --> 00:00:22.820
So let's say you wanted to combine
two logical operators and say like,

7
00:00:22.820 --> 00:00:27.320
I want to find pets between the ages of
four and eight so it would be both of

8
00:00:27.320 --> 00:00:32.584
those statements to be true, the way they
would do that is with a logical operator.

9
00:00:32.584 --> 00:00:34.734
We gonna say db dot
pets dot find Al right.

10
00:00:34.734 --> 00:00:39.880
[INAUDIBLE] I swear this is my day job.

11
00:00:39.880 --> 00:00:42.734
Say count, want to say type,

12
00:00:46.829 --> 00:00:49.688
Bird, and
then we're going to say dollar sign and

13
00:00:49.688 --> 00:00:53.445
to get multiple different conditions
evaluating the true here.

14
00:00:53.445 --> 00:00:55.720
This is an array that
we're going to pass to it.

15
00:00:55.720 --> 00:01:00.315
I'm just going to close all these off so
I can get it right.

16
00:01:00.315 --> 00:01:05.649
And then we're going to say age is
another object which is greater than or

17
00:01:05.649 --> 00:01:06.795
equal to four.

18
00:01:08.288 --> 00:01:13.591
And then we're going to do another object

19
00:01:13.591 --> 00:01:21.633
here where age is another object
of less than or equal to eight.

20
00:01:22.798 --> 00:01:24.961
There you go.

21
00:01:24.961 --> 00:01:29.785
Next thing here you can
notice that my shell

22
00:01:29.785 --> 00:01:34.609
is smart enough to
highlight the bracket or

23
00:01:34.609 --> 00:01:38.763
square bracket or whatever I'm on.

24
00:01:38.763 --> 00:01:42.910
So now this should work.

25
00:01:42.910 --> 00:01:47.586
And now we can see that we have
556 birds that are between

26
00:01:47.586 --> 00:01:49.790
the ages of four and eight.

27
00:01:49.790 --> 00:01:54.660
So all and does is an array of
things that have to be true.

28
00:01:54.660 --> 00:01:57.820
So in this case, all of these
things have to evaluate to true.

29
00:02:00.576 --> 00:02:07.540
You also have, or so, or it can be
one of these can be equal to true.

30
00:02:07.540 --> 00:02:11.310
You have nor so
that none of them can be equal to true.

31
00:02:11.310 --> 00:02:13.826
Then you also have knot that will
evaluate to all those to not being true.

32
00:02:19.215 --> 00:02:20.520
Cool.

33
00:02:20.520 --> 00:02:21.310
Does anyone have any questions about that?

34
00:02:29.584 --> 00:02:30.250
Cool.

35
00:02:31.800 --> 00:02:35.572
So you can see that using JavaScript
objects, it's a little awkward and some of

36
00:02:35.572 --> 00:02:40.050
the ways you have to do it but you can end
up with some pretty expressive queries.

37
00:02:40.050 --> 00:02:43.120
It just ends up with a lot
of nesting of objects.

38
00:02:48.400 --> 00:02:48.900
Okay?

39
00:02:58.400 --> 00:03:00.890
There's some more operators we're
not going to talk about them now.

40
00:03:00.890 --> 00:03:03.210
Like there's one you can
query like what type?

41
00:03:03.210 --> 00:03:05.270
Like what data type is something.

42
00:03:05.270 --> 00:03:10.586
So if you have name and you wanna query
that of all names that are of type

43
00:03:10.586 --> 00:03:16.520
number just to find things that
are wrong in your your collection.

44
00:03:16.520 --> 00:03:17.320
That's possible.

45
00:03:18.830 --> 00:03:22.950
Another thing that MongoDB is now
capable of doing is geospatial query.

46
00:03:22.950 --> 00:03:25.971
So let's say you have a bunch
of points on a map and

47
00:03:25.971 --> 00:03:31.350
you wanna find the closest point to
another point that's in your collection.

48
00:03:31.350 --> 00:03:33.290
You can do geospatial queries.

49
00:03:33.290 --> 00:03:35.756
Again, we're not going to do that
today one because I've never had to,

50
00:03:35.756 --> 00:03:37.690
to be honest with you, but it is possible.

51
00:03:37.690 --> 00:03:41.897
But if you have like find a pet
adoption agency near you, and

52
00:03:41.897 --> 00:03:46.945
you have all of their longitudes and
latitudes, you can do a geospatial

53
00:03:46.945 --> 00:03:51.510
query to figure out which one's
the closest to based on a point.

54
00:03:51.510 --> 00:03:56.040
Another one's going to be important that
we're going to do right now is sorts.

55
00:03:56.040 --> 00:04:01.051
So let's find the Let's

56
00:04:01.051 --> 00:04:06.360
find the oldest dogs in our collection.

57
00:04:06.360 --> 00:04:10.540
So we're gonna say db dot pets dot find
and we'll find like the top ten or

58
00:04:10.540 --> 00:04:11.873
something like that.

59
00:04:11.873 --> 00:04:15.322
And we're gonna find things of type dog.

60
00:04:15.322 --> 00:04:18.530
And then we're gonna say,

61
00:04:18.530 --> 00:04:23.700
sort like that and
give it a sorting object.

62
00:04:23.700 --> 00:04:28.232
So we are gonna sort by age, and you can
either sort by ascending which would be

63
00:04:28.232 --> 00:04:31.189
one, or
descending which would be negative one.

64
00:04:33.030 --> 00:04:36.378
Okay, and then we'll say limit five.

65
00:04:36.378 --> 00:04:40.975
And you can see there,
we have five dogs here that are all 17.

66
00:04:40.975 --> 00:04:44.908
So that's what that dot
sort does there for

67
00:04:44.908 --> 00:04:48.732
you that allows you to
sort by ascending or

68
00:04:48.732 --> 00:04:53.660
descending, you can also
sort by two things at once.

69
00:04:55.220 --> 00:04:57.880
So these ones are all named dog,
which is kind of interesting.

70
00:04:59.970 --> 00:05:05.858
Let's say we wanted to sort
by breed as a secondary sort.

71
00:05:05.858 --> 00:05:11.360
[NOISE] Breed one.

72
00:05:11.360 --> 00:05:16.390
So now you can see here,
that's sorting by breed ascending right.

73
00:05:16.390 --> 00:05:18.800
So African gray goes first.

74
00:05:18.800 --> 00:05:22.230
I don't really have an African
trade dog but that sounds fun.

75
00:05:22.230 --> 00:05:23.540
Or again, you can do here negative one.

76
00:05:23.540 --> 00:05:30.900
One I can see there is tabbies last.

77
00:05:30.900 --> 00:05:36.720
So you can have multiple
faceted sorts as well.

