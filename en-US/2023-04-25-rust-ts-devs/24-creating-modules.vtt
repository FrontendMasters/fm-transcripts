WEBVTT

1
00:00:00.410 --> 00:00:01.510
Here's the complete code, right?

2
00:00:01.510 --> 00:00:03.487
Our shapes has public everything.

3
00:00:03.487 --> 00:00:05.270
We've named it all public.

4
00:00:05.270 --> 00:00:07.262
And then our main imports everything, and

5
00:00:07.262 --> 00:00:09.983
I noticed that I don't have
the mod statement right here.

6
00:00:09.983 --> 00:00:11.740
There should be a mod
statement right there.

7
00:00:11.740 --> 00:00:14.100
And we have our stuff being created.

8
00:00:14.100 --> 00:00:16.440
All right, so
now do you see why it's better yet?

9
00:00:17.770 --> 00:00:19.510
Can someone name something
that's weird going on?

10
00:00:21.530 --> 00:00:24.640
Where is rectangle and circle defined at?

11
00:00:24.640 --> 00:00:26.450
&gt;&gt; In a separate folder.

12
00:00:26.450 --> 00:00:28.010
&gt;&gt; Yeah, a different location.

13
00:00:28.010 --> 00:00:33.313
Yeah, we just implemented a trait we
defined for an object we did not define.

14
00:00:36.178 --> 00:00:42.740
&gt;&gt; So the data structure can be done
independent of the data behavior.

15
00:00:42.740 --> 00:00:45.063
&gt;&gt; Boom,
that's a great answer right there.

16
00:00:45.063 --> 00:00:49.544
Your data structure can be
separate from your data behavior.

17
00:00:49.544 --> 00:00:50.507
This is very, very important.

18
00:00:50.507 --> 00:00:54.707
In fact, it's so dang important,
I can jump down here and

19
00:00:54.707 --> 00:00:58.066
go like this, implement Area for float 64.

20
00:00:58.066 --> 00:01:00.902
I'm just gonna take one of
their own built-in types and

21
00:01:00.902 --> 00:01:02.721
I'm gonna return self times self.

22
00:01:02.721 --> 00:01:07.447
And boom, right down here,
we go in here and go like this, 6.9.area.

23
00:01:07.447 --> 00:01:11.220
Look at that, I just added area
to something I don't even own.

24
00:01:12.590 --> 00:01:14.590
Okay, we're getting a little
bit more excited, right?

25
00:01:14.590 --> 00:01:17.656
That's pretty, I mean, for
me, that is just so cool.

26
00:01:17.656 --> 00:01:20.219
It's so dang cool, but you know what?

27
00:01:20.219 --> 00:01:23.120
Y'all a bunch of TypeScript developers,
so what are you thinking right now?

28
00:01:23.120 --> 00:01:24.370
&gt;&gt; Monkey typing?

29
00:01:24.370 --> 00:01:27.449
&gt;&gt; You're thinking, whoa,
polyfills, global space,

30
00:01:27.449 --> 00:01:29.549
something's wrong here, right?

31
00:01:29.549 --> 00:01:32.258
Man, last time people
messed with my prototype,

32
00:01:32.258 --> 00:01:34.520
you had to fist fight at your job, right?

33
00:01:34.520 --> 00:01:36.641
No one messes with the prototype.

34
00:01:36.641 --> 00:01:40.556
You never do that, right, right?

35
00:01:40.556 --> 00:01:43.300
I wanna hear some rights out of you
because that is dangerous, okay?

36
00:01:43.300 --> 00:01:45.237
You guys are kind of agreeing with me,
but like,

37
00:01:45.237 --> 00:01:46.767
well, you gotta do what you gotta do.

38
00:01:46.767 --> 00:01:49.354
&gt;&gt; [LAUGH]
&gt;&gt; No, you don't, don't do it,

39
00:01:49.354 --> 00:01:50.840
terrified to do that.

40
00:01:50.840 --> 00:01:55.536
All right, so
let's do a little exercise here, okay?

41
00:01:55.536 --> 00:02:02.424
Let's take trait and let's move
the Area trait into the shapes.rs.

42
00:02:02.424 --> 00:02:03.803
So I'm gonna go over here.

43
00:02:03.803 --> 00:02:07.727
I'm gonna take the Area trait
plus its rectangle definition,

44
00:02:07.727 --> 00:02:11.365
plus its circle definition,
plus its float definition.

45
00:02:11.365 --> 00:02:14.880
And let's take that and let's move
it all the way over here to shapes.

46
00:02:16.650 --> 00:02:21.290
Now, of course, we need to do a little
pub on the Area trait because we

47
00:02:21.290 --> 00:02:23.890
gotta be able to import it in.

48
00:02:23.890 --> 00:02:26.920
So very, very important,
and I'm gonna hit Save.

49
00:02:28.810 --> 00:02:31.639
Okay, there's some warnings
probably popping up.

50
00:02:31.639 --> 00:02:32.328
Don't read the warnings.

51
00:02:32.328 --> 00:02:34.956
They're gonna ruin the surprise,
all right?

52
00:02:34.956 --> 00:02:37.258
And then there's, of course,
this PI down here.

53
00:02:37.258 --> 00:02:39.000
Make sure you have PI properly imported.

54
00:02:40.220 --> 00:02:41.127
Don't forget about that.

55
00:02:41.127 --> 00:02:43.895
Make sure you've done your searching.

56
00:02:43.895 --> 00:02:45.633
Don't look.

57
00:02:45.633 --> 00:02:48.370
Don't look, don't, okay, there we go.

58
00:02:48.370 --> 00:02:49.904
All right, so let's jump back over here.

59
00:02:52.133 --> 00:02:55.740
And what happened?

60
00:02:57.190 --> 00:02:57.970
Where do our area go?

61
00:03:01.122 --> 00:03:03.556
Here's a little magic that happens.

62
00:03:03.556 --> 00:03:08.679
You can only use trait methods
if you import the trait itself.

63
00:03:10.480 --> 00:03:14.283
There is no global mushing of the float.

64
00:03:14.283 --> 00:03:19.307
It only exists within the files
that have the trait in view.

65
00:03:19.307 --> 00:03:22.922
So it is localized monkey patching,
if you will,

66
00:03:22.922 --> 00:03:26.310
which means it's safe, it's not crazy.

67
00:03:26.310 --> 00:03:31.388
When I define area on a float,
only I and others who have that specific

68
00:03:31.388 --> 00:03:36.010
trait in view get that method on a float,
nobody else does.

69
00:03:36.010 --> 00:03:38.916
Which means this little thing down here,
where are you?

70
00:03:38.916 --> 00:03:40.028
I know you're coming up.

71
00:03:40.028 --> 00:03:42.744
You can't do that, right?

72
00:03:42.744 --> 00:03:47.831
Cuz in JavaScript, if you were to add
this to, say, the number of prototype,

73
00:03:47.831 --> 00:03:52.072
you would get the same effect,
except for everybody in the entire

74
00:03:52.072 --> 00:03:56.490
VA isolate would get the exact same
experience, which is not good.

75
00:03:56.490 --> 00:03:57.152
That's not Ws.

76
00:03:57.152 --> 00:03:59.747
Those are not Ws, everyone,
no, no high fiving.

77
00:03:59.747 --> 00:04:01.598
No one's happy with your polyfills.

78
00:04:01.598 --> 00:04:03.450
And so this makes it pretty cool.

79
00:04:03.450 --> 00:04:07.064
In fact, this makes it so dang cool if
you haven't seen this YouTube video by

80
00:04:07.064 --> 00:04:09.388
Matt Pokok, he does like,
I fixed TypeScript.

81
00:04:09.388 --> 00:04:11.260
And he adds a bunch of extra
safety things, you've seen it?

82
00:04:12.370 --> 00:04:16.285
Imagine if he could use this instead
of setting it for an entire project.

83
00:04:16.285 --> 00:04:20.520
Effectively, he fixes how JSON,
if you JSON parse, you get an any out.

84
00:04:20.520 --> 00:04:23.600
Instead, you get an unknown type out,
which adds extra safety.

85
00:04:23.600 --> 00:04:27.437
So you can imagine if you could just
only require that behavior in for

86
00:04:27.437 --> 00:04:32.013
a singular file, you could actually slowly
convert your code base to an even more

87
00:04:32.013 --> 00:04:33.852
strict version of TypeScript.

88
00:04:33.852 --> 00:04:37.160
As opposed to just turning it on for
everyone, now you have 9,000 errors.

89
00:04:37.160 --> 00:04:41.027
So that's one super cool thing about
traits is that you have to have them

90
00:04:41.027 --> 00:04:42.230
in view.

91
00:04:42.230 --> 00:04:46.400
One super uncool thing about traits is
that you have to have them in view.

92
00:04:46.400 --> 00:04:48.450
Sometimes you're like, I just wanna read.

93
00:04:48.450 --> 00:04:49.850
I know there's a read function.

94
00:04:49.850 --> 00:04:53.264
And then you have to go find the trait and
sometimes the Rust analyzer struggles with

95
00:04:53.264 --> 00:04:56.800
finding the right thing to import in,
and then you feel very frustrated.

96
00:04:56.800 --> 00:04:59.152
But it also adds pretty cool behavior.

97
00:04:59.152 --> 00:05:01.671
I think we can all agree,
pretty dang cool behavior.

98
00:05:01.671 --> 00:05:03.420
I think it's pretty cool.

99
00:05:03.420 --> 00:05:05.969
Okay, maybe I am making it
bigger than it is, but for me,

100
00:05:05.969 --> 00:05:07.310
this is super cool behavior.

101
00:05:07.310 --> 00:05:10.363
All right, but
we haven't hit the best yet, all right?

102
00:05:10.363 --> 00:05:15.060
So this next part is gonna
be a lot of typing, okay?

103
00:05:16.510 --> 00:05:19.712
Because we must fail to succeed.

104
00:05:19.712 --> 00:05:25.031
We're gonna do something that's
gonna get complicated and wrong and

105
00:05:25.031 --> 00:05:30.634
all these terrible things, and
then it's gonna become amazing, okay?

106
00:05:30.634 --> 00:05:34.360
So we're gonna organize our
files a bit more, all right?

107
00:05:34.360 --> 00:05:37.297
I mean, really, we can just drop this
whole TypeScript thing altogether.

108
00:05:37.297 --> 00:05:38.869
I don't know why I'm keeping it going,

109
00:05:38.869 --> 00:05:41.320
cuz now we're just into this
fantastical trait stuff.

110
00:05:41.320 --> 00:05:44.372
But you can, you can organize your
TypeScript files or you can just say,

111
00:05:44.372 --> 00:05:46.138
forget about it, whatever you wanna do.

112
00:05:46.138 --> 00:05:47.462
I'll organize them, you can watch.

113
00:05:47.462 --> 00:05:49.292
There's only one more
tiny bit of TypeScript.

114
00:05:49.292 --> 00:05:51.840
The rest is gonna be all
Rust from here on out.

115
00:05:51.840 --> 00:05:56.351
All right, so we're gonna take
from shapes.rs, and instead,

116
00:05:56.351 --> 00:06:00.307
we're gonna have this right here,
a shapes/mod.rs.

117
00:06:00.307 --> 00:06:06.451
So when Rust is trying to resolve one
of your mods, one of your includes,

118
00:06:06.451 --> 00:06:11.630
what it does is this right here
first checks for shapes.rs.

119
00:06:11.630 --> 00:06:14.174
If it can't find that, it checks for

120
00:06:14.174 --> 00:06:19.180
a folder named shapes with a file
inside of it called mod.rs or module.

121
00:06:19.180 --> 00:06:23.820
So think of it like index.ts,
same effective principle.

122
00:06:23.820 --> 00:06:24.918
So I'll just do that right now.

123
00:06:24.918 --> 00:06:26.806
I'm gonna create something called shapes.

124
00:06:26.806 --> 00:06:30.412
Inside of shapes, I'm gonna create mod.rs.

125
00:06:30.412 --> 00:06:31.705
I'm gonna save that.

126
00:06:31.705 --> 00:06:36.160
See, notice it says files not included
module tree cuz there's already a mod.rs.

127
00:06:36.160 --> 00:06:37.528
I'm gonna go in here, I'm gonna go back.

128
00:06:37.528 --> 00:06:42.543
I'm gonna go to shapes, I'm gonna take
all of shapes, I'm gonna delete shapes.

129
00:06:42.543 --> 00:06:45.341
I'm gonna go over here and
I'm gonna paste in shapes.

130
00:06:45.341 --> 00:06:49.350
And this little warning will stick around
for a little bit as Rust analyzer updates.

131
00:06:49.350 --> 00:06:55.690
And so now we have shapes/mod.rs
as opposed to shapes.rs.

132
00:06:55.690 --> 00:06:58.380
So we just moved it because now we're
gonna kinda build out a module.

133
00:07:00.160 --> 00:07:03.460
We're also gonna perform some of
the worst math known to the universe,

134
00:07:03.460 --> 00:07:05.660
because it's irrelevant
how good our math is,

135
00:07:05.660 --> 00:07:09.357
but it shows something pretty cool,
all right, shows something pretty cool.

136
00:07:09.357 --> 00:07:13.020
So we're gonna scroll back down, and now
I want you to break it up even further.

137
00:07:13.020 --> 00:07:15.394
I want to have a rect where
we put the rectangle.

138
00:07:15.394 --> 00:07:17.627
I wanna have a circle
where we put the circle.

139
00:07:17.627 --> 00:07:21.180
And then I want area where
we just put the area trait.

140
00:07:21.180 --> 00:07:24.130
So I'll show you what we do here,
so let's go.

141
00:07:24.130 --> 00:07:27.489
I'm gonna create a couple of files,
area.rs.

142
00:07:27.489 --> 00:07:32.690
I'm gonna create,
what's the other one, rect.rs.

143
00:07:32.690 --> 00:07:35.839
I'm gonna create circle.rs.

144
00:07:35.839 --> 00:07:38.598
Now I'm gonna go back to my mod file and

145
00:07:38.598 --> 00:07:43.095
let's grab out just the area
trait definition, there it is.

146
00:07:43.095 --> 00:07:49.588
I'm gonna take that, delete it, go over
to area, put it right there, that's it.

147
00:07:49.588 --> 00:07:54.185
I'm gonna go back to our mod file,
and I'm gonna grab out the rectangle,

148
00:07:54.185 --> 00:07:57.759
plus I'm gonna grab out
the rectangle area definition.

149
00:07:57.759 --> 00:07:59.475
Take that out, boom.

150
00:07:59.475 --> 00:08:04.856
Then we're gonna go over to rectangle,
I'm gonna paste it.

151
00:08:04.856 --> 00:08:09.969
Do the same thing with circle,
go here, grab the circle definition,

152
00:08:09.969 --> 00:08:14.835
and its area definition, and
I'm gonna move that over to circle.

153
00:08:14.835 --> 00:08:15.840
I'm gonna go back to mod.

154
00:08:15.840 --> 00:08:18.600
I forgot about this little
float64 business going on here.

155
00:08:18.600 --> 00:08:22.940
So let's move that to the Area trait one,
so get out of here Area trait one.

156
00:08:22.940 --> 00:08:27.070
And now we have the Area trait
plus the implementation for

157
00:08:27.070 --> 00:08:29.660
float64 inside the area file.

158
00:08:29.660 --> 00:08:32.670
So just to recap everything
we just got done doing,

159
00:08:32.670 --> 00:08:36.730
the area.rs takes the trait and
the implementation for float64.

160
00:08:39.050 --> 00:08:43.432
Rectangle has the rectangle definition
plus the implementation for area.

161
00:08:45.650 --> 00:08:51.018
Circle has the circle definition
plus the implementation for area.

162
00:08:51.018 --> 00:08:54.390
And mod, what do we use in mod?

163
00:08:54.390 --> 00:09:01.324
Well, we need to tell Rust what we
want to export from our module.

164
00:09:01.324 --> 00:09:05.949
So I'm gonna say, hey, public mod circle,

165
00:09:05.949 --> 00:09:10.590
public mod rectangle, and public mod area.

166
00:09:11.740 --> 00:09:13.947
I'm letting Rust know what I export.

167
00:09:13.947 --> 00:09:18.058
And so right now,
the analyzer still hasn't caught up.

168
00:09:18.058 --> 00:09:18.991
We wanna LspRestart.

169
00:09:18.991 --> 00:09:21.600
Sometimes this helps catch everything up.

170
00:09:21.600 --> 00:09:23.893
You must delete your shapes.rs.

171
00:09:23.893 --> 00:09:28.070
If you don't, it won't be able
to kind of include it correctly.

172
00:09:28.070 --> 00:09:30.777
So to test it to make sure
you've done it correctly,

173
00:09:30.777 --> 00:09:34.098
you should get this file to
compile correctly, your main file,

174
00:09:34.098 --> 00:09:37.924
which notice that shapes no longer
has rect, circle, and area anymore.

175
00:09:37.924 --> 00:09:40.174
We've kind of created a deeper module.

176
00:09:40.174 --> 00:09:40.740
So I'll go like this.

177
00:09:40.740 --> 00:09:43.368
I'm just gonna delete that, and
I'll just use my importing,

178
00:09:43.368 --> 00:09:44.990
the code actions to import it.

179
00:09:44.990 --> 00:09:48.790
Notice that it's shapes rect Rect.

180
00:09:48.790 --> 00:09:53.077
So if I do the same thing for
circle, and I just auto import it,

181
00:09:53.077 --> 00:09:56.700
it'll be shapes rect Rect, circle Circle.

182
00:09:56.700 --> 00:09:59.698
Because that kinda define these
little submodules inside of my shapes

183
00:09:59.698 --> 00:10:00.820
module, right?

184
00:10:00.820 --> 00:10:05.730
So we're kind of creating a little
bit more enterprise application going

185
00:10:05.730 --> 00:10:08.193
on right now, feel the enterprise.

186
00:10:11.555 --> 00:10:16.238
And then I think, Wait a second.

187
00:10:18.467 --> 00:10:24.065
Okay, my cargo is just completely, or my
Rust analyzer is completely falling apart.

188
00:10:24.065 --> 00:10:29.384
I use Vim, by the way, and
so we gotta wait a second.

189
00:10:29.384 --> 00:10:33.356
All right, perfect, there we go, which
means I should have an error down here.

190
00:10:33.356 --> 00:10:34.563
This really should error.

191
00:10:34.563 --> 00:10:35.530
Why are you not erroring?

192
00:10:35.530 --> 00:10:36.779
So let's cargo build.

193
00:10:36.779 --> 00:10:38.983
If you've done this right,
you can go cargo run.

194
00:10:38.983 --> 00:10:42.927
So I knew this would be the problem,
area is not found in the scope, right?

195
00:10:42.927 --> 00:10:46.978
That's why we can't call area here,
so we need to import the Area trait.

196
00:10:46.978 --> 00:10:48.642
There we go, I now have the Area trait.

197
00:10:48.642 --> 00:10:52.125
So you should have something
that looks like this,

198
00:10:52.125 --> 00:10:55.854
use crate shapes rect Rect,
circle Circle area Area.

199
00:10:55.854 --> 00:11:01.000
I'm just kinda grabbing everything
out of that module, all swift-like.

200
00:11:01.000 --> 00:11:04.463
So now, if you've done it correctly,
you should be able to do this.

201
00:11:04.463 --> 00:11:05.730
But look at that, we have errors.

202
00:11:05.730 --> 00:11:07.180
Okay, so that's what was going on.

203
00:11:07.180 --> 00:11:09.251
So I'm gonna jump over to rectangle, and

204
00:11:09.251 --> 00:11:13.080
notice that we haven't satisfied
its import conditions, haven't we?

205
00:11:13.080 --> 00:11:18.290
So go to your rectangle file and you're
gonna have to go and import in area.

206
00:11:18.290 --> 00:11:22.448
I just used the auto importer again,
do that, bang, you're good to go.

207
00:11:22.448 --> 00:11:25.024
So super just means one module up.

208
00:11:25.024 --> 00:11:29.960
So I'm gonna go from rectangle to shapes,
into area, grab out the Area trait.

209
00:11:32.982 --> 00:11:34.009
And if you wanna bet,

210
00:11:34.009 --> 00:11:37.270
I bet you if we go to the circle one,
you have the same problem.

211
00:11:37.270 --> 00:11:40.350
So let's go to circle, and
look at that, the same problem.

212
00:11:40.350 --> 00:11:43.745
So let's import area, and
then we also don't have PI imported.

213
00:11:43.745 --> 00:11:49.271
Let's import PI from the 64-bit standard,
very important to do.

