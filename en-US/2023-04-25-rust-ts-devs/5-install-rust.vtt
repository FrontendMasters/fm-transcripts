WEBVTT

1
00:00:00.360 --> 00:00:03.676
So we're gonna go over a little bit of
a basic setup to make sure that you guys

2
00:00:03.676 --> 00:00:06.732
can have everything running on
your system, you're feeling good,

3
00:00:06.732 --> 00:00:08.120
and we can start programming.

4
00:00:08.120 --> 00:00:10.753
So for
those that have not set up TypeScript or

5
00:00:10.753 --> 00:00:14.260
Rust yet,
this will hopefully do everything for you.

6
00:00:14.260 --> 00:00:16.580
So create a folder wherever you
wanna create it, your favorite.

7
00:00:16.580 --> 00:00:22.101
Most favorite place for me,
that's gonna be personal/rust-typescript,

8
00:00:22.101 --> 00:00:24.760
however you want to set it up.

9
00:00:24.760 --> 00:00:27.570
Then inside the folder,
we should probably execute a few things.

10
00:00:27.570 --> 00:00:29.060
We should create an npm.

11
00:00:29.060 --> 00:00:32.740
We should npm install ts-node
typescript nodes/types.

12
00:00:32.740 --> 00:00:37.463
You can install your favorite version
of a TypeScript compiler, SWC, esbuild,

13
00:00:37.463 --> 00:00:38.842
whatever you wanna do.

14
00:00:38.842 --> 00:00:42.317
If you're proficient enough
to build your own setup,

15
00:00:42.317 --> 00:00:47.540
we're gonna be executing TypeScript a few
times, so do it the way you wanna do it.

16
00:00:47.540 --> 00:00:49.660
So I'm gonna just copy all of this.

17
00:00:49.660 --> 00:00:54.170
I'm gonna go over to my rust-typescript,
and I'm gonna npm init,

18
00:00:54.170 --> 00:00:59.175
npm install, ts-node typescript,
and node/types, and then tsc init.

19
00:00:59.175 --> 00:01:02.130
And then because we're such good,
okay, now.

20
00:01:03.790 --> 00:01:06.089
&gt;&gt; It's at type slash node.

21
00:01:06.089 --> 00:01:07.529
&gt;&gt; My goodness, I had it backwards.

22
00:01:07.529 --> 00:01:12.775
&gt;&gt; My goodness, yeah, npm,
I knew that, okay, it's types/node.

23
00:01:12.775 --> 00:01:16.349
Okay, so sometimes I type
examples in from my brain and

24
00:01:16.349 --> 00:01:18.770
not copy them from the command line.

25
00:01:18.770 --> 00:01:21.880
So things happen,
I'm just a victim right now.

26
00:01:21.880 --> 00:01:24.440
Okay, tsc of my own short-sightedness.

27
00:01:24.440 --> 00:01:25.620
Okay, so there we go.

28
00:01:25.620 --> 00:01:26.661
Create a tsc file.

29
00:01:26.661 --> 00:01:27.990
It's always good to have one of those.

30
00:01:27.990 --> 00:01:31.578
And since we are such
amazing safe programmers,

31
00:01:31.578 --> 00:01:35.614
let's jump down to the strict
portion of TypeScript.

32
00:01:35.614 --> 00:01:37.926
And let's make sure we have all
the things super safe, right?

33
00:01:37.926 --> 00:01:41.540
Because we are super safe programmer,
so I'm gonna go tsconfig.

34
00:01:41.540 --> 00:01:45.126
And I'm gonna go all
the way down to strict, and

35
00:01:45.126 --> 00:01:48.990
I'm just gonna take all
of these amazing options.

36
00:01:48.990 --> 00:01:52.908
Matt Pocock would be just so
happy with me right now.

37
00:01:52.908 --> 00:01:54.380
And go to right here.

38
00:01:54.380 --> 00:01:55.060
Take them all out.

39
00:01:55.060 --> 00:01:56.480
There we go.

40
00:01:56.480 --> 00:01:57.750
Look at how beautiful that is.

41
00:01:57.750 --> 00:01:59.220
Look at how safe we are.

42
00:01:59.220 --> 00:02:01.002
Practically Rust already.

43
00:02:01.002 --> 00:02:03.458
You just got to go down on it.

44
00:02:03.458 --> 00:02:05.330
I mean, technically,
you don't have to do this.

45
00:02:05.330 --> 00:02:08.432
I just think it's really good TypeScript
practice to always make sure you have

46
00:02:08.432 --> 00:02:11.158
the most strict version of TypeScript
because it's gonna save you,

47
00:02:11.158 --> 00:02:12.060
especially this one.

48
00:02:12.060 --> 00:02:13.980
This one's very interesting.

49
00:02:13.980 --> 00:02:14.750
There's another one.

50
00:02:14.750 --> 00:02:17.673
This one's super interesting as well.

51
00:02:17.673 --> 00:02:20.800
It changes how TypeScript
works a little bit.

52
00:02:20.800 --> 00:02:25.910
Great times, all right, you can enable,
disable, whatever you want.

53
00:02:25.910 --> 00:02:28.041
You don't have to do any of this.

54
00:02:28.041 --> 00:02:29.760
Next, we need to install Rust.

55
00:02:29.760 --> 00:02:30.770
So here you go.

56
00:02:30.770 --> 00:02:32.480
You can just go look for install Rust.

57
00:02:32.480 --> 00:02:36.870
You should find this very
benign script on the Internet.

58
00:02:36.870 --> 00:02:38.560
Don't worry, it's not a big deal.

59
00:02:38.560 --> 00:02:41.810
You should always execute scripts
you find on the Internet.

60
00:02:41.810 --> 00:02:43.550
Just pipe it right into your shell,

61
00:02:43.550 --> 00:02:47.500
maybe throw a little sudo in there just
to really assert your authority of trust.

62
00:02:47.500 --> 00:02:48.380
It's Rust, okay?

63
00:02:48.380 --> 00:02:49.120
It's reliable.

64
00:02:49.120 --> 00:02:52.540
It's gonna hold you safely while it
does whatever it does on your system.

65
00:02:52.540 --> 00:02:54.792
So to know that you've done it correctly,

66
00:02:54.792 --> 00:02:57.921
you should be able to call cargo
init in the same folder, and

67
00:02:57.921 --> 00:03:02.750
now you'll have a Rust project and a
TypeScript project all in the same folder.

68
00:03:02.750 --> 00:03:07.614
And of course, if you are using Vim or
Telescope, it is always good to make

69
00:03:07.614 --> 00:03:11.860
sure that you have all of your git
status stuff set up correctly.

70
00:03:11.860 --> 00:03:14.370
Cuz when you do a cargo init,
it does git status.

71
00:03:14.370 --> 00:03:17.520
Notice that I don't have, say,
node_modules ignored right now.

72
00:03:17.520 --> 00:03:21.790
So you might wanna make sure
that your gitignore is nice.

73
00:03:22.840 --> 00:03:26.340
So I'm gonna add in node_modules,
look at that.

74
00:03:26.340 --> 00:03:30.080
I'm gonna commit everything cuz
it turns out INITIAL COMMIT.

75
00:03:31.180 --> 00:03:35.660
Some fuzzy finders don't
find over files unless

76
00:03:35.660 --> 00:03:39.930
they're committed into the Git repository.

77
00:03:39.930 --> 00:03:41.314
So, just so you know.

78
00:03:41.314 --> 00:03:45.910
So for my VSCoders out there,
you may wanna disable inlay hints.

79
00:03:45.910 --> 00:03:47.106
They're very distracting.

80
00:03:47.106 --> 00:03:49.820
They pop up all over
the place as you type.

81
00:03:49.820 --> 00:03:53.080
There are really truly
poor user experience.

82
00:03:53.080 --> 00:03:55.987
Everyone I've ever seen use it
plus with Rust, gets confused, and

83
00:03:55.987 --> 00:03:57.220
they're just everywhere.

84
00:03:57.220 --> 00:03:59.716
And they're brightly colored and
they glow.

85
00:03:59.716 --> 00:04:01.680
I have no idea who made them.

86
00:04:01.680 --> 00:04:05.018
But if you have neovim and
you have inlay hints on, nice job.

87
00:04:05.018 --> 00:04:07.648
It actually is super cool to use
ghost text at the end of the line so

88
00:04:07.648 --> 00:04:09.662
it doesn't interrupt your code or
its spacing.

89
00:04:09.662 --> 00:04:11.216
It's beautiful.

90
00:04:11.216 --> 00:04:14.330
Also disabled Copilot if you have Copilot.

91
00:04:14.330 --> 00:04:17.200
I know Copilot is pretty
trendy these days.

92
00:04:17.200 --> 00:04:20.780
The problem with Copilot is that when
someone else types the program for you,

93
00:04:20.780 --> 00:04:23.384
you may be better and
better at recognizing valid code.

94
00:04:23.384 --> 00:04:27.630
But you yourself will have absolutely no
idea how to write the code by yourself.

95
00:04:27.630 --> 00:04:29.764
If we were to turn off Copilot
after the end of the day, and

96
00:04:29.764 --> 00:04:32.879
you try to write the struct, you probably
wouldn't even be able to write the struct

97
00:04:32.879 --> 00:04:36.370
in a simple implementation, because you've
just let somebody else write it for you.

98
00:04:36.370 --> 00:04:38.841
You learn heavily by interacting
with the physical world, so

99
00:04:38.841 --> 00:04:42.132
interact with the physical world with
these beautiful ten fingers that you have.

