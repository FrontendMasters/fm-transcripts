WEBVTT

1
00:00:00.342 --> 00:00:02.184
There's a lot of different
ways you can work with this.

2
00:00:02.184 --> 00:00:04.871
Just keep those things in mind, it's fun.

3
00:00:04.871 --> 00:00:07.908
All right, but still, we're still
going the wrong directional right now.

4
00:00:07.908 --> 00:00:09.510
That's been intentional.

5
00:00:09.510 --> 00:00:13.668
So let's try to do this
a little bit better.

6
00:00:13.668 --> 00:00:15.293
This still doesn't feel good to me, right.

7
00:00:15.293 --> 00:00:17.153
I don't really like what we've programmed.

8
00:00:17.153 --> 00:00:19.835
It feels a bit clunky and
I have to do it for circle.

9
00:00:19.835 --> 00:00:21.096
It's a lot of stuff.

10
00:00:21.096 --> 00:00:23.699
So let's make it worse before
we make it better, okay?

11
00:00:23.699 --> 00:00:24.759
The best way to go about it.

12
00:00:24.759 --> 00:00:29.252
So we're gonna create this really, really
super flawed version of a collision.

13
00:00:29.252 --> 00:00:35.169
Collision is only a collision
if the shape contains a point.

14
00:00:35.169 --> 00:00:37.861
So in other words,

15
00:00:37.861 --> 00:00:43.593
our algorithm would miss this, right?

16
00:00:43.593 --> 00:00:46.853
It would miss that because the point
is the center right here and

17
00:00:46.853 --> 00:00:48.708
the points are right here, right?

18
00:00:48.708 --> 00:00:50.728
No one contains each other's points.

19
00:00:50.728 --> 00:00:55.753
So this is a super flawed version of this,
but that's because doing actual

20
00:00:55.753 --> 00:01:00.406
2D circle to A a, b B access line
bounding box requires a lot of math.

21
00:01:00.406 --> 00:01:03.222
And I don't really wanna be thrown
out hypo newsies at people and

22
00:01:03.222 --> 00:01:05.688
all that fun stuff and
gets into a lot of fun angle stuff.

23
00:01:05.688 --> 00:01:09.230
So instead we're just gonna do
super flawed collision detection.

24
00:01:09.230 --> 00:01:11.000
All right.
This is our super flawed

25
00:01:11.000 --> 00:01:13.785
collision detection system for
early warnings.

26
00:01:13.785 --> 00:01:16.260
All right.

27
00:01:16.260 --> 00:01:20.991
So let's create a new file called
collisions.rs inside of our shapes folder.

28
00:01:20.991 --> 00:01:25.127
And then inside of our mod rs, make sure
you publicly exported collisions cuz it's

29
00:01:25.127 --> 00:01:27.623
very important to get that
collisions out there.

30
00:01:27.623 --> 00:01:29.337
So I'm gonna jump back in here.

31
00:01:29.337 --> 00:01:33.363
I'm gonna create the collisions.rs and

32
00:01:33.363 --> 00:01:37.627
I'm gonna go to mod.rs and do collisions.

33
00:01:37.627 --> 00:01:39.506
All right, fantastic.

34
00:01:39.506 --> 00:01:41.312
Okay, looks good.

35
00:01:41.312 --> 00:01:42.060
Everything's good.

36
00:01:42.060 --> 00:01:44.247
We have a collisions file,
it's being exported.

37
00:01:44.247 --> 00:01:47.129
That means I can import
anything in our main file.

38
00:01:47.129 --> 00:01:48.504
All right.

39
00:01:48.504 --> 00:01:53.350
So now what I'm gonna do is I'm gonna
implement a trait called collidable.

40
00:01:53.350 --> 00:01:55.878
With t this is where we're gonna
maximally write the suckiest code.

41
00:01:55.878 --> 00:01:57.888
So just be ready.

42
00:01:57.888 --> 00:02:02.404
All right, collidable that's gonna
have a function called collide,

43
00:02:02.404 --> 00:02:05.654
that takes a reference to self and
a reference to t.

44
00:02:05.654 --> 00:02:09.964
And then a second function collides,
which takes a reference to self and

45
00:02:09.964 --> 00:02:12.235
a reference to some list of t, right?

46
00:02:12.235 --> 00:02:16.827
So technically, it's just a view,
a slice into either a vector or an array.

47
00:02:16.827 --> 00:02:18.412
Are you guys ready for
the greatest thing ever?

48
00:02:18.412 --> 00:02:20.972
I feel like this is
the moment we gotta lean in.

49
00:02:20.972 --> 00:02:21.993
This is it.

50
00:02:21.993 --> 00:02:23.775
We're gonna do a bunch of typing.

51
00:02:23.775 --> 00:02:29.531
If you guys feel like you can't keep up,
I get it.

52
00:02:29.531 --> 00:02:32.356
This is gonna get really annoying for
a second, okay?

53
00:02:32.356 --> 00:02:37.053
Because it has to get really annoying
to really feel how good it can be.

54
00:02:37.053 --> 00:02:40.894
And this is the one thing about rust,
is that if you do something wrong,

55
00:02:40.894 --> 00:02:42.825
it can really become frustrating.

56
00:02:42.825 --> 00:02:46.894
We're already kinda going down a route
that are sending kinda some signals to me

57
00:02:46.894 --> 00:02:50.127
that I don't feel like we're
doing the right thing right now.

58
00:02:50.127 --> 00:02:51.929
Obviously, we're not doing anything for
performance.

59
00:02:51.929 --> 00:02:53.654
I'm doing the vector I'm
not doing a reference.

60
00:02:53.654 --> 00:02:55.384
There's things already wrong.

61
00:02:55.384 --> 00:02:59.875
But that's for the purpose of this but
even more so it feels like we're kinda

62
00:02:59.875 --> 00:03:03.819
getting to this weird duplication
heavy specification moments.

63
00:03:03.819 --> 00:03:07.820
So let's just quadruple that and
then we'll back it off, okay.

64
00:03:07.820 --> 00:03:10.811
So let's implement a trait
called collideble.

65
00:03:10.811 --> 00:03:14.515
It's gonna be generic over t and
it's gonna have two methods on it.

66
00:03:14.515 --> 00:03:18.804
Collide, which takes a reference
to self and a reference to t.

67
00:03:18.804 --> 00:03:21.500
And then B, it's gonna have collides,

68
00:03:21.500 --> 00:03:25.798
which is gonna take a reference to
self and a view into a list of t.

69
00:03:25.798 --> 00:03:28.765
So, let's do that now.

70
00:03:28.765 --> 00:03:33.817
So I'm gonna like this
PERB trait collidable t

71
00:03:33.817 --> 00:03:38.871
function collide takes
a reference to self and

72
00:03:38.871 --> 00:03:43.160
a reference to t and returns a Boolean.

73
00:03:43.160 --> 00:03:44.291
All right?

74
00:03:44.291 --> 00:03:44.970
Hey, wait a second.

75
00:03:44.970 --> 00:03:46.065
What the heck's going on here?

76
00:03:46.065 --> 00:03:48.188
Yeah.
This would be other, sorry.

77
00:03:48.188 --> 00:03:53.342
There we go now here
comes first magic moment.

78
00:03:53.342 --> 00:03:56.046
Are you ready we're not even using
us this but this is super magic.

79
00:03:56.046 --> 00:03:58.654
Are you ready I'm even
leaning forward okay.

80
00:03:58.654 --> 00:04:03.604
This is so cool that I want you
to copy the line add a little s,

81
00:04:03.604 --> 00:04:06.774
make this into that whole view thing.

82
00:04:09.919 --> 00:04:11.890
But we're not gonna leave it here.

83
00:04:11.890 --> 00:04:14.768
Okay, normally this is what you'd have for
an interface, right?

84
00:04:14.768 --> 00:04:16.084
But forget that racket,

85
00:04:16.084 --> 00:04:19.229
let's just implement it because
we already have collide.

86
00:04:19.229 --> 00:04:23.802
We already have a function so
that means we can go like this for other.

87
00:04:23.802 --> 00:04:29.685
We can like this, yeah, for other and
let's call this thing others.

88
00:04:29.685 --> 00:04:36.261
In others, self.collide.

89
00:04:36.261 --> 00:04:37.304
There we go.

90
00:04:37.304 --> 00:04:43.987
Let's go like this if self.collide
return true else return false.

91
00:04:43.987 --> 00:04:46.675
So first off,
what the heck just happened here?

92
00:04:46.675 --> 00:04:48.509
How did we just do that?

93
00:04:48.509 --> 00:04:50.004
Well, here's the deal.

94
00:04:50.004 --> 00:04:56.412
In a trait, if you have methods defined
on there, you can use those methods and

95
00:04:56.412 --> 00:05:01.183
other ones and
you can provide a default implementation.

96
00:05:01.183 --> 00:05:02.904
So this makes perfect sense, right?

97
00:05:02.904 --> 00:05:08.279
I can only use a singular item on self,
which is dot collide.

98
00:05:08.279 --> 00:05:12.056
And since it's generic over t,
those are the same types.

99
00:05:12.056 --> 00:05:18.276
So long as you implement collide,
I can implement collides.

100
00:05:18.276 --> 00:05:20.415
It's pretty cool, right?

101
00:05:20.415 --> 00:05:25.473
Yeah, someone right now in
chat is saying c sharp.

102
00:05:25.473 --> 00:05:26.470
I don't wanna hear about it, okay?

103
00:05:26.470 --> 00:05:27.559
I don't wanna hear about c sharp.

104
00:05:27.559 --> 00:05:28.579
This is not c sharp, okay?

105
00:05:28.579 --> 00:05:29.667
This is rust, it's cooler.

106
00:05:29.667 --> 00:05:31.810
You can't tweet about c sharp,
but you can tweet about rust.

107
00:05:31.810 --> 00:05:34.238
And that's what's important to developers.

108
00:05:34.238 --> 00:05:37.044
All right, so I've been told.

109
00:05:37.044 --> 00:05:41.403
All right, so we've done this we've
now implemented collide or collidable.

110
00:05:41.403 --> 00:05:44.766
Or sorry, we've implemented collides
on collidable generic over t.

111
00:05:44.766 --> 00:05:47.739
So now let's actually go
through our shapes and

112
00:05:47.739 --> 00:05:50.351
let's create the whole collides thing.

113
00:05:50.351 --> 00:05:51.509
All right, so here we go.

114
00:05:51.509 --> 00:05:53.544
So we need to do this right here.

115
00:05:53.544 --> 00:05:54.633
Where's my mouse?

116
00:05:54.633 --> 00:06:00.824
We the implement contains point for
rectangle and circle, okay.

117
00:06:00.824 --> 00:06:02.547
Contains points not too hard, right?

118
00:06:02.547 --> 00:06:04.535
So let's go over to rectangle and

119
00:06:04.535 --> 00:06:08.018
I'm gonna go up to the tip pity
top because I like to put my.

120
00:06:08.018 --> 00:06:12.439
For whatever reason me personally, I like
to put my implementation of rectangle,

121
00:06:12.439 --> 00:06:13.395
near rectangle.

122
00:06:13.395 --> 00:06:15.979
It just makes me feel,
I don't know, warm and fuzzy.

123
00:06:15.979 --> 00:06:18.950
I have these unreasonable ways
I like to organize things.

124
00:06:18.950 --> 00:06:21.810
One of them is I like to put
all properties at the top

125
00:06:21.810 --> 00:06:25.219
of the class then a constructor,
then the public methods,

126
00:06:25.219 --> 00:06:30.219
then our private methods, then our static
method, then our static private methods.

127
00:06:30.219 --> 00:06:32.148
I just have this way that
I like doing things for

128
00:06:32.148 --> 00:06:33.942
whatever reasons that's why am doing it.

129
00:06:33.942 --> 00:06:34.735
So here we go.

130
00:06:34.735 --> 00:06:36.394
Here is one of my
unreasonable things I do.

131
00:06:36.394 --> 00:06:37.652
So let's go like this.

132
00:06:37.652 --> 00:06:41.883
Let's implement a public
function contains point.

133
00:06:41.883 --> 00:06:44.576
This takes a reference to self and

134
00:06:44.576 --> 00:06:48.785
it takes a point which
is gonna be a float 64.

135
00:06:48.785 --> 00:06:53.520
My goodness float 64.

136
00:06:53.520 --> 00:06:56.113
And it's gonna return a Boolean.

137
00:06:56.113 --> 00:06:58.960
Now remember,
we're super good at rust at this point.

138
00:06:58.960 --> 00:07:00.938
So you should have used pattern matching.

139
00:07:00.938 --> 00:07:02.273
Why didn't you do that?

140
00:07:02.273 --> 00:07:03.380
So I wanna go x y.

141
00:07:03.380 --> 00:07:06.648
Look at that, look how cool that is, come
on, that's a little bit cool, isn't it?

142
00:07:06.648 --> 00:07:08.154
Now we have x and y.

143
00:07:08.154 --> 00:07:13.079
So how do we know if a point is within
an AABB and axis aligned bounding box?

144
00:07:13.079 --> 00:07:15.178
Well, it's really not all that hard.

145
00:07:15.178 --> 00:07:16.256
You got to like this.

146
00:07:16.256 --> 00:07:20.992
If self.x is less than or equal to x and

147
00:07:20.992 --> 00:07:27.948
self.x plus self.width is greater than or
equal to x.

148
00:07:27.948 --> 00:07:30.206
We're within the x-axis, right.

149
00:07:30.206 --> 00:07:32.091
So we project ourselves in the x.

150
00:07:32.091 --> 00:07:36.219
So now we do a little and over here
I'm gonna take that whole line and

151
00:07:36.219 --> 00:07:39.552
I'm gonna do the same thing but
I'm gonna do it for y.

152
00:07:39.552 --> 00:07:41.744
I'm just gonna replace x with y.

153
00:07:41.744 --> 00:07:49.208
So if self.y is less than y and
self.y plus self.

154
00:07:49.208 --> 00:07:52.557
Height, wow that would only work out for
squares not rectangles.

155
00:07:52.557 --> 00:07:54.954
Is greater than or equal to y.

156
00:07:54.954 --> 00:07:57.792
Then our y is also in line so
long as that's all true.

157
00:07:57.792 --> 00:08:03.177
Our rectangle our AABB contains
the point right, fantastic.

158
00:08:03.177 --> 00:08:05.347
So let's do the same thing for
circle this time.

159
00:08:05.347 --> 00:08:07.193
Jump over circle.

160
00:08:07.193 --> 00:08:09.802
Let's implement for circle.

161
00:08:09.802 --> 00:08:14.562
Let's have the function contains point
it's gonna take in a reference to self.

162
00:08:14.562 --> 00:08:17.410
It's gonna have a x.

163
00:08:17.410 --> 00:08:19.489
Good job destructuring by the way.

164
00:08:19.489 --> 00:08:20.378
Proud of you guys.

165
00:08:20.378 --> 00:08:24.395
I can tell you guys are learning,
feeling smoother and faster at this point.

166
00:08:24.395 --> 00:08:25.575
And we're gonna return a Boolean.

167
00:08:25.575 --> 00:08:26.831
Exact same thing.

168
00:08:26.831 --> 00:08:28.058
How do we do that with this?

169
00:08:28.058 --> 00:08:34.231
Well, we're gonna have to pull out
the old-fashioned Pythagorean theorem and

170
00:08:34.231 --> 00:08:38.603
do theoretically prove it return
x times x plus y times y.

171
00:08:38.603 --> 00:08:41.206
This has to be within our radius.

172
00:08:41.206 --> 00:08:42.711
But we can't just do that, right?

173
00:08:42.711 --> 00:08:44.512
Because that's just
anywhere within the plane.

174
00:08:44.512 --> 00:08:48.175
We have to do the difference between
rx and the difference between ry.

175
00:08:48.175 --> 00:08:52.462
So let's go like this,
let x equals self.x- x and

176
00:08:52.462 --> 00:08:56.013
then I'll just do this whole y thing.

177
00:08:56.013 --> 00:09:00.603
My goodness, x y, there we go.

178
00:09:00.603 --> 00:09:04.702
And now we have the difference is
really can be called dx at this point.

179
00:09:04.702 --> 00:09:08.112
So I can just rename this thing, dx and

180
00:09:08.112 --> 00:09:12.702
rename this, my goodness,
I called it dx, dy.

181
00:09:12.702 --> 00:09:14.379
There you go.

182
00:09:14.379 --> 00:09:16.179
That's probably a little bit nicer.

183
00:09:16.179 --> 00:09:20.842
So we get the differences and
now, this has to be less than or

184
00:09:20.842 --> 00:09:24.403
equal to self.radius times self.radius.

185
00:09:24.403 --> 00:09:26.825
All right, does that feel good?

186
00:09:26.825 --> 00:09:29.543
Feels good enough,
pretty much accurate and

187
00:09:29.543 --> 00:09:32.558
then don't forget to make
this function public.

188
00:09:32.558 --> 00:09:34.999
There we go.
We have implemented as much math as we're

189
00:09:34.999 --> 00:09:35.926
gonna have to do.

190
00:09:35.926 --> 00:09:40.559
Remember, we've made
the world's crappiest collision

191
00:09:40.559 --> 00:09:43.876
detection software for early warnings.

192
00:09:43.876 --> 00:09:45.760
There's a joke in there,
it's not early warnings.

193
00:09:45.760 --> 00:09:48.774
For a point to be contained,
you're already colliding.

194
00:09:48.774 --> 00:09:51.941
Significantly in some cases.

195
00:09:51.941 --> 00:09:52.545
All right.

196
00:09:52.545 --> 00:09:55.652
Anyways, early warnings,
that's what's important.

197
00:09:55.652 --> 00:09:58.678
All right, so now that we've done that,

198
00:09:58.678 --> 00:10:04.043
we need to now implement collidable
of generic rectangle for rectangle.

199
00:10:05.896 --> 00:10:07.754
Right cuz we need to
define what our t is so

200
00:10:07.754 --> 00:10:09.898
this is where it kinda gets annoying,
right?

201
00:10:09.898 --> 00:10:13.039
This is where I think all of our
decisions really got terrible.

202
00:10:13.039 --> 00:10:16.463
Because now I'm gonna
have to go like this,

203
00:10:16.463 --> 00:10:21.753
implement collidable rectangle for
it's not called a rectangle.

204
00:10:21.753 --> 00:10:25.886
We're gonna have to do that and
we're gonna have to implement this one,

205
00:10:25.886 --> 00:10:27.936
so we're gonna have to go through.

206
00:10:27.936 --> 00:10:30.915
And does rectangle collide
with another rectangle?

207
00:10:30.915 --> 00:10:36.093
Well, we know that it's colliding if one
of its points are contained within us,

208
00:10:36.093 --> 00:10:36.635
right?

209
00:10:36.635 --> 00:10:38.227
So we'll have to do this.

210
00:10:38.227 --> 00:10:45.065
For a point in a rectangle let's see,
other.

211
00:10:45.065 --> 00:10:47.540
Cuz remember, we have this iterator now so

212
00:10:47.540 --> 00:10:50.377
we can iterate over
the points of the rectangle.

213
00:10:50.377 --> 00:10:51.551
And we go like this.

214
00:10:51.551 --> 00:10:58.920
If point, or if self.contains point,
contains this point,

215
00:10:58.920 --> 00:11:03.794
then return true, else, return false.

216
00:11:03.794 --> 00:11:06.714
Now, there's plenty of things we're
doing wrong as far as math goes.

217
00:11:06.714 --> 00:11:08.213
Again, it's not the point.

218
00:11:08.213 --> 00:11:10.684
We're trying to drive
a different point here.

219
00:11:10.684 --> 00:11:15.580
So we've now defined how we can collide
from a rectangle to a rectangle.

220
00:11:15.580 --> 00:11:20.331
[SOUND] Let's do a circle now.

221
00:11:20.331 --> 00:11:21.941
I'm gonna do that.

222
00:11:21.941 --> 00:11:25.664
I'm gonna go over here and change
the collidable from rectangle to circle.

223
00:11:25.664 --> 00:11:28.464
Now I'm gonna have to import circle.

224
00:11:28.464 --> 00:11:31.741
And I'm gonna have to
change that to circle.

225
00:11:31.741 --> 00:11:35.772
And then we're probably we don't
have an iterator made for circle.

226
00:11:35.772 --> 00:11:42.718
So we're gonna have to probably do
something like return self.contains point,

227
00:11:42.718 --> 00:11:48.671
other.x, other.y and
make sure that that's like a point, right?

228
00:11:48.671 --> 00:11:49.716
Does this make sense, right?

229
00:11:49.716 --> 00:11:54.969
We're just like,
do you contain the circle's middle point?

230
00:11:54.969 --> 00:11:57.140
Man, this is a lot of specifying?

231
00:11:57.140 --> 00:12:02.268
Well, don't worry, we're only halfway
through specifying isn't that exciting?

232
00:12:02.268 --> 00:12:05.900
We have so
much more specification we can do.

233
00:12:05.900 --> 00:12:09.328
I'll give you guys a moment to catch up.

234
00:12:09.328 --> 00:12:13.070
&gt;&gt; It should be collidable for
circle pardon?

235
00:12:13.070 --> 00:12:14.921
&gt;&gt; Yeah, collidable of generic.

236
00:12:14.921 --> 00:12:17.772
So the generic is circle for rectangle.

237
00:12:17.772 --> 00:12:19.480
&gt;&gt; For rectangle, okay.

238
00:12:19.480 --> 00:12:23.856
&gt;&gt; So that means rectangle can now tell
if another rectangle is hitting it or

239
00:12:23.856 --> 00:12:25.948
if another circle's hitting it.

240
00:12:25.948 --> 00:12:29.571
But the other way isn't true, a circle
cannot tell if anything's hitting it yet

241
00:12:29.571 --> 00:12:31.231
cuz we haven't implemented it yet.

242
00:12:35.454 --> 00:12:37.261
I'm gonna highlight this.

243
00:12:37.261 --> 00:12:38.502
I'm gonna highlight that.

244
00:12:38.502 --> 00:12:40.470
And we're gonna take
a little yanking right here.

245
00:12:40.470 --> 00:12:43.598
And we're gonna need to go create this for
our circle.

246
00:12:43.598 --> 00:12:44.818
So you may wanna copy and

247
00:12:44.818 --> 00:12:48.310
paste that because it's gonna be
probably semi similar code here.

248
00:12:48.310 --> 00:12:54.940
Let's go to circle and
let's do the same thing.

249
00:12:54.940 --> 00:12:56.766
So I'm gonna paste in this.

250
00:12:56.766 --> 00:13:00.938
So collidable rectangle for
circle because remember, we're the circle.

251
00:13:00.938 --> 00:13:04.044
So we're gonna implement this, all right.

252
00:13:04.044 --> 00:13:06.172
We have to import rectangle.

253
00:13:06.172 --> 00:13:10.763
Well, don't you feel gross having
a circular import rectangle relies

254
00:13:10.763 --> 00:13:13.377
on circles circle relies on rectangle.

255
00:13:13.377 --> 00:13:16.544
Yeah, you should be having all of your
best programming skills telling you that

256
00:13:16.544 --> 00:13:17.970
what we're creating is terrible.

257
00:13:17.970 --> 00:13:18.482
This is good.

258
00:13:18.482 --> 00:13:20.283
You're doing the right thing here.

259
00:13:20.283 --> 00:13:21.416
So there we go.

260
00:13:21.416 --> 00:13:22.268
We've done that.

261
00:13:22.268 --> 00:13:23.435
Disgusting, right?

262
00:13:23.435 --> 00:13:24.886
All right, well let's do it again.

263
00:13:24.886 --> 00:13:26.984
Circle for circle.

264
00:13:26.984 --> 00:13:28.126
And there we go.

265
00:13:28.126 --> 00:13:30.615
We now have it written fantastic.

266
00:13:30.615 --> 00:13:33.861
Our circles can intersect other circles.

267
00:13:33.861 --> 00:13:36.592
Our rectangles can intersect circles.

268
00:13:36.592 --> 00:13:38.515
Circles can intersect rectangles.

269
00:13:38.515 --> 00:13:41.965
We have our cross section all defined,
right?

270
00:13:41.965 --> 00:13:44.722
Yeah, we've done this.

271
00:13:44.722 --> 00:13:47.954
Let's go to our main file, now that
we've created something super cool.

272
00:13:47.954 --> 00:13:51.941
And, let's create,
a circle and a rectangle.

273
00:13:51.941 --> 00:13:55.235
Actually, let's create two rectangles.

274
00:13:55.235 --> 00:13:57.420
I'm gonna call it rectangle1, rectangle2.

275
00:13:57.420 --> 00:13:59.104
And I'm gonna create two circles.

276
00:13:59.104 --> 00:14:02.043
So we haven't implemented default for
circle yet, which is just too bad.

277
00:14:02.043 --> 00:14:03.593
This one will be at 0.

278
00:14:05.193 --> 00:14:06.710
Zero.

279
00:14:06.710 --> 00:14:09.653
And let's see what's what is our radius.

280
00:14:09.653 --> 00:14:11.540
What's a good radius one?

281
00:14:11.540 --> 00:14:12.638
I like that radius.

282
00:14:14.561 --> 00:14:18.294
And circle two, it will be at 1.5.

283
00:14:18.294 --> 00:14:21.518
Let's just do that because that seems,
you can put whatever you want in here.

284
00:14:21.518 --> 00:14:23.565
Honestly, don't just.

285
00:14:23.565 --> 00:14:24.594
Don't do what I'm doing here.

286
00:14:24.594 --> 00:14:25.982
I'm gonna go like that or
do what I'm doing.

287
00:14:25.982 --> 00:14:27.886
I don't care what you do.

288
00:14:27.886 --> 00:14:28.760
Live free, okay?

289
00:14:28.760 --> 00:14:30.796
Don't define your circles based on me.

290
00:14:30.796 --> 00:14:32.412
All right?

291
00:14:32.412 --> 00:14:35.660
Right, cool.
So I have two rectangles, two circles.

292
00:14:35.660 --> 00:14:40.793
So if I've programmed
everything correctly,

293
00:14:40.793 --> 00:14:47.604
I should be able to go rectangle
collide with, rectangle two.

294
00:14:47.604 --> 00:14:49.711
We gotta do a reference,
because we defined it as a reference.

295
00:14:49.711 --> 00:14:50.472
Look at that.

296
00:14:50.472 --> 00:14:51.138
We did it.

297
00:14:51.138 --> 00:14:51.841
It's successful.

298
00:14:51.841 --> 00:14:53.357
It's saying, everything's good.

299
00:14:53.357 --> 00:14:55.505
So, long as you've programmed this
correctly, you should be able to do that.

300
00:14:55.505 --> 00:15:01.975
Which means I should also be
able to do to circle two.

301
00:15:01.975 --> 00:15:02.813
My goodness.

302
00:15:02.813 --> 00:15:03.970
What did I call it?

303
00:15:03.970 --> 00:15:07.522
I call them by their full name.

304
00:15:07.522 --> 00:15:09.239
Look at that, we did it.

305
00:15:09.239 --> 00:15:10.902
Does this look good?

306
00:15:10.902 --> 00:15:13.713
All right, ultimate final challenge.

307
00:15:13.713 --> 00:15:16.806
Can the circle collide with the rectangle?

308
00:15:16.806 --> 00:15:17.895
We've done it.

309
00:15:17.895 --> 00:15:21.040
Man how's that feel everybody?

310
00:15:21.040 --> 00:15:21.967
Pretty horrible?

311
00:15:21.967 --> 00:15:23.017
All right.

312
00:15:23.017 --> 00:15:25.984
Well, don't worry,
we're gonna make it better, all right?

313
00:15:25.984 --> 00:15:29.550
We're about to show what I
consider like one of my just.

314
00:15:29.550 --> 00:15:33.848
Sometimes, have you ever been
a hammer in search of a nail?

315
00:15:33.848 --> 00:15:38.384
When I discover something new it just
makes me feel like a hammer in search of

316
00:15:38.384 --> 00:15:38.893
a nail.

317
00:15:38.893 --> 00:15:42.210
I get so excited on the inside and
I just wanna make everything do it.

318
00:15:42.210 --> 00:15:47.151
So, now that we've done all that,
we now have all this code.

319
00:15:47.151 --> 00:15:48.997
Holy cow, way too much code.

320
00:15:48.997 --> 00:15:51.473
So, the code is a bit similar.

321
00:15:51.473 --> 00:15:52.700
It's a bit ugly.

322
00:15:52.700 --> 00:15:54.297
We have circular references.

323
00:15:54.297 --> 00:15:55.729
It's repetitive.

324
00:15:55.729 --> 00:15:58.659
You can just tell we're
doing the wrong thing, but

325
00:15:58.659 --> 00:16:01.058
you may not know how
to do the right thing.

326
00:16:01.058 --> 00:16:02.398
And that's always a problem.

327
00:16:02.398 --> 00:16:05.986
So, the good news is,
it's not that we have too many traits,

328
00:16:05.986 --> 00:16:08.828
we just don't have the right and
enough traits.

329
00:16:08.828 --> 00:16:10.850
We don't have the right ones or
enough of them.

330
00:16:10.850 --> 00:16:11.350
So let's.

331
00:16:13.297 --> 00:16:16.272
Make some more traits, are you ready for
this I'm ready, I'm excited.

