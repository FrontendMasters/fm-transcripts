WEBVTT

1
00:00:00.350 --> 00:00:02.747
&gt;&gt; Jafar Husain: So we've covered
subjects, we've covered Observables,

2
00:00:02.747 --> 00:00:05.238
we've covered subscriptions,
we've covered schedulers,

3
00:00:05.238 --> 00:00:06.789
we've pretty much covered the gamut.

4
00:00:06.789 --> 00:00:10.468
Is there any other questions you guys had?

5
00:00:10.468 --> 00:00:11.235
By all means, yeah.

6
00:00:11.235 --> 00:00:15.937
&gt;&gt; Speaker 2: What do we have to do to
get the observable into JavaScript,

7
00:00:15.937 --> 00:00:19.234
write our local TC39 representative?

8
00:00:19.234 --> 00:00:22.554
&gt;&gt; Jafar Husain: I don't
think that'll work.

9
00:00:22.554 --> 00:00:24.954
Realistically, I mean,
I gotta be honest with you.

10
00:00:24.954 --> 00:00:28.371
Observable in JavaScript is not really
gonna make much of a difference to your

11
00:00:28.371 --> 00:00:29.378
day-to-day lives.

12
00:00:29.378 --> 00:00:33.174
So let's say tomorrow the committee said,
and I think this is a long shot, they

13
00:00:33.174 --> 00:00:37.382
said, Observable's the best thing ever, we
need to get it into JavaScript right now.

14
00:00:37.382 --> 00:00:39.995
Ask yourself this, how would it
change the way in which you coded?

15
00:00:42.246 --> 00:00:45.141
&gt;&gt; Jafar Husain: At least the current
observable proposal has no methods.

16
00:00:45.141 --> 00:00:47.624
It doesn't have map,
it doesn't have filter.

17
00:00:47.624 --> 00:00:52.269
Now maybe six months from now, at the rate
the committee works, it'll have a map and

18
00:00:52.269 --> 00:00:53.258
a filter method.

19
00:00:53.258 --> 00:00:55.062
How's that gonna change
the way in which you code?

20
00:00:55.062 --> 00:00:57.672
You're still gonna have to take
the observable in the framework.

21
00:00:57.672 --> 00:01:01.836
And adapt it into the RX observable to
get access to the galaxy of methods that

22
00:01:01.836 --> 00:01:03.279
are on the RX observable.

23
00:01:03.279 --> 00:01:06.546
And so frankly, that's one of the reasons
why a lot of people have questioned

24
00:01:06.546 --> 00:01:09.321
whether observable in the standard
is actually valuable or not.

25
00:01:09.321 --> 00:01:13.284
One of the reasons why we were pursuing
it was to get it into the browser so

26
00:01:13.284 --> 00:01:18.125
that the browser could take event targets
and implement them as observables instead.

27
00:01:18.125 --> 00:01:20.591
Sorry, event targets are the things
with the add event list or

28
00:01:20.591 --> 00:01:21.831
remove event list or.

29
00:01:21.831 --> 00:01:24.610
Add event list or remove event list
unless there's a well-known crappy API.

30
00:01:24.610 --> 00:01:27.884
It's a terrible API and
it's really unergonomic to use.

31
00:01:27.884 --> 00:01:29.398
It also doesn't really compose well.

32
00:01:29.398 --> 00:01:33.387
You've seen how awkward, remember all
that awkwardness where we had to store

33
00:01:33.387 --> 00:01:35.571
the handler to the event and
then put it in?

34
00:01:35.571 --> 00:01:40.005
If you try and compose event targets, you
realize that you actually need to create

35
00:01:40.005 --> 00:01:43.474
a map where you're associating
event names with handlers, and

36
00:01:43.474 --> 00:01:45.287
it's actually very expensive.

37
00:01:45.287 --> 00:01:46.631
So that's one of the reasons why event

38
00:01:46.631 --> 00:01:48.314
targets are just not
a very well designed type.

39
00:01:48.314 --> 00:01:50.096
They're very expensive to compose,

40
00:01:50.096 --> 00:01:54.059
vis a vis the observables which can just
return these little subscription objects.

41
00:01:54.059 --> 00:01:58.351
And if you notice what's going on with
Observable or composing observables, or

42
00:01:58.351 --> 00:02:02.593
composing observers and we're composing
subscriptions all at the same time.

43
00:02:02.593 --> 00:02:04.072
And that's what makes
the whole thing work.

44
00:02:04.072 --> 00:02:07.722
It's actually a beautiful composition
of three different types that are all

45
00:02:07.722 --> 00:02:09.133
composable at the same time.

46
00:02:09.133 --> 00:02:11.936
It's very much more awkward
to do that with event target.

47
00:02:11.936 --> 00:02:14.597
And if you had an event target,
I think with add event list or

48
00:02:14.597 --> 00:02:18.341
remove event list and you map something,
what would you be mapping, which event?

49
00:02:18.341 --> 00:02:21.000
Remember, cuz it publishes a whole
bunch of different events.

50
00:02:21.000 --> 00:02:23.101
So we were interested in Observable,

51
00:02:23.101 --> 00:02:27.695
we still are interested in Observable as
a better event target, but at the moment,

52
00:02:27.695 --> 00:02:31.853
the web platform guys are not entirely
convinced that it's a great thing.

53
00:02:31.853 --> 00:02:35.297
I disagree with them, I think it's
a great thing, but that's why I think

54
00:02:35.297 --> 00:02:38.478
the standardization process is
moving really slowly in this area.

55
00:02:38.478 --> 00:02:43.119
Honestly, it's more a thing that
we're doing for the browser.

56
00:02:43.119 --> 00:02:47.262
You folks, you got MPM, so
it's really just a couple of keys away for

57
00:02:47.262 --> 00:02:50.419
you to be able to get the full
galaxy of RX operators.

58
00:02:50.419 --> 00:02:53.853
I'm always surprised when developers
really care about this because I don't

59
00:02:53.853 --> 00:02:55.476
think it really much matters to you.

60
00:02:57.756 --> 00:02:59.183
&gt;&gt; Jafar Husain: Even if in
like five years we had all

61
00:02:59.183 --> 00:03:02.040
the operators in our switches all
stretched it would be hard to get all

62
00:03:02.040 --> 00:03:03.730
those approved through the committee.

63
00:03:03.730 --> 00:03:07.961
Even if we were missing one you'd still
end up having to adapt the Observable.

64
00:03:07.961 --> 00:03:10.844
So I wouldn't worry so
much about standardization.

65
00:03:10.844 --> 00:03:15.380
&gt;&gt; Speaker 2: Wouldn't a big benefit
of standardization be that we

66
00:03:15.380 --> 00:03:20.320
would have a set standard where
different libraries could

67
00:03:20.320 --> 00:03:23.718
then take advantage of having-
&gt;&gt; Jafar Husain: For interoperability?

68
00:03:23.718 --> 00:03:24.606
&gt;&gt; Speaker 2: Contracts email.

69
00:03:24.606 --> 00:03:27.797
&gt;&gt; Jafar Husain: Yeah, yeah, I mean, but
promises, before they were standardized,

70
00:03:27.797 --> 00:03:29.509
they had the interoperability spec.

71
00:03:29.509 --> 00:03:34.944
And that, honestly did just as good a job
for libraries being able to interoperate.

72
00:03:34.944 --> 00:03:37.828
And realistically, if we don't get
the through standardization process,

73
00:03:37.828 --> 00:03:40.727
I imagine that that's exactly what
we'll end up doing with the Observable.

74
00:03:40.727 --> 00:03:44.113
We'll come up with an interoperability
spec to make sure all the different

75
00:03:44.113 --> 00:03:45.520
libraries can interoperate.

76
00:03:45.520 --> 00:03:47.042
&gt;&gt; Speaker 3: Well, isn't that,

77
00:03:47.042 --> 00:03:51.956
so another benefit though is just
less bits having to be sent across?

78
00:03:51.956 --> 00:03:55.299
&gt;&gt; Jafar Husain: Yeah, but realistically
look at Blue Bird and how many different

79
00:03:55.299 --> 00:03:59.268
methods are on Blue Bird, for
example, or the other common errors.

80
00:03:59.268 --> 00:04:02.874
It's gonna be really hard to get all
those methods on JavaScript, and

81
00:04:02.874 --> 00:04:06.922
there's always a trade-off between
keeping the language minimal, right?

82
00:04:06.922 --> 00:04:10.845
And because JavaScript runs in some
pretty resource constrained places where,

83
00:04:10.845 --> 00:04:13.046
I think,
people never thought it would run.

84
00:04:13.046 --> 00:04:17.511
Embedded devices, and so putting more and
more of the standard library makes that

85
00:04:17.511 --> 00:04:21.604
difficult, especially with how
incredibly useful and effective NPM is.

86
00:04:21.604 --> 00:04:25.032
And so that's the trade-off that
the committee is thinking about.

87
00:04:25.032 --> 00:04:28.242
It's a constant thing that standards
committees have to think about.

88
00:04:28.242 --> 00:04:30.995
What belongs in a language and
what doesn't belong in a language?

89
00:04:30.995 --> 00:04:31.950
It's a hard problem.

