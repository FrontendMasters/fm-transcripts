WEBVTT

1
00:00:00.090 --> 00:00:02.630
&gt;&gt; Jafar Husain: Actually I don't know how
many people are familiar with the idea of

2
00:00:02.630 --> 00:00:03.560
an image viewer.

3
00:00:03.560 --> 00:00:05.080
But for those of you out there.

4
00:00:05.080 --> 00:00:05.920
Who use Reddit.

5
00:00:05.920 --> 00:00:10.070
It's got a lot of the, what I think
are called picture oriented stuff.

6
00:00:10.070 --> 00:00:12.640
It's where folks just post pictures.

7
00:00:12.640 --> 00:00:15.197
It's where your time
goes to die in general.

8
00:00:15.197 --> 00:00:17.150
You get to browse those forever, right.

9
00:00:17.150 --> 00:00:19.150
I know I love doing it.

10
00:00:19.150 --> 00:00:23.700
And after a while I thought this would be
a pretty cool little app to build as part

11
00:00:23.700 --> 00:00:26.660
of demonstrating just how
powerful RX could be.

12
00:00:26.660 --> 00:00:27.812
The idea's pretty simple.

13
00:00:27.812 --> 00:00:31.836
There's a drop down list here where you
can pick between different sub Reddits,

14
00:00:31.836 --> 00:00:32.730
ie, different.

15
00:00:32.730 --> 00:00:33.975
They're like a little bit like,

16
00:00:33.975 --> 00:00:36.913
it you're not familiar with Reddit
they're like a little bit like channels.

17
00:00:36.913 --> 00:00:42.210
Like on a TV, you pick different
subreddits and then you can click

18
00:00:42.210 --> 00:00:47.790
Next to go to the next image and
Back to go to the previous image.

19
00:00:47.790 --> 00:00:50.802
So this is a app that seems really,
really simple but

20
00:00:50.802 --> 00:00:54.030
it's actually a lot more
complex than one might think.

21
00:00:55.730 --> 00:01:00.491
Just so you know, I've built you a little
helper function in the index.js file,

22
00:01:00.491 --> 00:01:03.052
just to get the images for
a particular sub.

23
00:01:03.052 --> 00:01:07.274
So it's gonna basically create
an observable that will just give

24
00:01:07.274 --> 00:01:12.198
you a single array of the first 200
images available for that subreddit.

25
00:01:12.198 --> 00:01:15.571
But it turns out that
although this seems simple,

26
00:01:15.571 --> 00:01:19.600
there's a lot of considerations
we have to think through.

27
00:01:19.600 --> 00:01:23.740
Like for example, some of these
images might not be valid, right.

28
00:01:23.740 --> 00:01:25.470
So you might go to them and
you might get an error.

29
00:01:25.470 --> 00:01:28.690
In which case,
you'd wanna display an error placeholder.

30
00:01:28.690 --> 00:01:31.960
Another thing you might wanna do is you
might wanna actually confirm that it's

31
00:01:31.960 --> 00:01:34.820
a real image and
fully preload it before displaying it.

32
00:01:34.820 --> 00:01:35.530
Because if you try and

33
00:01:35.530 --> 00:01:39.310
display a large image, the screen will
just go black while it gets loaded.

34
00:01:39.310 --> 00:01:42.900
So when we hit next, what we'd like
to do is preload the image, and

35
00:01:42.900 --> 00:01:46.090
once it's preloaded, then and only then do
we want to display it over the old image.

36
00:01:47.180 --> 00:01:50.070
Also, it would be nice, and most of
the time, when you're building an app for

37
00:01:50.070 --> 00:01:53.040
UX purposes, to display a progress bar.

38
00:01:53.040 --> 00:01:56.190
Like, maybe when somebody clicks next or
changes a sub,

39
00:01:56.190 --> 00:02:00.520
we can display a little progress
bar on top of the images.

40
00:02:00.520 --> 00:02:03.630
Just to show the user
that they've responded.

41
00:02:03.630 --> 00:02:06.690
So that's basically in general
how we want the app to work.

42
00:02:06.690 --> 00:02:07.464
Also you never know.

43
00:02:07.464 --> 00:02:09.083
Reddit can go down, so

44
00:02:09.083 --> 00:02:14.710
if an error occurs we want to after
maybe a reasonable number of retries.

45
00:02:14.710 --> 00:02:17.650
We'd want to show the user an error
message and tell them to come back and

46
00:02:17.650 --> 00:02:18.170
try later.

47
00:02:18.170 --> 00:02:22.100
So that's basically kind of
the app that we're building.

48
00:02:22.100 --> 00:02:24.740
Now, you could think this
is a pretty simple app but

49
00:02:24.740 --> 00:02:27.050
it practices actually a ton, well a ton.

50
00:02:27.050 --> 00:02:31.517
There's quite a few things that could
go wrong when you are building an app

51
00:02:31.517 --> 00:02:32.246
like this.

52
00:02:32.246 --> 00:02:36.130
Can anybody like before I show you what
are some of the race conditions that you

53
00:02:36.130 --> 00:02:36.980
could run into?

54
00:02:40.358 --> 00:02:44.880
&gt;&gt; Student1: You changed subreddits
before the image is loaded?

55
00:02:44.880 --> 00:02:47.870
&gt;&gt; Jafar Husain: Sorry, yeah, changed
that so I've begun loading an image, so

56
00:02:47.870 --> 00:02:49.570
I pressed next, and
I began loading an image.

57
00:02:49.570 --> 00:02:53.020
And then I changed subreddits,
and now we have a race, right?

58
00:02:53.020 --> 00:02:57.430
We might get the first image from
the new subreddit really fast, but

59
00:02:57.430 --> 00:02:59.710
the image we were loading
before takes a long time, and

60
00:02:59.710 --> 00:03:03.800
we end up showing the old image on top
of the new image from the new subreddit.

61
00:03:03.800 --> 00:03:06.570
So there's a classic example of erase,
right?

62
00:03:06.570 --> 00:03:07.250
What happens if?

63
00:03:07.250 --> 00:03:08.260
Yeah?
&gt;&gt; Student2: The user

64
00:03:08.260 --> 00:03:09.560
attempts to click more than once?

65
00:03:09.560 --> 00:03:12.620
&gt;&gt; Jafar Husain: Yeah,
if they click next 50 times, I mean,

66
00:03:12.620 --> 00:03:16.610
unless we've some sort of controlling of
the erase there, they'll just get whatever

67
00:03:16.610 --> 00:03:21.090
image happens to load last, not the last
image they told to load, right?

68
00:03:21.090 --> 00:03:23.829
We wanna avoid concurrently
loading all 50 images.

69
00:03:24.990 --> 00:03:25.900
Anything else?

70
00:03:27.510 --> 00:03:29.300
&gt;&gt; Student2: They click the back button?

71
00:03:29.300 --> 00:03:32.510
&gt;&gt; Jafar Husain: Yeah, back button, same
problem, or back, next, back, next, back,

72
00:03:32.510 --> 00:03:35.080
next, next, next, back, back, right?

73
00:03:35.080 --> 00:03:38.830
That's where you can get into some
problems, so you need to make sure.

74
00:03:38.830 --> 00:03:42.807
And what we'd also like to do,
I mean just for usability,

75
00:03:42.807 --> 00:03:45.010
while a new sub is being loaded.

76
00:03:46.190 --> 00:03:48.670
We might wanna stop as a result.

77
00:03:48.670 --> 00:03:51.500
We might wanna stop responding
to the back and next buttons.

78
00:03:51.500 --> 00:03:54.830
That might be a way in which I
would handle this to make sure that

79
00:03:54.830 --> 00:03:58.300
they don't start navigating while they
switch the sub, until a new sub comes up.

