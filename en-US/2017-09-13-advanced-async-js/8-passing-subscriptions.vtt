WEBVTT

1
00:00:00.500 --> 00:00:02.650
&gt;&gt; Jafar Husain: Thank you to
our intrepid volunteers here for

2
00:00:02.650 --> 00:00:05.210
helping us with a little
roleplay exercise.

3
00:00:05.210 --> 00:00:08.100
As we can take a quick look
at the code on screen here,

4
00:00:08.100 --> 00:00:09.850
let's remind ourselves of what we've done.

5
00:00:09.850 --> 00:00:14.655
We've created an observable of all
the clicks from now until eternity, right?

6
00:00:14.655 --> 00:00:15.591
And we're gonna call that me.

7
00:00:15.591 --> 00:00:19.730
I'm gonna be the clicks observable,
right, for this particular button.

8
00:00:19.730 --> 00:00:23.280
Now, what we do next,
is we map over clicks, and

9
00:00:23.280 --> 00:00:26.170
we create a new observable,
right here, and

10
00:00:26.170 --> 00:00:28.230
that's going to be our our friend-
&gt;&gt; David: David.

11
00:00:28.230 --> 00:00:32.100
&gt;&gt; Jafar Husain: David, so David is the
observable we get from mapping over me,

12
00:00:32.100 --> 00:00:36.200
and he's gonna basically take
every value I give him, and

13
00:00:36.200 --> 00:00:38.300
let's just say, he's gonna add one to it.

14
00:00:38.300 --> 00:00:41.900
In practice, we're pulling off the offset
x, but that's just some transformation

15
00:00:41.900 --> 00:00:44.980
on the data that I deliver to
him when I call him next, right?

16
00:00:44.980 --> 00:00:47.960
So from now on, I'm just gonna give
him numbers, and he can call next and

17
00:00:47.960 --> 00:00:49.470
just add one to those numbers, right?

18
00:00:49.470 --> 00:00:54.220
So if I call next on you, right,
next five, you're gonna turn around and

19
00:00:54.220 --> 00:00:55.790
say to-
&gt;&gt; Soren: Soren.

20
00:00:55.790 --> 00:00:57.439
&gt;&gt; Jafar Husain: Soren, next six.

21
00:00:59.274 --> 00:01:03.163
&gt;&gt; Jafar Husain: So Soren, here, is gonna
be subscribing to David, and then David

22
00:01:03.163 --> 00:01:07.956
will see that David, in turn, subscribes
to me, and then, so the subscriptions

23
00:01:07.956 --> 00:01:12.274
are gonna flow up, and I'm gonna hand
David my own subscription object.

24
00:01:12.274 --> 00:01:16.440
And you're gonna turn around and
hand Soren your subscription object.

25
00:01:16.440 --> 00:01:19.740
Then at some later time,
usually when somebody clicks the button,

26
00:01:19.740 --> 00:01:21.890
I'm gonna call next, right?

27
00:01:21.890 --> 00:01:23.800
So I'm gonna say next five, and

28
00:01:23.800 --> 00:01:26.200
then you are going to say-
&gt;&gt; David: Next six.

29
00:01:26.200 --> 00:01:27.580
&gt;&gt; Jafar Husain: Right.

30
00:01:27.580 --> 00:01:28.240
&gt;&gt; Soren: Six.

31
00:01:28.240 --> 00:01:30.780
&gt;&gt; Jafar Husain: Yeah, right, and
so you'd log that to the console.

32
00:01:30.780 --> 00:01:34.080
So this is how we're gonna step through
the code as we actually go through

33
00:01:34.080 --> 00:01:35.320
this exercise.

34
00:01:35.320 --> 00:01:39.130
So it's amazing what you can accomplish
when you don't mind looking ridiculous, so

35
00:01:39.130 --> 00:01:41.710
thank you do our volunteers.

36
00:01:41.710 --> 00:01:43.073
So what we're gonna do here,

37
00:01:43.073 --> 00:01:48.400
is we're first going to
&gt;&gt; Jafar Husain: We're gonna step over,

38
00:01:48.400 --> 00:01:53.560
and we're gonna see what happens when
you call subscribe here on David.

39
00:01:53.560 --> 00:01:54.260
&gt;&gt; Soren: Subscribe.

40
00:01:54.260 --> 00:01:55.880
&gt;&gt; Jafar Husain: All right,
so let's see what happens.

41
00:01:57.050 --> 00:01:57.940
Where do we find ourselves?

42
00:01:57.940 --> 00:02:01.822
Well, we find ourselves in the other
system's functions create map, but

43
00:02:01.822 --> 00:02:04.260
I'll put my breakpoint right here.

44
00:02:04.260 --> 00:02:07.510
And now, we find ourselves
in the subscribe of David.

45
00:02:07.510 --> 00:02:08.660
So David, what's he gonna do?

46
00:02:08.660 --> 00:02:12.470
Well, he's gonna turn around and
subscribe to me.

47
00:02:12.470 --> 00:02:13.140
&gt;&gt; David: Subscribe.

48
00:02:13.140 --> 00:02:14.770
&gt;&gt; Jafar Husain: Right, subscribe.

49
00:02:14.770 --> 00:02:19.550
So if we stepped into this,
where do we find ourselves now?

50
00:02:19.550 --> 00:02:22.800
We find ourselves in the subscribe
of the fromEvent observable, right?

51
00:02:22.800 --> 00:02:25.470
So I say cool, I'm gonna hook
up the handler to the click,

52
00:02:25.470 --> 00:02:30.280
and then I'm gonna turn around and
hand you my subscription, right?

53
00:02:32.510 --> 00:02:34.260
Here's my subscription, and you are gonna?

54
00:02:35.400 --> 00:02:36.440
&gt;&gt; David: Here's my subscription.

55
00:02:36.440 --> 00:02:37.091
&gt;&gt; Soren: Thanks.
&gt;&gt; Jafar Husain: Hand

56
00:02:37.091 --> 00:02:38.395
the subscription to David.

57
00:02:38.395 --> 00:02:43.409
[LAUGH] And if I step over that,
sure enough, we see we're in the place

58
00:02:43.409 --> 00:02:47.742
of the code where my subscription
has been handed to David.

59
00:02:47.742 --> 00:02:55.249
David's handed it to Soran by returning
it, and now, the program ends.

60
00:02:55.249 --> 00:02:57.440
Well, at least it ends until
somebody clicks something.

61
00:02:57.440 --> 00:03:01.460
So I'm going to put a little
break point here, right here.

62
00:03:01.460 --> 00:03:03.630
So now,
let's say somebody clicks a button.

63
00:03:03.630 --> 00:03:06.560
We are going to jump to this
particular piece of code.

64
00:03:06.560 --> 00:03:07.750
Whoops, hold on.

65
00:03:07.750 --> 00:03:11.220
Maybe I will click that button, right?

66
00:03:11.220 --> 00:03:15.100
So now, what I'm gonna do,
is I'm gonna call,

67
00:03:15.100 --> 00:03:19.130
once now that I received that event click,
I'm gonna call next on your observer.

68
00:03:19.130 --> 00:03:21.100
The one that you handed to
be when you subscribed.

69
00:03:21.100 --> 00:03:23.820
So I'm gonna call Next five, right?

70
00:03:23.820 --> 00:03:25.140
&gt;&gt; David: All right.

71
00:03:25.140 --> 00:03:25.950
Next six.

72
00:03:25.950 --> 00:03:26.600
&gt;&gt; Jafar Husain: Right.

73
00:03:26.600 --> 00:03:27.630
&gt;&gt; Soren: Here's a six.

74
00:03:27.630 --> 00:03:31.222
&gt;&gt; Jafar Husain: Right, so here we've
stepped into your code, right here.

75
00:03:31.222 --> 00:03:34.312
This is the map observer, right?

76
00:03:34.312 --> 00:03:36.222
We're gonna apply that
projection function to V.

77
00:03:41.131 --> 00:03:43.991
&gt;&gt; Jafar Husain: And now, finally, we find
ourselves all the way out into that map

78
00:03:43.991 --> 00:03:45.610
function that we passed in, right?

79
00:03:45.610 --> 00:03:48.660
So there is where you're calling the map
function that was passed into you when you

80
00:03:48.660 --> 00:03:55.230
were created, and you take that
result then you send it to Soren.

81
00:03:55.230 --> 00:03:59.430
So we step in here, and finally,
we find ourselves in Soren's next handler.

82
00:03:59.430 --> 00:04:00.500
Now, we print to the console.

83
00:04:00.500 --> 00:04:02.093
Does that make sense?

84
00:04:02.093 --> 00:04:05.839
So now, hopefully it's clear why,
let's say, for example, now,

85
00:04:05.839 --> 00:04:07.948
Sorin wanted to unsubscribe, right?

86
00:04:07.948 --> 00:04:09.902
What we did,
remember that optimization we did?

87
00:04:09.902 --> 00:04:14.330
When David subscribed to me,
I just handed David my subscription.

88
00:04:14.330 --> 00:04:16.590
But instead of David
creating a new subscription,

89
00:04:16.590 --> 00:04:19.320
he just took my subscription and
handed it directly to Soren.

90
00:04:19.320 --> 00:04:23.350
The reason why that works is, if Soren
decides he doesn't want any more data and

91
00:04:23.350 --> 00:04:25.940
he unsubscribes from me, well,

92
00:04:25.940 --> 00:04:28.450
that just means David's not
gonna get any data from me.

93
00:04:28.450 --> 00:04:29.220
And transitively,

94
00:04:29.220 --> 00:04:32.250
it means our friend Soren's not
gonna get any data from me, right?

95
00:04:32.250 --> 00:04:35.820
So that's why we can just pass
the subscription all the way through.

96
00:04:35.820 --> 00:04:39.600
So in general, if you're just transforming
one observable to another observable,

97
00:04:39.600 --> 00:04:42.800
you can do this trick where you just pass
the subscription all the way through.

98
00:04:42.800 --> 00:04:47.460
So as we can see, subscription flows up,
data flows down, and

99
00:04:47.460 --> 00:04:48.950
unsubscription would also flow up.

100
00:04:48.950 --> 00:04:53.050
So if you were to call unsubscribe, that
would actually skip you entirely, right?

101
00:04:53.050 --> 00:04:56.230
Unsubscribe from me,
I don't send anymore data to him,

102
00:04:56.230 --> 00:04:57.460
he doesn't send any more data to him.

