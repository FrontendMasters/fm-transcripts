WEBVTT

1
00:00:00.060 --> 00:00:03.895
Now, we were still talking about how
do we do this as busy developers?

2
00:00:03.895 --> 00:00:07.991
Well, if we have JavaScript under our
belt, we are in good shape because

3
00:00:07.991 --> 00:00:12.507
there is a really nice and growing
ecosystem for visualization in JavaScript.

4
00:00:12.507 --> 00:00:16.139
I've already mentioned
a couple of times D3.js.

5
00:00:16.139 --> 00:00:17.818
If folks have encountered D3,

6
00:00:17.818 --> 00:00:20.555
you will find some overlap
in the concept with Plot,

7
00:00:20.555 --> 00:00:24.864
which is what we're gonna use today I'll
talk about a little bit more in a second.

8
00:00:24.864 --> 00:00:29.384
But as I said, D3 is essentially
a lower level library for

9
00:00:29.384 --> 00:00:34.184
visualization that requires you
to get a little bit more nitty

10
00:00:34.184 --> 00:00:38.537
gritty with things like
the scales that you're using.

11
00:00:38.537 --> 00:00:42.847
And the kind of underlying
components of your visualization.

12
00:00:42.847 --> 00:00:47.704
And it's really powerful,
really amazing for making custom visuals.

13
00:00:47.704 --> 00:00:52.511
So the ideas that we're gonna cover in
this course are a little bit higher level,

14
00:00:52.511 --> 00:00:56.681
but are gonna put you in good shape,
as we've said a couple times, for

15
00:00:56.681 --> 00:00:59.108
going on and deepening that knowledge.

16
00:00:59.108 --> 00:01:04.188
You're getting a little bit lower level
to build a little bit more customizable,

17
00:01:04.188 --> 00:01:07.146
a little bit fancier
visualizations with D3.

18
00:01:07.146 --> 00:01:11.651
And there are some great courses
from folks like Shirley Wu on

19
00:01:11.651 --> 00:01:15.993
Frontend Masters that you can
use to learn more about D3.

20
00:01:15.993 --> 00:01:21.256
There's another library called Vega-Lite,
which is in many ways similar to Plot.

21
00:01:21.256 --> 00:01:23.233
You might have seen it around.

22
00:01:23.233 --> 00:01:27.111
If not, essentially a lot of the concepts
that we're gonna cover today in Plot

23
00:01:27.111 --> 00:01:28.774
are very similar to Vega-Lite.

24
00:01:28.774 --> 00:01:32.534
Both Plot and
Vega-Lite are higher levels, so

25
00:01:32.534 --> 00:01:36.295
have a little bit higher
level abstractions for

26
00:01:36.295 --> 00:01:42.511
dealing with these visualization tasks
than something lower level like D3.

27
00:01:42.511 --> 00:01:46.740
And then as we mentioned, there's some
tools for kind of more advanced data

28
00:01:46.740 --> 00:01:51.188
wrangling that you might wanna explore as
you get into this field in more depth.

29
00:01:51.188 --> 00:01:52.777
A couple of them are Arquero,

30
00:01:52.777 --> 00:01:56.030
which is put out by the University
of Washington team there.

31
00:01:56.030 --> 00:01:59.786
And tidy.js is also great for
working with.

32
00:01:59.786 --> 00:02:01.313
We mentioned tidy data before.

33
00:02:01.313 --> 00:02:03.002
That's where that name comes from.

34
00:02:03.002 --> 00:02:06.842
And if you've worked ever with R,
for example,

35
00:02:06.842 --> 00:02:10.027
R is another really popular platform for

36
00:02:10.027 --> 00:02:14.722
environment I guess for
data analysis and visualization.

37
00:02:14.722 --> 00:02:18.032
tidy.js is very kind of R compatible, so

38
00:02:18.032 --> 00:02:22.110
it brings a lot of the notions
of R into JavaScript.

39
00:02:23.110 --> 00:02:28.246
And there's a whole bunch more, so
there are links in the materials

40
00:02:28.246 --> 00:02:32.402
here if you want to explore
the JavaScript ecosystem.

41
00:02:32.402 --> 00:02:36.322
And there are also, of course,
some libraries that give you these

42
00:02:36.322 --> 00:02:40.733
more out-of-the-box visualizations
like bar charts or line charts and

43
00:02:40.733 --> 00:02:41.861
things like that.

44
00:02:41.861 --> 00:02:46.659
We're not gonna look at those today
because what we're gonna focus on

45
00:02:46.659 --> 00:02:51.375
again is those general concepts of
things like using scales to encode

46
00:02:51.375 --> 00:02:55.090
features from the data
into visual channels.

47
00:02:55.090 --> 00:02:59.832
And what you'll find is that then
those out-of-the-box charts from some

48
00:02:59.832 --> 00:03:04.573
libraries that let's say will just give
you sort of components to throw a bar

49
00:03:04.573 --> 00:03:06.250
chart on your site.

50
00:03:06.250 --> 00:03:10.522
Those are great if you know that what you
need is a particular bar chart that fits

51
00:03:10.522 --> 00:03:12.024
within those parameters.

52
00:03:12.024 --> 00:03:16.815
But what we're gonna focus on today
is understanding the more general

53
00:03:16.815 --> 00:03:22.080
principles of choosing mappings from
your data to the visualization.

54
00:03:22.080 --> 00:03:27.031
So that you aren't just constrained by
those kind of out-of-the-box solutions so

55
00:03:27.031 --> 00:03:28.475
that you have control and

56
00:03:28.475 --> 00:03:32.700
you can make the visualization that
is best suited to your use case.

57
00:03:32.700 --> 00:03:35.741
Now, down the line, once you've kind of
wrapped your head around those concepts

58
00:03:35.741 --> 00:03:39.510
and you've realized, no, actually, I just
need the out-of-the-box bar chart today.

59
00:03:39.510 --> 00:03:41.769
Those are great, quick and easy solutions.

60
00:03:41.769 --> 00:03:45.781
But today, we're gonna focus on those core
principles to make sure that we're not

61
00:03:45.781 --> 00:03:49.753
painting ourselves into any corners or
sort of pigeonholing ourselves too much.

62
00:03:49.753 --> 00:03:54.390
So we're gonna kind of strike a nice
balance between custom visualizations, and

63
00:03:54.390 --> 00:03:57.760
high level abstractions that
help us build those quickly.

