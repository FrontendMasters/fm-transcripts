WEBVTT

1
00:00:00.090 --> 00:00:05.076
The tool that we're gonna be using today
is a library called Observable Plot.

2
00:00:05.076 --> 00:00:08.177
This is, again,
by the creators of Observable and D3.

3
00:00:08.177 --> 00:00:12.597
So it is meant to kind of go as
a complement to libraries like D3, again,

4
00:00:12.597 --> 00:00:15.137
sort of on a higher level of abstraction.

5
00:00:15.137 --> 00:00:22.136
You can read all about it at
observablehq.com/@observablehq/plot.

6
00:00:22.136 --> 00:00:23.609
It's also open source.

7
00:00:23.609 --> 00:00:28.025
You can see all the source code
on GitHub and dig into it and

8
00:00:28.025 --> 00:00:33.099
even make contributions or
raise issues if you see any problems.

9
00:00:33.099 --> 00:00:38.860
But essentially, Plot is based on
something called the grammar of graphics.

10
00:00:38.860 --> 00:00:45.651
So this is a system for understanding
the abstractions of data visualization.

11
00:00:45.651 --> 00:00:50.834
That folks who have spent their
career developing notions

12
00:00:50.834 --> 00:00:55.589
of data vis have come up with
as a way of kind of breaking

13
00:00:55.589 --> 00:01:01.240
the task of visualization
down into some core concepts.

14
00:01:01.240 --> 00:01:06.076
And a few of the core concepts that we're
gonna explore today are these four that

15
00:01:06.076 --> 00:01:06.880
are up here.

16
00:01:06.880 --> 00:01:09.460
So on the one hand, we have marks.

17
00:01:09.460 --> 00:01:10.764
In a grammar of graphics,

18
00:01:10.764 --> 00:01:15.120
you have the notion of different types of
marks that you can draw on the screen.

19
00:01:15.120 --> 00:01:17.334
So this might be, for example,

20
00:01:17.334 --> 00:01:21.764
ticks like in that first test
jobs visualization we saw before.

21
00:01:21.764 --> 00:01:26.028
Or it might be bars or
rectangles, like in a bar chart.

22
00:01:26.028 --> 00:01:29.352
It might be dots or other symbols,
x's, what have you.

23
00:01:29.352 --> 00:01:33.924
So these different types of marks,
you can then compose and

24
00:01:33.924 --> 00:01:37.855
put one on top of the other or
use different marks for

25
00:01:37.855 --> 00:01:43.452
different features of the dataset to
convey meaning in different ways.

26
00:01:43.452 --> 00:01:47.981
The other notion that we already
talked a little bit about are scales.

27
00:01:47.981 --> 00:01:52.380
So these are, again, those mappings of
essentially how we get from abstract data

28
00:01:52.380 --> 00:01:55.200
space to concrete graphical space.

29
00:01:55.200 --> 00:01:59.929
There's also a notion of transforms,
where these are sort of similar to what we

30
00:01:59.929 --> 00:02:02.837
mentioned in the data
wrangling side of things.

31
00:02:02.837 --> 00:02:07.573
These are transforms that might do things
like tell us the average over a moving

32
00:02:07.573 --> 00:02:10.960
window, let's say,
if we have some time series data.

33
00:02:10.960 --> 00:02:15.796
Or the sum of all the values that
we care about in this dataset, etc.

34
00:02:15.796 --> 00:02:20.000
So we're gonna take a look at a couple
of those, especially for grouping data,

35
00:02:20.000 --> 00:02:21.462
aggregating it together.

36
00:02:21.462 --> 00:02:26.841
And also for kind of separating data
out when we have a continuous space and

37
00:02:26.841 --> 00:02:30.855
we wanna chunk it up into different bins,
let's say.

38
00:02:30.855 --> 00:02:32.950
Then there's also a notion of facet.

39
00:02:32.950 --> 00:02:37.872
So speaking of separating data out,
we'll look at some of the use cases

40
00:02:37.872 --> 00:02:42.068
where it can be really useful
to do what's called faceting.

41
00:02:42.068 --> 00:02:47.142
Where facets are essentially small
little versions of the visualization

42
00:02:47.142 --> 00:02:53.060
that we're trying to make that are focused
on a particular subset of the data.

43
00:02:53.060 --> 00:02:55.400
This is also called small multiples.

44
00:02:55.400 --> 00:03:00.031
So marks, scales, transforms, and facets,
these are a few of the kind of building

45
00:03:00.031 --> 00:03:04.287
blocks, the conceptual building blocks
that the grammar of graphics uses.

46
00:03:04.287 --> 00:03:06.503
And that plot employs or implements so

47
00:03:06.503 --> 00:03:10.670
that we can compose custom visualizations
out of these core concepts.

48
00:03:11.720 --> 00:03:15.654
So we're gonna dig into these through
our hands-on exercises, yeah.

49
00:03:15.654 --> 00:03:22.747
&gt;&gt; Is tidy.js basically R's
subset of tidyverse packages?

50
00:03:22.747 --> 00:03:27.830
&gt;&gt; Is tidy.js R-
&gt;&gt; R's set of tidyverse packages.

51
00:03:27.830 --> 00:03:30.275
&gt;&gt; R's set of tidyverse packages.

52
00:03:30.275 --> 00:03:34.726
I am not familiar enough
with tidy.js to want to

53
00:03:34.726 --> 00:03:39.409
answer that without saying
anything incorrect.

54
00:03:39.409 --> 00:03:42.607
So the tidy.js package,
I believe, is also open source.

55
00:03:42.607 --> 00:03:47.976
So I would definitely think that if that
isn't covered in the documentation there,

56
00:03:47.976 --> 00:03:52.450
it is certainly a question that can
be asked of the maintainers there.

57
00:03:52.450 --> 00:03:57.140
And there are also quite a lot of
Observable notebooks around tidy.js, so

58
00:03:57.140 --> 00:04:02.139
it's probably something we can discover
from the notebook ecosystem as well.

59
00:04:02.139 --> 00:04:07.298
So the last thing that we're gonna talk
about after we dig through our hands-on

60
00:04:07.298 --> 00:04:12.236
exercises is how we can share our
beautiful visualizations with the world.

61
00:04:12.236 --> 00:04:14.471
So Plot is just a JavaScript library.

62
00:04:14.471 --> 00:04:19.100
So that means that you can draw these
plots that we're gonna look at today.

63
00:04:19.100 --> 00:04:22.862
Wherever you can draw,
use JavaScript, essentially.

64
00:04:22.862 --> 00:04:27.909
So we're gonna look later at some examples
of how to use Plot with Observable,

65
00:04:27.909 --> 00:04:31.211
which is what we're gonna
be building with today.

66
00:04:31.211 --> 00:04:35.884
But also how to use Plot just in your
vanilla JS projects or in projects using

67
00:04:35.884 --> 00:04:41.245
React, for example, and other frameworks
follow essentially the same principle.

68
00:04:41.245 --> 00:04:42.580
Okay, shall we jump in?

69
00:04:42.580 --> 00:04:48.450
Cuz I've been yakking for a long time and
we should get our hands on some data.

70
00:04:48.450 --> 00:04:52.254
So today,
we are going to have a little intro.

71
00:04:52.254 --> 00:04:54.760
It's done, yay, I can stop talking now.

72
00:04:54.760 --> 00:04:59.569
We're gonna work through a few different
projects to wrap our heads around some

73
00:04:59.569 --> 00:05:01.805
of those core concepts, as we said.

74
00:05:01.805 --> 00:05:06.190
The first one is going to be looking
at some of those test jobs in CI.

75
00:05:06.190 --> 00:05:10.901
And so by asking ourselves, are tests
passing, and how quickly, and how often,

76
00:05:10.901 --> 00:05:14.605
we're going to be learning a bit
about features in the dataset.

77
00:05:14.605 --> 00:05:17.868
And how we can map those to what
are called encoding channels or

78
00:05:17.868 --> 00:05:20.327
different properties of the visualization.

79
00:05:20.327 --> 00:05:25.766
Then in our second project,
we're going to examine some usage data,

80
00:05:25.766 --> 00:05:30.192
or mock usage data,
to understand what kind of devices,

81
00:05:30.192 --> 00:05:33.066
what sizes folks are browsing with.

82
00:05:33.066 --> 00:05:38.662
And that is going to teach us a little bit
more about aggregating data and splitting

83
00:05:38.662 --> 00:05:44.191
plots up into facets so that we can answer
the right questions that we care about.

84
00:05:44.191 --> 00:05:49.937
Finally, our last project is going to be
looking at some mock API response data,

85
00:05:49.937 --> 00:05:52.480
some API logs data, essentially.

86
00:05:52.480 --> 00:05:56.752
And by doing that, we're gonna
explore how to add interactivity

87
00:05:56.752 --> 00:06:01.647
to our visualizations so that folks
can explore the dataset themselves and

88
00:06:01.647 --> 00:06:05.083
get the answers that they
particularly care about.

89
00:06:05.083 --> 00:06:09.215
So, essentially, how we can expose
that flexibility to our users.

90
00:06:09.215 --> 00:06:14.824
And then finally, we will take a look at
some examples for using Plot in different

91
00:06:14.824 --> 00:06:20.447
ways around the web and wrap up with some
takeaways and some links for next steps.

92
00:06:20.447 --> 00:06:26.228
So all of the projects that we're gonna
be doing are linked in these materials.

93
00:06:26.228 --> 00:06:28.866
If folks have been having any
difficulty accessing the materials,

94
00:06:28.866 --> 00:06:29.657
please let me know.

95
00:06:29.657 --> 00:06:33.263
But each of them is going to be
in an Observable notebook, and so

96
00:06:33.263 --> 00:06:35.450
that is what we are going to jump into.

