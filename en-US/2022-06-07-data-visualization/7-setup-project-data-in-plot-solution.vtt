WEBVTT

1
00:00:00.000 --> 00:00:04.680
Let's take a look at this
very complex solution here.

2
00:00:04.680 --> 00:00:09.735
If you opened the hint you might
find essentially the syntax that

3
00:00:09.735 --> 00:00:15.739
we need to copy here is the same as the
mapping from x to run number or y to name.

4
00:00:15.739 --> 00:00:20.552
We're gonna add a new
pair here to map the fill

5
00:00:20.552 --> 00:00:25.247
channel to the conclusion value or column.

6
00:00:25.247 --> 00:00:28.539
So I'm just going to paste
this in right there and

7
00:00:28.539 --> 00:00:33.452
then the hardest part about this
exercise is remembering to add a comma.

8
00:00:33.452 --> 00:00:35.880
[LAUGH] so, once I've done that and

9
00:00:35.880 --> 00:00:41.577
I press again either this little blue icon
or the keyboard shortcut Shift Enter,

10
00:00:41.577 --> 00:00:45.798
then I will see now I have some
information coming through.

11
00:00:45.798 --> 00:00:49.776
These aren't all identical
black squares anymore,

12
00:00:49.776 --> 00:00:55.000
we can see some kind of differentiation
between the different cells.

13
00:00:55.000 --> 00:00:56.150
Okay, any questions?

14
00:00:56.150 --> 00:01:00.028
So far this is just to get us used
to the concept of how channels

15
00:01:00.028 --> 00:01:03.905
are set up in plot marks and
also how to run observable cells,

16
00:01:03.905 --> 00:01:08.333
cuz that's what we're gonna be doing
the rest of the day, all good?

17
00:01:08.333 --> 00:01:10.950
Excellent, so, let us press on.

18
00:01:10.950 --> 00:01:16.001
So as we said before scales
are essentially functions that

19
00:01:16.001 --> 00:01:21.784
we could think of as mapping values
from the input of each channel.

20
00:01:21.784 --> 00:01:26.712
So the domain of the data values to
the output of each channel which

21
00:01:26.712 --> 00:01:31.014
is essentially the range of
visual characteristics that

22
00:01:31.014 --> 00:01:33.354
are specific to that channel.

23
00:01:33.354 --> 00:01:38.256
So in this case, if we're using the fill
channel, we're working with an output

24
00:01:38.256 --> 00:01:42.960
range that's in the color space, so
we're working with a series of colors.

25
00:01:42.960 --> 00:01:45.780
There was a question
in the chat about does

26
00:01:45.780 --> 00:01:48.851
observable choose the default colors here?

27
00:01:48.851 --> 00:01:52.680
So in this case, it's actually plot
that's choosing the default colors.

28
00:01:52.680 --> 00:01:57.979
And as you can see, they're kind of
arbitrary and they don't really tell

29
00:01:57.979 --> 00:02:03.107
us very much in so far as, I'm not
really used to seeing red, and blue,

30
00:02:03.107 --> 00:02:08.491
and yellow have any kind of meaning
associated to them in terms of passing or

31
00:02:08.491 --> 00:02:12.530
failing tests, or canceled tests,
things like that.

32
00:02:12.530 --> 00:02:17.244
So what we're going to do is use
plots notion of scales which

33
00:02:17.244 --> 00:02:22.430
are ways that we can customize how
each of these channels does this

34
00:02:22.430 --> 00:02:27.804
mapping to configure the either
the domain or in our case the range,

35
00:02:27.804 --> 00:02:31.600
the output values of
this particular channel.

36
00:02:31.600 --> 00:02:36.571
So in the case of the channels fill and
stroke,

37
00:02:36.571 --> 00:02:42.442
these are configured by
a scale that plot calls color.

38
00:02:42.442 --> 00:02:46.900
So essentially the color scale applies to
both the fill and the stroke channels.

39
00:02:46.900 --> 00:02:49.029
Right now we're only
using the fill channel.

40
00:02:49.029 --> 00:02:54.988
So, if we wanna change how values
are expressed in that fill channel,

41
00:02:54.988 --> 00:02:58.223
we need to customize the color scale.

42
00:02:58.223 --> 00:03:02.771
So, the way that plot is doing
this by default is essentially

43
00:03:02.771 --> 00:03:07.600
having these default domains and
ranges for each of the scales.

44
00:03:07.600 --> 00:03:11.707
The domain it figures out by looking
at your data sets values, and

45
00:03:11.707 --> 00:03:13.798
in this case it says okay, look,

46
00:03:13.798 --> 00:03:19.047
seems like we have three different values
in the data for this conclusion columns.

47
00:03:19.047 --> 00:03:24.184
So I have a domain of three
different values and then the range

48
00:03:24.184 --> 00:03:30.445
is going to be taken from the first
three values in my default color range.

49
00:03:30.445 --> 00:03:31.839
That's how plot is choosing this.

50
00:03:31.839 --> 00:03:36.303
But what we wanna do is override those
default values to use more easily

51
00:03:36.303 --> 00:03:37.825
recognizable colors.

52
00:03:37.825 --> 00:03:43.158
Now this is a great chance for there was
a question earlier about accessibility and

53
00:03:43.158 --> 00:03:45.322
not just using values like red and

54
00:03:45.322 --> 00:03:50.595
green that might be not very accessible
to folks with red green color blindness.

55
00:03:50.595 --> 00:03:55.499
So this is a great opportunity for you to
choose whatever colors you would like.

56
00:03:55.499 --> 00:04:00.370
Feel free to look up for example on some
accessibility resources on the web if you

57
00:04:00.370 --> 00:04:02.637
wanna an accessible color palette.

58
00:04:02.637 --> 00:04:07.434
Or you could use kind of the conventional
but not super accessible values

59
00:04:07.434 --> 00:04:11.916
like red for failure or green for
success in our culture, right, so

60
00:04:11.916 --> 00:04:15.943
if you want to choose a different
color palette by all means.

61
00:04:15.943 --> 00:04:21.459
But essentially what we're gonna be doing
is in this second cell that we have,

62
00:04:21.459 --> 00:04:24.048
or I don't know next cell down here,

63
00:04:24.048 --> 00:04:27.740
we essentially have the same
plot that we just drew.

64
00:04:27.740 --> 00:04:32.401
We now have a little color property in our

65
00:04:32.401 --> 00:04:37.062
main plot options configuration here,

66
00:04:37.062 --> 00:04:41.313
where here is where we're going to be

67
00:04:41.313 --> 00:04:46.262
setting the new range of this color scale.

68
00:04:46.262 --> 00:04:49.143
And so
we are going to also have to configure

69
00:04:49.143 --> 00:04:52.665
the domain to make sure that
the ordering of our input

70
00:04:52.665 --> 00:04:57.650
values matches the ordering that we
expect from our output color values.

