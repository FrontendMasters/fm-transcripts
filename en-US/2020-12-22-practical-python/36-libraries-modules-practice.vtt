WEBVTT

1
00:00:00.500 --> 00:00:04.070
We created a basic programme that
we can run on the command line.

2
00:00:04.070 --> 00:00:07.590
We are using a main function here.

3
00:00:07.590 --> 00:00:15.077
And we also talked about
working with files.

4
00:00:15.077 --> 00:00:19.761
So we worked with a cities dot JSON file.

5
00:00:19.761 --> 00:00:25.814
In our example here, we need to input
JSON from the standard library,

6
00:00:25.814 --> 00:00:29.933
and then we can go ahead and
work with this file.

7
00:00:29.933 --> 00:00:35.500
Now, if we wanted to loop over
each city in this list and

8
00:00:35.500 --> 00:00:42.420
also provide the index we can use
the enumerate function to do that.

9
00:00:45.841 --> 00:00:50.790
And remember that using the open keyword
on its own is frowned upon because it

10
00:00:50.790 --> 00:00:54.886
doesn't do any of that resource
cleanup that you need to do when

11
00:00:54.886 --> 00:00:56.841
you're working with files.

12
00:00:56.841 --> 00:01:01.435
So make sure that when you are working
with files, you use a context manager.

13
00:01:01.435 --> 00:01:06.774
So here when I say with open,
everything that is indented under

14
00:01:06.774 --> 00:01:11.812
that with statement will get
sandwiched in between the code

15
00:01:11.812 --> 00:01:16.548
that opens the file and
then automatically closes it and

16
00:01:16.548 --> 00:01:22.519
handles any exceptions without you
having to worry or think about it.

17
00:01:22.519 --> 00:01:28.486
When we handle exceptions,
we use a try and accept block.

18
00:01:28.486 --> 00:01:31.982
Here we are accepting
on a JSON decode error,

19
00:01:31.982 --> 00:01:37.051
the most specific error possible for
this particular exercise.

20
00:01:37.051 --> 00:01:41.086
And then we can print out a specific
error message as well as telling the user

21
00:01:41.086 --> 00:01:41.865
Hey, sorry.

22
00:01:41.865 --> 00:01:44.346
There was an error
decoding that JSON file.

23
00:01:44.346 --> 00:01:49.231
We talked a little bit about
using the requests library,

24
00:01:49.231 --> 00:01:51.572
about getting a response,

25
00:01:51.572 --> 00:01:56.775
parsing that response that comes back and
response .JSON.

26
00:01:56.775 --> 00:02:01.667
Before you use the request library, you
need to make sure that you go ahead and

27
00:02:01.667 --> 00:02:06.725
install it in your virtual end with
PIP Otherwise, it's an external package.

28
00:02:06.725 --> 00:02:08.369
It's not part of the standard library.

29
00:02:08.369 --> 00:02:12.481
So when you try to import it if
you don't have it installed,

30
00:02:12.481 --> 00:02:14.628
you're going to see an error.

31
00:02:14.628 --> 00:02:17.529
There is some additional practice here for

32
00:02:17.529 --> 00:02:23.101
working with the request library that I
recommend you go through on your own time.

33
00:02:23.101 --> 00:02:30.365
Remember that a Python has a huge standard
library with a huge number of packages.

34
00:02:30.365 --> 00:02:34.264
If you wanna do something,
there's probably a package included.

35
00:02:34.264 --> 00:02:37.057
You can use some of the more
common ones in this practice.

36
00:02:37.057 --> 00:02:41.568
Here we create a new file and
we use the OS module which stands for

37
00:02:41.568 --> 00:02:43.025
operating system.

38
00:02:43.025 --> 00:02:47.369
To get the current working directory

39
00:02:47.369 --> 00:02:52.140
sis is another common Lee used library.

40
00:02:52.140 --> 00:02:57.147
You can use sis to read command line
arguments if you're trying to run your

41
00:02:57.147 --> 00:03:01.847
Python program as a script and
pass in variables on the command line.

42
00:03:01.847 --> 00:03:05.394
Remember that pypi is
the Python package index and

43
00:03:05.394 --> 00:03:11.064
it's a service that helps you find third
party Python libraries and packages.

44
00:03:11.064 --> 00:03:16.509
But be mindful to type in the right
thing not have any typos because

45
00:03:16.509 --> 00:03:21.657
there are instances where there
have been malicious packages

46
00:03:21.657 --> 00:03:27.795
that have lived at mistyped names,
you can search pypi from the website,

47
00:03:27.795 --> 00:03:31.666
you can also use it on
the command line as well.

48
00:03:31.666 --> 00:03:37.452
And to install packages just do
Python dash m pip install requests.

49
00:03:37.452 --> 00:03:41.755
That command is a little bit more
verbose than just doing pip install

50
00:03:41.755 --> 00:03:45.161
Which you might see in other examples and
tutorials.

51
00:03:45.161 --> 00:03:49.794
But this guarantee is that you
are using the right version of PIP for

52
00:03:49.794 --> 00:03:55.024
your version Python and I promise you
it will save you lots and lots of pain.

53
00:03:55.024 --> 00:03:58.489
I'm not going to cover adding
tests at the moment but

54
00:03:58.489 --> 00:04:01.333
tests in Python are extremely important.

55
00:04:01.333 --> 00:04:05.804
So, if you go back to any chapters,
I recommend that you visit this one.

