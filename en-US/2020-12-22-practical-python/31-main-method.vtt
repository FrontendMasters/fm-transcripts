WEBVTT

1
00:00:00.050 --> 00:00:03.588
&gt;&gt; Now that you have this foundational
understanding of how Python works, we're

2
00:00:03.588 --> 00:00:07.820
gonna learn how to structure our code into
Modules and work with different Libraries.

3
00:00:07.820 --> 00:00:12.874
We talked a little bit about the main
method early on in the class.

4
00:00:12.874 --> 00:00:18.215
Once you start writing your more
comprehensive Python programs, if

5
00:00:18.215 --> 00:00:25.470
you're not using a library that runs your
code for you want to have a main method.

6
00:00:25.470 --> 00:00:30.465
And the purpose of that main method is
that it will only run when your code

7
00:00:30.465 --> 00:00:34.000
is executed as a standalone program.

8
00:00:34.000 --> 00:00:37.860
And because of how Python's
import system works.

9
00:00:37.860 --> 00:00:43.700
If somebody else were to import your
Python code, it is executed on import.

10
00:00:44.720 --> 00:00:51.083
So let's say we had a Python
file like this called name lib,

11
00:00:51.083 --> 00:00:56.684
go ahead and copy this and
let's create a new file and

12
00:00:56.684 --> 00:01:01.036
save this as main underscore lib dot UI.

13
00:01:04.739 --> 00:01:09.939
If we run this code, it looks exactly like
we expect it to the length is four and

14
00:01:09.939 --> 00:01:12.100
the uppercase version is Nina.

15
00:01:13.930 --> 00:01:18.666
But we want to write reusable code,
because we went through all this trouble

16
00:01:18.666 --> 00:01:23.414
of writing this very, very useful library
that has some methods in it like.

17
00:01:23.414 --> 00:01:27.680
Getting the name for a length and
the uppercase of that name.

18
00:01:27.680 --> 00:01:31.080
So how do we allow other
programmers to use this?

19
00:01:33.030 --> 00:01:38.848
Let's say somebody else wrote
a program called other program,

20
00:01:38.848 --> 00:01:44.540
and let's copy this, And

21
00:01:44.540 --> 00:01:49.380
save it as other, Program dot P1.

22
00:01:49.380 --> 00:01:52.684
We're going to import.

23
00:01:55.272 --> 00:01:58.300
As sorry here we call this main lib.

24
00:01:58.300 --> 00:02:00.910
So let me just update this example.

25
00:02:03.730 --> 00:02:06.730
If somebody wants to open a pull request.

26
00:02:06.730 --> 00:02:08.560
Now's your time to shine.

27
00:02:10.160 --> 00:02:17.782
So let's go ahead and run this and we'll
see I don't have Nina anywhere in here but

28
00:02:17.782 --> 00:02:23.350
this is printing out
the uppercase version is Nina.

29
00:02:23.350 --> 00:02:24.614
What is going on?

30
00:02:28.280 --> 00:02:34.340
I'm trying to use these methods
from this main lib Module.

31
00:02:35.780 --> 00:02:39.560
Well, what's happening
is when it is imported,

32
00:02:39.560 --> 00:02:44.150
all of the code in here is run
including this stuff down here.

33
00:02:45.930 --> 00:02:49.740
And that was just stuff that I needed for
myself.

34
00:02:49.740 --> 00:02:52.353
If somebody is using
this module as a library,

35
00:02:52.353 --> 00:02:54.870
they probably don't care about it.

36
00:02:54.870 --> 00:02:58.078
So that's why you want to wrap
this code in a main method.

37
00:03:04.552 --> 00:03:09.566
So in order to do that you ask
If the value of Dander name,

38
00:03:09.566 --> 00:03:16.400
which is one of those magic methods,
magic variables is equal to underscore

39
00:03:16.400 --> 00:03:21.979
the string underscore underscore mean,
then run this code.

40
00:03:25.122 --> 00:03:27.870
Now, If I run main lib.

41
00:03:29.700 --> 00:03:34.060
I see the length is four and
the uppercase version is Nina.

42
00:03:34.060 --> 00:03:36.952
If I go back to my other program and
I run it again,

43
00:03:36.952 --> 00:03:40.940
it's not printing out
anything about Nina anymore.

44
00:03:40.940 --> 00:03:44.740
That's because when I run
this from the command line,

45
00:03:44.740 --> 00:03:48.090
I am hitting this code in the main method.

46
00:03:48.090 --> 00:03:51.921
But when I import this
programme into another file,

47
00:03:51.921 --> 00:03:55.620
that code in the main
method is not being run.

48
00:03:55.620 --> 00:03:59.920
So that's an important distinction,
that will help you write reusable code.

