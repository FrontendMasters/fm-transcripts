WEBVTT

1
00:00:00.250 --> 00:00:03.325
I wanna quickly show you
the Django admin and

2
00:00:03.325 --> 00:00:08.061
then touch on tests briefly for
how you might run them in Django, and

3
00:00:08.061 --> 00:00:11.650
then we'll move on to
the final project practice.

4
00:00:13.170 --> 00:00:17.813
The Django admin is really one of the star
features of this web framework and

5
00:00:17.813 --> 00:00:21.380
it's one of the reasons why it's so
popular.

6
00:00:21.380 --> 00:00:24.032
And let's see usually interact with and

7
00:00:24.032 --> 00:00:29.450
edit out database models in a really
nice UI but very minimal setup.

8
00:00:29.450 --> 00:00:33.950
So to use that admin, you're going
to need to create a super user.

9
00:00:33.950 --> 00:00:38.437
So we do that by running python
manage.py create super user,

10
00:00:38.437 --> 00:00:41.471
don't forget the password that you set.

11
00:00:53.048 --> 00:00:56.160
That will let you know a super
user was created successfully.

12
00:00:56.160 --> 00:00:57.878
If we go back to URLs.py for

13
00:00:57.878 --> 00:01:02.440
practical blog we'll see that there
is an admin path to find here.

14
00:01:02.440 --> 00:01:05.370
You don't have to use the admin
if you don't want to.

15
00:01:05.370 --> 00:01:07.380
You would just leave this out.

16
00:01:08.530 --> 00:01:12.655
Now that I've created a super
user I can go to my blog and

17
00:01:12.655 --> 00:01:17.820
instead of looking at a post,
I'm going to type in the URL/admin.

18
00:01:17.820 --> 00:01:22.536
And that will take me to a login page and
I can now log in with the super user that

19
00:01:22.536 --> 00:01:25.810
I created and
it's gonna take me to this interface.

20
00:01:28.290 --> 00:01:32.697
Now, these were created by
Django automatically, but

21
00:01:32.697 --> 00:01:36.258
here we'll see in the blog app our posts,
and

22
00:01:36.258 --> 00:01:40.309
I can click in here and
add a post and give it a title.

23
00:01:52.211 --> 00:01:59.660
And give it a slog and just save it and
we'll see that it was added successfully.

24
00:01:59.660 --> 00:02:03.026
So when we go back to the index for
our blog, there it is,

25
00:02:03.026 --> 00:02:05.630
that's the second blog post.

26
00:02:05.630 --> 00:02:09.525
And all that I had to do to
set that up was create and

27
00:02:09.525 --> 00:02:14.655
fill in an admin.py file because
it was already created for us.

28
00:02:14.655 --> 00:02:19.900
Import our post model and
then register it.

29
00:02:19.900 --> 00:02:24.498
So admin.site.register post gave
us all of that almost for free.

30
00:02:29.988 --> 00:02:33.472
If we wanted to have Django auto generate
our slugs for us when creating a new blog

31
00:02:33.472 --> 00:02:37.680
post, which I think we do because creating
any slug manually is pretty annoying.

32
00:02:37.680 --> 00:02:45.050
We can comment this out and
instead create a class called Post Admin,

33
00:02:45.050 --> 00:02:52.179
that inherits from model admin,
and then register this instead.

34
00:02:58.132 --> 00:03:03.166
If I save that and then refresh
this page and go to our admin and

35
00:03:03.166 --> 00:03:08.990
we'll notice that Django is
currently running in debug mode.

36
00:03:08.990 --> 00:03:14.106
That means that it's gonna pick
up any changes automatically and

37
00:03:14.106 --> 00:03:17.080
just refresh the server.

38
00:03:17.080 --> 00:03:20.590
You don't want that on in production.

39
00:03:20.590 --> 00:03:24.849
So just an FYI that's a setting
that you will flip in

40
00:03:24.849 --> 00:03:29.612
settings.py If you go to a URL
here that doesn't exist.

41
00:03:29.612 --> 00:03:33.430
You're gonna get a page not found error,
It's gonna tell you what it was raised by.

42
00:03:33.430 --> 00:03:36.290
And then you'll see a message at
the bottom saying you're seeing

43
00:03:36.290 --> 00:03:38.800
this error because you
have debug equals true.

44
00:03:38.800 --> 00:03:42.420
In production, you probably want to
redirect to a standard 404 page.

45
00:03:44.020 --> 00:03:48.373
So now if we look at our admin for post,
we will see that when we make a post,

46
00:03:51.192 --> 00:03:53.657
As I'm typing in our title.

47
00:03:56.573 --> 00:03:59.040
We'll see that this log is
generated automatically.

48
00:04:00.240 --> 00:04:04.690
The cool thing about this is it
skips certain words like a and

49
00:04:04.690 --> 00:04:07.901
that you don't really care about for SEO.

50
00:04:15.662 --> 00:04:21.500
There we go, so
that is what you get with Django for free.

51
00:04:23.520 --> 00:04:27.080
There's a lot more that you can
do with it, it's very powerful,

52
00:04:27.080 --> 00:04:29.230
but I just wanted to give you a preview.

