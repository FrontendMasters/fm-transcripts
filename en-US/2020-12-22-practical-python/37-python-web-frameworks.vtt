WEBVTT

1
00:00:00.400 --> 00:00:04.196
All right, this is it,
it's the final countdown,

2
00:00:04.196 --> 00:00:09.215
the final stretch we're gonna talk
about web frameworks in Python.

3
00:00:09.215 --> 00:00:13.882
And then you are going to be
a verified Python Pro with

4
00:00:13.882 --> 00:00:17.714
this stamp of approval for me personally.

5
00:00:17.714 --> 00:00:23.557
So hopefully you're ready, or we're going
to use some of the concepts that we

6
00:00:23.557 --> 00:00:29.063
learned earlier on to work with a more
advanced framework called Django.

7
00:00:29.063 --> 00:00:32.041
Now, what are web frameworks?

8
00:00:32.041 --> 00:00:38.610
Well, web frameworks are designed to
support creating applications for the web.

9
00:00:38.610 --> 00:00:44.150
While simplifying and also extracting away
a lot of what happens under the hood.

10
00:00:44.150 --> 00:00:47.643
So they're gonna provide
you with the plumbing so

11
00:00:47.643 --> 00:00:51.478
that you can focus on just
building your application.

12
00:00:51.478 --> 00:00:55.729
There are two really popular web
frameworks in Python, one is Django.

13
00:00:55.729 --> 00:01:00.521
Django is fully featured, it's a high
level framework for building web apps, and

14
00:01:00.521 --> 00:01:04.029
it focuses on automating and
providing as much as possible.

15
00:01:04.029 --> 00:01:08.328
Many large scale sites like Instagram,
do run on Django,

16
00:01:08.328 --> 00:01:11.936
and because Django provides
a lot out of the box.

17
00:01:11.936 --> 00:01:16.581
It's considered to be quite
an opinionated framework,

18
00:01:16.581 --> 00:01:23.079
Django builds itself as the web framework
for perfectionists with deadlines.

19
00:01:23.079 --> 00:01:27.894
There's quite a bit that's included
in Django, there's a database ORM,

20
00:01:27.894 --> 00:01:30.311
which is an object relational model.

21
00:01:30.311 --> 00:01:36.055
To make working with databases as simple
as working with Python instances.

22
00:01:36.055 --> 00:01:41.168
There is easy to build upon
admin backend interface that

23
00:01:41.168 --> 00:01:48.688
makes it easy to manage your content with
nice forms with validation and teaming.

24
00:01:48.688 --> 00:01:52.617
There is built in user authentication,
there's a template language

25
00:01:52.617 --> 00:01:57.086
there's protection against common
security vulnerabilities and a lot more.

26
00:01:57.086 --> 00:02:01.115
And you're probably thinking,
well, this all sounds great and

27
00:02:01.115 --> 00:02:04.861
it is great until you find
yourself needing to do something.

28
00:02:04.861 --> 00:02:08.631
That doesn't really fit in
the Django paradigm, and

29
00:02:08.631 --> 00:02:11.491
that's one thing start to get complex.

30
00:02:11.491 --> 00:02:17.052
To contrast Django, there's another
popular framework in Python for

31
00:02:17.052 --> 00:02:18.819
the web called Flask.

32
00:02:18.819 --> 00:02:23.239
And I would say that Django and
Flask share equal popularity,

33
00:02:23.239 --> 00:02:27.066
Flask builds itself as
a micro framework for Python.

34
00:02:27.066 --> 00:02:31.036
It makes it really easy to
make basic backend API's and

35
00:02:31.036 --> 00:02:35.454
web apps with a lot less code,
and a lot less configuration.

36
00:02:35.454 --> 00:02:39.350
I think Flask is easier for
beginners to understand and setup and

37
00:02:39.350 --> 00:02:41.233
it's a lot less opinionated.

38
00:02:41.233 --> 00:02:45.585
The drawback is, if you want to start
adding some of these additional components

39
00:02:45.585 --> 00:02:49.041
to your app like databases,
authentication and other layers.

40
00:02:49.041 --> 00:02:53.772
You're gonna need to use plug ins or
third party packages because it doesn't

41
00:02:53.772 --> 00:02:56.480
provide a lot of these for
you out of the box.

42
00:02:56.480 --> 00:02:59.391
If you are not into Flask or Django,

43
00:02:59.391 --> 00:03:04.740
you can find a long list of Python Web
frameworks at the link here.

44
00:03:04.740 --> 00:03:07.552
And for
front end integrations with Python,

45
00:03:07.552 --> 00:03:12.958
you're not required to use the templating
that's built into either Django or Flask.

46
00:03:12.958 --> 00:03:17.380
Both frameworks work very well when
they're paired with modern front end

47
00:03:17.380 --> 00:03:20.314
technologies like react,
Angular, and view.

48
00:03:20.314 --> 00:03:24.610
And you can learn a lot about those
other frameworks on frontend masters.

