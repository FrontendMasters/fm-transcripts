WEBVTT

1
00:00:00.230 --> 00:00:03.640
Now we briefly touched
about virtual environments.

2
00:00:03.640 --> 00:00:08.244
They are an important way of storing
the dependencies that your Python

3
00:00:08.244 --> 00:00:10.420
application requires.

4
00:00:10.420 --> 00:00:14.943
Creating that virtual environment will
make a self-contained folder that includes

5
00:00:14.943 --> 00:00:17.360
that full Python installation.

6
00:00:17.360 --> 00:00:21.304
And it's going to allow you to install
dependencies that are specific to that

7
00:00:21.304 --> 00:00:22.960
application.

8
00:00:22.960 --> 00:00:27.873
And a specific version of Python
without the possibility of messing up

9
00:00:27.873 --> 00:00:32.410
your global version of Python
might not be the same version.

10
00:00:32.410 --> 00:00:36.713
You're not gonna have the same libraries
that you're using between different

11
00:00:36.713 --> 00:00:41.030
projects, which is why isolating in
a virtual environment is very important.

12
00:00:42.340 --> 00:00:48.310
You might see this shortened as virtual
and for short, a standard that you might

13
00:00:48.310 --> 00:00:54.700
see is a requirements.txt file that's
included with a Python project.

14
00:00:54.700 --> 00:01:00.395
It's a special file that we're gonna use
to tell pip just Python's package manager

15
00:01:00.395 --> 00:01:06.570
command line tool which dependencies
to install for this particular package.

16
00:01:06.570 --> 00:01:08.263
The format is simple,

17
00:01:08.263 --> 00:01:13.440
you just put each dependency
manually on one line in this file.

18
00:01:13.440 --> 00:01:18.027
If you need to specify a specific version,
you can do double equals and

19
00:01:18.027 --> 00:01:21.080
put the version after
the name of the library.

20
00:01:23.220 --> 00:01:27.669
Or you can just install each dependency
in your virtual environment using pip

21
00:01:27.669 --> 00:01:29.260
directly.

22
00:01:29.260 --> 00:01:33.848
Once you've done that, probably as
you're building the application,

23
00:01:33.848 --> 00:01:38.288
you can see which packages are present
in your virtual environment with

24
00:01:38.288 --> 00:01:40.143
a command called pip freeze.

25
00:01:42.643 --> 00:01:46.609
You can pipe that into a requirements.txt
file to generate that for

26
00:01:46.609 --> 00:01:48.260
you automatically.

27
00:01:48.260 --> 00:01:52.480
Unfortunately, that also includes
a lot of the sub dependencies.

28
00:01:52.480 --> 00:01:57.127
So I prefer if I'm working on
a simple project to manage these

29
00:01:57.127 --> 00:02:02.240
requirements.txt files manually,
but that's not important.

30
00:02:03.280 --> 00:02:06.568
If you get a project with
a requirements.txt file,

31
00:02:06.568 --> 00:02:10.903
you can do a pip install-r in your
virtual environment to install all

32
00:02:10.903 --> 00:02:13.760
of the dependencies
specified in this file.

