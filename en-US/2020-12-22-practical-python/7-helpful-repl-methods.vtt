WEBVTT

1
00:00:00.280 --> 00:00:06.424
There is a special value in Python for
none or no meaning,

2
00:00:06.424 --> 00:00:11.811
no value, and
that has the special keyword none.

3
00:00:11.811 --> 00:00:15.462
If I type it in the repo,
I don't get any output,

4
00:00:15.462 --> 00:00:19.748
which when you think about
it kinda makes sense, right?

5
00:00:19.748 --> 00:00:27.480
If I tried to use a variable that I
have not defined in my session at all,

6
00:00:27.480 --> 00:00:34.438
I will get a name error that says,
name goodbye is not defined.

7
00:00:34.438 --> 00:00:39.025
But if I want to have a placeholder
variable, I can go ahead and

8
00:00:39.025 --> 00:00:43.273
say, goodbye is equal the keyword
none with a capital N.

9
00:00:43.273 --> 00:00:47.746
And then it's defined within
the scope of my program

10
00:00:47.746 --> 00:00:51.008
even though it doesn't have a value.

11
00:00:52.748 --> 00:00:55.766
Now, there are three helpful methods in

12
00:00:55.766 --> 00:00:59.769
the repo that you're gonna
end up using all the time.

13
00:00:59.769 --> 00:01:01.342
So if you have a posted note handy for

14
00:01:01.342 --> 00:01:03.493
things that you wanna take
away from this class,

15
00:01:03.493 --> 00:01:07.073
I recommend writing these three down,
I use them all the time, day in, day out.

16
00:01:07.073 --> 00:01:08.563
And these are.

17
00:01:11.225 --> 00:01:15.305
We have help(),

18
00:01:15.305 --> 00:01:20.917
type(), and dir().

19
00:01:27.919 --> 00:01:33.557
Now the first one is going to tell
us what the type of a variable is.

20
00:01:33.557 --> 00:01:38.550
So if I have a number here, I can pass

21
00:01:38.550 --> 00:01:43.877
that into the type built-in method,

22
00:01:43.877 --> 00:01:48.038
and it will return class int,

23
00:01:48.038 --> 00:01:52.706
I can also pass in a value as well.

24
00:01:52.706 --> 00:01:57.782
So if you're not sure about what the type
of something is, either while you're

25
00:01:57.782 --> 00:02:02.423
in the repo or as you're executing code,
you can figure it out this way.

26
00:02:05.299 --> 00:02:06.304
Let's try this with a string.

27
00:02:11.371 --> 00:02:15.712
What will I see when I get back
when I ask for the type of name?

28
00:02:15.712 --> 00:02:17.780
Which built-in class?

29
00:02:17.780 --> 00:02:19.770
&gt;&gt; Str.

30
00:02:19.770 --> 00:02:21.928
&gt;&gt; Str, yes, that's exactly right.

31
00:02:21.928 --> 00:02:27.525
Now that we know the objects type,

32
00:02:27.525 --> 00:02:32.736
we can move on to other methods.

33
00:02:32.736 --> 00:02:37.539
Dir stands for directory,
which means show me the directory of

34
00:02:37.539 --> 00:02:41.350
all the methods that are available for
this type.

35
00:02:41.350 --> 00:02:46.678
And I want to call dir on the type,
not the variable name or

36
00:02:46.678 --> 00:02:51.459
the value of the variable,
but on the type itself.

37
00:02:51.459 --> 00:02:56.451
So in this case, I can ask for the dir of
str, because remember, if I type str my

38
00:02:56.451 --> 00:03:01.915
repo here, I'll see cluster, this is a
built-in type, I don't have to define it.

39
00:03:01.915 --> 00:03:04.309
So when I type dir of str,

40
00:03:04.309 --> 00:03:10.026
I will see all of the methods
that are available on strings.

41
00:03:10.026 --> 00:03:15.327
You can for the most part ignore all of
these that have the double underscores,

42
00:03:15.327 --> 00:03:19.282
those are internal methods
that aren't meant to be used.

43
00:03:19.282 --> 00:03:24.780
And if you take a look at the other ones,
you'll see some really useful ones like

44
00:03:24.780 --> 00:03:30.215
is alpha, meaning does this string only
contain characters and not numbers.

45
00:03:30.215 --> 00:03:37.652
There's a split method for
splitting a string on tokens,

46
00:03:37.652 --> 00:03:44.497
there's a title method for
title casing something.

47
00:03:44.497 --> 00:03:49.477
So that's how you can kind of very quickly
see what is available on the type that

48
00:03:49.477 --> 00:03:50.769
I'm working with.

49
00:03:50.769 --> 00:03:56.231
Now, the last one is super awesome,
because it lets you see documentation for

50
00:03:56.231 --> 00:04:01.445
Python right in your repo without having
to open a browser, figure out what

51
00:04:01.445 --> 00:04:06.444
version you're looking for,
navigate and search, and that is help.

52
00:04:06.444 --> 00:04:11.717
So with help,
you also want to pass in a class.

53
00:04:11.717 --> 00:04:18.297
So if I type help for str, it's gonna
open this up for me, this interface.

54
00:04:18.297 --> 00:04:23.253
I can press space to scroll down,

55
00:04:23.253 --> 00:04:26.796
or I can press Q to quit.

56
00:04:26.796 --> 00:04:32.842
And that is for Linux and Mac systems, it
might be something different in Windows.

57
00:04:32.842 --> 00:04:37.306
So this is a lot of stuff,
this isn't very helpful,

58
00:04:37.306 --> 00:04:42.592
instead I find it helpful to call
help on a particular method.

59
00:04:42.592 --> 00:04:47.183
And I can do that by saying dot and
then picking any one of these.

60
00:04:50.399 --> 00:04:55.000
And that just prints out the help for
that specific method,

61
00:04:55.000 --> 00:04:59.431
and it also shows me what
arguments this method expects.

62
00:04:59.431 --> 00:05:01.363
So is alpha returns true, if the string
is an alphabetic string false.

63
00:05:01.363 --> 00:05:06.849
Otherwise, if you're ever not sure, like
I don't remember the name of that method,

64
00:05:06.849 --> 00:05:09.200
or I don't remember what this does, or

65
00:05:09.200 --> 00:05:14.002
I don't remember what arguments this
accepts, you can always reach for help.

66
00:05:14.002 --> 00:05:19.340
And I believe that you can call
help on values as well, maybe not.

67
00:05:19.340 --> 00:05:20.095
Let's try this out.

68
00:05:20.095 --> 00:05:23.750
Yep, so dir is, sorry.

69
00:05:23.750 --> 00:05:31.154
That is not what I wanted.

70
00:05:31.154 --> 00:05:37.069
I have a file named hi, yeah.

71
00:05:37.069 --> 00:05:42.061
So for help you also want to
make sure that you're passing

72
00:05:42.061 --> 00:05:46.545
in the class and
not like a variable name or a value.

73
00:05:46.545 --> 00:05:49.226
Make sure that you remember
these three commands, and

74
00:05:49.226 --> 00:05:51.040
you will not find yourself too lost.

