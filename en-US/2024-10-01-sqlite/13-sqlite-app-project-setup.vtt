WEBVTT

1
00:00:00.090 --> 00:00:01.720
&gt;&gt; Brian Holt: Because I like
grounding everything in code,

2
00:00:01.720 --> 00:00:03.220
I'm gonna make you write some code now.

3
00:00:03.220 --> 00:00:05.121
We're actually gonna write
a little bit of Node.js.

4
00:00:05.121 --> 00:00:10.808
So I have a repo here, go ahead and
open that, it should be the sqlite-app.

5
00:00:12.977 --> 00:00:15.379
&gt;&gt; Brian Holt: We're gonna be reusing
this a bunch of different times.

6
00:00:18.558 --> 00:00:25.570
&gt;&gt; Brian Holt: This is a invoice app,
&gt;&gt; Brian Holt: That

7
00:00:25.570 --> 00:00:28.706
reads from our invoice table,
that's what this data.db is,

8
00:00:28.706 --> 00:00:31.200
it's just a fresh copy of
that Chinook database.

9
00:00:33.692 --> 00:00:38.686
&gt;&gt; Brian Holt: So
I'm gonna get out of this, exit.

10
00:00:39.724 --> 00:00:43.639
&gt;&gt; Brian Holt: This is just a fresh copy,
yep,

11
00:00:43.639 --> 00:00:49.990
fresh copy of that same,
&gt;&gt; Brian Holt: Same repo.

12
00:00:49.990 --> 00:00:55.711
I'm gonna run npm install,
if you haven't done that already, I have.

13
00:00:55.711 --> 00:00:58.976
So then you should have,

14
00:00:58.976 --> 00:01:03.643
let's just look at this in VS Code.

15
00:01:03.643 --> 00:01:08.362
I don't need that anymore,
Don't Save, all right.

16
00:01:13.027 --> 00:01:17.429
&gt;&gt; Brian Holt: You can see here,
I don't have too many files here,

17
00:01:17.429 --> 00:01:20.443
let's look at the package.json.

18
00:01:20.443 --> 00:01:23.832
By the way,
don't look at invoice-completed,

19
00:01:23.832 --> 00:01:26.262
that's the cheater answer place.

20
00:01:26.262 --> 00:01:30.226
And I want you to try first
before you do that, okay?

21
00:01:30.226 --> 00:01:37.137
So just to look quickly at package.json
here, this is a Fastify server.

22
00:01:37.137 --> 00:01:42.532
You don't really need to care, I don't
expect you to write any Fastify code,

23
00:01:42.532 --> 00:01:47.290
really, and I've tried to pre-write
all the Fastify code for you.

24
00:01:47.290 --> 00:01:49.431
It is using HTMX and Handlebars,

25
00:01:49.431 --> 00:01:54.641
mostly cuz I hadn't messed around with
HTMX before, so I did, it's kinda fun.

26
00:01:56.101 --> 00:02:01.844
Sqlite3, that's the official
SQLite driver for Node.js.

27
00:02:01.844 --> 00:02:05.414
I will say I don't think it's the best
one, but I wanted you to start there.

28
00:02:05.414 --> 00:02:08.041
So that eventually when you
choose something different,

29
00:02:08.041 --> 00:02:10.460
you know why you're choosing
something different.

30
00:02:10.460 --> 00:02:12.794
And that's about it, and

31
00:02:12.794 --> 00:02:18.854
then I have nodemon on here to help
you with your development cycle.

32
00:02:20.201 --> 00:02:23.262
So if you come in here,
you've run npm install,

33
00:02:23.262 --> 00:02:27.752
you should be able to do npm run dev,
and that should start your server.

34
00:02:27.752 --> 00:02:31.102
You should see some output like that.

35
00:02:31.102 --> 00:02:33.958
And then you should be able
to go to localhost.8080.

36
00:02:35.631 --> 00:02:37.856
&gt;&gt; Brian Holt: And you should
end up with something like this.

37
00:02:40.322 --> 00:02:44.955
&gt;&gt; Brian Holt: I tried to make the most
generic, worse logo that I could,

38
00:02:44.955 --> 00:02:49.036
with just a terrible,
your business in our hands.

39
00:02:49.036 --> 00:02:52.574
Hopefully, I succeeded in making you
throw up a little bit in your mouth,

40
00:02:52.574 --> 00:02:55.181
in terms of just how
generic business that is.

41
00:02:55.181 --> 00:02:57.318
I just finished business school,
so I business.

42
00:03:00.705 --> 00:03:04.254
&gt;&gt; Brian Holt: Yeah, and basically, what
you'll do here is you'll put 10 in here,

43
00:03:04.254 --> 00:03:05.544
you'll say Get Invoice.

44
00:03:05.544 --> 00:03:08.541
It'll hit the database,
which you can see it already.

45
00:03:08.541 --> 00:03:10.954
I've written all of the front end code, so

46
00:03:10.954 --> 00:03:13.779
you shouldn't have to touch
the front end at all.

47
00:03:13.779 --> 00:03:17.180
Everything will get logged out here.

48
00:03:17.180 --> 00:03:20.785
And just to prove my point,
if you go to network here.

49
00:03:20.785 --> 00:03:27.381
And let's just clear, so if I get invoice,
you can see it makes an invoice request.

50
00:03:27.381 --> 00:03:31.903
And it'll give you a response
of invoice and lines, okay,

51
00:03:31.903 --> 00:03:34.079
that's how that all works.

52
00:03:34.079 --> 00:03:38.028
And eventually, if you get it all right,
the invoice should populate here,

53
00:03:38.028 --> 00:03:40.416
as long as you call it
the same thing that I did.

54
00:03:42.573 --> 00:03:45.837
&gt;&gt; Brian Holt: Okay, so
that's what server.js does.

55
00:03:45.837 --> 00:03:50.039
It just registers all the functions here,
that's all it really is doing,

56
00:03:50.039 --> 00:03:51.849
sets up all the front end stuff.

57
00:03:51.849 --> 00:03:54.328
I was very lazy in how I did everything.

58
00:03:54.328 --> 00:03:58.053
I did not want you to have to
start a V8 server or Parcel or

59
00:03:58.053 --> 00:04:02.031
something like that, so
it's all done with no build step.

60
00:04:02.031 --> 00:04:07.791
There's an index.js that includes
a font and just some basic HTMX.

61
00:04:07.791 --> 00:04:13.008
The data.db, that's the one that
we were talking about already.

62
00:04:13.008 --> 00:04:15.214
There's a logo, there's some styles.

