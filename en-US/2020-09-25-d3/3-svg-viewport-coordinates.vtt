WEBVTT

1
00:00:00.670 --> 00:00:02.365
So yeah, let's get started with SVG.

2
00:00:02.365 --> 00:00:07.861
The very first thing I wanna talk about
SVG is its viewport and coordinate system.

3
00:00:07.861 --> 00:00:12.679
Just because with the viewpoint it's
a little bit different from how we might

4
00:00:12.679 --> 00:00:15.360
think about HTML and divs and paragraphs.

5
00:00:15.360 --> 00:00:20.114
So the way that I like to think about
SVG is as a window into this world.

6
00:00:20.114 --> 00:00:24.377
[LAUGH] Okay so I'm a little bit
embarrassed about this picture I drew, but

7
00:00:24.377 --> 00:00:27.421
I'm also really happy with
that little bird I drew.

8
00:00:27.421 --> 00:00:28.949
So anyways, I kept it.

9
00:00:28.949 --> 00:00:36.313
But I like to think SVG as kind of
a window into this world of shapes.

10
00:00:36.313 --> 00:00:41.522
And they exist beyond
the boundaries of this

11
00:00:41.522 --> 00:00:46.885
window but,
our SVG element is this window.

12
00:00:46.885 --> 00:00:50.697
And to be able to see
kind of into this world,

13
00:00:50.697 --> 00:00:56.177
we need to be able to specify
the width and height of the window.

14
00:00:56.177 --> 00:01:01.549
And this is how we do it,
we say SVG, and we set the width and

15
00:01:01.549 --> 00:01:07.170
we set the height, and
this is where we put in our SVG shapes.

16
00:01:07.170 --> 00:01:12.650
And then within this SVG world,
the x increases going to the right,

17
00:01:12.650 --> 00:01:15.255
and the y increases going down.

18
00:01:15.255 --> 00:01:20.486
So the (0,0) starts at
wherever we've specified

19
00:01:20.486 --> 00:01:25.841
the window to be and then yeah,
it goes across and down.

20
00:01:25.841 --> 00:01:30.667
And that's something to keep
in mind I think this is

21
00:01:30.667 --> 00:01:34.933
pretty common in graphics programming, but

22
00:01:34.933 --> 00:01:39.985
anyone that hasn't really done that,
It's a little

23
00:01:39.985 --> 00:01:45.277
bit of a mental shift to work
with the y increasing down.

24
00:01:45.277 --> 00:01:49.923
So it's just something that
we should always keep in

25
00:01:49.923 --> 00:01:54.895
mind cuz that's potentially
where bugs could show up.

26
00:01:54.895 --> 00:02:00.940
And if you're interested in a really
deep dive of the SVG coordinate system,

27
00:02:00.940 --> 00:02:06.898
I really highly recommend this blog post,
blog series from sara Soueidan.

28
00:02:06.898 --> 00:02:08.936
It's extremely comprehensive,

29
00:02:08.936 --> 00:02:13.229
goes into a lot of really great detail
about how this SVG viewport works.

30
00:02:13.229 --> 00:02:18.139
There's a lot of functionality there,
that we're not going to touch today.

31
00:02:18.139 --> 00:02:22.582
But that's just because in my
experience a lot of times,

32
00:02:22.582 --> 00:02:27.673
in general with data visualization,
I found that using width and

33
00:02:27.673 --> 00:02:32.689
height attributes are more than enough for
the projects I have.

34
00:02:36.209 --> 00:02:43.155
So, I wanted to kind of go through some
of the SVG elements I use very often.

35
00:02:43.155 --> 00:02:45.825
This is definitely not
a comprehensive list,

36
00:02:45.825 --> 00:02:48.225
it's just the ones that I tend to prefer.

37
00:02:48.225 --> 00:02:50.374
And I have this list of,

38
00:02:50.374 --> 00:02:55.424
if you want to see all of
the SVG shapes available to you,

39
00:02:55.424 --> 00:03:00.707
Mozilla has a basic shapes
article that you can check out.

40
00:03:00.707 --> 00:03:04.522
But the ones I like to use often is,

41
00:03:04.522 --> 00:03:09.007
rectangle, circle, path, and text.

42
00:03:09.007 --> 00:03:13.863
And so for each of these, there are some
attributes that we always need to set or

43
00:03:13.863 --> 00:03:18.132
else we're not going to be able to
see it rendering on the screen, and

44
00:03:18.132 --> 00:03:21.162
these are usually the dimension,
attributes.

45
00:03:21.162 --> 00:03:25.678
So for rectangle,
we always have to set our width and

46
00:03:25.678 --> 00:03:30.399
height, to be able to see it rendering for
the circle,

47
00:03:30.399 --> 00:03:34.505
we always have to set the radius,
for the path,

48
00:03:34.505 --> 00:03:40.891
we always have to set this D attribute,
which is a think short for define.

49
00:03:40.891 --> 00:03:44.740
And this is kind of
the string where we tell SVG,

50
00:03:44.740 --> 00:03:47.733
the kind of path that we want to draw.

51
00:03:47.733 --> 00:03:51.905
And then the optional attributes are
usually kind of the positioning attributes

52
00:03:51.905 --> 00:03:53.569
and if we don't provide these.

53
00:03:53.569 --> 00:03:57.405
Actually for all of these I
think if we don't provide these,

54
00:03:57.405 --> 00:04:02.082
it defaults to (0,0), and
that's also a good thing to keep in mind.

55
00:04:02.082 --> 00:04:06.917
But the optional attributes if
we want to move them around or

56
00:04:06.917 --> 00:04:13.215
anything is the x, y positions and for
the text, we also have text-anchor.

57
00:04:13.215 --> 00:04:20.712
And that I like to think of it as
like in CSS we have text align,

58
00:04:20.712 --> 00:04:26.450
and that's doing pretty
much the same thing.

59
00:04:26.450 --> 00:04:32.170
So text-anchor,
instead of you saying text on lines left,

60
00:04:32.170 --> 00:04:39.022
center, or right, you have text-anchor,
start, middle, and end.

61
00:04:39.022 --> 00:04:42.229
[LAUGH] So,
that's a slight syntax difference.

