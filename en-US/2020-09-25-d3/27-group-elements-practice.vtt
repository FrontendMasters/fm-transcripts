WEBVTT

1
00:00:00.460 --> 00:00:03.773
And then finally, very exciting.

2
00:00:03.773 --> 00:00:09.095
We have all the groups and
paths, and tags, that we need.

3
00:00:09.095 --> 00:00:14.297
So let's go ahead and
set the attributes and styles on them,

4
00:00:14.297 --> 00:00:18.175
so that they'll render
the way that we want.

5
00:00:18.175 --> 00:00:22.533
And so
these are almost the same attributes and

6
00:00:22.533 --> 00:00:29.363
styles that we set previously, and
this is what it ends up looking like.

7
00:00:29.363 --> 00:00:34.080
And just for
an actual little bit of repetition and

8
00:00:34.080 --> 00:00:38.796
retention, I was thinking
that we can go ahead and

9
00:00:38.796 --> 00:00:44.746
code all of that together,
what we just ran through together,

10
00:00:44.746 --> 00:00:49.483
to bring all of that code
together into one place.

11
00:00:49.483 --> 00:00:51.956
So, let's get going.

12
00:00:51.956 --> 00:00:57.225
So, we will have,

13
00:01:02.455 --> 00:01:07.734
The same as before where we have
an SVG with the width and height.

14
00:01:07.734 --> 00:01:13.511
So let us first create our

15
00:01:13.511 --> 00:01:18.740
parent group elements

16
00:01:18.740 --> 00:01:23.969
const g = d3.select

17
00:01:23.969 --> 00:01:28.932
the parent (svg).

18
00:01:28.932 --> 00:01:36.167
And then we're going to select all of the
groups in the svg that do not yet exist.

19
00:01:36.167 --> 00:01:42.317
And we're going to pass in our flowers,
data, Which is

20
00:01:42.317 --> 00:01:47.210
an array of objects with all of our scales
and rotate or scales and translates.

21
00:01:47.210 --> 00:01:52.393
And then we're gonna say
enter.append('group').

22
00:01:52.393 --> 00:01:55.649
And if we do that,
we don't see anything yet

23
00:01:55.649 --> 00:02:00.319
because group elements don't
render anything to the screen.

24
00:02:00.319 --> 00:02:05.367
But if we inspect element,
if I open up the chrome inspector,

25
00:02:05.367 --> 00:02:10.801
ooh, that always it's okay,
lost a place a little bit there but,

26
00:02:10.801 --> 00:02:14.606
okay, so let's inspect that element again.

27
00:02:14.606 --> 00:02:20.034
And then we can see all
of these group elements,

28
00:02:20.034 --> 00:02:24.919
have been inserted or
created in the DOM and

29
00:02:24.919 --> 00:02:27.918
there's 135 of them.

30
00:02:29.779 --> 00:02:34.105
So now, let's go ahead and

31
00:02:34.105 --> 00:02:39.190
let's create our pedal paths.

32
00:02:39.190 --> 00:02:43.685
And in a small side note about SVG is,

33
00:02:43.685 --> 00:02:47.456
just like with HTML elements,

34
00:02:47.456 --> 00:02:51.372
the order in which you create and

35
00:02:51.372 --> 00:02:56.015
insert the elements into DOM dictates

36
00:02:56.015 --> 00:03:01.259
the order in which they'll get rendered.

37
00:03:01.259 --> 00:03:07.158
And so, in the examples, or
in the explanation I gave earlier,

38
00:03:07.158 --> 00:03:11.529
I explained the text
element first just because

39
00:03:11.529 --> 00:03:14.931
conceptually it was easier to grok.

40
00:03:14.931 --> 00:03:19.902
But in actual practice what we want to do,
is we want to create our

41
00:03:19.902 --> 00:03:24.876
paths first because we want our
petals to get rendered first, so

42
00:03:24.876 --> 00:03:30.423
that our text can lie on top of it and
we can see the titles for our movies.

43
00:03:30.423 --> 00:03:33.313
So, let's get going with that.

44
00:03:33.313 --> 00:03:36.652
And so we actually can just say,

45
00:03:36.652 --> 00:03:42.095
within the selection of
our 135 group elements,

46
00:03:42.095 --> 00:03:47.922
we want to select all of
the paths that don't yet exist.

47
00:03:47.922 --> 00:03:53.032
We're going to figure out
what the data should be for

48
00:03:53.032 --> 00:03:57.459
each of those groups,
each of those movies.

49
00:03:57.459 --> 00:04:05.504
And so we are passed in the movie
data from our parent group element,

50
00:04:05.504 --> 00:04:09.753
and we want to return _times().

51
00:04:09.753 --> 00:04:13.008
The number of petals for
that particular group or movie.

52
00:04:15.918 --> 00:04:23.353
And then we want to create a new
object with the same apparent data.

53
00:04:23.353 --> 00:04:28.192
We're creating this new object so
that our children are new

54
00:04:28.192 --> 00:04:32.547
kind of individual children datum objects,
sorry,

55
00:04:32.547 --> 00:04:38.065
our individual children data don't
mutate the parent data because

56
00:04:38.065 --> 00:04:42.925
they shouldn't mix,
this shouldn't affect the parent.

57
00:04:42.925 --> 00:04:48.577
And so we're going to create
a new object copy over our

58
00:04:48.577 --> 00:04:53.601
parent data with all of
our movie information,

59
00:04:53.601 --> 00:04:58.626
or sorry flower information,
and we're going

60
00:04:58.626 --> 00:05:04.292
to also calculate the rotation for
each of the paths.

61
00:05:04.292 --> 00:05:08.271
And then another small new about SVG

62
00:05:08.271 --> 00:05:13.177
rotate which is that it uses degrees,
and so

63
00:05:13.177 --> 00:05:21.150
that's why I am dividing it 360
divide by the number of petal paths.

64
00:05:21.150 --> 00:05:25.898
If I remember correctly
in Vanilla JavaScript,

65
00:05:25.898 --> 00:05:30.412
with a lot of the math
functions like cosine and

66
00:05:30.412 --> 00:05:35.502
sine and all that and
we pass in radians, so two pie,

67
00:05:35.502 --> 00:05:40.048
and that always confuses me and
in the switch.

68
00:05:40.048 --> 00:05:46.753
So just remember with SVG, with rotate,
we pass in degrees, SVG, degrees.

69
00:05:46.753 --> 00:05:52.976
And so now [COUGH] we have the data bound,

70
00:05:52.976 --> 00:05:58.257
and we're going to do .enter and

71
00:05:58.257 --> 00:06:01.658
append on that data.

72
00:06:01.658 --> 00:06:05.298
And so with this piece of code,

73
00:06:05.298 --> 00:06:09.918
we should be able to inspect element and

74
00:06:09.918 --> 00:06:15.046
see, That,

75
00:06:17.059 --> 00:06:22.432
Within each group element,
we have the correct number of paths.

76
00:06:22.432 --> 00:06:30.766
Perfect, and if we were to say
select one of these paths and

77
00:06:30.766 --> 00:06:36.549
we wanted to see the properties on them,

78
00:06:36.549 --> 00:06:41.821
then we'll see the data that's been

79
00:06:41.821 --> 00:06:49.665
bound with the newly calculated
rotation in degrees.

80
00:06:49.665 --> 00:06:55.708
So let's use that piece of information,

81
00:06:55.708 --> 00:07:00.886
and the first thing we want to do is,

82
00:07:00.886 --> 00:07:05.042
we want to do SVG transform.

83
00:07:05.042 --> 00:07:11.314
And we want to take the data that we have,
on each of these petals,

84
00:07:11.314 --> 00:07:17.035
so right now we're operating
on each of these petal paths.

85
00:07:17.035 --> 00:07:22.023
And so for each of them,
what we want to do is first,

86
00:07:22.023 --> 00:07:28.983
we want to be able to rotate them to
the right, whatever we calculated,

87
00:07:28.983 --> 00:07:33.745
and so let's say rotate($(d.rotate)).

88
00:07:33.745 --> 00:07:36.314
And then we also want to
be able to scale them.

89
00:07:45.610 --> 00:07:48.793
So now if we take a look, wait, no,

90
00:07:48.793 --> 00:07:53.677
we haven't bounded the data yet,
or the d attribute yet.

91
00:07:53.677 --> 00:07:58.789
So now, let's go ahead and
bind our d attribute,

92
00:07:58.789 --> 00:08:04.143
which is in d.path, and
we see all of these up here,

93
00:08:04.143 --> 00:08:09.865
and the reason why they're all
up here is because we need

94
00:08:09.865 --> 00:08:16.608
to set .attr('transform'
translate on our group elements.

95
00:08:16.608 --> 00:08:23.447
And so let's go ahead and do that,
let's see 'translate($ and

96
00:08:23.447 --> 00:08:31.280
then we're going to use the position
array that we calculated previously.

97
00:08:35.374 --> 00:08:40.075
And was in not called position,
transform translate.

98
00:08:40.075 --> 00:08:45.274
Okay, so that's not happening,
so let's debug this together.

99
00:08:45.274 --> 00:08:49.529
So we have the rotations and and

100
00:08:49.529 --> 00:08:54.273
ooh, undefined so I don't think I

101
00:08:54.273 --> 00:08:59.193
called it position so, let me see.

102
00:08:59.193 --> 00:09:06.390
Okay, let me see our flowers array,
And what do we call it?

103
00:09:06.390 --> 00:09:07.774
We call it translate, okay.

104
00:09:07.774 --> 00:09:09.568
[LAUGH] All right so,

105
00:09:13.143 --> 00:09:19.648
D.translate, Here, awesome.

106
00:09:19.648 --> 00:09:25.432
So we've now translated all of our paths,
and so we have our flower shapes.

107
00:09:25.432 --> 00:09:31.636
And, you can see that we
still need to set the color,

108
00:09:31.636 --> 00:09:36.302
and their other shows and the opacity.

109
00:09:36.302 --> 00:09:40.544
But I just wanna take a small moment
to celebrate the flowers on the screen.

110
00:09:40.544 --> 00:09:47.001
And wait okay, I'm gonna go back and

111
00:09:47.001 --> 00:09:51.799
do something really quickly,

112
00:09:51.799 --> 00:09:57.163
which is that we need to use VJ's.

113
00:09:59.637 --> 00:10:04.637
Let's see, so
we need to use VJ's path, and so

114
00:10:04.637 --> 00:10:12.023
we're going to, Use that.

115
00:10:12.023 --> 00:10:19.327
Okay, so now that we've done that,
pardon me as I refresh this,

116
00:10:24.553 --> 00:10:28.891
Look at how cool that our shape looks.

117
00:10:28.891 --> 00:10:34.425
So that's the petal path that VJ gave us,

118
00:10:37.098 --> 00:10:39.744
And so, that's so exciting.

119
00:10:39.744 --> 00:10:44.616
Okay so, and
I hope at this point that you're seeing

120
00:10:44.616 --> 00:10:47.844
your own petal paths in there too.

121
00:10:47.844 --> 00:10:53.119
Yeah, let's go ahead and
set some of our styles,

122
00:10:53.119 --> 00:11:00.920
so let's go ahead and fill it by
the color that we previously calculated.

123
00:11:00.920 --> 00:11:08.418
We're going to also stroke it
by the color that we calculated,

124
00:11:08.418 --> 00:11:14.654
and let's give it a lower
fill-opacity of 0.5.

125
00:11:14.654 --> 00:11:20.456
And let's give it
a slightly thicker stroke,

126
00:11:20.456 --> 00:11:26.565
and let's have that be I
think we said 2 pixels.

127
00:11:26.565 --> 00:11:30.645
And there we go, look at that.

128
00:11:30.645 --> 00:11:35.360
Yeah, there's like a little bit of

129
00:11:35.360 --> 00:11:40.389
an inside detail with what VJ gave us,

130
00:11:40.389 --> 00:11:44.647
for these petals, right here.

