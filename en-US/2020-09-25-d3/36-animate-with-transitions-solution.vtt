WEBVTT

1
00:00:00.320 --> 00:00:02.410
Let's code along together.

2
00:00:02.410 --> 00:00:09.203
So the very first thing
we can do is we can see.

3
00:00:09.203 --> 00:00:14.905
Let us as always start by selecting SVG,

4
00:00:14.905 --> 00:00:20.448
that's select all of our rectangles.

5
00:00:23.413 --> 00:00:29.769
And we bind this data, so we have this
randomly generated array of data.

6
00:00:31.847 --> 00:00:34.658
And we'll pass in our key function.

7
00:00:37.120 --> 00:00:41.187
And as before, we will do a join, but

8
00:00:41.187 --> 00:00:47.130
instead of saying that we
want to join rectangles.

9
00:00:47.130 --> 00:00:51.300
We're going to pass in
the enter selection.

10
00:00:51.300 --> 00:00:56.591
Because what we want to do is we want to

11
00:00:56.591 --> 00:01:01.544
be able to construct rectangles,

12
00:01:01.544 --> 00:01:05.490
create those rectangles.

13
00:01:06.680 --> 00:01:12.400
In the DOM, and then we want to be

14
00:01:15.600 --> 00:01:19.670
able to animate them up.

15
00:01:19.670 --> 00:01:23.800
So let's work through
the logic of those together.

16
00:01:23.800 --> 00:01:29.140
So if we want them to animate
up from here, up to here.

17
00:01:29.140 --> 00:01:34.123
That means, first of all that
we need the y position to be

18
00:01:34.123 --> 00:01:37.100
the bottom of our SVG container.

19
00:01:38.130 --> 00:01:43.135
And so, up here I have our SVG height and

20
00:01:43.135 --> 00:01:48.751
rectangle width that I've hard coded and
so

21
00:01:48.751 --> 00:01:54.694
these are the attributes
to transition from.

22
00:01:54.694 --> 00:01:59.340
And the attr and so
let's start with our height being at

23
00:01:59.340 --> 00:02:03.291
zero since they're all
the way at the bottom.

24
00:02:03.291 --> 00:02:10.860
And we're going to have our y positions
be the bottom of our SVG container.

25
00:02:10.860 --> 00:02:13.769
So that's SVG height.

26
00:02:13.769 --> 00:02:20.330
And, actually,
I think we can just say return this.

27
00:02:23.790 --> 00:02:27.850
We don't do anything to
our update selection.

28
00:02:30.020 --> 00:02:36.580
And for our exit,
we said that we wanted to animate our

29
00:02:36.580 --> 00:02:42.540
bars from wherever they are all
the way down to the bottom.

30
00:02:42.540 --> 00:02:48.314
And actually that means what
we want to do is get our exit

31
00:02:48.314 --> 00:02:54.240
selection, then we're going
to set the transition.

32
00:02:54.240 --> 00:02:59.620
So now everything after
here is transition to

33
00:02:59.620 --> 00:03:03.620
the attributes that we
want to transition to.

34
00:03:03.620 --> 00:03:07.530
So that's why after this
exit dot transition,

35
00:03:07.530 --> 00:03:12.336
we want to transition our
height back down to zero.

36
00:03:12.336 --> 00:03:17.010
And our y position,

37
00:03:17.010 --> 00:03:20.110
back down to the bottom
of our SVG container.

38
00:03:21.590 --> 00:03:27.270
And then we kind of skipped over
kind of like that middle step of

39
00:03:27.270 --> 00:03:32.550
what is our update plus,
sorry enter plus update selection.

40
00:03:32.550 --> 00:03:38.117
And on that one, what we're going to do

41
00:03:38.117 --> 00:03:43.189
is we are going to call transition.

42
00:03:43.189 --> 00:03:51.285
So this is our enter plus
update selection, and so.

43
00:03:56.485 --> 00:04:01.502
What we want to do is we
want to first of all, and

44
00:04:01.502 --> 00:04:06.409
because this includes the enter selection.

45
00:04:06.409 --> 00:04:11.089
I want us to animate from the bottom and

46
00:04:11.089 --> 00:04:17.240
then have a grow up, so
let's have it grow up too.

47
00:04:18.360 --> 00:04:22.770
So, attributes to transition to.

48
00:04:24.380 --> 00:04:30.490
And so we wanted to grow to the height

49
00:04:30.490 --> 00:04:35.790
that is based on our data and
the y position.

50
00:04:37.360 --> 00:04:41.730
That is our SVG height minus our data.

51
00:04:42.730 --> 00:04:43.610
For our height.

52
00:04:43.610 --> 00:04:47.430
So this little position, so
SVG height minus our data.

53
00:04:49.040 --> 00:04:55.000
And if we do this,
we should see, actually,

54
00:04:55.000 --> 00:05:02.580
we also would want to set the width
of each of these rectangles.

55
00:05:02.580 --> 00:05:07.860
And we put that before
the transition dot transition t.

56
00:05:08.930 --> 00:05:12.400
Because we don't want
the width to be animating, so

57
00:05:12.400 --> 00:05:17.565
we do rectangle width and

58
00:05:17.565 --> 00:05:23.710
then we also need to
put in the x position.

59
00:05:23.710 --> 00:05:27.172
And so the x position we want that to be

60
00:05:27.172 --> 00:05:31.547
updating every single
time our data updates.

61
00:05:31.547 --> 00:05:35.768
Because sometimes maybe our
data shifts around in order, so

62
00:05:35.768 --> 00:05:39.170
we want the x position to
be updating every time.

63
00:05:40.620 --> 00:05:45.780
And so that will be,
we're just using the index

64
00:05:45.780 --> 00:05:50.270
to calculate index times
the rectangle widths.

65
00:05:53.200 --> 00:05:58.040
And so we are going to take a look at.

66
00:06:00.590 --> 00:06:01.890
Ooh, look at that.

67
00:06:05.081 --> 00:06:10.240
So there's a small detail that
maybe you notice and that is.

68
00:06:11.250 --> 00:06:16.190
That for
the elements the bars are animating in,

69
00:06:16.190 --> 00:06:20.200
you might notice that it's
animating in from the left.

70
00:06:20.200 --> 00:06:25.320
And that's because we did not set
the X position before the animation.

71
00:06:25.320 --> 00:06:29.867
So we didn't set the X position for
kind of like the stage A.

72
00:06:29.867 --> 00:06:33.390
And so it's defaulting to the svg.

73
00:06:33.390 --> 00:06:36.770
Rectangle elements default
exposition in zero.

74
00:06:36.770 --> 00:06:44.630
So that's why the bar is animating in
from the left when it's been entered.

75
00:06:45.660 --> 00:06:49.673
So to fix that, we want to

76
00:06:49.673 --> 00:06:54.452
adjust our enter selection,

77
00:06:54.452 --> 00:06:59.231
we want to also specify that,

78
00:06:59.231 --> 00:07:02.492
for the X position.

79
00:07:02.492 --> 00:07:04.223
We're going to actually,

80
00:07:09.290 --> 00:07:14.990
Set the x position already so
we are going to have the bars created.

81
00:07:14.990 --> 00:07:22.581
And once it's created we want it to
already be at the x position for

82
00:07:22.581 --> 00:07:26.870
the bar and then we'll have it grow.

83
00:07:26.870 --> 00:07:31.283
And this is kind of
the one place where it's

84
00:07:31.283 --> 00:07:35.949
an exception to the rule
of thumb that I have.

85
00:07:35.949 --> 00:07:39.957
Where the rule of thumb being for
the Enter selection,

86
00:07:39.957 --> 00:07:46.040
I only have reset the static attributes,
the non data dependent attributes.

87
00:07:46.040 --> 00:07:51.302
This is the only exception and

88
00:07:51.302 --> 00:07:56.142
when I want to create the DOM

89
00:07:56.142 --> 00:08:00.563
element with it starting

90
00:08:00.563 --> 00:08:05.625
from a specific attribute.

91
00:08:05.625 --> 00:08:10.344
So as in for this rectangle
I want it to be created with

92
00:08:10.344 --> 00:08:14.280
the x position already attached on it.

93
00:08:14.280 --> 00:08:19.949
And the reason why we don't do it
on the Enter plus update selection,

94
00:08:19.949 --> 00:08:23.292
the reason why we don't do it down here.

95
00:08:23.292 --> 00:08:28.773
Is because if we did that there,
then that means

96
00:08:28.773 --> 00:08:33.844
even on updates, on the update selection,

97
00:08:33.844 --> 00:08:39.888
it will get updated to
the next position right away.

98
00:08:39.888 --> 00:08:42.136
And so it won't have that animation.

99
00:08:46.146 --> 00:08:51.125
And so that's why we want to
set the x attribute here,

100
00:08:51.125 --> 00:08:55.560
and then I'm going to put
in some of our colors.

101
00:08:58.170 --> 00:09:03.620
So that was fill pink stroke.

102
00:09:06.820 --> 00:09:14.909
And our stroke width is 2.

103
00:09:14.909 --> 00:09:19.469
And now if we play around with this,

104
00:09:19.469 --> 00:09:24.486
you can see that the bars are created and

105
00:09:24.486 --> 00:09:29.211
they kinda grow up in the x position.

106
00:09:29.211 --> 00:09:33.470
That's been calculated, so it doesn't
kinda enter in weirdly from the left.

107
00:09:35.850 --> 00:09:41.800
And sometimes, if the same data persists,
you can see that they slide around.

108
00:09:41.800 --> 00:09:46.385
And that the bars that need to be removed,

109
00:09:46.385 --> 00:09:53.598
they are being animated down first and
then removed from the dom.

110
00:09:56.774 --> 00:10:04.266
Yeah, there's our transition exercise, and
hopefully seen this as quite exciting.

111
00:10:04.266 --> 00:10:08.715
And hopefully seen that it
only takes a few more lines of

112
00:10:08.715 --> 00:10:11.252
creating the D3 transition.

113
00:10:11.252 --> 00:10:15.608
And then calling it at some key places,

114
00:10:15.608 --> 00:10:21.020
namely just here and
also here on the enter update

115
00:10:21.020 --> 00:10:25.783
selection and here on the exit selection.

116
00:10:25.783 --> 00:10:30.404
Calling at just those two places and
we get this really kind

117
00:10:30.404 --> 00:10:35.040
of nice animation to show us
how our data is being updated.

118
00:10:36.630 --> 00:10:39.470
So yeah, I think even just that kind of

119
00:10:39.470 --> 00:10:44.650
few lines addition thing gives
us something really powerful.

120
00:10:44.650 --> 00:10:50.510
And of course, this is kind of a lot
of code to fit onto one screen.

121
00:10:50.510 --> 00:10:53.188
So hopefully if you're coding along.

122
00:10:53.188 --> 00:10:56.839
And you haven't captured everything.

123
00:10:56.839 --> 00:11:04.700
I have the solutions to all of our
examples in somewhere near our exercise.

124
00:11:04.700 --> 00:11:10.080
So, in this case,
it is hidden here under this.

125
00:11:10.080 --> 00:11:11.810
Here's what the end result looks like.

126
00:11:11.810 --> 00:11:17.121
And so you can kinda go in and
take a look here.

