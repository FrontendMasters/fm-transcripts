WEBVTT

1
00:00:00.060 --> 00:00:05.340
Now that we have something selected
with D3, let's go ahead and

2
00:00:05.340 --> 00:00:07.380
bind some data to it.

3
00:00:07.380 --> 00:00:12.560
And so that we can kind of start
drawing things with our data.

4
00:00:12.560 --> 00:00:18.290
So let's take this kind of
random array of five numbers.

5
00:00:21.220 --> 00:00:24.980
And then in this cell,
we've actually bound that data

6
00:00:28.470 --> 00:00:31.700
to our SVG to different selections.

7
00:00:31.700 --> 00:00:35.570
And so, let's again together,
look through the cell and

8
00:00:35.570 --> 00:00:41.650
try on commenting different things and
see what that D3 selection looks like.

9
00:00:43.710 --> 00:00:52.860
And so the very first thing we'll
do is we will go ahead and see.

10
00:00:52.860 --> 00:00:58.220
We're going to select all of
the rectangles in our SVG.

11
00:00:58.220 --> 00:01:02.830
And we're going to call dot datum and

12
00:01:02.830 --> 00:01:08.900
pass in our bar data,
this array of five numbers.

13
00:01:08.900 --> 00:01:14.320
And so what we'll see here is that
in groups, we have just that first

14
00:01:14.320 --> 00:01:19.570
rectangle element and then inside
we'll see that this underscore data

15
00:01:22.100 --> 00:01:26.560
and we have the whole array
bound to this one rectangle.

16
00:01:26.560 --> 00:01:29.920
And so when you hear someone
talk about like D3 and

17
00:01:29.920 --> 00:01:34.140
data binding in D3, and
this is what's happening under the hood,

18
00:01:34.140 --> 00:01:38.578
which is that D3 goes and actually creates
this underscore underscore data property

19
00:01:38.578 --> 00:01:43.690
in the elements, in the DOM elements.

20
00:01:43.690 --> 00:01:48.190
So if you take a look at,
this is what you might

21
00:01:50.500 --> 00:01:53.850
see if you're working
outside of Observable.

22
00:01:53.850 --> 00:01:56.784
If you are, for example,

23
00:01:56.784 --> 00:02:01.845
working on your own index HTML file or

24
00:02:01.845 --> 00:02:05.905
something and you want to be you want
to debug and you console log, this is

25
00:02:05.905 --> 00:02:10.500
what you might see which is there's the
groups and there's your first rectangle.

26
00:02:10.500 --> 00:02:17.125
And then within that you'll have all of
these like properties on the rectangle and

27
00:02:17.125 --> 00:02:22.309
if you scroll all the way to the bottom,
you'll see that there is

28
00:02:22.309 --> 00:02:28.759
this underscore data property right here
and it will have your bound data on it.

29
00:02:28.759 --> 00:02:33.827
So whenever you're like not sure what
data has been bound to your like,

30
00:02:33.827 --> 00:02:39.050
particular DOM element, and
this is a really great way to check.

31
00:02:39.050 --> 00:02:44.310
And so another way if you don't want to
console log in your code is if you like,

32
00:02:44.310 --> 00:02:50.080
select and
if you select the element that you

33
00:02:51.130 --> 00:02:56.561
want to inspect and
I think it's console dot direct,

34
00:02:56.561 --> 00:03:00.380
yeah, dir dollar sign zero and

35
00:03:00.380 --> 00:03:06.998
that will give you the DOM element.

36
00:03:06.998 --> 00:03:12.460
Or kind of the properties for
the DOM element that you

37
00:03:12.460 --> 00:03:17.360
highlighted and so you can see it, you
can potentially inspect it that way also.

38
00:03:19.300 --> 00:03:21.090
So that's what dot datum looks like.

39
00:03:22.680 --> 00:03:27.240
Now let's take a look at if we selected,
oops.

40
00:03:32.040 --> 00:03:38.010
If we selected all of
the rectangles in our SVG,

41
00:03:38.010 --> 00:03:44.716
and bound our array of five numbers, let's
see what happens if we call it dot datum.

42
00:03:47.010 --> 00:03:51.540
Here we have our five rectangle elements.

43
00:03:51.540 --> 00:03:56.050
And you can see that we have
the same array of five numbers

44
00:03:56.050 --> 00:03:58.300
bound on every single one of them.

45
00:04:01.800 --> 00:04:06.528
And finally, let's take a look at what
if we selected all the rectangles and

46
00:04:06.528 --> 00:04:08.000
call it dot data on it.

47
00:04:10.090 --> 00:04:17.842
Then what we get is in groups, we still
get that array of five rectangle elements.

48
00:04:17.842 --> 00:04:21.370
But now, noticed that the difference is,

49
00:04:21.370 --> 00:04:26.560
instead of each of these rectangle
elements having the array of five numbers

50
00:04:26.560 --> 00:04:31.540
they each have one element
of the data array.

51
00:04:31.540 --> 00:04:38.110
So each rectangle now has
one value of the data array.

52
00:04:38.110 --> 00:04:42.330
So the first one has 45,
the second one has 67, and so on.

53
00:04:43.860 --> 00:04:49.710
So if we want to illustrate
what's going on here, for

54
00:04:49.710 --> 00:04:53.150
dot datum if we select just one dot datum,

55
00:04:53.150 --> 00:04:58.190
we are basically binding
the whole data onto one of them.

56
00:04:58.190 --> 00:05:01.180
If we select all the rectangles and
do dot datum,

57
00:05:01.180 --> 00:05:06.340
we are binding the whole
data array to all of them.

58
00:05:06.340 --> 00:05:10.360
And finally,
if we select all the rectangles and

59
00:05:10.360 --> 00:05:14.600
called dot data, we are binding

60
00:05:14.600 --> 00:05:19.480
the individual data elements to
the individual rectangle elements.

