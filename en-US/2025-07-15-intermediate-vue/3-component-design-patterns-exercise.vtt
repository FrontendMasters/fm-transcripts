WEBVTT

1
00:00:00.160 --> 00:00:03.243
&gt;&gt; Ben Hong: I've talked for a little bit
and now it's time for you to go ahead and

2
00:00:03.243 --> 00:00:04.280
get some practice in.

3
00:00:04.280 --> 00:00:06.708
So, what I'm gonna do is
I'm gonna go ahead and

4
00:00:06.708 --> 00:00:08.720
push up the branch that I just did.

5
00:00:08.720 --> 00:00:10.000
That'll be 01-begin.

6
00:00:11.520 --> 00:00:14.960
And then I'll do a branch
right now called 01 exercise.

7
00:00:14.960 --> 00:00:18.272
So that'll basically pick up
where we just left off, but

8
00:00:18.272 --> 00:00:23.040
that way you'll have kind of the Latest
check out 01 branch exercise for later.

9
00:00:25.120 --> 00:00:29.920
And so the goal here for this particular
exercise is you're going to be then.

10
00:00:29.920 --> 00:00:32.001
So text area is actually
in this particular app,

11
00:00:32.001 --> 00:00:34.560
used a little bit more than text input,
surprisingly.

12
00:00:34.560 --> 00:00:37.508
And so I want you to go ahead and
take what we've learned so far and

13
00:00:37.508 --> 00:00:41.111
to create a base text area component where
we apply basically the things that we

14
00:00:41.111 --> 00:00:44.960
learned about as far as like wrapping the
component in a vendor wrapper component.

15
00:00:44.960 --> 00:00:48.833
You're going to go ahead and make it
transparent, pass its attributes, and

16
00:00:48.833 --> 00:00:53.170
just basically make it work within the app
and then refactor it as you see fit.

17
00:00:53.170 --> 00:00:57.468
And then for those of you, if that is too
easy, feel free to go ahead and look at

18
00:00:57.468 --> 00:01:02.050
other things that you can refactor inside
of the app regarding forms and whatnot.

19
00:01:07.970 --> 00:01:10.610
How did everyone do,
did that work out okay?

20
00:01:11.730 --> 00:01:14.650
All right, well, if you had any
trouble with it, no worries.

21
00:01:14.650 --> 00:01:15.890
We're going to walk through it together.

22
00:01:15.890 --> 00:01:18.946
All right, so when it comes to refactoring
this part, obviously first thing we're

23
00:01:18.946 --> 00:01:21.570
going to do is just kind of see
where the text areas are being used.

24
00:01:21.570 --> 00:01:24.190
So, we can see that we have
them using three areas.

25
00:01:24.190 --> 00:01:27.230
So I'm just going to pull from
the task form modal to start.

26
00:01:27.230 --> 00:01:30.833
And if we analyze this DOM element,
we can see here that besides the text area

27
00:01:30.833 --> 00:01:33.874
itself, similarly to the import
that we saw earlier, the input

28
00:01:33.874 --> 00:01:38.110
that we worked with earlier, we had
a label here and we got a form control.

29
00:01:38.110 --> 00:01:40.830
So I think we have a good
place to get started then.

30
00:01:40.830 --> 00:01:44.967
So I'll go ahead and
actually just copy this to start and

31
00:01:44.967 --> 00:01:50.980
then we're going to go ahead and
create a new base text area component.

32
00:01:50.980 --> 00:01:54.004
And so some of you actually may have
noticed that I'm prefacing all of these

33
00:01:54.004 --> 00:01:55.204
sort of wrapper components,

34
00:01:55.204 --> 00:01:57.660
especially when they're wrapping
DOM elements with base.

35
00:01:57.660 --> 00:02:00.610
You can also preface it with
your company's two letters of

36
00:02:00.610 --> 00:02:05.005
your company's name or whatnot, but it's
generally recommended to do so because you

37
00:02:05.005 --> 00:02:09.060
don't want to conflict directly with
any sort of native DOM implementations.

38
00:02:09.060 --> 00:02:12.132
And so the general convention
is that not to use single

39
00:02:12.132 --> 00:02:16.420
word component names just to avoid
those sort of future collisions.

40
00:02:16.420 --> 00:02:19.755
There's a couple of times review does
it natively, but again, they're paying

41
00:02:19.755 --> 00:02:23.700
attention to the spec at a level that most
of us probably aren't paying attention to.

42
00:02:23.700 --> 00:02:26.724
So it's just one of those things that
you'll see that I do as a best practice

43
00:02:26.724 --> 00:02:28.580
to avoid that happening.

44
00:02:28.580 --> 00:02:32.580
All right, so we got here,
boom, we have this perfect.

45
00:02:32.580 --> 00:02:36.822
And then what we're going to do here is
we're going to start by just defining

46
00:02:36.822 --> 00:02:41.310
the props for the basic things that we
want to control very specifically for.

47
00:02:41.310 --> 00:02:46.590
So, we have things like the label require,
true.

48
00:02:48.030 --> 00:02:50.637
And then we're going
to do the ID again and

49
00:02:50.637 --> 00:02:54.829
this time I'll remember that I
required it, unlike last time.

50
00:02:54.829 --> 00:02:58.110
So we'll make sure to have that ID and
label.

51
00:02:58.110 --> 00:02:58.640
Great.
So,

52
00:02:58.640 --> 00:03:00.910
we're gonna replace both
of these things with id.

53
00:03:02.030 --> 00:03:04.430
And then that did not work
the way I wanted it to.

54
00:03:04.430 --> 00:03:05.150
So there we go.

55
00:03:05.150 --> 00:03:06.890
Now we found those.

56
00:03:06.890 --> 00:03:11.890
We got the label here and then basically
it looks like the main piece we need is.

57
00:03:11.890 --> 00:03:12.890
We don't need that.

58
00:03:12.890 --> 00:03:14.330
We don't need to.

59
00:03:14.330 --> 00:03:15.395
You know, honestly,

60
00:03:15.395 --> 00:03:19.038
I would like to make the placeholder
something that is being sort of alerted to

61
00:03:19.038 --> 00:03:22.650
it is something that we find to be
a good user experience for people.

62
00:03:22.650 --> 00:03:26.410
So we'll make that something
that's defined as well.

63
00:03:26.410 --> 00:03:31.050
And that way it's explicitly
here in the component API.

64
00:03:31.050 --> 00:03:34.275
And then finally we just got to
deal with this description part,

65
00:03:34.275 --> 00:03:38.230
which we've learned now we don't have
to set all that model value emit stuff.

66
00:03:38.230 --> 00:03:40.750
All we got to do is say const.

67
00:03:40.750 --> 00:03:44.830
Basically, in this case I can just
say model value equals define model.

68
00:03:46.270 --> 00:03:49.350
And then just again,
just a sprinkling of TypeScript here.

69
00:03:49.350 --> 00:03:53.835
The basically the greater than less than
symbol allows you to pass in what type

70
00:03:53.835 --> 00:03:55.910
that you expect define model to be.

71
00:03:55.910 --> 00:03:58.270
So you can see here now,
define model is a string.

72
00:03:59.320 --> 00:04:04.200
And so now that we have that, we can go
ahead and just bind it to model value.

73
00:04:06.280 --> 00:04:09.348
And then to make sure this works,
now that everything is good.

74
00:04:09.348 --> 00:04:11.240
We're still missing one thing, actually.

75
00:04:11.240 --> 00:04:13.640
We need to go ahead and define options.

76
00:04:14.840 --> 00:04:20.190
We're going to go ahead and disable the
inherent attributes or inherit adders and

77
00:04:20.190 --> 00:04:25.229
we're going to go ahead and V bind
everything else directly to the text area,

78
00:04:25.229 --> 00:04:28.270
because that's the main
thing we care about.

79
00:04:29.310 --> 00:04:34.188
Then from here we can go ahead and jump on
in and we can refactor this now to base

80
00:04:34.188 --> 00:04:37.710
text area so
let me make sure this imported correctly.

81
00:04:37.710 --> 00:04:39.498
I don't think it did.

82
00:04:39.498 --> 00:04:41.550
It did, fantastic.

83
00:04:41.550 --> 00:04:42.830
There's our base text area.

84
00:04:44.190 --> 00:04:46.670
Although, yes, that looks right.

85
00:04:46.670 --> 00:04:50.920
Okay, so
base text area is imported correctly.

86
00:04:50.920 --> 00:04:54.360
Now we just need to go ahead and
seal this off.

87
00:04:54.360 --> 00:04:56.040
Self closing.

88
00:04:56.040 --> 00:04:59.240
We have the id, we have the V model.

89
00:04:59.240 --> 00:05:01.320
We don't need the class,
we don't need the rows.

90
00:05:01.320 --> 00:05:03.320
We have the placeholder.

91
00:05:03.320 --> 00:05:07.280
And it looks like this one is still
erroring out because what did I forget?

92
00:05:07.280 --> 00:05:09.320
I forgot the label.

93
00:05:09.320 --> 00:05:12.600
And this one we're just
calling it description.

94
00:05:12.600 --> 00:05:14.200
So now that should take care of that.

95
00:05:14.200 --> 00:05:16.280
We don't need any of
that boilerplate anymore.

96
00:05:18.180 --> 00:05:19.060
And there we go.

97
00:05:19.060 --> 00:05:22.757
And so, to make sure this works, obviously
this we're currently in the task form

98
00:05:22.757 --> 00:05:25.020
model, so let's go ahead and
run over to our app.

99
00:05:25.020 --> 00:05:26.420
Let me make sure it's running.

100
00:05:26.420 --> 00:05:28.340
Looks like it's running.

101
00:05:28.340 --> 00:05:32.100
All right, so we have our tasks,
our task modal here.

102
00:05:32.100 --> 00:05:34.740
There we go, deep dive into its features.

103
00:05:34.740 --> 00:05:36.660
This is my new update.

104
00:05:36.660 --> 00:05:37.180
Update.

105
00:05:37.180 --> 00:05:38.740
Task edit.

106
00:05:38.740 --> 00:05:39.700
There you go.

107
00:05:39.700 --> 00:05:42.430
And it saved and updated accordingly.

108
00:05:42.430 --> 00:05:45.150
So we'll just for
the sake of completing the exercise fully,

109
00:05:45.150 --> 00:05:48.510
we're just going to quickly then just
do essentially a search and replace.

110
00:05:49.630 --> 00:05:52.110
So we'll do base text area again.

111
00:05:52.110 --> 00:05:54.030
I'll make sure the input is correct later.

112
00:05:54.030 --> 00:05:58.225
I think already with that highlight,
it probably isn't disabled is good,

113
00:05:58.225 --> 00:06:00.990
Placeholder is good,
class is good, id is good.

114
00:06:00.990 --> 00:06:03.710
But we do want that label for there.

115
00:06:04.750 --> 00:06:08.761
I usually like to put the dynamic stuff
a little particularly V model a bit,

116
00:06:08.761 --> 00:06:12.760
little, little bit higher just to
let developers know that's there.

117
00:06:12.760 --> 00:06:14.520
And then we don't need any of this.

118
00:06:16.520 --> 00:06:18.280
So that takes care of that.

119
00:06:20.120 --> 00:06:22.160
And then this is the time
entry form model.

120
00:06:22.160 --> 00:06:26.304
So where that is is you'll see that your
task can also then basically track how

121
00:06:26.304 --> 00:06:28.040
much time has been added.

122
00:06:28.040 --> 00:06:35.140
And so, this is the time I spent
on this component and then add.

123
00:06:35.140 --> 00:06:35.980
And you can see here.

124
00:06:35.980 --> 00:06:38.340
There we go, we have our
description still working great.

125
00:06:40.260 --> 00:06:44.340
And then finally we got one more which
is looks like the weak form modal.

126
00:06:44.340 --> 00:06:49.100
So, this one we'll go ahead and
let's drop the label here first.

127
00:06:49.100 --> 00:06:51.780
That's the one that seems to
be erroring out the most.

128
00:06:51.780 --> 00:06:52.980
Base text area.

129
00:06:54.660 --> 00:06:56.500
Delete all that stuff.

130
00:06:56.500 --> 00:06:58.700
Delete, delete, self closing.

131
00:06:58.700 --> 00:07:04.350
Delete div, don't need the rows,
don't need the class save.

132
00:07:04.350 --> 00:07:06.910
And then I assume it imported correctly,
but we'll check.

133
00:07:06.910 --> 00:07:08.590
Nope, did not this time.

134
00:07:08.590 --> 00:07:09.790
Did the type.

135
00:07:09.790 --> 00:07:10.710
Don't know why it does that.

136
00:07:10.710 --> 00:07:13.270
It seems to be like a 5050
thing with the auto import.

137
00:07:13.270 --> 00:07:14.750
Yep, that one looks good too.

138
00:07:14.750 --> 00:07:18.487
So the week four model then on the other
hand is when we go to our planner and

139
00:07:18.487 --> 00:07:22.270
we want to look at a week, this is where
we can add the goals for the week.

140
00:07:22.270 --> 00:07:28.360
So this is my new goal update and
then it's still here.

141
00:07:28.360 --> 00:07:29.720
So we're good.

142
00:07:29.720 --> 00:07:31.400
Yes, we got a question.

143
00:07:31.400 --> 00:07:35.240
&gt;&gt; Speaker 2: What is this being saved to,
like the database?

144
00:07:35.240 --> 00:07:37.000
&gt;&gt; Ben Hong: The database, yes.

145
00:07:37.000 --> 00:07:43.400
So, the way this app currently works is
there is a back-end folder that basically.

146
00:07:43.400 --> 00:07:46.760
And there's a database .json, adb.json.

147
00:07:46.760 --> 00:07:50.823
The way this works is it's just
a static file that's local, but

148
00:07:50.823 --> 00:07:55.190
combined with this awesome open
source library called JSON Server,

149
00:07:55.190 --> 00:07:59.857
it stubs out a REST API that allows you
to basically create endpoints to hit

150
00:07:59.857 --> 00:08:03.660
the shape of the DB JSON and
then update it accordingly.

151
00:08:03.660 --> 00:08:05.180
So it looks like that's good.

152
00:08:05.180 --> 00:08:08.340
And so I'm going to go ahead and
make sure I commit this to the exercise.

153
00:08:08.340 --> 00:08:08.900
Well, let's see.

154
00:08:08.900 --> 00:08:11.420
Actually O1 exercise is where we started.

155
00:08:11.420 --> 00:08:14.647
So I'm going to check
out now 01 solution and

156
00:08:14.647 --> 00:08:19.090
then we'll go ahead and
add everything we just did.

157
00:08:19.090 --> 00:08:23.495
Say refactor,
create base text area component,

158
00:08:27.873 --> 00:08:31.445
And ref and place.

159
00:08:31.445 --> 00:08:33.410
That's fine actually,
that should be good enough.

160
00:08:33.410 --> 00:08:33.956
Okay.

161
00:08:33.956 --> 00:08:41.050
&gt;&gt; Speaker 3: So for some reason my ID and
label are getting passed through as.

162
00:08:41.050 --> 00:08:42.470
Adders, not props.

163
00:08:42.470 --> 00:08:44.090
&gt;&gt; Ben Hong: In your base text.

164
00:08:44.090 --> 00:08:46.010
&gt;&gt; Speaker 3: I have defined props.

165
00:08:46.010 --> 00:08:46.510
&gt;&gt; Ben Hong: Yeah.

166
00:08:49.610 --> 00:08:53.770
Okay, let's see this actually,
this is something to.

167
00:08:53.770 --> 00:08:54.652
&gt;&gt; Speaker 3: So I don't see like,

168
00:08:54.652 --> 00:08:57.010
I don't see the label printed
on page where it should be.

169
00:08:57.010 --> 00:08:59.882
The id works because it's an adder and

170
00:08:59.882 --> 00:09:03.930
it's kind of splatted across
the rest of the adders.

171
00:09:05.050 --> 00:09:06.090
Works for you.

172
00:09:06.090 --> 00:09:09.690
&gt;&gt; Ben Hong: So in case anyone is
not seeing their attributes show up.

173
00:09:09.690 --> 00:09:10.530
So.

174
00:09:10.530 --> 00:09:12.850
So we see here that the description
here is showing up.

175
00:09:14.210 --> 00:09:16.817
We did a little debugging earlier and so

176
00:09:16.817 --> 00:09:21.338
if you're not using script setup
right here and then I think.

177
00:09:21.338 --> 00:09:23.330
I think I probably broke it, hold up.

178
00:09:24.770 --> 00:09:27.730
Do, no, that should be fine, run dev.

179
00:09:29.410 --> 00:09:33.424
Go, define off well.

180
00:09:33.424 --> 00:09:34.850
That's how you go.

181
00:09:34.850 --> 00:09:36.717
There you go.

182
00:09:36.717 --> 00:09:38.320
Remember I said the auto import.

183
00:09:38.320 --> 00:09:39.280
That's funny.

184
00:09:39.280 --> 00:09:41.360
Let me do this real quick, define props.

185
00:09:42.960 --> 00:09:44.400
I'll explain this to everyone.

186
00:09:44.400 --> 00:09:45.760
So, you're aware of this, okay?

187
00:09:50.000 --> 00:09:50.720
There we go.

188
00:09:51.919 --> 00:09:55.200
Okay, so you'll notice here
I just recreated the bug.

189
00:09:55.200 --> 00:09:58.080
That label has magically disappeared,
right?

190
00:09:58.080 --> 00:10:02.320
It looks like everything is fine because
after all we've imported all of our.

191
00:10:02.320 --> 00:10:05.980
What seems like our helpers and
so it should work.

192
00:10:05.980 --> 00:10:10.447
This is where I think it's a little bit
of a gotcha with the Composition API and

193
00:10:10.447 --> 00:10:14.540
the new script setup authoring
format is that there's actually a.

194
00:10:14.540 --> 00:10:19.052
Let's call it a magic engine running
underneath that does a bunch of stuff

195
00:10:19.052 --> 00:10:22.540
because we have this
setup attribute added on.

196
00:10:22.540 --> 00:10:26.044
So even though you theoretically
imported these helper methods up here,

197
00:10:26.044 --> 00:10:28.812
the compiler isn't there to optimize for
those things and

198
00:10:28.812 --> 00:10:31.670
therefore is basically
not not being caught.

199
00:10:31.670 --> 00:10:32.977
And so for those wondering,

200
00:10:32.977 --> 00:10:36.470
you might have noticed that I did not
actually explicitly import those.

201
00:10:36.470 --> 00:10:40.400
And that's just because when you're using
script setup, these macros like define

202
00:10:40.400 --> 00:10:44.218
options, define props, define model,
they're just assumed that you're only

203
00:10:44.218 --> 00:10:47.670
using it in the script setup context and
therefore you don't need to.

204
00:10:47.670 --> 00:10:51.245
However, just to be clear, I think I
mentioned this just before I walked over

205
00:10:51.245 --> 00:10:53.830
here that it is totally fine
if you want to be explicit for

206
00:10:53.830 --> 00:10:56.310
your developers where these
things are coming from.

207
00:10:56.310 --> 00:10:57.799
And this is not assumed knowledge.

208
00:10:57.799 --> 00:11:00.249
It's totally fine to leave
it up here as well but

209
00:11:00.249 --> 00:11:03.910
just know that it's not required
from an import perspective.

210
00:11:03.910 --> 00:11:08.868
&gt;&gt; Speaker 4: So I had the kind of
opposite problem where I had left

211
00:11:08.868 --> 00:11:16.310
the label prop off of my base text area
and it just loaded up without a label.

212
00:11:16.310 --> 00:11:22.386
So the requirement of the prop
didn't trigger anything, any errors.

213
00:11:22.386 --> 00:11:23.600
&gt;&gt; Ben Hong: Interesting.

214
00:11:23.600 --> 00:11:26.464
So what you're saying,
just to make sure I understand,

215
00:11:26.464 --> 00:11:28.640
is that you left off the prop definition.

216
00:11:28.640 --> 00:11:31.426
&gt;&gt; Speaker 4: Nope, the prop definition
was there with the required, true.

217
00:11:31.426 --> 00:11:39.306
When I implemented using the component
I didn't include the label as part of.

218
00:11:39.306 --> 00:11:40.560
&gt;&gt; Ben Hong: Like the props definition.

219
00:11:40.560 --> 00:11:41.880
&gt;&gt; Speaker 4: The props
that are passed into it.

220
00:11:41.880 --> 00:11:42.680
&gt;&gt; Ben Hong: And then it was fine.

221
00:11:42.680 --> 00:11:44.560
&gt;&gt; Speaker 4: And it seemed to be fine.

222
00:11:44.560 --> 00:11:46.000
It just didn't render the.

223
00:11:46.000 --> 00:11:49.800
It just essentially rendered nothing for
the.

224
00:11:49.800 --> 00:11:50.948
&gt;&gt; Speaker 5: If you
didn't have script setup,

225
00:11:50.948 --> 00:11:53.679
it would do that because it wouldn't know
that it's required because it doesn't

226
00:11:53.679 --> 00:11:55.080
actually use it as a problem.

227
00:11:55.080 --> 00:11:57.440
&gt;&gt; Speaker 4: Yeah, but
I've got script setup, I think.

228
00:11:57.440 --> 00:12:01.400
&gt;&gt; Ben Hong: No, I think, let's just
try to recreate this real quick.

229
00:12:01.400 --> 00:12:02.800
So I'm in the weak form modal.

230
00:12:02.800 --> 00:12:05.560
You were mentioning that if I
delete label like this, right?

231
00:12:05.560 --> 00:12:06.360
&gt;&gt; Speaker 4: Yep.

232
00:12:06.360 --> 00:12:06.960
&gt;&gt; Ben Hong: Save it.

233
00:12:06.960 --> 00:12:09.160
&gt;&gt; Speaker 4: It did not
throw the error for me.

234
00:12:09.160 --> 00:12:11.480
&gt;&gt; Ben Hong: Refresh, edit.

235
00:12:11.480 --> 00:12:12.760
&gt;&gt; Speaker 4: It did this.

236
00:12:12.760 --> 00:12:15.090
&gt;&gt; Ben Hong: So yeah, it just showed up.

237
00:12:15.090 --> 00:12:18.658
This honestly might just be like
the TypeScript server might need to be

238
00:12:18.658 --> 00:12:19.330
restarted.

239
00:12:19.330 --> 00:12:21.330
That is something that people actually.

240
00:12:21.330 --> 00:12:23.250
I guess this is actually
worth calling out.

241
00:12:23.250 --> 00:12:27.981
So in the event you ever noticing
your type inferences are not

242
00:12:27.981 --> 00:12:33.970
really working as expected,
there is this ability to this one.

243
00:12:33.970 --> 00:12:38.545
So in your VS code, the way I do it is
command shift P Or if you do command P,

244
00:12:38.545 --> 00:12:41.920
basically you're opening
your command line and.

245
00:12:41.920 --> 00:12:45.133
And then again, for those who are new,
if you have this greater than symbol,

246
00:12:45.133 --> 00:12:46.720
this will basically.

247
00:12:46.720 --> 00:12:50.229
Rather than just like, for
example, if I don't have that and

248
00:12:50.229 --> 00:12:54.720
I just type restart, it'll actually
look at files inside of my directory.

249
00:12:54.720 --> 00:12:58.080
The greater than basically forces
it into command mode, essentially.

250
00:12:58.080 --> 00:13:01.525
And so if you'll notice that if I do
a restart, then you'll see view, restart,

251
00:13:01.525 --> 00:13:03.360
view, and Typescript servers.

252
00:13:03.360 --> 00:13:05.640
Sometimes that's just what you need to
do in order to get everything working.

253
00:13:05.640 --> 00:13:07.502
And so, if it's ever looking funky,
like you're like,

254
00:13:07.502 --> 00:13:08.760
I definitely defined that correctly.

255
00:13:08.760 --> 00:13:09.920
Why is it so yelling at me?

256
00:13:11.150 --> 00:13:12.190
Yeah, try this first.

257
00:13:13.230 --> 00:13:14.350
I use this quite often.

258
00:13:17.230 --> 00:13:17.950
Great questions.

259
00:13:17.950 --> 00:13:19.470
Thanks for calling those things out.

260
00:13:21.470 --> 00:13:25.631
But yeah, this is also what's interesting
about different type checking is that

261
00:13:25.631 --> 00:13:30.034
we technically have the required true as a
prop, but because that's a runtime check,

262
00:13:30.034 --> 00:13:32.670
it won't actually stop
the actual build output.

263
00:13:32.670 --> 00:13:36.600
So for those who are wondering, and that's
one of the reasons why I think we've

264
00:13:36.600 --> 00:13:39.123
seen a lot more code bases
opt into the Typescript,

265
00:13:39.123 --> 00:13:43.055
is because you theoretically want your
build to break or basically to stop you in

266
00:13:43.055 --> 00:13:47.130
the event you have things that are clearly
missing that you've said is required.

267
00:13:48.810 --> 00:13:49.650
Little things like that.

268
00:13:49.650 --> 00:13:51.490
But again,
this is not a typescript course.

269
00:13:51.490 --> 00:13:53.290
And so, we're just sprinkling
it in here and there.

270
00:13:53.290 --> 00:13:55.610
Just start getting
people familiar with it.

271
00:13:55.610 --> 00:13:58.490
So there we have that now.

272
00:13:58.490 --> 00:14:01.652
Whoops, okay, did I do anything else?

273
00:14:01.652 --> 00:14:05.690
Yeah, that was just testing and
okay, great.

