WEBVTT

1
00:00:00.320 --> 00:00:03.000
&gt;&gt; Ben Hong: There are two different ways
that you can write your composables, and

2
00:00:03.000 --> 00:00:04.280
this is just a JavaScript thing.

3
00:00:04.280 --> 00:00:08.153
But I want to be explicit about it because
it's an easily overlooked thing if you're

4
00:00:08.153 --> 00:00:12.000
newer to JavaScript and that you do
named exports versus default exports.

5
00:00:12.000 --> 00:00:13.680
So what do I mean by that?

6
00:00:13.680 --> 00:00:16.925
So, you might have noticed
in my useTask composable,

7
00:00:16.925 --> 00:00:21.200
I explicitly export every
single thing that's in here.

8
00:00:21.200 --> 00:00:23.200
This is what they call a named export.

9
00:00:23.200 --> 00:00:27.935
And the reason for that is because
you're basically naming every single

10
00:00:27.935 --> 00:00:32.230
export that you expect to
export out of your composable.

11
00:00:32.230 --> 00:00:35.470
The alternative here is you
could do something like this.

12
00:00:35.470 --> 00:00:39.706
You can do export default,
and there's like a function,

13
00:00:39.706 --> 00:00:42.710
and then the function then returns.

14
00:00:42.710 --> 00:00:44.229
Okay, so this is how this would look.

15
00:00:46.070 --> 00:00:51.977
Whoop, don't export,

16
00:00:51.977 --> 00:00:55.920
don't export.

17
00:00:57.360 --> 00:01:04.240
And then we return filterTasks and
formatTasks label.

18
00:01:04.240 --> 00:01:11.749
Okay, so in this one you'll notice rather
than explicitly exporting constants or

19
00:01:11.749 --> 00:01:17.114
expliciting functions,
I just have this unnamed function

20
00:01:17.114 --> 00:01:22.410
that's being exported with
this keyword default.

21
00:01:22.410 --> 00:01:25.570
The difference is when you're
importing it, you'll notice.

22
00:01:25.570 --> 00:01:27.690
First of all, this is broken now.

23
00:01:27.690 --> 00:01:32.386
And it's because by using the default,
what you're doing is you're saying this

24
00:01:32.386 --> 00:01:36.210
file contains this blob of a function and
you can call it whatever.

25
00:01:36.210 --> 00:01:38.130
So, in this case,
I'm just gonna be consistent though.

26
00:01:38.130 --> 00:01:44.650
I'm gonna call it use task and then I'm
gonna import it from composable slash use.

27
00:01:44.650 --> 00:01:47.380
I think that's what I did, yes.

28
00:01:48.660 --> 00:01:56.420
Then what happens is usetask is a function
that then exposes the stuff inside.

29
00:01:58.020 --> 00:02:00.260
Okay, so why does this matter?

30
00:02:00.260 --> 00:02:01.300
Why are we talking about this?

31
00:02:01.300 --> 00:02:03.936
Well, one, because the two
offering formats do show up and

32
00:02:03.936 --> 00:02:08.100
I want people to be able to make explicit
choices behind what they're doing.

33
00:02:08.100 --> 00:02:12.581
And so if I could make a case to you
as to which one I would recommend is,

34
00:02:12.581 --> 00:02:17.570
I would actually recommend the named
one over the default export.

35
00:02:17.570 --> 00:02:22.413
The reason for that is because
the default export has this blobbiness

36
00:02:22.413 --> 00:02:27.010
about it that basically says you
can name it whatever you want.

37
00:02:27.010 --> 00:02:29.991
So I might name it use task,
someone else might come along and

38
00:02:29.991 --> 00:02:31.970
just say task feature.

39
00:02:31.970 --> 00:02:36.360
There's nothing stopping anyone from doing
differently because you're naming the blob

40
00:02:36.360 --> 00:02:38.970
that's coming back to you
from your default export.

41
00:02:38.970 --> 00:02:41.950
Because it's unnamed to begin with.

42
00:02:41.950 --> 00:02:43.950
But if we go back to the original.

43
00:02:43.950 --> 00:02:47.150
Actually, let me do this, let me do.

44
00:02:48.350 --> 00:02:52.270
Let me comment this out and
then take these two again.

45
00:02:54.110 --> 00:02:59.649
All Right, so then what we'll say here is,

46
00:02:59.649 --> 00:03:04.150
okay, we export them explicitly.

47
00:03:04.150 --> 00:03:10.040
Filter tasks,
export the format stylus label explicitly.

48
00:03:10.040 --> 00:03:11.040
And then I'll make a note here.

49
00:03:11.040 --> 00:03:14.120
This is called a default export example.

50
00:03:17.640 --> 00:03:22.040
What I love about this is that
once you have your composable,

51
00:03:22.040 --> 00:03:24.040
like you have your import.

52
00:03:27.420 --> 00:03:28.760
Wait, did I do something wrong?

53
00:03:28.760 --> 00:03:29.560
Yes, I did.

54
00:03:33.010 --> 00:03:36.690
Your stuff is basically
the autocomplete is there for you.

55
00:03:36.690 --> 00:03:38.154
And so, there's no one ever deciding,

56
00:03:38.154 --> 00:03:41.170
like, actually I'm gonna name
it something differently.

57
00:03:41.170 --> 00:03:43.770
And then so you might think,
okay, well then name collision.

58
00:03:43.770 --> 00:03:44.413
Right?
Like,

59
00:03:44.413 --> 00:03:46.690
what if someone else has
something called filter tasks?

60
00:03:46.690 --> 00:03:48.050
Well, that's totally fine.

61
00:03:48.050 --> 00:03:50.130
You just name it something different.

62
00:03:50.130 --> 00:03:51.490
NewFilterTasks.

63
00:03:53.410 --> 00:04:00.530
Wait, as new filter task.

64
00:04:00.530 --> 00:04:02.490
Sorry, I forgot that's the syntax.

65
00:04:02.490 --> 00:04:04.970
So then now you can use newFilterTask.

66
00:04:07.930 --> 00:04:12.346
So, to me,
the named exports provide consistency, yet

67
00:04:12.346 --> 00:04:17.290
you're autocomplete and
you don't get naming collisions.

68
00:04:17.290 --> 00:04:21.450
And so it does seem to carry all
the benefits that you would expect.

69
00:04:21.450 --> 00:04:26.669
Now, granted, we will learn about
functions inside of our composables later,

70
00:04:26.669 --> 00:04:29.600
but this is kind of like
the foray into it all.

