WEBVTT

1
00:00:00.560 --> 00:00:03.680
&gt;&gt; Ben Hong: As far as
some best practice items.

2
00:00:03.680 --> 00:00:06.480
So I mentioned before about the whole
global stores namespace stores things.

3
00:00:07.680 --> 00:00:10.200
One of the things that I
think this is an artifact.

4
00:00:10.200 --> 00:00:13.520
So I think for most of you, this is at
least here, this is not applicable.

5
00:00:13.520 --> 00:00:18.362
But like, Eduardo in his course talks
about this a lot is that some clients,

6
00:00:18.362 --> 00:00:22.296
they got so used to just putting
everything in a single state,

7
00:00:22.296 --> 00:00:26.780
like a single store, because it
was incredibly convenient, right?

8
00:00:28.460 --> 00:00:29.580
I need auth everywhere.

9
00:00:29.580 --> 00:00:31.886
Might as well just put it in the store and
global store,

10
00:00:31.886 --> 00:00:34.860
you know, I should track whether or
not the cookies are tracked.

11
00:00:34.860 --> 00:00:36.140
That's global store.

12
00:00:36.140 --> 00:00:40.155
And so, his whole thing, and
which I've seen as well,

13
00:00:40.155 --> 00:00:45.039
is that don't be afraid to just
create like a bunch of small stores.

14
00:00:45.039 --> 00:00:48.960
Because it doesn't cost you anything and
arguably it makes it easier because you've

15
00:00:48.960 --> 00:00:51.420
already modularized these
single sources of truth.

16
00:00:51.420 --> 00:00:52.580
This is my off store.

17
00:00:52.580 --> 00:00:53.740
This is my cookie store.

18
00:00:53.740 --> 00:00:56.675
This is my whatever,
whatever you want to call it.

19
00:00:56.675 --> 00:00:59.707
And then as we saw earlier,
actually, I think the magic keys,

20
00:00:59.707 --> 00:01:03.597
plus the theme is an example of like, it's
so easy to put them together if you're

21
00:01:03.597 --> 00:01:06.857
like, there's this like,
let's call it on like, you know,

22
00:01:06.857 --> 00:01:10.559
the settings page where like the auth and
the cookies need to live together.

23
00:01:10.559 --> 00:01:14.020
Like, cool, just like grab them,
throw them in, no problem.

24
00:01:14.020 --> 00:01:17.901
And so if we think, as long as we think
more like that about these stories being

25
00:01:17.901 --> 00:01:19.224
single sources of truth.

26
00:01:19.224 --> 00:01:24.019
Because what's scary is, what a lot
of people end up trying to do is

27
00:01:24.019 --> 00:01:28.916
they get caught up in storing like
auth in multiple places, right?

28
00:01:28.916 --> 00:01:32.846
Because they're like, well,
I'm updating auth here, and

29
00:01:32.846 --> 00:01:35.098
then here is where auth auth updated.

30
00:01:35.098 --> 00:01:38.451
And so if they incorrectly cache them and
keep them separate source of truth,

31
00:01:38.451 --> 00:01:40.270
this is where our issues come in, right?

32
00:01:40.270 --> 00:01:40.950
Ultimately, right?

33
00:01:40.950 --> 00:01:42.470
That's like a lot of our bugs.

34
00:01:42.470 --> 00:01:46.865
And so ensuring that your stores are small
helps to ensure that they are a single

35
00:01:46.865 --> 00:01:51.013
source of truth, which means ultimately
you'll be less bugs over time.

36
00:01:51.013 --> 00:01:53.890
And so we've talked about this
on different occasions now, but

37
00:01:53.890 --> 00:01:56.430
composing stores with
other stores is a thing.

38
00:01:56.430 --> 00:02:00.910
So, you saw there was a time energy store,
there's a tax store.

39
00:02:00.910 --> 00:02:03.393
Our exercise later will be
to create a weak store.

40
00:02:03.393 --> 00:02:06.851
So you all can basically, you're going
to convert your composable into like

41
00:02:06.851 --> 00:02:10.030
a penny a store and just basically
see how you feel about that.

42
00:02:10.030 --> 00:02:14.670
And then what's nice is that using other
stores within stores is as simple as you

43
00:02:14.670 --> 00:02:16.064
would expect, right?

44
00:02:16.064 --> 00:02:20.201
So in the event, in my time entry store,
I want to use, let's say for whatever

45
00:02:20.201 --> 00:02:24.363
reason, I want to collaborate this entry
count with my total number of tasks.

46
00:02:24.363 --> 00:02:31.806
I could just go import useTaskStore,
and then here I would just say,

47
00:02:31.806 --> 00:02:36.820
yes, const taskStore = useTaskStore.

48
00:02:36.820 --> 00:02:42.881
And then I could say const
combine count is computed and

49
00:02:42.881 --> 00:02:50.410
it's going to return entry count
value plus task store task count.

50
00:02:52.730 --> 00:02:56.735
And just like that, you've taken two
stores that are seemingly unrelated and

51
00:02:56.735 --> 00:03:00.730
then because you've had the logic for
it, boom, you've combined them.

52
00:03:00.730 --> 00:03:03.050
It pulls the piece you need, it works.

53
00:03:04.410 --> 00:03:09.320
And so that was part of Eduardo's thing,
is trying to get people to understand that

54
00:03:09.320 --> 00:03:14.302
unlike before, it is actually very easy
to rip apart stores, piece them together,

55
00:03:14.302 --> 00:03:17.130
and then mishmash them
in other places as well.

56
00:03:18.410 --> 00:03:23.246
If you keep doing that, you'll find
yourself with hopefully some pretty

57
00:03:23.246 --> 00:03:27.850
elegantly crafted state management
solutions for you and your team.

58
00:03:29.450 --> 00:03:32.412
Then we walked through the dev
tools with Pinia already, so

59
00:03:32.412 --> 00:03:34.970
you saw what we could walk
through regarding that.

