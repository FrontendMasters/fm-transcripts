WEBVTT

1
00:00:00.100 --> 00:00:02.541
&gt;&gt; Ben Hong: For
your final coding exercise,

2
00:00:02.541 --> 00:00:05.424
we're gona do a WeekStore with Pinia.

3
00:00:05.424 --> 00:00:08.395
I recommend doing it doing
the setup way just because,

4
00:00:08.395 --> 00:00:13.200
just to get more opportunities to practice
that and then kind of see how it feels.

5
00:00:13.200 --> 00:00:16.853
And then if you can, see if you can get it
to show up inside of your dev tools and

6
00:00:16.853 --> 00:00:18.560
then play around with like.

7
00:00:18.560 --> 00:00:20.513
And again you can even
just stub out the data.

8
00:00:20.513 --> 00:00:23.979
You don't have to worry too
much about like whether it like

9
00:00:23.979 --> 00:00:25.968
works with the entire app or not.

10
00:00:25.968 --> 00:00:30.112
The idea here is just you getting
some time with Pinia and setup store.

11
00:00:36.868 --> 00:00:45.130
Okay, so we have the useWeek
composable that we created together.

12
00:00:45.130 --> 00:00:52.757
And so you can see here, it's funny when
you're looking at these side by sides,

13
00:00:52.757 --> 00:00:56.700
let me open up the use tasks or
task store.

14
00:00:56.700 --> 00:00:57.380
That's what it is.

15
00:00:59.380 --> 00:01:02.500
If you look at them,
they're actually not so different.

16
00:01:03.780 --> 00:01:05.780
It's kind of interesting.

17
00:01:05.780 --> 00:01:10.086
And so the main thing being that by
opting into this defined store helper,

18
00:01:10.086 --> 00:01:13.300
there's a bunch of stuff
that Pinion will do for you.

19
00:01:13.300 --> 00:01:18.830
But from a structured perspective,
we're actually fairly, fairly close there.

20
00:01:18.830 --> 00:01:23.927
So basically, what I would do here
is we would say, all right, so

21
00:01:23.927 --> 00:01:29.550
export const useWeekStore, right,
and we'll define the store.

22
00:01:29.550 --> 00:01:33.886
And I usually basically just call
the key whatever the store name is,

23
00:01:33.886 --> 00:01:38.350
just to be consistent and
then we open it up with set function.

24
00:01:38.350 --> 00:01:40.582
So I'm just going to go ahead and
do it like that and

25
00:01:40.582 --> 00:01:43.680
then I'll close this now just
to give us our, our space back.

26
00:01:43.680 --> 00:01:47.680
And then let's just make sure we go back
down here to make sure we get it right.

27
00:01:47.680 --> 00:01:49.760
Although something looks funny.

28
00:01:51.280 --> 00:01:54.080
Bum, bum, bum, that's good.

29
00:01:56.240 --> 00:02:00.666
Const, async, okay,
that's good for the return.

30
00:02:00.666 --> 00:02:02.440
This is all the way up here,
yep, yep, yep.

31
00:02:02.440 --> 00:02:03.760
Okay, got it.

32
00:02:03.760 --> 00:02:09.149
So let me permanently comment this out so
that is not confusing.

33
00:02:09.149 --> 00:02:10.320
But you all still have it.

34
00:02:15.520 --> 00:02:18.160
Okay, now this part is good.

35
00:02:18.160 --> 00:02:19.200
This part is not.

36
00:02:21.440 --> 00:02:22.874
Yes, good.

37
00:02:22.874 --> 00:02:29.760
And then, okay, we need to import,
define store from Pinia, which is great.

38
00:02:29.760 --> 00:02:31.120
There we have it.

39
00:02:31.120 --> 00:02:33.587
And then as you can see,
we already have our actions in our getter.

40
00:02:33.587 --> 00:02:36.352
So really what we need
is just the state and

41
00:02:36.352 --> 00:02:39.200
the state is all of
the things we see here.

42
00:02:39.200 --> 00:02:42.862
So we can just grab this, I mean,
it's gonna break a ton of things,

43
00:02:42.862 --> 00:02:46.800
cuz we know what happened last time
I did this, but this is a start.

44
00:02:46.800 --> 00:02:52.800
So here's our weeks exposed and
Then everything else here.

45
00:02:52.800 --> 00:02:57.343
And so this is where at this point I'm
just not even going to bother with

46
00:02:57.343 --> 00:03:01.732
the read only pattern because we
are in a store now and I personally,

47
00:03:01.732 --> 00:03:05.240
I'm not so convinced that we need that.

48
00:03:05.240 --> 00:03:06.040
So there we go.

49
00:03:06.040 --> 00:03:07.160
Shared state.

50
00:03:07.160 --> 00:03:08.760
This is it.

51
00:03:08.760 --> 00:03:14.755
And then, yep, that's the store.

52
00:03:14.755 --> 00:03:18.600
And then, I think, we actually don't even
need this anymore, right, yeah, we don't.

53
00:03:18.600 --> 00:03:20.120
Yep.

54
00:03:20.120 --> 00:03:24.920
So then this here then gets moved
all the way down into stores.

55
00:03:26.040 --> 00:03:27.200
Okay.

56
00:03:27.200 --> 00:03:29.040
And then we call it weak store.

57
00:03:30.240 --> 00:03:30.960
Okay.

58
00:03:33.600 --> 00:03:37.186
And now I think there's going to be a
bunch of stuff that's going to ultimately

59
00:03:37.186 --> 00:03:40.080
end up breaking because this does
not work the way we want it to.

60
00:03:40.080 --> 00:03:43.818
But we're not going to worry
about that just for the moment.

61
00:03:43.818 --> 00:03:48.206
We're just going to ask any questions
about sort of that convergence.

62
00:03:48.206 --> 00:03:53.425
Does anyone have any issues
with that migration path?

63
00:03:53.425 --> 00:03:55.370
Felt overall familiar,
given what we've been doing?

64
00:03:56.490 --> 00:04:01.367
Good, that's a good sign for
me cuz it felt different than, yeah.

65
00:04:01.367 --> 00:04:05.424
I mean that I think when Eduardo was
doing the design spec for Pinia or

66
00:04:05.424 --> 00:04:10.407
essentially what is Vue X5, it was this
idea that composition API already just has

67
00:04:10.407 --> 00:04:15.179
that light flexibility that clearly a lot
of people have gravitated towards and

68
00:04:15.179 --> 00:04:18.340
we really didn't want to
step that far away from it.

69
00:04:18.340 --> 00:04:23.174
There is no point designing a whole new
API just because of the State management

70
00:04:23.174 --> 00:04:24.400
library.

71
00:04:24.400 --> 00:04:28.480
And yeah, so with that,
that is your useWeekStore.

72
00:04:30.000 --> 00:04:33.341
And let's see,
is there anything else I had us do,

73
00:04:33.341 --> 00:04:37.788
composing stores, Pinia dev tools,
I think that's mostly that.

74
00:04:37.788 --> 00:04:41.509
As the final result, there will be
a branch that's called solution.

75
00:04:41.509 --> 00:04:45.453
And I'll basically make sure everything is
at least talking to each other correctly.

76
00:04:45.453 --> 00:04:48.670
And that way, we can see how it
all works together in the end.

77
00:04:48.670 --> 00:04:53.218
But again, I wanted to kind of create
really a playground for you all.

78
00:04:53.218 --> 00:04:56.750
I mean, this is what it's like working in,
honestly, some code bases, right?

79
00:04:56.750 --> 00:04:59.390
Stuff's broken, stuff's weirdly dependent.

80
00:04:59.390 --> 00:05:01.950
There's some weird things are written,
some funny ways.

81
00:05:01.950 --> 00:05:06.899
So how we make sense of that over time and
organize.

82
00:05:06.899 --> 00:05:09.310
Sorry, make order out of chaos,
not the other way around.

83
00:05:11.070 --> 00:05:13.826
Yeah, I mean that's really what
we're trying to do as developers.

84
00:05:13.826 --> 00:05:16.148
So yeah, there'll be some.

85
00:05:16.148 --> 00:05:18.400
And I'll make sure it's
indicated on the repo, whatever.

86
00:05:18.400 --> 00:05:21.047
I probably would just call it solution,
all right.

