WEBVTT

1
00:00:00.160 --> 00:00:04.188
&gt;&gt; Ben Hong: So another problem that comes
across a lot of developers as they're

2
00:00:04.188 --> 00:00:08.355
growing as a VUE developer, is at some
point they need to access a child

3
00:00:08.355 --> 00:00:11.760
components, data or
methods from the parent.

4
00:00:11.760 --> 00:00:14.425
And now this might sound a little
odd because most of us are, well,

5
00:00:14.425 --> 00:00:17.760
let's face it, the standard data flow
model we're used to is top down, right?

6
00:00:17.760 --> 00:00:21.820
Parent passes stuff to the child, child
does stuff with it, and then if anything,

7
00:00:21.820 --> 00:00:24.778
we have an event that like we
emit something that comes up just

8
00:00:24.778 --> 00:00:28.380
like standard web model, and
then again it just flows down.

9
00:00:28.380 --> 00:00:31.312
However, there are times where
you're just simply not gonna have

10
00:00:31.312 --> 00:00:32.260
the ability to do so.

11
00:00:32.260 --> 00:00:35.781
It might be because you're using a third
party library or maybe you're a library

12
00:00:35.781 --> 00:00:39.820
author, where you don't know what context
your component is going to be ingested in.

13
00:00:39.820 --> 00:00:45.020
These are great candidates for
this concept, known as scope slots.

14
00:00:45.020 --> 00:00:47.496
On the podcast episode we did for
Frontend Masters,

15
00:00:47.496 --> 00:00:51.100
we were talking about one of the most
commonly confused concepts of vue.

16
00:00:51.100 --> 00:00:54.945
And I would say that in my teaching
experience, scope slots tends to be

17
00:00:54.945 --> 00:00:59.460
the one that a lot of people quite grasp
because I think it's kind of unintuitive.

18
00:00:59.460 --> 00:01:03.951
And then, but hopefully we're gonna go
over this, it'll make more sense to people

19
00:01:03.951 --> 00:01:08.580
and they'll feel more comfortable using it
in their component design as they see fit.

20
00:01:09.860 --> 00:01:14.095
Okay, so, okay, so let's go ahead and

21
00:01:14.095 --> 00:01:20.100
what we're going to do,
we're going to create a.

22
00:01:20.100 --> 00:01:24.784
Let's do a slot demo V and
then call it Slot Demo and

23
00:01:24.784 --> 00:01:29.820
then we'll make sure it
renders on our Sandbox page.

24
00:01:30.940 --> 00:01:36.520
All right, this time I'm actually
going to delete some of this stuff so

25
00:01:36.520 --> 00:01:38.940
that we are Slot demo perfect.

26
00:01:41.660 --> 00:01:42.160
Great.

27
00:01:43.420 --> 00:01:44.060
Flip.

28
00:01:47.340 --> 00:01:47.840
Great.

29
00:01:49.190 --> 00:01:52.724
All right, so
going back to our Sandbox page, all right,

30
00:01:52.724 --> 00:01:55.910
we have a slot demo component
is rendering, great.

31
00:01:57.750 --> 00:02:01.963
So here's the kind of problem
that ends up happening is that in

32
00:02:01.963 --> 00:02:03.829
the event we have some.

33
00:02:03.829 --> 00:02:07.350
Okay, so let's go ahead and actually
let me slide up my slot demo here.

34
00:02:07.350 --> 00:02:09.572
And we're gonna go ahead and
we're gonna do main and

35
00:02:09.572 --> 00:02:11.350
we're gonna do three different blocks.

36
00:02:11.350 --> 00:02:15.990
Okay, we're gonna have a slot for
the header, we're gonna have the default.

37
00:02:15.990 --> 00:02:22.550
So let's see, boom, slot demo title.

38
00:02:22.550 --> 00:02:26.750
So this is how you set like default
content in case no one sets it up.

39
00:02:26.750 --> 00:02:29.590
Then you have your default slot,
which is where everything else will go.

40
00:02:29.590 --> 00:02:33.270
And I'm going to do one more
name slot called Footer.

41
00:02:33.270 --> 00:02:35.590
And then like this is the bottom.

42
00:02:38.630 --> 00:02:43.920
Okay, now that we have this,
the way we have our sandbox page.

43
00:02:43.920 --> 00:02:45.829
Actually let me close some of these so

44
00:02:45.829 --> 00:02:49.600
we actually clean up the files up here
a bit so it's easier for everyone.

45
00:02:51.760 --> 00:02:52.640
Don't save that.

46
00:02:54.400 --> 00:02:59.131
The way this would work is right
within the typical slot component,

47
00:02:59.131 --> 00:03:04.360
you would have a template that would
then have the V slot pass with the name.

48
00:03:04.360 --> 00:03:07.205
So in this case, let's say actually we
don't need header actually right now

49
00:03:07.205 --> 00:03:08.990
because that has demo content.

50
00:03:08.990 --> 00:03:15.630
So let's just call this and
say here is my normal body content.

51
00:03:17.150 --> 00:03:20.190
And then we'll also have a template for
the footer.

52
00:03:21.870 --> 00:03:26.030
This is my footer content.

53
00:03:26.030 --> 00:03:28.995
And so if we save this and look over here,

54
00:03:28.995 --> 00:03:33.070
you'll see here do to do
slot demo title is here.

55
00:03:33.070 --> 00:03:36.990
And then we might have noticed
that that footer content and

56
00:03:36.990 --> 00:03:39.400
the main content is not showing up.

57
00:03:41.532 --> 00:03:42.920
Is it because of this?

58
00:03:44.040 --> 00:03:46.680
There we go, okay, sorry.

59
00:03:46.680 --> 00:03:49.892
What we saw here, actually I should demo
that is that when you have a template

60
00:03:49.892 --> 00:03:53.003
here without basically designating
what slot it is, as you can see here,

61
00:03:53.003 --> 00:03:54.920
it doesn't actually know where to go.

62
00:03:54.920 --> 00:03:58.594
And so if you wanted to wrap it in
a template block, you can basically,

63
00:03:58.594 --> 00:04:01.960
it's called default,
you can just wrap it like this.

64
00:04:01.960 --> 00:04:03.480
And we can see here we
still have all three.

65
00:04:04.920 --> 00:04:09.320
Now if we can envision now
slot demo has some data

66
00:04:09.320 --> 00:04:12.840
that we want to get access to, right?

67
00:04:12.840 --> 00:04:16.440
So let's just use the simple counter
example in this particular case.

68
00:04:16.440 --> 00:04:19.096
And so it's keeping track
of the current count and

69
00:04:19.096 --> 00:04:21.000
we'll just make it at a ref of 10.

70
00:04:22.040 --> 00:04:24.091
And so typically you would think,
okay, well again,

71
00:04:24.091 --> 00:04:25.840
this is a component I
want to render my things.

72
00:04:25.840 --> 00:04:31.500
I'm going to say, well,
current count is this.

73
00:04:32.860 --> 00:04:36.209
And so now if I go ahead and
take out the default slot,

74
00:04:36.209 --> 00:04:40.260
we'll see here, as you would expect,
current count is 10.

75
00:04:40.260 --> 00:04:41.580
Right?
That makes sense.

76
00:04:42.620 --> 00:04:46.690
The concept of scope slots is what
happens when you need the parent

77
00:04:46.690 --> 00:04:49.354
to actually kind of get
access to the data so

78
00:04:49.354 --> 00:04:53.980
that it can rearrange the way it
actually wants it to be displayed.

79
00:04:53.980 --> 00:04:58.940
So in this case, let's say the parent is
unable to reach into the child to say.

80
00:04:58.940 --> 00:05:03.980
Actually what I wanted to say
is current count is even, right?

81
00:05:03.980 --> 00:05:08.586
So what you would need to do in this
case is you would actually need to scope

82
00:05:08.586 --> 00:05:11.910
slots is this concept of
basically passing data into

83
00:05:11.910 --> 00:05:15.820
a slot as a prop that then
surfaces to the parent.

84
00:05:15.820 --> 00:05:17.944
So think of it as a backward slot, and

85
00:05:17.944 --> 00:05:21.140
this is one of the reasons
why it's kind of weird.

86
00:05:21.140 --> 00:05:22.140
So what do I mean by that?

87
00:05:22.140 --> 00:05:23.220
So we'll demo this real quick.

88
00:05:24.260 --> 00:05:26.500
We have our default slot here, right?

89
00:05:26.500 --> 00:05:29.220
And what we're going to do is we'll say,
okay, we're passing the count.

90
00:05:29.220 --> 00:05:32.100
This is like defining any other prop for
any other component.

91
00:05:32.100 --> 00:05:33.940
We're defining a prop called count.

92
00:05:33.940 --> 00:05:36.220
Although to be clear,
there's no defined props up here.

93
00:05:36.220 --> 00:05:40.500
This is clearly just on the slot and we're
passing it the value of current count.

94
00:05:40.500 --> 00:05:41.700
Although I need to bind this.

95
00:05:42.980 --> 00:05:47.150
Okay, so
all we've done is give a prop to a slot.

96
00:05:47.150 --> 00:05:48.270
That's all we've done so far.

97
00:05:49.390 --> 00:05:54.049
Now what we're going to do is inside,
I'll be explicit with this one, so

98
00:05:54.049 --> 00:05:57.958
that's easy to see,
is that you're going to be able to access

99
00:05:57.958 --> 00:06:02.350
your slot props through this,
basically by accessing the value.

100
00:06:02.350 --> 00:06:04.190
So I usually like to demo it like this.

101
00:06:04.190 --> 00:06:06.494
So you get access to
the slot props object,

102
00:06:06.494 --> 00:06:10.910
which you can already see has
the property count on it waiting for you.

103
00:06:10.910 --> 00:06:17.620
So now I can be like,
this is my cool slot props count.

104
00:06:21.460 --> 00:06:22.340
You can see here.

105
00:06:23.460 --> 00:06:27.940
Now the parent is the one controlling how
the data from the child is being rendered.

106
00:06:30.180 --> 00:06:33.740
Again, you might be thinking, okay,
when would I normally use this?

107
00:06:33.740 --> 00:06:37.558
And the fact is you normally wouldn't,
right?

108
00:06:37.558 --> 00:06:39.765
This is part of the whole
intermediate view thing, right?

109
00:06:39.765 --> 00:06:41.180
This is a common example.

110
00:06:41.180 --> 00:06:43.740
Let's say you're designing a select input.

111
00:06:43.740 --> 00:06:46.947
As we know, select dropdowns, they have a
lot of different stylings that can be used

112
00:06:46.947 --> 00:06:48.460
in a lot of different scenarios.

113
00:06:48.460 --> 00:06:52.238
So you might want to create a generic
select dropdown that provides all

114
00:06:52.238 --> 00:06:57.340
the options, all the data it needs, but
the context in which it's being used.

115
00:06:57.340 --> 00:07:00.720
Maybe in one select dropdown you have
a picture being rendered on the left hand

116
00:07:00.720 --> 00:07:02.860
side with some text and
it has different styles.

117
00:07:04.780 --> 00:07:07.648
The scope slots, or
what I like to call slot props,

118
00:07:07.648 --> 00:07:11.990
allow you to basically have a generic
component that then someone ingests and

119
00:07:11.990 --> 00:07:14.820
then can control how things
are being displayed.

120
00:07:16.420 --> 00:07:18.117
Again.
So typically used for

121
00:07:18.117 --> 00:07:22.660
third party libraries, a perfect
example of this is view multiselect.

122
00:07:24.500 --> 00:07:25.940
This one.

123
00:07:25.940 --> 00:07:26.740
There we go.

124
00:07:27.860 --> 00:07:31.093
So we can see here, right, this is
an example of a dropdown where you have

125
00:07:31.093 --> 00:07:34.870
the license on the left, but then you
have images and stuff on the right.

126
00:07:34.870 --> 00:07:38.295
But then if we take a look at some of
the other custom option templates,

127
00:07:38.295 --> 00:07:41.601
I mean you can see here, in this case
they want the image on the left,

128
00:07:41.601 --> 00:07:43.990
they want the text on the right.

129
00:07:43.990 --> 00:07:49.510
And so what you'll see here is they're
actually exposing the template, right?

130
00:07:49.510 --> 00:07:51.670
And they're saying, here are the props.

131
00:07:51.670 --> 00:07:54.430
And then just display normal
HTML as you want, right?

132
00:07:54.430 --> 00:07:56.070
The props have already been defined.

133
00:07:56.070 --> 00:08:02.885
Take the image, take the labels,
style it however you see fit.

134
00:08:02.885 --> 00:08:06.821
Because if you're the author of this
library for multi select, first of all,

135
00:08:06.821 --> 00:08:10.310
whoever's using it cannot just
reach into your component to do it.

136
00:08:10.310 --> 00:08:12.545
You're providing a generic functionality,

137
00:08:12.545 --> 00:08:16.109
which is to be able to provide things
like multiple tagging, searching.

138
00:08:16.109 --> 00:08:20.975
Like, you're providing generic logic and
functionality for

139
00:08:20.975 --> 00:08:23.830
the component, styling and stuff.

140
00:08:23.830 --> 00:08:25.270
That's up to how they ingest it.

