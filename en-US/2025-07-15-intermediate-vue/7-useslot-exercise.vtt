WEBVTT

1
00:00:00.480 --> 00:00:03.930
&gt;&gt; Ben Hong: So your challenge, should
you choose to accept it, is go ahead and

2
00:00:03.930 --> 00:00:07.040
look at either the way the Task card is or
the Planner card.

3
00:00:07.040 --> 00:00:09.120
And so, those you'll see
they're being looped through.

4
00:00:09.120 --> 00:00:11.568
So if you look for
the V4 inside of the app,

5
00:00:11.568 --> 00:00:14.960
they got some pretty complex
things going on there.

6
00:00:14.960 --> 00:00:17.428
So go ahead and
see if you can refactor that out so

7
00:00:17.428 --> 00:00:20.456
that you're using slots to
basically have some actions,

8
00:00:20.456 --> 00:00:23.760
some of the text being rendered,
and then play around with it.

9
00:00:23.760 --> 00:00:26.891
See if you can go ahead and
render the content differently,

10
00:00:26.891 --> 00:00:30.530
rearrange it as you see fit through
the parent rather than the child.

11
00:00:31.970 --> 00:00:35.538
And then if it should make sense, go
ahead and try using the Use slots helper

12
00:00:35.538 --> 00:00:39.010
function if you think it makes sense
to hide certain things and whatnot.

13
00:00:44.850 --> 00:00:47.730
Our goal here is to create
basically a Planner card.

14
00:00:47.730 --> 00:00:52.410
I called it New Planner Card at the time
because basically, if we take a look at.

15
00:00:52.410 --> 00:00:59.670
Let's see, if we go to V4, I had a weak,
let's see, reflection page, settings page.

16
00:01:00.950 --> 00:01:04.150
See lots of opportunity for refactoring,
lots of ripe opportunities.

17
00:01:04.150 --> 00:01:07.514
But anyhow, weak detail page, although.

18
00:01:07.514 --> 00:01:08.470
Here's the Planner page.

19
00:01:08.470 --> 00:01:09.510
I jumped all the way.

20
00:01:09.510 --> 00:01:14.831
Okay, and then we want this one
in particular because this here,

21
00:01:14.831 --> 00:01:19.110
as we can see,
is basically the card that displays.

22
00:01:19.110 --> 00:01:21.920
Let's coordinate correspond
this with what we're seeing.

23
00:01:21.920 --> 00:01:24.560
This corresponds with this
particular card right here.

24
00:01:26.240 --> 00:01:29.961
So if we're taking a look at this,
we can see that it's, I would say,

25
00:01:29.961 --> 00:01:31.360
roughly broken out into.

26
00:01:34.560 --> 00:01:39.553
Yeah, I'd say, if we're being generous,
we could say two sections here

27
00:01:39.553 --> 00:01:44.960
because we have the tasks here that
are basically showing all this stuff here.

28
00:01:44.960 --> 00:01:48.090
And then we have basically
stuff about the week here.

29
00:01:48.090 --> 00:01:53.930
So, and then I would say, though,
this is a little bit, maybe more meta.

30
00:01:53.930 --> 00:01:57.396
So arguably you could make a slot here
that, like, if you don't want to display

31
00:01:57.396 --> 00:02:00.010
this, that could be a choice,
I think, for now, I think.

32
00:02:00.010 --> 00:02:01.537
So, let's go ahead and
do that just to keep it,

33
00:02:01.537 --> 00:02:03.130
just give us a little bit more options.

34
00:02:03.130 --> 00:02:04.930
And so, what I would do here is.

35
00:02:04.930 --> 00:02:10.033
All right, so let me take this and
then [SOUND].

36
00:02:10.033 --> 00:02:12.170
All right, let's close this stuff
to make it easier to track.

37
00:02:13.600 --> 00:02:18.133
All right, so first thing we're going
to want to do is going to create a new

38
00:02:18.133 --> 00:02:20.984
component and
I'll call it New Planner Card,

39
00:02:20.984 --> 00:02:24.880
because this one is going to look
different from the other one.

40
00:02:24.880 --> 00:02:27.280
That's kind of the whole
point of this exercise.

41
00:02:27.280 --> 00:02:31.680
So I'm going to copy this
entire thing actually.

42
00:02:31.680 --> 00:02:32.640
Let's just collapse it.

43
00:02:32.640 --> 00:02:33.600
That'll probably be faster.

44
00:02:34.960 --> 00:02:39.690
Copy this and then drop that in here.

45
00:02:39.690 --> 00:02:41.890
Okay, lots of squiggliest.

46
00:02:41.890 --> 00:02:43.610
Lots and lots of squigglies.

47
00:02:43.610 --> 00:02:47.862
So first thing first, we definitely don't
need this if statement at the top and

48
00:02:47.862 --> 00:02:49.330
then selected weak tasks.

49
00:02:49.330 --> 00:02:52.010
So that's something we're going
to need to pass it seems.

50
00:02:52.010 --> 00:02:54.330
So we'll define props already.

51
00:02:55.690 --> 00:02:58.613
And then so
here we have an option by the way,

52
00:02:58.613 --> 00:03:02.490
to I think this is probably
supposed to be an array.

53
00:03:02.490 --> 00:03:03.620
So let's see.

54
00:03:03.620 --> 00:03:05.100
Yep, this is a task array.

55
00:03:05.100 --> 00:03:07.012
So, for those,
if you are new to TypeScript,

56
00:03:07.012 --> 00:03:10.003
this is one of the benefits of TypeScript
is that you do get kind of cleaner

57
00:03:10.003 --> 00:03:12.420
type definitions to understand
what you're expecting.

58
00:03:12.420 --> 00:03:14.260
So I'm expecting an array.

59
00:03:14.260 --> 00:03:16.500
So just do, do, do do.

60
00:03:16.500 --> 00:03:18.180
So we'll just call it an array for now.

61
00:03:18.180 --> 00:03:20.660
We'll keep it real simple
from a type perspective.

62
00:03:22.020 --> 00:03:23.380
Type array.

63
00:03:23.380 --> 00:03:24.860
And then required.

64
00:03:24.860 --> 00:03:25.380
True.

65
00:03:27.540 --> 00:03:28.140
Okay.

66
00:03:28.140 --> 00:03:30.536
And then basically so
you might be thinking,

67
00:03:30.536 --> 00:03:34.330
okay then I'm just going to name this
task and then we'll call it a day.

68
00:03:35.370 --> 00:03:37.898
I would propose something to consider is

69
00:03:37.898 --> 00:03:42.370
I find that one off errors by the letter
S happen a lot in terms of coding.

70
00:03:42.370 --> 00:03:43.850
It's just easy to get that off.

71
00:03:43.850 --> 00:03:45.850
So I actually usually
like to just make arrays.

72
00:03:45.850 --> 00:03:48.170
I just append list instead.

73
00:03:48.170 --> 00:03:50.010
It's just a bit cleaner.

74
00:03:50.010 --> 00:03:52.170
You just get fewer one off errors.

75
00:03:52.170 --> 00:03:53.690
Again, this is not a must do or anything.

76
00:03:53.690 --> 00:03:55.950
Just something thought I'd share.

77
00:03:55.950 --> 00:03:58.190
And then.
Okay, so we have a task at this point.

78
00:03:58.190 --> 00:03:59.150
These are type errors.

79
00:03:59.150 --> 00:04:00.390
We're not gonna fight with TypeScript.

80
00:04:00.390 --> 00:04:02.350
That is not the point of this course.

81
00:04:02.350 --> 00:04:04.367
But I think though,

82
00:04:04.367 --> 00:04:10.830
if I could let me see if I can
cheat this a little bit prop type.

83
00:04:10.830 --> 00:04:14.590
So there is a way.

84
00:04:14.590 --> 00:04:16.830
I believe this.

85
00:04:16.830 --> 00:04:18.404
Let's see if this will work though.

86
00:04:18.404 --> 00:04:19.790
I'm totally wrong.

87
00:04:19.790 --> 00:04:21.640
Whoops, not here.

88
00:04:26.520 --> 00:04:27.280
That did work.

89
00:04:27.280 --> 00:04:31.705
Okay, so a little typescript snippet for
you all to see is that again,

90
00:04:31.705 --> 00:04:35.680
if you're defining your props
normally via Composition API,

91
00:04:35.680 --> 00:04:38.040
this is what you're using.

92
00:04:38.040 --> 00:04:41.297
And then there is this ability in
TypeScript called to basically to

93
00:04:41.297 --> 00:04:43.400
typecast, if I remember that correctly.

94
00:04:43.400 --> 00:04:47.290
And so the ads basically tells it like,
hey, I know what it's supposed to be.

95
00:04:47.290 --> 00:04:51.210
And then so you need to use this prop type
helper from view that then you pass in

96
00:04:51.210 --> 00:04:52.810
the type it's supposed to be.

97
00:04:52.810 --> 00:04:54.010
That's all that's happening here.

98
00:04:54.010 --> 00:04:56.450
So I'll leave that snippet in here
just because I think it's a nice one.

99
00:04:56.450 --> 00:04:57.050
To know.

100
00:04:57.050 --> 00:05:01.338
Again, just a little bit of typescript and
we didn't go over this earlier, but

101
00:05:01.338 --> 00:05:05.306
there is like all of the types that
are being used in this code base should be

102
00:05:05.306 --> 00:05:06.970
managed mostly in here.

103
00:05:06.970 --> 00:05:10.490
So you can see here that all our
tasks are defined right here.

104
00:05:10.490 --> 00:05:14.003
And so again, if you need a TypeScript
interface, it's basically just an,

105
00:05:14.003 --> 00:05:17.690
rather than a type that's just a bunch
of strings or kind of standard object.

106
00:05:17.690 --> 00:05:21.290
Standard values interface
usually represents an object.

107
00:05:21.290 --> 00:05:25.290
And there's a whole debate between types
and interface when it comes to objects.

108
00:05:25.290 --> 00:05:26.126
But generally speaking,

109
00:05:26.126 --> 00:05:29.050
people use interfaces when it comes
to objects from what I've seen.

110
00:05:29.050 --> 00:05:32.090
All right, so anyways,
that little detour explained.

111
00:05:32.090 --> 00:05:33.210
Okay, so we got that in.

112
00:05:33.210 --> 00:05:34.970
Cool, cool, cool.

113
00:05:34.970 --> 00:05:38.664
And so all right, so now we mentioned
that we want to break this up into,

114
00:05:38.664 --> 00:05:40.280
like I said, had three parts.

115
00:05:40.280 --> 00:05:43.760
But let's see, this part's being looped.

116
00:05:43.760 --> 00:05:45.680
This is a button to expand stuff.

117
00:05:47.760 --> 00:05:51.240
Why do I feel like,
okay, icon is expanded.

118
00:05:51.240 --> 00:05:54.000
Three more tasks show less v-if.

119
00:05:55.120 --> 00:05:57.440
Why do I feel like I missed something?

120
00:05:57.440 --> 00:06:01.040
V-if selected weak tasks border top.

121
00:06:01.040 --> 00:06:02.720
This looks like it's related.

122
00:06:04.160 --> 00:06:07.130
Yep, toggle task list.

123
00:06:07.130 --> 00:06:11.290
Okay, what we can do is to start though,
let's just do this.

124
00:06:12.490 --> 00:06:14.890
We have the select task.

125
00:06:14.890 --> 00:06:18.010
Then we have tasks here task list.

126
00:06:19.610 --> 00:06:21.730
And then is task list expanded?

127
00:06:21.730 --> 00:06:24.090
Let's just replace all these first.

128
00:06:24.090 --> 00:06:25.530
Is task list expanded?

129
00:06:25.530 --> 00:06:30.364
Okay, so then what we're clear here is we
have something defining the visibility of

130
00:06:30.364 --> 00:06:32.160
something via here.

131
00:06:32.160 --> 00:06:33.667
So we can go ahead and

132
00:06:33.667 --> 00:06:38.720
then say is expanded is probably
what I would go with is a boolean.

133
00:06:38.720 --> 00:06:43.040
And then we'll default that
to false just like that.

134
00:06:43.040 --> 00:06:45.520
And then this way it'll be easier.

135
00:06:50.320 --> 00:06:53.280
Now the only tricky part is what
is this toggle task list doing?

136
00:06:53.280 --> 00:06:56.950
So, we're gonna go back toggle task list.

137
00:06:56.950 --> 00:07:00.230
And so it looks like it's literally
toggling whether it's visible or not.

138
00:07:00.230 --> 00:07:02.390
So honestly,
that's not something we need to pass down.

139
00:07:03.430 --> 00:07:06.950
That is something theoretically
we can just click on our own.

140
00:07:06.950 --> 00:07:11.445
So in that regard I just going
to make a toggle expanded and

141
00:07:11.445 --> 00:07:16.221
then we're just going to say this
is where it gets a little bit

142
00:07:16.221 --> 00:07:20.550
tricky because you should
not be mutating your props.

143
00:07:23.830 --> 00:07:26.470
So if I want to just.

144
00:07:26.470 --> 00:07:29.270
I'll follow that,
I'll follow that for now.

145
00:07:32.070 --> 00:07:36.070
And so we can say we'll
import computed from view.

146
00:07:37.270 --> 00:07:40.550
And then I'll say,
this feels, that's fine.

147
00:07:44.070 --> 00:07:45.190
How do I want to do this?

148
00:07:49.360 --> 00:07:55.951
Okay, isvisible = ref(false),

149
00:07:55.951 --> 00:07:58.720
bring that in.

150
00:07:59.760 --> 00:08:03.637
Then again if we're doing this like
the proper, like life cycle way,

151
00:08:03.637 --> 00:08:07.579
you're basically saying that, hey,
when the component is mounted,

152
00:08:07.579 --> 00:08:11.440
you're going to take is visible
that value and set it to the props.

153
00:08:11.440 --> 00:08:13.120
Is visible.

154
00:08:13.120 --> 00:08:14.080
That's how you would like.

155
00:08:15.680 --> 00:08:16.640
Wait, is expanded.

156
00:08:16.640 --> 00:08:17.200
Thank you.

157
00:08:18.240 --> 00:08:19.680
Yep.
And so then you have that.

158
00:08:19.680 --> 00:08:21.840
So then we could basically say is visible.

159
00:08:21.840 --> 00:08:26.197
Is visible

160
00:08:26.197 --> 00:08:31.120
like that.

161
00:08:31.120 --> 00:08:34.560
And then I usually like to put my
mounted lifecycle hooks at the bottom.

162
00:08:36.400 --> 00:08:40.890
So then we can toggle expanded and.

163
00:08:42.250 --> 00:08:44.570
Yeah, that'll do it.

164
00:08:46.250 --> 00:08:53.850
Okay, so then to see that that works,
we can go down to the V4.

165
00:08:55.290 --> 00:08:56.730
When I find it.

166
00:08:58.010 --> 00:08:59.290
There it is.

167
00:08:59.290 --> 00:09:03.690
Okay, so we're gonna do is we're
just gonna do new Planner card here.

168
00:09:05.300 --> 00:09:11.300
And this time we are going to say the task
list we know that is selected weak tasks.

169
00:09:13.220 --> 00:09:18.580
And then I think that's the only
thing that I required is expanded.

170
00:09:18.580 --> 00:09:19.380
Yep.

171
00:09:19.380 --> 00:09:21.299
Default false.

172
00:09:21.299 --> 00:09:24.660
And let's see, are we doing anything
interesting with that here?

173
00:09:24.660 --> 00:09:26.620
Hidden is task list expanded.

174
00:09:26.620 --> 00:09:31.540
Okay, so that means we do in this regard,
we can say is expanded.

175
00:09:33.800 --> 00:09:39.880
It is equal to is task
list expanded like that.

176
00:09:39.880 --> 00:09:46.960
Okay, then we can refresh and then you
can see failed to resolve component.

177
00:09:46.960 --> 00:09:49.320
Yeah, that'll do the trick.

178
00:09:49.320 --> 00:09:53.880
It looks like I dropped it in,
but it did not import because.

179
00:09:55.000 --> 00:09:56.600
And the import type bites me again.

180
00:10:00.130 --> 00:10:02.530
Okay, now we have some other
things we're dealing with.

181
00:10:03.650 --> 00:10:07.170
New Planner card,
format time is not a function.

182
00:10:07.170 --> 00:10:07.890
Where is that?

183
00:10:09.330 --> 00:10:10.450
Okay, got it.

184
00:10:12.370 --> 00:10:13.570
This will be relevant later.

185
00:10:13.570 --> 00:10:14.850
So we're just going to copy this.

186
00:10:17.330 --> 00:10:19.570
I am acknowledging that
this is not dry code.

187
00:10:20.690 --> 00:10:25.260
This is just to also demonstrate some
stuff we're going to be doing later.

188
00:10:25.260 --> 00:10:27.580
In fact, let me just verify
there aren't any other errors.

189
00:10:27.580 --> 00:10:28.620
No, okay, we're good.

190
00:10:31.020 --> 00:10:37.931
Is expanded by ISIS
defined on the instance.

191
00:10:37.931 --> 00:10:39.580
But we see here.
Here we go.

192
00:10:39.580 --> 00:10:41.180
There it is right here.

193
00:10:41.180 --> 00:10:43.900
So it looks like I took
just a small segment of it.

194
00:10:43.900 --> 00:10:47.649
And so again, for the sake of just
demonstrating what we what we did as far

195
00:10:47.649 --> 00:10:49.500
as in order to practice what we did.

196
00:10:49.500 --> 00:10:52.350
So really this is the new Planner card.

197
00:10:52.350 --> 00:10:55.390
Honestly, I'm just going to call it body
because that's really what we just did.

198
00:10:55.390 --> 00:10:57.470
So what are we changing?

199
00:10:57.470 --> 00:10:58.990
Yes, please apply that.

200
00:11:00.510 --> 00:11:02.670
And then new card.

201
00:11:03.870 --> 00:11:06.750
New Planner card body.

202
00:11:08.830 --> 00:11:11.630
New Planner card body.

203
00:11:11.630 --> 00:11:12.190
Great.

204
00:11:12.190 --> 00:11:13.707
Okay, now that we have that,

205
00:11:13.707 --> 00:11:17.070
then this is where we can practice
exactly what we talked about.

206
00:11:17.070 --> 00:11:24.175
So in this regard, so
we could say here in this slot,

207
00:11:24.175 --> 00:11:32.730
this here we are clearly
rendering like a bunch of save.

208
00:11:32.730 --> 00:11:33.770
I did too much.

209
00:11:37.290 --> 00:11:41.210
I want the slot to wrap around this Stuff.

210
00:11:45.220 --> 00:11:47.780
Yes, There we go.

211
00:11:47.780 --> 00:11:48.820
All right, excellent.

212
00:11:50.420 --> 00:11:56.420
And this slot, let's see, we are basically
displaying the list of tasks.

213
00:11:56.420 --> 00:12:00.100
So I can just call this name task list,
to be honest.

214
00:12:00.100 --> 00:12:05.179
And then what we can do then
is basically say, hey, look,

215
00:12:05.179 --> 00:12:11.930
on this slot we're going to provide,
we're going to provide the task list.

216
00:12:13.930 --> 00:12:16.079
And so in this case, again,
this is more for the practice and

217
00:12:16.079 --> 00:12:19.130
not because you technically have access to
it already, but that's what we would do.

218
00:12:19.130 --> 00:12:22.125
We would basically give the slot
access to this thing and

219
00:12:22.125 --> 00:12:24.490
then that way when you're inside using it.

220
00:12:30.970 --> 00:12:35.507
Again, to be clear,
this is a little redundant because

221
00:12:35.507 --> 00:12:40.580
of the fact that you have
task list already accessed.

222
00:12:40.580 --> 00:12:42.540
This then gives you access to basically.

223
00:12:42.540 --> 00:12:43.717
And I'll just do it like this just so

224
00:12:43.717 --> 00:12:45.460
that we can just show that
something's different.

225
00:12:46.900 --> 00:12:49.927
So two things I did here that I didn't
explicitly explain before in case

226
00:12:49.927 --> 00:12:50.980
you're new to it.

227
00:12:50.980 --> 00:12:56.500
One, this here, the pound symbol
is a shorthand for V slot.

228
00:12:58.340 --> 00:13:02.020
The reason, and to be clear,
it is only applicable on the template.

229
00:13:02.020 --> 00:13:06.156
You cannot use this shorthand anywhere
else because it's only for v-slot.

230
00:13:06.156 --> 00:13:08.783
Then pre here is a nice
little shortcut for

231
00:13:08.783 --> 00:13:12.040
basically displaying
data in a nice JSON way.

232
00:13:12.040 --> 00:13:16.584
If you did it without the pre and you
just did it as P, you'll see it's very,

233
00:13:16.584 --> 00:13:18.440
very unreadable.

234
00:13:18.440 --> 00:13:22.354
So the pre is a nice little legibility
thing that theoretically can you

235
00:13:22.354 --> 00:13:23.160
console log?

236
00:13:23.160 --> 00:13:25.880
Yes, but
I sometimes like to see my data on my ui.

237
00:13:25.880 --> 00:13:29.890
So this is something I use a lot just
to make it a little bit more visible.

238
00:13:29.890 --> 00:13:32.930
So yeah, so
you can see here we've exposed it.

239
00:13:32.930 --> 00:13:35.650
And then, yeah, that's basically that.

240
00:13:35.650 --> 00:13:38.646
And then if you really wanted
to then practice the use slots,

241
00:13:38.646 --> 00:13:42.130
the way you would do that is you would
say const slots equals use slots.

242
00:13:43.330 --> 00:13:48.464
And then we could basically
double check it and be like, hey,

243
00:13:48.464 --> 00:13:55.820
look, if slots taskless is being used,
then render this, otherwise do not.

244
00:13:55.820 --> 00:13:58.318
And that kind of combines
the two techniques and

245
00:13:58.318 --> 00:14:00.940
that way you don't have
this random spacer.

246
00:14:00.940 --> 00:14:03.536
So, I guess also worth mentioning for
those,

247
00:14:03.536 --> 00:14:07.730
if you're new to Tailwind CSS,
sort of these sort of utility CSS classes,

248
00:14:07.730 --> 00:14:10.700
these things basically
apply CSS like as little.

249
00:14:10.700 --> 00:14:12.780
So this one says space vertically.

250
00:14:12.780 --> 00:14:15.540
I think this is going to be just
two units of whatever that is.

251
00:14:15.540 --> 00:14:16.460
So that's what that is.

