WEBVTT

1
00:00:00.010 --> 00:00:00.812
To finish the,

2
00:00:00.812 --> 00:00:05.031
the UI part before actually start writing
code that executes in the background.

3
00:00:05.031 --> 00:00:06.109
See how that works.

4
00:00:06.109 --> 00:00:10.032
I mentioned that there is
a new recent use case for

5
00:00:10.032 --> 00:00:13.870
background execution that's media playing.

6
00:00:13.870 --> 00:00:18.886
Okay, so let's see how that works and
see it in action in our project.

7
00:00:18.886 --> 00:00:23.878
In the case that your web app is playing
audio or video, or it seems like it's

8
00:00:23.878 --> 00:00:29.271
playing audio or video, okay, there
are special cases for background playing.

9
00:00:29.271 --> 00:00:34.284
We have two API's picture in picture for
video.

10
00:00:34.284 --> 00:00:39.866
So in that case you have like some
kind of a secondary canvas, okay.

11
00:00:39.866 --> 00:00:44.968
So you have maybe the user is
minimizing the browser completely but

12
00:00:44.968 --> 00:00:51.085
you still have a picture and picture
floating window on your operating system.

13
00:00:51.085 --> 00:00:56.368
So you have like a canvas where
you can still render content,

14
00:00:56.368 --> 00:01:01.341
that canvas is not DOM based,
so you cannot render HTML,

15
00:01:01.341 --> 00:01:04.458
you can just render videos, okay?

16
00:01:04.458 --> 00:01:08.844
So it's a video element,
but it can be live video,

17
00:01:08.844 --> 00:01:11.700
and because it can be live video,

18
00:01:11.700 --> 00:01:16.699
you can inject that with images or
with whatever you want.

19
00:01:16.699 --> 00:01:20.071
Okay I will show you examples
of that in a minute,

20
00:01:20.071 --> 00:01:24.938
the other API is called the media
session API and this is for metadata.

21
00:01:24.938 --> 00:01:29.924
So why you're playing video or
audio in the background you

22
00:01:29.924 --> 00:01:35.011
can send to the OS metadata
about what you're playing, but

23
00:01:35.011 --> 00:01:40.726
that metadata is bidirectional or
that action is bidirectional.

24
00:01:40.726 --> 00:01:45.687
You are sending data from
your web app to the OS,

25
00:01:45.687 --> 00:01:50.665
but also you can listen for
actions from the OS.

26
00:01:50.665 --> 00:01:57.467
Like the play, the pulse,
actions, seek, next, previous.

27
00:01:57.467 --> 00:02:01.048
So every OS will render its own UI.

28
00:02:01.048 --> 00:02:05.020
And then when the user clicks
on one of those actions,

29
00:02:05.020 --> 00:02:08.740
your web app will get
executed in the background.

30
00:02:10.599 --> 00:02:13.605
And it's not just the web app.

31
00:02:13.605 --> 00:02:18.612
Today, when you are executing
background audio or

32
00:02:18.612 --> 00:02:23.393
video, you will be connected
not just to the OS.

33
00:02:23.393 --> 00:02:28.110
For example here you have Android,
here you have Windows, but

34
00:02:28.110 --> 00:02:30.070
also just smart watches.

35
00:02:30.070 --> 00:02:35.473
So if I'm playing some background
audio from a web app from my iPhone,

36
00:02:35.473 --> 00:02:38.965
I will see the information
in my Apple watch.

37
00:02:38.965 --> 00:02:43.904
And the action from the Apple Watch
will trigger JavaScript events

38
00:02:43.904 --> 00:02:46.031
in your background web app.

39
00:02:46.031 --> 00:02:47.113
Nothing makes sense?

40
00:02:47.113 --> 00:02:51.118
And that's not happening in
the service worker's scope,

41
00:02:51.118 --> 00:02:55.776
that's happening in the window scope,
in the global scope, okay?

42
00:02:55.776 --> 00:03:01.573
And it's not just your smart watch,
also Android where supports that.

43
00:03:01.573 --> 00:03:02.997
It includes your car.

44
00:03:02.997 --> 00:03:10.425
If you are with Android Auto or
CarPlay for iOS it will also work.

45
00:03:10.425 --> 00:03:15.861
So, the actions from the car
even from the wheels

46
00:03:15.861 --> 00:03:21.164
buttons will trigger
JavaScript your phone and

47
00:03:21.164 --> 00:03:23.825
that magically works.

48
00:03:23.825 --> 00:03:26.870
So this is a media session API.

49
00:03:26.870 --> 00:03:30.197
So it's navigator.mediaSession.metadata.

50
00:03:30.197 --> 00:03:37.134
Where you set the current metadata
by the largest album on an image,

51
00:03:37.134 --> 00:03:43.233
and then you can set different
action handlers per action.

52
00:03:43.233 --> 00:03:47.755
Examples of the second part,
something like this,

53
00:03:47.755 --> 00:03:54.451
you set an action handle for play,
post, stop, seek backward and forward.

54
00:03:54.451 --> 00:04:01.448
That's typically when you have +10,
-10 seconds, so it will execute this.

55
00:04:01.448 --> 00:04:07.704
And seek to is when the user is actually
moving the finger, is dragging, okay?

56
00:04:07.704 --> 00:04:09.912
The thumb around the slider.

57
00:04:09.912 --> 00:04:14.895
Previoustrack, nexttrack,
skipad, in the case you

58
00:04:14.895 --> 00:04:20.110
have another and
you let the users keep the ad on YouTube.

59
00:04:20.110 --> 00:04:20.797
You can do that.

60
00:04:20.797 --> 00:04:25.365
And there is like a second version of this
API that is currently available on most

61
00:04:25.365 --> 00:04:27.627
browsers and you will understand why.

62
00:04:27.627 --> 00:04:32.867
There is adding more actions for
video callings,

63
00:04:32.867 --> 00:04:37.491
so if you're in meet Zoom or
Teams meeting.

64
00:04:37.491 --> 00:04:42.666
Now you can send that meeting for
example to picture and picture and

65
00:04:42.666 --> 00:04:48.874
through this API, you will be able to
hang up, to mute your microphone, okay.

66
00:04:48.874 --> 00:04:55.722
And your transcript will get executed and
function with this API, okay?

67
00:04:55.722 --> 00:04:58.070
Make sense?

68
00:04:58.070 --> 00:05:02.386
So when you are doing this and
you're sending audio or video,

69
00:05:02.386 --> 00:05:07.532
if the user gets out of your website,
minimizing the browser, or going to

70
00:05:07.532 --> 00:05:12.685
another tab, you are in the background and
you will continue executing.

71
00:05:12.685 --> 00:05:15.960
It's not going to dispose your tab.

