[00:00:00]
>> We've covered today JavaScript in the background, the web app lifecycle. Remember that what happens when you go to the background, where are all the background possibilities, the background's life. What happens with timers? Timers might get throttled, also your whole website might be suspended or discarded. We've talk about detection.

[00:00:23]
API's for detection such as the page visibility API, and the lifecycle API that it's chromium only. The basics of notifying the user while in the background, because we don't have DOM. We don't have user interface, service workers, very basic idea just to sit on top of that lots of other API's.

[00:00:44]
Execution in the background, we've seen all the API's that can actually let us do something in the background no matter if the user keeps the PWA or the website in the foreground. Or even open, such as background sync, the beacon API, media API's. Periodic background scene, background fetch, and now Web Push.

[00:01:09]
So that's actually everything that exists today in the web platform, at least in the standards, not without extensions, and native apps around that has to do with background execution with JavaScript. Well, remember you have the final version in the project, so in case you. You weren't coding, you have the final version that is probably not 100% the same but it's kind of the same idea that you have there working in case you want to play with that.

[00:01:37]
Also you have that hidden cam that will let you see what's going on if you want to play with that as well with your real devices and see what happens when. The window goes to the background, what happens with your timers, with your service workers, with your web workers, and so on.

[00:01:53]
So after saying that, I have only one work, thanks.
>> [APPLAUSE]

