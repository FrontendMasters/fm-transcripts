WEBVTT

1
00:00:00.180 --> 00:00:03.390
Let's talk a little bit about
the web app lifecycle, okay?

2
00:00:03.390 --> 00:00:08.650
Things that sometimes we don't think
about when we are web developers.

3
00:00:08.650 --> 00:00:11.850
So let's talk about some possibilities.

4
00:00:11.850 --> 00:00:14.140
The user goes to a new tab.

5
00:00:14.140 --> 00:00:17.030
So, my tab is not on the screen anymore.

6
00:00:17.030 --> 00:00:18.840
User goes to a new window.

7
00:00:18.840 --> 00:00:22.180
Can be a browser window or
another window from the OS.

8
00:00:22.180 --> 00:00:23.740
The user minimizes the window.

9
00:00:24.750 --> 00:00:27.200
It can be also PWA, by the way,
not just the browser.

10
00:00:27.200 --> 00:00:32.053
It can be an installed PWA window,
so the user minimizes the window,

11
00:00:32.053 --> 00:00:37.760
the user closes the window with the X or
with the red button, it depends on the OS.

12
00:00:39.620 --> 00:00:45.050
The users closes the browser or
the PWA standalone window.

13
00:00:45.050 --> 00:00:49.711
So all these are different
situations that might impact

14
00:00:49.711 --> 00:00:53.090
what happens with our JavaScript code.

15
00:00:53.090 --> 00:00:56.485
Before actually getting into
the answer of what's going on,

16
00:00:56.485 --> 00:00:57.930
I have a question for you.

17
00:00:57.930 --> 00:01:04.219
What happens on mobile operating systems
with app's lifecycle in general?

18
00:01:04.219 --> 00:01:09.353
So on Android, on iOS,
do you have a close button?

19
00:01:09.353 --> 00:01:14.544
Have you ever seen an app with
an exit menu or a close app menu?

20
00:01:14.544 --> 00:01:21.190
No, so
it's like technically we never close apps.

21
00:01:21.190 --> 00:01:25.601
As web developer, typically we
don't think too much about that.

22
00:01:25.601 --> 00:01:28.300
And what happens with that?

23
00:01:28.300 --> 00:01:31.370
So let me get out of the presentation for
a second.

24
00:01:32.410 --> 00:01:35.090
And I have here an iOS simulator.

25
00:01:36.520 --> 00:01:37.560
And I wanna show you something.

26
00:01:40.953 --> 00:01:45.103
Here, let me decrease the size
a little bit, like so.

27
00:01:45.103 --> 00:01:52.143
So, how many of you on iOS or Android are
actually doing this many times per day?

28
00:01:54.160 --> 00:01:57.639
Like closing your app,
swiping up or swiping right.

29
00:01:57.639 --> 00:02:01.776
So I have here a couple of yeses,
and a couple of no.

30
00:02:01.776 --> 00:02:06.110
And for those of you saying yes,
why are you doing it?

31
00:02:06.110 --> 00:02:07.490
&gt;&gt; Clear the clutter.

32
00:02:07.490 --> 00:02:08.580
&gt;&gt; Clear the clutter.

33
00:02:08.580 --> 00:02:09.244
What else?

34
00:02:09.244 --> 00:02:10.115
And why?

35
00:02:10.115 --> 00:02:14.273
Why do you care about that?

36
00:02:14.273 --> 00:02:17.406
&gt;&gt; If I'm switching between app contexts,

37
00:02:17.406 --> 00:02:22.920
I like to have fewer things in front of-
&gt;&gt; Okay, or it's a mental organization.

38
00:02:22.920 --> 00:02:25.420
Cool, what else?

39
00:02:25.420 --> 00:02:28.555
&gt;&gt; I don't close them but there is people
say that it helps battery life but

40
00:02:28.555 --> 00:02:29.607
it doesn't actually.

41
00:02:29.607 --> 00:02:31.223
&gt;&gt; It saves battery life.

42
00:02:31.223 --> 00:02:34.960
Yeah, there are other people thinking
that it will save battery life and

43
00:02:34.960 --> 00:02:38.200
it's not true,
it's exactly the opposite of that.

44
00:02:38.200 --> 00:02:46.250
And that has to do with the life cycle of
a mobile operating system with their apps.

45
00:02:46.250 --> 00:02:49.720
And our web apps are actually
within that lifecycle.

46
00:02:51.340 --> 00:02:54.770
They can be a tab in the browser or
they can be any standalone PWA.

47
00:02:54.770 --> 00:02:55.750
It doesn't matter.

48
00:02:55.750 --> 00:02:56.800
It's actually the same.

49
00:02:56.800 --> 00:02:59.580
We are actually within that OS.

50
00:02:59.580 --> 00:03:01.730
So let's try to understand how that works.

51
00:03:02.870 --> 00:03:07.686
So, going back here, on a desktop
operating system, it can be Linux,

52
00:03:07.686 --> 00:03:12.583
Windows, Mac OS, Chrome OS,
typically when you are inside one app, so

53
00:03:12.583 --> 00:03:14.730
that's the orange one.

54
00:03:14.730 --> 00:03:17.850
That's your app that is running,
but you may have others.

55
00:03:17.850 --> 00:03:19.070
So that's the active app.

56
00:03:19.070 --> 00:03:20.830
The orange one is the active app.

57
00:03:20.830 --> 00:03:25.718
So you may have other apps
that are also running.

58
00:03:25.718 --> 00:03:30.142
And they're all running,
even if they are in the background or

59
00:03:30.142 --> 00:03:32.322
minimized or hidden somehow.

60
00:03:32.322 --> 00:03:36.297
If you press out tab, you change your
active app, but your previous app,

61
00:03:36.297 --> 00:03:37.790
it's obviously running.

62
00:03:39.110 --> 00:03:42.369
it's in the background but running, that's
the next step operating system in general.

63
00:03:43.770 --> 00:03:50.490
When mobile appeared, we as users, we
thought that was the case also for mobile.

64
00:03:50.490 --> 00:03:53.639
And that's why a lot of people
are actually closing apps because they

65
00:03:53.639 --> 00:03:56.410
think that they're consuming resources.

66
00:03:56.410 --> 00:03:59.020
But that's not how they typically work.

67
00:03:59.020 --> 00:04:04.335
On mobile operating systems this is
a general idea, there are some exceptions

68
00:04:04.335 --> 00:04:08.860
but in general, you have one app
that is running, the active app.

69
00:04:08.860 --> 00:04:14.766
And the other apps that you
see in the multitask manager,

70
00:04:14.766 --> 00:04:20.350
are paused or suspended,
different names to this.

71
00:04:20.350 --> 00:04:22.840
So they're not executing code.

72
00:04:22.840 --> 00:04:30.652
And what you see in that Multitask
manager is just screenshots of that app,

73
00:04:30.652 --> 00:04:37.349
not really like the current UI for
the app, it's a screenshot.

74
00:04:38.410 --> 00:04:43.950
If you change your app, now you
have another app that is active and

75
00:04:43.950 --> 00:04:48.000
your previous app goes to suspended mode.

76
00:04:48.000 --> 00:04:52.330
And there is no close, so
users don't close apps.

77
00:04:52.330 --> 00:04:57.260
So of course, this model has a problem,
the memory is limited and

78
00:04:57.260 --> 00:05:01.120
we can't keep 100 apps open forever.

79
00:05:01.120 --> 00:05:07.086
So at one point the OS will need more
memory for the current active app and

80
00:05:07.086 --> 00:05:12.170
it will actually kill some
of the background apps.

81
00:05:12.170 --> 00:05:16.052
That process has different names,
it depends on the OS, but

82
00:05:16.052 --> 00:05:19.740
it's actually pretty
similar on Android and iOS.

83
00:05:19.740 --> 00:05:23.628
On Android, it's a little bit more complex
because we don't have just the concept of

84
00:05:23.628 --> 00:05:26.260
the app,
we also have the concepts of an activity.

85
00:05:26.260 --> 00:05:29.740
But we are not going to get so
deep on that today.

86
00:05:29.740 --> 00:05:34.729
But anyway,
if the OS is actually killing your app, or

87
00:05:34.729 --> 00:05:38.959
destroying your app,
or disposing your app,

88
00:05:38.959 --> 00:05:43.140
your app, it still appears as there.

89
00:05:43.140 --> 00:05:46.290
So it's not removing
the app from the list.

90
00:05:46.290 --> 00:05:47.380
You still see the screenshot.

91
00:05:48.880 --> 00:05:52.120
Because on mobile operating
system task managers,

92
00:05:52.120 --> 00:05:55.737
what you see is actually some
kind of navigation history.

93
00:05:55.737 --> 00:06:01.840
It's not really a task
manager like in the OS tab.

94
00:06:01.840 --> 00:06:04.010
It's not the same.

95
00:06:04.010 --> 00:06:08.087
So having that in mind,
now going back to web apps and

96
00:06:08.087 --> 00:06:12.760
JavaScript, we can be on
any of these situations.

97
00:06:12.760 --> 00:06:16.730
So our content can be actually
in memory and running.

98
00:06:16.730 --> 00:06:19.870
Our content can be actually in memory and
not running.

99
00:06:19.870 --> 00:06:24.829
That's the paused state on that diagram,
or our content cannot be in memory at all.

100
00:06:26.010 --> 00:06:29.440
But for the user, it's still there.

101
00:06:29.440 --> 00:06:33.648
We see the screenshot so the user thinks
that the content is still there, but

102
00:06:33.648 --> 00:06:34.320
it's not.

103
00:06:35.730 --> 00:06:41.299
So, when we are doing web apps or
websites in the browser,

104
00:06:41.299 --> 00:06:46.850
or when doing PWAs,
we are going to see this in action.

105
00:06:46.850 --> 00:06:52.230
And we should care about this, again,
to improve the user experience.

106
00:06:52.230 --> 00:06:55.828
Because what happens when
the user goes back to our PWA or

107
00:06:55.828 --> 00:06:59.130
web app that was actually disposed?

108
00:06:59.130 --> 00:07:01.010
The app will start from scratch.

109
00:07:01.010 --> 00:07:04.833
But the user was expecting something
different because the screenshot was

110
00:07:04.833 --> 00:07:07.250
showing us something different.

111
00:07:07.250 --> 00:07:11.080
So that's why we need to understand
the situation and do something about that.

