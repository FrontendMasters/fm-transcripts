WEBVTT

1
00:00:00.180 --> 00:00:04.430
And with video,
you can also use picture-in-picture.

2
00:00:04.430 --> 00:00:06.170
From JavaScript,
it's actually pretty simple.

3
00:00:06.170 --> 00:00:10.947
You take the video element and
you'll requestPictureInPicture.

4
00:00:10.947 --> 00:00:14.071
And if you wanna get out
of picture-in-picture,

5
00:00:14.071 --> 00:00:19.313
you talk to the document, not to the video
element, and you exitPictureInPicture.

6
00:00:19.313 --> 00:00:22.978
And there is a boolean
in the document element,

7
00:00:22.978 --> 00:00:27.836
pictureInPictureElement that
tells you if there is an element

8
00:00:27.836 --> 00:00:32.340
in this dome that is currently
in picture-in-picture.

9
00:00:34.270 --> 00:00:38.395
So, for example, if you have a button that
is toggling picture-in-picture, on and

10
00:00:38.395 --> 00:00:39.592
off, that's the code.

11
00:00:39.592 --> 00:00:42.020
And I will show you this
in action in a second.

12
00:00:43.440 --> 00:00:44.571
Any question, yeah?

13
00:00:47.416 --> 00:00:51.365
Okay, so also there are new events for
the video element

14
00:00:51.365 --> 00:00:56.083
like enterpictureinpicture,
leavepictureinpicture, okay?

15
00:00:56.083 --> 00:01:00.426
And as I mentioned before,
you cannot add HTML.

16
00:01:00.426 --> 00:01:05.604
So if you wanna customize the UI of
that secondary canvas that you have

17
00:01:05.604 --> 00:01:11.141
in the background, you have to play
with the video that you're sending,

18
00:01:11.141 --> 00:01:14.735
the video buffer that you're sending,
okay?

19
00:01:14.735 --> 00:01:16.530
To the API.

20
00:01:16.530 --> 00:01:22.188
There is a pseudo class for CSS in
case you wanna customize a little bit,

21
00:01:22.188 --> 00:01:28.807
the video element, but there are not so
much things you can customize, actually.

22
00:01:28.807 --> 00:01:29.562
And, well,

23
00:01:29.562 --> 00:01:33.689
we have already seen the JavaScript
code that will let you toggle this.

24
00:01:33.689 --> 00:01:36.383
And controls are managed
through the other APIs,

25
00:01:36.383 --> 00:01:40.230
because the picture-in-picture
can have controls.

26
00:01:40.230 --> 00:01:46.270
And those controls will trigger JavaScript
through the other API, okay, make sense?

27
00:01:47.580 --> 00:01:51.357
Cool, so before actually seeing
this in action with our code,

28
00:01:51.357 --> 00:01:56.660
I wanna show you this, pip-rendering-fun,
picture-in-picture rendering fun.

29
00:01:57.680 --> 00:02:00.500
So let me run this, for
example, on Chrome.

30
00:02:00.500 --> 00:02:04.720
Remember I mentioned that there are some
tricks with picture-in-picture.

31
00:02:04.720 --> 00:02:05.836
Well, here you have a couple.

32
00:02:05.836 --> 00:02:11.501
For example,
this demo will open picture-in-picture,

33
00:02:11.501 --> 00:02:15.250
not with a video, but with some stats.

34
00:02:17.190 --> 00:02:18.260
Let me show you this.

35
00:02:18.260 --> 00:02:21.740
Of course, it's a picture-in-picture so
you can move it around the OS.

36
00:02:21.740 --> 00:02:27.960
And, of course, I can minimize the
browser, and that's picture-in-picture.

37
00:02:27.960 --> 00:02:33.660
And also you can even
mix this with actions.

38
00:02:33.660 --> 00:02:36.054
So, for example,
I could add a Previous and

39
00:02:36.054 --> 00:02:40.398
Next button over the picture-in-picture
that will trigger JavaScript, and

40
00:02:40.398 --> 00:02:43.340
that JavaScript will change
what we're rendering.

41
00:02:45.550 --> 00:02:48.730
This trick doesn't work on mobile,
only on desktops.

42
00:02:48.730 --> 00:02:54.010
So mobile, you have to send an actual
source that is actually a video.

43
00:02:54.010 --> 00:02:55.585
If not, it's not taking it, okay?

44
00:02:55.585 --> 00:02:59.540
[COUGH] So
there are a couple of examples here.

45
00:03:01.220 --> 00:03:05.872
Meta is just showing the window size.

46
00:03:05.872 --> 00:03:10.881
So if I resize it,
remember, it feels simple,

47
00:03:10.881 --> 00:03:15.529
but this is actually a video stream, okay?

48
00:03:15.529 --> 00:03:19.487
On top of the web app.

49
00:03:19.487 --> 00:03:23.760
Well, time tracker, there are many, okay?

50
00:03:23.760 --> 00:03:28.893
As you can see here, of course,
you can resize this window,

51
00:03:28.893 --> 00:03:36.581
you can see it can have it's
any size with Any orientation.

52
00:03:36.581 --> 00:03:41.800
So it can be landscape or portrait,
it doesn't matter, it just work.

53
00:03:41.800 --> 00:03:44.634
Let me go back to the window.

54
00:03:44.634 --> 00:03:50.720
And this one is drawing so
you can actually draw in a canvas,

55
00:03:50.720 --> 00:03:56.458
and it renders directly in
the picture-in-picture.

56
00:03:56.458 --> 00:04:01.750
This is an example, again,
yeah, a little over the edge.

57
00:04:02.990 --> 00:04:08.877
But to show you that it's another way
that we have, at least on dekstop, okay?

58
00:04:08.877 --> 00:04:12.484
To create the UI that runs
in the background and

59
00:04:12.484 --> 00:04:15.330
keeps a UI floating over the OS.

60
00:04:15.330 --> 00:04:20.652
Yeah, also even if you don't
provide any JavaScript code

61
00:04:20.652 --> 00:04:26.420
on compatible browsers,
any video element will have an icon.

62
00:04:26.420 --> 00:04:30.820
In fact, in our code, I didn't add
any code here, I have a video.

63
00:04:30.820 --> 00:04:33.310
And if you start playing the video,

64
00:04:33.310 --> 00:04:39.217
you could start picture-in-picture even
if I'm not adding any JavaScript code.

65
00:04:39.217 --> 00:04:45.661
So picture-in-picture will work anyway,
no matter if you are using the API.

66
00:04:45.661 --> 00:04:49.243
The idea with API is that you can
actually customize what you're doing,

67
00:04:49.243 --> 00:04:52.370
you can listen for events, and
you can request that from code.

68
00:04:53.895 --> 00:04:57.555
But now if I minimize this,
that continues playing.

69
00:04:57.555 --> 00:05:02.394
&gt;&gt; How are you dynamically generating
a video stream to feed into that?

70
00:05:02.394 --> 00:05:05.193
Is that-
&gt;&gt; Well, this is open-source so

71
00:05:05.193 --> 00:05:07.218
you can actually see it in action, okay?

72
00:05:07.218 --> 00:05:10.295
This one, here I have the repository.

73
00:05:10.295 --> 00:05:14.871
But it has to do with creating
a canvas is rendering on

74
00:05:14.871 --> 00:05:17.993
a in-memory canvas, 2D canvas.

75
00:05:17.993 --> 00:05:22.565
And each image from the canvas,
it's sent as a buffer,

76
00:05:22.565 --> 00:05:26.410
like a bit map, as one frame of a video.

77
00:05:26.410 --> 00:05:27.310
&gt;&gt; Can do that?

78
00:05:27.310 --> 00:05:28.560
There's-
&gt;&gt; You can do that.

79
00:05:28.560 --> 00:05:30.010
Yeah, you can do that with the web.

80
00:05:30.010 --> 00:05:30.730
&gt;&gt; Bonkers.

81
00:05:30.730 --> 00:05:33.172
&gt;&gt; People put in the background for games.

82
00:05:33.172 --> 00:05:35.990
Render a frame before
they need to render it.

83
00:05:35.990 --> 00:05:37.160
&gt;&gt; In fact, think about this.

84
00:05:37.160 --> 00:05:40.748
You have the gamepad API,
because maybe you're thinking,

85
00:05:40.748 --> 00:05:42.870
okay, I do this in the background.

86
00:05:42.870 --> 00:05:46.300
Might have a secondary
nice picture-in-picture,

87
00:05:46.300 --> 00:05:48.900
but how can I play with the game?

88
00:05:48.900 --> 00:05:52.250
Well, you have the actions, but
it's actually pretty limited.

89
00:05:52.250 --> 00:05:56.580
But now you have the gamepad API
compatible with every browser.

90
00:05:56.580 --> 00:06:01.540
So you have a gamepad, a bluetooth
gamepad, or wired gamepad, you can

91
00:06:01.540 --> 00:06:07.429
actually use a gamepad to play a game in
a picture-in-picture background web app.

92
00:06:10.473 --> 00:06:13.473
So it's possible, but
to actually make that work,

93
00:06:13.473 --> 00:06:17.740
you need to request picture-in-picture,
your code or the user.

94
00:06:17.740 --> 00:06:19.600
So someone needs to request
picture-in-picture.

95
00:06:19.600 --> 00:06:23.393
If you don't request picture-in-picture
when you go to the background,

96
00:06:23.393 --> 00:06:25.060
you will lose a lot of abilities.

97
00:06:27.250 --> 00:06:29.060
So it's not gonna work properly.

98
00:06:29.060 --> 00:06:32.244
But if you request picture-in-picture,

99
00:06:32.244 --> 00:06:37.414
your code has full background abilities
as if it's in the foreground.

