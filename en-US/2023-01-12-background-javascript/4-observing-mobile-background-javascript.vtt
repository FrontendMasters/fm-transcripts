WEBVTT

1
00:00:00.320 --> 00:00:02.240
What about mobile?

2
00:00:02.240 --> 00:00:04.660
So this Safari on iOS.

3
00:00:04.660 --> 00:00:08.780
So I'm doing the same but remotely,
with a remote inspection here.

4
00:00:08.780 --> 00:00:14.199
So if you go to a new tab, you can see
that everything goes down as on desktop,

5
00:00:14.199 --> 00:00:16.360
so it's pretty similar.

6
00:00:16.360 --> 00:00:20.310
The service worker is
stop almost immediately.

7
00:00:21.600 --> 00:00:25.630
Okay, when you go to another tab,
it says, okay, the user is not there,

8
00:00:25.630 --> 00:00:27.779
I will stop the service worker, okay.

9
00:00:27.779 --> 00:00:32.315
The worker thread is still there, so this
is different from Safari on the Mac, for

10
00:00:32.315 --> 00:00:34.830
some reason, it's a different algorithm.

11
00:00:34.830 --> 00:00:37.460
And that's because I'm
still in the browser.

12
00:00:37.460 --> 00:00:41.639
So I'm still in safari, Safari is
still the active app, okay, here.

13
00:00:41.639 --> 00:00:46.040
But what happens if I change
my app to a different app?

14
00:00:46.040 --> 00:00:54.039
Okay, in that case your code will
stop executing almost immediately.

15
00:00:54.039 --> 00:01:00.960
Actually you have around three
seconds before you are suspended.

16
00:01:00.960 --> 00:01:05.819
And that's because the whole
Safari is suspended,

17
00:01:05.819 --> 00:01:09.030
it's not like iOS is killing you.

18
00:01:09.030 --> 00:01:11.708
It's actually suspending Safari, so

19
00:01:11.708 --> 00:01:17.140
Safari is suspending JavaScript execution,
everything, okay?

20
00:01:17.140 --> 00:01:18.040
So that's iOS.

21
00:01:19.550 --> 00:01:22.310
So also the same happens
with an installed PWA.

22
00:01:22.310 --> 00:01:26.750
Here I have the same website but
as an installed PWA.

23
00:01:26.750 --> 00:01:31.400
So when you get out of the PWA you
have like three seconds before

24
00:01:31.400 --> 00:01:34.360
actually everything pauses and stop.

25
00:01:35.450 --> 00:01:39.707
But there is a weird trick here,
let me show you.

26
00:01:39.707 --> 00:01:44.860
So here I was testing this PWA background,
okay?

27
00:01:44.860 --> 00:01:48.985
So that was the PWA that you
saw before this one, okay?

28
00:01:48.985 --> 00:01:54.870
So I get out of that PWA,
but then I open another one.

29
00:01:54.870 --> 00:01:58.840
So of course here, if I go back,
everything goes back to green as expected.

30
00:02:00.350 --> 00:02:02.903
But what happens if I open another PWA?

31
00:02:02.903 --> 00:02:07.634
For example, Airhorner, but it's
a different PWA from a different origin,

32
00:02:07.634 --> 00:02:10.430
nothing to do with mine, okay?

33
00:02:10.430 --> 00:02:17.170
So if I open another PWA, my PWA is back
for some reason you will see that now.

34
00:02:17.170 --> 00:02:20.640
So if I open the other PWA,
my PWA is also back.

35
00:02:22.040 --> 00:02:23.960
So it feels weird.

36
00:02:23.960 --> 00:02:27.740
So and
if you close my PWA now it's stopped.

37
00:02:27.740 --> 00:02:28.950
So what's going on here?

38
00:02:28.950 --> 00:02:33.450
This is how iOS implements
PWA installation.

39
00:02:34.540 --> 00:02:39.155
They are using the same process, kind of,
they're like the same browser for

40
00:02:39.155 --> 00:02:43.690
all the PWAs that you have installed
on the iPhone or the iPad.

41
00:02:43.690 --> 00:02:50.070
So that means that you may
have different PWA's open.

42
00:02:50.070 --> 00:02:54.551
But all of them they have the same
execution rights if one is active

43
00:02:54.551 --> 00:02:57.960
because the process is active, make sense?

44
00:02:57.960 --> 00:03:01.232
Again, I'm going to PWA,
I'm going to Twitter PWA.

45
00:03:01.232 --> 00:03:05.770
Then press the homescreen, so
now the Twitter PWA is suspended.

46
00:03:05.770 --> 00:03:07.580
And then I open the Tik Tok PWA.

47
00:03:08.660 --> 00:03:10.540
Twitter will also wake up.

48
00:03:11.830 --> 00:03:15.812
Okay, it's a weird one it's a weird
trick but that's how it works, yeah.

49
00:03:15.812 --> 00:03:18.084
&gt;&gt; What if it's a PWA installed
through like the app store,

50
00:03:18.084 --> 00:03:19.731
like the Twitter you install-
&gt;&gt; Okay so

51
00:03:19.731 --> 00:03:23.999
if the PWA is installed through the app
store, so that's a different app,

52
00:03:23.999 --> 00:03:28.150
it's a different process,
it's going to use the web view.

53
00:03:28.150 --> 00:03:31.370
And it's a complete different life cycle.

54
00:03:31.370 --> 00:03:36.380
So in that case, it won't be running.

55
00:03:36.380 --> 00:03:39.950
Okay, unless you reopen that app.

56
00:03:39.950 --> 00:03:45.128
Okay, but have in mind that PWA is on iOS,
not on Android, on iOS,

57
00:03:45.128 --> 00:03:50.030
coming from the store they're
using a different web engine.

58
00:03:50.030 --> 00:03:52.334
A completely different web engine,

59
00:03:52.334 --> 00:03:57.460
so from a process point of view within
the OS, it's a different process.

60
00:03:57.460 --> 00:04:03.850
So they don't share anything including
the lifecycle, okay, makes sense?.

61
00:04:03.850 --> 00:04:11.163
So on iOS and iPad OS, your website
becomes not visible in the lock screen.

62
00:04:11.163 --> 00:04:15.516
Think about things like on desktop,
we don't think about this a lot, but yeah,

63
00:04:15.516 --> 00:04:16.296
long screen.

64
00:04:16.296 --> 00:04:20.900
So, yeah, maybe my app,
my website is still there.

65
00:04:20.900 --> 00:04:24.080
But now my phone is locked.

66
00:04:24.080 --> 00:04:28.228
Or the user goes to the home screen,
open another tab and

67
00:04:28.228 --> 00:04:34.060
what was in the background, they can
be in memory or not, how can we tell?

68
00:04:34.060 --> 00:04:36.110
We can't, we don't know.

69
00:04:37.350 --> 00:04:41.742
If we see a background tab on iOS or
if we see a background PWA on iOS,

70
00:04:41.742 --> 00:04:45.350
we don't know if it's in memory or not.

71
00:04:45.350 --> 00:04:50.256
Okay, the UIs always a screenshot and
it's not updated.

72
00:04:50.256 --> 00:04:54.730
Remember I mentioned that nine
years ago I did a zombie tab trick.

73
00:04:54.730 --> 00:04:59.240
Well with that zombie tab we're
actually going through this.

74
00:04:59.240 --> 00:05:04.943
And in the background,
the tab was actually going back to life,

75
00:05:04.943 --> 00:05:07.170
it was actually a trick.

76
00:05:08.350 --> 00:05:11.396
So, typically you have 2 to 3seconds,
but for

77
00:05:11.396 --> 00:05:15.300
some reason sometimes it
gives you 30 seconds.

78
00:05:15.300 --> 00:05:20.189
Of course nothing from Apple
officially saying what's going on.

79
00:05:20.189 --> 00:05:24.731
But I couldn't find any
reason of why sometimes it

80
00:05:24.731 --> 00:05:30.260
gives you more seconds to execute code,
who knows.

81
00:05:30.260 --> 00:05:35.587
So but having mind that after you're done
you need to be really quick if you wanna

82
00:05:35.587 --> 00:05:40.612
do something such as saving the state
in IndexDB, or something like that.

83
00:05:40.612 --> 00:05:42.440
Because you don't have so much time.

84
00:05:44.320 --> 00:05:48.381
If the PWA still in memory open another
PWA will also give you a background

85
00:05:48.381 --> 00:05:49.770
execution rights.

86
00:05:49.770 --> 00:05:55.160
Again, that's a tricky thing, but
it can be good or bad, I don't know.

87
00:05:55.160 --> 00:06:00.500
But having mind that maybe you think
that your PWA is back, but it's not.

88
00:06:01.660 --> 00:06:06.936
So your JavaScript code is executing
code again and you say, we're back,

89
00:06:06.936 --> 00:06:12.400
the user is using our PWA again, no,
he's using another PWA, not yours, okay?

90
00:06:12.400 --> 00:06:17.810
You gonna still know with an API that we
will see later if we are visible or not.

91
00:06:17.810 --> 00:06:20.330
Okay, so you can still check that.

92
00:06:21.340 --> 00:06:24.320
And the last thing that I
have here is Android, okay?

93
00:06:24.320 --> 00:06:27.820
So on Android, of course,
the basic part is the same.

94
00:06:27.820 --> 00:06:32.080
So if you open another tab, for example,

95
00:06:32.080 --> 00:06:36.481
everything goes down as expected, okay?

96
00:06:36.481 --> 00:06:39.520
Compared to other browsers
is actually the same.

97
00:06:39.520 --> 00:06:44.900
But what is not the same, is what happens,
I think I'm going back now to the tab,

98
00:06:44.900 --> 00:06:47.852
so everything is green again and 100%.

99
00:06:47.852 --> 00:06:52.531
What happens if I minimize the app,
or if I press the home button,

100
00:06:52.531 --> 00:06:55.300
or if I open another app?

101
00:06:55.300 --> 00:07:00.599
So the worker thread is
it still executing 100%.

102
00:07:00.599 --> 00:07:02.842
The service worker also.

103
00:07:02.842 --> 00:07:09.400
My timers were throttle,
the standard window timers, okay?

104
00:07:09.400 --> 00:07:13.198
And that will happen for
around five minutes.

105
00:07:13.198 --> 00:07:18.266
For five minutes your web app
is still there unless the user

106
00:07:18.266 --> 00:07:24.720
is actually killing the browser process or
the PWA process, okay?

107
00:07:24.720 --> 00:07:29.659
But it will still be there for
around five minutes.

108
00:07:29.659 --> 00:07:34.120
If I do that at that point is stop, okay?

109
00:07:34.120 --> 00:07:37.497
But that's interesting because
that's different from iOS and

110
00:07:37.497 --> 00:07:40.400
also that's different from desktop.

111
00:07:40.400 --> 00:07:46.840
On desktop you can still be there forever
executing code with your timer throttle.

112
00:07:46.840 --> 00:07:50.512
On Android it's five minutes,
Chrome on Android,

113
00:07:50.512 --> 00:07:54.193
different browsers will work differently,
okay?

114
00:07:54.193 --> 00:07:58.672
And on a PWA it's actually the same
thing because even if it's coming from

115
00:07:58.672 --> 00:08:02.450
the store,
because it's using the same chrome engine.

116
00:08:02.450 --> 00:08:05.750
So this is an installed PWA,
it's just the same thing.

117
00:08:05.750 --> 00:08:11.700
So on Android, it's not visible, if it's
in the lock screen, in the home screen.

118
00:08:11.700 --> 00:08:16.174
If you're going to the multitask way
of seeing all of your open apps.

119
00:08:16.174 --> 00:08:20.308
If you open another tab or another app,
in those cases, your web app,

120
00:08:20.308 --> 00:08:23.760
your JavaScript code will go
to the background, okay?.

121
00:08:25.320 --> 00:08:29.660
In this case, page navigations
as on iOS can be memory or not,

122
00:08:29.660 --> 00:08:32.420
the UI is just a screenshot as with iOS.

123
00:08:32.420 --> 00:08:36.550
And on Chrome, you have up to 5 minutes
of execution in the background and

124
00:08:36.550 --> 00:08:39.090
the service worker is roughly 30 seconds.

125
00:08:40.590 --> 00:08:44.671
If there is the service
worker is doing nothing, and

126
00:08:44.671 --> 00:08:47.929
there are no more HTTP network requests.

127
00:08:47.929 --> 00:08:48.987
The service worker or

128
00:08:48.987 --> 00:08:54.000
the browser will say okay service worker
get out I don't need you anymore for now.

129
00:08:54.000 --> 00:08:56.800
Firefox in this case the page
stopped immediately.

130
00:08:58.390 --> 00:09:02.060
Okay, and the worker thread has
around three minutes after that.

131
00:09:05.031 --> 00:09:07.490
Different algorithms, okay?

132
00:09:07.490 --> 00:09:09.762
So one of the things that we have here,

133
00:09:09.762 --> 00:09:13.630
one of the problems that we
have is that it's a mess, okay?

134
00:09:13.630 --> 00:09:18.491
So this is the results of this
research that I've been doing

135
00:09:18.491 --> 00:09:21.900
here about what's going on.

136
00:09:21.900 --> 00:09:25.176
I mean, it's not important to
go now over the diagram or

137
00:09:25.176 --> 00:09:27.830
to each value doesn't matter.

138
00:09:27.830 --> 00:09:34.450
The thing is that this kind of change
anytime, new versions of every browser or

139
00:09:34.450 --> 00:09:39.860
new versions of the OS can
change how everything works.

140
00:09:39.860 --> 00:09:44.558
So we need to plan for this, okay?

141
00:09:44.558 --> 00:09:49.619
So we need to plan for
our app working in different situations

