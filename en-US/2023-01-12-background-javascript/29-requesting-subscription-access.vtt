WEBVTT

1
00:00:00.170 --> 00:00:04.098
So right now we are subscribing users,
and it's working.

2
00:00:04.098 --> 00:00:09.326
But before actually see if this works,
let's discuss for

3
00:00:09.326 --> 00:00:16.490
a second if it's necessary to request
subscription details on every payload.

4
00:00:17.980 --> 00:00:24.020
So the spec says that the subscription
details might change, why?

5
00:00:25.180 --> 00:00:29.100
Maybe the push server is
changing implementation.

6
00:00:29.100 --> 00:00:32.710
Maybe the user is upgrading
the OS to a new version, or

7
00:00:32.710 --> 00:00:35.930
the user is recovering
a backup in a new device.

8
00:00:36.970 --> 00:00:41.473
So there are many situations where
it seems like it's the same user and

9
00:00:41.473 --> 00:00:45.660
the same browser, but
the details have changed.

10
00:00:45.660 --> 00:00:51.296
So it's actually a good practice
to always request subscription

11
00:00:51.296 --> 00:00:56.320
even if you already have it and
update that in your server.

12
00:00:57.950 --> 00:01:02.320
Okay, but you're thinking, well,
what happens with abandoned

13
00:01:02.320 --> 00:01:06.623
details like yeah that user is not
using the old details anymore.

14
00:01:06.623 --> 00:01:09.655
Well, when you're sending a message, so

15
00:01:09.655 --> 00:01:14.635
when we are in this scenario,
at the end when we are sending a message.

16
00:01:14.635 --> 00:01:20.350
The push server also give us
an HTTP status code in return.

17
00:01:21.450 --> 00:01:24.302
And one of the codes
actually in the payload,

18
00:01:24.302 --> 00:01:27.810
it comes in the payload
not in the status code.

19
00:01:27.810 --> 00:01:31.838
It can tell us that the details,
the subscription is expired,

20
00:01:31.838 --> 00:01:34.880
which means that user
doesn't exist anymore.

21
00:01:36.050 --> 00:01:40.204
So in that case,
you can delete that from your database.

22
00:01:40.204 --> 00:01:43.225
That also happens if the user
is revoking permission.

23
00:01:44.275 --> 00:01:48.047
Yeah, you have the details but
the user went to settings and

24
00:01:48.047 --> 00:01:51.345
revoked notification permission for you.

25
00:01:51.345 --> 00:01:56.239
So then next time you send a message to
that user, you will receive a message back

26
00:01:56.239 --> 00:01:59.840
saying, hey, no, sorry,
that user is not bad anymore.

27
00:02:01.420 --> 00:02:05.942
Okay, so now back to our code,
what we need to do is to receive

28
00:02:05.942 --> 00:02:10.046
the push from the server and
create the notification.

29
00:02:10.046 --> 00:02:13.330
That's actually a push event listener that

30
00:02:13.330 --> 00:02:18.220
we have already created that
is kind of empty right now.

31
00:02:18.220 --> 00:02:20.410
And here we show a notification.

32
00:02:21.460 --> 00:02:24.960
We call self registration,
show notification.

33
00:02:24.960 --> 00:02:31.110
It needs a title, a mandatory body,
and a mandatory icon as well.

34
00:02:31.110 --> 00:02:32.200
We need to set an icon.

35
00:02:33.620 --> 00:02:36.511
There are many other properties that
I will show you in a minute, but

36
00:02:36.511 --> 00:02:38.480
those are the basic ones.

37
00:02:38.480 --> 00:02:45.620
That will render a notification on
the screen, as simple as that, okay?

38
00:02:45.620 --> 00:02:49.310
So what about the body?

39
00:02:49.310 --> 00:02:58.060
As you can see here, I might take
the body that is sent by the server.

40
00:02:58.060 --> 00:03:00.807
So the server,
when the server sends a message,

41
00:03:00.807 --> 00:03:04.500
the message can include the payload,
it's actually optional.

42
00:03:05.600 --> 00:03:10.285
So I can just send the message without
payload that will trigger the process,

43
00:03:10.285 --> 00:03:12.460
it will wake up the service worker.

44
00:03:13.500 --> 00:03:17.070
And the server worker can notify
wherever it says like once.

45
00:03:17.070 --> 00:03:20.280
Maybe a service worker can go
to the server download news.

46
00:03:20.280 --> 00:03:22.971
And with that, generate a notification.

47
00:03:22.971 --> 00:03:25.317
You don't need to use the payload.

48
00:03:25.317 --> 00:03:30.770
The payload, how much payload can you
send safely between all the browsers?

49
00:03:30.770 --> 00:03:33.866
2K of data.

50
00:03:33.866 --> 00:03:38.350
So you can send the JSON binary
data if you want, or a JSON.

51
00:03:38.350 --> 00:03:43.863
The JSON, the data that you receive
can be used to update an index DV or

52
00:03:43.863 --> 00:03:48.190
to generate the message
that the user will see.

53
00:03:48.190 --> 00:03:55.720
So you can parse event.data as text as
JSON as a rebuffer, whatever you want.

54
00:03:55.720 --> 00:03:58.950
You can use that within the body or not.

55
00:04:01.290 --> 00:04:07.786
Okay, so you're not forced to use the data
that the server sent to notify the user.

56
00:04:07.786 --> 00:04:09.510
It's up to you, okay?

57
00:04:10.790 --> 00:04:14.086
So let's go back then
to our service worker,

58
00:04:14.086 --> 00:04:18.266
I think that at the top we
already have an EventListener.

59
00:04:18.266 --> 00:04:22.440
So what we need to do is
talk to our registration.

60
00:04:22.440 --> 00:04:27.380
And from here,
we are going to show a notification.

61
00:04:27.380 --> 00:04:30.620
So if you remember we have already
seen before the other API.

62
00:04:30.620 --> 00:04:35.926
The other API was actually pretty similar,
but we were creating a new notification.

63
00:04:35.926 --> 00:04:39.480
It's actually pretty simple and
pretty similar.

64
00:04:39.480 --> 00:04:44.410
It has a title like Frontend Masters,
and then options.

65
00:04:44.410 --> 00:04:49.704
So actually, this is the same or
a similar signature,

66
00:04:51.978 --> 00:04:58.046
But a different way to access
that notification factory.

67
00:04:58.046 --> 00:05:03.258
So here it showNotification and
the other one was new notification, okay?

68
00:05:03.258 --> 00:05:09.659
So mandatory body,
again we can take the data as text or

69
00:05:09.659 --> 00:05:16.350
as JSON, and
then parse the data that we're receiving.

70
00:05:17.510 --> 00:05:18.120
It's up to you.

71
00:05:19.130 --> 00:05:22.653
Or as text or no, or you can just do here,

72
00:05:28.495 --> 00:05:31.790
Any text, can be fixed,
can be wherever you want.

73
00:05:31.790 --> 00:05:35.410
You can go and check and
create a message from index DV.

74
00:05:35.410 --> 00:05:39.650
So body is mandatory and also icon.

75
00:05:40.660 --> 00:05:45.757
So for the icon,
I will use, I have here in

76
00:05:45.757 --> 00:05:51.021
the public folder &gt; Images &gt; icon.png.

77
00:05:54.395 --> 00:05:57.122
And kind of dots.

78
00:05:57.122 --> 00:05:59.280
How can we test this?

79
00:05:59.280 --> 00:06:03.580
Before checking if the server is sending
the message, how can we test this?

80
00:06:03.580 --> 00:06:08.709
We can use the tester in Google Chrome,
okay?

81
00:06:08.709 --> 00:06:10.940
So that's the simplest way to test this.

82
00:06:10.940 --> 00:06:16.720
So we can go back here,
go to the application tab.

83
00:06:16.720 --> 00:06:20.980
Within service workers,
we have a section for push.

84
00:06:20.980 --> 00:06:23.834
If I send in a message, push,

85
00:06:23.834 --> 00:06:29.087
I didn't get it because we
need to make sure that we have

86
00:06:29.087 --> 00:06:34.240
a new version of the service worker,
remember that.

87
00:06:34.240 --> 00:06:39.990
Check update on reload and reload because
we are changing the service worker, okay?

88
00:06:39.990 --> 00:06:43.680
How do you know which version of
the service worker is currently running?

89
00:06:43.680 --> 00:06:45.212
Because the file is this one, but

90
00:06:45.212 --> 00:06:48.100
you don't know exactly
which version do you have?

91
00:06:48.100 --> 00:06:52.744
You can find them in sources
under this little icon that's

92
00:06:52.744 --> 00:06:57.303
service worker and
here you can see the current version.

93
00:06:57.303 --> 00:07:02.670
So you can see that this should
show a notification, right?

94
00:07:02.670 --> 00:07:05.982
So from here or

95
00:07:05.982 --> 00:07:11.779
from the server, okay?

96
00:07:11.779 --> 00:07:14.450
So what about the server?

97
00:07:14.450 --> 00:07:19.300
Again, we are not covering
the back-end part here, but

98
00:07:19.300 --> 00:07:22.642
what I did is that broadcast.js file.

99
00:07:22.642 --> 00:07:29.584
This broadcast,js file is using
that web-push library, okay?

100
00:07:29.584 --> 00:07:34.851
It's using the private key and public key,
and it's creating the message, okay?

101
00:07:34.851 --> 00:07:36.320
And actually this is the code.

102
00:07:36.320 --> 00:07:39.078
It's not really complicated, okay?

103
00:07:39.078 --> 00:07:43.960
But actually it's right now
it's taking our database.

104
00:07:43.960 --> 00:07:47.780
And for each user,
it's creating a new message.

105
00:07:47.780 --> 00:07:55.230
You need to create one HTTP request
per user, per endpoint, okay?

106
00:07:55.230 --> 00:07:58.190
And for each one,
you're going to use your keys.

107
00:07:59.360 --> 00:08:03.640
Why, because also you use
that to encrypt that message.

108
00:08:03.640 --> 00:08:10.240
So you encrypt the payload with users
public key and your private key.

109
00:08:11.920 --> 00:08:17.610
Okay, so it's a complex scenario
to avoid security issues.

110
00:08:18.660 --> 00:08:22.690
So to use this, you can open a terminal.

111
00:08:24.680 --> 00:08:28.200
And from the terminal, using node.js.

112
00:08:29.370 --> 00:08:34.430
You use node space, okay, broadcast.

113
00:08:34.430 --> 00:08:40.370
If you just use the tool as this,
it will create a message.

114
00:08:40.370 --> 00:08:43.114
This is a test push
message from the server.

115
00:08:43.114 --> 00:08:48.287
But if not,
you can add a message after that.

116
00:08:48.287 --> 00:08:54.379
I don't know,
hello Frontend Masters, okay?

117
00:08:54.379 --> 00:08:59.455
So this is going to loop
through all the browsers and

118
00:08:59.455 --> 00:09:03.370
it's going to send the message.

119
00:09:03.370 --> 00:09:08.138
The problem that I do have right now,
so if I look here,

120
00:09:08.138 --> 00:09:11.550
I do have some messages, okay?

121
00:09:11.550 --> 00:09:16.237
So I have one, by the way, for
some reason, well not a reason,

122
00:09:16.237 --> 00:09:21.310
because it's Safari,
Safari is not using the icon for now.

123
00:09:21.310 --> 00:09:25.954
So you can see only the name of
the website, the domain, the origin and

124
00:09:25.954 --> 00:09:27.700
hello Frontend Masters.

125
00:09:27.700 --> 00:09:30.500
So Chrome is using the icon, okay?

126
00:09:30.500 --> 00:09:35.870
So it's better but Firefox I'm not
seeing Firefox and why is that?

127
00:09:35.870 --> 00:09:40.740
Because I think I didn't refresh
the service worker on Firefox.

128
00:09:40.740 --> 00:09:44.740
So Firefox because I
didn't even check Firefox.

129
00:09:44.740 --> 00:09:51.527
Firefox has my old service worker that
wasn't actually showing any notification.

130
00:09:51.527 --> 00:09:55.553
Okay, so I need to make sure
that they all have the last

131
00:09:55.553 --> 00:09:58.770
version of the service worker, okay?

132
00:09:58.770 --> 00:10:01.560
So now let's clear this out.

133
00:10:01.560 --> 00:10:04.050
Let's go to Firefox, for example.

134
00:10:04.050 --> 00:10:04.840
Load this again.

135
00:10:04.840 --> 00:10:07.083
Also if I open the inspector,

136
00:10:07.083 --> 00:10:13.110
Firefox has a very simple tool with an
application to check the service worker.

137
00:10:14.300 --> 00:10:16.950
So I can unregister my server by both.

138
00:10:16.950 --> 00:10:19.342
So I unregister the service worker,
I reload.

139
00:10:19.342 --> 00:10:23.300
So I know for
sure it has the latest one, okay?

140
00:10:23.300 --> 00:10:28.520
So if I try again, so node broadcast

141
00:10:28.520 --> 00:10:38.000
"Web Push Rocks!" That's giving me that.

142
00:10:38.000 --> 00:10:40.632
But I think the problem is
that it's escaping the,

143
00:10:44.732 --> 00:10:49.911
Yeah, it was escaping
the exclamation mark.

144
00:10:49.911 --> 00:10:55.090
Okay, so, I'm still not getting Firefox.

145
00:10:55.090 --> 00:11:02.740
So you can see also here it says,
the best place to learn front end.

146
00:11:02.740 --> 00:11:06.260
I think that Chrome also has the old
version of the service worker.

147
00:11:07.800 --> 00:11:12.749
So it's not taking the body
it was a fixed string.

