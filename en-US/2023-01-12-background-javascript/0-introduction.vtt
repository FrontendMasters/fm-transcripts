WEBVTT

1
00:00:00.130 --> 00:00:03.020
My name is Maximiliano, I can go by Max.

2
00:00:03.020 --> 00:00:06.085
I'm a Frontend tutor,
firt.dev, my website.

3
00:00:06.085 --> 00:00:09.930
This is going to read
JavaScript in the background.

4
00:00:09.930 --> 00:00:13.900
So really quickly, so
I'm a mobile Web developer.

5
00:00:13.900 --> 00:00:15.070
I'm from Argentina.

6
00:00:15.070 --> 00:00:17.390
I came from Buenos Aires, actually.

7
00:00:17.390 --> 00:00:23.384
And I've been doing JavaScript and
PWA since forever,

8
00:00:23.384 --> 00:00:29.134
HTML since 1996 and
JavaScript just after that.

9
00:00:29.134 --> 00:00:34.360
I authored 13 books and I published
a lot of Web apps where I actually

10
00:00:34.360 --> 00:00:40.110
did some of the tricks,
things that we will be covering today.

11
00:00:40.110 --> 00:00:44.445
So, recently I published to learn/pwa.

12
00:00:44.445 --> 00:00:48.648
It's a free kind of an ebook
on progressive Web apps

13
00:00:48.648 --> 00:00:53.030
available on web.dev website from Chrome.

14
00:00:53.030 --> 00:00:56.910
And I've done around 20
workshops on Web Push.

15
00:00:56.910 --> 00:01:00.460
That is one of the topics that
we will be covering today.

16
00:01:00.460 --> 00:01:03.860
I've been covering this
background thing for a while.

17
00:01:04.930 --> 00:01:12.894
In fact, this is an article I published
nine years ago called Zombie Tab.

18
00:01:12.894 --> 00:01:18.520
It was actually a trick that I found to
actually wake up a background tab for

19
00:01:18.520 --> 00:01:21.510
iPads and iPhones, long time ago.

20
00:01:21.510 --> 00:01:23.700
That trick doesn't exist anymore.

21
00:01:23.700 --> 00:01:24.535
But anyway, so

22
00:01:24.535 --> 00:01:29.050
I've been following the idea of running
JavaScript in the background for a while.

23
00:01:30.240 --> 00:01:34.330
So we're going to be covering
the Web app lifecycle.

24
00:01:34.330 --> 00:01:37.280
So what's actually the background?

25
00:01:37.280 --> 00:01:39.180
So what is the background?

26
00:01:39.180 --> 00:01:43.860
So we're going to see about the life
while it's in the background.

27
00:01:43.860 --> 00:01:45.870
So how does it look like?

28
00:01:45.870 --> 00:01:48.360
How to detect that we
are in the background.

29
00:01:48.360 --> 00:01:49.980
What about notifications?

30
00:01:49.980 --> 00:01:55.200
And then we're going to code and
see in action a couple of APIs.

31
00:01:55.200 --> 00:01:56.920
That's the Page Visibility API.

32
00:01:58.010 --> 00:01:59.490
A little bit about service workers.

33
00:02:00.620 --> 00:02:04.504
Not exactly about the service
worker itself, but

34
00:02:04.504 --> 00:02:08.390
how does it work with the background,
right?

35
00:02:08.390 --> 00:02:11.170
Then execution in the background so
different

36
00:02:11.170 --> 00:02:15.813
ways in API's that we have to actually
execute code while in the background.

37
00:02:15.813 --> 00:02:20.030
And also to wake up code
while in the background.

38
00:02:20.030 --> 00:02:25.490
And then we will end up seeing some
samples on Web push notifications.

39
00:02:25.490 --> 00:02:28.970
So, that's actually our outline for today.

40
00:02:28.970 --> 00:02:31.172
So, there is a URL there,

41
00:02:31.172 --> 00:02:36.890
there is a repository with the code
that we will be following today.

42
00:02:36.890 --> 00:02:41.341
Also, you have the slides there,
github.com/firtman,

43
00:02:41.341 --> 00:02:44.492
my last name, javascript-background.

44
00:02:44.492 --> 00:02:49.430
And in terms of pre-requisites,
I just need you to understand JavaScript.

45
00:02:49.430 --> 00:02:52.242
So that's actually the only requisite.

46
00:02:52.242 --> 00:02:55.548
If you have experience with service
workers, it will be better.

47
00:02:55.548 --> 00:02:59.016
But if you have never played with it,
no worries.

48
00:02:59.016 --> 00:03:02.160
We will be seeing the staff there.

49
00:03:02.160 --> 00:03:08.376
And also we are going to be using
probably something around ES 2017.

50
00:03:08.376 --> 00:03:14.060
So actually promises, async,
await, that kind of stuff.

51
00:03:14.060 --> 00:03:17.466
We are not going to use any framework or
any library.

52
00:03:17.466 --> 00:03:19.890
So we are just going to
use just plain JavaScript.

53
00:03:19.890 --> 00:03:25.163
So you can actually apply what we're
going to learn today in any brush.

54
00:03:25.163 --> 00:03:27.960
Okay, this is React,
Vie, Angular, wherever.

