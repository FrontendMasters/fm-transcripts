WEBVTT

1
00:00:00.050 --> 00:00:06.252
So our service worker for now is ready,
ready for adding more code later, okay?

2
00:00:06.252 --> 00:00:12.990
So far, I'm done with this, so
I don't need the debugger line, okay?

3
00:00:12.990 --> 00:00:16.878
So we will have more event listeners,
one per API.

4
00:00:19.145 --> 00:00:20.877
Make sense?

5
00:00:20.877 --> 00:00:24.889
Okay, so now going back to the slides,

6
00:00:24.889 --> 00:00:32.317
it's time to talk a little bit about
user interface and notifications.

7
00:00:32.317 --> 00:00:35.689
So we are in the background, so

8
00:00:35.689 --> 00:00:41.416
updating the user interface,
okay, if possible.

9
00:00:41.416 --> 00:00:42.302
Why if possible?

10
00:00:42.302 --> 00:00:47.150
Because maybe the client, the website
is still there, maybe it's not.

11
00:00:47.150 --> 00:00:51.060
But let's say it's there,
updating the DOM won't notice the user.

12
00:00:51.060 --> 00:00:56.143
The user is not seeing my app,
that's why we're in the background.

13
00:00:56.143 --> 00:01:01.625
So what if we wanna notify the user
that something is happening?

14
00:01:01.625 --> 00:01:04.532
Well, a little bit of history here.

15
00:01:04.532 --> 00:01:11.652
So we could only notify the user for
background tabs before changing the title.

16
00:01:11.652 --> 00:01:17.379
In fact, there are still some websites
doing this, like eCommerce websites or

17
00:01:17.379 --> 00:01:22.090
things like Expedia or
wherever you were searching for a flight.

18
00:01:22.090 --> 00:01:26.592
Then you change tabs and you see
the title change, hey, hey, hey, hey,

19
00:01:26.592 --> 00:01:28.346
don't forget your flight.

20
00:01:28.346 --> 00:01:29.764
Your flight is here, okay?

21
00:01:29.764 --> 00:01:31.363
The offer is ending.

22
00:01:31.363 --> 00:01:37.531
So you change the title element,
document.title using JavaScript, okay?

23
00:01:37.531 --> 00:01:40.220
That's an old trick,
which is still working.

24
00:01:40.220 --> 00:01:44.033
Another trick was
the changing the favicon.

25
00:01:44.033 --> 00:01:47.498
I will show you one example in a minute.

26
00:01:47.498 --> 00:01:50.044
We can still do that.

27
00:01:50.044 --> 00:01:53.225
Yeah, it's there, okay?

28
00:01:53.225 --> 00:01:57.345
That's maybe a little evil,
little, little, okay?

29
00:01:57.345 --> 00:02:01.945
But anyway, [COUGH] you can do that if
the user is still seeing the browser.

30
00:02:01.945 --> 00:02:07.069
You don't know if the user is watching or
seeing the browser on the screen anyway.

31
00:02:07.069 --> 00:02:07.949
Playing audio.

32
00:02:10.332 --> 00:02:15.501
Yeah, and I'm not saying do that,
but it's there.

33
00:02:15.501 --> 00:02:17.016
Force a refocus.

34
00:02:17.016 --> 00:02:21.760
Fortunately for us, that's not
working in most browsers these days.

35
00:02:21.760 --> 00:02:27.622
But that was a way to do
things a few years ago.

36
00:02:27.622 --> 00:02:32.689
For example, even making an alert
will actually refocus the tab that is

37
00:02:32.689 --> 00:02:38.269
making the alert in the background,
which was actually really, really bad.

38
00:02:38.269 --> 00:02:42.979
Anyway, so even we had tricks to not

39
00:02:42.979 --> 00:02:47.540
letting the user unload the page.

40
00:02:48.940 --> 00:02:53.630
The old trick that when you try to
close the page, the page says, no,

41
00:02:53.630 --> 00:02:57.273
are you sure you wanna close the page,
things like that.

42
00:02:57.273 --> 00:02:59.114
Fortunately, that's history.

43
00:02:59.114 --> 00:03:03.997
So let's say that the favicon and
the title is still there, but

44
00:03:03.997 --> 00:03:07.883
yeah, maybe it's not
the best of the solutions.

45
00:03:07.883 --> 00:03:12.621
So let me show you one thing
in action with this website

46
00:03:12.621 --> 00:03:15.795
that you can try if you want as well.

47
00:03:15.795 --> 00:03:22.330
So this website is showing you
an example of the animating favicon.

48
00:03:22.330 --> 00:03:25.979
So you need to look at
the favicon there on my tab.

49
00:03:25.979 --> 00:03:28.825
If I load this, can you see that?

50
00:03:33.472 --> 00:03:36.004
Of course, you can do any animation.

51
00:03:36.004 --> 00:03:38.208
You can do a canvas.

52
00:03:38.208 --> 00:03:41.997
In fact,
there are some games in the favicon.

53
00:03:41.997 --> 00:03:45.594
There is a pong game in the favicon, okay?

54
00:03:45.594 --> 00:03:48.155
Anyway, but I wanna show you something.

55
00:03:48.155 --> 00:03:51.703
Let's see if you can
catch what's going on.

56
00:03:51.703 --> 00:03:53.550
I will hit Load, so it will start.

57
00:03:53.550 --> 00:03:57.703
And of course, you can start this
process with page visibility,

58
00:03:57.703 --> 00:03:59.674
on visibility change, okay?

59
00:03:59.674 --> 00:04:02.803
So look at this, it's loading.

60
00:04:02.803 --> 00:04:04.359
But look now, what's going on?

61
00:04:06.641 --> 00:04:07.740
Is it stopped?

62
00:04:10.825 --> 00:04:12.250
What do you think?

63
00:04:12.250 --> 00:04:15.199
I know it's really small.

64
00:04:15.199 --> 00:04:17.595
&gt;&gt; It's going in the background,
so the set time or

65
00:04:17.595 --> 00:04:19.530
the set interval has been slowed down.

66
00:04:19.530 --> 00:04:24.495
&gt;&gt; Exactly, so the timer throttle now,
so now it's slower.

67
00:04:24.495 --> 00:04:27.860
So you can see in action the timer issue.

68
00:04:30.120 --> 00:04:35.610
And if I go back to that tab, you can see
it speed up, and now it's slow again.

69
00:04:35.610 --> 00:04:38.486
So here we can see in action, okay?

70
00:04:38.486 --> 00:04:43.734
The timer's issue,
how the timer is being throttled, okay?

71
00:04:43.734 --> 00:04:48.049
Anyway, this is just for
having some fun really quickly.

72
00:04:48.049 --> 00:04:51.990
That's not how we are going
to notify things to the user.

73
00:04:51.990 --> 00:04:56.550
So today, the only cross-platform
solution is web notifications.

74
00:04:57.850 --> 00:04:59.099
Is this push?

75
00:04:59.099 --> 00:05:02.158
Not really.

76
00:05:02.158 --> 00:05:06.687
A web notification,
it's actually a notification that

77
00:05:06.687 --> 00:05:11.120
appears in the operating system
in the same place as push

78
00:05:11.120 --> 00:05:15.481
notifications from native apps,
but they are local.

79
00:05:15.481 --> 00:05:19.059
In fact, let me tell you this.

80
00:05:19.059 --> 00:05:23.118
In the web, or from the web, at least,

81
00:05:23.118 --> 00:05:28.047
we don't have really
web push notifications.

82
00:05:28.047 --> 00:05:34.465
We have web push and
we have local notifications.

83
00:05:34.465 --> 00:05:37.440
Web push,
we accept the service worker, and

84
00:05:37.440 --> 00:05:42.937
the service worker creates a notification,
but we don't have a direct line here.

85
00:05:42.937 --> 00:05:47.511
It's not like the server creates
a notification that you will see

86
00:05:47.511 --> 00:05:48.432
on the page.

87
00:05:48.432 --> 00:05:50.549
That's how the web works.

88
00:05:50.549 --> 00:05:55.494
So we have actually two different APIs,
the web notification

89
00:05:55.494 --> 00:06:00.535
API that was known as the desktop
notification API initially,

90
00:06:00.535 --> 00:06:03.691
and the push API, two different APIs.

91
00:06:03.691 --> 00:06:08.135
In fact, now in Safari,
that now is they are supported,

92
00:06:08.135 --> 00:06:13.320
when you go to Experimental Features,
we have the Push API there,

93
00:06:13.320 --> 00:06:18.338
that's enabled by default, and
you also have notifications.

94
00:06:18.338 --> 00:06:24.369
I think it says enabled, well,
somewhere it's notifications.

95
00:06:24.369 --> 00:06:27.119
It's a different API, okay?

96
00:06:30.132 --> 00:06:35.706
The only problem with this API with
notification is that it requires

97
00:06:35.706 --> 00:06:40.903
user's permission, and
it's the same permission for push.

98
00:06:40.903 --> 00:06:42.869
So this is a mess.

99
00:06:42.869 --> 00:06:45.868
So that's how it works.

100
00:06:45.868 --> 00:06:49.335
So you don't have a permission for
local notification and

101
00:06:49.335 --> 00:06:51.181
another permission for push.

102
00:06:51.181 --> 00:06:55.058
It's just notifications.

103
00:06:55.058 --> 00:06:57.720
If the user is granting you permission,

104
00:06:57.720 --> 00:07:03.141
then you can create local notifications
and or send push messages to your web app.

105
00:07:03.141 --> 00:07:10.072
We don't have two permissions, and
a lot of users hate push notifications.

106
00:07:10.072 --> 00:07:13.034
So they will say no, okay?

107
00:07:13.034 --> 00:07:14.585
So that's a problem,

108
00:07:14.585 --> 00:07:19.417
I think that we have a problem as
a web platform community here, okay?

109
00:07:19.417 --> 00:07:22.373
So this is not well specced, I think.

110
00:07:22.373 --> 00:07:26.149
In fact, there are two APIs to
create a notification right now.

111
00:07:26.149 --> 00:07:31.029
And if you try to google them or
even to read about them in MDN or

112
00:07:31.029 --> 00:07:36.596
the W3C, it's not completely clear
which one you should be using.

113
00:07:36.596 --> 00:07:42.031
We have the classic Desktop
Notification API that is only available

114
00:07:42.031 --> 00:07:47.668
in the window lower scope and
in web workers, not in service workers.

115
00:07:47.668 --> 00:07:53.500
So we cannot use them from a service
worker, that's the old one, okay?

116
00:07:53.500 --> 00:07:55.250
But it's still there.

117
00:07:55.250 --> 00:08:00.746
And then we have Web Push, but
I mentioned, hey, Web Push is not for

118
00:08:00.746 --> 00:08:06.051
the notification, yeah, but
the Web Push spec came with another

119
00:08:06.051 --> 00:08:10.887
API that replaces the previous one for
notifying the user.

120
00:08:10.887 --> 00:08:14.745
And this one is available from
the service worker's scope.

121
00:08:14.745 --> 00:08:18.610
So it's kind of messy, okay?

122
00:08:18.610 --> 00:08:23.347
In fact, which one you should be using,
because we here,

123
00:08:23.347 --> 00:08:29.455
we are going to probably, we want to
render messages from the background.

124
00:08:29.455 --> 00:08:32.354
Probably, we want the one
from service workers.

125
00:08:32.354 --> 00:08:37.949
In fact, only on Android, only on Android,
I don't know why only on Android,

126
00:08:37.949 --> 00:08:42.474
so the desktop notification API,
it's marked as deprecated.

127
00:08:42.474 --> 00:08:47.929
So if you try to use this one on Chrome
on Android, you will see a message

128
00:08:47.929 --> 00:08:53.678
in the console saying that the API
is deprecated, not on desktop, okay?

129
00:08:53.678 --> 00:09:01.142
Anyway, the first step to use this
API is to ask for permission.

130
00:09:01.142 --> 00:09:06.520
The API is actually pretty simple because
it's an old API, because it's coming

131
00:09:06.520 --> 00:09:12.069
from a couple of years ago, it's not like
promise base, it's like a classic API.

132
00:09:12.069 --> 00:09:17.100
It's a directly
Notification.requestPermission.

133
00:09:17.100 --> 00:09:22.878
Fortunately, today,
we have a version that is promise base.

134
00:09:22.878 --> 00:09:28.260
So the original one was not
actually giving me anything

135
00:09:28.260 --> 00:09:32.710
in return, but
now it returns you a promise.

136
00:09:32.710 --> 00:09:37.471
And it can be granted, denied, or default.

137
00:09:37.471 --> 00:09:41.291
Default means that the user
has closed the dialog.

138
00:09:41.291 --> 00:09:46.558
So the user didn't pick any option,
that means you cannot

139
00:09:46.558 --> 00:09:51.195
send notifications, but
you can ask again later.

140
00:09:51.195 --> 00:09:57.146
If you get denied, you won't be able to
ask the user again for notifications.

141
00:09:57.146 --> 00:10:01.479
So if the user denies you permission,
next time you ask for permission,

142
00:10:01.479 --> 00:10:03.335
it's denied automatically.

143
00:10:03.335 --> 00:10:09.887
And typically in that case, the option
is to offer the user instructions,

144
00:10:09.887 --> 00:10:16.443
hey, you need to go to there, to
the menu and enable this manually, okay?

145
00:10:16.443 --> 00:10:21.970
And if it's granted, well, then you can
start notifying the user from the main

146
00:10:21.970 --> 00:10:27.415
window, from a web worker, or from
a service worker, because the permission

147
00:10:27.415 --> 00:10:32.306
is the same no matter the API that you
will use later to notify the user.

148
00:10:32.306 --> 00:10:35.538
So the confusion is even worse.

149
00:10:35.538 --> 00:10:37.654
This is the permission also for push.

150
00:10:37.654 --> 00:10:43.170
It's the same permission for
old classic desktop notification,

151
00:10:43.170 --> 00:10:49.484
for the new push-based notification,
and also for subscribing to a push.

152
00:10:49.484 --> 00:10:56.100
Same permission,
it's called notification, okay?

153
00:10:56.100 --> 00:10:59.988
After you have permission, then you
can create a notification like this.

154
00:10:59.988 --> 00:11:06.458
It's also weird because you don't send
that object that you create to a manager,

155
00:11:06.458 --> 00:11:10.232
you just create a notification,
that's all.

156
00:11:10.232 --> 00:11:17.244
Automatically, that object will
talk to the OS, somehow, okay?

157
00:11:17.244 --> 00:11:20.106
We won't use this API,
this is the classic one.

158
00:11:20.106 --> 00:11:23.588
So that's why I'm giving you the code, but

159
00:11:23.588 --> 00:11:27.269
we will use the other one,
the new one, okay?

160
00:11:27.269 --> 00:11:29.140
Make sense?
Any question?

161
00:11:32.985 --> 00:11:38.763
With this API, you can notify the user
in the background only from workers or

162
00:11:38.763 --> 00:11:41.570
from a background tab.

163
00:11:41.570 --> 00:11:47.279
So your app must be up and
running, maybe throttled, hidden,

164
00:11:47.279 --> 00:11:52.790
but it's still running,
not from a service worker, okay?

165
00:11:52.790 --> 00:11:55.678
So it's a local notification.

166
00:11:55.678 --> 00:12:00.245
It's only available on Windows and
Worker, what I said a second ago, and

167
00:12:00.245 --> 00:12:03.425
we can update the same
notification in the future.

168
00:12:03.425 --> 00:12:08.390
So if the notification is still there,
we can actually update the text

169
00:12:08.390 --> 00:12:12.110
with something new,
instead of creating a new one.

170
00:12:12.110 --> 00:12:16.952
So there are some ideas to actually
improve the user experience.

171
00:12:16.952 --> 00:12:21.532
And there are some events that
you can listen with add event

172
00:12:21.532 --> 00:12:24.722
listener like show, click, or error.

173
00:12:24.722 --> 00:12:29.910
As I mentioned before, this is deprecated
on Android, so it's marked as deprecated.

