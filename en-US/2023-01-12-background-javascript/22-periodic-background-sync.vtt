WEBVTT

1
00:00:00.000 --> 00:00:05.667
What's next after background sync
that it's actually pretty simple.

2
00:00:05.667 --> 00:00:13.579
The next one sounds good at least by
name it's periodic background sync.

3
00:00:13.579 --> 00:00:20.087
This one is a little bit more complex not
in the API, but in how we set up this.

4
00:00:20.087 --> 00:00:24.587
In fact, 5% of the websites
are using background sync and

5
00:00:24.587 --> 00:00:29.634
periodic background sync,
it's 002 or something like that.

6
00:00:29.634 --> 00:00:35.156
So it's still an API that a lot
of developers are not using yet.

7
00:00:35.156 --> 00:00:39.463
In this case, the PWA will ask the user or

8
00:00:39.463 --> 00:00:45.038
the browser for
permission to periodically execute

9
00:00:45.038 --> 00:00:50.103
go in the background,
every hour, every day,

10
00:00:50.103 --> 00:00:54.550
every week, that's the theory, okay?

11
00:00:54.550 --> 00:00:58.248
So our code is asking the browser,
hey, browser,

12
00:00:58.248 --> 00:01:01.688
I wanna execute code every day,
can we do that?

13
00:01:01.688 --> 00:01:06.535
The spec doesn't say anything about
how the browser should respond in

14
00:01:06.535 --> 00:01:09.326
terms of if it should ask the user or not,

15
00:01:09.326 --> 00:01:14.277
today this is Chrome only right now,
and Chrome is not asking the user.

16
00:01:17.003 --> 00:01:19.506
I will explain how that works in a minute.

17
00:01:19.506 --> 00:01:24.502
And then a periodic sync event will
be firing the Service Worker similar

18
00:01:24.502 --> 00:01:26.592
to the one that we saw before.

19
00:01:26.592 --> 00:01:31.550
So every day, if it's granted,
the browser will wake you up

20
00:01:31.550 --> 00:01:36.619
your Service Worker, and
he will fire you that event, okay?

21
00:01:36.619 --> 00:01:40.339
It's your turn, the wherever you need.

22
00:01:40.339 --> 00:01:43.726
The user is not using your app,
it doesn't matter the next day,

23
00:01:43.726 --> 00:01:45.125
it will wake you up again.

24
00:01:45.125 --> 00:01:49.548
Okay, your time, that's how it works.

25
00:01:49.548 --> 00:01:55.186
So you need to set up the synchronization
time interval, and also the browser will

26
00:01:55.186 --> 00:02:00.919
say, okay, I will wake you up only if some
battery and network conditions are met.

27
00:02:00.919 --> 00:02:06.772
If you're in roaming with 5% of battery,
I'm not gonna do that, okay?

28
00:02:06.772 --> 00:02:08.763
So it's not guaranteed.

29
00:02:08.763 --> 00:02:13.506
It's based on a best effort scenario.

30
00:02:13.506 --> 00:02:18.201
And typically, we access the network,
but yeah, we don't need to, but

31
00:02:18.201 --> 00:02:23.149
this is for example the idea the use case
is like a newspaper app and media app.

32
00:02:23.149 --> 00:02:27.488
So every time every morning you wake
up you open your app and the database

33
00:02:27.488 --> 00:02:32.498
the index CV database already filled with
recent apps cached with recent images.

34
00:02:32.498 --> 00:02:33.823
So it's really fast,

35
00:02:33.823 --> 00:02:38.645
and it feels like it's already in your
phone because it's already in your phone.

36
00:02:38.645 --> 00:02:41.106
Okay, so that's the use case.

37
00:02:41.106 --> 00:02:49.000
Right now, chrome is fighting this
with a maximum of once every 12 hours.

38
00:02:49.000 --> 00:02:53.388
It's kind of an experiment trying to see,
okay,

39
00:02:53.388 --> 00:02:58.301
let's see how we are using
this to avoid abuse and so on.

40
00:02:58.301 --> 00:03:03.333
Execution frequency, and
also granting you permission,

41
00:03:03.333 --> 00:03:09.483
will be based honored on a site
engagement score defined by the browser.

42
00:03:09.483 --> 00:03:11.111
I say what?

43
00:03:11.111 --> 00:03:16.155
For every user on every device,
Chrome is actually

44
00:03:16.155 --> 00:03:20.505
creating a score for every website, okay?

45
00:03:20.505 --> 00:03:23.398
It's called the engagement score.

46
00:03:23.398 --> 00:03:29.282
So if this is the first time you access
the website, the engagement score is low.

47
00:03:29.282 --> 00:03:34.490
And when you ask for
periodic think, it will say,

48
00:03:34.490 --> 00:03:38.462
no, you don't have permission yet.

49
00:03:38.462 --> 00:03:41.925
But if the user is using
your app every day for

50
00:03:41.925 --> 00:03:45.581
a week,
then the engagement score is higher.

51
00:03:45.581 --> 00:03:50.548
Then, you ask again, and
the browser will say, okay,

52
00:03:50.548 --> 00:03:55.315
now I will grant you periodic
background sync right.

53
00:03:55.315 --> 00:04:00.628
You don't have control, we don't have
control we as users and we as developers,

54
00:04:00.628 --> 00:04:05.106
no one has control, only the browser
about what's going on, okay?

55
00:04:05.106 --> 00:04:06.364
Makes sense?

56
00:04:06.364 --> 00:04:09.736
I'm not sure if it makes sense,
but is it clear at least?

57
00:04:09.736 --> 00:04:14.473
So, this is a little bit more
complicated in terms of how we use this,

58
00:04:14.473 --> 00:04:17.919
because we actually need
to request permission.

59
00:04:17.919 --> 00:04:21.005
But for that, we use this permission API.

60
00:04:21.005 --> 00:04:23.958
I'm not sure if you have used that one.

61
00:04:23.958 --> 00:04:29.068
It's like a modern permission
API that is multi-permission,

62
00:04:29.068 --> 00:04:33.611
so you can request geolocation
plus camera plus periodic

63
00:04:33.611 --> 00:04:36.842
sync all at once in one dialogue, okay?

64
00:04:36.842 --> 00:04:39.480
That's kind of the idea.

65
00:04:39.480 --> 00:04:43.147
You request periodic background sync,
but remember,

66
00:04:43.147 --> 00:04:48.463
this is actually requesting permission
to the browser, not really to the user.

67
00:04:48.463 --> 00:04:52.453
The user will never see a dialog, and

68
00:04:52.453 --> 00:04:58.649
the permission can be granted or
not, as simple as this.

69
00:04:58.649 --> 00:05:04.144
Then, if it's granted, then what
you're going to do is to register

70
00:05:04.144 --> 00:05:09.478
a periodic thing similar to how we
register a sync and normal sync.

71
00:05:09.478 --> 00:05:12.538
The only difference that we have a tag,
and

72
00:05:12.538 --> 00:05:16.621
we have them in interval in milliseconds,
that's all.

73
00:05:21.882 --> 00:05:27.237
So then because you were granted right for

74
00:05:27.237 --> 00:05:30.302
this every 12 hours.

75
00:05:30.302 --> 00:05:33.300
Your service worker will wake up, and

76
00:05:33.300 --> 00:05:38.182
he will execute the background
sync event with that tag name.

77
00:05:38.182 --> 00:05:43.066
That's why Dev Tools will let you
start recording the event for

78
00:05:43.066 --> 00:05:48.519
three days because it actually,
it's very difficult to debug this.

79
00:05:48.519 --> 00:05:53.614
So you need to wait three days
to see if it worked or not.

80
00:05:53.614 --> 00:05:54.590
Make sense?

81
00:05:54.590 --> 00:06:00.375
And typically here you check first
if the API is there, that's all.

82
00:06:00.375 --> 00:06:04.363
And finally,
you handle this on the service worker.

83
00:06:04.363 --> 00:06:07.197
There is actually the same thing as think,

84
00:06:07.197 --> 00:06:10.909
follow that with a different event name,
that's all.

85
00:06:10.909 --> 00:06:15.930
&gt;&gt; So you might even just use the same
functions for sync as a periodic sync and.

86
00:06:15.930 --> 00:06:17.846
&gt;&gt; Just Periodic sync was definitely.

87
00:06:17.846 --> 00:06:21.542
&gt;&gt; From period sync and
sync and messaging,

88
00:06:21.542 --> 00:06:25.563
you can call the right
functions at any time.

89
00:06:25.563 --> 00:06:31.384
So, in our code, then I have another event
handler for background periodic sync.

90
00:06:31.384 --> 00:06:37.348
So the only difference that we need, we
also need the service worker registration.

91
00:06:37.348 --> 00:06:42.181
So we could even create a function for
this.

92
00:06:42.181 --> 00:06:46.252
So when the service worker
registration is ready,

93
00:06:46.252 --> 00:06:51.751
we are gonna ask for permission or
check if we have permission or not.

94
00:06:51.751 --> 00:06:55.878
It's actually the same if
we request permission, and

95
00:06:55.878 --> 00:06:59.748
we already have it, grant,
nothing will happen.

96
00:06:59.748 --> 00:07:06.732
So what I need is to then
create a permission status,

97
00:07:06.732 --> 00:07:11.970
for example, and we're going to say,

98
00:07:11.970 --> 00:07:15.145
we're going to wait for

99
00:07:15.145 --> 00:07:20.097
navigator.permissions.query.

100
00:07:20.097 --> 00:07:25.345
And the objects,
it's an object with the name,

101
00:07:25.345 --> 00:07:28.934
periodic-background-sink.

102
00:07:30.708 --> 00:07:36.577
Okay, so if it's, Date.

103
00:07:36.577 --> 00:07:45.279
If it's granted,
Then we can register now the sync.

104
00:07:45.279 --> 00:07:49.365
In this case, we talk to periodicSync.

105
00:07:50.746 --> 00:07:54.396
That's the manager, and
we register like for

106
00:07:54.396 --> 00:07:59.637
example daily news wherever,
that's the tile that you define and

107
00:07:59.637 --> 00:08:04.614
there is an option registration
options with a mean interval.

108
00:08:06.927 --> 00:08:14.090
I mean, you can request every second,
but we know it's not gonna happen, okay?

109
00:08:14.090 --> 00:08:19.017
So yeah, it happens,
at least, by 12 hours.

110
00:08:21.301 --> 00:08:27.089
We should make the mask,
before that's simpler.

111
00:08:30.222 --> 00:08:35.112
And, that's all, so
you cross your fingers, and

112
00:08:35.112 --> 00:08:39.677
you try because you don't
know what happened.

113
00:08:39.677 --> 00:08:43.509
I mean,
you could know based on the status, or

114
00:08:43.509 --> 00:08:46.571
you can know if it was granted or not.

115
00:08:46.571 --> 00:08:51.804
But if it wasn't granted,
try again tomorrow.

116
00:08:51.804 --> 00:08:56.385
So you don't know why,
you don't know what else

117
00:08:56.385 --> 00:09:01.090
that you need to do to get
the permission granted.

118
00:09:01.090 --> 00:09:04.803
You just try again next time.

119
00:09:04.803 --> 00:09:07.775
If the site engagement
score gets good enough,

120
00:09:07.775 --> 00:09:12.248
at some point the browser will tell you,
okay, yeah, you can do that.

121
00:09:12.248 --> 00:09:17.728
And by the way, that's how iOS native app
background execution works right now,

122
00:09:17.728 --> 00:09:19.009
if you have an app.

123
00:09:19.009 --> 00:09:23.732
That is not part of one of the list of
background exceptions like if you have

124
00:09:23.732 --> 00:09:27.405
navigation, or background audio,
background video.

125
00:09:27.405 --> 00:09:33.265
If you have Facebook or Instagram and
you are requesting background

126
00:09:33.265 --> 00:09:38.406
just because you want background
without explaining why,

127
00:09:38.406 --> 00:09:44.799
the OS will grant you background rights
based on an app engagement score.

128
00:09:44.799 --> 00:09:47.490
Based on stats based on stats and
says okay,

129
00:09:47.490 --> 00:09:51.074
the user seems to like your app
is using your app every day.

130
00:09:51.074 --> 00:09:57.143
Okay, I will grant you five minutes
per day, that's how iOS works.

131
00:09:57.143 --> 00:10:00.825
So this comes from that side.

132
00:10:03.385 --> 00:10:08.037
Okay, so in terms of something to see,
there isn't anything to see here.

133
00:10:08.037 --> 00:10:12.072
It's just requesting that and
then periodically,

134
00:10:12.072 --> 00:10:16.388
you will be able to execute
some code in the background.

135
00:10:16.388 --> 00:10:20.207
Even if the user is not
using your app anymore.

136
00:10:20.207 --> 00:10:25.232
And if you wanna notify the user,
if the user granted you permission for

137
00:10:25.232 --> 00:10:29.943
web notification, you can notify
the user in the service worker.

138
00:10:29.943 --> 00:10:34.515
So from the service worker,
it's actually pretty similar to this.

139
00:10:35.690 --> 00:10:40.254
But it's periodic sync,
and here, I should use.

140
00:10:45.397 --> 00:10:46.329
That's all.

141
00:10:49.739 --> 00:10:50.526
It's the same,

142
00:10:50.526 --> 00:10:53.910
what you can do there, anything that
can be done in the Service Worker.

143
00:10:55.514 --> 00:11:02.025
Index tv, fetch requests,
you can update your assets' cache.

144
00:11:02.025 --> 00:11:08.537
For example, for the use case of an app,
that it's updating the resources.

145
00:11:08.537 --> 00:11:11.753
[COUGH] You can go every day and

146
00:11:11.753 --> 00:11:16.720
see if they're updated CSS files for
a PWA.

147
00:11:16.720 --> 00:11:21.560
So then the PWA every day
can update the assets,

148
00:11:21.560 --> 00:11:25.312
even if the user is not using the app.

149
00:11:25.312 --> 00:11:28.657
But we can increase the opportunity for

150
00:11:28.657 --> 00:11:34.431
the user to always get the fresh app
when the user is opening the app,

151
00:11:34.431 --> 00:11:38.405
because every day we
are updating the assets.

152
00:11:38.405 --> 00:11:40.023
Okay, make sense?

153
00:11:40.023 --> 00:11:45.808
And as we for
Chrome is offering us the tools within

154
00:11:45.808 --> 00:11:51.320
application to debug
this from periodic sync,

155
00:11:51.320 --> 00:11:55.453
the tester here, and also periodic

156
00:11:55.453 --> 00:12:00.577
background sync recording for three days.

157
00:12:00.577 --> 00:12:03.334
So for
example in our case we're using localhost,

158
00:12:03.334 --> 00:12:07.323
is there any sort of like permissions
to automatically grant like local?

159
00:12:07.323 --> 00:12:10.795
&gt;&gt; Yeah, in fact, let's look at this.

160
00:12:10.795 --> 00:12:15.459
&gt;&gt; So I'm assuming our engagement score
might be really low for localhost 8080 or

161
00:12:15.459 --> 00:12:16.134
whatever.

162
00:12:16.134 --> 00:12:17.577
&gt;&gt; So-
&gt;&gt; Maybe really high.

163
00:12:17.577 --> 00:12:19.395
&gt;&gt; Permission denied right now.

164
00:12:19.395 --> 00:12:24.056
&gt;&gt; You look at this,
we can try to request our app table,

165
00:12:24.056 --> 00:12:26.756
by the way, navigator there.

166
00:12:26.756 --> 00:12:33.166
So I can try this in the console, right?

167
00:12:33.166 --> 00:12:37.182
We can see it was denied.

168
00:12:37.182 --> 00:12:39.434
So say but it's localhost.

169
00:12:39.434 --> 00:12:46.408
Yep, but this port, at least it's new for
these because I'm using Chrome Canary.

170
00:12:46.408 --> 00:12:49.792
So I'm using this one.

171
00:12:49.792 --> 00:12:52.673
Do you have a clean chrome
without extensions?

172
00:12:52.673 --> 00:12:55.050
So it's saying, no, you know what?

173
00:12:55.050 --> 00:12:57.861
No, I'm not granting you permission.

174
00:12:57.861 --> 00:13:01.697
So if I come back tomorrow,
maybe it will work.

175
00:13:01.697 --> 00:13:06.055
If I try the other Chrome, and
it's a port that I typically use,

176
00:13:06.055 --> 00:13:08.089
it will grant me permission.

177
00:13:09.843 --> 00:13:13.200
Can you see what's
the site engagement score?

178
00:13:13.200 --> 00:13:17.501
Well, if engagement score chrome,

179
00:13:17.501 --> 00:13:22.634
if you Google that,
it's a double from zero

180
00:13:22.634 --> 00:13:27.506
to 100, and here it explains, okay?

181
00:13:27.506 --> 00:13:32.505
How it's been declared,
how that works and there is a very

182
00:13:32.505 --> 00:13:37.623
low level page where you can
actually see what's going on.

183
00:13:37.623 --> 00:13:42.323
I think also there is a common
line command that you can,

184
00:13:42.323 --> 00:13:46.623
where you can actually
force an engagement score.

185
00:13:46.623 --> 00:13:49.860
But yeah,
it's actually had hard to test it.

186
00:13:49.860 --> 00:13:51.322
Give me a yes or no.

187
00:13:51.322 --> 00:13:55.540
Let's for example, let's see.

188
00:13:55.540 --> 00:13:58.688
Let's open the other Chrome.

189
00:13:58.688 --> 00:14:01.234
Not the Canary, this is the other one.

190
00:14:01.234 --> 00:14:02.239
And let's take Twitter.

191
00:14:04.451 --> 00:14:09.673
So if I use Twitter.

192
00:14:09.673 --> 00:14:12.690
Come on, Elon, what are you doing?

193
00:14:12.690 --> 00:14:13.806
Elon, Elon.

194
00:14:13.806 --> 00:14:18.180
So if I request, it's denying.

195
00:14:18.180 --> 00:14:23.008
Okay, it's denying me also, why?

196
00:14:23.008 --> 00:14:24.719
If you're done no.

197
00:14:24.719 --> 00:14:27.511
Can you do something about that,

198
00:14:27.511 --> 00:14:32.309
nope that's how that works and
what about google.com?

199
00:14:32.309 --> 00:14:34.514
Try one more.

200
00:14:34.514 --> 00:14:36.469
&gt;&gt; Stack Overflow will be high enough.

201
00:14:39.906 --> 00:14:43.051
&gt;&gt; Deny.

202
00:14:43.051 --> 00:14:47.869
&gt;&gt; If you open the thing is the discards,
you can see your engagement score for

203
00:14:47.869 --> 00:14:49.256
the different tabs.

204
00:14:49.256 --> 00:14:50.266
&gt;&gt; On the top.

205
00:14:54.566 --> 00:14:57.958
Site engagement score, it's zero job 100.

206
00:14:57.958 --> 00:15:03.033
Twitter is almost 60, Google is 74,

207
00:15:03.033 --> 00:15:06.083
but it also gave me, no.

208
00:15:06.083 --> 00:15:06.768
Can you do something?

209
00:15:06.768 --> 00:15:08.441
No, that's all you can do.

210
00:15:08.441 --> 00:15:13.817
You can try and try again and try again
until you will get a yes at one point.

211
00:15:15.980 --> 00:15:16.507
Okay?

212
00:15:18.286 --> 00:15:23.119
By the way, if you have an installed PWA,
that's a different story.

213
00:15:23.119 --> 00:15:29.284
The site engagement score goes
up immediately because the user

214
00:15:29.284 --> 00:15:34.528
has made like action,
the user has installed an app.

215
00:15:34.528 --> 00:15:40.286
So if you haven't installed PWA,
the engagement score should go up.

216
00:15:40.286 --> 00:15:43.861
I'm not sure I think I
do have this squoosh.

217
00:15:43.861 --> 00:15:48.003
Sorry with that one, and
then we can move on to the next one.

218
00:15:48.003 --> 00:15:52.683
So if I try perodic_background_sync,
granted.

219
00:15:52.683 --> 00:15:53.521
Why?

220
00:15:53.521 --> 00:15:58.291
Because this is a PWA that
I have already installed.

221
00:15:58.291 --> 00:16:05.382
Because I have the app installed,
the site engagement score is higher.

222
00:16:05.382 --> 00:16:08.783
So now it's granted for this website.

223
00:16:08.783 --> 00:16:14.844
So now I'm ready to register
periodic background sync operations.

224
00:16:17.096 --> 00:16:21.782
Okay?
&gt;&gt; Was there a specific threshold

225
00:16:21.782 --> 00:16:25.194
like ad that you parsed?

226
00:16:25.194 --> 00:16:26.756
That I parsed?

227
00:16:26.756 --> 00:16:30.100
So we can try to see.

228
00:16:34.923 --> 00:16:35.915
Squoosh.

229
00:16:35.915 --> 00:16:39.673
[COUGH] No, in fact i it's here in 12.

230
00:16:39.673 --> 00:16:43.600
So it's even worse, but
I think in this case,

231
00:16:43.600 --> 00:16:49.662
it's granting you because it's installed,
it's an installed PWA.

232
00:16:49.662 --> 00:16:55.271
So this is actually changing
on every Chrome version.

233
00:16:55.271 --> 00:16:58.002
But if you're 90,
if you have 90, it should be,

234
00:16:58.002 --> 00:17:00.816
you should be good if you're using,
install the PWA.

235
00:17:00.816 --> 00:17:05.134
You should be good if the user has
granted you notification permission

236
00:17:05.134 --> 00:17:06.388
you should be good.

237
00:17:06.388 --> 00:17:11.302
So in that case the browser says okay,
if the user has granted notification

238
00:17:11.302 --> 00:17:15.046
permission the user wants to
know about this website, so

239
00:17:15.046 --> 00:17:20.046
I think it's a sign that, yeah,
we should grant periodic backgrounds in.

240
00:17:20.046 --> 00:17:25.184
But again,
these algorithm heuristics here,

241
00:17:25.184 --> 00:17:30.840
are completely unknown and
private to the browser.

