WEBVTT

1
00:00:00.390 --> 00:00:02.860
&gt;&gt; Sarah Drasner: All right,
communicating events.

2
00:00:02.860 --> 00:00:07.710
So far we've been passing down static
values down to from the parent

3
00:00:07.710 --> 00:00:11.637
to the child, or
we've been binding dynamic values.

4
00:00:11.637 --> 00:00:14.050
But sometimes we need to do
more things than that right?

5
00:00:14.050 --> 00:00:17.560
Sometimes we need to actually work
with events and event handling.

6
00:00:17.560 --> 00:00:21.070
So if we have something
like this view component.

7
00:00:21.070 --> 00:00:24.850
We have, it's just called child,
cuz I'm really good at naming.

8
00:00:24.850 --> 00:00:28.490
[LAUGH] And
the template is called child as well.

9
00:00:28.490 --> 00:00:30.610
And we have this view instance,

10
00:00:30.610 --> 00:00:35.540
which we say, if we have a method that
says talk to me, we have this.text.

11
00:00:35.540 --> 00:00:38.520
And it says, forget introductions,
I want a taco.

12
00:00:38.520 --> 00:00:42.110
We have our app, we have our text and
message, you should be used to this one.

13
00:00:42.110 --> 00:00:45.440
We saw that one earlier but
now we have this child.

14
00:00:45.440 --> 00:00:49.160
And in the child, we have the text,
and also click talkToMe.

15
00:00:49.160 --> 00:00:51.730
So let's go look at this in CodePen again.

16
00:00:51.730 --> 00:00:55.640
And we can collapse these values.

17
00:00:55.640 --> 00:01:00.120
So when we execute,
actually I'll even go one further.

18
00:01:00.120 --> 00:01:05.220
When we execute this, we can do that but

19
00:01:05.220 --> 00:01:08.590
in our console,
we're gonna come up with this warning.

20
00:01:08.590 --> 00:01:12.750
And this warning is a very, very important
warning and Vue is absolutely right.

21
00:01:12.750 --> 00:01:18.090
If we're mutating that prop directly
then what's going to happen is

22
00:01:18.090 --> 00:01:21.650
that won't tell the parent
that something changed.

23
00:01:21.650 --> 00:01:24.900
So you're changing it on the child, but
you're actually not managing that data

24
00:01:24.900 --> 00:01:28.100
well, because then you've got
two different things going on.

25
00:01:28.100 --> 00:01:29.720
You've got the child instance,

26
00:01:29.720 --> 00:01:32.920
and the parent instance is still
the same as it was before.

27
00:01:32.920 --> 00:01:34.840
Let's go look in the view devtools,

28
00:01:34.840 --> 00:01:38.130
we'll go to child that
says forget introductions.

29
00:01:38.130 --> 00:01:40.780
But this one still says, 'hello mr magoo'.

30
00:01:40.780 --> 00:01:45.030
That's not good, that's a place where
things are deviating from each other, and

31
00:01:45.030 --> 00:01:45.930
we don't want that.

32
00:01:45.930 --> 00:01:49.120
Remember props are always from
parent to child communication.

33
00:01:49.120 --> 00:01:52.110
It's going down,
it's not going back up again.

34
00:01:53.360 --> 00:01:56.910
So how do we make that work then?

35
00:01:56.910 --> 00:01:59.270
What we can do is we can
take our component and

36
00:01:59.270 --> 00:02:01.600
we can make a special event handler.

37
00:02:01.600 --> 00:02:03.380
And if this doesn't make sense to you,

38
00:02:03.380 --> 00:02:06.520
don't worry we're gonna go
into depth in the next slide.

39
00:02:06.520 --> 00:02:08.480
We're gonna use a thing called $emit.

40
00:02:08.480 --> 00:02:12.126
This dollar sign means that it's
a special option that Vue is granting us.

41
00:02:12.126 --> 00:02:17.640
And that $emit is really nice
because what it does is report its

42
00:02:17.640 --> 00:02:21.820
activity to the parent, and
it's really very flexible.

43
00:02:21.820 --> 00:02:24.361
So you can have this myEvent and

44
00:02:24.361 --> 00:02:29.755
then when you're calling myEvent,
you can also pass in values.

45
00:02:29.755 --> 00:02:32.949
You can pass in more than one value
if you have a bunch of values.

46
00:02:34.430 --> 00:02:35.720
So we're gonna zoom in here.

47
00:02:37.180 --> 00:02:41.890
So previously we had this.text=
'forget introductions, I want a taco',

48
00:02:41.890 --> 00:02:43.540
this is what we had before.

49
00:02:43.540 --> 00:02:49.830
And we had this HTML that had the text and
talkToMe Let's talk.

50
00:02:49.830 --> 00:02:51.320
So what will we need to change?

51
00:02:51.320 --> 00:02:56.021
Well the first thing we would need to
do is we would need to say this.$emit

52
00:02:56.021 --> 00:02:59.650
changeText or
whatever you want your thing to be called.

53
00:02:59.650 --> 00:03:03.240
It could be called anything,
and we're gonna pass this.text,

54
00:03:03.240 --> 00:03:06.780
cuz that's the thing
that we're changing here.

55
00:03:06.780 --> 00:03:13.420
And then in the HTML we're
going to add an event listener

56
00:03:13.420 --> 00:03:18.720
that at, but it's not mouse move,
it's not click or something.

57
00:03:18.720 --> 00:03:22.468
It's this changeText that
we had said from the $emit,

58
00:03:22.468 --> 00:03:24.790
so that could be called anything.

59
00:03:24.790 --> 00:03:30.090
I could call it Taco Bar, and
it would be at Taco Bar down here.

60
00:03:30.090 --> 00:03:35.750
So that's corresponding to, these two
are kind of communicating to each other.

61
00:03:35.750 --> 00:03:42.892
In this instance what we´re saying is,
message is going to be $event.

62
00:03:42.892 --> 00:03:49.240
That $event is an option that´s available
to us through the Vue instance.

63
00:03:49.240 --> 00:03:53.040
So let´s see it in action.

64
00:03:53.040 --> 00:03:57.024
We now have this.text =
'forget introductions,

65
00:03:57.024 --> 00:04:01.921
I want a taco' this.$emit{ changetext,
this.text.}.

66
00:04:01.921 --> 00:04:05.823
And then when I,
let's go to our HTML here,

67
00:04:05.823 --> 00:04:09.941
we've got that changetext
message is event.

68
00:04:09.941 --> 00:04:13.810
And now when we do this,

69
00:04:13.810 --> 00:04:18.840
let's go look at our console,

70
00:04:18.840 --> 00:04:23.290
now when we do this, we,

71
00:04:23.290 --> 00:04:27.590
no, that should not be.

72
00:04:27.590 --> 00:04:32.650
We are omitting it, sorry I think

73
00:04:32.650 --> 00:04:37.000
I messed up something here.

74
00:04:37.000 --> 00:04:40.084
I have this data property so
that we could see it changing.

75
00:04:40.084 --> 00:04:44.960
Now it's actually updating that data,

76
00:04:44.960 --> 00:04:49.160
let me look in the Vue Dev tools.

77
00:04:49.160 --> 00:04:53.808
'hello mr magoo', let's talk.
&gt;&gt; Speaker 2: Do you

78
00:04:53.808 --> 00:04:58.669
still want to change text in
your components or do you just

79
00:04:58.669 --> 00:05:02.255
admit what the due tax should be?
&gt;&gt; Sarah Drasner: I think we're just

80
00:05:02.255 --> 00:05:03.730
omitting what the new text should be.

81
00:05:03.730 --> 00:05:04.711
This is,

82
00:05:04.711 --> 00:05:08.679
according to the doc should be okay.
&gt;&gt; Speaker 2: You're

83
00:05:08.679 --> 00:05:09.320
actually using the [INAUDIBLE].

84
00:05:09.320 --> 00:05:12.824
Yeah you're still changing.
&gt;&gt; Sarah Drasner: Yeah that's true,

85
00:05:12.824 --> 00:05:15.680
actually so there is another
way that we can do this, sorry.

86
00:05:16.770 --> 00:05:19.670
This might not be actually
the correct way of doing this.

87
00:05:19.670 --> 00:05:25.840
So if we want to use a method instead,
this will actually work better.

88
00:05:25.840 --> 00:05:28.266
So we have this method, and

89
00:05:28.266 --> 00:05:34.185
we have this ball that's bouncing
with an SVG and it's bouncing.

90
00:05:34.185 --> 00:05:38.853
And we can increase the height and it gets
bigger as we're increasing the height and

91
00:05:38.853 --> 00:05:41.170
it'ill keep bouncing and stuff.

92
00:05:41.170 --> 00:05:44.150
And I can reset it and start it again.

93
00:05:44.150 --> 00:05:49.750
And this is passing this increase
height through that event.

94
00:05:49.750 --> 00:05:55.510
So what we're doing here is
we've got this increased height,

95
00:05:55.510 --> 00:05:58.990
and we've got this $emit and
height increase.

96
00:05:58.990 --> 00:06:06.080
So in our button which is a component,
we have @click= 'heightincrease' and

97
00:06:06.080 --> 00:06:11.050
in the methods we have this function
where we're $emitting 'heightincrease'.

98
00:06:11.050 --> 00:06:14.100
The interesting part here is that,

99
00:06:14.100 --> 00:06:16.670
well actually let's go
through more of this code.

100
00:06:16.670 --> 00:06:21.280
So we've got @click='heightincrease'
that we're increasing the height.

101
00:06:21.280 --> 00:06:27.433
We've got animateBall and we've got
@heightincrease='incrementheight' and

102
00:06:27.433 --> 00:06:30.430
then on the child we are $emitting that.

103
00:06:30.430 --> 00:06:34.280
So on the parent we're just basically
using this height-counter, and

104
00:06:34.280 --> 00:06:36.870
it doesn't do much,
it just increments the height.

105
00:06:36.870 --> 00:06:41.040
But the interesting part is that these
don't, what is happening on that child,

106
00:06:41.040 --> 00:06:46.100
the events that we're using on that child,
don't have to be the same as that parent.

107
00:06:46.100 --> 00:06:51.136
So when we look at the parent, what we're
doing is we're taking that total, and

108
00:06:51.136 --> 00:06:56.263
we're incrementing this.total,
because this heightincrease is executing.

109
00:06:56.263 --> 00:07:01.106
So it's just alerting that something is
changing, between one component and then

110
00:07:01.106 --> 00:07:05.694
other, It doesn't have to be the same.
&gt;&gt; Sarah Drasner: So

111
00:07:05.694 --> 00:07:12.275
now we can do something like this
where we have multiple components,

112
00:07:12.275 --> 00:07:17.280
and we have Increase height,
and Increase radius.

113
00:07:17.280 --> 00:07:20.500
And we can start and
we can increase the height and

114
00:07:20.500 --> 00:07:23.950
increase the radius as it goes,
we can restart it.

115
00:07:25.640 --> 00:07:29.690
So if we have this.count,
the counts start at 3 but

116
00:07:29.690 --> 00:07:35.600
you could see that we have
that total starting at 200.

117
00:07:35.600 --> 00:07:40.820
That total is incrementing this.total
by 100 every time we execute it.

118
00:07:40.820 --> 00:07:43.380
So these aren't even
actually the same values.

119
00:07:43.380 --> 00:07:47.130
We can have a completely
different logic for the child and

120
00:07:47.130 --> 00:07:48.680
the parent if we want to.

121
00:07:48.680 --> 00:07:52.616
We're just letting it know that
something was happening between those

122
00:07:52.616 --> 00:07:59.607
two.
&gt;&gt; Sarah Drasner: So

123
00:07:59.607 --> 00:08:03.660
in the children we have heightincrease and
radiusincrease.

124
00:08:03.660 --> 00:08:06.633
And in the parent we have
heightincrease and radiusincrease, and

125
00:08:06.633 --> 00:08:09.830
then we're calling incrementHeight,
incrementRadius.

126
00:08:09.830 --> 00:08:13.670
We have a relationship between
@click heightincrease, and

127
00:08:13.670 --> 00:08:17.770
then that @click on the parent is
going to be executed the same way.

128
00:08:17.770 --> 00:08:19.648
Then we have this height-counter,

129
00:08:19.648 --> 00:08:22.504
we're saying that that ID
becomes the heightcounter.

130
00:08:22.504 --> 00:08:24.738
So that becomes the component here, and

131
00:08:24.738 --> 00:08:29.220
then that radiusincrease is @click
radiusincrease, and @radiusincrease.

132
00:08:31.080 --> 00:08:35.450
So if we have something like this
backpack, like we saw earlier,

133
00:08:35.450 --> 00:08:38.770
we have this component that's updating.

134
00:08:38.770 --> 00:08:43.280
And that's nice and all, but
maybe we don't wanna just have

135
00:08:43.280 --> 00:08:47.960
a component that has one thing, that
doesn't look like a normal store at all.

136
00:08:47.960 --> 00:08:50.790
So what we would actually
have is something

137
00:08:50.790 --> 00:08:55.040
where we're using multiple components and
we have multiple components in a store.

138
00:08:57.960 --> 00:09:02.108
So we have this one change in quantity,
this one change in quantity, and

139
00:09:02.108 --> 00:09:03.810
this one change in quantity.

140
00:09:03.810 --> 00:09:09.592
And if we look back at the code here
we can see that we have tese items and

141
00:09:09.592 --> 00:09:15.710
the URL and the props and
the child using this template of child.

142
00:09:15.710 --> 00:09:18.020
And then we're increasing
the counter the same way.

143
00:09:18.020 --> 00:09:23.989
So these kind of components are really
nice to use for something like a store.

144
00:09:23.989 --> 00:09:27.363
You can keep reusing them with different
things that you're passing down.

145
00:09:29.310 --> 00:09:30.697
&gt;&gt; Sarah Drasner: So in the app itself,

146
00:09:30.697 --> 00:09:34.718
we have this manifest file,
that has the backpack, the URL.

147
00:09:34.718 --> 00:09:40.498
And then the child item we're passing
down the unit.item, unit.url and

148
00:09:40.498 --> 00:09:46.146
the component itself, we have that item.
&gt;&gt; Sarah Drasner: So

149
00:09:46.146 --> 00:09:49.790
that's really, really nice for
reusable components

