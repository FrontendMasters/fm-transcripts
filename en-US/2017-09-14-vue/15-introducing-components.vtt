WEBVTT

1
00:00:00.300 --> 00:00:03.049
&gt;&gt; Sarah Drasner: Probably most of
you are familiar with components, but

2
00:00:03.049 --> 00:00:06.854
just in case you're aren't, component
is a collection of elements that's

3
00:00:06.854 --> 00:00:10.617
encapsulated into a group that can be
accessed through one single element.

4
00:00:10.617 --> 00:00:14.371
So if we have a bunch of things
that were just collected together,

5
00:00:14.371 --> 00:00:18.351
I can say callout, and that's
an abstraction of all of that mark up.

6
00:00:18.351 --> 00:00:24.837
It's going to grab all of that mark up and
I can reuse it as I need to.

7
00:00:24.837 --> 00:00:26.714
So here is as simple
as possible component.

8
00:00:26.714 --> 00:00:30.360
We did the simplest possible template,
here's the simplest possible component.

9
00:00:30.360 --> 00:00:34.614
I can say, new view, EL,
app, and that's our app.

10
00:00:34.614 --> 00:00:38.281
And then we have a thing called child
which you might notice is not typical

11
00:00:38.281 --> 00:00:41.422
markup that we use,
we don't usually call something child.

12
00:00:41.422 --> 00:00:45.211
We say viewed that component and
then we can say child and

13
00:00:45.211 --> 00:00:48.768
that will create that
component that we can access.

14
00:00:48.768 --> 00:00:53.769
And we can create a template and
anything now inside of this template,

15
00:00:53.769 --> 00:00:59.469
will be placed inside of child, instead
of just directly in the view instance.

16
00:00:59.469 --> 00:01:04.331
So slightly better, with props, if you
are coming from a react background this is

17
00:01:04.331 --> 00:01:08.916
gonna be super review for you, but
in case you aren't we're gonna cover it.

18
00:01:08.916 --> 00:01:13.781
So basically there is a lot of times
that you want to reuse a component but

19
00:01:13.781 --> 00:01:16.469
you need to change little pieces of it.

20
00:01:16.469 --> 00:01:20.582
You need to like reuse it and have it you
know output slightly different things

21
00:01:20.582 --> 00:01:24.582
depending on your uses that enter props,
props are really great for this.

22
00:01:24.582 --> 00:01:28.958
So if we have something
like this view instance and

23
00:01:28.958 --> 00:01:34.272
I have something on it like this message,
hello Mr. Magoo,

24
00:01:34.272 --> 00:01:40.124
in props I can say text, and
this template divText inside of here.

25
00:01:40.124 --> 00:01:44.540
Then, remember I mentioned that
vBind was really, really powerful?

26
00:01:44.540 --> 00:01:49.363
It's that colon one, this is gonna
dynamically bind to those props.

27
00:01:49.363 --> 00:01:54.285
The thing to note here is that, that
components is calling everything text,

28
00:01:54.285 --> 00:01:57.550
like that component can
call it whatever it wants.

29
00:01:57.550 --> 00:02:00.566
So I could change this to taco,

30
00:02:00.566 --> 00:02:06.020
of course I'm gonna piclk taco,
taco, taco and taco.

31
00:02:09.017 --> 00:02:10.635
&gt;&gt; Sarah Drasner: And
that will work as well.

32
00:02:10.635 --> 00:02:15.282
Because it's just using what's inside
that component, what you've defined.

33
00:02:15.282 --> 00:02:17.937
I could write anything there.

34
00:02:17.937 --> 00:02:22.509
What's going to be passed down
is going to be this message.

35
00:02:22.509 --> 00:02:25.603
So if I say message, then I'm gonna,

36
00:02:25.603 --> 00:02:31.527
it's going to pass it down from the child,
from the parent to the child.

37
00:02:31.527 --> 00:02:37.112
So I could also alternatively say,

38
00:02:37.112 --> 00:02:41.208
other message the food got

39
00:02:41.208 --> 00:02:45.863
here stop talking Sarah, and

40
00:02:45.863 --> 00:02:52.391
[LAUGH] I could then
pass in other message.

41
00:02:52.391 --> 00:02:54.823
And they will output that instead.

42
00:02:54.823 --> 00:02:58.170
So I can actually change the data
that is getting passed out.

