WEBVTT

1
00:00:00.340 --> 00:00:03.260
&gt;&gt; Sarah: All right,
let's connect things to interaction.

2
00:00:03.260 --> 00:00:05.715
We've got this little Wally guy.

3
00:00:05.715 --> 00:00:11.005
[SOUND] He's gonna try to
find his cockroach friend.

4
00:00:11.005 --> 00:00:15.143
[SOUND] And you know,
we can make him go up and down.

5
00:00:15.143 --> 00:00:19.850
We had kind of talked about earlier
about how great Vue is for interaction.

6
00:00:19.850 --> 00:00:21.590
We did some style bindings.

7
00:00:21.590 --> 00:00:26.120
Pretty easily, all we did was hook up
x and y, and plot them to eCLientX,

8
00:00:26.120 --> 00:00:26.660
eCLientY.

9
00:00:26.660 --> 00:00:29.410
So there's tons of stuff that we can do.

10
00:00:29.410 --> 00:00:33.980
One thing about this animation is
we've got a part that's repeating,

11
00:00:33.980 --> 00:00:36.220
it's just making him
look a little lifelike,

12
00:00:36.220 --> 00:00:39.500
he's just kind of bobbing his head,
moving it around, and

13
00:00:39.500 --> 00:00:43.160
blinking every once in a while, and
he does that no matter what you do.

14
00:00:43.160 --> 00:00:44.740
But usually people are moving around, so

15
00:00:44.740 --> 00:00:48.390
they don't notice that that's
just constantly occurring.

16
00:00:48.390 --> 00:00:50.750
Then we have these arms,

17
00:00:50.750 --> 00:00:56.000
that extend out as the cockroach
moves across the page, right?

18
00:00:57.160 --> 00:01:01.620
So what we did for
each one of these Is for

19
00:01:01.620 --> 00:01:06.720
the bopping around, and moving around,
we plugged into the mounted hook.

20
00:01:06.720 --> 00:01:10.060
Because we want that to start
right as that component loads, and

21
00:01:10.060 --> 00:01:13.680
we want a timeline to fire that
has the animation logic for

22
00:01:13.680 --> 00:01:16.740
him to move around, and
blink, and things like that.

23
00:01:16.740 --> 00:01:21.410
And that's just a repeated thing that we
have hanging off of that mounted hook.

24
00:01:21.410 --> 00:01:26.350
The other thing that we're gonna do is,
we built out an animation of his arms

25
00:01:26.350 --> 00:01:31.050
going like this,
then we paused it, and we plotted

26
00:01:31.050 --> 00:01:37.200
the progress of the animation along with
those x, y values that we had access to.

27
00:01:37.200 --> 00:01:39.930
So just like we used them for class and

28
00:01:39.930 --> 00:01:42.360
style bindings,
we take the whole animation,

29
00:01:42.360 --> 00:01:46.370
we do the whole animation at the get go,
and that's kind of easier to work with.

30
00:01:46.370 --> 00:01:50.500
We're just like watching his arms go like
this, and that's easier to figure out.

31
00:01:50.500 --> 00:01:56.448
Then we stop it, then we say, okay, let's
take this progress and move it along,

32
00:01:56.448 --> 00:02:01.285
as you're moving your cursor.
&gt;&gt; Sarah: So

33
00:02:01.285 --> 00:02:05.120
in here we have that
@mousemove= "coordinates".

34
00:02:05.120 --> 00:02:07.697
That was the thing that we had earlier.

35
00:02:07.697 --> 00:02:12.503
We had kind of mentioned the @mousemove=
"coordinates" in that first thing

36
00:02:12.503 --> 00:02:13.590
that we did.

37
00:02:13.590 --> 00:02:15.890
Then we have this v-bind:class, and

38
00:02:15.890 --> 00:02:19.440
we have flipped,
isFlipped because we wanna track.

39
00:02:19.440 --> 00:02:21.350
If we get to a certain
point in a location,

40
00:02:21.350 --> 00:02:27.100
we want his head to flip around and
actually follow that cockroach.

41
00:02:27.100 --> 00:02:31.050
As we got to the other side of the page,
he had to kinda turn his head.

42
00:02:31.050 --> 00:02:38.259
So we just translated it, flipped it,
negative one, on that axis.

43
00:02:39.880 --> 00:02:43.510
So that is that.

44
00:02:43.510 --> 00:02:45.330
Then we have a bunch of starting things.

45
00:02:45.330 --> 00:02:47.690
We had flip is false
when we first started,

46
00:02:47.690 --> 00:02:50.210
we had audio play was
false when we started.

47
00:02:50.210 --> 00:02:53.080
So there is something that
triggers that event as well.

48
00:02:53.080 --> 00:02:58.010
We have the x and y values and
we have the start arms which is the point

49
00:02:58.010 --> 00:03:00.920
that progress where that
animation is initially zero.

50
00:03:02.660 --> 00:03:06.510
We're going to, in our coordinates,
where we are passing e.

51
00:03:06.510 --> 00:03:10.070
We have access to e client x and
e client y.

52
00:03:10.070 --> 00:03:13.510
We've got some logic here to figure out,
basically,

53
00:03:13.510 --> 00:03:16.770
if we are going to play this sound,
if we are going to flip him.

54
00:03:16.770 --> 00:03:21.540
And, this is this.startarms.progress.

55
00:03:21.540 --> 00:03:24.300
And we're plotting the progress
of an animation that we

56
00:03:24.300 --> 00:03:26.350
also have in our methods to that.

57
00:03:26.350 --> 00:03:28.400
So it looks kind of confusing but

58
00:03:28.400 --> 00:03:32.760
basically the logic that I was explaining
before is how that is all working.

59
00:03:34.990 --> 00:03:39.970
So the looping I think anytime you want
something looping continuously you might

60
00:03:39.970 --> 00:03:43.890
want to plug into something like
created or mounted, so that as soon

61
00:03:43.890 --> 00:03:48.788
as that thing is available, we're
starting to fire that animation timeline.

62
00:03:48.788 --> 00:03:53.880
This repeat: -1 will allow us
to start it right away, or

63
00:03:53.880 --> 00:03:55.600
sorry loop it through the whole thing.

