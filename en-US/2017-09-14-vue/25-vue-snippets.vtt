WEBVTT

1
00:00:00.024 --> 00:00:03.540
&gt;&gt; Sarah Drasner: Okay, so let's' go over
this Vue file extension for a moment

2
00:00:03.540 --> 00:00:07.430
because if you haven't worked with view,
you won't have come across it before.

3
00:00:07.430 --> 00:00:12.512
I used a bunch of snippets when
we were doing that last Vue CLI

4
00:00:12.512 --> 00:00:16.990
build, because I think that they
help me be really productive.

5
00:00:16.990 --> 00:00:18.677
I have one for Sublime.

6
00:00:18.677 --> 00:00:19.783
There's one for Atom.

7
00:00:19.783 --> 00:00:21.797
I think that that's version 1.x.

8
00:00:21.797 --> 00:00:25.080
I'm not sure if they've upgraded yet,
so just a warning there.

9
00:00:25.080 --> 00:00:26.820
There's one for vscode.

10
00:00:26.820 --> 00:00:29.520
There's also a thing called Vetur for
vscode,

11
00:00:29.520 --> 00:00:32.470
which will probably end up
making me switch code editors.

12
00:00:32.470 --> 00:00:36.970
There's a person who loves
view over on the vscode team.

13
00:00:36.970 --> 00:00:41.260
And he's made this beautiful suite
that's very, very feature rich.

14
00:00:41.260 --> 00:00:42.780
So definitely check that out.

15
00:00:42.780 --> 00:00:45.190
And there's a link to that there.

16
00:00:46.550 --> 00:00:51.230
So we looked at this file really,
really quickly, but

17
00:00:51.230 --> 00:00:55.670
I kind of glossed over
these style scoped area.

18
00:00:55.670 --> 00:01:02.260
What that style scoped tag will let us do
is write styles only for that component.

19
00:01:02.260 --> 00:01:05.896
So if you've worked with CSS modules
before, this will sounds familiar to you.

20
00:01:05.896 --> 00:01:09.340
If I write style scoped in that area,

21
00:01:12.620 --> 00:01:16.160
even if I used that class selector
somewhere else in the application,

22
00:01:16.160 --> 00:01:21.030
it's going to be scoped only to that
Vue file, which actually helps me keep

23
00:01:21.030 --> 00:01:26.080
everything tight and organized, especially
if you have just the one off thing.

24
00:01:26.080 --> 00:01:27.920
That happens pretty often.

25
00:01:27.920 --> 00:01:30.480
You have a bunch of global styles
that you need for everything.

26
00:01:30.480 --> 00:01:32.164
You need to use a certain font.

27
00:01:32.164 --> 00:01:34.338
You need to use a certain line height.

28
00:01:34.338 --> 00:01:39.504
And then when you're using that style
scoped tag you're gonna have a few,

29
00:01:39.504 --> 00:01:43.770
okay, just this element needs
this weird amount of padding.

30
00:01:43.770 --> 00:01:46.050
That is really, really useful there.

31
00:01:47.250 --> 00:01:51.850
It's really, really great for a slots too.

32
00:01:51.850 --> 00:01:54.350
So we're gonna dig into
that in just a second.

33
00:01:54.350 --> 00:01:58.535
So to @import styles,
if you've used Sass before,

34
00:01:58.535 --> 00:02:04.580
if you wanted to do @import and put in
your assets folder, a main.css file,

35
00:02:04.580 --> 00:02:11.520
you'd have to run a NPM installer,
style loader, and then you could do so.

36
00:02:11.520 --> 00:02:12.590
We're not gonna do that today,

37
00:02:12.590 --> 00:02:16.480
but that's basically how you
would create that import.

38
00:02:16.480 --> 00:02:20.800
So, we had kind of talked about
this black label, white label, and

39
00:02:20.800 --> 00:02:23.670
we have these slots, and things like that.

40
00:02:23.670 --> 00:02:28.380
And how we can have
different things based on,

41
00:02:28.380 --> 00:02:32.100
we're basically styling these
based on that component and

42
00:02:32.100 --> 00:02:35.970
just putting everything else inside
of a slot in order to style it.

43
00:02:35.970 --> 00:02:41.252
And when we were working with CodePen what
we had to do was this crazy thing where

44
00:02:41.252 --> 00:02:46.296
we had to go and say div class black,
.black .label, .black .bottle,

45
00:02:46.296 --> 00:02:50.476
.black .wine-text,
.black .flor, .black .bking.

46
00:02:50.476 --> 00:02:51.474
And that's fine.

47
00:02:51.474 --> 00:02:56.320
It works, but it's also not very elegant.

48
00:02:56.320 --> 00:03:02.430
So what we can end up doing when we
move to the CLI in that style scoped tag

49
00:03:02.430 --> 00:03:07.461
is in that,
inside that component itself I'm

50
00:03:07.461 --> 00:03:12.210
using style scoped and I'm just saying
label, bottle, all of these things.

51
00:03:12.210 --> 00:03:15.510
And it's gonna make sure
that in my black component

52
00:03:15.510 --> 00:03:18.260
I have all of those
things available to us.

53
00:03:18.260 --> 00:03:22.095
So if you want to actually check
out the real build of this,

54
00:03:22.095 --> 00:03:26.890
I have the CodePen build, and then I
have a repo full of the actual build.

55
00:03:26.890 --> 00:03:31.370
So we could go into the src folder here,
go into components.

56
00:03:31.370 --> 00:03:35.886
And then you could see there's that
template with the slot inside, and

57
00:03:35.886 --> 00:03:40.830
the style scoped tag, and we have
a bunch of styles that will only work.

58
00:03:40.830 --> 00:03:45.890
And that's a really kind of nice use for
switching out a bunch of stuff.

59
00:03:45.890 --> 00:03:50.850
If you have client that has a bunch of
different templates and you need to style

60
00:03:50.850 --> 00:03:54.900
a bunch of different things,
you could actually probably wrap that in

61
00:03:54.900 --> 00:03:59.660
a component that uses a slot and
use a style scoped tag

