WEBVTT

1
00:00:00.280 --> 00:00:02.280
&gt;&gt; Sarah: So
lets talk about transition modes.

2
00:00:02.280 --> 00:00:08.120
We talked about slots earlier and
we talked about some of the directives.

3
00:00:08.120 --> 00:00:13.380
There is a lot of stuff in View that
makes it so much easier to work with.

4
00:00:13.380 --> 00:00:17.705
Just like a small thing that you don't
have to keep doing, like dot prevent.

5
00:00:17.705 --> 00:00:21.655
How much do you use event,
dot prevent, default?

6
00:00:21.655 --> 00:00:22.995
You don't have to keep writing that.

7
00:00:22.995 --> 00:00:24.948
You can just attach it
to that click handler.

8
00:00:24.948 --> 00:00:25.575
Transition modes are one of those things.

9
00:00:25.575 --> 00:00:30.895
Transition modes are one of
those awesome things that,

10
00:00:30.895 --> 00:00:32.885
actually, other libraries
are borrowing now, too.

11
00:00:32.885 --> 00:00:35.145
There's a way to use this in React now,

12
00:00:35.145 --> 00:00:40.030
because people are moved from View to
React now for a client project, and

13
00:00:40.030 --> 00:00:42.720
we're like, no no no,
I can't do without my transition mode.

14
00:00:42.720 --> 00:00:45.900
So let's talk about them really quickly.

15
00:00:45.900 --> 00:00:50.360
We had mentioned before that
transitions are really powerful because

16
00:00:50.360 --> 00:00:54.960
things in real life, unlike computer life,
don't just pop in your face.

17
00:00:54.960 --> 00:00:59.300
Well, there's a point in time
when something is entering and

18
00:00:59.300 --> 00:01:04.150
something else is leaving,
what will usually happen is

19
00:01:04.150 --> 00:01:06.900
there's a point where both of
them are transitioning and

20
00:01:06.900 --> 00:01:10.560
they both exist in the dom at
the same time, and then it goes away.

21
00:01:10.560 --> 00:01:14.900
So this button is from the the docs,
that's an example of one of those times,

22
00:01:14.900 --> 00:01:17.330
it kind of goes and then it comes.

23
00:01:17.330 --> 00:01:21.680
And the way that we usually handle this,
in animation land,

24
00:01:21.680 --> 00:01:26.755
is a few of different ways and
CSS animations will cost cause a delay on

25
00:01:26.755 --> 00:01:31.945
one of those things entering, that's like
the length of time of the thing exiting.

26
00:01:31.945 --> 00:01:36.365
So that it won't appear like
it's going to do something.

27
00:01:36.365 --> 00:01:40.215
That's a little messy, because if you
decide that you wanna change the amount of

28
00:01:40.215 --> 00:01:43.015
time that that thing is transitioning or
something about that animation,

29
00:01:43.015 --> 00:01:47.475
you have to go back and find that delay,
as well, and change that into places.

30
00:01:47.475 --> 00:01:50.110
If you're working with
JavaScript animations,

31
00:01:50.110 --> 00:01:54.680
you have to register a callback and then
you get into these kind of callback hells.

32
00:01:54.680 --> 00:01:57.110
This other thing is done, and

33
00:01:57.110 --> 00:01:59.380
then it's gonna let you know
that the other thing's done.

34
00:01:59.380 --> 00:02:04.200
So this is actually a really really common
use case that we have to deal with, so

35
00:02:04.200 --> 00:02:08.180
transition modes, and this is an
interesting one I saw on Amazon the other

36
00:02:08.180 --> 00:02:12.440
day where it's just like one thing is
showing up and the other thing is going.

37
00:02:12.440 --> 00:02:15.980
So without really good transitions
we kind of lose an opportunity.

38
00:02:17.850 --> 00:02:23.070
What transition modes will allow
us to do is specify an order for

39
00:02:23.070 --> 00:02:27.255
those operations, so
it will allow us to say,

40
00:02:27.255 --> 00:02:31.030
okay let that thing go away and
when it's don,

41
00:02:31.030 --> 00:02:35.320
I'm gonna kick the next one off and it
will all come in to the dom, and you don't

42
00:02:35.320 --> 00:02:39.240
have to write any callback, you don't have
to write any weird delays or anything.

43
00:02:39.240 --> 00:02:43.710
You just have a vfvl's and write in out or

44
00:02:43.710 --> 00:02:47.360
out in and
view will do all of that logic for you.

45
00:02:47.360 --> 00:02:50.080
No matter what you do, no matter what
you change, it's gonna listen for

46
00:02:50.080 --> 00:02:52.890
it to be fully gone and
then it's gonna bring the other thing on.

47
00:02:52.890 --> 00:02:54.780
It's so cool.

48
00:02:54.780 --> 00:02:55.870
So in-out,

49
00:02:55.870 --> 00:03:00.760
the current element waits until the new
element is done transitioning in to fire.

50
00:03:00.760 --> 00:03:01.520
Or out-in,

51
00:03:01.520 --> 00:03:06.400
the current element transitions out and
the new the element transitions in.

52
00:03:06.400 --> 00:03:08.610
Pretty much,
you're always going to use Out-In.

53
00:03:08.610 --> 00:03:12.680
Like almost every single time because
that's the thing coming out fully and

54
00:03:12.680 --> 00:03:14.430
then the new thing coming in.

55
00:03:14.430 --> 00:03:17.830
The other one doesn't make
too much visual sense, but

56
00:03:17.830 --> 00:03:22.795
you can play around with it and and
see what I mean if you want to.

57
00:03:22.795 --> 00:03:26.475
So if we're gonna show, I'm gonna show
you what this transition mode looks like.

58
00:03:26.475 --> 00:03:28.125
We've got mode is out-in,

59
00:03:28.125 --> 00:03:32.512
we've got a transition, we've got a name
flip, we've got a mode out-in and

60
00:03:32.512 --> 00:03:36.762
we got the slot of if showing and
we've got this image source.

61
00:03:36.762 --> 00:03:39.942
So if we look at this demo ooh sorry.

62
00:03:39.942 --> 00:03:41.952
And so if we look at this demo,

63
00:03:41.952 --> 00:03:46.762
we can hover these guys and
I can replace these images.

64
00:03:46.762 --> 00:03:51.710
They look like they're one thing folding,
but they're not, they're two different

65
00:03:51.710 --> 00:03:56.110
things one is fading out, one is like
transitioning out, and going like this.

66
00:03:56.110 --> 00:03:59.730
And the other one is like
immediately transitioning in.

67
00:03:59.730 --> 00:04:03.210
So it ends up looking like
a card that's flipping, but

68
00:04:03.210 --> 00:04:07.310
that's because I know that view has got
my back and that out in is going to

69
00:04:07.310 --> 00:04:11.340
fire as soon as that one leaves the next
one is going to be able to come in and

70
00:04:11.340 --> 00:04:15.230
it'll look like one continuous motion,
so that's pretty nice.

71
00:04:15.230 --> 00:04:20.320
If we don't have these transition modes,
what ends up happening is we have one

72
00:04:20.320 --> 00:04:24.350
fade out, and the other faded in,
but you didn't see it.

73
00:04:24.350 --> 00:04:27.990
Because it happened behind the first one,
so they happened at the same time.

74
00:04:27.990 --> 00:04:31.340
You see a lot of animations that
look like this all over the web,

75
00:04:31.340 --> 00:04:33.990
just because it's too hard to
implement it the other way.

76
00:04:33.990 --> 00:04:38.780
But now Vue gives you a really really
easy quick way of working with that.

77
00:04:38.780 --> 00:04:44.080
So we've got our flip interactive,
and our flip interleave.

78
00:04:44.080 --> 00:04:48.010
We've got flip enter and flip leave too,
so we actually have to be

79
00:04:48.010 --> 00:04:51.920
kind of specific that they're
gonna scale y, so that's gonna.

80
00:04:51.920 --> 00:04:54.983
It's gonna look like
it's going like this but

81
00:04:54.983 --> 00:04:59.221
really it's just scaling Y down
this way and remember we've got

82
00:04:59.221 --> 00:05:03.593
that translate Z is zero on it.
&gt;&gt; Sarah: Okay,

83
00:05:03.593 --> 00:05:07.081
those were you know I built them up,
but they were actually really easy,

84
00:05:07.081 --> 00:05:09.110
you just slap it on the transition.

85
00:05:09.110 --> 00:05:10.560
We don't have to go into them any further.

