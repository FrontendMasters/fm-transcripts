WEBVTT

1
00:00:00.470 --> 00:00:03.817
&gt;&gt; Sarah Drasner: So it's one thing to
show things flying around the screen and

2
00:00:03.817 --> 00:00:08.095
stuff, and it's another one to teach
you how to actually make those things.

3
00:00:08.095 --> 00:00:14.421
So let's dive into animations, and
do some pretty fun stuff, I think.

4
00:00:14.421 --> 00:00:18.468
The first thing that I need to cover
before we talk about animations and

5
00:00:18.468 --> 00:00:19.370
transitions.

6
00:00:19.370 --> 00:00:22.336
And the transition component is
the difference between transitions and

7
00:00:22.336 --> 00:00:24.140
animations, because they are different.

8
00:00:24.140 --> 00:00:27.698
And I think actually people usually
get these a little bit confused.

9
00:00:27.698 --> 00:00:29.979
And then it starts to
get really confusing for

10
00:00:29.979 --> 00:00:33.834
people because things don't work the way
that they think that they should.

11
00:00:33.834 --> 00:00:37.702
Transitions and animations
are actually two separate things,

12
00:00:37.702 --> 00:00:40.502
with two separate ways
of implementing them.

13
00:00:40.502 --> 00:00:46.187
Transitions are taking one thing
that's one particular state and

14
00:00:46.187 --> 00:00:53.408
another thing that's same thing in another
state and interpolating those values.

15
00:00:53.408 --> 00:00:57.619
Just from one thing to another so and
a great example is a positive zero to

16
00:00:57.619 --> 00:01:01.073
a positive one, and
just going from one thing to another.

17
00:01:01.073 --> 00:01:05.928
In a missions on the other
hand can have multiple steps,

18
00:01:05.928 --> 00:01:10.379
so animations could do one
thing to another thing.

19
00:01:10.379 --> 00:01:13.972
Just like RXJS is not all
the same kind of thing.

20
00:01:13.972 --> 00:01:17.349
An animation can do the things
that transitions do but

21
00:01:17.349 --> 00:01:21.485
transitions cannot do all of
the things that an animation can do.

22
00:01:21.485 --> 00:01:24.383
Animations are slightly more powerful, and

23
00:01:24.383 --> 00:01:28.813
they have a slightly more complicated
syntax because of that power.

24
00:01:28.813 --> 00:01:32.247
And right now we're talking sort
of about CSS animations but

25
00:01:32.247 --> 00:01:34.745
this is true of JavaScript animations too.

26
00:01:34.745 --> 00:01:39.885
So animations can also have steps in
between so you can say something like

27
00:01:39.885 --> 00:01:45.462
I want this to happen at 30%, and
I want this to happen at 68% of the time.

28
00:01:45.462 --> 00:01:47.722
And I want this to open
at 75% of the time.

29
00:01:47.722 --> 00:01:51.433
So when you're working with
animations you typically name them so

30
00:01:51.433 --> 00:01:52.896
that you can access them.

31
00:01:52.896 --> 00:01:55.568
And they're also reusable for that reason.

32
00:01:55.568 --> 00:02:00.694
Transitions, you're really literally
saying you thing at this point go

33
00:02:00.694 --> 00:02:05.833
to you thing in that point and I want
you to do this kind of stuff in between.

34
00:02:05.833 --> 00:02:11.550
Cool, are we all clear on that piece
of it it before we keep going?

35
00:02:11.550 --> 00:02:15.028
All right, so we're gonna start off with,

36
00:02:15.028 --> 00:02:21.044
again we're starting off with the kind
of simplest and least useful maybe,

37
00:02:21.044 --> 00:02:25.754
and then we'll build up to
super powered and more complex.

38
00:02:25.754 --> 00:02:29.769
I think a modal example is
pretty common for the web.

39
00:02:29.769 --> 00:02:34.021
So what were gonna start off
with that simple transition.

40
00:02:34.021 --> 00:02:38.732
So if we have something like a modal
that pops up and says here I am, and

41
00:02:38.732 --> 00:02:43.628
there's some sort of slot with you
know more information inside of it.

42
00:02:43.628 --> 00:02:49.831
And in that modal were clicking and
it's gonna show, hide and show that child.

43
00:02:49.831 --> 00:02:53.976
And we have this,
just toggling that whether it's showing or

44
00:02:53.976 --> 00:02:58.455
not showing, it's basically just
toggling that back and forth.

45
00:02:58.455 --> 00:03:04.509
So we have this modal, Show Child,
Here I Am, Close, Here I am, Close.

46
00:03:04.509 --> 00:03:07.030
Okay, that's great.

47
00:03:07.030 --> 00:03:09.900
It's not actually like that interesting.

48
00:03:09.900 --> 00:03:14.376
And the other thing is, I think humans
haven't really been designed to

49
00:03:14.376 --> 00:03:17.894
understand fits and
starts of computer interactions.

50
00:03:17.894 --> 00:03:22.314
We don't see bullions in real life,
like you don't just pop into the class.

51
00:03:22.314 --> 00:03:26.065
You come from outside and
you enter and you walk into the room.

52
00:03:26.065 --> 00:03:28.743
So for humans having things
pop in our face like that

53
00:03:28.743 --> 00:03:31.553
it is really quite jarring and
not a good experience.

54
00:03:31.553 --> 00:03:35.744
If you think about the last
time you're on mobile and

55
00:03:35.744 --> 00:03:38.697
you're trying to read an article and

56
00:03:38.697 --> 00:03:44.042
some model just popped in your face,
you were probably like.

57
00:03:44.042 --> 00:03:46.661
We can improve that experience,

58
00:03:46.661 --> 00:03:51.250
really stop putting giant
models in mobile experiences.

59
00:03:51.250 --> 00:03:56.036
We can improve that experience slightly
if we can let the user know what is

60
00:03:56.036 --> 00:03:58.865
transitioning between those two events.

61
00:03:58.865 --> 00:04:03.729
So basically the equivalent of someone
walking into a room instead of just

62
00:04:03.729 --> 00:04:05.619
bursting into appearance.

63
00:04:05.619 --> 00:04:12.071
So the first thing we're gonna do is we're
gonna take that child that we created and

64
00:04:12.071 --> 00:04:16.141
we're gonna wrap it in
this transition component.

65
00:04:16.141 --> 00:04:19.189
And in that transition component
it's kind of like a reserved word.

66
00:04:19.189 --> 00:04:23.894
That transition component is particular
to view, it's built into view,

67
00:04:23.894 --> 00:04:25.247
I didn't make that.

68
00:04:25.247 --> 00:04:30.110
So that transition component will allow us
to plug in to a lot of functionality and

69
00:04:30.110 --> 00:04:33.053
I'll show you some diagrams
of this in a minute.

70
00:04:33.053 --> 00:04:36.945
But the other thing that's important
is that I have something that is being

71
00:04:36.945 --> 00:04:41.476
mounted and unmounted, and that's what the
transition component is really good at.

72
00:04:41.476 --> 00:04:45.368
The transition component is going to
assume that you are bringing something

73
00:04:45.368 --> 00:04:47.567
into existence and then making it go away.

74
00:04:47.567 --> 00:04:50.233
So there are animations
that we're gonna do and

75
00:04:50.233 --> 00:04:54.434
we're gonna use that don't necessarily
fit that transition component,

76
00:04:54.434 --> 00:04:57.984
not everything needs to work
with that transition component.

77
00:04:57.984 --> 00:05:01.248
Like you saw earlier when we plugged
into that mounted we didn't use

78
00:05:01.248 --> 00:05:05.502
a transition component for that because it
doesn't really necessarily make sense to.

79
00:05:05.502 --> 00:05:08.895
So not every use case is gonna
fit in this but a lot are,

80
00:05:08.895 --> 00:05:11.094
there's a lot of things that are.

81
00:05:11.094 --> 00:05:17.178
So the things you need here, again that
transition component and that V-IF.

82
00:05:17.178 --> 00:05:21.075
So here is basically what we're
looking at when we are looking at that

83
00:05:21.075 --> 00:05:22.494
transition component.

84
00:05:22.494 --> 00:05:26.150
We are gonna plug all of the things
that we want it to do when we're

85
00:05:26.150 --> 00:05:30.172
interpolating those values into
this interactive and leave active.

86
00:05:30.172 --> 00:05:34.217
So when we're saying vf, there's
a time where it's transitioning and

87
00:05:34.217 --> 00:05:37.214
then there's a time where
it's transitioning out.

88
00:05:37.214 --> 00:05:39.536
So that's the way that we want it to work.

89
00:05:39.536 --> 00:05:42.551
So in other words our eases
are gonna go in there.

90
00:05:42.551 --> 00:05:48.314
The number of seconds that we want that
transition to occur is gonna go in there.

91
00:05:48.314 --> 00:05:53.185
But what we have at the beginning and
the end of that is

92
00:05:53.185 --> 00:05:58.187
the state of the start and
the state of the end of that.

93
00:05:58.187 --> 00:06:01.254
So at v-enter, it's gonna be opacity 0.

94
00:06:01.254 --> 00:06:05.041
We're not gonna apply any eases to that,
that's just a static value,

95
00:06:05.041 --> 00:06:06.882
that's just gonna be opacity 0.

96
00:06:06.882 --> 00:06:11.072
V-enter-active is where we
put the animation logic, and

97
00:06:11.072 --> 00:06:16.622
then v-enter-to, is opacity 1, and
then same thing for leave basically.

98
00:06:16.622 --> 00:06:20.593
So you got the start,
the middle, and the end.

99
00:06:20.593 --> 00:06:26.111
So an example of this, the like probably
the simplest example of this that I

100
00:06:26.111 --> 00:06:32.086
could possibly muster is v interactive
has a transition of color and one second.

101
00:06:32.086 --> 00:06:35.819
So I'm letting it know that I wanna
transition to color property.

102
00:06:35.819 --> 00:06:37.501
I'm saying one second,

103
00:06:37.501 --> 00:06:41.915
and the browser's gonna by default
use ease as the easing value.

104
00:06:41.915 --> 00:06:45.093
So it's also reusable for
other components.

105
00:06:45.093 --> 00:06:49.367
We can say, fade-enter-active,
fade-leave-active,

106
00:06:49.367 --> 00:06:52.006
fade-enter, and fade-leave too.

107
00:06:52.006 --> 00:06:57.266
So I could not necessarily attach it
to that component, if I don't want to.

108
00:06:57.266 --> 00:07:01.842
I can actually just say anytime
I call some transition feed,

109
00:07:01.842 --> 00:07:04.096
I wanna it to behave this way.

110
00:07:04.096 --> 00:07:07.978
So, if I wrap anything in
a transition component and

111
00:07:07.978 --> 00:07:12.829
I name it feed it's gonna plug in
to these values, enter active,

112
00:07:12.829 --> 00:07:16.733
Leave active, feed enter,
and fade-leave-to.

113
00:07:16.733 --> 00:07:21.411
And there's a reason why I
didn't say opacity one here.

114
00:07:21.411 --> 00:07:25.811
We have the opacity zero, but
we don't have the opacity one, and

115
00:07:25.811 --> 00:07:27.733
I did say that you need both.

116
00:07:27.733 --> 00:07:32.672
Why didn't I do that, does anybody know?
&gt;&gt; Speaker 2: Because it's already

117
00:07:32.672 --> 00:07:34.367
set to opacity.
&gt;&gt; Sarah Drasner: What's that?

118
00:07:34.367 --> 00:07:35.429
&gt;&gt; Speaker 2: It's like that component's

119
00:07:35.429 --> 00:07:37.342
already at one, so
you don't have to worry about it.

120
00:07:37.342 --> 00:07:37.947
&gt;&gt; Sarah Drasner: That's right.

121
00:07:37.947 --> 00:07:42.793
Anything that's the default state of that
component, you don't have to say again.

122
00:07:42.793 --> 00:07:45.760
So you can eliminate some code and
you can eliminate some.

123
00:07:45.760 --> 00:07:48.680
And sometimes being opinionated
that way is not very useful.

124
00:07:48.680 --> 00:07:52.475
Because what if that component
was actually at opacity 0.8,

125
00:07:52.475 --> 00:07:54.933
and then you've just made it opacity 1,

126
00:07:54.933 --> 00:07:58.606
it's gonna flip like right away
into opacity 1 and go there.

127
00:07:58.606 --> 00:08:03.718
So you actually, in some ways you
wanna remain a little bit flexible

128
00:08:03.718 --> 00:08:09.206
in case somebody else had put some
sort of different color opacity on it.

129
00:08:09.206 --> 00:08:12.840
So in this case we're using ease-out for
this, but

130
00:08:12.840 --> 00:08:15.986
if we're gonna be a little
bit more refined.

131
00:08:15.986 --> 00:08:20.552
We're just reusing ease-out for
any time that we're using that transition.

132
00:08:20.552 --> 00:08:23.885
So we're basically saying enter active,
and leave active.

133
00:08:23.885 --> 00:08:27.021
Anytime it's transitioning we're
using the same easing value.

134
00:08:27.021 --> 00:08:30.537
But if you're gonna be more
refined about your eases,

135
00:08:30.537 --> 00:08:35.137
ease-outs are good for entrances,
and ease-ins are good for exits.

136
00:08:35.137 --> 00:08:38.875
I know that kinda sounds funky,
I didn't make up the names,

137
00:08:38.875 --> 00:08:41.399
that's not my fault, I can promise.

138
00:08:41.399 --> 00:08:44.164
[LAUGH] But that's a good rule
of thumb to get into your mind.

139
00:08:44.164 --> 00:08:49.024
Not in every circumstance but in a lot
of circumstances, those are the types of

140
00:08:49.024 --> 00:08:52.941
ease-ins values that you're gonna need for
it to look right.

141
00:08:52.941 --> 00:08:57.753
So, again, this is unnecessary as
it's the default, fade-enter-to,

142
00:08:57.753 --> 00:08:59.794
.fade-leave is opacity one.

143
00:08:59.794 --> 00:09:03.884
So now that we've wrapped it
in that transition component,

144
00:09:03.884 --> 00:09:07.826
we have something that's
transitioning on and closing.

145
00:09:07.826 --> 00:09:12.597
That's okay, but it could be
even a little bit better because

146
00:09:12.597 --> 00:09:15.819
what if we wanna make that background,.

147
00:09:15.819 --> 00:09:19.093
Right now the background is still
like let's say there's a ton

148
00:09:19.093 --> 00:09:22.444
of text back there and
we're still just seeing all of that text.

149
00:09:22.444 --> 00:09:26.158
So what if we wanna make that
background content fade out of view, so

150
00:09:26.158 --> 00:09:30.080
that the modal kinda takes center
stage and the background lost focus.

151
00:09:30.080 --> 00:09:32.630
And that's also kind of a normal thing,

152
00:09:32.630 --> 00:09:37.818
sometimes people put a sheen over the
whole thing, that's a pretty typical one.

153
00:09:37.818 --> 00:09:41.933
In this case we're just gonna use
a CSS filter and we're gonna blur it.

154
00:09:41.933 --> 00:09:45.326
But we can't use the transition
component for this, right.

155
00:09:45.326 --> 00:09:49.640
Because I just mentioned,
we're wrapping that component and it's for

156
00:09:49.640 --> 00:09:52.124
when it's VIF mounting and unmounting.

157
00:09:52.124 --> 00:09:56.717
So that whole background,
that doesn't apply to the background, but

158
00:09:56.717 --> 00:09:58.944
we have class and style bindings.

159
00:09:58.944 --> 00:10:02.737
So this is pretty cool,
we can apply a class to whether or

160
00:10:02.737 --> 00:10:06.876
not it saying blur class, for
whether it's showing or not.

161
00:10:06.876 --> 00:10:10.095
And we can apply transition
logic to that as well,

162
00:10:10.095 --> 00:10:14.091
we don't have to necessarily
use the transition component.

163
00:10:14.091 --> 00:10:21.284
So in this case I'm gonna say the BK is
like transition all, one second ease out.

164
00:10:21.284 --> 00:10:26.918
And that blur class that we're gonna plug
into in the data is gonna be everything

165
00:10:26.918 --> 00:10:31.809
gets blurred two pixels, and
the opacity reduces just a little bit.

166
00:10:31.809 --> 00:10:34.952
And BK class is gonna be BK.

167
00:10:34.952 --> 00:10:37.100
And blur class is going to be blur.

168
00:10:37.100 --> 00:10:42.516
So we're applying two different
classes to it as it goes.

169
00:10:42.516 --> 00:10:45.122
So then we've got something like that.

170
00:10:45.122 --> 00:10:47.913
And this is not like super fancy or
anything,

171
00:10:47.913 --> 00:10:51.228
I'm kind of keeping things
a little bit more simple.

172
00:10:51.228 --> 00:10:55.320
But you can now see how you'd would
use a transition component and

173
00:10:55.320 --> 00:10:58.679
maybe also affect other
things with the same toggle.

174
00:10:58.679 --> 00:11:02.870
Like, we're actually using In
this one we're still using is

175
00:11:02.870 --> 00:11:05.539
showing false to generate that logic.

176
00:11:05.539 --> 00:11:11.419
It's all plugged in to that same state
of whether or not is showing as false.

177
00:11:11.419 --> 00:11:16.873
And that's kind of good because then if
something moves you're keeping everything

178
00:11:16.873 --> 00:11:22.040
attached to that one toggle, not having
it here and then there at the same time.

