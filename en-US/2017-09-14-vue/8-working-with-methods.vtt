WEBVTT

1
00:00:00.280 --> 00:00:03.080
&gt;&gt; Sarah: A lot of times we're probably
not going to be changing the hue

2
00:00:03.080 --> 00:00:06.100
on the entire page [LAUGH]
on the mouse event.

3
00:00:06.100 --> 00:00:08.370
So let's look at a kind
of more common used case.

4
00:00:08.370 --> 00:00:10.760
We're gonna build off of this
demo through the course.

5
00:00:11.830 --> 00:00:15.950
So we've got something like this woman
saying that it's lovely after it rains.

6
00:00:15.950 --> 00:00:20.910
It's comment form, and if I wanna
add a comment, I say I like tacos,

7
00:00:20.910 --> 00:00:26.340
and that will be appended to,
like as a new comment.

8
00:00:26.340 --> 00:00:30.510
So as we're working
with that Vue instance,

9
00:00:30.510 --> 00:00:34.360
we start off with new
comment is an empty string.

10
00:00:34.360 --> 00:00:39.020
We have comments which is an array of all
of the comments that we currently have.

11
00:00:39.020 --> 00:00:42.520
And then in our methods,
we have a thing called add comments.

12
00:00:42.520 --> 00:00:47.478
In add comments, we're gonna take
this.comments and we're gonna push

13
00:00:47.478 --> 00:00:53.020
this.newComment on to that array then
empty it so when we're done with it.

14
00:00:53.020 --> 00:00:57.715
You might have assumed, but in case you
didn't, that what we have here is an li

15
00:00:57.715 --> 00:01:03.200
v-for comment in comments in outputing
the comment, you've seen that already.

16
00:01:03.200 --> 00:01:07.080
And then in the input we have
a v-model that's that new comment.

17
00:01:07.080 --> 00:01:12.910
That empty string is that v-model, so
as I'm typing it's going to access that.

18
00:01:12.910 --> 00:01:17.650
But then I say @keyup.enter so
I don't want to keep submitting

19
00:01:17.650 --> 00:01:21.740
that method that's going to add it to
the form every single time I'm typing.

20
00:01:21.740 --> 00:01:25.560
I want to make sure that
I'm saying @keyup.enter so

21
00:01:25.560 --> 00:01:29.880
that when I hit the enter key then
that we're adding it to the form.

22
00:01:29.880 --> 00:01:34.530
So that's that addComment placeholder
is just a normal HTML thing.

23
00:01:34.530 --> 00:01:37.700
So if we look back,
that's that addComment, and

24
00:01:37.700 --> 00:01:41.070
addComment is the method
that we're executing here.

25
00:01:41.070 --> 00:01:46.180
So it's actually like almost no code
to make create this comment form which

26
00:01:46.180 --> 00:01:51.259
I absolutely love, that's really,
really, really fun and easy to use.

27
00:01:53.034 --> 00:01:57.761
So another thing that we kind of typically
do is we need some responses from

28
00:01:57.761 --> 00:01:58.460
a server.

29
00:01:58.460 --> 00:02:03.780
So I'm going to use Axios in this demo and
we're just going to have our name.

30
00:02:05.420 --> 00:02:07.860
I have my Chrome autofill,
that's my email.

31
00:02:07.860 --> 00:02:12.872
I don't have to hide it from you cuz it's
my name and you'll probably figure it out.

32
00:02:12.872 --> 00:02:15.950
[LAUGH] And how do I turn off caps lock?

33
00:02:15.950 --> 00:02:18.380
I don't know, and

34
00:02:18.380 --> 00:02:23.110
then I submit it and then the response
from the server is getting outputted here.

35
00:02:23.110 --> 00:02:28.720
If we look at the code which
we should definitely do.

36
00:02:28.720 --> 00:02:33.580
In here we have a bunch of those labels,
and the inputs labels,

37
00:02:33.580 --> 00:02:35.990
and the inputs as we have done before.

38
00:02:35.990 --> 00:02:39.670
We have our v-model for
name that's connected to the name,

39
00:02:39.670 --> 00:02:42.050
which is currently an empty string.

40
00:02:42.050 --> 00:02:45.500
I'm writing required, so
that HTML5 is going to validate.

41
00:02:45.500 --> 00:02:47.470
Do people even say HTML5 anymore?

42
00:02:47.470 --> 00:02:52.410
I don't know,
HTML is gonna validate those form inputs,

43
00:02:52.410 --> 00:02:56.680
and make sure that I can't submit
the form until it's working.

44
00:02:56.680 --> 00:03:01.920
But I also have that
quick way of writing so

45
00:03:01.920 --> 00:03:05.890
that if people haven't filled out this
form yet, it's not actually going,

46
00:03:05.890 --> 00:03:08.730
that submit button is actually
not going to show up.

47
00:03:08.730 --> 00:03:11.720
So I could do execute other
kinds of logic for this as well.

48
00:03:12.780 --> 00:03:18.380
Then, we have this response
that's an empty string.

49
00:03:18.380 --> 00:03:19.920
And, in our methods,

50
00:03:19.920 --> 00:03:25.200
we're gonna say submit form, so
this is all part of one form.

51
00:03:25.200 --> 00:03:27.620
So the submit is not on the submit button.

52
00:03:27.620 --> 00:03:29.720
The submit is on the form itself.

53
00:03:29.720 --> 00:03:33.610
And we say @submit.prevent,
so that's that modifier

54
00:03:33.610 --> 00:03:38.500
of e.prevent default that we're
kind of used to writing for forms.

55
00:03:38.500 --> 00:03:42.910
So we say submit form and
then in our methods we have submit form.

56
00:03:43.940 --> 00:03:48.300
In axios.post, I'm actually using this
thing called typicode which is fake

57
00:03:48.300 --> 00:03:51.370
server responses for
the purposes of demos, so

58
00:03:51.370 --> 00:03:52.910
that we don't have to
set up a bunch of stuff.

59
00:03:52.910 --> 00:03:57.560
So if you're ever making a demo,
that's a kind of fun one to use.

60
00:03:57.560 --> 00:03:59.310
Here, we're making a relationship.

61
00:03:59.310 --> 00:04:02.500
We're actually creating a new
object that we're sending there.

62
00:04:02.500 --> 00:04:07.234
So we're saying userID is this.userID,
name is this.name,

63
00:04:07.234 --> 00:04:10.360
that's all of these guys here.

64
00:04:10.360 --> 00:04:14.567
Then response, I'm saying
this.response is JSON.stringify,

65
00:04:14.567 --> 00:04:19.805
that's just that we're like creating it so
that you can actually see the response,

66
00:04:19.805 --> 00:04:22.705
and that's just outputting
that as a string.

67
00:04:22.705 --> 00:04:26.188
So this is just like the number
of spaces and things, so

68
00:04:26.188 --> 00:04:28.910
that you can see the response here.

69
00:04:28.910 --> 00:04:31.770
And we also are catching
any errors that we

70
00:04:32.770 --> 00:04:35.410
have in case there
are errors from that form.

71
00:04:35.410 --> 00:04:42.130
So, not a lot of stuff in order to create
a form with a response from a server.

72
00:04:42.130 --> 00:04:45.640
I really love Axios, if you're not
familiar with Axios, it's a library.

73
00:04:46.650 --> 00:04:49.654
It does a lot of the things that
you're used to jQuery doing but

74
00:04:49.654 --> 00:04:53.130
you don't have for AJAX, but
you don't have to load all of jQuery.

75
00:04:53.130 --> 00:04:55.150
It's much smaller than jQuery is.

76
00:04:55.150 --> 00:04:57.140
So if you're using something like Vue, and

77
00:04:57.140 --> 00:05:01.980
you need that kind of form submission,
Axios is a really, really cool thing.

78
00:05:01.980 --> 00:05:03.390
Also the guy who writes it is really nice.

79
00:05:03.390 --> 00:05:07.910
[LAUGH] Which is not important but
kind of important.

80
00:05:07.910 --> 00:05:10.910
So we've got our form submit.prevent.

81
00:05:10.910 --> 00:05:15.040
We're submitting the form and
that calls this method.

82
00:05:15.040 --> 00:05:17.810
So that could really be
anything that you need

83
00:05:17.810 --> 00:05:19.940
to execute as you're submitting that form.

84
00:05:22.460 --> 00:05:26.680
Let's say we have a bunch of Netflix data,
and this is actually real Netflix data.

85
00:05:26.680 --> 00:05:32.410
So these are all of these titles and
a bunch of these user ratings for

86
00:05:32.410 --> 00:05:37.310
each show that's worth showing here.

87
00:05:37.310 --> 00:05:40.470
So we got two buttons,
we got lowest rated and highest rated.

88
00:05:40.470 --> 00:05:45.410
So we're going to sort by lowest rated and
it sorts lowest to highest, and

89
00:05:45.410 --> 00:05:47.180
then highest rated.

90
00:05:47.180 --> 00:05:50.050
I have no idea why Black Mirror is like so
low rated,

91
00:05:50.050 --> 00:05:53.060
I love that show,
maybe it's too creepy for people.

92
00:05:53.060 --> 00:05:57.680
And then highest rated we've got Gray's
Anatomy is really hot, I don't know,

93
00:05:57.680 --> 00:06:00.250
I don't know why people like
the things that they like.

94
00:06:00.250 --> 00:06:06.230
So we got the,
this basic sorting of these forms.

95
00:06:06.230 --> 00:06:08.360
Lets take a look here at the code.

96
00:06:09.420 --> 00:06:14.082
In the ratings info we have
an array called ratings info and

97
00:06:14.082 --> 00:06:18.930
that's going to house all of
our titles and our ratings and

98
00:06:18.930 --> 00:06:21.800
the ratings are just numbers and
the titles are strings.

99
00:06:21.800 --> 00:06:25.330
We have title and ratings so
that we can create two columns from them.

100
00:06:26.330 --> 00:06:30.810
If we go look at the table here,
we have a table and

101
00:06:30.810 --> 00:06:34.320
we're going to say key and
column to create the columns.

102
00:06:34.320 --> 00:06:38.401
So one thing to note is,
up until now we've been saying

103
00:06:38.401 --> 00:06:42.621
something like Item in
items,or something like that.

104
00:06:42.621 --> 00:06:46.621
English doesn't necessarily have
the best pluralization all the time.

105
00:06:46.621 --> 00:06:50.638
Like if you have bunch of octopi,
you'd have octopus and

106
00:06:50.638 --> 00:06:55.390
then octopi, so It's not just
appending an s, and taking the s off.

107
00:06:55.390 --> 00:06:59.450
You can actually write whatever
you need for this one.

108
00:06:59.450 --> 00:07:03.820
It can be anything, I wrote key in
columns, you could write anything.

109
00:07:03.820 --> 00:07:07.240
Inside of ratingsInfo,
I said entry in ratingsInfo.

110
00:07:07.240 --> 00:07:14.570
But I could have also said ratings info
item, or you know, whatever I wanted to.

111
00:07:14.570 --> 00:07:19.690
So, we've got these nested v-fors and then
we're outputting pieces of that table.

112
00:07:19.690 --> 00:07:25.890
So, that whole table is drawn from
these v-for, v-for directives.

113
00:07:25.890 --> 00:07:29.120
Then we have these buttons
with click events on them.

114
00:07:29.120 --> 00:07:32.740
So we say @click sortLowest and
sortHighest.

115
00:07:32.740 --> 00:07:35.030
That's my very fancy naming schema.

116
00:07:35.030 --> 00:07:41.150
And in the methods we've got sortLowest
and again like I said before, you

117
00:07:41.150 --> 00:07:46.426
can't use an arrow function here but you
can use it inside of the method itself.

118
00:07:46.426 --> 00:07:51.760
So we're saying this.ratingsInfo,
remember this is ratingsInfo here.

119
00:07:51.760 --> 00:07:58.830
So this.ratingsInfo.sort which is
JavaScript, and we're passing in A and B.

120
00:07:58.830 --> 00:08:01.400
And we're just sorting
them based on a ternary,

121
00:08:01.400 --> 00:08:04.610
just figuring out which one is higher and
which one is lower.

122
00:08:06.480 --> 00:08:09.880
So, pretty cool,
we've drummed up, drummed up?

123
00:08:09.880 --> 00:08:11.560
I don't think that's a word.

124
00:08:11.560 --> 00:08:16.880
We can drum up something that's a kind of
complex sorting thing pretty quickly and

125
00:08:16.880 --> 00:08:19.740
pretty easily with these directives and
with these methods.

