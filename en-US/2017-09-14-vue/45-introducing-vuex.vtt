WEBVTT

1
00:00:00.250 --> 00:00:03.880
&gt;&gt; Sarah Drasner: All right,
we're going to cover Vuex very quickly.

2
00:00:03.880 --> 00:00:08.140
Vuex is definitely one thing that
we can get into the weeds on, and

3
00:00:08.140 --> 00:00:12.440
I would prefer if we didn't because
this is an introductory course.

4
00:00:12.440 --> 00:00:15.890
I think the more we kind
of go into edge cases,

5
00:00:15.890 --> 00:00:20.830
and crazy other things,
the less people might understand.

6
00:00:20.830 --> 00:00:25.310
So, we're going to go over
the basic functionality of VueX and

7
00:00:25.310 --> 00:00:27.540
how to get going and how to get started.

8
00:00:27.540 --> 00:00:30.240
And how to create a centralized store for
your application so

9
00:00:30.240 --> 00:00:34.060
that you can get going using it for
your application if you need to.

10
00:00:34.060 --> 00:00:39.860
But before we talk about all of that
stuff, let's talk about what VueX is.

11
00:00:39.860 --> 00:00:41.320
So what is VueX?

12
00:00:41.320 --> 00:00:46.410
If you haven't worked with something like
Redux before you might not understand or

13
00:00:46.410 --> 00:00:49.120
not have an idea of what this might do.

14
00:00:49.120 --> 00:00:52.330
You might see that in our components and

15
00:00:52.330 --> 00:00:56.270
in our application we're passing
things like props between components.

16
00:00:56.270 --> 00:00:58.980
We're passing things like
events between components and

17
00:00:58.980 --> 00:01:03.880
sometimes we have these,
we're passing things from parent to child.

18
00:01:03.880 --> 00:01:05.890
But sometimes we have a lot
of sibling communication and

19
00:01:05.890 --> 00:01:10.790
sometimes we have a lot of shared
state across an application.

20
00:01:10.790 --> 00:01:15.860
So this is really, VueX is really nice
to create a centralized store for

21
00:01:15.860 --> 00:01:20.610
sharing data and logic or
even shared methods and async values.

22
00:01:20.610 --> 00:01:25.580
But this is for
probably larger applications,

23
00:01:25.580 --> 00:01:30.800
it's not for a tiny thing like the things
that we've been building so far today.

24
00:01:30.800 --> 00:01:35.210
We have unidirectional data flow, so
that's a really nice thing because we

25
00:01:35.210 --> 00:01:38.990
keep things from becoming really,
really convoluted.

26
00:01:38.990 --> 00:01:42.620
It's influenced by Flux application
architecture, which is similar to Redux.

27
00:01:42.620 --> 00:01:44.130
It's very, very similar to Redux.

28
00:01:44.130 --> 00:01:47.810
It's basically a Vue's version of Redux.

29
00:01:47.810 --> 00:01:52.210
You can use Redux, if you would like.

30
00:01:52.210 --> 00:01:54.550
Vue is compatible with Redux.

31
00:01:54.550 --> 00:01:56.590
So if you're really married to Redux, or

32
00:01:56.590 --> 00:01:58.710
you're bringing it into
an application where for some reason,

33
00:01:58.710 --> 00:02:03.450
you have Vue and React in the same
application, you could do that.

34
00:02:03.450 --> 00:02:05.420
But I really suggest
that if you're using Vue,

35
00:02:05.420 --> 00:02:11.080
you should use Vuex because Vuex is
built and created for a Vue application.

36
00:02:11.080 --> 00:02:15.135
So if there are updates in
the future in either direction,

37
00:02:15.135 --> 00:02:19.095
let's say Redux shifts path,
and goes in another direction.

38
00:02:19.095 --> 00:02:23.575
You kinda know that VueX is always
gonna move alongside of VueX and so

39
00:02:23.575 --> 00:02:25.635
that kind of keeps everything very stable.

40
00:02:26.735 --> 00:02:30.600
Why would we use something like Vue X?

41
00:02:30.600 --> 00:02:33.360
In a complex single page application,

42
00:02:33.360 --> 00:02:38.700
passing state between many different
components and especially deeply nested or

43
00:02:38.700 --> 00:02:41.960
sibling components can get
complicated really quickly.

44
00:02:41.960 --> 00:02:45.510
So having one centralised
place to access your data

45
00:02:45.510 --> 00:02:47.940
can really help you stay organized.

46
00:02:47.940 --> 00:02:51.800
A lot of times when people say,
when should you introduce VueX?

47
00:02:51.800 --> 00:02:54.008
People say, you just know.

48
00:02:54.008 --> 00:02:58.742
That's true, [LAUGH] technically, you kind
of get to a point in your application

49
00:02:58.742 --> 00:03:02.431
logic where you're like,
this doesn't make sense anymore,

50
00:03:02.431 --> 00:03:05.513
I really need to be moving
into a centralized store.

51
00:03:05.513 --> 00:03:10.300
But it doesn't explain very much, so let's
kind of go into this a little bit more.

52
00:03:10.300 --> 00:03:14.360
Multiple instances of children and
siblings communicating and just kind of

53
00:03:14.360 --> 00:03:20.030
all over the place, but sharing the same
types of logic across the application.

54
00:03:20.030 --> 00:03:23.110
Or one nice thing about

55
00:03:23.110 --> 00:03:27.380
keeping it in a centralized store is
it's kind of self-documenting in a way.

56
00:03:27.380 --> 00:03:29.750
There are other ways of
sharing logic between and

57
00:03:29.750 --> 00:03:33.030
events between different component.

58
00:03:33.030 --> 00:03:35.740
One we didn't cover
today was an event bus,

59
00:03:35.740 --> 00:03:38.300
we could do that with
an event bus as well.

60
00:03:38.300 --> 00:03:42.410
But event buses can kind of be
a in a bunch of different places.

61
00:03:42.410 --> 00:03:47.670
If you have one centralized state store,
you have it in one place, you can

62
00:03:47.670 --> 00:03:52.550
kind of understand, here is my state, here
are the ways that I'm getting that state.

63
00:03:52.550 --> 00:03:54.680
Here are the ways that
I'm mutating that state,

64
00:03:54.680 --> 00:03:57.210
and here are the ways that
I'm using it asynchronously.

65
00:03:57.210 --> 00:04:03.890
And you have it in one kind of place that
you can access and kind of keep organized.

66
00:04:03.890 --> 00:04:06.700
So that's something that I
particularly like about it.

67
00:04:07.790 --> 00:04:11.400
It is not a replacement for
single component methods.

68
00:04:11.400 --> 00:04:14.660
If you have a single component and
you've got some state in there, and

69
00:04:14.660 --> 00:04:18.560
you're using methods on the component,
don't put that into a store.

70
00:04:18.560 --> 00:04:23.380
Or don't start introducing VueX to
handle that single components logic.

71
00:04:23.380 --> 00:04:24.770
That's not a good use for VueX.

