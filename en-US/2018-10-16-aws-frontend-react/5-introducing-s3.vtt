WEBVTT

1
00:00:03.256 --> 00:00:04.680
&gt;&gt; Steve Kinney: All right,
let's talk a little bit about S3.

2
00:00:05.820 --> 00:00:09.540
First of all, this is the logo for
S3, I'm glad we covered that.

3
00:00:09.540 --> 00:00:11.250
What does S3 stand for?

4
00:00:11.250 --> 00:00:13.990
It stands for Simple Storage Service.

5
00:00:13.990 --> 00:00:20.910
Along with EC2 this was one of the first
services offered by Amazon Web Services.

6
00:00:20.910 --> 00:00:23.770
Now we saw that like really
overwhelming drop down,

7
00:00:23.770 --> 00:00:26.320
once upon a time there
was just like one or two.

8
00:00:26.320 --> 00:00:28.610
So, what is S3 at a very high level?

9
00:00:29.930 --> 00:00:32.400
We have these things called S3 buckets and

10
00:00:32.400 --> 00:00:37.300
you can put objects into buckets and
so we're gonna create one.

11
00:00:37.300 --> 00:00:39.942
We might create one for
every site that we want to deploy, right?

12
00:00:39.942 --> 00:00:44.040
Essentially we have a bucket for staging,
we have a bucket for production,

13
00:00:44.040 --> 00:00:45.280
we have a bucket for end to end.

14
00:00:45.280 --> 00:00:48.500
So we might deploy the same application
into each one of those environments so

15
00:00:48.500 --> 00:00:50.390
they're each configured
a little bit differently.

16
00:00:50.390 --> 00:00:53.034
In this case, we're just gonna
setup a production bucket.

17
00:00:53.034 --> 00:00:57.457
One of the things that I aspire to do
is basically create buckets on every

18
00:00:57.457 --> 00:01:00.627
poll request so
we can have any given branch can have

19
00:01:00.627 --> 00:01:05.680
a testable version of the application,
but we are not totally there yet.

20
00:01:05.680 --> 00:01:09.760
So we put objects into buckets, we can
read files from buckets, and we can host

21
00:01:09.760 --> 00:01:12.900
web pages out of buckets, which is kinda
what we're going to be doing today.

22
00:01:14.400 --> 00:01:16.220
So, why is S3 awesome?

23
00:01:16.220 --> 00:01:18.870
One it is infinitely scalable, right?

24
00:01:18.870 --> 00:01:22.110
You don't have to worry,
especially where deploying static assets,

25
00:01:22.110 --> 00:01:25.580
we don't have to worry about being
on the front page of hacker news or

26
00:01:25.580 --> 00:01:28.830
like identifiable or something like
that or getting taken down, right?

27
00:01:28.830 --> 00:01:31.810
It will scale along with
anything that we can throw at it.

28
00:01:32.860 --> 00:01:36.800
Files can be as small as zero bytes or
as large as five terabytes.

29
00:01:37.980 --> 00:01:42.240
Well, there's a joke in here somewhere
about client-side frameworks growing

30
00:01:42.240 --> 00:01:43.390
bigger and bigger.

31
00:01:43.390 --> 00:01:49.490
Ours are now gonna be five terabytes
be significantly smaller than that.

32
00:01:49.490 --> 00:01:53.570
And the kind of really interesting things,
is out of the box if you get the standard

33
00:01:53.570 --> 00:01:58.780
tier of S3 bucket, the durability
is I believe is 11 nines, right?

34
00:01:58.780 --> 00:02:03.230
So generally speaking, the files
you put there are gonna be there.

35
00:02:03.230 --> 00:02:04.840
Availability is only four nines.

36
00:02:05.860 --> 00:02:09.000
Things can happen where a given region, so

37
00:02:09.000 --> 00:02:12.960
really quick regions in AWS,
there are multiple data centers.

38
00:02:12.960 --> 00:02:16.140
You choose which one you
wanna put your assets into.

39
00:02:16.140 --> 00:02:23.606
If you are really paranoid is not the
right word, professional, how about that?

40
00:02:23.606 --> 00:02:26.160
You might setup all of your services,

41
00:02:26.160 --> 00:02:30.620
even your back-end services in multiple
regions, cuz if a region goes down, and

42
00:02:30.620 --> 00:02:35.000
all of your stuff was in one region,
you've gone down.

43
00:02:35.000 --> 00:02:37.680
I think US East 1, which is the one we're
gonna be using for most of the day,

44
00:02:37.680 --> 00:02:40.100
had an outage about a year ago.

45
00:02:40.100 --> 00:02:41.030
The nice part is,

46
00:02:41.030 --> 00:02:45.160
like yes, your website will go down
if AWS goes down in that region.

47
00:02:45.160 --> 00:02:47.332
Luckily, so
will like most of the Internet.

48
00:02:47.332 --> 00:02:49.536
So, you'll be in good company, but

49
00:02:49.536 --> 00:02:54.233
a certain point deploying to multiple
regions makes sense if you have a certain

50
00:02:54.233 --> 00:02:57.850
SLA with your customers, or
something along those lines.

51
00:02:57.850 --> 00:02:59.831
So it's not great for instance,

52
00:02:59.831 --> 00:03:04.646
all of our back-end services are
multi-region or aspire to be multi-region,

53
00:03:04.646 --> 00:03:08.490
because that stuff is like databases and
stuff like that.

54
00:03:08.490 --> 00:03:12.630
For us, CloudFront is actually
distributed around the world.

55
00:03:12.630 --> 00:03:14.560
That's what makes it a CDN.

56
00:03:14.560 --> 00:03:18.990
So for the most part anything that
was a cache hit would still work and

57
00:03:18.990 --> 00:03:21.370
at that point we can always,
we deploy to a second bucket and

58
00:03:21.370 --> 00:03:23.320
we actually just switch to the DNS.

59
00:03:23.320 --> 00:03:26.740
We don't worry about it so much, but
it's definitely something to think about.

60
00:03:26.740 --> 00:03:30.568
Which is that the three nines
of availability is a lot less

61
00:03:30.568 --> 00:03:33.135
then the eleven nines of durability.

62
00:03:33.135 --> 00:03:34.750
That's some math lessons for you all.

63
00:03:36.290 --> 00:03:39.160
Cool, and S3 has a lot of features.

64
00:03:39.160 --> 00:03:43.930
Many of them we don't need for
deploying client side applications, right?

65
00:03:43.930 --> 00:03:46.490
Yes, we're gonna put our
static assets up there.

66
00:03:46.490 --> 00:03:50.630
Other use cases for S3 would be like,
hosting, if you had like an image hosting

67
00:03:50.630 --> 00:03:52.380
website, you would probably
put those images, right?

68
00:03:52.380 --> 00:03:54.560
When we send what we have,

69
00:03:54.560 --> 00:03:58.200
when somebody uploads an image to
our marketing campaign editor,

70
00:03:58.200 --> 00:04:02.420
we put that file on S3 so that when they
send the email, it's on the Internet.

71
00:04:02.420 --> 00:04:05.240
Otherwise it'd just be a little
broken image, and that would be sad.

72
00:04:05.240 --> 00:04:08.930
And so there's stuff like life cycle
management, stuff coming into the bucket,

73
00:04:08.930 --> 00:04:09.780
out of the bucket.

74
00:04:09.780 --> 00:04:14.400
Versioning you can turn on for an extra
cost, encryption, additional security.

75
00:04:14.400 --> 00:04:18.440
Most of those will cost you
some amount of extra money.

76
00:04:18.440 --> 00:04:22.570
We don't necessarily need those for
what we're doing today.

77
00:04:22.570 --> 00:04:26.690
There's also different kinds of buckets,
standard, which is what we're gonna use.

78
00:04:26.690 --> 00:04:30.570
And then effectively like
cheaper versions, right?

79
00:04:30.570 --> 00:04:35.120
So infrequently accessed, let's say you
were like building big CSV reports for

80
00:04:35.120 --> 00:04:39.790
like, let's say a medical company,
insurance company, right?

81
00:04:39.790 --> 00:04:42.140
Those might not be accessed
all that often, right?

82
00:04:42.140 --> 00:04:45.070
And so we can kind of put it
on the back shelves up high.

83
00:04:45.070 --> 00:04:49.000
It might take a little longer to get,
but you pay a lot less especially if

84
00:04:49.000 --> 00:04:53.630
these are large files and
then you, for that, yeah.

85
00:04:53.630 --> 00:04:55.680
It takes little longer to get it,
but if this a CSV,

86
00:04:55.680 --> 00:04:59.940
it's only accessed once every like
six months, that's fine, right?

87
00:04:59.940 --> 00:05:03.100
It's not like a high frequency file.

88
00:05:03.100 --> 00:05:07.290
So this would be terrible for your
client side application because ideally

89
00:05:07.290 --> 00:05:11.080
that is very frequently accessed,
every time somebody visits your page.

90
00:05:11.080 --> 00:05:15.460
Reduced redundancy, this is good for
anything you could afford to lose.

91
00:05:15.460 --> 00:05:17.780
Remember those eleven nines of durability?

92
00:05:17.780 --> 00:05:21.639
This is less than that and so
an example, let's say you had a meme

93
00:05:21.639 --> 00:05:26.083
generator that you could generate
the images programatically, right?

94
00:05:26.083 --> 00:05:28.820
So that if you lost an image
you could regenerate it.

95
00:05:28.820 --> 00:05:31.580
That would be a good use case for
reduced redundancy.

96
00:05:31.580 --> 00:05:36.590
Again, we don't wanna be in the position
where our client-side app went away.

97
00:05:36.590 --> 00:05:41.840
Yes, we could probably regenerate it,
but I suffer pager duty,

98
00:05:41.840 --> 00:05:44.730
I don't enjoy getting paged
in the middle of the night.

99
00:05:44.730 --> 00:05:50.420
We have had fun things where someone
set bucket settings to delete files,

100
00:05:50.420 --> 00:05:54.140
and so one night,
our client-side application was gone.

101
00:05:54.140 --> 00:05:57.010
Because somebody, years before I started
working there, had set what they thought

102
00:05:57.010 --> 00:06:02.780
was a really generous amount of time for
a file to sit on the server.

103
00:06:02.780 --> 00:06:05.090
And we were all surprised at the same.

104
00:06:06.370 --> 00:06:12.100
Glacier technically isn't S3 but
it's basically it's very cheap.

105
00:06:12.100 --> 00:06:15.910
It's even less than infrequently access.

106
00:06:15.910 --> 00:06:18.280
This is like almost never accessed, right?

107
00:06:18.280 --> 00:06:20.730
Basically you can put in think
of it as like cold storage.

108
00:06:21.940 --> 00:06:25.890
It is timely and expensive to get
that data like out of glacier.

109
00:06:25.890 --> 00:06:28.970
But you can like store lots
of back up in there, right?

110
00:06:28.970 --> 00:06:34.017
We're sticking predominantly
with the standard tier.

111
00:06:34.017 --> 00:06:35.629
So, S3 when we have buckets and

112
00:06:35.629 --> 00:06:40.030
when you put files in buckets it's easy
to think about it as like a file system.

113
00:06:40.030 --> 00:06:43.240
Right, it'll even show you fake
directories if you do that.

114
00:06:43.240 --> 00:06:45.480
But effectively it is
a single key value store.

115
00:06:45.480 --> 00:06:48.190
So that whole folder
structure is the key and

116
00:06:48.190 --> 00:06:52.280
the value is the actual file
itself that you uploaded, right?

117
00:06:54.190 --> 00:06:55.900
Cool, and a few things.

118
00:06:55.900 --> 00:06:57.583
I have never gotten bitten by this, but

119
00:06:57.583 --> 00:07:00.750
just in case you do get bitten by it
this is a public service announcement.

120
00:07:01.820 --> 00:07:06.930
Which is when you put a brand new object
into S3, it is immediately available.

121
00:07:07.960 --> 00:07:12.840
It all happens through the API,
you get back a 200, that file is there.

122
00:07:12.840 --> 00:07:16.915
Updating, which means if you replace
an object with a newer version or

123
00:07:16.915 --> 00:07:20.780
removing object,
this is eventually consistent, right?

124
00:07:20.780 --> 00:07:24.490
In order to have that durability they're
putting that file a lot of places.

125
00:07:24.490 --> 00:07:29.620
You might get back an old version,
I say might.

126
00:07:29.620 --> 00:07:33.520
This is actually, I never had a deploy
where we went to go check on it.

127
00:07:33.520 --> 00:07:36.980
And we had the old version of the app,
and were confused for a second.

128
00:07:36.980 --> 00:07:40.180
I have never personally experienced this,
but

129
00:07:40.180 --> 00:07:45.010
if it ever happens to you, remember this
moment, that it's not necessarily weird.

130
00:07:45.010 --> 00:07:49.660
It's part of what you were promised,
but you may never see that or

131
00:07:49.660 --> 00:07:50.310
have to deal with that.

132
00:07:51.770 --> 00:07:56.840
Cool, uploading to S3 is free,
so putting the files on to S3.

133
00:07:56.840 --> 00:08:01.390
Is, they'll let you put anything,
you upload stuff, yeah, letting it all in.

134
00:08:01.390 --> 00:08:05.480
You get charged for storing it there,
which makes sense and

135
00:08:05.480 --> 00:08:07.750
then you get charged for requests.

136
00:08:07.750 --> 00:08:11.850
So, for instance, we know that
S3 is infinitely scalable, but

137
00:08:11.850 --> 00:08:14.520
that doesn't mean it's free to do that.

138
00:08:14.520 --> 00:08:19.890
That said, we're going to learn
how to mitigate that, all right?

139
00:08:19.890 --> 00:08:23.580
Which is if we cache stuff then
we don't have to necessarily

140
00:08:23.580 --> 00:08:26.870
hit the S3 bucket every time cuz
especially the files haven't changed.

141
00:08:26.870 --> 00:08:30.730
So, that last one we will
deal with in a little bit.

