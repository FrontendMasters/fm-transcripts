WEBVTT

1
00:00:02.322 --> 00:00:02.879
&gt;&gt; Steve Kinney: Conclusion.

2
00:00:05.502 --> 00:00:06.232
&gt;&gt; Steve Kinney: The needs,

3
00:00:06.232 --> 00:00:10.402
we start out with a simple enough to
not get me in trouble with legal.

4
00:00:10.402 --> 00:00:12.865
But it had client side routing,
it had lazy loading,

5
00:00:12.865 --> 00:00:14.467
just enough to make it real-ish.

6
00:00:14.467 --> 00:00:18.030
But depending on what you need to do,
for your code, and for

7
00:00:18.030 --> 00:00:22.687
the needs of your customers, what you
do will vary a little bit differently.

8
00:00:22.687 --> 00:00:23.496
I said, no,

9
00:00:23.496 --> 00:00:28.074
to any cache headers, no to any headers
going into the CloudFront cache.

10
00:00:28.074 --> 00:00:31.313
But there might be things that
you need to pass through, right?

11
00:00:31.313 --> 00:00:34.866
What you exactly do will
change a little bit.

12
00:00:34.866 --> 00:00:38.685
But for whatever it is you can probably,
we know that we can really,

13
00:00:38.685 --> 00:00:42.641
that S3 is fairly configurable,
CloudFront is very configurable.

14
00:00:42.641 --> 00:00:45.521
And if out of the box they
don't do anything we need,

15
00:00:45.521 --> 00:00:47.300
we can program our CDN, right?

16
00:00:47.300 --> 00:00:51.441
We can literally step in and
write some code to modify requests and

17
00:00:51.441 --> 00:00:54.164
responses to do what we need to do, right?

18
00:00:54.164 --> 00:00:57.088
It is one of those things,
there's a few technologies, Lambda and

19
00:00:57.088 --> 00:00:58.438
Lambda@Edge are two of them.

20
00:00:58.438 --> 00:01:01.308
Where it's one of those
things where it's like,

21
00:01:01.308 --> 00:01:05.210
you start thinking about the very
basic stuff as you learn about it.

22
00:01:05.210 --> 00:01:08.716
Like, yeah, yeah, I can redirect them
to a Rick Roll, super cool, neat.

23
00:01:08.716 --> 00:01:11.652
I can fix client side routing,
actually super legit.

24
00:01:11.652 --> 00:01:13.972
But then it's one of those things
that as you think about a problem and

25
00:01:13.972 --> 00:01:14.741
then you go for a walk.

26
00:01:14.741 --> 00:01:16.686
You're like,
I could do this additional thing,

27
00:01:16.686 --> 00:01:18.688
those are the things I'm excited for
you to do, right?

28
00:01:18.688 --> 00:01:22.021
The thing that comes to you a month from
now that you realize you can handle.

29
00:01:22.021 --> 00:01:23.931
And so,
we did a lot of it by hand in the UI,

30
00:01:23.931 --> 00:01:26.897
which I think is important to
actually understand how it works.

31
00:01:26.897 --> 00:01:30.408
There are tools,
Terraform is a third party one,

32
00:01:30.408 --> 00:01:32.845
CloudFormation is an Amazon one.

33
00:01:32.845 --> 00:01:37.002
Where effectively you can write out
you infrastructure as code, right?

34
00:01:37.002 --> 00:01:40.323
So at SendGrid,
we have this idea of a blueprint, right?

35
00:01:40.323 --> 00:01:42.470
And so before you build a new anything,

36
00:01:42.470 --> 00:01:47.232
right, you usually write a blueprint that
architecture looks at, info sec looks at.

37
00:01:47.232 --> 00:01:50.575
So on and so forth, everybody puts their
rubber stamp, and then you go about it.

38
00:01:50.575 --> 00:01:54.743
One of the things we've moved to doing is
having effectively reusable blueprints.

39
00:01:54.743 --> 00:01:59.208
And the very first reusable
blueprint that we had was our

40
00:01:59.208 --> 00:02:03.398
client side application infrastructure,
right?

41
00:02:03.398 --> 00:02:05.464
So, just basically the stuff
we went through today.

42
00:02:05.464 --> 00:02:10.079
And so, now nobody has to write,
anyone starting a new client side app with

43
00:02:10.079 --> 00:02:13.092
the company doesn't have
to write a blueprint.

44
00:02:13.092 --> 00:02:16.485
They can just take the one that a few
of us wrote and say, I'm doing that.

45
00:02:16.485 --> 00:02:18.783
So, the next step for
us is we use Terraform,

46
00:02:18.783 --> 00:02:21.696
I don't know why we use
Terraform over CloudFormation.

47
00:02:21.696 --> 00:02:25.400
It's just somebody else made a choice,
I am a follower, so it's cool.

48
00:02:25.400 --> 00:02:29.017
It's basically to set up a bunch of
Terraform modules where you just

49
00:02:29.017 --> 00:02:30.548
plug in the name of your app.

50
00:02:30.548 --> 00:02:33.305
It can actually,
we have it set in place right now,

51
00:02:33.305 --> 00:02:37.366
where it will actually even go and get
the SSL cert for you and do all of that.

52
00:02:37.366 --> 00:02:39.237
Yes, you have to go get
a sandwich while that all runs,

53
00:02:39.237 --> 00:02:41.732
because you've seen that today,
a lot of what we did today was waiting.

54
00:02:41.732 --> 00:02:43.608
But you actually get infrastructure, and

55
00:02:43.608 --> 00:02:47.058
anyone who needs to spin up an app can
run a set of CloudFormation or Terraform.

56
00:02:47.058 --> 00:02:52.115
And basically create an entire
infrastructure out of nowhere really,

57
00:02:52.115 --> 00:02:54.059
which I think is very cool.

58
00:02:54.059 --> 00:02:57.530
Terraform is kind of cool,
this is like an example of Terraform.

59
00:02:57.530 --> 00:03:01.816
So you would pass in these obviously,
the access_key and secret_key,

60
00:03:01.816 --> 00:03:03.069
we've seen before.

61
00:03:03.069 --> 00:03:05.548
But basically it's like
pre-built software,

62
00:03:05.548 --> 00:03:09.000
you pass in the the sentences that
you want to configure and change.

63
00:03:09.000 --> 00:03:13.989
And then what's really cool about it is
you can then commit that into GitHub,

64
00:03:13.989 --> 00:03:15.544
or Git rather, right?

65
00:03:15.544 --> 00:03:17.726
You might go to GitLab, I don't know, and

66
00:03:17.726 --> 00:03:21.256
then it can get code reviewed when
you make infrastructure changes.

67
00:03:21.256 --> 00:03:23.780
I think, Ryan, you asked the question of,

68
00:03:23.780 --> 00:03:28.164
you ever have the situation where nobody
knows how anything is configured?

69
00:03:28.164 --> 00:03:31.252
Maybe the reason we don't have that yet
is because a lot of this is new work.

70
00:03:31.252 --> 00:03:34.608
And when the people who set it
up don't work there anymore.

71
00:03:34.608 --> 00:03:37.297
[LAUGH] I don't have that problem, but

72
00:03:37.297 --> 00:03:43.107
somebody on my team five years from now
might very well have that problem, right?

73
00:03:43.107 --> 00:03:46.475
So kind of getting infrastructure
as code is really useful.

74
00:03:46.475 --> 00:03:49.943
Because now it's at least set somewhere
you can see the commit history, so

75
00:03:49.943 --> 00:03:50.722
on and so forth.

76
00:03:50.722 --> 00:03:54.417
Rather than, yeah, one time you hit
a bunch of check boxes in CloudFront and

77
00:03:54.417 --> 00:03:55.995
now everything works, right?

78
00:03:55.995 --> 00:03:58.376
That is probably a very real thing.

79
00:03:58.376 --> 00:04:02.680
So yeah, and like, one of our goals is
to make this stuff reusable, and so for

80
00:04:02.680 --> 00:04:05.148
Frontend, it's a pretty standard stack.

81
00:04:05.148 --> 00:04:08.562
S3, CloudFront, Lambda@Edge, right?

82
00:04:08.562 --> 00:04:11.301
But on the back end, you could have
all sorts of different services.

83
00:04:11.301 --> 00:04:15.100
Have someone spin up a DynamoDB
database setup for multi-region, right?

84
00:04:15.100 --> 00:04:18.600
Likely very specific to how
we choose to do things, but

85
00:04:18.600 --> 00:04:21.727
some of these modules
already exist in the wild.

86
00:04:21.727 --> 00:04:26.279
I'll actually drop it in if I can find
it and I'll have Mark link to it.

87
00:04:26.279 --> 00:04:29.403
But they, like reusable, when we use
it for a client set infrastructure.

88
00:04:29.403 --> 00:04:33.149
One of my coworkers, Steven,
the one with the strong name,

89
00:04:33.149 --> 00:04:36.022
published as an open source project,
right?

90
00:04:36.022 --> 00:04:40.133
So you can spin up a lot of that
stuff as well, so there we are.

91
00:04:40.133 --> 00:04:42.204
We went from a very simple,

92
00:04:42.204 --> 00:04:47.892
index.html sitting on our desktop
to enterprise grade infrastructure.

