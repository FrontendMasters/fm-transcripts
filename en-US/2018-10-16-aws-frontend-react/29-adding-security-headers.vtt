WEBVTT

1
00:00:01.500 --> 00:00:07.650
&gt;&gt; Steve: So in addition to
the policies that we added earlier,

2
00:00:07.650 --> 00:00:11.940
you see that now there's
a content-security-policy, so on and

3
00:00:11.940 --> 00:00:13.090
so forth.

4
00:00:13.090 --> 00:00:17.462
You can see that it's currently
being served by my brand

5
00:00:17.462 --> 00:00:21.008
new server side framework, Erlang on Eels.

6
00:00:21.008 --> 00:00:25.510
I look forward to a future workshop
on that as soon as I invent it.

7
00:00:25.510 --> 00:00:26.440
But right now,

8
00:00:26.440 --> 00:00:30.990
any unsuspecting user will think that this
site is being served by Erlang on Eels.

9
00:00:30.990 --> 00:00:32.900
Which in a lot of ways it is.

10
00:00:32.900 --> 00:00:38.020
My site isn't perfect yet, though.

11
00:00:38.020 --> 00:00:43.360
I know you looked at it and
if this isn't perfection,

12
00:00:43.360 --> 00:00:45.930
I don't really know what is, right?

13
00:00:45.930 --> 00:00:51.750
But if we go to Mozilla's Observatory,

14
00:00:51.750 --> 00:00:55.620
which is basically a way to
audit the security of your site,

15
00:00:57.390 --> 00:01:02.900
there is some superimportantwebsite.com.

16
00:01:02.900 --> 00:01:04.672
There is a little bit to be desired.

17
00:01:10.951 --> 00:01:18.070
&gt;&gt; Steve: So for security, my site
currently gets an F, not even an F plus.

18
00:01:19.510 --> 00:01:26.600
Luckily it is a bunch of the same problem,
right?

19
00:01:26.600 --> 00:01:31.610
Which is I'm missing security headers,
right?

20
00:01:31.610 --> 00:01:33.430
So in my response object.

21
00:01:33.430 --> 00:01:37.200
So it looks like what I need to do is, now
you're all like, I don't have a server.

22
00:01:37.200 --> 00:01:38.240
So where is this gonna happen?

23
00:01:38.240 --> 00:01:40.060
We know the answer to that question,
right?

24
00:01:40.060 --> 00:01:41.440
We can program our CDN.

25
00:01:41.440 --> 00:01:42.970
We can solve this.

26
00:01:42.970 --> 00:01:45.960
So this is gonna be one that
we do on the viewer response.

27
00:01:45.960 --> 00:01:47.820
So as it leaves CloudFront,

28
00:01:47.820 --> 00:01:52.340
we know that it needs these
headers on it in order to work.

29
00:01:52.340 --> 00:01:56.430
Now, this is something that I do
have in the kind of set up guide.

30
00:01:56.430 --> 00:02:00.191
I have a lot of the code to this,
cuz a lot of these headers are incredibly

31
00:02:00.191 --> 00:02:03.034
tedious to type, so
I'm not gonna force that on you.

32
00:02:03.034 --> 00:02:07.343
But we are gonna go through the process,
and then we're also gonna go ahead and

33
00:02:07.343 --> 00:02:12.190
just, for funsies after that, make one
other change to the headers, right?

34
00:02:12.190 --> 00:02:15.640
So the two things we're gonna do is,
I'm gonna add the security headers, and

35
00:02:15.640 --> 00:02:21.970
then one thing you might notice
here is the server is Amazon S3.

36
00:02:21.970 --> 00:02:25.308
Now if you don't want people to know
that you're serving your thing from S3,

37
00:02:25.308 --> 00:02:26.581
you can change that, right?

38
00:02:26.581 --> 00:02:31.292
Cuz if we can add security headers then we
can likely also replace any other headers

39
00:02:31.292 --> 00:02:32.610
that we want.

40
00:02:32.610 --> 00:02:34.020
So I'm gonna go ahead and

41
00:02:34.020 --> 00:02:37.535
add some of the security headers which
will lay some of the ground work.

42
00:02:37.535 --> 00:02:43.305
And we'll go back to an exercise where
you can change the server header to

43
00:02:43.305 --> 00:02:47.545
anything you want, to mask the fact that
it's coming from S3 if you want, right?

44
00:02:47.545 --> 00:02:50.632
With S3, you don't have
a lot of security issues but

45
00:02:50.632 --> 00:02:55.294
that is definitely a thing that is been
used in the past where it'll be like,

46
00:02:55.294 --> 00:02:57.990
served with Express version 1.3, right?

47
00:02:57.990 --> 00:03:01.831
And then all of a sudden there's a known
security vulnerability, Express 1.3 and

48
00:03:01.831 --> 00:03:03.070
you're a target, right?

49
00:03:03.070 --> 00:03:05.690
Or a given version of Rails, so whatever.

50
00:03:05.690 --> 00:03:08.930
So it's usually a practice,
get rid of that.

51
00:03:08.930 --> 00:03:13.770
Or the x powered by is another
way that you'll see that.

52
00:03:13.770 --> 00:03:16.819
Mostly we want to get some
practice modifying headers.

53
00:03:17.900 --> 00:03:24.250
So I'm gonna look real quick at what I
have in the getting started guide here.

54
00:03:24.250 --> 00:03:30.830
And these are effectively some sensible
defaults for the security headers.

55
00:03:30.830 --> 00:03:34.080
And we kind of talk through this code and
then we'll put it in place.

56
00:03:34.080 --> 00:03:38.170
Before we had a request object,
now we have the response object,

57
00:03:38.170 --> 00:03:40.400
cuz we are doing this on viewer response.

58
00:03:40.400 --> 00:03:43.110
This is leaving CloudFront,
we've either had the cache miss or hit,

59
00:03:43.110 --> 00:03:44.820
and we're going back to the user.

60
00:03:46.750 --> 00:03:50.330
And effectively, we can basically
find these headers, right?

61
00:03:50.330 --> 00:03:53.212
In JavaScript, if this doesn't exist,
it'll set it for the first time,

62
00:03:53.212 --> 00:03:54.604
if it's there, it will update it.

63
00:03:57.090 --> 00:04:00.470
&gt;&gt; Steve: And
then these are basically the same.

64
00:04:00.470 --> 00:04:04.710
CloudFront will actually
normalize the casing as well.

65
00:04:04.710 --> 00:04:07.940
So we'll go ahead, and we'll update all
of these with the values that they need,

66
00:04:07.940 --> 00:04:09.730
all right?

67
00:04:09.730 --> 00:04:13.290
Again, watching someone type this,
probably not super fun.

68
00:04:14.520 --> 00:04:16.873
So grab this.

69
00:04:16.873 --> 00:04:19.310
Now this is gonna be a little
bit different than the last one.

70
00:04:19.310 --> 00:04:23.943
We're not gonna do in the viewer requests
cuz we're not ready to handle responses

71
00:04:23.943 --> 00:04:24.561
just yet.

72
00:04:24.561 --> 00:04:28.355
We want to actually change the response
coming out of CloudFront to include these

73
00:04:28.355 --> 00:04:28.870
headers.

74
00:04:32.552 --> 00:04:36.289
&gt;&gt; Steve: So we'll go back, we'll find
our way back to lambda, go to Functions.

75
00:04:37.340 --> 00:04:40.180
We'll create a new function, right,
cuz this is a different place

76
00:04:40.180 --> 00:04:45.240
in the request response cycle
that we're trying to drop into.

77
00:04:45.240 --> 00:04:48.790
So here we'll go to Create Function,
and I want to just little bit too,

78
00:04:48.790 --> 00:04:50.920
to show you what it's
like after the first one.

79
00:04:50.920 --> 00:04:53.622
We created a role last time,
now we have one.

80
00:04:53.622 --> 00:04:59.388
So we'll call this one Add,
we'll call it ModifyResponseHeaders.

81
00:05:03.520 --> 00:05:06.743
&gt;&gt; Steve: We choose an existing role.

82
00:05:06.743 --> 00:05:09.693
And we'll choose that EdgeLambda
one that we made earlier.

83
00:05:13.046 --> 00:05:15.719
&gt;&gt; Steve: Great, so
now we have a new lambda function.

84
00:05:16.850 --> 00:05:20.225
We can go ahead and
replace this with what we had.

85
00:05:23.715 --> 00:05:24.707
&gt;&gt; Steve: We'll hit Save.

86
00:05:26.716 --> 00:05:28.356
&gt;&gt; Steve: And remember,
we have to publish a new version.

87
00:05:38.005 --> 00:05:39.366
&gt;&gt; Steve: So now we're on Version 1.

88
00:05:41.640 --> 00:05:43.200
Which will allow us to add CloudFront.

89
00:05:44.660 --> 00:05:47.090
You get those arrows, why they don't
scroll you down, I don't know.

90
00:05:47.090 --> 00:05:50.153
They just show you arrows that they
don't show you a second time, they do,

91
00:05:50.153 --> 00:05:51.040
they didn't before.

92
00:05:52.350 --> 00:05:57.280
We'll go ahead and now we want to make
this one on the viewer response and

93
00:05:57.280 --> 00:05:59.490
we'll enable it and have it replicate.

94
00:06:01.090 --> 00:06:03.450
There's a lot of buttons
that you have to hit, right?

95
00:06:03.450 --> 00:06:06.400
A problem you will run into at one
point is you'll like yeah, yeah, yeah,

96
00:06:06.400 --> 00:06:07.350
I want to enable it.

97
00:06:07.350 --> 00:06:10.320
And then you will have saved it and
you'll wonder what happened.

98
00:06:10.320 --> 00:06:15.030
And 20 minutes later you will see
that you just didn't save it.

99
00:06:15.030 --> 00:06:16.430
So hopefully,

100
00:06:16.430 --> 00:06:22.200
by having this talk together right now it
becomes a little, it helps you remember.

101
00:06:22.200 --> 00:06:27.038
So we'll head back over
to the Observatory.

102
00:06:27.038 --> 00:06:31.260
We're gonna initiate a rescan and
my hope is that,

103
00:06:36.087 --> 00:06:40.637
&gt;&gt; Steve: It probably hasn't propagated

104
00:06:40.637 --> 00:06:42.830
just yet, so.

105
00:06:45.636 --> 00:06:50.428
&gt;&gt; Steve: We'll also invalidate
everything because we might have

106
00:06:50.428 --> 00:06:52.634
previously cached them.

107
00:06:57.922 --> 00:07:00.610
&gt;&gt; Steve: But I do have to wait
several minutes for that to happen.

108
00:07:00.610 --> 00:07:03.150
So we'll run the tests
together in a second.

109
00:07:03.150 --> 00:07:08.520
What I want you to do is find
a header that you wanna change.

110
00:07:08.520 --> 00:07:12.940
If you're feeling not
particularly imaginative or

111
00:07:12.940 --> 00:07:16.660
you just wanna go down the happy path,
server one's a great one to change, right?

112
00:07:16.660 --> 00:07:20.160
So you can see in this case it
will be just lower case server.

113
00:07:20.160 --> 00:07:21.863
If you looked at
the response headers before,

114
00:07:21.863 --> 00:07:23.227
it was the capital S on server there.

115
00:07:23.227 --> 00:07:25.120
And we can change the value to anything.

116
00:07:25.120 --> 00:07:29.230
You can change it all yes, totally
served from Ruby on Rails, right, or

117
00:07:29.230 --> 00:07:30.260
whatever you want.

118
00:07:30.260 --> 00:07:32.590
Let's just add an additional
header in there so

119
00:07:32.590 --> 00:07:36.820
that we can kind of just get a chance
to play with a viewer response.

120
00:07:38.140 --> 00:07:43.078
So in addition to the policies that we

121
00:07:43.078 --> 00:07:48.150
added earlier, you can see that now
there is a content-security-policy,

122
00:07:48.150 --> 00:07:49.750
so on and so forth.

123
00:07:49.750 --> 00:07:52.730
You can see that it's
currently being served

124
00:07:52.730 --> 00:07:57.390
by my brand new service side framework,
Erlang on Eels.

125
00:07:57.390 --> 00:08:02.120
I look forward to a future workshop
on that, as soon as I invent it.

126
00:08:02.120 --> 00:08:03.030
But right now,

127
00:08:03.030 --> 00:08:07.590
any unsuspecting user will think that this
site is being served by Erlang on Eels.

128
00:08:07.590 --> 00:08:08.980
Which, in a lot of ways, it is.

