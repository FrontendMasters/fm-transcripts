WEBVTT

1
00:00:00.000 --> 00:00:03.656
&gt;&gt; Steve Kinney: So now we've effectively
solved that by being able to program

2
00:00:03.656 --> 00:00:04.226
our CDN.

3
00:00:04.226 --> 00:00:09.873
Now, there is this picture of Prince,
&gt;&gt; Steve Kinney: It's

4
00:00:09.873 --> 00:00:15.742
a fine picture of Prince,
it is prince-1.jpg.

5
00:00:15.742 --> 00:00:21.474
Now one of the things you saw
very early on is, in that folder,

6
00:00:21.474 --> 00:00:27.992
there is a prince-2.jpg, and
it is a different picture of Prince.

7
00:00:27.992 --> 00:00:30.878
At one point, I was gonna be funny and
do an actual, like Prince Harry or

8
00:00:30.878 --> 00:00:32.020
something like that.

9
00:00:32.020 --> 00:00:36.900
But I realized that is sacrilege against
Prince, so I'm not gonna do that.

10
00:00:36.900 --> 00:00:40.505
So there are just two different
pictures of Prince, as you do.

11
00:00:40.505 --> 00:00:45.130
So what I want you to do is go back.

12
00:00:45.130 --> 00:00:49.889
And you can actually, again, we can only
have one viewer request function, so

13
00:00:49.889 --> 00:00:52.385
we're gonna have to add some logic here.

14
00:00:52.385 --> 00:01:00.194
Your job is, again, to go to latest,
&gt;&gt; Steve Kinney: So

15
00:01:00.194 --> 00:01:03.313
here we're testing for if it matches that.

16
00:01:03.313 --> 00:01:07.647
We can actually say, hey, if they're
looking for, you don't even need to regex.

17
00:01:07.647 --> 00:01:13.794
If request.uri = /prince-1.jpg,

18
00:01:13.794 --> 00:01:18.890
change it to /prince-2.jpg.

19
00:01:19.970 --> 00:01:24.022
Right, so now all requests for that
picture we had Prince previously will be

20
00:01:24.022 --> 00:01:27.143
replaced with a different
version of Prince on the way in.

21
00:01:27.143 --> 00:01:27.986
All right, so

22
00:01:27.986 --> 00:01:32.494
our job was to replace one picture of
Prince with another picture of Prince.

23
00:01:32.494 --> 00:01:37.728
We could go about it like this,
so we can say if(request.uri,

24
00:01:40.451 --> 00:01:45.216
&gt;&gt; Steve Kinney: '/prince-1.jpg'),

25
00:01:45.216 --> 00:01:48.267
we will modify it.

26
00:01:53.372 --> 00:01:58.501
&gt;&gt; Steve Kinney: prince-2.jpg,
this is on its way in.

27
00:01:58.501 --> 00:02:02.983
So every single request that comes
into CloudFront is going to be

28
00:02:02.983 --> 00:02:05.640
modified before it hits CloudFront.

29
00:02:05.640 --> 00:02:09.480
So CloudFront will always think
it was asking for prince-2.

30
00:02:09.480 --> 00:02:14.956
Right, so it would be cached,
we won't have to go back to S3 either way.

31
00:02:14.956 --> 00:02:20.927
So hit Save,
one of the things that I noticed is,

32
00:02:20.927 --> 00:02:26.473
take off the previous one,
and version two.

33
00:02:28.986 --> 00:02:32.208
&gt;&gt; Steve Kinney: So for latest,
let me go ahead and publish new version.

34
00:02:37.684 --> 00:02:44.458
&gt;&gt; Steve Kinney: Different Prince,
&gt;&gt; Steve Kinney: We'll go ahead and

35
00:02:44.458 --> 00:02:52.103
we'll say viewer request,
&gt;&gt; Steve Kinney: And we'll hit Save.

36
00:02:52.103 --> 00:02:54.664
All right,
that might have to distribute, but

37
00:02:54.664 --> 00:02:57.170
we've been having good luck with that so
far.

38
00:03:06.929 --> 00:03:08.979
&gt;&gt; Steve Kinney: Yeah,
it looks like we took the other one off,

39
00:03:08.979 --> 00:03:11.148
it doesn't look like
the new one's on just yet.

40
00:03:14.770 --> 00:03:18.593
&gt;&gt; Steve Kinney: Let's go take a look,
make sure I got everything in there,

41
00:03:18.593 --> 00:03:20.055
we got version three.

42
00:03:33.703 --> 00:03:34.793
&gt;&gt; Steve Kinney: One thing
we'll do real quick,

43
00:03:38.396 --> 00:03:39.188
&gt;&gt; Steve Kinney: Clear out the cache.

44
00:03:42.309 --> 00:03:47.720
&gt;&gt; Steve Kinney: So here we've swapped
out our previous version of Prince for

45
00:03:47.720 --> 00:03:50.381
a smaller picture of Prince.

46
00:03:50.381 --> 00:03:54.332
This is still,
even if I go all the way to,

47
00:03:56.623 --> 00:03:58.106
&gt;&gt; Steve Kinney: prince-1.jpg,

48
00:03:58.106 --> 00:04:03.606
you can see it's still that new picture,
the same as if I go to prince-2.

49
00:04:03.606 --> 00:04:07.840
Cuz CloudFront is modifying
the request on the way in.

50
00:04:07.840 --> 00:04:11.624
So, we're still getting the same one
out of S3, and now these are cached.

51
00:04:11.624 --> 00:04:15.035
Right, so if you think about it, there
was some interesting stuff we did before.

52
00:04:15.035 --> 00:04:17.574
We can see that CloudFront can
let certain headers through,

53
00:04:17.574 --> 00:04:21.256
you can theoretically show a smaller image
if you know the device is smaller, that's,

54
00:04:21.256 --> 00:04:23.290
again, slightly tricky to get right.

55
00:04:23.290 --> 00:04:26.341
But we can modify requests
before they even hit CloudFront.

56
00:04:26.341 --> 00:04:29.533
So we fixed client side routing,
we can swap out different images,

57
00:04:29.533 --> 00:04:31.670
viewer request is also really interesting.

58
00:04:31.670 --> 00:04:33.951
You can set cookies at this point as well,
and

59
00:04:33.951 --> 00:04:36.242
figure out if they should get test a or
test b.

60
00:04:36.242 --> 00:04:39.480
Right, and send them to different
resources based on that as well.

61
00:04:39.480 --> 00:04:43.465
If they don't have a cookie, maybe you
have whatever percentage for the ab test,

62
00:04:43.465 --> 00:04:44.561
they do have that one,

63
00:04:44.561 --> 00:04:48.290
then you know how to like modify their
viewer request based on what they get.

64
00:04:48.290 --> 00:04:50.567
So then now you don't have
to worry about procession.

65
00:04:50.567 --> 00:04:53.344
That cookie will always get either
the a test or the b test, or

66
00:04:53.344 --> 00:04:54.770
something along those lines.

