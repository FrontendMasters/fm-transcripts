WEBVTT

1
00:00:03.805 --> 00:00:07.650
&gt;&gt; Steve: Before we broke,
we set up a domain name.

2
00:00:07.650 --> 00:00:08.640
We set the DNS for that.

3
00:00:08.640 --> 00:00:11.530
That took a little bit of time, and
we also provisioned an SSL search so

4
00:00:11.530 --> 00:00:12.650
we could do HTTPS.

5
00:00:12.650 --> 00:00:15.610
We have not set up HTTPS yet, but

6
00:00:15.610 --> 00:00:20.090
we have at least provisioned
the service and gotten that going.

7
00:00:20.090 --> 00:00:24.760
So here we have,
superimportantwebsite.com is now my app.

8
00:00:26.590 --> 00:00:30.718
And I can navigate around and
everything is great.

9
00:00:30.718 --> 00:00:33.630
This is a picture of Prince, as you do.

10
00:00:33.630 --> 00:00:39.260
And so brings us to our
updated areas of improvement

11
00:00:39.260 --> 00:00:43.920
which is the URL is now kind of great,
but it's not over HTTPS.

12
00:00:45.220 --> 00:00:49.575
It's still kind of manual,
we have that command line thing happening.

13
00:00:49.575 --> 00:00:54.504
It's still hosted in Virginia exclusively
unless you chose a different region.

14
00:00:54.504 --> 00:00:56.640
And routing, let's take a look at routing.

15
00:00:56.640 --> 00:01:02.630
So if I just go to
superimportantwebsite.com, it works.

16
00:01:02.630 --> 00:01:06.540
I can click on things to
do which is now notes/1.

17
00:01:06.540 --> 00:01:09.160
What happens if I refresh this page?

18
00:01:10.210 --> 00:01:13.185
So I can like navigate to it,
but if someone goes to

19
00:01:13.185 --> 00:01:19.470
superimportantwebsite.com/notes/1 we
get this.

20
00:01:19.470 --> 00:01:20.600
That's not great.

21
00:01:20.600 --> 00:01:25.000
[LAUGH] We definitely need to fix that.

22
00:01:25.000 --> 00:01:29.410
So we're gonna do two things in
this next little segment together.

23
00:01:29.410 --> 00:01:32.290
One is we're gonna get,

24
00:01:32.290 --> 00:01:36.035
let's just say we're gonna get client
side routing not broken, right?

25
00:01:36.035 --> 00:01:39.705
Still gonna have room for improvement,
but it's not gonna be this.

26
00:01:39.705 --> 00:01:41.776
Then two, we'll get the WWW set up, right?

27
00:01:41.776 --> 00:01:44.725
And then when we move to CloudFront,
we'll handle the HTTPS and

28
00:01:44.725 --> 00:01:47.705
a whole bunch of other
things along the way.

29
00:01:47.705 --> 00:01:52.365
All right, so we will go back to the AWS
console, and I'll go back to S3.

30
00:01:57.030 --> 00:02:03.040
And the easy way to do this,

31
00:02:03.040 --> 00:02:07.620
we'll get to the not easy way shortly, the
easy way to get this working is to go back

32
00:02:07.620 --> 00:02:13.810
to that set of website hosting, and we'll
say, hey, we could define a 404 page.

33
00:02:13.810 --> 00:02:18.150
And that will be less bad,
but not actively good.

34
00:02:18.150 --> 00:02:23.350
So now instead of seeing that ugly S3
not found, they'll see a prettier not

35
00:02:23.350 --> 00:02:27.990
found page for something that definitely
should be found, that's not great.

36
00:02:27.990 --> 00:02:33.270
So the kind of way that, it's kind
of industry standard to handle this,

37
00:02:33.270 --> 00:02:34.730
is just say hey, you know what?

38
00:02:36.180 --> 00:02:41.042
Even when the asset is not found on S3,
tell you what,

39
00:02:41.042 --> 00:02:46.890
just send them the index at html
with the client-side app again.

40
00:02:46.890 --> 00:02:47.600
So we'll save that.

41
00:02:49.730 --> 00:02:58.034
And now, if we go back to
superimportantwebsite.com,

42
00:02:58.034 --> 00:03:04.370
it works, and we can refresh and
it still works, right?

43
00:03:04.370 --> 00:03:11.490
Now you're like this is great,
not really, right?

44
00:03:11.490 --> 00:03:13.673
So we'll go ahead,
if we look in the console.

45
00:03:19.225 --> 00:03:21.459
&gt;&gt; Steve: If anyone wants to know how
to turn on developer mode in Safari,

46
00:03:21.459 --> 00:03:22.440
you're about to find out.

47
00:03:23.550 --> 00:03:27.128
You can't open the DevTools without
showing the develop menu in the menu bar.

48
00:03:30.765 --> 00:03:36.000
&gt;&gt; Steve: Cool, and you can go ahead and
I can refresh, right?

49
00:03:36.000 --> 00:03:42.710
And so now it technically counts as
a 404 even though it's a legit route.

50
00:03:43.980 --> 00:03:46.710
That's kinda like breaking the Web.

51
00:03:46.710 --> 00:03:49.190
In S3,
we don't really have a lot of options,

52
00:03:49.190 --> 00:03:50.760
this is just how we have to handle it.

53
00:03:50.760 --> 00:03:51.990
At least it's showing up.

54
00:03:51.990 --> 00:03:54.180
And then I have react router
handling if I do like.

55
00:03:57.411 --> 00:03:58.850
&gt;&gt; Steve: To a definitely not known route.

56
00:03:58.850 --> 00:04:05.800
To the user, everything behaves properly,
but 404 for decent routes, yuck.

57
00:04:07.210 --> 00:04:09.626
So there's various ways of handling this.

58
00:04:09.626 --> 00:04:14.500
We're gonna err in the other direction
eventually, and then we will finally solve

59
00:04:14.500 --> 00:04:18.850
this problem that resulted, that came
from a four hour argument with me and

60
00:04:18.850 --> 00:04:22.550
one of the architects before we
finally found a solution to this.

61
00:04:22.550 --> 00:04:26.970
But the site at least works now,
even though like 404 is for

62
00:04:26.970 --> 00:04:31.930
decent webpages, not the best thing
in the world, but we'll get there.

63
00:04:31.930 --> 00:04:32.470
I promise you.

