WEBVTT

1
00:00:02.960 --> 00:00:08.126
&gt;&gt; Steve Kinney: So, we saw that you could
upload a index.html by finding it on your

2
00:00:08.126 --> 00:00:14.788
file system and, I think you can also drag
and drop it, which is even more rewarding.

3
00:00:14.788 --> 00:00:17.554
But that's not really great.

4
00:00:17.554 --> 00:00:22.356
It will be better if we could
somehow in our build process be

5
00:00:22.356 --> 00:00:25.302
able to upload the assets, right?

6
00:00:25.302 --> 00:00:28.195
So we can do something like,
okay, Webpack, go ahead and

7
00:00:28.195 --> 00:00:29.680
build my React application.

8
00:00:29.680 --> 00:00:34.368
And all this'll work just as well for
an Angular application or

9
00:00:34.368 --> 00:00:37.294
an Ember application or what have you.

10
00:00:37.294 --> 00:00:41.960
A View application, your
Vanilla JavaScript with Webpack project.

11
00:00:41.960 --> 00:00:44.064
Anything along those lines.

12
00:00:44.064 --> 00:00:48.694
This is completely agnostic, I just
hollowed out a react application for

13
00:00:48.694 --> 00:00:49.373
the demo.

14
00:00:49.373 --> 00:00:51.306
So I'm gonna use ideas from react.

15
00:00:51.306 --> 00:00:55.790
But none of this matters, this is
about taking any app that you have and

16
00:00:55.790 --> 00:00:56.785
deploying it.

17
00:00:56.785 --> 00:01:01.605
So what we want to do is be able
to use it from the command line.

18
00:01:01.605 --> 00:01:05.398
If you have never set this up
before you've installed the AWSCLI,

19
00:01:05.398 --> 00:01:07.644
you can type in AWS configure, right?

20
00:01:07.644 --> 00:01:12.153
And this will kind of get the basic
doc files ready for you, and

21
00:01:12.153 --> 00:01:14.515
it'll ask you a few questions.

22
00:01:14.515 --> 00:01:17.977
And so it'll ask you for
your AWS access key ID.

23
00:01:17.977 --> 00:01:19.442
And then that secret.

24
00:01:19.442 --> 00:01:24.509
So if you didn't download the CSV
this'll be the first time in your life

25
00:01:24.509 --> 00:01:29.413
you have to go and regenerate that
key cuz you'll never see it again.

26
00:01:29.413 --> 00:01:31.830
But ideally you have it saved in a CSV.

27
00:01:31.830 --> 00:01:33.393
A default region name.

28
00:01:33.393 --> 00:01:36.205
Let's no matter where
you are in the world,

29
00:01:36.205 --> 00:01:39.093
let's agree to use us-east-1 right now.

30
00:01:39.093 --> 00:01:44.890
The reasoning for that is anything that
is global is located in us-east-1 and

31
00:01:44.890 --> 00:01:47.238
Cloudfront is global, right?

32
00:01:47.238 --> 00:01:53.080
And when we want to add lambda edge
functions to our Cloudfront distribution,

33
00:01:53.080 --> 00:01:56.811
those will all need to
be in us-east-1 as well.

34
00:01:56.811 --> 00:02:01.696
And so I would implore you not to
add a layer of complexity as you're

35
00:02:01.696 --> 00:02:06.931
first learning stuff by picking
a different region 'cuz eventually,

36
00:02:06.931 --> 00:02:11.488
you'll setup your lambda function
in US West 2 or whatever.

37
00:02:11.488 --> 00:02:16.571
And you'll go to add Cloudfront 2 and
Cloudfront won't be in the UI and

38
00:02:16.571 --> 00:02:20.060
you'll think that I'm insane,
which is true.

39
00:02:20.060 --> 00:02:21.700
But like that's not the issue,

40
00:02:21.700 --> 00:02:25.361
it's just that you can't put
lambdas on Cloudfront in US-West-2.

41
00:02:25.361 --> 00:02:26.928
And there's not really like,

42
00:02:26.928 --> 00:02:29.767
they don't have a really great
way of telling you that.

43
00:02:29.767 --> 00:02:32.526
It's just not there, and
you will be sad, all right?

44
00:02:32.526 --> 00:02:36.752
And that's the example I can think of I
can't, off the top of my head like there's

45
00:02:36.752 --> 00:02:39.277
probably other cases where
you will also be sad.

46
00:02:39.277 --> 00:02:42.682
So let's stick with us-east-1,
as our default region.

47
00:02:42.682 --> 00:02:45.061
And as you play around
with this after the fact,

48
00:02:45.061 --> 00:02:47.155
you might wanna pick a different region.

49
00:02:47.155 --> 00:02:51.646
And again, we talked a little bit about
possibly even deploying our applications

50
00:02:51.646 --> 00:02:52.890
to multiple regions.

51
00:02:52.890 --> 00:02:54.548
One that you never use, but

52
00:02:54.548 --> 00:02:59.249
you can then change the DNS to hit that
other one instead at some point as well.

53
00:02:59.249 --> 00:03:03.604
All right, so we're gonna take
really like three minutes, and

54
00:03:03.604 --> 00:03:07.555
we just go into the AWS configure
as I put in my secret key and

55
00:03:07.555 --> 00:03:10.799
I'll join you back here
in like a minute or two.

56
00:03:10.799 --> 00:03:13.015
All right, so we've got that set up.

57
00:03:13.015 --> 00:03:16.095
I set up on my machine as well.

58
00:03:16.095 --> 00:03:19.412
Kind of question that comes
up pretty frequently is,

59
00:03:19.412 --> 00:03:24.287
we might talk a little bit about making
multiple accounts for multiple users.

60
00:03:24.287 --> 00:03:28.737
And so how would we support that if
these are environment variables?

61
00:03:28.737 --> 00:03:32.444
Turns out, you can have multiples
profiles with the AWS CLI.

62
00:03:32.444 --> 00:03:34.098
And so, if you go ahead and

63
00:03:34.098 --> 00:03:39.216
you just made a directory called .aws as
a hidden directory in your root folder,

64
00:03:39.216 --> 00:03:43.149
And then there are two files in
there config and credentials.

65
00:03:43.149 --> 00:03:45.038
How you answered four questions?

66
00:03:45.038 --> 00:03:47.700
The credentials part are in
the credentials file.

67
00:03:47.700 --> 00:03:52.125
What region and what output format you
want your error logs was in the configs.

68
00:03:52.125 --> 00:03:53.925
So you can change that any time.

69
00:03:53.925 --> 00:03:57.514
The other interesting part you
see that default out there,

70
00:03:57.514 --> 00:04:01.196
that will be if you don't specify
a profile what it will use.

71
00:04:01.196 --> 00:04:06.733
But you can have multiple Amazon users
in your command line tool, all right?

72
00:04:06.733 --> 00:04:11.829
And so the way you would use this
is the dash dash profile flag.

73
00:04:11.829 --> 00:04:15.755
And so if you don't specify
a dash dash profile flag,

74
00:04:15.755 --> 00:04:18.120
you're going to get a default.

75
00:04:18.120 --> 00:04:21.982
But if you dash dash profile space side
project it's going to use a different

76
00:04:21.982 --> 00:04:22.657
set of keys.

77
00:04:22.657 --> 00:04:26.699
All right, and so like if you play
multiple things you might wanna have that

78
00:04:26.699 --> 00:04:30.055
in part of your build process or
something along those lines.

79
00:04:30.055 --> 00:04:32.424
We're just gonna use
the default today but,

80
00:04:32.424 --> 00:04:36.367
that way you can like work on work stuff
and then have side projects or like.

81
00:04:36.367 --> 00:04:40.608
It stops you from making one like global
user that can control all of your

82
00:04:40.608 --> 00:04:41.819
different assets.

83
00:04:41.819 --> 00:04:45.159
You can actually like at least
provision it separately.

