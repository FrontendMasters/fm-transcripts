WEBVTT

1
00:00:00.259 --> 00:00:02.247
So our PWA is now ready.

2
00:00:02.247 --> 00:00:03.917
It works everywhere.

3
00:00:03.917 --> 00:00:08.320
It has a nice installation
dialog in many platforms.

4
00:00:08.320 --> 00:00:10.248
It works offline.

5
00:00:10.248 --> 00:00:13.188
It's passing the PWA criteria.

6
00:00:13.188 --> 00:00:18.102
Let's finish the discussion
about building our first

7
00:00:18.102 --> 00:00:22.066
PWA with the app distribution discussion.

8
00:00:22.066 --> 00:00:25.334
We have a couple of models available.

9
00:00:25.334 --> 00:00:30.052
So far, we have been seeing how to
install a PWA from the browser.

10
00:00:30.052 --> 00:00:36.048
That's the most common scenario and
well known idea on how you install a PWA.

11
00:00:36.048 --> 00:00:40.092
You need to get somehow to
the browser to that URL and

12
00:00:40.092 --> 00:00:44.624
then you're going to invite
the user to install the app.

13
00:00:44.624 --> 00:00:50.907
Or the user will use the menu to install
the app or add the app to the home screen.

14
00:00:50.907 --> 00:00:53.388
But also we have other options.

15
00:00:53.388 --> 00:00:57.248
One option is the App Store.

16
00:00:57.248 --> 00:01:02.859
So it's possible today to publish
your PWA on most of the App Stores,

17
00:01:02.859 --> 00:01:07.312
including Microsoft Store for
Windows 10 and 11,

18
00:01:07.312 --> 00:01:11.021
Google Play Store for
Android and Chrome OS.

19
00:01:11.021 --> 00:01:17.250
App Store for iOS and iPadOS, and
the Galaxy Store for Samsung devices.

20
00:01:17.250 --> 00:01:22.881
There are also other store,
like a Huawei Store, the Amazon App Store,

21
00:01:22.881 --> 00:01:26.953
where you can actually do
something with some work.

22
00:01:26.953 --> 00:01:31.291
The App Stores with some kind
of unofficial support for

23
00:01:31.291 --> 00:01:36.583
PWAs are the one from Google,
from Microsoft, and from Samsung.

24
00:01:36.583 --> 00:01:40.237
Apple is typically not
saying a word about this.

25
00:01:40.237 --> 00:01:45.129
But there is a technical
solution to publish PWAs on iOS.

26
00:01:45.129 --> 00:01:50.382
And there are many PWAs in the App Store,
so it's actually possible.

27
00:01:50.382 --> 00:01:53.177
But these are not the only two models.

28
00:01:53.177 --> 00:01:55.234
We have another one.

29
00:01:55.234 --> 00:01:57.690
It's enterprise distribution.

30
00:01:57.690 --> 00:02:00.854
We don't have time to cover these deeply.

31
00:02:00.854 --> 00:02:06.496
But I want you to take the idea that
if you have corporate clients where

32
00:02:06.496 --> 00:02:12.432
they have corporate devices or
devices with enterprise distribution,

33
00:02:12.432 --> 00:02:19.267
you can actually distribute your PWA to
employees of that company automatically.

34
00:02:19.267 --> 00:02:25.259
Android has a solution, it's called Google
Play iFrame, and iOS has also solution.

35
00:02:25.259 --> 00:02:29.939
You can create some files that
are called configuration files,

36
00:02:29.939 --> 00:02:33.328
that then you can
distribute to your clients.

37
00:02:33.328 --> 00:02:36.157
If the user is installing those files,

38
00:02:36.157 --> 00:02:40.026
they will get automatically
PWAs in the home screen.

39
00:02:40.026 --> 00:02:47.098
So it's possible to distribute
this in the enterprise world.

40
00:02:47.098 --> 00:02:50.818
Something that is really,
really important,

41
00:02:50.818 --> 00:02:53.608
on all these distribution models,

42
00:02:53.608 --> 00:02:59.195
we are not changing how app resources
are being installed and updated.

43
00:02:59.195 --> 00:03:00.951
It's just the same.

44
00:03:00.951 --> 00:03:03.040
We use the service worker.

45
00:03:03.040 --> 00:03:07.607
The service worker is always
the component responsible for

46
00:03:07.607 --> 00:03:09.898
all the resources of our app.

47
00:03:09.898 --> 00:03:13.777
So if you are going to ship
our PWA in the Play Store,

48
00:03:13.777 --> 00:03:19.475
we are not going to ship a package
with HTML, CSS, and JavaScript inside.

49
00:03:19.475 --> 00:03:21.083
That's not gonna happen, okay?

50
00:03:21.083 --> 00:03:25.276
We are just going to ship
a package that will launch a URL.

51
00:03:25.276 --> 00:03:29.516
So the service worker will
still be responsible for

52
00:03:29.516 --> 00:03:32.876
managing the assets and the resources.

53
00:03:32.876 --> 00:03:38.359
There are different tools that we have
available to create PWA launchers.

54
00:03:38.359 --> 00:03:43.334
We can use IDEs for native development,
such as Android Studio,

55
00:03:43.334 --> 00:03:49.494
Visual Studio for Windows, Visual Studio,
the big version, or Xcode for iOS.

56
00:03:49.494 --> 00:03:51.204
But for those cases,

57
00:03:51.204 --> 00:03:56.630
you need to have some experience
working with native development.

58
00:03:56.630 --> 00:03:58.926
PWA Builder is also an option.

59
00:03:58.926 --> 00:03:59.999
PWA Builder,

60
00:03:59.999 --> 00:04:05.999
it's an online tool that will let us
create packages on the fly automatically.

61
00:04:05.999 --> 00:04:08.440
I'm going to show you that in a minute.

62
00:04:08.440 --> 00:04:12.149
And also we have some
Command Line Tools available.

63
00:04:12.149 --> 00:04:18.128
Primarily today for the Play Store,
there is a tool known as Bubblewrap,

64
00:04:18.128 --> 00:04:22.564
where you can actually take
the manifest of your PWA and

65
00:04:22.564 --> 00:04:27.402
it will create an Android package
ready for the Play Store.

66
00:04:27.402 --> 00:04:31.305
And then you can go and
update that to the Play Store.

67
00:04:31.305 --> 00:04:35.468
And remember that package
is actually a PWA launcher.

68
00:04:35.468 --> 00:04:40.486
It just launches the PWA, it doesn't
contain the files of our web app.

69
00:04:40.486 --> 00:04:43.245
So talking about PWA Builder,

70
00:04:43.245 --> 00:04:48.988
it's actually an open source
project sponsored by Microsoft.

71
00:04:48.988 --> 00:04:54.535
So it was originally only for
Windows Store, but now it has support for

72
00:04:54.535 --> 00:05:01.130
the Samsung Galaxy Store, the Google Play
Store, and iOS support is coming soon.

73
00:05:01.130 --> 00:05:07.414
So if we go to PWAbuilder.com, you can
actually start typing the URL of your PWA.

74
00:05:07.414 --> 00:05:10.775
So if you wanna create the package for

75
00:05:10.775 --> 00:05:15.763
our PWA, we first need to
publish this in a public URL,

76
00:05:15.763 --> 00:05:19.465
it's not going to work with localhost.

77
00:05:19.465 --> 00:05:25.708
So we can try another PWA,
Such as the Squoosh.

78
00:05:25.708 --> 00:05:26.986
We hit the start.

79
00:05:26.986 --> 00:05:30.959
And this is going to check
your PWA in the background,

80
00:05:30.959 --> 00:05:34.059
it will give you a score
on how PWA are you.

81
00:05:34.059 --> 00:05:35.170
How good are you?

82
00:05:35.170 --> 00:05:38.221
And then it will let you
create the packages.

83
00:05:38.221 --> 00:05:40.226
So here, we can see we have a 190.

84
00:05:40.226 --> 00:05:42.304
That's a current score.

85
00:05:42.304 --> 00:05:44.339
That's actually pretty good.

86
00:05:44.339 --> 00:05:49.194
We can click here and see the details
of the score in terms of the manifest,

87
00:05:49.194 --> 00:05:52.813
the service worker, security,
and the total score.

88
00:05:54.503 --> 00:05:56.296
You can change some options.

89
00:05:56.296 --> 00:05:59.505
These options are coming from
the manifest, but we can change them.

90
00:06:02.009 --> 00:06:04.895
And here we have service worker options.

91
00:06:04.895 --> 00:06:11.064
In case you don't have a service worker
yet, this tool will help you create one.

92
00:06:11.064 --> 00:06:16.747
And when you're done,
you just scroll down, select Next.

93
00:06:16.747 --> 00:06:23.993
And now you're ready to publish your
PWA to the store, Windows and Android.

94
00:06:23.993 --> 00:06:27.166
For Windows, you click Store Package.

95
00:06:27.166 --> 00:06:29.494
You need to select a package ID.

96
00:06:29.494 --> 00:06:32.818
This is mandatory for
all the PWAs out there.

97
00:06:32.818 --> 00:06:36.948
Typically, you have a string
that represents your app.

98
00:06:36.948 --> 00:06:39.689
It's a unique ID within the App Store.

99
00:06:39.689 --> 00:06:45.123
And most of the time, we use the URL
of our PWA but in reverse order.

100
00:06:45.123 --> 00:06:49.883
So for example, I can use for
Squoosh, app.squoosh.

101
00:06:49.883 --> 00:06:52.848
And sometimes we say dot PWA.

102
00:06:52.848 --> 00:06:56.877
Any string will work but
at least it needs one dot.

103
00:06:56.877 --> 00:07:00.543
Now publish our display name,
and you click Generate,

104
00:07:00.543 --> 00:07:04.837
and you receive a package ready
to upload to the Microsoft Store.

105
00:07:04.837 --> 00:07:10.625
Of course, to do that, you need to have
a subscription, a publisher subscription.

106
00:07:10.625 --> 00:07:14.421
You need to create an account,
pay the fee, in case there is a fee.

107
00:07:14.421 --> 00:07:17.874
You need to submit some documents,
in case you're are a company.

108
00:07:17.874 --> 00:07:22.399
So you need to prove that you are the
company that you're saying you are.

109
00:07:22.399 --> 00:07:24.604
And after that, you upload the package.

110
00:07:24.604 --> 00:07:27.636
And something similar happens here for
Android, and

111
00:07:27.636 --> 00:07:30.003
it will happen pretty soon on iOS as well.

112
00:07:30.003 --> 00:07:34.914
You click a store package, you select
some properties, you click Generate.

113
00:07:34.914 --> 00:07:39.467
And this generates automatically something
known as AAB, Android App Bundle.

114
00:07:39.467 --> 00:07:44.876
That is a format that you just upload
to the Google Play Store Console.

115
00:07:44.876 --> 00:07:49.015
That is the portal where you
just publish PWAs in the store.

116
00:07:49.015 --> 00:07:53.566
And in settings, you have a lot
of settings that you can change,

117
00:07:53.566 --> 00:07:56.530
including, well, my package is ready.

118
00:08:02.289 --> 00:08:07.494
But we're in the settings,
you can ask for Google Play billing.

119
00:08:07.494 --> 00:08:13.296
If you enable that, then you will be
able to use an API, a charge keep API.

120
00:08:13.296 --> 00:08:18.422
So you can actually charge your users
with a Play Store in a billion system.

121
00:08:18.422 --> 00:08:22.616
So users can pay you a subscription or
for digital goods.

122
00:08:22.616 --> 00:08:25.720
You can create the Chrome OS only package.

123
00:08:25.720 --> 00:08:30.604
So you can create at different entry
in the Play Store only for Chrome OS.

124
00:08:30.604 --> 00:08:32.683
And you can include source code.

125
00:08:32.683 --> 00:08:36.832
In this case, it will give you
an Android Studio project,

126
00:08:36.832 --> 00:08:41.587
then you can continue on your own,
if you know what you're doing.

127
00:08:41.587 --> 00:08:46.111
So this is how you create quickly and
without too much effort,

128
00:08:46.111 --> 00:08:48.816
packages for different app stores.

129
00:08:48.816 --> 00:08:52.324
So the question is,
what about PWA Builder and iOS?

130
00:08:52.324 --> 00:08:53.780
Here's the thing.

131
00:08:53.780 --> 00:08:59.018
PWA Builder used to support iOS,
but then they removed that

132
00:08:59.018 --> 00:09:04.379
because iOS didn't support
service workers for the store.

133
00:09:04.379 --> 00:09:09.215
With iOS 14, so that's 2020,
Apple have an ability to

134
00:09:09.215 --> 00:09:14.237
actually make service workers
compatible with the Webyou, and

135
00:09:14.237 --> 00:09:19.729
that's the technical solution that
we have to publish PWA to a store.

136
00:09:19.729 --> 00:09:24.588
With that in mind,
the PWA Builder team has already published

137
00:09:24.588 --> 00:09:28.147
in their Twitter account
that iOS is coming.

138
00:09:28.147 --> 00:09:35.108
So maybe if you're watching this video
after the live session, maybe it's there.

139
00:09:35.108 --> 00:09:42.711
And if not, you can still write your own
Xcode template to actually wrap your PWA.

140
00:09:42.711 --> 00:09:46.356
Remember, we are not putting
the files of the PWA in the package.

141
00:09:46.356 --> 00:09:51.319
So you can actually create that
PWA launcher using Xcode, and

142
00:09:51.319 --> 00:09:54.097
that will work for iOS and iPadOS.

