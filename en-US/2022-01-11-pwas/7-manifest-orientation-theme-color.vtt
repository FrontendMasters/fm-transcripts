WEBVTT

1
00:00:00.000 --> 00:00:03.386
So please remember to test
everything on every OS,

2
00:00:03.386 --> 00:00:08.584
because if you are expecting your app
to work only on landscape, for example,

3
00:00:08.584 --> 00:00:13.175
if you just say landscape,
well that might not be the case on iPhone.

4
00:00:13.175 --> 00:00:16.789
And on iPhone,
it will also work on portrait, so

5
00:00:16.789 --> 00:00:20.590
your CSS should react to
that orientation as well.

6
00:00:20.590 --> 00:00:25.906
If you want something that you can do
is using media queries, and then show

7
00:00:25.906 --> 00:00:31.928
a warning message to the user saying,
hey, these orientation is not compatible.

8
00:00:31.928 --> 00:00:34.735
So please go and do something.

9
00:00:34.735 --> 00:00:39.130
And back on my iPhone here, and
they wanna show you one particular PWA.

10
00:00:39.130 --> 00:00:45.530
It's actually targeting iPhones that
is actually using that trick with CSS.

11
00:00:45.530 --> 00:00:52.296
It's called eye test.n thing from
New Zealand and it comes from Samsung.

12
00:00:52.296 --> 00:00:58.059
So it's a PWA from Samsung that lets you
test assumption device in your iPhone,

13
00:00:58.059 --> 00:00:58.582
okay?

14
00:00:58.582 --> 00:01:01.547
But it's actually pre, pre good PWA, so

15
00:01:01.547 --> 00:01:06.399
if you look at this, it's actually
inviting me to install the app.

16
00:01:06.399 --> 00:01:08.912
And we're going to talk
about that later as well.

17
00:01:08.912 --> 00:01:14.127
So I will install the PWA,
Samsung iTest, and

18
00:01:14.127 --> 00:01:21.036
now if I open the app,
I will pass the first button.

19
00:01:21.036 --> 00:01:26.598
I have like an Android user
interface within an iPhone, okay?

20
00:01:26.598 --> 00:01:33.276
That's kind of the PWA, but
it doesn't work in landscape.

21
00:01:33.276 --> 00:01:39.240
However, Safari is not supporting the web
app manifest orientation property.

22
00:01:39.240 --> 00:01:43.730
So if I go landscape, actually
the web app goes landscape as well.

23
00:01:43.730 --> 00:01:48.532
However, using media queries orientation,
actually,

24
00:01:48.532 --> 00:01:51.870
it's asking you to rotate your device.

25
00:01:51.870 --> 00:01:58.590
So this is like a fallback solution, so
have in mind that's possible sometimes and

26
00:01:58.590 --> 00:02:03.112
part of the P in PWA,
is to use progressive techniques.

27
00:02:03.112 --> 00:02:09.253
And that means that you should always
have a fallback if one capability or

28
00:02:09.253 --> 00:02:13.695
ability is not available
on one particular device.

29
00:02:16.581 --> 00:02:22.469
The next property that I wanna mention

30
00:02:22.469 --> 00:02:29.285
it's called theme color, theme_color.

31
00:02:29.285 --> 00:02:33.762
It accepts any CSS value, however,

32
00:02:33.762 --> 00:02:39.545
to be safe,
you should stay within RGV colors.

33
00:02:39.545 --> 00:02:44.383
The RGV function or
named colors such as orange,

34
00:02:44.383 --> 00:02:48.867
or pink,
don't use things like gradients or

35
00:02:48.867 --> 00:02:55.484
RGBA because it's not gonna work,
but any other color will work.

36
00:02:55.484 --> 00:03:01.070
The theme color will actually define
how your app will look like for

37
00:03:01.070 --> 00:03:03.972
example if you remember Squoosh,

38
00:03:08.855 --> 00:03:12.550
If you remember Squoosh
is using this pink color.

39
00:03:12.550 --> 00:03:16.837
Well, that's their theme color
that they have in the manifest.

40
00:03:16.837 --> 00:03:19.397
In fact, we can actually go and
see this in action.

41
00:03:25.368 --> 00:03:28.372
If we go to a squoosh.app,

42
00:03:32.957 --> 00:03:37.921
We can open Dev tools,
go to application manifest, and

43
00:03:37.921 --> 00:03:40.781
it's called manifest.json.

44
00:03:40.781 --> 00:03:44.914
So I can click on that file and
see its contents, and

45
00:03:44.914 --> 00:03:48.391
we're going to see the theme color there.

46
00:03:48.391 --> 00:03:52.609
And that's actually the pink
color that we saw before.

47
00:03:56.398 --> 00:04:01.485
The theme color can also
be replaced by a metadata.

48
00:04:01.485 --> 00:04:04.465
So most of the time when
we set a theme color,

49
00:04:04.465 --> 00:04:08.020
we typically also set that
in the HTML as a metadata.

50
00:04:08.020 --> 00:04:10.302
By the way, you know what,

51
00:04:10.302 --> 00:04:15.873
when we open the CSS file we do have
some colors here that we can use.

52
00:04:15.873 --> 00:04:21.844
For example, we have a color theme that
I can copy and paste within my manifest.

53
00:04:21.844 --> 00:04:25.733
There is no way to use
here the CSS variable,

54
00:04:25.733 --> 00:04:29.004
that we have in another file, okay?

55
00:04:29.004 --> 00:04:34.383
So it must be a literal value
that we set in the manifest.

56
00:04:34.383 --> 00:04:39.675
So that's the theme color and
if we wanna add the metadata

57
00:04:39.675 --> 00:04:44.760
within the health we have the meta name,
theme color.

58
00:04:44.760 --> 00:04:47.709
And be careful here, big warning.

59
00:04:47.709 --> 00:04:52.401
So theme color in the manifest
is with underscore, but

60
00:04:52.401 --> 00:04:58.116
theme color in the metadata is with dash,
sorry about that folks.

61
00:04:58.116 --> 00:05:03.585
So pettah name theme color, and for
the content, we use the same value.

62
00:05:03.585 --> 00:05:09.554
And later, we will see that this content
value can be changed with JavaScript.

63
00:05:09.554 --> 00:05:14.649
So then you can have different
theme color based on where you are,

64
00:05:14.649 --> 00:05:20.315
in which routing your web app you are on,
or the current state of the app.

65
00:05:20.315 --> 00:05:23.794
If it's an embodied state or
you have an error in the form,

66
00:05:23.794 --> 00:05:26.781
you can actually put that in red or
yellow, okay?

67
00:05:26.781 --> 00:05:31.406
It also accepts the media, Attribute, so

68
00:05:31.406 --> 00:05:35.875
you can use a media query and for
example have a different theme color for

69
00:05:35.875 --> 00:05:38.870
light and
dark things in the operating system.

70
00:05:38.870 --> 00:05:44.616
So you can have different theme colors
that's not possible in the manifest.

71
00:05:44.616 --> 00:05:49.014
In this manifest, we have only
one value for the theme color.

72
00:05:49.014 --> 00:05:52.759
We have a question about updating
the values in the manifest.

73
00:05:52.759 --> 00:05:55.715
So what happens if we wanna
change the theme color later?

74
00:05:55.715 --> 00:05:58.929
Or if you wanna change an icon,
I didn't set the icon yet,

75
00:05:58.929 --> 00:06:01.104
but what happens if we change the icon?

76
00:06:01.104 --> 00:06:07.536
Well, the answer is not so
simple because it depends on the platform.

77
00:06:07.536 --> 00:06:13.680
In short words, let's say that for
most Android users,

78
00:06:13.680 --> 00:06:17.520
the installed PWA will be recreated

79
00:06:17.520 --> 00:06:22.641
a ring-style with a new
values on the next day,

80
00:06:22.641 --> 00:06:29.571
there is an algorithm that will
be triggered to update the icon.

81
00:06:29.571 --> 00:06:33.890
And maybe now there is a new
theme color for iOS and

82
00:06:33.890 --> 00:06:39.481
desktop today at least,
that those values won't be updated.

83
00:06:39.481 --> 00:06:43.004
So if you want to change the icon,
unfortunately, the icon won't change.

84
00:06:43.004 --> 00:06:45.912
The user needs to reinstall the app.

85
00:06:45.912 --> 00:06:50.911
That's probably gonna change,
assume but it's not there yet.

86
00:06:50.911 --> 00:06:57.877
So the answer is that on Android, the icon
will be recreated with the new properties,

87
00:06:57.877 --> 00:07:02.742
but that's not the case on
the other platforms as of today.

