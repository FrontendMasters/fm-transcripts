WEBVTT

1
00:00:00.250 --> 00:00:04.583
Just to understand service worker,
something that you can try right now.

2
00:00:04.583 --> 00:00:10.252
If you open Google Chrome on android or
desktop, is not gonna work on iOS because,

3
00:00:10.252 --> 00:00:13.720
remember, Chrome on iOS
is not actually Chrome.

4
00:00:14.850 --> 00:00:17.270
It works also with Edge as well.

5
00:00:17.270 --> 00:00:24.673
You can go to
chrome://serviceworker-internals.

6
00:00:24.673 --> 00:00:29.470
In Elvish, it's actually Elvish
serviceworker-internals.

7
00:00:29.470 --> 00:00:34.632
This is like a page where you can actually
debug and see all the service workers

8
00:00:34.632 --> 00:00:39.490
that are currently installed in your
machine and you didn't know that.

9
00:00:40.530 --> 00:00:46.285
So you're going to find probably
hundreds of service workers.

10
00:00:47.655 --> 00:00:50.058
And you did know, for example,

11
00:00:50.058 --> 00:00:54.695
here I can see that I have
the starbucks.com service worker.

12
00:00:54.695 --> 00:01:01.180
Remember you don't need to install an app,
the PWA, to actually get a service worker.

13
00:01:01.180 --> 00:01:05.016
So the ServiceWorker registration and
life-cycle,

14
00:01:05.016 --> 00:01:09.611
it goes completely separated from
the installation of the icon.

15
00:01:09.611 --> 00:01:14.470
So we can use the service worker even
in the browser, okay, so we just work.

16
00:01:14.470 --> 00:01:16.764
So, when you get into the website,

17
00:01:16.764 --> 00:01:21.366
just navigate into the URL of the service
worker that we will register.

18
00:01:21.366 --> 00:01:24.956
And then that service worker
can have some abilities,

19
00:01:24.956 --> 00:01:28.520
such as cashing files or
downloading files.

20
00:01:28.520 --> 00:01:32.807
So, for example, here I can take
the app starbucks.com scope.

21
00:01:32.807 --> 00:01:35.854
Here you can see the JavaScript file.

22
00:01:35.854 --> 00:01:41.419
So you can actually go on and open that
URL in case you wanna see the file.

23
00:01:41.419 --> 00:01:48.009
So it's JavaScript, okay,
so everything is public.

24
00:01:48.009 --> 00:01:52.995
And something that you're going to see
here is that it has an installation status

25
00:01:52.995 --> 00:01:55.140
and a running status.

26
00:01:55.140 --> 00:01:57.090
Right now it's activated.

27
00:01:57.090 --> 00:02:02.780
Activated means that this is the active
service worker for the scope.

28
00:02:02.780 --> 00:02:07.068
So if anyone from that scope,
so from this URL,

29
00:02:07.068 --> 00:02:12.323
wants to make a HTTP request,
the active service worker,

30
00:02:12.323 --> 00:02:18.068
so this file can actually be executed and
run some code.

31
00:02:18.068 --> 00:02:22.380
But it's currently stopped,
so it's not executing code.

32
00:02:22.380 --> 00:02:25.892
Let me show you something, I'm going
to create a new Chrome window here,

33
00:02:27.491 --> 00:02:30.720
I'm going to move it like that.

34
00:02:30.720 --> 00:02:36.064
And I'm going to load app starbucks.com/,
no,

35
00:02:36.064 --> 00:02:41.765
I-don't-like-coffee, that's not true but
anyway.

36
00:02:41.765 --> 00:02:46.773
So, of course, that's a URL that
doesn't exist on Starbucks server.

37
00:02:46.773 --> 00:02:51.780
But pay attention to what happens with
the running status of our service worker.

38
00:02:53.180 --> 00:02:55.204
Now it says running.

39
00:02:55.204 --> 00:02:56.519
So even a 404,

40
00:02:56.519 --> 00:03:01.715
because actually no one knows
beforehand that is going to be a 404.

41
00:03:01.715 --> 00:03:07.890
So it runs the Starbucks ServiceWorker,
so now it's running.

42
00:03:07.890 --> 00:03:09.900
So now it has its own thread.

43
00:03:09.900 --> 00:03:13.340
You can execute code for how long?

44
00:03:13.340 --> 00:03:17.190
Let me close that window.

45
00:03:17.190 --> 00:03:22.490
So most of you are expecting
the running status to go back to stop.

46
00:03:22.490 --> 00:03:26.913
So it's not actually tied
to the browser's tab or

47
00:03:26.913 --> 00:03:31.557
to the PWA that actually
opens that service worker.

48
00:03:31.557 --> 00:03:34.320
For how much time it will be running?

49
00:03:34.320 --> 00:03:35.940
It depends on the browser.

50
00:03:35.940 --> 00:03:38.830
Typically, in Chrome, it's 40 seconds.

51
00:03:38.830 --> 00:03:41.690
And now you can see it's stopped.

52
00:03:41.690 --> 00:03:47.390
So after 40 seconds of inactivity,
the service worker goes back to stop.

53
00:03:47.390 --> 00:03:52.960
And it will wait until an event
will fire another running.

54
00:03:54.230 --> 00:03:55.678
Okay, it doesn't make sense?

55
00:03:55.678 --> 00:03:59.074
So it has a completely separate
life cycle from the tab and

56
00:03:59.074 --> 00:04:02.840
if you open more than one tab
it's going to share the instance.

57
00:04:02.840 --> 00:04:07.329
So you won't have more than one
instance of the same service worker

58
00:04:07.329 --> 00:04:09.090
in memory at once.

59
00:04:09.090 --> 00:04:14.343
So if you have two, three, four tabs or
two, three, four PWAs running the same or

60
00:04:14.343 --> 00:04:17.846
Elvishing, you would have
only one service worker and

61
00:04:17.846 --> 00:04:21.140
that service worker will
have different clients.

62
00:04:22.180 --> 00:04:24.640
That's the word that we are using here.

63
00:04:24.640 --> 00:04:27.960
We have one service worker,
different clients.

64
00:04:27.960 --> 00:04:30.592
Each browser's tab can be a client.

65
00:04:30.592 --> 00:04:34.440
Each PWA standalone
instance can be a client.

66
00:04:34.440 --> 00:04:36.860
An iFrame can also be a client.

67
00:04:36.860 --> 00:04:41.769
Also from this URL,
you can force starting a service worker

68
00:04:41.769 --> 00:04:44.724
even if you don't have any client.

69
00:04:44.724 --> 00:04:49.700
You can stop it and
also you can inspect the service worker.

70
00:04:49.700 --> 00:04:54.533
So in this case, and this is important,
the ServiceWorker is completely detached

71
00:04:54.533 --> 00:04:58.480
from the user interface,
so there are no elements.

72
00:04:58.480 --> 00:05:03.252
And if you go to the console, you can
see I'm in the ServiceWorkerGlobalScope.

73
00:05:04.932 --> 00:05:07.744
And if I tried to make an alert like,
hello,

74
00:05:07.744 --> 00:05:11.630
it doesn't work because we do
not have an alert, actually.

75
00:05:12.690 --> 00:05:17.491
So because we are not in the user
interface, we are in a different thread,

76
00:05:17.491 --> 00:05:19.821
this is not the main thread, okay?

77
00:05:19.821 --> 00:05:22.223
That's the idea of a service worker for
now.

