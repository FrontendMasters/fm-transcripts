WEBVTT

1
00:00:00.000 --> 00:00:05.076
So right now we have a PWA that
works on iOS, it works on Android,

2
00:00:05.076 --> 00:00:08.554
it works in desktop, and it works offline.

3
00:00:08.554 --> 00:00:11.484
So the PWA is kind of ready.

4
00:00:11.484 --> 00:00:14.919
But we still have some room for
improvement.

5
00:00:14.919 --> 00:00:20.067
For example, let's see if we
can integrate our code better.

6
00:00:20.067 --> 00:00:23.194
Of course,
the opportunities are unlimited, okay?

7
00:00:23.194 --> 00:00:27.636
There are several APIs that we can
actually use, there are APIs for

8
00:00:27.636 --> 00:00:30.743
background execution, but time is limited.

9
00:00:30.743 --> 00:00:34.923
So something that we can do
quickly is to add a share.

10
00:00:34.923 --> 00:00:38.724
So because we are in full screen mode or
standalone mode,

11
00:00:38.724 --> 00:00:43.396
remember that we don't have typically,
on mobile devices at least,

12
00:00:43.396 --> 00:00:46.188
we don't have a browser navigation bar.

13
00:00:46.188 --> 00:00:51.161
So if we have content,
such as the text that we are writing,

14
00:00:51.161 --> 00:00:55.740
sometimes we will not move
that content out of our app.

15
00:00:55.740 --> 00:01:00.871
So creating a share action
is actually a good idea.

16
00:01:00.871 --> 00:01:06.847
I'm here in material icons, the search,
so we can actually search for

17
00:01:06.847 --> 00:01:11.940
an icon, and we have an icon with
a name Share that we can use.

18
00:01:11.940 --> 00:01:16.281
So let's add a new button in
our toolbar to actually share

19
00:01:16.281 --> 00:01:19.274
the contents that we have in our notes.

20
00:01:24.690 --> 00:01:29.841
Back in VSCode, I'm opening the HTML and
I'm looking for the toolbar.

21
00:01:29.841 --> 00:01:34.979
I'm going to duplicate this
line that has a button, Learn,

22
00:01:34.979 --> 00:01:39.435
and we're going to use,
instead of Learn, Share.

23
00:01:39.435 --> 00:01:42.603
And the icon will be also share.

24
00:01:42.603 --> 00:01:45.852
And changing the ID to btnShare.

25
00:01:45.852 --> 00:01:47.423
So let's see that in action.

26
00:01:47.423 --> 00:01:52.620
So now, we can see at the bottom that
we have two buttons, Learn and Share.

27
00:01:52.620 --> 00:01:57.200
And Share will actually trigger
the native share dialog

28
00:01:57.200 --> 00:02:00.909
using one of the new APIs available for
PWAs.

29
00:02:00.909 --> 00:02:03.474
But before, let's click on Learn.

30
00:02:03.474 --> 00:02:06.871
Learn will actually open
frontendmasters.com.

31
00:02:09.030 --> 00:02:14.447
And because it's actually
a URL outside of the scope,

32
00:02:14.447 --> 00:02:19.862
we can see that within our app,
we have an inner browser

33
00:02:19.862 --> 00:02:25.180
with a URL bar at the top,
and the same happens on iOS.

34
00:02:25.180 --> 00:02:29.507
So remember,
every time you link to an external URL,

35
00:02:29.507 --> 00:02:33.170
you will get this inner
browser experience.

36
00:02:33.170 --> 00:02:38.045
Now, let's go back to VSCode and
write the share function.

37
00:02:38.045 --> 00:02:44.810
Opening app.js, within the DOM
content loaded event handler,

38
00:02:44.810 --> 00:02:49.393
we're going to search, For

39
00:02:49.393 --> 00:02:54.249
buttonShare, and
add a click event listener to it.

40
00:02:57.371 --> 00:03:04.614
And what we need to do here is to
actually call navigator.share.

41
00:03:04.614 --> 00:03:08.400
This is a new API that might
not be available on every OS.

42
00:03:08.400 --> 00:03:13.013
So we should be able also to
check if the API is not there.

43
00:03:13.013 --> 00:03:16.295
And if it's not there,
maybe we can show a message or

44
00:03:16.295 --> 00:03:19.964
just disable the button or
remove the button from the DOM.

45
00:03:19.964 --> 00:03:24.049
So navigator.share receives
an object with some data.

46
00:03:24.049 --> 00:03:29.986
It can have a title, such as I can
use the name of my app for the title.

47
00:03:31.847 --> 00:03:36.192
Remember that in the manifest,
we use Codepad.

48
00:03:41.669 --> 00:03:43.792
So we can say, Codepad.

49
00:03:43.792 --> 00:03:49.166
And then for the text,
I actually need to go and take my notes.

50
00:03:49.166 --> 00:03:56.932
So what I can do,
Is create a noteString here.

51
00:04:00.834 --> 00:04:04.135
NoteString, we can use map, or

52
00:04:04.135 --> 00:04:09.770
I can just do an old fashioned for
loop here in the code.

53
00:04:09.770 --> 00:04:16.913
So I will start empty, and then I'm
going to take for each note of note,

54
00:04:16.913 --> 00:04:23.600
I'm going to concatenate the new string,
that would be the note.

55
00:04:23.600 --> 00:04:27.620
And maybe we can separate with a pipe or
something.

56
00:04:27.620 --> 00:04:30.290
So this is just grades in a text.

57
00:04:30.290 --> 00:04:34.885
So this is actually pretty simple,
you can use navigator.share,

58
00:04:34.885 --> 00:04:39.002
as well, to share files, also,
or images, and also URLs.

59
00:04:39.002 --> 00:04:43.409
So you can add a URL, but
from now I think it's good enough.

60
00:04:43.409 --> 00:04:46.418
And now, we're back in our mobile devices.

61
00:04:46.418 --> 00:04:49.143
If I click Share on Android,

62
00:04:49.143 --> 00:04:54.143
you can see it's opening
the standard share sheet.

63
00:04:54.143 --> 00:04:56.430
And the same happens on iOS.

64
00:04:56.430 --> 00:05:00.703
So we have these kinds of
integration all over the place to

65
00:05:00.703 --> 00:05:04.720
actually connect with
different services in the OS.

