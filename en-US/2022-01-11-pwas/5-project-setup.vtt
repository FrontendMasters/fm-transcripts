WEBVTT

1
00:00:00.580 --> 00:00:02.611
So now it's time to code.

2
00:00:02.611 --> 00:00:05.455
Okay, we are going to create the PWA.

3
00:00:05.455 --> 00:00:09.095
So, our project will be
called Codepad Masters,

4
00:00:09.095 --> 00:00:15.050
the idea is it's just a simple web app
to store notes while you're coding.

5
00:00:15.050 --> 00:00:17.950
For example, hey,
I need to learn something.

6
00:00:17.950 --> 00:00:22.751
Or, you just hear about the new
cryptocurrency that can

7
00:00:22.751 --> 00:00:27.900
connect with your website,
well you store that for later.

8
00:00:27.900 --> 00:00:32.043
So then you can for example go to Frontend
Masters and learn about that later.

9
00:00:32.043 --> 00:00:37.365
So it's just a small piece
of work that we are going

10
00:00:37.365 --> 00:00:42.201
to make it installable and
offline capable.

11
00:00:42.201 --> 00:00:47.765
So it should work offline and
currently the web app itself,

12
00:00:47.765 --> 00:00:52.326
it's not 100% ready but
it's should just go

13
00:00:52.326 --> 00:00:56.677
directly to the,
let's say to the nice part.

14
00:00:56.677 --> 00:01:01.215
It's already there, so
it's on GitHub, github.com/firtman,

15
00:01:01.215 --> 00:01:04.591
that's my last name, /frontendmasters-pwa.

16
00:01:04.591 --> 00:01:09.307
So this is the initial files, HTML,
CSS and the JavaScript files,

17
00:01:09.307 --> 00:01:11.311
it's plain simple, okay?

18
00:01:11.311 --> 00:01:15.780
And by the way, you can actually
download these forktails or

19
00:01:15.780 --> 00:01:20.480
you can start a new project in
Visual Studio from this URL.

20
00:01:20.480 --> 00:01:23.180
Or if you want,
you can start with plain HTML.

21
00:01:23.180 --> 00:01:26.770
So everything that we're going to go in,
it can work with your own HTML.

22
00:01:26.770 --> 00:01:30.503
So if you have an HTML, if you have a web
app, you don't need to use the one that

23
00:01:30.503 --> 00:01:33.370
I'm going to to use right now,
you can use yours.

24
00:01:33.370 --> 00:01:38.010
And have of all the layers that
we're going to have on your HTML.

25
00:01:38.010 --> 00:01:40.100
Okay, so
you can also work on your own project.

26
00:01:41.750 --> 00:01:47.980
This project is a Vanilla web app,
so no react, no libraries, okay?

27
00:01:47.980 --> 00:01:51.013
Just pure HTML, CSS and JavaScript.

28
00:01:51.013 --> 00:01:56.650
And we're going to add on top of that a
PWA because there is no build process and

29
00:01:56.650 --> 00:01:57.884
it's not a PWA.

30
00:01:57.884 --> 00:02:00.684
So we are not passing the criteria

31
00:02:00.684 --> 00:02:05.486
because it's just HTML as
if it was written in 1996.

32
00:02:05.486 --> 00:02:12.340
So what we're going to do, we're going
to serve and run the web app first.

33
00:02:12.340 --> 00:02:14.070
We're going to work on the user interface.

34
00:02:15.090 --> 00:02:19.830
So we're going to create this installation
metadata, that will be the first part.

35
00:02:19.830 --> 00:02:25.613
So how to make this app installable, then
we're going to make it offline capable.

36
00:02:25.613 --> 00:02:29.045
Because by default, it's a website,
if the server is down,

37
00:02:29.045 --> 00:02:33.339
or if we don't have network connection,
the website doesn't work, okay?

38
00:02:33.339 --> 00:02:36.300
So we're going to make it offline capable.

39
00:02:36.300 --> 00:02:37.974
And we are going to prepare it for

40
00:02:37.974 --> 00:02:41.430
App Store distribution in
case you wanna do that.

41
00:02:41.430 --> 00:02:45.030
Because distributing on
the App Store is actually optional.

42
00:02:45.030 --> 00:02:49.911
In fact, on some apps,
it's not even possible.

43
00:02:49.911 --> 00:02:54.575
Okay, so I don't wanna get in an extreme
situations like adult content,

44
00:02:54.575 --> 00:02:58.355
but also there are other
situations that are not possible.

45
00:02:58.355 --> 00:03:01.818
For example, if you're making an app for
a corporation, for

46
00:03:01.818 --> 00:03:05.824
employees of a company like a corporate
app, it cannot be in the store.

47
00:03:05.824 --> 00:03:10.827
So it can be a PWA installed from the
browser, but it cannot go to the store.

48
00:03:10.827 --> 00:03:13.565
So the store or the stores have rules, and

49
00:03:13.565 --> 00:03:16.470
we need to follow them
if you wanna be there.

50
00:03:18.320 --> 00:03:24.280
Okay, so I'm here now in VS Code,
Visual Studio Code.

51
00:03:24.280 --> 00:03:25.860
And this is actually my project.

52
00:03:25.860 --> 00:03:29.500
Remember, you can use this project or
if you want, you can use your own HTML or

53
00:03:29.500 --> 00:03:31.640
even an empty HTML will work.

54
00:03:31.640 --> 00:03:34.093
Right now I have an HTML
that looks like this.

55
00:03:34.093 --> 00:03:40.180
It just contains two other resources,
styles.css and app.js.

56
00:03:40.180 --> 00:03:42.690
And then it's actually pretty simple.

57
00:03:42.690 --> 00:03:49.000
Okay, we have an h1, we have a form where
you can enter a new note in a text area.

58
00:03:49.000 --> 00:03:53.095
And then we have a toolbar
with right now one button and

59
00:03:53.095 --> 00:03:56.200
what I'm using here is material icons.

60
00:03:57.410 --> 00:04:03.920
That is an open solution to actually add
icons to your system based on web fonts.

61
00:04:03.920 --> 00:04:08.140
And then we also have a toolbar here
with one button that says learn,

62
00:04:08.140 --> 00:04:10.620
that's what we have right now.

63
00:04:10.620 --> 00:04:15.395
And an empty URL for
notes, that's the HTML.

64
00:04:15.395 --> 00:04:21.167
The CSS just in the body,
I have just a couple of variable for

65
00:04:21.167 --> 00:04:26.016
colors in case you wanna
change the color scheme or

66
00:04:26.016 --> 00:04:33.080
in case you wanna make a night or
a dark version of this theme previously.

67
00:04:33.080 --> 00:04:37.760
Here we have the font face definition for
material icons.

68
00:04:37.760 --> 00:04:44.166
So we have an external dependency here
on gstatic.com, that's Google Fonts,

69
00:04:44.166 --> 00:04:50.590
where we are downloading material icons,
and some basic CSS with Flexbox.

70
00:04:50.590 --> 00:04:52.210
Nothing really complicated.

71
00:04:52.210 --> 00:04:56.198
Okay, we have time later
to actually check that.

72
00:04:56.198 --> 00:05:02.524
And on the JavaScript file,
also we have just an empty array of nodes.

73
00:05:02.524 --> 00:05:06.028
And then on DOMContentLoaded,

74
00:05:06.028 --> 00:05:11.748
what we have is a function
that renders those notes.

75
00:05:11.748 --> 00:05:19.040
And then, a form that when we have
an event listener on the form.

76
00:05:19.040 --> 00:05:20.880
When you're submitting the form,

77
00:05:20.880 --> 00:05:25.233
we're trying to see if you type something
that takes area, and if you type something

78
00:05:25.233 --> 00:05:29.040
and pushing the new note in the array and
rendering the notes again.

79
00:05:29.040 --> 00:05:32.730
That's actually pretty straightforward and
simple solution.

80
00:05:32.730 --> 00:05:37.700
And render nodes, it's just taking
that array and for each node,

81
00:05:37.700 --> 00:05:43.392
it's creating a node, so it's creating
an li element and a delete button.

82
00:05:43.392 --> 00:05:44.679
Okay, pretty simple.

83
00:05:44.679 --> 00:05:51.100
In fact, let's see this in action, so
I'm going to serve these in a server.

84
00:05:51.100 --> 00:05:56.058
So something important is that PWA's
will not work over the file protocol so

85
00:05:56.058 --> 00:05:59.610
I cannot just double-click
in the index HTML.

86
00:05:59.610 --> 00:06:05.370
And open that in the browser, mean,
it will work maybe, but not as a PWA.

87
00:06:05.370 --> 00:06:07.834
All the additions that we need for

88
00:06:07.834 --> 00:06:13.540
actually passing the criteria
will work only over a web server.

89
00:06:13.540 --> 00:06:16.300
So I'm going to open a terminal and

90
00:06:16.300 --> 00:06:21.160
I'm going to use an open source
server available on NPM.

91
00:06:21.160 --> 00:06:25.236
So if you have node JS installed,
you can type what I'm typing,

92
00:06:25.236 --> 00:06:28.343
if not,
you can use any web server that you like.

93
00:06:28.343 --> 00:06:33.721
I'm going to say npx
serve the current folder.

94
00:06:33.721 --> 00:06:36.323
And that will actually create a server.

95
00:06:36.323 --> 00:06:42.118
It will install temporarily this
library in case you don't have that and

96
00:06:42.118 --> 00:06:46.780
it will create a new server,
by default in Port 5000.

97
00:06:46.780 --> 00:06:52.151
So now I can open localhost 5000
to actually see this in action.

98
00:06:52.151 --> 00:06:58.509
Ctrl + click on Windows or
Cmd + click on the Mac And

99
00:06:58.509 --> 00:07:03.392
this is how Codepad Masters looks
like on Safari on the Mac but

100
00:07:03.392 --> 00:07:10.070
we know it's not compatible with PWA's but
it will work as just a normal website.

101
00:07:10.070 --> 00:07:17.080
So the idea is that I add a new note here,
I need to learn about service workers.

102
00:07:17.080 --> 00:07:22.421
I save here and it just appears there and
I can delete that.

103
00:07:22.421 --> 00:07:26.566
Okay, that's the PWA so far,
and then at the bottom,

104
00:07:26.566 --> 00:07:31.165
we have a toolbar right now with
one button that says Learn and

105
00:07:31.165 --> 00:07:35.608
if I click there,
it just goes to frontendmasters.com.

