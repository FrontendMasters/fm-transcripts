WEBVTT

1
00:00:00.000 --> 00:00:03.585
Let's create another conflict
via rebase instead of merge.

2
00:00:03.585 --> 00:00:05.685
I added some bolds here just so

3
00:00:05.685 --> 00:00:10.477
I don't goof it up because I kept
goofing it up when I do it by myself.

4
00:00:10.477 --> 00:00:12.308
First, we need to create
a change in hello git.

5
00:00:12.308 --> 00:00:15.758
We're gonna go from A+2 to A+3.

6
00:00:15.758 --> 00:00:18.882
All right, so
we're gonna start in hello git.

7
00:00:18.882 --> 00:00:19.943
I'm gonna go to the read me and.

8
00:00:19.943 --> 00:00:23.251
And I'm gonna go A +3 fantastic.

9
00:00:23.251 --> 00:00:28.067
Then we're gonna create another
change in bar.md the last line,

10
00:00:28.067 --> 00:00:31.003
okay, we're gonna go to the last line.

11
00:00:31.003 --> 00:00:34.186
So bar.md go all the way down and go.

12
00:00:34.186 --> 00:00:36.631
Last line from hello.

13
00:00:36.631 --> 00:00:41.430
This is probably not what I put in
the course but you can follow along.

14
00:00:41.430 --> 00:00:45.990
Now I'm gonna go get status you can see
those two changes I could go get diff to

15
00:00:45.990 --> 00:00:50.995
look at the two changes if I want to okay
good A+3 added to the last line fantastic.

16
00:00:50.995 --> 00:00:55.545
Get add this get commit
let's go I don't know

17
00:00:55.545 --> 00:01:00.352
what to call this thing
a change from hello git.

18
00:01:00.352 --> 00:01:04.555
For rebase conflict, enjoy your day,
very nice message now so

19
00:01:04.555 --> 00:01:08.063
I'm making me happy when I
read it on the other side.

20
00:01:08.063 --> 00:01:10.476
All right, so now we're gonna do
the exact same thing in remote.

21
00:01:10.476 --> 00:01:13.078
I'm gonna change A+2 to A+4.

22
00:01:13.078 --> 00:01:17.396
And then we'll make a change in bar,
but this time to the first line,

23
00:01:17.396 --> 00:01:19.638
not the last line, the first line.

24
00:01:19.638 --> 00:01:24.284
This is important, all right,
so we'll do it again,

25
00:01:24.284 --> 00:01:31.160
we'll increment that twice, go to bar,
and we'll go first line, change bar.

26
00:01:31.160 --> 00:01:36.013
All right, we can see it right there,
we can diff it if you want to,

27
00:01:36.013 --> 00:01:40.522
A+4, first line, awesome,
add in here, git commit, and

28
00:01:40.522 --> 00:01:46.275
then we'll go change for a remote for
a wonderful rebase conflict, awesome.

29
00:01:46.275 --> 00:01:48.508
Just makes me feel so
happy doing it that way.

30
00:01:48.508 --> 00:01:50.598
All right, so now that we've done that,

31
00:01:50.598 --> 00:01:54.552
we're gonna rebase remote gets trunk
with hello git and create the conflict.

32
00:01:54.552 --> 00:01:58.938
Now, remember,
that means you gotta go git pull rebase.

33
00:01:58.938 --> 00:02:02.058
Long as you don't have the option,
auto magically enabled,

34
00:02:02.058 --> 00:02:03.440
this should just work now.

35
00:02:03.440 --> 00:02:08.292
There we go, we have this wonderful error
message, but look at it kinda closely.

36
00:02:08.292 --> 00:02:09.251
What do you see here?

37
00:02:09.251 --> 00:02:12.733
I see, okay,
getting some information from hello git.

38
00:02:12.733 --> 00:02:14.230
We're gonna auto-merge README.

39
00:02:14.230 --> 00:02:16.106
Ooh, there's a conflict in README.

40
00:02:16.106 --> 00:02:18.563
We're gonna auto-merge bar.

41
00:02:18.563 --> 00:02:24.075
No problems, bar was nicely merged,
the README could not be merged.

42
00:02:24.075 --> 00:02:26.815
Therefore, we have to manually do this.

43
00:02:26.815 --> 00:02:30.034
All right, let's manually fix this,
I'll make sure I did.

44
00:02:30.034 --> 00:02:35.184
Go ahead with all these things.

45
00:02:35.184 --> 00:02:37.085
All right, so
let's check out the conflict.

46
00:02:37.085 --> 00:02:38.363
So if I go git status,

47
00:02:38.363 --> 00:02:42.412
you'll see right here that bar is
in the green because it's ready.

48
00:02:42.412 --> 00:02:43.466
It's ready to be committed.

49
00:02:43.466 --> 00:02:44.437
It was able to merge it.

50
00:02:44.437 --> 00:02:46.723
Nothing you need to worry about.

51
00:02:46.723 --> 00:02:49.503
You're good to go but
this one has the both modified.

52
00:02:49.503 --> 00:02:52.471
So this is what I was talking about with
the whole both modified thing where you

53
00:02:52.471 --> 00:02:53.256
need to resolve it.

54
00:02:53.256 --> 00:02:57.524
And so we just simply have to go
through and do the exact same thing.

55
00:02:57.524 --> 00:02:59.938
So let's fix the README.

56
00:02:59.938 --> 00:03:02.575
All right, so I'm gonna go vin README.

57
00:03:02.575 --> 00:03:05.597
I want you to tell me something that's
different than what it was with merge.

58
00:03:05.597 --> 00:03:06.840
What do you see that's different?

59
00:03:06.840 --> 00:03:07.562
How will this work?

60
00:03:07.562 --> 00:03:10.724
I'll go back here and
I'll write this cat README.

61
00:03:10.724 --> 00:03:13.522
A + 3, right?

62
00:03:13.522 --> 00:03:17.473
Why does it say HEAD is A+3?

63
00:03:17.473 --> 00:03:20.470
That's upstream's that's not our change.

64
00:03:20.470 --> 00:03:21.566
That's upstream's change.

65
00:03:21.566 --> 00:03:23.123
Why is it HEAD?

66
00:03:23.123 --> 00:03:25.442
&gt;&gt; That's where it currently is in the.

67
00:03:25.442 --> 00:03:30.162
&gt;&gt; In rebase, when you rebase, you check
out the branch you're rebasing on,

68
00:03:30.162 --> 00:03:32.689
then you play your commits one at a time.

69
00:03:32.689 --> 00:03:36.001
Then you check out the branch
from whence you came, and

70
00:03:36.001 --> 00:03:38.240
then it's updated to nice, right?

71
00:03:38.240 --> 00:03:42.178
So you gotta remember that, it's
inverted when you're looking at rebates.

72
00:03:42.178 --> 00:03:47.348
Ours is theirs and
theirs is ours, it's that easy.

73
00:03:47.348 --> 00:03:52.032
I, by the way, this is that one
part of git that's just it's if you

74
00:03:52.032 --> 00:03:55.473
know how rebase works,
it makes perfect sense.

75
00:03:55.473 --> 00:03:58.110
And even when it makes perfect sense,
it's still stupid.

76
00:03:58.110 --> 00:03:59.024
It's how I feel about it.

77
00:03:59.024 --> 00:04:01.125
Just why you gotta be like that.

78
00:04:01.125 --> 00:04:02.348
You know what I mean?
You gotta reverse it.

79
00:04:02.348 --> 00:04:06.917
And the worst part is that
once you remember this and

80
00:04:06.917 --> 00:04:11.707
you go like this, okay,
rebase is the opposite one.

81
00:04:11.707 --> 00:04:15.067
You're gonna be, dang it is merge
theirs in ours or is it ours?

82
00:04:15.067 --> 00:04:16.092
And then which one's rebase?

83
00:04:16.092 --> 00:04:18.772
And then all of a sudden you reverse
yourself and you're just, dang it.

84
00:04:18.772 --> 00:04:21.220
I can't remember, so
I'll just remember how rebase works.

85
00:04:21.220 --> 00:04:25.324
Instead of trying to remember some cute
way to remember that it's ours and theirs.

86
00:04:25.324 --> 00:04:28.928
If you just remember that rebase first
checks out the branch you're rebasing and

87
00:04:28.928 --> 00:04:31.533
then plays on top,
it's very easy to always remember it.

88
00:04:31.533 --> 00:04:37.304
So just a little, that's four years of me
being confused about theirs versus ours,

89
00:04:37.304 --> 00:04:39.673
and then finally just reading it.

90
00:04:39.673 --> 00:04:42.238
And then you don't
reverse yourself anymore.

91
00:04:42.238 --> 00:04:45.489
All right, let's see, and

92
00:04:45.489 --> 00:04:50.648
we already talked about this, yeah, yeah.

93
00:04:50.648 --> 00:04:52.830
Let's see,
let's choose our conflict in this case.

94
00:04:52.830 --> 00:04:55.744
Let's choose hello gits change.

95
00:04:55.744 --> 00:04:59.205
So remember, cause we're currently
checked out with hello gits,

96
00:04:59.205 --> 00:05:01.461
I'm just saying it from gits perspective.

97
00:05:01.461 --> 00:05:04.672
Checkout, let's commit with a hello git.

98
00:05:04.672 --> 00:05:08.108
Let's not commit with remote.

99
00:05:08.108 --> 00:05:09.736
So we'll go like this.

100
00:05:09.736 --> 00:05:11.101
We'll erase that.

101
00:05:11.101 --> 00:05:12.516
There we go, A+3.

102
00:05:12.516 --> 00:05:14.358
I want the A+3 one.

103
00:05:14.358 --> 00:05:18.058
Now, don't goof this one up on accident.

104
00:05:18.058 --> 00:05:22.293
You'll notice right here that it says,
to be able to fix these conflicts,

105
00:05:22.293 --> 00:05:23.921
you do get rebase continue.

106
00:05:23.921 --> 00:05:26.984
If you actually do commit,
you've seen me do it a couple times,

107
00:05:26.984 --> 00:05:28.706
which I haven't explained it yet.

108
00:05:28.706 --> 00:05:31.952
You can get reset soft,
hit head, tilty one, and

109
00:05:31.952 --> 00:05:35.285
you can undo your commit and
then rebase continue.

110
00:05:35.285 --> 00:05:37.850
Well, I'll show you that in a little bit,
but there you go.

111
00:05:37.850 --> 00:05:39.954
So now I can go get add.

112
00:05:39.954 --> 00:05:42.195
There we go, now notice that it went away.

113
00:05:42.195 --> 00:05:44.006
Why did it go away?

114
00:05:44.006 --> 00:05:50.763
Silence, is that the reason,
just a strong silent type, no.

115
00:05:50.763 --> 00:05:55.567
[INAUDIBLE]
&gt;&gt; Yes, it's cuz, remember,

116
00:05:55.567 --> 00:06:01.351
right now we're in perspective of hello
git, we're in perspective of our upstream.

117
00:06:01.351 --> 00:06:07.543
Therefore, we accepted upstreams change,
therefore, there's no change right now.

118
00:06:07.543 --> 00:06:10.800
I know it's very frustrating to
think about these things, but

119
00:06:10.800 --> 00:06:14.304
it's good kind of exercise to go
through now you kinda know, okay,

120
00:06:14.304 --> 00:06:16.349
I know it's it's very easy to goof up.

121
00:06:16.349 --> 00:06:20.747
So now I just simply go
git rebase continue.

122
00:06:20.747 --> 00:06:24.656
Now we get this opportunity
to edit the message, to say,

123
00:06:24.656 --> 00:06:27.675
hey, a wonderful, nice rebase conflict.

124
00:06:27.675 --> 00:06:28.930
I'm gonna save it.

125
00:06:28.930 --> 00:06:30.676
And there we go, it's beautiful.

126
00:06:30.676 --> 00:06:34.720
Our branch is currently ahead
of origin trunk by one commit.

127
00:06:34.720 --> 00:06:38.404
Awesome, if we do a little log one line,
you can see right here,

128
00:06:38.404 --> 00:06:41.012
we had this wonderful
change from hello git.

129
00:06:41.012 --> 00:06:44.353
Then we resolved the conflict but
there's no conflict commit, right?

130
00:06:44.353 --> 00:06:49.447
We just simply resolved it and continued
our rebase, which means if I were to

131
00:06:49.447 --> 00:06:55.029
add in a dash P, you could see we have the
first line changed to bar, and that's it.

132
00:06:55.029 --> 00:06:57.385
We don't have the A +4 anymore.

133
00:06:57.385 --> 00:07:02.501
We literally erased it out of existence.

134
00:07:02.501 --> 00:07:05.009
I know, it's a little emotionally
painful when you think about it.

135
00:07:05.009 --> 00:07:07.839
So this is some of the dangers
of rebase is that you

136
00:07:07.839 --> 00:07:11.303
can actually you're fully
removing something right now.

137
00:07:11.303 --> 00:07:13.152
Cuz you move forward your commit,

138
00:07:13.152 --> 00:07:16.864
then you edited your commit in such
a way that you remove your change.

139
00:07:16.864 --> 00:07:18.609
Your change did not exist anymore.

140
00:07:18.609 --> 00:07:21.111
And now it's just this
change you have left.

141
00:07:21.111 --> 00:07:23.965
&gt;&gt; It somewhere in
the ref log still right?

142
00:07:23.965 --> 00:07:26.766
&gt;&gt; That change,
you probably find in the reflog for sure.

143
00:07:26.766 --> 00:07:32.373
So if you did a get reflog where it is,
this one right here is my guess.

144
00:07:32.373 --> 00:07:35.621
This looks about right,
a change from remote and wonderful rebase.

145
00:07:35.621 --> 00:07:39.805
So if I go this, get log key this,
yeah, there it is.

146
00:07:39.805 --> 00:07:40.875
So you can see it right there.

147
00:07:40.875 --> 00:07:43.178
So we can get back to it.

148
00:07:43.178 --> 00:07:49.486
It's just since there was no conflict
commit, you lose that information.

149
00:07:49.486 --> 00:07:53.111
So this would be a good argument for
why you shouldn't use rebase.

150
00:07:53.111 --> 00:07:55.762
This is probably the best
argument honestly.

151
00:07:55.762 --> 00:08:01.213
I just don't think you get
any better than this one.

152
00:08:01.213 --> 00:08:04.277
Just because I don't like the idea
of losing information but

153
00:08:04.277 --> 00:08:07.711
at the exact same time it makes
perfect sense if you erase your code.

