[00:00:00]
>> Now don't forget rebase replays commits on history. So, looks like we already have this. Yeah, ask README. We already went through all this, sorry, hold on. All right, so we're gonna do it again, except for this time instead of accepting ours, which is theirs. We're gonna accept theirs which is ours.

[00:00:16]
So, in hello git, let's do A + 5, in remote git, let's do A + 6. So let's go to our upstream, hello git, and go and do A + 5. A + 5, perfect. I'm gonna go to remote and I'm gonna go in here and go A + 6.

[00:00:51]
I just wanna make sure that I don't have any other things to do here. Make sure I haven't goofed out anything. Okay, there we go. Git status, awesome, git add this, git commit A + 6. There we go. Now we need to pull in our origin trunk and rebase on it.

[00:01:10]
So, git pull rebase. Again, we have the simple conflict. We just need to resolve it now and then remember, we're gonna choose theirs, which is ours. We don't wanna choose ours, which is theirs. So if you open up the README, you'll see there's A + 6, which is in the theirs category.

[00:01:29]
So erase that, save it. There we go. We have now officially done that. We go to status, we add it. If you check on status, you can see right here, all conflicts are fixed. Run this. It's waiting for you to say that you're done. I'm gonna take this command.

[00:01:43]
Rebase, continue. Awesome, now we have a chance to edit our commit message if we want to. I'm gonna keep it as A + 6. Awesome, so I can go get log one line and you can see right here there's that. Here's our previous change and now we have the A + 6 change, all right?.

[00:02:09]
This is where it just gets kind of annoying. We're gonna do this a little bit. Let's just add a new line right below A + 6 in hello git. Just one new line, okay? So let's go to hello git, open up the README and go NewLine. Let's save it, git status, git add, git commit, NewLine, go back to remote and I'm gonna get pull this one in with a rebase.

[00:02:40]
Now remember, rebase, checks out the thing I'm going to, replace the commands one at a time. And look at this, we got a conflict. Don't fix the conflict. Just check it out. Look at that. It's like we're all over again. We're doing the exact same thing again and we've already fixed it, yet here's the exact same conflict again.

[00:03:01]
So it can be a little bit emotionally painful if you have to fix the same conflict over and over and over again. It's almost like I wish git, you could reuse recorded resolutions. That would be really, really nice, right? That's me saying to your face the thing you're supposed to use and you don't realize that.

[00:03:23]
I'm saying it if you don't know about it, yeah, it's like the joke, you get it is like right there. It's pretty funny, all right anyway. So we see this, it's like, man this stinks, right? And so we could fix the conflict. Don't actually commit it, let's fix the conflict to the point where we have A + 6 plus the NewLine, right?

[00:03:44]
So I'm gonna have to merge those changes together, right? So I'm gonna have to go, delete that, delete this, and then move that one down. Kind of stinks, right? This is where things really get crappy when you have conflicts like that because then they get really hard to understand.

[00:04:03]
All right, so we're not gonna resolve yet. By the way, does this make sense now with how rebase works? Do we all understand why this happened? The replaying of commits, where we're gonna conflict add infinitum, cuz we're just replaying something that has changed in the same place twice.

[00:04:22]
Remember, it always replays one at a time.

