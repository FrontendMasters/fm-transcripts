[00:00:00]
>> By the way, I do want everybody if you're following along. You really do want to make sure you have the same experience I'm gonna have and so I want you to try to make a Git into its default setting. So if you've set an initial branch, you may want to turn that off for now you can tell by just taking this command, copying and going to the command line input and putting it in.

[00:00:20]
I have one right there so I'm gonna do the same thing and I'm just gonna go like this, unset. And so now there's nothing there. And so I have the commands right here on the screen. Please unset any initial default branch. You don't have to, but we're gonna be setting it along the way.

[00:00:38]
Also, if you have rerere enabled. It'd be good if you don't have re enabled for this because if you do, you'll miss out on some of the reasons why Git is fantastic. So Awesome. Now that we have this, we can keep on going. So everybody, hopefully you have all of your default settings properly set up and now it's time to, well, it's time to get good, okay?

[00:00:58]
I'm ready to get good. Hopefully, you are. So how things will be structured. Every section is gonna come with some question-and-answer part where I'll say, hey, here's the thing, and then you're gonna look at the thing and hopefully you'll internalize that then I'll ask you a question like, all right, let's stage the files.

[00:01:14]
And if I use these terms, hopefully you remember what they all mean. And then you're gonna be able to do it fantastically. You guys will all be awesome and everyone will get a promotion when they're done here. All right, your first Git repo. I'm sure this is not your first repos, but let's just pretend it is and to make sure that nobody else, people that haven't ever used Git, they can follow along as well.

[00:01:35]
So let's build our first repo. We're not even going to draw Git. You guys already get it right now at this point, we're just gonna move on. So configuring your Git experience before we begin. You want to configure your Git experience. This is that one thing you do when you first set up your computer and that you've completely forgotten how it works.

[00:01:53]
You just know you did it at some point in your lifetime. And now we're gonna do it again. How Git config Is it's a lot like JavaScript's Object.assign. You have a global config and you have a local config. There's technically a third one and a fourth one, but we're gonna ignore those ones.

[00:02:09]
For now, there's just global and local settings. Git config is a lot like JavaScript's Object.assign. You have your global config, which should be for every single project, and then you have your specific project level config. So maybe in one project I only wanna use rebase, and another project I don't wanna use it.

[00:02:27]
Maybe in one project I wanna have it under my personal name, whereas I want all my projects to be under, say, my work email. And so you can set them up individually so you don't goof it up. It's very nice. So some key facts all Git keys are in the shape of section.key.

[00:02:45]
Is really important to remember because if you don't remember that you'll get these weird errors and they'll feel arcane. Remember section.key is the key to any Git config. Global means it's for all projects, user.name and user.email are the keys used in helping create a commit. So when future you looks in the past and tries to do a Git blame, who do they see other than yourself?

[00:03:11]
Well, it's driven by these two things right here, username and user email. So to add something to your config, you do git config add, then you can do global and the key end of value. So just like you just think of it like a hash map, all right?

[00:03:25]
It's pretty straightforward. You can view anything with get config-git and then the key name, all right? So pretty straightforward. So very first problem at make sure you have your username and your user email, if you don't already have those values. It'll be very nice to do that. All right, I just assume everybody already has this.

[00:03:44]
Make sure you check to see that you have your user email and your username set up. If you don't, it's just annoying, honestly. All right, quick solution, there you go. Here's me adding my username and my user email. So hopefully everybody else has that. Just to make sure I have that, I'll just copy these right now, throw them in there bought a Bing, bought a Boom, I got my git config username and user email, primegin@aol.com.

[00:04:06]
Great email right there.

