WEBVTT

1
00:00:00.009 --> 00:00:01.474
So we're gonna talk about ours and theirs.

2
00:00:01.474 --> 00:00:02.783
You've heard me say this
multiple times now.

3
00:00:02.783 --> 00:00:04.840
Ours is theirs and
theirs is ours with rebase,

4
00:00:04.840 --> 00:00:06.587
whereas it's the opposite for merge.

5
00:00:06.587 --> 00:00:10.080
So long as you have one of those correct,
you'll get the other one correct,

6
00:00:10.080 --> 00:00:12.055
or you can just remember how rebase works.

7
00:00:12.055 --> 00:00:18.548
So sometimes you just wanna be
able to pick just one side.

8
00:00:18.548 --> 00:00:21.385
You don't wanna have to go through and
manually resolve each one of the things.

9
00:00:21.385 --> 00:00:25.085
You just wanna say, hey,
change A is better than change B,

10
00:00:25.085 --> 00:00:26.947
I just want change A, right?

11
00:00:26.947 --> 00:00:31.640
By the way, there's a very well known
Netflix person named Some Coding Guy, and

12
00:00:31.640 --> 00:00:35.035
he even says that ours and
theirs is the worst thing in Git.

13
00:00:35.035 --> 00:00:37.290
So it confuses everybody.

14
00:00:37.290 --> 00:00:41.850
So if you feel kinda confused about it,
don't worry, you're not the only one that

15
00:00:41.850 --> 00:00:46.621
I thinks it's completely ridiculous and
also makes perfect sense, but ridiculous.

16
00:00:46.621 --> 00:00:51.022
All right, so when I say ours, I do mean
our current branch, when I say theirs,

17
00:00:51.022 --> 00:00:52.750
I do mean the incoming branch.

18
00:00:52.750 --> 00:00:58.210
So if you want to select a change,
you can just simply do git checkout --ours

19
00:00:58.210 --> 00:01:03.338
path to the file, and it will just
select the entire file's change set.

20
00:01:03.338 --> 00:01:07.469
And if you do theirs, it will select
the entire file change set for

21
00:01:07.469 --> 00:01:10.265
just theirs, and it's only for that file.

22
00:01:10.265 --> 00:01:12.894
So let's do it again,
let's make another conflict.

23
00:01:12.894 --> 00:01:18.468
We'll do A + 7 in hello, A + 8 in remote,
and let's do a merge from

24
00:01:18.468 --> 00:01:23.490
upstream to resolve it, and
let's choose ours with a merge.

25
00:01:23.490 --> 00:01:27.308
So I'll go to hello,

26
00:01:27.308 --> 00:01:31.973
then the README, A + 7,

27
00:01:31.973 --> 00:01:37.285
A + 7, do it again here, A.

28
00:01:40.603 --> 00:01:43.674
There we go,
I've done both to hello and to remote.

29
00:01:43.674 --> 00:01:46.792
Now all I need to do is just simply
merge those two together and

30
00:01:46.792 --> 00:01:49.065
then we'll get the conflict, so git pull.

31
00:01:49.065 --> 00:01:51.875
Notice that I'm using a merge,
I'm not rebasing.

32
00:01:51.875 --> 00:01:54.297
Awesome, I have the conflict,

33
00:01:54.297 --> 00:01:59.855
now I'm just gonna simply go
git checkout --ours README.

34
00:01:59.855 --> 00:02:01.564
So if I do that and I go git status,

35
00:02:01.564 --> 00:02:04.812
you'll see it says both modified
cuz we haven't added it yet.

36
00:02:04.812 --> 00:02:09.835
If I cat the README, you'll see it's
just our change, it did it for us.

37
00:02:09.835 --> 00:02:14.221
That also means if the remote
had other changes that

38
00:02:14.221 --> 00:02:18.005
weren't conflicted, what is it gonna do?

39
00:02:19.515 --> 00:02:20.254
&gt;&gt; Still pull them in.

40
00:02:20.254 --> 00:02:21.607
&gt;&gt; It's gonna pull in everything on ours.

41
00:02:21.607 --> 00:02:24.239
So just things to remember,
choosing hours,

42
00:02:24.239 --> 00:02:27.687
you're choosing this experience
versus that experience.

43
00:02:27.687 --> 00:02:31.229
So just remember that,
it's a full deal here.

44
00:02:31.229 --> 00:02:34.241
So sometimes that's why you wanna
kinda go through hand by hand,

45
00:02:34.241 --> 00:02:35.297
select what you want.

46
00:02:35.297 --> 00:02:36.926
There we go, pretty straightforward.

47
00:02:36.926 --> 00:02:40.079
We checked out ours, now all we
have to do is just simply merge it.

48
00:02:40.079 --> 00:02:45.403
So I'll just simply go git, add this,
git commit, let's see, merged.

49
00:02:45.403 --> 00:02:46.523
Why not?

50
00:02:46.523 --> 00:02:49.532
These commit messages are just
getting worse as the day goes on,

51
00:02:49.532 --> 00:02:51.493
which really represents true using Git.

52
00:02:51.493 --> 00:02:55.767
This might be the most true version of
using Git, is where your commit messages

53
00:02:55.767 --> 00:02:58.642
just disproportionately
get worse as time goes on.

54
00:02:58.642 --> 00:03:00.973
It's just the worst, right?

55
00:03:00.973 --> 00:03:03.904
All right, so
we can do a quick little log.

56
00:03:03.904 --> 00:03:08.605
I can go git log --oneline --graph, and
we'll just do the last ten commits.

57
00:03:08.605 --> 00:03:12.761
And you can see right here,
you can see the A + 7 over here, but

58
00:03:12.761 --> 00:03:16.627
then we just merged in A8,
with A + 7, we get the merge.

59
00:03:16.627 --> 00:03:18.403
So there we go.

60
00:03:18.403 --> 00:03:23.345
I mean, I always go back and forth in
some sense of whether I do like rebase or

61
00:03:23.345 --> 00:03:24.999
whether I do like merge.

62
00:03:24.999 --> 00:03:28.353
In some sense, I do like this
piece of history right here,

63
00:03:28.353 --> 00:03:32.664
which is I get to see that these two
things happened, and we did make a proper

64
00:03:32.664 --> 00:03:36.792
change to the code in such a way, and
this is the result of the conflict.

65
00:03:36.792 --> 00:03:39.170
I do like that experience.

66
00:03:39.170 --> 00:03:42.889
I think it is a little bit more sensible
for me to understand how a bug could form.

67
00:03:42.889 --> 00:03:46.686
Cuz if you have a conflict and you use
rebase, it kind of erases the idea that

68
00:03:46.686 --> 00:03:49.903
you even had a conflict and
it just looks like a linear history.

69
00:03:49.903 --> 00:03:54.106
It's kinda like you choose your own
adventure, I always go back and

70
00:03:54.106 --> 00:03:58.855
forth, I can convince myself either
way to love either one, right?

71
00:03:58.855 --> 00:04:01.710
As for whatever reason,
I don't seem to have a solid,

72
00:04:01.710 --> 00:04:03.457
this is the only way to do it here.

73
00:04:03.457 --> 00:04:07.437
It's just like, well, you convinced me,
tomorrow I'll be all about rebase,

74
00:04:07.437 --> 00:04:09.789
today I might be all about merge for
conflicts.

75
00:04:09.789 --> 00:04:13.662
The life I live as an engineer,
it depends, just continuously and

76
00:04:13.662 --> 00:04:16.760
ad infinitum, for
all of the rest of my life.

77
00:04:16.760 --> 00:04:20.138
Anyways, good reminder,
you don't wanna mix merge and rebase,

78
00:04:20.138 --> 00:04:23.758
you start getting things like commit
merges, and they start getting,

79
00:04:23.758 --> 00:04:26.308
it's very hard to keep
your tree kinda straight.

80
00:04:26.308 --> 00:04:30.227
So you really do wanna try to stick
with one strategy and at least make sure

81
00:04:30.227 --> 00:04:34.229
they're in sync, and then you can
kind of diverge once they're in sync.

82
00:04:34.229 --> 00:04:38.270
But I tend to try to never mix them both
cuz then you just start getting merged

83
00:04:38.270 --> 00:04:42.839
commits constantly, and just nothing
feels good, it's just trouble after that.

84
00:04:42.839 --> 00:04:49.541
So let's merge everything up and
make sure that our hello-git and

85
00:04:49.541 --> 00:04:54.100
remote-git are in the exact same position.

86
00:04:54.100 --> 00:04:57.402
And then we'll start doing the next part,
okay?

87
00:04:57.402 --> 00:05:01.825
So git push origin, I don't know why
I'm saying the whole thing here.

88
00:05:01.825 --> 00:05:06.956
Again, got owned again,
git checkout bar, go back, push it up,

89
00:05:06.956 --> 00:05:11.186
go back, git checkout trunks,
I don't goof that up.

90
00:05:11.186 --> 00:05:12.141
All right, phew, we're in.

91
00:05:12.141 --> 00:05:16.075
By the way, if you guys are wondering
how in the world am I switching between

92
00:05:16.075 --> 00:05:17.334
projects so dang fast?

93
00:05:17.334 --> 00:05:21.851
This is called tmux, I have an entire
course on Frontend Masters all about how

94
00:05:21.851 --> 00:05:25.479
to use your system well,
includes Vim and all the good stuff.

95
00:05:25.479 --> 00:05:27.234
If you don't use Vim, that's okay.

96
00:05:27.234 --> 00:05:31.691
Vim's awesome, it makes me entertained,
I know most people don't like it, but hey,

97
00:05:31.691 --> 00:05:32.786
I think it's great.

98
00:05:32.786 --> 00:05:35.502
All right, so
we're gonna do the exact same thing again,

99
00:05:35.502 --> 00:05:39.273
we're gonna create another conflict
with this A + 9, A +10, add hashtag,

100
00:05:39.273 --> 00:05:40.778
by the way, forgot to say that.

101
00:05:40.778 --> 00:05:45.966
There we go, SEC rules now,
wait, FEC, which one is it?

102
00:05:45.966 --> 00:05:46.742
FCC?

103
00:05:46.742 --> 00:05:49.959
Anyways, one of the governmental agencies
you have to say add after things,

104
00:05:49.959 --> 00:05:50.612
I don't know.

105
00:05:50.612 --> 00:05:54.704
Anyways, all right, so let's do A + 9
in hello, let's do A + 10 in remote,

106
00:05:54.704 --> 00:05:55.741
don't laugh at me.

107
00:05:55.741 --> 00:06:00.369
[LAUGH] And do those two, and
then let's do a rebase, and

108
00:06:00.369 --> 00:06:03.041
then let's try to select ours.

109
00:06:03.041 --> 00:06:06.030
Let's just really drive home the point
that ours is theirs and theirs is ours,

110
00:06:06.030 --> 00:06:08.766
even though we should already be there,
but let's just do it anyways.

111
00:06:08.766 --> 00:06:14.464
So I'll go back to hello, I'll open
up README, set it to 9, git add this.

112
00:06:14.464 --> 00:06:18.903
Oops, there's no file name there,
git commit,

113
00:06:18.903 --> 00:06:23.248
A + 9, switch over here, then README, 10.

114
00:06:26.440 --> 00:06:32.362
Awesome, okay, so
now if I git pull --rebase,

115
00:06:32.362 --> 00:06:38.010
we have the conflict, git checkout --ours.

116
00:06:38.010 --> 00:06:40.714
Remember, we're doing
ours here on purpose.

117
00:06:40.714 --> 00:06:44.186
If we do that, and then we cut out README,
you'll see right here,

118
00:06:44.186 --> 00:06:45.830
we selected hello-git.

119
00:06:45.830 --> 00:06:50.840
We did not select ours,
cuz we selected hours, which is not ours.

120
00:06:53.280 --> 00:06:54.243
Okay, good, good.

121
00:06:54.243 --> 00:06:57.193
I just wanna really make sure we really
are fully on the same page here,

122
00:06:57.193 --> 00:06:58.446
it's just such a goofy part.

123
00:06:58.446 --> 00:07:02.412
So there we go, so that means if you're
gonna do this, we need to select theirs.

124
00:07:02.412 --> 00:07:05.171
So I believe I do a little
change right here.

125
00:07:05.171 --> 00:07:06.473
We do this whole ours is theirs business.

126
00:07:06.473 --> 00:07:09.607
Okay, so let's just check out and
use theirs instead of ours.

127
00:07:09.607 --> 00:07:14.430
I'll go git checkout --theirs README.

128
00:07:14.430 --> 00:07:15.454
There we go.

129
00:07:15.454 --> 00:07:19.363
So now when I cap that one out,
you'll see it's our change, awesome.

130
00:07:19.363 --> 00:07:24.191
git add it, git rebase --continue.

131
00:07:24.191 --> 00:07:26.126
Fantastic, we've now done it.

132
00:07:26.126 --> 00:07:29.125
We've selected ours, and
we have our change in.

