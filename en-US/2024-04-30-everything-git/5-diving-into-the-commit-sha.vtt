WEBVTT

1
00:00:00.240 --> 00:00:02.646
All right, so the next part
will be a little bit hard, but

2
00:00:02.646 --> 00:00:04.700
I think you can try to give it a shot.

3
00:00:04.700 --> 00:00:08.360
Do you think you can find
your SHA in the Git folder.

4
00:00:08.360 --> 00:00:10.310
I want you to take a look, go in there.

5
00:00:12.360 --> 00:00:14.440
Remember the SHA is what
you're looking for.

6
00:00:14.440 --> 00:00:16.960
Just do a little perusing on your own for
a minute.

7
00:00:18.270 --> 00:00:19.340
I'll give you another hint.

8
00:00:19.340 --> 00:00:22.056
The first two characters
of the SHA are important.

9
00:00:23.726 --> 00:00:26.476
So look around, maybe try the find
command, find is a great one.

10
00:00:26.476 --> 00:00:27.719
It'll list out a bunch of files for you.

11
00:00:29.928 --> 00:00:32.200
All right,
I'll just kind of start doing it.

12
00:00:32.200 --> 00:00:35.117
So if I go like this, find,
remember when I did it before,

13
00:00:35.117 --> 00:00:37.618
there wasn't a ton of files,
but if I do it again,

14
00:00:37.618 --> 00:00:41.522
notice now we have a whole bunch
of stuff inside of Objects now.

15
00:00:41.522 --> 00:00:44.854
And not only that, but there's my 87.

16
00:00:44.854 --> 00:00:48.542
There's my 21a, look at that thing.

17
00:00:48.542 --> 00:00:50.002
That's my commit, right?

18
00:00:50.002 --> 00:00:50.982
That looks like my commit.

19
00:00:50.982 --> 00:00:54.241
You have your commit somewhere in
there and you can go and find it,

20
00:00:54.241 --> 00:00:55.672
it's a real thing, right?

21
00:00:56.742 --> 00:00:58.442
Awesome, fantastic.

22
00:00:58.442 --> 00:00:59.422
Here's just a version of this.

23
00:00:59.422 --> 00:01:01.687
I go through all the exact
same steps right here.

24
00:01:01.687 --> 00:01:02.407
There's my commit.

25
00:01:03.997 --> 00:01:05.517
Little quick observation.

26
00:01:05.517 --> 00:01:10.274
Everything inside the git.objects or
sorry, .git/objects directory will have

27
00:01:10.274 --> 00:01:13.758
the first two letters of any SHA
that is being tracked by Git and

28
00:01:13.758 --> 00:01:18.388
you can use that to find stuff if you're
to manually look through Git, all right?

29
00:01:18.388 --> 00:01:20.497
That's where they're all stored,
that's where all of your changes and

30
00:01:20.497 --> 00:01:21.221
everything are stored.

31
00:01:22.331 --> 00:01:24.551
So, by the way I absolutely love,

32
00:01:24.551 --> 00:01:29.711
this is like my favorite part of The
Hobbit was the what's in its pocketses?

33
00:01:29.711 --> 00:01:31.571
I just love that part.

34
00:01:31.571 --> 00:01:34.636
For those that don't know,
it's a fantastic scene where Bilbo has

35
00:01:34.636 --> 00:01:38.671
the ring and needing to ask riddles and
if he gets a riddle wrong, he gets eaten.

36
00:01:38.671 --> 00:01:42.674
And his last one isn't a riddle
he just said what's in my pocket?

37
00:01:42.674 --> 00:01:44.634
Then Gollum goes crazy, and
that's the whole story.

38
00:01:44.634 --> 00:01:47.446
That's how the Lord of the Rings happened
is because he wouldn't tell him what's

39
00:01:47.446 --> 00:01:48.598
in his pocketses, it's crazy.

40
00:01:48.598 --> 00:01:51.523
Anyways, all right, so
if I were to go here and

41
00:01:51.523 --> 00:01:56.334
say git/objects/87 and cat this thing out,
it's a bunch of nonsense.

42
00:01:56.334 --> 00:01:57.864
You can do the same thing, right?

43
00:01:57.864 --> 00:02:03.663
You can't understand that five or
this commit from just getting stuff out.

44
00:02:03.663 --> 00:02:08.183
It's been kind of, it's been compressed so
it's more space efficient.

45
00:02:08.183 --> 00:02:09.813
So it's just nonsense to our eyes.

46
00:02:11.363 --> 00:02:12.683
Here's my version right here.

47
00:02:15.233 --> 00:02:18.953
Remember, all of git state is
stored in these files, all of it.

48
00:02:18.953 --> 00:02:20.760
So our commit,
that's why our commits there.

49
00:02:20.760 --> 00:02:24.695
All right, so some of the tools of a
plumber, there's a bunch of different ways

50
00:02:24.695 --> 00:02:28.540
you can manually use tit command to
print out the contents of stuff.

51
00:02:28.540 --> 00:02:31.425
But there's also cat-file -p, and

52
00:02:31.425 --> 00:02:36.575
that will just print out any SHA you
want in the contents of that SHA.

53
00:02:36.575 --> 00:02:40.419
If you actually use the actual Git
commands, there's a tree one for

54
00:02:40.419 --> 00:02:41.889
printing out trees.

55
00:02:41.889 --> 00:02:44.749
There's one for printing out
specific parts, or just this one.

56
00:02:44.749 --> 00:02:47.729
I prefer just to use this cuz it's kind of
annoying to have to know all the little

57
00:02:47.729 --> 00:02:48.549
subcommands.

58
00:02:48.549 --> 00:02:53.173
I'm sure there's like a cost to it, which
is like Git has to figure out which SHA

59
00:02:53.173 --> 00:02:57.731
you're actually talking about and the type
of SHA and then to uncompress it and

60
00:02:57.731 --> 00:03:00.029
to give you this nice view and all that.

61
00:03:00.029 --> 00:03:02.778
But just use this,
you can inspect any commit or

62
00:03:02.778 --> 00:03:05.542
anything about Git by
using git cat-file -p.

63
00:03:06.892 --> 00:03:11.531
So, I want you to cat file your shot and
see if you can get to

64
00:03:11.531 --> 00:03:17.352
the point of being able to get
the contents out of first.md.

65
00:03:17.352 --> 00:03:20.940
See if you can actually get
all the way down and find it,

66
00:03:20.940 --> 00:03:22.893
by just catting out your SHA.

