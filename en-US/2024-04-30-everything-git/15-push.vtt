WEBVTT

1
00:00:00.049 --> 00:00:01.916
So what's the opposite of pull?

2
00:00:01.916 --> 00:00:03.039
Well, push, right?

3
00:00:03.039 --> 00:00:03.644
Awesome.

4
00:00:03.644 --> 00:00:07.346
So if you wish to take your changes and
move them to a remote repo,

5
00:00:07.346 --> 00:00:09.075
you can do this with git push.

6
00:00:09.075 --> 00:00:11.935
All right, if you're not tracking
git push won't work just like

7
00:00:11.935 --> 00:00:15.531
git pull wouldn't work, so you have to be
able to be tracking a branch on a remote.

8
00:00:15.531 --> 00:00:19.641
Again if you have, you properly name it
as origin, git has some magic around it

9
00:00:19.641 --> 00:00:24.023
where you check it out, it'll do some auto
tracking for you, which is fantastic.

10
00:00:24.023 --> 00:00:29.537
So let's make some changes to bar and
push it to hello-git.

11
00:00:29.537 --> 00:00:31.099
So we'll do that right now.

12
00:00:31.099 --> 00:00:35.992
So I'll go, let's see, is that,
I just wanna make sure that that's, yeah.

13
00:00:35.992 --> 00:00:38.601
So let's make some changes to bar and
then push them to hello-git.

14
00:00:38.601 --> 00:00:42.950
So I wanna go here in remote-git,
and I'm gonna go git checkout bar.

15
00:00:42.950 --> 00:00:46.100
Now notice, when I git checkout,
look what it does.

16
00:00:46.100 --> 00:00:48.027
It automatically does the tracking for me.

17
00:00:48.027 --> 00:00:50.450
Awesome, so now I can just git push.

18
00:00:50.450 --> 00:00:53.485
And notice that I didn't
have to create a new branch,

19
00:00:53.485 --> 00:00:56.324
I already had this branch
in my remote directory.

20
00:00:56.324 --> 00:00:59.261
If you have several remotes,
it can cause some problems, and

21
00:00:59.261 --> 00:01:02.817
all of a sudden checking out can be a
little bit more of a pain depending on how

22
00:01:02.817 --> 00:01:05.210
you name things,
that's why you know the whole.

23
00:01:05.210 --> 00:01:08.572
Git checkout me bar, I thought was funny,
but it also can be a pain.

24
00:01:08.572 --> 00:01:12.124
Anyways, so we've now switched to bar,
we'll do a little quick change.

25
00:01:12.124 --> 00:01:15.794
Let me just make sure that,
this is where, how we're gonna do this?

26
00:01:15.794 --> 00:01:16.432
Let's see.

27
00:01:16.432 --> 00:01:17.949
Create a single commit,
CHANGE FROM REMOTE.

28
00:01:17.949 --> 00:01:18.742
There we go.

29
00:01:18.742 --> 00:01:22.537
And we're add it to the end of README.

30
00:01:22.537 --> 00:01:23.308
So everyone do that.

31
00:01:23.308 --> 00:01:27.084
I add one line to the end
of README in bar.

32
00:01:27.084 --> 00:01:31.296
So I'm gonna go vim README, go down here,

33
00:01:31.296 --> 00:01:34.955
changes from remote, git status.

34
00:01:34.955 --> 00:01:38.055
Yeah.
There's only one file changed, git add,

35
00:01:38.055 --> 00:01:40.219
git commit, CHANGE FROM REMOTE.

36
00:01:40.219 --> 00:01:41.930
There we go.

37
00:01:41.930 --> 00:01:48.598
So now I can take this and I can push
it to my remote so I can go git push.

38
00:01:48.598 --> 00:01:53.689
And look at that,
we've just updated bar in hello-git.

39
00:01:53.689 --> 00:01:58.711
If I switch over to hello-git and
go git log bar, oneline,

40
00:01:58.711 --> 00:02:03.541
you will see this right here,
it's been updated for us.

41
00:02:03.541 --> 00:02:06.996
Cuz I pushed and
it changed it on the remote.

42
00:02:06.996 --> 00:02:10.260
So this should be pretty familiar to you
because it's like you already do this with

43
00:02:10.260 --> 00:02:12.404
GitHub a bunch, so
none of this should be a surprise.

44
00:02:12.404 --> 00:02:17.210
Probably the only real surprising part is
the fact that it's just two folders on

45
00:02:17.210 --> 00:02:18.726
your computer, right?

46
00:02:18.726 --> 00:02:23.424
Again, folders, directories, I know,
Windows played Doom, love Doom,

47
00:02:23.424 --> 00:02:24.738
Doom was great game.

48
00:02:24.738 --> 00:02:28.483
We've pushed all the changes, we've logged
it out, we can see all the changes,

49
00:02:28.483 --> 00:02:29.526
a change from remote.

50
00:02:29.526 --> 00:02:30.895
So that's pretty awesome, right?

51
00:02:32.835 --> 00:02:40.399
Now, you may be asking your question this,
why was bar moved forward for us?

52
00:02:42.168 --> 00:02:44.943
We fetched the results,
it didn't move our branches forward, but

53
00:02:44.943 --> 00:02:46.415
why wouldn't we pushed it to do it?

54
00:02:46.415 --> 00:02:49.640
Well, we're not checked out, right,
that branch isn't checked out.

55
00:02:49.640 --> 00:02:53.599
We're not using that branch
in any sort of capacity, and

56
00:02:53.599 --> 00:02:58.726
we're doing a push, which is analogous
to doing like a fetch and a merch.

57
00:02:58.726 --> 00:03:00.625
We're just doing it for then.

58
00:03:00.625 --> 00:03:04.077
And so that's what's happening on the
other side, it's fetching, it's merging,

59
00:03:04.077 --> 00:03:06.361
it's updating its reference 4-bar,
and there we go.

60
00:03:06.361 --> 00:03:08.850
It's like the opposite of pull.

61
00:03:08.850 --> 00:03:11.779
I'm gonna every now and then say
the word upstream instead of origin.

62
00:03:11.779 --> 00:03:15.733
Upstream, this is just by accident,
or old habits kinda die hard.

63
00:03:15.733 --> 00:03:19.396
When I say upstream,
I mean hello-git, tough.

64
00:03:19.396 --> 00:03:22.729
When I say origin,
I mean hello-git, cuz remember,

65
00:03:22.729 --> 00:03:26.135
we have a dependency of
remote-git on hello-git, but

66
00:03:26.135 --> 00:03:29.986
hello-git doesn't have its
remote setup to remote, right?

67
00:03:29.986 --> 00:03:34.874
So it's a one way relationship right now.

68
00:03:34.874 --> 00:03:38.840
So we're just gonna pretend
hello-git is GitHub for this case.

