WEBVTT

1
00:00:00.160 --> 00:00:01.490
We're gonna go over some config now.

2
00:00:01.490 --> 00:00:02.561
It's good to know this,

3
00:00:02.561 --> 00:00:05.740
this is kind of like the last of
the intro into git kind of area.

4
00:00:05.740 --> 00:00:09.080
I remember the first time I use anything
with config, it felt strange and

5
00:00:09.080 --> 00:00:11.925
I did it that one time and
then I never thought about it again and

6
00:00:11.925 --> 00:00:16.080
then when I had to alter it, I was just
like, crap, I have to go look this up.

7
00:00:16.080 --> 00:00:19.650
And then you just always forget things,
totally reasonable.

8
00:00:19.650 --> 00:00:24.345
So dash dash add,
adds a key to your git config.

9
00:00:24.345 --> 00:00:25.945
So if I do this, I just add a key.

10
00:00:25.945 --> 00:00:30.284
It's really important to remember and
remember a key is made up of two parts,

11
00:00:30.284 --> 00:00:32.445
a section and a key name.

12
00:00:32.445 --> 00:00:34.185
Very important things to remember.

13
00:00:34.185 --> 00:00:35.318
All right problem,

14
00:00:35.318 --> 00:00:39.785
I want you to create 3 values with
the section name of fem frontend masters.

15
00:00:39.785 --> 00:00:42.509
I don't care what you do,
I will use these three right here.

16
00:00:42.509 --> 00:00:44.352
Fem.dev is great.

17
00:00:44.352 --> 00:00:52.114
Marcus he's okay, semi decent and
femgit would, right I'll do it too.

18
00:00:52.114 --> 00:00:57.961
I'll go git config, add and then I'll
do the section name remember fem,

19
00:00:57.961 --> 00:01:01.653
then I'll do the key name dev and
say is great.

20
00:01:01.653 --> 00:01:06.657
There we go, and
then I'll do marc is okay, and then git,

21
00:01:06.657 --> 00:01:11.561
I put little quotes around it
just because I don't know,

22
00:01:11.561 --> 00:01:15.561
I want to send it as
a single argument there.

23
00:01:15.561 --> 00:01:17.967
You might not even need quotes,
I've actually never not tried quotes,

24
00:01:17.967 --> 00:01:19.751
I just always quote everything.

25
00:01:19.751 --> 00:01:20.717
Old habits, die hard, and

26
00:01:20.717 --> 00:01:23.813
they get formed at some point in
your head and that's just that.

27
00:01:23.813 --> 00:01:24.563
So there we go.

28
00:01:24.563 --> 00:01:27.164
I have those three commits.

29
00:01:33.071 --> 00:01:34.563
All right, solution, there you go.

30
00:01:34.563 --> 00:01:36.323
Hopefully everyone effectively did this.

31
00:01:36.323 --> 00:01:38.013
There's some ways of listing out values.

32
00:01:38.013 --> 00:01:41.769
You can use dash dash list, or
you can use get regex expression.

33
00:01:41.769 --> 00:01:44.511
Problem, can you list out all
the fem values in your config with

34
00:01:44.511 --> 00:01:45.351
a single command?

35
00:01:47.627 --> 00:01:48.794
Now me personally,

36
00:01:48.794 --> 00:01:53.129
because of just like how I'm like not
the world's greatest Linux person.

37
00:01:53.129 --> 00:01:56.113
I would probably do something
like git config list and

38
00:01:56.113 --> 00:01:59.040
then probably grep out like
that's what I would do.

39
00:01:59.040 --> 00:02:02.286
And you can see, looks like I actually
have some old values in here, so

40
00:02:02.286 --> 00:02:03.891
I should probably take those out.

41
00:02:03.891 --> 00:02:05.162
Hold on [LAUGH].

42
00:02:12.639 --> 00:02:16.241
There we go.

43
00:02:16.241 --> 00:02:16.969
I knew it.

44
00:02:16.969 --> 00:02:18.881
Got bamboozled myself right there.

45
00:02:18.881 --> 00:02:20.153
All right.

46
00:02:20.153 --> 00:02:22.643
So hopefully everyone did that,
absolutely fantastic.

47
00:02:22.643 --> 00:02:26.753
So the way to be able to list everything
out is that I always just like do this.

48
00:02:26.753 --> 00:02:29.883
I know it's not like the most efficient
way to use your Linux system.

49
00:02:29.883 --> 00:02:31.593
It's just how my brain always does things.

50
00:02:31.593 --> 00:02:36.280
But you can use things like git config,
git regex expression, and

51
00:02:36.280 --> 00:02:37.743
then just go bam.

52
00:02:37.743 --> 00:02:41.590
And this will actually just list out
what your three keys that match that.

53
00:02:41.590 --> 00:02:46.043
So that means I could also do something
like m dot and it would list out anything

54
00:02:46.043 --> 00:02:50.030
that kind of falls within that format,
dot being a wildcard.

55
00:02:50.030 --> 00:02:52.280
You have your nice little
regular expression.

56
00:02:52.280 --> 00:02:55.335
As you can see,
we over-matched by accident because again,

57
00:02:55.335 --> 00:02:58.430
regular expressions,
very dangerous to use.

58
00:02:58.430 --> 00:02:59.902
Don't put them in your code base kits.

59
00:02:59.902 --> 00:03:06.222
All right, anyways, so problem, can you
change one of the values of your config?

60
00:03:06.222 --> 00:03:07.082
Let's take fem.dev.

61
00:03:07.082 --> 00:03:10.595
I want you to change its value with all
the commands you currently know that I've

62
00:03:10.595 --> 00:03:12.612
showed you,
which is just add list and get.

63
00:03:12.612 --> 00:03:14.542
So that's all you have.

64
00:03:14.542 --> 00:03:16.952
I'll join you and I'll go git config.

65
00:03:16.952 --> 00:03:20.862
And I'll say is amazing.

66
00:03:20.862 --> 00:03:23.317
Fem.dev is amazing.

67
00:03:23.317 --> 00:03:23.817
There we go.

68
00:03:23.817 --> 00:03:24.457
I've changed it.
And

69
00:03:24.457 --> 00:03:27.597
then I want you to list it out
with git regex expression.

70
00:03:27.597 --> 00:03:31.637
Look what happens when I do it.

71
00:03:31.637 --> 00:03:34.497
I have two fem.devs.

72
00:03:34.497 --> 00:03:39.393
So one of the odd parts of git is
that you can actually accidentally

73
00:03:39.393 --> 00:03:42.285
add multiple of the same keys.

74
00:03:42.285 --> 00:03:45.090
Which is also good, cuz that means
you can have local settings and

75
00:03:45.090 --> 00:03:46.425
you can have global settings.

76
00:03:46.425 --> 00:03:49.615
You don't have to worry about
collisions or anything like that,

77
00:03:49.615 --> 00:03:52.175
but you will add the same
key by accident sometimes.

78
00:03:52.175 --> 00:03:54.176
It has happened, I might have two or

79
00:03:54.176 --> 00:03:58.305
three usernames at this point inside
of my git configs, it's okay.

80
00:03:58.305 --> 00:03:59.388
So what happened here?

81
00:03:59.388 --> 00:04:00.798
It's a little bit of a surprise, right?

82
00:04:00.798 --> 00:04:03.498
You can use list or you can use
.get key and see what comes out.

83
00:04:03.498 --> 00:04:06.408
So for fun, let's use get.

84
00:04:06.408 --> 00:04:08.118
And I want you to get out fem.dev.

85
00:04:08.118 --> 00:04:11.089
So long as you've been following along and
you're using the same keys as me,

86
00:04:11.089 --> 00:04:12.178
we have two with fem.dev.

87
00:04:12.178 --> 00:04:17.388
When I do that, I get the later of
the two values, the last one added.

88
00:04:17.388 --> 00:04:20.692
This should intrinsically make sense,
always use the latest value,

89
00:04:20.692 --> 00:04:22.929
don't use the previous value.

90
00:04:22.929 --> 00:04:23.429
Okay.

91
00:04:25.621 --> 00:04:28.281
I'm speeding up a little bit by the way,
if use get all,

92
00:04:28.281 --> 00:04:32.229
you'll get all of the values at once all
of this, by the way is in the man page.

93
00:04:32.229 --> 00:04:35.639
So always review the man page
if you forget or just Google it.

94
00:04:35.639 --> 00:04:38.429
You can unset which is a great name.

95
00:04:38.429 --> 00:04:40.833
I mean,
me personally I would have used remove but

96
00:04:40.833 --> 00:04:42.443
unset is the opposite of adding.

97
00:04:43.593 --> 00:04:44.473
There's no set option.

98
00:04:44.473 --> 00:04:49.523
You know how much that bothers me that
there's no set but there's unset and add?

99
00:04:49.523 --> 00:04:53.249
I think at one point in here I actually
had a typo where I said set instead of add

100
00:04:53.249 --> 00:04:56.413
because that's,
naturally how I feel about things.

101
00:04:56.413 --> 00:05:00.305
Anyways, okay, so
let's try to remove the duplicate key.

102
00:05:00.305 --> 00:05:01.765
Go ahead, try to remove the duplicate key.

103
00:05:03.265 --> 00:05:04.618
You know you have unset.

104
00:05:08.851 --> 00:05:11.540
When you try to do it, it says,
hey, you can't do it, right?

105
00:05:11.540 --> 00:05:13.329
Fem.dev has multiple values.

106
00:05:13.329 --> 00:05:14.015
Did we unset one of them?

107
00:05:14.015 --> 00:05:17.695
Did we unset all of them?

108
00:05:19.285 --> 00:05:22.185
Well, you can always list it out, right?

109
00:05:22.185 --> 00:05:23.057
You can list out.

110
00:05:23.057 --> 00:05:24.432
We'll do this one, right?

111
00:05:24.432 --> 00:05:26.055
Look at that.

112
00:05:26.055 --> 00:05:28.230
Both of them are still there,

113
00:05:28.230 --> 00:05:32.942
so you cannot unset a multiple value key,
you have to unset all.

114
00:05:32.942 --> 00:05:37.705
Just as like a little fun warning for
you so you can do it all.

115
00:05:37.705 --> 00:05:38.985
Let's repeat it again with unset all.

116
00:05:38.985 --> 00:05:42.753
So I'm gonna go in here and
unset all for fem.dev.

117
00:05:42.753 --> 00:05:43.371
There we go.

118
00:05:43.371 --> 00:05:46.168
If I look at it,
notice that fem.dev completely gone.

119
00:05:46.168 --> 00:05:48.322
We removed all the keys for it.

120
00:05:48.322 --> 00:05:51.632
You have to always remove all the keys.

121
00:05:51.632 --> 00:05:52.222
It's just a thing.

122
00:05:53.682 --> 00:05:56.982
All right, fantastic.

123
00:05:56.982 --> 00:06:01.281
Fun fact, by the way,
configuration is just a file.

124
00:06:02.281 --> 00:06:04.961
Again, I've tried to
express this upon you,

125
00:06:04.961 --> 00:06:08.501
how important it is to remember
that Git isn't magical.

126
00:06:08.501 --> 00:06:11.051
So I want you to just take a little
quick look in the git folder,

127
00:06:11.051 --> 00:06:12.041
find that config file.

128
00:06:13.131 --> 00:06:18.371
Let's quick look, but
just see if you can find it.

129
00:06:18.371 --> 00:06:21.975
By the way, there are a lot of options so
you can unset by index,

130
00:06:21.975 --> 00:06:25.222
there's like 900 different
things you can do.

131
00:06:25.222 --> 00:06:27.062
I'm just giving you the basics, okay?

132
00:06:27.062 --> 00:06:30.134
The real talk, you're probably gonna use
config like three times in your life and

133
00:06:30.134 --> 00:06:31.822
you're never gonna look at it again.

134
00:06:31.822 --> 00:06:33.508
But it's just good to know
how to use it then it's never

135
00:06:33.508 --> 00:06:34.432
confusing and it feels easy.

136
00:06:35.552 --> 00:06:40.272
All right, if you go like this, cat.get
config, you'll see it's right there.

137
00:06:40.272 --> 00:06:41.453
Does that look familiar?

138
00:06:41.453 --> 00:06:45.324
Yeah, those are the ones we added.

139
00:06:45.324 --> 00:06:46.404
There's nothing magical about it.

140
00:06:46.404 --> 00:06:51.027
It looks kind of like Tommel, which Tommel
is another encoding sweet format for

141
00:06:51.027 --> 00:06:53.454
all of us to be able to use in a file.

142
00:06:53.454 --> 00:06:54.834
And so
that's what it kind of looks like to me.

143
00:06:54.834 --> 00:06:57.724
There you go.
So awesome we have those things there.

144
00:06:57.724 --> 00:06:59.994
The magic is so
gone hopefully at this point.

145
00:06:59.994 --> 00:07:02.583
It's almost disappointing how
simple that actually was that

146
00:07:02.583 --> 00:07:04.572
the config just exists, yeah?

147
00:07:04.572 --> 00:07:08.988
&gt;&gt; Did I see earlier that it's
on set all through move keys but

148
00:07:08.988 --> 00:07:11.542
it's removed for sections?

149
00:07:11.542 --> 00:07:14.148
&gt;&gt; So if you wanna remove a specific key,

150
00:07:14.148 --> 00:07:17.552
you would do unset section name.key,
right?

151
00:07:17.552 --> 00:07:18.592
Because that is the key.

152
00:07:18.592 --> 00:07:20.998
It's really a two part,
every key has two parts.

153
00:07:20.998 --> 00:07:24.030
If you want to just remove the entire
section at once, which I was gonna go over

154
00:07:24.030 --> 00:07:27.250
here shortly, cuz I accidentally left the
cat out of the bag a little early because

155
00:07:27.250 --> 00:07:30.442
I had some previous values, but you can
actually just remove things by section.

156
00:07:30.442 --> 00:07:34.905
So I could remove all of my user
information by just simply remove section

157
00:07:34.905 --> 00:07:37.917
user and
it would delete everything about user.

158
00:07:37.917 --> 00:07:39.928
It's a little convenience.

159
00:07:39.928 --> 00:07:46.308
All right, so well look at this,
one of the old VCS drag in right here.

160
00:07:46.308 --> 00:07:49.188
You can actually remove everything
by using --remove-section.

161
00:07:49.188 --> 00:07:51.348
So go ahead, give it a little try.

162
00:07:51.348 --> 00:07:53.668
Let's remove the entire fem namespace.

163
00:07:53.668 --> 00:07:57.518
So just ruining everything for me.

164
00:07:57.518 --> 00:07:59.588
There you go, remove the section.

165
00:07:59.588 --> 00:08:01.470
If I go and I cat out my config.

166
00:08:01.470 --> 00:08:03.280
Hey, look what's gone.

167
00:08:03.280 --> 00:08:06.240
We remove the section,
the section was deleted.

168
00:08:06.240 --> 00:08:10.160
There you go, your commands
are actually updating a file.

169
00:08:10.160 --> 00:08:11.690
All right, there's also locations.

170
00:08:11.690 --> 00:08:14.576
Locations, our system global,
local, worktree,

171
00:08:14.576 --> 00:08:17.140
you can provide a file path to a config.

172
00:08:17.140 --> 00:08:18.328
You can do all this but

173
00:08:18.328 --> 00:08:22.746
reality is is when you're using git you
likely are only using global or local.

174
00:08:22.746 --> 00:08:26.600
Local is just repository level settings
and global is what you want for

175
00:08:26.600 --> 00:08:27.396
everything.

176
00:08:28.896 --> 00:08:33.036
All right, so let's try adding the same
key fem.dev to both local and global.

177
00:08:33.036 --> 00:08:35.476
I want you to start with global first.

178
00:08:35.476 --> 00:08:41.176
So I'll go git config -add, and
I'll go --global, dash dash global.

179
00:08:41.176 --> 00:08:44.437
So this should add to all of git.

180
00:08:44.437 --> 00:08:45.623
There we go.

181
00:08:45.623 --> 00:08:48.613
And then I'll do the exact same thing and
I'll do it with local.

182
00:08:48.613 --> 00:08:52.463
You don't have to specify the local
command or the local location.

183
00:08:52.463 --> 00:08:58.653
But for this I will,
I'm gonna do this really quickly.

184
00:08:58.653 --> 00:09:02.249
I just realized that I didn't give
it a nice local, there we go.

185
00:09:04.249 --> 00:09:09.469
So now, we added those two things and
now I want to list out my local items.

186
00:09:09.469 --> 00:09:13.467
So if I go get config, and I go list,
local providing a location,

187
00:09:13.467 --> 00:09:16.939
you can see I have the FEM
dot dev right there.

188
00:09:16.939 --> 00:09:21.733
If I just simply list everything out,
instead of you again,

189
00:09:21.733 --> 00:09:27.069
I'm not using the grip option
which I could use the grip option.

190
00:09:27.069 --> 00:09:31.209
You can see right here I have the global
one and I have the local one.

191
00:09:31.209 --> 00:09:33.886
Okay, so you can access them both, but

192
00:09:33.886 --> 00:09:38.209
which one should show up when
I do get firmed up death?

193
00:09:38.209 --> 00:09:40.239
Which one do you think should show up?

194
00:09:40.239 --> 00:09:42.065
&gt;&gt; Local
&gt;&gt; Local, exactly.

195
00:09:42.065 --> 00:09:43.885
You can see that it is local.

196
00:09:43.885 --> 00:09:44.895
Fantastic.

197
00:09:44.895 --> 00:09:46.475
Now here's the question though.

198
00:09:46.475 --> 00:09:51.741
We added it second, is it showing up
because we added it later in time or

199
00:09:51.741 --> 00:09:54.615
is it showing up because it's local?

200
00:09:55.955 --> 00:09:56.825
&gt;&gt; Local.

201
00:09:56.825 --> 00:09:59.294
&gt;&gt; More specific scope would make sense.

202
00:09:59.294 --> 00:09:59.975
&gt;&gt; Yep.

203
00:09:59.975 --> 00:10:04.346
So let's just add another local and

204
00:10:04.346 --> 00:10:09.307
we can also add another global, right.

205
00:10:09.307 --> 00:10:16.572
And so we can do a more specific and

206
00:10:16.572 --> 00:10:23.588
a less specific one right here.

207
00:10:23.588 --> 00:10:26.198
And so now when I do that
when I do the config list,

208
00:10:26.198 --> 00:10:29.467
you'll see that it appears later,
it's later in the list.

209
00:10:29.467 --> 00:10:33.288
It happened at a later time,
but when I do a get,

210
00:10:33.288 --> 00:10:37.506
look at that I get it globally,
you know why that is?

211
00:10:37.506 --> 00:10:39.147
Anyone wanna guess?

212
00:10:39.147 --> 00:10:41.637
Because I goofed up and
I didn't add it to the global right there.

213
00:10:41.637 --> 00:10:43.363
That's why what happened, okay?

214
00:10:43.363 --> 00:10:44.643
Did you see that one coming?

215
00:10:44.643 --> 00:10:46.353
I don't think any of you,
I didn't even see it coming.

216
00:10:46.353 --> 00:10:47.563
It was so fast.

217
00:10:47.563 --> 00:10:53.443
All right, so we're gonna have to have
to just do a quick config unset fem.dev.

218
00:10:53.443 --> 00:10:55.133
And then we'll do one.

219
00:10:55.133 --> 00:10:56.023
I think you can add a list.

220
00:10:56.023 --> 00:10:56.523
There we go.

221
00:10:58.729 --> 00:10:59.403
Come on.

222
00:10:59.403 --> 00:11:01.853
I know there's a way to add an index.

223
00:11:01.853 --> 00:11:03.050
What is it?
Is an index.

224
00:11:04.060 --> 00:11:09.073
I know there's a way you can do it and
blah!!

225
00:11:09.073 --> 00:11:10.541
But I'll just go get config.

226
00:11:10.541 --> 00:11:15.281
It's honestly not again,
this is just such a let's see,

227
00:11:15.281 --> 00:11:20.590
we'll do this one, we'll do a local,
we'll add that one.

228
00:11:20.590 --> 00:11:25.104
And so now I'll add a new global, and
I just added it with the term local,

229
00:11:25.104 --> 00:11:27.336
which is just really unfortunate.

230
00:11:28.826 --> 00:11:30.991
Get config thing.

231
00:11:30.991 --> 00:11:33.064
Well, that is just truly unfortunate here.

232
00:11:33.064 --> 00:11:38.786
Global, remove that, and
then I'll add with global.

233
00:11:40.016 --> 00:11:40.586
There we go.

234
00:11:40.586 --> 00:11:43.145
So now when I do a config list.

235
00:11:43.145 --> 00:11:45.135
I know, just fumbling the bag right here.

236
00:11:45.135 --> 00:11:48.291
You can see that global is still out
here and we still have the local, but

237
00:11:48.291 --> 00:11:49.875
I added the global later.

238
00:11:49.875 --> 00:11:55.215
So it should theoretically get
pulled first if it's time oriented.

239
00:11:55.215 --> 00:11:57.605
But if I do a get, we still get the local.

240
00:11:57.605 --> 00:11:59.845
Local always takes precedence,
very good to know.

241
00:11:59.845 --> 00:12:02.185
Sorry about that little goof up,
you're just gonna have to deal with it.

242
00:12:02.185 --> 00:12:05.179
Again, you'll never use anything to do
with your config other than setting

243
00:12:05.179 --> 00:12:05.844
your username.

244
00:12:05.844 --> 00:12:07.424
I just really wanted you to know this.

245
00:12:07.424 --> 00:12:08.414
All right, so let's do a quick thing.

246
00:12:08.414 --> 00:12:10.284
Let's actually alter our git experience.

247
00:12:10.284 --> 00:12:12.394
Let's rename master to trunk.

248
00:12:12.394 --> 00:12:16.994
So I want you to do a global
setting to a knit default branch.

249
00:12:16.994 --> 00:12:18.990
You can choose whatever name you want.

250
00:12:18.990 --> 00:12:24.141
For here, I'm actually laughing internally
'cause I used to have to use, SVN to us,

251
00:12:24.141 --> 00:12:28.977
and so we're going to name a trunk just
remember how awful life can actually be.

252
00:12:28.977 --> 00:12:35.557
For all of my 32 others out there,
I'm gonna do a little global and go trunk.

253
00:12:36.797 --> 00:12:40.217
I just want everyone to feel the pain,
know exactly.

254
00:12:40.217 --> 00:12:41.537
I want you to feel it.

255
00:12:42.867 --> 00:12:45.479
So there we go,
we've now named our initial branch.

256
00:12:47.179 --> 00:12:49.419
Obviously, should this be local or global?

257
00:12:49.419 --> 00:12:52.381
Should be global if you want it
to take place for all repos for

258
00:12:52.381 --> 00:12:53.636
all time on your system.

259
00:12:53.636 --> 00:12:58.309
Remember, we just got done naming
your default branch to trunk.

260
00:12:58.309 --> 00:13:02.341
So if you forget that you did this class
and you create a new repo, it will have

261
00:13:02.341 --> 00:13:06.575
trunk as its default name and then you'll
be triggered due to remembering SVN.

262
00:13:08.195 --> 00:13:10.335
Real fact by the way, so let's try it out.

263
00:13:10.335 --> 00:13:13.405
Let's just go and create a project
right now, call it hello git.

264
00:13:13.405 --> 00:13:14.165
This is important.

265
00:13:14.165 --> 00:13:17.945
Call it hello git and
do a git init inside that folder.

266
00:13:17.945 --> 00:13:19.575
So I'm going to go back back.

267
00:13:19.575 --> 00:13:24.312
I will make my own dir hello git and
then I'll go to hello-git and

268
00:13:24.312 --> 00:13:25.937
I'll go git a knit.

269
00:13:25.937 --> 00:13:28.257
Look at that.

270
00:13:28.257 --> 00:13:29.537
It's now trunk.

271
00:13:29.537 --> 00:13:30.237
There we go.

272
00:13:30.237 --> 00:13:32.077
So git has global settings.

273
00:13:32.077 --> 00:13:32.947
You can change your experience.

274
00:13:32.947 --> 00:13:36.057
There's actually quite a few experiential
changes you can make to git.

275
00:13:36.057 --> 00:13:40.007
This is just the easiest one to
demonstrate with no git knowledge.

