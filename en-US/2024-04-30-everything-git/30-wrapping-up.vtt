WEBVTT

1
00:00:00.360 --> 00:00:05.112
I'm curious Prime's thoughts on large
files, slash LFS, since it isn't

2
00:00:05.112 --> 00:00:10.980
covered in the content, and any thoughts
on squash merge to keep repos smaller.

3
00:00:10.980 --> 00:00:12.880
&gt;&gt; Yeah, I don't care about the size.

4
00:00:12.880 --> 00:00:15.440
So there's two questions in there and
they're kinda both the same.

5
00:00:15.440 --> 00:00:20.320
So get large files at the store,
it does some efficiency.

6
00:00:20.320 --> 00:00:23.712
So the thing that's happening,
if you didn't notice, that we could go and

7
00:00:23.712 --> 00:00:26.309
restore every commit having
every pointer to every file.

8
00:00:26.309 --> 00:00:28.459
Now we can restore those files,
those files were compressed and all that.

9
00:00:28.459 --> 00:00:31.309
So if you're storing 100 megabyte image,
it's gonna go and

10
00:00:31.309 --> 00:00:32.592
it's gonna compress this.

11
00:00:32.592 --> 00:00:35.683
And then you have to download it,
there's a lot you have to download.

12
00:00:35.683 --> 00:00:39.739
So Git Large File Storage just effectively
is an optimization for large files,

13
00:00:39.739 --> 00:00:42.595
which are just a huge pain in
the ass when it comes to Git.

14
00:00:42.595 --> 00:00:45.368
And that's why people argue
why Perforce is better,

15
00:00:45.368 --> 00:00:49.073
is actually specifically about large
file storage and binary assets.

16
00:00:49.073 --> 00:00:53.910
But now with Git, whatever it is,
Git Large File Storage, LFS, it's better.

17
00:00:53.910 --> 00:00:57.503
As far as history size, I don't think you
should really care about history size.

18
00:00:57.503 --> 00:00:59.184
History is free, right?

19
00:00:59.184 --> 00:01:01.846
I just like to have it clean,
so when I'm doing a revert,

20
00:01:01.846 --> 00:01:03.464
I don't shoot myself in the foot.

21
00:01:03.464 --> 00:01:08.904
I really don't wanna revert a six-item
change with a bunch of merge commits.

22
00:01:08.904 --> 00:01:10.026
That's what I don't wanna do.

23
00:01:10.026 --> 00:01:14.344
I just wanna be able to just say revert E,
and that's it.

24
00:01:14.344 --> 00:01:17.558
So that's my only argument for
why I prefer to rebase over.

25
00:01:17.558 --> 00:01:19.507
It's cuz I inevitably bet against myself.

26
00:01:22.188 --> 00:01:26.626
&gt;&gt; Outside of just some of the techniques
you covered here for your own repo,

27
00:01:26.626 --> 00:01:30.781
is there anything that you'd recommend for
people who contribute,

28
00:01:30.781 --> 00:01:36.058
as far as working with forks, and just
contributing to open source in general?

29
00:01:36.058 --> 00:01:37.978
&gt;&gt; Contributing to open source?

30
00:01:37.978 --> 00:01:42.700
&gt;&gt; Yeah, I think question is more like, is
there any techniques here that you use to,

31
00:01:42.700 --> 00:01:46.343
like when you're working with
your fork and pushing it back, or

32
00:01:46.343 --> 00:01:49.124
submitting the PR back to
some open source repo?

33
00:01:49.124 --> 00:01:53.568
&gt;&gt; Yeah, I think everything I already
stated is exactly I try to do one commit,

34
00:01:53.568 --> 00:01:54.827
make it really nice.

35
00:01:54.827 --> 00:01:59.996
I try never, if I can, I try to never
make a change ever above about 150 lines.

36
00:01:59.996 --> 00:02:04.077
There's some studies that suggest that
people will rubber stamp significantly

37
00:02:04.077 --> 00:02:05.885
higher rates if you add more lines.

38
00:02:05.885 --> 00:02:08.325
There just comes a point where
you can no longer review.

39
00:02:08.325 --> 00:02:11.768
Well, so if you can keep things small and
do more reviews,

40
00:02:11.768 --> 00:02:13.680
it just makes life a lot easier.

41
00:02:13.680 --> 00:02:16.113
So, I mean, that's my only real thing,

42
00:02:16.113 --> 00:02:20.640
is if you're gonna be contributing to
open source A, there's a lot of talk.

43
00:02:20.640 --> 00:02:24.270
There's been a lot of angst over open
source commits in the last few months,

44
00:02:24.270 --> 00:02:25.926
so don't just make dumb commits.

45
00:02:25.926 --> 00:02:28.095
That's a good thing to do.

46
00:02:28.095 --> 00:02:30.362
Don't be mean.

47
00:02:30.362 --> 00:02:32.681
Remember, it's all free.

48
00:02:32.681 --> 00:02:34.534
No one's getting paid out there for
open source.

49
00:02:34.534 --> 00:02:37.456
I mean, they might be getting
paid like $20 a month, but

50
00:02:37.456 --> 00:02:39.746
that's not enough to
really be happy with it.

51
00:02:40.927 --> 00:02:45.834
&gt;&gt; And just to follow up to the env
question, what's a good way to handle env

52
00:02:45.834 --> 00:02:51.071
files if you want everyone to have a base
template but make their own changes?

53
00:02:51.071 --> 00:02:52.778
Do you add it to the repo and

54
00:02:52.778 --> 00:02:55.933
then subtract-
&gt;&gt; You can add it to the repo with

55
00:02:55.933 --> 00:03:00.492
a default one, save it,
then ignore it, so then it's there,

56
00:03:00.492 --> 00:03:03.001
and no further changes can be had.

57
00:03:03.001 --> 00:03:04.304
There's strategies, right?

58
00:03:04.304 --> 00:03:08.623
You can have the whole env template or
whatever, env default, and

59
00:03:08.623 --> 00:03:13.732
then you just copy it over into yours,
but that's all organizational stuff.

60
00:03:13.732 --> 00:03:15.644
&gt;&gt; All right.

61
00:03:15.644 --> 00:03:17.739
&gt;&gt; I always do env- something.

62
00:03:17.739 --> 00:03:19.904
By the way, also great plugin, by the way.

63
00:03:19.904 --> 00:03:24.799
Great Vim thing, I don't know if you
guys know about this, but, wait,

64
00:03:24.799 --> 00:03:28.649
hold on,
a chat stack that was using COBOL.

65
00:03:28.649 --> 00:03:32.934
If I go like this, by the way, if you guys
don't know, you can get plugins so that if

66
00:03:32.934 --> 00:03:36.689
you have your env, it will automatically
put little stars right there.

67
00:03:36.689 --> 00:03:39.984
If you ever accidentally don't want,
you never want this thing leaked ever for

68
00:03:39.984 --> 00:03:42.565
any reason,
it's always good to have this thing on.

69
00:03:42.565 --> 00:03:45.005
And so if you're in an end file,
it'll just always do that.

70
00:03:45.005 --> 00:03:47.265
You can just do a little CloakToggle and
boom, right there.

71
00:03:48.855 --> 00:03:49.675
And it's a fun little thing.

72
00:03:49.675 --> 00:03:52.034
If you don't have that,
I always recommend having that.

73
00:03:52.034 --> 00:03:55.855
Cloak, I think it's named cloak for
both VS Code and Vim.

74
00:03:55.855 --> 00:03:58.992
It's a good little plugin to have.

75
00:04:01.563 --> 00:04:03.514
I just want to mention Vim more,
if possible.

76
00:04:03.514 --> 00:04:07.503
&gt;&gt; [LAUGH]
&gt;&gt; I love to talk to you about how your

77
00:04:07.503 --> 00:04:09.790
life can improve by using Vim.

78
00:04:09.790 --> 00:04:12.686
Is it possible to have a personal Git
ignore, someone's asking that, there is.

79
00:04:12.686 --> 00:04:16.488
Right before we go, there's actually
a file inside of Git that you can do.

80
00:04:16.488 --> 00:04:19.755
So if I go like this, here,
I'll try to do this really quickly,

81
00:04:19.755 --> 00:04:21.034
I'll just go like this.

82
00:04:21.034 --> 00:04:24.777
I'll create a file like this,
it's some sort of dvorak file, right?

83
00:04:24.777 --> 00:04:30.174
So it's right here, it's this thing
right here, git/info/exclude.

84
00:04:30.174 --> 00:04:36.278
So if you add it to the git/info/exclude,
it's a git ignore, but only for you.

85
00:04:36.278 --> 00:04:42.460
So if I save this, it's gone,
but nobody else gets it.

86
00:04:42.460 --> 00:04:45.353
It's one of those super secret ones,
but that's one of them.

87
00:04:45.353 --> 00:04:45.980
There you go.

88
00:04:45.980 --> 00:04:49.278
This is everything I think you need to
know about Git to be useful at your job.

89
00:04:49.278 --> 00:04:53.978
Everything else is,
I don't think you need, just real facts.

90
00:04:53.978 --> 00:04:55.558
There you go.

91
00:04:55.558 --> 00:04:56.253
That's it.

92
00:04:56.253 --> 00:05:01.930
&gt;&gt; [APPLAUSE]
&gt;&gt; Thanks.

