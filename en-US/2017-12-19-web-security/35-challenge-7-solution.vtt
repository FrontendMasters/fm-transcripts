WEBVTT

1
00:00:00.090 --> 00:00:04.390
&gt;&gt; Mike North: We are going to learn how
to defend against a clickjacking attack

2
00:00:04.390 --> 00:00:11.380
and we're gonna do it in a way that will
give us some safety in older browsers and

3
00:00:11.380 --> 00:00:16.880
in modern ones, so
the first thing we'll need to do is.

4
00:00:16.880 --> 00:00:20.770
I'm just gonna grab these
snippets of code here.

5
00:00:20.770 --> 00:00:26.500
And we're gonna put them into basically
the equivalent of our index.html.

6
00:00:26.500 --> 00:00:28.760
So this here is the script,

7
00:00:28.760 --> 00:00:34.364
we'll put it down here.
&gt;&gt; Mike North: And

8
00:00:34.364 --> 00:00:36.250
indent that in a little bit.

9
00:00:36.250 --> 00:00:39.199
Before I go too much farther here,
I wanna just show you

10
00:00:41.500 --> 00:00:46.150
what this self in this
top thing actually does.

11
00:00:46.150 --> 00:00:47.930
So self is gonna give you window.

12
00:00:49.320 --> 00:00:52.410
Top is another global variable
that gives you window as well.

13
00:00:52.410 --> 00:00:55.070
If we look at our clickjacking example and

14
00:00:55.070 --> 00:00:59.774
turn that opacity back up
&gt;&gt; Mike North: And

15
00:00:59.774 --> 00:01:02.940
we just need DevTools here.

16
00:01:02.940 --> 00:01:07.470
So I'm gonna use my console, and
I wanna execute from this frame here.

17
00:01:07.470 --> 00:01:10.410
So you can drop down from
the top of your console.

18
00:01:10.410 --> 00:01:11.600
You can pick which frame you want.

19
00:01:11.600 --> 00:01:13.130
The rest of these are extensions.

20
00:01:15.050 --> 00:01:17.610
So here self is that window.

21
00:01:17.610 --> 00:01:23.347
Top is a different window.
&gt;&gt; Mike North: So

22
00:01:23.347 --> 00:01:28.826
that's,
&gt;&gt; Mike North: So

23
00:01:28.826 --> 00:01:34.140
this code is sandbox so
I can't access the outer location.

24
00:01:34.140 --> 00:01:35.340
That's fine, though.

25
00:01:35.340 --> 00:01:39.830
We do know that top and
self are not equal.

26
00:01:39.830 --> 00:01:42.087
Whereas in the case where
we're running in full screen,

27
00:01:45.588 --> 00:01:47.060
&gt;&gt; Mike North: They are equal.

28
00:01:47.060 --> 00:01:49.270
So our check is based around that.

29
00:01:50.560 --> 00:01:55.200
So going back to the slides, we'll grab
this style thing, and where we're at now,

30
00:01:55.200 --> 00:01:59.930
effectively, is we can add this style.

31
00:02:03.080 --> 00:02:06.940
It has the tag in it too.
&gt;&gt; Mike North: And

32
00:02:06.940 --> 00:02:11.928
walking through once more, basically
if we find that self does equal top

33
00:02:11.928 --> 00:02:16.970
that means we're not currently
being framed inside something.

34
00:02:16.970 --> 00:02:21.860
And we will remove the clickjack

35
00:02:21.860 --> 00:02:26.440
style element up here,
which until that point has been hiding of

36
00:02:26.440 --> 00:02:31.620
the content from the browser,
so no one can click on that.

37
00:02:31.620 --> 00:02:36.110
Finally, in the event that
we find something amiss,

38
00:02:36.110 --> 00:02:41.130
we will attempt to navigate the outer
frame now this is not going to cause

39
00:02:41.130 --> 00:02:44.260
our JS Bin to necessarily
go to the other frame

40
00:02:44.260 --> 00:02:47.410
because we're sandboxed we'll have
to actually see what happens.

41
00:02:47.410 --> 00:02:53.070
So in this situation we're
just gonna set a header and

42
00:02:53.070 --> 00:02:57.280
it's gonna be x-frame-options.

43
00:02:57.280 --> 00:02:59.320
And I'm just gonna say, deny.

44
00:03:01.140 --> 00:03:04.970
We don't need anything special there.

45
00:03:04.970 --> 00:03:08.800
We have no need to iFrame this app,
and so we're not gonna add that.

46
00:03:08.800 --> 00:03:16.800
Okay, so refresh.
&gt;&gt; Mike North: Must be a valid HTTP token.

47
00:03:16.800 --> 00:03:17.540
Validated header?

48
00:03:17.540 --> 00:03:21.907
What am I doing wrong here?
&gt;&gt; Mike North: Sorry,

49
00:03:21.907 --> 00:03:23.270
it's comma separated.

50
00:03:24.440 --> 00:03:34.200
It's not an object.
&gt;&gt; Mike North: And

51
00:03:34.200 --> 00:03:37.903
the complaint now is,
let's just restart it.

52
00:03:43.531 --> 00:03:45.680
&gt;&gt; Mike North: Come on.

53
00:03:51.229 --> 00:03:53.644
&gt;&gt; Mike North: All right something's not

54
00:03:53.644 --> 00:03:56.700
happy.
&gt;&gt; Student: You need to add next.

55
00:03:56.700 --> 00:03:57.270
&gt;&gt; Mike North: Add a next.

56
00:03:57.270 --> 00:03:57.770
Thank you.
Sorry.

57
00:04:05.519 --> 00:04:06.210
&gt;&gt; Mike North: There we go.

58
00:04:07.840 --> 00:04:10.570
Okay, so,
we're getting something that we expected,

59
00:04:10.570 --> 00:04:13.520
which the in line script we added.

60
00:04:13.520 --> 00:04:17.030
That needs to be added to our content
security policy so that we can be sure,

61
00:04:17.030 --> 00:04:21.376
like if someone manages to inject
something into that somehow.

62
00:04:21.376 --> 00:04:25.970
That would script-src we can just add
another element here that looks like that

63
00:04:25.970 --> 00:04:30.910
you have to keep the sha inside
quotes as well and now we're back.

64
00:04:33.250 --> 00:04:37.700
So now that we're serving this up
let's see what happens over here.

65
00:04:37.700 --> 00:04:42.820
If we run this code again,
we get an error saying it refused

66
00:04:42.820 --> 00:04:47.550
to display local host 3000 in a frame
because X-Frame-Options was set to deny.

67
00:04:49.690 --> 00:04:56.280
So essentially,
we have mitigated this risk.

68
00:04:56.280 --> 00:04:58.630
We're no longer susceptible
to clickjacking attacks.

