WEBVTT

1
00:00:00.160 --> 00:00:04.650
&gt;&gt; Mike North: So that rounds out
our unit on client-side security.

2
00:00:04.650 --> 00:00:09.170
So just as a recap,
we began with cross-site scripting.

3
00:00:09.170 --> 00:00:14.730
We talked about cross-site request
forgery, CSRF, and we added a CSRF token.

4
00:00:14.730 --> 00:00:18.631
We talked about clickjacking
where we took our iframe and

5
00:00:18.631 --> 00:00:22.460
positioned it over another
button on the landing page.

6
00:00:22.460 --> 00:00:27.259
A UI redress attack that tricks a user
into interacting with an application other

7
00:00:27.259 --> 00:00:31.270
than the one that they think
they're interacting with.

8
00:00:31.270 --> 00:00:33.990
And then finally we wrapped up
with subresource integrity,

9
00:00:33.990 --> 00:00:38.940
where we learned to basically take assets
and kinda lock them into place, and

10
00:00:38.940 --> 00:00:43.230
make it so that if those assets
change in content in any way.

11
00:00:43.230 --> 00:00:46.980
We're going to basically fail secure and
we're gonna break, and

12
00:00:46.980 --> 00:00:51.210
possibly like report that
something just went wrong and

13
00:00:51.210 --> 00:00:53.720
looks someone's tampering
with your JavaScript or CSS.

14
00:00:55.270 --> 00:00:59.420
So now, we're going to jump
into another are of security.

15
00:00:59.420 --> 00:01:02.320
This can be another workshop in itself.

16
00:01:02.320 --> 00:01:04.580
It's a deep, deep topic.

17
00:01:04.580 --> 00:01:10.880
Networking is complicated and security
around it is similarly complicated.

18
00:01:10.880 --> 00:01:16.158
I'm going to be focusing on a small
subset of areas that we as front end

19
00:01:16.158 --> 00:01:22.350
developers and as application developers
need to be directly concerned about.

20
00:01:22.350 --> 00:01:25.640
So first we're gonna talk about
a man in the middle attack.

21
00:01:25.640 --> 00:01:28.740
And here's what a man in
the middle attack looks like.

22
00:01:28.740 --> 00:01:33.572
The scenario we're setting out to

23
00:01:33.572 --> 00:01:38.407
discuss here is the user they are.

24
00:01:38.407 --> 00:01:41.290
They're a user of your app they're
currently in a Starbucks or somewhere.

25
00:01:41.290 --> 00:01:46.464
They're on a public network and so
they're HTTP requests go from their

26
00:01:46.464 --> 00:01:51.295
device to the Wi-Fi radio into
the router and then they go from that

27
00:01:51.295 --> 00:01:57.080
router off to the Internet with
a lot of stuff happening in between.

28
00:01:57.080 --> 00:02:01.030
So to stage a man in the middle
attack I'm gonna take advantage

29
00:02:01.030 --> 00:02:02.870
of a couple of things.

30
00:02:02.870 --> 00:02:08.210
The first is that your default device
settings on all of your laptops,

31
00:02:08.210 --> 00:02:10.310
all of your tablets, all of your phones,

32
00:02:10.310 --> 00:02:14.910
is that they remember which networks
they've been connected to in the past.

33
00:02:14.910 --> 00:02:18.379
They remember this forever until
you go and you clear it out.

34
00:02:19.400 --> 00:02:24.030
And the default setting is
that basically when you come

35
00:02:24.030 --> 00:02:29.220
back to a network like this, of the same
name, you'll attempt to rejoin it.

36
00:02:29.220 --> 00:02:34.420
It'll be like you just arrived back home,
wifi network is called Home,

37
00:02:34.420 --> 00:02:35.630
let's hop back on that.

38
00:02:35.630 --> 00:02:39.500
You don't have to, every single time
you get home, hop back on your wifi.

39
00:02:39.500 --> 00:02:40.249
It just happens.

40
00:02:42.770 --> 00:02:47.310
So they need to basically
hold on to this information.

41
00:02:47.310 --> 00:02:50.950
Your devices need to hold on to this
information because it's part of how they

42
00:02:50.950 --> 00:02:55.460
search for
networks that they may be able to join.

43
00:02:55.460 --> 00:02:58.220
So I want to take a little break here and

44
00:02:58.220 --> 00:03:00.850
show you something that's been
running in the background.

45
00:03:02.440 --> 00:03:07.440
All right, so what I've got here,
this called a Wi-Fi pineapple.

46
00:03:07.440 --> 00:03:13.660
It is a device that you can use for
penetration testing.

47
00:03:13.660 --> 00:03:17.680
And I have been scanning all of
the devices that are currently in

48
00:03:17.680 --> 00:03:19.070
the room here.

49
00:03:19.070 --> 00:03:23.720
And they're all basically broadcasting
everywhere they've been, rIght.

50
00:03:23.720 --> 00:03:26.400
So we've got a lot of
Xfinity customers in here.

51
00:03:27.520 --> 00:03:31.110
I'm not sure Troy and Obbit the Motem, so
somebody in here knows what that means.

52
00:03:31.110 --> 00:03:32.480
They've been in that network before.

53
00:03:34.550 --> 00:03:36.220
So we've got MJG Workshop.

54
00:03:36.220 --> 00:03:39.090
Obviously a lot of us have been there.

55
00:03:39.090 --> 00:03:44.502
So we could keep going down and keep going
down, but this is a lot of different,

56
00:03:44.502 --> 00:03:50.660
your devices are constantly asking to join
things that they've already joined before.

57
00:03:50.660 --> 00:03:53.046
So I've done this before
at conferences and

58
00:03:53.046 --> 00:03:57.299
you can basically find out the composition
of the audience of the room where you

59
00:03:57.299 --> 00:04:02.262
could see, we've got some MEC employers,
a couple Googlers, LinkedIn employees,

60
00:04:02.262 --> 00:04:06.330
cuz they're always saying,
LinkedIn corporate network.

61
00:04:06.330 --> 00:04:08.490
Are you there there
LinkedIn corporate network?

62
00:04:08.490 --> 00:04:13.290
So again, I've just been
listening here your devices have

63
00:04:13.290 --> 00:04:15.830
been announcing themselves
this whole time.

64
00:04:17.010 --> 00:04:19.870
So we're gonna take advantage of that too,
right?

65
00:04:21.910 --> 00:04:23.540
Broadcasting what they are looking for.

66
00:04:23.540 --> 00:04:26.990
The third thing we take advantage of is
the fact that when you join a public wi-fi

67
00:04:26.990 --> 00:04:32.620
network, you trust that router
as the first DNS server in line.

68
00:04:32.620 --> 00:04:35.850
DNS is called the domain name service and

69
00:04:35.850 --> 00:04:39.420
it is what translates host
names into IP addresses.

70
00:04:39.420 --> 00:04:44.040
So it may seem odd that like
you would trust some strange

71
00:04:44.040 --> 00:04:47.470
router to translate host
names into IPs for you.

72
00:04:48.490 --> 00:04:53.990
It has become kind of a necessary
thing if you wanna use WiFi networks,

73
00:04:53.990 --> 00:04:56.430
because in order to see
a screen like this, and

74
00:04:56.430 --> 00:04:59.910
to sort of click through and
actually get Internet access,

75
00:04:59.910 --> 00:05:04.700
what these networks typically do
is something called DNS poisoning.

76
00:05:04.700 --> 00:05:10.060
Where they say, all of your host
names now route to the router so

77
00:05:10.060 --> 00:05:12.610
that you can hit this login page, right?

78
00:05:12.610 --> 00:05:15.310
So they will basically send you to
a place where you can agree to terms and

79
00:05:15.310 --> 00:05:17.810
conditions and you can proceed forward.

80
00:05:17.810 --> 00:05:22.210
Until you do that,
you won't be able to get to the Internet.

81
00:05:23.490 --> 00:05:26.610
So this is why most people don't
pick their own DNS server.

82
00:05:26.610 --> 00:05:30.860
They leave their configuration as
the default that your device ships with.

83
00:05:33.311 --> 00:05:37.110
&gt;&gt; Mike North: So
here's the basic idea behind this attack.

84
00:05:37.110 --> 00:05:43.040
So a attacker comes along and
also connects to the Starbucks Wi-Fi.

85
00:05:43.040 --> 00:05:49.077
They can then begin to send a series
of packets of garbage data to,

86
00:05:49.077 --> 00:05:52.310
sorry let me start over.

87
00:05:52.310 --> 00:05:55.360
So attacker arrives at the Starbucks.

88
00:05:55.360 --> 00:05:57.530
They are going to do this reconnaissance.

89
00:05:57.530 --> 00:06:02.700
They'll scan through and see what types
of networks is everybody asking for?

90
00:06:02.700 --> 00:06:04.289
Where has everybody been before.

91
00:06:04.289 --> 00:06:06.960
And they can pop up a network
name that seems familiar, right?

92
00:06:06.960 --> 00:06:10.450
We've all joined the network
called airport free WiFi.

93
00:06:10.450 --> 00:06:14.250
Probably every single one of our
device has that remembered and

94
00:06:14.250 --> 00:06:15.460
would gladly join it again.

95
00:06:16.950 --> 00:06:21.600
So then we send a bunch of garbage packets
to the connection between our target or

96
00:06:21.600 --> 00:06:26.770
targets and the router basically
de-authenticating them from the router.

97
00:06:26.770 --> 00:06:31.890
So we kinda interrupt them and
they drop that Wi-Fi connection.

98
00:06:31.890 --> 00:06:36.040
At which point they kinda start scanning
around for networks they've seen before.

99
00:06:36.040 --> 00:06:39.952
And eventually they are going to find
airport free Wi-Fi and the'll join us.

100
00:06:39.952 --> 00:06:42.699
And now we have become
the man in the middle and

101
00:06:42.699 --> 00:06:47.114
all plain HTTP traffic that the user
sends there that's gonna basically

102
00:06:47.114 --> 00:06:50.800
go from their client into us,
and then out to the Internet.

103
00:06:50.800 --> 00:06:54.190
And that is why this device here
is made for this kind of attack.

104
00:06:54.190 --> 00:06:57.020
It's why it has two antennas and
two Wi-Fi cards.

105
00:06:57.020 --> 00:07:01.630
One to connect to the Starbucks, and
one to create the other network.

106
00:07:01.630 --> 00:07:03.430
It is why you have two.

107
00:07:03.430 --> 00:07:05.840
I can create and
be on a network at the same time.

108
00:07:07.820 --> 00:07:11.100
So what kind of stuff can
an attacker do at this point?

109
00:07:11.100 --> 00:07:14.950
They can mess with the responses, right?

110
00:07:14.950 --> 00:07:15.920
As we saw this morning,

111
00:07:15.920 --> 00:07:20.900
I was able to inject a little piece
of script into an http response.

112
00:07:22.030 --> 00:07:27.396
So as soon as you can become a man in the
middle, you can cross-site script at will.

113
00:07:27.396 --> 00:07:30.690
You can basically cross CSRF
at will because now you

114
00:07:30.690 --> 00:07:33.710
can read that token as
it comes through you.

115
00:07:33.710 --> 00:07:38.520
You can get that CSRF token and
you can write your script just perfectly,

116
00:07:38.520 --> 00:07:41.450
so that they have that token there and
they work.

117
00:07:41.450 --> 00:07:43.740
So this is a pretty
serious thing to happen.

118
00:07:43.740 --> 00:07:47.610
It is our responsibility as developers
to do what we can to save our users from

119
00:07:47.610 --> 00:07:49.170
getting into this situation.

120
00:07:49.170 --> 00:07:50.640
Some things are under our control.

121
00:07:52.680 --> 00:07:57.690
And also keep in mind, like you may not,
the most effective attacks

122
00:07:57.690 --> 00:08:01.500
are ones where they'll gather information
and then use that information later on.

123
00:08:01.500 --> 00:08:05.480
So it's not like you can put you
phone into airplane mode and

124
00:08:05.480 --> 00:08:08.400
nothing happened up until that point and
so you're safe.

125
00:08:08.400 --> 00:08:09.830
You dodged a bullet.

126
00:08:09.830 --> 00:08:10.470
Probably not.

