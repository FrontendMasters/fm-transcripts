WEBVTT

1
00:00:00.420 --> 00:00:05.137
&gt;&gt; Mike North: So first, I wanna make
sure that everyone understands how

2
00:00:05.137 --> 00:00:08.612
huge the problem is
that we have right now.

3
00:00:08.612 --> 00:00:10.787
What you see on the right here,

4
00:00:10.787 --> 00:00:16.309
this is one of these typical ransomware
programs that it is essentially a virus

5
00:00:16.309 --> 00:00:21.749
that spreads across a network encrypting
what it can identify as user data and

6
00:00:21.749 --> 00:00:26.686
then holding it for ransom where you
have to pay some number of bitcoins

7
00:00:26.686 --> 00:00:31.710
to a particular address in order
to get your data decrypted.

8
00:00:31.710 --> 00:00:36.660
This happens all the time and security
experts, when you run into this situation,

9
00:00:36.660 --> 00:00:42.000
will tell you just pay it,
you already got hit,

10
00:00:42.000 --> 00:00:45.360
you already have paid the cost,
there's no way to undo it.

11
00:00:45.360 --> 00:00:51.520
And features and deadlines are always
in competition with the things

12
00:00:51.520 --> 00:00:56.190
like security and things like tech debt
that have a less tangible business value.

13
00:00:56.190 --> 00:01:01.330
Unless there is some compliance that
your business is trying to get,

14
00:01:01.330 --> 00:01:04.890
I've worked with companies
trying to get PCI compliance.

15
00:01:05.940 --> 00:01:09.640
Once you move past that, it's hard
to keep that constant vigilance and

16
00:01:09.640 --> 00:01:11.340
constant awareness going.

17
00:01:11.340 --> 00:01:14.650
Whereas, you're always trying to fix bugs,
and you're always trying to add features.

18
00:01:14.650 --> 00:01:17.740
And so it naturally sorta feels
like a secondary concern.

19
00:01:18.970 --> 00:01:23.991
In particular, web developers have really
fallen behind, compared to our backend and

20
00:01:23.991 --> 00:01:28.520
DevOps counterparts who have to
think about security all the time.

21
00:01:28.520 --> 00:01:33.670
It is a regular part of what they think
about whenever they do something.

22
00:01:33.670 --> 00:01:34.930
What could go wrong?

23
00:01:34.930 --> 00:01:36.486
Who should have access to this?

24
00:01:36.486 --> 00:01:41.453
In the front-end world,
because of a combination of things,

25
00:01:41.453 --> 00:01:46.233
mainly that the target is moving so
fast and we have to learn so

26
00:01:46.233 --> 00:01:51.482
much, and things like performance,
our more pressing concern,

27
00:01:51.482 --> 00:01:56.918
when you talk to business stakeholders,
we are lacking in knowledge

28
00:01:56.918 --> 00:02:03.230
compared to other engineers that may work
at the same companies that we're at.

29
00:02:03.230 --> 00:02:05.450
Attacks are becoming more and more severe.

30
00:02:06.650 --> 00:02:09.690
Over the weekend, Equifax was breached.

31
00:02:09.690 --> 00:02:14.656
They basically allowed a web application
to have access to 147 million

32
00:02:14.656 --> 00:02:19.150
people's Social Security numbers and
credit card information.

33
00:02:19.150 --> 00:02:22.030
There's no reason a web app should've
had access to all that data.

34
00:02:22.030 --> 00:02:26.610
There's no reason that the database
query should've been allowed to

35
00:02:27.880 --> 00:02:33.330
dump all of the records of that table,
that was the database working really,

36
00:02:33.330 --> 00:02:37.160
really, really hard for hours,
like spiked at 100% CPU.

37
00:02:37.160 --> 00:02:42.095
And then letting like gigabytes of data
travel out of their network unnoticed.

38
00:02:42.095 --> 00:02:45.516
So things are getting worse and
worse and worse, and

39
00:02:45.516 --> 00:02:50.414
where we used to have to worry about
the one or two people causing mischief,

40
00:02:50.414 --> 00:02:55.236
now we also have to worry about nation
states that are launching attacks at

41
00:02:55.236 --> 00:02:58.389
other governments and
at private businesses.

42
00:02:58.389 --> 00:03:03.213
And these groups have more resources
than we're used to seeing so

43
00:03:03.213 --> 00:03:06.820
they can attack on a scale
that is unparalleled.

44
00:03:06.820 --> 00:03:11.260
It seems like we're setting
a new record with each breach,

45
00:03:11.260 --> 00:03:13.630
each massively distributed DDOS attack.

46
00:03:15.780 --> 00:03:17.000
So if that weren't bad enough,

47
00:03:17.000 --> 00:03:19.350
the barriers to staging an attack
are lower than earlier.

48
00:03:19.350 --> 00:03:22.180
I'm going to show you
some attack platforms,

49
00:03:22.180 --> 00:03:26.130
some little things that you can buy or
download that literally have an app store

50
00:03:26.130 --> 00:03:30.130
where you can install stuff that will
cause mischief on a Wi-Fi network.

51
00:03:31.410 --> 00:03:37.620
So all of these things kind of compound
into us as web developers needing to take

52
00:03:37.620 --> 00:03:42.350
responsibility as we're writing our own
code and as we're looking on our own apps.

53
00:03:42.350 --> 00:03:47.870
Not depending on our companies automated
audits to protect our users but

54
00:03:47.870 --> 00:03:54.120
rather to build into our own
ability to look at our own code and

55
00:03:54.120 --> 00:03:57.930
to evaluate our features for
completeness and for safety.

56
00:03:57.930 --> 00:03:59.030
The idea of security.

57
00:03:59.030 --> 00:04:03.310
Not just, it won't break, but
also mischief cannot be caused.

