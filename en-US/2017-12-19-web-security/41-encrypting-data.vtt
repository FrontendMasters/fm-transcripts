WEBVTT

1
00:00:00.180 --> 00:00:04.390
&gt;&gt; Mike North: So the way to solve this
is we want to encrypt our data in flight.

2
00:00:04.390 --> 00:00:07.475
This is where we introduce HTTPS.

3
00:00:07.475 --> 00:00:13.456
And the benefit we get here is that you
need a secret key in order to read or

4
00:00:13.456 --> 00:00:15.763
alter a response, right?

5
00:00:15.763 --> 00:00:21.830
In order to look at the traffic or
edit it, you need to know some secret.

6
00:00:21.830 --> 00:00:25.280
Certificates are involved and
they identify domains, and

7
00:00:25.280 --> 00:00:27.764
in order to get one of these certificates,

8
00:00:27.764 --> 00:00:32.329
you basically have to do something that
proves you have control over a domain.

9
00:00:32.329 --> 00:00:35.346
This varies from adding
an entry to an DNS table,

10
00:00:35.346 --> 00:00:39.026
where when the certificate authority says,
if they ask for

11
00:00:39.026 --> 00:00:43.750
an entry of a particular name,
they'll get some long cryptic string back.

12
00:00:43.750 --> 00:00:45.971
And they'll say, yes,
that is what I asked I for.

13
00:00:45.971 --> 00:00:46.990
It is there.

14
00:00:46.990 --> 00:00:49.220
Clearly you have the password
to be able to do this, and

15
00:00:49.220 --> 00:00:51.860
therefore, you must control this thing.

16
00:00:51.860 --> 00:00:56.050
I want you to think about that every time
you bring a contractor onto your team or

17
00:00:56.050 --> 00:01:02.240
something, and you say, here are my
credentials for my GoDaddy account,

18
00:01:02.240 --> 00:01:05.590
or you can post anything you want,
here's our staging environment.

19
00:01:07.540 --> 00:01:11.920
It is very easy for someone to
pop one of these files up there,

20
00:01:11.920 --> 00:01:14.280
basically get a certificate,
and walk away with it.

21
00:01:14.280 --> 00:01:20.670
And any certificate, until we introduce
a new concept, any certificate whose name

22
00:01:20.670 --> 00:01:26.830
matches the name of your domain
will work for HTTPS, right?

23
00:01:26.830 --> 00:01:30.076
So I could go to Comodo and
get a certificate there.

24
00:01:30.076 --> 00:01:33.849
And I could go to Let's Encrypt and
then have them make me a free certificate.

25
00:01:33.849 --> 00:01:35.260
And those are equally valid.

26
00:01:37.260 --> 00:01:41.058
Enhanced validation, this is where we see
the green address bar in our browsers.

27
00:01:41.058 --> 00:01:47.110
That's nice, right?

28
00:01:47.110 --> 00:01:52.640
As a matter of company policy, and
policy of the standards body that governs

29
00:01:52.640 --> 00:01:57.100
issuing certificates, they are supposed
to ask for government ID and

30
00:01:57.100 --> 00:02:01.700
have a person with a government
issued ID on file,

31
00:02:01.700 --> 00:02:05.450
rather than just proving you own
a domain in order to get one of those.

32
00:02:05.450 --> 00:02:09.120
They ask often for
articles of incorporation, and

33
00:02:09.120 --> 00:02:14.450
they ensure that your business name aligns
with what you have on the certificate.

34
00:02:14.450 --> 00:02:18.680
But that's just sort of corporate policy.

35
00:02:18.680 --> 00:02:22.470
If someone where to get ahold
of the wrong passwords and

36
00:02:22.470 --> 00:02:25.240
the wrong keys,
you could generate those quite easily.

37
00:02:25.240 --> 00:02:28.000
There's nothing about them technically

38
00:02:28.000 --> 00:02:31.020
that makes them any more secure
than the regular certificates.

39
00:02:31.020 --> 00:02:34.730
It's just that additional procedural hoops

40
00:02:34.730 --> 00:02:39.150
must be jumped through in order
to acquire one of those things.

