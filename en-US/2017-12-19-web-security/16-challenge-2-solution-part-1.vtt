WEBVTT

1
00:00:00.450 --> 00:00:02.330
&gt;&gt; Mike North: We're gonna
implement some defenses for

2
00:00:02.330 --> 00:00:04.970
the cross-site scripting
vulnerabilities we found.

3
00:00:04.970 --> 00:00:10.430
So the first thing that I'm
gonna do is scan for this unsafe

4
00:00:10.430 --> 00:00:14.850
thing that we know about and
eliminate all of it from my code base.

5
00:00:15.940 --> 00:00:19.405
If you have custom linting
rules in your project or

6
00:00:19.405 --> 00:00:23.042
a git pre-commit hook is
another good option here.

7
00:00:23.042 --> 00:00:27.206
This is the kind of thing that you just
want to catch as early as possible,

8
00:00:27.206 --> 00:00:29.670
preferably in an automated way.

9
00:00:29.670 --> 00:00:31.640
We're gonna go and
fix it manually ourselves right now.

10
00:00:32.980 --> 00:00:36.741
So go back to our project, and
sorry, I'm getting notifications for

11
00:00:36.741 --> 00:00:42.242
some reason.
&gt;&gt; Mike North: Go back

12
00:00:42.242 --> 00:00:47.450
to the project here and
let's just find all occurrences.

13
00:00:47.450 --> 00:00:51.430
We will use VS codes,
little text search functionality.

14
00:00:52.440 --> 00:00:56.192
And I'm gonna search for all
occurrences of this string here, right?

15
00:00:56.192 --> 00:01:02.945
If this is the unsafe use HTML as HTML,
not as a string thing.

16
00:01:02.945 --> 00:01:05.735
If we search for that,
it's used pretty widely.

17
00:01:05.735 --> 00:01:09.725
So we can go and fix anything that
looks like it might be user input.

18
00:01:09.725 --> 00:01:12.175
Let me just give us full code here.

19
00:01:13.435 --> 00:01:21.865
So, I can fix these three.
&gt;&gt; Mike North: So

20
00:01:21.865 --> 00:01:23.170
that'll take care of that.

21
00:01:23.170 --> 00:01:26.720
And you should see basically
this stuff gets eliminated,

22
00:01:26.720 --> 00:01:28.020
this editor is great for this.

23
00:01:28.020 --> 00:01:32.500
Gets eliminated from my
to do list immediately.

24
00:01:32.500 --> 00:01:34.230
Actually this one we wanna keep.

25
00:01:34.230 --> 00:01:35.370
This one we can fix here.

26
00:01:35.370 --> 00:01:40.750
This is a message that potentially could
contain a string from the user, right?

27
00:01:40.750 --> 00:01:44.600
Because in our validation message, it
says successfully created an account, and

28
00:01:44.600 --> 00:01:47.120
then the account name.

29
00:01:47.120 --> 00:01:50.150
Here, this kind of thing,
this might be where it's appropriate.

30
00:01:50.150 --> 00:01:55.210
Because in this case, this is a layout
file and it's meant to wrap some other

31
00:01:55.210 --> 00:02:00.380
HTML, and
this is where the body would be placed.

32
00:02:00.380 --> 00:02:03.540
So we gotta leave that as
HTML because that's our code.

33
00:02:03.540 --> 00:02:05.080
Now as we descend farther,

34
00:02:05.080 --> 00:02:08.570
we just need to make sure anything
the body turns into is protected.

35
00:02:08.570 --> 00:02:10.960
We do our due diligence there.

36
00:02:10.960 --> 00:02:14.470
This is gonna be the same deal,
just another layout.

37
00:02:14.470 --> 00:02:19.422
This one we need to fix.
&gt;&gt; Mike North: This

38
00:02:19.422 --> 00:02:21.230
one we definitely need to fix.

39
00:02:21.230 --> 00:02:25.864
That is a user being allowed
to put something in the URL.

40
00:02:29.450 --> 00:02:32.120
&gt;&gt; Mike North: This is their account name.

41
00:02:32.120 --> 00:02:37.790
So this will fix one of those cross
site scripting errors that's obvious.

42
00:02:37.790 --> 00:02:41.603
And then you may have noticed that
if you went to the transfers page.

43
00:02:41.603 --> 00:02:48.403
My point of putting that transfers
page there is that that's a situation

44
00:02:48.403 --> 00:02:54.215
where you see all users' accounts.
&gt;&gt; Mike North: And

45
00:02:54.215 --> 00:03:00.175
the point there is that now,
if you have multiple users in the system,

46
00:03:00.175 --> 00:03:04.821
this is where like one user of
the system would be able to

47
00:03:04.821 --> 00:03:07.878
affect another user of the system.

48
00:03:07.878 --> 00:03:12.160
In the accounts page, those are all
my accounts, I'm only affecting me.

49
00:03:12.160 --> 00:03:14.560
But this is another place
where you need to look for

50
00:03:14.560 --> 00:03:16.741
potential cross-site scripting, right?

51
00:03:16.741 --> 00:03:20.072
Where like user A's
content shown to user B.

52
00:03:20.072 --> 00:03:22.690
That is how this kind of thing spreads.

53
00:03:22.690 --> 00:03:25.142
And this option group thing, right?

54
00:03:25.142 --> 00:03:30.070
This is our account transfer code here,
that is what we're fixing right now.

55
00:03:34.090 --> 00:03:35.220
Clean up a couple more.

56
00:03:35.220 --> 00:03:41.110
Another account name here,
a username, no user found.

57
00:03:41.110 --> 00:03:45.260
This was the cross-site scripting through
that user profile page where we passed in

58
00:03:45.260 --> 00:03:46.840
something to the argument.

59
00:03:46.840 --> 00:03:51.870
Now we can regard it as
just regular html and

60
00:03:51.870 --> 00:03:56.480
at this point we've just really got body,
body,

61
00:03:56.480 --> 00:04:01.760
body so the app should continue to work.

62
00:04:01.760 --> 00:04:07.200
And we should find that now we're
seeing this stuff treated as text.

63
00:04:07.200 --> 00:04:10.350
Now we see the script text,
before they were being evaluated as code.

64
00:04:10.350 --> 00:04:12.520
Now they're just text.

65
00:04:12.520 --> 00:04:17.710
If you inspect an element on these things,
the subtle difference you look for

66
00:04:17.710 --> 00:04:21.190
is that you see how the script tags here.

67
00:04:21.190 --> 00:04:23.080
There in white, right?

68
00:04:23.080 --> 00:04:24.870
It's right above the orange line.

69
00:04:24.870 --> 00:04:26.500
That script tag is white.

70
00:04:26.500 --> 00:04:30.670
It is not blue because it's
not being treated as HTML.

71
00:04:30.670 --> 00:04:35.570
Now the elements tab is
lying to you a little bit,

72
00:04:35.570 --> 00:04:39.240
in that it's converting
the escape values into text.

73
00:04:39.240 --> 00:04:41.600
So the color is what you look for there.

74
00:04:41.600 --> 00:04:43.590
Additionally if you've used source,

75
00:04:43.590 --> 00:04:47.380
we should see maybe something
a little more obvious?

76
00:04:47.380 --> 00:04:49.960
Yes, this is a little bit more obvious.

77
00:04:49.960 --> 00:04:53.670
So, usually these things align and
we don't need to worry about,

78
00:04:53.670 --> 00:04:57.160
what's the difference between
view source versus our dev tools?

79
00:04:57.160 --> 00:05:02.570
But in this case, view source is showing
you what came over the wire, for real.

80
00:05:02.570 --> 00:05:07.791
The elements tab is trying to be
nice to us and say, rather than

81
00:05:07.791 --> 00:05:14.850
show you &amp;lt; instead of less than symbol,
it's gonna try to render that for you.

82
00:05:14.850 --> 00:05:18.452
So this is where you wanna look.

83
00:05:18.452 --> 00:05:20.580
This is a useful thing to look at still.

84
00:05:20.580 --> 00:05:25.335
View source is still useful.
&gt;&gt; Mike North: All right, so

85
00:05:25.335 --> 00:05:27.860
that should have fixed this.

86
00:05:27.860 --> 00:05:32.382
Let's try the other attack
here where we had user with

87
00:05:32.382 --> 00:05:37.289
the script.
&gt;&gt; Mike North: I will hopefully

88
00:05:37.289 --> 00:05:41.920
have this logout issue straightened out.

89
00:05:41.920 --> 00:05:43.470
Soon, yeah, here we go,

90
00:05:43.470 --> 00:05:46.700
there's the other one fixed,
this is what we should be seeing.

91
00:05:46.700 --> 00:05:49.280
This here is not a vulnerability.

92
00:05:49.280 --> 00:05:51.872
This is text being escaped properly, and

93
00:05:51.872 --> 00:05:55.361
we are rendering everything
on the screen as we should.

94
00:05:55.361 --> 00:06:01.543
And this is us letting our cross-site
scripting protection in this

95
00:06:01.543 --> 00:06:08.570
EJS library do its job as opposed to
like us trying to be smart about it.

96
00:06:08.570 --> 00:06:10.300
Maybe we have to go back
to our product owner and

97
00:06:10.300 --> 00:06:14.600
say, no we can't have italic
bank account names now.

98
00:06:14.600 --> 00:06:18.630
But we're also not vulnerable to
this catastrophic security bug.

