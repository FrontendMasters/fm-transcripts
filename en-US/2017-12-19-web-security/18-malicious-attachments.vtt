WEBVTT

1
00:00:00.800 --> 00:00:03.530
&gt;&gt; Mike North: Let's say that we've fixed
all of our cross-site scripting issues

2
00:00:03.530 --> 00:00:07.700
like this, and
all this text that goes through

3
00:00:07.700 --> 00:00:11.980
the user generated text,
nothing slipping by us now.

4
00:00:13.720 --> 00:00:19.420
This doesn't actually complete our
protection because particularly

5
00:00:19.420 --> 00:00:25.250
when you start dealing with attachments
you can embed some crazy stuff into some

6
00:00:25.250 --> 00:00:32.970
things that we typically
think of as inert documents.

7
00:00:32.970 --> 00:00:38.990
For example, this is a PDF document
that has a trojan embedded in it.

8
00:00:38.990 --> 00:00:43.680
And there's a lot of dynamic behavior
that can be added to PDFs and

9
00:00:43.680 --> 00:00:47.880
like in this case, and thankfully this was
published like in a white paper, right?

10
00:00:47.880 --> 00:00:51.430
After the vulnerability was patched,
but it was someone who had.

11
00:00:51.430 --> 00:00:56.190
They basically found the ability for,
to put something in a PDF that would

12
00:00:56.190 --> 00:00:59.460
modify memory that it was
out of its bounds, right?

13
00:00:59.460 --> 00:01:01.670
Memory that did not belong to it.

14
00:01:01.670 --> 00:01:04.330
And as soon as you can do
that it's just a matter of

15
00:01:04.330 --> 00:01:07.590
basically finding the right area of
memory where maybe those are like

16
00:01:07.590 --> 00:01:11.550
that's code that will be
executed by something, right?

17
00:01:11.550 --> 00:01:15.770
Or maybe it's a file that will be
indexed by your operating system,

18
00:01:15.770 --> 00:01:18.260
so your next auto complete works.

19
00:01:18.260 --> 00:01:22.340
It's just a matter of time before you can
identify the right spot to put things.

20
00:01:24.070 --> 00:01:27.730
You can also add malicious
stuff to images.

21
00:01:27.730 --> 00:01:31.700
So there's a non visible
portion of images.

22
00:01:31.700 --> 00:01:35.420
Have you ever looked at like pictures
that you take and you see that you've got

23
00:01:35.420 --> 00:01:40.370
you've got like the geotags so you know
you took it at a particular location and

24
00:01:40.370 --> 00:01:42.680
like maybe the camera that you used and
the shutter speed.

25
00:01:43.890 --> 00:01:48.610
So like this is all stored in that image,
it's part of the file, right?

26
00:01:48.610 --> 00:01:53.210
Cuz like with your digital camera I
mean surely on your smartphone like it

27
00:01:53.210 --> 00:01:55.480
could have a database somewhere
that it's tracking that.

28
00:01:55.480 --> 00:02:00.429
It turns out even with a regular camera
just moving those raw image files over

29
00:02:00.429 --> 00:02:04.469
like you get this as well so
there is non-visible data there.

30
00:02:06.170 --> 00:02:10.560
So, we're going to do, I know,
I'm trying to get you to be skeptical.

31
00:02:11.600 --> 00:02:16.430
I'm about to show you something cool and
there's no malicious thing happening here.

32
00:02:16.430 --> 00:02:20.760
So, in your project, in the examples
folder, there's a picture of a squirrel.

33
00:02:22.470 --> 00:02:23.993
So, let's go take a look at that.

34
00:02:27.117 --> 00:02:28.630
&gt;&gt; Mike North: So
there's a picture of a squirrel.

35
00:02:31.290 --> 00:02:37.040
And what you're gonna wanna do is go
locate that file in your finder or

36
00:02:37.040 --> 00:02:41.500
in your explorer,
depending on your operating system.

37
00:02:41.500 --> 00:02:42.420
So there's examples.

38
00:02:42.420 --> 00:02:43.530
I'm just gonna open this up.

39
00:02:44.570 --> 00:02:45.604
Find in folder.

40
00:02:47.662 --> 00:02:52.180
&gt;&gt; Mike North: Oops, that's the wrong
thing, I want to reveal in finder.

41
00:02:53.780 --> 00:02:58.150
All right, so there's the file, and
I'm gonna just take this JPG, and

42
00:02:58.150 --> 00:03:01.500
I'm just gonna drag it into a browser.

43
00:03:01.500 --> 00:03:03.493
Cuz it can handle JPGs.

44
00:03:06.401 --> 00:03:07.335
&gt;&gt; Mike North: And there's a JPG.

45
00:03:08.910 --> 00:03:09.840
That's fantastic.

46
00:03:09.840 --> 00:03:11.813
So that's a squirrel, fine.

47
00:03:14.191 --> 00:03:16.490
&gt;&gt; Mike North: Let me just
delete this file here.

48
00:03:16.490 --> 00:03:17.940
You will see the point of it in a moment.

49
00:03:20.840 --> 00:03:22.880
Move to Trash, there we go.

50
00:03:22.880 --> 00:03:26.000
So if take this same squirrel.jpg,

51
00:03:26.000 --> 00:03:32.430
all I'm gonna do is I'm gonna
replace the extension with HTML.

52
00:03:32.430 --> 00:03:33.700
Saying, do you really wanna do this?

53
00:03:33.700 --> 00:03:34.950
That seems weird.

54
00:03:34.950 --> 00:03:37.090
Let's drag it into another browser.

55
00:03:37.090 --> 00:03:40.320
We'll try Safari, and this is what we get.

56
00:03:44.002 --> 00:03:49.282
&gt;&gt; Mike North: So, if we view source,
what I've effectively

57
00:03:49.282 --> 00:03:55.444
done here is
&gt;&gt; Mike North: We've got,

58
00:03:55.444 --> 00:04:01.650
I have put some HTML in this
non-visible data for this image.

59
00:04:02.880 --> 00:04:08.000
And because browsers, they try to be nice,

60
00:04:08.000 --> 00:04:12.430
if you give it something reasonable
it will try to render it as HTML.

61
00:04:12.430 --> 00:04:17.300
It really wants to treat things as HTML,
especially when it has an HTML extension.

62
00:04:17.300 --> 00:04:20.320
So it's gonna render this HTML,

63
00:04:20.320 --> 00:04:24.280
and whatever we can put in here,
it'll be shown as a document.

64
00:04:24.280 --> 00:04:28.910
So now imagine you allow users
to upload attachments and

65
00:04:28.910 --> 00:04:33.610
for some reason someone
figures out a seemingly small

66
00:04:33.610 --> 00:04:37.890
issue like they have the ability
to rename this file.

67
00:04:37.890 --> 00:04:40.950
So where once you add the ability
to click on an image and

68
00:04:40.950 --> 00:04:45.200
you were looking at the full screen
image there, sort of a zoom in effect.

69
00:04:45.200 --> 00:04:47.370
Now you click on that HTML document,

70
00:04:47.370 --> 00:04:51.540
and you're looking at this and it's hosted
on the same domain as your application.

71
00:04:51.540 --> 00:04:56.100
I can put whatever script I want in here,
and I can get that to run, right?

72
00:04:56.100 --> 00:04:57.900
Cuz this down here, this is JPG data.

73
00:04:59.230 --> 00:05:02.270
That's why it looks all funky,
but up here it's HTML.

74
00:05:04.210 --> 00:05:08.990
So if we look at this, in fact,
some really strange stuff going on here.

75
00:05:08.990 --> 00:05:10.890
So first off this link will work,

76
00:05:10.890 --> 00:05:14.810
like you could like to this page just
like you can link to any other document.

77
00:05:14.810 --> 00:05:19.690
I can even have an image tag here
where the source of the image

78
00:05:19.690 --> 00:05:21.250
is this document itself.

79
00:05:21.250 --> 00:05:23.900
So I'm recursively
rendering this document.

80
00:05:23.900 --> 00:05:28.130
The outer one is treating it like HTML and
then this is the image.

81
00:05:28.130 --> 00:05:29.610
It is the same document itself.

82
00:05:29.610 --> 00:05:36.447
It's like view an image in
the sources myself and put it here.

83
00:05:36.447 --> 00:05:39.390
Really crazy stuff.

84
00:05:39.390 --> 00:05:44.590
So what we're gonna do after lunch,
I've built a little tool for

85
00:05:44.590 --> 00:05:48.530
you where you can like have
your own text file and

86
00:05:48.530 --> 00:05:53.510
essentially it will load this squirrel
image with whatever HTML you want and

87
00:05:53.510 --> 00:05:56.280
we can see like what kind of
wacky stuff we can create.

88
00:05:56.280 --> 00:05:58.390
You can go and
fool your friends with this thing.

89
00:05:58.390 --> 00:05:59.550
Just be nice.

90
00:05:59.550 --> 00:06:00.590
Ask permission.

91
00:06:00.590 --> 00:06:04.210
Tell them it's something cool but
that you're gonna be nice.

92
00:06:04.210 --> 00:06:07.400
So but the point here is
it's not just about text.

93
00:06:07.400 --> 00:06:10.230
It's not just about strings
that users are entering.

94
00:06:10.230 --> 00:06:16.900
As soon as you cross the line and allow
users to spread attachments, your app

95
00:06:16.900 --> 00:06:21.400
basically becomes a potential vector for
spreading this kind of stuff around.

96
00:06:21.400 --> 00:06:24.870
And that is a mean little squirrel there.

97
00:06:24.870 --> 00:06:26.890
It could some nasty stuff.

98
00:06:26.890 --> 00:06:31.562
So, we will play with this and we'll
use this little tool I've added to this

99
00:06:31.562 --> 00:06:35.980
project to read from and write to
that non-visible metadata for this.

100
00:06:35.980 --> 00:06:40.890
See how much trouble we can cause
after about a one hour break.

