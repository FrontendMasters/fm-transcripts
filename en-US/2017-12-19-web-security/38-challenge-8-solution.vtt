WEBVTT

1
00:00:00.710 --> 00:00:02.026
&gt;&gt; Mike North: Welcome back, so

2
00:00:02.026 --> 00:00:06.865
we're gonna add subresource
integrity to our external assets.

3
00:00:06.865 --> 00:00:11.760
First thing,
that we're gonna do is can we unfreeze?

4
00:00:11.760 --> 00:00:12.637
Perfect, so

5
00:00:12.637 --> 00:00:17.839
we're gonna add subresource integrity
attributes to our external assets.

6
00:00:17.839 --> 00:00:19.935
And what we're gonna do first is,

7
00:00:19.935 --> 00:00:25.160
we'll go to our main layout because that's
where our static assets are coming from.

8
00:00:25.160 --> 00:00:27.681
It's these two here we're interested in.

9
00:00:27.681 --> 00:00:30.540
These and this one as well.

10
00:00:30.540 --> 00:00:35.200
So we can say, integrity equals and then,

11
00:00:35.200 --> 00:00:40.385
we're going to let
the browser complain to us.

12
00:00:40.385 --> 00:00:45.216
And tell us exactly what those
values should be as it's saying,

13
00:00:45.216 --> 00:00:47.010
it doesn't like them.

14
00:00:47.010 --> 00:00:50.834
And the last thing is, sorry,

15
00:00:50.834 --> 00:00:54.812
it's cross origin anonymous.

16
00:00:57.690 --> 00:00:59.748
&gt;&gt; Mike North: This says,
do not send cookies or

17
00:00:59.748 --> 00:01:04.755
authentication credentials along with
the request, just ask for it directly.

18
00:01:04.755 --> 00:01:08.010
We'll save this,
we'll go back here, we'll refresh.

19
00:01:09.900 --> 00:01:11.965
Let's make sure that our apps
running in the foreground.

20
00:01:11.965 --> 00:01:19.432
There it is, and I expected it to complain
about a bunch of stuff, let's see.

21
00:01:23.611 --> 00:01:25.330
&gt;&gt; Mike North: Maybe,
I spelled something wrong.

22
00:01:28.510 --> 00:01:29.189
Let's add some junk here.

23
00:01:33.770 --> 00:01:36.634
&gt;&gt; Mike North: There we go,
integrity attribute.

24
00:01:36.634 --> 00:01:44.180
Okay, let's add this, there we go.

25
00:01:44.180 --> 00:01:48.544
So it looked like, I had to attempt to
add an invalid integrity attribute,

26
00:01:48.544 --> 00:01:50.151
starting with sha256.

27
00:01:50.151 --> 00:01:54.797
That just describes the algorithm
that was used to make

28
00:01:54.797 --> 00:01:57.740
this hash of that script content.

29
00:01:57.740 --> 00:02:01.114
But now, we have legit values here.

30
00:02:01.114 --> 00:02:07.020
So this is the legitimate value for
the MUICSS, we'll put that into place.

31
00:02:07.020 --> 00:02:10.163
So that's this first one,
just drop it right there.

32
00:02:10.163 --> 00:02:14.030
The second one is for the style.css.

33
00:02:14.030 --> 00:02:18.989
We'll grab that all the way to that quote,
paste it over, and that's this one.

34
00:02:21.577 --> 00:02:23.870
&gt;&gt; Mike North: And then,
the third one, wait, are those equal?

35
00:02:23.870 --> 00:02:26.391
No, they're not,
they just end with an equal.

36
00:02:26.391 --> 00:02:31.958
Third one is this and that is the last
thing, and this is the script.

37
00:02:31.958 --> 00:02:37.524
We're gonna save and but you'll notice
with the incorrect hash values,

38
00:02:37.524 --> 00:02:42.293
this is just HTML,
there's no JavaScript, there's no CSS.

39
00:02:42.293 --> 00:02:46.998
So those assets were downloaded,
and then the browser said,

40
00:02:46.998 --> 00:02:50.347
nope, you're not allowed to become code or

41
00:02:50.347 --> 00:02:54.431
you're not allowed to become style,
you're done.

42
00:02:54.431 --> 00:03:00.053
But now, when we refresh,
we're all better.

43
00:03:00.053 --> 00:03:04.740
Something went wrong,
DevTools was disconnected.

44
00:03:09.876 --> 00:03:13.230
&gt;&gt; Mike North: I'm gonna chalk that up
to this, being the Chrome nightly build.

45
00:03:13.230 --> 00:03:16.523
So we've just added
sub-resource integrity.

46
00:03:16.523 --> 00:03:23.150
Now, what would happen if we went back and
sneakily changed one of our scripts here.

47
00:03:23.150 --> 00:03:25.410
That would be in Public folder?

48
00:03:25.410 --> 00:03:29.837
Yes, Sso let's add,

49
00:03:29.837 --> 00:03:37.293
right here any change, whatsoever.

50
00:03:37.293 --> 00:03:43.980
And if we look that research
just got rejected down here.

51
00:03:43.980 --> 00:03:45.202
It didn't find a valid digest.

52
00:03:45.202 --> 00:03:48.890
The content is changed,
therefore the hash changes.

53
00:03:48.890 --> 00:03:53.610
Now, it doesn't align
with what's in our HTML.

54
00:03:53.610 --> 00:03:55.958
We can rest easier now.

55
00:03:55.958 --> 00:03:59.894
So again, until we use HTTPS
which we're about to talk to,

56
00:03:59.894 --> 00:04:02.390
we're about to talk about.

57
00:04:02.390 --> 00:04:05.272
You could of course modify
both the HTML and the CSS.

58
00:04:05.272 --> 00:04:09.540
But imagine that we did things in such
a way where you couldn't tamper with that

59
00:04:09.540 --> 00:04:10.193
HTML file.

60
00:04:10.193 --> 00:04:14.285
But our CSS or our JavaScript assets
they were in some CDN somewhere.

61
00:04:14.285 --> 00:04:18.433
Now, our assurance around
that HTML file gives us

62
00:04:18.433 --> 00:04:22.681
the ability to reject any
tampered with assets that

63
00:04:22.681 --> 00:04:27.540
are hosted by someone else
outside of our direct control.

