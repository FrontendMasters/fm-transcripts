WEBVTT

1
00:00:00.350 --> 00:00:04.450
&gt;&gt; Mike North: So another best practice
is to validate the request origin.

2
00:00:04.450 --> 00:00:07.960
Modern browsers,
they send the origin header.

3
00:00:07.960 --> 00:00:10.620
And you can try to alter it
with your client side code, and

4
00:00:10.620 --> 00:00:13.220
it'll sort of appear that you can.

5
00:00:13.220 --> 00:00:15.840
But your changes won't have stuck.

6
00:00:15.840 --> 00:00:17.530
By the time the request goes out,

7
00:00:17.530 --> 00:00:21.300
that origin header will be back
to what it was in the beginning.

8
00:00:21.300 --> 00:00:23.820
It's one of these things
we can't tamper with.

9
00:00:23.820 --> 00:00:28.240
So all of the evergreen
browsers currently send origin,

10
00:00:28.240 --> 00:00:33.220
IE 11 in some cases for
some cross origin cases, it does not.

11
00:00:33.220 --> 00:00:38.560
Whenever the origin header is not there,
there's almost always a referer header.

12
00:00:38.560 --> 00:00:40.980
Funny side note here, it's misspelled.

13
00:00:40.980 --> 00:00:43.150
That is a legitimate misspelling.

14
00:00:43.150 --> 00:00:46.900
The standard has the misspelling error and
we must respect it forever.

15
00:00:48.170 --> 00:00:53.390
This quote is from an email thread
where the person who added this

16
00:00:53.390 --> 00:00:59.330
to the HTTP spec has petitioned
the Oxford English Dictionary

17
00:00:59.330 --> 00:01:05.160
to change its spelling of referer to his
misspelling, because the argument is

18
00:01:05.160 --> 00:01:10.340
it's used much, much more often with this
spelling, compared to the correct one.

19
00:01:11.860 --> 00:01:15.105
When you're behind a proxy,
you can still usually look at the Host and

20
00:01:15.105 --> 00:01:19.150
X-Forwarded-Host headers to see
where that originally came from.

21
00:01:19.150 --> 00:01:24.000
If you're using Heroku, for example, you
are always behind Squid, which is a proxy.

22
00:01:24.000 --> 00:01:27.890
And you will always have
X-Forwarded-Host available to you, so

23
00:01:27.890 --> 00:01:32.710
that you can make sense of which
origin did this really come from?

24
00:01:32.710 --> 00:01:36.370
You don't care about
where's that proxy sitting.

25
00:01:36.370 --> 00:01:39.460
You probably know a lot about that proxy
cuz it's part of your infrastructure.

