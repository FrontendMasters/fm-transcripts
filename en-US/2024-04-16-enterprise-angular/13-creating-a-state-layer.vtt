WEBVTT

1
00:00:00.197 --> 00:00:05.405
So I don't know about you, but I thought
that was a pretty exciting module.

2
00:00:05.405 --> 00:00:07.793
I just, I got goosebumps,
it's electric in here.

3
00:00:07.793 --> 00:00:15.168
The next section I want to talk
about is state management.

4
00:00:15.168 --> 00:00:20.276
And I think that going
from micro front ends to

5
00:00:20.276 --> 00:00:25.118
discussion on reactive architecture just

6
00:00:25.118 --> 00:00:29.964
is a natural segue into state management.

7
00:00:29.964 --> 00:00:33.958
And we've seen the facade pattern, but

8
00:00:33.958 --> 00:00:37.716
we're going to flush that back out and

9
00:00:37.716 --> 00:00:43.958
talk about the individual pieces and
why they're important.

10
00:00:43.958 --> 00:00:51.535
And I think as well just kind of
stopping and looking at NgRx as a whole.

11
00:00:51.535 --> 00:00:56.456
And I think there's some
narratives that I've heard

12
00:00:56.456 --> 00:01:00.948
that I think create maybe
a misleading context.

13
00:01:00.948 --> 00:01:05.937
Or I think that individuals,
I think they've told

14
00:01:05.937 --> 00:01:10.694
themselves that it's so
hard that too much, and

15
00:01:10.694 --> 00:01:17.205
then they move on to other options
like a service with the subject.

16
00:01:17.205 --> 00:01:24.440
Before I go any further though,
what I do wanna say is that,

17
00:01:24.440 --> 00:01:28.511
I sometimes I like to tell jokes.

18
00:01:28.511 --> 00:01:34.425
And occasionally,
I will say things that are humorous to me,

19
00:01:34.425 --> 00:01:38.762
but it sounds maybe
sharper than I intended.

20
00:01:38.762 --> 00:01:44.992
What I do wanna be clear is that though
I think that NgRx is a great option.

21
00:01:44.992 --> 00:01:48.857
I think the barrier to entry
to fully understanding and

22
00:01:48.857 --> 00:01:53.990
embracing NgRx and Redux is a paradigm
the same thing with observables.

23
00:01:53.990 --> 00:01:59.254
So if I'm being totally transparent,

24
00:01:59.254 --> 00:02:04.357
that it took me around 3 weeks to fully

25
00:02:04.357 --> 00:02:09.150
wrap my mind around Redux and NgRx.

26
00:02:09.150 --> 00:02:14.066
And this is me practicing building
stuff every day having access

27
00:02:14.066 --> 00:02:15.712
to the Angular team.

28
00:02:15.712 --> 00:02:20.001
And I had to go through
a monumental tectonic shift

29
00:02:20.001 --> 00:02:24.085
in the way that I thought
about applications and

30
00:02:24.085 --> 00:02:28.488
it was it eventually
completely became inverted.

31
00:02:28.488 --> 00:02:32.233
And it's the best thing I think
from a conceptual standpoint that's

32
00:02:32.233 --> 00:02:33.145
happened to me.

33
00:02:33.145 --> 00:02:38.465
But I say this to say that if NgRx, Redux,

34
00:02:38.465 --> 00:02:44.864
and observables are confusing or
overwhelming.

35
00:02:44.864 --> 00:02:46.206
I totally get it.

36
00:02:46.206 --> 00:02:52.432
I was there and I don't think
anybody should ever diminish that.

37
00:02:52.432 --> 00:02:59.941
It does take work to shift the way that
we fundamentally process the world and

38
00:02:59.941 --> 00:03:06.646
the paradigms in which we use to
express the world around us in code.

39
00:03:06.646 --> 00:03:10.556
So I just wanted to lead with that,
is that,

40
00:03:10.556 --> 00:03:14.997
I know this can be challenging and
confusing, but

41
00:03:14.997 --> 00:03:19.778
what I can also say is that
it's completely worth it.

42
00:03:19.778 --> 00:03:25.365
The one thing I will say is that There

43
00:03:25.365 --> 00:03:32.784
are ways to think about it that I think
make the barrier to entry not as steep.

44
00:03:32.784 --> 00:03:37.767
I would also actually say that
we conceptually understand NgRx

45
00:03:37.767 --> 00:03:40.405
without actually realizing it.

46
00:03:40.405 --> 00:03:45.608
And so if you came to me and said hey,
I need to learn, I need to fake it,

47
00:03:45.608 --> 00:03:49.493
I'm going to a party and
I really like this person and

48
00:03:49.493 --> 00:03:53.229
I'm meeting their dad and
I have to impress them.

49
00:03:53.229 --> 00:03:59.077
And they're gonna ask me about NgRx,
what do I do, how do I fake it?

50
00:03:59.077 --> 00:04:00.794
My answer would be this.

51
00:04:00.794 --> 00:04:04.501
Do you understand how
component architecture works?

52
00:04:04.501 --> 00:04:11.368
Do you understand how inputs and outputs
work between a parent and child component?

53
00:04:11.368 --> 00:04:13.855
When you have a parent component,

54
00:04:13.855 --> 00:04:19.357
how does information get from the parent
component to the child component?

55
00:04:19.357 --> 00:04:26.027
Well, using binding, that it's basically
streamed into the child component.

56
00:04:26.027 --> 00:04:28.344
And when something happens
in the child component,

57
00:04:28.344 --> 00:04:30.143
how does the parent event know about it?

58
00:04:30.143 --> 00:04:33.760
Well, through an event broadcast.

59
00:04:33.760 --> 00:04:37.172
So essentially, state or

60
00:04:37.172 --> 00:04:41.675
data flows down, events flow up.

61
00:04:41.675 --> 00:04:43.803
In, out.

62
00:04:43.803 --> 00:04:48.355
This is exactly how NgRx works.

63
00:04:48.355 --> 00:04:52.829
We have an observable stream
that is coming from the store,

64
00:04:52.829 --> 00:04:58.643
that's pushing state changes,
slices of state into the component layers,

65
00:04:58.643 --> 00:05:02.319
and when something happens
through the facade.

66
00:05:02.319 --> 00:05:07.935
The facade broadcast events that
gets picked up by the store or

67
00:05:07.935 --> 00:05:13.014
effects and processed and
then put back into the store.

68
00:05:13.014 --> 00:05:16.588
So I think if we start with
just state flows down,

69
00:05:16.588 --> 00:05:21.210
it's an observable stream that
you capture using selectors or

70
00:05:21.210 --> 00:05:24.628
queries, I don't know
why they call it that.

71
00:05:24.628 --> 00:05:28.025
And when you wanna communicate
something back up,

72
00:05:28.025 --> 00:05:30.401
you dispatch an action or an event.

73
00:05:30.401 --> 00:05:37.929
So with that said, let me go and,

74
00:05:42.529 --> 00:05:50.488
Let me just generate A state
layer feature, all right.

75
00:05:50.488 --> 00:05:56.440
I'm gonna just cut a new branch here and
we're gonna call this state management.

76
00:05:56.440 --> 00:06:05.168
When did you this one and, What was
the feature slice we've been working on?

77
00:06:05.168 --> 00:06:07.732
So we had workshops.

78
00:06:07.732 --> 00:06:08.415
Let's do that.

79
00:06:11.963 --> 00:06:17.001
All right, So

80
00:06:17.001 --> 00:06:23.961
putting the training wheels on,
I think there's a way

81
00:06:26.658 --> 00:06:31.896
To traverse text on a command line

82
00:06:31.896 --> 00:06:36.579
is faster than I'm doing it.

83
00:06:36.579 --> 00:06:39.393
But I'll say some other hotkeys.

84
00:06:39.393 --> 00:06:41.040
Everybody check this with me.

85
00:06:41.040 --> 00:06:45.408
So I'm generating a library,

86
00:06:45.408 --> 00:06:49.947
I wanna call it workshop state.

87
00:06:49.947 --> 00:06:52.276
And it's going into libs
workshop state standalone and

88
00:06:52.276 --> 00:06:53.920
as provided training wheels engaged.

89
00:06:56.577 --> 00:06:59.692
Did that go or, there we go.

90
00:07:03.088 --> 00:07:07.008
All right, so super simple,
just generating a library,

91
00:07:07.008 --> 00:07:08.691
it's just a container.

92
00:07:08.691 --> 00:07:10.062
All right, let's get it.

