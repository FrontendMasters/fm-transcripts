WEBVTT

1
00:00:00.420 --> 00:00:06.980
So we've generated the library, now
we're going to generate an NgRx feature.

2
00:00:14.020 --> 00:00:15.069
Put the training wheels on.

3
00:00:28.142 --> 00:00:35.449
Where did we, So it's school workshops.

4
00:00:44.074 --> 00:00:46.708
I know somebody would have caught that,
right?

5
00:00:57.873 --> 00:00:58.759
Workshop-state.

6
00:01:02.035 --> 00:01:06.814
This is where I really do not think

7
00:01:06.814 --> 00:01:11.934
live coding is interesting at all,

8
00:01:11.934 --> 00:01:17.226
and I apologize that everybody has to

9
00:01:17.226 --> 00:01:22.191
watch me do this, but there we go.

10
00:01:22.191 --> 00:01:26.686
All right, let's double check it,
feature-store,

11
00:01:26.686 --> 00:01:31.096
workshops-state, libs/workshop-state
[SOUND].

12
00:01:31.096 --> 00:01:32.587
Does this look okay?

13
00:01:32.587 --> 00:01:35.202
What does everybody think, good, enough?

14
00:01:35.202 --> 00:01:39.482
Well, I got the dry run flag on, so.

15
00:01:39.482 --> 00:01:42.818
All right, no.

16
00:01:46.265 --> 00:01:51.028
When you break down these lines,
it just jumps around really crazy.

17
00:01:52.179 --> 00:01:55.490
All right, [LAUGH].

18
00:01:57.550 --> 00:02:02.390
This is where I am going to flex

19
00:02:02.390 --> 00:02:07.044
the Template Wizard again.

20
00:02:14.743 --> 00:02:17.082
No, what if it's not even running?

21
00:02:17.082 --> 00:02:20.470
I don't think it is, pmrun.

22
00:02:26.263 --> 00:02:33.200
All right, so what I'm gonna do,
is I'm gonna just pull it in,

23
00:02:33.200 --> 00:02:37.567
copy it, I'll explain the pieces, and

24
00:02:37.567 --> 00:02:44.518
we're gonna go through an ascending
order of complexity, so.

25
00:02:47.998 --> 00:02:51.242
I'm gonna put this model in now so
we're dealing with a workshop.

26
00:02:51.242 --> 00:02:53.606
There we go.

27
00:02:53.606 --> 00:03:01.110
And now I'll pick any of the state.

28
00:03:01.110 --> 00:03:06.559
As someone could notice,
it's a little bit easier.

29
00:03:06.559 --> 00:03:08.162
All right, so,

30
00:03:14.823 --> 00:03:22.105
The absolute easiest part
of NgRx are the actions.

31
00:03:22.105 --> 00:03:25.023
These are so simple,
we don't even write test for them.

32
00:03:25.023 --> 00:03:31.616
They're just basically data structures
that you're passing around.

33
00:03:31.616 --> 00:03:38.910
So these are not particularly interesting.

34
00:03:43.075 --> 00:03:47.113
That's right, copy button, yeah.

35
00:03:47.113 --> 00:03:49.817
Let's go back here.

36
00:03:49.817 --> 00:03:51.369
That's not it.

37
00:03:51.369 --> 00:03:57.233
And so,
the idea with actions is it's basically

38
00:03:57.233 --> 00:04:02.382
an event key that gives
you an indication of

39
00:04:02.382 --> 00:04:08.103
where the event or
action originated from, and

40
00:04:08.103 --> 00:04:13.538
then typically there's
some kind of payload

41
00:04:13.538 --> 00:04:19.796
that carries information
about that action.

42
00:04:19.796 --> 00:04:23.020
Super, super, super, super simple.

43
00:04:31.930 --> 00:04:36.599
Then paste that in, boom.

44
00:04:36.599 --> 00:04:42.457
All right, now let's

45
00:04:42.457 --> 00:04:49.279
go to, The next one.

46
00:04:49.279 --> 00:04:53.155
I think it is the facade,

47
00:04:53.155 --> 00:04:58.324
because this is, in my opinion,

48
00:04:58.324 --> 00:05:05.400
mostly just,
I feel like I need to do that better.

49
00:05:05.400 --> 00:05:06.419
I'm just getting camera shy.

50
00:05:10.114 --> 00:05:12.996
All right, so,

51
00:05:16.399 --> 00:05:21.273
The facade, for the most part, just reads
like a regular surface, you're basically

52
00:05:21.273 --> 00:05:25.631
getting some observable streams, or
you are calling dispatch on the store.

53
00:05:25.631 --> 00:05:30.412
There's not a lot to the facade.

54
00:05:38.397 --> 00:05:41.881
Okay, hopefully I did that right.

55
00:05:41.881 --> 00:05:47.343
Now, when I generate a feature slice,

56
00:05:47.343 --> 00:05:50.156
and this is just me,

57
00:05:50.156 --> 00:05:55.286
I don't use the generated model here

58
00:05:55.286 --> 00:06:01.097
because I use the API interface for that.

59
00:06:01.097 --> 00:06:04.539
So I delete that.

60
00:06:04.539 --> 00:06:11.182
So now we are left with a few things.

61
00:06:11.182 --> 00:06:16.213
Let's do the selectors next,
because I think

62
00:06:16.213 --> 00:06:22.406
those are the third easiest,
mechanism to understand.

63
00:06:32.172 --> 00:06:38.943
And up to this point, we've actually
seen very little of NgRx other than,

64
00:06:38.943 --> 00:06:43.563
so actions I think
are really self-explanatory,

65
00:06:43.563 --> 00:06:48.727
the facade, I think is well,
other than the selectors.

66
00:06:48.727 --> 00:06:53.724
Now the selectors is where things

67
00:06:53.724 --> 00:06:59.078
start to get a little more intense,

68
00:06:59.078 --> 00:07:03.538
and where you start to see some

69
00:07:03.538 --> 00:07:08.193
kind of specific NgRx things.

70
00:07:08.193 --> 00:07:12.898
So I'm gonna just close this down for
just a second

71
00:07:12.898 --> 00:07:17.904
and, Let's talk about this.

72
00:07:17.904 --> 00:07:24.651
So you can think of selectors is queries.

73
00:07:24.651 --> 00:07:30.416
And what you are doing is, for instance,

74
00:07:30.416 --> 00:07:35.356
if I wanna get all of the workshops,

75
00:07:35.356 --> 00:07:40.630
that I'm grabbing the workshop slice

76
00:07:40.630 --> 00:07:45.242
of state, and then I'm saying,

77
00:07:45.242 --> 00:07:50.843
select all the workshops out of there and

78
00:07:50.843 --> 00:07:56.639
essentially transform it into an array.

79
00:07:56.639 --> 00:08:00.573
Because right now,
you'll see in just a minute,

80
00:08:00.573 --> 00:08:05.820
is we're taking the array and
actually turning it into entities,

81
00:08:05.820 --> 00:08:10.055
which is nothing more than
a key value kind of a store.

82
00:08:10.055 --> 00:08:15.301
Because when you convert it into key
values, then if you need to look

83
00:08:15.301 --> 00:08:20.543
something up, you just give it the key,
and you go right there.

84
00:08:20.543 --> 00:08:25.429
So that's why we normalize those things.

85
00:08:25.429 --> 00:08:29.441
All right, so selectors,
I think, hopefully,

86
00:08:29.441 --> 00:08:34.312
they make sense,
we're just grabbing a slice of state, and

87
00:08:34.312 --> 00:08:41.205
then we're running essentially a function,
and you can combine selectors as well.

88
00:08:41.205 --> 00:08:46.696
So what we're doing here is saying,
give me all of the workshop entities,

89
00:08:46.696 --> 00:08:50.792
which is just, I believe it's,
if I'm not mistaken,

90
00:08:50.792 --> 00:08:55.079
it's a dictionary, so again,
it's a key-value pair.

91
00:08:55.079 --> 00:09:00.501
And the workshop ID that's selected, all
it's doing is just saying, entities kind

92
00:09:00.501 --> 00:09:05.864
of array notation or get and it's just
pulling that out, so it's very, very fast.

93
00:09:05.864 --> 00:09:09.218
The last thing you wanna do is have
a mega collection that you're having to

94
00:09:09.218 --> 00:09:11.177
iterate over, like which one do I update?

95
00:09:11.177 --> 00:09:11.847
Where do I do it?

96
00:09:11.847 --> 00:09:13.341
How do I do it?

97
00:09:13.341 --> 00:09:19.464
And so, you're able to,
say, fulfill this selector,

98
00:09:19.464 --> 00:09:25.461
this selector, and
then based on these two selectors,

99
00:09:25.461 --> 00:09:29.432
then return me a new data structure.

100
00:09:29.432 --> 00:09:34.476
All right, so now we're getting
a little more complicated and

101
00:09:34.476 --> 00:09:36.390
hopefully not too bad.

102
00:09:38.774 --> 00:09:42.888
This really, in my opinion,

103
00:09:42.888 --> 00:09:48.155
leaves two kind of large pieces left,

104
00:09:48.155 --> 00:09:53.257
which is the reducer, which I don't

105
00:09:53.257 --> 00:09:58.538
think is actually that complicated.

106
00:09:58.538 --> 00:10:04.941
And the effects, they are the worst.

107
00:10:04.941 --> 00:10:09.999
Not really, but this is where I think
people get into a lot of trouble.

108
00:10:09.999 --> 00:10:12.642
All right, no, ma'am, there we go.

109
00:10:12.642 --> 00:10:15.484
I love this tablet wizard
more than anything.

110
00:10:15.484 --> 00:10:20.671
How the store works,
is you don't actually touch

111
00:10:20.671 --> 00:10:26.475
the store directly,
is that you pass it into a reducer,

112
00:10:26.475 --> 00:10:31.431
which works very much
like a reducer on arrays.

113
00:10:31.431 --> 00:10:36.975
And it takes some condition,
and the state performs

114
00:10:36.975 --> 00:10:42.149
some immutable action and
returns state again.

115
00:10:42.149 --> 00:10:45.007
This makes it very easy to test.

116
00:10:45.007 --> 00:10:50.875
So when you are building
out a feature slice,

117
00:10:50.875 --> 00:10:57.681
there's a few things that
you need to kind of set up.

118
00:10:57.681 --> 00:11:02.820
The first is the state for your feature.

