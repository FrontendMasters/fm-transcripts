[00:00:00]
>> I wanna do just a real quick detour Because I think that This is super useful. We should have the ability to consume, remote, endpoints in the easiest way possible. And the best way to do that, in my opinion is with JSON server. So I don't know if anybody's ever heard it or used it, but I wanna take just a few minutes real quick and show you how this works.

[00:00:42]
So JSON server is incredibly simple. I think this is gonna be approximately a 5 minute demo. But it is a game changer when you are trying to approximate or you are working faster than the backend team. So all JSON server is, it's a simple express node implementation that takes some basic JSON and exposes it as a REST endpoint.

[00:01:27]
So what I can do is we were doing workshops. So I'm just going to create a new file. Call this workshops.json. And This isn't like real JSON, so I always kind of mess this up, All right. There we go. All right, so all I wanted to do is pull this mark challenges array that we did out of the facade.

[00:02:02]
And push it into the service or push it into essentially an endpoint that we can then consume with an asynchronous service. So I'm just going to, Something about this event, like, let me just, There we go, little buddy. Yeah, all right. So now, what you can do? Just a JSON file, there's nothing up my sleeves at all, okay?

[00:02:48]
Not trying to fool you. In your package.json, I'll actually show you, there's two packages that I install when I'm setting this up. The first one is obviously a JSON web server, Or just json-server, okay? What I also install in parallel is concurrently. What that allows me to do is to, well, you can see it right here is that I'm able to essentially create concurrent commands and execute them.

[00:03:38]
Concurrently, and so this is where I will do, Just Paste this in, we'll do a workshops. No, that's horrible. I got more work to do. I hate it. I wanna do work. Or even take this one. Fine, I'll do it. So One thing that I think it's pretty obvious at this point after spending an entire day hanging out with me is that I really like to think about hard programming problems.

[00:04:52]
But I do not like to spend a lot of time kind of wallowing around in fatigue. And so even there's kind of in a weird way, I kind of get a little bit self-conscious. Oops, wow, I don't mean to do that, I just blew the place up. I don't even know what happened.

[00:05:21]
I get a little bit self-conscious about the fact that I'm copying and pasting and moving stuff around, but I would much rather, on principle, Hang out with everybody here and talk about problems and how to solve them versus writing the same bits of code that I've written a Brazilian times before and it's just not interesting to me.

[00:06:02]
All right, I think that's it. Now Let's go 3500. So one of the odd pieces is that eventually, like port management. Especially when you're going with in increments of 100. I could probably do better but, All right, npm run s, and I've already forgotten it. Man alive. Workshops-json.

[00:06:44]
So I did have serve, and I'm like, that's too much. Let's just, I think we understand what I'm trying to say, all right. Wow, that was fast. So here you go, JSON, and you can actually create, read, update, and delete in memory. One of the other things that I will show, since we're here, is that when I'm setting up nest, that nest has a global prefix.

[00:07:17]
And so everything ends up, did I do this right, ends up being host port API. And what I ultimately wanna do is I want this to be as close as possible because I want to be able to change the composition at runtime. So as a result, What I have done is, if we go into Server, there is a routes, the JSON, it's just a really simple kind of a regex.

[00:08:02]
And so this is why when you see me start it, Somewhere in here, yeah, I'm pointing to the routes here. The other thing that I'm doing which I'm not doing or haven't done yet but is that because it is essentially express. That it's really easy to set up a lightweight authentication mechanism to just basically generate simple JSON for off.

[00:08:39]
So you can absolutely simulate that in less than 70 lines of code. So you get that for free as well.

