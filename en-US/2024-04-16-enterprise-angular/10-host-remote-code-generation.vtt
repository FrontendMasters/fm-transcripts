WEBVTT

1
00:00:00.160 --> 00:00:05.930
Could you elaborate a bit on
the host remote generations Nevets?

2
00:00:05.930 --> 00:00:13.790
&gt;&gt; This is a guide within
the NX documentation.

3
00:00:13.790 --> 00:00:21.228
And I think they do a pretty good job
of explaining a lot of these concepts.

4
00:00:21.228 --> 00:00:26.159
But I would say any gaps that I leave,
by all means,

5
00:00:26.159 --> 00:00:30.749
I'd go check out this particular article,
and

6
00:00:30.749 --> 00:00:34.323
do this actually say who wrote this?

7
00:00:38.533 --> 00:00:39.622
Neither here nor there.

8
00:00:39.622 --> 00:00:43.342
So let's just take a quick tour of this.

9
00:00:46.863 --> 00:00:51.796
Conceptually it's a little bit much and
I will be the first to admit that it took

10
00:00:51.796 --> 00:00:55.831
me a couple days of kinda staring at it,
and thinking about it for

11
00:00:55.831 --> 00:01:00.455
it to become kinda natural, and
I'm still warming up to it.

12
00:01:00.455 --> 00:01:08.045
So, how this works is that,
let's start with the remote.

13
00:01:09.045 --> 00:01:16.305
So, we have a remote that is sessions,

14
00:01:16.305 --> 00:01:24.093
and within this,
We have a ModuleFederationConfig.

15
00:01:24.093 --> 00:01:25.006
So this is pretty important.

16
00:01:25.006 --> 00:01:32.454
The ModuleFederationConfig
essentially says,

17
00:01:32.454 --> 00:01:38.479
I want to attach a name just like a route,

18
00:01:38.479 --> 00:01:43.618
to, like this name exposes this,

19
00:01:43.618 --> 00:01:47.888
let me see if they actually,

20
00:01:50.642 --> 00:01:55.699
Exposes a record that says at this name,

21
00:01:55.699 --> 00:02:00.606
at this place, we are going to load this

22
00:02:00.606 --> 00:02:06.278
routing table, or this remote entry point.

23
00:02:07.398 --> 00:02:12.007
Then from there, if we go

24
00:02:12.007 --> 00:02:17.279
into the entry routes here,

25
00:02:20.700 --> 00:02:28.266
This is saying we have a route that's just
going to load the RemoteEntryComponent.

26
00:02:28.266 --> 00:02:33.560
So by convention,
remote applications have this

27
00:02:33.560 --> 00:02:39.104
remote kind of entry point
where you have your remote

28
00:02:39.104 --> 00:02:44.316
entry routes and
your RemoteEntryComponent.

29
00:02:44.316 --> 00:02:51.879
Now, this allows you to,
on the routes and on the component,

30
00:02:54.956 --> 00:03:01.047
Load any kind of dependencies that you
need for the rest of that component and

31
00:03:01.047 --> 00:03:05.426
everything underneath of it,
in a very distinct way,

32
00:03:05.426 --> 00:03:11.353
because you can actually have more
than one entry point into a component.

33
00:03:11.353 --> 00:03:13.937
So you could, in theory,

34
00:03:13.937 --> 00:03:20.563
load this ns-welcome component
directly into the app.

35
00:03:20.563 --> 00:03:26.935
And this happens is what if you
wanna load this into another app,

36
00:03:26.935 --> 00:03:32.363
but maybe you wanna load
a portion of it into the app that

37
00:03:32.363 --> 00:03:37.437
it lives is that the remote
entry point allows you to

38
00:03:37.437 --> 00:03:44.612
set context specifically to
the federated module mechanism.

39
00:03:44.612 --> 00:03:48.782
So this is how this works
on the remote side,

40
00:03:48.782 --> 00:03:53.856
is that we have this
ModuleFederationConfig that's

41
00:03:53.856 --> 00:03:59.882
just saying, hey,
this is what you need to look for.

42
00:03:59.882 --> 00:04:04.032
But for sessions and
we're exposing this via webpack, and

43
00:04:04.032 --> 00:04:07.004
it's pointing to these routes.

44
00:04:07.004 --> 00:04:12.768
Now, if we go to, just close this down,

45
00:04:12.768 --> 00:04:19.890
our host,
this is a little bit different in that,

46
00:04:19.890 --> 00:04:24.639
initially, what we had was in our

47
00:04:24.639 --> 00:04:29.727
FederatedConfig, we had a name and

48
00:04:29.727 --> 00:04:35.858
we were statically defining our remotes.

49
00:04:37.178 --> 00:04:42.704
But ultimately,
unless you're doing a very simple app,

50
00:04:42.704 --> 00:04:46.102
I think you want this to be dynamic.

51
00:04:46.102 --> 00:04:51.008
In the assets folder, which is around here

52
00:04:51.008 --> 00:04:55.370
somewhere we created a manifest, and

53
00:04:55.370 --> 00:05:00.129
you can have n number of records in this.

54
00:05:00.129 --> 00:05:05.539
So instead of pointing to a routing table

55
00:05:05.539 --> 00:05:11.107
that points to a module
you are pointing to

56
00:05:11.107 --> 00:05:18.278
an n point that you expose
in the main.ts in the host.

57
00:05:18.278 --> 00:05:24.138
So in the host, you are going and
loading the manifest.

58
00:05:25.838 --> 00:05:29.344
You're parsing it and then you're saying,

59
00:05:29.344 --> 00:05:34.038
take these records, and
create remote definitions.

60
00:05:34.038 --> 00:05:41.594
And so this is an asynchronous thing, that
happens before you get down to line 6,

61
00:05:41.594 --> 00:05:46.099
which is,
then you bootstrap the application.

62
00:05:46.099 --> 00:05:51.706
The last little piece to this is in your

63
00:05:51.706 --> 00:05:59.242
host application instead
of doing loadChildren,

64
00:05:59.242 --> 00:06:06.251
because this is now
a remotely defined n point,

65
00:06:06.251 --> 00:06:11.333
you need to wrap the insides of this

66
00:06:11.333 --> 00:06:16.889
function with loadRemoteModule.

67
00:06:16.889 --> 00:06:21.080
So, there is just
a handful of moving pieces,

68
00:06:21.080 --> 00:06:26.457
pretty small, a lot of it is
actually generated by the CLI.

69
00:06:26.457 --> 00:06:31.493
I think with this,
what's a little bit confusing is

70
00:06:31.493 --> 00:06:37.677
you are only changing five lines of code,
it seems like.

71
00:06:37.677 --> 00:06:39.450
You're just doing it in
five different files.

