WEBVTT

1
00:00:00.250 --> 00:00:06.790
This is where it gets fun for me.

2
00:00:06.790 --> 00:00:14.056
Because using a tool like Nx, and
I'll just pull this up real quick.

3
00:00:14.056 --> 00:00:17.986
I feel like probably, well,

4
00:00:17.986 --> 00:00:23.015
as I don't wanna assume anything so,

5
00:00:23.015 --> 00:00:29.788
there is a ton of tooling
around these extensions.

6
00:00:29.788 --> 00:00:37.563
And so I recommend taking some time,
clicking through here.

7
00:00:37.563 --> 00:00:40.019
There's something for everybody.

8
00:00:40.019 --> 00:00:45.636
Even this idea of, what if you had
one API and you wanted to have,

9
00:00:45.636 --> 00:00:49.503
let's say, a React app and an Angular app?

10
00:00:49.503 --> 00:00:53.525
It's very easy to put
that all into one place.

11
00:00:53.525 --> 00:00:59.055
And now you're able to share that same
API and keep that in close proximity.

12
00:00:59.055 --> 00:01:05.111
So the one thing that I do wanna
kinda just point out real quick and

13
00:01:05.111 --> 00:01:10.620
then we'll get into it,
is they have a ton of generators.

14
00:01:12.010 --> 00:01:19.393
And to me, because I'm super lazy,
I love generators.

15
00:01:19.393 --> 00:01:26.418
Because why let a human being do what a
robot can do perfectly every single time?

16
00:01:26.418 --> 00:01:30.280
And I'm trying to see if I can
just find this real quick.

17
00:01:30.280 --> 00:01:33.327
Well, actually,
let's just hop into the terminal.

18
00:01:33.327 --> 00:01:39.216
All right, so we're currently in our

19
00:01:39.216 --> 00:01:44.742
enterprise app, at the root of it.

20
00:01:44.742 --> 00:01:50.318
And because we now know
that we want to add another

21
00:01:50.318 --> 00:01:57.128
feature into our application,
we can do this very easily.

22
00:01:57.128 --> 00:02:00.477
And I'm not gonna do it just yet,
I'm gonna just run some commands.

23
00:02:00.477 --> 00:02:04.192
And this is usually what,

24
00:02:07.024 --> 00:02:12.011
When I'm digging into this,
typically what this workflow looks like.

25
00:02:12.011 --> 00:02:15.936
So, I'm thinking,

26
00:02:15.936 --> 00:02:21.395
I want to generate a library.

27
00:02:21.395 --> 00:02:25.694
And so I want to generate a library.

28
00:02:25.694 --> 00:02:29.880
So we have workshops is the feature slice.

29
00:02:29.880 --> 00:02:35.839
And so what we can do is, we can
come in here, and I'm just going to,

30
00:02:35.839 --> 00:02:41.611
I don't really want to type this,
so I'm gonna just paste it in.

31
00:02:41.611 --> 00:02:44.053
It's all into the site.

32
00:02:44.053 --> 00:02:50.176
And, So,

33
00:02:52.805 --> 00:02:54.637
I'm gonna modify this a little bit.

34
00:02:54.637 --> 00:02:58.011
I'm also gonna put a d flag on here.

35
00:02:58.011 --> 00:03:01.345
So I recommend doing this, is that,

36
00:03:01.345 --> 00:03:05.755
I will tably run a command sometimes five,
six,

37
00:03:05.755 --> 00:03:10.719
seven times, until I get it
just the way that I want it.

38
00:03:10.719 --> 00:03:14.072
I don't want it differently, so.

39
00:03:14.072 --> 00:03:18.198
So we have workshops, we want to do, well,

40
00:03:18.198 --> 00:03:22.890
clearly, we need somewhere
to hold our service.

41
00:03:22.890 --> 00:03:28.540
So I'm going to just start to modify this

42
00:03:28.540 --> 00:03:35.693
into the new feature slice
that we're targeting.

43
00:03:38.433 --> 00:03:41.580
So workshops-data, pretty simple.

44
00:03:41.580 --> 00:03:44.608
So we're generating a library.

45
00:03:44.608 --> 00:03:46.057
This is where you wanna put it.

46
00:03:46.057 --> 00:03:48.952
It's standalone,
we'll talk about it a little bit later,

47
00:03:48.952 --> 00:03:50.853
it has to do with the standalone API.

48
00:03:50.853 --> 00:03:56.503
You get something generated a little
differently, depending on what you choose.

49
00:03:57.893 --> 00:04:01.008
And I'm just going to hit Enter.

50
00:04:01.008 --> 00:04:06.040
So what this is gonna do now is saying,
or it's gonna say,

51
00:04:06.040 --> 00:04:13.934
hey, if you did not have the flag on here,
this is what we would have generated.

52
00:04:13.934 --> 00:04:17.188
So I'm gonna go ahead and do that.

53
00:04:21.805 --> 00:04:23.405
There we go.

54
00:04:23.405 --> 00:04:27.973
And I'm afraid to run this, but
let's just see what happens.

55
00:04:27.973 --> 00:04:33.061
So one of the things,
with Angular, you have the CLI,

56
00:04:33.061 --> 00:04:38.258
with Nest, you have the CLI,
but Nx takes all of that and

57
00:04:38.258 --> 00:04:41.924
just puts it on steroids, basically.

58
00:04:41.924 --> 00:04:47.131
So the one thing is because I
do not have an Nx installed

59
00:04:47.131 --> 00:04:51.428
globally, is I was getting bitten by that.

60
00:04:51.428 --> 00:04:57.340
And so now, There's not a lot here,

61
00:04:57.340 --> 00:05:02.175
but you can see that It's
starting to generate some

62
00:05:02.175 --> 00:05:08.146
information to create observability
into your application.

63
00:05:08.146 --> 00:05:12.270
As if we were to build this out,
and we will,

64
00:05:12.270 --> 00:05:17.519
suddenly this tooling becomes
a lot more interesting.

65
00:05:17.519 --> 00:05:23.156
But, I think this is pretty
cool that we get this for free.

66
00:05:23.156 --> 00:05:28.392
So let's revisit this in a little bit and

67
00:05:28.392 --> 00:05:31.479
let's keep building.

68
00:05:31.479 --> 00:05:34.121
All right-
&gt;&gt; I guess there's a question from online.

69
00:05:34.121 --> 00:05:35.022
&gt;&gt; Yes.

70
00:05:37.663 --> 00:05:42.734
&gt;&gt; Could you explain the advantages
of the mono repo style again?

71
00:05:42.734 --> 00:05:48.343
Aren't we actually coupling these
projects together in the mono repo?

72
00:05:48.343 --> 00:05:51.040
I'm worried about, in development,

73
00:05:51.040 --> 00:05:56.035
spending more time solving problems
with Nx than actually developing.

74
00:05:57.205 --> 00:06:00.599
&gt;&gt; So that's a very good question.

75
00:06:00.599 --> 00:06:05.414
And there's a balance in engineering

76
00:06:05.414 --> 00:06:09.627
between coupling and cohesion,

77
00:06:09.627 --> 00:06:15.345
is that you want things
to be grouped together

78
00:06:15.345 --> 00:06:20.170
that are conceptually in proximity.

79
00:06:20.170 --> 00:06:26.386
At the same time,
you want to keep things independent.

80
00:06:27.466 --> 00:06:31.611
So you can have proximity and

81
00:06:31.611 --> 00:06:37.666
cohesion without creating coupling..

82
00:06:37.666 --> 00:06:41.521
And so I think that is a fair question.

83
00:06:43.561 --> 00:06:46.901
And the,

84
00:06:49.835 --> 00:06:54.583
From a developer experience,
it makes it a lot

85
00:06:54.583 --> 00:06:59.697
easier when you are working
on a front-end app and

86
00:06:59.697 --> 00:07:04.444
you're working on the API
at the same time, so

87
00:07:04.444 --> 00:07:07.400
a full-stack experience.

88
00:07:07.400 --> 00:07:13.711
I've had it where I've had to jump from
three different instances of APIs.

89
00:07:13.711 --> 00:07:18.542
I'm here, and then I'm here,
and then I'm here, what?

90
00:07:18.542 --> 00:07:23.324
One of the advantages that mono
repos do is that they lower kind of

91
00:07:23.324 --> 00:07:27.944
the cognitive impedance to
understand where everything is.

92
00:07:27.944 --> 00:07:32.939
This is why when I run my end-to-end test,
I like that end-to-end app to

93
00:07:32.939 --> 00:07:37.721
be right next to the app that it's tested,
because it's right there.

94
00:07:37.721 --> 00:07:41.236
Versus, and I've seen this work,

95
00:07:41.236 --> 00:07:46.041
imagine having 20
different API endpoints and

96
00:07:46.041 --> 00:07:50.388
they're in 20 different repositories.

97
00:07:51.408 --> 00:07:53.188
Now, imagine having to work on those.

98
00:07:54.548 --> 00:07:58.748
So this is where it's like, you clone
the repository, you clone the repository,

99
00:07:58.748 --> 00:08:00.133
you clone the repository.

100
00:08:00.133 --> 00:08:05.317
And I'm not saying that's bad,
but I'm saying there is

101
00:08:05.317 --> 00:08:10.393
overhead from the developer
experience to having these

102
00:08:10.393 --> 00:08:15.694
things broken up into a bunch
of different repositories.

103
00:08:15.694 --> 00:08:20.559
Where having it broken up,
where that complexity transfers,

104
00:08:20.559 --> 00:08:27.091
it's harder to develop, it's a lot easier
to deploy when things are independent.

105
00:08:27.091 --> 00:08:32.759
So just so I'm not sitting here with
mono repo rose-colored glasses,

106
00:08:32.759 --> 00:08:37.765
it is difficult or more difficult,
and you have to factor in how

107
00:08:37.765 --> 00:08:43.066
you're going to deploy the individual
apps within the mono repo.

108
00:08:43.066 --> 00:08:48.967
As well as, here's another good trade-off,
that when you have,

109
00:08:48.967 --> 00:08:55.176
let's say, five Angular apps in a mono
repo that are sharing the same,

110
00:08:55.176 --> 00:08:58.296
essentially, package manifest.

111
00:08:58.296 --> 00:09:02.899
It's very easy to make sure that everybody
is using the same version of Angular, or

112
00:09:02.899 --> 00:09:04.098
Nest, or whatever.

113
00:09:04.098 --> 00:09:08.228
So version control is a lot easier.

114
00:09:08.228 --> 00:09:13.793
But on the flip side,
when you go to deploy the application and

115
00:09:13.793 --> 00:09:17.754
you have seven different apps or whatever,

116
00:09:17.754 --> 00:09:24.605
all of those packages that are defined
in that single top-level manifest is

117
00:09:24.605 --> 00:09:30.940
going to get dumped into each
individual app, and that's a problem.

118
00:09:30.940 --> 00:09:36.234
And so there's ways to get around that,
and it requires some additional markups.

119
00:09:36.234 --> 00:09:41.659
So, I think the lesson

120
00:09:41.659 --> 00:09:46.047
here is that nothing is for free.

121
00:09:46.047 --> 00:09:50.227
What I would say and
challenge everybody is,

122
00:09:50.227 --> 00:09:55.617
the whole point of enterprise
development is to have a deep

123
00:09:55.617 --> 00:10:01.673
understanding of the enterprise and
the domain that you're in.

124
00:10:01.673 --> 00:10:06.404
And then choosing the appropriate
technology that's appropriate for

125
00:10:06.404 --> 00:10:11.050
the time that you're at or
the season you're at, the timeframe, and

126
00:10:11.050 --> 00:10:15.726
ultimately, is going to serve your
organization's best interest.

127
00:10:15.726 --> 00:10:20.383
So being a consultant for
instance, if I was dealing with

128
00:10:20.383 --> 00:10:25.622
a completely new team, and
they had never done Angular before,

129
00:10:25.622 --> 00:10:30.375
well, the way that I approach
that team and I train them and

130
00:10:30.375 --> 00:10:36.216
the solutions that I'm going to present
is going to be a lot different.

131
00:10:36.216 --> 00:10:40.573
Than if I was talking to a seasoned,
SEAL's team six style,

132
00:10:40.573 --> 00:10:45.708
they can do anything, is we're
going straight to level 400 stuff.

133
00:10:45.708 --> 00:10:49.897
But we do not serve our team members and
our clients well,

134
00:10:49.897 --> 00:10:55.311
we don't calibrate our solutions and
our approaches to where they are and

135
00:10:55.311 --> 00:11:01.440
what serves them the best, cognitively and
emotionally, and the organization.

136
00:11:01.440 --> 00:11:04.276
So hopefully that was helpful.

137
00:11:04.276 --> 00:11:05.049
Yes.

138
00:11:05.049 --> 00:11:08.228
&gt;&gt; What's the difference
between Turborepo and Nx?

139
00:11:08.228 --> 00:11:13.757
&gt;&gt; They are, I think, just different
flavors of the same concept.

140
00:11:13.757 --> 00:11:17.668
&gt;&gt; It's really nice when you're
developing libraries and

141
00:11:17.668 --> 00:11:22.230
packages that rely on each other and
don't have to work in a bunch of

142
00:11:22.230 --> 00:11:26.806
different repos, especially with
things like pnpm workspaces.

143
00:11:26.806 --> 00:11:33.011
&gt;&gt; Yep, so that is one of
the benefits of being in a mono repo,

144
00:11:33.011 --> 00:11:40.500
is proximal convenience, is that
everything is kind of in one place.

145
00:11:40.500 --> 00:11:42.611
So when we cloned the repo,
what did we get?

146
00:11:42.611 --> 00:11:46.010
Well, we got 12 apps for
free in one place.

147
00:11:46.010 --> 00:11:48.120
And that's pretty awesome.

148
00:11:48.120 --> 00:11:53.625
So I generated the lib for the,

149
00:11:56.971 --> 00:11:59.754
Let's go all the way down the bottom,
for the data.

150
00:12:01.884 --> 00:12:08.732
Now, let's do one other thing,
Real quick, is,

151
00:12:10.808 --> 00:12:14.879
Let's go ahead and generate a service.

152
00:12:14.879 --> 00:12:19.793
So if I wasn't offering commentary I
would actually generate this all into

153
00:12:19.793 --> 00:12:21.984
one script and run it all at once.

154
00:12:21.984 --> 00:12:25.870
But what I'm hoping to highlight is
that all of the heavy lifting where,

155
00:12:25.870 --> 00:12:30.454
I don't know if you've ever had to go on
like, okay, I'm gonna create a component,

156
00:12:30.454 --> 00:12:34.149
I'm gonna create a template,
I'm gonna create my style sheet, and

157
00:12:34.149 --> 00:12:36.854
you're doing that by hand over and
over and over.

158
00:12:36.854 --> 00:12:39.030
Those days are gone, is that,

159
00:12:39.030 --> 00:12:44.973
you can generate an entire application
shell off of the domain in minutes.

160
00:12:44.973 --> 00:12:49.729
So let's do one more.

161
00:12:49.729 --> 00:12:55.540
I'm gonna just do the service here.

162
00:12:55.540 --> 00:12:57.525
And hopefully that copied.

163
00:12:57.525 --> 00:13:02.869
All right,
Let me just run this with the d flag.

164
00:13:06.438 --> 00:13:11.637
And I would imagine
without the commentary, We

165
00:13:11.637 --> 00:13:17.624
would have been done with both these
commands in a matter of minutes.

166
00:13:17.624 --> 00:13:19.931
I totally did that backwards, didn't I?

167
00:13:19.931 --> 00:13:23.703
[LAUGH] challenges-workshops,

168
00:13:23.703 --> 00:13:28.017
that would be like workshops-data.

169
00:13:28.017 --> 00:13:29.624
All right, let's try this.

170
00:13:29.624 --> 00:13:30.779
There we go.

171
00:13:30.779 --> 00:13:35.950
All right, Now,

172
00:13:35.950 --> 00:13:41.858
what we can do is just to
kinda flex a little bit.

173
00:13:44.777 --> 00:13:49.639
I'm gonna go back into my repository and

174
00:13:49.639 --> 00:13:54.502
I'm gonna just pick up any old service.

175
00:13:54.502 --> 00:13:57.914
I'm gonna go with notes,
not the same spec.

176
00:13:57.914 --> 00:13:59.767
I'm gonna just pick this up.

177
00:13:59.767 --> 00:14:02.666
And I'm gonna go back into my tool.

178
00:14:04.872 --> 00:14:07.638
And I'm gonna paste this in.

179
00:14:07.638 --> 00:14:11.796
And so this is why I really,
really, really, really like this.

180
00:14:11.796 --> 00:14:16.900
And so the keyword here or
the base word is note.

181
00:14:16.900 --> 00:14:18.995
So we'll just go note, singular.

182
00:14:18.995 --> 00:14:20.648
I'm gonna hit Enter.

183
00:14:20.648 --> 00:14:25.636
Then what I'm gonna do,
because I'm not dealing with any of these

184
00:14:25.636 --> 00:14:29.479
domain models,
I'm just going to go, workshop.

185
00:14:29.479 --> 00:14:33.919
So this is a fully functioning
service that I can now,

186
00:14:36.343 --> 00:14:38.569
My friend was actually helping
me with this sample app.

187
00:14:38.569 --> 00:14:42.153
And he's like, I put a copy button in
there, I was so sick of having to drag.

188
00:14:42.153 --> 00:14:43.004
I hope you don't mind.

189
00:14:43.004 --> 00:14:45.875
I'm like, push that into Master,
my friend.

190
00:14:45.875 --> 00:14:52.849
So go here into workshops-data,

191
00:14:58.336 --> 00:15:00.717
Into the service.

192
00:15:05.528 --> 00:15:06.753
And there we go.

