WEBVTT

1
00:00:00.006 --> 00:00:05.009
Let's do another challenge, and

2
00:00:05.009 --> 00:00:10.530
I would like for everybody to generate

3
00:00:10.530 --> 00:00:15.531
not only the data, but the state,

4
00:00:15.531 --> 00:00:20.660
so do it exactly the same way.

5
00:00:20.660 --> 00:00:27.238
Generate the service and
then when we get back,

6
00:00:27.238 --> 00:00:32.570
we are going to do something fun.

7
00:00:32.570 --> 00:00:37.113
So just a few simple commands,

8
00:00:37.113 --> 00:00:42.369
they're all in on the site, or.

9
00:00:43.690 --> 00:00:48.775
Bonus time, it's Christmas.

10
00:00:48.775 --> 00:00:51.585
I can't believe I forgot to tell,
I was so excited about this.

11
00:00:51.585 --> 00:00:55.468
If you go into the root of this project,

12
00:00:55.468 --> 00:01:00.295
there is some snippets
that I've put in here that

13
00:01:00.295 --> 00:01:04.769
this alone was worth
the price of admission,

14
00:01:04.769 --> 00:01:09.396
I thought the Template Wizard was cool.

15
00:01:09.396 --> 00:01:14.534
But if you are looking for
somewhat opinionated snippets for

16
00:01:14.534 --> 00:01:18.278
you to pull out into use, you're welcome.

17
00:01:18.278 --> 00:01:23.093
All right, so
we're gonna generate the data and

18
00:01:23.093 --> 00:01:29.331
the state lives and
generate the data service for your entity.

19
00:01:29.331 --> 00:01:30.134
Any questions?

20
00:01:30.134 --> 00:01:33.941
&gt;&gt; On that we made at
the start on interfaces?

21
00:01:33.941 --> 00:01:34.692
&gt;&gt; Was that?

22
00:01:34.692 --> 00:01:39.565
One that we made and-
&gt;&gt; So ideally, whatever we defined in

23
00:01:39.565 --> 00:01:43.571
the interface, we're going to build
some semblance of a future slice and

24
00:01:43.571 --> 00:01:46.493
some functionality around
that by the end of the day.

25
00:01:47.663 --> 00:01:53.837
So a lot of the CLI stuff is just,
it comes down to just memorizing,

26
00:01:53.837 --> 00:01:57.936
or at least becoming
familiar with the API.

27
00:01:57.936 --> 00:02:05.190
But I could run this command if you
gave me a list of twenty entities,

28
00:02:05.190 --> 00:02:10.168
in fact,
I'll just show it to you real quick.

29
00:02:10.168 --> 00:02:15.149
The reason why I'm not doing
it today is because there's

30
00:02:15.149 --> 00:02:18.583
this a sync error that kind of blows up.

31
00:02:18.583 --> 00:02:23.302
The idea is all these commands,
you can stack these

32
00:02:23.302 --> 00:02:28.145
all together and
just drop them into a shell script.

33
00:02:28.145 --> 00:02:32.939
And just feature domain modeling or
domain models, and

34
00:02:32.939 --> 00:02:38.141
generate your entire application,
and go home for lunch and

35
00:02:38.141 --> 00:02:45.800
then go play golf because you've just done
the work of six developers, circa 1997.

36
00:02:45.800 --> 00:02:47.072
Who am I kidding?

37
00:02:47.072 --> 00:02:54.184
2014, so, for all my government
employee friends over here,

38
00:02:54.184 --> 00:02:59.587
I just gave you the key
to the golf kingdom.

39
00:02:59.587 --> 00:03:06.356
Yeah, just value,
just that's what I'm here for.

40
00:03:06.356 --> 00:03:09.737
All right, lemme just jump into
these commands real quick.

41
00:03:09.737 --> 00:03:16.337
So, NPX, NX, because I don't
have NX installed globally.

42
00:03:17.997 --> 00:03:21.645
Generating a library,
I'm calling it workshops data, and

43
00:03:21.645 --> 00:03:25.163
I'm putting it into the leaves
workshop data directory.

44
00:03:27.083 --> 00:03:31.096
I'm doing standalone false
because it generates,

45
00:03:31.096 --> 00:03:36.019
when they moved and I'll talk
about this a little bit later, but

46
00:03:36.019 --> 00:03:39.527
angular is moving to a stand alone API.

47
00:03:39.527 --> 00:03:42.943
Which is moving away from modules and

48
00:03:42.943 --> 00:03:47.579
it's now becoming component and
route centric.

49
00:03:47.579 --> 00:03:52.737
But in the case of what,
if you're generating a service

50
00:03:52.737 --> 00:03:58.907
you can inject right into route and
you don't need a module at all.

51
00:03:58.907 --> 00:04:02.077
You don't need anything, and so,
if I'm generating a service,

52
00:04:02.077 --> 00:04:05.376
I typically do it standalone false and
I just throw everything away.

53
00:04:05.376 --> 00:04:08.639
So, project name and root format.

54
00:04:08.639 --> 00:04:15.578
So as provided, a lot of this,
so just kind of a pro tip,

55
00:04:15.578 --> 00:04:21.667
I will do other things for
periods of time.

56
00:04:21.667 --> 00:04:24.962
And so, I'll sit down, and it's like,

57
00:04:24.962 --> 00:04:30.384
I haven't actually touched NX in a while,
maybe eight weeks or something.

58
00:04:30.384 --> 00:04:35.547
And because it is dynamic,
the API has changed.

59
00:04:35.547 --> 00:04:40.683
And so, I will spend a lot of
time just kinda poking around and

60
00:04:40.683 --> 00:04:45.903
just finding and
working out the secret handshake.

61
00:04:45.903 --> 00:04:51.029
Now, in Visual Studio Code and
now in IntelliJ products,

62
00:04:51.029 --> 00:04:58.366
you can actually install NX Console, which
is kind of the equivalent of ClickOps.

63
00:04:58.366 --> 00:05:04.682
I prefer working command line, but just to
see what's happening, that's a great tool.

64
00:05:04.682 --> 00:05:09.157
So, pretty simple here,
we're just gonna pretend to,

65
00:05:09.157 --> 00:05:14.442
this is probably gonna blow up
because I already have it, yep.

66
00:05:14.442 --> 00:05:16.912
So, I think we get the point though.

67
00:05:16.912 --> 00:05:20.252
It's commands, turtles, all the way down.

