[00:00:00]
>> So I don't know about you, but I thought that was a pretty exciting module. I just, I got goosebumps, it's electric in here. The next section I want to talk about is state management. And I think that going from micro front ends to discussion on reactive architecture just is a natural segue into state management.

[00:00:29]
And we've seen the facade pattern, but we're going to flush that back out and talk about the individual pieces and why they're important. And I think as well just kind of stopping and looking at NgRx as a whole. And I think there's some narratives that I've heard that I think create maybe a misleading context.

[00:01:00]
Or I think that individuals, I think they've told themselves that it's so hard that too much, and then they move on to other options like a service with the subject. Before I go any further though, what I do wanna say is that, I sometimes I like to tell jokes.

[00:01:28]
And occasionally, I will say things that are humorous to me, but it sounds maybe sharper than I intended. What I do wanna be clear is that though I think that NgRx is a great option. I think the barrier to entry to fully understanding and embracing NgRx and Redux is a paradigm the same thing with observables.

[00:01:53]
So if I'm being totally transparent, that it took me around 3 weeks to fully wrap my mind around Redux and NgRx. And this is me practicing building stuff every day having access to the Angular team. And I had to go through a monumental tectonic shift in the way that I thought about applications and it was it eventually completely became inverted.

[00:02:28]
And it's the best thing I think from a conceptual standpoint that's happened to me. But I say this to say that if NgRx, Redux, and observables are confusing or overwhelming. I totally get it. I was there and I don't think anybody should ever diminish that. It does take work to shift the way that we fundamentally process the world and the paradigms in which we use to express the world around us in code.

[00:03:06]
So I just wanted to lead with that, is that, I know this can be challenging and confusing, but what I can also say is that it's completely worth it. The one thing I will say is that There are ways to think about it that I think make the barrier to entry not as steep.

[00:03:32]
I would also actually say that we conceptually understand NgRx without actually realizing it. And so if you came to me and said hey, I need to learn, I need to fake it, I'm going to a party and I really like this person and I'm meeting their dad and I have to impress them.

[00:03:53]
And they're gonna ask me about NgRx, what do I do, how do I fake it? My answer would be this. Do you understand how component architecture works? Do you understand how inputs and outputs work between a parent and child component? When you have a parent component, how does information get from the parent component to the child component?

[00:04:19]
Well, using binding, that it's basically streamed into the child component. And when something happens in the child component, how does the parent event know about it? Well, through an event broadcast. So essentially, state or data flows down, events flow up. In, out. This is exactly how NgRx works.

[00:04:48]
We have an observable stream that is coming from the store, that's pushing state changes, slices of state into the component layers, and when something happens through the facade. The facade broadcast events that gets picked up by the store or effects and processed and then put back into the store.

[00:05:13]
So I think if we start with just state flows down, it's an observable stream that you capture using selectors or queries, I don't know why they call it that. And when you wanna communicate something back up, you dispatch an action or an event. So with that said, let me go and, Let me just generate A state layer feature, all right.

[00:05:50]
I'm gonna just cut a new branch here and we're gonna call this state management. When did you this one and, What was the feature slice we've been working on? So we had workshops. Let's do that. All right, So putting the training wheels on, I think there's a way To traverse text on a command line is faster than I'm doing it.

[00:06:36]
But I'll say some other hotkeys. Everybody check this with me. So I'm generating a library, I wanna call it workshop state. And it's going into libs workshop state standalone and as provided training wheels engaged. Did that go or, there we go. All right, so super simple, just generating a library, it's just a container.

[00:07:08]
All right, let's get it.

