[00:00:00]
>> So we've generated the library, now we're going to generate an NgRx feature. Put the training wheels on. Where did we, So it's school workshops. I know somebody would have caught that, right? Workshop-state. This is where I really do not think live coding is interesting at all, and I apologize that everybody has to watch me do this, but there we go.

[00:01:22]
All right, let's double check it, feature-store, workshops-state, libs/workshop-state [SOUND]. Does this look okay? What does everybody think, good, enough? Well, I got the dry run flag on, so. All right, no. When you break down these lines, it just jumps around really crazy. All right, [LAUGH]. This is where I am going to flex the Template Wizard again.

[00:02:14]
No, what if it's not even running? I don't think it is, pmrun. All right, so what I'm gonna do, is I'm gonna just pull it in, copy it, I'll explain the pieces, and we're gonna go through an ascending order of complexity, so. I'm gonna put this model in now so we're dealing with a workshop.

[00:02:51]
There we go. And now I'll pick any of the state. As someone could notice, it's a little bit easier. All right, so, The absolute easiest part of NgRx are the actions. These are so simple, we don't even write test for them. They're just basically data structures that you're passing around.

[00:03:31]
So these are not particularly interesting. That's right, copy button, yeah. Let's go back here. That's not it. And so, the idea with actions is it's basically an event key that gives you an indication of where the event or action originated from, and then typically there's some kind of payload that carries information about that action.

[00:04:19]
Super, super, super, super simple. Then paste that in, boom. All right, now let's go to, The next one. I think it is the facade, because this is, in my opinion, mostly just, I feel like I need to do that better. I'm just getting camera shy. All right, so, The facade, for the most part, just reads like a regular surface, you're basically getting some observable streams, or you are calling dispatch on the store.

[00:05:25]
There's not a lot to the facade. Okay, hopefully I did that right. Now, when I generate a feature slice, and this is just me, I don't use the generated model here because I use the API interface for that. So I delete that. So now we are left with a few things.

[00:06:11]
Let's do the selectors next, because I think those are the third easiest, mechanism to understand. And up to this point, we've actually seen very little of NgRx other than, so actions I think are really self-explanatory, the facade, I think is well, other than the selectors. Now the selectors is where things start to get a little more intense, and where you start to see some kind of specific NgRx things.

[00:07:08]
So I'm gonna just close this down for just a second and, Let's talk about this. So you can think of selectors is queries. And what you are doing is, for instance, if I wanna get all of the workshops, that I'm grabbing the workshop slice of state, and then I'm saying, select all the workshops out of there and essentially transform it into an array.

[00:07:56]
Because right now, you'll see in just a minute, is we're taking the array and actually turning it into entities, which is nothing more than a key value kind of a store. Because when you convert it into key values, then if you need to look something up, you just give it the key, and you go right there.

[00:08:20]
So that's why we normalize those things. All right, so selectors, I think, hopefully, they make sense, we're just grabbing a slice of state, and then we're running essentially a function, and you can combine selectors as well. So what we're doing here is saying, give me all of the workshop entities, which is just, I believe it's, if I'm not mistaken, it's a dictionary, so again, it's a key-value pair.

[00:08:55]
And the workshop ID that's selected, all it's doing is just saying, entities kind of array notation or get and it's just pulling that out, so it's very, very fast. The last thing you wanna do is have a mega collection that you're having to iterate over, like which one do I update?

[00:09:11]
Where do I do it? How do I do it? And so, you're able to, say, fulfill this selector, this selector, and then based on these two selectors, then return me a new data structure. All right, so now we're getting a little more complicated and hopefully not too bad.

[00:09:38]
This really, in my opinion, leaves two kind of large pieces left, which is the reducer, which I don't think is actually that complicated. And the effects, they are the worst. Not really, but this is where I think people get into a lot of trouble. All right, no, ma'am, there we go.

[00:10:12]
I love this tablet wizard more than anything. How the store works, is you don't actually touch the store directly, is that you pass it into a reducer, which works very much like a reducer on arrays. And it takes some condition, and the state performs some immutable action and returns state again.

[00:10:42]
This makes it very easy to test. So when you are building out a feature slice, there's a few things that you need to kind of set up. The first is the state for your feature.

