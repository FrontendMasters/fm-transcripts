WEBVTT

1
00:00:00.250 --> 00:00:01.390
&gt;&gt; Sarah Drasner: Color variables.

2
00:00:01.390 --> 00:00:06.620
So a lot of people might not know
why you would use a color variable.

3
00:00:06.620 --> 00:00:09.300
What's really nice about using
color variables is you keep

4
00:00:09.300 --> 00:00:12.070
things consistent across your application.

5
00:00:12.070 --> 00:00:17.230
For instance, I once worked at an unnamed
company who where we had a major

6
00:00:17.230 --> 00:00:24.250
release for this giant sprawling design
over 4,000 pages were updated and

7
00:00:24.250 --> 00:00:30.150
the night before the release they
decided to change the brand color and

8
00:00:30.150 --> 00:00:35.770
because we have build the system
well I change it in one place.

9
00:00:35.770 --> 00:00:40.540
And then proper get it to the entire
system, and I went home and drank wine.

10
00:00:41.600 --> 00:00:43.010
That was a really good day.

11
00:00:43.010 --> 00:00:47.390
That could have been a really bad day,
that could have been a catastrophic,

12
00:00:47.390 --> 00:00:48.281
catastrophic day.

13
00:00:48.281 --> 00:00:52.409
But if you use something this, and I'm not
just talking about like one brand color,

14
00:00:52.409 --> 00:00:53.370
but if you.

15
00:00:53.370 --> 00:00:58.280
Define all of your color variables in one
place and then use it throughout a system.

16
00:00:58.280 --> 00:01:00.600
It can really save you a lot of time and
upkeep.

17
00:01:02.030 --> 00:01:04.240
So you don't have to do it that way but

18
00:01:04.240 --> 00:01:09.080
highly recommended especially if you're
working across a really large application.

19
00:01:09.080 --> 00:01:15.100
There's also native CSS variables which
are now I think pretty well supported,

20
00:01:15.100 --> 00:01:17.280
maybe not an IE, I can't remember.

21
00:01:17.280 --> 00:01:20.510
But I think it's in Edge too now.

22
00:01:20.510 --> 00:01:24.670
The nice thing about, people are like why
would I use this CSS variables if I could

23
00:01:24.670 --> 00:01:26.970
just use Sass and things like that.

24
00:01:26.970 --> 00:01:30.830
But the nice things about these
variables is, they're living.

25
00:01:30.830 --> 00:01:31.700
They are alive.

26
00:01:31.700 --> 00:01:34.340
You can actually work with
them in JavaScript, and

27
00:01:34.340 --> 00:01:38.800
JavaScript will understand what it is
even if you define it somewhere else.

28
00:01:38.800 --> 00:01:42.140
That's pretty nice,
when you're creating it in SAS or SCSS,

29
00:01:42.140 --> 00:01:46.760
it's really compiling down and JavaScript
doesn't really have a concept of it.

30
00:01:46.760 --> 00:01:50.770
So that's really a cool
thing between the two.

31
00:01:50.770 --> 00:01:53.740
The nice thing about
things like SAS though

32
00:01:53.740 --> 00:01:56.220
is that you can do color
mixing directly in SAS.

33
00:01:56.220 --> 00:02:00.630
You could say take this color and
lighten it by 10% or whatever and

34
00:02:00.630 --> 00:02:05.580
it will be able to do that which can be
really handy if you want to keep things

35
00:02:05.580 --> 00:02:07.090
really consistent looking.

36
00:02:07.090 --> 00:02:11.330
Let's say you want to make grays and
a bunch of different stops.

37
00:02:11.330 --> 00:02:15.630
You can do that programmatically and
that's probably even better than you

38
00:02:15.630 --> 00:02:18.630
messing around with some eye
dropper tool or something.

39
00:02:20.050 --> 00:02:24.272
So here are some of those color variables
you can do, you can mix things,

40
00:02:24.272 --> 00:02:28.352
you can adjust the hue,
you can lighten things, darken, saturate.

41
00:02:28.352 --> 00:02:32.154
You definitely don't have to work with
color this way, but this is an option for

42
00:02:32.154 --> 00:02:34.669
you if you wanna work with
color programmatically.

