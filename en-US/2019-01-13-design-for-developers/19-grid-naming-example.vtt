WEBVTT

1
00:00:00.100 --> 00:00:02.930
&gt;&gt; Sarah Drasner: Here's where we
get into some really cool stuff.

2
00:00:02.930 --> 00:00:05.340
You can name areas.

3
00:00:05.340 --> 00:00:10.610
So for each one of these things,
I'm gonna say okay, item a is the header,

4
00:00:10.610 --> 00:00:16.010
item b is the main, item c is the sidebar,
item d is the footer.

5
00:00:16.010 --> 00:00:20.920
So now if I uncomment this stuff,
I have that

6
00:00:20.920 --> 00:00:26.040
good column gap, the grid row gap and
these template areas.

7
00:00:26.040 --> 00:00:30.850
We've got a header, some content,
a side bar and footer.

8
00:00:30.850 --> 00:00:33.970
Let's go back and
look at the code a little bit more.

9
00:00:33.970 --> 00:00:36.960
Actually, I'm gonna change
the view to the side.

10
00:00:36.960 --> 00:00:39.780
So you can see a little bit
more clearly in this view.

11
00:00:42.680 --> 00:00:45.940
What we did was we said that we wanted
the header to go all the way across.

12
00:00:45.940 --> 00:00:51.810
So we're basically saying that we want,
instead of saying repeat five

13
00:00:51.810 --> 00:00:58.190
pieces of one f r, we're using
the name of this to create that unit.

14
00:00:58.190 --> 00:01:00.149
So we're going five across.

15
00:01:01.150 --> 00:01:05.620
Then we're saying main, main,
main, take a break [LAUGH] and

16
00:01:05.620 --> 00:01:08.240
don't put something in here, sidebar.

17
00:01:08.240 --> 00:01:11.283
And then we go, footer,
footer, footer, footer, footer.

18
00:01:11.283 --> 00:01:16.441
And the grid template rows
are going to say, I want the header

19
00:01:16.441 --> 00:01:22.324
to be 40 pixels to fill up the rest
with auto and then be 80 pixels.

20
00:01:22.324 --> 00:01:26.158
So I could actually make this header
80 pixels if I wanted to, and

21
00:01:26.158 --> 00:01:27.603
then it would drop down.

22
00:01:27.603 --> 00:01:30.690
That's a whole layout, right?

23
00:01:30.690 --> 00:01:35.000
You could start using that content and

24
00:01:35.000 --> 00:01:37.920
this is really that whole header,
even though I said header, header,

25
00:01:37.920 --> 00:01:41.000
header, header I didn't have to put for
dibs in there.

26
00:01:41.000 --> 00:01:44.800
Before, remember we had to span
all the way across like that.

27
00:01:44.800 --> 00:01:48.870
We can really just start making
our nav inside here, and

28
00:01:48.870 --> 00:01:52.040
you could even use flexbox inside of grid,
right?

29
00:01:52.040 --> 00:01:53.670
So let's say I wanted to make a nav and

30
00:01:53.670 --> 00:01:57.050
I wanted to line up all of the items
really quick and you're really flex.

31
00:01:57.050 --> 00:02:00.220
You're used to flex-box and
you know how to work with it really well.

32
00:02:00.220 --> 00:02:02.400
You could put a nav inside there and

33
00:02:02.400 --> 00:02:05.940
use flex-box for
the items in the nav, totally fine.

34
00:02:05.940 --> 00:02:10.650
And it's just all organized
based on those areas.

35
00:02:10.650 --> 00:02:13.080
I don't have to call them
header main side bar.

36
00:02:13.080 --> 00:02:15.830
That's a little more eligible for
whoever comes along and

37
00:02:15.830 --> 00:02:17.510
maintains my code later, right?

38
00:02:17.510 --> 00:02:21.410
But I could also call it Donkey pants or
something like that.

39
00:02:21.410 --> 00:02:22.170
And that would also work.

40
00:02:23.190 --> 00:02:24.890
So definitely name them donkey pants and

41
00:02:24.890 --> 00:02:29.644
just confuse all of
your coworkers [LAUGH].

42
00:02:29.644 --> 00:02:32.590
All right this is our friend,
we know him already.

43
00:02:32.590 --> 00:02:38.740
This just goes boop boop boop and kind
of makes all of these kinda go across.

44
00:02:38.740 --> 00:02:43.660
They're just a bunch of items and then
that item a has a background of teal yeah?

45
00:02:43.660 --> 00:02:47.640
So we've got our usual
suspect of display grid.

46
00:02:47.640 --> 00:02:49.620
We go all the way across,
all the way down.

47
00:02:49.620 --> 00:02:52.040
You don't have to go all the way
across all the way down too like,

48
00:02:52.040 --> 00:02:57.840
right if I wanted to do a height
of 50 my grade gets squishy.

49
00:02:57.840 --> 00:03:01.770
So you don't have to use it for
the entire layout if you don't want to.

50
00:03:01.770 --> 00:03:02.760
That's totally fine.

51
00:03:04.820 --> 00:03:07.550
Okay, so most of these dibs are gray.

52
00:03:07.550 --> 00:03:09.510
But one, is teal.

53
00:03:09.510 --> 00:03:13.430
So what if we want this one to layout
somewhere else on the page because

54
00:03:13.430 --> 00:03:16.160
when we were making all
of those grids earlier,

55
00:03:16.160 --> 00:03:18.950
we weren't just sticking
things in boxes everywhere.

56
00:03:18.950 --> 00:03:21.690
So maybe we want it to
start somewhere else.

57
00:03:21.690 --> 00:03:25.470
Well, we have this kinda
grid column start,

58
00:03:25.470 --> 00:03:30.270
grid column end,
grid row start, grid row end.

59
00:03:30.270 --> 00:03:33.540
So there's a few different
options here and I combined.

60
00:03:33.540 --> 00:03:35.470
I'm showing you two different
options at the time.

61
00:03:35.470 --> 00:03:40.290
So grid column start,
is going to go over here.

62
00:03:40.290 --> 00:03:42.750
It's not starting from one,
it's not base zero.

63
00:03:42.750 --> 00:03:44.191
That's confusing to me.

64
00:03:44.191 --> 00:03:48.180
[LAUGH] It's one and
two so it starts here.

65
00:03:48.180 --> 00:03:50.754
And then it spans across three.

66
00:03:50.754 --> 00:03:55.420
And then grid row start is 3.

67
00:03:55.420 --> 00:03:58.240
And then I'm saying grid row end 6.

68
00:03:58.240 --> 00:04:04.700
It could go 5, wait that is 5,
sorry I messed that up.

69
00:04:04.700 --> 00:04:08.010
So 3 and then it ends there.

70
00:04:08.010 --> 00:04:13.410
But if I say span 2 then it's
saying how many it spans.

71
00:04:13.410 --> 00:04:15.130
That's kind of intuitive, right?

72
00:04:15.130 --> 00:04:17.590
Like one of them is
defined by the line and

73
00:04:17.590 --> 00:04:20.530
the other one is defined
by how much it spans.

74
00:04:20.530 --> 00:04:23.220
But this is a long way to write this.

75
00:04:23.220 --> 00:04:27.270
That's a very long way of
writing all of these things.

76
00:04:27.270 --> 00:04:31.270
So we can also write it by grid area.

77
00:04:31.270 --> 00:04:35.890
And the grid area goes the start of
the row, the start of the column,

78
00:04:35.890 --> 00:04:38.422
the end of the row, the end of the column.

79
00:04:38.422 --> 00:04:42.900
So it's always .again and
again in browsers we do x and

80
00:04:42.900 --> 00:04:44.800
then y and then x and then y.

81
00:04:44.800 --> 00:04:49.540
When I look at this I'm like,
I want to start with y here, but

82
00:04:49.540 --> 00:04:55.310
actually if I think about the way that,
when we go grab things in the DOM,

83
00:04:55.310 --> 00:04:58.330
those boxes are always x, y, x, y, x, y.

84
00:04:58.330 --> 00:05:01.010
So it follows that same kinda standard.

85
00:05:01.010 --> 00:05:06.329
So we're basically saying, start at 2,
start at 3, span 3, span 2.

86
00:05:07.560 --> 00:05:12.080
So row, column, row, column, pretty cool?

87
00:05:13.230 --> 00:05:14.400
Not that bad.

88
00:05:14.400 --> 00:05:16.790
It's like pretty easy to work with, yeah?

89
00:05:16.790 --> 00:05:20.010
You can get a lot done
with grid pretty quickly.

90
00:05:20.010 --> 00:05:25.270
Again, I am not a grid expert this is
like me playing around with it for

91
00:05:25.270 --> 00:05:29.850
the past few weeks or something like I've
done a few great light outs before this.

92
00:05:29.850 --> 00:05:33.830
But I am not, I don't know the spec like
the back of my hand like those other

93
00:05:33.830 --> 00:05:40.650
people that I mention before, but
I can go pretty far with it without a lot.

94
00:05:40.650 --> 00:05:43.630
Without being a great expert,
which is the cool part.

95
00:05:43.630 --> 00:05:49.380
I don't have to be the worlds expert
in it, in order to make these layouts.

96
00:05:49.380 --> 00:05:52.510
So here we are using this
thing called Minimax.

97
00:05:52.510 --> 00:05:56.390
Minimax is my favorite thing you guys,
it's so cool.

98
00:05:56.390 --> 00:06:01.520
So with Minimax we're basically saying
what we want things to start and

99
00:06:01.520 --> 00:06:03.920
end with, without using media queries.

100
00:06:03.920 --> 00:06:10.240
Like check this out, item as wide as
the content but at most 300 pixels.

101
00:06:10.240 --> 00:06:13.976
Item with flexible width but
with a minimum of 200 pixels.

102
00:06:13.976 --> 00:06:18.300
An inflexible item of 150 across,

103
00:06:18.300 --> 00:06:22.740
so look at how it stopped at 200.

104
00:06:22.740 --> 00:06:27.570
This one it won't get so
small that the content row,

105
00:06:27.570 --> 00:06:31.360
if I took the text out it would
kind of smoosh even further.

106
00:06:31.360 --> 00:06:33.870
But as I go out,
it will stop at 300 pixels.

107
00:06:33.870 --> 00:06:39.320
And this isn't my example,
the rest of them are my examples.

108
00:06:39.320 --> 00:06:46.110
But this one is off of the Mozilla Docs,
which are the MDN Docs are fantastic.

109
00:06:46.110 --> 00:06:48.810
I just couldn't find a way
of improving on it, so

110
00:06:48.810 --> 00:06:51.205
I was like whatever, I'll just show this.

111
00:06:51.205 --> 00:06:54.460
[LAUGH] I kind of wish that
we had Minmax for everything.

112
00:06:54.460 --> 00:06:58.295
Like, what if you could define
H1 sizes with just min max?

113
00:06:58.295 --> 00:07:01.430
Like, you wouldn't have to dump
everything in Media queries.

114
00:07:01.430 --> 00:07:03.372
Wouldn't that be cool?

115
00:07:03.372 --> 00:07:06.600
Anyway, [LAUGH] but
I think that this is a really

116
00:07:07.770 --> 00:07:12.560
fascinating part of it because we
just created a really responsive

117
00:07:12.560 --> 00:07:17.540
layout without having to put things in
different areas and stuff, super great.

