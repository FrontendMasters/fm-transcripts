WEBVTT

1
00:00:00.020 --> 00:00:03.644
&gt;&gt; Sarah Drasner: So okay, we have a
section with tons and tons of divs, but so

2
00:00:03.644 --> 00:00:08.884
many divs that it's just a background of
gray, and it's just a wash of gray, right?

3
00:00:08.884 --> 00:00:12.798
We've said display: grid
on the whole thing, and

4
00:00:12.798 --> 00:00:18.860
we have these concepts of grid template
columns and grid template rows.

5
00:00:18.860 --> 00:00:23.630
So if I uncomment these lines with
the grid template columns and

6
00:00:23.630 --> 00:00:24.820
grid template rows.

7
00:00:24.820 --> 00:00:29.980
What it will really do is it will, and I'm
going to pop this open in a new window.

8
00:00:29.980 --> 00:00:33.250
We want the grid column gap and
the row column gap.

9
00:00:33.250 --> 00:00:36.539
So that you can see the difference
between each ones of these.

10
00:00:38.330 --> 00:00:43.570
And really what it did was apply that
grid column, the grid column and

11
00:00:43.570 --> 00:00:46.100
the grid template to
the first thing it saw.

12
00:00:46.100 --> 00:00:49.630
So the first thing it saw, it was 1fr and

13
00:00:49.630 --> 00:00:52.490
the first thing it saw on
the rose was 80 pixels.

14
00:00:52.490 --> 00:00:56.060
fr I'll explain in just a second,
so let's talk about that 80 pixels.

15
00:00:56.060 --> 00:01:00.650
So it was 80 pixels, and then it just
laid out all of the other rows, and

16
00:01:00.650 --> 00:01:05.380
then we got this big clump of everything.

17
00:01:05.380 --> 00:01:09.210
This is our grid, this is what it
looks like in the dev inspector.

18
00:01:09.210 --> 00:01:12.840
We've got all of these templates and
all of these rows.

19
00:01:12.840 --> 00:01:15.560
fr is really a fraction of a unit, so

20
00:01:15.560 --> 00:01:20.500
however big it is,
it's one piece of that thing, right?

21
00:01:20.500 --> 00:01:23.590
So because this is 100 view width and
100 view height,

22
00:01:23.590 --> 00:01:28.070
this is gonna span all the way across,
that's all it's gonna do.

23
00:01:28.070 --> 00:01:34.680
But luckily, and we could actually
keep going, and I could say 1fr, 1fr.

24
00:01:34.680 --> 00:01:39.410
I'm gonna say 1fr, 1fr, 1fr,
then it splits three ways, right?

25
00:01:39.410 --> 00:01:42.620
But we could also do this shorthand, we
don't have to write it out all like that.

26
00:01:42.620 --> 00:01:47.360
We could say, repeat 5, and

27
00:01:47.360 --> 00:01:52.108
then stick the 1fr in there.

28
00:01:55.765 --> 00:02:00.420
&gt;&gt; Sarah Drasner: I'm gonna move that
over, and then you can see that it starts

29
00:02:00.420 --> 00:02:06.470
laying them out and it's decided that
it's just gonna use up all of the space.

30
00:02:06.470 --> 00:02:09.305
So you can see how that's
nicely responsive,

31
00:02:09.305 --> 00:02:11.930
pretty nicely responsive out of the gate.

32
00:02:11.930 --> 00:02:16.323
I'm actually gonna do, For,
&gt;&gt; Sarah Drasner: But

33
00:02:16.323 --> 00:02:17.570
we still have that 80 pixels, right?

34
00:02:17.570 --> 00:02:22.993
If I wanted to I could say 80 pixels,
1fr, 80 pixels.

35
00:02:28.260 --> 00:02:31.430
&gt;&gt; Sarah Drasner: And then what I get
is 80 pixels at the top, 80 pixels at

36
00:02:31.430 --> 00:02:36.420
the bottom, and then whatever space is
left, so whatever I've got left over here.

37
00:02:36.420 --> 00:02:40.841
But really probably what I wanna
do is do the same repeat thing.

38
00:02:45.600 --> 00:02:48.818
&gt;&gt; Sarah Drasner: And then if I pop it
open here, we've got a grid, right?

39
00:02:48.818 --> 00:02:53.042
So that's not that much code to get a
whole grid that I can start laying things

40
00:02:53.042 --> 00:02:53.972
out on, right?

41
00:02:53.972 --> 00:02:58.188
We've got display grid, we're saying,
that section is the width,

42
00:02:58.188 --> 00:03:02.825
the whole span of whatever the viewport
is, and then the entire height.

43
00:03:02.825 --> 00:03:07.050
And then I'm just repeating those
fraction units all the way across, and

44
00:03:07.050 --> 00:03:08.860
I'm adding some gaps, so I can see them.

45
00:03:08.860 --> 00:03:10.160
I don't need to have the gaps,

46
00:03:10.160 --> 00:03:14.500
that grade would still be there, it would
be harder for us to see right off the bat,

47
00:03:14.500 --> 00:03:19.400
but if I open up the dev tools and
looked at it, it still has all of the.

48
00:03:20.760 --> 00:03:23.930
Those are still in existence they
just don't have the columns, so

49
00:03:23.930 --> 00:03:25.970
you can't see them, right?

50
00:03:25.970 --> 00:03:26.550
Yep.

51
00:03:26.550 --> 00:03:29.580
&gt;&gt; Speaker 2: So why was the bottom-right
blank when you had five columns?

52
00:03:29.580 --> 00:03:31.900
&gt;&gt; Sarah Drasner: Because I
don't have as many divs as that.

53
00:03:31.900 --> 00:03:38.230
So I could remove a bunch of divs here and
those divs have the background of gray.

54
00:03:38.230 --> 00:03:40.520
That's how that's being colored there.

55
00:03:40.520 --> 00:03:42.770
So it would still make the whole grid for
me,

56
00:03:42.770 --> 00:03:47.890
it just wouldn't fill it with all
of the divs, yeah, great question.

57
00:03:47.890 --> 00:03:50.250
Okay, we've got a bunch
of different divs and

58
00:03:50.250 --> 00:03:52.740
a bunch of different
items inside of the div.

59
00:03:52.740 --> 00:03:55.390
So let's uncomment this.

60
00:03:55.390 --> 00:04:01.291
At first we'll,
&gt;&gt; Sarah Drasner: It's

61
00:04:01.291 --> 00:04:04.453
pretty much the same thing
as what you saw before,

62
00:04:04.453 --> 00:04:08.116
except that these divs
are smaller than the grid space.

63
00:04:08.116 --> 00:04:11.920
Before the divs were just expanding
to fill that grid space, but

64
00:04:11.920 --> 00:04:12.800
these divs are not.

65
00:04:12.800 --> 00:04:17.003
These divs have an implicit
width of 100 pixels.

66
00:04:18.999 --> 00:04:22.900
&gt;&gt; Sarah Drasner: So
stuff is inside these grid pieces, and

67
00:04:22.900 --> 00:04:26.693
they're each starting from over here.

68
00:04:26.693 --> 00:04:32.001
And the default is that they'll
just move over to the side there.

69
00:04:32.001 --> 00:04:36.427
And if I go back and I say, center,

70
00:04:36.427 --> 00:04:43.090
then they move inside of that piece,
right?

71
00:04:43.090 --> 00:04:45.950
So if you saw this
without seeing the grid,

72
00:04:45.950 --> 00:04:48.740
it might not be clear where that grid is.

73
00:04:48.740 --> 00:04:53.300
You'd be like, I don't understand,
it seems like there's less pieces or,

74
00:04:53.300 --> 00:04:56.250
how did it get pushed over
to the side like that?

75
00:04:57.470 --> 00:05:01.460
But that's another thing Grid allows you
to do is actually say, just like Flexbox

76
00:05:01.460 --> 00:05:05.700
allows you to justify items and
align content and things like that.

77
00:05:05.700 --> 00:05:09.970
Its allowing me to say, whatever, however
big that div is inside of that cell,

78
00:05:09.970 --> 00:05:11.906
let's just stick it in the middle.

79
00:05:11.906 --> 00:05:15.314
And you could also have it
justified to the end and

80
00:05:15.314 --> 00:05:20.153
go to the other side as well and
you could do these for each one as well.

