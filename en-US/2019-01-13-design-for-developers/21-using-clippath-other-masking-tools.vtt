WEBVTT

1
00:00:00.020 --> 00:00:02.830
&gt;&gt; Sarah Drasner: Okay, so
how did I do these diagonals?

2
00:00:04.640 --> 00:00:05.860
This is an SVG.

3
00:00:06.860 --> 00:00:11.150
So I make this piece of the content here,
this hero.

4
00:00:11.150 --> 00:00:12.910
I made it a certain color.

5
00:00:12.910 --> 00:00:14.430
And then I made an SVG, and

6
00:00:14.430 --> 00:00:19.910
I just drew this path value
basically said, okay, the view box.

7
00:00:19.910 --> 00:00:24.330
If you're not familiar with SVG, think
of it like a giant piece of graph paper

8
00:00:24.330 --> 00:00:26.660
that goes out in every single direction.

9
00:00:26.660 --> 00:00:29.640
And the view box is
this tiny little window

10
00:00:29.640 --> 00:00:31.620
that you're looking at
that piece of graph paper.

11
00:00:31.620 --> 00:00:33.138
So things can be outside of it but

12
00:00:33.138 --> 00:00:36.030
you're really only seeing the thing
that's inside the view box.

13
00:00:36.030 --> 00:00:41.870
So basically, remember how we said X,
Y ,X, Y for all the standard?

14
00:00:41.870 --> 00:00:43.990
So how that's view boxes work too.

15
00:00:43.990 --> 00:00:48.600
So in that graph paper, we're

16
00:00:48.600 --> 00:00:54.140
plotting a point 00, and it's 0X, 0Y,
then draw 500, 500, we get the view box.

17
00:00:54.140 --> 00:00:59.040
Then inside of there,
you can draw path points and lines.

18
00:00:59.040 --> 00:01:02.350
And I won't cover that
in a lot of detail now.

19
00:01:02.350 --> 00:01:05.180
Tomorrow, I tell you
everything about that.

20
00:01:05.180 --> 00:01:08.310
So if you're back here tomorrow,
then you'll learn all that stuff, or

21
00:01:08.310 --> 00:01:10.950
you can watch it online later.

22
00:01:10.950 --> 00:01:12.910
So you can basically just draw shapes.

23
00:01:12.910 --> 00:01:15.810
You can just say here, to here, to here.

24
00:01:15.810 --> 00:01:20.040
And I could have used a polygon for
it as well.

25
00:01:20.040 --> 00:01:22.950
I chose to do a path because
it was a bit smaller.

26
00:01:22.950 --> 00:01:24.830
But, really, it doesn't matter.

27
00:01:24.830 --> 00:01:26.583
And this is just a triangle.

28
00:01:26.583 --> 00:01:27.485
It's just a triangle.

29
00:01:27.485 --> 00:01:32.122
But the kind of secret sauce is
this preserveAspectRatio none.

30
00:01:32.122 --> 00:01:36.419
And by putting preserveAspectRatio none,
it scales to the width and

31
00:01:36.419 --> 00:01:41.100
height of the container, no matter how
big or small it is in any direction.

32
00:01:41.100 --> 00:01:44.594
So usually,
SVG can scale with their container, but

33
00:01:44.594 --> 00:01:47.011
they're going to stay consistent.

34
00:01:47.011 --> 00:01:49.294
So that if you have a face,
it's not like [SOUND].

35
00:01:49.294 --> 00:01:52.846
[LAUGH] preserveAspectRatio
none is basically saying,

36
00:01:52.846 --> 00:01:55.050
just fill the whole thing up.

37
00:01:55.050 --> 00:02:00.190
So I have an implicit size for
this area, and

38
00:02:00.190 --> 00:02:05.890
then as I go across, it also works for
responsive for mobile.

39
00:02:05.890 --> 00:02:09.830
So it kind of just fills whatever
space but it has an implicit height.

40
00:02:09.830 --> 00:02:12.780
So I could have also made the height
a little bit smaller on mobile if I wanted

41
00:02:12.780 --> 00:02:15.450
to, but I was kind of fine with
it being a different shape.

42
00:02:16.560 --> 00:02:20.460
And then I can repeat that and
use it again and again down the thing.

43
00:02:22.010 --> 00:02:23.380
Any questions about that?

44
00:02:23.380 --> 00:02:23.880
Make sense?

45
00:02:25.260 --> 00:02:26.550
Cool, cool.

46
00:02:26.550 --> 00:02:30.860
SVG is good for drawing because it's
built with math and it's also not a hack.

47
00:02:30.860 --> 00:02:32.280
When you draw shapes in CSS,

48
00:02:32.280 --> 00:02:36.530
you're actually hacking something
that's meant for a layout into drawing.

49
00:02:37.820 --> 00:02:41.380
And when you're using SVG, it was really
just built for drawing on the web.

50
00:02:41.380 --> 00:02:42.760
That's its job.

51
00:02:42.760 --> 00:02:46.330
So you're not actually hacking anything,
you're just using it for

52
00:02:46.330 --> 00:02:47.230
what it's intended for.

53
00:02:49.100 --> 00:02:53.330
There's another way of making these
kind of clip-paths, and that's with CSS.

54
00:02:53.330 --> 00:02:58.110
You can actually use this clip path
maker to do things like this for

55
00:02:58.110 --> 00:03:02.840
images and things like that,
if you wanna make cool shapes with images.

56
00:03:02.840 --> 00:03:07.950
The one thing I will say though, and this
is a really cool tool, it's called Clippy.

57
00:03:07.950 --> 00:03:11.140
So write Bennett Feely Clippy.

58
00:03:11.140 --> 00:03:15.800
You're gonna end up somewhere else if you
just write Clippy into your browser window

59
00:03:15.800 --> 00:03:17.120
and look it up.

60
00:03:17.120 --> 00:03:18.812
Bennett Feely is the person
who built this tool.

61
00:03:18.812 --> 00:03:24.792
And it has all sorts of different ones,
and it also allows you to do custom ones.

62
00:03:24.792 --> 00:03:31.010
So you can see how simple that code
is down there, clip path polygon.

63
00:03:31.010 --> 00:03:35.470
And that's really nice, except it's not
super well supported in all browsers.

64
00:03:35.470 --> 00:03:39.760
I think it's, I can't remember but we're
gonna show you that on the next slide.

65
00:03:39.760 --> 00:03:44.270
SVG though, using SVG for
clip-paths, is well supported.

66
00:03:44.270 --> 00:03:45.150
All over the place.

67
00:03:45.150 --> 00:03:50.030
So you could either use SVG as a fallback
or just use SVG as a clip path.

68
00:03:50.030 --> 00:03:54.710
Or you could do what I did with the shape
outside and say, if you don't support it,

69
00:03:54.710 --> 00:03:58.960
fine, but if you're Chrome,
show this cool thing, kind of thing.

70
00:03:58.960 --> 00:04:04.405
This Pen by yoksel goes on and on and
on, and it shows every kind of clip.

71
00:04:04.405 --> 00:04:08.846
So using CSS,
using clip-path, using masks,

72
00:04:08.846 --> 00:04:14.400
using SVG, using,
it shows how to use it multiple ways.

73
00:04:14.400 --> 00:04:15.330
It's super cool.

74
00:04:15.330 --> 00:04:20.070
And she has this like browser support
things and they automatically update.

75
00:04:20.070 --> 00:04:23.060
So you can always go there to find
out what the browser support is and

76
00:04:23.060 --> 00:04:25.420
also what the code looks like.

77
00:04:25.420 --> 00:04:29.160
And also what, and
it's live, so everything is,

78
00:04:29.160 --> 00:04:31.420
you can go check out the code for
the page too.

79
00:04:31.420 --> 00:04:32.410
She's amazing.

80
00:04:32.410 --> 00:04:34.000
So you should definitely
check out her work.

81
00:04:34.000 --> 00:04:36.250
Anyways, she's just like a browser genius.

82
00:04:36.250 --> 00:04:37.520
I don't know.

83
00:04:37.520 --> 00:04:40.800
And one of the more under
appreciated devs out there.

84
00:04:42.600 --> 00:04:46.300
This code pin that I
made with React Motion.

85
00:04:46.300 --> 00:04:50.210
This is done with the same kind of
principle of that preserveAspectRatio

86
00:04:50.210 --> 00:04:54.880
none, where you have this kind
of background with an SVG.

87
00:04:54.880 --> 00:04:59.510
And I kind of changed the content
based on how much is here,

88
00:04:59.510 --> 00:05:03.640
and then also that SVG in the background
is just like preserveAspectRatio none.

89
00:05:03.640 --> 00:05:07.910
And it's there mostly for
display kinda purposes.

90
00:05:07.910 --> 00:05:13.160
So it's just like a reactant SVG layout,

91
00:05:13.160 --> 00:05:17.010
that is a little bit more
interesting than some other layouts.

