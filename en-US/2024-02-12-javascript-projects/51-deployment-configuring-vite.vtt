WEBVTT

1
00:00:00.200 --> 00:00:03.271
Now that we have the tools
that want to help us

2
00:00:03.271 --> 00:00:08.088
make sure that the code we are pushing
to the interwebs is not broken at

3
00:00:08.088 --> 00:00:12.761
least help us as much as they can
with making sure it's not broken.

4
00:00:12.761 --> 00:00:16.452
We might be ready to blast off and

5
00:00:16.452 --> 00:00:22.206
deploy some code for
all of the Internet to enjoy.

6
00:00:22.206 --> 00:00:26.765
So Houston, mission control.

7
00:00:26.765 --> 00:00:33.125
I believe at this point,
we've linted, we've auto-formatted,

8
00:00:33.125 --> 00:00:40.598
we've worn our NASA-themed T-shirt,
[LAUGH] and we are ready for blast-off.

9
00:00:40.598 --> 00:00:45.198
So let us just take a quick
moment to review for the, again,

10
00:00:45.198 --> 00:00:50.442
those of us that are kind of new to
a lot of the lingo here which again,

11
00:00:50.442 --> 00:00:54.129
is completely arbitrary and
sort of cultural.

12
00:00:54.129 --> 00:00:58.992
When we talk about deploying
to production versus sometimes

13
00:00:58.992 --> 00:01:01.864
we deploy to development servers.

14
00:01:01.864 --> 00:01:05.945
But in general,
we run our development server locally, but

15
00:01:05.945 --> 00:01:08.756
we have production out in the real world.

16
00:01:08.756 --> 00:01:13.326
There's probably a good reason why
we use the word production, but

17
00:01:13.326 --> 00:01:15.662
I don't honestly know what it is.

18
00:01:15.662 --> 00:01:17.903
So if anybody knows, fun fact,
put it in the thing.

19
00:01:17.903 --> 00:01:23.687
[LAUGH] But the idea here is that we
have very different use cases for

20
00:01:23.687 --> 00:01:26.012
these two environments.

21
00:01:26.012 --> 00:01:30.940
In the dev environment,
we know that the user is us,

22
00:01:30.940 --> 00:01:36.099
the call is coming from inside the house,
if you will.

23
00:01:36.099 --> 00:01:40.776
And the idea is that we're trying to
iterate on our code base as quickly as

24
00:01:40.776 --> 00:01:41.550
possible.

25
00:01:41.550 --> 00:01:46.006
We're trying to make those changes because
I got somebody over here being like,

26
00:01:46.006 --> 00:01:47.381
the side is down, help,

27
00:01:47.381 --> 00:01:51.068
this sort of panic moment when
we're running as fast as possible.

28
00:01:51.068 --> 00:01:55.683
We're moving fast and
possibly breaking things, and

29
00:01:55.683 --> 00:02:00.395
we want to kind of be making
choices in the way that we're

30
00:02:00.395 --> 00:02:04.326
running this local server
that reflect that.

31
00:02:04.326 --> 00:02:10.157
For example, we may wanna be assuming that
we are running a very modern browser so

32
00:02:10.157 --> 00:02:14.872
that we don't have to go through
all of the steps of transpiling or

33
00:02:14.872 --> 00:02:20.992
chain rewriting the syntax of JavaScript
to support older browsers, for example.

34
00:02:20.992 --> 00:02:24.905
But in the production environment,
I, the developer,

35
00:02:24.905 --> 00:02:29.648
I'm not the audience, the end user
of this website is the audience.

36
00:02:29.648 --> 00:02:36.593
And so our focus is not to get something
that reloads as fast as possible and

37
00:02:36.593 --> 00:02:43.214
uses all the fresh hotness to make me
as fast of a bug fixer as possible.

38
00:02:43.214 --> 00:02:48.561
But rather to make sure that
we are delivering a solid,

39
00:02:48.561 --> 00:02:55.085
robust, working [LAUGH] ideally
site to actual users in the world.

40
00:02:55.085 --> 00:02:56.753
And so that's where, yeah, in Vite,

41
00:02:56.753 --> 00:02:58.987
we have a few different kind
of default Faults here.

42
00:02:58.987 --> 00:03:03.376
For example, in the dev server,
we again, target those newest browsers.

43
00:03:03.376 --> 00:03:08.499
Because we kinda assume that if we're
web devs working with modern tools,

44
00:03:08.499 --> 00:03:13.644
we have updated our browser in less
than 10 years, let's say [LAUGH] ago.

45
00:03:13.644 --> 00:03:18.818
And yeah, we're watching for
those changes, we're automatically

46
00:03:18.818 --> 00:03:24.003
reloading whenever one module changes,
we're kinda putting it in.

47
00:03:24.003 --> 00:03:31.223
But in the production build as we saw
earlier, the settings are different.

48
00:03:31.223 --> 00:03:35.535
We might be targeting older browsers
because we want to also support users who

49
00:03:35.535 --> 00:03:37.407
are not JavaScript developers.

50
00:03:37.407 --> 00:03:40.922
And not have other things
going on in their lives and

51
00:03:40.922 --> 00:03:46.331
downloading the hottest freshest browser
to ever come off the assembly line.

52
00:03:46.331 --> 00:03:51.408
Anyway, the preview server
that we used earlier that goes

53
00:03:51.408 --> 00:03:57.325
along with the NPM run build,
once we run that, nothing is served.

54
00:03:57.325 --> 00:04:05.496
We can run NPM run preview to serve up all
of those files that were built in dist.

55
00:04:05.496 --> 00:04:10.457
And again, those commands came out of
the box with our Vite starter package or

56
00:04:10.457 --> 00:04:14.288
create Vite package, and
it's not gonna update, right?

57
00:04:14.288 --> 00:04:19.625
This is to make sure that you can test out
sort of quality control your built site,

58
00:04:19.625 --> 00:04:22.293
not that you can be quickly editing, and

59
00:04:22.293 --> 00:04:26.624
then quickly seeing the new change,
and quickly editing again.

60
00:04:26.624 --> 00:04:27.697
So very different focus.

61
00:04:27.697 --> 00:04:30.962
And this is all to say,
there's different settings for

62
00:04:30.962 --> 00:04:33.194
what happens in these environments.

63
00:04:33.194 --> 00:04:37.622
And so sometimes that also involves
having different environment variables.

64
00:04:37.622 --> 00:04:42.670
For example, maybe you have an API token,

65
00:04:42.670 --> 00:04:45.341
something like that.

66
00:04:45.341 --> 00:04:50.192
This is out of the scope of this course,
but you might have certain data secrets

67
00:04:50.192 --> 00:04:54.530
that you don't want to commit to
GitHub in your local environment that

68
00:04:54.530 --> 00:04:58.895
are different from the ones that
your production site would be using.

69
00:04:58.895 --> 00:05:03.701
So maybe you've got your own
personal dev token for GitHub, but

70
00:05:03.701 --> 00:05:08.954
your company has a different one
that they use when they're accessing

71
00:05:08.954 --> 00:05:14.668
the GitHub API for your fancy open-source
helper website, I don't know.

72
00:05:14.668 --> 00:05:20.303
The point being the two environments
have their very different needs and

73
00:05:20.303 --> 00:05:22.334
very different aims, and

74
00:05:22.334 --> 00:05:27.243
so we have to be conscious of
whether we're in one or the other.

75
00:05:27.243 --> 00:05:31.463
And Vite is already conscious
of that with those defaults.

76
00:05:31.463 --> 00:05:38.878
But we can also configure Vite to
tell it what we want it to do.

77
00:05:38.878 --> 00:05:43.397
So we can customize all kinds of
different options around Vite,

78
00:05:43.397 --> 00:05:48.346
including, for example,
where we're intending to host this site.

79
00:05:48.346 --> 00:05:52.925
For example,
is this gonna be at anjana.dev?

80
00:05:52.925 --> 00:05:55.780
That's it.

81
00:05:55.780 --> 00:05:59.284
Or is it gonna be @anjana.dev/selfie-cam?

82
00:05:59.284 --> 00:06:04.289
Or is it gonna be
@projects.anjana.dev/selfie-cam?

83
00:06:04.289 --> 00:06:06.600
What's gonna happen here?

84
00:06:06.600 --> 00:06:09.491
And we can also tell it things
like how the build should work.

85
00:06:09.491 --> 00:06:11.818
For example,
which browsers do I wanna target?

86
00:06:11.818 --> 00:06:16.418
Do I know that some of my users
are on even older browsers

87
00:06:16.418 --> 00:06:18.624
than the default in Vite?

88
00:06:18.624 --> 00:06:19.993
I can configure that.

89
00:06:19.993 --> 00:06:23.232
And there's all kinds of other settings,
we're not gonna go into it all.

90
00:06:23.232 --> 00:06:27.031
There's a whole Vite course you
can take that I'm sure covers

91
00:06:27.031 --> 00:06:29.453
a whole bunch of other tips and tricks.

92
00:06:29.453 --> 00:06:33.917
But suffice it to say that we can

93
00:06:33.917 --> 00:06:38.912
create a vite.config.js file.

94
00:06:38.912 --> 00:06:42.154
And it seems that at the moment,

95
00:06:42.154 --> 00:06:47.560
there is starting to be
a little more consensus around

96
00:06:47.560 --> 00:06:53.461
a lot of projects use this
projectname.config.js now.

97
00:06:53.461 --> 00:06:56.910
And perhaps we will see more
of those .config.js files.

98
00:06:56.910 --> 00:07:01.665
But in any case, that's Vite 1,
it's just dictated if

99
00:07:01.665 --> 00:07:06.618
you have a v.config.js file and
it conforms to the way Vite

100
00:07:06.618 --> 00:07:11.892
conflg should be created,
basically, what a Vite config is.

101
00:07:11.892 --> 00:07:16.792
And similar to our ES lint configs and
all these other things is essentially

102
00:07:16.792 --> 00:07:21.766
a JSON file, or in this case, a JavaScript
object that has keys and values,

103
00:07:21.766 --> 00:07:26.468
and keys and values that override any
defaults that we might want to do.

104
00:07:26.468 --> 00:07:31.508
So, for example, there's a there's
a base option where I can

105
00:07:31.508 --> 00:07:36.355
tell it where this site is going to be,
what the base path is,

106
00:07:36.355 --> 00:07:40.368
so essentially,
where that kinda slash starts.

107
00:07:40.368 --> 00:07:46.016
And then things like, I want
the server to run on a different port,

108
00:07:46.016 --> 00:07:51.585
or I want the build to target different
browsers and things like that.

109
00:07:51.585 --> 00:07:54.700
Now, we're not gonna worry about all
of the different config options,

110
00:07:54.700 --> 00:07:56.600
you can read all about
them on the Vite docs.

111
00:07:56.600 --> 00:07:59.558
But if we wanna deploy a project site,

112
00:07:59.558 --> 00:08:05.021
we're probably gonna have some kind
of slash project name in our URL.

113
00:08:05.021 --> 00:08:13.670
So, that probably is one that we're gonna
wanna set is this base URL for our site.

114
00:08:13.670 --> 00:08:19.799
And what that looks like is gonna
depend on where we're hosting our site.

115
00:08:19.799 --> 00:08:25.881
So there's a whole bunch of different
places, the different services and

116
00:08:25.881 --> 00:08:31.384
companies essentially that offer
really convenient platforms for

117
00:08:31.384 --> 00:08:35.743
deploying your sites and
hosting them even up there.

118
00:08:35.743 --> 00:08:39.445
And then it will integrate
with your GitHub account and

119
00:08:39.445 --> 00:08:44.193
just sort of automagically update
your website, if you have the right

120
00:08:44.193 --> 00:08:48.633
config settings, whenever you
push to your GitHub repository.

121
00:08:48.633 --> 00:08:51.812
There's a whole bunch of options, and
we're not gonna really go into them.

122
00:08:51.812 --> 00:08:56.418
But for example, Netlify and Vercel
are a couple that you might see out there.

123
00:08:56.418 --> 00:08:59.625
For example,
somebody might share a demo project and

124
00:08:59.625 --> 00:09:03.700
it's myselficam.netlify.com or
something like that, right?

125
00:09:03.700 --> 00:09:05.674
So these are a couple of popular ones.

126
00:09:05.674 --> 00:09:10.246
But since we are already using GitHub,
we can also use GitHub's

127
00:09:10.246 --> 00:09:14.661
built-in solution for this,
which is called GitHub Pages.

128
00:09:14.661 --> 00:09:19.123
So this is a whole whole thing.

129
00:09:19.123 --> 00:09:21.857
And there's all kinds of settings,
and whatever, and configuration, and

130
00:09:21.857 --> 00:09:23.296
everything, you can read all about it.

131
00:09:23.296 --> 00:09:26.988
But essentially,
when we have a Git repository, and

132
00:09:26.988 --> 00:09:31.841
I believe if we're on the free plan,
it has to be a public repository.

133
00:09:31.841 --> 00:09:39.038
But when we have one, we can also deploy
a static site here to GitHub pages,

134
00:09:39.038 --> 00:09:43.505
essentially by just
tweaking some settings.

