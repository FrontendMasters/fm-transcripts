WEBVTT

1
00:00:00.700 --> 00:00:06.312
All right, so, as usual, there is a,
hopefully, let's find out,

2
00:00:06.312 --> 00:00:11.548
[LAUGH] a finished version here
that no longer is throwing errors,

3
00:00:11.548 --> 00:00:17.050
we'll look at it in a second, and
this is essentially what we want.

4
00:00:17.050 --> 00:00:22.040
So we've now got a button that I can
click that opens a modal dialog which in

5
00:00:22.040 --> 00:00:26.632
this stylesheet that is already
included like kind of already makes

6
00:00:26.632 --> 00:00:31.383
everything blurry for us and
the browser also knows that it's modal so

7
00:00:31.383 --> 00:00:36.294
other things are basically don't exist for
all intents and purposes for

8
00:00:36.294 --> 00:00:40.823
us right now, and
it has the content that we already had.

9
00:00:40.823 --> 00:00:42.353
That, for example,

10
00:00:42.353 --> 00:00:47.715
the elements with the IDs that we had
already set up our toggle to work with.

11
00:00:47.715 --> 00:00:50.123
And we have this beautiful H2 and

12
00:00:50.123 --> 00:00:55.083
this beautiful close button that
we can use to close the modal.

13
00:00:55.083 --> 00:00:58.993
So let's look at the code because
that's what we care about.

14
00:01:01.386 --> 00:01:04.756
Okay, so yes, this the form looks
pretty similar to what we just had.

15
00:01:04.756 --> 00:01:06.926
Let's skip ahead to the modal.

16
00:01:06.926 --> 00:01:10.969
Okay, so similarly we just set up
some default values for these so

17
00:01:10.969 --> 00:01:12.876
that we can get going.

18
00:01:12.876 --> 00:01:15.705
We're doing a very similar
we're like exposing some of

19
00:01:15.705 --> 00:01:19.797
these values like the name of the modal
that might be something that the developer

20
00:01:19.797 --> 00:01:23.908
might wanna check later or change or what
have you, so we'll expose it for them.

21
00:01:24.918 --> 00:01:27.953
We're setting some attributes on
the buttons like we did before,

22
00:01:27.953 --> 00:01:29.308
we're setting the content,

23
00:01:29.308 --> 00:01:33.278
no big difference from how we did this
with the close button in the form.

24
00:01:33.278 --> 00:01:36.488
We're also setting references to
the parent and to the content.

25
00:01:36.488 --> 00:01:40.846
Again, maybe the user is gonna wanna
change this out later in response to

26
00:01:40.846 --> 00:01:43.575
something else that
happens in the program.

27
00:01:45.415 --> 00:01:50.343
And then what we're doing,
other than this was already in here that

28
00:01:50.343 --> 00:01:54.926
I just sort of declared as
the dictator of dark modal HTML file,

29
00:01:54.926 --> 00:01:58.375
that we're gonna call this setup form.

30
00:01:58.375 --> 00:02:01.687
But another thing that we
could have private setup form.

31
00:02:01.687 --> 00:02:06.600
Another thing that we could have is
like some other internally use private

32
00:02:06.600 --> 00:02:10.802
methods that help us work with
the setup whatever listeners and

33
00:02:10.802 --> 00:02:13.717
things like that that we are gonna need.

34
00:02:13.717 --> 00:02:16.782
It might be some other things that we
need to do that we don't want the user to

35
00:02:16.782 --> 00:02:17.325
care about.

36
00:02:17.325 --> 00:02:19.426
We don't want the user to be able to like,

37
00:02:19.426 --> 00:02:21.779
mess with the inter
Internals of this object.

38
00:02:21.779 --> 00:02:26.484
Again, we're in object-oriented land
where we want to encapsulate as much as

39
00:02:26.484 --> 00:02:30.619
possible and only expose the very
necessary things to users.

40
00:02:30.619 --> 00:02:35.757
And so for example,
we could declare a private method

41
00:02:35.757 --> 00:02:42.608
of register the open listener where
we're gonna get this Open button,

42
00:02:42.608 --> 00:02:48.885
once we've got our dialogue set up,
once it has some stuff in it,

43
00:02:48.885 --> 00:02:53.450
and it's ready to go,
it's ready to be shown,

44
00:02:53.450 --> 00:02:59.957
once we've set up the form that's
gonna be inside of the dialogue,

45
00:02:59.957 --> 00:03:05.611
now we're ready to attach
a listener to this Open button.

46
00:03:05.611 --> 00:03:12.861
We can grab a reference to dialog because,
we'll get into that second.

47
00:03:12.861 --> 00:03:17.508
So what I'm doing is I'm grabbing the Open
button, adding an event listener.

48
00:03:17.508 --> 00:03:19.524
We've done it a million times and

49
00:03:19.524 --> 00:03:24.132
what we wanna do in that event listener
is to show the modal of this dialogue,

50
00:03:24.132 --> 00:03:27.835
sorry, of the dialogue that we
care about in this instance.

51
00:03:27.835 --> 00:03:33.624
[LAUGH] But why would we go to the trouble
of reassigning a const dialogue

52
00:03:33.624 --> 00:03:40.343
here instead of using just directly
referring to this.dialogue.showModal?

53
00:03:40.343 --> 00:03:42.301
Any ideas?

54
00:03:47.811 --> 00:03:51.358
&gt;&gt; Would that return more than one
if you had more than one other page?

55
00:03:51.358 --> 00:03:51.858
No.

56
00:03:52.898 --> 00:03:55.768
&gt;&gt; I don't think it would
return more than one.

57
00:03:57.028 --> 00:04:01.270
Is it to do with scopes and
what this mean means?

58
00:04:01.270 --> 00:04:05.810
&gt;&gt; It's to avoid my least
favorite word in JavaScript.

59
00:04:05.810 --> 00:04:09.134
And there are some differences between,
for

60
00:04:09.134 --> 00:04:13.159
example, what this does
inside of an arrow function,

61
00:04:13.159 --> 00:04:17.730
versus what this does inside of
a function keyword function.

62
00:04:17.730 --> 00:04:22.023
And there's various other things to
remember about what this is going

63
00:04:22.023 --> 00:04:25.586
to evaluate to in a different
scope than the one that we're

64
00:04:25.586 --> 00:04:28.885
in when we're in our class
declaration method land.

65
00:04:28.885 --> 00:04:35.446
And so me personally, in any other scopes,
the function body scope here,

66
00:04:35.446 --> 00:04:40.864
that is different because remember
this is gonna be a listener

67
00:04:40.864 --> 00:04:47.743
handler that's gonna be just set over
there until the click event fires.

68
00:04:47.743 --> 00:04:49.879
It gets detected by the browser,

69
00:04:49.879 --> 00:04:54.762
the browser pushes this call back to
the queue, the event loop picks it up and

70
00:04:54.762 --> 00:04:59.444
puts it in a stack when it ready, and
it's gonna call this dot dialogue.

71
00:04:59.444 --> 00:05:04.235
And if I haven't been totally clear with
myself and memorized all of the rules of

72
00:05:04.235 --> 00:05:08.956
what this evaluates to in different
types of contexts and blah, blah, blah,

73
00:05:08.956 --> 00:05:12.224
I might not be doing
what I think I'm doing.

74
00:05:12.224 --> 00:05:16.376
I might be getting undefined.showmodal.

75
00:05:16.376 --> 00:05:18.684
[LAUGH] It's not that sort of thing.

76
00:05:18.684 --> 00:05:23.464
So, this is why we wanna be careful
when we're doing things like

77
00:05:23.464 --> 00:05:28.598
declaring new functions within
other scopes with the this keyword,

78
00:05:28.598 --> 00:05:32.686
and this is one of the reasons
why I personally hate it.

79
00:05:32.686 --> 00:05:37.220
[LAUGH] But we're soldiering on.

80
00:05:37.220 --> 00:05:41.956
And so then what we want, and okay
remember this register open listener this

81
00:05:41.956 --> 00:05:46.103
isn't an entire internal thing,
it's private it has that hash.

82
00:05:46.103 --> 00:05:51.536
And it will only be allowed
by JavaScript to be called

83
00:05:51.536 --> 00:05:57.343
within these two curly braces
of the model definition.

84
00:05:57.343 --> 00:06:02.720
So interestingly even if I
extend model to a fancy modal,

85
00:06:02.720 --> 00:06:06.640
and I tried to access the parent classes,

86
00:06:06.640 --> 00:06:11.008
private method, register, open listener,

87
00:06:11.008 --> 00:06:17.891
now you can only do it within those
two curly braces right there.

88
00:06:17.891 --> 00:06:20.731
So fun with classes in JavaScript.

89
00:06:20.731 --> 00:06:21.288
Okay.
So So

90
00:06:21.288 --> 00:06:24.216
the render method here is pretty simple.

91
00:06:24.216 --> 00:06:31.310
It's basically taking whatever
the parent element is, earlier,

92
00:06:35.486 --> 00:06:42.290
Was basically given the content element
that we want to have in this modal.

93
00:06:42.290 --> 00:06:47.448
But what this is doing, and again, there's
multiple different ways to do this,

94
00:06:47.448 --> 00:06:52.808
is it's creating that open button and
it's putting both of them in the parent.

95
00:06:52.808 --> 00:06:56.928
An open button, so that you can
open the modal and the non-open.

96
00:06:56.928 --> 00:07:02.731
So therefore, not yet
visible dialogue form, dialogue and

97
00:07:02.731 --> 00:07:09.600
form Form that will then be opened
when the button gets clicked.

98
00:07:09.600 --> 00:07:13.669
And so what we're doing is we're
essentially blowing away the previous

99
00:07:13.669 --> 00:07:17.271
contents [LAUGH] of the parent and
then we are appending first, so

100
00:07:17.271 --> 00:07:21.674
we're replacing the children with
the open button, so that comes first, and

101
00:07:21.674 --> 00:07:24.366
then we're appending
a child of the dialogue.

102
00:07:25.846 --> 00:07:27.706
Now, there's a bunch of different
ways you could do this.

103
00:07:27.706 --> 00:07:29.316
You don't have to be replacing children.

104
00:07:29.316 --> 00:07:29.986
You could be appending.

105
00:07:29.986 --> 00:07:32.206
You could be doing all
kinds of different stuff.

106
00:07:32.206 --> 00:07:34.767
And again, this is a note to say,

107
00:07:34.767 --> 00:07:39.526
make sure that if you're exposing
a public method like this,

108
00:07:39.526 --> 00:07:44.211
that it is something that your
users can be calling, right?

109
00:07:44.211 --> 00:07:49.093
So in this case, I as the user
have to decide when it is time to

110
00:07:49.093 --> 00:07:52.521
render my modal content into the parent.

111
00:07:53.711 --> 00:07:58.424
We could also have automatically rendered
the element at construction time, but

112
00:07:58.424 --> 00:08:02.946
maybe in this case, we want to give our
users a little more control Or control.

113
00:08:04.496 --> 00:08:09.607
And another reason that I include
this little render method is

114
00:08:09.607 --> 00:08:14.814
that we're starting to get in
the direction of a lot of the stuff

115
00:08:14.814 --> 00:08:20.022
that the bajillion frameworks
out there that we know and love,

116
00:08:20.022 --> 00:08:25.128
kind of setup for us where we have
tooling that hooks in to other

117
00:08:25.128 --> 00:08:30.335
layers of tooling that hooks into
other layers of tooling where

118
00:08:30.335 --> 00:08:35.642
we have frameworks that can do
things like manipulate the DOM for

119
00:08:35.642 --> 00:08:40.847
us based on content or
declarative definitions in some cases,

120
00:08:40.847 --> 00:08:46.727
like React that we are making about
what we want the DOM to look like.

121
00:08:46.727 --> 00:08:52.765
We might have a framework that is creating
these objects and render methods and

122
00:08:52.765 --> 00:08:57.887
calling them for us.So this is why I
forced us to have a render [LAUGH]

123
00:08:57.887 --> 00:09:02.552
method here is just to start us
thinking about the difference

124
00:09:02.552 --> 00:09:07.584
between proposed preparing all
of the content, ready to go, and

125
00:09:07.584 --> 00:09:12.647
actually modifying the document
that is being shown on the page.

