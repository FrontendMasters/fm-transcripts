WEBVTT

1
00:00:00.000 --> 00:00:03.832
So now this brings us to,
we're gonna zoom out even further.

2
00:00:03.832 --> 00:00:09.543
First we were zoomed in to,
within a JavaScript file,

3
00:00:09.543 --> 00:00:13.030
what syntax and stuff can we use?

4
00:00:13.030 --> 00:00:17.447
And then we zoomed out to, okay, now
imagine this file is a module in a more

5
00:00:17.447 --> 00:00:20.660
complex package where
there's different modules,

6
00:00:20.660 --> 00:00:24.182
there's dependencies,
they have dependencies, etc.

7
00:00:24.182 --> 00:00:30.379
And now we're zooming out to, okay,
now how does this all work out?

8
00:00:30.379 --> 00:00:36.052
Once we have this package and
we have everything set up, we've declared

9
00:00:36.052 --> 00:00:41.818
the module type and everything, how do
we exist in a world where there is so

10
00:00:41.818 --> 00:00:47.306
much going on related to the browser side,
the server side with node.

11
00:00:47.306 --> 00:00:51.873
The package management side, which
sort of transcends both in many cases.

12
00:00:51.873 --> 00:00:57.341
But essentially what we've got here is
we've got a blessing of the modern web,

13
00:00:57.341 --> 00:01:00.932
which is that it gives us
phenomenal cosmic powers,

14
00:01:00.932 --> 00:01:05.194
if anybody remembers Aladdin,
the animated version [LAUGH].

15
00:01:05.194 --> 00:01:10.684
And also a little bit of a curse,
because we don't

16
00:01:10.684 --> 00:01:15.520
want our web pages to be
spending half an hour

17
00:01:15.520 --> 00:01:21.291
spinning up a website when I
try to load it from a URL.

18
00:01:21.291 --> 00:01:24.173
So we also want to keep our
JavaScript very small and

19
00:01:24.173 --> 00:01:26.326
we have an itty-bitty living space.

20
00:01:26.326 --> 00:01:31.280
So we wanna pack all of
the possibilities of what we can do with

21
00:01:31.280 --> 00:01:36.430
JavaScript on both sides of
the Internet into as small of a thing

22
00:01:36.430 --> 00:01:41.289
as possible to protect both
resources that we're using and

23
00:01:41.289 --> 00:01:44.810
how expensive running our JavaScript is.

24
00:01:44.810 --> 00:01:49.884
And also make sure that, whether it's
on the command line with node or

25
00:01:49.884 --> 00:01:54.786
in the backend or on the browser,
that users are not feeling the pain

26
00:01:54.786 --> 00:01:59.625
of installing an entire Internet
worth of random people's code.

27
00:01:59.625 --> 00:02:04.828
And every single bit and
byte of that information having to come

28
00:02:04.828 --> 00:02:10.337
down over wires and whatnot before
they can actually do anything.

29
00:02:10.337 --> 00:02:15.539
So yeah, so going back to our whole
historical evolution, we had,

30
00:02:15.539 --> 00:02:20.394
all right, back in the day we got
one dude in a room at Netscape.

31
00:02:20.394 --> 00:02:24.129
[LAUGH] Webpages,
just get a little JavaScript as a treat,

32
00:02:24.129 --> 00:02:27.266
a little script tag here and
there, no big deal.

33
00:02:27.266 --> 00:02:32.336
Then, through the node years,
and especially pre-ES modules,

34
00:02:32.336 --> 00:02:37.767
we get a whole ecosystem of tooling
evolving to essentially take a whole

35
00:02:37.767 --> 00:02:43.303
bunch of code that's written for
human software developers, like us.

36
00:02:43.303 --> 00:02:46.958
Not that we're pretending to be humans,
or actually extraterrestrials or

37
00:02:46.958 --> 00:02:47.764
anything, no.

38
00:02:47.764 --> 00:02:52.462
The idea that we want to
take all of that stuff and

39
00:02:52.462 --> 00:02:57.159
bundle it and prune it and
clip it and shake it and

40
00:02:57.159 --> 00:03:02.093
do all kinds of things to
make sure that it is as tiny

41
00:03:02.093 --> 00:03:06.216
as possible, as optimized as possible.

42
00:03:06.216 --> 00:03:09.869
This is where we get things
like minification and

43
00:03:09.869 --> 00:03:14.156
dropping unused bits of the code base and
all this stuff.

44
00:03:14.156 --> 00:03:18.746
So this whole ecosystem evolves
of tooling in order to bundle and

45
00:03:18.746 --> 00:03:21.901
optimize these apps that we're building.

46
00:03:21.901 --> 00:03:27.787
And now we have massive JS progress,
there could be hundreds or

47
00:03:27.787 --> 00:03:32.129
thousands, even, of modules in a codebase.

48
00:03:32.129 --> 00:03:38.596
And we're also trying to run everything
as responsively and as inexpensively,

49
00:03:38.596 --> 00:03:44.016
if we're running stuff on a server
on some cloud provider somewhere

50
00:03:44.016 --> 00:03:49.549
where we're paying for every little
tick that that processor does.

51
00:03:49.549 --> 00:03:54.386
[LAUGH] We want to be trying to manage
this complexity that has really grown

52
00:03:54.386 --> 00:03:59.144
beyond the scope of, again,
what JavaScript, little good old little

53
00:03:59.144 --> 00:04:03.373
script tag in the browser,
intended to be all those years ago.

54
00:04:03.373 --> 00:04:06.862
So we find ourselves,
much like Homer Simpson,

55
00:04:06.862 --> 00:04:11.214
looking at a map of the [LAUGH]
nuclear reactor where he works.

56
00:04:11.214 --> 00:04:15.505
Just kind of staring down this massive,
infinite,

57
00:04:15.505 --> 00:04:20.281
in some cases,
ecosystem of all these different tools and

58
00:04:20.281 --> 00:04:24.668
all these different things
we need to do to just inject

59
00:04:24.668 --> 00:04:29.657
a little script into the page
that we want to run the thing on.

60
00:04:29.657 --> 00:04:35.425
And it's all good cuz the community came
up with some tools to do that stuff for

61
00:04:35.425 --> 00:04:40.306
you, and frameworks to make your
life easier, and test things,

62
00:04:40.306 --> 00:04:43.351
and bundle things up and all this stuff.

63
00:04:43.351 --> 00:04:49.251
But [LAUGH] I don't even know
what half these logos are.

64
00:04:49.251 --> 00:04:52.204
And some of them didn't
exist a few years ago,

65
00:04:52.204 --> 00:04:55.405
some of them probably won't
exist in a few years.

66
00:04:55.405 --> 00:04:59.636
This all starts to feel a little bit,
at least if you're me, if you're anything

67
00:04:59.636 --> 00:05:04.262
like me, this starts to feel a little bit
less than, I have a helpful tool for that.

68
00:05:04.262 --> 00:05:05.416
There's an app for that.

69
00:05:05.416 --> 00:05:10.657
Yeah, there's a bajillion different tools,
what do I do?

70
00:05:10.657 --> 00:05:15.453
[LAUGH] So coming into, as a JavaScript
developer, whether you're used to

71
00:05:15.453 --> 00:05:19.653
working in another language where
there's one way to do things.

72
00:05:19.653 --> 00:05:23.920
Or whether you're like me, coming in from
another industry and switching careers and

73
00:05:23.920 --> 00:05:27.895
coming into this world of, my God,
there's all of these flashing buttons and

74
00:05:27.895 --> 00:05:29.485
lights and things everywhere.

75
00:05:29.485 --> 00:05:34.477
And everybody's shouting frameworks
on social media and blah,

76
00:05:34.477 --> 00:05:36.663
blah, blah, what do we do?

77
00:05:36.663 --> 00:05:40.194
And you start sobbing, sometimes.

78
00:05:40.194 --> 00:05:44.448
Ideally not in the office, but it happens.

79
00:05:44.448 --> 00:05:47.271
[LAUGH] I speak from experience.

80
00:05:47.271 --> 00:05:48.555
So what what do we do?

81
00:05:48.555 --> 00:05:53.910
How do we battle this overwhelm
that I think the entire community

82
00:05:53.910 --> 00:05:58.984
agrees is now a fact of life as
[LAUGH] JavaScript developers?

83
00:05:58.984 --> 00:06:02.299
And there's no easy answer to that, right?

84
00:06:02.299 --> 00:06:07.810
As there is no easy answer to, what do you
do when a nuclear reactor is melting down?

85
00:06:07.810 --> 00:06:11.355
Hopefully, not be there, but
[LAUGH] since we're gonna be in front of

86
00:06:11.355 --> 00:06:15.401
our computers trying to deal with our
JavaScript hopefully not melting down.

87
00:06:15.401 --> 00:06:20.406
What I say, personally in my
kind of way of trying to stay

88
00:06:20.406 --> 00:06:25.520
afloat in this massive ocean
of developer ecosystem is,

89
00:06:25.520 --> 00:06:29.900
all right,
there are a billion tools out there.

90
00:06:29.900 --> 00:06:32.417
Well, maybe not literally,
but one billion, okay.

91
00:06:32.417 --> 00:06:34.472
There's a lot of tools out there.

92
00:06:34.472 --> 00:06:38.948
And yeah, we can get cozy with them,
but in general,

93
00:06:38.948 --> 00:06:44.221
let's try to prioritize the things
like language features and

94
00:06:44.221 --> 00:06:46.808
the higher level concepts of,

95
00:06:46.808 --> 00:06:51.208
how do I wanna separate
the concerns in my code base?

96
00:06:51.208 --> 00:06:55.319
How do I wanna expose
functionality to my users?

97
00:06:55.319 --> 00:07:00.374
Those higher level principles, let's
keep those at the front of our mind and

98
00:07:00.374 --> 00:07:03.582
not get hung up on the tools and
the tool battles.

99
00:07:03.582 --> 00:07:05.690
Because tools come and go, and

100
00:07:05.690 --> 00:07:09.106
the principles will kind
of be generally useful.

101
00:07:09.106 --> 00:07:13.626
Even if, I don't know,
next year a whole new language

102
00:07:13.626 --> 00:07:18.445
comes out that replaces JavaScript for
once and for all and

103
00:07:18.445 --> 00:07:22.400
we go back and
do a whole bunch of other classes.

104
00:07:22.400 --> 00:07:26.944
So [LAUGH] I don't think that's gonna
happen next year, but the idea being,

105
00:07:26.944 --> 00:07:31.559
I've found it very helpful in the face
of all this overwhelm to stay focused on

106
00:07:31.559 --> 00:07:35.324
the higher level concepts and
the principles behind all of it.

107
00:07:35.324 --> 00:07:38.774
Which can be transferred even to
other languages and things, and

108
00:07:38.774 --> 00:07:41.921
not just a particular JavaScript
framework, let's say.

109
00:07:41.921 --> 00:07:46.655
Okay, that said, I also think,
like all cats, [LAUGH] that if you have

110
00:07:46.655 --> 00:07:51.710
a tool that you're used to using, and
it works, and it fits your use case,

111
00:07:51.710 --> 00:07:56.394
and it doesn't make you wanna rip
your hair out all the time, great.

112
00:07:56.394 --> 00:08:02.517
There might be some other fancy thing that
some very loud Twitter user is making

113
00:08:02.517 --> 00:08:08.450
you feel all this FOMO about, but if
your needs are being met as a developer,

114
00:08:08.450 --> 00:08:12.462
if that cat fits in that box,
it sits, it's good.

115
00:08:12.462 --> 00:08:14.572
It's fine, just keep doing your thing.

116
00:08:14.572 --> 00:08:16.721
Just get on with our lives.

117
00:08:16.721 --> 00:08:20.305
If we spent as much time as we
theoretically could with the amount of

118
00:08:20.305 --> 00:08:24.529
information on the Internet, trying to
learn every new tool that comes out and

119
00:08:24.529 --> 00:08:28.305
evaluate whether it's better than
our old tool and blah, blah blah,

120
00:08:28.305 --> 00:08:32.086
we would never get anything done,
we would never write a line of code.

121
00:08:32.086 --> 00:08:34.793
So let's just keep using
whatever's working for us.

122
00:08:34.793 --> 00:08:40.294
However, if it is not working for us,
let us not keep forcing ourselves,

123
00:08:40.294 --> 00:08:44.913
shoehorning ourselves into tools
that are really painful for

124
00:08:44.913 --> 00:08:49.200
us or for our colleagues or
whoever to use, or our users.

125
00:08:49.200 --> 00:08:54.980
Let's stay open to new things happening
and us having to learn new things.

126
00:08:54.980 --> 00:08:57.951
In web development,
that is just a fact of our lives,

127
00:08:57.951 --> 00:09:02.127
we're gonna have to keep learning about
new stuff coming out all the time.

128
00:09:02.127 --> 00:09:04.303
So that's what I say.

