WEBVTT

1
00:00:00.090 --> 00:00:05.800
So let us recap a little bit
about JavaScript and the DOM.

2
00:00:05.800 --> 00:00:10.352
First of all, can anybody tell
me what DOM stands for, yeah?

3
00:00:10.352 --> 00:00:12.021
&gt;&gt; Document object model.

4
00:00:12.021 --> 00:00:15.930
&gt;&gt; Document object model, huzzah, exactly.

5
00:00:15.930 --> 00:00:22.194
So, the document object model is sort of,
as we just discovered before,

6
00:00:22.194 --> 00:00:26.741
the way that JavaScript can
kind of conceive of what is

7
00:00:26.741 --> 00:00:32.048
happening in the HTML document
that's being browsed.

8
00:00:32.048 --> 00:00:35.288
Is that a, can we passively,
can a page be browsed?

9
00:00:35.288 --> 00:00:36.358
I don't know, but yes.

10
00:00:36.358 --> 00:00:41.797
The connection between JavaScript and
HTML is what we're thinking about here.

11
00:00:41.797 --> 00:00:46.874
So, we probably are familiar
with the global

12
00:00:46.874 --> 00:00:51.350
document, little case d, document.

13
00:00:51.350 --> 00:00:56.922
If you haven't run into it, this is
essentially a reference that JavaScript

14
00:00:56.922 --> 00:01:02.349
in the client gets to the HTML
document that is in the current page.

15
00:01:02.349 --> 00:01:07.449
So that little reference document,
which we're gonna talk a little bit

16
00:01:07.449 --> 00:01:13.319
more about later, gives us all kinds of
handy-dandy tools and tricks and things.

17
00:01:13.319 --> 00:01:17.605
For example,
we can call its method getElementById with

18
00:01:17.605 --> 00:01:23.565
a particular ID to retrieve that
element and then do things with it.

19
00:01:23.565 --> 00:01:28.988
We can also use query selectors the same
as you would in CSS file, to select for

20
00:01:28.988 --> 00:01:34.006
all of the documents, while ideally
there is only one with the same ID.

21
00:01:34.006 --> 00:01:40.613
But perhaps all of the span documents in
your entire page or something like that.

22
00:01:40.613 --> 00:01:45.538
And we can access the overall,
the kind of HTML [LAUGH] document

23
00:01:45.538 --> 00:01:49.693
element with the document
element property.

24
00:01:49.693 --> 00:01:53.026
There's all kinds of
other stuff in document,

25
00:01:53.026 --> 00:01:55.783
so, maybe now is a good time to open up.

26
00:01:55.783 --> 00:01:59.947
You can just open up whatever the home
screen is on your favorite web browser of

27
00:01:59.947 --> 00:02:01.702
choice, I use Firefox.

28
00:02:01.702 --> 00:02:08.087
So our consoles might look a little bit
different if you use something else,

29
00:02:08.087 --> 00:02:14.394
but essentially if you inspect a page,
you will see some HTML and whatnot.

30
00:02:14.394 --> 00:02:21.259
And if you go to console, hopefully you
won't get extensions complaining at you,

31
00:02:21.259 --> 00:02:26.847
but you will have a fun little
interface to play with HTML.

32
00:02:26.847 --> 00:02:31.747
So for example,
I can access this document HTML document.

33
00:02:33.447 --> 00:02:37.266
Sorry, you will get a fun
interface to play with JavaScript,

34
00:02:37.266 --> 00:02:40.654
document is the fun interface
to play with [LAUGH] HTML.

35
00:02:40.654 --> 00:02:44.740
Okay, so this is where you can be
trying out as we go through and

36
00:02:44.740 --> 00:02:47.997
as I show some code
examples on the slides.

37
00:02:47.997 --> 00:02:51.187
Try them out, poke around,
look for other things.

38
00:02:51.187 --> 00:02:56.929
Again, we're leaving a little bit
the world of everything is prescribed and

39
00:02:56.929 --> 00:03:02.242
confined in the classroom and
starting to move out to just poke around.

40
00:03:02.242 --> 00:03:06.972
So, I don't know what's on this
document element, let's see.

41
00:03:06.972 --> 00:03:11.249
We can expand it in my little
console here and we can see, whoa,

42
00:03:11.249 --> 00:03:13.772
there's all kinds of stuff on here.

43
00:03:13.772 --> 00:03:18.156
So feel free to poke around as we go,
if there's something interesting and

44
00:03:18.156 --> 00:03:20.893
you wanna look into it, go for it.

45
00:03:20.893 --> 00:03:24.713
We will have moments to all kind
of come back together, okay.

46
00:03:24.713 --> 00:03:30.377
So documents got a lot going on, getting
HTML elements is just one thing we can do,

47
00:03:30.377 --> 00:03:35.323
we can also mess with them cuz that's
what we like to do as programmers.

48
00:03:35.323 --> 00:03:37.486
It's mess with things
out from under people so

49
00:03:37.486 --> 00:03:39.995
that they have really
frustrating web experiences.

50
00:03:39.995 --> 00:03:44.945
No, [LAUGH] just kidding [LAUGH] we
will talk a little bit later about

51
00:03:44.945 --> 00:03:47.630
how to avoid messing too much.

52
00:03:47.630 --> 00:03:49.990
But we do wanna mess
with things sometimes.

53
00:03:49.990 --> 00:03:54.330
So for example, attributes
are something that HTML elements have.

54
00:03:54.330 --> 00:03:57.140
We can get them,
we can set them from JavaScript.

55
00:03:57.140 --> 00:04:01.038
So essentially, we can write
HTML from within JavaScript, and

56
00:04:01.038 --> 00:04:02.780
again, we're reviewing.

57
00:04:03.920 --> 00:04:09.800
One thing to note about attributes,
has anybody run afoul of this before?

58
00:04:09.800 --> 00:04:14.552
Sometimes if you think that
you have set an attribute that

59
00:04:14.552 --> 00:04:19.997
usually sort of is a true or
false type thing by calling, let's,

60
00:04:19.997 --> 00:04:26.145
Let's say we have a button element
that has the disabled attribute on it.

61
00:04:26.145 --> 00:04:28.561
If I want to enable that button,

62
00:04:28.561 --> 00:04:33.855
I might be tempted to right
button.SetAttribute disabled to false.

63
00:04:35.065 --> 00:04:38.195
Is that gonna work?

64
00:04:38.195 --> 00:04:42.937
No, because if I call Has an attribute
disabled again, it's still gonna be true,

65
00:04:42.937 --> 00:04:44.375
so what is going on here?

66
00:04:44.375 --> 00:04:48.579
The difference between an element having

67
00:04:48.579 --> 00:04:53.861
an attribute disabled,
and its value being falsy,

68
00:04:53.861 --> 00:04:58.795
or something that would
be falsy in JavaScript.

69
00:04:58.795 --> 00:05:03.393
HTML doesn't really have the same
falsiness truthiness paradigm as

70
00:05:03.393 --> 00:05:04.350
JavaScript.

71
00:05:04.350 --> 00:05:08.168
So some attributes only
have to exist in order

72
00:05:08.168 --> 00:05:12.990
to be interpreted by the browser
as doing what they do, so

73
00:05:12.990 --> 00:05:16.283
be mindful of that as we go, yeah,
&gt;&gt; Is

74
00:05:16.283 --> 00:05:19.390
that because false is
evaluated as a string?

75
00:05:19.390 --> 00:05:24.428
&gt;&gt; Exactly, and so
sometimes you'll also see set attribute,

76
00:05:24.428 --> 00:05:32.514
you'll see things like,
I don't know, set attribute,

77
00:05:38.895 --> 00:05:42.911
Disabled to empty string.

78
00:05:44.655 --> 00:05:47.713
There's no button here,
but you get the idea.

79
00:05:47.713 --> 00:05:52.401
This would essentially disable
the element, even though it's

80
00:05:52.401 --> 00:05:57.693
setting it to empty string,
because that means the attribute exists.

81
00:05:57.693 --> 00:06:02.249
It has a value, HTML doesn't care what
the value of the disabled attribute is,

82
00:06:02.249 --> 00:06:04.630
it just cares that the attribute exists.

83
00:06:05.940 --> 00:06:07.940
The browser cares that
the [LAUGH] attribute exists.

84
00:06:07.940 --> 00:06:10.939
So, that's something you'll see sometimes,

85
00:06:10.939 --> 00:06:16.670
it's like why are they setting this to a
value if we're trying for it not to exist?

86
00:06:16.670 --> 00:06:21.088
Because the web has grown bit
by bit over the decades, and

87
00:06:21.088 --> 00:06:25.057
not everything's super
consistent all the time.

88
00:06:25.057 --> 00:06:29.182
So just be mindful that you might, if you
have a weird bug related to that sort of

89
00:06:29.182 --> 00:06:33.047
thing where you're, why is that
attribute still being picked up?

90
00:06:33.047 --> 00:06:37.877
Just make sure that you have
deleted the attribute with

91
00:06:37.877 --> 00:06:42.917
the delete attribute method,
instead of just setting it

92
00:06:42.917 --> 00:06:47.957
to what JavaScript would think
of as a particular value,

93
00:06:47.957 --> 00:06:52.481
but the browser and
the HTML parser doesn't care.

94
00:06:53.531 --> 00:06:56.400
So fun facts [LAUGH].

95
00:06:56.400 --> 00:06:58.561
All right, now, event handlers,

96
00:06:58.561 --> 00:07:02.536
are something we've probably
also encountered in JavaScript.

97
00:07:02.536 --> 00:07:07.567
And this also gets at what we're gonna
be talking about a lot in this course.

98
00:07:07.567 --> 00:07:12.835
The contextualization of JavaScript within
the web browser, where a lot of other

99
00:07:12.835 --> 00:07:17.812
stuff that's not exactly JavaScript or
not, at all JavaScript is going on.

100
00:07:17.812 --> 00:07:22.444
And one of the things that's going on is
events are being fired here and there.

101
00:07:22.444 --> 00:07:27.209
So there are events like clicks when
the user clicks on something, or

102
00:07:27.209 --> 00:07:32.158
there are load events when a page or
what have you has finished loading.

103
00:07:32.158 --> 00:07:37.295
Or there are all kinds of other
different events that we can then.

104
00:07:37.295 --> 00:07:42.027
Okay, so these events we can handle in
JavaScript to do things based on user

105
00:07:42.027 --> 00:07:47.224
interaction, which is what we want to be
doing most of the time as web developers.

106
00:07:47.224 --> 00:07:50.124
We wanna be building useful
experiences for people, right?

107
00:07:50.124 --> 00:07:55.034
Which means that people need to be
able to interact with websites,

108
00:07:55.034 --> 00:07:58.978
and that is why JavaScript
exists in the first place,

109
00:07:58.978 --> 00:08:04.258
because it allows us to add some more
flexible interactivity to pages.

110
00:08:04.258 --> 00:08:09.456
So we're gonna be writing
a lot of event handlers, and

111
00:08:09.456 --> 00:08:16.020
the general syntax of we pass in
the name of the event we wanna handle.

112
00:08:16.020 --> 00:08:19.252
And then the handler function,

113
00:08:19.252 --> 00:08:23.918
we're gonna talk a lot
more about that later,

114
00:08:23.918 --> 00:08:30.632
what we want to happen when that
event occurs on the given element.

