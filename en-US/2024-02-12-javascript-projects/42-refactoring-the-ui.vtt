WEBVTT

1
00:00:00.032 --> 00:00:05.952
The task that now stands in front
of us is to make it make sense and

2
00:00:05.952 --> 00:00:12.904
put all of this in a reasonable fashion
and order and organize ourselves.

3
00:00:12.904 --> 00:00:16.808
So I'm just zooming out a little bit so
we can get a little bit more of a typical

4
00:00:16.808 --> 00:00:19.436
view of what it would look
like on our own machines.

5
00:00:19.436 --> 00:00:21.365
So one thing we might want to do is,

6
00:00:21.365 --> 00:00:23.967
I don't know put the canvas
inside of the app.

7
00:00:23.967 --> 00:00:31.972
Maybe I'm just gonna move that up
to right above this card thing.

8
00:00:31.972 --> 00:00:37.441
Just so it's between the header and
the button the stuff.

9
00:00:37.441 --> 00:00:40.522
No big difference except
that before it was rendering

10
00:00:40.522 --> 00:00:43.473
to the side because of
the styles that are applied.

11
00:00:43.473 --> 00:00:47.960
So now we've got a nice
centered column of nothingness.

12
00:00:47.960 --> 00:00:52.833
And what we can do now is start to

13
00:00:52.833 --> 00:00:56.773
manipulate our canvas.

14
00:00:56.773 --> 00:00:57.793
But first again,

15
00:00:57.793 --> 00:01:02.564
are we feeling uncomfortable about having
these two different scripts coming in?

16
00:01:02.564 --> 00:01:08.072
It's not necessarily a bad thing, but in a
lot of projects and frameworks especially,

17
00:01:08.072 --> 00:01:12.911
you will find that there's usually one
main entry point and that that is where

18
00:01:12.911 --> 00:01:17.097
then everything else that is
happening on the page gets imported.

19
00:01:17.097 --> 00:01:21.256
And it does sort of make it a little
bit easier to follow those breadcrumbs,

20
00:01:21.256 --> 00:01:23.369
like when something's going wrong,

21
00:01:23.369 --> 00:01:27.082
there's just a few fewer places
that things could be coming from.

22
00:01:27.082 --> 00:01:33.273
So what we can do is go back to our
main.js and import this script from there.

23
00:01:33.273 --> 00:01:38.081
And again, this is all leveraging kind
of a combination of node modules and

24
00:01:38.081 --> 00:01:42.066
how one module can import another
module and another module.

25
00:01:42.066 --> 00:01:47.711
And when it runs in the browser,
the browser's modules and Veet's tooling

26
00:01:47.711 --> 00:01:53.637
that is helping us kind of shuffle new
source code into the project constantly.

27
00:01:53.637 --> 00:01:57.730
Because our dev server is
running because earlier, and

28
00:01:57.730 --> 00:02:01.480
we ran NPM run dev and
we never hit Ctrl+C to end it.

29
00:02:01.480 --> 00:02:03.228
So that's where we're at.

30
00:02:03.228 --> 00:02:06.918
Okay, so I'm gonna delete this, cool.

31
00:02:06.918 --> 00:02:11.335
And now, everything looks the same,
but we are now missing our camera.

32
00:02:13.599 --> 00:02:18.379
So what if we go in here, where we're in
main.js, where we're importing our style,

33
00:02:18.379 --> 00:02:23.158
and we also import, Camera.

34
00:02:23.158 --> 00:02:26.058
This get video function.

35
00:02:26.058 --> 00:02:29.911
How can I do that?

36
00:02:29.911 --> 00:02:30.862
We talked about it earlier.

37
00:02:30.862 --> 00:02:32.998
Yeah.
&gt;&gt; You can export it.

38
00:02:32.998 --> 00:02:37.510
&gt;&gt; So first of all, I wanna make
sure this is an importable function,

39
00:02:37.510 --> 00:02:42.347
which means it has been exported and
just like synchronous functions,

40
00:02:42.347 --> 00:02:44.786
I can export an a sync function too.

41
00:02:44.786 --> 00:02:49.639
Now, interestingly, we'll see,
VS Code is telling me to grade

42
00:02:49.639 --> 00:02:54.350
out this video value because now
it's not being used for anything.

43
00:02:54.350 --> 00:02:58.973
And so maybe I don't actually want
to be grabbing that video in here,

44
00:02:58.973 --> 00:03:03.279
maybe I just want this camera.js
to be like a utility module with

45
00:03:03.279 --> 00:03:07.184
the functions that I need,
but not actually do anything,

46
00:03:07.184 --> 00:03:10.883
run any imperative commands,
like get me that video.

47
00:03:10.883 --> 00:03:15.497
Just tell me how getting a video works.

48
00:03:15.497 --> 00:03:18.679
And if I want to work with that video,

49
00:03:18.679 --> 00:03:22.889
I probably want to spit
it out from the function,

50
00:03:22.889 --> 00:03:27.935
maybe return something other
than undefined, perhaps.

51
00:03:27.935 --> 00:03:34.445
So I can return that video
element here if I want to.

52
00:03:34.445 --> 00:03:37.946
And again,
this is just one way to take a selfie.

53
00:03:37.946 --> 00:03:43.839
[LAUGH], but what we're starting
to get at is, now I'm sort of,

54
00:03:43.839 --> 00:03:48.875
I am both the developer and
the user of my own code base.

55
00:03:48.875 --> 00:03:55.718
So same as before, when we were deciding
what the API should be for our models and

56
00:03:55.718 --> 00:04:01.862
deciding what public methods and
things we want our objects to expose.

57
00:04:01.862 --> 00:04:09.217
Similarly, our modules, we want to decide
what do we want to export from here and

58
00:04:09.217 --> 00:04:15.165
what do we maybe not want to export but
just have be a secret value,

59
00:04:15.165 --> 00:04:19.195
that is, I don't know, very useful here.

60
00:04:19.195 --> 00:04:24.537
If I'm not exporting it
then when I go to main and

61
00:04:24.537 --> 00:04:29.747
I start importing stuff
from a camera source,

62
00:04:29.747 --> 00:04:36.160
[LAUGH], source camera if I
try to import like the secret,

63
00:04:36.160 --> 00:04:43.927
it VS Code is not even autocompleting
it because it's not exported.

64
00:04:43.927 --> 00:04:51.326
But as soon as I type, Getvideo,
VS Code starts autocompleting.

65
00:04:51.326 --> 00:04:53.087
It's like, I know what that is.

66
00:04:53.087 --> 00:04:57.689
That is a function called getvideo
that returns a promise to an HTML

67
00:04:57.689 --> 00:04:58.846
video element.

68
00:04:58.846 --> 00:05:03.271
And so this is now where we're starting
to get into all of the magic and

69
00:05:03.271 --> 00:05:07.316
the VS Code IntelliSense so
that we're in the autocomplete and

70
00:05:07.316 --> 00:05:12.049
the introspection of what's happening
here and there is probably a whole

71
00:05:12.049 --> 00:05:16.501
course on using VS code effectively,
[LAUGH], on Frontend Masters.

72
00:05:16.501 --> 00:05:18.613
If there's not there will
be soon I'm sure you.

73
00:05:18.613 --> 00:05:22.798
And so there's a whole much more,
like fanciness that can happen here.

74
00:05:22.798 --> 00:05:27.488
But [INAUDIBLE] say we're
starting to get the benefits.

75
00:05:27.488 --> 00:05:29.884
&gt;&gt; We do have a course
called VS Code can do that.

76
00:05:29.884 --> 00:05:33.916
&gt;&gt; VS Code can do that is the course you
wanna check out if you wanna see what else

77
00:05:33.916 --> 00:05:34.757
VS Code can do.

78
00:05:34.757 --> 00:05:41.173
Okay, so in any case in this I believe
will even work if I start importing get,

79
00:05:41.173 --> 00:05:46.833
if I start typing getvideo, VS Code is,
I know where you get video.

80
00:05:46.833 --> 00:05:50.093
It lives in source/camera.

81
00:05:50.093 --> 00:05:52.625
So I can just tab and
the whole line gets written for me.

82
00:05:52.625 --> 00:05:55.159
And I don't even have copilot or
anything going on here.

83
00:05:55.159 --> 00:05:58.680
This is just VS Code
knowing the module system.

84
00:05:58.680 --> 00:06:05.201
Because of some JavaScript aware tooling
that is set up in our installation.

85
00:06:05.201 --> 00:06:10.174
So definitely go check out that VS Code
course if you wanna fancy up your

86
00:06:10.174 --> 00:06:11.532
dev environment.

