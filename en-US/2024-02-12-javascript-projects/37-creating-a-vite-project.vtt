WEBVTT

1
00:00:00.150 --> 00:00:01.840
So how do we do that?

2
00:00:01.840 --> 00:00:06.354
Well, luckily,
there is a handy-dandy bootstrapper

3
00:00:06.354 --> 00:00:10.973
project out there by the Vite
team called create-vite.

4
00:00:10.973 --> 00:00:16.772
Which is analogous to people might
have heard of other create projects,

5
00:00:16.772 --> 00:00:22.815
like create-react-app or
create-next-app or so on and so forth.

6
00:00:22.815 --> 00:00:26.048
And these are becoming
increasingly popular,

7
00:00:26.048 --> 00:00:31.296
because you can use them at the command
line with npm create, and then the name

8
00:00:31.296 --> 00:00:36.175
of the thing that has a creator that
you want to start a new project from.

9
00:00:36.175 --> 00:00:37.912
In this case, Vite.

10
00:00:37.912 --> 00:00:42.138
And, again, we can do this at
syntax to like specify a version.

11
00:00:42.138 --> 00:00:46.277
So if we run npm create
vite@latest in a parent

12
00:00:46.277 --> 00:00:50.629
directory where we want
to have our new project,

13
00:00:50.629 --> 00:00:57.428
we will get a ready-to-go working
Vite app running out of the box.

14
00:00:57.428 --> 00:01:00.892
What this is doing under the hood will

15
00:01:00.892 --> 00:01:05.704
be revealed to us in the command
line when we try it.

16
00:01:05.704 --> 00:01:10.753
Okay, so what I'm gonna do is
go up into a parent directory,

17
00:01:10.753 --> 00:01:15.308
and I'm going to run,
let me know if this is too small.

18
00:01:15.308 --> 00:01:17.436
I'm gonna run npm create vite.

19
00:01:17.436 --> 00:01:21.534
And, again, I'm outside of the,
where am I right now?

20
00:01:21.534 --> 00:01:24.899
vite@latest.

21
00:01:24.899 --> 00:01:29.419
And this is a, you might see an extra
line here where it's like I'm

22
00:01:29.419 --> 00:01:32.906
gonna install this package
called create-vite.

23
00:01:32.906 --> 00:01:34.926
Are you cool with that?

24
00:01:34.926 --> 00:01:38.226
And what it's doing is
installing that globally so

25
00:01:38.226 --> 00:01:41.536
that you can use it wherever
to start a new project.

26
00:01:41.536 --> 00:01:44.470
So this is one of those cases where
like a package is globally useful.

27
00:01:44.470 --> 00:01:47.264
Because this is similar to npm init or
something,

28
00:01:47.264 --> 00:01:49.936
something that we might
use all over the place.

29
00:01:49.936 --> 00:01:55.344
And then what it's doing is essentially
that package has a whole bunch

30
00:01:55.344 --> 00:02:00.674
of templates that it is helping us
pull from to get some starter code.

31
00:02:00.674 --> 00:02:02.108
So we're going to walk through the steps.

32
00:02:02.108 --> 00:02:04.431
Okay, project name.

33
00:02:04.431 --> 00:02:10.861
I'm going to call this
awesome-vite-starter.

34
00:02:12.181 --> 00:02:14.441
You can call it something more fun.

35
00:02:14.441 --> 00:02:19.517
And then we get a whole bunch of [LAUGH]
colorful choices of different frameworks,

36
00:02:19.517 --> 00:02:22.442
Vue and React and Preact and
Svelte and Solid.

37
00:02:22.442 --> 00:02:26.597
We're going to choose Vanilla,
Vanilla JavaScript, just JavaScript.

38
00:02:28.627 --> 00:02:31.816
And the other thing that's becoming
increasingly [LAUGH] popular all over

39
00:02:31.816 --> 00:02:34.587
[LAUGH] JavaScript land,
it seems, is TypeScript.

40
00:02:34.587 --> 00:02:37.994
So a lot of these tools also
have support for TypeScript.

41
00:02:37.994 --> 00:02:39.847
Right now, we're not doing that.

42
00:02:39.847 --> 00:02:40.481
So we're gonna choose JavaScript.

43
00:02:43.121 --> 00:02:46.982
And now it's saying I'm scaffolding
this project in a directory named for

44
00:02:46.982 --> 00:02:50.474
whatever you told me the project
should be named, and I'm done.

45
00:02:50.474 --> 00:02:52.244
And now, here's what you should do.

46
00:02:52.244 --> 00:02:56.411
Move into that new directory,
which we're going to do.

47
00:02:58.432 --> 00:03:02.806
Run npm install, no further arguments,
which is going to.

48
00:03:02.806 --> 00:03:07.784
Well, first of all, let's just see what's
in here in this directory right out of

49
00:03:07.784 --> 00:03:09.745
the box, we got a package json.

50
00:03:11.165 --> 00:03:13.512
That means that if I run
npm install in here,

51
00:03:13.512 --> 00:03:17.325
it's going to look at that package.json
and do whatever it said to do.

52
00:03:18.525 --> 00:03:21.791
So we're NPM installing,
it added 10 packages.

53
00:03:21.791 --> 00:03:26.418
Interestingly, fewer than cowsay
[LAUGH] and is auditing them and

54
00:03:26.418 --> 00:03:29.574
everything, same as before.

55
00:03:29.574 --> 00:03:31.735
And then, the instructions before said,

56
00:03:31.735 --> 00:03:34.644
now we can do something
called npm run dev.

57
00:03:34.644 --> 00:03:42.063
So we're just gonna implicitly trust
that this is fine, and npm run dev.

58
00:03:42.063 --> 00:03:44.695
Okay, now, you're just going to
probably not say all of this.

59
00:03:44.695 --> 00:03:47.635
All of these ports are in use because you
keep doing this so many times, Anjana.

60
00:03:47.635 --> 00:03:54.295
But it's going to essentially,
what it's done, npm run dev.

61
00:03:54.295 --> 00:03:56.579
That's got to be a script, so
we can go look at that in a second.

62
00:03:56.579 --> 00:04:00.486
But right now, that script is really
just running Vite, the program Vite.

63
00:04:00.486 --> 00:04:01.856
Which is its own module.

64
00:04:01.856 --> 00:04:05.555
And what Vite is doing is
running a development server,

65
00:04:05.555 --> 00:04:09.964
that's this localhost thing,
that is essentially serving my new

66
00:04:09.964 --> 00:04:13.996
amazing Vite project up for
me locally, just on my machine.

67
00:04:15.006 --> 00:04:19.256
Now if I go to this link, and
then I'll zoom in a little bit,

68
00:04:19.256 --> 00:04:24.702
I have a pretty looking page, but
all right, does it actually do anything?

69
00:04:24.702 --> 00:04:26.502
Let's try clicking this button.

70
00:04:26.502 --> 00:04:33.406
And this is sort of MVP, minimum
viable app [LAUGH] for a Vite project,

71
00:04:33.406 --> 00:04:39.262
but it is a functional
client-side JavaScript program.

72
00:04:39.262 --> 00:04:44.466
So what we've got is a very great program
that has a button that keeps a counter.

73
00:04:44.466 --> 00:04:48.793
And it is running client-side, so like if
I refresh, it's not saved in a database or

74
00:04:48.793 --> 00:04:49.403
anything.

75
00:04:49.403 --> 00:04:53.797
But we're gonna look at a second at
why there's actually like a whole

76
00:04:53.797 --> 00:04:55.322
bunch of goodies here.

77
00:04:55.322 --> 00:04:59.638
Which then now we can use to
start making our lives easier and

78
00:04:59.638 --> 00:05:03.265
not having to download
Anjana's .html files and

79
00:05:03.265 --> 00:05:06.907
refresh them in our browser
every time we want to.

80
00:05:06.907 --> 00:05:09.747
We're going to poke around
in Vite a little bit.

81
00:05:09.747 --> 00:05:14.433
Why don't we do what every
inspired dev does and

82
00:05:14.433 --> 00:05:19.013
go poke around at stuff
we don't understand.

83
00:05:19.013 --> 00:05:24.099
So let us go into now.

84
00:05:24.099 --> 00:05:29.003
All right, I'm going to Ctrl+C
to kill this dev server.

85
00:05:29.003 --> 00:05:34.554
I'm going to open a new code window in my
awesome-vite-starter project, which again,

86
00:05:34.554 --> 00:05:39.843
I'm gonna make this a little smaller so
that it all fits [LAUGH] on screen.

87
00:05:39.843 --> 00:05:42.071
Okay, what have we got here?

88
00:05:42.071 --> 00:05:42.831
Let's find out.

89
00:05:42.831 --> 00:05:45.191
Well, we know we have a package.json.

90
00:05:45.191 --> 00:05:46.631
That's the starting point of NPM.

91
00:05:46.631 --> 00:05:47.491
So let's look at that.

92
00:05:47.491 --> 00:05:49.361
Let's see what's going on.

93
00:05:49.361 --> 00:05:51.991
Okay, stuff we recognize.

94
00:05:51.991 --> 00:05:56.791
Type: module, cool, private true,
interesting, interesting.

95
00:05:56.791 --> 00:06:00.101
You can have private npm modules.

96
00:06:00.101 --> 00:06:02.411
You can have npm packages,
you can have public packages,

97
00:06:02.411 --> 00:06:04.359
depending on who you want
to be able to access it.

98
00:06:05.679 --> 00:06:10.819
We've got a type module, so we know we
can use that import statement, awesome.

99
00:06:10.819 --> 00:06:12.739
And we have some scripts out of the box.

100
00:06:14.309 --> 00:06:19.429
We already got familiar with dev,
which we did npm run dev.

101
00:06:19.429 --> 00:06:23.824
And that runs the local development
server, which essentially is

102
00:06:23.824 --> 00:06:28.227
only useful to me as a developer,
as I am working on this code base.

103
00:06:29.257 --> 00:06:35.540
But we also have the command build,
which is just a shortcut to vite build,

104
00:06:35.540 --> 00:06:41.351
which is going to build our site or
app in this case, for production.

105
00:06:42.371 --> 00:06:46.941
So this is going to do some different
things than in the development

106
00:06:46.941 --> 00:06:48.011
environment.

107
00:06:48.011 --> 00:06:52.437
And so now, we're getting into
the world of, our lives as JavaScript

108
00:06:52.437 --> 00:06:56.938
developers often happen in a world
that does not look exactly the same as

109
00:06:56.938 --> 00:07:01.015
the world where our end users
are gonna ultimately see our code.

110
00:07:01.015 --> 00:07:06.064
For example, we wanna be able to
do things like edit a file and

111
00:07:06.064 --> 00:07:08.440
instantly see the changes.

112
00:07:08.440 --> 00:07:12.958
And we wanna be able to do things like
mess around with some of the settings

113
00:07:12.958 --> 00:07:17.570
without it kind of breaking everything or
changing all of our file names.

114
00:07:17.570 --> 00:07:20.522
[LAUGH] It's not that
not breaking anything.

115
00:07:20.522 --> 00:07:25.469
But we, in order to do that, might lose
some of the optimizations and some of the,

116
00:07:25.469 --> 00:07:30.061
so it might be a trade-off, rather,
between some of the optimizations and

117
00:07:30.061 --> 00:07:34.186
some of the polish and some of
the fanciness that we might want to do.

118
00:07:34.186 --> 00:07:38.498
Some of the processing that
we might wanna do on our code

119
00:07:38.498 --> 00:07:41.234
before we ship it out to the world.

120
00:07:41.234 --> 00:07:45.307
Thinking of the old days when you used to
get like a CD or a floppy disk even in

121
00:07:45.307 --> 00:07:49.935
the mail, because some developer was like,
all right, this code is good enough.

122
00:07:49.935 --> 00:07:54.654
I'm putting it on this physical media and
I am physically sending it to you.

123
00:07:54.654 --> 00:07:56.321
Now we don't do it physically,

124
00:07:56.321 --> 00:08:00.443
but we do have to send our website to
the internet for people to look at.

125
00:08:00.443 --> 00:08:02.653
So that is what the build command does.

126
00:08:02.653 --> 00:08:08.053
It does some different things than
when we are running this site locally.

127
00:08:08.053 --> 00:08:13.252
There is also a preview command,
which essentially runs a local server

128
00:08:13.252 --> 00:08:18.550
that shows you the built version of
your site rather than the diversion.

129
00:08:18.550 --> 00:08:22.772
So we can we can poke around with it
this and see what that looks like.

130
00:08:22.772 --> 00:08:27.030
But let us continue exploring
what's happening here.

131
00:08:27.030 --> 00:08:32.055
We have a new section in our package.json,
devDependencies.

132
00:08:34.495 --> 00:08:38.720
And we don't have that dependencies that
we had before when we installed cowsay.

133
00:08:38.720 --> 00:08:43.234
And this brings up a great
point that in npm,

134
00:08:43.234 --> 00:08:48.116
in Node packages,
there are some dependencies

135
00:08:48.116 --> 00:08:53.924
that we only need as developers for
this project.

136
00:08:53.924 --> 00:08:59.971
Tooling, test suites,
whatever other conveniences we might need,

137
00:08:59.971 --> 00:09:04.797
and things that help us deal
with our types and whatnot.

138
00:09:06.207 --> 00:09:07.844
But then there are dependencies, and so

139
00:09:07.844 --> 00:09:11.327
those are things we need at the time
that we're writing the software.

140
00:09:11.327 --> 00:09:14.326
But then there are dependencies that
we need at the time we are running

141
00:09:14.326 --> 00:09:17.707
the software to actually do
the thing that the software does.

142
00:09:17.707 --> 00:09:19.797
And those are the regular dependencies.

143
00:09:19.797 --> 00:09:27.195
So dev dependencies will not be installed
when somebody just installs our project.

144
00:09:29.415 --> 00:09:31.535
Sorry, when somebody
just uses our project.

145
00:09:31.535 --> 00:09:36.127
They will only be installed for
us if we are in that project and

146
00:09:36.127 --> 00:09:40.555
it's not some dependency up
the tree of our node modules.

147
00:09:40.555 --> 00:09:44.414
So this helps keep that tree a little bit
smaller, even though it's still massive.

