WEBVTT

1
00:00:00.000 --> 00:00:04.140
Let us talk, so far we've been talking
about JavaScript in the browser.

2
00:00:04.140 --> 00:00:08.418
And we've been getting a lot of great life
lessons about all of the many things that

3
00:00:08.418 --> 00:00:11.332
are happening in the browser
that are not JavaScript and

4
00:00:11.332 --> 00:00:14.067
the fact that JavaScript
is typically client side.

5
00:00:14.067 --> 00:00:20.324
JavaScript is running within that
whole magical universe of mystical,

6
00:00:20.324 --> 00:00:26.698
incantations, and event loops and
built in API's and so on and so forth.

7
00:00:26.698 --> 00:00:34.046
But, That was 1995 JavaScript when
JavaScript only lived in browsers.

8
00:00:34.046 --> 00:00:39.014
And now, in 2023, or
whatever year it [LAUGH] happens to be,

9
00:00:39.014 --> 00:00:43.257
in 2023 Very JavaScript
lives all over the place.

10
00:00:43.257 --> 00:00:45.135
And, so that is where our,

11
00:00:45.135 --> 00:00:50.060
our friend who you may be acquainted
with already, Node.js comes in.

12
00:00:50.060 --> 00:00:55.216
So Node.js, lets us do some JavaScripting
without that browser context of

13
00:00:55.216 --> 00:01:00.706
all of the magical, wonderful, thank
you browsers, things that are going on.

14
00:01:00.706 --> 00:01:05.388
So, [COUGH] Node.js some
folks have maybe written and

15
00:01:05.388 --> 00:01:10.920
worked with node before and
used it, but just as a review.

16
00:01:10.920 --> 00:01:12.526
So, [COUGH] Node.js,

17
00:01:12.526 --> 00:01:17.943
which you can read all about in like
thousands of blog posts on the internet.

18
00:01:17.943 --> 00:01:21.305
Is essentially,

19
00:01:22.958 --> 00:01:27.579
In an attempt to allow us to run
JavaScript, which again was developed as

20
00:01:27.579 --> 00:01:32.068
a language to run inside of the browser
to do things without a browser.

21
00:01:32.068 --> 00:01:36.711
So to do things on the server-side,
or perhaps not even on a server, but

22
00:01:36.711 --> 00:01:39.389
command line tools and things like that.

23
00:01:39.389 --> 00:01:44.502
So it's a way for us to take our
skills as JavaScript developers and

24
00:01:44.502 --> 00:01:48.611
bring them outside of
the client side environment and

25
00:01:48.611 --> 00:01:51.090
into all kinds of other places.

26
00:01:51.090 --> 00:01:55.964
And so, one downside of that is
like all those awesome built in

27
00:01:55.964 --> 00:02:01.334
browser things that we've now kind
of gotten used to working with.

28
00:02:01.334 --> 00:02:06.540
If we're not in the browser anymore,
we don't have all the browser magic and

29
00:02:06.540 --> 00:02:10.081
all of those built-in APIs and
all of those things.

30
00:02:10.081 --> 00:02:16.065
But one of the upsides is that node
has its own things that the browser,

31
00:02:16.065 --> 00:02:20.945
you know, may or
may not provide in terms of things that.

32
00:02:20.945 --> 00:02:26.113
For example, will give us access to
the underlying system the user's,

33
00:02:26.113 --> 00:02:30.363
operating system, file system,
all this stuff, right?

34
00:02:30.363 --> 00:02:34.158
When we're outside of the browser,
we don't have that layer of kind of

35
00:02:34.158 --> 00:02:38.290
indirection of talking to the outside
environment of the user's computer.

36
00:02:38.290 --> 00:02:40.369
So it's a trade off, right?

37
00:02:40.369 --> 00:02:44.180
We're, we're losing some of
the browser front end convenience, but

38
00:02:44.180 --> 00:02:47.815
we're also gaining some cool things
that we can't do client side.

39
00:02:47.815 --> 00:02:53.484
And [COUGH] there is a fair bit
of the some of the most commonly

40
00:02:53.484 --> 00:03:01.058
used browser conveniences that make
JavaScript go like the event loop.

41
00:03:01.058 --> 00:03:03.346
That have been sort of
re-implemented in node.

42
00:03:03.346 --> 00:03:07.876
So node has its own event loop so
that we can still use the mental model

43
00:03:07.876 --> 00:03:12.819
of [COUGH] asynchronous JavaScript,
and events firing, and all of that.

44
00:03:12.819 --> 00:03:16.817
Even though we're not talking
about browser events necessarily.

45
00:03:16.817 --> 00:03:20.721
And there's also implementations of
things like set to timeouts, right,

46
00:03:20.721 --> 00:03:24.930
which now the underlying implementation
is gonna look different than set timeout

47
00:03:24.930 --> 00:03:25.790
in the browser.

48
00:03:25.790 --> 00:03:29.834
But we'll still be able to use
some of those same features and

49
00:03:29.834 --> 00:03:34.612
whatnot because node has re-implemented
them for us, essentially.

50
00:03:34.612 --> 00:03:38.042
And so, and just a note in terms of the
engine that's running, so we talked about

51
00:03:38.042 --> 00:03:41.379
how there's different JavaScript engines,
like V8, like SpiderMonkey.

52
00:03:41.379 --> 00:03:46.422
So V8 is essentially what's
powering the JavaScript in node.

53
00:03:46.422 --> 00:03:48.895
And so that is where you will often,

54
00:03:48.895 --> 00:03:54.516
like when it comes to diving deep on the
performance of node and things like that.

55
00:03:54.516 --> 00:03:59.493
Often you'll end up needing to learn
more details about V8, so good to know.

56
00:04:00.588 --> 00:04:02.865
Hope we all like drinking our vegetables.

57
00:04:02.865 --> 00:04:08.518
All right, so,
do folks have node installed?

58
00:04:08.518 --> 00:04:11.488
If you already do, fabulous.

59
00:04:11.488 --> 00:04:16.893
Maybe check what version you're running
and make sure you've got the latest LTS.

60
00:04:16.893 --> 00:04:22.639
Which I wanna say is 2010 at the time
of filming, but I'm not sure, so check.

61
00:04:22.639 --> 00:04:28.059
And you can download this,
if you don't have it, from nodejs.org.

62
00:04:28.059 --> 00:04:32.926
I think it will very helpfully immediately
point you to [LAUGH] the downloads for

63
00:04:32.926 --> 00:04:34.561
your particular system.

64
00:04:34.561 --> 00:04:41.389
So, if you don't have it at the moment,
it's a great time to go to nodejs.org.

65
00:04:41.389 --> 00:04:45.650
Grab that download and
get it installed on your system and

66
00:04:45.650 --> 00:04:50.499
it's usable on Mac, Windows,
Linux, all of the things.

67
00:04:50.499 --> 00:04:54.769
So there is a node for you.

68
00:04:54.769 --> 00:04:58.838
So you know that you have
node if at the command line,

69
00:04:58.838 --> 00:05:02.064
you can type the node command.

70
00:05:02.064 --> 00:05:04.147
And it knows what you're
talking about [LAUGH].

71
00:05:04.147 --> 00:05:05.308
And so, for example,

72
00:05:05.308 --> 00:05:09.053
there's a version flag that you can
use to check which version you have.

73
00:05:09.053 --> 00:05:15.238
And if you just type node without anything
else, you'll get an interactive rebel.

74
00:05:15.238 --> 00:05:18.695
Read evaluate print loop
of JavaScript that's sort

75
00:05:18.695 --> 00:05:21.734
of similar to the console in the browser.

76
00:05:21.734 --> 00:05:26.094
That lets you do quick checks of, like,
does that thing have a this thing?

77
00:05:26.094 --> 00:05:28.934
And the type that we've
been doing in the console.

78
00:05:28.934 --> 00:05:31.763
Okay, so we're gonna be switching

79
00:05:31.763 --> 00:05:36.115
gears here to stop looking
at such an elaborate thing.

80
00:05:36.115 --> 00:05:39.018
We could be looking at
the terminal in VS Code, but

81
00:05:39.018 --> 00:05:41.656
we're just gonna look
at a terminal Window.

82
00:05:41.656 --> 00:05:45.138
And so
now we're gonna enter the command line,

83
00:05:45.138 --> 00:05:50.548
world where we're gonna be doing a bunch
of things from our command line.

84
00:05:50.548 --> 00:05:51.404
Now, is that the only way
to interact with node?

85
00:05:51.404 --> 00:05:56.146
Is that the only way to interact with
some of the tools that we're gonna be

86
00:05:56.146 --> 00:05:57.097
using today?

87
00:05:57.097 --> 00:05:57.994
No.

88
00:05:57.994 --> 00:06:02.702
But it is most common and like in terms
of the documentation that you'll find for

89
00:06:02.702 --> 00:06:06.488
all kinds of tools out there and
libraries and whatnot.

90
00:06:06.488 --> 00:06:10.594
They're basically all gonna give you
commands to run at the command line, so

91
00:06:10.594 --> 00:06:12.060
we're gonna do this here.

92
00:06:12.060 --> 00:06:12.878
And yes,

93
00:06:12.878 --> 00:06:18.818
you can open a terminal in VS Code to
do this if you prefer to have that.

94
00:06:20.288 --> 00:06:24.708
But I'm just in my computer's
terminal saying, all right,

95
00:06:24.708 --> 00:06:28.278
so let's make sure that I
have node cuz honestly.

96
00:06:28.278 --> 00:06:29.981
Who knows at this [LAUGH] point?

97
00:06:29.981 --> 00:06:32.895
[LAUGH] So yeah, so
I just type node and here we are.

98
00:06:32.895 --> 00:06:36.965
So for example, one of the things
that node has reimplemented for

99
00:06:36.965 --> 00:06:38.005
us is a console.

100
00:06:38.005 --> 00:06:39.610
Cuz remember how the console and

101
00:06:39.610 --> 00:06:42.727
the document all of that
stuff was on the Window.

102
00:06:42.727 --> 00:06:48.712
Well, we don't have a Window, so luckily
the [LAUGH] developers have do not have,

103
00:06:48.712 --> 00:06:52.113
like, reimplemented
a lot of the wheel here.

104
00:06:52.113 --> 00:06:59.486
Or whatever that saying is that
allow us to do our good old friends,

105
00:06:59.486 --> 00:07:03.841
like log hello, world to the console.

106
00:07:03.841 --> 00:07:06.878
And just like in the browser console,
we get hello world and

107
00:07:06.878 --> 00:07:09.086
then the return value which is undefined.

108
00:07:09.086 --> 00:07:15.784
So and I can control C to get out of
my twice to get out of my rebel here.

109
00:07:15.784 --> 00:07:18.983
And we're probably not gonna spend
a ton of time in that rebel but

110
00:07:18.983 --> 00:07:21.421
it is a nice way to just
quickly run a line of code.

