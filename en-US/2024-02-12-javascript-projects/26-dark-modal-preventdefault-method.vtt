WEBVTT

1
00:00:00.125 --> 00:00:02.190
Debugging, it's all part of the game.

2
00:00:05.565 --> 00:00:11.437
There's a lot happening with the browser,
so sometimes we get unexpected results.

3
00:00:11.437 --> 00:00:18.080
For example,
our toggle button works, right?

4
00:00:18.080 --> 00:00:23.454
But when I click this close button,
If it was in light mode,

5
00:00:23.454 --> 00:00:25.485
it goes back to dark mode.

6
00:00:25.485 --> 00:00:29.798
It's like, I don't know, is this trying
to tell us something about the dark side

7
00:00:29.798 --> 00:00:31.810
of the force and how evil always wins?

8
00:00:31.810 --> 00:00:35.468
I don't know,
maybe this is sort of an Easter egg for

9
00:00:35.468 --> 00:00:38.555
philosophical contemplation by the user.

10
00:00:39.675 --> 00:00:45.823
Probably we want the page to do
what the user expects it to do,

11
00:00:45.823 --> 00:00:53.555
which would be stay in light mode if I
change the toggle to light mode, yeah?

12
00:00:53.555 --> 00:00:57.145
Okay, so let us inspect to find
out what's happening here.

13
00:00:58.945 --> 00:01:02.562
Now our toggle is supposed to be
changing the value of this data theme.

14
00:01:02.562 --> 00:01:08.537
So if I refresh the page,
this page starts out on dark mode, right?

15
00:01:08.537 --> 00:01:12.389
And keep in mind that all of
the code that we're writing,

16
00:01:12.389 --> 00:01:18.214
this is like code that is just running
in the current, View of the page.

17
00:01:18.214 --> 00:01:24.884
So, new Window that loads the page is just
gonna get the exact same original HTML.

18
00:01:24.884 --> 00:01:28.930
That we got first without any of
the manipulations that we've done in

19
00:01:28.930 --> 00:01:33.757
JavaScript, which is another reason why
it's great to [LAUGH] avoid JavaScript.

20
00:01:33.757 --> 00:01:38.696
But, the idea is that at least
while I am still in this

21
00:01:38.696 --> 00:01:42.529
same page I want that toggle to stay put.

22
00:01:43.639 --> 00:01:46.409
So let's see what happens
when we interact.

23
00:01:47.459 --> 00:01:51.002
Okay, right now it's in
dark mode the toggle works,

24
00:01:51.002 --> 00:01:54.406
it does its job of changing
the data theme to light.

25
00:01:54.406 --> 00:01:57.559
It goes back and forth as needed but

26
00:01:57.559 --> 00:02:03.971
when I close the form,
It goes back to dark.

27
00:02:03.971 --> 00:02:10.559
And did we notice this,
Blinking in the dev tools here?

28
00:02:10.559 --> 00:02:15.953
Okay, so the brilliant
community of co-developers that

29
00:02:15.953 --> 00:02:22.682
we have here of put our heads together and
figured out what is happening.

30
00:02:23.822 --> 00:02:30.962
And this is related to,
Where did we have it?

31
00:02:32.172 --> 00:02:36.602
That submit button that we
have in the dialogue here.

32
00:02:36.602 --> 00:02:37.462
Now remember,

33
00:02:37.462 --> 00:02:42.105
we didn't attach our own event listener to
the call close button in the form class.

34
00:02:43.585 --> 00:02:47.334
So we're just letting the browser
do its default behavior for

35
00:02:47.334 --> 00:02:49.070
button type equals submit.

36
00:02:49.070 --> 00:02:53.370
Which is to submit the form and

37
00:02:53.370 --> 00:02:58.020
then refresh the page, right?

38
00:02:58.020 --> 00:03:03.204
Which now in like our
JavaScript DeLanda of like basically

39
00:03:03.204 --> 00:03:08.387
doing all of the behavior that
the browser was expecting us

40
00:03:08.387 --> 00:03:14.062
to submit some data to go somewhere
else to mess with things.

41
00:03:14.062 --> 00:03:17.102
In this case, we're just doing
things client side with JavaScript.

42
00:03:17.102 --> 00:03:20.778
And so
the default behavior of this submit,

43
00:03:22.496 --> 00:03:29.966
Clicking on the button submitting
the form is not what we want, really.

44
00:03:29.966 --> 00:03:34.517
We can stop that behavior with

45
00:03:34.517 --> 00:03:38.896
a handy dandy method on the,

46
00:03:41.269 --> 00:03:47.311
Event that we get when we
have an event listener.

47
00:03:47.311 --> 00:03:49.783
Now, this is a different button,
but just as an example,

48
00:03:49.783 --> 00:03:52.210
when we add an event listener,
we pass in this callback.

49
00:03:52.210 --> 00:03:58.204
This callback can take an argument
which the browser is going to pass in.

50
00:03:58.204 --> 00:04:03.877
This can take a parameter that the browser
is gonna pass in an argument of the event,

51
00:04:03.877 --> 00:04:08.753
in this case, click event that fired
that caused this callback to run.

52
00:04:08.753 --> 00:04:14.523
So what we can do is instead of trying
to save ourselves some JavaScript and

53
00:04:14.523 --> 00:04:20.958
try to do things as natively browser-like
as possible, is totally mess with it.

54
00:04:20.958 --> 00:04:25.865
So, what can do this in like
another method we can have like

55
00:04:25.865 --> 00:04:29.682
a setup close button or
something like that.

56
00:04:29.682 --> 00:04:32.418
But for just in the interest of time,

57
00:04:32.418 --> 00:04:36.759
what we can do is set an event
listener on the CloseButton,

58
00:04:37.976 --> 00:04:43.473
That addEventListener it's gonna
be listening for the click event.

59
00:04:45.583 --> 00:04:49.915
Or I think we could also listen for
the submit event on the form, yeah?

60
00:04:49.915 --> 00:04:51.703
We could also do that.

61
00:04:51.703 --> 00:04:56.599
So for example,
we could do like this.element,

62
00:04:56.599 --> 00:04:59.763
set, no, addEventListener.

63
00:04:59.763 --> 00:05:03.414
Am I ever gonna remember
what that method is called?

64
00:05:03.414 --> 00:05:05.354
No.
[LAUGH] No matter how many hundreds of

65
00:05:05.354 --> 00:05:06.537
times I've typed it.

66
00:05:06.537 --> 00:05:11.818
Okay, the event on, sorry, so
the element is the form element?

67
00:05:11.818 --> 00:05:14.824
The form element has a submit event.

68
00:05:16.944 --> 00:05:22.923
And that it gets a handler that we can
pass and we can capture after the event,

69
00:05:22.923 --> 00:05:28.259
which the browser is gonna pass
into this callback, just by magic.

70
00:05:28.259 --> 00:05:32.893
We can do stuff with this event, like, for
example, often we're looking at stuff.

71
00:05:32.893 --> 00:05:34.065
What was the event target?

72
00:05:34.065 --> 00:05:38.377
Meaning, like,
what was the element that was

73
00:05:38.377 --> 00:05:42.589
interacted with that triggered this event.

74
00:05:42.589 --> 00:05:47.367
But we also have a prevent
default method that,

75
00:05:47.367 --> 00:05:54.784
lets us prevent whatever the default
behavior of that event was gonna be.

76
00:05:57.123 --> 00:06:00.927
And if we try this out,
let's try this out and see what happens,

77
00:06:00.927 --> 00:06:04.887
then we're not going to do anything
else in our handler right now.

78
00:06:04.887 --> 00:06:09.721
But if we try this out, and
we go back to our dark modal, and

79
00:06:09.721 --> 00:06:14.940
so yes, we were really make sure we got,
okay, all right.

80
00:06:14.940 --> 00:06:19.181
So now we press close and
I'm pressing close.

81
00:06:19.181 --> 00:06:23.749
You may clicking, but
I'm clicking and nothing happening.

82
00:06:23.749 --> 00:06:27.680
Yeah, well, the browser's like,
yeah, you told me not to do anything.

83
00:06:27.680 --> 00:06:30.736
You told me to not do the thing
that I usually do, which is like,

84
00:06:30.736 --> 00:06:33.287
do a bunch of work for
you all the time, constantly.

85
00:06:33.287 --> 00:06:38.177
And you don't even appreciate me [LAUGH].

86
00:06:38.177 --> 00:06:43.294
So now that we've prevented the default
behavior, we need to do some.

87
00:06:44.724 --> 00:06:51.374
And that's where we're gonna need to now,
in this case, close our dialogue.

88
00:06:53.214 --> 00:06:59.606
So that means we have a little bit
of an abstraction problem here,

89
00:06:59.606 --> 00:07:06.710
if we wanna be preventing the default
from within our form constructor.

90
00:07:06.710 --> 00:07:09.448
That means that any form dialogue or

91
00:07:09.448 --> 00:07:14.752
not dialogue it's not the close
button is not going to work, right?

92
00:07:14.752 --> 00:07:19.278
But maybe what we wanna do is since we
know that in this case we're actually

93
00:07:19.278 --> 00:07:23.960
interested in the fact that this is
a modal and that this is being submitted.

94
00:07:23.960 --> 00:07:28.464
And what we want the submission to
do is actually just close the modal.

95
00:07:28.464 --> 00:07:34.638
What we could do is, oops, In the form,

96
00:07:34.638 --> 00:07:38.170
we don't have any dialogue element
because the form is just a form.

97
00:07:38.170 --> 00:07:40.690
It doesn't know that it's
inside of a dialogue.

98
00:07:40.690 --> 00:07:48.242
The modal class is where we put
the form inside of the dialogue.

99
00:07:48.242 --> 00:07:49.909
And we create a,

100
00:07:57.745 --> 00:08:02.600
Dialogue type form deliberately
as users of the form class.

101
00:08:02.600 --> 00:08:04.844
All right, but other people
might be not having dialogues,

102
00:08:04.844 --> 00:08:06.987
they might just have regular
forms in their page.

103
00:08:06.987 --> 00:08:11.124
So in this case,

104
00:08:11.124 --> 00:08:16.739
we might want to do that

105
00:08:16.739 --> 00:08:21.180
event handling,

106
00:08:25.601 --> 00:08:29.528
Inside of our place where we
are actually instantiating the form.

107
00:08:29.528 --> 00:08:34.093
So that we're not doing this for
every single form that gets created ever,

108
00:08:34.093 --> 00:08:35.759
but we're only doing it for

109
00:08:35.759 --> 00:08:39.542
this one instance of form that we
just made to be in a dialogue.

110
00:08:39.542 --> 00:08:43.590
So that we can decide if we're
preventing the default behavior,

111
00:08:43.590 --> 00:08:47.868
we're probably gonna need to
supply some non-standard behavior.

112
00:08:47.868 --> 00:08:52.520
So that the user doesn't just have a super
frustrating experience of being stuck in

113
00:08:52.520 --> 00:08:53.789
a modal for eternity.

114
00:08:53.789 --> 00:08:58.667
All right, so now let's see,

115
00:08:58.667 --> 00:09:02.052
oops, what did I do?

116
00:09:02.052 --> 00:09:07.576
Form.addEventListener is
not a function because

117
00:09:07.576 --> 00:09:12.790
I need to access the element
[LAUGH] of the form.

118
00:09:12.790 --> 00:09:15.990
Okay, let's see if that makes,
okay, all right, all right.

119
00:09:15.990 --> 00:09:23.021
So now, okay, this form still works and
the close button still does not work.

120
00:09:23.021 --> 00:09:27.074
But somebody else who called
a instantiated a different form object is

121
00:09:27.074 --> 00:09:29.831
not also gonna have their
close button broken.

122
00:09:29.831 --> 00:09:33.189
Cuz this is just special to me and
my modal use case.

123
00:09:33.189 --> 00:09:42.576
So now what we need to do is do the thing
that we want the close button to do.

124
00:09:42.576 --> 00:09:47.478
So, yeah,
dialogue is the dialogue element,

125
00:09:47.478 --> 00:09:51.896
okay, this, nope, nope, nope, nope.

126
00:09:51.896 --> 00:09:54.991
Well, all right,
let's try it, let's do it.

127
00:09:54.991 --> 00:10:00.018
This.dialogue.close, would be

128
00:10:00.018 --> 00:10:05.383
how we manually close an open dialog.

129
00:10:05.383 --> 00:10:06.415
See what happens.

130
00:10:08.976 --> 00:10:12.288
Okay, well now it's backwards but
all right.

131
00:10:15.668 --> 00:10:17.605
Okay.
Okay, so in this case,

132
00:10:17.605 --> 00:10:20.837
this actually did do what
we thought it should do.

133
00:10:20.837 --> 00:10:23.688
But I believe, so this is a, like,

134
00:10:23.688 --> 00:10:28.075
a super detailed thing about
the difference between.

135
00:10:28.075 --> 00:10:31.168
So far we've essentially been
using arrow functions and

136
00:10:31.168 --> 00:10:35.287
function keyword functions as
if they're exactly the same.

137
00:10:35.287 --> 00:10:36.354
But they're not.

138
00:10:36.354 --> 00:10:39.043
Because why would
JavaScript be predictable?

139
00:10:39.043 --> 00:10:42.550
Where would the fun be in that?

140
00:10:42.550 --> 00:10:48.027
When we have an arrow function,
let's go to our friend MDN and find out.

141
00:10:48.027 --> 00:10:50.070
Arrow function expressions [COUGH].

142
00:10:53.360 --> 00:11:00.263
Arrow functions don't have their own
bindings to this or arguments or

143
00:11:00.263 --> 00:11:06.940
super or some other like fancy things
that we can do with functions.

144
00:11:06.940 --> 00:11:11.628
So JavaScript would also accept
an anonymous function here

145
00:11:11.628 --> 00:11:16.606
with the function keyword, or
a named function if I wanted to.

146
00:11:16.606 --> 00:11:18.457
See what happens if I do it that way.

147
00:11:21.056 --> 00:11:28.181
Okay, so toggle works cool,
it's changing up this dialog is undefined.

148
00:11:28.181 --> 00:11:29.259
What?

149
00:11:29.259 --> 00:11:33.949
Because and this is why again,
like in general this is not my friend.

150
00:11:33.949 --> 00:11:37.939
I don't know if it's your friend maybe
you're better at remembering which,

151
00:11:37.939 --> 00:11:41.505
whether it's the arrow function,
has its own this or that function,

152
00:11:41.505 --> 00:11:43.055
that has its own this?

153
00:11:43.055 --> 00:11:44.495
I don't.
So this is why I reassign stuff

154
00:11:44.495 --> 00:11:45.445
all the time.

155
00:11:45.445 --> 00:11:49.990
But in this case, I would need to capture,

156
00:11:49.990 --> 00:11:53.161
do something like dialogue.

157
00:11:53.161 --> 00:11:56.596
Is this dialogue?

158
00:11:56.596 --> 00:12:01.324
And then I'll be able to close
over that value with my little

159
00:12:01.324 --> 00:12:03.985
closure function, hopefully.

160
00:12:03.985 --> 00:12:06.217
And, okay, well, it's backwards, but

161
00:12:06.217 --> 00:12:09.748
that's because of something fancy
happening behind the scenes.

162
00:12:09.748 --> 00:12:15.535
Okay, so now, hopefully,
it worked because of closures,

163
00:12:15.535 --> 00:12:22.237
because of that scope fossilizing
that we talked about [LAUGH] before.

164
00:12:22.237 --> 00:12:26.994
All right, great, so,
we have successfully debugged a super

165
00:12:26.994 --> 00:12:30.781
broken page that was not finished,
I lied to you.

166
00:12:30.781 --> 00:12:37.587
And we have also come upon a very often,
like, if you may have already used and

167
00:12:37.587 --> 00:12:42.535
seen this prevent default,
like, all over the place.

168
00:12:42.535 --> 00:12:46.926
And sometimes, especially I remember when
I was starting out, I was just like,

169
00:12:46.926 --> 00:12:51.589
all right, I don't exactly know why we're
preventing defaults all over the place.

170
00:12:51.589 --> 00:12:55.127
But all of my colleagues
are writing their new

171
00:12:55.127 --> 00:12:59.890
event handlers with prevent defaults and
so on and so forth.

172
00:12:59.890 --> 00:13:01.740
So I'm just gonna copy that.

173
00:13:01.740 --> 00:13:05.657
But so this is a good example of when we
really do need to override the default

174
00:13:05.657 --> 00:13:06.290
behavior.

175
00:13:06.290 --> 00:13:11.140
Because we are messing with how
the user will be interacting.

176
00:13:11.140 --> 00:13:14.496
We're taking advantage of one
convenience of the browser,

177
00:13:14.496 --> 00:13:19.750
which is that if you submit a form within
a dialogue, it will close the dialogue.

178
00:13:19.750 --> 00:13:25.124
But we are,
Getting around the other default

179
00:13:25.124 --> 00:13:30.538
behavior of form submission in general,
which is to reload the page.

180
00:13:32.508 --> 00:13:40.776
Just goes to show how much our just
hard-working browsers are doing for us.

181
00:13:40.776 --> 00:13:45.210
Every millisecond of [LAUGH] the day
that we are poking around on

182
00:13:45.210 --> 00:13:49.326
the internet looking at cat memes and
GIFs.

183
00:13:49.326 --> 00:13:52.676
So thank you browsers for all that you do.

184
00:13:52.676 --> 00:13:57.574
Grateful to have you and grateful that
JavaScript lets us totally mess with you

185
00:13:57.574 --> 00:14:01.673
and confuse our users and
break their pages and so on and so forth.

186
00:14:01.673 --> 00:14:03.793
So, victory.

