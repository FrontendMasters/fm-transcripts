WEBVTT

1
00:00:00.256 --> 00:00:06.215
We have come to the third and
final part of the course

2
00:00:06.215 --> 00:00:12.590
that is going to mostly be
around getting some reps in,

3
00:00:12.590 --> 00:00:17.857
if you will,
with the many possibilities for

4
00:00:17.857 --> 00:00:23.007
building whatever we
want on the web [LAUGH].

5
00:00:23.007 --> 00:00:27.492
So the idea today, our theme,
if you will, the idea for

6
00:00:27.492 --> 00:00:31.893
this part, our theme,
if you will is, hacking away.

7
00:00:33.023 --> 00:00:37.944
So the idea is that we want to, today
we're gonna talk about a couple of more,

8
00:00:37.944 --> 00:00:40.917
again, practical dev workflows tips today.

9
00:00:40.917 --> 00:00:45.441
We're gonna talk about a few other
tools we can incorporate in our

10
00:00:45.441 --> 00:00:49.367
day-to-day dev lives to
make our life easier.

11
00:00:49.367 --> 00:00:53.990
We're gonna talk about how to get our
beautiful production build that we know

12
00:00:53.990 --> 00:00:58.679
how to make now with Vite, how to get it
onto the interwebs, if you do it right,

13
00:00:58.679 --> 00:01:00.908
unlike me, with the slides.

14
00:01:00.908 --> 00:01:05.605
And then you can share it with all of
your friends all over the Reddit and

15
00:01:05.605 --> 00:01:09.518
the social media platform of your choice,
what have you.

16
00:01:10.798 --> 00:01:15.626
And also, we are going to hopefully
feel vindicated in all of

17
00:01:15.626 --> 00:01:20.548
our tiny little .HTML files,
all of our little quick wins and

18
00:01:20.548 --> 00:01:25.585
our selfie cam and
all these things that we've been building.

19
00:01:25.585 --> 00:01:31.095
We're going to see them come together
into a hackable project that we

20
00:01:31.095 --> 00:01:37.195
can then all take and take in
different directions, make it our own.

21
00:01:37.195 --> 00:01:42.155
So the aim for this part is that
we're going to focus on kind of

22
00:01:42.155 --> 00:01:46.243
letting our imaginations run wild and
our MDN Fu,

23
00:01:46.243 --> 00:01:52.275
come to our aid in figuring out how to
do a thing that we imagine happening,

24
00:01:52.275 --> 00:01:57.270
and hopefully, share all of
our learnings with each other.

25
00:01:58.972 --> 00:02:00.222
All right, how's that sound?

26
00:02:01.292 --> 00:02:01.922
&gt;&gt; Excellent.

27
00:02:01.922 --> 00:02:02.822
&gt;&gt; We ready?

28
00:02:02.822 --> 00:02:03.682
&gt;&gt; Yep, ready.

29
00:02:03.682 --> 00:02:05.572
&gt;&gt; Yeah, okay.

30
00:02:05.572 --> 00:02:07.447
&gt;&gt; Someone online said you are the best.

31
00:02:07.447 --> 00:02:09.472
&gt;&gt; [LAUGH] You are the best.

32
00:02:09.472 --> 00:02:10.492
You are all the best.

33
00:02:10.492 --> 00:02:13.372
This is honestly so
great to be here with all of you.

34
00:02:13.372 --> 00:02:17.452
And I'm just, again, so appreciative
that we can do this in three dimensions,

35
00:02:17.452 --> 00:02:20.772
some of us, and
that we have the hybrid model now.

36
00:02:20.772 --> 00:02:23.642
All right, so, DevTools.

37
00:02:23.642 --> 00:02:26.292
We need more always, right?

38
00:02:26.292 --> 00:02:32.202
Because we can never have enough of
those overwhelming logos to worry about.

39
00:02:32.202 --> 00:02:36.286
However, there are some
other little little and

40
00:02:36.286 --> 00:02:41.165
ginormous tools that can help
us have a much easier time and

41
00:02:41.165 --> 00:02:46.342
ideally avoid a lot of the more
obvious problems that some of us

42
00:02:46.342 --> 00:02:52.935
run into frequently if we don't have
tools automatically fixing them for us.

43
00:02:52.935 --> 00:02:54.625
So that's what we're gonna talk about.

44
00:02:54.625 --> 00:02:59.562
Now, before we launch our
things to the interwebs.

45
00:03:00.562 --> 00:03:04.894
So, first and foremost,
a dev's best friend these days,

46
00:03:04.894 --> 00:03:08.632
the last few decades anyway,
is version control.

47
00:03:09.782 --> 00:03:15.522
So, have folks all worked with Git or
GitHub before?

48
00:03:15.522 --> 00:03:16.822
Yeah, I'm seeing nods.

49
00:03:16.822 --> 00:03:18.303
Am I seeing virtual nods?

50
00:03:18.303 --> 00:03:20.253
It's from the chat.

51
00:03:20.253 --> 00:03:22.533
Are we Git fans already?

52
00:03:23.923 --> 00:03:25.003
Because this is not,

53
00:03:25.003 --> 00:03:28.913
we're not really going to cover all of
the things there are to know about Git.

54
00:03:28.913 --> 00:03:30.803
Again, that would be a whole other thing.

55
00:03:30.803 --> 00:03:35.635
And in fact, it is a whole other course
on front end masters that you can go

56
00:03:35.635 --> 00:03:39.628
take if you want to learn Git or
Get more familiar.

57
00:03:39.628 --> 00:03:42.692
There are also some great
cheat sheets out there and

58
00:03:42.692 --> 00:03:44.838
other resources that you can find.

59
00:03:44.838 --> 00:03:51.647
So if you're new to Git, for example,
the GitHub Education website,

60
00:03:51.647 --> 00:03:56.147
I think it's education.github.com or
something has a really handy cheat sheet,

61
00:03:56.147 --> 00:04:00.901
you can print out and just It's like
keep by your laptop, for example.

62
00:04:00.901 --> 00:04:04.071
Okay, but the basics here is that so, now,

63
00:04:04.071 --> 00:04:08.702
Git and GitHub are not the only
ways to manage version control for

64
00:04:08.702 --> 00:04:13.935
your project and collaboration and
open source and working with a team,

65
00:04:13.935 --> 00:04:18.548
let's say, working with other
people on the same project.

66
00:04:18.548 --> 00:04:21.348
There are other version
control systems and

67
00:04:21.348 --> 00:04:26.342
there are other repository hosting
solutions like GitLab, for example, and

68
00:04:26.342 --> 00:04:31.578
some of the other version control vendors
are things like Mercurial for example.

69
00:04:31.578 --> 00:04:33.104
There's an older one called SVN.

70
00:04:33.104 --> 00:04:36.254
You might run into once and awhile anyway.

71
00:04:36.254 --> 00:04:41.080
The way of everybody
converging on VS Code, for

72
00:04:41.080 --> 00:04:46.509
example, which happens to
be a Microsoft property,

73
00:04:46.509 --> 00:04:50.261
which also is the case for GitHub.

74
00:04:50.261 --> 00:04:54.387
So this is one of these things where
there's a gravitational force here that's

75
00:04:54.387 --> 00:04:56.121
pulling us all together.

76
00:04:56.121 --> 00:05:00.151
Because Git and GitHub are so
ambiguities in the developer ecosystem,

77
00:05:00.151 --> 00:05:05.104
especially in web development,
we're going to just talk about those.

78
00:05:05.104 --> 00:05:08.234
And so perhaps you've all done
commands like this before.

79
00:05:08.234 --> 00:05:13.640
What we can do is, use the get clone
command to clone a repository of,

80
00:05:13.640 --> 00:05:18.395
let's say, some open source
project that we wanna work on or

81
00:05:18.395 --> 00:05:22.285
some some demo app that
we want to mess with.

82
00:05:22.285 --> 00:05:25.985
So for example, I have a repo up there for
my selfie cam project.

83
00:05:25.985 --> 00:05:27.435
Now you all don't need to clone that one.

84
00:05:27.435 --> 00:05:32.065
But the idea is you can
clone somebody's repo.

85
00:05:32.065 --> 00:05:35.408
You can make your own
branches like maybe I make

86
00:05:35.408 --> 00:05:39.739
a branch called bug fix where I go in and
I fixed that bug.

87
00:05:39.739 --> 00:05:44.328
And then we can add changes or
stage changes to save

88
00:05:44.328 --> 00:05:49.549
sort of as I have made this
change in the repository.

89
00:05:49.549 --> 00:05:53.796
We can commit it with a little
message that's hopefully helpful for

90
00:05:53.796 --> 00:05:57.159
people to understand what I did here and
then push it.

91
00:05:57.159 --> 00:06:02.648
And that little you is for the first
the first time you run the push command,

92
00:06:02.648 --> 00:06:05.263
you will have to set a destination,

93
00:06:05.263 --> 00:06:10.140
a remote branch that you want
to sync with your local branch.

94
00:06:10.140 --> 00:06:12.610
And so the remote here is called origin.

95
00:06:12.610 --> 00:06:15.280
That's usually kind of
the default that we use.

96
00:06:15.280 --> 00:06:21.064
And then we would type in the name of
the branch that we want to sync on both.

97
00:06:21.064 --> 00:06:25.876
So now I will have a local bug fix
branch and my origin bug fix branch,

98
00:06:25.876 --> 00:06:30.521
which then, once I'm satisfied
that the bug is actually fixed,

99
00:06:30.521 --> 00:06:32.814
I can merge in to my main branch.

100
00:06:32.814 --> 00:06:36.656
So again, covering all the good stuff
is not in the scope of this course, but

101
00:06:36.656 --> 00:06:39.929
this is like, basically what
we're gonna be doing a lot today.

102
00:06:39.929 --> 00:06:41.680
[LAUGH] Well, and maybe not the last one.

103
00:06:41.680 --> 00:06:45.450
We'll just be doing get push
after we've set the upstream.

