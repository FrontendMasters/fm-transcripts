WEBVTT

1
00:00:00.120 --> 00:00:04.727
So once this is in my repository,
once I've pushed it, or

2
00:00:04.727 --> 00:00:10.838
once I've saved it in the GitHub UI, so
it's already live in my GitHub site,

3
00:00:10.838 --> 00:00:16.504
then whenever I push code, I'm gonna
start to see little icons pop up.

4
00:00:16.504 --> 00:00:23.118
And if I go into my Actions page,
I can see, hopefully, an action running.

5
00:00:23.118 --> 00:00:28.038
And if anybody is not
seeing this let us know.

6
00:00:28.038 --> 00:00:33.676
So in our configuration,
we have these instructions, right?

7
00:00:33.676 --> 00:00:39.745
All of these different steps
that it's telling GitHub to do.

8
00:00:39.745 --> 00:00:46.435
And that is what we can then see
actually happening when we look at,

9
00:00:46.435 --> 00:00:50.383
let's look at a successful one first.

10
00:00:50.383 --> 00:00:57.635
A particular job, it's gonna have either
a happy green check or a sad red X.

11
00:00:57.635 --> 00:00:59.427
And if I look at the logs here, and

12
00:00:59.427 --> 00:01:03.797
it might be yellow if it's still running,
I can see exactly what's happening.

13
00:01:03.797 --> 00:01:09.852
I can see the logs, and I can go down
all kinds of rabbit holes about all

14
00:01:09.852 --> 00:01:17.184
of the underlying cloud computing that's
happening here, and so on and so forth.

15
00:01:17.184 --> 00:01:22.544
So, for example, what it's doing is
it's checking out my repository,

16
00:01:22.544 --> 00:01:26.184
making sure it has the latest
version of the code.

17
00:01:26.184 --> 00:01:29.825
It's setting up Node,
it's making sure it has Node.

18
00:01:29.825 --> 00:01:33.555
It's installing my
dependencies with npm Install.

19
00:01:33.555 --> 00:01:39.148
So the same as we would do if we were
trying to run this project after cloning

20
00:01:39.148 --> 00:01:44.112
it from some other cool developer
who posted the link on Twitter or

21
00:01:44.112 --> 00:01:46.749
whatever, and so on and so forth.

22
00:01:46.749 --> 00:01:51.603
And then it is eventually getting
to our npm run build command,

23
00:01:51.603 --> 00:01:55.733
so again,
the same thing that we were doing locally.

24
00:01:55.733 --> 00:02:00.170
Then it's doing a whole bunch of stuff
about pages that all comes from that

25
00:02:00.170 --> 00:02:03.050
built-in pages action
that GitHub provides.

26
00:02:03.050 --> 00:02:07.851
So anyway,
this is all doing a whole bunch of stuff.

27
00:02:07.851 --> 00:02:11.898
it's doing some cleanup work at
the end that we don't really, again,

28
00:02:11.898 --> 00:02:13.724
rabbit holes we can all go down.

29
00:02:13.724 --> 00:02:17.906
And then it's like, yep, I did it,
I completed the job, and

30
00:02:17.906 --> 00:02:21.767
then I get my nice little green check,
which just feels so

31
00:02:21.767 --> 00:02:26.856
good to see when you have a little green
check there on your latest connect.

32
00:02:26.856 --> 00:02:31.478
And sometimes you'll notice that,
in projects that do the good thing of

33
00:02:31.478 --> 00:02:35.872
having a readme, which all projects
should have, unlike this one,

34
00:02:35.872 --> 00:02:40.571
you will sometimes even see little
badges that tell you about different,

35
00:02:40.571 --> 00:02:44.919
is the package built, is the build
passing, and so on and so forth.

36
00:02:44.919 --> 00:02:47.887
So there's all kinds of fanciness
you can kind of do on top of this.

37
00:02:47.887 --> 00:02:53.636
But this is kind of magic because
what's happening right now is basically

38
00:02:53.636 --> 00:02:59.105
now every time I push or whatever
other thing I configured my job to do,

39
00:02:59.105 --> 00:03:03.463
GitHub is auto-magically
kicking off all this work for

40
00:03:03.463 --> 00:03:08.561
me to spin up a little computer
somewhere that's running through

41
00:03:08.561 --> 00:03:13.410
all these commands and
getting my site live on the interwebs.

42
00:03:13.410 --> 00:03:14.581
[SOUND] Lift off.

43
00:03:14.581 --> 00:03:18.332
And because I want to show you also,
deliberately,

44
00:03:18.332 --> 00:03:22.511
what it looks like [LAUGH] when
a build does not succeed, for

45
00:03:22.511 --> 00:03:26.708
example, or when it when a job
does not succeed, rather.

46
00:03:26.708 --> 00:03:31.701
When you have a failing job, and
you're like, why did that job fail?

47
00:03:31.701 --> 00:03:37.283
You can click into the job, in this case,
we just have this one deploy job.

48
00:03:37.283 --> 00:03:40.821
Complex projects might have many and
might be sort of like,

49
00:03:40.821 --> 00:03:44.162
first do this and then do that,
then do the other thing.

50
00:03:44.162 --> 00:03:47.809
But in this case,
we can see which steps passed, okay?

51
00:03:47.809 --> 00:03:51.581
It got the code, it installed
the dependencies, but the build failed.

52
00:03:51.581 --> 00:03:56.481
And then I can look at the logs and
see what the problem is and

53
00:03:56.481 --> 00:04:01.381
perhaps it's the same problem
that we saw yesterday about

54
00:04:01.381 --> 00:04:06.689
the top-level await is not
available in some of your targets.

55
00:04:06.689 --> 00:04:11.624
And again, that's because
these are the browsers that,

56
00:04:11.624 --> 00:04:17.277
by default, Vite is targeting when
it does the production build.

57
00:04:17.277 --> 00:04:22.050
But in the dev server,
it's targeting newer browsers,

58
00:04:22.050 --> 00:04:27.620
because it assumes that if you're
developing the site actively,

59
00:04:27.620 --> 00:04:30.315
you have a more recent version.

60
00:04:30.315 --> 00:04:34.677
And so some of these are below
the version of Firefox or Chrome or

61
00:04:34.677 --> 00:04:38.729
Edge or what have you,
that supports top level of weight.

62
00:04:38.729 --> 00:04:43.066
So that is, again,
like same problem that we saw locally but

63
00:04:43.066 --> 00:04:47.830
this is the same problem that this
cloud somewhere that's running

64
00:04:47.830 --> 00:04:51.501
this code encounters when
it tries to run this job.

65
00:04:51.501 --> 00:04:58.175
So this is legit actually to show
you that when something goes wrong,

66
00:04:58.175 --> 00:05:02.791
and I can assure you it
will at some point [LAUGH].

67
00:05:02.791 --> 00:05:06.620
The interface here, if you're not like,
for example, if you're running this

68
00:05:06.620 --> 00:05:10.112
locally every time, cool, but
once you've got this auto-magicness,

69
00:05:10.112 --> 00:05:13.999
you're probably not going to be doing that
all the time because you've got like,

70
00:05:13.999 --> 00:05:16.845
yeah, I already know,
I've got commands to lint things.

71
00:05:16.845 --> 00:05:21.139
I've got commands to make sure the build
passes and the format is correct and

72
00:05:21.139 --> 00:05:22.413
all that stuff, and so

73
00:05:22.413 --> 00:05:25.919
this is how we can check out what
is going wrong when we need to.

