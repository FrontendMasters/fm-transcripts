WEBVTT

1
00:00:00.290 --> 00:00:03.337
Talk about some code quality tools.

2
00:00:03.337 --> 00:00:08.175
The first one that we're
gonna do is probably one of

3
00:00:08.175 --> 00:00:12.011
my favorite tools, which is Prettier.

4
00:00:12.011 --> 00:00:16.708
Prettier is a tool, it's like the lost
code formatter for Javascript.

5
00:00:16.708 --> 00:00:22.197
If you've written any amount of Go or
Elm is another one that has a really

6
00:00:22.197 --> 00:00:27.064
good one or
the that have really good code formatters.

7
00:00:27.064 --> 00:00:30.590
So let's talk about go format cuz
that's one that I'm more familiar with.

8
00:00:30.590 --> 00:00:34.439
If you write go format or if you write go
it's all only formatted one way because go

9
00:00:34.439 --> 00:00:36.419
from it formats all of your code for
you and

10
00:00:36.419 --> 00:00:39.600
it takes all the discussion
out of tabs versus spaces.

11
00:00:39.600 --> 00:00:42.032
Versus do I have a space
between parentheses or not,

12
00:00:42.032 --> 00:00:44.300
it just does everything for you.

13
00:00:44.300 --> 00:00:49.198
And I so love that because I so hate
having discussions with people about do

14
00:00:49.198 --> 00:00:54.160
we put a space here or not,
do I put to this kind of white space?

15
00:00:54.160 --> 00:00:58.550
I profoundly don't care,
I just don't wanna talk about it right?

16
00:00:58.550 --> 00:01:02.243
And that's what Prettier does for you it
basically takes away the whole discussion

17
00:01:02.243 --> 00:01:04.932
it says like look at you can
write your code however you want,

18
00:01:04.932 --> 00:01:07.960
you can put in your semicolons,
you can not put in your semicolons.

19
00:01:07.960 --> 00:01:11.179
And whenever you click save, it's just
going to format everything for you and

20
00:01:11.179 --> 00:01:13.470
you don't have to think about it.

21
00:01:13.470 --> 00:01:16.700
There's a background thread in my
brain that just got shut down, right?

22
00:01:16.700 --> 00:01:20.211
I don't have to worry about white spacing
or indenting or anything like that,

23
00:01:20.211 --> 00:01:23.540
it's just gone, and
it just worries about it, and I love that.

24
00:01:23.540 --> 00:01:26.320
It means I get to think more
about code and less about fluff.

25
00:01:27.380 --> 00:01:30.308
So what Prettier is gonna do is
it's going to take in your code,

26
00:01:30.308 --> 00:01:33.239
it's going to break it down into
an AST abstract syntax tree and

27
00:01:33.239 --> 00:01:36.141
then it's going to reprint it
out with its own set of grammar.

28
00:01:36.141 --> 00:01:39.975
And it's going to blow away whatever code
styling you put into it, which basically

29
00:01:39.975 --> 00:01:43.670
means don't bother putting any code
styling with it cuz it's going to go away.

30
00:01:46.090 --> 00:01:46.783
I love this tool,

31
00:01:46.783 --> 00:01:49.710
I it's literally the first thing
I put into any project that I do.

32
00:01:49.710 --> 00:01:54.290
I'll show you how to use it, and
then we'll install into our project.

33
00:01:54.290 --> 00:01:57.790
So if you're not familiar
with something called MPX,

34
00:01:57.790 --> 00:02:02.930
MPX is a tool that will install
something and then run it immediately.

35
00:02:02.930 --> 00:02:05.582
So I use it a lot if I want
to test something out so

36
00:02:05.582 --> 00:02:10.349
you can say MPX Prettier and it's going
you can see I've already done this before.

37
00:02:10.349 --> 00:02:14.974
Because autocompleting out there
it's going to install Prettier and

38
00:02:14.974 --> 00:02:17.558
then immediately run it on something,

39
00:02:17.558 --> 00:02:21.410
which is kind of fun if you want
to like test something out.

40
00:02:21.410 --> 00:02:24.884
So I'm gonna say MPX app source app.js,
and

41
00:02:24.884 --> 00:02:30.470
you can see here it just prints it out
of what it would code format it to be.

42
00:02:30.470 --> 00:02:32.106
I think I have this unfortunately,

43
00:02:32.106 --> 00:02:34.920
all set to run automatically no
matter what format and save.

44
00:02:34.920 --> 00:02:37.912
We'll just turn that off for
just a second, now, so

45
00:02:37.912 --> 00:02:41.258
you can see here I made my
code very unattractive, right?

46
00:02:43.762 --> 00:02:48.220
Let's just make it the most
unattractive I can, let's do this.

47
00:02:48.220 --> 00:02:52.970
All right, so now this is just objectively
terrible and hard to read, right?

48
00:02:52.970 --> 00:02:55.802
Hopefully I'm just hurting your soul
a little bit, that's what I'm going for

49
00:02:55.802 --> 00:02:56.570
I want you to feel it.

50
00:02:57.850 --> 00:03:01.492
Okay and then if you run Prettier here,
if I bring this back up and

51
00:03:01.492 --> 00:03:06.010
if I run MPX Prettier again, you can see
here, it'll print it out really nice,

52
00:03:06.010 --> 00:03:07.640
like this into my terminal.

53
00:03:09.200 --> 00:03:14.825
So that's what Prettier is gonna do for
you, and if I do-- right,

54
00:03:14.825 --> 00:03:19.883
now notice up here it actually
went out and wrote it out here.

55
00:03:19.883 --> 00:03:22.149
So now it actually did fix it directly for
me.

56
00:03:22.149 --> 00:03:26.439
And if I try and run it again it'll be
grayed out because it'll say okay I ran it

57
00:03:26.439 --> 00:03:28.360
but nothing had nothing changed.

58
00:03:31.170 --> 00:03:34.979
So pretty works on a lot of things,
it works on CSS, it works on flow,

59
00:03:34.979 --> 00:03:36.580
it works on TypeScript.

60
00:03:36.580 --> 00:03:40.257
They're adding more languages,
I think they're talking about putting it

61
00:03:40.257 --> 00:03:44.020
like in PHP and like further languages
out but for now, this is what it is.

62
00:03:44.020 --> 00:03:48.007
Again, this is my favorite tool
like you don't even have to put in

63
00:03:48.007 --> 00:03:49.539
like semicolons right?

64
00:03:49.539 --> 00:03:51.973
So, I do this and I save it.

65
00:03:51.973 --> 00:03:55.016
This is valid JavaScript, right,
technically semicolons for

66
00:03:55.016 --> 00:03:57.054
the most part are optional in JavaScript.

67
00:03:57.054 --> 00:04:01.626
Due to ASI automatic semicolon insertion
is the name of the process that does

68
00:04:01.626 --> 00:04:05.920
it But if I do that again you'll see
here that they come back right away.

69
00:04:07.110 --> 00:04:09.558
So in earlier versions of this course,

70
00:04:09.558 --> 00:04:13.713
I actually used to teach standard
js if you've ever heard of that,

71
00:04:13.713 --> 00:04:18.111
written by the Illustrious Ferris
who's a great open source author.

72
00:04:18.111 --> 00:04:20.768
This standard does not allow semicolons so

73
00:04:20.768 --> 00:04:24.980
it'll actually give you an error
if you write semicolons.

74
00:04:24.980 --> 00:04:27.930
And so people ask me all the time do
I care, like do I have feelings about

75
00:04:27.930 --> 00:04:31.132
semicolons is like as long as my
computer's writing for me, I don't care if

76
00:04:31.132 --> 00:04:34.350
they're there or if they're not,
if Prettier such putting them in there.

77
00:04:34.350 --> 00:04:35.960
I would stop putting them in there.

78
00:04:35.960 --> 00:04:37.600
Is Prettier packaging VS Code.

79
00:04:37.600 --> 00:04:40.900
It is an extension and I'll show you
here how to install in just a second.

80
00:04:40.900 --> 00:04:46.300
But it's actually based on a command
line tool, yeah, which is actually

81
00:04:46.300 --> 00:04:52.150
how most VS Code tools work they have a
CLI that they install with the extension.

82
00:04:52.150 --> 00:04:57.718
So let's make our config here, so
I want you to make a new file here,

83
00:04:57.718 --> 00:05:01.259
and they want you to call it .prettierrc.

84
00:05:01.259 --> 00:05:03.451
The name is important, and

85
00:05:03.451 --> 00:05:08.260
then inside of prettierrc I want
you to put an empty object.

86
00:05:08.260 --> 00:05:12.245
This is a configuration object,
there are some knobs and

87
00:05:12.245 --> 00:05:18.160
levers of like, do you want semi colons,
how much spacing do you want?

88
00:05:18.160 --> 00:05:21.190
Those kind of things,
and I don't like that.

89
00:05:21.190 --> 00:05:24.014
I think I've said this like a bunch of
times yet, but I'm gonna say to get I

90
00:05:24.014 --> 00:05:27.300
don't care what the what the options
are I just want it to work.

91
00:05:27.300 --> 00:05:30.229
So by putting this empty object in here,
you're basically signifying to

92
00:05:30.229 --> 00:05:32.687
everyone's like,
this project is formatted by Prettier and

93
00:05:32.687 --> 00:05:34.926
it's formatted by the default settings for
Prettier.

94
00:05:37.309 --> 00:05:40.621
Feel free to look at it later and make all
the adjustments you want, that's fine.

95
00:05:40.621 --> 00:05:43.213
And when I was introducing
this at Netflix,

96
00:05:43.213 --> 00:05:47.555
I had to adjust a bunch of things to try
and get as close as to the code style of

97
00:05:47.555 --> 00:05:52.490
the code that the code base was already
in to satisfy the most people I could.

98
00:05:52.490 --> 00:05:56.680
There's tons of people that were had
a lot of feelings about code formatting.

99
00:05:56.680 --> 00:06:00.286
I would suggest doing that if you're
trying to introduce it your work, but

100
00:06:00.286 --> 00:06:03.319
otherwise, I just just do the empty
one and just get used to it,

101
00:06:03.319 --> 00:06:05.090
it's very easy, right?

102
00:06:05.090 --> 00:06:08.519
And now I want you to go
to if you're using VS code,

103
00:06:08.519 --> 00:06:13.180
you can install a Prettier extension,
this one here.

104
00:06:13.180 --> 00:06:16.397
There's several of them, you want to
install the one that has 19 million

105
00:06:16.397 --> 00:06:18.756
downloads, right,
not the one that has 3,000.

106
00:06:20.091 --> 00:06:24.630
It's one made by what is the name
of the package I can't remember.

107
00:06:26.960 --> 00:06:31.650
Anyway, this is one that you want so
installed that, okay?

108
00:06:31.650 --> 00:06:35.718
Then I want you to open
the settings which you can do by,

109
00:06:35.718 --> 00:06:38.379
there's a couple ways of doing it.

110
00:06:38.379 --> 00:06:44.172
But if you Cmd+Shift+P,
you can look at settings or

111
00:06:44.172 --> 00:06:47.520
I always just hit Cmd+Comma,

112
00:06:47.520 --> 00:06:53.100
Preferences, I don't remember what it is.

113
00:06:53.100 --> 00:06:55.897
Anyway, just Cmd+Comma, Ctrl+Comma,

114
00:06:55.897 --> 00:07:00.440
this will open this, and then he wants
format on save, so turn that on.

115
00:07:02.090 --> 00:07:04.080
I'm assuming most of you
wanna set it up like I do, so

116
00:07:04.080 --> 00:07:05.770
it just runs every time
that you save a file.

117
00:07:07.070 --> 00:07:11.444
And then this one's super helpful as well,
require config.

118
00:07:15.657 --> 00:07:20.666
Prettier yeah so prettier require
config this is super helpful

119
00:07:20.666 --> 00:07:27.290
that basically a prettier won't run unless
there's a Prettier RC in the project.

120
00:07:28.640 --> 00:07:31.762
This is really nice, so if you jump
between code bases that some that have

121
00:07:31.762 --> 00:07:35.396
prettier configs and some that don't, this
will make sure that it only is running on

122
00:07:35.396 --> 00:07:37.510
projects that do have Prettier configs for
you.

123
00:07:39.670 --> 00:07:44.547
Honestly, I mostly leave this off cuz I
don't work on anything that doesn't have

124
00:07:44.547 --> 00:07:46.990
Prettier as a rule of thumb.

125
00:07:46.990 --> 00:07:55.250
So now, with all that set should you be
able to just save and it'll work right?

126
00:07:55.250 --> 00:08:01.000
So not every time that I run
save it will work all right.

127
00:08:03.020 --> 00:08:06.159
Now I no longer have to care at
all about spacing or semicolons or

128
00:08:06.159 --> 00:08:08.470
commas it all just works out for me.

129
00:08:08.470 --> 00:08:12.845
Let's talk a second about NPM scripts or
yarn scripts.

130
00:08:12.845 --> 00:08:14.849
That's Jim, thank you for

131
00:08:14.849 --> 00:08:20.178
this test one cuz we're not doing
testing until an intermediate React.

132
00:08:22.819 --> 00:08:27.095
So, if you're gonna require that people
use some sort of library in your project,

133
00:08:27.095 --> 00:08:31.127
like if I'm making a big open source
project or I'm trying to introduce this at

134
00:08:31.127 --> 00:08:34.270
work, not everyone's gonna be
using the same editor as me.

135
00:08:34.270 --> 00:08:38.011
And so I need to make sure that like
whatever I'm doing works for everybody,

136
00:08:38.011 --> 00:08:39.900
not just for VS Code users, right?

137
00:08:39.900 --> 00:08:42.380
I can't require everyone to
use the VS Code extension.

138
00:08:42.380 --> 00:08:47.600
So the way that I do that is, I make a
script that runs Prettier with my config.

139
00:08:47.600 --> 00:08:51.694
So that if someone's using Emacs or
something like that, it doesn't Emacs does

140
00:08:51.694 --> 00:08:55.460
have a Prettier plugin but
maybe something else that doesn't.

141
00:08:55.460 --> 00:08:59.982
Right, they can just run the script at the
end of this and then it will just work.

142
00:08:59.982 --> 00:09:06.349
So you can make a format function and
just put Prettier-- right and

143
00:09:06.349 --> 00:09:11.996
then we have to put a little bit
of like a regex match in here.

144
00:09:11.996 --> 00:09:20.215
Back slash and
we're gonna put source slash * ,*,

145
00:09:20.215 --> 00:09:25.693
* /, *, and you can put js here or

146
00:09:25.693 --> 00:09:30.625
js comma jsx whatever you want to

147
00:09:30.625 --> 00:09:34.840
put then backslash quote.

148
00:09:35.890 --> 00:09:40.548
Why the quotes is cuz you want this
past you don't want bashers ESA

149
00:09:40.548 --> 00:09:43.430
during the expansion, right?

150
00:09:43.430 --> 00:09:48.431
So if you don't put these quotes here,
bash or zsh is going to intercept that and

151
00:09:48.431 --> 00:09:51.790
it's going to go find all
the files that match that and

152
00:09:51.790 --> 00:09:53.748
then pass that in to Prettier.

153
00:09:53.748 --> 00:09:56.560
If you want Prettier to just
get this string directly, so

154
00:09:56.560 --> 00:09:59.501
that Prettier can handle finding
all the files correctly.

155
00:09:59.501 --> 00:10:03.695
If you want a more thorough explanation
of that I made a course called

156
00:10:03.695 --> 00:10:07.660
The Complete Intro To The Command Line And
Linux.

157
00:10:07.660 --> 00:10:08.655
And I go into in-depth in that.

158
00:10:10.613 --> 00:10:14.941
Suffice to say different shells
do it different ways and

159
00:10:14.941 --> 00:10:20.477
this makes it consistent that Prettier
can handle everything for you.

160
00:10:20.477 --> 00:10:25.010
And now that I've done this
I can say npm run format.

161
00:10:27.472 --> 00:10:30.500
And you have to install it,
that'll work too.

162
00:10:30.500 --> 00:10:34.001
So now after you've done that,

163
00:10:34.001 --> 00:10:39.446
you wanna say npm install--
are sent out dash D or

164
00:10:39.446 --> 00:10:42.570
you can say- -save- Dev.

165
00:10:42.570 --> 00:10:46.115
So two dashes, either the same thing, but

166
00:10:46.115 --> 00:10:51.545
me being the lazy person,
I am -D works for me and then Prettier.

167
00:10:54.436 --> 00:10:55.629
So why- D?

168
00:10:55.629 --> 00:10:58.799
You want this to be a dev dependency
not a regular dependency.

169
00:10:58.799 --> 00:11:02.271
Dev dependencies only get installed
while you're working on the project.

170
00:11:02.271 --> 00:11:05.136
Dependencies get installed when it goes
out to production right you don't need

171
00:11:05.136 --> 00:11:08.690
Prettier going out to production you
just needed to work on the project.

172
00:11:08.690 --> 00:11:14.855
Okay, so now that I've installed that,
now you can say NPM run format and

173
00:11:14.855 --> 00:11:18.948
you can see there,
now it's running Prettier.

174
00:11:21.184 --> 00:11:24.415
Now a question you might answer
me might ask me is like, well,

175
00:11:24.415 --> 00:11:28.090
what if they don't have
Prettier installed globally?

176
00:11:28.090 --> 00:11:32.147
Which they shouldn't, to be honest with
you should really install it in every

177
00:11:32.147 --> 00:11:33.508
project that you work on.

178
00:11:33.508 --> 00:11:36.812
Let me explain to you how NPM scripts
works for just a second if you go

179
00:11:36.812 --> 00:11:40.116
into your node modules for just
a second which is a scary thing I know

180
00:11:40.116 --> 00:11:43.671
right now we only have Prettier so
it's actually not that deep in here.

181
00:11:43.671 --> 00:11:47.575
Notice there's this weird .bin directory?

182
00:11:47.575 --> 00:11:51.441
This is actually where all of your CLI
clients that are you installed your node

183
00:11:51.441 --> 00:11:52.760
modules go into, right?

184
00:11:52.760 --> 00:11:57.508
So you can see here there's
actually a Prettier thing here that

185
00:11:57.508 --> 00:12:00.830
references the bin Prettier here, right?

186
00:12:02.450 --> 00:12:07.011
So when I install eslint, you'll see the
eslint CLI command will end up in here,

187
00:12:07.011 --> 00:12:08.764
you can see this as a shortcut.

188
00:12:08.764 --> 00:12:11.051
Arrays are similar because
actually what it is.

189
00:12:11.051 --> 00:12:16.763
Again, if that's confusing to you
check out this Linux CLI course.

190
00:12:16.763 --> 00:12:19.787
But suffice to say, here my package.JSON,

191
00:12:19.787 --> 00:12:24.102
I can reference anything that's
here in this .bin directory.

192
00:12:24.102 --> 00:12:27.750
And notice smart enough to say, cool,
check the .bin inside of the node modules.

193
00:12:27.750 --> 00:12:30.374
If it's there, run that one.

194
00:12:30.374 --> 00:12:33.171
Does that makes sense?

195
00:12:33.171 --> 00:12:35.981
What's nice about that
is now it's portable so

196
00:12:35.981 --> 00:12:39.844
I can run this on Windows I can run
this on Linux I can run it on Mac and

197
00:12:39.844 --> 00:12:44.012
it all works the same way cuz all
references the same Prettier binary.

198
00:12:46.548 --> 00:12:48.650
Makes sense?

199
00:12:48.650 --> 00:12:52.790
Probably more NPM stuff than you ever
wanted to know, but that's how that works.

200
00:12:52.790 --> 00:12:55.334
There aren't really any alternatives for
Prettier at the moment,

201
00:12:55.334 --> 00:12:58.456
I remember seeing one that they're trying
to make one that's more configurable,

202
00:12:58.456 --> 00:13:01.400
more like es lint where you
can bring in your own rules.

203
00:13:01.400 --> 00:13:05.254
Like I said, I don't really wanna think
about it so I just use Prettier but

204
00:13:05.254 --> 00:13:08.060
you and prettier has good opinions, right?

205
00:13:08.060 --> 00:13:11.664
But that's my thing about code format,
it's all just opinions about what looks

206
00:13:11.664 --> 00:13:15.150
nice and it just doesn't
matter it's just code, right?

207
00:13:15.150 --> 00:13:16.790
I'm not out here writing art.

208
00:13:16.790 --> 00:13:22.132
&gt;&gt; There's one more question about package
JSON when you have a package lock, it gets

209
00:13:22.132 --> 00:13:27.720
the exact same version but when that's not
there, how does it determine the version?

210
00:13:28.780 --> 00:13:32.370
&gt;&gt; Good question, it's basically what's
the point of this package lock file.

211
00:13:34.480 --> 00:13:38.225
So, without getting into
incredible depth in this,

212
00:13:38.225 --> 00:13:43.719
if you look in your package, it should
be extremely long and it basically locks

213
00:13:43.719 --> 00:13:48.901
down your version to specific numbers and
also specific If hashes right?

214
00:13:48.901 --> 00:13:52.950
So that if I'm going out from my local
department where I tested everything works

215
00:13:52.950 --> 00:13:54.807
in the way that I'm happy with them.

216
00:13:54.807 --> 00:13:58.562
And then I go to production I can be
guaranteed that I'm getting the same

217
00:13:58.562 --> 00:14:00.564
version that was the exact same file so

218
00:14:00.564 --> 00:14:04.151
that's not like Microsoft can just
switch the files on me, right?

219
00:14:04.151 --> 00:14:07.841
Cuz basically it'll install everything and
then it'll check the hash,

220
00:14:07.841 --> 00:14:11.232
make sure is this literally the same
file that the developer saw when

221
00:14:11.232 --> 00:14:12.918
they were working on it locally.

222
00:14:12.918 --> 00:14:16.272
But you have to install it in a specific
way, you have to say npm install--

223
00:14:16.272 --> 00:14:19.484
use lock or-- production or
something, I can't remember exactly.

224
00:14:19.484 --> 00:14:24.383
But with some flag, it'll actually totally
ignore your package.json it'll only look

225
00:14:24.383 --> 00:14:25.570
at the package lock.

226
00:14:25.570 --> 00:14:28.362
So when you're working locally,
you don't wanna do that, but

227
00:14:28.362 --> 00:14:30.806
when you go out to production
you do wanna do it that way.

228
00:14:33.051 --> 00:14:36.489
So when you do you just say npm install,
it'll ignore your package lock,

229
00:14:36.489 --> 00:14:39.940
if it doesn't exist, it will actually
generate the package lock file.

230
00:14:39.940 --> 00:14:42.144
And you should check in
your package lock file and

231
00:14:42.144 --> 00:14:44.420
you should never modify it directly.

232
00:14:44.420 --> 00:14:48.220
Only NPM should modify
the package lock JSON file.

233
00:14:48.220 --> 00:14:51.498
Yeah, for the most part, you can just
kind of just ignore its existence and

234
00:14:51.498 --> 00:14:53.950
just kind of just let it update itself.

235
00:14:53.950 --> 00:14:59.024
If you ever get in a bad state with it,
which I've I frequently find myself doing

236
00:14:59.024 --> 00:15:03.743
just remove it and then just run npm
install again and it'll generate it.

237
00:15:03.743 --> 00:15:08.040
That's what it's for it's for
making its code supply chain auditing.

238
00:15:08.040 --> 00:15:09.898
I think it's the best way to put on what.

239
00:15:09.898 --> 00:15:14.977
&gt;&gt; It's for just a quick note there
were people that were having an issue

240
00:15:14.977 --> 00:15:20.335
getting In Prettier working inside
of their editor with format on save.

241
00:15:20.335 --> 00:15:25.303
And there's an additional default
format or setting in VS Code that

242
00:15:25.303 --> 00:15:30.990
are saying that setting it to
Prettier fixed that issue for them.

243
00:15:30.990 --> 00:15:35.567
&gt;&gt; Yes so you have to set the default
JavaScript format because there's multiple

244
00:15:35.567 --> 00:15:39.670
different ways you can format JavaScript,
eslint being one of them.

245
00:15:40.980 --> 00:15:45.837
So you do have to set that, you have to
set a setting somewhere of basically that

246
00:15:45.837 --> 00:15:48.280
is what makes JavaScript the default.

247
00:15:48.280 --> 00:15:49.620
Usually, it will ask you.

248
00:15:49.620 --> 00:15:51.961
&gt;&gt; It's default format or is the.

249
00:15:55.677 --> 00:15:59.889
&gt;&gt; Okay, so default format has none.

250
00:15:59.889 --> 00:16:04.201
Looks like you can have one of
your extensions be that and

251
00:16:04.201 --> 00:16:09.082
that'll work, that's going to try and
run it on everything.

252
00:16:11.945 --> 00:16:15.640
There is a way and that might even
be you just have to go into this.

253
00:16:17.200 --> 00:16:20.724
There's a way you can see the JSON version
of the configuration you can actually go

254
00:16:20.724 --> 00:16:23.190
in and set it just for
JavaScript and not for everything.

255
00:16:25.140 --> 00:16:28.695
But you do have to set the normal it'll
say, hey, I don't have a format or for

256
00:16:28.695 --> 00:16:31.130
JavaScript, do you want me
to set Prettier to be it?

257
00:16:31.130 --> 00:16:34.620
And you can just say yes,
normally or just prompt you.

258
00:16:34.620 --> 00:16:40.009
&gt;&gt; If you hit Cmd+Shift+P and
then type in settings,

259
00:16:40.009 --> 00:16:46.874
it'll give you the options between UI or
JSON it's in the center.

260
00:16:46.874 --> 00:16:50.592
&gt;&gt; There, you go so
here's all of my settings there's

261
00:16:50.592 --> 00:16:55.504
probably my credit card information
in here somewhere so here we go.

262
00:16:55.504 --> 00:16:57.204
This is the one you want here, editor.

263
00:17:00.698 --> 00:17:01.998
Probably these two.

264
00:17:01.998 --> 00:17:06.569
So JavaScript here like that,
which is setting it for specifically for

265
00:17:06.569 --> 00:17:08.330
the JavaScript language.

266
00:17:08.330 --> 00:17:13.540
You can say editor.default format or
esbenp.prettier-vscode.

267
00:17:13.540 --> 00:17:18.152
And you can see there I haven't set it
set for JSON, and I haven't set for

268
00:17:18.152 --> 00:17:20.340
JavaScript React as well.

269
00:17:20.340 --> 00:17:23.500
Thank you.
So that's how you're supposed to do it if

270
00:17:23.500 --> 00:17:26.474
you wanna set it for just your JavaScript,

271
00:17:26.474 --> 00:17:30.700
setting the default format or
should probably be just fine.

272
00:17:30.700 --> 00:17:34.080
You might have some problems like you try
and save us Python files and be like,

273
00:17:34.080 --> 00:17:35.330
I don't know how to do this.

274
00:17:35.330 --> 00:17:38.175
This gonna be a problem to
take Nina's course not mine.

