WEBVTT

1
00:00:00.150 --> 00:00:05.983
So let's talk about some, just like some
development tools that node gives you,

2
00:00:05.983 --> 00:00:08.360
or sorry, that react gives you.

3
00:00:10.660 --> 00:00:12.590
We'll go down here to this one.

4
00:00:13.820 --> 00:00:16.017
The first one is setting your node down.

5
00:00:16.017 --> 00:00:17.776
Typically, your browser tools
are gonna do this for you.

6
00:00:17.776 --> 00:00:19.619
Parcel for example, will.

7
00:00:19.619 --> 00:00:23.783
If you run parcel in dev mode,
it's gonna run NODE_ENV=development,

8
00:00:23.783 --> 00:00:25.340
which is what you see here.

9
00:00:25.340 --> 00:00:27.520
And then if you just say, parcel build,

10
00:00:27.520 --> 00:00:32.160
it'll automatically switch
the NODE_ENV to be production, right?

11
00:00:32.160 --> 00:00:34.400
So you actually end up with
a smaller bundle size.

12
00:00:34.400 --> 00:00:36.560
It'll strip out all of
the developer tools.

13
00:00:37.890 --> 00:00:38.896
I wonder if I can show you that.

14
00:00:41.619 --> 00:00:42.287
Yeah, I think I can.

15
00:00:42.287 --> 00:00:43.356
Hold on.

16
00:00:45.110 --> 00:00:47.826
So let's first look at this.

17
00:00:52.502 --> 00:00:55.161
For example,
let's leave off this key thing.

18
00:00:55.161 --> 00:00:56.320
You don't have to follow me for it now.

19
00:00:58.700 --> 00:01:01.780
This warning only comes in
development mode, right?

20
00:01:02.990 --> 00:01:07.330
It has a nice error message and
does a bunch of nice things for you.

21
00:01:07.330 --> 00:01:12.219
But the bundle size of the development
build of react is, I think, four times

22
00:01:12.219 --> 00:01:17.350
bigger cuz it has a lot of error strings
and helpful helpers and things like that.

23
00:01:17.350 --> 00:01:22.642
It's also significantly slower like
a factor of five or something.

24
00:01:22.642 --> 00:01:24.600
I don't know what it is now but
it used to be ten x slower.

25
00:01:24.600 --> 00:01:31.280
So in other words, don't ship
the development mode to production.

26
00:01:31.280 --> 00:01:34.472
Slack famously did that for
like five years, right?

27
00:01:34.472 --> 00:01:37.127
Someone opened up their dev
tools on electron and was like,

28
00:01:37.127 --> 00:01:39.899
this is still in development mode,
no wonder this is so slow.

29
00:01:39.899 --> 00:01:44.726
[LAUGH] And then they fixed it and
they got a significant performance boost.

30
00:01:44.726 --> 00:01:50.376
But if we do this,
we'll talk about building

31
00:01:50.376 --> 00:01:55.433
react later in intermediate react, but

32
00:01:55.433 --> 00:02:02.732
I think I can just do npx parcel
build source index or HTML.

33
00:02:07.659 --> 00:02:09.811
Parcel gonna be annoying,
that's fine, whatever.

34
00:02:18.133 --> 00:02:21.100
Okay, so now I think I've built this for
production.

35
00:02:25.195 --> 00:02:31.084
All right, and so
now I can open it with a dot and

36
00:02:31.084 --> 00:02:34.111
dist and index.html.

37
00:02:36.731 --> 00:02:39.240
Our second, let me do course, okay?

38
00:02:41.535 --> 00:02:42.537
How much recommended
a bit we're committing?

39
00:02:42.537 --> 00:02:46.490
Let's do it, okay, npx serve dist.

40
00:02:53.546 --> 00:02:59.219
Okay, so
now notice that warning is gone, right?

41
00:02:59.219 --> 00:03:03.618
And now if we compare our network here,

42
00:03:03.618 --> 00:03:07.760
our build size is 102 kilobytes.

43
00:03:10.592 --> 00:03:13.590
You know we never did,
I think that's kind of funny.

44
00:03:13.590 --> 00:03:15.590
I don't think we ever deleted this.

45
00:03:15.590 --> 00:03:17.080
We didn't set.

46
00:03:17.080 --> 00:03:21.856
So talking about naming and shaming
people for not doing performance things,

47
00:03:21.856 --> 00:03:27.010
let's name and shame me for not having you
delete this unpackaged stuff right here.

48
00:03:27.010 --> 00:03:31.143
So go ahead and do that, 12 and
13 lines, 12 and 13 in your index.html.

49
00:03:31.143 --> 00:03:33.770
We haven't needed that since we
started using parcel, right?

50
00:03:37.423 --> 00:03:38.770
How funny, okay.

51
00:03:43.949 --> 00:03:46.840
So let's actually rebuild parcel.

52
00:03:55.340 --> 00:03:58.151
Yeah, if you ever pulled out of my repos,
well,

53
00:03:58.151 --> 00:04:00.220
I did that very early on in the repo.

54
00:04:02.531 --> 00:04:07.130
So yes, beautiful cocktails,
cockatoos rather.

55
00:04:07.130 --> 00:04:12.350
So this is 131 kilobytes now,
and I think if we go look at our,

56
00:04:12.350 --> 00:04:16.314
let's say npm run dev here and
look at one, two,

57
00:04:16.314 --> 00:04:20.670
three, four, and look at the network here.

58
00:04:20.670 --> 00:04:26.540
Yeah, you can see this is 1.13
megabytes worth of JavaScript, right?

59
00:04:26.540 --> 00:04:27.562
So it's actually enormous.

60
00:04:31.131 --> 00:04:34.500
So you can see the,
it is ten times bigger, right?

61
00:04:34.500 --> 00:04:36.130
That's huge.

62
00:04:36.130 --> 00:04:39.843
That it also saw minifying is not doing it
like so, it's doing inline source maps is

63
00:04:39.843 --> 00:04:42.970
doing a bunch of stuff that
it wouldn't do otherwise.

64
00:04:42.970 --> 00:04:47.491
So this is a whole roundabout ways like
it's extremely important that you build

65
00:04:47.491 --> 00:04:51.013
react in the right way or
it's gonna be very slow and very big.

66
00:04:51.013 --> 00:04:56.087
And it's also gonna give away more
information than about your app and

67
00:04:56.087 --> 00:04:59.272
you probably want to give away, so, yeah.

68
00:04:59.272 --> 00:05:02.403
Hopefully, that's demonstrative
of why it's important for

69
00:05:02.403 --> 00:05:03.649
you to think about that.

70
00:05:03.649 --> 00:05:05.542
Many tools today just will
think about it for you.

71
00:05:05.542 --> 00:05:09.184
They automatically,
when you do production builds,

72
00:05:09.184 --> 00:05:12.120
it'll just stick it into production mode.

73
00:05:13.130 --> 00:05:17.851
But that's how you do the switch
here is when when you build React,

74
00:05:17.851 --> 00:05:22.593
they basically say if node MV
equals development, do all of this.

75
00:05:22.593 --> 00:05:24.080
Otherwise, don't do it.

