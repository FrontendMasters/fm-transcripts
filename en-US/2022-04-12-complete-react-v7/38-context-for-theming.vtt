WEBVTT

1
00:00:00.330 --> 00:00:03.867
Once you create a new file, and

2
00:00:03.867 --> 00:00:08.774
I want you to call this ThemeContext.js.

3
00:00:13.989 --> 00:00:19.585
We're gonna import,
createContext from react,

4
00:00:19.585 --> 00:00:27.650
we're gonna make a thing called
ThemeContext with createContext.

5
00:00:27.650 --> 00:00:30.250
And then like a hook,
you give it a default value.

6
00:00:32.040 --> 00:00:33.440
So this could be something like brown.

7
00:00:34.560 --> 00:00:39.761
However, the way that we're going to store
this, we're actually gonna use a hook.

8
00:00:39.761 --> 00:00:43.550
So we're gonna use useState to
represent our ThemeContext.

9
00:00:44.640 --> 00:00:48.430
So we actually want our default
value to be what a hook looks like.

10
00:00:48.430 --> 00:00:50.470
Sorry, specifically a useState hook.

11
00:00:50.470 --> 00:00:55.342
And if you remember, I'll just show

12
00:00:55.342 --> 00:01:00.248
you here like const theme setTheme.

13
00:01:00.248 --> 00:01:06.949
Equals useState darkblue or

14
00:01:06.949 --> 00:01:11.700
whatever, right.

15
00:01:11.700 --> 00:01:13.255
This is what a hook looks like, right.

16
00:01:13.255 --> 00:01:17.739
So we needed to mimic what this is.

17
00:01:17.739 --> 00:01:21.237
Honestly, you can actually just
do this and it would be fine.

18
00:01:21.237 --> 00:01:23.950
But, again,
we're gonna get into TypeScript later.

19
00:01:23.950 --> 00:01:28.397
And if you give it what the default
value is, then it knows the type of it.

20
00:01:28.397 --> 00:01:30.420
And it can use that throughout
your entire application.

21
00:01:32.390 --> 00:01:35.110
So we're gonna give it
something that looks like this.

22
00:01:35.110 --> 00:01:38.050
So we're gonna give it our default
color which is going to be green or

23
00:01:38.050 --> 00:01:40.200
whatever color you wanna put there.

24
00:01:40.200 --> 00:01:46.500
You can put whatever your
favorite hex color is.

25
00:01:46.500 --> 00:01:50.911
I remember from Chris Coyier

26
00:01:50.911 --> 00:01:55.697
from CSS tricks his is fog dog.

27
00:01:55.697 --> 00:02:00.442
F06d06, and I believe that's orange.

28
00:02:03.587 --> 00:02:05.237
Anyway, whatever you want.

29
00:02:05.237 --> 00:02:05.930
I'm gonna put green.

30
00:02:07.120 --> 00:02:10.840
It doesn't matter, cuz it just matters
that it's a string or something like that.

31
00:02:10.840 --> 00:02:13.460
And then we just wanted an empty
function that does nothing.

32
00:02:14.580 --> 00:02:15.629
Cuz if someone calls this and

33
00:02:15.629 --> 00:02:18.570
it's not actually a hook we just wanted
to invoke a function that does nothing.

34
00:02:19.880 --> 00:02:21.848
So this is just an empty function, right.

35
00:02:24.600 --> 00:02:29.556
Okay, and then we're going to
export default ThemeContext.

36
00:02:32.899 --> 00:02:36.200
So I know this is a little strange,
but at the end of the day,

37
00:02:36.200 --> 00:02:38.456
we're just mimicking a useState hook.

38
00:02:38.456 --> 00:02:39.920
That's the TLDR.

39
00:02:42.180 --> 00:02:45.560
And this will actually
never be passed around.

40
00:02:45.560 --> 00:02:48.806
The only reason that this
would actually be used,

41
00:02:48.806 --> 00:02:52.765
is if you ever used the context
without setting the context.

42
00:02:52.765 --> 00:02:55.180
Which you would never do,
just for the record.

43
00:02:55.180 --> 00:02:59.060
I guess the only time you
might do it in testing but

44
00:02:59.060 --> 00:03:03.870
even then that'd be a really
strange way of doing it.

45
00:03:03.870 --> 00:03:05.701
Yeah, question.
&gt;&gt; I was just gonna say I appreciate you

46
00:03:05.701 --> 00:03:08.800
explaining this because I feel like I've
seen this in tutorials a bunch of times.

47
00:03:08.800 --> 00:03:12.850
I've always been like, why are we putting
something here and what happens with it.

48
00:03:12.850 --> 00:03:17.072
&gt;&gt; Yeah, our app would totally
work if you just did this.

49
00:03:17.072 --> 00:03:20.200
You don't have to put anything in there.

50
00:03:21.250 --> 00:03:24.651
But for types, and technically it would
get used if you didn't have a parent

51
00:03:24.651 --> 00:03:27.270
provider of context, but
I'll explain that in a second.

52
00:03:29.690 --> 00:03:31.722
But it is good, specifically for types.

53
00:03:31.722 --> 00:03:36.931
Even if you're not using TypeScript VS
Code can read the types from TypeScript.

54
00:03:36.931 --> 00:03:40.779
Cuz it's actually TypeScript running in
VS Code to tell you what kind of value

55
00:03:40.779 --> 00:03:41.735
it expects there.

56
00:03:41.735 --> 00:03:44.877
So you still get the benefits of
TypeScript even if you're not writing

57
00:03:44.877 --> 00:03:45.523
TypeScript.

58
00:03:45.523 --> 00:03:47.770
So that's why I have you do that as well.

59
00:03:49.150 --> 00:03:52.699
Okay so now we have the ability
to use this context provider and

60
00:03:52.699 --> 00:03:54.959
context consumer in our application.

61
00:03:54.959 --> 00:03:57.990
And I'll show you both
how you do both of those.

62
00:04:00.160 --> 00:04:05.678
So I'll head back first to App.js We're

63
00:04:05.678 --> 00:04:10.630
going to import ThemeContext
from ThemeContext.

64
00:04:13.010 --> 00:04:17.728
We're going to create a hook here called

65
00:04:17.728 --> 00:04:21.761
the theme = useState from react.

66
00:04:21.761 --> 00:04:24.786
So you have to import that up here as
well, cuz we didn't have that already.

67
00:04:24.786 --> 00:04:29.577
Make this the actual default
color that you wanna use here.

68
00:04:29.577 --> 00:04:34.107
So I used darkblue which is
a valid CSS color, right.

69
00:04:34.107 --> 00:04:36.408
But you can put whatever valid
CSS color you wanna put there.

70
00:04:39.456 --> 00:04:41.853
Okay, and
notice that I'm not destructuring it here,

71
00:04:41.853 --> 00:04:42.878
which is a bit strange.

72
00:04:42.878 --> 00:04:45.051
But that's because I'm going
to pass it into my context.

73
00:04:49.587 --> 00:04:54.135
Okay, and then here,
inside the StrictMode,

74
00:04:54.135 --> 00:04:59.412
I'm gonna put ThemeContext,
value equals theme.

75
00:04:59.412 --> 00:05:06.725
Sorry, ThemeContext.Provider rather,
value equals theme.

76
00:05:11.548 --> 00:05:12.896
Okay.

77
00:05:15.388 --> 00:05:17.292
Now why do I have this component?

78
00:05:19.847 --> 00:05:26.230
Well anywhere inside of this component,
now that ThemeContext is available.

79
00:05:26.230 --> 00:05:28.080
So any component all
the way down the tree.

80
00:05:28.080 --> 00:05:32.151
So all the way down to the lowest
pet component in there can read

81
00:05:32.151 --> 00:05:33.970
off of this context.

82
00:05:33.970 --> 00:05:38.296
If I had something other
component here and

83
00:05:38.296 --> 00:05:42.750
notice that it is outside of ThemeContext.

84
00:05:42.750 --> 00:05:45.660
Everything in here could not
read from the theme, right.

85
00:05:47.760 --> 00:05:53.179
Now you can get crazy about this, and you
can say it seems ThemeContext provider.

86
00:05:53.179 --> 00:05:58.503
You can actually use to two
different theme contexts and

87
00:05:58.503 --> 00:06:02.813
you can have a theme2 here,
which is green.

88
00:06:02.813 --> 00:06:09.801
And value equals theme2, so
you actually use the same code twice.

89
00:06:09.801 --> 00:06:15.019
And have different, and so this one if I
ever called read from the consumer here,

90
00:06:15.019 --> 00:06:17.040
it would get green, right.

91
00:06:17.040 --> 00:06:19.650
And if I called it from within here,
I would get blue.

92
00:06:21.710 --> 00:06:23.850
I've never had a use case for this.

93
00:06:25.340 --> 00:06:28.870
You can actually get
even stranger than this.

94
00:06:28.870 --> 00:06:30.594
I can have a third one here.

95
00:06:33.470 --> 00:06:37.986
And have a value equals, let's just
get rid of this one for now, well,

96
00:06:37.986 --> 00:06:39.292
actually forever.

97
00:06:39.292 --> 00:06:44.098
[LAUGH] ThemeContext equals theme2.

98
00:06:48.049 --> 00:06:51.870
Sorry, this would have to be the
ThemeContext.Provider rather .Provider.

99
00:06:54.530 --> 00:06:57.150
So now I have nested ones, right.

100
00:06:59.010 --> 00:07:03.843
So let's say inside of here I had

101
00:07:03.843 --> 00:07:07.790
other component, okay.

102
00:07:07.790 --> 00:07:10.650
Now inside of other component
let's say I read from the context.

103
00:07:10.650 --> 00:07:13.063
Which theme would I get?

104
00:07:13.063 --> 00:07:16.340
I would get theme2, right,
cuz actually it gets the closest one.

105
00:07:18.030 --> 00:07:22.270
So this one could have a different one
set than everything out over here.

106
00:07:22.270 --> 00:07:25.360
Now, I'm showing you all this again,
I've never had a use case for this.

107
00:07:25.360 --> 00:07:26.819
This sounds wildly complex for

108
00:07:26.819 --> 00:07:29.691
reasons that are unknown to me
that you would want to do this.

109
00:07:29.691 --> 00:07:32.407
But I'm just showing you
that it is possible.

110
00:07:32.407 --> 00:07:35.149
And that's why they have it
built into a component so

111
00:07:35.149 --> 00:07:37.405
that these kind of patterns are possible.

112
00:07:40.550 --> 00:07:42.880
My plea to you is never do that [LAUGH].

113
00:07:44.070 --> 00:07:47.644
If you can avoid it at all, I'm sure
there's gonna be some great reason for

114
00:07:47.644 --> 00:07:48.740
some niche use cases.

115
00:07:48.740 --> 00:07:51.240
It's gonna be amazing and
you're gonna be so happy they did it.

116
00:07:51.240 --> 00:07:53.934
And probably upset all your coworkers,
that's fine.

117
00:07:56.777 --> 00:07:58.540
Okay, so here we are.

118
00:07:58.540 --> 00:08:01.940
We've created this, we have one theme,
we're doing no more than one theme,

119
00:08:01.940 --> 00:08:02.620
please do not.

120
00:08:04.160 --> 00:08:08.215
And now everything inside of here
can read from the ThemeContext.

121
00:08:11.464 --> 00:08:14.160
Question so far about that, we're not
doing anything with the context now.

122
00:08:14.160 --> 00:08:16.678
Now it's just available but
we're not reading from it.

123
00:08:25.371 --> 00:08:26.400
Cool.

124
00:08:26.400 --> 00:08:32.842
So let's head into

125
00:08:35.435 --> 00:08:41.635
ThemeContext, we're gonna
go into search params.

126
00:08:47.092 --> 00:08:52.234
Using context with hooks is awesome and
very easy.

127
00:08:52.234 --> 00:08:55.992
You just pull in, useContext,

128
00:09:00.393 --> 00:09:05.785
And then here at the top we're

129
00:09:05.785 --> 00:09:11.823
just gonna say const theme equals

130
00:09:11.823 --> 00:09:17.009
useContext ThemeContext.

131
00:09:17.009 --> 00:09:22.065
So we pulled in ThemeContext up here, we
pulled in the useContext hook from react,

132
00:09:22.065 --> 00:09:24.755
and we just give useContext ThemeContext.

133
00:09:24.755 --> 00:09:27.515
And all of a sudden we can just
start reading off of the context.

134
00:09:27.515 --> 00:09:28.775
It's very easy.

135
00:09:30.165 --> 00:09:35.105
Now, keep in mind, there is setTheme here,
we're just not using it, right.

136
00:09:35.105 --> 00:09:38.019
And so we don't have to pull it
off if we're not gonna use it.

137
00:09:40.511 --> 00:09:44.878
Okay, and
now to make our button very beautiful.

138
00:09:44.878 --> 00:09:48.454
Button style equals, so

139
00:09:48.454 --> 00:09:53.740
this is just like CSS style, right.

140
00:09:53.740 --> 00:09:58.616
And you can just give it
an object of styles to apply, so

141
00:09:58.616 --> 00:10:02.227
I'm gonna say background color theme.

142
00:10:09.004 --> 00:10:12.653
Cool, and now, if you go over here,
notice the button is now blue,

143
00:10:18.415 --> 00:10:20.328
Or if you go back to your app.

144
00:10:22.720 --> 00:10:26.740
Whatever you put here is now going
to be the color of this button.

145
00:10:26.740 --> 00:10:30.802
So pink, there you go, turns pink.

146
00:10:35.612 --> 00:10:41.162
Yeah, so
that is the most pleasant use case

147
00:10:41.162 --> 00:10:46.259
of reading out in a hook, the context.

148
00:10:46.259 --> 00:10:48.832
&gt;&gt; Could you please
show the button coding.

149
00:10:48.832 --> 00:10:51.309
&gt;&gt; Yep that there.

150
00:10:54.234 --> 00:10:57.089
&gt;&gt; I see, thank you.

151
00:10:57.089 --> 00:10:58.875
&gt;&gt; Yeah so
some of that might be a little confusing.

152
00:10:58.875 --> 00:11:00.385
There's two sets of curly braces here.

153
00:11:02.515 --> 00:11:07.461
&gt;&gt; I was thinking about that the first set
is to do that JavaScript thing of we're-

154
00:11:07.461 --> 00:11:09.099
&gt;&gt; Putting code here.

155
00:11:09.099 --> 00:11:12.135
&gt;&gt; Putting code here and the second
one is specifically that's an object.

156
00:11:12.135 --> 00:11:14.914
&gt;&gt; Yep, I appreciate that VS Code
colors now in two different colors,

157
00:11:14.914 --> 00:11:16.005
it didn't use to do that.

158
00:11:17.310 --> 00:11:20.939
But semantically even though that you have
two curly braces next to each other they

159
00:11:20.939 --> 00:11:22.421
mean different things, right.

160
00:11:22.421 --> 00:11:29.192
This is an object and the outside one is
letting JSX know that it's an expression

161
00:11:37.525 --> 00:11:38.068
Okay.

162
00:11:41.026 --> 00:11:46.654
So, let's go into details
because we wanna make it so

163
00:11:46.654 --> 00:11:49.290
this button is the same.

164
00:11:49.290 --> 00:11:52.160
Right, so
that this one also reads from the context.

165
00:11:53.560 --> 00:11:58.620
Now, let me show you how I would do this,
if I was lazy, which I am.

166
00:11:58.620 --> 00:12:03.170
I am already using hooks here,
I would definitely just say const theme.

167
00:12:03.170 --> 00:12:06.210
And I would just use the context
hook here and then pass it in.

168
00:12:07.850 --> 00:12:09.979
Why wouldn't you,
that's super easy to do, right.

169
00:12:11.130 --> 00:12:13.840
But I'm gonna show you how
to do it the hard way.

170
00:12:15.970 --> 00:12:22.270
So, import ThemeContext from ThemeContext.

171
00:12:23.680 --> 00:12:25.170
Then I want you to come
down here to the button.

172
00:12:25.170 --> 00:12:30.090
And the way we're gonna do this is
we're gonna do ThemeContext.Consumer.

173
00:12:32.300 --> 00:12:38.300
And then we're gonna say,
this gets invoked with a function.

174
00:12:38.300 --> 00:12:43.187
And then we're going
to do a function here,

175
00:12:43.187 --> 00:12:47.292
that's gonna read from that theme.

176
00:12:47.292 --> 00:12:53.435
Now inside this theme,
we wanna pull out the theme here, right.

177
00:12:53.435 --> 00:12:56.651
Cuz this is destructuring that
to get the theme out of it.

178
00:12:56.651 --> 00:13:01.924
And now inside of this context we

179
00:13:01.924 --> 00:13:09.161
can say style equals backgroundColor theme

180
00:13:15.736 --> 00:13:19.755
And we can put Adopt name.

181
00:13:27.263 --> 00:13:33.612
So that [LAUGH] is how you read out
of context in the class component.

182
00:13:42.790 --> 00:13:49.884
So this function gets invoked by react
with the theme context that we asked for.

183
00:13:49.884 --> 00:13:52.609
That's what ThemeContext.Consumer does for
you.

184
00:13:58.172 --> 00:14:01.915
Pretty unreadable, isn't it?

185
00:14:01.915 --> 00:14:03.001
Yeah I'm not a fan.

186
00:14:05.742 --> 00:14:10.825
Which is why I'd say just say const theme

187
00:14:10.825 --> 00:14:15.911
equals useContext(ThemeContext),

188
00:14:15.911 --> 00:14:20.704
and then just pass it in here, right.

189
00:14:20.704 --> 00:14:24.473
Theme equals theme, bam damn now,

190
00:14:24.473 --> 00:14:28.754
it's this dot props out theme, right.

191
00:14:31.795 --> 00:14:34.830
But we'll leave it, I think it's good for
you to know how to do it.

192
00:14:36.150 --> 00:14:40.117
There might be some reason
why you might not want to.

193
00:14:40.117 --> 00:14:42.713
This is how it used to be done
before hooks were a thing.

194
00:14:48.044 --> 00:14:51.702
This used to be a really
common pattern in React.

195
00:14:51.702 --> 00:14:53.532
Of having a parent component and

196
00:14:53.532 --> 00:14:56.527
then a function that would
get invoked inside of it.

197
00:14:56.527 --> 00:15:00.409
With some sort of passed in detail,
it was annoying.

198
00:15:00.409 --> 00:15:04.716
Be grateful that you have hooks now which
are a lot easier to deal with that kind of

199
00:15:04.716 --> 00:15:06.014
stuff yeah questions.

200
00:15:06.014 --> 00:15:09.738
&gt;&gt; Are you gonna implement
the ability to change this or

201
00:15:09.738 --> 00:15:13.264
what would be the best way to-
&gt;&gt; The next thing [CROSSTALK] I'll

202
00:15:13.264 --> 00:15:14.998
come and talk about that next, yeah.

203
00:15:14.998 --> 00:15:16.063
Good question,

204
00:15:16.063 --> 00:15:20.710
let's go make sure that actually you
can see here now the button is blue.

