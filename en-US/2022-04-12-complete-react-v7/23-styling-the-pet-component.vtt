WEBVTT

1
00:00:00.590 --> 00:00:04.974
So let's go back to pet.js.

2
00:00:04.974 --> 00:00:10.441
And let's actually make this look kinda
nice since at the moment it's kinda black,

3
00:00:10.441 --> 00:00:10.982
right?

4
00:00:10.982 --> 00:00:14.884
So we're just gonna throw in Real
the Quick, it's a nice styling.

5
00:00:19.890 --> 00:00:26.936
So, oops,
up here we're gonna pull out name,

6
00:00:26.936 --> 00:00:33.462
animal, breed, images, location, ID,

7
00:00:37.729 --> 00:00:40.991
And we're gonna make a hero image.

8
00:00:44.890 --> 00:00:46.332
And say

9
00:00:46.332 --> 00:00:55.420
let
hero=http://pet-images.dev-apis.com/pet/n-

10
00:00:55.420 --> 00:01:01.732
one.jpg.

11
00:01:01.732 --> 00:01:03.412
So it's like a placeholder.

12
00:01:03.412 --> 00:01:06.097
All of them have images for now, so
you don't have to really worry about it.

13
00:01:08.760 --> 00:01:14.054
So if there are any images that you've

14
00:01:14.054 --> 00:01:21.506
inherited here from images then,
hero=images0.

15
00:01:26.730 --> 00:01:29.370
So basically, here's my default image.

16
00:01:29.370 --> 00:01:33.459
If there's any images that
comes back from the pet API,

17
00:01:33.459 --> 00:01:36.244
then make that the hero image, okay?

18
00:01:36.244 --> 00:01:38.460
You can just delete all of this.

19
00:01:38.460 --> 00:01:43.676
We're gonna make an a tag, a href=,

20
00:01:43.676 --> 00:01:50.685
we'll put some curly braces and
backticks there,

21
00:01:50.685 --> 00:01:56.400
/details/$ template string here ID.

22
00:01:56.400 --> 00:02:00.607
So we're gonna be using React Router here
in just a second to make a route that

23
00:02:00.607 --> 00:02:04.683
anytime they go to this page they can
actually see like a full detail page on

24
00:02:04.683 --> 00:02:06.547
whatever pet we're looking at.

25
00:02:06.547 --> 00:02:12.795
And then we're gonna say ClassName=pet,
Okay?

26
00:02:12.795 --> 00:02:18.470
Then div ClassName=image-container.

27
00:02:21.750 --> 00:02:26.930
Put an image,
sources to assign to be hero,

28
00:02:26.930 --> 00:02:34.747
alt=the name, Okay?

29
00:02:34.747 --> 00:02:43.580
And then div ClassName=info,
I'll put the h1 with their name.

30
00:02:46.993 --> 00:02:49.259
And h2 with,

31
00:02:57.759 --> 00:03:01.670
I don't know why I did it that way,
you can do it this way, so animal.

32
00:03:01.670 --> 00:03:09.047
Animal, Breed,

33
00:03:15.245 --> 00:03:16.620
Location.

34
00:03:18.556 --> 00:03:19.940
Is this gonna get weird with spacing?

35
00:03:19.940 --> 00:03:20.994
No, it doesn't, that's nice.

36
00:03:26.015 --> 00:03:26.987
Interesting, that's funny.

37
00:03:26.987 --> 00:03:32.440
So, I put M dashes here
instead of just normal dashes.

38
00:03:32.440 --> 00:03:38.921
Which on Mac you can do with option minus,
because it looks nicer in text.

39
00:03:38.921 --> 00:03:41.962
And it's telling me is like, Hey,
you use an M dash instead of a minus,

40
00:03:41.962 --> 00:03:43.194
is that what you meant to do?

41
00:03:43.194 --> 00:03:46.511
It is, so leave me alone.

42
00:03:46.511 --> 00:03:51.510
Okay, so
let me just make sure I did this right.

43
00:03:51.510 --> 00:03:54.150
Yeah, you can see here
this looks a lot nicer.

44
00:03:54.150 --> 00:04:01.547
Okay, Any questions
about what we did here?

45
00:04:01.547 --> 00:04:06.453
This is an application of everything
that we've learned already,

46
00:04:06.453 --> 00:04:09.300
nothing should be too new here for you.

47
00:04:16.026 --> 00:04:21.024
&gt;&gt; Was there a greater meaning or
a goal between kinda splitting up all

48
00:04:21.024 --> 00:04:25.500
the parameters from props to
what we have the name does now?

49
00:04:25.500 --> 00:04:29.630
&gt;&gt; Is there a reason why I did like
a distraction appears are you trusting me?

50
00:04:29.630 --> 00:04:30.562
&gt;&gt; Yeah I guess.

51
00:04:30.562 --> 00:04:34.967
&gt;&gt; Instead of doing like props.name and
props.breed and,-

52
00:04:34.967 --> 00:04:36.095
&gt;&gt; Yeah.

53
00:04:36.095 --> 00:04:37.535
&gt;&gt; Stylistic choice.

54
00:04:40.370 --> 00:04:42.860
Yeah, there's no reason other than like,
it's shorter to type.

55
00:04:42.860 --> 00:04:47.487
I don't have to try prop
stop blah a billion times.

56
00:04:47.487 --> 00:04:48.570
There's lots of people
that do it that way.

57
00:04:48.570 --> 00:04:50.765
So that's totally up to you.

58
00:04:50.765 --> 00:04:52.344
Yeah, question?

59
00:04:52.344 --> 00:04:55.993
&gt;&gt; I was just gonna say, I don't know if
we ever mentioned that we were doing that,

60
00:04:55.993 --> 00:04:58.607
I think we just jumped from
like to the normal pattern, so

61
00:04:58.607 --> 00:05:00.693
that may have created
some confusion maybe.

62
00:05:00.693 --> 00:05:01.580
&gt;&gt; Around what?
Sorry.

63
00:05:01.580 --> 00:05:04.161
&gt;&gt; I think before we were writing perhaps
then all of a sudden we jumped right

64
00:05:04.161 --> 00:05:05.868
to destructuring and
we never talked about it.

65
00:05:05.868 --> 00:05:06.454
&gt;&gt; Okay.

66
00:05:06.454 --> 00:05:08.723
&gt;&gt; Offensively confusion.

67
00:05:08.723 --> 00:05:11.824
&gt;&gt; Yeah so I just did destruction
here with the props, right?

68
00:05:11.824 --> 00:05:16.180
So this could have been props and
it could have said props.id, props.name,

69
00:05:16.180 --> 00:05:19.350
props.animal, props.breed,
all that kinda stuff.

70
00:05:19.350 --> 00:05:21.761
And that would have been fine as well.

71
00:05:21.761 --> 00:05:26.475
I know lets people do it this that way,
but I like doing this.

72
00:05:26.475 --> 00:05:31.616
&gt;&gt; Yeah, someone online is asking
if there's any performance

73
00:05:31.616 --> 00:05:36.151
considerations if you're
doing any of the mapping or

74
00:05:36.151 --> 00:05:41.613
template stuff before the return
instead of during the return.

75
00:05:44.089 --> 00:05:47.054
&gt;&gt; Certainly performance concern
around with what mapping,

76
00:05:47.054 --> 00:05:49.907
I'm confused about what
mapping means in that context.

77
00:05:49.907 --> 00:05:54.811
&gt;&gt; The JSX templates you're using
like map and kinda like not in

78
00:05:54.811 --> 00:05:58.991
this component but the other-
&gt;&gt; Like results here?

79
00:05:58.991 --> 00:06:02.787
&gt;&gt; Yeah,
if you're looping over mapping and

80
00:06:02.787 --> 00:06:07.539
building templates outside
of the return function.

81
00:06:07.539 --> 00:06:13.350
&gt;&gt; So that I guess it's a valid question,
for sure.

82
00:06:13.350 --> 00:06:16.020
Let me kind of spin it this way.

83
00:06:16.020 --> 00:06:19.686
React is really fast and
like they have like a bunch of years and

84
00:06:19.686 --> 00:06:24.268
a lot of highly paid engineers thinking
about this for a long time for a website

85
00:06:24.268 --> 00:06:29.233
that makes billions of dollars, several
websites that make billions of dollars.

86
00:06:29.233 --> 00:06:34.135
So, in other words, they have probably
higher performance sensitivities

87
00:06:34.135 --> 00:06:37.899
than many of us at our day jobs,
certainly for me, right?

88
00:06:37.899 --> 00:06:42.120
So, they've optimized the hell out of
this, so that lots of engineers can

89
00:06:42.120 --> 00:06:46.619
write lots of code and not have to worry
too much about performance on the whole.

90
00:06:46.619 --> 00:06:48.319
So in other words, for the most part,

91
00:06:48.319 --> 00:06:51.933
you can write code however it occurs best
to you and React is typically fast enough

92
00:06:51.933 --> 00:06:54.610
that you'll never have any
performance problems with it.

93
00:06:54.610 --> 00:06:55.630
That's the general rule of thumb.

94
00:06:55.630 --> 00:06:58.843
That's the way you should just
file it in your brain is like,

95
00:06:58.843 --> 00:07:00.295
just write readable code.

96
00:07:00.295 --> 00:07:02.856
And then if you run into
performance problems,

97
00:07:02.856 --> 00:07:06.320
solve the specific performance
problems that you hit, right?

98
00:07:06.320 --> 00:07:11.867
So if I went through here later, and
let's say I had a million pets in here,

99
00:07:11.867 --> 00:07:16.990
maybe that might actually I'm
gonna say probably still wouldn't.

100
00:07:16.990 --> 00:07:18.199
It depends on your browser.

101
00:07:18.199 --> 00:07:22.340
I think you're gonna have browser problems
first before you hit react problems.

102
00:07:22.340 --> 00:07:27.105
So, to specifically answer
that question here, no,

103
00:07:27.105 --> 00:07:32.491
never this has a very acceptable
performance profile even for

104
00:07:32.491 --> 00:07:34.576
large numbers of pets.

105
00:07:34.576 --> 00:07:38.120
You can get into maybe there's some
sort of heavy duty lifting and

106
00:07:38.120 --> 00:07:42.375
processing that you're doing in here,
in which case you'd probably wanna,

107
00:07:42.375 --> 00:07:45.211
I don't know like he's a worker or
something that,

108
00:07:45.211 --> 00:07:49.529
like there's some other things really
crazy tricks you could get into to try and

109
00:07:49.529 --> 00:07:53.098
offload some of that processing and
get it off of the main thread.

110
00:07:53.098 --> 00:07:55.665
Especially react 18 that's coming is

111
00:07:55.665 --> 00:08:00.279
really good breaking rendering down
into little slow and fast renders.

112
00:08:00.279 --> 00:08:04.045
So you can actually kinda
do some magic there.

113
00:08:04.045 --> 00:08:07.823
Anyway, I'm kinda going in circles
now the the real answer to

114
00:08:07.823 --> 00:08:11.611
the question is like it's not
gonna be a problem almost ever.

115
00:08:11.611 --> 00:08:15.392
And when it becomes a problem solve
the problem that you have and

116
00:08:15.392 --> 00:08:19.959
don't preemptively solve problems
because just in general life advice for

117
00:08:19.959 --> 00:08:22.185
most of you now, Life versus Brian.

118
00:08:22.185 --> 00:08:25.019
Don't solve problems before you have them,
like when you're coding, right?

119
00:08:25.019 --> 00:08:27.484
In general you end up with
solving the wrong problem and

120
00:08:27.484 --> 00:08:30.710
you end up with a worse solution
because you solved the wrong problems.

121
00:08:33.270 --> 00:08:35.490
Okay questions.
&gt;&gt; Could you say very recently learned

122
00:08:35.490 --> 00:08:38.462
that it's most important
to in job interviews?

123
00:08:38.462 --> 00:08:41.051
[LAUGH] Like when you're trying
to solve the tech problem and

124
00:08:41.051 --> 00:08:44.259
you're like it has to be perfectly
optimized and then you get to the end and

125
00:08:44.259 --> 00:08:47.232
you don't finish and you could have
solved it did like ten minutes?

126
00:08:47.232 --> 00:08:48.546
&gt;&gt; Yep.

127
00:08:48.546 --> 00:08:51.732
I mean, as so I teach the complete
intro to computer science as well and

128
00:08:51.732 --> 00:08:55.242
that's like one of the pieces of advice
versus like if someone gives you a tech

129
00:08:55.242 --> 00:08:56.220
interview problem.

130
00:08:56.220 --> 00:08:59.333
Just solve it the dumbest way possible,
right?

131
00:08:59.333 --> 00:09:01.360
Like give them the three line answer.

132
00:09:01.360 --> 00:09:05.743
I remember, his is probably
super off track now who cares?

133
00:09:05.743 --> 00:09:14.066
[LAUGH] It was the Facebook interview and
they asked me to take in a letter and

134
00:09:14.066 --> 00:09:18.307
a number, and
repeat that letter that many times, right?

135
00:09:18.307 --> 00:09:21.570
So, an A and 40, give me back
a string with 40 A's on it, right?

136
00:09:21.570 --> 00:09:25.335
I was like, cool,
I'm gonna use Pad Left, right?

137
00:09:25.335 --> 00:09:28.419
And so with Pad Left,
you can give it a number and a letter and

138
00:09:28.419 --> 00:09:32.432
it will pad beating with string with that
many times with that many letters and

139
00:09:32.432 --> 00:09:34.179
you just give it an empty string.

140
00:09:34.179 --> 00:09:35.481
I was like, I'm done and

141
00:09:35.481 --> 00:09:39.150
I'm faster than whatever your solution
is cuz mine uses the browser.

142
00:09:39.150 --> 00:09:41.475
They were not amused with my answer.

143
00:09:41.475 --> 00:09:44.367
[LAUGH] So they made me go back and
actually really solve it.

144
00:09:44.367 --> 00:09:49.280
But anyway, I don't know why that, it felt
important to tell that story right then.

145
00:09:49.280 --> 00:09:54.349
We just finished 07 component composition.

146
00:09:54.349 --> 00:09:56.906
The point of this lesson
is basically to show you.

147
00:09:56.906 --> 00:09:59.350
Why I wanna show you using turn
areas with React Components.

148
00:09:59.350 --> 00:10:02.308
That's important because you'll
see it in code quite a bit.

149
00:10:02.308 --> 00:10:06.345
And two, I wanted to show you kinda
the background thread of processing,

150
00:10:06.345 --> 00:10:10.202
when you're reading your components
of what you should be thinking.

151
00:10:10.202 --> 00:10:14.551
Like, should I break this down into
a different component and then once you

152
00:10:14.551 --> 00:10:18.899
decide to kinda the process of splitting
it out putting another file moving

153
00:10:18.899 --> 00:10:23.817
everything over that you need to and then
reusing it back in the original component.

154
00:10:23.817 --> 00:10:26.738
That's a very common thing that you're
gonna be doing a lot if you read

155
00:10:26.738 --> 00:10:27.390
a lot of React.

