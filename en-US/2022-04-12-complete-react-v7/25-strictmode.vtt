WEBVTT

1
00:00:00.410 --> 00:00:04.742
So StrictMode, they introduced
this like with React 16 or 17 or

2
00:00:04.742 --> 00:00:07.709
something like that
might have been earlier.

3
00:00:07.709 --> 00:00:09.182
I don't remember.

4
00:00:09.182 --> 00:00:14.034
But the idea here is, if you put your
app into a StrictMode, it will add

5
00:00:14.034 --> 00:00:19.479
additional checks that basically help
you future-proof your application.

6
00:00:19.479 --> 00:00:24.892
So they'll put things that don't
allow you to do things that would

7
00:00:24.892 --> 00:00:30.113
not be compatible with,
like the future React batching mode and

8
00:00:30.113 --> 00:00:34.476
the future suspense rendering and
things like that.

9
00:00:34.476 --> 00:00:37.951
So it makes it kind of a little bit more
stringent in terms of the requirements

10
00:00:37.951 --> 00:00:39.925
of how you're able to accomplish things.

11
00:00:39.925 --> 00:00:42.811
But the end result is your
app is more future-proof,

12
00:00:42.811 --> 00:00:46.225
it's gonna be more compatible
with the next release of React.

13
00:00:46.225 --> 00:00:47.624
That makes sense?

14
00:00:47.624 --> 00:00:51.475
So it's not gonna be a good fit for
everyone's application.

15
00:00:51.475 --> 00:00:54.558
So the way we can do it now,
just so you can see it,

16
00:00:54.558 --> 00:00:59.169
nothing we're doing today will cause
us to go off or anything like that.

17
00:00:59.169 --> 00:01:04.029
But if we go to app.js,
all you have to do is

18
00:01:04.029 --> 00:01:08.080
say import StrictMode from React.

19
00:01:08.080 --> 00:01:13.734
And then you just wrap your
entire app in StrictMode.

20
00:01:13.734 --> 00:01:16.787
The first question
someone's gonna ask me is,

21
00:01:16.787 --> 00:01:19.544
do I wanna ship StrictMode to production?

22
00:01:19.544 --> 00:01:23.965
The answer is if you build vehicles
production StrictMode does

23
00:01:23.965 --> 00:01:25.300
literally nothing.

24
00:01:25.300 --> 00:01:28.950
So it strips out all of the code,
it's like, well, this is still there.

25
00:01:28.950 --> 00:01:31.959
Yeah, you'll waste four bytes, maybe.

26
00:01:31.959 --> 00:01:33.009
That's probably more than that.

27
00:01:35.380 --> 00:01:36.670
Eight bytes.

28
00:01:38.299 --> 00:01:40.150
If that, so it's totally fine.

29
00:01:40.150 --> 00:01:42.212
You can ship this
StrictMode to production,

30
00:01:42.212 --> 00:01:43.899
it just does nothing in production.

31
00:01:47.630 --> 00:01:49.830
It's always changing what it does.

32
00:01:49.830 --> 00:01:52.639
So with React 18,
they're gonna put additional checks.

33
00:01:52.639 --> 00:01:56.599
One of the things that they're talking
about doing is double rendering your app.

34
00:01:56.599 --> 00:02:01.989
So it'll render your app twice and
see if it's doing anything inconsistent.

35
00:02:01.989 --> 00:02:06.149
Because in theory your app should be
the same every single time, right?

36
00:02:06.149 --> 00:02:10.899
I tried it, it's fairly annoying
because it makes two API requests

37
00:02:10.899 --> 00:02:13.659
which frequently you don't wanna do.

38
00:02:13.659 --> 00:02:18.395
But it's not settled, they haven't decided
they're gonna ship the, yeah, questions?

39
00:02:18.395 --> 00:02:19.885
&gt;&gt; Just in dev mode though, right?

40
00:02:19.885 --> 00:02:20.764
&gt;&gt; Yes, correct.

41
00:02:20.764 --> 00:02:23.990
&gt;&gt; So it's like doing quick snapshot tests
basically over and over and over again?

42
00:02:23.990 --> 00:02:24.510
&gt;&gt; Correct.

43
00:02:24.510 --> 00:02:27.210
&gt;&gt; Wow.

44
00:02:27.210 --> 00:02:30.313
&gt;&gt; But it's doing stuff like that to kind
of help you make sure that you're writing

45
00:02:30.313 --> 00:02:33.464
your app in such a way that's gonna be
compatible with everything that's coming

46
00:02:33.464 --> 00:02:34.089
in the future.

47
00:02:39.250 --> 00:02:42.218
The nice thing about StrictMode
being a component is let's say

48
00:02:42.218 --> 00:02:45.305
you have like a legacy part of your
app and a new part of your app,.

49
00:02:45.305 --> 00:02:47.741
You can just wrap the new
part in StrictMode and

50
00:02:47.741 --> 00:02:50.441
you can leave the legacy part out of it,
all right?

51
00:02:50.441 --> 00:02:52.531
So, that's why they made it a component so

52
00:02:52.531 --> 00:02:55.739
you can actually just check
specific parts of your application.

53
00:03:01.324 --> 00:03:06.183
&gt;&gt; Interesting I noticed I
forgot to import StrictMode,

54
00:03:06.183 --> 00:03:10.945
and it was smart enough to
do it automatically for me.

55
00:03:10.945 --> 00:03:12.305
We're in the future?

56
00:03:12.305 --> 00:03:14.404
&gt;&gt; We live in the future,
thank you, VS code, and

57
00:03:14.404 --> 00:03:15.935
all the PMs that used to work on it.

58
00:03:19.424 --> 00:03:20.513
That's a joke, that was me.

59
00:03:20.513 --> 00:03:21.363
I did that.

60
00:03:21.363 --> 00:03:23.065
&gt;&gt; [LAUGH]

