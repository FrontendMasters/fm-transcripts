WEBVTT

1
00:00:00.440 --> 00:00:05.547
So, open your terminal here we're

2
00:00:05.547 --> 00:00:09.634
gonna say npm install -D and

3
00:00:09.634 --> 00:00:19.178
we're gonna do
enslint-plugin-react-hooks@4.3.0.

4
00:00:23.555 --> 00:00:24.335
So, that one right there.

5
00:00:27.346 --> 00:00:30.851
And then we're gonna go into our
package that are eslintrc.json.

6
00:00:30.851 --> 00:00:33.636
We're gonna add

7
00:00:39.655 --> 00:00:41.907
No one knew up here.

8
00:00:41.907 --> 00:00:44.032
Plug in.

9
00:00:46.074 --> 00:00:49.398
On react-hooks/recommended.

10
00:00:55.389 --> 00:00:58.683
So, we have to put that in there again
just as long as it's above prettier

11
00:00:58.683 --> 00:00:59.439
that's fine and

12
00:00:59.439 --> 00:01:02.801
then we have to add one more plugin which
I forgot to add my notes but you do.

13
00:01:02.801 --> 00:01:05.292
And it's just gonna be react-hooks.

14
00:01:08.732 --> 00:01:12.741
This is just gonna validate what they
call the rule of hooks, which is mostly,

15
00:01:12.741 --> 00:01:15.135
don't put hooks inside
of the if statements.

16
00:01:15.135 --> 00:01:19.838
That's like 99% of what's useful for,
it has another thing for use effect,

17
00:01:19.838 --> 00:01:21.579
which we'll see in a second.

18
00:01:21.579 --> 00:01:25.241
But, yeah,
that's what mostly what it's for.

19
00:01:25.241 --> 00:01:28.211
So generally,
when I install something like that,

20
00:01:28.211 --> 00:01:32.470
I just like to go make sure that it's
gonna break we're expected to break.

21
00:01:32.470 --> 00:01:35.341
So, let's just say, if true,

22
00:01:44.751 --> 00:01:50.663
So, right there,
you can see on 633 it is breaking.

23
00:01:50.663 --> 00:01:53.669
Usestate is called conditionally react
hooks must be called in the exact same

24
00:01:53.669 --> 00:01:55.333
order in every component render, right,

25
00:01:55.333 --> 00:01:57.707
so, it's preventing you from
hitting that issue outside.

26
00:01:57.707 --> 00:02:01.535
And I don't know why it's
not running in my editor.

27
00:02:01.535 --> 00:02:03.598
I told you that es lint
one is pretty infinity.

28
00:02:03.598 --> 00:02:06.360
Sometimes you can do like reload window.

29
00:02:06.360 --> 00:02:08.141
There you go.

30
00:02:08.141 --> 00:02:09.396
And that worked.

31
00:02:09.396 --> 00:02:15.586
To do that I just hit Shift Command p and
then there's this developer reload window,

32
00:02:15.586 --> 00:02:20.574
which just forces VS code to like
reload itself from the inside out.

33
00:02:20.574 --> 00:02:22.519
It basically read bootstraps electron,
that's what it does.

34
00:02:22.519 --> 00:02:24.991
So, let's go make an animal drop down.

35
00:02:30.541 --> 00:02:34.682
So, we already did this or if you haven't,
you can look there on line five,

36
00:02:34.682 --> 00:02:35.861
make an animal hook.

37
00:02:35.861 --> 00:02:39.694
And then we're gonna make the all
the animals that we can search for

38
00:02:39.694 --> 00:02:41.142
which is gonna be const.

39
00:02:41.142 --> 00:02:47.144
Animals, I'm gonna make that in screaming
case because can be a constant.

40
00:02:47.144 --> 00:02:54.422
And our API supports birds, cats not
carts and not cat that's just cat.

41
00:02:54.422 --> 00:02:59.848
Dog, rabbit and reptile.

42
00:03:06.211 --> 00:03:10.079
And then we got to put an animal drop
down underneath this label here, so

43
00:03:10.079 --> 00:03:17.691
we're gonna say label Htmlfor=animal.

44
00:03:22.668 --> 00:03:24.807
And inside of that is gonna be animal.

45
00:03:24.807 --> 00:03:31.421
And then here, we're gonna have a select.

46
00:03:31.421 --> 00:03:35.971
And it's ID is gonna be equal to animal.

47
00:03:35.971 --> 00:03:37.907
Value is going to be equal to animal.

48
00:03:43.241 --> 00:03:47.643
Okay, and then here when do two handlers
when do an onchange and an onblur

49
00:03:58.588 --> 00:04:00.035
So, I'm actually gonna make
this a full function here.

50
00:04:00.035 --> 00:04:01.496
This is just a one line function.

51
00:04:01.496 --> 00:04:04.844
But every time that you change the animal,
you're also gonna have to change the breed

52
00:04:04.844 --> 00:04:06.769
and we're about to do the breed as well,
right?

53
00:04:06.769 --> 00:04:11.382
Cuz you can't have a poodle cat or
a cockatiel die, I mean,

54
00:04:11.382 --> 00:04:13.421
sounds weird, but sure.

55
00:04:13.421 --> 00:04:18.147
In our case we're not
doing any immune hybrids.

56
00:04:18.147 --> 00:04:26.528
So, updateAnimal to be whatever
e.target.value is, target value.

57
00:04:26.528 --> 00:04:30.271
And then, we're gonna make an update
breed function here in just a second.

58
00:04:30.271 --> 00:04:33.202
And we're just gonna set that to be blank,
right?

59
00:04:41.677 --> 00:04:44.017
And that animal wouldn't be made that set,
sorry.

60
00:04:48.615 --> 00:04:50.738
Set animal and set breed.

61
00:04:50.738 --> 00:04:53.457
We haven't made separate yet,
so that'll be in just a second.

62
00:04:53.457 --> 00:04:55.467
And then we're gonna make an onblur.

63
00:04:55.467 --> 00:04:58.094
Now, you might ask, why would we do that?

64
00:04:58.094 --> 00:05:02.795
Because sometimes when browsers
navigate away from a select, or

65
00:05:02.795 --> 00:05:07.494
via like maybe different tools like for
example a screen reader or

66
00:05:07.494 --> 00:05:12.971
some sort of like accessibility tool,
they will not fire the change event.

67
00:05:12.971 --> 00:05:17.602
Which means that we would not capture it
sometimes which you don't wanna do but

68
00:05:17.602 --> 00:05:20.988
if you do on change and onblur,
you'll get both of them.

69
00:05:20.988 --> 00:05:24.774
And the real answer to it is
the ESLint told me to, so I did.

70
00:05:27.654 --> 00:05:31.739
Okay, and it's just gonna be the exact
same logic you can just copy and

71
00:05:31.739 --> 00:05:32.855
paste it exactly.

72
00:05:36.201 --> 00:05:37.654
Okay, here we need our options.

73
00:05:37.654 --> 00:05:41.424
So, the first option you want to
be like nothing selected, right?

74
00:05:41.424 --> 00:05:44.107
Which you would do this way normally,
right?

75
00:05:44.107 --> 00:05:47.593
You would just have an option that has
no value and nothing inside of it.

76
00:05:47.593 --> 00:05:50.231
Because it's JSX and
you can be cute with it.

77
00:05:50.231 --> 00:05:53.827
You can just actually have a void option
tag despite the fact it's actually

78
00:05:53.827 --> 00:05:54.637
not valid HTML.

79
00:05:54.637 --> 00:05:58.876
It is valid JavaScript or JSX rather.

80
00:05:58.876 --> 00:06:00.576
Then after that we're
gonna take our animals.

81
00:06:03.116 --> 00:06:04.857
We gonna do a map function.

82
00:06:04.857 --> 00:06:09.021
So again, animals, remember, is a array.

83
00:06:09.021 --> 00:06:13.982
An all dot map does is it takes an array
of one thing and it transforms it into

84
00:06:13.982 --> 00:06:17.672
an array of something else and
it's a one to one match.

85
00:06:17.672 --> 00:06:21.347
So basically, I wanna take bird and
I wanna make a bird option out of it,

86
00:06:21.347 --> 00:06:23.261
which is what I'm gonna do, right.

87
00:06:25.798 --> 00:06:32.056
So, I'm gonna take bird map and I'm gonna
take, this is gonna take an animal.

88
00:06:32.056 --> 00:06:36.307
This is gonna return a function,
and I'm going to return,

89
00:06:39.943 --> 00:06:43.649
Option key= Animal.

90
00:06:43.649 --> 00:06:48.616
Value=animal.

91
00:06:53.415 --> 00:06:55.947
And we're gonna have animal here.

92
00:07:07.625 --> 00:07:10.376
Trying to figure out why this is upset.

93
00:07:10.376 --> 00:07:13.437
I think it's that, now, there we go.

94
00:07:13.437 --> 00:07:16.109
Okay, so, array of animals.

95
00:07:16.109 --> 00:07:19.411
We're taking that and
we're doing a map function.

96
00:07:19.411 --> 00:07:23.448
So, this map, function's gonna
take a list of strings and

97
00:07:23.448 --> 00:07:26.618
transform it into a list
of react components.

98
00:07:26.618 --> 00:07:31.437
Now, remember way back to
the beginning of the course where we

99
00:07:31.437 --> 00:07:35.989
were giving in a list or
an array of react dot RCE elements.

100
00:07:35.989 --> 00:07:40.577
Right, as the children,
that's all this is doing.

101
00:07:40.577 --> 00:07:43.025
Like think about this,
you're returning JSX.

102
00:07:43.025 --> 00:07:49.120
So, this is gonna be an array of
results of React Create Element, right?

103
00:07:49.120 --> 00:07:51.055
Which is valid to react.

104
00:07:51.055 --> 00:07:54.450
So, that's why you're gonna use
map everywhere inside of JSX.

105
00:07:54.450 --> 00:07:57.647
Basically, anytime they haven't like
a list of data that you need to transform

106
00:07:57.647 --> 00:08:00.956
into a list of components, that's the
methodology that you're gonna use to do.

107
00:08:00.956 --> 00:08:02.598
It that makes sense?

108
00:08:02.598 --> 00:08:06.389
We can make this a little bit simpler
because we're transforming one to one and

109
00:08:06.389 --> 00:08:07.888
we have no other logic in here.

110
00:08:07.888 --> 00:08:11.864
You can use one liner functions here.

111
00:08:11.864 --> 00:08:17.185
So, instead of having this, And

112
00:08:17.185 --> 00:08:20.600
I can get rid of the return,
then here I have to put parentheses,

113
00:08:26.876 --> 00:08:28.521
Okay, there we go.

114
00:08:28.521 --> 00:08:33.520
So, notice I turn this,
curly brace into a parenthesis,

115
00:08:33.520 --> 00:08:37.304
this is called an implicit return, right?

116
00:08:37.304 --> 00:08:39.595
If you have a one line
JavaScript function.

117
00:08:39.595 --> 00:08:45.944
So, if I say, const sum equals x, y,

118
00:08:45.944 --> 00:08:53.890
and I'm just return x plus y like that,
right?

119
00:08:53.890 --> 00:08:56.102
That's a function that takes two
numbers and adds them together,

120
00:08:56.102 --> 00:08:56.980
which it turns out right?

121
00:08:56.980 --> 00:08:59.044
You can rewrite that as,

122
00:09:08.441 --> 00:09:11.724
These two functions are exactly
the same thing, right?

123
00:09:11.724 --> 00:09:13.692
It's called an implicit return.

124
00:09:13.692 --> 00:09:18.599
If you have a one liner here,
then that works.

125
00:09:18.599 --> 00:09:23.256
That's all that this is doing here,

126
00:09:23.256 --> 00:09:26.720
it's an implicit return.

127
00:09:26.720 --> 00:09:28.770
And just to drive home the point here,

128
00:09:28.770 --> 00:09:32.629
if you put those in parentheses then
you can put them on multiple lines.

129
00:09:32.629 --> 00:09:37.977
That's why this parenthesis here,
this goes down to the next line.

130
00:09:37.977 --> 00:09:40.755
Otherwise, it would think you
have an undefined return.

131
00:09:43.147 --> 00:09:46.523
The other reason I'm showing you this
is it's not so you think I'm clever or

132
00:09:46.523 --> 00:09:48.442
this is clever code or anything like that.

133
00:09:48.442 --> 00:09:51.290
You're just gonna see it
everywhere in React code.

134
00:09:51.290 --> 00:09:54.843
Obviously, the setBreed doesn't exist yet,
but

135
00:09:54.843 --> 00:09:58.820
this should still render I
think if we have this running.

136
00:09:58.820 --> 00:10:02.001
MPM run start or dev rather.

137
00:10:09.031 --> 00:10:13.701
So, now you should be getting
a drop down here, which is cool.

138
00:10:13.701 --> 00:10:18.648
And then quickly, let's drop in our
third dropdown which is gonna be for

139
00:10:18.648 --> 00:10:21.174
breeds, basically the same logic.

140
00:10:25.033 --> 00:10:29.215
Make a const breed,

141
00:10:29.215 --> 00:10:37.095
set breed equals use state like that.

142
00:10:37.095 --> 00:10:40.735
And then, just for a moment, we're gonna
set the breeds later because that we have

143
00:10:40.735 --> 00:10:43.706
to like adjust the breeds based on
what the animal is contextually.

144
00:10:43.706 --> 00:10:48.043
Just make it an empty array for the second
and then we can code it as if it's there

145
00:10:48.043 --> 00:10:52.481
and then later we'll go back and fill
that in with like read breed information.

146
00:10:52.481 --> 00:10:56.970
Okay, and you can basically just copy and
paste this whole label.

147
00:10:58.607 --> 00:11:03.282
By the way anytime that you find yourself
doing this this something should go

148
00:11:03.282 --> 00:11:06.653
off in your head cuz this
could be a component, right?

149
00:11:06.653 --> 00:11:09.776
These have a little bit different logic
in terms of how they're populated.

150
00:11:09.776 --> 00:11:11.971
So, for now,
we're just gonna leave them that way but

151
00:11:11.971 --> 00:11:14.474
you could definitely break this
into a different component.

152
00:11:14.474 --> 00:11:17.567
For this one that we copied and
pasted, I just did it underneath it,

153
00:11:17.567 --> 00:11:20.681
we're just gonna change basically
everywhere says animal to breed

154
00:11:28.815 --> 00:11:32.015
Okay, for the on change and on blur,

155
00:11:32.015 --> 00:11:38.020
we're just gonna have the sete.breed
e.target.value to breed.

156
00:11:42.127 --> 00:11:45.858
And then instead of animals here,
we're gonna have breeds.

157
00:11:45.858 --> 00:11:49.848
So, you could have this just be breed here
but the problem is with that is like it

158
00:11:49.848 --> 00:11:53.423
does work but it gets ambiguous of
which breed you're talking about.

159
00:11:53.423 --> 00:12:00.696
So, let's just call this like all breed or
something like that.

160
00:12:00.696 --> 00:12:01.406
I don't know,

161
00:12:01.406 --> 00:12:05.080
something though that refers to the fact
that it's not the same breed as above.

162
00:12:16.286 --> 00:12:18.358
So, as of right now,
there's nothing in this, so

163
00:12:18.358 --> 00:12:19.915
it's not gonna be anything, right.

164
00:12:19.915 --> 00:12:28.141
But if I had like, poodle,
And be shown in here.

165
00:12:28.141 --> 00:12:35.883
I just wanted to be clear that this breed
are not the same breed, different breeds.

166
00:12:41.435 --> 00:12:43.713
And I guess technically I did it
here as well with this animal.

167
00:12:43.713 --> 00:12:46.281
So, I don't know,
you can call it breed too.

168
00:12:46.281 --> 00:12:49.806
Maybe I'm just worried about nothing.

169
00:12:49.806 --> 00:12:55.325
&gt;&gt; What's the option on line 57 doing?

170
00:12:55.325 --> 00:12:57.390
&gt;&gt; Let me go back there.

171
00:12:57.390 --> 00:12:59.872
Line 57 option.

172
00:12:59.872 --> 00:13:06.789
So, what I want is, when you come here, I
don't want anything to be selected, right?

173
00:13:06.789 --> 00:13:11.480
So, if you inspect this, I'm sure
someone else has the same question.

174
00:13:11.480 --> 00:13:12.922
So, that's why I'm answering it for you.

175
00:13:12.922 --> 00:13:14.818
Notice that this is empty.

176
00:13:14.818 --> 00:13:16.973
There's an empty option here,
which is refers to the first one selected.

177
00:13:16.973 --> 00:13:21.198
So, our form doesn't do anything yet,
but now we have a fully

178
00:13:21.198 --> 00:13:26.089
functional form that you can set alt
lake city in here, you can set dog.

179
00:13:26.089 --> 00:13:28.770
And then if there were any breeds,
like to be able them.

180
00:13:28.770 --> 00:13:33.807
We're gonna make a custom hook
here in just a second to allow

181
00:13:33.807 --> 00:13:39.475
someone to get all the breeds but
for now we'll pause for a second.

182
00:13:39.475 --> 00:13:44.242
So, we've completed everything
up to now through 04 dash hooks.

183
00:13:44.242 --> 00:13:48.639
If you fall behind or
you wanna see the complete code,

184
00:13:48.639 --> 00:13:52.559
please feel free to head over there and,
yeah.

