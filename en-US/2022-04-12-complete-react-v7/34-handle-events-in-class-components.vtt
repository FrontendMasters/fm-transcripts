WEBVTT

1
00:00:00.000 --> 00:00:02.666
So let's go add like an EventListener now.

2
00:00:02.666 --> 00:00:05.916
If you remember when we were doing
it with function components,

3
00:00:05.916 --> 00:00:09.116
you just put like a little mini
function inside of the onclick.

4
00:00:09.116 --> 00:00:10.732
We're gonna do it
a little bit differently.

5
00:00:10.732 --> 00:00:12.932
You could do it that way, but

6
00:00:12.932 --> 00:00:18.273
typically you do it a little bit
differently with class components.

7
00:00:18.273 --> 00:00:21.457
So, we want to do like some sort of like

8
00:00:21.457 --> 00:00:25.545
extra function called
like handleIndexClick.

9
00:00:29.416 --> 00:00:34.532
This is gonna take in some sort of event,
which is gonna do something, right?

10
00:00:34.532 --> 00:00:38.532
And then here on our image,
we're gonna say, onclick.

11
00:00:40.218 --> 00:00:44.180
And we're gonna put this
dot handle index click.

12
00:00:44.180 --> 00:00:49.158
Now, it's gonna give me a accessibility
error and it absolutely should because

13
00:00:49.158 --> 00:00:53.493
what I'm showing you here is objectively
not the right way to do this.

14
00:00:53.493 --> 00:00:58.030
[LAUGH] What you should do is, you should
have some sort of button that wraps this

15
00:00:58.030 --> 00:01:03.061
that's invisible or an a link or something
that actually is clickable by the browser.

16
00:01:03.061 --> 00:01:07.101
Otherwise, a screen reader tool
wouldn't be able to tap onto this.

17
00:01:07.101 --> 00:01:11.302
The crux of the issue here is,
you can't tap onto it and hit enter,

18
00:01:11.302 --> 00:01:14.017
which makes it inherently inaccessible.

19
00:01:14.017 --> 00:01:17.423
For simplicity's sake we're
just gonna stick with this but

20
00:01:17.423 --> 00:01:21.041
I want you to know that that's
how you would handle that, okay?

21
00:01:21.041 --> 00:01:25.890
So the way that you get it to stop telling
you that you're doing horrible things and

22
00:01:25.890 --> 00:01:29.909
you're a terrible person is you
say Eslint Disable-next-line.

23
00:01:33.084 --> 00:01:34.210
And that'll work.

24
00:01:38.310 --> 00:01:38.810
Yeah.

25
00:01:42.459 --> 00:01:43.254
Okay?

26
00:01:43.254 --> 00:01:46.323
So we have handleIndexClick here.

27
00:01:46.323 --> 00:01:50.233
As a rule of thumb, this is probably
more of a Brian whole thing but

28
00:01:50.233 --> 00:01:52.092
I think a general React thing.

29
00:01:52.092 --> 00:01:54.020
Whenever it's an event handler and

30
00:01:54.020 --> 00:01:56.986
class component I just stick
handle on the beginning.

31
00:01:56.986 --> 00:02:02.810
For me, that just immediately signifies
this is an event handler, okay?

32
00:02:02.810 --> 00:02:08.485
This is gonna take an event from the
browser but I wanna demonstrate something

33
00:02:08.485 --> 00:02:13.473
to you right now that is a foot gun
that comes with class components.

34
00:02:13.473 --> 00:02:20.866
If I say console dot log this, we talked a
little bit about this earlier, nice, this.

35
00:02:20.866 --> 00:02:22.006
What is this here?

36
00:02:26.953 --> 00:02:28.516
Now let's refresh and check it out.

37
00:02:28.516 --> 00:02:36.347
Undefined, that's problematic if I
wanna call this.setstate, is it not?

38
00:02:39.914 --> 00:02:41.542
Cuz that's exactly what I wanna do here,

39
00:02:41.542 --> 00:02:43.318
is I just want to change
what's active here.

40
00:02:43.318 --> 00:02:45.494
So how do I do that?

41
00:02:45.494 --> 00:02:49.112
I'll show you the old way and
I'll show you the new way.

42
00:02:49.112 --> 00:02:50.496
So don't follow this for a second,

43
00:02:50.496 --> 00:02:52.445
I'm just gonna show you
the old way really quick.

44
00:02:52.445 --> 00:02:54.434
You'd have to put
a constructor back in here.

45
00:02:57.684 --> 00:03:01.257
And if you're not using class properties
you still would have to do it this way,

46
00:03:03.254 --> 00:03:07.609
And then you would say
this.handle index click equals

47
00:03:07.609 --> 00:03:10.835
this.handle index click.bind this.

48
00:03:12.470 --> 00:03:17.864
If that feels ridiculous it's
cuz it looks ridiculous.

49
00:03:17.864 --> 00:03:18.687
But now,.

50
00:03:20.805 --> 00:03:22.714
Why are you mad at me for this?

51
00:03:22.714 --> 00:03:23.360
&gt;&gt; Constructing.

52
00:03:23.360 --> 00:03:25.622
&gt;&gt; Constructing, that's hilarious.

53
00:03:29.847 --> 00:03:34.523
Okay, and now if I click this,
notice that it's correct again, right?

54
00:03:34.523 --> 00:03:37.903
So this will work, obviously,
and we did this for a long time.

55
00:03:41.559 --> 00:03:45.424
The much easier way is we talked
about arrow functions, right?

56
00:03:45.424 --> 00:03:50.862
So if you say handle
event index click equals,

57
00:03:50.862 --> 00:03:57.423
arrow function like this,
now, is what is it gonna be?

58
00:03:59.356 --> 00:04:03.931
That's correct again, because,
arrow functions don't have

59
00:04:03.931 --> 00:04:08.422
that same sort of problem with
creating contexts where it's,

60
00:04:08.422 --> 00:04:13.094
it doesn't create a new context
at the invocation site, right?

61
00:04:13.094 --> 00:04:15.158
It just uses wherever it was before.

62
00:04:17.357 --> 00:04:20.338
So in this case,
because handle index click has

63
00:04:20.338 --> 00:04:24.598
created in the context of this carousel,
it just uses that as this.

64
00:04:24.598 --> 00:04:28.182
Whereas if I call handle index
click from outside of it somewhere,

65
00:04:28.182 --> 00:04:31.964
it's gonna create a new with this
context of wherever it was invoked.

66
00:04:34.925 --> 00:04:40.645
Not really something you need to be super
concerned with why, it's just this works.

67
00:04:41.856 --> 00:04:43.117
Yeah.

68
00:04:43.117 --> 00:04:45.845
So this is a class property, right?

69
00:04:45.845 --> 00:04:49.824
This works the same way as this,
if that makes any sense.

70
00:04:49.824 --> 00:04:51.225
Cool, all right.

71
00:04:51.225 --> 00:04:54.198
So now we have that working.

72
00:04:54.198 --> 00:04:57.261
So let's make that work
a little bit easier.

73
00:04:57.261 --> 00:04:59.707
So we're gonna say, this dot set state.

74
00:05:02.467 --> 00:05:07.138
And we're gonna say active
is set to event.target

75
00:05:09.851 --> 00:05:12.578
Dot data set.index.

76
00:05:16.428 --> 00:05:17.048
Okay?

77
00:05:17.048 --> 00:05:21.456
And we're just gonna go
down on this image and

78
00:05:21.456 --> 00:05:26.567
we're gonna add a data-index
to be equal to index.

79
00:05:26.567 --> 00:05:28.433
And no semicolon there.

80
00:05:32.244 --> 00:05:38.218
So, data index, this is just a normal
HTML thing, this is not a React thing.

81
00:05:38.218 --> 00:05:43.159
If I wanna access something that's data
dash blah on any sort of HTML element

82
00:05:43.159 --> 00:05:48.098
you can just say Event.target is going
to be referring to whatever image you

83
00:05:48.098 --> 00:05:49.506
clicked on, right?

84
00:05:49.506 --> 00:05:54.577
Data set will let me access whatever
I put on the HTML data set, right?

85
00:05:54.577 --> 00:05:57.662
And then index,
just refers to whatever this is.

86
00:05:57.662 --> 00:06:02.310
So, if I call this data-lol, right?

87
00:06:02.310 --> 00:06:06.005
This would just be dataset.lol, right?

88
00:06:06.005 --> 00:06:07.725
It just,
that's how that refers to each other.

89
00:06:10.442 --> 00:06:14.148
Now this is actually still not perfect.

90
00:06:14.148 --> 00:06:17.915
Typically, in JavaScript,
we don't have to worry a lot about types.

91
00:06:17.915 --> 00:06:19.037
In this case,

92
00:06:19.037 --> 00:06:24.571
you actually need to be concerned
about what the type is of index here.

93
00:06:24.571 --> 00:06:27.694
Here data-index, this is a number, right?

94
00:06:27.694 --> 00:06:30.578
Cuz it's coming from the map
function here, right?

95
00:06:30.578 --> 00:06:35.355
This thing gets output
to the DOM as a what?

96
00:06:35.355 --> 00:06:36.681
As a stream.

97
00:06:36.681 --> 00:06:41.481
So this is coming back in as a string,
okay?

98
00:06:41.481 --> 00:06:44.804
So now I have active being string one,
right?

99
00:06:44.804 --> 00:06:47.632
It's not one it's 1.

100
00:06:47.632 --> 00:06:53.545
Why is that problematic?

101
00:06:53.545 --> 00:06:59.272
Well here, I'm using images active as
an index to grab whatever this is.

102
00:06:59.272 --> 00:07:04.959
So this is going to go and try and
grab string one, not number one.

103
00:07:04.959 --> 00:07:06.453
That's a problem, it wouldn't work.

104
00:07:06.453 --> 00:07:11.352
So this is one of the cases we have to
be concerned about what type of one

105
00:07:11.352 --> 00:07:12.797
am I talking about?

106
00:07:12.797 --> 00:07:17.345
So really easy way to do that, just put a,
this is called the unary plus, right?

107
00:07:17.345 --> 00:07:20.327
This is just going to
convert it to a number.

108
00:07:24.898 --> 00:07:26.757
There's a trillion other ways
you could have done this, right?

109
00:07:26.757 --> 00:07:30.799
There's number.parseint,
I think is what it is.

110
00:07:30.799 --> 00:07:32.137
There's several ways of doing it.

111
00:07:32.137 --> 00:07:35.582
This is just simple and succinct.

112
00:07:39.658 --> 00:07:43.277
But I could totally see someone saying,
I don't know what that does and

113
00:07:43.277 --> 00:07:45.162
I don't think it's very readable.

114
00:07:45.162 --> 00:07:46.979
If you don't find it readable
then don't do it that way.

115
00:07:49.440 --> 00:07:56.415
Okay, so now I should be able to refresh
the page and I can switch doggy pictures.

116
00:08:00.107 --> 00:08:02.385
That's a very, good picture.

117
00:08:02.385 --> 00:08:07.138
And you can see my excessive
whisky collection behind it,

118
00:08:07.138 --> 00:08:13.948
[LAUGH] Okay.

119
00:08:18.413 --> 00:08:23.644
So, we're now to 09, managing state and
class components checkpoint,

120
00:08:23.644 --> 00:08:28.563
so feel free to grab that code if you're
behind or want to see what I did.

121
00:08:28.563 --> 00:08:29.715
Yeah, Mark, okay.

122
00:08:29.715 --> 00:08:32.259
&gt;&gt; Is the plus a React thing or
a JavaScript thing?

123
00:08:32.259 --> 00:08:36.277
&gt;&gt; The plus thing is a JavaScript thing,
has nothing to do with React.

124
00:08:36.277 --> 00:08:39.670
So yeah, just to kinda drive that home,
if I inspect element here,

125
00:08:39.670 --> 00:08:42.118
you can see here this
has a dataset-index=0.

126
00:08:42.118 --> 00:08:45.726
And that is a string, right?

127
00:08:45.726 --> 00:08:52.203
So we're just, Yeah,
if you do + 1 like that,

128
00:08:52.203 --> 00:08:58.541
it comes back as a number 1 as opposed
to a string one, so that's why.

