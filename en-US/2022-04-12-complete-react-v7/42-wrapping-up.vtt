WEBVTT

1
00:00:00.080 --> 00:00:04.140
That is the end of the complete
Intro To React version 7,

2
00:00:04.140 --> 00:00:07.101
you now have all the tools
that you need and

3
00:00:07.101 --> 00:00:11.765
some additional ones to build
basically any react application.

4
00:00:11.765 --> 00:00:14.636
Now you notice that like there's
a lot of stuff in here that react

5
00:00:14.636 --> 00:00:15.869
just doesn't care about.

6
00:00:15.869 --> 00:00:19.680
But for the most part, it doesn't
really care about Routers, right?

7
00:00:19.680 --> 00:00:23.507
You need something like React Router, or
doesn't care about like data storage or

8
00:00:23.507 --> 00:00:25.290
data fetching or anything like that.

9
00:00:25.290 --> 00:00:27.641
That's all stuff that
react basically says like,

10
00:00:27.641 --> 00:00:29.670
we just take care of
rendering the UI layer.

11
00:00:29.670 --> 00:00:31.660
Everything else is up to you.

12
00:00:31.660 --> 00:00:34.621
As opposed to something like ember
where there's like, ember models and

13
00:00:34.621 --> 00:00:36.350
Ember Router and
a bunch of stuff in there.

14
00:00:37.460 --> 00:00:44.950
So, That's something for you to go to
discover and make your own opinions about.

15
00:00:44.950 --> 00:00:49.620
I prefer it that way cuz I like to kind
of put together the set of tools to build

16
00:00:49.620 --> 00:00:51.560
whatever application I need.

17
00:00:51.560 --> 00:00:54.307
And kind of have the minimal
set as opposed to bring in,

18
00:00:54.307 --> 00:00:57.630
here's the entire structure
to the building, good luck.

19
00:00:57.630 --> 00:01:01.982
Right, I was never a Rails person for
that matter [LAUGH] for the same reason,

20
00:01:01.982 --> 00:01:06.064
Rails is great and if you have a Rails
developer that's very talented,

21
00:01:06.064 --> 00:01:10.576
they can go faster than I can undoubtedly,
I just don't like the black magic.

22
00:01:10.576 --> 00:01:15.189
Yeah, scares me, anyway,
so the first thing,

23
00:01:15.189 --> 00:01:21.489
I gave you a couple of suggestions
of like where to go from here now,

24
00:01:21.489 --> 00:01:28.151
the first one is definitely,
take the intermediate course, right?

25
00:01:28.151 --> 00:01:30.646
Cuz I go into like a bunch of
more stuff in terms of like.

26
00:01:30.646 --> 00:01:35.443
All the ecosystem tailwind, CSS,
TypeScript, testing, Redux,

27
00:01:35.443 --> 00:01:40.323
server side rendering, code splitting,
a bunch of stuff that like,

28
00:01:40.323 --> 00:01:45.616
will be really useful for either making
your application more performant or

29
00:01:45.616 --> 00:01:49.030
like building larger scale applications,
so.

30
00:01:50.390 --> 00:01:53.392
I would suggest that,
I think it's a good course.

31
00:01:53.392 --> 00:01:57.998
One thing that we didn't do is we
didn't paginate the results, so oops,

32
00:01:57.998 --> 00:02:02.531
if you're going to adoptme.com,
if there's more than 10 results,

33
00:02:02.531 --> 00:02:05.673
we didn't paginate that so
I would suggest that.

34
00:02:05.673 --> 00:02:10.102
That's a good kind of like stretch goal
for you to learn how to go forward and

35
00:02:10.102 --> 00:02:13.844
go backwards and keep track of state and
all that kind of stuff.

36
00:02:13.844 --> 00:02:18.284
Use a real API so we're using like
a fake API that the front of masters and

37
00:02:18.284 --> 00:02:21.392
I put together but
you can use the Petfinder API and

38
00:02:21.392 --> 00:02:25.314
actually previous versions of
this course did used to do that,

39
00:02:25.314 --> 00:02:29.544
we overwhelmed them with how many
people were requesting API keys.

40
00:02:29.544 --> 00:02:31.500
So we stopped doing that.

41
00:02:31.500 --> 00:02:36.058
But you if you feel like it can hop
over here, you go to the Petfinder for

42
00:02:36.058 --> 00:02:39.300
Developers, you can get an API key.

43
00:02:39.300 --> 00:02:42.330
True story people have actually adopted
animals because of this course.

44
00:02:42.330 --> 00:02:44.480
So I try and keep that going.

45
00:02:47.790 --> 00:02:48.860
So that's a good idea.

46
00:02:48.860 --> 00:02:51.980
They're free API keys,
they're super nice people.

47
00:02:51.980 --> 00:02:53.971
There's like a nice SDK now.

48
00:02:53.971 --> 00:02:57.959
I actually like had to build an SDK for
this class previously.

49
00:02:57.959 --> 00:03:01.805
There was one time that they blocked all
our entire like I was teaching this live

50
00:03:01.805 --> 00:03:03.270
and they blocked everybody.

51
00:03:05.050 --> 00:03:06.199
That was a bad day.

52
00:03:06.199 --> 00:03:08.180
We actually had to reshoot
the course cuz it was that bad.

53
00:03:09.420 --> 00:03:11.400
But yeah, their API is kind of unruly,

54
00:03:11.400 --> 00:03:14.530
like this is an example of one
of the response objects from it.

55
00:03:15.530 --> 00:03:16.940
So they give you a lot of information.

56
00:03:20.790 --> 00:03:23.050
Okay, another thing you can
do is deploy your code.

57
00:03:23.050 --> 00:03:25.690
That's always a fun thing to do to
go through the deployment process.

58
00:03:25.690 --> 00:03:28.790
I might gave you the links here to
a bunch of good places to do it.

59
00:03:30.530 --> 00:03:33.652
Use the theme in more
places than just to but

60
00:03:33.652 --> 00:03:38.682
it's probably a good idea,
add a navigation bar we didn't do that,

61
00:03:38.682 --> 00:03:44.640
try switching to a different build
tool like VT or snowpack or ES build.

62
00:03:44.640 --> 00:03:48.239
You can also go like the classics,
right, browser file, Webpack,

63
00:03:48.239 --> 00:03:49.740
Rollup anything like that.

64
00:03:50.840 --> 00:03:53.314
You can try and migrate this to react 18,

65
00:03:53.314 --> 00:03:56.080
it shouldn't be too hard
in his current state.

66
00:03:57.210 --> 00:04:01.100
But then you can start playing
with things like suspension, and

67
00:04:01.100 --> 00:04:05.999
I'll talk a little bit about suspension
in intermediate, but there's a new way

68
00:04:05.999 --> 00:04:10.105
of doing like data loading suspension
which we don't talk about and

69
00:04:10.105 --> 00:04:14.022
we will talk about VA whenever
this that happens 6 months or so.

70
00:04:14.022 --> 00:04:19.863
Actually might have on here if
you wanna kinda of preview,

71
00:04:19.863 --> 00:04:22.735
I did so I put with 18 here.

72
00:04:25.195 --> 00:04:29.071
So if you look at this,
you can go through the lessons here and

73
00:04:29.071 --> 00:04:33.404
I got all the way through rebuilding
this course in version 18 cuz I

74
00:04:33.404 --> 00:04:36.386
thought it would be out by now,
and it's not.

75
00:04:36.386 --> 00:04:40.902
But if you go in here for example,
probably the most interesting thing here

76
00:04:40.902 --> 00:04:44.198
is in react capabilities if
you go in here to suspense,

77
00:04:44.198 --> 00:04:49.160
actually talk about how to build the
details page using React 18 with suspense.

78
00:04:50.500 --> 00:04:54.745
So, I make no warranty if this
is gonna stay up-to-date.

79
00:04:54.745 --> 00:04:58.580
I'm actively not giving you a warranty
that this is gonna stay up-to-date.

80
00:04:58.580 --> 00:05:01.713
But if you wanna see what I wrote and
was going to teach before I switched

81
00:05:01.713 --> 00:05:04.060
everything back to React 17,
this is where it is.

82
00:05:05.760 --> 00:05:10.901
By the same token, I believe that I
did that for the projects as well.

83
00:05:13.678 --> 00:05:16.790
Let me make sure that's
true I did with 18.

84
00:05:16.790 --> 00:05:21.652
So if you wanna look here at portals and
ref 13,

85
00:05:21.652 --> 00:05:27.358
you can see the state of
the project with reacting to you.

86
00:05:27.358 --> 00:05:34.918
So for example here in details, you can
see here I built it with suspense and

87
00:05:34.918 --> 00:05:40.798
what's called the like a resource
loading paradigm using

88
00:05:40.798 --> 00:05:45.840
suspense and stuff like that so
pretty fun stuff.

89
00:05:45.840 --> 00:05:49.198
Again, I make no warranty that
this is gonna be up to date,

90
00:05:49.198 --> 00:05:53.258
V8 of this class will have that stuff
all up to date and ready to teach.

91
00:05:56.603 --> 00:05:59.590
Okay, and
then yeah let me know if you like it.

92
00:05:59.590 --> 00:06:05.350
Please tweet at me, I am the worst at
responding to particularly LinkedIn DMs.

93
00:06:05.350 --> 00:06:09.074
Having worked there, I try and spend
a little time on that website as possible

94
00:06:09.074 --> 00:06:12.870
but definitely public tweets are always
super appreciated start of the repo.

95
00:06:12.870 --> 00:06:16.530
That's always super helpful as well, yeah.

96
00:06:16.530 --> 00:06:18.740
And just thanks for
sticking through the intro.

97
00:06:20.630 --> 00:06:21.670
I'll take the like yeah.

98
00:06:21.670 --> 00:06:23.430
Last sense of questions now.

99
00:06:23.430 --> 00:06:27.210
&gt;&gt; So you had promise to give
us your thoughts on XJS.

100
00:06:27.210 --> 00:06:34.511
&gt;&gt; We're doing shots first though [LAUGH].

101
00:06:34.511 --> 00:06:38.378
Let's talk about like the higher
level frameworks a bid for

102
00:06:38.378 --> 00:06:41.830
react cuz there's a few popular ones.

103
00:06:41.830 --> 00:06:44.420
The most popular one is gonna be next.

104
00:06:44.420 --> 00:06:45.620
Right, Nextjs.

105
00:06:46.980 --> 00:06:52.480
I am a big fan of Nextjs,
your course website here.

106
00:06:53.570 --> 00:06:56.943
This one actually just rewrote Nextjs,

107
00:06:56.943 --> 00:07:00.820
I've been using Gatsby for
3 or 4 years now.

108
00:07:00.820 --> 00:07:05.054
A lot of front of masters websites
that other instructors have made,

109
00:07:05.054 --> 00:07:07.080
I know Gen Z used it.

110
00:07:07.080 --> 00:07:08.640
Think primitive used it once.

111
00:07:10.610 --> 00:07:15.388
Some other of the front of
masters instructors have built

112
00:07:15.388 --> 00:07:20.072
their course websites using
my Gatsby course starter.

113
00:07:20.072 --> 00:07:24.568
And I just rewrote it Nextjs and
it's like 100 times better,

114
00:07:24.568 --> 00:07:29.407
not to say anything Gatsby is terrible,
it has got its own problems.

115
00:07:29.407 --> 00:07:33.301
So all right, let's talk about
when you would use one and

116
00:07:33.301 --> 00:07:38.171
then how you would select it so,
react like I said is fairly opinionated

117
00:07:38.171 --> 00:07:43.285
about the server element of it,
it's fairly opinionated about how to load

118
00:07:43.285 --> 00:07:49.230
data Like how to load data.

119
00:07:49.230 --> 00:07:52.990
It's fairly unopinionated about
kind of all that kind of stuff.

120
00:07:52.990 --> 00:07:55.541
It's really meant to just be like
here's how to render your code, and

121
00:07:55.541 --> 00:07:57.500
it's gonna get out of the way
of doing anything else.

122
00:07:59.020 --> 00:08:01.050
Now, sometimes more opinions are helpful.

123
00:08:02.340 --> 00:08:06.772
If you have a very typical use case like
rendering a blog for example, right,

124
00:08:06.772 --> 00:08:11.477
that's been done so many times and there's
a really optimized way of doing it like

125
00:08:11.477 --> 00:08:15.047
rebuilding the wheel every single
time is not a useful thing.

126
00:08:15.047 --> 00:08:19.912
So something like a higher level framework
like Next can be super helpful about that.

127
00:08:19.912 --> 00:08:23.218
Let's just look at the the code for
the course website.

128
00:08:28.048 --> 00:08:31.200
All I wanted to do is I have
all these lessons here, right?

129
00:08:32.200 --> 00:08:34.300
So if you look at like the,
I don't know one of these.

130
00:08:36.460 --> 00:08:39.150
This is just markdown.

131
00:08:39.150 --> 00:08:42.969
It's got a title and a description
here in the front matter, and

132
00:08:42.969 --> 00:08:47.212
then it's just rendering this stuff
out to kind of a blog post, right,

133
00:08:47.212 --> 00:08:52.320
it's like a blog post that's been
like optimized for courses, right?

134
00:08:52.320 --> 00:08:55.142
Pretty solved problem,
I could have built this all with React and

135
00:08:55.142 --> 00:08:57.770
made my own build process or
I could have done it with parcel.

136
00:08:58.910 --> 00:09:01.730
But why would I do that when
something like Next exists and

137
00:09:01.730 --> 00:09:04.210
it does that already super well, right?

138
00:09:04.210 --> 00:09:09.217
All I had to do here is I had to write
a little bit of a data loader that

139
00:09:09.217 --> 00:09:15.820
took in all of my course information,
that's like my course config data.

140
00:09:15.820 --> 00:09:19.636
This one takes all of my markdown in and
then, renders it out and

141
00:09:19.636 --> 00:09:22.290
then spits it out into a blog post.

142
00:09:22.290 --> 00:09:24.580
And then next has a really cool feature.

143
00:09:25.990 --> 00:09:30.545
Let's see if I can show you in like the
package.json that you just do next build

144
00:09:30.545 --> 00:09:35.047
and next export and it renders everything
out to flat static HTML documents.

145
00:09:35.047 --> 00:09:39.835
Which is awesome because then you can host
all this stuff on GitHub pages which is

146
00:09:39.835 --> 00:09:42.694
totally free, right,
and it never goes down,

147
00:09:42.694 --> 00:09:45.785
then you can take that a step further,
which I did.

148
00:09:45.785 --> 00:09:48.700
And you can build that into
GitHub actions, right?

149
00:09:48.700 --> 00:09:52.130
So then anytime that you push to my repo,
it just rebuilds it and redeploys it.

150
00:09:52.130 --> 00:09:53.670
I don't have to worry about anything.

151
00:09:53.670 --> 00:09:54.610
Everything just works.

152
00:09:56.370 --> 00:10:00.824
So I'm just gonna try to draw an arc
of like how I landed on like,

153
00:10:00.824 --> 00:10:05.197
this is really awesome for Nextjs and
I use Gatsby for years and

154
00:10:05.197 --> 00:10:08.056
I found that the graph QL is awesome, but

155
00:10:08.056 --> 00:10:13.780
it's not a very good abstraction for
re querying against a file system.

156
00:10:13.780 --> 00:10:18.608
So Gatsby's heavily based on graph QL and
it just, it got really finicky and

157
00:10:18.608 --> 00:10:20.050
awkward to work with.

158
00:10:20.050 --> 00:10:23.656
So I preferred to just going back
to working with JavaScript and

159
00:10:23.656 --> 00:10:28.090
reading, using no JS to query the files
as system, which it's very good at.

160
00:10:29.440 --> 00:10:34.217
So, all this to say Nextjs big fan works
really well if you have a, I don't know,

161
00:10:34.217 --> 00:10:38.226
most problems that's probably what
I would start today with if I was

162
00:10:38.226 --> 00:10:42.730
building like a front end,
middle end kind of application.

163
00:10:42.730 --> 00:10:45.058
It's really easy to
write your own API's and

164
00:10:45.058 --> 00:10:47.395
it's just basically express like, right?

165
00:10:49.224 --> 00:10:53.430
I probably wouldn't go back to using
Gatsby after fighting it so many times.

166
00:10:53.430 --> 00:10:56.327
It's just some trauma there
that I have to get over.

167
00:10:56.327 --> 00:11:02.830
[LAUGH] And then the new
player out there is Remix.run.

168
00:11:02.830 --> 00:11:08.448
There's a coming soon course
from Frontend Masters on Remix,

169
00:11:08.448 --> 00:11:13.642
I like to think of after having
actually this is funny too,

170
00:11:13.642 --> 00:11:19.048
I built this course website as
well on remix cuz I wanted to get

171
00:11:19.048 --> 00:11:24.878
more familiar with it,
see if I can show you repositories remix.

172
00:11:24.878 --> 00:11:28.916
Yeah, remix core starter, so
I built my, same lessons here,

173
00:11:28.916 --> 00:11:32.260
same structures and everything like that.

174
00:11:32.260 --> 00:11:35.300
I rebuilt this course
website as well in Remix and

175
00:11:35.300 --> 00:11:39.526
I found that Next just had like
a better fit for it if you're going for

176
00:11:39.526 --> 00:11:43.625
purely static flat documents like
a static site web generation.

177
00:11:43.625 --> 00:11:48.216
Remix actually doesn't support that
which is fine, it just doesn't,

178
00:11:48.216 --> 00:11:52.732
Remix requires its server component,
Next, it's, you can have both

179
00:11:52.732 --> 00:11:56.968
the server side part of it or
you can go for static file generation.

180
00:11:56.968 --> 00:12:00.991
So if I was gonna go build something
like a ecommerce website today,

181
00:12:00.991 --> 00:12:04.388
I'd have a hard time picking
between Remix and the Next.

182
00:12:04.388 --> 00:12:09.182
Personally, I'd probably end up choosing
Next but that's cuz I'm just way more

183
00:12:09.182 --> 00:12:14.185
familiar with it and generally when you're
trying to make money, it's a good idea to

184
00:12:14.185 --> 00:12:18.722
pick things that you know [LAUGH] to focus
on the money part not on the tech part.

185
00:12:18.722 --> 00:12:23.206
But I would have no problem with anyone
coming to as hey we're building this

186
00:12:23.206 --> 00:12:27.261
Remix style run and be great high
fives like let's go do it, right,

187
00:12:27.261 --> 00:12:29.681
it's a pretty cool piece of software but

188
00:12:29.681 --> 00:12:35.740
it's meant to be more like Rails as a more
than it's meant to be like Jekyll, right?

189
00:12:35.740 --> 00:12:41.211
As opposed to Next which is meant to kind
of be either, you can definitely use Next

190
00:12:41.211 --> 00:12:46.610
like Rails and opposed to Gatsby which
is much closer to something like Jekyll.

191
00:12:48.960 --> 00:12:52.547
I think people would guess who would
probably take offense that I said it that

192
00:12:52.547 --> 00:12:54.410
way, but that's how I always used it.

193
00:12:54.410 --> 00:12:57.070
So Gatsby is just so slow.

194
00:12:57.070 --> 00:12:59.540
That's my problem with it, it's like
you rebuild your site it takes forever.

195
00:13:01.120 --> 00:13:01.969
Yeah,
&gt;&gt; And so

196
00:13:01.969 --> 00:13:06.030
now in the last Nextjs
workshop that was done here.

197
00:13:07.740 --> 00:13:11.142
We were shown like how you can
do edge function super easily or

198
00:13:11.142 --> 00:13:14.090
like the serverless stuff,
and that was wild.

199
00:13:14.090 --> 00:13:15.870
&gt;&gt; Yeah.
&gt;&gt; To have just a new like component.

200
00:13:17.010 --> 00:13:19.400
&gt;&gt; So, yes, absolutely.

201
00:13:19.400 --> 00:13:21.390
Remix actually works the same way.

202
00:13:21.390 --> 00:13:23.730
Yeah, it's optimized for
serverless deployments.

203
00:13:23.730 --> 00:13:28.239
So it works on Netlify,
it works on AWS and lambda.

204
00:13:28.239 --> 00:13:30.480
I don't know, what they're doing
about edge stuff at the moment.

205
00:13:30.480 --> 00:13:31.921
I imagine it works on Edge stuffs.

206
00:13:31.921 --> 00:13:34.559
It does, it works on Cloudflare workers,
so it does work on Edge stuff.

207
00:13:37.590 --> 00:13:40.014
Next is heavily optimized obviously for

208
00:13:40.014 --> 00:13:43.825
sell because they are the people
that make it and good for them.

209
00:13:43.825 --> 00:13:47.150
[LAUGH] It's a great business model.

210
00:13:47.150 --> 00:13:49.510
Guillermo is a very smart person.

211
00:13:51.530 --> 00:13:55.929
But yeah, they're both really cheap to run
cuz they'll run in surplus infrastructure.

212
00:14:00.278 --> 00:14:02.839
Yeah, I think I'll leave it at that.

213
00:14:02.839 --> 00:14:06.814
Yeah was that Scott
that taught that class?

214
00:14:06.814 --> 00:14:07.767
&gt;&gt; Yes
&gt;&gt; Scott's my hero

215
00:14:09.980 --> 00:14:11.660
His next course is amazing.

216
00:14:11.660 --> 00:14:15.629
By the way, if you wanna learn about
Nextjs from someone that is truly good at

217
00:14:15.629 --> 00:14:21.752
it, definitely catch Scott's
course on Nextjs Cool,

218
00:14:21.752 --> 00:14:25.300
other questions about anything
that we talked about so far?

219
00:14:25.300 --> 00:14:27.071
&gt;&gt; Looking for your opinion on Redux, but

220
00:14:27.071 --> 00:14:30.190
I'm assuming you're gonna get
into that intermediate react.

221
00:14:30.190 --> 00:14:32.993
&gt;&gt; Correct, yeah,
if you wanna know my opinion on Redux,

222
00:14:32.993 --> 00:14:36.050
you got to spend like another hour
with me in my course [LAUGH].

223
00:14:39.590 --> 00:14:43.900
My one sentence opinion on is
typically you wanna use React context.

224
00:14:43.900 --> 00:14:48.020
But there are use cases
where Redux really shines.

225
00:14:48.020 --> 00:14:49.990
So there are places I still would use it.

226
00:14:49.990 --> 00:14:51.005
They're just rare.

227
00:14:51.005 --> 00:14:57.620
It's a fairly good way to put it, I think.

228
00:14:58.680 --> 00:15:00.870
Well, thank you for sticking around for
the complete Intro To React.

229
00:15:00.870 --> 00:15:02.560
This was really super fun to teach.

230
00:15:02.560 --> 00:15:05.790
And I will catch you at
the complete Intro To React V8.

231
00:15:05.790 --> 00:15:12.997
This is a fun course to teach and
yeah, hopefully you enjoy it.

232
00:15:12.997 --> 00:15:16.044
&gt;&gt; [APPLAUSE]

