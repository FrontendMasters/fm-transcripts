WEBVTT

1
00:00:00.055 --> 00:00:04.181
Okay, so go back to your index html here,
where it says write code here.

2
00:00:04.181 --> 00:00:09.557
We're gonna say,
const App = arrow function,

3
00:00:09.557 --> 00:00:14.809
this is the ligature I
was talking to you about.

4
00:00:14.809 --> 00:00:18.618
So if you see some weird combined
symbols that's what this is.

5
00:00:18.618 --> 00:00:23.905
So this is actually an equal sign and
a angle bracket put together and

6
00:00:23.905 --> 00:00:27.541
my font combines them into one glyph,
right?

7
00:00:27.541 --> 00:00:29.737
So that's what a code ligature is.

8
00:00:29.737 --> 00:00:31.688
And that's covered in
like the intro section or

9
00:00:31.688 --> 00:00:34.925
the introduction part of the course if
you wanna figure out how to enable that.

10
00:00:34.925 --> 00:00:39.918
So we're gonna make this
function called App and

11
00:00:39.918 --> 00:00:45.164
we're gonna say return
react dot create element.

12
00:00:45.164 --> 00:00:52.612
We're gonna make a div, this data is
gonna have no additional parameters into,

13
00:00:52.612 --> 00:00:57.002
so we're just gonna pass
an empty object here.

14
00:00:57.002 --> 00:01:01.854
And then we're gonna say
react.create element.

15
00:01:03.614 --> 00:01:07.393
With an h1 here, again,
no per additional parameters and

16
00:01:07.393 --> 00:01:13.372
we're going to put just
Some Texas has adopt me, And

17
00:01:13.372 --> 00:01:18.847
an exclamation point like that,
yeah, no, no semicolon there.

18
00:01:18.847 --> 00:01:25.303
So, from there, we're gonna go
underneath here I'm gonna say,

19
00:01:25.303 --> 00:01:30.046
ReactDom.render, react.createElements.

20
00:01:30.046 --> 00:01:32.860
We're gonna pass this app
function that we just created.

21
00:01:37.296 --> 00:01:43.362
And then,
after that we're gonna say document.get

22
00:01:43.362 --> 00:01:48.617
element by ID Route,

23
00:01:48.617 --> 00:01:53.350
make this a bit smaller so
you can see a bit better.

24
00:01:53.350 --> 00:01:58.719
All right, So

25
00:01:58.719 --> 00:02:03.826
this we basically just made
the hello world of react here.

26
00:02:03.826 --> 00:02:05.374
And let's talk about what we actually did.

27
00:02:05.374 --> 00:02:09.756
We created a component called App or
like a class of components right.

28
00:02:09.756 --> 00:02:15.896
In my analogy like to imagine this as
basically you have forged like a rubber

29
00:02:15.896 --> 00:02:21.657
stamp then you can go just make as
many apps as you possibly want right.

30
00:02:21.657 --> 00:02:24.985
So you can create as many instances
of that class that you want too.

31
00:02:24.985 --> 00:02:28.673
If you want to use object oriented
programming lingo which I do not so

32
00:02:28.673 --> 00:02:30.884
I will not be referring to that further.

33
00:02:30.884 --> 00:02:35.791
But the idea here is now I have a reusable
component called app that every time I say

34
00:02:35.791 --> 00:02:39.992
hey give me an app it's going to give
you a div with an h1 inside of it.

35
00:02:39.992 --> 00:02:45.973
And that h1 is gonna say adopt me right,
so what do we expect to do?

36
00:02:45.973 --> 00:02:49.156
CreateElement basically creates
a new instance of something.

37
00:02:49.156 --> 00:02:51.721
So in this case, we're creating
an instance of a div, and then here,

38
00:02:51.721 --> 00:02:53.470
we're creating an instance of an h1,
right?

39
00:02:53.470 --> 00:02:56.674
And I can have an arbitrary
amount of those,

40
00:02:56.674 --> 00:03:00.667
notice here I'm using
createElement again with app.

41
00:03:00.667 --> 00:03:03.800
So I'm basically creating an instance of
the app like I'm creating a div here,

42
00:03:03.800 --> 00:03:04.890
I'm creating an app here.

43
00:03:04.890 --> 00:03:07.836
And that's what the kind
of the power of react is,

44
00:03:07.836 --> 00:03:11.344
is that it allows me to create
these reusable components and

45
00:03:11.344 --> 00:03:14.590
I can mix and
match them with basically HTML elements.

46
00:03:14.590 --> 00:03:19.389
So at the end of the day what do I
expect to see when I go look over at

47
00:03:19.389 --> 00:03:20.758
the browser now?

48
00:03:20.758 --> 00:03:23.821
I expect to see a div with
an h1 inside of it and

49
00:03:23.821 --> 00:03:27.138
inside of that h1 is going
to say adopt me right.

50
00:03:27.138 --> 00:03:31.675
Here I'm just telling it
where do you wanna put it?

51
00:03:31.675 --> 00:03:35.593
And I'm putting it here in the document
dot get element by the root,

52
00:03:35.593 --> 00:03:38.150
which is going to be
putting it right there.

53
00:03:38.150 --> 00:03:42.195
It's gonna blow away not rendered and we
should see a div with an h1 inside of it

54
00:03:42.195 --> 00:03:44.664
says adopt me, so
let's see if we are correct.

55
00:03:46.944 --> 00:03:47.444
So we do.

56
00:03:49.639 --> 00:03:53.247
And it's just styling
it with a CSS right so

57
00:03:53.247 --> 00:03:58.172
it's making a background image and
then hiding the text.

58
00:03:58.172 --> 00:04:02.756
We can see here inside of route
a see a div with an h1 that says

59
00:04:02.756 --> 00:04:06.537
adopt me now you might
be thinking that's neat.

60
00:04:06.537 --> 00:04:10.653
Could have done that with a lot less
JavaScript with just some HTML,

61
00:04:10.653 --> 00:04:12.320
we'll get there, right?

62
00:04:12.320 --> 00:04:16.472
But this is just like the hello world
of creating something with React.

63
00:04:16.472 --> 00:04:20.874
And notice here we don't have anything
else besides the libraries and

64
00:04:20.874 --> 00:04:22.520
a little bit of code here.

65
00:04:22.520 --> 00:04:27.086
There's no build step,
there's nothing it's just raw react here.

66
00:04:27.086 --> 00:04:30.577
Now I'm gonna say no one
writes react like this.

67
00:04:30.577 --> 00:04:33.331
I like the very beginning of react there
were some people like this is the way and

68
00:04:33.331 --> 00:04:34.344
we should all do it this way.

69
00:04:34.344 --> 00:04:37.135
And they were wrong and
they all change their mind, right?

70
00:04:37.135 --> 00:04:41.875
Everyone writes it with JSX, which
we'll get to here in a little bit, but

71
00:04:41.875 --> 00:04:45.939
there was a hot second of rebellion,
it was invoked to be cool.

72
00:04:45.939 --> 00:04:49.780
This app is a component we made and
it's just a function, right?

73
00:04:49.780 --> 00:04:51.817
So if you wanna make a component function,

74
00:04:51.817 --> 00:04:55.450
just make sure that it's returning
the result of React dot Create Element.

75
00:04:55.450 --> 00:04:58.475
That's kind of like the contract
Have something here, right?

76
00:04:58.475 --> 00:05:02.423
And this is basically just a render
function so that whenever you run app,

77
00:05:02.423 --> 00:05:05.870
it's gonna give you back markup,
that's the contract there.

78
00:05:05.870 --> 00:05:07.953
These render functions have to be fast,

79
00:05:07.953 --> 00:05:11.275
right because react wants to
rerender itself very frequently.

80
00:05:11.275 --> 00:05:14.610
Whenever you change something about
your React app, it's gonna rerender it.

81
00:05:14.610 --> 00:05:18.758
So you don't wanna put really expensive
slow calls inside of your render

82
00:05:18.758 --> 00:05:19.581
statements.

83
00:05:19.581 --> 00:05:21.606
You wanna do that outside of
your render statement and

84
00:05:21.606 --> 00:05:23.184
then use results inside of your animals.

85
00:05:23.184 --> 00:05:26.880
We'll talk about that when we get there
but just I want you to stick in your brain

86
00:05:26.880 --> 00:05:29.628
right now is like these functions
have to be fast, right?

87
00:05:29.628 --> 00:05:31.659
Into the functional programming Lingo,

88
00:05:31.659 --> 00:05:34.740
they need to be pure that they
need to have like no side effects.

89
00:05:34.740 --> 00:05:39.976
So you don't wanna do something like
say like lead counter equals zero.

90
00:05:39.976 --> 00:05:45.308
You can don't have to follow this along,
you can say counter plus plus here.

91
00:05:45.308 --> 00:05:46.874
This would be a side effect,

92
00:05:46.874 --> 00:05:51.522
right because it's keeping track of state
outside of the render function, right?

93
00:05:51.522 --> 00:05:53.664
So this counter would be going
up every time that it renders,

94
00:05:53.664 --> 00:05:55.518
this is something that you don't wanna do,
right?

95
00:05:55.518 --> 00:06:00.472
You want to keep all the effects inside
of the same that'll make more sense as we

96
00:06:00.472 --> 00:06:01.160
go along.

97
00:06:01.160 --> 00:06:05.803
But just keep that in mind is like I
don't wanna be messing with ambient state

98
00:06:05.803 --> 00:06:10.248
whenever I'm in a render function
there's different places for that.

99
00:06:10.248 --> 00:06:12.898
There's two types of components
class components and

100
00:06:12.898 --> 00:06:16.649
function components we'll talk about
class components later in the class.

101
00:06:16.649 --> 00:06:21.332
This is a function component, so
what's the point is empty object.

102
00:06:21.332 --> 00:06:25.537
You can also put null here let me triple
check to see that that is actually true.

103
00:06:25.537 --> 00:06:30.145
But I'm pretty sure you can just put
a null there and it will be just as happy,

104
00:06:30.145 --> 00:06:31.660
you can put a null there.

105
00:06:31.660 --> 00:06:37.815
This is where you put if you wanna give it
a class name or you wanna give it an ID.

106
00:06:37.815 --> 00:06:44.690
So if I wanted let's say I wanted this
h1 here to be called the brand right,

107
00:06:44.690 --> 00:06:50.058
what I do is I go here here to the h1 and
I would say ID brand.

108
00:06:50.058 --> 00:06:52.035
Now if we come back over here and
we render it,

109
00:06:52.035 --> 00:06:53.662
notice that I have the id brand here.

110
00:06:53.662 --> 00:07:01.133
So it's whatever stuff you wanna be
passed into that child component, right.

111
00:07:01.133 --> 00:07:05.184
Or you can put class name there or
something like that.

112
00:07:05.184 --> 00:07:10.183
Notice here with the credo an app here I
omitted everything it's because it has no

113
00:07:10.183 --> 00:07:10.925
children.

114
00:07:10.925 --> 00:07:15.098
But you absolutely could say no here or
object and we'll get into that here

115
00:07:15.098 --> 00:07:18.552
in just a second but
you can also pass stuff into that as well.

116
00:07:18.552 --> 00:07:23.674
But if you don't have anything to pass and
it has no children and it has doesn't

117
00:07:23.674 --> 00:07:28.338
have any properties to it, you can
just leave them out there optional.

118
00:07:28.338 --> 00:07:33.029
Or if you want the computer science term
for its variablarity which just means

119
00:07:33.029 --> 00:07:36.577
it has a different amount of
parameters you can pass to it.

120
00:07:36.577 --> 00:07:39.945
Another example that came up
while I was writing this course,

121
00:07:39.945 --> 00:07:42.617
is that because people
get confused about like.

122
00:07:42.617 --> 00:07:45.141
What's the difference between
app here as a function,

123
00:07:45.141 --> 00:07:47.085
an app here being rendered as an instance.

124
00:07:47.085 --> 00:07:49.160
The analogy that came to my head is,

125
00:07:49.160 --> 00:07:52.215
this is like creating like
a new type of car, right?

126
00:07:52.215 --> 00:07:57.367
So if I'm Honda, this is like me
creating civic as a line of cars, right?

127
00:07:57.367 --> 00:08:02.382
And then here, this is like the factory
producing one civic, right,

128
00:08:02.382 --> 00:08:06.973
so you have one civic car or
the civic as the line of cars, right.

129
00:08:06.973 --> 00:08:08.928
This is creating a new line of cars,

130
00:08:08.928 --> 00:08:11.740
this is creating one
individual instance of that.

131
00:08:11.740 --> 00:08:15.030
To take the analogy even further, you
can actually pass parameters into it so

132
00:08:15.030 --> 00:08:17.268
you can have different
options on your car, right.

133
00:08:17.268 --> 00:08:22.162
Different options on your civic the same
kind of idea here was that a helpful

134
00:08:22.162 --> 00:08:22.866
analogy?

135
00:08:22.866 --> 00:08:28.338
All right, I felt really smart when I
thought of it so I was gonna test it out.

136
00:08:28.338 --> 00:08:35.453
&gt;&gt; Specify it's the React DOM dot render
that's making that instance of the car.

137
00:08:35.453 --> 00:08:36.685
&gt;&gt; It's actually the createElements,

138
00:08:36.685 --> 00:08:37.585
which is like-
&gt;&gt; Is it?

139
00:08:37.585 --> 00:08:42.587
&gt;&gt; And then the ReactDom that renders
basically take what this produces and

140
00:08:42.587 --> 00:08:44.393
just barf it onto the DOM.

141
00:08:44.393 --> 00:08:45.095
&gt;&gt; Okay.

142
00:08:45.095 --> 00:08:49.667
&gt;&gt; Yeah, this is actually, what's actually
taking whatever your tree you created and

143
00:08:49.667 --> 00:08:51.326
rendering that out to the DOM.

144
00:08:51.326 --> 00:08:57.991
So you can basically say,
const myRenderedApp And

145
00:08:57.991 --> 00:09:02.485
then here,
you'd be saying myRenderedApp, right?

146
00:09:02.485 --> 00:09:04.843
So this is actually what's stamping out,

147
00:09:04.843 --> 00:09:08.586
this is what's creating the popping
it out of the factory, right?

148
00:09:08.586 --> 00:09:12.483
And this is what's actually like
putting it onto the road, I guess,

149
00:09:12.483 --> 00:09:14.710
would be the best part of that analogy.

150
00:09:14.710 --> 00:09:19.916
So you're gonna call react DOM dot
render exactly once in your app.

151
00:09:19.916 --> 00:09:21.458
Back, you technically
could call it more but

152
00:09:21.458 --> 00:09:24.390
let's say exactly once because I've never
had to do and I've written a lot of React.

153
00:09:24.390 --> 00:09:27.058
It's possible to do it different times,
but

154
00:09:27.058 --> 00:09:31.849
you're gonna call react dot
Create Element 1000s, 10000s of times.

155
00:09:31.849 --> 00:09:37.042
Hammer that point because it's confusing,
so feels confusing because it is.

156
00:09:37.042 --> 00:09:41.708
So heads up here, react DOM dot render
they're changing how this works

157
00:09:41.708 --> 00:09:45.150
in React 18 it's going to
be called Create route.

158
00:09:45.150 --> 00:09:49.179
It's going to work basically the same, but
if you're moving on to react 18 just be

159
00:09:49.179 --> 00:09:52.270
aware that the, shape of that call
is gonna change a little bit.

160
00:09:52.270 --> 00:09:55.584
And you have to do it to opt in to
like the new performance stuff that

161
00:09:55.584 --> 00:09:56.500
they're doing.

