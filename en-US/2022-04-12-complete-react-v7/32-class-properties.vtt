WEBVTT

1
00:00:00.049 --> 00:00:04.571
Let's talk about class properties.

2
00:00:04.571 --> 00:00:05.801
Pretty short little section here.

3
00:00:05.801 --> 00:00:11.211
I'm gonna show you how to make class
components a little bit easier to write.

4
00:00:11.211 --> 00:00:15.929
So there is a future spec of
JavaScript which is gonna get added

5
00:00:15.929 --> 00:00:18.024
called class properties.

6
00:00:18.024 --> 00:00:20.180
I don't even know what stage it is.

7
00:00:20.180 --> 00:00:23.449
But anyway, it's a great proposal.

8
00:00:23.449 --> 00:00:26.568
So I'm gonna show you how to set
that up today in your React project.

9
00:00:26.568 --> 00:00:31.015
In general, I don't advise you to
add experimental JavaScript to your

10
00:00:31.015 --> 00:00:34.359
projects like your long
term maintenance projects.

11
00:00:34.359 --> 00:00:37.496
And to give you a good example of that,
decorators, right,

12
00:00:37.496 --> 00:00:40.389
we've been talking about
decorators in JavaScript for

13
00:00:40.389 --> 00:00:43.417
years and basically as long
as I've been in the industry.

14
00:00:43.417 --> 00:00:47.645
If you're not familiar decorators
are a really cool feature in

15
00:00:47.645 --> 00:00:50.357
languages like Python, where you can,

16
00:00:50.357 --> 00:00:55.161
kind of augment the ability of classes and
functions with a statement.

17
00:00:55.161 --> 00:00:59.183
I know a company that added decorators
everywhere inside of their codebase.

18
00:00:59.183 --> 00:01:01.654
And then they changed the way
the decorators were gonna work and

19
00:01:01.654 --> 00:01:02.780
then they changed it again.

20
00:01:02.780 --> 00:01:07.540
And so they had to keep refactoring
their app to keep up with how the spec

21
00:01:07.540 --> 00:01:09.565
was changing and that sucks.

22
00:01:09.565 --> 00:01:12.279
So in general do not do
that except this time.

23
00:01:12.279 --> 00:01:13.243
[LAUGH].

24
00:01:13.243 --> 00:01:18.343
I don't think this one's gonna change
it hasn't changed in a while and

25
00:01:18.343 --> 00:01:23.958
it's coming I wish I just look up, what
this is actually in terms of the stage.

26
00:01:30.460 --> 00:01:31.937
It is, so I think it got added.

27
00:01:31.937 --> 00:01:36.772
It might even been added this year.

28
00:01:36.772 --> 00:01:38.401
But still, sometimes I'm gonna
show you how to do this.

29
00:01:38.401 --> 00:01:43.176
So in the case in the future that you
want to add additional Babel plugins that

30
00:01:43.176 --> 00:01:46.022
this is how you do
specifically with parcel.

31
00:01:46.022 --> 00:01:50.945
So again go ahead and
copy this statement right here NPM

32
00:01:50.945 --> 00:01:58.126
install-D@babble/plugin-proposal class
properties at 7.16.7.

33
00:01:58.126 --> 00:02:02.754
We're gonna stop our server here for

34
00:02:02.754 --> 00:02:07.156
a second paste that in there.

35
00:02:07.156 --> 00:02:10.868
Then run our server again.

36
00:02:10.868 --> 00:02:15.811
Okay, so once we've done that,
then we need to make a dot Babelrc file,

37
00:02:15.811 --> 00:02:18.180
which we're gonna do really quick

38
00:02:23.497 --> 00:02:28.460
So when I very first started teaching this
class, I don't know why this is upset.

39
00:02:28.460 --> 00:02:30.948
That's fine, I don't care.

40
00:02:30.948 --> 00:02:33.230
When I very first started
teaching this class,

41
00:02:33.230 --> 00:02:35.236
we had to set up Babel totally ourselves.

42
00:02:35.236 --> 00:02:39.939
It was a process we had to learn like
about the internals of Babel and all that.

43
00:02:39.939 --> 00:02:44.026
And in general,
parcel just hides all that from you.

44
00:02:44.026 --> 00:02:49.031
What all Babel is,
it's a code transformer, it takes code A,

45
00:02:49.031 --> 00:02:54.518
it applies some transformation and
you get code B out the other side.

46
00:02:54.518 --> 00:02:59.202
It's called a transpiler as you might
imagine but it's built into parcel for

47
00:02:59.202 --> 00:03:02.387
the most part,
you don't have to care what it does.

48
00:03:02.387 --> 00:03:05.523
But that was what's doing
the JSX transformations for you.

49
00:03:05.523 --> 00:03:09.499
So like removing all that making
that understandable JavaScript,

50
00:03:09.499 --> 00:03:12.639
it's what's taking your
futuristic JavaScript and

51
00:03:12.639 --> 00:03:15.651
transpiling it to IE 11
compatible JavaScript.

52
00:03:15.651 --> 00:03:18.490
It does all those kinds
of translations for you.

53
00:03:18.490 --> 00:03:23.262
So what we're doing is we're augmenting
it's ability to do transformations for

54
00:03:23.262 --> 00:03:26.801
a brand new feature of JavaScript
called class properties.

55
00:03:26.801 --> 00:03:31.199
So, we're going to add this Babelrc here.

56
00:03:31.199 --> 00:03:33.024
Again, you can just copy
that if you want to.

57
00:03:33.024 --> 00:03:36.490
I'm gonna type it out just so
you can see it.

58
00:03:36.490 --> 00:03:37.923
Let me bring up my notes here.

59
00:03:37.923 --> 00:03:44.007
And you're gonna put in plugins.

60
00:03:44.007 --> 00:03:50.114
This is gonna be an array and you're

61
00:03:50.114 --> 00:03:57.242
gonna add @babel/plugin-proposal-

62
00:03:57.242 --> 00:04:02.747
class-properties like that.

63
00:04:07.154 --> 00:04:12.356
So a plugin is like a low level concept
in Babel basically what it contains

64
00:04:12.356 --> 00:04:18.070
is a contains like a detector to say when
you see something that looks like this,

65
00:04:18.070 --> 00:04:20.906
transform it so it comes out like this.

66
00:04:20.906 --> 00:04:26.579
So, it forms your code from the futuristic
JavaScript to the past JavaScript so

67
00:04:26.579 --> 00:04:29.301
that older brothers can understand.

68
00:04:29.301 --> 00:04:30.234
Okay.

69
00:04:33.687 --> 00:04:36.130
There's also things called presets.

70
00:04:36.130 --> 00:04:40.193
So for example there's ones called
preset-n that your code is already being

71
00:04:40.193 --> 00:04:40.948
run through.

72
00:04:40.948 --> 00:04:44.712
But because we're not overriding
anything with it we don't have to like,

73
00:04:44.712 --> 00:04:45.677
do anything to it.

74
00:04:45.677 --> 00:04:50.374
Because the way this works with parcel
is it merges your Babel RC with their

75
00:04:50.374 --> 00:04:54.716
existing Babel RC and that would
include things like preset react.

76
00:04:54.716 --> 00:04:59.984
It includes preset-env and
a bunch of other stuff.

77
00:04:59.984 --> 00:05:04.647
Okay, so now I want you to
bring back up your details page

78
00:05:07.660 --> 00:05:14.402
So instead of this part,
which is kind of gross looking,

79
00:05:14.402 --> 00:05:21.009
we can now just say state
equals loading true like this.

80
00:05:21.009 --> 00:05:23.250
And then we can get rid of
this constructor altogether.

81
00:05:27.779 --> 00:05:31.442
That is significantly
cleaner in my opinion, right,

82
00:05:31.442 --> 00:05:36.298
you don't have this all this cruft
you'll have another function up here

83
00:05:36.298 --> 00:05:40.778
you're just setting a class property
on details of loading true.

84
00:05:40.778 --> 00:05:42.209
These are basically doing the same thing.

85
00:05:45.352 --> 00:05:47.132
Makes sense?

86
00:05:47.132 --> 00:05:50.274
The other thing that's really nice
about this is TypeScript knows how

87
00:05:50.274 --> 00:05:50.974
to type it now.

88
00:05:53.539 --> 00:05:56.550
So you get all these implicit TypeScript
type things out of it for free.

89
00:05:59.547 --> 00:06:01.309
We'll go over that in Intermediate React.

90
00:06:04.089 --> 00:06:09.107
Okay, so if you're gonna be writing
any amount of class components,

91
00:06:09.107 --> 00:06:13.201
I suggest adding the class
properties transformation.

92
00:06:16.163 --> 00:06:17.446
Because this looks really nice.

93
00:06:19.744 --> 00:06:24.103
But yeah, this particular thing is
what you would call a class property,

94
00:06:24.103 --> 00:06:25.520
the state equals blah.

95
00:06:25.520 --> 00:06:29.448
That sets an instance variable
on the incidences of the class.

96
00:06:33.090 --> 00:06:35.760
Cool, any questions about that?

97
00:06:35.760 --> 00:06:37.461
&gt;&gt; So, we can do the JavaScript.

98
00:06:37.461 --> 00:06:42.290
Can we do the JavaScript thing of kind
of declaring variables that don't

99
00:06:42.290 --> 00:06:46.420
even exist yet, to be added onto
a component or a given class?

100
00:06:46.420 --> 00:06:51.832
&gt;&gt; I mean, you could do whatever you want,
you could say, something like that, right?

101
00:06:51.832 --> 00:06:59.001
And then down here, you could refer
to this as this dot lol, right?

102
00:06:59.001 --> 00:07:01.766
So that's the connection there.

103
00:07:01.766 --> 00:07:03.458
And you can change it later too,
I can say.

104
00:07:06.060 --> 00:07:07.024
Right.

105
00:07:09.175 --> 00:07:15.173
So whenever this details
class gets instantiated

106
00:07:15.173 --> 00:07:20.169
that instance will then
have a this dot lol

107
00:07:20.169 --> 00:07:26.033
on it it's not any more complex than that.

108
00:07:26.033 --> 00:07:29.992
Okay.

109
00:07:29.992 --> 00:07:35.994
That's it for that part.

110
00:07:35.994 --> 00:07:40.684
So, I wanted to show you a bit more about,

111
00:07:40.684 --> 00:07:45.781
managing state inside
of a class component.

112
00:07:45.781 --> 00:07:47.105
So I want you to create,

113
00:07:47.105 --> 00:07:51.094
we're gonna make like a little like
a carousel of photos for this page.

114
00:07:51.094 --> 00:07:53.743
And we're gonna do that
with a class component.

115
00:07:53.743 --> 00:07:56.956
You already know how to do that with
a function component that you could just

116
00:07:56.956 --> 00:08:00.172
use, like use state and all that kind
of stuff and it would work perfectly.

117
00:08:00.172 --> 00:08:04.686
And again, that's typically how I would do
it now, but I'm gonna show you how to do

118
00:08:04.686 --> 00:08:08.641
it with the class components, so
that when you need to, you know how to.

119
00:08:08.641 --> 00:08:12.486
So make a new file called carousel.

120
00:08:12.486 --> 00:08:15.220
And I've now had to write carousel
enough times that I know how to spell,

121
00:08:19.176 --> 00:08:21.255
It took a few times.

122
00:08:21.255 --> 00:08:24.613
Here we're gonna import component.

123
00:08:26.521 --> 00:08:30.997
From react, by the way,
I'll just to show you.

124
00:08:30.997 --> 00:08:35.783
So I will frequently see
people do this instead.

125
00:08:35.783 --> 00:08:36.936
And this is totally valid as well.

126
00:08:36.936 --> 00:08:38.633
You'll just say import react from react.

127
00:08:38.633 --> 00:08:43.544
And they'll say, class carousel

128
00:08:43.544 --> 00:08:47.954
extends react dot component.

129
00:08:47.954 --> 00:08:52.657
Some people find that preferable
I have no judgment there.

130
00:08:52.657 --> 00:08:56.383
It's totally up to you how
you wanna handle that.

131
00:08:56.383 --> 00:09:03.207
I just like in importing individual things
at again, just kind of out to have it.

132
00:09:03.207 --> 00:09:10.418
Okay, export default carousel like that.

133
00:09:10.418 --> 00:09:14.514
And then we're gonna make a little
component here that does exactly what we

134
00:09:14.514 --> 00:09:15.043
want to.

135
00:09:15.043 --> 00:09:18.407
I'm gonna switch this to be two spaces
because it just drives me crazy

136
00:09:18.407 --> 00:09:19.403
every single time.

137
00:09:19.403 --> 00:09:23.362
Okay, so
first thing we're gonna create our state.

138
00:09:23.362 --> 00:09:26.698
So the first bit of state we're gonna
have what is the active photo being shown

139
00:09:26.698 --> 00:09:29.070
because if there's like
an array of like 10 photos.

140
00:09:29.070 --> 00:09:32.735
We're gonna show the first
one first right.

141
00:09:32.735 --> 00:09:37.598
So active zero and then we're gonna do
something kind of interesting here.

142
00:09:37.598 --> 00:09:42.553
We're gonna give it default properties so
let's say you instantiate like

143
00:09:42.553 --> 00:09:46.811
a new carousel but you don't give
it any pet photos whatsoever.

144
00:09:46.811 --> 00:09:48.206
All right.

145
00:09:48.206 --> 00:09:48.902
What do you want it to do?

146
00:09:48.902 --> 00:09:52.349
Do you want to not show do you want
it to show some sort of placeholder?

147
00:09:52.349 --> 00:09:55.291
In this case we want it to show
some sort of placeholder right?

148
00:09:55.291 --> 00:10:02.231
So we're gonna say static
default props equals images and

149
00:10:02.231 --> 00:10:09.316
then we're gonna give it this
array of like a placeholder.

150
00:10:12.195 --> 00:10:22.043
Pets-images.dev-apis.com/pets/none.jpg.

151
00:10:28.292 --> 00:10:30.314
So let's talk about state.

152
00:10:30.314 --> 00:10:32.913
Notice that one of these has static and
one of them doesn't.

153
00:10:32.913 --> 00:10:34.128
Why?

154
00:10:34.128 --> 00:10:38.268
I mean like I've tried to explain this
a couple of different ways because it

155
00:10:38.268 --> 00:10:39.263
is a bit strange.

156
00:10:39.263 --> 00:10:42.822
That we're going back to what's
the difference between a class and

157
00:10:42.822 --> 00:10:45.706
what's the difference between an instance,
right.

158
00:10:45.706 --> 00:10:52.778
So every carousel will have its own state
that belongs to every individual carousel.

159
00:10:52.778 --> 00:10:57.723
If I have five carousels render to
a page they will all have different

160
00:10:57.723 --> 00:10:59.737
state.actives, right.

161
00:10:59.737 --> 00:11:04.527
This one can be displaying photo one this
one can be displaying photo zero this one

162
00:11:04.527 --> 00:11:06.867
can be displaying photo 15, right.

163
00:11:06.867 --> 00:11:11.129
And they're all individual have their own
state that manage their own state and

164
00:11:11.129 --> 00:11:13.490
they have no concept of each other, right.

165
00:11:13.490 --> 00:11:19.708
Default props is all carousels universally
share one default props, right?

166
00:11:19.708 --> 00:11:21.508
Because this is not a mutable thing.

167
00:11:21.508 --> 00:11:23.424
This is not gonna change ever.

168
00:11:23.424 --> 00:11:25.794
It's just for
default props like when you start out,

169
00:11:25.794 --> 00:11:27.382
this is what the default props are.

170
00:11:27.382 --> 00:11:31.461
So they can all share one
instance of that, right?

171
00:11:31.461 --> 00:11:34.140
So they all have the exact same,
it's actually literally the same array.

172
00:11:34.140 --> 00:11:36.492
They're all pointing.

173
00:11:36.492 --> 00:11:43.926
They come back and say,
console.log.carousel.default props, right?

174
00:11:43.926 --> 00:11:46.347
These are all going to be
precisely the same thing.

175
00:11:46.347 --> 00:11:50.262
And again,
notice that they're on the instance or

176
00:11:50.262 --> 00:11:55.189
like the class carousel,
not an instance of carousel, right.

177
00:11:55.189 --> 00:11:59.899
This would be different than example
of saying like const x = new carousel,

178
00:11:59.899 --> 00:12:03.079
which you wouldn't do this
with react component.

179
00:12:03.079 --> 00:12:09.631
You would just do this
with a JavaScript class.

180
00:12:09.631 --> 00:12:15.010
And then you say x.state.active, right?

181
00:12:15.010 --> 00:12:19.284
So this is now an instance variable
of this new carousel that I created

182
00:12:19.284 --> 00:12:22.686
whereas this one belongs
to all carousels generally.

183
00:12:22.686 --> 00:12:27.552
Have explained that in sufficient amount
of roundabout ways to understand make

184
00:12:27.552 --> 00:12:28.066
sense.

185
00:12:28.066 --> 00:12:30.520
It's weird, that's why I'm kind
of dwelling on it for a second.

