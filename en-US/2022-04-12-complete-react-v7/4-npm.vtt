WEBVTT

1
00:00:00.179 --> 00:00:06.582
So we're gonna take a step away for a
second from all of our react writing code,

2
00:00:06.582 --> 00:00:11.448
and we're gonna move into a new
frontier of compiled code.

3
00:00:11.448 --> 00:00:16.404
And using build tools, and we're gonna
make react reading a lot more pleasant.

4
00:00:16.404 --> 00:00:21.225
So again, no one I know writes react
without some sort of bills stuck,

5
00:00:21.225 --> 00:00:25.324
cuz they all use this JSX,
they always use stuff like that.

6
00:00:25.324 --> 00:00:27.465
And I think you'll
hopefully understand why,

7
00:00:27.465 --> 00:00:30.955
if you don't understand why, just stick
with me until the end of the course.

8
00:00:30.955 --> 00:00:34.331
And if you still don't like it I mean,
you're wrong but sure, whatever,

9
00:00:34.331 --> 00:00:35.039
that's fine.

10
00:00:35.039 --> 00:00:36.698
You can go back to writing it this way.

11
00:00:36.698 --> 00:00:40.158
Yeah, we're here on JS tools.

12
00:00:40.158 --> 00:00:41.697
We're gonna start with NPM.

13
00:00:41.697 --> 00:00:45.194
NPM does not stand for
Node JS Package Manager, but

14
00:00:45.194 --> 00:00:47.560
it is the Node JS Package Manager.

15
00:00:47.560 --> 00:00:48.489
What does it stand for?

16
00:00:49.913 --> 00:00:53.968
I don't know, they won't say.

17
00:00:53.968 --> 00:00:56.896
Microsoft bought NPM while I still
worked there, and I asked all right,

18
00:00:56.896 --> 00:00:58.245
what does it actually stand for?

19
00:00:58.245 --> 00:01:02.219
They were like not Node Package Manager.

20
00:01:02.219 --> 00:01:05.921
So I imagine many of you
have used it before,

21
00:01:05.921 --> 00:01:11.040
it's a great tool,
makes writing JavaScript fairly easy.

22
00:01:11.040 --> 00:01:12.519
So, we're gonna be using that.

23
00:01:12.519 --> 00:01:16.984
If you have installed Node JS,
you've installed NPM, I guess technically,

24
00:01:16.984 --> 00:01:20.853
if you do it through Ubuntu as
package manager, NPM doesn't come.

25
00:01:20.853 --> 00:01:22.482
Anyway, if you're doing it through Ubuntu,

26
00:01:22.482 --> 00:01:24.039
you can figure out how
to get NPM on your own.

27
00:01:24.039 --> 00:01:29.434
We're gonna start by creating a package
dot JSON for our project using NPM.

28
00:01:29.434 --> 00:01:35.159
So I want you to head over to
whatever your favorite terminal is.

29
00:01:35.159 --> 00:01:40.020
Mine is through VS code, but
you can do it through whatever you want.

30
00:01:40.020 --> 00:01:43.910
I'm using ZSH here, but
this will work out for bash.

31
00:01:43.910 --> 00:01:48.230
Probably work for FishShell, and
it should work for PowerShell as well.

32
00:01:48.230 --> 00:01:49.920
I'm far less familiar with PowerShell,

33
00:01:49.920 --> 00:01:53.359
despite working directly adjacent to that
team at Microsoft, I don't ever use it.

34
00:01:53.359 --> 00:02:00.810
But anyway, i'm supposing mostly that
you know how to use NPM if you're here.

35
00:02:00.810 --> 00:02:04.350
So I want you to come
here into your project,

36
00:02:04.350 --> 00:02:09.339
i'm in my adopt me projects here,
i'm going to say npm init.

37
00:02:09.339 --> 00:02:12.887
And if you just hit enter right now,
it will ask you a bunch of questions like,

38
00:02:12.887 --> 00:02:14.589
what do you wanna call your project?

39
00:02:14.589 --> 00:02:15.379
Where's the repo?

40
00:02:15.379 --> 00:02:17.218
What's the test command?

41
00:02:17.218 --> 00:02:23.079
If you just hit- y, just saying I
don't care, make it whatever you want.

42
00:02:23.079 --> 00:02:24.518
So you can see here,

43
00:02:24.518 --> 00:02:29.959
it just generate this package at json
with a bunch of very basic things here.

44
00:02:29.959 --> 00:02:33.839
So, if I make the test command
that doesn't do anything,

45
00:02:33.839 --> 00:02:38.749
makes a licensed ISC which I think is
a very permissive MIT style license,

46
00:02:38.749 --> 00:02:41.540
I tend to make everything Apache 2.0.

47
00:02:44.638 --> 00:02:47.309
But that is up to you,
you can just leave it as it is.

48
00:02:47.309 --> 00:02:50.070
I don't know why I decided to talk
about that, but it doesn't matter.

49
00:02:50.070 --> 00:02:52.409
You can make it,
whatever you want it to be.

50
00:02:52.409 --> 00:02:54.099
The point of doing this is now,

51
00:02:54.099 --> 00:02:57.949
we have somewhere where we can track
all of our dependencies, right?

52
00:02:57.949 --> 00:03:00.069
So if I say npm install react,
it'll say cool,

53
00:03:00.069 --> 00:03:02.243
i'm gonna give you
the latest version of react.

54
00:03:02.243 --> 00:03:06.561
It'll keep track of what version you're
installing here in your package dot Json.

55
00:03:06.561 --> 00:03:10.638
And this allows us to build up our project
as we go, so don't install react yet

56
00:03:10.638 --> 00:03:11.282
by the way.

57
00:03:11.282 --> 00:03:14.699
We'll get there, But not yet.

58
00:03:14.699 --> 00:03:17.460
Someone's probably gonna ask
me why are we not using Yearn?

59
00:03:17.460 --> 00:03:22.309
Because I don't care, is really
the best answer to that question.

60
00:03:22.309 --> 00:03:26.242
Yearn is fine, Yearn is a great tool,
and if you feel like using Yearn,

61
00:03:26.242 --> 00:03:29.009
knock yourself out, or
why don't you use npmpm?

62
00:03:29.009 --> 00:03:31.210
Pmpm is that what it is?

63
00:03:31.210 --> 00:03:35.119
Performance npm, i've never used it,
so that's why we're not using it.

64
00:03:35.119 --> 00:03:39.012
Anyway, NPM does a really good job of
looking at other players in the ecosystem,

65
00:03:39.012 --> 00:03:40.799
and pulling in their best features.

66
00:03:40.799 --> 00:03:44.757
So, I'm just using NPM mostly
because I know the team, and

67
00:03:44.757 --> 00:03:47.779
if something goes wrong,
I can yell at them.

68
00:03:47.779 --> 00:03:49.090
That's really the real
answer to that question.

