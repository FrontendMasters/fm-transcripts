WEBVTT

1
00:00:00.610 --> 00:00:03.363
Let's talk about context.

2
00:00:05.255 --> 00:00:08.596
So when I used to teach this
class forever and ever go,

3
00:00:08.596 --> 00:00:13.739
people get really mad at me that I would
not teach this thing called react context.

4
00:00:15.574 --> 00:00:21.084
And the reason being is this was not
an official API until react, 16,

5
00:00:21.084 --> 00:00:23.691
so they standardize it in version 16, and

6
00:00:23.691 --> 00:00:27.573
they took it from a really kind of
finicky bad API, in my opinion.

7
00:00:27.573 --> 00:00:31.404
The old context API and they made it like
official, and it's actually quite nice to

8
00:00:31.404 --> 00:00:34.048
use, now particularly with
hooks it works really well.

9
00:00:36.606 --> 00:00:38.990
So what is context?

10
00:00:38.990 --> 00:00:41.120
Everything that I've been showing you so
far,

11
00:00:41.120 --> 00:00:42.939
is basically one way data flow, right?

12
00:00:42.939 --> 00:00:47.704
You have a component that has state in it,
sometimes you'll pass that state down into

13
00:00:47.704 --> 00:00:50.360
a child component which
can read it from props.

14
00:00:50.360 --> 00:00:54.306
Which can pass it down as this
very obvious data flows down, and

15
00:00:54.306 --> 00:00:55.426
does not flow up.

16
00:00:55.426 --> 00:00:58.876
That's very intentional that because it
makes it very easy to follow your code,

17
00:00:58.876 --> 00:01:00.460
the data only goes in one direction.

18
00:01:01.950 --> 00:01:04.590
What if you have to have data
that goes on the other direction?

19
00:01:04.590 --> 00:01:08.813
Sometimes you just have
constraints that require that, or

20
00:01:08.813 --> 00:01:11.184
a different way of stating that.

21
00:01:11.184 --> 00:01:15.413
Is what happens you have state that
affects your entire application all at

22
00:01:15.413 --> 00:01:16.920
once, all the same time?

23
00:01:17.970 --> 00:01:20.410
A good example that might be
something like a user, right?

24
00:01:20.410 --> 00:01:24.084
If I'm a user on your website,
I'm a user on netflix.com, and

25
00:01:24.084 --> 00:01:26.749
I navigate to 10 different
parts of the app.

26
00:01:28.020 --> 00:01:31.126
My users important on every single
page of that application, right?

27
00:01:31.126 --> 00:01:35.916
If I'm logged in, what my plan is?

28
00:01:35.916 --> 00:01:37.447
Sometimes maybe like
what your password is?

29
00:01:37.447 --> 00:01:41.695
All those kinds of things can affect
all the various different parts of

30
00:01:41.695 --> 00:01:45.512
the application, so
you can see that's like app level state.

31
00:01:45.512 --> 00:01:49.726
So on our Adopt Me page,
if I was logged in, right?

32
00:01:49.726 --> 00:01:53.029
That would affect this page,
it would affect the details page,

33
00:01:53.029 --> 00:01:57.321
it would affect all that kind of stuff,
you can get rid of that error by the way.

34
00:01:57.321 --> 00:01:58.965
On details.

35
00:02:04.705 --> 00:02:06.879
Yeah, there you go,
that's all working again.

36
00:02:06.879 --> 00:02:10.655
So, what if you have app level state?

37
00:02:10.655 --> 00:02:14.046
This is where something like
context comes into the picture,

38
00:02:14.046 --> 00:02:16.009
where context can be very helpful.

39
00:02:16.009 --> 00:02:20.350
It can help you kind of keep state
that affects your entire application.

40
00:02:20.350 --> 00:02:24.035
So, I'm gonna show you one of
the ways that you might do this, for

41
00:02:24.035 --> 00:02:26.530
something like a theme, right?

42
00:02:26.530 --> 00:02:28.021
So maybe you have like a dark mode and

43
00:02:28.021 --> 00:02:30.620
light mode, that would be
something you'd keep in context.

44
00:02:30.620 --> 00:02:34.880
You wouldn't wanna just be passing
that down into every single component.

45
00:02:34.880 --> 00:02:37.496
Otherwise, you'd end up with
this problem of base, and

46
00:02:37.496 --> 00:02:39.523
this we used to do this
to be honest with you.

47
00:02:39.523 --> 00:02:46.280
You'd be like in app, let's say I had
a theme of like some theme color.

48
00:02:46.280 --> 00:02:50.172
I'd have like const themecolor = brown or
something like that,

49
00:02:50.172 --> 00:02:55.000
I don't know why I thought Brown was like
the worst theme color, but here we are.

50
00:02:56.000 --> 00:02:59.113
And you'd have to pass theme
into every component and then,

51
00:02:59.113 --> 00:03:03.010
that would have to pass it down
into every other component, right?

52
00:03:03.010 --> 00:03:05.267
This is called the prop drilling problem,

53
00:03:05.267 --> 00:03:08.600
that the props have to drill down
into every single component.

54
00:03:08.600 --> 00:03:14.084
And it gets very tedious to pass theme
into every component in your application.

55
00:03:14.084 --> 00:03:17.354
This is what context is useful for,

56
00:03:17.354 --> 00:03:22.710
because you can set it once
at the application level.

57
00:03:22.710 --> 00:03:26.355
And then, every component that needs to
know about the theme can read from it,

58
00:03:26.355 --> 00:03:27.417
does that make sense?

59
00:03:27.417 --> 00:03:32.082
All right, cool, so we gonna make a theme
for the buttons in our application,

60
00:03:32.082 --> 00:03:34.214
cuz I was out of ideas at that point.

61
00:03:34.214 --> 00:03:35.420
[LAUGH] So what happens,

62
00:03:35.420 --> 00:03:39.291
if I wanna have some sort of theme where
I can change the color of this button?

63
00:03:39.291 --> 00:03:41.502
And go in here, and
I can change the color of this button?

64
00:03:43.383 --> 00:03:46.449
Now, I could make it so
that my app had a theme and

65
00:03:46.449 --> 00:03:49.224
then, I could pass that into both routes.

66
00:03:49.224 --> 00:03:50.988
But, let's see how to do it with context.

67
00:03:54.981 --> 00:04:02.596
Okay, The other thing I'm
gonna say about context is,

68
00:04:02.596 --> 00:04:07.286
it basically for 95% of the reasons
we used to use Redux for.

69
00:04:07.286 --> 00:04:11.460
Context is now a better choice,
I almost never use Redux anymore.

70
00:04:11.460 --> 00:04:15.503
Redux is great, by the way, it has a lot
of really cool features about it, and

71
00:04:15.503 --> 00:04:18.258
an intermediate,
I just a little section on Redux.

72
00:04:18.258 --> 00:04:20.176
So I show you how to use Redux?

73
00:04:20.176 --> 00:04:24.276
And there's very specific use cases for
it now, but 95,

74
00:04:24.276 --> 00:04:29.200
99% of reasons you would use Redux,
you would now use this context.

