WEBVTT

1
00:00:00.240 --> 00:00:04.847
So far we focus very much on kind
of underlying principles of lean UX

2
00:00:04.847 --> 00:00:08.812
we've talked a little bit
about upfront user research.

3
00:00:08.812 --> 00:00:13.658
But there are there are certain
opportunities throughout the project

4
00:00:13.658 --> 00:00:18.665
where you can insert a bit of user
research and testing, and so I wanna for

5
00:00:18.665 --> 00:00:24.001
the remainder of the workshop kind of
explore some of those opportunities and

6
00:00:24.001 --> 00:00:27.887
look at what you can do, and
how easy it is or otherwise.

7
00:00:27.887 --> 00:00:32.648
So I wanna start with the kind of
information architecture stage when you're

8
00:00:32.648 --> 00:00:35.067
doing initial planning.

9
00:00:35.067 --> 00:00:40.353
And this feels slightly different
depending on whether you're building apps,

10
00:00:40.353 --> 00:00:45.716
so whether you're building websites, but
in both cases there is opportunity for

11
00:00:45.716 --> 00:00:49.080
testing maybe it works
out slightly differently.

12
00:00:50.230 --> 00:00:55.106
And not just testing, but
also kind of defining the information

13
00:00:55.106 --> 00:00:59.891
architecture using the user,
rather than some internal ideas

14
00:00:59.891 --> 00:01:06.105
somebody comes up with which is often
a problem with this kinda thing.

15
00:01:06.105 --> 00:01:11.293
So I kind of use it quite a testing user
centric heavy approach to information

16
00:01:11.293 --> 00:01:16.641
architecture and you might not be able
to do all of the things I'm suggesting,

17
00:01:16.641 --> 00:01:20.289
but it's certainly something
worth considering and

18
00:01:20.289 --> 00:01:24.467
it's certainly something
worth trying to sell in.

19
00:01:24.467 --> 00:01:28.727
I mean, the obvious benefit of doing
a user centric approach to information

20
00:01:28.727 --> 00:01:30.847
architecture is find ability.

21
00:01:30.847 --> 00:01:35.219
You know, it's gonna be easier for
find people to find functionality,

22
00:01:35.219 --> 00:01:40.091
it's easier that for them to find content,
if it's organized in a way that Makes

23
00:01:40.091 --> 00:01:43.203
sense to them and
around their mental model.

24
00:01:43.203 --> 00:01:47.596
But it's not the only reason to go
about a more user-centric approach to

25
00:01:47.596 --> 00:01:51.853
information architecture,
you're gonna find a lot less pushback.

26
00:01:53.643 --> 00:01:56.668
When you suggest
an information architecture or

27
00:01:56.668 --> 00:02:01.610
propose organizing things in a particular
way within your app or your website,

28
00:02:01.610 --> 00:02:05.814
you will get pushback because not
everybody will think and organize

29
00:02:05.814 --> 00:02:11.121
information in the same way as you do, and
so if you've got a data-driven approach,

30
00:02:11.121 --> 00:02:16.574
it's gonna be much harder to criticize and
things are gonna go much smoother.

31
00:02:16.574 --> 00:02:21.297
But probably the biggest reason
is to reduce the amount of debate

32
00:02:21.297 --> 00:02:23.659
especially with websites, and

33
00:02:23.659 --> 00:02:30.026
especially with larger clients where
you've got multiple departments.

34
00:02:30.026 --> 00:02:34.736
Everybody has got their agenda
they want to push via the website.

35
00:02:34.736 --> 00:02:39.155
And often the website becomes
a battleground for internal politics and

36
00:02:39.155 --> 00:02:42.764
disagreements about how things
should be organized, and

37
00:02:42.764 --> 00:02:47.147
who should get the highest profile,
and all the rest of it.

38
00:02:47.147 --> 00:02:51.989
So actually having a user-centric
data-driven approach to information

39
00:02:51.989 --> 00:02:55.902
architecture will save a lot of time,
a lot of pushback, and

40
00:02:55.902 --> 00:03:00.055
improve the overall quality that
you produce at the end of it.

41
00:03:00.055 --> 00:03:03.435
But as I said,
you can do what you can out of this.

42
00:03:03.435 --> 00:03:08.772
And I'm gonna introduce you to basically
three kind of elements to this,

43
00:03:08.772 --> 00:03:13.005
which you can do independently or
you can do all together.

44
00:03:13.005 --> 00:03:18.065
And that is top tasks,
card sorting and tree testing.

45
00:03:18.065 --> 00:03:20.487
Those are the things we're gonna look at,
and

46
00:03:20.487 --> 00:03:23.464
we're gonna start by looking at top tasks.

47
00:03:23.464 --> 00:03:29.704
So the very first thing you should do,
whether you are building an app or

48
00:03:29.704 --> 00:03:35.840
a website is understand all of the things
that a user is gonna wanna do or

49
00:03:35.840 --> 00:03:41.040
know on the website, and
then try to Identify from that very

50
00:03:41.040 --> 00:03:46.136
large list cause it could
potentially be very large list,

51
00:03:46.136 --> 00:03:52.181
identify the top tasks,
the things that users most want to do.

52
00:03:52.181 --> 00:03:56.637
Because what you'll typically
find is that essentially

53
00:03:56.637 --> 00:04:01.368
80% of your users are,
only interested in about 20% or

54
00:04:01.368 --> 00:04:08.003
primarily interested in 20% of your
content or your features, right.

55
00:04:08.003 --> 00:04:13.955
So you have a very long tail of things
that a few people will find very useful,

56
00:04:13.955 --> 00:04:16.001
but not the majority, and

57
00:04:16.001 --> 00:04:21.989
then you'll have a small number of
tasks that people find very useful.

58
00:04:21.989 --> 00:04:25.502
So obviously we need to build
around the most important tasks,

59
00:04:25.502 --> 00:04:28.099
the things that matter most to people,
okay.

60
00:04:29.099 --> 00:04:33.544
And it helps to create this kind of
hierarchy of tasks that users wanna

61
00:04:33.544 --> 00:04:34.649
complete.

62
00:04:34.649 --> 00:04:39.591
And I use that word task, and I'm gonna
use it a lot and it does apply to a task

63
00:04:39.591 --> 00:04:44.616
like, completing a form, or taking
some interaction, but it also applies

64
00:04:44.616 --> 00:04:50.370
to answering a question, right, so
it applies to content and features.

65
00:04:50.370 --> 00:04:55.764
So how do we identify the top tasks that
users want to complete in your app or

66
00:04:55.764 --> 00:04:57.400
your website?

67
00:04:57.400 --> 00:05:01.872
Well, there is a process
called top task analysis.

68
00:05:01.872 --> 00:05:07.146
And top task analysis is a process
created by German government

69
00:05:07.146 --> 00:05:13.813
that is very well established and enables
you through a user centric approach,

70
00:05:13.813 --> 00:05:18.987
to work out the most critical
tasks users want to on a website,

71
00:05:18.987 --> 00:05:23.287
so that you can streamline
the design around that.

72
00:05:23.287 --> 00:05:29.825
However, top task analysis is a bit
of a pain in the arse to do, right?

73
00:05:29.825 --> 00:05:35.025
And this is supposed to be a course
about time when your budget's low and

74
00:05:35.025 --> 00:05:37.847
you haven't got a lot of time.

75
00:05:37.847 --> 00:05:40.601
So, when it comes to top task analysis,

76
00:05:40.601 --> 00:05:46.109
it's a little bit tricky because what
top task analysis traditionally consists

77
00:05:46.109 --> 00:05:51.980
of is gathering through user research
a great big long list of potential tasks.

78
00:05:51.980 --> 00:05:55.622
And you look in all kinds of places
to find this information, and

79
00:05:55.622 --> 00:06:00.016
you talk to lots of users and
you compile this massive list of tasks.

80
00:06:00.016 --> 00:06:04.311
And then you rationalize that list
into something more manageable, so

81
00:06:04.311 --> 00:06:06.896
that it's not completely overwhelming.

82
00:06:06.896 --> 00:06:11.535
And then after you've gone through all
of that process, you need to then get

83
00:06:11.535 --> 00:06:16.171
users to vote on which of those tasks
matter to you most, which means you need

84
00:06:16.171 --> 00:06:21.511
to go back to users again not just to gain
the initial list, but then to vote on it.

85
00:06:21.511 --> 00:06:24.001
And then you've got to analyze
all the results as well.

