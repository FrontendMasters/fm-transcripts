[00:00:00]
>> So far we focus very much on kind of underlying principles of lean UX we've talked a little bit about upfront user research. But there are there are certain opportunities throughout the project where you can insert a bit of user research and testing, and so I wanna for the remainder of the workshop kind of explore some of those opportunities and look at what you can do, and how easy it is or otherwise.

[00:00:27]
So I wanna start with the kind of information architecture stage when you're doing initial planning. And this feels slightly different depending on whether you're building apps, so whether you're building websites, but in both cases there is opportunity for testing maybe it works out slightly differently. And not just testing, but also kind of defining the information architecture using the user, rather than some internal ideas somebody comes up with which is often a problem with this kinda thing.

[00:01:06]
So I kind of use it quite a testing user centric heavy approach to information architecture and you might not be able to do all of the things I'm suggesting, but it's certainly something worth considering and it's certainly something worth trying to sell in. I mean, the obvious benefit of doing a user centric approach to information architecture is find ability.

[00:01:30]
You know, it's gonna be easier for find people to find functionality, it's easier that for them to find content, if it's organized in a way that Makes sense to them and around their mental model. But it's not the only reason to go about a more user-centric approach to information architecture, you're gonna find a lot less pushback.

[00:01:53]
When you suggest an information architecture or propose organizing things in a particular way within your app or your website, you will get pushback because not everybody will think and organize information in the same way as you do, and so if you've got a data-driven approach, it's gonna be much harder to criticize and things are gonna go much smoother.

[00:02:16]
But probably the biggest reason is to reduce the amount of debate especially with websites, and especially with larger clients where you've got multiple departments. Everybody has got their agenda they want to push via the website. And often the website becomes a battleground for internal politics and disagreements about how things should be organized, and who should get the highest profile, and all the rest of it.

[00:02:47]
So actually having a user-centric data-driven approach to information architecture will save a lot of time, a lot of pushback, and improve the overall quality that you produce at the end of it. But as I said, you can do what you can out of this. And I'm gonna introduce you to basically three kind of elements to this, which you can do independently or you can do all together.

[00:03:13]
And that is top tasks, card sorting and tree testing. Those are the things we're gonna look at, and we're gonna start by looking at top tasks. So the very first thing you should do, whether you are building an app or a website is understand all of the things that a user is gonna wanna do or know on the website, and then try to Identify from that very large list cause it could potentially be very large list, identify the top tasks, the things that users most want to do.

[00:03:52]
Because what you'll typically find is that essentially 80% of your users are, only interested in about 20% or primarily interested in 20% of your content or your features, right. So you have a very long tail of things that a few people will find very useful, but not the majority, and then you'll have a small number of tasks that people find very useful.

[00:04:21]
So obviously we need to build around the most important tasks, the things that matter most to people, okay. And it helps to create this kind of hierarchy of tasks that users wanna complete. And I use that word task, and I'm gonna use it a lot and it does apply to a task like, completing a form, or taking some interaction, but it also applies to answering a question, right, so it applies to content and features.

[00:04:50]
So how do we identify the top tasks that users want to complete in your app or your website? Well, there is a process called top task analysis. And top task analysis is a process created by German government that is very well established and enables you through a user centric approach, to work out the most critical tasks users want to on a website, so that you can streamline the design around that.

[00:05:23]
However, top task analysis is a bit of a pain in the arse to do, right? And this is supposed to be a course about time when your budget's low and you haven't got a lot of time. So, when it comes to top task analysis, it's a little bit tricky because what top task analysis traditionally consists of is gathering through user research a great big long list of potential tasks.

[00:05:51]
And you look in all kinds of places to find this information, and you talk to lots of users and you compile this massive list of tasks. And then you rationalize that list into something more manageable, so that it's not completely overwhelming. And then after you've gone through all of that process, you need to then get users to vote on which of those tasks matter to you most, which means you need to go back to users again not just to gain the initial list, but then to vote on it.

[00:06:21]
And then you've got to analyze all the results as well.

