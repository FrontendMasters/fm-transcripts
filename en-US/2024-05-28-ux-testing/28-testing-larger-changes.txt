[00:00:00]
>> So these days it's a little bit more complicated to do AB testing. There are tools out there, but they seem to be really expensive, in my opinion, for what they wanna do. Convert is a good one, but it's like $300 plus a month, which seems like a stacked load of money to me.

[00:00:16]
Crazy Egg is a much cheaper alternative. But Crazy Egg is a little bit more limited in what you can do, but for basic stuff to get you going, it's a good start. There are also things like Visual Website Optimizer, which again, is crazily expensive, but it's got free tier.

[00:00:33]
So you could try out for a bit and prove to people that AB testing is worth doing, right? And what's great about these tools is they make it so incredibly easy to make changes. So you basically, it gives you a WYSIWYG, right? Just you simply click on the thing that you wanna edit and change it, like that, couldn't be easier.

[00:00:57]
So that's my live website and I click on the title and I can put different title in, right? So, no technical skill required other than putting the JavaScript in, to begin with, but then that's it. If you wanna be a bit more ambitious, maybe you wanna change quite a lot on a page then you could do a redirect things.

[00:01:20]
So basically, you say, the majority of people are gonna see the original version of the page, but we've got an alternative version that we can send a percentage of people off to if we want to. I tend to think once you get into that kind of realm where you're making larger changes, I think there are better ways of doing it if I'm honest.

[00:01:39]
So for example, you might look at the problem that you're having with the site and you might go, well, okay, people are dropping out at this page, but actually it's this whole flow or this wizard or this interactive thing that is not quite working right. We can't just change a bit of text and an image and it'll fix it, is gonna be more complicated than that.

[00:02:03]
Now the problem is you could do that with AB testing, but you have to build the whole thing in order for it to AB test and it might perform badly. So that's a lot of effort and a lot of, for something that might not work. So in all those kinds of situations where it's more complicated and there's a lot of interactivity to build.

[00:02:23]
I tend to go back to prototyping in this situation, right. So basically, if you're changing multiple screens, which is more than you would change on a single AB test, then you probably wanna be prototyping. If there's a lot of complicated interactions like say an interactive map or something along those lines, then you probably wanna prototype instead.

[00:02:47]
And if it's gonna be costly to build the version that you gonna test, then prototype it instead rather than jump into the build straightaway. And then you can just test it with usability testing, just like we did with the prototype before, right? So you could do facilitated or unfacilitated remote or in-person.

[00:03:07]
And you can consider that ongoing testing, I was talking about one morning every month, and you just carry on like that. Basically, it's a rinse and repeat process where you roll out one change and great, that change is working. Right, let's go back to our list of, poor-performing pages.

[00:03:27]
Pick the next one off the top of the list and carry on and do that one and improve that one and then back again and round and round and round. And in the end, you'll end up with a page that you'd already updated once is now the poor-performing page.

[00:03:41]
And well, let's see if we can make even better one so on and so on. In most cases, it never gets that far because you have resource constraints and that kind of thing.

