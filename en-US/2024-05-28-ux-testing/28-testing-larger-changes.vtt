WEBVTT

1
00:00:00.681 --> 00:00:03.513
So these days it's a little bit
more complicated to do AB testing.

2
00:00:03.513 --> 00:00:08.018
There are tools out there, but they seem
to be really expensive, in my opinion, for

3
00:00:08.018 --> 00:00:09.106
what they wanna do.

4
00:00:09.106 --> 00:00:13.041
Convert is a good one, but
it's like $300 plus a month,

5
00:00:13.041 --> 00:00:16.061
which seems like a stacked
load of money to me.

6
00:00:16.061 --> 00:00:20.495
Crazy Egg is a much cheaper alternative.

7
00:00:20.495 --> 00:00:24.557
But Crazy Egg is a little bit more
limited in what you can do, but

8
00:00:24.557 --> 00:00:28.019
for basic stuff to get you going,
it's a good start.

9
00:00:28.019 --> 00:00:31.487
There are also things like
Visual Website Optimizer, which again,

10
00:00:31.487 --> 00:00:33.951
is crazily expensive,
but it's got free tier.

11
00:00:33.951 --> 00:00:36.187
So you could try out for a bit and

12
00:00:36.187 --> 00:00:40.235
prove to people that AB
testing is worth doing, right?

13
00:00:40.235 --> 00:00:43.114
And what's great about these
tools is they make it so

14
00:00:43.114 --> 00:00:45.019
incredibly easy to make changes.

15
00:00:45.019 --> 00:00:48.055
So you basically,
it gives you a WYSIWYG, right?

16
00:00:48.055 --> 00:00:53.084
Just you simply click on
the thing that you wanna edit and

17
00:00:53.084 --> 00:00:57.267
change it, like that, couldn't be easier.

18
00:00:57.267 --> 00:01:00.755
So that's my live website and
I click on the title and

19
00:01:00.755 --> 00:01:03.302
I can put different title in, right?

20
00:01:03.302 --> 00:01:09.158
So, no technical skill required other
than putting the JavaScript in,

21
00:01:09.158 --> 00:01:12.136
to begin with, but then that's it.

22
00:01:12.136 --> 00:01:14.864
If you wanna be a bit more ambitious,

23
00:01:14.864 --> 00:01:20.679
maybe you wanna change quite a lot on a
page then you could do a redirect things.

24
00:01:20.679 --> 00:01:25.263
So basically, you say, the majority of
people are gonna see the original version

25
00:01:25.263 --> 00:01:29.849
of the page, but we've got an alternative
version that we can send a percentage of

26
00:01:29.849 --> 00:01:31.394
people off to if we want to.

27
00:01:31.394 --> 00:01:35.656
I tend to think once you get into that
kind of realm where you're making larger

28
00:01:35.656 --> 00:01:39.344
changes, I think there are better
ways of doing it if I'm honest.

29
00:01:39.344 --> 00:01:43.964
So for example, you might look at
the problem that you're having

30
00:01:43.964 --> 00:01:47.156
with the site and
you might go, well, okay,

31
00:01:47.156 --> 00:01:52.448
people are dropping out at this page,
but actually it's this whole flow or

32
00:01:52.448 --> 00:01:57.492
this wizard or this interactive thing
that is not quite working right.

33
00:01:57.492 --> 00:02:01.040
We can't just change a bit of text and
an image and it'll fix it,

34
00:02:01.040 --> 00:02:03.297
is gonna be more complicated than that.

35
00:02:03.297 --> 00:02:07.625
Now the problem is you could do that
with AB testing, but you have to

36
00:02:07.625 --> 00:02:12.435
build the whole thing in order for
it to AB test and it might perform badly.

37
00:02:12.435 --> 00:02:17.220
So that's a lot of effort and a lot of,
for something that might not work.

38
00:02:17.220 --> 00:02:21.138
So in all those kinds of situations
where it's more complicated and

39
00:02:21.138 --> 00:02:23.619
there's a lot of interactivity to build.

40
00:02:23.619 --> 00:02:27.261
I tend to go back to prototyping
in this situation, right.

41
00:02:27.261 --> 00:02:31.922
So basically, if you're changing
multiple screens, which is more than you

42
00:02:31.922 --> 00:02:36.452
would change on a single AB test,
then you probably wanna be prototyping.

43
00:02:36.452 --> 00:02:41.620
If there's a lot of complicated
interactions like say an interactive map

44
00:02:41.620 --> 00:02:47.137
or something along those lines,
then you probably wanna prototype instead.

45
00:02:47.137 --> 00:02:52.052
And if it's gonna be costly to build
the version that you gonna test,

46
00:02:52.052 --> 00:02:57.323
then prototype it instead rather than
jump into the build straightaway.

47
00:02:57.323 --> 00:02:59.844
And then you can just test
it with usability testing,

48
00:02:59.844 --> 00:03:02.319
just like we did with
the prototype before, right?

49
00:03:02.319 --> 00:03:07.188
So you could do facilitated or
unfacilitated remote or in-person.

50
00:03:07.188 --> 00:03:10.124
And you can consider that ongoing testing,

51
00:03:10.124 --> 00:03:15.295
I was talking about one morning every
month, and you just carry on like that.

52
00:03:15.295 --> 00:03:20.592
Basically, it's a rinse and repeat
process where you roll out one change and

53
00:03:20.592 --> 00:03:22.888
great, that change is working.

54
00:03:22.888 --> 00:03:27.258
Right, let's go back to our list of,
poor-performing pages.

55
00:03:27.258 --> 00:03:30.435
Pick the next one off the top
of the list and carry on and

56
00:03:30.435 --> 00:03:35.248
do that one and improve that one and then
back again and round and round and round.

57
00:03:35.248 --> 00:03:39.472
And in the end, you'll end up with a page
that you'd already updated once is

58
00:03:39.472 --> 00:03:41.330
now the poor-performing page.

59
00:03:41.330 --> 00:03:45.753
And well, let's see if we can make
even better one so on and so on.

60
00:03:45.753 --> 00:03:50.214
In most cases, it never gets that far
because you have resource constraints and

61
00:03:50.214 --> 00:03:51.353
that kind of thing.

