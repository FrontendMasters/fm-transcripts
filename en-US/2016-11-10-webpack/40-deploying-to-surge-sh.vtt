WEBVTT

1
00:00:00.000 --> 00:00:03.743
[MUSIC]

2
00:00:03.743 --> 00:00:07.996
&gt;&gt; Kent C Dodds: We're going
to deploy to Surge.sh.

3
00:00:07.996 --> 00:00:13.437
The words that I have on the screen
are the words are about to read to you,

4
00:00:13.437 --> 00:00:15.540
so I think you can read.

5
00:00:15.540 --> 00:00:21.214
So what we're gonna do is you have a bin
that is installed in your bin directory

6
00:00:21.214 --> 00:00:27.350
and you're going to use it to generate
a token, so you'll create a Surge account.

7
00:00:27.350 --> 00:00:31.482
They will not steal your identity or
anything but

8
00:00:31.482 --> 00:00:36.722
create a Surge account and
then we're going to create a script

9
00:00:36.722 --> 00:00:42.180
called deploy that we'll use to
deploy your app to your own URL.

10
00:00:43.590 --> 00:00:48.940
So if you want to deploy the app,
then you can follow along.

11
00:00:50.200 --> 00:00:53.122
Yeah, let me actually just pull up this,
so I make sure I don't miss anything.

12
00:00:59.488 --> 00:01:03.570
&gt;&gt; Kent C Dodds: Okay, so here we go.

13
00:01:05.270 --> 00:01:08.657
We'll go to our package.json and

14
00:01:08.657 --> 00:01:13.562
somewhere in here you would
install this surge and

15
00:01:13.562 --> 00:01:18.942
it is 0.18.0.
&gt;&gt; Kent C Dodds: Then I'll just

16
00:01:18.942 --> 00:01:24.704
go ahead and add the scripts here
that we're gonna need, predeploy,

17
00:01:24.704 --> 00:01:29.892
or actually we'll have just a deploy,
yeah, deploy script.

18
00:01:29.892 --> 00:01:34.509
The reason that we're doing this
script as a separate file is because I

19
00:01:34.509 --> 00:01:39.048
don't want you to have to expose your
token and stuff to everybody and

20
00:01:39.048 --> 00:01:41.019
I didn't wanna expose mine.

21
00:01:41.019 --> 00:01:45.068
So you're simply gonna
run scripts/deploy and

22
00:01:45.068 --> 00:01:49.915
that's the scripts that
you're gonna create yourself.

23
00:01:49.915 --> 00:01:56.248
But before we deploy, we'll say predeploy.
&gt;&gt; Kent C Dodds: We're

24
00:01:56.248 --> 00:02:00.978
gonna npm run build, so then all
you need to do when you deploy this

25
00:02:00.978 --> 00:02:05.450
to Surge is run npm run deploy and
it will run the build for you.

26
00:02:07.890 --> 00:02:11.400
In all of your scripting magic, you
probably wanna run the validate script as

27
00:02:11.400 --> 00:02:13.530
well, make sure you're not
pushing something that's broken.

28
00:02:15.390 --> 00:02:19.740
But now, let's go ahead and
make that deploy script.

29
00:02:19.740 --> 00:02:27.426
So a new file called deploy,
&gt;&gt; Kent C Dodds: Oops,

30
00:02:27.426 --> 00:02:30.660
sorry, excuse me, not called deploy,

31
00:02:30.660 --> 00:02:35.017
it's called scripts/deploy.
&gt;&gt; [SOUND]

32
00:02:37.859 --> 00:02:39.709
&gt;&gt; Kent C Dodds: Scripts/deploy and

33
00:02:39.709 --> 00:02:45.778
in here you're going to have a couple
of things you can actually copy.

34
00:02:45.778 --> 00:02:50.802
So if you're on my sites
you can copy this,

35
00:02:50.802 --> 00:02:53.462
so it's Linux or Mac.

36
00:02:53.462 --> 00:02:58.959
You use this with Windows,
I'm pretty sure this will work but

37
00:02:58.959 --> 00:03:01.397
the basic idea is the same.

38
00:03:01.397 --> 00:03:06.327
You create a variable with your login and

39
00:03:06.327 --> 00:03:12.569
your token and
then you are using the Surge binary.

40
00:03:12.569 --> 00:03:15.303
Specify that the project
lives in the dist directory,

41
00:03:15.303 --> 00:03:18.080
which is what we're gonna be sending up.

42
00:03:18.080 --> 00:03:20.910
Yeah, sorry, there was one other
thing I forgot to mention about that

43
00:03:20.910 --> 00:03:22.610
offline plugin that's super cool.

44
00:03:22.610 --> 00:03:25.949
So we were talking about support for
service worker.

45
00:03:25.949 --> 00:03:28.610
Who here has heard of AppCache?

46
00:03:28.610 --> 00:03:31.650
Yeah, cuz it's kind of adead technology,
but

47
00:03:31.650 --> 00:03:35.750
it actually works in I am pretty
sure almost all browsers.

48
00:03:35.750 --> 00:03:39.439
This is like the precursor to
service workers, so offline apps,

49
00:03:39.439 --> 00:03:40.800
it totally works.

50
00:03:40.800 --> 00:03:45.660
It's just a pain in the rear to use and
you can actually shoot yourself in

51
00:03:45.660 --> 00:03:50.790
the foot and make it so users can never,
ever update your app, so beware.

52
00:03:50.790 --> 00:03:54.190
But somebody has done it for you and
I'm pretty sure it's well tested.

53
00:03:54.190 --> 00:03:58.680
So service worker, you can turn this off
but it has AppCache capability and so

54
00:03:58.680 --> 00:04:01.450
if you're on an older browser
then you can use AppCache.

55
00:04:01.450 --> 00:04:04.120
Or if you're not serving on HTTPS,

56
00:04:04.120 --> 00:04:08.756
it'll fall back to AppCache,
which is kind of fancy.

57
00:04:08.756 --> 00:04:13.930
Yeah, so again,
we're surveying it from where

58
00:04:13.930 --> 00:04:19.300
our project lives in the disk directory
and then we specify the domain.

59
00:04:19.300 --> 00:04:25.583
So you can have it be whatever you want
it to be I did todonvc-KentCDodds and

60
00:04:25.583 --> 00:04:30.393
then .surge.sh, and
those are free, those domains.

61
00:04:33.537 --> 00:04:35.613
&gt;&gt; [SOUND]

62
00:04:38.429 --> 00:04:40.646
&gt;&gt; Kent C Dodds: And again, sorry,

63
00:04:40.646 --> 00:04:45.732
I should say to get your token and
your login and

64
00:04:45.732 --> 00:04:50.830
stuff, go node modules.bin/surge token.

65
00:04:52.210 --> 00:04:54.920
And that will give you a prompt
to enter an email address and

66
00:04:54.920 --> 00:04:56.430
give you back your token.

67
00:04:56.430 --> 00:05:01.587
And then the email address that you
gave Surge is the one you use here and

68
00:05:01.587 --> 00:05:03.169
then the token here.

69
00:05:03.169 --> 00:05:09.412
And then you should be able to just run
npm run deploy and magic will ensue.

70
00:05:09.412 --> 00:05:10.820
I'm not gonna demo it for you.

71
00:05:10.820 --> 00:05:15.460
Well, the heck with it,
you can steal my token, I don't care.

72
00:05:15.460 --> 00:05:20.545
So here I'm gonna run node_module.

73
00:05:20.545 --> 00:05:24.975
Here, I'll go back to
that deploy script for

74
00:05:24.975 --> 00:05:28.947
you, modules/.bin/surge whoami.

75
00:05:28.947 --> 00:05:31.460
I'm not authenticated,
cool, so I'll say token.

76
00:05:32.850 --> 00:05:40.046
Get my email kent+fen-woot@doddsfamily.

77
00:05:41.838 --> 00:05:46.525
&gt;&gt; Kent C Dodds: That's why I don't
care if you steal my token cuz I'm gonna

78
00:05:46.525 --> 00:05:50.501
delete that account later anyway.
&gt;&gt; Kent C Dodds: And

79
00:05:50.501 --> 00:05:53.680
there's my token, still quick.

80
00:05:53.680 --> 00:05:59.642
I'm gonna stick this in my token and

81
00:05:59.642 --> 00:06:03.815
stick this in my login and

82
00:06:03.815 --> 00:06:09.941
stick this as kentcdodds-woot.

83
00:06:09.941 --> 00:06:14.220
Oops, well, yeah,
this should work, npm run deploy.

84
00:06:14.220 --> 00:06:15.850
Go run my build, and

85
00:06:15.850 --> 00:06:20.240
we have that fun equals thing
that bounces all over the place.

86
00:06:20.240 --> 00:06:25.357
Actually, right here what it's doing
is it's applying all the plugins,

87
00:06:25.357 --> 00:06:28.130
so this is where echo find is happening.

88
00:06:28.130 --> 00:06:30.168
Yeah, and permission denied.

89
00:06:30.168 --> 00:06:37.373
Yeah, so I'm not sure how to do this
on Windows, but on Mac it's chmod -x.

90
00:06:37.373 --> 00:06:43.048
This makes it so
I have the ability to run that script.

91
00:06:43.048 --> 00:06:45.234
&gt;&gt; Speaker 2: I would do +x.

92
00:06:45.234 --> 00:06:46.321
&gt;&gt; Kent C Dodds: Thank you,

93
00:06:46.321 --> 00:06:48.430
thank you.
&gt;&gt; Speaker 2: In Windows,

94
00:06:48.430 --> 00:06:51.130
everything is executable.
&gt;&gt; Kent C Dodds: Okay, so

95
00:06:51.130 --> 00:06:53.190
you don't need to worry about it.

96
00:06:53.190 --> 00:06:57.003
Execute the world, wow,
that sounds actually really morbid.

97
00:06:57.003 --> 00:06:58.823
&gt;&gt; Speaker 2: [CROSSTALK] [LAUGH]

98
00:06:58.823 --> 00:07:00.523
&gt;&gt; Kent C Dodds: I didn't mean it the way

99
00:07:00.523 --> 00:07:01.461
it sounded.

100
00:07:01.461 --> 00:07:05.333
But cool, so
now it's uploading all of our stuff and

101
00:07:05.333 --> 00:07:08.270
it's running, so I can copy this URL.

102
00:07:08.270 --> 00:07:13.975
Yeah, you all can go to that URL right
now and boom, you have the todos app.

103
00:07:13.975 --> 00:07:18.430
Hey there and you can pop open this stuff.

104
00:07:18.430 --> 00:07:25.550
Pop open your Network tab and take a look
at what things look like in there.

105
00:07:25.550 --> 00:07:30.260
You'll see a couple of these
once you refresh the app,

106
00:07:30.260 --> 00:07:32.500
it'll say from service worker.

107
00:07:32.500 --> 00:07:35.615
Actually, shoot,
I should have done this before.

108
00:07:35.615 --> 00:07:40.410
I'll open an Incognito tab and before I
navigate there I'll open up my dev tools.

109
00:07:41.970 --> 00:07:47.995
And here I'm gonna see a couple things or
I'm loading my styles and

110
00:07:47.995 --> 00:07:52.310
my bundles and
those all are loading normally.

111
00:07:52.310 --> 00:07:56.980
And then the service worker is loading
those into the service worker cache.

112
00:07:56.980 --> 00:08:00.780
This is the really awesome thing about
this plugin that I found out about, and

113
00:08:00.780 --> 00:08:02.210
I'm like this is so cool.

114
00:08:03.720 --> 00:08:08.140
So if I go down here, let's go ahead and
I'll clear this out, and

115
00:08:08.140 --> 00:08:09.235
then I click on this guy.

116
00:08:09.235 --> 00:08:12.570
It actually is loading
from the ServiceWorker.

117
00:08:12.570 --> 00:08:16.923
I have never loaded this,
I've never opened up this graph before but

118
00:08:16.923 --> 00:08:20.090
it prefetchs all of my assets for me.

119
00:08:20.090 --> 00:08:24.250
So all the code split stuff, all
the different chunks, all of the assets,

120
00:08:24.250 --> 00:08:27.690
are loaded in the background while
I'm interacting with the app.

121
00:08:27.690 --> 00:08:30.670
So, in other words, I go to the app,

122
00:08:30.670 --> 00:08:33.700
it gives me just the bare minimum
of the stuff that I need.

123
00:08:33.700 --> 00:08:37.680
And then while I'm doing other
cool things with it as a user,

124
00:08:37.680 --> 00:08:42.180
it's in the background loading all of the
other assets I'll need as I use the app,

125
00:08:42.180 --> 00:08:44.291
so it's the best of all the worlds.

126
00:08:44.291 --> 00:08:49.114
Yeah, and that's one of the reasons
why I say I probably wouldn't use

127
00:08:49.114 --> 00:08:53.528
an app without or I probably can't
think of many use cases where I

128
00:08:53.528 --> 00:08:58.262
wouldn't use this.
&gt;&gt; Kent C Dodds: Yeah, so

129
00:08:58.262 --> 00:09:02.038
anybody else have this up and
running anywhere?

130
00:09:02.038 --> 00:09:08.059
Sweet, awesome.
&gt;&gt; Kent C Dodds: Got a couple.

131
00:09:08.059 --> 00:09:09.850
Anybody need help getting it running?

132
00:09:09.850 --> 00:09:11.746
Anybody want to have?
&gt;&gt; Speaker 3: What did you type into

133
00:09:11.746 --> 00:09:14.505
the command line again when
you got permission denied?

134
00:09:14.505 --> 00:09:16.637
&gt;&gt; Kent C Dodds: It is chmod +x

135
00:09:16.637 --> 00:09:19.666
scripts/deploy.

