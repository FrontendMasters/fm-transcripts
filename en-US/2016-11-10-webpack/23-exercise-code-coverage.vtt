WEBVTT

1
00:00:00.000 --> 00:00:03.831
[MUSIC]

2
00:00:03.831 --> 00:00:06.895
&gt;&gt; Kent C Dodds: I've spent a lot of time
working on getting this stuff working, and

3
00:00:06.895 --> 00:00:10.120
now we finally have a really,
really great solution.

4
00:00:10.120 --> 00:00:15.670
Which I'm going to show you and
then let you wrestle with it a little bit.

5
00:00:15.670 --> 00:00:21.610
So the first important part
is this plugin with babel.

6
00:00:21.610 --> 00:00:25.030
So one of my favorite parts about
babel is the fact that it's pluggable.

7
00:00:25.030 --> 00:00:29.220
And I'm pretty sure a typescript
to it also is pluggable, I think.

8
00:00:29.220 --> 00:00:32.490
And so that was one of the last
things about typescript for

9
00:00:32.490 --> 00:00:35.750
me that I wanted was,
I needed it to be pluggable.

10
00:00:35.750 --> 00:00:40.157
But what this babel plugin does,
actually I should stop and just ask,

11
00:00:40.157 --> 00:00:42.933
how many people are familiar and
use babel?

12
00:00:42.933 --> 00:00:47.695
Okay, so it's transpiling our
es6 with these other presets and

13
00:00:47.695 --> 00:00:52.380
stuff, all the presets are doing
are loading in plugins for us.

14
00:00:52.380 --> 00:00:57.536
And so this es2015 preset
has a big list of plugins

15
00:00:57.536 --> 00:01:04.308
that consists of all of the various
features of es6, or es2015.

16
00:01:04.308 --> 00:01:07.223
And so then those plugins will say okay,

17
00:01:07.223 --> 00:01:10.710
I found this part of
the code that is a class.

18
00:01:10.710 --> 00:01:15.809
I'm going to transpile it down to
prototypes and whatever needs to

19
00:01:15.809 --> 00:01:21.388
happen to make that work in es20 or
es5, so various things like that.

20
00:01:21.388 --> 00:01:27.294
And so, you're not limited to
just ECMA script features though,

21
00:01:27.294 --> 00:01:30.356
you can do anything with the code.

22
00:01:30.356 --> 00:01:34.703
That was a big change with babel 6 that
everybody was both excited about and

23
00:01:34.703 --> 00:01:39.510
hated, was that now babel is just this
platform of pluggable awesomeness.

24
00:01:39.510 --> 00:01:42.790
But it enabled stuff like coverage.

25
00:01:42.790 --> 00:01:46.400
So what this babel plugin does is it
just adds those coverage lines all

26
00:01:46.400 --> 00:01:47.610
over the code.

27
00:01:47.610 --> 00:01:51.090
And it adds it to
the variable that just so

28
00:01:51.090 --> 00:01:54.836
happens to be cut like a pseudo
standard for coverage.

29
00:01:54.836 --> 00:01:58.150
So the karma-coverage plugin
can take that variable,

30
00:01:58.150 --> 00:02:00.850
when all the tests have been run,
it says okay, give me that variable, and

31
00:02:00.850 --> 00:02:02.489
I'm gonna use that to generate the report.

32
00:02:04.320 --> 00:02:05.450
I'm seeing some head nods.

33
00:02:05.450 --> 00:02:07.914
Does anybody have questions
about what's going on?

34
00:02:07.914 --> 00:02:12.700
Okay, sweet, so it's basically doing just
what I was doing with that underscore

35
00:02:12.700 --> 00:02:17.970
underscore coverage mess,
but it's doing it in

36
00:02:17.970 --> 00:02:20.830
a generated fashion, so we don't have
to do it ourselves, which is great.

37
00:02:20.830 --> 00:02:25.280
And that's actually the more common
tool for code coverage, before,

38
00:02:25.280 --> 00:02:27.480
it was a tool called Istanbul.

39
00:02:27.480 --> 00:02:30.420
And it didn't work with es6, and so

40
00:02:30.420 --> 00:02:33.960
they were like Esparta was
really popular for a long time.

41
00:02:33.960 --> 00:02:35.930
And then that is no longer maintained, and

42
00:02:35.930 --> 00:02:38.410
now underscore underscore
coverage is great.

43
00:02:38.410 --> 00:02:42.710
If you're doing stuff in Node,
you should look into a package called NYC.

44
00:02:43.750 --> 00:02:48.230
It is now kind of been
merged with Istanbul, and

45
00:02:48.230 --> 00:02:52.050
it supports es6 with a babel plugin,
a different one, and it's great.

46
00:02:52.050 --> 00:02:53.370
And if you wanna learn more about that,

47
00:02:53.370 --> 00:02:57.880
I'm gonna talk about it tomorrow at my
open source workshop, so fun stuff.

48
00:02:57.880 --> 00:03:00.831
Okay, great,
then once you have these things installed,

49
00:03:00.831 --> 00:03:02.493
they both need to be configured.

50
00:03:02.493 --> 00:03:05.550
And configuration is the name
of the game with all this stuff.

51
00:03:05.550 --> 00:03:07.480
It's our favorite part of everything,
right?

52
00:03:07.480 --> 00:03:15.190
So the first thing in our babelrc,
we're doing this fancy thing right here.

53
00:03:15.190 --> 00:03:16.890
The most important piece of this here,

54
00:03:16.890 --> 00:03:22.740
actually I'm gonna go into our babelrc in
here, so I have a little bit more freedom.

55
00:03:24.290 --> 00:03:30.920
So if we wanted to add a plugin to this
babelrc, we would add a plugins array.

56
00:03:30.920 --> 00:03:35.060
And in here, it's just an array
of the names of the plugins, so

57
00:03:35.060 --> 00:03:40.990
coverage would be the name of that babel
plugin that we have in our package json.

58
00:03:40.990 --> 00:03:42.864
So it's babel-plugin-name.

59
00:03:44.030 --> 00:03:49.480
And so the problem that we
have with this specific

60
00:03:49.480 --> 00:03:53.590
scenario is, now we're instrumenting
our code for coverage,

61
00:03:53.590 --> 00:03:55.540
even when we ship it to production.

62
00:03:55.540 --> 00:03:59.780
Not a really good idea,
your app performance will be terrible.

63
00:04:01.440 --> 00:04:06.740
It should still work, everything will
still work, but it will be very slow.

64
00:04:06.740 --> 00:04:12.125
So what we're going to do instead is
we only want this particular plugin

65
00:04:12.125 --> 00:04:17.613
to be available in some type of
environment, that environment is test.

66
00:04:17.613 --> 00:04:22.834
And so babel has this ability to
specify a certain configuration

67
00:04:22.834 --> 00:04:28.646
when only something like specific
environment requirements are met.

68
00:04:28.646 --> 00:04:34.243
And you do that in the env property or
object.

69
00:04:34.243 --> 00:04:37.590
And as a property of that,
it's the value of the environment.

70
00:04:37.590 --> 00:04:41.870
So, in our case,
we're gonna just call it test arbitrarily.

71
00:04:41.870 --> 00:04:44.030
And that's where we put
the configuration for that test.

72
00:04:44.030 --> 00:04:48.534
And I'll show you here in a second
how to set up the environment to be

73
00:04:48.534 --> 00:04:49.586
equal to test.

74
00:04:49.586 --> 00:04:53.770
But that's the important part,
or the important piece of this,

75
00:04:53.770 --> 00:04:58.411
is that the environment, or you only
want this plugin set in a particular

76
00:04:58.411 --> 00:05:03.390
environment, and we're gonna arbitrarily
call that an environment test.

77
00:05:03.390 --> 00:05:07.980
Do I have any questions about that?

78
00:05:07.980 --> 00:05:09.720
Okay, anything from online or?

79
00:05:10.930 --> 00:05:16.640
Okay, so let's go ahead,

80
00:05:16.640 --> 00:05:21.820
and we'll set up our
environment to be test.

81
00:05:21.820 --> 00:05:25.500
And then we'll run our tests, and
we should see coverage from that.

82
00:05:26.780 --> 00:05:30.950
So if you want to follow along,
this would be a good place to start.

83
00:05:30.950 --> 00:05:35.020
And if you want to just watch and
consume, then that's great too.

84
00:05:35.020 --> 00:05:39.779
I will give you an opportunity
to actually start implementing

85
00:05:39.779 --> 00:05:43.907
this stuff once we get some
code coverage going here.

86
00:05:43.907 --> 00:05:48.876
So the other thing that we're gonna need,
well, let's see, I'll just show

87
00:05:48.876 --> 00:05:53.795
you how to set up the environment and then
you all can do the rest of this stuff.

88
00:05:53.795 --> 00:06:00.453
So there are two ways that you can trigger
babel to have a specific environment.

89
00:06:00.453 --> 00:06:04.117
Or to utilize a specific environment, and

90
00:06:04.117 --> 00:06:11.210
that is through the environment variable,
NODE_ENV or BABEL_ENV.

91
00:06:11.210 --> 00:06:14.760
So you set that just as
an environment variable, and

92
00:06:14.760 --> 00:06:20.750
if you're familiar on the command line,
we could say, NODE_ENV=test.

93
00:06:20.750 --> 00:06:22.843
This is Unix only, if you're on Windows,

94
00:06:22.843 --> 00:06:25.760
then you have to kind of do
things a little bit differently.

95
00:06:25.760 --> 00:06:30.806
But then we could say webpack, and
that would run our webpack config with

96
00:06:30.806 --> 00:06:35.790
the node environment as test and
then babel would instrument our code.

97
00:06:35.790 --> 00:06:37.040
Of course, we don't wanna do that.

98
00:06:37.040 --> 00:06:40.100
We only wanna do it for our tests.

99
00:06:40.100 --> 00:06:44.980
And the handy thing that we can do is
we could actually set it in JavaScript

100
00:06:44.980 --> 00:06:46.730
in our karma-config.

101
00:06:46.730 --> 00:06:49.992
So right here, we'll say process.env and

102
00:06:49.992 --> 00:06:54.412
we'll use BABEL_ENV, but
NODE_ENV would work as well.

103
00:06:54.412 --> 00:06:57.185
There are tradeoffs for
doing it one way or another, and

104
00:06:57.185 --> 00:07:01.370
I can answer some of these questions
if you wanna know what those would be.

105
00:07:01.370 --> 00:07:04.750
But we'll just say the BABEL_ENV is test.

106
00:07:04.750 --> 00:07:07.490
And that corresponds to
this env right there.

107
00:07:09.160 --> 00:07:13.823
So by doing that, then when babel kicks
in to transpile our code, it's gonna say

108
00:07:13.823 --> 00:07:18.662
okay, here are all the presets,
let me go load all of their plugins.

109
00:07:18.662 --> 00:07:23.145
The environment is test, so
I'm gonna take this test object and

110
00:07:23.145 --> 00:07:26.144
merge it with the default plugins as well.

111
00:07:26.144 --> 00:07:28.250
I'm seeing some nods.

112
00:07:28.250 --> 00:07:30.050
Any questions about that?

113
00:07:30.050 --> 00:07:36.132
Okay, so the rest of this stuff is
a little bit on the boiler platey side,

114
00:07:36.132 --> 00:07:38.736
so I will show you how to cheat.

115
00:07:38.736 --> 00:07:45.176
But what I want is for you to actually run
this yourself and see the output yourself,

116
00:07:45.176 --> 00:07:50.146
so you can go to, on my slides,
kcd.im/webpack-workshop,

117
00:07:50.146 --> 00:07:54.205
so if you're not on my slides,
that's where it is.

118
00:07:54.205 --> 00:08:00.830
And then go to the coverage exercise
slide, here actually, well yeah.

119
00:08:00.830 --> 00:08:05.550
I can copy this into the chat actually,
just really quick.

120
00:08:05.550 --> 00:08:07.610
So yeah, go to those slides.

121
00:08:07.610 --> 00:08:10.170
And then click on this
link to get the diff.

122
00:08:10.170 --> 00:08:13.806
And you can even just pop this
up in view and copy that.

123
00:08:13.806 --> 00:08:21.393
And I want you to actually run this and
get the coverage yourself though.

124
00:08:21.393 --> 00:08:27.490
Yeah, or you can just look at it and
type it out yourself.

125
00:08:27.490 --> 00:08:31.986
And while you're doing that, I'll explain
what the purpose of this stuff is.

126
00:08:31.986 --> 00:08:37.887
So first of all, we have these reporters,
so karma has this concept of reporters,

127
00:08:37.887 --> 00:08:42.356
where in the terminal,
if you specify the progress reporter,

128
00:08:42.356 --> 00:08:48.284
it's gonna show you, we only have 1 test,
so what happens likely going to split.

129
00:08:48.284 --> 00:08:53.076
But if you have 600 tests, you'll see in
the terminal these tests running, and

130
00:08:53.076 --> 00:08:55.030
that's the progress reporter.

131
00:08:55.030 --> 00:08:59.089
We also want to get code coverage in our
terminal, so when our tests are all done,

132
00:08:59.089 --> 00:09:01.675
it will spit out what
the code coverage looks like.

133
00:09:01.675 --> 00:09:04.770
And we want it in general
es files as well.

134
00:09:04.770 --> 00:09:08.106
And so that's where we specify
the coverage reporter.

135
00:09:08.106 --> 00:09:12.345
And that coverage reporter
actually corresponds to

136
00:09:12.345 --> 00:09:17.190
this karma-coverage
plugin that we're using.

137
00:09:17.190 --> 00:09:19.180
And then we configure that this way.

138
00:09:19.180 --> 00:09:24.740
So the coverage plugin knows to
look in the karma configuration for

139
00:09:24.740 --> 00:09:27.260
the coverage reporter to get its config.

140
00:09:28.310 --> 00:09:33.026
And here, it has a reporter's array
that has a bunch of boiler platey

141
00:09:33.026 --> 00:09:37.760
stuff that just says the different
types of reporter sites you want.

142
00:09:37.760 --> 00:09:39.570
There are several different
ways to configure this,

143
00:09:39.570 --> 00:09:45.240
but not super necessary for
you to understand or

144
00:09:45.240 --> 00:09:49.800
as far as webpack is concerned
to understand that bit.

145
00:09:49.800 --> 00:09:54.850
So I'm gonna take us as far as, well,

146
00:09:54.850 --> 00:09:58.480
I'm actually gonna check
out the next branch, and

147
00:09:58.480 --> 00:10:01.620
I'm going to explain to you
why this part is important.

148
00:10:01.620 --> 00:10:04.310
And then we'll go ahead and move on.

