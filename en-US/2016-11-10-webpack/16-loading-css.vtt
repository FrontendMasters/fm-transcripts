WEBVTT

1
00:00:00.000 --> 00:00:03.650
[MUSIC]

2
00:00:03.650 --> 00:00:07.630
&gt;&gt; Kent C Dodds: Next is CSS, and
remember they're they're just modules.

3
00:00:07.630 --> 00:00:11.620
So actually we're going to be
requiring CSS files in our project.

4
00:00:11.620 --> 00:00:14.660
But before we do that,
I just want to kind of explain what

5
00:00:14.660 --> 00:00:18.300
these loaders that we're gonna use,
what their purpose is.

6
00:00:18.300 --> 00:00:21.130
So lets say that we have some
CSS that looks like this.

7
00:00:21.130 --> 00:00:24.980
All that really needs to happen for
the CSS to be applied to our page,

8
00:00:24.980 --> 00:00:31.990
is it needs to get into either
a style tag or a link tag with a href.

9
00:00:31.990 --> 00:00:37.860
And so, the way that the default for
like most applications, the default

10
00:00:37.860 --> 00:00:42.140
way that people do this with web pack, is
first they pass it through the CSS loader.

11
00:00:42.140 --> 00:00:46.366
And that's going to read the file and
create a string out of it.

12
00:00:46.366 --> 00:00:50.293
It does a couple extra things as well,
because CSS,

13
00:00:50.293 --> 00:00:54.860
what are some of the dependencies
that a CSS file could have?

14
00:00:56.000 --> 00:00:58.360
That you can think of, like other assets,

15
00:00:58.360 --> 00:00:59.350
yeah?
&gt;&gt; Speaker 2: URLs.

16
00:00:59.350 --> 00:01:01.324
&gt;&gt; Kent C Dodds: URLs to like images?

17
00:01:01.324 --> 00:01:02.306
&gt;&gt; Speaker 2: Like fonts and images,

18
00:01:02.306 --> 00:01:03.073
yeah.
&gt;&gt; Kent C Dodds: Yeah, so

19
00:01:03.073 --> 00:01:06.200
CSS does have dependencies,
and they're explicit, right?

20
00:01:06.200 --> 00:01:10.492
Like you're explicitly saying,
this is the URL to the thing that I need.

21
00:01:10.492 --> 00:01:15.500
And so the CSS loader will resolve some of
those dependencies as well, for a web PAC.

22
00:01:17.100 --> 00:01:21.956
And, so well yeah, the CSS loader
creates a JavaScript module.

23
00:01:21.956 --> 00:01:26.870
So, the results of the CSS loader is
a module.exports equals, and then this

24
00:01:26.870 --> 00:01:33.720
object that represents the CSS, and
it has the actual CSS itself as a string.

25
00:01:33.720 --> 00:01:38.525
And then it updates all of the places
with images and stuff, and updates those

26
00:01:38.525 --> 00:01:43.580
URLs based off of where those files
will live when the bundle is all done.

27
00:01:44.970 --> 00:01:47.216
So you don't have to worry about that.

28
00:01:47.216 --> 00:01:49.886
You can say url relative-path, and

29
00:01:49.886 --> 00:01:54.640
you don't have to worry about
where that's going, like .png.

30
00:01:54.640 --> 00:01:58.631
And web PAC will manage moving that
file to where it needs to be, and

31
00:01:58.631 --> 00:02:03.640
updating that URL so that it's it's
correct, when you launch your application.

32
00:02:04.760 --> 00:02:07.748
And so, now with this JavaScript module,
that's not very useful.

33
00:02:07.748 --> 00:02:10.480
I can now, sure you have
a JavaScript module thatâ€™s great.

34
00:02:10.480 --> 00:02:14.510
But it's not in a style tag or in a link
tag, so it's not gonna apply to the page.

35
00:02:14.510 --> 00:02:18.380
So, the next thing that you use is the
Style Loader, and that's responsible for

36
00:02:18.380 --> 00:02:23.220
taking that JavaScript module,
the CSS from that module,

37
00:02:23.220 --> 00:02:27.980
creating a style tag, and
injecting that into the dominant runtime.

38
00:02:27.980 --> 00:02:30.230
And yeah, that happens at runtime.

39
00:02:31.630 --> 00:02:35.521
So are there any questions
about how the CSS loader and

40
00:02:35.521 --> 00:02:39.499
style loader are used to
create mantras out of CSS, and

41
00:02:39.499 --> 00:02:44.295
have them apply to your page?
&gt;&gt; Speaker 2: So

42
00:02:44.295 --> 00:02:47.240
if you were using something like LESS or
SAS,

43
00:02:47.240 --> 00:02:50.741
it would take the CSS that that computed.
&gt;&gt; Kent C Dodds: Yeah, so

44
00:02:50.741 --> 00:02:54.680
you would stick it right in here.
&gt;&gt; Speaker 2: Between, okay.

45
00:02:54.680 --> 00:02:58.058
&gt;&gt; Kent C Dodds: So yeah, CSS, Sylus, SAS.

46
00:02:58.058 --> 00:03:02.481
And the cool thing about it is because,
as you saw with Babel, it was just one

47
00:03:02.481 --> 00:03:06.520
line of configuration to get Babel for
all of your JavaScript files.

48
00:03:06.520 --> 00:03:11.220
Same thing goes for CSS, and yeah,
I'll show you how to do that.

49
00:03:12.410 --> 00:03:16.910
But the cool thing is, I have a project
that I had before that was using LESS.

50
00:03:16.910 --> 00:03:20.850
And I'm not huge fan of LESS,
I like Stylus.

51
00:03:20.850 --> 00:03:23.180
And so,
I just added Stylus to the project.

52
00:03:23.180 --> 00:03:25.330
It took literally five minutes, and

53
00:03:25.330 --> 00:03:28.350
most of that time was spent waiting for
NPM install.

54
00:03:28.350 --> 00:03:31.050
So, you just add another line and

55
00:03:31.050 --> 00:03:35.550
you say anything that ends in Style, is
gonna be loaded through the Stylus loader.

56
00:03:35.550 --> 00:03:37.296
And then the CSS loader and
the Style loader.

57
00:03:37.296 --> 00:03:42.760
And then later on, I decided you know
what, SAS would be kind of cool.

58
00:03:42.760 --> 00:03:44.950
And I just,
I would not recommend doing this.

59
00:03:44.950 --> 00:03:47.410
But it was it was really easy to do.

60
00:03:47.410 --> 00:03:50.970
And I would say it's not
necessarily a terrible idea.

61
00:03:50.970 --> 00:03:55.280
You just can't use mix ins between them
and stuff, which would be a bit of a pain.

62
00:03:55.280 --> 00:03:58.160
But yeah it's totally possible.

63
00:03:58.160 --> 00:04:01.657
For example, Stylus has a really great
story for looping over stuff, so

64
00:04:01.657 --> 00:04:04.253
it was really good for a ton,
like CSS kind of things.

65
00:04:04.253 --> 00:04:07.530
Looping over LESS is a pain in the rear.

66
00:04:07.530 --> 00:04:11.537
But these days, I actually use CSS and
JS, you can talk to me about that after.

67
00:04:11.537 --> 00:04:12.037
But,

