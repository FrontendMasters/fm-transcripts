WEBVTT

1
00:00:00.000 --> 00:00:03.670
[MUSIC]

2
00:00:03.670 --> 00:00:05.440
&gt;&gt; Kent C Dodds: Yeah,
let me just check out that branch.

3
00:00:05.440 --> 00:00:12.040
And then I'll remove that config and show
you the problem with not including this.

4
00:00:13.890 --> 00:00:19.433
So now if I run npm run test or

5
00:00:19.433 --> 00:00:23.800
npm test or npm t.

6
00:00:23.800 --> 00:00:24.826
All of those are the same.

7
00:00:26.762 --> 00:00:31.382
&gt;&gt; Kent C Dodds: And I'm going to get this
handy dandy coverage summary right here.

8
00:00:31.382 --> 00:00:35.092
And this is the exciting part.

9
00:00:35.092 --> 00:00:41.250
So this is the text reporter,
the text-summary.

10
00:00:41.250 --> 00:00:43.880
That's what I'm seeing right
here is that text-summary.

11
00:00:43.880 --> 00:00:47.770
It also generates a JSON file and
LCOV report.

12
00:00:47.770 --> 00:00:52.857
And as part of those reports inside
of this coverage, there's an LCOV

13
00:00:52.857 --> 00:00:58.570
report directory that has all of
the code coverage reports for my app.

14
00:00:58.570 --> 00:01:04.960
So if I open and it's an index HTML so
we can open this in a browser.

15
00:01:04.960 --> 00:01:09.870
So open the lcov-report/index.html.

16
00:01:09.870 --> 00:01:12.480
That will give me this pretty

17
00:01:12.480 --> 00:01:17.120
almost web appy looking thing
where I can look at code coverage.

18
00:01:17.120 --> 00:01:20.720
So this is cool,
I can see what lines were covered.

19
00:01:20.720 --> 00:01:25.752
Looks like because we required the module,
it ran this line one time.

20
00:01:25.752 --> 00:01:29.140
But because we're not actually calling
any functions on it or anything,

21
00:01:29.140 --> 00:01:30.950
we're not getting any coverage here.

22
00:01:32.210 --> 00:01:37.294
For all these prototype assignments,
we're covering those lines.

23
00:01:37.294 --> 00:01:39.012
So yeah,
we have a lot of work to do on this file.

24
00:01:39.012 --> 00:01:41.180
But there's one problem here.

25
00:01:41.180 --> 00:01:46.090
And that is that it's including our
controller test file as well and

26
00:01:46.090 --> 00:01:47.405
reporting code coverage for that.

27
00:01:47.405 --> 00:01:52.479
So anybody who wanna venture a guess
why this would be a problem?

28
00:01:55.958 --> 00:01:57.742
&gt;&gt; Speaker 2: You're
not testing your tests.

29
00:01:57.742 --> 00:01:58.912
[INAUDIBLE]
&gt;&gt; Kent C Dodds: Yeah,

30
00:01:58.912 --> 00:02:02.617
it's like we're testing our tests,
and making sure that our tests run.

31
00:02:02.617 --> 00:02:04.120
And we want them to run, right?

32
00:02:04.120 --> 00:02:08.910
It would actually be really interesting
to know if our tests aren't running.

33
00:02:08.910 --> 00:02:12.113
If we're not covering all
the lines of code in our tests,

34
00:02:12.113 --> 00:02:15.600
that would be like okay, yeah,
probably delete that stuff.

35
00:02:15.600 --> 00:02:19.790
But what it's doing is it's inflating
our code coverage statistic.

36
00:02:19.790 --> 00:02:24.285
Because if you look at this, this is 15%.

37
00:02:24.285 --> 00:02:28.350
And we have 0% of our branches and
16% of our lines.

38
00:02:28.350 --> 00:02:30.149
But we have 100% of our unit test.

39
00:02:30.149 --> 00:02:36.770
And so if we look at the summary, it's
a lot better than 15% or 16% of lines.

40
00:02:36.770 --> 00:02:39.511
And so it's inflating our code coverage.

41
00:02:39.511 --> 00:02:43.710
And we can't really track the code
coverage of our app very well.

42
00:02:43.710 --> 00:02:50.409
And so that's what the purpose of this
little bit of configuration here is.

43
00:02:50.409 --> 00:02:54.297
And actually, yours truly added
this feature to this library,

44
00:02:54.297 --> 00:02:56.880
copied it from a different one.

45
00:02:56.880 --> 00:02:58.760
So I can't really claim too much credit.

46
00:02:58.760 --> 00:03:04.270
But this is an important feature for
any code coverage tool is the ability to

47
00:03:04.270 --> 00:03:09.980
not cover files that match
a certain file extension.

48
00:03:09.980 --> 00:03:11.490
So all of our tests, and

49
00:03:11.490 --> 00:03:16.420
we also have potentially stub the files
that would be related to our test as

50
00:03:16.420 --> 00:03:20.070
well that we don't want to include
in our code coverage stats.

51
00:03:20.070 --> 00:03:24.822
So then if we run the test again,

52
00:03:24.822 --> 00:03:28.166
pop open our browser.

53
00:03:28.166 --> 00:03:34.882
And we get new code coverage
summary that excludes the test.

54
00:03:38.660 --> 00:03:40.740
&gt;&gt; Kent C Dodds: That all makes sense?

55
00:03:40.740 --> 00:03:45.618
Clear as mud, hopefully clear.

56
00:03:45.618 --> 00:03:48.849
Let me just make sure that
I covered everything here.

57
00:03:48.849 --> 00:03:51.438
Feel free to interrupt me and
ask questions.

58
00:03:59.217 --> 00:04:03.117
&gt;&gt; Kent C Dodds: One other thing that I
didn't mention earlier that I probably

59
00:04:03.117 --> 00:04:04.018
should have.

60
00:04:04.018 --> 00:04:06.707
Because you'll likely run into this
when you're doing this yourself.

61
00:04:06.707 --> 00:04:12.080
Is this webpackMiddleware property that
just magically appeared in our config.

62
00:04:12.080 --> 00:04:14.850
Yeah, I forgot to mention that.

63
00:04:14.850 --> 00:04:17.348
We'll take this out and
I'll show you why this is important.

64
00:04:17.348 --> 00:04:18.681
If we run our tests again,

65
00:04:18.681 --> 00:04:22.330
we're going to get this webpack
wait until bundle is finished.

66
00:04:22.330 --> 00:04:26.230
And then a whole bunch of output here
that's saying all of the modules that

67
00:04:26.230 --> 00:04:27.040
it's loading.

68
00:04:27.040 --> 00:04:31.498
As your application grows, this is
gonna get bigger and bigger and bigger.

69
00:04:31.498 --> 00:04:36.000
And it's gonna really inflate
your output from your tests.

70
00:04:36.000 --> 00:04:41.010
And it makes it a lot more
difficult to debug tests and stuff.

71
00:04:41.010 --> 00:04:44.189
So that's what the purpose of
this webpackMiddleware is or

72
00:04:44.189 --> 00:04:45.595
that's why it's there.

73
00:04:45.595 --> 00:04:49.441
Is so that we just say, I don't care about
that stuff, just show me the output for

74
00:04:49.441 --> 00:04:50.200
the test.

75
00:04:50.200 --> 00:04:53.364
If you needed to debug something like
some module's not loading properly.

76
00:04:53.364 --> 00:04:56.802
Or something that you might use,
something like that.

77
00:04:56.802 --> 00:04:59.370
But otherwise, it's not necessary.

78
00:05:01.840 --> 00:05:03.325
Cool, everybody having so much fun?

79
00:05:03.325 --> 00:05:08.410
[LAUGH] Okay, cool, so I don't see.

80
00:05:09.540 --> 00:05:11.270
Okay, there is one question from Henry.

81
00:05:11.270 --> 00:05:16.500
Why is it choosing only one
file from the source directory?

82
00:05:16.500 --> 00:05:25.159
Good question, so the reason that it's
only loading the controller.js file.

83
00:05:25.159 --> 00:05:27.330
And that's actually perfect segue, Henry.

84
00:05:27.330 --> 00:05:28.090
I'll pay you later.

85
00:05:29.450 --> 00:05:31.930
It's only loading this controller file

86
00:05:31.930 --> 00:05:35.620
because that's the only one
that's required by our test.

87
00:05:35.620 --> 00:05:42.649
So to be a little bit more accurate,
Karma is saying, okay, my files.

88
00:05:42.649 --> 00:05:46.840
I'm gonna go ahead and find all the files
that match this glob, this pattern.

89
00:05:46.840 --> 00:05:48.040
There's only one.

90
00:05:48.040 --> 00:05:49.549
And so it says, okay, let me load that.

91
00:05:49.549 --> 00:05:52.420
But first,
I'm gonna preprocess it with Webpack.

92
00:05:52.420 --> 00:05:54.708
And so I'll resolve this require.

93
00:05:54.708 --> 00:05:56.488
And so that loads in controller.

94
00:05:56.488 --> 00:06:00.289
Now controller doesn't match
the exclusion pattern that we have for

95
00:06:00.289 --> 00:06:02.687
instrumentation so it instruments that.

96
00:06:02.687 --> 00:06:04.460
But it doesn't load any
of the other files.

97
00:06:04.460 --> 00:06:05.650
Karma doesn't load it.

98
00:06:05.650 --> 00:06:08.630
Webpack is not gonna load it
because we're not requiring it.

99
00:06:08.630 --> 00:06:14.870
And so that's why we only get
controller.js instrumented is because

100
00:06:14.870 --> 00:06:17.760
it's the only one that's actually loaded
into the browser and instrumented it all.

101
00:06:19.170 --> 00:06:22.160
So that's the next thing
that we're gonna solve.

102
00:06:22.160 --> 00:06:26.460
Oscar is asking, how do you access
the coverage webpage open coverage.

103
00:06:26.460 --> 00:06:32.526
So yeah, you could actually go into the
coverage directory, directory lcov-report.

104
00:06:32.526 --> 00:06:36.689
And then right-click on the index.html or
open it however you do.

105
00:06:36.689 --> 00:06:40.483
And I think I've gotta open a new window.

106
00:06:40.483 --> 00:06:43.300
No, that's not gonna
do what I think it is.

107
00:06:43.300 --> 00:06:45.660
I always just do it from the command line.

108
00:06:45.660 --> 00:06:49.853
So it's open
coverage/lcov-report/index.html,

109
00:06:49.853 --> 00:06:52.390
and that'll pop open my browser.

110
00:06:53.540 --> 00:06:56.016
But yeah, it's just a static
file in your file system.

111
00:07:00.294 --> 00:07:04.788
&gt;&gt; Kent C Dodds: Cool, so in ten minutes,
I showed you what took me

112
00:07:04.788 --> 00:07:09.291
probably weeks and
months of time to get working.

113
00:07:09.291 --> 00:07:14.763
But the tooling is so much better
than it used to be, so good times.

114
00:07:14.763 --> 00:07:21.410
Yeah, so the next thing that we are gonna
do is just like Henry was talking about.

115
00:07:21.410 --> 00:07:27.180
Is what we're getting here is coverage for
the files that have coverage.

116
00:07:27.180 --> 00:07:31.270
But we're not getting a report on
coverage for the files in our project.

117
00:07:31.270 --> 00:07:32.450
And that's what we really care about.

118
00:07:32.450 --> 00:07:34.180
We want to find out, okay,

119
00:07:34.180 --> 00:07:40.090
how many lines of code are not covered
in our tests in our entire project?

120
00:07:40.090 --> 00:07:43.050
So that's the next step here.

