WEBVTT

1
00:00:00.000 --> 00:00:04.202
[MUSIC]

2
00:00:04.202 --> 00:00:07.914
&gt;&gt; Kent C Dodds: By now we have this
really cool thing where we can like bundle

3
00:00:07.914 --> 00:00:12.369
this and we have our that like a giant
file that has the web pack on time and

4
00:00:12.369 --> 00:00:13.590
stuff.

5
00:00:13.590 --> 00:00:17.690
So what we're gonna do now is
is actually minify that so

6
00:00:17.690 --> 00:00:19.890
that it's ready for
delivery to production.

7
00:00:19.890 --> 00:00:23.150
So like we don't have to
actually add this as part of our

8
00:00:24.370 --> 00:00:27.290
existing grunt step,
or something like that.

9
00:00:27.290 --> 00:00:29.650
Webpack can take care of this for us.

10
00:00:29.650 --> 00:00:31.670
So what we're gonna do,
is we have a build dev.

11
00:00:31.670 --> 00:00:36.535
We're actually gonna just create
a build script, right here.

12
00:00:36.535 --> 00:00:41.241
And I'm going to just say webpack -p and

13
00:00:41.241 --> 00:00:44.846
that is short for production.

14
00:00:44.846 --> 00:00:49.235
But basically what it's doing it's an
alias to a couple other command line flags

15
00:00:49.235 --> 00:00:52.406
that like optimize, minimize and
a couple other things.

16
00:00:52.406 --> 00:00:57.717
And what this is going to do is it's gonna
say okay Webpack you are in minimize mode.

17
00:00:57.717 --> 00:01:01.099
And so I like any loaders that care about
that we don't have any loads right now but

18
00:01:01.099 --> 00:01:03.520
any loads that that would care about that.

19
00:01:03.520 --> 00:01:05.590
Might behave a little differently.

20
00:01:05.590 --> 00:01:07.970
And plugins likewise.

21
00:01:07.970 --> 00:01:12.710
But this is going to say okay,
minimize everything, optimize it,

22
00:01:12.710 --> 00:01:16.880
do all that all that magic stuff
that Webpack is going to do for us.

23
00:01:16.880 --> 00:01:19.070
So that the result is much smaller.

24
00:01:19.070 --> 00:01:21.290
So if you run that npm run build.

25
00:01:22.640 --> 00:01:25.520
And what you're gonna get in your
disk directory is a bundle that

26
00:01:25.520 --> 00:01:26.510
looks much smaller.

27
00:01:29.230 --> 00:01:32.760
And you could potentially
ship that to production.

28
00:01:32.760 --> 00:01:35.240
But I'm going to show you why
you might not want to right now.

29
00:01:37.230 --> 00:01:41.440
Any questions about that should
be fairly straight forward and

30
00:01:41.440 --> 00:01:42.790
here's another script.

31
00:01:42.790 --> 00:01:45.840
So if we go ahead and
start let's say that we're on our CDN now

32
00:01:45.840 --> 00:01:50.980
we're serving this optimized bundle and
we refresh our page.

33
00:01:50.980 --> 00:01:55.213
Now let's say I'm gonna just
I don't care about the app.

34
00:01:55.213 --> 00:01:58.804
Let's say that we're in production now and
like sweet, we have webpack,

35
00:01:58.804 --> 00:02:00.059
this is gonna be awesome.

36
00:02:00.059 --> 00:02:03.768
I'm going to debug something
in my bundle JS file,

37
00:02:03.768 --> 00:02:08.260
wait like no source maps, so
like good luck with life.

38
00:02:08.260 --> 00:02:09.390
You can pretty print it but

39
00:02:09.390 --> 00:02:13.630
yeah, have fun with that, so
and especially as the app grow.

40
00:02:13.630 --> 00:02:19.540
So we're gonna add source maps
in our Webpack config and

41
00:02:19.540 --> 00:02:21.850
there are a couple of options.

42
00:02:21.850 --> 00:02:24.970
The first one that we're
going to use is called eval.

43
00:02:24.970 --> 00:02:28.840
So you might think that I'm about
to type a source map right.

44
00:02:28.840 --> 00:02:30.390
That's not what I'm about to type.

45
00:02:30.390 --> 00:02:33.740
It's actually called devtool
please don't ask me why.

46
00:02:35.090 --> 00:02:42.635
Yeah, but the devtool is going to be eval.
&gt;&gt; Kent C Dodds: So let's go ahead and

47
00:02:42.635 --> 00:02:48.138
we'll come back to the production version
of source maps here in a little bit.

48
00:02:48.138 --> 00:02:55.180
But let's go back to npm run dev and
see what this devtool's gonna do for us.

49
00:02:56.930 --> 00:03:00.010
So here we'll get rid of that,
get rid of that.

50
00:03:00.010 --> 00:03:03.390
There's a here in our sources tab.

51
00:03:03.390 --> 00:03:08.220
We're going to have now a webpack://
that is not a protocol.

52
00:03:08.220 --> 00:03:11.930
That's just this source maps for
our web back stuff so

53
00:03:11.930 --> 00:03:13.260
inside if you will find bootstrap.

54
00:03:14.440 --> 00:03:16.700
And you can also find out
the normal way bootstrap.

55
00:03:18.230 --> 00:03:23.480
But it's like pretty much not modified it
just has this for which can be helpful.

56
00:03:23.480 --> 00:03:28.170
And it has our code in it.

57
00:03:28.170 --> 00:03:31.060
And so this is a lot easier
to debug you can refresh and

58
00:03:31.060 --> 00:03:32.910
you have your breakpoint there.

59
00:03:32.910 --> 00:03:36.270
And you can get the same
experience with production.

60
00:03:36.270 --> 00:03:41.574
So if we say an npm run build and
then we and

61
00:03:41.574 --> 00:03:49.376
then npm start.
&gt;&gt; Kent C Dodds: We'll refresh and

62
00:03:49.376 --> 00:03:51.480
we have bootstrap here as well.

63
00:03:51.480 --> 00:03:55.570
So then we refresh we can hit a break
point we can step over code all that stuff

64
00:03:55.570 --> 00:04:01.490
but that actual bundle file itself
well it's formatted now but.

65
00:04:02.510 --> 00:04:08.020
The bundle is minified
the problem though is

66
00:04:09.290 --> 00:04:13.850
that if we look at this bundle we have
all the source maps in line in the file.

67
00:04:13.850 --> 00:04:18.330
We're sending all the source maps to
the users of our app don't wanna do that.

68
00:04:18.330 --> 00:04:23.220
And so there are a couple reasons that
we wanna use eval in the first place

69
00:04:23.220 --> 00:04:25.640
eval is really, really fast to generate.

70
00:04:25.640 --> 00:04:31.180
So really fast for a webpack to build it's
also really fast for webpack to rebuild.

71
00:04:31.180 --> 00:04:35.440
But you're shipping source
maps to customers, that's not

72
00:04:35.440 --> 00:04:39.970
what you want to do that that will
slow down your load time for your app.

73
00:04:39.970 --> 00:04:44.180
And so what we're going to do
is we need to somehow determine

74
00:04:45.230 --> 00:04:50.440
in this function when we're
generating our webpack config.

75
00:04:50.440 --> 00:04:53.210
We need to determine whether
we're in production mode or

76
00:04:53.210 --> 00:04:54.960
if we're in development mode.

77
00:04:54.960 --> 00:04:59.415
And if we're in development then we'll use
eval, if we're in production then we'll

78
00:04:59.415 --> 00:05:04.593
use this one which is called source map.
&gt;&gt; Kent C Dodds: So

79
00:05:04.593 --> 00:05:07.958
if we run the build this time we're
going to see that in our disk

80
00:05:07.958 --> 00:05:11.080
directory we see bundle J.S.
and then bundle jazz map.

81
00:05:12.360 --> 00:05:14.480
So here we'll see.

82
00:05:14.480 --> 00:05:16.660
Now it's not quite so big.

83
00:05:16.660 --> 00:05:20.140
And it has this mapping to our source map.

84
00:05:20.140 --> 00:05:23.000
And so now the only thing's that's
getting shipped to our customers

85
00:05:23.000 --> 00:05:26.310
is our actual code and
then the URL to our source maps.

86
00:05:26.310 --> 00:05:31.840
And this is like the most common way that
people do source maps for production.

87
00:05:31.840 --> 00:05:36.110
So any questions about how that's working?
&gt;&gt; Student: Those

88
00:05:36.110 --> 00:05:38.850
source maps don't get loaded
unless they open up the dev tools

89
00:05:38.850 --> 00:05:39.540
correct?
&gt;&gt; Kent C Dodds: Yeah,

90
00:05:39.540 --> 00:05:40.510
thanks for bringing that up.

91
00:05:40.510 --> 00:05:44.077
Yeah, so.
&gt;&gt; Kent C Dodds: Yeah, so like

92
00:05:44.077 --> 00:05:48.450
the browser one actually open load those
source maps and tell you open dev tools.

93
00:05:48.450 --> 00:05:50.850
So if I, let's npm search.

94
00:05:52.050 --> 00:05:55.600
I refresh here and
then I open up my dev tools.

95
00:05:55.600 --> 00:05:57.710
I'm going to look at my network.

96
00:05:57.710 --> 00:06:01.700
Well, I actually can't show you how that
works because like my dev tools are open.

97
00:06:01.700 --> 00:06:05.690
But yeah, it loads up it loads up once
a open mind at tools which most of your

98
00:06:05.690 --> 00:06:09.470
customers want to do and if they do then
maybe they want to look at your code.

99
00:06:09.470 --> 00:06:09.970
I don't know.

100
00:06:11.290 --> 00:06:12.635
How fun with that.

101
00:06:12.635 --> 00:06:13.224
[LAUGH]

