WEBVTT

1
00:00:00.044 --> 00:00:04.064
[MUSIC]

2
00:00:04.064 --> 00:00:06.075
&gt;&gt; Student: I'm a little confused, then,

3
00:00:06.075 --> 00:00:09.656
what we're passing into
the webpack config.env part.

4
00:00:09.656 --> 00:00:10.865
&gt;&gt; Kent C Dodds: Yeah, okay.

5
00:00:10.865 --> 00:00:12.730
&gt;&gt; Student: You actually said that,
I mean.

6
00:00:13.730 --> 00:00:15.810
&gt;&gt; Kent C Dodds: Yeah, yeah.
&gt;&gt; Student: It's a property, right?

7
00:00:15.810 --> 00:00:17.609
&gt;&gt; Kent C Dodds: It will be an object.

8
00:00:19.340 --> 00:00:25.459
Because if you look at the [CROSSTALK].

9
00:00:25.459 --> 00:00:30.967
&gt;&gt; Student: It's not something that's
set in the package.JSON script, though.

10
00:00:30.967 --> 00:00:31.880
&gt;&gt; Kent C Dodds: No, it's not.

11
00:00:31.880 --> 00:00:33.509
&gt;&gt; Student: Okay.

12
00:00:33.509 --> 00:00:38.069
&gt;&gt; Kent C Dodds: Yep, in this scenario,
we're just calling our webpack

13
00:00:38.069 --> 00:00:42.440
config module the same way
that webpack is calling it.

14
00:00:58.752 --> 00:01:01.740
&gt;&gt; Kent C Dodds: So if anybody needs
to cheat a little bit, that's that.

15
00:01:03.350 --> 00:01:05.764
And again, if you have the slides up,

16
00:01:05.764 --> 00:01:09.461
you can go look at the get diff
to kind of give you an answer or

17
00:01:09.461 --> 00:01:14.525
to just look at it really for a quick
second, just for what you're looking for.

18
00:01:16.996 --> 00:01:20.240
&gt;&gt; Kent C Dodds: Let me give you a quick
tip on the preprocessors thing, too.

19
00:01:21.290 --> 00:01:26.533
So you could create a variable up
here called preprocessors, and

20
00:01:26.533 --> 00:01:33.128
that's an object, and then you'd say okay,
preprocessors is preprocessors.

21
00:01:33.128 --> 00:01:38.065
[COUGH] Well, yeah, and
then because the key needs to be a glob,

22
00:01:38.065 --> 00:01:41.699
it looks like you would
need to look like this,

23
00:01:41.699 --> 00:01:45.580
you could just put it
right here like this.

24
00:01:45.580 --> 00:01:49.281
Well, it is kind of like going
a little bit too far, but

25
00:01:49.281 --> 00:01:53.467
if you want to make it a variable,
you could say fileGlob, and

26
00:01:53.467 --> 00:01:56.869
then you can use that in
both of these places here.

27
00:02:00.868 --> 00:02:06.124
&gt;&gt; Kent C Dodds: There, and
then that'll be preprocessors,

28
00:02:06.124 --> 00:02:09.233
whatever you put in there.

29
00:02:09.233 --> 00:02:15.537
And then with ES6, if you're running Node
6, then you can just say fileGlob here.

30
00:02:20.220 --> 00:02:23.134
&gt;&gt; Kent C Dodds: And also with the ES6,
you don't need to do that either,

31
00:02:23.134 --> 00:02:24.092
it's pretty fun.

32
00:02:27.854 --> 00:02:28.920
&gt;&gt; Kent C Dodds: Yeah?

33
00:02:28.920 --> 00:02:29.430
&gt;&gt; Henry: There's a question,

34
00:02:29.430 --> 00:02:33.710
Karma should require only common js
module to get through the require method.

35
00:02:33.710 --> 00:02:37.899
Why does it need the webpackConfig?

36
00:02:37.899 --> 00:02:42.840
&gt;&gt; Kent C Dodds: So
I'm not 100% clear on the question, so

37
00:02:42.840 --> 00:02:47.276
Henry, are you asking about whether like

38
00:02:47.276 --> 00:02:52.868
the browser needs to require
the common js modules?

39
00:02:52.868 --> 00:02:57.638
Because what we're doing here
is we're enabling the browser to

40
00:02:57.638 --> 00:02:59.324
require our modules.

41
00:02:59.324 --> 00:03:02.327
And our modules do need
to run through webpack,

42
00:03:02.327 --> 00:03:06.096
because webpack will take care
of transpiling with babel.

43
00:03:06.096 --> 00:03:11.370
Webpack will take care of resolving CSS
modules and all those kinds of things.

44
00:03:11.370 --> 00:03:16.070
So that's that's why we need to provide
Karma with the webpackConfig so

45
00:03:16.070 --> 00:03:21.860
that the webpack Karma plugin can
resolve those those modules with

46
00:03:21.860 --> 00:03:24.870
those loaders that we specified
in those kinds of things.

47
00:03:24.870 --> 00:03:27.095
Does that answer your question,
Henry, hopefully?

48
00:03:27.095 --> 00:03:32.800
Okay.

49
00:03:32.800 --> 00:03:33.840
Does anybody have it loading?

50
00:03:35.590 --> 00:03:36.440
Yeah?

51
00:03:36.440 --> 00:03:45.835
Sweet, the champion of the day.

52
00:03:47.181 --> 00:03:50.788
&gt;&gt; Kent C Dodds: Anybody still just kind
of hoping that I'll give you the answer

53
00:03:50.788 --> 00:03:51.818
here in a second?

54
00:03:51.818 --> 00:03:56.510
[LAUGH] Okay, I think I'll run through
the answer now, and then we can break for

55
00:03:56.510 --> 00:03:57.639
lunch.

56
00:03:57.639 --> 00:04:01.390
Yeah, sure.

57
00:04:01.390 --> 00:04:05.824
So Scott asks, does the value of
the preprocessors glob is a string,

58
00:04:05.824 --> 00:04:09.884
does it refer directly to the Karma
config key of the same name?

59
00:04:09.884 --> 00:04:14.709
Or is webpack as a preprocessor a thing
that knows to look for the webpack key,

60
00:04:14.709 --> 00:04:16.140
good question.

61
00:04:16.140 --> 00:04:20.000
So yeah,
the value of this is going to be webpack.

62
00:04:20.000 --> 00:04:21.780
If you didn't catch that yet,

63
00:04:21.780 --> 00:04:24.720
that corresponds to
the plugin that we're using.

64
00:04:24.720 --> 00:04:29.160
So if you go back to your package JSON,
you'll have karma-webpack right there,

65
00:04:29.160 --> 00:04:33.620
so Karma is gonna say, okay, you've
specified a preprocessor called webpack.

66
00:04:33.620 --> 00:04:37.150
I'm gonna look up
the karma-webpack plugin.

67
00:04:37.150 --> 00:04:39.600
And then say hey,
karma-webpack,, do something.

68
00:04:39.600 --> 00:04:41.630
That's all that karma does.

69
00:04:41.630 --> 00:04:45.180
And then that plugin does something.

70
00:04:45.180 --> 00:04:49.470
And what it does is it looks in the
configuration for the webpack property,

71
00:04:49.470 --> 00:04:50.999
just like Scott suggested.

72
00:04:52.595 --> 00:04:59.250
So yeah, I think we got that we
can say webpack is webpackConfig,

73
00:04:59.250 --> 00:05:04.337
and with that,
we should be able to run our tests.

74
00:05:13.285 --> 00:05:15.752
&gt;&gt; Kent C Dodds: Okay, sweet,
so we'll go ahead and run it.

75
00:05:20.455 --> 00:05:23.275
&gt;&gt; Kent C Dodds: And it passed, yay.

76
00:05:23.275 --> 00:05:29.245
[LAUGH]
&gt;&gt; Kent C Dodds: So

77
00:05:29.245 --> 00:05:32.355
in the actual solution in the repo,

78
00:05:32.355 --> 00:05:37.239
what I do instead is I inline this,
so this is like this.

79
00:05:43.869 --> 00:05:45.348
&gt;&gt; Kent C Dodds: But yeah, same idea.

80
00:05:47.847 --> 00:05:50.740
&gt;&gt; Kent C Dodds: Actually, I think I
create a variable out of this too, but

