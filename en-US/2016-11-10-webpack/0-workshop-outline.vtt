WEBVTT

1
00:00:00.285 --> 00:00:10.285
[MUSIC]

2
00:00:39.423 --> 00:00:43.312
&gt;&gt; Kent C Dodds: I like that we can
have such a diverse group of people all

3
00:00:43.312 --> 00:00:45.851
learning similar technologies and

4
00:00:45.851 --> 00:00:49.670
solving very different
problems all over the world.

5
00:00:49.670 --> 00:00:50.740
I think that's cool.

6
00:00:51.790 --> 00:00:57.110
And I appreciate you all taking some time
to learn about something that I care about

7
00:00:57.110 --> 00:00:59.600
which is Webpack, I love Webpack.

8
00:00:59.600 --> 00:01:01.260
And that's what this workshop is about.

9
00:01:01.260 --> 00:01:04.210
So I like to set up expectations so
that you're

10
00:01:04.210 --> 00:01:08.140
not just kind of sitting waiting for
something that's never gonna happen.

11
00:01:08.140 --> 00:01:12.430
So we're going to be migrating an existing
JavaScript application to Webpack 2.

12
00:01:12.430 --> 00:01:16.190
That's the entire course is
migrating this application.

13
00:01:16.190 --> 00:01:21.390
It's pretty basic,
no build system at all applications,

14
00:01:21.390 --> 00:01:26.450
so you've got an index HTML with
some script tags and some CSS.

15
00:01:26.450 --> 00:01:29.534
So pretty basic, and
we are using Webpack 2.

16
00:01:29.534 --> 00:01:33.260
So it's, I don't think that it's really

17
00:01:33.260 --> 00:01:36.580
useful to teach you a technology
that's about to get a major upgrade.

18
00:01:36.580 --> 00:01:40.340
Especially when Webpack 2,

19
00:01:40.340 --> 00:01:45.490
not only is it really good,
the beta is really good,

20
00:01:45.490 --> 00:01:49.390
but it's almost released, they've pretty
much committed to the end of August.

21
00:01:49.390 --> 00:01:51.530
So that's pretty exciting.

22
00:01:51.530 --> 00:01:58.153
And the main thing that's holding it back
is documentation, which yeah, that's that.

23
00:01:58.153 --> 00:02:01.600
Webpack is getting a whole
ton of attention now,

24
00:02:01.600 --> 00:02:07.242
especially since the Angular CLI has
adopted it as it's kinda under workings.

25
00:02:07.242 --> 00:02:10.952
And then React has the Create React App
that's using Webpack.

26
00:02:10.952 --> 00:02:14.720
So it's like this is
the thing to know these days.

27
00:02:14.720 --> 00:02:16.617
So it's awesome.

28
00:02:16.617 --> 00:02:19.784
So yeah, Webpack is getting a lot
more attention than it already has.

29
00:02:19.784 --> 00:02:21.980
And it's gonna just keep getting better.

30
00:02:23.050 --> 00:02:25.460
So yeah, we will be doing Webpack 2.

31
00:02:25.460 --> 00:02:27.750
We're going to do unit testing,

32
00:02:27.750 --> 00:02:32.950
because unit testing I think everybody
appreciates the value of testing.

33
00:02:32.950 --> 00:02:35.460
And appreciates how difficult
tooling is to set up, and

34
00:02:35.460 --> 00:02:39.930
that's what this whole workshop is about,
the workshops about tooling.

35
00:02:39.930 --> 00:02:44.365
So we'll be using Mocha, anybody
here familiar with Mocha, use Mocha?

36
00:02:44.365 --> 00:02:46.240
Cool, okay.

37
00:02:46.240 --> 00:02:47.970
Anybody use Karma?

38
00:02:47.970 --> 00:02:50.690
Yeah Karma, who uses Karma?

39
00:02:50.690 --> 00:02:52.009
So anybody used Jasmine?

40
00:02:52.009 --> 00:02:56.140
Okay, sweet Jasmine is awesome too.

41
00:02:56.140 --> 00:02:56.990
I prefer Mocha.

42
00:02:56.990 --> 00:02:58.850
Chai, anybody used Chai before?

43
00:02:58.850 --> 00:03:01.250
Okay, yeah, we'll be using Chai.

44
00:03:01.250 --> 00:03:03.348
Cool.
And then we'll be using all these features

45
00:03:03.348 --> 00:03:06.673
that I have listed here, tree-shaking,
code splitting, hashing for

46
00:03:06.673 --> 00:03:09.359
long term caching, chunking,
service worker and more.

47
00:03:09.359 --> 00:03:12.540
So if you don't know all those
terms you'll know them well.

48
00:03:13.650 --> 00:03:15.760
That's great because that's
what you're here for.

49
00:03:15.760 --> 00:03:17.647
And we're gonna be talking about that.

50
00:03:17.647 --> 00:03:20.160
And then we'll be deploying
the app to surge.sh.

51
00:03:20.160 --> 00:03:22.180
Who is familiar with that service?

52
00:03:22.180 --> 00:03:23.290
Okay, it's great,

53
00:03:23.290 --> 00:03:27.580
it's a CDN that basically you just give it
static files and it's really, really fast.

54
00:03:29.160 --> 00:03:32.190
Yeah, and it's like caching
strategy is really great too and

55
00:03:32.190 --> 00:03:34.160
it g-zips your stuff for
you, it's awesome.

56
00:03:34.160 --> 00:03:37.905
So by the end of the day,
you will all have to do MVC,

57
00:03:37.905 --> 00:03:43.100
deploy it to your own surge.sh URL.

58
00:03:43.100 --> 00:03:43.930
So that'll be fun.

59
00:03:43.930 --> 00:03:47.845
You can share with your friends and
write down todos and stuff.

60
00:03:47.845 --> 00:03:50.525
So a couple things that we're
not going to get too far into.

61
00:03:50.525 --> 00:03:54.445
So I'm not gonna talk about every feature
available in Webpack or its ecosystem.

62
00:03:54.445 --> 00:03:57.335
We're not actually going to write
plugins or loaders unless we have time.

63
00:03:57.335 --> 00:04:00.835
I have written a plugin and some loaders.

64
00:04:00.835 --> 00:04:05.605
And so if we have time at the end
then maybe we'll look into it but

65
00:04:05.605 --> 00:04:07.435
I don't have anything in this module.

66
00:04:08.456 --> 00:04:12.250
In the pre-event survey that I sent out,
several of you were

67
00:04:12.250 --> 00:04:15.620
really hoping to get into plugins and
loaders and writing your own.

68
00:04:16.640 --> 00:04:20.970
Let me just say that I have been using
Webpack for over a year and a half and

69
00:04:20.970 --> 00:04:25.480
I have only needed to write a custom
plugin or loader like a couple times.

70
00:04:25.480 --> 00:04:29.480
There are so many plugins and loaders
already that you generally don't need your

71
00:04:29.480 --> 00:04:32.900
own and the documentation is improving.

72
00:04:32.900 --> 00:04:37.260
So writing writing these
is becoming easier.

73
00:04:37.260 --> 00:04:41.745
And then also lots of the features that
I'm gonna be talking about are not really

74
00:04:41.745 --> 00:04:45.270
applicable to every application
that you can possibly dream up.

75
00:04:45.270 --> 00:04:49.480
For some applications long term hashing
and/or long term caching of assets,

76
00:04:49.480 --> 00:04:52.460
is actually not the best approach.

77
00:04:52.460 --> 00:04:56.590
It just kind of depends on the type
of application you're using.

78
00:04:56.590 --> 00:05:01.070
Also for an Angular 1 app, it's pretty
difficult to do code splitting just

79
00:05:01.070 --> 00:05:03.880
because of the way that Angular 1 works.

80
00:05:03.880 --> 00:05:07.080
And so
some of these features may not apply to or

81
00:05:07.080 --> 00:05:10.200
be useful for all applications,
so just be aware that.

82
00:05:11.790 --> 00:05:14.030
Hopefully, you all have everything set up.

83
00:05:14.030 --> 00:05:16.610
These are the things that you
definitely are gonna need.

84
00:05:16.610 --> 00:05:20.240
I tried to do something this morning or
last night to make it so

85
00:05:20.240 --> 00:05:23.670
you wouldn't need node version 6 version,
version 4 or

86
00:05:23.670 --> 00:05:27.800
even an older version
of node would suffice.

87
00:05:27.800 --> 00:05:30.050
But I haven't actually tested that.

88
00:05:30.050 --> 00:05:32.630
So, hopefully, everybody has node 6.

89
00:05:32.630 --> 00:05:36.630
It should work with node 6 and
also it should work with Windows.

90
00:05:36.630 --> 00:05:41.220
I know that there have been a little
bit of difficulties with Windows and

91
00:05:41.220 --> 00:05:43.720
I tried to fix most of
those things last night.

92
00:05:43.720 --> 00:05:48.034
If you have linting problems ask Kent back
there because he has linting problems too

93
00:05:48.034 --> 00:05:49.317
with Windows.

94
00:05:49.317 --> 00:05:52.380
And hopefully we can work together
to figure out what that problem is.

95
00:05:52.380 --> 00:05:56.250
Luckily, linting isn't like
critical to this workshop so.

96
00:05:56.250 --> 00:05:58.300
Okay, so let's go ahead and get started.

97
00:05:58.300 --> 00:06:00.550
This is the set up.

98
00:06:00.550 --> 00:06:05.615
I'm actually just going to
go back up to where I copied

99
00:06:05.615 --> 00:06:12.495
this in the chat somewhere I copied
the set up, I'm gonna chat it again.

100
00:06:12.495 --> 00:06:17.383
So if you need that,
that is what you need to be doing

101
00:06:17.383 --> 00:06:21.031
while I'm getting started talking.

102
00:06:21.031 --> 00:06:24.381
By the end of it,
you should be able to run npm start and

103
00:06:24.381 --> 00:06:28.493
then open up a localhost 8080 and
this is what you should see.

104
00:06:28.493 --> 00:06:31.500
If you don't see that,
then there is a problem.

105
00:06:31.500 --> 00:06:35.150
And [COUGH] after I finish
talking I'll double check, or

106
00:06:35.150 --> 00:06:36.924
you can ask your neighbor.

107
00:06:36.924 --> 00:06:38.508
But that would be yeah,

108
00:06:38.508 --> 00:06:43.670
you need to have this up before we can
actually start working on the workshop.

