WEBVTT

1
00:00:00.000 --> 00:00:03.931
[MUSIC]

2
00:00:03.931 --> 00:00:08.937
&gt;&gt; Speaker 1: So it's taking your CSS,
putting it into a JavaScript

3
00:00:08.937 --> 00:00:14.080
module and then adding that into the link,

4
00:00:14.080 --> 00:00:17.651
adding all of the-
&gt;&gt; Kent C Dodds: Yeah, so,

5
00:00:17.651 --> 00:00:18.689
I see where you going.

6
00:00:18.689 --> 00:00:21.090
&gt;&gt; Speaker 1: I'm confused what
the advantage of this is on that one.

7
00:00:21.090 --> 00:00:23.853
&gt;&gt; Kent C Dodds: Let me
explain how this works, so.

8
00:00:27.471 --> 00:00:31.080
&gt;&gt; Kent C Dodds: Yeah, and by the way,
we can now get rid of that.

9
00:00:31.080 --> 00:00:34.260
And it totally puts
the links up at the top and

10
00:00:34.260 --> 00:00:37.420
the scripts at the bottom,
just like where it should be.

11
00:00:37.420 --> 00:00:39.770
But, yeah, so this is how it works.

12
00:00:39.770 --> 00:00:42.330
And first off, there's a loader portion.

13
00:00:42.330 --> 00:00:47.440
What this is doing is it's taking some
configuration and returning a function.

14
00:00:47.440 --> 00:00:52.020
And the function is a loader, so loaders,
they're simple as a function that takes

15
00:00:52.020 --> 00:00:54.540
some source code and
returns the resulting code.

16
00:00:55.560 --> 00:00:58.080
Whatever that is, it doesn't even have to
be code, it doesn't have to be a string,

17
00:00:58.080 --> 00:01:00.220
it could be an object,
it could be anything.

18
00:01:00.220 --> 00:01:06.454
And so in this scenario, it's saying,
give me a loader that's going to take all,

19
00:01:06.454 --> 00:01:14.120
like any file that comes through it is
going to go first through the CSS loader,

20
00:01:14.120 --> 00:01:20.530
and then whatever it needs to do
to become a JavaScript module.

21
00:01:20.530 --> 00:01:24.550
So, the CSS loaders,
it's not just taking the string and

22
00:01:24.550 --> 00:01:25.610
making it a JavaScript module.

23
00:01:25.610 --> 00:01:30.150
It's also resolving all the URLs for
images and

24
00:01:30.150 --> 00:01:34.590
creating a base64 string for small images
and taking care of fonts and stuff.

25
00:01:34.590 --> 00:01:37.820
And so once it's all done, then the
ExtractTextPlugin will take that module

26
00:01:37.820 --> 00:01:43.180
and take the CSS and
stick it into a styles module.

27
00:01:43.180 --> 00:01:45.640
Or, yeah, our CSS file.

28
00:01:46.970 --> 00:01:51.705
And then the plugin,
the ExtractTextPlugin, well, that, sorry,

29
00:01:51.705 --> 00:01:53.640
I kinda got ahead of myself.

30
00:01:53.640 --> 00:01:56.240
The plugin is what's responsible for
taking those modules,

31
00:01:56.240 --> 00:02:01.070
and making a file out of them and
removing them from the bundle.

32
00:02:01.070 --> 00:02:03.220
So, now the string and

33
00:02:03.220 --> 00:02:08.910
all the other object portions of the CSS
are no longer actually in the bundle.

34
00:02:09.940 --> 00:02:13.000
Webpack doesn't bundle those
because the plugin removes them.

35
00:02:14.920 --> 00:02:16.460
And so, yeah, to answer,

36
00:02:16.460 --> 00:02:19.870
I think the question you were gonna ask
is why wouldn't you always see this?

37
00:02:19.870 --> 00:02:22.516
Is that maybe what you're gonna ask, or?

38
00:02:22.516 --> 00:02:26.960
&gt;&gt; Speaker 1: Kind of, I'm looking at this
from a perspective or historical use,

39
00:02:26.960 --> 00:02:31.820
lots of Gulp and Less, and
Webpack is seeming more and

40
00:02:31.820 --> 00:02:35.140
more opinionated on how
everything needs to happen.

41
00:02:35.140 --> 00:02:37.615
&gt;&gt; Kent C Dodds: Sure.
&gt;&gt; Speaker 1: And, it's great for

42
00:02:37.615 --> 00:02:43.009
JavaScript, fine,
I'm having a hard time making that

43
00:02:43.009 --> 00:02:50.030
transition to saying that I also want
Webpack now to handle all of my CSS.

44
00:02:50.030 --> 00:02:54.970
And if it's already in Less, then there's
another transition that's happening there.

45
00:02:54.970 --> 00:03:00.370
So I was just curious as to what
the advantage was if there was one for

46
00:03:00.370 --> 00:03:01.330
performance or anything?

47
00:03:01.330 --> 00:03:02.222
I mean-
&gt;&gt; Kent C Dodds: Yeah, yeah, so

48
00:03:02.222 --> 00:03:05.370
it's not necessarily
a performance advantage.

49
00:03:05.370 --> 00:03:09.580
And once you use the ExtractTextPlugin,
[COUGH] it's also not

50
00:03:09.580 --> 00:03:13.380
a performance disadvantage, it's kind
of the same as far as performance goes.

51
00:03:13.380 --> 00:03:18.320
And the benefit that you get is
explicitness in dependencies.

52
00:03:18.320 --> 00:03:22.386
So, with Gulp and Grant,
building your CSS,

53
00:03:22.386 --> 00:03:27.620
I should have talked about this
a little bit earlier, but.

54
00:03:29.300 --> 00:03:31.840
Well, just to kind of think
about it holistically.

55
00:03:31.840 --> 00:03:35.295
You have components, whether they be
Angular components or React components or

56
00:03:35.295 --> 00:03:36.704
Backbone views, or whatever.

57
00:03:36.704 --> 00:03:41.746
Those things consist of three very,
very important things.

58
00:03:41.746 --> 00:03:45.700
The markdown for them,
whether it be JSX or HTML or

59
00:03:45.700 --> 00:03:50.380
whatever, the CSS used to style them and
the JavaScript used to control behavior.

60
00:03:50.380 --> 00:03:52.340
If you don't have one
of those three things,

61
00:03:52.340 --> 00:03:55.350
then that component is worthless, right?

62
00:03:55.350 --> 00:03:57.160
So, they are, they are coupled.

63
00:03:57.160 --> 00:03:59.540
It's impossible to get away from
the idea that they're coupled.

64
00:03:59.540 --> 00:04:04.706
A lot of people were used to thinking them
like separation of concerns, but it's not

65
00:04:04.706 --> 00:04:09.972
at all separation of concerns concept,
it's more of a separation of technologies.

66
00:04:09.972 --> 00:04:12.948
And that's where React comes in,
they're like yeah,

67
00:04:12.948 --> 00:04:16.220
why not put your markdown
right in the JavaScript file?

68
00:04:16.220 --> 00:04:17.190
Not a big deal, right?

69
00:04:17.190 --> 00:04:19.820
And in fact,
it's got a lot of power to it as well.

70
00:04:19.820 --> 00:04:22.550
And now there's the CSS and
JS movement that's yeah,

71
00:04:22.550 --> 00:04:23.980
why not put your CSS in there?

72
00:04:23.980 --> 00:04:29.460
Because they're already coupled,
just marry them.

73
00:04:29.460 --> 00:04:33.880
And so, yeah, one of the really nice
things that you get from Webpack as

74
00:04:33.880 --> 00:04:38.710
treating these things as modules, is now
you can make, you can make this coupling

75
00:04:38.710 --> 00:04:45.400
explicit, and make these dependencies, so
that you can perform analysis on them.

76
00:04:45.400 --> 00:04:51.050
But even more important in my mind is
they're associated together in code,

77
00:04:51.050 --> 00:04:52.736
and in your brain when
you look at the code.

78
00:04:52.736 --> 00:04:58.263
&gt;&gt; Speaker 1: Is the CSS getting directly
associated with the specific JavaScript in

79
00:04:58.263 --> 00:05:04.735
HTML that you're needing other than what
you're putting into your Webpack file?

80
00:05:04.735 --> 00:05:08.680
&gt;&gt; Kent C Dodds: Good question, so I
mentioned I wasn't going to talk about CSS

81
00:05:08.680 --> 00:05:13.320
modules, but that's one solution
to kind of enforce this.

82
00:05:13.320 --> 00:05:18.900
And so, [COUGH] and
I used to use CSS modules a lot.

83
00:05:18.900 --> 00:05:21.959
I don't use it quite as
much at all anymore, but

84
00:05:21.959 --> 00:05:26.931
one cool thing about CSS modules, all that
you really have to do to turn this on

85
00:05:26.931 --> 00:05:30.627
is in your loader,
you can say modules = true, I think.

86
00:05:30.627 --> 00:05:35.585
Or you can also provide this as an object

87
00:05:35.585 --> 00:05:40.391
where the name, I think, is CSS, and

88
00:05:40.391 --> 00:05:44.770
the query: {modules: true}.

89
00:05:44.770 --> 00:05:47.140
Something like that,
you'll have to look in the docs.

90
00:05:47.140 --> 00:05:52.400
But with that kind of configuration,
then you can start writing

91
00:05:52.400 --> 00:05:58.110
your CSS, well, actually,
this is valid CSS modules.

92
00:05:58.110 --> 00:05:59.870
So, I have this toggle-graph.

93
00:06:02.270 --> 00:06:05.630
And now I can actually import toggleGraph.

94
00:06:05.630 --> 00:06:09.195
And what the value of toggleGraph
will be is the class name that is

95
00:06:09.195 --> 00:06:10.458
actually generated.

96
00:06:10.458 --> 00:06:12.413
So here, we'll say from.

97
00:06:12.413 --> 00:06:16.895
And so now, I can use this somewhere,
if I was creating a class or

98
00:06:16.895 --> 00:06:19.643
something, I could say toggleGraph.

99
00:06:19.643 --> 00:06:22.547
And then just parse it,
and now that dependency,

100
00:06:22.547 --> 00:06:26.281
not only is it explicit in the sense
that I'm importing you, but

101
00:06:26.281 --> 00:06:30.600
it's also explicit in the sense that
I'm importing something from you.

102
00:06:30.600 --> 00:06:32.620
Yeah, super, super powerful.

103
00:06:32.620 --> 00:06:37.970
I really like the CSS and JS movement, but
if you're not doing that, do CSS modules.

104
00:06:38.970 --> 00:06:39.470
Yeah?

105
00:06:39.470 --> 00:06:40.240
&gt;&gt; Speaker 3: So, Angular 2,

106
00:06:40.240 --> 00:06:44.950
you can now import or
actually just write your CSS inline.

107
00:06:44.950 --> 00:06:45.820
&gt;&gt; Kent C Dodds: Yeah.

108
00:06:45.820 --> 00:06:48.180
&gt;&gt; Speaker 3: Is this
extracting it from that, or

109
00:06:48.180 --> 00:06:50.480
does it still have to be in a CSS file?

110
00:06:50.480 --> 00:06:51.610
&gt;&gt; Kent C Dodds: I'm not sure, actually.

111
00:06:51.610 --> 00:06:55.160
I imagine that there will be a solution
for it, because enough people are gonna

112
00:06:55.160 --> 00:06:57.200
be doing that,
that they want to solve this problem.

113
00:06:58.950 --> 00:07:02.500
But I expect that right now,
it's still a problem to be solved.

114
00:07:02.500 --> 00:07:05.450
&gt;&gt; Speaker 3: Okay, cuz when you
say extract text, it's like, yeah,

115
00:07:05.450 --> 00:07:08.140
it's like extracting it from-
&gt;&gt; Kent C Dodds: It's extracting it from

116
00:07:08.140 --> 00:07:08.880
the bundle.

117
00:07:08.880 --> 00:07:13.277
They probably shouldn't have called it
that, because that's like calling it based

118
00:07:13.277 --> 00:07:16.700
off of how it's implemented,
which isn't really right?

119
00:07:16.700 --> 00:07:19.525
Probably should have called based
on what it does for the user.

120
00:07:19.525 --> 00:07:20.190
Yeah?
&gt;&gt; Speaker 4: So,

121
00:07:20.190 --> 00:07:23.000
this might be an artifact of what
we're just talking about, but

122
00:07:23.000 --> 00:07:26.327
looking at those two files.

123
00:07:26.327 --> 00:07:32.546
Styles.app.css, contains
all of styles.vendor.css,

124
00:07:32.546 --> 00:07:36.330
plus the extra toggle stuff.

125
00:07:36.330 --> 00:07:38.450
&gt;&gt; Kent C Dodds: That's not
what I'm seeing in mine.

126
00:07:38.450 --> 00:07:41.870
So, maybe we can look at it later and
see maybe there's something different.

127
00:07:41.870 --> 00:07:45.550
&gt;&gt; Speaker 4: This is
from your extract CSS.

128
00:07:46.710 --> 00:07:49.670
&gt;&gt; Kent C Dodds: So you just
checked out the branch and ran it?

129
00:07:51.830 --> 00:07:53.140
That is interesting.

130
00:07:54.270 --> 00:07:56.440
Well, maybe there's a bug in here,
and I'll fix it.

131
00:07:57.990 --> 00:07:59.670
Meet up with me after,
we'll figure it out.

132
00:07:59.670 --> 00:08:02.340
I'll make sure that it's
working when you all go home.

133
00:08:02.340 --> 00:08:05.314
But yeah, it doesn't do that normally.

134
00:08:05.314 --> 00:08:09.851
[LAUGH] Okay, cool,
yeah, another question?

135
00:08:09.851 --> 00:08:14.322
&gt;&gt; Speaker 5: Did you answer the question,
can we have two ExtractTextPlugins for

136
00:08:14.322 --> 00:08:15.564
both SASS and CSS?

137
00:08:15.564 --> 00:08:16.560
&gt;&gt; Kent C Dodds: Yeah, good question.

138
00:08:16.560 --> 00:08:21.648
So, I haven't tried this,
but I have had multiple

139
00:08:21.648 --> 00:08:26.120
loaders for CSS, and
doing something like this.

140
00:08:26.120 --> 00:08:30.350
If you were to do exactly what I just
did where you copy one and paste it,

141
00:08:30.350 --> 00:08:34.315
where you have two loaders that have
a test that matched the same file,

142
00:08:34.315 --> 00:08:39.370
what you're gonna have is double loading,
and that can do some really weird things.

143
00:08:39.370 --> 00:08:41.610
So, it probably would break.

144
00:08:41.610 --> 00:08:45.520
So yeah, you want to make sure
that if you are double loading,

145
00:08:45.520 --> 00:08:47.376
that's not necessarily a problem.

146
00:08:47.376 --> 00:08:52.130
For example,
if you wanted to use the eslint loader,

147
00:08:52.130 --> 00:08:56.220
then you could do this, that would
totally work and be totally fine.

148
00:08:56.220 --> 00:08:59.500
Probably better to just do this instead,

149
00:08:59.500 --> 00:09:03.800
have it run through eslint and
then the babel loader.

150
00:09:03.800 --> 00:09:09.061
But yeah, you could probably have one was

151
00:09:09.061 --> 00:09:14.030
like .css and a .sass, or whatever.

152
00:09:14.030 --> 00:09:18.540
And then that would go through the,
well, actually,

153
00:09:18.540 --> 00:09:23.110
you'd have a couple loaders here, and
one of them would be the SASS loader, and

154
00:09:23.110 --> 00:09:26.560
the other would be CSS.

155
00:09:26.560 --> 00:09:28.261
And then that would be loaders.

156
00:09:28.261 --> 00:09:29.402
&gt;&gt; Speaker 4: Other way around,
[INAUDIBLE]

157
00:09:29.402 --> 00:09:30.682
&gt;&gt; [INAUDIBLE]

158
00:09:30.682 --> 00:09:31.874
&gt;&gt; Kent C Dodds: Yes, you're right,

159
00:09:31.874 --> 00:09:32.885
other way around.

160
00:09:32.885 --> 00:09:37.690
Don't look at the man behind the curtain,
yeah, be something like this.

161
00:09:37.690 --> 00:09:41.963
I expect, yeah, good question.

162
00:09:46.828 --> 00:09:50.890
&gt;&gt; Kent C Dodds: So, yeah, and Scott L is
asking if anything would be in vendor?

163
00:09:50.890 --> 00:09:55.413
And yeah, this has all of the common
CSS for like to do in MVC apps,

164
00:09:55.413 --> 00:09:58.110
I mean MP4 that we had before.

165
00:09:58.110 --> 00:10:03.603
So, it basically has
the content of this file.

166
00:10:03.603 --> 00:10:07.083
It's pretty much,
I think that's all that it has,

167
00:10:07.083 --> 00:10:11.686
based off of our entry, where the vendor,
it's just that one file.

