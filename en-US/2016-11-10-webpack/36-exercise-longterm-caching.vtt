WEBVTT

1
00:00:00.000 --> 00:00:03.898
[MUSIC]

2
00:00:03.898 --> 00:00:07.750
&gt;&gt; Kent C Dodds: Right now, we have this
chunk cache that looks to be unique.

3
00:00:07.750 --> 00:00:11.640
Unfortunately, when I change the code for

4
00:00:11.640 --> 00:00:17.020
one module, it actually changes
the chunk cache, for all of my bundles.

5
00:00:17.020 --> 00:00:20.950
Which is really frustrating, and
there's a reason for that, and

6
00:00:20.950 --> 00:00:22.360
it's that all of these.

7
00:00:24.340 --> 00:00:29.530
Every single one of these bundles,
actually shares code that gets changed,

8
00:00:29.530 --> 00:00:32.350
because the chunk cache ID's change.

9
00:00:32.350 --> 00:00:34.300
And so for these bundles to be
able to talk to each other,

10
00:00:34.300 --> 00:00:37.260
they need to know the ID's of one another.

11
00:00:37.260 --> 00:00:38.680
And so it breaks everything.

12
00:00:38.680 --> 00:00:43.530
And so you need to extract to that shared
piece of logic, to something else and

13
00:00:43.530 --> 00:00:46.800
that's what we're gonna
do in this next section.

14
00:00:47.980 --> 00:00:49.330
This used to take like.

15
00:00:50.500 --> 00:00:53.991
This used to be really hard and
now, it's quite easy to do.

16
00:00:53.991 --> 00:00:58.250
So we'll look at that next,
then we also have extract CSS.

17
00:00:58.250 --> 00:01:03.600
So if you want to cache your CSS file,
then you can, because right now.

18
00:01:03.600 --> 00:01:08.100
Remember we have it being and
injected, dynamically into the DOM,

19
00:01:08.100 --> 00:01:09.920
if you wanted to have an actual CSS file.

20
00:01:09.920 --> 00:01:12.939
This actually will solve our
thrashing issue, that we have.

21
00:01:12.939 --> 00:01:16.220
And the reason why we have to load stuff,
into the head.

22
00:01:16.220 --> 00:01:17.830
So we can actually solve that problem.

23
00:01:18.876 --> 00:01:23.540
Now we're gonna talk about offline, with
the offline plug, and that's pretty short,

24
00:01:23.540 --> 00:01:25.350
and it's pretty amazing.

25
00:01:25.350 --> 00:01:27.090
It's really, really cool.

26
00:01:27.090 --> 00:01:28.940
That was pretty quick and
then we're gonna deploy.

27
00:01:28.940 --> 00:01:31.960
So this is the and then we have resources.

28
00:01:31.960 --> 00:01:35.575
So we're pretty close to being there,

29
00:01:35.575 --> 00:01:40.611
let's just actually get
an example of this, if I go and

30
00:01:40.611 --> 00:01:48.585
run an npm run build:dev.
&gt;&gt; Kent C Dodds: And,

31
00:01:48.585 --> 00:01:52.219
actually sorry,
let's get everybody on the same page.

32
00:01:54.030 --> 00:01:57.420
This is the branch I want to check out,
to get on the same page as us.

33
00:01:57.420 --> 00:02:02.849
It's FEM/06.0-commons-chunk.

34
00:02:06.262 --> 00:02:08.186
&gt;&gt; Kent C Dodds: It looks like,

35
00:02:08.186 --> 00:02:11.448
somehow I have diverged.

36
00:02:11.448 --> 00:02:14.030
I probably forgot to force push,
something for y'all.

37
00:02:15.720 --> 00:02:18.089
So might be a little different.

38
00:02:18.089 --> 00:02:23.505
I'm not sure what that might be but,
here let me just see something

39
00:02:23.505 --> 00:02:30.006
really quick.
&gt;&gt; Kent C Dodds: So

40
00:02:30.006 --> 00:02:33.755
this is the diff,
of our most recent command.

41
00:02:33.755 --> 00:02:39.098
I'm not sure what changed, so sorry,
but I'm sure it doesn't matter.

42
00:02:39.098 --> 00:02:41.405
[LAUGH]
&gt;&gt; Speaker 2: [LAUGH]

43
00:02:41.405 --> 00:02:42.885
&gt;&gt; Kent C Dodds: Okay, I'll

44
00:02:42.885 --> 00:02:45.745
make sure that I look at it later and
if it is important,

45
00:02:45.745 --> 00:02:48.270
then I'll make sure to push it
,so you all can look at it later.

46
00:02:48.270 --> 00:02:50.980
So, let's take a look at this problem.

47
00:02:50.980 --> 00:02:52.885
So we have our, in our disk directory.

48
00:02:52.885 --> 00:02:58.380
Hold it, mpm run build:dev.

49
00:02:58.380 --> 00:03:00.610
And dev, it doesn't actually
use the chunk cache, so

50
00:03:00.610 --> 00:03:03.190
we need to do the actual
build to show the problem.

51
00:03:03.190 --> 00:03:07.820
Unfortunately that takes a couple seconds,
but I'm gonna go ahead and open up.

52
00:03:07.820 --> 00:03:11.810
The app folder and in here, let's say.

53
00:03:11.810 --> 00:03:15.620
I want to console.log ('foo') right here,

54
00:03:15.620 --> 00:03:18.780
we'll go to the directory tree and
look at that.

55
00:03:18.780 --> 00:03:24.450
So just remember this in your mind,
that app js, is 4234.

56
00:03:24.450 --> 00:03:30.519
That's just how it starts and vendor is,
21E33, so then if I saved app js and

57
00:03:30.519 --> 00:03:36.506
rerun the build.
&gt;&gt; Kent C Dodds: [SOUND] Jokes,

58
00:03:36.506 --> 00:03:41.690
[LAUGH] then we open this up, different

59
00:03:41.690 --> 00:03:46.860
number both of them are different.

60
00:03:46.860 --> 00:03:49.790
So it's good,
the app is different,vendor is different.

61
00:03:49.790 --> 00:03:51.510
That is not what we want it all.

62
00:03:51.510 --> 00:03:56.030
And again it's because, these things all
of these things are actually sharing code

63
00:03:56.030 --> 00:04:00.080
between each other, so
that they know the different ID's.

64
00:04:00.080 --> 00:04:03.200
And so we need to take that
idea to Montreal mapping and

65
00:04:03.200 --> 00:04:08.740
put it in a separate place, that's
totally outside of all of the bundles.

66
00:04:08.740 --> 00:04:12.010
So that they can all just reference that.

67
00:04:12.010 --> 00:04:15.240
So basically what this mapping is,
what we're about to do.

68
00:04:15.240 --> 00:04:19.915
Is it's going to take the mapping
it's just an object that has all

69
00:04:19.915 --> 00:04:22.920
of the references to the modules.

70
00:04:22.920 --> 00:04:26.380
And it's,
we're going to inline it into our HTML.

71
00:04:26.380 --> 00:04:29.062
And so this is yet another reason
why it's awesome to have this HTML,

72
00:04:29.062 --> 00:04:33.950
Webpack plugin,
because it'll take care of this.

73
00:04:33.950 --> 00:04:38.380
Problem for us and it's so much,
easier than it used to be.

74
00:04:38.380 --> 00:04:43.770
So the first thing that we're
gonna need is a plugin,

75
00:04:43.770 --> 00:04:46.450
that is called,
we'll put it somewhere in here.

76
00:04:48.350 --> 00:04:51.710
Like I said, normally you'd install
this just with npm install.

77
00:04:51.710 --> 00:04:55.377
But it's the inline manifest.

78
00:04:55.377 --> 00:04:55.877
&gt;&gt; Speaker 2: [LAUGH]

79
00:04:55.877 --> 00:05:03.201
&gt;&gt; Kent C Dodds:
Inline-manifest-webpack-plug in.

80
00:05:03.201 --> 00:05:08.486
And it's 3.0.1, is the plug

81
00:05:08.486 --> 00:05:14.408
in that we're gonna use.
&gt;&gt; Kent C Dodds: Or

82
00:05:14.408 --> 00:05:17.720
the version of the plugin and then.

83
00:05:19.244 --> 00:05:22.860
And then we just use it in our Webpack
config, so lemme hide that thing.

84
00:05:24.480 --> 00:05:29.195
So I'll go to the top of our config here,
const and

85
00:05:29.195 --> 00:05:34.924
it's InLineManifestWebpackPlugin
require ( 'inLine-

86
00:05:34.924 --> 00:05:41.365
manifest-webpack plugin').
&gt;&gt; Kent C Dodds: One

87
00:05:41.365 --> 00:05:44.605
of my favorite Adam plugins you're asking,
other,

88
00:05:44.605 --> 00:05:48.216
somebody is the one that auto
completes my packages for me.

89
00:05:48.216 --> 00:05:50.070
Yeah, that one's awesome.

90
00:05:50.070 --> 00:05:54.348
And it does more than that and also like,
I will do other files as well.

91
00:05:54.348 --> 00:05:56.462
So what?

92
00:05:56.462 --> 00:05:58.037
Snap.

93
00:05:58.037 --> 00:06:00.291
Love it.

94
00:06:00.291 --> 00:06:04.835
So then we're gonna take that plug-in and
this is one,

95
00:06:04.835 --> 00:06:08.324
that we actually only
want in prod as well.

96
00:06:08.324 --> 00:06:11.320
So we're gonna say ifProd.

97
00:06:12.730 --> 00:06:16.850
We're gonna take a (new
LineManifestWebpackPlugin()).

98
00:06:18.030 --> 00:06:22.840
And then we're gonna do something fancy
with, this CommonsChunksPlugin, because.

99
00:06:22.840 --> 00:06:25.510
This is going to create a chunk for
us, called manifest.

100
00:06:26.710 --> 00:06:32.290
And so we're going to turn this
into an array of entries or

101
00:06:32.290 --> 00:06:37.735
chunks, that we want to have separate and
we're gonna add manifest to that.

102
00:06:39.260 --> 00:06:42.386
And then actually
the InlineManifestwebpackPlugin,

103
00:06:42.386 --> 00:06:44.787
integrates with the HTML Webpack plugin.

104
00:06:44.787 --> 00:06:52.435
To say I want you to inline this code ,or
this JavaScript code into the index HTML.

105
00:06:52.435 --> 00:06:57.807
And all that JavaScript code is setting

106
00:06:57.807 --> 00:07:03.200
a global variable, for that mapping.

107
00:07:03.200 --> 00:07:06.500
So actually there is yet
one more thing that we need to do, for

108
00:07:06.500 --> 00:07:08.690
that magic to happen.

109
00:07:08.690 --> 00:07:11.980
And that is to update our template,
or index HTML template.

110
00:07:13.330 --> 00:07:16.490
So we're gonna want this
right at the top of our file.

111
00:07:16.490 --> 00:07:22.260
And by default the HTML Webpack
plugin uses something called the EJS,

112
00:07:22.260 --> 00:07:27.370
as the template syntax, so
here this is all just like regular HTML.

113
00:07:27.370 --> 00:07:32.970
It's actually template and so
we can utilize that template stuff,

114
00:07:32.970 --> 00:07:35.200
if we know how to use that.

115
00:07:35.200 --> 00:07:38.150
I don't use this template language ever.

116
00:07:38.150 --> 00:07:46.900
But right now I am and we'll say
htmlWebpackPlugin.files.webpackManifest.

117
00:07:46.900 --> 00:07:50.050
So this is all like, reading the docs and
pretty much copying stuff.

118
00:07:51.650 --> 00:07:55.760
I can't really explain why that's,
what it's called but that's.

119
00:07:55.760 --> 00:07:58.179
This is just kind of a copy paste,
from docs and it works great.

120
00:07:59.750 --> 00:08:02.320
So basically, in this template,

121
00:08:02.320 --> 00:08:06.430
it's compiled with an object that has
html webpack plugin and it files on it.

122
00:08:06.430 --> 00:08:11.640
And then the inline webpack
manifest plugin thing,

123
00:08:11.640 --> 00:08:16.180
adds an item onto the files array,
called webpackManifest.

124
00:08:16.180 --> 00:08:17.570
So you're gonna inline it right there.

125
00:08:19.180 --> 00:08:24.235
Okay, so with that,
now you can run the build

126
00:08:24.235 --> 00:08:30.621
and.
&gt;&gt; Kent C Dodds: I

127
00:08:30.621 --> 00:08:32.287
should have like pulled react and

128
00:08:32.287 --> 00:08:36.540
D3 out of this, so it wouldn't take so
long to minify all that stuff.

129
00:08:36.540 --> 00:08:41.490
But if you look at the resulting index
HTML, you're gonna see a script tag right

130
00:08:41.490 --> 00:08:47.030
here that has the minified runtime for
Webpack.

131
00:08:47.030 --> 00:08:50.850
As well as the mapping that's in line,
into that runtime.

132
00:08:52.390 --> 00:08:57.106
There's the mapping right there.
&gt;&gt; Kent C Dodds: And

133
00:08:57.106 --> 00:09:02.466
this has like, so this is responsible for
the Webpack JSON P thing,

134
00:09:02.466 --> 00:09:05.768
that will asynchronously load modules.

135
00:09:05.768 --> 00:09:08.570
As well as everything else
that Webpack does for us.

136
00:09:08.570 --> 00:09:11.692
So now bundle.vendor and bundle.app,

137
00:09:11.692 --> 00:09:16.160
contain only the code that's necessary for
them to exist.

138
00:09:17.220 --> 00:09:21.650
For them to, like only the code
that we have in those files, so

139
00:09:21.650 --> 00:09:24.220
if we like a bundle.app,
well, good luck with that.

140
00:09:25.370 --> 00:09:27.690
But believe me, that's what's happening.

141
00:09:27.690 --> 00:09:31.890
So now if I go back here and

142
00:09:31.890 --> 00:09:35.834
do, open up the source.app directory.

143
00:09:37.400 --> 00:09:41.530
And then I and this console.log ('foo').

144
00:09:41.530 --> 00:09:45.730
So I've made a change to the app,
you would expect that the app,

145
00:09:45.730 --> 00:09:50.410
is the only one that has a change
in the ID we can actually.

146
00:09:50.410 --> 00:09:53.970
We don't have to memorize any numbers,
we can actually see what it will be or

147
00:09:53.970 --> 00:09:55.490
compare right here.

148
00:09:55.490 --> 00:10:00.710
So if I run this again I'll
silent npn output as well.

149
00:10:00.710 --> 00:10:06.754
So we have.
&gt;&gt; Kent C Dodds: So

150
00:10:06.754 --> 00:10:11.460
with before, we had app 749 and

151
00:10:11.460 --> 00:10:16.326
vendor is 8F1, so vendor is still

152
00:10:16.326 --> 00:10:21.070
8F1 and app is no longer 749.

153
00:10:21.070 --> 00:10:26.968
Exactly what we want and
now we can configure our server to say,

154
00:10:26.968 --> 00:10:29.873
every asset is cache forever.

155
00:10:29.873 --> 00:10:33.903
And so we don't need to worry about,
setting timings or

156
00:10:33.903 --> 00:10:37.346
having browsers with old
versions of our code.

157
00:10:37.346 --> 00:10:41.439
All of those worries just,
kind of go away and

158
00:10:41.439 --> 00:10:49.100
we can start having webpack update our
index.html, anytime something changes.

159
00:10:49.100 --> 00:10:52.540
And the index.html is never cached,
per the browser spec.

160
00:10:54.210 --> 00:10:57.400
So any questions about all that magic,
that just happened.

161
00:10:58.810 --> 00:10:59.575
I call it magic,

162
00:10:59.575 --> 00:11:04.561
because that's exactly what it is.
&gt;&gt; Kent C Dodds: Okay,

163
00:11:04.561 --> 00:11:06.800
hopefully at least,
what it's doing is making sense.

164
00:11:08.320 --> 00:11:11.040
I know that in the pre event survey,
some of you.

165
00:11:11.040 --> 00:11:14.010
It sounded like you kind of knew,
more a lot of this stuff.

166
00:11:14.010 --> 00:11:17.720
But just didn't know,
what it was doing, or how, or why.

167
00:11:17.720 --> 00:11:19.960
So hopefully you're getting some of that,

168
00:11:19.960 --> 00:11:21.940
out of this maybe.

169
00:11:21.940 --> 00:11:24.586
&gt;&gt; Speaker 2: Yes.
&gt;&gt; Kent C Dodds: Just say yes,

170
00:11:24.586 --> 00:11:25.146
to make me feel it.

171
00:11:25.146 --> 00:11:26.504
&gt;&gt; Speaker 2: [CROSSTALK]
&gt;&gt; Kent C Dodds: [LAUGH]

