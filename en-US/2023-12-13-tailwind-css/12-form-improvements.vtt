WEBVTT

1
00:00:00.120 --> 00:00:04.370
So we had this one issue before, which
I just think is just a not an us issue.

2
00:00:04.370 --> 00:00:09.803
I think it is more of a either
IntelliSense slash TypeScript issue slash

3
00:00:09.803 --> 00:00:14.873
whatever issue, which is,
we do know that we could take a color and

4
00:00:14.873 --> 00:00:20.050
do that slash syntax to get opacity of it,
so like doing slash 30.

5
00:00:20.050 --> 00:00:24.595
However, despite the fact that I had
never tried to do slash current and

6
00:00:24.595 --> 00:00:30.231
then it had at one point recommended, you
can do one of these, these aren't real.

7
00:00:30.231 --> 00:00:31.441
When you try it for

8
00:00:31.441 --> 00:00:35.974
the very first time live streaming
you get embarrassed by things.

9
00:00:35.974 --> 00:00:40.960
But the syntax for a color and
during that slash to get

10
00:00:40.960 --> 00:00:46.300
the opacity is very real,
just not on current, right.

11
00:00:46.300 --> 00:00:51.787
And it makes sense to me because if
you look at what the slash 30 does,

12
00:00:51.787 --> 00:00:56.470
is it takes that hex value makes
it an RGB a and puts a 0.3.

13
00:00:56.470 --> 00:01:01.489
And I don't know how you
would do current which is

14
00:01:01.489 --> 00:01:06.998
not like if you check out big
current that is literally

15
00:01:06.998 --> 00:01:11.772
a CSS property right that
is a CSS thing that you

16
00:01:11.772 --> 00:01:16.563
couldn't make an RGBA
because it's a value.

17
00:01:16.563 --> 00:01:21.167
So I think tailwind maybe the types of
the IntelliSense thought I could do it but

18
00:01:21.167 --> 00:01:22.440
it couldn't.

19
00:01:22.440 --> 00:01:27.021
So that's however, I could theoretically
set a VGA opacity to 60 and

20
00:01:27.021 --> 00:01:29.320
get the same effect, right?

21
00:01:29.320 --> 00:01:34.730
But I do need to do it in two
statements in this case, right?

22
00:01:34.730 --> 00:01:39.039
So we all learned that together the hard
way, not my favorite way to learn about

23
00:01:39.039 --> 00:01:43.494
a Edge cases and bugs and the frameworks
that I use but you know we're here for it.

24
00:01:43.494 --> 00:01:48.336
Cool, so we talked about a lot of these
and like I will leave most of these

25
00:01:48.336 --> 00:01:53.190
as an exercise to the reader there
are even more than this as well.

26
00:01:53.190 --> 00:01:58.160
And like I said, there are other ones that
are not related to stuff like form state,

27
00:01:58.160 --> 00:01:58.790
right?

28
00:01:58.790 --> 00:02:04.880
There is first of type, like a bunch
of the other pseudo selectors from CSS.

29
00:02:05.890 --> 00:02:11.583
Roughly speaking, if it is in CSS,
it is in Tailwind with one caveat,

30
00:02:11.583 --> 00:02:17.581
which is, if it is really in CSS,
right, if it has wide browser support.

31
00:02:17.581 --> 00:02:20.729
There are certain things we're going to
see a little bit later that you can't

32
00:02:20.729 --> 00:02:23.055
technically do,
not because Tailwind can't do them but

33
00:02:23.055 --> 00:02:26.800
because like browser support isn't there,
so tailwind chooses not to do them.

34
00:02:26.800 --> 00:02:30.222
Could one either build a plugin and

35
00:02:30.222 --> 00:02:35.330
some post CSS and or
make some choices around it?

36
00:02:35.330 --> 00:02:39.646
Absolutely, and
while we're talking about like, yeah,

37
00:02:39.646 --> 00:02:44.132
at least community plugins in this case,
right, we can say,

38
00:02:44.132 --> 00:02:47.850
if we go to the tailwind
site we go to the docs.

39
00:02:47.850 --> 00:02:52.440
There have been and
are in the past official plugins.

40
00:02:52.440 --> 00:02:57.180
And a lot of these official plugins
are ones that use polyfills.

41
00:02:57.180 --> 00:02:59.920
Like container queries I
think now has support.

42
00:02:59.920 --> 00:03:02.950
And aspect ratio I believe was
in there at one point as well.

43
00:03:02.950 --> 00:03:07.140
But now it's got wide enough support
it can actually can rely on the CSS.

44
00:03:07.140 --> 00:03:10.744
So a lot of times for
things that are kind of their thing,

45
00:03:10.744 --> 00:03:15.820
they're very much like we see in
JavaScript and TypeScript with decorators.

46
00:03:15.820 --> 00:03:19.080
Right, where it's like there are things
that once they hit stage three,

47
00:03:19.080 --> 00:03:22.342
it's maybe okay to polyfill them
because the spec isn't gonna change but

48
00:03:22.342 --> 00:03:24.870
they don't have the wide
browser support yet.

49
00:03:24.870 --> 00:03:31.789
So in those cases, if one needed,
the latest and greatest future CSS stuff,

50
00:03:31.789 --> 00:03:38.176
then, theoretically some combination
of perhaps a post CSS plugin and

51
00:03:38.176 --> 00:03:44.030
or a TypeScript or
tailwind plugin would get you there too.

52
00:03:44.030 --> 00:03:49.015
But with all that stuff, there's a certain
level of risk involved, right, and

53
00:03:49.015 --> 00:03:50.330
so, yeah.

54
00:03:50.330 --> 00:03:53.480
So we've got all of these like I said,
some of them will show up later.

55
00:03:53.480 --> 00:03:56.615
Some of them I'm going to leave as,
like, an exercise for the reader,

56
00:03:56.615 --> 00:03:59.806
is it really worth our time to get
into the details of styling something,

57
00:03:59.806 --> 00:04:01.290
an indeterminate checkbox?

58
00:04:01.290 --> 00:04:02.790
Probably not, right?

59
00:04:02.790 --> 00:04:04.964
You can take a lucky guess
what out-of-range and

60
00:04:04.964 --> 00:04:06.996
in-range does on a range slider,
all right.

61
00:04:06.996 --> 00:04:12.357
These are all things they again these
are not they we get tailwind variants for

62
00:04:12.357 --> 00:04:14.088
them so we can use them but

63
00:04:14.088 --> 00:04:18.560
they are effectively just the same
as the pseudo class, right?

64
00:04:18.560 --> 00:04:22.720
If you want to know how
to use them what they do.

65
00:04:22.720 --> 00:04:27.703
That said, there are a bunch of
little things that we can do,

66
00:04:27.703 --> 00:04:30.733
that again are all CSS effectively,

67
00:04:30.733 --> 00:04:36.890
they're just things that Tailwind
tends to make really easy for us.

68
00:04:36.890 --> 00:04:41.732
And so we use some very simple variants
when we were still on our form before, but

69
00:04:41.732 --> 00:04:44.530
we still have some little weirdities.

70
00:04:44.530 --> 00:04:49.707
If I scroll in, you can kinda see
that I get like the kind of MacOS

71
00:04:49.707 --> 00:04:54.790
glow around my input field which
looks a little bit weird and,

72
00:04:54.790 --> 00:05:01.250
I will say that over the years, MacOS
has toned it down a little bit, right.

73
00:05:01.250 --> 00:05:06.032
I am old enough to remember
when my calendar app smells of

74
00:05:06.032 --> 00:05:11.320
rich mahogany and
looks like fine leather bound volumes.

75
00:05:11.320 --> 00:05:12.700
And so that's the amount.

76
00:05:12.700 --> 00:05:14.852
And I actually have mine set to graphite,
so

77
00:05:14.852 --> 00:05:17.770
you might have a little more
of a bluey hue to yours.

78
00:05:17.770 --> 00:05:20.890
And maybe we don't want that, right?

79
00:05:20.890 --> 00:05:23.810
And so we can switch it to outline none.

80
00:05:23.810 --> 00:05:26.280
And you can see my border changes
color a little bit on this one.

81
00:05:26.280 --> 00:05:29.010
Cuz I have, if you look,
I've got some of these variants.

82
00:05:29.010 --> 00:05:30.559
I've got border purple and

83
00:05:30.559 --> 00:05:33.800
I've got I got focus where we
make it a little bit darker.

84
00:05:33.800 --> 00:05:37.550
So focus is when it's focused, right?

85
00:05:37.550 --> 00:05:42.056
And doing that outline,
none will get rid of the OS

86
00:05:42.056 --> 00:05:46.360
level like colors and
stuff along those lines.

87
00:05:46.360 --> 00:05:49.471
And so if you want something where
you kind of looks more like you want,

88
00:05:49.471 --> 00:05:52.850
you've got some little niceties that
you can bring in there as well.

89
00:05:52.850 --> 00:05:56.560
There's also the ring
set of classes as well.

90
00:05:56.560 --> 00:06:00.160
And so this gives you the outline
none will allow you to take it away.

91
00:06:00.160 --> 00:06:04.599
And then ring kind of gives you
something kind of similar where I

92
00:06:04.599 --> 00:06:08.640
can set it to purple on focused and
see it in there as well.

93
00:06:08.640 --> 00:06:13.320
So, you can kind of get a little bit
more custom the way you want as well.

94
00:06:13.320 --> 00:06:14.770
We've got the disabled ones.

95
00:06:16.680 --> 00:06:17.920
They can't be focused.

96
00:06:17.920 --> 00:06:21.300
So I can leave the focus class
on there and not worry about it.

97
00:06:21.300 --> 00:06:25.436
Like we saw before, because I was changing
the opacity on hover, opacity on disabled

98
00:06:25.436 --> 00:06:29.120
and background color on hover, but
these are now going for the same things.

99
00:06:29.120 --> 00:06:30.950
You cannot focus a disabled field.

100
00:06:30.950 --> 00:06:33.830
So I can build up this stack of classes.

101
00:06:33.830 --> 00:06:38.607
And again, it's nice especially if you're
using it in like something like JSX or

102
00:06:38.607 --> 00:06:43.249
svelte or view because you then you can
look at the component see everything very

103
00:06:43.249 --> 00:06:47.351
clearly of what's going on and
change it all like kind of in one place.

104
00:06:47.351 --> 00:06:51.542
And you don't end up like because we're
just working regulation now there will be

105
00:06:51.542 --> 00:06:54.890
times where I make the same
change to four input fields.

106
00:06:54.890 --> 00:06:57.736
That's a place where if I
didn't have a framework,

107
00:06:57.736 --> 00:07:01.190
I might put it in that components layer or
that utilities.

108
00:07:01.190 --> 00:07:05.149
I'll be very honest with you,
the most of the impetus of why I do these

109
00:07:05.149 --> 00:07:09.630
days is when I'm sharing styles between
our Svelte app and our React app.

110
00:07:09.630 --> 00:07:13.870
Generally speaking, if I was just in
one of those it doesn't come up for

111
00:07:13.870 --> 00:07:15.080
me as much, right?

112
00:07:15.080 --> 00:07:18.417
So if that kind of makes you feel
a little, I don't know about that,

113
00:07:18.417 --> 00:07:20.480
don't worry about it, you'll be okay.

114
00:07:21.590 --> 00:07:24.040
If you need it, you know you need it.

115
00:07:24.040 --> 00:07:25.650
So we can also sell the placeholder text.

116
00:07:25.650 --> 00:07:28.400
And again,
this all becomes super easy, right?

117
00:07:28.400 --> 00:07:33.156
And because a lot of times in CSS,
sometimes the property names get some

118
00:07:33.156 --> 00:07:38.069
really like funky names that is really
hard to remember it is kind of having

119
00:07:38.069 --> 00:07:42.960
a little bit of a reset on naming
conventions because like CSS is old.

120
00:07:42.960 --> 00:07:44.310
So it was JavaScript.

121
00:07:44.310 --> 00:07:47.640
And having a little bit of
a reset there makes life easier.

122
00:07:47.640 --> 00:07:49.058
So here I can actually style,

123
00:07:49.058 --> 00:07:52.360
the kind of kind of color of
the placeholder text as well.

124
00:07:52.360 --> 00:07:54.670
And there are a few
other things you can do.

125
00:07:54.670 --> 00:07:59.554
And again, I would just encourage
you in these situations,

126
00:07:59.554 --> 00:08:05.229
you can do stuff like,
[SOUND] input here, that's the check box.

127
00:08:05.229 --> 00:08:07.520
Let's, we're playing
around some other stuff.

128
00:08:07.520 --> 00:08:10.730
There was a question of like,
can you group a bunch of the variants?

129
00:08:10.730 --> 00:08:13.392
And we found a blog post,
it made it seem like you could, but

130
00:08:13.392 --> 00:08:16.500
it was one of those wish list blog posts,
so you can't.

131
00:08:16.500 --> 00:08:20.954
But we looked it up, and so that said,

132
00:08:20.954 --> 00:08:27.230
could one theoretically
put some plugins together?

133
00:08:27.230 --> 00:08:28.570
Perhaps, should you?

134
00:08:28.570 --> 00:08:29.620
I don't know.

135
00:08:29.620 --> 00:08:34.180
So with place holder, no space.

136
00:08:34.180 --> 00:08:35.280
There we go.

137
00:08:35.280 --> 00:08:38.230
You can kind of see it looks mostly for
the point we've got all the colors.

138
00:08:38.230 --> 00:08:42.928
I don't think there's a lot more you
can do with it in terms of the text

139
00:08:42.928 --> 00:08:47.711
we'll talk about groups appears in
a little bit those are super cool.

140
00:08:47.711 --> 00:08:50.824
But yeah and they also the caret,
so that's the it's

141
00:08:50.824 --> 00:08:55.273
kind of hard to see these days but I can
style the actual blinking cursor as well.

142
00:08:55.273 --> 00:09:00.682
So I can a little things that they kind of
make things a little bit nicer, right, and

143
00:09:00.682 --> 00:09:05.859
they're all very very easy to do the other
one that I really like is this accent,

144
00:09:05.859 --> 00:09:09.722
right, and so now it'll be purple
instead of gray on mine or

145
00:09:09.722 --> 00:09:14.260
blue by default on MacOS I think you
can change it to other colors now.

146
00:09:14.260 --> 00:09:15.760
Mine's always been gray forever.

147
00:09:15.760 --> 00:09:19.400
But yeah, you can do these access to the
carets and the placeholders and the rings.

148
00:09:19.400 --> 00:09:23.500
And it's very easy to like just string
these together and have them in place.

149
00:09:23.500 --> 00:09:24.708
And they kind of, I think,

150
00:09:24.708 --> 00:09:28.360
add that little extra layer that also
works on a radio button as well.

151
00:09:28.360 --> 00:09:33.157
And then you can do interesting
things we saw on that list

152
00:09:33.157 --> 00:09:35.820
before like invalid, right?

153
00:09:35.820 --> 00:09:39.399
So this is an email, and so
now if there's something in there and

154
00:09:39.399 --> 00:09:43.370
it's not valid, we can have it turn red,
so on and so forth.

155
00:09:43.370 --> 00:09:48.430
And this is it's always
a little like squirrely though

156
00:09:48.430 --> 00:09:54.150
because theoretically that's
the email is fine on that one.

157
00:09:54.150 --> 00:09:57.610
If I put something not valid, it'll work.

158
00:09:57.610 --> 00:10:02.457
It's required ones become interesting
because they they're instantly invalid

159
00:10:02.457 --> 00:10:07.200
insofar that they're empty so
you have to begin to string it together.

160
00:10:07.200 --> 00:10:09.850
So there's there's stuff you
can do along those lines.

161
00:10:09.850 --> 00:10:12.820
You can also change the cursor,
all right, very easily.

162
00:10:12.820 --> 00:10:16.410
If you look here it is simply
disabled cursor not allowed.

163
00:10:16.410 --> 00:10:20.884
And again, with the IntelliSense
the nice part is you don't really

164
00:10:20.884 --> 00:10:23.170
have to look anything up, right.

165
00:10:23.170 --> 00:10:26.435
If I wanted to change the cursor
to something else, right, and

166
00:10:26.435 --> 00:10:29.660
I can do it on basically any DOM node,
not just an input.

167
00:10:29.660 --> 00:10:34.165
That's just where we've done it so far,
usually the right answer at that point

168
00:10:34.165 --> 00:10:38.920
is just say, cursor and I can see all
the various different options that I have.

169
00:10:38.920 --> 00:10:44.500
I look for other fun ones that I thought
might be nice to do but honestly,

170
00:10:44.500 --> 00:10:49.460
they were all the most
straightforward one is not allowed.

171
00:10:49.460 --> 00:10:52.571
Or if you wanna have something
that is acting like a button and

172
00:10:52.571 --> 00:10:56.100
give it thought of clicky finger,
stuff along those lines.

173
00:10:56.100 --> 00:11:00.072
Nobody really appreciates too much
innovation in changing their cursor on

174
00:11:00.072 --> 00:11:00.900
them, right?

175
00:11:00.900 --> 00:11:05.580
So I'll show you how to do it, but
please don't get carried away.

176
00:11:05.580 --> 00:11:07.830
Technically, there's no reason
why you couldn't do it.

177
00:11:07.830 --> 00:11:10.167
But as somebody who might use your app,
please don't.

