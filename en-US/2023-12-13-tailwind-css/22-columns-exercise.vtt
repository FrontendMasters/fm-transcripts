WEBVTT

1
00:00:00.180 --> 00:00:04.713
Your job is to play around
with the number of columns or

2
00:00:04.713 --> 00:00:08.560
the size of columns and
just get a feel for it.

3
00:00:08.560 --> 00:00:13.540
And we are accidentally going to stumble
upon a problem that we will deal with as

4
00:00:13.540 --> 00:00:17.400
you solve this that we'll then like,
it's called a segue.

5
00:00:21.175 --> 00:00:28.260
We can play around with this a little bit,
and what we can do is we can go ahead,

6
00:00:28.260 --> 00:00:33.383
and actually playing with
the columns is not that hard.

7
00:00:33.383 --> 00:00:38.143
And the nice part is you can see how many
you can have, like an egregious number.

8
00:00:42.277 --> 00:00:47.509
But the more interesting part is,
actually 5 looks kinda cool.

9
00:00:47.509 --> 00:00:53.520
The interesting part is
the breaking of the columns.

10
00:00:53.520 --> 00:00:58.668
Now to be clear, if I was thinking about
a newspaper, like a New York Times

11
00:00:58.668 --> 00:01:03.670
kinda thing, this is actually
the effect that you would want, right?

12
00:01:03.670 --> 00:01:09.391
Especially maybe two, maybe three columns,
and it's flowing text,

13
00:01:09.391 --> 00:01:14.840
that's actually what you would want but
maybe not always, right?

14
00:01:16.240 --> 00:01:20.895
So there are ways to handle this, and
this is one of those things where,

15
00:01:20.895 --> 00:01:25.080
if this was one component,
my life would be a lot easier.

16
00:01:25.080 --> 00:01:29.451
You think that I'm joking,
it's in the docs,

17
00:01:29.451 --> 00:01:32.739
they have a GIF of multi-cursors.

18
00:01:32.739 --> 00:01:36.030
Now, luckily,
I am very good at multi-cursors.

19
00:01:36.030 --> 00:01:42.747
The only thing that makes me a 10x
developer is 10 cursors at the same time.

20
00:01:42.747 --> 00:01:47.227
Actually in TextMate, which is this
text editor that nobody uses anymore,

21
00:01:47.227 --> 00:01:50.727
I'm wicked fast at doing my insane stuff,
very quickly for

22
00:01:50.727 --> 00:01:53.330
reasons that I don't totally understand.

23
00:01:53.330 --> 00:01:55.379
Cool, so there's a bunch of
different options in here.

24
00:01:55.379 --> 00:01:59.788
We can kinda take a look
at what some of them are.

25
00:01:59.788 --> 00:02:04.257
And most of them seem
pretty straightforward,

26
00:02:04.257 --> 00:02:11.856
I really wish that as I hovered over them,
they would apply but, they do.

27
00:02:11.856 --> 00:02:14.502
Yeah, look at that, so
we have break-before-column.

28
00:02:19.126 --> 00:02:20.225
They just take a second.

29
00:02:25.165 --> 00:02:28.200
So that one, which one do we want?

30
00:02:29.330 --> 00:02:30.548
Auto is the default one.

31
00:02:30.548 --> 00:02:34.908
break-inside-avoid-column, we'll
actually then be able to set it so

32
00:02:34.908 --> 00:02:38.516
that it doesn't actually break
midway through the DOM node.

33
00:02:38.516 --> 00:02:41.671
The images didn't have this problem cuz
there's no way that they can really break.

34
00:02:41.671 --> 00:02:44.647
Text had this problem, but depending
on what you're trying to do, right?

35
00:02:44.647 --> 00:02:50.033
So for instance, I a lot of times
will use something like this.

36
00:02:50.033 --> 00:02:54.704
There was an earlier version of the course
website that I was playing around with

37
00:02:54.704 --> 00:02:55.481
the layout.

38
00:02:55.481 --> 00:03:00.381
Where, was I gonna put these underneath in
mobile or tablet view and then I wanted

39
00:03:00.381 --> 00:03:05.153
to play with the columns and stuff like
that, but I didn't want them to break?

40
00:03:05.153 --> 00:03:08.475
So if you want text,
the normal behavior is what you want.

41
00:03:08.475 --> 00:03:13.646
But there are use cases where
maybe you want them to stay

42
00:03:13.646 --> 00:03:18.491
as solid units and
just kinda break at the next one.

43
00:03:18.491 --> 00:03:22.082
But whatever effect you're looking for,
those are all options and

44
00:03:22.082 --> 00:03:26.437
some of them work with, as you saw before
when we had the different media queries.

45
00:03:26.437 --> 00:03:29.285
One of them was for print,
stuff along those lines,

46
00:03:29.285 --> 00:03:32.400
you can kind of play with
different things there as well.

47
00:03:32.400 --> 00:03:37.002
But it's a super nice easy layout thing,
kinda like that space y and

48
00:03:37.002 --> 00:03:40.820
space x that we saw in the very
beginning there, right?

49
00:03:40.820 --> 00:03:43.394
Before you start grabbing a grid or
Flexbox,

50
00:03:43.394 --> 00:03:48.273
will one of these very simple classes, cuz
they're actually wildly flexible unlike

51
00:03:48.273 --> 00:03:51.883
a lot more of the edge cases and
some of the more powerful tools.

52
00:03:51.883 --> 00:03:56.755
They don't do a lot but they kinda
do the right thing most of the time.

53
00:03:56.755 --> 00:03:59.230
And they're pretty useful,

54
00:03:59.230 --> 00:04:04.084
they might solve your problem for
you a lot faster as well.

55
00:04:04.084 --> 00:04:05.842
And the only thing I will warn you about,

56
00:04:05.842 --> 00:04:08.687
I could have said this a little bit
earlier, is with that regex you

57
00:04:08.687 --> 00:04:11.566
just can't try to do anything
fancy with string interpolation.

58
00:04:11.566 --> 00:04:14.646
Because of the regex
will never find it and

59
00:04:14.646 --> 00:04:18.172
those classes will be cut
from your CSS bundle.

60
00:04:18.172 --> 00:04:20.406
You can do stuff but
just don't get carried away.

61
00:04:20.406 --> 00:04:23.530
Just make sure you keep the full
class name in there any given point.

