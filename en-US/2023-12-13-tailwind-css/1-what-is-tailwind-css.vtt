WEBVTT

1
00:00:00.000 --> 00:00:04.526
If you're new to Tailwind, if you're like,
I've heard a lot about this Tailwind

2
00:00:04.526 --> 00:00:08.095
thing, but I have never used it,
cool, welcome, let's do it.

3
00:00:08.095 --> 00:00:12.257
Tailwind is a,
I won't go as far as to call it a,

4
00:00:12.257 --> 00:00:17.058
they'll call it a framework,
that's a loaded term.

5
00:00:17.058 --> 00:00:21.448
But it is definitely a set of tooling
that allows you to write what

6
00:00:21.448 --> 00:00:23.980
is called utility-first classes.

7
00:00:23.980 --> 00:00:28.427
And this is maybe partially
the controversial piece

8
00:00:28.427 --> 00:00:31.367
that we'll deal with here today.

9
00:00:31.367 --> 00:00:36.079
I am probably not as
staunch on some of the same

10
00:00:36.079 --> 00:00:41.662
principles that I think
the Tailwind team is as well.

11
00:00:41.662 --> 00:00:46.939
I'll bend the rules occasionally when
it behooves me, but you can see even

12
00:00:46.939 --> 00:00:52.494
on the screenshot on the page the basic
vibe that we're getting here, right?

13
00:00:52.494 --> 00:00:57.057
And so if you've kind of maybe in
the past favored semantic CSS,

14
00:00:57.057 --> 00:01:01.548
where it's like, okay,
this is gonna be the blog post title.

15
00:01:01.548 --> 00:01:06.030
Maybe it's BEM, where I've got blog,
underscore, underscore title, so on and

16
00:01:06.030 --> 00:01:06.618
so forth.

17
00:01:06.618 --> 00:01:10.730
And when I first used Tailwind, and
I was like, what is this, right,

18
00:01:10.730 --> 00:01:12.283
I don't know about this.

19
00:01:12.283 --> 00:01:15.147
But then I thought about it a little bit,

20
00:01:15.147 --> 00:01:18.777
which is I am guilty of
the following move, right?

21
00:01:18.777 --> 00:01:23.431
It's like I'm gonna start off fresh, I'm
gonna use semantic CSS, and it's gonna be

22
00:01:23.431 --> 00:01:27.345
the blog title, and I have blog author,
but then you know what happens?

23
00:01:27.345 --> 00:01:28.783
Look at that blog title.

24
00:01:28.783 --> 00:01:31.678
My blog title is really
just some bold text,

25
00:01:31.678 --> 00:01:37.020
maybe a little bit bigger than the rest,
maybe with an underline underneath it.

26
00:01:37.020 --> 00:01:39.631
And the next thing you know,
I got something else,

27
00:01:39.631 --> 00:01:41.710
maybe I got a page title somewhere else.

28
00:01:41.710 --> 00:01:44.721
I'm like, all right, I got this style,
I'm gonna rewrite this over and

29
00:01:44.721 --> 00:01:45.609
over again, right?

30
00:01:45.609 --> 00:01:50.621
And so all of a sudden, your semantic
styles start to kind of crumble.

31
00:01:50.621 --> 00:01:56.291
And it's really hard when you run a team
to kind of keep all of that in place,

32
00:01:56.291 --> 00:02:01.694
too, because there is always the goals
of perfection that we all seek.

33
00:02:01.694 --> 00:02:06.640
And then there is reality cuz there's an
outage or something along those lines or

34
00:02:06.640 --> 00:02:09.198
some major thing that we have to get done.

35
00:02:09.198 --> 00:02:13.670
And running a big codebase is a game of

36
00:02:13.670 --> 00:02:18.874
bartering with reality a lot of the times.

37
00:02:18.874 --> 00:02:21.912
But then there's also some very,

38
00:02:21.912 --> 00:02:26.745
very practical pieces,
this idea of utility for CSS.

39
00:02:26.745 --> 00:02:32.210
Tailwind is going out of its way
to make sure that it is helping

40
00:02:32.210 --> 00:02:37.689
you to provide the smallest
bundle of CSS possible, right?

41
00:02:37.689 --> 00:02:41.170
Let's say that I was a better
person than I am, right?

42
00:02:41.170 --> 00:02:44.384
And I was super good at
writing all this semantic CSS,

43
00:02:44.384 --> 00:02:49.181
where I was writing the same styles over
and over with different names, right?

44
00:02:49.181 --> 00:02:53.735
Well, those are a bunch of classes that I
need to now ship in my codebase that all

45
00:02:53.735 --> 00:02:55.674
do the exact same thing, right?

46
00:02:55.674 --> 00:02:59.609
It'd be a lot easier just to
have a few classes of like,

47
00:02:59.609 --> 00:03:05.442
make this extra large text, cuz that is
one class, right, where I can see that.

48
00:03:05.442 --> 00:03:09.210
And then also, back in the day,

49
00:03:09.210 --> 00:03:15.221
there was a lot of separation of concerns,
right?

50
00:03:15.221 --> 00:03:19.092
I'm already writing JSX or Svelte or
whatever, I'm already writing markup in my

51
00:03:19.092 --> 00:03:22.588
JavaScript to begin with, might as
well bring it all in together as well.

52
00:03:22.588 --> 00:03:26.427
And so you get this very,
what might feel a little like,

53
00:03:26.427 --> 00:03:30.770
you can kinda see it's going
off the screenshot here, right?

54
00:03:30.770 --> 00:03:34.274
And that feels a little bit much.

55
00:03:34.274 --> 00:03:37.781
But then in a lot of cases, it becomes
very ergonomic to be like, okay,

56
00:03:37.781 --> 00:03:40.996
I'm looking at this thing,
I roughly know exactly what it does,

57
00:03:40.996 --> 00:03:44.228
I don't have to jump back and
forth between two different files.

58
00:03:44.228 --> 00:03:48.921
Or even if you're using something like Vue
or Svelte, where you can put the style

59
00:03:48.921 --> 00:03:53.699
sheet in the same file, up and down that
file, and don't get me started on React.

60
00:03:53.699 --> 00:03:57.249
And so having a lot of that in
place has been super powerful.

61
00:03:57.249 --> 00:04:02.277
The one thing that I will kind
of mention is there's a page on

62
00:04:02.277 --> 00:04:07.525
the site that is talking a lot
about this utility-first CSS.

63
00:04:07.525 --> 00:04:11.602
And there's a little bit of extra
justification of, it's totally cool,

64
00:04:11.602 --> 00:04:15.111
you're using probably a templating
language anyway, right?

65
00:04:15.111 --> 00:04:16.580
And so in a lot of cases,

66
00:04:16.580 --> 00:04:20.927
you will kind of wrap these things
into the components as you go along.

67
00:04:20.927 --> 00:04:23.895
It goes a little bit into, and then you
have multicursor to edit a lot of styles

68
00:04:23.895 --> 00:04:26.468
at the same time, I'm like, okay,
that's a little much there.

69
00:04:26.468 --> 00:04:30.497
But I will say, even if your
initial sensibilities are like,

70
00:04:30.497 --> 00:04:34.371
I don't like this,
I would implore you to give it a chance,

71
00:04:34.371 --> 00:04:37.876
because I have to say,
that was my initial reaction.

72
00:04:37.876 --> 00:04:42.745
And now, there's not a world where I
would start a project probably and

73
00:04:42.745 --> 00:04:45.841
not use Tailwind as my first choice,
right?

74
00:04:45.841 --> 00:04:50.903
Once you kind of get into the rhythm and
routine of it, the level of

75
00:04:50.903 --> 00:04:56.904
productivity becomes incredible and
then you don't really want to go back.

76
00:04:56.904 --> 00:05:00.139
And there's a bunch of really interesting
things to kinda notice even in this

77
00:05:00.139 --> 00:05:01.045
little screenshot.

78
00:05:01.045 --> 00:05:03.338
And we will explore all of this kind of,
and

79
00:05:03.338 --> 00:05:05.839
I'm just trying to setting
the kind of scene.

80
00:05:05.839 --> 00:05:09.614
Which is you've got some
syntax like this here,

81
00:05:09.614 --> 00:05:14.970
which is just basically all of your
responsive design breakpoints.

82
00:05:14.970 --> 00:05:18.977
You just write in a single line, it's not
like keeping track, I've had the style and

83
00:05:18.977 --> 00:05:21.010
then I write the media
query somewhere else.

84
00:05:21.010 --> 00:05:25.687
It's the actual ergonomics of
the flow become incredibly powerful

85
00:05:25.687 --> 00:05:28.486
once you kinda get into the rhythm of it.

86
00:05:28.486 --> 00:05:32.773
And I think that is part of
the selling point there as well.

87
00:05:32.773 --> 00:05:38.280
And the cool thing is also that everything
in Tailwind is completely customizable.

88
00:05:38.280 --> 00:05:43.306
It's not like certain other CSS
frameworks that have existed in the past,

89
00:05:43.306 --> 00:05:47.611
where it's like, let's just say it,
let's just call it out,

90
00:05:47.611 --> 00:05:52.186
you know when that site was built
with Bootstrap, you can smell it.

91
00:05:52.186 --> 00:05:57.507
The nice part about Tailwind is that it
does come with a default theme, right?

92
00:05:57.507 --> 00:06:02.867
But literally, everything in that
default theme is customizable, right?

93
00:06:02.867 --> 00:06:07.095
From the color palette to the size of
the spacing, to the font sizes and

94
00:06:07.095 --> 00:06:11.826
line spacing that they align up to,
everything is totally customizable, and

95
00:06:11.826 --> 00:06:13.705
you can go tweak those things.

96
00:06:13.705 --> 00:06:14.867
And the nice part is,

97
00:06:14.867 --> 00:06:19.582
unless you're changing the actual units,
they ship, you look at that rounded-xl,

98
00:06:19.582 --> 00:06:23.537
what if you decide you're gonna use
totally different t-shirt sizes?

99
00:06:23.537 --> 00:06:26.253
Then yes, you do need to change that,
or the colors.

100
00:06:26.253 --> 00:06:29.893
But generally speaking,
you could basically swap out the theme,

101
00:06:29.893 --> 00:06:31.128
change the theme, and

102
00:06:31.128 --> 00:06:35.823
completely reskin the app without having
to do really anything beyond that, right?

103
00:06:35.823 --> 00:06:40.916
But if you are migrating from an existing
design system, maybe doesn't align

104
00:06:40.916 --> 00:06:46.030
with Tailwind's, you can absolutely
customize it for everything you need.

105
00:06:46.030 --> 00:06:50.666
Or if you're kinda doing contract work or
maybe some consulting,

106
00:06:50.666 --> 00:06:56.815
you can kind of create a utility belt full
of utility classes, pun unintended, right?

107
00:06:56.815 --> 00:07:00.358
And be able to reskin and restyle things
and become incredibly productive and

108
00:07:00.358 --> 00:07:02.441
powerful as you go
through all these things.

109
00:07:02.441 --> 00:07:05.794
I've used it across personal projects,

110
00:07:05.794 --> 00:07:11.172
everything from a Next.js app to
a Svelte app, so on and so forth.

111
00:07:11.172 --> 00:07:15.454
And generally speaking,
the value prop is absolutely there.

112
00:07:15.454 --> 00:07:23.909
&gt;&gt; How much CSS do I need to know
before starting to use Tailwind?

113
00:07:23.909 --> 00:07:29.223
&gt;&gt; All CSS you know is going to benefit
you, but how much CSS do you need to know?

114
00:07:29.223 --> 00:07:33.218
In our time together,
I'm not going to assume too much.

115
00:07:33.218 --> 00:07:37.332
When we get into some stuff with the grid,
having familiarity with it, trying to

116
00:07:37.332 --> 00:07:41.096
learn how to do CSS grid in Tailwind and
also with CSS grid at the same time?

117
00:07:41.096 --> 00:07:43.063
Sure, but I would say, generally speaking,

118
00:07:43.063 --> 00:07:46.047
we're gonna take this from kind of
the first principles and build up.

119
00:07:46.047 --> 00:07:49.024
So I think in our time together, right,

120
00:07:49.024 --> 00:07:54.726
I don't think that there's much of
an expectation that you are a CSS wizard.

121
00:07:54.726 --> 00:07:58.241
And so no, but
knowing all the weird ease and

122
00:07:58.241 --> 00:08:03.278
peculiarity of CSS, obviously,
isn't gonna hurt, right?

123
00:08:03.278 --> 00:08:08.594
&gt;&gt; Looking at all of these classes,
I'd assume that at a certain point,

124
00:08:08.594 --> 00:08:14.828
you would take several of them and make a
higher order class of components and etc.

125
00:08:14.828 --> 00:08:16.313
I'm assuming you're gonna get into this.

126
00:08:16.313 --> 00:08:20.261
&gt;&gt; So I will get into it, I will.

127
00:08:20.261 --> 00:08:27.410
It's like I've mentally prepared for
this question very much so, right?

128
00:08:27.410 --> 00:08:33.019
The term I was using as I was preparing
for this is I will teach the controversy.

129
00:08:33.019 --> 00:08:37.020
I kind of mentioned in the preamble
in the very beginning,

130
00:08:37.020 --> 00:08:41.677
if you read the Tailwind docs,
you will see that they have a much more

131
00:08:41.677 --> 00:08:45.529
stern stance on, this is fine,
everything's great.

132
00:08:45.529 --> 00:08:51.597
There are ways to compose higher
order styles, and there's very much,

133
00:08:51.597 --> 00:08:56.285
if you really need to, but
you probably don't need to.

134
00:08:56.285 --> 00:08:58.891
I do it, right, I do it when it's useful.

135
00:08:58.891 --> 00:09:01.475
I'll show you how I do it.

136
00:09:01.475 --> 00:09:07.058
This is going to be the practical
introduction to Tailwind,

137
00:09:07.058 --> 00:09:10.673
not the diehard version of it, right?

138
00:09:10.673 --> 00:09:14.248
And so its gonna be sprinkled in with,

139
00:09:14.248 --> 00:09:19.053
this is what they officially
say you should do, and

140
00:09:19.053 --> 00:09:23.658
this is what I do because I have to,
[LAUGH] right?

141
00:09:23.658 --> 00:09:28.488
And so we will walk that fine line,
and I am prepared for

142
00:09:28.488 --> 00:09:32.794
a certain amount of,
really, that seems a lot.

143
00:09:32.794 --> 00:09:38.594
But we will kind of get a feel, and
I'll show you the the patterns that I use.

144
00:09:38.594 --> 00:09:41.303
Take what works, right, and
ignore what doesn't work,

145
00:09:41.303 --> 00:09:44.199
kind of figure out where you wanna
go on that spectrum as well.

146
00:09:44.199 --> 00:09:50.428
But I will show the things that I do
in my apps and in my day-to-day flow.

147
00:09:50.428 --> 00:09:54.433
&gt;&gt; Do you use Tailwind and
a preprocessor together?

148
00:09:54.433 --> 00:09:58.956
&gt;&gt; So by definition, if you use Tailwind,
you do use a pre-processor with it.

149
00:09:58.956 --> 00:10:05.422
So for them, Tailwind, theoretically,
I think it supports both Lightning CSS and

150
00:10:05.422 --> 00:10:10.171
PostCSS, but PostCSS is the kind
of most common way to use it.

151
00:10:10.171 --> 00:10:14.032
By default, if you just kinda
go through the normal steps,

152
00:10:14.032 --> 00:10:18.910
you will end up using it with PostCSS,
it is effectively a PostCSS plugin.

153
00:10:18.910 --> 00:10:23.070
So yes, because I use it with PostCSS, but

154
00:10:23.070 --> 00:10:28.280
PostCSS is also like the,
it's mostly CSS version.

155
00:10:28.280 --> 00:10:32.459
There probably isn't a great
use case to use it with Saas or

156
00:10:32.459 --> 00:10:34.692
something along those lines.

157
00:10:34.692 --> 00:10:39.590
And you probably don't want to
because some of the value prop

158
00:10:39.590 --> 00:10:44.595
of Tailwind is it uses this
library called PurgeCSS, right?

159
00:10:44.595 --> 00:10:51.489
Whic effectively what it does is at
build time, it scans your codebase and

160
00:10:51.489 --> 00:10:57.175
looks for what CSS classes
you're actually using, right?

161
00:10:57.175 --> 00:11:01.396
And only includes those in
the final bundle, right?

162
00:11:01.396 --> 00:11:07.123
And so part of the resistance, I think,
on the Tailwind side for creating some of

163
00:11:07.123 --> 00:11:13.290
those higher-order classes is that all of
a sudden now these classes are referenced.

164
00:11:13.290 --> 00:11:15.919
But there's not really a great way
to tell if then your higher-order

165
00:11:15.919 --> 00:11:16.791
class is referenced.

166
00:11:16.791 --> 00:11:22.047
I am personally okay with
the maybe 1% of unused styles that

167
00:11:22.047 --> 00:11:28.656
might make it all the way out there, but
that is a lot of the logic and things.

168
00:11:28.656 --> 00:11:32.729
And we'll kinda see a little bit of some
of the best practices around that, Mark.

169
00:11:32.729 --> 00:11:37.955
&gt;&gt; How does this compare to MUI and
other libraries like that?

170
00:11:37.955 --> 00:11:42.302
And then would you recommend
migrating to Tailwind?

171
00:11:42.302 --> 00:11:47.069
&gt;&gt; I So that's a tricky question for
me to answer as somebody who's basically

172
00:11:47.069 --> 00:11:50.946
only used Tailwind for
the last two and a half years, right?

173
00:11:50.946 --> 00:11:55.532
There is definitely not a component
library or anything along those line,

174
00:11:55.532 --> 00:11:56.054
right?

175
00:11:56.054 --> 00:12:00.626
You don't get any kind of, there is
actually, if you would like to pay money,

176
00:12:00.626 --> 00:12:04.786
there is a component library that you
can buy that has a bunch of prebuilt

177
00:12:04.786 --> 00:12:05.639
components.

178
00:12:05.639 --> 00:12:07.119
But for us at Temporal,

179
00:12:07.119 --> 00:12:10.968
we have our own design system
that I've built with Tailwind.

180
00:12:10.968 --> 00:12:15.504
So I can't really say, and it's better or
worse than MUI, cuz the depth of

181
00:12:15.504 --> 00:12:20.330
experience I have in Tailwind versus I
have played around with the other ones but

182
00:12:20.330 --> 00:12:21.715
not on the same level.

