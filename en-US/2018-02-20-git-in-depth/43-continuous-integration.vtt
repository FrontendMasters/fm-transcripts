WEBVTT

1
00:00:00.430 --> 00:00:03.491
&gt;&gt; Nina Zakharenko: I very briefly
wanna touch upon the idea of continuous

2
00:00:03.491 --> 00:00:04.382
integration.

3
00:00:04.382 --> 00:00:07.078
And that's merging commits,

4
00:00:07.078 --> 00:00:12.054
when you merge commits frequently
instead of waiting for

5
00:00:12.054 --> 00:00:16.302
a project that's done to
do one big merge you have

6
00:00:16.302 --> 00:00:21.395
the advantage of being able
to release features quicker.

7
00:00:21.395 --> 00:00:25.031
Continuous integration works well when
there are lots of tests that ensure that

8
00:00:25.031 --> 00:00:27.390
new commits didn't break the build.

9
00:00:27.390 --> 00:00:31.800
You can even have a step as part of
your continuous integration process

10
00:00:31.800 --> 00:00:36.036
where a deploy happens automatically
after you merge or commit.

11
00:00:36.036 --> 00:00:42.060
Travis CI is a really cool tool
that integrates with GitHub,

12
00:00:42.060 --> 00:00:45.060
it's free for open source projects.

13
00:00:45.060 --> 00:00:47.800
It's easy to specify what
commands you need to run tests.

14
00:00:49.550 --> 00:00:52.990
And you can set it up to run tests
automatically on branches or

15
00:00:52.990 --> 00:00:53.840
poll requests.

16
00:00:55.310 --> 00:00:58.210
And setting up is really easy,
you go to Travis CI,

17
00:00:58.210 --> 00:01:02.390
you add Travis.yaml,
file which is a configuration file.

18
00:01:02.390 --> 00:01:06.330
And then all you have to do
is push to trigger builds.

19
00:01:06.330 --> 00:01:09.810
So, for example,
if I wanted to have a repository where

20
00:01:09.810 --> 00:01:14.550
I ran tests before accepting a pull
request, I can do that with Travis.

21
00:01:14.550 --> 00:01:16.880
And it'll show me this information here,

22
00:01:16.880 --> 00:01:19.520
if your pull request introduce
a failing test it'll say,

23
00:01:19.520 --> 00:01:23.260
All checks have failed, and I know
that you're trying to submit bad code.

24
00:01:24.690 --> 00:01:28.919
We can also use the interface to look
at build results, and display the build

25
00:01:28.919 --> 00:01:33.033
status of our project in case you've
seen this while navigating GitHub.

