WEBVTT

1
00:00:00.060 --> 00:00:04.770
&gt;&gt; Nina Zakharenko: So the next section is
something that people tend to be very very

2
00:00:04.770 --> 00:00:09.200
afraid of, and that's get rebase.

3
00:00:09.200 --> 00:00:09.760
Show of hands.

4
00:00:09.760 --> 00:00:12.010
How many of you have done a rebase before?

5
00:00:13.320 --> 00:00:13.820
Just one?

6
00:00:16.598 --> 00:00:18.670
&gt;&gt; Nina Zakharenko: You're too scared?

7
00:00:19.680 --> 00:00:22.080
You won't be scared anymore, I promise.

8
00:00:25.339 --> 00:00:28.280
&gt;&gt; Nina Zakharenko: So rebasing.

9
00:00:28.280 --> 00:00:32.270
Before I'm gonna talk about rebasing,
I wanna talk about amending a commit.

10
00:00:32.270 --> 00:00:36.939
How many of you have amended a commit
with the get commit dash dash amend flag?

11
00:00:36.939 --> 00:00:38.283
You don't know?

12
00:00:38.283 --> 00:00:39.540
Just one?

13
00:00:39.540 --> 00:00:40.050
Two?

14
00:00:40.050 --> 00:00:42.330
Okay, so amend is a quick and

15
00:00:42.330 --> 00:00:46.320
easy shortcut that let's us make
changes to the previous commit.

16
00:00:46.320 --> 00:00:50.980
So in this example, I made a commit and
blog post about Python.

17
00:00:50.980 --> 00:00:53.770
But oops,
I actually forgot to add the blog post.

18
00:00:53.770 --> 00:00:56.630
I committed index but not the post itself.

19
00:00:58.230 --> 00:01:01.528
So then, I'm gonna add the post and
git commit amend.

20
00:01:01.528 --> 00:01:03.834
--get commit--amend.

21
00:01:03.834 --> 00:01:09.234
What that's gonna do is
&gt;&gt; Nina Zakharenko: It's

22
00:01:09.234 --> 00:01:11.121
going to add that file to the last commit.

23
00:01:11.121 --> 00:01:17.350
But if we look at the SHAs,
we'll see that the message is the same.

24
00:01:17.350 --> 00:01:20.220
It's both'add a blog, post about Python,
but the SHAs are different.

25
00:01:21.640 --> 00:01:22.200
Why is that?

26
00:01:23.370 --> 00:01:25.650
Does anyone remember from early on?

27
00:01:25.650 --> 00:01:26.880
&gt;&gt; off screen: The key value thing.

28
00:01:26.880 --> 00:01:29.010
If the value changes,
you have to have a different key.

29
00:01:29.010 --> 00:01:30.960
&gt;&gt; Nina Zakharenko: Exactly,
commits can't be edited.

30
00:01:34.005 --> 00:01:37.395
&gt;&gt; Nina Zakharenko: Because a commit
is referenced by the SHA of everything

31
00:01:37.395 --> 00:01:38.820
that's in it.

32
00:01:38.820 --> 00:01:42.855
Even if the tree's the same, everything's
the same, the date is gonna be different.

33
00:01:42.855 --> 00:01:50.350
So we're gonna create a new commit, and
that's going to look something like this.

34
00:01:50.350 --> 00:01:51.690
We had our original commit.

35
00:01:53.210 --> 00:01:58.850
Afterwards, we're adding a new commit,
and that original commit becomes,

36
00:01:58.850 --> 00:02:01.480
it doesn't have any references
pointing to it, dangling.

37
00:02:01.480 --> 00:02:03.280
It's eventually going to
be garbage collected.

38
00:02:04.670 --> 00:02:08.060
So that new commit that we amended
is a copy of the original.

39
00:02:08.060 --> 00:02:12.430
If you're just working on your local
computer, do this as much as you want.

40
00:02:12.430 --> 00:02:14.400
It's a fast, quick, easy shortcut.

