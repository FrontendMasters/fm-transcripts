WEBVTT

1
00:00:00.030 --> 00:00:01.400
&gt;&gt; Nina Zakharenko: So what is git?

2
00:00:01.400 --> 00:00:03.590
We've all heard this term before.

3
00:00:03.590 --> 00:00:06.060
It's a distributed version control system.

4
00:00:06.060 --> 00:00:11.140
But in order to truly understand git, we
need to learn how git stores information.

5
00:00:13.000 --> 00:00:17.190
At its core,
git is kind of like a key value store.

6
00:00:18.590 --> 00:00:24.320
The value is the data, and
the key is hash of the data.

7
00:00:24.320 --> 00:00:26.595
You can then use the key
to retrieve the content.

8
00:00:29.978 --> 00:00:31.090
&gt;&gt; Nina Zakharenko: The key is,

9
00:00:31.090 --> 00:00:33.208
it's called a SHA1.

10
00:00:33.208 --> 00:00:38.261
It's a cryptographic hash function,
so given a piece of data,

11
00:00:38.261 --> 00:00:42.120
it produces a 40-digit hexadecimal number.

12
00:00:42.120 --> 00:00:48.050
And that number, that value will always be
the same if the given input is the same.

13
00:00:49.630 --> 00:00:54.780
So you look at git log, you see lots
of 40-digit hexadecimal numbers,

14
00:00:54.780 --> 00:00:56.270
those are called SHA1s.

15
00:00:59.120 --> 00:01:02.336
Sometimes, and this is also called,

16
00:01:02.336 --> 00:01:08.172
this type of system is called
a content addressable storage system.

17
00:01:08.172 --> 00:01:12.714
And that's because you can use
the content to generate the key.

18
00:01:12.714 --> 00:01:17.226
So if the hash is always the same
given a piece of content,

19
00:01:17.226 --> 00:01:22.499
that also means that given the content,
you can generate the key.

