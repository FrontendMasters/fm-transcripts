[00:00:00]
>> Nina: Before I introduce myself, I just want to go over the class requirements really quickly. All right, you're gonna need a command line that supports UNIX style commands. So Bash shell if you're on OSX, on a Mac, or on Linux. You should be fine if you're on Windows.

[00:00:20]
I haven't had a Windows machine in about six years, so you might have to troubleshoot yourself. I might not be able to help you out. You need Git version greater than 2.0. So to check that, go to your terminal and type git--version, as long as you have a version greater than 2.0, you should be good to go.

[00:00:41]
You need to sign up for a GitHub account. So I hope that all of you have already done that. Next, you should clone the class repository that has these slides and the exercise descriptions. So to do that, go to git.io/advanced-git and pull that down. If you open the PDF locally instead of browsing it in GitHub, you'll get a lot more features like being able to select text.

[00:01:13]
So I highly recommend you do that, it will be very helpful. And then if you are on a Mac, if you had the opportunity, I recommend installing Homebrew, it's a package manager. That we'll use to download some of the tools that I show later in class. You guys are all good on the requirements?

[00:01:34]
Everyone thumbs up? Awesome. So for advanced Git, I'm going to assume that you have some familiarity with git already. Meaning you know how to clone a project, you know how to get a nit to create a new project, you can check out branches, you can add and remove files from a staging area, and you can make a commit.

[00:02:00]
Those are only the prerequisites, everything else will be explained today. So Advanced Git, I'm Nina. I traveled here from Portland, Oregon and if you wanna find me on the Internet I'm on Twitter at @nnja. Or if you wanna email me at any point after the class, if you have questions, if you wanna get in touch you can either DM me on twitter or send me a personal email, and I'll be happy to help you out.

[00:02:34]
So I have a bit of a confession to make. I'm not a Frontend Master, gasp. I'm a Full Staff Master. I probably can't help with the intricacies of CSS, but I've been a developer for ten years now. I started my career working in C++ and Java. I did a little bit of JavaScript.

[00:03:00]
Lately for the past few years, I've mostly been working in Python and I've been using git for 6 plus years now. I'm one of those people who has suffered through SVN and CVS. Does anyone else used version control before Git? Just Mark?
>> Speaker 2: CVS and SVN. [SOUND] Yeah, what an awful experience, right?

[00:03:22]

>> Nina: The best was Open Source with SVN.
>> Speaker 2: Yes, SourceForge, right?
>> Nina: Well, no people would send you, they would email you their diffs.
>> Speaker 2: Right.
>> Nina: Their SVN diffs to try to contribute to your open source project was terrible.

