WEBVTT

1
00:00:00.140 --> 00:00:01.220
&gt;&gt; Nina Zakharenko: What's a fork?

2
00:00:01.220 --> 00:00:03.080
A fork is a GitHub concept.

3
00:00:03.080 --> 00:00:07.190
It's a copy of a repository that's
stored in your GitHub account.

4
00:00:07.190 --> 00:00:10.470
You can clone your fork
to your local computer.

5
00:00:10.470 --> 00:00:14.110
And because that fork is in your account,
all of a sudden there's no restrictions.

6
00:00:14.110 --> 00:00:15.220
You can push changes,

7
00:00:15.220 --> 00:00:18.510
you can edit the code,
you can do whatever to your own copy.

8
00:00:19.900 --> 00:00:25.220
If you wanna merge back changes,
back to the original project,

9
00:00:25.220 --> 00:00:27.050
the one that you had forked from.

10
00:00:27.050 --> 00:00:29.517
The way that you do that
is by a pull request.

11
00:00:33.347 --> 00:00:36.203
&gt;&gt; Nina Zakharenko: A pull
request is saying, knock knock,

12
00:00:36.203 --> 00:00:38.920
hello maintainer of this project.

13
00:00:38.920 --> 00:00:42.222
I've made this awesome cool new feature,
I fixed this bug,

14
00:00:42.222 --> 00:00:45.347
would you please accept
the changes that I am proposing?

15
00:00:47.266 --> 00:00:50.366
&gt;&gt; Nina Zakharenko: If you wanna stay up
to date while you're working on your fork,

16
00:00:50.366 --> 00:00:55.060
other changes are probably getting
merged back into that source repository.

17
00:00:55.060 --> 00:01:00.170
So if you wanna stay up to date,
if you want your fork to stay up to

18
00:01:00.170 --> 00:01:03.450
date with the original project, you need
to set up something called an upstream.

19
00:01:05.210 --> 00:01:11.010
The upstream is the base repository
that you created that fork from,

20
00:01:11.010 --> 00:01:13.030
and it's not set up by default.

21
00:01:13.030 --> 00:01:17.620
When you add an upstream called remote,
you can then pull down changes that have

22
00:01:17.620 --> 00:01:20.522
been added to the original
repository after you forked it.

