WEBVTT

1
00:00:00.480 --> 00:00:01.500
So props are fun.

2
00:00:01.500 --> 00:00:05.641
There is one other kind of situation
that we didn't really talk about,

3
00:00:05.641 --> 00:00:07.860
which I'm gonna challenge you with.

4
00:00:09.610 --> 00:00:13.307
Which is, so we got props,
some of them could be static values,

5
00:00:13.307 --> 00:00:17.494
some of them could be objects or
arrays, and we'll see those over time.

6
00:00:17.494 --> 00:00:20.410
We saw what to do with an event handler.

7
00:00:20.410 --> 00:00:23.380
There's one more other common prop, right?

8
00:00:23.380 --> 00:00:27.830
I have a list of all the other props
you could ever see as well, but

9
00:00:27.830 --> 00:00:33.370
there's one that you might end up with,
which is what do you do about children?

10
00:00:34.400 --> 00:00:37.640
That is usually the first TypeScript
going great in React, I love this.

11
00:00:37.640 --> 00:00:40.359
This is about never writing
JavaScript again, and

12
00:00:40.359 --> 00:00:44.800
the first time you need to type, it'd be
like, that's another React component.

13
00:00:46.050 --> 00:00:50.060
You're like,
I think I'm just gonna write JavaScript.

14
00:00:50.060 --> 00:00:55.216
So what I have for
you is kind of a little playground, and

15
00:00:55.216 --> 00:01:00.043
in here we've got,
open this in Safari in a second,

16
00:01:00.043 --> 00:01:03.600
or it's a repo to the enclone.

17
00:01:03.600 --> 00:01:06.750
My security settings are turning
off syntax, highlighting in edge.

18
00:01:06.750 --> 00:01:09.950
But we have one where it's one child,

19
00:01:09.950 --> 00:01:15.350
it's a string cuz children of
an HTML element could be a string,

20
00:01:15.350 --> 00:01:20.450
nothing, another HTML element,
right, a bunch of stuff,

21
00:01:20.450 --> 00:01:24.780
right, and so
we need to kind of figure that out.

22
00:01:24.780 --> 00:01:29.296
And so right now this isn't any, and
your job is, here are a bunch of options,

23
00:01:29.296 --> 00:01:33.300
I thought seemed plausible
looking at reacts types.

24
00:01:33.300 --> 00:01:37.848
What I would challenge you
to do is try these out and

25
00:01:37.848 --> 00:01:43.250
see where the red squigglys
come to haunt you, right?

26
00:01:43.250 --> 00:01:47.544
And when you have the wrong answer,
a red squiggly will let you know,

27
00:01:47.544 --> 00:01:50.150
cuz most of the cases are covered in here.

28
00:01:50.150 --> 00:01:57.920
And we will figure out what the correct
type of a given child component should be.

29
00:01:57.920 --> 00:02:01.717
All right, spend five minutes,
and we will reconvene.

30
00:02:05.763 --> 00:02:07.650
We'll look at the the answer
sheet in a second.

31
00:02:07.650 --> 00:02:12.300
But let's try these all out and kinda see
what just our editor tells us, right?

32
00:02:13.950 --> 00:02:15.749
Let's try JSX element.

33
00:02:18.258 --> 00:02:20.924
And you can see that I get yelled at for

34
00:02:20.924 --> 00:02:24.890
anything that has more than
one element in it, right.

35
00:02:24.890 --> 00:02:26.480
That makes sense.

36
00:02:26.480 --> 00:02:29.713
But we saw before, okay,
JSX element was my first go-to,

37
00:02:29.713 --> 00:02:33.659
because before we hovered over name badge,
we saw JSX element, right,

38
00:02:33.659 --> 00:02:36.720
which is true except it
could be more than one.

39
00:02:36.720 --> 00:02:42.068
And so the syntax for an array,
depending on where your cursor is.

40
00:02:46.007 --> 00:02:49.204
And this blows up in a different
way because it's like,

41
00:02:49.204 --> 00:02:53.568
cool, it can be more than one JSX element,
which makes this box very happy.

42
00:02:53.568 --> 00:02:55.807
But you know what's not a JSX element?

43
00:02:55.807 --> 00:03:00.110
A string, so you could continue
to play this game forever.

44
00:03:01.360 --> 00:03:04.722
You say, or a string, and I think
if it has two strings at that point

45
00:03:04.722 --> 00:03:07.980
you get yelled at, but
there's really no intersection there.

46
00:03:07.980 --> 00:03:11.290
These two at the bottom,
I'm not even gonna waste your time with.

47
00:03:11.290 --> 00:03:13.010
They're fake answers.

48
00:03:13.010 --> 00:03:17.030
Those are actually utility methods built
into React for mapping over children,

49
00:03:17.030 --> 00:03:18.790
those aren't even types.

50
00:03:18.790 --> 00:03:22.870
The correct answer here
is React.React(Node).

51
00:03:22.870 --> 00:03:27.584
And I will show you a fun thing to make
you never have to really think about

52
00:03:27.584 --> 00:03:28.456
this again.

53
00:03:28.456 --> 00:03:34.430
You pass it in, everything is happy and
wonderful and good in the world.

54
00:03:34.430 --> 00:03:37.444
The other thing that you can do,
so other than this,

55
00:03:37.444 --> 00:03:40.810
this doesn't really take any
props other than children.

56
00:03:42.380 --> 00:03:46.940
So what I can do in this case is
there's actually one built into React,

57
00:03:48.667 --> 00:03:53.307
Called props with children, which uses
the syntax for taking it generic and

58
00:03:53.307 --> 00:03:56.000
says, this would be
the rest of your props.

59
00:03:56.000 --> 00:03:59.680
This would be name badge props or
greeting props or whatever.

60
00:03:59.680 --> 00:04:05.520
And it adds, hey, this could have
children that are either React node or

61
00:04:05.520 --> 00:04:07.258
undefined, right.

62
00:04:07.258 --> 00:04:10.247
And you can kind of use that as built in
there andyou just have fun with that.

63
00:04:10.247 --> 00:04:13.609
You'll get like that typing for
you as well.

64
00:04:13.609 --> 00:04:18.793
But the thing I would love to be
able to do is also, I have this idea

65
00:04:18.793 --> 00:04:24.720
of a style prop, right, cuz I do
get cool autocomplete here as well.

66
00:04:24.720 --> 00:04:28.834
If you've learned anything
about me right now,it's that I

67
00:04:28.834 --> 00:04:33.400
like especially all this stuf,
having it filled in for me.

68
00:04:33.400 --> 00:04:37.330
And a lot of times people
will just be string, so

69
00:04:37.330 --> 00:04:42.358
I can still go rogue here, but
I can put these properties in.

70
00:04:42.358 --> 00:04:46.868
And maybe I want my wrapper component
to also be able to take a style

71
00:04:46.868 --> 00:04:49.902
element that it passes through, but well,

72
00:04:49.902 --> 00:04:55.615
I don't really just want to say it's
an object or anything along those lines.

73
00:04:55.615 --> 00:05:01.093
And again, we can kind of figure
out by introspecting that.

74
00:05:01.093 --> 00:05:04.980
React does have this type, and at any
point if you get interested in these you

75
00:05:04.980 --> 00:05:08.472
can always Command click and
go through and actually see the types.

76
00:05:08.472 --> 00:05:12.888
It's an experience that
everyone should go through, but

77
00:05:12.888 --> 00:05:17.070
over time it's kind of
like seeing the matrix.

78
00:05:17.070 --> 00:05:20.800
But we can take this and
we can basically say that, okay,

79
00:05:20.800 --> 00:05:23.309
we do wanna actually take a style tag.

80
00:05:23.309 --> 00:05:26.884
And this is kind of useful too, depending
on how complicated your component is.

81
00:05:26.884 --> 00:05:30.417
If you wanna pass different styles for
the outer component and stuff like that,

82
00:05:30.417 --> 00:05:33.910
you can actually then be able to use
this property in multiple places, right?

83
00:05:33.910 --> 00:05:38.729
And now, this style will have all
the same typing that we eventually pass

84
00:05:38.729 --> 00:05:43.322
through to the child component in
this case, so we can actually say,

85
00:05:48.066 --> 00:05:51.790
Spread the rest of
the properties in there,

86
00:05:51.790 --> 00:05:55.525
not if we don't write regular JavaScript.

87
00:05:56.875 --> 00:06:01.141
Cool, and so I can pass those in as
well and because they're the same type,

88
00:06:01.141 --> 00:06:02.985
TypeScript is all okay with it.

89
00:06:02.985 --> 00:06:06.275
It's like, if you're guaranteeing
that this style object is okay,

90
00:06:06.275 --> 00:06:09.844
then I will let you use it in React
component where it's expecting that style

91
00:06:09.844 --> 00:06:12.320
object as well, and
both of those just kind of work.

92
00:06:14.080 --> 00:06:19.039
So the kind of answer again,
which I have written out here,

93
00:06:26.946 --> 00:06:29.430
Is we do want React.React(node).

94
00:06:29.430 --> 00:06:32.430
The rest of these don't really
work the way we think they do.

95
00:06:32.430 --> 00:06:35.180
And so sometimes,
there is a little nuance there.

96
00:06:35.180 --> 00:06:38.286
But the props with children
is usually your answer,

97
00:06:38.286 --> 00:06:40.906
cuz you could write that yourself, right.

98
00:06:40.906 --> 00:06:43.750
If you hover over it, you can see it's
got a very simple implementation.

99
00:06:43.750 --> 00:06:46.135
You could take a look,
you could figure it out, but

100
00:06:46.135 --> 00:06:48.840
it is there as a utility method for you.

101
00:06:48.840 --> 00:06:50.961
And I like the help, I'm here for it.

102
00:06:53.509 --> 00:06:56.913
Cool, so
as we saw props with children, and

103
00:06:56.913 --> 00:07:00.500
we're gonna use this a little bit later.

104
00:07:00.500 --> 00:07:04.307
There is component props and
component parts without ref and with ref.

105
00:07:04.307 --> 00:07:06.110
The ref is in React 18, I think,

106
00:07:06.110 --> 00:07:09.234
we had forwarded refs possibly
a little earlier than that.

107
00:07:09.234 --> 00:07:12.231
And so whether or
not you wanna actually define that,

108
00:07:12.231 --> 00:07:15.823
I tend to use without ref until I
know I need to pass a ref through,

109
00:07:15.823 --> 00:07:18.570
cuz I just want the simplest
possible solution.

110
00:07:18.570 --> 00:07:22.994
But this will actually be all of the props
from just a regular HTML button in this

111
00:07:22.994 --> 00:07:25.942
case, so you can pass it
the name of any HTML string,

112
00:07:25.942 --> 00:07:29.230
which includes children in this case, too.

113
00:07:29.230 --> 00:07:32.568
And the cool part is you
can pass them all through.

114
00:07:32.568 --> 00:07:37.466
Previously, you could actually in
React 17, you could say like, hey,

115
00:07:37.466 --> 00:07:41.200
if this is a React.component or
functional component,

116
00:07:41.200 --> 00:07:45.690
and children was implicitly included
in there, that was removed.

117
00:07:45.690 --> 00:07:50.347
There is a very long article for
the proposal and the change,

118
00:07:50.347 --> 00:07:56.296
explaining all the reasons why,
that I am not going to, somewhat academic.

119
00:07:56.296 --> 00:07:59.717
It's there linked for
your own interest on the rationale.

120
00:07:59.717 --> 00:08:03.819
But it kind of gets into some of the
nuances of how the amount of TypeScript

121
00:08:03.819 --> 00:08:08.460
that we definitely need to build our apps
is different from the amount that you need

122
00:08:08.460 --> 00:08:12.024
to build the entire type system for
React or style components or

123
00:08:12.024 --> 00:08:13.790
something along those lines.

124
00:08:13.790 --> 00:08:15.528
But there is a lot written out there.

125
00:08:15.528 --> 00:08:18.941
If, at the end of our time together,
you're like, yes,

126
00:08:18.941 --> 00:08:23.837
I would like to dive deeper, I've included
some links towards the end, awesome.

127
00:08:24.935 --> 00:08:25.534
&gt;&gt; Excuse me.

128
00:08:25.534 --> 00:08:26.680
&gt;&gt; Yep.
&gt;&gt; Quick question.

129
00:08:26.680 --> 00:08:30.810
There you hard coded the button
as a type and the generic,

130
00:08:30.810 --> 00:08:35.888
where without the ref thing,
I was curious if there's a better way cuz

131
00:08:35.888 --> 00:08:40.730
technically that's still,
we're trying to be super type safe.

132
00:08:40.730 --> 00:08:43.300
The button is a string,
we might make a typo.

133
00:08:43.300 --> 00:08:45.140
Is there button prompts or something?

134
00:08:45.140 --> 00:08:50.210
&gt;&gt; So this button under the hood, let's
see, let's pull one out and take a look.

135
00:08:50.210 --> 00:08:52.910
Let's learn it,
let's follow my own advice, right?

136
00:08:52.910 --> 00:08:56.030
So let's actually grab this real quick
cuz we don't even need to use it.

137
00:08:57.400 --> 00:08:59.425
So it looks like it's just a string, but

138
00:08:59.425 --> 00:09:02.525
one of things we're actually
gonna see in a little bit is, and

139
00:09:02.525 --> 00:09:06.600
I think you pointed this out earlier,
with types I can have unions between them.

140
00:09:06.600 --> 00:09:12.010
So under the hood, for instance, if I
do make a typo, I get yelled at, right.

141
00:09:12.010 --> 00:09:16.152
And we'll actually see a little of how
this works when we make a reducer actions

142
00:09:16.152 --> 00:09:17.720
in a little bit.

143
00:09:17.720 --> 00:09:22.761
But if I look under the hood, we can
see that component props without ref,

144
00:09:22.761 --> 00:09:26.765
that generic extends element type,
keep going, right.

145
00:09:26.765 --> 00:09:30.951
Element type tries to figure out whether
it's an actual another React component or

146
00:09:30.951 --> 00:09:34.955
if it's one of the ones that's just
an intrinsic element HTML element and JSX,

147
00:09:34.955 --> 00:09:35.631
keep going.

148
00:09:35.631 --> 00:09:41.456
And you can see that it's actually using
the key of just every valid HTML element,

149
00:09:41.456 --> 00:09:44.270
so it's gotta be one of these keys.

150
00:09:44.270 --> 00:09:47.460
So even though it looks like a string,
it is a limited set of strings so

151
00:09:47.460 --> 00:09:48.230
you can pass it.

