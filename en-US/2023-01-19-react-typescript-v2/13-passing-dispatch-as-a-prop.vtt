WEBVTT

1
00:00:00.000 --> 00:00:03.016
Before I showed you how passing that
set state was a little bit of a pain,

2
00:00:03.016 --> 00:00:05.793
I told you, if you use dispatch,
it's a little bit easier.

3
00:00:05.793 --> 00:00:08.724
Let's actually see what that looks like.

4
00:00:08.724 --> 00:00:11.987
So if we want to pass it in, we've got
to do a little bit of prop drilling.

5
00:00:11.987 --> 00:00:16.299
So we've got to pass it from
application to adjust colors,

6
00:00:16.299 --> 00:00:19.931
and from adjust color to that RGB inputs,
right?

7
00:00:19.931 --> 00:00:22.896
And part of the reason that we're going to
go through that extra layer of indirection

8
00:00:22.896 --> 00:00:24.663
is so I have an excuse to
use the context API later.

9
00:00:24.663 --> 00:00:27.217
But we'll go through it.

10
00:00:27.217 --> 00:00:31.610
And so we also have to adjust some of

11
00:00:31.610 --> 00:00:36.158
the different props along the way.

12
00:00:36.158 --> 00:00:41.190
So your choice on how you wanna refactor,
you refactor from that RGB input on up or

13
00:00:41.190 --> 00:00:44.599
you're gonna refactor from
the application on down.

14
00:00:44.599 --> 00:00:48.041
The good news is that the like
happy union of React and

15
00:00:48.041 --> 00:00:51.104
TypeScript is going to
help you along the way.

16
00:00:51.104 --> 00:00:57.771
So I'm gonna say that we're passing
dispatch, will say dispatch.

17
00:00:57.771 --> 00:01:00.134
Great.

18
00:01:00.134 --> 00:01:00.964
Cool.

19
00:01:03.618 --> 00:01:09.295
And so now we'll pass this through and
we'll say, we'll go into this one.

20
00:01:12.920 --> 00:01:18.057
And we'll say that we
wanna add the fact that it

21
00:01:18.057 --> 00:01:23.072
will take dispatch and
pull it in from react.

22
00:01:23.072 --> 00:01:26.835
Now, it does exactly what kind of action,
right?

23
00:01:26.835 --> 00:01:30.354
So one of things I can
do here is I can take,

24
00:01:30.354 --> 00:01:35.497
I will probably very similar to
what you saw me do right here.

25
00:01:35.497 --> 00:01:37.793
Like, I need this type.

26
00:01:37.793 --> 00:01:40.565
I do not wanna type it over and
over and over again.

27
00:01:40.565 --> 00:01:43.532
So what I'm gonna do is-

28
00:01:51.818 --> 00:01:58.229
Just store it in this type here and
we'll swap it in here and we'll go back

29
00:02:06.740 --> 00:02:08.538
If you don't export things,
you can't use them.

30
00:02:08.538 --> 00:02:13.214
Someone asked before,
when do I make the decision on whether or

31
00:02:13.214 --> 00:02:18.873
not to put something in that definition
file or import it all over the place?

32
00:02:18.873 --> 00:02:20.888
Yeah, if this app grew anymore, and

33
00:02:20.888 --> 00:02:25.503
like the idea that I'm probably going to
need something like this for select color,

34
00:02:25.503 --> 00:02:28.501
I'm probably gonna need this
somewhere else as well.

35
00:02:28.501 --> 00:02:31.437
I will show you a trick
where I won't need it later.

36
00:02:31.437 --> 00:02:35.018
But for now, you're gonna assume
that you're gonna go down this path,

37
00:02:35.018 --> 00:02:38.788
you'd be importing this all over
the place for a very common thing, right?

38
00:02:38.788 --> 00:02:43.676
So what I could do in this case, and
I'll just show you because it can be done,

39
00:02:43.676 --> 00:02:48.565
is I can go into any d.ts, I can paste
this in here and you'll notice that it is

40
00:02:48.565 --> 00:02:55.629
now available- In basically any file.

41
00:02:55.629 --> 00:03:00.536
So now I can go into this file
over here just to show you

42
00:03:00.536 --> 00:03:04.009
I didn't have to import it anymore.

43
00:03:04.009 --> 00:03:06.415
It's just available, right?

44
00:03:06.415 --> 00:03:11.217
And in fact, if you wanted to you could
actually even pull in the full react

45
00:03:11.217 --> 00:03:15.958
at this passion have like, you can get
abstract this as much as you want.

46
00:03:15.958 --> 00:03:19.682
Of course we have that in place and

47
00:03:19.682 --> 00:03:24.744
then finally we're gonna
go into hex to RGB.

48
00:03:24.744 --> 00:03:28.818
And there's two things that I could do
here and I'll show you is I could say that

49
00:03:28.818 --> 00:03:36.135
it's- Copy and paste

50
00:03:36.135 --> 00:03:40.244
got a little carried away there but that's
cool I got the important for free anyway.

51
00:03:40.244 --> 00:03:45.814
Sweet, save some files.

52
00:03:45.814 --> 00:03:47.902
&gt;&gt; [INAUDIBLE]
&gt;&gt; What's it?

53
00:03:47.902 --> 00:03:49.636
&gt;&gt; Options.

54
00:03:49.636 --> 00:03:51.843
&gt;&gt; Yep.

55
00:03:51.843 --> 00:03:53.493
What did I leave in that other file for
myself?

56
00:03:59.354 --> 00:04:03.740
Just colors, yeah,
I made a mistake, over here.

57
00:04:03.740 --> 00:04:05.911
No wants this, just call to actions.

58
00:04:21.326 --> 00:04:22.951
Pass it in as a prop here as well.

59
00:04:25.992 --> 00:04:31.346
Cool, as you can see like my
red is turning various shades.

60
00:04:31.346 --> 00:04:36.755
Interesting it doesn't have this one,
reaction here.

61
00:04:41.767 --> 00:04:43.812
I don't make the mistake didn't.

62
00:04:43.812 --> 00:04:49.339
Cool and so like other than me not using

63
00:04:49.339 --> 00:04:54.015
it here, I can pull this all in.

64
00:04:54.015 --> 00:04:57.135
And I need you to do a little work because
these are three different values in here.

65
00:04:57.135 --> 00:05:01.860
So I've got as you can see
some values here as well.

66
00:05:01.860 --> 00:05:08.509
And so what I'll do is just say,
let's give ourselves a helper function.

67
00:05:16.803 --> 00:05:21.784
Red would be r, G will be green,

68
00:05:21.784 --> 00:05:25.665
green will be j and then.

69
00:05:30.218 --> 00:05:33.735
This is gonna take these three values I'm
gonna turn it into array and send it off.

70
00:05:37.294 --> 00:05:44.424
And so what we'll do here is we'll
say dispatch, will set the type.

71
00:06:02.681 --> 00:06:04.269
We're gonna take a look
at that in a second.

72
00:06:13.914 --> 00:06:17.089
Take a look maybe my ad hoc moving
that out into different files not my

73
00:06:17.089 --> 00:06:17.766
best choice.

74
00:06:17.766 --> 00:06:19.312
We'll find out in a second.

75
00:06:19.312 --> 00:06:23.735
These weren't available in that other
file cuz these are not exported.

76
00:06:23.735 --> 00:06:28.134
So my whole thing is like let me drop into
that file as a surreptitious like bonus

77
00:06:28.134 --> 00:06:31.533
thing that was gonna do is totally
we can take a look at that but

78
00:06:31.533 --> 00:06:34.885
like maybe not while I'm in
the middle of another thought.

79
00:06:34.885 --> 00:06:35.709
Cool.

80
00:06:39.262 --> 00:06:41.111
I guess I could move them all in and
that would solve for that.

81
00:06:41.111 --> 00:06:45.157
But while I give you something to do,
then I will go move the file and

82
00:06:45.157 --> 00:06:48.933
verify it works in like midway
through trying to make a point.

83
00:06:48.933 --> 00:06:51.537
Cool, so now everything makes
sense a little bit more.

84
00:06:51.537 --> 00:06:53.827
So I should be able to
go into application.

85
00:06:53.827 --> 00:06:57.709
If I look at this,
dispatch is now what I think it is.

86
00:06:57.709 --> 00:07:00.095
It gets passed through, it goes to index.

87
00:07:00.095 --> 00:07:03.030
I don't know what this is,
that makes sense.

88
00:07:03.030 --> 00:07:04.294
So let's pull it in.

89
00:07:07.894 --> 00:07:11.033
Nope.

90
00:07:11.033 --> 00:07:12.633
&gt;&gt; I didn't think you exported it though.

91
00:07:12.633 --> 00:07:15.930
&gt;&gt; Did I not export that
one while I was talking?

92
00:07:15.930 --> 00:07:17.377
&gt;&gt; This is why we don't wing it.

93
00:07:17.377 --> 00:07:18.085
&gt;&gt; There we go.

94
00:07:18.085 --> 00:07:20.008
All right, so
now we're exporting everything.

95
00:07:20.008 --> 00:07:24.499
Now I should get all right.

96
00:07:24.499 --> 00:07:26.741
And we go through.

97
00:07:26.741 --> 00:07:28.045
What you angry about?

98
00:07:34.598 --> 00:07:36.496
Figure out a second,
let's get everything else wired up.

99
00:07:38.967 --> 00:07:44.866
Cool.
Yeah, now I know things are working.

100
00:07:44.866 --> 00:07:47.796
All right, again,
sure was that my finest moment.

101
00:07:47.796 --> 00:07:49.268
No.

102
00:07:49.268 --> 00:07:52.603
Did I have to like go and flail wildly in
the browser to see things didn't work?

103
00:07:52.603 --> 00:07:55.434
I just saw that like, hey,
I'm not getting autocomplete.

104
00:07:55.434 --> 00:08:00.906
That's a signal that I have
probably flew too close to the sun

105
00:08:00.906 --> 00:08:05.961
while live coding, so
here we can see that the payload.

106
00:08:08.306 --> 00:08:12.683
And what's nice if I hover over I can
be reminded about what format this

107
00:08:12.683 --> 00:08:13.509
looks like.

108
00:08:13.509 --> 00:08:14.723
So I can actually say-

109
00:08:22.327 --> 00:08:25.363
And that wants it in an RGB object,
which I remember.

110
00:08:25.363 --> 00:08:27.573
But what's nice is that like,

111
00:08:27.573 --> 00:08:32.424
should be an RGB number is not
assignable to either one of these two.

112
00:08:39.214 --> 00:08:43.519
Cool and now cuz I have no red squigglys,
I can at least figure out that mostly

113
00:08:43.519 --> 00:08:47.770
everything's okay in here, let's go
back up and see what our problem is.

114
00:08:47.770 --> 00:08:52.021
The same problem that I had before
which is one bad naming decision.

115
00:09:02.234 --> 00:09:03.461
You know what?
I'll just grab the other one.

116
00:09:13.451 --> 00:09:16.855
If you misspell things,
your code doesn't compile.

117
00:09:16.855 --> 00:09:20.028
So now I've got no red
squigglies which gives me

118
00:09:20.028 --> 00:09:23.453
some confidence that I can
go to my browser and see.

119
00:09:23.453 --> 00:09:27.175
And again,
the nice part is I am in the zone.

120
00:09:27.175 --> 00:09:31.392
I am looking at my code,
I am seeing the errors immediately, and

121
00:09:31.392 --> 00:09:36.089
I can kind of address them versus I
wanna tell you how it sometimes goes.

122
00:09:38.682 --> 00:09:40.338
And then we gotta say on-change in here.

123
00:09:46.289 --> 00:09:48.113
So if you don't put OnChange handlers,
nothing happens.

124
00:09:53.645 --> 00:09:59.909
So onChange will tell you the event.

125
00:09:59.909 --> 00:10:03.017
And this time we actually
use a number again, great.

126
00:10:03.017 --> 00:10:05.388
But this time we actually
want it to be a string.

127
00:10:05.388 --> 00:10:08.467
So like for the thing that was
complaining about the whole time,

128
00:10:08.467 --> 00:10:11.388
that value as numbers saved us from,
we want that this time.

129
00:10:11.388 --> 00:10:14.184
Now we actually wanted to be a number,
so that's not true.

130
00:10:14.184 --> 00:10:19.339
I will say, cool, say update.

131
00:10:19.339 --> 00:10:23.578
I could dispatch the action for
you too but I made that helper out there.

132
00:10:23.578 --> 00:10:28.528
Update RGB and here we'll say

133
00:10:28.528 --> 00:10:33.304
event.target.value.

134
00:10:33.304 --> 00:10:38.043
You make one coding mistake
in front of your friends,

135
00:10:38.043 --> 00:10:41.111
next thing you're embarrassed.

136
00:10:41.111 --> 00:10:43.952
Value is number and
that's actually got to be the,

137
00:10:43.952 --> 00:10:46.461
let's look at the air like
I know what it is but

138
00:10:46.461 --> 00:10:51.087
it's like yo you're saying this red is
number undefined green number undefined or

139
00:10:51.087 --> 00:10:59.144
blue, so actually say- Red
will be our target value.

140
00:11:00.889 --> 00:11:01.474
Blue will be b.

141
00:11:05.928 --> 00:11:07.007
Green would be g.

142
00:11:08.466 --> 00:11:11.995
And we can grab this and
just adjust it slightly.

143
00:11:17.867 --> 00:11:19.336
We'd turn them all the same.

144
00:11:19.336 --> 00:11:20.348
That's not fun.

145
00:11:29.051 --> 00:11:31.796
There's probably a better utility
function I could write for that, but

146
00:11:31.796 --> 00:11:32.967
that'll do the trick for now.

147
00:11:38.215 --> 00:11:47.818
So my issue is- Red, green, blue.

148
00:11:50.145 --> 00:11:51.959
&gt;&gt; It's because you have
them in the wrong order.

149
00:11:56.441 --> 00:12:03.688
&gt;&gt; This should just be weird,
it shouldn't like- Because it objects

150
00:12:03.688 --> 00:12:08.427
shouldn't matter, I got no red squigglies,
let's see what we got in the second.

151
00:12:13.093 --> 00:12:14.468
Now the best laid plans, right?

152
00:12:18.320 --> 00:12:21.771
I want the record to show it was my first
intentional console log of the day.

153
00:12:28.360 --> 00:12:29.488
And we'll see what my issue is.

154
00:12:36.293 --> 00:12:37.719
It's probably the stupidest thing again.

155
00:12:45.157 --> 00:12:47.478
So got those colors coming in correctly.

156
00:12:47.478 --> 00:12:50.560
Invalid color string in the HSL1.

157
00:12:57.357 --> 00:12:59.336
That's fun.

158
00:12:59.336 --> 00:13:03.602
Give me one second, I'll to trace it down.

159
00:13:03.602 --> 00:13:06.587
It looks like it's going through
the reducer fine, it's maybe my output or

160
00:13:06.587 --> 00:13:09.214
something I wasn't validating just yet,
I'll figure that out.

161
00:13:12.900 --> 00:13:16.515
You're gonna watch me though,
it'll be fine, it'll keep me honest.

162
00:13:23.602 --> 00:13:28.471
Which is ideally,
let's just out of pure curiosity.

163
00:13:28.471 --> 00:13:32.216
Let's look at like what we get out
of application on each render?

164
00:13:55.248 --> 00:13:58.483
Wanna play a game?

165
00:14:01.464 --> 00:14:04.914
So I made this slight meta point earlier,

166
00:14:04.914 --> 00:14:09.461
of I bet we can make that hex
color type better, right?

167
00:14:09.461 --> 00:14:13.690
And this is a later chapter
in this workshop, but

168
00:14:13.690 --> 00:14:17.721
let's talk about it now
cuz I got beaten by it.

169
00:14:17.721 --> 00:14:24.764
So we start out with hashtag BADA55,
that's cool.

170
00:14:24.764 --> 00:14:29.717
We see it twice because like React
18 has concurrent rendering.

171
00:14:29.717 --> 00:14:31.299
So console logs show up twice in a render.

172
00:14:31.299 --> 00:14:34.781
It's not actually rendering twice,
it's under the hood react.

173
00:14:34.781 --> 00:14:38.357
So you'll see a one's coming from the VM,
one's coming from an occasion jsx.

174
00:14:38.357 --> 00:14:42.008
On the next render,
one of these things is not like the other.

175
00:14:42.008 --> 00:14:47.047
Which is, this one starts with a hashtag
and this one starts with a string.

176
00:14:47.047 --> 00:14:49.223
I mean, this one starts without a hash,
it's just a string.

177
00:14:49.223 --> 00:14:55.413
And when I say that hex color
is in this case a string,

178
00:14:55.413 --> 00:15:00.774
TypeScript's like, yo, I did my job here.

179
00:15:00.774 --> 00:15:06.032
And like that is definitely,
it's doing its job.

180
00:15:06.032 --> 00:15:10.673
That doesn't stop me from forgetting
that the library that I'm using expects,

181
00:15:10.673 --> 00:15:12.105
when it takes a hex code,

182
00:15:12.105 --> 00:15:16.288
the library is expecting all hex codes
to start with a hash, not my code.

183
00:15:16.288 --> 00:15:17.811
I forgot that.

184
00:15:17.811 --> 00:15:19.948
And thereby the code crashed.

185
00:15:19.948 --> 00:15:23.838
So the fix the really like
illustrious fix is watch this.

186
00:15:30.274 --> 00:15:35.038
Now, get to get to show off here with the
pound sign and you'll make a new mistake.

187
00:15:35.038 --> 00:15:39.261
Great, so yeah.

188
00:15:39.261 --> 00:15:43.633
I guess there is a cautionary tale here
that TypeScript will solve 90% of bugs but

189
00:15:43.633 --> 00:15:44.516
not all of them.

