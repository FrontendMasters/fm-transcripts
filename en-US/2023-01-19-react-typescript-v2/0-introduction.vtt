WEBVTT

1
00:00:00.000 --> 00:00:01.160
My name is Steve.

2
00:00:01.160 --> 00:00:05.710
I currently live in Denver, Colorado, USA.

3
00:00:05.710 --> 00:00:10.558
I am from the, either, New York City or
New Jersey depending on what's better for

4
00:00:10.558 --> 00:00:13.100
the story or the point I'm trying to make.

5
00:00:13.100 --> 00:00:16.435
I work at a company called Temporal.

6
00:00:16.435 --> 00:00:19.772
I run the frontend engineering team there.

7
00:00:19.772 --> 00:00:21.280
I'm also in the Developers Tools team.

8
00:00:21.280 --> 00:00:27.192
So the same team working on both
the UI as well as VS code plugins and

9
00:00:27.192 --> 00:00:29.138
fun stuff like that.

10
00:00:29.138 --> 00:00:33.412
So, today we're gonna talk about React and
TypeScript.

11
00:00:33.412 --> 00:00:37.690
So what is gonna be in this course,
and what do you need to know?

12
00:00:37.690 --> 00:00:41.650
One, you do not necessarily need to be,
it's not like I am already

13
00:00:41.650 --> 00:00:46.270
a TypeScript master, and now I'd like
to also learn how to use it with React.

14
00:00:46.270 --> 00:00:49.295
The expectation is that you've
played with some React,

15
00:00:49.295 --> 00:00:51.320
you're mostly familiar with React.

16
00:00:51.320 --> 00:00:55.582
And you have probably heard that
TypeScript is supposed to be good, right?

17
00:00:55.582 --> 00:00:57.860
Type safety, that seems like a thing.

18
00:00:57.860 --> 00:01:02.828
And then you're probably,
like my origin story with this was,

19
00:01:02.828 --> 00:01:08.260
I think the first time I tried to
use TypeScript was 2016, right?

20
00:01:08.260 --> 00:01:10.730
Less gray in my beard,
more youthful exuberance.

21
00:01:10.730 --> 00:01:14.800
I'm like, yeah, let's try a strongly
typed version of JavaScript.

22
00:01:14.800 --> 00:01:16.858
And that's great when
you first try it out.

23
00:01:16.858 --> 00:01:20.136
And then the second things get hard,
you're like, or

24
00:01:20.136 --> 00:01:22.059
I could go back to JavaScript and

25
00:01:22.059 --> 00:01:26.560
just do whatever I want all the time
instead of having a compiler yell at me?

26
00:01:26.560 --> 00:01:29.927
And so,
that was the first two years, right?

27
00:01:29.927 --> 00:01:32.200
And then we were doing this big
rewriting of this app in 2018.

28
00:01:32.200 --> 00:01:37.250
And we had already been living
with this large code base.

29
00:01:37.250 --> 00:01:39.130
It was like one of those layer cakes.

30
00:01:39.130 --> 00:01:43.819
And so, they had a Rails app that
had CoffeeScript and jQuery,

31
00:01:43.819 --> 00:01:47.268
and then they put a React
hat on top of that, and

32
00:01:47.268 --> 00:01:50.652
now we were gonna rewrite the thing,
right?

33
00:01:50.652 --> 00:01:54.309
And so changing that out in place,
the team was like,

34
00:01:54.309 --> 00:01:57.414
we should probably use TypeScript, right?

35
00:01:57.414 --> 00:02:01.778
That seems like the responsible thing
to do in 2018, possibly in 2022,

36
00:02:01.778 --> 00:02:02.940
almost definitely.

37
00:02:02.940 --> 00:02:08.351
And so, it starts out like this,
like you do the easy mode,

38
00:02:08.351 --> 00:02:11.721
and then you come across some issue.

39
00:02:11.721 --> 00:02:15.968
And you either, a,
start throwing any types anywhere, or b,

40
00:02:15.968 --> 00:02:21.280
you start just randomly copying and
pasting stuff you find from the Internet.

41
00:02:21.280 --> 00:02:28.030
And that is, I think where a lot
of us live for a very long time.

42
00:02:28.030 --> 00:02:31.474
And so, the goal of this course is kind
of like not only just go like, okay,

43
00:02:31.474 --> 00:02:33.835
this is what you do here,
this is what you do there.

44
00:02:33.835 --> 00:02:37.756
But kind of two major themes, which is,
one, kind of understanding some of

45
00:02:37.756 --> 00:02:41.330
the just philosophical underpinnings
of what we're doing and why.

46
00:02:41.330 --> 00:02:43.550
So I'll start out kind of slow and
then ramp up.

47
00:02:43.550 --> 00:02:49.028
And then two, the main hypothesis
that I'm gonna try to push on you,

48
00:02:49.028 --> 00:02:53.857
is that a lot of times the answer
is literally in your editor.

49
00:02:53.857 --> 00:02:57.354
I'm gonna be using VS code because
I figure, VS code Microsoft,

50
00:02:57.354 --> 00:03:01.313
IntelliSense Microsoft,
TypeScript Microsoft, all works together.

51
00:03:01.313 --> 00:03:05.131
I assume that a lot of these will work and
other editors as well,

52
00:03:05.131 --> 00:03:07.231
but that is kind of my experience.

53
00:03:07.231 --> 00:03:09.725
And so, a lot of times actually
using TypeScript and React.

54
00:03:09.725 --> 00:03:13.813
And using a lot of the hints and just
features in your editor to kind of have

55
00:03:13.813 --> 00:03:16.360
some introspection about what's going on,

56
00:03:16.360 --> 00:03:20.199
is a lot of times the best way to
figure out the path forward, right?

57
00:03:20.199 --> 00:03:23.915
A lot of times instead of like, all right,
let me jump over into my web browser and

58
00:03:23.915 --> 00:03:27.743
look up the docs on TypeScript, you can
actually just hover over stuff sometimes,

59
00:03:27.743 --> 00:03:29.020
and kind of get the answer.

60
00:03:29.020 --> 00:03:32.826
So if there's one main skill
that you get out of this,

61
00:03:32.826 --> 00:03:35.956
it is how you kind of use
your actual React and

62
00:03:35.956 --> 00:03:40.540
TypeScript app to learn how to
use TypeScript in your React app.

63
00:03:40.540 --> 00:03:42.770
It's like a positive feedback loop.

64
00:03:42.770 --> 00:03:45.970
We're gonna learn TypeScript through
building React components, right?

65
00:03:45.970 --> 00:03:49.598
And I think that if you're like, I'm into
this, there are definitely some other

66
00:03:49.598 --> 00:03:53.192
workshops that FrontMasters has, that
cover just purely TypeScript in depth.

67
00:03:53.192 --> 00:03:57.190
But this is kind of learning through
doing with a React application.

68
00:03:57.190 --> 00:04:01.120
At one point, when we start escalating
up the complexity of things,

69
00:04:01.120 --> 00:04:06.090
we'll take a brief detour into just enough
TypeScript to keep you dangerous, right?

70
00:04:06.090 --> 00:04:08.761
Just to kinda go back into some
of the more advanced stuff.

71
00:04:08.761 --> 00:04:12.602
And then we will jump into some
more complicated patterns in React.

72
00:04:12.602 --> 00:04:16.238
A lot of the stuff in React in particular,
which is a lot of executed at runtime,

73
00:04:16.238 --> 00:04:18.139
you could have stuff like prop types, and

74
00:04:18.139 --> 00:04:21.147
we'll convert some stuff from
Prop types in the very beginning.

75
00:04:21.147 --> 00:04:24.788
Where it's like, it allows your
counsel only in development.

76
00:04:24.788 --> 00:04:28.131
And that's great if like for
the actual view you're looking at, but

77
00:04:28.131 --> 00:04:32.104
a lot of times if you have a large enough
code base, somewhere off in the distance,

78
00:04:32.104 --> 00:04:34.200
you might have broken something, right?

79
00:04:34.200 --> 00:04:37.452
And, yes, in a perfect world, you have
amazing tests and everything is great.

80
00:04:37.452 --> 00:04:41.018
But it'd be really great if in your
editor, immediately, you saw a little

81
00:04:41.018 --> 00:04:44.593
red squiggly line that told you and
you can just fix it right then and there.

82
00:04:44.593 --> 00:04:49.484
You think about, unless you're better than
me, the number of mistakes you make a day,

83
00:04:49.484 --> 00:04:51.861
if you can cut it from
having to jump over and

84
00:04:51.861 --> 00:04:56.180
look at the console to just seen
immediately, you makeup a 10x developer.

85
00:04:56.180 --> 00:05:02.110
Also, more important
to me is autocomplete.

86
00:05:02.110 --> 00:05:04.330
It's the idea that I will
immediately start typing and

87
00:05:04.330 --> 00:05:05.880
it will tell me the rest of the answer.

88
00:05:05.880 --> 00:05:10.034
Cuz I have lost afternoons,
maybe full days,

89
00:05:10.034 --> 00:05:13.763
to misspelling an action
type in a Redux or

90
00:05:13.763 --> 00:05:18.785
useReducer reducer, or
something along those lines.

91
00:05:18.785 --> 00:05:21.908
Like midway through the course,
there is an issue where I was

92
00:05:21.908 --> 00:05:25.043
writing the solution to an exercise and
I made a stupid typo.

93
00:05:25.043 --> 00:05:30.640
I was doing doing it in without
the types first and then show you.

94
00:05:30.640 --> 00:05:32.970
I was like,
if I just had TypeScript this entire time,

95
00:05:32.970 --> 00:05:34.548
this wouldn't have happened to me.

96
00:05:34.548 --> 00:05:36.220
So we'll kind of look at that as well.

97
00:05:36.220 --> 00:05:40.038
And then, having worked on some
very large code bases, it is nice.

98
00:05:40.038 --> 00:05:43.015
I said this is before,
if something changes somewhere else,

99
00:05:43.015 --> 00:05:47.252
you have multiple people working on a code
base, having a lightning fast, compile it,

100
00:05:47.252 --> 00:05:50.082
just find all these little things,
all these edge cases.

101
00:05:50.082 --> 00:05:54.810
Definitely make life easier, and
make it so that you do not get paged.

102
00:05:54.810 --> 00:05:56.981
I do not like getting paged, right?

103
00:05:56.981 --> 00:06:01.774
So I wanted to pay some of the extra tax
in this ceremony around setting up types

104
00:06:01.774 --> 00:06:03.780
and some of those extra things.

105
00:06:03.780 --> 00:06:08.638
A lot of the times, or another theme,
is that TypeScript tries its hardest to

106
00:06:08.638 --> 00:06:13.420
stay out of your way, and only kind of
steps in, and sometimes feels a little

107
00:06:13.420 --> 00:06:17.940
bit pedantic when your code is actually
less clear than you think it is.

108
00:06:17.940 --> 00:06:21.648
And I think we've actually seen this
throughout, like even third party

109
00:06:21.648 --> 00:06:25.111
libraries, a lot of code,
now that TypeScript is becoming more and

110
00:06:25.111 --> 00:06:27.815
more popular,
it's getting simpler and simpler.

111
00:06:27.815 --> 00:06:29.511
There's less magic a lot of times, right?

112
00:06:29.511 --> 00:06:33.768
And so, it kind of in a lot of ways
forces you to write simpler code and

113
00:06:33.768 --> 00:06:35.280
be a little less fancy.

114
00:06:35.280 --> 00:06:40.302
And I think that, over time, contributes
to the quality of your codebase.

115
00:06:40.302 --> 00:06:42.838
So with that, let's get into it.

116
00:06:42.838 --> 00:06:48.080
One of the things we have available for
us is this fun little website.

117
00:06:48.080 --> 00:06:52.273
It has basically everything we're
gonna say today, and probably more,

118
00:06:52.273 --> 00:06:55.667
as well as all of the different
repos that we're gonna use.

119
00:06:55.667 --> 00:06:58.621
So if you wanna get ahead of the curve,
and clone and

120
00:06:58.621 --> 00:07:01.244
run npm install now, that's totally fine.

121
00:07:01.244 --> 00:07:03.926
You don't really have to opt for
some of the smaller ones,

122
00:07:03.926 --> 00:07:06.570
I'll put up some sandboxes and
stuff along those lines.

123
00:07:06.570 --> 00:07:10.378
But generally speaking, you can kinda
follow along with me as I'm going through

124
00:07:10.378 --> 00:07:12.793
stuff, and
we'll kinda see some stuff together.

125
00:07:12.793 --> 00:07:17.430
So some of the big updates between Version
1 and Version 2 is React 18, right?

126
00:07:17.430 --> 00:07:22.440
And with React 18, there was a bunch
of changes, some of the types of,

127
00:07:22.440 --> 00:07:27.615
for instance, like in React 17,
we're not there yet, we'll point out

128
00:07:27.615 --> 00:07:32.650
when we get there, you could just
use like React.function component.

129
00:07:32.650 --> 00:07:35.157
And it was like assume that you
support children all those things,

130
00:07:35.157 --> 00:07:36.920
and that doesn't work anymore in React 18.

131
00:07:36.920 --> 00:07:41.723
So it's like lots of little things that
are somewhat different between 17 and

132
00:07:41.723 --> 00:07:45.244
18, there's a number of kind
of new helper utilities.

133
00:07:45.244 --> 00:07:50.199
And just generally speaking, like, I
think one of the things if I compare even

134
00:07:50.199 --> 00:07:55.156
like 2016 TypeScript, to 2018,
to 2022, like every release,

135
00:07:55.156 --> 00:07:59.084
stuff gets a little bit more powerful and
a little bit easier.

136
00:07:59.084 --> 00:08:00.116
So in a lot of ways,

137
00:08:00.116 --> 00:08:04.845
there's both few things that you can't do
anymore cuz they're no longer supported.

138
00:08:04.845 --> 00:08:08.694
And at the same time,
a lot less ceremony and work, and

139
00:08:08.694 --> 00:08:12.635
the helpfulness in the editor
increases more and more.

140
00:08:12.635 --> 00:08:14.151
So even in v1, I was like, yo,

141
00:08:14.151 --> 00:08:17.030
you should use the editor to
like figure out the right thing.

142
00:08:17.030 --> 00:08:21.773
And that was a mostly good approach, and I
would say that these days that it becomes

143
00:08:21.773 --> 00:08:26.614
a really good approach, I think doubling
down on that skill is incredibly useful.

