WEBVTT

1
00:00:00.032 --> 00:00:07.009
So the challenge I'm gonna give to you
is I don't wanna show just one quote,

2
00:00:07.009 --> 00:00:10.946
I would like to show
some number of quotes.

3
00:00:10.946 --> 00:00:15.891
Let's see, the fortune is false.

4
00:00:15.891 --> 00:00:19.331
If I put this part back in,

5
00:00:23.819 --> 00:00:26.799
We can see we get this fun form
on the number of quotes to load.

6
00:00:26.799 --> 00:00:32.385
And I wanna remove this one cuz they're
all gonna show in here eventually,

7
00:00:32.385 --> 00:00:34.080
or we will put them in.

8
00:00:34.080 --> 00:00:35.436
In there, we can iterate through them.

9
00:00:35.436 --> 00:00:38.694
So the real UI I want is this fun form,

10
00:00:43.092 --> 00:00:47.576
That should load, where I can specify
a number of quotes that I want and

11
00:00:47.576 --> 00:00:51.225
hit the endpoint that pulls
in that many quotes, right?

12
00:00:51.225 --> 00:00:53.327
And so
this will be an array of quotes instead.

13
00:00:53.327 --> 00:00:57.093
So there'll be some differences
in how this all plays out for us.

14
00:00:57.093 --> 00:00:59.130
But why don't you take it for a spin?

15
00:00:59.130 --> 00:01:04.167
And then we'll come back together and
review some of the slightly variations

16
00:01:04.167 --> 00:01:09.219
on a theme that we get when we're dealing
with an array versus just one value.

17
00:01:13.843 --> 00:01:17.948
Okay, so the mission, whether or
not you choose to accept it,

18
00:01:17.948 --> 00:01:22.372
was to swap out getting a single quote for
getting multiple quotes.

19
00:01:22.372 --> 00:01:29.536
Now, for careful eagle eyes,
there's a button for loading the quotes.

20
00:01:29.536 --> 00:01:32.999
So I don't need this useEffect anymore.

21
00:01:32.999 --> 00:01:34.095
Goodbye, useEffect.

22
00:01:34.095 --> 00:01:36.770
Nothing I like more than
think about useEffect.

23
00:01:36.770 --> 00:01:39.570
Also, very important technical change.

24
00:01:43.312 --> 00:01:45.366
[SOUND] There we go.

25
00:01:45.366 --> 00:01:46.908
And this is no longer valid.

26
00:01:46.908 --> 00:01:55.405
Now, one of the nice things I can
do with collections, put an array.

27
00:01:55.405 --> 00:01:57.961
That works, right?

28
00:01:57.961 --> 00:02:02.582
Yeah, I'm setting you up,
it works in JavaScript, it doesn't.

29
00:02:02.582 --> 00:02:08.131
Well, that one I'm getting yelled at
because the quote doesn't exist anymore.

30
00:02:08.131 --> 00:02:10.688
And I'm not using it, but
if I tried to use it,

31
00:02:10.688 --> 00:02:12.794
I tried to use anything on it, right?

32
00:02:12.794 --> 00:02:19.953
So if I said quotes.map, and
then I will grab the individual quote.

33
00:02:19.953 --> 00:02:24.866
I definitely shouldn't deleted
that code earlier that had that,

34
00:02:24.866 --> 00:02:26.627
but we'll rewrite it.

35
00:02:26.627 --> 00:02:29.037
And we'll say return InspirationalQuote.

36
00:02:29.037 --> 00:02:36.243
And I gotta add the key anyway, quote.id.

37
00:02:36.243 --> 00:02:38.758
And you can see where this is gonna
start falling apart on me immediately.

38
00:02:38.758 --> 00:02:41.562
It's like, yo,
you ain't got no ID on a quote.

39
00:02:41.562 --> 00:02:46.914
You're like, I absolutely do,
I saw the type and it's like, I don't.

40
00:02:46.914 --> 00:02:49.484
So let's just put the rest of the content.

41
00:02:49.484 --> 00:02:51.576
And that is filling in the props
because it knows what the props of

42
00:02:51.576 --> 00:02:52.952
InspirationalQuote the component are.

43
00:02:52.952 --> 00:02:54.825
So again, I don't.

44
00:02:54.825 --> 00:02:58.781
If there's one reason beyond all
of the safety and the good and

45
00:02:58.781 --> 00:03:04.031
the bugs you won't have is not having to
remember what props you gave a component,

46
00:03:04.031 --> 00:03:06.718
particularly when you're live coding.

47
00:03:06.718 --> 00:03:11.937
But also in your normal day
to day life is worth it.

48
00:03:15.786 --> 00:03:18.849
For every work project, I use TypeScript.

49
00:03:18.849 --> 00:03:21.941
But even when I'm working on
a course that's only JavaScript,

50
00:03:21.941 --> 00:03:23.952
I will write the app in TypeScript first.

51
00:03:23.952 --> 00:03:28.861
That is the person I have become
over the last four years,

52
00:03:28.861 --> 00:03:32.339
is I will write in TypeScript first, and

53
00:03:32.339 --> 00:03:36.636
then I will simplify it
to JavaScript afterward,

54
00:03:36.636 --> 00:03:40.863
right, cuz the benefits
are that worth it to me.

55
00:03:40.863 --> 00:03:45.510
Cool, so I'm getting yelled at, and

56
00:03:45.510 --> 00:03:49.003
I hover over, I can see why.

57
00:03:49.003 --> 00:03:53.802
quotes is this type,
it's an array of never, right?

58
00:03:53.802 --> 00:04:01.424
Which again, when I start a heavy
metal band, will be our first album.

59
00:04:01.424 --> 00:04:04.007
I'll get a SoundCloud between now and
then.

60
00:04:04.007 --> 00:04:05.316
An array of never.

61
00:04:05.316 --> 00:04:09.977
And because it's like, yo,
you said you gave me an array.

62
00:04:09.977 --> 00:04:13.007
That's it, I don't know
anything else about this array.

63
00:04:13.007 --> 00:04:17.784
And so any has two siblings, both,

64
00:04:17.784 --> 00:04:25.276
they seem scarier than any but
are ultimately less bad.

65
00:04:25.276 --> 00:04:28.950
There's some kind of fiction that
I could write about all of this.

66
00:04:28.950 --> 00:04:35.775
If anyone's in the market for
TypeScript fiction, let me know.

67
00:04:35.775 --> 00:04:38.149
So there's any,
which means it could be anything.

68
00:04:38.149 --> 00:04:41.481
There is unknown, which is almost always
what you want if you think you want any,

69
00:04:41.481 --> 00:04:43.148
which is like I don't know what this is.

70
00:04:43.148 --> 00:04:49.313
Which then says, figure it out before you
use it instead of infecting everything.

71
00:04:49.313 --> 00:04:51.950
And then there is the bottom,
which is never,

72
00:04:51.950 --> 00:04:54.259
which is this isn't anything, right?

73
00:04:54.259 --> 00:04:57.834
And so it's looking at this array and
goes, if there was stuff in this array,

74
00:04:57.834 --> 00:05:00.090
it'll be like,
it's an array of those things.

75
00:05:00.090 --> 00:05:02.536
It's an empty array, so
it's an array of nothingness.

76
00:05:02.536 --> 00:05:04.359
It's an array of never.

77
00:05:04.359 --> 00:05:08.034
So the easiest way to handle that is
exactly how we handled it before.

78
00:05:08.034 --> 00:05:12.943
And so we can basically say
this is an array of Quote.

79
00:05:12.943 --> 00:05:15.918
There is a version of me.

80
00:05:15.918 --> 00:05:20.653
If anyone finds possibly even my current
code base in the open source where I used

81
00:05:20.653 --> 00:05:25.036
to make pluralize versions of every
type that were the array of that type,

82
00:05:25.036 --> 00:05:26.252
I no longer do that.

83
00:05:26.252 --> 00:05:29.431
The one character just wasn't worth it.

84
00:05:29.431 --> 00:05:32.363
So Quote, and we say that is an array.

85
00:05:32.363 --> 00:05:36.571
And now, even though there's no quotes
in it, it knows it's the right thing.

86
00:05:36.571 --> 00:05:38.740
I'm no longer being yelled at, right?

87
00:05:38.740 --> 00:05:41.301
I just had to help
TypeScript along the way.

88
00:05:41.301 --> 00:05:44.429
And then in exchange,
TypeScript helped me, and

89
00:05:44.429 --> 00:05:48.830
it now knows that it has these properties,
so on and so forth, right?

90
00:05:48.830 --> 00:05:51.352
And it all compiles as
you can see down there.

91
00:05:51.352 --> 00:05:56.925
I do need to fetch these quotes at some
point, but that's a later me problem.

92
00:05:56.925 --> 00:06:00.667
Because I have a new problem
that I have to deal with for

93
00:06:00.667 --> 00:06:05.406
reasons that are mostly a setup to
have to explain something to you,

94
00:06:05.406 --> 00:06:09.415
you'll notice that the button
is not in this component.

95
00:06:09.415 --> 00:06:12.929
It's in this Quotes plural component
that I have to go into, right?

96
00:06:12.929 --> 00:06:17.641
And there, we have our onSubmit, or

97
00:06:17.641 --> 00:06:20.836
we can have an onSubmit.

98
00:06:20.836 --> 00:06:23.876
But there, we have the full form
in which I can load Quotes.

99
00:06:23.876 --> 00:06:29.067
So I have the age old problem in React,
which is I have to pass down

100
00:06:29.067 --> 00:06:35.429
everything I need from the parent
component to the child components, right?

101
00:06:35.429 --> 00:06:37.316
And there are a bunch of
ways that I could do this.

102
00:06:37.316 --> 00:06:42.665
I could wrap setQuotes in a function and
pass it down, but I could just pass

103
00:06:42.665 --> 00:06:48.725
setQuotes down through as well, or I could
theoretically, it takes an onSubmit.

104
00:06:48.725 --> 00:06:52.029
I have multiple ways that
I could deal with this.

105
00:06:52.029 --> 00:06:56.622
The tricky part, not really
the tricky part with figuring out is,

106
00:06:56.622 --> 00:06:57.943
what is this type?

107
00:06:57.943 --> 00:07:00.406
And there are a bunch
of ways to do this one,

108
00:07:00.406 --> 00:07:03.292
there's nothing wrong
with stealing this type.

109
00:07:03.292 --> 00:07:07.954
This looks somewhat confusing,
but again, like I said before,

110
00:07:07.954 --> 00:07:11.017
useState has a wrapper over useProducer.

111
00:07:11.017 --> 00:07:13.494
And so it's just dispatching
a very simple object,

112
00:07:13.494 --> 00:07:16.771
which is whatever the new state is,
and updating that accordingly.

113
00:07:16.771 --> 00:07:20.779
So I can have all that in place, and
then I can pass that down if I need to, or

114
00:07:20.779 --> 00:07:22.868
anything that happens along the way.

115
00:07:22.868 --> 00:07:24.733
And set that all up, right?

116
00:07:24.733 --> 00:07:28.768
And so for instance,
I could pass on the direct value,

117
00:07:28.768 --> 00:07:33.257
I'm gonna pass in that onSubmit
handler that we saw before.

118
00:07:33.257 --> 00:07:36.072
I can just go and say,
so the count should be,

119
00:07:36.072 --> 00:07:39.495
we need to store the count to
figure out how many to get.

120
00:07:39.495 --> 00:07:43.515
Now, that could happen in either
component, we'll pass down the onSubmit

121
00:07:52.920 --> 00:07:54.189
But I need the count too, right?

122
00:07:54.189 --> 00:07:58.561
That's interesting, as if he says
that was some amount of surprise.

123
00:07:58.561 --> 00:08:01.992
All right, so I could pass down
the whole set of quotes, or

124
00:08:01.992 --> 00:08:04.315
I could figure out one way or the other.

125
00:08:04.315 --> 00:08:06.779
I can move, I either lift my state up and

126
00:08:06.779 --> 00:08:10.156
have counts in that higher
level component, right?

127
00:08:10.156 --> 00:08:14.736
Which will now trigger rerender of
everything whenever that count changes,

128
00:08:14.736 --> 00:08:18.621
cuz now every parent then rerenders
all of its children, right?

129
00:08:18.621 --> 00:08:20.708
So that's great for state management.

130
00:08:20.708 --> 00:08:23.060
And yeah, I'm not worried about
performance in this application.

131
00:08:23.060 --> 00:08:26.364
But what if I needed to
actually pass through,

132
00:08:26.364 --> 00:08:29.086
I could also pass down setQuotes too.

133
00:08:34.969 --> 00:08:40.053
And then we get the challenge
figuring out how to type this, Right?

134
00:08:40.053 --> 00:08:41.732
And so we'll pass this through.

135
00:08:44.039 --> 00:08:45.235
And so what type?

136
00:08:45.235 --> 00:08:47.440
This is currently in any, right,

137
00:08:47.440 --> 00:08:52.397
on purpose to show you that nothing got
yelled at as soon as I did that, right?

138
00:08:52.397 --> 00:08:55.241
It's like, yo, you're passing
random props in anything you want.

139
00:08:55.241 --> 00:09:00.604
One, any anywhere, and now,
all of these, guess what.

140
00:09:00.604 --> 00:09:03.369
Everything is now in any,
even if we could guess what it was, yeah?

141
00:09:03.369 --> 00:09:07.237
&gt;&gt; Why do they have any if it's
something you shouldn't even use?

142
00:09:07.237 --> 00:09:11.712
&gt;&gt; So I mean, if you pull in
a JavaScript library, right, and

143
00:09:11.712 --> 00:09:15.841
it doesn't have types,
you need something, right?

144
00:09:15.841 --> 00:09:17.958
You need the concept of an any.

145
00:09:17.958 --> 00:09:18.561
&gt;&gt; Just for us.

146
00:09:18.561 --> 00:09:19.142
&gt;&gt; Yeah.

147
00:09:19.142 --> 00:09:19.906
&gt;&gt; While we're working through.

148
00:09:19.906 --> 00:09:21.773
&gt;&gt; Yeah, exactly, right?

149
00:09:21.773 --> 00:09:27.315
It's a situation because JavaScript
happens to predate TypeScript,

150
00:09:27.315 --> 00:09:29.907
right, that you could run into.

151
00:09:29.907 --> 00:09:35.113
And so I think it's really great for
migrating.

152
00:09:35.113 --> 00:09:36.993
There are even ES lint plugins.

153
00:09:36.993 --> 00:09:39.403
In our code,
base we have an ES lint plugin,

154
00:09:39.403 --> 00:09:42.085
you can't even use any if you want it to,
right?

155
00:09:42.085 --> 00:09:46.199
To make sure that, yeah,
cuz anything it touches,

156
00:09:46.199 --> 00:09:51.633
if you had a function that is like,
yo, I only take a number, right?

157
00:09:51.633 --> 00:09:53.703
You can pass in any in there.

158
00:09:53.703 --> 00:09:57.528
And guess what the value is now, or
guess what the return value is now too.

159
00:09:57.528 --> 00:10:02.047
It's in any, everything in any touches
turn everything else along the way into

160
00:10:02.047 --> 00:10:03.676
an any, which is not great.

161
00:10:05.796 --> 00:10:13.731
So we'll say type, QuotesProps,

162
00:10:16.601 --> 00:10:19.998
And well, we know we don't need to
put the children in there, right?

163
00:10:19.998 --> 00:10:23.784
This is like pulling every, it's a review.

164
00:10:23.784 --> 00:10:26.272
We know that count,
if we're gonna pass count in.

165
00:10:26.272 --> 00:10:27.285
Apparently, we can do that.

166
00:10:27.285 --> 00:10:28.222
Let's do that one.

167
00:10:28.222 --> 00:10:29.575
count will be a number.

168
00:10:29.575 --> 00:10:30.215
We're gonna go a different way.

169
00:10:30.215 --> 00:10:31.150
We'll see both ways in a second.

170
00:10:31.150 --> 00:10:35.005
I'm not gonna pass,
I'll do both ways, we'll see it.

171
00:10:35.005 --> 00:10:37.011
onChange, we know how to handle.

172
00:10:37.011 --> 00:10:38.733
This is everything coming together.

173
00:10:46.383 --> 00:10:49.416
And we know that's on an input element,
which again, I can go verify as well.

174
00:10:49.416 --> 00:10:51.656
We know that there is a,

175
00:10:55.425 --> 00:11:01.281
We'll do this first, I'll show you if
I needed to pass in the other thing.

176
00:11:01.281 --> 00:11:02.323
FormEventHandler.

177
00:11:05.106 --> 00:11:09.585
And like I said, I am so happy I don't
have to do this all from memory.

178
00:11:09.585 --> 00:11:14.522
And if you're stressed out looking at how
does he know all these things, I don't.

179
00:11:16.822 --> 00:11:21.047
I'm literally using the auto complete and
the intelligence to help me here.

180
00:11:21.047 --> 00:11:24.139
And then children, we know that we
have an answer for that as well.

181
00:11:24.139 --> 00:11:29.798
So if I just did QuotesProps, All right,
it's like, yo, what about children?

182
00:11:29.798 --> 00:11:36.693
And I could add it in
there as a React node,

183
00:11:36.693 --> 00:11:41.818
but as we saw before, I can do.

184
00:11:45.076 --> 00:11:48.075
Cool, and now let's see.

185
00:11:48.075 --> 00:11:49.855
Save that all we got.

186
00:11:49.855 --> 00:11:55.079
It doesn't know what event is here or
onChanges, right, cuz that's wrong.

187
00:11:58.793 --> 00:12:00.399
But that caught the bug.

188
00:12:00.399 --> 00:12:02.369
I remember when I was going through
this before, I was like, that's wrong.

189
00:12:02.369 --> 00:12:06.687
I'm like, yeah,
I would like to be notified about it.

190
00:12:06.687 --> 00:12:09.976
You have to believe me that I
did that on purpose, I did.

191
00:12:09.976 --> 00:12:11.542
Cool, and so that passes in.

192
00:12:11.542 --> 00:12:13.936
I immediately found that little bug
that would have bitten me at some

193
00:12:13.936 --> 00:12:14.612
point or another.

194
00:12:14.612 --> 00:12:17.246
I've been like, yo, there is no onChange,
and you called this a function.

195
00:12:17.246 --> 00:12:19.753
I would have found it at runtime.

196
00:12:19.753 --> 00:12:24.714
And then we wanted to say,
with this point we are passing in count,

197
00:12:24.714 --> 00:12:26.584
and we'll do both ways.

198
00:12:30.825 --> 00:12:33.512
Default count to 10.

199
00:12:33.512 --> 00:12:37.911
And so you can see as I do this refactor,
I will know when I am good

200
00:12:37.911 --> 00:12:42.405
because they're my sidebar and
the red squiggles will tell me.

201
00:12:42.405 --> 00:12:46.790
So it's like count needs to
be a number in this case.

202
00:12:46.790 --> 00:12:50.353
And then I don't really
care about onChange, right,

203
00:12:50.353 --> 00:12:52.995
I don't really have anything for that.

204
00:12:52.995 --> 00:12:56.338
So we're gonna make that optional in
a second as we pull everything together.

205
00:12:56.338 --> 00:13:03.923
And so here we'll say, That our set,

206
00:13:06.971 --> 00:13:10.341
fetchQuotes, that takes a number, right?

207
00:13:10.341 --> 00:13:14.384
And so this refraction becomes
super easy as I go through, and

208
00:13:14.384 --> 00:13:20.326
then we'll, setQuotes.

209
00:13:20.326 --> 00:13:23.733
You can still make little mistakes,
especially if you're talking and coding.

210
00:13:23.733 --> 00:13:29.643
And I roughly get that everything
is gonna work as expected.

211
00:13:29.643 --> 00:13:32.050
I was about to say,
my onChange should yell at me.

212
00:13:32.050 --> 00:13:37.188
onChange is missing in the type,
and so I don't need that per se.

213
00:13:37.188 --> 00:13:40.831
And if it feels like I am
reinventing parts of HTML,

214
00:13:40.831 --> 00:13:44.409
that's a good feeling,
we'll talk about that.

215
00:13:44.409 --> 00:13:48.466
So we'll save that, and
everything compiles, right?

216
00:13:48.466 --> 00:13:49.278
Let's verify.

217
00:13:53.778 --> 00:13:59.780
Cool, other than some markup changes,
I think I have a double.

218
00:13:59.780 --> 00:14:00.938
I can get rid of that.

219
00:14:03.803 --> 00:14:07.362
Piece that I left in there from earlier.

220
00:14:07.362 --> 00:14:08.691
And everything works.

