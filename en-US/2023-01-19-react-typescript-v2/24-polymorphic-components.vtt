WEBVTT

1
00:00:00.000 --> 00:00:03.314
So when I worked at Twilio,
we had this design system paced and

2
00:00:03.314 --> 00:00:05.428
I was like good friends with that team.

3
00:00:05.428 --> 00:00:09.174
And the primitive for everything was box.

4
00:00:09.174 --> 00:00:11.125
Right?
Box is kinda like div but

5
00:00:11.125 --> 00:00:13.513
everything under the hood was a box.

6
00:00:13.513 --> 00:00:17.357
And if some teams like well we can't
use your design system cuz we need this

7
00:00:17.357 --> 00:00:19.853
custom thing like cool start with box,
right?

8
00:00:19.853 --> 00:00:21.451
And you'll see this a lot.

9
00:00:21.451 --> 00:00:25.454
It exists in like material UI and
chakra UI.

10
00:00:25.454 --> 00:00:30.213
And this is super easy to implement
where it's S article, right?

11
00:00:30.213 --> 00:00:33.263
And then under the hood, and
I'll show you this code in a second.

12
00:00:33.263 --> 00:00:36.305
Under the hood, you can just do
this little trick where it's like

13
00:00:36.305 --> 00:00:38.638
you've placed a tag name
with whatever that was.

14
00:00:38.638 --> 00:00:40.943
Right?

15
00:00:40.943 --> 00:00:44.445
And in a normal world like taking that and

16
00:00:44.445 --> 00:00:48.256
passing it to component
props without ref or

17
00:00:48.256 --> 00:00:53.303
component parts with ref and
like getting the rest of those

18
00:00:53.303 --> 00:00:57.939
types to come in would totally work and
it can be done.

19
00:00:57.939 --> 00:01:03.411
And this is the question at what
point do you make the call?

20
00:01:03.411 --> 00:01:04.336
It can be done.

21
00:01:04.336 --> 00:01:08.941
However, because particularly
the dom is so fast and

22
00:01:08.941 --> 00:01:14.073
loose, and then refs can be
all sorts of different things.

23
00:01:14.073 --> 00:01:17.630
And a few other different children and
stuff like that,

24
00:01:17.630 --> 00:01:21.425
which is why they were removed
from functional component.

25
00:01:21.425 --> 00:01:22.757
Because it can be so fast.

26
00:01:22.757 --> 00:01:26.654
The actual I think I linked to a bunch.

27
00:01:26.654 --> 00:01:31.055
Like blog posts at the bottom like
a deep academic discussions on

28
00:01:31.055 --> 00:01:35.142
the nuances of doing it in
these libraries and originally.

29
00:01:35.142 --> 00:01:39.045
I was yeah let's take an exploration right
cuz like clearly we must do it in paste

30
00:01:39.045 --> 00:01:42.779
I'll just show you the simple version we
will get into like the deep version cuz

31
00:01:42.779 --> 00:01:43.474
at one point.

32
00:01:43.474 --> 00:01:46.957
I was let me go see how my buddies did it.

33
00:01:46.957 --> 00:01:50.527
They just hard coded all the HTML
values with what they should be for

34
00:01:50.527 --> 00:01:52.201
like the common denominator.

35
00:01:52.201 --> 00:01:56.384
Cuz they're actually if you actually
hovered over a section, a div and aside,

36
00:01:56.384 --> 00:01:58.455
they're all just base html elements.

37
00:01:58.455 --> 00:01:59.796
They don't actually have
any special properties.

38
00:01:59.796 --> 00:02:02.566
They're all boxes.

39
00:02:02.566 --> 00:02:07.289
So, sometimes, they didn't do all
these deep gymnastics, right?

40
00:02:07.289 --> 00:02:10.208
They just had a list of all
the properties that box supported, and

41
00:02:10.208 --> 00:02:11.974
it was all the common ones across that.

42
00:02:11.974 --> 00:02:17.088
There's a real question you need to
ask yourself of, if you start nesting

43
00:02:17.088 --> 00:02:22.121
a like type ternary inside of another
one that then flips over into a never

44
00:02:22.121 --> 00:02:27.629
ending one case Library code
is a different story, right?

45
00:02:27.629 --> 00:02:32.353
The stuff you have to do to support
a wide range of generalized use cases.

46
00:02:32.353 --> 00:02:33.857
Absolutely.

47
00:02:33.857 --> 00:02:38.660
There has never been a time that
I've done one of those things

48
00:02:38.660 --> 00:02:43.745
like when I told you that one time,
I just busted out this crazy,

49
00:02:43.745 --> 00:02:46.677
generic and it just flowed out of me.

50
00:02:46.677 --> 00:02:50.382
I don't totally remember, but
I'm pretty sure I deleted that.

51
00:02:50.382 --> 00:02:51.220
Do you know what I mean?

52
00:02:51.220 --> 00:02:57.322
It worked, but, I went for a walk and
a simpler, more maintainable for

53
00:02:57.322 --> 00:03:03.144
any junior engineer on my team
version of that was the right answer.

54
00:03:03.144 --> 00:03:08.377
So, to the question in the chat,
I think sometimes that is, that sense and

55
00:03:08.377 --> 00:03:13.281
that the spirit that fuels that
question is I think incredibly valid,

56
00:03:13.281 --> 00:03:18.037
right, yeah, for if you're just
mirroring a simple like button.

57
00:03:18.037 --> 00:03:19.235
I use that all the time.

58
00:03:19.235 --> 00:03:21.156
Super helpful.

59
00:03:21.156 --> 00:03:25.070
We'll look at some of this but,
I would say,

60
00:03:25.070 --> 00:03:29.299
I would tell you a cautionary tale here,
right?

61
00:03:29.299 --> 00:03:33.620
So this is from the paste docks, right,
there all boxes you can see they make you

62
00:03:33.620 --> 00:03:37.636
then use instead of CSS things they
have their very specific properties.

63
00:03:37.636 --> 00:03:42.899
Is to build you into their system so
that it works with everything else.

64
00:03:42.899 --> 00:03:47.173
But this is what the simplest version if
you just wanted to use all the standard

65
00:03:47.173 --> 00:03:49.036
div section paragraph, right.

66
00:03:49.036 --> 00:03:52.913
They have like base CSS style and
that's different, but

67
00:03:52.913 --> 00:03:57.517
they are functionally the same is
that you would basically say hey,

68
00:03:57.517 --> 00:04:00.131
as can be any one of these known types.

69
00:04:00.131 --> 00:04:02.334
And then have it be that tag name.

70
00:04:02.334 --> 00:04:07.773
And then since they all have the same core
set of things you can like pull it in,

71
00:04:07.773 --> 00:04:09.455
and this mostly works.

72
00:04:09.455 --> 00:04:15.929
But as you kinda get to this is what I
worked out is as I was going through it,

73
00:04:15.929 --> 00:04:21.267
I was this is a bad idea right and
kinda stopped myself right.

74
00:04:21.267 --> 00:04:25.783
Because a lot of times is even though some
libraries choose to just keep it a lot

75
00:04:25.783 --> 00:04:26.972
simpler than this.

76
00:04:26.972 --> 00:04:30.146
And you can go all the way,
and I think that I would.

77
00:04:30.146 --> 00:04:34.816
Turn this more into a cautionary
tale that you should probably not.

78
00:04:34.816 --> 00:04:35.453
Right.
Can you?

79
00:04:35.453 --> 00:04:36.857
Absolutely.

80
00:04:36.857 --> 00:04:39.340
But at that point you are deep
into the internals of Type Script.

81
00:04:39.340 --> 00:04:44.815
I think we've wandered far just
to abstract something there

82
00:04:44.815 --> 00:04:51.806
like the work to grab the common elements
is a lot easier in that case, right?

83
00:04:51.806 --> 00:04:56.732
Or have two components becomes a lot
easier if your goal is to build

84
00:04:56.732 --> 00:04:58.442
a react application.

85
00:04:58.442 --> 00:04:59.739
I would caution you, right?

86
00:04:59.739 --> 00:05:00.427
It seems good.

87
00:05:00.427 --> 00:05:03.453
It seems like I should do this
because abstractions are great.

88
00:05:03.453 --> 00:05:04.330
Except when they're not.

