WEBVTT

1
00:00:00.190 --> 00:00:03.952
Now what we're going to do
is review some validation.

2
00:00:03.952 --> 00:00:10.060
So what we're gonna do is we're gonna
go into we're clear the server.

3
00:00:10.060 --> 00:00:13.549
We're gonna go up a directory.

4
00:00:13.549 --> 00:00:18.289
We're gonna go CD, food app dot and

5
00:00:18.289 --> 00:00:24.136
then it's gonna be
the final validation and

6
00:00:24.136 --> 00:00:29.043
I am going to start up a local server.

7
00:00:29.043 --> 00:00:35.094
So yarn Dev, and
I'm also gonna open it up,

8
00:00:35.094 --> 00:00:42.780
so I'm gonna open up a new tab
code now if we go back here,

9
00:00:42.780 --> 00:00:47.940
we're gonna talk about vuelidate.

10
00:00:47.940 --> 00:00:51.082
So, let's finish up the cart.

11
00:00:51.082 --> 00:00:54.601
We added the cart to the link in the menu,
and

12
00:00:54.601 --> 00:00:58.802
then we're gonna review
validation In vuelidate.

13
00:00:58.802 --> 00:01:02.705
The way that vuelidate works is that
it kind of connects to V model,

14
00:01:02.705 --> 00:01:04.530
which is really interesting.

15
00:01:04.530 --> 00:01:06.110
It gives you some computed properties.

16
00:01:06.110 --> 00:01:09.998
So it what the library does is not
just like hand you like, okay,

17
00:01:09.998 --> 00:01:12.410
everything's validated for you.

18
00:01:12.410 --> 00:01:15.881
What it does is it gives you a few
things that you can do that.

19
00:01:15.881 --> 00:01:20.226
To check some things and then you
show what you need to do to show and

20
00:01:20.226 --> 00:01:21.590
hide things.

21
00:01:21.590 --> 00:01:26.456
So if we go to our
Nuxt Food App that's online and

22
00:01:26.456 --> 00:01:33.392
we look at this piece, what we wanna
make sure of is that we can't add

23
00:01:33.392 --> 00:01:38.399
to the cart unless some add on was added,
right?

24
00:01:38.399 --> 00:01:40.405
We wanna make sure that
the user does that.

25
00:01:40.405 --> 00:01:45.216
So if I add to the cart,
we're gonna pipe through that app toast.

26
00:01:45.216 --> 00:01:47.950
Remember, we had that app
toast component with a slot.

27
00:01:47.950 --> 00:01:53.194
Where we could say like, okay, anything,
any content that we have goes into

28
00:01:53.194 --> 00:01:58.841
the slot so instead of saying, order
submitted and, go to checkout restaurants,

29
00:01:58.841 --> 00:02:03.382
we can say, please select options and
Add Ons before continuing.

30
00:02:03.382 --> 00:02:07.571
And so now I can add something here and
add to the cart, and

31
00:02:07.571 --> 00:02:10.110
now it's the order added.

32
00:02:10.110 --> 00:02:13.277
And that cart adds to that.

33
00:02:13.277 --> 00:02:14.990
So let's look at these.

34
00:02:14.990 --> 00:02:19.046
Let's look at the validation
here in the vuelidate.

35
00:02:19.046 --> 00:02:26.052
I have this article called form validation
and under an hour with vuelidate, and

36
00:02:26.052 --> 00:02:31.099
in it, I have some like really
basic examples if I open this

37
00:02:31.099 --> 00:02:36.352
really basic example in code sandbox,
and this is, vucli,

38
00:02:36.352 --> 00:02:41.860
not Nuxt, we are importing vuelidate and
view use vuelidate.

39
00:02:41.860 --> 00:02:46.753
But if you wanted to do this and next what
you would do is create a plugin that says

40
00:02:46.753 --> 00:02:50.610
import vuelidate from vuelidate and
view, use vuelidate and

41
00:02:50.610 --> 00:02:53.599
I'll show you that in
a plugin in just a moment.

42
00:02:53.599 --> 00:02:57.871
And now if we have this app,
what we're gonna do is we're

43
00:02:57.871 --> 00:03:02.010
gonna import required from
vuelidate validators.

44
00:03:02.010 --> 00:03:03.388
And there's a bunch of different options.

45
00:03:03.388 --> 00:03:07.438
There's like min length and you can,
state a bunch of different things

46
00:03:07.438 --> 00:03:12.180
that you're looking for in that, in this
case, all I'm looking for is required.

47
00:03:12.180 --> 00:03:13.311
So I have.

48
00:03:13.311 --> 00:03:16.240
Data return name is an empty string.

49
00:03:16.240 --> 00:03:21.970
And typically, what we would do is V model
and that has a relationship with name.

50
00:03:21.970 --> 00:03:25.969
But instead of saying v model name,

51
00:03:25.969 --> 00:03:31.070
what I'm gonna say is $v.name.$model.

52
00:03:31.070 --> 00:03:37.718
And what that allows me to say is look in
another a new area called validations.

53
00:03:37.718 --> 00:03:43.892
For this name property,
if I open this in another window,

54
00:03:43.892 --> 00:03:48.302
what I will see here in view is typically,

55
00:03:48.302 --> 00:03:52.090
we have this name, if I write like.

56
00:03:53.250 --> 00:03:54.857
Sarah.

57
00:03:54.857 --> 00:03:56.470
I'm given my name as Sarah.

58
00:03:56.470 --> 00:03:59.789
But what I'm really attaching
to is this computed object.

59
00:03:59.789 --> 00:04:03.281
In this computed object,
we've got this V dollar sign, and

60
00:04:03.281 --> 00:04:06.820
it has a bunch of things that
it's going to let you know.

61
00:04:06.820 --> 00:04:12.439
So that first V object is gonna tell you
a bunch of things about the whole thing.

62
00:04:12.439 --> 00:04:16.770
So anything in that form,
anything in that component, a whole thing.

63
00:04:16.770 --> 00:04:19.664
So I find out if it's dirty and dirty and

64
00:04:19.664 --> 00:04:25.115
vuelidate means if I've touched any
inputs at all, then it will be true.

65
00:04:25.115 --> 00:04:30.554
Do I have any errors that's false,
and a few other pieces here,

66
00:04:30.554 --> 00:04:35.408
but that name that name goes
into this one in particular.

67
00:04:35.408 --> 00:04:40.167
So if you have multiple fields, so let's
say you have a form and a component with

68
00:04:40.167 --> 00:04:44.380
just tons of fields, this first v
dollar sign is gonna be everything.

69
00:04:44.380 --> 00:04:49.859
And then that name is gonna be just
the things that you're looking for here.

70
00:04:49.859 --> 00:04:52.354
You can see we have the model is Sara.

71
00:04:52.354 --> 00:04:54.928
As you you might have met and notice, and

72
00:04:54.928 --> 00:04:58.450
then we have weather we
have errors are dirty.

73
00:04:58.450 --> 00:05:02.585
And you could see how this would be really
useful especially if you did something

74
00:05:02.585 --> 00:05:03.890
like the model dot lazy.

75
00:05:03.890 --> 00:05:06.420
We talked about those modifiers.

76
00:05:06.420 --> 00:05:12.965
So if we're writing things in forms, and
we wanna show something conditionally,

77
00:05:12.965 --> 00:05:18.679
you can access that piece and
show conditionally based on those pieces.

78
00:05:18.679 --> 00:05:20.113
Some things and you can,

79
00:05:20.113 --> 00:05:24.891
have it wait to validate until the model
lazy don't do it until they're done typing

80
00:05:24.891 --> 00:05:28.577
because it is kind of annoying
when you're filling out a form and

81
00:05:28.577 --> 00:05:33.453
like the validations going off like, your
name isn't allowed to be one character.

82
00:05:33.453 --> 00:05:34.965
I'm like I'm not done yet.

83
00:05:34.965 --> 00:05:41.873
[LAUGH] So it keeps that in mind as
well so basically you're able to build,

84
00:05:41.873 --> 00:05:46.406
these kind of complex
experiences where you say

85
00:05:46.406 --> 00:05:51.940
something like,
this field is required like I can.

86
00:05:51.940 --> 00:05:57.000
I'm really just manually writing
that right I'm going into it.

87
00:05:57.000 --> 00:05:58.389
It's very flexible this way.

88
00:05:58.389 --> 00:05:59.747
We're going into.

89
00:05:59.747 --> 00:06:02.560
In here and I have that input.

90
00:06:02.560 --> 00:06:07.054
But I also say, have these like
this is required that I show

91
00:06:07.054 --> 00:06:12.211
conditionally on a V if or
if it doesn't have the right min length.

92
00:06:12.211 --> 00:06:16.430
So you can see, I have I'm
capturing some form responses here.

93
00:06:16.430 --> 00:06:19.641
And I have I'm bringing in required and
min length here.

94
00:06:19.641 --> 00:06:25.070
And so I'm saying like, your name
is required, the min length is two.

95
00:06:25.070 --> 00:06:29.168
And then you can show
these different errors,

96
00:06:29.168 --> 00:06:33.487
depending on the errors
that you have in the app.

97
00:06:33.487 --> 00:06:37.880
So it's pretty powerful for building
these conditional pieces of logic.

98
00:06:39.730 --> 00:06:44.426
So if we wanted to do that on our app,
and we totally do,

99
00:06:44.426 --> 00:06:49.433
because we don't want people
to be able to like order tacos

100
00:06:49.433 --> 00:06:54.543
without saying they're a carnie
Asada taco or a pojo taco or

101
00:06:54.543 --> 00:07:01.727
something like that, then we can go into
our ID, our underscore ID page and we can.

102
00:07:01.727 --> 00:07:03.045
I'm in the wrong one.

103
00:07:03.045 --> 00:07:04.270
Let me open up the right one.

104
00:07:04.270 --> 00:07:07.542
This is the final validation.

105
00:07:07.542 --> 00:07:12.776
So if we go into the components.

106
00:07:12.776 --> 00:07:17.639
And we go into the pages,
item ID What you'll notice here is

107
00:07:17.639 --> 00:07:22.213
that instead of the V model
connecting to item options,

108
00:07:22.213 --> 00:07:26.710
we're connecting to dollar
sign item options model.

109
00:07:28.340 --> 00:07:33.660
And if we go down here we have the import
required from you vuelidate validators and

110
00:07:33.660 --> 00:07:39.310
then I have this validations object where
I'm saying okay for item options and

111
00:07:39.310 --> 00:07:42.570
item Add Ons, those are the two
things that we wanna make required.

112
00:07:42.570 --> 00:07:43.890
And I'm making them required.

113
00:07:43.890 --> 00:07:48.210
So we've got item map,
item options and item Add Ons.

114
00:07:48.210 --> 00:07:49.384
You have to name them.

115
00:07:49.384 --> 00:07:52.648
It's kind of like watch where you have to
name them the same thing as the model that

116
00:07:52.648 --> 00:07:53.560
you're looking for.

117
00:07:54.720 --> 00:07:56.686
And so there we go.

118
00:07:56.686 --> 00:08:00.790
For each one of these for
the add on we have,

119
00:08:00.790 --> 00:08:05.479
we modeled the dollar
sign item Add Ons .model.

120
00:08:05.479 --> 00:08:10.603
And here dot model if we look at this

121
00:08:10.603 --> 00:08:17.140
in our nuxt food app if
we do our local host and

122
00:08:17.140 --> 00:08:21.395
we go to our Soup Dumplings.

123
00:08:24.770 --> 00:08:28.703
We can see here in our view area,

124
00:08:28.703 --> 00:08:32.506
we can like go into the whoops.

125
00:08:32.506 --> 00:08:38.820
In our view area in side the next page
item ID you see all of these pieces of

126
00:08:38.820 --> 00:08:45.550
the data that you're used to, and
then you see this V dollar sign.

127
00:08:45.550 --> 00:08:48.527
And you can see that
main area that we said,

128
00:08:48.527 --> 00:08:52.005
dirty is false because I
haven't touched it yet.

129
00:08:52.005 --> 00:08:56.930
And invalid and
we're like checking for these pieces.

130
00:08:56.930 --> 00:09:02.421
And then we can also dive into each
one in specific the current item.

131
00:09:02.421 --> 00:09:06.770
And the combine and
all of these kind of pieces off of that.

132
00:09:08.190 --> 00:09:14.538
So then what we wanna do is we don't want
to submit the form unless we're okay.

133
00:09:14.538 --> 00:09:19.990
So what we wanna do is we wanna have this
new thing called errors equals false.

134
00:09:19.990 --> 00:09:23.978
So we wanna say there are no errors, yet.

135
00:09:23.978 --> 00:09:28.858
But when we hit that- we're not
validating anything until someone hits

136
00:09:28.858 --> 00:09:31.000
that add to cart button.

137
00:09:31.000 --> 00:09:35.328
As soon as that hits that add to
cart button we are going to check if

138
00:09:35.328 --> 00:09:36.940
something is invalid.

139
00:09:36.940 --> 00:09:40.621
And if anything,
if there's errors for add on air or

140
00:09:40.621 --> 00:09:45.559
if there's errors for option error,
and then we're gonna ask like,

141
00:09:45.559 --> 00:09:49.690
if there's errors for Add Onns or
option error than this.

142
00:09:49.690 --> 00:09:54.410
This dot errors equals true, but if not,
this dot errors equals false and

143
00:09:54.410 --> 00:09:57.608
cart submitted equals true and
you can go ahead and

144
00:09:57.608 --> 00:10:00.376
store this dot store
to commit Add To Cart.

145
00:10:00.376 --> 00:10:04.991
So we're keeping it from adding
like being able to add to the cart

146
00:10:04.991 --> 00:10:10.130
until that's done until we have
validated that that exists.

147
00:10:10.130 --> 00:10:16.066
So now if we go back to our code pen
We have now reviewed validation,

148
00:10:16.066 --> 00:10:17.232
[LAUGH] cool.

