WEBVTT

1
00:00:00.562 --> 00:00:03.630
All right,
we're going to add the cart now.

2
00:00:03.630 --> 00:00:08.090
So we made the cart page, but we didn't
actually put anything on the cart.

3
00:00:08.090 --> 00:00:10.900
So right now what we're going to do
is we're going to take whatever's

4
00:00:10.900 --> 00:00:11.830
on the cart.

5
00:00:11.830 --> 00:00:14.760
And we're going to show what's on
the cart and we're also going to use

6
00:00:14.760 --> 00:00:19.560
a thing called the getter to show pieces
of a combined price for everything.

7
00:00:21.050 --> 00:00:25.790
So, here is the let you know
kind of like static table.

8
00:00:25.790 --> 00:00:29.540
If I put this on here,
I will get a static table layout for

9
00:00:29.540 --> 00:00:32.010
all of this stuff, but
we're going to do what we did with that.

10
00:00:32.010 --> 00:00:36.180
Select the unit before and we're going
to make this a little bit more dynamic.

11
00:00:36.180 --> 00:00:37.680
So let's go back to our cart.

12
00:00:39.680 --> 00:00:42.480
Right now we just have
an each to have cart.

13
00:00:42.480 --> 00:00:45.890
And I'm going to plop this table in here.

14
00:00:47.800 --> 00:00:53.963
As you might have guessed,
we have to use map state,

15
00:00:53.963 --> 00:00:57.614
v map state to go gather our cart

16
00:01:01.874 --> 00:01:06.689
Now, when we're working with the cart,
we're gonna make good uses of

17
00:01:06.689 --> 00:01:11.503
things like For-loops and that kind
of binding in order to do this, but

18
00:01:11.503 --> 00:01:15.540
this table this T head Is going
to stay consistent, right?

19
00:01:15.540 --> 00:01:18.730
We want to tell people item add ons,
amounts and price and

20
00:01:18.730 --> 00:01:22.980
if we go look back at what we've got so
far on that page.

21
00:01:22.980 --> 00:01:28.855
If I go to cart then you can
see kcd a plain add ons?

22
00:01:28.855 --> 00:01:31.595
None amount is one total price.

23
00:01:31.595 --> 00:01:33.411
And this is all hard coded, right?

24
00:01:33.411 --> 00:01:37.195
Right now don't worry about
the total price it isn't correct.

25
00:01:37.195 --> 00:01:39.585
It's all just hard coded on there.

26
00:01:39.585 --> 00:01:44.570
So what we're going to do, is we're going
to go, if you're not familiar with tables,

27
00:01:44.570 --> 00:01:46.930
this TR is a table row.

28
00:01:46.930 --> 00:01:50.090
And we need to loop through
all of the table rows

29
00:01:50.090 --> 00:01:51.800
to put what's in the cart on the table.

30
00:01:51.800 --> 00:02:00.620
So we're gonna say V for
item in cart, and we have a key.

31
00:02:00.620 --> 00:02:04.670
And remember we use that you
UUID to create a unique ID.

32
00:02:04.670 --> 00:02:09.850
So we have an item.ID when we're looping
through all of these things, and

33
00:02:09.850 --> 00:02:11.680
instead of saying case idea,

34
00:02:11.680 --> 00:02:17.710
what we want to do is item.item,
because that's the name of the item.

35
00:02:17.710 --> 00:02:23.630
And then this one, remember how we
talked about how, for things like

36
00:02:23.630 --> 00:02:28.910
burritos or something like that we have to
say, pojo or plain or something like that.

37
00:02:28.910 --> 00:02:32.010
But not everything has that,
the pizzas don't have that and

38
00:02:32.010 --> 00:02:33.300
the dimsums don't have that.

39
00:02:33.300 --> 00:02:37.980
So here we'll make a conditional,
so we'll say V-if and

40
00:02:37.980 --> 00:02:42.090
we'll say item.options.

41
00:02:42.090 --> 00:02:46.120
And then if we have an option,

42
00:02:46.120 --> 00:02:50.610
we can say item got options, and
you're only really allowed one option.

43
00:02:50.610 --> 00:02:52.340
Remember the radio buttons.

44
00:02:52.340 --> 00:02:55.420
So this is good enough for this area.

45
00:02:55.420 --> 00:02:59.950
However, for something like add ons,
what we're gonna need to do is we're

46
00:02:59.950 --> 00:03:04.430
gonna need to loop through those add
ons in order to put them on the page.

47
00:03:04.430 --> 00:03:07.080
Because we can have multiple add ons.

48
00:03:07.080 --> 00:03:11.755
So we're gonna say, V4 is add on in

49
00:03:11.755 --> 00:03:19.000
item.addons.

50
00:03:19.000 --> 00:03:22.560
And we also see that error
that's kind of nice.

51
00:03:22.560 --> 00:03:26.800
We've got the key and so the key,
the dynamic key is going to be add on.

52
00:03:28.450 --> 00:03:36.856
And then with each one of these we
as you might imagine what, add on.

53
00:03:36.856 --> 00:03:41.790
Cool, so this was the count.

54
00:03:41.790 --> 00:03:47.014
So we're going to output item.count here,

55
00:03:47.014 --> 00:03:51.000
item.count and this is going to be

56
00:03:51.000 --> 00:03:56.090
the combined price item.combinedprice.

57
00:03:58.610 --> 00:04:05.340
Now if we look back here to our area,

58
00:04:05.340 --> 00:04:08.090
we still left that total hardcoded.

59
00:04:08.090 --> 00:04:11.870
But we're going to use a view x
getter in order to add things.

60
00:04:11.870 --> 00:04:14.070
But right now we're going to say okay,

61
00:04:14.070 --> 00:04:18.660
I want esteem sesame ball I
want to have them add to cart.

62
00:04:18.660 --> 00:04:20.580
Then I'm going to go back to restaurants.

63
00:04:20.580 --> 00:04:25.080
Maybe I want a veggie pizza with
mushrooms and green peppers and

64
00:04:25.080 --> 00:04:26.010
I'm going to add to cart.

65
00:04:27.260 --> 00:04:32.020
If we go to the cart, we now see their
soup dumplings with the amount and

66
00:04:32.020 --> 00:04:32.700
the veggie.

67
00:04:32.700 --> 00:04:37.890
We didn't have any add ons for that,
for those, do we have add ons for this?

68
00:04:37.890 --> 00:04:39.180
I think we did have add ons for this.

69
00:04:39.180 --> 00:04:44.790
It's like add on span before add on and
add ons and

70
00:04:46.440 --> 00:04:50.945
then add ons,
you probably don't want to add own.

71
00:04:52.085 --> 00:04:53.908
Okay, now we have the add ons.

72
00:04:53.908 --> 00:04:56.805
We have the amounts,
we have the total price.

73
00:04:56.805 --> 00:05:00.765
So what we're going to do in the car
in the view x store is we're going to

74
00:05:00.765 --> 00:05:02.850
calculate a total.

75
00:05:02.850 --> 00:05:04.540
I'm going to make note that,

76
00:05:04.540 --> 00:05:08.720
I'm gonna show you this in a getter,
because I want to teach you getters, and

77
00:05:08.720 --> 00:05:14.100
just in case we are using the that cart
in multiple places around the site.

78
00:05:14.100 --> 00:05:16.350
But don't overuse getters.

79
00:05:16.350 --> 00:05:21.390
In other words, if one component
Is just thinking about itself.

80
00:05:21.390 --> 00:05:24.230
You don't necessarily have
to put it in the store in

81
00:05:24.230 --> 00:05:25.650
as a getter in order to do so.

82
00:05:25.650 --> 00:05:30.850
The reason why I caution against that
is for big enterprise apps at scale.

83
00:05:30.850 --> 00:05:35.140
What can happen is people are using
that Vuex Store not just a place to

84
00:05:35.140 --> 00:05:37.170
keep the centralized state data.

85
00:05:37.170 --> 00:05:40.710
They're also using it as a self
documenting place to understand the brains

86
00:05:40.710 --> 00:05:42.000
of the application.

87
00:05:42.000 --> 00:05:47.170
So if you put tons of getter
information in that store.

88
00:05:47.170 --> 00:05:51.350
You're causing people to kind of look
through a ton of information to understand

89
00:05:51.350 --> 00:05:56.327
what's going on for the application for
the whole, for that full application.

90
00:05:56.327 --> 00:05:59.340
It doesn't matter too much
with a small application, but

91
00:05:59.340 --> 00:06:03.600
you'll start to see this that
Vuex enterprise apps at scale

92
00:06:03.600 --> 00:06:08.380
that we need to kind of keep the Vuex
Store a little bit more modularized.

93
00:06:08.380 --> 00:06:12.210
And Divya has a great course that
shows how to use Vuex modules and

94
00:06:12.210 --> 00:06:14.040
goes into more depth there as well.

95
00:06:16.300 --> 00:06:18.390
So if we go back here, and we will,

96
00:06:18.390 --> 00:06:22.320
let's say we want to in our store,
create a getter.

97
00:06:24.280 --> 00:06:27.504
So we're going to make
a total price getter.

98
00:06:30.053 --> 00:06:31.851
And in that total price getter,

99
00:06:31.851 --> 00:06:35.050
the first thing that we want
to do is we want to say like.

100
00:06:35.050 --> 00:06:39.750
Okay, all of the combined price,
remember how we're gathering the combined

101
00:06:39.750 --> 00:06:43.640
prices of everything, not just the prices,
but the combined prices of everything.

102
00:06:43.640 --> 00:06:47.220
So what we wanna do is we wanna,
we've got like the state, and

103
00:06:47.220 --> 00:06:49.440
we're returning state.value here.

104
00:06:49.440 --> 00:06:53.932
What we want to do is
return state.cart.reduce.

105
00:06:53.932 --> 00:06:57.260
Reduce, there's lots of schools
of thought about reduce,

106
00:06:57.260 --> 00:07:00.800
I think reduce can be really useful for
these kind of one liners.

107
00:07:00.800 --> 00:07:04.060
When you're taking multiple
pieces of information and

108
00:07:04.060 --> 00:07:08.600
just adding them into one place but
they can be a little less legible.

109
00:07:08.600 --> 00:07:13.880
I have an article on reducers,
it's called the almighty reducer

110
00:07:13.880 --> 00:07:19.520
on CSS tricks that walks through what
reducers are and how you can use them.

111
00:07:19.520 --> 00:07:21.620
But don't use them for
everything I would say.

112
00:07:22.750 --> 00:07:24.130
They're really useful for

113
00:07:24.130 --> 00:07:28.440
something like this though where really
all we're doing is going through the cart,

114
00:07:28.440 --> 00:07:32.510
and we're gathering all of
the combined price into one piece.

115
00:07:32.510 --> 00:07:40.125
So we're gonna take in the AC and
that's the prime, the first

116
00:07:40.125 --> 00:07:43.385
thing that we have that it's gonna go
through all of the items in the array.

117
00:07:43.385 --> 00:07:47.245
It's gonna take what we have first and
what we have next.

118
00:07:47.245 --> 00:07:50.075
And we're going to combine
this accumulate, so

119
00:07:50.075 --> 00:07:53.507
this AC is short for accumulator.

120
00:07:53.507 --> 00:07:57.797
So it's gonna gather, the accumulator
is gonna gather the information and

121
00:07:57.797 --> 00:08:01.267
next is giving you access
to that next item.

122
00:08:01.267 --> 00:08:04.507
The article explains it in more detail.

123
00:08:04.507 --> 00:08:08.347
I'm gonna do this strange thing here.

124
00:08:10.730 --> 00:08:17.050
Where I say, say next combined price, but
that plus I'm adding a plus because it's

125
00:08:17.050 --> 00:08:21.410
a quick way of telling JavaScript convert
it to a number just in case it's a number.

126
00:08:21.410 --> 00:08:24.060
You've seen me do this
before with like math.sign,

127
00:08:24.060 --> 00:08:28.600
like just in case you're not a number,
make sure your number again.

128
00:08:28.600 --> 00:08:33.540
If you're using TypeScript,
you won't have to do things like

129
00:08:33.540 --> 00:08:37.000
that because you're already setting
your expectation is a number and

130
00:08:37.000 --> 00:08:38.850
that it should tell you otherwise.

131
00:08:38.850 --> 00:08:42.400
So what we're doing is we're
returning the reduction

132
00:08:42.400 --> 00:08:47.270
of all of the combined
prices in that cart.

133
00:08:47.270 --> 00:08:50.730
And we're combining it into one thing and

134
00:08:50.730 --> 00:08:55.060
this means this like extra zero at
the end is saying like start at zero.

135
00:08:55.060 --> 00:09:01.010
We also want to do one more thing,
just in case that cart is empty.

136
00:09:01.010 --> 00:09:06.140
We want to say if the state of the cart

137
00:09:06.140 --> 00:09:11.530
is that it has no length then return,
return zero.

138
00:09:13.370 --> 00:09:17.300
Cool, so we've got total part price state.

139
00:09:17.300 --> 00:09:21.770
If we're saying if the state has
no length to the cart return zero,

140
00:09:21.770 --> 00:09:25.360
otherwise, take all of
the combined prices.

141
00:09:25.360 --> 00:09:29.180
From everything that you
iterate over in that array, and

142
00:09:29.180 --> 00:09:31.480
collapse them into one addition.

143
00:09:33.130 --> 00:09:38.020
So now, what we can do is we can
use that inside of our cart.

144
00:09:40.080 --> 00:09:41.960
So I'm gonna go back into my cart.

145
00:09:41.960 --> 00:09:43.140
I said map state.

146
00:09:43.140 --> 00:09:47.004
I'm also gonna say map getter and

147
00:09:47.004 --> 00:09:52.672
then I have a similar thing here for
map getters.

148
00:09:57.144 --> 00:09:59.366
And I have total price.

149
00:10:02.025 --> 00:10:04.860
And here we're going to
leave that dollar sign.

150
00:10:04.860 --> 00:10:06.723
I'm going to output.

151
00:10:06.723 --> 00:10:12.937
Total price.2

152
00:10:12.937 --> 00:10:16.940
fixed to.

153
00:10:16.940 --> 00:10:18.340
Let's see what we got.

154
00:10:19.460 --> 00:10:22.570
Now, we don't have a hard
coded value anymore.

155
00:10:22.570 --> 00:10:26.330
We are bringing in that
getter from the store.

156
00:10:26.330 --> 00:10:26.830
Awesome.

