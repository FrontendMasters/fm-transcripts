WEBVTT

1
00:00:00.250 --> 00:00:02.884
Now let's take that base SVG.

2
00:00:02.884 --> 00:00:06.650
And we're gonna add
the base SVG to our app.

3
00:00:08.920 --> 00:00:10.110
So remember that base,

4
00:00:10.110 --> 00:00:16.240
SVG had everything that we needed
in it to create that whole scene.

5
00:00:16.240 --> 00:00:20.704
So once I put that in there, and the thing
that it doesn't have are all of those like

6
00:00:20.704 --> 00:00:22.980
character, faces and things like that.

7
00:00:22.980 --> 00:00:28.940
But it had clip paths, which I'll close
right now until we get to the later.

8
00:00:28.940 --> 00:00:33.610
It had the text which is the character
name, it had a table which is just a path.

9
00:00:33.610 --> 00:00:38.850
It had this alien bubble and friend
bubble and if we go back to our screen

10
00:00:38.850 --> 00:00:42.550
we can see this little scene, right?

11
00:00:42.550 --> 00:00:46.440
We have no characters yet, but
we have these bubbles and things.

12
00:00:49.560 --> 00:00:54.400
So now what we wanna do is we actually
want to have the start of the game.

13
00:00:54.400 --> 00:00:58.150
In the start of the game,
we don't see this SVG viewbox.

14
00:00:58.150 --> 00:01:03.790
We don't see this SVG,
that is kinda put onto the page.

15
00:01:03.790 --> 00:01:09.250
So what we see instead, is this modal
that shows that initial game state and

16
00:01:09.250 --> 00:01:11.390
kind of tells you a little
bit about the game.

17
00:01:11.390 --> 00:01:14.950
So what we wanna do is we wanna
go back into our store, and

18
00:01:14.950 --> 00:01:17.230
we wanna give ourselves a UI state.

19
00:01:17.230 --> 00:01:21.200
And that UI state is going to be start.

20
00:01:21.200 --> 00:01:24.200
The reason why I'm using
a string instead of a boolean,

21
00:01:24.200 --> 00:01:29.300
because I could have also said
started false or something like that.

22
00:01:29.300 --> 00:01:33.330
What I find is, applications as they grow,
start to have many,

23
00:01:33.330 --> 00:01:36.020
many different points of state, right?

24
00:01:36.020 --> 00:01:38.220
You have to check if it started,

25
00:01:38.220 --> 00:01:42.270
if it's finished, if it's in the middle
of a character play if it's doing this.

26
00:01:42.270 --> 00:01:45.170
If you pass a string
instead of that boolean,

27
00:01:45.170 --> 00:01:47.990
then you're not checking a whole
bunch of different things, right?

28
00:01:47.990 --> 00:01:50.430
You're checking that one
piece of game state.

29
00:01:50.430 --> 00:01:54.450
So at this juncture, we're at start and

30
00:01:54.450 --> 00:02:00.080
we know what exactly is gonna be loaded or
not loaded based on that one string.

31
00:02:00.080 --> 00:02:03.080
And we're able to kind of work
with it in multiple ways.

32
00:02:03.080 --> 00:02:07.670
So it's a little bit less brittle than
writing a lot of Booleans for that state.

33
00:02:07.670 --> 00:02:11.030
So we'll say the UI state is the start.

34
00:02:11.030 --> 00:02:15.930
The next thing we're gonna do is we're
gonna actually go into this application

35
00:02:15.930 --> 00:02:17.910
into the app dot view.

36
00:02:17.910 --> 00:02:22.190
And I'm going to gather that
UI state from the store.

37
00:02:22.190 --> 00:02:25.120
So I'm gonna say the map state,

38
00:02:25.120 --> 00:02:27.830
because I'm gonna bring in
a bunch of different state.

39
00:02:27.830 --> 00:02:29.660
And if you remember
from the course before,

40
00:02:29.660 --> 00:02:32.630
we could say have a computed
property that says.

41
00:02:32.630 --> 00:02:37.390
This stuff that has a computer
property that's like UI state.

42
00:02:37.390 --> 00:02:40.609
This return this.store.state.ui state.

43
00:02:40.609 --> 00:02:44.475
But instead I'm gonna bring
do this kind of map state.

44
00:02:44.475 --> 00:02:49.510
Which allows me to bring in multiple
things and plot them to their names.

45
00:02:49.510 --> 00:02:51.810
So I can say UI state.

46
00:02:51.810 --> 00:02:55.340
And then I could actually
say questions and

47
00:02:55.340 --> 00:02:59.240
bring those in and
have them available in that component.

48
00:02:59.240 --> 00:03:06.540
So if we go back to our application, and
I refresh again and I can look in view.

49
00:03:07.580 --> 00:03:12.240
Inside that view x store I now
have the UI state of start.

50
00:03:12.240 --> 00:03:16.250
But if I go into my components, now I'm
actually have that in the component.

51
00:03:16.250 --> 00:03:19.650
Remember how before it didn't the
component didn't have anything in it yet.

52
00:03:19.650 --> 00:03:23.300
Now it's bringing in those
view x bindings of this UI,

53
00:03:23.300 --> 00:03:26.650
state of start, and
all of those questions, awesome.

54
00:03:27.850 --> 00:03:32.349
So now what we wanna do is we
wanna make sure that we're showing

55
00:03:32.349 --> 00:03:35.298
a modal based on if the UI state is start.

56
00:03:35.298 --> 00:03:38.680
If that's not the case,
then we're not going to use this SVG.

57
00:03:38.680 --> 00:03:43.470
So I'm gonna make a section
that encases this SVG here.

58
00:03:45.720 --> 00:03:47.590
We'll put that there for now.

59
00:03:49.280 --> 00:03:54.420
And then I'm also going
to make a new component

60
00:03:54.420 --> 00:03:58.260
that I'm gonna bring on to the page
that has that text from before.

61
00:03:58.260 --> 00:04:06.920
So I create a new component and
I can say games state start.

62
00:04:06.920 --> 00:04:11.690
And we'll also have a game state
finished or whatever at the end.

63
00:04:11.690 --> 00:04:15.400
So here we go with that and
then we can say, all right.

64
00:04:15.400 --> 00:04:17.580
Here we want a class of modal.

65
00:04:18.678 --> 00:04:23.520
Cause I'm gonna reuse that class of
modal for anytime I'm using a modal.

66
00:04:23.520 --> 00:04:25.830
And let's go back into our resources.

67
00:04:25.830 --> 00:04:30.679
We have a bunch of intro text
that I can bring in here.

68
00:04:30.679 --> 00:04:33.540
I can get rid of this
div as it's superfluous.

69
00:04:35.830 --> 00:04:38.470
And I have all of this information here.

70
00:04:38.470 --> 00:04:41.800
Now just to get you used to that
concept of props and slots,

71
00:04:41.800 --> 00:04:44.132
we're gonna use them in a couple
of different ways today.

72
00:04:44.132 --> 00:04:49.390
I'm gonna use a slot here just to get
you in the kind of gear of using slots.

73
00:04:49.390 --> 00:04:51.949
So I'm gonna add a slot to this.

74
00:04:56.200 --> 00:05:00.350
Then I'm gonna go into the app dot view
and I'm gonna load that component.

75
00:05:00.350 --> 00:05:03.670
So I'm gonna say the import export.

76
00:05:03.670 --> 00:05:08.280
And this is one of my snippets that makes
it a little bit faster to write things.

77
00:05:08.280 --> 00:05:13.500
So I can say, game state start,
I think is what I called it.

78
00:05:13.500 --> 00:05:16.729
And then I'm going to make sure
I have one export default.

79
00:05:16.729 --> 00:05:19.672
But you can see I could type
both of them really quickly.

80
00:05:19.672 --> 00:05:24.597
Because of the snippets kind of assume
that you want all of them to be named

81
00:05:24.597 --> 00:05:25.790
the same.

82
00:05:25.790 --> 00:05:30.940
So now I can say up here gamestate

83
00:05:32.290 --> 00:05:37.180
start, and then we've got this,
we can bring in this component.

84
00:05:40.000 --> 00:05:42.340
So let's go check out if
we have this component.

85
00:05:42.340 --> 00:05:48.220
So right now we have the modal and
all of the bubbles and things like that.

86
00:05:48.220 --> 00:05:50.010
We don't want all of them at once, right?

87
00:05:50.010 --> 00:05:55.120
So what we wanna do is we wanna make
sure that it's not showing that

88
00:05:55.120 --> 00:05:56.760
base SVG at this point.

89
00:05:56.760 --> 00:05:59.760
It's just showing that initial modal.

90
00:05:59.760 --> 00:06:03.898
So what I can say is the earth,

91
00:06:03.898 --> 00:06:07.900
UI state, equals.

92
00:06:07.900 --> 00:06:11.689
So here's where we get
those ligatures 123, and

93
00:06:11.689 --> 00:06:16.435
you can see instead of writing
three equals it's got three bars.

94
00:06:16.435 --> 00:06:19.905
That's that font ligature setting
that you can set in VS code.

95
00:06:19.905 --> 00:06:24.580
And then I'm gonna pass in a string that
starts, so I'm gonna check against that.

96
00:06:24.580 --> 00:06:27.865
And for now, I'm gonna write VS.

97
00:06:27.865 --> 00:06:32.790
So if the UI state is start,
it's gonna show this.

98
00:06:32.790 --> 00:06:35.660
Otherwise it's gonna show that.

99
00:06:35.660 --> 00:06:38.340
So now we just have that modal set, right.

100
00:06:38.340 --> 00:06:41.170
So already we've got like
a little bit of state

101
00:06:41.170 --> 00:06:44.380
going on where we're showing
one thing over another.

102
00:06:44.380 --> 00:06:47.020
The next thing that we wanna do is we
wanna check if our slot is working

103
00:06:47.020 --> 00:06:47.990
correctly, right?

104
00:06:47.990 --> 00:06:54.197
So maybe we wanna say like h2, hi there.

105
00:06:54.197 --> 00:06:57.940
And we'll see if this gets passed
into our component and it does.

106
00:06:57.940 --> 00:06:59.190
That's awesome.

107
00:06:59.190 --> 00:07:04.590
So what we want here is
we wanna go back to this.

108
00:07:05.990 --> 00:07:12.240
And I'm gonna ask people,
which human do you wanna be?

109
00:07:12.240 --> 00:07:16.010
Which human do you want to be?

110
00:07:17.010 --> 00:07:19.050
And we have a few choices.

111
00:07:19.050 --> 00:07:22.670
We are able to pick an artist,
a baker or mechanic.

112
00:07:22.670 --> 00:07:26.030
And because we might wanna use that
piece of gamestate in other places in

113
00:07:26.030 --> 00:07:26.930
the application.

114
00:07:26.930 --> 00:07:29.340
I'm actually gonna put that into my store.

115
00:07:29.340 --> 00:07:35.562
So I'll say like character,
choices is an array.

116
00:07:35.562 --> 00:07:38.540
And you can see in our questions
we have the question and

117
00:07:38.540 --> 00:07:41.350
then we have answers
from different people.

118
00:07:41.350 --> 00:07:43.040
So we have a baker.

119
00:07:44.990 --> 00:07:50.020
We have a mechanic and we have an artist.

120
00:07:51.450 --> 00:07:57.286
We also probably want to make a character,
that's their choice.

121
00:07:57.286 --> 00:08:01.949
Right, once we picked that
character be able to choose that

122
00:08:01.949 --> 00:08:03.920
character here as well.

123
00:08:04.980 --> 00:08:09.080
So what I'm gonna do is
go into the app.view and

124
00:08:09.080 --> 00:08:12.640
I'm gonna bring these into
that component as well.

125
00:08:12.640 --> 00:08:18.900
So we've got the character, helps if
you remember how to spell character.

126
00:08:18.900 --> 00:08:19.845
How do you say character?

127
00:08:19.845 --> 00:08:25.914
Character choices

128
00:08:25.914 --> 00:08:30.468
and character.

129
00:08:30.468 --> 00:08:31.990
Cool.

130
00:08:31.990 --> 00:08:33.710
So now because we have that,

131
00:08:33.710 --> 00:08:37.560
what we can do is we can loop through
all of those character choices.

132
00:08:37.560 --> 00:08:40.030
And show radio buttons for
each one of them.

133
00:08:40.030 --> 00:08:42.392
So I'm gonna use a p tag to loop.

134
00:08:42.392 --> 00:08:46.890
I'll say pv4 and

135
00:08:46.890 --> 00:08:51.520
I'm gonna say option in character choices,

136
00:08:51.520 --> 00:08:56.230
thank you VS code, and then I'll
give it a key that has to be unique.

137
00:08:56.230 --> 00:08:58.850
In this case option will be unique.

138
00:08:58.850 --> 00:09:02.400
And then I'm going to go and add an input.

139
00:09:02.400 --> 00:09:10.020
That's a type of radio, And
it's going to have a unique ID.

140
00:09:12.560 --> 00:09:16.240
And in this case,
what we can do is we can bind it.

141
00:09:16.240 --> 00:09:17.770
Remember this is V bind.

142
00:09:17.770 --> 00:09:21.160
So this is a little long hand of V bind.

143
00:09:21.160 --> 00:09:22.700
But this is the shorthand.

144
00:09:22.700 --> 00:09:26.280
So what it's gonna do is gonna say use
JavaScript in here instead of the string.

145
00:09:26.280 --> 00:09:29.916
So if I say option,
it's gonna grab whichever option this is.

146
00:09:29.916 --> 00:09:33.431
It's not gonna just say option
as a string, otherwise it would.

147
00:09:33.431 --> 00:09:38.670
I also have to bind the value
which is also option.

148
00:09:40.110 --> 00:09:46.460
And I'm also going to say
the model character input.

149
00:09:50.110 --> 00:09:55.682
I'm going to establish a relationship down

150
00:09:55.682 --> 00:10:02.018
below with this data and
return character input.

151
00:10:02.018 --> 00:10:05.688
Which is an empty string because I'm
gonna hold that for just a second so

152
00:10:05.688 --> 00:10:07.840
that I can then give
it to the store later.

153
00:10:07.840 --> 00:10:11.586
So I'm just gonna make sure that
I'm holding it for the time being.

154
00:10:11.586 --> 00:10:14.331
I also wanna make sure that I have
a label for each one of these.

155
00:10:14.331 --> 00:10:19.241
Otherwise people will just
see little radio things

156
00:10:19.241 --> 00:10:23.150
without actually knowing what it is.

157
00:10:23.150 --> 00:10:27.750
But also I wanna make sure that things
are accessible, so I'll say label for and

158
00:10:27.750 --> 00:10:31.150
make sure that that is
bound to option as well.

159
00:10:32.510 --> 00:10:36.870
And then these two will have a
relationship and then it will be good for

160
00:10:36.870 --> 00:10:38.150
screen readers.

161
00:10:38.150 --> 00:10:40.672
And then in here I'm gonna output option.

162
00:10:44.985 --> 00:10:49.859
Cool, and then that just one more
thing I really need to make sure

163
00:10:49.859 --> 00:10:52.219
that I have some styling here.

164
00:10:52.219 --> 00:10:55.200
To make sure that they
are outputting correctly.

165
00:10:55.200 --> 00:11:02.590
So I'm gonna add a class that I
already added of character choices.

166
00:11:02.590 --> 00:11:09.380
I named it the same as the character
choices so that it styles appropriately.

167
00:11:09.380 --> 00:11:12.807
So if I go back to the browser,
I forgot to put a comma.

168
00:11:12.807 --> 00:11:15.830
You need commas in between things.

169
00:11:15.830 --> 00:11:18.220
So here's the comma.

170
00:11:18.220 --> 00:11:21.715
Save that, go back to the browser,
refresh the page.

171
00:11:21.715 --> 00:11:24.429
I did it two places.

172
00:11:24.429 --> 00:11:29.540
We'll go into the store and
then make sure we have commas here.

173
00:11:30.910 --> 00:11:37.968
Character choices, question, my state.

174
00:11:37.968 --> 00:11:41.040
That seems okay, maybe I forgot to save.

175
00:11:41.040 --> 00:11:41.820
Let's try it again.

176
00:11:41.820 --> 00:11:44.225
Okay, I forgot to save.

177
00:11:44.225 --> 00:11:48.910
So here we have, you're an alien
zombie which human do you wanna be?

178
00:11:48.910 --> 00:11:51.920
And then we've got baker,
our mechanic and artist.

179
00:11:51.920 --> 00:11:56.640
And if I wanted to use view to see if I
could, if I'm grabbing things correctly.

180
00:11:56.640 --> 00:12:00.740
I have that character input,
and as I select mechanic,

181
00:12:00.740 --> 00:12:02.928
then I'm holding mechanic.

