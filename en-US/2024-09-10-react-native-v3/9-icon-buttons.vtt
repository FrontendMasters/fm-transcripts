WEBVTT

1
00:00:00.460 --> 00:00:03.310
Now let's move on to Icon Buttons.

2
00:00:03.310 --> 00:00:08.940
So on mobile UIs it's very common to use
icons for buttons instead of just text.

3
00:00:08.940 --> 00:00:11.040
It's actually quite common
on the web as well.

4
00:00:11.040 --> 00:00:14.183
It's kind of makes mobile apps feel nicer,
and

5
00:00:14.183 --> 00:00:17.100
it allows us to have
less text on the screen.

6
00:00:17.100 --> 00:00:18.940
It's just a little bit more fun.

7
00:00:18.940 --> 00:00:21.148
We'll be using expo icons and

8
00:00:21.148 --> 00:00:25.743
this is built on top of
the react-native-vector-icons and

9
00:00:25.743 --> 00:00:29.381
the handy thing about it is,
you got a link here.

10
00:00:29.381 --> 00:00:34.716
So it's got a convenient website that
you can use to search for icons.

11
00:00:34.716 --> 00:00:38.991
So let's say that I wanted a leaf,
so I can search for my leaf icon and

12
00:00:38.991 --> 00:00:43.773
it gives me the import that I need and
also the component to render.

13
00:00:43.773 --> 00:00:47.359
So you can have your own icon images or
SVGs or whatever, but

14
00:00:47.359 --> 00:00:52.253
this is just a convenient way if you want
to quickly get some icons in your app.

15
00:00:52.253 --> 00:00:54.933
You can choose some from
this existing library.

16
00:00:57.603 --> 00:01:02.263
One thing to note, which might be
surprising if you're going for

17
00:01:02.263 --> 00:01:06.244
the web is that SVGs are actually
not the most optimal way

18
00:01:06.244 --> 00:01:08.987
to render things on native apps.

19
00:01:08.987 --> 00:01:12.497
In particular android,
it's actually quite expensive.

20
00:01:12.497 --> 00:01:18.787
So if you have 1,000 SVGs on an Android
app, it might end up slowing to a crawl.

21
00:01:18.787 --> 00:01:24.011
So SVGs are something to be used kind
of sparingly in a React Native app.

22
00:01:24.011 --> 00:01:29.551
And like small PNGs would, for
example, actually be preferred.

23
00:01:29.551 --> 00:01:33.743
But using icons for
like bottom tabs or icon buttons or

24
00:01:33.743 --> 00:01:39.251
things like that is very common,
and that's what we're going to do.

25
00:01:39.251 --> 00:01:43.178
Let's start by installing
the vector-icons library.

26
00:01:43.178 --> 00:01:48.430
So we're gonna do npx expo install
@expo/vector-icons, [COUGH] and

27
00:01:48.430 --> 00:01:52.991
you might be wondering why are we
doing this npx expo install.

28
00:01:52.991 --> 00:01:56.964
Why are we not doing yarn install or
npm install and

29
00:01:56.964 --> 00:02:01.891
this is just a useful thing to do
if you are building with expo.

30
00:02:01.891 --> 00:02:05.858
And notice that what this
did is that it prints out,

31
00:02:05.858 --> 00:02:11.931
it's installing one SDK 51
compatible native module using yarn.

32
00:02:11.931 --> 00:02:16.992
And the reason this is important
is that react native versions

33
00:02:16.992 --> 00:02:22.117
don't work like react native
changes across releases.

34
00:02:22.117 --> 00:02:24.408
And packages that touch native code,

35
00:02:24.408 --> 00:02:28.757
they need to be compatible with
that version of React Native.

36
00:02:28.757 --> 00:02:35.416
So if we look at our package.json, which
is here, so we can see that we have expo,

37
00:02:35.416 --> 00:02:39.966
this is SDK 51, and
then we have react-native 74.

38
00:02:39.966 --> 00:02:45.436
So react-native does a release
around every like twice a year,

39
00:02:45.436 --> 00:02:50.411
and Expo does a release of SDK
release twice a year as well.

40
00:02:50.411 --> 00:02:55.121
And then with each SDK release we
also bump the react-native version.

41
00:02:55.121 --> 00:02:59.944
So if you install with npx expo will
install then if the library that you're

42
00:02:59.944 --> 00:03:04.156
installing is something that we
have records of, this checks and

43
00:03:04.156 --> 00:03:08.663
makes sure that you're installing
an SDK compatible version.

44
00:03:08.663 --> 00:03:11.914
So that's why it's saying that
it's installing an SDK 51, so

45
00:03:11.914 --> 00:03:14.563
this comes from here, compatible library.

46
00:03:14.563 --> 00:03:18.603
So in September or
October or SDK 52 comes out.

47
00:03:18.603 --> 00:03:22.134
If you haven't upgraded yet
and you run npx expo install,

48
00:03:22.134 --> 00:03:26.605
it makes sure that the library you're
installing is compatible with 51

49
00:03:26.605 --> 00:03:29.920
compared to if we just did yarn install or
npm install,

50
00:03:29.920 --> 00:03:34.058
which by default would install
the latest version of that package.

51
00:03:35.421 --> 00:03:38.746
&gt;&gt; Kadi Kraman: [COUGH] And
you'll also notice that I'm using yarn.

52
00:03:38.746 --> 00:03:43.637
So even though I did npx expo install,
it's using yarn to add my package.

53
00:03:43.637 --> 00:03:47.197
And the way that it detects that is
actually based on the lock file.

54
00:03:47.197 --> 00:03:52.397
So if I have a yarn lock in my in
my project, it's gonna use yarn.

55
00:03:52.397 --> 00:03:55.337
If you have PMP lock, it will use
PMPM if you have a bone lock file,

56
00:03:55.337 --> 00:03:56.364
if you use bone, etc.

57
00:04:00.317 --> 00:04:03.179
&gt;&gt; Kadi Kraman: Now, If we weren't
using Expo Go, at this point,

58
00:04:03.179 --> 00:04:07.777
we would have to rebuild our native app to
actually get these native components for

59
00:04:07.777 --> 00:04:09.883
the expo/vector-icons.

60
00:04:09.883 --> 00:04:14.713
But because we are using Expo Go, this is
a sandbox environment, and it has a whole

61
00:04:14.713 --> 00:04:19.723
bunch of native libraries pre-installed,
including expo/vector-icons.

62
00:04:19.723 --> 00:04:23.228
So that's why we can just install
this library and away we go.

63
00:04:29.584 --> 00:04:32.242
&gt;&gt; Kadi Kraman: Now,
I've picked some icons already.

64
00:04:32.242 --> 00:04:35.108
All right, so we're going to use
the icon for the delete button.

65
00:04:35.108 --> 00:04:37.638
So here's the UI that we're going to do.

66
00:04:37.638 --> 00:04:41.117
So instead of having the delete
as a black button with text,

67
00:04:41.117 --> 00:04:43.631
we're going to use a delete icon instead.

68
00:04:43.631 --> 00:04:45.481
Make it a bit pretty.

69
00:04:45.481 --> 00:04:50.641
So I've chosen this red color,
which is somewhere on here.

70
00:04:50.641 --> 00:04:54.521
There we go,
let's add this red to our theme file.

71
00:04:55.601 --> 00:05:00.469
Let's go to the theme and add a color red.

72
00:05:08.195 --> 00:05:13.697
And then I think what I did is
I went on this website close,

73
00:05:13.697 --> 00:05:19.211
there we go, I think this is what I used,
closecircleo.

74
00:05:22.376 --> 00:05:24.057
&gt;&gt; Kadi Kraman: It's this one,
there you go.

75
00:05:24.057 --> 00:05:28.423
So now that you have,
you can actually just

76
00:05:28.423 --> 00:05:32.669
copy this from the vector icons website,

77
00:05:32.669 --> 00:05:38.636
go to our shopping list item,
and import the vector icon.

78
00:05:41.874 --> 00:05:42.998
&gt;&gt; Kadi Kraman: And oops.

79
00:05:51.852 --> 00:05:54.648
&gt;&gt; Kadi Kraman: And
we also can render the component.

80
00:05:54.648 --> 00:06:01.698
So where are touchableOpacity is,
we can keep the touchableOpacity.

81
00:06:01.698 --> 00:06:07.879
But we replace the text
with our closecircle.

82
00:06:11.056 --> 00:06:15.687
&gt;&gt; Kadi Kraman: [COUGH] Let's
also remove these styles.

83
00:06:18.378 --> 00:06:24.760
&gt;&gt; Kadi Kraman: There we go, so
we don't need these button styles anymore.

84
00:06:28.071 --> 00:06:32.348
And instead of the black color,

85
00:06:32.348 --> 00:06:36.158
let's do a theme color red.

86
00:06:36.158 --> 00:06:42.283
There we go, I probably want our
kind of completed items to be grey.

87
00:06:42.283 --> 00:06:44.823
So let's use a grey
color if it's completed.

88
00:06:44.823 --> 00:06:48.061
So if isCompleted,

89
00:06:48.061 --> 00:06:53.014
let's do theme.colorGrey,

90
00:06:53.014 --> 00:06:57.588
otherwise, we'll do red.

91
00:07:00.710 --> 00:07:01.329
&gt;&gt; Kadi Kraman: Awesome.

92
00:07:04.124 --> 00:07:07.524
&gt;&gt; Student: If you can't find
good icons with expo icons,

93
00:07:07.524 --> 00:07:11.544
are there any other icon
libraries you'll reach for?

94
00:07:11.544 --> 00:07:15.880
&gt;&gt; Kadi Kraman: I would use SVG,
I mean you can use any SVG icon.

95
00:07:15.880 --> 00:07:21.335
There's a react native svg,
so react native svg.

96
00:07:24.554 --> 00:07:25.265
&gt;&gt; Kadi Kraman: There you go.

97
00:07:25.265 --> 00:07:27.753
So you can install react-native-svg and

98
00:07:27.753 --> 00:07:30.940
then just render any icon
that you might want from SVG.

99
00:07:30.940 --> 00:07:34.420
Actually, Expo image also renders SVGs.

100
00:07:34.420 --> 00:07:38.300
So if you have, so expo image,
from here, expo image.

101
00:07:38.300 --> 00:07:43.163
I'll just call it image,
there you go, [LAUGH].

102
00:07:43.163 --> 00:07:46.883
Yeah expo Image actually
also renders SVGs, so

103
00:07:46.883 --> 00:07:52.658
any like SVG library website that you
might usually frequent would work.

104
00:07:59.889 --> 00:08:02.887
All right, and I think at this point,

105
00:08:02.887 --> 00:08:08.512
looking at my thoughts that this
padding on the edges looks a bit tight,

106
00:08:08.512 --> 00:08:14.925
so let's increase it from 8 to 18, give
it a little bit more space to breathe.

