WEBVTT

1
00:00:00.210 --> 00:00:04.068
&gt;&gt; Kadi Kraman: Okay, so we created
a project now, called Task Lease if

2
00:00:04.068 --> 00:00:08.350
we cd into our project directory and
see what we created here.

3
00:00:10.530 --> 00:00:14.180
So this should be a pretty
bare bones project.

4
00:00:14.180 --> 00:00:20.024
So we just have our package Jason,
our lock file, our main entry point.

5
00:00:20.024 --> 00:00:24.938
Which is just a single file after TSX and
our app.json which is

6
00:00:24.938 --> 00:00:29.663
a config file for your app,
and in your package.json under

7
00:00:29.663 --> 00:00:34.504
scripts you can see the scripts
you can use to start your app.

8
00:00:37.044 --> 00:00:42.459
So you can use the start command
which you can see runs expo start.

9
00:00:42.459 --> 00:00:47.743
So to run the packager, so
the JavaScript side of your app,

10
00:00:47.743 --> 00:00:52.605
you run mpx expo start, or
you can just run yarn start,

11
00:00:52.605 --> 00:00:58.437
npm run start, or whatever package
manager start command used.

12
00:00:58.437 --> 00:01:02.340
So this now will give you
a way a QR code to scan.

13
00:01:02.340 --> 00:01:05.970
So basically, a React Native app
consists of two parts: you have

14
00:01:05.970 --> 00:01:09.502
the JavaScript side, and
you have the native app side.

15
00:01:09.502 --> 00:01:12.612
So, this here is building
the JavaScript side.

16
00:01:12.612 --> 00:01:14.582
So how do we get our native app side?

17
00:01:16.122 --> 00:01:20.627
For this learning course,
we're going to be using Expo Go for this.

18
00:01:20.627 --> 00:01:23.047
So, get your phone.

19
00:01:33.470 --> 00:01:35.725
&gt;&gt; Kadi Kraman: Now on your phone,
go to the App Store.

20
00:01:35.725 --> 00:01:39.808
If you don't have Expo Go installed yet,
search for Expo Go.

21
00:01:43.530 --> 00:01:44.329
&gt;&gt; Kadi Kraman: And download it.

22
00:01:49.832 --> 00:01:51.396
&gt;&gt; Kadi Kraman: And
the app will look like this.

23
00:01:51.396 --> 00:01:56.838
So if you're on an iPhone like I am, there
is no button here to scan your QR code.

24
00:01:56.838 --> 00:02:02.451
So what you actually do is you open your
camera app and you scan the QR code.

25
00:02:03.991 --> 00:02:07.786
Now, if this is the very first
time you installed Expo Go,

26
00:02:07.786 --> 00:02:10.981
this actually won't work the first time.

27
00:02:10.981 --> 00:02:15.181
So I installed Expo Go from scratch,
specifically to show you.

28
00:02:15.181 --> 00:02:18.290
So I've tried to just close it,
and now I finally get this prompt

29
00:02:18.290 --> 00:02:22.102
that says Expo Go would like to find and
connect devices to your local network.

30
00:02:22.102 --> 00:02:25.372
And this is so it could actually
get this package managed.

31
00:02:25.372 --> 00:02:26.632
So I'm gonna choose allow.

32
00:02:27.902 --> 00:02:31.743
And go into the camera app and
scan this again.

33
00:02:34.842 --> 00:02:38.058
&gt;&gt; Kadi Kraman: And
now you should see something like this.

34
00:02:38.058 --> 00:02:40.809
So this is just your app.

35
00:02:40.809 --> 00:02:46.758
So the code that we have in our
app.tsx running inside Expo Go.

36
00:02:50.016 --> 00:02:52.741
&gt;&gt; Kadi Kraman: And
let me show you on Android as well.

37
00:02:52.741 --> 00:02:55.189
So on Android, it'll be similar.

38
00:02:55.189 --> 00:02:57.679
So we're going to go to the Play Store.

39
00:02:57.679 --> 00:03:00.113
We're going to search for
We'll just search for Expo Go.

40
00:03:00.113 --> 00:03:02.401
We're going to install Expo Go.

41
00:03:08.908 --> 00:03:10.085
&gt;&gt; Kadi Kraman: And
we get this app installed.

42
00:03:10.085 --> 00:03:15.563
And now on Android you do actually get
a button here to scan the QR code.

43
00:03:15.563 --> 00:03:19.159
So let's allow Expo Go to use the video.

44
00:03:19.159 --> 00:03:24.509
And scan the QR code, and
we have our app running.

45
00:03:26.069 --> 00:03:29.673
Now the reason that the iOS app
doesn't have a button is because

46
00:03:29.673 --> 00:03:34.379
Apple doesn't allow it, so the Expo Go
app wouldn't be allowed on the App Store.

47
00:03:34.379 --> 00:03:38.280
It's a basically that's where
the restriction comes from, so

48
00:03:38.280 --> 00:03:40.385
that's why they're different.

49
00:03:42.415 --> 00:03:47.657
All right, so with these,
the debug things that are worth knowing

50
00:03:47.657 --> 00:03:53.965
is that if you shake your phone,
this is where you get your debug menu.

51
00:03:53.965 --> 00:03:58.085
So the debug menu will
have an option to reload.

52
00:03:58.085 --> 00:04:02.020
You can show the performance monitor,
you can open a JavaScript debugger, or

53
00:04:02.020 --> 00:04:03.939
you can disable fast refresh.

54
00:04:03.939 --> 00:04:07.574
So the disabling fast refresh you
would usually only do accidentally, so

55
00:04:07.574 --> 00:04:12.459
if your app is no longer updating, check
that you haven't accidentally disabled it.

56
00:04:12.459 --> 00:04:17.639
But most of the time what you use here is
you want to reload the app for any reason.

57
00:04:19.414 --> 00:04:23.244
Actually shaking your phone
might be a bit annoying.

58
00:04:23.244 --> 00:04:26.041
So actually on iOS, you can also,

59
00:04:26.041 --> 00:04:31.652
if you hold three fingers to the screen,
it will also open the dummy.

60
00:04:31.652 --> 00:04:34.625
She's handy.

61
00:04:42.082 --> 00:04:43.139
&gt;&gt; Kadi Kraman: All right, and

62
00:04:43.139 --> 00:04:46.714
I am actually going to open
this on an iOS simulator,

63
00:04:46.714 --> 00:04:51.770
because it will be a little bit easier
to see on my screen for the workshop.

64
00:04:51.770 --> 00:04:54.923
So iOS simulators, you will get
this if you have Xcode installed,

65
00:04:54.923 --> 00:04:57.024
which isn't necessary for this workshop.

66
00:04:58.204 --> 00:05:00.281
But we'll do that in the intent and

67
00:05:00.281 --> 00:05:04.145
I just wanted to call out that we
used a TypeScript template, and

68
00:05:04.145 --> 00:05:08.270
you might be wondering whether
you have to use TypeScript.

69
00:05:08.270 --> 00:05:11.350
And honestly, I would very,
very much recommend it.

70
00:05:11.350 --> 00:05:16.007
The reason being that the JavaScript
community like companies, and projects,

71
00:05:16.007 --> 00:05:20.996
and communities, are very much moving
from JavaScript Script to TypeScript.

72
00:05:20.996 --> 00:05:23.536
And TypeScript is just
a superset of JavaScript.

73
00:05:23.536 --> 00:05:26.536
So all JavaScript code is
valid TypeScript code.

74
00:05:26.536 --> 00:05:30.636
And TypeScript is just JavaScript with
some additional type information.

75
00:05:30.636 --> 00:05:35.326
So even if you've never used TypeScript
before, I very much recommend doing it for

76
00:05:35.326 --> 00:05:39.353
this workshop and you'll just get
a very light intro into TypeScript.

77
00:05:40.404 --> 00:05:42.956
If you really,
really don't want to use TypeScript,

78
00:05:42.956 --> 00:05:44.786
I actually had some time yesterday, so

79
00:05:44.786 --> 00:05:49.084
I created this JavaScript only version
of the app that we're gonna be building.

80
00:05:49.084 --> 00:05:53.619
I'm not linking to it throughout the
course, but I used the same commit names,

81
00:05:53.619 --> 00:05:55.294
so you could look it up.

82
00:05:55.294 --> 00:05:59.549
But honestly, the difference between
this and a TypeScript course is very,

83
00:05:59.549 --> 00:06:00.695
very minimal.

84
00:06:00.695 --> 00:06:05.785
So I would just do the typescript app,
but I wanted people to have an option.

85
00:06:05.785 --> 00:06:11.872
And finally, with some debug tips, if
you're struggling to connect to Expo Go,

86
00:06:11.872 --> 00:06:17.955
first make sure that your phone is on
the same Wi-Fi network as your computer.

87
00:06:17.955 --> 00:06:21.779
You should be connected to
the same thing the reason for

88
00:06:21.779 --> 00:06:26.435
it is that this bundler is running
on localhost on your machine, so

89
00:06:26.435 --> 00:06:32.530
only devices that are connected to the
same network will be able to access it.

90
00:06:32.530 --> 00:06:37.362
But if you still can't get it to work,
or if that's not possible, then there is

91
00:06:37.362 --> 00:06:42.576
actually a workaround, so you can run the
start command, but with dash dash tunnel.

92
00:06:42.576 --> 00:06:45.896
So the first time you run this,
it will prompt you to install Ngrok.

93
00:06:45.896 --> 00:06:50.341
Then what it's going to do
is it's going to expose your

94
00:06:50.341 --> 00:06:54.912
bundler externally to
the Internet using Ngrok.

95
00:06:54.912 --> 00:06:59.840
And that way you can actually scan this
QR code from any device on any computer

96
00:06:59.840 --> 00:07:04.614
anywhere in the world and you will run
the bundle from your local machine.

97
00:07:04.614 --> 00:07:09.189
And this is incredibly handy if you want
to share what you're working on with

98
00:07:09.189 --> 00:07:13.874
a colleague or a friend but also if you
want to get around this restriction.

99
00:07:13.874 --> 00:07:18.200
So it's quite common on Windows when you
have a firewall for this to be a problem.

100
00:07:20.411 --> 00:07:22.491
It's a little bit slower
than using it normally.

101
00:07:22.491 --> 00:07:25.541
So if you can not use Tunnel,
I would recommend doing that.

