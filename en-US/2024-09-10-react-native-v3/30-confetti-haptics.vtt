WEBVTT

1
00:00:00.000 --> 00:00:02.690
&gt;&gt; Kadi Kraman: So functionally,
our app is now ready.

2
00:00:02.690 --> 00:00:05.889
We have a shopping list,
where we can add things to our list.

3
00:00:05.889 --> 00:00:09.382
We can delete them,
we can mark them as completed,

4
00:00:09.382 --> 00:00:12.481
we have some haptics,
we have ASIC storage.

5
00:00:12.481 --> 00:00:15.796
And we have our counter or
timeout scheduler,

6
00:00:15.796 --> 00:00:20.216
whatever you wanna call it,
where we count down from a time and

7
00:00:20.216 --> 00:00:24.552
we can schedule notifications
to remind us to do something.

8
00:00:24.552 --> 00:00:31.758
And the last thing, I just wanted to add
some joy to this counter application.

9
00:00:31.758 --> 00:00:33.821
So we're going to add some confetti,

10
00:00:33.821 --> 00:00:36.727
who doesn't love confetti
when good things happen?

11
00:00:36.727 --> 00:00:41.844
And of course, add a good success haptic
feedback when you press this button.

12
00:00:41.844 --> 00:00:49.880
[COUGH]
&gt;&gt; Kadi Kraman: So

13
00:00:49.880 --> 00:00:54.076
for the haptics,
should be an old hand at this, but

14
00:00:54.076 --> 00:00:57.597
let's install, let's import haptics.

15
00:00:57.597 --> 00:01:03.399
So import star as Haptics

16
00:01:03.399 --> 00:01:08.102
from expo-haptics

17
00:01:18.116 --> 00:01:23.252
&gt;&gt; Kadi Kraman: And just before we
schedule a notification in here,

18
00:01:23.252 --> 00:01:28.389
so when we press
the scheduleNotification button,

19
00:01:28.389 --> 00:01:32.605
let's do Haptics.notificationAsync.

20
00:01:32.605 --> 00:01:34.925
And let's do Haptics.,

21
00:01:38.209 --> 00:01:41.376
&gt;&gt; Kadi Kraman:
NotificationFeedbackStyle.Success

22
00:01:44.055 --> 00:01:46.173
&gt;&gt; Kadi Kraman: So there should be a big

23
00:01:46.173 --> 00:01:48.854
old heavy haptic feedback.

24
00:01:48.854 --> 00:01:50.579
So let me try it on my Android phone.

25
00:01:53.431 --> 00:01:58.977
&gt;&gt; Kadi Kraman: So if I hit this, that was
a nice satisfying feeling haptic feedback.

26
00:02:05.389 --> 00:02:07.424
&gt;&gt; Kadi Kraman: And lastly,
let's add some confetti.

27
00:02:07.424 --> 00:02:12.273
So this is just a little JavaScript
library to add some confetti

28
00:02:12.273 --> 00:02:14.476
into your React Native app.

29
00:02:14.476 --> 00:02:17.475
So it was a bit cute and fun.

30
00:02:17.475 --> 00:02:21.048
So let's install the ConfettiCannon.

31
00:02:31.891 --> 00:02:36.621
&gt;&gt; Kadi Kraman: All right, so the way
this works, it looks like I need to.

32
00:02:36.621 --> 00:02:40.874
Whenever you see refreshing or
the app doesn't load,

33
00:02:40.874 --> 00:02:44.294
then the standard thing to try,
by the way,

34
00:02:44.294 --> 00:02:49.674
I think I haven't mentioned this before,
is you stop your bundler.

35
00:02:49.674 --> 00:02:55.174
So wherever your metro process is,
you stop it and then you start it again.

36
00:02:55.174 --> 00:02:59.700
If it still doesn't work,
if you think something is cached,

37
00:02:59.700 --> 00:03:03.277
you can actually start with --reset-cache.

38
00:03:03.277 --> 00:03:06.939
So just an FYI.

39
00:03:06.939 --> 00:03:12.495
In this case,
I will just start it and reload.

40
00:03:20.626 --> 00:03:21.126
&gt;&gt; Kadi Kraman: There we go.

41
00:03:24.248 --> 00:03:26.598
&gt;&gt; Kadi Kraman: Turn it off and on again.

42
00:03:26.598 --> 00:03:29.496
[COUGH] All right, so ConfettiCannon.

43
00:03:29.496 --> 00:03:36.099
So we're gonna place the ConfettiCannon
at the end of our screen.

44
00:03:36.099 --> 00:03:40.677
So Confetti,
it should be probably imported.

45
00:03:40.677 --> 00:03:50.572
So import ConfettiCannon from,

46
00:03:55.043 --> 00:03:58.304
&gt;&gt; Kadi Kraman:
react-native-confetti-cannon.

47
00:03:58.304 --> 00:04:02.971
And now, we're going to render it
at the very bottom of our file.

48
00:04:06.892 --> 00:04:07.555
&gt;&gt; Kadi Kraman: Right, so

49
00:04:07.555 --> 00:04:11.323
we need to trigger this
ConfettiCannon programmatically.

50
00:04:11.323 --> 00:04:16.054
So it's kind of here, but we don't want
it to fire when you just open the page.

51
00:04:19.234 --> 00:04:23.817
&gt;&gt; Kadi Kraman: So
the way we fire it is using a ref.

52
00:04:23.817 --> 00:04:29.339
So a ref is something we haven't used
before, but it is another React hook,

53
00:04:29.339 --> 00:04:34.193
and it basically contains a reference
to an element on the screen.

54
00:04:34.193 --> 00:04:36.223
So you can call functions on it, for

55
00:04:36.223 --> 00:04:39.148
example, which is what
we're going to use it for.

56
00:04:39.148 --> 00:04:45.020
So confettiRef, so we'll do a useRef,

57
00:04:45.020 --> 00:04:52.803
and we're gonna start with nothing,
which is fine.

58
00:04:56.930 --> 00:05:00.176
&gt;&gt; Kadi Kraman: [COUGH] I'm just
gonna type it as any because I think

59
00:05:00.176 --> 00:05:02.891
the ConfettiCannon didn't have types.

60
00:05:06.937 --> 00:05:11.734
&gt;&gt; Kadi Kraman: And so
what we'll do is we'll pass this ref

61
00:05:11.734 --> 00:05:16.005
into the ConfettiCannon component.

62
00:05:16.005 --> 00:05:18.935
So ref = confettiRef.

63
00:05:21.587 --> 00:05:24.849
&gt;&gt; Kadi Kraman: And then we have some
properties as well that we can do.

64
00:05:24.849 --> 00:05:28.279
So let's do a count of 50.

65
00:05:28.279 --> 00:05:34.366
I think I found the default count
was a bit intense on Android phones.

66
00:05:34.366 --> 00:05:40.144
And,
&gt;&gt; Kadi Kraman: Okay,

67
00:05:40.144 --> 00:05:44.636
we also need to set where
we want it to be displayed.

68
00:05:44.636 --> 00:05:48.127
So let's do an origin.

69
00:05:48.127 --> 00:05:53.040
And okay, so by default, I'm going to
just do x0, y0 and see what happens.

70
00:05:57.783 --> 00:06:02.769
&gt;&gt; Kadi Kraman: Okay, so we go on
the screen and there's a media of confetti

71
00:06:02.769 --> 00:06:09.170
from the left of our screen, which is
the x0, y0 position on your screen.

72
00:06:09.170 --> 00:06:11.975
And this is great, but
not exactly what we want.

73
00:06:11.975 --> 00:06:19.498
So we wanted to, firstly, not stay here,
so we wanted to fade out.

74
00:06:19.498 --> 00:06:23.977
fadeOut = true.

75
00:06:23.977 --> 00:06:28.003
I think we can just pass in
fadeOut because it's a Boolean.

76
00:06:28.003 --> 00:06:30.347
There you go.
So now it will launch and

77
00:06:30.347 --> 00:06:35.512
it will sprinkle down and
it will disappear, which is better.

78
00:06:35.512 --> 00:06:38.150
And we also want it to actually be

79
00:06:38.150 --> 00:06:42.270
in the center of the page
instead of in the corner.

80
00:06:42.270 --> 00:06:45.949
And we want it to be in
the middle of our screen, but

81
00:06:45.949 --> 00:06:49.639
the problem is that screens
are a different size.

82
00:06:49.639 --> 00:06:56.021
So if we just do x, let's say 100,
&gt;&gt; Kadi Kraman: Then this

83
00:06:56.021 --> 00:07:01.650
might be here on my screen, but the phone
screens aren't always the same distance.

84
00:07:01.650 --> 00:07:06.690
So we can use the dimensions from
React Native to get the dimensions

85
00:07:06.690 --> 00:07:11.375
of the current device to position
its center for that device.

86
00:07:11.375 --> 00:07:16.885
So this is Dimensions from here,
from React Native.

87
00:07:19.307 --> 00:07:21.828
&gt;&gt; Kadi Kraman: And we can do Dimensions,

88
00:07:29.694 --> 00:07:34.937
&gt;&gt; Kadi Kraman: get(window),

89
00:07:34.937 --> 00:07:41.231
and we do width/2.

90
00:07:41.231 --> 00:07:43.466
So now, it's actually quite handy for

91
00:07:43.466 --> 00:07:46.251
testing when it fires every
time I open the page.

92
00:07:46.251 --> 00:07:46.981
There we go.

93
00:07:46.981 --> 00:07:49.786
And now, it's fired from the center.

94
00:07:49.786 --> 00:07:54.991
In fact, now that I look at it,
I think I would like it to be just off

95
00:07:54.991 --> 00:08:00.879
the screen when it fires rather than
having this little pile of confetti.

96
00:08:00.879 --> 00:08:05.506
So I can make it use the y value
to put it slightly off the screen.

97
00:08:08.815 --> 00:08:10.348
&gt;&gt; Kadi Kraman: I think that looks better.

98
00:08:10.348 --> 00:08:16.468
And actually, we use this
Dimensions value from React Native.

99
00:08:16.468 --> 00:08:20.467
It's worth knowing that this
actually comes with a hook as well.

100
00:08:20.467 --> 00:08:25.180
So instead of this, I could use,

101
00:08:26.584 --> 00:08:30.339
&gt;&gt; Kadi Kraman: useWindowDimensions.

102
00:08:30.339 --> 00:08:35.770
So useWindowDimensions is also
an export from React Native.

103
00:08:35.770 --> 00:08:40.837
And then this gives you a width,
the window width.

104
00:08:40.837 --> 00:08:44.022
So instead of doing Dimensions.get,

105
00:08:44.022 --> 00:08:47.792
I could actually use
this width here instead.

106
00:08:47.792 --> 00:08:52.506
And the good thing about that is
if you're building a mobile app,

107
00:08:52.506 --> 00:08:57.391
which is responsive, so
you could set it to landscape or portrait,

108
00:08:57.391 --> 00:08:59.125
then this would adapt.

109
00:08:59.125 --> 00:09:01.753
Otherwise, with the initial
implementation,

110
00:09:01.753 --> 00:09:05.413
where we import dimensions from
React Native, then it is set once.

111
00:09:05.413 --> 00:09:11.404
And then it won't get recalculated
if you changed your device size.

112
00:09:11.404 --> 00:09:12.805
So that is handy.

113
00:09:12.805 --> 00:09:16.802
Let's do autoStart = false.

114
00:09:16.802 --> 00:09:23.488
And we can use our confettiRef
instead to start it programmatically.

115
00:09:23.488 --> 00:09:27.339
So when we go to this
scheduleNotification, so

116
00:09:27.339 --> 00:09:30.998
we kind of kept it as
scheduleNotification,

117
00:09:30.998 --> 00:09:37.091
although it's kinda like I've completed
the thing, but let's keep it.

118
00:09:37.091 --> 00:09:39.874
So let's also do our confetti.

119
00:09:39.874 --> 00:09:43.898
So confettiRef?.current, so

120
00:09:43.898 --> 00:09:49.363
refs always have ref.current, and start.

121
00:09:51.207 --> 00:09:55.924
&gt;&gt; Kadi Kraman: Now,
this confetti should confetti when we

122
00:09:55.924 --> 00:10:00.012
press the button, which is awesome.

123
00:10:00.012 --> 00:10:01.863
Everything is so
much more satisfying with confetti.

124
00:10:04.775 --> 00:10:08.161
&gt;&gt; Kadi Kraman: And lastly,
it's worth updating this to something,

125
00:10:08.161 --> 00:10:13.400
I kinda call this thing, because it really
depends on something that you need to do.

126
00:10:13.400 --> 00:10:16.192
But a good example for
me is washing the car.

127
00:10:16.192 --> 00:10:20.073
So something you need to do every two
weeks, and it tends to take longer.

128
00:10:20.073 --> 00:10:23.599
So this is what the initial thing that
I had in mind when I was building this.

129
00:10:23.599 --> 00:10:26.926
So I'm gonna change this to two weeks.

130
00:10:26.926 --> 00:10:30.138
Who knows what two weeks
is in milliseconds?

131
00:10:30.138 --> 00:10:36.271
So two weeks in milliseconds is,
right, so we've got 60 seconds.

132
00:10:36.271 --> 00:10:42.373
And then this will be one hour,

133
00:10:42.373 --> 00:10:47.074
and this would be a day.

134
00:10:47.074 --> 00:10:51.875
So this would then be 14 days,
which is two weeks.

135
00:10:55.616 --> 00:11:01.854
&gt;&gt; Kadi Kraman: Okay, so it's a thing
that I want to do every two weeks.

136
00:11:01.854 --> 00:11:09.416
And I'm gonna just update this name
as well, so I've washed the car.

137
00:11:12.855 --> 00:11:14.242
&gt;&gt; Kadi Kraman: There we go.

138
00:11:14.242 --> 00:11:15.351
And,

139
00:11:21.520 --> 00:11:25.610
&gt;&gt; Kadi Kraman: Car wash due in, and

140
00:11:25.610 --> 00:11:29.945
Car wash overdue by.

141
00:11:29.945 --> 00:11:35.331
And in my notification, oops,
where's the notification?

142
00:11:38.873 --> 00:11:43.350
&gt;&gt; Kadi Kraman: Let's say
Time to wash the car.

143
00:11:46.194 --> 00:11:46.694
&gt;&gt; Kadi Kraman: Let's add a car emoji.

144
00:11:55.221 --> 00:11:55.867
&gt;&gt; Kadi Kraman: There we go.

145
00:11:55.867 --> 00:11:57.685
So now it's updated to 14 days.

146
00:11:57.685 --> 00:12:01.816
So I didn't use this value for testing
because looking at this countdown is

147
00:12:01.816 --> 00:12:04.782
a little bit more boring
than looking at ten seconds.

148
00:12:04.782 --> 00:12:09.592
But the idea is you could tweak this
history to also see how frequently you've

149
00:12:09.592 --> 00:12:10.188
done it.

150
00:12:10.188 --> 00:12:13.917
So let's say that you need to
wash the car every two weeks, but

151
00:12:13.917 --> 00:12:17.099
maybe it took three weeks and
maybe it took one week.

152
00:12:17.099 --> 00:12:20.652
So you can have some
additional handling here that

153
00:12:20.652 --> 00:12:25.146
will tell you the distance between
the last two history items.

154
00:12:25.146 --> 00:12:29.469
Let me just, for the last time,

155
00:12:29.469 --> 00:12:35.082
double-check this on my Android phone.

156
00:12:43.029 --> 00:12:43.723
&gt;&gt; Kadi Kraman: There we go.

157
00:12:43.723 --> 00:12:48.197
So car washed due in 13 days, but
I'm very eager, so washing the car now.

158
00:12:48.197 --> 00:12:54.249
And I get some confetti and the item
is added to my history, which is great.

