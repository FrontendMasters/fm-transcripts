WEBVTT

1
00:00:00.340 --> 00:00:03.842
&gt;&gt; Kadi Kraman: A really integral part
of most mobile notifications is push

2
00:00:03.842 --> 00:00:06.364
notifications, so a push notification,

3
00:00:06.364 --> 00:00:09.109
I mean we all received
them probably too many.

4
00:00:09.109 --> 00:00:13.126
But it's the notification that you get
in your notification bar from your

5
00:00:13.126 --> 00:00:15.719
application is triggered
by the application,

6
00:00:15.719 --> 00:00:18.076
when it's not in the foreground usually.

7
00:00:18.076 --> 00:00:21.508
And this two types of push notifications,

8
00:00:21.508 --> 00:00:26.860
there's remote notifications, so
these are sent from a server.

9
00:00:26.860 --> 00:00:31.784
So a server somewhere knows your
device's push notification and

10
00:00:31.784 --> 00:00:36.440
it sends the push notification
to like Apple or to Firebase and

11
00:00:36.440 --> 00:00:38.963
it gets directed to your device.

12
00:00:38.963 --> 00:00:44.456
Or local notifications which
are scheduled within your app and

13
00:00:44.456 --> 00:00:47.366
sent to the current device only.

14
00:00:47.366 --> 00:00:51.875
Setting up remote push
notifications is quite involved,

15
00:00:51.875 --> 00:00:56.200
I've linked to some documentations
on how to do it, but

16
00:00:56.200 --> 00:01:00.259
basically there's that you
need to set up a server.

17
00:01:00.259 --> 00:01:06.843
You need to register and save the push
token, so it is not easily workshopable,

18
00:01:06.843 --> 00:01:12.559
but we are going to send some local
push notifications to ourselves.

19
00:01:15.161 --> 00:01:20.012
&gt;&gt; Kadi Kraman: To do this, let's install
expo-notifications and expo-device.

20
00:01:28.349 --> 00:01:32.004
&gt;&gt; Kadi Kraman: Now, a concept that
we haven't coded before is asking for

21
00:01:32.004 --> 00:01:34.326
permission to send notifications.

22
00:01:34.326 --> 00:01:37.018
So before we can send
any push notifications,

23
00:01:37.018 --> 00:01:41.297
we need to ask the user if they are
willing to be send notifications to, and

24
00:01:41.297 --> 00:01:43.932
you've probably seen this alert yourself.

25
00:01:45.844 --> 00:01:49.604
&gt;&gt; Kadi Kraman: One thing that's worth
noting is that you can only ask, so

26
00:01:49.604 --> 00:01:53.540
these native alerts that says,
can we send notifications?

27
00:01:53.540 --> 00:01:56.061
Can we track your background activity?

28
00:01:56.061 --> 00:02:01.448
Things like that, or
can we access your phone camera?

29
00:02:01.448 --> 00:02:06.423
You can only ask them as a developer, you
can only ask them once, so once you send

30
00:02:06.423 --> 00:02:11.563
a push like an alert, native alert with
the, can we send you push notifications?

31
00:02:11.563 --> 00:02:16.099
And the user says, no, you can't,
then you can't ask again, the only way for

32
00:02:16.099 --> 00:02:20.252
the user to toggle the setting back to on,
would be to go to the settings.

33
00:02:22.426 --> 00:02:27.020
&gt;&gt; Kadi Kraman: So to ask for permission,
we're going to add a little utility,

34
00:02:27.020 --> 00:02:31.187
and feel free to copy this function,
so we'll copy this to

35
00:02:31.187 --> 00:02:36.823
utils/registerForPushNotificationsAsync-
.ts, so this will be in here.

36
00:02:41.679 --> 00:02:48.186
&gt;&gt; Kadi Kraman: Utils and new file
register for notificationsasync.ts.

37
00:02:49.859 --> 00:02:54.325
&gt;&gt; Kadi Kraman: Love it, and
feel free to copy this [COUGH].

38
00:02:59.199 --> 00:03:01.791
&gt;&gt; Kadi Kraman: All right,
so what does this do?

39
00:03:01.791 --> 00:03:06.640
This is a convenience function and
basically, before you schedule

40
00:03:06.640 --> 00:03:11.585
a notification, you need to check
whether you can actually send it.

41
00:03:11.585 --> 00:03:16.800
So the important part of this entire
function is this line, sorry,

42
00:03:16.800 --> 00:03:21.843
it's actually this line,
to request permission from the user.

43
00:03:21.843 --> 00:03:26.377
And this is the bit that makes the native
prompt actually show up on the user's

44
00:03:26.377 --> 00:03:26.952
device.

45
00:03:31.465 --> 00:03:35.663
&gt;&gt; Kadi Kraman: So what we're doing here,
is we're checking whether we're on

46
00:03:35.663 --> 00:03:40.018
a device because push notifications
don't work on simulators and

47
00:03:40.018 --> 00:03:41.897
didn't work on emulators.

48
00:03:41.897 --> 00:03:47.300
They definitely don't work on simulators,
so I can't use this iOS simulator.

49
00:03:47.300 --> 00:03:53.454
Then we check what the existing
permission status is,

50
00:03:53.454 --> 00:03:59.493
so the status,
do we have all the status listed here?

51
00:03:59.493 --> 00:04:03.271
But it can be granted,
denied, undecided, I think,

52
00:04:03.271 --> 00:04:07.804
let me see if there's actually
permission status, there we go.

53
00:04:07.804 --> 00:04:10.360
Granted, undetermined, and denied, so

54
00:04:10.360 --> 00:04:14.975
undetermined means that we've never asked,
the user has never been asked.

55
00:04:14.975 --> 00:04:17.684
Granted means that they've been asked and

56
00:04:17.684 --> 00:04:22.435
they said yes, and denied means that
they've been asked and they said no.

57
00:04:22.435 --> 00:04:28.001
So if the permission status is denied, and
then you call this request mission Async,

58
00:04:28.001 --> 00:04:31.479
so this is what makes
the permission pop-up show up,

59
00:04:31.479 --> 00:04:34.906
it's actually a no-op,
it doesn't do anything.

60
00:04:34.906 --> 00:04:38.079
Whereas if you do granted it
also doesn't do anything, so

61
00:04:38.079 --> 00:04:42.380
the only time it has any effect is when
the permission status is undetermined.

62
00:04:44.114 --> 00:04:47.810
&gt;&gt; Kadi Kraman: And the reason that
this is actually needed is that on as of

63
00:04:47.810 --> 00:04:51.198
a latest version of Android,
supercilibration and

64
00:04:51.198 --> 00:04:55.590
android work a little bit differently,
they are tied to a channel.

65
00:04:55.590 --> 00:04:59.647
Android users will probably know what
I mean more than I know what I mean,

66
00:04:59.647 --> 00:05:01.712
so there's different channels, so

67
00:05:01.712 --> 00:05:05.057
you can group notifications
from the same app to a channel.

68
00:05:05.057 --> 00:05:07.933
And for the latest version of Android,

69
00:05:07.933 --> 00:05:12.290
you need to set up a channel
before you ask for permissions,

70
00:05:12.290 --> 00:05:16.934
otherwise it doesn't work, so
that's why this code is here.

71
00:05:21.275 --> 00:05:22.283
&gt;&gt; Kadi Kraman: [COUGH]

72
00:05:30.743 --> 00:05:31.647
&gt;&gt; Kadi Kraman: Okay, so

73
00:05:31.647 --> 00:05:36.393
what we're going to do is
in our counter app here,

74
00:05:36.393 --> 00:05:42.608
we're going to add a button, so
let's go to the counter screen,

75
00:05:42.608 --> 00:05:46.568
so this should be an up counter and index.

76
00:05:50.656 --> 00:05:53.794
&gt;&gt; Kadi Kraman: And
let's render a little button here,

77
00:05:53.794 --> 00:05:56.294
so we want a touchable opacity.

78
00:05:59.422 --> 00:06:05.359
&gt;&gt; Kadi Kraman: We need some text, and
the text should say request permission.

79
00:06:11.507 --> 00:06:17.339
&gt;&gt; Kadi Kraman: All right,
and let's give it some style,

80
00:06:17.339 --> 00:06:20.750
let's do style button.

81
00:06:27.751 --> 00:06:31.431
&gt;&gt; Kadi Kraman: And we'll make the same
black button that we had before,

82
00:06:31.431 --> 00:06:36.428
should have probably saved it, but
we didn't, so we get to create it again.

83
00:06:36.428 --> 00:06:41.393
So background color we'll do a theme

84
00:06:41.393 --> 00:06:46.358
colorBlack, get some padding, and

85
00:06:46.358 --> 00:06:52.606
give it a borderRadius, borderRadius: 6,

86
00:06:52.606 --> 00:06:56.465
and let's do a buttonText.

87
00:06:56.465 --> 00:07:03.268
So this will be used by the text element
here, so style equals styles buttonText.

88
00:07:08.835 --> 00:07:13.682
&gt;&gt; Kadi Kraman: Okay, so
currently we just have a black button, so

89
00:07:13.682 --> 00:07:18.077
we need to make sure that
this text is white, so

90
00:07:18.077 --> 00:07:22.272
we want to do a color of theme,
colorWhite.

91
00:07:24.509 --> 00:07:28.459
&gt;&gt; Kadi Kraman: So
hopefully this shows up,

92
00:07:28.459 --> 00:07:32.907
let's do a fontWeight of bold.

93
00:07:38.708 --> 00:07:41.100
&gt;&gt; Kadi Kraman: A textTransform.

94
00:07:47.545 --> 00:07:52.267
&gt;&gt; Kadi Kraman: Uppercase,
&gt;&gt; Kadi Kraman: And

95
00:07:52.267 --> 00:07:57.000
don't need this fontSize, but

96
00:07:57.000 --> 00:08:02.796
we do want a have a letterSpacing of 1.

97
00:08:05.288 --> 00:08:09.519
&gt;&gt; Kadi Kraman: Lovely,
actually one thing I wanted to show you,

98
00:08:09.519 --> 00:08:15.281
this came up with someone else, so
fontWeight needs to be a string.

99
00:08:15.281 --> 00:08:20.893
So interestingly, on this iOS
simulator it's fine, but on an Android

100
00:08:20.893 --> 00:08:26.692
phone when we're testing this,
like passing in fontWeight as a number,

101
00:08:26.692 --> 00:08:31.390
actually crashed the app, so
that was quite interesting.

102
00:08:34.793 --> 00:08:43.473
&gt;&gt; Kadi Kraman: So fontWeight: bold,
&gt;&gt; Kadi Kraman: Okay,

103
00:08:43.473 --> 00:08:47.872
now we have our button and
let's do an onpress.

104
00:08:50.847 --> 00:08:56.685
&gt;&gt; Kadi Kraman: So this will be
a const handleRequestPermission,

105
00:08:56.685 --> 00:09:00.496
which will be an arrow function.

106
00:09:03.513 --> 00:09:06.999
&gt;&gt; Kadi Kraman: So
on this TouchableOpacity,

107
00:09:06.999 --> 00:09:11.299
let's give it an activeOpacity as well, so

108
00:09:11.299 --> 00:09:15.950
it's not so highlighted, let's do 0.8 and

109
00:09:15.950 --> 00:09:20.153
onPress will handleRequestPermission.

110
00:09:20.153 --> 00:09:25.361
So in this function,
&gt;&gt; Kadi Kraman: We

111
00:09:25.361 --> 00:09:30.375
want to do const result,
&gt;&gt; Kadi Kraman: And

112
00:09:30.375 --> 00:09:34.891
we want to call this utility
function that we created,

113
00:09:34.891 --> 00:09:39.711
so we want to await
registerForpushNotificationAsync.

114
00:09:39.711 --> 00:09:46.133
So this should be an asyn arrow function,
and let's just console.log what happens.

115
00:10:05.560 --> 00:10:10.788
&gt;&gt; Kadi Kraman: Okay, so I want
a simulator, so I am expecting, yeah,

116
00:10:10.788 --> 00:10:17.577
so I'm getting null here because
we're checking if we're on a device,

117
00:10:17.577 --> 00:10:21.836
if we're not on a device
let's return null.

118
00:10:21.836 --> 00:10:28.191
So I need to use my phone,

119
00:10:28.191 --> 00:10:32.127
let's use this

120
00:10:32.127 --> 00:10:36.971
Android phone, so

121
00:10:36.971 --> 00:10:42.136
we'll do Pixel 7.

122
00:10:45.175 --> 00:10:50.438
&gt;&gt; Kadi Kraman: Okay, so go to the
counter, so now if I request permission,

123
00:10:50.438 --> 00:10:54.259
we're getting this permissions alert, so

124
00:10:54.259 --> 00:10:59.857
this alert is being triggered
by our requestPermissionAsync.

125
00:10:59.857 --> 00:11:04.616
So let's allow, and now,
you can see that this console

126
00:11:04.616 --> 00:11:09.383
log is telling me that my
permission status is granted.

127
00:11:09.383 --> 00:11:14.068
And it is fine to call this
function every time you want to

128
00:11:14.068 --> 00:11:19.252
schedule a push notification,
because we've configured it

129
00:11:19.252 --> 00:11:24.545
in a way that it fails out early,
if we don't need to ask again.

130
00:11:24.545 --> 00:11:29.290
Then again, to be honest, you could even
call requestPermissionAsync loads of

131
00:11:29.290 --> 00:11:33.498
times because it will do nothing if
you already requested permission.

132
00:11:33.498 --> 00:11:38.435
All right, so now we have permission
to give to do push notifications,

133
00:11:38.435 --> 00:11:42.406
let me do the same on my iOS phone,
again so for next we go.

134
00:11:44.880 --> 00:11:48.033
&gt;&gt; Kadi Kraman: And reload, okay,
we're doing push notifications,

135
00:11:48.033 --> 00:11:50.993
so this is iOS when we're
requesting permissions.

136
00:11:50.993 --> 00:11:54.398
So I get the native iOS
push permission prompt,

137
00:11:54.398 --> 00:11:58.326
I'm gonna show you what
happens if I say don't allow.

138
00:11:58.326 --> 00:12:03.496
So I say don't allow and
then now my push thing is denied,

139
00:12:03.496 --> 00:12:07.500
and actually I wanna
change this to if true.

140
00:12:09.931 --> 00:12:13.655
&gt;&gt; Kadi Kraman: Just to show you so
it will always request permission, and

141
00:12:13.655 --> 00:12:17.007
I press this button and
literally nothing happens.

142
00:12:17.007 --> 00:12:20.135
And that's because I've asked the user,
they've said no,

143
00:12:20.135 --> 00:12:21.948
then me as an app I can't ask again.

144
00:12:21.948 --> 00:12:24.188
So, at this point when I've denied,

145
00:12:24.188 --> 00:12:28.323
then as an app developer I can't
ever ask request permissions again.

146
00:12:28.323 --> 00:12:33.552
So the only way as a user you can toggle
this on is using the settings app.

147
00:12:33.552 --> 00:12:38.468
So we go to settings and
notifications, and then you search for

148
00:12:38.468 --> 00:12:42.920
the app that you want to toggle
the notifications for, so

149
00:12:42.920 --> 00:12:46.191
in this case we are developing an Expo Go.

150
00:12:47.917 --> 00:12:51.948
&gt;&gt; Kadi Kraman: And this will be a list
of all the permissions that this app has

151
00:12:51.948 --> 00:12:56.929
asked, so in this case we're only
asked for notification permission, so

152
00:12:56.929 --> 00:12:58.449
we can toggle this on.

153
00:12:58.449 --> 00:13:03.520
You can also toggle things off here,
so we've got a camera permission,

154
00:13:03.520 --> 00:13:07.024
app tracking transparency,
all the good stuff.

155
00:13:07.024 --> 00:13:10.124
So now, if I request permission again,

156
00:13:10.124 --> 00:13:15.242
it will say granted because I've
toggled it on from the settings.

