WEBVTT

1
00:00:00.300 --> 00:00:04.088
&gt;&gt; Kadi Kraman: Now to get started,
we're going to start a new project.

2
00:00:04.088 --> 00:00:07.100
So open your terminal, and like I said,
you need to have node installed.

3
00:00:07.100 --> 00:00:13.880
If you do node-v, you are looking for
a long-term support version of nodes.

4
00:00:13.880 --> 00:00:15.945
That's always what you should be using so

5
00:00:15.945 --> 00:00:18.372
long-term support versions
are even numbers.

6
00:00:18.372 --> 00:00:22.490
So right now it's gonna be a 18,
that's getting a bit old now, but

7
00:00:22.490 --> 00:00:24.767
20, 22 in the future 24, etc.

8
00:00:24.767 --> 00:00:26.704
So I'll be using node 20 here.

9
00:00:27.764 --> 00:00:32.354
And the other thing you
need is a package manager.

10
00:00:32.354 --> 00:00:34.034
So I'm going to be using Yarn.

11
00:00:36.215 --> 00:00:39.791
&gt;&gt; Kadi Kraman: In particular,
I'm gonna use Yarn Classics, so Yarn 1.22.

12
00:00:39.791 --> 00:00:43.363
But you can use npm, so
this comes pre-installed with Node.

13
00:00:43.363 --> 00:00:45.241
You can use yarn classic like I am.

14
00:00:45.241 --> 00:00:48.453
You can use yarn modern, pnpm, bun, etc.

15
00:00:48.453 --> 00:00:50.268
So any of these will work.

16
00:00:50.268 --> 00:00:52.771
And you can check
the documentation here for

17
00:00:52.771 --> 00:00:57.311
any neurons we might have if you're using
a different package manager than me.

18
00:00:57.311 --> 00:00:59.813
In particular,
Yarn Classic is getting a bit old now, but

19
00:00:59.813 --> 00:01:02.808
for React Native projects,
a lot of people still prefer it.

20
00:01:02.808 --> 00:01:07.163
And the reason for it is that Yarn Modern,
and it's the same problem with pmpm,

21
00:01:07.163 --> 00:01:10.283
they introduced this plug-in
pay mode of node linking,

22
00:01:10.283 --> 00:01:13.868
where it basically gets rid
of your node modules folder.

23
00:01:13.868 --> 00:01:18.441
And for React Native projects, that's
problematic, because a lot of the time,

24
00:01:18.441 --> 00:01:22.087
from the native iOS and
Android directories, we link directly to

25
00:01:22.087 --> 00:01:25.950
files in the node modules,
which obviously breaks with this model.

26
00:01:25.950 --> 00:01:30.726
There is a workaround, so if you have this
node linker, in your Yarn RC or the same

27
00:01:30.726 --> 00:01:35.806
for pnpm, if you use the PMPRC and use the
node linker hosted, then it, it'll work.

28
00:01:35.806 --> 00:01:39.644
So you can still use these package
managers, but, just FYI and

29
00:01:39.644 --> 00:01:42.565
that's why I'm currently using Yarn.

30
00:01:42.565 --> 00:01:50.214
So the command to start create a new React
Native project is npx create-expo-app.

31
00:01:50.214 --> 00:01:52.263
So npx, you don't need to install npx,

32
00:01:52.263 --> 00:01:55.476
npx is something that you get by
default when you install Node.

33
00:01:55.476 --> 00:01:57.982
It's like a Node package executor.

34
00:01:57.982 --> 00:02:02.464
And it basically lets you execute
packages that are available in

35
00:02:02.464 --> 00:02:07.362
the node packages without installing
them globally on your machine.

36
00:02:07.362 --> 00:02:11.919
And whenever you're doing a new command,
I like to run it with -Help initially.

37
00:02:11.919 --> 00:02:16.373
And this prints out some help information
that usually tells you it's just

38
00:02:16.373 --> 00:02:21.403
a convention, but it usually tells
you what you can do with this script.

39
00:02:21.403 --> 00:02:24.501
So in particular here what's useful for

40
00:02:24.501 --> 00:02:29.723
us is you can see that you can
pass in a template or dash t.

41
00:02:29.723 --> 00:02:34.816
So by default when you npx create expo
app it uses the default template and

42
00:02:34.816 --> 00:02:38.337
the default template
isn't blank as of stk 51.

43
00:02:38.337 --> 00:02:41.444
It comes with navigation pre-installed and
some styling and

44
00:02:41.444 --> 00:02:45.266
a bunch of things to just get you started
so you wouldn't start from blank and

45
00:02:45.266 --> 00:02:47.373
wouldn't be overwhelmed with choices.

46
00:02:49.408 --> 00:02:52.000
&gt;&gt; Kadi Kraman: But in this workshop,
we wanna start from scratch and

47
00:02:52.000 --> 00:02:53.449
build everything as we go on.

48
00:02:53.449 --> 00:02:57.835
And the second thing that we're interested
in is this thing on the bottom here,

49
00:02:57.835 --> 00:03:02.350
which tells you how to create this package
at this new project using your preferred

50
00:03:02.350 --> 00:03:03.413
package manager.

51
00:03:03.413 --> 00:03:06.716
So if you do npx create expo app it
actually uses node by default and

52
00:03:06.716 --> 00:03:08.337
you get a package lock.

53
00:03:08.337 --> 00:03:14.006
In my case I want to use yarn, so I'm
going to copy this yarn, create expo app.

54
00:03:14.006 --> 00:03:17.386
Give it a name, so
I'm gonna call it taskly and

55
00:03:17.386 --> 00:03:22.689
dash T which will make sure that we
get the prompt to choose our template.

56
00:03:24.279 --> 00:03:29.340
So from here we have an option and let's
choose the blank typescript template.

