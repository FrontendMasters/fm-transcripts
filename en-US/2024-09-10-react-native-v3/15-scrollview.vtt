WEBVTT

1
00:00:00.880 --> 00:00:04.340
&gt;&gt; Kadi Kraman: Next up,
let's look at scrollable views.

2
00:00:05.410 --> 00:00:11.079
So right now we don't have enough
content to float over the screen,

3
00:00:11.079 --> 00:00:13.669
but if I add more content here.

4
00:00:19.691 --> 00:00:23.671
&gt;&gt; Kadi Kraman: So this is gonna be
more content that we have space for

5
00:00:23.671 --> 00:00:28.555
on the screen and on the web
the screen will automatically become

6
00:00:28.555 --> 00:00:33.028
scroll over at this point,
but on native it doesn't.

7
00:00:33.028 --> 00:00:35.452
So if you have more contents
that can fit on the screen,

8
00:00:35.452 --> 00:00:38.318
it simply just overflows the screen and
you can't see it.

9
00:00:38.318 --> 00:00:41.336
So if you need an area of
the screen to be scrollable,

10
00:00:41.336 --> 00:00:44.413
you need to explicitly make it scrollable.

11
00:00:44.413 --> 00:00:48.773
So instead of a view,
we can use a scroll view.

12
00:00:48.773 --> 00:00:55.681
So we import scroll view from React Native
&gt;&gt; Kadi Kraman: And

13
00:00:55.681 --> 00:00:59.763
replace the containing
view with the scroll view.

14
00:00:59.763 --> 00:01:01.464
And now It scrolls.

15
00:01:03.564 --> 00:01:08.552
Now one thing you'll notice
is that the last item on

16
00:01:08.552 --> 00:01:13.234
my list actually overflows a little bit.

17
00:01:13.234 --> 00:01:17.079
And the reason this is happening is
because of this container style because

18
00:01:17.079 --> 00:01:18.874
we've added this padding top.

19
00:01:18.874 --> 00:01:22.376
So if I remove this,
It goes straight to the end of the screen.

20
00:01:22.376 --> 00:01:27.126
How do I add a padding but
also prevent this overflow?

21
00:01:27.126 --> 00:01:29.576
There's another prop on
Scrollable Elements.

22
00:01:29.576 --> 00:01:34.866
It's called Content Container Style.

23
00:01:38.516 --> 00:01:41.881
&gt;&gt; Kadi Kraman: So if you need to
add any UI styles like paddings and

24
00:01:41.881 --> 00:01:44.205
margins to a scrollable element,

25
00:01:44.205 --> 00:01:48.870
you'll add them to the content
container instead of the container.

26
00:01:50.916 --> 00:01:55.752
&gt;&gt; Kadi Kraman: So
let's do styles content container.

27
00:01:59.671 --> 00:02:04.861
&gt;&gt; Kadi Kraman: And create the Style and
move this padding down.

28
00:02:06.841 --> 00:02:10.790
Another handy thing you can do with
scrollable elements is that you can make

29
00:02:10.790 --> 00:02:12.371
parts of it sticky.

30
00:02:12.371 --> 00:02:17.481
So there's a property on the scroll
view called sticky header indices.

31
00:02:17.481 --> 00:02:21.038
And it takes an array and
an array of numbers so

32
00:02:21.038 --> 00:02:24.604
indices that you want to make sticky.

33
00:02:24.604 --> 00:02:30.324
So if I make this zero,
it actually makes this header sticky.

34
00:02:31.544 --> 00:02:35.744
And I wanted to add some stars because
I wanted it to just float here.

35
00:02:35.744 --> 00:02:38.384
I'm trying to remember what I did.

36
00:02:38.384 --> 00:02:40.704
But I think I did padding 24 here.

37
00:02:41.901 --> 00:02:48.173
And padding 12 here, so
the 24 is to make up for this padding.

38
00:02:53.393 --> 00:02:55.611
&gt;&gt; Kadi Kraman: There we go.

39
00:02:55.611 --> 00:03:01.301
So then you have it
stay sticky at the top.

40
00:03:01.301 --> 00:03:05.793
And also obviously, we don't have
any background color right now in

41
00:03:05.793 --> 00:03:10.672
the text input, so to make this not
shine through, in the TextBurns mode,

42
00:03:10.672 --> 00:03:14.326
let's do a background color of theme,
color, white.

43
00:03:14.326 --> 00:03:15.511
There we go.

44
00:03:16.721 --> 00:03:23.262
And now we have a floaty text input
at the head of our shopping list.

