WEBVTT

1
00:00:00.260 --> 00:00:03.067
&gt;&gt; Kadi Kraman: So the next thing we're
going to talk about is animation.

2
00:00:03.067 --> 00:00:07.363
There's actually a huge amount you can
do with animation in React Native.

3
00:00:07.363 --> 00:00:09.044
Unfortunately, a lot of
it is quite involved,

4
00:00:09.044 --> 00:00:10.436
there's quite a lot of code involved.

5
00:00:10.436 --> 00:00:14.448
I originally thought about doing like
a swipe to delete example here or

6
00:00:14.448 --> 00:00:18.735
something like that, but there's quite
a lot of code to make that happen.

7
00:00:18.735 --> 00:00:24.395
But, thankfully, there is a beautifully
easy way to do limited but

8
00:00:24.395 --> 00:00:29.076
full-page and
beautiful animations in React Native.

9
00:00:29.076 --> 00:00:31.146
And it's called layout animation.

10
00:00:31.146 --> 00:00:37.146
Layout animation is part of React Native,
so you can import it from React Native.

11
00:00:37.146 --> 00:00:42.053
And what it does is it animates
the UI from its previous

12
00:00:42.053 --> 00:00:44.676
state to its current state.

13
00:00:44.676 --> 00:00:48.331
So you don't get any control
over how it animates,

14
00:00:48.331 --> 00:00:52.504
it kinda just does some
platform-specific prettiness.

15
00:00:52.504 --> 00:00:57.014
And the way you call layout
animation immediately before you do

16
00:00:57.014 --> 00:01:00.599
a state change that will
trigger the UI to update.

17
00:01:00.599 --> 00:01:07.755
So in our case, we'll need to call it
just before we set our ShoppingList.

18
00:01:07.755 --> 00:01:14.714
So in the useEffect,
we'll do layout animation, configureNext.

19
00:01:14.714 --> 00:01:19.682
And there's a bunch of presets that are
already given to you, and to be honest,

20
00:01:19.682 --> 00:01:22.221
I always, always end up using this one.

21
00:01:22.221 --> 00:01:27.863
So LayoutAnimation presets and
easeInEaseOut and

22
00:01:27.863 --> 00:01:32.190
we can copy this and use it everywhere,

23
00:01:32.190 --> 00:01:35.876
where we call setShoppingList.

24
00:01:41.454 --> 00:01:46.224
&gt;&gt; Kadi Kraman: Lovely, so now,
when you mark things as completed,

25
00:01:46.224 --> 00:01:52.806
they actually automatically animate up and
down, which is pretty neat.

26
00:01:52.806 --> 00:01:57.467
For more advanced animation, you can use
Animated, that's part of React Native.

27
00:01:57.467 --> 00:02:01.424
But most of the time,
you would actually use Reanimated.

28
00:02:04.771 --> 00:02:10.057
&gt;&gt; Kadi Kraman: React Native Reanimated,
which is a hooks-based animation library.

29
00:02:10.057 --> 00:02:13.641
So if you're looking to create
custom animations with React Native,

30
00:02:13.641 --> 00:02:16.982
the two libraries that you're
after is React Native Animated and

31
00:02:16.982 --> 00:02:20.827
React Native Gesture Handler,
which are both built by Software Mansion.

32
00:02:20.827 --> 00:02:22.758
They're really good libraries,
they work really well together.

33
00:02:22.758 --> 00:02:24.840
So if you do want to build
your own swipe to delete,

34
00:02:24.840 --> 00:02:26.438
those are the libraries that you use.

35
00:02:29.913 --> 00:02:34.730
&gt;&gt; Speaker 2: So, when the chat is asking,
so configureNext only

36
00:02:34.730 --> 00:02:39.988
impacts the directly next line,
that is a state update.

37
00:02:39.988 --> 00:02:44.485
&gt;&gt; Kadi Kraman: Not directly the next
line, it will be the next UI update.

38
00:02:44.485 --> 00:02:46.419
So UI updates actually get batched.

39
00:02:46.419 --> 00:02:50.371
So with this use state,
if you did a bunch of these use states,

40
00:02:50.371 --> 00:02:54.551
you did four of them in one hook,
then they actually get batched.

41
00:02:54.551 --> 00:03:00.214
So it will be the next time the component
re-renders in the UI updates.

42
00:03:00.214 --> 00:03:01.298
So that's what I guess triggered.

