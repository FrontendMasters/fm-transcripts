WEBVTT

1
00:00:00.000 --> 00:00:01.092
Let's talk about migrations.

2
00:00:01.092 --> 00:00:06.994
So migrations are basically
something that relational databases

3
00:00:06.994 --> 00:00:11.953
need to do in order to,
they serve two purposes really.

4
00:00:11.953 --> 00:00:17.509
One purpose is you want to,
on a relational database, the database

5
00:00:17.509 --> 00:00:23.760
itself actually stores the schema under
it because it has to create a table.

6
00:00:23.760 --> 00:00:26.953
A fixed table that understands
the shape of your data.

7
00:00:26.953 --> 00:00:31.777
And migration is when you teach your
database about the shape of that data.

8
00:00:31.777 --> 00:00:35.077
So that's one reason you
would do a migration is like,

9
00:00:35.077 --> 00:00:39.910
I need to teach my database what my data
looks like, so I have to run a migration.

10
00:00:39.910 --> 00:00:44.916
Another reason you would do a migration,
and I think this is where the name comes

11
00:00:44.916 --> 00:00:49.771
from, is sometimes if you already have
a shape, you already have a schema and

12
00:00:49.771 --> 00:00:53.682
you need to make a change to it,
let's say a breaking change.

13
00:00:53.682 --> 00:00:57.358
A breaking change would include,
for instance, if we go look at our

14
00:00:57.358 --> 00:01:01.163
schema right now, a breaking change
would be, I would come in here and

15
00:01:01.163 --> 00:01:05.181
say, now, users need an email and
it's required and it's unique.

16
00:01:05.181 --> 00:01:11.575
Okay, we already have 100,000 users in
our database, how is this going to work?

17
00:01:11.575 --> 00:01:14.760
If emails are all required,
and they're all unique, and

18
00:01:14.760 --> 00:01:19.180
none of the users have emails, right,
okay, you would have to run a migration.

19
00:01:19.180 --> 00:01:22.522
Well, the email was a lot harder
cuz you gotta get email from them.

20
00:01:22.522 --> 00:01:27.166
But if it was something else that
you could get, you'd have to migrate

21
00:01:27.166 --> 00:01:31.652
the data that you already have in
the database out of the database and

22
00:01:31.652 --> 00:01:35.691
then back into the database with
the new requirements on it.

23
00:01:35.691 --> 00:01:36.913
That's why it's called a migration.

24
00:01:36.913 --> 00:01:41.825
You're moving the data around back into
the database, but you have to reinsert

25
00:01:41.825 --> 00:01:45.879
it against this new schema that
has different validations on it.

26
00:01:45.879 --> 00:01:49.116
So that's why it's called a migration,
you're already moving the data around.

27
00:01:49.116 --> 00:01:52.478
So those are the two typical use cases for
migrations.

28
00:01:52.478 --> 00:01:57.236
They're painful, they usually cause
the most problems in downtime and

29
00:01:57.236 --> 00:02:01.609
issues in companies, but
Prisma makes it pretty easy for us to do.

30
00:02:01.609 --> 00:02:03.195
So, it's really awesome.

31
00:02:03.195 --> 00:02:06.715
And if you use a NoSQL database,
you don't need migrations anyway.

32
00:02:06.715 --> 00:02:08.642
So this is mostly for
relational databases.

33
00:02:08.642 --> 00:02:12.133
Well, let's get started with that because
we actually have to make a migration,

34
00:02:12.133 --> 00:02:14.663
because we just created a database and
we made a schema, but

35
00:02:14.663 --> 00:02:16.709
we didn't tell the database
about our schema.

36
00:02:16.709 --> 00:02:19.336
So let's run the initial migration for
that.

37
00:02:19.336 --> 00:02:22.211
So in order to do that,
we actually need to install something.

38
00:02:22.211 --> 00:02:24.351
We need to install the Prisma client.

39
00:02:24.351 --> 00:02:25.574
I mentioned this a while ago.

40
00:02:25.574 --> 00:02:28.735
This is the actual SDK for the database.

41
00:02:28.735 --> 00:02:31.280
Prisma, the thing that
we installed earlier,

42
00:02:31.280 --> 00:02:34.088
was the CLI that we're gonna
use to run a migration.

43
00:02:34.088 --> 00:02:36.591
But inside of our code,
we're gonna use Prisma client.

44
00:02:36.591 --> 00:02:39.368
This is the SDK, this is the ORM.

45
00:02:39.368 --> 00:02:41.509
This is how we talk to the database.

46
00:02:41.509 --> 00:02:43.016
So we want to install that.

47
00:02:43.016 --> 00:02:44.739
So be sure to install that.

48
00:02:44.739 --> 00:02:49.843
And the reason we have to install it
now is because the migration is going

49
00:02:49.843 --> 00:02:55.046
to generate this SDK for us, because
this SDK is based off of our schema.

50
00:02:55.046 --> 00:02:58.078
So every time we change our schema and
every time we migrate,

51
00:02:58.078 --> 00:02:59.630
the SDK gets generated again.

52
00:02:59.630 --> 00:03:04.245
So if one of you all had a different
schema than my schema, then your SDK will

53
00:03:04.245 --> 00:03:09.310
look different than my SDK, because it
gets generated based off your own schema.

54
00:03:09.310 --> 00:03:13.377
So it's pretty cool,
not too many MPN packages do that.

55
00:03:13.377 --> 00:03:15.668
If you and
I installed the same version of a package,

56
00:03:15.668 --> 00:03:18.843
we're guaranteed to have the same thing,
not in this case with Prisma,

57
00:03:18.843 --> 00:03:21.828
because it's going to generate
based off whatever your schema is.

58
00:03:24.904 --> 00:03:27.982
Okay, so I'm gonna install that.

59
00:03:27.982 --> 00:03:31.802
Okay, and then you also,
we already talked about this, but please

60
00:03:31.802 --> 00:03:36.442
make sure that you have database URL in
your .env file pointing to your database.

61
00:03:36.442 --> 00:03:39.499
Whether it's the host database that
you got to render or a local database,

62
00:03:39.499 --> 00:03:42.570
wherever your Postgres database is,
make sure you're pointing to that.

63
00:03:42.570 --> 00:03:47.616
The next thing you wanna do is you wanna
run the prisma migrate dev command,

64
00:03:47.616 --> 00:03:49.712
and you can give it a name flag.

65
00:03:49.712 --> 00:03:55.484
And the reason you give
it a name flag is because

66
00:03:55.484 --> 00:04:00.516
migrations have to be saved somewhere so

67
00:04:00.516 --> 00:04:04.367
that you can rerun them later.

68
00:04:04.367 --> 00:04:09.617
So if we're all sharing the same database
and some one person changed the schema and

69
00:04:09.617 --> 00:04:14.792
ran a migration, or sorry, if we all have
different databases and some one person

70
00:04:14.792 --> 00:04:19.595
changed something on the schema,
I too need that migration on my database.

71
00:04:19.595 --> 00:04:23.142
So hopefully they saved it,
so we can give it a name.

72
00:04:23.142 --> 00:04:25.698
So we can have the migrations
have names basically.

73
00:04:25.698 --> 00:04:29.762
So we know which migration is doing what,
and then we can check them in the Git.

74
00:04:29.762 --> 00:04:34.152
And then we can reuse them for
development of local staging and

75
00:04:34.152 --> 00:04:38.639
production, if that's the way
your organization sets it up.

76
00:04:38.639 --> 00:04:40.055
So we need to run this command,

77
00:04:40.055 --> 00:04:42.948
we're going to npx because Prisma
is not installed globally.

78
00:04:42.948 --> 00:04:46.556
I believe I already ran migration on this
database, so either we had to create

79
00:04:46.556 --> 00:04:50.240
another one, or I'm gonna run a command
that you don't need to run right now.

80
00:04:50.240 --> 00:04:53.311
I'm gonna reset my database, but
I want you to see it anyway.

81
00:04:53.311 --> 00:04:57.809
So I'm going to run npx prisma migrate,

82
00:04:57.809 --> 00:05:01.523
I think --reset, let's see.

83
00:05:01.523 --> 00:05:07.585
Oops, nope, not that, migrate, just reset.

84
00:05:07.585 --> 00:05:13.619
Okay, yes, I gotta reset my database cuz
I already added some stuff in there,

85
00:05:13.619 --> 00:05:14.906
so I reset mine.

86
00:05:14.906 --> 00:05:16.585
You don't need to do this.

87
00:05:16.585 --> 00:05:18.702
Okay, so now mine is just like yours.

88
00:05:18.702 --> 00:05:24.346
So now the command you wanna
run is going to be npx prisma

89
00:05:24.346 --> 00:05:29.512
migrate dev --name, and
you can give it a name.

90
00:05:29.512 --> 00:05:36.562
I'm just gonna call mine init,
for initialize, and hit Enter.

91
00:05:36.562 --> 00:05:37.387
Think this should work.

92
00:05:37.387 --> 00:05:39.607
I don't know if the reset got
rid of the name for me or not,

93
00:05:39.607 --> 00:05:42.036
I might have to pick a different name,
but you should be good.

94
00:05:42.036 --> 00:05:44.593
So what this is gonna do is it's
gonna do exactly what I said.

95
00:05:44.593 --> 00:05:48.868
It's going to sync the schema that we
just created to the database that you're

96
00:05:48.868 --> 00:05:49.785
pointing it to.

97
00:05:49.785 --> 00:05:52.645
So now your database is gonna
know about the schema, which for

98
00:05:52.645 --> 00:05:54.900
relational database is
absolutely necessary.

99
00:05:54.900 --> 00:05:58.445
So because this database isn't local,
it's running on the cloud,

100
00:05:58.445 --> 00:05:59.736
it took a little longer.

101
00:05:59.736 --> 00:06:01.772
If it was local,
it pretty much happened instantly,

102
00:06:01.772 --> 00:06:03.095
you don't have any data in there.

103
00:06:03.095 --> 00:06:07.148
Once it's done,
you'll see right here it says, hey, look,

104
00:06:07.148 --> 00:06:09.221
I created a migrations folder.

105
00:06:09.221 --> 00:06:13.080
I put a time stamp on it,
underscore the name you told me, and

106
00:06:13.080 --> 00:06:15.438
then I created a migration SQL file.

107
00:06:15.438 --> 00:06:17.796
You're gonna actually run
migrations in SQL and

108
00:06:17.796 --> 00:06:19.694
I'm gonna show you what it looks like,

109
00:06:19.694 --> 00:06:23.390
just so you can see how much work Prisma
has saved you, I want you to see that.

110
00:06:23.390 --> 00:06:27.125
And then other thing here is that it
confirms that our database is now in sync

111
00:06:27.125 --> 00:06:28.028
with our schema.

112
00:06:28.028 --> 00:06:30.960
And then this last one is
that it generated the client.

113
00:06:30.960 --> 00:06:34.299
Remember I told you Prisma's client
is generated based off our schema, so

114
00:06:34.299 --> 00:06:37.747
it does that every time we run a migration
and that's how we had to install it.

115
00:06:37.747 --> 00:06:43.053
So if we go look at these migrations now,
You

116
00:06:43.053 --> 00:06:46.411
can see that there's a migrations folder,
has this.

117
00:06:46.411 --> 00:06:51.670
And then this is what we would have had
to write ourselves if we did at Prisma.

