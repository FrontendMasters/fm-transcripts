WEBVTT

1
00:00:00.000 --> 00:00:05.973
The next thing we wanna do is, we wanna
create a middleware that will sit in front

2
00:00:05.973 --> 00:00:11.692
of any route that we do not want someone
who is not authenticated accessing.

3
00:00:11.692 --> 00:00:15.778
Basically you cannot hit this
route unless you have signed up,

4
00:00:15.778 --> 00:00:19.798
made an account, got a Json Web
token sent us a Json Web token.

5
00:00:19.798 --> 00:00:24.098
The Json Web token checked out it, gave us
back a real ID that matches who you say

6
00:00:24.098 --> 00:00:26.461
you are and
then you can access this route.

7
00:00:26.461 --> 00:00:29.500
So that's what this
middleware is gonna do.

8
00:00:29.500 --> 00:00:32.689
And we can put it in front of any
route that we want that to happen,

9
00:00:32.689 --> 00:00:35.303
which basically means
everything in the database.

10
00:00:35.303 --> 00:00:38.548
You wanna access anything in a database,
you got to be signed in,

11
00:00:38.548 --> 00:00:40.144
just like any traditional app.

12
00:00:40.144 --> 00:00:41.879
So that's what we're gonna do.

13
00:00:41.879 --> 00:00:44.925
So let's go back to our auth and
we're gonna just sort of say,

14
00:00:44.925 --> 00:00:47.689
export const protect,
you can call whatever you want.

15
00:00:47.689 --> 00:00:51.616
I'm gonna call it protect, it's gonna be
a middleware, it doesn't take any options.

16
00:00:51.616 --> 00:00:54.291
So I'm not gonna make it a function
that returns a function.

17
00:00:57.114 --> 00:01:00.504
And if it kind of just walked through,
I kind of have the code here.

18
00:01:00.504 --> 00:01:02.175
There's a few weird things going on and

19
00:01:02.175 --> 00:01:05.787
I just really wanna explain that because
even now, they're still very weird to me.

20
00:01:05.787 --> 00:01:10.468
But I know why we do them, but
they're still just very weird.

21
00:01:10.468 --> 00:01:14.576
So but like I said,
because you are the one making the server,

22
00:01:14.576 --> 00:01:16.396
you're making the rules.

23
00:01:16.396 --> 00:01:20.224
You're saying if you want
to authenticate with me,

24
00:01:20.224 --> 00:01:24.580
you have to pass me something
on the authorization header.

25
00:01:24.580 --> 00:01:26.345
All right, so let's do that.

26
00:01:26.345 --> 00:01:29.689
And I'll talk about what
bearer means in a minute.

27
00:01:29.689 --> 00:01:35.958
So I'm gonna say const bearer equals,
we need the rec and

28
00:01:35.958 --> 00:01:40.928
res, request.headers.authorization.

29
00:01:40.928 --> 00:01:45.087
Express lowercase is all the headers for
us, so we don't have to, but

30
00:01:45.087 --> 00:01:49.530
most headers are capitalized but
were expressed as lowercase them for us so

31
00:01:49.530 --> 00:01:51.242
they're easy to work with.

32
00:01:51.242 --> 00:01:54.284
So I wanna get this thing caught bearer.

33
00:01:54.284 --> 00:01:58.713
There's an authentication design
pattern or a scheme in HTTP,

34
00:01:58.713 --> 00:02:01.753
there's so many of them, you got API keys.

35
00:02:01.753 --> 00:02:05.856
You got basic all you have,
there's just so many things,

36
00:02:05.856 --> 00:02:08.044
one of them is called a bearer.

37
00:02:08.044 --> 00:02:12.577
Bearer is just basically like,
it's a generic way of

38
00:02:12.577 --> 00:02:17.527
describing someone having
the ability to send up a token.

39
00:02:17.527 --> 00:02:20.491
And that token can be
of any type of token.

40
00:02:20.491 --> 00:02:25.119
It could be a JSON web token,
it could be a API key, an access token.

41
00:02:25.119 --> 00:02:27.956
But bearer just describes
this person sent in a token.

42
00:02:27.956 --> 00:02:29.480
So we're gonna use a bearer token.

43
00:02:29.480 --> 00:02:31.580
What does that actually
mean in practicality?

44
00:02:31.580 --> 00:02:35.098
It just means you literally put
the word bearer in front of your token.

45
00:02:37.083 --> 00:02:39.696
That's it, yeah, it's silly.

46
00:02:39.696 --> 00:02:46.327
I guess it's kinda like,
do you use a anchor tag in a form?

47
00:02:46.327 --> 00:02:49.862
Because it's technically correct or
do you use a button?

48
00:02:49.862 --> 00:02:52.682
Probably a button even though I guess
the anchor tag is semantically correct.

49
00:02:52.682 --> 00:02:55.947
It's one of those things is you just
this is just for semantic at this point.

50
00:02:55.947 --> 00:02:58.117
I bet there's more to it, but
I'm not a security expert.

51
00:02:58.117 --> 00:03:02.850
So, yeah,
we're gonna use a bearer token here.

52
00:03:02.850 --> 00:03:07.542
And basically, we're just gonna
check every step along the way.

53
00:03:07.542 --> 00:03:09.423
If you don't meet a certain requirement,

54
00:03:09.423 --> 00:03:12.305
we're just gonna 401 [INAUDIBLE]
which means not authorized.

55
00:03:12.305 --> 00:03:14.862
401 is the status code for not authorized.

56
00:03:14.862 --> 00:03:19.231
So in this case of, bearer token.

57
00:03:19.231 --> 00:03:23.201
You didn't send one up,
you don't use get access?

58
00:03:23.201 --> 00:03:24.054
I don't think so.

59
00:03:24.054 --> 00:03:29.742
So I can say res.status 401 res.

60
00:03:29.742 --> 00:03:31.302
Whatever I wanna send back.

61
00:03:31.302 --> 00:03:34.492
If you want your API, send it back
messages that show up on your UI screen

62
00:03:34.492 --> 00:03:35.995
and you will send a message back.

63
00:03:35.995 --> 00:03:37.165
It depends on what you want.

64
00:03:37.165 --> 00:03:41.820
I'm just gonna send a message back and
I'm gonna be like,

65
00:03:41.820 --> 00:03:45.915
message not authorized,
or something like that.

66
00:03:45.915 --> 00:03:48.564
And then I need to put a return here,
at least in my case.

67
00:03:48.564 --> 00:03:51.488
Otherwise, it'll just keep going
to whatever's next down here.

68
00:03:51.488 --> 00:03:53.138
So I gotta put a return.

69
00:03:53.138 --> 00:03:56.443
So I'm gonna just gonna stop here and
then we're gonna hook this up and

70
00:03:56.443 --> 00:03:59.768
then we're gonna see it run, and
then we'll fill out the rest later.

71
00:03:59.768 --> 00:04:03.074
So I'm gonna save that, I have protect.

72
00:04:03.074 --> 00:04:08.067
What I want to do now is go to index Ts,
I'm sorry, server Ts.

73
00:04:08.067 --> 00:04:13.271
And right here in front of
the router on the slash API.

74
00:04:13.271 --> 00:04:14.871
I wanna protect this whole router.

75
00:04:14.871 --> 00:04:18.767
I don't want anyone accessing these
routes unless they're authenticated.

76
00:04:18.767 --> 00:04:22.122
So I'm gonna save protect like that.

77
00:04:22.122 --> 00:04:24.184
It's gonna import it for
me and I'm gonna hit comma.

78
00:04:24.184 --> 00:04:25.467
I'm gonna do that.

79
00:04:25.467 --> 00:04:28.156
Mine auto import it like that.

80
00:04:28.156 --> 00:04:30.911
So you wanna import your
protect from modules off.

81
00:04:30.911 --> 00:04:35.050
And then you wanna add it before
your router after slash API.

82
00:04:35.050 --> 00:04:39.003
So now anyone tries to go
to anything slash API.

83
00:04:39.003 --> 00:04:46.001
Before we let you access these handlers
over here, you gotta get past protect.

84
00:04:46.001 --> 00:04:48.869
And right now protect is rejecting
anything that doesn't have a barrel

85
00:04:48.869 --> 00:04:49.407
token on it.

86
00:04:49.407 --> 00:04:52.921
So let's see if we can test that.

87
00:04:52.921 --> 00:04:54.598
Stop my server, start my server.

88
00:04:54.598 --> 00:04:55.527
That didn't stop it.

89
00:04:55.527 --> 00:04:58.462
That did something else, there we go.

90
00:04:58.462 --> 00:05:01.854
And then now what I'm gonna do
is go to my thunder client and

91
00:05:01.854 --> 00:05:04.564
I'm just gonna try to go
to slash API product.

92
00:05:04.564 --> 00:05:11.224
I don't have anything in the headers,
I don't have authorization here,

93
00:05:11.224 --> 00:05:17.053
I don't have, this thing is using
bearer right here are off too.

94
00:05:17.053 --> 00:05:18.716
But I don't have anything here and bear.

95
00:05:18.716 --> 00:05:22.566
So I can just send this request and
you can see I get back 401, unauthorized,

96
00:05:22.566 --> 00:05:23.842
message not authorized.

97
00:05:23.842 --> 00:05:24.917
Exactly what I said back.

98
00:05:24.917 --> 00:05:25.879
That's our middleware.

99
00:05:25.879 --> 00:05:27.854
That's protect doing that.

100
00:05:27.854 --> 00:05:29.910
It's like, no,
you didn't send anything up.

