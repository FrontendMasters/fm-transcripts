WEBVTT

1
00:00:00.210 --> 00:00:03.682
We talked a little bit just
about processes just now,

2
00:00:03.682 --> 00:00:09.175
the thing about processes it goes hand in
hand with something called environments.

3
00:00:09.175 --> 00:00:12.665
So, let's think about environments for
a little bit,

4
00:00:12.665 --> 00:00:15.570
an environment is very
much like the process.

5
00:00:15.570 --> 00:00:18.462
It's the process is what's
running in the environment,

6
00:00:18.462 --> 00:00:21.600
but the environment is where
your code is actually running.

7
00:00:21.600 --> 00:00:24.678
So, for instance right now we're
all on a local environment or

8
00:00:24.678 --> 00:00:26.139
a development environment.

9
00:00:27.140 --> 00:00:31.253
But then when you go to deploy this,
you might be in a staging environment, or

10
00:00:31.253 --> 00:00:33.490
a production environment.

11
00:00:33.490 --> 00:00:37.486
So you have the same code running in
a different environment, which is and

12
00:00:37.486 --> 00:00:39.880
it doesn't have to be a different machine.

13
00:00:39.880 --> 00:00:43.702
You can have different
environments on the same machine,

14
00:00:43.702 --> 00:00:48.851
an environment is just like a set of
conditions in which your code operates in.

15
00:00:48.851 --> 00:00:53.524
For instance React, when you develop
what React is in development mode, okay,

16
00:00:53.524 --> 00:00:55.461
until you do a production build.

17
00:00:55.461 --> 00:00:59.398
In development mode,
in a development environment,

18
00:00:59.398 --> 00:01:04.796
it will show you warnings about like
props and different things like that.

19
00:01:04.796 --> 00:01:06.546
It'll show you warnings about like,

20
00:01:06.546 --> 00:01:09.840
make sure you put the key prop on
all the child and stuff like that.

21
00:01:09.840 --> 00:01:12.693
But in production,
it won't show you that, right, so

22
00:01:12.693 --> 00:01:16.472
it behaves differently depending on
what environment it's running in.

23
00:01:16.472 --> 00:01:21.257
And, you have the ability to change
that environment with one variable.

24
00:01:21.257 --> 00:01:25.841
So we're gonna talk about those variables
how to change those environments,

25
00:01:25.841 --> 00:01:28.418
and how to actually
take advantage of them.

26
00:01:28.418 --> 00:01:34.446
Okay, so One important environment

27
00:01:34.446 --> 00:01:40.597
variable is called NODE_ENV, you will
see this all the time working in Node.

28
00:01:40.597 --> 00:01:43.836
It's basically short for node environment,

29
00:01:43.836 --> 00:01:48.000
it's a string that tells node
what environment it runs in.

30
00:01:48.000 --> 00:01:51.744
And and there's tons of packages that
rely on this node environment, like for

31
00:01:51.744 --> 00:01:55.374
instance, React literally relies on
this environment variable to be set to

32
00:01:55.374 --> 00:01:59.150
something to know whether or
not it should show certain errors or not.

33
00:01:59.150 --> 00:02:02.293
Whether or not it should enable
performance or not, whether or

34
00:02:02.293 --> 00:02:05.210
not it's should bundle something or not.

35
00:02:05.210 --> 00:02:09.239
So many packages rely on this,
there's typically like two or

36
00:02:09.239 --> 00:02:11.900
three different values for NODE_ENV.

37
00:02:11.900 --> 00:02:15.005
It's usually either development
which is the default usually, and

38
00:02:15.005 --> 00:02:18.710
there's production and then sometimes
there's staging or I'm sorry testing.

39
00:02:21.270 --> 00:02:24.515
Okay, you can run a production
environment locally on your computer,

40
00:02:24.515 --> 00:02:27.069
in fact you probably should
is to test what will happen.

41
00:02:28.150 --> 00:02:33.670
You can run a development environment
on your production server somewhere.

42
00:02:33.670 --> 00:02:35.258
It doesn't really matter,

43
00:02:35.258 --> 00:02:39.889
it's just you telling the application
what you're running or what environment,

44
00:02:39.889 --> 00:02:44.008
although you should match them up to
where they're physically running.

45
00:02:46.585 --> 00:02:47.526
Any questions on that?

46
00:02:49.969 --> 00:02:51.432
I'm gonna demonstrate it right quick,

47
00:02:51.432 --> 00:02:53.337
we've already been using
environment variables.

48
00:02:53.337 --> 00:02:58.855
This env file is environment variables,
okay, an environment variable

49
00:02:58.855 --> 00:03:03.840
is a variable that gets injected
into your app when it's running.

50
00:03:04.900 --> 00:03:07.090
And you might ask yourself,
why would I need that?

51
00:03:07.090 --> 00:03:12.621
Well, these two things are incredibly
important, if someone got this database

52
00:03:12.621 --> 00:03:18.170
URL that's got all my users in it, and
I check that URL into git on GitHub, yeah.

53
00:03:18.170 --> 00:03:19.857
I mean, you might as well
just kiss your app goodbye,

54
00:03:19.857 --> 00:03:22.050
like someone's just gonna
log into your database.

55
00:03:22.050 --> 00:03:26.980
So how does your app get that URL
without you putting it in your code?

56
00:03:26.980 --> 00:03:31.549
Well, that's what environment variable is
for, wherever you are hosting your app,

57
00:03:31.549 --> 00:03:33.813
you can tell that hosting provider to say.

58
00:03:33.813 --> 00:03:38.252
Hey, here are some environment variables
I need you to inject into my code, so

59
00:03:38.252 --> 00:03:40.283
I can have them when it's running.

60
00:03:40.283 --> 00:03:45.740
And then you can access those
variables on the process,

61
00:03:45.740 --> 00:03:51.441
so you can say process environment
give me that variable.

62
00:03:51.441 --> 00:03:55.835
If you don't know what it is but you
know it's there because you injected it,

63
00:03:55.835 --> 00:03:59.161
in our case we injected it with
dotenv the package dotenv.

64
00:03:59.161 --> 00:04:03.257
Here this injects all of our environment
variables from the dotenv file.

65
00:04:03.257 --> 00:04:06.972
But when you go to production, there'll
be some GUI where you can type into,

66
00:04:06.972 --> 00:04:10.880
this environment name, this value,
this environment name, this value.

67
00:04:10.880 --> 00:04:14.703
And that hosting platform will inject
those variables into your app so

68
00:04:14.703 --> 00:04:16.560
you can safely have them.

69
00:04:16.560 --> 00:04:19.066
You ever hear like, such and
such got hacked, yeah,

70
00:04:19.066 --> 00:04:22.140
seriously like left
the environment variable in git.

71
00:04:22.140 --> 00:04:26.220
It's a common thing I think I can tell how
many companies have been hacked because

72
00:04:26.220 --> 00:04:29.380
someone pushed up
an environment variable to git.

73
00:04:29.380 --> 00:04:33.219
It's such a bad thing, there's literally
bots that will scan your code like you

74
00:04:33.219 --> 00:04:35.760
[LAUGH] you left an environment
variable in your code,

75
00:04:35.760 --> 00:04:37.290
you're sure you wanna do this?

76
00:04:37.290 --> 00:04:41.630
It's a thing, it's that important,
so, yeah, be careful with that.

