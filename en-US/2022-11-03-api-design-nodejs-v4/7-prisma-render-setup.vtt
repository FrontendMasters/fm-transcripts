WEBVTT

1
00:00:00.000 --> 00:00:01.278
So what is the ORM that we're gonna use?

2
00:00:01.278 --> 00:00:02.948
We're gonna use something called Prisma.

3
00:00:02.948 --> 00:00:08.696
So Prisma is a database agnostic,
type-safe ORM.

4
00:00:08.696 --> 00:00:10.693
What does type-safe mean?

5
00:00:10.693 --> 00:00:15.959
It basically means that this functionality

6
00:00:15.959 --> 00:00:22.797
here is aware of the shape of
the data that you described.

7
00:00:22.797 --> 00:00:26.253
So it can give you autocomplete for
the data that you're interacting with,

8
00:00:26.253 --> 00:00:27.715
which is actually really cool.

9
00:00:27.715 --> 00:00:30.729
Cuz typically you don't get that
because your data's dynamic,

10
00:00:30.729 --> 00:00:33.045
how would the code know
what the data looked like?

11
00:00:33.045 --> 00:00:35.772
Well, Prisma does, and it's really cool.

12
00:00:35.772 --> 00:00:36.875
So we'll be using that.

13
00:00:36.875 --> 00:00:40.820
It definitely supports most databases
out there, Mongo Postgres, SQLite,

14
00:00:40.820 --> 00:00:45.184
even something like PlanetScale which is a
service database which is really awesome,

15
00:00:45.184 --> 00:00:46.336
it supports that too.

16
00:00:46.336 --> 00:00:50.604
And not only has an SDK for doing basic
to advanced querying of a database but

17
00:00:50.604 --> 00:00:53.475
it also handles schemas,
migration, seeding.

18
00:00:53.475 --> 00:00:58.180
And pretty sophisticated rights, that we
probably won't get to today because that

19
00:00:58.180 --> 00:01:00.311
would just be like a database course.

20
00:01:00.311 --> 00:01:04.847
But it's definitely slowly but
surely becoming the ORM choice for

21
00:01:04.847 --> 00:01:06.629
most Node.js projects.

22
00:01:06.629 --> 00:01:09.618
I think most people just start a project
and use Prisma at this point, and

23
00:01:09.618 --> 00:01:11.632
they also have like really
good documentation.

24
00:01:11.632 --> 00:01:15.618
I swear they're not paying me for this,
I just like the product, it's really cool.

25
00:01:15.618 --> 00:01:20.538
And like I said before,
we'll be using Postgres for the database.

26
00:01:20.538 --> 00:01:23.118
Now, before we get started,
you're gonna have to set up a database so

27
00:01:23.118 --> 00:01:24.927
this can actually work,
and there's two ways.

28
00:01:24.927 --> 00:01:26.624
I'm gonna give you the recommended way and

29
00:01:26.624 --> 00:01:28.756
I'm gonna give you the way
that's not recommended.

30
00:01:28.756 --> 00:01:31.364
The recommended way is
just go to render.com and

31
00:01:31.364 --> 00:01:33.404
spin up a Postgres database for free.

32
00:01:33.404 --> 00:01:34.796
You can make a free account.

33
00:01:34.796 --> 00:01:36.993
You can go get a database, it's hosted.

34
00:01:36.993 --> 00:01:38.220
You can pick the version.

35
00:01:38.220 --> 00:01:41.039
It kind of just guarantees that you're
gonna be able to get through this course

36
00:01:41.039 --> 00:01:41.860
without any trouble.

37
00:01:41.860 --> 00:01:44.845
If you already have Postgres on your
computer, you can use that as well.

38
00:01:44.845 --> 00:01:48.501
Just make sure you have the latest
version, which I think is 14 something.

39
00:01:48.501 --> 00:01:52.454
If you don't have it on your computer,
just go to Render, make an account, and

40
00:01:52.454 --> 00:01:53.049
spin it up.

41
00:01:53.049 --> 00:01:57.226
But if you absolutely want to
install Postgres locally, you can go

42
00:01:57.226 --> 00:02:01.861
to their website and they have an
installer that allows you to install it.

43
00:02:01.861 --> 00:02:05.853
And then you can spin up a Postgres and
manage it locally yourself.

44
00:02:05.853 --> 00:02:07.158
I will not be doing that.

45
00:02:07.158 --> 00:02:09.814
I actually I do have Postgres locally,
so I could just turn it on.

46
00:02:09.814 --> 00:02:13.623
But I'm just gonna go to Render and
I'm just gonna spin one up there, and

47
00:02:13.623 --> 00:02:14.942
I'm gonna use that one.

48
00:02:14.942 --> 00:02:17.184
I already have one, so
I'm gonna show you how that looks like.

49
00:02:17.184 --> 00:02:18.120
Just gonna go to render.com.

50
00:02:20.930 --> 00:02:24.603
I'm already signed in so
I'm gonna go to my dashboard.

51
00:02:24.603 --> 00:02:28.446
And you can see here, I already have
a database to just show you what it looked

52
00:02:28.446 --> 00:02:30.010
like if you had to make one.

53
00:02:30.010 --> 00:02:35.179
You can just Click Create and then they
literally have an option for PostgreSQL.

54
00:02:35.179 --> 00:02:38.569
You just click that, a little blue
elephant, or purple elephant,

55
00:02:38.569 --> 00:02:39.761
that's what you want.

56
00:02:39.761 --> 00:02:41.310
You wanna click that right there.

57
00:02:41.310 --> 00:02:45.180
It might look different
since you're a new customer,

58
00:02:45.180 --> 00:02:50.912
your UI might look different, but you
still wanna click a PostgreSQL database.

59
00:02:50.912 --> 00:02:53.490
Make sure you pick the free one,
and let me show you what I mean.

60
00:02:53.490 --> 00:02:56.627
When you go down here it automatically
selects the starter one,

61
00:02:56.627 --> 00:02:57.916
that's 7 bucks a month.

62
00:02:57.916 --> 00:03:00.119
Go to the left and click the free one.

63
00:03:00.119 --> 00:03:04.340
Because it says right here,
you can't downgrade it later.

64
00:03:04.340 --> 00:03:08.032
So make sure you pick the lowest one
at first, which is the free one.

65
00:03:08.032 --> 00:03:10.277
You can name it whatever you want.

66
00:03:10.277 --> 00:03:12.233
Don't worry about the database name.

67
00:03:12.233 --> 00:03:13.499
Don't worry about the user.

68
00:03:13.499 --> 00:03:15.161
Don't worry about the region.

69
00:03:15.161 --> 00:03:16.506
In fact, you don't have to
worry about any of this stuff.

70
00:03:16.506 --> 00:03:22.710
Just put a name and
leave everything else and click Create.

71
00:03:22.710 --> 00:03:27.140
Once you have that,
you'll have a database and

72
00:03:27.140 --> 00:03:33.030
you can scroll down and
you'll see all these different links.

73
00:03:33.030 --> 00:03:37.778
Make sure you copy the external
database URL link.

74
00:03:37.778 --> 00:03:39.810
You do not want the internal one.

75
00:03:39.810 --> 00:03:45.558
The internal one is
probably only functional

76
00:03:45.558 --> 00:03:50.253
within inside of a firewall or a VPC.

77
00:03:50.253 --> 00:03:52.324
It doesn't allow external IP addresses.

78
00:03:52.324 --> 00:03:56.379
It might rotate its URL frequently so
it changes.

79
00:03:56.379 --> 00:03:58.374
So you don't wanna use the internal one,

80
00:03:58.374 --> 00:04:00.712
it pretty much means it
won't work externally.

81
00:04:00.712 --> 00:04:01.647
Use the external one.

82
00:04:03.685 --> 00:04:08.141
And this is something that Heroku had a
problem with, they had rotating databases.

83
00:04:08.141 --> 00:04:09.550
So even if you use it for external stuff,

84
00:04:09.550 --> 00:04:12.129
you would have to go change it all
the time, and that was really annoying.

85
00:04:15.599 --> 00:04:17.926
Cool, so
everyone should be able to do that.

86
00:04:20.773 --> 00:04:22.527
Just make sure you get that copied.

87
00:04:22.527 --> 00:04:24.967
We will be using it right now.

88
00:04:29.361 --> 00:04:33.238
Okay, so once you get your database,

89
00:04:33.238 --> 00:04:38.216
what you wanna do now is
we wanna install Prisma.

90
00:04:38.216 --> 00:04:41.985
So to install Prisma there's also
some other dependencies that

91
00:04:41.985 --> 00:04:43.248
we're going to use.

92
00:04:43.248 --> 00:04:46.045
We're gonna use type script, like I
said at the beginning of the course.

93
00:04:46.045 --> 00:04:50.891
And the reason we wanna use type script
because that enables Prismas type

94
00:04:50.891 --> 00:04:54.792
checked stk, which I think is
half the benefit of Prisma.

95
00:04:54.792 --> 00:04:56.756
It is actually quite powerful.

96
00:04:56.756 --> 00:05:00.956
Because without that, what you're gonna do
is you're gonna find yourself like tabbing

97
00:05:00.956 --> 00:05:02.249
back between your schema.

98
00:05:02.249 --> 00:05:04.469
And the handler that you're
in like what is that?

99
00:05:04.469 --> 00:05:05.657
What does the user need again?

100
00:05:05.657 --> 00:05:08.430
Or what's that field that's required?

101
00:05:08.430 --> 00:05:11.622
I forgot, you can just do it in
TypeScript, it'll just show you.

102
00:05:11.622 --> 00:05:13.514
So we're gonna switch over to TypeScript.

103
00:05:13.514 --> 00:05:15.434
Which means for TypeScript,
we need other dependencies.

104
00:05:15.434 --> 00:05:18.767
So we got to download all the TypeScript
stuff and then we can download Prisma.

105
00:05:18.767 --> 00:05:22.355
And then we're gonna switch to the project
which only has two files at this point to

106
00:05:22.355 --> 00:05:24.395
TypeScript, so you'll see what that looks.

107
00:05:24.395 --> 00:05:26.561
Okay, cool so
you can copy this command right here,

108
00:05:26.561 --> 00:05:28.885
which will give you the whole
thing you need to install.

109
00:05:28.885 --> 00:05:30.793
So let's go ahead and do that.

110
00:05:30.793 --> 00:05:33.034
I'm gonna go to my terminal.

111
00:05:33.034 --> 00:05:34.828
I'm going to stop the server.

112
00:05:34.828 --> 00:05:37.603
You can stop the server or you can
open up another tab, it's up to you.

113
00:05:37.603 --> 00:05:41.962
I'm actually just going
to stop the server.

114
00:05:41.962 --> 00:05:43.040
And I'm gonna paste this in.

115
00:05:43.040 --> 00:05:47.673
So MPM install typescript ts node.

116
00:05:47.673 --> 00:05:48.718
So TypeScript,

117
00:05:48.718 --> 00:05:54.252
it's actually the transpiler that's going
to convert the TypeScript to JavaScript.

118
00:05:54.252 --> 00:05:58.242
TS node is literally the same thing
as running node in the terminal,

119
00:05:58.242 --> 00:06:02.096
pointing it at a file, but
doing it in a TypeScript environment.

120
00:06:02.096 --> 00:06:03.604
So it doesn't have to build first.

121
00:06:03.604 --> 00:06:10.301
And @types node are just the types for
the node runtime, so we get global types.

122
00:06:10.301 --> 00:06:11.941
And then Prisma's Prisma.

123
00:06:11.941 --> 00:06:14.182
So we're gonna install those.

124
00:06:14.182 --> 00:06:20.525
Make sure you save dev as all
of these are dev dependencies.

125
00:06:24.563 --> 00:06:26.929
Okay, should have those installed.

126
00:06:29.145 --> 00:06:33.767
Now that we do,
we need to create a TS config file.

127
00:06:33.767 --> 00:06:37.019
If you've never used TypeScript before,
this is just a configuration file for

128
00:06:37.019 --> 00:06:37.611
TypeScript.

129
00:06:37.611 --> 00:06:41.334
TypeScript is a compiler,
it transforms code, and

130
00:06:41.334 --> 00:06:46.253
you can have a bazillion different
options on how you wanted to do it.

131
00:06:46.253 --> 00:06:48.726
So we're gonna paste this in and
we're going to do that.

132
00:06:48.726 --> 00:06:53.977
So on the root of this
project just make a new file,

133
00:06:53.977 --> 00:06:58.494
tsconfig.json and paste this in like so.

134
00:06:58.494 --> 00:07:04.985
I know I put it in here, but
I highly recommend removing strict true.

135
00:07:04.985 --> 00:07:09.017
Otherwise, you will be writing
a lot of types [LAUGH].

136
00:07:09.017 --> 00:07:14.072
If you put strict true TypeScript won't
build unless you do all the hard work.

137
00:07:14.072 --> 00:07:18.036
So I highly recommend just getting rid
of that strict true inside the compiler.

