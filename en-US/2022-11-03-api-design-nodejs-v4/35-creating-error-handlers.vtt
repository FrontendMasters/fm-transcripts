WEBVTT

1
00:00:00.230 --> 00:00:02.419
All right,
let's talk about error handling.

2
00:00:02.419 --> 00:00:05.094
I'm gonna push this up, and
we'll talk about error handling,

3
00:00:05.094 --> 00:00:06.690
which we desperately need as you saw.

4
00:00:06.690 --> 00:00:13.340
[LAUGH] So if we go over to the site,
we can talk about errors.

5
00:00:13.340 --> 00:00:17.098
So how do errors work in Express,
or even node?

6
00:00:17.098 --> 00:00:18.558
Anyone knows what happens if
you throw an error at node?

7
00:00:21.940 --> 00:00:25.836
Ever tried to do that before,
check this out, so if I go,

8
00:00:25.836 --> 00:00:31.539
was gonna go a little JavaScript file
right click, it's gonna call it error.Js.

9
00:00:31.539 --> 00:00:34.040
I'm gonna go in here, I wanna throw there.

10
00:00:40.217 --> 00:00:42.300
If I run this file,
what you think is gonna happen?

11
00:00:44.421 --> 00:00:45.077
&gt;&gt; Pop up?

12
00:00:45.077 --> 00:00:47.063
&gt;&gt; Yeah, it's just got a break.

13
00:00:47.063 --> 00:00:51.425
I mean, even the linter knows what's gonna
happen, it literally dimmed out this code,

14
00:00:51.425 --> 00:00:53.413
it's like this code is never gonna run.

15
00:00:53.413 --> 00:00:54.597
What are you doing?

16
00:00:54.597 --> 00:00:56.776
This is gonna break everything, right?

17
00:00:56.776 --> 00:00:59.854
So if I go to terminal and
I type in node and I run that file,

18
00:00:59.854 --> 00:01:02.045
it literally just breaks immediately.

19
00:01:02.045 --> 00:01:05.309
Okay, your server,
because it runs a node is no different.

20
00:01:05.309 --> 00:01:06.830
It too will do that.

21
00:01:06.830 --> 00:01:10.467
It will just break whenever
there's an error, but

22
00:01:10.467 --> 00:01:14.538
Express knew that, so
this kind of saved us a little bit.

23
00:01:14.538 --> 00:01:22.792
What Express does, Is that any error
that is thrown inside of a handler or

24
00:01:22.792 --> 00:01:27.345
a middleware,
basically inside the framework.

25
00:01:27.345 --> 00:01:30.343
If it's a synchronous error, we'll talk
about asynchronous errors in a minute.

26
00:01:30.343 --> 00:01:34.930
If it's a synchronous error,
Express will catch that error for you,

27
00:01:34.930 --> 00:01:37.510
to prevent your server from crashing.

28
00:01:37.510 --> 00:01:41.501
And that's why on some errors
we'll get back that HTML page,

29
00:01:41.501 --> 00:01:45.742
that's Express setting that back
cuz it caught the error for us.

30
00:01:45.742 --> 00:01:48.113
And I was like, you didn't do a try catch.

31
00:01:48.113 --> 00:01:52.403
Don't worry, I got you, I did it for you,
and it sent back that HTML document.

32
00:01:52.403 --> 00:01:53.165
And we could test that.

33
00:01:53.165 --> 00:01:57.099
So if I go to, I'm gonna delete this file,
we don't need this file.

34
00:01:57.099 --> 00:02:01.035
I'm just gonna make, I don't know,
a quick little route right quick.

35
00:02:01.035 --> 00:02:03.826
So I'm gonna go to server.

36
00:02:03.826 --> 00:02:05.835
Actually, let's do it right
here on the get to slash.

37
00:02:05.835 --> 00:02:09.436
I'm just gonna throw an error, so

38
00:02:09.436 --> 00:02:14.412
I'm just gonna say,
throw new error, hello.

39
00:02:14.412 --> 00:02:19.307
So I'm gonna throw that error,
Start my server,

40
00:02:19.307 --> 00:02:22.168
and I'm gonna make a request to that.

41
00:02:26.004 --> 00:02:30.261
All right, so you can see right here,
I get this HTML back.

42
00:02:30.261 --> 00:02:31.077
This is Express.

43
00:02:31.077 --> 00:02:35.858
Express is like, if I would have put this
on a screen, it would show the stack

44
00:02:35.858 --> 00:02:39.612
trace and everything on
the screen in the browser, right?

45
00:02:39.612 --> 00:02:41.682
This is just raw HTML.

46
00:02:41.682 --> 00:02:43.077
I can actually go to the browser and
show you.

47
00:02:48.630 --> 00:02:49.899
All right, so you get this back.

48
00:02:49.899 --> 00:02:54.326
This is what Express is getting back,
but our server's still on,

49
00:02:54.326 --> 00:02:56.710
it didn't crash, still running.

50
00:02:56.710 --> 00:02:58.847
Express caught the error, it was like,

51
00:02:58.847 --> 00:03:03.084
it's a 500 error because you didn't catch
it, that means your server's messed up.

52
00:03:03.084 --> 00:03:07.071
So it's a 500, and then don't worry,
I'll tell you what it was.

53
00:03:07.071 --> 00:03:11.347
That's cool, but you probably don't wanna
be showing this to your users, okay.

54
00:03:11.347 --> 00:03:14.638
And second of all,
it might not have been a server error.

55
00:03:14.638 --> 00:03:16.715
It could have been a user error,
you just didn't catch it.

56
00:03:16.715 --> 00:03:18.184
And it could have been anything.

57
00:03:18.184 --> 00:03:21.797
It might not have been your fault,
but you didn't handle it.

58
00:03:21.797 --> 00:03:24.748
So Express handled it.

59
00:03:24.748 --> 00:03:28.074
We probably won't override this,
and we will, and we can.

60
00:03:28.074 --> 00:03:32.398
And the way that you do that,
is with their own error handler.

61
00:03:32.398 --> 00:03:37.092
So, basically,
you can create an error handler and

62
00:03:37.092 --> 00:03:41.253
Express the same way you
create a middleware,

63
00:03:41.253 --> 00:03:45.108
or a database handler, or route handler.

64
00:03:45.108 --> 00:03:48.073
The only difference is that it
has basically four arguments.

65
00:03:48.073 --> 00:03:52.094
Where's the first argument is
the error that was thrown, and

66
00:03:52.094 --> 00:03:54.887
everything else is what you already know.

67
00:03:54.887 --> 00:03:55.783
That's it.

68
00:03:55.783 --> 00:03:59.239
Other than that, it can do the same
thing any other handler can do,

69
00:03:59.239 --> 00:04:01.541
the same thing any other
middleware can do.

70
00:04:01.541 --> 00:04:04.480
The only difference is where you put it,

71
00:04:04.480 --> 00:04:09.932
because an error handler can't catch
an error until the error was thrown.

72
00:04:09.932 --> 00:04:13.919
So that means the error handler
has to come after all the routes.

73
00:04:13.919 --> 00:04:16.458
If you made an error handler before route,

74
00:04:16.458 --> 00:04:19.920
like you told app.use, hey,
here's my error handler.

75
00:04:19.920 --> 00:04:23.888
And then after that you made all your
routes, that handler would never catch

76
00:04:23.888 --> 00:04:27.180
the errors because it was
registered before your routes were.

77
00:04:27.180 --> 00:04:31.021
So Express would never bubble your
errors up to that error handler.

78
00:04:31.021 --> 00:04:35.813
So basically,
you need to make sure you register your

79
00:04:35.813 --> 00:04:40.391
error handlers at the bottom
of all your routes, so

80
00:04:40.391 --> 00:04:44.554
that they can be caught
by your error handler.

81
00:04:44.554 --> 00:04:45.807
And that looks like this.

82
00:04:45.807 --> 00:04:49.503
So if I were to go into the code and
I were to make an error handler for

83
00:04:49.503 --> 00:04:53.619
the thing that we just did, so you can
see I have this error being thrown.

84
00:04:53.619 --> 00:04:57.785
I'm gonna go down here,
underneath everything, and

85
00:04:57.785 --> 00:05:02.688
I'm gonna say app.use this error handler,
req, res, next.

86
00:05:06.756 --> 00:05:07.796
And I can log this error.

87
00:05:07.796 --> 00:05:14.930
I can say, log this error and
I'm just gonna say res.json,

88
00:05:14.930 --> 00:05:19.857
not jon, I don't know who jon is,
that jon,

89
00:05:19.857 --> 00:05:24.039
message, oops, there was an error.

90
00:05:24.039 --> 00:05:25.282
I could do that.

91
00:05:25.282 --> 00:05:28.978
I'm gonna log it so I can see it, but
then I'm gonna send this back to the user,

92
00:05:28.978 --> 00:05:30.491
something a little different.

93
00:05:30.491 --> 00:05:36.371
So now if I say, run that, And

94
00:05:36.371 --> 00:05:40.071
then go back here and refresh,
look, I get that custom message.

95
00:05:45.024 --> 00:05:48.996
And in the terminal I still logged it.

96
00:05:48.996 --> 00:05:53.270
So my error handler took over
from what Express already had.

97
00:05:57.511 --> 00:05:58.762
And you could do whatever
you want in here.

98
00:05:58.762 --> 00:06:00.497
You could do asynchronous things in here,
too.

99
00:06:00.497 --> 00:06:04.152
So this is a perfect place to add
instrumentation, error logging,

100
00:06:04.152 --> 00:06:06.986
error reporting,
all that stuff, it's perfect.

