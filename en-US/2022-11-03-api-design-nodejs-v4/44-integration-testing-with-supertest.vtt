WEBVTT

1
00:00:00.025 --> 00:00:02.440
Okay, let's talk about
integration testing.

2
00:00:03.626 --> 00:00:08.603
So integration testing, unlike a unit
test, integration test will test how

3
00:00:08.603 --> 00:00:13.428
an entire route works by actually making
a request like a client would, and

4
00:00:13.428 --> 00:00:18.656
then just observing what the API sent back
and making assertions on that result.

5
00:00:18.656 --> 00:00:23.140
So we can actually just use jest plus
supertest to run integration test.

6
00:00:23.140 --> 00:00:25.210
So here's an example of
what that will look like.

7
00:00:28.250 --> 00:00:30.210
And obviously,
I'm gonna walk you through how to do it.

8
00:00:30.210 --> 00:00:32.490
So I'm gonna go back to our code.

9
00:00:32.490 --> 00:00:35.682
I'm going to put something on
the root of the source folder.

10
00:00:35.682 --> 00:00:38.130
I'm gonna make a new
folder called test again.

11
00:00:39.660 --> 00:00:44.845
And I'm gonna test, I don't know,

12
00:00:44.845 --> 00:00:48.034
routes.test.tsr.

13
00:00:50.277 --> 00:00:51.173
There we go.

14
00:00:53.617 --> 00:00:56.430
In order to do integration tests,
there's a lot of ways you can do it.

15
00:00:56.430 --> 00:01:00.540
You can spin up the server yourself and
then just make an API call to the server.

16
00:01:00.540 --> 00:01:03.070
Or we can just import the express app and

17
00:01:03.070 --> 00:01:07.064
supertest will pretty much do
all that stuff for us in memory.

18
00:01:07.064 --> 00:01:09.360
So I'll just import our app.

19
00:01:09.360 --> 00:01:15.925
So I'll say import app from, I believe
it's in the server, that's our app.

20
00:01:15.925 --> 00:01:20.109
Then I'm gonna import

21
00:01:20.109 --> 00:01:24.956
supertest from supertest

22
00:01:26.844 --> 00:01:31.770
Then we'll write some tests, so I'm
gonna say describe, let's test out the,

23
00:01:35.053 --> 00:01:39.197
Let's test out this route right here
where you get something you just do get,

24
00:01:39.197 --> 00:01:40.421
let's test that out.

25
00:01:40.421 --> 00:01:43.164
Obviously, gonna change it so doesn't
break but we'll do that in a minute.

26
00:01:45.159 --> 00:01:50.229
So we'll describe a GET
to index like that.

27
00:01:52.959 --> 00:02:01.684
And then I'll say it should
send back some data.

28
00:02:01.684 --> 00:02:06.267
And this is gonna be async,
it blocks can be async,

29
00:02:06.267 --> 00:02:09.900
nd I'm gonna say results equals await.

30
00:02:12.410 --> 00:02:14.030
I need to make a request.

31
00:02:14.030 --> 00:02:17.375
So the way you can make a request or
I guess, yeah,

32
00:02:17.375 --> 00:02:19.360
I forgot to change the syntax.

33
00:02:19.360 --> 00:02:22.570
So you can just say like
supertest (app) and

34
00:02:22.570 --> 00:02:26.795
then you can start doing things
like changing the headers,

35
00:02:26.795 --> 00:02:31.291
sending up the body,
all different things you would wanna do.

36
00:02:31.291 --> 00:02:35.386
So in the case of like a get request,
we don't really have, for instance,

37
00:02:35.386 --> 00:02:37.921
we're not gonna be
sending up anything here.

38
00:02:37.921 --> 00:02:39.930
We're not gonna be sending any headers.

39
00:02:39.930 --> 00:02:41.480
But we do wanna make a get request.

40
00:02:41.480 --> 00:02:45.700
So what we'll do is we'll say,
.get request to slash like that.

41
00:02:47.020 --> 00:02:52.189
And then what we can say is okay,

42
00:02:52.189 --> 00:02:56.977
I expect res.body.message

43
00:02:56.977 --> 00:03:01.770
toBe hello, I could do that.

44
00:03:01.770 --> 00:03:07.285
So what I'm gonna do is
go back to our server,

45
00:03:07.285 --> 00:03:14.704
I'm gonna say res.json{message:
'hello' like that.

46
00:03:14.704 --> 00:03:17.560
And then now I'm gonna run this test.

47
00:03:20.751 --> 00:03:26.270
Okay, I still got the other one
[INAUDIBLE], let's not to the other one.

48
00:03:26.270 --> 00:03:29.490
Let me get the other one to pass,
so it's not in the way.

49
00:03:31.460 --> 00:03:33.520
There we go, okay, let's run the test.

50
00:03:35.240 --> 00:03:37.911
Okay, so
now you can see the second one ran and

51
00:03:37.911 --> 00:03:42.570
it passed because that's exactly what
the server sends back on that request.

52
00:03:42.570 --> 00:03:46.031
And you can see right there,
Morgan's logging, Morgan ran a log,

53
00:03:46.031 --> 00:03:48.400
Morgan which is our
middleware that we wrote,

54
00:03:48.400 --> 00:03:52.310
is actually logging that something did
a GET request to slash got to 200.

55
00:03:52.310 --> 00:03:56.800
So it did hit, it ran the handler and
everything like a request would.

56
00:03:56.800 --> 00:03:58.630
It's gonna run through all of it.

57
00:03:58.630 --> 00:04:03.434
And that passed and just to be sure,

58
00:04:03.434 --> 00:04:08.566
we can change that to something else.

59
00:04:10.746 --> 00:04:15.573
And we will get something else, expected,
hello, instead we got back nope.

60
00:04:17.716 --> 00:04:18.406
Easy as pie.

61
00:04:21.831 --> 00:04:23.234
Any questions on integration testing?

62
00:04:27.665 --> 00:04:28.430
Nope?

63
00:04:31.281 --> 00:04:37.402
Okay, everybody's good at
testing at this point?

64
00:04:37.402 --> 00:04:41.351
[LAUGH] yeah.

65
00:04:41.351 --> 00:04:46.479
&gt;&gt; [INAUDIBLE] know that's the Frontend
Masters website has a topic on testing, if

66
00:04:46.479 --> 00:04:51.928
you want to learn more just about testing
in JavaScript, there's a testing topic.

67
00:04:51.928 --> 00:04:53.762
&gt;&gt; Yeah, that is actually true.

68
00:04:53.762 --> 00:04:58.245
There's really good testing, there's a lot
of good testing stuff in Frontend Masters

69
00:04:58.245 --> 00:05:02.243
in general, but yeah, there's a testing
course in JavaScript that is pretty

70
00:05:02.243 --> 00:05:06.143
effective, that goes through way more
stuff than I'm talking about here.

71
00:05:06.143 --> 00:05:10.175
But for the most part on the back end,
I'm mostly just doing unit testing,

72
00:05:10.175 --> 00:05:11.458
integration testing.

73
00:05:11.458 --> 00:05:16.208
Yeah, Frontend is a little more difficult,
snapshotting, end to end, unit.

74
00:05:16.208 --> 00:05:20.717
I heard someone else do this other,
diffing, I'm like, man, this is so

75
00:05:20.717 --> 00:05:24.950
many different tests on the Frontend,
but Backend's pretty simple.

