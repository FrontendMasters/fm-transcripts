WEBVTT

1
00:00:00.050 --> 00:00:01.740
Hello, how's it going?

2
00:00:01.740 --> 00:00:08.342
I'm Scott Moss, and
welcome to API Design with Node.js V4.

3
00:00:08.342 --> 00:00:10.076
Now, V4 means we had a V3, but

4
00:00:10.076 --> 00:00:14.518
by no means is it necessary that you would
have had to taken V3 to take this course.

5
00:00:14.518 --> 00:00:18.791
It's just an upgraded version using some
of the latest things that have come out

6
00:00:18.791 --> 00:00:19.503
since then.

7
00:00:19.503 --> 00:00:23.369
And also because I've been using
a lot of these technologies for

8
00:00:23.369 --> 00:00:26.663
the last couple years and
I have different opinions and

9
00:00:26.663 --> 00:00:31.620
different techniques that I wanna share,
and that's what this course is about.

10
00:00:31.620 --> 00:00:35.558
So if you wanna go back and check out V3,
you can, there's different things there.

11
00:00:35.558 --> 00:00:40.236
But you don't need to actually have taken
that course to come back and use this one.

12
00:00:40.236 --> 00:00:42.699
And speaking of this course,

13
00:00:42.699 --> 00:00:47.734
this course is really all about
designing APIs in Node.js.

14
00:00:47.734 --> 00:00:50.345
And we're gonna be covering
a bunch of really cool stuff.

15
00:00:50.345 --> 00:00:54.419
So if you actually take a look at
the course website here, here's the URL.

16
00:00:54.419 --> 00:01:00.275
It's my github/API-design-v4,
you can land on this website.

17
00:01:00.275 --> 00:01:04.060
You're gonna find a bunch
of really cool stuff.

18
00:01:04.060 --> 00:01:06.016
And let's just go through the topics,

19
00:01:06.016 --> 00:01:09.108
the big broad strokes we're
gonna be covering in the course.

20
00:01:09.108 --> 00:01:12.903
So we're gonna go over just what
exactly we're doing in this course and

21
00:01:12.903 --> 00:01:16.076
some of the tools and
why we're gonna be using those tools.

22
00:01:16.076 --> 00:01:18.837
And what we're actually
gonna be building and

23
00:01:18.837 --> 00:01:23.595
why I prefer to build things when I teach
versus just learning things a la carte.

24
00:01:23.595 --> 00:01:26.630
We're gonna learn the basics
of APIs in Node.js.

25
00:01:26.630 --> 00:01:30.853
So building out a Vanilla API
without a framework.

26
00:01:30.853 --> 00:01:32.300
And then what is the anatomy of an API?

27
00:01:32.300 --> 00:01:36.275
What are the little bits that make up
an API and how do they work together?

28
00:01:36.275 --> 00:01:39.863
We're also gonna learn how to
use something called Express,

29
00:01:39.863 --> 00:01:41.934
which is a framework for Node.js.

30
00:01:41.934 --> 00:01:45.796
And everything about Express and
how easy it is to build using it.

31
00:01:45.796 --> 00:01:49.542
And then using something called Prisma,
which I don't wanna spoil for

32
00:01:49.542 --> 00:01:51.789
you cuz it's one of my favorite tools, but

33
00:01:51.789 --> 00:01:55.617
this is gonna allow us to interact
with databases on a really cool level.

34
00:01:55.617 --> 00:01:58.023
And yeah, I think you're gonna like it.

35
00:01:58.023 --> 00:02:00.419
And then getting into data modeling.

36
00:02:00.419 --> 00:02:01.973
So how to think about that.

37
00:02:01.973 --> 00:02:03.298
How to create models.

38
00:02:03.298 --> 00:02:07.423
How to design a schema based off
of a design, based off of an idea,

39
00:02:07.423 --> 00:02:09.748
based off of something in real life.

40
00:02:09.748 --> 00:02:12.716
How do you actually do that,
cuz that's necessary for an API.

41
00:02:12.716 --> 00:02:17.322
And then getting into things like routes
and middleware, because without those,

42
00:02:17.322 --> 00:02:19.178
our API would not be functional.

43
00:02:19.178 --> 00:02:21.002
We couldn't actually use it.

44
00:02:21.002 --> 00:02:24.758
So how do you design that in a way
where people can actually interact with

45
00:02:24.758 --> 00:02:25.327
your API?

46
00:02:25.327 --> 00:02:30.791
And what are the design patterns
that the community have chosen?

47
00:02:30.791 --> 00:02:34.273
Authorization, authentication,
identification, all those different things

48
00:02:34.273 --> 00:02:36.867
are technically challenging
when it comes to building APIs.

49
00:02:36.867 --> 00:02:41.596
And we're gonna break them down so they're
really simple and easy to understand, and

50
00:02:41.596 --> 00:02:43.880
you're gonna implement them yourself.

51
00:02:43.880 --> 00:02:47.569
Route handlers, the work horses of APIs,
the things that actually do the work and

52
00:02:47.569 --> 00:02:51.001
talk to the database and get you the
information that you need from a client.

53
00:02:51.001 --> 00:02:53.110
We're gonna build those and
walk through those and

54
00:02:53.110 --> 00:02:55.426
talk about different
trade-offs when building them.

55
00:02:55.426 --> 00:03:00.739
Error handlers,
there is no point of doing all these

56
00:03:00.739 --> 00:03:07.402
if our API is just gonna crush and
burn because it is so sensitive.

57
00:03:07.402 --> 00:03:10.202
So we need to make sure we
handle those errors and

58
00:03:10.202 --> 00:03:14.976
write code that is going to withstand user
input and different things like that.

59
00:03:14.976 --> 00:03:20.169
And we're also just gonna learn how
to make sure our API is flexible and

60
00:03:20.169 --> 00:03:25.627
dynamic, using things like environment
variables and a global config,

61
00:03:25.627 --> 00:03:30.929
so we can change things on the fly
without having to make a pull request.

62
00:03:30.929 --> 00:03:34.249
Keeping things fast is very important,
especially in something like JavaScript,

63
00:03:34.249 --> 00:03:35.851
which is a single-threaded language.

64
00:03:35.851 --> 00:03:39.638
So we're gonna learn about different
performance techniques that we can use

65
00:03:39.638 --> 00:03:42.200
to take advantage of to make
sure our API stays fast,

66
00:03:42.200 --> 00:03:43.785
just like it was from the start.

67
00:03:43.785 --> 00:03:46.072
And then, of course,
everybody's favorite, testing.

68
00:03:46.072 --> 00:03:47.809
We're gonna build all this cool stuff.

69
00:03:47.809 --> 00:03:50.568
We need to make sure that it
continues to work and impress

70
00:03:50.568 --> 00:03:54.569
all the people on our team by writing all
the tests and make sure those tests work.

71
00:03:54.569 --> 00:03:56.530
So we're gonna do that as well.

72
00:03:56.530 --> 00:04:00.430
And then finally, we're gonna deploy
this so you can actually use it,

73
00:04:00.430 --> 00:04:04.070
you can show the world, you can connect
an app to it if you want to for

74
00:04:04.070 --> 00:04:06.422
any further learning or things like that.

75
00:04:06.422 --> 00:04:09.990
Are you guys ready to learn how
to design some APIs with Node?

