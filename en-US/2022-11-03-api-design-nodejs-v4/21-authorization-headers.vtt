WEBVTT

1
00:00:00.000 --> 00:00:02.638
How do you actually get a JSON web token?

2
00:00:02.638 --> 00:00:04.517
Well, that's what's next.

3
00:00:04.517 --> 00:00:07.323
So now we need to figure out what that is.

4
00:00:07.323 --> 00:00:10.813
So just a recap of how all this worked,
right?

5
00:00:10.813 --> 00:00:17.581
Let's just walk through it one more time
before I show you how to connect the dots.

6
00:00:17.581 --> 00:00:23.701
This protect middleware,
Is looking on an authorization header.

7
00:00:23.701 --> 00:00:26.276
All right, and I don't know if I've
talk too much about headers, but

8
00:00:26.276 --> 00:00:29.460
a header is basically, so we know about
methods, GET, POST, PUT, PATCH, DELETE,

9
00:00:29.460 --> 00:00:30.483
OPTIONS, all that stuff.

10
00:00:30.483 --> 00:00:33.678
We know about routes that can be slash,
whatever you want.

11
00:00:33.678 --> 00:00:39.028
A header,
it's just another place in a request

12
00:00:39.028 --> 00:00:45.734
where you can add another option,
headers are key values.

13
00:00:45.734 --> 00:00:49.942
The key is the name of the header,
the value is the value of the header.

14
00:00:49.942 --> 00:00:54.605
There are tons of known headers,

15
00:00:54.605 --> 00:00:57.607
like cache control.

16
00:00:57.607 --> 00:00:59.782
Issuer, where did this request come from?

17
00:00:59.782 --> 00:01:02.373
It's just like the metadata
of the request.

18
00:01:02.373 --> 00:01:07.171
It's like in a HTML page, you have the
head tag where you put all the SEO stuff,

19
00:01:07.171 --> 00:01:10.675
that's what a header is for
a request, it's that part.

20
00:01:10.675 --> 00:01:15.024
It's not the part that's important, it's
not the actual data like the body tag is.

21
00:01:15.024 --> 00:01:18.520
It's the information about the page,
it's the meta information.

22
00:01:18.520 --> 00:01:22.682
It's like the SEO place of your request,
that's what headers are,

23
00:01:22.682 --> 00:01:25.352
they're just the metadata of the request.

24
00:01:25.352 --> 00:01:27.912
One of the ones are called authorization.

25
00:01:27.912 --> 00:01:30.369
People who make APIs have preferred for

26
00:01:30.369 --> 00:01:35.209
developers to pass along an authorization
value on the authorization header

27
00:01:35.209 --> 00:01:38.940
that they can use to determine whether or
not you can log in.

28
00:01:38.940 --> 00:01:40.850
You can also put it on the query string.

29
00:01:40.850 --> 00:01:42.309
You can add it to the body.

30
00:01:42.309 --> 00:01:42.910
You can do whatever you want.

31
00:01:42.910 --> 00:01:44.260
You're the developer making the API.

32
00:01:44.260 --> 00:01:45.870
But authorization's usually the standard.

33
00:01:45.870 --> 00:01:47.380
So that's what headers are.

34
00:01:47.380 --> 00:01:51.507
So we're looking for something that
exists on the authorization header.

35
00:01:51.507 --> 00:01:53.894
If it doesn't, get out of here.

36
00:01:53.894 --> 00:01:58.255
Okay, let's say it does exist,
but can I split it?

37
00:01:58.255 --> 00:02:00.234
And it's still something there.

38
00:02:00.234 --> 00:02:01.951
If not, get out of here, you're gone.

39
00:02:01.951 --> 00:02:03.217
That doesn't work.

40
00:02:03.217 --> 00:02:04.829
Okay, let's say you did get past that.

41
00:02:04.829 --> 00:02:09.127
Is the token that's there,
is it a valid JSON web token that was

42
00:02:09.127 --> 00:02:13.520
previously signed by the same
secret that we have created here?

43
00:02:13.520 --> 00:02:16.006
If not, you're toast, 401.

44
00:02:16.006 --> 00:02:19.448
If you are, cool, you must be real.

45
00:02:19.448 --> 00:02:23.733
Next, proceed to whatever
you were trying to do, go.

46
00:02:23.733 --> 00:02:24.743
That's what that's saying.

47
00:02:24.743 --> 00:02:29.279
So what we're gonna have to do next is
we're gonna have to allow users to be able

48
00:02:29.279 --> 00:02:31.979
to sign up, so
we're gonna create new users.

49
00:02:31.979 --> 00:02:35.236
And then we need to allow them to
sign in so they can come back.

50
00:02:35.236 --> 00:02:39.242
Which is just a way of saying, hey,
we're gonna make a user in the database,

51
00:02:39.242 --> 00:02:43.514
make sure they're unique or whatever,
they fulfill the database constraints.

52
00:02:43.514 --> 00:02:45.338
And then we've given them a JWT.

53
00:02:45.338 --> 00:02:46.441
That's how you know you were signed in.

54
00:02:46.441 --> 00:02:48.831
And then that's how you know you're
welcome to this club to access our API.

55
00:02:48.831 --> 00:02:50.576
We gave you a JSON web token.

56
00:02:50.576 --> 00:02:52.427
You can just keep it and
whenever you come back,

57
00:02:52.427 --> 00:02:55.310
you gotta give us your JSON web token,
and that's how we know who you are.

