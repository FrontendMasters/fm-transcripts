WEBVTT

1
00:00:00.050 --> 00:00:01.512
All right, we're gonna keep moving.

2
00:00:01.512 --> 00:00:03.993
So I got products here.

3
00:00:03.993 --> 00:00:08.086
Other ones I had were, so we have product.

4
00:00:08.086 --> 00:00:13.397
And then, I felt like products have
updates, so I made an update model.

5
00:00:13.397 --> 00:00:16.463
Users can have products and
products can have updates.

6
00:00:16.463 --> 00:00:17.625
So that's what we're gonna do.

7
00:00:17.625 --> 00:00:19.010
We're gonna make an update model.

8
00:00:19.010 --> 00:00:20.349
So let's do that.

9
00:00:20.349 --> 00:00:24.175
So I'm gonna go back into here,
I'm gonna say model,

10
00:00:24.175 --> 00:00:28.333
update like that,
you already know I'm copying that ID and

11
00:00:28.333 --> 00:00:32.342
that created ad, and
I'm pacing it here just like that.

12
00:00:32.342 --> 00:00:36.270
I'm also probably gonna add another
one here underneath created ad called

13
00:00:36.270 --> 00:00:40.570
updatedAt since you might be able to
update updates, I guess, that makes sense,

14
00:00:40.570 --> 00:00:43.149
and then we'll give that
one a date time as well.

15
00:00:46.794 --> 00:00:50.661
It doesn't have a default,
because I don't know when you updated it.

16
00:00:50.661 --> 00:00:52.721
So I'm not gonna give it a default.

17
00:00:52.721 --> 00:00:53.947
So we got that.

18
00:00:55.627 --> 00:00:57.307
First.

19
00:00:57.307 --> 00:01:01.819
Okay, so I think obviously they
have a title if we go back and

20
00:01:01.819 --> 00:01:03.365
look at the design.

21
00:01:03.365 --> 00:01:06.552
The title would be,
I got so many of these open,

22
00:01:06.552 --> 00:01:10.161
it would be like this thing,
that would be the title.

23
00:01:11.662 --> 00:01:16.282
So that's why I'm saying, so
one of these things is an update.

24
00:01:16.282 --> 00:01:18.049
And here's the title for the update.

25
00:01:22.175 --> 00:01:23.329
Well, I'm sorry.

26
00:01:23.329 --> 00:01:26.411
This whole thing is an update, and

27
00:01:26.411 --> 00:01:31.982
one of these things is The title for it.

28
00:01:34.782 --> 00:01:39.623
So we have a title,
that's gonna be String, and then we have

29
00:01:42.400 --> 00:01:45.722
Body which is also String.

30
00:01:45.722 --> 00:01:51.093
We have status which is, if you go back
and look at design, it's this thing.

31
00:01:51.093 --> 00:01:54.441
So like in-progress, things like that.

32
00:01:54.441 --> 00:01:58.899
Because there's gonna be finite number of
statuses versus bunch of random statuses.

33
00:01:58.899 --> 00:02:02.694
I'm gonna use something called enum,
so I've never heard of enum before.

34
00:02:02.694 --> 00:02:05.563
An enum is basically just
like a bunch of constants.

35
00:02:05.563 --> 00:02:08.721
That's basically what it is,
it's a bag of constants.

36
00:02:08.721 --> 00:02:14.481
So I'm gonna say I have an enum
called UPDATE_STATUSES and

37
00:02:14.481 --> 00:02:20.830
I'm gonna make some,
I'm gonna make one called IN_PROGRESS.

38
00:02:20.830 --> 00:02:26.894
I'm gonna make another one called,
I don't know, SHIPPED, another one called

39
00:02:29.351 --> 00:02:34.095
DEPRECATED, And, yeah, and you can make as

40
00:02:34.095 --> 00:02:38.401
many status as you want, I probably
have something different on the site.

41
00:02:38.401 --> 00:02:42.729
But so we got the UPDATE_STATUSES and
then for status down here,

42
00:02:42.729 --> 00:02:45.806
I can say, your type UPDATE_STATUSES.

43
00:02:45.806 --> 00:02:48.865
I guess, I should just call it
UPDATE_STATUS, not statuses.

44
00:02:52.003 --> 00:02:54.993
And then I can give it
a default of one of them.

45
00:02:54.993 --> 00:02:57.301
I'll say by default,
they're all in progress,

46
00:03:06.555 --> 00:03:07.787
Okay?

47
00:03:11.883 --> 00:03:14.641
And then I have some other things
down here like version String,

48
00:03:14.641 --> 00:03:16.338
things like that, so we can add those.

49
00:03:16.338 --> 00:03:21.437
So, reason I put versions of to design
that there was some updates cell

50
00:03:21.437 --> 00:03:26.632
like a version release thing here so
I was like we should track the version.

51
00:03:26.632 --> 00:03:31.097
So that's what I'm tracking,
the release there, so but it's optional,

52
00:03:31.097 --> 00:03:36.355
it's not all of them have it, so I can say
version, it's a string, but it's optional.

53
00:03:36.355 --> 00:03:39.844
By default every field is required
unless you put a question mark on it.

54
00:03:42.846 --> 00:03:48.256
So optional, and then asset because
some updates have an asset.

55
00:03:48.256 --> 00:03:49.679
This thing has a GIF.

56
00:03:49.679 --> 00:03:52.569
This one also has a GIF.

57
00:03:52.569 --> 00:03:55.311
I guess all these have assets but
maybe you don't have one for one of them.

58
00:03:55.311 --> 00:03:59.813
So, also gonna make that a String cuz
it'll be a URL and it's also optional.

59
00:04:02.231 --> 00:04:06.837
So you can kind of see just like how I'm
going through the design like tryna think

60
00:04:06.837 --> 00:04:08.566
about how to model this data.

61
00:04:08.566 --> 00:04:11.431
Is actually how I do it in real life,
I literally do it this way.

62
00:04:11.431 --> 00:04:12.428
I don't know any other way.

63
00:04:12.428 --> 00:04:17.708
If you have another way,
I'd be super interested in your process

64
00:04:17.708 --> 00:04:23.360
cuz I have to do it this way, Okay?

65
00:04:23.360 --> 00:04:25.179
And then now an update
belongs to a product, so

66
00:04:25.179 --> 00:04:26.591
we got to set up that relationship.

67
00:04:26.591 --> 00:04:27.472
So let's do that.

68
00:04:27.472 --> 00:04:31.158
So we'll have productId.

69
00:04:31.158 --> 00:04:34.955
That's gonna be type String,
cuz a productId is a String, and

70
00:04:34.955 --> 00:04:37.690
that's what we're gonna reference there.

71
00:04:37.690 --> 00:04:40.054
And then we have product.

72
00:04:40.054 --> 00:04:46.063
And I'm gonna say that's type product And

73
00:04:46.063 --> 00:04:51.271
relation of the fields to productId,

74
00:04:51.271 --> 00:04:55.348
who references Id like that.

75
00:04:59.947 --> 00:05:04.683
So product is type product, has a
relationship for the productId field here

76
00:05:04.683 --> 00:05:08.685
on the updates side and
it references the id on the product side.

77
00:05:11.734 --> 00:05:13.366
And we get this squiggly.

78
00:05:13.366 --> 00:05:17.183
We can go back to our terminal,
we can run npx prisma format.

79
00:05:17.183 --> 00:05:22.949
And just like that, if you scroll up to
our products, we get this update here.

80
00:05:22.949 --> 00:05:26.951
I don't want it to be called capital
update, and I want to be plural, so

81
00:05:26.951 --> 00:05:29.103
I'm gonna call it updates like that.

82
00:05:29.103 --> 00:05:33.074
And then I think I had one more,
so I think I just confused myself.

83
00:05:33.074 --> 00:05:37.577
The update is actually this whole thing,
but these little things,

84
00:05:37.577 --> 00:05:39.878
I think I call them update points.

85
00:05:39.878 --> 00:05:41.694
They're just like little points and
update.

86
00:05:41.694 --> 00:05:44.792
I'm not good at naming stuff,
so, but I call it update points.

87
00:05:44.792 --> 00:05:47.457
So that's what we're gonna do,
we're gonna call these update points.

88
00:05:47.457 --> 00:05:48.687
And this whole thing is an update.

89
00:05:48.687 --> 00:05:50.092
So let's do that.

90
00:05:50.092 --> 00:05:54.128
So I'll say model UpdatePoint.

91
00:05:56.104 --> 00:06:00.221
And I'm getting all three of these,
id, createdAt, updatedAt,

92
00:06:00.221 --> 00:06:01.677
putting them in there.

93
00:06:03.519 --> 00:06:09.987
And if I look at an UpdatePoint, it has
this thing and then this thing, right?

94
00:06:09.987 --> 00:06:11.373
So what did I call them here?

95
00:06:11.373 --> 00:06:13.915
I think I called them,
they got name and description.

96
00:06:13.915 --> 00:06:15.754
So let's do that.

97
00:06:15.754 --> 00:06:19.516
So name is String.

98
00:06:19.516 --> 00:06:21.889
We're gonna give it a length here.

99
00:06:27.515 --> 00:06:31.320
And then description is also String but

100
00:06:31.320 --> 00:06:36.058
it doesn't have a length
cuz it could be longer.

101
00:06:36.058 --> 00:06:40.180
So we got that UpdatePoint.

102
00:06:40.180 --> 00:06:44.187
And because UpdatePoint belong to updates,
we have to set up that relationship.

103
00:06:44.187 --> 00:06:48.402
So I'll say updateId is type String and

104
00:06:48.402 --> 00:06:55.042
it belongs to an update whose type
is update with a capital U and

105
00:06:55.042 --> 00:07:00.279
I'm gonna set up a relationship
on the fields for

106
00:07:00.279 --> 00:07:05.664
updateId that references
the id field on update.

107
00:07:15.715 --> 00:07:20.304
I'm just gonna run my thing again
cuz it's just so nice to me.

108
00:07:20.304 --> 00:07:26.579
And, If I go back to my update,
you can see it at UpdatePoint,

109
00:07:26.579 --> 00:07:31.856
lowercase that and called it points
instead and there we go, we have a schema.

110
00:07:31.856 --> 00:07:35.858
Any questions on this or just thoughts,
opinions on prisma so far for

111
00:07:35.858 --> 00:07:38.695
anyone who's ever
interacted with a database.

112
00:07:41.894 --> 00:07:42.585
&gt;&gt; I love it.

113
00:07:42.585 --> 00:07:43.177
&gt;&gt; You love it?

114
00:07:43.177 --> 00:07:47.441
&gt;&gt; Yeah, my bootcamp is teaching
document base like MongoDB but

115
00:07:47.441 --> 00:07:51.213
I jumped ahead for
my big project I'm building, and so

116
00:07:51.213 --> 00:07:55.814
I've been teaching myself PostgreSQL and
Prisma has been major.

117
00:07:55.814 --> 00:07:56.843
&gt;&gt; Love it.

118
00:07:56.843 --> 00:07:59.880
I love that, yeah.

119
00:07:59.880 --> 00:08:04.725
Yeah, it does make working with
relational databases less daunting.

120
00:08:04.725 --> 00:08:05.532
That's for sure.

121
00:08:05.532 --> 00:08:08.619
I kinda briefly looked
at their source code.

122
00:08:08.619 --> 00:08:12.414
So they have like a translation
layer that basically applies to,

123
00:08:12.414 --> 00:08:15.662
they have to write a custom adapter for
every database.

124
00:08:15.662 --> 00:08:18.355
And their translation layer
does the communication of that.

125
00:08:18.355 --> 00:08:22.810
So it's like they can't just like, we
can support any database like no someone

126
00:08:22.810 --> 00:08:26.576
mainly has to go in and write that
translation layer and that adapter for

127
00:08:26.576 --> 00:08:29.943
that specific database and,
I mean, I've name the mongo1.

128
00:08:29.943 --> 00:08:33.408
It took them months, took them
a long time to make so I wouldn't.

129
00:08:33.408 --> 00:08:37.718
I think what they did was they went and
hired some of the best database experts in

130
00:08:37.718 --> 00:08:41.982
the world who worked on these databases,
and had them write those adapters.

131
00:08:41.982 --> 00:08:44.440
Because I saw at one point, they were
working with some of those folks.

132
00:08:44.440 --> 00:08:49.363
So yeah, it seems like a very tedious
thing, but yeah, it's not like

133
00:08:49.363 --> 00:08:54.295
they're definitely considering
best practices for each database.

134
00:08:54.295 --> 00:08:58.196
Because it's going a database at a time
and it's not so much like, just we're

135
00:08:58.196 --> 00:09:02.128
gonna spray and pray every database and
you're all going and get treated the same.

136
00:09:02.128 --> 00:09:05.329
Because even in our documentation,
it'll be things like, for instance,

137
00:09:05.329 --> 00:09:08.781
we're gonna get to migrations, you don't
need migrations on mongo, so you just

138
00:09:08.781 --> 00:09:12.751
don't even run them, right, there's like,
don't even do on it doesn't make sense.

139
00:09:12.751 --> 00:09:16.312
Or things like IDs, you won't need
stuff like this in a mongo1, so

140
00:09:16.312 --> 00:09:20.435
it's like you don't need these at all,
so yeah, they've considered that,

141
00:09:20.435 --> 00:09:22.389
and I think they've done a good job.

