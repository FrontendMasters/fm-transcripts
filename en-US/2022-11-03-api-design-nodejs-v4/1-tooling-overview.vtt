WEBVTT

1
00:00:00.000 --> 00:00:02.971
So now that we know what we're
gonna be doing in this course,

2
00:00:02.971 --> 00:00:05.906
let's talk about what are we
gonna be using in this course.

3
00:00:05.906 --> 00:00:10.141
So if you follow me into the Tools section
here, we got a couple of different areas

4
00:00:10.141 --> 00:00:14.646
that we have to cover, and then what tools
we're gonna use in those different areas.

5
00:00:14.646 --> 00:00:18.496
So when it comes to the runtime,
just like the title says,

6
00:00:18.496 --> 00:00:20.867
this is gonna be a Node.js course.

7
00:00:20.867 --> 00:00:24.735
Node.js is a runtime, it's not a language.

8
00:00:24.735 --> 00:00:26.421
JavaScript is a language,

9
00:00:26.421 --> 00:00:30.320
Node.js is an environment that
allows you to run JavaScript.

10
00:00:30.320 --> 00:00:32.542
And we that's exactly what we're gonna do.

11
00:00:32.542 --> 00:00:35.784
It's basically an environment outside
of the browser that we can use in

12
00:00:35.784 --> 00:00:36.819
an operating system.

13
00:00:36.819 --> 00:00:39.759
And it behaves very similar to
the environment that's in the browser,

14
00:00:39.759 --> 00:00:41.670
just different globals and
things like that.

15
00:00:41.670 --> 00:00:44.312
And the reason I chose
this one is because, one,

16
00:00:44.312 --> 00:00:46.642
it's the one I'm most comfortable with.

17
00:00:46.642 --> 00:00:50.518
Two, if you've ever done any front end
development work with any modern stack,

18
00:00:50.518 --> 00:00:51.660
you already used node.

19
00:00:51.660 --> 00:00:52.945
Believe it or not,
you already know how to use it.

20
00:00:52.945 --> 00:00:55.310
You ever did a import,
you ever did a require,

21
00:00:55.310 --> 00:00:58.950
you ever worked with a build system
before, all of that is Node.js, so

22
00:00:58.950 --> 00:01:02.434
you're already using it, so
we're just piggy-backing on that.

23
00:01:02.434 --> 00:01:07.969
And then, three, it just has really
a cool ecosystem that has pretty much any

24
00:01:07.969 --> 00:01:13.263
package you can think of that's out
there which helps us develop faster.

25
00:01:13.263 --> 00:01:14.908
And when it comes to frameworks,

26
00:01:14.908 --> 00:01:18.683
Node.js is the environment just like
the browser might be an environment.

27
00:01:18.683 --> 00:01:22.048
But we would probably wanna use a
framework to build a server just like you

28
00:01:22.048 --> 00:01:24.657
would probably use a framework
in a browser like React.

29
00:01:24.657 --> 00:01:28.022
So we're gonna use the most
chosen champion framework for

30
00:01:28.022 --> 00:01:32.360
Node js when it comes to building API's,
and that's gonna be Express js.

31
00:01:32.360 --> 00:01:36.946
Express was with Node from the beginning,
it almost feels like they came together,

32
00:01:36.946 --> 00:01:39.288
and everyone has been using it ever since.

33
00:01:39.288 --> 00:01:43.575
It has the biggest community when it
comes to API frameworks with Node js.

34
00:01:43.575 --> 00:01:47.639
And pretty much everything is a derivative
or inspired by Express at this point.

35
00:01:47.639 --> 00:01:49.308
So we're gonna using Express for
those reasons.

36
00:01:49.308 --> 00:01:51.926
And also, again, it's the thing
that I'm most comfortable with.

37
00:01:51.926 --> 00:01:54.020
I used Express on the previous
versions of this course.

38
00:01:54.020 --> 00:01:56.650
And to this day,
I keep learning new things.

39
00:01:56.650 --> 00:01:58.702
So I'm happy to share those with you.

40
00:02:00.674 --> 00:02:03.893
Our API wouldn't be that useful if
it didn't have a database that it

41
00:02:03.893 --> 00:02:04.803
interacted with.

42
00:02:04.803 --> 00:02:09.658
So this is no different in this course,
we are also going to use a database.

43
00:02:09.658 --> 00:02:12.213
And in this course, I decided to
do something a little different.

44
00:02:12.213 --> 00:02:14.796
I decided to use Postgres,
which traditionally for

45
00:02:14.796 --> 00:02:17.096
the other version of the course,
I use Mongo.

46
00:02:17.096 --> 00:02:21.250
But for the last year or so, I've actually
been using tons of SQL and Postgres,

47
00:02:21.250 --> 00:02:25.034
mostly due to a lot of innovation in
that space when it comes to serverless

48
00:02:25.034 --> 00:02:25.791
technology.

49
00:02:25.791 --> 00:02:28.725
So my hands have just been so
dirty with Postgres, and

50
00:02:28.725 --> 00:02:30.823
I've kinda just fell in love with it.

51
00:02:30.823 --> 00:02:32.568
So we'll be using Postgres for that,

52
00:02:32.568 --> 00:02:36.275
simply because I feel really comfortable
with it right now and kinda wanted to mix

53
00:02:36.275 --> 00:02:39.460
it up from the traditional Mongo
stuff that I've taught in the past.

54
00:02:39.460 --> 00:02:41.130
But also, it's one of the most popular,

55
00:02:41.130 --> 00:02:43.005
if not the most popular
database in the world.

56
00:02:43.005 --> 00:02:45.669
So having knowledge of
working with Postgres,

57
00:02:45.669 --> 00:02:50.139
building an API is only gonna help you
in your career, so let's do it together.

58
00:02:51.349 --> 00:02:55.106
And then lastly,
when it comes to hosting, there's just so

59
00:02:55.106 --> 00:03:00.041
many different platforms to host an API
on, one less now than before, Heroku,

60
00:03:00.041 --> 00:03:02.415
but there's still so many out there.

61
00:03:02.415 --> 00:03:05.013
And when it comes down to choosing one,

62
00:03:05.013 --> 00:03:09.268
there's just a plethora of
different variables, like costs,

63
00:03:09.268 --> 00:03:14.407
user experience, interactivity,
there's so many things that go into it.

64
00:03:14.407 --> 00:03:19.168
So I'm really excited about talking about
hosting, because I chose a platform called

65
00:03:19.168 --> 00:03:21.982
render.com, which is
relatively new platform.

66
00:03:21.982 --> 00:03:26.077
It kinda gives me those early Heroku
vibes, but for the more modern stack,

67
00:03:26.077 --> 00:03:29.735
super easy to deploy to,
very friendly for Node.js developers.

68
00:03:29.735 --> 00:03:32.489
So we'll be using that to deploy our API,
and

69
00:03:32.489 --> 00:03:36.055
we'll probably talk about some
other ones along the way.

70
00:03:36.055 --> 00:03:39.766
All right, so like I said,
I like to learn by building things.

71
00:03:39.766 --> 00:03:41.384
I like to teach by building things.

72
00:03:41.384 --> 00:03:43.963
So in this course, we're actually
gonna be building something.

73
00:03:43.963 --> 00:03:48.317
We're gonna be building this imaginary
change log app for users to be able to

74
00:03:48.317 --> 00:03:52.821
update their users on all the different
features and things in their product.

75
00:03:52.821 --> 00:03:54.347
And before we dive into that,

76
00:03:54.347 --> 00:03:58.328
I really wanted to take a quick note on
a decision that I made with this course.

77
00:03:58.328 --> 00:04:03.593
So we're gonna be using ES6 modules in
this course, which, if you've ever built

78
00:04:03.593 --> 00:04:08.652
anything in React, you use the imports and
the modules and all the fancy stuff.

79
00:04:08.652 --> 00:04:11.231
We're gonna be using that
along with TypeScript.

80
00:04:11.231 --> 00:04:14.165
So if you haven't used that,
that's totally fine.

81
00:04:14.165 --> 00:04:17.962
If you have experience with CommonJS,
which is the required stuff,

82
00:04:17.962 --> 00:04:20.724
then you'll fit right in,
it's not a big worry.

83
00:04:20.724 --> 00:04:24.292
But it's gonna start off using
require until we add the TypeScript.

84
00:04:24.292 --> 00:04:27.240
I don't wanna throw you off when
you see me do require at first,

85
00:04:27.240 --> 00:04:29.913
because we're actually gonna
switch over and use ES6,

86
00:04:29.913 --> 00:04:32.103
I just didn't wanna have
to set that up twice.

87
00:04:32.103 --> 00:04:33.598
So I just wanted to put that out there.

