WEBVTT

1
00:00:00.000 --> 00:00:03.189
So what we're gonna do is we're gonna
get ready to deploy this thing,

2
00:00:03.189 --> 00:00:06.880
because what's the point of making an API
if you're not going to go live with it.

3
00:00:06.880 --> 00:00:09.944
So let's get ready to do that.

4
00:00:09.944 --> 00:00:14.046
Some of the things that we
need to do to deploy this API

5
00:00:14.046 --> 00:00:17.042
are actually not a lot surprisingly.

6
00:00:17.042 --> 00:00:19.190
We actually did all the hard work already.

7
00:00:19.190 --> 00:00:22.384
I knew that I was going to deploy this so
I made sure that we did things that

8
00:00:22.384 --> 00:00:24.685
were going to be simple when
it came time to deploy.

9
00:00:24.685 --> 00:00:26.306
There's only a few things we need to do.

10
00:00:26.306 --> 00:00:29.370
But let's think about
what it means to deploy.

11
00:00:29.370 --> 00:00:32.870
So what does it actually mean to take
an API from your computer and deploy it?

12
00:00:32.870 --> 00:00:36.552
Well, your computer,
which is technically a server and

13
00:00:36.552 --> 00:00:39.660
is probably connected to the Internet.

14
00:00:39.660 --> 00:00:42.340
So far we've only been running
on local hosts, right?

15
00:00:42.340 --> 00:00:47.120
Like your app is running on local host,
which is your computer.

16
00:00:47.120 --> 00:00:50.501
So when you make a request to the local
host, you're just going out and

17
00:00:50.501 --> 00:00:53.670
coming back and
making a request to your own computer.

18
00:00:53.670 --> 00:00:56.190
That's cool and everything but
the rest of the world can't see this.

19
00:00:56.190 --> 00:01:00.025
If you have some website, if you change
log app that you're probably going to make

20
00:01:00.025 --> 00:01:01.910
is gonna be on host on Netlify.

21
00:01:01.910 --> 00:01:03.550
How is he going to access local host?

22
00:01:03.550 --> 00:01:04.130
It can't.

23
00:01:04.130 --> 00:01:07.400
It's a private network that's
bound to your computer.

24
00:01:07.400 --> 00:01:10.110
We have to get it to the internet and
give it a public address.

25
00:01:10.110 --> 00:01:13.866
We have to give it a mailing address
just like a house would have.

26
00:01:13.866 --> 00:01:17.441
Only way to do that is to put it
on a computer that's always on and

27
00:01:17.441 --> 00:01:21.353
strong enough to handle the request
that you are expecting to have and

28
00:01:21.353 --> 00:01:25.873
it's connected to the internet,
hopefully very, very fast internet that's

29
00:01:25.873 --> 00:01:30.770
plugged in with an ethernet cable on that
Wi-Fi, okay, do you want to go buy those?

30
00:01:30.770 --> 00:01:32.920
Do you wanna go buy those servers and
put them in your house?

31
00:01:32.920 --> 00:01:34.050
Probably not.

32
00:01:34.050 --> 00:01:35.950
So what you do is you rent servers online.

33
00:01:36.970 --> 00:01:42.647
That's is what a hosting provider is,
is you renting someone's server or

34
00:01:42.647 --> 00:01:48.070
a space on their server to put your
files on so they can always be online.

35
00:01:49.310 --> 00:01:51.300
That's what it means to deploy.

36
00:01:51.300 --> 00:01:54.387
Taking my files,
I'm taking them to the servers and

37
00:01:54.387 --> 00:01:56.854
I'm gonna pay them a monthly fee of in it.

38
00:01:56.854 --> 00:02:00.643
The stronger the computer you want,
the more of the computer you want,

39
00:02:00.643 --> 00:02:04.306
the type of the computer you want
determines how much money you pay and

40
00:02:04.306 --> 00:02:05.909
the resources that you need.

41
00:02:07.599 --> 00:02:11.240
So when you hear someone say we wanna
deploy, we wanna go to production.

42
00:02:11.240 --> 00:02:12.280
That's what they're talking about.

43
00:02:12.280 --> 00:02:14.890
They want the world to see it.

44
00:02:14.890 --> 00:02:18.639
They wanna get it off their machine and
connected to the internet and

45
00:02:18.639 --> 00:02:22.240
most likely pay someone to
rent their server space.

46
00:02:22.240 --> 00:02:26.461
Unless you're, just badass and you have
your own server rack at home where

47
00:02:26.461 --> 00:02:30.220
you host all your things like
that's cool too, but probably not.

48
00:02:32.540 --> 00:02:36.640
Okay, so
we're gonna be deploying on render.com.

49
00:02:36.640 --> 00:02:39.890
So definitely head over there
when you can and make an account.

50
00:02:41.190 --> 00:02:45.879
In the meantime we only need to
make some small changes here.

51
00:02:45.879 --> 00:02:50.342
One thing is during development
we've been using ts-node which

52
00:02:50.342 --> 00:02:54.962
runs our app in memory, but I mean,
yeah, you could run ts-node in

53
00:02:54.962 --> 00:02:59.445
production although there's
really no good reason to, right?

54
00:02:59.445 --> 00:03:04.394
There's no good reason to have that memory
overhead of some process keeping track of

55
00:03:04.394 --> 00:03:09.590
cache files, just because you didn't
feel like building it ahead of time.

56
00:03:09.590 --> 00:03:11.460
So we're gonna build our
project ahead of time.

57
00:03:11.460 --> 00:03:12.419
So when I say build,

58
00:03:12.419 --> 00:03:16.330
we're gonna convert it from TypeScript
to regular JavaScript ahead of time.

59
00:03:16.330 --> 00:03:18.670
And then we're gonna take
those JavaScript files and

60
00:03:18.670 --> 00:03:22.060
that's what's gonna run on hipbone
render.com not the TypeScript files.

61
00:03:23.460 --> 00:03:27.190
Okay, and we're gonna do that
just by making two commands.

62
00:03:27.190 --> 00:03:30.722
So you can copy these commands
that I have in the scripts,

63
00:03:30.722 --> 00:03:36.020
you can go to your package json and
you can add those into your scripts.

64
00:03:36.020 --> 00:03:39.740
And the build script does
exactly what it sounds like.

65
00:03:39.740 --> 00:03:44.708
It's going to build our app which is
going to transform it from TypeScript

66
00:03:44.708 --> 00:03:45.836
to JavaScript.

67
00:03:45.836 --> 00:03:50.386
And then start command is going to start
our server just like we've been doing

68
00:03:50.386 --> 00:03:54.448
with dev, but not from the index.ts,
instead from the index.js,

69
00:03:54.448 --> 00:03:56.287
the JavaScript version of it.

70
00:03:58.525 --> 00:03:59.494
Okay.

71
00:04:06.828 --> 00:04:11.478
And one last thing we need to do is we
need to make one small adjustment to our

72
00:04:11.478 --> 00:04:12.229
tsconfig.

73
00:04:12.229 --> 00:04:13.565
So I actually just have that here.

74
00:04:13.565 --> 00:04:15.290
You can just copy this tsconfig.

75
00:04:15.290 --> 00:04:17.521
We have to add an include.

76
00:04:17.521 --> 00:04:23.042
We didn't have to add that before
because we're using ts-node,

77
00:04:23.042 --> 00:04:27.290
but now that we're using
tsc to actually compile.

78
00:04:27.290 --> 00:04:30.943
The way tsc which is
just like TypeScript CLI,

79
00:04:30.943 --> 00:04:35.530
the way that works is,
if you do -p which I think stands for

80
00:04:35.530 --> 00:04:40.040
project, and point it to a file,
a configuration file.

81
00:04:40.040 --> 00:04:43.353
It doesn't know what TypeScript
files you want it to

82
00:04:43.353 --> 00:04:47.770
compile unless you tell it to
explicitly saying the clue.

83
00:04:47.770 --> 00:04:52.725
The alternative is you don't point it
to a tsconfig and you just say, Yeah,

84
00:04:52.725 --> 00:04:56.540
just go here, source index.ts and
go compile that.

85
00:04:56.540 --> 00:05:00.358
But then you don't get to customize the
compiler to do all these different things

86
00:05:00.358 --> 00:05:03.400
because it'll just ignore this whole file.

87
00:05:03.400 --> 00:05:05.682
So either you can use this file and
use include,

88
00:05:05.682 --> 00:05:09.190
or you can't use this file at all and
you can just point to a file.

89
00:05:09.190 --> 00:05:10.090
Yeah, we need that file.

90
00:05:10.090 --> 00:05:14.600
So we're gonna point it there and
we're going to put an include.

91
00:05:14.600 --> 00:05:20.258
And our includes, it's just saying
go here, get everything in source.

92
00:05:25.924 --> 00:05:30.091
Okay, so once you have that,
let's try to build it.

93
00:05:30.091 --> 00:05:32.484
So we should be able to say npm run build,
and

94
00:05:32.484 --> 00:05:35.225
if everything went right
it should not be broken.

95
00:05:37.567 --> 00:05:39.940
Okay, nothing is screaming at me.

96
00:05:39.940 --> 00:05:43.785
So I hope all that means it built and
you can check by going to the top and

97
00:05:43.785 --> 00:05:45.059
seeing a dist folder.

98
00:05:46.780 --> 00:05:50.710
That dist folder should just have a ton of
JavaScript and JavaScript maps and stuff.

99
00:05:50.710 --> 00:05:51.210
Yes.

100
00:05:52.520 --> 00:05:54.330
&gt;&gt; I see Prisma is in
the dev dependencies.

101
00:05:54.330 --> 00:05:57.990
How will it compile
the handlers on production?

102
00:05:57.990 --> 00:05:58.670
&gt;&gt; So, a great question.

103
00:05:58.670 --> 00:06:04.790
So Prisma is not the same
thing as @prisma/client.

104
00:06:04.790 --> 00:06:09.806
Prisma is a CLI, which is only used for
Dev dependency things, like migrate,

105
00:06:09.806 --> 00:06:14.950
anything you type in the terminal
that's what that's used for.

106
00:06:14.950 --> 00:06:17.930
The Prisma client that we
import is a different package.

107
00:06:19.100 --> 00:06:24.910
You can find that in the package json
under @prisma/client that is a dependency,

108
00:06:24.910 --> 00:06:26.490
not a dev dependency.

109
00:06:26.490 --> 00:06:27.254
So we're good there.

110
00:06:31.564 --> 00:06:35.967
Also render.com is not like Heroku
where it's like Heroku made a bunch of

111
00:06:35.967 --> 00:06:38.960
assumptions around your
environment variable.

112
00:06:38.960 --> 00:06:41.785
It was like if you're in development
environment variable, or

113
00:06:41.785 --> 00:06:44.271
I'm sorry if you're in
production environment variable,

114
00:06:44.271 --> 00:06:46.970
we won't install your dev
dependencies Render is not like that.

115
00:06:46.970 --> 00:06:49.114
Render actually doesn't
even install anything for

116
00:06:49.114 --> 00:06:52.420
you at all you have to tell it to install,
so it's pretty raw.

117
00:06:52.420 --> 00:06:55.880
But also, yeah it makes sense because
that's what you would do on your computer.

118
00:06:55.880 --> 00:06:59.352
So, even if it was a Dev dependency
we could still install it and

119
00:06:59.352 --> 00:07:02.380
use it if we needed to,
which we don't, but we could.

