WEBVTT

1
00:00:00.270 --> 00:00:01.950
&gt;&gt; Lukas Ruebbelke: But
in our application,

2
00:00:01.950 --> 00:00:04.550
you'll notice that nothing's there yet.

3
00:00:04.550 --> 00:00:07.860
So let's go ahead and
generate some components.

4
00:00:07.860 --> 00:00:09.190
So we're kind of shifting gears now,

5
00:00:09.190 --> 00:00:14.100
and we're going into our
dashboard application.

6
00:00:14.100 --> 00:00:16.320
Now because it is the default application,

7
00:00:16.320 --> 00:00:19.529
I'm not having to prefix this
with --project = dashboard.

8
00:00:20.580 --> 00:00:24.140
But, if you had multiple
applications you would need

9
00:00:24.140 --> 00:00:26.410
to specify that this is actually
where I want this to go.

10
00:00:26.410 --> 00:00:29.220
But, because we have one
it just defaults to it.

11
00:00:29.220 --> 00:00:34.800
So, ng g c, or
actually if you're generating,

12
00:00:34.800 --> 00:00:38.980
and I recommend, if you're generating
a feature kind of a component,

13
00:00:38.980 --> 00:00:41.700
a top-level component,
that's going to hold additional things?

14
00:00:41.700 --> 00:00:47.260
Typically, in my mind, I think about,
are you going to route to this component?

15
00:00:47.260 --> 00:00:53.040
Is this particular feature, is it distinct
enough that it warrants its own route?

16
00:00:53.040 --> 00:00:55.640
I think of that as kind
of a feature component.

17
00:00:55.640 --> 00:01:01.480
And so when I do that,
I would generate a module first and

18
00:01:01.480 --> 00:01:04.890
then I'll put in the component.

19
00:01:04.890 --> 00:01:11.970
So, ng g m for module, we're gonna go
home and we're going to go routing.

20
00:01:11.970 --> 00:01:14.620
And so what this is going to do is
it's going to generate the module but

21
00:01:14.620 --> 00:01:17.360
it's also going to generate
the ability to route to it.

22
00:01:17.360 --> 00:01:19.568
It's gonna generate
the route piece as well

23
00:01:21.519 --> 00:01:23.231
&gt;&gt; Lukas Ruebbelke: And then now that we

24
00:01:23.231 --> 00:01:28.810
have the module built,
then let's generate the component.

25
00:01:28.810 --> 00:01:32.310
So ng, g for generate,
c for component, home.

26
00:01:36.964 --> 00:01:39.710
&gt;&gt; Lukas Ruebbelke: Now let's
just look at this real quick.

27
00:01:39.710 --> 00:01:41.710
If we go up to our dashboard,

28
00:01:41.710 --> 00:01:46.855
you can see we have our,
&gt;&gt; Lukas Ruebbelke: App and

29
00:01:46.855 --> 00:01:51.990
our home component which
we have our module here.

30
00:01:53.800 --> 00:01:54.920
Let's just zoom this back out.

31
00:01:56.140 --> 00:02:01.010
And so pretty much a pretty standard,

32
00:02:01.010 --> 00:02:05.280
this is a very, is angular season, this
is the most basic module that you need.

33
00:02:05.280 --> 00:02:07.890
Common module and
then notice it has the whole

34
00:02:07.890 --> 00:02:12.250
running module that if I click into that
then we just have an empty rounding table.

35
00:02:12.250 --> 00:02:13.510
So more on that later.

36
00:02:15.720 --> 00:02:20.470
And then if we look as well real quick,
that we also have our top level component.

37
00:02:24.040 --> 00:02:28.110
Remember we did- P app,
so we have the selector.

38
00:02:28.110 --> 00:02:32.990
Home component html, css, and
the body of our component class.

