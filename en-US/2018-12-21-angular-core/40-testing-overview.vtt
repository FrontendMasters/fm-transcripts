WEBVTT

1
00:00:02.910 --> 00:00:03.450
&gt;&gt; Lukas Ruebbelke: All right, so

2
00:00:03.450 --> 00:00:09.630
we just finished component-driven
architecture within this core project.

3
00:00:09.630 --> 00:00:13.710
So kind of as an addendum to that,
I wanted to take a moment and

4
00:00:13.710 --> 00:00:16.730
talk about how to test a component.

5
00:00:17.900 --> 00:00:21.400
So in Angular JS,
this is actually a little tricky,

6
00:00:21.400 --> 00:00:23.785
especially if you wanted to do
any kind of dom manipulation.

7
00:00:23.785 --> 00:00:26.530
You were stuck doing regex and
different things.

8
00:00:26.530 --> 00:00:31.270
Well, with Angular 2 and
above, they introduced some

9
00:00:31.270 --> 00:00:36.170
utilities that makes it fairly easy to not

10
00:00:36.170 --> 00:00:41.960
only spin up a component, but spin it up
in kind of a vacuum or a test environment.

11
00:00:41.960 --> 00:00:45.063
And then access properties,
access the dom, etc.

12
00:00:45.063 --> 00:00:48.930
And so
I wanted to take just a few moments and

13
00:00:48.930 --> 00:00:54.490
walk through what those pieces are and
how they worked.

14
00:00:54.490 --> 00:00:57.749
If we go to the command line,
and we go npm.

15
00:00:57.749 --> 00:01:02.362
Well, the first thing you'd
wanna do is hop on this and

16
00:01:02.362 --> 00:01:06.390
then git pull,
which hopefully I am up to date.

17
00:01:06.390 --> 00:01:10.530
I'd be surprised if I wasn't,
and then npm test dashboard.

18
00:01:13.403 --> 00:01:16.749
&gt;&gt; Lukas Ruebbelke: And so we're focusing
our test strictly on the dashboard

19
00:01:16.749 --> 00:01:17.660
application.

20
00:01:19.430 --> 00:01:22.020
And so you notice now that we're
having a window pop-up, so

21
00:01:22.020 --> 00:01:24.790
this is the Karma test runner,
so we testing this in Chrome.

22
00:01:24.790 --> 00:01:27.160
Here are our results.

23
00:01:28.180 --> 00:01:28.980
Very good.

24
00:01:28.980 --> 00:01:34.580
And so I'm going to leave this running,
and we're going to step

25
00:01:34.580 --> 00:01:40.050
into,
&gt;&gt; Lukas Ruebbelke: The ProjectsComponent

26
00:01:40.050 --> 00:01:41.880
spec specifically.

27
00:01:41.880 --> 00:01:45.233
So we could jump in to
any number of these.

28
00:01:45.233 --> 00:01:47.765
And I think this one is
a pretty good candidate,

29
00:01:47.765 --> 00:01:51.210
especially because it's
a container component.

30
00:01:51.210 --> 00:01:56.270
Now, when you generate a component
off of the Angular CLI, it's going

31
00:01:56.270 --> 00:02:01.360
to give you a basic spec structure
that will work right out of the box.

32
00:02:01.360 --> 00:02:02.273
So this is super handy.

33
00:02:02.273 --> 00:02:06.972
So I believe one of the biggest
impediments to writing test is

34
00:02:06.972 --> 00:02:10.960
being able to spin up
the thing that you wanna test.

35
00:02:10.960 --> 00:02:15.470
So your unit under test or
your fixture under test is, well,

36
00:02:15.470 --> 00:02:18.940
I have these different dependencies and
I can't even get the test to run.

37
00:02:18.940 --> 00:02:20.680
And, I give up.

38
00:02:20.680 --> 00:02:23.465
It's like flossing your teeth,
everybody thinks and

39
00:02:23.465 --> 00:02:25.289
we agree we should floss our teeth.

40
00:02:25.289 --> 00:02:29.329
But then it's like, but it's so much
work and it doesn't feel very good, so

41
00:02:29.329 --> 00:02:30.870
I'm not gonna floss my teeth.

42
00:02:30.870 --> 00:02:33.270
And so that's when I think about testing,

43
00:02:33.270 --> 00:02:36.110
it's I think everybody
agrees we should do it.

44
00:02:36.110 --> 00:02:38.650
If it was a little easier and
a little bit more convenient, and

45
00:02:38.650 --> 00:02:42.550
it didn't make my gums bleed every time,
I probably would write more test.

46
00:02:44.010 --> 00:02:48.360
And so let me see if I can
find a generic test in here.

47
00:02:49.910 --> 00:02:52.710
Maybe, let's look in
the home component spec.

48
00:02:54.691 --> 00:02:58.234
&gt;&gt; Lukas Ruebbelke: Yeah, so
when you generate any component,

49
00:02:58.234 --> 00:03:02.560
you're going to get this
basic structure built out.

50
00:03:03.960 --> 00:03:05.774
And this will work right out of the gate.

51
00:03:05.774 --> 00:03:09.448
So what it's going to do is without any
other code, now once you start to write

52
00:03:09.448 --> 00:03:13.160
code then you're going to need
to keep up to date with this.

53
00:03:13.160 --> 00:03:17.813
But this will create your component, and

54
00:03:17.813 --> 00:03:23.500
instantiate it so
that you can write a test against it.

55
00:03:25.520 --> 00:03:28.805
And so
coming back to the project component

56
00:03:28.805 --> 00:03:33.822
spec,
&gt;&gt; Lukas Ruebbelke: What I'm going

57
00:03:33.822 --> 00:03:38.770
to do is I'm going to tear
down the pieces of this.

58
00:03:38.770 --> 00:03:44.849
So I'm just going to rip this out,
and I'm going to just save it off.

59
00:03:44.849 --> 00:03:47.424
Because I may want this back in
case something goes horribly wrong.

