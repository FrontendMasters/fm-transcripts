WEBVTT

1
00:00:00.130 --> 00:00:04.855
&gt;&gt; Lukas Ruebbelke: So just to piggyback
on the kind of setup that we did,

2
00:00:04.855 --> 00:00:12.780
the libs hold the common
things that we can share.

3
00:00:12.780 --> 00:00:17.720
The apps hold our dashboards
which typically consist of

4
00:00:17.720 --> 00:00:21.790
very specific thin components.

5
00:00:21.790 --> 00:00:29.010
Now we had a good question over the break,
and that was where is the division

6
00:00:29.010 --> 00:00:33.500
between what is considered
Angular CLI output.

7
00:00:34.560 --> 00:00:39.810
How much is the Angular CLI handling,
what is the Nrwl extension

8
00:00:39.810 --> 00:00:44.880
bringing to the table, and
then what is my own opinion, if you will?

9
00:00:46.030 --> 00:00:50.780
So, in the app folder, or

10
00:00:50.780 --> 00:00:55.600
in the apps folder,
what is generated is for

11
00:00:55.600 --> 00:00:59.290
the most part an Angular CLI project.

12
00:01:01.070 --> 00:01:07.780
The difference is, normal extensions
created a mechanism to have

13
00:01:07.780 --> 00:01:14.140
more than one application and
common libs within a single project.

14
00:01:14.140 --> 00:01:18.530
And so what you see in the apps,
in the libs folder, now,

15
00:01:18.530 --> 00:01:21.840
that is definitely, Nrwl.

16
00:01:21.840 --> 00:01:24.730
But for the most part,
everything that's going into your apps and

17
00:01:24.730 --> 00:01:28.510
your libs is the Angular CLI.

18
00:01:30.550 --> 00:01:35.750
Now, what is,
I would say considered my opinion or

19
00:01:35.750 --> 00:01:40.340
things that's just strictly
Lukas is naming conventions.

20
00:01:40.340 --> 00:01:44.940
So I'm gonna call this cordata,
well, that just makes sense to me.

21
00:01:44.940 --> 00:01:50.190
But as you notice we
start to generate code

22
00:01:50.190 --> 00:01:53.950
that a lot of that is happening in
the structure is very conventional.

23
00:01:53.950 --> 00:01:59.240
Therefore, it's very consistent and
so 90% of what you are seeing,

24
00:01:59.240 --> 00:02:05.030
I would say, is strictly the Angular CLI.

25
00:02:05.030 --> 00:02:08.550
And then we're introducing gnarl
extensions to create that additional

26
00:02:08.550 --> 00:02:09.590
layer of abstraction,

27
00:02:09.590 --> 00:02:15.800
where you're gonna have multiple
applications within a single Workspace.

28
00:02:15.800 --> 00:02:21.620
And that's why, for instance,
if you look in the nx.json,

29
00:02:21.620 --> 00:02:26.570
that you can see, it's keeping track
actually the various projects.

30
00:02:26.570 --> 00:02:31.880
Now, the Angular team, because Nrwl in
essence was created by Victor Savkin and

31
00:02:31.880 --> 00:02:35.960
Jeff Cross, who were part of the Angular
core team for many, many years.

32
00:02:35.960 --> 00:02:41.603
They have adopted the format or
they've updated

33
00:02:41.603 --> 00:02:46.841
it the Angular CLI to
work of angular.json.

34
00:02:46.841 --> 00:02:51.604
And if you look in
angular.json you notice that

35
00:02:51.604 --> 00:02:56.860
there is now also a mechanism for
various projects.

36
00:02:56.860 --> 00:03:00.724
And so they've kind of converse on
angular.json with the idea is that you're

37
00:03:00.724 --> 00:03:02.666
allowed to have more than one project.

38
00:03:02.666 --> 00:03:03.993
And so Nrwl extensions and

39
00:03:03.993 --> 00:03:07.600
the Angular team because the creators
were on the Angular team.

40
00:03:07.600 --> 00:03:12.620
There was a pretty, I would say seamless
transition from one to the other.

41
00:03:12.620 --> 00:03:21.230
So hope that makes sense and
from here let's talk about components.

42
00:03:21.230 --> 00:03:26.740
And so we've laid the foundation,
we've laid the structure,

43
00:03:26.740 --> 00:03:32.053
and we have some basic,
albeit empty components.

44
00:03:32.053 --> 00:03:37.303
That I would like to flesh out and
talk about this is how a component works.

45
00:03:37.303 --> 00:03:41.920
And so work through a single component and
then we'll go from there.

