WEBVTT

1
00:00:02.690 --> 00:00:05.472
&gt;&gt; Lukas Ruebbelke: All right,
welcome to the Angular Core Workshop,

2
00:00:05.472 --> 00:00:09.365
where we're going to build an Angular
application from the ground up.

3
00:00:09.365 --> 00:00:13.440
So this is gonna be a very slide light
in a sense of there's no slides,

4
00:00:13.440 --> 00:00:16.555
we're going to be building
this from the ground up.

5
00:00:16.555 --> 00:00:21.880
It's live coding all day long, words,
and also if I crash and burn, so be it.

6
00:00:21.880 --> 00:00:25.360
But I have a good feeling about
how this is going to turn out.

7
00:00:25.360 --> 00:00:27.811
And so in this module I wanna talk and

8
00:00:27.811 --> 00:00:32.316
introduce the tools that we're
going to use and why I chose them.

9
00:00:32.316 --> 00:00:36.065
So, first and foremost,
obviously this is an Angular Workshop and

10
00:00:36.065 --> 00:00:37.722
we're going to use Angular.

11
00:00:37.722 --> 00:00:41.005
I think Angular is just
a fantastic framework for

12
00:00:41.005 --> 00:00:43.573
building large scale applications.

13
00:00:43.573 --> 00:00:48.127
And I believe it's very well suited,
because it's built on top of

14
00:00:48.127 --> 00:00:52.439
TypeScript for developers that
have a classical background,

15
00:00:52.439 --> 00:00:57.506
such as .Net or Java, looking to
move into client-side applications.

16
00:00:57.506 --> 00:01:01.474
Not only that,
it is a batteries included framework.

17
00:01:01.474 --> 00:01:05.664
Meaning that when we spin
up a project using the CLI,

18
00:01:05.664 --> 00:01:10.998
that you're going to get everything
you need to not only develop,

19
00:01:10.998 --> 00:01:13.677
but to deploy that application.

20
00:01:13.677 --> 00:01:18.257
So, speaking of the Angular CLI,
this is a tool that was

21
00:01:18.257 --> 00:01:23.031
created by the Angular team,
to take a lot of the burden and

22
00:01:23.031 --> 00:01:28.507
the heavy lifting of creating
a working development enviroment.

23
00:01:28.507 --> 00:01:33.178
And making sure that everything
was where it needed to be, and,

24
00:01:33.178 --> 00:01:35.696
well, quite frankly just works.

25
00:01:35.696 --> 00:01:41.141
So prior to the Angular CLI, you would
have to assemble your project by hand.

26
00:01:41.141 --> 00:01:45.070
And, okay, I need a dev-server,
I need to run this test runner,

27
00:01:45.070 --> 00:01:47.537
I need to configure this custom webpack.

28
00:01:47.537 --> 00:01:52.221
And on a good day, that might take
90 minutes or two hours to set up.

29
00:01:52.221 --> 00:01:55.233
With Angular CLI,
we can go ng new your project name and

30
00:01:55.233 --> 00:01:58.849
it would generate everything that
you need to get up and running.

31
00:01:58.849 --> 00:02:03.432
A working project with a test runner,
an end-to-end test runner,

32
00:02:03.432 --> 00:02:05.802
webpack, built steps, linting,

33
00:02:05.802 --> 00:02:10.954
everything that you need to hit the ground
running in just a matter of moment.

34
00:02:10.954 --> 00:02:15.409
So the CLI is a really handy tool for
getting up and running, but also for

35
00:02:15.409 --> 00:02:17.720
generating a lot of the common code.

36
00:02:17.720 --> 00:02:21.532
And so if I'm going to create a service or
a component, or whatever,

37
00:02:21.532 --> 00:02:23.063
I'm going to generate it.

38
00:02:23.063 --> 00:02:27.804
And the nice thing about that is the code
that is generated is defined and

39
00:02:27.804 --> 00:02:30.263
adheres to the Angular style guide.

40
00:02:30.263 --> 00:02:34.858
So there was a time where there was really
no opinions about an Angular application

41
00:02:34.858 --> 00:02:36.467
or AngularJS application.

42
00:02:36.467 --> 00:02:40.625
Well now, the Angular CLI is based off
of the official Angular style guide.

43
00:02:40.625 --> 00:02:43.950
So any code that comes out of this
is going to be very consistent and

44
00:02:43.950 --> 00:02:46.679
familiar to any Angular
developer across theboard.

45
00:02:46.679 --> 00:02:51.271
So if you're on a team and everybody's
using the CLI, this is really handy,

46
00:02:51.271 --> 00:02:53.543
because you know what you can expect.

47
00:02:53.543 --> 00:02:59.171
Speaking of cogeneration, that the concept
of schematics, think blueprints,

48
00:02:59.171 --> 00:03:03.668
was introduced, I believe,
just the previous CLI version ago.

49
00:03:03.668 --> 00:03:08.728
And what this does is allow you to
create custom templates, blueprints,

50
00:03:08.728 --> 00:03:13.966
schematics, as they're known for
specific, domain-specific things.

51
00:03:13.966 --> 00:03:18.716
So if you wanted to generate a bunch
of Ionic code or NativeScript code,

52
00:03:18.716 --> 00:03:23.230
or something specific even to your
organization, you could create

53
00:03:23.230 --> 00:03:28.633
a schematic, and then using the CLI,
generate that code over and over and over.

54
00:03:28.633 --> 00:03:33.045
So definitely a huge time boost, but
what this has done is taken the CLI and

55
00:03:33.045 --> 00:03:37.121
turned it into, essentially,
a platform you can build things on.

56
00:03:37.121 --> 00:03:42.683
And one of the most prominent projects
around the CLI is Nrwl Extensions.

57
00:03:42.683 --> 00:03:45.512
And so this was created by Jeff Cross,
Victor Savkin,

58
00:03:45.512 --> 00:03:49.836
who worked on the Angular core team for
many, many years, started a consultancy.

59
00:03:49.836 --> 00:03:53.112
And then this was born
out of the situation, or

60
00:03:53.112 --> 00:03:58.993
going from client to client to client and
seeing these large enterprise problems.

61
00:03:58.993 --> 00:04:02.458
And they said, let's go ahead and
create this tool, or

62
00:04:02.458 --> 00:04:05.776
just kinda suit of extensions
build on top of the CLI,

63
00:04:05.776 --> 00:04:10.891
to solve a lot of the problems that they
were seeing in enterprise organizations.

64
00:04:10.891 --> 00:04:15.485
The big one that we're going to
use today is the Nrwl Workspace,

65
00:04:15.485 --> 00:04:19.996
which is basically a monorepo that
allows you store not a single

66
00:04:19.996 --> 00:04:24.611
Angular CLI project, but
multiple CLI projects in libraries.

67
00:04:24.611 --> 00:04:29.155
So it's just a way to kind of
have a better architecture for

68
00:04:29.155 --> 00:04:34.630
having more than one application and
many n number of shared libraries

69
00:04:34.630 --> 00:04:39.394
that you share amongst those
applications that you create.

70
00:04:39.394 --> 00:04:45.336
And then last but not least, we are going
to rely heavily on Angular Material.

71
00:04:45.336 --> 00:04:50.373
Angular Material is built off the Google
design spec, and so its a bunch of

72
00:04:50.373 --> 00:04:55.587
kind of prebuilt tools off the shelf
that you can put into your application.

73
00:04:55.587 --> 00:04:58.244
And because it's an official
Angular project,

74
00:04:58.244 --> 00:05:01.952
that there's really tight integration
to the Angular app itself.

75
00:05:01.952 --> 00:05:08.169
And so it's very easy to drop these in,
and make them work fairly seamlessly.

76
00:05:08.169 --> 00:05:13.005
And, quite frankly, I think that
they look really, really good.

77
00:05:13.005 --> 00:05:15.517
So, for instance,
you take the date picker.

78
00:05:15.517 --> 00:05:20.370
I think other than maybe the one that
Mark Robensky wrote many, many years ago.

79
00:05:20.370 --> 00:05:22.501
This is probably my favourite one.

80
00:05:22.501 --> 00:05:25.562
And so
now we have the CLI to generate code,

81
00:05:25.562 --> 00:05:30.749
Nrwl Extensions to generate kind of
the project that that code lives in,

82
00:05:30.749 --> 00:05:34.761
and then we have Angular
material to make it look great.

83
00:05:34.761 --> 00:05:38.483
So these are the tools that we're going to
be using over the course of the workshop.

84
00:05:38.483 --> 00:05:42.913
And so keep an eye out,
you're going to see a lot of CLI,

85
00:05:42.913 --> 00:05:46.135
Nrwl Extensions and Angular Material.

