WEBVTT

1
00:00:03.090 --> 00:00:08.150
&gt;&gt; Lukas Ruebbelke: So I left the previous
module with a real cliffhanger

2
00:00:08.150 --> 00:00:10.900
around shared mutable state.

3
00:00:12.100 --> 00:00:15.416
So if I refresh this,
you'll notice I select this.

4
00:00:15.416 --> 00:00:22.290
As I start to type, this is being
updated or mutated in multiple places.

5
00:00:22.290 --> 00:00:27.620
So JavaScript, pass by reference,
this is why you see this phenomena.

6
00:00:29.630 --> 00:00:32.805
So this sets the stage for

7
00:00:32.805 --> 00:00:37.720
a couple of things, or
at least highlights one of

8
00:00:37.720 --> 00:00:43.790
the needs to think about how
we're structuring our components.

9
00:00:43.790 --> 00:00:49.703
So it's probably a bad thing
that if I'm in this over here,

10
00:00:49.703 --> 00:00:53.861
and it's updating over here, not good.

11
00:00:53.861 --> 00:00:58.448
And so we need to find a way
to kinda break this out and

12
00:00:58.448 --> 00:01:02.200
hedge against the shared mutable state.

13
00:01:02.200 --> 00:01:06.500
Which leads to, I believe one of my

14
00:01:06.500 --> 00:01:12.400
favorite topics when it comes to Angular.

15
00:01:12.400 --> 00:01:18.990
And we started to see kinda the hints of
this in AngularJS with directives and

16
00:01:18.990 --> 00:01:23.230
isolated scope, and
the API around that was kinda weird.

17
00:01:23.230 --> 00:01:28.510
But with Angular, fortunately,
they settled on this idea that

18
00:01:28.510 --> 00:01:34.270
everything should be a component,
and that we have inputs and outputs.

19
00:01:34.270 --> 00:01:37.750
So remember when I talked
about property bindings,

20
00:01:37.750 --> 00:01:42.040
that you can put data from
a component into a template?

21
00:01:42.040 --> 00:01:45.920
Well, you can put data
into a component template,

22
00:01:45.920 --> 00:01:48.730
that is from a parent to a child.

23
00:01:48.730 --> 00:01:53.170
And that is essentially a custom
binding or a custom input.

24
00:01:53.170 --> 00:01:56.480
And then if something happens in that
child, how do you know about it?

25
00:01:56.480 --> 00:01:59.130
Via a custom output.

26
00:01:59.130 --> 00:02:03.630
And so we're familiar with, we're binding
to a property that when it updates, so

27
00:02:03.630 --> 00:02:04.410
does our template.

28
00:02:05.800 --> 00:02:08.730
And if something happens in our template,
we're going

29
00:02:08.730 --> 00:02:13.110
to communicate that back to our component,
so property binding, event binding.

30
00:02:13.110 --> 00:02:17.725
So now the question is,
if we had custom property bindings and

31
00:02:17.725 --> 00:02:21.650
custom event bindings,
what would that look like?

32
00:02:23.180 --> 00:02:26.720
Because now you could create
a perimeter around a component, and

33
00:02:26.720 --> 00:02:29.700
choose what goes in and what comes out.

34
00:02:31.040 --> 00:02:38.160
So in our projects.component.html,
just by scrolling down here,

35
00:02:38.160 --> 00:02:43.330
and this is approximately 70
lines of code, so not bad.

36
00:02:43.330 --> 00:02:46.610
But it would be very hard for
somebody to just scroll through and

37
00:02:46.610 --> 00:02:48.770
be like, I know what happened,
I know what's in here.

38
00:02:50.090 --> 00:02:56.873
That, this is a bit heavy.

39
00:02:56.873 --> 00:03:01.830
And so what we're going to do is, we're
going to break this into child components.

40
00:03:01.830 --> 00:03:05.840
We're gonna show how to communicate
to those child components, and

41
00:03:05.840 --> 00:03:09.530
in doing so,
solve the shared mutable state problem.

42
00:03:10.730 --> 00:03:19.370
So opening up the console,
let's generate some components, ng g c.

43
00:03:21.000 --> 00:03:24.794
And we're going to put this
in the projects folder, and

44
00:03:24.794 --> 00:03:27.065
let's go with projects-list.

45
00:03:30.069 --> 00:03:32.820
&gt;&gt; Lukas Ruebbelke: I feel like
maybe I might be missing something.

46
00:03:32.820 --> 00:03:36.817
But let's do this as a dry run and
just see what happens.

47
00:03:40.827 --> 00:03:43.140
&gt;&gt; Lukas Ruebbelke: Okay, so far, so good.

48
00:03:44.710 --> 00:03:47.948
So we'll do this again,

49
00:03:47.948 --> 00:03:52.590
ng g c projects/projects-list.

50
00:03:52.590 --> 00:03:54.430
We'll run this without the dry run flag.

51
00:03:57.880 --> 00:04:01.725
And since we're here, ng g c

52
00:04:01.725 --> 00:04:08.300
projects/project-details.

53
00:04:08.300 --> 00:04:10.110
I don't think I need to dry run that.

54
00:04:11.900 --> 00:04:19.540
Now let's look into our file
structure here, so projects.

55
00:04:19.540 --> 00:04:24.629
And now within the projects
feature component, or

56
00:04:24.629 --> 00:04:30.082
everything that is in the projects,
are now nesting.

57
00:04:30.082 --> 00:04:33.548
Or we're saying project-details and

58
00:04:33.548 --> 00:04:38.910
projects-list belongs under
this main projects feature.

59
00:04:39.940 --> 00:04:44.725
And then if we look in here, you'll notice
that because we generated it with the CLI,

60
00:04:44.725 --> 00:04:47.123
there's quite a bit of consistency here.

61
00:04:49.631 --> 00:04:52.391
&gt;&gt; Lukas Ruebbelke: If we
look at the project.module,

62
00:04:52.391 --> 00:04:54.875
let me just zoom this back down.

63
00:04:58.079 --> 00:05:01.131
&gt;&gt; Lukas Ruebbelke: You'll notice
that in the declarations is obviously

64
00:05:01.131 --> 00:05:03.300
the ProjectsComponent.

65
00:05:03.300 --> 00:05:09.315
But the CLI has went ahead and,
&gt;&gt; Lukas Ruebbelke: Added

66
00:05:09.315 --> 00:05:11.352
this to our module.

67
00:05:14.259 --> 00:05:18.916
&gt;&gt; Lukas Ruebbelke: And from here,
let's go into our projects.component.html.

68
00:05:21.735 --> 00:05:26.333
&gt;&gt; Lukas Ruebbelke: And
let's just take this for a moment, and

69
00:05:26.333 --> 00:05:30.303
I'm going to chop out the template.

70
00:05:30.303 --> 00:05:33.020
We're going to go into projects-list.

71
00:05:33.020 --> 00:05:35.060
And I'm just going to paste this in,

72
00:05:35.060 --> 00:05:38.040
and I'm gonna leave this here for
just a moment.

73
00:05:38.040 --> 00:05:41.937
I'm just gonna comment this out,
we'll be back.

74
00:05:45.155 --> 00:05:52.151
&gt;&gt; Lukas Ruebbelke: Let's just
verify that everything is working,

75
00:05:52.151 --> 00:05:56.936
h1, PROJECTS LIST IS WORKING.

76
00:05:56.936 --> 00:06:01.217
Now what we'll do as well, why not,

77
00:06:01.217 --> 00:06:05.810
let's go into our project-details.

78
00:06:05.810 --> 00:06:08.696
And we'll go ahead and chop this out.

79
00:06:13.115 --> 00:06:15.378
&gt;&gt; Lukas Ruebbelke: And
it looks like I missed that bottom, so

80
00:06:15.378 --> 00:06:17.004
let me just re-select this.

81
00:06:21.731 --> 00:06:24.278
&gt;&gt; Lukas Ruebbelke: Now in
the project-details template,

82
00:06:26.415 --> 00:06:27.751
&gt;&gt; Lukas Ruebbelke: Let's just go ahead

83
00:06:27.751 --> 00:06:34.216
and,
&gt;&gt; Lukas Ruebbelke: Big h1,

84
00:06:34.216 --> 00:06:41.089
cuz I think it's more bold,
PROJECT DETAILS WORKS!

85
00:06:41.089 --> 00:06:46.960
All right, so when we refresh this,
obviously, nothing's here.

86
00:06:46.960 --> 00:06:50.930
Let's go into our projects.component.

87
00:06:50.930 --> 00:06:57.287
And we'll go, close that off,

88
00:06:57.287 --> 00:07:02.708
app-project-details.

89
00:07:05.217 --> 00:07:08.304
&gt;&gt; Lukas Ruebbelke: Sure, you can do
that when I'm doing a generic, but

90
00:07:08.304 --> 00:07:11.827
you can't do it when I'm
actually in the template, okay?

91
00:07:11.827 --> 00:07:16.859
&gt;&gt; Speaker 2: [INAUDIBLE]
&gt;&gt; Lukas Ruebbelke: Is it?

92
00:07:23.079 --> 00:07:25.972
&gt;&gt; Lukas Ruebbelke: You'd think it would
just pick that up on auto-complete, right?

93
00:07:27.783 --> 00:07:29.874
&gt;&gt; Lukas Ruebbelke: It looks
like I'm going back to WebStorm.

94
00:07:32.463 --> 00:07:33.240
&gt;&gt; Lukas Ruebbelke: Okay.

95
00:07:35.916 --> 00:07:40.597
&gt;&gt; Lukas Ruebbelke: So
would anybody agree with me that this is

96
00:07:40.597 --> 00:07:45.690
a little easier to parse what's happening?

97
00:07:47.430 --> 00:07:52.570
Hey, it's a projects list, and
it's some project details.

98
00:07:52.570 --> 00:07:57.370
So one of the upsides of components and
custom HTML

99
00:07:57.370 --> 00:08:02.868
selectors is that allows you
to turn your HTML into a DSL.

100
00:08:02.868 --> 00:08:06.100
And so this is, you don't really
hear people talk about this a lot.

101
00:08:06.100 --> 00:08:10.939
But, so we've heard about Symantec Web.

102
00:08:10.939 --> 00:08:15.914
But being able to create custom elements
that, for instance, stakeholders or

103
00:08:15.914 --> 00:08:20.888
nontechnical people can look at and
say, well, that's a projects list,

104
00:08:20.888 --> 00:08:23.660
and this is a project details thing.

105
00:08:23.660 --> 00:08:29.250
This is really handy when not only are you
able to communicate to other developers,

106
00:08:29.250 --> 00:08:31.930
but also there's a massive, I think,

107
00:08:31.930 --> 00:08:34.420
return on investment when you can
communicate to non-stakeholders.

108
00:08:34.420 --> 00:08:36.100
And they can look and
they can understand what's happening.

