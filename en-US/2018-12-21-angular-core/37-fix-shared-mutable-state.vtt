WEBVTT

1
00:00:00.000 --> 00:00:04.452
&gt;&gt; Lukas Ruebbelke: Now we need to
fix this because we still have shared

2
00:00:04.452 --> 00:00:05.938
mutable state.

3
00:00:05.938 --> 00:00:08.849
And so
I was talking about this on the break,

4
00:00:08.849 --> 00:00:11.840
that,
&gt;&gt; Lukas Ruebbelke: Shared state is

5
00:00:11.840 --> 00:00:14.888
totally fine, we have to share state.

6
00:00:14.888 --> 00:00:18.987
I mean, when you cross down from
the server and you're getting state,

7
00:00:18.987 --> 00:00:20.230
you're sharing it.

8
00:00:20.230 --> 00:00:26.583
Mutable state is totally fine, eventually
you're going to have to mutate state.

9
00:00:26.583 --> 00:00:31.006
Sure, mutable state is
the devil's playground, and

10
00:00:31.006 --> 00:00:36.113
this is where things go to cause
mischief in your application.

11
00:00:36.113 --> 00:00:43.633
So if you want to share state,
&gt;&gt; Lukas Ruebbelke: Make it immutable.

12
00:00:43.633 --> 00:00:47.128
But if you want to mutate state,

13
00:00:47.128 --> 00:00:51.792
then isolate it so it's no longer shared.

14
00:00:51.792 --> 00:00:55.986
And so
how we do this is I'm going to replace

15
00:00:55.986 --> 00:01:00.541
project with we'll go with currentProject.

16
00:01:03.493 --> 00:01:06.535
&gt;&gt; Lukas Ruebbelke: We'll save this,
so now it's currentProject.

17
00:01:06.535 --> 00:01:10.687
And it's saying,
&gt;&gt; Lukas Ruebbelke: That

18
00:01:10.687 --> 00:01:12.214
doesn't exist yet.

19
00:01:12.214 --> 00:01:17.622
&gt;&gt; Lukas Ruebbelke: But in our component,

20
00:01:17.622 --> 00:01:22.461
we're going to make

21
00:01:22.461 --> 00:01:27.022
one small change.

22
00:01:27.022 --> 00:01:29.899
We're gonna go here, currentProject,

23
00:01:29.899 --> 00:01:34.351
and I could even,
&gt;&gt; Lukas Ruebbelke: Type this.

24
00:01:36.576 --> 00:01:37.381
&gt;&gt; Lukas Ruebbelke: There we go.

25
00:01:40.169 --> 00:01:42.873
&gt;&gt; Lukas Ruebbelke: And
let me move this down to the bottom.

26
00:01:42.873 --> 00:01:45.556
So does anybody know what a setter is?

27
00:01:48.107 --> 00:01:49.718
&gt;&gt; Lukas Ruebbelke: That setter or
a getter,

28
00:01:49.718 --> 00:01:52.955
is you can either get a property or
set a property.

29
00:01:52.955 --> 00:01:58.353
But it's actually tucked
behind that is a method.

30
00:01:58.353 --> 00:02:06.122
And so now what we can do is go set value.

31
00:02:06.122 --> 00:02:12.436
And from here, say this.currentProject =.

32
00:02:15.355 --> 00:02:18.193
&gt;&gt; Lukas Ruebbelke: Here it is,
we're hanging in the balance.

33
00:02:18.193 --> 00:02:22.403
How do we keep this from
being shared mutable state?

34
00:02:25.914 --> 00:02:28.428
&gt;&gt; Speaker 2: Copy by value and
not by reference, right?

35
00:02:28.428 --> 00:02:31.701
&gt;&gt; Lukas Ruebbelke: Right, so
you would make a copy of it.

36
00:02:31.701 --> 00:02:34.729
So you create a local copy.

37
00:02:34.729 --> 00:02:39.931
And so what we're doing
here is using Object.assign

38
00:02:39.931 --> 00:02:46.746
is that we're saying take,
&gt;&gt; Lukas Ruebbelke: The value that

39
00:02:46.746 --> 00:02:54.106
we passed in, and assign all innumerable
properties to this empty object.

40
00:02:54.106 --> 00:02:58.482
Now you're no longer dealing
with application state, but

41
00:02:58.482 --> 00:03:01.729
you're dealing with presentation state.

42
00:03:01.729 --> 00:03:05.116
So you're taking something that's
shared across the application and

43
00:03:05.116 --> 00:03:07.154
we're saying I want to
make a copy of this.

44
00:03:07.154 --> 00:03:10.329
Now this is a fairly simple object.

45
00:03:10.329 --> 00:03:14.585
So if you're doing deeply nested
objects that reference other objects,

46
00:03:14.585 --> 00:03:16.582
that you could run into problems.

47
00:03:16.582 --> 00:03:20.345
And you may need to use something
like Ramda or whatever.

48
00:03:20.345 --> 00:03:25.919
But for most basic single depth objects,
this is not a problem.

49
00:03:25.919 --> 00:03:29.929
So using Object.assign is it
takes this Object here, or

50
00:03:29.929 --> 00:03:32.859
you could actually do multiple Objects.

51
00:03:32.859 --> 00:03:37.872
Let's do all innumerable properties and
then assigned it to this Object here.

52
00:03:37.872 --> 00:03:41.568
And so now when we save this,

53
00:03:41.568 --> 00:03:47.420
anytime project is
updated via the binding,

54
00:03:47.420 --> 00:03:51.424
is it's now creating a copy and

55
00:03:51.424 --> 00:03:55.593
storing it as a local property.

56
00:03:55.593 --> 00:04:00.676
And so
now whatever happens in this form is

57
00:04:00.676 --> 00:04:06.329
no longer,
&gt;&gt; Lukas Ruebbelke: Shared.

58
00:04:06.329 --> 00:04:11.332
It's certainly mutable,
but it's not shared.

59
00:04:11.332 --> 00:04:14.148
Let me just double check, make sure.

60
00:04:14.148 --> 00:04:18.255
Yes, currentProject exist, come on.

61
00:04:18.255 --> 00:04:23.300
Let's go back here,
make sure that nothing is breaking.

62
00:04:23.300 --> 00:04:26.096
Select this, now keep an eye over here.

63
00:04:29.532 --> 00:04:34.460
&gt;&gt; Lukas Ruebbelke: So we fixed it here
but it's still happening over here.

64
00:04:34.460 --> 00:04:40.326
So what I would do in this case,
&gt;&gt; Lukas Ruebbelke: Is I'll create.

65
00:04:43.869 --> 00:04:48.594
&gt;&gt; Lukas Ruebbelke: We'll go with,
I think its Title, originalTitle,

66
00:04:48.594 --> 00:04:50.906
declare a new value here.

67
00:04:50.906 --> 00:04:56.045
And I'll just say if there is a value

68
00:04:56.045 --> 00:05:03.933
then let's set this
originalTitle to value.title.

69
00:05:03.933 --> 00:05:07.706
And so now we're just creating,
again, taking this and

70
00:05:07.706 --> 00:05:09.837
making it presentation state.

71
00:05:09.837 --> 00:05:12.925
So now, even within the component,
extending this concept,

72
00:05:12.925 --> 00:05:15.322
is we're saying because
we're mutating this.

73
00:05:15.322 --> 00:05:19.494
And we could mutate the title
because it's shared in two places.

74
00:05:19.494 --> 00:05:24.234
And so these are kinda these little
things that I want us to start

75
00:05:24.234 --> 00:05:28.811
queuing on as we're building
applications that, hold on.

76
00:05:28.811 --> 00:05:34.051
currentProject.title is here,
but it's also over here.

77
00:05:34.051 --> 00:05:38.433
And because this is in ngModel,
this is mutable.

78
00:05:42.047 --> 00:05:45.265
&gt;&gt; Lukas Ruebbelke: So
what we'll do is we say okay,

79
00:05:45.265 --> 00:05:50.640
if you're gonna be mutable,
then you can't share.

80
00:05:50.640 --> 00:05:52.263
Remove it.

81
00:05:52.263 --> 00:05:56.661
And so we'll go originalTitle,
like so, save it.

82
00:06:01.412 --> 00:06:01.954
&gt;&gt; Lukas Ruebbelke: And

83
00:06:01.954 --> 00:06:07.468
now when I go here,
&gt;&gt; Lukas Ruebbelke: It's

84
00:06:07.468 --> 00:06:12.887
isolated from this, more importantly
that it's isolated from this as well.

85
00:06:12.887 --> 00:06:19.858
Is if I were to cover to this up,
so let me just inspect.

86
00:06:19.858 --> 00:06:22.357
And we went to here and
let's just say I deleted this element.

87
00:06:25.659 --> 00:06:27.010
&gt;&gt; Lukas Ruebbelke: And I looked at this,

88
00:06:27.010 --> 00:06:30.020
I'd have no idea what
the original object was.

89
00:06:30.020 --> 00:06:31.242
What am I dealing with?

90
00:06:31.242 --> 00:06:32.097
I don't know.

91
00:06:32.097 --> 00:06:38.063
But by now creating a visual cue, so
this is just a UX thing, back to this,

92
00:06:38.063 --> 00:06:43.096
I could completely delete this and
I still know I'm working.

93
00:06:43.096 --> 00:06:46.596
And I have a visual
connection back to here.

94
00:06:46.596 --> 00:06:51.667
Now what we can do is,
when this was mutable, and I went here and

95
00:06:51.667 --> 00:06:56.095
I started changing something,
how would I undo that?

96
00:06:56.095 --> 00:06:57.894
What if I'm like just kidding?

97
00:06:57.894 --> 00:06:59.956
I don't wanna make this change.

98
00:06:59.956 --> 00:07:01.362
Well, you've already mutated the object.

99
00:07:01.362 --> 00:07:06.320
I mean, it's kind of like
peeing in the bath water.

100
00:07:06.320 --> 00:07:07.552
You just cannot do that.

101
00:07:07.552 --> 00:07:12.142
Whereas now you're creating separation.

102
00:07:12.142 --> 00:07:17.566
And if you want to discard it,
you would just say not a problem.

103
00:07:17.566 --> 00:07:19.893
I'm just going to cancel.

104
00:07:19.893 --> 00:07:21.619
And you know what happens?

105
00:07:21.619 --> 00:07:22.575
You just throw that object away.

106
00:07:22.575 --> 00:07:24.625
You don't need it.

107
00:07:24.625 --> 00:07:30.685
And so we'll go here,
&gt;&gt; Lukas Ruebbelke: emit.

108
00:07:30.685 --> 00:07:32.876
&gt;&gt; Speaker 3: [INAUDIBLE]
&gt;&gt; Lukas Ruebbelke: Did I not change

109
00:07:32.876 --> 00:07:33.501
that back?

110
00:07:33.501 --> 00:07:37.000
&gt;&gt; Group: [LAUGH]
&gt;&gt; Lukas Ruebbelke: I was trying to be so

111
00:07:37.000 --> 00:07:40.938
helpful, my goodness.

112
00:07:40.938 --> 00:07:42.533
Don't ever have four-year-olds and

113
00:07:42.533 --> 00:07:46.070
seven-year-olds because you start talking
like that and you forget to revert back.

114
00:07:46.070 --> 00:07:50.043
So, cancelled.emit.

115
00:07:51.669 --> 00:07:56.709
&gt;&gt; Lukas Ruebbelke: I don't really,
what I could do is just for

116
00:07:56.709 --> 00:08:01.071
the sake of,
&gt;&gt; Lukas Ruebbelke: Let's say you wanted

117
00:08:01.071 --> 00:08:03.873
to actually restore, I don't know
why I'm doing percentComplete,

118
00:08:03.873 --> 00:08:05.023
let's go currentProject.

119
00:08:05.023 --> 00:08:08.930
You want it to you
exited out of this form.

120
00:08:08.930 --> 00:08:11.861
So if you've ever done long form
insurance applications, and

121
00:08:11.861 --> 00:08:14.806
somebody's like I wanna cancel,
or I need to go do something.

122
00:08:14.806 --> 00:08:17.433
And they need to come back,
you wanna restore state.

123
00:08:17.433 --> 00:08:20.878
It probably would not hurt to
just grab this currentProject and

124
00:08:20.878 --> 00:08:22.243
store it off somewhere.

125
00:08:22.243 --> 00:08:23.723
So just as a matter of course,

126
00:08:23.723 --> 00:08:26.526
I typically would send that
up to the parent component.

127
00:08:26.526 --> 00:08:28.288
It can do whatever it wants.

128
00:08:28.288 --> 00:08:31.328
But this child component
doesn't have to worry about it.

129
00:08:31.328 --> 00:08:32.704
Are you caching, are you not?

130
00:08:32.704 --> 00:08:34.461
Are you gonna restore it, who cares?

131
00:08:34.461 --> 00:08:36.852
The child component doesn't care.

132
00:08:36.852 --> 00:08:41.206
And then onto the form,

133
00:08:41.206 --> 00:08:44.696
let's go submit.

134
00:08:46.813 --> 00:08:54.020
&gt;&gt; Lukas Ruebbelke: And
saved.emit(selected,

135
00:08:54.020 --> 00:08:59.845
not, currentProject.

136
00:08:59.845 --> 00:09:01.045
At least it's not wahoo.

