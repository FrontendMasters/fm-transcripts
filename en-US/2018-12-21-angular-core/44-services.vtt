WEBVTT

1
00:00:00.450 --> 00:00:05.670
&gt;&gt; Lukas Ruebbelke: Now one of
the thing that I will call out that

2
00:00:07.430 --> 00:00:12.000
is interesting is that if you have
a component that has a service,

3
00:00:14.510 --> 00:00:17.468
typically what you're
going to want to do is,

4
00:00:17.468 --> 00:00:22.109
like for
an instance let's take project service

5
00:00:23.840 --> 00:00:28.820
and It's not necessarily a problem.

6
00:00:28.820 --> 00:00:30.780
In other words,
it's able to run just fine.

7
00:00:31.890 --> 00:00:36.724
But if I wanted to mock
out projectService, and so

8
00:00:36.724 --> 00:00:39.670
I'm gonna show this.

9
00:00:39.670 --> 00:00:43.039
And I'm not gonna complete this example,
but I do wanna show how this works.

10
00:00:44.090 --> 00:00:49.357
Is, what I would do is,
I would go projectService and

11
00:00:49.357 --> 00:00:55.562
so again creating like another
reference to the local member,

12
00:00:55.562 --> 00:01:00.244
and this is going to be
of type projectService,

13
00:01:00.244 --> 00:01:05.837
it's like you're not instantiating it.

14
00:01:05.837 --> 00:01:11.800
But what I'll also do is,
I'll create a mock service.

15
00:01:11.800 --> 00:01:16.341
So I might call this, whatever.

16
00:01:16.341 --> 00:01:21.920
And this can be a couple things, it can be
a class, it can be an object, whatever.

17
00:01:23.410 --> 00:01:28.300
And so mark yourself out.

18
00:01:30.260 --> 00:01:35.131
And then,
with in your module fixture here,

19
00:01:35.131 --> 00:01:40.670
or your module class,
you can go providers.

20
00:01:40.670 --> 00:01:42.640
Let's see if I can do this from memory.

21
00:01:42.640 --> 00:01:45.740
It's an object and it's provide,

22
00:01:51.510 --> 00:01:55.530
I think this is it, and
I can double check in just a moment.

23
00:01:55.530 --> 00:02:01.878
But we're going to provide

24
00:02:01.878 --> 00:02:07.122
projectService, but

25
00:02:07.122 --> 00:02:13.746
what we really want to do is,

26
00:02:13.746 --> 00:02:17.610
use value of mock

27
00:02:17.610 --> 00:02:23.140
projectService here.

28
00:02:23.140 --> 00:02:26.400
And so what we're doing is
we're overriding, for saying,

29
00:02:26.400 --> 00:02:31.380
I want to inject the projectService.

30
00:02:31.380 --> 00:02:35.520
But I'm going to use value,
the mock projectService.

31
00:02:35.520 --> 00:02:38.380
It's using essentially this object,
you're saying provide this but

32
00:02:38.380 --> 00:02:40.090
instead use value this.

33
00:02:40.090 --> 00:02:42.500
You can also do it as a class,
so for instances,

34
00:02:42.500 --> 00:02:48.110
if I needed a little bit more extensive
of a mock, then I'll do that as well.

35
00:02:48.110 --> 00:02:54.980
And then when you want to get an instance
of that service on the component,

36
00:02:54.980 --> 00:03:01.070
you can go here and,
I'll just put it up here.

37
00:03:01.070 --> 00:03:02.980
So get service instance.

38
00:03:04.840 --> 00:03:11.342
And I think I'd call this,

39
00:03:11.342 --> 00:03:20.108
see here, projectsService=debug

40
00:03:20.108 --> 00:03:28.880
injector.get, projectService.

41
00:03:28.880 --> 00:03:31.380
So now this allows us to,

42
00:03:31.380 --> 00:03:36.190
not that I would test the service
directly, but I would want to spy on it.

43
00:03:36.190 --> 00:03:41.520
Or if I had a heart dependency on
something with in the component,

44
00:03:41.520 --> 00:03:45.060
then I would just overwrite that and say,
you're calling this method but instead of

45
00:03:45.060 --> 00:03:50.300
returning me real stuff, I want you to
just provide this mock data, or whatever.

46
00:03:51.450 --> 00:03:56.510
And so this is how you get
a service onto a component.

47
00:03:56.510 --> 00:03:58.810
From there you can mark it out and
then spy on it.

