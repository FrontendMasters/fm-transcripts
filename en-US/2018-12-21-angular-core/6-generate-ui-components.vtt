WEBVTT

1
00:00:00.000 --> 00:00:03.749
&gt;&gt; Speaker 1: One thing that I generally
will do is if my application has

2
00:00:03.749 --> 00:00:08.370
any kind of data that's coming from
a server, and rarely does it not.

3
00:00:08.370 --> 00:00:13.238
I think that pretty much every
non-trivial application has

4
00:00:13.238 --> 00:00:18.210
some server side concern,
is I generate a core data library.

5
00:00:18.210 --> 00:00:21.020
And so this is where kind
of all my data is consumed.

6
00:00:21.020 --> 00:00:23.540
And I may put my state
management in there as well.

7
00:00:23.540 --> 00:00:27.640
So, ng g lib and core-data.

8
00:00:27.640 --> 00:00:33.903
Let me just do this -d just to
see what's going to happen.

9
00:00:33.903 --> 00:00:35.370
So far, so good.

10
00:00:35.370 --> 00:00:37.628
All right, let me just pull the d off.

11
00:00:46.148 --> 00:00:47.139
&gt;&gt; Speaker 1: And
we already did the material.

12
00:00:47.139 --> 00:00:49.867
So far everything that we've done,

13
00:00:49.867 --> 00:00:54.274
material has been kind of
a utility kind of a barrel module.

14
00:00:54.274 --> 00:00:59.580
Core data is going to be strictly
I would say business logic,

15
00:00:59.580 --> 00:01:06.090
server-side communication, but
you can also put, UI things in a lib.

16
00:01:06.090 --> 00:01:07.970
So for instance,
let's say you have a common header,

17
00:01:07.970 --> 00:01:11.800
a common footer that needs to be
shared across multiple applications.

18
00:01:11.800 --> 00:01:17.650
This is very, very handy as well,
so we'll go ng g lib and

19
00:01:17.650 --> 00:01:20.660
we're going to call this one ui-login.

20
00:01:20.660 --> 00:01:23.890
So, this is where we'll
put our login screen,

21
00:01:23.890 --> 00:01:28.760
that you can now share across local
applications, and we're going to,

22
00:01:28.760 --> 00:01:33.170
again use that p for prefix, and ui.

23
00:01:33.170 --> 00:01:39.870
So, in an app, it's app in a lib, it could
be ui, or whatever you wanna call it.

24
00:01:39.870 --> 00:01:40.990
So, you know, if you work for

25
00:01:40.990 --> 00:01:44.700
a company you may wanna have
kind of a condensed prefix.

26
00:01:44.700 --> 00:01:47.160
So, whatever you wanna put here.

27
00:01:47.160 --> 00:01:48.380
I'm going with ui.

28
00:01:54.400 --> 00:01:56.320
&gt;&gt; Speaker 1: And
then we'll do just one more here.

29
00:02:00.480 --> 00:02:04.743
I'm calling this the toolbar p =ui.

30
00:02:04.743 --> 00:02:12.050
So we generated

31
00:02:12.050 --> 00:02:16.550
some libs.

32
00:02:16.550 --> 00:02:18.890
Let me just pull up the file exports so
that we can see.

33
00:02:21.530 --> 00:02:22.680
Zoom this out.

34
00:02:22.680 --> 00:02:25.489
So in our libs we have core-data, so
this is where we'll put our services.

35
00:02:26.530 --> 00:02:28.530
We have material,
which we've talked about, and

36
00:02:28.530 --> 00:02:31.530
then we have ui-login,
which is going to hold the login screen.

37
00:02:31.530 --> 00:02:33.690
And ui-toolbar,

38
00:02:33.690 --> 00:02:37.660
which is going to be kind of that top
header, that we'll eventually build out.

