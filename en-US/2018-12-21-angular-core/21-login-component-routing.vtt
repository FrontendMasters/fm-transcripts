WEBVTT

1
00:00:00.160 --> 00:00:04.970
&gt;&gt; Lukas Ruebbelke: So
a routing table is fairly straightforward.

2
00:00:04.970 --> 00:00:11.045
It consists of, in its most basic form,

3
00:00:11.045 --> 00:00:14.629
a path and a component.

4
00:00:16.571 --> 00:00:20.550
&gt;&gt; Lukas Ruebbelke: And
from here we could do something like.

5
00:00:21.570 --> 00:00:29.531
Let's go with LoginComponent initially
&gt;&gt; Lukas Ruebbelke: And

6
00:00:29.531 --> 00:00:33.156
because this is going to be our
default route, we're going to.

7
00:00:39.691 --> 00:00:43.520
&gt;&gt; Lukas Ruebbelke: Well, we'll leave this
here for now, but we'll also do path.

8
00:00:44.830 --> 00:00:47.476
And we're gonna put **.

9
00:00:48.900 --> 00:00:52.960
&gt;&gt; Lukas Ruebbelke: And what this is, this
is a route card, so if you go to a route

10
00:00:52.960 --> 00:00:58.960
that doesn't exist, then it's simply going
to redirect to wherever you would like.

11
00:00:58.960 --> 00:01:02.530
In this case,
we're going to go back to the root.

12
00:01:03.660 --> 00:01:07.402
And then from here, pathMatch full.

13
00:01:09.052 --> 00:01:10.170
&gt;&gt; Lukas Ruebbelke: This is a string.

14
00:01:10.170 --> 00:01:12.005
Here we go.

15
00:01:20.715 --> 00:01:22.224
&gt;&gt; Lukas Ruebbelke: And
just make sure that this built okay.

16
00:01:24.997 --> 00:01:27.380
&gt;&gt; Lukas Ruebbelke: So
it's looking for LoginComponent.

17
00:01:27.380 --> 00:01:30.283
So we'll just hop in here and
just check this real quick.

18
00:01:36.635 --> 00:01:42.693
&gt;&gt; Lukas Ruebbelke: Ui login and
we'll go to our lib.

19
00:01:42.693 --> 00:01:47.587
Our login module you could see here that.

20
00:01:50.056 --> 00:01:55.787
&gt;&gt; Lukas Ruebbelke: Our referencing
component that does not exist just yet.

21
00:01:55.787 --> 00:01:59.137
So I presume that I had
done that previously.

22
00:01:59.137 --> 00:02:03.427
So if we're going to generate

23
00:02:03.427 --> 00:02:08.917
a component in a library, then go ng,

24
00:02:08.917 --> 00:02:14.233
we just make a space here, ng g c, and

25
00:02:14.233 --> 00:02:20.430
we'll go with login for LoginComponent.

26
00:02:21.780 --> 00:02:27.120
And then we'll go, project=ui-login.

27
00:02:27.120 --> 00:02:31.770
Now, because there's a bit of
uncertainty about where this

28
00:02:31.770 --> 00:02:36.710
actually exist and
if this is going to work, let's go here.

29
00:02:36.710 --> 00:02:41.357
Do -d, and you can see that ui-login,

30
00:02:41.357 --> 00:02:45.466
lib, login, login_component.

31
00:02:45.466 --> 00:02:50.757
Everything that I was hoping
would happen was there, so.

32
00:02:50.757 --> 00:02:54.080
And g g, g for generate,
c for component login.

33
00:02:54.080 --> 00:02:58.230
And because I wannna put
in the ui-login lib,

34
00:02:58.230 --> 00:03:03.347
then I'm doing --project,
and that equals ui login.

35
00:03:03.347 --> 00:03:09.800
So I'm going to go ahead ahead and take
off the dry run tag and it should be here.

36
00:03:09.800 --> 00:03:10.830
Let's just double check.

37
00:03:10.830 --> 00:03:13.211
Login &gt; LoginModule.

38
00:03:16.301 --> 00:03:16.801
&gt;&gt; Lukas Ruebbelke: All right.

39
00:03:19.749 --> 00:03:21.024
&gt;&gt; Lukas Ruebbelke: Now,
it said this updated.

40
00:03:21.024 --> 00:03:21.580
Don't save.

41
00:03:21.580 --> 00:03:23.140
So apparently it's keeping the cache.

42
00:03:25.744 --> 00:03:28.721
&gt;&gt; Lukas Ruebbelke: Back into our module,
that's exactly what I expected.

43
00:03:30.670 --> 00:03:31.170
&gt;&gt; Lukas Ruebbelke: All right?

44
00:03:32.370 --> 00:03:34.294
And let's export this as well.

45
00:03:46.388 --> 00:03:47.760
&gt;&gt; Lukas Ruebbelke: LoginComponent.

46
00:03:47.760 --> 00:03:51.340
So we're just start to revisit
what we had seen earlier

47
00:03:53.580 --> 00:04:01.440
in our login lib in our module we've
just generated the LoginComponent.

48
00:04:01.440 --> 00:04:04.340
And we're adding it to our module.

49
00:04:04.340 --> 00:04:09.070
Now, one thing we need to do within
our variable, let's go ahead and

50
00:04:09.070 --> 00:04:16.740
export first and
foremost our UiLoginModule.

51
00:04:16.740 --> 00:04:19.590
And so,
this is in the root of this project.

52
00:04:21.380 --> 00:04:25.990
Under src, there's this index.ts,
which is a barrel roll.

53
00:04:25.990 --> 00:04:28.660
So I did have a question like,
what is a barrel roll?

54
00:04:29.780 --> 00:04:34.240
What this allows us to do is essentially
from a single file, export everything,

55
00:04:34.240 --> 00:04:37.000
so what we were doing
with our material module.

56
00:04:38.380 --> 00:04:40.000
So we'll take the LoginComponent.

57
00:04:40.000 --> 00:04:43.350
Generally what I'll do is I'll
actually import it like this, and

58
00:04:43.350 --> 00:04:46.780
then I'll just turn around and
change that to export.

59
00:04:48.880 --> 00:04:49.660
All right.

60
00:04:49.660 --> 00:04:53.580
So now this will exist and
should be available

61
00:04:53.580 --> 00:04:58.650
up in our AppRoutingModule.

62
00:04:58.650 --> 00:05:05.950
Let me make sure that also I have
the module in our main AppModule.

63
00:05:05.950 --> 00:05:10.302
So this is one of these things when
you start to break things out,

64
00:05:10.302 --> 00:05:14.427
you have to make sure that they
come back together properly.

65
00:05:23.243 --> 00:05:24.880
&gt;&gt; Lukas Ruebbelke: There we go.

66
00:05:24.880 --> 00:05:27.610
All right, so now.

67
00:05:27.610 --> 00:05:30.140
Working from the bottom up,
so now I'm at the top.

68
00:05:30.140 --> 00:05:34.668
I imported the UiLoginModule
into AppModule,

69
00:05:34.668 --> 00:05:39.420
which then now,
if I go to the AppRoutingModule,

70
00:05:39.420 --> 00:05:45.432
that this should be available here for
us to navigate towards.

71
00:05:50.214 --> 00:05:54.940
&gt;&gt; Lukas Ruebbelke: And so
let's go back here and see where we are.

72
00:05:58.276 --> 00:06:01.923
&gt;&gt; Lukas Ruebbelke: We just rebuild
this again, cuz I beg to differ.

73
00:06:01.923 --> 00:06:05.270
I think this does have an exported number.

74
00:06:11.535 --> 00:06:12.035
&gt;&gt; Lukas Ruebbelke: There we go.

75
00:06:17.774 --> 00:06:21.265
&gt;&gt; Lukas Ruebbelke: Now,
if I refresh this,

76
00:06:21.265 --> 00:06:26.820
we can see here that login works.

77
00:06:26.820 --> 00:06:28.014
So how is this getting in the page?

78
00:06:30.902 --> 00:06:31.702
&gt;&gt; Lukas Ruebbelke: Very good question.

79
00:06:34.535 --> 00:06:37.895
&gt;&gt; Lukas Ruebbelke: Now,
remember previously we had added in

80
00:06:37.895 --> 00:06:41.550
the projects.component via the selector.

81
00:06:42.870 --> 00:06:48.403
So if we go into our app.component.html,

82
00:06:48.403 --> 00:06:54.085
you notice down here, we have app-projects

83
00:06:54.085 --> 00:07:00.974
that's sitting right on
top of this router-outlet.

84
00:07:00.974 --> 00:07:06.403
Well, once we delete this,
the app-projects is

85
00:07:06.403 --> 00:07:11.447
no longer being hardcoded
into our template,

86
00:07:11.447 --> 00:07:15.602
or we're manually placing it there.

87
00:07:15.602 --> 00:07:19.942
Instead when a route is matched up,

88
00:07:19.942 --> 00:07:25.014
it will go and say, does this path exist?

89
00:07:25.014 --> 00:07:26.890
In this case its route.

90
00:07:26.890 --> 00:07:34.174
If so, take this component and
put it into your router-outlet.

91
00:07:36.190 --> 00:07:38.574
And so now you can see that.

92
00:07:39.756 --> 00:07:42.110
&gt;&gt; Lukas Ruebbelke: Here we go,
login works.

