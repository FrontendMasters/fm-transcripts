WEBVTT

1
00:00:00.560 --> 00:00:02.780
&gt;&gt; Lukas Ruebbelke: All right,
let's take this a step further, and

2
00:00:02.780 --> 00:00:08.050
I want to introduce debug element and
what that does?

3
00:00:10.080 --> 00:00:16.573
So, we'll go here, and
we'll go it should display primary color.

4
00:00:27.380 --> 00:00:31.485
&gt;&gt; Lukas Ruebbelke: And so what we need
to do is, within the component template,

5
00:00:31.485 --> 00:00:35.266
we need a way to access the template,
query the DOM, and

6
00:00:35.266 --> 00:00:39.149
pull whatever we want off of that,
and then evaluate it.

7
00:00:40.300 --> 00:00:44.390
&gt;&gt; Lukas Ruebbelke: And so specifically
what you want is we want this h1 tag.

8
00:00:45.550 --> 00:00:51.611
And so if we go over here, we can,
&gt;&gt; Lukas Ruebbelke: Declare

9
00:00:51.611 --> 00:00:57.383
an h1 constant, and
we can say debug element query and

10
00:00:57.383 --> 00:01:05.429
we're going to introduce a new utility
that we haven't seen yet called By.

11
00:01:05.429 --> 00:01:09.800
And it's not the one by Web driver
let me see that's what we want.

12
00:01:11.200 --> 00:01:18.970
And what this does is this allows
us to essentially query the DOM.

13
00:01:18.970 --> 00:01:24.774
So we're going to go BY.css and
we're looking for h1.

14
00:01:28.964 --> 00:01:32.330
&gt;&gt; Lukas Ruebbelke: And then within this,

15
00:01:32.330 --> 00:01:37.290
then we're going to go expect h1

16
00:01:37.290 --> 00:01:41.931
native element text to be red.

17
00:01:41.931 --> 00:01:50.382
Well, we'll do green just to make sure
that we're catching into the right thing.

18
00:01:53.013 --> 00:01:57.318
&gt;&gt; Lukas Ruebbelke: Expect
the undefined to be green, well,

19
00:01:57.318 --> 00:02:00.030
that is not encouraging.

20
00:02:01.460 --> 00:02:07.955
So debug element, query(By.css('hi')).

21
00:02:07.955 --> 00:02:13.012
Text, it's actually InnerText,

22
00:02:13.012 --> 00:02:20.600
silly me, all right,
let's save this again.

23
00:02:20.600 --> 00:02:23.180
It's still gonna fail, but for
an entirely different reason.

24
00:02:25.140 --> 00:02:27.138
Expect red to be green, but notice,

25
00:02:27.138 --> 00:02:30.372
we're able to evaluate that
by using debug element query.

26
00:02:30.372 --> 00:02:34.019
And then using BY to say, this is how
we want to query it, is with CSS.

27
00:02:36.212 --> 00:02:40.864
&gt;&gt; Lukas Ruebbelke: Back into our code,
let's change this to red and

28
00:02:40.864 --> 00:02:44.740
we're going to do one more test.

29
00:02:44.740 --> 00:02:49.630
And I think we will have a pretty

30
00:02:49.630 --> 00:02:54.230
firm grasp on how to test the components,
but the main

31
00:02:54.230 --> 00:02:58.609
thing here is that by using the test bed
in the component fixture is that they have

32
00:02:58.609 --> 00:03:03.320
exposed not only the component but
the element that the component life in.

33
00:03:03.320 --> 00:03:08.043
And so it's very easy to say I wanna
tested properly, this method, or I want to

34
00:03:08.043 --> 00:03:12.720
actually even query the DOM and ensure
that when I change this, this happen.

35
00:03:12.720 --> 00:03:18.943
So it should update,
&gt;&gt; Lukas Ruebbelke: Title,

36
00:03:18.943 --> 00:03:23.624
or it should update to new primaryColor.

37
00:03:28.329 --> 00:03:32.130
&gt;&gt; Lukas Ruebbelke: And
I'm going to copy this, paste this in.

38
00:03:33.800 --> 00:03:36.421
And now what we're going to do,

39
00:03:36.421 --> 00:03:41.385
is we're going to go component
primaryColor = 'black'.

40
00:03:43.581 --> 00:03:46.877
&gt;&gt; Lukas Ruebbelke: Now if I go here and
I set this to black,

41
00:03:46.877 --> 00:03:49.723
what do you say is gonna happen?

42
00:03:49.723 --> 00:03:52.114
[SOUND] No good.

43
00:03:54.682 --> 00:03:57.861
&gt;&gt; Lukas Ruebbelke: It's still red so
we go here and

44
00:03:57.861 --> 00:04:02.887
we're going to call fixture.detectChanges.

45
00:04:06.609 --> 00:04:07.120
&gt;&gt; Lukas Ruebbelke: We'll save the cell.

46
00:04:12.738 --> 00:04:15.715
&gt;&gt; Lukas Ruebbelke: Boom,
&gt;&gt; Lukas Ruebbelke: There we go.

47
00:04:18.082 --> 00:04:20.070
&gt;&gt; Lukas Ruebbelke: And so
if we go back into the code,

48
00:04:20.070 --> 00:04:23.990
let's just do a quick
summary of what's happened.

49
00:04:23.990 --> 00:04:28.990
And really I believe that
what we're going to see

50
00:04:28.990 --> 00:04:34.150
here really removes the barrier to
entry to testing your components.

51
00:04:34.150 --> 00:04:39.220
Because you get this for free and
I've only introduced just a couple

52
00:04:39.220 --> 00:04:42.200
additional things,
mainly the debug element.

53
00:04:42.200 --> 00:04:45.660
So, in your projects component,

54
00:04:45.660 --> 00:04:48.419
the first thing I do is I
create my local test members.

55
00:04:49.440 --> 00:04:53.450
As well as any kind of additional things
that I may want to reuse across test.

56
00:04:54.500 --> 00:05:00.940
Within this, the next thing that I do,
I instantiate the test bed here.

57
00:05:02.810 --> 00:05:07.471
But then what I'll also do is

58
00:05:07.471 --> 00:05:11.945
instantiate the fixture.

59
00:05:13.584 --> 00:05:18.964
&gt;&gt; Lukas Ruebbelke: Within this then
we can get a component instance or

60
00:05:18.964 --> 00:05:22.560
rather the component instance.

61
00:05:24.650 --> 00:05:30.702
Then you'll get the debug element aka,

62
00:05:30.702 --> 00:05:36.230
the element the component lives on.

63
00:05:36.230 --> 00:05:39.781
And then we're going to force, or

64
00:05:39.781 --> 00:05:46.165
rather,
&gt;&gt; Lukas Ruebbelke: Manually force,

65
00:05:46.165 --> 00:05:48.290
is that one l?

66
00:05:48.290 --> 00:05:48.790
I think so.

67
00:05:52.738 --> 00:05:54.611
&gt;&gt; Lukas Ruebbelke: Home schoolers,
you guys are sharp.

68
00:05:54.611 --> 00:05:59.993
[LAUGH] And then because this is in place,

69
00:05:59.993 --> 00:06:06.179
you are gonna wanna do
this in every before it.

70
00:06:06.179 --> 00:06:10.412
So you wanna basically before
every test turn on the module,

71
00:06:10.412 --> 00:06:15.400
spin it backup, that you can now
access properties on your component.

72
00:06:16.560 --> 00:06:19.669
You can call methods on your component,

73
00:06:19.669 --> 00:06:24.560
as well as you can query
the component using debug element.

74
00:06:24.560 --> 00:06:29.038
So de.query and then using By.css or
By and I think there is,

75
00:06:29.038 --> 00:06:33.255
let me click on here really quick,
so this is one of this and

76
00:06:33.255 --> 00:06:36.720
I've been doing this for
the last couple days.

77
00:06:39.180 --> 00:06:42.980
It's like what does this actually,
what else is available and so

78
00:06:42.980 --> 00:06:45.940
we're using CSS split
you can do directive.

79
00:06:49.790 --> 00:06:53.840
So there are two more, but
typically I'm gonna wanna do a CSS query.

80
00:06:55.230 --> 00:06:59.864
Having a jQuery for
quiet some time in a previous life,

81
00:06:59.864 --> 00:07:05.746
I think most people are comfortable
doing just the CSS query on that.

82
00:07:05.746 --> 00:07:10.501
As well as you can change something on

83
00:07:10.501 --> 00:07:16.550
a components then force
change detection and then

84
00:07:16.550 --> 00:07:22.610
based on the element that you
queried then evaluate that value.

