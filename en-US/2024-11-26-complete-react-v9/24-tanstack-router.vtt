WEBVTT

1
00:00:00.000 --> 00:00:05.858
&gt;&gt; Brian Holt: Let's talk
about TanStack Router.

2
00:00:05.858 --> 00:00:08.320
Somebody in chat right now is
just smashing their keyboard,

3
00:00:08.320 --> 00:00:09.391
what about React Router?

4
00:00:09.391 --> 00:00:14.286
Let me get to you first before you ask
me that question cuz I know someone is

5
00:00:14.286 --> 00:00:17.748
out there just immediately
just pouncing on that.

6
00:00:17.748 --> 00:00:21.027
What about React Router?

7
00:00:21.027 --> 00:00:22.389
What about it?

8
00:00:22.389 --> 00:00:23.341
That's it, though.

9
00:00:23.341 --> 00:00:26.753
Okay, now TanStack Router,
no, I'm just kidding.

10
00:00:26.753 --> 00:00:30.671
Why did we choose TanStack Router for
this particular course?

11
00:00:30.671 --> 00:00:34.528
Historically, I've taught React Router for
almost every iteration of this.

12
00:00:34.528 --> 00:00:37.398
There was one that I taught Reach Router,

13
00:00:37.398 --> 00:00:42.414
which then got folded into React Router,
so effectively React Router.

14
00:00:42.414 --> 00:00:44.543
Couple of thoughts here.

15
00:00:44.543 --> 00:00:48.189
If you want React Router,
you can go to v8 of this course.

16
00:00:48.189 --> 00:00:54.314
So it's just React V8 Holt courses.

17
00:00:54.314 --> 00:01:01.275
And you can see right here, React Router,
all of this is very applicable,

18
00:01:01.275 --> 00:01:06.262
up to date, feel free to pop in there and
look at that.

19
00:01:06.262 --> 00:01:10.593
The reason why I chose TanStack Router for
this particular course is that

20
00:01:10.593 --> 00:01:14.508
TanStack Router is very focused
on client-side React routing.

21
00:01:14.508 --> 00:01:17.773
That's what their goal is.,
that's their primary use case.

22
00:01:17.773 --> 00:01:23.485
And React Router has,
I'm gonna go with equal attention for

23
00:01:23.485 --> 00:01:29.982
server side routing, aka Remix,
right, and client side routing.

24
00:01:29.982 --> 00:01:32.615
It works very well in
client side situations.

25
00:01:32.615 --> 00:01:36.671
Feel free to still use React Router,
you'll get only slight side eye from me.

26
00:01:36.671 --> 00:01:41.487
No, I'm just kidding, it's great,
totally fun, and I've used it for years.

27
00:01:41.487 --> 00:01:46.386
But I appreciated the direction of
TanStack Router and their exclusive

28
00:01:46.386 --> 00:01:50.968
focus on client side routing,
which fit better with this course.

29
00:01:50.968 --> 00:01:54.867
So they work quite similar.

30
00:01:54.867 --> 00:01:59.729
So learning one, you're gonna get a kind
of a rough feel of what the other

31
00:01:59.729 --> 00:02:04.051
one works like anyway, but
that's why we chose it for this one.

32
00:02:04.051 --> 00:02:07.751
They've actually announced that
React Router v7 and Remix,

33
00:02:07.751 --> 00:02:11.183
they're converging,
they're gonna be the same thing.

34
00:02:11.183 --> 00:02:15.095
So remix will eventually
just be React Router again.

35
00:02:15.095 --> 00:02:19.191
So, hopefully that's enough of
an explanation of why I chose

36
00:02:19.191 --> 00:02:20.461
TanStack Router.

37
00:02:20.461 --> 00:02:23.956
It was a bit of a controversial decision,
but I think you'll be very

38
00:02:23.956 --> 00:02:27.653
pleasantly surprised that it's
a really good developer experience.

39
00:02:27.653 --> 00:02:29.780
I really like it,
I've been using it quite a bit.

40
00:02:33.562 --> 00:02:37.048
&gt;&gt; Brian Holt: So the docs are great,
feel free to pop in here and

41
00:02:37.048 --> 00:02:38.506
look at their docs.

42
00:02:38.506 --> 00:02:44.034
We are gonna also be using TanStack Query
today as well, it fit really well.

43
00:02:44.034 --> 00:02:49.268
TanStack Start is kind of their version
of Remix, Next, right, where it's kind

44
00:02:49.268 --> 00:02:54.200
of a more full-stack solution, or
maybe even closer, create React app.

45
00:02:54.200 --> 00:02:59.676
It's kind of their more opinionated
meta framework for TanStack.

46
00:02:59.676 --> 00:03:02.797
And then I've looked a little
bit at store as well.

47
00:03:02.797 --> 00:03:07.519
This is essentially their Redux,
which I have not used hardly at all,

48
00:03:07.519 --> 00:03:10.333
because I don't think I need it anymore.

49
00:03:10.333 --> 00:03:15.638
Anyway, they have a bunch of really
cool components, forms are interesting.

50
00:03:15.638 --> 00:03:19.668
I think Virtual is the one that allows
you to do, yeah, you have a massive UI,

51
00:03:19.668 --> 00:03:22.531
let's say you have to render
a million rows of a table.

52
00:03:22.531 --> 00:03:26.804
TanStack Virtual can help you
with stuff like that as well.

53
00:03:26.804 --> 00:03:31.070
In general, React has just a phenomenal
ecosystem of really cool stuff.

54
00:03:31.070 --> 00:03:34.156
And today we're gonna be using two
stuff from TanStack just because they

55
00:03:34.156 --> 00:03:35.782
happen to work really well together.

56
00:03:35.782 --> 00:03:38.372
But you should definitely go explore.

57
00:03:38.372 --> 00:03:39.852
If you have some idea of,

58
00:03:39.852 --> 00:03:43.455
man, I wish there was a code
editor that I could use in React.

59
00:03:43.455 --> 00:03:48.033
Lo and behold, there's definitely a code
editor that you can use in React.

60
00:03:48.033 --> 00:03:50.322
There's a text editor,
there's all sorts of cool stuff.

61
00:03:50.322 --> 00:03:52.121
We are using Router today.

62
00:03:52.121 --> 00:03:55.367
Other thing to mention here
is in intermediate React,

63
00:03:55.367 --> 00:03:58.122
we will be using something
more full-stack.

64
00:03:58.122 --> 00:04:01.065
Have not decided, but likely Next, right,

65
00:04:01.065 --> 00:04:05.642
just because again, that's kind of
the ones that people default to.

66
00:04:07.209 --> 00:04:08.347
&gt;&gt; Brian Holt: So in other words,

67
00:04:08.347 --> 00:04:11.630
we will not be using
TanStack Router in intermediate.

68
00:04:11.630 --> 00:04:16.570
So if that's something you're interested,
stay tuned, we'll talk about it.

69
00:04:16.570 --> 00:04:20.319
And again, I just wanna emphasize,
you're spoiled for choice here,

70
00:04:20.319 --> 00:04:22.016
there's a lot of good choices.

71
00:04:22.016 --> 00:04:24.624
Again, React Router, totally valid here.

72
00:04:24.624 --> 00:04:30.518
Okay, so open your project.

73
00:04:30.518 --> 00:04:34.139
You can pause your Vite server for
a second.

74
00:04:34.139 --> 00:04:40.380
And we are going to npm install

75
00:04:40.380 --> 00:04:50.122
@tanstack/react-router@1.65.0.

76
00:04:50.122 --> 00:04:54.073
There might be a new version
of it available, but again,

77
00:04:54.073 --> 00:04:57.130
this is all the versions
I tested together.

78
00:04:57.130 --> 00:05:03.076
I'm gonna do npm install -D.

79
00:05:03.076 --> 00:05:06.632
Again, I would just grab
these directly off the docs,

80
00:05:06.632 --> 00:05:09.038
cuz it's a mouthful to say out loud.

81
00:05:09.038 --> 00:05:11.855
But it's this one here.

82
00:05:11.855 --> 00:05:14.923
So TanStack,
we put into the normal dependencies,

83
00:05:14.923 --> 00:05:18.213
cuz it's actually gonna go
out to production, right?

84
00:05:18.213 --> 00:05:20.499
And these ones are dev tools.

85
00:05:20.499 --> 00:05:24.268
So there's a router plugin that
we're gonna provide to Vite, and

86
00:05:24.268 --> 00:05:27.380
there are dev tools that
we're gonna install as well.

87
00:05:27.380 --> 00:05:32.481
So there's actual tools they build into
it that make it easier to use, okay?

88
00:05:32.481 --> 00:05:33.901
So install both of those.

89
00:05:37.919 --> 00:05:42.091
&gt;&gt; Brian Holt: The nice thing about...
React does this, TanStack does this as well.

90
00:05:42.091 --> 00:05:45.039
Did you notice that all
the versions are the same?

91
00:05:45.039 --> 00:05:48.551
That's because whenever they cut
a new version of any of them,

92
00:05:48.551 --> 00:05:50.884
they just cut a new
version of all of them.

93
00:05:50.884 --> 00:05:55.770
And so if you're using 1.65.0, you just
know, I just grab all of those, and

94
00:05:55.770 --> 00:05:57.566
I know all those work together.

95
00:05:57.566 --> 00:05:59.961
So you don't have to worry about,
which one do I use with which?

96
00:06:03.809 --> 00:06:06.016
&gt;&gt; Brian Holt: It is kind of annoying,
though, cuz you end up with,

97
00:06:06.016 --> 00:06:08.930
there's a bunch of versions of them
that don't do anything, right?

98
00:06:08.930 --> 00:06:12.690
It's literally just another
cut of the same previous one.

99
00:06:12.690 --> 00:06:15.674
The cost you pay.

100
00:06:15.674 --> 00:06:22.118
Okay, let's go to our vite.config,

101
00:06:22.118 --> 00:06:28.954
and we need to import TanStackRouterVite

102
00:06:28.954 --> 00:06:36.389
from @tanstack/router-plugin/vite.

103
00:06:36.389 --> 00:06:39.365
So you can see there's a webpack
version of this as well,

104
00:06:39.365 --> 00:06:42.096
as well as rspack,
which I know less about that one.

105
00:06:42.096 --> 00:06:44.003
I think that's a Rust one.

106
00:06:44.003 --> 00:06:47.151
Anyway, definitely not
the point of this course.

107
00:06:49.285 --> 00:06:52.536
&gt;&gt; Brian Holt: Plugins,
be sure to add this before React here.

108
00:06:52.536 --> 00:06:57.184
We're just gonna put the same thing here,
just like that.

109
00:06:57.184 --> 00:07:01.797
This makes a TanStack Router aware of
basically where all your routes are going.

110
00:07:01.797 --> 00:07:07.984
It adds some like niceties, and I'll
show you some of those as we get going.

111
00:07:07.984 --> 00:07:14.182
One of them is you're gonna see generated
in your code is routetree.gen.ts.

112
00:07:18.615 --> 00:07:20.650
&gt;&gt; Brian Holt: It's nice that
this is a TypeScript file,

113
00:07:20.650 --> 00:07:23.022
because VS Code can read it and
read the types, and

114
00:07:23.022 --> 00:07:26.146
it's gonna just make all the type
completions work really well.

115
00:07:26.146 --> 00:07:30.360
This is a generated file from
TanStack Router that you'll

116
00:07:30.360 --> 00:07:32.344
import into your project.

117
00:07:32.344 --> 00:07:33.703
You do check it into Git.

118
00:07:33.703 --> 00:07:38.225
Generally, you don't check any generated
files into Git, but this one you do.

119
00:07:38.225 --> 00:07:41.322
And it'll just continue to get
regenerated as your project goes on.

120
00:07:41.322 --> 00:07:44.329
So inside of your source directory,

121
00:07:44.329 --> 00:07:48.797
we're going to create a new
directory inside of that.

122
00:07:48.797 --> 00:07:54.829
So let's just go ahead and click +,
I'm gonna just call it routes,

123
00:07:54.829 --> 00:07:59.415
and let's make a underscore,
underscore.

124
00:07:59.415 --> 00:08:03.448
So double underscore, or the dunder,
as I was informed, as it's called.

125
00:08:03.448 --> 00:08:09.155
I did not make that up,
the dunder, it's a Python thing,

126
00:08:09.155 --> 00:08:12.895
apparently, sprouty Pythonistas.

127
00:08:12.895 --> 00:08:18.186
so __root.jsx.

128
00:08:18.186 --> 00:08:22.263
This is basically, what is your root, or

129
00:08:22.263 --> 00:08:26.922
what is every route in
your page gonna have?

130
00:08:26.922 --> 00:08:29.757
So I mean, I guess it's probably
worth stepping back, is like,

131
00:08:29.757 --> 00:08:31.838
what are we doing [LAUGH]
here in the first place?

132
00:08:31.838 --> 00:08:35.815
We're making a single page application,
a SPA, right,

133
00:08:35.815 --> 00:08:38.340
that has multiple different pages.

134
00:08:38.340 --> 00:08:43.013
So it's gonna have an order page,
it's gonna have a past orders page, and

135
00:08:43.013 --> 00:08:45.100
it's gonna have a contact page.

136
00:08:45.100 --> 00:08:47.522
And we wanna be able to
route from page to page.

137
00:08:47.522 --> 00:08:49.690
You want them to have unique URLs.

138
00:08:49.690 --> 00:08:52.040
That's all the stuff that we're
gonna be working on right now.

139
00:08:52.040 --> 00:08:58.142
The __root.jsx file is basically like,
what code do all of these share together?

140
00:08:58.142 --> 00:09:03.701
What is the root of all of
these page files look like?

141
00:09:03.701 --> 00:09:05.427
So that's what we're gonna do here.

142
00:09:09.800 --> 00:09:13.580
&gt;&gt; Brian Holt: And
this is what we're gonna put in it.

143
00:09:13.580 --> 00:09:21.113
We're gonna say,
import { useState } from 'react',

144
00:09:21.113 --> 00:09:25.573
import { createRootRoute } from

145
00:09:25.573 --> 00:09:32.816
'@tanstack/react-router', as
well as Outlet.

146
00:09:35.700 --> 00:09:39.115
&gt;&gt; Brian Holt: We're gonna import
the TanStackRouterDevtools.

147
00:09:43.376 --> 00:09:46.869
&gt;&gt; Brian Holt: Pizza of the day.

148
00:09:46.869 --> 00:09:50.282
We're basically recreating
what was in app.jsx.

149
00:09:50.282 --> 00:09:53.472
We're gonna make app.jsx much smaller, and

150
00:09:53.472 --> 00:09:57.087
most of the stuff is
gonna live in the root.

151
00:09:57.087 --> 00:09:58.045
&gt;&gt; Brian Holt: Import the header.

152
00:10:05.211 --> 00:10:11.279
&gt;&gt; Brian Holt: And
import { cartContext } from 'contexts',

153
00:10:11.279 --> 00:10:14.606
export default function,

154
00:10:19.130 --> 00:10:21.759
&gt;&gt; Brian Holt: No, sorry,

155
00:10:21.759 --> 00:10:26.065
export const Route.

156
00:10:26.065 --> 00:10:29.865
It's just a convention with TanStack,
rather, that's gonna be looking for Route.

157
00:10:29.865 --> 00:10:33.066
So you do have to call it that.

158
00:10:33.066 --> 00:10:38.025
CreateRootRoute,
&gt;&gt; Brian Holt: And

159
00:10:38.025 --> 00:10:40.412
you just give it the component
that it expects.

160
00:10:40.412 --> 00:10:42.868
Now, you can get this just
a function directly here.

161
00:10:42.868 --> 00:10:45.861
You could make another function and
then reference that in there,

162
00:10:45.861 --> 00:10:47.097
that's totally up to you.

163
00:10:47.097 --> 00:10:48.766
With this one,
we're just gonna put it in there.

164
00:10:51.856 --> 00:10:56.915
&gt;&gt; Brian Holt: Okay, const cartHook.

165
00:10:56.915 --> 00:11:00.858
I mean, you can even just go into
app.jsx and get some of this, right?

166
00:11:00.858 --> 00:11:03.211
So basically everything
inside of strict mode.

167
00:11:08.098 --> 00:11:09.113
&gt;&gt; Brian Holt: Return.

168
00:11:11.257 --> 00:11:12.942
&gt;&gt; Brian Holt: And
then we have to make the cartHook up here.

169
00:11:23.360 --> 00:11:28.664
&gt;&gt; Brian Holt: Okay, cart provider,
put inside of a div, header.

170
00:11:28.664 --> 00:11:30.772
We're gonna replace order
with something else.

171
00:11:30.772 --> 00:11:34.361
We're gonna call this outlet.

172
00:11:34.361 --> 00:11:36.461
This is the part that's gonna
get swapped out, right?

173
00:11:36.461 --> 00:11:39.264
So this is actually what's going
to be rendered onto the page, and

174
00:11:39.264 --> 00:11:42.217
then we're gonna be able to switch
all of our different pages into this

175
00:11:42.217 --> 00:11:43.086
particular thing.

176
00:11:43.086 --> 00:11:47.323
So order is one of the pages, right, then
they're gonna click the About page, and

177
00:11:47.323 --> 00:11:48.849
the About page is gonna load.

178
00:11:48.849 --> 00:11:50.994
Then they're gonna click that and
it's gonna swap that out,

179
00:11:50.994 --> 00:11:52.616
and the outlet is where
that actually ends up.

180
00:11:52.616 --> 00:11:55.012
I'm gonna show you one more weird trick.

181
00:11:55.012 --> 00:11:59.070
We don't have to do it this way, but
I just wanted to show you how to do this.

182
00:11:59.070 --> 00:12:02.625
Let's say I wanted to,
down here at the bottom,

183
00:12:02.625 --> 00:12:05.327
put in tans to our dev tools, right?

184
00:12:05.327 --> 00:12:06.109
This is mad.

185
00:12:06.109 --> 00:12:07.703
Why is this mad?

186
00:12:07.703 --> 00:12:12.068
&gt;&gt; Speaker 2: Cuz you can only return one,
or one thing.

187
00:12:12.068 --> 00:12:16.837
&gt;&gt; Brian Holt: Yep,
it's the same reason I can't do something

188
00:12:16.837 --> 00:12:21.851
like this where I say,
const thing equals 1, 5.

189
00:12:21.851 --> 00:12:26.833
There are languages that let you do this,
right, but JavaScript is not among them.

190
00:12:26.833 --> 00:12:29.872
You can only return one thing at a time,
and

191
00:12:29.872 --> 00:12:33.426
this is returning two different things,
right?

192
00:12:33.426 --> 00:12:37.015
This is returning this and this,
because they're siblings and

193
00:12:37.015 --> 00:12:39.946
there's not one thing
encapsulating both of them.

194
00:12:39.946 --> 00:12:41.946
It won't let you do that.

195
00:12:41.946 --> 00:12:46.024
So if I wanted to have thing to be
both of these things, what would I do?

196
00:12:46.024 --> 00:12:48.660
Just make an array out of it, right?

197
00:12:48.660 --> 00:12:51.733
Now it's fine, cuz you have one array
that contains both those things.

198
00:12:51.733 --> 00:12:54.387
You can also do this with React, and

199
00:12:54.387 --> 00:12:58.202
it's with this weird syntax
that looks like this.

200
00:13:02.685 --> 00:13:05.729
&gt;&gt; Brian Holt: So
it's an empty tag, right?

201
00:13:05.729 --> 00:13:09.674
And then this is like
an empty closing tag.

202
00:13:09.674 --> 00:13:12.821
Remember, what does React
do in these situations?

203
00:13:12.821 --> 00:13:15.085
It just wraps stuff in arrays, right?

204
00:13:15.085 --> 00:13:20.804
So that's literally what this is, this is
just wrapping these two things in array.

205
00:13:20.804 --> 00:13:22.516
Make sense?

206
00:13:22.516 --> 00:13:25.466
Yeah, kinda strange, but
that is how that works.

207
00:13:25.466 --> 00:13:28.710
So if you find yourselves like, I wanna
return two things as a sibling at the top,

208
00:13:28.710 --> 00:13:30.878
that's when you're gonna
use something like this.

209
00:13:30.878 --> 00:13:33.257
&gt;&gt; Speaker 3: I noticed we lost
strict mode in the transition.

210
00:13:33.257 --> 00:13:36.062
I'm not sure if that's important for you.

211
00:13:36.062 --> 00:13:37.576
&gt;&gt; Brian Holt: We're
gonna leave that in app.

212
00:13:38.880 --> 00:13:40.840
&gt;&gt; Speaker 3: Ahaa.

213
00:13:40.840 --> 00:13:43.331
&gt;&gt; Brian Holt: But that is astute.

214
00:13:43.331 --> 00:13:49.137
So let's head over to app.jsx and
make our modifications over here as well.

215
00:13:49.137 --> 00:13:52.410
So we don't useState anymore,

216
00:13:52.410 --> 00:13:57.623
cuz we're not gonna be
doing that in here anymore,

217
00:13:57.623 --> 00:14:01.392
we're doing that in the RootRoute.

218
00:14:01.392 --> 00:14:02.721
We need to createRoot, that's good.

219
00:14:02.721 --> 00:14:06.630
We don't need PizzaOfTheDay,
we don't need Order, we don't need Header,

220
00:14:06.630 --> 00:14:08.656
all that stuff exists in our RootRoute.

221
00:14:08.656 --> 00:14:12.089
We don't need that.

222
00:14:12.089 --> 00:14:17.221
So we do need our import
{ RouterProvider }

223
00:14:17.221 --> 00:14:22.493
from "@tanstack/react-router", and

224
00:14:22.493 --> 00:14:29.412
we also need a createRouter function,
this one, okay?

225
00:14:29.412 --> 00:14:30.768
And then the other thing,

226
00:14:30.768 --> 00:14:34.418
we need to use that generated file
that it's about to generate for us.

227
00:14:34.418 --> 00:14:38.603
So just trust me on this one that
there's no file here now, but

228
00:14:38.603 --> 00:14:40.947
it will be by the time that we care.

229
00:14:40.947 --> 00:14:45.901
Import { routeTree } from this

230
00:14:45.901 --> 00:14:54.530
soon-to-be-generated './routeTree.gen'.

231
00:14:54.530 --> 00:14:58.093
So again, it doesn't exist yet, but
you'll see this show up shortly.

232
00:15:00.417 --> 00:15:06.813
&gt;&gt; Brian Holt: Const router = createRouter

233
00:15:06.813 --> 00:15:10.654
with routeTree.

234
00:15:14.566 --> 00:15:18.409
&gt;&gt; Brian Holt: Get rid of this
cartHook in here, get rid of that.

235
00:15:18.409 --> 00:15:23.188
In fact, most of stuff can be
got given away or just deleted.

236
00:15:23.188 --> 00:15:24.899
We'll leave StrictMode in here.

237
00:15:24.899 --> 00:15:28.215
You might ask why,
it could be moved to the other one,

238
00:15:28.215 --> 00:15:32.068
but my tendency is to wrap
everything in StrictMode, right?

239
00:15:32.068 --> 00:15:34.707
So that's why.

240
00:15:34.707 --> 00:15:39.142
And then all we have to do
here is say RouterProvider

241
00:15:39.142 --> 00:15:42.658
router={router}, and that's it.

242
00:15:42.658 --> 00:15:45.358
TanStack Router handles the rest of it for
us.

243
00:15:45.358 --> 00:15:50.186
Right now we have order.jsx
as just a component.

244
00:15:50.186 --> 00:15:53.894
In reality, it's kind of a route, right?

245
00:15:53.894 --> 00:15:56.985
Let me assert, that is, it is a route.

246
00:15:56.985 --> 00:16:00.127
So we need to go make it around.

247
00:16:00.127 --> 00:16:05.179
So we're gonna move order into routes.

248
00:16:05.179 --> 00:16:10.815
We're gonna move, you can say,
update the imports, yes, please.

249
00:16:10.815 --> 00:16:14.455
Notice that it's now going for,
instead of ./, it's doing ../.

250
00:16:14.455 --> 00:16:17.324
That's the updates that it did for us.

251
00:16:19.738 --> 00:16:22.193
&gt;&gt; Brian Holt: And
we're gonna rename this.

252
00:16:22.193 --> 00:16:26.465
And this is their convention, I would
have been tempted to name this with

253
00:16:26.465 --> 00:16:29.773
an uppercase, but they don't,
order, lowercase o.

254
00:16:29.773 --> 00:16:32.662
And we're gonna call it lazy.jsx.

255
00:16:35.161 --> 00:16:40.298
&gt;&gt; Brian Holt: This is
signifying to TanStack Router.

256
00:16:40.298 --> 00:16:42.509
I want you to lazy-load this.

257
00:16:42.509 --> 00:16:44.727
So you just put it in the name, and
it's gonna know exactly what you want.

258
00:16:44.727 --> 00:16:48.764
It's like, okay, I'm gonna split
the route or the package here, and

259
00:16:48.764 --> 00:16:50.120
I'll load this later.

260
00:16:50.120 --> 00:16:53.597
Whenever the user requests the order page,
they'll get this, but

261
00:16:53.597 --> 00:16:56.346
they won't load it until then,
which is kinda cool.

262
00:16:56.346 --> 00:16:58.786
If I didn't put that there and
it was just order.jsx,

263
00:16:58.786 --> 00:17:01.186
it would just load it
immediately every single time.

264
00:17:01.186 --> 00:17:04.749
In our particular case, our components and
our routes are fairly small.

265
00:17:04.749 --> 00:17:06.962
I probably wouldn't lazy-load these,

266
00:17:06.962 --> 00:17:10.068
I probably would just load
everything every single time.

267
00:17:10.068 --> 00:17:12.308
But if you're building an app of any size,

268
00:17:12.308 --> 00:17:15.618
these routes tend to get a little
bit bigger every single time.

269
00:17:15.618 --> 00:17:17.360
So in that case,
I probably would lazy-load,

270
00:17:17.360 --> 00:17:20.331
which is why I'm gonna show you today
everything we're just gonna lazy-load.

