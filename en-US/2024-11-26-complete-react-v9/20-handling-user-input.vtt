WEBVTT

1
00:00:00.170 --> 00:00:02.677
&gt;&gt; Brian Holt: So we wanna have a cart.

2
00:00:02.677 --> 00:00:06.080
Right now, we have a pizza type.

3
00:00:06.080 --> 00:00:09.013
We have a pepperoni that's kind of
like displays to one that you have

4
00:00:09.013 --> 00:00:09.840
selected there.

5
00:00:09.840 --> 00:00:15.269
Now we wanna have a cart over here where
basically people can click add to cart,

6
00:00:15.269 --> 00:00:18.573
and it's not gonna just hard refresh the page right?

7
00:00:18.573 --> 00:00:20.024
Go to Order.jsx.

8
00:00:20.024 --> 00:00:25.621
We're going to import Cart from ./cart,

9
00:00:25.621 --> 00:00:30.924
which we are going to build momentarily.

10
00:00:33.034 --> 00:00:39.140
One more hook here,
const [cart setCart] = useState

11
00:00:39.140 --> 00:00:44.408
other empty array and
then on the form here.

12
00:00:44.408 --> 00:00:47.347
So form onSubmit,

13
00:00:47.347 --> 00:00:52.859
we want to write a function here with

14
00:00:52.859 --> 00:00:57.862
the event e.preventDefault().

15
00:00:57.862 --> 00:01:01.578
That's probably not gonna be surprising to
anyone that's written form code before.

16
00:01:01.578 --> 00:01:03.527
It prevents it from being submitted,
right?

17
00:01:05.737 --> 00:01:11.377
And then we're just gonna setCart and
we're gonna say ...cart.

18
00:01:13.077 --> 00:01:16.947
And then we're just gonna add
the pizza that we, they have selected.

19
00:01:16.947 --> 00:01:23.767
So it's selectedpizza,
size is pizzaSize and price.

20
00:01:25.705 --> 00:01:27.917
Yeah, it's bad right now because
I don't have a cart component.

21
00:01:27.917 --> 00:01:30.147
That's not real yet, that's fine.

22
00:01:30.147 --> 00:01:34.967
So event, we're used to that,
preventDefault.

23
00:01:34.967 --> 00:01:37.227
This is another spread operator.

24
00:01:37.227 --> 00:01:41.010
So the other thing we could have
done is like cart.concat, right?

25
00:01:41.010 --> 00:01:46.100
And then put in that, or
cart.push would have worked as well.

26
00:01:46.100 --> 00:01:48.180
This is just another way of doing
it called the spread operator.

27
00:01:48.180 --> 00:01:51.645
I say like, hey,
spread the entire cart before this and

28
00:01:51.645 --> 00:01:54.470
then add one more object after that.

29
00:01:54.470 --> 00:01:56.160
That's all that does.

30
00:01:56.160 --> 00:01:58.494
Someone might ask me, hey,

31
00:01:58.494 --> 00:02:04.245
why don't you just put an onClick
here instead of a onSubmit up there?

32
00:02:04.245 --> 00:02:08.912
You can, but let me tell you
why I think this is better.

33
00:02:10.732 --> 00:02:14.548
What happens if you have a text input and
someone hits Enter?

34
00:02:14.548 --> 00:02:17.192
What happens?

35
00:02:17.192 --> 00:02:22.151
If you have just an onClick handler,
nothing happens.

36
00:02:22.151 --> 00:02:24.650
And people expect when they're
on a form and they hit Enter,

37
00:02:24.650 --> 00:02:26.941
that it submits the form, right?

38
00:02:26.941 --> 00:02:30.961
So that's why onSubmit is better,
because it handles both of those cases.

39
00:02:30.961 --> 00:02:34.445
Generally speaking, it's just more
accessible that like screen readers and

40
00:02:34.445 --> 00:02:36.989
tools like that are very good
at handling form elements.

41
00:02:36.989 --> 00:02:40.039
And so if you just kind of hook into
the way browsers normally work,

42
00:02:40.039 --> 00:02:42.231
you get kind of all the accessibility for
free.

43
00:02:45.029 --> 00:02:49.006
&gt;&gt; Brian Holt: Okay, and then just
inside the last closing div here,

44
00:02:49.006 --> 00:02:51.431
we're gonna put one more thing.

45
00:02:51.431 --> 00:02:55.592
We're gonna say if it's loading,

46
00:02:55.592 --> 00:02:59.759
then we're gonna say h2 loading.

47
00:02:59.759 --> 00:03:04.497
And if it's not loading,
then we're gonna say cart is

48
00:03:04.497 --> 00:03:08.215
assigned cart cart cart, cart cart cart.

49
00:03:09.455 --> 00:03:12.695
The cart component, the property that
we're gonna pass into it is the cart.

50
00:03:14.115 --> 00:03:15.772
And then we need to go
build the cart after this.

51
00:03:22.638 --> 00:03:26.994
&gt;&gt; Brian Holt: Okay, so, please,

52
00:03:26.994 --> 00:03:33.558
if you will, make a Cart.jsx.

53
00:03:33.558 --> 00:03:34.958
Let's make another price formatter.

54
00:03:36.278 --> 00:03:41.008
We might be running into
the territory of wet write thrice.

55
00:03:42.932 --> 00:03:46.459
So I might end up making a function, if I
was, this was my project I might end up

56
00:03:46.459 --> 00:03:49.782
making a function that like handled that,
or it could be a hook.

57
00:03:49.782 --> 00:03:52.057
It doesn't have to be a hook,
but it could be a hook.

58
00:03:52.057 --> 00:03:54.032
Because it's just literally
just one function.

59
00:03:55.182 --> 00:03:59.125
The only thing is like, imagine if you
were doing internationalization and

60
00:03:59.125 --> 00:04:03.314
you did want to switch between currencies,
you'd have to go change this in every

61
00:04:03.314 --> 00:04:06.475
single place, whereas if it was one place,
you could do it.

62
00:04:06.475 --> 00:04:08.995
But no one does that.

63
00:04:08.995 --> 00:04:10.605
Doesn't seem like a real thing people do.

64
00:04:10.605 --> 00:04:11.815
Just kidding, people do that all the time.

65
00:04:11.815 --> 00:04:12.955
That was my job at Netflix.

66
00:04:14.745 --> 00:04:21.045
Currency and then style.

67
00:04:21.045 --> 00:04:25.734
What am I doing style is currency and

68
00:04:25.734 --> 00:04:28.709
then currency is USD.

69
00:04:32.109 --> 00:04:37.520
&gt;&gt; Brian Holt: Okay, export default

70
00:04:37.520 --> 00:04:41.512
function cart.

71
00:04:41.512 --> 00:04:43.051
Now I could put props here.

72
00:04:43.051 --> 00:04:46.977
But you can also destructure,
because that can be fun sometimes, so

73
00:04:46.977 --> 00:04:49.493
we're gonna put cart and checkout in here.

74
00:04:54.003 --> 00:04:55.303
Let total = 0.

75
00:04:55.303 --> 00:05:00.352
We need to tally up how
much stuff is in our cart,

76
00:05:00.352 --> 00:05:04.663
so let's do that first, for let i = 0.

77
00:05:06.943 --> 00:05:12.103
i is less than cart.length, i++.

78
00:05:14.163 --> 00:05:18.978
And then we're just gonna say

79
00:05:18.978 --> 00:05:23.215
const current = cart[i] and

80
00:05:23.215 --> 00:05:29.380
total += current.pizza.sizes

81
00:05:29.380 --> 00:05:32.280
[current.size].

82
00:05:39.616 --> 00:05:47.187
&gt;&gt; Brian Holt: Okay,
&gt;&gt; Brian Holt: Someone might say,

83
00:05:47.187 --> 00:05:49.349
hey Brian,
why don't you use a reduce here?

84
00:05:49.349 --> 00:05:51.579
And to them I say, go back to Haskell.

85
00:05:53.479 --> 00:05:57.126
A former Brian in a former life would have
written this as a reduce, but I realized

86
00:05:57.126 --> 00:06:00.293
way later that I was writing reduces
because I thought they were fun and

87
00:06:00.293 --> 00:06:02.079
not because I thought they were clear.

88
00:06:03.459 --> 00:06:06.595
And so when I run into a lot of maps and
reduces and stuff like that,

89
00:06:06.595 --> 00:06:09.863
I tend to just like, no, this is
probably just easier as a for loop.

90
00:06:09.863 --> 00:06:12.253
It makes it more readable to not just you,
but to everyone around you.

91
00:06:13.613 --> 00:06:15.703
So that is why I do not
write this as a reduce.

92
00:06:17.573 --> 00:06:21.715
There's something extremely satisfying
like writing like those long chains.

93
00:06:21.715 --> 00:06:26.189
But usually that satisfaction is smugness
and not actually because it's good code.

94
00:06:27.359 --> 00:06:33.949
Anyway, div className="cart".

95
00:06:33.949 --> 00:06:37.480
The h2 we're gonna put here is Cart and

96
00:06:37.480 --> 00:06:42.729
then we're gonna do a ul
because it's an unordered list.

97
00:06:44.089 --> 00:06:49.838
And then we're gonna say cart.map.

98
00:06:49.838 --> 00:06:52.464
And then we're gonna do (item, index).

99
00:06:55.852 --> 00:06:59.550
&gt;&gt; Brian Holt: And we're gonna do the
forbidden thing that I told you not to do,

100
00:06:59.550 --> 00:07:02.922
where we're gonna use index as the key,
why?

101
00:07:02.922 --> 00:07:07.425
Because none of the things in our
cart are guaranteed unique, right?

102
00:07:07.425 --> 00:07:11.923
You can have three medium pepperoni
pizzas, in which case, what would be,

103
00:07:11.923 --> 00:07:13.905
there is no thing there, right?

104
00:07:13.905 --> 00:07:16.782
So this is a specific case where
using the index as the key,

105
00:07:16.782 --> 00:07:18.266
is what you're supposed to do

106
00:07:27.400 --> 00:07:30.964
&gt;&gt; Brian Holt: Okay, span className

107
00:07:30.964 --> 00:07:35.279
= size, item.size, and

108
00:07:35.279 --> 00:07:39.030
we have three of these,

109
00:07:39.030 --> 00:07:44.281
I'm gonna make that one type, so

110
00:07:44.281 --> 00:07:50.677
this has to be .pizza.name, I guess.

111
00:07:50.677 --> 00:07:51.597
Okay, that's fine.

112
00:07:51.597 --> 00:07:53.717
And this has to be price.

113
00:07:53.717 --> 00:07:59.532
So you have size, size, pizza.name,

114
00:07:59.532 --> 00:08:03.302
and item.price, cool?

115
00:08:07.944 --> 00:08:14.005
&gt;&gt; Brian Holt: Then we're
gonna do <p>. Total is,

116
00:08:14.005 --> 00:08:21.412
and we're gonna use our international

117
00:08:21.412 --> 00:08:26.359
format total close that.

118
00:08:26.359 --> 00:08:32.126
And then we're gonna write another button,
onClick.

119
00:08:32.126 --> 00:08:34.146
Here we're gonna use OnClick
because this isn't a form.

120
00:08:34.146 --> 00:08:36.716
There's nothing else to
add to the cart form.

121
00:08:36.716 --> 00:08:38.956
So an OnClick here is
the correct thing to do.

122
00:08:38.956 --> 00:08:43.200
And we're gonna call this checkout.

123
00:08:43.200 --> 00:08:45.740
We need to go provide what
checkout is gonna do.

124
00:08:45.740 --> 00:08:49.600
But you'll see this kind of passing down
of functions from parent to child fairly

125
00:08:49.600 --> 00:08:50.290
frequently.

126
00:08:50.290 --> 00:08:53.522
You're basically saying like,
hey component, whenever something happens,

127
00:08:53.522 --> 00:08:54.620
just call me back, right?

128
00:08:54.620 --> 00:08:56.660
Just call this function and
I'll take care of it.

129
00:08:58.300 --> 00:09:00.820
So this cart component is kind
of a dumb component, right?

130
00:09:00.820 --> 00:09:04.047
It doesn't really have much logic
unto itself, it just display stuff.

131
00:09:05.317 --> 00:09:07.130
Some people will take
this to the extreme and

132
00:09:07.130 --> 00:09:09.972
say like there's display components and
functional components and

133
00:09:09.972 --> 00:09:12.336
they separate everything into display and
functional.

134
00:09:12.336 --> 00:09:15.017
I think that is silly and I don't do it.

135
00:09:15.017 --> 00:09:16.977
But someone does and they are silly.

136
00:09:16.977 --> 00:09:19.847
Yeah, so we did an export default.

137
00:09:19.847 --> 00:09:21.963
So that is our cart that
seems like it's working okay.

138
00:09:21.963 --> 00:09:25.839
The checkout doesn't do anything yet
so this will be an undefined function.

139
00:09:25.839 --> 00:09:30.568
So if you click it,
you're gonna cause an error or

140
00:09:30.568 --> 00:09:34.183
we have to add a cart here or checkout.

141
00:09:34.183 --> 00:09:39.769
Okay, and looks like I put
the cart in the wrong place.

142
00:09:39.769 --> 00:09:41.487
Let's go figure out why
that's in the wrong place.

143
00:09:44.386 --> 00:09:46.775
&gt;&gt; Brian Holt: But
this looks right, I think, so far.

144
00:09:48.715 --> 00:09:52.485
So let's go back to order and
figure out where this was supposed to be.

145
00:09:53.875 --> 00:09:54.605
CSS is easy.

146
00:09:54.605 --> 00:09:56.685
I don't know if anyone told you that.

147
00:09:56.685 --> 00:09:59.708
This is why this CSS is actually terrible,
because it's so

148
00:09:59.708 --> 00:10:02.375
reliant on structure to
get the correct selectors.

149
00:10:04.145 --> 00:10:08.093
Yeah, I just wrapped everything
here in an order page,

150
00:10:08.093 --> 00:10:12.301
right there and then I put my
cart just inside that last div.

151
00:10:12.301 --> 00:10:16.287
And that should get everything
all laid out nicely.

152
00:10:16.287 --> 00:10:17.207
We're getting close here.

153
00:10:20.657 --> 00:10:24.496
We should be able to add to cart,
okay, no?

154
00:10:24.496 --> 00:10:33.083
So if I click add to cart,
&gt;&gt; Brian Holt: Notice

155
00:10:33.083 --> 00:10:35.723
that we get stuff that
starts getting added,

156
00:10:35.723 --> 00:10:39.684
the total is being generated correctly,
there's no spaces here,

157
00:10:39.684 --> 00:10:44.148
which probably seems like I might have
messed up some class name somewhere.

158
00:10:44.148 --> 00:10:49.091
Okay, so we're gonna, the cart page, and
just after each one of these, we're just

159
00:10:49.091 --> 00:10:53.777
gonna add a dash, and that's how I made
these like separate a little bit better.

