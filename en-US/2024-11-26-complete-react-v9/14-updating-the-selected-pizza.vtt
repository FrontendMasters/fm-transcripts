WEBVTT

1
00:00:00.340 --> 00:00:03.348
&gt;&gt; Brian Holt: Just to be facetious for
a second,

2
00:00:03.348 --> 00:00:07.720
let's just introduce
an artificial await here.

3
00:00:08.870 --> 00:00:10.975
And I can never remember how to write
this off the top of my head, so

4
00:00:10.975 --> 00:00:12.980
I'm going to ask Copala to do it.

5
00:00:12.980 --> 00:00:15.940
Wait here for 10 seconds.

6
00:00:15.940 --> 00:00:18.451
It creates a new promise,
it waits for 10 seconds, and

7
00:00:18.451 --> 00:00:21.086
then after 10 seconds it resolves it.

8
00:00:21.086 --> 00:00:24.656
So now, if you look at this, it's going to
be empty for the first 10 seconds, right?

9
00:00:26.046 --> 00:00:29.436
Cuz it's it got the information back,
cuz it's all local host, right?

10
00:00:29.436 --> 00:00:31.486
So it's all instantaneous.

11
00:00:31.486 --> 00:00:34.674
And then after that a while,
it comes back, and

12
00:00:34.674 --> 00:00:38.270
then it will finally set
the thing to be what you need.

13
00:00:40.376 --> 00:00:41.806
&gt;&gt; Brian Holt: Make sense?

14
00:00:44.229 --> 00:00:49.844
&gt;&gt; Brian Holt: All right, so that is
our fetch pizza, that's our effect.

15
00:00:49.844 --> 00:00:52.315
That's probably the most
interesting part of this.

16
00:00:55.522 --> 00:00:58.614
&gt;&gt; Brian Holt: Now just for fun,
we have our pizza down here.

17
00:00:58.614 --> 00:01:00.634
Let's pass our selected pizza in.

18
00:01:00.634 --> 00:01:06.378
So we have selectedPizza.name,

19
00:01:06.378 --> 00:01:11.925
selectedPizza.description,

20
00:01:11.925 --> 00:01:18.468
and I think it selectedPizza.image.

21
00:01:24.569 --> 00:01:25.659
&gt;&gt; Brian Holt: See if that works.

22
00:01:25.659 --> 00:01:29.297
So you have pepperoni here, and

23
00:01:29.297 --> 00:01:35.599
notice it's changing the title and
the description.

24
00:01:35.599 --> 00:01:37.422
We're not changing the price yet

25
00:01:37.422 --> 00:01:40.946
because we haven't put that part
into our pizza component yet.

26
00:01:44.189 --> 00:01:46.002
&gt;&gt; Brian Holt: There you go,
kind of cool, right?

27
00:01:46.002 --> 00:01:47.666
So now you can see how effect and

28
00:01:47.666 --> 00:01:51.577
state kind of layer on to each other
to create this kind of interactivity.

29
00:01:58.750 --> 00:01:59.953
&gt;&gt; Brian Holt: One more
stupid example this,

30
00:01:59.953 --> 00:02:02.642
let's just do the pizza size one up
there that we were talking about.

31
00:02:04.262 --> 00:02:07.207
pizzaSize
here in useEffect.

32
00:02:07.207 --> 00:02:10.807
I'm gonna pop open my dev tools here.

33
00:02:12.137 --> 00:02:13.808
Notice that now every time that

34
00:02:13.808 --> 00:02:18.700
I click this,
&gt;&gt; Brian Holt: I'm getting another

35
00:02:18.700 --> 00:02:20.707
Ajax request to the API, right?

36
00:02:20.707 --> 00:02:23.025
Because it's just watching to
see whenever that changes.

37
00:02:23.025 --> 00:02:27.473
But notice if I change this,
let me trash this so you can see.

38
00:02:31.118 --> 00:02:33.184
&gt;&gt; Brian Holt: Not doing it, right?

39
00:02:33.184 --> 00:02:35.333
Because we're not changing
based on pizza type,

40
00:02:35.333 --> 00:02:37.183
we're only changing based on pizza size.

41
00:02:44.166 --> 00:02:47.718
&gt;&gt; Brian Holt: If anything changes,
give it no array, and

42
00:02:47.718 --> 00:02:54.157
it's going to get real mad, and
notice that DDoS yourself, right?

43
00:02:54.157 --> 00:02:55.695
Why am I DDoSing it myself?

44
00:02:55.695 --> 00:02:58.517
Cuz it's re-rendering a lot, right?

45
00:03:00.437 --> 00:03:03.438
But look at my API here,
it's just going hog wild.

46
00:03:03.438 --> 00:03:08.206
Let's, my God, please stop [LAUGH].

47
00:03:08.206 --> 00:03:14.258
All right, so why is it doing that?

48
00:03:14.258 --> 00:03:15.428
What am I doing right here?

49
00:03:17.068 --> 00:03:20.451
I'm changing the state,
which causes a re-render,

50
00:03:20.451 --> 00:03:23.842
which schedules an effect,
which changes the state.

51
00:03:23.842 --> 00:03:26.004
Which schedules an effect,
which changes the state,

52
00:03:26.004 --> 00:03:27.467
which schedules an effect, right?

53
00:03:29.782 --> 00:03:30.957
&gt;&gt; Brian Holt: That's why.

54
00:03:31.997 --> 00:03:34.149
&gt;&gt; Brian Holt: So if you find
yourself doing something like that,

55
00:03:34.149 --> 00:03:35.909
you probably forgot an array somewhere.

56
00:03:39.000 --> 00:03:43.372
&gt;&gt; Brian Holt: A general useful rule
of thumb is, inside of your effect,

57
00:03:43.372 --> 00:03:49.081
you refer to a piece of state, it should
probably be tracked inside of your,

58
00:03:49.081 --> 00:03:53.023
they call this your dependencies, right?

59
00:03:53.023 --> 00:03:54.152
Your dependent state.

60
00:03:57.209 --> 00:04:00.644
&gt;&gt; Brian Holt: So let's say I had to
call pizza types with pizzaSize for

61
00:04:00.644 --> 00:04:04.750
whatever reason, then you would
normally see pizzaSize go here.

62
00:04:05.910 --> 00:04:08.130
That's just kind of
a useful rule of thumb.

63
00:04:10.850 --> 00:04:15.720
And again, you can put as many
things in here as you want.

64
00:04:15.720 --> 00:04:23.043
So I have this price here and I want to
show the correct price from my order.jsx.

65
00:04:24.609 --> 00:04:30.479
So if we look here again at my response,
you can see here I have the sizes.

66
00:04:31.669 --> 00:04:35.634
So this is saying the barbecue chicken,
the small is 12.75,

67
00:04:35.634 --> 00:04:38.682
the medium is 16.75 and the large is 20.75.

68
00:04:38.682 --> 00:04:41.179
And I wanna display the right price here.

69
00:04:43.589 --> 00:04:49.921
So what I'm gonna do is I'm gonna say, I'm
just gonna display price here, like that.

70
00:04:51.911 --> 00:04:57.180
And then price up here,
I'm gonna say price is equal to format,

71
00:04:57.180 --> 00:05:01.375
and I have to do this
underneath selectedPizza, so

72
00:05:01.375 --> 00:05:04.514
it has to be underneath here, sorry.

73
00:05:07.262 --> 00:05:12.192
&gt;&gt; Brian Holt: selectedPizza.size,
and then we're gonna give it

74
00:05:12.192 --> 00:05:16.574
the pizza size that's been selected,
so right

75
00:05:16.574 --> 00:05:24.007
there,
&gt;&gt; Brian Holt: I

76
00:05:24.007 --> 00:05:27.615
guess I'm gonna just put that in there,
and

77
00:05:27.615 --> 00:05:31.429
then it only gets set
with the selected pizza.

78
00:05:34.116 --> 00:05:35.966
&gt;&gt; Brian Holt: Let me
make sure that's correct.

79
00:05:35.966 --> 00:05:37.314
Nope, I broke it, what did I do?

80
00:05:41.450 --> 00:05:43.523
&gt;&gt; Brian Holt: selectedPizza
is undefined.

81
00:05:49.522 --> 00:05:54.038
&gt;&gt; Brian Holt: Yeah, so
this is just good for us to debug.

82
00:05:54.038 --> 00:05:55.978
Why is selectedPizza undefined?

83
00:05:57.018 --> 00:06:00.727
So first of all, hot module refresh
with is a wonderful feature,

84
00:06:00.727 --> 00:06:02.759
that code gets subbed in on the fly.

85
00:06:03.910 --> 00:06:06.680
But that's why it was working before and
it's not working now, right?

86
00:06:07.710 --> 00:06:11.830
Cuz selectedPizza is not
real at this point, right?

87
00:06:11.830 --> 00:06:16.960
So if you try and set it to be something
else, it's not gonna work, right?

88
00:06:16.960 --> 00:06:20.619
So the way I'm gonna do this
is I'm gonna say loading.

89
00:06:23.729 --> 00:06:29.560
&gt;&gt; Brian Holt: And if it's loading,
I'm just gonna show loading pizza lol.

90
00:06:31.890 --> 00:06:34.611
And if it's not loading,
then I'm just gonna show my pizza.

91
00:06:43.762 --> 00:06:45.694
&gt;&gt; Brian Holt: And selected pizza size.

92
00:06:45.694 --> 00:06:47.385
Did I misname that?

93
00:06:49.504 --> 00:06:50.505
&gt;&gt; Brian Holt: Networked.

94
00:06:53.033 --> 00:06:56.418
&gt;&gt; Brian Holt: Response, sizes, my bad.

95
00:07:00.698 --> 00:07:03.590
&gt;&gt; Brian Holt: All right now,
if I click Thai chicken here and

96
00:07:03.590 --> 00:07:07.597
then I watch the price down here,
it'll move from various price

97
00:07:07.597 --> 00:07:12.441
to price based on what size you've
selected and the pizza you've selected.

98
00:07:14.197 --> 00:07:16.697
&gt;&gt; Brian Holt: So let's talk about
the ternary that I put in there,

99
00:07:16.697 --> 00:07:18.820
because that's a little weird looking too.

100
00:07:21.000 --> 00:07:24.749
Again, anything inside of the curly braces
can be a JavaScript expression of any

101
00:07:24.749 --> 00:07:26.192
variety.

102
00:07:26.192 --> 00:07:29.202
Ternaries have the benefit of
being expressions, not statements.

103
00:07:30.572 --> 00:07:33.302
A statement is an entire line,
an expression is part of a line.

104
00:07:35.282 --> 00:07:38.282
So I'm saying loading,
which is a Boolean, true or false.

105
00:07:39.442 --> 00:07:42.532
If this is true, you do the first thing.

106
00:07:42.532 --> 00:07:46.024
So if it's loading,
show this, very lovely and

107
00:07:46.024 --> 00:07:51.491
descriptive loading message, crafted
with love and care and run by legal.

108
00:07:51.491 --> 00:07:55.486
Loading pizza, and
as soon as it's done being loaded,

109
00:07:55.486 --> 00:07:58.715
someone's loading is false, right?

110
00:07:58.715 --> 00:08:01.854
Then you can show the pizza, because we
have all the data there that we need.

111
00:08:04.635 --> 00:08:05.673
&gt;&gt; Brian Holt: Make sense?

112
00:08:10.514 --> 00:08:12.641
&gt;&gt; Brian Holt: React developers
love their ternaries,

113
00:08:12.641 --> 00:08:14.652
you'll see them everywhere in React.

