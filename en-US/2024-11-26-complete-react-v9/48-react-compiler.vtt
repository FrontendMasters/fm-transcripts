WEBVTT

1
00:00:00.157 --> 00:00:01.517
&gt;&gt; Brian Holt: We got one
more kinda cool thing.

2
00:00:01.517 --> 00:00:05.875
This one, luckily,
doesn't actually require, I don't think,

3
00:00:05.875 --> 00:00:07.561
any code for you to write.

4
00:00:07.561 --> 00:00:11.985
I'm gonna talk about the React Compiler,
which I haven't really been able to talk

5
00:00:11.985 --> 00:00:15.030
about, but they've been talking about for
a long time.

6
00:00:15.030 --> 00:00:19.471
So React Compiler is basically going
to be free optimization for your code.

7
00:00:19.471 --> 00:00:25.303
So in theory, it should make your code
either about the same, to faster.

8
00:00:25.303 --> 00:00:27.493
So it should be no worse, and
it could be a lot faster.

9
00:00:29.033 --> 00:00:31.814
There are two hooks I didn't show you,
and I did that intentionally,

10
00:00:31.814 --> 00:00:33.333
one called useMemo and useCallback.

11
00:00:34.613 --> 00:00:38.097
This allows you just tell a component,
it's like,

12
00:00:38.097 --> 00:00:43.254
you are too slow to render, please don't
render unless I tell you to render.

13
00:00:43.254 --> 00:00:46.842
That seems like a good thing, is why don't
I tell that to all of my components that I

14
00:00:46.842 --> 00:00:49.186
know don't need to re-render themselves,
right?

15
00:00:49.186 --> 00:00:54.053
What's a good example of,
our header, no, it does change,

16
00:00:54.053 --> 00:00:57.342
right, cuz of this, our cart.length.

17
00:00:57.342 --> 00:00:59.630
Pizza changes, model changes.

18
00:00:59.630 --> 00:01:02.505
We have some sort of dynamism in
all of our components, don't we?

19
00:01:05.389 --> 00:01:10.964
&gt;&gt; Brian Holt: Yeah, so we wouldn't
really be able to do too much with it.

20
00:01:13.850 --> 00:01:18.615
&gt;&gt; Brian Holt: Imagine you had a table
that you rendered that had 5,000

21
00:01:18.615 --> 00:01:22.073
things in it, and
you really didn't want it

22
00:01:22.073 --> 00:01:26.384
to re-render unless it had
something to re-render.

23
00:01:26.384 --> 00:01:28.336
It's not cheap to
re-render that component.

24
00:01:28.336 --> 00:01:32.184
You could use something called useMemo
to say, this component, please,

25
00:01:32.184 --> 00:01:34.393
don't re-render it unless I tell you to.

26
00:01:34.393 --> 00:01:37.516
UseCallback is another variation of that.

27
00:01:41.150 --> 00:01:45.732
&gt;&gt; Brian Holt: So if you have performance
problems, one, wait until you have a real

28
00:01:45.732 --> 00:01:51.104
performance problem first, then you can
use useMemo and useCallback, right?

29
00:01:51.104 --> 00:01:54.886
That's my strong advice for you,
because once you introduce useMemo and

30
00:01:54.886 --> 00:01:57.694
useCallback, your code gets
harder to reason about.

31
00:01:57.694 --> 00:02:01.166
Because something will not update when
you expect it to and you're like,

32
00:02:01.166 --> 00:02:03.318
why is this not updating, right?

33
00:02:03.318 --> 00:02:07.168
You'll change some state or something like
that, and it won't update the view and

34
00:02:07.168 --> 00:02:08.985
you'll be like, why is this, right?

35
00:02:08.985 --> 00:02:11.678
This has happened to me,
this is why I'm telling you about it.

36
00:02:11.678 --> 00:02:15.376
So please don't use it until you
actually are solving a real problem,

37
00:02:15.376 --> 00:02:19.027
because otherwise, you're making
your life harder for no reason.

38
00:02:19.027 --> 00:02:22.389
React is really fast,
it's really good at making UIs, and

39
00:02:22.389 --> 00:02:24.957
they're just making it
faster all the time.

40
00:02:24.957 --> 00:02:27.272
So generally,
you can just trust it to be fast.

41
00:02:29.483 --> 00:02:33.937
&gt;&gt; Brian Holt: Okay, so why are we talking
about this now with React Compiler?

42
00:02:33.937 --> 00:02:36.958
Well, React Compiler is actually
gonna go look at your code and

43
00:02:36.958 --> 00:02:40.375
say, this thing can't change
in these circumstances.

44
00:02:40.375 --> 00:02:43.809
So I am going to prematurely
optimize this for them, and

45
00:02:43.809 --> 00:02:46.742
then it'll just handle all that stuff for
you.

46
00:02:46.742 --> 00:02:49.525
So it's gonna do some static analysis,
your code is like,

47
00:02:49.525 --> 00:02:51.092
this particular branch of code.

48
00:02:51.092 --> 00:02:54.618
This isn't gonna update,
I'm just gonna say this never updates, and

49
00:02:54.618 --> 00:02:56.282
then your code just gets faster.

50
00:02:56.282 --> 00:03:01.173
So it's using basically useMemo and
useCallback,

51
00:03:01.173 --> 00:03:04.189
useMemo particularly for you.

52
00:03:04.189 --> 00:03:07.416
So I'm very for this stack analysis and
all that kinda stuff, and they're saying,

53
00:03:07.416 --> 00:03:10.059
this code branch can't update,
I think that's awesome.

54
00:03:10.059 --> 00:03:12.571
This used to be known as React Forget.

55
00:03:12.571 --> 00:03:14.797
So if you ever hear React Forget
reference anywhere,

56
00:03:14.797 --> 00:03:16.680
they're talking about the React Compiler.

57
00:03:16.680 --> 00:03:21.668
If, for whatever reason, it's trying to do
something and you don't want it to, for

58
00:03:21.668 --> 00:03:26.239
whatever reason, you can go at the top of
the page and you say, use no memo, and

59
00:03:26.239 --> 00:03:28.142
it will not ever optimize that.

60
00:03:28.142 --> 00:03:31.297
They request that if you have to do that,
to please tell them,

61
00:03:31.297 --> 00:03:34.527
because they wanna know why,
because it shouldn't, right?

62
00:03:34.527 --> 00:03:35.454
You should never have to use that.

63
00:03:35.454 --> 00:03:37.465
They're saying that eventually,

64
00:03:37.465 --> 00:03:41.226
they're going to eliminate all
cases of when that should happen.

65
00:03:41.226 --> 00:03:42.955
So, let's do something kinda fun.

66
00:03:42.955 --> 00:03:46.246
You can run this in your
own codebases today,

67
00:03:46.246 --> 00:03:50.154
it only will mine Bitcoin for
me, I'm just kidding.

68
00:03:50.154 --> 00:03:54.104
This is from the React team to see,
would this be useful to my codebase?

69
00:03:54.104 --> 00:04:01.129
So we're just gonna run it in ours,
npx react-compiler-healthcheck@beta.

70
00:04:01.129 --> 00:04:02.797
It might ask you, yeah,
do you wanna install this?

71
00:04:02.797 --> 00:04:07.632
You gonna say yes, and it's gonna
run your code base and it says, hey,

72
00:04:07.632 --> 00:04:11.033
I was able to affect 12
of your 13 components.

73
00:04:11.033 --> 00:04:16.469
Happily found strict mode, and it says,
found no use of incompatible libraries.

74
00:04:16.469 --> 00:04:19.841
So it turns out our code base is
a good use case for React Compiler.

75
00:04:21.331 --> 00:04:24.199
So let's go put it in.

76
00:04:24.199 --> 00:04:29.275
What they have said officially
from the React core team is,

77
00:04:29.275 --> 00:04:35.682
this is safe to put in today on any
code base, it should not cause problems.

78
00:04:35.682 --> 00:04:39.204
So for example, Bluesky,
which is the new social app.

79
00:04:39.204 --> 00:04:43.304
They went and put it on the Bluesky app,
which is all open source, right,

80
00:04:43.304 --> 00:04:44.972
which is a massive React app.

81
00:04:44.972 --> 00:04:48.482
And they run it on Bluesky,
which is pretty cool, and

82
00:04:48.482 --> 00:04:51.914
it's already running,
obviously, on Facebook.

83
00:04:51.914 --> 00:04:57.374
So here's what I want you to do,
I want you to say,

84
00:04:57.374 --> 00:05:04.017
npm install-D
babel-plugin-react-compiler@beta.

85
00:05:04.017 --> 00:05:06.641
Again, if you're watching
this in the future,

86
00:05:06.641 --> 00:05:10.485
you might need to check my versions
here because it might have changed.

87
00:05:10.485 --> 00:05:14.318
And then you gotta go ahead and throw that
good old dash-dash force on there because

88
00:05:14.318 --> 00:05:16.246
it's gonna get real mad about versions.

89
00:05:20.743 --> 00:05:26.059
&gt;&gt; Brian Holt: Cool, okay, so
now we have the compiler in here, and

90
00:05:26.059 --> 00:05:32.926
we're gonna have to do some extra
configuration on our Vite config.

91
00:05:32.926 --> 00:05:37.146
So here with React,
we have to give it an object.

92
00:05:37.146 --> 00:05:43.385
Babel,
&gt;&gt; Brian Holt: Which is an object,

93
00:05:43.385 --> 00:05:48.729
you have to give it plugins,
which is an array.

94
00:05:48.729 --> 00:05:53.897
Then you have to give that another array,
feel free to copy

95
00:05:53.897 --> 00:05:59.914
this because it's obscene,
babel-plugin-react-compiler.

96
00:06:04.166 --> 00:06:08.172
&gt;&gt; Brian Holt: We're gonna do target 19, I
believe this does work technically on 18,

97
00:06:08.172 --> 00:06:12.070
we're gonna put in 19 cuz that's
what we're on, right, React 19.

98
00:06:12.070 --> 00:06:17.000
Okay, and then we're gonna say,
npm run dev,

99
00:06:17.000 --> 00:06:22.062
okay, and
then we should be able to open our app.

100
00:06:22.062 --> 00:06:27.969
And if everything went perfectly,
you should notice nothing.

101
00:06:27.969 --> 00:06:32.986
The best kind of thing, we put a ton
of effort and nothing happened.

102
00:06:32.986 --> 00:06:35.561
But let me show you what
is actually happening.

103
00:06:35.561 --> 00:06:40.827
Open your dev tools and open the React
Core dev tools for the components one.

104
00:06:40.827 --> 00:06:45.289
Now see this little memo magic?

105
00:06:45.289 --> 00:06:49.329
This component has auto-memoized
by the React Compiler.

106
00:06:49.329 --> 00:06:52.273
So it's actually gonna go in here and
show you, it's like,

107
00:06:52.273 --> 00:06:53.965
I was able to memoize this for you.

108
00:06:53.965 --> 00:06:57.130
So the header,
I'm able to memoize this, and

109
00:06:57.130 --> 00:07:02.666
it's able to just do a bunch of really
cool stuff that way, which is pretty cool.

110
00:07:02.666 --> 00:07:05.566
I think it's awesome that they're actually
able to show you what actually is getting

111
00:07:05.566 --> 00:07:06.704
memoized by the React Compiler.

112
00:07:10.626 --> 00:07:14.292
&gt;&gt; Brian Holt: So pretty cool stuff,
they've been talking about this for

113
00:07:14.292 --> 00:07:18.414
a long time, I think they built it for
Instagram, question mark?

114
00:07:18.414 --> 00:07:20.432
I'm actually not sure of what
they actually built it for.

115
00:07:20.432 --> 00:07:24.984
But they've been running it in
production for a long time on Facebook.

116
00:07:24.984 --> 00:07:31.005
So it's stable enough to
give a shot to today.

117
00:07:31.005 --> 00:07:34.867
And, yeah, any questions about that?

118
00:07:34.867 --> 00:07:37.191
&gt;&gt; Speaker 2: And that can be used
on previous versions of React,

119
00:07:37.191 --> 00:07:38.171
not just React 19.

120
00:07:38.171 --> 00:07:41.913
&gt;&gt; Brian Holt: I think it's 17, 18,
and 19, I think is what they said.

121
00:07:41.913 --> 00:07:47.192
18, for sure, 17,
you might need to go check.

122
00:07:47.192 --> 00:07:54.245
If you're on 17, please get on 18,
I guess that's what I would say to that.

123
00:07:54.245 --> 00:08:01.383
I left a link in here to
Lauren Tan`s talk from React Conf.

124
00:08:01.383 --> 00:08:04.601
Fun fact,
I don't think I taught Lauren React, and

125
00:08:04.601 --> 00:08:08.842
I'm not going to claim that, but
she did attend one of my workshops at

126
00:08:08.842 --> 00:08:12.664
Netflix where I taught my React
workshop to a bunch of people.

127
00:08:12.664 --> 00:08:16.869
So Lauren has been present during
a time that I was teaching React,

128
00:08:16.869 --> 00:08:18.908
that is a fact that I can assert.

129
00:08:18.908 --> 00:08:19.693
She's very smart.

130
00:08:19.693 --> 00:08:22.621
So, she is now the manager
of the React team.

131
00:08:22.621 --> 00:08:25.181
So, you should watch her talk,
she's a great speaker and

132
00:08:25.181 --> 00:08:27.279
she talks a lot about it
at React Conf this year.

