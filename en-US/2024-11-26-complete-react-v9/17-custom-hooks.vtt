WEBVTT

1
00:00:00.000 --> 00:00:03.196
&gt;&gt; Brian Holt: All right,
we're gonna talk about custom hooks,

2
00:00:03.196 --> 00:00:05.881
cuz you just hadn't had enough hooks yet.

3
00:00:05.881 --> 00:00:09.072
You got to make your own now.

4
00:00:09.072 --> 00:00:15.171
One thing that's kinda cool about hooks,
is they're composable.

5
00:00:15.171 --> 00:00:16.977
So let's say you had, well,

6
00:00:16.977 --> 00:00:20.379
let's just talk about the exact
example that we wanna.

7
00:00:20.379 --> 00:00:24.848
Build here at the bottom
of my Padre Genos page,

8
00:00:24.848 --> 00:00:28.552
I wanna have a pizza of the day, right?

9
00:00:28.552 --> 00:00:32.274
It's gonna be the same pizza every single
day, or, sorry, the same pizza every day.

10
00:00:32.274 --> 00:00:34.751
It's gonna be the same
pizza throughout a day, and

11
00:00:34.751 --> 00:00:37.006
then it's gonna change the next day,
right?

12
00:00:37.006 --> 00:00:40.587
I could write a component that goes
in requests the pizza of the day.

13
00:00:40.587 --> 00:00:43.180
Day, renders that correctly,
blah, blah, blah.

14
00:00:43.180 --> 00:00:47.652
But let's say I use the pizza of the day
in that particular piece of information

15
00:00:47.652 --> 00:00:49.022
seven places in my app.

16
00:00:49.022 --> 00:00:52.098
We really want people to
buy this pizza of the day.

17
00:00:52.098 --> 00:00:54.347
We can write a custom hook that goes and

18
00:00:54.347 --> 00:00:57.308
just encapsulates all that
logic into one thing.

19
00:00:57.308 --> 00:01:02.125
So rather than saying, use state,
use effect and all these different things

20
00:01:02.125 --> 00:01:07.087
kind of intertwined, we create this one
hook that says use pizza of the day, and

21
00:01:07.087 --> 00:01:10.519
then it encapsulates all of the logic for
you, right?

22
00:01:10.519 --> 00:01:14.002
So it becomes this like reusable,
composable hook.

23
00:01:14.002 --> 00:01:17.613
That's what we're gonna try and build now.

24
00:01:17.613 --> 00:01:22.497
So, let's first make our pizza
of the day component that's

25
00:01:22.497 --> 00:01:27.015
going to display the information
from pizza of the day.

26
00:01:27.015 --> 00:01:32.035
So create a new component
here we're gonna call

27
00:01:32.035 --> 00:01:37.057
PizzaOfTheDay.jsx, import, use pizza of,

28
00:01:37.057 --> 00:01:42.093
I guess we'll write that
here in just a second.

29
00:01:42.093 --> 00:01:45.174
But go ahead and write it if you want to,
usePizzaOfTheDay

30
00:01:48.261 --> 00:01:52.131
&gt;&gt; Brian Holt: From ./usePizzaOfTheDay.

31
00:01:58.322 --> 00:02:01.472
&gt;&gt; Brian Holt: We're gonna do that same
internationalization thing that we did

32
00:02:01.472 --> 00:02:01.994
earlier.

33
00:02:01.994 --> 00:02:06.442
New.NumberFormat [en-US]

34
00:02:06.442 --> 00:02:11.712
because we'll be formatting another

35
00:02:11.712 --> 00:02:16.659
price here, style "currency".

36
00:02:16.659 --> 00:02:19.379
It's so nice that we don't
have to get a library for

37
00:02:19.379 --> 00:02:21.795
this that it's just
built into the browser.

38
00:02:26.196 --> 00:02:30.596
&gt;&gt; Brian Holt: Yeah, okay,
cool, and then we're just

39
00:02:30.596 --> 00:02:35.136
gonna write kind of a dumb component here.

40
00:02:35.136 --> 00:02:40.072
Const, PizzaOfTheDay

41
00:02:40.072 --> 00:02:44.765
= an arrow function.

42
00:02:44.765 --> 00:02:49.464
And then down here, just make sure
you export default PizzaOfTheDay.

43
00:02:52.725 --> 00:02:56.128
&gt;&gt; Brian Holt: Okay.

44
00:02:56.128 --> 00:03:00.516
Const PizzaOfTheDay.

45
00:03:00.516 --> 00:03:03.735
How many times can I
say that in one course?

46
00:03:03.735 --> 00:03:10.798
The answer is probably at
least a couple times more,

47
00:03:10.798 --> 00:03:14.980
= usePizzaOfTheDay, okay?

48
00:03:14.980 --> 00:03:18.563
And again, the nice thing is, like,
I haven't written this yet, but

49
00:03:18.563 --> 00:03:19.877
now that I've done this,

50
00:03:19.877 --> 00:03:23.848
I kind of get to approach the rest of the
app as just as if it was written, right?

51
00:03:23.848 --> 00:03:24.898
Which is pretty cool.

52
00:03:28.207 --> 00:03:30.602
&gt;&gt; Brian Holt: If there's
no PizzaOfTheDay,

53
00:03:30.602 --> 00:03:36.463
then return some very fancy loading state,
which I'm just gonna put in a div.

54
00:03:40.444 --> 00:03:41.500
&gt;&gt; Brian Holt: Loading.

55
00:03:46.702 --> 00:03:53.290
&gt;&gt; Brian Holt: And then we're just
gonna write this component here.

56
00:03:53.290 --> 00:03:56.502
Pizza-of-the-day.

57
00:04:00.182 --> 00:04:02.180
&gt;&gt; Brian Holt: We're gonna
put pizza of the Day.

58
00:04:06.044 --> 00:04:07.348
&gt;&gt; Brian Holt: Another div.

59
00:04:10.841 --> 00:04:12.720
Pizza-of-the-day-info.

60
00:04:19.525 --> 00:04:21.846
&gt;&gt; Brian Holt: So
we're gonna make that an h3.

61
00:04:24.411 --> 00:04:32.211
&gt;&gt; Brian Holt: That's gonna
have pizzaOfTheDay.name.

62
00:04:32.211 --> 00:04:38.667
P, we're gonna have
pizzaOfTheDay.description.

63
00:04:43.935 --> 00:04:48.065
&gt;&gt; Brian Holt: Okay, and we're gonna have

64
00:04:48.065 --> 00:04:52.891
pizza-of-the-day-price.

65
00:04:57.926 --> 00:05:02.594
&gt;&gt; Brian Holt: And here we're just
gonna use, we're gonna say from, right,

66
00:05:02.594 --> 00:05:05.620
meaning that it starts at this price, and

67
00:05:05.620 --> 00:05:11.674
we're gonna say international.format
is gonna be the pizzaOfTheDay.sizes.s

68
00:05:11.674 --> 00:05:16.794
cuz the smallest size is always
gonna be the least expensive, right?

69
00:05:23.232 --> 00:05:28.515
&gt;&gt; Brian Holt: Div, okay, and then we just
want an image of that pizza of the day.

70
00:05:34.524 --> 00:05:41.448
&gt;&gt; Brian Holt: Okay,
className = pizza-of-the-day-image.

71
00:05:42.876 --> 00:05:48.537
&gt;&gt; Brian Holt: Source
equals PizzaOfTheDay.image,

72
00:05:48.537 --> 00:05:54.033
and alt equals PizzaOfTheDay.name,

73
00:05:58.621 --> 00:06:02.724
&gt;&gt; Brian Holt: And that should be, good.

74
00:06:02.724 --> 00:06:05.424
Now we just got to go write this, but

75
00:06:05.424 --> 00:06:10.919
this will display whatever piece of
the day that we get back from the API.

76
00:06:10.919 --> 00:06:14.295
Beyond that, nothing too interesting
here in terms of, components.

77
00:06:14.295 --> 00:06:17.903
We've written a bunch of
this stuff before, but

78
00:06:17.903 --> 00:06:20.639
let's go write our custom hook now.

79
00:06:20.639 --> 00:06:25.799
So inside of your source directory,
we're gonna create

80
00:06:25.799 --> 00:06:31.180
a file called usePizzaOfTheDay.js,
you can call .jsx.

81
00:06:31.180 --> 00:06:32.647
I don't really care.

82
00:06:32.647 --> 00:06:36.716
There's gonna be no direct HTML or
JSX rendered.

83
00:06:36.716 --> 00:06:40.047
So in theory,
you could call it .js I'm lazy and

84
00:06:40.047 --> 00:06:43.883
I just call everything .jsx
cuz later it might have it?

85
00:06:43.883 --> 00:06:44.556
I don't know.

86
00:06:44.556 --> 00:06:47.880
&gt;&gt; Student: It's one of those things,
again, like you can make a point for

87
00:06:47.880 --> 00:06:48.709
it either way.

88
00:06:48.709 --> 00:06:50.206
&gt;&gt; Brian Holt: Either way,
I'm just gonna roll my eyes and

89
00:06:50.206 --> 00:06:51.751
say, I don't care and
do whatever you want.

90
00:06:57.951 --> 00:07:01.662
&gt;&gt; Brian Holt: Export
const usePizzaOfTheDay.

91
00:07:01.662 --> 00:07:04.683
Okay, so the nice thing is,
like, to make a custom hook,

92
00:07:04.683 --> 00:07:07.102
it's just a function
that calls other hooks.

93
00:07:07.102 --> 00:07:09.519
There's no wrapper for it.

94
00:07:09.519 --> 00:07:13.005
There's no additional function
that you need for it.

95
00:07:13.005 --> 00:07:16.237
Really is just a function that calls
other functions, and that's it.

96
00:07:16.237 --> 00:07:20.101
That's the entire concept
behind a custom hook.

97
00:07:26.097 --> 00:07:29.840
&gt;&gt; Brian Holt: Okay, and we're just gonna
encapsulate use state and use effect,

98
00:07:29.840 --> 00:07:33.319
like it's just gonna be a combination
of those two things, but

99
00:07:33.319 --> 00:07:36.491
it's gonna be encapsulated
in just like one other hook.

100
00:07:36.491 --> 00:07:41.506
PizzaOfTheDay and set PizzaOfTheDay.

101
00:07:47.677 --> 00:07:51.411
&gt;&gt; Brian Holt: We're gonna have this
start out as null or undefined or

102
00:07:51.411 --> 00:07:52.962
something like that.

103
00:07:52.962 --> 00:07:58.036
Again, I would be fine with
you putting undefined here,

104
00:07:58.036 --> 00:08:01.852
void zero, whatever you wanna put there.

105
00:08:01.852 --> 00:08:05.797
My notes have null so
I'm gonna put that in there.

106
00:08:05.797 --> 00:08:13.194
Use effect and then here we're just
gonna write our AJAX request and

107
00:08:13.194 --> 00:08:18.272
I'm just gonna put my
async function in here.

108
00:08:18.272 --> 00:08:22.873
It doesn't really matter
where you put it as long as

109
00:08:22.873 --> 00:08:27.587
it's in the function body,
fetchPizzaOfTheDay.

110
00:08:27.587 --> 00:08:32.729
Okay, const response = await

111
00:08:32.729 --> 00:08:39.264
fetch/api/pizza-of-the-day.

112
00:08:41.609 --> 00:08:44.882
&gt;&gt; Brian Holt: Man, I would have called
this like POTD if I realized how many

113
00:08:44.882 --> 00:08:47.652
times I'm gonna get sick
of writing pizza the day.

114
00:08:47.652 --> 00:08:54.950
Holy hell, await response.json.

115
00:08:58.610 --> 00:09:05.767
&gt;&gt; Brian Holt: Okay, and
then setPizzaOfTheDay

116
00:09:05.767 --> 00:09:11.201
data and then fetch that.

117
00:09:11.201 --> 00:09:13.628
How many times do we want this to run?

118
00:09:13.628 --> 00:09:14.892
Just once.

119
00:09:14.892 --> 00:09:15.557
Just once?

120
00:09:15.557 --> 00:09:16.685
What do we put there?

121
00:09:16.685 --> 00:09:17.662
MTE, right?

122
00:09:17.662 --> 00:09:18.495
You got it.

123
00:09:21.605 --> 00:09:23.843
&gt;&gt; Brian Holt: In theory,
if you're doing like pizza drops and

124
00:09:23.843 --> 00:09:27.338
people were really pumped about it,
you wanted to like change at midnight or

125
00:09:27.338 --> 00:09:31.064
something like that, but I imagine people
are not that hyped about your pizzas.

126
00:09:31.064 --> 00:09:35.052
I don't know, I've waited in long
lines for pizza in Seattle, so

127
00:09:35.052 --> 00:09:36.774
people do like their pizza.

128
00:09:42.087 --> 00:09:44.145
&gt;&gt; Brian Holt: So again,
this is a custom hook.

129
00:09:44.145 --> 00:09:49.997
This is a concept that people
kind of associate with react,

130
00:09:49.997 --> 00:09:55.744
but it's just a function that
calls other hooks, right?

131
00:09:55.744 --> 00:09:59.228
And this is like my pet peeve when
it comes to like libraries and

132
00:09:59.228 --> 00:10:03.784
people like to associate these like high
mighty concepts and give them like fancy

133
00:10:03.784 --> 00:10:07.343
computer science names when in
reality it's just a function.

134
00:10:07.343 --> 00:10:10.140
Just start calling it a function, right?

135
00:10:10.140 --> 00:10:13.754
Because it makes things seem more
unapproachable than they actually

136
00:10:13.754 --> 00:10:14.509
are, right?

137
00:10:14.509 --> 00:10:17.708
Nothing in here is new to you, right?

138
00:10:17.708 --> 00:10:21.485
But you probably heard the ideas like,
custom hooks, this is gonna be like some

139
00:10:21.485 --> 00:10:24.794
amount of formality and I need my
monocle and testing harness, right?

140
00:10:24.794 --> 00:10:28.251
No, I know it's just a function.

141
00:10:28.251 --> 00:10:29.168
That's it, right?

142
00:10:29.168 --> 00:10:31.056
And now PizzaOfTheDay works.

143
00:10:34.312 --> 00:10:37.789
&gt;&gt; Brian Holt: Cuz like just
mentally model this with me, right?

144
00:10:37.789 --> 00:10:42.486
You have this pizza of the day function
that you're calling use this, right?

145
00:10:42.486 --> 00:10:44.772
Inside of this,
this is gonna call two hooks.

146
00:10:44.772 --> 00:10:47.847
Now the thing that I told you before is
like, don't put them in if statements,

147
00:10:47.847 --> 00:10:50.427
don't put them in for loops or
while loops or anything like that.

148
00:10:50.427 --> 00:10:52.821
But what is this actually doing, right?

149
00:10:52.821 --> 00:10:57.059
Inside of it, it's just calling this hook,
then it's calling this hook and

150
00:10:57.059 --> 00:11:00.396
it's calling them in the same
order no matter what, right?

151
00:11:00.396 --> 00:11:06.101
It's just in another file, which is okay,
and that makes it a custom hook.

152
00:11:08.961 --> 00:11:13.867
&gt;&gt; Brian Holt: Makes it a function,
okay, so now we have a piece of the day

153
00:11:13.867 --> 00:11:18.474
component, let's go put that
in app.jsx cuz we wanna

154
00:11:18.474 --> 00:11:23.381
show that to everyone all of
the time we are pushing pizza,

155
00:11:23.381 --> 00:11:27.512
again, this is intro to
capitalism with Brian.

156
00:11:27.512 --> 00:11:31.340
By the end of this,
you're all gonna be pizza barons.

157
00:11:31.340 --> 00:11:35.902
All right, pizza the day there under
order, I think is where I put it.

158
00:11:35.902 --> 00:11:39.436
Yep, pizzaOfTheDay.

159
00:11:39.436 --> 00:11:40.230
There we go.

160
00:11:43.477 --> 00:11:46.307
&gt;&gt; Brian Holt: So
let's dev service still running.

161
00:11:46.307 --> 00:11:48.183
Make sure your dev
server is still running.

162
00:11:51.388 --> 00:11:54.884
&gt;&gt; Brian Holt: Look down here and
you have pizza of the Day.

163
00:11:58.820 --> 00:11:59.700
&gt;&gt; Brian Holt: Pretty cool, right?

164
00:12:05.598 --> 00:12:08.802
&gt;&gt; Brian Holt: This actually does change,
so tomorrow it'll be something different.

