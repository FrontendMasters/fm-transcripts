WEBVTT

1
00:00:00.170 --> 00:00:03.069
&gt;&gt; Brian Holt: Who has ever tried to get
a 100% test coverage in one of their

2
00:00:03.069 --> 00:00:03.680
code bases?

3
00:00:05.390 --> 00:00:06.545
Raise your hand so I can shame you.

4
00:00:06.545 --> 00:00:10.990
[LAUGH] I think it's a fool's errand,
right?

5
00:00:10.990 --> 00:00:14.309
I think it's a fool's errand to
go after 100% test coverage and

6
00:00:14.309 --> 00:00:17.281
there are people that are vehemently
disagreed with me, but

7
00:00:17.281 --> 00:00:21.316
I think it makes you end up testing things
that are just not Important to be tested.

8
00:00:23.296 --> 00:00:27.228
That being said,
I'm gonna show you just the greatest and

9
00:00:27.228 --> 00:00:32.684
easiest hack to do 100% test coverage,
and it's called snapshot testing,

10
00:00:32.684 --> 00:00:38.326
and I show it to you because it's a
low-effort, low-confidence way of testing.

11
00:00:39.861 --> 00:00:42.091
And as soon as you say low confidence,
I'm out.

12
00:00:42.091 --> 00:00:44.421
If it's low confidence,
then what am I doing, right?

13
00:00:44.421 --> 00:00:46.151
Why am I doing this?

14
00:00:46.151 --> 00:00:51.286
But they're so easy to write that I'll
kinda let you be the judge of it,

15
00:00:51.286 --> 00:00:53.181
some people do like them.

16
00:00:53.181 --> 00:00:55.641
I think they're kind of discouraged now,
but they're so fast to show that.

17
00:00:55.641 --> 00:00:56.751
I was like, yeah, I might as well.

18
00:00:56.751 --> 00:01:00.176
So we're gonna make another file here,
we're gonna test which file here?

19
00:01:00.176 --> 00:01:02.301
We're gonna test cart.jsx.

20
00:01:02.301 --> 00:01:08.488
So cart.test.jsx, this is just
a dumb display component, right?

21
00:01:08.488 --> 00:01:10.518
It doesn't really do very much
other than display stuff.

22
00:01:10.518 --> 00:01:15.078
So this is actually the best case
scenario for using snapshot testing.

23
00:01:15.078 --> 00:01:19.923
The only thing snapshot testing does is it
renders out the entire component and says,

24
00:01:19.923 --> 00:01:22.360
it looks like this and
then it tracks that.

25
00:01:22.360 --> 00:01:25.026
And so if you run that that
snapshot test again and

26
00:01:25.026 --> 00:01:29.006
it looks different than it did last
time you ran it then it fails the test.

27
00:01:29.006 --> 00:01:32.883
It says something changed you
can either update this or

28
00:01:32.883 --> 00:01:36.516
something happened that
you didn't anticipate.

29
00:01:36.516 --> 00:01:41.185
I'll show you what I mean import,

30
00:01:41.185 --> 00:01:45.212
expect and test from vitest.

31
00:01:45.212 --> 00:01:49.425
Import render from

32
00:01:49.425 --> 00:01:54.428
@testing library and

33
00:01:54.428 --> 00:01:58.114
import cart from --

34
00:01:59.166 --> 00:02:03.361
/Cart
&gt;&gt; Brian Holt: Test

35
00:02:03.361 --> 00:02:08.506
snapshot with nothing in cart.

36
00:02:12.986 --> 00:02:14.623
&gt;&gt; Brian Holt: You can make this a sync,
if you want to.

37
00:02:14.623 --> 00:02:16.103
I didn't know my notes, so I won't hear.

38
00:02:16.103 --> 00:02:24.303
So you can say const AsFragment = render,

39
00:02:28.213 --> 00:02:32.940
&gt;&gt; Brian Holt: There we go, cart, cart.

40
00:02:39.656 --> 00:02:40.385
&gt;&gt; Brian Holt: Okay?

41
00:02:41.644 --> 00:02:47.268
And then I'm gonna say expect asFragment,

42
00:02:47.268 --> 00:02:52.289
which is a function toMatchSnapshot.

43
00:02:55.802 --> 00:02:56.387
&gt;&gt; Brian Holt: That's it,

44
00:02:56.387 --> 00:02:59.004
that is the entire test that
you have to write right there.

45
00:03:00.934 --> 00:03:04.198
So, let's dive into what
this actually means.

46
00:03:04.198 --> 00:03:05.488
It actually already ran, right?

47
00:03:05.488 --> 00:03:09.238
Because I have my vitest running here, so
it's already run this for the first time.

48
00:03:09.238 --> 00:03:11.531
You'll notice this magical underscore,

49
00:03:11.531 --> 00:03:14.788
_snapshots that we didn't
create showed up in our folder.

50
00:03:14.788 --> 00:03:23.513
And if you click into this you will see
this random file that it generates.

51
00:03:25.435 --> 00:03:26.378
&gt;&gt; Brian Holt: Div, cart, class, so

52
00:03:26.378 --> 00:03:28.465
this is actually kind of
what it looks like, right?

53
00:03:28.465 --> 00:03:31.391
When this gets rendered out
without anything in the cart,

54
00:03:31.391 --> 00:03:34.553
you do check this in by the way,
because you wanna make sure that

55
00:03:34.553 --> 00:03:38.235
even across commits that it
doesn't change over time.

56
00:03:38.235 --> 00:03:41.531
But let's just say I erroneously one day,
come in here,

57
00:03:41.531 --> 00:03:45.525
I changed the nist name to, well,
since I'm 12 years old, fart.

58
00:03:48.185 --> 00:03:49.635
It's gonna fail my test, right?

59
00:03:50.775 --> 00:03:53.814
It expected cart, and it got fart and

60
00:03:53.814 --> 00:03:57.645
that's the kind of test that this is,
right?

61
00:03:57.645 --> 00:04:00.981
It's just being like between all the
various different renders everything is

62
00:04:00.981 --> 00:04:01.798
looking the same.

63
00:04:03.238 --> 00:04:07.468
I came with, I said, fart professionally,
I am an adult, I promise.

64
00:04:10.548 --> 00:04:14.032
But now if I change you back, you'll
see that the test pass again, right?

65
00:04:14.032 --> 00:04:15.180
&gt;&gt; Speaker 2: It was an honest mistake.

66
00:04:15.180 --> 00:04:17.228
&gt;&gt; Brian Holt: Honest mistake, [LAUGH].

67
00:04:17.228 --> 00:04:17.788
&gt;&gt; Speaker 2: Anybody?

68
00:04:19.258 --> 00:04:22.929
&gt;&gt; Brian Holt: Yep, so let's say
that becomes our branding now and

69
00:04:22.929 --> 00:04:26.862
that's what we wanna do and
this is really what we want.

70
00:04:26.862 --> 00:04:34.141
We can actually come in here and
you press U, right, and it'll update it.

71
00:04:34.141 --> 00:04:38.453
And so now, notice that this is now
written out, so it is written in stone or

72
00:04:38.453 --> 00:04:41.886
commits that this is actually
what we intended for it to do.

73
00:04:45.523 --> 00:04:47.724
&gt;&gt; Brian Holt: Okay, but
we should probably change that back so

74
00:04:47.724 --> 00:04:48.699
we don't get fired.

75
00:04:50.847 --> 00:04:54.205
&gt;&gt; Brian Holt: So
change that to cart, save it.

76
00:04:54.205 --> 00:04:58.281
We'll fail the test, but you can just
hit update and update the snapshot.

77
00:05:00.405 --> 00:05:03.580
&gt;&gt; Brian Holt: So I hope you see what
I'm saying when this is low effort.

78
00:05:03.580 --> 00:05:07.715
This was what,
how many lines of code, not many,

79
00:05:07.715 --> 00:05:11.653
like the test itself is
literally just two, but

80
00:05:11.653 --> 00:05:17.870
it is low confidence because that's so
easy to break, right?

81
00:05:17.870 --> 00:05:20.778
And let's say that you have like
components tested in component.

82
00:05:20.778 --> 00:05:22.449
That's it in components and

83
00:05:22.449 --> 00:05:26.854
your snapshot will encapsulate
everything through all of those.

84
00:05:26.854 --> 00:05:30.410
So if I have seven layers deep,
another component and it changes,

85
00:05:30.410 --> 00:05:35.014
it's going to fail all of the snapshot
chests all the way up, right?

86
00:05:35.014 --> 00:05:38.220
So this is what I say is like, I don't
really use them too much because they

87
00:05:38.220 --> 00:05:41.554
break and they're annoying and
they're not telling me anything, right?

88
00:05:42.904 --> 00:05:45.004
Like UI changes constantly.

89
00:05:45.004 --> 00:05:48.057
I think we're all familiar that if you're
in this course that we're all constantly

90
00:05:48.057 --> 00:05:49.476
changing and updating and it's like,

91
00:05:49.476 --> 00:05:52.284
I don't wanna update my
snapshots every single time.

92
00:05:52.284 --> 00:05:57.164
So unless I have something that I'm really
intending to kinda stay set in stone,

93
00:05:57.164 --> 00:05:59.778
I don't I don't really use them too much.

94
00:05:59.778 --> 00:06:00.469
Yeah.

95
00:06:00.469 --> 00:06:03.883
&gt;&gt; Speaker 2: I think you got to the core
of it, but I was wondering about a use

96
00:06:03.883 --> 00:06:07.168
case for this kind of testing and
it seems like if anything,

97
00:06:07.168 --> 00:06:11.438
it seems like a finished feature that
should not be impacted by other things,

98
00:06:11.438 --> 00:06:14.919
but not very high level because
it's gonna be impacted by.

99
00:06:14.919 --> 00:06:18.520
&gt;&gt; Brian Holt: Yeah and it's gonna be like
pretty UI focused cuz this encapsulates

100
00:06:18.520 --> 00:06:20.486
none of the logic part of it, right?

101
00:06:21.607 --> 00:06:25.699
So something like cart where it's
really just a dumb display component,

102
00:06:25.699 --> 00:06:28.587
I still don't know if I endorse it though,
right?

103
00:06:28.587 --> 00:06:31.767
&gt;&gt; Speaker 2: Headers and footers and nav
bars and things feel about right for me.

104
00:06:31.767 --> 00:06:34.027
&gt;&gt; Brian Holt: It could, it could.

105
00:06:34.027 --> 00:06:36.587
The reason why I brought up
the 100% test coverage is,

106
00:06:36.587 --> 00:06:38.687
this really helps with test coverage,
right?

107
00:06:38.687 --> 00:06:41.399
Because everything gets run very easily,
right?

108
00:06:41.399 --> 00:06:44.878
So the one place I saw someone
doing it that I was like okay,

109
00:06:44.878 --> 00:06:49.363
that makes some sense to me is they
were using it for their API formattters.

110
00:06:49.363 --> 00:06:53.508
So the nice thing about snapshot test
where I'm showing you with react, but

111
00:06:53.508 --> 00:06:56.577
you can use them with any
object in JavaScript, right?

112
00:06:56.577 --> 00:07:00.073
So I don't know,
let's just write another random test here.

113
00:07:00.073 --> 00:07:04.237
Test and I do something like this.

114
00:07:05.807 --> 00:07:10.106
And I say, well, let's describe that

115
00:07:10.106 --> 00:07:14.937
test pizza that I had in UsepizzaOfTheDay.

116
00:07:16.557 --> 00:07:18.547
Let's say I was writing a node service.

117
00:07:20.853 --> 00:07:24.796
This was the result that I
wanted to give back to the user.

118
00:07:29.215 --> 00:07:34.566
&gt;&gt; Brian Holt: So
I would say this toMatchSnapshot.

119
00:07:37.127 --> 00:07:39.458
&gt;&gt; Brian Holt: So it's gonna run that
the first time it'll run it, and

120
00:07:39.458 --> 00:07:40.708
now if I look at my snapshots.

121
00:07:43.369 --> 00:07:46.781
&gt;&gt; Brian Holt: I think this is kind of
compelling, because now your front end and

122
00:07:46.781 --> 00:07:49.200
your backend are very in
tune with each other,

123
00:07:49.200 --> 00:07:52.868
that they have to have
the same contract of the API.

124
00:07:52.868 --> 00:07:55.278
The backend is gonna send this,
the front end is gonna receive this.

125
00:07:56.618 --> 00:08:01.358
This makes sense to me that we're
making sure that our object shapes for

126
00:08:01.358 --> 00:08:03.334
API returns and stay in sync.

127
00:08:04.804 --> 00:08:06.644
That makes sense to me,
I'm okay with that.

128
00:08:06.644 --> 00:08:10.532
This seems like an okay use
of snapshot testing for me,

129
00:08:10.532 --> 00:08:13.444
matching something like this.

130
00:08:13.444 --> 00:08:18.074
Yeah, I'm kinda out to be honest with you.

131
00:08:18.074 --> 00:08:22.242
It's gonna show you one more thing that's
kind of a weird way to do this, so

132
00:08:22.242 --> 00:08:23.513
I'm gonna save this.

133
00:08:23.513 --> 00:08:26.673
I think it's gonna fail cuz it's
having one less snapshot than it has.

134
00:08:26.673 --> 00:08:28.813
It has an obsolete snapshot.

135
00:08:28.813 --> 00:08:35.458
So I still think you have to say update,
there you go.

136
00:08:36.822 --> 00:08:37.593
&gt;&gt; Brian Holt: There we go.

137
00:08:37.593 --> 00:08:40.998
Okay, so that ran, yeah,
so I have smash snapshot.

138
00:08:40.998 --> 00:08:42.908
There's another way you can do this and
it's called Inline.

139
00:08:45.188 --> 00:08:49.475
And I'm gonna run this, and it's gonna
populate it, right there in the file.

140
00:08:51.714 --> 00:08:54.208
&gt;&gt; Brian Holt: Some people prefer
that instead of the snapshot files.

141
00:08:56.378 --> 00:09:00.077
I don`t know, seems weird,
I like it the other way better.

