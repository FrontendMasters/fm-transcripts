WEBVTT

1
00:00:00.000 --> 00:00:03.091
&gt;&gt; Brian Holt: So
we've been centered on 18.3 so far, and

2
00:00:03.091 --> 00:00:05.806
we're gonna be talking about 19.0.

3
00:00:07.821 --> 00:00:11.101
&gt;&gt; Brian Holt: Some of the stuff
has been coming for a long time,

4
00:00:11.101 --> 00:00:13.752
and some of the stuff is fairly recent.

5
00:00:13.752 --> 00:00:17.476
So the first thing I'm gonna
call out is keep an eye out for

6
00:00:17.476 --> 00:00:20.437
version 6 of my intermediate React course.

7
00:00:20.437 --> 00:00:25.715
That should be the first time
that I talk about React 19.

8
00:00:25.715 --> 00:00:28.992
I'm imagining that it's
gonna be out by that point.

9
00:00:28.992 --> 00:00:32.354
And if it's not,
we'll probably push the date further so

10
00:00:32.354 --> 00:00:34.285
it can be out before I go teach it.

11
00:00:34.285 --> 00:00:38.089
But I just wanna really emphasize
that what you've learned today,

12
00:00:38.089 --> 00:00:42.359
I am confident in asserting that it will
be still useful five years from now,

13
00:00:42.359 --> 00:00:44.980
because React doesn't change that quickly.

14
00:00:44.980 --> 00:00:49.126
The core model, of which is what I taught
you today, doesn't change very much.

15
00:00:49.126 --> 00:00:52.256
So there's no reason to
wait to take courses or

16
00:00:52.256 --> 00:00:56.204
anything like that,
it's all React at the end of the day.

17
00:00:56.204 --> 00:01:02.082
Most of the stuff that's in React V8
of this course still applies, right?

18
00:01:02.082 --> 00:01:04.670
Most of the modifications
here were fairly minor.

19
00:01:06.652 --> 00:01:09.344
&gt;&gt; Brian Holt: So, it's about to be out.

20
00:01:09.344 --> 00:01:12.977
They've been talking about it for
probably about a year now, and I'm gonna

21
00:01:12.977 --> 00:01:17.139
say 95% of what I show you, I'm pretty
confident saying it's gonna be unchanged.

22
00:01:17.139 --> 00:01:20.743
And there might be some corners around the
edges of maybe some slide API changes or

23
00:01:20.743 --> 00:01:24.033
something like that, but I think
the core concepts are gonna be the same.

24
00:01:24.033 --> 00:01:27.937
It's in release candidate right now and
has been for some time, so

25
00:01:27.937 --> 00:01:31.432
they don't anticipate that
it's gonna change very much.

26
00:01:33.577 --> 00:01:37.176
&gt;&gt; Brian Holt: One of the things
is use client and use server.

27
00:01:37.176 --> 00:01:42.428
You'll notice today I did not talk
about these and I did not want to,

28
00:01:42.428 --> 00:01:46.406
because I don't think it's useful for
you today.

29
00:01:46.406 --> 00:01:50.541
React is now being bundled into
more of a meta framework, so

30
00:01:50.541 --> 00:01:54.441
things like Next.js and
remix and all of those things.

31
00:01:54.441 --> 00:01:59.247
And one of the cool features that those
things allow you is they allow you to say,

32
00:01:59.247 --> 00:02:05.131
run this component on the server only, or
run this component on the browser only.

33
00:02:05.131 --> 00:02:07.716
&gt;&gt; Brian Holt: We were just doing
client side React today, so

34
00:02:07.716 --> 00:02:12.305
that was nonsensical for us to talk about,
but this is kind of cool for the future.

35
00:02:12.305 --> 00:02:16.416
Imagine that you can do things like run
database queries directly from your React

36
00:02:16.416 --> 00:02:17.088
component.

37
00:02:17.088 --> 00:02:21.672
If you're using a server component, you
can do that, and it's totally safe, right?

38
00:02:21.672 --> 00:02:26.210
And by the same token, if you're writing
a, if you're writing Figma, right,

39
00:02:26.210 --> 00:02:30.845
a very client heavy application, you don't
want that stuff to run in the server.

40
00:02:30.845 --> 00:02:33.237
That doesn't make a lot of sense to
render that stuff in the server.

41
00:02:33.237 --> 00:02:34.620
You're gonna render that in the browser.

42
00:02:34.620 --> 00:02:37.510
So you'd use client on that.

43
00:02:37.510 --> 00:02:41.277
So just to give you an example
of what that API looks like.

44
00:02:41.277 --> 00:02:46.166
If we go to like, I don't know,
header for whatever reason,

45
00:02:46.166 --> 00:02:49.832
you can put up here at the top,
use client, and

46
00:02:49.832 --> 00:02:54.554
this is now going to be guaranteed
to only run in the client.

47
00:02:54.554 --> 00:02:57.439
And I think it works per block as well,
you could do,

48
00:02:57.439 --> 00:02:59.282
if we didn't have this, right?

49
00:03:02.255 --> 00:03:04.150
&gt;&gt; Brian Holt: Then you can do it here,
and so on.

50
00:03:04.150 --> 00:03:07.814
And there's a bunch of different places
you can use it called directives, right?

51
00:03:07.814 --> 00:03:10.689
Same thing you could say use server here.

52
00:03:10.689 --> 00:03:14.001
And what's cool about use server in this
particular case, it's just gonna send down

53
00:03:14.001 --> 00:03:17.129
the complete markup, it's not gonna send
down the actual JavaScript to run it.

54
00:03:17.129 --> 00:03:19.909
It's just gonna run everything
in the server first and

55
00:03:19.909 --> 00:03:22.699
then send it down to the client,
which is kind of cool.

56
00:03:22.699 --> 00:03:26.462
I think you can do it with like effects
and stuff like that, so you can say,

57
00:03:26.462 --> 00:03:27.144
useEffect.

58
00:03:32.476 --> 00:03:35.149
&gt;&gt; Brian Holt: And
use server in here, right?

59
00:03:35.149 --> 00:03:37.875
And then you have a server side
effect that you can run there,

60
00:03:37.875 --> 00:03:39.814
which is also kind of Interesting as well.

61
00:03:41.675 --> 00:03:45.034
&gt;&gt; Brian Holt: But again,
this only applies to like meta frameworks,

62
00:03:45.034 --> 00:03:46.540
like next, like remix.

63
00:03:46.540 --> 00:03:49.412
You can build those meta
frameworks yourself, but

64
00:03:49.412 --> 00:03:52.832
you have to get your hands pretty
dirty with how React works.

65
00:03:52.832 --> 00:03:57.019
One of the things that I
found interesting and useful,

66
00:03:57.019 --> 00:04:02.769
what happens if I have an API key that
I'm using in a used server component?

67
00:04:02.769 --> 00:04:05.114
All it takes is one
developer to go in there and

68
00:04:05.114 --> 00:04:09.579
say, I actually need this to run on the
client too and just delete the directive.

69
00:04:09.579 --> 00:04:13.507
And all of a sudden, you're sending your
secret keys down to your clients, right?

70
00:04:13.507 --> 00:04:17.995
You're one line away from a data breach,
which is very scary.

71
00:04:17.995 --> 00:04:21.970
So they have these things called taint
unique value and taint object reference,

72
00:04:21.970 --> 00:04:24.834
it says, for these things that
are running on the server,

73
00:04:24.834 --> 00:04:28.652
I don't care if something tells you to
send this down, never send this down.

74
00:04:28.652 --> 00:04:33.396
And that's what the taint unique value and
taint object reference do, is they're just

75
00:04:33.396 --> 00:04:37.448
saying, I'm putting extra guard rails
on this that this will never leak.

76
00:04:37.448 --> 00:04:39.844
And I thought that was
a cool way of doing that

77
00:04:42.883 --> 00:04:43.658
&gt;&gt; Brian Holt: Cool, so,

78
00:04:43.658 --> 00:04:45.445
any questions about that?

79
00:04:45.445 --> 00:04:51.422
You're just kind of adding a directive
of where you want stuff to run.

80
00:04:51.422 --> 00:04:53.042
&gt;&gt; Brian Holt: Which I
thought was a cool idea.

81
00:04:56.257 --> 00:04:58.663
&gt;&gt; Brian Holt: Something else that,
for the longest time,

82
00:04:58.663 --> 00:05:01.143
we've had to use a thing
called React Helmet.

83
00:05:01.143 --> 00:05:05.367
So if you wanna change the name
of the document, right?

84
00:05:05.367 --> 00:05:07.998
So right here it says Padre Geno's, right?

85
00:05:07.998 --> 00:05:10.822
If you wanted to change that
to order on the order page and

86
00:05:10.822 --> 00:05:13.285
contact on the contact page and
stuff like that,

87
00:05:13.285 --> 00:05:17.396
you had to use something called React
Helmet, which is the library from the NFL.

88
00:05:17.396 --> 00:05:19.027
It's a fun fact.

89
00:05:19.027 --> 00:05:21.868
And you would render
something into the helmet and

90
00:05:21.868 --> 00:05:24.441
then the helmet would put in the head for
you.

91
00:05:24.441 --> 00:05:25.969
That's how it would work.

92
00:05:25.969 --> 00:05:29.713
And in React 19, they're just
building that into React directly.

93
00:05:29.713 --> 00:05:31.532
So if you render something
like title here,

94
00:05:31.532 --> 00:05:34.047
it's just gonna automatically
put that in the head for you.

95
00:05:34.047 --> 00:05:35.138
You don't have to do anything special.

96
00:05:35.138 --> 00:05:38.298
It just has to go, title,
that goes in the head.

97
00:05:38.298 --> 00:05:43.094
Same thing with links, so
adding CSS documents or meta tags or

98
00:05:43.094 --> 00:05:44.765
anything like that.

99
00:05:44.765 --> 00:05:48.936
All that stuff that we used
to use React Helmet for

100
00:05:48.936 --> 00:05:52.206
is all just built into React 19 now.

101
00:05:52.206 --> 00:05:58.611
We talked a little bit about preload and
preconnect earlier in the course.

102
00:05:58.611 --> 00:06:03.671
If you need a, kind of more
interesting introduction to this,

103
00:06:03.671 --> 00:06:07.302
I found this article,
which is pretty cool.

104
00:06:07.302 --> 00:06:10.267
They're called browser hints, and

105
00:06:10.267 --> 00:06:15.247
they allow you to say, hey,
predo all the HTTPS handshakes.

106
00:06:15.247 --> 00:06:17.219
That's what preconnect is for.

107
00:06:17.219 --> 00:06:19.541
It's like,
I might need this here in a second, and

108
00:06:19.541 --> 00:06:21.168
I want you to go as fast as possible.

109
00:06:21.168 --> 00:06:25.996
So preconnect is like, do the handshake,
get ready for the secure connection,

110
00:06:25.996 --> 00:06:27.914
but don't download anything.

111
00:06:27.914 --> 00:06:31.254
And then preload is like, no,
go ahead and download this.

112
00:06:31.254 --> 00:06:34.215
And it's done through browser hints,
that's a very,

113
00:06:34.215 --> 00:06:37.565
built into the browser side of
particular React kind of thing.

114
00:06:37.565 --> 00:06:39.934
So you would do something
like this in React.

115
00:06:39.934 --> 00:06:44.272
And it's like, okay, I know this is
about to open a text editor, right?

116
00:06:44.272 --> 00:06:47.319
Cuz obviously this is links as I
click here to open the text editor.

117
00:06:47.319 --> 00:06:51.371
So here it's like, get ahead of the user,
download this first.

118
00:06:51.371 --> 00:06:55.623
So that when they click this link
we're immediately ready to go.

119
00:06:55.623 --> 00:06:56.588
It's kind of cool.

120
00:06:56.588 --> 00:06:59.703
Really interesting way of doing hinting.

121
00:06:59.703 --> 00:07:02.053
And the cool thing about this is,
browsers can ignore it, right?

122
00:07:02.053 --> 00:07:04.945
If it's in low battery mode or
something like that,

123
00:07:04.945 --> 00:07:06.795
the browser will just ignore it.

124
00:07:06.795 --> 00:07:07.890
But it doesn't break it, right?

125
00:07:07.890 --> 00:07:09.189
They'll just have to wait longer.

126
00:07:09.189 --> 00:07:13.508
Web components, people have been
clamoring for this for a long, long time.

127
00:07:13.508 --> 00:07:16.161
They've kind of been possible for
a long time, but

128
00:07:16.161 --> 00:07:18.828
now that's kind of gotten
first-class support.

129
00:07:18.828 --> 00:07:21.165
Why do you care about this?

130
00:07:21.165 --> 00:07:25.749
Probably, I'm not going to encourage
you to write directly web components

131
00:07:25.749 --> 00:07:28.837
yourself if you're using React,
just use React.

132
00:07:28.837 --> 00:07:30.808
Why this is actually interesting is for
library authors.

133
00:07:30.808 --> 00:07:35.195
So for an example,
I was talking to Auth company D Scope.

134
00:07:35.195 --> 00:07:39.930
If you've heard of them, it's perfectly
fine, auth provider, I quite like them.

135
00:07:39.930 --> 00:07:45.091
They get to build their auth components
that you can import into your page once.

136
00:07:45.091 --> 00:07:49.032
And then they get to ship that to Angular,
to React, to View, and

137
00:07:49.032 --> 00:07:52.482
they all just render a web
component at the end of the day.

138
00:07:52.482 --> 00:07:56.867
And it's all encapsulates the logic,
the CSS, the HTML, the JavaScript.

139
00:07:56.867 --> 00:07:59.873
And they get it right at once,
and it just works everywhere.

140
00:07:59.873 --> 00:08:04.389
That's awesome for them, instead of having
to maintain seven different SDKs for

141
00:08:04.389 --> 00:08:06.555
seven different frameworks, right?

142
00:08:06.555 --> 00:08:11.092
So it's awesome for providers and
all that kind of stuff,

143
00:08:11.092 --> 00:08:15.546
that they can ship one component
to multiple libraries.

144
00:08:15.546 --> 00:08:18.136
So they finally figured out how to
do it really well with React, and

145
00:08:18.136 --> 00:08:20.792
so they're finally gonna ship that,
which I think is really cool.

146
00:08:23.713 --> 00:08:27.366
&gt;&gt; Brian Holt: More stuff,
I linked the stuff here.

147
00:08:27.366 --> 00:08:29.953
You can see that they announced
this on April 25th, so

148
00:08:29.953 --> 00:08:32.663
it's been some time since they
announced all this stuff.

149
00:08:32.663 --> 00:08:35.673
There's more than what I
talked about in here, but

150
00:08:35.673 --> 00:08:37.985
I think I kinda gave you the highlight.

