WEBVTT

1
00:00:00.440 --> 00:00:05.256
&gt;&gt; Brian Holt: So
let's go make it work with order.jsx now.

2
00:00:05.256 --> 00:00:12.218
So we are gonna import useContext,
another very fun hook from React,

3
00:00:12.218 --> 00:00:17.231
and we're going to import,
&gt;&gt; Brian Holt: {

4
00:00:17.231 --> 00:00:23.642
CartContext } from "./contexts";.

5
00:00:23.642 --> 00:00:26.460
Actually, we can just
replace this part right here.

6
00:00:26.460 --> 00:00:29.543
So cart equals setCart, right, this part.

7
00:00:29.543 --> 00:00:35.151
And the only difference thing is we're
gonna say useContext(CartContext);.

8
00:00:37.699 --> 00:00:40.067
&gt;&gt; Brian Holt: And now,
whatever is in this CartContext,

9
00:00:40.067 --> 00:00:43.593
whatever it can find above,
it that is going to be passed in here.

10
00:00:45.876 --> 00:00:47.709
&gt;&gt; Brian Holt: It's kind of
a pleasant API, isn't it?

11
00:00:47.709 --> 00:00:50.639
You just kind of pass it in and
now that's available here.

12
00:00:52.460 --> 00:00:56.131
&gt;&gt; Brian Holt: Here's the fun part,
we don't have to change anything else,

13
00:00:56.131 --> 00:00:59.885
everything else just works the same way,
which is kind of neat.

14
00:01:03.713 --> 00:01:07.193
&gt;&gt; Brian Holt: Okay, and
now let's go use it in header as well.

15
00:01:11.916 --> 00:01:17.241
&gt;&gt; Brian Holt: So
at the top of header, we're gonna say

16
00:01:17.241 --> 00:01:22.367
import,
&gt;&gt; Brian Holt: { useContext }

17
00:01:22.367 --> 00:01:28.811
from "react";, and
we're gonna import our CartContext again.

18
00:01:31.935 --> 00:01:35.658
&gt;&gt; Brian Holt: Man, I put too many
tongue twisters in today's workshop.

19
00:01:35.658 --> 00:01:38.485
CartContext is just gonna kill me.

20
00:01:38.485 --> 00:01:40.907
At least it's not pizza of the day.

21
00:01:40.907 --> 00:01:44.969
All right, here, I only need cart, right?

22
00:01:44.969 --> 00:01:49.237
And actually I'm not setting
the cart anywhere, so

23
00:01:49.237 --> 00:01:55.273
I'm just gonna say const [cart]
= useContext(CartContext);.

24
00:01:55.273 --> 00:01:57.893
Again, I'm not using the setter anywhere,
so I'm not gonna pull it out.

25
00:01:59.073 --> 00:02:03.625
And instead of having 5 here,
I'm just gonna have cart.length, right?

26
00:02:06.183 --> 00:02:08.374
&gt;&gt; Brian Holt: Except,
what's wrong with this?

27
00:02:08.374 --> 00:02:09.292
&gt;&gt; Speaker 1: That's a string literal.

28
00:02:09.292 --> 00:02:11.007
&gt;&gt; Brian Holt: Literally a string literal,
there we go.

29
00:02:15.048 --> 00:02:21.827
&gt;&gt; Brian Holt: Cool, so ideally,
if I say Add to Cart, big double,

30
00:02:21.827 --> 00:02:28.322
notice that the number up here is correct,
right?

31
00:02:28.322 --> 00:02:33.626
Please don't add a hundred things in
here because the number overflows.

32
00:02:33.626 --> 00:02:35.875
Even two numbers is a bit sketch.

33
00:02:35.875 --> 00:02:39.288
Again, the context API has gotten
a lot better than it used to be.

34
00:02:40.398 --> 00:02:42.171
But what's hard about, again,

35
00:02:42.171 --> 00:02:47.115
this useContext(CartContext);,
&gt;&gt; Brian Holt: Let's say that

36
00:02:47.115 --> 00:02:48.954
this number starts going up, in fact,

37
00:02:48.954 --> 00:02:52.149
this is actually kind of the classic
problem with hooks in general.

38
00:02:52.149 --> 00:02:53.766
I'm not a Facebook user, but

39
00:02:53.766 --> 00:02:58.171
Facebook used to have this problem where
there would be phantom notifications,

40
00:02:58.171 --> 00:03:02.528
right, and then you would click on it and
there would be no notification there.

41
00:03:02.528 --> 00:03:04.820
This was a React problem,

42
00:03:04.820 --> 00:03:10.873
that React would have inability to
track these contexts correctly.

43
00:03:10.873 --> 00:03:12.616
And it was a byproduct of that.

44
00:03:12.616 --> 00:03:16.330
It was really annoying, and
a lot of people got super annoyed by it.

45
00:03:16.330 --> 00:03:20.844
They've much improved this, but
the problem it's all the indirection of,

46
00:03:20.844 --> 00:03:25.364
where does this context come from,
and what is modifying it?

47
00:03:25.364 --> 00:03:28.928
Just by looking at header,
let's say I have a bug with header and

48
00:03:28.928 --> 00:03:32.164
this number is always wrong,
what modified the context?

49
00:03:33.844 --> 00:03:36.547
It's not immediately apparent from header.

50
00:03:39.173 --> 00:03:43.515
&gt;&gt; Brian Holt: Cuz let's say, okay, I
know it's CartContext, I'm gonna oversee,

51
00:03:43.515 --> 00:03:46.434
I'm gonna search my code base for
CartContext,

52
00:03:46.434 --> 00:03:50.722
and I'm gonna go look an app, and
I'm gonna see where this is created.

53
00:03:50.722 --> 00:03:53.050
But this isn't modifying it.

54
00:03:53.050 --> 00:03:54.930
Where's it being modified?

55
00:03:54.930 --> 00:03:59.476
Again, by looking at this, if this
was totally unfamiliar code to you,

56
00:03:59.476 --> 00:04:01.189
you can't see it, right,

57
00:04:01.189 --> 00:04:06.199
you have to go through the entire code
base to figure out what is modifying this.

58
00:04:06.199 --> 00:04:09.042
You have to eventually land on order,
right?

59
00:04:09.042 --> 00:04:13.460
Now, with the imports, it makes it
a little bit easier to be able to grep

60
00:04:13.460 --> 00:04:18.411
through it, right, to be able to find it,
but that used to not be true, right?

61
00:04:18.411 --> 00:04:21.307
It used to be really opaque
of where it was coming from.

62
00:04:21.307 --> 00:04:26.286
But it's strange in the structuring of
this app that doing something over here

63
00:04:26.286 --> 00:04:28.257
affects something over here.

64
00:04:30.017 --> 00:04:34.658
They provide for it,
because that's just how websites work,

65
00:04:34.658 --> 00:04:39.051
right, but in terms of beautiful,
clean code, it sucks.

