WEBVTT

1
00:00:00.394 --> 00:00:05.191
&gt;&gt; Brian Holt: But let's talk a little
bit about what we've done here.

2
00:00:05.191 --> 00:00:06.188
We have an order form,

3
00:00:06.188 --> 00:00:09.659
this will eventually will look nicer once
we have all the pieces put together.

4
00:00:14.256 --> 00:00:16.630
&gt;&gt; Brian Holt: I want you to try and
select a different type of pizza.

5
00:00:21.299 --> 00:00:23.894
&gt;&gt; Brian Holt: Doesn't work, right?

6
00:00:26.159 --> 00:00:31.224
&gt;&gt; Brian Holt: It broke the browser,
which is actually kinda hard to do, right?

7
00:00:31.224 --> 00:00:35.326
The browser works really well at creating
these types of forms, and whatever we

8
00:00:35.326 --> 00:00:39.757
did with React made it not work, which
seems kind of counterproductive, right?

9
00:00:39.757 --> 00:00:44.069
Same thing with the pizza size,
click on one of these other buttons.

10
00:00:44.069 --> 00:00:48.905
No matter what, you're always going
to be selecting small or large, and

11
00:00:48.905 --> 00:00:50.779
that's annoying, right?

12
00:00:50.779 --> 00:00:53.101
We expect the radio buttons to work so
that you can select small,

13
00:00:53.101 --> 00:00:53.839
medium, or large.

14
00:00:54.969 --> 00:00:57.261
Well, reason with me of
why this is happening.

15
00:01:00.115 --> 00:01:06.336
&gt;&gt; Brian Holt: All right,
you have [COUGH] pepperoni here, right?

16
00:01:06.336 --> 00:01:08.716
Which is the value here, so
that's why it's selecting that one.

17
00:01:10.626 --> 00:01:14.056
Now I click Hawaiian, right?

18
00:01:14.056 --> 00:01:16.576
If I click Hawaiian here, what happens?

19
00:01:17.916 --> 00:01:22.190
React says, hey, an event happened,
the user did something,

20
00:01:22.190 --> 00:01:26.867
it's time for
us to re-render this component, right?

21
00:01:26.867 --> 00:01:29.765
So it goes through and
it re-renders this component,

22
00:01:29.765 --> 00:01:32.157
says pizza type pepperoni, right?

23
00:01:32.157 --> 00:01:35.927
And so it sets the value
to be pizza type pepperoni.

24
00:01:35.927 --> 00:01:38.779
So even though the user is
clicking on something else,

25
00:01:38.779 --> 00:01:43.832
it's immediately setting it back to where
it was, because this isn't dynamic, right?

26
00:01:43.832 --> 00:01:47.012
This is just assigned and
then it just stays that way.

27
00:01:48.032 --> 00:01:52.933
So we have to do some sort of assigning
pizza type to be something different or

28
00:01:52.933 --> 00:01:55.780
else it's just gonna continually be that.

29
00:01:57.673 --> 00:02:00.697
&gt;&gt; Brian Holt: This is just
a roundabout way of me explaining and

30
00:02:00.697 --> 00:02:04.621
showing to you that two-way data
binding is not free in React.

31
00:02:04.621 --> 00:02:06.191
There are some other frameworks.

32
00:02:06.191 --> 00:02:11.031
Famously, Angular 1 was a big
two-way data binding framework.

33
00:02:11.031 --> 00:02:15.544
And that's just not true anymore,
we found that that's very fun to write and

34
00:02:15.544 --> 00:02:19.780
very bad to maintain because it becomes
very black magic of where did this

35
00:02:19.780 --> 00:02:21.042
variable come from?

36
00:02:22.882 --> 00:02:25.226
&gt;&gt; Brian Holt: Part of the magic
of React is that it is verbose.

37
00:02:25.226 --> 00:02:28.210
I'm not gonna argue with
you that it is not.

38
00:02:28.210 --> 00:02:31.030
It could be shorter or
more terse or something like that.

39
00:02:32.860 --> 00:02:37.820
It's a little less fun to write, and
it's a lot more fun to maintain.

40
00:02:37.820 --> 00:02:39.205
And as I've gone through my career,

41
00:02:39.205 --> 00:02:41.835
I have found that that's actually
worth its weight in gold, right?

42
00:02:41.835 --> 00:02:47.877
I don't wanna optimize for the couple of
hours I'm gonna spend writing something.

43
00:02:47.877 --> 00:02:50.787
I wanna optimize for the hundreds of hours
I'm gonna spend maintaining something.

44
00:02:53.460 --> 00:02:56.991
&gt;&gt; Brian Holt: Okay, so that's my
spiel of why I think this is okay,

45
00:02:56.991 --> 00:03:00.062
despite the fact that it
is a little annoying.

46
00:03:01.478 --> 00:03:04.047
&gt;&gt; Brian Holt: Interesting,
if you go try something like solid js,

47
00:03:04.047 --> 00:03:06.169
which is very similar
to React in many ways.

48
00:03:06.169 --> 00:03:10.298
They found a way to kind of make it
work with something called signals.

49
00:03:10.298 --> 00:03:12.301
I think signals are in pre-act as well,
no,

50
00:03:12.301 --> 00:03:14.270
I haven't written pre-act in a long time.

51
00:03:14.270 --> 00:03:19.017
But anyway, suffice to say other
framework, different approach to this,

52
00:03:19.017 --> 00:03:23.928
but React takes a very straightforward,
very, I wanna call it JavaScripty.

53
00:03:23.928 --> 00:03:27.592
They're just kind of working with
JavaScript to make it work the way that

54
00:03:27.592 --> 00:03:31.081
JavaScript normally works,
as opposed to having black magic around

55
00:03:31.081 --> 00:03:33.506
the the framework to
make it work differently.

56
00:03:34.686 --> 00:03:39.031
So let's, let's go make this
work with state then, right?

57
00:03:39.031 --> 00:03:42.131
We're gonna use something called a hook.

58
00:03:42.131 --> 00:03:49.403
Everyone do this thing called input,
use state from React.

59
00:03:49.403 --> 00:03:51.953
Anything that you see use in React,

60
00:03:51.953 --> 00:03:56.973
the alarm should go off in your head,
it's like this is a hook, okay?

61
00:03:59.003 --> 00:04:04.316
So instead of these two, I'm gonna say

62
00:04:04.316 --> 00:04:09.153
const pizza type, set pizza type.

63
00:04:11.738 --> 00:04:14.165
&gt;&gt; Brian Holt: Equals use state, and

64
00:04:14.165 --> 00:04:20.048
then you give it the default first value,
pepperoni.

65
00:04:20.048 --> 00:04:22.407
Same thing with pizza size, const.

66
00:04:22.407 --> 00:04:28.526
SetPizzaSize equals useState and

67
00:04:28.526 --> 00:04:35.139
whatever you want the default to be.

68
00:04:35.139 --> 00:04:38.324
We had it as medium, we'll just leave it
as medium, but you could change it to

69
00:04:38.324 --> 00:04:41.329
large if you're trying to drive up
your margins or something like that.

70
00:04:43.900 --> 00:04:46.305
&gt;&gt; Brian Holt: This is also
a course on capitalism,

71
00:04:46.305 --> 00:04:48.952
I don't know if I told you that, [LAUGH].

72
00:04:48.952 --> 00:04:53.746
All right, so
now we have this use state thing, but

73
00:04:53.746 --> 00:05:00.005
this now makes pizza type able to
be set to be something different.

74
00:05:00.005 --> 00:05:03.461
It makes this React components stateful,
but

75
00:05:03.461 --> 00:05:09.973
we still have to call this set pizza
type somewhere so that we can change it.

76
00:05:09.973 --> 00:05:12.693
So the way that we're gonna do it is
we're gonna go on our select here.

77
00:05:12.693 --> 00:05:17.174
By the way,
these are just highlighted because

78
00:05:17.174 --> 00:05:20.878
they're not being used anywhere but.

79
00:05:20.878 --> 00:05:21.888
We'll do that in just a second.

80
00:05:23.348 --> 00:05:25.161
All right, so
I'm just gonna put some space here so

81
00:05:25.161 --> 00:05:26.268
you can see what I'm writing.

82
00:05:26.268 --> 00:05:30.208
We're gonna do something
here called onChange.

83
00:05:30.208 --> 00:05:35.490
And the only thing we're
going to do is we're

84
00:05:35.490 --> 00:05:40.823
going to say e,
which is like a normal break.

85
00:05:40.823 --> 00:05:42.513
Browser event, right?

86
00:05:42.513 --> 00:05:45.800
You could call this event just for
so many years of doing this,

87
00:05:45.800 --> 00:05:47.073
I just always call it e.

88
00:05:47.073 --> 00:05:50.938
So that's really up to you,
&gt;&gt; Brian Holt: And

89
00:05:50.938 --> 00:05:54.931
we're just gonna give this
this anonymous function,

90
00:05:54.931 --> 00:05:58.674
let's say set pizza type
to be e.target.value.

91
00:06:03.914 --> 00:06:08.096
&gt;&gt; Brian Holt: So
this is saying whenever a change event

92
00:06:08.096 --> 00:06:12.156
happens on select call this function.

93
00:06:12.156 --> 00:06:16.287
This function takes in an event and
it calls set pizza type with

94
00:06:16.287 --> 00:06:21.226
the target.value, the target is gonna
be one of these options, right?

95
00:06:21.226 --> 00:06:24.670
Because that's what's actually gonna
be the Well, I think the target's

96
00:06:24.670 --> 00:06:28.456
actually the select, not thinking about
it, but the value will change, right?

97
00:06:29.706 --> 00:06:31.476
So the value will be
whatever the option is.

98
00:06:31.476 --> 00:06:35.257
So this value will be whatever their user
has set, and we'll call that with set

99
00:06:35.257 --> 00:06:38.573
pizza type, which will then end up
changing the pizza type up here.

100
00:06:38.573 --> 00:06:40.417
Which kicks off a re-render, and

101
00:06:40.417 --> 00:06:43.413
now it's gonna be correctly
rendering the same thing.

102
00:06:45.693 --> 00:06:49.173
So if we set this size is still not gonna
work because we haven't done that yet.

103
00:06:49.173 --> 00:06:51.843
But let's go try this one.

104
00:06:51.843 --> 00:06:54.753
We should be able to set
this to something else.

105
00:06:56.943 --> 00:07:00.911
Congratulations, we unbroke it, right?

106
00:07:00.911 --> 00:07:04.566
All right so this is called a hook.

107
00:07:06.636 --> 00:07:12.016
Some rules around fight club,
we don't talk about fight club.

108
00:07:12.016 --> 00:07:15.481
Some rules around hooks,
you do talk about hooks,

109
00:07:15.481 --> 00:07:18.311
you can talk about hooks, that's fine.

110
00:07:21.412 --> 00:07:23.051
&gt;&gt; Brian Holt: They can never
be inside of conditionals.

111
00:07:23.051 --> 00:07:25.588
So never, ever do something like this.

112
00:07:25.588 --> 00:07:30.378
If something right, then use state.

113
00:07:30.378 --> 00:07:35.045
This is a big no no, because the one
thing about hooks is that they depend on

114
00:07:35.045 --> 00:07:38.919
being called in the same
order every single time.

115
00:07:38.919 --> 00:07:41.367
So, if I did a conditional there,

116
00:07:41.367 --> 00:07:45.089
then it would sometimes give
them to me out of order.

117
00:07:45.089 --> 00:07:48.744
So really what would happen is sometimes
like medium would show up in pizza type,

118
00:07:48.744 --> 00:07:49.997
which is not what you want.

119
00:07:49.997 --> 00:07:53.548
So, in other words, conditional or

120
00:07:53.548 --> 00:08:00.076
hooks never go inside of for
loops, while loops,, do loops.

121
00:08:00.076 --> 00:08:04.446
They never go inside of conditionals,
they're just always top level.

122
00:08:04.446 --> 00:08:06.096
Even if you don't use them, that's fine.

123
00:08:06.096 --> 00:08:08.636
Just never put them in conditionals.

124
00:08:08.636 --> 00:08:09.346
You never have to.

125
00:08:09.346 --> 00:08:11.756
So you just, sometimes you ignore
a hook and that's fine, but

126
00:08:11.756 --> 00:08:14.086
you still have to call it in
the same order every single time.

127
00:08:16.126 --> 00:08:18.348
There's linting rules that
will help you with that.

128
00:08:18.348 --> 00:08:25.178
As well, so why are they called hooks?

129
00:08:25.178 --> 00:08:30.088
In my like head canon of why this is,
I don't I've never asked anyone this.

130
00:08:30.088 --> 00:08:31.779
This is just what occurs to me,

131
00:08:31.779 --> 00:08:35.698
is there's a hook that gets called
in the same order every single time.

132
00:08:35.698 --> 00:08:38.258
So it's like a hook being picked up,
right?

133
00:08:38.258 --> 00:08:40.928
And they get picked up in the same
order every single time in these

134
00:08:40.928 --> 00:08:42.124
render functions, right?

135
00:08:46.163 --> 00:08:52.217
&gt;&gt; Brian Holt: Yep, hooks rely on
strict ordering, we talked about that.

136
00:08:52.217 --> 00:08:56.294
Yeah some of you might be thinking like,
this seems like a weird API, right?

137
00:08:56.294 --> 00:08:58.144
It is kind of a weird API,
if you think about it.

138
00:08:58.144 --> 00:09:01.318
I'm just so used to to seeing it so
frequently that, again,

139
00:09:01.318 --> 00:09:03.684
a frog that got boiled, right?

140
00:09:03.684 --> 00:09:06.982
But it's just returning to
you an array of two things,

141
00:09:06.982 --> 00:09:11.154
the actual thing, and then the setter for
the actual thing, right?

142
00:09:12.374 --> 00:09:14.594
That's just all that is, right?

143
00:09:14.594 --> 00:09:17.712
So you could definitely say, like const,

144
00:09:17.712 --> 00:09:21.962
pizza hook,
&gt;&gt; Brian Holt: =useState

145
00:09:23.965 --> 00:09:28.717
&gt;&gt; Brian Holt: Right, and then you would

146
00:09:28.717 --> 00:09:36.502
say const pizzaType = pizzaHook[0].

147
00:09:36.502 --> 00:09:37.918
And then set pizzaType.

148
00:09:43.516 --> 00:09:50.419
&gt;&gt; Brian Holt: Right, this one line is
the equivalent of these three lines.

149
00:09:50.419 --> 00:09:52.677
But we're all very lazy and
we all write it this way.

150
00:09:52.677 --> 00:09:58.224
So useState is.

151
00:09:58.224 --> 00:10:00.972
By far the most common one
that you will use, but

152
00:10:00.972 --> 00:10:03.114
I will show you a couple other hooks.

153
00:10:03.114 --> 00:10:07.604
But just know that use state
is by far the most common one.

154
00:10:07.604 --> 00:10:08.284
Yeah.

155
00:10:08.284 --> 00:10:12.355
Someone online is just asking if you could
console log just to show kind of the state

156
00:10:12.355 --> 00:10:12.954
changing.

157
00:10:14.344 --> 00:10:14.844
Sure.

158
00:10:23.495 --> 00:10:28.772
&gt;&gt; Brian Holt: Type, pizza size,
&gt;&gt; Brian Holt: All

159
00:10:28.772 --> 00:10:33.364
right, let's just trash this.

160
00:10:37.826 --> 00:10:42.818
&gt;&gt; Brian Holt: All right, so, you can
see every time that a user event is

161
00:10:42.818 --> 00:10:47.610
happening here,
it's actually doing a re-render.

162
00:10:47.610 --> 00:10:52.742
It's interesting that it is smart enough
to know that events happening in other

163
00:10:52.742 --> 00:10:57.963
parts of the Dom are not being observed,
and so it's not catching those events.

164
00:10:59.163 --> 00:11:00.663
Reactors gotten a lot
smarter over the years.

165
00:11:00.663 --> 00:11:04.013
They used to would have triggered
a re-render, and it doesn't anymore.

166
00:11:04.013 --> 00:11:07.087
So let's go make it work
with pizza size as well.

167
00:11:12.686 --> 00:11:18.207
&gt;&gt; Brian Holt: So with, pizza size there's
a couple of different ways to do this.

168
00:11:18.207 --> 00:11:22.698
I'll show you the lazy way that
the linter will complain about.

169
00:11:24.462 --> 00:11:29.311
&gt;&gt; Brian Holt: Event bubbling
still works in React as well.

170
00:11:29.311 --> 00:11:31.860
So in theory,
you can actually do it this way

171
00:11:35.429 --> 00:11:40.117
&gt;&gt; Brian Holt: Equals, same thing,

172
00:11:40.117 --> 00:11:44.805
E, setPizzaSize to be

173
00:11:44.805 --> 00:11:49.257
E.target.value,

174
00:11:55.133 --> 00:11:56.776
&gt;&gt; Brian Holt: And then this will
start working Working, right?

175
00:11:56.776 --> 00:12:00.594
Because we have one event listener
on the parent element, right?

176
00:12:01.914 --> 00:12:03.684
And so it's listening for
just the one time.

177
00:12:04.984 --> 00:12:08.565
React doesn't like this because
it views as inaccessible,

178
00:12:08.565 --> 00:12:12.145
which generally you don't want
change handlers on like divs

179
00:12:12.145 --> 00:12:16.023
because screen readers and
all that kind of stuff can't access.

180
00:12:16.023 --> 00:12:17.823
divs, they access inputs, right?

181
00:12:20.253 --> 00:12:21.734
I think that in this particular case,

182
00:12:21.734 --> 00:12:24.713
it wouldn't matter because it's still
bubbling the event no matter what.

183
00:12:24.713 --> 00:12:27.323
And so you can have a change event
on a input and it'll still work.

184
00:12:28.563 --> 00:12:33.243
But let's just appease the linting gods.

185
00:12:33.243 --> 00:12:38.758
And we're going to put this
on all the individual inputs.

186
00:12:38.758 --> 00:12:40.960
It's more explicit as well, so

187
00:12:40.960 --> 00:12:45.455
we're just gonna put this three
different times in all of these.

188
00:12:48.804 --> 00:12:51.719
&gt;&gt; Brian Holt: Now you might say,
well do I need E.target.value?

189
00:12:51.719 --> 00:12:55.232
Or should I do S here like this.

190
00:12:57.205 --> 00:12:58.720
&gt;&gt; Brian Holt: Tomato, tomato, same thing.

191
00:13:01.859 --> 00:13:03.545
&gt;&gt; Brian Holt: Because the value
is coming from here, right?

192
00:13:07.470 --> 00:13:09.172
&gt;&gt; Brian Holt: But
in both cases, it works.

