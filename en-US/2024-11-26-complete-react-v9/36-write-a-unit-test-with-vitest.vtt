WEBVTT

1
00:00:00.160 --> 00:00:04.017
&gt;&gt; Brian Holt: We're doing everyone's
favorite thing now, which is testing.

2
00:00:04.017 --> 00:00:07.596
[LAUGH] Some people get pumped about it,

3
00:00:07.596 --> 00:00:12.376
other people are like,
why are you wasting my time?

4
00:00:12.376 --> 00:00:14.825
I'm probably somewhere in the middle.

5
00:00:14.825 --> 00:00:18.520
I like tests when they prevent me
from wasting time in the future, and

6
00:00:18.520 --> 00:00:22.104
I hate tests that waste my time now and
don't help me in the future.

7
00:00:24.414 --> 00:00:30.074
So, again, I've been all over
the years of how I felt about testing.

8
00:00:30.074 --> 00:00:33.400
I went all the way from,
I can't be bothered, I got to ship stuff.

9
00:00:33.400 --> 00:00:35.576
I've been all the ways like, let's do TDD,

10
00:00:35.576 --> 00:00:38.055
I've never actually been
that militant about it.

11
00:00:38.055 --> 00:00:42.503
And I'm kind of more back towards,
let's write less tests that I like, and

12
00:00:42.503 --> 00:00:45.646
let's not write tests that
don't tell me anything.

13
00:00:46.756 --> 00:00:50.808
So I'm on the side of the camp that's,
let's test less, yeah.

14
00:00:50.808 --> 00:00:54.690
&gt;&gt; Speaker 2: Steve Kenny just released
a testing fundamentals course.

15
00:00:54.690 --> 00:00:56.884
And I liked one thing he said, which was,

16
00:00:56.884 --> 00:01:01.024
when you get to a point where you feel
overwhelmed with how many things are going

17
00:01:01.024 --> 00:01:04.679
on in your head as far as the business
rules and the code and whatever.

18
00:01:04.679 --> 00:01:09.167
When you feel that sorta overwhelm or
anxiety, at that point,

19
00:01:09.167 --> 00:01:13.738
that's a really great place to
introduce tests cuz it can kind of

20
00:01:13.738 --> 00:01:18.397
reduce that cognitive load that
you're gonna break something or

21
00:01:18.397 --> 00:01:22.146
forgot to think of a certain use case,
or whatever.

22
00:01:22.146 --> 00:01:23.956
&gt;&gt; Brian Holt: That's a good
way of putting it, I like that.

23
00:01:23.956 --> 00:01:27.144
Steve's a smart guy when it comes
to that kinda stuff, too, so

24
00:01:27.144 --> 00:01:29.446
I would say definitely
check out his course.

25
00:01:29.446 --> 00:01:33.099
I wanted to show you how to test this app,

26
00:01:33.099 --> 00:01:38.043
cuz I think there's some good
things to do in here, but

27
00:01:38.043 --> 00:01:42.251
I'm not the person that
writes a ton of tests.

28
00:01:44.449 --> 00:01:47.018
&gt;&gt; Brian Holt: The place where
I find tests super useful is,

29
00:01:47.018 --> 00:01:51.618
when someone gives me an issue that here's
a bug that we need to go fix, I actually

30
00:01:51.618 --> 00:01:56.103
find a really good way to start is to
write the test that would've caught that.

31
00:01:56.103 --> 00:01:59.765
And then you can be kinda confident later
when you come back to it later, it's like,

32
00:01:59.765 --> 00:02:02.305
okay, I wrote this test beforehand,
now it's passing.

33
00:02:02.305 --> 00:02:06.003
Now I can launch it, and now I have a test
to go out to production with it that

34
00:02:06.003 --> 00:02:08.286
probably won't regress you this way again.

35
00:02:11.447 --> 00:02:15.431
&gt;&gt; Brian Holt: [COUGH] But I'm a really
big on, I want tests to fail fast,

36
00:02:15.431 --> 00:02:20.912
I want them to fail loudly, and I want
them to be testing something important.

37
00:02:20.912 --> 00:02:23.536
And if it's not doing all
three of those things,

38
00:02:23.536 --> 00:02:25.910
I generally don't want that test, right?

39
00:02:27.680 --> 00:02:32.862
I like integration tests,
big suites that cover user experiences,

40
00:02:32.862 --> 00:02:38.327
around something like, this user can
log in and buy something, right?

41
00:02:38.327 --> 00:02:41.507
But I only want a few of those, cuz if
you've ever maintained big suites of

42
00:02:41.507 --> 00:02:45.048
Selenium tests, you know what I'm talking
about where you spend half of your life

43
00:02:45.048 --> 00:02:49.204
fighting tests, where it's false positives
or false negatives or something like that.

44
00:02:49.204 --> 00:02:53.777
So in those cases, I want a few
tests that I care deeply about, and

45
00:02:53.777 --> 00:02:59.118
then if I don't care deeply about it or
it's too finicky, I just delete it.

46
00:02:59.118 --> 00:03:01.638
Deleting tests should be something
that you do on a regular basis,

47
00:03:01.638 --> 00:03:02.809
I do feel strongly about that.

48
00:03:05.209 --> 00:03:10.224
So, now that I've given you all
the disclaimers of your learning from

49
00:03:10.224 --> 00:03:16.089
a crotchety old man about testing, I just
wanted you to know my perspective on it.

50
00:03:16.089 --> 00:03:19.815
There's other people out there that
are way more, let's test all of the things

51
00:03:19.815 --> 00:03:23.330
that I'm more towards, let's test
fewer things kind of side of the camp.

52
00:03:25.600 --> 00:03:28.254
So we're gonna test with Vitest today,

53
00:03:28.254 --> 00:03:32.480
which is a really cool thing made
by the Vite people themselves.

54
00:03:32.480 --> 00:03:35.512
It's really nice because we
don't have to set it up again.

55
00:03:35.512 --> 00:03:38.558
In the old days when we were writing
Mocha tests and stuff like that,

56
00:03:38.558 --> 00:03:40.223
you had to set up everything by hand.

57
00:03:40.223 --> 00:03:43.359
And the nice thing about Vitest is
that it reads your Vite config and

58
00:03:43.359 --> 00:03:46.719
it just uses that, which is nice cuz
we don't have to write any config,

59
00:03:46.719 --> 00:03:48.914
I don't think, not for a while at least.

60
00:03:48.914 --> 00:03:51.237
It's designed to be a drop-in
replacement for Jest,

61
00:03:51.237 --> 00:03:53.814
which is what I used to teach for
this class.

62
00:03:53.814 --> 00:03:59.726
Jest was made by Facebook and is now
OpenJS, so it's a totally open foundation.

63
00:03:59.726 --> 00:04:02.662
And Vitest is just mimicking
what Jest is like, and

64
00:04:02.662 --> 00:04:05.616
Jest was mimicking what Jasmine was like,
right?

65
00:04:05.616 --> 00:04:08.886
So if you've written Jasmine,
Jest or Vitest,

66
00:04:08.886 --> 00:04:12.012
they're all mimicking Jasmine originally.

67
00:04:12.012 --> 00:04:15.172
I think I even taught Jasmine for
one of the courses here.

68
00:04:15.172 --> 00:04:18.766
Certainly Mocha, I've taught a lot of
different testing software because

69
00:04:18.766 --> 00:04:21.218
the flavor of the day tends
to change quite a bit.

70
00:04:21.218 --> 00:04:23.778
Let's talk about Vitest.

71
00:04:23.778 --> 00:04:29.549
I'm gonna cancel my Vite server here for
a little bit,

72
00:04:29.549 --> 00:04:35.321
I'm just gonna copy this
from my notes here, Vitest,

73
00:04:35.321 --> 00:04:40.093
and then testing-library and happy-dom.

74
00:04:41.914 --> 00:04:46.496
So just to show you here, vitest 2.1.3,

75
00:04:46.496 --> 00:04:51.432
testing-library/react@16.0.1, and

76
00:04:51.432 --> 00:04:54.491
happy-dom at 15.7.4.

77
00:04:54.491 --> 00:04:57.753
Okay, Vitest,
I just explained to you what that is,

78
00:04:57.753 --> 00:05:00.519
that's the testing suite harness for Vite.

79
00:05:01.900 --> 00:05:07.040
Testing-library/react, this is a bunch
of helper tools for writing react tests.

80
00:05:07.040 --> 00:05:10.145
It is definitely the one
that everyone uses now.

81
00:05:10.145 --> 00:05:14.317
Years and years and years ago,
Airbnb released one called Enzyme that

82
00:05:14.317 --> 00:05:17.650
people used for a long time,
and it was finicky as hell.

83
00:05:19.140 --> 00:05:21.357
And now people use this instead,
this is much easier to use,

84
00:05:21.357 --> 00:05:22.283
so definitely use this.

85
00:05:22.283 --> 00:05:27.908
And then happy-dom is
a synthetic browser environment.

86
00:05:27.908 --> 00:05:30.972
So we used to use one called jsdom.

87
00:05:30.972 --> 00:05:32.838
It was just massive and
it was quite slow, and

88
00:05:32.838 --> 00:05:35.160
someone got kinda sick of
waiting on tests apparently.

89
00:05:35.160 --> 00:05:37.304
And so they stripped that down and
made happy-dom,

90
00:05:37.304 --> 00:05:39.948
which is the much smaller version
of this that goes much faster.

91
00:05:41.804 --> 00:05:47.594
Has the benefit of being faster, has the
downside of being less complete, right?

92
00:05:47.594 --> 00:05:52.307
So if you're doing strange stuff with
browsers, which we all want to do,

93
00:05:52.307 --> 00:05:56.494
happy-dom might fail or
might pass unexpectedly.

94
00:05:56.494 --> 00:05:57.684
So do be aware of that.

95
00:05:57.684 --> 00:06:00.147
That being said, I've never had that
problem, to be honest with you.

96
00:06:04.548 --> 00:06:07.944
&gt;&gt; Brian Holt: Cool, all right,
so we have all those things now.

97
00:06:07.944 --> 00:06:11.488
We're gonna go inside our directory here,
and we're gonna make a directory called,

98
00:06:15.705 --> 00:06:18.768
&gt;&gt; Brian Holt: __tests__.

99
00:06:18.768 --> 00:06:24.405
So again, this is a Python thing that
they kinda brought over to JavaScript,

100
00:06:24.405 --> 00:06:27.278
the double underscore on either side.

101
00:06:28.428 --> 00:06:34.685
And that is a signal to any future
user that it's a magical name.

102
00:06:34.685 --> 00:06:37.298
I'm not making that up,
that's what they call it.

103
00:06:37.298 --> 00:06:40.425
And it's magical in the sense it's
important that it be called that,

104
00:06:40.425 --> 00:06:43.340
because the library that it's going
to be used with is looking for

105
00:06:43.340 --> 00:06:45.236
that name specifically.

106
00:06:45.236 --> 00:06:48.190
So the double underscoring on the side
means don't change the name of this or

107
00:06:48.190 --> 00:06:49.727
you're going to break stuff, right?

108
00:06:52.513 --> 00:06:56.699
&gt;&gt; Brian Holt: That's why you see the
underscore, underscore, in it, __.py for

109
00:06:56.699 --> 00:06:57.616
Python stuff.

110
00:06:57.616 --> 00:06:59.652
That's why it's called with
the double underscores.

111
00:07:04.023 --> 00:07:06.101
&gt;&gt; Brian Holt: Okay, so
whatever we put in here,

112
00:07:06.101 --> 00:07:10.775
Vitest is just going to assume as a test,
so you can call it whatever you want.

113
00:07:10.775 --> 00:07:16.211
I'm still gonna call my stuff
app.test.jsx, or app.spec.jsx, either

114
00:07:16.211 --> 00:07:22.163
one is fine, but you don't have to if it's
under the double underscore directory.

115
00:07:23.943 --> 00:07:26.652
By the same token,
I'm not gonna do this right now, but

116
00:07:26.652 --> 00:07:28.563
you can also just put it directly here.

117
00:07:28.563 --> 00:07:35.223
And it's also looking for
files called app.test, something.test.jsx.

118
00:07:35.223 --> 00:07:40.122
Both of those, Vitest will find your
tests automatically and run them.

119
00:07:40.122 --> 00:07:44.316
For some reason, I'm gonna do both
the double underscores and the dot test.

120
00:07:48.059 --> 00:07:51.101
&gt;&gt; Brian Holt: Okay,
so go to package.json.

121
00:07:52.761 --> 00:07:59.095
We have all of our Vitest stuff in here,
right there.

122
00:07:59.095 --> 00:08:04.079
Test, just change this to be vitest,
like that, that's it, and

123
00:08:04.079 --> 00:08:08.629
it's smart enough to be able
to read the vite.confit.js.

124
00:08:08.629 --> 00:08:11.090
So we don't have to configure
it any more than that.

125
00:08:11.090 --> 00:08:13.133
There's one thing we need to configure,
but

126
00:08:13.133 --> 00:08:16.647
we can put it directly into our vite
config, we don't have to make a new file.

127
00:08:19.554 --> 00:08:23.159
&gt;&gt; Brian Holt: Okay, so
in your vite directory here,

128
00:08:23.159 --> 00:08:29.172
we're just gonna add one more thing,
test: { environment:,

129
00:08:29.172 --> 00:08:33.153
and we're gonna do it in "happy-dom".

130
00:08:33.153 --> 00:08:36.403
Just have to tell which browser
environment that you want to do it in.

131
00:08:39.203 --> 00:08:42.151
Momentarily, I'm gonna show
you what's coming in Vitest,

132
00:08:42.151 --> 00:08:44.430
which they're going to
do it with Playwright.

133
00:08:45.940 --> 00:08:49.278
That's kind of the new hotness coming in,
and

134
00:08:49.278 --> 00:08:54.510
I tried to build this course with
Playwright, it's just not ready yet.

135
00:08:54.510 --> 00:08:56.432
I just didn't feel comfortable
telling you to do it yet, so

136
00:08:56.432 --> 00:08:58.280
we're gonna stick with happy-dom.

137
00:08:58.280 --> 00:09:02.404
I'm going to show you how to set up
Playwright towards the end, but just know,

138
00:09:02.404 --> 00:09:06.113
there's still gremlins and
goblins in there, you gotta be careful.

139
00:09:06.113 --> 00:09:11.062
Okay, so we're ready to go,
everything's ready to write tests.

140
00:09:11.062 --> 00:09:16.397
Just so you know, if you do need to
write a specific vite config for

141
00:09:16.397 --> 00:09:21.643
your vitest environment,
you can write vitest.config.js.

142
00:09:21.643 --> 00:09:25.877
And this will be a specific vite.config
for your vitest environment.

143
00:09:25.877 --> 00:09:27.767
We'll do that actually towards the end.

144
00:09:27.767 --> 00:09:33.039
Just be aware that you have to tell it
to extend your current vite.config,

145
00:09:33.039 --> 00:09:37.651
or else it will ignore it, and
then you can get into weird places.

146
00:09:37.651 --> 00:09:40.776
But again,
we'll talk about that here in a bit.

147
00:09:40.776 --> 00:09:43.760
We don't have to do that now
because luckily everything remains

148
00:09:43.760 --> 00:09:44.693
the same for us.

149
00:09:44.693 --> 00:09:49.111
So we're gonna create a file called Pizza,
and

150
00:09:49.111 --> 00:09:53.213
you can either call this test.jsx or spec.

151
00:09:53.213 --> 00:09:57.098
Either of those fine with me,
I think I called them spec in the past,

152
00:09:57.098 --> 00:09:59.083
I'm gonna call it test this time.

153
00:09:59.083 --> 00:10:01.195
Just go with what the mood suits.

154
00:10:01.195 --> 00:10:05.330
We just wanna test the alt text renders.

155
00:10:05.330 --> 00:10:09.848
Imagine that we got slapped by
a lawsuit or a violation for

156
00:10:09.848 --> 00:10:15.509
not being accessible enough because
our images didn't have alt text.

157
00:10:15.509 --> 00:10:20.789
And we wanted to make sure we need all
pizzas to have alt text on them and

158
00:10:20.789 --> 00:10:24.264
we're gonna write a test
that ensures that.

159
00:10:24.264 --> 00:10:28.199
I don't know, making stuff up here,
but that's what we're gonna do.

160
00:10:28.199 --> 00:10:32.849
&gt;&gt; Brian Holt: So we're gonna import {
render } from "@testing-library/react";.

161
00:10:32.849 --> 00:10:38.475
We're gonna import { expect,
test } from "vitest".

162
00:10:38.475 --> 00:10:43.938
And import Pizza from,
as you might have guessed,

163
00:10:43.938 --> 00:10:47.123
'../pizza';, okay?

164
00:10:49.013 --> 00:10:51.473
Now we're gonna go in and
we're gonna say test("").

165
00:10:53.283 --> 00:10:58.102
This string that we put in here,
I don't really care what you put in.

166
00:10:58.102 --> 00:11:01.138
Some people have very strong
opinions of how you structure these.

167
00:11:01.138 --> 00:11:06.239
This is my only,
strong tip to give you here.

168
00:11:06.239 --> 00:11:09.506
I just want you to put something in
here that if it says, this test failed,

169
00:11:09.506 --> 00:11:10.998
that you know which test failed.

170
00:11:12.248 --> 00:11:15.988
So ("alt text renders on image").

171
00:11:15.988 --> 00:11:20.659
That's what I have here, or on Pizza
images, that's probably even better.

172
00:11:20.659 --> 00:11:29.267
It will tell you that it
failed in Pizza.test.jsx.

173
00:11:29.267 --> 00:11:32.843
But just make sure that this is
descriptive of what you're actually

174
00:11:32.843 --> 00:11:37.184
testing and at a glance, you can tell what
failed if it tells you that this failed.

175
00:11:37.184 --> 00:11:39.253
Okay, we're gonna make
this an async function.

176
00:11:41.972 --> 00:11:48.593
&gt;&gt; Brian Holt: And we're gonna say
const name = "My favorite Pizza";.

177
00:11:48.593 --> 00:11:52.692
Const src =,
I just put in a placeholder one,

178
00:11:52.692 --> 00:11:58.488
picsum is one that I've been using lately,
.photos/200.

179
00:11:58.488 --> 00:12:03.044
I think if I just open
it here I can show you.

180
00:12:03.044 --> 00:12:04.641
Should just be a random image, right?

181
00:12:08.458 --> 00:12:09.812
&gt;&gt; Brian Holt: So that's what it is today.

182
00:12:12.112 --> 00:12:19.241
Okay, const screen = render(.

183
00:12:19.241 --> 00:12:23.475
And you just render out
whatever you wanna test,

184
00:12:23.475 --> 00:12:26.991
&lt;Pizza name = (name) description,

185
00:12:30.505 --> 00:12:34.331
&gt;&gt; Brian Holt: ="super cool pizza", and

186
00:12:34.331 --> 00:12:36.786
image=(src).

187
00:12:40.095 --> 00:12:47.686
&gt;&gt; Brian Holt: Okay,
const img = screen.getByRole("img");,

188
00:12:47.686 --> 00:12:54.019
and then we just write
some expectations here.

189
00:12:54.019 --> 00:13:00.333
Expect(img.source).toBe(src), and

190
00:13:00.333 --> 00:13:06.165
expect (img.alt).toBe(name);.

191
00:13:12.560 --> 00:13:16.633
&gt;&gt; Brian Holt: Very simple test here, but
kinda want you to just easy into a little

192
00:13:16.633 --> 00:13:19.558
bit of what testing looks
like with the vitest.

193
00:13:19.558 --> 00:13:26.069
Render, this works like the root.render
that we have from React DOM.

194
00:13:26.069 --> 00:13:31.039
But this is all being done
in Node.js synthetically, so

195
00:13:31.039 --> 00:13:36.329
it's being much faster than it
could be done in the browser.

196
00:13:36.329 --> 00:13:39.571
So we render that here,
we get this thing called screen.

197
00:13:39.571 --> 00:13:43.271
This comes from React Testing Library,
which is a render result,

198
00:13:43.271 --> 00:13:45.924
and it has a bunch of
functions available to it.

199
00:13:47.624 --> 00:13:51.344
But one of them is this getByRoll.

200
00:13:51.344 --> 00:13:54.359
I don't know if you noticed,
but when I said screen.,

201
00:13:54.359 --> 00:13:56.230
there's a lot of methods on this.

202
00:13:56.230 --> 00:14:03.946
There's ways to get stuff out
of whatever you're looking for.

203
00:14:03.946 --> 00:14:08.357
And they do this kind of
interesting way of testing.

204
00:14:08.357 --> 00:14:11.616
We all wanna do a jQuery style where
it's like, hey, give me this class or

205
00:14:11.616 --> 00:14:13.047
this id or something like that.

206
00:14:14.767 --> 00:14:16.222
And sometimes it's still kinda long for

207
00:14:16.222 --> 00:14:18.674
those days because it makes a lot
of sense for me to do it that way.

208
00:14:18.674 --> 00:14:23.351
But let me tell you why, I think theirs
is better, even if it makes me think

209
00:14:23.351 --> 00:14:27.443
a little bit harder,
Lord knows I don't wanna think that hard.

210
00:14:27.443 --> 00:14:29.345
It's very user-based, right?

211
00:14:29.345 --> 00:14:32.319
It's very based on how is
the person perceiving this,

212
00:14:32.319 --> 00:14:37.518
how are they using it, as opposed to as
me, the developer, what's the CSS class?

213
00:14:37.518 --> 00:14:40.902
The user does not care if
the CSS class is working or not,

214
00:14:40.902 --> 00:14:44.143
they do care if they can see the div or
the image or not.

215
00:14:44.143 --> 00:14:45.085
Does that make sense?

216
00:14:45.085 --> 00:14:47.770
So they kind of change the focus around.

217
00:14:47.770 --> 00:14:51.534
In this case, getByRole,
image is a role, right,

218
00:14:51.534 --> 00:14:54.628
it's a thing that user would experience.

219
00:14:54.628 --> 00:14:57.234
So in this case,
we know Pizza only has one image, so

220
00:14:57.234 --> 00:14:59.430
we can just say getByRole("img"); and

221
00:14:59.430 --> 00:15:02.651
be confident that that's gonna
be the only thing there, oops.

222
00:15:05.297 --> 00:15:08.527
&gt;&gt; Brian Holt: So that's why this works,
but there's a bunch of them,

223
00:15:08.527 --> 00:15:10.424
let's see if I can even show you.

224
00:15:10.424 --> 00:15:13.044
Yes, there's a bunch of things here.

225
00:15:13.044 --> 00:15:16.279
Get the fee, get the form,
get the heading.

226
00:15:16.279 --> 00:15:21.207
The heading will be the h two, or
the h one of it, or something like that.

227
00:15:21.207 --> 00:15:24.932
But it's interesting, these are all things
that they're very focused on, what would

228
00:15:24.932 --> 00:15:28.124
a user feel here, what would they
experience, and then you do it that way.

229
00:15:29.314 --> 00:15:32.548
I'll show you later how to do it with test
id, which is kind of approaching more

230
00:15:32.548 --> 00:15:34.950
what we want, is like, hey,
I just wanna get this thing.

231
00:15:34.950 --> 00:15:38.642
I don't know what role it's gonna be,
but I want this thing,

232
00:15:38.642 --> 00:15:40.424
I'll show you how to do that.

233
00:15:40.424 --> 00:15:45.704
Okay, so that is the most basic test.

234
00:15:45.704 --> 00:15:47.626
Let's go ahead and see if it works.

235
00:15:48.916 --> 00:15:54.621
So I'm just gonna say npm run test,
or if you're feeling extra lazy,

236
00:15:54.621 --> 00:15:58.295
npm test does work, or
if you're feeling yet

237
00:15:58.295 --> 00:16:02.763
the laziest npm t works,
specifically just for test.

238
00:16:05.562 --> 00:16:08.680
&gt;&gt; Brian Holt: Lo and behold,
we have written a test that works.

239
00:16:10.390 --> 00:16:14.544
Now, I am always extremely suspicious when
my test passed the first time that I write

240
00:16:14.544 --> 00:16:17.693
them, that I probably effed
it up somewhere, right?

241
00:16:17.693 --> 00:16:20.088
So when that happens,
on the rare occasions it does,

242
00:16:20.088 --> 00:16:23.053
I should go break this to make
sure it actually breaks, right?

243
00:16:23.053 --> 00:16:26.236
So let's go break it,
breaking things is fun.

244
00:16:26.236 --> 00:16:32.373
We want alt text={"lol no"}, right?

245
00:16:32.373 --> 00:16:37.842
And now, if I look at my test now,
this was expected to be this,

246
00:16:37.842 --> 00:16:42.383
but I was expecting it to
be "My favourite Pizza",

247
00:16:42.383 --> 00:16:46.429
and instead, I received "lol no", right?

248
00:16:46.429 --> 00:16:51.518
So what we were expecting,
and now if I go back and

249
00:16:51.518 --> 00:16:56.979
I fix it again, Pizza.test,
or sorry, not that,

250
00:16:56.979 --> 00:17:01.687
Pizza.jxs
&gt;&gt; Brian Holt: Save it,

251
00:17:01.687 --> 00:17:03.701
lo and behold, it is working.

