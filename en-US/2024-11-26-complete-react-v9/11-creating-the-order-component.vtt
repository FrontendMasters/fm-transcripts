WEBVTT

1
00:00:00.000 --> 00:00:01.500
&gt;&gt; Brian Holt: Hooks,
let's talk about hooks.

2
00:00:01.500 --> 00:00:06.746
Hooks are the way that we can
basically introduce interactivity,

3
00:00:06.746 --> 00:00:13.034
or side effects, or some other things to
just a fairly normal React component.

4
00:00:13.034 --> 00:00:15.973
One thing we didn't
chat too much about is,

5
00:00:15.973 --> 00:00:19.001
let's actually just go
take a look at pizza.

6
00:00:21.049 --> 00:00:26.006
&gt;&gt; Brian Holt: One of the key things
here is this function body here.

7
00:00:26.006 --> 00:00:30.268
It's a very hot code path, and when I say
that, I mean it gets run a lot, right?

8
00:00:30.268 --> 00:00:32.505
So it renders and
re-renders and re-renders.

9
00:00:32.505 --> 00:00:36.455
And if it sees nothing's changing,
it doesn't change anything in the DOM,

10
00:00:36.455 --> 00:00:39.879
but as soon as it sees something change,
then it'll go update it.

11
00:00:39.879 --> 00:00:44.591
But the key here is,
this gets run more than you see, right?

12
00:00:44.591 --> 00:00:48.357
And so it's important that you
keep this to be a very performant.

13
00:00:48.357 --> 00:00:52.559
You don't wanna put very heavy
lifting inside of your render paths,

14
00:00:52.559 --> 00:00:55.674
you wanna kinda pull it
outside of the render path so

15
00:00:55.674 --> 00:00:58.299
it doesn't slow down your DOM rendering.

16
00:00:58.299 --> 00:01:02.835
Cuz that's key because people
will start to notice jank, right,

17
00:01:02.835 --> 00:01:05.999
things shifting around
if they're too slow.

18
00:01:05.999 --> 00:01:10.695
So it's an important thing
to be very performant on.

19
00:01:10.695 --> 00:01:12.187
So you don't have to follow up this,

20
00:01:12.187 --> 00:01:14.319
I'm just gonna kinda make
an example really quick.

21
00:01:14.319 --> 00:01:20.332
But if I do something

22
00:01:20.332 --> 00:01:24.931
like counter =

23
00:01:24.931 --> 00:01:30.244
counter++;.

24
00:01:30.244 --> 00:01:34.892
And let counter = 0.

25
00:01:34.892 --> 00:01:41.593
So instead of name for just to say or,
just after this, we'll put counter.

26
00:01:41.593 --> 00:01:46.372
All right, so
you notice this has 0 on it, right?

27
00:01:46.372 --> 00:01:50.056
Right now, nothing's actually
happening to our component, but

28
00:01:50.056 --> 00:01:53.159
if we start adding things to listen for
events, right?

29
00:01:53.159 --> 00:01:56.134
So let's just say, onClick=,

30
00:01:56.134 --> 00:02:01.136
we'll just do something that
does literally nothing.

31
00:02:01.136 --> 00:02:02.960
So it's just like an empty function.

32
00:02:05.343 --> 00:02:08.283
&gt;&gt; Brian Holt: So this is actually still
smart enough to not render anything,

33
00:02:08.283 --> 00:02:09.672
that's pretty cool, okay?

34
00:02:16.007 --> 00:02:21.340
&gt;&gt; Brian Holt: Still smart
enough to not do anything.

35
00:02:21.340 --> 00:02:26.731
But, well, I mean,
this is actually a good example.

36
00:02:26.731 --> 00:02:33.090
You can even do something like Date.now().

37
00:02:33.090 --> 00:02:37.968
So again, you would expect this to
probably keep re-rendering itself, right?

38
00:02:37.968 --> 00:02:41.413
But the point I'm actually trying to
drive home here is, you don't actually

39
00:02:41.413 --> 00:02:44.608
really know when React is gonna
choose to re-render your components.

40
00:02:44.608 --> 00:02:46.063
And when it's gonna choose to re-render,

41
00:02:46.063 --> 00:02:47.491
you can see none of
these are running ever.

42
00:02:47.491 --> 00:02:50.380
In fact, these are actually different,
which is funny to me, right?

43
00:02:50.380 --> 00:02:55.334
There was actually a millisecond
difference between the two of these.

44
00:02:58.622 --> 00:03:01.799
&gt;&gt; Brian Holt: That's because React
is doing these re-render paths.

45
00:03:01.799 --> 00:03:04.604
And it's only gonna try and
re-render whenever it's necessary, and

46
00:03:04.604 --> 00:03:06.720
it tries to not re-render
when it's not necessary.

47
00:03:06.720 --> 00:03:10.843
But you need to make sure that it's
going to display the same markup every

48
00:03:10.843 --> 00:03:12.883
single time given the same inputs.

49
00:03:12.883 --> 00:03:17.649
So something like this, where Date.now, or
counter, where we were counting before,

50
00:03:17.649 --> 00:03:21.286
you would call these an effect,
right, a side effect to your code.

51
00:03:21.286 --> 00:03:22.943
And you don't wanna have any of those.

52
00:03:22.943 --> 00:03:24.855
Make sure that no matter when it's run,

53
00:03:24.855 --> 00:03:27.443
cuz you don't know when it's gonna run,
it's always

54
00:03:27.443 --> 00:03:31.341
gonna give you an expected results given
the inputs that you give into it, right?

55
00:03:31.341 --> 00:03:35.923
So if you were trying to display something
where it was gonna display a clock, right,

56
00:03:35.923 --> 00:03:39.490
you would need to make sure that
all of that was self-contained and

57
00:03:39.490 --> 00:03:41.801
the effects were being handled properly.

58
00:03:41.801 --> 00:03:45.329
We'll get into that when we start
talking about useEffect, right?

59
00:03:45.329 --> 00:03:49.217
But my point here is, stuff like
this where you're keeping track of

60
00:03:49.217 --> 00:03:51.754
variables outside of React, is a bad idea.

61
00:03:51.754 --> 00:03:55.430
And now I'm going to show you
how you're supposed to keep

62
00:03:55.430 --> 00:03:59.116
track of statefulness inside
of your React components.

63
00:03:59.116 --> 00:04:02.025
So let's take away all this nonsense for
now.

64
00:04:07.507 --> 00:04:12.011
&gt;&gt; Brian Holt: All right, so let's go
ahead and make another component here.

65
00:04:12.011 --> 00:04:14.646
We're gonna call it order.jsx.

66
00:04:14.646 --> 00:04:16.169
We're gonna make an order page.

67
00:04:20.777 --> 00:04:24.503
&gt;&gt; Brian Holt: Feel free to follow
along with me if you want to,

68
00:04:24.503 --> 00:04:27.587
this is a somewhat of a long component.

69
00:04:27.587 --> 00:04:32.233
So if you wanna just copy and
paste from the notes here,

70
00:04:32.233 --> 00:04:36.779
I'm not gonna judge you too harshly,
just a little.

71
00:04:39.973 --> 00:04:42.666
&gt;&gt; Brian Holt: All right,
so another opinion here.

72
00:04:42.666 --> 00:04:45.066
I think it's a pretty good opinion.

73
00:04:45.066 --> 00:04:49.887
Notice here in pizza,
we have an arrow function.

74
00:04:49.887 --> 00:04:55.077
And we export default here and
order, I did it a different

75
00:04:55.077 --> 00:05:00.389
way where I'm doing a named
function here called orders.

76
00:05:00.389 --> 00:05:03.193
99.99% the same thing.

77
00:05:03.193 --> 00:05:07.467
The only thing where I actually kinda
like this pattern better than the arrow

78
00:05:07.467 --> 00:05:11.804
function pattern is that when your app
crashes, so if I have an error in here,

79
00:05:11.804 --> 00:05:15.436
order being a named function is
gonna show up in the stack trace.

80
00:05:15.436 --> 00:05:18.494
So you can actually see
order in your stack traces.

81
00:05:18.494 --> 00:05:21.194
It helps with debugging, right?

82
00:05:21.194 --> 00:05:24.794
This pizza here, it would tell you it
came from the pizza component, but

83
00:05:24.794 --> 00:05:28.278
it would not tell you the name of
the function because, technically,

84
00:05:28.278 --> 00:05:31.313
this is not a named function,
it's an anonymous function.

85
00:05:31.313 --> 00:05:36.190
It would be the same thing if I did const

86
00:05:36.190 --> 00:05:40.772
Pizza2 = function blah, right?

87
00:05:40.772 --> 00:05:46.465
This is exactly the same thing, Pizza2
would not show up in the stack trace.

88
00:05:46.465 --> 00:05:52.357
Now, you might ask yourself,
how important is that to me?

89
00:05:52.357 --> 00:05:54.213
It's not super important, right?

90
00:05:54.213 --> 00:05:59.739
But, it's probably enough for
you to know that it's from the order file.

91
00:05:59.739 --> 00:06:01.639
You don't necessarily need to know
that it's from the order function.

92
00:06:01.639 --> 00:06:05.110
So let's just start writing
a bunch of code, const pizzaType.

93
00:06:05.110 --> 00:06:08.548
We're gonna use this to keep track of
what pizzaType they've selected, right?

94
00:06:08.548 --> 00:06:12.343
So this is the order page where they're
gonna select what kind of pizza they want,

95
00:06:12.343 --> 00:06:15.643
what size they want, and they'll
click order, or rather add to cart.

96
00:06:15.643 --> 00:06:18.268
It's gonna be a pepperoni pizza.

97
00:06:18.268 --> 00:06:24.763
And we're gonna start with the pizza
size of medium, these are the defaults.

98
00:06:24.763 --> 00:06:30.114
PizzaSize equals capital M for medium.

99
00:06:30.114 --> 00:06:34.492
And then we'll return
a whole lot of markup.

100
00:06:37.551 --> 00:06:40.865
&gt;&gt; Brian Holt: So we'll call this order.

101
00:06:40.865 --> 00:06:44.440
My CSS is structured in such a way that
we don't have to write className on every

102
00:06:44.440 --> 00:06:45.157
single thing.

103
00:06:45.157 --> 00:06:47.801
That's purely for
the sake of this class so

104
00:06:47.801 --> 00:06:50.819
that you don't have to
write className a bunch.

105
00:06:50.819 --> 00:06:53.366
In general,
please give everything a class,

106
00:06:53.366 --> 00:06:57.432
don't do all the weird selector stuff
that I did to make it easier for you.

107
00:06:57.432 --> 00:07:01.708
In other words, the CSS is
intentionally bad to make it easier for

108
00:07:01.708 --> 00:07:02.968
you to write code.

109
00:07:02.968 --> 00:07:06.587
That's generally not this trade-off
that you would wanna make.

110
00:07:06.587 --> 00:07:11.238
All right, h2,
this is gonna be Create Order page.

111
00:07:11.238 --> 00:07:18.767
It's gonna have a form, and then it's
gonna have a div, and another div.

112
00:07:21.580 --> 00:07:23.480
&gt;&gt; Brian Holt: And
then we're gonna do a label.

113
00:07:23.480 --> 00:07:27.146
The label is gonna be for

114
00:07:27.146 --> 00:07:31.551
pizza-type, pizza Type.

115
00:07:31.551 --> 00:07:38.374
Then we're gonna have
a select name="pizza-type".

116
00:07:41.264 --> 00:07:43.526
&gt;&gt; Brian Holt: We're gonna give
it a value too, that'll be fun.

117
00:07:43.526 --> 00:07:47.743
Value = pizzaType.

118
00:07:50.967 --> 00:07:52.904
&gt;&gt; Brian Holt: So value,
just basically say,

119
00:07:52.904 --> 00:07:57.229
you're gonna set whatever the value
of pizzaType is to the value here.

120
00:07:59.332 --> 00:08:02.781
&gt;&gt; Brian Holt: Okay,
we're gonna give it a couple of options.

121
00:08:02.781 --> 00:08:10.357
Option value="pepperoni"

122
00:08:10.357 --> 00:08:16.479
&gt;The Pepperoni Pizza.

123
00:08:16.479 --> 00:08:18.955
Okay, we're gonna make a few of those.

124
00:08:20.862 --> 00:08:22.862
&gt;&gt; Brian Holt: Hawaiian.

125
00:08:26.302 --> 00:08:30.059
&gt;&gt; Brian Holt: And this one was big_meat.

126
00:08:30.059 --> 00:08:32.767
The Big Meat Pizza.

127
00:08:35.130 --> 00:08:38.878
Okay, so far, if it feels like we're
just writing a normal HTML form,

128
00:08:38.878 --> 00:08:41.256
it's cuz we're writing a normal HTML form.

129
00:08:41.256 --> 00:08:46.315
&gt;&gt; Brian Holt: There's not a lot
too interesting to talk about here.

130
00:08:46.315 --> 00:08:52.398
Okay, that's the first div that
we're escaping there, correct, yep.

131
00:08:55.775 --> 00:08:58.700
&gt;&gt; Brian Holt: Make another div in here.

132
00:08:58.700 --> 00:09:03.021
And we're making another label,
this is for pizza-size.

133
00:09:03.021 --> 00:09:08.876
And pizza-size, and
this is Pizza Size, all right?

134
00:09:08.876 --> 00:09:11.873
Another div here, and

135
00:09:11.873 --> 00:09:17.080
we're gonna have some radio buttons,

136
00:09:17.080 --> 00:09:22.615
inside of spans, input, checked=,

137
00:09:24.853 --> 00:09:30.449
&gt;&gt; Brian Holt: (PizzaSize === 'S').

138
00:09:30.449 --> 00:09:36.272
Again, my ligature is putting
three equal signs together,

139
00:09:36.272 --> 00:09:40.733
that's why it looks like
that fat equal sign.

140
00:09:40.733 --> 00:09:49.162
Type="radio", name="pizza-size",

141
00:09:49.162 --> 00:09:56.544
value="S", and id="pizza-s".

142
00:09:58.794 --> 00:10:03.548
&gt;&gt; Brian Holt: Okay, and
then we'll close that off.

143
00:10:05.492 --> 00:10:08.060
&gt;&gt; Brian Holt: Get that all spaced out.

144
00:10:10.498 --> 00:10:15.584
And then we will do a label, again, for

145
00:10:15.584 --> 00:10:20.989
"pizza-s", and this is a small size.

146
00:10:20.989 --> 00:10:23.286
&gt;&gt; Brian Holt: So
we're doing radio buttons for

147
00:10:23.286 --> 00:10:26.083
all the various sizes of pizza, right?

148
00:10:26.083 --> 00:10:30.884
So I'm just gonna go ahead and
copy and paste this span.

149
00:10:30.884 --> 00:10:36.017
And so I have the top one,
which is gonna be small.

150
00:10:36.017 --> 00:10:37.791
This one is gonna be medium.

151
00:10:37.791 --> 00:10:42.338
So we'll just change all
the places where it says S to M.

152
00:10:48.819 --> 00:10:55.638
Right, so they're pretty similar, this
one's just medium, this one's just small.

153
00:10:55.638 --> 00:10:58.694
Same thing here,
this will be the large size.

154
00:11:05.896 --> 00:11:07.798
&gt;&gt; Brian Holt: And Large.

155
00:11:13.043 --> 00:11:19.091
&gt;&gt; Brian Holt: Okay,
once we have that, and span and

156
00:11:19.091 --> 00:11:23.822
div, and next div, button.

157
00:11:23.822 --> 00:11:26.225
Type is gonna be "submit".

158
00:11:30.552 --> 00:11:33.215
&gt;&gt; Brian Holt: Add to cart.

159
00:11:42.857 --> 00:11:44.426
&gt;&gt; Brian Holt: Okay.

160
00:11:47.520 --> 00:11:52.095
&gt;&gt; Brian Holt: And then inside of that,
we're gonna put another div.

161
00:11:52.095 --> 00:11:56.090
Brian, you have too many divs,
I'm not gonna disagree with you.

162
00:11:56.090 --> 00:11:57.614
"Order-pizza".

163
00:12:00.663 --> 00:12:02.189
&gt;&gt; Brian Holt: Put a pizza in here.

164
00:12:02.189 --> 00:12:05.891
Right now we're just gonna give it
a normal pepperoni pizza, but eventually,

165
00:12:05.891 --> 00:12:09.162
we'll make it dynamic, to be the one
that you have selected, right?

166
00:12:09.162 --> 00:12:13.764
But for now, we're just gonna say,

167
00:12:13.764 --> 00:12:18.229
"pepperoni", description=,

168
00:12:21.314 --> 00:12:24.839
&gt;&gt; Brian Holt: "Another pep pizza".

169
00:12:24.839 --> 00:12:30.440
Whatever you wanna put there,
image is going to

170
00:12:30.440 --> 00:12:37.306
be assigned "/public/pizzas/
pepperoni.webp",

171
00:12:37.306 --> 00:12:41.099
and then close that tag, okay?

172
00:12:41.099 --> 00:12:43.467
And then just underneath that,
we just wanna put the price.

173
00:12:43.467 --> 00:12:49.754
We'll put that in a p and we'll just say,
whatever you wanna put there, $13.37.

174
00:12:53.060 --> 00:13:00.710
&gt;&gt; Brian Holt: Okay, so basically,
we're just working on forms here, right?

175
00:13:00.710 --> 00:13:04.182
The classic thing for most webs,
most stuff can be boiled down to,

176
00:13:04.182 --> 00:13:06.924
you're just submitting a form somewhere,
right?

177
00:13:08.636 --> 00:13:12.345
&gt;&gt; Brian Holt: Using some divs here,
I know all the div seem excessive, but

178
00:13:12.345 --> 00:13:17.900
it's for the styling, right, just to kinda
get everything grouped together visually.

179
00:13:17.900 --> 00:13:21.519
And we got some radio buttons here, so
they can be small, medium, or large,

180
00:13:21.519 --> 00:13:22.421
that sounds good.

181
00:13:22.421 --> 00:13:27.059
And we have a submit button that adds
to cart, which will submit the form.

182
00:13:27.059 --> 00:13:34.936
We will get to how to handle that
form submittal, but let's save here.

183
00:13:34.936 --> 00:13:37.863
So yeah,
we've now created an order component.

184
00:13:37.863 --> 00:13:42.384
We have to go use it before
anything's gonna show up, right?

185
00:13:42.384 --> 00:13:47.203
So let's go to our app.jsx.

186
00:13:47.203 --> 00:13:50.702
We're going to delete the pizza import
cuz we're not gonna use that now.

187
00:13:50.702 --> 00:13:56.452
We're gonna say,
import Order from './Order', cool.

188
00:13:56.452 --> 00:13:59.918
And for now, we're just gonna
make this the default home page.

189
00:13:59.918 --> 00:14:04.975
So you're just gonna say, Order, okay?

190
00:14:07.999 --> 00:14:10.473
&gt;&gt; Brian Holt: I think I'm very wide,
cool.

191
00:14:10.473 --> 00:14:14.796
But you should see
something akin to this.

192
00:14:14.796 --> 00:14:19.748
You'll probably have some errors in here,
that's fine, ignore those for now.

