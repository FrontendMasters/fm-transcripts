WEBVTT

1
00:00:00.000 --> 00:00:06.604
So it has an Add New Item button that is
disabled when the input is empty, right?

2
00:00:06.604 --> 00:00:11.418
Cool, so things that I'm thinking
as I look at this test is maybe I

3
00:00:11.418 --> 00:00:15.376
would want to make sure that
the input field is empty.

4
00:00:15.376 --> 00:00:18.436
But then the other thing I'm thinking is I
would wait for this test to break once or

5
00:00:18.436 --> 00:00:19.922
twice before I worried about all that.

6
00:00:19.922 --> 00:00:20.480
You know what I mean?

7
00:00:20.480 --> 00:00:24.235
But if it was one of those things,
where for some reason,

8
00:00:24.235 --> 00:00:28.162
my test isolation was not good or
in certain cases, right?

9
00:00:28.162 --> 00:00:32.464
If I was let's say, as an edit blog post,
it might not always be empty, right?

10
00:00:32.464 --> 00:00:37.086
In those cases, I would maybe add
some nuance, or set it to empty, or

11
00:00:37.086 --> 00:00:39.173
something along those lines.

12
00:00:39.173 --> 00:00:44.776
So but at this moment,
that feels like a little over the top.

13
00:00:44.776 --> 00:00:50.431
So a pass and we'll render the packing
list and if one wanted to,

14
00:00:50.431 --> 00:00:55.474
they could do it before each and
keep an enclosure scope.

15
00:00:55.474 --> 00:00:59.962
I don't want to, like I said, in case I
do wanna start passing it in props or

16
00:00:59.962 --> 00:01:03.384
something like that,
maybe start to populate, again,

17
00:01:03.384 --> 00:01:06.375
if it was an edit blog post or
something like that,

18
00:01:06.375 --> 00:01:09.761
I would then have to unwind all
of that and put it back in.

19
00:01:09.761 --> 00:01:10.824
And honestly,

20
00:01:10.824 --> 00:01:16.549
this one line isn't bothering me enough
to prematurely optimize that cuz, yeah,

21
00:01:16.549 --> 00:01:22.060
the cost of getting that wrong is higher
than the good parts of getting it right.

22
00:01:22.060 --> 00:01:28.068
And like I said, yeah,
definitely have great abstractions for

23
00:01:28.068 --> 00:01:32.628
your code, but
your tests should aim to be just as

24
00:01:32.628 --> 00:01:37.759
explicit as possible even
if they repeat themselves.

25
00:01:37.759 --> 00:01:40.368
Cool, so, let's see.

26
00:01:40.368 --> 00:01:42.381
I'll test both.

27
00:01:42.381 --> 00:01:49.187
Let's say we've got this new item input,
Which is basically what we had up here.

28
00:01:49.187 --> 00:01:50.519
So I'll just grab that real quick.

29
00:01:53.270 --> 00:01:54.922
And we've got that in place, and

30
00:01:54.922 --> 00:01:57.820
then we're also gonna wanna
have the Add New Item button.

31
00:02:03.221 --> 00:02:06.481
Add New Item button with an N.

32
00:02:06.481 --> 00:02:12.083
And they will do that it's
kind of screen.getByRole,

33
00:02:12.083 --> 00:02:18.412
and this one will be a button,
With the name.

34
00:02:18.412 --> 00:02:20.634
And we're gonna learn something together.

35
00:02:20.634 --> 00:02:25.807
Well, I already learned it as I was
getting ready for this, which is,

36
00:02:27.962 --> 00:02:31.787
It does ignore the emoji.

37
00:02:31.787 --> 00:02:32.458
&gt;&gt; No way.

38
00:02:32.458 --> 00:02:35.807
&gt;&gt; Yeah,
the Add New Item will work in this case.

39
00:02:35.807 --> 00:02:39.243
We'll verify that before we're
all really proud of that one.

40
00:02:39.243 --> 00:02:40.282
Yeah, it gets that.

41
00:02:40.282 --> 00:02:41.303
It will ignore the emoji.

42
00:02:41.303 --> 00:02:44.136
I think that's how the browser
does the names and

43
00:02:44.136 --> 00:02:46.358
the roles rather than anything else.

44
00:02:46.358 --> 00:02:48.688
You'd be like, Steve,
why didn't you know that?

45
00:02:48.688 --> 00:02:52.233
Because no one allows me to put emojis and
buttons at work.

46
00:02:52.233 --> 00:02:57.197
[LAUGH] It's only on my sample apps that
I can shove emojis wherever I want to on

47
00:02:57.197 --> 00:03:02.260
buttons on anywhere, cuz one, I'm not
a designer who can make my own icons.

48
00:03:02.260 --> 00:03:06.572
And two, I like emoji, but
it's not a thing that I realized until I

49
00:03:06.572 --> 00:03:10.961
got to make my own little silly apps
because Candace would be very mad

50
00:03:10.961 --> 00:03:15.745
at me if I started shoving emoji all
over the UI without checking with her.

51
00:03:15.745 --> 00:03:17.910
Cool, so we've got that in place.

52
00:03:17.910 --> 00:03:20.501
But yeah,
we all learned something together.

53
00:03:20.501 --> 00:03:27.085
And I can either expect
that the input is empty or

54
00:03:27.085 --> 00:03:31.865
I could purposely set it to empty.

55
00:03:31.865 --> 00:03:36.375
Like I said before, I don't really
have strong feelings on this.

56
00:03:36.375 --> 00:03:39.708
So [LAUGH] with the lack
of strong feelings,

57
00:03:39.708 --> 00:03:43.504
I am gonna do what's in
the solution file just for

58
00:03:43.504 --> 00:03:48.803
the sake of our viewers here so
that they don't offer too much here.

59
00:03:48.803 --> 00:03:52.332
To have value of an empty string and

60
00:03:52.332 --> 00:03:58.305
then I can expect in that case
that the Add New Item Button,

61
00:04:02.554 --> 00:04:03.784
To be disabled, right?

62
00:04:03.784 --> 00:04:08.499
And like we said before,
these are all the helpers

63
00:04:08.499 --> 00:04:13.214
that were brought in by
the testing library/Jest

64
00:04:13.214 --> 00:04:17.716
DOM Matchers that we can kind of pull in,
Mark.

65
00:04:17.716 --> 00:04:21.921
&gt;&gt; I came across a team where
one person writes a test and

66
00:04:21.921 --> 00:04:24.896
another person makes the test pass.

67
00:04:24.896 --> 00:04:28.674
&gt;&gt; Yeah, that's like-
&gt;&gt; What's your opinion of that?

68
00:04:28.674 --> 00:04:33.629
So the, I forget what it's called,
but what you're supposed to

69
00:04:33.629 --> 00:04:37.593
do in that situation is one
person writes the test and

70
00:04:37.593 --> 00:04:42.098
then the other person is supposed
to do the most egregious or

71
00:04:42.098 --> 00:04:46.874
naive, or silliest implementation
that makes the test pass so

72
00:04:46.874 --> 00:04:51.591
that the person writing the test
has to do an even better test.

73
00:04:51.591 --> 00:04:55.147
Right, and so I liked that idea.

74
00:04:55.147 --> 00:04:59.320
It's one of those things which is,
I think it's fun,

75
00:04:59.320 --> 00:05:02.971
I wonder if their teams
would do that every day.

76
00:05:02.971 --> 00:05:04.247
Do you know what I mean?

77
00:05:04.247 --> 00:05:08.623
It's a fun game, I'm into it and
I think there's value in doing it.

78
00:05:08.623 --> 00:05:12.821
But I don't know, maybe in companies
where everyone programs all the time.

79
00:05:12.821 --> 00:05:15.965
As an introvert that's, I don't know, but

80
00:05:15.965 --> 00:05:20.534
I think on a very practical level,
I think it's genius, right?

81
00:05:20.534 --> 00:05:25.755
I think my social battery, I have about
90 minutes of that in me a day at most.

82
00:05:25.755 --> 00:05:27.622
But yeah, I think it's super cool.

83
00:05:27.622 --> 00:05:30.377
And it will get you to that as
you kinda make a game out of it,

84
00:05:30.377 --> 00:05:32.194
it will get you to those better tests.

85
00:05:32.194 --> 00:05:36.889
But you can also, I feel like
the Galaxy Brain version of that

86
00:05:36.889 --> 00:05:39.850
is to be able to do that with yourself.

87
00:05:39.850 --> 00:05:45.049
That said, most of us are just trying
to get our jobs done here, [LAUGH] and

88
00:05:45.049 --> 00:05:50.336
probably don't have the discipline to
write a test and then write the most

89
00:05:50.336 --> 00:05:55.648
ridiculous implementation of that
despite ourselves but it's a thing.

90
00:05:55.648 --> 00:05:57.391
So we've got both of these in place.

91
00:05:57.391 --> 00:06:01.511
Let's go make sure that passes as well.

92
00:06:01.511 --> 00:06:04.729
And so we're starting to get to the point
where it's, I have to be defined.

93
00:06:04.729 --> 00:06:08.052
So we want to be disabled.

94
00:06:08.052 --> 00:06:12.206
So, yeah, who tests the tests?

95
00:06:12.206 --> 00:06:14.556
&gt;&gt; getAllByLabelText
versus getByLabelText.

96
00:06:14.556 --> 00:06:16.113
What was the difference again?

97
00:06:16.113 --> 00:06:19.280
&gt;&gt; getAll will get you an array.

98
00:06:19.280 --> 00:06:24.580
&gt;&gt; So that would fail unless you
wrapped new item name in an array,

99
00:06:24.580 --> 00:06:30.495
would that make it pass if you had
to getAllByLabelText on 20 there?

100
00:06:30.495 --> 00:06:34.405
&gt;&gt; 20, get by label text, right?

101
00:06:34.405 --> 00:06:36.602
&gt;&gt; Yeah, I actually had getAllByLabelText.

102
00:06:36.602 --> 00:06:37.748
&gt;&gt; I mean, you'll still have them.

103
00:06:37.748 --> 00:06:39.694
&gt;&gt; And it failed.

104
00:06:39.694 --> 00:06:42.253
&gt;&gt; Yeah, cuz it won't have a value,
it'll be an array.

105
00:06:42.253 --> 00:06:44.596
&gt;&gt; All right, [CROSSTALK]
&gt;&gt; You might have a two length or

106
00:06:44.596 --> 00:06:45.684
something like that.

107
00:06:45.684 --> 00:06:50.658
To getAll is like if you had some way
to identify them depending on how

108
00:06:50.658 --> 00:06:51.716
you got them.

109
00:06:51.716 --> 00:06:52.378
It's super interesting.

110
00:06:52.378 --> 00:06:55.407
Let's say if we added three
things to the list, right,

111
00:06:55.407 --> 00:06:58.639
you would maybe wanna get all and
check the length, right?

112
00:06:58.639 --> 00:07:00.363
There's a time and a place for it.

113
00:07:00.363 --> 00:07:02.880
This just isn't it.

114
00:07:02.880 --> 00:07:06.700
And that's a good call-out cuz, at one
point, I just haven't done this enough in

115
00:07:06.700 --> 00:07:09.058
my life,
I will probably make that mistake today.

116
00:07:09.058 --> 00:07:13.080
I'll probably be talking and I'll hit
that tab, it autocompletes something and

117
00:07:13.080 --> 00:07:15.714
you'll I'll pretend like I
did it to you on purpose.

118
00:07:15.714 --> 00:07:18.869
I won't have but, yeah, all right.

119
00:07:18.869 --> 00:07:24.976
So then enables the Add New button
when there's text in the input field.

120
00:07:24.976 --> 00:07:29.192
So like we said before you can create
some functions to kind of render it and

121
00:07:29.192 --> 00:07:33.068
go get all these things and give me
a object that I can destructure and

122
00:07:33.068 --> 00:07:34.431
grab what I need out of.

123
00:07:34.431 --> 00:07:37.670
I will kind of leave that
as an exercise reader.

124
00:07:37.670 --> 00:07:39.471
We did a little bit yesterday.

125
00:07:39.471 --> 00:07:43.081
I don't think anyone used to watch
me do it again, but for now,

126
00:07:43.081 --> 00:07:46.573
a little bit of copy and
paste also works in this case as well.

127
00:07:46.573 --> 00:07:48.827
So here, we'll get both of them.

128
00:07:48.827 --> 00:07:52.976
I don't need to expect
that they exist anymore.

129
00:07:52.976 --> 00:07:59.554
But what I probably want to do
is at least go in there and

130
00:07:59.554 --> 00:08:04.099
we have that, remember user event?

131
00:08:04.099 --> 00:08:06.576
So I can simulate the idea of typing.

132
00:08:06.576 --> 00:08:08.969
Could I fire a change
event at that input field?

133
00:08:08.969 --> 00:08:10.983
I absolutely could.

134
00:08:10.983 --> 00:08:16.019
But again, to that even that point we
made a little bit earlier, there is

135
00:08:16.019 --> 00:08:21.800
a certain amount of value in doing it from
the user perspective and also considering

136
00:08:21.800 --> 00:08:26.944
it is the difference of just using
a different method that I already have.

137
00:08:26.944 --> 00:08:29.236
I get a lot of value of
not really any work.

138
00:08:29.236 --> 00:08:33.092
So we will go ahead and try that one out.

139
00:08:33.092 --> 00:08:36.453
And so what I will probably do
in this case is I will, and,

140
00:08:36.453 --> 00:08:41.437
again, remember the big difference between
fire event and the user event library.

141
00:08:41.437 --> 00:08:46.203
Is that the user event library because
it's doing a series of different actions,

142
00:08:46.203 --> 00:08:50.778
instead of one event that's getting
fired does, in fact, return a promise.

143
00:08:50.778 --> 00:08:55.516
So you will find that
nothing works the way you

144
00:08:55.516 --> 00:09:00.011
expect if you do not
await the user typing.

145
00:09:00.011 --> 00:09:07.014
So we'll go to the newItem input and
we will type in MacBook Pro.

146
00:09:07.014 --> 00:09:12.264
Cool, and then, at that point,
we should be able to expect

147
00:09:12.264 --> 00:09:17.739
the NewItem button or a NewItem,
yeah, our addItem button,

148
00:09:20.931 --> 00:09:24.437
To be enabled.

149
00:09:24.437 --> 00:09:27.461
And then we'll go ahead and
we'll run that test.

150
00:09:27.461 --> 00:09:28.458
And I got it.

151
00:09:31.979 --> 00:09:33.365
There we go, we got a little check mark.

152
00:09:33.365 --> 00:09:36.411
And it's kinda like on a dopamine level,

153
00:09:36.411 --> 00:09:41.734
very rewarding to kinda work down this
list to get the checkboxes going.

