WEBVTT

1
00:00:00.168 --> 00:00:03.916
So we have our unit test, and our build.

2
00:00:03.916 --> 00:00:07.373
And one would argue,
could I put a dash dash coverage here?

3
00:00:07.373 --> 00:00:09.423
I could, it would work, right?

4
00:00:09.423 --> 00:00:11.864
It would run my test and
would generate a coverage report.

5
00:00:11.864 --> 00:00:15.330
I could absolutely do that.

6
00:00:15.330 --> 00:00:18.612
That said, when I get a red x.

7
00:00:18.612 --> 00:00:21.155
I kind of want to because I
have that threshold in there.

8
00:00:21.155 --> 00:00:25.650
You have no threshold, yeah, put a dash
dash dash coverage here, do it, right?

9
00:00:25.650 --> 00:00:30.488
Right now I have that auto threshold set
which will fail the build if it doesn't

10
00:00:30.488 --> 00:00:31.157
hit that.

11
00:00:31.157 --> 00:00:35.475
And so if I see the red x I would like
the visual indicator of why I got a red x,

12
00:00:35.475 --> 00:00:40.110
because I didn't hit the coverage
threshold or because my tests don't pass.

13
00:00:40.110 --> 00:00:42.038
So in that case I would
break it out into two tests.

14
00:00:42.038 --> 00:00:45.933
Again, so some of these are less
about the technical limitations,

15
00:00:45.933 --> 00:00:48.201
more about the ergonomics of using it.

16
00:00:48.201 --> 00:00:52.176
So for us,
what we're going to do is we simply.

17
00:00:52.176 --> 00:00:55.825
And like I said,
you owe it to yourself to Google, like,

18
00:00:55.825 --> 00:00:58.268
GitHub Action Recipes at some point.

19
00:00:58.268 --> 00:01:03.108
Because whatever, like, there's, if not
only, like, don't copy and paste the code.

20
00:01:03.108 --> 00:01:04.452
A lot of it's bad.

21
00:01:04.452 --> 00:01:07.997
But at least for
the inspiration of things you can do.

22
00:01:07.997 --> 00:01:09.412
Because a lot of it is,

23
00:01:09.412 --> 00:01:14.330
pull in this action that either somebody
else pre-wrote or is made by GitHub,

24
00:01:14.330 --> 00:01:19.040
or looks reasonable or something you
might choose to do yourself, right?

25
00:01:19.040 --> 00:01:24.907
But again, there's like auto
commenting on GitHub issues, right?

26
00:01:24.907 --> 00:01:28.321
Which is somebody runs an open source repo
I might want at some point in my life,

27
00:01:28.321 --> 00:01:30.573
but if you were in a private one,
it's not useful.

28
00:01:30.573 --> 00:01:33.334
Stuff that is kinda unique enough
that it's not worth all the time to

29
00:01:33.334 --> 00:01:33.921
do as a group.

30
00:01:33.921 --> 00:01:35.779
Like stuff like running your tests.

31
00:01:35.779 --> 00:01:38.997
Think we should all do that one,
right, cool.

32
00:01:38.997 --> 00:01:40.875
Building the assets, yeah.

33
00:01:40.875 --> 00:01:42.355
Running a typscript checker.

34
00:01:42.355 --> 00:01:47.050
Weird little stuff like, we have one
thing kick off an npm version bump

35
00:01:47.050 --> 00:01:51.999
to a different repo and then kick off
this other thing and deploy this way.

36
00:01:51.999 --> 00:01:56.238
We have, like, a Rube Goldberg machine
that's actually particularly elegant and

37
00:01:56.238 --> 00:01:58.873
beautiful, but
not really generally applicable.

38
00:01:58.873 --> 00:02:02.246
But you owe it yourself to at least do
an inspirational journey to see what's

39
00:02:02.246 --> 00:02:02.784
out there.

40
00:02:02.784 --> 00:02:03.960
Because there's, like, wild stuff.

41
00:02:03.960 --> 00:02:06.575
You can basically control
anything in GitHub.

42
00:02:06.575 --> 00:02:08.941
And also make cURL requests to, like,

43
00:02:08.941 --> 00:02:13.610
make a Slack notification based on this
thing happening, so on and so forth.

44
00:02:13.610 --> 00:02:19.256
But for us, we're just grabbing
this actions/upload-artifact@v3.

45
00:02:19.256 --> 00:02:23.704
Where we'll archive a coverage report
with the name coverage-report and

46
00:02:23.704 --> 00:02:25.405
the path coverage, right?

47
00:02:25.405 --> 00:02:29.616
The challenge that I'm giving you is do
something very similar with the build

48
00:02:29.616 --> 00:02:30.146
assets.

49
00:02:30.146 --> 00:02:32.678
It's not spiritually any different, but

50
00:02:32.678 --> 00:02:37.541
it's just a way to kind of move your hands
and fingers and do something on your end.

51
00:02:37.541 --> 00:02:38.660
So as you can see, it ran.

52
00:02:38.660 --> 00:02:42.596
I've got three parallel
jobs at this point.

53
00:02:42.596 --> 00:02:47.341
And I have this new artifact,
and it's called coverage-report.

54
00:02:47.341 --> 00:02:49.204
And it downloads a directory.

55
00:02:49.204 --> 00:02:51.038
And you know what that directory is?

56
00:02:51.038 --> 00:02:55.725
A zip file of the coverage folder, right?

57
00:02:55.725 --> 00:03:00.077
So you could at least audit.

58
00:03:00.077 --> 00:03:01.411
You have that as an artifact every time.

59
00:03:01.411 --> 00:03:05.057
And like I said, we did this with the
coverage report because it was a thing.

60
00:03:05.057 --> 00:03:06.213
It could be your build.

61
00:03:06.213 --> 00:03:10.176
It could be optimized image assets, right?

62
00:03:10.176 --> 00:03:15.595
It could be, if you're building
an Electron app, it could be the built.

63
00:03:15.595 --> 00:03:16.411
Like you could use,

64
00:03:16.411 --> 00:03:19.111
like we said this before when
we're introducing GitHub Actions.

65
00:03:19.111 --> 00:03:23.474
You choose to build it on Windows,
build it on MacOS, build it on Linux, and

66
00:03:23.474 --> 00:03:26.839
then have the built assets
that you're doing stuff with.

67
00:03:26.839 --> 00:03:32.353
When we release our CLI,
it's a Go binary, we compile it, right?

68
00:03:32.353 --> 00:03:35.468
You download from GitHub releases, right?

69
00:03:35.468 --> 00:03:39.727
We use it internally to move stuff around
between workflows as well because you can

70
00:03:39.727 --> 00:03:41.282
query it with the GitHub API.

71
00:03:41.282 --> 00:03:42.670
You can move stuff around with it as well.

72
00:03:42.670 --> 00:03:46.272
There's lots and lots and lot of reasons
that are somewhat unique to your life.

73
00:03:46.272 --> 00:03:50.334
Luckily, the same action/archive
upload artifact rather,

74
00:03:50.334 --> 00:03:55.390
@v3 will work regardless of use case,
because all it takes is a directory and

75
00:03:55.390 --> 00:03:59.622
a name, and then you have this
ability as well and you can do that.

76
00:03:59.622 --> 00:04:04.740
And again, you could theoretically,
if you had that enforcing the threshold.

77
00:04:04.740 --> 00:04:08.898
I would again be very light touch with it,
only do core files.

78
00:04:08.898 --> 00:04:12.847
Don't do everything all
the time because I dropped,

79
00:04:12.847 --> 00:04:17.407
one of the draft runs of this,
forgot that I had left that on and

80
00:04:17.407 --> 00:04:21.901
it dropped a slight bit and
then I had to like my build failed.

81
00:04:21.901 --> 00:04:23.279
Maybe that's not what you want.

82
00:04:23.279 --> 00:04:25.504
The other thing you can
do with GitHub actions.

83
00:04:25.504 --> 00:04:27.744
And we won't because it's
just like a one-liner.

84
00:04:27.744 --> 00:04:31.521
And the nature of it when I tell you what
it is will explain to you why we're not

85
00:04:31.521 --> 00:04:32.062
doing it.

86
00:04:32.062 --> 00:04:34.336
You could put a schedule in there.

87
00:04:34.336 --> 00:04:41.000
Like instead of like,
you like it on like pull request domain,

88
00:04:41.000 --> 00:04:45.778
you could also say at 1:30 UTC every day,

89
00:04:45.778 --> 00:04:50.840
like maybe you run a bigger test suite,
right?

90
00:04:50.840 --> 00:04:53.593
I'll say it now and then we'll revisit
it when we talk about playwright.

91
00:04:53.593 --> 00:04:56.627
You can run playerwright
against all the browsers.

92
00:04:56.627 --> 00:04:58.729
Every PR, that's gonna take some time.

93
00:04:58.729 --> 00:05:01.269
You gotta download them, yada, yada, yada.

94
00:05:01.269 --> 00:05:05.718
And yeah, I will probably get in
trouble on Twitter, I'll say it.

95
00:05:05.718 --> 00:05:09.584
You might choose for
PRs just run it against Chrome, right?

96
00:05:09.584 --> 00:05:12.490
However, we're gonna actually cut
a release and deploy to production.

97
00:05:12.490 --> 00:05:15.487
Okay, now Safari, and
Firefox, and all the rest.

98
00:05:15.487 --> 00:05:17.608
Right, and so you could theoretically,

99
00:05:17.608 --> 00:05:21.313
maybe you don't break a build on
the coverage report on the thresholds.

100
00:05:21.313 --> 00:05:27.397
But maybe you like choose to run it
every day and have it notify you.

101
00:05:27.397 --> 00:05:33.299
Either with a broken build in the actions
that doesn't stop a PR from going in but

102
00:05:33.299 --> 00:05:37.103
you can see, or
have it log to Slack, or whatever.

103
00:05:37.103 --> 00:05:40.022
To show you like, hey,
you're below the threshold.

104
00:05:40.022 --> 00:05:43.446
And that doesn't necessarily mean
you're gonna stop shipping code,

105
00:05:43.446 --> 00:05:45.052
as if you did it on a pull request.

106
00:05:45.052 --> 00:05:47.742
But these are the systems that I'm
talking about in the processes.

107
00:05:47.742 --> 00:05:49.758
This is more of a true
process at this point of,

108
00:05:49.758 --> 00:05:53.223
hey, maybe at sprint planning we take a
look at the code coverage report that was

109
00:05:53.223 --> 00:05:56.767
generated an hour before sprint planning
every day or every other week, right?

110
00:05:56.767 --> 00:05:59.744
Something along those lines of, what
are the systems that keep you accountable?

111
00:05:59.744 --> 00:06:04.691
Maybe, you know, if you're on the process
of getting towards a given accessibility

112
00:06:04.691 --> 00:06:07.386
standardization, you run it every so
often.

113
00:06:07.386 --> 00:06:10.966
You can manually kick
off an action as well.

114
00:06:10.966 --> 00:06:15.427
And you might choose to do different
things where you don't necessarily do it

115
00:06:15.427 --> 00:06:18.251
every PR, maybe you do it yeah,
every so often.

116
00:06:18.251 --> 00:06:20.381
Maybe you manually do it.

117
00:06:20.381 --> 00:06:24.363
Maybe you maybe instead
of failing a build.

118
00:06:24.363 --> 00:06:27.444
Like even if you use GitHub but
you don't have an open source project.

119
00:06:27.444 --> 00:06:31.170
Maybe like for the more egregious
accessibility or linch issues,

120
00:06:31.170 --> 00:06:35.109
it doesn't fail the build, but
maybe it opens up like a GitHub issue.

121
00:06:35.109 --> 00:06:37.554
Right, that you can then track or
do something with.

122
00:06:37.554 --> 00:06:40.529
Or you can do cURL commands,
you can make API requests, right?

123
00:06:40.529 --> 00:06:43.547
You actually have a GitHub SDK
in there as well.

124
00:06:43.547 --> 00:06:48.418
Maybe it like hits a webhook in Jira
right and it creates a Jira task.

125
00:06:48.418 --> 00:06:51.139
We should definitely deal with that
now I don't have to break the build.

126
00:06:51.139 --> 00:06:55.744
There's nuances of like because that
run is a bash I mean you can do

127
00:06:55.744 --> 00:06:57.183
other shells bash.

128
00:06:57.183 --> 00:07:01.214
And so you can send HTTP
requests anywhere you want.

129
00:07:01.214 --> 00:07:04.253
You can run JavaScript to do
very small things, right?

130
00:07:04.253 --> 00:07:06.654
Like all the processes, I said this very,

131
00:07:06.654 --> 00:07:10.607
very early in this workshop we have
a release we call it release party.

132
00:07:10.607 --> 00:07:14.954
We cut a release of our UI every
week on Monday at the beginning.

133
00:07:14.954 --> 00:07:17.121
And like currently it's
an hour long meeting,

134
00:07:17.121 --> 00:07:19.133
mostly because we're also joking around.

135
00:07:19.133 --> 00:07:24.081
But the goal is every repetitive task,
somebody's doing the deploy while we

136
00:07:24.081 --> 00:07:29.117
do stand up, and then somebody else is
noting all the manual steps we had to do.

137
00:07:29.117 --> 00:07:33.773
And we're just slowly whittling it away
and slowly getting to the point where

138
00:07:33.773 --> 00:07:37.293
it's like, that's tedious,
we should automate that.

