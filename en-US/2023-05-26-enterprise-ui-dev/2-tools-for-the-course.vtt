WEBVTT

1
00:00:00.040 --> 00:00:04.695
Because this is not necessarily a course
on any given technology, I tried to, but

2
00:00:04.695 --> 00:00:07.730
we have to use some kinda technology,
right?

3
00:00:07.730 --> 00:00:11.634
Because even, as Mark knows, not using
your framework is a choice in and

4
00:00:11.634 --> 00:00:12.600
of itself [LAUGH].

5
00:00:13.660 --> 00:00:16.870
So I tried to play to at least
some kinda common denominators.

6
00:00:16.870 --> 00:00:19.461
The, one hill that I will die on,

7
00:00:19.461 --> 00:00:24.100
is I'm just gonna use TypeScript
the entire time, right?

8
00:00:24.100 --> 00:00:27.220
I'm not going back to writing JavaScript.

9
00:00:27.220 --> 00:00:29.430
I'm not doing it, you can't make me.

10
00:00:29.430 --> 00:00:32.514
Every time I try to put together
a more beginner-friendly course and

11
00:00:32.514 --> 00:00:35.760
I have to write JavaScript,
it fills me with existential dread.

12
00:00:35.760 --> 00:00:38.240
So this is my excuse
not to have to do that.

13
00:00:38.240 --> 00:00:40.230
So it will be TypeScript, that said.

14
00:00:40.230 --> 00:00:44.396
If you're, I've never written TypeScript
before, you can get away with that, right?

15
00:00:44.396 --> 00:00:48.703
There's, this is not a course
on TypeScript, this is there's

16
00:00:48.703 --> 00:00:53.114
shockingly little TypeScript ceremony,
but for my own sanity.

17
00:00:53.114 --> 00:00:58.577
And then, this is actually the next slide,
is slightly a lie, but it's mostly true.

18
00:00:58.577 --> 00:01:03.600
When it came down to what framework to
use, you know it, you might love it.

19
00:01:04.860 --> 00:01:08.500
Might not, but you probably know it,
which is React.

20
00:01:08.500 --> 00:01:13.568
That said, to prove a point,
when we get to component testing and

21
00:01:13.568 --> 00:01:18.463
end testing, and
unit testing is really framework agnostic.

22
00:01:18.463 --> 00:01:22.960
I did on occasion sample, put in some
Svelte applications just to show you,

23
00:01:22.960 --> 00:01:25.290
this doesn't really matter, right?

24
00:01:25.290 --> 00:01:28.096
And so some of them,
I've rebuilt the application and

25
00:01:28.096 --> 00:01:31.085
it's felt the test is two
characters different, right?

26
00:01:31.085 --> 00:01:32.569
In the way that you mount the component.

27
00:01:32.569 --> 00:01:36.290
And when it comes down to just driving
a browser, it literally does not matter.

28
00:01:36.290 --> 00:01:39.230
And you would have to look at the code
to even figure out what framework

29
00:01:39.230 --> 00:01:40.910
I'm using, right?

30
00:01:40.910 --> 00:01:45.449
So some amount of React but a gain, and
we'll go through some little gotchas with

31
00:01:45.449 --> 00:01:50.140
React but, because there's more
gotchas with React than other things.

32
00:01:50.140 --> 00:01:51.840
And we'll kinda talk about that.

33
00:01:51.840 --> 00:01:56.319
But again, you do not need to necessarily
be an expert in React to do a.

34
00:01:56.319 --> 00:02:00.709
There's a lot of times there are examples
in other frameworks as well,

35
00:02:00.709 --> 00:02:05.550
as long as other frameworks mean spelt,
let's see, one that I use every day.

36
00:02:05.550 --> 00:02:09.870
And nobody wants to watch me test the view
component cuz I've never written view in

37
00:02:09.870 --> 00:02:11.300
production.

38
00:02:11.300 --> 00:02:15.926
And then some other just testing tools and
like I said,

39
00:02:15.926 --> 00:02:21.120
most of these are somewhat agnostic,
testing library.

40
00:02:21.120 --> 00:02:23.586
And if you've never used
testing library before,

41
00:02:23.586 --> 00:02:25.890
there are various flavors
of testing library.

42
00:02:25.890 --> 00:02:29.581
There's react testing library,
you can guess what framework that tests.

43
00:02:29.581 --> 00:02:35.755
There is testing library, but under the
hood there is just dom testing library.

44
00:02:35.755 --> 00:02:39.889
Which just basically renders an HTML
component to either JS dom or

45
00:02:39.889 --> 00:02:42.980
happy dom and
lets you fire events at it, right?

46
00:02:42.980 --> 00:02:48.701
And so completely agnostic other than
the act of rendering a component,

47
00:02:48.701 --> 00:02:52.370
though that is specific
to a given framework.

48
00:02:52.370 --> 00:02:56.835
But you could theoretically
just like a pen

49
00:02:56.835 --> 00:03:01.430
child to document dot body and
test as well.

50
00:03:01.430 --> 00:03:05.089
Let's go all the way
down to the lower right,

51
00:03:05.089 --> 00:03:09.722
left depends on which way
you're looking at the screen.

52
00:03:09.722 --> 00:03:16.342
And play right which is
a relatively new-ish tool for

53
00:03:16.342 --> 00:03:19.882
spinning up many a browser.

54
00:03:19.882 --> 00:03:24.176
Whether that's WebKit or Chromium or Edge,

55
00:03:24.176 --> 00:03:27.794
also known as Chromium, or Firefox.

56
00:03:27.794 --> 00:03:31.012
And actually just spinning
up the application and

57
00:03:31.012 --> 00:03:35.155
kicking the tires on it across
all of these different browsers.

58
00:03:35.155 --> 00:03:39.986
It is made by the team who originally
worked on the protocols for

59
00:03:39.986 --> 00:03:43.099
Chrome to kinda drive it and control it.

60
00:03:43.099 --> 00:03:48.091
And then re-implemented those
protocols across WebKit and Firefox so

61
00:03:48.091 --> 00:03:50.264
you can drive of those as well.

62
00:03:50.264 --> 00:03:55.823
This is what we are using nowadays, and I
say that with a little bit of hesitation.

63
00:03:55.823 --> 00:03:59.971
Because right now my code base is
half between Cypress and Playwright.

64
00:03:59.971 --> 00:04:01.740
But it is incredibly powerful, so

65
00:04:01.740 --> 00:04:05.410
we'll take a look at that in
the second half of our time together.

66
00:04:05.410 --> 00:04:07.720
In the middle, we have Vitest, Vitest?

67
00:04:07.720 --> 00:04:11.850
Is it Vite, is it Vite,
I don't know, I say Vite.

68
00:04:11.850 --> 00:04:16.030
Which works with Vite
as opposed to Webpack.

69
00:04:16.030 --> 00:04:22.960
That said, it is, mostly,
99% API compliant with Jest, right?

70
00:04:22.960 --> 00:04:27.229
Except that it also works with Vue and

71
00:04:27.229 --> 00:04:31.092
Svelte and other things as well.

72
00:04:31.092 --> 00:04:34.968
Despite the fact that we're using Vitest,

73
00:04:34.968 --> 00:04:39.585
when we grab extensions and
third party libraries.

74
00:04:39.585 --> 00:04:43.955
You'll notice that a lot of times
we just grab the just ones and

75
00:04:43.955 --> 00:04:48.257
drop them in and
everything works fine on occasion, right?

76
00:04:48.257 --> 00:04:50.337
I'll even have configuration files for
Jest,

77
00:04:50.337 --> 00:04:53.030
if you wanna run Jest against
some of these things as well.

78
00:04:53.030 --> 00:04:56.870
The biggest difference is that you will
import from Vitest instead of Jest.

79
00:04:56.870 --> 00:04:58.674
But generally speaking,

80
00:04:58.674 --> 00:05:04.160
they are API compliant except one is
nicer to ES modules than the other.

81
00:05:04.160 --> 00:05:07.285
And now you've learned what my biases are.

82
00:05:07.285 --> 00:05:12.604
Cool, all right, so finally, kinda,
as we wrap up our fun intro together.

83
00:05:12.604 --> 00:05:15.075
Like I said, we're gonna use
TypeScript for everything, and

84
00:05:15.075 --> 00:05:16.483
we're gonna use it in strict mode.

85
00:05:16.483 --> 00:05:20.520
Again, Github Actions, you might use
Travis, you might use circle CI,

86
00:05:20.520 --> 00:05:23.332
you might even have
the pleasure of using Jenkins.

87
00:05:23.332 --> 00:05:26.376
Ideally, some of the stuff,
yeah, we're all chuckling.

88
00:05:26.376 --> 00:05:30.360
ideally, all this stuff should apply,
but by definition,

89
00:05:30.360 --> 00:05:33.876
I can remain relatively
confident that most everyone

90
00:05:33.876 --> 00:05:38.300
has access to GitHub Actions,
which is what I use as well.

91
00:05:38.300 --> 00:05:42.080
And like I said, in most of our
conversations, rather than be, this is

92
00:05:42.080 --> 00:05:46.940
the way that you should do it, it's gonna
be this is the way you should do it.

93
00:05:46.940 --> 00:05:52.249
Versus, this is how it happens in reality,
and this is how [LAUGH] you should do it

94
00:05:52.249 --> 00:05:57.580
and this is how [LAUGH] you should do it
when you have a deadline next week, right?

95
00:05:57.580 --> 00:06:00.550
Or there is an outage, right?

96
00:06:00.550 --> 00:06:06.610
And, or you've inherited a codebase
with no test coverage to speak of.

97
00:06:06.610 --> 00:06:11.579
Let's bend the rules a little
bit to be productive

