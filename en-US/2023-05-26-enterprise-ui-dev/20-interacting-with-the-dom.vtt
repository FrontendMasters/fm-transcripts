WEBVTT

1
00:00:00.000 --> 00:00:04.157
So then we've got this idea
of should increment when

2
00:00:04.157 --> 00:00:07.848
the increment button is pressed,
all right?

3
00:00:07.848 --> 00:00:09.400
We're gonna need to know some things here.

4
00:00:09.400 --> 00:00:12.395
So, yeah, we should,
let's render the counter.

5
00:00:14.862 --> 00:00:19.476
Now, if we were when
we debugged it before,

6
00:00:19.476 --> 00:00:24.359
I actually had an idea,
let's do something.

7
00:00:24.359 --> 00:00:31.942
Let's cancel this and
let's do dash dash UI.

8
00:00:31.942 --> 00:00:37.994
And we should [SOUND] I
got to do the dash dash,

9
00:00:37.994 --> 00:00:41.927
dash dash UI, boom, okay?

10
00:00:41.927 --> 00:00:45.308
And so there you can see we
have not run this test yet.

11
00:00:45.308 --> 00:00:48.257
We have the passing one,
we have the one that's to do.

12
00:00:48.257 --> 00:00:53.223
And let's go ahead, and
we'll type in screen.debug,

13
00:00:53.223 --> 00:00:56.020
and you'll see why I like this.

14
00:01:01.129 --> 00:01:02.259
In the console, okay?

15
00:01:02.259 --> 00:01:04.673
It's a little on the big side, and

16
00:01:04.673 --> 00:01:09.176
we can the syntax highlighting
leaves something to be desired.

17
00:01:09.176 --> 00:01:15.282
But generally speaking,
you can kind of see the shape of the DOM.

18
00:01:15.282 --> 00:01:20.509
We've got this increment button here,
as well.

19
00:01:20.509 --> 00:01:24.688
Yeah, the syntax highlighting
leaves a little bit to be desired.

20
00:01:24.688 --> 00:01:27.404
But generally speaking,
we get a general shape of our DOM.

21
00:01:27.404 --> 00:01:32.063
And I'm wondering if this is
just my dark terminal theme or

22
00:01:32.063 --> 00:01:34.547
something along those lines.

23
00:01:34.547 --> 00:01:39.311
I'm not totally clear, and
we can get a sense of it.

24
00:01:39.311 --> 00:01:44.818
Now, one thing you'll notice is that I
decorated some of these things with,

25
00:01:44.818 --> 00:01:47.287
like, current count as a test ID.

26
00:01:47.287 --> 00:01:51.766
These are useful for
like finding stuff in the test.

27
00:01:51.766 --> 00:01:53.490
Could you use classes?

28
00:01:53.490 --> 00:01:54.125
Sure.

29
00:01:54.125 --> 00:01:55.064
Could you use IDs?

30
00:01:55.064 --> 00:01:55.990
Absolutely.

31
00:01:55.990 --> 00:01:58.801
Do those maybe mean things
to your design buddies?

32
00:01:58.801 --> 00:01:59.935
Yes.

33
00:01:59.935 --> 00:02:01.993
Can they change?

34
00:02:01.993 --> 00:02:03.574
Do some modern tooling,

35
00:02:03.574 --> 00:02:08.858
do everything in their power to obfuscate
the class names cuz something CSS and JS?

36
00:02:08.858 --> 00:02:10.386
Also, yes.

37
00:02:10.386 --> 00:02:14.890
Do you ever have to worry about somebody
thinking current count is just a useless

38
00:02:14.890 --> 00:02:18.265
class and deleting it versus test I dated,
that test I did?

39
00:02:18.265 --> 00:02:20.025
I think everyone knows
what that one was for.

40
00:02:20.025 --> 00:02:25.738
So sometimes it's about, like,
protecting you from other people.

41
00:02:25.738 --> 00:02:27.324
Cool, so I've got that in place.

42
00:02:27.324 --> 00:02:30.824
The other thing you can always
do is also spin up this app and

43
00:02:30.824 --> 00:02:33.765
just use the Chrome tools to inspect it,
right?

44
00:02:33.765 --> 00:02:34.454
That's the thing.

45
00:02:34.454 --> 00:02:35.838
&gt;&gt; What can I answer this,
again, I've been trying to.

46
00:02:35.838 --> 00:02:38.237
&gt;&gt; Dash dash UI,
now if you use NPM tests, and

47
00:02:38.237 --> 00:02:40.579
you want a dash dash
flag is to be npm test

48
00:02:40.579 --> 00:02:43.751
dash dash and then the dash dash flags.

49
00:02:43.751 --> 00:02:44.853
&gt;&gt; Those extra dash dash.

50
00:02:44.853 --> 00:02:48.828
&gt;&gt; Yeah, let me show that cuz those words
seemed fine when I was saying them, and

51
00:02:48.828 --> 00:02:52.193
then it occurred to me that doesn't
make any sense if you weren't

52
00:02:52.193 --> 00:02:53.738
literally the one saying it.

53
00:02:53.738 --> 00:02:58.527
So yeah, there's an extra, and
I think you'll avoid that if using pnpm.

54
00:02:58.527 --> 00:03:00.322
And if you just did npx vitest,
you don't need that.

55
00:03:00.322 --> 00:03:04.082
But with the NPM test you
do need to say like, and

56
00:03:04.082 --> 00:03:06.910
I'm gonna give you some flags now.

57
00:03:06.910 --> 00:03:07.706
Cool.

58
00:03:07.706 --> 00:03:10.040
So that will run in that place.

59
00:03:10.040 --> 00:03:13.682
So we knew that current
count was the current count.

60
00:03:13.682 --> 00:03:18.271
So let's, I should increment the button,
but let's start with like maybe I

61
00:03:18.271 --> 00:03:21.604
could have written this in
the other one but here we are.

62
00:03:21.604 --> 00:03:25.144
You can see what I meant to do
in the solution if you want, so

63
00:03:25.144 --> 00:03:30.063
we'll say now one of the changes you'll
see is that like theoretically this will

64
00:03:30.063 --> 00:03:31.654
give you a container, but

65
00:03:31.654 --> 00:03:36.029
we have this screen cuz container
was always the document body anyway.

66
00:03:36.029 --> 00:03:38.624
Screen is actually not scoped to anything.

67
00:03:38.624 --> 00:03:39.728
It's scoped to document body.

68
00:03:39.728 --> 00:03:43.183
And so it's like from the user's
perspective, staring at the screen,

69
00:03:43.183 --> 00:03:44.040
what do they see?

70
00:03:44.040 --> 00:03:48.346
That way, you're not accidentally
querying from some child node.

71
00:03:48.346 --> 00:03:54.256
So we go, we can say const

72
00:03:54.256 --> 00:03:59.322
current count equals

73
00:03:59.322 --> 00:04:04.670
screen get by test ID,

74
00:04:04.670 --> 00:04:10.586
current count, right?

75
00:04:10.586 --> 00:04:12.733
And we'll delete that for a second.

76
00:04:12.733 --> 00:04:17.587
The interesting part is, this is where
some of the stuff we were saying in

77
00:04:17.587 --> 00:04:20.865
the beginning,
somewhat behooves us, right?

78
00:04:20.865 --> 00:04:24.470
This test passes,
this test passes because it doesn't fail.

79
00:04:24.470 --> 00:04:27.643
But before that could
have been a bad thing.

80
00:04:27.643 --> 00:04:33.540
Here is kind of a good thing cuz like,
let's throw an extra R in current count.

81
00:04:33.540 --> 00:04:36.978
It can't find that node and
so it blows up.

82
00:04:36.978 --> 00:04:40.828
So the act that you could find it at all,
this is a valid test case.

83
00:04:40.828 --> 00:04:43.494
We render a counter, cool,
that didn't blow up.

84
00:04:43.494 --> 00:04:48.355
And then we went to go look for something
with the test ID current count with one R,

85
00:04:48.355 --> 00:04:50.732
which was totally on the page, right?

86
00:04:50.732 --> 00:04:55.054
So we have validated two things in
this test as zero expectations, right?

87
00:04:55.054 --> 00:04:58.188
Cuz those do blow up if
they're not present.

88
00:04:58.188 --> 00:05:03.873
So it's not test, it's not doing
what the test says in the tin,

89
00:05:03.873 --> 00:05:09.889
but it is like definitely exercising and
testing our application.

90
00:05:09.889 --> 00:05:12.978
So we could say,

91
00:05:12.978 --> 00:05:17.835
we could do something like

92
00:05:17.835 --> 00:05:27.347
expect(currentCount.textContent).toBe.

93
00:05:27.347 --> 00:05:32.311
I had a good test earlier today, it should
be zero by default and that passes.

94
00:05:32.311 --> 00:05:39.337
The problem is, that if it doesn't pass,
because that's not super helpful.

95
00:05:39.337 --> 00:05:44.912
It's like zero,
is not equal to double zero, okay?

96
00:05:44.912 --> 00:05:47.870
One of the things that you can do, and

97
00:05:47.870 --> 00:05:53.136
you'll see that I have the auto
complete cuz this is a giant file.

98
00:05:53.136 --> 00:05:56.907
But I will show it to you
kind of separately first and

99
00:05:56.907 --> 00:06:01.214
like how we got there,
because it won't work otherwise.

100
00:06:01.214 --> 00:06:06.916
Is Jest DOM from testing library has
a whole bunch of additional matchers like

101
00:06:06.916 --> 00:06:12.895
are all DOM related because the regular
Jest assumes that you don't have JS DOM.

102
00:06:12.895 --> 00:06:15.580
Assume, you don't have happy DOM,

103
00:06:15.580 --> 00:06:19.910
assume you don't have anything,
so it equals stuff that,

104
00:06:19.910 --> 00:06:24.605
Jest DOM basically says all
the very DOM related stuff, right?

105
00:06:24.605 --> 00:06:30.385
To have text.Content closest, a whole
bunch of various stuff unique to the DOM.

106
00:06:30.385 --> 00:06:36.841
You can either, if you're pulling it in,
you can expand or extend matchers.

107
00:06:36.841 --> 00:06:43.374
Also, if you literally, I'll show you
each is in this other file over here,

108
00:06:43.374 --> 00:06:49.618
which should actually be the one that
matters, that's a different one.

109
00:06:49.618 --> 00:06:56.858
This is why you don't put seven apps in
the same folder, cool in this counter.

110
00:06:56.858 --> 00:06:58.437
I have nothing right now.

111
00:06:58.437 --> 00:07:03.197
I could actually do this if I just import.

112
00:07:03.197 --> 00:07:07.812
I could do this in every individual
file that I wanted to as well.

113
00:07:07.812 --> 00:07:13.438
But all I have to do is in any file,
like, I'm gonna set this up basically to,

114
00:07:13.438 --> 00:07:18.560
we'll look to say, like, hey,
run this file before we run the test.

115
00:07:18.560 --> 00:07:20.844
So it's, like,
stuff that you can make available and

116
00:07:20.844 --> 00:07:23.237
do stuff if there's any kind
of setup that you need to do.

117
00:07:23.237 --> 00:07:26.358
One of the things I do is
lock the timezone into UTC,

118
00:07:26.358 --> 00:07:31.294
cuz it turns out GitHub's machines are
in a different timezone than my machine,

119
00:07:31.294 --> 00:07:33.126
and you know what's not fun?

120
00:07:33.126 --> 00:07:37.293
Having tests that fail because

121
00:07:37.293 --> 00:07:43.544
the computer's in a different timezone,
and

122
00:07:43.544 --> 00:07:49.323
then it is expect extend or extend expect.

123
00:07:49.323 --> 00:07:52.900
Expect extend, and
we'll find out if I'm wrong.

124
00:07:52.900 --> 00:07:55.781
It's one of those things you
do once in a code base, so

125
00:07:55.781 --> 00:07:57.585
you never actually memorize it.

126
00:07:57.585 --> 00:08:02.653
And then in vitestConfig, we will also

127
00:08:02.653 --> 00:08:08.344
say setupFiles, and we'll say ./test.

128
00:08:16.700 --> 00:08:18.458
I can't find that.

129
00:08:18.458 --> 00:08:20.545
Did I spell it right?

130
00:08:20.545 --> 00:08:23.829
&gt;&gt; Don't think it found
your expect extend.

131
00:08:23.829 --> 00:08:28.427
&gt;&gt; Yep,
it could have been cuz it could have been.

132
00:08:28.427 --> 00:08:33.678
Let's find out together, extend, expect.

133
00:08:33.678 --> 00:08:37.848
Hey, there we go.

134
00:08:37.848 --> 00:08:41.578
And now we can go in here, and

135
00:08:41.578 --> 00:08:46.397
we can have a much healthier to, and

136
00:08:46.397 --> 00:08:50.455
like, that's cool, right?

137
00:08:50.455 --> 00:08:53.529
That's actually a different
extender that's also installed.

138
00:08:53.529 --> 00:08:59.969
IntelliSense is good, but it was not set
up for this ridiculous repo that I have.

139
00:08:59.969 --> 00:09:05.045
To have attribute,
that's one coming from Jest you can

140
00:09:05.045 --> 00:09:10.130
see in testing library
matchers to have class, right?

141
00:09:10.130 --> 00:09:13.449
To have focused very DOM specific stuff,
right?

142
00:09:13.449 --> 00:09:18.550
So now, I can say to have text content and

143
00:09:18.550 --> 00:09:26.363
if you look, we at least get
a slightly better error message.

144
00:09:26.363 --> 00:09:30.443
I was expecting it to show me the DOM,
but it didn't, but

145
00:09:30.443 --> 00:09:34.874
we at least get the expected
element to have the text content.

146
00:09:34.874 --> 00:09:37.597
And you could actually write
your own matchers that have,

147
00:09:37.597 --> 00:09:41.564
if there's something really unique, I have
never had to do that before in my life,

148
00:09:41.564 --> 00:09:42.943
but I appreciate that I can.

149
00:09:42.943 --> 00:09:47.037
And even the regular to equal,
you can put in a custom error message.

150
00:09:47.037 --> 00:09:49.777
Again, never done it,
I just like that I can.

151
00:09:49.777 --> 00:09:55.020
Cool, and we'll save that, and
we can see that it passes, all right?

152
00:09:55.020 --> 00:10:00.304
So now, our next trick for my next trick.

153
00:10:00.304 --> 00:10:04.451
[LAUGH] We would like to do what
this test actually says, right?

154
00:10:04.451 --> 00:10:09.961
Which is, should increment when
the increment button is pressed

155
00:10:09.961 --> 00:10:14.781
now press isn't a thing, but
click is, and so we could.

156
00:10:14.781 --> 00:10:18.926
We need to go find that increment button,
and

157
00:10:18.926 --> 00:10:25.050
then we need to press it, and
then we should expect that it has one.

158
00:10:25.050 --> 00:10:29.555
Should I move this to a different test
maybe, but I don't want to I kind of liked

159
00:10:29.555 --> 00:10:34.286
the idea that hey it's got zero then we go
ahead, and we figure out the next thing.

160
00:10:34.286 --> 00:10:38.919
So, in testing library, there is a very

161
00:10:38.919 --> 00:10:43.692
helpful function called fireEvent, and

162
00:10:43.692 --> 00:10:49.389
we will say fireEvent., look, change.

163
00:10:49.389 --> 00:10:51.493
No, we don't want change, we want click.

164
00:10:51.493 --> 00:10:52.748
Yeah, and there was double click.

165
00:10:52.748 --> 00:10:55.078
There's a whole bunch of other ones.

166
00:10:55.078 --> 00:10:58.332
Click, and then if we look at
the IntelliSense, it gives me an element.

167
00:10:58.332 --> 00:11:04.338
So with this one, we'll say screen, and
so we've got a bunch of these find alls,

168
00:11:04.338 --> 00:11:07.575
that is kinda document query selector all.

169
00:11:07.575 --> 00:11:10.727
There's findBy, there's getAll,

170
00:11:10.727 --> 00:11:15.455
we'll talk about why that's
different in a little bit.

171
00:11:15.455 --> 00:11:21.194
There's getByAltText, getByDisplayValue.

172
00:11:21.194 --> 00:11:24.467
For a lot of the cases, we do getByRole.

173
00:11:24.467 --> 00:11:25.910
What does that mean?

174
00:11:25.910 --> 00:11:30.412
GetByRole is basically, again we're
thinking about this from the perspective

175
00:11:30.412 --> 00:11:34.463
of our users, they don't really know
what different DOM elements are.

176
00:11:34.463 --> 00:11:39.221
And even the fact of the matter is,
we've all been guilty

177
00:11:39.221 --> 00:11:43.997
of making an A tag link look
like a button before, right?

178
00:11:43.997 --> 00:11:49.031
Who amongst us hasn't today,
[LAUGH] or this week?

179
00:11:49.031 --> 00:11:53.602
But like a lot of those cases,
if you care about screen readers,

180
00:11:53.602 --> 00:11:58.936
that's cool, because links are cool,
that's kind of how the web works,

181
00:11:58.936 --> 00:12:01.835
but we would give it the role of a button.

182
00:12:01.835 --> 00:12:06.231
So it's like this idea of a spiritually
a button, and so I can say button, and

183
00:12:06.231 --> 00:12:08.614
then we got to give it something, right?

184
00:12:08.614 --> 00:12:13.278
And these are all like things
that the browser does by itself,

185
00:12:13.278 --> 00:12:16.686
which is if you have
a button with this label,

186
00:12:16.686 --> 00:12:22.268
its role as a button with this name as
terms as a screen reader in this case.

187
00:12:22.268 --> 00:12:25.775
And one-
&gt;&gt; It's a DOM's aria-role effectively.

188
00:12:25.775 --> 00:12:29.731
&gt;&gt; Exactly, and to be clear, you do
not have to define all these things.

189
00:12:29.731 --> 00:12:33.639
If you use semantic HTML, you will get
a certain number of these for free.

190
00:12:33.639 --> 00:12:38.275
You do not have to be like button,
role button, aria-role button.

191
00:12:38.275 --> 00:12:41.956
It's a button, the browser knows, relax.

192
00:12:41.956 --> 00:12:47.597
So let's go ahead and
we'll say const button

193
00:12:47.597 --> 00:12:52.655
cool, let's go click that button.

194
00:12:52.655 --> 00:12:58.248
And then we should expect that current

195
00:12:58.248 --> 00:13:02.965
count has a text content of one and

196
00:13:02.965 --> 00:13:09.101
the world is good, and that all happens.

