WEBVTT

1
00:00:00.160 --> 00:00:00.888
&gt;&gt; Steve Kinney: Just a minute or two,

2
00:00:00.888 --> 00:00:03.200
I'm gonna switch gears to
talk a little bit about grid.

3
00:00:03.200 --> 00:00:07.400
So what I'm gonna pull up is just going
into this grid playground over here.

4
00:00:07.400 --> 00:00:11.563
We also have one next to the Flexbox
playground where we can play around with

5
00:00:11.563 --> 00:00:13.889
some of the properties visually as well.

6
00:00:13.889 --> 00:00:16.199
But we'll check out what
those ones in a second.

7
00:00:16.199 --> 00:00:18.560
Let me just kinda switch gears and
we'll do that.

8
00:00:18.560 --> 00:00:24.000
So the other Flexbox is good for
like one direction, right?

9
00:00:24.000 --> 00:00:26.976
If you just wanna lay out
like you can nest Flexboxes,

10
00:00:26.976 --> 00:00:28.839
you can do a whole bunch of stuff.

11
00:00:28.839 --> 00:00:35.370
But for more complicated layouts, we
usually end up relying about on CSS grid.

12
00:00:35.370 --> 00:00:38.714
As I've kinda repeated multiple times,

13
00:00:38.714 --> 00:00:43.210
Tailwind does not add new
features to CSS grid, right?

14
00:00:44.250 --> 00:00:46.024
In fact, Tailwind 3,

15
00:00:46.024 --> 00:00:52.230
since it was using post CSS could add
syntax that doesn't really exist.

16
00:00:52.230 --> 00:00:56.613
Tailwind 4 has a little bit of a vite
thing going on to add the theming and

17
00:00:56.613 --> 00:00:58.230
stuff along those lines.

18
00:00:58.230 --> 00:01:03.449
But it is effectively just using CSS,
just with a lot of abstractions that

19
00:01:03.449 --> 00:01:09.830
make it way easier to do things that might
have been very verbose and complicated.

20
00:01:09.830 --> 00:01:13.630
So right now there is not much
of a grid to speak of in here.

21
00:01:13.630 --> 00:01:16.030
In fact,
there is no CSS grid in this case.

22
00:01:16.030 --> 00:01:17.302
There are just a bunch of boxes.

23
00:01:17.302 --> 00:01:24.360
We'll take and remove some as well,
but it is just a stack.

24
00:01:24.360 --> 00:01:28.664
And so the easiest way to
no one's surprise on how to

25
00:01:28.664 --> 00:01:32.280
set up CSS grid is you
type in the word grid.

26
00:01:33.480 --> 00:01:41.107
And now you have a CSS grid
which looks like it did before.

27
00:01:41.107 --> 00:01:42.992
In fact,
slightly worse cuz there's no space.

28
00:01:42.992 --> 00:01:46.119
I can do it grid gap-4 and

29
00:01:46.119 --> 00:01:51.460
we can see that now I've got a gap of 4.

30
00:01:51.460 --> 00:01:56.900
But the flexbox is a way to
spread stuff out on a given line.

31
00:01:56.900 --> 00:01:59.255
That line can be a column and
that line can be a row.

32
00:01:59.255 --> 00:02:03.140
Grid is basically two dimensions
at this point, right?

33
00:02:03.140 --> 00:02:06.966
And you can define one of these and

34
00:02:06.966 --> 00:02:11.613
tell when we'll figure out the rest, or

35
00:02:11.613 --> 00:02:16.133
css really, you say grid-cols-3.

36
00:02:16.133 --> 00:02:22.670
Now automatically, yes, I chose three
cuz I know I have nine items, right?

37
00:02:22.670 --> 00:02:25.270
We can tweak that in a second,
we'll see what it looks like.

38
00:02:25.270 --> 00:02:31.030
Grid-cols-3, then all of a sudden we
get a three by three grid, right?

39
00:02:31.030 --> 00:02:36.453
If I make that, I don't know, 4 or
something that's not easily divisible,

40
00:02:36.453 --> 00:02:40.806
then you can see that it will line
them up and then create a new row

41
00:02:40.806 --> 00:02:45.846
automatically based on whatever
the remainder is in this case, right?

42
00:02:45.846 --> 00:02:53.917
Alternatively, I could say that what
I want is grid-rows, I don't know, 4.

43
00:02:55.335 --> 00:02:59.645
&gt;&gt; Steve Kinney: Which, yeah,
it kinda gets us one column.

44
00:02:59.645 --> 00:03:01.642
Yeah, okay, got it.

45
00:03:01.642 --> 00:03:06.750
So we go back to grid-cols-3.

46
00:03:06.750 --> 00:03:12.022
And where this becomes super powerful
as well is you can have fun with

47
00:03:12.022 --> 00:03:17.030
responsive design,
where it becomes very easy to change this.

48
00:03:17.030 --> 00:03:20.910
So if we wanted to say, hey, well,
that's probably pretty small.

49
00:03:20.910 --> 00:03:22.670
I mean, this looks cute on mobile.

50
00:03:22.670 --> 00:03:26.224
But let's say we wanted to have,
we can do this Flexbox as well.

51
00:03:26.224 --> 00:03:30.728
It becomes very easy to
do these breakpoints

52
00:03:30.728 --> 00:03:34.988
where we could say something like, hey,

53
00:03:34.988 --> 00:03:40.708
at the smallest viewport,
let's do grid columns one,

54
00:03:40.708 --> 00:03:45.476
right, and
maybe as we go up to a large tablet.

55
00:03:45.476 --> 00:03:52.234
So this looks like we can say medium,

56
00:03:52.234 --> 00:03:58.346
we say grid-cols-2, right?

57
00:03:58.346 --> 00:04:02.246
So now all of a sudden,
magically, we've got one column,

58
00:04:02.246 --> 00:04:04.670
we get the responsive design of two.

59
00:04:04.670 --> 00:04:09.575
And we could say, eventually Excel, and

60
00:04:09.575 --> 00:04:14.071
we'll say grid-cols-3, right?

61
00:04:14.071 --> 00:04:16.700
And now we can get rid of this.

62
00:04:16.700 --> 00:04:18.634
So all automatically,

63
00:04:18.634 --> 00:04:24.359
we'll get the flow with not a lot
of extra media queries, right?

64
00:04:24.359 --> 00:04:29.159
If we hover over each of these and
we look, first of all, that is the grid.

65
00:04:29.159 --> 00:04:29.959
That's not hard.

66
00:04:31.239 --> 00:04:33.159
That's a little squirrely.

67
00:04:33.159 --> 00:04:35.319
This is definitely clearer in the class.

68
00:04:35.319 --> 00:04:39.350
But as we go over, okay, well, this would
have been an extra media query where

69
00:04:39.350 --> 00:04:43.218
we'd rewrite that all again and
this would have been another media query.

70
00:04:43.218 --> 00:04:46.616
So now we can just say we start out and
with Tailwind,

71
00:04:46.616 --> 00:04:49.250
we always want to start out with mobile.

72
00:04:49.250 --> 00:04:52.730
We do that kind of mobile first design,
which is if you kind of read this.

73
00:04:52.730 --> 00:04:57.167
And this is why that sorting of
the classes is super helpful,

74
00:04:57.167 --> 00:05:01.330
which is the unprefixed
classes come first, right?

75
00:05:01.330 --> 00:05:05.410
So out of the box, at the smallest
viewport, we have one column, right?

76
00:05:06.610 --> 00:05:11.030
As we move up to that 768 pixels or
48 rem.

77
00:05:11.030 --> 00:05:16.310
Then all of a sudden the second class
kicks in and brings us up to two columns.

78
00:05:16.310 --> 00:05:17.350
Great, great, great.

79
00:05:17.350 --> 00:05:23.510
They get to Excel which is 1280 pixels and
you could very easily change that.

80
00:05:23.510 --> 00:05:27.548
And you know that it will be consistent
through your entire application, because

81
00:05:27.548 --> 00:05:31.527
instead of you putting numbers everywhere
and you can do this CSS variables these

82
00:05:31.527 --> 00:05:35.230
days, you can actually have these
values in there, the grid-cols-3.

83
00:05:35.230 --> 00:05:39.206
You can kinda see from the smallest and
working out to the largest,

84
00:05:39.206 --> 00:05:40.720
how the grid changes.

85
00:05:40.720 --> 00:05:43.743
And then without a whole bunch of
media queries and just a few lines,

86
00:05:43.743 --> 00:05:44.974
you get this abstraction.

87
00:05:44.974 --> 00:05:50.192
We can go from 1 to 2 to,
if I get rid of the sidebar,

88
00:05:50.192 --> 00:05:55.665
3, quickly and
easily with not a lot of fuss, right?

89
00:05:55.665 --> 00:05:58.760
And that's cool in a little example.

90
00:05:58.760 --> 00:06:04.147
But on larger sites, right,
it definitely comes to the point

91
00:06:04.147 --> 00:06:09.015
where being able to do that at
scale across the site makes

92
00:06:09.015 --> 00:06:13.778
things that would have taken a very,
very long time and

93
00:06:13.778 --> 00:06:19.291
makes them very quick and
kind of easy to do in this case as well.

94
00:06:19.291 --> 00:06:25.235
In anything in Tailwind,
we get to do effectively,

95
00:06:25.235 --> 00:06:29.693
you can always break out of Tailwind and

96
00:06:29.693 --> 00:06:36.620
do arbitrary kind of selections
even in these classes.

97
00:06:36.620 --> 00:06:41.768
Most of the built in stuff
in Tailwind does kind

98
00:06:41.768 --> 00:06:50.221
of assume you're kind of doing standard
grids with equal rows and columns.

99
00:06:50.221 --> 00:06:53.090
You don't necessarily have to do that,
right?

100
00:06:53.090 --> 00:06:56.850
You could very easily break out of that
as well and a lot of times you do.

101
00:06:56.850 --> 00:07:01.534
This is great for a set of cards
that I want to do, awesome, neat.

102
00:07:01.534 --> 00:07:06.287
But you can also use CSS grid to do kind
of more of that traditional blog layout

103
00:07:06.287 --> 00:07:11.265
where you've maybe got a header that
takes up the full width, a sidebar that's

104
00:07:11.265 --> 00:07:16.340
only a portion of it, the body that takes
up the rest, and then a footer, right?

105
00:07:17.940 --> 00:07:20.580
Some of this is the nuance
of actual just CSS grid.

106
00:07:20.580 --> 00:07:27.658
But instead of this grid-cols-1, which if
you hover over it is just doing repeat,

107
00:07:27.658 --> 00:07:33.650
let's actually do three in this case,
repeat three times.

108
00:07:33.650 --> 00:07:37.647
Columns that are at minimum 0 and
at most 1fr and

109
00:07:37.647 --> 00:07:43.010
if you're not totally familiar
with CSS grid, what is fr?

110
00:07:43.010 --> 00:07:47.260
It is division of free space, right?

111
00:07:47.260 --> 00:07:52.146
So if you have three things
that all take up one unit of

112
00:07:52.146 --> 00:07:56.380
free space that you shake up a third,
right?

113
00:07:58.140 --> 00:08:01.259
And it's only if you have stuff
that is a little bit more specific,

114
00:08:01.259 --> 00:08:03.740
so let's look at this for a second.

115
00:08:03.740 --> 00:08:08.335
I'm getting rid of the responsive
stuff for a moment and

116
00:08:08.335 --> 00:08:11.868
what we'll do is say set grid-cols-1.

117
00:08:11.868 --> 00:08:16.230
We can say it's gonna be
a three column grid, right?

118
00:08:16.230 --> 00:08:20.486
We'll say that the first column is,

119
00:08:20.486 --> 00:08:26.790
I don't know, 24rem or pixels or whatever.

120
00:08:26.790 --> 00:08:33.350
The second one is that 1fr,
whatever free space is left.

121
00:08:33.350 --> 00:08:39.923
And the last one is 57 pixels
cuz I hate myself, right?

122
00:08:39.923 --> 00:08:43.240
Now you can see that the grid
is not even columns.

123
00:08:43.240 --> 00:08:45.869
What did I choose?

124
00:08:45.869 --> 00:08:53.469
24rem, this is the 57 pixels and then 1fr
is one division of free space, right?

125
00:08:53.469 --> 00:08:58.317
And so if I change this,
you can see that the kind of

126
00:08:58.317 --> 00:09:02.989
static 24rem and 57 pixels stay the same.

127
00:09:02.989 --> 00:09:07.081
The 1fr is just dynamically
free space at that point.

128
00:09:07.081 --> 00:09:15.000
If I could even change this grid,
I could add in 2fr, right?

129
00:09:15.000 --> 00:09:17.940
So that's two units of free space,

130
00:09:17.940 --> 00:09:23.232
which basically means of whatever
remains after the 24rem and

131
00:09:23.232 --> 00:09:28.034
the 57 pixels,
[LAUGH] the 1fr is gonna be one-third and

132
00:09:28.034 --> 00:09:33.329
the 2fr is gonna be two-thirds
in this weird four column grid.

133
00:09:33.329 --> 00:09:36.820
So you can kinda see this is roughly
double the width of this one.

134
00:09:36.820 --> 00:09:40.537
And as I do the very first thing you ever
show a product manager when you build

135
00:09:40.537 --> 00:09:42.900
a ui,
they immediately do this on the browser.

136
00:09:44.420 --> 00:09:48.795
As you can see that for the most
part consistently stays a 2:1 ratio.

137
00:09:48.795 --> 00:09:55.700
So in fact, you can think about those
FRs as free space ratio of 1:1:1.

138
00:09:55.700 --> 00:10:00.150
They'll each be a third, 2 and
1 there'll be two-thirds, one-third.

139
00:10:00.150 --> 00:10:06.166
I can even just make this simpler,

140
00:10:06.166 --> 00:10:11.357
we can do 2fr, 3fr, 1fr.

141
00:10:11.357 --> 00:10:15.150
Right, it becomes a division
ratio at this point.

142
00:10:15.150 --> 00:10:18.190
So now you can see 2, 3, 1.

143
00:10:21.070 --> 00:10:23.939
You can see that it kinda keeps that
kinda ratio between them, right?

144
00:10:23.939 --> 00:10:26.754
If any of them are hard
coded with a value,

145
00:10:26.754 --> 00:10:30.061
then those obviously take precedence,
right?

146
00:10:30.061 --> 00:10:36.340
But yeah, and so
you can play around with this as well.

147
00:10:37.860 --> 00:10:42.588
The other thing we can do with grid is
on the actual individual items, right,

148
00:10:42.588 --> 00:10:46.820
at this point, each element
takes up one cell in the grid.

149
00:10:46.820 --> 00:10:48.420
Okay, that seems reasonable.

150
00:10:50.650 --> 00:10:55.740
But a lot of times there are times
when you would like a given cell to be

151
00:10:55.740 --> 00:11:01.690
able to span multiple and you can do
that very easily in tailwind as well.

152
00:11:01.690 --> 00:11:07.077
So on any given one of these,
I can say col-span-2.

153
00:11:08.450 --> 00:11:14.788
&gt;&gt; Steve Kinney: And now you can see that
this one will now span-2 columns, right?

154
00:11:14.788 --> 00:11:22.400
I can even combine those,
say col-span-2, row-span-2.

155
00:11:23.440 --> 00:11:29.297
And now that first cell, as you can see,
takes up two columns and

156
00:11:29.297 --> 00:11:34.722
of my ratioed columns, right,
two columns and two rows and

157
00:11:34.722 --> 00:11:39.520
begin to do much more complicated layouts,
right?

158
00:11:41.200 --> 00:11:47.585
We can even say, let's give a row-span
of 3 and see how it bumps stuff around.

159
00:11:47.585 --> 00:11:50.371
And what's cool about this is these
all work with those responsive

160
00:11:50.371 --> 00:11:51.850
breakpoints, right?

161
00:11:51.850 --> 00:11:54.490
So I could actually say that
this is only gonna happen.

162
00:11:55.610 --> 00:12:00.210
We'll put a medium in front of this.

163
00:12:00.210 --> 00:12:05.143
So by default these will not click in
until we hit a medium viewport, right?

164
00:12:05.143 --> 00:12:09.720
So out of the box there will be a span
of 1 and 1 cuz that's the default.

165
00:12:09.720 --> 00:12:14.440
And we'll actually have
this only click in.

166
00:12:16.120 --> 00:12:22.246
So now all of a sudden when we
are mobile we're stacked and

167
00:12:22.246 --> 00:12:30.555
as we get kinda bigger, we can kinda
change the layout super easily, right?

168
00:12:30.555 --> 00:12:35.744
If we had imagine especially
we got rid of 8 and 9,

169
00:12:35.744 --> 00:12:43.351
you can see a world where you've kinda
got this layout on the full mobile and

170
00:12:43.351 --> 00:12:48.400
then I wonder if I
haven't defined anything.

171
00:12:48.400 --> 00:12:53.452
I'm experimenting for now,

172
00:12:53.452 --> 00:12:58.705
we say to this one that we wanted

173
00:12:58.705 --> 00:13:03.967
to start out with a row-span.

174
00:13:03.967 --> 00:13:06.370
No, we'd have to probably give it
a min height or something like that.

175
00:13:06.370 --> 00:13:12.248
I wanted to see if it would take
up three of those but it doesn't.

176
00:13:12.248 --> 00:13:13.416
&gt;&gt; Steve Kinney: Let's just do.

177
00:13:14.501 --> 00:13:20.410
&gt;&gt; Steve Kinney: Yeah, no, you could give
it a min height though, and it would work.

178
00:13:20.410 --> 00:13:26.001
But here it will actually change the
entire layout very quickly responsively

179
00:13:26.001 --> 00:13:32.350
based on any of these factors and you can
very quickly totally shift stuff around.

180
00:13:32.350 --> 00:13:38.990
The other one that is a lot of times
helpful is this idea of order, right?

181
00:13:40.270 --> 00:13:45.627
Right now they are ordered
in the way that they appear,

182
00:13:45.627 --> 00:13:48.430
then the grid lays them out.

183
00:13:48.430 --> 00:13:53.346
Again, this falls under things that you
might have thought to do in JavaScript or

184
00:13:53.346 --> 00:13:58.189
worse, have two of the same elements and
only show one based on the viewport, so

185
00:13:58.189 --> 00:13:59.220
on and so forth.

186
00:14:00.340 --> 00:14:06.340
There are times where maybe
what I want is in this view,

187
00:14:06.340 --> 00:14:10.980
I want 2, 3, 4 and 7 over here.

188
00:14:10.980 --> 00:14:17.060
In fact, I'm gonna get rid of 5, 6 and 7
just to make things simpler for a moment.

189
00:14:17.060 --> 00:14:21.993
Maybe I want this layout,
but maybe when I am on

190
00:14:21.993 --> 00:14:27.570
mobile I actually want 2,
3 and 4 on top, right?

191
00:14:29.010 --> 00:14:32.675
And so, right, I want them above
the other one in this case and

192
00:14:32.675 --> 00:14:37.730
we'll make one bigger cuz it feels
like some kinda hero at this point.

193
00:14:37.730 --> 00:14:43.130
We'll say it's got a min height of,
I don't know, 96, right?

194
00:14:43.130 --> 00:14:46.581
So I want these three above it, but

195
00:14:46.581 --> 00:14:51.820
I do want them to the side
when we get larger, right?

196
00:14:53.020 --> 00:14:57.022
And what I don't wanna have to do is
actually start moving elements around in

197
00:14:57.022 --> 00:14:58.220
JavaScript, right?

198
00:15:00.060 --> 00:15:05.780
And this will work in both
Flexbox as well as CSS grid is.

199
00:15:05.780 --> 00:15:10.611
You can have basically CSS change the
order in which they appear in either one

200
00:15:10.611 --> 00:15:12.230
of these, right?

201
00:15:12.230 --> 00:15:17.308
And so if I say, for instance,
let's just do this to one of them.

202
00:15:17.308 --> 00:15:20.347
If I say that is order-1, right?

203
00:15:21.582 --> 00:15:26.104
&gt;&gt; Steve Kinney: You can see that
now it's towards the end because

204
00:15:26.104 --> 00:15:30.390
the rest by default are all order-0.

205
00:15:30.390 --> 00:15:33.750
The highest one goes to the end, right?

206
00:15:33.750 --> 00:15:39.344
And so what I could do is actually say,
in this case,

207
00:15:39.344 --> 00:15:44.000
the first big div is gonna be order-1.

208
00:15:44.000 --> 00:15:46.520
And then at medium,
go back to being order-0.

209
00:15:46.520 --> 00:15:48.398
Go back to where you belonged, right?

210
00:15:48.398 --> 00:15:50.800
I can go in here.

211
00:15:50.800 --> 00:15:54.320
&gt;&gt; Male Student 1: Wouldn't it
be order-0 and then order-4?

212
00:15:54.320 --> 00:15:57.242
&gt;&gt; Steve Kinney: Yeah,
all right, it's just more or

213
00:15:57.242 --> 00:15:59.892
less than all of the rest of them.

214
00:15:59.892 --> 00:16:00.826
&gt;&gt; Male Student 1: Yeah.
&gt;&gt; Steve Kinney: Right.

215
00:16:00.826 --> 00:16:01.551
&gt;&gt; Male Student 1: Yeah, yeah.

216
00:16:01.551 --> 00:16:03.451
&gt;&gt; Steve Kinney: Yeah, so
in this case, I think can I even do.

217
00:16:07.060 --> 00:16:10.660
&gt;&gt; Male Student 1: It would be
md order-1 on that particular-

218
00:16:10.660 --> 00:16:11.374
&gt;&gt; Steve Kinney: Or I might do it on

219
00:16:11.374 --> 00:16:13.860
the rest of them or
something like that too, right?

220
00:16:13.860 --> 00:16:15.493
&gt;&gt; Male Student 1: Yeah,
if you did it just on the first one,

221
00:16:15.493 --> 00:16:16.815
then it would jump to the bottom.

222
00:16:16.815 --> 00:16:17.456
&gt;&gt; Steve Kinney: Yeah.

223
00:16:19.122 --> 00:16:23.349
&gt;&gt; Steve Kinney: Where did
I write all this stuff?

224
00:16:23.349 --> 00:16:26.367
Go away.

225
00:16:26.367 --> 00:16:30.360
Yeah, so
order-1 drops it to the bottom, right?

226
00:16:30.360 --> 00:16:31.524
Do I still have that on these?

227
00:16:31.524 --> 00:16:33.532
No, right.

228
00:16:33.532 --> 00:16:35.300
What do we do?

229
00:16:35.300 --> 00:16:39.207
&gt;&gt; Male Student 1: I think you wanna do
on that particular one, md:order-1 and

230
00:16:39.207 --> 00:16:43.992
then when it gets to that size,
then it's gonna be on the bottom, right?

231
00:16:43.992 --> 00:16:46.154
&gt;&gt; Steve Kinney: We got two of
the same class as one of our problems.

232
00:16:46.154 --> 00:16:48.852
Let's get rid of-
&gt;&gt; Male Student 1: Yeah.

233
00:16:48.852 --> 00:16:50.740
&gt;&gt; Steve Kinney: It's
just slightly off screen.

234
00:16:50.740 --> 00:16:56.623
Right, so now at md as large as here,
it's on top and then it moves, right?

235
00:16:56.623 --> 00:17:02.169
We kinda even that point, if we
wanted this at the bottom originally,

236
00:17:02.169 --> 00:17:08.190
what we actually want is order-1 and
then at medium go put it back, right?

237
00:17:08.190 --> 00:17:11.001
And we could argue is this mark.

238
00:17:11.001 --> 00:17:14.361
But now we do get the effect
we want at this case, right?

239
00:17:14.361 --> 00:17:18.066
And so you can move the ordering around
based on different viewports and

240
00:17:18.066 --> 00:17:19.806
stuff along those lines as well.

