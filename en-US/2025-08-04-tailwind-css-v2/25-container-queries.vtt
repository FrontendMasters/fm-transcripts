WEBVTT

1
00:00:00.320 --> 00:00:02.480
&gt;&gt; Steve Kinney: There are still some
problems that we can solve here.

2
00:00:04.400 --> 00:00:08.699
One of the things that is interesting is

3
00:00:08.699 --> 00:00:13.920
responsive design thinks
about the viewport.

4
00:00:15.120 --> 00:00:20.093
So if we did something like this,
we put this grid in

5
00:00:20.093 --> 00:00:24.960
something that's got a class
with a max width of.

6
00:00:29.050 --> 00:00:30.658
You can.
Let's see, there's like.

7
00:00:30.658 --> 00:00:31.158
Yes.

8
00:00:35.770 --> 00:00:38.050
Yeah, let's give it a max-w of 3xl, right?

9
00:00:38.050 --> 00:00:40.410
So it'll never actually hit
that large break point.

10
00:00:43.850 --> 00:00:46.192
And it will, right?

11
00:00:46.192 --> 00:00:47.580
But you can see that spiritually it has.

12
00:00:47.580 --> 00:00:48.850
We'll even make it smaller than that.

13
00:00:48.850 --> 00:00:49.370
We'll make it.

14
00:00:51.300 --> 00:00:51.940
Which is.

15
00:00:51.940 --> 00:00:57.882
As the viewport grows,
it does switch the responsive design mode,

16
00:00:57.882 --> 00:01:01.780
but the container didn't grow, right?

17
00:01:01.780 --> 00:01:03.300
And so that looks gross.

18
00:01:03.300 --> 00:01:05.300
And for a blog layout, fine, whatever.

19
00:01:05.300 --> 00:01:06.020
Who cares?

20
00:01:06.020 --> 00:01:10.020
But there's lots of times where it's like,
you might.

21
00:01:10.020 --> 00:01:13.666
Yeah, when we only have one thing,
that seems fine.

22
00:01:13.666 --> 00:01:17.050
But what happens if we
have a set of cards,

23
00:01:17.050 --> 00:01:21.920
right, that we will maybe
wanna put them in a sidebar?

24
00:01:21.920 --> 00:01:23.240
Maybe we want to put them in the middle.

25
00:01:23.240 --> 00:01:27.440
Like we have this reusable element that
we want to happen all the time, right?

26
00:01:27.440 --> 00:01:31.340
And I don't want to have to sit there and
make 10 versions of this component to have

27
00:01:31.340 --> 00:01:34.560
it laid out different ways or
have to tweak the classes every time.

28
00:01:34.560 --> 00:01:38.121
I just want to say, like, yo, if you're
the only thing on the page, sure,

29
00:01:38.121 --> 00:01:38.800
sure, sure.

30
00:01:38.800 --> 00:01:40.400
Do the responsive design stuff.

31
00:01:40.400 --> 00:01:42.380
If I throw those cards in a sidebar,

32
00:01:42.380 --> 00:01:46.010
don't start to responsive design
yourself based on the window.

33
00:01:46.010 --> 00:01:53.450
I want you to care about how big
the parent you're in is and react to that.

34
00:01:54.650 --> 00:01:59.050
This is something that you couldn't
do really for the longest time.

35
00:01:59.050 --> 00:02:02.090
Then CSS came to the rescue.

36
00:02:04.010 --> 00:02:08.722
We got this thing called
container queries.

37
00:02:08.722 --> 00:02:12.425
And so, a lot of these responsive design
breakpoints are based on the viewport,

38
00:02:12.425 --> 00:02:14.580
as we saw over and over and over again.

39
00:02:14.580 --> 00:02:20.660
Container queries are a way to say, in
the same way you used group before, right?

40
00:02:20.660 --> 00:02:24.332
Where you say, this parent we care about,

41
00:02:24.332 --> 00:02:30.260
you can basically say that any given
element is a container, right?

42
00:02:32.900 --> 00:02:37.810
If I start with this and
I just say container, nothing happens.

43
00:02:37.810 --> 00:02:39.170
It's the same group.

44
00:02:41.330 --> 00:02:42.530
Nothing happens either.

45
00:02:45.250 --> 00:02:47.890
Because you said, yeah, cool,
it's a group, it's a container.

46
00:02:47.890 --> 00:02:48.747
Neat.

47
00:02:48.747 --> 00:02:53.941
Then Tailwind gives us this syntax now,
where this lg,

48
00:02:53.941 --> 00:02:58.370
this md, all of this stuff is for
the viewport.

49
00:02:58.370 --> 00:03:02.648
But if we give it the @,
then it's for the container and

50
00:03:02.648 --> 00:03:07.120
you can kind of see ntainer,
because that's the syntax.

51
00:03:07.120 --> 00:03:12.850
It's like a media query,
hence the Sign also the other

52
00:03:12.850 --> 00:03:20.217
one was taken is greater than 32 rems
then this is what I want it to be.

53
00:03:20.217 --> 00:03:22.640
So arguably I wanted that.

54
00:03:23.840 --> 00:03:26.240
Let's get rid of that
responsive design one.

55
00:03:27.726 --> 00:03:28.750
That's the rows.

56
00:03:30.590 --> 00:03:33.470
We'll put an in front of both of them.

57
00:03:33.470 --> 00:03:37.230
Right now it doesn't care
necessarily about the window.

58
00:03:38.430 --> 00:03:40.830
It cares about the size of its container.

59
00:03:43.630 --> 00:03:44.750
Hold on, do I have all.

60
00:03:46.110 --> 00:03:47.670
I have the call spans happening too.

61
00:03:47.670 --> 00:03:56.358
So we got, Right,

62
00:03:56.358 --> 00:04:01.790
I still have that screen kicking in but
as you can see because the.

63
00:04:01.790 --> 00:04:03.800
Let's just get rid of that,
cuz that wasn't helping us.

64
00:04:03.800 --> 00:04:07.720
You know what,
let's follow it all the way through.

65
00:04:07.720 --> 00:04:14.680
Now since that container didn't hit
the threshold, these don't switch.

66
00:04:14.680 --> 00:04:17.068
So now you could have
like cards that like hey,

67
00:04:17.068 --> 00:04:20.959
if the container you're in is big enough
to do a four by four grid, great.

68
00:04:20.959 --> 00:04:22.425
If the container you're in,

69
00:04:22.425 --> 00:04:26.479
if the parent element you're in is only
big enough to have a single column, fine.

70
00:04:27.519 --> 00:04:30.719
It's no longer based on the actual
viewport or you're doing a bunch of.

71
00:04:30.719 --> 00:04:37.279
I'm gonna use React's context API,
then pass on window resize.

72
00:04:37.279 --> 00:04:39.439
Now all of a sudden you don't
think about that anymore.

73
00:04:39.439 --> 00:04:42.639
If I all of a sudden
took out this max width.

74
00:04:42.639 --> 00:04:47.930
Actually let's leave this full size
going to take out this max width here.

75
00:04:55.130 --> 00:04:56.730
Let's see container.

76
00:04:59.290 --> 00:05:01.210
So we never hit it high enough.

77
00:05:05.930 --> 00:05:07.370
Let's change these for a second.

78
00:05:15.680 --> 00:05:20.567
What happened Container with
quick mistake that I made

79
00:05:20.567 --> 00:05:25.238
was like you do an container
not just container which

80
00:05:25.238 --> 00:05:30.228
makes sense with the there
otherwise there was a class in

81
00:05:30.228 --> 00:05:35.113
tailwind called just regular
container which was to do

82
00:05:35.113 --> 00:05:39.490
at every viewpoint a max
width that still works.

83
00:05:39.490 --> 00:05:42.490
There's one if you want sensible.

84
00:05:42.490 --> 00:05:44.970
If you don't want a page to
always take up the full screen.

85
00:05:44.970 --> 00:05:49.197
There is this just regular container that
is built into tailwind that is a legit

86
00:05:49.197 --> 00:05:50.570
tailwind class.

87
00:05:50.570 --> 00:05:54.673
It pre existed container queries which
is a CSS feature which has the name

88
00:05:54.673 --> 00:05:56.010
container in it.

89
00:05:56.010 --> 00:06:02.649
So made a quick boo boo @container, gets
you into the container queries where now,

90
00:06:02.649 --> 00:06:07.890
again, it can take up the full width,
great, it's here for it.

91
00:06:07.890 --> 00:06:11.218
And if you give it a max-width,

92
00:06:11.218 --> 00:06:15.903
let's make these as I
played around before,

93
00:06:15.903 --> 00:06:20.608
let's make these a little
bit bigger again.

94
00:06:31.938 --> 00:06:35.660
32rem, that gets to.

95
00:06:35.660 --> 00:06:39.199
So the one thing to keep in
mind is all like they are and

96
00:06:39.199 --> 00:06:41.540
this drives me nuts as you can see.

97
00:06:41.540 --> 00:06:42.860
It's driving me nuts right now.

98
00:06:42.860 --> 00:06:46.300
Which Is you're like,
why isn't it working?

99
00:06:46.300 --> 00:06:50.652
The breakpoints for containers are all
less than they are for the full viewport,

100
00:06:50.652 --> 00:06:54.236
which makes sense if you think
about it for more than 30 seconds,

101
00:06:54.236 --> 00:06:59.020
which is obviously any given container is
gonna be smaller than the entire viewport.

102
00:06:59.020 --> 00:07:03.492
So if you look this max width X and this
is where the hovering becomes important,

103
00:07:03.492 --> 00:07:05.000
it's 36 rem.

104
00:07:05.000 --> 00:07:08.678
This breakpoint for LG, my good Lord.

105
00:07:08.678 --> 00:07:09.920
Is 32.

106
00:07:09.920 --> 00:07:13.800
So it is actually working as expected,
but not what I wanted to.

107
00:07:13.800 --> 00:07:19.141
So we can just kind of, let's just make
this max width MD to make my point,

108
00:07:19.141 --> 00:07:22.920
which at this point they never change,
right?

109
00:07:22.920 --> 00:07:26.471
But if I get rid of this or
make this larger,

110
00:07:26.471 --> 00:07:31.900
you can see that if the container
gets to the point where they fit,

111
00:07:31.900 --> 00:07:35.470
they will change and change their layout.

112
00:07:35.470 --> 00:07:39.470
So now I could throw this same
layout into a very small sidebar.

113
00:07:39.470 --> 00:07:40.590
They're gonna be stacked.

114
00:07:40.590 --> 00:07:42.470
I can throw it into
the main body of the page.

115
00:07:42.470 --> 00:07:43.990
They're going to have this view here.

116
00:07:43.990 --> 00:07:45.950
I could throw it various places.

117
00:07:45.950 --> 00:07:50.440
They will react not the overall size of
the screen, but to the container that they

118
00:07:50.440 --> 00:07:55.050
are in, which gives you a whole bunch
more flexibility than ever before.

119
00:07:55.050 --> 00:07:59.050
And again,
this is a relatively new feature.

120
00:07:59.050 --> 00:07:59.770
Let's see.

121
00:07:59.770 --> 00:08:03.800
And so that's something to keep in mind
that if you are still supporting older

122
00:08:03.800 --> 00:08:05.930
browsers, something to think about.

123
00:08:05.930 --> 00:08:11.231
That said, if you use something
like post css, you can a lot

124
00:08:11.231 --> 00:08:18.010
of times retrofit this back on with
a polyfill, but just out of the box.

125
00:08:18.010 --> 00:08:25.697
But we're talking 2022 forward, right?

126
00:08:25.697 --> 00:08:27.740
Again, IE11, you're out of luck.

127
00:08:27.740 --> 00:08:33.580
But like most browsers,
let's say from like 2023 onwards, right?

128
00:08:33.580 --> 00:08:36.299
So like I feel pretty safe about that.

129
00:08:36.299 --> 00:08:38.820
And the nice part is
your site doesn't break.

130
00:08:40.020 --> 00:08:46.260
You would just get that
earliest breakpoint.

131
00:08:47.340 --> 00:08:52.677
So effectively it is a progressive
enhancement in a lot of ways where

132
00:08:52.677 --> 00:08:58.201
you can solve for that other version,
you can run it through post css,

133
00:08:58.201 --> 00:09:02.940
you can do any of those things and
all of that just works.

134
00:09:02.940 --> 00:09:07.728
I'm going to take one moment to just re
explain the little gotcha that I stumbled

135
00:09:07.728 --> 00:09:08.729
across before,

136
00:09:08.729 --> 00:09:13.800
which is I had container and I hovered
over it knowing something was off.

137
00:09:13.800 --> 00:09:17.160
But you can see it is some tailwind
magic and there's some stuff in there.

138
00:09:17.160 --> 00:09:20.360
And then everything started working
again when I put the in front of it.

139
00:09:20.360 --> 00:09:24.341
There are some reasons container queries,

140
00:09:24.341 --> 00:09:28.920
a CSS thing,
that's when we had the container.

141
00:09:28.920 --> 00:09:34.840
But prior to that there was a tailwind
nicety of A class called container.

142
00:09:34.840 --> 00:09:37.756
And what container is useful for
is, a lot of times,

143
00:09:37.756 --> 00:09:40.606
especially if it's a blog or
some kind of content,

144
00:09:40.606 --> 00:09:44.720
you don't want the text to take up
the full width of the page, right?

145
00:09:44.720 --> 00:09:47.840
You want it to kind of stay to
the point where it's readable.

146
00:09:47.840 --> 00:09:51.600
So this container class was used for
a really long time,

147
00:09:51.600 --> 00:09:56.800
which is by default it's like a responsive
design thing where at the smallest

148
00:09:56.800 --> 00:10:01.760
viewport is 100% and then each time
it applies a different max width so

149
00:10:01.760 --> 00:10:05.293
you always stay in some kind
of readable like sense.

150
00:10:05.293 --> 00:10:09.207
So this is just not container query
@container, and I put it mx-auto so

151
00:10:09.207 --> 00:10:13.568
it just centers in the middle of the page
cuz a lot of times you see those together,

152
00:10:13.568 --> 00:10:15.260
where okay, it's 100%.

153
00:10:15.260 --> 00:10:19.882
You kinda see it break at
different viewports, right,

154
00:10:19.882 --> 00:10:24.220
where each one it kinda
fills a new maximum content.

155
00:10:24.220 --> 00:10:29.020
And eventually if I go all the way
it will never get too wide.

156
00:10:29.020 --> 00:10:31.060
And so that's just the regular container.

157
00:10:31.060 --> 00:10:33.820
It's useful for text content and
stuff like that.

158
00:10:33.820 --> 00:10:36.140
And that is a totally
legit class that works.

159
00:10:36.140 --> 00:10:38.555
And if you are talking
while you are typing,

160
00:10:38.555 --> 00:10:43.256
you will accidentally forget that this one
means the container queries which are real

161
00:10:43.256 --> 00:10:47.629
CSS feature which unfortunately have
a name that conflicts with an old tailwind

162
00:10:47.629 --> 00:10:52.760
nicety that they also can't get rid of
because then it will break everything.

163
00:10:52.760 --> 00:10:57.880
So the web continues to be the web,
everything is good, life goes on.

164
00:10:57.880 --> 00:11:03.876
But yeah, for container queries, if you're
using in the breakpoint you should use

165
00:11:03.876 --> 00:11:09.620
to define the container because again,
like what's really cool about this is,

166
00:11:09.620 --> 00:11:16.100
you know, I could have something where
like it only matters what the parent is.

167
00:11:16.100 --> 00:11:17.060
Big wide section.

168
00:11:17.060 --> 00:11:18.660
Yeah, make it a 4 by 4 grid.

169
00:11:18.660 --> 00:11:22.540
Throw that same component
in a sidebar 1 column.

170
00:11:22.540 --> 00:11:23.620
I never think about it again.

171
00:11:23.620 --> 00:11:26.220
I never write JavaScript,
I'm never sitting there like handwriting.

172
00:11:26.220 --> 00:11:29.460
The classes,
things just work as they move around.

173
00:11:29.460 --> 00:11:30.500
Life is good.

