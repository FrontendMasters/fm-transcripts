WEBVTT

1
00:00:00.160 --> 00:00:02.880
&gt;&gt; Steve Kinney: There's stuff,
there's flexbox tailwind specific.

2
00:00:02.880 --> 00:00:04.960
There is stuff just about flexbox.

3
00:00:04.960 --> 00:00:09.706
I think both of those are kind
of fair game at this point.

4
00:00:09.706 --> 00:00:14.492
But we'll talk about flexbox and grid,
and again, I will kinda cover in enough

5
00:00:14.492 --> 00:00:18.960
that if you're like, I kinda only
half understand flexbox, right?

6
00:00:18.960 --> 00:00:23.927
We will also kind of get into
some of those details whilst

7
00:00:23.927 --> 00:00:29.360
doing it with tailwind stuff
as we kind of go along.

8
00:00:29.360 --> 00:00:30.960
So I have that card list.

9
00:00:30.960 --> 00:00:32.480
I'm feeling like we should
do it with the card list.

10
00:00:32.480 --> 00:00:35.040
I also have like a little grid
playground that we can play in.

11
00:00:35.040 --> 00:00:37.200
But I'm feeling good about the card list.

12
00:00:37.200 --> 00:00:39.920
He says,
not remembering what he did to it last.

13
00:00:39.920 --> 00:00:47.360
Okay, so this is my card list that we
saw before we played with some spacing.

14
00:00:47.360 --> 00:00:54.833
We took the spacing off,
but here it is, it's back.

15
00:00:54.833 --> 00:01:00.010
So working with flexbox becomes
very easy with Tailwind.

16
00:01:02.022 --> 00:01:04.810
This one had divide and
we didn't end up using that.

17
00:01:06.410 --> 00:01:11.130
So before we had that space Y4
that we did that added some space.

18
00:01:11.130 --> 00:01:14.389
Flexbox gives you a bunch of
other options for doing this.

19
00:01:14.389 --> 00:01:19.610
And again it becomes very, very kinda
nice and simple within Tailwind.

20
00:01:19.610 --> 00:01:23.990
And you saw me use a little bit of it,
but with the input field earlier and

21
00:01:23.990 --> 00:01:26.890
occasionally sprinkled throughout.

22
00:01:26.890 --> 00:01:31.130
The easiest way to make something
a flexbox is to give it the class of flex.

23
00:01:33.610 --> 00:01:39.257
Now in this case you can see that that
is very different than I had before,

24
00:01:39.257 --> 00:01:42.324
but possibly something that I wanted.

25
00:01:42.324 --> 00:01:43.690
Obviously this is a pattern.

26
00:01:43.690 --> 00:01:46.770
A lot of times you will want to
put spacing in between them.

27
00:01:46.770 --> 00:01:49.460
This will work for both Grid and flexbox.

28
00:01:49.460 --> 00:01:54.820
You can say, okay, gap four and this will
put a four pixel gap in here as well.

29
00:01:54.820 --> 00:01:56.580
I'll make this bigger just for a second.

30
00:01:56.580 --> 00:02:01.220
So you can kind of see that they will

31
00:02:01.220 --> 00:02:06.740
kind of like get laid out like so cool.

32
00:02:06.740 --> 00:02:11.462
And if I want to do,

33
00:02:11.462 --> 00:02:17.072
I can do flex reverse,

34
00:02:17.072 --> 00:02:23.870
flex flex row reverse.

35
00:02:23.870 --> 00:02:28.861
And now they're in the other order
other than things that I no longer do

36
00:02:28.861 --> 00:02:33.345
because I have has and
group has how often there's sometimes in

37
00:02:33.345 --> 00:02:36.910
responsive design you need
to do stuff like that.

38
00:02:39.230 --> 00:02:40.669
So flex gap 4.

39
00:02:40.669 --> 00:02:47.701
The other thing you do is flex column,
Right, and they'll go in a column.

40
00:02:47.701 --> 00:02:52.084
And this is a place where a lot of
times you'll see something like

41
00:02:52.084 --> 00:02:55.181
responsive design for
a lot of these things.

42
00:02:55.181 --> 00:03:01.165
Which is this is a good layout if
you're either A incredibly zoomed in,

43
00:03:01.165 --> 00:03:03.770
or B on a mobile phone, right?

44
00:03:06.250 --> 00:03:10.658
But ideally this not so good.

45
00:03:10.658 --> 00:03:11.850
I mean it depends on what you're doing.

46
00:03:11.850 --> 00:03:14.610
But for our purposes, we can agree.

47
00:03:14.610 --> 00:03:19.147
Mike's face agrees with me that
this looks a little ridiculous.

48
00:03:19.147 --> 00:03:21.090
So we can have both.

49
00:03:21.090 --> 00:03:25.438
The interesting thing you can do is there
doesn't need to be an entire section where

50
00:03:25.438 --> 00:03:27.250
we talk about responsive design.

51
00:03:27.250 --> 00:03:30.690
We're just going to sprinkle
it in with flexbox and Grid.

52
00:03:30.690 --> 00:03:33.430
Because doing responsive
design in Tailwind,

53
00:03:33.430 --> 00:03:35.870
arguably every time I get a little.

54
00:03:35.870 --> 00:03:38.398
Because, I don't know,
maybe you're all better than me,

55
00:03:38.398 --> 00:03:41.817
but every time I start a new project, I'm
like, the inner mark is in my ear going,

56
00:03:41.817 --> 00:03:44.270
I'm just going to do vanilla
JavaScript and vanilla CSS.

57
00:03:44.270 --> 00:03:47.670
And then I realize I don't have time for
that, really.

58
00:03:47.670 --> 00:03:52.110
What keeps me coming back to Tailwind is
some of the responsive design pieces.

59
00:03:52.110 --> 00:03:56.077
So here we can say flex and
Flex column, But what if we wanted to,

60
00:03:56.077 --> 00:03:59.390
at a certain breakpoint,
have it switch to Flex row?

61
00:04:01.150 --> 00:04:06.155
All we have to do is say medium
at the medium breakpoint or

62
00:04:06.155 --> 00:04:12.240
small or whatever, and we can talk
about what these are in a second.

63
00:04:12.240 --> 00:04:17.281
But you can kind of see that this
actually will create a class that has

64
00:04:17.281 --> 00:04:22.587
a media query that says if the width
is greater than or equal to 48 rem or

65
00:04:22.587 --> 00:04:27.917
768 pixels for those keeping home,
then add the property flex row.

66
00:04:27.917 --> 00:04:32.455
And all you need to do now,
is that you just get

67
00:04:32.455 --> 00:04:37.473
responsive design with
an extra three characters

68
00:04:37.473 --> 00:04:42.741
plus the class name you
want to have happen, right?

69
00:04:42.741 --> 00:04:45.710
And it will break at that break point.

70
00:04:45.710 --> 00:04:49.310
These breakpoints are all totally
customizable in that theme.

71
00:04:50.510 --> 00:04:55.310
If you wanted to have happen at small,
you can do that as well.

72
00:04:58.490 --> 00:05:02.778
You can even combine to say, hey,
start as a flex column, then go to a grid,

73
00:05:02.778 --> 00:05:03.850
then do a flex row.

74
00:05:03.850 --> 00:05:05.370
Anything you want you can do as well.

75
00:05:06.970 --> 00:05:11.210
But all of these, you get those
breakpoints for free at any given point.

76
00:05:13.290 --> 00:05:14.890
And they kind of work out of the box.

77
00:05:14.890 --> 00:05:20.678
There are a few other
things that we might want

78
00:05:20.678 --> 00:05:26.476
to do in this case that
you need fairly often.

79
00:05:26.476 --> 00:05:29.871
One is just kind of the kind of
alignment and stuff like this.

80
00:05:29.871 --> 00:05:34.510
These are all roughly the same height,
and that's great.

81
00:05:34.510 --> 00:05:41.574
But there are other cases where like,
things can get like a little bit trickier.

82
00:05:41.574 --> 00:05:44.679
So if you have two things
that are different heights,

83
00:05:44.679 --> 00:05:46.270
they will all go to the top.

84
00:05:48.760 --> 00:05:51.480
Just going to put it in this file
because I'm very lazy right now.

85
00:05:53.160 --> 00:05:53.720
Div.

86
00:05:53.720 --> 00:05:59.000
And we'll say input type checkbox.

87
00:06:07.480 --> 00:06:10.280
We will put that in the same
one as I don't know button.

88
00:06:14.290 --> 00:06:18.349
Do a big fancy primary Button,

89
00:06:18.349 --> 00:06:24.742
which I think still says button, whatever.

90
00:06:24.742 --> 00:06:26.610
It doesn't take children at this point.

91
00:06:26.610 --> 00:06:27.330
That's fine.

92
00:06:31.810 --> 00:06:34.774
Now, as you can see,
they kind of have a nice.

93
00:06:34.774 --> 00:06:38.834
This is what we talked about before
with that space-x and space-y,

94
00:06:38.834 --> 00:06:41.011
which is they get laid out like this.

95
00:06:41.011 --> 00:06:44.688
But as soon as I make it a flex,
they all become flex items and

96
00:06:44.688 --> 00:06:47.980
they follow the flex box
model at this point.

97
00:06:47.980 --> 00:06:52.352
So if I say that, we'll say gap 2.

98
00:06:52.352 --> 00:06:53.904
This one was fine, actually.

99
00:07:04.175 --> 00:07:12.684
We'll say

100
00:07:12.684 --> 00:07:19.302
H2 like

101
00:07:19.302 --> 00:07:24.976
cool.

102
00:07:24.976 --> 00:07:29.211
Let's say hypothetically that we
wanted this to be centered, right?

103
00:07:29.211 --> 00:07:30.969
We'll see this in another
example in a second.

104
00:07:30.969 --> 00:07:32.289
You can just do item center.

105
00:07:38.346 --> 00:07:41.870
And now they're all kind of
centered the way it was before.

106
00:07:41.870 --> 00:07:44.630
And you can even do justify
center if you want to do that.

107
00:07:44.630 --> 00:07:46.750
Like the old joke of how do you
vertically center something?

108
00:07:48.990 --> 00:07:51.310
You can both horizontally and
vertically center it.

109
00:07:53.630 --> 00:07:55.950
We'll give it a background so
I can show you real quick.

110
00:08:01.960 --> 00:08:04.680
So you can use Flexbox 2 very quickly.

111
00:08:05.880 --> 00:08:07.960
Justify is justify content.

112
00:08:07.960 --> 00:08:12.136
The one thing that took me forever to kind
of memorize and get through my thick skull

113
00:08:12.136 --> 00:08:15.101
was that they do use these shorthands,
which are maybe not

114
00:08:15.101 --> 00:08:19.400
the shorthands that I would have picked,
but because they are utility classes.

115
00:08:19.400 --> 00:08:22.748
Align was used, I think,
somewhere else, which is justify,

116
00:08:22.748 --> 00:08:25.620
center, justify, start, justify, end.

117
00:08:25.620 --> 00:08:27.060
That makes sense.

118
00:08:27.060 --> 00:08:29.700
But items is align items.

119
00:08:29.700 --> 00:08:34.621
They chose the other word
that I would have chosen,

120
00:08:34.621 --> 00:08:39.549
but luckily the hovering
over is pretty powerful.

121
00:08:39.549 --> 00:08:42.020
We'll play with this a little more
when we look at the grid too.

122
00:08:43.140 --> 00:08:47.661
But arguably for
most of the time, the ones that I

123
00:08:47.661 --> 00:08:52.970
typically want to do is center stuff,
so on and so forth.

124
00:08:52.970 --> 00:08:56.149
You can do put everything towards the end,
put everything towards the top,

125
00:08:56.149 --> 00:08:57.050
towards the bottom.

126
00:08:57.050 --> 00:09:01.610
Usually getting stuff centered around that
axis is predominantly what you want to do.

127
00:09:01.610 --> 00:09:04.378
So in this case,
if we took off the item center,

128
00:09:04.378 --> 00:09:07.210
you can see that they'll jump to the top.

129
00:09:07.210 --> 00:09:09.882
If you took out the justify center,

130
00:09:09.882 --> 00:09:14.490
you can see that they will
jump to the beginning, right.

131
00:09:14.490 --> 00:09:19.780
If I did justify end,
they jump to the end.

132
00:09:19.780 --> 00:09:23.651
What you think happens
happens in this case.

133
00:09:23.651 --> 00:09:30.820
But yeah, there isn't necessarily a whole
lot of extra ceremony in this, right?

134
00:09:30.820 --> 00:09:33.556
You can kind of very quickly
add a few utility classes,

135
00:09:33.556 --> 00:09:36.820
which again is where a lot of
the kind of power comes from.

136
00:09:36.820 --> 00:09:39.477
Right before you would have to jump
back in, set up all the properties,

137
00:09:39.477 --> 00:09:41.660
probably set up three or
four different properties here.

138
00:09:41.660 --> 00:09:46.652
You can kind of like inline and also like
when you have something like react or

139
00:09:46.652 --> 00:09:49.320
svelte or angular or what have you.

140
00:09:49.320 --> 00:09:54.152
The ability to just apply these utility
classes very quickly based on the state in

141
00:09:54.152 --> 00:09:58.697
the same file versus whipping up a new
thing or trying to use inline styles and

142
00:09:58.697 --> 00:10:02.840
stuff like that becomes incredibly
quick and incredibly powerful.

