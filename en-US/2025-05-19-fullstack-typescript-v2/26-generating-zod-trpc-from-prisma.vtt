WEBVTT

1
00:00:00.000 --> 00:00:04.347
&gt;&gt; Steve Kinney: The interesting part,
though, is we talked about,

2
00:00:04.347 --> 00:00:10.156
the cool thing about TRPC,
it's effectively like having functions.

3
00:00:10.156 --> 00:00:14.968
And the other cool thing that we saw is
that Prisma has a lot of functions, right?

4
00:00:14.968 --> 00:00:19.637
So now what I could do is kind of like
begin to iterate over those methods,

5
00:00:19.637 --> 00:00:20.184
right?

6
00:00:20.184 --> 00:00:23.596
And exposes them all to the client, right?

7
00:00:23.596 --> 00:00:25.927
Or a subset, or many of them, right?

8
00:00:25.927 --> 00:00:27.194
Cuz there was create, many, right?

9
00:00:27.194 --> 00:00:30.381
There was a whole bunch of these.

10
00:00:30.381 --> 00:00:33.409
And I'm gonna get all of
the inner workings with all

11
00:00:33.409 --> 00:00:34.966
the type safety for free.

12
00:00:34.966 --> 00:00:39.904
Those I might have to figure out
an entire, REST full API experience.

13
00:00:39.904 --> 00:00:42.191
If I was doing that with
a regular REST client, but

14
00:00:42.191 --> 00:00:43.944
here I can just expose those methods.

15
00:00:43.944 --> 00:00:46.509
They will have the same things
that Prisma has on the server.

16
00:00:46.509 --> 00:00:49.508
The client can almost act like
it's calling things on the server.

17
00:00:49.508 --> 00:00:54.008
The type safety is then carried from
the database through the web server

18
00:00:54.008 --> 00:00:57.909
all the way to the client and
back the other way again, right?

19
00:00:57.909 --> 00:01:00.800
And so again,
great if you can get away with it.

20
00:01:00.800 --> 00:01:03.318
If you can't,
we have those lower level options, and

21
00:01:03.318 --> 00:01:06.615
you can kind of choose your own
involvement in Project Mayhem, right?

22
00:01:06.615 --> 00:01:10.529
And figure out what area
your code base works.

23
00:01:10.529 --> 00:01:15.220
So for instance,
I can do something like this,

24
00:01:15.220 --> 00:01:21.085
where we piss in Zod generator
to generate me the Zod types,

25
00:01:21.085 --> 00:01:28.500
cuz I'm getting a lot of the type safety
from gRPC or TRPC for free, right?

26
00:01:28.500 --> 00:01:34.216
But if I wanted the Zod types as well, and
with this little plug-in, I was so close.

27
00:01:34.216 --> 00:01:37.067
It was like I've never hit that button
before, and I was like, here it is.

28
00:01:37.067 --> 00:01:42.612
MPX, I think it went to
the top of the workspace file.

29
00:01:46.054 --> 00:01:51.125
&gt;&gt; Steve Kinney: Cool, and
now if you look in this generated folder,

30
00:01:51.125 --> 00:01:57.118
it is a lot, a much more robust
set of Zod schemas generated for

31
00:01:57.118 --> 00:02:02.665
me directly representing
the database itself, right?

32
00:02:02.665 --> 00:02:07.194
And so taking from that initial schema,
dot Prisma, pretty close,

33
00:02:07.194 --> 00:02:12.502
obviously we've stuck to a theme this
entire time, generating all the types and

34
00:02:12.502 --> 00:02:16.191
all the tests from the database
layer forward, right?

35
00:02:16.191 --> 00:02:21.128
And then, theoretically, I could import
these into that TRPC-like set of methods

36
00:02:21.128 --> 00:02:25.157
as the inputs, and now I know that
they are legitimately the ones that

37
00:02:25.157 --> 00:02:29.280
match the database that the front-end
React app is calling, right?

38
00:02:29.280 --> 00:02:34.766
Again, I get that all the way
from soups to nuts, like finish

39
00:02:34.766 --> 00:02:41.670
all the way through some other fun things
that we can do, check this one out.

40
00:02:41.670 --> 00:02:43.166
We all go in here.

41
00:02:43.166 --> 00:02:50.210
There is also a generator for tPRC.

42
00:02:50.210 --> 00:02:53.938
Why did I watch him set up a tPRC client

43
00:02:53.938 --> 00:02:58.156
if he is just gonna show
me this at the end?

44
00:02:58.156 --> 00:02:59.875
Cuz I am terrible person.

45
00:02:59.875 --> 00:03:02.953
MPX generate,

46
00:03:02.953 --> 00:03:07.931
I think it's just tRPC.

47
00:03:07.931 --> 00:03:14.221
I gotta put Prisma in that one [LAUGH].

48
00:03:14.221 --> 00:03:17.167
Cool.
And that in the generated stuff,

49
00:03:17.167 --> 00:03:19.048
we now have routers and.

50
00:03:19.048 --> 00:03:21.138
Schemas, and again,

51
00:03:21.138 --> 00:03:27.081
this looks very similar to what
we just did, but I didn't do it.

52
00:03:27.081 --> 00:03:28.899
This is now a task router,

53
00:03:28.899 --> 00:03:34.273
as opposed to one I wrote myself with
basically all of the different methods,

54
00:03:34.273 --> 00:03:38.422
just as we were opining that it
would be cool to have before.

55
00:03:38.422 --> 00:03:41.905
Now, from the client,
if I imported this router,

56
00:03:41.905 --> 00:03:45.874
I would be able to kind of do
all of these different things,

57
00:03:45.874 --> 00:03:50.977
from the browser through the web server
to the database and back out again.

58
00:03:50.977 --> 00:03:55.485
And you can see with the Zod
schemas that it generated in one

59
00:03:55.485 --> 00:04:00.461
complete package of type safety
across every part of the stack.

60
00:04:00.461 --> 00:04:03.927
One last bonus thing,

61
00:04:03.927 --> 00:04:08.670
going back to the open API stuff

62
00:04:08.670 --> 00:04:13.596
that we saw earlier, which is,

63
00:04:13.596 --> 00:04:18.167
you can also, again choose.

64
00:04:18.167 --> 00:04:19.303
Somebody asked before, like.

65
00:04:19.303 --> 00:04:24.518
Okay, with this JSON schema,
would you just expose it, right?

66
00:04:24.518 --> 00:04:27.417
And a lot of cases, like for
our open-source server, we do.

67
00:04:27.417 --> 00:04:28.661
There is an endpoint.

68
00:04:28.661 --> 00:04:30.221
I forget what the name of it is,

69
00:04:30.221 --> 00:04:33.401
cuz it's in my browser history
all the time, where we kind of,

70
00:04:33.401 --> 00:04:37.429
well, just either both expose the actual
schema so you can just get it, right?

71
00:04:37.429 --> 00:04:44.790
But there's also this project called,
I forget the name of Swagger UI,

72
00:04:44.790 --> 00:04:49.028
where you have seen this before, right?

73
00:05:06.351 --> 00:05:11.751
&gt;&gt; Steve Kinney: So what we can do is we
can take our open API schema that we have

74
00:05:11.751 --> 00:05:17.370
before going back to the rest
stuff if we wanna do for a second.

75
00:05:17.370 --> 00:05:22.158
And grab this Swagger UI and this part,
we're also gonna pull in that.

76
00:05:43.203 --> 00:05:47.596
&gt;&gt; Steve Kinney: So this is pulling in
that JSON file that is my OpenAPI schema,

77
00:05:47.596 --> 00:05:52.250
and this is another piece of
middleware that exists for Express.

78
00:05:52.250 --> 00:05:55.284
And then what you can do is to

79
00:06:02.484 --> 00:06:03.093
&gt;&gt; Steve Kinney: Cool,

80
00:06:03.093 --> 00:06:05.731
and then what I should be able to

81
00:06:05.731 --> 00:06:12.785
do
&gt;&gt; Steve Kinney: Is

82
00:06:12.785 --> 00:06:18.416
it takes your open API schema and
gives you a whole postman interface.

83
00:06:18.416 --> 00:06:21.578
You've probably seen this before from
other ways, but if you're wondering how to

84
00:06:21.578 --> 00:06:24.435
generate one yourself, as long as you
have the schema, you can expose it.

85
00:06:24.435 --> 00:06:27.857
You can do stuff like see what
a post request looks like and

86
00:06:27.857 --> 00:06:30.922
execute it and
see what the curl command would be and

87
00:06:30.922 --> 00:06:34.220
what the response is based
on the sample data, right?

88
00:06:34.220 --> 00:06:38.953
So sometimes using some of this tooling,
if you can, obviously, and if,

89
00:06:38.953 --> 00:06:43.388
again, like we saw that perhaps
getting instrumenting everything to

90
00:06:43.388 --> 00:06:46.487
the point where you can
get to an open API scheme.

91
00:06:46.487 --> 00:06:49.541
If you don't have one, you're starting
from scratch, very easy to do.

92
00:06:49.541 --> 00:06:51.281
You can use that schema,
so on and so forth.

93
00:06:51.281 --> 00:06:53.182
But if you are trying to get one,

94
00:06:53.182 --> 00:06:56.298
it's been a wild west of
like rando express routes.

95
00:06:56.298 --> 00:06:59.363
It's gonna take a little bit of time, but

96
00:06:59.363 --> 00:07:02.966
we can argue that it will take a week,
two weeks.

97
00:07:02.966 --> 00:07:04.876
Maybe, is it worth it?

98
00:07:04.876 --> 00:07:05.724
Maybe.

