WEBVTT

1
00:00:00.480 --> 00:00:03.885
&gt;&gt; Steve Kinney: Your job is to
effectively try your best to pattern match

2
00:00:03.885 --> 00:00:04.831
here, right?

3
00:00:04.831 --> 00:00:08.326
Which is, I've got the middleware
that creates a body.

4
00:00:08.326 --> 00:00:12.485
You're gonna try to do one that will do
the same thing for query params and or

5
00:00:12.485 --> 00:00:14.876
path params, if you're feeling up to it.

6
00:00:14.876 --> 00:00:19.079
This is the hardest of the bunch, and
so there will be a little bit of staring

7
00:00:19.079 --> 00:00:23.215
at this type, there will be a little
little like, this is not just copy and

8
00:00:23.215 --> 00:00:25.451
paste what I did and change a few words.

9
00:00:25.451 --> 00:00:28.614
And that's why it's time for
you to get some muscle memory.

10
00:00:28.614 --> 00:00:30.320
So take a look, try it out.

11
00:00:30.320 --> 00:00:32.750
Don't get stressed if you
don't get all the way there.

12
00:00:32.750 --> 00:00:36.148
If you just build the neural pathways of
slamming your head against the wall for

13
00:00:36.148 --> 00:00:37.291
a second, that's fine.

14
00:00:37.291 --> 00:00:41.310
I think that will then make when I show it
to you again, it takes little bit better.

15
00:00:41.310 --> 00:00:44.879
I'm hurting you on purpose,
but it'll be good, I promise.

16
00:00:50.015 --> 00:00:54.819
&gt;&gt; Steve Kinney: So the tricky part here
navigating around this request handler and

17
00:00:54.819 --> 00:00:59.790
like I said before, remembering the order,
which if you pull it in,

18
00:00:59.790 --> 00:01:01.525
there is a cheat sheet.

19
00:01:01.525 --> 00:01:06.115
You've got the path parameters,
the response body,

20
00:01:06.115 --> 00:01:10.220
the request body,
the query, and then locals.

21
00:01:10.220 --> 00:01:13.621
So pulling in the other
ones are not just similar.

22
00:01:13.621 --> 00:01:17.897
We'll do a little bit of good old
fashioned copy and paste energy here.

23
00:01:21.502 --> 00:01:23.301
&gt;&gt; Steve Kinney: And
then kind of play with it.

24
00:01:23.301 --> 00:01:27.522
And then we'll look at a version where
you can combine them all together again.

25
00:01:27.522 --> 00:01:31.830
I am not going to subject
you to watching me do that,

26
00:01:31.830 --> 00:01:37.858
coz I said before as I was going through
it, even I got bored of doing it.

27
00:01:37.858 --> 00:01:39.831
So I won't do that to you.

28
00:01:39.831 --> 00:01:41.178
So we can go ahead and
validate the params.

29
00:01:41.178 --> 00:01:43.363
We know that that's the first one.

30
00:01:43.363 --> 00:01:46.916
So in this case, and
the nice part is, like JavaScript,

31
00:01:46.916 --> 00:01:50.913
you only have to put in enough
arguments to get to where you need so

32
00:01:50.913 --> 00:01:54.116
if it's the first one,
we can just do it like this.

33
00:01:54.116 --> 00:01:58.927
In this case, anything that comes through
should have the params validated.

34
00:01:58.927 --> 00:02:03.847
And so now, again, here this one
is theoretically a string, but

35
00:02:03.847 --> 00:02:07.347
we know that it's really
a number on the task.

36
00:02:07.347 --> 00:02:11.611
So all I have to do is validate params and

37
00:02:11.611 --> 00:02:16.531
say in this case,
do I have one of just the ID?

38
00:02:19.032 --> 00:02:24.933
&gt;&gt; Steve Kinney: We can
even do task schema.

39
00:02:24.933 --> 00:02:27.803
&gt;&gt; Steve Kinney: I don't know
if I made one in this example.

40
00:02:27.803 --> 00:02:30.417
If you don't remember the comma,
then things will break.

41
00:02:30.417 --> 00:02:33.445
But now, for free, is the right type.

42
00:02:35.752 --> 00:02:38.936
&gt;&gt; Steve Kinney: Which, yeah,
string, number, who cared?

43
00:02:38.936 --> 00:02:41.693
Let's say you had a lot
of different parameters,

44
00:02:41.693 --> 00:02:44.975
a lot of times that we don't
just have slash user slash one,

45
00:02:44.975 --> 00:02:49.456
we might have slash user slash one,
slash profile, slash other thing, right?

46
00:02:49.456 --> 00:02:53.929
And so you can kinda get more robust sets
of these things just immediately typed

47
00:02:53.929 --> 00:02:54.891
under the hood.

48
00:02:54.891 --> 00:02:59.803
And again, there was stuff like,
getting the user auth token or whatever,

49
00:02:59.803 --> 00:03:03.283
and like you had a whole
wide range of routes, right?

50
00:03:03.283 --> 00:03:08.196
Now they would all get the type, anything
I kinda derived from that middleware.

51
00:03:08.196 --> 00:03:14.355
And then the other one we wanted
to do was the query params.

52
00:03:14.355 --> 00:03:20.407
And so we could say const,
validate query..

53
00:03:20.407 --> 00:03:22.776
And let's copy this real quick.

54
00:03:25.862 --> 00:03:33.009
&gt;&gt; Steve Kinney: And this one we gotta do,
&gt;&gt; Steve Kinney: Again,

55
00:03:33.009 --> 00:03:39.744
the real type is really an object,
but it gets angry at me.

56
00:03:39.744 --> 00:03:44.762
So I could also change my own rules and
stuff like that as well.

57
00:03:44.762 --> 00:03:46.584
We don't necessarily know
what the response is, but

58
00:03:46.584 --> 00:03:48.738
you could also enforce that all
the responses are the same too.

59
00:03:48.738 --> 00:03:50.721
The response bodies all
match a certain type.

60
00:03:50.721 --> 00:03:54.560
And that's not gonna protect you from
anything from the outside world coz you

61
00:03:54.560 --> 00:03:57.704
control the response, but
it will protect you from yourself.

62
00:03:57.704 --> 00:03:58.846
And so that's good.

63
00:03:58.846 --> 00:04:02.567
We can treat that one as an exercise for
the later,

64
00:04:02.567 --> 00:04:07.616
it's the same basic idea that we're
doing no one needs to see me do it

65
00:04:07.616 --> 00:04:12.771
a fourth time and then request handler,
then the next one was again.

66
00:04:17.484 --> 00:04:21.036
&gt;&gt; Steve Kinney: T, and then we could
validate that the query in this case.

67
00:04:33.890 --> 00:04:37.625
&gt;&gt; Steve Kinney: And you could also say
this could be the partial thing we maybe

68
00:04:37.625 --> 00:04:41.811
wanna sort by almost anything,
my SQL queries can't handle that.

69
00:04:41.811 --> 00:04:43.689
But your API probably really can.

70
00:04:43.689 --> 00:04:46.466
And we'll see later when we use
other tools for generating.

71
00:04:46.466 --> 00:04:49.718
The idea is we do this by hand at first,
and then I show you tools for

72
00:04:49.718 --> 00:04:52.749
generating all this stuff so
that you don't have to do this.

73
00:04:52.749 --> 00:04:56.604
But the problem with those tools is
they were really great in a Greenfield

74
00:04:56.604 --> 00:04:57.435
application.

75
00:04:57.435 --> 00:04:59.789
But if you're not in one,

76
00:04:59.789 --> 00:05:05.139
then these are sometimes
approaches that you have to take,

77
00:05:05.139 --> 00:05:10.704
pick true and partial,
coz I think they can admit it, right?

78
00:05:17.183 --> 00:05:18.572
&gt;&gt; Steve Kinney: Where did I make Boo?

79
00:05:23.692 --> 00:05:26.093
&gt;&gt; Steve Kinney: Probably with
this type somewhere in there.

80
00:05:44.706 --> 00:05:46.996
&gt;&gt; Steve Kinney: I didn't do
anything differently, did I?

81
00:05:46.996 --> 00:05:51.511
Again, this is not totally for the query.

82
00:05:51.511 --> 00:05:57.318
The one thing we have to keep in mind is
that there are some express oddities,

83
00:05:57.318 --> 00:06:01.701
where we said before,
query params can be, almost any.

84
00:06:01.701 --> 00:06:05.755
But they're not quite any,
which is they could be a string,

85
00:06:05.755 --> 00:06:09.491
an array of string,
an object with key set of strings and

86
00:06:09.491 --> 00:06:14.201
values of strings or undefined, and
it is not a type that they export.

87
00:06:14.201 --> 00:06:18.044
Unfortunately, pull request accepted,
I guess, and

88
00:06:18.044 --> 00:06:22.537
so I do need to make sure that I
do the intersection of everything,

89
00:06:22.537 --> 00:06:25.992
express things,
Aquarius plus my type, right?

90
00:06:25.992 --> 00:06:27.626
Otherwise it will get angry.

91
00:06:27.626 --> 00:06:31.397
And, like I said, these think I can.

92
00:06:31.397 --> 00:06:32.860
Why don't I live?

93
00:06:32.860 --> 00:06:34.093
Try something else, randomly.

94
00:06:34.093 --> 00:06:36.287
Okay, all the red squigglies are gone.

95
00:06:36.287 --> 00:06:41.007
I did have to because I don't have
access to the type you can grab a given

96
00:06:41.007 --> 00:06:44.533
property and
get it through a little bit of science.

97
00:06:44.533 --> 00:06:49.198
But the point is you can kinda create
these different middleware, and also,

98
00:06:49.198 --> 00:06:52.927
if you suffer with that,
you can at least suffer with it once,

99
00:06:52.927 --> 00:06:56.192
coz imagine doing that
bespoke all the time, right?

100
00:06:56.192 --> 00:06:59.847
So in this case, now,
anything that uses middleware.

101
00:06:59.847 --> 00:07:07.622
I can theoretically, things will be
what I think they ought to be, right?

102
00:07:07.622 --> 00:07:13.920
Maybe but they will all parse at
the very least, which is nice.

103
00:07:13.920 --> 00:07:15.633
So check it out.

104
00:07:15.633 --> 00:07:20.088
The one thing that I'm not
gonna make you endure, but

105
00:07:20.088 --> 00:07:26.936
can be the if someone wants to do the kind
of graduate level version of this, okay?

106
00:07:26.936 --> 00:07:31.777
This is the graduate school most
insane version of it, which is,

107
00:07:31.777 --> 00:07:36.543
effectively, instead of having
three different middleware.

108
00:07:36.543 --> 00:07:41.308
I could have one that takes an object,
body, params, schema and

109
00:07:41.308 --> 00:07:46.247
one middleware where I could pass
in three different body, query,

110
00:07:46.247 --> 00:07:50.516
params and validate all three
in one piece of middleware.

111
00:07:54.106 --> 00:07:57.527
&gt;&gt; Steve Kinney: Taking an object it's
basically combining all of them together

112
00:07:57.527 --> 00:08:01.387
and doing the same basic idea as we go
through like I am not going to make you

113
00:08:01.387 --> 00:08:05.505
endure me watching the same thing again
in various different conditionals,

114
00:08:05.505 --> 00:08:08.519
but you can build on top of
these things as you need them.

