WEBVTT

1
00:00:00.090 --> 00:00:03.612
Okay, so we've defined a template for

2
00:00:03.612 --> 00:00:07.570
taking a list of things and
combining them.

3
00:00:07.570 --> 00:00:13.530
We're going to call that function fold,
actually fold map.

4
00:00:13.530 --> 00:00:19.840
We're gonna take this, map it into
a type and then fold it down via concat.

5
00:00:19.840 --> 00:00:24.748
So I don't wanna rate fold map here.

6
00:00:24.748 --> 00:00:27.374
I'm just gonna bring it in from a library.

7
00:00:27.374 --> 00:00:29.700
So we'll call this const.

8
00:00:29.700 --> 00:00:31.697
I mean,
we essentially just did right fold map,

9
00:00:31.697 --> 00:00:33.805
we'll just have to pass in this type and
that type.

10
00:00:33.805 --> 00:00:37.162
But I'm just gonna go ahead and say list.

11
00:00:37.162 --> 00:00:43.479
We're gonna require immutable-ext.

12
00:00:43.479 --> 00:00:46.696
Immutable-ext.

13
00:00:46.696 --> 00:00:47.800
Cool.

14
00:00:47.800 --> 00:00:49.926
And that defines full map on the list,

15
00:00:49.926 --> 00:00:52.857
because we can't call full
map on an array, right?

16
00:00:52.857 --> 00:00:56.950
So I'm just using the list
to be able to call full map.

17
00:00:58.290 --> 00:00:59.715
And now I don't need any of this.

18
00:00:59.715 --> 00:01:03.430
[LAUGH] I'm just gonna say
put it into all, full map it.

19
00:01:03.430 --> 00:01:04.320
Great.

20
00:01:04.320 --> 00:01:07.520
And it's probably helpful
to provide all that empty

21
00:01:08.710 --> 00:01:11.300
because then we'll have a starting value.

22
00:01:12.680 --> 00:01:16.140
And we'll call it toJS
because it's immutable.

23
00:01:16.140 --> 00:01:19.023
Good times.

24
00:01:19.023 --> 00:01:19.790
And run this.

25
00:01:21.190 --> 00:01:25.940
Again, it's not findking immutable,
toJS is not a function.

26
00:01:27.262 --> 00:01:29.214
Because it's folding it out of the list.

27
00:01:29.214 --> 00:01:30.180
That's kind of interesting.

28
00:01:30.180 --> 00:01:30.893
It's consuming it, right?

29
00:01:30.893 --> 00:01:34.841
It's turning it into an all, so
we reduced the list into an all so

30
00:01:34.841 --> 00:01:37.194
we don't actually have to call toJS.

31
00:01:37.194 --> 00:01:38.694
Cool.

32
00:01:38.694 --> 00:01:40.672
Still works.

