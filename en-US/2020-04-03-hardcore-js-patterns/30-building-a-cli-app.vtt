WEBVTT

1
00:00:00.290 --> 00:00:03.650
Okay, so we're at the CLI Blog,
our first app.

2
00:00:03.650 --> 00:00:04.920
It's a blog with a twist.

3
00:00:04.920 --> 00:00:05.975
It's a CLI Blog.

4
00:00:05.975 --> 00:00:10.479
[LAUGH] So, it's your favorite,
it's a graph.

5
00:00:10.479 --> 00:00:14.185
[LAUGH] So we have a,
these are what we're gonna do,

6
00:00:14.185 --> 00:00:17.300
it's kinda like the map of interactions.

7
00:00:17.300 --> 00:00:19.850
We have a starting point and

8
00:00:19.850 --> 00:00:22.880
we're gonna see if we have any
authors we can go straight to menu.

9
00:00:22.880 --> 00:00:27.620
If we don't have any authors, we go to
Create Author down at the bottom here.

10
00:00:27.620 --> 00:00:30.660
And after we create the author,
we go back to menu.

11
00:00:30.660 --> 00:00:34.810
From menu we can see all the posts,
go see the latest posts.

12
00:00:34.810 --> 00:00:36.710
Go create more authors.

13
00:00:36.710 --> 00:00:38.950
We can go Write, but
Write doesn't go back to menu.

14
00:00:38.950 --> 00:00:41.660
Write goes up to the latest after
its done cuz you just wrote it,

15
00:00:41.660 --> 00:00:42.643
you wanna see it here.

16
00:00:42.643 --> 00:00:48.340
So this is kind of the map,
world map of what we're doing.

17
00:00:48.340 --> 00:00:49.480
We'll see how far we get.

18
00:00:49.480 --> 00:00:54.270
I really just care about working
on the architectural decisions and

19
00:00:54.270 --> 00:00:57.260
making this app in a functional way.

20
00:00:57.260 --> 00:01:01.540
More so than I do like completing all the
little nuts and bolts to make this work.

21
00:01:01.540 --> 00:01:04.240
So let's see what we can
do in the time allotted.

22
00:01:06.520 --> 00:01:07.470
Get back to our VS code.

23
00:01:07.470 --> 00:01:11.290
We're gonna start with
this little setup here.

24
00:01:11.290 --> 00:01:14.570
We have a question and answer interface.

25
00:01:14.570 --> 00:01:20.037
And it works like so,
we can call getInput.

26
00:01:20.037 --> 00:01:23.700
So, and then, I can map over that and

27
00:01:23.700 --> 00:01:28.560
be like, whatever x x to UpperCase it's.

28
00:01:28.560 --> 00:01:33.690
And so
we're just dealing inside a task now but

29
00:01:33.690 --> 00:01:39.340
this is my answer to that question, right.

30
00:01:39.340 --> 00:01:44.220
So, this will pose the question in the
console and then I'll get my answer back.

31
00:01:44.220 --> 00:01:44.950
Let's just run that.

32
00:01:44.950 --> 00:01:49.790
Just make sure it works
console.error console.log.

33
00:01:49.790 --> 00:01:50.290
We run it.

34
00:01:52.130 --> 00:01:55.130
Still try to get rid of those pop ups,
cannot do it.

35
00:01:55.130 --> 00:01:56.820
Thanks VS code, all right.

36
00:01:56.820 --> 00:01:57.760
It's probably my fault.

37
00:01:57.760 --> 00:01:59.530
It's not their fault I'm sure.

38
00:01:59.530 --> 00:02:07.030
So go to blog index and so
set like now, there you go.

39
00:02:07.030 --> 00:02:08.620
Cool, there's the app.

40
00:02:08.620 --> 00:02:09.580
We're done.

41
00:02:09.580 --> 00:02:10.620
Feel that luck.

42
00:02:10.620 --> 00:02:11.420
So this is neat.

43
00:02:11.420 --> 00:02:17.080
This kinda just comes with the interface
realign we just grabbed it in the task.

44
00:02:18.690 --> 00:02:23.880
So what I want to start by
doing is looking back at that

45
00:02:23.880 --> 00:02:28.330
kinda world map we have, I'd like to just
sketch out some of these functions and

46
00:02:28.330 --> 00:02:31.780
kinda see what the type
of these functions are.

47
00:02:31.780 --> 00:02:36.780
And to do so, I just have to write
some rough like wishful thinking code.

48
00:02:36.780 --> 00:02:38.740
So I'm not gonna go implement everything.

49
00:02:38.740 --> 00:02:41.560
I'm just gonna kinda
loosely write stuff and

50
00:02:41.560 --> 00:02:45.330
then see what we might
need as a function model.

51
00:02:45.330 --> 00:02:46.790
So start with Start.

52
00:02:46.790 --> 00:02:49.790
It's a good place to start
[LAUGH] to function.

53
00:02:49.790 --> 00:02:56.526
I guess we'll, first, we're gonna check
to see if there's any authors, right?

54
00:02:56.526 --> 00:03:01.250
So what we can do is, I believe
we're gonna bring in a little array

55
00:03:01.250 --> 00:03:06.290
based database that I think
I've previously prepared.

56
00:03:08.110 --> 00:03:11.590
See if this is here, it's in lib, okay.

57
00:03:14.010 --> 00:03:16.405
So we have this little database.

58
00:03:16.405 --> 00:03:21.669
Actually, let me go take
a look at Dbx it exports,

59
00:03:21.669 --> 00:03:25.010
save find all and the store.

60
00:03:25.010 --> 00:03:30.700
Okay, cool and this just we're
working with arrays wrapped in a task.

61
00:03:30.700 --> 00:03:34.394
I was, if we had time I would have
gone into the strategy pattern or

62
00:03:34.394 --> 00:03:38.236
something in here but we are,
it's really neither here nor there.

63
00:03:38.236 --> 00:03:42.130
So we have save all and
that's all we really need.

64
00:03:42.130 --> 00:03:44.890
We could use find maybe,
but focus on that.

65
00:03:46.090 --> 00:03:50.750
So the way this works is I guess we'll
say all we have to give it a table name.

66
00:03:50.750 --> 00:03:54.640
So let's give it like author table,
just authors.

67
00:03:56.990 --> 00:03:58.176
So give it the table name.

68
00:03:58.176 --> 00:04:03.209
And then that will,
I can change over that and

69
00:04:03.209 --> 00:04:06.780
get, so this is a task.

70
00:04:06.780 --> 00:04:10.220
Actually just map over it right now and
get the authors.

71
00:04:10.220 --> 00:04:15.170
And we'll say if we have authors,
we're gonna

72
00:04:16.250 --> 00:04:22.140
go into the menu otherwise,
we're gonna go to Create Author.

73
00:04:22.140 --> 00:04:25.130
All right now, again,
none of this is implemented.

74
00:04:25.130 --> 00:04:30.890
It looks like this is another function,
some mapping over this function and

75
00:04:30.890 --> 00:04:33.060
returning another function,
that's a little weird.

76
00:04:33.060 --> 00:04:37.280
We'll have to just keep an eye on that.

77
00:04:37.280 --> 00:04:39.487
So what does CreateAuthor look like?

78
00:04:41.628 --> 00:04:45.261
And let's just get through
these maybe three functions and

79
00:04:45.261 --> 00:04:48.350
then we'll kinda see
what we're dealing with.

80
00:04:48.350 --> 00:04:50.850
And as we make more functions,
we might have to come back and refactor,

81
00:04:50.850 --> 00:04:52.240
see what happens.

82
00:04:52.240 --> 00:04:54.670
But CreateAuthor, sketch that out.

83
00:04:54.670 --> 00:04:56.080
All right, what would that look like?

84
00:04:56.080 --> 00:05:02.060
Well, we'll ask, we'll get the input On,
let's say, name.

85
00:05:02.060 --> 00:05:06.800
And then when we get the input back,
we get,

86
00:05:06.800 --> 00:05:09.860
I keep going straight to chain, but I'm
not really sure if I need the chain yet.

87
00:05:09.860 --> 00:05:11.470
So we get back the author name.

88
00:05:11.470 --> 00:05:17.300
Let's go ahead and make a little
author type that takes a name.

89
00:05:17.300 --> 00:05:21.120
And the interesting thing about
that is it's really nothing.

90
00:05:21.120 --> 00:05:24.430
It's just going to pick a name,
slap it in a type.

91
00:05:24.430 --> 00:05:29.340
And the reason I like to do this,
in a more typed

92
00:05:29.340 --> 00:05:33.315
formal language ,or if we had a class or
whatever else we would,

93
00:05:33.315 --> 00:05:38.190
it keeps your data types defined so that

94
00:05:38.190 --> 00:05:42.370
you're not just willy nilly creating data
types all throughout your app as you go.

95
00:05:42.370 --> 00:05:44.640
And so like this passenger constructor,

96
00:05:44.640 --> 00:05:46.890
even though it's not really doing
anything besides putting in an object.

97
00:05:48.640 --> 00:05:50.750
Then we'll go ahead and map over that.

98
00:05:50.750 --> 00:05:54.030
So we have an author and
what do we do with that?

99
00:05:54.030 --> 00:05:58.140
I guess now that we've created an author,
we probably have to save it in the DB.

100
00:05:58.140 --> 00:06:00.380
Okay, so that'll be a chain.

101
00:06:00.380 --> 00:06:03.190
Or no, let's just, that's a map there.

102
00:06:03.190 --> 00:06:04.400
And this is chain, yeah.

103
00:06:05.555 --> 00:06:09.055
So save this in the DB,
again in the author table.

104
00:06:11.015 --> 00:06:17.061
So save here, we're gonna save the author
and then finally we have to map that into,

105
00:06:17.061 --> 00:06:21.318
we don't really care that we
saved the author as long as it,

106
00:06:21.318 --> 00:06:25.340
I imagine this will reject
the task if it doesn't save.

107
00:06:25.340 --> 00:06:29.865
We could remodel the database in a number
of ways, we could have a task either right

108
00:06:29.865 --> 00:06:33.867
where the DB connection might be why
the task fails, and then it still has

109
00:06:33.867 --> 00:06:38.230
a successful task with an error inside
it if it didn't save the author.

110
00:06:38.230 --> 00:06:39.760
Do some validations,

111
00:06:39.760 --> 00:06:43.530
perhaps we will use our validation
library to work with the author.

112
00:06:43.530 --> 00:06:46.550
But right now I'm just
going to say whatever.

113
00:06:46.550 --> 00:06:47.996
Let's just sketch these out.

114
00:06:47.996 --> 00:06:51.912
I'm gonna say menu is where
we'll go from there, right.

115
00:06:51.912 --> 00:06:55.230
We have an author and
now we're going to menu.

116
00:06:55.230 --> 00:06:58.760
And if we look back at our little map,
every time we create an author,

117
00:06:58.760 --> 00:06:59.980
I go back to menu.

118
00:06:59.980 --> 00:07:04.770
There's nowhere else to go, so
I'm just going to go right there.

119
00:07:04.770 --> 00:07:08.796
Last one, let's go ahead and
write menu, it's a fun one.

120
00:07:08.796 --> 00:07:17.750
Menu, Let's see,
where do you want to go today?

121
00:07:18.860 --> 00:07:20.214
MSN?
1991?

122
00:07:21.860 --> 00:07:27.655
And we'll, maybe private provide a hint,
do we want to do like create author,

123
00:07:27.655 --> 00:07:33.310
write, all her latest.

124
00:07:33.310 --> 00:07:39.460
All right, cool, because there's some
some hints at what we can actually do and

125
00:07:39.460 --> 00:07:44.800
once we get that input,
we get the route, I suppose.

126
00:07:44.800 --> 00:07:48.550
We'll need a little router, so we'll
do a router, we'll pass in the route.

127
00:07:49.730 --> 00:07:54.770
And that will be, look at this, we're
just passing these continuations along,

128
00:07:54.770 --> 00:07:56.270
now that I see it, right?

129
00:07:57.590 --> 00:08:01.900
So, once I'm passing the router out,
let's go ahead and write a little router,

130
00:08:01.900 --> 00:08:06.220
and then we'll finish our little sketch,
let's put this down here.

131
00:08:06.220 --> 00:08:10.690
And one of the things about this is
we're defining these functions and

132
00:08:10.690 --> 00:08:16.200
JavaScript will not like it if I mention
this functions before they're defined.

133
00:08:16.200 --> 00:08:19.380
But since they're inside functions here,
they don't care of that.

134
00:08:19.380 --> 00:08:21.920
I can call router within there but

135
00:08:21.920 --> 00:08:24.700
I have to write the router down here,
Start, Menu.

136
00:08:24.700 --> 00:08:27.630
Well, we don't want to let
people go back to the start, so

137
00:08:27.630 --> 00:08:28.626
that's not even a possibility.

138
00:08:28.626 --> 00:08:33.408
In Menu, createAuthor and we can add more.

139
00:08:33.408 --> 00:08:37.911
All right, good times.

