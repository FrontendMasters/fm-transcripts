WEBVTT

1
00:00:00.400 --> 00:00:02.390
So, this isn't great.

2
00:00:02.390 --> 00:00:06.880
So let's go ahead and make a type
that does what we want it to do.

3
00:00:06.880 --> 00:00:11.630
So make a Success, and
that'll be take some x.

4
00:00:13.150 --> 00:00:19.330
And so take this x into concat,
another one, other.x.

5
00:00:19.330 --> 00:00:22.310
We gotta stay within the type, right?

6
00:00:22.310 --> 00:00:27.450
So we're gonna make Success and a failure.

7
00:00:27.450 --> 00:00:32.010
And they're both,
we're gonna kinda define this

8
00:00:32.010 --> 00:00:36.290
as subclasses of the superclass of
validation result or something.

9
00:00:36.290 --> 00:00:39.120
So it's closed in that it will

10
00:00:39.120 --> 00:00:43.250
always return you a validation result
whether that's a success or a failure.

11
00:00:43.250 --> 00:00:44.690
Same thing with Either,

12
00:00:44.690 --> 00:00:47.500
you don't always get it right
back when you concat to Either.

13
00:00:47.500 --> 00:00:48.750
Like you can get it right or left.

14
00:00:48.750 --> 00:00:51.730
It's closed under
the Either type umbrella.

15
00:00:51.730 --> 00:00:53.410
But so we'll do the same thing here.

16
00:00:53.410 --> 00:00:56.640
So we'll say let's make a Fail.

17
00:00:58.930 --> 00:01:02.548
We'll say like isFail here so
we know what it is.

18
00:01:02.548 --> 00:01:07.920
[LAUGH] And
isFail: false up here, so that.

19
00:01:07.920 --> 00:01:12.065
I will say okay if the other one

20
00:01:12.065 --> 00:01:17.730
isFail, then what we want to do
is keep the other one, right?

21
00:01:17.730 --> 00:01:23.160
Because that's just like I don't want to,
I always want to keep the failures.

22
00:01:23.160 --> 00:01:27.017
But if not, we'll keep ourselves, and

23
00:01:27.017 --> 00:01:31.980
we'll just reconstruct a Success with x,
cool.

24
00:01:31.980 --> 00:01:36.957
You know, if we were in a class, we could
just do this, but I'm just remaking it.

25
00:01:36.957 --> 00:01:41.811
Any questions on how that works or
why that works?

26
00:01:41.811 --> 00:01:45.618
if I'm trying to concat
a success with a failure,

27
00:01:45.618 --> 00:01:50.606
I'm gonna keep the failure because
I want the failure to continue

28
00:01:50.606 --> 00:01:55.605
on to be the result,
because I don't want to accidentally pass.

29
00:01:55.605 --> 00:01:59.844
And with Fail, we'll say well,
so I know I'm a failure.

30
00:01:59.844 --> 00:02:02.343
[LAUGH] I do know I'm a failure.

31
00:02:02.343 --> 00:02:06.302
But if the other one is a failure,
then we actually want to concat, right?

32
00:02:06.302 --> 00:02:11.212
So we'll say other.x.concat,
concat our x with the other x.

33
00:02:11.212 --> 00:02:16.335
This is kind of like the opposite

34
00:02:16.335 --> 00:02:20.520
of Either there, right?

35
00:02:20.520 --> 00:02:25.419
The failures are now concating their which
would be collecting all the errors and

36
00:02:25.419 --> 00:02:26.188
the success.

37
00:02:26.188 --> 00:02:31.436
So if the other one's a failure,
we'll actually concat them both,

38
00:02:31.436 --> 00:02:34.160
left to put it back in the Fail here.

39
00:02:34.160 --> 00:02:39.110
And otherwise,
we'll just keep ourselves, sweet.

40
00:02:40.450 --> 00:02:43.610
All right, that looks like it might work,
let's give it a shot.

41
00:02:43.610 --> 00:02:48.790
And we'll say, all right,
instead of a Right, we'll do a Success.

42
00:02:48.790 --> 00:02:51.190
Instead of a Left, we'll do a fail.

43
00:02:51.190 --> 00:02:55.140
And let's see what's happening here.

44
00:02:56.480 --> 00:02:59.460
Run it, another blow up.

45
00:02:59.460 --> 00:03:03.390
It's a, I can't ever get it on the first
try, I don't know how you all program but

46
00:03:03.390 --> 00:03:03.965
I suck.

47
00:03:03.965 --> 00:03:12.520
[LAUGH] So type is 81, it says
other.fold is not a function, all right.

48
00:03:12.520 --> 00:03:17.420
Let's see what's happening here,
looks like perhaps.

49
00:03:17.420 --> 00:03:24.790
I have a concat, I have a concat,
returning Success and a failure.

50
00:03:24.790 --> 00:03:28.680
We're starting with an Either,
there we go.

51
00:03:28.680 --> 00:03:33.410
So let's start with a Success
with that in there,

52
00:03:33.410 --> 00:03:36.660
because I'm trying to
compare two different things.

53
00:03:36.660 --> 00:03:39.560
And still blew up, same function.

54
00:03:39.560 --> 00:03:41.180
It's actually here.

55
00:03:41.180 --> 00:03:46.040
Derp, before I was returning
Either in folding it out.

56
00:03:46.040 --> 00:03:52.520
Actually, let's make a nice little fold
here so we can get out of our type here.

57
00:03:52.520 --> 00:03:55.790
So we get a f and a g, just like Either.

58
00:03:55.790 --> 00:04:00.810
And on the Success case,
we'll run the right side with x.

59
00:04:00.810 --> 00:04:05.930
And on he Fail case,
we will run the f, the left one.

60
00:04:05.930 --> 00:04:10.100
All right, so just like Either, this will
hit the console.error or the console.log.

61
00:04:11.690 --> 00:04:12.260
And there we go.

62
00:04:12.260 --> 00:04:13.612
What do we get?

63
00:04:13.612 --> 00:04:15.935
We get, well this isn't working.

64
00:04:15.935 --> 00:04:20.700
[LAUGH] So looks like we passed
it without it getting through.

65
00:04:20.700 --> 00:04:22.239
How's that working?

66
00:04:22.239 --> 00:04:25.881
We have a spec of an object key,
and we're running this function.

67
00:04:25.881 --> 00:04:32.830
If it returns true, it will be a Success,
if returns false, it is a Fail.

68
00:04:32.830 --> 00:04:37.990
So we're still getting the email
as empty and it's happy.

69
00:04:37.990 --> 00:04:43.220
And if we look up here,
we can see that I'm actually

70
00:04:43.220 --> 00:04:48.520
calling IsFail on the x, I don't wanna do
that, I wanna call it on the type itself.

71
00:04:49.590 --> 00:04:53.790
So there, and up here,
a little typo over there.

72
00:04:53.790 --> 00:04:57.510
And that should do the trick,
let's see what happens.

73
00:04:57.510 --> 00:04:58.688
There we go, email bad.

74
00:04:58.688 --> 00:05:01.770
If I do both, do we get both?

75
00:05:01.770 --> 00:05:03.890
We do, we get both, awesome.

76
00:05:03.890 --> 00:05:08.595
If I put in a name, brian,
and an email do we get?

77
00:05:08.595 --> 00:05:14.596
@hello.com, what happens here?

78
00:05:14.596 --> 00:05:17.284
Great, we get an array of just the object,
terrific.

