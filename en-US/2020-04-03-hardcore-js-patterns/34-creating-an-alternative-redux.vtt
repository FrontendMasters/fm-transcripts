WEBVTT

1
00:00:00.000 --> 00:00:04.958
We're gonna make a Todo app,
but this app is Todon't,

2
00:00:04.958 --> 00:00:08.981
we're gonna have habits
that we wanna stop.

3
00:00:08.981 --> 00:00:15.035
And if we run this, it's gonna open
up a little web pack server and

4
00:00:15.035 --> 00:00:18.980
we have The Todo app template hurray.

5
00:00:18.980 --> 00:00:23.540
So if you look at the app,
it's just the standard template for

6
00:00:23.540 --> 00:00:28.031
the Todo app that people share around for
their frameworks.

7
00:00:28.031 --> 00:00:32.637
And I didn't want people to have
to know React coming into this, so

8
00:00:32.637 --> 00:00:37.243
if you look at this package here,
we have our standard HTML package

9
00:00:37.243 --> 00:00:41.714
that's just loading the bundle
in a style sheet, or HTML file.

10
00:00:41.714 --> 00:00:45.932
But then we also have this UI folder and
this is the entire UI,

11
00:00:45.932 --> 00:00:52.090
it's just a couple of components, and I
don't want you to have to worry about it.

12
00:00:52.090 --> 00:00:56.884
So I just wanna call out a couple things
so you don't have to look at this anymore.

13
00:00:56.884 --> 00:01:01.423
So we have our initial render app
which takes an initial state and

14
00:01:01.423 --> 00:01:03.920
a dispatch function.

15
00:01:03.920 --> 00:01:10.223
So I'm able to kinda call out of
this app and have it rerender.

16
00:01:10.223 --> 00:01:15.475
So when we go into the dispatch function,
this gets called with an event,

17
00:01:15.475 --> 00:01:18.864
so this is not Redux,
it's very Redux-like,

18
00:01:18.864 --> 00:01:23.547
that's gonna get called with an event and
a payload, some data.

19
00:01:23.547 --> 00:01:28.699
So we get create,
destroy with an index and view okay,

20
00:01:28.699 --> 00:01:35.755
those are the only events we have,
we've got a couple components in here,

21
00:01:35.755 --> 00:01:41.591
and should really be not important
to the rest of the app here.

22
00:01:41.591 --> 00:01:45.881
But I just wanted to mention that this is
here and you don't need to know React.

23
00:01:45.881 --> 00:01:48.550
But we're gonna cover under
app with state and dispatch.

24
00:01:50.260 --> 00:01:54.180
Okay, back to index,
what we're gonna do here

25
00:01:54.180 --> 00:01:58.599
is much like we did earlier
with modeling functions.

26
00:01:58.599 --> 00:02:03.846
We're gonna model this
kind of reduction process,

27
00:02:03.846 --> 00:02:11.620
so if I start off the app, and
I call some stuff, nothing is happening.

28
00:02:11.620 --> 00:02:16.218
So let's go ahead and
log when we get called here,

29
00:02:16.218 --> 00:02:20.831
we'll console.log the action and
the payload.

30
00:02:26.603 --> 00:02:29.748
It's that time of day where I can't type,
and

31
00:02:29.748 --> 00:02:33.800
I have to return some state here as,
probably what is it?

32
00:02:33.800 --> 00:02:39.889
It's expecting to return so in fact,
let me just call this state so

33
00:02:39.889 --> 00:02:43.821
it doesn't blow up after we do this thing.

34
00:02:43.821 --> 00:02:48.870
So we have state and
we're gonna return state okay,

35
00:02:48.870 --> 00:02:52.540
so when I actually do something here,

36
00:02:52.540 --> 00:02:58.063
it says the action is create and
the payload is named sdf.

37
00:02:58.063 --> 00:03:03.763
All right, cool, we could do this,
all day long, we get this action so

38
00:03:03.763 --> 00:03:07.865
let's build a little create
action just to start.

39
00:03:07.865 --> 00:03:15.090
Create and we're just gonna hard code
create in here for the time being.

40
00:03:15.090 --> 00:03:19.031
So that would take the payload and
the state,

41
00:03:19.031 --> 00:03:23.905
state in the payload and
the payload being this name, so

42
00:03:23.905 --> 00:03:29.936
I guess this is the name of our habit,
so let's just call this habit.

43
00:03:29.936 --> 00:03:34.565
All right, and
what we're gonna do is object assign,

44
00:03:34.565 --> 00:03:38.490
we're gonna return new
state with the habit,

45
00:03:38.490 --> 00:03:46.370
great we're gonna overwrite the previous
habits with this one that we just gave it.

46
00:03:46.370 --> 00:03:51.581
And so we call create with the payload and

47
00:03:51.581 --> 00:03:56.035
the state, you just return that.

48
00:03:56.035 --> 00:03:59.020
Cool, good times.

49
00:03:59.020 --> 00:04:03.626
Let's see what happens,
one thing I should should mention is we

50
00:04:03.626 --> 00:04:08.327
have to render the app again,
right here with the new state, okay?

51
00:04:08.327 --> 00:04:13.144
So why don't we make a little bit
of an event loop just to start off?

52
00:04:13.144 --> 00:04:17.819
Let's call this little event,
it's called appLoop,

53
00:04:17.819 --> 00:04:22.991
take an initial state, and
then we'll do this kind of thing,

54
00:04:22.991 --> 00:04:26.300
and we'll call this appLoop, right?

55
00:04:26.300 --> 00:04:30.592
So it just loops around and
renders the new the new state calls our

56
00:04:30.592 --> 00:04:35.442
function starts again, and then we can
get rid of this state variable and

57
00:04:35.442 --> 00:04:38.168
just call it an app loop, to kick it off.

58
00:04:38.168 --> 00:04:40.200
Okay, are you with me?

59
00:04:41.330 --> 00:04:46.237
All right, let's run this and
say, hi, hey,

60
00:04:46.237 --> 00:04:52.631
there it is cool now if I click it,
it goes away that's fun.

61
00:04:52.631 --> 00:04:58.562
Because we don't have a create,
so stop logging the event,

62
00:04:58.562 --> 00:05:03.930
here, if we log it again,
log the action and payload.

63
00:05:06.923 --> 00:05:11.417
We get is if I click the Delete
we'll get a destroy with the index,

64
00:05:11.417 --> 00:05:15.618
if I click the actual title,
I'll get a view with the index.

65
00:05:15.618 --> 00:05:20.659
And those are the only three events we're
going to handle in this app right now.

66
00:05:20.659 --> 00:05:25.790
So, I guess I'll leave those in for
a second, so I guess we had

67
00:05:25.790 --> 00:05:32.270
build another little router, so
what we gonna do route on the action.

68
00:05:32.270 --> 00:05:36.781
We'll just call that function
the state payload, so

69
00:05:36.781 --> 00:05:42.594
get a little router again,
const route router, route [LAUGH] route,

70
00:05:42.594 --> 00:05:46.821
router, route = {create, destroy, view}.

71
00:05:46.821 --> 00:05:52.038
Those were the three functions that
we got or the three actions we got,

72
00:05:52.038 --> 00:05:55.940
we'll just stub them out so
destroy takes an index.

73
00:05:57.710 --> 00:06:01.585
And we'll just leave that alone for

74
00:06:01.585 --> 00:06:06.362
now let's just clear it out and
the view, so

75
00:06:06.362 --> 00:06:14.772
this is not take in index this takes
a payload with an index property, right?

76
00:06:14.772 --> 00:06:21.080
So I'll have to destructure to get at that
index, it's not clear why that's working?

77
00:06:21.080 --> 00:06:26.371
Okay, and then we'll go ahead and
view the thing and

78
00:06:26.371 --> 00:06:31.420
we just wanna set the current
index to that index,

79
00:06:31.420 --> 00:06:34.318
cuz they're called index.

80
00:06:34.318 --> 00:06:40.657
And we wanna set the page to show, I think
it's called show we'll figure it out.

81
00:06:40.657 --> 00:06:45.473
Great, looks like we're done,
[LAUGH] see what happens, A B, but

82
00:06:45.473 --> 00:06:51.290
we're only saving one at a time we're
not actually appending anything.

83
00:06:51.290 --> 00:06:56.816
If I click it hey it says showing C,
that's good, what if I do delete?

84
00:06:58.789 --> 00:07:00.776
It clears it out, I guess, [LAUGH] so

85
00:07:00.776 --> 00:07:04.500
I think the first thing we have to
do is actually append this thing.

