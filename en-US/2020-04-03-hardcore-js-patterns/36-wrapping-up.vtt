WEBVTT

1
00:00:00.000 --> 00:00:04.685
I hope this class covered a lot of ground
for you to be able to dig deeper in,

2
00:00:04.685 --> 00:00:07.721
I hope it showed you where and
how to use things.

3
00:00:07.721 --> 00:00:12.628
I hope you saw enough of it so that you
can say okay i don't know it, okay it

4
00:00:12.628 --> 00:00:17.696
was so, so much but I have some exercises
I can look up, I have examples I can

5
00:00:17.696 --> 00:00:22.631
look up and I can choose the right tool
for the job and dig in when I need to.

6
00:00:22.631 --> 00:00:25.484
That's that's kind of
the purpose of this class.

7
00:00:25.484 --> 00:00:26.411
What's that up Mark?

8
00:00:26.411 --> 00:00:29.515
&gt;&gt; It seems like a TypeScript
would be really helpful here.

9
00:00:29.515 --> 00:00:33.396
Do you have any-
&gt;&gt; Yes.

10
00:00:33.396 --> 00:00:35.267
&gt;&gt; That you could look up?

11
00:00:35.267 --> 00:00:36.316
Any resources?

12
00:00:36.316 --> 00:00:40.736
&gt;&gt; Yeah so there's a few people out there,

13
00:00:40.736 --> 00:00:45.806
I could post their Twitter
handles handles but

14
00:00:45.806 --> 00:00:49.316
they're pushing TypeScript so

15
00:00:49.316 --> 00:00:55.439
far that it's like making
JavaScript feel like Scala.

16
00:00:55.439 --> 00:00:59.433
And it's really impressive
what they're doing with types,

17
00:00:59.433 --> 00:01:04.190
I was gonna start this class in TypeScript
cuz it is a lot easier to just have

18
00:01:04.190 --> 00:01:08.334
the type checker say,
you have a function inside of neither,

19
00:01:08.334 --> 00:01:11.448
and that's not what you
said you would give me.

20
00:01:11.448 --> 00:01:18.679
But a lot of the type tricks that you
have to do with TypeScript in particular,

21
00:01:18.679 --> 00:01:23.241
TypeScript doesn't love
things like promise,

22
00:01:23.241 --> 00:01:27.596
holding an either holding a,
you know a task.

23
00:01:27.596 --> 00:01:33.445
It's not built for that and you have to do
some some workarounds to get it to work,

24
00:01:33.445 --> 00:01:38.177
it's getting more feature rich but,
it ends up being a lot of type

25
00:01:38.177 --> 00:01:42.416
trickery to get it to agree
with these super nested types.

26
00:01:42.416 --> 00:01:47.466
So I highly recommend working with it, but
if you're gonna go that far into types,

27
00:01:47.466 --> 00:01:51.580
consider your environment,
consider who you're working with and

28
00:01:51.580 --> 00:01:56.144
think about, should I just use a typed
functional language at this point.

29
00:01:56.144 --> 00:02:00.172
Or should I use TypeScript because
I'm in a setting where I need

30
00:02:00.172 --> 00:02:01.924
to use TypeScript rather.

31
00:02:01.924 --> 00:02:05.229
&gt;&gt; You mean like Elm or
pure pure script or reason?

32
00:02:05.229 --> 00:02:09.507
&gt;&gt; Exactly, you could use Elm, you could
use transcripts, use reason you can use,

33
00:02:09.507 --> 00:02:12.176
there's a dozen more of
those [LAUGH] are out there.

34
00:02:12.176 --> 00:02:16.689
There's compiled to, but
the main thing is, if you're learning

35
00:02:16.689 --> 00:02:22.022
the paradigm itself, you see this stuff
in every language and all the places.

36
00:02:22.022 --> 00:02:26.950
Elm is actively trying not to go here,
but people are still doing this,

37
00:02:26.950 --> 00:02:31.221
[LAUGH] and the same thing,
you might get tripped up in reason,

38
00:02:31.221 --> 00:02:36.178
they have a func type it comes from
old Camel, it's a module function.

39
00:02:36.178 --> 00:02:38.929
It's not the same
definition as this functor,

40
00:02:38.929 --> 00:02:42.935
even though it's still rooted in
some of the same terminology cool.

41
00:02:42.935 --> 00:02:47.261
So thank you all so much for
for attending the class,

42
00:02:47.261 --> 00:02:52.192
let me know if there's any issues and
stuff I can help post.

43
00:02:52.192 --> 00:02:55.435
[LAUGH] I'll post all the code up and
fix any little bugs so

44
00:02:55.435 --> 00:02:57.928
it'll actually run when you download it.

45
00:02:57.928 --> 00:02:59.629
[LAUGH] Thank you very much.

46
00:02:59.629 --> 00:03:03.250
&gt;&gt; [APPLAUSE]

