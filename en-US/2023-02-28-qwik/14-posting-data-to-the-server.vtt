WEBVTT

1
00:00:00.000 --> 00:00:03.184
So now we have a list here.

2
00:00:03.184 --> 00:00:07.533
This is interactive, right, so
you can search for it on the client.

3
00:00:07.533 --> 00:00:10.847
We get this back from the server,
we can have the details over here.

4
00:00:10.847 --> 00:00:15.212
I think the next thing to do is to kinda
have an Edit button in here, right?

5
00:00:15.212 --> 00:00:19.303
So to get an edit, really what we want is,

6
00:00:21.675 --> 00:00:25.458
We probably want to have a link here,

7
00:00:26.728 --> 00:00:32.921
edit, Something like this,
and we wanna say /,

8
00:00:49.661 --> 00:00:50.735
And why is it red?

9
00:00:53.840 --> 00:00:58.722
I can not type it in there,
okay, good point.

10
00:00:58.722 --> 00:01:00.999
Just put it in here.

11
00:01:00.999 --> 00:01:03.166
All right, [COUGH] so
now we have an edit link, right?

12
00:01:03.166 --> 00:01:08.032
And that gets us to another route that,
of course, we don't have.

13
00:01:08.032 --> 00:01:09.524
So let's make that one.

14
00:01:09.524 --> 00:01:10.797
And that one should be
pretty straightforward.

15
00:01:10.797 --> 00:01:14.705
So I'm just gonna copy what I
have right now, the whole page.

16
00:01:14.705 --> 00:01:17.995
And actually,
I'm just gonna make a new route here.

17
00:01:17.995 --> 00:01:24.808
And so, it is, edit/index.tsx,

18
00:01:24.808 --> 00:01:29.891
I paste it in there and I'm also have

19
00:01:29.891 --> 00:01:34.305
to copy the CSS in here, okay?

20
00:01:34.305 --> 00:01:38.253
And so, now our edit route, and
of course, Vite has to be restarted.

21
00:01:45.169 --> 00:01:48.298
Yeah, so this one also has a wrong path.

22
00:01:48.298 --> 00:01:50.599
Sorry, it was it was not Vite this time.

23
00:01:50.599 --> 00:01:56.821
Okay, so now, the edit takes us the same
exact point, and so we can change things.

24
00:01:56.821 --> 00:01:59.404
First of all, we probably want to,

25
00:02:03.544 --> 00:02:07.098
There needs to be a form, we have to
change everything to be editable, right?

26
00:02:07.098 --> 00:02:09.586
So we need a form on it.

27
00:02:09.586 --> 00:02:11.302
So let's do that.

28
00:02:11.302 --> 00:02:18.202
First of all, this would be cancel,
and now it just goes here, right?

29
00:02:18.202 --> 00:02:21.236
So now, if we do edit,
cancel gets us to the main route,

30
00:02:21.236 --> 00:02:25.188
edit goes into the edit route, and
then we have to change all this stuff.

31
00:02:25.188 --> 00:02:29.089
So wherever it says c.name,
really we have to change it to input.

32
00:02:39.626 --> 00:02:43.424
Right, so
now I can edit this particular bit.

33
00:02:43.424 --> 00:02:47.447
And let's do the same exact thing for
the other bits as well.

34
00:02:47.447 --> 00:02:52.432
So that we have to do this for name,
we have to do this for Twitter.

35
00:02:52.432 --> 00:02:58.056
So that would be, But

36
00:02:58.056 --> 00:03:01.444
this will be Twitter.

37
00:03:05.085 --> 00:03:07.370
This will be, what it would be?

38
00:03:07.370 --> 00:03:11.158
c.twitter.

39
00:03:31.307 --> 00:03:34.467
All right,
probably make those inputs bigger.

40
00:03:39.435 --> 00:03:43.283
And this is where my CSL is gonna fail me,
so I'm just gonna do with,

41
00:03:43.283 --> 00:03:45.186
I don't think I can do 100%.

42
00:03:45.186 --> 00:03:50.038
I think I just need to do 500 pixels,
it's gonna be way too much, yes.

43
00:03:52.730 --> 00:03:56.965
Somebody who could be better at CSS
than I can probably make it auto.

44
00:03:56.965 --> 00:04:01.221
I think you have to set up a flexbox,
we could do that, but

45
00:04:01.221 --> 00:04:04.786
I think it's gonna be missing the point,
yes.

46
00:04:04.786 --> 00:04:07.429
&gt;&gt; A related question,
could you use Tailwind CSS with this?

47
00:04:07.429 --> 00:04:13.124
&gt;&gt; Yes, you can, again,
if I go to npm run qwik add,

48
00:04:13.124 --> 00:04:21.140
notice Tailwind (styling) is one
of the options that's over here.

49
00:04:21.140 --> 00:04:25.767
And Vanilla Extract is the other one that
I think is even better than Tailwind.

50
00:04:25.767 --> 00:04:29.475
So we could do that, but
I wanted to keep the things simple and

51
00:04:29.475 --> 00:04:33.421
straightforward for now,
not to introduce too many concepts.

52
00:04:33.421 --> 00:04:35.606
So we're kind of staying
away from that for now.

53
00:04:35.606 --> 00:04:37.002
Plus, I haven't learned
how to use that yet.

54
00:04:37.002 --> 00:04:39.657
So, [LAUGH] that was
done by the community.

55
00:04:41.873 --> 00:04:44.771
Okay, so now, this is the details,

56
00:04:44.771 --> 00:04:48.613
the edit gives us the cancel,
we have over here.

57
00:04:48.613 --> 00:04:51.014
And so,
let's say I wanna actually submit this.

58
00:04:51.014 --> 00:04:53.102
So I wanna make it into a form.

59
00:04:53.102 --> 00:04:56.977
So one of the things we need to do now
is we need to turn it into a form.

60
00:04:56.977 --> 00:05:04.109
So now we're gonna say this is a form,
and this whole div goes in.

61
00:05:04.109 --> 00:05:10.173
And this form is gonna require a button,
that's gonna be a Save button.

62
00:05:10.173 --> 00:05:13.541
And the form is going
to be posted somewhere.

63
00:05:13.541 --> 00:05:16.586
Well, it's going to be posted to itself,
so

64
00:05:16.586 --> 00:05:21.887
I don't actually have to do anything, but
I do have to say method is POST on it.

65
00:05:21.887 --> 00:05:25.425
So now I have a Save button, and
if I change anything, if I hit Enter,

66
00:05:25.425 --> 00:05:27.686
it's gonna post the form back into itself.

67
00:05:27.686 --> 00:05:34.654
Except, the system is gonna complain
because we didn't do anything yet, right?

68
00:05:34.654 --> 00:05:35.551
Yeah, it just didn't render.

69
00:05:35.551 --> 00:05:37.585
Okay, the problem is we
don't have a POST handler,

70
00:05:37.585 --> 00:05:39.075
and so the system just kinda crashed.

71
00:05:39.075 --> 00:05:43.719
You posted over here and you didn't
tell me what to do, so I'm dying.

72
00:05:43.719 --> 00:05:48.094
So let's write a onPost method.

73
00:05:48.094 --> 00:05:51.542
And again,
we're gonna create a request handler.

74
00:05:51.542 --> 00:05:56.850
[COUGH] And in this case, we're gonna
do something slightly different.

75
00:05:56.850 --> 00:06:03.083
The basic idea is we're just gonna
extract, let's see, what does it, no.

76
00:06:03.083 --> 00:06:06.838
You're trying to be helpful, but
you're actually wrong on this one,

77
00:06:06.838 --> 00:06:08.036
so we'd say request.

78
00:06:08.036 --> 00:06:11.497
And let me just leave this,

79
00:06:11.497 --> 00:06:17.073
request.formData, const data=await.

80
00:06:17.073 --> 00:06:18.701
So this is how we get the form data.

81
00:06:21.659 --> 00:06:24.689
And here we're gonna do some
checks on the form data.

82
00:06:24.689 --> 00:06:30.138
So if isValid, oops,

83
00:06:32.478 --> 00:06:37.935
Then we're gonna do something, otherwise
we're just gonna return something,

84
00:06:37.935 --> 00:06:40.476
which is gonna return the data again.

85
00:06:40.476 --> 00:06:44.668
The isValid,
I'm gonna declare here for now, and

86
00:06:44.668 --> 00:06:47.408
we will get back to it in a second.

87
00:06:47.408 --> 00:06:48.890
You're not helping.

88
00:06:48.890 --> 00:06:53.841
So data is right, okay, so that's okay.

89
00:06:57.950 --> 00:07:02.093
So data, and so we have to say contact.

90
00:07:02.093 --> 00:07:06.260
Contact is, and it's the contact,

91
00:07:06.260 --> 00:07:11.240
if it's the contact, isValid, contact.

92
00:07:11.240 --> 00:07:15.295
And for now,
we're just gonna say return false.

93
00:07:15.295 --> 00:07:20.460
Export function, I guess this
export is unnecessary over here.

94
00:07:26.265 --> 00:07:28.831
Let's see, formData,
yep, and then contact.

95
00:07:28.831 --> 00:07:31.735
So, contact has ID, yep.

96
00:07:31.735 --> 00:07:34.143
And then it has name.

97
00:07:34.143 --> 00:07:35.300
This is, again,

98
00:07:35.300 --> 00:07:41.282
one of those areas that we're gonna have
a more type-safe solution in the future.

99
00:07:41.282 --> 00:07:43.717
Wow, autopilot, you're good.

100
00:07:43.717 --> 00:07:47.974
Okay, we're gonna have some more
better solution in the future.

101
00:07:47.974 --> 00:07:53.423
And for here, I'm just gonna
ignore this part for a second.

102
00:07:53.423 --> 00:07:56.693
And for now, we're gonna just basically
fail it in every single case.

103
00:07:56.693 --> 00:08:00.128
But what that means now that I
can go change it, hit Enter, and

104
00:08:00.128 --> 00:08:01.794
the form data is still there.

105
00:08:01.794 --> 00:08:07.660
Notice what happened, I've changed
the data, we posted it to the server.

106
00:08:07.660 --> 00:08:11.849
The server, because it said, for whatever
reason, it decided it's invalid, right?

107
00:08:11.849 --> 00:08:16.002
We haven't implemented that thing,
it just returned the data back to us.

108
00:08:16.002 --> 00:08:20.105
And because it returned the data back to
us, we got the data back as an endpoint,

109
00:08:20.105 --> 00:08:22.571
and we just re-rendered
it back the way it was.

110
00:08:22.571 --> 00:08:28.052
And so, we now have an easy way
of kind of double-checking it.

111
00:08:28.052 --> 00:08:29.944
But let's change this slightly.

112
00:08:29.944 --> 00:08:35.847
So, let's say that here we say contact,

113
00:08:35.847 --> 00:08:40.745
and here we're gonna say errors.

114
00:08:40.745 --> 00:08:43.251
And right now we have no errors.

115
00:08:43.251 --> 00:08:47.552
So now, instead of Contact,
we say it's a ContactForm.

116
00:08:47.552 --> 00:08:52.348
And so, let's declare type interface

117
00:08:52.348 --> 00:08:58.171
ContactForm as the contact,
and then errors.

118
00:08:58.171 --> 00:09:07.065
Which is going to be, I'm gonna cheat
again because I don't remember.

119
00:09:13.009 --> 00:09:15.197
Okay, let me see if I can figure it out,
hold on.

120
00:09:15.197 --> 00:09:20.074
What we want, we want a object that

121
00:09:20.074 --> 00:09:24.781
is string, which is keyof, no,

122
00:09:24.781 --> 00:09:29.837
key of, is it one word, two words?

123
00:09:29.837 --> 00:09:32.787
Key of contact?

124
00:09:32.787 --> 00:09:35.820
So we wanna have the same contact.

125
00:09:41.270 --> 00:09:46.412
Key in, no.

126
00:09:46.412 --> 00:09:48.876
Anybody remember how to
do this in TypeScript?

127
00:09:53.748 --> 00:09:59.813
Keyof [INAUDIBLE] any type,
key of Contact, yeah, okay, hold on.

128
00:10:08.869 --> 00:10:16.361
P in keyof, okay, sorry,
it's P in keyof, there we go.

129
00:10:16.361 --> 00:10:18.838
So now we're saying, look,

130
00:10:18.838 --> 00:10:24.693
we have the same set of keys as you
had before, but they're optional.

131
00:10:24.693 --> 00:10:26.898
So for each property in contact,

132
00:10:26.898 --> 00:10:30.299
we have now an error property
inside of the errors.

133
00:10:30.299 --> 00:10:31.780
Does that make sense?

134
00:10:31.780 --> 00:10:35.738
Okay, so
we originally sent it with no errors.

135
00:10:35.738 --> 00:10:42.096
And now [COUGH] let's say that we go and
validate this thing.

136
00:10:42.096 --> 00:10:46.629
And so, we have the contact, and so

137
00:10:46.629 --> 00:10:53.141
we need to have the whole data,
so, const data =,

138
00:10:54.989 --> 00:11:00.602
contact: contact, and errors is this.

139
00:11:00.602 --> 00:11:05.816
And then so we wanna verify isValid,

140
00:11:09.963 --> 00:11:15.502
data, name, so, isRequired,
how about that?

141
00:11:24.423 --> 00:11:28.965
So we're saying that the name,
and then this becomes object.

142
00:11:34.556 --> 00:11:36.408
Actually, let's do contact.

143
00:11:40.674 --> 00:11:43.720
And then the error goes into data.errors,
perfect.

144
00:11:46.157 --> 00:11:54.811
Errors, and that's,
Record of string, string.

145
00:11:57.479 --> 00:12:04.853
And then, sorry, field, which is a,
let's just say it's a string for now.

146
00:12:04.853 --> 00:12:10.892
So now what we're gonna do
is we're gonna say it is if.

147
00:12:10.892 --> 00:12:16.493
So we're saying,
if contact name has a string,

148
00:12:16.493 --> 00:12:21.409
sorry, field, then if it doesn't have,

149
00:12:21.409 --> 00:12:24.960
rather, if it doesn't have,

150
00:12:24.960 --> 00:12:29.624
then errors field should say required.

151
00:12:32.617 --> 00:12:36.366
And then this should say it's not
a string, this is a keyof contact

152
00:12:36.366 --> 00:12:41.116
&gt;&gt; Your type needs to be field, not filed,

153
00:12:41.116 --> 00:12:41.961
41.

154
00:12:45.151 --> 00:12:49.862
&gt;&gt; Thank you, so now we're saying, hey,
double-check that this is required, right?

155
00:12:49.862 --> 00:12:52.098
So now, what is this complaining about?

156
00:12:52.098 --> 00:12:54.125
This doesn't return.

157
00:12:54.125 --> 00:12:58.719
All right, so this needs to return,

158
00:13:01.987 --> 00:13:05.736
true, otherwise return false, right?

159
00:13:05.736 --> 00:13:09.773
[COUGH] So now we're gonna fall
down this particular path.

160
00:13:09.773 --> 00:13:15.247
isRequired, so isRequired, so, no,

161
00:13:15.247 --> 00:13:21.591
isRequired becomes true
when everything's okay.

162
00:13:21.591 --> 00:13:25.348
Otherwise it falls through here,
and we're gonna get back data.

163
00:13:25.348 --> 00:13:30.800
And so now what you're gonna get is, Here

164
00:13:30.800 --> 00:13:35.937
in this form, return.

165
00:13:40.383 --> 00:13:43.759
Oops, okay, so

166
00:13:43.759 --> 00:13:49.792
now we can extract const c =,

167
00:13:57.040 --> 00:14:03.943
Okay, and so now,
we can say if data.error,

168
00:14:03.943 --> 00:14:10.140
let's just return const data.errors.

169
00:14:10.140 --> 00:14:15.161
We can say errors, and

170
00:14:15.161 --> 00:14:21.775
so errors.name, perfect.

171
00:14:24.610 --> 00:14:26.012
Let's just do it for name for now.

172
00:14:26.012 --> 00:14:32.343
So now if, Data contact,
what were you complaining about?

173
00:14:39.958 --> 00:14:44.589
No, yes, because of contact.

174
00:14:46.335 --> 00:14:49.028
Form, yeah.

175
00:14:51.191 --> 00:14:55.334
Cannot read properties of undefined,
why is it trying to be undefined?

176
00:15:00.198 --> 00:15:00.729
Okay.

177
00:15:05.903 --> 00:15:08.312
Data is undefined because,

178
00:15:21.383 --> 00:15:26.375
Okay, There we go, so
now if I delete this,

179
00:15:29.682 --> 00:15:34.971
Okay, let me simplify this code
because I'm confused on it.

180
00:15:38.115 --> 00:15:40.418
Okay, required, right here.

181
00:15:40.418 --> 00:15:42.947
Sorry, I just didn't see it,
it's right here.

182
00:15:42.947 --> 00:15:48.776
So actually, let's do it span,

183
00:15:48.776 --> 00:15:52.740
span, and then go to,

184
00:15:54.925 --> 00:16:01.592
.error, color: red, there we go, okay.

185
00:16:01.592 --> 00:16:06.473
So, when I type in something, it's fine.

186
00:16:06.473 --> 00:16:10.540
If I delete it, then it says required.

187
00:16:10.540 --> 00:16:14.388
I'm gonna pause it because I think I
went through it a little too fast.

188
00:16:14.388 --> 00:16:17.054
So let's go from the beginning.

189
00:16:17.054 --> 00:16:22.004
When we originally get it,
we push in the contact property, but

190
00:16:22.004 --> 00:16:27.060
we also push in an empty object
that contains the errors, right?

191
00:16:27.060 --> 00:16:28.872
At the beginning there are no errors,

192
00:16:28.872 --> 00:16:31.652
because you're editing
something that is already fine.

193
00:16:31.652 --> 00:16:35.046
[COUGH] And
then when the user goes and edits,

194
00:16:35.046 --> 00:16:37.900
this form posts back to the same URL.

195
00:16:37.900 --> 00:16:43.314
And this onPost extracts
the data from the form,

196
00:16:43.314 --> 00:16:47.818
and then verifies if my name is present.

197
00:16:47.818 --> 00:16:55.356
If my name is not present, it inserts
the flag into the errors, right?

198
00:16:55.356 --> 00:17:00.519
And that flag is what then prints
out this particular error.

199
00:17:00.519 --> 00:17:06.580
So here we should probably say, The,

200
00:17:11.404 --> 00:17:17.449
Field, Is required, right?

201
00:17:21.062 --> 00:17:22.601
So now, it says the name is required.

