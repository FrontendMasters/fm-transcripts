WEBVTT

1
00:00:00.110 --> 00:00:03.213
&gt;&gt; Todd Gardner: So those were common
tools that you could just pick up,

2
00:00:03.213 --> 00:00:07.595
any one of you, run it against a site
that you own, a site that you don't own,

3
00:00:07.595 --> 00:00:12.210
whatever, and you get interesting
performance-related data.

4
00:00:12.210 --> 00:00:16.816
But if you do own the site,
if it's your site that you're trying to

5
00:00:16.816 --> 00:00:21.755
optimize things for, it's good to
use something beyond Lighthouse,

6
00:00:21.755 --> 00:00:26.364
something beyond your local Chrome,
because your local Chrome,

7
00:00:26.364 --> 00:00:29.437
your Lighthouse, whatever, is lab data.

8
00:00:29.437 --> 00:00:34.514
And if it's a site you own that's private,
you probably don't have CrUX data.

9
00:00:34.514 --> 00:00:36.974
Probably not, doesn't exist.

10
00:00:36.974 --> 00:00:41.002
Even if you do have CrUX data,
the CrUX data doesn't let you,

11
00:00:41.002 --> 00:00:44.382
you necessarily drill
in like Web page test.

12
00:00:44.382 --> 00:00:46.326
It just says, here's your scores,

13
00:00:46.326 --> 00:00:49.032
you can't see four people
who have a bad CLS score.

14
00:00:49.032 --> 00:00:51.862
Let me see the waterfall so
I can recreate what's happening.

15
00:00:51.862 --> 00:00:54.684
There's no way to do that with
the tools I've showed you.

16
00:00:54.684 --> 00:00:57.042
That's where RUM tools come in.

17
00:00:57.042 --> 00:00:58.826
Real user monitoring.

18
00:00:58.826 --> 00:01:03.490
Real user monitoring is
the data that you can use to

19
00:01:03.490 --> 00:01:08.278
collect that data from
those real users yourself.

20
00:01:08.278 --> 00:01:13.161
And then there's not any limitations
around making things anonymous,

21
00:01:13.161 --> 00:01:16.052
or fuzzing it, or only capturing so much.

22
00:01:16.052 --> 00:01:20.054
You can capture all the data
you want about your users so

23
00:01:20.054 --> 00:01:22.497
that you can try and recreate it.

24
00:01:22.497 --> 00:01:23.747
There's lots of different tools.

25
00:01:23.747 --> 00:01:30.008
If you Google RUM, you might get RUM and
Bacardi and that sort of stuff.

26
00:01:30.008 --> 00:01:33.886
But if you do a lot of stuff in web
performance like me and Google knows who

27
00:01:33.886 --> 00:01:38.041
you are and you type RUM, then you'll
get a bunch of web performance tools.

28
00:01:38.041 --> 00:01:42.177
And here's the main differences
between these sort of things.

29
00:01:42.177 --> 00:01:48.159
So, both the Chrome user experience report
and real user monitoring are field data.

30
00:01:48.159 --> 00:01:51.969
This is both real data
from your real users.

31
00:01:51.969 --> 00:01:55.509
CrUX only represents
logged in Chrome users,

32
00:01:55.509 --> 00:01:59.682
so you're not going to get
any data from Safari users or

33
00:01:59.682 --> 00:02:04.232
Firefox users or
people who didn't log into their Chrome.

34
00:02:04.232 --> 00:02:08.768
Whereas real user monitoring gets all of
your data from every browser that you can

35
00:02:08.768 --> 00:02:09.375
capture.

36
00:02:09.375 --> 00:02:13.792
You might not always have every metric
if the browser doesn't support it,

37
00:02:13.792 --> 00:02:18.209
like you still won't magically get
Core Web Vitals from Safari users, but

38
00:02:18.209 --> 00:02:19.861
you'll have some data.

39
00:02:19.861 --> 00:02:22.211
Whatever is capable of being captured.

40
00:02:22.211 --> 00:02:25.061
CrUX is just the top
million public websites.

41
00:02:25.061 --> 00:02:27.951
Real user monitoring can capture
everything from whatever set you want.

42
00:02:29.251 --> 00:02:31.781
CrUX is anonymous and public data.

43
00:02:31.781 --> 00:02:34.241
Your competitors can look it up,
anybody can look it up.

44
00:02:34.241 --> 00:02:37.180
The real user monitoring data is yours.

45
00:02:37.180 --> 00:02:39.537
CrUX is the 28 day rolling average.

46
00:02:39.537 --> 00:02:41.357
Real user monitoring can
give you real-time data.

47
00:02:41.357 --> 00:02:44.614
So, you could see,
how fast was my site performing today?

48
00:02:44.614 --> 00:02:46.942
I launched a change earlier today,

49
00:02:46.942 --> 00:02:50.907
is my site faster now than
it was before that change?

50
00:02:50.907 --> 00:02:52.617
Real user monitoring can do that.

51
00:02:52.617 --> 00:02:56.647
And CrUX is all based in Google BigQuery,
that's where that data lives, real user

52
00:02:56.647 --> 00:03:01.030
monitoring is custom dashboards, either
something you build or something you buy.

53
00:03:01.030 --> 00:03:04.578
It's a tool that you use in some case or
another.

54
00:03:04.578 --> 00:03:05.660
How do RUM tools work?

55
00:03:05.660 --> 00:03:08.677
Usually, it's code that you have to
install that does that same sort of

56
00:03:08.677 --> 00:03:10.370
performance observer pattern.

57
00:03:10.370 --> 00:03:13.713
What these agents would look
like under covers, if you like,

58
00:03:13.713 --> 00:03:18.087
kind of break them apart, is there's
a bunch of performance observers grabbing

59
00:03:18.087 --> 00:03:22.160
data and sending it off somewhere
to be logged and reported.

60
00:03:22.160 --> 00:03:26.202
So generally, you'll pull in an agent if
you're using a service, a third party,

61
00:03:26.202 --> 00:03:29.838
you'll pull in an agent, you'll install
it, you need to give it a token or

62
00:03:29.838 --> 00:03:30.440
whatever.

63
00:03:30.440 --> 00:03:35.430
And there's lots of these tools,
and you've heard of a lot of them.

64
00:03:35.430 --> 00:03:40.354
So, I like to think of two kind of
categories of them based on what

65
00:03:40.354 --> 00:03:45.206
kind of developer you are,
what context are you operating in?

66
00:03:45.206 --> 00:03:49.648
If you're in a big enterprise place,
you have a big website or

67
00:03:49.648 --> 00:03:55.811
you have a big company, it's got a lot of
money, you have lots of engineering teams.

68
00:03:55.811 --> 00:04:00.101
You probably have access to
some enterprise RUM tool,

69
00:04:00.101 --> 00:04:05.988
like Akamai mPulse, is the definitive
one that kind of created the genre.

70
00:04:05.988 --> 00:04:10.747
Dynatrace, AppDynamics, Datadog,
Sentry, the list goes on and on.

71
00:04:10.747 --> 00:04:15.384
If you have a big APM kind of
monitoring tool that executives got

72
00:04:15.384 --> 00:04:20.023
taken out to golf outings to purchase,
it probably has some RUM

73
00:04:20.023 --> 00:04:24.510
capability in it somewhere that
you can use to get this data.

74
00:04:24.510 --> 00:04:28.125
The other class of tools is, what I like
to think of as project-based RUM tools,

75
00:04:28.125 --> 00:04:31.793
where you have this website and you wanna
monitor it, but you don't have, like,

76
00:04:31.793 --> 00:04:33.356
the budget for that sort of thing.

77
00:04:33.356 --> 00:04:35.106
You have a smaller team.

78
00:04:35.106 --> 00:04:39.349
Like, you don't have
$100,000 a year to spend on

79
00:04:39.349 --> 00:04:43.347
something like the tools
on the left tend to cost.

80
00:04:43.347 --> 00:04:48.177
You wanna spend something on,
help you fix one particular project.

81
00:04:48.177 --> 00:04:50.966
Here's a bunch of tools that
kind of fit in that category.

82
00:04:50.966 --> 00:04:54.467
Request Metrics,, SpeedCurve,
gets a lot of notice.

83
00:04:54.467 --> 00:04:56.807
RUMVision, Pingdom, Raygun.

84
00:04:56.807 --> 00:05:00.905
There's a ton more, if you already use
a tool, your favorite tool might be,

85
00:05:00.905 --> 00:05:02.493
I might have not excluded it.

86
00:05:02.493 --> 00:05:06.285
These are just the ones that
I think about and talk about,

87
00:05:06.285 --> 00:05:08.189
have seen referenced a lot.

88
00:05:08.189 --> 00:05:12.273
I'm gonna talk a little bit about
some specifics on RequestMetrics.

89
00:05:12.273 --> 00:05:15.757
So, disclosure, I built Request Metrics.

90
00:05:15.757 --> 00:05:18.649
It is the RUM tool that I
created based on my knowledge.

91
00:05:18.649 --> 00:05:22.629
And where a lot of my web performance
knowledge comes from is in kinda gathering

92
00:05:22.629 --> 00:05:24.330
that data and what it looks like.

93
00:05:24.330 --> 00:05:29.327
So, I'm gonna use that as a quick example
of the kind of data that RUM tooling can

94
00:05:29.327 --> 00:05:30.758
get and how you use it.

