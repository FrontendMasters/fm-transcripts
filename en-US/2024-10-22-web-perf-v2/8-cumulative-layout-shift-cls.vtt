WEBVTT

1
00:00:00.000 --> 00:00:03.847
&gt;&gt; Todd Gardner: All right, let's
talk about the second core web vital,

2
00:00:03.847 --> 00:00:06.262
Cumulative Layout Shift, or CLS.

3
00:00:06.262 --> 00:00:09.413
Now, these are weird words.

4
00:00:09.413 --> 00:00:13.053
I mean, all the core web vitals
are kind of weird words.

5
00:00:13.053 --> 00:00:15.794
When I talk to people who aren't
in tech about these things or

6
00:00:15.794 --> 00:00:18.481
they hear me mention,
this is a really complicated word for

7
00:00:18.481 --> 00:00:22.377
what you're actually talking about, and
I don't know why they're such big words.

8
00:00:22.377 --> 00:00:25.506
But we're gonna break them down so
you can really understand them.

9
00:00:25.506 --> 00:00:32.325
CLS measures how smooth and
predictably elements load into the page.

10
00:00:32.325 --> 00:00:36.144
So during that loading sequence,
are things moving around?

11
00:00:36.144 --> 00:00:37.721
Are things reorganizing?

12
00:00:37.721 --> 00:00:42.289
Does the user feel like the page
is predictable during that initial

13
00:00:42.289 --> 00:00:43.684
startup sequence?

14
00:00:43.684 --> 00:00:46.024
Because if the user
feels it's predictable,

15
00:00:46.024 --> 00:00:48.249
they can start interacting with it sooner.

16
00:00:48.249 --> 00:00:51.358
So how does this represent
itself in the real world?

17
00:00:51.358 --> 00:00:55.820
So here's just a little example
that shows off a layout shift.

18
00:00:55.820 --> 00:01:00.988
Let's say I'm looking at a page and I'm
trying to click to do something awesome.

19
00:01:00.988 --> 00:01:06.972
Well, before I click, these irritating ads
keep jumping into the page asynchronously.

20
00:01:06.972 --> 00:01:10.029
Each one of these is a layout shift.

21
00:01:10.029 --> 00:01:15.520
And it's causing that frustration
because the user is unsure whether or

22
00:01:15.520 --> 00:01:19.670
not the page is done,
if more things are gonna happen.

23
00:01:19.670 --> 00:01:23.995
Arguably, some sites appear to be
doing this almost intentionally,

24
00:01:23.995 --> 00:01:26.867
to get you to accidentally
click on their ads.

25
00:01:26.867 --> 00:01:29.090
We've seen that anti-pattern a lot.

26
00:01:29.090 --> 00:01:33.086
Communal of layout shift, the fact
that Google is now measuring this,

27
00:01:33.086 --> 00:01:36.828
is in some ways addressing that and
making it less and less common.

28
00:01:36.828 --> 00:01:41.769
Because it is penalizing them in terms of
their SEO ranking for that anti pattern.

29
00:01:41.769 --> 00:01:45.595
But doing it intentionally
isn't the only way it happens,

30
00:01:45.595 --> 00:01:49.509
a lot of us do this accidentally and
cause this frustration.

31
00:01:49.509 --> 00:01:54.299
So if you wanna see how this works
firsthand, I built a little game for

32
00:01:54.299 --> 00:01:56.538
this that I think is really fun.

33
00:01:56.538 --> 00:01:59.191
And it's at shifty.site, and
we're gonna play it right now.

34
00:01:59.191 --> 00:02:03.159
Feel free, if you're watching online,
to jump on and play it or whatever,

35
00:02:03.159 --> 00:02:04.525
it's a fun little thing.

36
00:02:04.525 --> 00:02:09.256
So, I'm going to go out to shifty.site.

37
00:02:12.790 --> 00:02:16.240
&gt;&gt; Todd Gardner: And I call it,
The Layout Shift Challenge.

38
00:02:16.240 --> 00:02:20.403
Now, this site basically,
intentionally creates tons and

39
00:02:20.403 --> 00:02:24.076
tons of layout shifts and
gives you the challenge of,

40
00:02:24.076 --> 00:02:29.315
can you interact with the site fast
enough despite all of the layout shifts?

41
00:02:29.315 --> 00:02:32.786
How many of these deal of
the days can you click and

42
00:02:32.786 --> 00:02:37.197
add to your cart while the layout
is rapidly shifting around?

43
00:02:37.197 --> 00:02:41.406
My best is eight, let's see if I
can go faster here for us live.

44
00:02:44.607 --> 00:02:48.934
&gt;&gt; Todd Gardner: Intense,
it's crunch time.

45
00:02:48.934 --> 00:02:50.036
Where is it?

46
00:02:50.036 --> 00:02:51.940
There it was.

47
00:02:51.940 --> 00:02:53.489
I got one.

48
00:02:53.489 --> 00:02:55.110
Got another one.

49
00:02:55.110 --> 00:02:57.611
No, I don't wanna improve the website.

50
00:02:57.611 --> 00:02:58.675
I misclicked.

51
00:02:58.675 --> 00:02:59.980
No, I don't wanna join the newsletter.

52
00:03:02.241 --> 00:03:07.028
&gt;&gt; Todd Gardner: Every time one of
these widgets load, oop, there's one,

53
00:03:07.028 --> 00:03:09.518
it's causing a layout shift,

54
00:03:09.518 --> 00:03:15.384
as the rest of the document has to move
around it as this new thing pops in.

55
00:03:15.384 --> 00:03:19.064
Oop, one second, I got 9.

56
00:03:19.064 --> 00:03:21.824
I clicked 11 times, with 82% accuracy.

57
00:03:21.824 --> 00:03:25.691
So this is just a little fun thing that I
built to show off what layout shifts are,

58
00:03:25.691 --> 00:03:28.823
and you can feel free to play this or
share it around or whatever.

59
00:03:28.823 --> 00:03:31.504
It's just a little fun toy.

60
00:03:31.504 --> 00:03:32.441
It's actually open source.

61
00:03:32.441 --> 00:03:35.918
It's not on Github,
if you wanna see how I built it.

62
00:03:35.918 --> 00:03:42.136
Anyway, what this is showing off is,
in a very, very extreme case,

63
00:03:42.136 --> 00:03:46.652
how frustrating layout
shifts can be to the user.

64
00:03:46.652 --> 00:03:51.521
Now, this particular game
generate a CLS score of 14.58,

65
00:03:51.521 --> 00:03:56.030
which is ridiculously huge,
and I'm gonna show you next,

66
00:03:56.030 --> 00:04:00.916
how do we get to that score, and
how do we bother measuring that.

67
00:04:00.916 --> 00:04:03.035
All right, so, cumulative layout shift.

68
00:04:03.035 --> 00:04:05.489
So here is a little timeline,

69
00:04:05.489 --> 00:04:10.603
two frames of the load of our
developer stickers online site.

70
00:04:10.603 --> 00:04:14.084
In the left frame, it looks like
a lot of the page is loaded, and

71
00:04:14.084 --> 00:04:17.766
in the right frame, this annoying
promo banner comes down to try,

72
00:04:17.766 --> 00:04:20.228
I'm trying to ship more of those stickers.

73
00:04:20.228 --> 00:04:25.988
So I'm doing like an ad for it at the top
of my page, but it pushes everything down.

74
00:04:25.988 --> 00:04:29.132
It forces the rest of
the document to move.

75
00:04:29.132 --> 00:04:32.520
So that's a layout shift happening,
but how do we measure that?

76
00:04:32.520 --> 00:04:36.257
What is the score of that layout shift?

77
00:04:36.257 --> 00:04:40.235
A layout shift is measured
by the impact fraction.

78
00:04:40.235 --> 00:04:44.081
So, how much of the page
was impacted by the move,

79
00:04:44.081 --> 00:04:48.661
times the distance fraction,
so how much across the page,

80
00:04:48.661 --> 00:04:53.254
I'm sorry, not page,
across the viewport, did it move?

81
00:04:53.254 --> 00:04:55.421
We're only concerned with the viewport,

82
00:04:55.421 --> 00:04:58.436
the part of the screen that is
visible in the user's frame.

83
00:04:58.436 --> 00:04:59.785
That's all that we're measuring.

84
00:04:59.785 --> 00:05:05.942
And so, how much of that viewport
was impacted by the shift,

85
00:05:05.942 --> 00:05:10.426
and how far across
the viewport did it move?

86
00:05:10.426 --> 00:05:11.429
So let's get into that.

87
00:05:11.429 --> 00:05:14.034
All right, so here's that page.

88
00:05:14.034 --> 00:05:18.088
In this example,
the viewport height is 768 pixels.

89
00:05:18.088 --> 00:05:21.123
Now, I'm gonna do an example
that only measures height, like,

90
00:05:21.123 --> 00:05:22.456
we're just shifting down.

91
00:05:22.456 --> 00:05:25.566
But layout shifts happen
in both dimensions, like,

92
00:05:25.566 --> 00:05:29.655
we can shift down, we can shift right,
we can shift in any direction.

93
00:05:29.655 --> 00:05:34.850
And so, just to simplify this calculation,
everything in this

94
00:05:34.850 --> 00:05:39.864
example shifts down,
just to make our calculation simpler.

95
00:05:39.864 --> 00:05:42.955
So, it looks like we're
measuring in desktop view,

96
00:05:42.955 --> 00:05:46.953
why are we not measuring in mobile or,
what's the difference here?

97
00:05:46.953 --> 00:05:50.692
I'll show you a mobile example next,
this matters on both, right?

98
00:05:50.692 --> 00:05:53.844
Layout just happen on every size device.

99
00:05:53.844 --> 00:05:55.819
&gt;&gt; Speaker 2: And for Google,
what do they care about?

100
00:05:55.819 --> 00:05:57.683
&gt;&gt; Todd Gardner: They care about both,
okay?

101
00:05:57.683 --> 00:06:01.565
So, the core web vitals, all of them,

102
00:06:01.565 --> 00:06:06.163
Google captures them for
desktop and mobile.

103
00:06:06.163 --> 00:06:09.217
And so, they affect both.

104
00:06:09.217 --> 00:06:13.449
We're not entirely sure, Google's never
actually directly said whether or

105
00:06:13.449 --> 00:06:16.334
not desktop ranking is
affected by desktop scores and

106
00:06:16.334 --> 00:06:18.853
mobile ranking is affected
by mobile scores.

107
00:06:18.853 --> 00:06:22.023
Google's never explicitly said that.

108
00:06:22.023 --> 00:06:25.488
It's kind of inferred,
but we don't know that.

109
00:06:25.488 --> 00:06:29.022
Now, what I didn't really talk about,
but maybe as a good little aside,

110
00:06:29.022 --> 00:06:31.988
is that Google does what's
called mobile-first indexing.

111
00:06:31.988 --> 00:06:37.166
So when Google indexes your website,
it's using a mobile version of it.

112
00:06:37.166 --> 00:06:40.313
It's only indexing the content
that would be visible on mobile.

113
00:06:40.313 --> 00:06:43.766
So if you have like a bunch of other stuff
that's only visible on desktop screen

114
00:06:43.766 --> 00:06:46.924
sizes, it's not even in Google's index,
it doesn't care about it.

115
00:06:46.924 --> 00:06:51.669
That change went in quite a few years,
I think like 2018, 2017.

116
00:06:51.669 --> 00:06:56.095
So there might be a use case where Google,
you could claim,

117
00:06:56.095 --> 00:07:00.786
that Google only cares about
the mobile core web vital scores,

118
00:07:00.786 --> 00:07:04.165
because they're mobile-first indexing.

119
00:07:04.165 --> 00:07:05.955
But they've never said that.

120
00:07:05.955 --> 00:07:07.406
They've never said it directly.

121
00:07:07.406 --> 00:07:10.918
There's no data to indicate that,
so we don't know.

122
00:07:10.918 --> 00:07:14.629
What we do know is that Google does
capture the data separately for

123
00:07:14.629 --> 00:07:15.847
desktop and mobile.

124
00:07:15.847 --> 00:07:20.086
And so in a lot of my examples, I'm gonna
show you both a desktop version and

125
00:07:20.086 --> 00:07:21.177
a mobile version.

126
00:07:21.177 --> 00:07:24.147
Sometimes I don't, but
the data is applied the same way.

127
00:07:24.147 --> 00:07:26.651
Is that your question?

128
00:07:26.651 --> 00:07:28.146
Cool, great.

129
00:07:28.146 --> 00:07:29.297
So here's an example.

130
00:07:29.297 --> 00:07:33.748
This is an example on a small desktop.

131
00:07:33.748 --> 00:07:36.713
Here we have a viewport
height of 768 pixels.

132
00:07:36.713 --> 00:07:39.809
Obviously, the page is a lot longer, but

133
00:07:39.809 --> 00:07:43.539
the user's viewport is
only 768 pixels high.

134
00:07:43.539 --> 00:07:52.029
Now, the impact size of this is the whole
thing minus that 60 pixel header on top.

135
00:07:52.029 --> 00:07:57.767
So, 708 pixels are the impact size
of this shift when that header or

136
00:07:57.767 --> 00:08:00.401
when that promo bar comes down.

137
00:08:00.401 --> 00:08:05.371
Everything that changes,
every pixel that has to potentially

138
00:08:05.371 --> 00:08:09.745
change as part of this layout
shift is the impact size.

139
00:08:09.745 --> 00:08:15.334
&gt;&gt; Todd Gardner: So, yeah,
the impact fraction is we take

140
00:08:15.334 --> 00:08:20.775
that impact size divided by the height.

141
00:08:20.775 --> 00:08:23.119
So it's 0.922.

142
00:08:23.119 --> 00:08:29.583
92.2% of the viewport was
impacted by this layout shift.

143
00:08:29.583 --> 00:08:32.023
So, what actually happened?

144
00:08:32.023 --> 00:08:33.992
Let's talk about the distance fraction.

145
00:08:33.992 --> 00:08:36.565
So again, same viewport, 768 pixels.

146
00:08:36.565 --> 00:08:42.955
The distance was really just when
that promo banner got rendered in.

147
00:08:42.955 --> 00:08:46.777
When that promo banner came in,
it was 180 pixels tall.

148
00:08:46.777 --> 00:08:50.039
And so,
the distance moved is only 180 pixels.

149
00:08:50.039 --> 00:08:55.717
So the distance fraction is 180 over 768,

150
00:08:55.717 --> 00:08:59.603
or 23%, 0.234, okay?

151
00:08:59.603 --> 00:09:04.995
So the layout shift value,
what was the score of this layout shift?

152
00:09:04.995 --> 00:09:07.377
Is, we multiply those two things together.

153
00:09:07.377 --> 00:09:11.880
So, 0.922 times 0.234 is 0.215.

154
00:09:11.880 --> 00:09:16.803
It was a 21, it's not really a percent
anymore, cuz we kinda multiply them

155
00:09:16.803 --> 00:09:21.831
together, Google just calls this
the score, or the value, was 0.215.

156
00:09:21.831 --> 00:09:26.044
That was the score of this layout shift,
how bad it was.

157
00:09:26.044 --> 00:09:30.304
Now, this applies on mobile as well,
to your question exactly.

158
00:09:30.304 --> 00:09:33.144
And in some cases,
it's a lot worse on mobile,

159
00:09:33.144 --> 00:09:36.208
because we have a smaller
screen size to work with.

160
00:09:36.208 --> 00:09:39.263
The viewport dimension
is smaller generally,

161
00:09:39.263 --> 00:09:41.561
on mobile devices than on desktop.

162
00:09:41.561 --> 00:09:48.012
And when the viewport is smaller,
smaller moves generate bigger scores.

163
00:09:48.012 --> 00:09:51.675
So on this case,
if we put the whole thing together,

164
00:09:51.675 --> 00:09:56.943
the impact fraction here is 0.929,
and the distance is 0.308.

165
00:09:56.943 --> 00:10:01.709
We multiply it together, and we get an
even higher score on mobile than we did on

166
00:10:01.709 --> 00:10:03.962
desktop, for the exact same thing.

167
00:10:03.962 --> 00:10:08.077
Because the score is dependent on
the size of the user's viewport.

168
00:10:08.077 --> 00:10:12.510
And so, this is why Google will
capture CLS and LCP and IMP,

169
00:10:12.510 --> 00:10:15.791
all three of the web
vitals on both mobile and

170
00:10:15.791 --> 00:10:20.156
desktop, because the scores
can change significantly.

171
00:10:20.156 --> 00:10:24.662
So as I said at the beginning,
this applies to both height and width.

172
00:10:24.662 --> 00:10:28.856
Now, I did an example just for
simple, describing the problem,

173
00:10:28.856 --> 00:10:31.151
that was just about a height shift.

174
00:10:31.151 --> 00:10:33.463
But a width shift happens the same way.

175
00:10:33.463 --> 00:10:37.232
If you have an image that pops in,
say, next to some text, and

176
00:10:37.232 --> 00:10:42.018
all that text moves as part of when that
image loads, that is also a layout shift

177
00:10:42.018 --> 00:10:46.097
that calculates both the height and
width of how far things moved.

178
00:10:46.097 --> 00:10:48.592
That calculation is just
a lot more complicated.

179
00:10:48.592 --> 00:10:53.952
I actually went into the blink source code
and found where that calculation happens,

180
00:10:53.952 --> 00:10:57.534
and it's like 600 lines long and
really dense C code.

181
00:10:57.534 --> 00:11:01.435
And I didn't feel like that was a good
thing to throw on screen and try and

182
00:11:01.435 --> 00:11:02.094
describe.

183
00:11:02.094 --> 00:11:04.749
But it does apply to both.

184
00:11:04.749 --> 00:11:09.537
All right, lastly,
there's this annoyingly big mathy word at

185
00:11:09.537 --> 00:11:12.829
the start of this thing called cumulative.

186
00:11:12.829 --> 00:11:17.353
And that just means, we're measuring
the sum of all layout shifts.

187
00:11:17.353 --> 00:11:22.537
It's not just one layout shift,
there's going to be, 1, 2, 5, 10, 100

188
00:11:22.537 --> 00:11:27.668
layout shifts on your website, depending
on how it's built and what's in there.

189
00:11:27.668 --> 00:11:31.109
And when we're measuring
the cumulative layout shift,

190
00:11:31.109 --> 00:11:35.709
we are adding together the score of
every single layout shift that happens.

191
00:11:35.709 --> 00:11:39.393
Now, there's some things
that don't count here.

192
00:11:39.393 --> 00:11:40.412
One thing is that,

193
00:11:40.412 --> 00:11:44.249
there will be shifts that happen
when the user does something, right?

194
00:11:44.249 --> 00:11:49.743
Like, oftentimes you'll click on
something to expand an accordion display,

195
00:11:49.743 --> 00:11:53.763
or you'll click on something and
something will appear.

196
00:11:53.763 --> 00:11:56.976
These are all like very common patterns,
and they don't count.

197
00:11:56.976 --> 00:11:58.988
They don't count against
your layout shift.

198
00:11:58.988 --> 00:12:03.368
If a layout shift happens within
500 milliseconds of a user action,

199
00:12:03.368 --> 00:12:04.685
it's not included.

200
00:12:04.685 --> 00:12:08.088
Because Google is trying to say,
no, elements,

201
00:12:08.088 --> 00:12:12.231
part of the page's behavior
shouldn't count against you.

202
00:12:12.231 --> 00:12:15.868
It's just things that happen
without the user doing something.

203
00:12:15.868 --> 00:12:17.251
Now, scrolls aren't part of this.

204
00:12:17.251 --> 00:12:21.941
A user action is like, click,
a type, that sort of thing.

205
00:12:21.941 --> 00:12:24.870
Scrolling should not
trigger layout shifts.

206
00:12:24.870 --> 00:12:29.227
Clicking can trigger layout shifts,
and it's okay.

207
00:12:29.227 --> 00:12:31.498
So how bad can this be?

208
00:12:31.498 --> 00:12:39.769
Well, 0.1, 0.1 is how good you
need to be in order to be good.

209
00:12:39.769 --> 00:12:45.216
Remember our example here, both of
these are enough to be a bad score.

210
00:12:45.216 --> 00:12:48.277
Both of these are enough
to get an SEO penalty.

211
00:12:48.277 --> 00:12:53.531
And our game shifty was like, what, 18,

212
00:12:53.531 --> 00:13:00.353
20, 24 something like that,
way more than 1.0.

213
00:13:00.353 --> 00:13:04.172
So you have to have very,
very low layout shift.

214
00:13:04.172 --> 00:13:08.798
You need to basically eliminate
this problem in order to get

215
00:13:08.798 --> 00:13:10.842
a good score from Google.

216
00:13:10.842 --> 00:13:15.251
Fortunately, it is not difficult
to eliminate this problem.

217
00:13:15.251 --> 00:13:19.287
There are lots and lots of good ways, and
we're gonna talk about all of those in

218
00:13:19.287 --> 00:13:22.041
our last section around
improving web performance,

219
00:13:22.041 --> 00:13:24.573
specifically when we
talk about improving CLS.

