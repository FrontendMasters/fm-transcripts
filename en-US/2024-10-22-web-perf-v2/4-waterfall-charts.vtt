WEBVTT

1
00:00:00.000 --> 00:00:03.742
&gt;&gt; Todd Gardner: Hopefully at
this point you feel like, crap,

2
00:00:03.742 --> 00:00:05.491
is my site fast enough?

3
00:00:05.491 --> 00:00:07.308
Web performance seems important.

4
00:00:07.308 --> 00:00:10.506
Hopefully, you're a little worried,
and that's okay.

5
00:00:10.506 --> 00:00:15.823
Cuz now we're gonna talk about
measuring web performance.

6
00:00:15.823 --> 00:00:16.627
Now, what do we talk about?

7
00:00:16.627 --> 00:00:18.714
What's in measuring?

8
00:00:18.714 --> 00:00:22.438
Well, first we're gonna talk
about the legacy metrics, so

9
00:00:22.438 --> 00:00:25.726
metrics that as far back as
the Internet has existed,

10
00:00:25.726 --> 00:00:28.808
that we use to decide whether or
not a page is fast.

11
00:00:28.808 --> 00:00:33.782
We're gonna talk about what they are, and
why they may not be as relevant anymore.

12
00:00:33.782 --> 00:00:38.568
Then we're gonna talk about the core
web vitals, which I mentioned already,

13
00:00:38.568 --> 00:00:42.484
the core web vitals being Google's
metrics to decide whether or

14
00:00:42.484 --> 00:00:45.262
not your SEO is good enough for
performance.

15
00:00:45.262 --> 00:00:48.895
We'll talk about a few other metrics that
exist out there and why they're relevant.

16
00:00:48.895 --> 00:00:51.583
We'll talk about capturing them,
how you collect them.

17
00:00:51.583 --> 00:00:55.658
And then some discussion of browser
support of these different metrics.

18
00:00:55.658 --> 00:01:00.147
Along the way, we're also gonna talk
about waterfall charts and flame charts,

19
00:01:00.147 --> 00:01:04.522
which we'll need in order to kind of
explain these metrics and what they mean.

20
00:01:04.522 --> 00:01:05.576
So let's get into it.

21
00:01:05.576 --> 00:01:08.570
Let's talk about,
measuring web performance.

22
00:01:08.570 --> 00:01:10.321
What does that mean?

23
00:01:10.321 --> 00:01:13.240
How do we measure fast?

24
00:01:13.240 --> 00:01:18.732
Well, in order to measure fast,
we need to know how to look at that data.

25
00:01:18.732 --> 00:01:23.962
And often, fast is measured in
a thing called a waterfall chart.

26
00:01:23.962 --> 00:01:27.193
Have any of you here heard
of a waterfall chart?

27
00:01:27.193 --> 00:01:29.902
You feel comfortable
with waterfall charts?

28
00:01:29.902 --> 00:01:31.088
Yeah, all right.

29
00:01:31.088 --> 00:01:34.840
In my career,
I saw waterfall charts forever, but

30
00:01:34.840 --> 00:01:39.726
it really wasn't until the last four or
five years that I really got

31
00:01:39.726 --> 00:01:44.372
into the details of understanding them and
what they tell you.

32
00:01:44.372 --> 00:01:49.298
Because you can get 60% of the information
kinda just glancing at them, but

33
00:01:49.298 --> 00:01:53.939
I didn't really understand them until
I really dived into performance.

34
00:01:53.939 --> 00:01:56.114
And so that's what we're
gonna do a little bit now.

35
00:01:56.114 --> 00:02:00.725
So here is a super simple waterfall
chart with one thing in it.

36
00:02:00.725 --> 00:02:03.478
So, waterfall chart measures time.

37
00:02:03.478 --> 00:02:06.040
And usually, we're measuring
very small amounts of time.

38
00:02:06.040 --> 00:02:09.154
We're measuring in milliseconds or
microseconds,

39
00:02:09.154 --> 00:02:11.859
depending on what kind
of thing we're doing.

40
00:02:11.859 --> 00:02:15.487
Now, there'll be multiple
streams in this waterfall.

41
00:02:15.487 --> 00:02:18.022
This particular waterfall
chart only has one thing.

42
00:02:18.022 --> 00:02:19.847
And it looks like we're
loading a document.

43
00:02:19.847 --> 00:02:23.407
We're loading some web page,
some HTML document.

44
00:02:23.407 --> 00:02:28.118
And we see a line at the start,
is when we know we need to do something,

45
00:02:28.118 --> 00:02:32.448
we know we need to make a request,
a request is going to be made.

46
00:02:32.448 --> 00:02:38.202
And then there's some amount of time where
might know that we need to make a request,

47
00:02:38.202 --> 00:02:39.835
but we can't do it yet.

48
00:02:39.835 --> 00:02:44.720
Because we're busy, because
the computer is doing something else or

49
00:02:44.720 --> 00:02:49.622
the queue is too long, or various
other things have gotten in the way.

50
00:02:49.622 --> 00:02:54.277
And so the time between start and
when the document starts is the queue and

51
00:02:54.277 --> 00:02:55.505
connecting time.

52
00:02:55.505 --> 00:02:57.438
Then we're going to
actually make a request.

53
00:02:57.438 --> 00:03:01.179
We're gonna send a request to a host
that says, hey, give me this thing, and

54
00:03:01.179 --> 00:03:03.095
we're gonna spend some time waiting.

55
00:03:03.095 --> 00:03:07.968
We're gonna wait for how long that host,
how long that server on the other end of

56
00:03:07.968 --> 00:03:11.749
the internet takes to figure out
what the hell it wants to do and

57
00:03:11.749 --> 00:03:13.585
starts sending us some data.

58
00:03:13.585 --> 00:03:17.597
Then when we get into the darker color,
that's when we've started getting content.

59
00:03:17.597 --> 00:03:21.884
There's a stream of data coming to us and
we have to figure out what to do with it.

60
00:03:21.884 --> 00:03:25.466
So we're streaming in that data,
we're collecting it, we're parsing it,

61
00:03:25.466 --> 00:03:27.599
we're trying to figure
out if it makes sense.

62
00:03:27.599 --> 00:03:31.079
And then we might need to do
something with that data, but

63
00:03:31.079 --> 00:03:33.482
we might not be able to do it right away.

64
00:03:33.482 --> 00:03:36.685
The browser might be
busy doing other things.

65
00:03:36.685 --> 00:03:41.069
We're waiting on the main thread
before we're actually done.

66
00:03:41.069 --> 00:03:46.108
Now, this is just the anatomy of
a single row of a waterfall chart.

67
00:03:46.108 --> 00:03:50.305
Now, the colors mean things,
generally, in the web world.

68
00:03:50.305 --> 00:03:54.178
And it breaks down like this,
so blue is an HTML document,

69
00:03:54.178 --> 00:03:56.561
we're asking for the HTML itself.

70
00:03:56.561 --> 00:03:59.095
The purple is stylesheets.

71
00:03:59.095 --> 00:04:00.843
Yellow is JavaScript.

72
00:04:00.843 --> 00:04:01.842
Green is images.

73
00:04:01.842 --> 00:04:05.149
We also request fonts,
which are in this teal color.

74
00:04:05.149 --> 00:04:09.841
And then there's lots of other things that
you also end up requesting on the web,

75
00:04:09.841 --> 00:04:13.775
fetches, iframes, other media files,
all kinds of crazy stuff.

76
00:04:13.775 --> 00:04:16.852
That's just generally in gray because,
what other color do you do?

77
00:04:16.852 --> 00:04:19.050
So let's look at a real example of this.

78
00:04:19.050 --> 00:04:21.710
How does this actually put together?

79
00:04:21.710 --> 00:04:26.250
Here's a super, super simple website,
waterfall chart.

80
00:04:26.250 --> 00:04:31.004
So we're gonna start, and
the user navigates to a webpage.

81
00:04:31.004 --> 00:04:35.765
And the browser might be busy, there might
be redirects or other things happening,

82
00:04:35.765 --> 00:04:37.722
and so we can't start right away.

83
00:04:37.722 --> 00:04:43.183
There is a small time right there
where we are unable to get started.

84
00:04:43.183 --> 00:04:46.892
And then the browser
downloads the HTML document.

85
00:04:46.892 --> 00:04:49.860
Now, as part of downloading that document,
we figure out all the things in it.

86
00:04:49.860 --> 00:04:51.267
Are there stylesheets?

87
00:04:51.267 --> 00:04:52.129
Are there images?

88
00:04:52.129 --> 00:04:53.804
Are there references to JavaScript?

89
00:04:53.804 --> 00:04:57.033
And we discover those
pretty much all right away.

90
00:04:57.033 --> 00:04:59.456
We see, hey,
there's all of these different things.

91
00:04:59.456 --> 00:05:03.349
There's two stylesheets,
a JavaScript file, and two images.

92
00:05:03.349 --> 00:05:06.395
But the browser can only download so
many things at once,

93
00:05:06.395 --> 00:05:08.434
it doesn't have infinite capacity.

94
00:05:08.434 --> 00:05:12.500
In this case, the browser had the capacity
of two, which isn't what the browser's

95
00:05:12.500 --> 00:05:15.893
capacity actually is, it just works
functionally for this example.

96
00:05:15.893 --> 00:05:19.540
Now we download these two style sheets,
and when they're done,

97
00:05:19.540 --> 00:05:23.406
we download this bit of JavaScript,
and we start a couple of images.

98
00:05:23.406 --> 00:05:27.670
Maybe we run out of capacity again,
we only have the capacity of two, so

99
00:05:27.670 --> 00:05:29.461
the second image is delayed.

100
00:05:29.461 --> 00:05:33.976
And we're not all the way done until
we hit the very end of this thread.

101
00:05:33.976 --> 00:05:37.204
So here we're able to trace
a set of dependencies, or

102
00:05:37.204 --> 00:05:41.817
a sequence of things that have happened,
so that we can try and optimize it.

103
00:05:41.817 --> 00:05:46.232
Now, we're gonna use these
charts to explain a lot of

104
00:05:46.232 --> 00:05:50.855
the different sequences for
web performance metrics.

