[00:00:00]
>> Todd Gardner: So those were common tools that you could just pick up, any one of you, run it against a site that you own, a site that you don't own, whatever, and you get interesting performance-related data. But if you do own the site, if it's your site that you're trying to optimize things for, it's good to use something beyond Lighthouse, something beyond your local Chrome, because your local Chrome, your Lighthouse, whatever, is lab data.

[00:00:29]
And if it's a site you own that's private, you probably don't have CrUX data. Probably not, doesn't exist. Even if you do have CrUX data, the CrUX data doesn't let you, you necessarily drill in like Web page test. It just says, here's your scores, you can't see four people who have a bad CLS score.

[00:00:49]
Let me see the waterfall so I can recreate what's happening. There's no way to do that with the tools I've showed you. That's where RUM tools come in. Real user monitoring. Real user monitoring is the data that you can use to collect that data from those real users yourself.

[00:01:08]
And then there's not any limitations around making things anonymous, or fuzzing it, or only capturing so much. You can capture all the data you want about your users so that you can try and recreate it. There's lots of different tools. If you Google RUM, you might get RUM and Bacardi and that sort of stuff.

[00:01:30]
But if you do a lot of stuff in web performance like me and Google knows who you are and you type RUM, then you'll get a bunch of web performance tools. And here's the main differences between these sort of things. So, both the Chrome user experience report and real user monitoring are field data.

[00:01:48]
This is both real data from your real users. CrUX only represents logged in Chrome users, so you're not going to get any data from Safari users or Firefox users or people who didn't log into their Chrome. Whereas real user monitoring gets all of your data from every browser that you can capture.

[00:02:09]
You might not always have every metric if the browser doesn't support it, like you still won't magically get Core Web Vitals from Safari users, but you'll have some data. Whatever is capable of being captured. CrUX is just the top million public websites. Real user monitoring can capture everything from whatever set you want.

[00:02:29]
CrUX is anonymous and public data. Your competitors can look it up, anybody can look it up. The real user monitoring data is yours. CrUX is the 28 day rolling average. Real user monitoring can give you real-time data. So, you could see, how fast was my site performing today?

[00:02:44]
I launched a change earlier today, is my site faster now than it was before that change? Real user monitoring can do that. And CrUX is all based in Google BigQuery, that's where that data lives, real user monitoring is custom dashboards, either something you build or something you buy.

[00:03:01]
It's a tool that you use in some case or another. How do RUM tools work? Usually, it's code that you have to install that does that same sort of performance observer pattern. What these agents would look like under covers, if you like, kind of break them apart, is there's a bunch of performance observers grabbing data and sending it off somewhere to be logged and reported.

[00:03:22]
So generally, you'll pull in an agent if you're using a service, a third party, you'll pull in an agent, you'll install it, you need to give it a token or whatever. And there's lots of these tools, and you've heard of a lot of them. So, I like to think of two kind of categories of them based on what kind of developer you are, what context are you operating in?

[00:03:45]
If you're in a big enterprise place, you have a big website or you have a big company, it's got a lot of money, you have lots of engineering teams. You probably have access to some enterprise RUM tool, like Akamai mPulse, is the definitive one that kind of created the genre.

[00:04:05]
Dynatrace, AppDynamics, Datadog, Sentry, the list goes on and on. If you have a big APM kind of monitoring tool that executives got taken out to golf outings to purchase, it probably has some RUM capability in it somewhere that you can use to get this data. The other class of tools is, what I like to think of as project-based RUM tools, where you have this website and you wanna monitor it, but you don't have, like, the budget for that sort of thing.

[00:04:33]
You have a smaller team. Like, you don't have $100,000 a year to spend on something like the tools on the left tend to cost. You wanna spend something on, help you fix one particular project. Here's a bunch of tools that kind of fit in that category. Request Metrics,, SpeedCurve, gets a lot of notice.

[00:04:54]
RUMVision, Pingdom, Raygun. There's a ton more, if you already use a tool, your favorite tool might be, I might have not excluded it. These are just the ones that I think about and talk about, have seen referenced a lot. I'm gonna talk a little bit about some specifics on RequestMetrics.

[00:05:12]
So, disclosure, I built Request Metrics. It is the RUM tool that I created based on my knowledge. And where a lot of my web performance knowledge comes from is in kinda gathering that data and what it looks like. So, I'm gonna use that as a quick example of the kind of data that RUM tooling can get and how you use it.

