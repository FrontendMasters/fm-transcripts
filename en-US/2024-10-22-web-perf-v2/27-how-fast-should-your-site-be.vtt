WEBVTT

1
00:00:00.179 --> 00:00:02.801
&gt;&gt; Todd Gardner: So we just got done
talking about testing different ways we

2
00:00:02.801 --> 00:00:04.091
can test the various tools.

3
00:00:04.091 --> 00:00:06.324
Now we're gonna talk about setting goals.

4
00:00:06.324 --> 00:00:11.953
We're gonna figure out how fast does
your website actually need to be?

5
00:00:11.953 --> 00:00:13.723
There's a couple of things
we need to talk about.

6
00:00:13.723 --> 00:00:17.220
One is, how fast is fast enough?

7
00:00:17.220 --> 00:00:19.132
Who gets to decide that?

8
00:00:19.132 --> 00:00:24.194
And then you need understand some things
about their users, about your users.

9
00:00:24.194 --> 00:00:26.910
So how fast is enough?

10
00:00:26.910 --> 00:00:34.077
Fast, what fast is is very
subjective to who your users are?

11
00:00:34.077 --> 00:00:38.766
Different user groups are gonna think
fast means different things has

12
00:00:38.766 --> 00:00:43.946
largely determined based on what kind
of app are you building, and for whom?

13
00:00:43.946 --> 00:00:48.449
If you're building something that
is showing developer stickers,

14
00:00:48.449 --> 00:00:53.572
it's got to be pretty fast cuz your
audience is developers who are impatient,

15
00:00:53.572 --> 00:00:57.626
and the value of the thing I'm
delivering is relatively low.

16
00:00:57.626 --> 00:01:02.626
It's not super important to their day
to day life, whereas, if you're doing

17
00:01:02.626 --> 00:01:07.325
something super important like applying
for a loan or filing your taxes,

18
00:01:07.325 --> 00:01:11.831
people are willing to wait a lot
longer for those higher value things.

19
00:01:11.831 --> 00:01:14.346
When people think about performance,

20
00:01:14.346 --> 00:01:17.698
it's not the absolute
numbers that always matter,

21
00:01:17.698 --> 00:01:22.817
because users tend to remember things
slower than how they actually happened.

22
00:01:22.817 --> 00:01:26.846
When something happens,
if they feel like it interrupted them,

23
00:01:26.846 --> 00:01:31.183
even if the actual is technically Okay,
often they'll perceive it.

24
00:01:31.183 --> 00:01:35.064
A human will perceive it as slightly
slower than the objective number, and

25
00:01:35.064 --> 00:01:38.716
going back the next day, they'll
remember it even worse than it was.

26
00:01:38.716 --> 00:01:43.639
And so the raw numbers don't
always completely matter depending

27
00:01:43.639 --> 00:01:45.347
on who your users are.

28
00:01:45.347 --> 00:01:48.078
Now this comes back to psychology.

29
00:01:48.078 --> 00:01:53.752
So web performance is not just about
the tech, it's about the people.

30
00:01:53.752 --> 00:01:58.157
And people are willing to wait different
amounts of times for different things.

31
00:01:58.157 --> 00:01:59.561
There's a couple of things that came out.

32
00:01:59.561 --> 00:02:03.615
This was some psychology studies
that happened in the 60s.

33
00:02:03.615 --> 00:02:05.334
And there was a couple of
just general learnings.

34
00:02:05.334 --> 00:02:07.898
This isn't specific to computers,
this is general.

35
00:02:07.898 --> 00:02:11.771
This was a study of
people waiting in lines.

36
00:02:11.771 --> 00:02:15.035
And what people felt and reactions to it.

37
00:02:15.035 --> 00:02:16.361
And there are some key learnings.

38
00:02:16.361 --> 00:02:18.960
One, people want to start.

39
00:02:18.960 --> 00:02:20.671
If you're going to do something,

40
00:02:20.671 --> 00:02:24.042
they're anxious to get started with
whatever it is they came to do.

41
00:02:24.042 --> 00:02:27.783
They want to see the sticker,
they want to fill out the application,

42
00:02:27.783 --> 00:02:31.910
they want to do the search, they wanna
do the thing that they came here for and

43
00:02:31.910 --> 00:02:33.674
they're anxious to get going.

44
00:02:33.674 --> 00:02:36.652
If people are waiting and they're bored,

45
00:02:36.652 --> 00:02:41.212
they'll remember that wait longer
Better than it actually was.

46
00:02:41.212 --> 00:02:44.709
So a lot of times you'll see people
like throwing up fun animations or

47
00:02:44.709 --> 00:02:48.990
like little games or something to distract
the user when they're waiting, because

48
00:02:48.990 --> 00:02:53.393
they're trying to get around this because
if they're bored while they're waiting,

49
00:02:53.393 --> 00:02:56.829
like we were sitting there waiting for
web page tests to start that,

50
00:02:56.829 --> 00:02:59.879
even though that probably
wasn't objectively that long.

51
00:02:59.879 --> 00:03:05.740
It felt like forever to me, because I
was bored waiting for it to be done.

52
00:03:05.740 --> 00:03:08.688
I wanted to get on to the next thing.

53
00:03:08.688 --> 00:03:10.378
Anxious waits feel slower.

54
00:03:10.378 --> 00:03:14.305
If I have a lot of anxiety about
this action that's happening,

55
00:03:14.305 --> 00:03:18.540
like showing a live performance
result in front of a live audience.

56
00:03:18.540 --> 00:03:20.767
I wanna I feel like that's
slower than it actually was.

57
00:03:20.767 --> 00:03:24.544
I'm anxious about the results and
that it doesn't break.

58
00:03:24.544 --> 00:03:29.216
If I don't understand why I'm waiting,
it feels longer.

59
00:03:29.216 --> 00:03:31.677
Again, why did that take so long?

60
00:03:31.677 --> 00:03:35.457
It never took that long in any test or
rehearsal that I ever did.

61
00:03:35.457 --> 00:03:38.544
I didn't understand why it was slow,
and so it felt slower.

62
00:03:38.544 --> 00:03:41.824
This was actually a great case
study that I could call back here.

63
00:03:41.824 --> 00:03:47.472
So unexplained waits feel slower if
I don't understand why I'm waiting.

64
00:03:47.472 --> 00:03:51.268
Uncertain waits if I don't
understand how long it's gonna take,

65
00:03:51.268 --> 00:03:52.636
like I have no context.

66
00:03:52.636 --> 00:03:56.079
If this is gonna be a minute,
an hour, a day or a week,

67
00:03:56.079 --> 00:03:59.306
that's going to feel longer
than it actually is.

68
00:03:59.306 --> 00:04:03.996
And people will wait longer for
higher value things.

69
00:04:03.996 --> 00:04:08.692
So a developer sticker,
maybe not willing to wait very long.

70
00:04:08.692 --> 00:04:14.664
A insurance application, willing to wait
for that, might want to wait for that.

71
00:04:14.664 --> 00:04:15.209
In fact,

72
00:04:15.209 --> 00:04:19.992
sometimes you have to be intentionally
slow if you're a particularly high value.

73
00:04:19.992 --> 00:04:22.773
The most notable case of this is Turbotax.

74
00:04:22.773 --> 00:04:28.612
If any of you use Turbotax, there is
an intentional slowdown in Turbotax.

75
00:04:28.612 --> 00:04:32.229
When you are all done with your taxes and
you hit submit.

76
00:04:32.229 --> 00:04:37.113
There's this animation banner called
looking over every detail where it's like

77
00:04:37.113 --> 00:04:41.640
shuffling through papers and the Atlantic
went through the source code, or

78
00:04:41.640 --> 00:04:43.635
the decompiled the source code.

79
00:04:43.635 --> 00:04:47.355
There's nothing actually,
it's doing it is a fixed time weight.

80
00:04:47.355 --> 00:04:50.786
It knows everything it
needs at that point.

81
00:04:50.786 --> 00:04:56.197
TurboTax in their studies believe
the user will trust their system

82
00:04:56.197 --> 00:05:01.330
more if they slow it down like
it's actually doing something.

83
00:05:01.330 --> 00:05:05.446
Like it's not just a thin wrapper
around IRS APIs that have existed and

84
00:05:05.446 --> 00:05:08.468
there's no reason for
TurboTax to exist anymore.

85
00:05:08.468 --> 00:05:09.978
I hope Intuit isn't a subscriber.

86
00:05:09.978 --> 00:05:15.490
[LAUGH] so this is a case that
people not only will wait for value,

87
00:05:15.490 --> 00:05:21.523
but they want to wait longer if
something is perceived as high value.

