WEBVTT

1
00:00:00.200 --> 00:00:04.122
&gt;&gt; Todd Gardner: Okay,
let's talk about improving CLS,

2
00:00:04.122 --> 00:00:07.044
the cumulative layout shift.

3
00:00:07.044 --> 00:00:14.840
If you don't recall, CLS is how smooth and
predictably elements load onto the page.

4
00:00:14.840 --> 00:00:19.717
And arguably, we might have made our
CLS a little worse with what we did.

5
00:00:19.717 --> 00:00:24.478
Because we instructed the browser to lazy
load a whole bunch images, which means

6
00:00:24.478 --> 00:00:29.495
some images are gonna come in later
than we thought and push things around.

7
00:00:29.495 --> 00:00:33.940
So let's take a look at where
we're at right now with CLS.

8
00:00:33.940 --> 00:00:41.556
If we go to our foreign version,
we have a bunch of CLS happening.

9
00:00:41.556 --> 00:00:46.529
Our dev tools for this, if we pop
up in the dev tools console says,

10
00:00:46.529 --> 00:00:48.436
hey, we have a poor CLS.

11
00:00:48.436 --> 00:00:52.926
In fact, we had two different CLSs happen,
cuz it got a lot worse.

12
00:00:52.926 --> 00:00:56.124
There's a couple of different
things happening here.

13
00:00:56.124 --> 00:01:00.907
There was a CLS of 2.56, the hero shifted,
the product shifted, all kinds of

14
00:01:00.907 --> 00:01:06.110
things are moving around and we don't
have a really great experience right now.

15
00:01:06.110 --> 00:01:12.370
There's a couple of reasons for this, both
the hero and the featured products moving,

16
00:01:12.370 --> 00:01:16.612
and there are two different
issues that we need to address.

17
00:01:16.612 --> 00:01:19.706
Before we dig into this and
the tactics, like all of the metrics,

18
00:01:19.706 --> 00:01:23.601
all the improvements, you need to decide
whether or not this is a problem for you.

19
00:01:23.601 --> 00:01:28.030
Don't go fixing or worrying about things
that don't directly affect your data.

20
00:01:29.450 --> 00:01:31.181
There's really only one tactic here.

21
00:01:31.181 --> 00:01:37.090
There's really one thing you do for
CLS as you give your layout size hints.

22
00:01:37.090 --> 00:01:38.005
You tell it,

23
00:01:38.005 --> 00:01:43.179
here's how big things are going to be
ahead of when they actually appear.

24
00:01:43.179 --> 00:01:46.555
Now, there's only one, because that's
the only thing this is measuring.

25
00:01:46.555 --> 00:01:53.104
CLS in a lot of cases, is a problem
created by LCP performance tactics.

26
00:01:53.104 --> 00:01:56.466
Is we try to delay a bunch of
stuff to get LCP fast, and

27
00:01:56.466 --> 00:01:59.754
it creates layout shift
problems down stream, and

28
00:01:59.754 --> 00:02:04.397
we fix those problems by giving
appropriate layout hints.

29
00:02:04.397 --> 00:02:05.061
Here's an example.

30
00:02:05.061 --> 00:02:09.855
So here is a film strip of
some of our lazy-load Images.

31
00:02:09.855 --> 00:02:12.699
Let's zoom in on the particular problem.

32
00:02:12.699 --> 00:02:17.715
As this page is loading, when we first
decide that there's a reference to an,

33
00:02:17.715 --> 00:02:21.826
image up on the top,
there's the logo for developer stickers.

34
00:02:21.826 --> 00:02:23.378
It's not there, it's lazy-loaded.

35
00:02:23.378 --> 00:02:27.051
It's one of the resources
we told to load later.

36
00:02:27.051 --> 00:02:30.970
And so at some point during
the lifetime of the page, it's done.

37
00:02:30.970 --> 00:02:34.107
And when it is,
the whole header shifts to the right,

38
00:02:34.107 --> 00:02:37.266
creating a layout shift
because the image popped in.

39
00:02:37.266 --> 00:02:40.940
We also have a layout shift
down there in featured product,

40
00:02:40.940 --> 00:02:44.605
where the image of each
product is lazy-loaded.

41
00:02:44.605 --> 00:02:49.252
But it's not there initially, and whenever
it's loaded, it pushes everything down.

42
00:02:50.818 --> 00:02:54.666
&gt;&gt; Todd Gardner: Now, we can fix these
lazy-loaded image problems simply by

43
00:02:54.666 --> 00:02:57.905
just specifying a height and width.

44
00:02:57.905 --> 00:03:01.558
Something that we probably should have
been doing since the beginning of time,

45
00:03:01.558 --> 00:03:03.094
we just haven't always done it.

46
00:03:03.094 --> 00:03:06.939
Now, one thing that I see a lot of
developers mistake is they put the PX

47
00:03:06.939 --> 00:03:11.526
in there, they say 500PX,
that's incorrect syntax, it's always PX.

48
00:03:11.526 --> 00:03:14.117
If you put PX in there,
some browsers break.

49
00:03:14.117 --> 00:03:19.984
Don't put the PX in there, just put
the number of how big the raw image is.

50
00:03:19.984 --> 00:03:24.004
Not even how big you're gonna display it,
just put how big the image is.

51
00:03:24.004 --> 00:03:29.119
And the reason we put that in this case,
it's 500 pixels wide for

52
00:03:29.119 --> 00:03:33.605
a teeny tiny logo,
is that it's not about the raw numbers,

53
00:03:33.605 --> 00:03:37.074
it's really about the aspect ratio.

54
00:03:37.074 --> 00:03:39.503
The browser is just gonna
take those numbers and

55
00:03:39.503 --> 00:03:41.393
figure out how big is the dimension?

56
00:03:41.393 --> 00:03:44.294
How big is the aspect ratio of this image?

57
00:03:44.294 --> 00:03:50.172
So that with wherever I have to put it,
I know the size dimension.

58
00:03:50.172 --> 00:03:52.300
I know that it's this tall,
I know how wide it is,

59
00:03:52.300 --> 00:03:53.944
because you gave me the aspect ratio.

60
00:03:56.134 --> 00:04:01.103
So the other reason that we get layout
shift is from a late-rendered content.

61
00:04:01.103 --> 00:04:03.902
So asynchronous content that
gets client-side rendered, and

62
00:04:03.902 --> 00:04:06.001
we have some of that, too.

63
00:04:06.001 --> 00:04:09.067
So we have this promo
banner that pushes down.

64
00:04:09.067 --> 00:04:12.831
And this promo banner,
initially, doesn't even exist.

65
00:04:12.831 --> 00:04:15.826
At some point during the page life cycle,
it decides, hey,

66
00:04:15.826 --> 00:04:19.131
I wanna show the user this promo.,
and it pushes this thing down.

67
00:04:19.131 --> 00:04:22.870
And it creates this creates a big
layout shift during the whole sequence.

68
00:04:22.870 --> 00:04:23.993
Well, how do we do this?

69
00:04:23.993 --> 00:04:25.840
How could we solve that?

70
00:04:25.840 --> 00:04:28.675
Well, it's a bit of a style thing.

71
00:04:28.675 --> 00:04:29.777
How do you want to do that?

72
00:04:29.777 --> 00:04:33.517
There's a reason why a lot of sites do
that annoying thing where they push

73
00:04:33.517 --> 00:04:36.538
something into place because
it's attention grabbing.

74
00:04:36.538 --> 00:04:40.062
It's like, something interesting just
happened, I wanna click on that.

75
00:04:40.062 --> 00:04:43.126
It's an advertisement or
a promotion or whatever.

76
00:04:43.126 --> 00:04:45.145
So there's a couple of
different ways we can do it.

77
00:04:45.145 --> 00:04:48.596
One, we could just set
the height of the promo banner.

78
00:04:48.596 --> 00:04:51.753
It's always going to be 260 pixels tall.

79
00:04:51.753 --> 00:04:53.264
We could just specify that.

80
00:04:53.264 --> 00:04:57.475
And then from as soon as the page loads,
it's always there,

81
00:04:57.475 --> 00:05:01.440
nothing moves which definitely
solves the CLS problem,

82
00:05:01.440 --> 00:05:05.586
but it might not be attention
grabbing enough for the user.

83
00:05:05.586 --> 00:05:07.550
It might not sell stickers.

84
00:05:07.550 --> 00:05:09.546
And ultimately,
that's what we're trying to do here, man.

85
00:05:09.546 --> 00:05:15.396
We're trying to sell some stickers, so we
might still want to be attention grabbing.

86
00:05:15.396 --> 00:05:19.006
And so
instead of pushing all the content down,

87
00:05:19.006 --> 00:05:22.458
maybe we just wanna draw over the content.

88
00:05:22.458 --> 00:05:26.301
Maybe we just wanna expand on top
of what they were looking at.

89
00:05:26.301 --> 00:05:28.440
So we could set some CSS to say, hey,

90
00:05:28.440 --> 00:05:32.698
we're gonna position this thing
absolutely over the hero image.

91
00:05:32.698 --> 00:05:36.181
And whenever we render it in,
it's just gonna slide down and

92
00:05:36.181 --> 00:05:37.692
be just below the header.

93
00:05:37.692 --> 00:05:40.802
This is a style thing based on
what elements you're doing,

94
00:05:40.802 --> 00:05:43.933
what you're doing it for,
the purpose of it is.

95
00:05:43.933 --> 00:05:47.190
I'm not saying either one of these
is right or wrong in your situation.

96
00:05:47.190 --> 00:05:51.913
These are just two really common
ways you can solve this CLS.

97
00:05:51.913 --> 00:05:53.587
You can either fix code.

98
00:05:53.587 --> 00:05:55.475
Here's how big this thing is.

99
00:05:55.475 --> 00:05:56.862
I'm gonna reserve this space.

100
00:05:56.862 --> 00:06:01.753
Or you can say, this thing that's late,
this thing floats above the document.

101
00:06:01.753 --> 00:06:04.658
It's not going to affect anything else,

102
00:06:04.658 --> 00:06:08.145
because it exists at
a higher plane of existence.

103
00:06:08.145 --> 00:06:10.675
So let's play with that and
let's remove those.

104
00:06:12.145 --> 00:06:17.454
So let's jump in the code,
we will set image height and width.

105
00:06:19.493 --> 00:06:21.546
&gt;&gt; Todd Gardner: So we should do this.

106
00:06:21.546 --> 00:06:25.724
If we were good developers, being very
thorough, we would go through this entire

107
00:06:25.724 --> 00:06:28.811
application and set height and
width on every single image,

108
00:06:28.811 --> 00:06:32.280
because we don't know where
the user's gonna be when things load.

109
00:06:32.280 --> 00:06:35.922
That would actually take a lot of time
that we're not gonna use right now.

110
00:06:35.922 --> 00:06:38.869
So instead,
we're gonna set the height and width for

111
00:06:38.869 --> 00:06:42.404
all the images above the fold to
make sure that our visible CSS for

112
00:06:42.404 --> 00:06:46.487
our testing purposes are all set, and
so there's only a couple of those.

113
00:06:46.487 --> 00:06:52.568
First, there's this image that's
lazy-loaded right here in the header,

114
00:06:52.568 --> 00:06:59.689
and we know that this one is height, 500
pixels high, and width, 500 pixels wide.

115
00:07:01.870 --> 00:07:05.673
And second,
we know that the featured images,

116
00:07:05.673 --> 00:07:08.820
we already set it here on the main hero.

117
00:07:08.820 --> 00:07:15.388
And then we have this grid of featured
images, which I forgot how big they are.

118
00:07:15.388 --> 00:07:22.236
They are,
&gt;&gt; Todd Gardner: Square 1024 by 1024.

119
00:07:37.501 --> 00:07:40.283
&gt;&gt; Todd Gardner: And
I'm just gonna copy that down and

120
00:07:40.283 --> 00:07:43.428
put them on all four of these images here.

121
00:07:49.786 --> 00:07:53.205
&gt;&gt; Todd Gardner: And then we also have
an image that loads inside of promo.js.

122
00:07:53.205 --> 00:07:58.769
There's actually an image that comes
down inside of this promo bar.

123
00:07:58.769 --> 00:08:02.453
So that's all client side-rendered,
I'm just gonna add that here as well.

124
00:08:02.453 --> 00:08:06.265
That's the same image, 1024 by 1024.

125
00:08:08.383 --> 00:08:11.596
&gt;&gt; Todd Gardner: And then the other thing
that we need to do is we need to set some

126
00:08:11.596 --> 00:08:13.624
CSS on how the promo bar is displayed.

127
00:08:13.624 --> 00:08:17.127
So I like the absolute case for
this, cuz again,

128
00:08:17.127 --> 00:08:22.295
we're trying to sell some stickers and
I wanna grab some attention.

129
00:08:22.295 --> 00:08:27.669
So we're gonna drop that in right
over the top of where things are.

130
00:08:27.669 --> 00:08:29.665
Now, we've already bundled all of our CSS.

131
00:08:31.115 --> 00:08:35.499
In a really annoying way,
we'll have to re-bundle.

132
00:08:35.499 --> 00:08:39.457
So I'm gonna opt, I have both
options kinda commented out here.

133
00:08:39.457 --> 00:08:43.522
So I'm gonna do the promo banner
has absolutely rendered top 60,

134
00:08:43.522 --> 00:08:49.000
which is the height of the header,
full width, and on top of everything else.

135
00:08:49.000 --> 00:08:57.961
We need to run bundle npm, start.

136
00:08:57.961 --> 00:08:59.298
Let's just look at it locally then.

137
00:08:59.298 --> 00:09:00.180
Thank you, though.

138
00:09:00.180 --> 00:09:01.184
We cached it.

139
00:09:01.184 --> 00:09:05.713
[LAUGH] We've performance optimized and
we cached it.

140
00:09:05.713 --> 00:09:09.000
So that's why this disable Cache
button here exists, [LAUGH] is when

141
00:09:09.000 --> 00:09:12.643
you've optimized things, you probably
want to see your latest changes.

142
00:09:12.643 --> 00:09:15.883
[LAUGH] So
let's try that again with our local cache.

143
00:09:15.883 --> 00:09:20.334
And now, our promo banner pushes
down over the top of content.

144
00:09:20.334 --> 00:09:23.416
All right, so we got largely a 0 CLS.

145
00:09:23.416 --> 00:09:28.152
Everything is loading pretty much
instantly, because our biggest problem was

146
00:09:28.152 --> 00:09:33.111
that promo banner that used to push down
and rearrange almost the entire viewport.

147
00:09:33.111 --> 00:09:38.630
And now, by shifting to where it is and
by changing where those images are,

148
00:09:38.630 --> 00:09:42.053
we're down to pretty much 0,
which is good.

149
00:09:42.053 --> 00:09:44.386
That's why I say there's one tactic here.

150
00:09:44.386 --> 00:09:48.103
You tell the layout how big things are,
and this problem goes away.

151
00:09:48.103 --> 00:09:49.826
It goes to pretty much nothing.

