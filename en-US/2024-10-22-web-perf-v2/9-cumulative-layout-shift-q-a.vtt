WEBVTT

1
00:00:00.770 --> 00:00:03.998
&gt;&gt; Speaker 2: And why isn't the header
included as part of the impact?

2
00:00:03.998 --> 00:00:06.609
&gt;&gt; Todd Gardner: Sure so
in this particular example,

3
00:00:06.609 --> 00:00:08.797
let me go to back to this one, so

4
00:00:08.797 --> 00:00:14.440
the header in this particular case
doesn't move during the load sequence.

5
00:00:14.440 --> 00:00:18.098
If we go back to our page check this out,
so here's the header,

6
00:00:18.098 --> 00:00:21.355
here's the promo banner,
and here's the hero image.

7
00:00:22.425 --> 00:00:27.125
Now if I reload this page,
&gt;&gt; Todd Gardner: It's really slow.

8
00:00:28.135 --> 00:00:32.216
There it is, see the header is there,
the body is there,

9
00:00:32.216 --> 00:00:34.695
the promo image forces its way in.

10
00:00:34.695 --> 00:00:38.959
The header didn't change,
the header didn't shift around,

11
00:00:38.959 --> 00:00:44.685
the header is where it rendered, it didn't
move, that's why it's not included.

12
00:00:44.685 --> 00:00:46.000
It wasn't part of the impact,

13
00:00:46.000 --> 00:00:48.875
it didn't change at all as
part of this layout shift.

14
00:00:48.875 --> 00:00:51.595
The things that changed
was the promo banner and

15
00:00:51.595 --> 00:00:54.475
then everything below it was forced down.

16
00:00:54.475 --> 00:00:59.295
So that's why everything except the header
was included in this calculation.

17
00:00:59.295 --> 00:01:04.465
&gt;&gt; Speaker 2: So
what happens if you scroll down the page?

18
00:01:04.465 --> 00:01:08.035
&gt;&gt; Todd Gardner: It's wherever
the user's viewport is.

19
00:01:08.035 --> 00:01:14.163
So if you start, if the user starts
scrolling down before the page is done,

20
00:01:14.163 --> 00:01:20.780
well, like things are still loading,
and things move in the user's viewport,

21
00:01:20.780 --> 00:01:26.847
that's a new CLS score or that's a new
layout shift and will be included.

22
00:01:28.447 --> 00:01:31.897
So, it's dependent on user interaction,
these aren't the kind of scores.

23
00:01:31.897 --> 00:01:32.861
One thing,

24
00:01:32.861 --> 00:01:39.077
I think a lot of people get hung up on
is that there's not one score here.

25
00:01:39.077 --> 00:01:43.345
It's not like like you can say go to this
page and this page is like this is your

26
00:01:43.345 --> 00:01:47.625
LCP this is your CLS, and that's just
definitive is what it is, it's not.

27
00:01:47.625 --> 00:01:51.444
Every single time a user comes in the user
is going to do different things the user

28
00:01:51.444 --> 00:01:54.303
is gonna be on a different device,
on a different network.

29
00:01:54.303 --> 00:01:57.327
And they're gonna interact with
the page in a different way and

30
00:01:57.327 --> 00:01:59.160
it's gonna generate a unique score.

31
00:01:59.160 --> 00:02:03.356
And so you can't necessarily
go to your page and say,

32
00:02:03.356 --> 00:02:08.925
I ran a report and it says my LCP is
one second, and that's what it is.

33
00:02:08.925 --> 00:02:11.594
No, it's going to be
thousands of LCP scores,

34
00:02:11.594 --> 00:02:16.132
tens of thousands, depending on how big
and busy your site is and how many users,

35
00:02:16.132 --> 00:02:19.315
all of those LCP scores
coming in together.

36
00:02:19.315 --> 00:02:23.805
And Google is gonna consolidate
all of that data together and

37
00:02:23.805 --> 00:02:26.531
pick what is the general score.

38
00:02:26.531 --> 00:02:28.581
It's going to use what's
called the 75th percentile.

39
00:02:28.581 --> 00:02:30.291
We're gonna talk about statistics and

40
00:02:30.291 --> 00:02:32.961
how to interpret all this
data here in a little while.

41
00:02:32.961 --> 00:02:36.001
But it's not one score,
it's lots and lots of scores.

42
00:02:36.001 --> 00:02:40.879
So if your website has a user interface
that it seems to be encouraging the user

43
00:02:40.879 --> 00:02:43.518
to start interacting before it's done.

44
00:02:43.518 --> 00:02:48.482
And other things shift around the page,
maybe a little bit down in the viewport,

45
00:02:48.482 --> 00:02:50.976
that's going to affect your CLS score.

46
00:02:50.976 --> 00:02:54.733
Because you've encouraged the user to
look at something that's not ready to be

47
00:02:54.733 --> 00:02:55.468
looked at yet.

48
00:02:55.468 --> 00:02:58.673
And so it's gonna cause a layout shift,
you need to try and

49
00:02:58.673 --> 00:03:01.684
be done with everything that
the user is going to see and

50
00:03:01.684 --> 00:03:04.581
prevent those layout
shifts from happening.

51
00:03:04.581 --> 00:03:09.388
Ideally, layout shifts don't happen
outside of the viewport either because you

52
00:03:09.388 --> 00:03:13.371
don't know where the user's
gonna be looking, yeah.

53
00:03:13.371 --> 00:03:16.975
&gt;&gt; Speaker 2: You might be talking about
this later, but if you're doing service

54
00:03:16.975 --> 00:03:21.165
side rendering is this, just remove
most of problems with the layout shifts?

55
00:03:21.165 --> 00:03:25.983
&gt;&gt; Todd Gardner: No, because of resources,
so client-side rendering definitely is

56
00:03:25.983 --> 00:03:31.060
a big cause of layout shifts,
is asynchronously rendered content.

57
00:03:31.060 --> 00:03:36.567
But even if you just have like a giant
image, if you decide to tell the browser,

58
00:03:36.567 --> 00:03:43.144
hey, I don't know how big this Images,
and this image takes a long time to load.

59
00:03:43.144 --> 00:03:47.071
When the image eventually does load, the
browser will figure out how big it is and

60
00:03:47.071 --> 00:03:50.764
shove it into the document,
which can cause a layout shift.

61
00:03:50.764 --> 00:03:55.254
There's actually a subtle layout
shift that happens in this page.

62
00:03:55.254 --> 00:03:58.478
It's not quite as good for
our example of what this is.

63
00:03:58.478 --> 00:04:03.052
But the images itself is actually causing
another layout shift because it's so

64
00:04:03.052 --> 00:04:06.398
big that sometimes it renders
into the document layout and

65
00:04:06.398 --> 00:04:08.045
pushes everything around.

66
00:04:10.520 --> 00:04:14.413
&gt;&gt; Speaker 2: Are these based
on Dom elements specifically?

67
00:04:14.413 --> 00:04:17.013
&gt;&gt; Todd Gardner: Yeah,
it's based on the Dom element size.

68
00:04:17.013 --> 00:04:21.167
&gt;&gt; Speaker 2: So if you have something
that's rendering in a Canvas that is

69
00:04:21.167 --> 00:04:25.747
changing the- Yeah, so
it's not looking inside of the Canvas.

70
00:04:25.747 --> 00:04:29.411
&gt;&gt; Todd Gardner: So if you had a Canvas
that's like 200 pixels by 200 pixels and

71
00:04:29.411 --> 00:04:33.720
stuff in the canvas moves and shifts
around, Google doesn't know about that,

72
00:04:33.720 --> 00:04:35.697
doesn't care about that.

73
00:04:35.697 --> 00:04:38.685
As long as the canvas is 200 by 200 and

74
00:04:38.685 --> 00:04:43.250
the canvas doesn't Like when
the canvas is created or whatever,

75
00:04:43.250 --> 00:04:49.345
if it doesn't have that 200 by 200
reserved in the layout, it's fine.

76
00:04:49.345 --> 00:04:52.383
If it doesn't have that reserved
in the layout and then it pops in,

77
00:04:52.383 --> 00:04:55.925
everything around the Canvas will move and
that will trigger a layout shift.

78
00:04:58.103 --> 00:04:59.951
&gt;&gt; Speaker 3: Semi-related to that,

79
00:04:59.951 --> 00:05:05.143
about reserved layout spots
are skeletons counted in layout shifts.

80
00:05:05.143 --> 00:05:06.625
&gt;&gt; Todd Gardner: I don't
know what a skeleton is.

81
00:05:06.625 --> 00:05:10.669
&gt;&gt; Speaker 3: I think they mean
the kind of the the skeleton,

82
00:05:10.669 --> 00:05:13.758
like placeholder kind of-
&gt;&gt; Todd Gardner: Yeah, so

83
00:05:13.758 --> 00:05:18.227
you use a placeholder if you're like hey
this box is going to be 200 by 200 in

84
00:05:18.227 --> 00:05:19.796
the future and.

85
00:05:19.796 --> 00:05:24.366
And for now, I'm gonna put a placeholder
there that reserves the space.

86
00:05:24.366 --> 00:05:28.227
That's exactly how you prevent layout
shifts, because when you swap it out,

87
00:05:28.227 --> 00:05:30.526
the layout does not move around it.

88
00:05:30.526 --> 00:05:33.458
A layout shift happens when
there is not a skeleton and

89
00:05:33.458 --> 00:05:37.300
you just shove in a new element,
not caring what was there before, and

90
00:05:37.300 --> 00:05:39.887
everything has to reorganize around it.

91
00:05:39.887 --> 00:05:42.747
That's the layout shift and that's the
problem that we're measuring right here.

92
00:05:44.797 --> 00:05:48.157
&gt;&gt; Speaker 3: And does CLS consider
the layout shift from an iframe?

93
00:05:49.597 --> 00:05:52.072
&gt;&gt; Todd Gardner: From an iframe,
so the iframe itself,

94
00:05:52.072 --> 00:05:54.179
if an iframe comes in initially.

95
00:05:54.179 --> 00:05:59.763
And you didn't specify its correct size.

96
00:05:59.763 --> 00:06:04.428
Let's say you lazy load an iframe and
then it changes size when it pops in,

97
00:06:04.428 --> 00:06:06.588
that is a layout shift.

98
00:06:06.588 --> 00:06:12.861
Now, if you care about the stuff that's
inside the iframe is also shifting,

99
00:06:12.861 --> 00:06:17.801
that's a different thing,
that doesn't like bubble out.

