WEBVTT

1
00:00:00.000 --> 00:00:01.961
So our app is ready at this point.

2
00:00:01.961 --> 00:00:05.945
I mean, it's doing all that we want.

3
00:00:05.945 --> 00:00:09.491
But we need to finish the process.

4
00:00:09.491 --> 00:00:15.530
And for that, if we go to
the home screen of my emulator,

5
00:00:15.530 --> 00:00:19.506
my app, Is, actually,

6
00:00:19.506 --> 00:00:25.882
I will do it again because,
I need to delete this one.

7
00:00:25.882 --> 00:00:29.550
So you didn't see this.

8
00:00:29.550 --> 00:00:31.288
This is the other one that I have.

9
00:00:33.605 --> 00:00:39.707
Okay, so if you open the menu,
our app is installing my phone,

10
00:00:39.707 --> 00:00:42.829
but with a default icon, okay?

11
00:00:42.829 --> 00:00:44.985
And yeah, that doesn't look right, also,

12
00:00:44.985 --> 00:00:47.611
it's going to be rejected
from the Play Store, okay?

13
00:00:47.611 --> 00:00:50.193
We actually need to replace that icon.

14
00:00:50.193 --> 00:00:52.100
So how to do that?

15
00:00:52.100 --> 00:00:57.986
So in the res folder, apart from drawable,

16
00:00:57.986 --> 00:01:02.610
we also have a section for mipmap.

17
00:01:02.610 --> 00:01:05.535
Does anyone know what mipmap is?

18
00:01:05.535 --> 00:01:09.884
Have you seen mipmap anywhere?

19
00:01:09.884 --> 00:01:11.117
&gt;&gt; Gaming.
&gt;&gt; Gaming,

20
00:01:11.117 --> 00:01:15.340
and do you know what it means in gaming,
mipmap?

21
00:01:18.564 --> 00:01:20.673
As a fun fact.

22
00:01:20.673 --> 00:01:27.775
&gt;&gt; I guess on map is different, but
isn't it something like that where

23
00:01:27.775 --> 00:01:32.433
it's positioning data of the texture on-
&gt;&gt; It

24
00:01:32.433 --> 00:01:36.734
has to do with textures,
with let's say the viewers position.

25
00:01:36.734 --> 00:01:41.674
So actually, mipmap is, for example,
let's say I know first person shooter or

26
00:01:41.674 --> 00:01:43.066
something like that.

27
00:01:43.066 --> 00:01:45.735
When you have an object
that is really far away,

28
00:01:45.735 --> 00:01:49.360
the texture that is being used is
a very low resolution texture.

29
00:01:49.360 --> 00:01:51.748
And we are getting close to that,

30
00:01:51.748 --> 00:01:55.597
it's changing the texture
with a better one, okay?

31
00:01:55.597 --> 00:02:00.152
Well, here they're using the same term for
the icon in different resolutions.

32
00:02:00.152 --> 00:02:07.177
So unfortunately,
Android is not supporting SVG or

33
00:02:07.177 --> 00:02:11.655
shapes, it's supporting PNG.

34
00:02:11.655 --> 00:02:16.792
But not one PNG, we need to
provide several versions of PNG.

35
00:02:16.792 --> 00:02:24.450
Also, it can be WebP, no one is using
WebP anyway, only the default icon.

36
00:02:24.450 --> 00:02:28.011
So what we need actually is
I'm going to delete this.

37
00:02:28.011 --> 00:02:30.287
This is called ic_launcher.

38
00:02:30.287 --> 00:02:31.780
Ic from icon.

39
00:02:31.780 --> 00:02:34.021
So the icon launcher, okay?

40
00:02:34.021 --> 00:02:37.625
So I need to delete these files.

41
00:02:37.625 --> 00:02:42.705
I don't need to delete,
you can just replace them.

42
00:02:42.705 --> 00:02:46.061
Actually, we need several
versions in several resolutions.

43
00:02:46.061 --> 00:02:48.396
It's actually really problematic.

44
00:02:48.396 --> 00:02:52.213
Most tools for mobile prototyping,

45
00:02:52.213 --> 00:02:56.035
they let you export the Android way.

46
00:02:56.035 --> 00:02:58.124
But fortunately, we don't even need that.

47
00:02:58.124 --> 00:02:59.859
Let me show you how that works.

48
00:02:59.859 --> 00:03:03.350
Over mipmap, I'm going to right-click, and

49
00:03:03.350 --> 00:03:07.463
I'm going to add a new image asset,
not a vector asset.

50
00:03:07.463 --> 00:03:11.054
Vector asset is not gonna work for
the apps icon, okay?

51
00:03:11.054 --> 00:03:12.996
So we are in image asset.

52
00:03:12.996 --> 00:03:17.303
And here,
I have an icon tool where I can select,

53
00:03:17.303 --> 00:03:21.521
firstly, icon that I want for
the foreground.

54
00:03:21.521 --> 00:03:26.763
By default, it's taking an image
that I don't want, okay?

55
00:03:26.763 --> 00:03:30.879
So I need to pick an image
that I wanna use.

56
00:03:30.879 --> 00:03:37.775
And from the assets.zip file that you
have in the repository, we do have here,

57
00:03:40.521 --> 00:03:44.973
An icon PNG, okay?

58
00:03:44.973 --> 00:03:45.825
That one.

59
00:03:45.825 --> 00:03:50.105
But look at that,
that icon doesn't look right.

60
00:03:50.105 --> 00:03:52.606
What's the problem with that icon?

61
00:03:52.606 --> 00:03:56.491
Android today, since Android 8 Oreo,

62
00:03:56.491 --> 00:04:00.730
there's been a couple of years since then.

63
00:04:00.730 --> 00:04:06.323
It supports different shapes, different
masks that are being applied to the icon.

64
00:04:06.323 --> 00:04:11.674
So actually, what you need to do is to
resize your icon to add more padding

65
00:04:11.674 --> 00:04:17.401
to the icon until you are happy with how
it looks like on every possible shape.

66
00:04:17.401 --> 00:04:21.359
So it depends on the manufacturer and
the phone model that you have, or

67
00:04:21.359 --> 00:04:25.720
even the launcher because you can change
the launcher in your Android phone,

68
00:04:25.720 --> 00:04:27.822
it's the shape that is going to use.

69
00:04:27.822 --> 00:04:32.072
Of course, that green that you
see doesn't look right, so

70
00:04:32.072 --> 00:04:34.714
you go here to the background layer.

71
00:04:34.714 --> 00:04:38.974
And we're going to change that background.

72
00:04:38.974 --> 00:04:43.544
Sorry, the background layer, we're going
to use a color instead of the green.

73
00:04:43.544 --> 00:04:46.009
I can click here and I can use a picker.

74
00:04:46.009 --> 00:04:51.247
And I can just pick the white
one from here, okay?

75
00:04:51.247 --> 00:04:57.359
So this is the final icon, and if I'm
happy with it, I will call it ic_launcher.

76
00:04:57.359 --> 00:05:01.147
I can change the name, but this is
the default name for the icon launcher.

77
00:05:01.147 --> 00:05:05.916
And when you hit Next, it will tell you
that it will replace the ones that you

78
00:05:05.916 --> 00:05:09.490
have if you're happy with that and
say, yes, finish.

79
00:05:09.490 --> 00:05:16.017
And now, if I run the app again,
That's giving me an error.

80
00:05:16.017 --> 00:05:18.425
So let's see, duplicate resources.

81
00:05:20.096 --> 00:05:21.988
There we go.

82
00:05:21.988 --> 00:05:26.246
So the problem that I have right now
is that because I'm using PNG and

83
00:05:26.246 --> 00:05:30.820
not WebP files, so they have the same
name, so I need to delete the WebP.

84
00:05:30.820 --> 00:05:35.051
The WebP is the default one,
so right-click &gt; Delete.

85
00:05:37.997 --> 00:05:40.021
But it says, you know what,
someone is using this,

86
00:05:40.021 --> 00:05:41.405
are you sure you wanna delete them?

87
00:05:41.405 --> 00:05:43.204
Yeah, delete it anyway.

88
00:05:48.130 --> 00:05:53.873
And also,
we have the same problem on round.

89
00:05:53.873 --> 00:05:57.134
We have WebP files, but it's round.

90
00:05:57.134 --> 00:06:01.044
Round is actually prepare optimized for

91
00:06:01.044 --> 00:06:06.335
round icons that is typically
used on watches, okay?

92
00:06:06.335 --> 00:06:11.498
So I need to also delete, You can also

93
00:06:11.498 --> 00:06:18.424
delete these WebP files before putting
yours, and it will skip one process.

94
00:06:18.424 --> 00:06:22.859
Okay, so now we are done here.

95
00:06:22.859 --> 00:06:30.165
If we go to the launcher,
our app look fine as expected.

96
00:06:30.165 --> 00:06:33.116
And you can add it to
a home screen if you want,

97
00:06:33.116 --> 00:06:37.952
an icon and put it in the home screen
of any other app in the Android system.

98
00:06:37.952 --> 00:06:41.048
So what if you wanna share
this app with a friend, or

99
00:06:41.048 --> 00:06:43.930
what if you wanna upload
this to the Play Store?

100
00:06:43.930 --> 00:06:47.230
Well, you need to build the final file.

101
00:06:47.230 --> 00:06:51.725
To do that, you go to the Build menu, and

102
00:06:51.725 --> 00:06:57.426
you need to select
Build Bundle(s) / APK(s).

103
00:06:57.426 --> 00:07:02.912
And here, we have two options,
Build APK(s) and Build Bundle(s).

104
00:07:02.912 --> 00:07:08.250
So an APK, it's an Android package, is
the only format compatible with the phone.

105
00:07:08.250 --> 00:07:13.379
So if you wanna send a friend your app,
you need to create an APK.

106
00:07:13.379 --> 00:07:16.520
Bundle is for the Play Store only and
only Play Store.

107
00:07:16.520 --> 00:07:21.278
If you're going to publish in other
stores such as the Amazon App Store or

108
00:07:21.278 --> 00:07:25.490
the Microsoft Store that is
accepting Android app for Windows,

109
00:07:25.490 --> 00:07:27.924
you must use our APKs as well, okay?

110
00:07:27.924 --> 00:07:31.855
And from here, you hit Build APK(s),
this is going to build your app.

111
00:07:31.855 --> 00:07:35.911
And when it's ready at the bottom,
it will say that your APK is ready.

112
00:07:35.911 --> 00:07:41.751
You can locate the file,
and that's your debug APK.

113
00:07:41.751 --> 00:07:44.622
So it includes debugging accessories.

114
00:07:44.622 --> 00:07:49.536
If you don't want debug and you want
production in the same view, you go and

115
00:07:49.536 --> 00:07:56.886
generate a signed bundle APK, Where
you pick using Android bundle or APK.

116
00:07:56.886 --> 00:08:00.637
But for a friend,
you can just send the debug version, okay?

117
00:08:00.637 --> 00:08:01.385
And next,

118
00:08:01.385 --> 00:08:06.719
you need to create a signature if you
want to create the production version.

119
00:08:06.719 --> 00:08:11.019
But if you create the production
version for the Play Store, it's AAV,

120
00:08:11.019 --> 00:08:12.509
you don't need to sign.

121
00:08:12.509 --> 00:08:15.089
This is kind of an old mechanism.

122
00:08:15.089 --> 00:08:18.479
So today,
if you wanna test in your own devices,

123
00:08:18.479 --> 00:08:22.213
you just generate an unsigned APK and
that will work.

124
00:08:22.213 --> 00:08:23.778
And if you wanna go to the Play Store,

125
00:08:23.778 --> 00:08:26.869
you need to create an Android App Bundle
that you do it from there, okay?

126
00:08:26.869 --> 00:08:30.770
So in the menu Build, you create

127
00:08:30.770 --> 00:08:35.835
an Android App Bundle, and that's all.

128
00:08:35.835 --> 00:08:38.079
Actually, what's going
on with Android bundle?

129
00:08:38.079 --> 00:08:40.899
The idea is that in Android,

130
00:08:40.899 --> 00:08:46.662
a lot of developers are inserting
a lot of assets, right?

131
00:08:46.662 --> 00:08:49.253
High resolution, low resolution,
lots of eMachines.

132
00:08:49.253 --> 00:08:51.408
Sometimes eMachines in
different languages.

133
00:08:51.408 --> 00:08:55.900
And when you are downloading that from the
store, you will download all the assets.

134
00:08:55.900 --> 00:09:00.679
Even the assets that you will never render
in your phone because your phone is

135
00:09:00.679 --> 00:09:02.105
not high resolution.

136
00:09:02.105 --> 00:09:09.516
So when you upload an app bundle, the Play
Store will actually create an APK for you.

137
00:09:09.516 --> 00:09:14.509
And he will ship to
the user the APK with only

138
00:09:14.509 --> 00:09:19.506
the resources that user will need, okay?

139
00:09:19.506 --> 00:09:23.152
It's for efficiency if you want, okay?

140
00:09:23.152 --> 00:09:25.213
Make sense?

141
00:09:25.213 --> 00:09:30.768
Any question on the building process and
finishing the process, the icon?

142
00:09:30.768 --> 00:09:35.531
&gt;&gt; You said, I don't wanna get lost,
you said Android

143
00:09:35.531 --> 00:09:40.849
doesn't support PNGs but
then you get PNGs exported out.

144
00:09:40.849 --> 00:09:46.304
&gt;&gt; Yeah, what you need here is PNGs,
but it doesn't support just one PNG.

145
00:09:46.304 --> 00:09:50.941
So I'll tell you, when we actually
see these in the real file system, so

146
00:09:50.941 --> 00:09:55.807
if you right-click &gt; Open In &gt; the Finder,
but you're going to see here,

147
00:09:55.807 --> 00:09:57.575
let me zoom in a little bit.

148
00:09:57.575 --> 00:10:01.607
It's a lot of mipmap folders,
so it's not one folder.

149
00:10:01.607 --> 00:10:04.691
We have different,
these are called qualifiers.

150
00:10:04.691 --> 00:10:07.040
So we have folders with qualifiers.

151
00:10:07.040 --> 00:10:09.973
So we have mdpi, that means medium DPI.

152
00:10:09.973 --> 00:10:15.604
We have hdpi, high DPI,
anydpi, this is trouble.

153
00:10:15.604 --> 00:10:22.526
And then this is like the adult mode,
xxx, extra, extra, extra high DPI.

154
00:10:22.526 --> 00:10:28.371
And you have different PNG in
different sizes for different phones.

155
00:10:28.371 --> 00:10:33.285
And also, you have the foreground,
the round version, and the square version.

156
00:10:33.285 --> 00:10:35.943
So creating all these files
manually is actually a lot of work.

157
00:10:35.943 --> 00:10:40.629
That's why it's better to use
the mipmap generator that we have

158
00:10:40.629 --> 00:10:44.550
within Android Studio to
generate all these assets.

159
00:10:44.550 --> 00:10:50.547
As an input, it's better to have a really
high resolution PNG version of your icon,

160
00:10:50.547 --> 00:10:52.240
like 512 by 512.

161
00:10:52.240 --> 00:10:54.919
Then the final sizes as I mentioned will

162
00:10:54.919 --> 00:10:58.091
be created automatically
by Android Studio.

163
00:10:58.091 --> 00:10:59.657
&gt;&gt; Okay.

164
00:10:59.657 --> 00:11:00.770
&gt;&gt; Okay, make sense?

165
00:11:00.770 --> 00:11:05.976
&gt;&gt; Yep,
what did the mip actually stand for, MIP?

166
00:11:05.976 --> 00:11:10.249
&gt;&gt; Actually, I don't remember, and
I'm not sure if it has any meaning.

167
00:11:10.249 --> 00:11:14.854
I mean, when Android started doing this,
adding that mipmap folder that

168
00:11:14.854 --> 00:11:19.477
wasn't serving them since the beginning,
I think it was five years ago.

169
00:11:19.477 --> 00:11:23.127
Before that, the icons were
actually in the drawable folder.

170
00:11:23.127 --> 00:11:27.478
In fact, today, if you move the icons into
the drawable folder and remove the mipmap,

171
00:11:27.478 --> 00:11:28.563
it will work anyway.

172
00:11:28.563 --> 00:11:30.298
But they separate this, and

173
00:11:30.298 --> 00:11:35.590
I actually learn about mipmap at that time
because I've never heard of mipmap before.

174
00:11:35.590 --> 00:11:36.585
So what's that?

175
00:11:36.585 --> 00:11:39.416
Well, and then I realized that it
had to do with textures on gaming

176
00:11:39.416 --> 00:11:40.610
in different resolution.

177
00:11:40.610 --> 00:11:42.832
So they're doing this with icons and

178
00:11:42.832 --> 00:11:47.359
other things that you need to ship with
your app in different resolutions.

179
00:11:47.359 --> 00:11:52.639
And the idea is that on drawable,
it's better to have elements,

180
00:11:52.639 --> 00:11:57.548
single elements for
single resolution, that kind of idea.

181
00:11:57.548 --> 00:12:02.180
But to be honest,
I don't remember if MIP has any meaning,

182
00:12:02.180 --> 00:12:04.784
we can go with that, but anyway.

183
00:12:07.230 --> 00:12:09.001
Any question, any final question?

184
00:12:09.001 --> 00:12:11.841
So our app is ready, shipped to the store.

185
00:12:11.841 --> 00:12:14.292
Of course,
if you wanna publish this in the store,

186
00:12:14.292 --> 00:12:17.496
you need to create the publisher account,
the Google Play Store.

187
00:12:17.496 --> 00:12:22.150
It's $20 US of one-time fee.

188
00:12:22.150 --> 00:12:25.650
I mean, it's not about the money, it's not
like Google is making a lot of money for

189
00:12:25.650 --> 00:12:26.305
those $20.

190
00:12:26.305 --> 00:12:29.596
It's just to have a minimum filter, okay?

191
00:12:29.596 --> 00:12:34.541
That you need a credit card, and you need
to have $20 to spend to publish apps,

192
00:12:34.541 --> 00:12:35.650
and that's all.

193
00:12:35.650 --> 00:12:42.621
When you submit your app, your AAB, the
Android bundle that you create from here,

194
00:12:42.621 --> 00:12:48.308
there is a very tiny QA process in
the store that will check your app.

195
00:12:48.308 --> 00:12:53.080
And if everything is correct in a couple
of hours, it will be republished, okay?

196
00:12:53.080 --> 00:12:55.761
So that's all for
how to create Android app.

197
00:12:55.761 --> 00:12:58.911
And if you wanna share this with a friend,
an APK,

198
00:12:58.911 --> 00:13:04.014
your friend can just install that directly
from the phone or through a USB cable.

199
00:13:04.014 --> 00:13:08.324
A buddy that gave,
your friend needs to disable security,

200
00:13:08.324 --> 00:13:12.470
you need to accept install
apps from untrusted sources.

