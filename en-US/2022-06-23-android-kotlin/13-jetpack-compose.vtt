WEBVTT

1
00:00:00.081 --> 00:00:06.881
We're using Jetpack Compose,
not the classic Android XML development.

2
00:00:06.881 --> 00:00:09.507
And by the way, that's good news.

3
00:00:09.507 --> 00:00:12.696
So I've been an Android developer for
ten years and

4
00:00:12.696 --> 00:00:17.013
I've created several apps, and
the XML system was always painful.

5
00:00:17.013 --> 00:00:20.815
Okay, I'm not saying this is not painful,
but it's less painful for

6
00:00:20.815 --> 00:00:22.433
at least a lot of situations.

7
00:00:22.433 --> 00:00:27.330
Okay, the Android XML world
was always kind of heavy

8
00:00:27.330 --> 00:00:31.235
compared with iOS or or other platforms.

9
00:00:31.235 --> 00:00:35.576
So main concepts of Jetpack Compose,
first, Android activity.

10
00:00:35.576 --> 00:00:39.729
Actually the activity is not
a Jetpack Compose concept, but

11
00:00:39.729 --> 00:00:42.752
we need to understand
quickly what that is.

12
00:00:42.752 --> 00:00:45.253
In classic Android development,

13
00:00:45.253 --> 00:00:49.486
every screen of your app was
actually an activity, okay?

14
00:00:49.486 --> 00:00:53.729
An activity is something that
we register into the OS.

15
00:00:53.729 --> 00:00:56.596
So we as developers,
we register activities.

16
00:00:56.596 --> 00:01:02.247
Activities are like user interfaces

17
00:01:02.247 --> 00:01:06.079
that are known by the OS.

18
00:01:06.079 --> 00:01:10.069
Today, we can have an app
with only one activity.

19
00:01:10.069 --> 00:01:13.032
And then we navigate
between different views or

20
00:01:13.032 --> 00:01:15.707
different screens in that same activity.

21
00:01:15.707 --> 00:01:18.850
That's what we're going to do
with Jetpack Compose today.

22
00:01:18.850 --> 00:01:22.003
So we will have only one activity, okay?

23
00:01:22.003 --> 00:01:25.047
Then the app has a theme.

24
00:01:25.047 --> 00:01:28.099
A theme is a set of colors.

25
00:01:28.099 --> 00:01:29.127
It's a color palette.

26
00:01:29.127 --> 00:01:32.474
It's also a set of typography settings.

27
00:01:32.474 --> 00:01:39.404
It can also contain dimensions and
things about your current theme, okay?

28
00:01:39.404 --> 00:01:42.418
In fact, in our project,
we do have a theme.

29
00:01:42.418 --> 00:01:46.354
If you look at the source
code in the Java folder,

30
00:01:46.354 --> 00:01:51.443
there is a UI theme sub-folder
there with some Kotlin files for

31
00:01:51.443 --> 00:01:55.490
the find colors, shapes,
theme, and the type.

32
00:01:55.490 --> 00:01:58.899
And if you're getting your color,
you'll see some declarations.

33
00:01:58.899 --> 00:02:05.794
The most important concept that we
are going to use here is a composable.

34
00:02:05.794 --> 00:02:10.136
A composable is actually a UI component.

35
00:02:10.136 --> 00:02:15.442
What we typically know as a component,
a view, a widget, in other platforms.

36
00:02:15.442 --> 00:02:18.426
Here, it's called composable, okay?

37
00:02:18.426 --> 00:02:21.640
So we're going to be building composable.

38
00:02:21.640 --> 00:02:26.831
It's like an HTML element,
if you want, or a web component.

39
00:02:26.831 --> 00:02:30.615
So composables will have properties and

40
00:02:30.615 --> 00:02:35.296
modifiers, but
we'll get into that in a minute.

41
00:02:35.296 --> 00:02:40.216
And modifier, it's a function that
will return another composable.

42
00:02:40.216 --> 00:02:41.978
It will take a composable.

43
00:02:41.978 --> 00:02:47.178
It will modify the composable and
will return another composable, okay?

44
00:02:47.178 --> 00:02:53.322
Typically in Jetpack Compose,
modifiers are being used for

45
00:02:53.322 --> 00:02:59.345
layout changes, for
defining width, height, borders,

46
00:02:59.345 --> 00:03:04.900
paddings, margins for
layout, that sort of things.

47
00:03:04.900 --> 00:03:11.944
And also for events when something
is clickable, scrollable, and so on.

48
00:03:11.944 --> 00:03:13.923
That's a modifier.

49
00:03:13.923 --> 00:03:16.633
Composition is actually the name of,

50
00:03:16.633 --> 00:03:21.629
I'm simplifying this a little bit
at this point, but a composition is

51
00:03:21.629 --> 00:03:26.559
the tree structure of what you have
on the screen of your composable.

52
00:03:26.559 --> 00:03:29.497
So we have a composition of composables.

53
00:03:29.497 --> 00:03:34.709
And a composable is being composed by
the framework, that's kind of idea, okay?

54
00:03:36.878 --> 00:03:40.023
We have Mutable State &amp; Remember.

55
00:03:40.023 --> 00:03:43.335
These are things that we will
see in action in a minute, okay?

56
00:03:43.335 --> 00:03:47.744
So a composable by default is read only.

57
00:03:47.744 --> 00:03:50.877
But we can have mutable state.

58
00:03:50.877 --> 00:03:58.009
So things that will make our
composable re-render on the screen.

59
00:03:58.009 --> 00:04:01.378
We have composition local that
we're not going to see today, but

60
00:04:01.378 --> 00:04:05.374
composition local will let you do some
kind of global injection of services.

61
00:04:05.374 --> 00:04:06.592
It doesn't matter for now.

62
00:04:06.592 --> 00:04:13.380
Side effects, Side effects are for

63
00:04:13.380 --> 00:04:18.359
example things that are not
part of the composable.

64
00:04:18.359 --> 00:04:22.043
For example, going to the network,
that's a side effect.

65
00:04:22.043 --> 00:04:28.125
We have different dimension units in
Android and we're going to use two.

66
00:04:28.125 --> 00:04:34.588
We have px, that stands for pixel,
but we are not going to use pixel.

67
00:04:34.588 --> 00:04:40.183
Pixel, it's a physical pixel, which
means that the higher the resolution,

68
00:04:40.183 --> 00:04:44.611
the smaller the pixel, and
we don't wanna design like that.

69
00:04:44.611 --> 00:04:47.289
We're going to use most of the time dp's.

70
00:04:47.289 --> 00:04:51.752
dp means device independent pixel,
that is unit.

71
00:04:51.752 --> 00:04:52.867
We will see that in action.

72
00:04:52.867 --> 00:04:59.839
And sp, s for scalable,
we're going to use s for font sizes, okay?

73
00:04:59.839 --> 00:05:01.995
And I will explain what
that is in a minute.

74
00:05:01.995 --> 00:05:03.846
I think we have a question there.

75
00:05:03.846 --> 00:05:08.982
&gt;&gt; Yeah, is there something like hooks,
such as React, or what's the concept?

76
00:05:08.982 --> 00:05:16.184
&gt;&gt; So Jetpack Compose is
actually pretty similar to React.

77
00:05:16.184 --> 00:05:20.149
I don't wanna say that it's a copy,
but it's kind of, I mean,

78
00:05:20.149 --> 00:05:24.998
compared with other frameworks that
are part of the same deal, like Flutter or

79
00:05:24.998 --> 00:05:29.422
Swift UI, Jetpack Compose is the one
that is actually closer to React.

80
00:05:29.422 --> 00:05:34.149
We're going to see that
the mutable state is being defined

81
00:05:34.149 --> 00:05:37.148
in a very similar way as a React hook.

82
00:05:37.148 --> 00:05:39.901
So it's very similar to
use a state in React.

83
00:05:39.901 --> 00:05:42.489
We're going to see that in
action in a minute, okay?

84
00:05:42.489 --> 00:05:43.674
So it's pretty similar.

85
00:05:45.706 --> 00:05:51.263
Okay, and for graphical assets,
we are going to use PNG files and

86
00:05:51.263 --> 00:05:54.205
SVG for vector-based graphics.

87
00:05:54.205 --> 00:05:58.613
Have in mind,
Android does not support SVGs.

88
00:05:58.613 --> 00:06:02.158
You lied to us, well, Android Studio will

89
00:06:02.158 --> 00:06:07.085
convert the SVG into an Android
vector format, XML based.

90
00:06:07.085 --> 00:06:12.155
So we are going to take the SVG, but
actually Android Studio will convert that

91
00:06:12.155 --> 00:06:17.227
into another vector-based format that
is compatible with Android, okay?

92
00:06:17.227 --> 00:06:24.579
So from your designers, you will
probably need SVG files, okay, or PNG.

93
00:06:24.579 --> 00:06:25.389
Make sense?

94
00:06:25.389 --> 00:06:26.213
&gt;&gt; What is it?

95
00:06:26.213 --> 00:06:28.529
I'm sorry, did you say it
automatically convert to PNG?

96
00:06:28.529 --> 00:06:32.910
&gt;&gt; Not automatically,
we are going to do that,

97
00:06:32.910 --> 00:06:36.267
you need to convert SVGs into XML.

98
00:06:36.267 --> 00:06:39.187
And Android Studio will have
the tool to do that, okay?

99
00:06:39.187 --> 00:06:40.020
We're going to do that.

