WEBVTT

1
00:00:00.000 --> 00:00:03.980
So now that we have already covered
the basics of Kotlin the language,

2
00:00:03.980 --> 00:00:08.308
it's time to create our project and
start playing with the user interface.

3
00:00:10.651 --> 00:00:14.766
So back in Android Studio, I'm going
to create a project from scratch.

4
00:00:14.766 --> 00:00:18.084
So File &gt; New &gt; New Project.

5
00:00:19.561 --> 00:00:24.223
Here, we need to be very specific about
the template that we're going to use.

6
00:00:24.223 --> 00:00:28.979
First, you will see at the left that
we can pick the kind of project for

7
00:00:28.979 --> 00:00:31.490
Android that we want to create.

8
00:00:31.490 --> 00:00:36.151
We can create the project from Phone and
Tablet, Wear OS,

9
00:00:36.151 --> 00:00:40.811
those are the watches for
Android, Android TV, or Auto,

10
00:00:40.811 --> 00:00:44.630
that's on Android Auto apps for the car.

11
00:00:44.630 --> 00:00:47.340
We will focus on Phone and Tablet, and

12
00:00:47.340 --> 00:00:51.161
then we need to pick the kind
of activity that we want.

13
00:00:51.161 --> 00:00:54.089
We don't know what an activity is,
yet, but

14
00:00:54.089 --> 00:00:59.038
let's say for now, that an activity is
one screen in the operating system.

15
00:00:59.038 --> 00:01:05.127
So it's asking me what kind of screen or
window you want, okay?

16
00:01:05.127 --> 00:01:08.907
And we will pick one and only one.

17
00:01:08.907 --> 00:01:13.792
The one that says Empty Compose Activity
because we are going

18
00:01:13.792 --> 00:01:15.815
to use Jetpack Compose.

19
00:01:15.815 --> 00:01:20.584
And remember that logo that's
actually the Jetpack Compose logo.

20
00:01:20.584 --> 00:01:24.122
So every time you see that logo,
it means Jetpack Compose.

21
00:01:24.122 --> 00:01:29.066
All the other templates that we
have here are actually for the old,

22
00:01:29.066 --> 00:01:32.518
classic way to create user interface,
okay?

23
00:01:32.518 --> 00:01:35.271
So Empty Compose Activity &gt; Next.

24
00:01:35.271 --> 00:01:39.771
Then we need a name for the app,
I'm going to call this CoffeeMasters.

25
00:01:39.771 --> 00:01:42.832
Then it's asking me for a package name.

26
00:01:42.832 --> 00:01:47.891
The same happens when you build app for
Windows, or for iOS, or for macOS.

27
00:01:47.891 --> 00:01:52.586
Every app must have a unique ID
within the operating system and

28
00:01:52.586 --> 00:01:57.925
within the store, in this case,
the Play Store, or any other store.

29
00:01:57.925 --> 00:02:03.404
So how can we, not guarantee,
but how can be safe that we're

30
00:02:03.404 --> 00:02:09.000
not going to use a string that
someone else is using, as well.

31
00:02:09.000 --> 00:02:13.681
Well, one convention
that we have agreed on,

32
00:02:13.681 --> 00:02:18.730
is to use the name of our
website in reverse order.

33
00:02:18.730 --> 00:02:23.686
I don't know, for example,
com.frontendmasters, and

34
00:02:23.686 --> 00:02:25.774
then the name of the app.

35
00:02:25.774 --> 00:02:31.366
So that's the ID that the unique
primary key that will identify

36
00:02:31.366 --> 00:02:37.250
our app within the operating system and
within the store.

37
00:02:37.250 --> 00:02:42.193
You can change that ID until the moment
you publish these to the Play Store.

38
00:02:42.193 --> 00:02:46.941
If you publish this to the Play Store
that ID will still be there forever.

39
00:02:46.941 --> 00:02:52.628
Because if you change ID it's a different
app, so it's not going to be an update.

40
00:02:52.628 --> 00:02:55.420
I mean the user is never seeing the ID.

41
00:02:55.420 --> 00:03:00.551
The only moment where you're going to see
that ID is in the Play Store website.

42
00:03:00.551 --> 00:03:05.742
If you look in the Play Store for any app,

43
00:03:05.742 --> 00:03:10.933
Microsoft Bing, if you look at the URL,

44
00:03:10.933 --> 00:03:18.437
the URL includes, I will zoom in here,
the ID of that app.

45
00:03:18.437 --> 00:03:21.501
This is com.microsoft.bing, okay?

46
00:03:21.501 --> 00:03:24.191
That's the only place where
users will see your ID.

47
00:03:24.191 --> 00:03:29.093
So pick one ID without a show,
go without the trademark that you

48
00:03:29.093 --> 00:03:32.715
are not allowed to use or
something like that.

49
00:03:32.715 --> 00:03:34.764
Okay so where are you gonna save this?

50
00:03:34.764 --> 00:03:35.947
The language is Kotlin.

51
00:03:35.947 --> 00:03:38.782
I cannot pick another one
because we are using, or

52
00:03:38.782 --> 00:03:42.695
we are going to use Jetpack Compose
that is Kotlin only.

53
00:03:42.695 --> 00:03:45.439
We cannot use Jetpack Compose with Java.

54
00:03:45.439 --> 00:03:49.948
And then the minimum SDK,
we have already discussed the minimum SDK,

55
00:03:49.948 --> 00:03:52.710
I think that for Android 5 is good enough.

56
00:03:52.710 --> 00:03:56.419
Finish, and
this is going to create the project.

57
00:03:56.419 --> 00:04:00.143
We will see that it takes
a couple of seconds,

58
00:04:00.143 --> 00:04:06.224
sometimes it may take a couple of minutes,
actually, to finish, okay?

59
00:04:06.224 --> 00:04:10.082
It depends on how fast your computer is or

60
00:04:10.082 --> 00:04:14.513
how all your Android Studio
installation is?

61
00:04:14.513 --> 00:04:18.000
Because, if you have installed your
Android Studio a few months ago,

62
00:04:18.000 --> 00:04:21.682
sometimes you need to download more
libraries and it will take some time.

63
00:04:21.682 --> 00:04:25.970
If you have just installed
Android Studio it will be faster,

64
00:04:25.970 --> 00:04:27.995
it should be faster, okay?

65
00:04:27.995 --> 00:04:31.864
And this is the interface that
you're going to see after

66
00:04:31.864 --> 00:04:34.600
creating the first project.

67
00:04:34.600 --> 00:04:40.594
So I'm going to close MainActivity now,
there is a little x, close there.

68
00:04:40.594 --> 00:04:46.237
Just to stay clean for a second.

69
00:04:46.237 --> 00:04:51.463
First, we have some panels,
we have a panel here from the project

70
00:04:51.463 --> 00:04:55.752
that you can click,
you can open and close the panel.

71
00:04:55.752 --> 00:05:00.621
In the settings of that panel,
you can actually undock it.

72
00:05:00.621 --> 00:05:04.694
I mean, if you have multiple monitors,
you can undock each panel,

73
00:05:04.694 --> 00:05:08.919
the same with an intelligent idea,
because it's similar to that ID.

74
00:05:08.919 --> 00:05:13.807
But in case you are coming from VS Code or
other IDE, it's like a new IDE.

75
00:05:13.807 --> 00:05:18.126
So I'm jumping quickly over several stuff.

76
00:05:18.126 --> 00:05:20.079
And also we have some panels at the right,
okay?

77
00:05:20.079 --> 00:05:23.537
That you can open or minimize, okay?

78
00:05:23.537 --> 00:05:27.897
And then we have, like in the project,
we have a project navigator.

79
00:05:27.897 --> 00:05:30.384
So you're going to see here, first,

80
00:05:30.384 --> 00:05:33.899
there is a folder with
something known as a manifest.

81
00:05:33.899 --> 00:05:36.848
So it says AndroidManifest.xml, okay?

82
00:05:36.848 --> 00:05:41.715
That one, so the AndroidManifest.xml
is metadata for the operating system.

83
00:05:41.715 --> 00:05:45.090
We are not going to touch it for
today, probably, but

84
00:05:45.090 --> 00:05:49.740
if you wanna customize how your app
is working with the operating system,

85
00:05:49.740 --> 00:05:52.752
this is probably the place
to change metadata.

86
00:05:52.752 --> 00:05:55.439
So I promise you, too,
that we're not going to use XML, but

87
00:05:55.439 --> 00:05:57.725
we're not going to use XML for
the user interface.

88
00:05:57.725 --> 00:06:01.257
But the Android app is still using XML for
other things.

89
00:06:01.257 --> 00:06:05.236
So then there is a Java folder
which is actually funny, okay?

90
00:06:05.236 --> 00:06:07.767
Because we are not going
to write any Java.

91
00:06:07.767 --> 00:06:09.941
But why it's called the Java folder?

92
00:06:09.941 --> 00:06:14.903
Because remember our code is compiled
into this Dalvik Executable,

93
00:06:14.903 --> 00:06:19.361
that is a Java built on machine,
even if it's Kotlin, okay?

94
00:06:19.361 --> 00:06:22.204
So even if it's Kotlin,
it goes to the Java folder.

95
00:06:22.204 --> 00:06:24.868
Before actually looking at that folder,

96
00:06:24.868 --> 00:06:29.900
there are two other folders here that
they have a different background color.

97
00:06:30.900 --> 00:06:32.798
These are testing projects.

98
00:06:32.798 --> 00:06:38.310
So we have two other projects here
within our code, androidTest and test.

99
00:06:38.310 --> 00:06:43.142
Test is unit testing and
androidTest is UI testing, okay?

100
00:06:43.142 --> 00:06:48.006
We won't cover these today, but
have in mind what you have here inside is

101
00:06:48.006 --> 00:06:52.818
the test suites, so we can write our
own suites and blah, blah, blah.

102
00:06:52.818 --> 00:06:56.931
So we have the Java folder where we
are going to see our Kotlin code, and

103
00:06:56.931 --> 00:06:58.760
here there is a MainActivity.

104
00:06:58.760 --> 00:07:03.660
Remember, activity for now is kind
of a screen, so is the main screen.

105
00:07:03.660 --> 00:07:07.873
It's a kt file, so
if you open that, that's our code.

106
00:07:07.873 --> 00:07:15.629
And you can see on the right that we
can select three kinds of editors,

107
00:07:15.629 --> 00:07:19.930
Code only, Design only, and Split.

108
00:07:19.930 --> 00:07:22.245
You have code and design, and

109
00:07:22.245 --> 00:07:27.716
most of the time this is the layout
that we are going to use here, okay?

110
00:07:27.716 --> 00:07:31.678
Split, and we have some code that
we will explain in a minute.

111
00:07:31.678 --> 00:07:37.971
But before that, I wanna mention
that also we have the res folder.

112
00:07:37.971 --> 00:07:40.323
This is for resources, okay?

113
00:07:40.323 --> 00:07:45.631
So in here we are going to find some
things that we will cover later.

114
00:07:45.631 --> 00:07:50.729
Here, we put resources, Gradle Scripts.

115
00:07:50.729 --> 00:07:57.180
Gradle, it's a set of scripts that
are being used for the building process.

116
00:07:57.180 --> 00:08:00.097
So there is a whole scripting language and

117
00:08:00.097 --> 00:08:04.024
platform where you can customize
how your app is built.

118
00:08:04.024 --> 00:08:07.048
But for now,
we will just give them like this.

119
00:08:07.048 --> 00:08:11.184
And while it seems like
a simple structure, actually,

120
00:08:11.184 --> 00:08:16.640
I wanna mention that what you're seeing
here is not the real file system,

121
00:08:16.640 --> 00:08:19.813
it's what it's called the Android view.

122
00:08:19.813 --> 00:08:24.696
If you click here where it says Android,
I'm talking about there, okay?

123
00:08:24.696 --> 00:08:28.740
At the top, instead of Android,
I can select Project.

124
00:08:28.740 --> 00:08:34.240
And now you will see the real file
system that is much more complex.

125
00:08:34.240 --> 00:08:37.372
I don't wanna get with this right now, but

126
00:08:37.372 --> 00:08:41.620
you will find hundreds of
files in your project.

127
00:08:41.620 --> 00:08:46.542
The Android view is just showing you what

128
00:08:46.542 --> 00:08:50.607
you need to see and touch, okay?

129
00:08:50.607 --> 00:08:54.023
So in the Java folder we
are going to find our source code.

130
00:08:54.023 --> 00:08:58.255
That's probably where we
are going to play more.

131
00:08:58.255 --> 00:09:01.183
Okay, so main activity is,

132
00:09:01.183 --> 00:09:07.042
let's say the entry point to
my app at this point, okay?

133
00:09:07.042 --> 00:09:10.348
So there are a lot of code here, but

134
00:09:10.348 --> 00:09:15.712
at one point it says Greeting("Android"),
okay?

135
00:09:15.712 --> 00:09:20.824
I'm going to comment
that Greeting("Android"),

136
00:09:20.824 --> 00:09:25.180
like that,
you comment like in any C language.

137
00:09:25.180 --> 00:09:30.916
You can comment with command and
the forward slash.

138
00:09:30.916 --> 00:09:36.784
And I'm going to say, for example,
here, (text: "Hello"), okay?

139
00:09:36.784 --> 00:09:40.437
Just that, we don't know what
everything is here for now,

140
00:09:40.437 --> 00:09:42.421
but I'm just adding text here.

141
00:09:42.421 --> 00:09:48.246
If you pay attention at the right it
says that the preview is out of date.

142
00:09:48.246 --> 00:09:52.024
And there is a link there that says,
Build &amp; Refresh.

143
00:09:52.024 --> 00:09:55.696
You're going to use this a lot,
Build &amp; Refresh.

144
00:09:55.696 --> 00:10:00.242
Unfortunately, the shortcut it's not so
simple, okay?

145
00:10:00.242 --> 00:10:02.704
I mean, it's not a big deal, but, yeah.

146
00:10:02.704 --> 00:10:05.602
At least on the Mac, okay?

147
00:10:05.602 --> 00:10:11.009
You need four fingers actually
to trigger that link.

148
00:10:11.009 --> 00:10:13.825
But actually this is a preview.

149
00:10:13.825 --> 00:10:19.520
So the preview will actually preview
what you have in the Kotlin code, okay?

150
00:10:19.520 --> 00:10:22.117
And as you can see they're
really really small.

151
00:10:22.117 --> 00:10:27.278
I can zoom in,
it says Hello Android, okay?

152
00:10:27.278 --> 00:10:31.468
Here you have 1:1,
that will show you 100%.

153
00:10:31.468 --> 00:10:33.861
And this one will actually
fit into the screen.

154
00:10:33.861 --> 00:10:39.760
Unfortunately, if you have a trackball,
the pin Chester, doesn't work here.

155
00:10:39.760 --> 00:10:44.680
So you need to use a plus and
minus buttons to zoom in or zoom out.

156
00:10:44.680 --> 00:10:49.889
So we're actually previewing what
we have here in the code, okay?

157
00:10:49.889 --> 00:10:52.079
Now we will try to
understand what's going on.

158
00:10:52.079 --> 00:10:54.470
First, is this just a preview?

159
00:10:54.470 --> 00:10:55.897
What is a preview?

160
00:10:55.897 --> 00:11:01.149
The preview is actually running
an emulator behind the scenes.

161
00:11:01.149 --> 00:11:04.296
So it's not just an IDE preview.

162
00:11:04.296 --> 00:11:06.764
What you see, what you get editor, okay?

163
00:11:06.764 --> 00:11:11.989
And we think editor is actually
executing this in a real

164
00:11:11.989 --> 00:11:18.025
Android environment and
bringing the canvas back into the ID.

165
00:11:18.025 --> 00:11:23.304
That's why every time you make a big
change, like I add another text here.

166
00:11:23.304 --> 00:11:27.956
It says that the preview is out of date
because I need to rebuild and recompile.

167
00:11:27.956 --> 00:11:33.404
Because this is actually executed in
a real Android environment, okay?

168
00:11:33.404 --> 00:11:34.974
And they need to Build &amp; Refresh.

169
00:11:34.974 --> 00:11:42.312
Some small changes such
as the text inside, Okay?

170
00:11:42.312 --> 00:11:45.831
Sometimes can be adjusted automatically,

171
00:11:45.831 --> 00:11:50.689
and sometimes it's not working,
so you need to refresh it.

172
00:11:50.689 --> 00:11:56.003
There is a refresh button there
at the top, Build Refresh, okay?

173
00:11:56.003 --> 00:11:58.179
Okay, cool, so.

174
00:12:00.980 --> 00:12:02.948
&gt;&gt; That one is not showing Hello World.

175
00:12:02.948 --> 00:12:08.838
&gt;&gt; It's not showing Hello World,
it's showing Hello Android, why is that?

176
00:12:08.838 --> 00:12:14.912
So first, here is Greeting("Android"),
so let's Build &amp; Refresh.

177
00:12:17.086 --> 00:12:19.624
And it's still saying that.

178
00:12:19.624 --> 00:12:22.825
If I delete Greeting,
it's still showing that.

179
00:12:22.825 --> 00:12:26.787
So why is showing a different text?

180
00:12:26.787 --> 00:12:29.609
That's a pretty good question.

181
00:12:29.609 --> 00:12:35.276
Well, it has to do with,
what are we previewing?

182
00:12:35.276 --> 00:12:37.918
We don't know yet
what everything means here,

183
00:12:37.918 --> 00:12:41.630
now we will start
understanding what's going on.

184
00:12:41.630 --> 00:12:46.344
But there is a preview here,
there is annotation here that says,

185
00:12:46.344 --> 00:12:51.600
@Preview over this code that says,
Greeting("Android").

186
00:12:51.600 --> 00:12:54.764
So it doesn't matter what
I'm actually typing here,

187
00:12:54.764 --> 00:12:57.043
it does not seem to change the preview.

188
00:12:57.043 --> 00:13:01.678
That doesn't mean, that if I run my app,
how do I run the app?

189
00:13:01.678 --> 00:13:07.182
Using the Play button that you have there,
oops sorry.

190
00:13:07.182 --> 00:13:12.742
That one or from the Run menu, Run app.

191
00:13:12.742 --> 00:13:16.754
By default it's going to run
your app in an emulator.

192
00:13:18.200 --> 00:13:23.018
So if you run this,
it will open an emulator, that's the app

193
00:13:23.018 --> 00:13:27.941
that we're going to build by the way,
that says Hello World.

194
00:13:27.941 --> 00:13:33.205
So the preview says Hello Android, but
my real Android emulator says Hello World.

195
00:13:33.205 --> 00:13:37.880
So what you're previewing is what
you define as a preview that maybe

196
00:13:37.880 --> 00:13:41.993
it's not what is actually being
shipped to the app, okay?

197
00:13:41.993 --> 00:13:45.496
We will get into the preview
idea in a minute.

198
00:13:45.496 --> 00:13:49.711
So that means that you can have your
own emulator, Android emulator.

199
00:13:49.711 --> 00:13:52.417
The emulator is actually built on machine.

200
00:13:52.417 --> 00:13:55.102
It's running the full operating system.

201
00:13:55.102 --> 00:13:58.156
And if you want,
you can create more emulators.

202
00:13:58.156 --> 00:14:05.278
To do that, you need to use that little
phone with the little Android green icon,

203
00:14:05.278 --> 00:14:10.124
that's called the AVD Manager or
the Device Manager.

204
00:14:10.124 --> 00:14:13.260
And the Device Manager will
let you create more devices.

205
00:14:13.260 --> 00:14:16.719
When you install Android Studio
you have only one,

206
00:14:16.719 --> 00:14:19.059
but you can create other devices.

207
00:14:19.059 --> 00:14:22.049
So you can emulate your
own Android device.

208
00:14:22.049 --> 00:14:25.463
You can have a tablet, a cheap phone,

209
00:14:25.463 --> 00:14:30.705
high resolution smartphone,
and I can grade to Pixel 5.

210
00:14:30.705 --> 00:14:35.193
Next, then I can pick the version
of the OS that they wanna emulate.

211
00:14:35.193 --> 00:14:38.694
Because, remember,
every version is different.

212
00:14:38.694 --> 00:14:44.774
So by default, you will have the latest
version of the API available.

213
00:14:44.774 --> 00:14:47.499
Remember the API level, the API number.

214
00:14:47.499 --> 00:14:52.959
But if you want, you can download
previous version or even future versions.

215
00:14:52.959 --> 00:14:57.589
Remember I mentioned that
the surnames were our back, so

216
00:14:57.589 --> 00:15:00.681
now we have Android Tiramisu, okay?

217
00:15:00.681 --> 00:15:04.894
That will be API 33.

218
00:15:04.894 --> 00:15:09.829
Remember that API number is the most
important part for us as developer.

219
00:15:09.829 --> 00:15:12.880
But for now,
one emulator will make the trick.

