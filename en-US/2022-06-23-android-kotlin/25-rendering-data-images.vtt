WEBVTT

1
00:00:00.490 --> 00:00:07.408
So, the next step is to start rendering
products on the screen, okay?

2
00:00:07.408 --> 00:00:08.048
So, for

3
00:00:08.048 --> 00:00:14.470
that we will start working on the menu
patient that right now is empty, okay?

4
00:00:14.470 --> 00:00:19.245
So, in this case,
we also need to render a product,

5
00:00:19.245 --> 00:00:24.730
and again, this is just an image,
a text and a button.

6
00:00:24.730 --> 00:00:28.633
The only new thing that we
are going to have here is a button,

7
00:00:28.633 --> 00:00:33.020
to speed up the process because we
have already seen how to do that.

8
00:00:34.630 --> 00:00:39.342
We can just take from
the companion website,

9
00:00:39.342 --> 00:00:42.940
we are here in designing the menu.

10
00:00:42.940 --> 00:00:48.978
This is 5, 2, and
I have here a ProductItem dummy,

11
00:00:48.978 --> 00:00:53.419
okay, that am going to copy and paste.

12
00:00:53.419 --> 00:00:58.030
And this is something that
we have already done,

13
00:00:58.030 --> 00:01:02.419
there are just two things
that are kind of new.

14
00:01:02.419 --> 00:01:07.548
Every time that you base remember
you have to go over your imports.

15
00:01:09.677 --> 00:01:12.450
Okay, have that in mind.

16
00:01:12.450 --> 00:01:17.032
Sometimes when you add one import,
you need to add more imports, it's weird.

17
00:01:17.032 --> 00:01:22.572
That's how Kotlin works
with extension function.

18
00:01:25.182 --> 00:01:29.398
So, dp, Row, padding, everything is

19
00:01:29.398 --> 00:01:34.115
actually something that
you need to import.

20
00:01:39.434 --> 00:01:49.038
Okay, By the way look at this,

21
00:01:49.038 --> 00:01:51.711
I have imported Color
from the wrong place,

22
00:01:51.711 --> 00:01:54.110
actually it was the one that imported.

23
00:01:54.110 --> 00:01:57.752
So, now white is not actually there,
but if I try to import white,

24
00:01:57.752 --> 00:01:58.920
it doesn't exist.

25
00:01:58.920 --> 00:02:03.940
So, the thing is that when
we look at the import here,

26
00:02:03.940 --> 00:02:09.580
Color is not important from androidx but
from android.

27
00:02:09.580 --> 00:02:14.630
So, sometimes you need to be careful when

28
00:02:14.630 --> 00:02:23.390
you're importing to pick the one
from androidx, okay, cool.

29
00:02:23.390 --> 00:02:26.152
So, we still have two errors to solve,

30
00:02:26.152 --> 00:02:31.390
one is that it's expecting an image
in the drawable folder, okay?

31
00:02:31.390 --> 00:02:34.010
This is called black coffee and
I don't have that image.

32
00:02:34.010 --> 00:02:38.534
This is a dummy image that later we will
replace with a real image from the server.

33
00:02:38.534 --> 00:02:42.940
So, I'm going to import that image, but
I wanna show you something on purpose.

34
00:02:42.940 --> 00:02:48.014
In the drawable folder,
I can also drag png files,

35
00:02:48.014 --> 00:02:54.060
so if I'm going here,
there is a black coffee png file.

36
00:02:54.060 --> 00:03:01.280
But if you look at the name of the file,
it's BlackCoffee using title case.

37
00:03:01.280 --> 00:03:05.509
Android is not supporting
that notation for

38
00:03:05.509 --> 00:03:10.430
resources, so
I need to actually change the name.

39
00:03:12.020 --> 00:03:17.040
You must use underscore, nothing else,
if not, it's not gonna work, okay?

40
00:03:17.040 --> 00:03:21.395
So, be careful when you're importing
assets in the rest folder,

41
00:03:21.395 --> 00:03:25.770
they must follow a snake case,
that's the name of that notation.

42
00:03:25.770 --> 00:03:31.103
So, now I can drag because it's a png
there is no need for converting this.

43
00:03:31.103 --> 00:03:34.977
So, I can drag it into
the drawable folder,

44
00:03:34.977 --> 00:03:38.759
it's just that image, okay, like that.

45
00:03:42.630 --> 00:03:46.664
And then it's complaining,

46
00:03:46.664 --> 00:03:53.450
you have the product,
doesn't contain a price.

47
00:03:53.450 --> 00:04:00.218
So, let me check on my model,
my DataModel, the product has a price,

48
00:04:00.218 --> 00:04:04.419
look at this, that's why it's not working.

49
00:04:04.419 --> 00:04:06.375
What's missing here, in the price?

50
00:04:08.600 --> 00:04:13.706
Bar, so, it was receiving
the price in the constructor but

51
00:04:13.706 --> 00:04:17.297
it wasn't creating it property, okay?

52
00:04:17.297 --> 00:04:22.083
Be careful, bar or
bowel must be added there, okay?

53
00:04:22.083 --> 00:04:27.561
So, now let's try to
see a preview of that,

54
00:04:27.561 --> 00:04:34.980
it's just a Row, so pages,
I have now within my MenuPage.

55
00:04:34.980 --> 00:04:37.650
Look at that, what is this?

56
00:04:37.650 --> 00:04:44.205
Does anyone know what is that,
how do you call that thing in Kotlin?

57
00:04:46.750 --> 00:04:53.128
It's a function, but not just any
function, it's extending double.

58
00:04:55.840 --> 00:04:57.031
Okay, makes sense?

59
00:04:57.031 --> 00:05:02.551
So, it's actually adding a function
to every double receiving digits and

60
00:05:02.551 --> 00:05:06.668
is actually converting that to for
example two digits,

61
00:05:06.668 --> 00:05:09.921
the string which is formatting the double.

62
00:05:09.921 --> 00:05:11.196
Doesn't make sense?

63
00:05:11.196 --> 00:05:14.008
So, we have a Column with an image, and

64
00:05:14.008 --> 00:05:18.380
then a Row,
you will see it in action in a minute.

65
00:05:18.380 --> 00:05:21.965
The only thing that we haven't seen yet
is the button.

66
00:05:21.965 --> 00:05:27.890
The button is actually pretty simple,
you have an Onclick, and the content.

67
00:05:29.660 --> 00:05:33.267
So, a button can have emashes or
anything inside.

68
00:05:33.267 --> 00:05:37.035
Let's preview this, this is compostable,
doesn't have a preview.

69
00:05:37.035 --> 00:05:42.705
So, it needs some arguments,
it receives a Product and onAdd,

70
00:05:42.705 --> 00:05:48.277
because it has a button, so
we can add items to the cart, okay?

71
00:05:48.277 --> 00:05:52.061
So, I'm going to create another function,

72
00:05:52.061 --> 00:05:57.450
another composable to preview
the item as we saw before, okay?

73
00:05:57.450 --> 00:06:01.646
So, inside here I'm going
to call ProductItem and

74
00:06:01.646 --> 00:06:06.620
I'm going to pass a product,
a dummy product with an ID, and

75
00:06:06.620 --> 00:06:11.615
name, price and an image,
empty image it doesn't matter.

76
00:06:11.615 --> 00:06:16.130
And onAdd, it's actually a function,
for now I'm doing nothing.

77
00:06:16.130 --> 00:06:20.430
But at least I wanna see if I
can see how this looks like.

78
00:06:24.960 --> 00:06:26.307
And this is how it looks like.

79
00:06:29.032 --> 00:06:32.350
I think it looks pretty good, right?

80
00:06:32.350 --> 00:06:35.630
So, we have what we want, name,

81
00:06:35.630 --> 00:06:40.335
the title, the price,
a button and the image.

82
00:06:40.335 --> 00:06:43.533
It's just organizing elements,
okay, nothing so fancy.

83
00:06:43.533 --> 00:06:45.120
Do you have any question on this?

84
00:06:46.760 --> 00:06:47.870
This is the ProductItem.

85
00:06:50.140 --> 00:06:52.150
Now we need to repeat this, right?

86
00:06:52.150 --> 00:06:56.610
So, our product page that
is right now here empty,

87
00:06:56.610 --> 00:06:59.948
my MenuPage, we need to repeat that.

88
00:06:59.948 --> 00:07:06.880
So far we were using Column,
remember Column actually repeat elements.

89
00:07:06.880 --> 00:07:12.061
But there is another one that is
more suitable for these cases,

90
00:07:12.061 --> 00:07:17.420
that includes automatically scroll and
some other behaviors.

91
00:07:17.420 --> 00:07:22.880
It's called LazyColumn, and
why it's called lazy, okay?

92
00:07:22.880 --> 00:07:28.204
Because it's using,
by default we can actually do this,

93
00:07:28.204 --> 00:07:32.340
it's using the idea of lazy loading.

94
00:07:32.340 --> 00:07:35.790
So, actually when you're rendering
let's say you have 1000 elements here.

95
00:07:36.970 --> 00:07:39.870
It's going to render only the ones
that appears on the screen.

96
00:07:39.870 --> 00:07:44.560
When you start scrolling, it's lazily
rolling the rest of the elements.

97
00:07:45.640 --> 00:07:50.440
This is similar to list, or
tables on other UI toolkits, or

98
00:07:50.440 --> 00:07:53.896
if you're an Android classic developer,

99
00:07:53.896 --> 00:07:58.799
this is like RecyclerView if
you have ever played with that.

100
00:07:58.799 --> 00:08:02.910
So, LazyColum works pretty
similar with one different.

101
00:08:02.910 --> 00:08:08.142
We have a special item or
items way to actually say,

102
00:08:08.142 --> 00:08:12.900
for example,
that if I want 5 product items.

103
00:08:14.130 --> 00:08:20.843
So, let me show you these,
I have 5 of this ProductItem,

104
00:08:20.843 --> 00:08:25.367
so now I don't think I need my preview.

105
00:08:25.367 --> 00:08:31.894
I can just preview the MenuPage, but
we have 5 of product items, okay?

106
00:08:31.894 --> 00:08:33.910
Thant looks fine, right?

107
00:08:33.910 --> 00:08:39.390
Maybe what I need is some kind of rapper,
by the way, can I just scroll?

108
00:08:39.390 --> 00:08:46.670
Remember if you wanna scroll, you can
use that icon that is interactive mode.

109
00:08:46.670 --> 00:08:54.262
So, now I can actually scroll
over my five items, okay, cool.

110
00:08:54.262 --> 00:09:00.323
I can stop interactive mode, and when I'm
here what I need now is to maybe create

111
00:09:00.323 --> 00:09:05.858
some kind of container that will
separate all the elements a little bit.

112
00:09:05.858 --> 00:09:09.589
And for that I'm going to use a Card,
something that we haven't seen yet.

113
00:09:09.589 --> 00:09:15.330
It's a composable in material design
that represents some kind of content.

114
00:09:16.510 --> 00:09:19.492
That it's like a box,
a baseball box, okay?

115
00:09:19.492 --> 00:09:23.840
So, I'm inserting
the ProductItem within a Card.

116
00:09:23.840 --> 00:09:28.746
If I build a refresh, I won't see too
much of a difference at this point,

117
00:09:28.746 --> 00:09:31.760
but the Card has some properties.

118
00:09:31.760 --> 00:09:36.010
For example, I can change the elevation,
the elevation, what's that?

119
00:09:36.010 --> 00:09:40.233
So, elevation is creating some
kind of a shadow that makes

120
00:09:40.233 --> 00:09:43.740
the element like pop up from the surface.

121
00:09:43.740 --> 00:09:48.296
It grates on kind of a 3D
effect with the shadows, okay?

122
00:09:48.296 --> 00:09:55.421
I can also have a shape to the Card, and
for example we have a RoundedCornerShape,

123
00:09:55.421 --> 00:10:00.703
where I can say that they want
rounded corners over the item.

124
00:10:00.703 --> 00:10:05.753
So, if I wanna refresh, Now,

125
00:10:05.753 --> 00:10:11.350
can you see that, can you spot that
we have now rounded corners there?

126
00:10:11.350 --> 00:10:14.761
It's getting better,
we can add some padding as well,

127
00:10:14.761 --> 00:10:18.109
how to add paddings modifier,
it's always the same.

128
00:10:18.109 --> 00:10:22.149
So, I've created a modifier,

129
00:10:22.149 --> 00:10:27.387
Modifier I am having missing comma here,

130
00:10:27.387 --> 00:10:31.438
padding (12.dp) like so.

131
00:10:31.438 --> 00:10:37.670
And just because I'm here you can
change also the background color,

132
00:10:37.670 --> 00:10:40.784
and I think I do have a color known as

133
00:10:40.784 --> 00:10:45.630
CardBackground that I prepared for
this situation.

134
00:10:45.630 --> 00:10:48.586
So, it's getting better.

135
00:10:51.155 --> 00:10:52.604
Any question to this point?

136
00:10:57.563 --> 00:11:02.391
Nope, of course this is dummy data,
okay, but

137
00:11:02.391 --> 00:11:05.427
we are getting there, okay?

138
00:11:05.427 --> 00:11:07.445
Any question?

139
00:11:07.445 --> 00:11:12.421
Didn't work, well, first, let's seem
if I run this on the real thing,

140
00:11:12.421 --> 00:11:13.880
yeah, it's there.

141
00:11:13.880 --> 00:11:17.440
So, I have now my list of
offers as the working,

142
00:11:17.440 --> 00:11:22.340
the Button is doing nothing, and
of course, this is dummy data.

143
00:11:22.340 --> 00:11:25.510
But, yeah, it starts looking like an app.

