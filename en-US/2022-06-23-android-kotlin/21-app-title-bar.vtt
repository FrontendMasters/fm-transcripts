WEBVTT

1
00:00:00.000 --> 00:00:03.909
But at this point, I think that
with the OffersPage, we are good.

2
00:00:05.616 --> 00:00:08.657
But it doesn't look like an app, okay?

3
00:00:08.657 --> 00:00:12.420
So we actually need to make
this look like an app.

4
00:00:12.420 --> 00:00:13.210
That's the next step.

5
00:00:14.450 --> 00:00:15.420
But what's an app?

6
00:00:15.420 --> 00:00:22.113
I mean, from a material design point of
view, an app typically has a top bar.

7
00:00:22.113 --> 00:00:26.072
And sometimes a bottom bar and
sometimes other elements, but

8
00:00:26.072 --> 00:00:28.517
at least a top bar with a title, okay?

9
00:00:28.517 --> 00:00:32.570
So we wanna make that part right now.

10
00:00:32.570 --> 00:00:37.210
So within the lessons in
the companion website,

11
00:00:37.210 --> 00:00:40.500
now we are in creating an app look.

12
00:00:42.090 --> 00:00:43.826
That's the one, okay?

13
00:00:43.826 --> 00:00:50.110
So to make this work,
I'm going to create another composable.

14
00:00:52.564 --> 00:00:55.815
And we can work in the activity, so

15
00:00:55.815 --> 00:01:00.986
within the main activity, or
we can create a new file.

16
00:01:00.986 --> 00:01:03.402
So let's create a new file.

17
00:01:03.402 --> 00:01:08.073
So new Kotlin Class/File,
and we can call this app.

18
00:01:08.073 --> 00:01:14.049
It will be like a wrapper to create
the app look and feel, okay?

19
00:01:14.049 --> 00:01:16.534
It's a file in Kotlin, and

20
00:01:16.534 --> 00:01:22.162
I'm going to create a pre-viewable
composable called App.

21
00:01:24.264 --> 00:01:26.537
Okay, does it make sense?

22
00:01:26.537 --> 00:01:30.604
Within the app,
what I want also is another preview of our

23
00:01:30.604 --> 00:01:35.120
composable called the AppTitle,
that will render the title.

24
00:01:35.120 --> 00:01:36.724
Okay, make sense?

25
00:01:36.724 --> 00:01:38.844
And for the title, I have a logo.

26
00:01:38.844 --> 00:01:45.150
So I want to use a logo, it's the logo
of our app, that is also an SVG.

27
00:01:45.150 --> 00:01:47.460
And we know how to import an SVG, right?

28
00:01:47.460 --> 00:01:51.486
So we go to res &gt; drawable,

29
00:01:51.486 --> 00:01:56.570
right-click, and we use New &gt;,

30
00:01:59.027 --> 00:02:02.542
Vector Asset, okay?

31
00:02:02.542 --> 00:02:06.302
We take an SVG and the file is logo.SVG,

32
00:02:06.302 --> 00:02:10.292
from the assets that you have downloaded.

33
00:02:11.976 --> 00:02:17.084
And I don't like to use the prefix
ic unless it's an icon.

34
00:02:17.084 --> 00:02:22.723
So I'm typically deleting the prefix ic,
okay?

35
00:02:22.723 --> 00:02:23.531
Because that's for icons.

36
00:02:23.531 --> 00:02:27.510
If it's an icon, it's fine,
but yeah, I don't know.

37
00:02:27.510 --> 00:02:30.571
So next, finish.

38
00:02:30.571 --> 00:02:33.993
Okay, so
the idea is that here I wanna see an icon,

39
00:02:33.993 --> 00:02:36.614
the icon of our app has a title, okay?

40
00:02:36.614 --> 00:02:41.511
That's kind of the idea,
it's not actually a big deal.

41
00:02:41.511 --> 00:02:46.220
And then we will see how to make
this actually like a title.

42
00:02:46.220 --> 00:02:52.029
Because we can add it manually, but
actually we do have something special,

43
00:02:52.029 --> 00:02:56.128
like a composable special
that's called scaffold.

44
00:02:56.128 --> 00:03:01.383
A scaffold will actually make an app
looks like an app in material design,

45
00:03:01.383 --> 00:03:06.837
where we can, as the properties of
the function, we can define the topBar.

46
00:03:06.837 --> 00:03:11.969
We can define the bottomBar, and

47
00:03:11.969 --> 00:03:18.389
it will just be placed wherever it needs.

48
00:03:18.389 --> 00:03:21.824
By the way, do you see at this point,
because it takes some time,

49
00:03:21.824 --> 00:03:24.774
why do we have parenthesis and
then we have a code block?

50
00:03:24.774 --> 00:03:28.040
It's kinda weird, and
both are for the scaffold.

51
00:03:28.040 --> 00:03:33.089
For example, here, I can say,
this is my App's content.

52
00:03:33.089 --> 00:03:34.346
It's a text.

53
00:03:36.284 --> 00:03:42.132
So, in this code block,
we put the contents of the scaffold.

54
00:03:42.132 --> 00:03:46.675
And these are arguments of the call.

55
00:03:46.675 --> 00:03:49.402
And these are the argument names.

56
00:03:49.402 --> 00:03:55.003
It get time to get used to the syntax,
okay, of what's going on here.

57
00:03:55.003 --> 00:03:59.943
So for example, in the topBar, I can
render my AppTitle, it's empty right now,

58
00:03:59.943 --> 00:04:02.890
okay, but
we're going to put something there.

59
00:04:04.480 --> 00:04:05.650
Okay, make sense?

60
00:04:05.650 --> 00:04:07.987
So, what do I need to do here?

61
00:04:07.987 --> 00:04:10.986
We are going to use an image.

62
00:04:10.986 --> 00:04:14.530
But the image alone by itself,
it's just the logo.

63
00:04:14.530 --> 00:04:15.980
So we have already done that.

64
00:04:15.980 --> 00:04:20.660
So it's an image that receives a painter,
and

65
00:04:20.660 --> 00:04:24.740
we're going to use a painterResource.

66
00:04:27.330 --> 00:04:32.027
Do you remember how to get resources
from the res &gt; drawable folder?

67
00:04:32.027 --> 00:04:38.660
&gt;&gt; [INAUDIBLE]
&gt;&gt; R.drawable.logo.

68
00:04:38.660 --> 00:04:42.688
And then contentDescription
is just text for

69
00:04:42.688 --> 00:04:46.932
accessibility, Coffee Masters Logo, okay?

70
00:04:46.932 --> 00:04:50.630
So now I'm not seeing the preview,

71
00:04:50.630 --> 00:04:57.301
that's because I mean code mode,
so I need to enable split.

72
00:04:57.301 --> 00:04:58.576
Refresh.

73
00:05:03.877 --> 00:05:07.135
And if you see at the bottom,
well, this is actually, well,

74
00:05:07.135 --> 00:05:09.150
this is kind of what my app looks like.

75
00:05:09.150 --> 00:05:11.927
It's like [SOUND] it doesn't look so
nice, right?

76
00:05:11.927 --> 00:05:16.263
Well, because the image,
I want the background color to the image.

77
00:05:16.263 --> 00:05:21.420
And I also want like a box,
like a bar, okay?

78
00:05:21.420 --> 00:05:25.284
So for that we are going to use,
as I mentioned before,

79
00:05:25.284 --> 00:05:31.527
the box, Composable with the image inside.

80
00:05:31.527 --> 00:05:34.703
And the box,
it's acting like a frame, make sense?

81
00:05:34.703 --> 00:05:38.199
So the box is, again,
like a container to the image.

82
00:05:38.199 --> 00:05:42.799
And the box can have some
properties such as, for example,

83
00:05:42.799 --> 00:05:46.310
the background color, okay, for example.

84
00:05:46.310 --> 00:05:49.610
So did I use the topBar here?

85
00:05:49.610 --> 00:05:50.310
Yes.

86
00:05:51.500 --> 00:05:56.527
And before doing that, for
the topBar, I'm going to do this.

87
00:05:56.527 --> 00:05:59.510
There is also another composable.

88
00:05:59.510 --> 00:06:02.707
How will you remember all the composables?

89
00:06:02.707 --> 00:06:04.388
It takes time, okay?

90
00:06:04.388 --> 00:06:09.008
There is a composable known as
TopAppBar that automatically applies

91
00:06:09.008 --> 00:06:14.500
the background color and the initial
heights that we need at the bar.

92
00:06:14.500 --> 00:06:20.490
So if we put my AppTitle within the
TopAppBar, it will look a little better.

93
00:06:24.689 --> 00:06:27.030
Let's see, okay?

94
00:06:27.030 --> 00:06:30.635
It's like, okay,
it looks a little better, okay?

95
00:06:30.635 --> 00:06:33.644
I still wanna change this,
but it's better.

96
00:06:33.644 --> 00:06:36.560
You can see it has the minimum height.

97
00:06:36.560 --> 00:06:40.788
It's just applying this as a container,
okay, the TopAppBar as a container.

98
00:06:40.788 --> 00:06:45.590
So, now, working about the box.

99
00:06:45.590 --> 00:06:48.813
One of the problems is that by default,

100
00:06:48.813 --> 00:06:54.195
the box is using the space available,
not 100% of the space.

101
00:06:54.195 --> 00:06:58.388
It's using what is known as wrap content.

102
00:06:58.388 --> 00:07:01.830
The content, the image,
is using that little space, so

103
00:07:01.830 --> 00:07:04.782
it's box,
it's also using that little space.

104
00:07:04.782 --> 00:07:08.122
But I want the box to
take the whole width, so

105
00:07:08.122 --> 00:07:11.387
then I can center
the image within the box.

106
00:07:11.387 --> 00:07:12.540
Does it makes sense?

107
00:07:12.540 --> 00:07:17.861
So for that,
I'm going to apply a modifier to the box.

108
00:07:17.861 --> 00:07:22.374
Modifier like fillMaxWidth, like that, and

109
00:07:22.374 --> 00:07:28.620
then I'm gonna add a property,
another property of the box.

110
00:07:28.620 --> 00:07:31.220
So not the modifier,
a property of the box.

111
00:07:32.500 --> 00:07:35.640
We say property but
it's actually an argument, okay?

112
00:07:35.640 --> 00:07:38.860
It's not actually a property,
it's an argument of the function.

113
00:07:40.080 --> 00:07:44.141
So, that is contentAlignment.

114
00:07:44.141 --> 00:07:50.651
And we're going to apply
here Alignment.center.

115
00:07:50.651 --> 00:07:54.975
If we do that, build and refresh.

116
00:07:54.975 --> 00:08:00.860
Now my logo appears center, okay?

117
00:08:00.860 --> 00:08:03.900
So where is this color coming from?

118
00:08:05.420 --> 00:08:06.970
That's a purple color.

119
00:08:08.320 --> 00:08:10.990
I didn't set that actually.

120
00:08:10.990 --> 00:08:13.000
Remember that we do have a material theme.

121
00:08:14.710 --> 00:08:15.718
What is the material theme?

122
00:08:15.718 --> 00:08:18.460
We have already defined here in
the theme the colors that I want.

123
00:08:19.640 --> 00:08:21.116
We have a primary color.

124
00:08:21.116 --> 00:08:26.990
But this theme is not being applied
in the preview automatically.

125
00:08:26.990 --> 00:08:31.961
So the preview is taking
the default colors from Android,

126
00:08:31.961 --> 00:08:34.607
which is kind of weird, okay?

127
00:08:34.607 --> 00:08:36.343
This is weird, I know.

128
00:08:36.343 --> 00:08:41.539
So something that I can do,
for the preview only,

129
00:08:41.539 --> 00:08:45.810
I could remove the previews that I have.

130
00:08:45.810 --> 00:08:49.870
And as I did before,
I'm going to create another composable,

131
00:08:51.281 --> 00:08:55.335
That I will call App_Preview, okay?

132
00:08:55.335 --> 00:09:01.090
So in this preview function,
I need to use my own theme.

133
00:09:01.090 --> 00:09:03.200
What's the name of my theme?

134
00:09:03.200 --> 00:09:08.177
The name of my project,
CofffeeMastersTheme, okay?

135
00:09:08.177 --> 00:09:10.697
And within that, I'm going to put my app.

136
00:09:10.697 --> 00:09:17.268
So I'm taking my app that is my composable
and I'm wrapping that into my own theme.

137
00:09:19.597 --> 00:09:22.044
And now I'm seeing my colors.

138
00:09:22.044 --> 00:09:24.526
Now it's taking my theme, okay?

139
00:09:24.526 --> 00:09:26.076
Does it make sense?

140
00:09:26.076 --> 00:09:32.460
Finally, I don't want that text,
this is my app's content.

141
00:09:32.460 --> 00:09:35.643
What if instead of this,
I put the OffersPage?

142
00:09:37.640 --> 00:09:39.682
The one that we did before.

143
00:09:39.682 --> 00:09:42.444
Now, it just start looking like an app.

144
00:09:43.864 --> 00:09:45.339
Okay, does it make sense?

145
00:09:45.339 --> 00:09:46.623
Any question?

146
00:09:46.623 --> 00:09:48.658
&gt;&gt; Did that AppTitle get the theme?

147
00:09:48.658 --> 00:09:51.540
Again, I'm sorry to-
&gt;&gt; The AppTitle will get the theme

148
00:09:51.540 --> 00:09:54.676
because, first,
in the real app, if I run this,

149
00:09:54.676 --> 00:10:00.235
it will take the theme automatically, but
in the preview, it's not taking the theme.

150
00:10:00.235 --> 00:10:04.859
So I have created another composable for
the preview,

151
00:10:04.859 --> 00:10:08.084
wrapping the app within my own theme.

152
00:10:08.084 --> 00:10:13.460
The thing is that by default, the previews
are like isolated composables.

153
00:10:13.460 --> 00:10:17.773
So they don't know about your
theme unless you say so.

154
00:10:17.773 --> 00:10:20.630
&gt;&gt; It's like passing
the contents down [INAUDIBLE].

155
00:10:20.630 --> 00:10:22.372
&gt;&gt; Okay, right, yeah, something like that.

156
00:10:22.372 --> 00:10:26.510
But if I run this in the real emulator,
what is it rendering?

157
00:10:27.990 --> 00:10:31.230
I don't know, at this point, because
I'm just checking the previews, right?

158
00:10:32.270 --> 00:10:35.700
So if I run this, let's see what happens.

159
00:10:35.700 --> 00:10:39.390
I'm still seeing the old code, why?

160
00:10:40.400 --> 00:10:45.337
Well, my entry point is the main activity,
okay?

161
00:10:45.337 --> 00:10:49.673
And here, I have this FirstComposable.

162
00:10:49.673 --> 00:10:51.790
I'm rendering the FirstComposable.

163
00:10:51.790 --> 00:10:53.263
So I need to change these with app.

164
00:10:55.663 --> 00:10:59.955
And now if I run my app again, well,

165
00:10:59.955 --> 00:11:08.492
if you run this in the emulator,
It actually looks like an app.

166
00:11:08.492 --> 00:11:11.873
So we have a title bar at least for now.

