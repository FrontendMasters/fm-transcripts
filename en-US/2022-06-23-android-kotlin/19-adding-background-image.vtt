WEBVTT

1
00:00:00.000 --> 00:00:05.676
Now to finish this offer thing,
I want a background image, okay?

2
00:00:05.676 --> 00:00:12.144
So we need to see how to create an image
and how to import the image here.

3
00:00:12.144 --> 00:00:17.773
From the assets.zipfile,
you have a couple of images ready to use.

4
00:00:17.773 --> 00:00:21.851
So if you go, to that folder for
example here,

5
00:00:21.851 --> 00:00:27.824
we have the background pattern dot SVG,
that's the one I want now.

6
00:00:27.824 --> 00:00:34.120
So for that I need to get into
the res folder for resources, okay.

7
00:00:34.120 --> 00:00:38.022
Inside the resources we
have a drawable folder,

8
00:00:38.022 --> 00:00:44.030
here I'm gonna put all the things that
are drawable including the meshes.

9
00:00:44.030 --> 00:00:48.077
So right now there are a couple of
drawables and I don't know what they are.

10
00:00:48.077 --> 00:00:53.251
But I can right click here and
select New Vector Asset,

11
00:00:53.251 --> 00:00:56.430
because I'm gonna use SVG.

12
00:00:56.430 --> 00:00:58.030
That's vector based.

13
00:00:58.030 --> 00:01:00.320
I'm gonna create a new vector asset.

14
00:01:00.320 --> 00:01:03.440
I'm gonna import that SVG.

15
00:01:03.440 --> 00:01:08.690
You cannot just drag the SVG because
android does not support SVG as an asset.

16
00:01:08.690 --> 00:01:12.469
We need to convert that into
an Android Vector asset.

17
00:01:12.469 --> 00:01:15.940
Okay, so right-click, New Vector Asset.

18
00:01:15.940 --> 00:01:20.201
And here we can select if we want
a clipart that I don't want that I want

19
00:01:20.201 --> 00:01:21.360
the local file.

20
00:01:21.360 --> 00:01:22.820
It can be SVG or PSD.

21
00:01:24.260 --> 00:01:27.130
Be careful with PSD it's not
gonna work most of the time.

22
00:01:27.130 --> 00:01:29.130
That's a Photoshop file isn't gonna work.

23
00:01:29.130 --> 00:01:33.690
Typically SVG is the format you want so
I'm going to take, a local file.

24
00:01:35.000 --> 00:01:36.965
So I will just look for that file.

25
00:01:38.690 --> 00:01:44.230
Its background,
underscore pattern SVG, okay?

26
00:01:44.230 --> 00:01:48.840
And, this is the name that
we have inside Android.

27
00:01:48.840 --> 00:01:53.240
By default,
it's adding a prefix I see, from icon.

28
00:01:53.240 --> 00:01:53.883
Okay?

29
00:01:53.883 --> 00:01:57.870
So I don't want that prefix,
because it's not an icon actually.

30
00:01:57.870 --> 00:02:00.854
So I'm going to remove the IC.

31
00:02:00.854 --> 00:02:03.101
I mean just the name but and

32
00:02:03.101 --> 00:02:08.116
then next is just previewing
how it's going to look like.

33
00:02:08.116 --> 00:02:09.647
And I'm good with that.

34
00:02:09.647 --> 00:02:12.907
So if you look at the this file,
it's actually an XML.

35
00:02:12.907 --> 00:02:13.937
Here you have a preview.

36
00:02:13.937 --> 00:02:15.890
This is not SVG.

37
00:02:15.890 --> 00:02:18.800
It's an Android shape format.

38
00:02:18.800 --> 00:02:22.350
So it has have converted
the SVG into this format.

39
00:02:24.060 --> 00:02:25.370
That's the one that we're going to use.

40
00:02:25.370 --> 00:02:28.217
Okay?
We don't typically touch those shapes but

41
00:02:28.217 --> 00:02:31.470
having mine, it's not the original SVG.

42
00:02:31.470 --> 00:02:36.060
That means and this is important
if you have an SVG with text,

43
00:02:36.060 --> 00:02:42.600
the text is not going to be important that
you need to convert text into shapes.

44
00:02:42.600 --> 00:02:47.914
So if you're using Adobe Illustrator or
Adobe XD or a sketch, typically you

45
00:02:47.914 --> 00:02:53.910
have a way to convert the text into
shapes and then you export the shapes.

46
00:02:53.910 --> 00:02:54.820
Is not text anymore.

47
00:02:55.830 --> 00:02:56.570
Okay?
It makes sense.

48
00:02:56.570 --> 00:02:59.110
So as we see with text
will not be important.

49
00:03:00.580 --> 00:03:02.750
Okay, so now we need any mesh.

50
00:03:02.750 --> 00:03:08.282
So I'm going to add an E-mesh, but where?

51
00:03:08.282 --> 00:03:13.086
So in the column if I add the E- mesh in
the column within the column let's do that

52
00:03:13.086 --> 00:03:13.640
first.

53
00:03:13.640 --> 00:03:16.850
Okay, so it's called E- mash.

54
00:03:16.850 --> 00:03:19.890
And we need to define a painter.

55
00:03:19.890 --> 00:03:22.830
What's a painter,
an object that will paint the image.

56
00:03:23.930 --> 00:03:28.617
And there is a painter it's called
painter resource that will look for

57
00:03:28.617 --> 00:03:31.090
a resource in the Resources folder.

58
00:03:32.120 --> 00:03:33.280
That's the one we want.

59
00:03:34.360 --> 00:03:35.230
And he needs an AV.

60
00:03:36.720 --> 00:03:43.610
How can I reference res drawable
background pattern from Kotlin?

61
00:03:44.830 --> 00:03:51.610
It's like this
r.drawable.background pattern.

62
00:03:51.610 --> 00:03:54.390
Everything you put in the Rest folder.

63
00:03:54.390 --> 00:03:58.910
We have its own reference
in this global R option.

64
00:04:00.780 --> 00:04:06.158
Our drawable is pointing to everything
you have in the rest drawable folder.

65
00:04:06.158 --> 00:04:08.020
Okay, that's make sense?

66
00:04:09.330 --> 00:04:10.970
So that's how you do that.

67
00:04:10.970 --> 00:04:13.210
And then another property
is called the description.

68
00:04:13.210 --> 00:04:17.497
This is actually the alt in HTML.

69
00:04:17.497 --> 00:04:20.410
So this is if the image cannot be loaded,
or for

70
00:04:20.410 --> 00:04:23.934
accessibility purposes this
is a background pattern.

71
00:04:23.934 --> 00:04:27.458
It's just a description of the content.

72
00:04:27.458 --> 00:04:30.257
Okay, does that make sense?

73
00:04:30.257 --> 00:04:32.284
So if I build a refresh.

74
00:04:41.596 --> 00:04:42.792
Refresh.

75
00:04:42.792 --> 00:04:43.902
There we are.

76
00:04:43.902 --> 00:04:47.103
We have the image and then the text but

77
00:04:47.103 --> 00:04:52.470
I want the image behind as the background,
makes sense?

78
00:04:52.470 --> 00:04:53.300
So how can I do that?

79
00:04:53.300 --> 00:04:59.005
Of course, this happens because
I have the image in the column,

80
00:04:59.005 --> 00:05:03.560
what if I take the image out
of the column like this?

81
00:05:05.900 --> 00:05:07.350
It looks better.

82
00:05:07.350 --> 00:05:08.650
Okay.

83
00:05:08.650 --> 00:05:12.890
And now they don't have a container but
it's fine.

84
00:05:12.890 --> 00:05:16.449
We know that will happen
is they share the space.

85
00:05:16.449 --> 00:05:17.750
So it works.

86
00:05:17.750 --> 00:05:22.640
And now we can change some properties for
example,

87
00:05:22.640 --> 00:05:28.096
with a mode of e-mesh,
because the mesh is really to be,

88
00:05:28.096 --> 00:05:31.051
so we can add here a modifier and

89
00:05:31.051 --> 00:05:36.780
we can say for
example that we want content scale.

90
00:05:36.780 --> 00:05:38.410
Let me first do this.

91
00:05:38.410 --> 00:05:43.933
There is a modifier
Called matchParentSize,

92
00:05:43.933 --> 00:05:48.760
so it's Modifier.matchParentSize.

93
00:05:48.760 --> 00:05:54.280
And also we have fillMaxWidth or MaxSize.

94
00:05:54.280 --> 00:05:59.192
So their kind of doing something
similar matchparent will actually match

95
00:05:59.192 --> 00:06:03.544
the parent and Phil Max will try to
in this case the width will try to

96
00:06:03.544 --> 00:06:06.490
stretch as much as
possible to the borders.

97
00:06:06.490 --> 00:06:10.720
Okay and
of course there is another one for height.

98
00:06:10.720 --> 00:06:18.513
And what if I want to like shrink this
a little bit either one is too high now,

99
00:06:18.513 --> 00:06:23.338
so I can have another modifier for
the height,

100
00:06:23.338 --> 00:06:27.666
and I can say so
you can try any value DPS and

101
00:06:27.666 --> 00:06:32.612
see how it looks like,
is it I mean, it's not so

102
00:06:32.612 --> 00:06:37.695
bad but what happened with the e-mesh?

103
00:06:37.695 --> 00:06:43.040
Well, I have to change how
the e-mash is being a scaling so

104
00:06:43.040 --> 00:06:49.820
I need to change another property
from the e-mash that is contentScale.

105
00:06:51.880 --> 00:06:57.088
Okay, contentScale and
there are some options that we can use,

106
00:06:57.088 --> 00:07:01.070
such as Fillwidth, Crop, FillBounds.

107
00:07:01.070 --> 00:07:05.959
So if I wanna fill the Holewidth,
nature play with these

108
00:07:05.959 --> 00:07:10.954
properties unfortunately we
don't have an inspector or

109
00:07:10.954 --> 00:07:16.480
something that will tell us
everything that is possible here.

110
00:07:17.700 --> 00:07:24.860
For now checking into the documentation of
each composable or stack overflow, right?

111
00:07:24.860 --> 00:07:26.061
So typically that's how it works.

112
00:07:26.061 --> 00:07:30.619
Well, first 140,
we see it's actually just small.

113
00:07:33.869 --> 00:07:36.396
We can play with this until we are happy,
okay?

114
00:07:36.396 --> 00:07:41.609
When the previous not working anymore,
try to refresh with that button there.

115
00:07:41.609 --> 00:07:44.215
And most of the time, it solves a problem.

