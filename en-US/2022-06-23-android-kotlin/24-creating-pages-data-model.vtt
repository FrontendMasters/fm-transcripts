WEBVTT

1
00:00:00.220 --> 00:00:01.170
And what about the others?

2
00:00:01.170 --> 00:00:05.289
Well, I need to just do
something like if it's menu,

3
00:00:05.289 --> 00:00:08.875
a MenuPage, but
I don't have a MenuPage yet.

4
00:00:08.875 --> 00:00:14.820
But for now, I can just render
a text saying Menu, like so.

5
00:00:14.820 --> 00:00:20.120
And something similar to the other
two that were OrderPage and InfoPage.

6
00:00:21.860 --> 00:00:26.790
So we have order, we have info, like that.

7
00:00:26.790 --> 00:00:30.100
So actually,
we are rendering one or the other.

8
00:00:30.100 --> 00:00:32.890
Do we have any other way to
navigate between screens?

9
00:00:32.890 --> 00:00:35.916
Actually, in Jetpack,
composed by itself, no.

10
00:00:35.916 --> 00:00:40.314
There is another framework known
as Jetpack Compose Navigation.

11
00:00:40.314 --> 00:00:44.493
That will be similar to React router or
the routing system in

12
00:00:44.493 --> 00:00:49.350
Angular that will let us define routes and
then move between routes.

13
00:00:49.350 --> 00:00:51.130
But I wanna keep this simple.

14
00:00:51.130 --> 00:00:56.060
So I'm just switching
between different compose.

15
00:00:56.060 --> 00:00:58.401
So here in the Menu, you see a text menu.

16
00:01:00.091 --> 00:01:04.963
If I'm going to Offers,
it is rendering offers, order an info, so

17
00:01:04.963 --> 00:01:08.350
the navigation actually works.

18
00:01:08.350 --> 00:01:13.940
So just to wrap up what's going on,
we have a NavBar.

19
00:01:13.940 --> 00:01:19.364
The NavBar has a selectedRoute
that is one state of the app,

20
00:01:19.364 --> 00:01:21.872
mutableState of this app.

21
00:01:21.872 --> 00:01:28.180
So and here the mutableState of
this app is I'm changing the value.

22
00:01:28.180 --> 00:01:31.543
Every time you change
the value of a state,

23
00:01:31.543 --> 00:01:35.960
the whole system rechecks, re-executes.

24
00:01:35.960 --> 00:01:36.752
In this case,

25
00:01:36.752 --> 00:01:41.280
the composer was to see if there is
a new composition that needs to be made.

26
00:01:41.280 --> 00:01:45.018
And in this case because it's
changing the composition,

27
00:01:45.018 --> 00:01:47.926
is going to render
efficiently that change.

28
00:01:47.926 --> 00:01:50.260
Okay, this make sense?

29
00:01:50.260 --> 00:01:50.900
Do you have any question?

30
00:01:53.200 --> 00:01:54.620
Nope.

31
00:01:54.620 --> 00:01:59.599
So now the next step is to
create the other pages, okay?

32
00:01:59.599 --> 00:02:04.935
So I'm going to create offers page but
just because I'm here,

33
00:02:04.935 --> 00:02:11.280
maybe I can create a new folder that
actually is a package for my patients.

34
00:02:11.280 --> 00:02:15.060
I mean we don't need to do that,
but just for organization.

35
00:02:15.060 --> 00:02:17.590
So I'm going to put OffersPage there.

36
00:02:17.590 --> 00:02:24.160
So I just right click new package,
just to reorganize the elements.

37
00:02:24.160 --> 00:02:28.310
So now I need to create three
new files empty for now.

38
00:02:28.310 --> 00:02:34.570
So I'm going to create a new Kotlin file.

39
00:02:34.570 --> 00:02:38.764
So we have MenuPage and
we're going to create for

40
00:02:38.764 --> 00:02:43.381
now a preview composable
within a MenuPage, empty.

41
00:02:45.726 --> 00:02:49.350
Another one for order,
and another one for info.

42
00:02:50.680 --> 00:02:54.590
So new column file,

43
00:02:54.590 --> 00:02:59.200
OrderPage, prev tab.

44
00:02:59.200 --> 00:03:06.360
So I have an OrderPage and
finally the same for info.

45
00:03:06.360 --> 00:03:07.760
In the meantime, do you have any question?

46
00:03:12.779 --> 00:03:15.732
&gt;&gt; For the it,
&gt;&gt; Yeah.

47
00:03:15.732 --> 00:03:18.566
&gt;&gt; What I remember,
if you're only passing in one value,

48
00:03:18.566 --> 00:03:20.799
one parameter on an argument,
&gt;&gt; Yeah.

49
00:03:20.799 --> 00:03:23.936
&gt;&gt; It is that particular argument.

50
00:03:23.936 --> 00:03:30.311
&gt;&gt; Yeah, for example,
here on onChange, I'm receiving it,

51
00:03:30.311 --> 00:03:34.819
but I can also say selectedRoute or route.

52
00:03:34.819 --> 00:03:36.427
And then instead of it, you got your route
&gt;&gt; And

53
00:03:36.427 --> 00:03:41.689
it just just references
that particular argument.

54
00:03:41.689 --> 00:03:42.663
But is there,

55
00:03:42.663 --> 00:03:47.711
[COUGH] such a thing called iterable if
the object itself was a some sort of.

56
00:03:47.711 --> 00:03:52.950
&gt;&gt; I mean you have a iterables here but
you have nothing to do with it.

57
00:03:52.950 --> 00:03:57.100
&gt;&gt; Yeah, nothing to do with that.

58
00:03:57.100 --> 00:03:59.600
&gt;&gt; No, nothing to do with iterables.

59
00:03:59.600 --> 00:04:02.644
Just the first two letters, that's all.

60
00:04:02.644 --> 00:04:06.674
So, now instead of this text,
I'm going to render

61
00:04:06.674 --> 00:04:12.625
MenuPage, OrderPage,

62
00:04:15.710 --> 00:04:20.743
OrdersPage, and Information.

63
00:04:20.743 --> 00:04:27.049
By the way, the OrderPage, I didn't get,
or it's OrderPage, not orders.

64
00:04:29.881 --> 00:04:37.137
So let's go back to the app, its
OrderPage, import OrderPage and InfoPage.

65
00:04:40.799 --> 00:04:43.100
Okay, just the same as before.

66
00:04:43.100 --> 00:04:45.790
So now we can start playing
with the rest of the pages.

67
00:04:45.790 --> 00:04:51.009
We have our little navigation ready,
make sense?

68
00:04:51.009 --> 00:04:55.427
Cool, well,
next is to start working with data,

69
00:04:55.427 --> 00:05:00.450
because we are going to list the menu,
our menu.

70
00:05:00.450 --> 00:05:02.490
So for
that I'm going to create a data model.

71
00:05:03.700 --> 00:05:09.403
The data model here is just
a file with our data structures.

72
00:05:09.403 --> 00:05:14.666
There are many architectural
design patterns in Android and

73
00:05:14.666 --> 00:05:19.400
in Jetpack Compose NBBM,
NBC, and many others.

74
00:05:19.400 --> 00:05:21.963
I'm trying to keep it
as simple as possible.

75
00:05:21.963 --> 00:05:25.615
So we're just going to create
a new Kotlin file, and

76
00:05:25.615 --> 00:05:28.865
let's call this DataModels, or DataModel.

77
00:05:28.865 --> 00:05:32.981
And here we are just going
to create some classes,

78
00:05:32.981 --> 00:05:38.574
simple classes to hold the data
that we're going to render, okay?

79
00:05:38.574 --> 00:05:42.086
But by the way it's matching a web service
that is already there that we are going

80
00:05:42.086 --> 00:05:42.670
to consume.

81
00:05:42.670 --> 00:05:45.170
Does that make sense?

82
00:05:45.170 --> 00:05:48.450
So for that, I'm going to
create a class for the product.

83
00:05:48.450 --> 00:05:53.440
Each product that we offer in the menu,
that we have an ID that's an integer.

84
00:05:53.440 --> 00:05:55.090
This is the primary constructor.

85
00:05:55.090 --> 00:06:00.471
Remember, it has a name, String, a price,

86
00:06:00.471 --> 00:06:07.001
a Double, an image,
is like the image name, like so.

87
00:06:07.001 --> 00:06:10.491
And something that I'm going to create,
it's a compute property,

88
00:06:10.491 --> 00:06:14.330
some kind of a computed property
that you haven't seen before.

89
00:06:14.330 --> 00:06:18.290
So it's the image URL.

90
00:06:18.290 --> 00:06:21.585
So actually,
we are going to create another property,

91
00:06:21.585 --> 00:06:24.120
in this case it can be mutable, imageURL.

92
00:06:24.120 --> 00:06:26.599
But we're going to take the image, and

93
00:06:26.599 --> 00:06:31.370
we are going to add the prefix of
the current server where the image is.

94
00:06:31.370 --> 00:06:33.345
So this is like the relative URL.

95
00:06:33.345 --> 00:06:35.971
I'm going to put here the absolute URL.

96
00:06:35.971 --> 00:06:42.091
And to do that, we do this, we say for
the mutable variable because it must

97
00:06:42.091 --> 00:06:47.540
be mutable to be compute,
imageURL, this is the getter, okay?

98
00:06:47.540 --> 00:06:51.969
And it's going to be equals to https and
by the way,

99
00:06:51.969 --> 00:06:58.260
you have the code if you wanna copy and
paste from the companion website.

100
00:06:58.260 --> 00:07:07.594
It's github.io/coffeemasters/api/images,

101
00:07:07.594 --> 00:07:12.160
and the name of the image.

102
00:07:15.323 --> 00:07:16.700
Does it make sense?

103
00:07:16.700 --> 00:07:22.400
So then I can use imageURL, access
imageURL as if it's a normal variable.

104
00:07:22.400 --> 00:07:23.828
So that's the product.

105
00:07:23.828 --> 00:07:28.120
Products are going to be
stored in categories.

106
00:07:28.120 --> 00:07:32.270
So I have a category that has just
a name and an array of products.

107
00:07:33.840 --> 00:07:35.030
How do you say that?

108
00:07:35.030 --> 00:07:42.465
It's a MutableList of type Product
with angle brackets, nothing else.

109
00:07:42.465 --> 00:07:45.640
And then we have an ItemInCart.

110
00:07:46.780 --> 00:07:51.612
It's items that will go in the cart
that is just a product and a quantity

111
00:07:55.257 --> 00:08:02.260
Okay, no curly braces, nothing that's
our data model, as simple as that.

112
00:08:04.290 --> 00:08:06.239
&gt;&gt; So all those classes can
be in the same file and

113
00:08:06.239 --> 00:08:08.200
they don't have to match the file?

114
00:08:08.200 --> 00:08:12.305
&gt;&gt; Yeah, that's correct we can have
as many structures classes and

115
00:08:12.305 --> 00:08:14.999
objects in the same file, and it's okay.

116
00:08:14.999 --> 00:08:17.094
Maybe you're thinking, well, but I prefer.

117
00:08:17.094 --> 00:08:21.216
But if you think about that,
if your class is just one line,

118
00:08:21.216 --> 00:08:23.532
do you need one file for one line?

119
00:08:23.532 --> 00:08:25.244
That doesn't make any sense.

120
00:08:25.244 --> 00:08:26.163
&gt;&gt; [INAUDIBLE] you are right anyway.

121
00:08:26.163 --> 00:08:29.838
&gt;&gt; It doesn't make any sense I think this
thing that having several classes in

122
00:08:29.838 --> 00:08:31.422
the same file makes more sense.

123
00:08:31.422 --> 00:08:35.841
So it depends on the case, if you wanna
separate things in several files or not.

