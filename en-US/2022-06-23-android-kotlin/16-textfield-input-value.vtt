WEBVTT

1
00:00:00.050 --> 00:00:06.424
What if I instead of the other text,
I add here a text field,

2
00:00:06.424 --> 00:00:10.642
so the user can type something, okay?

3
00:00:10.642 --> 00:00:17.257
It has two mandatory properties,
value, and on value change.

4
00:00:17.257 --> 00:00:22.521
So what I want is to say hello,
and the name of the user and

5
00:00:22.521 --> 00:00:25.771
the user will type his or her name.

6
00:00:25.771 --> 00:00:30.369
So for
that they can create the variable for

7
00:00:30.369 --> 00:00:34.210
the name, okay, this make sense.

8
00:00:34.210 --> 00:00:38.522
And by the way you have this
example now we can start

9
00:00:38.522 --> 00:00:41.919
talking about the companion website.

10
00:00:41.919 --> 00:00:46.593
And here you have the slides everything
that we are going to build and

11
00:00:46.593 --> 00:00:49.554
creating the project and basic concepts.

12
00:00:49.554 --> 00:00:51.117
We have already seen this.

13
00:00:51.117 --> 00:00:54.098
Here you have one code to try.

14
00:00:54.098 --> 00:00:58.964
Okay, this is similar to what I'm going to
write right now just to give you an idea

15
00:00:58.964 --> 00:01:01.970
that everything that I'm
going to do from now on,

16
00:01:01.970 --> 00:01:04.284
it's available here in step by step.

17
00:01:04.284 --> 00:01:09.473
So What I need is to create that name,
okay?

18
00:01:09.473 --> 00:01:14.016
So I want to take the name on value
change, it's a lambda expression.

19
00:01:14.016 --> 00:01:19.804
So I will open curly braces and
I will say name= it, remember it.

20
00:01:22.196 --> 00:01:27.680
I can also do it in your line if you want
no need to okay but then you have the it.

21
00:01:27.680 --> 00:01:31.259
So basically every time
the text is changing

22
00:01:31.259 --> 00:01:35.618
the text field it's executing
that on value change.

23
00:01:35.618 --> 00:01:39.769
And I'm changing the variable
the thing is that

24
00:01:39.769 --> 00:01:44.958
composable as I mentioned before
are by default read only,

25
00:01:44.958 --> 00:01:49.445
so this is not gonna work,
it's not gonna change.

26
00:01:49.445 --> 00:01:56.493
So, also here instead of get recompose
I can use, $name makes sense.

27
00:01:56.493 --> 00:02:00.428
But this is not gonna work to make
it work, the same happens on react.

28
00:02:00.428 --> 00:02:05.088
The same happens in Angular components or
imbue JS components.

29
00:02:05.088 --> 00:02:10.336
So I need to trigger
a change within a state and

30
00:02:10.336 --> 00:02:17.527
we can do that but in this case
we need to call mutablestateof.

31
00:02:19.904 --> 00:02:26.680
In this case we are setting that is going
to be the state of these composable.

32
00:02:26.680 --> 00:02:32.727
So that means that if the variable changes
the state of the composable changes,

33
00:02:32.727 --> 00:02:36.714
and it's going to trigger a rerender,
make sense?

34
00:02:36.714 --> 00:02:40.080
It gave me an error at this point,

35
00:02:40.080 --> 00:02:45.374
because it's first now there
is a type issue because

36
00:02:45.374 --> 00:02:50.320
now we should be changing
the value of the state.

37
00:02:50.320 --> 00:02:57.015
The same here probably like so because
now name is not a string it's immutable

38
00:02:57.015 --> 00:03:03.714
the state of a string there is another
class in Kotlin that has a value inside.

39
00:03:03.714 --> 00:03:08.294
And also he says saying, hey,
every time we are what is

40
00:03:08.294 --> 00:03:13.186
rerendering the function
executing the function again.

41
00:03:13.186 --> 00:03:18.035
So if we go into rerender the function, we
are starting with an empty string again,

42
00:03:18.035 --> 00:03:19.231
which is a problem.

43
00:03:19.231 --> 00:03:20.011
Does it make sense?

44
00:03:20.011 --> 00:03:22.955
So if I create variables
here any variable, and

45
00:03:22.955 --> 00:03:26.722
then I'm changing the variable
during the state of the app.

46
00:03:26.722 --> 00:03:30.900
If for some reason first composure
will need to be composed again, or

47
00:03:30.900 --> 00:03:34.660
rendered again,
it's going to create the variables again.

48
00:03:34.660 --> 00:03:38.880
So it's losing its state
doesn't make sense.

49
00:03:38.880 --> 00:03:43.903
So that's why here it says if you
read the error that we need to

50
00:03:43.903 --> 00:03:48.730
do using retrieve remember it
says creating a state object

51
00:03:48.730 --> 00:03:53.969
during composition without using
remember what is remember.

52
00:03:53.969 --> 00:03:59.070
Remember, it's just a call

53
00:03:59.070 --> 00:04:04.386
where we can ask the framework

54
00:04:04.386 --> 00:04:08.860
to remember that value.

55
00:04:08.860 --> 00:04:15.726
Remember will actually act like it's
similar to memo in other frameworks.

56
00:04:15.726 --> 00:04:19.759
It will remember that variable on
the next execution is not going to create

57
00:04:19.759 --> 00:04:22.959
the variable again,
if you remember the previous value.

58
00:04:25.811 --> 00:04:27.871
So I know it sounds weird.

59
00:04:27.871 --> 00:04:32.389
But now first, can we try this here?

60
00:04:32.389 --> 00:04:36.814
It's difficult to type.

61
00:04:36.814 --> 00:04:40.778
Well, first then name
it hello mutable state.

62
00:04:40.778 --> 00:04:43.490
Let me get rid of this ID exception.

63
00:04:43.490 --> 00:04:51.316
Because the name if the value is not
a string anymore, it's an estate.

64
00:04:51.316 --> 00:04:56.154
And because now is an expression
I need to use $ sign code block,

65
00:04:56.154 --> 00:05:00.108
because it's not so
simple as a viable name, okay?

66
00:05:02.651 --> 00:05:04.892
Build and refresh.

67
00:05:04.892 --> 00:05:06.787
It says hello nothing.

68
00:05:06.787 --> 00:05:09.289
The thing is that I cannot type here.

69
00:05:09.289 --> 00:05:11.863
Okay because it's a preview.

70
00:05:11.863 --> 00:05:16.777
I can turn on the preview has
a way to turn on interactivity.

71
00:05:16.777 --> 00:05:20.846
It's called dragon start interactive mode.

72
00:05:20.846 --> 00:05:26.893
But is it for gestures is not for click
for swipe for scroll is not gonna work for

73
00:05:26.893 --> 00:05:31.284
typing so, okay, so
it's not letting me type in here.

74
00:05:31.284 --> 00:05:38.210
So I need to run it on the real
emulator to actually see if this works.

75
00:05:38.210 --> 00:05:42.415
So I have a text field, and
I will say, I must start typing.

76
00:05:42.415 --> 00:05:46.586
This is my full name Maximiliano and
you can see it's working.

77
00:05:46.586 --> 00:05:52.686
While I'm typing, it's actually changing
live in the text, if you have experience

78
00:05:52.686 --> 00:05:57.866
with react or similar frameworks
probably you are used to this pattern.

79
00:05:57.866 --> 00:05:59.992
If you're new to this pattern,

80
00:05:59.992 --> 00:06:03.628
it will take some time to
understand what's going on.

81
00:06:03.628 --> 00:06:12.055
So we don't change the text in the text
composable we shaft change the state.

82
00:06:12.055 --> 00:06:17.593
The state will make a new composition
of this function of this composable and

83
00:06:17.593 --> 00:06:20.200
that will trigger a new rendering.

84
00:06:23.060 --> 00:06:23.802
You have any question?

85
00:06:23.802 --> 00:06:24.302
&gt;&gt; No.

86
00:06:28.069 --> 00:06:29.089
Does it make sense?

87
00:06:29.089 --> 00:06:31.295
Kind of yes.

88
00:06:31.295 --> 00:06:37.234
&gt;&gt; If you had multiple variables in there,
they would each have their own remember?

89
00:06:37.234 --> 00:06:42.068
&gt;&gt; That's a good question yeah, you can
have one object with several values inside

90
00:06:42.068 --> 00:06:44.425
and one remember of like a beer object.

91
00:06:44.425 --> 00:06:46.992
You can have several remembers and
several states.

92
00:06:46.992 --> 00:06:53.826
You can remember states or
you gonna remember just plain values and

93
00:06:53.826 --> 00:06:59.085
remember that value on
the next composed process.

94
00:06:59.085 --> 00:07:01.478
So he's not going to
create another variable.

95
00:07:01.478 --> 00:07:06.443
Another option is not going to
reinitialize that variable the next time

96
00:07:06.443 --> 00:07:08.852
that function is being executed.

97
00:07:08.852 --> 00:07:13.860
&gt;&gt; Can remember is ever
collide with each other?

98
00:07:13.860 --> 00:07:18.105
&gt;&gt; If the objects that you
are remembering are not connected, no,

99
00:07:18.105 --> 00:07:19.762
you shouldn't happen.

100
00:07:19.762 --> 00:07:21.023
They're more advanced,

101
00:07:21.023 --> 00:07:24.587
they're more remembers they're more
kind of remembers as well, okay?

102
00:07:24.587 --> 00:07:30.933
So it gets more complicated but
for basic examples that works.

