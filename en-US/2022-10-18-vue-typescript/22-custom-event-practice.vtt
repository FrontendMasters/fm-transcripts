WEBVTT

1
00:00:00.120 --> 00:00:02.618
What we're gonna do now is for
your exercise,

2
00:00:02.618 --> 00:00:07.520
you'll notice that inside we have this
ability to filter right as the user types.

3
00:00:07.520 --> 00:00:10.801
But the thing is this can be a little bit
tricky because sometimes the user is not

4
00:00:10.801 --> 00:00:14.430
ready for you to filter and you're
just Just immediately eliminating it.

5
00:00:14.430 --> 00:00:16.792
So what I want you to
do is inside of this,

6
00:00:16.792 --> 00:00:21.307
whether let's just do dishes to be
consistent, I want you to hijack the event

7
00:00:21.307 --> 00:00:25.550
so that it only like updates and
grabs the latest once you've hit Enter.

8
00:00:30.610 --> 00:00:34.369
Walk through the solution and then I
might show you an easy way to do it.

9
00:00:34.369 --> 00:00:38.586
So let's recap, so what we're trying to
do here is inside of our dishes currently

10
00:00:38.586 --> 00:00:42.146
whatever we type it automatically
filters which is nice on one hand.

11
00:00:42.146 --> 00:00:45.585
But on the other hand, let's actually make
use of a user's intention about when they

12
00:00:45.585 --> 00:00:48.213
wanna filter in case they're trying
to like look at something and

13
00:00:48.213 --> 00:00:50.497
reference it as they're typing
to kind of make a guess.

14
00:00:50.497 --> 00:00:54.933
So the way we're going to do this is start
by actually breaking apart the V model

15
00:00:54.933 --> 00:01:00.120
that exists on the input element, and so
that's happening all the way down here.

16
00:01:00.120 --> 00:01:04.478
So this filter text V model that's
happening, we can basically say then

17
00:01:04.478 --> 00:01:09.760
is that we can break it up into the input,
sorry, the value that we wanna rebind.

18
00:01:09.760 --> 00:01:13.145
But then we have this input where we say,
basically,

19
00:01:13.145 --> 00:01:15.487
let's call it update filter texts.

20
00:01:15.487 --> 00:01:20.344
All right, so this method for update
filter text, let's define that up here,

21
00:01:20.344 --> 00:01:22.530
so cons, update, filter, text.

22
00:01:23.590 --> 00:01:26.304
Now we know a couple things,
we know one, we're getting an event, but

23
00:01:26.304 --> 00:01:27.630
what kind of event are we getting?

24
00:01:27.630 --> 00:01:32.910
We're getting an input event, and
then what we do wanna then is we wanna

25
00:01:32.910 --> 00:01:39.230
check to see basically, can we actually
see something specific about it?

26
00:01:39.230 --> 00:01:40.130
So let's go ahead and

27
00:01:40.130 --> 00:01:43.540
start just by making sure that
the event actually triggers and fires.

28
00:01:43.540 --> 00:01:48.360
So we go back here and look at our
console, we can see when we type, okay,

29
00:01:48.360 --> 00:01:50.830
this is good FTS, perfect.

30
00:01:50.830 --> 00:01:55.940
But I'm kind of curious though, what if I
swap this to be a keyboard event instead?

31
00:01:57.130 --> 00:02:01.080
If I swap that over, it looks like it's
still cause it calling it as an input

32
00:02:01.080 --> 00:02:04.600
event, but
let's see if this does anything for us.

33
00:02:04.600 --> 00:02:08.986
Because on the keyboard event, the nice
thing is we get some other things that we

34
00:02:08.986 --> 00:02:13.980
know we get as far as like the code on
the actual key event that's being pressed.

35
00:02:13.980 --> 00:02:17.685
So the key event then we can also just say
like this, and then that way when we go

36
00:02:17.685 --> 00:02:22.730
back, let's try this out, so there you go,
it's undefined, that's interesting.

37
00:02:22.730 --> 00:02:24.985
So it looks like it's because
at least at the moment,

38
00:02:24.985 --> 00:02:26.800
this input event really doesn't have it.

39
00:02:26.800 --> 00:02:30.129
So we can't see, we can't fake it
even though type three has been like,

40
00:02:30.129 --> 00:02:31.240
you're good.

41
00:02:31.240 --> 00:02:34.370
No, you're not really good,
[LAUGH] clearly something is wrong.

42
00:02:34.370 --> 00:02:38.634
So we can't just arbitrarily change it,
so we have our input event,

43
00:02:38.634 --> 00:02:42.466
and that's fine, and so once again,
we can go ahead and say.

44
00:02:42.466 --> 00:02:46.693
All right, so we have to event
dot target as HTML input element,

45
00:02:46.693 --> 00:02:50.120
and then let's log that
once again real quick.

46
00:02:50.120 --> 00:02:55.157
And then once we refresh, there we go,
we have some stuff here going on, and

47
00:02:55.157 --> 00:03:00.073
then we can basically then grab the URL
actually we don't want the value.

48
00:03:00.073 --> 00:03:03.299
Well, we do want where we
want this in this Second, so

49
00:03:03.299 --> 00:03:06.327
we do want we want to get
the key somehow from this.

50
00:03:06.327 --> 00:03:09.888
It's kind of interesting that
the key doesn't pop up, but okay,

51
00:03:09.888 --> 00:03:13.080
there we go is trusted,
let's see, where's that data T?

52
00:03:13.080 --> 00:03:17.150
I mean, if we hit Enter what
does that create for us?

53
00:03:17.150 --> 00:03:22.052
Nothing, it's interesting Enter
doesn't do anything for us, so

54
00:03:22.052 --> 00:03:24.730
whatever you want to do.

55
00:03:24.730 --> 00:03:28.558
So maybe actually the more so I'm sure
there's a way you can dive in you can look

56
00:03:28.558 --> 00:03:32.328
into things, but this is where actually
the input event might not actually be

57
00:03:32.328 --> 00:03:34.481
the right thing to be listening for
on this.

58
00:03:34.481 --> 00:03:38.935
In fact, and so this is a little bit of
a gotcha that's kind of done intentionally

59
00:03:38.935 --> 00:03:42.357
what we might wanna do instead
is actually do the key up event.

60
00:03:42.357 --> 00:03:45.948
And so if you haven't worked with view
native events before it allows you to

61
00:03:45.948 --> 00:03:48.403
basically attach to any
native JavaScript event.

62
00:03:48.403 --> 00:03:49.519
And work with it and so

63
00:03:49.519 --> 00:03:52.938
on the key up event now let's see
what exactly do we get from this.

64
00:03:52.938 --> 00:03:55.685
So you see key up has
a keyboard event okay,

65
00:03:55.685 --> 00:03:58.176
this looks a little bit more interesting.

66
00:03:58.176 --> 00:04:01.988
So let's swap that over now to a keyboard
event so that's really what we're looking

67
00:04:01.988 --> 00:04:05.440
for, and let's go ahead and
see how if this changes anything.

68
00:04:05.440 --> 00:04:08.328
So now, we can go ahead and
let's go in here and be like,

69
00:04:08.328 --> 00:04:11.838
okay, wait, I'm an addition,
is this correct?

70
00:04:11.838 --> 00:04:14.940
Look at the code,
the magic code has appeared.

71
00:04:14.940 --> 00:04:18.899
So if I hit Enter, hey, it's appearing, so

72
00:04:18.899 --> 00:04:25.045
what we can do is we can say, well,
if event dot code is equal to enter,

73
00:04:25.045 --> 00:04:31.539
then we shall do our thing where we do
dish Wait new dish I believe new dish.

74
00:04:31.539 --> 00:04:32.323
Wait am I end,

75
00:04:32.323 --> 00:04:35.950
wait I forgot we're filtering text
we're not updating the new text.

76
00:04:35.950 --> 00:04:40.991
So we need to update its filter text,
so filter text dot

77
00:04:40.991 --> 00:04:48.250
value is equal to let's see event dot
target dot will let us do it, it does not.

78
00:04:48.250 --> 00:04:52.770
Okay, so now, we know once again this is
a nation input element so we need to cast

79
00:04:52.770 --> 00:04:56.760
it, so let's go and cast it as
an element then this gives us the value.

80
00:04:57.800 --> 00:05:04.329
So now, we can try this out,
ghost, a nothing's changing yet,

81
00:05:04.329 --> 00:05:10.293
but if I hit Enter everything filters,
but that's not it.

82
00:05:10.293 --> 00:05:15.544
That's actually not the easiest way to do
this, the easiest way to do this is we can

83
00:05:15.544 --> 00:05:21.650
actually delete all this and then we can
actually attach a modifier to our events.

84
00:05:21.650 --> 00:05:26.180
So this allows you to basically
already bypass the key check.

85
00:05:26.180 --> 00:05:29.682
So if I save this now,
and then go back here,

86
00:05:29.682 --> 00:05:35.009
you can see a little more Enter it
refreshes, or while it filters.

87
00:05:35.009 --> 00:05:38.235
And so chaining events is
a popular thing in view, and so

88
00:05:38.235 --> 00:05:40.510
something I want you all to know about.

89
00:05:40.510 --> 00:05:44.419
Because for example, when you're doing
a forum, how many of us have done forums

90
00:05:44.419 --> 00:05:48.410
where when we had to listen to a submit
event, run event dot prevent default?

91
00:05:48.410 --> 00:05:52.365
Well, whenever you're building a view just
do this, submit dot prevent your codes

92
00:05:52.365 --> 00:05:56.850
much cleaner, you don't have to worry
about preventing the default event.

93
00:05:56.850 --> 00:05:59.260
So definitely look into the event
chaining going forward.

94
00:05:59.260 --> 00:06:01.680
There's a lot in there a lot
more than what I've shown you.

95
00:06:01.680 --> 00:06:04.847
In fact, you can even write your own
custom modifiers this whole thing you can

96
00:06:04.847 --> 00:06:05.389
customize.

97
00:06:05.389 --> 00:06:08.776
But I just wanted you to see the kind of
syntactic sugar that view can provide for

98
00:06:08.776 --> 00:06:11.170
you that can make things
just a lot easier.

99
00:06:11.170 --> 00:06:14.900
But again, just to be clear, I wanted you
all to scale it was like to get at the raw

100
00:06:14.900 --> 00:06:18.090
primitives of it in case you
needed to get at that level.

101
00:06:18.090 --> 00:06:21.010
So there we go,
that's how we would complete setting.

