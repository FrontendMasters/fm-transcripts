WEBVTT

1
00:00:00.070 --> 00:00:02.675
There's an important topic that
we haven't talked about yet,

2
00:00:02.675 --> 00:00:05.440
that is pretty important to
most frameworks these days.

3
00:00:05.440 --> 00:00:08.830
And that's global state management for
that.

4
00:00:08.830 --> 00:00:12.766
Everything we've been doing right now
has been encapsulated into our various

5
00:00:12.766 --> 00:00:13.540
components.

6
00:00:13.540 --> 00:00:18.502
So for example, one of the reasons why I
have the restaurant page you see here has

7
00:00:18.502 --> 00:00:19.402
all the data.

8
00:00:19.402 --> 00:00:22.489
And then I have this new restaurant
form that is a subset and

9
00:00:22.489 --> 00:00:24.946
then being like sort of toggle back and
forth.

10
00:00:24.946 --> 00:00:29.395
Is because at least prior just talking
about state management it's very tricky to

11
00:00:29.395 --> 00:00:32.297
pass data around or
components like that, right, so

12
00:00:32.297 --> 00:00:34.439
ideally I would create another route.

13
00:00:34.439 --> 00:00:36.553
And then that would share
something in the global state,

14
00:00:36.553 --> 00:00:38.150
that's what we would ideally like to see.

15
00:00:39.170 --> 00:00:43.340
So what we're gonna do is we're gonna
show you how to basically do some state

16
00:00:43.340 --> 00:00:47.220
management with TypeScript with
the new library called Pinia.

17
00:00:47.220 --> 00:00:49.617
So if you haven't seen this
cute little pineapple,

18
00:00:49.617 --> 00:00:52.480
this is the mascot for
our global state management.

19
00:00:52.480 --> 00:00:54.119
And if you're wondering like,
what about view x?

20
00:00:54.119 --> 00:00:56.973
Well, view x is ultimately, I think,
basically going to be deprecated and

21
00:00:56.973 --> 00:00:59.910
Pinia is now the official
state management solution.

22
00:00:59.910 --> 00:01:03.435
So Pinia Lite V3 is built from
the bottom up with TypeScript, so

23
00:01:03.435 --> 00:01:07.190
it's designed to be really
easy to use with it, actually.

24
00:01:07.190 --> 00:01:09.855
So what we're gonna do is we're
gonna assume that basically people,

25
00:01:09.855 --> 00:01:11.617
this first time that
people are using Pinia and

26
00:01:11.617 --> 00:01:15.220
then we're just gonna sort of augment
types as like as we did before.

27
00:01:15.220 --> 00:01:19.346
So the thing about Pinia, as far as like,
I think state management in general,

28
00:01:19.346 --> 00:01:22.871
is that in the past few years you
used to have to opt into modularity.

29
00:01:22.871 --> 00:01:26.683
You have to be like, okay, like most
people start out with this global store

30
00:01:26.683 --> 00:01:30.852
and then over time, you broke that up into
smaller pieces that then could be chucked

31
00:01:30.852 --> 00:01:32.540
when it loaded on a certain page.

32
00:01:32.540 --> 00:01:35.150
You didn't load your entire global
state on every single page.

33
00:01:35.150 --> 00:01:39.038
And that's kind of like the progress, but
then I think at some point people realize,

34
00:01:39.038 --> 00:01:42.008
wait, I think we just want modular
by default it's kinda silly to

35
00:01:42.008 --> 00:01:45.420
go the other direction to like,
import everything at once.

36
00:01:45.420 --> 00:01:48.350
So Pinia follows that exact convention.

37
00:01:48.350 --> 00:01:51.290
So first thing first is inside of our
stores directory currently empty.

38
00:01:51.290 --> 00:01:53.710
Let me make sure I'm on the right branch,
I am great.

39
00:01:53.710 --> 00:01:57.500
We're just gonna create a new file, and
I use Pascal case for naming the stores,

40
00:01:57.500 --> 00:02:00.910
just because they're kinda
the constants the way I see them.

41
00:02:00.910 --> 00:02:07.149
So I'm gonna do RestaurantStore.ts,
so I'm gonna do.

42
00:02:07.149 --> 00:02:10.020
Okay, now that we have this,
what do we need to do?

43
00:02:10.020 --> 00:02:14.550
Well, we're going to import
a define store helper from Pinia.

44
00:02:14.550 --> 00:02:17.513
So this is back to our composable
discussion that we've been talking about

45
00:02:17.513 --> 00:02:20.521
where we have a lot of helper functions
to help us do the view like things, but

46
00:02:20.521 --> 00:02:22.630
in a declarative way that
people would understand.

47
00:02:22.630 --> 00:02:24.640
So now that we have this defined store,
what can we do?

48
00:02:24.640 --> 00:02:26.980
Well, so we can define a constant.

49
00:02:26.980 --> 00:02:28.370
And what are we gonna call it?

50
00:02:28.370 --> 00:02:31.020
So it's a composable that's
gonna call upon the store.

51
00:02:31.020 --> 00:02:33.510
So the use keyword is gonna be used here.

52
00:02:33.510 --> 00:02:37.462
So use RestaurantStore is
gonna be what this is called.

53
00:02:37.462 --> 00:02:39.770
And then we're gonna
call define store here.

54
00:02:39.770 --> 00:02:42.100
So this kinda like defined
component if you think about it,

55
00:02:42.100 --> 00:02:43.508
now you're defining a component.

56
00:02:43.508 --> 00:02:46.299
Now you're defining a store,
and so what am I gonna call it?

57
00:02:46.299 --> 00:02:49.610
I'm just gonna call it exactly what
it's called, which is RestaurantStore.

58
00:02:49.610 --> 00:02:52.942
So I usually map the, this is the idea
of the source essentially, and

59
00:02:52.942 --> 00:02:56.290
I map it directly to the file name,
so that's why I name it this way.

60
00:02:56.290 --> 00:02:59.694
Casing is up to you, of course,
now, with that said,

61
00:02:59.694 --> 00:03:04.140
now we have an object that we passed
that is gonna consist of our stores.

62
00:03:04.140 --> 00:03:07.952
So typically in most state management like
Redux and stuff you have your state, you

63
00:03:07.952 --> 00:03:11.712
have your getters, which are essentially
your computer properties in view, and

64
00:03:11.712 --> 00:03:12.818
then you have actions.

65
00:03:12.818 --> 00:03:19.390
And then you have mutations, right,
that's like your standard Redux pattern.

66
00:03:19.390 --> 00:03:24.055
But what I'm happy to tell you is
that with Penia, mutations disappear,

67
00:03:24.055 --> 00:03:28.570
no more boilerplate of like, call
an action to then define a mutation to

68
00:03:28.570 --> 00:03:31.375
basically do the same thing, that's all.

69
00:03:31.375 --> 00:03:34.290
We've taken care of that for
you, it's all good now.

70
00:03:34.290 --> 00:03:37.646
So what this ultimately means is that
to map it over to what we talked about

71
00:03:37.646 --> 00:03:41.070
before, this is essentially our
data object from options API.

72
00:03:41.070 --> 00:03:46.200
This is our computed and this is our
methods, basically what's happening.

73
00:03:47.630 --> 00:03:52.170
So first thing first, let's go ahead and
then have a list of data.

74
00:03:52.170 --> 00:03:58.310
So to refactor this, I'm gonna teach
here to do or restaurant page.

75
00:03:58.310 --> 00:03:59.840
And I'm gonna take all of this out.

76
00:04:01.450 --> 00:04:05.340
Okay, we're gonna x name that.

77
00:04:05.340 --> 00:04:07.636
And then actually I'll leave
it as an empty array, so

78
00:04:07.636 --> 00:04:08.870
that it doesn't yell at me.

79
00:04:08.870 --> 00:04:14.870
And then we're gonna drop it inside
of our restaurants store, okay?

80
00:04:14.870 --> 00:04:16.090
Lots and lots of yelling.

81
00:04:16.090 --> 00:04:17.850
Why is it yelling at me?

82
00:04:17.850 --> 00:04:20.880
Use store function that
retrieves the store instance.

83
00:04:21.964 --> 00:04:24.340
Silly me, I forgot.

84
00:04:24.340 --> 00:04:26.598
State, in case you ever
doing this in the past,

85
00:04:26.598 --> 00:04:29.680
you could define your state
just as like an empty object.

86
00:04:29.680 --> 00:04:32.475
But it's actually just like most
reactivity system, it needs to be

87
00:04:32.475 --> 00:04:36.490
a function that calls an object, so that
it's always getting its latest instance.

88
00:04:36.490 --> 00:04:39.767
So once I turn this into the arrow
function that returns an object

89
00:04:39.767 --> 00:04:43.920
that contains the state, there you go,
now it is much happier with me.

90
00:04:43.920 --> 00:04:47.544
And so again, something that Tyffyn
kinda helped me out with this because

91
00:04:47.544 --> 00:04:51.870
I would have just barreled ahead otherwise
without that huge red squiggly line, okay,

92
00:04:51.870 --> 00:04:53.920
this looks much prettier.

93
00:04:53.920 --> 00:04:56.624
So now that we have this,
of course, the question is, okay,

94
00:04:56.624 --> 00:04:58.730
how do we actually call the thing?

95
00:04:58.730 --> 00:05:01.910
So let's go ahead and
inside of our restaurant page.

96
00:05:04.000 --> 00:05:08.009
We can go ahead now and import our
composable use restaurant store and

97
00:05:08.009 --> 00:05:12.307
so what this is again what we're doing
is we're basically setting it up.

98
00:05:12.307 --> 00:05:18.134
So what I can do here is I can say const
restaurantStore = useRestaurantStore.

99
00:05:18.134 --> 00:05:21.642
And so this now has a direct correlation
to that store module that we're

100
00:05:21.642 --> 00:05:23.250
importing on this file.

101
00:05:23.250 --> 00:05:27.219
And this is something that I personally
have really come to like about using

102
00:05:27.219 --> 00:05:30.936
Pinia versus like view x where you
just have this.dollar sign store.

103
00:05:30.936 --> 00:05:34.260
And you just have to assume things are
aware and then you have to name things.

104
00:05:34.260 --> 00:05:37.284
This I just name it whatever that makes
sense to me, which is restaurantsStore,

105
00:05:37.284 --> 00:05:40.060
use restaurantsStore I think most
people can follow along this.

106
00:05:40.060 --> 00:05:44.485
And then from here, believe it or
not let me lock restaurant store for

107
00:05:44.485 --> 00:05:49.970
us to see what we're getting,
there you go great, other way, all right?

108
00:05:49.970 --> 00:05:52.940
So if I go to restaurants,
nothing's here, but that makes sense.

109
00:05:52.940 --> 00:05:57.194
You'll notice that inside of our proxy
we have basically everything here,

110
00:05:57.194 --> 00:05:58.770
there's the list.

111
00:05:58.770 --> 00:06:02.830
There's our list of all the things
that we have inside of here.

112
00:06:02.830 --> 00:06:07.940
Which means no longer do you have to go
like, store.state dot this or whatever.

113
00:06:07.940 --> 00:06:13.050
The ergonomics are there so that we can
basically now say, restaurantStore.list.

114
00:06:13.050 --> 00:06:16.609
And so now if we refresh this and take a
look, look, there's our proxy with all our

115
00:06:16.609 --> 00:06:19.430
events or the or sorry,
all of our restaurants that we want.

116
00:06:19.430 --> 00:06:22.186
So really if we think about it,

117
00:06:22.186 --> 00:06:27.486
what we could do is we could
just say that restaurantLists,

118
00:06:27.486 --> 00:06:32.364
we can just actually just
do restaurantStore.List.

119
00:06:34.194 --> 00:06:38.632
And then cannot find any
in our restaurant store,

120
00:06:38.632 --> 00:06:43.184
I think that was a weird compiler bug,
[LAUGH] okay?

121
00:06:43.184 --> 00:06:47.174
And so again, what's nice though, is that
now that you're actually in this proxy

122
00:06:47.174 --> 00:06:51.560
reactive like environment,
all the values actually just disappear.

123
00:06:51.560 --> 00:06:53.310
Filter text is fine.

124
00:06:53.310 --> 00:06:57.720
So restaurant list filter this is great,
but it's yelling at us.

125
00:06:57.720 --> 00:07:00.367
Why?
Because right now we don't have any types,

126
00:07:00.367 --> 00:07:01.970
this actually does make sense.

127
00:07:03.490 --> 00:07:07.040
Because, again,
we've defined it, we've used it,

128
00:07:07.040 --> 00:07:10.752
but how do we tell Pinia that
we have a list of restaurants?

129
00:07:10.752 --> 00:07:13.430
Well, exactly just like we did before.

130
00:07:13.430 --> 00:07:17.406
I would just call it state shape and
then I'm gonna say that, hey,

131
00:07:17.406 --> 00:07:21.010
the list is a list of restaurants,
an array.

132
00:07:21.010 --> 00:07:23.170
And then when the object is returned,
what am I expecting?

133
00:07:23.170 --> 00:07:23.730
StageShape.

134
00:07:25.780 --> 00:07:28.214
So now that I have that,
when I go back to restaurant page,

135
00:07:28.214 --> 00:07:31.150
you'll notice all the squiggly
lines have disappeared.

136
00:07:31.150 --> 00:07:34.220
And more importantly,
I don't need value anymore, and that's it.

137
00:07:35.760 --> 00:07:42.651
I've now brought everything in, so
let's continue on this refactor as well.

138
00:07:42.651 --> 00:07:46.260
So we have the ability to see
the lists and all that stuff.

139
00:07:46.260 --> 00:07:48.330
So let's go ahead and now let's
take a look at some getters, right?

140
00:07:48.330 --> 00:07:49.640
What are some common getters that we have?

141
00:07:49.640 --> 00:07:53.640
Well, we can clean this up quite a bit
where we actually no, I think about it.

142
00:07:53.640 --> 00:07:56.146
We don't really need this, let's see,

143
00:07:56.146 --> 00:08:00.090
we don't need number of restaurants
to live inside of this file.

144
00:08:00.090 --> 00:08:03.840
This is something that makes sense to live
inside of the store, so let's move it.

145
00:08:03.840 --> 00:08:05.411
So we're gonna go ahead and take that out.

146
00:08:05.411 --> 00:08:08.714
Actually, let me just comment that out,
so I don't forget that I need to do that.

147
00:08:08.714 --> 00:08:13.280
And then inside of here we can say
a number of restaurants, right?

148
00:08:13.280 --> 00:08:17.076
And then this is where I have to
recall real quick this is pull up

149
00:08:17.076 --> 00:08:19.640
the docs just to make
sure I do this right.

150
00:08:22.000 --> 00:08:25.190
Because this is a discussion that's
worth having real quick, okay?

151
00:08:26.800 --> 00:08:29.660
So something again that used to
happen in the past is that whenever

152
00:08:29.660 --> 00:08:32.678
you would reference the state you
have to use it in a normal function.

153
00:08:32.678 --> 00:08:36.065
You can use the arrow function
because you're relying on this, but

154
00:08:36.065 --> 00:08:39.230
again in an effort to be a little
bit more modular as you can see.

155
00:08:39.230 --> 00:08:42.598
Getters now can actually take an arrow
function where they automatically get past

156
00:08:42.598 --> 00:08:44.720
the state as the first parameter.

157
00:08:44.720 --> 00:08:49.263
So now that we know that,
we can basically then say, all right,

158
00:08:49.263 --> 00:08:53.489
well this takes an argument of state and
what is it gonna do?

159
00:08:53.489 --> 00:08:56.756
Is gonna do return, okay,
for now, this is actually,

160
00:08:56.756 --> 00:08:59.896
I know why this is gonna be a problem,
but it's fine.

161
00:08:59.896 --> 00:09:05.162
We're this gonna practice this
state.list.length, that's it.

162
00:09:05.162 --> 00:09:07.025
And then if you wanna annotate it,
that's totally fine.

163
00:09:07.025 --> 00:09:11.660
We just add the number onto the annotation
for the arrow function description.

164
00:09:12.750 --> 00:09:14.780
Okay, that's taken care of.

165
00:09:14.780 --> 00:09:17.940
And so this will be a little bit
tricky later, but it's fine.

166
00:09:17.940 --> 00:09:21.262
We'll just crack on, and
then here's the thing.

167
00:09:21.262 --> 00:09:23.270
Things like deleting a restaurant,
adding a restaurant.

168
00:09:23.270 --> 00:09:23.896
How do we do this?

169
00:09:23.896 --> 00:09:26.960
Well, these are things that really
belong inside, once again, the store.

170
00:09:26.960 --> 00:09:31.410
This should be something that
we actually call an action for.

171
00:09:31.410 --> 00:09:32.970
So how does that look like?

172
00:09:32.970 --> 00:09:37.069
Well, in this particular case, again,
just to match up with documentation,

173
00:09:37.069 --> 00:09:40.280
you'll see that it does something
a little bit differently.

174
00:09:40.280 --> 00:09:44.823
Now is that because when you use this
syntax just like I was mentioning,

175
00:09:44.823 --> 00:09:48.700
it actually needs to get the whole
instance of the store now.

176
00:09:48.700 --> 00:09:51.151
We no longer can just get the state, and

177
00:09:51.151 --> 00:09:55.249
this is kind of tricky when it
comes to auto completion and stuff.

178
00:09:55.249 --> 00:09:58.645
But especially because of things like
asynchronous and that kind of thing.

179
00:09:58.645 --> 00:10:02.173
Typically, when you're running actions
you're not gonna use an arrow function,

180
00:10:02.173 --> 00:10:03.774
that's just general best practice.

181
00:10:03.774 --> 00:10:06.426
But on the upside,
what this means though is that Eduardo and

182
00:10:06.426 --> 00:10:09.911
the team who work on Pinia have made this
thing actually still have autocomplete

183
00:10:09.911 --> 00:10:13.400
as you would expect when it comes
to typing and that kind of stuff.

184
00:10:13.400 --> 00:10:18.392
So what we would do here is
we would basically say, okay,

185
00:10:18.392 --> 00:10:22.348
so we have here that is
gonna get the payload.

186
00:10:22.348 --> 00:10:27.673
And the payload is still gonna
be a restaurant, that's fine,

187
00:10:27.673 --> 00:10:31.702
but then we can say
this.list.push payload.

188
00:10:31.702 --> 00:10:33.479
We're not gonna worry
about that right now.

189
00:10:33.479 --> 00:10:37.563
And then when we have delete restaurant,
similarly,

190
00:10:37.563 --> 00:10:40.329
we'll get a payload of restaurant.

191
00:10:40.329 --> 00:10:46.893
And then this.list = this.list,

192
00:10:46.893 --> 00:10:54.000
.list.filter restaurant, great.

193
00:10:54.000 --> 00:11:00.835
We'll just type that and
then there you go.

194
00:11:00.835 --> 00:11:03.820
So 1, 2, 3.

195
00:11:03.820 --> 00:11:07.551
So now we need to actually make sure
we call all of these things inside of

196
00:11:07.551 --> 00:11:08.870
our page.

197
00:11:08.870 --> 00:11:10.730
So I'm gonna go ahead and let me just,

198
00:11:10.730 --> 00:11:14.630
I can just see the hide form is
still something that's important.

199
00:11:14.630 --> 00:11:19.680
So this is where for example now, okay,
so we have inside of here addRestaurant.

200
00:11:19.680 --> 00:11:20.940
So how do we do this?

201
00:11:20.940 --> 00:11:24.646
So inside addRestaurant, you'll notice
that's being called right here,

202
00:11:24.646 --> 00:11:26.820
and we know that we're
getting the payload.

203
00:11:26.820 --> 00:11:29.730
So what we're going to do is we're
gonna still call this addRestaurant.

204
00:11:29.730 --> 00:11:35.354
That's totally fine, but rather than
actually modifying it directly here,

205
00:11:35.354 --> 00:11:39.785
all we need to do is call
restaurantStore.addRestaurant and

206
00:11:39.785 --> 00:11:41.673
then drop in the payload.

207
00:11:43.649 --> 00:11:46.630
Const save.

208
00:11:47.810 --> 00:11:51.200
Why is it saying can't
find name addRestaurant?

209
00:11:51.200 --> 00:11:55.778
Okay, [LAUGH] I think we're okay now,
that was super weird.

210
00:11:55.778 --> 00:11:59.160
Yep, no errors being yelled at, great.

211
00:11:59.160 --> 00:12:04.468
Okay, so we can test this out real
quick basically by going into our app,

212
00:12:04.468 --> 00:12:08.036
refresh, much better okay
now when we hit new and

213
00:12:08.036 --> 00:12:11.970
we do test.com I forgot to
hit the sign it there we go.

214
00:12:11.970 --> 00:12:16.370
Now when we create it, there you go,
it is actually appearing as expected.

215
00:12:18.020 --> 00:12:21.087
And so again,
I could walk through the rest of this but

216
00:12:21.087 --> 00:12:25.467
I think the most important thing I wanna
show you here with the global store.

217
00:12:25.467 --> 00:12:29.112
Is that it really doesn't look that
different from a regular component

218
00:12:29.112 --> 00:12:33.304
instance, besides explicit keywords like
State is the data that you're gonna be

219
00:12:33.304 --> 00:12:35.080
pulling from.

220
00:12:35.080 --> 00:12:38.278
Getters is computed and then actions.

221
00:12:38.278 --> 00:12:41.340
Like, this could easily be mapped
to what we learned earlier

222
00:12:41.340 --> 00:12:44.100
today as far as like methods computed.

223
00:12:44.100 --> 00:12:48.540
And state and then StateShape, data shape.

224
00:12:48.540 --> 00:12:51.990
I think that's what's important to
realize with in this journey with you and

225
00:12:51.990 --> 00:12:55.543
TypeScript, is that the goal is really
not to make you learn something brand new

226
00:12:55.543 --> 00:12:56.460
in terms of syntax.

227
00:12:56.460 --> 00:13:00.104
It should feel very familiar as you
are moving from thing to thing.

