WEBVTT

1
00:00:00.610 --> 00:00:03.430
So you'll notice that inside of
the project we have basically two

2
00:00:03.430 --> 00:00:04.467
different data types.

3
00:00:04.467 --> 00:00:06.511
We have the restaurant, we have dishes.

4
00:00:06.511 --> 00:00:10.481
And so just like the RestaurantCard
where we added PropTypes to the dish,

5
00:00:10.481 --> 00:00:13.160
we need you to do the same for the dish.

6
00:00:13.160 --> 00:00:15.725
And so inside of the DishCard,
go ahead and

7
00:00:15.725 --> 00:00:20.728
take what we've just learned as far as
converting a component over to TypeScript.

8
00:00:20.728 --> 00:00:25.619
And then importing the define components
method and just defining the types for

9
00:00:25.619 --> 00:00:26.279
the dish.

10
00:00:31.647 --> 00:00:35.551
&gt;&gt; Working through this, I was curious
how much of what we've just seen and

11
00:00:35.551 --> 00:00:39.206
implemented is going to be similar
when using the Composition API?

12
00:00:39.206 --> 00:00:42.987
&gt;&gt; A lot of the things we're doing upfront
right now is to basically accommodate

13
00:00:42.987 --> 00:00:46.530
the Options API because we do provide
a lot of conventions with that.

14
00:00:46.530 --> 00:00:50.131
Because for those who use Options API,
we're used to this keyword a lot and

15
00:00:50.131 --> 00:00:53.270
this is as you know in JavaScript
is a diabolical concept.

16
00:00:53.270 --> 00:00:55.316
So TypeScript gets super, super lost and

17
00:00:55.316 --> 00:00:58.307
we try our best to hack around
that to make your lives easier.

18
00:00:58.307 --> 00:01:02.349
But when it comes to Composition API,
I'm hoping that people will feel like it's

19
00:01:02.349 --> 00:01:05.935
a more native integration with as far
as like using Vue with TypeScript.

20
00:01:05.935 --> 00:01:08.603
Now I see Galena or
apologize if I mispronounced that but

21
00:01:08.603 --> 00:01:12.516
I see that apparently, it's not as easy as
you expect it so I would love to hear from

22
00:01:12.516 --> 00:01:15.276
you when the time comes and
as we're going through that.

23
00:01:15.276 --> 00:01:18.975
But in the meantime, I think let's
go ahead and do the solution for

24
00:01:18.975 --> 00:01:20.438
the exercise, shall we?

25
00:01:20.438 --> 00:01:23.554
Okay, so for
those here in the DishCard, hopefully,

26
00:01:23.554 --> 00:01:26.283
you didn't find this
exercise too difficult.

27
00:01:26.283 --> 00:01:29.954
But basically, we're really repeating
what we did before in the RestaurantCard.

28
00:01:29.954 --> 00:01:32.688
So the first thing first is
we wanna use TypeScript so

29
00:01:32.688 --> 00:01:34.870
we're gonna do the language attribute.

30
00:01:34.870 --> 00:01:37.730
And actually, there was a great question
earlier for those who might be newer

31
00:01:37.730 --> 00:01:41.600
to Vue is that this language attribute is
not something that's specific to script.

32
00:01:41.600 --> 00:01:46.181
Basically, Vue tries to use native
attributes within its component,

33
00:01:46.181 --> 00:01:49.120
single file component as much as possible.

34
00:01:49.120 --> 00:01:52.144
So the lang attribute can also be
used unlike style for example,

35
00:01:52.144 --> 00:01:55.896
it's commonly used like preprocessors,
like lang sass, for example, or for

36
00:01:55.896 --> 00:01:58.160
those that use pug might be lang pug.

37
00:01:58.160 --> 00:02:01.386
And we'll see that actually,
the attributes inside of these single file

38
00:02:01.386 --> 00:02:03.790
component blocks can be
basically anything you want.

39
00:02:03.790 --> 00:02:07.599
And so people have done some pretty
interesting things to create some custom

40
00:02:07.599 --> 00:02:11.424
attributes and we'll be using one later
on in the course to show you that so.

41
00:02:11.424 --> 00:02:16.623
Okay, next thing we got to do is to get
to import define component from Vue cuz

42
00:02:16.623 --> 00:02:22.818
we gotta tell TypeScript, hey, we're using
this Options API component wrapper thing.

43
00:02:22.818 --> 00:02:25.070
So please, this is what it is.

44
00:02:25.070 --> 00:02:26.940
And so if you haven't hovered over it,

45
00:02:26.940 --> 00:02:30.050
you'll see that there's
a lot going on in here.

46
00:02:30.050 --> 00:02:34.642
And that is because once again, we're
trying to help TypeScript navigate all of

47
00:02:34.642 --> 00:02:37.355
the guardrails that we
set up with Options API.

48
00:02:37.355 --> 00:02:42.084
Once we have that, we wanna actually make
sure that we have the type for the dish so

49
00:02:42.084 --> 00:02:44.588
all I'm gonna do is go
on to the dish page and

50
00:02:44.588 --> 00:02:46.969
we're gonna grab the dish from up here.

51
00:02:46.969 --> 00:02:50.919
And so as we can see here,
I actually I think I memorized it so

52
00:02:50.919 --> 00:02:54.158
we have a type of dish and
that has an ID of string,

53
00:02:54.158 --> 00:02:58.620
that has a name of string and
it has a status with string as well.

54
00:02:58.620 --> 00:03:00.180
And that's all it is.

55
00:03:00.180 --> 00:03:03.803
And so to actually apply that now to our
object, this is where we're gonna practice

56
00:03:03.803 --> 00:03:06.870
our as type casting and
we're gonna want the PropType.

57
00:03:06.870 --> 00:03:09.395
And so what we need to do
is import that from Vue.

58
00:03:09.395 --> 00:03:13.475
Now, something that actually
worth noting though is you

59
00:03:13.475 --> 00:03:17.555
might have been compelled to
do it like this originally.

60
00:03:17.555 --> 00:03:20.483
And so this feels normal because this
is how we typically import stuff within

61
00:03:20.483 --> 00:03:21.110
JavaScript.

62
00:03:21.110 --> 00:03:24.018
But you'll notice though,
is that it's yelling at us because it's

63
00:03:24.018 --> 00:03:26.850
saying that this is not exactly
a traditional JavaScript value.

64
00:03:26.850 --> 00:03:29.080
This is actually a type.

65
00:03:29.080 --> 00:03:32.514
So as a result, it should be yelling
at you but we basically whenever

66
00:03:32.514 --> 00:03:36.913
you see input type is because we're trying
to tell the compiler that hey, this thing,

67
00:03:36.913 --> 00:03:38.440
you can basically ignore it.

68
00:03:38.440 --> 00:03:39.850
You don't need to compile
it into anything.

69
00:03:41.360 --> 00:03:42.943
Okay, so now that we have the PropType,

70
00:03:42.943 --> 00:03:45.702
we're gonna use a greater than less
than symbol and then pass that in.

71
00:03:45.702 --> 00:03:51.639
And then if we inspect now we can see
that our dish is a PropType dish.

72
00:03:51.639 --> 00:03:52.767
And that's all there is to it.

