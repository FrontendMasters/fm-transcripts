WEBVTT

1
00:00:00.093 --> 00:00:02.118
Let's dive into our app.

2
00:00:02.118 --> 00:00:05.142
One of the questions that might be
coming up is you might be thinking,

3
00:00:05.142 --> 00:00:08.291
well, okay, in View 3, there are two
ways of authoring components.

4
00:00:08.291 --> 00:00:10.713
There's the options API and
the composition API,

5
00:00:10.713 --> 00:00:12.126
which we'll be using today.

6
00:00:12.126 --> 00:00:16.394
I will be showing you both because both
are still valid ways of writing components

7
00:00:16.394 --> 00:00:16.905
in View.

8
00:00:16.905 --> 00:00:20.420
But we will definitely be spending more
time in composition API for I'll explain

9
00:00:20.420 --> 00:00:23.740
later why, but this way people get a
flavor of like how it feels to be in both.

10
00:00:23.740 --> 00:00:27.171
And that way,
you don't feel like you have to do one or

11
00:00:27.171 --> 00:00:30.618
the other when it comes to
building your own project.

12
00:00:30.618 --> 00:00:34.089
So let's start with a scenario that
we're all pretty familiar with when it

13
00:00:34.089 --> 00:00:34.815
comes to view.

14
00:00:34.815 --> 00:00:38.687
Let's go ahead and
take a look at the nav bar component.

15
00:00:38.687 --> 00:00:43.250
Okay, so this nav bar component,
let's contextualize what's going on here.

16
00:00:43.250 --> 00:00:44.680
So let me go ahead and open up here.

17
00:00:44.680 --> 00:00:47.641
The nav bar is this piece up top.

18
00:00:47.641 --> 00:00:49.294
And so typically, in a nav bar,

19
00:00:49.294 --> 00:00:52.676
we might have like say a tagline
as a product that we'd pass down.

20
00:00:52.676 --> 00:00:55.248
So if you look at app.view here,
we have the navbar, and

21
00:00:55.248 --> 00:00:57.135
we wanna define what it might be, right?

22
00:00:57.135 --> 00:01:02.596
So typically, I might be like, okay, well,

23
00:01:02.596 --> 00:01:08.771
my tagline here is track
everything you want to eat.

24
00:01:08.771 --> 00:01:09.373
This is great.

25
00:01:09.373 --> 00:01:11.958
And so if we switch back over to the site,

26
00:01:11.958 --> 00:01:17.149
you'll see it appears up here in the upper
left, everything seems pretty good.

27
00:01:17.149 --> 00:01:19.503
But for anyone who's worked with code for
a while,

28
00:01:19.503 --> 00:01:23.227
you'll notice that one of the problems
here with the way we've defined the props

29
00:01:23.227 --> 00:01:26.256
is that it doesn't tell you very
much besides what it's called.

30
00:01:26.256 --> 00:01:30.627
And so what we wanna do even prior to
TypeScript is we'd want actually define

31
00:01:30.627 --> 00:01:32.688
more information about the props.

32
00:01:32.688 --> 00:01:36.443
So the way we would do this typically,
in standard view, is you say, okay,

33
00:01:36.443 --> 00:01:38.985
we'll make prompts an object
instead of an array.

34
00:01:38.985 --> 00:01:41.868
And then the tagline here we can
actually define what type it is, so

35
00:01:41.868 --> 00:01:44.917
we might be like it's a string, for
example, this is what we expect.

36
00:01:44.917 --> 00:01:45.865
And so typically,

37
00:01:45.865 --> 00:01:50.191
you'll even dive a little bit further by
actually having it say, okay, type string,

38
00:01:50.191 --> 00:01:54.299
and then you can have it to have either
default property or the required property.

39
00:01:54.299 --> 00:01:57.928
So, in this case, we'll go ahead and
just do that real quick.

40
00:01:57.928 --> 00:01:59.868
So this is feeling a lot better, right?

41
00:01:59.868 --> 00:02:01.441
This is what most of us are familiar with.

42
00:02:01.441 --> 00:02:06.410
And if we wanted to do more, and so this
was nice because what we would get to do

43
00:02:06.410 --> 00:02:09.981
is we'd say, okay,
now we can do things like, okay,

44
00:02:09.981 --> 00:02:13.959
in our data property, we can say,
okay, we have a tagline.

45
00:02:13.959 --> 00:02:16.761
And this is,
let's just say test string for now.

46
00:02:16.761 --> 00:02:22.271
And we can now make this a reactive
property and this is great.

47
00:02:22.271 --> 00:02:24.391
And so
we can see here everything still works.

48
00:02:24.391 --> 00:02:27.976
But the problem was what happened
when someone passed the wrong thing?

49
00:02:27.976 --> 00:02:32.194
And so this is where it was nice because
in the case someone passed like 123, for

50
00:02:32.194 --> 00:02:35.800
example, and this is a number,
what we find is that inside of our app,

51
00:02:35.800 --> 00:02:40.082
when we actually open it up, you'll see
that there's an invalid prop type check,

52
00:02:40.082 --> 00:02:42.801
which is nice,
because something is yelling at us.

53
00:02:42.801 --> 00:02:45.534
On the other hand,
if you don't have your console open, and

54
00:02:45.534 --> 00:02:48.643
you're not paying attention for
this, if you look back in our code,

55
00:02:48.643 --> 00:02:51.668
there's really nothing to indicate
that anything else is wrong.

56
00:02:51.668 --> 00:02:53.968
And so this is a limitation
on prop type checking.

57
00:02:53.968 --> 00:02:57.400
But if we really think about it, though,
this is actually the kind of mental model

58
00:02:57.400 --> 00:02:59.515
that TypeScript is really
built around anyways.

59
00:02:59.515 --> 00:03:03.045
Which is around documenting what you
intend to do, and then helping you to just

60
00:03:03.045 --> 00:03:05.891
sort of prevent yourself from
making mistakes in that regard.

61
00:03:05.891 --> 00:03:09.703
So in this case, in the event, we really
want it to be TypeScript to a string or

62
00:03:09.703 --> 00:03:13.241
a number, we could just say, okay,
well, it's a string or a number.

63
00:03:13.241 --> 00:03:17.543
This was a default in text that's
built right out of the box for

64
00:03:17.543 --> 00:03:19.714
view, which was really nice.

65
00:03:19.714 --> 00:03:23.322
And so, here's another limitation that
you probably have run into when it

66
00:03:23.322 --> 00:03:25.912
comes to the prop type checking
that we have with you.

67
00:03:25.912 --> 00:03:30.934
So let's go and take a look at
restaurant card, for example.

68
00:03:30.934 --> 00:03:34.822
I don't know about you, how many people
have done this before where you have

69
00:03:34.822 --> 00:03:38.919
a object that you're passing down to
a component, and the type is just object.

70
00:03:38.919 --> 00:03:41.931
Now that's nice from at least
knowing what the primitive is, but

71
00:03:41.931 --> 00:03:44.795
then otherwise you have no idea
what's inside of that shape.

72
00:03:44.795 --> 00:03:47.690
And then oftentimes you find
yourself switching between files,

73
00:03:47.690 --> 00:03:50.963
you might miss some things, it'd be
nice if this was a little bit better.

74
00:03:50.963 --> 00:03:53.941
So first thing first here, we have
this restaurant and let's see, again,

75
00:03:53.941 --> 00:03:55.301
how will we typically debug this?

76
00:03:55.301 --> 00:03:58.020
We'll say, okay, well, the restaurant
is being, where's that being passed?

77
00:03:58.020 --> 00:03:58.744
Well, let's take a look.

78
00:03:58.744 --> 00:04:02.607
So if I go inside of here, and
I look for restaurant card,

79
00:04:02.607 --> 00:04:07.290
restaurant card, okay,
it's being imported on restaurant page.

80
00:04:07.290 --> 00:04:11.643
All right, restaurant page here is,
let's see, let's scroll all the way down.

81
00:04:11.643 --> 00:04:14.956
And you're like, okay,
here's where it's being called, and

82
00:04:14.956 --> 00:04:18.401
it's being passed by the item,
the item is passed by filter lists.

83
00:04:18.401 --> 00:04:22.379
So if I then go ahead and hold Option
click on this, it'll jump me up to where

84
00:04:22.379 --> 00:04:26.823
filter restaurant list is and then is here
are the restaurants, then I can jump up.

85
00:04:26.823 --> 00:04:28.962
And, okay,
here's the shape of my data, right?

86
00:04:28.962 --> 00:04:33.328
This is kind of how the process is, this
is actually pretty normal for us to debug.

87
00:04:33.328 --> 00:04:34.674
But this is a lot of work,

88
00:04:34.674 --> 00:04:38.213
especially when code bases can
get infinitely more complex now.

89
00:04:38.213 --> 00:04:41.498
Because some of you might have been like,
well, I would have guessed it was that,

90
00:04:41.498 --> 00:04:43.930
but we all know, right,
code does not always organize as well.

91
00:04:43.930 --> 00:04:46.064
So that's usually how you might debug it.

92
00:04:46.064 --> 00:04:47.110
So we might be like, okay,

93
00:04:47.110 --> 00:04:49.391
okay, so we know this is the thing,
so let's copy it over.

94
00:04:49.391 --> 00:04:52.662
Let's go into restaurantCard, and let's
at least documented somewhere, right?

95
00:04:52.662 --> 00:04:56.196
So we might be like, let's let's create
a comment block and just be like,

96
00:04:56.196 --> 00:04:58.061
okay, Restaurant, so what do we got?

97
00:04:58.061 --> 00:05:02.522
We got id, so the id is typically
a string, and then we have,

98
00:05:02.522 --> 00:05:04.980
in fact, these are all strings.

99
00:05:04.980 --> 00:05:08.298
So at the bare minimum,
let's document the shapes.

100
00:05:08.298 --> 00:05:10.340
Let me just multi cursor select.

101
00:05:10.340 --> 00:05:15.227
So for those who haven't done this before,
I'm just holding down Command

102
00:05:15.227 --> 00:05:18.728
while clicking,
I think it might be Ctrl on Windows.

103
00:05:18.728 --> 00:05:24.487
And so this is the general shape
that we have for our restaurant.

104
00:05:24.487 --> 00:05:28.202
And so once we have this, normally you
would throw this in like a JS doc block,

105
00:05:28.202 --> 00:05:31.245
and then you would hopefully VS
code would pick some of that up.

106
00:05:31.245 --> 00:05:32.031
And that would be nice.

107
00:05:32.031 --> 00:05:35.209
But we're here to learn about
TypeScript and how that looks, right?

108
00:05:35.209 --> 00:05:38.559
So now that we have the shade, let me just
go ahead and actually comment this, so

109
00:05:38.559 --> 00:05:39.909
it doesn't report any errors.

110
00:05:39.909 --> 00:05:43.257
And let's go ahead and actually make
sure that we tell you that we wanna use

111
00:05:43.257 --> 00:05:45.204
TypeScript for this specific component.

112
00:05:45.204 --> 00:05:48.724
And so the way we do this is we come
up here inside the script block, and

113
00:05:48.724 --> 00:05:50.071
we declare its language.

114
00:05:50.071 --> 00:05:53.024
And the language equals TS,
which stands for TypeScript.

115
00:05:53.024 --> 00:05:54.578
That's it.

116
00:05:54.578 --> 00:05:58.095
Once you've done that,
you basically use the TypeScript compiler.

117
00:05:58.095 --> 00:06:02.485
And then the next thing we need to do
though, is that we need to actually tell

118
00:06:02.485 --> 00:06:06.055
TypeScript what kind of object
we're about to pass into it.

119
00:06:06.055 --> 00:06:08.444
Because what you'll notice
here is that inside of View,

120
00:06:08.444 --> 00:06:11.628
one of the things that sets it apart from
other frameworks is that it does this

121
00:06:11.628 --> 00:06:12.948
export default object thing.

122
00:06:12.948 --> 00:06:17.341
And that has sometimes mixed results
especially when it comes to types, so

123
00:06:17.341 --> 00:06:21.606
what we have is this helper function
called defineComponent from View.

124
00:06:21.606 --> 00:06:25.436
So when you import this, it basically
tells TypeScript what to expect and

125
00:06:25.436 --> 00:06:29.575
kind of roughly what to guess when it's
making a bunch of assumptions about your

126
00:06:29.575 --> 00:06:30.284
component.

127
00:06:30.284 --> 00:06:35.078
And so then instead of just
exporting a default generic object,

128
00:06:35.078 --> 00:06:40.599
now we're gonna say, we're gonna
wrap it in define components, oops.

129
00:06:40.599 --> 00:06:42.330
And then, we wrap that on the bottom.

130
00:06:44.950 --> 00:06:48.976
And then, That's it.

131
00:06:48.976 --> 00:06:51.335
So far so good.

132
00:06:51.335 --> 00:06:53.519
Of course, now the question is, okay,

133
00:06:53.519 --> 00:06:57.453
how do we tell it that we want it to
actually become this restaurant type?

134
00:06:57.453 --> 00:06:58.332
And so, for now,

135
00:06:58.332 --> 00:07:01.811
what we're gonna do is we're gonna
learn about how to declare types.

136
00:07:01.811 --> 00:07:04.109
And so we actually can do it
directly inside this component,

137
00:07:04.109 --> 00:07:05.379
we're not gonna get crazy here.

138
00:07:05.379 --> 00:07:07.872
We're gonna create a custom
type called restaurant.

139
00:07:07.872 --> 00:07:10.842
And so this keyword here,
if you've never used TypeScript before,

140
00:07:10.842 --> 00:07:14.286
is specific to TypeScript basically,
is a const let, what are you declaring?

141
00:07:14.286 --> 00:07:18.147
Declaring a type,
we're declaring a type of restaurant and

142
00:07:18.147 --> 00:07:22.400
the shape of this object is gonna
be this thing that I just created.

143
00:07:22.400 --> 00:07:26.659
I'm gonna cut and paste this over here and
show it like this.

144
00:07:28.590 --> 00:07:32.425
And so what you'll notice here is that
there's a couple of syntactical things

145
00:07:32.425 --> 00:07:36.199
that might look a little bit odd,
like there's no commas, or anything, but

146
00:07:36.199 --> 00:07:37.726
this is just how it is defined.

147
00:07:37.726 --> 00:07:39.842
And for those who have a little
bit of TypeScript knowledge,

148
00:07:39.842 --> 00:07:42.391
you might be wondering, well,
what about interfaces and yada, yada?

149
00:07:42.391 --> 00:07:45.189
For the purposes of keeping
things approachable and simple,

150
00:07:45.189 --> 00:07:46.872
we're sticking with types for now.

151
00:07:46.872 --> 00:07:50.845
It's one of the things where as you need
interfacing and that kind of stuff, we'll

152
00:07:50.845 --> 00:07:54.847
reach out for it, but for now, we're just
gonna keep it simple with types, okay?

153
00:07:54.847 --> 00:07:59.243
Now that we have this, you're probably
thinking, okay, I know what I'm gonna do,

154
00:07:59.243 --> 00:08:02.297
I'm gonna come in here, and
I'm gonna say a restaurant and

155
00:08:02.297 --> 00:08:03.973
everything's gonna be fixed.

156
00:08:03.973 --> 00:08:08.168
Except wait a second,
what's going on here?

157
00:08:08.168 --> 00:08:14.773
It says that it's only referring to a
type, but it's being used as a value here.

158
00:08:14.773 --> 00:08:17.496
And so this is where it's
a little bit weird, right,

159
00:08:17.496 --> 00:08:20.350
because this is not what you
would typically expect it.

160
00:08:20.350 --> 00:08:24.947
But what we have here, and this is where
you're gonna need to learn a new thing

161
00:08:24.947 --> 00:08:27.706
when you're using Options API,
is that one of

162
00:08:27.706 --> 00:08:31.986
the things we have to do when using
type with it is using this as keyword.

163
00:08:31.986 --> 00:08:33.697
And this is known as typecasting,

164
00:08:33.697 --> 00:08:37.478
where we're basically telling TypeScript
explicitly what is going to be.

165
00:08:37.478 --> 00:08:39.860
And because we're using options API,

166
00:08:39.860 --> 00:08:44.190
again this is some of the hacks around
that makes it a little bit trickier

167
00:08:44.190 --> 00:08:48.687
compared to composition API is that
we need something called a prop type.

168
00:08:48.687 --> 00:08:55.436
So what I'm gonna do is import
a type called PropType from vue.

169
00:08:55.436 --> 00:08:58.993
And so this is one of those things
that we need, once again to

170
00:08:58.993 --> 00:09:03.915
help type of understand the convention
that Option API provides for developers.

171
00:09:03.915 --> 00:09:08.398
And so what we do is we say well we
need the object to be a prop type, and

172
00:09:08.398 --> 00:09:12.889
then we have this new convention in
TypeScript which is the brackets

173
00:09:12.889 --> 00:09:15.044
greater than less than symbol.

174
00:09:15.044 --> 00:09:17.969
And if you think of them like parentheses,
like you're passing in an argument,

175
00:09:17.969 --> 00:09:18.793
think of it like that.

176
00:09:18.793 --> 00:09:23.672
Like you're saying, I have a prop tight
that's going to be a type restaurant,

177
00:09:23.672 --> 00:09:28.621
but because this is TypeScript, it wants
to be explicit, then it is important that,

178
00:09:28.621 --> 00:09:32.434
not even important it has to be
the greater and less than symbols.

179
00:09:32.434 --> 00:09:36.204
And just like that now you'll see
that if we hover over a restaurant,

180
00:09:36.204 --> 00:09:39.264
it'll actually let you know
as a prop type restaurant.

181
00:09:39.264 --> 00:09:40.277
And now going forward,

182
00:09:40.277 --> 00:09:43.724
you can actually learn more about the
thing that you're working with before sort

183
00:09:43.724 --> 00:09:46.780
of like having to jump around different
files, and this is super nice.

