WEBVTT

1
00:00:00.380 --> 00:00:04.090
So now that we have this,
we have this other thing called emits.

2
00:00:04.090 --> 00:00:07.080
And so to kind of basically
provide a quick overview for

3
00:00:07.080 --> 00:00:09.426
those who might not
have used it in View 3.

4
00:00:09.426 --> 00:00:13.252
If you remember inside of your code,
whenever you wanted to emit an event

5
00:00:13.252 --> 00:00:16.420
within Vue,
you would actually use dollar sign emit.

6
00:00:16.420 --> 00:00:19.841
So let's say this click handler
right here, you say emit and

7
00:00:19.841 --> 00:00:21.260
then some sort of event.

8
00:00:21.260 --> 00:00:23.001
So this would be test-event.

9
00:00:23.001 --> 00:00:23.624
And so where am I?

10
00:00:23.624 --> 00:00:25.328
I'm on the restaurant card.

11
00:00:25.328 --> 00:00:30.818
So, if we go over to our app,
and go to our restaurant, yep,

12
00:00:30.818 --> 00:00:36.232
we'll see here, wait,
something, okay, we're good.

13
00:00:36.232 --> 00:00:41.550
So if we go inside of the Vue dev tools,
and let me pull this up a little bit.

14
00:00:42.920 --> 00:00:46.348
Wait, restaurant card, yes, okay,
yah, yah, I'm in the right place.

15
00:00:46.348 --> 00:00:48.510
And then let's go to the timeline.

16
00:00:48.510 --> 00:00:53.348
You'll see that when I click Delete,
it's actually showing me here that,

17
00:00:53.348 --> 00:00:56.991
[SOUND] here it is,
here's the custom event, here we go.

18
00:00:56.991 --> 00:01:00.216
It's fired off this
event called test-event.

19
00:01:00.216 --> 00:01:03.248
And so this is actually, for
those who haven't used it before,

20
00:01:03.248 --> 00:01:06.352
this follows basically basic
JavaScript conventions, right?

21
00:01:06.352 --> 00:01:08.879
Because you have an event that's
triggered somewhere, it bubbles up and

22
00:01:08.879 --> 00:01:10.154
then you wanna do something with it.

23
00:01:10.154 --> 00:01:14.578
So that's how currently we're
working with our cards right now,

24
00:01:14.578 --> 00:01:19.476
is that it's emitting an event,
like delete restaurant, for example,

25
00:01:19.476 --> 00:01:23.189
and then the parent who has
the data will then go ahead and

26
00:01:23.189 --> 00:01:25.879
perform the necessary tasks to do that.

27
00:01:25.879 --> 00:01:28.667
So, the thing is, especially in Vue 2,

28
00:01:28.667 --> 00:01:32.610
this was actually all
that you basically did.

29
00:01:32.610 --> 00:01:36.458
And what happened was, components got
a little bit complex because you had this

30
00:01:36.458 --> 00:01:38.077
emitting events here and there.

31
00:01:38.077 --> 00:01:39.432
It was kind of hard to track.

32
00:01:39.432 --> 00:01:43.787
And so in Vue 3, we introduced an option
similar to props where you can define

33
00:01:43.787 --> 00:01:46.741
the kinds of events that
the component is emitting.

34
00:01:46.741 --> 00:01:50.989
And so typically, what we saw
before is that it's just defined as

35
00:01:50.989 --> 00:01:54.166
an array with the list of
the names of the events.

36
00:01:54.166 --> 00:01:57.833
But with the compiler macro and
TypeScript,

37
00:01:57.833 --> 00:02:00.446
I do think it gets a lot cleaner.

38
00:02:00.446 --> 00:02:04.946
So we have here is we can say,
defineEmits, and

39
00:02:04.946 --> 00:02:11.374
then inside of defineEmits,
it can take an array, just like this.

40
00:02:11.374 --> 00:02:14.592
Or rather than having
just an array like this,

41
00:02:14.592 --> 00:02:19.058
I'm gonna comment this out so
that we have this for comparison.

42
00:02:19.058 --> 00:02:21.207
We're actually gonna give
our events a type, and

43
00:02:21.207 --> 00:02:23.774
this is actually super helpful
particularly with events.

44
00:02:23.774 --> 00:02:27.272
Because what we end up getting
is the ability to say, okay, so

45
00:02:27.272 --> 00:02:31.398
we have an event that comes in, and
we can say it's just a generic event.

46
00:02:31.398 --> 00:02:33.540
But you could also be specific.

47
00:02:33.540 --> 00:02:37.838
You could be like, this is a keyboard
event, and that keyboard event,

48
00:02:37.838 --> 00:02:41.544
we'll do more of event handlers later,
but this is pretty nice.

49
00:02:41.544 --> 00:02:45.674
So for now we know that this event is
gonna be called delete-restaurant,

50
00:02:45.674 --> 00:02:47.283
just to double check, yep.

51
00:02:47.283 --> 00:02:51.088
So you have your e here, you pass in the
name of the event that's gonna happen, and

52
00:02:51.088 --> 00:02:54.859
then after that, you're gonna pass in
whatever payload that it's expecting.

53
00:02:54.859 --> 00:02:57.528
And then whether or not it's supposed to
return anything, and it typically not,

54
00:02:57.528 --> 00:02:58.780
so it's void.

55
00:02:58.780 --> 00:03:02.060
So in that particular case,
we have e here.

56
00:03:02.060 --> 00:03:06.626
We know that it's gonna have a payload and
the payload is going to be,

57
00:03:06.626 --> 00:03:08.773
[SOUND] it should be restaurant.

58
00:03:08.773 --> 00:03:13.678
So we'll type that just like this.

59
00:03:13.678 --> 00:03:14.757
Okay, there we go.

60
00:03:14.757 --> 00:03:19.212
So what's nice about this now is that
when we wanna actually use this,

61
00:03:19.212 --> 00:03:23.580
right, cuz before all you could
do is define the name of it.

62
00:03:23.580 --> 00:03:28.750
So now when we call the emits,
something pretty cool happens.

63
00:03:28.750 --> 00:03:32.056
When we emit the thing,
if I hit Command+Space and hit Up,

64
00:03:32.056 --> 00:03:36.689
you'll actually notice that it actually
lists the event names that we've defined

65
00:03:36.689 --> 00:03:38.560
in the auto complete.

66
00:03:38.560 --> 00:03:41.378
So even though it's a string and not
a constant, it actually knows that, hey,

67
00:03:41.378 --> 00:03:43.310
I actually should look for this string.

68
00:03:43.310 --> 00:03:48.202
So not only can I do that, then I can
even say, okay, well, if I did 123,

69
00:03:48.202 --> 00:03:50.954
for example, it'll say hey, by the way,

70
00:03:50.954 --> 00:03:54.337
this particular event is looking for
a restaurant.

71
00:03:54.337 --> 00:03:57.429
And this is pretty big because as we know,
events can be really clunky to manage in

72
00:03:57.429 --> 00:03:59.703
JavaScript, especially cuz
there's different types and

73
00:03:59.703 --> 00:04:01.854
we expect it to do different
things at different times.

74
00:04:01.854 --> 00:04:03.564
So being able to type your events and

75
00:04:03.564 --> 00:04:07.780
be very specific about what kind of
thing we're expecting, that's huge.

76
00:04:07.780 --> 00:04:13.855
So now all we gotta do then is
basically we want the props.restaurant,

77
00:04:13.855 --> 00:04:15.282
and that's it.

78
00:04:15.282 --> 00:04:19.935
And so with all that autocomplete, you get
that because you're typing your events,

79
00:04:19.935 --> 00:04:23.437
which, again, is something in
my opinion you want to be doing.

80
00:04:23.437 --> 00:04:27.102
Because when you don't do something
like this, emits get really,

81
00:04:27.102 --> 00:04:30.912
really tricky to track and much less
trying to figure out what they do.

82
00:04:30.912 --> 00:04:33.832
And it almost seems like every time
you have to debug an event that's

83
00:04:33.832 --> 00:04:34.549
being emitted,

84
00:04:34.549 --> 00:04:38.480
you have to start over from figuring out
the stack trace of why it's a certain way.

85
00:04:38.480 --> 00:04:43.146
Whereas here we're being so
explicit that a delete-restaurant

86
00:04:43.146 --> 00:04:47.909
event will take a payload that is
of type restaurant, that's it.

87
00:04:47.909 --> 00:04:51.725
And I think that does wonders for

88
00:04:51.725 --> 00:04:57.244
us when it comes to
actually scaling our code.

89
00:04:57.244 --> 00:05:00.508
So, now that we've come
to the end of that,

90
00:05:00.508 --> 00:05:05.376
does anyone have any questions
about what we just covered, yes?

91
00:05:05.376 --> 00:05:10.718
&gt;&gt; Why don't we have to import
define emits and define props?

92
00:05:10.718 --> 00:05:12.205
&gt;&gt; That is a great question.

93
00:05:12.205 --> 00:05:15.987
So one of the things that, I feel like
the Java community kinda goes back and

94
00:05:15.987 --> 00:05:20.130
forth a little bit on this with, is that,
they try to strip away any global imports

95
00:05:20.130 --> 00:05:24.421
that you might need just to, I guess, make
it one less thing that you have to import.

96
00:05:24.421 --> 00:05:27.164
And because Vue knows for
a fact that you're in script setup,

97
00:05:27.164 --> 00:05:30.118
these are the kind of the compiler
macros that I was talking about,

98
00:05:30.118 --> 00:05:32.313
where there are optimizations
done in advance.

99
00:05:32.313 --> 00:05:37.168
However, there really is nothing
stopping you from saying defineProps,

100
00:05:37.168 --> 00:05:41.946
defineEmits, because I can totally
see the value in being explicit, and

101
00:05:41.946 --> 00:05:43.810
it's not gonna yell at you.

102
00:05:43.810 --> 00:05:46.662
But on the other hand, if you're one of
those people that wants to shift away as

103
00:05:46.662 --> 00:05:48.493
much as humanly possible,
that is there for you.

104
00:05:48.493 --> 00:05:52.830
But I will go and leave this here for
record keeping sake, and

105
00:05:52.830 --> 00:05:56.244
then actually I'll just
fuse these together.

106
00:05:57.390 --> 00:05:58.268
There we go.

