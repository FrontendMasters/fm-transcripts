WEBVTT

1
00:00:00.070 --> 00:00:03.450
For this exercise as we've just shown,
we've gone ahead and

2
00:00:03.450 --> 00:00:07.320
set up a restaurantStatusList
as the single source of truth.

3
00:00:07.320 --> 00:00:11.068
So we can see here with the type, right,
we have the input type, StatusList.

4
00:00:11.068 --> 00:00:14.446
And here we're using that funky
little syntax where we have typeof

5
00:00:14.446 --> 00:00:16.508
restaurantStatusList and the number.

6
00:00:16.508 --> 00:00:20.344
And so for this particular exercise, what
I want you to do is basically mirror what

7
00:00:20.344 --> 00:00:23.457
we did with dietList, where we can
maintain that as a single source

8
00:00:23.457 --> 00:00:26.924
of truth rather than having that
duplicated across types and constants.

9
00:00:32.596 --> 00:00:37.905
All right, hopefully, that was pretty
straightforward minus the awkward syntax.

10
00:00:37.905 --> 00:00:40.630
But let's go ahead and
do that together, shall we?

11
00:00:40.630 --> 00:00:44.020
So let me check out the branch for
06-finish.

12
00:00:44.020 --> 00:00:47.064
So the first thing we're going to
do is we're gonna go ahead and

13
00:00:47.064 --> 00:00:49.435
make sure that this is
typecast as a const.

14
00:00:49.435 --> 00:00:52.890
Because otherwise, basically,
TypeScript cannot read those values.

15
00:00:52.890 --> 00:00:55.770
And so
what I didn't get to capture on the last,

16
00:00:55.770 --> 00:01:00.594
right before we did one of the exercises
is that, VS Code was actually yelling at

17
00:01:00.594 --> 00:01:05.700
me because when I imported restaurantList,
I did not tell it was a type.

18
00:01:05.700 --> 00:01:06.920
So, some of you might have seen that.

19
00:01:06.920 --> 00:01:10.470
So once you add that type here,
that should resolve the issues at hand.

20
00:01:10.470 --> 00:01:15.026
But this is one of the reasons why we
actually need to do this as a const bit,

21
00:01:15.026 --> 00:01:19.011
because otherwise without it,
it's just an array of strings.

22
00:01:19.011 --> 00:01:22.894
So this is what allows us to read
it the way it is, but anyhow, okay.

23
00:01:22.894 --> 00:01:27.682
So we have that, and
then we have our dietList.

24
00:01:27.682 --> 00:01:30.970
And then once we say that,
and we'll come in here.

25
00:01:30.970 --> 00:01:36.077
And once again, it's type of dietList,
and then it's accessing the array how,

26
00:01:36.077 --> 00:01:39.640
via numbers because an array
is indexed via numbers.

27
00:01:39.640 --> 00:01:42.222
So that's how you can try to remember it.

28
00:01:42.222 --> 00:01:45.863
But yes, hopefully the TypeScript API
comes out with an easier way for

29
00:01:45.863 --> 00:01:47.352
us to do this going forward.

