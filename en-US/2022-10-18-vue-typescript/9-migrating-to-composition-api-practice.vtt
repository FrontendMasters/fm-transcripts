WEBVTT

1
00:00:00.140 --> 00:00:05.170
So, your exercise is to go to the disc
page and try to do what we just did.

2
00:00:05.170 --> 00:00:09.838
Which is essentially migrate everything
that you see inside of the options, so

3
00:00:09.838 --> 00:00:14.995
that means data, computed, methods, and
mounted, and practice moving that all over

4
00:00:14.995 --> 00:00:22.466
into composition API Okay,
first things first,

5
00:00:22.466 --> 00:00:26.460
we're gonna go ahead and what we need for
the composition API is a setup method.

6
00:00:26.460 --> 00:00:29.760
That is a life cycle hook that
will hold everything in here.

7
00:00:29.760 --> 00:00:33.760
So let's go ahead and just,
I'm gonna copy all this over so

8
00:00:33.760 --> 00:00:38.160
let's migrate data first, so
inside of here paste that over, so

9
00:00:38.160 --> 00:00:43.510
we have a const, oops, that was a typo
constants are text and this is a ref.

10
00:00:43.510 --> 00:00:46.815
So again,
I'm gonna import that automatically.

11
00:00:46.815 --> 00:00:49.857
So, if you'll notice that in the
autocomplete if your VS code is hopefully

12
00:00:49.857 --> 00:00:52.803
working the way I hope it does,
you'll notice that ref should show up and

13
00:00:52.803 --> 00:00:55.010
if you select a package I'll
show that one more time.

14
00:00:55.010 --> 00:00:58.777
If you just select the top one,
it's just gonna do some random thing.

15
00:00:58.777 --> 00:01:03.003
But you'll notice that ref here it'll
actually say that it's from the,

16
00:01:03.003 --> 00:01:07.774
you see that little package thing from
view, that's how you know it's from view,

17
00:01:07.774 --> 00:01:11.270
that's why it's really important hang on,
let me go back.

18
00:01:11.270 --> 00:01:14.112
I do on my show that get that screengrab.

19
00:01:14.112 --> 00:01:17.414
So again if I go ref, you'll see that on
the right hand side there's that it tells

20
00:01:17.414 --> 00:01:20.785
you where it's coming from and that's how
you know you want to import it from you.

21
00:01:20.785 --> 00:01:24.139
So that's how I'm doing that, so when I
hit that it'll automatically augment my

22
00:01:24.139 --> 00:01:27.870
import up here, so just know that's
all the magic that's happening.

23
00:01:27.870 --> 00:01:29.000
All right, ref of string.

24
00:01:29.000 --> 00:01:33.710
We're good at cons dishlist is
going to be a ref of dish array.

25
00:01:34.800 --> 00:01:37.320
And then we just need to
pass that in as an argument.

26
00:01:37.320 --> 00:01:40.140
So wrap that in parentheses,
and we're golden.

27
00:01:41.940 --> 00:01:44.809
The why is this data looks better.

28
00:01:44.809 --> 00:01:48.329
And then const showNewForm is a ref.

29
00:01:48.329 --> 00:01:51.113
That is a Boolean, but we're gonna
let that automatically in first.

30
00:01:51.113 --> 00:01:53.855
So as you'll see that we don't
need to define this here.

31
00:01:53.855 --> 00:01:55.029
We don't need to be like Boolean.

32
00:01:55.029 --> 00:01:59.852
And we don't need to be like string
because it's being assumed that

33
00:01:59.852 --> 00:02:02.063
that will be the case for both.

34
00:02:02.063 --> 00:02:03.396
All right, then let's go ahead and

35
00:02:03.396 --> 00:02:06.160
just start our return object because
we wanna actually expose all these.

36
00:02:06.160 --> 00:02:12.130
So filterText showNew Form and
dishlist, great.

37
00:02:13.580 --> 00:02:17.300
Now we can delete this data,
data shape up here at the top.

38
00:02:20.170 --> 00:02:24.520
All right, let's keep the journey going,
we have two things that are computed.

39
00:02:24.520 --> 00:02:25.880
So we're gonna jump in here.

40
00:02:27.040 --> 00:02:30.840
Once again, this is a constant filter
dish and what kind of variable is it?

41
00:02:30.840 --> 00:02:31.965
It is a computed variable.

42
00:02:31.965 --> 00:02:33.867
So once again,
you'll see the view right here, hit that.

43
00:02:33.867 --> 00:02:37.819
And you'll see that imports here
computed right at the top and

44
00:02:37.819 --> 00:02:41.780
even alphabetically organizes it,
which is great, right?

45
00:02:41.780 --> 00:02:43.700
So bump, bump, thumb, there we go.

46
00:02:43.700 --> 00:02:46.475
We'll, deal with that this is in a second.

47
00:02:46.475 --> 00:02:50.245
So then here = computed.

48
00:02:50.245 --> 00:02:53.550
And then we just need to turn
this into an arrow function.

49
00:02:53.550 --> 00:02:57.190
And actually small aside, that's
actually one of the nice things about

50
00:02:57.190 --> 00:02:59.578
the composition API is
that arrow functions and

51
00:02:59.578 --> 00:03:02.220
options API would break
this reference sometimes.

52
00:03:02.220 --> 00:03:05.546
So you actually couldn't use arrow
function within options API when

53
00:03:05.546 --> 00:03:06.910
defining things.

54
00:03:06.910 --> 00:03:09.430
So it's a nice thing to get
back to you if you enjoy that

55
00:03:09.430 --> 00:03:11.590
kind of shorter syntax list.

56
00:03:11.590 --> 00:03:14.680
All right, so now we just need to grab
anything that has this because we know

57
00:03:14.680 --> 00:03:16.660
that we're using refs for
all of it basically.

58
00:03:17.700 --> 00:03:19.604
And then we just need to delete it and

59
00:03:19.604 --> 00:03:24.210
then replace it with .value because
we need to unpackage our references.

60
00:03:24.210 --> 00:03:24.720
So there we go.

61
00:03:24.720 --> 00:03:30.100
That's good to go now and so
now we can say filteredDishList.

62
00:03:30.100 --> 00:03:32.229
And then we have our number of dishes.

63
00:03:33.510 --> 00:03:37.521
Great, finally we're almost there,

64
00:03:37.521 --> 00:03:42.623
we're just gonna actually
let us grab all this and

65
00:03:42.623 --> 00:03:46.997
just move it on endless
grab the methods and

66
00:03:46.997 --> 00:03:51.810
then 123 const = jump ahead at the arrows.

67
00:03:51.810 --> 00:03:55.680
This is great, wait,
I messed up too far there.

68
00:03:55.680 --> 00:03:57.470
Yeah, jump here.

69
00:03:57.470 --> 00:04:02.708
Then we go one, two, three =,
then jump to the end than that and

70
00:04:02.708 --> 00:04:07.655
then we're good to go for
the most part just have these commas

71
00:04:07.655 --> 00:04:13.320
to deal with for all this stuff
we can just do this too much.

72
00:04:13.320 --> 00:04:14.360
One, two, three, four.

73
00:04:14.360 --> 00:04:15.600
I'm using command d for me.

74
00:04:15.600 --> 00:04:20.112
This is how you select multiple
things on your cursor and

75
00:04:20.112 --> 00:04:23.600
then from there 1, 2, 3, 4 .value.

76
00:04:23.600 --> 00:04:28.786
Save let's good addDish deleteDish.

77
00:04:28.786 --> 00:04:33.193
And hide form for
the sake of being alphabetical and

78
00:04:33.193 --> 00:04:37.650
finally, we have our own mounted here.

79
00:04:37.650 --> 00:04:40.311
And so we have on touch on mounted and

80
00:04:40.311 --> 00:04:45.940
you can see here it's now autocompleting
with view so I can hit Enter.

81
00:04:45.940 --> 00:04:48.470
And once again it will automatically
import that directly from view.

82
00:04:50.110 --> 00:04:53.362
And then we just need to pass it in the
callback function that will run every time

83
00:04:53.362 --> 00:04:55.100
it hits that lifecycle hook.

84
00:04:55.100 --> 00:04:56.930
But we don't have this so what do we need?

85
00:04:56.930 --> 00:05:00.788
We need use route and we'll import
that from use router and boom,

86
00:05:00.788 --> 00:05:05.699
again the auto complete is one of the best
things about script to be totally honest,

87
00:05:05.699 --> 00:05:08.490
even if you're not annotating everything.

88
00:05:08.490 --> 00:05:12.662
Cause that's one of the benefits of using
TypeScript is that, anyone who's like

89
00:05:12.662 --> 00:05:16.409
the library authors who went through
the effort of documenting all that,

90
00:05:16.409 --> 00:05:17.810
you just get that for free.

91
00:05:17.810 --> 00:05:20.021
And so that's another, to be honest,

92
00:05:20.021 --> 00:05:24.309
another reason why I like to recommend
just starting out using Type script,

93
00:05:24.309 --> 00:05:27.900
even if you're not actually
applying it everywhere.

94
00:05:27.900 --> 00:05:31.210
Okay, on mounted, that's good.

95
00:05:31.210 --> 00:05:33.020
And I think that's everything.

96
00:05:33.020 --> 00:05:36.297
So, I had you all do that exercise for
a reason is that,

97
00:05:36.297 --> 00:05:40.716
some of you probably were thinking,
even as I was typing, you're like,

98
00:05:40.716 --> 00:05:45.242
wow, that's a lot of boiler plate,
particularly [LAUGH] this thing down.

99
00:05:45.242 --> 00:05:48.182
What I'm happy to tell you is that,
there is a better way of doing this,

100
00:05:48.182 --> 00:05:50.387
which again,
I wanted to show you just a full pass, so

101
00:05:50.387 --> 00:05:52.017
you know where all this is coming from.

102
00:05:52.017 --> 00:05:55.305
We'll be showing you sort of the more
common way you'll see composition API use

103
00:05:55.305 --> 00:05:58.789
going forward, and then from there we'll
continue building on our knowledge, for

104
00:05:58.789 --> 00:05:59.983
using view and typescript.

