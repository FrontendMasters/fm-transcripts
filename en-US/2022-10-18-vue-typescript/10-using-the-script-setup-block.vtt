WEBVTT

1
00:00:00.000 --> 00:00:03.428
We were talking about options API and
the bridge over the composition API.

2
00:00:03.428 --> 00:00:06.242
And then, we went ahead and basically
showed you what it was like to only use

3
00:00:06.242 --> 00:00:09.112
composition API, where we've moved
everything into the setup function.

4
00:00:09.112 --> 00:00:13.933
But I did promise you that all that
boilerplate, we were writing while there

5
00:00:13.933 --> 00:00:19.053
is a, the grass is greener on the other
side, and it truly is, because something

6
00:00:19.053 --> 00:00:24.126
that came out recently with Vue 3.2 and
above is the concept of script setup.

7
00:00:24.126 --> 00:00:25.887
And so before we dive into code,

8
00:00:25.887 --> 00:00:29.803
I'm gonna do some slides just to give
you just like a basic overview, so

9
00:00:29.803 --> 00:00:33.349
that helps you, hopefully explain
things a little bit better.

10
00:00:33.349 --> 00:00:34.952
So here we have a view component.

11
00:00:34.952 --> 00:00:37.114
As you can see here, we have our script.

12
00:00:37.114 --> 00:00:38.450
And then, as we can see here,

13
00:00:38.450 --> 00:00:42.152
we're using the options API to actually
set everything up with composition API.

14
00:00:42.152 --> 00:00:43.969
So there's your setup lifecycle hook.

15
00:00:43.969 --> 00:00:47.899
We can see that this is a standard
counter app with a count of ref(0).

16
00:00:47.899 --> 00:00:52.221
We have a computed property, for example,
we have a method to increment the count.

17
00:00:52.221 --> 00:00:54.348
And we've returned
everything in the object,

18
00:00:54.348 --> 00:00:56.914
fairly standard from
the composition API perspective.

19
00:00:56.914 --> 00:01:00.316
Well, one of the things we realized,
though, is that this is still a lot of

20
00:01:00.316 --> 00:01:04.099
boilerplate, considering that a lot of
people are opting into competition API for

21
00:01:04.099 --> 00:01:05.898
certain components in a pure fashion.

22
00:01:05.898 --> 00:01:09.068
So how might we make this better?

23
00:01:09.068 --> 00:01:10.319
Well, first thing first.

24
00:01:10.319 --> 00:01:13.503
We went ahead, and we're going to say
we're gonna assume the entire script block

25
00:01:13.503 --> 00:01:14.905
is gonna be a set of lifecycle hook.

26
00:01:14.905 --> 00:01:17.835
So that's why you see we move
the server setup attribute moved all

27
00:01:17.835 --> 00:01:19.387
the way up into that script block.

28
00:01:19.387 --> 00:01:24.146
So now script has an attribute of
setup which tells the compiler, hey,

29
00:01:24.146 --> 00:01:27.495
we are now in pure setup
lifecycle hook function.

30
00:01:27.495 --> 00:01:28.348
And so what does that mean?

31
00:01:28.348 --> 00:01:32.010
That means we can get rid of an export
default object because we're gonna do some

32
00:01:32.010 --> 00:01:35.894
compiler optimizations that we can assume
based on the fact that we're only working

33
00:01:35.894 --> 00:01:36.732
in script setup.

34
00:01:36.732 --> 00:01:41.233
Then on top of that because we can now
do some basically view can do some magic

35
00:01:41.233 --> 00:01:45.305
as far as detecting what's being
used in the template and what not,

36
00:01:45.305 --> 00:01:48.607
we can actually get rid of
the return object entirely.

37
00:01:48.607 --> 00:01:50.456
And so at the end of the day,

38
00:01:50.456 --> 00:01:55.456
this code works exactly the same as
everything else that you saw earlier.

39
00:01:56.786 --> 00:02:01.675
Okay, so let's go ahead and
see that in action, shall we?

40
00:02:01.675 --> 00:02:06.262
So what we're gonna do is we're going to
take the restaurant page that we've been

41
00:02:06.262 --> 00:02:10.460
working with, and we're gonna trim it
down into the script setup format.

42
00:02:10.460 --> 00:02:12.969
So first thing first,
we're gonna add the setup attribute here.

43
00:02:12.969 --> 00:02:16.604
And what you notice that immediately is
that basically it starts to say, hey,

44
00:02:16.604 --> 00:02:19.925
a lot of these things you're talking
about, they're not being used.

45
00:02:19.925 --> 00:02:23.053
So for example,
we can get rid of this defineComponent.

46
00:02:23.053 --> 00:02:24.494
So that can just get deleted.

47
00:02:24.494 --> 00:02:29.311
So let me go ahead on the bottom,
cuz now the whole thing is a script setup,

48
00:02:29.311 --> 00:02:31.980
we don't have the options API anymore.

49
00:02:31.980 --> 00:02:36.334
So this helper method goes away and then
because the components are automatically

50
00:02:36.334 --> 00:02:40.576
being registered on import, we don't
need to manually register them either.

51
00:02:40.576 --> 00:02:45.083
So those are going bye, bye, and
then here we don't need to set up here.

52
00:02:45.083 --> 00:02:46.234
Why?
Because well,

53
00:02:46.234 --> 00:02:50.120
we already have the setup attribute being
defined up here in the script block.

54
00:02:50.120 --> 00:02:53.275
Then, if I scroll all the way down,
there's the other one.

55
00:02:53.275 --> 00:03:01.072
And then, finally, we can delete all
this return stuff, and then that's it.

56
00:03:01.072 --> 00:03:02.782
Do you not have your script set a block?

57
00:03:02.782 --> 00:03:06.506
And everything still leverages view
of the way you want it to, but

58
00:03:06.506 --> 00:03:09.758
it's basically more of that
vanilla JavaScript land and

59
00:03:09.758 --> 00:03:12.886
then sprinkling helper
methods where it makes sense.

60
00:03:12.886 --> 00:03:15.538
And so now that I've done that and
showing you how that works,

61
00:03:15.538 --> 00:03:17.534
we're gonna have you
have a quick try at that.

62
00:03:17.534 --> 00:03:20.451
So given that this is mainly just
kinda like a refactoring exercise,

63
00:03:20.451 --> 00:03:23.786
we're just gonna give it five minutes
just for people to practice doing this.

64
00:03:23.786 --> 00:03:26.954
And so, let me go ahead and
actually set this up real quick.

65
00:03:26.954 --> 00:03:30.122
Okay, so, now if you check
out the four exercise branch,

66
00:03:30.122 --> 00:03:31.616
that will let you go ahead.

67
00:03:31.616 --> 00:03:35.033
And, like we said, on your dishes page,
you're gonna do the same exact thing,

68
00:03:35.033 --> 00:03:37.499
where we're gonna strip away,
all the boilerplate, and

69
00:03:37.499 --> 00:03:39.281
get you down into that script setup blog.

70
00:03:44.479 --> 00:03:48.071
So hopefully that was mostly an effort
in shipping data components.

71
00:03:48.071 --> 00:03:50.501
So we're just gonna do
this real quick together.

72
00:03:50.501 --> 00:03:53.528
So, once again, first thing do we
wanna use the script setup block,

73
00:03:53.528 --> 00:03:54.688
add the setup attribute.

74
00:03:54.688 --> 00:03:57.465
Then we can go ahead and
delete this export line,

75
00:03:57.465 --> 00:03:59.506
we can delete the components line.

76
00:03:59.506 --> 00:04:03.400
We don't need setup anymore,
I'll deal with that in a little bit.

77
00:04:03.400 --> 00:04:07.579
We don't need any of this return block,
we don't need any of this at the bottom.

78
00:04:07.579 --> 00:04:09.073
I think we save.

79
00:04:09.073 --> 00:04:13.419
We're mostly there,
just need to eliminate this and that's it.

80
00:04:13.419 --> 00:04:17.439
Now you have your script setup block,
and it looks great.

81
00:04:17.439 --> 00:04:18.648
And so going forward for

82
00:04:18.648 --> 00:04:22.771
the rest of this workshop we're gonna base
to use the script set up block syntax.

83
00:04:22.771 --> 00:04:25.000
And so now you've seen that journey,
and so

84
00:04:25.000 --> 00:04:27.902
hopefully everyone can follow
along from this point on.

