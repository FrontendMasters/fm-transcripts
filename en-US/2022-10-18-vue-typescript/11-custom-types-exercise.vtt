WEBVTT

1
00:00:00.250 --> 00:00:01.676
So now that we've talked about all this,

2
00:00:01.676 --> 00:00:03.650
let's take a look at the code
that we've been building.

3
00:00:03.650 --> 00:00:07.133
So if we go ahead and
look at our types right now.

4
00:00:07.133 --> 00:00:09.749
You might notice that both the dish and

5
00:00:09.749 --> 00:00:14.420
the restaurant type share
this property called status.

6
00:00:14.420 --> 00:00:17.150
And more importantly,
status is just a string.

7
00:00:17.150 --> 00:00:20.218
When a lot of us know that when it comes
to letting users choose something,

8
00:00:20.218 --> 00:00:23.810
it's best to have some sort of
options that they consistently use.

9
00:00:23.810 --> 00:00:27.004
So if we go ahead and take a look
back at our restaurants page, and

10
00:00:27.004 --> 00:00:27.980
take a look at it.

11
00:00:27.980 --> 00:00:31.862
So we can see here that okay status
is we have want to try, recommended,

12
00:00:31.862 --> 00:00:33.297
do not recommend, okay.

13
00:00:33.297 --> 00:00:36.746
And then dishes page similarly
there's want to try, recommended,

14
00:00:36.746 --> 00:00:38.460
do not recommend, okay?

15
00:00:38.460 --> 00:00:41.970
So now this is where we're seeing
a use case for having shared types.

16
00:00:41.970 --> 00:00:45.471
And more importantly we want something
that's a little bit more specific than

17
00:00:45.471 --> 00:00:47.930
just generic string type that we have.

18
00:00:47.930 --> 00:00:51.025
So we're gonna learn now is learn
how to define those things.

19
00:00:51.025 --> 00:00:55.487
So the way we're gonna do this is,
I'm just gonna call it a type of status.

20
00:00:55.487 --> 00:00:59.423
So we're just gonna call it, and what
we're gonna learn about here is the union

21
00:00:59.423 --> 00:01:02.717
operator which basically allows
you to define specific values for

22
00:01:02.717 --> 00:01:06.161
the type rather than just a generic
like data primitive or whatever.

23
00:01:06.161 --> 00:01:09.631
So in this case we had,
I think it was Want to Try,

24
00:01:09.631 --> 00:01:14.900
I think it was Recommend, and then I
think it was Do Not Recommend, okay.

25
00:01:16.100 --> 00:01:19.907
And so then what we can do here is rather
than just putting like the generic string,

26
00:01:19.907 --> 00:01:22.569
we can actually say,
This is gonna be a type Status.

27
00:01:24.120 --> 00:01:27.354
And what that allows you to do now is that
when you hover over this you can see that

28
00:01:27.354 --> 00:01:29.510
it actually tells you
the exact ones that it allows.

29
00:01:31.070 --> 00:01:35.610
Now, we go back over now to our page,
you'll notice something kind of funny.

30
00:01:35.610 --> 00:01:37.690
Status is yelling at us.

31
00:01:37.690 --> 00:01:43.148
And the reason for this is because it's
saying, hey, I don't recognize this value.

32
00:01:43.148 --> 00:01:45.155
In other words when it says
something's overloaded usually

33
00:01:45.155 --> 00:01:46.227
doesn't recognize the value.

34
00:01:46.227 --> 00:01:48.200
And it's saying what is recommended?

35
00:01:48.200 --> 00:01:52.559
And so I'm like, well, I thought I defined
it as recommended, but let's go ahead and

36
00:01:52.559 --> 00:01:53.590
check the logbook.

37
00:01:53.590 --> 00:01:56.169
Nope, we didn't, we call it Recommend.

38
00:01:56.169 --> 00:01:59.255
And so it's little things like this
that can make a huge difference for

39
00:01:59.255 --> 00:02:03.022
helping to start putting really some shape
to your application when it comes to like,

40
00:02:03.022 --> 00:02:05.849
okay this is the information
architecture we're looking for,

41
00:02:05.849 --> 00:02:08.033
these are the options we
want to limit people to.

42
00:02:08.033 --> 00:02:11.550
And so in this case I think Recommended
is better than Recommend because that was

43
00:02:11.550 --> 00:02:12.293
a typo on my end.

44
00:02:12.293 --> 00:02:16.641
And so now if I save it you'll see that
that just automatically transposes over.

45
00:02:16.641 --> 00:02:19.917
And same deal now on the dishes
page if I go ahead and

46
00:02:19.917 --> 00:02:24.290
I'm like I think dishes should
also get like Delicious status.

47
00:02:26.980 --> 00:02:28.825
That's fine, that I did that but
then wait a second,

48
00:02:28.825 --> 00:02:31.250
maybe it's not because it's
not actually matching, right?

49
00:02:31.250 --> 00:02:35.080
At this point we want them to
share just a little bit easier.

50
00:02:35.080 --> 00:02:38.836
And so you see something as simple
as creating that custom type and

51
00:02:38.836 --> 00:02:43.069
then dropping it between the two we
see already there's a ton of benefit,

52
00:02:43.069 --> 00:02:48.180
especially when these types are reused
multiple times throughout your codebase.

53
00:02:48.180 --> 00:02:52.532
Now you're getting those alerts that like,
hey, this property you're adding doesn't

54
00:02:52.532 --> 00:02:55.810
exist or has the wrong types now,
and we can get even more specific.

55
00:02:56.920 --> 00:03:00.870
Okay, so
we've now created our own custom type.

56
00:03:00.870 --> 00:03:04.167
And so I want you all to practice
creating your own custom type.

57
00:03:04.167 --> 00:03:08.251
And what we're gonna be doing
is I want you to create a diet.

58
00:03:08.251 --> 00:03:09.810
So actually, I forgot.

59
00:03:09.810 --> 00:03:13.203
I have this constants file here to
give some guidance as far as what this

60
00:03:13.203 --> 00:03:14.160
might be.

61
00:03:14.160 --> 00:03:18.370
So basically when it comes to eating food,
dietary restrictions are a thing.

62
00:03:18.370 --> 00:03:20.330
So I just created four
options to keep it simple.

63
00:03:20.330 --> 00:03:24.081
There's Vegetarian, Pescatarian, Keto and
then there's blank, cuz some of them just,

64
00:03:24.081 --> 00:03:26.820
it's like everything
that it doesn't matter.

65
00:03:26.820 --> 00:03:29.400
And so I'd like you to
create your own custom type.

66
00:03:29.400 --> 00:03:31.695
Don't worry about referring
to the const dietlist,

67
00:03:31.695 --> 00:03:34.911
just reference the values cuz we'll be
taking care of that in the next one.

