WEBVTT

1
00:00:00.000 --> 00:00:03.096
&gt;&gt; Steve Kinney: One thing I'm going to do
real quick is I'm going to get this under

2
00:00:03.096 --> 00:00:03.612
control.

3
00:00:03.612 --> 00:00:08.608
Because for instance, if I wanted to
update a web server with this information,

4
00:00:08.608 --> 00:00:13.541
the rate that it's coming in right now
is slightly problematic [LAUGH], right?

5
00:00:13.541 --> 00:00:18.763
I'm running the risk of de-dossing my own
server, which I'm not interested in doing.

6
00:00:18.763 --> 00:00:23.180
So we'll just do a little bit
of clean up to this code.

7
00:00:23.180 --> 00:00:25.280
Also, it was really
hard to read that data.

8
00:00:25.280 --> 00:00:28.160
It was coming in pretty fast.

9
00:00:28.160 --> 00:00:31.580
But there are ways that we
can handle that, right?

10
00:00:31.580 --> 00:00:32.810
We are JavaScript developers.

11
00:00:32.810 --> 00:00:35.190
We have tools that will make this work.

12
00:00:35.190 --> 00:00:38.530
So one of the things I'm gonna
do is I'm gonna take this and

13
00:00:38.530 --> 00:00:40.240
I'm gonna pull out into its own function.

14
00:00:41.740 --> 00:00:48.160
And I'll just call it const handleChange
because I write a lot of react and I don't

15
00:00:48.160 --> 00:00:52.374
know how to name functions other than
on change and handle change these days.

16
00:00:52.374 --> 00:00:58.980
So I'll call it handle change and I'm
going to pull in some helper libraries.

17
00:00:58.980 --> 00:01:03.299
I'll say const throttle
= loddash/throttle and

18
00:01:03.299 --> 00:01:07.519
so what throttle does,
is it basically makes it so

19
00:01:07.519 --> 00:01:11.940
that a function that's
called repeatedly will only

20
00:01:11.940 --> 00:01:16.970
actually be executed every
some numbers of milliseconds.

21
00:01:16.970 --> 00:01:20.149
So you can basically use it, it will take
a function and make it so it's a function

22
00:01:20.149 --> 00:01:23.880
that's called every 500 milliseconds,
1,000 milliseconds, whatever you choose.

23
00:01:23.880 --> 00:01:27.020
So it's a way to stop
that fireose of data.

24
00:01:27.020 --> 00:01:27.730
We don't need it.

25
00:01:27.730 --> 00:01:29.936
We want relatively up to date data.

26
00:01:29.936 --> 00:01:34.639
But if I get data every half second,
that's probably good enough.

27
00:01:34.639 --> 00:01:36.866
I don't know if I need it rapidly.

28
00:01:36.866 --> 00:01:40.925
The other thing and
I actually learned about this library from

29
00:01:40.925 --> 00:01:45.842
the Johnny-5 Experimenter's Guide,
it's quite fun, is our Barcli,

30
00:01:45.842 --> 00:01:49.750
which is a library for
just bar charts in the terminal.

31
00:01:49.750 --> 00:01:51.280
So we'll actually pull that in.

32
00:01:51.280 --> 00:01:55.420
Because ideally, my hope is that you start
playing around with the other sensors

33
00:01:55.420 --> 00:01:59.510
in there later and you want to see this
data more than a stream of console logs.

34
00:01:59.510 --> 00:02:03.010
It would be cool to actually see it in
a little bit more of a useful way, so

35
00:02:03.010 --> 00:02:04.880
I will show you that as well.

36
00:02:04.880 --> 00:02:09.518
And you're gonna notice
the fun play on words here.

37
00:02:09.518 --> 00:02:11.173
Cuz it's for a CLI.

38
00:02:11.173 --> 00:02:12.277
Do you get it?

39
00:02:12.277 --> 00:02:14.817
It's cute, right?
&gt;&gt; Speaker 2: [LAUGH]

40
00:02:14.817 --> 00:02:16.066
&gt;&gt; Steve Kinney: You're like,

41
00:02:16.066 --> 00:02:17.799
I'm not impressed.

42
00:02:17.799 --> 00:02:22.842
The other thing is just calling
throttle a string is not going to do

43
00:02:22.842 --> 00:02:27.831
the trick.
&gt;&gt; Steve Kinney: Go ahead and

44
00:02:27.831 --> 00:02:30.536
use it yet but
that would have been embarrassing.

45
00:02:30.536 --> 00:02:36.226
So then we'll also require Barcli.

46
00:02:36.226 --> 00:02:41.267
I don't like calling command
linen interfaces or CLIs, clis.

47
00:02:41.267 --> 00:02:43.372
That's a thing that I do not like.

48
00:02:43.372 --> 00:02:46.790
But I understand that is
a thing that people do.

49
00:02:46.790 --> 00:02:49.020
So, all right, cool.

50
00:02:49.020 --> 00:02:53.428
So, the first thing we're do is let's
throttle this handle change function.

51
00:02:53.428 --> 00:02:56.499
And so with lodash's throttle,
this is fairly easy to

52
00:02:56.499 --> 00:03:02.848
do.
&gt;&gt; Steve Kinney: We'll just

53
00:03:02.848 --> 00:03:08.601
pass the function to the throttle function
and how often do we want to update?

54
00:03:08.601 --> 00:03:09.609
500 milliseconds?

55
00:03:09.609 --> 00:03:10.258
1,000?

56
00:03:10.258 --> 00:03:14.241
470 milliseconds?
&gt;&gt; Speaker 2: 470

57
00:03:14.241 --> 00:03:16.760
&gt;&gt; Steve Kinney: 470, all right, into it.

58
00:03:16.760 --> 00:03:20.960
So we will only call this method
every 470 milliseconds, all right?

59
00:03:23.500 --> 00:03:24.460
Cool.

60
00:03:24.460 --> 00:03:29.387
And so now, instead of console logging,
we're gonna actually

61
00:03:29.387 --> 00:03:33.830
create some graphs in Barcli.
&gt;&gt; Steve Kinney: So

62
00:03:33.830 --> 00:03:38.893
we'll make a const graphs.
&gt;&gt; Steve Kinney: Cool.

63
00:03:38.893 --> 00:03:43.740
And we'll take temperature.
&gt;&gt; Steve Kinney: Which will be a new

64
00:03:43.740 --> 00:03:48.160
Barcli.
&gt;&gt; Steve Kinney: The logo is

65
00:03:48.160 --> 00:03:49.748
worth looking up at a break, too.

66
00:03:49.748 --> 00:03:55.541
It's a very cute dog.
&gt;&gt; Steve Kinney: We'll give it

67
00:03:55.541 --> 00:04:02.718
the label of temperature.
&gt;&gt; Steve Kinney: And

68
00:04:02.718 --> 00:04:04.700
we'll give it a range for the bar chart.

69
00:04:06.710 --> 00:04:08.100
We're indoors.

70
00:04:08.100 --> 00:04:11.580
It could get cold in here.

71
00:04:12.740 --> 00:04:15.490
We'll say somewhere between 0 and

72
00:04:15.490 --> 00:04:17.690
120 because if it gets over 120
degrees in here, I'm leaving.

73
00:04:20.070 --> 00:04:22.328
So then we'll make the next
one not semicolon,

74
00:04:22.328 --> 00:04:26.570
definitely comma.
&gt;&gt; Steve Kinney: All right, cool.

75
00:04:26.570 --> 00:04:32.100
Make the next one pressure.
&gt;&gt; Steve Kinney: We'll

76
00:04:32.100 --> 00:04:34.560
change it to pressure.

77
00:04:34.560 --> 00:04:37.180
And we'll go between one in a hundred.

78
00:04:39.880 --> 00:04:42.002
The relative humidity being
that it's a percentage,

79
00:04:42.002 --> 00:04:43.623
it's very easy to come up with our range.

80
00:04:53.878 --> 00:04:56.014
&gt;&gt; Steve Kinney: It should
be between 1 and 100.

81
00:04:56.014 --> 00:04:57.637
So this will be created,
basically three bars.

82
00:04:57.637 --> 00:05:02.890
We're going to have to update those bars
whenever we're handling a change event.

83
00:05:02.890 --> 00:05:04.859
Instead of constant logging,
we'll just update these graphs.

84
00:05:04.859 --> 00:05:09.594
Cool.

85
00:05:09.594 --> 00:05:13.687
So instead of console log now,

86
00:05:13.687 --> 00:05:18.096
what I'm going to do is I'm going

87
00:05:18.096 --> 00:05:22.978
to say graph.temperature.update

88
00:05:22.978 --> 00:05:27.550
method with the new temperature.

89
00:05:35.406 --> 00:05:36.281
&gt;&gt; Steve Kinney: We'll do the same for
pressure.

90
00:05:36.281 --> 00:05:41.419
Do the same for relative humidity.

91
00:05:41.419 --> 00:05:46.990
All right, so now, there's two major
changes to this code right now.

92
00:05:46.990 --> 00:05:50.576
The first major change [LAUGH] is
that we're only gonna do it every 470

93
00:05:50.576 --> 00:05:52.010
milliseconds.

94
00:05:52.010 --> 00:05:57.060
And the second major change is that
instead of just a stream of console logs,

95
00:05:57.060 --> 00:05:59.370
we'll get some pretty bars
that go across the terminal.

96
00:05:59.370 --> 00:06:02.540
And they're like, it's just gonna
update those bars in place, so

97
00:06:02.540 --> 00:06:05.760
we'll actually be able to kind of like
see and monitor a little more easily.

98
00:06:05.760 --> 00:06:08.175
What I'll do real quick is
I'm gonna make a new branch

99
00:06:12.997 --> 00:06:13.572
&gt;&gt; Steve Kinney: I don't know,

100
00:06:13.572 --> 00:06:14.754
I'm trying it this way again.

101
00:06:14.754 --> 00:06:16.580
I'm actually gonna do it
from the command line.

102
00:06:16.580 --> 00:06:18.966
&gt;&gt; Speaker 2: Does your graph match graph,

103
00:06:18.966 --> 00:06:25.370
needed the?
&gt;&gt; Steve Kinney: Good catch, good catch.

104
00:06:25.370 --> 00:06:28.939
I called it plural in one case,
the singular in the other.

105
00:06:30.130 --> 00:06:31.466
Good catch before I do get a push too.

106
00:06:43.466 --> 00:06:44.276
&gt;&gt; Steve Kinney: With Barcli.

107
00:06:44.276 --> 00:06:50.638
Cool, so push that up and
let's start the deploy process and

108
00:06:50.638 --> 00:06:57.643
I'll put the code back on the screen
in case you're looking at it.

109
00:06:57.643 --> 00:07:01.340
So I'll do t2 run playground.

110
00:07:02.800 --> 00:07:03.602
And as that goes,

111
00:07:03.602 --> 00:07:09.304
I'll put this back on the screen.
&gt;&gt; Speaker 3: You

112
00:07:09.304 --> 00:07:10.298
don't put handle change?
&gt;&gt; Steve Kinney: Yeah,

113
00:07:10.298 --> 00:07:12.471
line 21 is just monitor.on('change'),

114
00:07:12.471 --> 00:07:14.072
you don't do anything.
&gt;&gt; Speaker 3: Yep

115
00:07:17.111 --> 00:07:17.965
&gt;&gt; Steve Kinney: Fixed.

116
00:07:17.965 --> 00:07:21.620
[LAUGH] I was wrong.

117
00:07:21.620 --> 00:07:25.020
This wasn't some magical
secret JavaScript engine move.

118
00:07:25.020 --> 00:07:27.779
It was simply, I made a boo-boo.

119
00:07:27.779 --> 00:07:32.294
[LAUGH] I think that was around the time
we realized that I had also misspelled

120
00:07:32.294 --> 00:07:34.381
graphs and I got very distracted.

121
00:07:34.381 --> 00:07:36.279
Cool.

122
00:07:36.279 --> 00:07:38.881
Let's not treat ourselves for
pushing that up as well.

123
00:07:38.881 --> 00:07:42.468
Oops, we have a problem.

124
00:07:42.468 --> 00:07:46.586
Cool, so I figured out what the problem
was with the help of the audience.

125
00:07:46.586 --> 00:07:51.947
I had done the monitor on change
handleChange before I actually defined

126
00:07:51.947 --> 00:07:57.840
the handleChange function, so
at that point, it was in fact, undefined.

127
00:07:57.840 --> 00:08:03.410
That const got changed to var in the
minifier and so with variable hoisting,

128
00:08:03.410 --> 00:08:08.640
it was undefined, mostly because for
all the web socket, hardware,

129
00:08:08.640 --> 00:08:12.730
fanciness that we're doing, I forgot
to put my variables in the right order.

130
00:08:12.730 --> 00:08:19.510
So, easy fix luckily, which is simply
define your functions before you use them.

131
00:08:19.510 --> 00:08:20.140
It's a good idea.

132
00:08:20.140 --> 00:08:26.900
And so we're gonna flip over now and
we can see my very pretty graphs.

133
00:08:26.900 --> 00:08:32.920
And just to validate, I am going to again,
do the tried and true and very scientific

134
00:08:32.920 --> 00:08:39.248
method of putting my finger on the sensor.
&gt;&gt; Steve Kinney: And

135
00:08:39.248 --> 00:08:43.856
we can see the temperature rise.
&gt;&gt; Steve Kinney: Cuz it is not 85 degrees

136
00:08:43.856 --> 00:08:44.364
in here.

