WEBVTT

1
00:00:03.895 --> 00:00:07.679
&gt;&gt; Steve Kinney: All right, so at this
point, we have everything set up, so

2
00:00:07.679 --> 00:00:12.310
let's actually open up the repo,
the Steve Kinney Nodebots Workshop.

3
00:00:12.310 --> 00:00:15.220
And I have a few files
kind of ready to go.

4
00:00:15.220 --> 00:00:17.501
The first one we'll play
with is Tessel intro.

5
00:00:17.501 --> 00:00:21.310
And it's actually taken from
the Tessel Project itself.

6
00:00:21.310 --> 00:00:24.850
And it shows what it looks like to
work with the Tessel directly without

7
00:00:24.850 --> 00:00:25.695
Johnny-Five.

8
00:00:25.695 --> 00:00:29.010
And we'll look at Johnny-Five and all
the really cool things it offers us later.

9
00:00:29.010 --> 00:00:34.080
But this is a very simple example that we
can see just using straight Tessel code.

10
00:00:34.080 --> 00:00:36.220
So we wanna deploy it to our device.

11
00:00:36.220 --> 00:00:41.190
There's two options, we can actually
send the code to our device that means

12
00:00:41.190 --> 00:00:44.480
that anytime it has power,
it will run that code.

13
00:00:44.480 --> 00:00:48.114
Or we can just run it as we're
developing which will basically,

14
00:00:48.114 --> 00:00:52.900
as long as we keep the terminal process
open on our computer, it'll run a device.

15
00:00:52.900 --> 00:00:56.380
And when we hit Ctrl + C,
it will stop running on the device which,

16
00:00:56.380 --> 00:00:58.030
is what we're gonna use for most people.

17
00:00:58.030 --> 00:01:02.140
When your masterpiece is done and
you're ready to install it somewhere and

18
00:01:02.140 --> 00:01:05.450
do a thing, that would be when you
actually deploy the code to your device.

19
00:01:05.450 --> 00:01:08.410
So I'm gonna go over to my terminal again.

20
00:01:08.410 --> 00:01:09.480
Just clear it real quick.

21
00:01:09.480 --> 00:01:12.210
I'm just gonna type in t2.

22
00:01:12.210 --> 00:01:16.210
And so you can kind of see some of
the different commands that are available.

23
00:01:16.210 --> 00:01:19.850
And so run will actually run it
from our computer onto the device.

24
00:01:19.850 --> 00:01:22.080
So it will deploy onto the device but
we'll still be connected.

25
00:01:22.080 --> 00:01:24.870
We'll see all of the different
results in our terminal.

26
00:01:24.870 --> 00:01:32.150
And as soon as we kill the process, it
will stop running on the device, as well.

27
00:01:32.150 --> 00:01:36.420
But, if we can actually push
it to the device, as well.

28
00:01:36.420 --> 00:01:39.320
And there are a bunch of other fun
stuff like erasing the Tessel,

29
00:01:39.320 --> 00:01:40.140
listing all the Tessels.

30
00:01:40.140 --> 00:01:43.130
We've played with some
of these previously.

31
00:01:43.130 --> 00:01:47.370
Cool, so what we're gonna do is
we're gonna run that initial file.

32
00:01:47.370 --> 00:01:52.878
So I'm just gonna do a t2 run and
then my directory is just 00.

33
00:01:52.878 --> 00:01:57.587
So t2 run 00-tessel-intro.

34
00:01:57.587 --> 00:01:59.810
I'll let that go and
we'll just actually see what happens here.

35
00:01:59.810 --> 00:02:00.920
So it's gonna look for my tessel.

36
00:02:02.240 --> 00:02:04.290
Hopefully it finds the right one.

37
00:02:04.290 --> 00:02:08.260
Cool, mine is connected to RobotComputer
because I exported that variable.

38
00:02:08.260 --> 00:02:09.840
If you're watching this later or

39
00:02:09.840 --> 00:02:12.450
working at home, probably it's
already defaulting to the correct one.

40
00:02:12.450 --> 00:02:13.663
But for those of us in the room,

41
00:02:13.663 --> 00:02:17.450
we need to make sure that we're not
deploying to other people's Tessels.

42
00:02:17.450 --> 00:02:20.000
Likely won't work because of
the provisioning with the public and

43
00:02:20.000 --> 00:02:20.710
the private keys.

44
00:02:20.710 --> 00:02:26.767
Your code won't start running on somebody
else's device, it will just not work.

45
00:02:26.767 --> 00:02:29.847
Cool, and so
it's writing to the RAM on RobotComputer.

46
00:02:29.847 --> 00:02:31.916
It's gonna run that code.

47
00:02:31.916 --> 00:02:35.891
Cool, so at this point, we can see
the two LEDs blinking on the device,

48
00:02:35.891 --> 00:02:40.553
which means we have successfully run our
first few lines of JavaScript on a Tessel.

49
00:02:40.553 --> 00:02:43.273
Good job, everyone.

50
00:02:43.273 --> 00:02:46.517
And with that, I can now kill the process,
and we should see the LEDs.

51
00:02:46.517 --> 00:02:51.499
They're going to stop blinking depending
on what tenth of second you hit

52
00:02:51.499 --> 00:02:55.590
CTRL + C they will either remain on or
they will now be off.

53
00:02:55.590 --> 00:02:59.260
So if you see them stay on that's
just simply a 50/50 chance.

54
00:02:59.260 --> 00:03:04.409
The one thing I would like you to do is,
we go to the code.

55
00:03:06.682 --> 00:03:08.004
&gt;&gt; Steve Kinney: We can take one of these.

56
00:03:13.439 --> 00:03:16.990
&gt;&gt; Steve Kinney: And there's a bunch
of methods that we could use.

57
00:03:16.990 --> 00:03:20.690
Toggle will basically change
the state from on to off.

58
00:03:20.690 --> 00:03:22.090
There's two other methods.

59
00:03:22.090 --> 00:03:28.030
One of them is dot on which
will turn the LED on.

60
00:03:28.030 --> 00:03:32.550
The other one is dot off,
which will turn the LED off.

61
00:03:32.550 --> 00:03:36.660
What I would like you to do is pick one,
either two or three, whichever one makes

62
00:03:36.660 --> 00:03:42.660
you happiest, and go ahead and start it in
the on position and take the other one.

63
00:03:43.990 --> 00:03:45.464
They should default to off, but.

64
00:03:48.591 --> 00:03:50.400
&gt;&gt; Steve Kinney: And
put it to the off position.

65
00:03:50.400 --> 00:03:52.300
So now they'll start.

66
00:03:52.300 --> 00:03:54.360
One of them will be on and
one of them will be off.

67
00:03:54.360 --> 00:03:57.710
And then we're going to run and
deploy this code again.

68
00:03:59.760 --> 00:04:02.460
So you won't see it on this device yet
on the screen.

69
00:04:02.460 --> 00:04:03.320
There it goes.

70
00:04:03.320 --> 00:04:04.670
It was still deploying
the code from my computer.

71
00:04:04.670 --> 00:04:09.251
But now you can see I'm alternating
between the two LEDs on the device.

72
00:04:09.251 --> 00:04:14.315
So we started one in the on position and
one in the off position, and

73
00:04:14.315 --> 00:04:19.389
now as we toggle them,
they are kinda alternating back and forth.

