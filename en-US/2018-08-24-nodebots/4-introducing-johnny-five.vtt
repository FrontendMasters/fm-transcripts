WEBVTT

1
00:00:00.350 --> 00:00:04.666
&gt;&gt; Steve Kinney: The next thing, so
we used the built-in Tessel library, but

2
00:00:04.666 --> 00:00:09.490
as I said earlier, we're using
the Johnny-Five inventor's kit.

3
00:00:09.490 --> 00:00:10.991
So what is Johnny-Five?

4
00:00:10.991 --> 00:00:14.124
Johnny-Five is a really cool project that

5
00:00:14.124 --> 00:00:19.007
is effectively an abstraction over
a number of different boards.

6
00:00:19.007 --> 00:00:23.429
So you can write Johnny-Five code,
different boards have different ports and

7
00:00:23.429 --> 00:00:24.885
stuff along those lines.

8
00:00:24.885 --> 00:00:28.073
It basically allows you to
work with an Arduino, or

9
00:00:28.073 --> 00:00:32.759
a Tessel, or a Raspberry Pi, or
any different device that you might have.

10
00:00:32.759 --> 00:00:34.094
As we work today,

11
00:00:34.094 --> 00:00:39.480
some of the specifics will be
the different pins that we're using.

12
00:00:39.480 --> 00:00:42.085
But theoretically,
if you had a different device at

13
00:00:42.085 --> 00:00:45.340
home.and you just wanted to
match it to different pins,

14
00:00:45.340 --> 00:00:48.280
you could run the same code cuz
an abstraction over all of that.

15
00:00:48.280 --> 00:00:52.560
There's also a lot of really
useful helper methods.

16
00:00:52.560 --> 00:00:56.914
There we were like we had Tessel.led,
which because we were using array indices,

17
00:00:56.914 --> 00:00:59.728
we could see that was an array,
or find the right one.

18
00:00:59.728 --> 00:01:04.683
Johnny-Five just gives us a whole bunch of
really useful helper methods that make it

19
00:01:04.683 --> 00:01:07.983
really easy to do really cool
things with our hardware.

20
00:01:07.983 --> 00:01:12.191
And because it's nice and agnostic to
the actual device that we're using,

21
00:01:12.191 --> 00:01:13.960
it makes it easy to port.

22
00:01:13.960 --> 00:01:16.420
Again, you might have to change some pins,
but

23
00:01:16.420 --> 00:01:21.320
generally speaking, you can take code and

24
00:01:21.320 --> 00:01:24.330
run it on different devices cuz it
handles all of that under the hood.

25
00:01:24.330 --> 00:01:28.130
A nice way to think about it is, you think
about like JQuery, which used to take all

26
00:01:28.130 --> 00:01:32.670
the different browser Inconsistencies or
differences and abstract over them.

27
00:01:32.670 --> 00:01:36.710
So you could write JQuery code and it will
run in Internet Explorer or Firefox or

28
00:01:36.710 --> 00:01:40.220
whatever, and it's a very similar concept.

29
00:01:40.220 --> 00:01:45.276
It's got, like I said before,
a lot of really, really great helpers.

30
00:01:45.276 --> 00:01:46.030
We're gonna do an access,

31
00:01:46.030 --> 00:01:50.610
we're actually going to start
plugging stuff into those GPIO ports.

32
00:01:50.610 --> 00:01:56.470
And the very first thing we're going
to do is take one of our own LEDs and

33
00:01:56.470 --> 00:01:59.864
actually plug it in and make it
blink instead of the built-in ones.

