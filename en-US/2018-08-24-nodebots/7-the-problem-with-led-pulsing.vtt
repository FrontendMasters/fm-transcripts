WEBVTT

1
00:00:00.000 --> 00:00:03.921
&gt;&gt; Steve Kinney: So what I would like you
to do is that we've switched back over.

2
00:00:03.921 --> 00:00:07.746
I'm using Visual Studio Code,
you might be using a different one,

3
00:00:07.746 --> 00:00:10.307
but we'll actually take
a look at it on mine.

4
00:00:10.307 --> 00:00:11.357
And if I type led,

5
00:00:11.357 --> 00:00:15.775
you can see that there's a whole bunch
of different methods that I called.

6
00:00:15.775 --> 00:00:17.628
There was blink, brightness,

7
00:00:17.628 --> 00:00:21.549
which will basically allow you to
set it somewhere along the lines.

8
00:00:21.549 --> 00:00:24.525
Fun fact, most of these
are not gonna work right now,

9
00:00:24.525 --> 00:00:26.387
we'll get into that in a second.

10
00:00:26.387 --> 00:00:31.317
But we can fade it, and these are all just

11
00:00:31.317 --> 00:00:36.977
utility methods given
to us by Johnny-Five.

12
00:00:36.977 --> 00:00:42.479
So you have a whole bunch of other ones,
a strobe seems like it's really cool.

13
00:00:42.479 --> 00:00:47.848
It is an alias for blink, so
if you're really excited about that one,

14
00:00:47.848 --> 00:00:50.214
it's gonna be the same thing.

15
00:00:50.214 --> 00:00:52.255
But there's a bunch of really cool ones.

16
00:00:52.255 --> 00:00:56.124
What I'm really interested
in is fading and pulsing.

17
00:00:56.124 --> 00:01:00.870
Right, fade is a one direction,
it'll go from off and fade to on.

18
00:01:00.870 --> 00:01:05.550
And then for pulsing,
it's effectively the same thing as blink.

19
00:01:05.550 --> 00:01:09.920
It's fade to on, fade to off,
fade to on, fade to off.

20
00:01:09.920 --> 00:01:11.550
And you can give it amount of time.

21
00:01:11.550 --> 00:01:14.800
So we're actually going
to do that instead.

22
00:01:14.800 --> 00:01:20.082
So instead of blink, we'll say pulse.

23
00:01:20.082 --> 00:01:25.542
I'm gonna save it, and
I'm gonna go ahead and run this code.

24
00:01:25.542 --> 00:01:28.176
I'll kill the previous instance,
if I didn't already.

25
00:01:28.176 --> 00:01:34.283
And I will run and I will deploy it, and
we will all see what's about to happen.

26
00:01:34.283 --> 00:01:37.986
So if you look at the board,
my code is deployed.

27
00:01:37.986 --> 00:01:40.159
There's two things to see.

28
00:01:40.159 --> 00:01:43.080
One, is there is no pulsing.

29
00:01:43.080 --> 00:01:47.410
Two, as I switched back to my computer,
they crashed.

30
00:01:47.410 --> 00:01:52.720
And the error message is
0 is not a valid PWM pin.

31
00:01:54.220 --> 00:01:59.570
Right, so that gives us a sense,
I kind of hinted before if we go ahead and

32
00:01:59.570 --> 00:02:02.850
look at that very helpful
chart that I showed earlier.

33
00:02:04.300 --> 00:02:10.100
That error message is accurate,
our PWM pins are five and

34
00:02:10.100 --> 00:02:12.870
six on either the a port or the b port.

35
00:02:14.350 --> 00:02:20.430
So, not zero, so when it said it's not
a PWM pin, a helpful error message.

36
00:02:20.430 --> 00:02:22.570
Or at least an accurate error message,
right?

37
00:02:23.670 --> 00:02:27.904
So the big question is what is PWM,
and why for

38
00:02:27.904 --> 00:02:31.256
pulsing does it need to be a PWM pin?

39
00:02:31.256 --> 00:02:34.966
The problem with programming
hardware digitally is, again,

40
00:02:34.966 --> 00:02:39.730
digital devices are ones and zeros,
right, which is you're on or you're off.

41
00:02:39.730 --> 00:02:44.780
And that worked great for
blinking, not so good for

42
00:02:44.780 --> 00:02:51.286
pulsing, where we're gradually
going from zero to one.

43
00:02:51.286 --> 00:02:54.070
And if that's not a thing
that we can do digitally,

44
00:02:55.670 --> 00:02:58.050
is this just a dead end
that I have led you down?

45
00:02:58.050 --> 00:03:00.350
Or is there a solution
in that error message?

46
00:03:00.350 --> 00:03:02.934
Which is where it said 0 is not a PWM pin,

47
00:03:02.934 --> 00:03:06.582
it seems like the solution might
be plug it into a PWM pin.

48
00:03:06.582 --> 00:03:08.939
We know that they're five and six.

49
00:03:08.939 --> 00:03:12.970
So it's very gratifying, but
can we make it fade in and out?

50
00:03:12.970 --> 00:03:15.070
Ones and zeroes, it's hard.

51
00:03:15.070 --> 00:03:18.384
So PWM, I've been purposely
cagey about what it stood for

52
00:03:18.384 --> 00:03:22.389
until now because I feel like that
would begin to give away the answer.

53
00:03:22.389 --> 00:03:25.187
It's pulse width modulation.

54
00:03:25.187 --> 00:03:30.694
And so it's basically the way that we
can fake somewhere between zero and

55
00:03:30.694 --> 00:03:33.770
one, when we only have zeroes and ones.

56
00:03:33.770 --> 00:03:34.900
So how do we fake it?

57
00:03:34.900 --> 00:03:37.245
We just alternate real fast.

58
00:03:37.245 --> 00:03:40.404
If you alternate real fast
between zero and one,

59
00:03:40.404 --> 00:03:45.268
the analog devices will kind of treat
it as somewhere between zero and one.

60
00:03:45.268 --> 00:03:48.860
So not every pin on our board supports it,
so

61
00:03:48.860 --> 00:03:52.950
we need to use a pin that does support it.

62
00:03:52.950 --> 00:03:57.840
Now that's fine and good, but
it leads us to our next problem.

63
00:03:58.900 --> 00:04:02.700
Our next problem is pin five and six,

64
00:04:02.700 --> 00:04:06.650
is very far away from that ground pin.

65
00:04:06.650 --> 00:04:12.480
[LAUGH] And, I mean if you really
tried you could probably reach,

66
00:04:12.480 --> 00:04:16.440
but seems like that's not
a long term solution.

67
00:04:16.440 --> 00:04:20.539
So we're gonna need to bring in another
piece of equipment called the breadboard.

68
00:04:20.539 --> 00:04:24.416
And I'm gonna take a quick moment to
explain to how a breadboard works.

69
00:04:24.416 --> 00:04:28.061
And then we'll be using a breadboard
pretty much for the rest of the day.

