WEBVTT

1
00:00:00.000 --> 00:00:02.012
&gt;&gt; Steve Kinney: Now,
I have a challenge for you.

2
00:00:02.012 --> 00:00:08.553
The challenge for you is previously we
implemented WebSockets in a server.

3
00:00:08.553 --> 00:00:12.396
Then we switched gears and
we went ahead and

4
00:00:12.396 --> 00:00:16.469
just played around with
the weather sensor.

5
00:00:16.469 --> 00:00:19.530
What I would love to do is
bring those two together.

6
00:00:19.530 --> 00:00:20.860
So I kind of show you little quick.

7
00:00:20.860 --> 00:00:26.890
If you remember earlier, I said I
did leave some clues in the read me

8
00:00:26.890 --> 00:00:31.980
about, I don't need that
color picker any more.

9
00:00:31.980 --> 00:00:37.530
Some of the Socket.IO stuff
that is available for

10
00:00:37.530 --> 00:00:39.850
sending messages back and forth.

11
00:00:39.850 --> 00:00:45.550
In this case, last time we sent
messages from the client to the server.

12
00:00:45.550 --> 00:00:47.150
We are gonna have to flip that this time,

13
00:00:47.150 --> 00:00:50.400
because all of the action
is happening on our tessal.

14
00:00:50.400 --> 00:00:58.530
So every 470 milliseconds,
whenever we get a new change event.

15
00:00:58.530 --> 00:01:02.561
Rather, we can still update
the bar charts if you want, but

16
00:01:02.561 --> 00:01:05.141
rather than updating the bar charts,

17
00:01:05.141 --> 00:01:10.151
what we wanna do is send a message to
all of the connected clients, right?

18
00:01:10.151 --> 00:01:15.119
So we will send a message from our tessal,
to all the connected browsers, right?

19
00:01:15.119 --> 00:01:20.016
And so in that case.
&gt;&gt; Steve Kinney: This one

20
00:01:20.016 --> 00:01:21.245
over here is your friend.

21
00:01:21.245 --> 00:01:23.950
io.sockets.omit.

22
00:01:23.950 --> 00:01:25.020
You'll give it some name.

23
00:01:25.020 --> 00:01:29.300
You can be like whether changed,
or whether change.

24
00:01:29.300 --> 00:01:32.824
Just make sure you get the [LAUGH] past
tense and present tense straight and

25
00:01:32.824 --> 00:01:35.267
don't do the mistake I did
with the color change.

26
00:01:35.267 --> 00:01:39.397
And then on the client we will
receive those events, right?

27
00:01:39.397 --> 00:01:44.030
And so that will be a socket
on whatever that event was and

28
00:01:44.030 --> 00:01:46.405
then we'll update the DOM.

29
00:01:46.405 --> 00:01:50.404
You can configure the HTML yourself.

30
00:01:50.404 --> 00:01:56.647
I do have a, if we go into the directory
and we go to the project and

31
00:01:56.647 --> 00:02:01.749
we go up to the example code for
the weather station.

32
00:02:01.749 --> 00:02:04.164
See this one called socket weather.

33
00:02:04.164 --> 00:02:09.374
You could also go into public directory
and grab this HTML, which is not amazing

34
00:02:09.374 --> 00:02:14.530
but it's basically some paragraph tags
where you could update those values.

35
00:02:14.530 --> 00:02:17.130
So if you don't wanna write an HTML,
you can grab that and move it in yourself.

36
00:02:17.130 --> 00:02:21.979
And then we'll just write the JavaScript
to receive those events and

37
00:02:21.979 --> 00:02:24.662
get real time updates in the browser.

38
00:02:24.662 --> 00:02:28.281
So let's spend 20 minutes,
put that together and

39
00:02:28.281 --> 00:02:33.064
then we'll review it together as
a group and do it and get it working.

