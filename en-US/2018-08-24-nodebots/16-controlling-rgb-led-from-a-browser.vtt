WEBVTT

1
00:00:00.124 --> 00:00:03.111
&gt;&gt; Steve Kinney: So
I think we've played with some colors.

2
00:00:03.111 --> 00:00:05.635
Does anyone have a favorite
CSS color that they tried?

3
00:00:07.439 --> 00:00:09.303
&gt;&gt; Steve Kinney: No, no favorites?

4
00:00:09.303 --> 00:00:12.203
All pretty much the same?

5
00:00:12.203 --> 00:00:16.514
All right, so we've been playing with some
hardware, and we've been programming it,

6
00:00:16.514 --> 00:00:20.607
but I have been alluding to the fact that
JavaScript's kind of cool because the web.

7
00:00:20.607 --> 00:00:25.572
So we're gonna switch our
attention to server JS.

8
00:00:25.572 --> 00:00:30.676
In server JS, I have some of these basic
boiler play code that we saw earlier.

9
00:00:30.676 --> 00:00:33.198
I have path which we'll see in a second.

10
00:00:33.198 --> 00:00:39.275
I brought over the RGB code
that we just previously wrote.

11
00:00:39.275 --> 00:00:44.027
And I just have some of the basics of
an express server as well as socket io,

12
00:00:44.027 --> 00:00:46.113
which we'll get to in a second.

13
00:00:46.113 --> 00:00:51.072
So there is a public directory that
has a index.html, a script for

14
00:00:51.072 --> 00:00:55.968
client side JavaScript, and
a style.css which is very empty right now.

15
00:00:55.968 --> 00:01:00.494
I had big hopes and dreams of styling this
very pretty, then I just decided not to.

16
00:01:00.494 --> 00:01:06.785
And when they go to the root directory,
it will load up public dot index dot html.

17
00:01:06.785 --> 00:01:11.083
We're gonna write some code and
do some things.

18
00:01:11.083 --> 00:01:15.947
The first thing I want you to do is,
you're gonna be able to connect to your,

19
00:01:15.947 --> 00:01:19.230
since we are starting a web server,
on our Tessle.

20
00:01:19.230 --> 00:01:23.511
It would be super cool to actually
be able to visit said website.

21
00:01:23.511 --> 00:01:24.768
To do that you need to
know what it's going to,

22
00:01:24.768 --> 00:01:25.910
because it's not going to be local host.

23
00:01:25.910 --> 00:01:27.154
Local host is your computer.

24
00:01:27.154 --> 00:01:30.297
This is not running on your computer,
this is running on your Tessle.

25
00:01:30.297 --> 00:01:36.372
So what we'll do is,
we'll go ahead and do t2 wifi.

26
00:01:36.372 --> 00:01:39.059
And that's what we used to
configure the wifi earlier, but

27
00:01:39.059 --> 00:01:42.298
what we're doing in this case is just
get us some information about it.

28
00:01:45.864 --> 00:01:49.379
&gt;&gt; Steve Kinney: If anyone needs
a new name for their Tessle,

29
00:01:49.379 --> 00:01:52.140
Tesslerun could be a good one too.

30
00:01:52.140 --> 00:01:55.120
I don't know why I didn't have that
helpful suggestion earlier, but

31
00:01:55.120 --> 00:01:55.686
here we are.

32
00:01:55.686 --> 00:01:59.990
So mine is 192.168.3.182,
yours is obviously gonna be different,

33
00:01:59.990 --> 00:02:01.963
hopefully it's gonna be different.

34
00:02:01.963 --> 00:02:05.805
If not,t hat is problematic for
our router.

35
00:02:05.805 --> 00:02:09.177
Cool, so we've got that in place.

36
00:02:09.177 --> 00:02:13.609
So we are actually going to run
the default, like unless you pass

37
00:02:13.609 --> 00:02:19.540
an environment fail I'm saying that's port
80 which is the default port for HTTP.

38
00:02:19.540 --> 00:02:21.682
Which means if we go to it in the browser,

39
00:02:21.682 --> 00:02:24.144
we don't ncessasarily
have to define a port.

40
00:02:24.144 --> 00:02:26.921
Usually it's like, local host port 3000,

41
00:02:26.921 --> 00:02:30.045
this will just be our IP address,
that'll just work.

42
00:02:30.045 --> 00:02:34.752
All right, so
we're sending that public.index.html, and

43
00:02:34.752 --> 00:02:38.920
right now, all it has is a input
field with a type color,

44
00:02:38.920 --> 00:02:43.535
which I believe is supported in chrome,
I'm not quite sure,

45
00:02:43.535 --> 00:02:48.818
if you see just a input field at one
point, then you're not in chrome.

46
00:02:48.818 --> 00:02:49.683
You might want to switch over.

47
00:02:49.683 --> 00:02:54.049
At the top of my head,
I forget what the browser support for

48
00:02:54.049 --> 00:02:57.895
the tab color is An input
where you can pick a color.

49
00:02:57.895 --> 00:02:59.280
It's very, very cool.

50
00:02:59.280 --> 00:03:04.416
And so what we wanna do is when
the user has picked a color,

51
00:03:04.416 --> 00:03:08.700
we will go ahead and
change the color of the LED.

52
00:03:08.700 --> 00:03:13.234
So before we iterated through an array,
it went red, green, blue, or

53
00:03:13.234 --> 00:03:16.194
blanched almond, rebecca purple, salmon.

54
00:03:16.194 --> 00:03:19.064
Right [LAUGH] whatever you decided to do.

55
00:03:19.064 --> 00:03:22.316
In this case, when we do an .post.

56
00:03:25.293 --> 00:03:28.175
&gt;&gt; Steve Kinney: And
I'm just gonna post to slash.

57
00:03:28.175 --> 00:03:33.429
And that will deal with a request.

58
00:03:33.429 --> 00:03:34.617
Get a response.

59
00:03:38.211 --> 00:03:41.794
&gt;&gt; Steve Kinney: And
we'll grab the color property,

60
00:03:44.947 --> 00:03:46.192
&gt;&gt; Steve Kinney: Out of that request, but

61
00:03:46.192 --> 00:03:48.930
I will look at the JavaScript
on the client in a second.

62
00:03:48.930 --> 00:03:54.599
Actually, there's no JavaScript, but
we'll look at the index.html in a second.

63
00:03:54.599 --> 00:03:57.189
But we'll grab the color property.

64
00:03:57.189 --> 00:04:00.199
And let's just for
our own sanity in case we have any issues.

65
00:04:00.199 --> 00:04:05.565
We'll console.log that we are setting

66
00:04:05.565 --> 00:04:12.521
the color to some string
that will just be the color.

67
00:04:12.521 --> 00:04:13.565
All right, neat.

68
00:04:13.565 --> 00:04:18.949
And then we'll do led.color is
whatever color we got from the server.

69
00:04:18.949 --> 00:04:24.501
And then we'll actually just respond by
sending them back the index.html file.

70
00:04:28.391 --> 00:04:28.932
&gt;&gt; Steve Kinney: All right, so

71
00:04:28.932 --> 00:04:31.835
just a little simple endpoint that's
just gonna take our form submission.

72
00:04:31.835 --> 00:04:33.154
and change the color of the led.

73
00:04:33.154 --> 00:04:35.676
So basically,
the cool thing that we are doing,

74
00:04:35.676 --> 00:04:38.084
because we are a bunch
of fun engineers right?

75
00:04:38.084 --> 00:04:45.451
We are basically building a web
front end for our hardware, right?

76
00:04:45.451 --> 00:04:48.735
The nice thing about doing this stuff
in JavaScript is that we can blend.

77
00:04:48.735 --> 00:04:54.059
Like we wrote a web server that is
going to take HTTP requests and

78
00:04:54.059 --> 00:04:56.377
change the color of an led.

79
00:04:56.377 --> 00:05:00.100
I'm excited,
I don't know about the rest of you.

80
00:05:00.100 --> 00:05:07.484
I'm going to briefly just look inside
the public directory at the index at HTML.

81
00:05:07.484 --> 00:05:11.385
Just so you can see that the name
is color and it is a very,

82
00:05:11.385 --> 00:05:15.536
very boring HTML form that's
just going to send other day.

83
00:05:15.536 --> 00:05:17.212
Yeah, no JavaScript.

84
00:05:17.212 --> 00:05:22.788
[LAUGH] Just regular old HTML
forms that's gonna send it along.

85
00:05:22.788 --> 00:05:24.565
And with a Submit button, cool.

86
00:05:24.565 --> 00:05:27.072
So that's where we got that color
in the request body earlier.

87
00:05:27.072 --> 00:05:28.677
That wasn't a magical property.

88
00:05:28.677 --> 00:05:31.754
It's magical through the magic of HTML.

89
00:05:31.754 --> 00:05:33.102
But there it is.

90
00:05:33.102 --> 00:05:35.949
So I'll go ahead and
I'm gonna deploy to my tassel.

91
00:05:35.949 --> 00:05:39.932
This time it's gonna be t2 run server.js.

92
00:05:39.932 --> 00:05:42.905
We'll go ahead and we'll deploy that.

93
00:05:42.905 --> 00:05:45.989
I'm gonna wait a second because I
want to pull it up in the browser.

94
00:05:57.441 --> 00:05:59.548
&gt;&gt; Steve Kinney: While that's deploying,

95
00:05:59.548 --> 00:06:03.402
I just want to point out
one more thing in the code.

96
00:06:03.402 --> 00:06:08.882
I, just because of
&gt;&gt; Steve Kinney: Variable scope.

97
00:06:08.882 --> 00:06:09.683
I am, actually.

98
00:06:09.683 --> 00:06:12.273
This is all happening in board on ready.

99
00:06:12.273 --> 00:06:15.940
Like once the board is ready,
then I start up the server.

100
00:06:15.940 --> 00:06:19.316
Because I need access to
that LED variable, right?

101
00:06:19.316 --> 00:06:20.214
So that's why it's in there.

102
00:06:20.214 --> 00:06:22.917
You might be like, wow,
he's waiting to be inside a function?

103
00:06:22.917 --> 00:06:24.836
I just need it for variable access.

104
00:06:24.836 --> 00:06:30.387
Could I, theoretically do a led and
set stuff totally.

105
00:06:30.387 --> 00:06:33.189
But that's why I chose to do it this way.

106
00:06:33.189 --> 00:06:34.703
Right, we'll go back over.

107
00:06:34.703 --> 00:06:38.181
We are starting to run server.js.

108
00:06:38.181 --> 00:06:40.312
You can see it's going and then.

109
00:06:44.425 --> 00:06:48.237
&gt;&gt; Steve Kinney: Great,
server's up and running on port 80.

110
00:06:48.237 --> 00:06:54.205
So earlier,
I saw that IP address that I had.

111
00:06:54.205 --> 00:06:57.173
Let's see if this will make up for it.

112
00:06:57.173 --> 00:07:04.532
It is not, so I'm gonna go ahead and
run that one more time.

113
00:07:04.532 --> 00:07:07.104
So did anyone memorize my
IP address from before?

114
00:07:16.405 --> 00:07:18.060
&gt;&gt; Steve Kinney: It is
literally still in my terminal.

115
00:07:24.894 --> 00:07:28.794
&gt;&gt; Steve Kinney: Cool, so
I have this really beautiful HTML form.

116
00:07:28.794 --> 00:07:30.796
This is my design skills in action.

117
00:07:32.399 --> 00:07:34.909
&gt;&gt; Steve Kinney: And I'm gonna go
ahead and try it out for a second.

118
00:07:34.909 --> 00:07:37.023
I'm gonna pick a color.

119
00:07:37.023 --> 00:07:37.955
Let me go with red.

120
00:07:41.508 --> 00:07:43.863
&gt;&gt; Steve Kinney: And submit the form.

121
00:07:43.863 --> 00:07:49.069
And I'm looking down at my LED
right now And it has changed color.

122
00:07:49.069 --> 00:07:53.324
So what I'm gonna do, is I'm gonna go
back over and we'll look at my LED.

123
00:07:53.324 --> 00:07:55.993
And I will,
can't see both at the same time.

124
00:07:55.993 --> 00:07:59.617
But you can see your LED and
your screen at the same time.

125
00:07:59.617 --> 00:08:00.698
And we'll go ahead and look at it.

126
00:08:00.698 --> 00:08:03.636
So I can change the color
through my web UI.

127
00:08:03.636 --> 00:08:09.632
So I just sent green over so
you can see the LED turn green.

128
00:08:09.632 --> 00:08:11.860
I will dictate you what will happen next.

129
00:08:11.860 --> 00:08:16.173
I will go ahead and
let's change it to blue.

130
00:08:16.173 --> 00:08:17.160
I can change the LED tto blu.

131
00:08:17.160 --> 00:08:21.901
I can now change my hardware from
a very plain HTML form because this is

132
00:08:21.901 --> 00:08:23.633
running the web server.

133
00:08:23.633 --> 00:08:25.539
All of this is happening on the device.

134
00:08:25.539 --> 00:08:28.058
So it receives the HTTP request.

135
00:08:28.058 --> 00:08:31.427
And it goes ahead and
changes the color of the LED.

136
00:08:31.427 --> 00:08:36.229
If you really want to,
it's not technically great web practices,

137
00:08:36.229 --> 00:08:40.442
but you can actually move the line
where we send the index and

138
00:08:40.442 --> 00:08:43.911
HTML again and
just leave the HTTP request open.

139
00:08:43.911 --> 00:08:47.247
And then you can start dragging
around the different color and

140
00:08:47.247 --> 00:08:48.926
see it change automatically.

