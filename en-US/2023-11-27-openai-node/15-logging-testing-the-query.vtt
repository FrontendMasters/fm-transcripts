WEBVTT

1
00:00:00.220 --> 00:00:04.250
So now that we have that, all we need to
do really is just kinda like log this out.

2
00:00:04.250 --> 00:00:06.980
So, we'll just log out the answer.

3
00:00:06.980 --> 00:00:10.720
And then we can look at the sources
on which it got that from.

4
00:00:10.720 --> 00:00:11.780
So let's do that.

5
00:00:11.780 --> 00:00:18.250
So, we'll say console.log.

6
00:00:19.570 --> 00:00:25.403
We wanna say answer, and that's gonna

7
00:00:25.403 --> 00:00:30.531
be response.choices[0].,

8
00:00:30.531 --> 00:00:34.870
[LAUGH] message.content.

9
00:00:34.870 --> 00:00:35.715
That was a lot.

10
00:00:35.715 --> 00:00:37.119
Okay, so we got that.

11
00:00:37.119 --> 00:00:40.564
And then I'll make a new line here,
and I'm gonna put, like,

12
00:00:40.564 --> 00:00:42.330
what is your source or sources?

13
00:00:42.330 --> 00:00:47.539
And then for the sources, I'm just gonna
map over, pretty much the same thing here.

14
00:00:47.539 --> 00:00:51.606
I'm just gonna map over all of these,
except I only really want

15
00:00:51.606 --> 00:00:57.150
the metadata.source property from them,
and I'll just combine them with a comma.

16
00:00:57.150 --> 00:01:01.589
So I'll say, give me all
the results that came back from

17
00:01:01.589 --> 00:01:06.122
the similarity search cuz those
are the ones that we fed,

18
00:01:06.122 --> 00:01:11.695
map over all those and grab
the metadata.source property from them,

19
00:01:11.695 --> 00:01:16.625
and then just join them on a comma
separated list, like that.

20
00:01:16.625 --> 00:01:22.040
So you'll see, we might get back, like,
we'll probably get duplicate sources,

21
00:01:22.040 --> 00:01:26.942
it might show YouTube more than once,
depending on what number we put here.

22
00:01:26.942 --> 00:01:31.001
So in this case, 2, so it might find two
chunks in the YouTube transcript to help

23
00:01:31.001 --> 00:01:34.243
us answer the question, so
it'll put the YouTube thing twice.

24
00:01:34.243 --> 00:01:36.400
We're not de-duping
these sources right now.

25
00:01:36.400 --> 00:01:39.370
We could, but it's showing a source for
every chunk, and

26
00:01:39.370 --> 00:01:41.809
some of those chunks come
from the same source.

27
00:01:41.809 --> 00:01:43.548
So it's gonna show it twice, right?

28
00:01:43.548 --> 00:01:46.112
It's gonna be like, I got this from
YouTube, I got this from YouTube.

29
00:01:46.112 --> 00:01:48.287
Versus you probably just wanna
know where you just got,

30
00:01:48.287 --> 00:01:50.194
you don't care if you got
it twice from YouTube.

31
00:01:50.194 --> 00:01:52.145
You're just like,
show me all the different sources,

32
00:01:52.145 --> 00:01:53.647
not how many times you
got the same source.

33
00:01:53.647 --> 00:01:56.150
So it's gonna show you how many
times you got the same source.

34
00:01:56.150 --> 00:01:58.178
And that's something we will fix,
not the AI.

35
00:01:58.178 --> 00:02:01.780
Okay, so, I don't know.

36
00:02:01.780 --> 00:02:02.600
Let's give it a try.

37
00:02:02.600 --> 00:02:06.190
So, let's run the same
question that I had.

38
00:02:06.190 --> 00:02:07.338
What is the Xbox warranty?

39
00:02:10.541 --> 00:02:13.879
And I don't know if the PDF
talks about that or not.

40
00:02:13.879 --> 00:02:15.410
Let me see.

41
00:02:15.410 --> 00:02:16.280
We got an error here.

42
00:02:16.280 --> 00:02:20.974
So, it doesn't exist or I don't have
access to that, so I don't know,

43
00:02:20.974 --> 00:02:22.730
not that model, I guess.

44
00:02:22.730 --> 00:02:26.993
Let's try, GPT,

45
00:02:31.923 --> 00:02:35.314
I don't know, let's just do 4,
I guess, maybe that's good.

46
00:02:35.314 --> 00:02:36.946
Let's try that again.

47
00:02:36.946 --> 00:02:37.908
There it is.

48
00:02:37.908 --> 00:02:39.247
Yeah, it got it, great.

49
00:02:39.247 --> 00:02:39.963
So the answer,

50
00:02:39.963 --> 00:02:43.784
the warranty as per the manufacturer's
limited hardware warranty agreements.

51
00:02:43.784 --> 00:02:47.880
Yeah, it literally got it, and you could
see the sources are xbox.pdf, xbox.pdf.

52
00:02:47.880 --> 00:02:53.310
So it found two chunks from the similarity
search, they both were from the xbox.pdf.

53
00:02:53.310 --> 00:02:57.763
It combined both of those chunks together,
Here,

54
00:02:57.763 --> 00:03:01.357
so those two chunks got added here as
context, the original question that I

55
00:03:01.357 --> 00:03:04.108
typed in got added here, and
then we told it to answer it.

56
00:03:04.108 --> 00:03:06.213
So it did, all right?

57
00:03:06.213 --> 00:03:07.813
We can do another one.

58
00:03:07.813 --> 00:03:12.114
And in this case, you could probably
just do one for Xbox questions,

59
00:03:12.114 --> 00:03:13.829
since the chunks are good.

60
00:03:13.829 --> 00:03:18.485
But for the YouTube one, you definitely
need at least two, I would imagine,

61
00:03:18.485 --> 00:03:20.214
cuz it can split at any time.

62
00:03:20.214 --> 00:03:23.169
So let's ask something about Brian.

63
00:03:23.169 --> 00:03:29.084
I don't know, where did Brian work?

64
00:03:29.084 --> 00:03:30.869
I don't know if he talked about that.

65
00:03:30.869 --> 00:03:31.836
I think he did talk about that.

66
00:03:31.836 --> 00:03:32.667
Yeah, he did talk about this.

67
00:03:32.667 --> 00:03:34.580
So let's see if it figures it out.

68
00:03:34.580 --> 00:03:38.240
And if it doesn't, it should say,
I need more context.

69
00:03:38.240 --> 00:03:40.730
I don't actually know
how to figure that out.

70
00:03:40.730 --> 00:03:43.473
So you could see it's taking a long
time because every time I run this,

71
00:03:43.473 --> 00:03:46.000
it has to go and create the index
from scratch every single time.

72
00:03:46.000 --> 00:03:47.460
We're not saving the index anywhere.

73
00:03:47.460 --> 00:03:49.257
So it's like going to YouTube.

74
00:03:49.257 --> 00:03:53.442
It's doing the YouTube thing, it's
chunking it, it's doing the PDF thing.

75
00:03:53.442 --> 00:03:55.570
Here we go.
Brian worked at several places.

76
00:03:55.570 --> 00:04:00.290
He started a company called Needle
as a senior front-end engineer.

77
00:04:00.290 --> 00:04:01.929
Did he?

78
00:04:01.929 --> 00:04:02.545
I don't know.

79
00:04:02.545 --> 00:04:06.794
&gt;&gt; Instead of giving it just the raw text,
if you basically gave it structured data,

80
00:04:06.794 --> 00:04:10.736
like the content plus the metadata that
had theoretically the source in it,

81
00:04:10.736 --> 00:04:13.386
couldn't you ask the question and
then say, hey,

82
00:04:13.386 --> 00:04:17.716
specify what source you actually use so it
would give you like the particular ones?

83
00:04:17.716 --> 00:04:19.435
&gt;&gt; Exactly, so the question was,

84
00:04:19.435 --> 00:04:22.055
can we just have the AI
tell us what source it use?

85
00:04:22.055 --> 00:04:23.166
Yes, I could.

86
00:04:23.166 --> 00:04:25.716
The reason I didn't have the AI
ask what source it used,

87
00:04:25.716 --> 00:04:28.328
because I know what source of used,
I gave it the source.

88
00:04:28.328 --> 00:04:32.751
So I was like, I'll just skip that and
just put the source myself cuz I know you

89
00:04:32.751 --> 00:04:36.330
used it because I gave it to you,
and save myself some money.

90
00:04:36.330 --> 00:04:41.942
But yeah, in other ways, I think from
what I've seen in most of the UIs,

91
00:04:41.942 --> 00:04:45.990
there's typically a separation
from the answer and

92
00:04:45.990 --> 00:04:50.980
then the sources itself,
they need that to be structured.

93
00:04:50.980 --> 00:04:54.979
So I find that if you have the AI
respond with the source trying to

94
00:04:54.979 --> 00:05:00.300
pull that out from the AI to show it
somewhere else in the UI is a lot harder.

95
00:05:00.300 --> 00:05:02.914
Whereas if you just
have the source here or

96
00:05:02.914 --> 00:05:06.059
something like that,
it's a lot easier to show.

97
00:05:06.059 --> 00:05:10.889
But yes, I guess, like in a chat
interface, yeah, you'll probably do that.

98
00:05:10.889 --> 00:05:15.329
This isn't a search drop down that show
stuff, like I did in Mendable, but

99
00:05:15.329 --> 00:05:18.022
it's like a chat interface, like ChatGPT.

100
00:05:18.022 --> 00:05:21.718
Yeah, you would probably just have the AI
respond with the source in which it got

101
00:05:21.718 --> 00:05:24.990
stuff back cuz there's nowhere
else that the chat is the UI.

102
00:05:24.990 --> 00:05:26.770
So yeah, I think that makes sense.

103
00:05:26.770 --> 00:05:28.571
&gt;&gt; Can we do this with GPT-2?

104
00:05:28.571 --> 00:05:33.134
GPT-2 is great for handheld devices
where we can keep the data locally and

105
00:05:33.134 --> 00:05:36.540
we would need limited Internet access.

106
00:05:36.540 --> 00:05:39.160
&gt;&gt; You could do this with GPT-2 as well.

107
00:05:39.160 --> 00:05:43.632
I don't know how good it'll be,

108
00:05:43.632 --> 00:05:48.599
I think it'll at least be accurate.

109
00:05:48.599 --> 00:05:51.094
You might not get good
results compared to this.

110
00:05:51.094 --> 00:05:55.499
I think the better alternative to keep
it in his local would be to use an open

111
00:05:55.499 --> 00:06:00.490
source model like Llama or something like
that, and running that on your machine.

112
00:06:00.490 --> 00:06:05.610
There's tons of really good
open-source models out there.

113
00:06:05.610 --> 00:06:08.510
So if you go on Hugging Face,
there's just so many of them.

114
00:06:08.510 --> 00:06:10.490
That's probably the better
alternative in my opinion.

115
00:06:10.490 --> 00:06:12.944
But let's try to get it to
not answer a question, right?

116
00:06:12.944 --> 00:06:17.608
So, what is the weather, right?

117
00:06:17.608 --> 00:06:20.930
Obviously, it should not know that.

118
00:06:20.930 --> 00:06:23.040
You can tell there's
ways to speed this up.

119
00:06:23.040 --> 00:06:25.190
Like I said, it's loading everything up.

120
00:06:25.190 --> 00:06:30.690
You can have it to where it doesn't load
up something unless it thinks it needs it,

121
00:06:30.690 --> 00:06:31.260
right?

122
00:06:31.260 --> 00:06:35.753
So we'll get into that, like adding
indexes dynamically, like how to, well,

123
00:06:35.753 --> 00:06:40.380
do I need to even index this YouTube
video if someone's asking about an Xbox?

124
00:06:40.380 --> 00:06:41.880
Why am I even indexing this thing?

125
00:06:41.880 --> 00:06:45.315
So it's like, you can have dynamic
indexes and indexing on the fly or,

126
00:06:45.315 --> 00:06:46.700
there's different stuff.

127
00:06:46.700 --> 00:06:49.672
But as you can see right here, I'm sorry,
but I cannot provide the weather as

128
00:06:49.672 --> 00:06:52.204
the context you've given me does
not include that information.

129
00:06:52.204 --> 00:06:55.001
And for some reason, it tried to figure
that out by looking at the YouTube videos.

130
00:06:55.001 --> 00:06:55.882
It just couldn't figure it out.

131
00:06:59.765 --> 00:07:02.146
Cool, any other questions on that?

132
00:07:04.704 --> 00:07:05.632
It's quite powerful.

133
00:07:05.632 --> 00:07:10.987
So if you just imagine
replacing these PDF loaders and

134
00:07:10.987 --> 00:07:16.942
YouTube loaders with any one
of these ridiculous loaders.

135
00:07:16.942 --> 00:07:21.618
You can really do QA and whatever you
want on any set of data, anything.

136
00:07:21.618 --> 00:07:22.493
It's quite impressive.

