WEBVTT

1
00:00:00.310 --> 00:00:01.606
Yeah, so that's basically it.

2
00:00:01.606 --> 00:00:04.724
All this other stuff
doesn't really matter.

3
00:00:04.724 --> 00:00:06.989
We already kind of covered some
of the stuff, you can look at it.

4
00:00:06.989 --> 00:00:09.104
But let's just dive into
making a document QA.

5
00:00:09.104 --> 00:00:11.280
Like I said,
it's very similar to semantic search.

6
00:00:12.290 --> 00:00:14.365
It just goes a step further,

7
00:00:14.365 --> 00:00:19.710
which makes it a little harder in my
opinion but It's really powerful.

8
00:00:19.710 --> 00:00:22.200
I kinda like the document QA.

9
00:00:22.200 --> 00:00:25.660
So, let's write some code here.

10
00:00:25.660 --> 00:00:29.669
I'm just gonna make a new file,

11
00:00:29.669 --> 00:00:33.982
I'm just gonna call this QA.js.

12
00:00:33.982 --> 00:00:37.766
What we're gonna do here on this one,
I wanted kinda just to make it cool and

13
00:00:37.766 --> 00:00:39.400
just show different use cases.

14
00:00:39.400 --> 00:00:41.630
So, we're gonna do QA on two things.

15
00:00:41.630 --> 00:00:43.252
One is gonna be a YouTube video.

16
00:00:43.252 --> 00:00:47.348
If you haven't watched the podcast episode
that Friendly Masters had with Brian,

17
00:00:47.348 --> 00:00:49.640
he's another instructor here, Brian Holt.

18
00:00:49.640 --> 00:00:52.690
He's also like a really good
friend of mine, funny guy.

19
00:00:52.690 --> 00:00:54.670
They did a podcast and it was really cool.

20
00:00:54.670 --> 00:00:57.350
And we're gonna take that video and
we're gonna do QA on it.

21
00:00:57.350 --> 00:01:00.412
So we can ask it questions
about anything in that podcast,

22
00:01:00.412 --> 00:01:02.780
anything that was talked about.

23
00:01:02.780 --> 00:01:04.350
We can ask you questions,
which is really cool.

24
00:01:04.350 --> 00:01:05.833
So if you really wanna get to know, Brian,

25
00:01:05.833 --> 00:01:07.410
it's actually going to
be a great exercise.

26
00:01:07.410 --> 00:01:09.887
So we'll do that, and
then I also wanna show off that like,

27
00:01:09.887 --> 00:01:11.190
it can index other things too.

28
00:01:11.190 --> 00:01:18.560
So in the repo, if you go to the GitHub,
there is a Xbox PDF here.

29
00:01:19.900 --> 00:01:22.580
If you click on it,
there should be a download button here.

30
00:01:22.580 --> 00:01:26.150
Click that because we're going to
do QA on the Xbox PDF as well.

31
00:01:26.150 --> 00:01:28.910
I think PDF is cool because
it's not structured.

32
00:01:28.910 --> 00:01:33.450
It's not like a CSV, it's not like
a JSON file, I mean, look at this.

33
00:01:33.450 --> 00:01:36.670
What is this, right,
this is basically unstructured content.

34
00:01:36.670 --> 00:01:40.263
We're gonna do QA over this,
we're gonna teach the AI this PDF, so

35
00:01:40.263 --> 00:01:44.250
you can ask it questions, and then
we're gonna put them in the same index.

36
00:01:44.250 --> 00:01:48.176
And then we're gonna leave it up to the AI
to figure out if we're asking questions

37
00:01:48.176 --> 00:01:52.090
about the podcast or
if we're asking questions about the Xbox.

38
00:01:52.090 --> 00:01:56.145
And if those two things overlap,
we're gonna get some interesting results.

39
00:01:56.145 --> 00:02:00.553
[LAUGH] If the Xbox starts talking about
Brian or Frontendmasters or Brian starts

40
00:02:00.553 --> 00:02:05.110
talking about Xboxes, I don't know where
we're gonna get back, I don't know.

41
00:02:05.110 --> 00:02:07.816
So, yeah, pretty cool, so
yeah, just download that and

42
00:02:07.816 --> 00:02:10.480
then just drag it into your file or
to your repo here.

43
00:02:10.480 --> 00:02:16.800
Okay, so I got that PDF,
got my qa.js, let's get to work.

44
00:02:16.800 --> 00:02:18.860
So first thing first,

45
00:02:18.860 --> 00:02:24.612
I'm gonna allow us to type in
a question from the command line.

46
00:02:24.612 --> 00:02:27.610
That way we have to keep coming here and
writing the code.

47
00:02:27.610 --> 00:02:31.030
So we can do that but first,
let's bring in our imports.

48
00:02:31.030 --> 00:02:34.451
So the first thing we I don't know why
I didn't put the imports here, but

49
00:02:34.451 --> 00:02:35.416
that's all right.

50
00:02:35.416 --> 00:02:39.589
We're just gonna import openAI, like we
always have from the file that we created

51
00:02:39.589 --> 00:02:42.260
unless you didn't create the file,
that's fine.

52
00:02:43.870 --> 00:02:47.270
Then we pretty much need
the same thing Search has.

53
00:02:47.270 --> 00:02:49.340
I'm just gonna go to Search,
I'm just gonna grab all that.

54
00:02:49.340 --> 00:02:54.268
We need the document, the VectorStore,
and the OpenAI embeddings,

55
00:02:54.268 --> 00:02:55.949
just we need all those.

56
00:02:58.328 --> 00:03:01.410
Yeah, I think that's mostly it I
don't think we need anything else.

57
00:03:02.420 --> 00:03:06.880
Wait no we do need one more,
we need what is it?

58
00:03:06.880 --> 00:03:11.582
So, it's import from Lang chain is it,
yeah,

59
00:03:11.582 --> 00:03:17.003
we need a tech splitter,
I wanna say it's from there.

60
00:03:17.003 --> 00:03:21.420
I'm gonna need the character tech
splitter from lane chain tech splitter.

61
00:03:22.750 --> 00:03:25.770
We'll talk about that in a minute, and
then we're gonna import two loaders,

62
00:03:25.770 --> 00:03:27.990
one to handle the PDF and
one to handle the YouTube video.

63
00:03:29.010 --> 00:03:34.255
So I think it's like lane chain,
document loaders,

64
00:03:34.255 --> 00:03:40.083
yeah, what is this it is this
is important so we're FS and

65
00:03:40.083 --> 00:03:45.329
then web and
YouTube okay starting with loaders FS and

66
00:03:45.329 --> 00:03:49.196
then PDF for that and this is a PDF loader

67
00:03:52.026 --> 00:03:57.383
And for the YouTube loader it's gonna

68
00:03:57.383 --> 00:04:02.742
be linkchain slash document loader,

69
00:04:02.742 --> 00:04:08.810
slash web, slash YouTube, like that.

70
00:04:08.810 --> 00:04:13.730
Let me get rid of that CJ s on that area,
and then YouTube loader.

71
00:04:14.920 --> 00:04:15.970
Cool, so we got that.

72
00:04:17.120 --> 00:04:19.162
These two things the PDF loader and

73
00:04:19.162 --> 00:04:24.200
the YouTube loader depend on some NPM
packages that we have to install.

74
00:04:24.200 --> 00:04:29.793
So let's install those
packages are going to be,

75
00:04:29.793 --> 00:04:36.464
I don't think I wrote them down,
so luckily they are here.

76
00:04:36.464 --> 00:04:41.853
They're basically just
gonna be this PDF parse,

77
00:04:41.853 --> 00:04:46.353
YouTube transcripts, and YouTube IJS.

78
00:04:46.353 --> 00:04:49.544
So we'll download PDF parse.

79
00:04:54.466 --> 00:04:58.759
We got that pdf-parse, we have

80
00:04:58.759 --> 00:05:08.234
YouTube-transcripts And

81
00:05:08.234 --> 00:05:13.792
then YouTube i.js.

82
00:05:17.033 --> 00:05:22.840
YouTubei, or
I don't know what they're doing there,

83
00:05:22.840 --> 00:05:25.813
but we wanna install those.

84
00:05:25.813 --> 00:05:28.820
We won't be using them directly,
the loaders will be using this.

85
00:05:28.820 --> 00:05:34.187
And this is probably the most used thing I
use from linkhain is the document loaders,

86
00:05:34.187 --> 00:05:37.740
because they have so
many of these to go load things up.

87
00:05:37.740 --> 00:05:41.810
They have one that will crawl a website,
they have one that will take a podcast.

88
00:05:41.810 --> 00:05:45.910
They have one that will take a voice file
and convert that to text and load that.

89
00:05:45.910 --> 00:05:49.570
Like, there's so many of them, and
it's not even the biggest one.

90
00:05:49.570 --> 00:05:54.230
There's something called
Llama Index that's even bigger.

91
00:05:56.550 --> 00:06:01.284
This one's insane they have tons of
loaders on here I just want to see

92
00:06:01.284 --> 00:06:06.021
the page where they show the loaders
because it's quite massive you

93
00:06:06.021 --> 00:06:11.116
should just have a page where it just
shows you all the ones that they had.

94
00:06:11.116 --> 00:06:13.900
But they do the same
ones just even more but

95
00:06:13.900 --> 00:06:18.039
it's only the only problem with
this one is it's mostly in.

96
00:06:18.039 --> 00:06:19.072
Wait, they have TypeScript now.

97
00:06:19.072 --> 00:06:21.307
I was gonna say it's
mostly just in Python.

98
00:06:21.307 --> 00:06:23.786
Wow, they have JavaScript now?

99
00:06:23.786 --> 00:06:28.160
This is insane, man,
I can't wait to use this.

100
00:06:29.200 --> 00:06:34.550
But now I'm gonna show you the Llama Hub,
here we go, okay.

101
00:06:35.800 --> 00:06:38.540
So these are all the document
loaders that they have.

102
00:06:38.540 --> 00:06:42.828
So if you want to teach your AI about
something and it's somewhere else, yeah,

103
00:06:42.828 --> 00:06:43.960
they have it.

104
00:06:43.960 --> 00:06:49.130
So what do you want,
you got something in asana?

105
00:06:49.130 --> 00:06:53.897
Here you go,
what about being searched, you got it.

106
00:06:53.897 --> 00:06:57.480
[LAUGH] Dad jokes,
there's one for dad jokes.

107
00:06:57.480 --> 00:07:02.691
I mean,
there's just a bunch of stuff in here that

108
00:07:02.691 --> 00:07:08.110
you can use Gmail,
GitHub repos, Google drives.

109
00:07:08.110 --> 00:07:11.960
I mean, if there's something that
you can feed AI is probably on here.

110
00:07:11.960 --> 00:07:15.617
And it's all like a standard interface,
kind of like the document loaders that

111
00:07:15.617 --> 00:07:18.200
we're using now in link chain,
so this is great.

112
00:07:18.200 --> 00:07:23.171
Now that they have TypeScript support, I'm
really pumped because there's some really

113
00:07:23.171 --> 00:07:27.211
cool stuff in here like OCR, like this
right here is like computer vision

114
00:07:27.211 --> 00:07:30.010
that can like read things
like that's powerful.

115
00:07:30.010 --> 00:07:34.191
It's just have this thing visually look
at this thing and get the information

116
00:07:34.191 --> 00:07:38.900
from it, and then turn that into data
that I can then now search on or QA on.

117
00:07:38.900 --> 00:07:42.860
It's crazy to think about that,
there's so many things you can do.

118
00:07:44.920 --> 00:07:48.890
Yeah, so you can out for a little bit,
but this is really cool.

119
00:07:48.890 --> 00:07:52.680
But like I said, lane chain right now,
that's what these document loaders are.

120
00:07:52.680 --> 00:07:56.490
They're like a smaller subset of that,
and they have some really good ones too.

121
00:07:58.330 --> 00:08:03.310
All right, so we got those,
let's make some things.

122
00:08:03.310 --> 00:08:08.090
Yeah, so first thing we wanna is,
let's do this.

123
00:08:08.090 --> 00:08:14.310
Let's get our question, so our question
is gonna be either process.argv2.

124
00:08:14.310 --> 00:08:19.357
If you don't know what that means,
that just means if I'm

125
00:08:19.357 --> 00:08:24.096
on the terminal,
let's say I run this file, node QA,

126
00:08:24.096 --> 00:08:28.647
okay, this would be argv0,
this would be argv1.

127
00:08:28.647 --> 00:08:31.640
And then anything after
this would be arg v2.

128
00:08:31.640 --> 00:08:34.300
So whatever I type here,
so I wanna capture that.

129
00:08:34.300 --> 00:08:35.730
That's what that is, right?

130
00:08:35.730 --> 00:08:38.340
You wanna put that in quotes because
if you don't put that in quotes,

131
00:08:38.340 --> 00:08:41.560
it's gonna take each one of these
words is a different argument.

132
00:08:41.560 --> 00:08:44.430
You've got to put the whole thing in
quotes, so it's just one argument.

133
00:08:44.430 --> 00:08:49.247
So this is argv2, this is me just
collecting whatever the hell you

134
00:08:49.247 --> 00:08:52.008
typed after the second thing, okay?

135
00:08:52.008 --> 00:08:55.700
So that's what that is or
if you don't put anything, just hi or

136
00:08:55.700 --> 00:09:00.661
whatever you want as a default, and then
here's the YouTube video to that podcast.

137
00:09:00.661 --> 00:09:01.879
I'm just gonna copy that.

138
00:09:04.738 --> 00:09:11.709
Click on it, you can clearly see it is
that YouTube video there, so we're good,

139
00:09:11.709 --> 00:09:17.570
and next thing we wanna do is create
a function that creates a store.

140
00:09:17.570 --> 00:09:21.730
This should be very familiar,
we just did this, right, so let's do that.

141
00:09:23.560 --> 00:09:27.800
CreateStore, it takes in some docs that
are already formatted from somewhere else.

142
00:09:27.800 --> 00:09:32.554
And we're just gonna make our
memory vector store from docs.

143
00:09:32.554 --> 00:09:35.360
And we're gonna pass in the docs, and

144
00:09:35.360 --> 00:09:41.425
then we're gonna pass in a new OpenAI
embeddings, literally what we did before.

