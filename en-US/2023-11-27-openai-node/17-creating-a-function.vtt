WEBVTT

1
00:00:00.027 --> 00:00:01.168
That is not okay.

2
00:00:01.168 --> 00:00:01.925
Let's do this.

3
00:00:01.925 --> 00:00:04.553
So function calling.

4
00:00:04.553 --> 00:00:05.781
Let's do that.

5
00:00:05.781 --> 00:00:07.259
So let's set up our code.

6
00:00:07.259 --> 00:00:13.823
So first thing is I'll make
a file called functions.js, okay?

7
00:00:13.823 --> 00:00:20.959
And we're gonna import from openai,
the file that I created.

8
00:00:20.959 --> 00:00:22.584
And we're gonna get openai.

9
00:00:22.584 --> 00:00:23.315
Cool, and we're gonna do all this
thing called Advanced Calculator.

10
00:00:23.315 --> 00:00:28.321
In this demo, I'm just gonna walk through

11
00:00:28.321 --> 00:00:33.478
how we can teach GPT how
to do advanced math.

12
00:00:33.478 --> 00:00:35.257
It actually is not that good at math.

13
00:00:35.257 --> 00:00:39.109
It seems like it is, but
if you ask it to do some quadratic form or

14
00:00:39.109 --> 00:00:43.356
something like that, it'll just
live straight through its teeth.

15
00:00:43.356 --> 00:00:45.642
So you probably wanna help it and
like teach to do math, but

16
00:00:45.642 --> 00:00:47.844
we can actually write a function
to teach you anything.

17
00:00:47.844 --> 00:00:51.036
And if I got time, I'll write
a function that talks to another AI and

18
00:00:51.036 --> 00:00:52.101
have it do something.

19
00:00:52.101 --> 00:00:57.706
And then you can see just how
crazy it gets cuz it's unexpected.

20
00:00:57.706 --> 00:00:58.418
Cool, okay.

21
00:00:58.418 --> 00:00:59.421
So we got that.

22
00:00:59.421 --> 00:01:03.483
I'm gonna download that thing.

23
00:01:03.483 --> 00:01:04.857
Events calculator, what is it?

24
00:01:04.857 --> 00:01:06.207
It's pretty cool.

25
00:01:06.207 --> 00:01:10.288
It takes a mathematical
expression as a string and

26
00:01:10.288 --> 00:01:15.058
then it evaluates it,
which is exactly what I would want.

27
00:01:15.058 --> 00:01:17.112
So it could take something like this,
right?

28
00:01:17.112 --> 00:01:20.955
And then evaluate it.

29
00:01:20.955 --> 00:01:23.495
Who made this?

30
00:01:23.495 --> 00:01:25.105
Who sat down and
was like I'm gonna do this.

31
00:01:25.105 --> 00:01:26.434
Good for them.

32
00:01:26.434 --> 00:01:32.118
But this is great cuz the AI will probably
respond with something like this and

33
00:01:32.118 --> 00:01:34.926
we just wanna feed that to a function.

34
00:01:34.926 --> 00:01:36.161
And this is the function.
So it's great.

35
00:01:36.161 --> 00:01:37.246
It works out for us.

36
00:01:37.246 --> 00:01:41.487
So we're gonna teach the AI
how to evaluate advanced math.

37
00:01:41.487 --> 00:01:42.501
But we can teach it anything.

38
00:01:42.501 --> 00:01:44.822
We can teach it anything
a function can do.

39
00:01:44.822 --> 00:01:46.072
Just think about that.

40
00:01:46.072 --> 00:01:51.164
Any function that you can write ever in
your life, you can have the AI do that.

41
00:01:51.164 --> 00:01:55.053
So there's literally an infinite
amount of possibilities.

42
00:01:55.053 --> 00:01:59.258
You can have this thing, you have
a function that sends back an entire React

43
00:01:59.258 --> 00:02:01.278
app, it can do that, [LAUGH] right?

44
00:02:01.278 --> 00:02:02.772
There's nothing it can't do.

45
00:02:02.772 --> 00:02:06.349
So let's do that.

46
00:02:06.349 --> 00:02:10.673
So we'll import that,
important math from that thing.

47
00:02:10.673 --> 00:02:13.987
And then we'll make a question.

48
00:02:18.269 --> 00:02:18.776
Oops.

49
00:02:21.119 --> 00:02:23.020
There we go.

50
00:02:23.020 --> 00:02:27.468
And same thing, process.argv2, or just,

51
00:02:27.468 --> 00:02:32.040
some default thing, doesn't really matter.

52
00:02:32.040 --> 00:02:32.796
We have that.

53
00:02:32.796 --> 00:02:36.717
And then what we wanna do is,
first, we're just going to, so,

54
00:02:36.717 --> 00:02:39.853
similar to the way we did chat,
we need a loop here.

55
00:02:39.853 --> 00:02:41.580
But we're not gonna
create a chat interface,

56
00:02:41.580 --> 00:02:43.136
we're just gonna have it run a function.

57
00:02:43.136 --> 00:02:45.489
So we don't need an in-and-out thing,

58
00:02:45.489 --> 00:02:49.737
we just needed to run on a loop because
it might need to make multiple calls.

59
00:02:49.737 --> 00:02:52.014
So, we'll do like a wild true here.

60
00:02:52.014 --> 00:02:54.396
But first,
let's just create our messages here.

61
00:02:54.396 --> 00:02:59.260
So, the first one is just gonna be
I just skip the system message.

62
00:02:59.260 --> 00:03:01.162
You can add a system message if you
want to, it doesn't really matter.

63
00:03:01.162 --> 00:03:04.208
I just get the system message and
I put our first message in here.

64
00:03:04.208 --> 00:03:10.199
It's gonna be whatever question
got typed in All right,

65
00:03:10.199 --> 00:03:15.596
so that's the beginning of the message
history is a question from us.

66
00:03:15.596 --> 00:03:17.013
And then from there,

67
00:03:17.013 --> 00:03:21.986
I need to create an object that is gonna
act like a router for our functions.

68
00:03:21.986 --> 00:03:26.915
Because, you'll see in a minute, the way
we know what function to run is because

69
00:03:26.915 --> 00:03:30.247
we towed GPT what is the name
of the function to run, and

70
00:03:30.247 --> 00:03:33.672
then we need to map that to
actual functions in our code.

71
00:03:33.672 --> 00:03:36.646
So, the best way to map things
is with a map, an object.

72
00:03:36.646 --> 00:03:37.785
So let's do that.

73
00:03:37.785 --> 00:03:40.151
I'm gonna do that.

74
00:03:41.415 --> 00:03:42.865
So in this case,
I'm gonna have one function.

75
00:03:42.865 --> 00:03:43.973
You can call it whatever you want.

76
00:03:43.973 --> 00:03:46.677
I'm just gonna call it calculate.

77
00:03:46.677 --> 00:03:51.860
And calculate is basically,
I don't know why I have async here.

78
00:03:51.860 --> 00:03:54.223
You don't need a async here.

79
00:03:54.223 --> 00:03:58.014
It's going to take,
this is totally up to us.

80
00:03:58.014 --> 00:04:02.635
I'm later on I'm gonna tell Open AI
that when you call calculate,

81
00:04:02.635 --> 00:04:07.432
you need to pass me an object with
a property on it called expression.

82
00:04:07.432 --> 00:04:09.876
It must be in a property
called expression.

83
00:04:09.876 --> 00:04:12.239
And it has to be like a string.

84
00:04:12.239 --> 00:04:16.074
I'm going to I'm going to give GPT
a schema on how to pass an argument to

85
00:04:16.074 --> 00:04:18.094
this function if it wants to call it.

86
00:04:18.094 --> 00:04:19.379
And it's up to you.

87
00:04:19.379 --> 00:04:20.442
It's a design choice.

88
00:04:20.442 --> 00:04:25.120
I'm choosing to accept an object with
a property on it called expression that's

89
00:04:25.120 --> 00:04:29.063
always gonna be a string because
that's what this function wants.

90
00:04:29.063 --> 00:04:31.201
This math that evaluate takes in a string.

91
00:04:31.201 --> 00:04:33.600
So it's just easy for
me to get that from GPT.

92
00:04:33.600 --> 00:04:36.490
If I got back a number, then I have to
figure out how to translate that number to

93
00:04:36.490 --> 00:04:37.662
a string and then feed it here.

94
00:04:37.662 --> 00:04:39.811
It's too much work.

95
00:04:39.811 --> 00:04:47.500
Okay, and then I'm just gonna return
math.evaluates, or what is it?

96
00:04:47.500 --> 00:04:51.739
Yeah, math.evaluate, and
then pass it that expression.

97
00:04:51.739 --> 00:04:54.786
And this is what I'm gonna
return back to ChatGPT.

98
00:04:54.786 --> 00:04:56.461
Whatever the result of that is.

99
00:04:56.461 --> 00:05:00.441
So we got our functions and eventually
you can add more functions here.

100
00:05:00.441 --> 00:05:02.738
Yeah, can add whatever functions you want.

101
00:05:02.738 --> 00:05:03.439
It's just a function.

