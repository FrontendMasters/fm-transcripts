WEBVTT

1
00:00:00.080 --> 00:00:04.004
Let's talk about the next one, which
is very similar to semantic search, but

2
00:00:04.004 --> 00:00:07.453
it just goes a step further,
which just makes it harder to deal with,

3
00:00:07.453 --> 00:00:09.200
but also pretty cool.

4
00:00:09.200 --> 00:00:10.420
And this one is Document QA.

5
00:00:11.460 --> 00:00:13.550
So we all know what a QA system is.

6
00:00:13.550 --> 00:00:15.030
I mean, you ask it a question.

7
00:00:15.030 --> 00:00:16.550
It gives you back an answer.

8
00:00:16.550 --> 00:00:19.830
Every website has an FAQ that
already has those things built out.

9
00:00:19.830 --> 00:00:21.170
This is just more life, right?

10
00:00:21.170 --> 00:00:22.300
It's literally a QA.

11
00:00:22.300 --> 00:00:25.840
So this is a little different
than search engines, right?

12
00:00:25.840 --> 00:00:32.110
So a search engine like Google is
gonna return links that you can go to,

13
00:00:32.110 --> 00:00:39.040
but they're not gonna tell you the answer
that you're looking for, right?

14
00:00:39.040 --> 00:00:42.436
Like if I'm searching for the weather,
I think this is a bad example,

15
00:00:42.436 --> 00:00:44.452
cuz Google does show you the weather now,

16
00:00:44.452 --> 00:00:48.038
and every other search engine will try
to show you a widget of the weather.

17
00:00:48.038 --> 00:00:49.872
But you could think of
that as a document QA.

18
00:00:49.872 --> 00:00:53.551
So what they're doing is they're going
somewhere, getting the weather and

19
00:00:53.551 --> 00:00:55.655
they're answering it for you right there.

20
00:00:55.655 --> 00:00:59.947
Versus traditionally, they would show
you the links of places on which you can

21
00:00:59.947 --> 00:01:01.710
go find the weather yourself.

22
00:01:01.710 --> 00:01:03.190
That would be more like a search.

23
00:01:03.190 --> 00:01:05.050
Like, you search for weather, here.

24
00:01:05.050 --> 00:01:06.410
Here's the results.

25
00:01:06.410 --> 00:01:08.486
Go click on it and
figure out how the weathers there.

26
00:01:08.486 --> 00:01:11.310
A QA is like,
we already figured it out for you.

27
00:01:11.310 --> 00:01:15.660
We clicked on that link, we got the data
and then here is the weather, right?

28
00:01:15.660 --> 00:01:17.230
So that's what a Document QA is.

29
00:01:17.230 --> 00:01:21.043
It's more of like,
here are the hits versus like,

30
00:01:21.043 --> 00:01:24.420
here's the answer that you wanted, right?

31
00:01:24.420 --> 00:01:29.745
And then it's also, typically, whereas
a search might be indexed across multiple

32
00:01:29.745 --> 00:01:35.340
things, like in our case, movie titles,
a Document QA could just be one thing.

33
00:01:35.340 --> 00:01:38.280
It could just be one movie, and
I want to do QA on one movie.

34
00:01:38.280 --> 00:01:40.570
I wanna ask questions about that movie,
right?

35
00:01:40.570 --> 00:01:43.150
It's not always against multiple things.

36
00:01:43.150 --> 00:01:44.070
And that's the difference.

37
00:01:44.070 --> 00:01:48.038
You wouldn't need to search if
you were only indexing one movie.

38
00:01:48.038 --> 00:01:50.020
If you only had one
movie in your database,

39
00:01:50.020 --> 00:01:53.450
you wouldn't need a semantic search,
you only have one.

40
00:01:53.450 --> 00:01:57.199
But you could definitely make
a Document QA about that movie and

41
00:01:57.199 --> 00:01:58.690
ask questions about it.

42
00:01:58.690 --> 00:02:02.173
If you have a wiki page about that movie
and you index that, that's great for

43
00:02:02.173 --> 00:02:04.220
Document QA, terrible for search.

44
00:02:04.220 --> 00:02:07.327
Okay, so some of the use cases,
like I said, knowledge bases and wikis.

45
00:02:07.327 --> 00:02:10.057
If you have a wiki, your company, and
you wanna be able to ask questions on

46
00:02:10.057 --> 00:02:13.139
the wiki, like, for instance, you guys
have an engineering style guide of like,

47
00:02:13.139 --> 00:02:14.880
this is how you need to
write these functions.

48
00:02:14.880 --> 00:02:16.080
This is how this stuff should work.

49
00:02:16.080 --> 00:02:18.880
Here's our pull requests thing.

50
00:02:18.880 --> 00:02:19.990
This is great for that.

51
00:02:19.990 --> 00:02:21.457
You can just have a bot.

52
00:02:21.457 --> 00:02:26.759
Imagine a Slack bot that knew everything
that onboarding engineer needed to know,

53
00:02:26.759 --> 00:02:28.587
and they can just talk to it.

54
00:02:28.587 --> 00:02:30.120
And like, how do I get started?

55
00:02:30.120 --> 00:02:32.160
How do I set up the repo?

56
00:02:32.160 --> 00:02:34.360
What's the best way to write functions?

57
00:02:34.360 --> 00:02:35.680
Do we use semicolon, right?

58
00:02:35.680 --> 00:02:39.479
If it was indexed on that data, it would
answer those questions perfectly and

59
00:02:39.479 --> 00:02:43.571
accurately, otherwise it wouldn't give you
an answer at all cuz it can't give you

60
00:02:43.571 --> 00:02:46.150
an answer that isn't based off reality.

61
00:02:46.150 --> 00:02:48.371
Or at least [LAUGH] that's
how you want it to be.

62
00:02:48.371 --> 00:02:52.220
How you get there is
a whole nother question.

63
00:02:52.220 --> 00:02:53.060
So it's good for that.

64
00:02:53.060 --> 00:02:54.760
Customer support's really good too.

65
00:02:54.760 --> 00:02:59.904
You can have like, we're gonna make a bot
that is indexed on all of our customer

66
00:02:59.904 --> 00:03:04.997
support policies and everything,
our warranty, our legal policy, whatever.

67
00:03:04.997 --> 00:03:06.609
So when someone sends in an email,

68
00:03:06.609 --> 00:03:10.555
we can take that email, turn that into a
question, run that against our policy, and

69
00:03:10.555 --> 00:03:13.666
we can get back some type of response
that if we feel safe about it and

70
00:03:13.666 --> 00:03:17.120
we feel good about it,
we can just automatically send that back.

71
00:03:17.120 --> 00:03:19.909
Or we can just put it in draft and
a human just has to either go add to it or

72
00:03:19.909 --> 00:03:21.900
clean it up and
then they can send it themselves.

73
00:03:21.900 --> 00:03:23.470
But it does a lot of the work.

74
00:03:23.470 --> 00:03:28.111
So, in fact, there are a lot of
customer support AI tools out

75
00:03:28.111 --> 00:03:32.210
there that do a lot of this,
because it works so well.

76
00:03:33.310 --> 00:03:35.129
Research and
academia actually use this a lot.

77
00:03:35.129 --> 00:03:38.266
Whenever new whitepaper that comes out,
if you don't know what a whitepaper is,

78
00:03:38.266 --> 00:03:40.360
it's just like a scientific paper.

79
00:03:40.360 --> 00:03:43.710
It's just like a format in which
scientists released their studies.

80
00:03:43.710 --> 00:03:44.385
It's called a whitepaper.

81
00:03:44.385 --> 00:03:48.911
And I'll always go look at a lot of
the AI whitepapers that come out.

82
00:03:48.911 --> 00:03:52.265
And I just can't make sense of them,
so I will take it, and

83
00:03:52.265 --> 00:03:55.370
I will stick it in ChatGPT,
and then I can do QA on it.

84
00:03:55.370 --> 00:03:57.650
I can be like, okay,
how is this different than this?

85
00:03:57.650 --> 00:03:58.790
Explain this to me.

86
00:03:58.790 --> 00:03:59.790
What does this mean?

87
00:03:59.790 --> 00:04:00.740
How does this work?

88
00:04:00.740 --> 00:04:03.820
And that way I'll learn a lot faster than
just like reading the entire white paper,

89
00:04:03.820 --> 00:04:05.096
which confuses the hell out of me,

90
00:04:05.096 --> 00:04:07.930
because I don't know any of
the stuff they're talking about.

91
00:04:07.930 --> 00:04:11.265
So I use this a lot for
a lot of science stuff, and before GPT,

92
00:04:11.265 --> 00:04:13.630
I was never able to
learn any of that stuff.

93
00:04:15.060 --> 00:04:16.290
Legal and compliance is really good.

94
00:04:16.290 --> 00:04:18.290
Obviously, there's a lot
of information there.

95
00:04:18.290 --> 00:04:21.070
I talked about some of the policies and
things you can do there.

96
00:04:21.070 --> 00:04:21.850
So, it's pretty good.

97
00:04:21.850 --> 00:04:23.010
It's efficient.

98
00:04:23.010 --> 00:04:28.110
It can be accurate, which eliminates
the hallucination problem, right?

99
00:04:28.110 --> 00:04:31.920
So now if there's a source of truth
in which the AI has to pull from,

100
00:04:31.920 --> 00:04:35.950
it helps eliminate the fact that
the AI is just making shit up, right?

101
00:04:35.950 --> 00:04:37.700
We don't want you just making stuff up.

102
00:04:37.700 --> 00:04:41.050
We need you to answer
from this truth here.

103
00:04:41.050 --> 00:04:43.910
And it is actually pretty scalable.

104
00:04:43.910 --> 00:04:48.380
You can handle a lot of stuff here because
you're guiding it towards a direction.

105
00:04:48.380 --> 00:04:52.547
You're using it that way versus it just
trying to figure stuff out without any

106
00:04:52.547 --> 00:04:53.260
direction.

107
00:04:53.260 --> 00:04:57.779
So the more you can steer the AI,
the more efficient it'll be, and

108
00:04:57.779 --> 00:05:02.071
the more accurate it will be,
but the less flexible it'll be.

109
00:05:02.071 --> 00:05:05.690
But that's fine cuz you probably don't
want it to be flexible in a Document QA.

110
00:05:05.690 --> 00:05:06.870
You want it to be accurate.

111
00:05:06.870 --> 00:05:07.910
You don't want it to be flexible.

112
00:05:07.910 --> 00:05:10.590
You want it to be sure and exact.

113
00:05:10.590 --> 00:05:14.082
Imagine if you were a doctor looking
up diagnosis and it was like, well,

114
00:05:14.082 --> 00:05:17.990
I'm kind of flexible on my answer on
what this diag, no, no, that's not good.

115
00:05:17.990 --> 00:05:20.300
I want it to be accurate and factual.

116
00:05:20.300 --> 00:05:21.700
I don't want you to be flexible here.

117
00:05:21.700 --> 00:05:25.090
Whereas like, hey, help me come
up with a children's book title.

118
00:05:25.090 --> 00:05:26.480
Yeah, please be flexible.

119
00:05:26.480 --> 00:05:28.163
Show me something creative here.

