WEBVTT

1
00:00:00.210 --> 00:00:01.630
We all know what search is, right?

2
00:00:01.630 --> 00:00:05.262
You've built search or you've seen search
built or you've interacted with search.

3
00:00:05.262 --> 00:00:06.806
There's so many ways around it.

4
00:00:06.806 --> 00:00:08.230
I mean, let's start from the beginning.

5
00:00:08.230 --> 00:00:13.084
We know search engines, basically,
something like Google or Bing or

6
00:00:13.084 --> 00:00:15.567
Yahoo, those are search engines.

7
00:00:15.567 --> 00:00:19.881
And what they try to do is they try to
find the most relevant thing based off

8
00:00:19.881 --> 00:00:22.162
whatever query you typed in, right?

9
00:00:22.162 --> 00:00:23.650
And that's how it started.

10
00:00:23.650 --> 00:00:29.106
So Google has its page rank score,
which ranks pages

11
00:00:29.106 --> 00:00:34.450
based off of how many other
good links they link to.

12
00:00:34.450 --> 00:00:37.927
So the more links you link to,
the higher your page score, which is funny

13
00:00:37.927 --> 00:00:41.520
because the guy who created it was
Larry Page, but they're also on pages.

14
00:00:41.520 --> 00:00:42.526
I think it's pretty funny.

15
00:00:42.526 --> 00:00:46.702
And, it started off as that,
it might have evolved passed in, but

16
00:00:46.702 --> 00:00:48.600
they try to figure that out.

17
00:00:48.600 --> 00:00:49.510
That's one search engine.

18
00:00:49.510 --> 00:00:51.255
You might be on Amazon searching for
a product,

19
00:00:51.255 --> 00:00:52.790
that's another search engine, right?

20
00:00:52.790 --> 00:00:56.108
You might have built some
things where you do faceting,

21
00:00:56.108 --> 00:01:00.493
which is, check this filter,
check this filter, uncheck this filter.

22
00:01:00.493 --> 00:01:04.621
When you're searching for clothes on
a website or something, this size,

23
00:01:04.621 --> 00:01:08.831
this color, pants, and you might
check those, that's called faceting.

24
00:01:08.831 --> 00:01:14.832
You have string matching, so you're just
doing I'm filtering off of whether or

25
00:01:14.832 --> 00:01:18.287
not this string is a subset
of another string.

26
00:01:18.287 --> 00:01:21.790
There's so many ways to do that
type of filtering in search.

27
00:01:21.790 --> 00:01:28.379
But when you start adding AI to search,
and you start thinking about semantics and

28
00:01:28.379 --> 00:01:32.690
meaning behind the text,
this goes back pretty far.

29
00:01:32.690 --> 00:01:35.235
So if you think about how Google works,

30
00:01:35.235 --> 00:01:38.250
Google can autocomplete as you type,
right?

31
00:01:38.250 --> 00:01:40.532
It can suggest things that you type for,

32
00:01:40.532 --> 00:01:43.160
based off of what other
people are typing for.

33
00:01:43.160 --> 00:01:47.150
So it's trying to figure out the intent
on what it is that you're looking for.

34
00:01:47.150 --> 00:01:48.926
So there's a little bit of AI there.

35
00:01:48.926 --> 00:01:53.230
And there's a lot of systems that go into
that, that create that personalization.

36
00:01:53.230 --> 00:01:57.971
But I can promise you, it requires
billions and billions of points of data,

37
00:01:57.971 --> 00:01:59.762
talking beyond terabytes.

38
00:01:59.762 --> 00:02:04.674
And it requires a lot of training, a lot
of resources, and a lot of models working

39
00:02:04.674 --> 00:02:09.500
together, and even better yet, a lot
of really smart people to build that.

40
00:02:09.500 --> 00:02:11.970
It's not something that's one person did,

41
00:02:11.970 --> 00:02:15.090
there's a huge team of people
trying to figure that out.

42
00:02:15.090 --> 00:02:17.923
And they need a lot of different data
points from things that you click on,

43
00:02:17.923 --> 00:02:19.946
from ads that you look at,
from people in your area.

44
00:02:19.946 --> 00:02:21.890
There's a lot of stuff that goes into it.

45
00:02:21.890 --> 00:02:25.566
So it's not that trivial to make.

46
00:02:25.566 --> 00:02:27.900
So enter semantic search.

47
00:02:27.900 --> 00:02:32.397
So semantic search is basically
where you can search on how

48
00:02:32.397 --> 00:02:35.977
things relate semantically, as in meaning,

49
00:02:35.977 --> 00:02:40.311
not just whether or
not it's a substring of something.

50
00:02:40.311 --> 00:02:44.800
Like, I wanna know if the words that I'm
typing in are similar in meaning to some

51
00:02:44.800 --> 00:02:48.091
other words that this system
might be indexed on, right?

52
00:02:48.091 --> 00:02:50.881
So if you are indexed on, I don't know,

53
00:02:50.881 --> 00:02:55.723
you have a system that's indexed on
pets and I type in cute and fluffy,

54
00:02:55.723 --> 00:03:00.564
I would hope to get back some results
that didn't have reptiles in it,

55
00:03:00.564 --> 00:03:04.199
because reptiles aren't cute and
fluffy, right?

56
00:03:04.199 --> 00:03:07.332
Whereas even if the reptile
had the word cute and

57
00:03:07.332 --> 00:03:12.264
fluffy in it, to talk about how it
wasn't cute and fluffy, I would imagine

58
00:03:12.264 --> 00:03:16.986
it still would not come back,
because its meaning is not that, right?

59
00:03:16.986 --> 00:03:20.590
There's some semantics behind it
that only a human would understand,

60
00:03:20.590 --> 00:03:23.894
because they understand context,
they know what a reptile is and

61
00:03:23.894 --> 00:03:25.530
they understand that, right?

62
00:03:25.530 --> 00:03:28.630
So it's like, that's more of
a word of semantic searches.

63
00:03:28.630 --> 00:03:29.981
It's not good for everything.

64
00:03:29.981 --> 00:03:32.669
If you are only searching for one word,

65
00:03:32.669 --> 00:03:36.340
semantic search is
actually terrible at that.

66
00:03:36.340 --> 00:03:37.710
It's too slow.

67
00:03:37.710 --> 00:03:40.190
And if you're searching for one word,
you're probably looking for

68
00:03:40.190 --> 00:03:41.439
something that has that one word.

69
00:03:41.439 --> 00:03:45.682
Like if I hit Cmd+F right now, and
I search for one word, like how,

70
00:03:45.682 --> 00:03:49.420
I'll want to go to all
the results that say how.

71
00:03:49.420 --> 00:03:54.903
I don't want to find results
that feel like I'm saying how.

72
00:03:54.903 --> 00:03:57.120
No, I wanna go exactly to how, right?

73
00:03:57.120 --> 00:04:02.048
If I type in search, I wanna go exactly
to all the instances of search and

74
00:04:02.048 --> 00:04:07.160
not something that says find,
cuz it means something similar to search.

75
00:04:07.160 --> 00:04:09.906
So semantic search isn't always the best,
specifically for

76
00:04:09.906 --> 00:04:11.980
things where I'm looking for
an exact thing.

77
00:04:11.980 --> 00:04:14.971
So exact matching is still better there.

78
00:04:14.971 --> 00:04:19.897
But it's really great for, I wanna
understand the meaning behind two things

79
00:04:19.897 --> 00:04:24.540
or more than one thing and how they
relate and I wanna find stuff that way.

80
00:04:24.540 --> 00:04:28.444
So that's where it's good to do that.

81
00:04:28.444 --> 00:04:32.128
And a really good example is
a recommendation system where you're

82
00:04:32.128 --> 00:04:35.498
recommending things based off
someone's viewing habits.

83
00:04:35.498 --> 00:04:36.753
If you're in Netflix and

84
00:04:36.753 --> 00:04:40.356
you wanna show people some more titles
based off their viewing habits.

85
00:04:40.356 --> 00:04:44.900
You can semantically see how something
they've watched might be related to

86
00:04:44.900 --> 00:04:49.728
something that they haven't watched,
beyond just the category that it's in,

87
00:04:49.728 --> 00:04:54.272
the director that shot it, the actors
that are in it, the genre of the film,

88
00:04:54.272 --> 00:04:55.486
it's beyond that.

89
00:04:55.486 --> 00:04:59.281
It's the plot, right, the plot is
similar or the setting is similar or

90
00:04:59.281 --> 00:05:01.560
something like that, right?

91
00:05:01.560 --> 00:05:03.403
So that's semantic search.

92
00:05:03.403 --> 00:05:06.828
One good example of it just to show you.

93
00:05:06.828 --> 00:05:07.994
Let me see.

94
00:05:07.994 --> 00:05:12.750
If you go to LangChain,
which actually I'm glad I'm showing this,

95
00:05:12.750 --> 00:05:14.969
cuz we're gonna be using this.

96
00:05:14.969 --> 00:05:19.364
So if you go to LangChain,
which is an SDK, that's like,

97
00:05:19.364 --> 00:05:24.050
I don't know how to describe LangChain,
it's everything.

98
00:05:24.050 --> 00:05:29.700
[LAUGH] It's basically a very popular,
probably the most popular SDK around AI.

99
00:05:29.700 --> 00:05:34.240
So if you wanna build AI-powered apps,
right now we're just using the OpenAI SDK.

100
00:05:34.240 --> 00:05:36.889
LangChain is like,
it takes that to the next level.

101
00:05:36.889 --> 00:05:39.210
That chat interface that we had to create,

102
00:05:39.210 --> 00:05:43.536
they just have that as a method you can
just use, so you don't have to make that.

103
00:05:43.536 --> 00:05:47.224
And all those scaling issues that I
talked about, they handle a lot of them

104
00:05:47.224 --> 00:05:50.570
automatically for you,
you just kinda connect things together.

105
00:05:50.570 --> 00:05:52.630
So it's really cool.

106
00:05:52.630 --> 00:05:55.490
I started my journey using
LangChain on everything.

107
00:05:55.490 --> 00:05:57.886
I don't use as much anymore for
everything.

108
00:05:57.886 --> 00:06:00.427
There are some things that I always use
it for, there's other things I don't, but

109
00:06:00.427 --> 00:06:01.091
it's really great.

110
00:06:01.091 --> 00:06:04.050
I highly recommend diving into it and
we will be using it today.

111
00:06:04.050 --> 00:06:07.130
But anyway, their docs have
an example of semantic search.

112
00:06:07.130 --> 00:06:11.120
So if I click on search here, it's
powered by this thing called Mendable.

113
00:06:11.120 --> 00:06:15.578
Mendable is this product that allows
you to add semantic search to your,

114
00:06:15.578 --> 00:06:19.013
if you have a technical
product that as documentation,

115
00:06:19.013 --> 00:06:23.253
you can use Mendable to teach your
search about that documentation,

116
00:06:23.253 --> 00:06:27.006
to allow your users to search
on those things semantically.

117
00:06:27.006 --> 00:06:28.710
That's what Mendable is.

118
00:06:28.710 --> 00:06:33.883
So anyway, I can go in here,
I can be like, how.

119
00:06:33.883 --> 00:06:35.178
And it's like a hybrid.

120
00:06:35.178 --> 00:06:38.726
You can see right now it's doing
a text search here as I type,

121
00:06:38.726 --> 00:06:41.734
something a traditional search would do,
right?

122
00:06:41.734 --> 00:06:45.790
But when I hit Enter,
it's gonna do this semantic search.

123
00:06:45.790 --> 00:06:50.438
So how to create an agent.

124
00:06:50.438 --> 00:06:53.860
So if I hit that, you can see now
it's searching the documentation,

125
00:06:53.860 --> 00:06:58.750
it's trying to figure out the semantics
behind this, find the necessary context.

126
00:06:58.750 --> 00:07:04.030
And then it creates its own result
based off of that documentation.

127
00:07:04.030 --> 00:07:06.241
So this result is unique to this query.

128
00:07:06.241 --> 00:07:10.565
This is not as a result that
is already written somewhere.

129
00:07:10.565 --> 00:07:14.636
The AI is literally generating this
result in front of my eyes right now

130
00:07:14.636 --> 00:07:18.370
based off the documentation on
which it was indexed on, right?

131
00:07:18.370 --> 00:07:22.219
So this is a combination of
semantic search plus document QA,

132
00:07:22.219 --> 00:07:26.820
which we'll talk about later,
plus the hybrid traditional searching.

133
00:07:26.820 --> 00:07:29.503
So it's a combination of all the things,
but

134
00:07:29.503 --> 00:07:33.314
I just want you to see how different
this is versus just getting,

135
00:07:33.314 --> 00:07:38.057
as you saw those instant results as I
type, that's a different type of search.

136
00:07:38.057 --> 00:07:41.490
So yeah, this is a really good
example of semantic search.

137
00:07:41.490 --> 00:07:46.130
Yeah, we're not gonna build this [LAUGH],
but we're gonna build a foundation of

138
00:07:46.130 --> 00:07:49.623
this, and you're gonna understand
the insides of it, so.

139
00:07:49.623 --> 00:07:53.235
Cuz there's a lot that goes into
it to make that happen, and so

140
00:07:53.235 --> 00:07:54.566
let's talk about it.

