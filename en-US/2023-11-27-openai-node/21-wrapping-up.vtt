WEBVTT

1
00:00:00.100 --> 00:00:01.890
That was the last thing that
I wanted to cover today.

2
00:00:01.890 --> 00:00:06.496
So before I leave you all, I guess I'll
just walk through some additional things

3
00:00:06.496 --> 00:00:10.507
that you might wanna look at and
consider as you're building things.

4
00:00:10.507 --> 00:00:14.353
And just some cool products that
I feel comfortable talking about,

5
00:00:14.353 --> 00:00:18.140
because I'm not involved with them,
that you might like, okay?

6
00:00:18.140 --> 00:00:22.291
So, some things that you might
want to consider looking into is,

7
00:00:22.291 --> 00:00:25.690
I would play around with diffusion models,
as well.

8
00:00:25.690 --> 00:00:28.000
You've probably heard of DALL-E,
you've probably heard of stable diffusion.

9
00:00:28.000 --> 00:00:30.400
I highly recommend playing
around with those as well.

10
00:00:30.400 --> 00:00:33.716
If you have a GPU access at home,
or on your computer,

11
00:00:33.716 --> 00:00:36.466
I highly recommend
trying to get into that.

12
00:00:36.466 --> 00:00:38.970
And training some models on some stuff.

13
00:00:38.970 --> 00:00:43.928
It's actually incredibly intuitive, and
fun, and complicated, and very tedious,

14
00:00:43.928 --> 00:00:45.230
but you learn a lot.

15
00:00:45.230 --> 00:00:49.610
I learned a lot through AI by having
to train a diffusion model on my face.

16
00:00:49.610 --> 00:00:51.985
And I actually learned so much that way.

17
00:00:51.985 --> 00:00:56.833
All that pain that I had to go through
to create something that was terrible,

18
00:00:56.833 --> 00:00:59.360
was worth it and I leveled up a lot.

19
00:00:59.360 --> 00:01:02.550
And it helped me with like a lot
of this ChatGPT stuff as well.

20
00:01:02.550 --> 00:01:04.680
So I recommend that.

21
00:01:04.680 --> 00:01:10.110
I also recommend looking
more into the OpenAI API.

22
00:01:10.110 --> 00:01:12.621
They have way more stuff
that we did not talk about.

23
00:01:15.074 --> 00:01:17.830
We only talked about completions and
things like that.

24
00:01:17.830 --> 00:01:22.710
But if you go look at their API,
there's a lot of stuff in here.

25
00:01:22.710 --> 00:01:23.750
They have audio.

26
00:01:23.750 --> 00:01:27.000
We talked about embeddings,
here's fine-tuning.

27
00:01:27.000 --> 00:01:29.170
People want to talk about fine-tuning,
here it is.

28
00:01:29.170 --> 00:01:32.170
You can do fine-tuning.

29
00:01:32.170 --> 00:01:33.290
There's a lot of stuff you can do.

30
00:01:33.290 --> 00:01:34.910
They'll give you your own model,
basically.

31
00:01:34.910 --> 00:01:38.918
You can add files there that
you can use for fine-tuning.

32
00:01:38.918 --> 00:01:42.290
Obviously, there's DALL-E for
images, they have that.

33
00:01:42.290 --> 00:01:44.259
And then, here's the list of models.

34
00:01:44.259 --> 00:01:45.790
There's just a lot of stuff.

35
00:01:45.790 --> 00:01:47.310
The new one is moderation.

36
00:01:47.310 --> 00:01:51.507
This is how you can create moderation
policies and keep them up to date.

37
00:01:51.507 --> 00:01:54.909
And you can really figure
out what people are saying.

38
00:01:54.909 --> 00:01:59.689
This is great if you're using AI to,
I don't know, moderate a kid's platform,

39
00:01:59.689 --> 00:02:00.950
moderate a chat app.

40
00:02:02.390 --> 00:02:05.058
Something like that,
this is perfect for it.

41
00:02:05.058 --> 00:02:09.120
So there is a lot of stuff here,
that I think it's worth looking at.

42
00:02:09.120 --> 00:02:13.383
The other thing I would look into,
I guess, in the world of AI

43
00:02:13.383 --> 00:02:18.170
this is relatively old, but
I would look into things like baby AGI.

44
00:02:21.560 --> 00:02:25.420
This is scary, baby AGI,
not this one, this one.

45
00:02:25.420 --> 00:02:29.340
So, this is one of the first
autonomous agents ever created.

46
00:02:30.480 --> 00:02:31.685
Here's a diagram of how it works.

47
00:02:31.685 --> 00:02:37.204
[LAUGH] If you want to figure it out,
but there's basically four agents.

48
00:02:37.204 --> 00:02:41.250
So someone sends in a,
they have some objective.

49
00:02:41.250 --> 00:02:46.776
There's an execution agent that does
some stuff with the vector database for

50
00:02:46.776 --> 00:02:48.910
memory, and then a contact.

51
00:02:48.910 --> 00:02:50.270
It's just, it's a lot.

52
00:02:50.270 --> 00:02:55.212
It's a bunch of AI entities talking to
each other, along with vector stores for

53
00:02:55.212 --> 00:02:57.941
memory, and
task lists that get created and

54
00:02:57.941 --> 00:03:01.500
prioritized on a loop until
the objective is completed.

55
00:03:02.520 --> 00:03:04.200
And add function calling into that.

56
00:03:04.200 --> 00:03:05.720
And yeah, there you go.

57
00:03:05.720 --> 00:03:07.113
That's a that's an AGI agent.

58
00:03:07.113 --> 00:03:08.595
It's like one of the first ones.

59
00:03:08.595 --> 00:03:10.470
There's a lot more now.

60
00:03:10.470 --> 00:03:15.403
But I highly recommend going down that
rabbit hole because it's fascinating.

61
00:03:15.403 --> 00:03:18.386
Auto GPT is probably the better one,
I think,

62
00:03:18.386 --> 00:03:21.220
which is heavily based off of baby AGI.

63
00:03:21.220 --> 00:03:22.824
There's a website called AGBT now?

64
00:03:22.824 --> 00:03:24.010
Okay.

65
00:03:24.010 --> 00:03:24.880
Here we go, auto GPT.

66
00:03:25.890 --> 00:03:28.940
This one is absolutely insane.

67
00:03:28.940 --> 00:03:32.219
I actually use this a lot
to find shoes online,

68
00:03:32.219 --> 00:03:35.342
because it does a really
good job with that.

69
00:03:35.342 --> 00:03:40.793
Pretty much any bill that they pay online
now, this thing pays it for me now.

70
00:03:40.793 --> 00:03:42.351
I don't do it anymore.

71
00:03:42.351 --> 00:03:47.590
And some other research-based things,
like, go research this market for me.

72
00:03:47.590 --> 00:03:51.085
And then I'll come back in two minutes,
and it has a really good report, or

73
00:03:51.085 --> 00:03:54.250
a good enough report,
because I taught it how to go to Google.

74
00:03:54.250 --> 00:03:55.610
It can think about it.

75
00:03:55.610 --> 00:03:57.841
It can go to my notes and
see things that I care about, and

76
00:03:57.841 --> 00:04:00.040
it'll make sure to cover those things.

77
00:04:00.040 --> 00:04:03.497
And it'll get its work checked by
another agent that is tuned on different

78
00:04:03.497 --> 00:04:05.460
instructions that I gave it.

79
00:04:05.460 --> 00:04:06.310
It's pretty good.

80
00:04:06.310 --> 00:04:07.290
It works pretty well.

81
00:04:07.290 --> 00:04:07.995
It's kind of scary.

82
00:04:07.995 --> 00:04:13.100
[LAUGH] And it cost me like,
I don't know, two cents to do it, maybe.

83
00:04:13.100 --> 00:04:14.840
So it's pretty cool.

84
00:04:14.840 --> 00:04:17.020
So yeah, check that out.

85
00:04:17.020 --> 00:04:20.700
And then for some cool products,
I talked about cursor a little bit.

86
00:04:20.700 --> 00:04:22.100
This is really cool.

87
00:04:22.100 --> 00:04:23.490
You can do things like this.

88
00:04:23.490 --> 00:04:26.250
I can be like, I don't know, fix this.

89
00:04:26.250 --> 00:04:28.590
I'm not even going to give it any context,
just fix this.

90
00:04:29.740 --> 00:04:33.670
And I don't know, it's going to go
line by line and try to fix this.

91
00:04:33.670 --> 00:04:36.490
I don't think it's going to fix anything,
because I think it works.

92
00:04:36.490 --> 00:04:39.530
But it works pretty well when
you ask it to do something.

93
00:04:40.980 --> 00:04:42.190
What did it not like there?

94
00:04:44.280 --> 00:04:45.379
&gt;&gt; Took away the arrow functions.

95
00:04:46.480 --> 00:04:47.000
&gt;&gt; Really?

96
00:04:48.650 --> 00:04:49.910
No, it added arrow functions.

97
00:04:51.420 --> 00:04:52.130
I know why.

98
00:04:52.130 --> 00:04:54.790
I have in the system here,
I prefer arrow functions.

99
00:04:54.790 --> 00:04:56.900
So it went and
added arrow functions to everything.

100
00:04:56.900 --> 00:04:59.830
I specifically said I
prefer arrow functions.

101
00:04:59.830 --> 00:05:01.990
So it did that, where did I put that at?

102
00:05:04.140 --> 00:05:04.660
Not here.

103
00:05:07.340 --> 00:05:09.770
Let's see,
I forgot where you can look to see.

104
00:05:11.542 --> 00:05:12.158
Yeah, here we go.

105
00:05:14.872 --> 00:05:15.384
No, I forgot.

106
00:05:15.384 --> 00:05:18.840
There's a way where you can write a system
prompt for this thing, and I wrote one.

107
00:05:21.014 --> 00:05:21.560
Here we go.

108
00:05:21.560 --> 00:05:24.230
Always use functional react
components as arrow functions.

109
00:05:24.230 --> 00:05:27.110
So, it's not a react component, but
I guess it saw that I like that.

110
00:05:27.110 --> 00:05:28.220
So it did it.

111
00:05:28.220 --> 00:05:30.976
You see right now, it's trying to create
an index on my entire code base so

112
00:05:30.976 --> 00:05:32.730
it can better answer questions.

113
00:05:32.730 --> 00:05:35.861
And it can also index any website you
give it, which includes documentation.

114
00:05:35.861 --> 00:05:39.310
Like here, go index this website, and
it'll go learn the whole website.

115
00:05:39.310 --> 00:05:41.677
So you can reference it here,
in your stuff.

116
00:05:41.677 --> 00:05:43.787
So it's like a great way to be like,

117
00:05:43.787 --> 00:05:47.712
I need to teach this thing Python right
quick, which should already know.

118
00:05:47.712 --> 00:05:50.686
Or, I need to teach it this RubyGem or
this NPM package, or

119
00:05:50.686 --> 00:05:51.973
something got updated.

120
00:05:51.973 --> 00:05:54.124
Go index it, come back five minutes, and

121
00:05:54.124 --> 00:05:57.200
now you can have it generate
code based off that.

122
00:05:57.200 --> 00:05:59.720
What you can't do in ChatGPT or Copilot.

123
00:05:59.720 --> 00:06:01.460
I don't think you can do
that in Copilot either.

124
00:06:01.460 --> 00:06:03.720
So, that part's pretty cool.

125
00:06:03.720 --> 00:06:07.927
&gt;&gt; Would the code from this course
be able to be run in a server

126
00:06:07.927 --> 00:06:10.288
side handler in next?

127
00:06:10.288 --> 00:06:12.227
&gt;&gt; Yes, all the code from this course.

128
00:06:12.227 --> 00:06:16.108
Not only can it run on a server side,
it can run on the edge.

129
00:06:16.108 --> 00:06:17.890
It could run in the browser.

130
00:06:19.120 --> 00:06:21.730
All this code can run in the browser,
can run on the edge.

131
00:06:21.730 --> 00:06:25.376
Because, yeah,
we're using in-memory vector store.

132
00:06:25.376 --> 00:06:26.186
So, yeah,

133
00:06:26.186 --> 00:06:31.375
this works in every single environment
that JavaScript works in right now.

134
00:06:31.375 --> 00:06:35.174
&gt;&gt; Maybe the hard part of that is
keeping your server-side keys safe.

135
00:06:35.174 --> 00:06:38.069
&gt;&gt; Yeah, yeah, hold on, yeah.

136
00:06:38.069 --> 00:06:40.525
I'm not advocating to
put your keys out there.

137
00:06:40.525 --> 00:06:43.348
But yes, if you can hide your keys,
then yeah, for sure.

138
00:06:43.348 --> 00:06:46.800
But yeah,
they've already thought about this, right?

139
00:06:46.800 --> 00:06:51.470
So, OpenAI on the Edge, that's a thing.

140
00:06:51.470 --> 00:06:55.320
I mean,
there's a million packages for this.

141
00:06:55.320 --> 00:06:56.440
It just works well.

142
00:06:56.440 --> 00:06:58.110
You can even stream from the Edge.

143
00:06:58.110 --> 00:07:02.084
You have Vercel AI,
which is NPM install AI.

144
00:07:02.084 --> 00:07:04.342
That works from the Edge.

145
00:07:04.342 --> 00:07:07.006
There's a lot of things that,

146
00:07:07.006 --> 00:07:12.033
where you can get this to work
pretty much anywhere, yes.

147
00:07:14.361 --> 00:07:17.509
&gt;&gt; When would it be better to use
something like Zod for structured output,

148
00:07:17.509 --> 00:07:18.650
rather than not using it?

149
00:07:19.740 --> 00:07:21.348
&gt;&gt; Okay let's talk about that.

150
00:07:21.348 --> 00:07:27.750
So, Zod is a schema library
that helps you write schemas.

151
00:07:27.750 --> 00:07:30.740
So, okay, I gotta unpack this,
'cause there's a lot.

152
00:07:30.740 --> 00:07:33.020
So LangChain uses Zod.

153
00:07:34.700 --> 00:07:36.650
Let's talk what happens
before a function call.

154
00:07:36.650 --> 00:07:38.400
Before a function calling came out,

155
00:07:38.400 --> 00:07:41.231
you would use something like
Zot to get structured output.

156
00:07:41.231 --> 00:07:42.540
But you have to do that
with prompt engineering.

157
00:07:42.540 --> 00:07:46.660
So that basically means you would
create a Zod schema that describes

158
00:07:46.660 --> 00:07:49.630
the shape that you want,
very similar to this.

159
00:07:49.630 --> 00:07:52.079
It's very similar, just in a Zod way.

160
00:07:52.079 --> 00:07:55.459
And then LangChain would
take that Zod schema, and

161
00:07:55.459 --> 00:07:59.760
convert it to a set of instructions
inside of a prompt for you.

162
00:07:59.760 --> 00:08:03.613
It would try to make a prompt to coerce
the AI to always follow this structure.

163
00:08:03.613 --> 00:08:07.214
If you go look at the last course that
I made, building a full stack of AI,

164
00:08:07.214 --> 00:08:08.691
I talked about that exactly,

165
00:08:08.691 --> 00:08:12.137
because function calling didn't
come out when I built that course.

166
00:08:12.137 --> 00:08:15.913
So I had to use a Zod schema, and then I
think what happened to me in that course,

167
00:08:15.913 --> 00:08:17.974
as you can see,
I would run it sometimes and

168
00:08:17.974 --> 00:08:22.180
it would come back with structured data,
and then sometimes it wouldn't.

169
00:08:22.180 --> 00:08:26.129
So then LangChain thought of that, and
they're like, all right, we'll try to

170
00:08:26.129 --> 00:08:29.980
parse the output to see if it matches the
schema that you told us to put in there.

171
00:08:29.980 --> 00:08:34.486
If it doesn't, we'll automatically call
it again with an enforcer that says, hey,

172
00:08:34.486 --> 00:08:36.785
I told you to do this schema,
do it this way.

173
00:08:36.785 --> 00:08:39.430
And then usually that second time,
it'll do it.

174
00:08:39.430 --> 00:08:42.930
Basically, if you only use a Zod schema,
you're just doing prompt engineering,

175
00:08:42.930 --> 00:08:45.030
which means it's nondeterministic.

176
00:08:45.030 --> 00:08:46.837
Now that you have function calling,

177
00:08:46.837 --> 00:08:51.250
LangChain will just convert your Zod
schema into function calling schema.

178
00:08:51.250 --> 00:08:54.149
You're still using Zod, but now,
instead of doing prompt engineering,

179
00:08:54.149 --> 00:08:56.620
they'll just convert it
to function calling.

180
00:08:56.620 --> 00:08:58.987
But you can also just do function calling,
or

181
00:08:58.987 --> 00:09:02.920
you can convert your own Zod
schema to function calling.

182
00:09:02.920 --> 00:09:05.954
The only reason you wouldn't use function
calling or pop engineering is if you were

183
00:09:05.954 --> 00:09:09.100
using a model that didn't support
function calling, which they all don't.

184
00:09:09.100 --> 00:09:11.404
So that would be the only
reason I could think of.

185
00:09:11.404 --> 00:09:12.146
It's just that,

186
00:09:12.146 --> 00:09:15.780
the difference in function calling is
that it's fine-tuned on the model.

187
00:09:15.780 --> 00:09:17.380
It's not prompt engineering.

188
00:09:17.380 --> 00:09:21.284
So, there's two camps of how to get
back what you want in AI right now.

189
00:09:21.284 --> 00:09:23.250
One is prompt engineering.

190
00:09:23.250 --> 00:09:26.340
And that seems to be the way that
most people are doing it today.

191
00:09:26.340 --> 00:09:29.248
But I think most people are in agreement
that the future of getting what you want

192
00:09:29.248 --> 00:09:30.540
from AI is fine tuning.

193
00:09:30.540 --> 00:09:32.700
It's just not there yet.

194
00:09:32.700 --> 00:09:33.650
So, we're getting there.

195
00:09:34.830 --> 00:09:35.790
It's just not easy yet.

196
00:09:35.790 --> 00:09:38.852
So, yes, use a Zod schema if you have to.

197
00:09:38.852 --> 00:09:41.145
Otherwise, use function call.

198
00:09:41.145 --> 00:09:41.760
&gt;&gt; Okay.

199
00:09:41.760 --> 00:09:43.300
&gt;&gt; Awesome.
Well, this is it.

200
00:09:43.300 --> 00:09:44.890
This is what I wanted to cover today.

201
00:09:44.890 --> 00:09:47.639
Hopefully there were
enough examples here for

202
00:09:47.639 --> 00:09:52.571
you all to walk away with some idea of the
power, the flexibility, and just the pure

203
00:09:52.571 --> 00:09:57.080
amazingness of how to add generative
AI technologies to an application.

204
00:09:57.080 --> 00:10:00.257
Because again, this is really
just scratching the surface.

205
00:10:00.257 --> 00:10:03.241
Like I said,
even just combining some of these things,

206
00:10:03.241 --> 00:10:07.304
imagine if we took the search function,
this QA function, and we added it,

207
00:10:07.304 --> 00:10:11.450
this function calling, and
then we added it to the chat interface.

208
00:10:11.450 --> 00:10:12.764
I mean, that alone is an app.

209
00:10:12.764 --> 00:10:14.830
[LAUGH] You just built ChatGPT.

210
00:10:14.830 --> 00:10:18.530
You have plugins, you have function
calling, you have searching, you have QA.

211
00:10:18.530 --> 00:10:19.755
It's pretty intense.

212
00:10:19.755 --> 00:10:24.300
So you can whip together some pretty
impressive things very quickly.

213
00:10:24.300 --> 00:10:26.960
So hopefully that gave you an idea
of some things you can do.

214
00:10:26.960 --> 00:10:31.646
I would say, going forward, maybe pick one
of these ideas, or two of these ideas, and

215
00:10:31.646 --> 00:10:33.620
expand on them a little further.

216
00:10:33.620 --> 00:10:37.826
If you have a notion that you use,
or a wiki somewhere,

217
00:10:37.826 --> 00:10:43.330
try to build a UI around how to QA
that wiki, or something like that.

218
00:10:43.330 --> 00:10:46.721
Just get your feet wet just a little more,
and maybe push it to production, so

219
00:10:46.721 --> 00:10:49.190
you can experience what that
feels like in production.

220
00:10:49.190 --> 00:10:53.110
Go find yourself a vector database to use,
try to hook all that up.

221
00:10:53.110 --> 00:10:54.480
And just really get lost in it.

222
00:10:54.480 --> 00:10:57.197
I think that's where the learning
comes from, is doing all that.

223
00:10:57.197 --> 00:10:58.810
And then just use this as a reference.

224
00:10:58.810 --> 00:11:02.705
The whole point of this was to just
give you a few different examples,

225
00:11:02.705 --> 00:11:06.195
like how do I do a chat, or
how do I do like a semantic search, or

226
00:11:06.195 --> 00:11:08.700
what does the document QA look like?

227
00:11:08.700 --> 00:11:10.170
It's just there for an example.

228
00:11:10.170 --> 00:11:14.450
But, I really want you to build on
top of it, to solidify this learning.

229
00:11:14.450 --> 00:11:17.300
So, hopefully everybody liked the course.

230
00:11:17.300 --> 00:11:19.160
I definitely had a lot of fun making it.

231
00:11:19.160 --> 00:11:20.185
Thanks for coming.

232
00:11:20.185 --> 00:11:25.414
[APPLAUSE]

