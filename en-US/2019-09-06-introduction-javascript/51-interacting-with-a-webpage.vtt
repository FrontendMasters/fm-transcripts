WEBVTT

1
00:00:00.230 --> 00:00:01.750
&gt;&gt; Brian Holt: In fact,
I should have just shown you this one.

2
00:00:01.750 --> 00:00:04.620
This next example, notice we have here

3
00:00:06.000 --> 00:00:09.720
some of these have a class of js-target
and some of these don't, right?

4
00:00:12.030 --> 00:00:14.644
So in some of these,
I can say elements to change,

5
00:00:14.644 --> 00:00:17.340
I do document.querySelectorAll.js-target.

6
00:00:18.400 --> 00:00:22.030
So if I asked for.js-target,
which one of these am I gonna get?

7
00:00:22.030 --> 00:00:24.660
I'm gonna get this one, that one.

8
00:00:24.660 --> 00:00:25.320
I'm not gonna get that.

9
00:00:25.320 --> 00:00:27.710
I'll get that one,
not this one, and that one.

10
00:00:29.260 --> 00:00:32.210
Then here, I pull up the current elements,
elementsToChange I, right?

11
00:00:32.210 --> 00:00:34.760
This is looking like a normal for
loop to us, hopefully.

12
00:00:34.760 --> 00:00:38.480
And then here,
I'm saying currentElement.InnerText.

13
00:00:38.480 --> 00:00:42.030
And I'm setting that to be
modified by JavaScript, right?

14
00:00:42.030 --> 00:00:45.080
So if you go down here you'll see
these ones have been modified

15
00:00:45.080 --> 00:00:46.530
by JavaScript, right?

16
00:00:46.530 --> 00:00:50.428
But up here it said unchanged,
&gt;&gt; Brian Holt: And then,

17
00:00:50.428 --> 00:00:53.522
these ones that say won't change, right,
they don't actually end up changing.

18
00:00:53.522 --> 00:00:58.490
Make sense?

19
00:00:58.490 --> 00:00:59.840
So this is another way that you can do it.

20
00:00:59.840 --> 00:01:02.460
You can also do,
there is an inner HTML here, as well.

21
00:01:04.720 --> 00:01:09.745
And this can be,
&gt;&gt; Brian Holt: We'll

22
00:01:09.745 --> 00:01:14.290
put h1 around it, and then, you can
actually put h1's in here, as well.

23
00:01:16.560 --> 00:01:21.482
And I'll just copy and
paste all of that into this.

24
00:01:26.917 --> 00:01:28.630
&gt;&gt; Brian Holt: So now,
notice that they're massive, right?

25
00:01:28.630 --> 00:01:32.260
Cuz it's actually putting h1's in there,
as well.

26
00:01:32.260 --> 00:01:35.234
Whereas if I did that with inner text,
it wouldn't make it an HTML,

27
00:01:35.234 --> 00:01:38.328
it would literally put the text h1,
which is not in general you want.

28
00:01:41.439 --> 00:01:44.700
&gt;&gt; Brian Holt: So that's in general how
you're gonna be interacting with the DOM.

29
00:01:44.700 --> 00:01:48.370
And anything that you can
think about in terms of these

30
00:01:49.390 --> 00:01:50.710
DOM tags you can change, right?

31
00:01:50.710 --> 00:01:52.360
You can change the source of images.

32
00:01:52.360 --> 00:01:54.530
You can change the attributes.

33
00:01:54.530 --> 00:01:55.830
You can change what the tags are.

34
00:01:55.830 --> 00:01:57.950
You can remove HTML, you can add HTML.

35
00:01:57.950 --> 00:01:59.659
All of that stuff is available to you.

36
00:02:02.308 --> 00:02:07.368
&gt;&gt; Brian Holt: Or like another thing
I could do in here, if I come in and

37
00:02:07.368 --> 00:02:11.450
say, let's say I inspect element on this.

38
00:02:11.450 --> 00:02:17.530
So now I have y = $0.

39
00:02:17.530 --> 00:02:22.997
So now I have access to this,
&gt;&gt; Brian Holt: Thing

40
00:02:22.997 --> 00:02:26.520
right here, I can say y.classList.

41
00:02:26.520 --> 00:02:30.200
So if I look at that, it's gonna be
a list of all the classes that are on it,

42
00:02:30.200 --> 00:02:33.310
which it doesn't have any classes, right?

43
00:02:33.310 --> 00:02:35.400
Cuz I changed this to be an ID.

44
00:02:36.810 --> 00:02:37.930
So let's try that again.

45
00:02:37.930 --> 00:02:39.006
Let's make that a class.

46
00:02:39.006 --> 00:02:44.410
And now, dot, okay.

47
00:02:44.410 --> 00:02:47.852
So Inspect element,

48
00:02:47.852 --> 00:02:53.077
Console and,
&gt;&gt; Brian Holt: Okay.

49
00:02:53.077 --> 00:02:55.390
So now I have the red square,
right, this one right there.

50
00:02:56.640 --> 00:02:59.308
It's convenient that if you mouse over
it then it highlights over here in

51
00:02:59.308 --> 00:03:00.265
the browser, right?

52
00:03:00.265 --> 00:03:05.170
y.classList.

53
00:03:05.170 --> 00:03:08.250
So here I can see that
it has one class on it,

54
00:03:08.250 --> 00:03:11.640
which is the red-square, right,
which corresponds to this one.

55
00:03:12.960 --> 00:03:16.340
I can say y, let's trash this.

56
00:03:16.340 --> 00:03:20.040
And so y.classList.

57
00:03:20.040 --> 00:03:25.740
You can add, so I can say add some other,
or let's do this.

58
00:03:25.740 --> 00:03:27.570
Some other class.

59
00:03:29.750 --> 00:03:31.850
So now, if I Inspect Elements on this,

60
00:03:31.850 --> 00:03:34.630
you can see here that I've
added some other class.

61
00:03:34.630 --> 00:03:35.410
You can see that right there.

62
00:03:37.670 --> 00:03:45.149
Or I can say, remove,
&gt;&gt; Brian Holt: red-square,

63
00:03:45.149 --> 00:03:48.030
now if I remove red-square,
what's gonna happen?

64
00:03:50.620 --> 00:03:52.170
&gt;&gt; Speaker 2: It's gonna
blow up everything else.

65
00:03:53.410 --> 00:03:55.490
&gt;&gt; Brian Holt: Yeah, so
it's gonna go away, right?

66
00:03:55.490 --> 00:03:59.340
Because all of its style it was
getting it from red-square, right?

67
00:03:59.340 --> 00:04:00.800
So it disappears.

68
00:04:00.800 --> 00:04:03.190
It's still there,
the div is still there, right?

69
00:04:03.190 --> 00:04:05.140
But it has no width, it has no height and

70
00:04:05.140 --> 00:04:07.775
it has no color,
which is why it disappeared.

71
00:04:07.775 --> 00:04:13.600
But if I come back in here and say,
y.classList.add, what's gonna happen?

72
00:04:13.600 --> 00:04:14.760
It's gonna reappear.

73
00:04:16.430 --> 00:04:19.220
So this is something really,
really cool and powerful.

74
00:04:19.220 --> 00:04:23.140
And actually, probably what you will end
up doing quite frequently with JavaScript

75
00:04:23.140 --> 00:04:26.920
interacting with HTML, is adding and
subtracting classes, right?

76
00:04:28.270 --> 00:04:32.290
So as you might imagine, I might
write up here, something like hidden,

77
00:04:34.686 --> 00:04:39.727
&gt;&gt; Brian Holt: Display none, right?

78
00:04:41.630 --> 00:04:43.081
Now if I say y.

79
00:04:45.588 --> 00:04:49.730
&gt;&gt; Brian Holt: Hold on, let's make
sure that this is not the same one.

80
00:04:51.120 --> 00:04:56.204
So let's y = document.getElement,

81
00:04:56.204 --> 00:05:00.059
or let's do QuerySelector.

82
00:05:00.059 --> 00:05:04.005
QuerySelector red-square.

83
00:05:06.160 --> 00:05:08.860
&gt;&gt; Brian Holt: So
now that should be that, okay?

84
00:05:08.860 --> 00:05:12.970
Now if I say y.classList.add hidden.

85
00:05:14.950 --> 00:05:18.580
You can probably guess what this is
gonna do, but it's gonna hide it, right?

86
00:05:18.580 --> 00:05:23.440
So now it has both this one, and
this class, but hidden has a display none,

87
00:05:23.440 --> 00:05:25.450
so it disappears, right?

88
00:05:25.450 --> 00:05:30.235
And I can come back in here and
say, y.classList.remove hidden, and

89
00:05:30.235 --> 00:05:34.240
probably a spoiler alert,
it's gonna come back, right?

90
00:05:37.360 --> 00:05:39.240
In fact, for your project today,

91
00:05:39.240 --> 00:05:43.039
you're gonna be doing that
quite frequently, so good luck.

92
00:05:44.830 --> 00:05:49.283
&gt;&gt; Speaker 2: Why doesn't
document.classList work to get all

93
00:05:49.283 --> 00:05:51.832
the classes and a document?

94
00:05:51.832 --> 00:05:53.670
&gt;&gt; Brian Holt: Document.classList?

95
00:05:53.670 --> 00:05:56.926
Cuz it was never defined to do that.

96
00:05:56.926 --> 00:06:03.930
[LAUGH] So the document itself, it refers
to basically the whole HTML document.

97
00:06:03.930 --> 00:06:07.680
It's not even necessarily referring
to a specific node, right?

98
00:06:07.680 --> 00:06:09.460
&gt;&gt; Speaker 2: What do you mean?

99
00:06:09.460 --> 00:06:11.350
&gt;&gt; Brian Holt: So like this h1 right here,

100
00:06:11.350 --> 00:06:14.990
this is an h1, an h2 actually,
an h2 node, right?

101
00:06:14.990 --> 00:06:18.900
So it's one individual like
element on the page, right?

102
00:06:18.900 --> 00:06:22.010
Document doesn't refer to
one particular element.

103
00:06:22.010 --> 00:06:26.400
However, if you want that
there is document.body and

104
00:06:26.400 --> 00:06:28.740
that does refer to the whole body, right?

105
00:06:28.740 --> 00:06:34.040
And so, that will have a classList, which
right now the body has nothing on it.

106
00:06:34.040 --> 00:06:37.676
The body will never have any classes
on it but it does technically exist.

107
00:06:37.676 --> 00:06:42.990
&gt;&gt; Speaker 2: So this isn't like
the cascading is the right term?

108
00:06:42.990 --> 00:06:45.830
Cuz I would expect that to
give me all of the classes

109
00:06:45.830 --> 00:06:47.806
in any element within the body.

110
00:06:47.806 --> 00:06:52.305
&gt;&gt; Brian Holt: So if within
the classes that are children of it?

111
00:06:52.305 --> 00:06:54.170
&gt;&gt; Speaker 2: Yeah.
&gt;&gt; Brian Holt: No, it is just that

112
00:06:54.170 --> 00:06:55.620
particular one.

113
00:06:55.620 --> 00:06:58.070
So if you want that,
you're gonna have to read,

114
00:06:58.070 --> 00:07:02.680
some sort of algorithms can
be document.body.children.

115
00:07:02.680 --> 00:07:05.990
And you're gonna have to go through
all of those children, right?

116
00:07:05.990 --> 00:07:09.390
And this is gonna give you back
a bunch of all of these, right?

117
00:07:09.390 --> 00:07:12.730
And you're gonna have to go into their
children, and into their children and

118
00:07:12.730 --> 00:07:15.320
recursively grab all of those classes.

119
00:07:15.320 --> 00:07:18.850
&gt;&gt; Speaker 2: So if I wanna know what
classes are in an entire document,

120
00:07:18.850 --> 00:07:20.680
I should just look at the HTML?

121
00:07:20.680 --> 00:07:21.680
&gt;&gt; Brian Holt: Probably, yeah.

122
00:07:21.680 --> 00:07:25.389
Or if you're looking for one specifically,

123
00:07:25.389 --> 00:07:29.692
you can just do document.QuerySelector,
right?

124
00:07:33.035 --> 00:07:35.070
&gt;&gt; Brian Holt: Just say I'm looking for
all of the h2's, right?

125
00:07:35.070 --> 00:07:35.620
Right.
And

126
00:07:35.620 --> 00:07:37.180
they may not be siblings of each other.

127
00:07:38.390 --> 00:07:39.290
But you can get all of them.

128
00:07:40.320 --> 00:07:45.840
&gt;&gt; Speaker 2: And I can get those because
h2's are direct children of the document?

129
00:07:45.840 --> 00:07:46.615
&gt;&gt; Brian Holt: Yep, and so,

130
00:07:46.615 --> 00:07:51.650
if I wanted to say,
&gt;&gt; Brian Holt: This

131
00:07:51.650 --> 00:07:54.190
one's gonna have children, these ones.

132
00:07:54.190 --> 00:07:59.490
So if I Inspect Element on this,
&gt;&gt; Brian Holt: js-target.

133
00:07:59.490 --> 00:08:01.000
No, that's not the one I want.

134
00:08:03.684 --> 00:08:07.140
&gt;&gt; Brian Holt: So let's say I only wanna
get inside of these blocks right here,

135
00:08:07.140 --> 00:08:08.870
which are called clips result.

136
00:08:11.390 --> 00:08:17.890
So I can say
document.QuerySelector.clipsresult.

137
00:08:17.890 --> 00:08:22.152
And then I can do a QuerySelector again,
to get everything that's inside of it.

138
00:08:31.059 --> 00:08:32.296
&gt;&gt; Brian Holt: I think these are h1,
aren't they?

139
00:08:37.183 --> 00:08:39.046
&gt;&gt; Brian Holt: I need
all on both of these.

140
00:08:42.542 --> 00:08:44.430
&gt;&gt; Brian Holt: And
then I'd have to loop through them.

141
00:08:44.430 --> 00:08:47.098
In any case,
you can scope them to in particular

142
00:08:47.098 --> 00:08:50.450
ones by using not necessarily
QuerySelector on document.

143
00:08:50.450 --> 00:08:52.150
But you can use it on
the individual elements, as well.

144
00:08:52.150 --> 00:08:55.130
And it will be scoped to only find
elements inside of that element.

145
00:08:55.130 --> 00:08:56.408
Does that make sense?

146
00:08:56.408 --> 00:08:57.075
&gt;&gt; Speaker 2: Mm-hm.

147
00:08:57.075 --> 00:09:00.427
&gt;&gt; Brian Holt: Cool.
Other questions?

148
00:09:02.707 --> 00:09:07.860
&gt;&gt; Speaker 3: Is it normal to have
more than one class on a tag?

149
00:09:07.860 --> 00:09:08.960
&gt;&gt; Brian Holt: Very, it's very normal.

150
00:09:10.270 --> 00:09:11.440
You won't have more than one ID, but

151
00:09:11.440 --> 00:09:15.270
you'll often have,
I wouldn't say more than five.

152
00:09:15.270 --> 00:09:20.980
If you're getting beyond five you probably
have a problem, [LAUGH] in general.

153
00:09:20.980 --> 00:09:26.210
I guess there are reasons to do it, but
I'd say one to three is very normal.

154
00:09:27.650 --> 00:09:28.150
Good question.

