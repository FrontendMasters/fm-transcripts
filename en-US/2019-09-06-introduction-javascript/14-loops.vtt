WEBVTT

1
00:00:00.340 --> 00:00:01.390
&gt;&gt; Brian Holt: Next thing
we're going to do is,

2
00:00:01.390 --> 00:00:05.430
we're going to make, we're going
to get into talking about loops.

3
00:00:08.230 --> 00:00:10.066
So let's say, I want to,

4
00:00:10.066 --> 00:00:15.074
I have this variable called let
friendsAtYourParty, and initially,

5
00:00:15.074 --> 00:00:20.260
since no one has showed up to your party,
that number's going to be zero.

6
00:00:23.331 --> 00:00:26.817
&gt;&gt; Brian Holt: But over time,
your friends start showing up, so

7
00:00:26.817 --> 00:00:32.218
you are gonna say friendsAtYourParty
equals friendsAtYourParty plus one.

8
00:00:34.959 --> 00:00:36.782
&gt;&gt; Brian Holt: So
this might be a little bit confusing,

9
00:00:36.782 --> 00:00:39.100
defining friends in your
party in terms of itself.

10
00:00:39.100 --> 00:00:40.770
But you can think of it this way,

11
00:00:40.770 --> 00:00:46.070
that it is taking the previous value
of friendsAtYourParty, adding 1 to it,

12
00:00:46.070 --> 00:00:50.350
and reassigning friendsAtYourParty
to be that, right?

13
00:00:50.350 --> 00:00:53.800
So in this particular case,
friendsAtYourParty was zero, okay?

14
00:00:53.800 --> 00:00:57.540
So this is, you can think of it as 0+1.

15
00:00:57.540 --> 00:01:05.157
And now friendsAtYourParty, I just
set console.log(friendsAtYourParty),

16
00:01:05.157 --> 00:01:09.410
and refresh here, it's gonna be 1, right.

17
00:01:09.410 --> 00:01:10.160
That make sense?

18
00:01:10.160 --> 00:01:13.185
Cuz youâ€™re taking friendsAtYourParty,
0, plus 1 and

19
00:01:13.185 --> 00:01:16.560
you are reassigning that
to friendsAtYourParty.

20
00:01:16.560 --> 00:01:20.672
So in other words, the right side
of the equal signs happens first.

21
00:01:23.197 --> 00:01:24.760
&gt;&gt; Brian Holt: So,
it does the math here, and

22
00:01:24.760 --> 00:01:29.044
it takes whatever that result of that is,
and assigns that to friendsAtYourParty.

23
00:01:31.579 --> 00:01:32.626
&gt;&gt; Brian Holt: Okay?

24
00:01:32.626 --> 00:01:35.677
What happens if I copy and
paste this and do it again?

25
00:01:38.595 --> 00:01:40.230
&gt;&gt; Brian Holt: Now what's
friendsAtYourParty gonna be?

26
00:01:40.230 --> 00:01:40.733
&gt;&gt; Speaker 2: Be two?

27
00:01:40.733 --> 00:01:42.240
&gt;&gt; Brian Holt: It's going to be two.

28
00:01:42.240 --> 00:01:44.390
You can see there.

29
00:01:44.390 --> 00:01:51.150
What happens if we do this and
I do it a bunch of times?

30
00:01:52.610 --> 00:01:54.099
&gt;&gt; Speaker 2: Adding one every time.

31
00:01:54.099 --> 00:01:57.030
&gt;&gt; Brian Holt: This is great programming,
right here.

32
00:01:57.030 --> 00:01:59.339
You should program exactly like this.

33
00:02:01.308 --> 00:02:06.570
&gt;&gt; Brian Holt: Five, six, seven, eight,
nine, let's go for around ten, okay.

34
00:02:07.860 --> 00:02:11.137
So,
&gt;&gt; Brian Holt: this is obviously great

35
00:02:11.137 --> 00:02:13.131
idea and I'm the best programmer ever.

36
00:02:15.396 --> 00:02:19.481
&gt;&gt; Brian Holt: Wouldn't it be better
if there was an easier way to do this?

37
00:02:22.060 --> 00:02:23.002
&gt;&gt; Brian Holt: There is, okay?

38
00:02:23.002 --> 00:02:23.990
[LAUGH]
&gt;&gt; Group: [LAUGH]

39
00:02:23.990 --> 00:02:24.670
&gt;&gt; Brian Holt: Spoiler alert.

40
00:02:24.670 --> 00:02:25.350
There is.

41
00:02:27.910 --> 00:02:31.460
So let's show you a way to do that.

42
00:02:34.270 --> 00:02:35.830
So I'm gonna show you
what's called a loop.

43
00:02:37.010 --> 00:02:43.477
So I'm gonna say while
friendsAtYourParty is less than 10,

44
00:02:43.477 --> 00:02:48.607
this works exactly like an if statement,
right?

45
00:02:48.607 --> 00:02:54.712
So instead of having if here, I'm going
to say while, and basically say like keep

46
00:02:54.712 --> 00:03:00.389
executing what is ever between these
curly braces until this becomes true.

47
00:03:00.389 --> 00:03:04.391
So while this is false, do this over and
over and over again until it's true.

48
00:03:07.778 --> 00:03:12.119
&gt;&gt; Brian Holt: So
I'm gonna say friendsAtYourParty

49
00:03:12.119 --> 00:03:16.058
equal friendsAtYourParty+1.

50
00:03:16.058 --> 00:03:20.971
Console.log, friendsAtYourParty,
I already had that.

51
00:03:25.349 --> 00:03:28.896
&gt;&gt; Brian Holt: So what I had before and
what I have now, functionally,

52
00:03:28.896 --> 00:03:30.640
it works exactly the same.

53
00:03:30.640 --> 00:03:35.630
So those 10 lines of adding
one to friendsAtYourParty,

54
00:03:35.630 --> 00:03:37.390
functionally, this works
exactly the same way.

55
00:03:37.390 --> 00:03:42.290
In fact, if we say this and refresh it,
you can see here, it's still 10.

56
00:03:42.290 --> 00:03:46.460
So, while this is false,
it's going to keep doing that.

57
00:03:46.460 --> 00:03:49.720
And eventually, friendsAtYourParty
is going to be greater than 10.

58
00:03:49.720 --> 00:03:51.490
And then, it's not going to execute again.

59
00:03:55.752 --> 00:03:57.879
&gt;&gt; Brian Holt: To kind of drive that home,

60
00:03:57.879 --> 00:04:03.170
I'm just gonna put a console log in here,
of friendsAtYourParty.

61
00:04:03.170 --> 00:04:03.940
What's this going to do?

62
00:04:06.200 --> 00:04:09.470
&gt;&gt; Speaker 4: Keep stating
each number until is done.

63
00:04:09.470 --> 00:04:10.170
&gt;&gt; Brian Holt: That's exactly right.

64
00:04:12.840 --> 00:04:14.090
So it starts at zero, right?

65
00:04:14.090 --> 00:04:14.840
It makes sense.

66
00:04:17.420 --> 00:04:19.180
Then it's going to do its first iteration.

67
00:04:20.530 --> 00:04:23.860
Which is why we get zero,
it's going to run this line and

68
00:04:23.860 --> 00:04:26.050
it's gonna go back up here and
ask the question again.

69
00:04:26.050 --> 00:04:29.700
Hey, is friends at your party,
is one less than ten?

70
00:04:29.700 --> 00:04:30.930
Or is one greater than ten?

71
00:04:30.930 --> 00:04:34.130
It's gonna say no, it's not,
cool, I'm gonna run it again.

72
00:04:34.130 --> 00:04:37.174
Runs it again, logs it out here,
so you get one here,

73
00:04:37.174 --> 00:04:39.619
adds one to friends at
your party plus one.

74
00:04:41.688 --> 00:04:46.030
&gt;&gt; Brian Holt: Okay, comes back up here,
and says, hey, is 2 greater than 10?

75
00:04:46.030 --> 00:04:49.500
Nope, and so it keeps doing that over and
over and over again.

76
00:04:49.500 --> 00:04:52.950
And it's gonna say, is 10 less than 10?

77
00:04:52.950 --> 00:04:54.160
And it's not, right?

78
00:04:56.580 --> 00:04:58.090
Because 10 is equal to 10, right?

79
00:04:59.360 --> 00:05:02.926
And at that point, it says cool, I'm done
with this loop, knocks you out of it, and

80
00:05:02.926 --> 00:05:04.300
you continue on your merry way.

81
00:05:06.130 --> 00:05:09.815
So this is the first of a couple different
kinds of loops I'm going to show you

82
00:05:09.815 --> 00:05:10.345
how to do.

83
00:05:13.261 --> 00:05:14.971
&gt;&gt; Brian Holt: I mean,
these are hard concepts, right,

84
00:05:14.971 --> 00:05:18.251
they're a bit mind-bending that you're
thinking about re-executing the same

85
00:05:18.251 --> 00:05:19.410
lines of code.

86
00:05:19.410 --> 00:05:22.080
But think about, how many times do
you think line four gets executed?

87
00:05:23.590 --> 00:05:25.160
It gets executed 10 times, right.

88
00:05:25.160 --> 00:05:28.326
And that's because it's going through
this wild loop until it eventually

89
00:05:28.326 --> 00:05:29.114
breaks out of it.

90
00:05:29.114 --> 00:05:35.120
Now, for fun, let's crash the browser,
because that's always fun to do.

91
00:05:37.560 --> 00:05:39.850
Let's just say that I forgot
to put the plus one here.

92
00:05:40.890 --> 00:05:43.620
Do not do this,
because it's going to crash my browser.

93
00:05:43.620 --> 00:05:46.375
Okay, so if I say here,
while friendsAtYourParty equals

94
00:05:46.375 --> 00:05:48.650
friendsAtYourParty, so it's just
going to keep reassigning itself.

95
00:05:48.650 --> 00:05:50.540
When will this ever be true?

96
00:05:51.890 --> 00:05:54.890
It will never be true, so
I'm going to refresh my browser.

97
00:05:56.950 --> 00:05:58.608
Can you see how many
times this is executing?

98
00:06:03.498 --> 00:06:05.140
&gt;&gt; Brian Holt: It's just
going to keep going.

99
00:06:05.140 --> 00:06:08.860
So this, as you might imagine,
is called an infinite loop.

100
00:06:10.520 --> 00:06:12.090
It's never gonna stop.

101
00:06:12.090 --> 00:06:13.199
I'm gonna have to kill the tab.

102
00:06:16.902 --> 00:06:20.040
&gt;&gt; Brian Holt: This is why Apple's
on one Infinite Loop, right?

103
00:06:20.040 --> 00:06:21.060
That's the joke there.

104
00:06:22.160 --> 00:06:22.660
Okay.

105
00:06:23.730 --> 00:06:28.072
&gt;&gt; Speaker 5: What happens if it gets up
to that maximum integer, nine quadrillion,

106
00:06:28.072 --> 00:06:30.480
does that have anything to do with?

107
00:06:30.480 --> 00:06:33.250
&gt;&gt; Brian Holt: Eventually Firefox is
going to say, something's up here, and

108
00:06:33.250 --> 00:06:35.900
it's gonna it's going to
give you like the sick tab,

109
00:06:35.900 --> 00:06:38.550
like, this tab is not being responsive.

110
00:06:38.550 --> 00:06:41.683
I don't know what the heuristic
is to decide when that is, but

111
00:06:41.683 --> 00:06:45.193
at some point it says,
you're probably pretty bad at programming.

112
00:06:45.193 --> 00:06:52.768
[LAUGH]
&gt;&gt; Brian Holt: So let's kill that tab.

113
00:07:00.263 --> 00:07:02.960
&gt;&gt; Brian Holt: Gosh, gotta change it
first, or it's gonna do it again.

114
00:07:02.960 --> 00:07:03.751
Good job, Brian.

115
00:07:14.678 --> 00:07:17.432
&gt;&gt; Brian Holt: So if you ever see your
computer just like lock up like that and

116
00:07:17.432 --> 00:07:19.647
become like pretty much
totally unresponsive,

117
00:07:19.647 --> 00:07:22.850
it's a pretty good culprit that you
might have done an infinite loop.

118
00:07:25.304 --> 00:07:28.600
&gt;&gt; Brian Holt: In fact, I'm going to show
you on CodePen how to mitigate that,

119
00:07:28.600 --> 00:07:30.440
because someone's going to do it.

120
00:07:32.560 --> 00:07:35.160
Okay, so, now everything looks good.

121
00:07:36.470 --> 00:07:38.310
Don't do infinite loops.

122
00:07:38.310 --> 00:07:38.810
It's bad.

