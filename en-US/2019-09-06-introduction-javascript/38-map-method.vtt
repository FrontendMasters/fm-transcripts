WEBVTT

1
00:00:00.460 --> 00:00:02.810
&gt;&gt; Brian Holt: Map is one
of the more common ones.

2
00:00:02.810 --> 00:00:07.441
Whenever you have an array of something
and you wanna transform it into an array

3
00:00:07.441 --> 00:00:11.090
of something else, like maybe
you have an array of numbers and

4
00:00:11.090 --> 00:00:14.951
you wanna transform that into
an array of those numbers doubled or

5
00:00:14.951 --> 00:00:18.842
something like that, then map is
a really good way of doing that.

6
00:00:22.679 --> 00:00:26.565
&gt;&gt; Brian Holt: So
just to kind of drive that home,

7
00:00:26.565 --> 00:00:31.657
if I just return 5 here and
const newCities =

8
00:00:31.657 --> 00:00:36.760
blah,
&gt;&gt; Brian Holt: Get rid of city,

9
00:00:36.760 --> 00:00:41.373
so notice that everything is just 5, cuz
it's just keeping whatever I return here,

10
00:00:41.373 --> 00:00:44.978
so whatever I return there is what's
gonna be put to the new array.

11
00:00:46.642 --> 00:00:49.040
&gt;&gt; Brian Holt: Now this is
a relatively pointless action.

12
00:00:49.040 --> 00:00:52.339
I don't know why you wanna transform an
array of cities into an array of 5s, but

13
00:00:52.339 --> 00:00:57.465
you can [LAUGH]
&gt;&gt; Speaker 2: How would that affect

14
00:00:57.465 --> 00:01:04.715
memory though, because it could be off
like two arrays and take more space.

15
00:01:04.715 --> 00:01:06.472
&gt;&gt; Brian Holt: In general,
that won't be a problem.

16
00:01:08.837 --> 00:01:14.556
&gt;&gt; Brian Holt: I would say it's gonna
create and trash a bunch of arrays.

17
00:01:14.556 --> 00:01:16.910
That's the nature of the beast.

18
00:01:16.910 --> 00:01:19.448
However, you're gonna have to
work in pretty large volumes for

19
00:01:19.448 --> 00:01:20.629
that to make any difference.

20
00:01:25.405 --> 00:01:27.301
&gt;&gt; Brian Holt: So
that's something to check out.

21
00:01:27.301 --> 00:01:31.727
Again, Kyle Simpson has another course,
as well as Brian Lonsdorf on

22
00:01:31.727 --> 00:01:36.017
Frontend Masters on functional
programming that are phenomenal.

23
00:01:36.017 --> 00:01:40.829
If this peaks your interest in learning
to code like this like it does for

24
00:01:40.829 --> 00:01:45.652
me, definitely worth checking out,
and getting more familiar with.

25
00:01:45.652 --> 00:01:48.521
4-H and math or
just like the tip of the iceberg there.

