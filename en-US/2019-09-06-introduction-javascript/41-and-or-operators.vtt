WEBVTT

1
00:00:00.325 --> 00:00:01.849
&gt;&gt; Brian Holt: Talking
more about conditionals,

2
00:00:01.849 --> 00:00:03.939
let's actually just go
over to our VS Code here.

3
00:00:03.939 --> 00:00:04.730
I think this will be a little bit easier.

4
00:00:11.007 --> 00:00:15.206
&gt;&gt; Brian Holt: So.

5
00:00:22.024 --> 00:00:23.120
&gt;&gt; Brian Holt: So
let's just get rid of that.

6
00:00:24.840 --> 00:00:29.976
There's a couple more
things about conditioners

7
00:00:29.976 --> 00:00:34.010
that I should show you really quick, so

8
00:00:34.010 --> 00:00:38.777
when I was just showing
you if two is not equal to

9
00:00:38.777 --> 00:00:43.788
three than console these are not equal,
right,

10
00:00:43.788 --> 00:00:49.558
or we'll just say like const.age = 25,
and const.

11
00:00:54.597 --> 00:01:00.563
&gt;&gt; Brian Holt: Like ageToDriveARental car.

12
00:01:04.404 --> 00:01:07.282
&gt;&gt; Brian Holt: So in this case you'd
probably have to do something like

13
00:01:07.282 --> 00:01:09.127
ageToDriveARentalCar, whoops.

14
00:01:16.403 --> 00:01:19.558
&gt;&gt; Brian Holt: And this would be 25,
and let's just put this as like 28.

15
00:01:26.520 --> 00:01:28.706
&gt;&gt; Brian Holt: Then here
you would say like,

16
00:01:28.706 --> 00:01:31.423
you are not old enough to drive a car.

17
00:01:37.295 --> 00:01:38.770
&gt;&gt; Brian Holt: All right we
talked a little bit about that.

18
00:01:41.712 --> 00:01:45.692
&gt;&gt; Brian Holt: But yeah, something else
you can do with the not equals two,

19
00:01:45.692 --> 00:01:49.204
which was yeah,
let's just get rid of that example,

20
00:01:49.204 --> 00:01:52.040
so we'll just stick to x and y for us.

21
00:01:52.040 --> 00:01:53.980
I can't think of a real example
off the top of my head.

22
00:01:55.190 --> 00:01:58.381
So if x is not equal to y,

23
00:01:58.381 --> 00:02:05.106
then console.log('these are not equal').

24
00:02:08.549 --> 00:02:15.374
&gt;&gt; Brian Holt: We'll put another
z up there, const z = 11.

25
00:02:15.374 --> 00:02:21.072
So two of them that I did not show you yet
are or

26
00:02:21.072 --> 00:02:26.308
and and, so
if I say if x is equal to y and,

27
00:02:26.308 --> 00:02:31.852
and the way you do and
is with two ampersands

28
00:02:31.852 --> 00:02:36.944
next to each other, and y is equal to z.

29
00:02:39.465 --> 00:02:40.184
&gt;&gt; Brian Holt: Console.log.

30
00:02:43.963 --> 00:02:45.380
&gt;&gt; Brian Holt: These are all equal.

31
00:02:47.150 --> 00:02:49.560
So this is what's called a logical end,
right?

32
00:02:50.920 --> 00:02:57.519
And here, this means, if this is true,
and this is true, then do this, right?

33
00:02:58.790 --> 00:03:00.330
Make sense?

34
00:03:00.330 --> 00:03:02.064
And you can have as many
of these as you want.

35
00:03:08.677 --> 00:03:09.362
&gt;&gt; Brian Holt: Right.

36
00:03:14.996 --> 00:03:21.134
&gt;&gt; Brian Holt: Now,
there's another one called or,

37
00:03:21.134 --> 00:03:27.086
and the way you do that, so if is true,

38
00:03:27.086 --> 00:03:35.864
or x triple equals z,
&gt;&gt; Brian Holt: This is.

39
00:03:38.808 --> 00:03:41.966
&gt;&gt; Brian Holt: Okay, and so
this is two pipes, oops, right there,

40
00:03:41.966 --> 00:03:43.732
two pipes next to each other.

41
00:03:49.479 --> 00:03:52.044
&gt;&gt; Brian Holt: So it's gonna ask
the question, if this is true or

42
00:03:52.044 --> 00:03:54.050
this is true then this is going to run.

43
00:03:54.050 --> 00:03:56.990
So in this particular case,
since Is true is true,

44
00:03:56.990 --> 00:04:00.760
despite the fact that this is not true
over here, this will still run, right?

45
00:04:02.120 --> 00:04:06.470
Whereas up here, as soon as it
sees the x is not equal to y,

46
00:04:06.470 --> 00:04:08.790
it's actually not even going
to evaluate the rest of this.

47
00:04:08.790 --> 00:04:10.640
It's just like okay, well,
the first one wasn't true, so

48
00:04:10.640 --> 00:04:13.830
I'm not gonna do that, so
all of them have to be true.

49
00:04:15.370 --> 00:04:20.238
And
&gt;&gt; Brian Holt: You can combine these

50
00:04:20.238 --> 00:04:22.022
using parentheses, so.

51
00:04:31.597 --> 00:04:34.824
&gt;&gt; Brian Holt: Right, so
it's gonna say, if this is true, or

52
00:04:34.824 --> 00:04:37.419
both of these are true, then do this.

53
00:04:39.050 --> 00:04:42.420
Once you start getting into
compound conditions and

54
00:04:42.420 --> 00:04:45.470
this starts getting a lot harder to read,

55
00:04:45.470 --> 00:04:47.810
you should start re-evaluating
what you're trying to do there.

56
00:04:49.980 --> 00:04:53.761
Normally it can be rewritten into a more
simple way either by breaking that into

57
00:04:53.761 --> 00:04:56.797
multiple statements or
just being a little bit more explicit,

58
00:04:56.797 --> 00:04:58.171
but when you start shoving so

59
00:04:58.171 --> 00:05:01.688
much in there it gets really tough to
figure out what the hell is going on.

60
00:05:06.218 --> 00:05:09.220
&gt;&gt; Brian Holt: Cool, any questions?

61
00:05:09.220 --> 00:05:11.560
&gt;&gt; Speaker 2: On line 11, you said if

62
00:05:13.110 --> 00:05:17.160
x doesn't equal y then it's gonna
ignore this stuff to the right.

63
00:05:17.160 --> 00:05:23.300
If you replace the second and
with an or would it still ignore it?

64
00:05:23.300 --> 00:05:24.430
No, the second one.

65
00:05:24.430 --> 00:05:25.973
&gt;&gt; Brian Holt: The second one.
&gt;&gt; Speaker 2: Yeah.

66
00:05:27.573 --> 00:05:29.230
&gt;&gt; Brian Holt: So if I do this.

67
00:05:30.440 --> 00:05:35.660
&gt;&gt; Speaker 2: Because that should return
true, because if it's true is true.

68
00:05:35.660 --> 00:05:38.710
&gt;&gt; Brian Holt: Yeah, you know the question
here which I would have to go figure out

69
00:05:38.710 --> 00:05:43.570
is what is the priority of
Compton tutorials here, right?

70
00:05:43.570 --> 00:05:46.380
Is it asking is this and this true?

71
00:05:46.380 --> 00:05:48.280
Is it asking is this or this true?

72
00:05:49.640 --> 00:05:51.400
&gt;&gt; Speaker 2: It enforced
parentheses there.

73
00:05:51.400 --> 00:05:53.198
&gt;&gt; Brian Holt: Yeah, so
if I put parentheses here.

74
00:05:53.198 --> 00:05:57.720
Do you wannna put parentheses here?

75
00:05:57.720 --> 00:05:58.720
&gt;&gt; Speaker 2: Sure.

76
00:05:58.720 --> 00:06:01.586
&gt;&gt; Brian Holt: Okay, so if it does
this then it's going to evaluate this

77
00:06:01.586 --> 00:06:02.310
whole block.

78
00:06:02.310 --> 00:06:05.738
It's gonna find out that this is false and
then it'll evaluate this one.

79
00:06:09.388 --> 00:06:11.292
&gt;&gt; Brian Holt: But so
if I did it like this,

80
00:06:17.673 --> 00:06:18.177
&gt;&gt; Brian Holt: It's going to

81
00:06:18.177 --> 00:06:18.767
evaluate this.

82
00:06:18.767 --> 00:06:21.390
It's gonna see this is not true and
not abide with the second term.

83
00:06:22.650 --> 00:06:25.530
&gt;&gt; Speaker 2: Because it recognizes
that the rest of the stuff is

84
00:06:25.530 --> 00:06:28.080
inside of parentheses and
so it doesn't matter?

85
00:06:28.080 --> 00:06:28.580
&gt;&gt; Brian Holt: Right.

86
00:06:28.580 --> 00:06:29.080
&gt;&gt; Speaker 2: Okay.

87
00:06:32.120 --> 00:06:35.281
&gt;&gt; Brian Holt: No matter what, if it see
this is not true and then it sees and

88
00:06:35.281 --> 00:06:39.336
right afterwards it means it doesn't
matter what comes afterwards because

89
00:06:39.336 --> 00:06:41.128
the first term is already false.

90
00:06:41.128 --> 00:06:45.315
&gt;&gt; Speaker 2: But if it does let you
do those same functions in one line,

91
00:06:45.315 --> 00:06:50.286
that seems like it would be bad to
just ignore the stuff on the right,

92
00:06:50.286 --> 00:06:52.396
in case there is an or there.

93
00:06:55.012 --> 00:06:55.670
&gt;&gt; Speaker 2: It's like you said.

94
00:06:55.670 --> 00:06:58.530
I guess the question is,
does it enforce [COUGH] parentheses or

95
00:06:58.530 --> 00:07:00.650
does it let you-
&gt;&gt; Brian Holt: Got you.

96
00:07:00.650 --> 00:07:03.701
It does let you enforce, so
the parentheses will still work.

97
00:07:03.701 --> 00:07:07.745
So is there another one after this right?

98
00:07:10.733 --> 00:07:14.368
&gt;&gt; Brian Holt: And at this point I'd say
you need to refactor your code [LAUGH].

99
00:07:14.368 --> 00:07:18.812
Yeah, this will work for sure cuz it will

100
00:07:18.812 --> 00:07:24.020
evaluate something else at this point.

101
00:07:24.020 --> 00:07:24.700
&gt;&gt; Speaker 2: It will, okay.

102
00:07:24.700 --> 00:07:25.200
&gt;&gt; Brian Holt: Yeah.

103
00:07:30.572 --> 00:07:35.930
&gt;&gt; Brian Holt: Good question, and you
start getting into these deeper semantics.

104
00:07:35.930 --> 00:07:39.402
There's not really a ton of
point learning what that does.

105
00:07:39.402 --> 00:07:43.308
I know people who disagree with me,
but there's enough stuff in my brain,

106
00:07:43.308 --> 00:07:44.796
like lyrics to 90s songs,

107
00:07:44.796 --> 00:07:47.974
that I just can't afford to lose
anything else up there [LAUGH]

