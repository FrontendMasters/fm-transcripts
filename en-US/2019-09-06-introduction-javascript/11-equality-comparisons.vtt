WEBVTT

1
00:00:00.000 --> 00:00:02.226
&gt;&gt; Brian Holt: The next thing I'm gonna
show you is you don't necessarily have to

2
00:00:02.226 --> 00:00:04.066
have a boolean inside of
those if statements, right?

3
00:00:04.066 --> 00:00:07.944
So I'm gonna say if 2 + 2, and

4
00:00:07.944 --> 00:00:13.413
then I'm gonna put triple equals here, 4.

5
00:00:15.324 --> 00:00:18.890
&gt;&gt; Brian Holt: So
let's talk about triple equals here.

6
00:00:18.890 --> 00:00:25.835
Above here, if I say something
like const myVariable = 10.

7
00:00:25.835 --> 00:00:29.112
Notice I'm using one
equal sign right here.

8
00:00:29.112 --> 00:00:32.807
Now, in your brain,
when you are thinking about programing,

9
00:00:32.807 --> 00:00:34.430
I want you to rewrite this.

10
00:00:34.430 --> 00:00:36.320
Don't think of this as is equal to.

11
00:00:36.320 --> 00:00:39.440
Think of this as is assigned, right?

12
00:00:39.440 --> 00:00:41.740
My variable is assigned 10, right?

13
00:00:41.740 --> 00:00:45.339
So if you have one equal signed,
that means it's assigned.

14
00:00:46.360 --> 00:00:50.213
If you put triple equals here
you are asking a question.

15
00:00:50.213 --> 00:00:53.700
Is 2 + 2 equal to 4?

16
00:00:53.700 --> 00:00:59.620
So this is actually being reduced down
to a boolean of true or false, right.

17
00:00:59.620 --> 00:01:01.240
Is this equal to this.

18
00:01:03.050 --> 00:01:05.309
So here I can say console.log.

19
00:01:08.305 --> 00:01:12.805
&gt;&gt; Brian Holt: Array [LAUGH] I think
that the fundamental principles and

20
00:01:12.805 --> 00:01:15.299
mathematics still hold true.

21
00:01:15.299 --> 00:01:18.299
That's what I have in my notes, but

22
00:01:18.299 --> 00:01:22.772
[LAUGH]
&gt;&gt; Brian Holt: Math still works.

23
00:01:26.027 --> 00:01:32.038
&gt;&gt; Brian Holt: Else console.log("Uh,
panic?").

24
00:01:36.495 --> 00:01:38.562
&gt;&gt; Brian Holt: So
you can get rid of that up at the top.

25
00:01:48.050 --> 00:01:50.150
&gt;&gt; Brian Holt: So now if I save this and

26
00:01:50.150 --> 00:01:54.190
refresh over here you can say
hurray if math still works, right?

27
00:01:58.010 --> 00:01:59.350
&gt;&gt; Brian Holt: So why triple?

28
00:01:59.350 --> 00:02:01.890
That's another question that
people would typically ask.

29
00:02:01.890 --> 00:02:08.040
If you do double equals here,
&gt;&gt; Brian Holt: It still works.

30
00:02:08.040 --> 00:02:11.520
The reason why I'm imploring you to learn
to do with triple equals is because

31
00:02:11.520 --> 00:02:15.910
double equals has some funny
business that is does, that for

32
00:02:15.910 --> 00:02:17.520
the most part you don't want it to do.

33
00:02:18.530 --> 00:02:21.500
There's a thing called coercion
that's going to try and convert.

34
00:02:22.820 --> 00:02:25.420
For example,
if I had here instead of four,

35
00:02:25.420 --> 00:02:29.090
this is the number four,
if I had the string four here.

36
00:02:29.090 --> 00:02:31.360
Notice that this is between double quotes,
so

37
00:02:31.360 --> 00:02:36.230
now that this has become a string,
this will still work,

38
00:02:38.150 --> 00:02:43.480
but if I put triple equals here,
it does not work.

39
00:02:44.980 --> 00:02:49.261
When you put triple equals, it does
not try and coerce one into the other.

40
00:02:49.261 --> 00:02:53.023
Now coercion in JavaScript
is complicated business.

41
00:02:53.023 --> 00:02:53.899
We'll put it that way and

42
00:02:53.899 --> 00:02:56.300
it's not something we really
want to get into today.

43
00:02:56.300 --> 00:02:57.140
Suffice to say, for

44
00:02:57.140 --> 00:03:00.670
the most part if you're doing coercion,
usually you don't want to.

45
00:03:01.690 --> 00:03:04.990
There's an entire Frontend Masters
course on it from Kyle Simpson.

46
00:03:04.990 --> 00:03:09.922
If it's interesting to you definitely
go check it out, but for now,

47
00:03:09.922 --> 00:03:14.683
just follow what I'm telling you and
just stick with triple equals

48
00:03:14.683 --> 00:03:18.957
until you understand what
exactly what's going on there.

49
00:03:18.957 --> 00:03:20.332
You'll save yourself a lot of heartache.

50
00:03:20.332 --> 00:03:20.950
I promise.

