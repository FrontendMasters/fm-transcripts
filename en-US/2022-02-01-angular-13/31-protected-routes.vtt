WEBVTT

1
00:00:00.000 --> 00:00:03.921
In this example we are going to
talk about protected routes.

2
00:00:03.921 --> 00:00:08.749
And so this is a really valuable
technique when you want to

3
00:00:08.749 --> 00:00:12.983
control access to a portion
of your application.

4
00:00:12.983 --> 00:00:18.298
So for instance, imagine you had
an admin section that you wanted to

5
00:00:18.298 --> 00:00:24.652
prevent somebody from going to, unless
they had been properly authenticated.

6
00:00:24.652 --> 00:00:29.091
And so this is where we
implement protected routes.

7
00:00:29.091 --> 00:00:34.136
And so we think of this as
a guarded route, a protected route.

8
00:00:34.136 --> 00:00:39.222
And we have the ability to
insert just a little bit of

9
00:00:39.222 --> 00:00:44.326
logic in the form of a route guard,
to say yes or no.

10
00:00:44.326 --> 00:00:50.513
And so within our code,
I am going to add in another path and

11
00:00:50.513 --> 00:00:55.311
we're going to just call this one garden,
or

12
00:00:55.311 --> 00:00:58.996
rather let's call it protected.

13
00:00:58.996 --> 00:01:02.306
So this is a protected route, and

14
00:01:02.306 --> 00:01:08.347
we're going to give it a component
of ProtectedComponent.

15
00:01:08.347 --> 00:01:13.217
And now what we're going to
do is we are going to add in

16
00:01:13.217 --> 00:01:17.661
an additional property
which is canActivate.

17
00:01:17.661 --> 00:01:23.493
And so this is pretty simple,
it's can it activate true or false?

18
00:01:23.493 --> 00:01:29.655
And so, from here,
we are going to add in, An AuthGuard,

19
00:01:29.655 --> 00:01:34.554
and so I'll show you what
this looks like in a moment.

20
00:01:34.554 --> 00:01:39.895
But the point of this is,
this AuthGuard is going to do really

21
00:01:39.895 --> 00:01:44.837
one of two things,
it's going to return true or false.

22
00:01:44.837 --> 00:01:50.321
There's also a second and
a half option that I'm going to

23
00:01:50.321 --> 00:01:55.692
illustrate inside of this
particular demonstration,

24
00:01:55.692 --> 00:02:00.504
let me fix that typo there,
and we are ready to go.

25
00:02:00.504 --> 00:02:05.458
So, I'm going to take off the AuthGuard
first, I'm going to save it,

26
00:02:05.458 --> 00:02:10.513
we'll go into our code, and I just
want to show you what this looks like.

27
00:02:10.513 --> 00:02:16.794
So, protected route example, if you
can see this, click on the user icon.

28
00:02:16.794 --> 00:02:22.154
When we finish this, we'll see what this
looks like, but here's the component.

29
00:02:22.154 --> 00:02:28.413
Now from here, I'm going add in or
add back in this guard.

30
00:02:28.413 --> 00:02:33.303
And if we look in the guard,
that this is nothing more

31
00:02:33.303 --> 00:02:37.758
than a class, surprise,
welcome to Angular.

32
00:02:37.758 --> 00:02:42.502
And this implements
a canActivate interface,

33
00:02:42.502 --> 00:02:49.626
which has one method that we have
to implement, which is canActivate.

34
00:02:49.626 --> 00:02:55.601
Now, canActivate takes in two parameters,
next and state.

35
00:02:55.601 --> 00:02:59.848
So, next is where is this going, and

36
00:02:59.848 --> 00:03:03.825
what is the state of the snapshot?

37
00:03:03.825 --> 00:03:09.509
And from here, there is a number
of things that this can return,

38
00:03:09.509 --> 00:03:15.323
I'm not gonna get into that,
what we care about here is boolean.

39
00:03:15.323 --> 00:03:20.764
And so, I'm going to,
let's start with true,

40
00:03:20.764 --> 00:03:28.350
and what you're gonna see,
hopefully, is that nothing changes.

41
00:03:28.350 --> 00:03:34.844
So I'm able to navigate freely
to this protected route,

42
00:03:34.844 --> 00:03:40.118
no problem, but if I go and
I set this to false,

43
00:03:40.118 --> 00:03:46.500
then I'll go from any other
route to Protected Routes.

44
00:03:46.500 --> 00:03:50.507
And notice, I'm clicking on this but
nothing is happening,

45
00:03:50.507 --> 00:03:54.138
it's just simply saying,
you cannot go to this route.

46
00:03:54.138 --> 00:04:01.350
And if I stopped here, this could
potentially be a subpar user experience.

47
00:04:01.350 --> 00:04:07.163
Because when you click on something, you
expect that something is going to happen.

48
00:04:07.163 --> 00:04:11.545
And so this is where when I
mentioned that there's a yet

49
00:04:11.545 --> 00:04:14.412
an additional option that we have.

50
00:04:14.412 --> 00:04:19.193
And that is, when you click on
a route you should not go to,

51
00:04:19.193 --> 00:04:24.170
you have the ability to capture it and
say this person's

52
00:04:24.170 --> 00:04:29.062
not authenticated,
let's direct them to a place to do so.

53
00:04:29.062 --> 00:04:34.868
So within our AuthGuard here,
we're going to update this.

54
00:04:34.868 --> 00:04:41.324
And so you notice here I'm injecting
the AuthService as well as the router.

55
00:04:41.324 --> 00:04:48.720
And so what I'm going to do is when
somebody hits this protected route and

56
00:04:48.720 --> 00:04:55.268
then they're directed to this AuthGuard,
I am going to stop and

57
00:04:55.268 --> 00:05:00.745
I'm going to check,
is this person authenticated?

58
00:05:00.745 --> 00:05:04.213
And if they are, carry on, if not,

59
00:05:04.213 --> 00:05:09.311
what we're going to do is
something else entirely.

60
00:05:09.311 --> 00:05:14.336
So, the return for this is we're

61
00:05:14.336 --> 00:05:19.541
going to call this authService and

62
00:05:19.541 --> 00:05:23.131
isAuthenticated, and

63
00:05:23.131 --> 00:05:28.882
this is going to return true or false.

64
00:05:28.882 --> 00:05:34.314
But if they're not authenticated,
we can take this

65
00:05:34.314 --> 00:05:39.750
a step further, and
this is where good UX prevails.

66
00:05:39.750 --> 00:05:45.746
So within this, we're going to pipe
off of this and we're going to tap.

67
00:05:45.746 --> 00:05:50.633
And so tap is the ability to tap
into an observable stream and

68
00:05:50.633 --> 00:05:54.365
do something that would
cause a side effect.

69
00:05:54.365 --> 00:05:59.081
And from here,
we're going to capture the value being

70
00:05:59.081 --> 00:06:02.574
returned from this observable stream.

71
00:06:02.574 --> 00:06:07.010
So we're calling this
authService isAuthenticated, and

72
00:06:07.010 --> 00:06:11.987
what we wanna know is are they
authenticated, isAuthenticated?

73
00:06:11.987 --> 00:06:16.336
And then from here, we're going to say,

74
00:06:16.336 --> 00:06:19.818
if they're not authenticated,

75
00:06:19.818 --> 00:06:25.182
then we're going to take severe and
dire actions.

76
00:06:25.182 --> 00:06:30.851
There will be consequences, and
so if they're not authenticated,

77
00:06:30.851 --> 00:06:35.165
we're simply going to route
them to the login page.

78
00:06:35.165 --> 00:06:39.041
So in this case, navigate by URL, and

79
00:06:39.041 --> 00:06:44.382
we're just going to send them to login,
all right?

80
00:06:44.382 --> 00:06:50.544
And, If they are authenticated,

81
00:06:50.544 --> 00:06:55.157
we're just going to return this
as to not break the string.

82
00:06:55.157 --> 00:07:01.801
And so now if they're authenticated,
great, you can go on look your way,

83
00:07:01.801 --> 00:07:06.454
if not, we're going to send
them to the login page.

84
00:07:06.454 --> 00:07:12.239
So if we go back into our application and
I click on Protected Routes,

85
00:07:12.239 --> 00:07:17.447
if you can see this,
then you're currently authenticated.

86
00:07:17.447 --> 00:07:22.663
But if I log out,
then now you are directed

87
00:07:22.663 --> 00:07:28.029
towards the login page,
but then if I go and

88
00:07:28.029 --> 00:07:32.371
try to navigate to this directly,

89
00:07:35.092 --> 00:07:38.408
You notice here that it thought
about it for a second and

90
00:07:38.408 --> 00:07:41.086
then it sent me right
back to the login page.

91
00:07:41.086 --> 00:07:44.941
And so what's happening is when
I click that Logout button,

92
00:07:44.941 --> 00:07:50.169
I'm basically setting a property on
the authService to I'm not authenticated.

93
00:07:50.169 --> 00:07:54.887
And which then prevents me from
navigating directly to it because it

94
00:07:54.887 --> 00:07:59.121
hits that AuthGuard and
redirects me back to the login page.

95
00:07:59.121 --> 00:08:03.921
But then once I click Login,
then I can go back to

96
00:08:03.921 --> 00:08:09.081
Protected Routes and
I'm able to do that freely and

97
00:08:09.081 --> 00:08:13.281
without any kind of problem whatsoever.

98
00:08:13.281 --> 00:08:18.005
So, just to review real
quickly on this example,

99
00:08:18.005 --> 00:08:23.182
the big thing here is within
the app-routing module.

100
00:08:23.182 --> 00:08:29.640
You simply add in a canActivate
property which takes in a guard,

101
00:08:29.640 --> 00:08:35.870
and a guard is going to implement
the canActivate interface.

102
00:08:35.870 --> 00:08:41.004
And so, from here it has a single function
that's going to return true or false.

103
00:08:41.004 --> 00:08:45.790
Or for the sake of good UX and
UI, that we can also

104
00:08:45.790 --> 00:08:50.817
perform some logic here to say,
if this is false,

105
00:08:50.817 --> 00:08:56.703
maybe we want to do something for
the user on their behalf.

106
00:08:56.703 --> 00:09:01.660
And so this is how you can protect
a route in an Angular application.

