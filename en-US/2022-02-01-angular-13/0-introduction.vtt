WEBVTT

1
00:00:00.000 --> 00:00:03.790
Welcome to Angular 13 fundamentals.

2
00:00:03.790 --> 00:00:05.900
Let's talk about the agenda.

3
00:00:05.900 --> 00:00:10.545
And this is a kind of a loose narrative
arc simply because we have to cut these,

4
00:00:10.545 --> 00:00:14.477
essentially these modules up into
videos for people to watch it,

5
00:00:14.477 --> 00:00:16.280
for it to make sense.

6
00:00:16.280 --> 00:00:20.819
But there's gonna be a little bit of a
dynamic element as you ask questions, and

7
00:00:20.819 --> 00:00:22.326
start to answer them all.

8
00:00:22.326 --> 00:00:27.018
It's not uncommon for me to even veer off
into some demo that I didn't even plan,

9
00:00:27.018 --> 00:00:30.820
but it was important to somebody,
and so I was able to cover that.

10
00:00:30.820 --> 00:00:34.280
So, the first thing we're gonna do,
we're gonna start up real slow.

11
00:00:34.280 --> 00:00:39.139
I'm going to assume that everybody
here has a basic understanding

12
00:00:39.139 --> 00:00:42.270
of programming JavaScript, HTML, CSS.

13
00:00:43.290 --> 00:00:47.950
But I'm not going to assume any
prior experience with angular.

14
00:00:47.950 --> 00:00:52.290
And so we're just gonna start out, and
lay that foundation with hello angular.

15
00:00:52.290 --> 00:00:55.975
Then we're gonna get into component
fundamentals with templates,

16
00:00:55.975 --> 00:00:59.760
and component classes, and
binding, and how that works.

17
00:00:59.760 --> 00:01:03.793
Template driven forms,
angular services, server communication,

18
00:01:03.793 --> 00:01:08.524
component driven architecture, which is
my one of my all time favorite modules.

19
00:01:08.524 --> 00:01:11.461
And then we'll talk a bit
about angular routing, and

20
00:01:11.461 --> 00:01:15.340
then we'll finish up with
unit testing fundamentals.

21
00:01:15.340 --> 00:01:18.118
If you go to this link right here,

22
00:01:18.118 --> 00:01:23.610
onehungrymindangular13-fundamentals-works-
hop.

23
00:01:23.610 --> 00:01:27.200
You will find this repository.

24
00:01:27.200 --> 00:01:29.511
Now the slides that you see,

25
00:01:29.511 --> 00:01:34.780
if you look into the resources folder,
the slides are there.

26
00:01:34.780 --> 00:01:37.790
And if I make any changes,
then obviously, I'll update them.

27
00:01:37.790 --> 00:01:43.840
But there's some slides in there as well
as the challenges, and those may change.

28
00:01:43.840 --> 00:01:47.494
But I have kinda of a loose set of
challenges that I want to work through

29
00:01:47.494 --> 00:01:51.656
during the day, but most importantly
the slides are there for our reference.

30
00:01:51.656 --> 00:01:56.896
And as well some of the slides I may
skip over or gloss over, because

31
00:01:56.896 --> 00:02:03.760
I think in some cases it's easier to show
code versus just reading off of a slide.

32
00:02:03.760 --> 00:02:09.343
But for I think study purposes in
reference purposes, that having a kind

33
00:02:09.343 --> 00:02:15.540
of a well, kind of fleshed out slide
deck to go back and review is helpful.

34
00:02:15.540 --> 00:02:19.150
And so that's why I've made the slides
available in the repository.

35
00:02:19.150 --> 00:02:22.991
So please use that go make tons of money,
I approve.

36
00:02:22.991 --> 00:02:31.480
And what we're going to be building is
a basic master detail view application.

37
00:02:31.480 --> 00:02:36.313
So, if you've ever participated
in any of my other workshops,

38
00:02:36.313 --> 00:02:42.219
this to me is the fundamental building
block of all enterprise applications,

39
00:02:42.219 --> 00:02:45.543
really all applications across the board.

40
00:02:45.543 --> 00:02:50.470
I believe is just a variation of
the master detail view interface.

41
00:02:50.470 --> 00:02:55.340
And so what I mean by that is you will
have a master list of a collection.

42
00:02:55.340 --> 00:02:59.552
And so in this case there's only one,
but you have a chorus, and

43
00:02:59.552 --> 00:03:04.470
then you can select that, and
you can see the details for that item.

44
00:03:04.470 --> 00:03:09.533
And so if you think about a basic email
application where you have all your

45
00:03:09.533 --> 00:03:15.600
emails, you select one, you can read it,
that's a master detail view application.

46
00:03:15.600 --> 00:03:19.853
As well as if anybody knows when you
start to build out a new framework, or

47
00:03:19.853 --> 00:03:23.757
you're evaluating the new framework,
so if I was going to go, and

48
00:03:23.757 --> 00:03:28.536
evaluate let's say, reactor view, or
something, I'm gonna check this out.

49
00:03:28.536 --> 00:03:34.780
What is the quintessential hello world
application for JavaScript frameworks?

50
00:03:34.780 --> 00:03:38.130
Well, it's the to-do list.

51
00:03:38.130 --> 00:03:39.430
What is a to-do list?

52
00:03:39.430 --> 00:03:43.120
It is nothing more than
a master detail view.

53
00:03:43.120 --> 00:03:46.366
You have a master list
of your to-do items, and

54
00:03:46.366 --> 00:03:51.570
then you can either add a to do item,
delete one, or modify it, and view it.

55
00:03:51.570 --> 00:03:57.574
So I believe that this interface,
when I'm working with developers,

56
00:03:57.574 --> 00:04:03.480
if I can get them to build
a well-architected, component-driven,

57
00:04:03.480 --> 00:04:08.387
component-centric master
detail view application that

58
00:04:08.387 --> 00:04:13.810
can communicate with a back
end API such as a RESTful API.

59
00:04:13.810 --> 00:04:19.545
Once somebody can get to that place, and
they really understand those pieces,

60
00:04:19.545 --> 00:04:23.481
I believe that they are well
equipped to really build,

61
00:04:23.481 --> 00:04:27.950
really anything in terms of angular,
really any framework.

62
00:04:27.950 --> 00:04:32.297
Because from there you're simply
iterating on ideas that you're already

63
00:04:32.297 --> 00:04:33.720
familiar with.

64
00:04:33.720 --> 00:04:36.772
So let me just escape out of here, and

65
00:04:36.772 --> 00:04:40.820
I'll just show everybody
what this looks like.

66
00:04:42.210 --> 00:04:47.468
So, in the repository itself,
I have created this main branch that

67
00:04:47.468 --> 00:04:53.106
has kind of everything we're gonna get to,
as well as wherever I end up.

68
00:04:53.106 --> 00:04:57.260
I'm more than likely going to push
this back into the main branch.

69
00:04:57.260 --> 00:05:00.680
And so this is kinda a completed
version of the application.

70
00:05:00.680 --> 00:05:05.040
And then I have one more branch here,
which is a start branch.

71
00:05:05.040 --> 00:05:10.059
And so I've went ahead, and kinda
pre-populated some things, because this

72
00:05:10.059 --> 00:05:15.260
is not by any means an HTML or CSS course,
there is plenty material for that.

73
00:05:15.260 --> 00:05:20.156
So we're not going to spend time ironing
out, and building out HTML templates,

74
00:05:20.156 --> 00:05:21.600
and different things.

75
00:05:21.600 --> 00:05:27.467
So, just so that we can focus on being
as effective as possible, and spending

76
00:05:27.467 --> 00:05:33.625
the most time getting repetitions that
matter when we start into our exercises.

77
00:05:33.625 --> 00:05:38.553
We're going to start with the start
branch, and I've just done a little bit

78
00:05:38.553 --> 00:05:42.110
of heavy lifting so
that we can focus on the main thing.

79
00:05:43.430 --> 00:05:48.191
And just real quick so we can see
what this application looks like,

80
00:05:48.191 --> 00:05:51.506
and where we're going,
we have a home route,

81
00:05:51.506 --> 00:05:55.870
which then has some lessons for
a particular course.

82
00:05:55.870 --> 00:05:59.002
And then what we're really
gonna be focusing on

83
00:05:59.002 --> 00:06:01.850
is building out this course list here.

84
00:06:01.850 --> 00:06:05.946
With that said,
I'm gonna just spin this up, and

85
00:06:05.946 --> 00:06:10.240
we'll let this run, and
once this is completed, so

86
00:06:10.240 --> 00:06:15.622
since I'm here, you saw that on
the command line I did npm start.

87
00:06:15.622 --> 00:06:22.980
And we are actually, using, so
that we get a back end database.

88
00:06:22.980 --> 00:06:26.136
I'm using a JSON server, and
once we dig into the code,

89
00:06:26.136 --> 00:06:28.170
I'll elaborate on that more.

90
00:06:28.170 --> 00:06:33.066
But there's just a few additional pieces
that we're using the big one being

91
00:06:33.066 --> 00:06:37.961
JSON server, so that we can have something
that we can pull from a server, so

92
00:06:37.961 --> 00:06:39.515
that we can display it.

