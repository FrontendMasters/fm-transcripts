WEBVTT

1
00:00:00.260 --> 00:00:05.052
And so just to recap what
we've done starting from 0,

2
00:00:05.052 --> 00:00:11.090
we saw how that we could use the
Angular CLI to generate a lot of stuff,

3
00:00:11.090 --> 00:00:16.970
IE components,
services interfaces very, very quickly.

4
00:00:16.970 --> 00:00:20.755
And so,
when you're building an application,

5
00:00:20.755 --> 00:00:26.404
especially from the ground up,
I recommend leverage the CLI to the max.

6
00:00:26.404 --> 00:00:32.277
And then from there,
we have successfully went upon a journey,

7
00:00:32.277 --> 00:00:37.606
an epic journey to build out
a master detail view in Angular

8
00:00:37.606 --> 00:00:42.394
that not only uses component
driven architecture,

9
00:00:42.394 --> 00:00:46.610
but communicates with a RESTful API.

10
00:00:46.610 --> 00:00:51.202
And so for
me when I am working with developers and

11
00:00:51.202 --> 00:00:56.242
mentoring them, or
as part of an engagement that I'm

12
00:00:56.242 --> 00:01:01.506
training developers kind of
that first step that I wanna

13
00:01:01.506 --> 00:01:06.883
get new developers to is to be
able to write an application

14
00:01:06.883 --> 00:01:12.090
that can successfully
complete a full crud cycle.

15
00:01:12.090 --> 00:01:13.686
So let's create, read, update.

16
00:01:13.686 --> 00:01:16.057
And delete.

17
00:01:16.057 --> 00:01:20.882
And so in this case,
what we have is we've been able

18
00:01:20.882 --> 00:01:25.260
to consume courses from
a remote courses API,

19
00:01:25.260 --> 00:01:30.030
which we can see here,
and then display that.

20
00:01:30.030 --> 00:01:36.400
But then also, we have the ability
to select it, edit it, update it.

21
00:01:36.400 --> 00:01:42.149
And in doing so
we have seen how to wire up

22
00:01:42.149 --> 00:01:47.920
routing to route from one, kinda one.

23
00:01:47.920 --> 00:01:54.120
Let's say section of the app to
the other and then as well using forms,

24
00:01:54.120 --> 00:02:00.005
we have the ability to capture a bind
to a data structure or a model,

25
00:02:00.005 --> 00:02:06.400
update it and then save it back out and
push it to the data layer.

26
00:02:06.400 --> 00:02:11.537
The one thing that I think
is important to mention that

27
00:02:11.537 --> 00:02:16.674
I have said a few times is
that when you are dealing with

28
00:02:16.674 --> 00:02:23.637
forms because they are mutated by nature,
that it's important to one,

29
00:02:23.637 --> 00:02:28.776
encapsulate that form into
a standalone component,

30
00:02:28.776 --> 00:02:32.890
but then also isolate that mutation.

31
00:02:32.890 --> 00:02:37.450
And how we did that is by taking
the object that we wanted to bind to and

32
00:02:37.450 --> 00:02:40.350
then just creating a copy of that.

33
00:02:40.350 --> 00:02:44.892
We also had a pretty interesting
discussion about why I

34
00:02:44.892 --> 00:02:50.226
personally am not convinced that
reactive forms provide as much

35
00:02:50.226 --> 00:02:56.220
value as the marketing brochures
would leave you to believe.

36
00:02:56.220 --> 00:03:02.120
Because I think everything that you
do can be done with in a lot of ways,

37
00:03:02.120 --> 00:03:07.190
way more efficiently using
template driven forms.

38
00:03:07.190 --> 00:03:12.336
And so here we are at the end
of this journey with what

39
00:03:12.336 --> 00:03:17.602
I would consider to be a really
good cut at what has all

40
00:03:17.602 --> 00:03:23.330
the makings of being a non
trivial application.

41
00:03:23.330 --> 00:03:28.465
And so I'd say from here, kind of
that next step would be to dig into

42
00:03:28.465 --> 00:03:34.428
enterprise angular patterns,
enterprise angular development as a whole,

43
00:03:34.428 --> 00:03:38.373
just enterprise angular
development as a whole and

44
00:03:38.373 --> 00:03:43.510
start to look at how to expand
upon this by implementing NGRX.

45
00:03:43.510 --> 00:03:48.444
And also I recommend Cypress,
and instead tools and

46
00:03:48.444 --> 00:03:52.033
just looking at ways to take this, and

47
00:03:52.033 --> 00:03:56.073
then just incrementally expanded out into

48
00:03:56.073 --> 00:04:01.120
an application that maybe has 3,
4 or 5 features,

49
00:04:01.120 --> 00:04:07.330
as well as the ability to log in and
log out etcetera, but.

50
00:04:07.330 --> 00:04:11.170
If you've made it this far,
thank you so much.

51
00:04:11.170 --> 00:04:11.692
I really,

52
00:04:11.692 --> 00:04:15.596
really appreciate the time that we've
spent over the course of this workshop.

53
00:04:15.596 --> 00:04:20.931
And as always, please hit me up
on Twitter if you get stuck,

54
00:04:20.931 --> 00:04:26.960
or you do something awesome,
or something awesome happens.

55
00:04:26.960 --> 00:04:32.090
In your programming journey,
this is why I love to do this.

56
00:04:32.090 --> 00:04:35.990
And your success is ultimately my success.

57
00:04:35.990 --> 00:04:40.670
So I appreciate everybody who
has attended this workshop.

58
00:04:40.670 --> 00:04:46.336
And anybody in the future, yes,
I'm talking to you, who goes through

59
00:04:46.336 --> 00:04:52.018
this workshop, and I really hope
that you build better things better.

