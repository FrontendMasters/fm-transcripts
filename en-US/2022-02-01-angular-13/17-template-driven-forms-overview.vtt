WEBVTT

1
00:00:00.220 --> 00:00:03.797
We're gonna talk about template driven
forms somebody did ask are we going to

2
00:00:03.797 --> 00:00:05.127
talk about reactive forms?

3
00:00:05.127 --> 00:00:10.561
This is where I think I
tend to diverge against

4
00:00:10.561 --> 00:00:15.427
at least what is on the Angular website.

5
00:00:15.427 --> 00:00:20.611
In my opinion, in most cases reactive

6
00:00:20.611 --> 00:00:27.415
forms actually is an over
engineered solution for

7
00:00:27.415 --> 00:00:32.437
a problem that in most cases should be

8
00:00:32.437 --> 00:00:37.461
solved with a template driven form.

9
00:00:37.461 --> 00:00:41.740
This is probably one of the few things
that I actually agree with ward bell on.

10
00:00:42.790 --> 00:00:48.357
That everything that you can do
in reactive forms, believe it or

11
00:00:48.357 --> 00:00:53.510
not, you can do in template
driven forms in a lot less code,

12
00:00:53.510 --> 00:00:55.900
and it is a lot more simple.

13
00:00:57.040 --> 00:01:01.530
Word actually gives a pretty
good talk at mg comp 2020.

14
00:01:01.530 --> 00:01:03.699
That you can check out, but

15
00:01:03.699 --> 00:01:08.992
in my opinion that unless you're
using something like formally.

16
00:01:08.992 --> 00:01:12.608
That what you get with reactive forms, for

17
00:01:12.608 --> 00:01:18.290
what you have to do to make that work and
how verbose it is.

18
00:01:18.290 --> 00:01:23.798
That I have a hard time
justifying that value,

19
00:01:23.798 --> 00:01:32.680
especially when I am isolating my
mutations into single components.

20
00:01:32.680 --> 00:01:37.672
So, the difference is I will
say this is that when you have

21
00:01:37.672 --> 00:01:43.297
a template driven form,
I can bind it to a data object directly.

22
00:01:43.297 --> 00:01:46.177
When I have a reactive form,
what I have to do is I

23
00:01:46.177 --> 00:01:51.400
have to pull out the form controller,
which exists in template driven forms.

24
00:01:51.400 --> 00:01:57.300
And I have to essentially piece in
every single property, one at a time.

25
00:01:57.300 --> 00:02:02.139
And for basic simple forms,
that to me just does not make sense.

26
00:02:02.139 --> 00:02:06.838
So I'm not going to talk
about reactive forms

27
00:02:06.838 --> 00:02:11.413
other than I think people
adopt them because

28
00:02:11.413 --> 00:02:16.440
this is what the angular
website says to do.

29
00:02:16.440 --> 00:02:21.750
But my experience is that for
what most people are trying to accomplish.

30
00:02:21.750 --> 00:02:26.723
It is a layer of complexity and
overhead that can be solved by just

31
00:02:26.723 --> 00:02:30.790
isolating your forms into
standalone components.

32
00:02:32.480 --> 00:02:34.380
And believe it or not,

33
00:02:34.380 --> 00:02:40.390
they are built on top of essentially
the same underlying forms module.

34
00:02:40.390 --> 00:02:43.610
So, it's like they took something
that worked really well.

35
00:02:43.610 --> 00:02:48.304
The forms module, and they just
attached or added in a bunch of I

36
00:02:48.304 --> 00:02:53.470
think complexity on top of that,
and then you have reactive forms.

37
00:02:53.470 --> 00:02:58.431
And I do think there's use cases for
it, but in most cases, everything that

38
00:02:58.431 --> 00:03:03.850
I would use reactive forms for,
I can already do in template driven forms.

39
00:03:03.850 --> 00:03:07.930
So with that said,
if you're going to use forms or

40
00:03:07.930 --> 00:03:12.910
even reactive forms,
you need to import the forms module.

41
00:03:12.910 --> 00:03:16.822
So, this is, I've been bitten by
this a few times where I'm like,

42
00:03:16.822 --> 00:03:19.650
I don't understand why
my form's not working.

43
00:03:19.650 --> 00:03:24.700
Or if you see something like ngModel
is not recognized, the reason why that

44
00:03:24.700 --> 00:03:30.700
is probably happening is because you
have failed to import your forms module.

45
00:03:30.700 --> 00:03:37.460
So the big kind of piece
of any form is ngModel.

46
00:03:37.460 --> 00:03:40.280
So this enables a two way data binding.

47
00:03:40.280 --> 00:03:45.512
And what this does is this
creates a form control instance

48
00:03:45.512 --> 00:03:51.290
from a domain model and
then it binds that to the form elements.

49
00:03:51.290 --> 00:03:56.394
So one thing that's interesting about
forms is that when you have a form,

50
00:03:56.394 --> 00:04:00.170
there's a couple things
that are happening.

51
00:04:00.170 --> 00:04:08.020
So you have the data portion of the form,
and then you have the state of the form.

52
00:04:08.020 --> 00:04:11.610
For instance,
is this form in a valid state?

53
00:04:11.610 --> 00:04:16.410
Yes or no why is it in a valid state or
not in a valid state and

54
00:04:16.410 --> 00:04:21.410
so under the hood what Angular
does is that they attach a form

55
00:04:21.410 --> 00:04:26.423
control even nested form
controls to these elements that.

56
00:04:26.423 --> 00:04:32.005
Essentially maps, the domain model or
the data to that element,

57
00:04:32.005 --> 00:04:37.390
and then also keeps track whether or
not it is valid.

58
00:04:37.390 --> 00:04:42.250
And we can create a local
variable reference to inside

59
00:04:42.250 --> 00:04:44.640
of ngModel to see this.

60
00:04:44.640 --> 00:04:50.490
Typically, I don't do this at the ngModel
level, but I do do it that the form level.

61
00:04:50.490 --> 00:04:57.730
So, here using ngModel that I can
create a reference called name ref.

62
00:04:57.730 --> 00:05:03.910
If I wanted to see it and point this
to ngModel, I rarely ever do this.

63
00:05:03.910 --> 00:05:10.093
Instead, what I do is I use
the top level form control,

64
00:05:10.093 --> 00:05:16.820
which is bound to like when
it detects a form element.

65
00:05:16.820 --> 00:05:22.220
It also tracks or
attaches not ngMdel but ngControl.

66
00:05:22.220 --> 00:05:24.940
So ngModel attaches
the FormControl to the element.

67
00:05:24.940 --> 00:05:30.975
ngControl is the top level FormControl
that tracks again value and

68
00:05:30.975 --> 00:05:35.970
validation and
then you can also reference this.

69
00:05:35.970 --> 00:05:39.480
One thing you can do,
I'm not gonna do this here, but

70
00:05:39.480 --> 00:05:43.550
you can actually group these
together using ngModelGroups.

71
00:05:43.550 --> 00:05:47.024
So for instance, if you had a form
that had like a username or

72
00:05:47.024 --> 00:05:49.875
you know user information
plus like an address,

73
00:05:49.875 --> 00:05:54.417
you could actually segment those into
FormGroups, which is a possibility.

74
00:05:54.417 --> 00:06:01.851
So, in this case we are referencing
ngForm using dollar form ref,

75
00:06:01.851 --> 00:06:06.783
and this will keep track
of the entire form.

76
00:06:06.783 --> 00:06:11.663
So what this allows us to do
is we can dump this out by

77
00:06:11.663 --> 00:06:16.917
tracking the value and
the valid properties on this.

78
00:06:16.917 --> 00:06:21.961
And I mentioned ngModelGroup
that we can kind of group

79
00:06:21.961 --> 00:06:29.597
pieces of the form together to create kind
of like a substructure if we wanted to.

80
00:06:29.597 --> 00:06:34.463
So what this would look like is you'll see
here that I'm creating an ngModelGroup of

81
00:06:34.463 --> 00:06:38.660
user and then I'm able to nest the first
name and the last name into that.

82
00:06:40.280 --> 00:06:45.561
And one other piece here that
I'll discuss is that Angular

83
00:06:45.561 --> 00:06:50.519
not only does it attach
automatically a form control,

84
00:06:50.519 --> 00:06:54.310
but it also attaches validation styles.

85
00:06:54.310 --> 00:06:59.980
So If a form is valid,
then you have an entry valid style.

86
00:06:59.980 --> 00:07:04.980
If it's not entry invalid, so
also you have pristine and

87
00:07:04.980 --> 00:07:10.305
untouched which is like if
somebody hasn't touched a form.

88
00:07:10.305 --> 00:07:14.130
You might want to track that like hey,
you need to fill this out, etc.

89
00:07:15.320 --> 00:07:19.276
And so this is where you can do
like ngInvalid and valid and

90
00:07:19.276 --> 00:07:23.316
with Angular material they kind
of style this for you, but

91
00:07:23.316 --> 00:07:26.210
if you wanted to override this you could.

