WEBVTT

1
00:00:00.000 --> 00:00:04.355
I'm going to hop into my command line.

2
00:00:08.566 --> 00:00:10.993
And can everybody see this, okay?

3
00:00:13.338 --> 00:00:14.178
Good, all right.

4
00:00:16.160 --> 00:00:19.932
Now, I'm going to just do
this off,of my desktop.

5
00:00:19.932 --> 00:00:24.540
And so, we can see here just I'm

6
00:00:24.540 --> 00:00:29.159
gonna show what version I have.

7
00:00:29.159 --> 00:00:31.567
So I'm running 1303.

8
00:00:31.567 --> 00:00:39.513
And now let's generate a new application.

9
00:00:39.513 --> 00:00:43.953
So I don't know,
let's go Hello FBM for fun and

10
00:00:43.953 --> 00:00:48.621
masters and
it's going to ask us a few questions.

11
00:00:48.621 --> 00:00:51.360
Would you like to add routing?

12
00:00:51.360 --> 00:00:57.140
I do like to add routing which is
going to add another routing module.

13
00:00:57.140 --> 00:01:00.820
And what stylesheet format would you like?

14
00:01:00.820 --> 00:01:05.939
So we're gonna go with SCSS and
you can see

15
00:01:05.939 --> 00:01:11.210
here that it is generated
a bunch of files.

16
00:01:11.210 --> 00:01:15.900
And then now it's going through and
installing some dependencies.

17
00:01:18.350 --> 00:01:22.150
And we're going to let
this kind of do its thing.

18
00:01:22.150 --> 00:01:28.067
And what's funny about this is
this takes all of three minutes,

19
00:01:28.067 --> 00:01:33.010
four minutes it's hard to say,
that took even less.

20
00:01:33.010 --> 00:01:38.120
But this used to take me an afternoon.

21
00:01:38.120 --> 00:01:44.805
So from here, I'll just clear this and
we going to step into this.

22
00:01:44.805 --> 00:01:50.220
Alright, and
you can see here that it's generated or

23
00:01:50.220 --> 00:01:53.357
source node modules etc here.

24
00:01:53.357 --> 00:02:01.860
And before I do any of this I'm
just going to go NPM start.

25
00:02:01.860 --> 00:02:07.339
And let's see what happens, so
it is with Angular 13 they've

26
00:02:07.339 --> 00:02:13.121
one change the way that they bundle
the files but they have baked in,

27
00:02:13.121 --> 00:02:17.700
like caching into this to
make it a little bit faster.

28
00:02:17.700 --> 00:02:22.760
And you can see here
compiled successfully and

29
00:02:22.760 --> 00:02:26.140
we are on local host 4200.

30
00:02:26.140 --> 00:02:30.520
And so this is our application.

31
00:02:30.520 --> 00:02:35.408
And the Angular team has graciously
gave us a couple of links

32
00:02:35.408 --> 00:02:38.060
here that we can click through.

33
00:02:38.060 --> 00:02:46.470
It was very nice of them to
tell us what we can do next.

34
00:02:47.950 --> 00:02:52.045
And so from here,
let's hop back into the command line.

35
00:02:52.045 --> 00:02:56.622
And I'm just going to
open a new window here.

36
00:02:56.622 --> 00:03:00.838
And let me just open this up in VS code,
so we can see this as well.

37
00:03:04.390 --> 00:03:07.978
In the source, we have app.

38
00:03:07.978 --> 00:03:10.499
And a couple things.

39
00:03:10.499 --> 00:03:15.380
So we have our app module,
which let's just use our previous kind

40
00:03:15.380 --> 00:03:19.754
of that high level thing to
just kinda anchor some of this.

41
00:03:19.754 --> 00:03:26.257
We have our app component, browser module,
and our app routing module.

42
00:03:26.257 --> 00:03:30.596
So router module comes
from Angular in this app

43
00:03:30.596 --> 00:03:35.390
routing module is what was
generated from the CLI.

44
00:03:35.390 --> 00:03:40.926
And we don't have any routes in here but
it has went ahead and

45
00:03:40.926 --> 00:03:46.590
created this for us and
it is essentially edited the import.

46
00:03:46.590 --> 00:03:51.168
So if you have a module you wanna
make available to another module,

47
00:03:51.168 --> 00:03:52.980
this is where you do that.

48
00:03:52.980 --> 00:03:55.510
And we have our app component.

49
00:03:55.510 --> 00:03:59.028
And within this, you'll see here,

50
00:03:59.028 --> 00:04:03.568
not a lots happening other
than we have a class,

51
00:04:03.568 --> 00:04:08.580
our metadata here and
then this is all of our markup.

52
00:04:08.580 --> 00:04:14.113
So I don't want to get
too much into this but

53
00:04:14.113 --> 00:04:20.720
what we can do is ng g and
I could type out component,

54
00:04:20.720 --> 00:04:24.736
but you can use c as a shortcut.

55
00:04:24.736 --> 00:04:29.834
And I'm going to do home but
you notice here that I have some command

56
00:04:29.834 --> 00:04:34.493
line history that it's kinda
trying to spoil the surprise.

57
00:04:34.493 --> 00:04:38.332
But by using ADI hyphen D.

58
00:04:38.332 --> 00:04:43.160
This allows us to run in dry mode or
dry run.

59
00:04:43.160 --> 00:04:48.374
And so I recommend especially
if you're trying out a new one,

60
00:04:48.374 --> 00:04:51.091
that you can go ahead and check.

61
00:04:51.091 --> 00:04:55.681
And just make sure everything
is where it needs to be.

62
00:04:55.681 --> 00:05:02.240
So, I'm gonna go ahead and take that off.

63
00:05:02.240 --> 00:05:06.951
And you can see here now
we have our home component.

64
00:05:06.951 --> 00:05:09.556
And if I go back into my code,

65
00:05:14.018 --> 00:05:18.019
You'll notice here that inside of app,

66
00:05:18.019 --> 00:05:23.085
we have home, home component or
component class.

67
00:05:23.085 --> 00:05:28.507
We have a .css or
Sass file that we can put any kind

68
00:05:28.507 --> 00:05:34.870
of component specific styles
as well as a spec file here.

69
00:05:34.870 --> 00:05:39.417
So, if I go back into the terminal and

70
00:05:39.417 --> 00:05:44.570
I go, ng test, we'll see what happens.

71
00:05:44.570 --> 00:05:50.800
But what this should do
is kick up a test runner.

72
00:05:50.800 --> 00:05:54.667
And hopefully because haven't done
anything, I hope this passes.

73
00:05:54.667 --> 00:06:00.620
And that'd be amazing, but it is spinning
up karma, which is the test runner.

74
00:06:00.620 --> 00:06:05.379
And then it's saying all right,
we're gonna run so.

75
00:06:05.379 --> 00:06:09.388
Right out of the gates, and
this is testing is something that's not

76
00:06:09.388 --> 00:06:12.286
very exciting, but
it is absolutely critical.

77
00:06:12.286 --> 00:06:16.652
And the fact is that I've created
two components from the generator,

78
00:06:16.652 --> 00:06:20.648
one came with the project, but
then I have a home component, and

79
00:06:20.648 --> 00:06:23.390
it's already instrumented to write test.

80
00:06:23.390 --> 00:06:29.646
And so my experience is that the further
the distance is away from writing code and

81
00:06:29.646 --> 00:06:35.442
being able to write an execute test,
the further that distance gets away,

82
00:06:35.442 --> 00:06:40.320
the greater chance that tests
are just not going to be written.

83
00:06:40.320 --> 00:06:44.049
And so
I was able to generate a component and

84
00:06:44.049 --> 00:06:49.029
Boom, I already have a test
harness in place that works.

85
00:06:49.029 --> 00:06:51.214
So I'm gonna go ahead and close this.

86
00:06:51.214 --> 00:06:52.637
But you can see that it's all green.

87
00:06:52.637 --> 00:06:55.804
I think this is pretty cool.

88
00:06:55.804 --> 00:06:57.158
Now, just a few other things.

89
00:06:57.158 --> 00:07:02.672
Let's go nggs and
I'm gonna do a service and

90
00:07:02.672 --> 00:07:06.704
let's call this I don't know.

91
00:07:06.704 --> 00:07:11.080
Like, we're gonna call this courses and
I'm gonna a dry run.

92
00:07:11.080 --> 00:07:12.671
And let's see what happens.

93
00:07:12.671 --> 00:07:19.609
So it's generating a service and the spec.

94
00:07:19.609 --> 00:07:21.995
But what I don't want is,

95
00:07:21.995 --> 00:07:26.993
I don't want this to go right
in the root of my project.

96
00:07:26.993 --> 00:07:31.833
So what I would do here is
in the case of using just

97
00:07:31.833 --> 00:07:36.320
the Angular CLI,
I will put my common file.

98
00:07:36.320 --> 00:07:41.877
So anything that's not component
related into a common folder,

99
00:07:41.877 --> 00:07:45.625
so essentially, I organized by features.

100
00:07:45.625 --> 00:07:49.933
So Home,
let's say that's a feature courses.

101
00:07:49.933 --> 00:07:53.909
And anything that is common or
that can be shared across features,

102
00:07:53.909 --> 00:07:58.028
I treat that as a large common
feature that then gets segmented down.

103
00:07:58.028 --> 00:08:01.599
And let's go with courses here.

104
00:08:01.599 --> 00:08:07.276
And, We'll see here that it generated or

105
00:08:07.276 --> 00:08:12.374
it's putting it in common services and
then the courses service.

106
00:08:12.374 --> 00:08:17.154
So let me go ahead and run this,
we'll generate this and

107
00:08:17.154 --> 00:08:22.050
then let's step in the code and
see what this looks like.

108
00:08:24.719 --> 00:08:28.902
So we have our home which we generated and

109
00:08:28.902 --> 00:08:33.462
then in here we have our courses, service.

110
00:08:33.462 --> 00:08:38.467
And there's nothing here, but
you'll see that it went ahead and

111
00:08:38.467 --> 00:08:42.653
its provided in route,
which is why if we go down here,

112
00:08:42.653 --> 00:08:45.941
that you don't see this in the providers.

113
00:08:45.941 --> 00:08:50.265
Because I can attach it
directly to this module, but

114
00:08:50.265 --> 00:08:55.780
by providing it in route,
it just is attached to the route module.

115
00:08:59.862 --> 00:09:05.446
And so ng new we'll generate a new

116
00:09:05.446 --> 00:09:10.840
Angular project and using ngg.

117
00:09:10.840 --> 00:09:13.650
You can generate all sorts of stuff.

118
00:09:13.650 --> 00:09:21.299
And let me just see what happens
if we do ngg hyphen, help.

119
00:09:21.299 --> 00:09:24.860
So, one other thing worth mentioning,

120
00:09:24.860 --> 00:09:29.884
is that if you use dash dash help or
hyphen, hyphen help,

121
00:09:29.884 --> 00:09:34.820
you can see a number of things
that are available to you.

122
00:09:34.820 --> 00:09:40.572
So, Application class component dah.

123
00:09:40.572 --> 00:09:41.687
Lots of stuff.

124
00:09:41.687 --> 00:09:44.966
And this was totally not in my notes, but

125
00:09:44.966 --> 00:09:49.220
let's see what happens if
I generate an interface.

126
00:09:49.220 --> 00:09:53.712
So let's go common models course-d,

127
00:09:53.712 --> 00:09:58.210
I just want to see what this looks like.

128
00:09:58.210 --> 00:10:02.515
Alright, we will take
off the dry one flag and

129
00:10:02.515 --> 00:10:08.080
let's hop into the code and
just see what this looks like.

130
00:10:08.080 --> 00:10:12.460
So common models course.

131
00:10:12.460 --> 00:10:15.350
And then you could see here I could
start to build out my interface.

132
00:10:15.350 --> 00:10:19.390
So if I had a course I might
have title which is a string.

133
00:10:19.390 --> 00:10:25.515
Description which is also
a strain it could be progress,

134
00:10:25.515 --> 00:10:31.653
which is lets a number and
completed, which is pulling.

135
00:10:31.653 --> 00:10:37.771
And so this is just off the top
of my head, but by using the CLI,

136
00:10:37.771 --> 00:10:44.377
I was very quickly able to generate and
spin certain things at one.

137
00:10:44.377 --> 00:10:49.170
The project obviously, but
I was able to generate the pieces that I

138
00:10:49.170 --> 00:10:54.232
could then come in and we could start
to work in including a component.

139
00:10:54.232 --> 00:10:58.274
A service and
in this case in interface and so

140
00:10:58.274 --> 00:11:03.298
as we start to work through
the rest of these modules and

141
00:11:03.298 --> 00:11:05.810
some of these challenges,

142
00:11:05.810 --> 00:11:11.510
I recommend definitely keeping
ngg close to the vest as it is.

