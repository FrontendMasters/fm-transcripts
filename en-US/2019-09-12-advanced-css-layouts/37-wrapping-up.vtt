WEBVTT

1
00:00:00.390 --> 00:00:03.440
&gt;&gt; Jen Kramer: Okay, so
just to sort of tie everything up here,

2
00:00:03.440 --> 00:00:07.540
I have tongue-in-cheek called this
technique the death of Bootstrap.

3
00:00:07.540 --> 00:00:10.890
So let's just evaluate that
statement a little bit.

4
00:00:10.890 --> 00:00:15.920
First of all, obviously,
we are limited here by browser support.

5
00:00:15.920 --> 00:00:19.370
Just like we all, I mean, that's the world
of being a front end web developer.

6
00:00:19.370 --> 00:00:24.010
And so, there are plenty [COUGH]
browsers that

7
00:00:24.010 --> 00:00:28.280
still are not supporting these
custom properties and so forth.

8
00:00:28.280 --> 00:00:31.476
But we have managed to get around
all of those layout problems.

9
00:00:31.476 --> 00:00:35.330
We can now change our columns at will,
we can change our widths at will.

10
00:00:35.330 --> 00:00:39.360
Pretty cool for changing the ways
that we're laying out webpages.

11
00:00:39.360 --> 00:00:42.780
We've done it in a flexible way,
so we have flexible boxes,

12
00:00:42.780 --> 00:00:44.680
we have flexible gaps in between them.

13
00:00:44.680 --> 00:00:48.950
We don't have to do a whole lot of math
to change those things as we go, right?

14
00:00:48.950 --> 00:00:52.561
This formula, you can use again and
again and again within one webpage.

15
00:00:52.561 --> 00:00:55.600
You can use it across a whole
bunch of different websites.

16
00:00:55.600 --> 00:00:58.060
That'll be a pretty cool thing to do,
okay?

17
00:00:59.110 --> 00:01:01.360
Where is Bootstrap still
going to be useful?

18
00:01:01.360 --> 00:01:04.210
Well, it's still going to be
useful if you don't like to write

19
00:01:04.210 --> 00:01:05.720
all your CSS from scratch.

20
00:01:06.720 --> 00:01:09.100
Bootstrap makes it look kind
of pretty from the beginning.

21
00:01:09.100 --> 00:01:10.970
So that's still there.

22
00:01:10.970 --> 00:01:15.140
But Bootstrap, we have broken
the paradigm of the 12 column layout.

23
00:01:15.140 --> 00:01:17.510
You can now have whatever
columns you want.

24
00:01:17.510 --> 00:01:22.640
And we have reduced all of the,
in Bootstrap, as we state over and

25
00:01:22.640 --> 00:01:25.620
over again, all the various different
kinds of layouts and we stack up all

26
00:01:25.620 --> 00:01:29.920
the different kinds of classes to try to
make it work, we've broken that as well.

27
00:01:29.920 --> 00:01:33.570
We can do exactly what we wanna
do wherever we wanna do it.

28
00:01:33.570 --> 00:01:37.453
So that's sort of why I'm calling
this the death of Bootstrap, okay?

29
00:01:39.454 --> 00:01:41.970
&gt;&gt; Jen Kramer: It's been absolutely
fabulous having you all today.

30
00:01:41.970 --> 00:01:45.320
I am happy to take any additional
questions that we might have.

31
00:01:45.320 --> 00:01:46.780
We have some online?

32
00:01:46.780 --> 00:01:47.860
Okay.

33
00:01:47.860 --> 00:01:51.060
&gt;&gt; Speaker 2: What book
recommendations would you have?

34
00:01:51.060 --> 00:01:55.224
&gt;&gt; Jen Kramer: What I have done is all of
this has been stuff that I've read online.

35
00:01:55.224 --> 00:01:59.438
So I did give you a link inside of,
actually,

36
00:01:59.438 --> 00:02:04.572
in the layout that you've been working on,
is a link to this particular post.

37
00:02:04.572 --> 00:02:08.922
I call this Responsive Design 2.0, is my
shorthand for this technique because it is

38
00:02:08.922 --> 00:02:13.630
completely different from the way we've
approached responsive design before.

39
00:02:13.630 --> 00:02:16.834
And this is some additional
resources you can take a look at.

40
00:02:16.834 --> 00:02:20.770
They've all very much informed what
I have presented for you here today.

41
00:02:20.770 --> 00:02:22.715
I've taken techniques from
these various articles.

42
00:02:22.715 --> 00:02:26.885
I've combined them with other things and
and created some of this stuff.

43
00:02:26.885 --> 00:02:31.193
So there's some reading here for
you on calc, on custom properties.

44
00:02:31.193 --> 00:02:35.452
Especially the Smashing magazine articles
are particularly good for this, and

45
00:02:35.452 --> 00:02:38.740
give you examples of how
this kind of thing can work.

46
00:02:38.740 --> 00:02:41.910
I heavily borrowed here from
this responsive designs and

47
00:02:41.910 --> 00:02:44.460
custom properties building
a flexible grid system.

48
00:02:44.460 --> 00:02:46.170
If you take look at that article,

49
00:02:46.170 --> 00:02:49.890
that's where that concept of
the initial basis that we had here.

50
00:02:49.890 --> 00:02:51.900
But if you read his code really quick,
carefully,

51
00:02:51.900 --> 00:02:55.130
he actually uses borders
to create a quote gap.

52
00:02:55.130 --> 00:02:58.490
So the gap part I wrote myself, okay?

53
00:02:58.490 --> 00:03:01.880
Then, we have some additional
stuff here on grids,

54
00:03:01.880 --> 00:03:06.130
including somebody was asking
earlier about grid with variables.

55
00:03:06.130 --> 00:03:08.950
Here's an article on that,
variables plus grid.

56
00:03:08.950 --> 00:03:12.160
So absolutely you can
combine this technique there.

57
00:03:12.160 --> 00:03:14.920
There's some more things on flexbox,
flexbox grid systems, and

58
00:03:14.920 --> 00:03:17.240
then the games that you probably
already are familiar with.

59
00:03:17.240 --> 00:03:20.880
So feel free to go through this list.

60
00:03:20.880 --> 00:03:25.210
That's probably gonna be better for
you than a book at this point in time.

61
00:03:25.210 --> 00:03:26.250
Yes, we have another question.

62
00:03:28.080 --> 00:03:29.246
&gt;&gt; Speaker 2: Kelly is asking,

63
00:03:29.246 --> 00:03:34.544
with Bootstrap there's a lot of utility
classes for adding margin and padding.

64
00:03:34.544 --> 00:03:39.020
Here, you're kinda moving all
of the concerns to the CSS.

65
00:03:39.020 --> 00:03:42.152
Do you think that's the future of CSS or
that's-

66
00:03:42.152 --> 00:03:43.451
&gt;&gt; Jen Kramer: Well, so remember,

67
00:03:43.451 --> 00:03:48.010
the technique that I presented here today,
basically did the following.

68
00:03:48.010 --> 00:03:52.550
We said whatever we're going to change
across the media queries we put up in

69
00:03:52.550 --> 00:03:54.390
a CSS variable, right?

70
00:03:54.390 --> 00:03:58.340
Then we call that variable, we set up
all of our logic in the mobile out.

71
00:03:58.340 --> 00:04:02.583
And then, in the media queries, we just
change the values of our variables.

72
00:04:02.583 --> 00:04:06.610
So in something like margin,
I gave you one minor example here, and

73
00:04:06.610 --> 00:04:11.273
I did not go back and re factor all of the
other code that I could have gone back and

74
00:04:11.273 --> 00:04:12.276
re-factored.

75
00:04:12.276 --> 00:04:14.250
The time line was too short.

76
00:04:14.250 --> 00:04:16.840
But you can go back and take a look at it.

77
00:04:16.840 --> 00:04:20.297
What is actually changing from
media query to media query?

78
00:04:20.297 --> 00:04:22.960
So if you start with a margin at x,
right, and

79
00:04:22.960 --> 00:04:26.114
you're gonna change it to y,
set it up as a variable,

80
00:04:26.114 --> 00:04:30.830
change the value of the variable
when you get into the media query.

81
00:04:30.830 --> 00:04:35.400
So it's a technique you can apply to
pretty much anything along the way.

82
00:04:35.400 --> 00:04:39.470
I put it here in layouts and
in type because those

83
00:04:39.470 --> 00:04:44.320
are pretty dramatic examples of how you
can really leverage this technique.

84
00:04:44.320 --> 00:04:48.730
But those are equally valid, so you can
apply it to margins and patterns and

85
00:04:48.730 --> 00:04:50.137
other various things.

86
00:04:51.448 --> 00:04:53.183
&gt;&gt; Jen Kramer: Thank you all so
much for all the questions.

87
00:04:53.183 --> 00:04:54.863
I've enjoyed it, and

88
00:04:54.863 --> 00:04:57.613
I look forward to seeing what you
create with this new technique.

89
00:04:57.613 --> 00:04:59.222
So thank you very much.

90
00:04:59.222 --> 00:05:03.320
&gt;&gt; Audience: [APPLAUSE]

