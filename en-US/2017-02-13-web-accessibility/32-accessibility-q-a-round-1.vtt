WEBVTT

1
00:00:00.320 --> 00:00:01.574
&gt;&gt; Jon Kuperman: So, Benji is asking,

2
00:00:01.574 --> 00:00:05.535
has anyone tried using things like
selenium to make automated tests for

3
00:00:05.535 --> 00:00:09.974
accessible keyboard interactions, for
example, tabs, or screen readers?

4
00:00:09.974 --> 00:00:13.331
&gt;&gt; Speaker 2: Yeah, so
I've done some before, specifically for

5
00:00:13.331 --> 00:00:14.790
keyboard shortcuts.

6
00:00:14.790 --> 00:00:16.850
I've done a few, so
they like, load up the page.

7
00:00:18.170 --> 00:00:21.872
So yeah, you can use Selenium for
it just fine.

8
00:00:21.872 --> 00:00:25.920
A lot of the time, I think you can get
away with just using JavaScript and

9
00:00:25.920 --> 00:00:27.410
spying on those events.

10
00:00:27.410 --> 00:00:31.740
If you're using Jasmine or something
like that, you could throw a jKey and

11
00:00:31.740 --> 00:00:35.240
then spy on your next item or
whatever it is.

12
00:00:35.240 --> 00:00:38.260
Like if you look at my shortcut library,
like I don't use web driver for it,

13
00:00:38.260 --> 00:00:41.200
I just simply through
in catch time events.

14
00:00:41.200 --> 00:00:43.064
So yeah, that would be faster, but

15
00:00:43.064 --> 00:00:46.931
you can definitely fire it up with some
kind of web driver task, for sure.

16
00:00:46.931 --> 00:00:52.001
&gt;&gt; Jon Kuperman: Okay, I'm gonna
ask Ben's follow up question next.

17
00:00:52.001 --> 00:00:56.676
Also, are there any automated things to
process screenshots in a similar manner to

18
00:00:56.676 --> 00:00:57.360
no coffee?

19
00:00:59.727 --> 00:01:00.680
&gt;&gt; Speaker 2: Not that I know of.

20
00:01:00.680 --> 00:01:02.850
That would be pretty awesome.

21
00:01:02.850 --> 00:01:08.140
Yeah and nothing that I know of,
no coffee is pretty unique right now,

22
00:01:08.140 --> 00:01:10.520
yeah I don't know of anything
that'll apply those layers.

23
00:01:10.520 --> 00:01:13.300
I mean it seems like it would be kind of
trivial like they've done all the work.

24
00:01:13.300 --> 00:01:17.004
Of getting those effects that you
could peek into their source code and

25
00:01:17.004 --> 00:01:18.895
turn it into something automated.

26
00:01:18.895 --> 00:01:25.010
You could even have that plugin
install as part of your CI.

27
00:01:25.010 --> 00:01:28.290
But, yeah, there's nothing that I know
of right now that'll get you screenshots

28
00:01:30.510 --> 00:01:33.160
of different visualizations like that.

29
00:01:33.160 --> 00:01:33.940
That'd be cool.

30
00:01:33.940 --> 00:01:35.780
If anybody wants to build that,
that'd be sweet.

31
00:01:36.960 --> 00:01:39.800
&gt;&gt; Jon Kuperman: Drew is asking
are there any recommended tools for

32
00:01:39.800 --> 00:01:43.270
accessibility testing that can
see into Angular components?

33
00:01:44.490 --> 00:01:47.120
&gt;&gt; Speaker 2: So, yeah,
as far as that, ngAria will go,

34
00:01:47.120 --> 00:01:49.369
I'm not a big Angular person,
I haven't worked with it all that much.

35
00:01:50.492 --> 00:01:55.079
The ngAria I believe will help with a good
amount of stuff as far as essentially

36
00:01:55.079 --> 00:01:57.630
linting out as your creating components.

37
00:01:57.630 --> 00:01:59.890
I'm not sure further than that.

38
00:01:59.890 --> 00:02:04.095
I know that they've done a lot of really
good work with Aria, and I know like

39
00:02:04.095 --> 00:02:08.375
Marcy's Sutton who I mentioned earlier
has worked a lot with the Angular team.

40
00:02:08.375 --> 00:02:12.191
So I might just do a little bit more of
talking around like maybe ask her or see,

41
00:02:12.191 --> 00:02:15.383
I think they have some pretty good
tools set up around it though.

42
00:02:16.865 --> 00:02:20.741
&gt;&gt; Speaker 2: And then with React,
I know the React ally.

43
00:02:20.741 --> 00:02:23.675
I have worked with that and that works
really nicely just like as you're creating

44
00:02:23.675 --> 00:02:26.935
components it's giving you feedback
on things that you likely missed.

45
00:02:30.955 --> 00:02:33.513
&gt;&gt; Jon Kuperman: What would
you consider to be some of

46
00:02:33.513 --> 00:02:38.136
the more challenging accessibility
problems to have to solve?

47
00:02:38.136 --> 00:02:41.469
&gt;&gt; Speaker 2: I think one of the big
things is that the tools are pretty

48
00:02:41.469 --> 00:02:45.022
easy to implement, but
defining what a good work flow is,

49
00:02:45.022 --> 00:02:48.357
I think we even saw it with
some of the simple examples,

50
00:02:48.357 --> 00:02:52.010
where it's like everybody's
kinda bursting with ideas.

51
00:02:52.010 --> 00:02:54.200
Like what if we put a label,
you know what I mean?

52
00:02:54.200 --> 00:02:58.381
And I think that whatever you decide
on is pretty easy to implement, but

53
00:02:58.381 --> 00:03:02.633
figuring out how people use your site and
what the experience should be,

54
00:03:02.633 --> 00:03:04.814
I think that's kinda challenging.

55
00:03:04.814 --> 00:03:08.469
Where a lot of times at Twitter,
we were really fortunate,

56
00:03:08.469 --> 00:03:13.390
we had a few community people in San
Francisco that would come in and show us.

57
00:03:13.390 --> 00:03:16.932
We had blind users that would come in and
be, I do this all the time,

58
00:03:16.932 --> 00:03:19.669
I try to send a tweet to
a friend via DM and it stinks.

59
00:03:19.669 --> 00:03:21.010
Let me show you how.

60
00:03:21.010 --> 00:03:25.900
But it was hard for
us to really like to really figure out

61
00:03:25.900 --> 00:03:29.040
what a good flow should be like,
it's pretty easy to add the R attributes.

62
00:03:29.040 --> 00:03:32.170
It's hard to know how to do it
in a great way and I guess.

63
00:03:32.170 --> 00:03:36.150
I think it's one of
the biggest challenges and

64
00:03:36.150 --> 00:03:38.930
then it's also really challenging like
the more third party software you equip,

65
00:03:38.930 --> 00:03:41.370
the more you kinda like
start struggling with like.

66
00:03:41.370 --> 00:03:44.104
You just do an iFrame and
they pull out a bunch of junk and

67
00:03:44.104 --> 00:03:45.596
that junk is a inaccessible.

68
00:03:45.596 --> 00:03:49.775
And you're like, we're in contract with,
will you please fix this, and it's like

69
00:03:49.775 --> 00:03:53.635
it's not really in our, things like that,
interfacing can be really difficult to,

70
00:03:53.635 --> 00:03:58.030
where it your users that are affected but
it's not really your software to control.

71
00:03:58.030 --> 00:04:01.530
And then the third thing
I think is just like

72
00:04:01.530 --> 00:04:03.180
that same thing I started talking with.

73
00:04:03.180 --> 00:04:06.474
Everyone kind of feels like it's
everyone else's problem and

74
00:04:06.474 --> 00:04:09.880
like times where I've been like
this is inaccessible and it's like,

75
00:04:09.880 --> 00:04:11.740
we're just gonna ship it now and
we'll fix it later.

76
00:04:11.740 --> 00:04:13.445
And I'm like, yeah but
you don't understand.

77
00:04:13.445 --> 00:04:17.375
The design looks nicer but we're breaking
function, like it works right now

78
00:04:17.375 --> 00:04:20.335
accessibility, this new feature
is broken like how can we,

79
00:04:20.335 --> 00:04:23.415
you know if it was any non-accessibility
issue we'd never ship it.

80
00:04:23.415 --> 00:04:26.845
But a lot of times I think there is
like a general, its just difficult.

81
00:04:26.845 --> 00:04:30.515
It's difficult to get priority for
it, it's difficult to get like

82
00:04:30.515 --> 00:04:34.500
success criteria around it and like its
difficult to get everybody you know what I

83
00:04:34.500 --> 00:04:37.480
mean kinda on I don't think anybody would
complain if you're like I'm gonna spend

84
00:04:37.480 --> 00:04:40.520
my weekends doing accessibility work for
our site they'd be like great.

85
00:04:40.520 --> 00:04:43.320
But then when your like hey
we're gonna be put a freeze on

86
00:04:43.320 --> 00:04:46.570
this feature until it's accessible
like you start ruffling feathers so

87
00:04:46.570 --> 00:04:49.030
I think that's like, that's probably
been the biggest challenge honestly.

88
00:04:51.008 --> 00:04:54.077
&gt;&gt; Jon Kuperman: As you were doing
research for this have you noticed any

89
00:04:54.077 --> 00:04:57.613
kind of black hat techniques people
are using to get around some

90
00:04:57.613 --> 00:05:01.900
of the accessibility rules, and
the same way people might abuse SCO stuff.

91
00:05:01.900 --> 00:05:05.650
&gt;&gt; Speaker 2: Yeah, SCO's a big one,
whether it's content on page or

92
00:05:05.650 --> 00:05:06.830
image alt stuff.

93
00:05:06.830 --> 00:05:11.284
Another one that, I don't know if
I would call it black hat, but

94
00:05:11.284 --> 00:05:16.070
it's a bummer, is when you have
an accessible version of your site,

95
00:05:16.070 --> 00:05:19.500
which is rubbish it's
just like no cool stuff.

96
00:05:19.500 --> 00:05:21.900
Just some text not interactive.

97
00:05:21.900 --> 00:05:25.490
I think that's like just a real bummer and
I think people

98
00:05:25.490 --> 00:05:28.200
get really sad at that kinda thing where
they're like, it's a little blurry.

99
00:05:28.200 --> 00:05:28.790
And then they click.

100
00:05:28.790 --> 00:05:31.640
There'll be like a link like
our accessible version, and

101
00:05:31.640 --> 00:05:32.640
it's just like terrible.

102
00:05:33.830 --> 00:05:37.564
So I see that a lot.

103
00:05:37.564 --> 00:05:41.856
And again I think it's just like it's like
could you spend a quick day, do a quick

104
00:05:41.856 --> 00:05:45.656
audit add some alts, you know what I
mean screeners are so good already but

105
00:05:45.656 --> 00:05:49.766
then people are like alright we're just
gonna remove all the JavaScript CSS and

106
00:05:49.766 --> 00:05:54.290
you know what I mean I think that's
another big one that I see pretty often.

107
00:05:54.290 --> 00:05:57.530
&gt;&gt; Jon Kuperman: Even in, another question
what about responsive design when you

108
00:05:57.530 --> 00:06:01.180
get into things like flexbox and
reordering Dom elements.

109
00:06:01.180 --> 00:06:02.730
&gt;&gt; Speaker 2: Yeah, yeah,
that's interesting.

110
00:06:02.730 --> 00:06:07.550
So for
the most part that stuff goes really well.

111
00:06:07.550 --> 00:06:10.360
In the sense that whether it's
left/right or top/bottom,

112
00:06:10.360 --> 00:06:15.630
the first thing's still first as far
as what the screen reader's gonna read.

113
00:06:15.630 --> 00:06:18.300
There are some things,
especially when you get out of CSS and

114
00:06:18.300 --> 00:06:20.320
more into using JavaScript
to move stuff around.

115
00:06:20.320 --> 00:06:23.700
Where you can really mess up
the like the Dom tree and

116
00:06:23.700 --> 00:06:25.850
you've changed it out from under someone.

117
00:06:25.850 --> 00:06:27.543
So I think that one you have
to be more careful with.

118
00:06:27.543 --> 00:06:32.040
But I do find like Flexbox and
floats degrade pretty nicely.

119
00:06:32.040 --> 00:06:35.410
Just cuz like I said, the first one
stays first, whether it's above or

120
00:06:35.410 --> 00:06:37.210
to the left, yeah.

121
00:06:37.210 --> 00:06:38.300
&gt;&gt; Jon Kuperman: From Ben again,

122
00:06:38.300 --> 00:06:42.910
it seems like navigation menus might be
a hotspot for accessibility problems.

123
00:06:42.910 --> 00:06:47.020
Any suggestions for building navigation
menus on content heavy sites?

124
00:06:47.020 --> 00:06:47.770
&gt;&gt; Speaker 2: Yeah, definitely.

125
00:06:47.770 --> 00:06:50.940
So I think the big issue you
run into is like drop downs and

126
00:06:50.940 --> 00:06:53.260
fly outs making them accessible.

127
00:06:53.260 --> 00:06:54.690
This is actually something,

128
00:06:54.690 --> 00:06:59.010
I think, I'd like to add to
the code base as an example.

129
00:06:59.010 --> 00:07:00.700
So it's like there's some
cool things you can do.

130
00:07:00.700 --> 00:07:03.200
The thing that I would
recommend doing is really

131
00:07:03.200 --> 00:07:07.070
getting familiar with the tab index
stuff because what you can do is like,

132
00:07:07.070 --> 00:07:09.470
you can basically, so
what you wouldn't wanna have happen.

133
00:07:09.470 --> 00:07:12.020
If you have like ten items wide and

134
00:07:12.020 --> 00:07:16.880
each one has a dropdown of five items
deep and each one of those is a fly out.

135
00:07:16.880 --> 00:07:21.330
What you don't want is for someone to
get to the tenth item, then have to hit

136
00:07:21.330 --> 00:07:24.572
the first one which causes the drop down
then go through, you know that I mean?

137
00:07:24.572 --> 00:07:25.330
You don't wanna have to go,
does that make sense? Like,

138
00:07:25.330 --> 00:07:28.850
going through hundreds of items cuz
that's the order that they appear in?

139
00:07:28.850 --> 00:07:31.320
So you'd wanna make sure that,

140
00:07:31.320 --> 00:07:36.050
if you focused on an item which as a drop
down, and those drop downs have flyouts,

141
00:07:36.050 --> 00:07:40.560
those flyouts are hidden until the
dropdown's focused, that kind of stuff.

142
00:07:40.560 --> 00:07:45.365
I would even probably go, maybe go
as far as like each top level item,

143
00:07:45.365 --> 00:07:48.155
you would take all of its children
out of the tab index, and

144
00:07:48.155 --> 00:07:50.805
you'd put an Aria hat,
I can't remember what it is, but

145
00:07:50.805 --> 00:07:54.045
you'd put an Aria label on it, to let
the screen readers know that there's more.

146
00:07:54.045 --> 00:07:57.995
And only show that to screen readers
if they hit space something like that.

147
00:07:57.995 --> 00:07:59.725
Yeah there's a lot of
concerns with navigations,

148
00:07:59.725 --> 00:08:01.705
especially with dropdowns and flyouts.

149
00:08:01.705 --> 00:08:05.470
But I think the big thing is going
through it with the screen reader on and

150
00:08:05.470 --> 00:08:06.200
plucking stuff out.

151
00:08:06.200 --> 00:08:08.780
And then putting it back in
only when it needs to be read.

152
00:08:08.780 --> 00:08:12.890
And you can do that I think pretty easily
just with JavaScript selectors and

153
00:08:12.890 --> 00:08:16.040
be like, okay,
take all the level one and two items and

154
00:08:16.040 --> 00:08:17.840
put a negative tab index on them.

155
00:08:17.840 --> 00:08:21.050
And then only when a key down
is triggered down on a parent,

156
00:08:21.050 --> 00:08:23.699
take that one and put tab index
back on them something like that.

157
00:08:25.934 --> 00:08:28.868
&gt;&gt; Speaker 2: Those things
are tough from UI perspective too.

158
00:08:28.868 --> 00:08:32.820
Right, like cuz another one that's sort
of in the realm of accessibility and I'm

159
00:08:32.820 --> 00:08:36.770
sure we've all experienced flyout menus
where you are the littlest bit off and

160
00:08:36.770 --> 00:08:40.190
you lose the whole thing and
you have to go back into there's a,

161
00:08:40.190 --> 00:08:43.450
I think if you have to do one of those,
there's a lot of concerns.

162
00:08:43.450 --> 00:08:48.280
Like design UX accessibility, but
it's doable it's defiantly doable.

163
00:08:48.280 --> 00:08:52.520
And again, if you use a popular framework,
they usually will give you a head start.

