WEBVTT

1
00:00:00.380 --> 00:00:02.880
&gt;&gt; Jon Kuperman: I always like to
finish off with a combination of

2
00:00:02.880 --> 00:00:05.720
showing a bunch of really cool tools
to make all this stuff easier.

3
00:00:05.720 --> 00:00:08.230
Now that you've gone through all
the hard work of learning it all,

4
00:00:08.230 --> 00:00:10.080
there's some really great auditing tools.

5
00:00:10.080 --> 00:00:13.090
And then at the end go
through anybody that wants

6
00:00:13.090 --> 00:00:14.910
to either online in person pitch a site.

7
00:00:14.910 --> 00:00:17.930
And we can kinda use the tools on
the site and kinda do it together and

8
00:00:17.930 --> 00:00:20.280
identify some issues.

9
00:00:20.280 --> 00:00:21.250
Okay cool, so

10
00:00:21.250 --> 00:00:26.230
starting off one of my big recommendations
is the Accessibility Developer Tools.

11
00:00:26.230 --> 00:00:28.910
So this is different than
the experiment that we just turned on,

12
00:00:28.910 --> 00:00:33.760
this is an actual additional panel under
the audits tab of Chrome DevTools.

13
00:00:33.760 --> 00:00:37.209
So let's go do a quick example.

14
00:00:37.209 --> 00:00:40.209
I'll go to Twitter.com,
cuz that's what I always use.

15
00:00:42.170 --> 00:00:44.370
I won't go to Twitter we go.

16
00:00:44.370 --> 00:00:46.009
All right, and then so

17
00:00:46.009 --> 00:00:50.857
what you can do basically is you
can go over after you install them.

18
00:00:50.857 --> 00:00:53.874
So it's like
Chrome Accessibility Developer Tools and

19
00:00:53.874 --> 00:00:55.770
they have a Google Store link.

20
00:00:55.770 --> 00:00:58.380
So after they're installed you
can go to the Audits tab and

21
00:00:58.380 --> 00:01:01.239
you'll notice this new type of audit
which is an accessibility audit.

22
00:01:02.380 --> 00:01:04.965
So you can go ahead and
reload the page and audit it on load and

23
00:01:04.965 --> 00:01:06.218
it'll do a refresh for you.

24
00:01:06.218 --> 00:01:08.338
And then it will come back
with a bunch of stuff,

25
00:01:08.338 --> 00:01:11.580
most of which will relate to what
we've just been talking about all day.

26
00:01:13.020 --> 00:01:20.560
So as it's kinda loading 53 to 56 make it
a little bit bigger and any second now.

27
00:01:23.839 --> 00:01:25.863
&gt;&gt; Jon Kuperman: Lots of stuff,
lots of goodies.

28
00:01:25.863 --> 00:01:27.990
All right here we go.

29
00:01:27.990 --> 00:01:30.810
So you can do with these audits you can
either audit the present state which

30
00:01:30.810 --> 00:01:32.030
will always go faster.

31
00:01:32.030 --> 00:01:36.160
I always do a reload, just I don't know
why maybe out of habit I just wanna see

32
00:01:36.160 --> 00:01:38.460
everything as it comes down the pipe.

33
00:01:38.460 --> 00:01:41.050
This is taking quite some time,
I might just move on and

34
00:01:41.050 --> 00:01:45.540
come back to this Chrome DevTool audit.

35
00:01:45.540 --> 00:01:49.529
Come on I wonder if I stop
it I'll get anything.

36
00:01:49.529 --> 00:01:51.560
Yes, okay I'll come back
to the DevTool on it.

37
00:01:51.560 --> 00:01:53.120
They're really good.

38
00:01:53.120 --> 00:01:58.567
I'm a little bit wondering if I have,
no network throttling on.

39
00:01:58.567 --> 00:02:02.540
Okay, jeez jeez.

40
00:02:02.540 --> 00:02:03.120
Let's look.

41
00:02:03.120 --> 00:02:04.850
Okay, I'll come back to
the Chrome Extension but

42
00:02:04.850 --> 00:02:06.840
it's the one that I use probably the most,
I'm not sure.

43
00:02:06.840 --> 00:02:08.460
It's buckling a little bit right now.

44
00:02:08.460 --> 00:02:10.680
But we'll move on from it for now.

45
00:02:10.680 --> 00:02:13.550
So but basically the Chrome Extension
will give you some stuff like this after

46
00:02:13.550 --> 00:02:14.120
an audit's run.

47
00:02:14.120 --> 00:02:16.070
So it'll give you like red, yellow, green.

48
00:02:16.070 --> 00:02:20.460
Green for passing tests, yellow for
warnings, and then red for severe issues.

49
00:02:20.460 --> 00:02:24.050
So this is like a WordPress site
that I have, a blog and I ran it.

50
00:02:24.050 --> 00:02:29.741
And there's a severe warning for
media elements missing labels.

51
00:02:29.741 --> 00:02:34.180
And it shows me two different text areas
in my code that I'm missing labels.

52
00:02:34.180 --> 00:02:35.480
You'll get into this a lot.

53
00:02:35.480 --> 00:02:39.670
If anybody's a WordPress developer or
manages a WordPress or Drupal site.

54
00:02:39.670 --> 00:02:42.310
And you start running these audits
sometimes stuff's just out of

55
00:02:42.310 --> 00:02:43.410
your control.

56
00:02:43.410 --> 00:02:46.740
So for
example I use a plug in called Crayon to

57
00:02:46.740 --> 00:02:49.120
handle my syntax highlighting for code.

58
00:02:49.120 --> 00:02:52.869
And the accessibility issue is in that
plug in not in my website necessarily.

59
00:02:52.869 --> 00:02:57.851
So really I could switch plug ins or
I could try to find them and ping them.

60
00:02:57.851 --> 00:03:00.108
And be like hey,
I'm getting this error but, so

61
00:03:00.108 --> 00:03:03.520
it is not always stuff you can fix but
it is at least good to know.

62
00:03:03.520 --> 00:03:08.770
And then I see some warnings about stuff
like how my contrast ratio is not great.

63
00:03:08.770 --> 00:03:12.950
I got some link text that
the audit is saying it is not

64
00:03:12.950 --> 00:03:14.080
really clear what they do.

65
00:03:15.940 --> 00:03:18.670
There's focusable elements that
are obscured by another element.

66
00:03:18.670 --> 00:03:21.568
It is a cool thing that Chrome AppTools
can do since they control the rendering

67
00:03:21.568 --> 00:03:23.494
engine is that if you have
two focusable elements.

68
00:03:23.494 --> 00:03:26.036
And it detects them overlapping
each other in any way.

69
00:03:26.036 --> 00:03:27.767
You'll get a warning about that and

70
00:03:27.767 --> 00:03:32.170
then I've got meaningful images should
not be used in imaging backgrounds.

71
00:03:32.170 --> 00:03:35.330
So the excessbilitals will
always kinda push you for

72
00:03:35.330 --> 00:03:38.660
using proper image tags
over CSS background images.

73
00:03:38.660 --> 00:03:40.695
The exception being
like Jackment Jumbo for

74
00:03:40.695 --> 00:03:43.453
just presentational is fine to
be in the background image.

75
00:03:43.453 --> 00:03:45.377
But if you have like a logo or

76
00:03:45.377 --> 00:03:51.380
a Facebook logo something like that it
should be done in an actual image tag.

77
00:03:51.380 --> 00:03:54.560
Just gonna pop back over
in see if this survived.

78
00:03:54.560 --> 00:03:55.330
It did not.

79
00:03:55.330 --> 00:03:56.650
I'm like killed the whole tab.

80
00:03:58.300 --> 00:04:00.420
Go to Google and try one more here.

81
00:04:01.780 --> 00:04:03.100
Okay, that went really fast.

82
00:04:03.100 --> 00:04:07.700
So, I mean Google's a really simple site
site but severe elements with ARIA roles

83
00:04:07.700 --> 00:04:10.716
must ensure required owned
elements are present.

84
00:04:10.716 --> 00:04:14.580
So looks like we've got some
input that has some kind

85
00:04:14.580 --> 00:04:18.375
of ARIA attribute like an ARIA label
maybe then, and the label isn't there.

86
00:04:18.375 --> 00:04:21.055
So again if you're gonna
specify right like labeled by,

87
00:04:21.055 --> 00:04:24.325
that thing needs to be in the dom
otherwise it's a problem.

88
00:04:24.325 --> 00:04:28.200
And then some other thinks like
images that don't have text alter.

89
00:04:28.200 --> 00:04:29.525
We'll talked about alt text.

90
00:04:30.565 --> 00:04:32.065
The purpose of each link should be clear.

91
00:04:32.065 --> 00:04:34.485
You'll start seeing a lot of
the same kinda repeat ones but

92
00:04:34.485 --> 00:04:36.375
I think this is nice to
have in your arsenal.

93
00:04:36.375 --> 00:04:39.485
A lot of the tools that we're about to
cover require your site to be online and

94
00:04:39.485 --> 00:04:41.280
then you put in the URL.

95
00:04:41.280 --> 00:04:45.316
But the DevTools are nice cuz even if
you're just building your site locally

96
00:04:45.316 --> 00:04:47.286
you can run the tests on them, cool.

97
00:04:47.286 --> 00:04:51.700
Tenon.io is an amazing resource.

98
00:04:51.700 --> 00:04:54.390
We'll go to tenon.io now.

99
00:04:54.390 --> 00:04:56.640
So it kinda works in a few different ways.

100
00:04:56.640 --> 00:05:00.850
The first way is that you can just put
in either some code or a domain and

101
00:05:00.850 --> 00:05:03.120
it will analyze that for accessibility.

102
00:05:03.120 --> 00:05:07.100
It also has services where you can
kind of rig it up like an API.

103
00:05:07.100 --> 00:05:10.407
So it can be really nice if you want
it to be part of your CI testing or

104
00:05:10.407 --> 00:05:11.562
something like that.

105
00:05:11.562 --> 00:05:14.443
Where you deploy your site
to a staging server and

106
00:05:14.443 --> 00:05:17.330
then you send it to Tenon and
Tenon looks over it.

107
00:05:17.330 --> 00:05:22.645
So if I put in another mycodeplanet.io
site for example, and then hit analyze.

108
00:05:22.645 --> 00:05:26.330
It'll go through and and do its thing and
it provides this really great UI.

109
00:05:26.330 --> 00:05:28.140
So it's 31 issues found.

110
00:05:28.140 --> 00:05:31.620
And then it starts here's
a form element with no label.

111
00:05:31.620 --> 00:05:34.110
Here's a link with no text in side of it.

112
00:05:34.110 --> 00:05:37.970
Here's a link with a title attribute
that's the same as the text in side

113
00:05:37.970 --> 00:05:38.670
the link.

114
00:05:38.670 --> 00:05:41.770
So this is just awesome,
a ton of really good information.

115
00:05:41.770 --> 00:05:43.940
It links to recommended fixes.

116
00:05:43.940 --> 00:05:46.260
It's got a bunch of great
documentation on here.

117
00:05:47.410 --> 00:05:49.980
Yeah, I pretty much can't say
enough good things about Tenon.

118
00:05:49.980 --> 00:05:51.582
You know it's a private service so

119
00:05:51.582 --> 00:05:54.076
if you want to get it set up
with API it does cost money.

120
00:05:54.076 --> 00:05:57.947
I guess that's the only bummer but
I think it's a really,

121
00:05:57.947 --> 00:06:01.310
really great service, all right.

122
00:06:01.310 --> 00:06:04.640
And then for those that are not Chrome
users they have some really good ones too.

123
00:06:04.640 --> 00:06:08.560
So their Firefox has
accessibility evaluation toolbar

124
00:06:08.560 --> 00:06:09.860
which just has this model.

125
00:06:09.860 --> 00:06:11.490
It does basically the same
thing as the DevTool.

126
00:06:11.490 --> 00:06:16.660
So it gives you this little model box with
a bunch of accessibility issues in it.

127
00:06:16.660 --> 00:06:19.440
And then it also has the Wave toolbar
which is kind of a weird one,

128
00:06:19.440 --> 00:06:20.770
I kind of like it.

129
00:06:20.770 --> 00:06:23.880
It does this kind of thing,
I'm not sure if people can see that.

130
00:06:23.880 --> 00:06:25.963
So basically it starts grabbing out,

131
00:06:25.963 --> 00:06:28.703
finding different elements
that are focusable.

132
00:06:28.703 --> 00:06:33.260
And then it puts these icons kinda over
your site, like a green way ARIA one

133
00:06:33.260 --> 00:06:36.879
wherever you have ARIA attributes and
like hetero types.

134
00:06:36.879 --> 00:06:41.770
So it kinda like messes up your whole page
view while you're using the wave tool bar.

135
00:06:41.770 --> 00:06:45.970
But it's kinda cool where it breaks
your site into a more accessibility

136
00:06:45.970 --> 00:06:49.470
focused state of like,
here are your focusible elements.

137
00:06:50.830 --> 00:06:57.240
Yeah, we already saw and
destroyed the accessible color palette.

138
00:06:57.240 --> 00:06:59.830
I think they actually just have
something going wrong because it is

139
00:06:59.830 --> 00:07:02.090
supposed to, I don't know.

140
00:07:02.090 --> 00:07:04.533
It suppose to have a little bit
more CSS on it than it was showing.

141
00:07:04.533 --> 00:07:08.210
But as another cool resource where
you can just put in color codes.

142
00:07:08.210 --> 00:07:12.870
The accessibility auditor for Chrome and
Firefox will do all the color stuff too.

143
00:07:12.870 --> 00:07:16.330
I would mainly reach out to this one
if I was doing some non web stuff.

144
00:07:16.330 --> 00:07:20.400
Making business cards or a flyer or
something like that where

145
00:07:20.400 --> 00:07:22.855
you maybe in Photoshop, so
you can't run a web audit on it.

146
00:07:22.855 --> 00:07:27.570
But you can still put in hex codes or
RGB or whatever and see how it's doing.

147
00:07:28.840 --> 00:07:31.030
So we kinda saw this,
you can pick your conformance level.

148
00:07:31.030 --> 00:07:34.888
So we've been covering, kind of double
a and triple a conformance as we've

149
00:07:34.888 --> 00:07:38.400
been going through the course but
triple a is going to be more strict.

150
00:07:39.450 --> 00:07:42.350
And then, yeah, you can go ahead and
look at them and see where they failed and

151
00:07:42.350 --> 00:07:43.170
where the passed.

152
00:07:43.170 --> 00:07:46.000
This one's really cool and
it's really new.

153
00:07:46.000 --> 00:07:49.250
It's from the people at Khan Academy,
and it's open source.

154
00:07:49.250 --> 00:07:53.111
And it's called tota11y, but it's A-1-1-Y.

155
00:07:53.111 --> 00:07:57.390
So yeah, this one's pretty neat, so
basically what you do is you install it.

156
00:07:57.390 --> 00:08:00.450
And then it'll give you
these little glasses here.

157
00:08:00.450 --> 00:08:05.060
And so what these little glasses will
kinda help you do is you can pick your

158
00:08:05.060 --> 00:08:08.030
different things, like,
what you're looking for here.

159
00:08:08.030 --> 00:08:09.900
So you can be like,
let me see my headings,

160
00:08:09.900 --> 00:08:12.200
and it'll do two different things.

161
00:08:12.200 --> 00:08:15.170
One, it'll, let me find some headings,
it'll go through and

162
00:08:15.170 --> 00:08:18.670
it'll start identifying each of
the headings the little nice square.

163
00:08:18.670 --> 00:08:21.860
But also it will pop this other
little area often it will show you,

164
00:08:21.860 --> 00:08:24.950
a summary which is like we
saw on the screen reader.

165
00:08:24.950 --> 00:08:28.489
And it also show you errors like non
consecutive heading level you use.

166
00:08:28.489 --> 00:08:34.530
So there's an h2 and then right under it
an h4 which should be a logical structure.

167
00:08:34.530 --> 00:08:37.070
So you can kinda go through and
click on a bunch of different stuff.

168
00:08:37.070 --> 00:08:40.350
You can click on contrast and
again it shows you some errors.

169
00:08:40.350 --> 00:08:43.870
This grey on that grey is not
a good enough contrast ratio.

170
00:08:43.870 --> 00:08:47.780
I really like this one
because it's just so pretty.

171
00:08:47.780 --> 00:08:49.600
The UI for totally is just so

172
00:08:49.600 --> 00:08:53.830
nice, I feel like it makes fixing
things a lot more pleasant, I guess.

173
00:08:53.830 --> 00:08:58.480
So you can do images with alt text, and
it's like an image is missing alt text.

174
00:08:58.480 --> 00:09:02.510
And then you can see like
right down here specifically

175
00:09:02.510 --> 00:09:04.560
which images there are that I'm missing or
text.

176
00:09:05.760 --> 00:09:08.470
So yeah, so it's pretty cool like they're
all kinda getting you to the same

177
00:09:08.470 --> 00:09:11.510
point which is like identifying all
the stuff that we've been talking about.

178
00:09:11.510 --> 00:09:13.670
But they're just some really
nice tools we're doing.

179
00:09:13.670 --> 00:09:19.130
So, let's see another really great one.

180
00:09:19.130 --> 00:09:23.730
So Adi Asman made a command line
tool which does the same thing

181
00:09:23.730 --> 00:09:25.580
as that Chrome extension does.

182
00:09:25.580 --> 00:09:28.910
So it uses the same API except you
can do it from your command line.

183
00:09:28.910 --> 00:09:31.942
So it's at AddieAsmati/a11y.

184
00:09:31.942 --> 00:09:34.830
And I think he has the a11y node package.

185
00:09:34.830 --> 00:09:37.553
So you can do npm install-g a11y.

186
00:09:37.553 --> 00:09:43.200
And then you can just run a11y Twitter.com
and it'll give you all that good stuff.

187
00:09:43.200 --> 00:09:47.670
It'll look like this in the command line,
the same kind of information.

188
00:09:47.670 --> 00:09:49.840
These elements are focusable,
blah, blah, blah.

189
00:09:49.840 --> 00:09:52.500
But again, if you're so
inclined and I really recommend it.

190
00:09:52.500 --> 00:09:53.783
This is another great tool for

191
00:09:53.783 --> 00:09:57.080
incorporating accessibility stuff
into your automated testing, right.

192
00:09:57.080 --> 00:10:00.790
So you have your Jenkins job,
it can go out and it can install Node,

193
00:10:00.790 --> 00:10:03.940
install Ally, run it, and
then come back with the results.

194
00:10:03.940 --> 00:10:08.519
So you can be sure that you're not
shipping suddenly inaccessible software.

195
00:10:08.519 --> 00:10:09.970
Yep, it's got a bunch of cool stuff.

196
00:10:09.970 --> 00:10:12.690
So you can kinda see here
this is the exact same site,

197
00:10:12.690 --> 00:10:14.740
my code planet one with the crayon one.

198
00:10:14.740 --> 00:10:17.500
So it's just like a different way that
it looks but it's the same information.

199
00:10:17.500 --> 00:10:21.270
It's like controls that don't have
labels and then it lists some.

200
00:10:21.270 --> 00:10:24.280
Cool, and
then I going even furthers with it for

201
00:10:24.280 --> 00:10:26.510
anybody that works on any
kinda JavaScript framework.

202
00:10:26.510 --> 00:10:29.430
There's some really great tools
that are probably incorporated into

203
00:10:29.430 --> 00:10:30.970
your framework of choice.

204
00:10:30.970 --> 00:10:35.777
So for example, Angular has Angiaria and
React has React Ally.

205
00:10:35.777 --> 00:10:40.372
And what both of these do they are really
cool, they are able to do static analysis.

206
00:10:40.372 --> 00:10:44.110
So I guess you're writing your code,
if you are in Reach and you render and

207
00:10:44.110 --> 00:10:46.010
return an image with no alt.

208
00:10:46.010 --> 00:10:48.930
It'll actually catch that and
when it compiles through Babel or

209
00:10:48.930 --> 00:10:51.700
whatever it'll be like you made
an image here with no alt tag.

210
00:10:51.700 --> 00:10:54.550
So again now you can
have some ci stuff going,

211
00:10:54.550 --> 00:10:57.450
you can also have some kinda more like
static analysis linking going to make

212
00:10:57.450 --> 00:11:02.320
sure you don't introduce
problems later on.

213
00:11:02.320 --> 00:11:05.970
Cool, and then just getting around some
of the terms like, so we've got WAI,

214
00:11:05.970 --> 00:11:10.170
which is the full name WAI ARIA,
which is the Web Accessibility Initiative.

215
00:11:10.170 --> 00:11:13.440
So that's the group, I don't know
how familiar people are but, so

216
00:11:13.440 --> 00:11:16.800
there's the W3 and
they're the main web standards group.

217
00:11:16.800 --> 00:11:19.580
And then they have different groups for
each task.

218
00:11:19.580 --> 00:11:23.810
You have your HTML5 group and you have
your CSS group and things like that.

219
00:11:23.810 --> 00:11:28.020
So WAI is the group within W3 that's
responsible for accessibility.

220
00:11:29.120 --> 00:11:32.430
And then WCAG,
the Web Content Accessibility Guidelines,

221
00:11:32.430 --> 00:11:33.580
that's their book [LAUGH].

222
00:11:33.580 --> 00:11:38.070
That's their giant amount of documentation
on accessibility on the web,

223
00:11:38.070 --> 00:11:39.700
how everything should work,
everything like that.

224
00:11:39.700 --> 00:11:44.720
So we've been doing is a private party,
WebAIM has kind of like extracted the big

225
00:11:44.720 --> 00:11:49.180
takeaways out of the WCAG specification
and made those checklist items.

226
00:11:49.180 --> 00:11:54.200
But if you're really getting into
understanding accessibility or

227
00:11:54.200 --> 00:11:56.620
your legal responsibilities,
things like that.

228
00:11:56.620 --> 00:11:58.915
WCAG is the place to check out.

229
00:11:58.915 --> 00:12:02.529
And there's a bunch of good conversations,
places you can ask questions,

230
00:12:02.529 --> 00:12:03.440
things like that.

231
00:12:03.440 --> 00:12:07.530
So the WAI publishes WCAG, that's like
their relationship to each other.

232
00:12:07.530 --> 00:12:11.429
You'll probably see those acronyms
a lot doing any accessibility research.

