WEBVTT

1
00:00:00.160 --> 00:00:03.750
&gt;&gt; Jon Kuperman: ARIA stands for
Accessible Rich Internet Applications.

2
00:00:03.750 --> 00:00:06.810
And I kinda wanna to show an example of,
if you had to,

3
00:00:06.810 --> 00:00:10.290
how you could use ARIA and
JavaScript to give

4
00:00:10.290 --> 00:00:14.640
elements all the functionality that they
might have if you use the Symantic one.

5
00:00:14.640 --> 00:00:20.740
So if say, for some reason you have
these spans that you use for buttons and

6
00:00:20.740 --> 00:00:24.410
you have to keep them as spans, which you
probably don't, cuz you just use buttons.

7
00:00:24.410 --> 00:00:25.180
But let's just say.

8
00:00:25.180 --> 00:00:28.530
I just wanted to show both
that it's possible but

9
00:00:28.530 --> 00:00:32.330
also all the work that would go
into making them accessible.

10
00:00:32.330 --> 00:00:36.640
So the first thing that you're gonna wanna
do is you're gonna wanna add a role.

11
00:00:36.640 --> 00:00:38.890
So adding role button with
to something is just,

12
00:00:38.890 --> 00:00:41.050
the roles are just communicating
to the screen reader.

13
00:00:41.050 --> 00:00:44.550
So now the screen reader is going to parse
it as though it's a button, not a span.

14
00:00:44.550 --> 00:00:48.180
It doesn't have any of the functionalities
still, but at least a screen reader will

15
00:00:48.180 --> 00:00:53.490
say, here's a click me button as opposed
to ignoring it cuz spans aren't focusable.

16
00:00:53.490 --> 00:00:56.900
Then you're going to want to add
tabindex so you can tab over to it,

17
00:00:56.900 --> 00:00:57.960
like it's a button.

18
00:00:57.960 --> 00:01:02.370
We covered at the beginning, so tabindex=0
makes it tabbable just in its place,

19
00:01:02.370 --> 00:01:03.610
in order, wherever it can be found.

20
00:01:05.260 --> 00:01:07.850
And then the most important thing
is you're gonna wanna add those

21
00:01:07.850 --> 00:01:08.530
listeners, right?

22
00:01:08.530 --> 00:01:12.580
So you need both an onclick listener but
you also need an onKeyUp listener.

23
00:01:12.580 --> 00:01:16.550
And in that you need a handle to
make sure that only the right button

24
00:01:16.550 --> 00:01:17.500
is pressed, like Space.

25
00:01:17.500 --> 00:01:21.690
It needs to handle Space key but it
doesn't need to trigger anything on Esc or

26
00:01:21.690 --> 00:01:23.800
Tab again, heaven forbid.

27
00:01:23.800 --> 00:01:28.305
So you kind of get into this situation
where if you wanted to kinda go

28
00:01:28.305 --> 00:01:32.935
the long route of not using Symantic HTML
ARIA will really help you get there,

29
00:01:32.935 --> 00:01:36.795
or even some of the accessibility
rules baked into HTML like role.

30
00:01:36.795 --> 00:01:38.725
But it starts to get really
messy where you're like

31
00:01:38.725 --> 00:01:39.885
have kind of a lot to maintain.

32
00:01:41.910 --> 00:01:44.950
This one we talked about a little bit but
I kinda wanted to come back and

33
00:01:44.950 --> 00:01:45.630
focus on it.

34
00:01:45.630 --> 00:01:48.622
We talked about labels and
aria-labeledby and

35
00:01:48.622 --> 00:01:53.147
I kinda wanted to also complete
that picture with aria-describedby.

36
00:01:53.147 --> 00:01:57.080
And so aria-describedby is
a really perfect place to put,

37
00:01:57.080 --> 00:01:59.970
we had a good amount of really good
questions about like what if you have

38
00:01:59.970 --> 00:02:04.890
this specific type form of information
about a form field or something like that.

39
00:02:04.890 --> 00:02:06.890
describedby is like a really
great place to put it.

40
00:02:08.360 --> 00:02:10.270
This is what you needed to know,
this is why we're asking for it.

41
00:02:10.270 --> 00:02:12.480
Here's what happens if you click this,
here's what, you know what I mean,

42
00:02:12.480 --> 00:02:13.280
all these different things.

43
00:02:13.280 --> 00:02:16.850
So the label should still be
very specific, the label for

44
00:02:16.850 --> 00:02:17.960
this is just close.

45
00:02:17.960 --> 00:02:20.530
And that's just like an x
button on a moto let's say.

46
00:02:20.530 --> 00:02:23.960
So you wouldn't want to put that in
the label cuz way too much information but

47
00:02:23.960 --> 00:02:27.460
what's cool, and this is one of
the areas that we get into describedby,

48
00:02:27.460 --> 00:02:30.210
where some screen readers implement
these things pretty differently.

49
00:02:30.210 --> 00:02:33.160
But for the most part,
what you're gonna have is when you rest on

50
00:02:33.160 --> 00:02:37.510
an interactive item, after the screen
reader reads the label and tells you what

51
00:02:37.510 --> 00:02:40.500
type of items it is, then it will go
into reading this nice description.

52
00:02:40.500 --> 00:02:42.790
And if you tab away it'll just stop.

53
00:02:42.790 --> 00:02:46.280
So this is a really great example of, hey,
if you click this thing, if you close

54
00:02:46.280 --> 00:02:49.530
the window, it's gonna discard any of
the information that you've entered and

55
00:02:49.530 --> 00:02:50.670
take you back to the main page.

56
00:02:50.670 --> 00:02:54.040
A really nice conversation
to have here and honestly,

57
00:02:54.040 --> 00:02:57.880
I think a lot of the times this would
be good to have visually as well.

58
00:02:57.880 --> 00:03:00.186
Somewhere visually that you can see,

59
00:03:00.186 --> 00:03:03.335
if I click this thing I'm losing
a lot of different stuff.

60
00:03:03.335 --> 00:03:08.360
Another cool thing is you can actually
use ARIA attributes in your CSS.

61
00:03:08.360 --> 00:03:12.830
I've seen this one a lot,
where you have some kind of drop down.

62
00:03:12.830 --> 00:03:14.830
We're going to get into ARIA expanded, but

63
00:03:14.830 --> 00:03:19.440
basically ARIA gives you all these great
tools for, is it clicked, is it hovered,

64
00:03:19.440 --> 00:03:20.950
is it expanded,
all these different things.

65
00:03:20.950 --> 00:03:23.846
And so you can kind of do neat things,
I saw this on a site which is,

66
00:03:23.846 --> 00:03:26.217
you have this drop down with
a bunch of icons in it, and

67
00:03:26.217 --> 00:03:29.080
they're either expanded or
they're not expanded.

68
00:03:29.080 --> 00:03:31.820
So if they're not expanded they're
a little arrow pointing this way and

69
00:03:31.820 --> 00:03:33.170
when they're expanded they move down.

70
00:03:33.170 --> 00:03:37.130
But I just thought it was cool that you
can, as your adding these ARIA rules you

71
00:03:37.130 --> 00:03:41.180
can also catch them in CSS as selectors
and do different things with them.

