WEBVTT

1
00:00:00.310 --> 00:00:04.580
&gt;&gt; Jon: Somebody pointed out a couple of
things, yeah, if you have dev tools open.

2
00:00:04.580 --> 00:00:07.440
I think some people are having
their tabs swallowed basically,

3
00:00:07.440 --> 00:00:11.036
where the focus goes in to the dev tools
window after it's done on the document.

4
00:00:11.036 --> 00:00:16.607
And then as far LisIC MPM
installing focusable but

5
00:00:16.607 --> 00:00:19.770
still getting the error.

6
00:00:19.770 --> 00:00:23.530
I'm not sure what error you're getting,
but for now, maybe just to make it.

7
00:00:23.530 --> 00:00:29.050
I think if your It's not a node app,
so you won't be able to require it.

8
00:00:29.050 --> 00:00:32.920
I think it's probably the error that
you're getting, so let's, I guess,

9
00:00:32.920 --> 00:00:35.610
to kinda keep it simple,
let's go over it together.

10
00:00:35.610 --> 00:00:39.500
But I think I'll just copy
the content out of it.

11
00:00:39.500 --> 00:00:44.980
Okay, so back over on the app over here.

12
00:00:44.980 --> 00:00:50.120
And then yeah I closed that one,
multiple versions of my app,

13
00:00:50.120 --> 00:00:53.145
okay cool so we've got this here.

14
00:00:53.145 --> 00:00:58.100
So yeah I'll pop open my code editor and
go back to

15
00:00:58.100 --> 00:01:03.150
master all right and

16
00:01:03.150 --> 00:01:06.210
then we're just gonna be
kinda living in modal.js.

17
00:01:06.210 --> 00:01:09.310
Hopefully everybody can see that,cool.

18
00:01:09.310 --> 00:01:15.300
So just for now I'm just gonna
go to this GitHub link and

19
00:01:15.300 --> 00:01:17.170
I'm just gonna grab
the actual string out of it.

20
00:01:17.170 --> 00:01:20.010
Basically all this is just
a list that I made of like

21
00:01:20.010 --> 00:01:24.460
all the possible selectors for
elements or focus-able elements.

22
00:01:24.460 --> 00:01:29.460
So we're just gonna copy that and
then do something like, just for now,

23
00:01:29.460 --> 00:01:33.960
like focus symbol elements equals
that giant string of things.

24
00:01:35.130 --> 00:01:38.040
Cool, so a couple of different
things that we've got, so

25
00:01:38.040 --> 00:01:40.360
we've got our kinda
selectors are laid out.

26
00:01:40.360 --> 00:01:42.840
So this is the modal,
this is the button that triggers it,

27
00:01:42.840 --> 00:01:46.860
this is the gray overlay in the
background, and this is the cancelButton.

28
00:01:46.860 --> 00:01:51.260
And then we have on the modalButton,
when you click it it runs this open task.

29
00:01:51.260 --> 00:01:54.510
And then the cancelButton when you
click at, it runs to this close task.

30
00:01:54.510 --> 00:01:58.910
And so we just kinda wanna add really
not to much functionality to it but

31
00:01:58.910 --> 00:02:02.240
a little bit, it gets a little bit tricky
with some of the like, key binding stuff.

32
00:02:02.240 --> 00:02:03.780
So one of the first things I'm gonna do,

33
00:02:03.780 --> 00:02:07.570
which is just kinda my general
best practice is that always.

34
00:02:07.570 --> 00:02:10.480
Start it off by saving
that active element,

35
00:02:10.480 --> 00:02:14.510
I'm probably gonna use it again even in
this case where there is very little.

36
00:02:14.510 --> 00:02:17.450
On the document it's still just
like kind of the way my line goes.

37
00:02:17.450 --> 00:02:21.160
It's like, always capture- before you
change focus always capture what's

38
00:02:22.560 --> 00:02:23.450
currently focus.

39
00:02:23.450 --> 00:02:26.650
So, I do like Previously,
I can't remember what I called it.

40
00:02:26.650 --> 00:02:28.220
Focused element or?

41
00:02:28.220 --> 00:02:32.570
Previously focused equals
document.active element.

42
00:02:32.570 --> 00:02:35.500
Cool so now I've just got
this in case I need it again.

43
00:02:36.960 --> 00:02:38.320
So then we got a couple
of things going on.

44
00:02:38.320 --> 00:02:44.970
Like I think the big kind of like tough
area is this Tab key trappings so

45
00:02:44.970 --> 00:02:48.210
you are, you need to listen for
key down events and do all that.

46
00:02:48.210 --> 00:02:50.230
So, we just kinda go over it pretty quick.

47
00:02:50.230 --> 00:02:54.090
Again, I know, that a lot of people
are not JavaScript developers so

48
00:02:54.090 --> 00:02:57.130
not really to,
there's libraries that would do this, and

49
00:02:57.130 --> 00:03:00.460
not really to worry if the code
is going a little fast.

50
00:03:00.460 --> 00:03:04.090
Just because it is the concept that
is there, that important part.

51
00:03:04.090 --> 00:03:05.970
So we can have that event listener.

52
00:03:05.970 --> 00:03:08.880
So it's only tabs on the modal when

53
00:03:08.880 --> 00:03:11.000
the modal is focused that
we really wanna listen for.

54
00:03:12.050 --> 00:03:15.360
So we can add an event listener for
all keydowns, and

55
00:03:15.360 --> 00:03:19.510
then we'll just do something like trap,
something like that.

56
00:03:19.510 --> 00:03:22.410
So whenever somebody
hits the keydown event.

57
00:03:22.410 --> 00:03:24.850
Yeah, we're gonna just listen in there,

58
00:03:24.850 --> 00:03:28.240
we're just trying to see if
they're using a tab or not.

59
00:03:28.240 --> 00:03:31.670
Cool, and so
then basically we will basically

60
00:03:32.900 --> 00:03:37.670
just make this little
function here called trap.

61
00:03:37.670 --> 00:03:42.400
And what we wanna do here is Basically,
yeah, so

62
00:03:42.400 --> 00:03:45.970
it's a key down event, so
it's gonna get the event tossed into it.

63
00:03:45.970 --> 00:03:49.700
And so what we'll wanna do is list and
if the event,

64
00:03:49.700 --> 00:03:52.660
and then we can listen to the key code.

65
00:03:52.660 --> 00:03:55.950
So if the code key equals, and I wrote
down here cuz I never remember them.

66
00:03:57.060 --> 00:04:00.710
So it looks like nine is tab and
you can just look these up online,

67
00:04:00.710 --> 00:04:02.150
I don't expect anybody
to know what they are.

68
00:04:02.150 --> 00:04:05.630
The other way you can do it is you could,
how I do it, [LAUGH] is I

69
00:04:05.630 --> 00:04:10.190
console log event.keycode, and
then I refresh and then I hit tab a bunch.

70
00:04:10.190 --> 00:04:13.790
I'm like, okay, I see,
it's nine, I don't, that's me.

71
00:04:13.790 --> 00:04:18.280
[LAUGH] Cool, so then we basically
have two different cases here,

72
00:04:18.280 --> 00:04:25.540
which is shift Is held down, and
then later, Shift is not held down.

73
00:04:25.540 --> 00:04:29.610
And that's just, this is backwards,
the other way is forwards.

74
00:04:29.610 --> 00:04:34.690
So then we can just do if e, and
then it provides a nice API,

75
00:04:34.690 --> 00:04:38.760
so if the Shift key is held down,
so now we're Going backwards.

76
00:04:38.760 --> 00:04:43.030
I think one thing that I
forgot to mention is that we

77
00:04:44.380 --> 00:04:46.260
take this focusable elements but

78
00:04:46.260 --> 00:04:52.110
it's not all that useful to us as
a string so I'm just going to move it.

79
00:04:52.110 --> 00:04:54.230
Inside here cuz we only need it in here.

80
00:04:54.230 --> 00:04:57.050
So we have this string of all
the focusable elements, but

81
00:04:57.050 --> 00:05:02.020
we need to run a selector on it, and
then turn it into an array, basically.

82
00:05:02.020 --> 00:05:03.650
I think that was in my notes, but again,

83
00:05:03.650 --> 00:05:07.180
I know that's the most JavaScripty,
codey we're gonna get today.

84
00:05:07.180 --> 00:05:12.190
But so basically we'll want to do,
instead of just

85
00:05:12.190 --> 00:05:17.150
this string we can do something
like modal.querySelectorAll on it.

86
00:05:17.150 --> 00:05:20.380
So for those that, again,
if you're more of a jQuery person,

87
00:05:20.380 --> 00:05:23.810
you could just pass in a jQuery
selector with this string as well.

88
00:05:23.810 --> 00:05:24.630
Whatever works for you.

89
00:05:24.630 --> 00:05:27.620
But basically, instead of just a string,
which is just some words,

90
00:05:27.620 --> 00:05:32.400
we want To select all of
those elements inside the so

91
00:05:32.400 --> 00:05:38.010
this will provide us with a dom list
any focus-able item that's on there.

92
00:05:38.010 --> 00:05:41.320
And then the last thing we'll want to
do is turn it into some kind of array.

93
00:05:42.370 --> 00:05:45.400
And I know we've got people from
all different levels here so

94
00:05:45.400 --> 00:05:48.180
hopefully I'm not boring
the advanced people but

95
00:05:48.180 --> 00:05:52.430
not like making people that don't do a
bunch of java script feel really confused.

96
00:05:52.430 --> 00:05:55.090
This is just like very domain specific, so

97
00:05:55.090 --> 00:05:58.160
you can just do like whatever
array prototype trick.

98
00:06:01.210 --> 00:06:09.230
Slice and
call it with itself focusable elements.

99
00:06:09.230 --> 00:06:09.773
So basically,

100
00:06:09.773 --> 00:06:12.756
yeah, we select all the focusable elements
and then we just turn them into an array.

101
00:06:12.756 --> 00:06:17.574
And so now we have this like nice list,
so you can do things like,

102
00:06:17.574 --> 00:06:21.079
var firstItem = focusableElements[0].

103
00:06:21.079 --> 00:06:27.034
And then you can do the var lastItem
equals focus-able elements at focus,

104
00:06:27.034 --> 00:06:31.870
I should have gone with something short,
length minus one.

105
00:06:32.960 --> 00:06:36.910
Okay so all that code aside basically
this is just allowing us to get the first

106
00:06:36.910 --> 00:06:41.150
focus-able thing in the and
the last focus-able thing in the.

107
00:06:41.150 --> 00:06:41.780
&gt;&gt; Mark: Like is spelt wrong,

108
00:06:42.940 --> 00:06:45.410
says you.
&gt;&gt; Jon: Thank you,

109
00:06:45.410 --> 00:06:50.150
Mark, I didn't mean to get defensive.
&gt;&gt; Speaker 3: [LAUGH]

110
00:06:50.150 --> 00:06:51.680
&gt;&gt; Jon: Thanks, okay, so cool,

111
00:06:51.680 --> 00:06:55.130
so now we've got these things going,
which is cool.

112
00:06:55.130 --> 00:07:01.720
And so now that we're in here, We know
very specifically what we're looking for.

113
00:07:01.720 --> 00:07:07.840
So if we're moving backwards, and
if the document.activeElement.

114
00:07:07.840 --> 00:07:12.240
And remember, so we store it in
a variable when we very first begin.

115
00:07:12.240 --> 00:07:15.420
And that's the element we're
on before the modal launches,

116
00:07:15.420 --> 00:07:17.838
which in this case is gonna be
the button to launch the modal.

117
00:07:17.838 --> 00:07:22.910
But remember, document.act development is
gonna keep updating as you're hitting Tab.

118
00:07:22.910 --> 00:07:25.940
Like it's changing every
single time you move around.

119
00:07:25.940 --> 00:07:31.540
So we have it stored here as previously
focus, but the second the user hits Tab,

120
00:07:31.540 --> 00:07:37.210
the actual result here
is gonna be changing.

121
00:07:37.210 --> 00:07:42.400
So Now that we're moving around,
if the document active element

122
00:07:42.400 --> 00:07:45.940
is equal to the first item, so
if they're trying to move back and

123
00:07:45.940 --> 00:07:50.265
they're as far back as we go,
we can just do that same kind of thing,

124
00:07:50.265 --> 00:07:53.970
event.preventDefault, so
don't let them go.

125
00:07:53.970 --> 00:07:58.070
And then we take that lastItem and
we call .focus on it.

126
00:07:58.070 --> 00:08:01.030
So that's kind of
the whole basic idea there.

127
00:08:01.030 --> 00:08:05.360
And then here would be four words so
then it would just

128
00:08:05.360 --> 00:08:10.310
be ifdocument.activeelement
is equal to the last item,

129
00:08:10.310 --> 00:08:15.040
event prevent default.
&gt;&gt; Speaker 4: I think you want that

130
00:08:15.040 --> 00:08:20.670
else to be outside the shift key.
&gt;&gt; Jon: Yes, you certainly are right.

131
00:08:20.670 --> 00:08:23.290
Let me try to grab this sucker here.

132
00:08:24.310 --> 00:08:26.900
Ok.
So this is the if we're moving

133
00:08:26.900 --> 00:08:28.240
backwards, right?

134
00:08:28.240 --> 00:08:30.090
We still want it to be
inside the shift key.

135
00:08:31.390 --> 00:08:33.790
&gt;&gt; Speaker 5: Do you mean that if.

136
00:08:33.790 --> 00:08:35.165
&gt;&gt; Jon: Yeah, I screwed this up.

137
00:08:35.165 --> 00:08:38.940
Okay, so yeah, if it's tab and
that's this block and

138
00:08:38.940 --> 00:08:42.716
then if it's shift key,
then that's that block Yes,

139
00:08:42.716 --> 00:08:50.282
thank you very much.
&gt;&gt; Jon: Okay,

140
00:08:50.282 --> 00:08:53.991
so if it's Shift,
then we're moving backwards and

141
00:08:53.991 --> 00:08:58.750
the only thing we really care
about is if it's the firstItem.

142
00:08:58.750 --> 00:09:01.730
So then here, if it's not Shift
we're moving forwards and

143
00:09:01.730 --> 00:09:06.660
the only thing we care about
is if it's the lastItem And

144
00:09:06.660 --> 00:09:09.690
then if it is the last item we
call focus on the first item.

145
00:09:09.690 --> 00:09:15.793
No we get my.
&gt;&gt; Jon: Okay,

146
00:09:15.793 --> 00:09:18.142
sorry if that was confusing, I start.

147
00:09:18.142 --> 00:09:22.213
Stuck it in the wrong place but basically
it's the same as a pseudo code logic it's

148
00:09:22.213 --> 00:09:24.525
just a little bit more verbose and
confusing.

149
00:09:24.525 --> 00:09:26.910
So basically it's just like forward or
backwards and

150
00:09:26.910 --> 00:09:30.355
then all we care about if they're trying
to do something we don't want them to

151
00:09:30.355 --> 00:09:32.835
do which is move past
the bounds of the modal.

152
00:09:32.835 --> 00:09:37.270
So let's kinda see where we're at here,
so I click it and

153
00:09:37.270 --> 00:09:41.137
then I tab through, it does not work.
&gt;&gt; Speaker 3: [LAUGH]

154
00:09:41.137 --> 00:09:46.187
&gt;&gt; Jon: Wonderful, okay, one second.

155
00:09:46.187 --> 00:09:48.610
I think I did.
&gt;&gt; Speaker 5: It's

156
00:09:48.610 --> 00:09:49.150
on 931.
&gt;&gt; Jon: Yeah.

157
00:09:53.842 --> 00:09:55.322
&gt;&gt; Jon: Okay, cool, so yeah,

158
00:09:55.322 --> 00:09:58.480
so now we can kinda
[LAUGH] tab through there.

159
00:09:58.480 --> 00:10:02.130
Man, this live coding, so
good and we can go backwards or

160
00:10:02.130 --> 00:10:05.074
forwards and stay in the model yeah
&gt;&gt; Speaker 6: Is this kind of a tab

161
00:10:05.074 --> 00:10:07.745
trap though because you
can't tap back into

162
00:10:07.745 --> 00:10:10.300
the URL bar.
&gt;&gt; Jon: So as far as, yeah tap traps

163
00:10:10.300 --> 00:10:15.120
are interesting because they can kind
of be a little bit of an anti pattern.

164
00:10:15.120 --> 00:10:19.488
So my understanding and
it's subjective at this point is like, so

165
00:10:19.488 --> 00:10:23.700
you can still get to the URL bar
with command dollar control out.

166
00:10:23.700 --> 00:10:25.259
Which I think a lot of people use,

167
00:10:25.259 --> 00:10:27.930
the other thing is if you're
gonna be tap trapping.

168
00:10:27.930 --> 00:10:31.400
You need to also respect things like
escape should close the model and

169
00:10:31.400 --> 00:10:32.750
get you back out of the tap trap.

170
00:10:33.770 --> 00:10:38.680
So I think they're a good practice as long
as you also give users an easy way out.

171
00:10:38.680 --> 00:10:42.960
I think those go kinda hand in hand which
is why I have them both here, yeah.

172
00:10:42.960 --> 00:10:44.250
&gt;&gt; Speaker 7: And Victor is asking,

173
00:10:44.250 --> 00:10:47.560
should we also check if the user
presses escape key to close the model?

174
00:10:47.560 --> 00:10:48.270
&gt;&gt; Jon: Yeah, yeah, so

175
00:10:48.270 --> 00:10:53.040
then the last kind of thing that
we'll want to do here is, let's see.

176
00:10:53.040 --> 00:10:55.330
Okay so that was if event shift key.

177
00:10:55.330 --> 00:11:01.400
Get my and then else if (event, and
then you could listen at the keyCode.

178
00:11:01.400 --> 00:11:04.860
And I think it's,
I wrote it down, 27 for escape.

179
00:11:04.860 --> 00:11:07.280
Again, we could console log or look it up.

180
00:11:07.280 --> 00:11:10.250
And then we could just
call that close method.

181
00:11:10.250 --> 00:11:12.300
So now we can go back here.
&gt;&gt; Speaker 7: One little hint.

182
00:11:12.300 --> 00:11:17.910
Victor posted a nice little
link to Keycode.info.

183
00:11:17.910 --> 00:11:18.716
&gt;&gt; Jon: I've used that before.

184
00:11:18.716 --> 00:11:24.390
[LAUGH] Keycode.
&gt;&gt; Jon: Nice.

185
00:11:24.390 --> 00:11:29.310
So tab is 9, escape is 27.
&gt;&gt; Speaker 8: I'm

186
00:11:29.310 --> 00:11:34.420
working on a, what's it called, mark down
editor right now cuz I'm taking notes.

187
00:11:34.420 --> 00:11:37.209
And they actually broke the conviction
when you hit command L it

188
00:11:37.209 --> 00:11:40.010
asks you to enter a line number
it pops up a little alert window.

189
00:11:40.010 --> 00:11:41.240
&gt;&gt; Jon: Yeah we've fall into,

190
00:11:41.240 --> 00:11:44.377
I've fallen into that in a lot
of jobs where you're like, so

191
00:11:44.377 --> 00:11:46.910
you want to do like keyboard
short cuts your own.

192
00:11:46.910 --> 00:11:49.558
But I think it helps a lot to
do a little bit of research on

193
00:11:49.558 --> 00:11:53.260
what the conventions are especially
the browser ones you should not.

194
00:11:53.260 --> 00:11:55.980
So it's like you know this,
it's kind of similar to

195
00:11:55.980 --> 00:11:59.680
people hijacking the back button which
is a very popular thing still to do.

196
00:12:01.970 --> 00:12:05.470
Or in like another accessibility
thing in the same vein is like for

197
00:12:05.470 --> 00:12:09.940
a long time browsers like chrome what they
expected delete would go back a page.

198
00:12:09.940 --> 00:12:12.800
And if you're in google and you went to
Facebook any hit delete it would go back

199
00:12:12.800 --> 00:12:16.340
a page on but apparently was having
accessibility issues with like.

200
00:12:16.340 --> 00:12:20.160
You're gonna get a form or something like
that and so they've bowser and just very,

201
00:12:20.160 --> 00:12:22.330
very recently moving away from that.

202
00:12:22.330 --> 00:12:25.530
And now I think they want
control in the left arrow or

203
00:12:25.530 --> 00:12:26.890
command in the left arrow instead.

204
00:12:26.890 --> 00:12:30.557
So, I don't know if anybody uses Chrome
and noticed for like the last month or so

205
00:12:30.557 --> 00:12:34.114
when you would hit delete, it would
have a little thing that was like, nope,

206
00:12:34.114 --> 00:12:35.674
you gotta do command left arrow.

207
00:12:35.674 --> 00:12:39.195
So it's kind of in the same thing of like
you want keyboard shortcuts for your app,

208
00:12:39.195 --> 00:12:41.607
but then there's keyboard shortcuts for
the browser.

209
00:12:41.607 --> 00:12:44.596
And then there's ones for the operating
system and everybody kind of has to play

210
00:12:44.596 --> 00:12:46.840
nice with each other.
&gt;&gt; Speaker 8: And there are only so

211
00:12:46.840 --> 00:12:49.660
many keys.
&gt;&gt; Jon: Yeah, right exactly,

212
00:12:49.660 --> 00:12:52.560
unless you get a bigger keyboard or

213
00:12:52.560 --> 00:12:55.610
like five key combinations.
&gt;&gt; Speaker 7: I think that also really

214
00:12:55.610 --> 00:13:00.050
just supports the principle
of providing multiple ways to

215
00:13:00.050 --> 00:13:05.025
do the same thing because one
may end up actually no longer.

216
00:13:05.025 --> 00:13:07.600
No longer be supported.
&gt;&gt; Jon: That's true.

217
00:13:07.600 --> 00:13:08.960
Yeah, that's a really good point, too.

218
00:13:08.960 --> 00:13:11.220
Yeah, I think, and
again a lot of the stuff, I think,

219
00:13:11.220 --> 00:13:15.880
is just, I think one of the reasons
accessibility is difficult

220
00:13:15.880 --> 00:13:18.670
again goes back to it kind of being
a moving target where it's like.

221
00:13:19.690 --> 00:13:23.680
It's not as simple as run your website
through this checker and it tells.

222
00:13:23.680 --> 00:13:25.490
I mean, there are great tools
that we're gonna cover,

223
00:13:25.490 --> 00:13:28.130
but there's still stuff where it's,
and that's a great question.

224
00:13:28.130 --> 00:13:32.380
Okay, I'm helping users tab through, but
now I'm hindering them changing the URL,

225
00:13:32.380 --> 00:13:33.140
you know what I mean?

226
00:13:33.140 --> 00:13:36.300
And you're kinda trying to Trying
to think of these different things.

227
00:13:36.300 --> 00:13:38.260
I do think there are some
good best practices,

228
00:13:38.260 --> 00:13:40.340
which is what I'm trying
to do here in the workshop.

229
00:13:40.340 --> 00:13:45.370
So again, tab trapping's great,
but provide that escape path.

230
00:13:45.370 --> 00:13:50.080
Which is a pun,
cuz it's literally the Esc key.

231
00:13:50.080 --> 00:13:52.260
I made that up right now, thank you.
&gt;&gt; Speaker 9: Is there like a,

232
00:13:52.260 --> 00:13:56.141
sorta, best practise to Like if
a person using this reader and

233
00:13:56.141 --> 00:14:00.264
they wanna discover keyboard shortcuts, is
there like this is how you get to it for

234
00:14:00.264 --> 00:14:01.597
most [CROSSTALK].
&gt;&gt; Jon: Yeah,

235
00:14:01.597 --> 00:14:05.050
I think the most common
practice is the question mark.

236
00:14:05.050 --> 00:14:06.190
It's where a lot of people put there.

237
00:14:06.190 --> 00:14:08.320
So with nothing focused,
hit question mark.

238
00:14:08.320 --> 00:14:10.810
But like I was kind of mentioning before,
at Twitter,

239
00:14:10.810 --> 00:14:15.680
we did that kinda neat thing where we
have a div that gets injected to the top

240
00:14:16.830 --> 00:14:19.290
that is tabbable but visually hidden.

241
00:14:19.290 --> 00:14:23.210
And so it's only for
users that hit Tab right away,

242
00:14:23.210 --> 00:14:24.650
they'll have this thing read to them.

243
00:14:24.650 --> 00:14:28.330
We don't give it a display,
but it will be focusable, so

244
00:14:28.330 --> 00:14:29.970
a screen reader would be able to read it.

245
00:14:29.970 --> 00:14:32.030
So if you go to Twitter with
a screen reader on, and

246
00:14:32.030 --> 00:14:37.180
you hit Tab, It'll just audio, it'll read
you something that's along the lines of,

247
00:14:37.180 --> 00:14:39.420
we have keyboard shortcuts available.

248
00:14:39.420 --> 00:14:42.490
Hit question mark to see what they
are that one's extra engineering work.

249
00:14:42.490 --> 00:14:46.160
I would just hide it behind question
mark as the easy way to go.

