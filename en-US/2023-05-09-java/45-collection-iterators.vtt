WEBVTT

1
00:00:00.000 --> 00:00:04.898
So a common task with collections
is to loop through the elements of

2
00:00:04.898 --> 00:00:09.804
the collection, and one way that
we can do this is with iterators.

3
00:00:09.804 --> 00:00:14.379
Now, the collection interface
does provide an Iterator for you.

4
00:00:14.379 --> 00:00:20.277
So we are going to use an iterator
to loop through our set of fruit.

5
00:00:20.277 --> 00:00:25.288
So in the collections demo,
let's go to that set demo method,

6
00:00:27.995 --> 00:00:30.274
I'm gonna comment out these other things.

7
00:00:30.274 --> 00:00:34.170
All right, so in this set demo,

8
00:00:37.370 --> 00:00:44.489
Let's, Before any of our print statements,

9
00:00:44.489 --> 00:00:48.639
let's go ahead and add the looping here.

10
00:00:54.011 --> 00:00:59.292
So the way that you get the iterator,
I'm gonna use var,

11
00:00:59.292 --> 00:01:06.459
[LAUGH] and we'll say i = fruits,
the name of the collection, dot iterator.

12
00:01:06.459 --> 00:01:12.194
And now we have an iterator object which
we can use to loop through the fruits.

13
00:01:12.194 --> 00:01:15.933
So the way you would do that
is with a loop of your choice,

14
00:01:15.933 --> 00:01:20.788
while is a good option, especially
with iterators because you wanna say

15
00:01:20.788 --> 00:01:24.863
keep looping while there's
more elements to loop through.

16
00:01:24.863 --> 00:01:31.721
And the iterator provides this
hasNext method that returns a Boolean.

17
00:01:31.721 --> 00:01:36.085
So this basically means,
are there any more elements in the array?

18
00:01:36.085 --> 00:01:41.139
You'll say yes, and
then you carry on, all right?

19
00:01:41.139 --> 00:01:46.149
In order to get to the next
element in the array,

20
00:01:46.149 --> 00:01:51.161
we would use the iterator and
just say next, and

21
00:01:51.161 --> 00:01:56.690
that will give us the next
object in the collection.

22
00:01:56.690 --> 00:02:02.534
All right, so I'm going to comment
out everything after that so

23
00:02:02.534 --> 00:02:05.470
we could just focus right here.

24
00:02:05.470 --> 00:02:09.996
But let's go ahead and run this class and

25
00:02:09.996 --> 00:02:15.189
notice it printed out each
of the fruits that we

26
00:02:15.189 --> 00:02:20.472
added, On a new line.

27
00:02:20.472 --> 00:02:24.964
So before when we printed this out
remember it printed it in square brackets

28
00:02:24.964 --> 00:02:28.103
and it printed essentially
the entire collection or

29
00:02:28.103 --> 00:02:31.760
here is printing the elements,
not the collection itself.

30
00:02:35.551 --> 00:02:41.074
So again, collection provides
iterator method gives you an iterator

31
00:02:41.074 --> 00:02:46.981
the key methods on iterator are hasNext
which you could put in a while loop.

32
00:02:46.981 --> 00:02:49.911
Let you know should I be looking any more,

33
00:02:49.911 --> 00:02:53.943
are there more elements here
that will be a true or false?

34
00:02:53.943 --> 00:02:58.707
And in order to access
the next element you just see

35
00:02:58.707 --> 00:03:02.117
i.next that'll give that to you.

36
00:03:04.335 --> 00:03:08.190
Questions so far?

37
00:03:08.190 --> 00:03:12.605
Okay, I'm gonna uncomment this out.

38
00:03:16.624 --> 00:03:24.849
All right, so the iterator method is
provided by the collection interface.

39
00:03:24.849 --> 00:03:27.167
So it's available on all the collections.

40
00:03:27.167 --> 00:03:31.506
I showed you it on set, but
that same exact code would work on list,

41
00:03:31.506 --> 00:03:33.377
it would also work on queue.

42
00:03:33.377 --> 00:03:37.148
Where it would not work
is on map because again,

43
00:03:37.148 --> 00:03:42.616
map is part of the collection framework,
but it does not inherit from

44
00:03:42.616 --> 00:03:48.296
the collection interface, so
it doesn't have access to that method.

45
00:03:50.405 --> 00:03:57.121
Now we can still do this with map,
we just have to use another technique.

46
00:03:57.121 --> 00:04:03.982
And that is the entrySet method
that exists on the map itself.

47
00:04:03.982 --> 00:04:08.629
So with the other collections we said,
we used the collection name, and

48
00:04:08.629 --> 00:04:12.666
then we said, .iterator,
you don't have dot iterator, but

49
00:04:12.666 --> 00:04:15.201
we do have dot entrySet on a map, okay?

50
00:04:15.201 --> 00:04:16.721
Now given the set,

51
00:04:16.721 --> 00:04:22.054
you can then use the iterator method
to loop through the elements.

52
00:04:22.054 --> 00:04:25.298
So once we have the set,
I say give me an entry set.

53
00:04:25.298 --> 00:04:31.708
What this does is take the map elements
and turn them into a set collection,

54
00:04:31.708 --> 00:04:37.126
and then I'll set,
set inherits from collection interface.

55
00:04:37.126 --> 00:04:40.820
So now you have access
to the iterator method.

56
00:04:40.820 --> 00:04:46.563
Notice my while is the same,
I do i.hasNext here, right?

57
00:04:46.563 --> 00:04:52.358
And then when I wanna get
the next element, I say i.next,

58
00:04:52.358 --> 00:04:58.405
but what am I doing there with
that map entry in parentheses?

59
00:04:58.405 --> 00:04:59.635
Casting, right?

60
00:04:59.635 --> 00:05:05.085
So we've seen this before,
I'm taking the next element,

61
00:05:05.085 --> 00:05:08.903
I'm casting it to a Map.Entry element.

62
00:05:08.903 --> 00:05:14.547
With the map.entry, I now can get the key,
and I can get the value.

63
00:05:14.547 --> 00:05:19.699
So this is not the most fun thing to do,
[LAUGH] It's not

64
00:05:19.699 --> 00:05:26.010
as straightforward as those other
collections, but it is here.

65
00:05:26.010 --> 00:05:30.723
This fortunately is not the only
way to loop through things, but

66
00:05:30.723 --> 00:05:33.878
this is comparable to how iterator works.

67
00:05:33.878 --> 00:05:38.805
&gt;&gt; With this kind of he
looked down upon to like,

68
00:05:38.805 --> 00:05:40.837
&gt;&gt; I would look down upon it probably,

69
00:05:40.837 --> 00:05:45.826
Yeah, I'm pretty certain I would
flag this in a cold review and say,

70
00:05:45.826 --> 00:05:48.160
why are you, [LAUGH] doing this?

71
00:05:48.160 --> 00:05:51.213
Why did you spend your life doing this?

72
00:05:51.213 --> 00:05:56.457
So I'll show you some more effective ways,
[LAUGH] to get to what you need.

