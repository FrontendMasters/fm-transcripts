WEBVTT

1
00:00:00.000 --> 00:00:05.294
So, I want to change the printer

2
00:00:05.294 --> 00:00:10.202
from System to PrintWriter.

3
00:00:10.202 --> 00:00:14.623
PrintWriter is also
an auto-closable class, so

4
00:00:14.623 --> 00:00:21.267
this will be a way that we can show,
how we can declare to have them in there.

5
00:00:21.267 --> 00:00:27.096
So let's go back to our class.

6
00:00:27.096 --> 00:00:28.707
We'll call this file.

7
00:00:28.707 --> 00:00:31.115
Let's refactor it.

8
00:00:31.115 --> 00:00:35.373
And I'm gonna call this input file.

9
00:00:38.122 --> 00:00:43.598
All right, and then I want an output file.

10
00:00:43.598 --> 00:00:49.214
So I wanna say file,
output file = new file and

11
00:00:49.214 --> 00:00:56.278
this one will be under files and
we'll call it output.txt

12
00:01:00.272 --> 00:01:03.913
Okay and then I want

13
00:01:07.529 --> 00:01:12.389
Inside of here, where we are printing
to the console instead of printing

14
00:01:12.389 --> 00:01:15.269
to the console and
like print to a new file.

15
00:01:15.269 --> 00:01:21.161
So we are reading from one file and
printing as contents out to another file.

16
00:01:21.161 --> 00:01:25.200
So I wanna make a fileReader.

17
00:01:25.200 --> 00:01:27.965
FileReader is also a auto-closeable, so

18
00:01:27.965 --> 00:01:30.820
I wanna put it right
here inside of this try.

19
00:01:30.820 --> 00:01:35.000
So the way you would do
this is inside of here,

20
00:01:35.000 --> 00:01:39.523
after the first one,
you would add a semicolon.

21
00:01:39.523 --> 00:01:41.387
That's one statement.

22
00:01:41.387 --> 00:01:43.977
Then you could add as many
other statements that you want.

23
00:01:43.977 --> 00:01:49.570
So we'll say printWriter,
which is a java.io class.

24
00:01:49.570 --> 00:01:55.658
And we'll call this one
fileWriter equals new.

25
00:01:55.658 --> 00:01:59.477
And we're going to instantiate
this with print writer.

26
00:01:59.477 --> 00:02:05.163
And then we can give it the output
file that we want to print to.

27
00:02:05.163 --> 00:02:07.417
You don't need you can put
a semicolon at the end but

28
00:02:07.417 --> 00:02:09.373
on the last one you
don't need a semicolon.

29
00:02:13.228 --> 00:02:15.530
And then here I'm gonna print there.

30
00:02:15.530 --> 00:02:22.619
So we'll say fileWriter.println and

31
00:02:22.619 --> 00:02:30.144
it'll print what I read from the reader.

32
00:02:32.329 --> 00:02:33.393
Okay.

33
00:02:33.393 --> 00:02:37.305
&gt;&gt; Why does it not need
a semicolon after line?

34
00:02:37.305 --> 00:02:38.689
16 it looks like.

35
00:02:38.689 --> 00:02:42.720
&gt;&gt; Yeah, just because it's
the last one in the list, so

36
00:02:42.720 --> 00:02:48.290
it's kind of implied, but you could
definitely add one if you wanted to.

37
00:02:48.290 --> 00:02:51.750
Did it give me a warning
unnecessary semicolon.

38
00:02:51.750 --> 00:02:53.250
And wow.

39
00:02:53.250 --> 00:02:57.886
Pretty bossy.

40
00:02:57.886 --> 00:03:00.872
&gt;&gt; I've just never like seen very
many Java conventions are just

41
00:03:00.872 --> 00:03:02.731
&gt;&gt; Yeah, no, I know.

42
00:03:02.731 --> 00:03:06.051
I'm not sure I'm not sure why
they set this up like that.

43
00:03:06.051 --> 00:03:10.377
I guess because it's inside of
a set of parentheses maybe.

44
00:03:10.377 --> 00:03:14.582
Like it is kind of weird to say like
another one that's coming almost like in

45
00:03:14.582 --> 00:03:17.401
JSON where you have commas
after like each thing.

46
00:03:17.401 --> 00:03:21.991
And on the last one you don't
put another comma it just

47
00:03:21.991 --> 00:03:25.667
feels a little weird
it gives me that vibe.

48
00:03:25.667 --> 00:03:30.347
All right this is still pretty,
it's a little complex, right?

49
00:03:30.347 --> 00:03:35.273
The thing to note about these auto
closable resources is that it's going to

50
00:03:35.273 --> 00:03:37.468
close them in the reverse order.

51
00:03:37.468 --> 00:03:42.775
So if that matters for you at all, then
you need to put them in the way that you

52
00:03:42.775 --> 00:03:48.019
want them, put them in a reverse order
that you want them closed, right?

53
00:03:48.019 --> 00:03:52.425
So, for example the writer is
closing before the reader.

54
00:03:52.425 --> 00:03:55.979
If you needed the input file
closed before the output file,

55
00:03:55.979 --> 00:03:59.969
if that mattered at all,
you would just switch the order of these.

56
00:03:59.969 --> 00:04:02.573
But it's going to close from bottom up.

57
00:04:02.573 --> 00:04:06.792
&gt;&gt; First in, last out.

58
00:04:06.792 --> 00:04:07.365
&gt;&gt; Say it again?

59
00:04:07.365 --> 00:04:08.854
First in, last out?

60
00:04:08.854 --> 00:04:10.013
First in, last out.

61
00:04:10.013 --> 00:04:11.365
Yes, that's correct.

62
00:04:13.796 --> 00:04:15.618
That's correct.

63
00:04:15.618 --> 00:04:20.091
Questions on tri-web resources?

64
00:04:20.091 --> 00:04:21.786
All right, very nice.

