WEBVTT

1
00:00:00.001 --> 00:00:04.132
So we've talked about,
a couple of the core

2
00:00:04.132 --> 00:00:08.723
principles of object-oriented programming.

3
00:00:08.723 --> 00:00:11.992
We've talked about encapsulation,

4
00:00:11.992 --> 00:00:17.713
we've talked about inheritance
a third pillar is polymorphism,

5
00:00:17.713 --> 00:00:21.603
which is the ability to
take multiple forms.

6
00:00:21.603 --> 00:00:27.501
Specifically, in object-oriented
programming, polymorphism is where.

7
00:00:27.501 --> 00:00:32.701
A subclass can define their
own unique behaviors and yet

8
00:00:32.701 --> 00:00:37.798
share some of the same
behaviors of their superclass.

9
00:00:37.798 --> 00:00:45.517
So an example of polymorphism is where
an object can have a superclass type,

10
00:00:45.517 --> 00:00:50.462
which is a class, so
animal is the superclass but

11
00:00:50.462 --> 00:00:57.006
it is an instance of a subclass Okay so
here

12
00:00:57.006 --> 00:01:03.286
we have an object called Dog it's defined
as type animal which is a superclass.

13
00:01:03.286 --> 00:01:08.857
But it is an instance of type
dog which inherits from animal.

14
00:01:08.857 --> 00:01:14.379
So we're able to do this because
dog inherits from animal and

15
00:01:14.379 --> 00:01:17.747
therefore dog is an animal, right?

16
00:01:17.747 --> 00:01:23.264
Okay, so
we're going to demonstrate an example

17
00:01:23.264 --> 00:01:29.461
of polymorphism between an animal,
a dog, and a cat.

18
00:01:29.461 --> 00:01:32.792
All right, so
this should be a fun exercise.

19
00:01:32.792 --> 00:01:40.759
So in our IDE, let's make a new
class under the inheritance package.

20
00:01:40.759 --> 00:01:42.882
And we'll call this one Animal.

21
00:01:48.131 --> 00:01:52.850
And in the Animal class let's just make

22
00:01:52.850 --> 00:01:57.855
one method that we'll call make sound and

23
00:01:57.855 --> 00:02:03.147
then we'll just make
a print statement here

24
00:02:03.147 --> 00:02:09.174
that says unknown animal
sound frightening right

25
00:02:25.579 --> 00:02:30.448
All right, and
then let's make another class under

26
00:02:30.448 --> 00:02:33.555
inheritance that will call Dog.

27
00:02:33.555 --> 00:02:38.000
Dog will, of course, inherit from animal.

28
00:02:41.199 --> 00:02:48.072
And, let's override,
that make sound method.

29
00:02:54.466 --> 00:02:58.764
And in this one, we'll print woof

30
00:03:06.833 --> 00:03:12.626
And let's also make another method
that is specific to the dog.

31
00:03:12.626 --> 00:03:14.264
We'll call this one fetch.

32
00:03:19.303 --> 00:03:24.908
And then fetch will just
print out fetch is fun.

33
00:03:39.832 --> 00:03:42.892
All right, and
then let's create one more class.

34
00:03:42.892 --> 00:03:43.885
We'll call this one Cut.

35
00:03:46.162 --> 00:03:50.769
It will also inherit from animal

36
00:03:54.197 --> 00:03:58.368
We want to override that makes sense.

37
00:04:07.785 --> 00:04:09.623
The cat says meow.

38
00:04:15.651 --> 00:04:19.511
And we'll add a specific methyl for
cat called scratch.

39
00:04:23.291 --> 00:04:25.955
And this will print out.

40
00:04:25.955 --> 00:04:30.089
I don't know I am a cat I scratch things.

41
00:04:30.089 --> 00:04:32.446
I scratch things.

42
00:04:39.906 --> 00:04:42.167
Okay, this is our inheritance,

43
00:04:42.167 --> 00:04:46.221
let's create one more class
just to test inheritance out.

44
00:04:46.221 --> 00:04:50.701
We'll make a zoo, new class called Zoo.

45
00:04:50.701 --> 00:04:53.592
Maybe it should be called farm?

46
00:04:53.592 --> 00:04:56.143
I don't care, whatever you want.

47
00:04:56.143 --> 00:05:00.506
All right, so
we'll create a main methyl in Zoo.

48
00:05:05.817 --> 00:05:08.225
And I wanna create a new Dog.

49
00:05:08.225 --> 00:05:11.059
So we'll create a Dog.

50
00:05:11.059 --> 00:05:12.323
His name is rocky.

51
00:05:16.741 --> 00:05:21.713
And if we say rocky.

52
00:05:21.713 --> 00:05:24.665
Then we have fetch and make sound, right?

53
00:05:24.665 --> 00:05:28.311
Those were the methods that
were in the dog class.

54
00:05:28.311 --> 00:05:32.673
Okay, so
let's say rocky is going to fetch.

55
00:05:32.673 --> 00:05:36.110
And let's just test this out.

56
00:05:36.110 --> 00:05:38.774
Make sure everything is set up properly.

57
00:05:38.774 --> 00:05:40.305
Great, we have fetch.

58
00:05:40.305 --> 00:05:42.626
It's fun, perfect.

59
00:05:42.626 --> 00:05:46.871
Now let's say rocky.make sound,

60
00:05:46.871 --> 00:05:51.824
make sure that he's woofing, run this,

61
00:05:51.824 --> 00:05:56.223
and yes, he's woofing, perfect.

62
00:05:56.223 --> 00:05:57.957
So we're all on the same page, right?

63
00:05:57.957 --> 00:06:00.516
Regular inheritance there.

64
00:06:00.516 --> 00:06:06.549
Okay, now when we get to
the polymorphism part,

65
00:06:06.549 --> 00:06:09.491
let's make a new Dog but

66
00:06:09.491 --> 00:06:14.495
they're of type animal her name is Sasha

67
00:06:14.495 --> 00:06:19.369
we're gonna instantiate Sasha as a dog

68
00:06:21.984 --> 00:06:27.329
All right,
now when we say sasha.makeSound.

69
00:06:27.329 --> 00:06:31.078
What method do you think
is gonna be called?

70
00:06:31.078 --> 00:06:37.794
The one from animal or the one from dog?

71
00:06:37.794 --> 00:06:39.778
How many people say animal?

72
00:06:39.778 --> 00:06:41.848
It's really just a gamble at this point.

73
00:06:41.848 --> 00:06:44.576
How many people say animal?

74
00:06:44.576 --> 00:06:47.000
How many people say dog?

75
00:06:47.000 --> 00:06:51.203
Okay, people are just on the edge of
their seats waiting to see what happens.

76
00:06:51.203 --> 00:06:52.600
&gt;&gt; Someone said animal online.

77
00:06:52.600 --> 00:06:54.959
&gt;&gt; Animal.
Okay all right let's see.

78
00:06:54.959 --> 00:07:01.114
So we're gonna run this
Sasha is an animal dog and

79
00:07:01.114 --> 00:07:04.427
Wolf was the one that was.

80
00:07:04.427 --> 00:07:07.214
That was executed.

81
00:07:07.214 --> 00:07:11.848
All right, okay, good, make sense?

82
00:07:11.848 --> 00:07:16.284
Now let's get into some really

83
00:07:16.284 --> 00:07:21.232
wonky polymorphism we are going to

84
00:07:21.232 --> 00:07:25.848
change sasha from a dog to a cat.

85
00:07:25.848 --> 00:07:26.997
I know.

86
00:07:30.996 --> 00:07:36.638
And if we say sasha.makeSound,

87
00:07:36.638 --> 00:07:41.076
what sound will she make?

88
00:07:41.076 --> 00:07:43.398
Meow.

89
00:07:43.398 --> 00:07:45.726
Very good, very good.

90
00:07:47.681 --> 00:07:48.455
Okay.

91
00:07:52.358 --> 00:07:57.332
Excellent polymorphism really
powerful tool in java you see

92
00:07:57.332 --> 00:08:00.951
how we can change from
one class to another.

93
00:08:00.951 --> 00:08:05.756
The key points to remember
is that an object can have

94
00:08:05.756 --> 00:08:10.134
a superclass type, but
a subclass Instance.

95
00:08:10.134 --> 00:08:15.463
If a method is overwritten by a subclass,

96
00:08:15.463 --> 00:08:23.547
then it's going to execute
the method the overriding method.

