WEBVTT

1
00:00:00.000 --> 00:00:03.956
Is there any level,
other than practicality, for

2
00:00:03.956 --> 00:00:07.084
how deep that you can
set up the parent and

3
00:00:07.084 --> 00:00:11.600
inherited relationship,
trying to think of an example.

4
00:00:11.600 --> 00:00:18.153
Let's say you had a overarching
primary class, say, Car.

5
00:00:18.153 --> 00:00:19.965
And then what you do is you then,

6
00:00:19.965 --> 00:00:24.073
say, have a class that inherits from Car,
like, I don't know, Ford.

7
00:00:24.073 --> 00:00:26.806
Then from there you might have
a specific model of that class.

8
00:00:26.806 --> 00:00:29.722
And the hierarchical relationship,

9
00:00:29.722 --> 00:00:35.194
is there any limit to what you could
be inheriting, in terms of layers?

10
00:00:35.194 --> 00:00:40.414
&gt;&gt; Right, so that's what we are getting
into now, the chain of inheritance.

11
00:00:40.414 --> 00:00:43.808
And to answer your question,

12
00:00:43.808 --> 00:00:49.250
there is no limit, well,
no, not by default.

13
00:00:49.250 --> 00:00:51.821
There's some things you can
do to kind of limit stuff.

14
00:00:51.821 --> 00:00:56.215
But by default, you could have,
let's say, 50 classes,

15
00:00:56.215 --> 00:01:00.779
where one inherits from another,
that inherits from another,

16
00:01:00.779 --> 00:01:05.104
that inherits from another, and
so on and so on, all right?

17
00:01:05.104 --> 00:01:12.294
So in Java, a class can only explicitly
inherit from one other class.

18
00:01:12.294 --> 00:01:17.261
So when we say that extends,
we could only put one class there,

19
00:01:17.261 --> 00:01:19.712
you can't put multiple ones.

20
00:01:19.712 --> 00:01:25.067
But that superclass can also
inherit from another class.

21
00:01:25.067 --> 00:01:27.883
So if I'm a subclass, and

22
00:01:27.883 --> 00:01:32.875
I inherit from class A,
let's say, class B.

23
00:01:32.875 --> 00:01:40.222
I'm class C, I inherit from class B,
and class B inherits from class A.

24
00:01:40.222 --> 00:01:43.826
As C, A is my grandparent, and

25
00:01:43.826 --> 00:01:48.127
I've inherited their stuff too, so

26
00:01:48.127 --> 00:01:53.551
I've inherited from A and
from B, all right?

27
00:01:53.551 --> 00:01:58.482
By default, and
I talked briefly about this earlier,

28
00:01:58.482 --> 00:02:03.411
but the Object class is a class
within Java that I said is

29
00:02:03.411 --> 00:02:06.749
the godfather of all other classes.

30
00:02:06.749 --> 00:02:11.364
So every class inherits
from the Object class.

31
00:02:11.364 --> 00:02:16.550
So remember, you may have seen sometimes,

32
00:02:16.550 --> 00:02:21.042
when I say, let's say, square dot.

33
00:02:21.042 --> 00:02:26.961
I see all of the classes from square,
I see all of the classes from rectangle,

34
00:02:26.961 --> 00:02:30.525
but under that,
I also see all of the methods.

35
00:02:30.525 --> 00:02:35.888
I also see some more methods, equals,
hashCode, toString, getClass.

36
00:02:35.888 --> 00:02:41.927
All of these were methods that I have
inherited from the Object class.

37
00:02:41.927 --> 00:02:49.197
So you'll see those on any object
if you did a dot, all right?

38
00:02:49.197 --> 00:02:53.716
So we're going to look at an example here,

39
00:02:53.716 --> 00:03:00.502
where we have a Vehicle class with
fields for color and mileage.

40
00:03:00.502 --> 00:03:05.610
And then it also has some getters and
setters for those fields.

41
00:03:05.610 --> 00:03:12.694
And then we also have a Car class,
which inherits from Vehicle, right?

42
00:03:12.694 --> 00:03:17.452
And it has its own field for doors, and

43
00:03:17.452 --> 00:03:21.482
getters and setters for those.

44
00:03:21.482 --> 00:03:27.397
And then we have a Coupe
class that extends from Car,

45
00:03:27.397 --> 00:03:32.111
and it just sets the number of doors to 2.

46
00:03:34.318 --> 00:03:36.214
No fields of its own.

47
00:03:36.214 --> 00:03:39.053
And then we have a Garage class.

48
00:03:39.053 --> 00:03:46.402
And in Garage, we have a Coupe object
that we can set the color for,

49
00:03:46.402 --> 00:03:52.582
even though setColor is not
in the Coupe class, right?

50
00:03:52.582 --> 00:03:57.201
setColor is also not in
the Car class that Coupe

51
00:03:57.201 --> 00:04:02.186
extends from,
setColor is in the Vehicle class.

52
00:04:02.186 --> 00:04:06.470
So you see here that it
inherited that through

53
00:04:06.470 --> 00:04:10.200
the inheritance from its superclass.

54
00:04:10.200 --> 00:04:12.445
Does this make sense?

55
00:04:12.445 --> 00:04:13.594
Any questions?

56
00:04:16.884 --> 00:04:20.772
&gt;&gt; I don't know why you'd want to do this,
or it's probably not possible,

57
00:04:20.772 --> 00:04:21.472
maybe it is.

58
00:04:21.472 --> 00:04:23.283
Can you reverse it?

59
00:04:23.283 --> 00:04:28.112
Can like the grandfather inherit
anything from the child?

60
00:04:28.112 --> 00:04:30.267
&gt;&gt; No, good question.

61
00:04:30.267 --> 00:04:34.842
So a parent or
any ancestor in the tree does

62
00:04:34.842 --> 00:04:39.434
not inherit anything from its children.

63
00:04:39.434 --> 00:04:43.220
Just like if you think about your parents,
they inherited nothing from you, right?

64
00:04:43.220 --> 00:04:47.190
They already existed,
you inherited from them.

65
00:04:47.190 --> 00:04:55.341
Also, so if we had this Coupe
class that extends Car,

66
00:04:55.341 --> 00:04:59.878
what's another kind of car?

67
00:04:59.878 --> 00:05:01.531
I don't know anything about cars.

68
00:05:01.531 --> 00:05:02.288
&gt;&gt; Convertible.

69
00:05:02.288 --> 00:05:05.151
&gt;&gt; Convertible, that also extends Car.

70
00:05:05.151 --> 00:05:09.462
Coupe and Convertible are not siblings,

71
00:05:09.462 --> 00:05:14.769
they have no relationship with each other,
okay?

72
00:05:14.769 --> 00:05:20.770
So don't think that they can do anything
special because they have the same parent,

73
00:05:20.770 --> 00:05:21.709
they do not.

74
00:05:24.121 --> 00:05:27.250
&gt;&gt; And if you wanted one
to be related to another,

75
00:05:27.250 --> 00:05:31.502
you'd have to be making it a bottom
level of one of the classes,

76
00:05:31.502 --> 00:05:33.840
instead of-
&gt;&gt; There's no sibling,

77
00:05:33.840 --> 00:05:39.017
there's nothing you can do to make them
siblings, there's no concept of such.

78
00:05:39.017 --> 00:05:42.805
The only sort of relationship you
could do is a hierarchical one.

79
00:05:42.805 --> 00:05:44.625
&gt;&gt; That's what I'm saying, yeah, okay.

80
00:05:44.625 --> 00:05:50.088
Is there any Java-specific term for two
classes that inherit from the same parent?

81
00:05:50.088 --> 00:05:52.260
&gt;&gt; Nope, doesn't exist.

82
00:05:52.260 --> 00:05:53.211
&gt;&gt; Love it.

83
00:05:53.211 --> 00:05:57.155
&gt;&gt; [LAUGH] Okay, subclass one and

84
00:05:57.155 --> 00:06:02.212
subclass two or something like that.

