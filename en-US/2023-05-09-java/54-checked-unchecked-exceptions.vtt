WEBVTT

1
00:00:00.000 --> 00:00:03.551
So there are two categories of exceptions.

2
00:00:03.551 --> 00:00:07.722
We have checked and
we have unchecked exceptions.

3
00:00:07.722 --> 00:00:15.102
So the signature of the createNewFile
method, it specifies.

4
00:00:15.102 --> 00:00:16.684
This is what it looks like.

5
00:00:16.684 --> 00:00:22.847
It specifies that it
throws an IOException.

6
00:00:22.847 --> 00:00:24.723
It says it right in its signature.

7
00:00:24.723 --> 00:00:28.010
And so
when we tried to say file.createNewFile,

8
00:00:28.010 --> 00:00:32.704
that's why we got an error, because
it already told us in its signature

9
00:00:32.704 --> 00:00:37.030
that there's a possibility of
actually throwing an exception.

10
00:00:37.030 --> 00:00:44.467
So that's how the compiler knew,
hey, there's a chance, right?

11
00:00:44.467 --> 00:00:47.895
So we have to put that within a try block.

12
00:00:47.895 --> 00:00:51.173
So that's a check,
an example of a checked exception.

13
00:00:51.173 --> 00:00:55.337
But remember when we looked at the for
loop example, and

14
00:00:55.337 --> 00:00:59.233
I said this will compile,
there's no anything here

15
00:00:59.233 --> 00:01:04.119
that's stopping me from saying do
it while index is less than 4.

16
00:01:04.119 --> 00:01:08.501
That's an unchecked exception, right?

17
00:01:08.501 --> 00:01:14.555
So in this example,
the nextDouble method, for example,

18
00:01:14.555 --> 00:01:20.983
on scanner, it does not specify
that it throws any exception.

19
00:01:20.983 --> 00:01:25.942
And yet
if I were to say console.nextDouble, and

20
00:01:25.942 --> 00:01:28.777
somebody entered a string,

21
00:01:28.777 --> 00:01:33.630
then I would get this
InputMismatchException.

22
00:01:33.630 --> 00:01:35.843
So this is an unchecked exception.

23
00:01:35.843 --> 00:01:39.597
With unchecked exceptions,
I don't have to put these in try blocks.

24
00:01:39.597 --> 00:01:44.296
I might not even know, because the method
signature didn't tell me that there's

25
00:01:44.296 --> 00:01:46.829
a possibility of it throwing an exception.

26
00:01:46.829 --> 00:01:50.194
So I wouldn't even know to
put it in a try block or

27
00:01:50.194 --> 00:01:52.895
which exception I should even catch.

28
00:01:52.895 --> 00:01:57.869
So checked exceptions are the exceptions
that are checked by the compiler before

29
00:01:57.869 --> 00:01:59.268
the code is executed.

30
00:01:59.268 --> 00:02:04.225
If the method says that it
throws a checked exception,

31
00:02:04.225 --> 00:02:06.716
then it must declare that.

32
00:02:06.716 --> 00:02:10.930
If it does it in the method,
it must declare it in its signature.

33
00:02:10.930 --> 00:02:16.089
And this is the act that lets the compiler
know that any code that's gonna

34
00:02:16.089 --> 00:02:21.092
call this method has to handle that
exception in some way, all right?

35
00:02:21.092 --> 00:02:26.476
For unchecked exceptions,
these are not checked by the compiler.

36
00:02:26.476 --> 00:02:31.199
These are runtime exceptions,
runtime meaning when it's executed.

37
00:02:31.199 --> 00:02:36.592
And there's actually a class in Java
that's called runtime exception.

38
00:02:36.592 --> 00:02:40.696
So runtime exception in
all of its subclasses

39
00:02:40.696 --> 00:02:44.375
are considered unchecked exceptions.

40
00:02:44.375 --> 00:02:48.793
These exceptions can be
thrown by a method, but

41
00:02:48.793 --> 00:02:53.764
the method header does not
need to explicitly specify

42
00:02:53.764 --> 00:02:58.526
that it's going to throw
one of those exceptions.

43
00:03:00.903 --> 00:03:01.942
Is that clear?

44
00:03:03.688 --> 00:03:09.373
All right, so methods typically
use checked exceptions when it's

45
00:03:09.373 --> 00:03:15.267
reasonable that a calling method
can recover from the error, right?

46
00:03:15.267 --> 00:03:21.235
So, for example, with that IOException,
If I caught that in my try-catch block,

47
00:03:21.235 --> 00:03:24.610
there's something I could
do as a programmer.

48
00:03:24.610 --> 00:03:29.069
I could create the directory and
then try the action again, right?

49
00:03:29.069 --> 00:03:31.563
So there's things that I can do.

50
00:03:31.563 --> 00:03:36.366
Versus unchecked exceptions are used
when there really isn't anything

51
00:03:36.366 --> 00:03:40.626
that you can do to recover from this,
it's best it just blow up.

52
00:03:40.626 --> 00:03:47.311
Now, while the unchecked exceptions
are not required to be handled,

53
00:03:47.311 --> 00:03:55.028
your code can still specify them within
the catch block and do whatever you want.

