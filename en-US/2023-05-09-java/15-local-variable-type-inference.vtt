WEBVTT

1
00:00:00.036 --> 00:00:03.851
In Java,
we talked about how lengthy things are and

2
00:00:03.851 --> 00:00:06.077
how verbose the language is.

3
00:00:06.077 --> 00:00:11.046
There is what's called local
variable type inference, which is

4
00:00:11.046 --> 00:00:16.482
a really long phrase that basically
says you can use var for data types.

5
00:00:16.482 --> 00:00:21.986
So instead of doing something like this,

6
00:00:21.986 --> 00:00:26.233
boolean isWaterWet = true;,

7
00:00:26.233 --> 00:00:31.280
I could say var isWaterWet = true;.

8
00:00:31.280 --> 00:00:35.465
This does not make Java dynamically type,
it's still static type.

9
00:00:35.465 --> 00:00:37.640
What it's going to do is, in var,

10
00:00:37.640 --> 00:00:41.544
was the data type based on whatever
it is that I assigned to it?

11
00:00:41.544 --> 00:00:46.782
Which means I can only use var if
I'm actually assigning a value to

12
00:00:46.782 --> 00:00:52.317
that variable, and the variable has
to be local as the name implies.

13
00:00:52.317 --> 00:00:55.848
It cannot be one of the global variables,
okay?

14
00:01:00.096 --> 00:01:08.209
So this is a local variable because
it's inside of a main method, right?

15
00:01:08.209 --> 00:01:13.542
This one is a global variable, so
I would not be able to do that.

16
00:01:13.542 --> 00:01:15.287
We might use var sometimes.

17
00:01:15.287 --> 00:01:17.825
I love writing var,
it's one of my favorite things.

18
00:01:17.825 --> 00:01:20.346
So I just write var and
then whatever it is,

19
00:01:20.346 --> 00:01:23.578
I don't have to think about
the data type too heavily.

20
00:01:23.578 --> 00:01:27.270
It's great for when you're using methods
that you're not really sure what the data

21
00:01:27.270 --> 00:01:29.991
type will be when you come back
without examining the method.

22
00:01:29.991 --> 00:01:36.299
Var blah blah, call a method and Java
knows what the data type will be, okay?

23
00:01:36.299 --> 00:01:41.116
&gt;&gt; Doesn't that get confusing with
certain data types, int versus doubles,

24
00:01:41.116 --> 00:01:43.685
for example, where that might matter?

25
00:01:43.685 --> 00:01:47.730
&gt;&gt; If you assign it and
then later on you like hover over it,

26
00:01:47.730 --> 00:01:51.444
Java will tell you like
what it inferred from that.

27
00:01:51.444 --> 00:01:57.046
And then, if you were doing
something that required a double or

28
00:01:57.046 --> 00:02:01.178
something like that, you'd be fine, yeah.

