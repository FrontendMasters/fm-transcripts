WEBVTT

1
00:00:00.000 --> 00:00:01.607
Pattern matching, right?

2
00:00:01.607 --> 00:00:05.645
So in this condition,

3
00:00:05.645 --> 00:00:11.812
we not only check if Sasha is a dog.

4
00:00:11.812 --> 00:00:15.922
But if so, we cast Sasha as a dog, and

5
00:00:15.922 --> 00:00:22.967
we store it into this newly
introduced sashaTheDog variable.

6
00:00:22.967 --> 00:00:28.674
So this is a shorthand way
of writing it all out.

7
00:00:28.674 --> 00:00:33.921
So remember I said we could do it
like if this is an instance of that,

8
00:00:33.921 --> 00:00:36.185
then do something, right?

9
00:00:36.185 --> 00:00:40.705
And maybe you want to do a typecasting or
something like that.

10
00:00:40.705 --> 00:00:47.787
With this pattern matching, it allows you
to essentially perform two actions in one.

11
00:00:47.787 --> 00:00:55.249
So that top if clause is the exact
same thing as the bottom one.

12
00:00:55.249 --> 00:00:58.860
That's just a shorthand way of doing it.

13
00:00:58.860 --> 00:01:04.628
That is called the instance
of pattern matching.

14
00:01:04.628 --> 00:01:09.850
So basically, you're saying,
if Sasha is an instance of dog,

15
00:01:09.850 --> 00:01:14.204
then create a new dog object
called sashaTheDog, and

16
00:01:14.204 --> 00:01:16.445
then cast Sasha to the dog.

17
00:01:16.445 --> 00:01:21.768
So you could say all of
that by just saying sasha

18
00:01:21.768 --> 00:01:27.100
instanceof Dog, sashaTheDog, same thing.

19
00:01:27.100 --> 00:01:29.578
&gt;&gt; And they call that
instance of pattern matching?

20
00:01:29.578 --> 00:01:32.025
&gt;&gt; Instance of pattern matching.

21
00:01:32.025 --> 00:01:32.804
&gt;&gt; Quick question about it.

22
00:01:32.804 --> 00:01:34.096
&gt;&gt; Yeah.

23
00:01:34.096 --> 00:01:39.230
&gt;&gt; So for this instance of pattern
matching, the scope of sashaTheDog is,

24
00:01:39.230 --> 00:01:43.225
I'm guessing,
the scope of the curly brackets?

25
00:01:43.225 --> 00:01:45.355
&gt;&gt; Lovely, look at you.

26
00:01:45.355 --> 00:01:50.003
Yes, so you've defined,
basically defined a new

27
00:01:50.003 --> 00:01:54.540
variable inside of that if
clause which means that

28
00:01:54.540 --> 00:02:00.290
sashaTheDog will only be
accessible within that scope.

29
00:02:00.290 --> 00:02:03.751
I love that question so much.

30
00:02:03.751 --> 00:02:06.810
&gt;&gt; You could change it to that way.

31
00:02:06.810 --> 00:02:08.573
You could set that as a global.

32
00:02:08.573 --> 00:02:14.032
You wouldn't necessarily have to do it
inside, or you could set it outside.

33
00:02:14.032 --> 00:02:19.133
&gt;&gt; If you wanted to do it, I don't
think you could do that as a global,

34
00:02:19.133 --> 00:02:21.605
not with the instance of check.

35
00:02:21.605 --> 00:02:26.254
Because at the global level,
outside of methods,

36
00:02:26.254 --> 00:02:31.560
the only thing you can do really
is kind of declare fields.

37
00:02:31.560 --> 00:02:38.186
So this logical check here where you have
an if statement would not be allowed

38
00:02:38.186 --> 00:02:44.961
outside of a method You
see what I'm saying?

39
00:02:44.961 --> 00:02:46.569
Let me show you.

40
00:02:46.569 --> 00:02:54.153
So I couldn't put an if
statement right here.

41
00:02:54.153 --> 00:02:58.579
Well, we don't even know rocky or
anybody cuz it's outside of scope.

42
00:02:58.579 --> 00:03:05.581
But it's already complaining even before I
got to rocky, cuz I'm outside of a method,

43
00:03:05.581 --> 00:03:10.420
any executable code like this
needs to be inside of a method.

44
00:03:10.420 --> 00:03:13.135
&gt;&gt; So the only way to do it is maybe
if you do it like it's a Boolean or

45
00:03:13.135 --> 00:03:15.826
if it returns true,
then it saves the value to an experiment.

46
00:03:15.826 --> 00:03:20.917
&gt;&gt; Yeah, you could do something
like you could declare,

47
00:03:20.917 --> 00:03:25.454
I don't know,
like Dog sashaTheDog up top, and

48
00:03:25.454 --> 00:03:30.338
then do some, I don't know,
something like that.

49
00:03:30.338 --> 00:03:34.185
I don't know, that's kind of wonky.

