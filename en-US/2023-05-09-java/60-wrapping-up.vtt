WEBVTT

1
00:00:00.000 --> 00:00:06.257
Okay folks, that is all of the material
that we needed to go through.

2
00:00:06.257 --> 00:00:08.787
Any questions about any topics?

3
00:00:08.787 --> 00:00:10.324
&gt;&gt; Do you have any?

4
00:00:10.324 --> 00:00:13.554
Yes, what I'm thinking in terms
of conceptions, exceptions and

5
00:00:13.554 --> 00:00:14.656
exception handling.

6
00:00:14.656 --> 00:00:20.034
I'm thinking about it in the terms of,
especially, of potentially catching bugs.

7
00:00:20.034 --> 00:00:24.704
Do you have any tips or
resources you'd recommend for

8
00:00:24.704 --> 00:00:30.943
the process of finding and
squashing bugs, I suppose, bug handling?

9
00:00:30.943 --> 00:00:36.548
&gt;&gt; [LAUGH] Not with exceptions.

10
00:00:36.548 --> 00:00:41.043
So, I have a lot of material.

11
00:00:41.043 --> 00:00:43.226
If you go to my website,

12
00:00:43.226 --> 00:00:48.809
I have a ton of stuff on just
automated testing, in general.

13
00:00:48.809 --> 00:00:54.257
So there's a lot of resources
there on just finding bugs.

14
00:00:54.257 --> 00:00:57.675
How to think about writing your code.

15
00:00:57.675 --> 00:01:01.830
How to write automated tests so
that you do catch bugs and stuff that.

16
00:01:01.830 --> 00:01:05.250
But not specific to exceptions.

17
00:01:05.250 --> 00:01:06.539
Yes?

18
00:01:06.539 --> 00:01:08.258
&gt;&gt; I have a question about streams.

19
00:01:08.258 --> 00:01:09.440
&gt;&gt; Yeah?

20
00:01:09.440 --> 00:01:12.642
&gt;&gt; Is there a preference for
when to have the print

21
00:01:12.642 --> 00:01:16.923
statement separately versus
inside the foreach statement?

22
00:01:16.923 --> 00:01:19.543
Is there a difference of
when to use which case?

23
00:01:19.543 --> 00:01:25.997
&gt;&gt; Yeah, so within the foreach is when
you wanna print every method, I mean,

24
00:01:25.997 --> 00:01:32.463
every element within the stream versus
if you had it outside of the stream.

25
00:01:32.463 --> 00:01:38.537
You could print the entire collection if
you want it as one versus inside of it.

26
00:01:38.537 --> 00:01:44.194
And I don't wanna use print
cuz it's a weak example.

27
00:01:44.194 --> 00:01:49.037
But there could be some
processing you want done on

28
00:01:49.037 --> 00:01:52.620
each element of the stream, right?

29
00:01:52.620 --> 00:01:57.414
And in those cases is when you would
use foreach on the stream itself.

30
00:01:57.414 --> 00:02:03.607
Outside of the stream, what you're
working with is the actual collection.

31
00:02:03.607 --> 00:02:08.448
So do you want to modify the collection or
process the collection.

32
00:02:08.448 --> 00:02:11.150
Or do you just want this to be done on,

33
00:02:11.150 --> 00:02:14.566
the stream is essentially
like a copy of that.

34
00:02:14.566 --> 00:02:16.736
You can do whatever processing you need.

35
00:02:16.736 --> 00:02:21.093
If you need it back in another form,
you can get it back in a list, right?

36
00:02:21.093 --> 00:02:26.789
So it's basically asking yourself, do I
wanna actually modify the collection or

37
00:02:26.789 --> 00:02:31.588
do I just wanna do some processing but
leave the original one intact?

38
00:02:31.588 --> 00:02:34.541
All right, folks, we can call it a class.

39
00:02:34.541 --> 00:02:40.916
&gt;&gt; [APPLAUSE]

