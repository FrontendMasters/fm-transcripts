WEBVTT

1
00:00:00.000 --> 00:00:04.784
We're gonna write a method that
adds spaces to a jumble string

2
00:00:04.784 --> 00:00:09.568
where all the words were written
together with no spaces, and

3
00:00:09.568 --> 00:00:14.356
then a little fact each new word
begins with a capital letter.

4
00:00:14.356 --> 00:00:15.990
So let's make a new one.

5
00:00:15.990 --> 00:00:20.343
And we'll call this one addSpaces.

6
00:00:20.343 --> 00:00:23.704
And then we wanna add a string.

7
00:00:23.704 --> 00:00:26.352
I don't know, something, HeyWorld!

8
00:00:26.352 --> 00:00:31.617
It'sMeAngie.

9
00:00:31.617 --> 00:00:38.678
Be careful, the instructions say that each
new word started with a capital letter,

10
00:00:38.678 --> 00:00:43.665
so that is our indicator on how
we find the new words, okay?

11
00:00:43.665 --> 00:00:45.995
So we'll add our new method

12
00:01:00.457 --> 00:01:04.212
I'm gonna use my good buddy var, and

13
00:01:04.212 --> 00:01:09.543
we'll say modifiedText=,
and now I'm gonna call

14
00:01:09.543 --> 00:01:15.007
into the string builder class,
new StringBuilder.

15
00:01:15.007 --> 00:01:19.869
And I can give the StringBuilder the text.

16
00:01:19.869 --> 00:01:22.950
So this is what calling
it to the constructor,

17
00:01:22.950 --> 00:01:28.245
StringBuilder that takes a string, and
it's basically gonnareturn me back.

18
00:01:28.245 --> 00:01:30.246
What are you returning me?

19
00:01:30.246 --> 00:01:32.852
A StringBuilder object.

20
00:01:34.630 --> 00:01:40.141
Okay, And with that StringBuilder
now I can do some fun things.

21
00:01:40.141 --> 00:01:45.103
So let's go ahead and we're gonna loop.

22
00:01:47.261 --> 00:01:53.224
I wanna use the regular loop here.

23
00:01:53.224 --> 00:02:00.305
So I wanna say i Is less than
the length of the modifiedText.

24
00:02:00.305 --> 00:02:06.282
And I can say less than, cuz that makes
sure it doesn't go all the way to the end.

25
00:02:06.282 --> 00:02:09.305
And then i++.

26
00:02:09.305 --> 00:02:13.932
And then inside of this loop I want to

27
00:02:13.932 --> 00:02:18.264
check that specific character.

28
00:02:18.264 --> 00:02:26.708
If it is, Uppercase, I want to what?

29
00:02:26.708 --> 00:02:30.305
You wanna addSpaces, so if it's uppercase,

30
00:02:30.305 --> 00:02:33.726
I would wanna add a space before it,
right?

31
00:02:33.726 --> 00:02:38.317
Okay, except for the first one,
I don't wanna space right here.

32
00:02:38.317 --> 00:02:42.139
Does that that logic
makes sense to everyone?

33
00:02:42.139 --> 00:02:47.443
All right, so let's add a loop,
a if statement.

34
00:02:47.443 --> 00:02:50.467
So if i does not equal 0,

35
00:02:50.467 --> 00:02:55.943
it's not the very first character, right?

36
00:02:55.943 --> 00:03:03.461
And, I'm going to use a wrapper class now,

37
00:03:03.461 --> 00:03:09.103
character
&gt;&gt; Do the double equal sign?

38
00:03:09.103 --> 00:03:11.157
&gt;&gt; I do, where?

39
00:03:11.157 --> 00:03:13.261
Not equal.

40
00:03:13.261 --> 00:03:14.426
&gt;&gt; Nevermind, sorry.

41
00:03:14.426 --> 00:03:18.451
&gt;&gt; [LAUGH] I'm glad that you're
thinking that way, though.

42
00:03:18.451 --> 00:03:22.191
All right, so
this character wrapper class has, again,

43
00:03:22.191 --> 00:03:27.167
a whole bunch of convenience methods
that are static and readily available.

44
00:03:27.167 --> 00:03:29.162
isAlphabetic, isDigits, so

45
00:03:29.162 --> 00:03:32.853
you can see where this could
become very helpful for you.

46
00:03:32.853 --> 00:03:35.936
One of them is is uppercase.

47
00:03:35.936 --> 00:03:42.319
Yeah, because it is static,
it has no context.

48
00:03:42.319 --> 00:03:45.314
So I have to give it the character.

49
00:03:45.314 --> 00:03:48.725
So I wanna see

50
00:03:48.725 --> 00:03:58.032
var modifiedTexr.charAt(i),

51
00:03:58.032 --> 00:03:59.899
okay?

52
00:04:03.264 --> 00:04:10.030
So if it is not the first character and if
the character is an uppercase character,

53
00:04:10.030 --> 00:04:13.762
what I wanna do is insert
a space before that.

54
00:04:13.762 --> 00:04:18.051
So I can say modifiedText.insert.

55
00:04:18.051 --> 00:04:23.709
And I give it the index
that I wanna insert before,

56
00:04:23.709 --> 00:04:28.980
and then I give it what
do I want inserted here.

57
00:04:28.980 --> 00:04:34.696
So I want a white space inserted there,
okay?

58
00:04:34.696 --> 00:04:40.583
And, At that point,

59
00:04:40.583 --> 00:04:43.494
well, another point.

60
00:04:43.494 --> 00:04:46.890
So I'm inside of this for loop, right?

61
00:04:46.890 --> 00:04:51.142
And this is going through each character.

62
00:04:51.142 --> 00:04:56.710
What I've just done is,
I've just inserted a space before it.

63
00:04:56.710 --> 00:04:59.112
So I'm kind of messing my numbers up,
right?

64
00:04:59.112 --> 00:05:02.718
So what I wanna do is advance i by 1.

65
00:05:05.419 --> 00:05:09.605
Sorry, to put it back where it was before.

66
00:05:12.079 --> 00:05:16.739
Okay, so that we don't have to
keep going down the same path.

67
00:05:17.777 --> 00:05:22.153
All right, and then after the for loop,

68
00:05:22.153 --> 00:05:28.082
let's just print it out our
new string modifiedText.

69
00:05:30.032 --> 00:05:32.232
All right, let's run it.

70
00:05:35.524 --> 00:05:36.870
Look at that.

71
00:05:46.132 --> 00:05:48.141
Any questions on StringBuilder?

72
00:05:50.320 --> 00:05:51.211
Yes.

73
00:05:51.211 --> 00:05:55.862
&gt;&gt; What's the relevance of passing
the text into the StringBuilder class?

74
00:05:57.784 --> 00:05:59.609
&gt;&gt; Yeah, this constructor here.

75
00:05:59.609 --> 00:06:03.501
So right here, StringBuilder,

76
00:06:03.501 --> 00:06:08.783
in order to have a string
that's a part of this

77
00:06:08.783 --> 00:06:13.787
object's state, you would want to give it

78
00:06:13.787 --> 00:06:19.489
the initial string that
you want it to deal with.

79
00:06:19.489 --> 00:06:24.622
Let's see if it even has
a default constructor.

80
00:06:24.622 --> 00:06:27.490
It does have a default constructor.

81
00:06:27.490 --> 00:06:31.698
So in that case,
if I wanted to do something else,

82
00:06:31.698 --> 00:06:36.120
still it has no concept of
what the text actually is.

83
00:06:36.120 --> 00:06:37.827
So I could do anything I want it,

84
00:06:37.827 --> 00:06:41.517
but I'm gonna end up with some sort
of exception when it tries to run.

85
00:06:41.517 --> 00:06:43.727
It's gonna say, say,
I don't have a text for you,

86
00:06:43.727 --> 00:06:45.545
I don't know what you're talking about.

87
00:06:45.545 --> 00:06:51.688
Or maybe the constructor sets it to,
call super.

88
00:06:51.688 --> 00:06:55.330
Yeah, it's just basically
setting some mumbo jumbo stuff.

89
00:06:55.330 --> 00:06:58.869
But the reason why we
sent it the text is so

90
00:06:58.869 --> 00:07:02.946
that it has some state
to initially deal with.

