WEBVTT

1
00:00:00.057 --> 00:00:02.806
So, let's write a program
that creates a new file, but

2
00:00:02.806 --> 00:00:04.571
it doesn't catch any exceptions.

3
00:00:04.571 --> 00:00:07.338
We don't feel like dealing
with exceptions, all right?

4
00:00:07.338 --> 00:00:11.121
So, we can get past this if
you're feeling a little lazy.

5
00:00:12.975 --> 00:00:17.638
All right, so back to Java.

6
00:00:17.638 --> 00:00:18.779
Let's make a new class.

7
00:00:24.819 --> 00:00:26.315
So we, let's just add it here.

8
00:00:26.315 --> 00:00:27.872
What do y'all think?

9
00:00:27.872 --> 00:00:28.655
All right.

10
00:00:30.212 --> 00:00:34.590
Okay, we can make another one because
it's still ThrowingExceptions, right?

11
00:00:34.590 --> 00:00:38.873
So, we'll make a new method and

12
00:00:38.873 --> 00:00:47.292
this one we'll call it public
static void rethrowException.

13
00:00:52.133 --> 00:00:57.493
And I want to make the new file,
so we'll say, File.

14
00:00:57.493 --> 00:01:01.131
Make sure you import it.

15
00:01:04.901 --> 00:01:08.393
Nonexistent.txt.

16
00:01:17.542 --> 00:01:20.371
And I wanna say file
that creates a newFile.

17
00:01:20.371 --> 00:01:23.365
So we already know that
throws an exception, right?

18
00:01:23.365 --> 00:01:29.396
I don't want a try catch block here, okay?

19
00:01:29.396 --> 00:01:30.435
I mean, this is gonna happen.

20
00:01:30.435 --> 00:01:32.941
Sometimes you're like writing code and

21
00:01:32.941 --> 00:01:35.819
you're using a method
from some other class.

22
00:01:35.819 --> 00:01:40.208
It throws an exception and you're like,
I don't know how to handle that exception.

23
00:01:40.208 --> 00:01:43.088
Just let it let it throw, right?

24
00:01:43.088 --> 00:01:43.640
And that's fine.

25
00:01:43.640 --> 00:01:47.203
If you wanna do that,
you don't have a way to rebound from that.

26
00:01:47.203 --> 00:01:48.870
What are you going to do,
like print the stack trace?

27
00:01:48.870 --> 00:01:51.390
That'll already happen anyway, right?

28
00:01:51.390 --> 00:01:56.870
So you might just want to say,
okay, I don't want to handle it,

29
00:01:56.870 --> 00:02:02.060
instead I'm just gonna say that
I throw this exception too.

30
00:02:02.060 --> 00:02:03.959
And that's enough.

31
00:02:03.959 --> 00:02:06.412
I no longer need the try catch block.

32
00:02:06.412 --> 00:02:08.002
I basically said, hey,

33
00:02:08.002 --> 00:02:12.414
if you call me there's a chance that
this exception might be thrown.

34
00:02:12.414 --> 00:02:18.282
I've pushed the burden of that
to whoever is calling me.

35
00:02:18.282 --> 00:02:22.165
And they could push the burden
if they want to, or

36
00:02:22.165 --> 00:02:24.928
they can handle it if they want to.

37
00:02:24.928 --> 00:02:25.681
All right.

38
00:02:25.681 --> 00:02:29.192
Polymorphism also works in this case.

39
00:02:29.192 --> 00:02:32.501
So, if there's any unchecked exceptions or

40
00:02:32.501 --> 00:02:37.203
maybe there's 15 different
exceptions that can be thrown and

41
00:02:37.203 --> 00:02:42.882
I don't wanna list 15 things here,
I could just change that to exception.

42
00:02:42.882 --> 00:02:44.697
Put the super class.

43
00:02:44.697 --> 00:02:49.219
Basically I throw exceptions people.

44
00:02:49.219 --> 00:02:53.439
All right?
I'm gonna leave a couple of examples.

45
00:02:53.439 --> 00:03:01.130
So we'll say this and then let's make
one more here, rethrowExceptions.

46
00:03:01.130 --> 00:03:04.440
Okay, and
then I have this one exception but

47
00:03:04.440 --> 00:03:08.302
then I could do like Scanner or
something, right?

48
00:03:08.302 --> 00:03:13.991
So, Scanner, how did that code look,
fileReader, right?

49
00:03:20.112 --> 00:03:24.695
And then that throws
a different kind of exception.

50
00:03:24.695 --> 00:03:27.259
So I'm going to change that to Exception.

51
00:03:27.259 --> 00:03:29.486
That way that handles both.

52
00:03:29.486 --> 00:03:31.407
&gt;&gt; Can you specify two in the header?

53
00:03:31.407 --> 00:03:32.293
&gt;&gt; Yes.

54
00:03:32.293 --> 00:03:34.795
You could, you will just do a comma here.

55
00:03:34.795 --> 00:03:38.567
&gt;&gt; Okay.
&gt;&gt; And then write the other one so,

56
00:03:38.567 --> 00:03:45.618
just like an input mismatch or
something like that you could do that.

57
00:03:50.383 --> 00:03:50.888
&gt;&gt; I have a question.

58
00:03:50.888 --> 00:03:51.472
&gt;&gt; Yeah.

59
00:03:51.472 --> 00:03:57.052
&gt;&gt; Earlier we were talking about
interfaces if you are setting up a method.

60
00:03:57.052 --> 00:04:01.534
Writing in a class, but
you implemented it from the interface,

61
00:04:01.534 --> 00:04:04.944
the interface also need
to throw the exception?

62
00:04:04.944 --> 00:04:06.227
&gt;&gt; Say one more time.

63
00:04:06.227 --> 00:04:08.755
&gt;&gt; So we have interfaces and
we have methods or

64
00:04:08.755 --> 00:04:11.503
like method signatures
in those interfaces.

65
00:04:11.503 --> 00:04:17.121
And you can use that to generate a method
and a class to fulfill that [INAUDIBLE].

66
00:04:17.121 --> 00:04:22.113
Does the signature or the method name,
I guess suppose in the interface also

67
00:04:22.113 --> 00:04:26.801
need to throw the exception if you're
declaring it in the method name?

68
00:04:26.801 --> 00:04:29.087
&gt;&gt; Good question.

69
00:04:29.087 --> 00:04:30.209
Let's check that out.

70
00:04:32.915 --> 00:04:35.608
Give me one second, to write this.

71
00:04:39.461 --> 00:04:44.140
All right, let's go to interfaces.

72
00:04:44.140 --> 00:04:46.992
So let's say I have a product interface.

73
00:04:46.992 --> 00:04:53.538
You are asking if this needs to like
throws IOException or something like that.

74
00:04:53.538 --> 00:04:58.165
So you can definitely declare that
there and then whoever inherits,

75
00:04:58.165 --> 00:05:00.169
they get that burden as well.

76
00:05:00.169 --> 00:05:03.328
What I don't know is if
I don't declare that,

77
00:05:03.328 --> 00:05:06.244
can I declare it in the overridden method?

78
00:05:06.244 --> 00:05:10.274
So let's look at Book and getName.

79
00:05:10.274 --> 00:05:12.966
Let's say throws.

80
00:05:15.215 --> 00:05:16.919
Yeah doesn't like it.

81
00:05:18.263 --> 00:05:22.924
Overwritten method does
not throw an exception.

82
00:05:22.924 --> 00:05:26.098
So you would have to define it in the.

83
00:05:26.098 --> 00:05:28.370
&gt;&gt; The interface.
&gt;&gt; The interface, yeah, good question.

