WEBVTT

1
00:00:00.000 --> 00:00:03.854
Switch statements are another
decision structure.

2
00:00:03.854 --> 00:00:10.173
They basically solve the problem in
the same way that the if-else-if does, so

3
00:00:10.173 --> 00:00:16.414
it's multiple branches, multiple
possibilities, more than two, right?

4
00:00:16.414 --> 00:00:19.731
Yeah, so good when there's
more than two possible paths.

5
00:00:19.731 --> 00:00:25.037
The difference between the if-else-if in
the switch is that the switch checks for

6
00:00:25.037 --> 00:00:26.717
equality on a condition.

7
00:00:26.717 --> 00:00:30.954
Whereas, for example,
in the program we just wrote,

8
00:00:30.954 --> 00:00:35.286
we said if the score is less than this,
then it's this,

9
00:00:35.286 --> 00:00:38.803
there's no less than or
anything like that.

10
00:00:38.803 --> 00:00:41.228
With Switch, it's straight up equality.

11
00:00:41.228 --> 00:00:43.754
Does this equal this?

12
00:00:43.754 --> 00:00:46.699
Okay, so let's go ahead and

13
00:00:46.699 --> 00:00:51.496
write another version
of that grade program.

14
00:00:51.496 --> 00:00:56.368
We'll have them enter the letter
grade this time versus the score and

15
00:00:56.368 --> 00:01:01.666
then we're gonna use a switch statement
to print out a message basically.

16
00:01:01.666 --> 00:01:05.635
Like letting them know what how they
did it, okay so back to our IDE.

17
00:01:08.852 --> 00:01:12.607
And let's go ahead and
call this one great message and

18
00:01:12.607 --> 00:01:16.198
this will be in the decision
structure package, so

19
00:01:16.198 --> 00:01:23.716
GradeMessage, All right?

20
00:01:23.716 --> 00:01:30.002
I'm making my main method, and
I'm going to ask them for a letter grade.

21
00:01:35.354 --> 00:01:37.286
We'll read that in with our scanner.

22
00:01:42.898 --> 00:01:45.824
Import scanner.

23
00:01:47.481 --> 00:01:50.728
System that in and

24
00:01:50.728 --> 00:01:55.495
the letter grade is what?

25
00:01:55.495 --> 00:01:56.367
A character, right?

26
00:02:00.874 --> 00:02:03.289
I'm gonna read it in.

27
00:02:03.289 --> 00:02:05.584
Let me read it in as a char.

28
00:02:05.584 --> 00:02:10.084
I don't know if scanner
has a thing let me see.

29
00:02:10.084 --> 00:02:12.519
grade scanner.next.

30
00:02:18.686 --> 00:02:23.570
Okay, it doesn't have one that reads
char so we'll make it a string and

31
00:02:23.570 --> 00:02:30.732
All right, great.

32
00:02:30.732 --> 00:02:33.566
So in scanner.next,
we'll read in a string.

33
00:02:33.566 --> 00:02:36.852
All right, so we have our grade,
let's go ahead and close the scanner.

34
00:02:39.484 --> 00:02:45.841
And I want to essentially initialize

35
00:02:45.841 --> 00:02:50.974
a message based on the grade.

36
00:02:50.974 --> 00:02:53.829
So I'll say string message.

37
00:02:53.829 --> 00:02:58.081
We won't give it a value for now, and
we're going to use the switch decision

38
00:02:58.081 --> 00:03:01.812
structure to determine how do we
initialize the message, right.

39
00:03:01.812 --> 00:03:06.731
So to use switch,
we write the word switch.

40
00:03:06.731 --> 00:03:09.674
Inside of a set of parentheses,

41
00:03:09.674 --> 00:03:15.454
you're going to put the variable
that you want it to evaluate.

42
00:03:15.454 --> 00:03:17.490
So that would be grade, right?

43
00:03:17.490 --> 00:03:21.780
So look at grade and then, remember,

44
00:03:21.780 --> 00:03:25.811
it's going to check for equality.

45
00:03:25.811 --> 00:03:30.432
So within the switch statement,
we write what's called cases.

46
00:03:30.432 --> 00:03:36.542
So we can say case, and then you
give it a possible value for grade.

47
00:03:36.542 --> 00:03:40.996
So if the case is that
grade is equal to A,

48
00:03:40.996 --> 00:03:46.236
then you put a semicolon and
any statements that

49
00:03:46.236 --> 00:03:50.956
you will want executed
if this is the case.

50
00:03:50.956 --> 00:03:57.497
So I'm gonna say I want
the message to be excellent job..

51
00:04:02.512 --> 00:04:07.174
Okay, your IDE would have automatically
indented that message statement

52
00:04:07.174 --> 00:04:10.060
to let you know that
that's a part of the case.

53
00:04:10.060 --> 00:04:14.572
And then once I'm done with the case,
I can write as many

54
00:04:14.572 --> 00:04:19.564
statements as I want here, but
when I'm done with that case,

55
00:04:19.564 --> 00:04:24.272
I need to write break to let
the compiler know, I'm done.

56
00:04:24.272 --> 00:04:29.822
All right and
then you can follow this with however

57
00:04:29.822 --> 00:04:34.985
many cases you want so
our next case would be B.

58
00:04:34.985 --> 00:04:41.205
And if they gotta B we'll say good job and
then we'll break.

59
00:04:41.205 --> 00:04:45.378
Okay, I want to show you,
we'll write the rest but

60
00:04:45.378 --> 00:04:50.248
I wanna show you what happens
if you don't write the break.

61
00:04:50.248 --> 00:04:54.534
What's going to happen is
what's called fall through.

62
00:04:54.534 --> 00:04:59.511
So in switch cases,
if I omit this break statement,

63
00:04:59.511 --> 00:05:03.695
if A happens to be the case,
grade equals A,

64
00:05:03.695 --> 00:05:08.670
it'll come here, it'll say,
okay, let me assign

65
00:05:08.670 --> 00:05:13.557
excellent job to message,
but there's no break.

66
00:05:13.557 --> 00:05:16.169
The programmer must want me to keep going.

67
00:05:16.169 --> 00:05:21.299
So it won't even evaluate the next case,
it's just gonna go right in there.

68
00:05:21.299 --> 00:05:25.504
And it'll override message to good job.

69
00:05:25.504 --> 00:05:27.025
And that will be what happens.

70
00:05:27.025 --> 00:05:29.325
So you'll end up in the wrong case.

71
00:05:29.325 --> 00:05:34.274
All right, it will do what you wanted
it to do but it will keep going untill

72
00:05:34.274 --> 00:05:38.752
it hits the break statement,
so, that's called fall through.

73
00:05:38.752 --> 00:05:44.484
Some times you want fall through to
happen most times you don't, all right.

74
00:05:44.484 --> 00:05:49.111
So,that's case B, case C we'll say

75
00:05:49.111 --> 00:05:54.036
message =, what's the message for C?

76
00:05:54.036 --> 00:05:54.778
&gt;&gt; Keep trying.

77
00:05:54.778 --> 00:05:59.444
[LAUGH]
&gt;&gt; [LAUGH] Let's say good job, and

78
00:05:59.444 --> 00:06:02.172
we'll say great job here.

79
00:06:02.172 --> 00:06:04.618
All right C is, I guess, doable, right?

80
00:06:04.618 --> 00:06:09.545
D is when you get yourself in trouble.

81
00:06:09.545 --> 00:06:11.698
Okay, case D.

82
00:06:11.698 --> 00:06:13.046
&gt;&gt; You can do better.

83
00:06:13.046 --> 00:06:17.816
&gt;&gt; You can [LAUGH] message=you

84
00:06:17.816 --> 00:06:22.380
need to work a bit harder.

85
00:06:25.860 --> 00:06:29.519
&gt;&gt; You have any examples or
follow through might be useful?

86
00:06:29.519 --> 00:06:31.080
&gt;&gt; Yeah.
Yeah, good question.

87
00:06:31.080 --> 00:06:35.828
Let's say that you want
to do something special

88
00:06:35.828 --> 00:06:39.632
if they match the first case, right?

89
00:06:39.632 --> 00:06:44.274
You want to do something different
if they match the second case, but

90
00:06:44.274 --> 00:06:48.674
for the first case you will want
the code that's special to them,

91
00:06:48.674 --> 00:06:52.533
but also the code that's
applicable to the second case.

92
00:06:52.533 --> 00:06:54.813
So you want two things written, but

93
00:06:54.813 --> 00:06:59.831
you don't want to duplicate the code
that's common between those two cases.

94
00:06:59.831 --> 00:07:04.215
So you can set it up where you say, all
right, if you match this case, do this,

95
00:07:04.215 --> 00:07:07.688
but fall through to the next one so
you can do the rest of it too.

96
00:07:07.688 --> 00:07:11.148
And if you just match the second case,
you wouldn't get the first statements.

97
00:07:11.148 --> 00:07:16.040
&gt;&gt; So its kind of like a almost like a
flowchart where you're trying to check off

98
00:07:16.040 --> 00:07:20.333
boxes and essentially hit a condition
where it's no longer true?

99
00:07:20.333 --> 00:07:22.667
&gt;&gt; And then follow you but
the no longer true part.

100
00:07:22.667 --> 00:07:27.538
&gt;&gt; Well, you know, case A,
B and C, they meet the case for

101
00:07:27.538 --> 00:07:30.663
case A and I made the case for case B.

102
00:07:30.663 --> 00:07:34.281
Those are both true so you do this, they
don't meet the case for case C, and so

103
00:07:34.281 --> 00:07:37.859
you wanna stop there and you don't wanna
move along further in the process.

104
00:07:37.859 --> 00:07:42.272
&gt;&gt; Right, but there's also some
differences if they only meet B.

105
00:07:42.272 --> 00:07:44.814
So for A, I will want A and B.

106
00:07:44.814 --> 00:07:47.262
For B I just want B.

107
00:07:47.262 --> 00:07:48.239
&gt;&gt; Yeah.

108
00:07:48.239 --> 00:07:49.151
&gt;&gt; Okay.

109
00:07:49.151 --> 00:07:50.369
All right.

110
00:07:53.892 --> 00:07:58.995
So if they got an F, we'll say,

111
00:07:58.995 --> 00:08:02.781
and then we'll break.

112
00:08:02.781 --> 00:08:05.810
Okay, so
that's all of the possible cases but

113
00:08:05.810 --> 00:08:10.327
we know that human beings don't
care about possible cases, right?

114
00:08:10.327 --> 00:08:15.248
So someone might enter something like a Z,
for example, right?

115
00:08:15.248 --> 00:08:20.292
And it might not even be that
they're doing this out of error,

116
00:08:20.292 --> 00:08:23.978
but maybe in their culture, their country,

117
00:08:23.978 --> 00:08:28.151
or whatever,
the letters are different, right?

118
00:08:28.151 --> 00:08:30.391
So we don't support that.

119
00:08:30.391 --> 00:08:35.251
So we just need to take care
of those cases in switch

120
00:08:35.251 --> 00:08:39.435
you can add a case that's called default.

121
00:08:39.435 --> 00:08:40.248
The default case means,

122
00:08:40.248 --> 00:08:42.232
if it doesn't match any of these
other cases, just do this.

123
00:08:42.232 --> 00:08:49.680
So, here we'll just supply
a little error message,

124
00:08:49.680 --> 00:08:54.988
we'll say, Error _Invalid grade.

125
00:08:54.988 --> 00:08:57.797
And we'll break this as well.

126
00:08:57.797 --> 00:09:01.963
Okay, so after our switch statement,

127
00:09:01.963 --> 00:09:06.514
we'll go ahead and print out the message.

128
00:09:10.244 --> 00:09:12.482
Does this make sense?

129
00:09:12.482 --> 00:09:16.520
Okay, questions on switch, let's.

130
00:09:16.520 --> 00:09:18.392
&gt;&gt; But
if you wanted to force a good response,

131
00:09:18.392 --> 00:09:21.045
like you don't just want to like
print out an error message.

132
00:09:21.045 --> 00:09:22.814
You wanna force them to keep going until.

133
00:09:22.814 --> 00:09:26.839
&gt;&gt; Yeah, so
we can handle that with a loop and

134
00:09:26.839 --> 00:09:33.522
we'll actually code up a case like
that when we talk about the loops.

135
00:09:33.522 --> 00:09:35.867
&gt;&gt; Do you always need to
end with a default case?

136
00:09:35.867 --> 00:09:37.921
&gt;&gt; You don't have to add a default case.

137
00:09:37.921 --> 00:09:42.803
So what will happen,
let's see what will happen.

138
00:09:42.803 --> 00:09:43.717
All right.

139
00:09:49.013 --> 00:09:54.334
Okay, so,
I don't have a default case here, right?

140
00:09:54.334 --> 00:09:57.164
And then I'm trying to use message later.

141
00:09:57.164 --> 00:10:01.560
So it's gonna say message might not have
been initialized because I could have

142
00:10:01.560 --> 00:10:03.369
a possibility where it's not.

143
00:10:03.369 --> 00:10:07.789
If I just did not want the default case,
I could go back here and

144
00:10:07.789 --> 00:10:12.300
I can initialize this to maybe
a blank string to start off with.

145
00:10:12.300 --> 00:10:15.102
And now I don't have a default and
I can print this.

146
00:10:15.102 --> 00:10:18.768
So what'll happen is,
I think nothing's gonna happen.

147
00:10:18.768 --> 00:10:22.253
Let's go ahead and
try to run it just to prove that out.

148
00:10:22.253 --> 00:10:29.618
So let's say enter your grade and
we're going to say a Z, right?

149
00:10:29.618 --> 00:10:34.831
In that case, nothing happens,
it just ends, okay?

150
00:10:34.831 --> 00:10:40.375
So you don't have to,
but it's good practice

151
00:10:40.375 --> 00:10:45.932
just to make sure you
have something going on.

152
00:10:45.932 --> 00:10:47.896
All right, great question.

153
00:10:47.896 --> 00:10:50.681
Any others?

154
00:10:50.681 --> 00:10:55.378
All right,
let's run it again with our good cases.

155
00:10:55.378 --> 00:11:02.933
Enter your letter grade,
B, great job, okay.

156
00:11:02.933 --> 00:11:05.806
Let's show the, fall through.

157
00:11:05.806 --> 00:11:09.166
So I'm going to omit the break and

158
00:11:09.166 --> 00:11:15.178
I should get excellent when I say A but
I'm gonna get grade.

159
00:11:15.178 --> 00:11:17.155
So let's run it again.

160
00:11:17.155 --> 00:11:22.687
My grade is an A and
notice I got great because it overrode it.

161
00:11:22.687 --> 00:11:23.862
&gt;&gt; I think you might have
just talked about this.

162
00:11:23.862 --> 00:11:27.312
I was kind of distracted, but it says
variable grade might not be initialized.

163
00:11:27.312 --> 00:11:28.490
Is that what you were just talking about?

164
00:11:28.490 --> 00:11:32.198
&gt;&gt; Right, so
if you did not have the default case,

165
00:11:32.198 --> 00:11:37.405
there's a possibility that none
of these cases matched message.

166
00:11:37.405 --> 00:11:43.857
And so when you try to use message it says
we're not sure message has a value, right?

167
00:11:43.857 --> 00:11:48.413
So what you could do is if you
didn't want the default you could

168
00:11:48.413 --> 00:11:53.245
just initialize this to A blank string or
whatever you wanted to.

169
00:11:53.245 --> 00:12:00.181
And then once you do that, the error goes
away because it has some value there.

