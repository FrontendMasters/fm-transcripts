WEBVTT

1
00:00:00.000 --> 00:00:04.994
Sometimes you need to add an additional
decision structure within

2
00:00:04.994 --> 00:00:08.749
the decision structure
that you're already in.

3
00:00:08.749 --> 00:00:11.617
So these are called Nested If Statements.

4
00:00:11.617 --> 00:00:13.543
So it's a path inside of the path.

5
00:00:13.543 --> 00:00:17.428
So basically it says,
if you make it past the first one,

6
00:00:17.428 --> 00:00:20.993
I'll need you to check for
something else as well.

7
00:00:20.993 --> 00:00:23.426
So here's some example code.

8
00:00:23.426 --> 00:00:29.328
It says, if salary is greater than or
equal to requiredSalary, go inside,

9
00:00:29.328 --> 00:00:35.341
and then we are met with another decision
structure, this one is the if else.

10
00:00:35.341 --> 00:00:40.538
If the years are greater than or
equal to requiredYearsEmployed,

11
00:00:40.538 --> 00:00:46.219
let them know they qualify for
a loan, otherwise, they don't, okay?

12
00:00:46.219 --> 00:00:49.119
So you can nest these.

13
00:00:49.119 --> 00:00:56.356
If-Else-If is another decision structure.

14
00:00:56.356 --> 00:01:01.369
If situation A occurs,
we wanna do something, else if B occurs,

15
00:01:01.369 --> 00:01:05.489
something else, else if C occurs,
something else.

16
00:01:05.489 --> 00:01:10.132
So this is for when you have more
than two possible paths, right?

17
00:01:10.132 --> 00:01:14.220
And you can go on and
on with this however many you need, but

18
00:01:14.220 --> 00:01:18.818
it's basically a decision with
more than two paths, all right?

19
00:01:18.818 --> 00:01:20.765
So we'll write another program.

20
00:01:20.765 --> 00:01:26.498
This one is saying, display a letter grade
for a student based on their test score.

21
00:01:26.498 --> 00:01:29.469
So we're still in decision
structure package,

22
00:01:29.469 --> 00:01:33.459
let's create a new class,
we'll call this one, test results.

23
00:01:33.459 --> 00:01:37.089
So new Java class, TestResults.

24
00:01:40.927 --> 00:01:44.152
Okay, let's make our main method.

25
00:01:44.152 --> 00:01:49.442
And we want to go ahead and
get the test score,

26
00:01:49.442 --> 00:01:55.020
so let's ask the user to
enter your test score.

27
00:01:57.421 --> 00:01:59.795
And we'll make a scanner.

28
00:02:04.207 --> 00:02:09.301
I'm gonna read from the input,
make sure we import.

29
00:02:13.124 --> 00:02:18.224
And this test score we're gonna read
in as a, let's read it as double,

30
00:02:18.224 --> 00:02:21.555
just incase there is half credit,
all right?

31
00:02:21.555 --> 00:02:29.014
So we'll call this score, and
we'll say scanner.nextDouble, perfect.

32
00:02:29.014 --> 00:02:33.956
And let's close our scanner.

33
00:02:33.956 --> 00:02:40.314
All right,
now we need to determine the letter grade.

34
00:02:40.314 --> 00:02:44.125
Now, the letter grade can be A,
B, C, D, or F.

35
00:02:44.125 --> 00:02:48.383
This is a single letter, so
I'm gonna introduce a new data type.

36
00:02:48.383 --> 00:02:52.002
So we've seen strings which
are multiple letters.

37
00:02:52.002 --> 00:02:57.079
Single characters are called char,

38
00:02:57.079 --> 00:03:00.195
so it's C-H-A-R.

39
00:03:00.195 --> 00:03:04.691
And we can name it grade, okay?

40
00:03:04.691 --> 00:03:09.432
I don't know what the value is yet,
and it's fine to declare variables and

41
00:03:09.432 --> 00:03:11.850
then later go ahead and set the value.

42
00:03:11.850 --> 00:03:18.696
So it's based on this decision structure
with this variable will be initialized to.

43
00:03:18.696 --> 00:03:25.002
So I'm gonna say,
if the score is less than 60,

44
00:03:25.002 --> 00:03:28.905
then the grade is equal to, and

45
00:03:28.905 --> 00:03:33.727
characters use a single quote, so F.

46
00:03:35.440 --> 00:03:42.061
All right, else and
not just else, else-if.

47
00:03:42.061 --> 00:03:46.359
So remember when we did if-else,
we had one condition, and

48
00:03:46.359 --> 00:03:48.306
it shared it amongst them.

49
00:03:48.306 --> 00:03:53.605
With the if-else-if, you add
a condition on each one of these elses,

50
00:03:53.605 --> 00:03:56.976
except for maybe the final one,
if you want.

51
00:03:56.976 --> 00:04:00.728
So we'll say else if,

52
00:04:00.728 --> 00:04:05.467
the score is less than 70,

53
00:04:05.467 --> 00:04:11.604
then The grade equals D.

54
00:04:14.941 --> 00:04:20.396
Now, let's say that the grade is 65.

55
00:04:20.396 --> 00:04:26.167
This first condition is true and
the second condition is true, right?

56
00:04:26.167 --> 00:04:30.811
With this decision structure,
the if-else-if decision structure,

57
00:04:30.811 --> 00:04:35.223
what the code is gonna do is find
the first condition that is true, and

58
00:04:35.223 --> 00:04:37.526
it's only gonna execute that one.

59
00:04:37.526 --> 00:04:42.050
So even if other conditions
happen to be true,

60
00:04:42.050 --> 00:04:45.418
it won't look at any other paths.

61
00:04:45.418 --> 00:04:48.782
It found the one path that
it wants to take, and

62
00:04:48.782 --> 00:04:52.849
that's the first condition that's true,
all right?

63
00:04:52.849 --> 00:04:57.616
Else if score is less than

64
00:04:57.616 --> 00:05:02.156
80, then we have a C.

65
00:05:04.324 --> 00:05:12.187
Else if score is less than 90,
We have a B.

66
00:05:14.997 --> 00:05:20.449
And then finally, so for
the final else, it's up to you,

67
00:05:20.449 --> 00:05:26.236
you can do another else-if, or
you can just do a plane else and

68
00:05:26.236 --> 00:05:31.829
say, if none of those were true,
just do this, all right?

69
00:05:31.829 --> 00:05:33.483
Grade equals A.

70
00:05:37.709 --> 00:05:40.075
Questions on this so far?

71
00:05:40.075 --> 00:05:44.151
Perfect, last thing is
just to print it out.

72
00:05:44.151 --> 00:05:49.570
So we'll say, your,
oops, put it in quotes,

73
00:05:49.570 --> 00:05:54.183
your grade, and then append the grade.

74
00:05:59.591 --> 00:06:00.311
Let's run it.

75
00:06:00.311 --> 00:06:01.620
Someone give me a grade.

76
00:06:04.625 --> 00:06:05.724
A score.

77
00:06:07.320 --> 00:06:08.873
0 to 100, quickly.

78
00:06:08.873 --> 00:06:09.834
&gt;&gt; 78.

79
00:06:09.834 --> 00:06:12.680
&gt;&gt; 78, so my test score is 78.

80
00:06:12.680 --> 00:06:16.185
&gt;&gt; What should the grade
be based on our code?

81
00:06:16.185 --> 00:06:18.238
&gt;&gt; C.

82
00:06:18.238 --> 00:06:21.463
&gt;&gt; That is a C, all right.

83
00:06:21.463 --> 00:06:24.215
Very good, okay?

84
00:06:27.357 --> 00:06:31.244
One more, let's just do over 100.

85
00:06:31.244 --> 00:06:34.453
Okay, extra credit.

86
00:06:34.453 --> 00:06:37.733
Yeah, got it A, right, cool.

