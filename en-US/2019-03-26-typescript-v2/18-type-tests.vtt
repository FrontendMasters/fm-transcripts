WEBVTT

1
00:00:00.490 --> 00:00:02.870
&gt;&gt; Mike North: I want to also
show you this test here.

2
00:00:04.950 --> 00:00:09.260
So you can write tests for types.

3
00:00:09.260 --> 00:00:15.890
Microsoft has a library called dtslint,
which uses tslint.

4
00:00:15.890 --> 00:00:18.926
And it basically parses
the linting error messages and

5
00:00:18.926 --> 00:00:23.370
compares them against special comments
that you can leave in your types.

6
00:00:23.370 --> 00:00:27.100
So, this isn't actually, I kind of
lied when I said it was a Mocha test.

7
00:00:28.140 --> 00:00:32.512
This is just a TypeScript file
with special comments in there.

8
00:00:32.512 --> 00:00:36.807
And this basically asserts
that if there is an error,

9
00:00:36.807 --> 00:00:41.293
there must be an error here,
I could just as easily say,

10
00:00:41.293 --> 00:00:47.430
$ExpectType,
&gt;&gt; Mike North: False, right?

11
00:00:47.430 --> 00:00:52.440
You can write test cases around
things that are purely types.

12
00:00:52.440 --> 00:00:54.060
A lot of people don't realize this and

13
00:00:54.060 --> 00:00:59.360
they just skip tests completely when it
comes to interfaces and things like that.

14
00:00:59.360 --> 00:01:04.150
But this can be a gnarly
area of your code.

15
00:01:04.150 --> 00:01:08.490
Where if you have something that's a
little bit abstract, you really wanna have

16
00:01:08.490 --> 00:01:14.070
some confidence around
changes being nondestructive.

17
00:01:14.070 --> 00:01:16.160
So dtslint is what to look for.

