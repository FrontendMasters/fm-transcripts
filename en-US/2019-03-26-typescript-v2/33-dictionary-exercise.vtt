WEBVTT

1
00:00:00.420 --> 00:00:04.831
&gt;&gt; Mike North: So we're going
to create some familiar looking

2
00:00:04.831 --> 00:00:08.920
utilities built around a dictionary type.

3
00:00:09.930 --> 00:00:13.090
Has anyone here used map and
reduce on raise?

4
00:00:13.090 --> 00:00:13.950
Show of hands.

5
00:00:13.950 --> 00:00:15.080
Awesome, everybody.

6
00:00:15.080 --> 00:00:19.050
So we're gonna build map and
reduce for dictionaries and

7
00:00:19.050 --> 00:00:21.450
we're going to define a dictionary type.

8
00:00:21.450 --> 00:00:23.580
So here's an example.

9
00:00:23.580 --> 00:00:26.710
We have a file extensions
dictionary on the right

10
00:00:26.710 --> 00:00:31.210
we would say this is a dictionary
of string arrays, and

11
00:00:31.210 --> 00:00:36.400
we want to iterate over the values for
talking about mapping.

12
00:00:36.400 --> 00:00:42.600
We want to produce a dictionary with
the same keys but with transformed values.

13
00:00:42.600 --> 00:00:46.398
So we would get something like
what we see in the bottom right.

14
00:00:46.398 --> 00:00:51.341
So maybe we're building like a open
file dialogue where we wanna list all of

15
00:00:51.341 --> 00:00:53.694
the extensions looks like jpegs and

16
00:00:53.694 --> 00:00:57.233
html files have multiple
extensions that are valid.

17
00:00:59.656 --> 00:01:03.885
&gt;&gt; Mike North: And we're going to use
our knowledge of type parameters so

18
00:01:03.885 --> 00:01:08.780
that this should work neatly
with an arbitrary dictionary.

19
00:01:08.780 --> 00:01:13.592
Where we can operate on things
that have types that we don't

20
00:01:13.592 --> 00:01:17.923
know the details about,
but using type parameters,

21
00:01:17.923 --> 00:01:24.274
we can still abstract all of that away,
operate on these data structures, and

22
00:01:24.274 --> 00:01:31.230
give our consumers back the high-fidelity
types that they can then carry on and use.

23
00:01:31.230 --> 00:01:34.824
So this is in the challenges
slash dict folder

