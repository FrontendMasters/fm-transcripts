WEBVTT

1
00:00:00.040 --> 00:00:02.210
&gt;&gt; Mike North: We've already
touched on objects little bit.

2
00:00:02.210 --> 00:00:07.048
They're kind of, object types here,
they look kind of like object values,

3
00:00:07.048 --> 00:00:09.538
except instead of key value,
you have key type.

4
00:00:09.538 --> 00:00:14.180
I use Prettier to format my code,
which is why I get the semi-colon here.

5
00:00:14.180 --> 00:00:18.980
I like this because looking at this,
the fact that there's a semi-colon, it's

6
00:00:18.980 --> 00:00:23.260
one more thing that helps me understand,
this is not a value, this is just a type.

7
00:00:25.509 --> 00:00:28.710
&gt;&gt; Mike North: By default,
all properties are mandatory.

8
00:00:28.710 --> 00:00:34.344
So we get an error here saying,
streetName is missing in type houseNumber.

9
00:00:34.344 --> 00:00:36.810
Well, I've got an example
of the error done here,

10
00:00:36.810 --> 00:00:41.860
streetName is missing in this but
it's required in type that.

11
00:00:41.860 --> 00:00:46.920
And I want you to imagine this as
TypeScript at that equal sign,

12
00:00:46.920 --> 00:00:50.300
trying to figure out a way to
make the left hand side and

13
00:00:50.300 --> 00:00:56.620
the right hand side agree in terms of,
are these types compatible?

14
00:00:56.620 --> 00:01:00.680
On the right hand side, we just have
houseNumber, on the left, streetName, so

15
00:01:00.680 --> 00:01:03.520
that's why you're seeing the error
message represented in this way.

16
00:01:04.740 --> 00:01:08.690
If you really wanted to make something
optional, and this is not a bad thing,

17
00:01:08.690 --> 00:01:13.310
I typically use this if I have
a function that takes a big options bag,

18
00:01:13.310 --> 00:01:15.030
big options object.

19
00:01:15.030 --> 00:01:16.304
Just use the question mark.

20
00:01:16.304 --> 00:01:19.810
Question mark like it may be there,
it may not be there.

21
00:01:19.810 --> 00:01:22.690
And you see here we don't
run into that problem.

22
00:01:22.690 --> 00:01:23.940
We could totally add it.

23
00:01:25.905 --> 00:01:27.040
&gt;&gt; Mike North: I need a comma.

24
00:01:28.070 --> 00:01:29.480
streetName, there it is.

25
00:01:30.627 --> 00:01:32.543
&gt;&gt; Mike North: So
it's just streetName is empty string,

26
00:01:32.543 --> 00:01:34.470
it's a pretty exclusive address.

27
00:01:34.470 --> 00:01:38.590
But if I wanted to have another thing
there that's not present on the type,

28
00:01:38.590 --> 00:01:40.030
I'd be busted for it.

29
00:01:40.030 --> 00:01:42.780
There is no x,
why would you put it there, right?

30
00:01:47.140 --> 00:01:50.560
&gt;&gt; Mike North: We'll go into
interfaces in pretty deep detail.

31
00:01:51.870 --> 00:01:55.350
For now, I just want you to think
of an interface as a name for

32
00:01:55.350 --> 00:02:00.170
one of these structures
that we're creating, right?

33
00:02:00.170 --> 00:02:02.900
For now, you can think of it as
only working with object types.

34
00:02:02.900 --> 00:02:06.740
There are other things we can do to
make it work with things like functions.

35
00:02:06.740 --> 00:02:11.790
But all we are doing here is we
are creating a name, address,

36
00:02:11.790 --> 00:02:15.460
that we can use anywhere that
we were using a type before.

37
00:02:15.460 --> 00:02:19.020
And you can import and export interfaces
from modules just like values.

