WEBVTT

1
00:00:00.230 --> 00:00:03.578
Your mission, should you choose
to accept it, is to go ahead and

2
00:00:03.578 --> 00:00:06.382
refactor the UsersPage that
we've been working on.

3
00:00:06.382 --> 00:00:10.552
And this, I'm gonna use script setup
to kind of trim down some of that code.

4
00:00:10.552 --> 00:00:12.889
And then if you have any props or
emits you want to practice with,

5
00:00:12.889 --> 00:00:13.677
go ahead and do that.

6
00:00:13.677 --> 00:00:17.837
And otherwise, keep on moving stuff in,
playing around, seeing how you feel.

7
00:00:21.598 --> 00:00:24.780
Welcome back, everyone,
how was the exercise?

8
00:00:24.780 --> 00:00:27.306
If anyone had any questions
about how that went,

9
00:00:27.306 --> 00:00:29.841
please feel free to drop
that inside of the chat.

10
00:00:29.841 --> 00:00:32.018
In the meantime, I'll go ahead and
run through that solution.

11
00:00:33.470 --> 00:00:37.367
All right, so
switching back to cest-la-vue,

12
00:00:43.906 --> 00:00:49.220
Then run dev, great, great.

13
00:00:49.220 --> 00:00:52.314
All right, so we don't need to
see what's happening right now.

14
00:00:52.314 --> 00:00:54.570
So we're just gonna actually
just full-screen this so

15
00:00:54.570 --> 00:00:57.390
that people can go all in
as far as what's going on.

16
00:00:57.390 --> 00:01:01.849
So what are we doing here, we are gonna
go open up our user's page, and

17
00:01:01.849 --> 00:01:03.374
let's see what we got.

18
00:01:03.374 --> 00:01:05.318
Well, everything's already been migrated,

19
00:01:05.318 --> 00:01:07.855
in that everything is inside of
async setup, so this is good.

20
00:01:07.855 --> 00:01:12.882
So let's start by adding that setup
attribute, that's the first step to do.

21
00:01:12.882 --> 00:01:15.854
Once you do that, you'll realize,
okay, this is interesting,

22
00:01:15.854 --> 00:01:17.748
now we've gotta start deleting some stuff.

23
00:01:17.748 --> 00:01:21.976
So let's start deleting that export cuz
we don't need that anymore, boom, gone.

24
00:01:21.976 --> 00:01:25.259
Well, we mentioned before that all
components are automatically registered

25
00:01:25.259 --> 00:01:26.360
once they're imported.

26
00:01:26.360 --> 00:01:29.380
So that's gone too, so we can delete that.

27
00:01:29.380 --> 00:01:33.573
And then finally, we already said
that the script should be setup, so

28
00:01:33.573 --> 00:01:35.503
we can delete this block, too.

29
00:01:35.503 --> 00:01:38.632
And once we do that, you'll notice that
the reactive, which was graying out

30
00:01:38.632 --> 00:01:41.762
earlier cuz it said it wasn't being used,
basically, it detected the scope

31
00:01:41.762 --> 00:01:44.767
of the object and was like, I don't
see it within the scope of the module.

32
00:01:44.767 --> 00:01:49.504
But you're fine now because we've deleted
all those exports, and we save that.

33
00:01:49.504 --> 00:01:53.927
We got one more bit actually,
we can delete the return.

34
00:01:53.927 --> 00:01:56.129
And so now we can verify
that everything is working.

35
00:01:56.129 --> 00:02:02.110
And just to make sure, we can just do a
123, there you go, did update, fantastic.

36
00:02:02.110 --> 00:02:03.792
Now, the only other thing, too,

37
00:02:03.792 --> 00:02:07.575
is that we just wanna practice really
quick using the define props and emits.

38
00:02:07.575 --> 00:02:13.423
The way that would work is let's go ahead
and then say, conts props = defineProps.

39
00:02:13.423 --> 00:02:19.440
And we could say something like title,
for example,

40
00:02:19.440 --> 00:02:25.870
and type: String, and
then we can do a default of users.

41
00:02:25.870 --> 00:02:29.723
And so to show that this works,
we'll come inside of here.

42
00:02:29.723 --> 00:02:33.260
And let's start by saying this is a Test,
so we test, great.

43
00:02:33.260 --> 00:02:40.330
And we can swap this out now for
title, refresh, there we go.

44
00:02:40.330 --> 00:02:44.530
Now, something was brought up,
though, regarding, wait a second,

45
00:02:44.530 --> 00:02:48.210
how did you call defineProps
without importing it?

46
00:02:48.210 --> 00:02:50.380
And more importantly, well,
let me fix this part first,

47
00:02:50.380 --> 00:02:53.175
you'll notice that because we're not
actually calling props anywhere,

48
00:02:53.175 --> 00:02:54.612
there's no actually need to do that.

49
00:02:54.612 --> 00:02:56.520
So you can actually just leave
it off like this right now.

50
00:02:59.836 --> 00:03:02.678
But the question here around defineProps,

51
00:03:02.678 --> 00:03:07.226
why is it not yelling at us that we
don't know what this is looking for?

52
00:03:07.226 --> 00:03:11.018
So the reason this is the case is because
when you're inside a script setup,

53
00:03:11.018 --> 00:03:15.240
basically the compiler knows that these
specific functions are gonna exist.

54
00:03:15.240 --> 00:03:17.379
So in other words,
defineProps and defineEmits,

55
00:03:17.379 --> 00:03:21.310
which I actually didn't clarify earlier,
is only specific to script setup.

56
00:03:21.310 --> 00:03:24.365
If you try using defineEmits,
defineProps inside of an options API,

57
00:03:24.365 --> 00:03:26.403
that'll just break, because why would you?

58
00:03:26.403 --> 00:03:28.750
If you're in options API
leveraging the setup,

59
00:03:28.750 --> 00:03:31.280
then you should already be
using the other options.

60
00:03:31.280 --> 00:03:35.351
And so in other words, the compiler knows
that it's technically already a global, so

61
00:03:35.351 --> 00:03:37.900
treat it like a global import for this.

62
00:03:37.900 --> 00:03:40.671
That said, though,
I personally am typically a fan,

63
00:03:40.671 --> 00:03:45.260
especially if this is a newer codebase,
to just leave the import explicit.

64
00:03:45.260 --> 00:03:46.889
That way, no one new is like,
wait, what's going on?

65
00:03:46.889 --> 00:03:49.569
There's no assumed knowledge here,
we're good.

66
00:03:49.569 --> 00:03:52.020
&gt;&gt; So why is reactive not like that?

67
00:03:52.020 --> 00:03:53.840
&gt;&gt; Why is reactive not like that?

68
00:03:53.840 --> 00:03:59.219
So if we delete that and save,
the reason for that is because reactive

69
00:03:59.219 --> 00:04:04.210
cannot be assumed in this context
that it will be imported.

70
00:04:04.210 --> 00:04:08.431
So in other words, to think of it another
way, is that when this code is built and

71
00:04:08.431 --> 00:04:12.353
compiled, defineProps basically just
reverts back to its normal self.

72
00:04:12.353 --> 00:04:14.991
If it's not detected,
it'll get taken out, basically,

73
00:04:14.991 --> 00:04:17.274
so there's some kind of
optimization happening.

74
00:04:17.274 --> 00:04:19.169
I can't explain the details of it, but

75
00:04:19.169 --> 00:04:23.133
there's a reason why defineProps is okay
but then other helper methods like ref,

76
00:04:23.133 --> 00:04:26.020
reactive, Vue cannot
intelligently guess those things.

77
00:04:26.020 --> 00:04:26.741
So as a result,

78
00:04:26.741 --> 00:04:30.243
it forces you to be very explicit that
you want to use these helper methods.

79
00:04:32.552 --> 00:04:36.563
So yeah, they're called, I think,
compiler-specific helper functions, but

80
00:04:36.563 --> 00:04:37.088
anyways.

81
00:04:37.088 --> 00:04:39.703
And then the other thing we
wanna practice is defineEmits.

82
00:04:39.703 --> 00:04:45.116
And that, once again, we can say
something like update-user-list.

83
00:04:45.116 --> 00:04:46.817
And so
you can imagine how would that work.

84
00:04:46.817 --> 00:04:49.169
If a user clicked a button,
that update-user-list,

85
00:04:49.169 --> 00:04:52.229
it would send it to the parent,
maybe you have to send some new data down.

86
00:04:52.229 --> 00:04:55.040
That's how that basically
might be working.

87
00:04:55.040 --> 00:04:56.571
Okay, nope, I think we're good.

88
00:04:56.571 --> 00:04:59.888
That's the thing in the event anyone
here is coming from Vue 2 and

89
00:04:59.888 --> 00:05:02.436
if you're using Vetur as
your VS Code extension.

90
00:05:02.436 --> 00:05:04.851
Just a reminder to go ahead and
basically disable,

91
00:05:04.851 --> 00:05:08.951
uninstall that when you're working on Vue
3 projects going forward because Volar and

92
00:05:08.951 --> 00:05:12.326
Vetur will basically collide, so
just wanted to make that note.

93
00:05:12.326 --> 00:05:14.850
Here we go, by the way, you see this?

94
00:05:14.850 --> 00:05:18.925
So this is just a small, lets you know,
defineProps is a compiler macro,

95
00:05:18.925 --> 00:05:21.140
no longer needs to be imported.

96
00:05:21.140 --> 00:05:23.776
Again, it's not really gonna
matter at the end of the day,

97
00:05:23.776 --> 00:05:27.500
cuz you see that it's not actually yelling
at you inside of your code editor.

98
00:05:27.500 --> 00:05:29.500
But it is trying to let you know that
it is technically a global import.

