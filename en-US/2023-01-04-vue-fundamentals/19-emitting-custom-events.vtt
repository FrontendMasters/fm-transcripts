WEBVTT

1
00:00:00.000 --> 00:00:04.330
We've danced around this topic a lot at
this point and I'd love to address this.

2
00:00:04.330 --> 00:00:07.080
So as a recap on the context of
what we're talking about is,

3
00:00:07.080 --> 00:00:09.775
at this point we're talking
about children components,

4
00:00:09.775 --> 00:00:12.806
trying to figure out how the heck
to update the parent component.

5
00:00:12.806 --> 00:00:16.369
Because we've talked about the fact
that well, we don't wanna mutate props,

6
00:00:16.369 --> 00:00:19.950
as we can see very clearly here,
we're being yelled at, don't mutate props.

7
00:00:21.310 --> 00:00:26.899
On the other hand, we talked about passing
functions down as in like, if there was

8
00:00:26.899 --> 00:00:32.732
a method on this component that was called
change name, and call it this data.user.

9
00:00:32.732 --> 00:00:36.260
Data.name equals or
say this is like an argument for

10
00:00:36.260 --> 00:00:39.078
new name and then just like that, right.

11
00:00:39.078 --> 00:00:42.584
And so then you'll be like,
okay, well inside of user,

12
00:00:42.584 --> 00:00:45.592
I'm gonna pass this
method called changeName.

13
00:00:45.592 --> 00:00:49.693
And then it'll take on
the reference to that method and

14
00:00:49.693 --> 00:00:53.625
then we have this changeName,
which is a function.

15
00:00:53.625 --> 00:00:56.649
And then it's let's say required true and

16
00:00:56.649 --> 00:01:01.700
then let's say we have a button here
that's like hey like changeName.

17
00:01:02.840 --> 00:01:05.409
That's like most people's
instinctual way and

18
00:01:05.409 --> 00:01:07.922
how a lot of frameworks
approach this problem.

19
00:01:07.922 --> 00:01:11.880
Because the parent is telling it what to
change and the child obediently does it.

20
00:01:13.360 --> 00:01:18.015
The thing about this mental model though
is that it forgoes the fact that actually

21
00:01:18.015 --> 00:01:22.327
if we think about how the web is designed,
when we have child DOM elements,

22
00:01:22.327 --> 00:01:23.436
what do we have do?

23
00:01:23.436 --> 00:01:25.164
We have it bubble up events,

24
00:01:25.164 --> 00:01:29.269
that's actually how the web is built
natively if we think about it.

25
00:01:29.269 --> 00:01:32.469
It's not actually the parent is
telling it what to do it's saying,

26
00:01:32.469 --> 00:01:35.839
when that a button that a child has
happened, it bubbles up that event,

27
00:01:35.839 --> 00:01:38.045
that's where we get these concepts, right.

28
00:01:38.045 --> 00:01:40.031
That a click has happened therefore,

29
00:01:40.031 --> 00:01:43.280
how does this relate to
the chain of communication?

30
00:01:43.280 --> 00:01:47.139
And so what we're gonna talk about right
now basically at this point is how we can

31
00:01:47.139 --> 00:01:49.386
basically emit custom
events from our child,

32
00:01:49.386 --> 00:01:51.763
to tell the parent that
something is happening.

33
00:01:51.763 --> 00:01:55.610
So let's actually go ahead and
just take this user card example, why not,

34
00:01:55.610 --> 00:01:56.599
why wouldn't we?

35
00:01:56.599 --> 00:02:00.370
So let's go ahead and
just set this context up a bit so

36
00:02:00.370 --> 00:02:02.187
let me just remove this.

37
00:02:02.187 --> 00:02:09.430
And how we would do this, actually I
think I might be able to leave that.

38
00:02:09.430 --> 00:02:14.809
For now let's do this, change name, okay.

39
00:02:14.809 --> 00:02:20.419
So let's make sure everything's at least
rendering correctly on our side for

40
00:02:20.419 --> 00:02:21.612
the app, okay.

41
00:02:21.612 --> 00:02:23.901
So let's start with something simple,

42
00:02:23.901 --> 00:02:26.659
which is that if we click
a button from the child,

43
00:02:26.659 --> 00:02:30.655
it will basically tell the parent
that hey, I want to change the name.

44
00:02:30.655 --> 00:02:32.445
And that when that happens,

45
00:02:32.445 --> 00:02:36.185
what we want it to do is this
is updated directly to Charlie.

46
00:02:36.185 --> 00:02:39.160
So we won't even worry
about arguments right now.

47
00:02:39.160 --> 00:02:44.175
And so again right here just to show
that this works if we add the click,

48
00:02:44.175 --> 00:02:46.812
and we add change name, change now.

49
00:02:46.812 --> 00:02:51.565
You'll see Ben does switch to
Charlie as expected, okay.

50
00:02:51.565 --> 00:02:56.743
As expected, but this method is
existing all the way up here.

51
00:02:56.743 --> 00:02:59.460
So how the heck does a user
card get access to that,

52
00:02:59.460 --> 00:03:03.050
without you passing the prop
down as a function?

53
00:03:03.050 --> 00:03:06.586
Well, the way we do that
is with this concept,

54
00:03:06.586 --> 00:03:11.045
it's new to Vue 3,
did not exist the Vue 2 call it emits.

55
00:03:11.045 --> 00:03:13.794
An emit is the equivalent of props,
props is saying hey,

56
00:03:13.794 --> 00:03:15.814
this is what I'm expecting to send down.

57
00:03:15.814 --> 00:03:18.791
Emits is our way of documenting,
hey, this is what I'm gonna send up.

58
00:03:20.649 --> 00:03:24.635
So if you think about it, this is actually
following the one way data chain of

59
00:03:24.635 --> 00:03:27.829
unidirectional data flow,
because, the data comes down.

60
00:03:27.829 --> 00:03:30.221
And then you're basically
sending a signal up to say,

61
00:03:30.221 --> 00:03:31.737
hey, I want something to change.

62
00:03:31.737 --> 00:03:36.690
And then the basically the parent knows
change it then send that change back down.

63
00:03:37.800 --> 00:03:40.628
So in that regard,
it follows that traditional web model.

64
00:03:40.628 --> 00:03:44.646
And so to show you what that means,
we'll say emits so again,

65
00:03:44.646 --> 00:03:47.290
emit the event change name, all right.

66
00:03:47.290 --> 00:03:50.493
And so the key thing with the emits is to
think of this as custom events, right?

67
00:03:50.493 --> 00:03:51.962
We're used to click, key up,

68
00:03:51.962 --> 00:03:54.911
those are things that are events
that already defined for us.

69
00:03:54.911 --> 00:03:57.400
This is a custom event
that we're emitting, okay?

70
00:03:58.450 --> 00:04:03.292
And so, what we get to do then,
is once we have our emits defined,

71
00:04:03.292 --> 00:04:08.684
we get to do is we get to call a global
method called emit dollar sign emit.

72
00:04:08.684 --> 00:04:11.460
And so if this is your first time using
Vue, despite you're probably wondering,

73
00:04:11.460 --> 00:04:12.518
what is this dollar sign here?

74
00:04:12.518 --> 00:04:17.402
It's basically views way of name scoping
is a global function that is available to

75
00:04:17.402 --> 00:04:19.020
view specifically.

76
00:04:19.020 --> 00:04:21.791
So now that you know this is not
just something in JavaScript,

77
00:04:21.791 --> 00:04:22.762
this is a view thing.

78
00:04:22.762 --> 00:04:27.303
We're gonna emit what,
we're gonna emit change name, okay.

79
00:04:27.303 --> 00:04:31.882
And this is now where the dev

80
00:04:31.882 --> 00:04:36.270
tools become very handy.

81
00:04:36.270 --> 00:04:39.818
Instead of the dev tools there is this
tab right here called a timeline.

82
00:04:39.818 --> 00:04:43.457
And what it allows you to do is actually
notice when different events are happening

83
00:04:43.457 --> 00:04:45.670
so you notice that if I just
click on the page here,

84
00:04:45.670 --> 00:04:48.854
it actually does gives me a timeline
of snapshot of what's happening.

85
00:04:48.854 --> 00:04:51.681
It even actually has the coordinates
on here I am noticing.

86
00:04:51.681 --> 00:04:55.353
And so you see, it actually tells you
the actual position of what's happening,

87
00:04:55.353 --> 00:04:59.045
and so when it comes to debugging,
this is pretty darn useful.

88
00:04:59.045 --> 00:05:02.852
And so you notice here though, if I click
changeName, something happens here.

89
00:05:02.852 --> 00:05:08.468
So let me scroll over,
I think it's losing the scroll,

90
00:05:08.468 --> 00:05:11.586
okay, it's right over here.

91
00:05:11.586 --> 00:05:14.248
I think I zoomed out too much.

92
00:05:15.624 --> 00:05:18.419
Refresh, there we go.

93
00:05:18.419 --> 00:05:25.402
Where is my sidebar
view reload component's

94
00:05:25.402 --> 00:05:30.687
timeline, I hit it, here we go.

95
00:05:30.687 --> 00:05:34.647
My gosh, and I was like, where did it go,
okay, click change name and

96
00:05:34.647 --> 00:05:36.545
we'll see a couple things here.

97
00:05:36.545 --> 00:05:41.376
One, you see right here,
change name event has been emitted, and so

98
00:05:41.376 --> 00:05:44.490
it's been emitted by user card.

99
00:05:44.490 --> 00:05:47.036
And so you also know that it
happened with a click as well,

100
00:05:47.036 --> 00:05:51.210
because you'll see that here, it has
the mouse up mouse down the click event.

101
00:05:51.210 --> 00:05:54.052
And then here is where we
get that change name event.

102
00:05:54.052 --> 00:05:57.093
And you notice here, it actually tells
you a little bit more about the event

103
00:05:57.093 --> 00:05:59.809
info that, is from the component
user card the event is changing.

104
00:05:59.809 --> 00:06:03.379
But also, we haven't gotten to this yet,
we can actually pass parameters up.

105
00:06:03.379 --> 00:06:06.679
Because sometimes you're gonna be
customizing stuff at the child level, but

106
00:06:06.679 --> 00:06:09.629
you need to say, here's some of
the customizations I'm sending up to

107
00:06:09.629 --> 00:06:11.481
the parent and
this is what I'm gonna send.

108
00:06:11.481 --> 00:06:14.072
And so when you do this, what happens is.

109
00:06:16.440 --> 00:06:20.233
On your component,
we get the ability to listen to.what?

110
00:06:20.233 --> 00:06:23.091
Listen to our custom event which is what,
change name.

111
00:06:23.091 --> 00:06:26.251
So this is no different than our at click,
at key up.

112
00:06:26.251 --> 00:06:30.155
So I'm actually go ahead and delete at,
because that's my prefered and

113
00:06:30.155 --> 00:06:33.099
then from here what are we
gonna do when this is called,

114
00:06:33.099 --> 00:06:35.339
we're gonna run the method change name.

115
00:06:38.154 --> 00:06:39.102
Okay, there we go.

116
00:06:39.102 --> 00:06:40.196
NPM run dev.

117
00:06:43.951 --> 00:06:46.328
There we go, yeah I figured.

118
00:06:47.789 --> 00:06:50.295
So, this takes some getting used
to because I know that again,

119
00:06:50.295 --> 00:06:52.769
this is not traditionally how
people are thinking of things.

120
00:06:52.769 --> 00:06:56.402
But It's funny when we think about
the primitives were given when building

121
00:06:56.402 --> 00:06:57.102
with the web.

122
00:06:57.102 --> 00:07:02.109
Event bubbling is a very standard
way of building with things and

123
00:07:02.109 --> 00:07:05.262
more importantly I think, it allows for

124
00:07:05.262 --> 00:07:09.171
I'll call it like a cleaner
way of removing that.

125
00:07:09.171 --> 00:07:12.118
He's sort of strict instructions that
you're passing down from the parent when

126
00:07:12.118 --> 00:07:13.172
you just pass the function.

127
00:07:13.172 --> 00:07:16.747
Because now all of a sudden that function,
I've just seen in code bases,

128
00:07:16.747 --> 00:07:19.745
when people do that it just gets
hairy in terms of like people,

129
00:07:19.745 --> 00:07:22.073
then they start passing
in the wrong function.

130
00:07:22.073 --> 00:07:25.541
Cz then you have to make sure the function
is doing what you want it to in the child,

131
00:07:25.541 --> 00:07:27.887
which means you actually now
have to check the parent,

132
00:07:27.887 --> 00:07:29.631
to make sure that it kind of makes sense.

133
00:07:29.631 --> 00:07:33.970
Whereas like when you just emit an event
this child component will use in a lot of

134
00:07:33.970 --> 00:07:35.235
different contexts.

135
00:07:35.235 --> 00:07:37.110
And then the parent can do
whatever it wants with it and

136
00:07:37.110 --> 00:07:40.234
it makes sense because you're saying, when
the child component has this custom event,

137
00:07:40.234 --> 00:07:42.940
I'm gonna run this function
which lives in this file.

138
00:07:42.940 --> 00:07:44.099
And so in that regard,

139
00:07:44.099 --> 00:07:48.321
it really does help to really encapsulate
that single file component mentality.

140
00:07:48.321 --> 00:07:51.755
We're also building on web standards and
principles,

141
00:07:51.755 --> 00:07:56.149
that we're actually using on a day
to day but often overlooked, yeah.

142
00:07:56.149 --> 00:08:01.146
&gt;&gt; If you were to bubble up multiple
levels, would you have to catch it, emit,

143
00:08:01.146 --> 00:08:01.858
remit it?

144
00:08:01.858 --> 00:08:02.401
&gt;&gt; Yep.

145
00:08:02.401 --> 00:08:04.576
&gt;&gt; You can't just say, emits, emits,
emits, emits the whole way up.

146
00:08:04.576 --> 00:08:09.545
&gt;&gt; You cannot, and so that's a great
question, so let me read it.

147
00:08:09.545 --> 00:08:12.666
So the question here is that right now we
just have a single parent single child,

148
00:08:12.666 --> 00:08:13.850
one omit whatever.

149
00:08:13.850 --> 00:08:18.303
What happens when you have like a great
great great grandchild wanting to

150
00:08:18.303 --> 00:08:19.696
communicate info up.

151
00:08:19.696 --> 00:08:22.566
And so, emits and
props really are designed for

152
00:08:22.566 --> 00:08:26.430
a closer relationship like
when you're closer together.

153
00:08:26.430 --> 00:08:28.419
This prompt actually
had that same problem.

154
00:08:28.419 --> 00:08:32.263
And so the pattern that actually the anti
pattern that resulted from that is called

155
00:08:32.263 --> 00:08:35.938
prop drilling, and so you have app to view
has this global thing and then you joe

156
00:08:35.938 --> 00:08:39.798
joe joe joe, pro pro pro and like none of
the components use it until like this one.

157
00:08:39.798 --> 00:08:42.881
But then the problem with prop drilling
is that the moment you remove one in

158
00:08:42.881 --> 00:08:45.430
the middle, the whole thing
just falls apart immediately.

159
00:08:45.430 --> 00:08:48.538
The answer to this is
basically using composable and

160
00:08:48.538 --> 00:08:50.592
state management in a way that is.

161
00:08:50.592 --> 00:08:53.872
At that point I would argue,
If you have data that is shared across

162
00:08:53.872 --> 00:08:56.616
components at that depth,
it probably makes sense for

163
00:08:56.616 --> 00:09:00.393
it to be encapsulated in a module that
can just be shared across both files.

164
00:09:00.393 --> 00:09:04.752
The props is really in my mind design when
there's a tight coupling between the two

165
00:09:04.752 --> 00:09:07.609
components, and
you want it to behave a certain way.

166
00:09:07.609 --> 00:09:12.543
Otherwise, what we'll see here later on is
around, other flexible APIs that allow it

167
00:09:12.543 --> 00:09:17.219
to do more than just sort of these sort
of rigid instructions between components.

168
00:09:17.219 --> 00:09:19.052
Does that help to answer your question?

169
00:09:19.052 --> 00:09:23.675
&gt;&gt; Is there an emit equivalent in Vue 2?

170
00:09:23.675 --> 00:09:26.917
&gt;&gt; Okay, so good question,
in regards to Vue 2,

171
00:09:26.917 --> 00:09:30.410
the $ sign emit actually
does exist as a function.

172
00:09:30.410 --> 00:09:33.730
So, it's not that your custom
events are not new to Vue 3.

173
00:09:33.730 --> 00:09:38.492
What is new to Vue 3 is the fact that you
can basically document them inside of your

174
00:09:38.492 --> 00:09:39.132
options.

175
00:09:39.132 --> 00:09:40.409
Because the problem,

176
00:09:40.409 --> 00:09:44.383
then this was a misstep on I guess on
our part we didn't think about it.

177
00:09:44.383 --> 00:09:48.298
Is that when you don't have this emits
property, it seems like a small thing, but

178
00:09:48.298 --> 00:09:52.330
if you start emitting multiple events, it
starts getting really hurried to track in

179
00:09:52.330 --> 00:09:55.253
a big component of like, wait,
what events are happening?

180
00:09:55.253 --> 00:09:57.977
Where is it, I mean,
that's why we have prop definitions too,

181
00:09:57.977 --> 00:10:00.606
actually it's to let, hey,
what am I expecting to receive?

182
00:10:00.606 --> 00:10:04.265
The emit does the opposite for us where
what kind of events are you expecting to

183
00:10:04.265 --> 00:10:07.092
emit so that people don't just
randomly create their own.

184
00:10:07.092 --> 00:10:10.236
And so to be clear, and
just to kind of wrap that up.

185
00:10:10.236 --> 00:10:14.332
If you don't like emitting directly here,

186
00:10:14.332 --> 00:10:20.319
we can actually just do something
like tellParentChangeName.

187
00:10:20.319 --> 00:10:23.944
And this can just be a method,
tellParentChangeName, and

188
00:10:23.944 --> 00:10:28.237
we can do this dot dollar sign emit,
this will be the same exact thing.

189
00:10:28.237 --> 00:10:32.269
It's up to you whether you wanna call it
here or you just wanna call it inline.

190
00:10:32.269 --> 00:10:34.932
Once again,
I think that's more of a stylistic thing.

191
00:10:34.932 --> 00:10:38.536
Cuz some people would be like, well,
if it's just this one event and I'm not

192
00:10:38.536 --> 00:10:42.707
tracking that much, I'm just gonna inline
it.B ecause it's not really being reused.

193
00:10:42.707 --> 00:10:45.962
On the other hand, if you have this being
called a bunch of places, you might not

194
00:10:45.962 --> 00:10:49.180
really wanna define that everywhere,
you might wanna change it in one place.

