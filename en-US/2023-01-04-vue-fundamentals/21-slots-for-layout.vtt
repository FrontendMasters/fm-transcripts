WEBVTT

1
00:00:00.030 --> 00:00:02.799
We've talked a lot about props.

2
00:00:02.799 --> 00:00:05.330
We talked about emits.

3
00:00:05.330 --> 00:00:09.081
And so something you might be
thinking though is that, well, okay,

4
00:00:09.081 --> 00:00:10.578
this makes sense, right?

5
00:00:10.578 --> 00:00:13.806
I can pass data down to my components, but

6
00:00:13.806 --> 00:00:17.596
at some point this might
get kind of cumbersome.

7
00:00:17.596 --> 00:00:22.475
And so I wanna kinda give you a micro
version of the button exercise that I give

8
00:00:22.475 --> 00:00:27.599
in the Production Grade Vue workshop, so
if you want to check that out for this.

9
00:00:27.599 --> 00:00:29.610
But let's, for a second,

10
00:00:29.610 --> 00:00:35.388
think of a component that's going to pick
this out real quick as a base button.

11
00:00:35.388 --> 00:00:39.561
And so for this base button,
you probably are thinking, well,

12
00:00:39.561 --> 00:00:41.353
it's a button component.

13
00:00:41.353 --> 00:00:44.394
And what kind of props
that I wanna pass to it?

14
00:00:44.394 --> 00:00:48.390
Well, if we think about it,
we can say, well, usually,

15
00:00:48.390 --> 00:00:51.336
you need to have some
texts on your button.

16
00:00:51.336 --> 00:00:55.153
So okay, let's call that a text prop, and

17
00:00:55.153 --> 00:00:59.304
then I'll do the shorthand
typing right now.

18
00:00:59.304 --> 00:01:02.404
So this is an alternative, by the way,
for prop where if you don't wanna do

19
00:01:02.404 --> 00:01:05.374
the required and default, you just
pass the title directly like this.

20
00:01:05.374 --> 00:01:08.546
But again, generally speaking,
I think it's a best practice to define

21
00:01:08.546 --> 00:01:11.562
whether it's required or
if it's not required and has the default,

22
00:01:11.562 --> 00:01:14.906
basically do your due diligence on that,
it helps your team in the long run.

23
00:01:14.906 --> 00:01:18.237
Okay, well, there might be some text here.

24
00:01:18.237 --> 00:01:22.635
And then what happens if your product
manager is like, you know what,

25
00:01:22.635 --> 00:01:27.703
I think I want to use the icons on
the left hand side, then you're like okay,

26
00:01:27.703 --> 00:01:33.171
maybe like icon left string or maybe just
icon, right, cuz you're okay, as an icon.

27
00:01:33.171 --> 00:01:36.782
As an icon, it's going to the left.

28
00:01:36.782 --> 00:01:38.581
And then they go, well,

29
00:01:38.581 --> 00:01:43.140
actually depends cuz the icon
might be on the left or the right.

30
00:01:43.140 --> 00:01:46.320
And then you might start getting the hint
of where I'm going with this when you're

31
00:01:46.320 --> 00:01:47.701
like, okay, well I can write, and

32
00:01:47.701 --> 00:01:50.215
for now I'm just keeping it simple
just keeping these strings.

33
00:01:50.215 --> 00:01:52.263
So it's like okay string.

34
00:01:54.885 --> 00:01:57.957
And then all of a sudden it's like,
well, I also need this to

35
00:01:57.957 --> 00:02:01.470
replace a loading spinner,
in case it's like fetching an API call.

36
00:02:01.470 --> 00:02:05.878
And all of a sudden, what you got here
is this massive list of props for

37
00:02:05.878 --> 00:02:08.994
what is really just a button component,
right?

38
00:02:08.994 --> 00:02:13.690
Especially for something like this text
here, can you imagine how complicated

39
00:02:13.690 --> 00:02:17.896
the V-if else-if is gonna be when
it's like if floating shows this but

40
00:02:17.896 --> 00:02:21.047
else this but
then also there's an icon then do this,

41
00:02:21.047 --> 00:02:24.933
like this button will become very,
very troublesome to manage.

42
00:02:24.933 --> 00:02:29.454
And so of course,
Vue has an answer for this.

43
00:02:29.454 --> 00:02:33.994
And the answer for
this is around the idea of slots.

44
00:02:33.994 --> 00:02:36.541
And so slots are an interesting concept

45
00:02:36.541 --> 00:02:40.952
in that we have been using them this
whole time when it comes to HTML.

46
00:02:40.952 --> 00:02:42.414
So how does a slot work?

47
00:02:42.414 --> 00:02:44.302
Well, let's go and just show you how.

48
00:02:44.302 --> 00:02:45.576
Let's just refactor this real quick.

49
00:02:45.576 --> 00:02:50.841
So icon, let's do this.

50
00:02:50.841 --> 00:02:52.504
Icon text.

51
00:02:52.504 --> 00:02:57.936
So I just wanna have something
that will render on the page, And

52
00:02:57.936 --> 00:03:02.152
then, we'll say, okay, so let's go.

53
00:03:02.152 --> 00:03:06.055
Actually, since this is a playground, let
me move the base button to playground so

54
00:03:06.055 --> 00:03:07.471
that this can be consistent.

55
00:03:07.471 --> 00:03:11.710
Base button is going to source,
going to components.

56
00:03:11.710 --> 00:03:13.388
There we go, perfect.

57
00:03:13.388 --> 00:03:18.278
And then to keep that consistent,
we'll just do base button and kebab case.

58
00:03:18.278 --> 00:03:19.891
We'll hide that.

59
00:03:19.891 --> 00:03:24.347
And then now, let's make sure I'm
running the playground app, so

60
00:03:24.347 --> 00:03:26.235
we don't run the wrong one.

61
00:03:26.235 --> 00:03:30.393
Cuz nothing's more infuriating than
thinking being in the wrong environment

62
00:03:30.393 --> 00:03:32.539
and thinking your code is not changing.

63
00:03:32.539 --> 00:03:36.303
Okay, so we have a base button here,
App.vue.

64
00:03:36.303 --> 00:03:41.575
So import BaseButton.

65
00:03:41.575 --> 00:03:44.475
BaseButton from here.

66
00:03:44.475 --> 00:03:47.238
Base and button.

67
00:03:47.238 --> 00:03:53.424
And then this is specifically BaseCounter,
Okay, how does BaseButton work?

68
00:03:53.424 --> 00:03:57.748
At the moment it is BaseButton, and

69
00:03:57.748 --> 00:04:04.537
we can give it a text of Hi,
and the icon of Arrow, okay.

70
00:04:04.537 --> 00:04:08.590
So what happened up,
I think I did not close it.

71
00:04:08.590 --> 00:04:09.587
There we go.

72
00:04:09.587 --> 00:04:10.936
Okay, we see it here, right?

73
00:04:10.936 --> 00:04:15.844
It says Arrow and Hi, great.

74
00:04:15.844 --> 00:04:20.489
What we wanna avoid when it comes to props
is being overly descriptive with how

75
00:04:20.489 --> 00:04:22.570
something is supposed to be used.

76
00:04:22.570 --> 00:04:25.961
It's useful for guidance,
it's useful as a guardrail.

77
00:04:25.961 --> 00:04:29.231
But when it comes to something like
what text belongs in a button,

78
00:04:29.231 --> 00:04:32.569
it doesn't often make sense to do
something like that with a prop.

79
00:04:32.569 --> 00:04:34.821
So instead, what do we do?

80
00:04:34.821 --> 00:04:39.027
Well, there is a built-in
element called slot.

81
00:04:41.614 --> 00:04:44.977
And so it's globally available to
your app at all times because this is

82
00:04:44.977 --> 00:04:45.837
a Vue component.

83
00:04:45.837 --> 00:04:49.584
And slot, if we think about it,
it actually functions just as you would

84
00:04:49.584 --> 00:04:52.713
expect when it comes to HTML,
you just didn't realize it.

85
00:04:52.713 --> 00:04:56.878
So rather than being like,
I wanted to say Arrow and

86
00:04:56.878 --> 00:04:59.638
then dash Hi, this is a BaseButton.

87
00:04:59.638 --> 00:05:06.343
And we call it like a normal component,
and we say, Arrow Left and Hi.

88
00:05:09.588 --> 00:05:12.706
And if you're looking at this going like,
isn't that HTML?

89
00:05:12.706 --> 00:05:15.560
I'd say exactly, it's just like HTML.

90
00:05:15.560 --> 00:05:18.623
[LAUGH] Why complicate things beyond that,
right?

91
00:05:18.623 --> 00:05:22.302
There are times where you just wanna let
people just define whatever they want

92
00:05:22.302 --> 00:05:23.611
inside of your component.

93
00:05:23.611 --> 00:05:28.075
Now granted, eventually you could do some
fancy things regarding maybe some props,

94
00:05:28.075 --> 00:05:31.928
maybe there is an a point where you
have some base icon here, for example.

95
00:05:31.928 --> 00:05:36.352
But slots are one of the most powerful
features of Vue in the sense that it

96
00:05:36.352 --> 00:05:37.976
allows for flexibility,

97
00:05:37.976 --> 00:05:42.054
it's almost like in that regard
the complete opposite of props.

98
00:05:42.054 --> 00:05:44.319
Where props you're being
very prescriptive,

99
00:05:44.319 --> 00:05:47.216
do this with this type this is
required to do it in this place.

100
00:05:47.216 --> 00:05:54.261
Slots is saying, all right, I'm open,
like you basically work with me here.

101
00:05:54.261 --> 00:05:59.264
And so the cool thing about slots too,
is that slots are more intelligent

102
00:05:59.264 --> 00:06:05.021
than a standard HTML element in that you
can actually provide it a default content.

103
00:06:05.021 --> 00:06:10.396
So we can do is we can say, yes, so
we'll just call it submit by default.

104
00:06:10.396 --> 00:06:15.417
And so, when you do that, this means that
when I go ahead and delete what's inside,

105
00:06:15.417 --> 00:06:19.114
you'll notice it automatically
falls back to that content.

106
00:06:19.114 --> 00:06:22.361
Which again, can be very nice for
just sort of providing some conventions,

107
00:06:22.361 --> 00:06:25.623
especially when people start having
design systems and that sort of thing.

108
00:06:25.623 --> 00:06:29.311
So okay, most of our buttons are submit,
we can go ahead and say, okay,

109
00:06:29.311 --> 00:06:33.545
all BaseButton have a default of submit,
but otherwise the moment someone needs to

110
00:06:33.545 --> 00:06:37.435
override it, easy-peasy, this is no
longer submit, this is now cancel.

111
00:06:37.435 --> 00:06:41.810
As you can see, updates,
just as what you would expect.

112
00:06:41.810 --> 00:06:44.854
&gt;&gt; And you can bind that,
obviously, to your data or-

113
00:06:44.854 --> 00:06:46.114
&gt;&gt; Yep, exactly.

114
00:06:46.114 --> 00:06:48.932
So the question here is around,
can we do more than this?

115
00:06:48.932 --> 00:06:54.717
Yeah, because we should treat this
just like any other HTML element.

116
00:06:54.717 --> 00:07:00.391
So in here, we can do something like,
userData.name.

117
00:07:02.440 --> 00:07:04.597
And there you go.

118
00:07:04.597 --> 00:07:05.567
It just works.

119
00:07:05.567 --> 00:07:09.166
That is one of the things that always
excites me when I look at how Vue API is

120
00:07:09.166 --> 00:07:12.529
designed is extensibility on what
people already understand, and

121
00:07:12.529 --> 00:07:15.019
then just leveraging the heck out of it,
why not?

122
00:07:15.019 --> 00:07:17.252
Why not sprinkle on some syntactic sugar,

123
00:07:17.252 --> 00:07:19.988
some superpowers that make it even easier,
right?

124
00:07:19.988 --> 00:07:24.835
Because, again, slots inherently already
work from a HTML perspective but now you

125
00:07:24.835 --> 00:07:29.357
can provide default content, we can
actually do if conditions for slots too.

126
00:07:29.357 --> 00:07:32.668
So if you had something
like called direction, and

127
00:07:32.668 --> 00:07:36.214
let's say direction's here,
and we say v-if left.

128
00:07:36.214 --> 00:07:40.718
We could use slot for v-else.

129
00:07:40.718 --> 00:07:44.041
And then, so let's say the default
is actually this Submit.

130
00:07:44.041 --> 00:07:47.671
But otherwise,
if it has a configured prop of left,

131
00:07:47.671 --> 00:07:51.066
it might be like Icon Left,
whatever, Cancel.

132
00:07:51.066 --> 00:07:54.795
And so what you got here is
I'm really overriding it.

133
00:07:54.795 --> 00:07:59.787
But if we come in this year, save you see
that submit is falling back as we will

134
00:07:59.787 --> 00:08:05.091
expect, but if we have, opps, I think
my v-if direction doesn't make sense,

135
00:08:05.091 --> 00:08:07.986
actually I can just do left, that's fine.

136
00:08:07.986 --> 00:08:13.935
So I do left, is a Boolean and
the default is false.

137
00:08:13.935 --> 00:08:16.978
So like that, you see Submit does come up.

138
00:08:16.978 --> 00:08:22.150
And then we can say left is true.

139
00:08:22.150 --> 00:08:23.654
Icon left cancel.

140
00:08:23.654 --> 00:08:26.549
So that's pretty cool.

141
00:08:26.549 --> 00:08:27.900
But what else can we do?

142
00:08:27.900 --> 00:08:32.731
There's even more because if we
think of slots like a mailbox slot,

143
00:08:32.731 --> 00:08:37.418
we might wanna have multiple slots
on a component, not just one.

144
00:08:37.418 --> 00:08:41.678
And so what if we were to
do something like layouts?

145
00:08:41.678 --> 00:08:49.145
Well, if you had a layout component,
Let's say I'm gonna do base-layout.vue.

146
00:08:51.376 --> 00:08:55.240
What you're probably gonna end up having
is you probably have some sort of div that

147
00:08:55.240 --> 00:08:58.600
is your class wrapper, right,
assuming you have a design system, but

148
00:08:58.600 --> 00:09:02.030
then you might wanna start figuring
out where things are being slotted.

149
00:09:02.030 --> 00:09:07.456
So for example, you might have an aside
here, that is class like sidebar.

150
00:09:07.456 --> 00:09:11.378
And then you probably have somewhere where
you wanna render out your main content.

151
00:09:11.378 --> 00:09:15.715
And then you probably
have your footer content.

152
00:09:15.715 --> 00:09:19.375
And so again, if you do this by
traditional props and that kind of stuff,

153
00:09:19.375 --> 00:09:22.915
it gets really painful because how
do you pass components into props,

154
00:09:22.915 --> 00:09:24.479
that's a whole messy matter.

155
00:09:24.479 --> 00:09:29.231
But what we can do is we
can give our slots names.

156
00:09:29.231 --> 00:09:31.524
So this can be the sidebar slot.

157
00:09:33.681 --> 00:09:36.867
This can be the main slot.

158
00:09:36.867 --> 00:09:39.496
And this can be the footer slot.

159
00:09:42.436 --> 00:09:45.068
And so the way this would work is,

160
00:09:45.068 --> 00:09:50.348
if we're inside of our App.vue,
we can go ahead and import base.

161
00:09:50.348 --> 00:09:54.731
Let's see, let me duplicate this one, and

162
00:09:54.731 --> 00:09:59.242
then bom bom, BaseLayout from BaseLayout.

163
00:09:59.242 --> 00:10:03.519
We organize that to be alphabetical,
great.

164
00:10:03.519 --> 00:10:08.526
Okay, then we get our BaseLayout.

165
00:10:08.526 --> 00:10:12.539
What we can do now is we can now
define specific snippets of HTML to go

166
00:10:12.539 --> 00:10:13.837
in specific places.

167
00:10:13.837 --> 00:10:15.405
How do we define HTML?

168
00:10:15.405 --> 00:10:17.107
We have our template element.

169
00:10:17.107 --> 00:10:20.123
And so I know it's like, whoa,
there's a template in a template.

170
00:10:20.123 --> 00:10:24.460
But again, if you look at MDN,
template is an actual HTML element.

171
00:10:24.460 --> 00:10:27.547
It's a content template element,
this is a thing.

172
00:10:27.547 --> 00:10:29.825
I think a lot of people at one point
will say, that looks like a Vue thing.

173
00:10:29.825 --> 00:10:32.250
No, this is in the MDN docs.

174
00:10:32.250 --> 00:10:34.435
This is fairly standard.

175
00:10:34.435 --> 00:10:37.800
And so what we can do is we can say,
look, this is the aside.

176
00:10:37.800 --> 00:10:40.146
And how do we tell the template
that we wanna go there?

177
00:10:40.146 --> 00:10:43.478
Well, we do the v-slot directive, and

178
00:10:43.478 --> 00:10:47.792
we tell it the,
I believe this is Aside, like this.

179
00:10:47.792 --> 00:10:53.732
And so if this renders correctly,
base layout.

180
00:10:53.732 --> 00:10:57.732
[SOUND] Wait, I did not,
I call this sidebar.

181
00:10:57.732 --> 00:11:02.892
So, of course, there's nowhere to go,
so I misnamed it sidebar Aside.

182
00:11:02.892 --> 00:11:04.176
There we go.

183
00:11:04.176 --> 00:11:06.696
And so let's give this a little
bit of styling just so

184
00:11:06.696 --> 00:11:08.255
that we can see the difference.

185
00:11:08.255 --> 00:11:15.124
So let's go ahead and
give a sidebar border 2px solid red.

186
00:11:15.124 --> 00:11:19.061
And then we'll go ahead and
do the same for each one, so

187
00:11:19.061 --> 00:11:22.582
we'll have main, and
then we'll have footer.

188
00:11:22.582 --> 00:11:25.183
And so we'll make this green,
we'll make this blue.

189
00:11:26.468 --> 00:11:30.391
And so you can see right now because
nothing's being passed to the slot for

190
00:11:30.391 --> 00:11:33.630
main or footer,
nothing's being rendered just the Aside.

191
00:11:33.630 --> 00:11:37.538
And so all we got to do
now is we can go ahead and

192
00:11:37.538 --> 00:11:41.354
add things like template, v-slot main.

193
00:11:41.354 --> 00:11:42.811
And then I can even do things like
actually render the user card.

194
00:11:42.811 --> 00:11:47.186
Actually, I could even just
take this component right here.

195
00:11:47.186 --> 00:11:52.195
Let's take the user card here,and
just drop it directly inside of main.

196
00:11:55.483 --> 00:11:58.188
And so you can see here that it's
actually being rendered inside.

197
00:11:58.188 --> 00:12:01.899
Although where did my borders go?

198
00:12:01.899 --> 00:12:03.509
Main class.

199
00:12:03.509 --> 00:12:04.941
I didn't give it a class.

200
00:12:04.941 --> 00:12:06.097
Class main.

201
00:12:06.097 --> 00:12:07.929
There we go.

202
00:12:07.929 --> 00:12:09.360
Did you have a question?

203
00:12:09.360 --> 00:12:13.783
&gt;&gt; I was wondering if the components
that are not the slots

204
00:12:13.783 --> 00:12:17.933
rendering the DOM when you
bring that template in.

205
00:12:17.933 --> 00:12:21.948
&gt;&gt; So you're saying that if I don't-
&gt;&gt; So

206
00:12:21.948 --> 00:12:27.131
currently you have nothing in
the footer slot or a footer element.

207
00:12:27.131 --> 00:12:33.442
&gt;&gt; Good question, and
the answer is, yes, it is there.

208
00:12:33.442 --> 00:12:35.832
Because as far as Vue is concerned,

209
00:12:35.832 --> 00:12:41.424
what you're saying is this is the scaffold
specter to render, there's nothing.

210
00:12:41.424 --> 00:12:44.814
Well, Yeah,

211
00:12:44.814 --> 00:12:48.604
I guess it would be a little bit tricky to
as far as like checking make sure the slot

212
00:12:48.604 --> 00:12:52.564
like whether the slot is empty or not, so
at that point, though, I would say that,

213
00:12:52.564 --> 00:12:56.415
if you started to get conditional about
what content is showing insight, at that

214
00:12:56.415 --> 00:13:00.415
point, it would make more sense to make a
slot name of a slot a footer, for example.

215
00:13:02.532 --> 00:13:07.041
And then maybe the default is to have
some content in here, but then otherwise,

216
00:13:07.041 --> 00:13:11.348
let someone completely overwrite it and
then that way, if there is no slot,

217
00:13:11.348 --> 00:13:13.055
nothing gets shows up at all.

218
00:13:13.055 --> 00:13:17.409
That's probably the way I would
approach it in that particular case.

219
00:13:17.409 --> 00:13:18.017
So here we go.

220
00:13:18.017 --> 00:13:20.257
We have that, what did I forget?

221
00:13:20.257 --> 00:13:21.306
There we go.

222
00:13:21.306 --> 00:13:22.002
Boom.

223
00:13:22.002 --> 00:13:26.548
So we can see now the footer
actually is rendering, and so

224
00:13:26.548 --> 00:13:31.661
all I got to do now is do the template
V slot footer inside of here,

225
00:13:31.661 --> 00:13:35.476
and then let's drop
the base counter in there.

226
00:13:35.476 --> 00:13:36.221
Boom.

227
00:13:37.930 --> 00:13:41.584
And so slots become really powerful
because if you've ever worked with like

228
00:13:41.584 --> 00:13:45.293
a backend CMS where users are defining
layouts, now you have the ability to,

229
00:13:45.293 --> 00:13:49.538
like when you're fetching data to actually
drop things where they're supposed to go.

230
00:13:49.538 --> 00:13:52.901
As opposed to having to configure,
this is my two column layout,

231
00:13:52.901 --> 00:13:55.928
this is my three column layout,
this is my two column with one.

232
00:13:55.928 --> 00:13:59.946
Like, there comes a point where that
becomes very tedious to maintain.

233
00:13:59.946 --> 00:14:03.326
And slots do a lot in terms of
opening up a lot of reusability and

234
00:14:03.326 --> 00:14:05.409
composability when it comes to that.

235
00:14:05.409 --> 00:14:09.702
What's cool about this too is that because
it's programmatic in terms of assigning

236
00:14:09.702 --> 00:14:13.828
its property, there's no, like it doesn't
have to appear in a certain order.

237
00:14:13.828 --> 00:14:18.078
So for example,
I'll just swap these to show that.

238
00:14:18.078 --> 00:14:22.809
You'll see that even though technically
inside of here, we've ordered it as

239
00:14:22.809 --> 00:14:27.123
like a side main, whatever is totally
being controlled at this level.

240
00:14:27.123 --> 00:14:32.080
And so as a result, you can again it says,
allows for more composability and

241
00:14:32.080 --> 00:14:34.413
flexibility when it comes to that.

242
00:14:34.413 --> 00:14:38.385
And the other thing I wanna leave you off
with before we dive into exercises and

243
00:14:38.385 --> 00:14:41.930
other questions is that if you're
looking at some other code bases,

244
00:14:41.930 --> 00:14:44.335
not everyone writes out
the V slot directive.

245
00:14:44.335 --> 00:14:47.363
And this is a convention within Vue 3, and

246
00:14:47.363 --> 00:14:51.162
that you can shorthand it
to just the hashtag symbol.

247
00:14:51.162 --> 00:14:54.445
The way to think about it is like
the idea of the slot that you

248
00:14:54.445 --> 00:14:56.396
want to put the template stuff in.

249
00:14:56.396 --> 00:15:00.073
To be honest, I find it a little bit
confusing because if someone doesn't

250
00:15:00.073 --> 00:15:02.206
know what this is and
tries to Google this,

251
00:15:02.206 --> 00:15:06.092
sometimes they might end up with CSS
stuff, something like this shorthand.

252
00:15:06.092 --> 00:15:08.610
I personally,
I don't tend to use it again,

253
00:15:08.610 --> 00:15:12.205
it is in code basis which is why
I'm telling you all this exists.

254
00:15:12.205 --> 00:15:14.872
So if that's your team's convention,
I would say roll with it.

255
00:15:14.872 --> 00:15:20.036
Personally, though, I don't mind actually
being explicit about slot sidebar, I

256
00:15:20.036 --> 00:15:25.289
think this to me is expressive and I get,
yeah, personally, that's what I prefer.

