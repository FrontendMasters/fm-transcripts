WEBVTT

1
00:00:00.170 --> 00:00:02.429
Now that we've done that,
we have the first component.

2
00:00:06.420 --> 00:00:07.593
Let's go ahead and

3
00:00:07.593 --> 00:00:12.076
let you all play around with creating
your own components from your app.

4
00:00:12.076 --> 00:00:16.720
So the exercise here is to basically
go inside of your forum app.

5
00:00:16.720 --> 00:00:19.680
So whether it's the office,
or community, or whatever.

6
00:00:19.680 --> 00:00:23.925
And then,
look at your index.html file, and go.

7
00:00:23.925 --> 00:00:26.660
Okay, I wanna create some components
out of this, how will I do it?

8
00:00:26.660 --> 00:00:30.917
And to give some preface as well, you will
run into a limitation pretty quickly,

9
00:00:30.917 --> 00:00:33.123
as far as things that
you wanna do with it.

10
00:00:33.123 --> 00:00:36.490
But, I wanna just get you in the practice
of creating some.vue files, and

11
00:00:36.490 --> 00:00:39.822
just know that it'll functionally be
broken until we get back together.

12
00:00:39.822 --> 00:00:42.812
But I just wanna get you all in
the habit of practicing that.

13
00:00:42.812 --> 00:00:43.817
Does that sound good?

14
00:00:43.817 --> 00:00:48.616
So you're basically try scoping,
bringing stuff together.

15
00:00:48.616 --> 00:00:50.068
Let's see how that goes.

16
00:00:52.064 --> 00:00:54.722
Okay, welcome back everyone.

17
00:00:54.722 --> 00:00:58.172
So hopefully you all had some
fun creating components, but

18
00:00:58.172 --> 00:01:01.898
I was kind of walking around and
checking how people were doing,

19
00:01:01.898 --> 00:01:06.590
you probably ran into a problem basically
as you started migrating stuff because

20
00:01:06.590 --> 00:01:09.286
a lot of your code is
dependent on one another.

21
00:01:09.286 --> 00:01:12.550
And so you might have noticed up instead
of moving stuff that it was like being

22
00:01:12.550 --> 00:01:14.794
like wait,
where's this thing you reference to and

23
00:01:14.794 --> 00:01:16.541
like had trouble talking to each other.

24
00:01:16.541 --> 00:01:19.130
So let's go and
show you what I mean by that.

25
00:01:19.130 --> 00:01:24.496
So let me start by
opening up my App.vue for

26
00:01:24.496 --> 00:01:27.930
my Avatar Last Airbender.

27
00:01:27.930 --> 00:01:29.609
And so, as we can see here,

28
00:01:29.609 --> 00:01:33.485
we have a couple of sections here
that could really make sense.

29
00:01:33.485 --> 00:01:36.517
We see a bunch of h2's, they could make
sense as components, to be totally honest.

30
00:01:36.517 --> 00:01:40.290
As far as like these are the characters,
this is the character list.

31
00:01:40.290 --> 00:01:43.000
And so let's actually try
something as simple as that.

32
00:01:43.000 --> 00:01:45.500
Let's go ahead and
start by inside of our components.

33
00:01:45.500 --> 00:01:49.140
Let's create a characterList.vue.

34
00:01:49.140 --> 00:01:52.791
Okay, and I'm gonna bring this over.

35
00:01:52.791 --> 00:01:56.731
And then we have our script
block that we're gonna have, and

36
00:01:56.731 --> 00:01:59.289
we're gonna have our template block.

37
00:01:59.289 --> 00:02:01.530
This time I'm gonna flip it a bit, and

38
00:02:01.530 --> 00:02:04.485
we're gonna start by
bringing over all the HTML.

39
00:02:04.485 --> 00:02:09.663
So the H2 up until this point,
is all to do with the characters, okay?

40
00:02:09.663 --> 00:02:14.290
So if you save that, a lot of stuff is
gonna be missing, but that's totally fine.

41
00:02:14.290 --> 00:02:16.682
And let's just say placeholder for
character list.

42
00:02:19.515 --> 00:02:23.947
And then up here, this is where
it gets a little bit tricky now.

43
00:02:23.947 --> 00:02:24.520
Okay, what do we wanna do?

44
00:02:24.520 --> 00:02:28.465
Well, we know that characterList
here is relevant, so let's start by

45
00:02:28.465 --> 00:02:32.430
exporting a default object cuz this
is the object that defines our app.

46
00:02:32.430 --> 00:02:34.020
So characterList is here.

47
00:02:34.020 --> 00:02:36.602
Great, let's do that.

48
00:02:36.602 --> 00:02:39.083
So oops, I need my data property, and

49
00:02:39.083 --> 00:02:42.428
then I can put my character list in here,
awesome.

50
00:02:42.428 --> 00:02:46.951
And then let's see, what else we got?

51
00:02:46.951 --> 00:02:47.857
Well, we have that.

52
00:02:47.857 --> 00:02:51.350
We have length, this is pretty good.

53
00:02:51.350 --> 00:02:53.640
Actually, this is, actually here.

54
00:02:53.640 --> 00:02:56.340
We have a favorite character, okay?

55
00:02:56.340 --> 00:02:58.343
How do we do that?
Let's see this go here.

56
00:02:58.343 --> 00:03:01.470
Yes, we have a method here for
favorite character.

57
00:03:01.470 --> 00:03:05.246
So I'm just gonna copy the whole block
knowing that I would delete the add new

58
00:03:05.246 --> 00:03:05.900
character.

59
00:03:05.900 --> 00:03:09.075
And this is probably
what you started doing.

60
00:03:09.075 --> 00:03:11.942
And then you're like, yes,
there's also this.favoritelist.

61
00:03:14.686 --> 00:03:19.364
And then we're like, okay,
let's add that to here favoriteList and

62
00:03:19.364 --> 00:03:23.106
then we save, and
then you're thinking okay, great.

63
00:03:23.106 --> 00:03:28.743
I'm gonna import characterList from
components.characterlist.vue, okay.

64
00:03:28.743 --> 00:03:33.721
That's that, and then you're like
I'm gonna register my component at

65
00:03:33.721 --> 00:03:36.099
characterList, just like that.

66
00:03:36.099 --> 00:03:40.732
Okay, and then, oops,
this needs to be renamed properly.

67
00:03:40.732 --> 00:03:44.001
And then you probably came in and
was like okay,

68
00:03:44.001 --> 00:03:48.597
I'm gonna try to call my characterList
component inside of here.

69
00:03:49.976 --> 00:03:55.739
Now if we take a look at what's happening
here, so let me go ahead and close this.

70
00:03:55.739 --> 00:04:01.309
And then we're gonna go ahead and
get out of this go over to our atla-forum.

71
00:04:01.309 --> 00:04:05.283
Run that dev, great.

72
00:04:05.283 --> 00:04:08.213
You're probably gonna realize very
shortly that nothing is working.

73
00:04:11.760 --> 00:04:14.445
Anyone have any guesses as
to why nothing is working?

74
00:04:14.445 --> 00:04:21.009
&gt;&gt; Cuz your parent app relies on
the hairstylist for the benderStatistics.

75
00:04:21.009 --> 00:04:27.870
&gt;&gt; Okay, so as we can see here, we
actually are relying on inside of App.vue,

76
00:04:27.870 --> 00:04:32.816
sorry let's,
I technically move this at this point.

77
00:04:32.816 --> 00:04:36.732
We're actually trying to reference
this characterList property,

78
00:04:36.732 --> 00:04:40.992
but you'll notice it's gone, and
this is what I was mentioning earlier.

79
00:04:40.992 --> 00:04:46.107
When you have components scoped,
the data are scoped to the component.

80
00:04:46.107 --> 00:04:48.126
It's not scoped to the entire app.

81
00:04:48.126 --> 00:04:51.528
So in other words, this whole
characterList component, which I made

82
00:04:51.528 --> 00:04:55.465
based on impulse, actually, if we think
about data flow, it's the wrong way.

83
00:04:55.465 --> 00:04:58.950
Because the characterList is
actually basically at the top.

84
00:04:58.950 --> 00:05:02.230
That's the thing that
serves everything else.

85
00:05:02.230 --> 00:05:07.165
So let's rethink that over again, because
what we really want is the ability to have

86
00:05:07.165 --> 00:05:10.221
the app pushed down into child components,
right,

87
00:05:10.221 --> 00:05:14.598
single direction data flow is a very big
topic these days because it helps to

88
00:05:14.598 --> 00:05:17.611
basically ensure that
things are easier to track.

89
00:05:17.611 --> 00:05:21.056
I know that was one of the initial
blowbacks when it came to two-way binding,

90
00:05:21.056 --> 00:05:23.868
is that people were confused
about which way data was flowing.

91
00:05:23.868 --> 00:05:27.750
But that doesn't make two-way data binding
like wrong, in it of itself, right?

92
00:05:27.750 --> 00:05:29.925
We can see that when it's
done in an encapsulated way.

93
00:05:29.925 --> 00:05:31.803
That's easy to understand, it's great.

94
00:05:31.803 --> 00:05:36.943
But when it comes to long data flows, we
found as an industry that unidirectional

95
00:05:36.943 --> 00:05:41.328
data flow basically from top down
is like keeping that consistent for

96
00:05:41.328 --> 00:05:45.790
the most part has been very helpful for
making things maintainable and

97
00:05:45.790 --> 00:05:47.706
easier to basically work on.

98
00:05:47.706 --> 00:05:53.896
Okay, so actually what I've done here as
an exercise is an exercise in futility.

99
00:05:53.896 --> 00:05:58.188
So I'm gonna go ahead and clear these
changes and we're gonna go ahead and

100
00:05:58.188 --> 00:06:02.147
take a look how we should be thinking
about componentizing our app.

101
00:06:02.147 --> 00:06:06.849
So I can go ahead and delete this, and

102
00:06:06.849 --> 00:06:10.959
then we can refresh the app now.

103
00:06:10.959 --> 00:06:12.324
Okay, everything should be working.

104
00:06:12.324 --> 00:06:14.882
I think I made everything crash.

105
00:06:14.882 --> 00:06:16.212
Okay, refresh.

106
00:06:16.212 --> 00:06:18.051
Okay, everything's good.

107
00:06:18.051 --> 00:06:22.920
Okay, so the way to think about
components is really the component tree.

108
00:06:22.920 --> 00:06:27.450
Again, your App.vue is at the very top,
everything else goes down from that.

109
00:06:27.450 --> 00:06:31.470
So let's pick something smaller to
refractor to kind of show you what I mean.

110
00:06:31.470 --> 00:06:32.999
The easiest thing for here,

111
00:06:32.999 --> 00:06:37.344
it looks like is actually probably the
statistics module that we had just built.

112
00:06:37.344 --> 00:06:40.667
Because really,
it has the one computed property here, and

113
00:06:40.667 --> 00:06:42.960
then after that, that's basically it.

114
00:06:42.960 --> 00:06:46.155
There's not really any other dependency,
so this is a nice, small,

115
00:06:46.155 --> 00:06:48.114
encapsulated one that we can practice on.

116
00:06:48.114 --> 00:06:53.260
So here I'll sell it benderStatistics.vue.

117
00:06:53.260 --> 00:06:56.492
And this time I blow it up to the side
since we're not worried about how it looks

118
00:06:56.492 --> 00:06:57.004
right now.

119
00:06:57.004 --> 00:06:59.660
And so what we wanna go ahead and
do is go and see what that looks like.

120
00:06:59.660 --> 00:07:03.390
So first I'm gonna grab the template,
doo doo doo.

121
00:07:03.390 --> 00:07:04.870
There we go.

122
00:07:04.870 --> 00:07:06.140
And the template is this short blog.

123
00:07:06.140 --> 00:07:08.366
It's just this h2 statistics.

124
00:07:08.366 --> 00:07:12.292
And as well we're going to loop through
and find this benderStatistics.

125
00:07:12.292 --> 00:07:17.229
Okay, so
now we need that data property, script.

126
00:07:17.229 --> 00:07:21.296
And the data property we're looking for
here is benderStatistics here.

127
00:07:21.296 --> 00:07:25.316
And it looks like this is the only
computed property in this entire app,

128
00:07:25.316 --> 00:07:27.800
so we can actually just
cut the whole thing.

129
00:07:27.800 --> 00:07:32.436
And we can export our default object and
paste in our computed property,

130
00:07:32.436 --> 00:07:33.960
which is great, okay?

131
00:07:33.960 --> 00:07:35.605
Now, this is feeling better.

132
00:07:35.605 --> 00:07:39.405
However, as you mentioned before,
we still have a block,

133
00:07:39.405 --> 00:07:44.117
in that, if we go ahead and open this
up inside of V right now, so if I save,

134
00:07:44.117 --> 00:07:47.170
you'll notice that one, it's fine, right?

135
00:07:47.170 --> 00:07:51.502
The benderStatistics doesn't show up, no
errors, and that's to be expected because,

136
00:07:51.502 --> 00:07:53.330
well, we're not calling anything.

137
00:07:53.330 --> 00:07:56.657
But, when we add import benderStatistics.

138
00:07:56.657 --> 00:08:03.150
And so that was an autocomplete by the
way, no magic there, just it's reading it.

139
00:08:03.150 --> 00:08:03.880
There we go.

140
00:08:03.880 --> 00:08:05.415
We can register it.

141
00:08:05.415 --> 00:08:08.898
So components, BenderStatistics.

142
00:08:08.898 --> 00:08:11.783
Then we can try to call it
by rendering it out here.

143
00:08:14.500 --> 00:08:17.758
Okay, boom, big error, why?

144
00:08:17.758 --> 00:08:21.777
Because if we look inside of the for
each, what's it looking for?

145
00:08:21.777 --> 00:08:24.530
Is looking for characterList,
doesn't exist, right?

146
00:08:24.530 --> 00:08:28.808
So now we've proven both ways that data
just doesn't magically get scoped out.

147
00:08:28.808 --> 00:08:30.472
And that again, this is a good thing,

148
00:08:30.472 --> 00:08:34.170
because you want things to inherently be
scoped to the context in which they're in.

