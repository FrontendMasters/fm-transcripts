WEBVTT

1
00:00:00.000 --> 00:00:04.701
So we talked about scoped,
what about CSS modules?

2
00:00:04.701 --> 00:00:09.576
You might not have heard a lot about it,
but, and this is a feature that's

3
00:00:09.576 --> 00:00:14.373
not talked a lot about, but what you
can do is you can actually go ahead and

4
00:00:14.373 --> 00:00:18.645
tell your module, or your CSS
styles to take on the module mode.

5
00:00:18.645 --> 00:00:22.799
Now, what this will do though is a little
bit tricky though on the other hand, so

6
00:00:22.799 --> 00:00:24.670
let me show you what's happening.

7
00:00:24.670 --> 00:00:29.152
So, right now we'll notice that nothing's
happening to the button right now because,

8
00:00:29.152 --> 00:00:33.215
CSS modules works really well in view or
honestly I think in JavaScript scenarios

9
00:00:33.215 --> 00:00:35.806
when there's an actual
class associated with it.

10
00:00:35.806 --> 00:00:38.015
So just to switch this up to
show that it's equivalent,

11
00:00:38.015 --> 00:00:39.711
let me start by reverting this real quick.

12
00:00:39.711 --> 00:00:43.641
So we use a class of button rather
than just a generic button selector.

13
00:00:43.641 --> 00:00:47.772
And we'll show that this, on the see on
the button count, or the base counter,

14
00:00:47.772 --> 00:00:50.125
let's make sure everything is equivalent.

15
00:00:50.125 --> 00:00:55.637
So all the buttons here, one, two,
three, are gonna get a class of button.

16
00:00:55.637 --> 00:00:58.197
So there we go, there's that red
showing up as we would expect.

17
00:00:58.197 --> 00:01:01.804
And under user card,
we got a class of button.

18
00:01:01.804 --> 00:01:05.769
All right, so now everything is equal,
we're talking about CSS classes here now.

19
00:01:05.769 --> 00:01:10.441
Okay, when we add the module here, what
this is going to do is this is going to

20
00:01:10.441 --> 00:01:14.383
allow us to do something that might
seem a little weird at first,

21
00:01:14.383 --> 00:01:15.929
but trust me on this one.

22
00:01:15.929 --> 00:01:20.726
What we're gonna do is we're going
to v bind our class attribute.

23
00:01:20.726 --> 00:01:22.604
And so I'm going to do the shorthand now.

24
00:01:22.604 --> 00:01:25.692
And rather than just bind it to button
directly, because right now it'd be like,

25
00:01:25.692 --> 00:01:27.905
what I mean button,
there's no variable called button.

26
00:01:27.905 --> 00:01:32.047
We're going to do $style.button.

27
00:01:32.047 --> 00:01:34.372
That's what we're going to do.

28
00:01:34.372 --> 00:01:39.352
And so what you'll notice here actually I
realised I only update it in one place.

29
00:01:39.352 --> 00:01:44.568
We didn't update it in all three,
so one, two three, just like that.

30
00:01:44.568 --> 00:01:45.332
Okay?

31
00:01:46.845 --> 00:01:51.146
So you might first think, That looks kind
of ugly, I don't like the JavaScript.

32
00:01:51.146 --> 00:01:55.762
But, let me show you what's actually
happening underneath the hood.

33
00:01:55.762 --> 00:02:00.182
If you take a look here, what you'll
notice is that the class has actually

34
00:02:00.182 --> 00:02:03.911
now been recompiled to actually
have a unique hash at the end.

35
00:02:03.911 --> 00:02:05.140
And this is improve,

36
00:02:05.140 --> 00:02:09.786
this is really powerful because what you
end up getting is the ability to actually

37
00:02:09.786 --> 00:02:13.835
truly scope your styles to the basically
that particular component.

38
00:02:13.835 --> 00:02:18.758
Cuz the odds of this getting overridden
by something else, randomly is very,

39
00:02:18.758 --> 00:02:19.438
very low.

40
00:02:19.438 --> 00:02:21.944
And if you want it to be,
even more like specific,

41
00:02:21.944 --> 00:02:25.229
there are actually ways to configure
your compiler to actually,

42
00:02:25.229 --> 00:02:29.257
basically spit out a specific pattern of
how you want the modules to be spit out.

43
00:02:29.257 --> 00:02:30.197
So in this case for

44
00:02:30.197 --> 00:02:34.404
example like you'll notice it tells you
that the class of button is being used.

45
00:02:34.404 --> 00:02:36.341
Right?
So that we can at least search for

46
00:02:36.341 --> 00:02:40.425
a class button and then after that of
course this is a randomly generated hash.

47
00:02:40.425 --> 00:02:44.244
At the bare minimum this is to me the
minimum that, the minimum size of dx that

48
00:02:44.244 --> 00:02:47.644
I think I recommend when it comes
to CSS modules across frameworks,

49
00:02:47.644 --> 00:02:51.906
is because I noticed that some CSS modules
will actually just hash the entire class.

50
00:02:51.906 --> 00:02:53.934
And you could argue, that's super unique.

51
00:02:53.934 --> 00:02:56.669
But I'd also argue that
it's super hard to debug.

52
00:02:56.669 --> 00:02:59.869
In fact, that's like, almost near
difficult impossible to debug because

53
00:02:59.869 --> 00:03:02.876
you're, now I have to figure out
the HTML where that happens to apply.

54
00:03:02.876 --> 00:03:07.212
And so what I typically recommend when it
comes to CSS modules is to also go ahead

55
00:03:07.212 --> 00:03:09.264
and prefix the component name to it.

56
00:03:09.264 --> 00:03:11.174
Now granted,
if your component names are super long,

57
00:03:11.174 --> 00:03:12.969
then there might end up
being a performance issue.

58
00:03:12.969 --> 00:03:16.554
But that way you know exactly which
component file to drop into and

59
00:03:16.554 --> 00:03:17.857
where the CSS classes,

60
00:03:17.857 --> 00:03:21.462
but this is a really great way to
protect your CSS for components.

61
00:03:21.462 --> 00:03:25.421
Now, once again I know that not everyone
is in love with this style syntax.

62
00:03:25.421 --> 00:03:29.173
So what I tell people is this, remember
that when you're using stuff in view you

63
00:03:29.173 --> 00:03:30.803
can do stuff where it makes sense.

64
00:03:30.803 --> 00:03:34.133
Just because you want to use CSS modules
doesn't mean you have to CSS modularize

65
00:03:34.133 --> 00:03:37.323
your entire code base, you can just do
it in the places where it makes sense.

66
00:03:37.323 --> 00:03:39.807
And that way you don't feel like
you have the one, do it for

67
00:03:39.807 --> 00:03:41.096
across the entire code base.

68
00:03:41.096 --> 00:03:44.963
But two, you can be selective about
the techniques that you use, because,

69
00:03:44.963 --> 00:03:48.650
as we saw earlier scripts works really
well when it's written well, but

70
00:03:48.650 --> 00:03:51.508
then otherwise in times you
need to be very protective.

71
00:03:51.508 --> 00:03:54.174
Go ahead and try out CSS modules on it.

72
00:03:54.174 --> 00:03:57.759
And again, this is something that's
just built right into the library, so

73
00:03:57.759 --> 00:04:00.737
the moment you want to use it,
it's there for you.

74
00:04:00.737 --> 00:04:04.396
We won't show you this at this point,
because this will be like additional

75
00:04:04.396 --> 00:04:07.416
configuration, but just know that for
these blocks as well,

76
00:04:07.416 --> 00:04:10.866
a lot of us also use pre-processors
when it comes to using our styles.

77
00:04:10.866 --> 00:04:14.446
And so you should know, is that you
can actually add attributes on here,

78
00:04:14.446 --> 00:04:17.969
like Lang CSS, for example and
you'll need to actually configure your

79
00:04:17.969 --> 00:04:20.867
builder to actually make sure
it has like the sass loader.

80
00:04:20.867 --> 00:04:23.717
But once you do that,
you can write your sass files in here,

81
00:04:23.717 --> 00:04:27.255
just like you normally would use all
your sass syntax as you would expect.

82
00:04:27.255 --> 00:04:28.692
Question?

83
00:04:28.692 --> 00:04:32.199
&gt;&gt; Is their way to to avoid
the class bind style button?

84
00:04:32.199 --> 00:04:36.143
Is there a way to use sass and bind to,

85
00:04:36.143 --> 00:04:42.800
the parent element In the component and
then your sass?

86
00:04:42.800 --> 00:04:44.006
&gt;&gt; Yeah, that's a great question.

87
00:04:44.006 --> 00:04:48.451
So, the question is around trying to
instead of using the style to use sass to

88
00:04:48.451 --> 00:04:53.172
check out what the class is of the parent,
and use that to generate the CSS the wrap

89
00:04:53.172 --> 00:04:57.770
and that's everything I've never
actually done that particular approach.

90
00:04:57.770 --> 00:05:00.413
I would imagine that if
you were to approach it,

91
00:05:00.413 --> 00:05:02.196
it might be kind of hard to do, so

92
00:05:02.196 --> 00:05:07.780
I don't have I'll say that it sounds
possible but it might be tricky to do

