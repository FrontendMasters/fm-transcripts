WEBVTT

1
00:00:00.000 --> 00:00:03.349
So we've talked about composition API,
we've talked about script setup.

2
00:00:03.349 --> 00:00:05.743
Now, we need to talk about
something called composable.

3
00:00:05.743 --> 00:00:08.644
This is the new kit on
the block when it comes to Vue,

4
00:00:08.644 --> 00:00:13.102
because it's basically a view specific
terminology around a type of reusable

5
00:00:13.102 --> 00:00:16.090
JavaScript utility that
uses the composition API.

6
00:00:16.090 --> 00:00:18.833
Hence, why it's called composable.

7
00:00:18.833 --> 00:00:22.487
And so for those coming from a React
background, you might be familiar with

8
00:00:22.487 --> 00:00:25.329
the React Hooks,
where they prefix everything with use,

9
00:00:25.329 --> 00:00:27.603
like use mouse position,
that kind of thing.

10
00:00:27.603 --> 00:00:29.937
That pattern has also
carried over into Vue.

11
00:00:29.937 --> 00:00:34.823
I'm gonna be demoing this shortly,
but we'll be able to create some

12
00:00:34.823 --> 00:00:39.133
helper basic utility functions
using the composition API.

13
00:00:39.133 --> 00:00:42.931
And then this is the elusive, how do
we share some stuff between components

14
00:00:42.931 --> 00:00:45.477
without polluting and
rewriting the same thing?

15
00:00:45.477 --> 00:00:47.330
Composables are your answer for that.

16
00:00:47.330 --> 00:00:49.731
Okay, so
let's load up the counter real quick.

17
00:00:49.731 --> 00:00:55.072
So I'm gonna go inside of my App.vue, and
this time, we're gonna practice this.

18
00:00:55.072 --> 00:00:58.590
I'm actually just gonna
import my BaseCounter,

19
00:00:58.590 --> 00:01:01.276
and this is from base-counter here.

20
00:01:01.276 --> 00:01:03.074
We're gonna delete that,

21
00:01:03.074 --> 00:01:07.695
and then we're just gonna render
out our BaseCounter just like that.

22
00:01:07.695 --> 00:01:10.409
Okay, so there you go.

23
00:01:10.409 --> 00:01:13.472
Also grip setup in the flesh right there.

24
00:01:15.434 --> 00:01:18.066
Okay, we have the ability to increment,
that's fine.

25
00:01:19.526 --> 00:01:24.824
But what if we wanted the ability
to count in other places?

26
00:01:24.824 --> 00:01:29.103
This is basically like an encapsulated
functionality that we don't want to.

27
00:01:29.103 --> 00:01:31.407
So when we're looking at
this functionality, again,

28
00:01:31.407 --> 00:01:34.691
this is a simplistic example, but for
the sake of understanding composables,

29
00:01:34.691 --> 00:01:37.447
imagine if we wanted the count to
be managed from multiple places.

30
00:01:37.447 --> 00:01:40.512
In other words, a base-counter,
it's nice that it has it here.

31
00:01:40.512 --> 00:01:45.333
But what if we want the base,
let's say, inside of user-card?

32
00:01:45.333 --> 00:01:49.032
What of user-card wanted the ability
to also increment the count?

33
00:01:49.032 --> 00:01:51.911
At the moment, you'd have to
duplicate that, it's kind of tricky.

34
00:01:51.911 --> 00:01:55.302
You would have to probably do some
props to have your app manage that,

35
00:01:55.302 --> 00:01:57.943
but counted something that
really we think about it.

36
00:01:57.943 --> 00:02:01.893
It really does belong in base-counter as a
state, but it really doesn't make sense to

37
00:02:01.893 --> 00:02:05.315
put it at the app level, cuz it usually
cares about a bunch of other things.

38
00:02:05.315 --> 00:02:06.506
So what do we have?

39
00:02:06.506 --> 00:02:08.589
We have composables.

40
00:02:08.589 --> 00:02:09.692
How does that work?

41
00:02:09.692 --> 00:02:13.895
Well, let's start by creating
a folder called composables,

42
00:02:13.895 --> 00:02:18.112
just where you'll see a lot encode
bases these days for Vue 3.

43
00:02:18.112 --> 00:02:21.595
And what we're gonna do is we're gonna
create inside of that composables.

44
00:02:21.595 --> 00:02:25.074
I'm gonna create something called a count,
I'll just call it a countStore,

45
00:02:25.074 --> 00:02:26.719
because that's what I wanted to do.

46
00:02:26.719 --> 00:02:29.615
I want to basically store
what's going on with count.

47
00:02:29.615 --> 00:02:33.342
So I'll split this over with two
columns so you can see what's going on.

48
00:02:33.342 --> 00:02:36.692
And so here, what we really wanna
do is we want this piece of data.

49
00:02:36.692 --> 00:02:39.213
Let's start simple,
let's make that shared so

50
00:02:39.213 --> 00:02:41.373
that we can show that in multiple places.

51
00:02:41.373 --> 00:02:45.295
The way you do that is we're
gonna import a ref, rashy, no.

52
00:02:45.295 --> 00:02:49.006
We're gonna reverse engineer
that a little bit easier.

53
00:02:49.006 --> 00:02:51.754
For those who are new to JavaScript
modules, this might seem a little bit

54
00:02:51.754 --> 00:02:54.428
intimidating, but we're gonna
basically build it up from scratch.

55
00:02:54.428 --> 00:02:58.439
When you have a JavaScript file that
you wanna import into another file,

56
00:02:58.439 --> 00:03:01.609
the main thing you need to do
is having to export, right?

57
00:03:01.609 --> 00:03:06.551
So normally, you would have an export
like count of 10 like this, okay?

58
00:03:06.551 --> 00:03:09.041
Let's make it 100 like this.

59
00:03:09.041 --> 00:03:14.767
And then what we could do is you
could then say, import countStore or

60
00:03:14.767 --> 00:03:21.606
actually import, we de-structure this
part from composables/countStore.

61
00:03:21.606 --> 00:03:25.646
And we're taking out of that,
we're taking the count out of this.

62
00:03:25.646 --> 00:03:29.290
And actually, let's make this new count so
that visually, it's easier for

63
00:03:29.290 --> 00:03:31.040
y'all to see what's going on here.

64
00:03:31.040 --> 00:03:35.648
And then we can do here,
it's inside of our setup method.

65
00:03:35.648 --> 00:03:43.271
We could say, yes, we're gonna go
ahead and say return newCount.

66
00:03:43.271 --> 00:03:47.601
Okay, so
to show you what just happened here,

67
00:03:47.601 --> 00:03:53.497
we just wrote a standard JavaScript,
oop, what's going on?

68
00:03:53.497 --> 00:03:59.284
Did you fail to resolve import,
composables, countStore?

69
00:03:59.284 --> 00:04:02.853
&gt;&gt; You gotta backup-
&gt;&gt; Back up one level, yep, file name,

70
00:04:02.853 --> 00:04:03.662
that's it.

71
00:04:03.662 --> 00:04:06.605
Great Carl, and
then to show that this works,

72
00:04:06.605 --> 00:04:10.917
we're gonna render this on the page,
&lt;h2&gt;{{ newCount }}.

73
00:04:10.917 --> 00:04:13.758
You can see we successfully
wrote a little piece of

74
00:04:13.758 --> 00:04:16.609
JavaScript that's now
we're using two places.

75
00:04:16.609 --> 00:04:20.032
Now, again, to prove that this works
again, let's continue proving this out.

76
00:04:20.032 --> 00:04:26.614
It's that we will then import
the same newCount on user-card.

77
00:04:26.614 --> 00:04:29.306
Similarly, we'll use
a setup method in here.

78
00:04:29.306 --> 00:04:32.408
I'm not gonna spend the time to convert
everything right now just to kind of make

79
00:04:32.408 --> 00:04:33.714
the process a little bit easier.

80
00:04:33.714 --> 00:04:36.740
But we're gonna return a newCount here,

81
00:04:36.740 --> 00:04:40.983
and then we can actually then as an h2,
also do newCount.

82
00:04:40.983 --> 00:04:44.226
So instead of the user-card, what we're
gonna do now is also display newCount so

83
00:04:44.226 --> 00:04:46.999
we can actually prove that this was
successfully imported to places.

84
00:04:46.999 --> 00:04:49.074
But we need this to actually
render on the page.

85
00:04:49.074 --> 00:04:54.383
So we need to go to App.vue, and
let's go ahead and bring in our UserCard.

86
00:04:54.383 --> 00:04:56.641
Although, I'm actually saying,
yeah, UserCard is correct.

87
00:04:56.641 --> 00:04:57.964
There we go, perfect.

88
00:04:57.964 --> 00:05:03.916
So user-card here, but
I believe UserCard had some props,

89
00:05:03.916 --> 00:05:08.364
though didn't require some props, it did.

90
00:05:08.364 --> 00:05:11.571
Object for name and food, that's fine,
we can do that real quick.

91
00:05:11.571 --> 00:05:16.948
This will be a user with a name of Ben,

92
00:05:16.948 --> 00:05:20.253
and we just tick food.

93
00:05:20.253 --> 00:05:22.982
This time, we'll do Cheeseburger.

94
00:05:22.982 --> 00:05:28.199
Although, I did do that earlier, so
for the sake of doing something new,

95
00:05:28.199 --> 00:05:31.244
we're just gonna do Ramen, save, boom.

96
00:05:31.244 --> 00:05:35.477
Okay, so you can see now,
100 appears here in the count,

97
00:05:35.477 --> 00:05:37.970
100 appears here at the bottom.

98
00:05:37.970 --> 00:05:40.888
So we can verify that once more.

99
00:05:40.888 --> 00:05:43.451
We're going to countStore,
changing this to 200.

100
00:05:43.451 --> 00:05:47.326
And you can see and refresh,
you'll see that it's updating.

101
00:05:47.326 --> 00:05:50.003
But again, this is a constant,
it's kind of weird.

102
00:05:50.003 --> 00:05:53.069
All right, so this is cool,
but once again,

103
00:05:53.069 --> 00:05:56.147
we want the ability to
be able to change that.

104
00:05:56.147 --> 00:05:58.988
So let's go inside of our base-counter.

105
00:05:58.988 --> 00:06:03.820
And this time, well,
what might you do instinctively?

106
00:06:03.820 --> 00:06:08.527
We might go, well, instead of this,
we'll say this.newCount.

107
00:06:08.527 --> 00:06:12.797
And when we click on it, we want newCount
to also get incremented as well, and

108
00:06:12.797 --> 00:06:14.454
we'll increment it by 10.

109
00:06:14.454 --> 00:06:17.883
So we'll save that,
we'll refresh, we'll hit it.

110
00:06:17.883 --> 00:06:20.794
And you notice, it's kind of working.

111
00:06:20.794 --> 00:06:22.359
This is kind of weird.

112
00:06:22.359 --> 00:06:25.697
But then you'll notice that
it's working in this context,

113
00:06:25.697 --> 00:06:27.862
but it's not working in this context.

114
00:06:27.862 --> 00:06:32.171
And this is a little bit of a preview of
the kind of UI bugs that we had to deal

115
00:06:32.171 --> 00:06:33.169
with over time.

116
00:06:33.169 --> 00:06:36.085
As developers, we're dealing
with reactive state changes, and

117
00:06:36.085 --> 00:06:38.281
this is what a lot of
the frameworks do well for us.

118
00:06:38.281 --> 00:06:44.511
So here's the deal,
what we wanna do is what we wanna do.

119
00:06:44.511 --> 00:06:47.521
We wanna make this a reactive
reference that Vue will contract.

120
00:06:47.521 --> 00:06:49.055
So what do we do?

121
00:06:49.055 --> 00:06:55.664
Import ref from vue,
wrap this in a ref, save,

122
00:06:55.664 --> 00:07:01.127
refresh, everything's connected.

123
00:07:01.127 --> 00:07:05.718
And just like that, you have this little
JavaScript file with just the one variable

124
00:07:05.718 --> 00:07:10.182
you care about shared across two different
components at different levels, and

125
00:07:10.182 --> 00:07:12.759
everything's updating as you would expect.

126
00:07:14.221 --> 00:07:18.951
And so this pattern here that we're seeing
regarding the combination of a setup with

127
00:07:18.951 --> 00:07:23.480
importing whatever you are dropping in is
one that I would say is probably gonna be

128
00:07:23.480 --> 00:07:24.965
seen more in Options API.

129
00:07:24.965 --> 00:07:27.087
And that's why we spend so
much time in composition API.

130
00:07:27.087 --> 00:07:30.665
In that, I would say going forward
as architectures continue to evolve,

131
00:07:30.665 --> 00:07:33.739
composition API will become more and
more popular in Vue apps.

132
00:07:33.739 --> 00:07:36.529
This is not to say that it is
the one true right way, and

133
00:07:36.529 --> 00:07:38.712
that you have to write your apps this way.

134
00:07:38.712 --> 00:07:41.517
It's a very effective technique,
and to try to ignore it for

135
00:07:41.517 --> 00:07:44.273
the sake of ignoring it doesn't
really make a lot of sense.

136
00:07:44.273 --> 00:07:48.456
So for those of us who still love Options
API, just sprinkle it in just like this.

137
00:07:48.456 --> 00:07:52.265
And then you get the benefits of composing
together different pieces of functionality

138
00:07:52.265 --> 00:07:53.986
that you can reuse in your options, but

139
00:07:53.986 --> 00:07:56.090
then you can still get
the benefits of options.

140
00:07:56.090 --> 00:07:58.913
For those of us who want to
use composition API fully,

141
00:07:58.913 --> 00:08:02.763
then it really is just as simple as
importing the thing and then using it.

