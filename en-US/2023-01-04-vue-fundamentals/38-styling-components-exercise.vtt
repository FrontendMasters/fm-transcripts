WEBVTT

1
00:00:00.390 --> 00:00:06.228
Your challenge for this section is
to take a look at styling view.

2
00:00:06.228 --> 00:00:09.800
I've intentionally left a lot of
the styling in there very generic.

3
00:00:09.800 --> 00:00:11.611
In fact, there's a lot of duplication.

4
00:00:11.611 --> 00:00:15.347
And so you can try actually seeing if you
can refactor it in a way that makes more

5
00:00:15.347 --> 00:00:16.049
sense to you.

6
00:00:16.049 --> 00:00:18.734
Maybe you wanna do it in a global file,
who knows?

7
00:00:18.734 --> 00:00:21.150
And then you can play around with V-bind.

8
00:00:24.171 --> 00:00:27.343
All right, hopefully people had
a chance to play around with some

9
00:00:27.343 --> 00:00:30.053
styles like I said,
honestly CSS has its own skill set,

10
00:00:30.053 --> 00:00:33.051
there are plenty of great workshops
here on front of masters so

11
00:00:33.051 --> 00:00:36.655
be sure to check those out if you wanna
learn more about CSS architecture.

12
00:00:36.655 --> 00:00:40.757
But I hope that was useful in terms of
like a way to sort of learn what kind of

13
00:00:40.757 --> 00:00:44.996
techniques are available to you out of
the gate when it comes to using view so

14
00:00:44.996 --> 00:00:49.464
that you can use that to augment or best
practices with CSS cuz to be very clear.

15
00:00:49.464 --> 00:00:52.213
Again, as someone who loves CSS,
I'm not advocating for

16
00:00:52.213 --> 00:00:55.818
you to kind of work around the cascade,
the cascade is extremely powerful.

17
00:00:55.818 --> 00:00:58.419
But like a lot of things, you got to know
when to use it in the right scenarios.

18
00:00:58.419 --> 00:01:00.628
And sometimes when it comes
to certain components,

19
00:01:00.628 --> 00:01:03.148
it makes sense to just keep it
scoped to ignore the cascade.

20
00:01:03.148 --> 00:01:05.530
And so
know that view provides you those options.

21
00:01:05.530 --> 00:01:10.690
And also, as we saw, with the V-bind as
well when it comes to customization and

22
00:01:10.690 --> 00:01:15.464
being able to easily connect your
JavaScript with your CSS like View tries

23
00:01:15.464 --> 00:01:18.544
to do its best to make that
as easy as possible for

24
00:01:18.544 --> 00:01:22.335
you when it comes to using
compiler based optimizations.

25
00:01:22.335 --> 00:01:26.058
So I'll just go ahead and just once again,
let's demo some of that inside of

26
00:01:26.058 --> 00:01:29.211
cest-la-vue, so that you can
have that as a solution branch.

27
00:01:29.211 --> 00:01:32.182
And then we'll go from there.

28
00:01:32.182 --> 00:01:37.932
So switching on over CDs cest-la-vue.

29
00:01:37.932 --> 00:01:40.120
Great, perfect.

30
00:01:40.120 --> 00:01:45.450
All right, so first thing first, when I
think of cest-la-vue as we can see here,

31
00:01:45.450 --> 00:01:50.400
the use of card actually is something that
sticks out to me as something that we

32
00:01:50.400 --> 00:01:54.151
honestly are not gonna share
these styles at this moment.

33
00:01:54.151 --> 00:01:58.322
And so when I look at this honestly, I do
think this is probably a good case for

34
00:01:58.322 --> 00:01:59.756
just having the wrapper or

35
00:01:59.756 --> 00:02:03.422
these particular styles be scoped
to this particular component.

36
00:02:03.422 --> 00:02:07.552
So we can go ahead and scope it like this.

37
00:02:07.552 --> 00:02:11.334
And then however though, if you're
thinking about it and you're like, well,

38
00:02:11.334 --> 00:02:13.335
there are a lot of other cards out there,
so

39
00:02:13.335 --> 00:02:15.747
what if I wanna be really
specific about this card.

40
00:02:15.747 --> 00:02:19.757
Then on second thought, let's just
make this a CSS module, since again,

41
00:02:19.757 --> 00:02:21.867
the styles here are fairly innocuous.

42
00:02:21.867 --> 00:02:25.422
Not a lot of reusability at the moment,
so we can just do style, and

43
00:02:25.422 --> 00:02:29.933
then because it's the dash though, this is
where unfortunately the style of syntax

44
00:02:29.933 --> 00:02:32.626
is a little bit on the uglier
side comparatively.

45
00:02:32.626 --> 00:02:37.201
We can see now that it still works because
we look at here, we can see there's our

46
00:02:37.201 --> 00:02:41.186
user-card, that's actually being
rendered out as anticipated.

47
00:02:41.186 --> 00:02:44.878
Okay, what about other opportunities for
styled refactoring?

48
00:02:44.878 --> 00:02:47.213
Well, if we take a look at the homepage,

49
00:02:47.213 --> 00:02:50.873
we have a bunch of stuff here
that's actually fairly generic.

50
00:02:50.873 --> 00:02:53.537
We have stuff on the login
page that's being refactored.

51
00:02:53.537 --> 00:02:56.790
So we could do really is we can
just actually delete the stuff

52
00:02:56.790 --> 00:02:57.838
on the login page.

53
00:02:57.838 --> 00:03:01.914
And then if we refresh and take a look
home login, everything still looks good.

54
00:03:01.914 --> 00:03:05.534
So that refactor was pretty easy.

55
00:03:05.534 --> 00:03:07.705
And then finally,
let's find an opportunity for

56
00:03:07.705 --> 00:03:10.702
some scope styles while we're
looking at the user page, actually,

57
00:03:10.702 --> 00:03:13.044
it looks like we're using
a lot of stuff here as well.

58
00:03:13.044 --> 00:03:16.455
So let's go ahead and just wipe
this out to finish the refactor and

59
00:03:16.455 --> 00:03:20.004
we take a look at homepage,
we do have that button green right here.

60
00:03:20.004 --> 00:03:22.111
So okay, that's good.

61
00:03:22.111 --> 00:03:26.528
In this case, to be honest, I'm not sure
I'd wanna scope the styles at this point,

62
00:03:26.528 --> 00:03:28.469
because we're inside of homepage.

63
00:03:28.469 --> 00:03:31.767
And homepage, we know is being
shared across multiple files.

64
00:03:31.767 --> 00:03:34.462
So at this point, what I would
probably do is I said, you know what?

65
00:03:34.462 --> 00:03:37.813
Homepage styles are not just
being shared like for its own,

66
00:03:37.813 --> 00:03:40.238
it's being shared across the entire app.

67
00:03:40.238 --> 00:03:43.712
So let's actually just
drop that inside of here.

68
00:03:43.712 --> 00:03:44.726
So at the bare minimum,

69
00:03:44.726 --> 00:03:47.875
it feels a little bit more proper in
terms of cascade app.viewcontrols,

70
00:03:47.875 --> 00:03:51.253
these things are being shared everywhere,
so boom, it's now being shared.

71
00:03:51.253 --> 00:03:54.447
And there are certainly opportunities
here to refactor things, for example,

72
00:03:54.447 --> 00:03:55.933
we're seeing the navigation here.

73
00:03:55.933 --> 00:03:59.590
So you can imagine as this application
grows, you can totally see

74
00:03:59.590 --> 00:04:04.244
an opportunity for us to actually refactor
our header component into its own file,

75
00:04:04.244 --> 00:04:07.858
which then that might be a good
use case for scope, for example.

76
00:04:07.858 --> 00:04:10.263
Anyhow, just wanted to talk through
some high level refactoring and

77
00:04:10.263 --> 00:04:11.430
that's how I might approach it.

