WEBVTT

1
00:00:00.179 --> 00:00:04.767
Okay, with that, I think the final thing
we wanna end on is deploying your app.

2
00:00:04.767 --> 00:00:07.672
So we're gonna take a couple
minutes to take a look at that.

3
00:00:07.672 --> 00:00:10.555
So when it comes to deploying your app,
if you do it the standard way,

4
00:00:10.555 --> 00:00:14.018
you usually have to do like an FTP server,
and you got to build this thing, right?

5
00:00:14.018 --> 00:00:17.131
Because after all,
if we take a look at our cest-la-vue app,

6
00:00:17.131 --> 00:00:20.861
this is not something that we can just
drop on a server and it will just work.

7
00:00:20.861 --> 00:00:22.653
We need to actually build the thing.

8
00:00:22.653 --> 00:00:26.952
So the way this works, if you take
a look at your package.json instead of

9
00:00:26.952 --> 00:00:32.039
cest-la-vue, you'll see that there's
actually a build command that we can run.

10
00:00:32.039 --> 00:00:34.038
So let's go ahead and do that, shall we?

11
00:00:34.038 --> 00:00:39.539
So inside of here,
we go to cest-la-vue and npm run build.

12
00:00:39.539 --> 00:00:43.543
And right now, there's a bunch of stuff in
there, so let me clean that up real quick.

13
00:00:49.707 --> 00:00:52.686
Okay, npm run build.

14
00:00:52.686 --> 00:00:53.417
There we go.

15
00:00:53.417 --> 00:00:57.594
Okay, and what that will build for
you is a dist folder, which stands for

16
00:00:57.594 --> 00:00:59.524
basically distributed folder.

17
00:00:59.524 --> 00:01:03.392
And inside of here, now, this should look
like something you can actually deploy,

18
00:01:03.392 --> 00:01:04.980
where you have your index.html.

19
00:01:04.980 --> 00:01:08.924
You can see that there's generated hashes
for your different assets, for CSS,

20
00:01:08.924 --> 00:01:10.838
JavaScript, managing those things.

21
00:01:10.838 --> 00:01:14.695
And you might notice that, look, those
chunks that we did when we did the route,

22
00:01:14.695 --> 00:01:16.965
here they are,
they're already parsed out for

23
00:01:16.965 --> 00:01:19.254
us because the bundler
already did that for us.

24
00:01:19.254 --> 00:01:22.396
Now, of course, deploying this
can be done a number of ways, but

25
00:01:22.396 --> 00:01:26.111
I'll just be showing you how to do this
in sort of a Git based format rather than

26
00:01:26.111 --> 00:01:27.681
just dropping it on the server.

27
00:01:27.681 --> 00:01:32.444
And so this is a shout out for
the company I work for, Netlify.

28
00:01:32.444 --> 00:01:36.149
So if you have a free account,
this will work fairly easily.

29
00:01:36.149 --> 00:01:40.403
So what I'm gonna do here, I'm gonna
go ahead and log in to my account.

30
00:01:40.403 --> 00:01:43.515
And what we're gonna do is just,
we're gonna create a new site.

31
00:01:43.515 --> 00:01:47.663
And so the reason this is really nice is
because what you're doing here is you're

32
00:01:47.663 --> 00:01:50.530
creating a pipeline that
connects your GitHub repo that

33
00:01:50.530 --> 00:01:54.087
you're basically committing all
your code to to your deployments.

34
00:01:54.087 --> 00:01:56.672
So basically, similar to the way
you want it to watch for

35
00:01:56.672 --> 00:01:59.697
reactive things in view to do things,
this will watch a repo, and

36
00:01:59.697 --> 00:02:02.405
we make changes to it,
it will then run your deployments.

37
00:02:02.405 --> 00:02:05.826
And so here, we go, complete-intro.

38
00:02:05.826 --> 00:02:11.967
That should show up, doo doo doo,
once we give it a little bit.

39
00:02:14.335 --> 00:02:16.821
There we go, complete-intro-to-vue-3.

40
00:02:16.821 --> 00:02:18.410
And then we have a Branch to deploy.

41
00:02:18.410 --> 00:02:23.190
And currently,
my cest-la-vue really don't need to be 16.

42
00:02:23.190 --> 00:02:26.043
So I'm gonna be deploying
the 16-solution brands, but normally,

43
00:02:26.043 --> 00:02:27.670
you'll be deploying your main branch.

44
00:02:27.670 --> 00:02:30.963
And then the Base directory is, for me,
gonna be cest-la-vue because we have

45
00:02:30.963 --> 00:02:33.285
multiple apps running inside
of the project right now.

46
00:02:33.285 --> 00:02:35.207
So that's the specific one I wanna build.

47
00:02:35.207 --> 00:02:37.659
And then we're gonna run the command,
npm run build.

48
00:02:37.659 --> 00:02:41.880
And the directory, though, we have
to remember is what's actually being

49
00:02:41.880 --> 00:02:46.242
outputted, it's a dist directory,
and so that's what being configured.

50
00:02:46.242 --> 00:02:49.489
So once we run that,
we get something that's pretty great.

51
00:02:49.489 --> 00:02:52.937
So for anyone who used to do things in
the old days, where you did FTP servers,

52
00:02:52.937 --> 00:02:54.913
you have to manage a lot of caching,
right?

53
00:02:54.913 --> 00:02:57.221
If you uploaded a CSS file,
you had to manage like,

54
00:02:57.221 --> 00:03:00.382
is the user gonna get the right thing,
are they looking at the same version?

55
00:03:00.382 --> 00:03:03.863
And so oftentimes, when you're debugging
things, it is hard to figure out what is

56
00:03:03.863 --> 00:03:07.065
going on because what your user's
seeing might not be what you're seeing.

57
00:03:07.065 --> 00:03:09.833
And so in the effort of having
Git deployments basically,

58
00:03:09.833 --> 00:03:12.091
one of the things that Netlify does for
you, and

59
00:03:12.091 --> 00:03:15.672
there are other companies that do this
as well, so this is not the only one.

60
00:03:15.672 --> 00:03:18.903
Is that you'll see here that
it automatically generated for

61
00:03:18.903 --> 00:03:21.384
me a random URL that I
could share with people.

62
00:03:21.384 --> 00:03:25.031
And so you can see here that all my
functionality is in here, actually.

63
00:03:25.031 --> 00:03:28.561
So if I can Continue with emails,
it's live, which is great.

64
00:03:28.561 --> 00:03:30.383
That happened in a matter of seconds.

65
00:03:30.383 --> 00:03:34.465
And then the other thing too is that with
the Domain settings, it's pretty easy for

66
00:03:34.465 --> 00:03:36.934
us to then say,
let's go ahead and swap this out.

67
00:03:36.934 --> 00:03:38.686
And I'm gonna call this cest-la-vue.

68
00:03:38.686 --> 00:03:40.970
Granted, this is where we get to it first.

69
00:03:40.970 --> 00:03:45.765
But now that I swapped it out, we can see
now that when I open it up, there we go,

70
00:03:45.765 --> 00:03:49.064
cest-la-vue.netlify.app, and
it just works.

71
00:03:49.064 --> 00:03:53.184
And the beautiful part about this is not
so much that it deploys, cuz again, there

72
00:03:53.184 --> 00:03:57.381
are many ways to deploy, it's the fact
that it'll watch your GitHub repository.

73
00:03:57.381 --> 00:04:02.025
So in other words, if you go inside
of the app.view right now for

74
00:04:02.025 --> 00:04:07.452
cest-la-vue, and then instead at
the very top, we'll say something.

75
00:04:07.452 --> 00:04:13.851
Let's see, from here, we'll say,
This is a new message.

76
00:04:13.851 --> 00:04:18.081
And then I think I did a triple s on that,
and let's fix that.

77
00:04:18.081 --> 00:04:22.333
And then if we commit this to our branch,
so

78
00:04:22.333 --> 00:04:28.134
cest-la-vue here, and
then ignore this stuff for now.

79
00:04:28.134 --> 00:04:31.807
One, two, three, four, five,

80
00:04:31.807 --> 00:04:36.252
git commit, feature: add new message.

81
00:04:36.252 --> 00:04:39.719
And then I push on this branch.

82
00:04:43.601 --> 00:04:47.914
One of the things you'll see is that in
the Deploys, basically, there's a hook to

83
00:04:47.914 --> 00:04:51.813
watch GitHub repo, and it knows, hey,
it's time to make another build.

84
00:04:51.813 --> 00:04:55.747
And so you can see here, it's going off,
it's running, it's building the thing,

85
00:04:55.747 --> 00:04:56.470
that's fine.

86
00:04:56.470 --> 00:04:58.561
And so what's really cool about this,
though,

87
00:04:58.561 --> 00:05:01.881
is that when it's running this build,
is basically doing an atomic deploy.

88
00:05:01.881 --> 00:05:04.841
So what that means is that it's completely
separate from the previous deploy.

89
00:05:04.841 --> 00:05:07.586
Cuz that was the problem with
a lot of enterprise systems,

90
00:05:07.586 --> 00:05:11.282
is that once you push to deploy, you
weren't sure what the assets were, and so

91
00:05:11.282 --> 00:05:13.650
especially if you're
having users with issues.

92
00:05:13.650 --> 00:05:16.002
It was hard to debug, and
then let alone rollbacks,

93
00:05:16.002 --> 00:05:18.258
it was kind of a nightmare
to deal with all of that.

94
00:05:18.258 --> 00:05:20.719
So okay, our site is live,
so we can see now.

95
00:05:20.719 --> 00:05:26.730
If I go over here, you see, hey, look,
This is a new message, is right here.

96
00:05:26.730 --> 00:05:29.973
But again, in the effort, the atomic
deploy model, what if your product manager

97
00:05:29.973 --> 00:05:32.940
is like, whoa, whoa, whoa,
we don't want this message, that is a bug?

98
00:05:32.940 --> 00:05:35.323
Well, typically, what you'd have to
do is you have to get your engineers,

99
00:05:35.323 --> 00:05:37.592
you have to be like, hurry up,
we got to figure out what's going on, and

100
00:05:37.592 --> 00:05:38.842
you got to push the right code, right?

101
00:05:38.842 --> 00:05:42.967
But now, what you can do because of the
atomic deploy is you can come in here if

102
00:05:42.967 --> 00:05:45.042
we actually just say, you know what?

103
00:05:45.042 --> 00:05:48.955
We're gonna go ahead and, doo doo doo,

104
00:05:48.955 --> 00:05:54.035
inside of here,
we can polish this deploy instead.

105
00:05:54.035 --> 00:05:55.625
Whoa, not this one.

106
00:05:55.625 --> 00:05:59.963
There you go, click Publish deploy,
and we publish it.

107
00:05:59.963 --> 00:06:04.773
And what you'll see now is that it's
switched now from the latest commit and

108
00:06:04.773 --> 00:06:08.020
what we have here when we
go back to our URL, voila.

109
00:06:08.020 --> 00:06:09.778
Everything's fixed.

110
00:06:09.778 --> 00:06:14.479
And so this is basically, I would say, the
modern way when it comes to thinking of

111
00:06:14.479 --> 00:06:18.088
deployment in that,
especially because we get versioning.

112
00:06:18.088 --> 00:06:22.193
Why should not deploys also be versioned
in a way that allows us to go ahead and

113
00:06:22.193 --> 00:06:26.638
whether it's split testing or ensure that
we deliver the same thing to our users.

114
00:06:26.638 --> 00:06:28.994
This is something that I
wanted to show you all and

115
00:06:28.994 --> 00:06:30.783
how you can deploy your app with Vue.

