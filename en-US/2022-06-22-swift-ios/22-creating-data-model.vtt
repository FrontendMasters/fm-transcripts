WEBVTT

1
00:00:00.170 --> 00:00:04.951
What's next in terms of what we
can do here to improve the code,

2
00:00:04.951 --> 00:00:08.700
we need to create the data model, okay?

3
00:00:08.700 --> 00:00:09.937
So, a data model.

4
00:00:09.937 --> 00:00:13.821
Actually the data model,
it's not a concept in Swift,

5
00:00:13.821 --> 00:00:17.810
it's just a concept in
any app that you create.

6
00:00:17.810 --> 00:00:23.760
So in this case, we can use extracts and
classes or both at the same time.

7
00:00:23.760 --> 00:00:27.970
So, we are going to create a new file,
but within a group.

8
00:00:27.970 --> 00:00:31.800
So I'm going to create first a new group,
and I'm going to call this The Model.

9
00:00:33.500 --> 00:00:38.365
And within the model, I need at least
two files, one for categories because

10
00:00:38.365 --> 00:00:43.170
actually the products are in
categories coffees, teas, frappuccinos.

11
00:00:44.190 --> 00:00:46.320
So I knew that category.

12
00:00:46.320 --> 00:00:48.767
Swift file is not a UI view so actually,

13
00:00:48.767 --> 00:00:51.780
we need to be careful
not to pick a UI view.

14
00:00:51.780 --> 00:00:55.789
It's just data class so
just data or data structure.

15
00:00:57.680 --> 00:01:00.723
So a category, okay?

16
00:01:00.723 --> 00:01:05.565
Like that and product or item,

17
00:01:05.565 --> 00:01:10.610
let's call it Product like so.

18
00:01:10.610 --> 00:01:13.983
So inside here,
we just need to create a structure,

19
00:01:13.983 --> 00:01:16.371
do you need classes, do we have OOP?

20
00:01:16.371 --> 00:01:19.010
I don't think so.

21
00:01:19.010 --> 00:01:22.327
So it can be just playing structures,

22
00:01:22.327 --> 00:01:27.820
like a product that contains a name,
a description, a price,

23
00:01:27.820 --> 00:01:34.576
the image URL because we're going to
download this from the network, okay?

24
00:01:34.576 --> 00:01:36.100
So that's pretty simple, right?

25
00:01:36.100 --> 00:01:37.310
We know how to do that.

26
00:01:37.310 --> 00:01:38.800
Probably an ID as well.

27
00:01:40.480 --> 00:01:45.835
So, an ID, a name, a description,

28
00:01:49.027 --> 00:01:54.951
A price, you know how to do that at
this point, I guess, and an image URL,

29
00:01:54.951 --> 00:02:00.416
maybe, we'll see, or an image as a string,
something like that.

30
00:02:00.416 --> 00:02:02.576
By the way you have the code,

31
00:02:02.576 --> 00:02:07.355
the companion website as well in
case you wanna copy and paste.

32
00:02:09.884 --> 00:02:12.670
Let's see here we have the product,
and the category,

33
00:02:12.670 --> 00:02:15.080
we're going to write in a minute.

34
00:02:15.080 --> 00:02:18.650
Also, maybe it's time to talk
about this for a minute.

35
00:02:18.650 --> 00:02:23.819
So the image that is coming from
the server, we haven't seen the Jason,

36
00:02:23.819 --> 00:02:29.800
the API yet, but it's a relative image,
it's not a full qualified URL, okay?

37
00:02:29.800 --> 00:02:32.784
So, something that you
can do in a structure and

38
00:02:32.784 --> 00:02:36.150
classes is to create compute properties.

39
00:02:36.150 --> 00:02:43.430
A compute property is a property where we
set the data immediately after like this.

40
00:02:43.430 --> 00:02:47.757
So, I'm saying that I will
have an image URL in Swift,

41
00:02:47.757 --> 00:02:51.897
we do have a class called URL
that represents a URL and

42
00:02:51.897 --> 00:02:55.300
you can construct the class from a string.

43
00:02:56.330 --> 00:03:02.107
So, I can construct the URL with this URL,
okay?

44
00:03:02.107 --> 00:03:08.830
In this URL the real image
will be available, okay?

45
00:03:08.830 --> 00:03:10.550
Does it make sense?.

46
00:03:10.550 --> 00:03:17.529
And categories, we'll probably
have is in structure category,

47
00:03:17.529 --> 00:03:24.040
will have a name, like bar name,
and an array of products.

48
00:03:24.040 --> 00:03:26.540
How do you set a array?

49
00:03:26.540 --> 00:03:33.520
It's, Brackets and then the type inside.

50
00:03:33.520 --> 00:03:35.470
So, an array of products.

51
00:03:36.670 --> 00:03:42.322
If you say it an array with bar, it's
immutable array, so I can add elements,

52
00:03:42.322 --> 00:03:48.250
remove elements, if you send an array
with length, it's an immutable element.

53
00:03:50.455 --> 00:03:51.148
Okay?

54
00:03:51.148 --> 00:03:52.590
Like that.

55
00:03:52.590 --> 00:03:56.076
I think I'm happy with that,
that's my model, okay?

56
00:03:56.076 --> 00:04:00.730
So, but it's not just the model
because yeah, we have the model.

57
00:04:00.730 --> 00:04:03.690
So we have I think it's pretty
similar to what I have here.

58
00:04:03.690 --> 00:04:10.559
Now that we have the model, we can
update our product item a little bit.

59
00:04:10.559 --> 00:04:14.025
Product item is a view,
remember that view,

60
00:04:14.025 --> 00:04:19.601
the view that we have there,
that is rendering one item, just one item.

61
00:04:19.601 --> 00:04:25.228
Well now that we do have like
let's say the container for

62
00:04:25.228 --> 00:04:31.692
the data, we can create a dependency
because to render an item,

63
00:04:31.692 --> 00:04:36.860
I have a dependency on the product itself,
right?

64
00:04:36.860 --> 00:04:37.770
Make sense?

65
00:04:37.770 --> 00:04:43.142
So, I need to create
a variable that can be called

66
00:04:43.142 --> 00:04:48.918
product of type product,
oops, that's the type.

67
00:04:48.918 --> 00:04:53.987
And then instead of Dami mash or
instead of product name,

68
00:04:53.987 --> 00:04:56.849
I just need to say product name.

69
00:04:56.849 --> 00:05:03.694
Instead of this,
I can keep the dollar sign,

70
00:05:03.694 --> 00:05:09.640
then use this kind of interpolation and

71
00:05:09.640 --> 00:05:12.714
say product price.

72
00:05:12.714 --> 00:05:14.620
And what about the image?

73
00:05:14.620 --> 00:05:17.391
I wanna download the image, right?

74
00:05:17.391 --> 00:05:19.240
From a server.

75
00:05:19.240 --> 00:05:24.890
Fortunately for us, Swift UI has another
version, another view called Async image.

76
00:05:26.460 --> 00:05:31.124
That instead of receiving an image
name from my bundle, from my package,

77
00:05:31.124 --> 00:05:32.340
it receives a URL.

78
00:05:34.310 --> 00:05:40.117
So, in case you missed that,
I have just added Async prefix,

79
00:05:40.117 --> 00:05:43.927
so Async image is just a different view.

80
00:05:43.927 --> 00:05:49.628
And instead of Dami image,
now I need to take the image URL,

81
00:05:49.628 --> 00:05:54.999
that is the compute property
that I said before, okay?

82
00:05:54.999 --> 00:05:55.518
Makes sense?

83
00:05:55.518 --> 00:06:01.308
The only difference is that it says
it's missing on, oops, the argument.

84
00:06:01.308 --> 00:06:04.310
I don't know why it's,
okay, now it's working.

85
00:06:04.310 --> 00:06:09.693
You need to add URL column because
that's how they set the initializer.

86
00:06:11.068 --> 00:06:16.210
So now it's going to download
that URL from the network.

87
00:06:17.260 --> 00:06:20.981
The problem now is that we have an error
in the preview, first time we have

88
00:06:20.981 --> 00:06:24.650
an error in the preview, because
the previews are actually compiled.

89
00:06:25.920 --> 00:06:30.582
It says, hey,
I cannot render a product item without

90
00:06:30.582 --> 00:06:33.596
an actual product, makes sense?

91
00:06:33.596 --> 00:06:38.450
Because now we have
a dependency on a product.

92
00:06:38.450 --> 00:06:42.209
So, what I need to do
here is to create a dummy

93
00:06:42.209 --> 00:06:46.520
product object with all the properties,
okay?

94
00:06:46.520 --> 00:06:54.092
So it can be render, dummy, rather four,
short for the preview, okay?

95
00:06:54.092 --> 00:06:55.380
Makes sense?

96
00:06:55.380 --> 00:06:57.888
An image bag, and put an empty image.

97
00:07:00.090 --> 00:07:05.063
I can use a real image but
we don't see them now.

98
00:07:05.063 --> 00:07:10.033
Okay, so, it gave me an error
here building the scheme you can

99
00:07:10.033 --> 00:07:14.500
see it's saying,
fail to build blah blah blah.

100
00:07:14.500 --> 00:07:17.238
If you click diagnostic we can
actually see what's going on.

101
00:07:17.238 --> 00:07:21.597
It's really small, so it says,

102
00:07:21.597 --> 00:07:28.500
missing arguments for product in call.

103
00:07:28.500 --> 00:07:32.749
I think this is the old version,
Of this, or

104
00:07:32.749 --> 00:07:38.672
it gave me an error because actually
the project is not compiling now.

105
00:07:38.672 --> 00:07:42.760
So, sometimes, pay attention
here because this is important.

106
00:07:42.760 --> 00:07:45.648
Sometimes you receive
errors in the preview, but

107
00:07:45.648 --> 00:07:49.670
the error is not actually
even from your current file.

108
00:07:49.670 --> 00:07:52.202
Maybe now the pressure is
not compiling anymore,

109
00:07:52.202 --> 00:07:54.900
because you have an error somewhere else.

110
00:07:54.900 --> 00:07:58.750
And the preview says, I cannot preview
these because the app is not running.

111
00:08:00.430 --> 00:08:04.801
In this case if you look
here at the top there,

112
00:08:04.801 --> 00:08:08.713
it says that my brochure has one error and

113
00:08:08.713 --> 00:08:17.500
the error is that in the menu page I'm not
passing a product that is mandatory, okay?

114
00:08:17.500 --> 00:08:22.221
So for now,
I can also create the dummy one because we

115
00:08:22.221 --> 00:08:26.526
are not downloading yet
real products, okay?

116
00:08:30.578 --> 00:08:32.140
Does it make sense?

117
00:08:32.140 --> 00:08:37.800
So now, This should work back and

118
00:08:37.800 --> 00:08:45.260
the product item I mean the previous work,
okay?

119
00:08:45.260 --> 00:08:50.460
With a dummy product, but
now we kind of connected this, okay?

120
00:08:50.460 --> 00:08:51.860
Make sense?

121
00:08:51.860 --> 00:08:52.580
Any question?

122
00:08:55.736 --> 00:08:59.730
We have a data model with
new something else now.

123
00:08:59.730 --> 00:09:05.442
We need something or
someone that will download the data or

124
00:09:05.442 --> 00:09:10.380
will actually do something with the data.

125
00:09:10.380 --> 00:09:15.490
What we need is, here we have a lot
of architectural patterns, actually.

126
00:09:15.490 --> 00:09:18.450
So it depends on how
are you building your app.

127
00:09:18.450 --> 00:09:23.120
There are many architecture pattern
like MVC, MVVM, blah, blah blah.

128
00:09:23.120 --> 00:09:25.520
We are trying to do this
as simple as possible.

129
00:09:25.520 --> 00:09:29.030
So, what I'm going to create here,

130
00:09:29.030 --> 00:09:33.676
it's two other files that
will act as managers,

131
00:09:33.676 --> 00:09:39.250
managers for all the menu and
manager for the cart, okay?

132
00:09:39.250 --> 00:09:42.751
So I'm going to build managers,
what is a manager?

133
00:09:42.751 --> 00:09:46.913
Just a class, and we [INAUDIBLE]
just classes here just to show you

134
00:09:46.913 --> 00:09:50.140
that we can actually use OOP if we want.

135
00:09:50.140 --> 00:09:54.815
So I'm going to create a menu manager.

136
00:09:54.815 --> 00:09:58.068
Again, manager is just
a name that I'm setting,

137
00:09:58.068 --> 00:10:01.900
not an especial thing in Swift,
it's a menu manager.

138
00:10:01.900 --> 00:10:04.520
So I'm going to create here
a class called Menu Manager.

139
00:10:05.660 --> 00:10:10.184
They idea is that it will contain here
the categories, the array of categories,

140
00:10:10.184 --> 00:10:11.388
for example, okay?

141
00:10:11.388 --> 00:10:12.290
That's kind of the idea.

142
00:10:13.630 --> 00:10:22.860
And then I also need, The Cart Manager
that will contain the order.

143
00:10:22.860 --> 00:10:25.210
I can call it Cart Order Manager,
up to you.

144
00:10:26.740 --> 00:10:29.939
Remember, we can add cappuccino or
some frappuccinos to the order,

145
00:10:29.939 --> 00:10:32.088
that's kind of the idea.

146
00:10:32.088 --> 00:10:34.315
Okay?

147
00:10:34.315 --> 00:10:40.993
So, These items will
actually be responsible for

148
00:10:40.993 --> 00:10:45.615
example for downloading the content and
storing the content.

149
00:10:45.615 --> 00:10:49.482
But the next question is how my
Views will access these managers,

150
00:10:49.482 --> 00:10:51.620
okay?does it make sense?

151
00:10:51.620 --> 00:10:55.050
So, let's say that here we
have an array of categories.

152
00:10:55.050 --> 00:10:59.590
So I call this the menu,
we can rename that later.

153
00:10:59.590 --> 00:11:01.500
That is actually in array of category.

154
00:11:03.060 --> 00:11:05.150
And we can create an array here.

155
00:11:05.150 --> 00:11:12.339
So I have an array category with a name,
Let's say Hot Coffee, well,

156
00:11:12.339 --> 00:11:17.135
one category and it brings an array of
products so I can create an array, okay?

157
00:11:17.135 --> 00:11:20.290
Like so with a product.

158
00:11:20.290 --> 00:11:21.718
So I can actually do that.

159
00:11:21.718 --> 00:11:23.410
Okay, I'm in this.

160
00:11:23.410 --> 00:11:27.579
I know we are going to
download this from a server,

161
00:11:27.579 --> 00:11:31.164
but it just works, I can actually do this.

162
00:11:31.164 --> 00:11:37.020
So now I have a menu that has
the category with a couple of products.

