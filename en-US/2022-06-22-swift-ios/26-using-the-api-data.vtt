WEBVTT

1
00:00:00.330 --> 00:00:02.440
So, we know that the data is coming.

2
00:00:02.440 --> 00:00:07.430
The data is being parsed into your
own data model, but right now,

3
00:00:07.430 --> 00:00:09.697
when we look at the menu page,

4
00:00:09.697 --> 00:00:15.254
we're actually rendering just 15
elements that are dummy products.

5
00:00:15.254 --> 00:00:17.600
So we actually need to change this.

6
00:00:17.600 --> 00:00:22.367
So, we need to access our menu manager,
remember the menu manager is the one

7
00:00:22.367 --> 00:00:26.388
that is holding all our the information
about our products, and

8
00:00:26.388 --> 00:00:31.262
it's the one that is actually
downloading the data from the network.

9
00:00:31.262 --> 00:00:35.452
So, we injected this as
an environment object.

10
00:00:35.452 --> 00:00:40.440
So what I need to do is create
an environment object variable here in my

11
00:00:40.440 --> 00:00:43.802
menu page, so
it's going to be a dependency.

12
00:00:44.872 --> 00:00:49.082
Call it menu manager of type menu manager.

13
00:00:49.082 --> 00:00:53.886
Remember, we don't need to create an
instance of it because it's automatically

14
00:00:53.886 --> 00:00:54.730
being taken.

15
00:00:54.730 --> 00:00:58.679
It's like dependency injection that
you have on some kind of that,

16
00:00:58.679 --> 00:01:02.250
someone's going to inject
that dependency for us.

17
00:01:02.250 --> 00:01:06.640
So now, the for each,
it shouldn't be like this.

18
00:01:06.640 --> 00:01:11.186
It should for example, loop through
all the categories that are where?

19
00:01:11.186 --> 00:01:15.648
In menu manager, menumanager.menu,

20
00:01:15.648 --> 00:01:19.630
that's the array of categories.

21
00:01:19.630 --> 00:01:23.824
Let's look at that for a second,
the menu manager has a menu,

22
00:01:23.824 --> 00:01:29.160
there is an array of categories, so
I'm actually going to loop through that.

23
00:01:30.440 --> 00:01:35.484
So, the premise that,
I'm having an error saying that hey,

24
00:01:35.484 --> 00:01:38.685
if you wanna loop through these items,

25
00:01:38.685 --> 00:01:43.156
those items needs to conform
to identifiable, okay?

26
00:01:43.156 --> 00:01:45.495
So that's another protocol.

27
00:01:46.665 --> 00:01:51.946
So in this case, that means that
we need to add another protocol,

28
00:01:51.946 --> 00:01:54.965
it's called identifiable.

29
00:01:54.965 --> 00:01:59.735
Identifiable is forcing us to
have a property with a name ID.

30
00:01:59.735 --> 00:02:03.645
But, this web service has no ID for
the category.

31
00:02:04.755 --> 00:02:09.214
So something that we can do to solve the
problem is we can create IDs on the fly,

32
00:02:09.214 --> 00:02:10.750
it's possible.

33
00:02:10.750 --> 00:02:13.910
Or we can create a property,

34
00:02:13.910 --> 00:02:19.849
a compute property just
returning the name as the ID.

35
00:02:19.849 --> 00:02:23.270
So I'm not duplicating the content,
I'm just,

36
00:02:23.270 --> 00:02:28.082
when someone is asking for
ID, I'm saying, yeah, okay?

37
00:02:28.082 --> 00:02:32.670
So we cannot have two categories
of the same name, okay?

38
00:02:32.670 --> 00:02:34.789
If you're using this technique.

39
00:02:34.789 --> 00:02:40.620
So now going back here, we shouldn't see
the same error here, so that it's gone.

40
00:02:40.620 --> 00:02:42.027
That's the categories.

41
00:02:42.027 --> 00:02:46.310
So now, instead of item we
can call this the category.

42
00:02:47.830 --> 00:02:52.460
So for example, we can render
hear the name of that category.

43
00:02:53.570 --> 00:02:57.445
And after the category name,
what do we need?

44
00:02:57.445 --> 00:02:59.253
We need the products.

45
00:02:59.253 --> 00:03:01.961
And that's another loop, okay?

46
00:03:01.961 --> 00:03:04.348
So this is like a nested loop.

47
00:03:04.348 --> 00:03:09.872
So it's another for
each that will loop through,

48
00:03:09.872 --> 00:03:14.494
in this case, the category.products.

49
00:03:14.494 --> 00:03:17.902
And that will give me a product.

50
00:03:17.902 --> 00:03:19.460
Does it make sense?

51
00:03:19.460 --> 00:03:23.572
And inside each product I
need a navigation link that

52
00:03:23.572 --> 00:03:28.360
goes to a detail page when
you run there a product item.

53
00:03:28.360 --> 00:03:32.480
But instead of a dummy product,
what do I need to add here?

54
00:03:32.480 --> 00:03:34.705
What do I need to use?

55
00:03:34.705 --> 00:03:39.460
The product, is this variable, okay?

56
00:03:40.890 --> 00:03:41.458
Like so.

57
00:03:41.458 --> 00:03:47.639
But it's also complaining that the product
is not conforming to identifiable.

58
00:03:47.639 --> 00:03:50.287
So, we know how to solve the problem, but

59
00:03:50.287 --> 00:03:54.790
in this case it's even easier
because we have already an ID.

60
00:03:54.790 --> 00:04:00.237
So we just need to say that we
are identifiable, and that's all.

61
00:04:00.237 --> 00:04:04.964
So, now, in my menu page,
we shouldn't see any arrows,

62
00:04:04.964 --> 00:04:10.070
we can get a better UI,
change your paddings, and so on.

63
00:04:10.070 --> 00:04:15.117
But from a code point of view,
remember that when you have that problem,

64
00:04:15.117 --> 00:04:19.107
you need to click diagnostic
to see what's the problem.

65
00:04:19.107 --> 00:04:23.502
The problem is, if I zoom in a little bit,
there is a crash report that the previous

66
00:04:23.502 --> 00:04:26.070
missing the environment
object menu manager.

67
00:04:26.070 --> 00:04:30.776
Sure, this is because every time we
have a preview of a view that has

68
00:04:30.776 --> 00:04:33.634
a dependency on an environment object,

69
00:04:33.634 --> 00:04:38.990
we also need to inject that environment
object in the preview, okay?

70
00:04:38.990 --> 00:04:39.783
Remember that.

71
00:04:39.783 --> 00:04:43.070
There are other solutions,
architecture solutions for that.

72
00:04:43.070 --> 00:04:46.150
But yeah, this is the first
day you're working with Swift.

73
00:04:46.150 --> 00:04:51.309
So, let's do the simple way, there's
just here add an environment object and

74
00:04:51.309 --> 00:04:55.090
we're going to create a new
instance of the menu manager.

75
00:04:57.860 --> 00:05:05.462
So now, in the preview, I'm not sure if
you recognize something different now.

76
00:05:05.462 --> 00:05:10.190
If I make this interactive,
walla, we have hot coffee,

77
00:05:10.190 --> 00:05:16.630
black Americano, cappuccino,
macchiato, we have different images.

78
00:05:16.630 --> 00:05:17.919
We didn't have that before.

79
00:05:17.919 --> 00:05:21.590
Then we have snacks, we have different
section for a snack, for tea.

80
00:05:21.590 --> 00:05:24.990
So it seems like, hey,
it's working, right?

81
00:05:24.990 --> 00:05:31.110
I know you were not trusting that this
will work, but it's working, okay?

82
00:05:31.110 --> 00:05:34.270
So, it's actually
downloading all the data,

83
00:05:34.270 --> 00:05:38.310
it's rendering the dynamic async image,
okay?

84
00:05:38.310 --> 00:05:39.931
It works as expected.

85
00:05:39.931 --> 00:05:42.788
Do you have any questions at this point?

86
00:05:42.788 --> 00:05:46.621
So I can make a comment at this point,
it's not ready yet.

87
00:05:46.621 --> 00:05:50.487
We still need to connect some
missing dots but closer.

88
00:05:50.487 --> 00:05:55.370
&gt;&gt; [INAUDIBLE] expensive cuz they
have also zeros just decimal points.

89
00:05:55.370 --> 00:05:57.749
&gt;&gt; Well, we went on to solve that.

90
00:05:57.749 --> 00:06:00.903
So, the problem is the price, okay?

91
00:06:00.903 --> 00:06:06.880
The price is a double and as you can see
here, it looks like a Bitcoin decimal.

92
00:06:08.250 --> 00:06:10.425
So, we need to solve that problem.

93
00:06:10.425 --> 00:06:13.410
Unfortunately, it's not so complicated.

94
00:06:13.410 --> 00:06:14.581
First, where is that problem?

95
00:06:14.581 --> 00:06:16.910
That problem is in product item.

96
00:06:18.110 --> 00:06:20.260
In product item,
we are rendering one item.

97
00:06:20.260 --> 00:06:24.822
And in fact we can see the problem
here in the previous one, okay?

98
00:06:24.822 --> 00:06:26.540
So, how to solve the problem quickly?

99
00:06:26.540 --> 00:06:30.325
There are number four models and
lots of things that we can do.

100
00:06:30.325 --> 00:06:34.789
But when we have this template string,

101
00:06:34.789 --> 00:06:40.618
we can add a second argument
with some properties.

102
00:06:40.618 --> 00:06:42.924
And one is called a specifier.

103
00:06:42.924 --> 00:06:48.125
And here we can do
something like this %-.2f.

104
00:06:50.461 --> 00:06:53.204
Okay it's giving me an error, see.

105
00:06:53.204 --> 00:06:58.844
Okay so %.2f, it's taking the float,
it's taking the value and

106
00:06:58.844 --> 00:07:03.410
saying .2 there's only
two decimals as a float.

107
00:07:03.410 --> 00:07:07.828
So now even in the preview,
we can see it looks better.

108
00:07:07.828 --> 00:07:11.736
And now if we go to the menu page and
wait for it,

109
00:07:11.736 --> 00:07:16.057
let's increase here the font
size in the preview.

110
00:07:16.057 --> 00:07:22.997
We can see that we have just solved
the problem of the float, okay?

111
00:07:22.997 --> 00:07:23.643
Makes sense.

112
00:07:23.643 --> 00:07:28.012
So, there are more ways
to solve the problem, but

113
00:07:28.012 --> 00:07:30.830
this was I think, pretty good.

114
00:07:32.140 --> 00:07:35.493
So the problem that we have now is
that if I get into the product,

115
00:07:35.493 --> 00:07:37.470
let's zoom out a little bit.

116
00:07:37.470 --> 00:07:40.060
This is still dummy, okay?

117
00:07:40.060 --> 00:07:47.180
So, that's because the details page is
not actually receiving a product, okay?

118
00:07:47.180 --> 00:07:48.146
So we need to solve that.

119
00:07:48.146 --> 00:07:51.482
We need a dependency, we need a variable,

120
00:07:51.482 --> 00:07:57.244
not a state variable because one detail
page is not changing the product.

121
00:07:57.244 --> 00:07:59.110
The product is coming from the outside,
okay?

122
00:07:59.110 --> 00:08:01.815
Like an input property.

123
00:08:01.815 --> 00:08:04.735
So, it's just a normal variable, and

124
00:08:04.735 --> 00:08:09.435
they're going to call this
variable product of type product.

125
00:08:10.665 --> 00:08:12.885
And I will make it mandatory,
so not optional.

126
00:08:14.250 --> 00:08:16.698
But anyways, as we go through here,
we need this to be public.

127
00:08:16.698 --> 00:08:19.310
We don't need to stay public
because that's the default.

128
00:08:19.310 --> 00:08:23.570
But most of the time, it's a good idea to
make state variables as private, okay?

129
00:08:23.570 --> 00:08:25.260
So have that in mind.

130
00:08:25.260 --> 00:08:28.841
I don't wanna add too much
information to your brains today, but

131
00:08:28.841 --> 00:08:30.610
that's kind of good practice.

132
00:08:31.740 --> 00:08:34.413
So, anyway, when you have the product and

133
00:08:34.413 --> 00:08:39.180
because we have the product now we
can change image with a sync image.

134
00:08:39.180 --> 00:08:43.363
So we can go and
download these from the network, and

135
00:08:43.363 --> 00:08:48.894
that we're receiving the URL and
we're going to take the image URL.

136
00:08:48.894 --> 00:08:52.130
For the product name, it's product.name.

137
00:08:52.130 --> 00:08:55.625
Then we have the price here, and
we can do the same as before.

138
00:08:55.625 --> 00:08:59.285
We do product.price,

139
00:09:02.734 --> 00:09:08.876
Ctrl+space or Esc is going to help you
to actually access all the options,

140
00:09:08.876 --> 00:09:15.032
all we can just copy and paste from
the orders page or from the product item.

141
00:09:15.032 --> 00:09:18.877
Then sub total, now we do have a price.

142
00:09:18.877 --> 00:09:22.552
So can we do something magic here,

143
00:09:22.552 --> 00:09:28.120
instead of 425, we can add an expression.

144
00:09:28.120 --> 00:09:32.848
That is going to be the quantity
that if you remember,

145
00:09:32.848 --> 00:09:39.840
it's actually a property of the state
variable multiplied by the price.

146
00:09:39.840 --> 00:09:45.918
And also we can use the same
float to the specifier, okay?

147
00:09:45.918 --> 00:09:49.539
So now it's complaining because Swift
is kind of tricky at this point.

148
00:09:49.539 --> 00:09:54.048
JavaScript will never complain about this,
but the price is double, and

149
00:09:54.048 --> 00:09:56.310
the quantity is an integer.

150
00:09:56.310 --> 00:10:00.974
So it's saying, hey, I cannot multiply
these types, but we know it's simple,

151
00:10:00.974 --> 00:10:04.750
we can convert the quantity to double,
I made that happen.

152
00:10:04.750 --> 00:10:08.455
And to do that,
we use just a double constructor,

153
00:10:08.455 --> 00:10:11.818
we pass the integer and
that makes the trick.

154
00:10:14.482 --> 00:10:21.597
Okay, so, now if we resume the preview,
we have a problem.

155
00:10:21.597 --> 00:10:26.685
The problem is that yeah,
we are missing the argument

156
00:10:26.685 --> 00:10:34.158
because now we have to set the product,
where in many places for example here.

157
00:10:34.158 --> 00:10:38.839
Now, the details page
needs a product object.

158
00:10:38.839 --> 00:10:40.110
Does it makes sense.

159
00:10:40.110 --> 00:10:41.690
So I need to provide one.

160
00:10:41.690 --> 00:10:45.769
So, [COUGH] I need to pass one that
I can create here on the file or

161
00:10:45.769 --> 00:10:49.150
I can have another file
with dummy products for us.

162
00:10:50.610 --> 00:10:53.646
But that this is a dummy product.

163
00:10:53.646 --> 00:11:00.110
The same go well no emish, but
also probably the previous not gonna work.

164
00:11:00.110 --> 00:11:03.935
Let's see, because we are still
having an error in the whole project,

165
00:11:03.935 --> 00:11:04.907
not in this file.

166
00:11:04.907 --> 00:11:08.477
Remember that when you're
receiving error in the preview,

167
00:11:08.477 --> 00:11:10.789
it's not always because of this file.

168
00:11:10.789 --> 00:11:13.731
It may be something that is wrong
in the rest of the project.

169
00:11:13.731 --> 00:11:17.787
And that's because the menu page,
it's also asking for

170
00:11:17.787 --> 00:11:19.825
the product is an argument.

171
00:11:19.825 --> 00:11:25.373
So we need to pass the product now
as an argument, because we said so,

172
00:11:25.373 --> 00:11:32.190
which says that the details page needs as
a dependency a brother, okay makes sense.

173
00:11:33.730 --> 00:11:37.743
So, now I can build command B bills.

174
00:11:37.743 --> 00:11:42.949
So now the details page
preview should work,

175
00:11:42.949 --> 00:11:48.830
it says dummy so
it's working and look at this.

176
00:11:48.830 --> 00:11:51.779
I will increase this and

177
00:11:51.779 --> 00:11:56.649
automatically my total works, okay?

178
00:11:56.649 --> 00:11:58.604
So it's working.

