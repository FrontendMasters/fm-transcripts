WEBVTT

1
00:00:00.580 --> 00:00:05.620
Good morning, welcome to Introduction
to Swift and iOS app development.

2
00:00:05.620 --> 00:00:10.455
My name is Maximiliano,
I can go by Max, straight on Twitter.

3
00:00:10.455 --> 00:00:15.521
We are going to spend today creating
an app on iOS with Swift and

4
00:00:15.521 --> 00:00:18.064
a framework known as Swift UI.

5
00:00:18.064 --> 00:00:22.990
Actually, really really quickly,
I am a mobile web developer.

6
00:00:22.990 --> 00:00:27.363
So I have been doing web
development since 1996 and

7
00:00:27.363 --> 00:00:30.700
mobile app development since 2001.

8
00:00:30.700 --> 00:00:32.560
That's of course before the iPhone.

9
00:00:32.560 --> 00:00:35.250
So the iPhone appeared in 2007.

10
00:00:35.250 --> 00:00:38.860
So was doing, when the iPhone
appeared I was doing mobile app, so

11
00:00:38.860 --> 00:00:41.130
the time in other platforms.

12
00:00:41.130 --> 00:00:46.091
So my experience in iOS
started actually the year

13
00:00:46.091 --> 00:00:50.540
where the App Store and the SDK appear.

14
00:00:50.540 --> 00:00:52.900
So I have published around 40 apps.

15
00:00:52.900 --> 00:00:55.370
Most of these apps were actually for
clients.

16
00:00:57.360 --> 00:00:59.265
I have a certain doing objective C,

17
00:00:59.265 --> 00:01:03.070
that was actually the way to create
apps back in the original days.

18
00:01:03.070 --> 00:01:07.270
It is still there, but
now we are going to focus on Swift.

19
00:01:07.270 --> 00:01:10.720
So I have a start doing Swift, 2017.

20
00:01:10.720 --> 00:01:16.830
SwiftUI, the framework that we are going
to, we working on today, a few years ago.

21
00:01:16.830 --> 00:01:22.609
Actually, I have this is
the worship on IOS number 99.

22
00:01:22.609 --> 00:01:27.880
Okay, from my experience, so I've been
doing this for a while as you can see.

23
00:01:27.880 --> 00:01:31.590
So let's jump directly into the worship.

24
00:01:31.590 --> 00:01:35.030
So we are going to be
covering the basics of Swift.

25
00:01:35.030 --> 00:01:39.283
So Swift as a language,
then Xcode, that's the ID and

26
00:01:39.283 --> 00:01:44.473
SwiftUI that's the framework that
we are going to be using today.

27
00:01:44.473 --> 00:01:48.726
We're going to see how to test and
debug our app, the user interface, so

28
00:01:48.726 --> 00:01:50.765
how user interface works with UI.

29
00:01:50.765 --> 00:01:55.385
So we're going to create some screens,
we're going to create an actual app,

30
00:01:55.385 --> 00:01:57.416
I will show you the app in a minute.

31
00:01:57.416 --> 00:02:00.388
We are going to see how to navigate
between screens using different

32
00:02:00.388 --> 00:02:01.030
techniques.

33
00:02:01.030 --> 00:02:05.980
And for that we're going to be focusing
on iOS design pattern that may not

34
00:02:05.980 --> 00:02:09.300
be the same on other
platforms such as Android.

35
00:02:09.300 --> 00:02:12.697
So we're going to be focusing
on iOS app development today.

36
00:02:12.697 --> 00:02:16.440
We're going to see how to work
with data with Swift and swiftUI.

37
00:02:16.440 --> 00:02:18.000
So how data binding works.

38
00:02:19.040 --> 00:02:22.090
Then we're going to
connect with Web Services.

39
00:02:22.090 --> 00:02:25.640
And we're going to also
bridge to a web app.

40
00:02:25.640 --> 00:02:30.215
In case you're a web developer, and
you wanna connect or you wanna merge

41
00:02:30.215 --> 00:02:34.940
somehow a native app with your web app,
we're going to see how to do that.

42
00:02:34.940 --> 00:02:38.560
So how do you bridge
Swift with JavaScript?

43
00:02:38.560 --> 00:02:40.090
That's the goal.

44
00:02:40.090 --> 00:02:45.420
So prerequisites, so
you need a Mac, and you need Xcode.

45
00:02:45.420 --> 00:02:50.197
Unfortunately, we don't have a way
to create swift iOS applications on

46
00:02:50.197 --> 00:02:52.130
other operating systems.

47
00:02:52.130 --> 00:02:54.910
So actually you need to go and
download Xcode.

48
00:02:54.910 --> 00:02:58.728
Xcode is a free application available
in the app store on your Mac.

49
00:02:58.728 --> 00:03:02.784
So we have a Mac computer, you just
go to the App Store and search for

50
00:03:02.784 --> 00:03:04.094
Xcode, it's free.

51
00:03:04.094 --> 00:03:07.893
It takes a while, okay, to download and
also to install the app,

52
00:03:07.893 --> 00:03:10.186
it takes actually a couple of minutes.

53
00:03:10.186 --> 00:03:15.770
Also we have a companion or website that's
the URL firtmam.github.io/intro-swift.

54
00:03:15.770 --> 00:03:20.461
There you will find some code
that I will be coding later and

55
00:03:20.461 --> 00:03:25.076
also some links on assets that
I will show you in a minute.

56
00:03:25.076 --> 00:03:29.478
Okay, I will show you this URL
a couple of times anyway, and so

57
00:03:29.478 --> 00:03:34.490
no worries but if you wanna bookmark
that URL, that's a good idea.

58
00:03:34.490 --> 00:03:37.129
So in terms of prerequisites
of your know how or

59
00:03:37.129 --> 00:03:41.810
knowledge that I'm expecting you to know,
any programming language will work.

60
00:03:41.810 --> 00:03:45.723
So if you have experience with JavaScript,
if you have experience with Java,

61
00:03:45.723 --> 00:03:47.900
or Kotlin, that will be enough.

62
00:03:47.900 --> 00:03:51.281
Okay, so you don't need to
have experience on IOS, or

63
00:03:51.281 --> 00:03:53.860
in this specific language, Swift.

64
00:03:53.860 --> 00:03:58.640
So if you've kept JavaScript basic
knowledge, that will be good enough.

65
00:03:58.640 --> 00:04:03.160
So, this is worship for frontend masters.

66
00:04:03.160 --> 00:04:07.360
So, let's look a little bit
about the frontend map today.

67
00:04:07.360 --> 00:04:12.257
So if you're doing frontend, most of
the time, we're talking about the web,

68
00:04:12.257 --> 00:04:16.830
but actually today, we have also
this idea of creating an ad client.

69
00:04:16.830 --> 00:04:19.310
So sometimes we have a backend of course.

70
00:04:19.310 --> 00:04:21.082
And then we have a website or

71
00:04:21.082 --> 00:04:25.760
a PWA, a progressive web app,
and we have native clients, okay?

72
00:04:25.760 --> 00:04:30.490
Today we're going to be focusing
on native clients, okay?

73
00:04:30.490 --> 00:04:34.891
We are going to be creating
native clients, okay?

74
00:04:34.891 --> 00:04:40.533
When you pick that kind of app
development, today you have two ways,

75
00:04:40.533 --> 00:04:45.415
you can use official SDK or
you can use cross platform SDKs.

76
00:04:45.415 --> 00:04:50.024
Cross-platform SDK are for
example, react native, flutter,

77
00:04:50.024 --> 00:04:53.110
native script, summary, and so on.

78
00:04:53.110 --> 00:04:55.970
Today we're going to be
focusing on the official SDKs.

79
00:04:56.970 --> 00:05:00.817
From the official SDKs of course
every platform has its own toolkit,

80
00:05:00.817 --> 00:05:04.150
language of course we will be
focusing on Apple platforms.

81
00:05:04.150 --> 00:05:07.405
As you can see here I'm
not saying iOS yet,

82
00:05:07.405 --> 00:05:10.662
because actually within the Apple world,

83
00:05:10.662 --> 00:05:17.360
we have a lot of operating systems with
its own unique features and abilities.

84
00:05:17.360 --> 00:05:21.810
And today we're going to
be focused on iOS, okay?

85
00:05:21.810 --> 00:05:26.000
So iOS that's iPhone, and
a little bit of iPod Touch.

86
00:05:26.000 --> 00:05:30.428
No one cares about that budget typically,
but it's also there, it's also using iOS.

87
00:05:30.428 --> 00:05:36.594
However, what we're going to be building
will also be compatible with iPad OS,

88
00:05:36.594 --> 00:05:41.138
because iOS and iPad OS are still
kind of the same platform.

89
00:05:41.138 --> 00:05:45.476
But we're not going to spend
time because we don't have more

90
00:05:45.476 --> 00:05:49.316
time to actually see specific
things about the iPad.

91
00:05:49.316 --> 00:05:54.527
Or how to take advantage of some or
the largest screen or

92
00:05:54.527 --> 00:05:59.302
actually some iPad specific situations,
okay?

93
00:05:59.302 --> 00:06:03.720
But it's going to be compatible
with iPad that's how we mind that.

94
00:06:03.720 --> 00:06:08.970
And inside iOS official,
Native Client develop Comment,

95
00:06:08.970 --> 00:06:13.385
today, we can pick three
families of languages.

96
00:06:14.385 --> 00:06:19.445
So objective C, Swift, or C, or C++.

97
00:06:19.445 --> 00:06:24.145
So actually from the official ID's,
you can use any of these languages.

98
00:06:24.145 --> 00:06:27.765
As you probably know, at this point,
because of the title of this course,

99
00:06:27.765 --> 00:06:29.780
we will be focusing on Swift.

100
00:06:29.780 --> 00:06:33.454
But Have in mind that when you
are creating a Swift application,

101
00:06:33.454 --> 00:06:35.550
you can actually mix and match.

102
00:06:35.550 --> 00:06:40.439
So you can actually have some parts of
your app written in Swift, and some parts

103
00:06:40.439 --> 00:06:46.540
of your app written in C, C++, Objective C
or even something known as Objective C++.

104
00:06:46.540 --> 00:06:48.630
It doesn't matter what
it is at this point.

105
00:06:48.630 --> 00:06:52.120
But you can actually mix these.

106
00:06:52.120 --> 00:06:56.340
And within Swift,
also we need to pick a UI framework.

107
00:06:57.370 --> 00:07:03.924
So right now inside Apple official
SDKs platform, we can use UI kit,

108
00:07:03.924 --> 00:07:10.200
let's say that's kind of
the classic UI kit frame work.

109
00:07:10.200 --> 00:07:13.081
Then we have a Sprite kit that's more for

110
00:07:13.081 --> 00:07:17.911
games, if you wanna create games or
kind of 2D or 3D experiences,

111
00:07:17.911 --> 00:07:23.730
also there are more frameworks like AR
kit for a mental reality and so on.

112
00:07:23.730 --> 00:07:30.762
And SwiftUI, SwiftUI is the new UI
framework available from Apple.

113
00:07:30.762 --> 00:07:33.333
We are going to be focusing on SwiftUI,
okay?

114
00:07:33.333 --> 00:07:38.946
So this is the new way to create apps,
of course you are UIKit

115
00:07:38.946 --> 00:07:43.899
is still there, but
UIKit was created in 2008.

116
00:07:43.899 --> 00:07:47.622
Yeah, it was modernized
some things over the years,

117
00:07:47.622 --> 00:07:51.370
but it's still some kind
of fun old framework.

118
00:07:51.370 --> 00:07:54.440
Okay, so on SwiftUI is brand new.

119
00:07:54.440 --> 00:07:59.159
And if you're coming from web
frameworks such as react,

120
00:07:59.159 --> 00:08:05.000
Angular Vue js, belty, and so
on, you will see familiar ideas.

121
00:08:05.000 --> 00:08:08.980
So it's actually similar
to these web frameworks.

122
00:08:08.980 --> 00:08:12.784
Okay, it's using reactive programming,
data binding and

123
00:08:12.784 --> 00:08:17.010
the same idea of creating components and
things on the screen.

124
00:08:17.010 --> 00:08:20.770
Okay, so you will feel at home there.

125
00:08:20.770 --> 00:08:25.468
So this is what we're going
to be covering today.

126
00:08:25.468 --> 00:08:31.930
Okay, so because we are covering already
using SwiftUI and Swift, actually.

127
00:08:31.930 --> 00:08:36.608
What we are going to be covering is also
somehow compatible with all the Apple

128
00:08:36.608 --> 00:08:41.240
platform because SwiftUI it's
actually multi platform.

129
00:08:41.240 --> 00:08:43.995
We're not going to be
focusing on that today, but

130
00:08:43.995 --> 00:08:47.630
how many mind that every single
we're going to see today.

131
00:08:47.630 --> 00:08:52.684
Will also be,
let's say 90% compatible with watchOS for

132
00:08:52.684 --> 00:08:57.000
the Apple Watch, tvOS for
the Apple TV, okay?

133
00:08:57.000 --> 00:08:58.630
And macOS.

134
00:08:58.630 --> 00:09:01.546
So you can re-use the same, let's say for

135
00:09:01.546 --> 00:09:05.930
now components that we are going
to create on all the platforms.

136
00:09:05.930 --> 00:09:09.292
But we are not going to
cover those differences or

137
00:09:09.292 --> 00:09:13.474
how to compile the app for
those specific platforms, okay?

138
00:09:13.474 --> 00:09:18.094
But the the experience that you will
get from today it's also useful for

139
00:09:18.094 --> 00:09:20.755
the other Apple platforms, okay?

140
00:09:20.755 --> 00:09:24.030
Do you have any questions at this point?

141
00:09:24.030 --> 00:09:25.315
Yeah.

142
00:09:25.315 --> 00:09:29.683
&gt;&gt; What would be a reason that would
draw someone to Objective C or C and

143
00:09:29.683 --> 00:09:34.485
C++ family over Swift and
like why swift over those two things?

144
00:09:34.485 --> 00:09:37.592
&gt;&gt; Okay, so I'm actually Objective C,

145
00:09:37.592 --> 00:09:41.485
I'm not sure if you have
ever seen Objective C.

146
00:09:41.485 --> 00:09:46.540
It's actually, is completely different to
any other language that you're used to.

147
00:09:46.540 --> 00:09:49.770
Okay, unless you have experienced
with a small talk, okay?

148
00:09:49.770 --> 00:09:51.560
It looks completely different.

149
00:09:51.560 --> 00:09:57.500
So, Swift, we're going to see that during
the day but Swift is a modern language.

150
00:09:57.500 --> 00:09:59.816
Let's say that it looks like
JavaScript if you want,

151
00:09:59.816 --> 00:10:01.870
okay from that sort of point of view.

152
00:10:01.870 --> 00:10:08.480
So it looks modern, it's not giving up
a lot of work, to actually make an app.

153
00:10:08.480 --> 00:10:13.440
Objective C, for example,
just to give you a one quick sample.

154
00:10:13.440 --> 00:10:17.020
In Objective C, you cannot concatenate
the strings with a plus sign.

155
00:10:18.300 --> 00:10:21.010
Okay, so, just an example.

156
00:10:21.010 --> 00:10:25.892
However, there are still a lot of apps
in Objective C, mostly those apps were

157
00:10:25.892 --> 00:10:31.060
written like 10 years ago before Swift
appear, and they're still there.

158
00:10:31.060 --> 00:10:33.200
Okay, you still need to
maintain those apps.

159
00:10:33.200 --> 00:10:38.504
And I mean, the company didn't make the
decision to actually create the app again,

160
00:10:38.504 --> 00:10:42.613
but because you can actually create
new parts of the app in Swift,

161
00:10:42.613 --> 00:10:45.500
and actually call Objective C code.

162
00:10:45.500 --> 00:10:50.388
You can continue using Objective C,
but in the past five years or so,

163
00:10:50.388 --> 00:10:54.450
I think I've done only one or
two Objective C workshops.

164
00:10:55.670 --> 00:10:59.655
So there are still some
companies using Objective C and

165
00:10:59.655 --> 00:11:04.248
requesting Objective C developers,
but it's for only 5% or

166
00:11:04.248 --> 00:11:09.120
less than 5% of the audience in
terms of iOS development, okay?

167
00:11:09.120 --> 00:11:14.158
So, in terms of C and C++, most of
the time it's because you are using or

168
00:11:14.158 --> 00:11:18.871
you have code that you are sharing
with Android or with Windows that is

169
00:11:18.871 --> 00:11:24.030
also written in C, or you have some
libraries, within the company.

170
00:11:24.030 --> 00:11:28.527
Now, you have some codex library,
decodex, or decoders or

171
00:11:28.527 --> 00:11:33.909
some things around cryptographic
libraries they already written in C,

172
00:11:33.909 --> 00:11:36.040
so you just use them, okay?

173
00:11:36.040 --> 00:11:39.304
But to be honest if you're
doing an app what we typically

174
00:11:39.304 --> 00:11:44.025
know is an app with a list and some some
screens, you're not gonna use C for that,

175
00:11:44.025 --> 00:11:46.680
it's actually more complicated.

176
00:11:46.680 --> 00:11:50.940
Because the UI frameworks
are actually not available from C.

177
00:11:50.940 --> 00:11:54.243
So it's actually not
simpler by the way SwiftUI,

178
00:11:54.243 --> 00:11:57.250
the UI framework that we're going to use.

179
00:11:57.250 --> 00:11:59.881
It's only available from Swift.

180
00:11:59.881 --> 00:12:04.784
UIKit, the other one, let's say
the classic one is available from

181
00:12:04.784 --> 00:12:08.751
our Objective C and
Swift from both languages, okay?

182
00:12:08.751 --> 00:12:10.426
You got a question?

183
00:12:10.426 --> 00:12:16.107
&gt;&gt; In JavaScript we don't have a real OOP
concept, will it be a factor in this?

184
00:12:16.107 --> 00:12:16.796
&gt;&gt; Okay, so

185
00:12:16.796 --> 00:12:22.669
the question is around do we have real
OOP object oriented programming in Swift?

186
00:12:23.830 --> 00:12:29.012
Actually, let's say that if you
compare it with JavaScript,

187
00:12:29.012 --> 00:12:33.802
let's say it's closer to being
an real OOP language, but

188
00:12:33.802 --> 00:12:40.110
it's also it's Swift nature,
it's also different than Java, C#.

189
00:12:40.110 --> 00:12:45.949
And other OOP languages, I know it
similar if you ask the same on Python,

190
00:12:45.949 --> 00:12:51.430
is Python a OOP language, and,
yeah, sometimes it's flexible.

191
00:12:51.430 --> 00:12:55.200
So, let's say that swift also is flexible.

192
00:12:55.200 --> 00:12:57.400
So you can do OOP.

193
00:12:57.400 --> 00:13:01.950
By the way, we are going to see that and
today we are not going to do a lot of OOP,

194
00:13:01.950 --> 00:13:06.576
you're going to see a SwiftUI is not
based on object oriented programming, so

195
00:13:06.576 --> 00:13:08.910
we will focus on a different paradigm.

196
00:13:10.190 --> 00:13:13.410
But you can do OOP if you want, but

197
00:13:13.410 --> 00:13:19.275
have in mind that there is some
flexibility in the language,

198
00:13:19.275 --> 00:13:23.300
that if you are an OOP, like a really fun,

199
00:13:23.300 --> 00:13:29.100
you will find that flexibility
something annoying.

200
00:13:29.100 --> 00:13:34.560
Okay, like you can mess with objects
that you don't own or things like that.

201
00:13:34.560 --> 00:13:35.830
Okay, we will get there.

