WEBVTT

1
00:00:00.060 --> 00:00:02.845
So we are kind of writing HTML, or

2
00:00:02.845 --> 00:00:07.620
more JSX in case you have
experience with react.

3
00:00:07.620 --> 00:00:13.090
We are defining our views
directly in swift code.

4
00:00:13.090 --> 00:00:15.270
Gradients swift structures.

5
00:00:15.270 --> 00:00:18.139
Okay, now because I'm now running.

6
00:00:20.612 --> 00:00:24.860
My view in the simulator,
the preview is paused.

7
00:00:25.870 --> 00:00:28.394
So you can resume that from here.

8
00:00:28.394 --> 00:00:33.238
Resume and
now you can continue using the preview.

9
00:00:33.238 --> 00:00:39.340
So right now I'm breaking this
part known as content view.

10
00:00:39.340 --> 00:00:43.448
But part of the deal here is that
you can create your own views,

11
00:00:43.448 --> 00:00:45.640
your own reusable views.

12
00:00:45.640 --> 00:00:48.096
Think about components.

13
00:00:48.096 --> 00:00:52.759
So what view you a component,
a visual component.

14
00:00:52.759 --> 00:00:55.890
That's kinda idea, yeah question.

15
00:00:57.460 --> 00:01:01.028
&gt;&gt; So thinking about this print
hey you clicked in the debug code,

16
00:01:01.028 --> 00:01:04.810
let's see I deployed it on my phone and
then tapped on that button.

17
00:01:07.460 --> 00:01:11.928
Please wear that might log out,
on my phone.

18
00:01:11.928 --> 00:01:14.611
&gt;&gt; It's log out in the console
the parameters as a user,

19
00:01:14.611 --> 00:01:16.160
you don't see the console.

20
00:01:16.160 --> 00:01:21.080
If you have your phone connected through
USB, you can actually see that console.

21
00:01:21.080 --> 00:01:24.152
So it's for debugging purposes.

22
00:01:24.152 --> 00:01:25.220
Not for the user.

23
00:01:25.220 --> 00:01:28.216
We are going to make something happen now.

24
00:01:28.216 --> 00:01:33.340
Okay, so typically what you want is to
render something different on the screen,

25
00:01:33.340 --> 00:01:36.230
okay and we will do that,
before doing that.

26
00:01:36.230 --> 00:01:38.420
What if we want to change colors?

27
00:01:38.420 --> 00:01:42.705
What if we wanna change palings, machines,

28
00:01:42.705 --> 00:01:46.087
properties, on most UI toolkits,

29
00:01:46.087 --> 00:01:51.289
classic UI toolkits,
typically we have attributes.

30
00:01:51.289 --> 00:01:54.690
Or properties that we said somehow, so for

31
00:01:54.690 --> 00:01:59.601
example if we wanna that Hello
word text in a different color we

32
00:01:59.601 --> 00:02:04.050
are looking for
a property maybe in the constructor or.

33
00:02:05.220 --> 00:02:10.180
Maybe you'll say okay,
let's create a variable with that text,

34
00:02:10.180 --> 00:02:15.142
and let's see if the text has
a property that can change the color or

35
00:02:15.142 --> 00:02:19.410
something like that, but
this is not how swift UI works.

36
00:02:20.440 --> 00:02:27.320
Swift UI worked with something known
as modifiers, what is a modifier?

37
00:02:27.320 --> 00:02:31.507
A modifier is a function
that receives a view and

38
00:02:31.507 --> 00:02:36.110
returns another view, a modified view.

39
00:02:36.110 --> 00:02:41.850
So the idea is that we are not
going to set the color of the text.

40
00:02:41.850 --> 00:02:47.050
We are gonna create another text with
a different color, another structure.

41
00:02:47.050 --> 00:02:53.794
So, text will have a function
that we can search here for

42
00:02:53.794 --> 00:02:59.968
example, foreground color,
foreground color,

43
00:02:59.968 --> 00:03:04.430
receives a color and returns a text.

44
00:03:05.780 --> 00:03:10.300
So it's not more the find the text,
it's not a setter.

45
00:03:10.300 --> 00:03:15.170
It's creating another text structure
as it makes sense for now.

46
00:03:15.170 --> 00:03:17.820
Let's see that in action,
it receives a color.

47
00:03:17.820 --> 00:03:21.022
Okay, so we don't know yet what color is.

48
00:03:21.022 --> 00:03:26.552
What I'm going to do here is,
I'm going to close for a second.

49
00:03:26.552 --> 00:03:31.112
This panel so
we have more space to work on this,

50
00:03:31.112 --> 00:03:37.610
the color accepts if you just
select.it has an some kind of an enum,

51
00:03:37.610 --> 00:03:44.349
so we can pick one of these color like
green and you can see it's green.

52
00:03:44.349 --> 00:03:50.078
But what is important here is to
understand that we are not actually

53
00:03:50.078 --> 00:03:56.319
changing the text, we're creating
a new text thanks to its modifier and

54
00:03:56.319 --> 00:04:00.743
you will understand what
that means in one second.

55
00:04:00.743 --> 00:04:04.790
Look at this, what if we added padding?

56
00:04:04.790 --> 00:04:11.459
How to add a padding to a view through
another modifier, and we can say padding.

57
00:04:14.242 --> 00:04:19.070
Padding is another function,
so it's a function.

58
00:04:21.180 --> 00:04:24.170
That is when applied to
the result of the other function.

59
00:04:24.170 --> 00:04:25.210
So this is a chain.

60
00:04:26.430 --> 00:04:32.950
I'm not sure if you have played with
jQuery in the past or in the present.

61
00:04:32.950 --> 00:04:39.110
Well in jQuery we use these chain thing
where we change different methods.

62
00:04:39.110 --> 00:04:43.214
This is the same idea this is
actually the same line I mean from

63
00:04:43.214 --> 00:04:47.160
an expression point of view,
it's just one expression.

64
00:04:49.180 --> 00:04:51.820
We construct a text.

65
00:04:51.820 --> 00:04:55.860
Then we create another text
with a green foreground color.

66
00:04:55.860 --> 00:05:01.260
And we take that green text and
apply padding, that returns another text.

67
00:05:02.440 --> 00:05:05.730
So every time we modify a view,
we receive another view.

68
00:05:07.960 --> 00:05:11.800
Okay, how do you know all
the modifiers that we have?

69
00:05:11.800 --> 00:05:14.440
Well, of course you can
just check with that.

70
00:05:15.650 --> 00:05:18.525
So every time you apply a modifier
because you receive another view,

71
00:05:18.525 --> 00:05:20.919
you can apply another dot and
execute another function.

72
00:05:22.200 --> 00:05:24.670
So you can actually search here.

73
00:05:24.670 --> 00:05:28.434
Also, if you use again, the library but

74
00:05:28.434 --> 00:05:34.620
now instead of adding a view
I'm going to add modifiers.

75
00:05:34.620 --> 00:05:37.380
This is the list of modifiers, so

76
00:05:37.380 --> 00:05:43.000
I can search modifiers do you
want to change the border.

77
00:05:43.000 --> 00:05:47.570
Do you wanna know let's say corner radius,
we will use that in a minute.

78
00:05:47.570 --> 00:05:50.192
You want using grayscale where
I have just set the color, so

79
00:05:50.192 --> 00:05:51.760
it doesn't make any sense.

80
00:05:51.760 --> 00:05:53.260
But actually, opacity.

81
00:05:54.360 --> 00:05:57.130
From here, I can drive opacity.

82
00:05:57.130 --> 00:06:00.690
I nodded here, like so.

83
00:06:00.690 --> 00:06:04.035
Or I can also drag you to the preview.

84
00:06:04.035 --> 00:06:10.137
If I can take the opacity and drag it to
the preview, it's doing the same thing.

85
00:06:10.137 --> 00:06:13.650
Okay, so
now I can change this value, okay,

86
00:06:13.650 --> 00:06:17.079
this is from zero to
one half strong friend.

87
00:06:17.079 --> 00:06:22.095
Everything here, not everything but
negative 80% of the things

88
00:06:22.095 --> 00:06:28.280
that you can do with the views,
is actually applying the modifier, okay?

89
00:06:28.280 --> 00:06:34.155
So, so far we've seen how to add a
modifier by adding the code, just dot and

90
00:06:34.155 --> 00:06:40.090
look for the function, That modifies
the view or by using the library.

91
00:06:40.090 --> 00:06:45.590
Remember the library is this plus
sign at the top right of the screen.

92
00:06:45.590 --> 00:06:51.710
We have another way we can open
what is known as the inspector.

93
00:06:53.040 --> 00:06:59.190
So using now, command click,
not option click, Command click.

94
00:06:59.190 --> 00:07:03.292
I can command click over the view,
the text.

95
00:07:03.292 --> 00:07:06.250
And I have a lot of options, okay?

96
00:07:06.250 --> 00:07:07.195
A lot of options.

97
00:07:09.935 --> 00:07:14.358
For example,
there is an embed in H-stack that is just

98
00:07:14.358 --> 00:07:17.540
creating an H tag that contains a text.

99
00:07:17.540 --> 00:07:19.760
I will need that, so I will go back.

100
00:07:19.760 --> 00:07:24.064
We will use many of those options,
Command Click,

101
00:07:24.064 --> 00:07:30.460
there is a main conditional,
there is a repeat, what's that?

102
00:07:30.460 --> 00:07:34.618
Let's try, repeat, look at that.

103
00:07:34.618 --> 00:07:40.279
It has a four each,
with something kind of weird that says,

104
00:07:40.279 --> 00:07:45.828
zero to five, and
it's repeating that text five times and

105
00:07:45.828 --> 00:07:53.209
because it's an edge talk, it looks
like this, but I can move this for each.

106
00:07:53.209 --> 00:08:00.599
Within the beanstalk that we have here and
now it looks like that.

107
00:08:00.599 --> 00:08:08.911
So for each he's repeating
the views inside five times.

108
00:08:08.911 --> 00:08:11.384
But anyway, he wasn't looking for that.

109
00:08:11.384 --> 00:08:13.982
Command click again over text.

110
00:08:13.982 --> 00:08:19.474
And there is something that says,
show swift UI inspector,

111
00:08:19.474 --> 00:08:25.950
that can also be trigger by using,
look at those little icons there.

112
00:08:25.950 --> 00:08:28.020
That's control option.

113
00:08:28.020 --> 00:08:33.850
So control option click will automatically
trigger the inspector quicker.

114
00:08:35.680 --> 00:08:36.670
This inspector.

115
00:08:37.990 --> 00:08:42.560
Let me do some work over the text.

116
00:08:42.560 --> 00:08:44.210
For example, I can change the font.

117
00:08:45.360 --> 00:08:48.270
I can say that it's the large title.

118
00:08:49.560 --> 00:08:50.285
Here is the color.

119
00:08:50.285 --> 00:08:52.130
I can change the alignment.

120
00:08:52.130 --> 00:08:56.932
I can change some properties.

121
00:08:56.932 --> 00:09:02.570
These properties are just,
adding or modifying the modifiers.

122
00:09:04.980 --> 00:09:08.440
Again, I'm not explain
you the way to do this.

123
00:09:08.440 --> 00:09:09.090
It's up to you.

124
00:09:10.340 --> 00:09:14.480
If you prefer the inspector, if you prefer
to write code, if you prefer to look

125
00:09:14.480 --> 00:09:18.400
into the library, it's just the same
everything goes to the same place.

126
00:09:19.970 --> 00:09:24.767
So now everything is multi
line foreground purple

127
00:09:24.767 --> 00:09:29.990
large title,
you can see it has a larger font.

128
00:09:29.990 --> 00:09:34.300
So, ctrl option click goes
automatically to the inspector.

129
00:09:35.500 --> 00:09:38.620
And here at the bottom,
it says, add modifier.

130
00:09:40.180 --> 00:09:46.120
So there you can see where
another way to add modifiers and

131
00:09:46.120 --> 00:09:53.070
here have a long large list of
modifiers that you can apply to that.

132
00:09:54.370 --> 00:09:59.749
Again, these are just different ways
to access the list of possibilities.

133
00:10:01.460 --> 00:10:02.846
I know that at this point,

134
00:10:02.846 --> 00:10:07.810
you're still not getting why this is
different from just setting attributes?

135
00:10:07.810 --> 00:10:09.300
Okay, let me show you something.

136
00:10:10.440 --> 00:10:16.050
Instead of foreground color, we can also
play another modifier for the background.

137
00:10:16.050 --> 00:10:19.240
It's not called background color,
it's just background, okay?

138
00:10:19.240 --> 00:10:24.020
But within the background,
we can set an image or we can set a color.

139
00:10:24.020 --> 00:10:27.850
For example, I can set a blue background
color, that's not going to look nice.

140
00:10:30.250 --> 00:10:31.380
Why say yellow?

141
00:10:32.670 --> 00:10:36.053
So do you see anything weird there?

142
00:10:38.056 --> 00:10:43.346
Regarding the padding, for
those of you that are coming from CSS,

143
00:10:43.346 --> 00:10:47.041
there is something weird, what's going on?

144
00:10:50.203 --> 00:10:51.591
Where is the padding?

145
00:10:51.591 --> 00:10:54.757
By the way, I didn't set
the number on the padding, right?

146
00:10:54.757 --> 00:10:56.395
But actually, by default,

147
00:10:56.395 --> 00:11:00.573
it's applying the default padding
that is based on the IOS guidelines.

148
00:11:00.573 --> 00:11:04.298
But if you want you can change the number.

149
00:11:04.298 --> 00:11:09.400
So now we have 30 something,
we don't know the unit yet but

150
00:11:09.400 --> 00:11:15.710
let's say 30 pixels is a pixel but
it's a pixels, so what's wrong?

151
00:11:15.710 --> 00:11:19.100
What about the background
color is it the binary margin?

152
00:11:21.140 --> 00:11:24.060
&gt;&gt; To the padding
the background color stuff.

153
00:11:24.060 --> 00:11:30.210
&gt;&gt; Yeah, so, typically we expect
the background color to appear there.

154
00:11:30.210 --> 00:11:34.690
Well, here you will see
the magic of modifiers.

155
00:11:34.690 --> 00:11:36.990
What if we change the order?

156
00:11:40.891 --> 00:11:46.440
We are not setting properties of our
views, we are creating new views.

157
00:11:46.440 --> 00:11:51.173
So adding the padding, so
creating a view with a padding before

158
00:11:51.173 --> 00:11:56.460
applying the background color or
not will not create the same effect.

159
00:11:58.454 --> 00:12:01.122
Okay, we're not setting properties or
attributes.

160
00:12:01.122 --> 00:12:02.670
We are creating new views.

161
00:12:02.670 --> 00:12:06.920
So the order in which we apply
the modifiers is important.

162
00:12:06.920 --> 00:12:09.450
And look at this,
you cannot do this with CSS.

163
00:12:10.920 --> 00:12:16.580
You can apply padding twice because again,
this is not a setter.

164
00:12:16.580 --> 00:12:18.430
I'm not setting the padding.

165
00:12:18.430 --> 00:12:23.401
I'm creating a new view with a new
padding and after I got the new view,

166
00:12:23.401 --> 00:12:26.695
I can have another view
with another panning.

167
00:12:26.695 --> 00:12:31.213
So, do we have marsh in here is
with you I know we use panning, but

168
00:12:31.213 --> 00:12:34.920
it depends on where you're using padding.

169
00:12:34.920 --> 00:12:36.410
Okay, it's kind of a Martian.

170
00:12:37.930 --> 00:12:42.352
Compare with CSS, okay,
any question at this point?

171
00:12:42.352 --> 00:12:46.916
&gt;&gt; So a lot of views if
you keep adding modifiers,

172
00:12:46.916 --> 00:12:50.553
so is that a performance problem or?

173
00:12:50.553 --> 00:12:55.106
&gt;&gt; No it's not a performance problem
because we are shaft grading structures.

174
00:12:55.106 --> 00:12:59.327
High performance structures, and
yeah, we are copying data but

175
00:12:59.327 --> 00:13:04.062
we are copying integers and strings and-
&gt;&gt; You create them and they can be getting

176
00:13:04.062 --> 00:13:06.817
discarded, right after-
&gt;&gt; They get discarded,

177
00:13:06.817 --> 00:13:09.530
right after we haven't
get into that point.

178
00:13:09.530 --> 00:13:13.120
I mean in terms of do we have
garbage collector in Swift?

179
00:13:13.120 --> 00:13:14.820
The answer is no.

180
00:13:14.820 --> 00:13:18.853
However, we have something
that at the end, I mean for

181
00:13:18.853 --> 00:13:24.041
the basics of Swift it looks like we
have garbage collector but is not.

182
00:13:24.041 --> 00:13:28.037
Is something known as arc, automatic
reference counting that instead of, so

183
00:13:28.037 --> 00:13:31.123
the garbage collector is
something that runs with your app,

184
00:13:31.123 --> 00:13:33.196
it's a process that runs with your app.

185
00:13:33.196 --> 00:13:34.560
This is not the case.

186
00:13:34.560 --> 00:13:38.790
This is a static analyzer
that runs with a compiler.

187
00:13:38.790 --> 00:13:43.880
That kind of for most of the situations
kind of solves the problem.

188
00:13:43.880 --> 00:13:47.880
So, but also, because it's not a class,

189
00:13:47.880 --> 00:13:53.115
it's not actually creating
objects in higher memory.

190
00:13:53.115 --> 00:13:57.868
Just stuck with basically-
&gt;&gt; I'm just thinking if there's this is

191
00:13:57.868 --> 00:14:00.858
like a scope, all this stuff,
so once you exited-

192
00:14:00.858 --> 00:14:01.747
&gt;&gt; Exactly,

193
00:14:01.747 --> 00:14:04.813
when it gets to the final structure.

194
00:14:04.813 --> 00:14:05.478
&gt;&gt; Yeah.

195
00:14:05.478 --> 00:14:08.421
&gt;&gt; That goes to the framework
that finally render-

196
00:14:08.421 --> 00:14:12.510
&gt;&gt; I will clear it right after this.

197
00:14:12.510 --> 00:14:16.170
&gt;&gt; Yeah, so the thing about done,
so this is high performance.

198
00:14:16.170 --> 00:14:19.550
So if the question is about performance,
this is high performance.

199
00:14:19.550 --> 00:14:23.071
I know that from an OOP point of view,
you look at these and says,

200
00:14:23.071 --> 00:14:24.964
yeah, we are creating objects and

201
00:14:24.964 --> 00:14:29.470
objects and objects and objects and
object but that's not the case.

202
00:14:29.470 --> 00:14:35.610
These are not instances of classes, these
are structures that are much simpler.

203
00:14:37.170 --> 00:14:39.180
Okay, that's it make sense?

204
00:14:43.420 --> 00:14:44.620
Do you have any questions at this point?

205
00:14:48.310 --> 00:14:50.966
Nope, nothing on the chat.

206
00:14:50.966 --> 00:14:55.656
Okay, so we are going to delete this and
make something more interesting but

207
00:14:55.656 --> 00:14:58.676
we are just playing with this for
the first time.

208
00:14:58.676 --> 00:15:01.051
&gt;&gt; One question.

209
00:15:01.051 --> 00:15:06.179
&gt;&gt; Is they lost their preview code
trying to follow the inspector

210
00:15:06.179 --> 00:15:11.310
can Can I quickly be shown how
to get the preview back editor?

211
00:15:11.310 --> 00:15:18.201
&gt;&gt; Well, yeah, probably my guess is that
you press for some reason, command return.

212
00:15:18.201 --> 00:15:22.603
Command return hides the premium.

213
00:15:22.603 --> 00:15:24.690
Okay, where's my preview?

214
00:15:24.690 --> 00:15:29.438
So actually,
if you open this little menu that you

215
00:15:29.438 --> 00:15:33.863
have know it's a menu there,
that's a menu.

216
00:15:33.863 --> 00:15:40.108
Okay, so if you click there, there is
a submenu from with apps options for

217
00:15:40.108 --> 00:15:45.981
the editor and here you need to select
Canvas and Canvas is a preview.

218
00:15:45.981 --> 00:15:50.774
And that's how Canvas go can
you get the preview back.

219
00:15:53.839 --> 00:15:56.287
Okay, so you click their Canvas.

