WEBVTT

1
00:00:00.914 --> 00:00:03.817
There is one more thing
before they inform,

2
00:00:03.817 --> 00:00:07.198
that's the last section,
that is pretty simple.

3
00:00:07.198 --> 00:00:10.046
That what if after hitting odd,
I wanna go back.

4
00:00:10.046 --> 00:00:11.072
Okay?

5
00:00:11.072 --> 00:00:14.595
So I wanna go back I when I do this.

6
00:00:14.595 --> 00:00:19.630
Do you understand what
I'm trying to do here?

7
00:00:19.630 --> 00:00:22.350
So if I hit add, I wanna go back.

8
00:00:22.350 --> 00:00:26.540
That's typically the behavior because
if not, you're still on macchiato.

9
00:00:26.540 --> 00:00:29.020
So I don't like that.

10
00:00:29.020 --> 00:00:34.241
So, to make it work, we're going to use,
for the first time and

11
00:00:34.241 --> 00:00:40.163
the last time for today, another
kind of environment variable, okay?

12
00:00:40.163 --> 00:00:44.042
Instead of environment object
we are just going to call

13
00:00:44.042 --> 00:00:47.006
an environment without something else.

14
00:00:47.006 --> 00:00:49.640
Okay, environment, like this.

15
00:00:49.640 --> 00:00:53.418
And we're going to, first I'm not
in the right place so I'm sorry,

16
00:00:53.418 --> 00:00:54.860
I'm going to that again.

17
00:00:56.030 --> 00:00:59.600
So what we need to do,
we need to go to details page.

18
00:00:59.600 --> 00:01:04.281
This is the one that we want and
in details page,

19
00:01:04.281 --> 00:01:08.387
what we need is an environment variable.

20
00:01:08.387 --> 00:01:12.110
It's called and a variable.

21
00:01:12.110 --> 00:01:14.810
And we are going to call this dismiss,
okay?

22
00:01:14.810 --> 00:01:16.670
Just that dismiss.

23
00:01:16.670 --> 00:01:20.406
And okay, it says,
something is missing here.

24
00:01:20.406 --> 00:01:23.679
Well, environment receives an argument.

25
00:01:23.679 --> 00:01:29.930
And we're going to use some special
syntax here, that is called a path.

26
00:01:29.930 --> 00:01:31.770
So forward slash dot.

27
00:01:31.770 --> 00:01:37.640
And here we have a lot of things that we
can read from the context, from the OS.

28
00:01:37.640 --> 00:01:40.574
Okay?
So the time zone, the calendar,

29
00:01:40.574 --> 00:01:45.403
the color scheme so you can know
if you're in dark mode or not and

30
00:01:45.403 --> 00:01:47.696
there is a dismiss function.

31
00:01:47.696 --> 00:01:49.600
It's actually a function.

32
00:01:49.600 --> 00:01:54.795
So with this, you can kind of bring as
a dependency, things from the west,

33
00:01:54.795 --> 00:02:00.656
the screen size, the current orientation,
the current locale, so the language.

34
00:02:00.656 --> 00:02:06.007
And this means, it's something that I
can do then, after adding to the cart.

35
00:02:06.007 --> 00:02:08.350
It's a function actually.

36
00:02:08.350 --> 00:02:10.770
So I can call the function, okay?

37
00:02:10.770 --> 00:02:14.026
So it's a way to inject
things from the US.

38
00:02:14.026 --> 00:02:17.000
So now if I hit add one, it goes back.

39
00:02:17.000 --> 00:02:19.180
&gt;&gt; That's good, just real two quick ones.

40
00:02:19.180 --> 00:02:19.680
&gt;&gt; Yeah.

41
00:02:21.710 --> 00:02:22.690
&gt;&gt; Alamofire.

42
00:02:25.030 --> 00:02:29.630
One question is, is there a reason
why you didn't use like a pot?

43
00:02:30.690 --> 00:02:32.770
Or what's the difference between adding-
&gt;&gt; Okay, so

44
00:02:32.770 --> 00:02:35.311
the question is around crockpots.

45
00:02:35.311 --> 00:02:41.727
So we use, for our dependency, for
Alamofire, we use Swift dependencies.

46
00:02:41.727 --> 00:02:46.442
There is a package manager built in Xcode.

47
00:02:46.442 --> 00:02:52.013
But that package manager didn't exist,
a few years ago.

48
00:02:52.013 --> 00:02:56.150
So the community came with an idea.

49
00:02:56.150 --> 00:02:58.606
Similar to NPM, that is a community base,

50
00:02:58.606 --> 00:03:01.212
originally at least it
was community based.

51
00:03:01.212 --> 00:03:04.618
So one of these solutions
is called CocoaPods, okay?

52
00:03:04.618 --> 00:03:08.930
But it's not created by Apple and
it's not integrated with Xcode.

53
00:03:08.930 --> 00:03:13.578
But it's a solution and I could say
probably the most used solution out there,

54
00:03:13.578 --> 00:03:17.526
for iOS developers, but
because this wasn't available before,

55
00:03:17.526 --> 00:03:21.080
the Swift package manager
was not available before.

56
00:03:21.080 --> 00:03:23.680
So you have CocoaPods,
there is also another one called Carthage.

57
00:03:24.830 --> 00:03:28.730
Okay, so
we use the one that we have Xcode, but

58
00:03:28.730 --> 00:03:34.433
if you wanna use CocoaPods and
add the dependency using CocoaPods,

59
00:03:34.433 --> 00:03:36.174
it's okay, fine
&gt;&gt; And

60
00:03:36.174 --> 00:03:40.670
was there a better benefit of using
Alamo fire versus the native HTTP kind?

61
00:03:40.670 --> 00:03:41.310
&gt;&gt; Less code.

62
00:03:41.310 --> 00:03:42.200
&gt;&gt; I see.

63
00:03:42.200 --> 00:03:47.064
&gt;&gt; Yeah, Alamofire it's actually
using the API from the west anyway.

64
00:03:47.064 --> 00:03:53.584
But it's less code for most of the things
just was, like the Fetch API JavaScript,

65
00:03:53.584 --> 00:03:59.560
compare with the old XML, HTTP request,
just to give you a web comparison.

66
00:04:01.040 --> 00:04:01.660
Okay?

67
00:04:01.660 --> 00:04:02.220
&gt;&gt; One more question.

68
00:04:02.220 --> 00:04:02.930
&gt;&gt; Yeah, sure.

69
00:04:02.930 --> 00:04:04.180
&gt;&gt; Sorry.

70
00:04:04.180 --> 00:04:06.560
The In is still throwing me off,
like crazy.

71
00:04:06.560 --> 00:04:08.110
&gt;&gt; The In, yeah.

72
00:04:08.110 --> 00:04:12.970
So the In,
let me see if I have one somewhere.

73
00:04:12.970 --> 00:04:15.340
No, here we have one in orders page.

74
00:04:16.510 --> 00:04:20.320
So the In were appears, no.

75
00:04:20.320 --> 00:04:24.314
This is going to manual page, here.

76
00:04:24.314 --> 00:04:27.871
So every time you're creating,
this is a closure.

77
00:04:27.871 --> 00:04:30.630
A closure is a function.

78
00:04:30.630 --> 00:04:33.158
The function can receive arguments, okay?

79
00:04:33.158 --> 00:04:36.950
And you need to name those
arguments if you want.

80
00:04:36.950 --> 00:04:41.612
So to name those arguments,
you use the In, before the In,

81
00:04:41.612 --> 00:04:47.320
you map the incoming arguments with names,
with local variable names.

82
00:04:47.320 --> 00:04:50.270
Names.

83
00:04:50.270 --> 00:04:53.595
Again look at this, in,
if you know JavaScript,

84
00:04:53.595 --> 00:04:57.408
this is like in JavaScript,
the example you have there.

85
00:04:57.408 --> 00:05:01.877
Like having a for
each function that receives something,

86
00:05:01.877 --> 00:05:06.169
menu and as a second argument
a function with category.

87
00:05:09.181 --> 00:05:10.210
Okay?

88
00:05:10.210 --> 00:05:15.426
So this category that you set here,
is this category here but

89
00:05:15.426 --> 00:05:19.425
in this case, you put that in there, why?

90
00:05:19.425 --> 00:05:22.763
&gt;&gt; This is the order of the Inconel,
throws you off the sound like in,

91
00:05:22.763 --> 00:05:25.217
I mean it's the-
&gt;&gt; I mean what is weird,

92
00:05:25.217 --> 00:05:29.616
I know it's weird, I got used to it,
but I know it's weird,

93
00:05:29.616 --> 00:05:33.780
is that the signature is
actually after the calibrates.

94
00:05:33.780 --> 00:05:37.799
Because our functions in
JavaScript also have this, but

95
00:05:37.799 --> 00:05:40.940
the name of the arguments goes before.

96
00:05:40.940 --> 00:05:42.650
&gt;&gt; Right.
&gt;&gt; As a prefix.

97
00:05:42.650 --> 00:05:45.750
But here they are in the code book.

98
00:05:45.750 --> 00:05:49.373
And how do you separate
your code from the name of

99
00:05:49.373 --> 00:05:52.420
your argument with the In expression?

100
00:05:52.420 --> 00:05:55.520
&gt;&gt; Did they just make it
probably quick kinda and-

101
00:05:55.520 --> 00:05:57.410
&gt;&gt; By the way, Kotlin and other languages,

102
00:05:57.410 --> 00:05:58.820
they're using the same idea.

103
00:05:58.820 --> 00:06:01.280
Not In, but it's kind of the same thing.

104
00:06:01.280 --> 00:06:05.770
They're also putting this inside
the closure, inside the lambda expression.

105
00:06:05.770 --> 00:06:08.110
So it's kind of a mother and father.

