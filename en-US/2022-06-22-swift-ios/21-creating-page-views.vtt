WEBVTT

1
00:00:00.120 --> 00:00:03.667
Okay, so
we have now an app that looks like an app,

2
00:00:03.667 --> 00:00:07.647
the next step is to actually
create views for each page.

3
00:00:07.647 --> 00:00:12.629
Actually in Swift or SwiftUI,
we don't use the page concept,

4
00:00:12.629 --> 00:00:17.340
but I think that it will become
clearer if we call them page.

5
00:00:17.340 --> 00:00:19.520
That's why I called OffersPage.

6
00:00:19.520 --> 00:00:22.890
But it just need three more pages.

7
00:00:22.890 --> 00:00:23.760
What is the page?

8
00:00:23.760 --> 00:00:24.730
A view.

9
00:00:24.730 --> 00:00:29.830
And at this point,
we have more files here.

10
00:00:29.830 --> 00:00:35.014
So maybe it's time to start creating
subfolders and, by the way, I haven't

11
00:00:35.014 --> 00:00:40.790
mentioned this before, but you can
actually drag these elements as you want.

12
00:00:40.790 --> 00:00:44.220
This is not actually order by name.

13
00:00:44.220 --> 00:00:45.770
You can drag elements.

14
00:00:47.240 --> 00:00:52.250
And this is actually not even a one-to-one
view of the real file system.

15
00:00:52.250 --> 00:00:53.981
It's actually a built-on file system.

16
00:00:53.981 --> 00:00:57.240
So I can create not folder but groups.

17
00:00:57.240 --> 00:00:59.520
You right-click, it's called group.

18
00:00:59.520 --> 00:01:01.108
So I create a new group.

19
00:01:01.108 --> 00:01:05.440
A new group, for example,
I can create one for views.

20
00:01:05.440 --> 00:01:07.110
And I can put here the offer.

21
00:01:08.510 --> 00:01:13.310
And I can create another one for
page views.

22
00:01:13.310 --> 00:01:19.704
Sorry, right-click New Group, Page Views,
they're not just views also, but

23
00:01:19.704 --> 00:01:26.700
just to separate the smaller views, the
smaller components, from the larger ones.

24
00:01:26.700 --> 00:01:32.730
So on Page Views then,
I'm going to put OffersPage, like so.

25
00:01:32.730 --> 00:01:34.290
Do I need to change anything on the code?

26
00:01:34.290 --> 00:01:41.304
No, that's why it's called groups,
it's not a it's just the same, okay?

27
00:01:41.304 --> 00:01:46.076
It's just organization for
us, for humans, that's all.

28
00:01:46.076 --> 00:01:49.612
So what I need is three more files.

29
00:01:49.612 --> 00:01:54.970
So I'm going to create a new file,
a new SwiftUI view for

30
00:01:54.970 --> 00:01:59.758
the home that we can call
that more the menu because

31
00:01:59.758 --> 00:02:03.992
it's a coffee menu, okay, the menu page.

32
00:02:06.589 --> 00:02:11.660
We can create another one, New File,

33
00:02:11.660 --> 00:02:18.158
for the CartPage, and
finally, another one for

34
00:02:18.158 --> 00:02:24.386
the InfoPage, Like so.

35
00:02:24.386 --> 00:02:28.683
And now in my ContentView I
don't need a text.

36
00:02:28.683 --> 00:02:35.834
What I need to render for
the tab is the MenuPage.

37
00:02:37.458 --> 00:02:42.111
For the OrderPage, CartPage,

38
00:02:42.111 --> 00:02:48.180
I'm sorry, let's call it OrderPage.

39
00:02:48.180 --> 00:02:48.850
How can I change it?

40
00:02:50.260 --> 00:02:57.100
Well, I need to go and change the name,
the file, but also every reference.

41
00:02:57.100 --> 00:03:02.780
If you want, you can Command+click
here and select Rename.

42
00:03:04.040 --> 00:03:09.910
Also, you can right-click,
Refactor &gt; Rename, just the same thing.

43
00:03:09.910 --> 00:03:13.250
And the UI is kind of weird
because it looks this collapsing.

44
00:03:14.760 --> 00:03:19.022
And now I can just change
CartPage to OrdersPage, for

45
00:03:19.022 --> 00:03:23.471
example, up to you,
like my order or my order page, and

46
00:03:23.471 --> 00:03:29.450
it's also changing the file name and
all the references to it, okay?

47
00:03:29.450 --> 00:03:32.170
So just a nice way to show how to do that.

48
00:03:33.560 --> 00:03:37.680
So we have OrdersPage, and then InfoPage.

49
00:03:40.090 --> 00:03:44.607
And every time we make big changes in
the code, we actually need to the resume

50
00:03:44.607 --> 00:03:48.410
the preview, and
now we are kind of back on the same thing.

51
00:03:48.410 --> 00:03:53.269
But now we have separate views per page,
okay?

52
00:03:53.269 --> 00:03:54.960
Does it make sense?

53
00:03:54.960 --> 00:03:59.738
So we are going to work and maybe instead
of Home Page, we can call this menu,

54
00:03:59.738 --> 00:04:04.990
I mean it's up to you or coffee menu,
or however you wanna call that.

55
00:04:04.990 --> 00:04:08.900
Now it's updated there at the bottom.

56
00:04:10.250 --> 00:04:15.230
Okay, so now we need to work with the UI.

57
00:04:15.230 --> 00:04:20.940
So inside products,
what we want is something like this.

58
00:04:20.940 --> 00:04:25.540
That looks complicated, but
no worries, it's not a big deal.

59
00:04:25.540 --> 00:04:29.990
First, we have items, so
each product is an item.

60
00:04:29.990 --> 00:04:35.839
So something that I can do here,
if I want to, is to create a new view

61
00:04:35.839 --> 00:04:41.745
that will represent each item
as a reusable component, okay?

62
00:04:41.745 --> 00:04:48.893
So I'm going to create a new file,
a SwiftUI view, ProductItem.

63
00:04:48.893 --> 00:04:51.238
We don't typically end with view,

64
00:04:51.238 --> 00:04:56.164
unless we need to separate this from
something else that has the same name,

65
00:04:56.164 --> 00:05:00.250
we don't say it's not a button view,
it's a button, okay?

66
00:05:00.250 --> 00:05:05.110
It's not a product item view,
it's a product item or product itself,

67
00:05:05.110 --> 00:05:06.250
or it's up you.

68
00:05:08.460 --> 00:05:10.447
And here we need to make the design,

69
00:05:10.447 --> 00:05:14.510
in this case we're not going to learn
anything new designing this page.

70
00:05:14.510 --> 00:05:18.467
Because it's just an image, a text,
some padding, some border, colors.

71
00:05:18.467 --> 00:05:24.540
So because we are not learning,
maybe we can take the code from here,

72
00:05:24.540 --> 00:05:27.381
it's this one, ProductItem.

73
00:05:27.381 --> 00:05:31.984
So it's a VStack with an image,
an HStack with some text.

74
00:05:31.984 --> 00:05:37.460
So nothing really fancy, so
I can just copy the body.

75
00:05:38.780 --> 00:05:45.500
The only thing that I think is new
here is that we have cornerRadius.

76
00:05:45.500 --> 00:05:46.230
That's pretty cool.

77
00:05:46.230 --> 00:05:50.050
We can actually apply rounded
corners to any element.

78
00:05:50.050 --> 00:05:52.850
It's actually something
really simple to do.

79
00:05:52.850 --> 00:05:56.920
And also I paste it in the wrong place,

80
00:05:56.920 --> 00:06:02.657
cuz I need to replace the whole
body like that, okay?

81
00:06:02.657 --> 00:06:08.460
So if I resume,
it's going to look like this, okay?

82
00:06:08.460 --> 00:06:09.239
But what about the image?

83
00:06:10.410 --> 00:06:15.091
The image is going to come
from the server, okay?

84
00:06:15.091 --> 00:06:17.666
But can we do something for the preview?

85
00:06:17.666 --> 00:06:19.080
Because I wanna see the image.

86
00:06:20.580 --> 00:06:24.685
So here it says, DummyImage,
okay, as an example,

87
00:06:24.685 --> 00:06:29.200
but can we actually make that DummyImage,
really?

88
00:06:29.200 --> 00:06:33.684
Well, actually, there is a folder
that we were not using so

89
00:06:33.684 --> 00:06:36.384
far with the name Preview Content.

90
00:06:36.384 --> 00:06:39.455
In Preview Content, we can add assets and

91
00:06:39.455 --> 00:06:42.891
even code that will be used only for
previews.

92
00:06:46.397 --> 00:06:51.559
So here, for example,
I can take the image that

93
00:06:51.559 --> 00:06:57.250
you have in the assets
that says BlackCoffee.png.

94
00:06:57.250 --> 00:07:00.650
And I can call this DummyImage,
for example.

95
00:07:02.410 --> 00:07:05.400
There is one version, I don't need
to set three versions of the PNG.

96
00:07:07.110 --> 00:07:10.574
So I can just say that
this is a single scale,

97
00:07:10.574 --> 00:07:13.957
I have only one version, and that's all.

98
00:07:13.957 --> 00:07:15.323
That means that now,

99
00:07:21.299 --> 00:07:27.730
We will actually going to see this as
a dummy image, how to make it work?

100
00:07:27.730 --> 00:07:31.383
Well, first,
we need to create the data, so

101
00:07:31.383 --> 00:07:35.337
we'd have some data model to connect to,
okay?

102
00:07:35.337 --> 00:07:37.640
So we're going to do that in a minute.

103
00:07:37.640 --> 00:07:40.760
Before doing that,
let's keep it like this.

104
00:07:42.030 --> 00:07:47.036
And now let's work with the MenuPage,
okay?

105
00:07:47.036 --> 00:07:51.530
So the MenuPage,
we have a list of those elements.

106
00:07:51.530 --> 00:07:55.690
In this case,
I'm not going to use a VStack.

107
00:07:55.690 --> 00:08:00.110
I'm going to use a list because it has
a scroll, and it has other behavior.

108
00:08:00.110 --> 00:08:01.800
And also I need a title.

109
00:08:01.800 --> 00:08:04.530
Remember that nice title that we have.

110
00:08:04.530 --> 00:08:07.240
That's a navigation view.

111
00:08:07.240 --> 00:08:11.732
So I create a NavigationView,
inside the NavigationView,

112
00:08:11.732 --> 00:08:14.380
I'm going to create a list, okay?

113
00:08:15.420 --> 00:08:20.990
And in the list,
what I want is a ProductItem, like that.

114
00:08:22.170 --> 00:08:24.340
And I need a couple.

115
00:08:24.340 --> 00:08:29.960
So I can Command+click here and
select Repeat.

116
00:08:29.960 --> 00:08:33.290
This is just making a for each, like so.

117
00:08:34.290 --> 00:08:36.350
It doesn't look so bad, right?

118
00:08:36.350 --> 00:08:43.130
So then the NavigationView needs
a navigationTitle modifier.

119
00:08:43.130 --> 00:08:46.690
So we can say these are the products.

120
00:08:48.876 --> 00:08:50.570
Okay, yeah, we don't have the mesh yet.

121
00:08:50.570 --> 00:08:56.286
We don't have real product names,
just fake prices, okay?

122
00:08:56.286 --> 00:09:00.280
But from a UI point of view,
it doesn't look so bad.

123
00:09:02.620 --> 00:09:04.330
Again, it's not loading images.

124
00:09:05.470 --> 00:09:08.010
And if you want more than five,
you can just change this number.

125
00:09:09.340 --> 00:09:13.810
And if you enter Interactive Mode,
you can actually scroll.

126
00:09:16.210 --> 00:09:17.380
Okay, does that make sense?

127
00:09:18.850 --> 00:09:19.830
So what else do we need?

128
00:09:19.830 --> 00:09:26.448
Well, we need to get into each element, so
I need to click on each of these elements.

129
00:09:26.448 --> 00:09:31.594
So here if I click Cappuccino,
it goes to a Details page, okay?

130
00:09:31.594 --> 00:09:33.530
Does it make sense?

131
00:09:33.530 --> 00:09:34.270
Yeah, we have a question.

132
00:09:35.490 --> 00:09:40.440
&gt;&gt; Can you explain the difference
between assets and preview assets again?

133
00:09:40.440 --> 00:09:44.910
&gt;&gt; Sure, the concept is just the same.

134
00:09:44.910 --> 00:09:48.922
The difference is that preview
assets will only be available for

135
00:09:48.922 --> 00:09:52.000
previews while in development mode.

136
00:09:52.000 --> 00:09:55.487
They will not go to the final
iPhone application.

137
00:09:55.487 --> 00:09:59.525
In fact, you can also add
your own Swift files here.

138
00:09:59.525 --> 00:10:04.287
You can create a dummy API Swift file,
and that Swift file,

139
00:10:04.287 --> 00:10:10.871
if you create a class here with, I don't
know, DummyAPI or something like that.

140
00:10:10.871 --> 00:10:14.150
That DummyAPI will be available only for
the preview.

141
00:10:15.310 --> 00:10:21.020
And you can use this trick then
to some kind of do testing.

142
00:10:21.020 --> 00:10:24.780
It's kind of like a more tab or
something like that,

143
00:10:24.780 --> 00:10:30.010
you can mock APIs pretty simple,
but this is more optimized for UI.

144
00:10:30.010 --> 00:10:33.380
But anyway, you can use it for
other purposes as well.

145
00:10:34.410 --> 00:10:36.880
So, what else do we need here?

146
00:10:36.880 --> 00:10:39.970
Well, we actually need
to get into Details.

147
00:10:39.970 --> 00:10:44.617
And Details is another page, remember,
we are trying to achieve this

148
00:10:44.617 --> 00:10:50.390
behavior that looks very complicated
because we have a Back button, okay?

149
00:10:50.390 --> 00:10:53.068
But you will see it's
actually pretty simple.

150
00:10:53.068 --> 00:10:58.381
So we also need some background colors and
things like that that we will

151
00:10:58.381 --> 00:11:03.700
solve in a minute to actually make
it more similar to this example.

152
00:11:03.700 --> 00:11:07.460
Also, there are some titles
there like hot coffee, and

153
00:11:07.460 --> 00:11:10.580
so on, and the image at the top.

154
00:11:10.580 --> 00:11:15.836
But before doing that, let's make another
page, the Details page, that is actually

155
00:11:15.836 --> 00:11:20.382
going to be our last page for today,
then we need to finish the other pages.

156
00:11:20.382 --> 00:11:24.890
But in terms of creating new pages,
that's the only page that we need.

157
00:11:26.360 --> 00:11:28.752
So I'm going to create a new file.

158
00:11:28.752 --> 00:11:34.660
In SwiftUI view, remember, a page is just
a view, it's going to be the DetailsPage.

159
00:11:36.840 --> 00:11:41.226
And within the DetailsPage,
right now we have just the text.

160
00:11:43.370 --> 00:11:47.908
If we want that nice title at the top,
okay,

161
00:11:47.908 --> 00:11:53.930
the Black Americano,
we need at least a NavigationView.

162
00:11:56.020 --> 00:11:58.443
Now let's say we keep the text for
now, Hello, World.

163
00:12:02.080 --> 00:12:05.957
We need navigationTitle,
for now let's say Details,

164
00:12:05.957 --> 00:12:10.420
we're going to make this dynamic
anyway in a couple of minutes.

165
00:12:11.760 --> 00:12:16.242
So how can we jump into that DetailsPage,
okay?

166
00:12:16.242 --> 00:12:18.260
It sounds complicated.

167
00:12:19.530 --> 00:12:20.810
Actually, it's pretty simple.

168
00:12:20.810 --> 00:12:26.183
So going back to MenuPage,
we have a list of product items,

169
00:12:26.183 --> 00:12:31.449
the only thing that we need is
to wrap that product item into

170
00:12:31.449 --> 00:12:36.292
another element that is
called the NavigationLink.

171
00:12:36.292 --> 00:12:42.616
We need a NavigationLink, and
the NavigationLink has a destination.

172
00:12:42.616 --> 00:12:47.270
The destination is actually, what is that?

173
00:12:47.270 --> 00:12:48.117
What type is that?

174
00:12:48.117 --> 00:12:48.708
&gt;&gt; Closure.

175
00:12:48.708 --> 00:12:49.695
&gt;&gt; A closure.

176
00:12:49.695 --> 00:12:54.492
So within the closure, we need to return,

177
00:12:54.492 --> 00:12:58.280
right, where we wanna go.

178
00:12:58.280 --> 00:13:02.056
So the view that we want to render
when the user clicks on that item, and

179
00:13:02.056 --> 00:13:03.400
that's a DetailsPage.

180
00:13:05.020 --> 00:13:07.790
And in the label, what do we want inside?

181
00:13:07.790 --> 00:13:11.155
So inside, we want the ProductItem.

182
00:13:13.084 --> 00:13:17.547
So we wanna render a ProductItem and
when you click on that item,

183
00:13:17.547 --> 00:13:19.126
we want DetailsPage.

184
00:13:21.002 --> 00:13:24.772
Just that, let's resume the preview.

185
00:13:24.772 --> 00:13:29.285
If I click on one of these items, viola!

186
00:13:29.285 --> 00:13:31.380
We have the animation.

187
00:13:31.380 --> 00:13:36.079
We go to another page, I have a Back
button and the Back button has

188
00:13:36.079 --> 00:13:41.315
automatically the preview's title
that has a nice animation, okay?

189
00:13:41.315 --> 00:13:46.254
So also we have the pick chest tub,
I need to use a simulator to actually

190
00:13:46.254 --> 00:13:51.860
see that in action,
where you can actually pick what's behind.

191
00:13:51.860 --> 00:13:56.568
So I click here and I can actually pick,
it's not easy with the mouse or with,

192
00:13:56.568 --> 00:13:58.390
okay, something like this.

193
00:13:58.390 --> 00:14:02.291
So just by adding two lines of code.

194
00:14:04.980 --> 00:14:09.517
So to make this navigation then,
you need a NavigationLink and

195
00:14:09.517 --> 00:14:12.610
another view that will go automatically.

196
00:14:13.630 --> 00:14:16.510
So you can see it,
now it start looking like an app.

197
00:14:17.900 --> 00:14:19.860
Okay, so we have tabs.

198
00:14:19.860 --> 00:14:21.300
We have navigation here.

199
00:14:22.970 --> 00:14:27.425
We still need to connect to real data,
okay, and

200
00:14:27.425 --> 00:14:32.331
maybe some small adjustments,
but it works, okay?

201
00:14:32.331 --> 00:14:34.122
Do we have any question at this point?

202
00:14:37.571 --> 00:14:39.067
How does it look like?

203
00:14:39.067 --> 00:14:40.690
&gt;&gt; So what was the difference?

204
00:14:40.690 --> 00:14:44.590
Is it indexes, I mean, you have 15
items there, right, you have for

205
00:14:44.590 --> 00:14:45.767
each there, right?

206
00:14:45.767 --> 00:14:48.811
&gt;&gt; I have a for each, so I have 15
items that are just looking the same.

207
00:14:48.811 --> 00:14:49.671
&gt;&gt; Okay.

208
00:14:49.671 --> 00:14:51.492
&gt;&gt; We still need to connect
these to real data.

209
00:14:51.492 --> 00:14:54.080
&gt;&gt; Okay.
&gt;&gt; And we are going to do that next,

210
00:14:54.080 --> 00:14:58.697
maybe I wanna render the DetailsPage
with something better.

211
00:14:58.697 --> 00:15:03.548
So here I also have have already designed,

212
00:15:03.548 --> 00:15:09.485
if you go to the next page,
the DetailsPage.

213
00:15:09.485 --> 00:15:14.703
So it has an image,
a ScrollView with an image,

214
00:15:14.703 --> 00:15:18.756
a text, an HStack, text, button.

215
00:15:18.756 --> 00:15:24.230
So there are not so
many different things here, okay?

216
00:15:24.230 --> 00:15:29.706
We have some new stuff, but for now, okay,

217
00:15:29.706 --> 00:15:36.210
this is the body that I can add here,
like so.

218
00:15:36.210 --> 00:15:39.973
And I will have, something that we
haven't seen before, it's an stepper.

219
00:15:39.973 --> 00:15:45.180
And a stepper,
it's actually this wheel that

220
00:15:45.180 --> 00:15:52.420
you can step between a minimum and
a maximum value, okay?

221
00:15:52.420 --> 00:15:53.708
It's not available in HTML, so

222
00:15:53.708 --> 00:15:56.720
it's something that you need to
create manually if you want.

223
00:15:56.720 --> 00:16:04.240
It needs a binding to a property,
so, I'm missing an S here.

224
00:16:04.240 --> 00:16:06.390
So, remember how that works?

225
00:16:06.390 --> 00:16:11.862
We need to create a variable
that has one special,

226
00:16:11.862 --> 00:16:19.436
let's say like annotation that says
that it's in a state variable.

227
00:16:19.436 --> 00:16:20.411
&gt;&gt; Is it @State?

228
00:16:20.411 --> 00:16:23.520
&gt;&gt; @State, so @State var.

229
00:16:23.520 --> 00:16:29.381
And we're going to set the name,
quantity, and we start as 1.

230
00:16:29.381 --> 00:16:33.134
And then that stepper
can include a binding,

231
00:16:33.134 --> 00:16:36.598
remember the binding is the dollar sign.

232
00:16:37.857 --> 00:16:40.293
And this is from 1 to 10.

233
00:16:41.462 --> 00:16:45.607
Okay, so if you change that, and

234
00:16:45.607 --> 00:16:52.579
what I had here in the bottom
is add the quantity to cart.

235
00:16:52.579 --> 00:16:56.183
So the navigationTitle for

236
00:16:56.183 --> 00:17:00.417
now is going to be dummy as well.

237
00:17:00.417 --> 00:17:04.190
So let's resume this, okay?

238
00:17:04.190 --> 00:17:09.862
It looks like this, and if I go to
Interactive Mode, look at my dummy image,

239
00:17:09.862 --> 00:17:13.777
that's the dummy image that I have for
the preview.

240
00:17:13.777 --> 00:17:16.688
So add 1 to cart, can you see the 1 there?

241
00:17:16.688 --> 00:17:18.094
Add 1 to cart.

242
00:17:18.094 --> 00:17:22.720
If I say plus, because there is a binding,

243
00:17:22.720 --> 00:17:29.029
it's changing that text as well,
the text of the button.

244
00:17:29.029 --> 00:17:33.501
And all the other properties
are just padding, so frames,

245
00:17:33.501 --> 00:17:39.860
things that we have already seen, okay,
to actually design something as you want.

246
00:17:40.990 --> 00:17:45.500
We have a dummy image, a text,
an HStack with a text as the stepper.

247
00:17:45.500 --> 00:17:49.280
The HStack is actually the one
that is making these two

248
00:17:49.280 --> 00:17:51.717
elements horizontally aligned.

249
00:17:53.275 --> 00:18:00.970
And, I think that-
&gt;&gt; There's no total, right?

250
00:18:00.970 --> 00:18:02.738
It doesn't add it up, does it?

251
00:18:02.738 --> 00:18:03.449
&gt;&gt; Sorry, what?

252
00:18:03.449 --> 00:18:05.632
&gt;&gt; It doesn't add up the total, right?

253
00:18:05.632 --> 00:18:06.490
&gt;&gt; Right now?

254
00:18:06.490 --> 00:18:07.604
&gt;&gt; Right now, yeah.

255
00:18:07.604 --> 00:18:09.430
&gt;&gt; No, the number is fixed.

256
00:18:09.430 --> 00:18:13.920
Can we make it without, the problem is
that we don't have a price variable.

257
00:18:13.920 --> 00:18:15.360
So we're going to do that, okay?

258
00:18:15.360 --> 00:18:16.350
We're going to do that.

259
00:18:16.350 --> 00:18:22.180
But it's better to have the model first so
we have the price somewhere, okay?

260
00:18:22.180 --> 00:18:26.680
&gt;&gt; That's double binding-
&gt;&gt; It's double binding because this is

261
00:18:26.680 --> 00:18:28.196
actually changing, so

262
00:18:28.196 --> 00:18:33.794
the stepper is changing the quantity,
that's why it's double binding.

263
00:18:33.794 --> 00:18:38.521
Okay, but from a UI point of view,
we don't have the cart yet

264
00:18:38.521 --> 00:18:42.896
but it's actually doing something,
okay, this one.

265
00:18:45.541 --> 00:18:47.900
I need to write it again
because that's the old version.

266
00:18:49.763 --> 00:18:53.961
So you click here and
you can move the stepper.

267
00:18:53.961 --> 00:19:00.201
And the total is wrong, okay,
but I can go in and out.

