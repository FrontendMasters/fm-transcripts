WEBVTT

1
00:00:00.320 --> 00:00:04.092
Also, you can click in
the name of the project and

2
00:00:04.092 --> 00:00:07.867
you will get also some
metadata configuration.

3
00:00:07.867 --> 00:00:13.825
So when you wanna change the metadata such
as the name of the app in the iOS, here

4
00:00:13.825 --> 00:00:19.805
you have a lot of options such as display
name, the version number of your app.

5
00:00:19.805 --> 00:00:24.746
Or for example, if your app is
compatible with iPad, for example,

6
00:00:24.746 --> 00:00:28.860
I can untick that now my
app is not iPad compatible.

7
00:00:28.860 --> 00:00:31.730
That doesn't mean that your
app is not gonna work on iPad.

8
00:00:31.730 --> 00:00:36.660
It's gonna work on iPad, but
as an iPhone simulator, okay.

9
00:00:36.660 --> 00:00:37.530
It doesn't matter.

10
00:00:37.530 --> 00:00:43.465
But just to know that here you can
set up some metadata of your app.

11
00:00:43.465 --> 00:00:50.153
Without touching anything else,
you can actually run the app.

12
00:00:50.153 --> 00:00:53.633
So before actually running the app,
maybe you're asking, okay,

13
00:00:53.633 --> 00:00:55.350
where is the app is going to run?

14
00:00:55.350 --> 00:00:57.535
I don't have an iPhone.

15
00:00:57.535 --> 00:01:03.087
Well, actually, on the top,
we can see here that says iPhone.

16
00:01:03.087 --> 00:01:09.348
This actually my iPhone because I
have my iPhone connected through USB.

17
00:01:09.348 --> 00:01:14.482
But instead of using my iOS device,
I can select an iOS

18
00:01:14.482 --> 00:01:20.430
simulator having mine working
on that section of the screen.

19
00:01:21.660 --> 00:01:24.876
So if you click there,
you can select an iOS simulator and

20
00:01:24.876 --> 00:01:28.210
the iOS simulators are actually
coming with Xcode.

21
00:01:28.210 --> 00:01:32.530
So if you have installed Xcode,
you have all the simulators available.

22
00:01:32.530 --> 00:01:37.598
So you can pick any iPhone
like an iPhone 13 Pro or mini,

23
00:01:37.598 --> 00:01:44.010
anyone, iPhone 13, and
now I can try directly this play button.

24
00:01:44.010 --> 00:01:47.900
There is actually running the current
project in that simulator.

25
00:01:49.200 --> 00:01:53.210
That's make sense and
that will open that simulator.

26
00:01:54.790 --> 00:01:58.300
The first time it will boot
up as actually a real iPhone.

27
00:02:00.180 --> 00:02:06.300
So it takes a couple of seconds,
and you will see hello world, okay?

28
00:02:06.300 --> 00:02:08.560
So this is actually an iOS simulator.

29
00:02:09.890 --> 00:02:11.659
So it's called simulator.

30
00:02:13.590 --> 00:02:18.086
Also for example, an Android,
they are known as emulators.

31
00:02:18.086 --> 00:02:22.196
Does anyone know the difference between
a simulator and an emulator without

32
00:02:22.196 --> 00:02:25.940
saying that the simulator simulates and
the emulator emulates?

33
00:02:25.940 --> 00:02:29.092
So an emulator is typically
a built on machine, so

34
00:02:29.092 --> 00:02:34.130
it's actually emulating the hardware and
on top of that, the full OS is there.

35
00:02:34.130 --> 00:02:39.040
An a simulator it's an app that
looks like but it's not really.

36
00:02:39.040 --> 00:02:42.300
So it looks like an iOS but
it's not really an iOS.

37
00:02:42.300 --> 00:02:47.454
Let me prove that, I will on my Mac
open the activity monitor that is

38
00:02:47.454 --> 00:02:53.265
like the task manager of the Mac, and
they will search for coffee masters.

39
00:02:54.705 --> 00:02:58.252
And you can see that there is an app
with the named coffee masters running

40
00:02:58.252 --> 00:02:59.475
on my Mac.

41
00:02:59.475 --> 00:03:01.865
So it's a process running on my Mac.

42
00:03:01.865 --> 00:03:05.035
If I kill the process,
let me move for a little bit.

43
00:03:06.185 --> 00:03:08.375
It's out of the simulator.

44
00:03:08.375 --> 00:03:12.449
So that proves that this
is not a built on machine.

45
00:03:12.449 --> 00:03:16.167
So these apps are actually
running on my Mac.

46
00:03:16.167 --> 00:03:19.834
With an iOS as kin or
wielding an iOS as kin, but

47
00:03:19.834 --> 00:03:23.220
they are running on my
Mac as a Mac process,

48
00:03:23.220 --> 00:03:29.700
because it's actually a similar
platform MacOS, iOS, watchOS, TVOS.

49
00:03:29.700 --> 00:03:32.476
They have the same architecture, okay.

50
00:03:32.476 --> 00:03:33.990
So, that means that for

51
00:03:33.990 --> 00:03:38.625
example in terms of performance it
might not be the same as a real device.

52
00:03:38.625 --> 00:03:43.738
Is the performance of your Mac that can be
better or worse than the real device so

53
00:03:43.738 --> 00:03:47.080
have that in mind, okay,
it's just a simulator.

54
00:03:48.610 --> 00:03:53.387
However, the UI and
the the API's available are the same.

55
00:03:53.387 --> 00:03:57.070
So the framework, it's actually complete.

56
00:03:57.070 --> 00:03:59.803
It's the same framework that we
have on the real device, but

57
00:03:59.803 --> 00:04:02.240
it's running on the Mac, okay.

58
00:04:02.240 --> 00:04:03.300
Does that make sense?

59
00:04:05.070 --> 00:04:08.680
So, quick things around the simulator.

60
00:04:08.680 --> 00:04:10.660
You can resize the window.

61
00:04:11.910 --> 00:04:16.620
Just you take it from a corner and
you resize a window like that.

62
00:04:16.620 --> 00:04:19.469
You can, there is here a home button.

63
00:04:19.469 --> 00:04:22.352
So you can click on that home button or

64
00:04:22.352 --> 00:04:28.222
you can use some shortcuts it's
Ctrl Shift H, I'm sorry Command Shift H.

65
00:04:28.222 --> 00:04:32.796
And if you press that twice
it opens the multitask mode,

66
00:04:32.796 --> 00:04:38.439
also if you forget about that you can
go to the menu in the simulator and

67
00:04:38.439 --> 00:04:40.799
you have all those options.

68
00:04:40.799 --> 00:04:45.600
For example, home, and
here you see the shortcut.

69
00:04:45.600 --> 00:04:46.833
You can rotate the device.

70
00:04:50.116 --> 00:04:54.778
And if you want a shortcut for that, it's
simple to remember its command right key,

71
00:04:54.778 --> 00:04:57.090
command left key to rotate right or left.

72
00:04:58.990 --> 00:05:00.800
Okay, so that's actually pretty simple.

73
00:05:01.810 --> 00:05:05.240
And with that, let's say that
after you are running your app.

74
00:05:05.240 --> 00:05:09.380
If you go to the home,
your app, it's installed.

75
00:05:10.730 --> 00:05:12.172
It's this one.

76
00:05:12.172 --> 00:05:18.040
It doesn't contain any icon yet,
but it's there, okay.

77
00:05:18.040 --> 00:05:21.929
Even if you close Xcode and
you terminate the debug session,

78
00:05:21.929 --> 00:05:24.296
your app is still there.

79
00:05:24.296 --> 00:05:29.260
Okay, empty, but there,
you have any questions at this point?

80
00:05:31.530 --> 00:05:32.280
For now it's simple.

81
00:05:33.850 --> 00:05:35.510
Now, let's look at the files.

82
00:05:36.620 --> 00:05:41.572
By the way before doing that, so
if you look at my screen if I sham to

83
00:05:41.572 --> 00:05:47.070
Xcode my simulator is still there
sitting on top of every Window.

84
00:05:47.070 --> 00:05:50.524
That's because I set so
in the Window menu, so

85
00:05:50.524 --> 00:05:55.140
you can go to the Window menu and
enable or disable stay on top.

86
00:05:57.120 --> 00:05:59.280
It depends on the case it's useful or not.

87
00:05:59.280 --> 00:06:01.980
Right now I'm going to disable that.

88
00:06:01.980 --> 00:06:06.500
So now if I'm going through Xcode,
the simulator is behind Xcode.

89
00:06:06.500 --> 00:06:09.490
So it's not actually using the same space.

90
00:06:09.490 --> 00:06:15.380
So if you go to coffee masters app,
this is what we find.

91
00:06:15.380 --> 00:06:21.270
This is kind of the main of the app,
the entry point of the app.

92
00:06:21.270 --> 00:06:26.410
If you look at the code,
it's just a structure, okay.

93
00:06:26.410 --> 00:06:28.010
So it's not a class.

94
00:06:28.010 --> 00:06:29.090
It's a structure.

95
00:06:29.090 --> 00:06:32.942
Remember and when we are busting our
structures, we are making copies and

96
00:06:32.942 --> 00:06:35.120
it's high performance.

97
00:06:35.120 --> 00:06:37.666
It's a structure, and
here it says colon app.

98
00:06:37.666 --> 00:06:40.830
And this point, you're thinking,
hey, Max, you lied to us,

99
00:06:40.830 --> 00:06:43.850
you mentioned that there is no superclass.

100
00:06:43.850 --> 00:06:49.640
Well, actually, if we ask for help over
app and we do that with option click.

101
00:06:51.230 --> 00:06:58.628
It says here that app is not a class or
a structure, its a protocol.

102
00:06:58.628 --> 00:07:03.524
So actually this says that we
are conforming to a protocol that's

103
00:07:03.524 --> 00:07:05.757
the verb that we use in swift.

104
00:07:05.757 --> 00:07:11.268
We conform to a protocol,
that's like implementing a protocol, okay.

105
00:07:11.268 --> 00:07:15.428
So, it's just that it's not
actually inheriting from app,

106
00:07:15.428 --> 00:07:17.994
it's just implementing a protocol.

107
00:07:17.994 --> 00:07:22.837
And what's the protocol well if you
get into the help if you scroll

108
00:07:22.837 --> 00:07:27.699
down you'll always have here
open in developer documentation.

109
00:07:27.699 --> 00:07:31.779
And then it opens a fullscreen
help on that particular

110
00:07:31.779 --> 00:07:34.688
element that will explain what it is?

111
00:07:34.688 --> 00:07:36.922
What you can do with that?

112
00:07:36.922 --> 00:07:40.537
And it will explain you
what you need to implement.

113
00:07:40.537 --> 00:07:47.243
For example in this case you need to
have a property, with a name body.

114
00:07:47.243 --> 00:07:48.860
That's actually the requirement.

115
00:07:48.860 --> 00:07:53.730
So if you are conforming to the protocol,
you are forced to have that body property.

116
00:07:53.730 --> 00:07:54.230
With that name.

