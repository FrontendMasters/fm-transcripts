WEBVTT

1
00:00:00.068 --> 00:00:03.583
Now, you'll notice that for a lot of this,

2
00:00:03.583 --> 00:00:08.057
we touched on styles when I
answered a question before.

3
00:00:08.057 --> 00:00:10.876
But for a lot of this,
we've been manually typing in stuff.

4
00:00:10.876 --> 00:00:12.514
And that, generally speaking,

5
00:00:12.514 --> 00:00:16.205
has worked as we've been figuring out
some of the concepts around layout.

6
00:00:16.205 --> 00:00:21.522
But generally speaking,
in the same way that we want to be able

7
00:00:21.522 --> 00:00:26.631
to reuse code in various places,
it would be nice if we could

8
00:00:26.631 --> 00:00:31.972
reuse some of our styling and
various places as well, right?

9
00:00:31.972 --> 00:00:38.921
Cuz you can imagine right now, I've been
pretty easygoing on the colors, right?

10
00:00:38.921 --> 00:00:44.373
But if I needed to change all of
the buttons from one color to another,

11
00:00:44.373 --> 00:00:49.825
from blue to a more different blue,
then that would be very tedious.

12
00:00:49.825 --> 00:00:54.836
And so there are two major kinds of ways

13
00:00:54.836 --> 00:00:59.229
of sharing values across Figma.

14
00:00:59.229 --> 00:01:02.839
There used to be one and
now there are two, and

15
00:01:02.839 --> 00:01:06.652
it's kinda like a weird Venn diagram,
right?

16
00:01:06.652 --> 00:01:09.111
So you used to just have
this idea of styles.

17
00:01:09.111 --> 00:01:14.516
And as we saw with the layout grids
before, we had a layout grid style.

18
00:01:14.516 --> 00:01:18.805
We hit Save, and was then a layout grid
that we could use multiple places.

19
00:01:18.805 --> 00:01:23.411
You can do that for colors,
you can do that for typography.

20
00:01:23.411 --> 00:01:26.516
You can do that for
effects like box-shadow.

21
00:01:26.516 --> 00:01:28.848
I think those are the four, right?

22
00:01:28.848 --> 00:01:31.316
We will also later on
talk about variables.

23
00:01:31.316 --> 00:01:37.473
Variables, you can store strings, and
numbers, and Booleans, and colors, right?

24
00:01:37.473 --> 00:01:39.441
You'll notice that there's
a little overlap there.

25
00:01:39.441 --> 00:01:43.693
Variables are in beta, and so
they don't support things like

26
00:01:43.693 --> 00:01:48.535
typography which is another thing
that styles currently do, right?

27
00:01:48.535 --> 00:01:51.870
But they will eventually support
stuff like typography as well.

28
00:01:51.870 --> 00:01:55.240
There are more features that
will come to variables as well.

29
00:01:55.240 --> 00:01:57.066
So there is some overlap.

30
00:01:57.066 --> 00:02:01.398
And one of the things to think about and
as we kinda go through both

31
00:02:01.398 --> 00:02:06.069
of these is that a variable normally
holds one value, a given color.

32
00:02:06.069 --> 00:02:09.401
A style can be a linear gradient or

33
00:02:09.401 --> 00:02:13.809
multiple color values, so on and so forth.

34
00:02:13.809 --> 00:02:15.763
Variables have some other features.

35
00:02:15.763 --> 00:02:20.034
Where it gets a little tricky or
two is variables are great and

36
00:02:20.034 --> 00:02:24.572
wonderful for a number of reasons,
but they're also a new ish.

37
00:02:24.572 --> 00:02:29.905
Means that a lot of times a lot of
the tooling is built around styles, right?

38
00:02:29.905 --> 00:02:35.213
And so which use one is both a nuance that
we will talk about, but also slightly

39
00:02:35.213 --> 00:02:40.454
moving target since more features will
come to variables so on and so forth.

40
00:02:40.454 --> 00:02:43.881
But we'll kinda talk about each of
them and kinda get a little more

41
00:02:43.881 --> 00:02:47.433
concreteness around this vague
notion of they have some overlap and

42
00:02:47.433 --> 00:02:51.253
when to use each and the trade-offs
as we actually see them in practice.

43
00:02:51.253 --> 00:02:54.911
But kinda to initially see that there
are two concepts that have some amount of

44
00:02:54.911 --> 00:02:55.425
overlap.

45
00:02:55.425 --> 00:02:57.543
They are different and kinda the same.

46
00:02:57.543 --> 00:03:02.290
Simultaneously, we will dig into it,
but let's start with styles.

47
00:03:02.290 --> 00:03:05.835
And for our purposes,
we'll use variables where we can.

48
00:03:05.835 --> 00:03:09.614
Presently, you cannot use them at all
in anything involving typography.

49
00:03:09.614 --> 00:03:10.750
There are a number of variables.

50
00:03:10.750 --> 00:03:11.995
Can you use that as a font size?

51
00:03:11.995 --> 00:03:13.292
No, you can't, right?

52
00:03:13.292 --> 00:03:15.109
There's just not an option
to use in typography.

53
00:03:15.109 --> 00:03:16.557
They will eventually be.

54
00:03:16.557 --> 00:03:20.122
So maybe if you're watching this later,
they are and

55
00:03:20.122 --> 00:03:24.333
seems like If I'm wrong, but
I was right when I said the words.

56
00:03:24.333 --> 00:03:27.009
That's how recordings work, right?

57
00:03:27.009 --> 00:03:31.944
Cool, so
there's a bunch of reasons why we can and

58
00:03:31.944 --> 00:03:35.831
might want to create a bunch of styles.

59
00:03:35.831 --> 00:03:39.333
One of them is stuff like typography.

60
00:03:39.333 --> 00:03:43.355
We can joke about changing a button
color from one thing to the other.

61
00:03:43.355 --> 00:03:47.978
But having a known set of,
this is the typeface we use in our app and

62
00:03:47.978 --> 00:03:51.508
this is the font size and
the weight of it, right,

63
00:03:51.508 --> 00:03:56.468
that becomes something you one,
as the receiving end as a developer,

64
00:03:56.468 --> 00:04:00.027
do not want a whole bunch of random fonts,
right?

65
00:04:00.027 --> 00:04:04.359
And then two, as a designer,
you'd like to be able to just say,

66
00:04:04.359 --> 00:04:07.025
hey, here's the style for a heading.

67
00:04:07.025 --> 00:04:11.343
And then if you wanna change the line
height across all of the headings

68
00:04:11.343 --> 00:04:14.477
throughout all of your designs,
you can do that.

69
00:04:14.477 --> 00:04:19.361
So there's both advantages for the
designer, and then all things that help

70
00:04:19.361 --> 00:04:23.881
designers become more consistent
help us implementing them as well.

71
00:04:23.881 --> 00:04:27.639
So let's go kinda take a look.

72
00:04:27.639 --> 00:04:32.468
So one of the things you could do is
you can literally just take some text.

73
00:04:32.468 --> 00:04:35.790
And we say, Some Text, and

74
00:04:35.790 --> 00:04:41.427
you can change the font
with font that we like.

75
00:04:41.427 --> 00:04:42.622
Papyrus, I agree.

76
00:04:45.017 --> 00:04:51.868
Great, and there's no bold Papyrus?

77
00:04:51.868 --> 00:04:53.860
Today, I learned.

78
00:04:53.860 --> 00:04:57.134
Let's make it size 48.

79
00:04:59.118 --> 00:05:01.328
Sure, all these seem fine.

80
00:05:01.328 --> 00:05:05.234
And so let's say I'm like,
this is our brand, right?

81
00:05:05.234 --> 00:05:10.489
This is absolutely what I
want everything we do to

82
00:05:10.489 --> 00:05:16.136
look like as we go forward
with our new company logo.

83
00:05:16.136 --> 00:05:21.243
And so what you can do is once you have
your text all the way that you'd like it,

84
00:05:21.243 --> 00:05:23.995
you can go ahead and you hit those little,

85
00:05:23.995 --> 00:05:27.944
I don't know, something, and
you can hit this plus sign.

86
00:05:27.944 --> 00:05:35.196
You can say, New Company Logo,

87
00:05:37.203 --> 00:05:41.795
Please pay me a lot of money.

88
00:05:41.795 --> 00:05:46.511
And now, at any given point,
we can style any piece of texts,

89
00:05:46.511 --> 00:05:48.969
have it be Papyrus in size 48.

90
00:05:48.969 --> 00:05:53.064
Apparently, not bold cuz there was no bold
papyrus, which we all learned together and

91
00:05:53.064 --> 00:05:54.027
apply to anything.

92
00:05:54.027 --> 00:05:58.287
So I can go ahead and
it will use the last font that you use.

93
00:05:58.287 --> 00:06:00.983
So let's go fo something else instead.

94
00:06:04.725 --> 00:06:08.497
And I can go take this, and
I can say, you know what?

95
00:06:08.497 --> 00:06:10.552
I would like to make
this a new company logo.

96
00:06:10.552 --> 00:06:15.700
And then should we go ahead and
decide that we wanna tweak the new

97
00:06:15.700 --> 00:06:21.738
company logo to, what's the most
ridiculous found, this is terrible.

98
00:06:21.738 --> 00:06:25.047
You can see that they all
change to the new company logo.

99
00:06:25.047 --> 00:06:29.226
Now, that is great for
setting up a typography system and

100
00:06:29.226 --> 00:06:33.590
then your designers and
you can then use those everywhere.

101
00:06:33.590 --> 00:06:39.707
There are some questions about,
how does one do this in bulk, right?

102
00:06:39.707 --> 00:06:43.670
So for instance, over here,

103
00:06:43.670 --> 00:06:49.534
I have stolen basically
all of the classes or

104
00:06:49.534 --> 00:06:53.350
fonts in Tailwind, right?

105
00:06:53.350 --> 00:06:58.294
So they have everything from extra
small to small to base to large to

106
00:06:58.294 --> 00:07:00.676
extra large up to nine, XL, and

107
00:07:00.676 --> 00:07:05.552
then basically you have all
the different font weights, right?

108
00:07:05.552 --> 00:07:10.779
And so let's say that, okay,
these happen, I think they are what font?

109
00:07:10.779 --> 00:07:13.722
Source Sans Pro, right?

110
00:07:13.722 --> 00:07:18.891
And so I swear if I get one
more design where it's some

111
00:07:18.891 --> 00:07:24.074
random size 57 font,
I'm gonna lose it, right?

112
00:07:24.074 --> 00:07:28.523
So in this case, by giving them styles
that match to what we have in our

113
00:07:28.523 --> 00:07:32.605
CSS classes, we can hopefully
keep everyone on the same page.

114
00:07:32.605 --> 00:07:37.933
But if you think you
are going to hand this

115
00:07:37.933 --> 00:07:43.890
list to anyone and,
I guess whether they're

116
00:07:43.890 --> 00:07:49.083
nine font weights across nine Excels.

117
00:07:49.083 --> 00:07:54.581
No one's doing 9 times 14 or whatever
it is and making those by hand, right?

118
00:07:54.581 --> 00:08:01.085
And that's why sometimes you don't have
a lot of these styles and designs.

119
00:08:01.085 --> 00:08:04.685
Now, I think it's Larry Wall,
who's Creative Perl and

120
00:08:04.685 --> 00:08:09.485
one of his famous lines, the traits of
a great programmer are laziness, and

121
00:08:09.485 --> 00:08:14.063
patience, and hubris, right, and
we tend to like to automate things.

122
00:08:14.063 --> 00:08:17.836
So there are a whole bunch
of useful plugins for

123
00:08:17.836 --> 00:08:20.749
creating styles and a type system.

124
00:08:20.749 --> 00:08:27.569
The one that I use so much that I somehow
managed to list it twice in here,

125
00:08:27.569 --> 00:08:33.045
cuz it's my favorite is this
one called Styler, right?

126
00:08:33.045 --> 00:08:37.636
And so let's go in here and get rid of
that other library that was in here so

127
00:08:37.636 --> 00:08:39.838
that I have no real dtyles around.

128
00:08:39.838 --> 00:08:45.394
What you can do with Styler is
basically take a whole bunch

129
00:08:45.394 --> 00:08:50.505
of selected layers and
bulk create styles, right?

130
00:08:50.505 --> 00:08:52.486
There are some caveats.

131
00:08:52.486 --> 00:08:58.806
One is it will use the name of
the layer to name the style,

132
00:08:58.806 --> 00:09:03.794
cuz what else is it supposed to use,
right?

133
00:09:03.794 --> 00:09:11.471
Two, Figma has a very loose
definition of organization hierarchy,

134
00:09:11.471 --> 00:09:18.075
which is if you name thing with slash, it
will group those things together, right?

135
00:09:18.075 --> 00:09:23.200
So these are named like this for
a reason, which is that this'll then take

136
00:09:23.200 --> 00:09:28.241
all the font, thin, extra light,
regular, normal, medium, blah,

137
00:09:28.241 --> 00:09:33.388
blah, blah, blah, blah, and
it'll group them all under text nine xl.

138
00:09:33.388 --> 00:09:36.449
And again, these effectively
are named after the Tailwind.

139
00:09:36.449 --> 00:09:38.231
If you don't use Tailwind,
name it whatever you use.

140
00:09:38.231 --> 00:09:42.481
Name it heading, prose,
I don't care, right?

141
00:09:42.481 --> 00:09:44.300
I happen to use Tailwind at work and

142
00:09:44.300 --> 00:09:48.078
I didn't feel like coming up with
a new naming convention, honestly.

143
00:09:48.078 --> 00:09:50.501
So the caveats here is that, one,

144
00:09:50.501 --> 00:09:55.106
the layer should be named after
whatever you want the style to be.

145
00:09:55.106 --> 00:09:57.949
By default, for text,

146
00:09:57.949 --> 00:10:02.790
Figma gives the layer name the content.

147
00:10:02.790 --> 00:10:06.782
So that's why also that just makes sense,
right?

148
00:10:06.782 --> 00:10:09.250
And so it has to be named if
you want the styles to be, and

149
00:10:09.250 --> 00:10:11.100
it has to be styled
like you want it to be.

150
00:10:11.100 --> 00:10:14.026
And what it'll do is it'll look
at all the layers you selected.

151
00:10:14.026 --> 00:10:19.107
It'll look at their styling properties,
create styles named after the layer.

152
00:10:19.107 --> 00:10:24.095
That's a lot of words that could be much
more easily solved by just showing you,

153
00:10:24.095 --> 00:10:24.625
right?

154
00:10:24.625 --> 00:10:28.983
So I'm gonna do this in the sidebar, cuz
it's just easier cuz I think I can hold

155
00:10:28.983 --> 00:10:33.230
Shift and just go all the way to the
bottom of my, however, many font faces.

156
00:10:33.230 --> 00:10:39.446
Now, as we're not talking about the
implementation of a design system today,

157
00:10:39.446 --> 00:10:43.458
I would say that maybe you
don't need all of these.

158
00:10:43.458 --> 00:10:47.159
Hypothetically, maybe you and
the design team sit down and

159
00:10:47.159 --> 00:10:51.167
you pick [LAUGH] a subset of these
that you actually plan on using.

160
00:10:51.167 --> 00:10:53.705
Because for both engineers,
we're all like,

161
00:10:53.705 --> 00:10:57.268
this is why you got to limit the number
of icons and stuff like that.

162
00:10:57.268 --> 00:11:01.747
Engineers will just grab every random
spacing class, and designers will too.

163
00:11:01.747 --> 00:11:05.102
We're both also broken in the same ways.

164
00:11:05.102 --> 00:11:08.476
We can select all of them and then we
can go up here, and you don't need to

165
00:11:08.476 --> 00:11:12.432
necessarily have a given plugin installed,
you can just run them kinda on the fly.

166
00:11:12.432 --> 00:11:18.193
So we're gonna look for
Styler and we're gonna run it.

167
00:11:18.193 --> 00:11:26.528
And the one that we want right
now is generate styles, right?

168
00:11:26.528 --> 00:11:29.679
And you can see it runs,
and it created 116.

169
00:11:29.679 --> 00:11:36.289
So we got an answer on how many, I guess
maybe, it's 170 cuz that one was updated.

170
00:11:36.289 --> 00:11:37.521
We'll go ahead and create them now.

171
00:11:37.521 --> 00:11:43.520
If we go into local styles,
you can see that under text-xs.

172
00:11:43.520 --> 00:11:46.180
We've got a whole bunch of font weights,
and

173
00:11:46.180 --> 00:11:49.830
these are all of in the font that
we want for our design system.

174
00:11:49.830 --> 00:11:52.673
I picked Source Code Pro.

175
00:11:52.673 --> 00:11:55.278
It was the first non-ugly one I
saw when I was scrolling through.

176
00:11:55.278 --> 00:12:00.250
We use Enter, which is the default
Figma ones that felt not fun, and

177
00:12:00.250 --> 00:12:03.488
you might use a different one for
headings.

178
00:12:03.488 --> 00:12:04.956
You can do whatever you want here.

179
00:12:04.956 --> 00:12:08.328
And so it went ahead and
it created all of those styles for me.

180
00:12:08.328 --> 00:12:13.338
So now, I have a consistent
typography system all in place,

181
00:12:13.338 --> 00:12:15.507
and that works for fonts.

182
00:12:15.507 --> 00:12:18.272
It will work also for
colors and anything else.

183
00:12:18.272 --> 00:12:22.034
One thing to point out is,
let's say you had all these fonts, but

184
00:12:22.034 --> 00:12:26.425
they were not named with the slash or
whatever you wanted in order to name it.

185
00:12:26.425 --> 00:12:30.739
Figma has a really, do not go
through 117 of these, 116 of these,

186
00:12:30.739 --> 00:12:32.945
whatever, and name them one by one.

187
00:12:32.945 --> 00:12:36.419
Again, we are lazy and it is our virtue.

188
00:12:36.419 --> 00:12:40.647
So what we wanna do,
as you can select all of them or

189
00:12:40.647 --> 00:12:45.482
any given one, and
you can always hit Cmd+R or Ctrl+R,

190
00:12:45.482 --> 00:12:49.341
I'm guessing, and
you can do a bulk rename.

191
00:12:49.341 --> 00:12:53.678
Great things about bulk rename is one,
you can bulk rename things.

192
00:12:53.678 --> 00:13:00.470
Two, you can bulk rename things with
a number that either goes up or down.

193
00:13:00.470 --> 00:13:03.090
Again, we use Tailwind at Temporal,
you don't have to,

194
00:13:03.090 --> 00:13:04.433
you can do whatever you want.

195
00:13:04.433 --> 00:13:07.880
There's nothing Tailwind specific other
than the fact that I didn't wanna come up

196
00:13:07.880 --> 00:13:11.987
with new names for things, which for
colors it's 50, 100, 200, 300, and 400.

197
00:13:11.987 --> 00:13:13.727
So I can select them and

198
00:13:13.727 --> 00:13:18.405
then have a number that's going
up with two zeros at the end.

199
00:13:18.405 --> 00:13:22.925
To get that 100, 200, 300, 400 by saying
number ascending or number descending,

200
00:13:22.925 --> 00:13:25.528
you can take the current name and
prefix it or suffix it.

201
00:13:25.528 --> 00:13:28.778
So if these did not have the /text 9xl,

202
00:13:28.778 --> 00:13:33.567
I could grab the first nine of them or
whatever, prefix it.

203
00:13:33.567 --> 00:13:37.917
The other part is regex, right?

204
00:13:37.917 --> 00:13:42.262
And so you can also If so use at least
the match part of regular expression,

205
00:13:42.262 --> 00:13:44.520
I think you can do a full regex in here.

206
00:13:44.520 --> 00:13:48.964
I've done horrible things in this box
that I blocked out of my memory, but

207
00:13:48.964 --> 00:13:51.414
I think you can write full regex in here.

208
00:13:51.414 --> 00:13:53.829
If not, click learn more and
figure it out.

209
00:13:53.829 --> 00:13:59.059
So if I wanna change all the font dash to

210
00:13:59.059 --> 00:14:04.617
something else, let's do font dash and

211
00:14:04.617 --> 00:14:11.818
let's change it to typography,
maybe I can spell.

212
00:14:11.818 --> 00:14:16.032
Okay, and so
that will rename all the layers.

213
00:14:16.032 --> 00:14:19.658
It didn't rename the content,
but life's hard.

214
00:14:19.658 --> 00:14:20.826
But it did rename it here.

215
00:14:20.826 --> 00:14:27.243
And the cool thing is if I run Styler
again through some magic of annotations,

216
00:14:27.243 --> 00:14:32.491
knew that they already existed and
just renamed them, right?

217
00:14:32.491 --> 00:14:37.318
And so I didn't create duplicate ones and
have to delete it, so on and so forth.

218
00:14:37.318 --> 00:14:42.904
And so now, if I go in here,
they are all typography, whatever.

219
00:14:42.904 --> 00:14:45.766
If I wanted to not have them
all in a different hierarchy,

220
00:14:45.766 --> 00:14:49.895
I could get rid of that slash, they would
not be in those kinds of subdirectories.

221
00:14:49.895 --> 00:14:51.830
You could use seven slashes, but

222
00:14:51.830 --> 00:14:55.502
Figma is only gonna really help
you out with like the first one.

223
00:14:55.502 --> 00:14:58.005
It kinda knows that there's grandchildren,
but

224
00:14:58.005 --> 00:15:00.335
it doesn't really display
in any useful way.

225
00:15:00.335 --> 00:15:04.367
So staying to one level of hierarchy
is about all you're gonna need to get

226
00:15:04.367 --> 00:15:05.036
away with.

227
00:15:05.036 --> 00:15:09.631
So yeah, theoretically, I think that
Tailwind, because it's general purpose,

228
00:15:09.631 --> 00:15:11.067
needs all of these fonts.

229
00:15:11.067 --> 00:15:17.566
But one of things we did in our code base
is start to shrink the surface area.

230
00:15:17.566 --> 00:15:21.515
Cuz you know what happens
when we have 116 fonts,

231
00:15:21.515 --> 00:15:25.118
we used not 116, but
more than we needed to.

232
00:15:25.118 --> 00:15:28.335
So having a smaller set
definitely behooves you.

233
00:15:28.335 --> 00:15:34.826
But for what works for the biggest number
also works for the smallest number.

234
00:15:34.826 --> 00:15:38.670
Styler is great if there is
an existing typography system.

235
00:15:38.670 --> 00:15:43.608
So for our website and stuff,
there's a much smaller set of fonts that

236
00:15:43.608 --> 00:15:48.308
we use that the design team came
up with on their own first, right?

237
00:15:48.308 --> 00:15:51.055
Perfect, and so
you can take that smaller set and

238
00:15:51.055 --> 00:15:53.338
just generate the styles based on that.

239
00:15:53.338 --> 00:15:57.822
And I will show you in a second where
this gets really interesting for us.

240
00:15:57.822 --> 00:15:58.833
I'm gonna show you right now.

