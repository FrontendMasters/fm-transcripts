WEBVTT

1
00:00:00.059 --> 00:00:04.076
And so when we use auto layout,
we can actually have stuff like min and

2
00:00:04.076 --> 00:00:04.778
a max with.

3
00:00:04.778 --> 00:00:07.773
And layout grids are super good for

4
00:00:07.773 --> 00:00:11.912
getting the general shape and
flow of the page.

5
00:00:11.912 --> 00:00:17.195
Towards the end, we'll see layout
grids and auto layout together,

6
00:00:17.195 --> 00:00:22.762
but auto layout is like a feature that
as developers we all know and love.

7
00:00:22.762 --> 00:00:27.946
We know it at least whether or not you
love it is a different I can't speak for

8
00:00:27.946 --> 00:00:33.235
you, which is auto layout is you can
best think about like Flexbox, right?

9
00:00:33.235 --> 00:00:36.609
Is this ability to say, okay,
stay in the center, stay along the edges.

10
00:00:36.609 --> 00:00:42.786
There's a lot of overlap with constraints
but there are different features in each.

11
00:00:42.786 --> 00:00:46.538
So what we'll do is we talked a lot about
constraints and layout grids, right,

12
00:00:46.538 --> 00:00:48.730
now we're not gonna use them for
a little bit.

13
00:00:48.730 --> 00:00:51.687
They will come back at the end, trust me.

14
00:00:51.687 --> 00:00:56.476
But first we are going to play
with auto layout, which again,

15
00:00:56.476 --> 00:01:01.648
if the metaphor in your head is,
that kinda reminds me of Flexbox.

16
00:01:01.648 --> 00:01:05.126
Stay with that metaphor,
it's a good metaphor.

17
00:01:05.126 --> 00:01:08.985
And there are lots of practical use
cases and things you can do it.

18
00:01:08.985 --> 00:01:12.741
I would say for me 70,
80% of time, it's auto layout and

19
00:01:12.741 --> 00:01:16.428
then a certain amount of
the constraints and layout grids for

20
00:01:16.428 --> 00:01:20.493
the overall frame of the application and
stuff along those lines.

21
00:01:20.493 --> 00:01:25.625
But a lot of the components that I'm
building tend to use a lot of auto

22
00:01:25.625 --> 00:01:31.926
layout because that is, and it might just
be my biases coming in as a web developer,

23
00:01:31.926 --> 00:01:37.167
and kind of writing code with CSS grid and
nested flexboxes, right?

24
00:01:37.167 --> 00:01:41.596
But that kind of translates here as well,
so

25
00:01:41.596 --> 00:01:45.315
let's take a look with auto layout.

26
00:01:45.315 --> 00:01:48.345
There is a big list of little shortcuts.

27
00:01:48.345 --> 00:01:53.367
Like I said before,
I will try not to use too many of them.

28
00:01:53.367 --> 00:01:57.329
The one that I will probably break
the rules on is Shift A, but

29
00:01:57.329 --> 00:01:59.827
I feel like I can say that one out loud.

30
00:01:59.827 --> 00:02:04.788
Shift+A will just turn any frame
into an auto layout frame, right?

31
00:02:04.788 --> 00:02:09.624
But there are all sorts of lots of
little things that you can do, including

32
00:02:09.624 --> 00:02:14.701
wordz on the keyboard that I will try to
refrain from doing in front of you all.

33
00:02:14.701 --> 00:02:18.537
But kind of long and
short of what auto layout does is,

34
00:02:18.537 --> 00:02:23.650
we kind of do it by hand, this little
center area that I left for myself,

35
00:02:23.650 --> 00:02:28.292
we'll have a frame, and
then we can grab somebody's avatars.

36
00:02:28.292 --> 00:02:31.276
We'll just drop them in.

37
00:02:31.276 --> 00:02:32.803
Put them wherever we want.

38
00:02:32.803 --> 00:02:35.631
I'll use two different ones.

39
00:02:35.631 --> 00:02:39.110
Right, let's go with the third one.

40
00:02:39.110 --> 00:02:39.730
Cool.

41
00:02:39.730 --> 00:02:42.873
And so this frame is a normal frame.

42
00:02:42.873 --> 00:02:46.977
I can either go to the plus sign here and
turn it into auto layout or

43
00:02:46.977 --> 00:02:48.122
I can hit Shift A.

44
00:02:48.122 --> 00:02:50.585
Let's do it this way first.

45
00:02:50.585 --> 00:02:55.100
As you can see the size
of the frame changed

46
00:02:55.100 --> 00:02:59.486
slightly based on the content in there.

47
00:02:59.486 --> 00:03:04.336
And again, everything you know from CSS,
and HTML and

48
00:03:04.336 --> 00:03:09.931
JavaScript and the web,
all of a sudden comes to help you here.

49
00:03:09.931 --> 00:03:12.109
So why did it change size?

50
00:03:12.109 --> 00:03:16.996
If I hit Undo you can see it was all
chaotic happening all over the place,

51
00:03:16.996 --> 00:03:18.312
so on and so forth.

52
00:03:18.312 --> 00:03:24.512
Hit the Auto Layout button, and
it's a little bit more orderly now.

53
00:03:24.512 --> 00:03:30.397
They're all kind of in a line,
there's uniform padding on the top and

54
00:03:30.397 --> 00:03:34.403
the bottom,
at least uniform with each other.

55
00:03:34.403 --> 00:03:37.810
And there's even spacing in between them.

56
00:03:37.810 --> 00:03:40.699
And so let's kind of look at
all the things that changed.

57
00:03:40.699 --> 00:03:45.337
The width and
the height of our frame change to Hug.

58
00:03:45.337 --> 00:03:49.390
That feels nice, right?

59
00:03:49.390 --> 00:03:51.799
You can set it back to a fixed width, and

60
00:03:51.799 --> 00:03:55.317
we'll talk about what that
does in a second here as well.

61
00:03:55.317 --> 00:03:57.975
Then we have this gap, right,

62
00:03:57.975 --> 00:04:03.721
horizontal gap between objects in
the layer or items in this case.

63
00:04:03.721 --> 00:04:09.405
And that is very similar to
the CSS property gap, right?

64
00:04:09.405 --> 00:04:13.405
Which is in a flexbox, the gap
between the various elements in there.

65
00:04:13.405 --> 00:04:17.972
Then we've got horizontal padding,
that does what you think it does, right?

66
00:04:17.972 --> 00:04:19.668
That's the padding on both sides here.

67
00:04:19.668 --> 00:04:21.842
And vertical padding.

68
00:04:21.842 --> 00:04:26.796
If one was to hold down the Command key,
I'm not entirely sure what

69
00:04:26.796 --> 00:04:31.485
it's on Windows, you can actually
change all of them at once,

70
00:04:31.485 --> 00:04:38.140
kinda the same way you do it in CSS, where
it's, what is it, top right, bottom, left.

71
00:04:38.140 --> 00:04:41.528
Or if I want them all to be uniform I
could say, cool, make them all 60 and

72
00:04:41.528 --> 00:04:44.152
it'll change both,
if you just want to change the top and

73
00:04:44.152 --> 00:04:46.029
the bottom you can do those separately.

74
00:04:46.029 --> 00:04:49.774
But holding Command and
clicking there will give you one value,

75
00:04:49.774 --> 00:04:53.722
I don't want to talk about how long
it took me to realize that trick,

76
00:04:53.722 --> 00:04:58.366
and when I wanted to be uniform as doing
the top, the vertical and horizontal and

77
00:04:58.366 --> 00:05:01.311
two separate inputs,
you don't have to do that.

78
00:05:01.311 --> 00:05:06.160
The padding again, we can say, I don't
know, 24, so on and so forth, right?

79
00:05:06.160 --> 00:05:09.118
You can also adjust here as well.

80
00:05:09.118 --> 00:05:13.668
If you want to see the world burn,
you can hit this button and

81
00:05:13.668 --> 00:05:16.762
actually do the individual padding here

82
00:05:16.762 --> 00:05:21.679
as well if that's the thing that you need,
it's there for you.

83
00:05:21.679 --> 00:05:23.236
Gap, we have all those things in place.

84
00:05:23.236 --> 00:05:30.566
Now, if we click on any of the layers
inside of an auto layout frame,

85
00:05:30.566 --> 00:05:36.109
you can see that they have
some new options as well.

86
00:05:36.109 --> 00:05:41.835
So we have two choices between giving it
a fixed width or fill container, right?

87
00:05:41.835 --> 00:05:46.383
And so that's kind of with full in CSS,
the same thing is true for

88
00:05:46.383 --> 00:05:50.948
height, except that unlike CSS,
it actually does something.

89
00:05:50.948 --> 00:05:56.204
So you can have it either expand and
contract with the width or

90
00:05:56.204 --> 00:06:02.403
the height of the frame that it's in or
keep its own set within a height.

91
00:06:02.403 --> 00:06:03.642
Why would you use each?

92
00:06:03.642 --> 00:06:08.677
Well, in the case of these three avatars,
I don't want them stretching, right?

93
00:06:08.677 --> 00:06:11.384
But in the case of an input field or
a search bar or

94
00:06:11.384 --> 00:06:15.925
the overall container of my navigation,
obviously I do want that to stretch and

95
00:06:15.925 --> 00:06:18.188
contract with the container, right?

96
00:06:18.188 --> 00:06:22.076
And so the effect that you're
trying to get is the correct

97
00:06:22.076 --> 00:06:23.864
answer to that question.

98
00:06:23.864 --> 00:06:28.400
The other hidden feature
of an auto layout frame is

99
00:06:28.400 --> 00:06:32.936
you'll notice that if you
hover over the width and

100
00:06:32.936 --> 00:06:36.511
the height, there are now dropdowns.

101
00:06:36.511 --> 00:06:40.613
And again, this is the thing with Figma
sometimes which is, if a feature is not

102
00:06:40.613 --> 00:06:44.674
there, you're doing something wrong,
good luck figuring out what it was.

103
00:06:44.674 --> 00:06:48.171
But it's not that the feature doesn't
exist, it's a lot of it is contextual.

104
00:06:48.171 --> 00:06:51.622
So, if we went back to layout grids,
I go to this,

105
00:06:51.622 --> 00:06:55.840
you can see no drop-down cuz
it's not an auto layout frame.

106
00:06:55.840 --> 00:06:59.896
If I go into the auto layout frame,
I get a drop-down.

107
00:06:59.896 --> 00:07:01.972
See, what does the drop down do?

108
00:07:01.972 --> 00:07:03.760
Great question.

109
00:07:03.760 --> 00:07:08.274
If I click it, I can add min width and
max width, right?

110
00:07:08.274 --> 00:07:12.840
Yeah, [LAUGH] the giggling in the room
says everything you need to know about how

111
00:07:12.840 --> 00:07:14.375
obvious that feature is.

112
00:07:14.375 --> 00:07:18.766
So you can set a min width to say okay,

113
00:07:18.766 --> 00:07:22.610
it should be at minimum 320.

114
00:07:22.610 --> 00:07:29.159
Cool, and then I can also set a max
width of, I don't know, 640, right?

115
00:07:29.159 --> 00:07:33.999
And now, if I grab this I can

116
00:07:33.999 --> 00:07:38.872
only go to a certain width and height.

117
00:07:38.872 --> 00:07:43.151
Cool, so,
this got a little bit bigger now, right?

118
00:07:43.151 --> 00:07:47.672
There's a bunch of options and
things you can do here, for

119
00:07:47.672 --> 00:07:54.132
the actual Auto Layout frame itself we've
got effectively cuz I if I did a pop quiz,

120
00:07:54.132 --> 00:07:59.560
which I won't do to any of you of
a pop quiz Flexbox edition, right?

121
00:07:59.560 --> 00:08:02.788
What is the difference between
justify center and item center or

122
00:08:02.788 --> 00:08:04.390
line item center?

123
00:08:04.390 --> 00:08:05.420
Let's not play that game.

124
00:08:05.420 --> 00:08:09.430
But all of those basic features exist
here in some way, shape, or form.

125
00:08:09.430 --> 00:08:12.315
So you could theoretically center them,
right?

126
00:08:12.315 --> 00:08:18.704
And so now they will kind of always be in
the center of the size of that container.

127
00:08:18.704 --> 00:08:22.071
You can put them to justify end,

128
00:08:22.071 --> 00:08:26.577
justify start, see I could pass the test.

129
00:08:26.577 --> 00:08:29.536
There's, let's see,
let's make this a little taller.

130
00:08:30.706 --> 00:08:34.156
Line items start, line items end,
line items center.

131
00:08:34.156 --> 00:08:38.757
All those combinations of Flexbox play
in here as well if one has dev mode.

132
00:08:38.757 --> 00:08:42.247
Now I'm in this file where I
don't have the paid team, so

133
00:08:42.247 --> 00:08:44.285
we'll take a look at it later.

134
00:08:44.285 --> 00:08:50.435
It will actually give you
the CSS answers after the fact.

135
00:08:50.435 --> 00:08:54.623
Cool, the other thing here is
the gap is currently set to 24,

136
00:08:54.623 --> 00:08:58.742
which is 24 in this point pixels,
in between each of these.

137
00:08:58.742 --> 00:09:07.136
I can also change this to auto which
will now be spaced between, right?

138
00:09:07.136 --> 00:09:12.210
So now they will kind of be in
between just like this as well,

139
00:09:12.210 --> 00:09:19.025
and trying to think what else, we will
talk about this little fun one later.

140
00:09:19.025 --> 00:09:22.315
You can change it to flex
column if you want, and

141
00:09:22.315 --> 00:09:25.406
that will now do it on a vertical axis.

142
00:09:25.406 --> 00:09:26.995
And again, same rules apply.

143
00:09:29.766 --> 00:09:32.321
Or you can do it as a row.

144
00:09:32.321 --> 00:09:35.186
Cool, and we can center them,
so on and so forth.

145
00:09:35.186 --> 00:09:40.423
As you can imagine, insofar that this
is how we think about layout in CSS,

146
00:09:40.423 --> 00:09:43.377
you can see a world
where this becomes a way

147
00:09:43.377 --> 00:09:46.945
that we would likely think
about our designs too.

148
00:09:46.945 --> 00:09:51.777
And this becomes where as a developer
sometimes if you're working with

149
00:09:51.777 --> 00:09:55.722
designers that have use stuff like this,
great, if not,

150
00:09:55.722 --> 00:10:00.013
this is where some of that lag
it is on you to kind of educate.

151
00:10:00.013 --> 00:10:03.981
Because not only does it make it
easier for the designers on your team,

152
00:10:03.981 --> 00:10:07.961
more importantly, it makes it easier for
you when you get the design.

153
00:10:07.961 --> 00:10:11.764
Because even if you don't
have the dev mode turned on,

154
00:10:11.764 --> 00:10:17.135
just being able to see auto or the gap
in there or something along those lines,

155
00:10:17.135 --> 00:10:21.616
right, makes the implementation
part of the show weighs here.

156
00:10:21.616 --> 00:10:26.356
The few other little tiny
things that we can do here.

157
00:10:26.356 --> 00:10:34.666
There are whether or not you want the
strokes included, not the banned button.

158
00:10:34.666 --> 00:10:38.742
I do want borders included in there and
so figuring out by default.

159
00:10:38.742 --> 00:10:43.028
So, if we said let's actually
change this from auto,

160
00:10:43.028 --> 00:10:46.955
let's say eight in between each of them,
right?

161
00:10:46.955 --> 00:10:51.849
And we go ahead and
we say strokes are included.

162
00:10:51.849 --> 00:10:52.719
I didn't do too much.

163
00:10:52.719 --> 00:10:56.299
I'll figure out an example
works in a second, but

164
00:10:56.299 --> 00:11:00.987
it's basically, it's kind of
a box sizing border box, right,

165
00:11:00.987 --> 00:11:05.012
do you take the borders in there or
do you leave them out?

166
00:11:05.012 --> 00:11:08.071
The other interesting
one which is honestly,

167
00:11:08.071 --> 00:11:11.842
rarely uses do you want the first
on top or the last on top?

168
00:11:11.842 --> 00:11:16.010
If you're doing uniquely something
with these avatars like this,

169
00:11:16.010 --> 00:11:18.191
let's make this back to auto.

170
00:11:18.191 --> 00:11:19.935
It creates this effect, right?

171
00:11:19.935 --> 00:11:24.856
If you're saying, how many people are
looking at the Google Doc kind of thing,

172
00:11:24.856 --> 00:11:26.038
so on and so forth.

173
00:11:26.038 --> 00:11:31.361
And then by default,
I almost always want this setting, right?

174
00:11:31.361 --> 00:11:35.544
Do you want the text in the center or
at the baseline?

175
00:11:35.544 --> 00:11:37.054
I've never not wanted this setting.

176
00:11:37.054 --> 00:11:39.375
But if you do need the opposite,
it is there for you.

177
00:11:39.375 --> 00:11:40.455
Tanner.

178
00:11:40.455 --> 00:11:45.535
&gt;&gt; What is the difference between
fixed width and Hug contents?

179
00:11:45.535 --> 00:11:50.100
&gt;&gt; Yep, what is the difference
being fixed width and Hug contents,

180
00:11:50.100 --> 00:11:54.255
fixed width lets you actually
change the size of the frame.

181
00:11:55.505 --> 00:11:57.701
If we change this to Hug contents,

182
00:11:57.701 --> 00:12:01.354
you'll see that I no longer
get the idea of auto, right?

183
00:12:01.354 --> 00:12:07.042
Cuz it's basically, hey,
if these avatars are 100 pixels, and

184
00:12:07.042 --> 00:12:12.339
you're saying that we have 60
pixels of horizontal padding,

185
00:12:12.339 --> 00:12:17.849
well, and we have a gap of eight,
one could check the math on this.

186
00:12:17.849 --> 00:12:23.808
But you end up with, it'll take the size,
it'll Hug the contents and

187
00:12:23.808 --> 00:12:28.220
become a size that fits
exactly what's in there.

188
00:12:28.220 --> 00:12:32.840
And then, turns out, just like code,
the problem is sometimes your code, or

189
00:12:32.840 --> 00:12:37.010
in this case Figma,
is doing exactly what you asked it to do.

190
00:12:37.010 --> 00:12:41.677
Not necessarily what you want it to do,
but exactly what you told it to do.

191
00:12:41.677 --> 00:12:47.618
So previously, I had the stroke
slash the border set to inside,

192
00:12:47.618 --> 00:12:54.342
right, which doesn't add anything to
the width or height of the layer.

193
00:12:54.342 --> 00:12:59.343
But if you set it to outside,
border would be,

194
00:12:59.343 --> 00:13:06.012
then and only then will it actually,
can we go to this frame and

195
00:13:06.012 --> 00:13:11.935
take the auto layout,
excluded, included, right?

196
00:13:11.935 --> 00:13:16.869
When they were on the inside
you could exclude or include,

197
00:13:16.869 --> 00:13:20.802
it didn't matter cuz they were inside.

198
00:13:20.802 --> 00:13:22.772
On the outside,
then you can see the different effect.

199
00:13:22.772 --> 00:13:25.417
So, we've got those in place, and so

200
00:13:25.417 --> 00:13:28.982
how contents just changes
to the size of the thing.

201
00:13:28.982 --> 00:13:33.251
And you'll notice that by definition,
if I have contents and

202
00:13:33.251 --> 00:13:38.012
then I started clicking and dragging,
it went to fixed, right, but

203
00:13:38.012 --> 00:13:41.646
if I double click,
it'll snap back to Hug, right?

204
00:13:41.646 --> 00:13:46.644
So if you don't wanna do all
the distance all the way over here

205
00:13:46.644 --> 00:13:49.908
cuz you're on a 27 inch monitor.

206
00:13:49.908 --> 00:13:54.218
And what seems very small here is actually
a lot bigger when I'm working at my desk.

207
00:13:54.218 --> 00:13:58.338
You can just double click or if you want
to choose to change the size of it, great.

208
00:13:59.831 --> 00:14:03.361
If you send her these, it'll just stay
in the center so on and so forth.

209
00:14:03.361 --> 00:14:09.011
Cool, another example of
where Flexbox becomes

210
00:14:09.011 --> 00:14:15.088
super interesting is consider the button,
right?

211
00:14:15.088 --> 00:14:21.042
One way to make a button if you don't
like yourself, is to go ahead and

212
00:14:21.042 --> 00:14:26.396
we make a rectangle,
fill it with something, I don't know.

213
00:14:26.396 --> 00:14:34.186
We take some text, we say, button, and
then we drag it in and we center it.

214
00:14:34.186 --> 00:14:39.334
And I could get real fancy with
constraints and all of those things.

215
00:14:39.334 --> 00:14:43.104
And I could get it centered and
life could go on the way that I want.

216
00:14:43.104 --> 00:14:48.668
The other way that I could do this
is I type the word, button, right?

217
00:14:48.668 --> 00:14:53.870
It seems small, but it's only
because I'm zoomed out a little bit,

218
00:14:53.870 --> 00:14:55.764
and I just hit Shift + A.

219
00:14:57.954 --> 00:15:00.027
And now it's in an auto layout frame.

220
00:15:00.027 --> 00:15:01.427
And it is kind of centered in there.

221
00:15:01.427 --> 00:15:04.355
It's kind of when you're
implementing a button in CSS,

222
00:15:04.355 --> 00:15:06.433
sometimes you use inline flex, right?

223
00:15:06.433 --> 00:15:07.930
It's kind of centered in there as well.

224
00:15:07.930 --> 00:15:10.432
So I can go ahead and
now give this one a fill layer.

225
00:15:13.580 --> 00:15:15.872
What kind of button do we want?

226
00:15:15.872 --> 00:15:19.487
Let's go with an orange button.

227
00:15:19.487 --> 00:15:24.024
And we'll give it a border radius of,
I don't know.

228
00:15:25.954 --> 00:15:28.304
That's too much.

229
00:15:28.304 --> 00:15:32.504
Eight, and
then we take the padding here as well.

230
00:15:32.504 --> 00:15:36.395
And we could say, eight and four, and

231
00:15:36.395 --> 00:15:41.015
now we get a button that
kind of works all as one

232
00:15:41.015 --> 00:15:46.293
auto layout frame,
the text will be centered.

233
00:15:46.293 --> 00:15:49.047
It's much easier way, and
we don't have to adjust stuff and

234
00:15:49.047 --> 00:15:50.463
set up a bunch of constraints.

235
00:15:50.463 --> 00:15:54.343
If the button changes sizes,
everything kind of works as much.

236
00:15:54.343 --> 00:15:55.823
It becomes an uglier button.

237
00:15:55.823 --> 00:15:57.509
The design decisions
you're accountable for,

238
00:15:57.509 --> 00:15:59.700
I'm just here to tell you
how this stuff works.

239
00:15:59.700 --> 00:16:04.140
But it's a lot easier way to create
a lot of very even simple things.

240
00:16:04.140 --> 00:16:10.920
And what's nice about this is,
let me grab, I have some icons somewhere.

241
00:16:12.270 --> 00:16:13.186
I'll just use an emoji.

242
00:16:17.264 --> 00:16:20.972
Sure that seems like a great one, right?

243
00:16:20.972 --> 00:16:24.641
And now because it's auto layout,
if I wanted to create an icon button,

244
00:16:24.641 --> 00:16:27.003
right, I can just drag
in that second object.

245
00:16:27.003 --> 00:16:30.637
That gap seems like a little much, so
let's go and shrink the gap a little bit,

246
00:16:30.637 --> 00:16:37.327
let's say, It can do the kind

247
00:16:37.327 --> 00:16:41.717
of layout pieces like we would in CSS as
well and create a button super easily.

248
00:16:41.717 --> 00:16:46.818
So auto layout is great for making a nav
bar, it's great for making a button.

249
00:16:46.818 --> 00:16:49.461
If you would do it in Flexbox and CSS,

250
00:16:49.461 --> 00:16:53.482
you should probably use an auto
layout in Figma as well.

