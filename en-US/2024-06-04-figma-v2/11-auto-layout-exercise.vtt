WEBVTT

1
00:00:00.000 --> 00:00:02.084
So we've got a few different exercises.

2
00:00:02.084 --> 00:00:05.620
One is to kind of play
around with this side nav.

3
00:00:05.620 --> 00:00:10.767
Both in this case the items themselves,
just like that button can be auto layout.

4
00:00:10.767 --> 00:00:14.883
And then also the navigation itself
can also be auto layout two.

5
00:00:14.883 --> 00:00:19.821
And then, we'll look at in a little bit
like the idea of creating a menu bar.

6
00:00:19.821 --> 00:00:24.655
But your your mission at this point is
to kind of like take this frame which is

7
00:00:24.655 --> 00:00:29.508
just a regular old frame, and we want
to do is either take these menu items.

8
00:00:29.508 --> 00:00:33.073
Or if you wanna create your own, here's
the component pieces and you can kinda

9
00:00:33.073 --> 00:00:36.543
create nested auto layouts which we'll
kinda get into more in a little bit.

10
00:00:36.543 --> 00:00:39.536
But and create a sidebar that kind
of like stacks up appropriately,

11
00:00:39.536 --> 00:00:41.068
you can make them all go to the top.

12
00:00:41.068 --> 00:00:45.629
You can have them go in the middle,
whatever you wanna do, and

13
00:00:45.629 --> 00:00:49.514
we'll play around with it
together in a little bit.

14
00:00:51.380 --> 00:00:55.741
So back to the main event, we wanna
make this frame an auto layout frame.

15
00:00:55.741 --> 00:00:57.792
So Shift-A, we'll do that.

16
00:00:57.792 --> 00:01:01.252
And you kinda see that this panel then
magically appeared if I hit undo,

17
00:01:01.252 --> 00:01:01.893
it's gone.

18
00:01:01.893 --> 00:01:05.527
If I hold this I hit Shift-A, it's back.

19
00:01:05.527 --> 00:01:08.675
I can either create my own or
drag these in.

20
00:01:08.675 --> 00:01:10.341
So let's drag that in.

21
00:01:10.341 --> 00:01:15.472
And this one is set to hug contents,
right and if I wanted to make that

22
00:01:15.472 --> 00:01:21.428
affects the way they can either choose to
drag it get a little bit taller or not.

23
00:01:21.428 --> 00:01:26.105
This auto layout is set to align top left

24
00:01:26.105 --> 00:01:30.792
which is justify start aligned start.

25
00:01:30.792 --> 00:01:34.502
And then we can drag in another one.

26
00:01:34.502 --> 00:01:37.562
And what's nice about this is I don't
have to lay all that position I was

27
00:01:37.562 --> 00:01:38.225
doing before.

28
00:01:38.225 --> 00:01:43.274
I don't have to do I just drag them in,
right, and then what I

29
00:01:43.274 --> 00:01:49.524
can do is I can go ahead and adjust
the spacing and then all space out evenly.

30
00:01:49.524 --> 00:01:52.810
I could theoretically,
depending on what I wanted to do,

31
00:01:52.810 --> 00:01:56.508
align them down to the bottom,
we'll kind of nav them building.

32
00:01:56.508 --> 00:02:00.704
The real trick that we're gonna
kind of explore in a second is,

33
00:02:00.704 --> 00:02:03.965
just kinda like flexbox,
one flexbox is great.

34
00:02:03.965 --> 00:02:05.936
Do you know what's
better than one flexbox?

35
00:02:05.936 --> 00:02:08.233
Lots of flexboxes.

36
00:02:08.233 --> 00:02:13.087
I heard you like flexbox, so
I put flexbox in your flexbox, right?

37
00:02:13.087 --> 00:02:17.110
And so, these could, right now these
are just kind of positioned as well.

38
00:02:17.110 --> 00:02:22.091
So I can go ahead and
I can make these, flexbox or,

39
00:02:22.091 --> 00:02:26.967
sorry, auto layout,
Freudian slip, as well.

40
00:02:26.967 --> 00:02:33.889
And so now these are auto layouts
inside of an auto layout.

41
00:02:33.889 --> 00:02:38.272
Now they do need a little love in this
case coz they have some amount of overlap

42
00:02:38.272 --> 00:02:39.927
coz we've changed things.

43
00:02:39.927 --> 00:02:44.406
So what we can do is here we accidentally
as it tried to calculate what

44
00:02:44.406 --> 00:02:49.289
the pattern should end up with negative
eight, which is not what we want.

45
00:02:49.289 --> 00:02:51.932
So let's go ahead and turn that eight, so

46
00:02:51.932 --> 00:02:54.961
now I've got spacing in
between each of these.

47
00:02:54.961 --> 00:02:58.597
Okay, next, what's wrong with these?

48
00:02:58.597 --> 00:03:03.185
They're kinda not aligned correctly,
this is where we can go ahead and

49
00:03:03.185 --> 00:03:05.412
let's say start into the center.

50
00:03:05.412 --> 00:03:09.514
Starting to the center,
starting to the center now also,

51
00:03:09.514 --> 00:03:13.461
you can't see coz there's
no stroke on these bullets.

52
00:03:13.461 --> 00:03:15.929
Like you can kind of see
if I just hover over them.

53
00:03:15.929 --> 00:03:22.190
They're all kind of different with, which
I guess isn't bothering anyone except for

54
00:03:22.190 --> 00:03:27.437
the fact that it's absolutely bothering
me and probably all of y'all.

55
00:03:27.437 --> 00:03:30.933
So what we can do here is now,
for these nested ones,

56
00:03:30.933 --> 00:03:34.832
we can say that their job is
to fill the container, right?

57
00:03:34.832 --> 00:03:39.909
And so now they'll stretch out to
be a width of 100% in CSS term's.

58
00:03:39.909 --> 00:03:46.560
As well, and then we can go ahead and
say that each of the,

59
00:03:46.560 --> 00:03:53.500
let's say I don't really want
too much top padding there.

60
00:03:53.500 --> 00:03:57.641
I like the left and the right,

61
00:03:57.641 --> 00:04:01.622
so we'll keep that as well.

62
00:04:01.622 --> 00:04:02.546
And so now yeah,

63
00:04:02.546 --> 00:04:06.452
we can put the flexbox in inside of
the various flexbox things as well.

64
00:04:06.452 --> 00:04:10.433
Let's say hypothetically one of
the situation where settings was at

65
00:04:10.433 --> 00:04:14.971
the bottom, but we wanted notifications
and experiments at the top, right?

66
00:04:14.971 --> 00:04:16.561
So what do we do about that.

67
00:04:16.561 --> 00:04:19.522
Well, I know how to do one of them, right?

68
00:04:19.522 --> 00:04:24.382
I can say fill container, and then I
can set this one actually to be top and

69
00:04:24.382 --> 00:04:25.030
center.

70
00:04:25.030 --> 00:04:27.474
Now, this would be problematic and

71
00:04:27.474 --> 00:04:32.860
like if we were implementing because
this was entirely be clickable, right?

72
00:04:32.860 --> 00:04:37.819
And you can be what if I want experiments
and notifications at the top?

73
00:04:37.819 --> 00:04:42.937
You're like, well, just big settings,
the big one, no, right?

74
00:04:42.937 --> 00:04:47.167
The answer is more flexbox or
more auto layout.

75
00:04:47.167 --> 00:04:52.110
See, I slipped again,
which I can take these two, right?

76
00:04:52.110 --> 00:04:56.665
And I can Shift-A them, right?

77
00:04:56.665 --> 00:05:02.746
And so now this is also an auto layout,
but they set the fill container.

78
00:05:02.746 --> 00:05:09.077
Yeah, let's make our menu
bar the source of truth.

79
00:05:09.077 --> 00:05:15.805
So now, this one can also go ahead and
fill towards the top.

80
00:05:15.805 --> 00:05:20.083
So these are each individual clickable
regions if we implemented this in

81
00:05:20.083 --> 00:05:21.142
the DOM, right?

82
00:05:21.142 --> 00:05:23.562
But this whole section will then
fill up all expanded space.

83
00:05:23.562 --> 00:05:27.141
So basically, that's got to hide
a fool and it pushes the rest.

84
00:05:27.141 --> 00:05:31.329
Now, if this one was also set as well then
we get into all the fun of playing and

85
00:05:31.329 --> 00:05:34.166
messing around with flexbox,
let's not do that.

86
00:05:34.166 --> 00:05:37.503
But basically a lot of times you can
create very complicated not the right

87
00:05:37.503 --> 00:05:41.073
word, sophisticated, how about that
sophisticated makes us feel better?

88
00:05:41.073 --> 00:05:44.458
Sophisticated layouts with auto layout.

89
00:05:44.458 --> 00:05:51.256
And as developers, in a lot of ways you're
like, I don't know much about design.

90
00:05:51.256 --> 00:05:54.294
You get a head start on this one
because you do this day in and

91
00:05:54.294 --> 00:05:56.712
day out as you're laying
stuff out in the DOM.

92
00:05:56.712 --> 00:06:03.701
And basically that mental model
completely applies here as well.

93
00:06:03.701 --> 00:06:08.072
A lot of times we can get all of these
various effects by taking that same

94
00:06:08.072 --> 00:06:12.462
intuition in CSS and applying it to
Figma and one auto layout is great.

95
00:06:12.462 --> 00:06:13.611
A lot of times,

96
00:06:13.611 --> 00:06:18.661
like auto layouts inside of auto
layouts will get you a lot farther.

97
00:06:18.661 --> 00:06:22.021
Things like a menu bar where like,
can you think about the Safari or

98
00:06:22.021 --> 00:06:24.849
Chrome not chrome console
that was towards the bottom.

99
00:06:24.849 --> 00:06:28.009
But where the location bar is in
the center but kinda expands and

100
00:06:28.009 --> 00:06:31.713
retracts with the window, but
you still have the back and forth buttons.

101
00:06:31.713 --> 00:06:35.760
And then the other extensions on the other
side, you can kinda do those layouts

102
00:06:35.760 --> 00:06:39.499
simply by having a bunch of nested auto
layouts that then kinda expand and

103
00:06:39.499 --> 00:06:41.049
contract based on the width.

104
00:06:41.049 --> 00:06:44.882
And you can even set a max width and
a max height here as well.

105
00:06:44.882 --> 00:06:49.160
So, let's just do that, and
then we'll move into, I'm slightly

106
00:06:49.160 --> 00:06:54.128
stepping into auto layout part two,
nested auto layouts, but that's fine.

107
00:06:54.128 --> 00:06:56.491
We'll do a deeper dive in a second.

108
00:06:56.491 --> 00:07:01.629
But let's set it, if I want the min-width
of this navigation bar to, let's say 180.

109
00:07:01.629 --> 00:07:07.492
We can say the max width is,
360 in this case,

110
00:07:07.492 --> 00:07:13.511
maybe that's a little much for
a navigation bar.

111
00:07:13.511 --> 00:07:18.393
But you can see now it's got a, and
if this was inside of a container as well,

112
00:07:18.393 --> 00:07:22.055
then you could also then choose
to say fill contents, but

113
00:07:22.055 --> 00:07:25.062
it will never grow past its max width,
right?

114
00:07:25.062 --> 00:07:27.338
And this will become really important for

115
00:07:27.338 --> 00:07:30.663
us a little bit when we try to
do like responsive components.

116
00:07:30.663 --> 00:07:34.662
Like, okay, have a card that's vertical
until it gets to a certain width and

117
00:07:34.662 --> 00:07:37.506
then kind of switch into
a horizontal format, right?

118
00:07:37.506 --> 00:07:39.702
You can say fill container,
but have a max size and

119
00:07:39.702 --> 00:07:43.063
we can use that flex wrap and do a lot
of really, really interesting things.

120
00:07:43.063 --> 00:07:46.812
That kind of feel a lot like implementing
responsive dynasty assess, but

121
00:07:46.812 --> 00:07:48.266
we can do that in the design.

122
00:07:48.266 --> 00:07:51.409
And this is kind of the thing I was
kind of saying the very beginning.

123
00:07:51.409 --> 00:07:56.007
Like using similar approaches and both
the design that match up with how you'll

124
00:07:56.007 --> 00:07:59.866
go about implementing it,
makes it easier to implement, right?

125
00:07:59.866 --> 00:08:05.391
If all of a sudden the design has a bunch
of responsive design flexbox concepts,

126
00:08:05.391 --> 00:08:07.205
when you get that design,

127
00:08:07.205 --> 00:08:12.252
translating that into the actual
implementation becomes a lot easier.

128
00:08:12.252 --> 00:08:15.414
Because the kind of mental
framework is already there for you.

