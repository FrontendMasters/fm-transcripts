WEBVTT

1
00:00:00.180 --> 00:00:05.273
We're going to dive back into our app,
and we're in the same code file and

2
00:00:05.273 --> 00:00:09.727
everything and we're going to
do a bit more complicated query.

3
00:00:09.727 --> 00:00:14.667
So, one thing to note too, is I
mentioned that if you create a comp if

4
00:00:14.667 --> 00:00:18.742
you try to run a composite query
We will throw an error and

5
00:00:18.742 --> 00:00:23.107
we say hey you need to create
this in order to run this query.

6
00:00:23.107 --> 00:00:28.243
That is only true for production queries
when you're using the emulator.,

7
00:00:28.243 --> 00:00:33.830
If it's running against a local emulator,
we don't have to worry about scale.

8
00:00:33.830 --> 00:00:35.600
You're still in development,

9
00:00:35.600 --> 00:00:38.750
we're not gonna make you
create any composite queries.

10
00:00:38.750 --> 00:00:42.125
And especially since that takes
time to create the composite query.

11
00:00:42.125 --> 00:00:46.100
And you only have a certain limit of it,
we just let you run whatever composite

12
00:00:46.100 --> 00:00:49.480
queries you want to in the emulator and
know If errors are thrown.

13
00:00:49.480 --> 00:00:53.641
So before you go to production, whatever
composite queries that you are running

14
00:00:53.641 --> 00:00:57.190
against the emulator, you want to
make sure that you have created for

15
00:00:57.190 --> 00:01:02.464
production All right, so this one.

16
00:01:02.464 --> 00:01:07.290
Get all expenses between July 2021 and
October 2021.

17
00:01:07.290 --> 00:01:09.290
So that's this one right here.

18
00:01:09.290 --> 00:01:13.223
So that's we can copy and
paste code that is always great But

19
00:01:13.223 --> 00:01:16.814
we want to say is categorized as fun So

20
00:01:16.814 --> 00:01:20.903
I'm gonna copy the internals of this.

21
00:01:23.740 --> 00:01:28.483
And I'll say where category

22
00:01:28.483 --> 00:01:32.636
Equal, equal, to fun.

23
00:01:32.636 --> 00:01:34.465
And so this right here,

24
00:01:34.465 --> 00:01:38.950
now becomes a composite query
because this is two fields.

25
00:01:38.950 --> 00:01:42.700
Before is always one field,
now it's more than one field.

26
00:01:42.700 --> 00:01:45.940
So let's save So we run it.

27
00:01:45.940 --> 00:01:46.620
And look at that.

28
00:01:46.620 --> 00:01:51.070
We have our costs, we have our costs,
we have our category.

29
00:01:51.070 --> 00:01:53.920
Everything in the category is fun.

30
00:01:53.920 --> 00:01:56.550
And if we look, this is in July.

31
00:01:56.550 --> 00:01:57.170
I started in July.

32
00:01:57.170 --> 00:01:58.420
Sorry, did I say July?

33
00:01:58.420 --> 00:01:59.330
I did this.

34
00:01:59.330 --> 00:01:59.930
There'll be tween.

35
00:01:59.930 --> 00:02:01.000
Yeah, we're in July.

36
00:02:01.000 --> 00:02:02.570
We're gonna be in July.

37
00:02:02.570 --> 00:02:07.938
To October.Dates are weird you know,
and so we're in July and

38
00:02:07.938 --> 00:02:15.230
as we scroll down,yes, this isn't
September and we stop at September 30th.

39
00:02:15.230 --> 00:02:17.281
So this satisfies our query.

40
00:02:19.913 --> 00:02:26.145
Now, I want you all to see if you
can tackle the last two ones.

41
00:02:26.145 --> 00:02:29.500
These you can use all the above code.

42
00:02:29.500 --> 00:02:30.940
I'll keep it on the screen.

43
00:02:30.940 --> 00:02:36.520
But this exercise time,
we're going to get all expenses that are.

44
00:02:36.520 --> 00:02:42.177
Not categorized, or that I get all
expenses, or you can limit, if you want,

45
00:02:42.177 --> 00:02:47.498
that are not categorized as fun,
clothes, gifts, home and personal.

46
00:02:50.363 --> 00:02:52.476
But this one will be a composite,
but it's fine.

47
00:02:52.476 --> 00:02:53.523
This is still a good one to do.

48
00:02:53.523 --> 00:02:54.750
This last one is a composite.

