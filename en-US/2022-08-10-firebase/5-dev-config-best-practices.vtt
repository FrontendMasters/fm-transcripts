WEBVTT

1
00:00:00.107 --> 00:00:02.360
So, what did we learn through this?

2
00:00:02.360 --> 00:00:06.954
We learned that with the Firebase project,
that's a big just container for

3
00:00:06.954 --> 00:00:08.760
all of my Firebase services.

4
00:00:08.760 --> 00:00:10.863
You create a Firebase project and

5
00:00:10.863 --> 00:00:15.681
then you create a Firebase app that
allows you to connect to these services.

6
00:00:15.681 --> 00:00:18.903
Then we you the Firebase SDK
to write to this services or

7
00:00:18.903 --> 00:00:20.732
read data from this services.

8
00:00:20.732 --> 00:00:27.434
And we use the Firebase CLI to do
deployment, but a lot went wrong.

9
00:00:27.434 --> 00:00:31.843
So first of, security, like I said,
advising a DELETE request to

10
00:00:31.843 --> 00:00:35.717
that database, everything gone,
and that's not good.

11
00:00:35.717 --> 00:00:37.850
Also the code structure.

12
00:00:37.850 --> 00:00:41.519
In every single route in every file
I was writing, import Firebase app,

13
00:00:41.519 --> 00:00:45.382
get this, get that, and that's really
verbose, and we don't need that.

14
00:00:45.382 --> 00:00:49.056
And also, I'm developing
against production services,

15
00:00:49.056 --> 00:00:51.194
that's probably not a good idea.

16
00:00:51.194 --> 00:00:52.591
We've seen all of the memes and

17
00:00:52.591 --> 00:00:55.674
all the T-shirt,s about how it's
bad to do things in production.

18
00:00:55.674 --> 00:00:58.124
And so these are cloud enabled services,

19
00:00:58.124 --> 00:01:02.814
I should be able to do that without having
to worry about network connectivity or

20
00:01:02.814 --> 00:01:06.254
messing with data across
the synchronized environment.

21
00:01:06.254 --> 00:01:11.411
And also the deployment here,
I'm deploying out this.

22
00:01:11.411 --> 00:01:14.010
This was my site, this markdown-me,

23
00:01:14.010 --> 00:01:18.678
I'm deploying out to production
every single time to see my changes.

24
00:01:18.678 --> 00:01:20.185
And that's not great,

25
00:01:20.185 --> 00:01:25.095
I would like to have a staging space to
be able to do those deployments as well.

26
00:01:25.095 --> 00:01:29.604
Another thing too, I kind of just very
much hand waved over collections and

27
00:01:29.604 --> 00:01:31.119
documents and all that.

28
00:01:31.119 --> 00:01:33.665
And I was just kind of like, hey,
I wanna write data really quick.

29
00:01:33.665 --> 00:01:36.006
I'm not really thinking
about my data structure.

30
00:01:36.006 --> 00:01:38.449
And FireStore is a NoSQL database.

31
00:01:38.449 --> 00:01:42.007
And there's a lot of great things and
a lot of great structuring you can do with

32
00:01:42.007 --> 00:01:44.272
NoSQL, but
you have to know what you're doing.

33
00:01:44.272 --> 00:01:47.704
And I didn't realize it,
I was just writing data.

34
00:01:47.704 --> 00:01:51.832
So what I'd like to do,
is I'd like to go and make this better.

35
00:01:55.278 --> 00:02:00.401
So to do that, I'm gonna go into the best

36
00:02:00.401 --> 00:02:04.930
practices setup, cd.., cd..

37
00:02:04.930 --> 00:02:11.757
And then, which one is it
CD to best practices setup,

38
00:02:11.757 --> 00:02:16.778
CD start, and let's open up this one.

39
00:02:16.778 --> 00:02:20.260
&gt;&gt; Is there a place where
the final code is published?

40
00:02:20.260 --> 00:02:24.213
&gt;&gt; Yes, yeah, in every folder there
is a start and there's a final.

41
00:02:24.213 --> 00:02:27.229
And the final is already pre-baked, so

42
00:02:27.229 --> 00:02:33.096
if anyone just wants to go look at them
right now that's already there, yeah.

43
00:02:33.096 --> 00:02:36.796
So within here we have the same
project as we had before,

44
00:02:36.796 --> 00:02:40.828
I have a different project in this case,
but it's all fine.

45
00:02:40.828 --> 00:02:45.156
What I have my Firebase,
everything is all set up.

46
00:02:45.156 --> 00:02:50.469
What I want to do now is I want to set
this up so I'm not talking to production

47
00:02:50.469 --> 00:02:55.294
services, and I wanna rewrite my
code structure a little better.

48
00:02:55.294 --> 00:02:59.403
So I'm gonna create a file
called firebase.js.

49
00:02:59.403 --> 00:03:03.571
Now there are more advanced ways of
structuring your Firebase code, but

50
00:03:03.571 --> 00:03:07.600
I'm gonna show something that I think
is sort of like a tried and true,

51
00:03:07.600 --> 00:03:11.973
battle tested way of writing service
code that kind of survives across weird

52
00:03:11.973 --> 00:03:14.913
development things like
hot module replacement,

53
00:03:14.913 --> 00:03:18.240
which can be really weird with
things that are stateful.

54
00:03:18.240 --> 00:03:23.098
And so I'm gonna go through, and
I'm gonna write what I think

55
00:03:23.098 --> 00:03:27.129
is a really good way to
handle your Firebase setup.

56
00:03:27.129 --> 00:03:32.934
So I'm gonna import from Firebase app,
and we're gonna call InitializeApp.

57
00:03:32.934 --> 00:03:37.217
And then I'm gonna import from the config,

58
00:03:37.217 --> 00:03:41.748
just like before, and
we'll get the config.

59
00:03:41.748 --> 00:03:46.494
And then, now I'm gonna create
a function called, Initialize().

60
00:03:50.763 --> 00:03:56.496
And I'll create a Firebase app inside

61
00:03:56.496 --> 00:04:01.333
of here, say initializeApp and

62
00:04:01.333 --> 00:04:05.286
call config.firebase.

63
00:04:05.286 --> 00:04:07.217
But I'm also gonna want other services.

64
00:04:07.217 --> 00:04:13.257
So I'll import from firebase/firestore.

65
00:04:15.463 --> 00:04:17.920
And also want auth.

66
00:04:24.398 --> 00:04:29.511
So within here all of these two services.

67
00:04:29.511 --> 00:04:35.944
So I'll say get oath, just auth, sorry,
is getAuth and then getFirestore as well.

68
00:04:45.706 --> 00:04:51.455
So I could just export this function,
and then from within here I

69
00:04:51.455 --> 00:04:58.171
could just return all of these services
as an object for other files to use.

70
00:04:58.171 --> 00:05:00.376
But I'm gonna wanna do
some more advanced things.

71
00:05:00.376 --> 00:05:03.990
So if I'm running locally, I wanna run
against the Firebase emulator suite.

72
00:05:03.990 --> 00:05:08.873
So Firebase comes with a whole set of
emulators, so I don't actually have

73
00:05:08.873 --> 00:05:13.311
to talk over the cloud,
I get a sandbox development environment.

74
00:05:13.311 --> 00:05:18.269
So I can import data into it, I can
export data out of it, I can just start

75
00:05:18.269 --> 00:05:23.333
from scratch with every single run,
it makes it really easy to develop.

76
00:05:23.333 --> 00:05:28.915
And the emulator suite also comes with
its own local UI that is tailored for

77
00:05:28.915 --> 00:05:33.973
development tasks, that is
different from the console UI, yes.

78
00:05:33.973 --> 00:05:36.314
&gt;&gt; When talking to the database,

79
00:05:36.314 --> 00:05:40.462
does firebase setup a web
socket versus in web socket?

80
00:05:40.462 --> 00:05:41.461
&gt;&gt; That's a great question.

81
00:05:41.461 --> 00:05:43.234
&gt;&gt; Or
how does that data syncing [INAUDIBLE]?

82
00:05:43.234 --> 00:05:45.633
&gt;&gt; It depends on which database you use.

83
00:05:45.633 --> 00:05:50.489
So that Firebase doesn't just have one
database, it has two databases and

84
00:05:50.489 --> 00:05:55.220
so the original database is
called the real time database.

85
00:05:55.220 --> 00:05:59.985
And that is actually back in the days
what people used to refer to as

86
00:05:59.985 --> 00:06:02.820
That's my Firebase would
refer to the database.

87
00:06:02.820 --> 00:06:06.760
Now Firebase is more than
just the real time database.

88
00:06:06.760 --> 00:06:10.727
That database we're not covering today
because it has shares a lot of similar

89
00:06:10.727 --> 00:06:13.730
philosophies and
FireStore just has a lot more features.

90
00:06:13.730 --> 00:06:19.082
So I want it to Focusing on that, but
the real time database sets up over

91
00:06:19.082 --> 00:06:24.550
a WebSocket connection and
that's how that one works with FireStore.

92
00:06:24.550 --> 00:06:30.646
it doesn't use a WebSocket, it uses HTTP
to do like a long live HTTP connection.

93
00:06:30.646 --> 00:06:35.071
And there's a whole real time
server that knows how to send

94
00:06:35.071 --> 00:06:37.700
the delta of changes that happen.

95
00:06:37.700 --> 00:06:42.137
So even though you ask for
a stream of all updates if a user only

96
00:06:42.137 --> 00:06:46.487
updates one document out of
a collection of 100 of them,

97
00:06:46.487 --> 00:06:52.316
when that new on snapshot fires, it might
give you that whole data object back,

98
00:06:52.316 --> 00:06:57.630
but it's only going to sync the changes
that occurred over the network.

99
00:06:57.630 --> 00:07:01.928
So you're not doing a whole other set of
reads because it's aware of what data is

100
00:07:01.928 --> 00:07:04.700
locally available and
only what data had changed.

101
00:07:05.820 --> 00:07:08.400
So it really helps cut down
on bandwidth consumption

