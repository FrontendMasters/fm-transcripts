WEBVTT

1
00:00:00.390 --> 00:00:05.284
All right so let's take a look on how you
would do that with these two queries,

2
00:00:05.284 --> 00:00:07.318
we're gonna get all expenses or

3
00:00:07.318 --> 00:00:11.850
you can limit them I don't know
why I said well but it's fine.

4
00:00:11.850 --> 00:00:18.820
So expenses collection, where expenses
are not categorized as funds.

5
00:00:18.820 --> 00:00:24.952
So I can say where category is not in and

6
00:00:24.952 --> 00:00:30.700
I wrote this almost to fit right in,

7
00:00:30.700 --> 00:00:33.970
except for the end.

8
00:00:33.970 --> 00:00:38.633
And so now it'll be able to see this one,
two, three, four,

9
00:00:38.633 --> 00:00:43.440
five, so it's five out of
the ten that I can use for that.

10
00:00:43.440 --> 00:00:48.550
Usually, I'll format these down on all one
per line, so it's a little more readable.

11
00:00:48.550 --> 00:00:54.097
For now, let's refresh and
that let's see here can I remember food,

12
00:00:54.097 --> 00:00:58.340
clothes, gifts,
home personal enough food sorry.

13
00:00:58.340 --> 00:01:03.538
Fun clothes gifts home personal and
yeah so ton of stuff but

14
00:01:03.538 --> 00:01:11.440
it's mostly food and healthcare and not
housing so not those ones as we can see.

15
00:01:11.440 --> 00:01:15.980
So the not in operator right there
helps you eliminate a bunch of stuff.

16
00:01:15.980 --> 00:01:19.005
Now for the more complex query.

17
00:01:20.382 --> 00:01:25.729
We wanna get all expenses that
are categorized as food so

18
00:01:25.729 --> 00:01:31.661
expenses, collection, where,
category is equal to food.

19
00:01:31.661 --> 00:01:33.810
You also can do.

20
00:01:36.161 --> 00:01:40.238
In food as well, it's the same thing,
this will just give you more options.

21
00:01:40.238 --> 00:01:47.676
So just depending on what you're trying
to express and then we want to say where.

22
00:01:47.676 --> 00:01:52.104
Date is greater than December,

23
00:01:52.104 --> 00:01:59.648
thank you very much not January
greater than new date or

24
00:01:59.648 --> 00:02:03.584
that occurred in December so

25
00:02:03.584 --> 00:02:09.989
that is greater than 11/31/2021.

26
00:02:13.072 --> 00:02:19.703
And date is less than 1/1/2022, and

27
00:02:19.703 --> 00:02:24.935
now for this last one we wanna see but

28
00:02:24.935 --> 00:02:28.250
as not on 12/26,

29
00:02:28.250 --> 00:02:34.004
you can say where date I can say not equal

30
00:02:34.004 --> 00:02:39.431
to new date 12/26/2021.

31
00:02:42.113 --> 00:02:45.731
Yes, all right, save that.

32
00:02:45.731 --> 00:02:50.276
And as we scroll through we don't
have any date for 12/26, and

33
00:02:50.276 --> 00:02:54.996
just to show that it would be there,
because if my dataset is correct.

34
00:02:54.996 --> 00:03:00.179
We have all these 26 ones when I take it
out so the not equals and you can even

35
00:03:00.179 --> 00:03:05.710
do for multiple dates you could do not in
and then provide a whole array of dates.

36
00:03:05.710 --> 00:03:10.202
So if imagine some calendar picker where
you're trying to find certain things when

37
00:03:10.202 --> 00:03:14.759
someone's saying exclude these dates from
my selection those would all become part

38
00:03:14.759 --> 00:03:15.930
of the noddin query.

