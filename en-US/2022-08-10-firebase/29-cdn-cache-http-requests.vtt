WEBVTT

1
00:00:00.240 --> 00:00:06.703
And so that's the lot of showing,
it's time for some telling.

2
00:00:06.703 --> 00:00:12.300
So I'm going to cd into
six cloud functions start,

3
00:00:12.300 --> 00:00:15.430
and let's open up the code.

4
00:00:19.481 --> 00:00:27.291
So, functions right here
is in this index.js file.

5
00:00:27.291 --> 00:00:31.562
And so what I've done is I've created a
whole series of functions that I wanna go

6
00:00:31.562 --> 00:00:33.946
through to show some
cool things you can do.

7
00:00:33.946 --> 00:00:35.421
One of my favorite use cases for

8
00:00:35.421 --> 00:00:38.612
cloud functions is you can integrate
it in with Firebase Hosting.

9
00:00:38.612 --> 00:00:42.606
So Firebase Hosting started out as
a static only hosting provider, so

10
00:00:42.606 --> 00:00:46.550
only hosting CSS, HTMLs,
JavaScript files, images and whatnot.

11
00:00:46.550 --> 00:00:48.400
And you couldn't do any
dynamic server code.

12
00:00:48.400 --> 00:00:52.098
Well, we've integrated in with cloud
functions that allow you to kinda get

13
00:00:52.098 --> 00:00:53.616
the best of both worlds there.

14
00:00:53.616 --> 00:00:58.351
Where you can do server side
generation of your webpages, but

15
00:00:58.351 --> 00:01:03.646
also still get a lot of the CDN
caching benefits of Firebase Hosting.

16
00:01:03.646 --> 00:01:07.594
So the way this works is, is that I
have this trigger right here, for

17
00:01:07.594 --> 00:01:09.460
every time a request happens.

18
00:01:09.460 --> 00:01:14.230
So let's say that I want to say,
hey you, I got a response.

19
00:01:14.230 --> 00:01:16.890
I'm gonna send down some HTML.

20
00:01:16.890 --> 00:01:23.694
And all this simple website is going
to do, is it's going to do Date.now,

21
00:01:23.694 --> 00:01:28.880
so that will just give you
a little timestamp every time.

22
00:01:30.010 --> 00:01:34.238
And what you can do, and you will only
see this until you deploy because local

23
00:01:34.238 --> 00:01:38.660
deployment doesn't have, we don't
have a CDN running on our machine.

24
00:01:38.660 --> 00:01:42.390
But when you deploy,
you'll see the effects of caching.

25
00:01:42.390 --> 00:01:47.118
With Firebase Hosting,
you can set cache control headers,

26
00:01:47.118 --> 00:01:51.382
and say all right,
whenever this function is called,

27
00:01:51.382 --> 00:01:55.570
put it back into the CDN cache for
this amount of time.

28
00:01:55.570 --> 00:01:58.490
And that's called a TTL,
or a time to live.

29
00:01:58.490 --> 00:02:05.570
And so this way this function will not get
called again, until that TTL has expired.

30
00:02:05.570 --> 00:02:11.181
And when we're serving from a CDN cache,
it is immensely faster because that is

31
00:02:11.181 --> 00:02:16.390
a static file, for all intents and
purposes, on a machine near the user.

32
00:02:16.390 --> 00:02:21.121
So if there is a CDN edge somewhere nearby
us here, I believe there's one in Iowa or

33
00:02:21.121 --> 00:02:25.578
something nearby, and I made a request
out to it, it would just go to there and

34
00:02:25.578 --> 00:02:26.353
right back.

35
00:02:26.353 --> 00:02:30.553
But if the TTL was expired, it would then
go all the way out to Cloud Functions,

36
00:02:30.553 --> 00:02:31.390
then store it.

37
00:02:31.390 --> 00:02:36.166
And then everyone else who's requesting
that resource in this location,

38
00:02:36.166 --> 00:02:39.597
they also will get it from
the cache until it expires.

39
00:02:39.597 --> 00:02:43.046
So it's a really great way of having
dynamic with a little bit of caching,

40
00:02:43.046 --> 00:02:46.400
it's kinda like a little slider of,
how dynamic or how static are you?

41
00:02:47.770 --> 00:02:53.810
And how we do that is we set
a cache control header, and

42
00:02:53.810 --> 00:03:00.190
cache control is a notoriously
interesting header.

43
00:03:00.190 --> 00:03:04.420
You first start out by saying
this is publicly cacheable.

44
00:03:04.420 --> 00:03:06.300
And then we set the max-age.

45
00:03:06.300 --> 00:03:11.889
Max-age is how long this lives
in the local browser cache.

46
00:03:11.889 --> 00:03:13.173
And everything is in seconds.

47
00:03:13.173 --> 00:03:14.691
So I'll say 500 seconds.

48
00:03:14.691 --> 00:03:17.859
And then we use s-maxage.

49
00:03:17.859 --> 00:03:24.792
And if you're wondering, hey,
you miss the dash and max-age, I didn't.

50
00:03:24.792 --> 00:03:26.299
And there's just no dash in that one.

51
00:03:26.299 --> 00:03:28.610
That's just how it is.

52
00:03:28.610 --> 00:03:35.390
And I can say, this one will be for
1000, so double the seconds of that.

53
00:03:35.390 --> 00:03:39.644
And so now this will store in the cache
for this amount of time when it goes back.

54
00:03:39.644 --> 00:03:41.886
So I wanna set the headers first.

55
00:03:45.263 --> 00:03:48.556
And now from here I have this function,
but it's not going to be hooked up to

56
00:03:48.556 --> 00:03:51.084
Firebase Hosting, and
we'll see here in just a minute.

57
00:03:51.084 --> 00:03:56.619
So I'm gonna Run the emulators,
which I have running.

58
00:03:56.619 --> 00:04:00.530
I have this little shell script
that kinda runs it all for me.

59
00:04:00.530 --> 00:04:04.020
And it's set some hosts for the EMs.

60
00:04:04.020 --> 00:04:06.547
So the Admin SDK to hook
up with the emulators

61
00:04:06.547 --> 00:04:09.771
needs to know these environment
variables right here.

62
00:04:09.771 --> 00:04:13.607
So you say, Firebase off emulator host,
Firebase emulator host or

63
00:04:13.607 --> 00:04:15.167
fire store emulator host.

64
00:04:15.167 --> 00:04:19.163
And that way the Admin SDK,
won't talk to a production environment,

65
00:04:19.163 --> 00:04:20.663
it talks to the emulator.

66
00:04:20.663 --> 00:04:24.572
So I can say sh emulators.sh.

67
00:04:27.389 --> 00:04:32.030
And now it's going to run

68
00:04:32.030 --> 00:04:36.234
all of the emulators.

69
00:04:36.234 --> 00:04:38.883
It takes a bit to boot, but great.

70
00:04:38.883 --> 00:04:43.393
And what I can actually do is I
can go into the emulator UI and

71
00:04:43.393 --> 00:04:48.281
it says, hey great,
we see that you have a function named SSR.

72
00:04:48.281 --> 00:04:51.050
Here's your local URL for it.

73
00:04:51.050 --> 00:04:53.493
It even prints it out in
the terminal as well, but

74
00:04:53.493 --> 00:04:57.710
I just wanted to show that you also
can get it in the local emulator.

75
00:04:57.710 --> 00:05:01.181
So now, hey look.

76
00:05:01.181 --> 00:05:04.378
We don't see the benefits of
the CDN because like I said,

77
00:05:04.378 --> 00:05:05.920
no CDN is run on localhost.

78
00:05:05.920 --> 00:05:07.282
It's just localhost.

79
00:05:07.282 --> 00:05:12.519
But if I were to deploy it, you would
see because I believe it still applies.

80
00:05:12.519 --> 00:05:18.637
This just zoomed in,
I don't know if we'll be able to do this.

81
00:05:18.637 --> 00:05:22.780
Wow, yeah, let me zoom out for a second.

82
00:05:22.780 --> 00:05:27.253
SSR, headers, cache-control.

83
00:05:27.253 --> 00:05:30.133
So this right here is set,
the CDN will understand this,

84
00:05:30.133 --> 00:05:32.180
it will handle all of our caching for us.

85
00:05:32.180 --> 00:05:34.440
So that's all we need to do,
is apply that.

86
00:05:34.440 --> 00:05:37.470
But it still prints out
this kinda ugly URL.

87
00:05:37.470 --> 00:05:39.586
I wish it was more on a regular site.

88
00:05:39.586 --> 00:05:43.179
Most people, you don't say,
visit my site @

89
00:05:43.179 --> 00:05:48.166
frontdeskmasters@UScentral1SSR, you
want a real domain.

90
00:05:48.166 --> 00:05:49.778
So with Firebase Hosting,

91
00:05:49.778 --> 00:05:54.471
you can set up custom domains onto it and
then deploy your site out onto that, but

92
00:05:54.471 --> 00:05:58.552
we also give you a whatever your
project ID.web.app is by default.

93
00:05:58.552 --> 00:06:02.552
So that's why in the beginning I was like,
name your project ID something cool

94
00:06:02.552 --> 00:06:05.778
because you can get your own
cool.web.app domain from that.

95
00:06:05.778 --> 00:06:11.366
And to hook this up with Firebase Hosting,
all I have to do is my hosting

96
00:06:11.366 --> 00:06:16.701
config in my firebase.json and
say, I want to specify a rewrite.

97
00:06:16.701 --> 00:06:22.302
And whenever we encounter I could say,
the path of hello,

98
00:06:22.302 --> 00:06:27.900
or the path of SSR, or
I can even use a glob pattern and say,

99
00:06:27.900 --> 00:06:33.528
any path at all ,it's going
to call a function named SSR.

100
00:06:36.439 --> 00:06:41.441
And so now, I need to,
yes, I'll just kill the,

101
00:06:44.159 --> 00:06:48.856
I'm in Firebase off, I'm in the wrong one,
so let's just copy that over.

102
00:06:48.856 --> 00:06:50.051
Where is it?

103
00:06:50.051 --> 00:06:55.686
Too many, okay,
we need to edit the firebase.json in here.

104
00:06:55.686 --> 00:06:59.286
I had it right in there anyways.

105
00:06:59.286 --> 00:07:02.821
So we have rewrite source "**",
let's call that function.

106
00:07:02.821 --> 00:07:06.420
And that SSR,
is what we named it right here.

107
00:07:06.420 --> 00:07:14.845
And so now when I write sh emulators.sh,

108
00:07:14.845 --> 00:07:19.192
it's going to run.

109
00:07:19.192 --> 00:07:20.250
It's not running.

110
00:07:23.100 --> 00:07:27.288
Why is it not running fire store,
I mean the Firebase.

111
00:07:27.288 --> 00:07:32.946
It's not running all Firebase,
I didn't say and, sorry, and hosting

112
00:07:45.670 --> 00:07:48.178
All right,
it's importing all the stuff, great.

113
00:07:48.178 --> 00:07:55.662
And so now we're in here and
my hosting URL is at localhost5021.

114
00:07:55.662 --> 00:07:57.053
My gosh, where's my browser tab?

115
00:07:57.053 --> 00:07:57.908
Here it is.

116
00:07:59.988 --> 00:08:03.874
And hey, now it rewrites and it works.

117
00:08:03.874 --> 00:08:07.503
This is super basic and
not good looking, but

118
00:08:07.503 --> 00:08:10.760
you can run a whole NextJS app in this.

119
00:08:10.760 --> 00:08:12.868
You can do anything,
it all follows this formula.

120
00:08:12.868 --> 00:08:16.573
We actually have an integration
with NextJS, where right now it's

121
00:08:16.573 --> 00:08:21.123
an experimental, behind a flag in the CLI,
but if you just write Firebase deploy,

122
00:08:21.123 --> 00:08:24.192
it builds and
generates your function code out for you.

123
00:08:24.192 --> 00:08:27.642
But all of these things are possible,
where you can write server code.

124
00:08:27.642 --> 00:08:30.700
And so that's one type of event,
is just an HTTP request.

