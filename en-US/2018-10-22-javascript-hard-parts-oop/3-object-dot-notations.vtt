WEBVTT

1
00:00:00.130 --> 00:00:04.710
&gt;&gt; Will Sentance: What is another way
that we might go about creating objects?

2
00:00:04.710 --> 00:00:08.470
Well, the first one we saw there was
just what's called an object literal.

3
00:00:08.470 --> 00:00:12.840
Let's just remind ourselves that we can
also create an object, empty object, and

4
00:00:12.840 --> 00:00:16.360
then assign its properties
with dot notation.

5
00:00:16.360 --> 00:00:18.870
We're gonna do this again,
and again, and again today.

6
00:00:18.870 --> 00:00:24.370
Just remember, remind ourselves, we can
assign properties to an object literal,

7
00:00:24.370 --> 00:00:28.900
to an object,
using dot notation in JavaScript.

8
00:00:28.900 --> 00:00:32.290
Let's have a look at it,
let's start diagramming this out.

9
00:00:33.690 --> 00:00:36.550
Line one here Michael,
what are we doing, we're gonna actually

10
00:00:36.550 --> 00:00:40.060
verbalize our code as we go,
we're gonna map it out on the whiteboard.

11
00:00:40.060 --> 00:00:42.740
So tell me what we're doing
here in line one, Michael.

12
00:00:42.740 --> 00:00:46.391
&gt;&gt; Michael: So we're creating
a const called user two in memory.

13
00:00:46.391 --> 00:00:52.857
&gt;&gt; Will Sentance: In memory, so I'm gonna
mark up this area of my whiteboard to be,

14
00:00:52.857 --> 00:00:56.985
with my brand new pens, to be our memory.

15
00:00:56.985 --> 00:01:01.145
And the first thing, spot on, Michael,
what is User2, which is a const,

16
00:01:01.145 --> 00:01:04.600
a constant, that means we can't
switch the whole object out.

17
00:01:04.600 --> 00:01:06.060
We can change properties, but

18
00:01:06.060 --> 00:01:09.100
we can't get rid of the whole object
from memory, because it's a constant.

19
00:01:09.100 --> 00:01:10.920
It's got the same position in memory.

20
00:01:10.920 --> 00:01:13.220
It's assigned what, Michael?

21
00:01:13.220 --> 00:01:14.230
&gt;&gt; Michael: An object literal.

22
00:01:14.230 --> 00:01:16.820
&gt;&gt; Will Sentance: Spot on, an empty object

23
00:01:16.820 --> 00:01:18.590
to which we're then gonna
stick some properties.

24
00:01:18.590 --> 00:01:20.810
Talk me through the property assignment,
Michael.

25
00:01:20.810 --> 00:01:22.920
&gt;&gt; Michael: First one,
we're gonna create a name property.

26
00:01:24.330 --> 00:01:25.210
&gt;&gt; Will Sentance: With what value?

27
00:01:25.210 --> 00:01:26.390
&gt;&gt; Michael: With a Julia.

28
00:01:26.390 --> 00:01:27.030
&gt;&gt; Will Sentance: And?

29
00:01:27.030 --> 00:01:30.710
&gt;&gt; Michael: And
then score with a value of 5.

30
00:01:30.710 --> 00:01:31.250
&gt;&gt; Will Sentance: Fantastic, and

31
00:01:31.250 --> 00:01:35.090
then we're gonna attach that
pertinent functionality,

32
00:01:35.090 --> 00:01:39.310
that relevant functionality that we
wanna have available on the object.

33
00:01:39.310 --> 00:01:40.610
Beautiful, there it is.

34
00:01:40.610 --> 00:01:42.720
It's the increment function.

35
00:01:42.720 --> 00:01:45.930
Can we now do our user2.increment?

36
00:01:45.930 --> 00:01:46.660
Don't panic!

37
00:01:46.660 --> 00:01:47.860
There's our increment function.

38
00:01:47.860 --> 00:01:49.220
We absolutely can.

