WEBVTT

1
00:00:00.000 --> 00:00:02.450
&gt;&gt; Will Sentance: Let's suppose that
we're building a quiz game with users.

2
00:00:02.450 --> 00:00:04.370
Let's see our example data.

3
00:00:04.370 --> 00:00:07.920
We've got a user here with
a name property Phil.

4
00:00:07.920 --> 00:00:10.130
It's a name characteristic Phil.

5
00:00:10.130 --> 00:00:12.444
A score characteristic 4.

6
00:00:12.444 --> 00:00:17.967
Another user with name Julia,
a score and the ability for

7
00:00:17.967 --> 00:00:22.510
either of these users to
have their score increased.

8
00:00:22.510 --> 00:00:26.660
What would be the best way to store this
data functionality together, Michael?

9
00:00:26.660 --> 00:00:27.460
&gt;&gt; Michael: Within an object.

10
00:00:27.460 --> 00:00:29.260
&gt;&gt; Will Sentance: In an object, beautiful.

11
00:00:29.260 --> 00:00:32.040
Because objects allow us to store data

12
00:00:34.180 --> 00:00:38.530
with their associated functionality
all bundled up on an object.

13
00:00:38.530 --> 00:00:39.580
There it is.

14
00:00:39.580 --> 00:00:44.470
And this is going to enable us and
everything we do today as we lay out more

15
00:00:44.470 --> 00:00:50.180
and more sophisticated approaches to
structuring our code, orienting it around

16
00:00:50.180 --> 00:00:55.300
objects so that the heart is always gonna
come back to can I do this thing here?

17
00:00:55.300 --> 00:00:58.020
Cuz this is gonna make my life effortless.

18
00:00:58.020 --> 00:01:03.530
If I can run a function on the right-hand
side of a dot, that is to say,

19
00:01:03.530 --> 00:01:08.400
apply it to an object and know that
it's available on that object it,

20
00:01:08.400 --> 00:01:12.010
I can apply my functionality
to my associated,

21
00:01:12.010 --> 00:01:16.900
to my relevant,
to my pertinent data, no problem.

22
00:01:16.900 --> 00:01:18.880
That is my dream.

23
00:01:18.880 --> 00:01:22.060
Throughout the whole session today we are
just gonna go again and again and check.

24
00:01:22.060 --> 00:01:26.820
Can I run my appropriate, my pertinent
functionality on my pertinent data?

25
00:01:26.820 --> 00:01:27.940
Are they bundled up?

26
00:01:27.940 --> 00:01:31.110
Not go hunting for the increment function,
not go hunting for

27
00:01:31.110 --> 00:01:34.110
the function that's relevant
to my User1 data, but

28
00:01:34.110 --> 00:01:38.980
know that it's right there
on my object itself.

29
00:01:38.980 --> 00:01:40.640
That is my dream.

30
00:01:40.640 --> 00:01:41.612
Well, can we do it here?

31
00:01:41.612 --> 00:01:42.250
Well, yeah, absolutely.

32
00:01:42.250 --> 00:01:45.440
User1, and there's an increment property,
and increment method on it.

33
00:01:45.440 --> 00:01:48.970
We call it, and
it's going to change User1's data.

34
00:01:48.970 --> 00:01:51.590
This is known as encapsulation.

35
00:01:51.590 --> 00:01:56.550
JavaScript doesn't implement this very,
very, in a very strict way.

36
00:01:56.550 --> 00:02:01.107
But the essence is put the appropriate
functionality with the appropriate data,

37
00:02:01.107 --> 00:02:03.747
and the ones that are related
to each other, and

38
00:02:03.747 --> 00:02:07.030
bundle them up into
what we call an object.

39
00:02:07.030 --> 00:02:08.780
All right,
let’s keep creating our objects.

40
00:02:08.780 --> 00:02:12.740
But first, note briefly that we would
have more functions than just this.

41
00:02:12.740 --> 00:02:15.830
We’d have ability to decrease score,
delete user, login.

42
00:02:15.830 --> 00:02:18.080
We’d have a ton of functions.

43
00:02:18.080 --> 00:02:22.201
And ideally,
they're all gonna be available,

44
00:02:22.201 --> 00:02:27.950
userone.decreasescore, userone.login,
userone.logout.

45
00:02:27.950 --> 00:02:33.370
Folk, this will make our life
writing code so much easier.

46
00:02:33.370 --> 00:02:38.260
All right, let's create objects using a
few other approaches just to get ourselves

47
00:02:38.260 --> 00:02:42.710
in the mindset of how we would go about
creating these objects that in any

48
00:02:42.710 --> 00:02:47.310
application each user is gonna be
represented by a different object with its

49
00:02:47.310 --> 00:02:52.754
data and its associated functionality
bundled up on that object.

50
00:02:52.754 --> 00:02:56.280
Think User2 might be,
I don't know, well, let's see.

