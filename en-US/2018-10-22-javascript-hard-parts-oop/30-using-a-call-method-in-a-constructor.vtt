WEBVTT

1
00:00:00.070 --> 00:00:00.700
&gt;&gt; Will Sentance: Okay.

2
00:00:00.700 --> 00:00:02.510
Let's get creating pages of one.

3
00:00:02.510 --> 00:00:03.800
Here we go.

4
00:00:03.800 --> 00:00:05.290
Susie, left hand side.

5
00:00:05.290 --> 00:00:07.120
You're on const page user1.

6
00:00:07.120 --> 00:00:10.100
What is that telling us to do, Susie?

7
00:00:10.100 --> 00:00:15.570
&gt;&gt; Speaker 2: Const user1 we're using-
&gt;&gt; Will Sentance: Declaring

8
00:00:15.570 --> 00:00:16.110
&gt;&gt; Speaker 2: Or, declaring

9
00:00:16.110 --> 00:00:17.310
&gt;&gt; Will Sentance: Declaring pages of one.

10
00:00:17.310 --> 00:00:18.490
Exactly.

11
00:00:18.490 --> 00:00:23.426
Excellent, and then on the right
hand side, we declared pages of one.

12
00:00:23.426 --> 00:00:27.451
We're saying, invoke call,
execute what function?

13
00:00:27.451 --> 00:00:28.520
&gt;&gt; Speaker 2: Paid User Creator?

14
00:00:28.520 --> 00:00:29.090
&gt;&gt; Will Sentance: Spot on.

15
00:00:29.090 --> 00:00:31.766
Excellent.
Okay, so let's do that.

16
00:00:31.766 --> 00:00:35.720
Paid user1 will be the return value

17
00:00:36.940 --> 00:00:40.750
of calling Paid User Creator function.

18
00:00:40.750 --> 00:00:41.990
My goodness.
We're almost there.

19
00:00:43.370 --> 00:00:50.710
Paid user creator function with
which arguments again Susie?

20
00:00:50.710 --> 00:00:52.860
&gt;&gt; Speaker 2: Has the arguments of Alyssa?

21
00:00:52.860 --> 00:00:53.940
&gt;&gt; Will Sentance: Yep.

22
00:00:53.940 --> 00:00:58.210
&gt;&gt; Speaker 2: And a score of 8,
and account balance of 25.

23
00:00:58.210 --> 00:01:00.880
&gt;&gt; Will Sentance: Raise her much Susie?

24
00:01:00.880 --> 00:01:04.060
Let's create that, well that's what he
was going to reinvigorate everybody.

25
00:01:04.060 --> 00:01:04.570
I promise you.

26
00:01:06.490 --> 00:01:09.847
We actually need a function so
we create a brand new.

27
00:01:09.847 --> 00:01:10.600
&gt;&gt; Speaker 3: Execution.

28
00:01:10.600 --> 00:01:15.528
&gt;&gt; Will Sentance: Okay, Seth new
configuration is Terry, Nick, David?

29
00:01:15.528 --> 00:01:17.930
Situp.

30
00:01:17.930 --> 00:01:19.320
We're gonna create a brand new?

31
00:01:19.320 --> 00:01:21.696
&gt;&gt; Speaker 3: Execution context.

32
00:01:21.696 --> 00:01:22.615
&gt;&gt; Will Sentance: Michael.

33
00:01:22.615 --> 00:01:26.371
&gt;&gt; Speaker 3: [LAUGH]
&gt;&gt; Michael: Sorry.

34
00:01:26.371 --> 00:01:28.544
&gt;&gt; Will Sentance: Michael.
&gt;&gt; Michael: I was there in spirit.

35
00:01:28.544 --> 00:01:31.308
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Speaker 5: He was watching

36
00:01:31.308 --> 00:01:32.042
your last talk.

37
00:01:32.042 --> 00:01:34.210
&gt;&gt; Will Sentance: [LAUGH]
Catching up at last.

38
00:01:34.210 --> 00:01:36.750
All right, Michael, we create a new?

39
00:01:36.750 --> 00:01:37.420
&gt;&gt; Michael: Execution context.

40
00:01:37.420 --> 00:01:38.360
&gt;&gt; Will Sentance: Execution context,
beautiful.

41
00:01:38.360 --> 00:01:39.110
Thank you, man.

42
00:01:39.110 --> 00:01:42.060
All right, let's create it, there it is.

43
00:01:42.060 --> 00:01:45.300
Let's make it as big as possible cuz I'm
gonna need a lot of room for this one.

44
00:01:45.300 --> 00:01:49.330
That's probably still
not quite big enough.

45
00:01:49.330 --> 00:01:50.070
Let's make it slightly.

46
00:01:52.440 --> 00:01:53.670
Okay, there it is.

47
00:01:54.840 --> 00:01:56.120
Into it we go.

48
00:01:56.120 --> 00:01:58.420
First thing's Nick,
help me out with the local memory,

49
00:01:58.420 --> 00:02:02.450
this is sort of the bit we know and
love, what's in the local memory first?

50
00:02:02.450 --> 00:02:06.030
&gt;&gt; Nick: Local memory has the parameter.

51
00:02:06.030 --> 00:02:07.520
&gt;&gt; Will Sentance: Parameter which one?

52
00:02:07.520 --> 00:02:08.330
&gt;&gt; Nick: Paid name.

53
00:02:08.330 --> 00:02:09.820
&gt;&gt; Will Sentance: Paid name which is?

54
00:02:09.820 --> 00:02:11.590
&gt;&gt; Nick: Which is Alyssa.

55
00:02:11.590 --> 00:02:13.480
&gt;&gt; Will Sentance: Good
old Alyssa yep paid?

56
00:02:13.480 --> 00:02:19.420
&gt;&gt; Nick: Paid score which is 8,
and account balance which is 25.

57
00:02:19.420 --> 00:02:25.698
&gt;&gt; Will Sentance: Yep account balance,
which is 20.

58
00:02:25.698 --> 00:02:29.185
Account balance, 25.

59
00:02:29.185 --> 00:02:29.897
&gt;&gt; Nick: And then.

60
00:02:29.897 --> 00:02:30.627
&gt;&gt; Will Sentance: Ah-ha.
&gt;&gt; Nick: It all,

61
00:02:30.627 --> 00:02:33.240
since it was declared
with the new keyword.

62
00:02:33.240 --> 00:02:35.840
&gt;&gt; Will Sentance: Thank you man,
you go ahead of me there, I forgot, yeah.

63
00:02:35.840 --> 00:02:39.980
First thing is the first thing
the new keyword does is what?

64
00:02:39.980 --> 00:02:41.310
&gt;&gt; Nick: Sets the this object.

65
00:02:41.310 --> 00:02:42.140
&gt;&gt; Will Sentance: Fantastic, man.

66
00:02:42.140 --> 00:02:42.660
Here it is.

67
00:02:42.660 --> 00:02:48.530
This is a big old empty object.

68
00:02:48.530 --> 00:02:50.910
By the way, when I say,
big old empty object, that does not mean.

69
00:02:50.910 --> 00:02:52.960
[LAUGH] It is an empty object.

70
00:02:52.960 --> 00:02:55.850
But it's an empty object that's ready for
stuff to be put in.

71
00:02:55.850 --> 00:02:58.601
I know I called object, but
that's clearly unclear.

72
00:03:00.664 --> 00:03:02.634
&gt;&gt; Will Sentance: And
that big empty object's

73
00:03:02.634 --> 00:03:04.220
got a-
&gt;&gt; Nick: Proto.

74
00:03:04.220 --> 00:03:06.630
&gt;&gt; Will Sentance: Proto,
hidden proto property, too.

75
00:03:09.340 --> 00:03:11.920
Where are we creating this object,
with a new keyword?

76
00:03:11.920 --> 00:03:16.390
In the call to pageUserCreator,
and so that proto link is to.

77
00:03:17.930 --> 00:03:20.160
&gt;&gt; Nick: The prototype
of paid user creator.

78
00:03:20.160 --> 00:03:20.710
&gt;&gt; Will Sentance: Yes, spot on.

79
00:03:20.710 --> 00:03:25.910
And that's just, by the way folks,
that is just what the new key word does.

80
00:03:25.910 --> 00:03:28.750
Because we need a place to put
the functions we want this object to have

81
00:03:28.750 --> 00:03:34.320
access to and the place, the new key word
automatically puts those functions is,

82
00:03:34.320 --> 00:03:37.820
the name of the function that's
got the new key word running it?

83
00:03:37.820 --> 00:03:42.010
Creating the object automatically,
.prototype that means on

84
00:03:42.010 --> 00:03:45.380
that function's object version and
its function object combo.

85
00:03:45.380 --> 00:03:48.220
And then that is an object, and
that's where we put our functions,

86
00:03:48.220 --> 00:03:52.616
which is what we just did paid
user prototype increase balance.

87
00:03:52.616 --> 00:03:57.300
Okay, so that bond is made
automatically to this object, perfect.

88
00:03:58.800 --> 00:04:02.640
Know that that object then
has a bond automatically.

89
00:04:02.640 --> 00:04:03.510
Not automatically.

90
00:04:03.510 --> 00:04:04.430
We made it, right?

91
00:04:04.430 --> 00:04:07.160
With that object.create.

92
00:04:07.160 --> 00:04:11.240
Rebuild this object with its bond
up to another set of functions.

93
00:04:12.550 --> 00:04:17.330
Meaning this object, if we go looking on
it for increased balance, no problem.

94
00:04:17.330 --> 00:04:22.578
Linked, we go looking on it for
say name, still no problem.

95
00:04:22.578 --> 00:04:26.878
[SOUND] linked,
indirectly through two steps.

96
00:04:26.878 --> 00:04:34.304
Okay, now we get to
the really interesting part.

97
00:04:34.304 --> 00:04:35.906
So the proto is set.

98
00:04:35.906 --> 00:04:37.850
Okay, now we get to
the really interesting part.

99
00:04:37.850 --> 00:04:42.340
Who feels they want to give a shot
at one of the hardest parts?

100
00:04:42.340 --> 00:04:42.863
Seth?

101
00:04:45.007 --> 00:04:47.860
&gt;&gt; Will Sentance: You've got
the job locked down at this point.

102
00:04:47.860 --> 00:04:52.010
We hit the body of paid user
create a call, and we start.

103
00:04:52.010 --> 00:04:55.450
&gt;&gt; Speaker 7: We look up the user
creator on the global context.

104
00:04:55.450 --> 00:04:56.010
&gt;&gt; Will Sentance: Yep, there it is.

105
00:04:56.010 --> 00:04:56.580
Okay, give me a second.

106
00:04:56.580 --> 00:04:57.480
I just want to write this up.

107
00:04:57.480 --> 00:04:59.170
User creator.

108
00:04:59.170 --> 00:05:00.970
So we grab the function's code.

109
00:05:00.970 --> 00:05:03.420
And what are we gonna call it?

110
00:05:03.420 --> 00:05:05.810
We're not gonna go looking for
the cool thing right now.

111
00:05:05.810 --> 00:05:06.605
It's there.

112
00:05:06.605 --> 00:05:08.070
[LAUGH] We can assume cool is there.

113
00:05:08.070 --> 00:05:10.050
We are not going off
the functional prototype.

114
00:05:10.050 --> 00:05:10.660
It's there.

115
00:05:10.660 --> 00:05:11.910
&gt;&gt; Speaker 8: We get call off of it.

116
00:05:11.910 --> 00:05:13.270
&gt;&gt; Will Sentance: Yeah,
we get call somehow.

117
00:05:13.270 --> 00:05:16.340
&gt;&gt; Speaker 8: We pass in
the autocreated this object.

118
00:05:16.340 --> 00:05:18.050
&gt;&gt; Will Sentance: Okay, give me
a second here, mate, because this is so

119
00:05:18.050 --> 00:05:18.760
demanding, I think.

120
00:05:18.760 --> 00:05:20.950
So let's create that execution concept for
it.

121
00:05:23.010 --> 00:05:24.030
Okay.

122
00:05:24.030 --> 00:05:26.080
&gt;&gt; Speaker 9: You pass in three arguments.

123
00:05:26.080 --> 00:05:29.090
&gt;&gt; Will Sentance: Yeah, and
the first one to call is always whatever

124
00:05:29.090 --> 00:05:33.590
the keyword this inside this
function is gonna be set to.

125
00:05:33.590 --> 00:05:37.710
Now brutally, the keyword this inside
of the function, let's just put it in.

126
00:05:37.710 --> 00:05:45.270
Local memory,
the keyword this is going to be set to.

127
00:05:48.010 --> 00:05:48.950
&gt;&gt; Speaker 9: Until we call.

128
00:05:48.950 --> 00:05:50.530
&gt;&gt; Will Sentance: Yeah the keyword this,
wait hold on, so

129
00:05:50.530 --> 00:05:56.040
we're gonna call it the keyword
this inside of user creator,

130
00:05:56.040 --> 00:05:59.490
and look at how user creator
normally we call it the new keyword.

131
00:05:59.490 --> 00:06:03.650
So normally, the key word this inside this
creator is set to that new auto created

132
00:06:03.650 --> 00:06:09.560
object, but here, we control it with
saying, when we pass in, what is the this?

133
00:06:09.560 --> 00:06:15.614
Well, the this is this object, and we're
going to [SOUND] throw it in, there it is.

134
00:06:15.614 --> 00:06:18.802
And this object,
now we're not actually copying him people,

135
00:06:18.802 --> 00:06:20.840
we're just referring to it one layer.

136
00:06:20.840 --> 00:06:23.170
So I'm actually going to, I'm actually,

137
00:06:23.170 --> 00:06:27.000
I don't know maybe it
needs a black line here.

138
00:06:27.000 --> 00:06:31.010
It's going to refer to this object.

139
00:06:31.010 --> 00:06:33.700
That I think is the most
puzzling little bit, no puzzling,

140
00:06:33.700 --> 00:06:35.450
but intricate bit of JavaScript.

141
00:06:35.450 --> 00:06:37.710
We're calling the user create a function.

142
00:06:38.860 --> 00:06:41.500
We're not calling it directly the parens.

143
00:06:41.500 --> 00:06:44.610
We're not calling with a new keyword,
it should have a new keyword right?

144
00:06:44.610 --> 00:06:47.610
That's where this is gonna refer
to the auto created object.

145
00:06:47.610 --> 00:06:51.770
But we're gonna say nah nah nah we
don't want it to refer to a different

146
00:06:51.770 --> 00:06:54.960
auto created object we want
it to refer to this object.

147
00:06:54.960 --> 00:06:59.790
So we can add properties to it in as
the object that's gonna be the paid user,

148
00:06:59.790 --> 00:07:01.160
into paid user one.

149
00:07:02.220 --> 00:07:08.140
So we want to use this object that when we
run pages creator with the new keyword, we

150
00:07:08.140 --> 00:07:13.150
automatically get that object created, as
Nick said, by the help of the new keyword.

151
00:07:13.150 --> 00:07:19.700
We want to use the property sticking
on code from user creator, which

152
00:07:19.700 --> 00:07:25.130
sticks on the name, sticks on the score,
then use that code, but not stick it on

153
00:07:25.130 --> 00:07:30.200
an auto created object in here, because
that object's different to that object.

154
00:07:30.200 --> 00:07:36.240
So instead we want the this in here,
to refer to the object one layer out

155
00:07:36.240 --> 00:07:42.290
that is our auto created object,
that is gonna be our paid user1.

156
00:07:42.290 --> 00:07:45.106
That comes out of running paid
user creator with a new keyword.

157
00:07:45.106 --> 00:07:49.430
So now this as is by design,

158
00:07:49.430 --> 00:07:53.465
do not look at the this in
the argument to call as.

159
00:07:53.465 --> 00:07:55.500
Do not get confused, and
that's the parameter.

160
00:07:55.500 --> 00:08:00.020
The parameter, or the implicit parameter,
we'll make it explicit, here, is this.

161
00:08:01.310 --> 00:08:05.490
And that's the value of this,
inside User Creator.

162
00:08:05.490 --> 00:08:08.120
And we are saying that the value of this,
inside,

163
00:08:08.120 --> 00:08:12.250
is gonna be the value of this, outside.

164
00:08:14.450 --> 00:08:17.370
Okay, I'm just gonna do this
one more time to make sure we

165
00:08:17.370 --> 00:08:18.110
see it in different angles.

166
00:08:18.110 --> 00:08:21.370
I think this is the most intricate,
finicky line in JavaScript.

167
00:08:21.370 --> 00:08:27.210
We're calling paid userCreator,
&gt;&gt; Will Sentance: With a new keyword.

168
00:08:27.210 --> 00:08:31.480
Because we want to create an object that's
gonna end up being sorted in paid user1.

169
00:08:31.480 --> 00:08:36.380
But we want it to have access to
paid user specific functions great.

170
00:08:38.440 --> 00:08:42.470
But we also wanted to have
properties that users had.

171
00:08:43.620 --> 00:08:48.480
But we don't want to have to go and
recode those properties for paid user so

172
00:08:48.480 --> 00:08:51.642
instead we use the user creator's code.

173
00:08:51.642 --> 00:08:55.000
But the user creator's code was designed
to be called with a new keyword and

174
00:08:55.000 --> 00:08:57.890
has got the this to
stick it on that object.

175
00:08:57.890 --> 00:09:02.190
But we don't wanna call user creator,
create a new local object that is

176
00:09:02.190 --> 00:09:06.000
definitely different to the object that
paid user creator auto created for us.

177
00:09:06.000 --> 00:09:07.080
No, no, no, no.

178
00:09:07.080 --> 00:09:11.767
We want to have the ability
to use the user created code,

179
00:09:11.767 --> 00:09:16.056
do the this.name is equal
to whatever name is, but

180
00:09:16.056 --> 00:09:22.470
have the this be the very object in pages
creator that we want to add stuff to.

181
00:09:22.470 --> 00:09:26.370
That we want to add the properties to.

182
00:09:26.370 --> 00:09:29.740
The way we do that is we use call.

183
00:09:29.740 --> 00:09:33.260
That allows us to run user creator and

184
00:09:33.260 --> 00:09:38.020
take control of what the this
inside of user creator is gonna be.

185
00:09:38.020 --> 00:09:43.490
And how do we take control of it,
by using call whose first input

186
00:09:43.490 --> 00:09:48.910
becomes the value of this
inside of user creator.

187
00:09:50.890 --> 00:09:55.100
It looks specially confusing because
what we're passing in is called this but

188
00:09:55.100 --> 00:10:00.180
it's not saying this it's the object we
made earlier the value of this in paid

189
00:10:00.180 --> 00:10:05.620
user creator is then passed in and becomes
a value of this inside of user creator.

190
00:10:06.790 --> 00:10:08.680
But it's brutal right there different.

191
00:10:08.680 --> 00:10:13.310
The this were passing in doesn't get
passed in as a word this it evaluates.

192
00:10:13.310 --> 00:10:16.870
When JavaScript sees user-created
up call passing this it goes?

193
00:10:16.870 --> 00:10:18.990
What is this and goes and look old.

194
00:10:18.990 --> 00:10:20.100
It's this blue object here.

195
00:10:20.100 --> 00:10:23.090
There was created
automatically in pages created

196
00:10:23.090 --> 00:10:25.260
with the help of the new
keyword as Nick said.

197
00:10:25.260 --> 00:10:27.710
And it takes that object, and

198
00:10:27.710 --> 00:10:33.580
it links out to it as the reference for
the this inside of user creator.

199
00:10:33.580 --> 00:10:37.310
Can I get thumbs on that, cuz I think
that is really, really demanding.

200
00:10:37.310 --> 00:10:38.520
Terry?

201
00:10:38.520 --> 00:10:44.890
&gt;&gt; Terry: So the this in this case happens
to be this that goes over a level.

202
00:10:44.890 --> 00:10:46.770
&gt;&gt; Will Sentance: Yeah.
&gt;&gt; Terry: It wouldn't have to be.

203
00:10:46.770 --> 00:10:48.630
&gt;&gt; Will Sentance: We could
pass any object we want.

204
00:10:49.730 --> 00:10:55.230
It will then always, that object, be
referred to inside user creator by this.

205
00:10:55.230 --> 00:10:59.340
And then here,
it's referring out to this one layer out.

206
00:10:59.340 --> 00:11:04.530
But JavaScript doesn't pass it in as
a label this, it says pass in this.

207
00:11:04.530 --> 00:11:07.090
When I'm in page user create,
what the hell is this?

208
00:11:07.090 --> 00:11:08.650
It's this object here.

209
00:11:08.650 --> 00:11:12.890
And it literally grabs that object and
passes in a reference to it,

210
00:11:12.890 --> 00:11:16.110
with the proto and
like that's what's being passed in so

211
00:11:16.110 --> 00:11:19.690
we end up just love this inside of user
creator referring to the object out here.

