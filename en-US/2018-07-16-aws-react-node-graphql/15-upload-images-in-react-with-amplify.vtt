WEBVTT

1
00:00:00.060 --> 00:00:06.520
&gt;&gt; Steve Kinney: All right, so what we
wanna do is, we've got the files enabled,

2
00:00:06.520 --> 00:00:12.160
the next thing we wanna do is go ahead and
just like install the AWS mobile stuff.

3
00:00:13.610 --> 00:00:17.714
So I'm gonna open it up in Virtual Studio.

4
00:00:29.873 --> 00:00:32.340
&gt;&gt; Steve Kinney: And we'll go into source,
we'll go into index.

5
00:00:34.528 --> 00:00:35.863
&gt;&gt; Steve Kinney: Does anyone
remember what I need to do?

6
00:00:35.863 --> 00:00:38.176
&gt;&gt; Speaker 2: Import.

7
00:00:38.176 --> 00:00:39.643
&gt;&gt; Steve Kinney: Import.

8
00:00:39.643 --> 00:00:43.792
&gt;&gt; Speaker 2: Amplify?

9
00:00:43.792 --> 00:00:48.221
&gt;&gt; Steve Kinney: Amplify from,
[LAUGH] not fair,

10
00:00:48.221 --> 00:00:53.273
then we'll input the configuration.

11
00:01:01.729 --> 00:01:02.229
&gt;&gt; Steve Kinney: Exports.

12
00:01:07.197 --> 00:01:13.525
&gt;&gt; Steve Kinney: Cool and then the last
thing we need to do is amplify.configure.

13
00:01:18.386 --> 00:01:20.140
&gt;&gt; Steve Kinney: And
you could call this whatever you want.

14
00:01:20.140 --> 00:01:22.740
I call it configuration, if you just
wanna call it config or whatever,

15
00:01:22.740 --> 00:01:24.120
it's all up to you.

16
00:01:26.590 --> 00:01:28.990
Cool, no change in my
application just yet.

17
00:01:30.620 --> 00:01:33.999
So I mentioned like I should
probably AWS mobile push it

18
00:01:35.360 --> 00:01:37.730
otherwise I'm gonna be like I want
to start working on this S3 bucket.

19
00:01:37.730 --> 00:01:39.420
And they'd be like Nate,
you don't have one.

20
00:01:39.420 --> 00:01:41.460
And I'm like but I enabled one.

21
00:01:41.460 --> 00:01:44.710
It's like yeah, but
you didn't tell Amazon about it so

22
00:01:44.710 --> 00:01:50.145
if a bucket is created and
no one tells Amazon, does it make a sound?

23
00:01:50.145 --> 00:01:52.200
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Steve Kinney: Is that the joke?

24
00:01:52.200 --> 00:01:52.980
That's not the joke is it?

25
00:01:55.180 --> 00:01:57.053
Cool, so we pushed that up.

26
00:02:03.883 --> 00:02:08.790
&gt;&gt; Steve Kinney: And neat, all right.

27
00:02:08.790 --> 00:02:12.710
So, we still don't have any
functionality in place here.

28
00:02:12.710 --> 00:02:14.689
Cool, you turned on user files.

29
00:02:16.500 --> 00:02:18.680
It's when we turned on
that database before and

30
00:02:18.680 --> 00:02:20.840
then didn't implement any API end points.

31
00:02:20.840 --> 00:02:23.890
The cool thing is we don't
need an API gateway for this.

32
00:02:23.890 --> 00:02:29.080
All we basically in this
case is the storage bucket.

33
00:02:29.080 --> 00:02:31.610
So let's go ahead and try that out.

34
00:02:31.610 --> 00:02:35.700
What we'll do first is we'll list all
the files currently in the bucket.

35
00:02:35.700 --> 00:02:39.500
If you remember when we did the database
before that was kinda boring it's like,

36
00:02:39.500 --> 00:02:41.700
here's an empty array.

37
00:02:41.700 --> 00:02:45.982
There's a surprise waiting for
us in the AWS bucket that we just made so.

38
00:02:45.982 --> 00:02:52.822
We'll go into application and
before we did component did mount and

39
00:02:52.822 --> 00:02:59.423
what we'll do is we'll import
storage from 'aws-amplify'.

40
00:02:59.423 --> 00:03:03.703
Remember it's not React specific,

41
00:03:03.703 --> 00:03:09.915
we're just using React to
keep some of the tedium of us

42
00:03:09.915 --> 00:03:15.591
writing vanilla JavaScript
all over the place.

43
00:03:15.591 --> 00:03:19.130
And so we pull in the storage API and
so we'll start out with.

44
00:03:20.679 --> 00:03:22.290
&gt;&gt; Steve Kinney: Storage.list.

45
00:03:22.290 --> 00:03:25.080
And I told you before,
if you did photo slash,

46
00:03:25.080 --> 00:03:27.500
it would get you all the things
under the photo directory.

47
00:03:27.500 --> 00:03:30.000
Albums will get you all the things
in the albums directory.

48
00:03:30.000 --> 00:03:30.750
Well let's just cheat.

49
00:03:30.750 --> 00:03:34.050
We'll give it an empty string,
which is all the things, right?

50
00:03:34.050 --> 00:03:37.030
Just start at the very base and
tell me everything that's in this bucket.

51
00:03:39.251 --> 00:03:43.813
&gt;&gt; Steve Kinney: Cool and then, we'll say
files or we could call it things, but

52
00:03:43.813 --> 00:03:44.510
let's.

53
00:03:46.727 --> 00:03:51.450
&gt;&gt; Steve Kinney: And
let's just console.log these files.

54
00:03:51.450 --> 00:03:54.080
So when the component mounts, go ahead and

55
00:03:54.080 --> 00:03:55.930
tell me everything is in
the bucket in the console.

56
00:04:00.690 --> 00:04:02.289
So for that two of these apps running.

57
00:04:05.432 --> 00:04:10.413
&gt;&gt; Steve Kinney: You can see files array
as one and you can see that Amazon was

58
00:04:10.413 --> 00:04:15.010
nice enough to put an example
image in there, right.

59
00:04:15.010 --> 00:04:22.250
It's like exampleimage.png, last
modified Wednesday May 30th around now.

60
00:04:22.250 --> 00:04:24.910
The size of it and an in tag.

61
00:04:24.910 --> 00:04:27.740
Cool, here's the thing.

62
00:04:27.740 --> 00:04:30.440
It's slightly problematic because
I can't do anything with Ikea.

63
00:04:30.440 --> 00:04:33.280
I can't like okay,
let's put a new image on the page and

64
00:04:33.280 --> 00:04:37.270
give it the source of example
image.png cuz that will look for

65
00:04:37.270 --> 00:04:40.740
something that Logo Host 3001,
example image png.

66
00:04:41.790 --> 00:04:45.850
That's just the key It's not
the actual image itself.

67
00:04:45.850 --> 00:04:51.550
Once I have the keys from Amazon,
I can then go ask the storage API, hey,

68
00:04:51.550 --> 00:04:56.263
can you give me a URL for
the file of that key, right?

69
00:04:56.263 --> 00:05:00.270
So it's a little bit of a first
ask Amazon for all the keys and

70
00:05:00.270 --> 00:05:06.150
then go ask the storage API For the URL
that points to the file that it gave.

71
00:05:06.150 --> 00:05:08.780
But the nice things is like if
you put something in there and

72
00:05:08.780 --> 00:05:12.080
got a key back, means that you
could go store it in a database,

73
00:05:12.080 --> 00:05:15.770
you could go store it in local storage,
you could go store it anywhere you want

74
00:05:15.770 --> 00:05:19.840
and then you say like, I have this key of
this file, can you please go get me a URL?

75
00:05:19.840 --> 00:05:24.750
So while it seems in a contrived example,
that we're doing slightly onerous.

76
00:05:24.750 --> 00:05:28.710
It's actually got some unique
advantages to it as well.

