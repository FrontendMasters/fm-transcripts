WEBVTT

1
00:00:00.230 --> 00:00:03.465
&gt;&gt; Steve Kinney: So I did make some
changes, so I wanna do an awsmobile pull,

2
00:00:03.465 --> 00:00:07.220
which again, cuz we made changes,
not pill, pull.

3
00:00:09.564 --> 00:00:11.927
&gt;&gt; Steve Kinney: It's gonna
pull down our changes,

4
00:00:14.043 --> 00:00:14.966
&gt;&gt; Steve Kinney: Into our application.

5
00:00:19.490 --> 00:00:20.137
&gt;&gt; Steve Kinney: All right,

6
00:00:20.137 --> 00:00:23.530
now we've played around with
some of the configuration.

7
00:00:23.530 --> 00:00:27.610
Time to actually add
authentication to our application.

8
00:00:27.610 --> 00:00:31.050
Those are all words that are really
fun to say in consecutive order.

9
00:00:31.050 --> 00:00:32.776
So we'll pull it up in code.

10
00:00:35.620 --> 00:00:36.561
&gt;&gt; Steve Kinney: And again,

11
00:00:36.561 --> 00:00:41.655
forms are the best thing ever to
do in client side applications.

12
00:00:41.655 --> 00:00:45.340
Stuff like radio buttons all of
a sudden are hard and fun again.

13
00:00:45.340 --> 00:00:48.500
We're going to basically not do that.

14
00:00:48.500 --> 00:00:49.960
So for some of these things,

15
00:00:49.960 --> 00:00:54.980
AWS Amplified React provides a bunch
of components that we can use.

16
00:00:54.980 --> 00:00:57.320
It provides an authenticator component,

17
00:00:57.320 --> 00:01:03.290
it also provides us higher order
component called withAuthenticator.

18
00:01:03.290 --> 00:01:07.800
withAuthenticator wraps
another component and

19
00:01:07.800 --> 00:01:10.230
basically provides an authenticator
until they've signed in.

20
00:01:10.230 --> 00:01:13.810
And it handles all the state of where
they are in that sign-in process.

21
00:01:13.810 --> 00:01:16.199
We've talked before that there
can be two-factor, also.

22
00:01:16.199 --> 00:01:18.840
Okay, they've signed in,
now we're waiting for the code.

23
00:01:18.840 --> 00:01:21.320
Or they've signed out but
now we're waiting for confirmation.

24
00:01:21.320 --> 00:01:24.789
So on and so forth and what it does
is it handles all of that state.

25
00:01:24.789 --> 00:01:28.667
Now, amplify provides the kind
of primitive methods for

26
00:01:28.667 --> 00:01:31.511
you to wire all this off yourself by hand.

27
00:01:31.511 --> 00:01:34.713
And you can totally do that if you have
a custom flow that you're looking to do.

28
00:01:34.713 --> 00:01:38.843
Also, for the authenticator component,
if you don't like the way that it looks,

29
00:01:38.843 --> 00:01:39.730
you can theme it.

30
00:01:39.730 --> 00:01:44.310
We're not going to because watching
me do CSS live is not worth it.

31
00:01:44.310 --> 00:01:50.650
But you can actually pass in even
in-line styles as well, either way.

32
00:01:50.650 --> 00:01:54.112
So we're actually gonna pull that
withAuthenticator higher order

33
00:01:54.112 --> 00:01:54.907
component in.

34
00:01:54.907 --> 00:01:58.100
And what we'll do is kind of
the simplest thing for now.

35
00:01:58.100 --> 00:02:03.100
We'll wrap the entire application in our
authenticator, basically being like,

36
00:02:03.100 --> 00:02:07.042
you either see a login page or
you see the application.

37
00:02:07.042 --> 00:02:12.560
Now, if for instance, some applications
have a certain amount of public data,

38
00:02:12.560 --> 00:02:14.250
we're not gonna go into
that level of depth.

39
00:02:14.250 --> 00:02:17.434
This is a very private application,
and it's an all or

40
00:02:17.434 --> 00:02:19.174
nothing affair in this case.

41
00:02:19.174 --> 00:02:21.354
And so in our application.js,

42
00:02:21.354 --> 00:02:26.290
that is the kind of root component
of our client side application.

43
00:02:26.290 --> 00:02:31.480
We're gonna pull in the withAuthenticator
component up at the top.

44
00:02:31.480 --> 00:02:36.773
And so we can basically say import,
with curly braces,

45
00:02:36.773 --> 00:02:42.410
{withAuthenticator} from
'aws-amplify-react'.

46
00:02:42.410 --> 00:02:47.790
aws-amplify is generic JavaScript methods.

47
00:02:47.790 --> 00:02:50.110
If it's a React component
that we're looking to use,

48
00:02:50.110 --> 00:02:54.340
it will be in
the aws-amplify-react library.

49
00:02:54.340 --> 00:02:59.200
The curly braces are there's obviously
more than one component in this library.

50
00:02:59.200 --> 00:03:00.020
So this is saying, like,

51
00:03:00.020 --> 00:03:04.284
of all the components,
get me the withAuthenticator component.

52
00:03:05.400 --> 00:03:07.840
So we can pull that into our code base.

53
00:03:07.840 --> 00:03:10.440
Pulling it in is half the battle.

54
00:03:10.440 --> 00:03:11.960
The next thing we need to do is use it.

55
00:03:11.960 --> 00:03:15.884
Now a higher order component just
basically wraps a kinda more traditional

56
00:03:15.884 --> 00:03:17.012
component in React.

57
00:03:17.012 --> 00:03:20.510
And we've decided that our
application's an all or nothing affair.

58
00:03:20.510 --> 00:03:24.210
So what we wanna do is we wanna
wrap the application component.

59
00:03:24.210 --> 00:03:26.320
This is where we're defining
the application component.

60
00:03:26.320 --> 00:03:29.889
And the only thing we do in
this file at the very end,

61
00:03:29.889 --> 00:03:37.440
all the way at the bottom,
&gt;&gt; Steve Kinney: Is we export it.

62
00:03:37.440 --> 00:03:40.075
Now we could use in the index file,
we could also just wrap it right here.

63
00:03:40.075 --> 00:03:45.239
We're gonna say, hey instead of
exporting the Application component,

64
00:03:45.239 --> 00:03:51.743
what I'd like you to do is,
&gt;&gt; Steve Kinney: I would love for

65
00:03:51.743 --> 00:03:58.335
you to export the Application component
wrapped with the authenticator, right?

66
00:03:58.335 --> 00:04:00.350
So this is gonna handle,
if they're logged in,

67
00:04:00.350 --> 00:04:02.385
they're gonna see
the Application component.

68
00:04:02.385 --> 00:04:06.105
If they're not logged in, they
are gonna see the authenticator, right?

69
00:04:06.105 --> 00:04:10.640
And it would be able to know whether or
not it should show them the log in or

70
00:04:10.640 --> 00:04:13.450
if to show them the Application component.

71
00:04:15.223 --> 00:04:16.663
&gt;&gt; Steve Kinney: Cool, so
I'm gonna take that, and

72
00:04:16.663 --> 00:04:18.488
I'm going to just really
quickly commit it.

73
00:04:22.860 --> 00:04:28.838
&gt;&gt; Steve Kinney: Add withAuthenticator,
&gt;&gt; Steve Kinney: Nope.

74
00:04:30.362 --> 00:04:33.790
&gt;&gt; Steve Kinney: Extra colon, that's fine.

75
00:04:33.790 --> 00:04:35.060
It'll push that out.

76
00:04:35.060 --> 00:04:37.632
All right, cool,
let's actually now take it for a spin.

77
00:04:37.632 --> 00:04:45.913
So yarn start or npm start,
&gt;&gt; Steve Kinney: And

78
00:04:45.913 --> 00:04:48.783
where before,
we saw our grudge bin application,

79
00:04:48.783 --> 00:04:52.134
we're gonna see something
slightly different this time.

80
00:04:52.134 --> 00:04:57.675
We're gonna see this gorgeous
sign-in component, right?

81
00:04:57.675 --> 00:05:01.332
This is our withAuthenticator,
we're not signed in cuz we just added it.

82
00:05:01.332 --> 00:05:05.605
We haven't had the opportunity
to sign in or sign out yet.

83
00:05:05.605 --> 00:05:08.347
We just added it, and
once we are authenticated,

84
00:05:08.347 --> 00:05:11.039
then we'll be presented
with the application.

85
00:05:11.039 --> 00:05:13.119
Now again, if you're using React router,

86
00:05:13.119 --> 00:05:16.470
there might be all sorts of fancy
stuff that you wanna do custom.

87
00:05:16.470 --> 00:05:18.350
You can customize all of this.

88
00:05:18.350 --> 00:05:20.690
But just to get us started,
let's use the one that's built in.

89
00:05:20.690 --> 00:05:26.670
And there's a whole bunch of functionality
here that is not glamorous to work with,

90
00:05:26.670 --> 00:05:28.700
right, like forgot password.

91
00:05:29.930 --> 00:05:33.380
It seems like table stakes for
an application, but

92
00:05:33.380 --> 00:05:38.250
also kind of not trivial if you're
writing it yourself, either, right?

93
00:05:38.250 --> 00:05:42.230
And so this allows us to use that
infrastructure to build applications and

94
00:05:42.230 --> 00:05:47.730
not worry about those problems
with definite known solutions,

95
00:05:47.730 --> 00:05:50.520
but also still tedious
to implement ourselves.

96
00:05:50.520 --> 00:05:52.640
So go ahead and sign out.

97
00:05:52.640 --> 00:05:54.370
And it's asking you all these questions.

98
00:05:54.370 --> 00:05:57.280
I'm pretty sure I can get away with
a slightly reduced list of them

99
00:05:57.280 --> 00:05:57.855
at this point.

100
00:05:57.855 --> 00:05:59.936
I'll put in my bank password, password123.

101
00:05:59.936 --> 00:06:05.540
Let's try to sign up.

102
00:06:05.540 --> 00:06:06.349
I need an email as well.

103
00:06:09.112 --> 00:06:11.333
&gt;&gt; Steve Kinney: Fun fact,
you get error messages, right?

104
00:06:11.333 --> 00:06:14.090
It's already validating the space and
the schema,

105
00:06:14.090 --> 00:06:16.226
I don't have to implement this myself.

106
00:06:16.226 --> 00:06:18.590
I don't like to do this stuff.

107
00:06:18.590 --> 00:06:23.800
Cool, and it sent me a code, and
I'm just gonna pull that up real quick.

108
00:06:25.630 --> 00:06:27.030
I'll run this screen, and

109
00:06:27.030 --> 00:06:30.690
I've got a verification code
that I can bring on over.

110
00:06:31.780 --> 00:06:35.112
And I can confirm, so
then I can actually log in.

111
00:06:44.296 --> 00:06:46.410
&gt;&gt; Steve Kinney: Cool,
and then I am in the app.

