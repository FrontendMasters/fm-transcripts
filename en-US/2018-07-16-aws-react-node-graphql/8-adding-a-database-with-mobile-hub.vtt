WEBVTT

1
00:00:00.040 --> 00:00:02.710
&gt;&gt; Steve Kinney: But I have this,
but still I've logged in.

2
00:00:02.710 --> 00:00:04.790
It's still data in memory, right?

3
00:00:04.790 --> 00:00:06.492
I don't have a database yet.

4
00:00:06.492 --> 00:00:11.608
I'm gonna go back, and
I'm gonna look at the features

5
00:00:11.608 --> 00:00:16.960
to figure out how I could spin
up a database, awsmobile.

6
00:00:18.840 --> 00:00:22.970
And we can see, this is interesting.

7
00:00:22.970 --> 00:00:26.980
This is one called database,
that seems like a very good choice for

8
00:00:26.980 --> 00:00:29.060
the work that I'm trying
to accomplish right now.

9
00:00:29.060 --> 00:00:35.180
So what I'll do is I'll do awsmobile,
and we will say database.

10
00:00:35.180 --> 00:00:37.320
Now I don't want the defaults
particularly in this case.

11
00:00:37.320 --> 00:00:40.178
I wanna configure configure what my
data base is, what it is called,

12
00:00:40.178 --> 00:00:43.010
what are the fields that it's keeping
track of, so on and so forth.

13
00:00:47.169 --> 00:00:53.294
&gt;&gt; Steve Kinney: So what we'll do is
we'll say enable, and we'll say prompt.

14
00:00:53.294 --> 00:00:55.320
All right, open or restricted.

15
00:00:55.320 --> 00:00:59.460
Can anyone access this database or
is it restricted through authentication?

16
00:00:59.460 --> 00:01:02.172
Well, in this case,
we set up authentication for a reason.

17
00:01:02.172 --> 00:01:07.070
We wanna say like, hey, for this user, we
wanna go in and be able to see whether or

18
00:01:07.070 --> 00:01:07.790
not it's working.

19
00:01:08.810 --> 00:01:11.530
Or we want data that is
restricted to that user.

20
00:01:11.530 --> 00:01:15.180
That user should get their personal data,
it's not just an open access database.

21
00:01:15.180 --> 00:01:16.920
There are different cases, like for

22
00:01:16.920 --> 00:01:21.420
instance, there's the case of like,
the global Twitter stream.

23
00:01:21.420 --> 00:01:23.990
You don't need to be logged
in to see a tweet, right?

24
00:01:23.990 --> 00:01:25.210
So there's different cases.

25
00:01:25.210 --> 00:01:28.660
But in this case, this is very personal
data, so we'll go with restricted.

26
00:01:29.760 --> 00:01:31.402
We're gonna call it grudges.

27
00:01:31.402 --> 00:01:34.190
I'm gonna spell it right this time.

28
00:01:35.900 --> 00:01:36.590
And there we go.

29
00:01:36.590 --> 00:01:39.830
And so, now we can say what
are the columns in the database and

30
00:01:39.830 --> 00:01:41.310
what types are they?

31
00:01:41.310 --> 00:01:42.560
So do we wanna add another column?

32
00:01:42.560 --> 00:01:43.450
Yeah, we do.

33
00:01:43.450 --> 00:01:47.270
So it added, you can see right now,
it added a user ID column.

34
00:01:47.270 --> 00:01:50.690
This is gonna be how it gets
the records for a particular user.

35
00:01:50.690 --> 00:01:54.440
They're gonna authenticate with cognito,
that's gonna give them a user user ID.

36
00:01:54.440 --> 00:01:56.040
When we query the database,

37
00:01:56.040 --> 00:01:59.390
by default we're only gonna get
the records that match that user ID.

38
00:01:59.390 --> 00:02:01.860
That is gonna be the primary key for

39
00:02:01.860 --> 00:02:04.240
every field that belongs to
that user in the database.

40
00:02:04.240 --> 00:02:07.629
We'll be able to set a secondary
key like another unique key, and

41
00:02:07.629 --> 00:02:09.981
I will just use like a generic ID for
that one.

42
00:02:09.981 --> 00:02:12.606
But this way,
we'll have an ID of the actual item and

43
00:02:12.606 --> 00:02:14.405
we'll also have the user, right?

44
00:02:14.405 --> 00:02:16.885
Those primary keys are a way
that's quickly search

45
00:02:16.885 --> 00:02:18.725
DynamoDB which is a new single database.

46
00:02:18.725 --> 00:02:21.775
It's very easy way to like, they'll all
be batched together in the database.

47
00:02:21.775 --> 00:02:22.695
We can pull them all in.

48
00:02:23.995 --> 00:02:27.450
So under the column,
we'll call this one the ID.

49
00:02:27.450 --> 00:02:30.370
And you can see that like very easily,
you can switch between a bunch of these.

50
00:02:30.370 --> 00:02:33.037
We'll just go with the really simple ones,
which is string.

51
00:02:33.037 --> 00:02:36.010
We'll add another column, person.

52
00:02:36.010 --> 00:02:39.930
And these right now are correlated to
the fields in the state of my application.

53
00:02:39.930 --> 00:02:42.066
And we'll say it's a string.

54
00:02:44.343 --> 00:02:45.570
&gt;&gt; Steve Kinney: Say deed.

55
00:02:47.230 --> 00:02:51.860
And we'll go ahead with a string for this
one, and then the other one was avenged.

56
00:02:54.450 --> 00:02:55.970
This one is a boolean.

57
00:02:55.970 --> 00:02:59.472
And then we want to add no more columns.

58
00:02:59.472 --> 00:03:02.560
We'll say that ID is our other,
our secondary key, which is called a sword

59
00:03:02.560 --> 00:03:05.370
key, and you can read all about those,
it's delightful reading.

60
00:03:05.370 --> 00:03:09.720
The actual dynamo documentation
is surprisingly not bad.

61
00:03:09.720 --> 00:03:15.660
For reading about a database,
it is surprisingly easy to read.

62
00:03:15.660 --> 00:03:16.950
Dynamo can do some really cool things,

63
00:03:16.950 --> 00:03:20.060
there's an event stream that every time
it changes it like fires an event.

64
00:03:20.060 --> 00:03:21.592
So you can like, this changed.

65
00:03:21.592 --> 00:03:25.270
You can like, trigger other things
in your AWS ecosystem based on it.

66
00:03:25.270 --> 00:03:29.020
It's really interesting and I like,
highly recommend for something like,

67
00:03:29.020 --> 00:03:32.860
light Saturday reading in the afternoon
to read a database user guide.

68
00:03:32.860 --> 00:03:34.540
Cuz, why not.

69
00:03:34.540 --> 00:03:36.856
All right, cool.

70
00:03:36.856 --> 00:03:42.670
So now we have a database, but you can't
interact with this database yet, right?

71
00:03:42.670 --> 00:03:45.060
It's a database sitting in Amazon.

72
00:03:45.060 --> 00:03:47.790
We need an API to talk to this database.

73
00:03:47.790 --> 00:03:48.370
We need some way for

74
00:03:48.370 --> 00:03:51.670
the client's side code to talk to
this database in the back end.

75
00:03:51.670 --> 00:03:54.094
I will go ahead and do a awsmobile push.

76
00:03:56.390 --> 00:03:58.720
Often, I will say this
as a rule of thumb now.

77
00:03:58.720 --> 00:04:00.190
If everything should be right and

78
00:04:00.190 --> 00:04:05.200
all of a sudden it's not right,
you probably didn't do an awsmobile push.

79
00:04:05.200 --> 00:04:07.105
No reason to feel bad about that,

80
00:04:07.105 --> 00:04:11.404
I say that as somebody who forgot to
awsmobile push about a thousand times.

81
00:04:11.404 --> 00:04:16.100
So, I say that from the scar
tissue of having not done it.

82
00:04:16.100 --> 00:04:18.109
Not from like, did you push?

83
00:04:18.109 --> 00:04:19.901
I guarantee we'll have to
say it at one point, or

84
00:04:19.901 --> 00:04:23.310
somebody will actually probably have
to say it to me at some point today.

85
00:04:23.310 --> 00:04:27.730
So, ten points for whoever catches me
forgetting to push when we have an error

86
00:04:27.730 --> 00:04:30.100
in like a live coding flub.

87
00:04:30.100 --> 00:04:31.670
Points, they're like Super Mario.

88
00:04:31.670 --> 00:04:33.671
I don't really know what they mean,
but it's cool.

89
00:04:33.671 --> 00:04:35.830
All right, so we have this back end.

90
00:04:37.080 --> 00:04:41.580
And we can verify that by going
to awsmobile console again.

91
00:04:46.787 --> 00:04:49.427
&gt;&gt; Steve Kinney: A great way to like,
validate the things on your system or

92
00:04:49.427 --> 00:04:51.862
the things you did are actually happening,
right?

93
00:04:51.862 --> 00:04:56.240
So awsmobile console, we can see our
node SQL database, there's our grudges.

94
00:04:56.240 --> 00:04:59.220
It's currently syncing up and creating it.

95
00:04:59.220 --> 00:05:01.810
So this might be like, yeah,
I could download models.

96
00:05:01.810 --> 00:05:06.380
Unfortunately, only,
[LAUGH] only if this is your real house.

97
00:05:06.380 --> 00:05:09.615
So for us, luckily it's JavaScript,
it's very easy for

98
00:05:09.615 --> 00:05:12.858
us to just create the objects
that we need, not a big deal.

99
00:05:12.858 --> 00:05:15.830
You could also create
the tables in here as well.

