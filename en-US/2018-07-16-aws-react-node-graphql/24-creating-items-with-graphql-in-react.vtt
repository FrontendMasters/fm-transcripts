WEBVTT

1
00:00:00.000 --> 00:00:02.120
&gt;&gt; Steve Kinney: We have a few more
things that we probably wanna do.

2
00:00:02.120 --> 00:00:06.100
We probably wanna go ahead figure
out how to create a grudge.

3
00:00:06.100 --> 00:00:10.980
I will leave removing and
updating as exercises reader.

4
00:00:10.980 --> 00:00:12.930
But we'll get few more things done.

5
00:00:12.930 --> 00:00:14.620
We'll get how to actually create one.

6
00:00:14.620 --> 00:00:18.830
And then, we'll also figure out this real
time part, like how do we subscribe?

7
00:00:18.830 --> 00:00:21.610
One of the things Amplify gives
us out of the box is the ability

8
00:00:21.610 --> 00:00:23.660
to subscribe to changes to the database.

9
00:00:23.660 --> 00:00:29.010
So rather than having to repeatedly fetch,
we can actually just get in them in place.

10
00:00:29.010 --> 00:00:32.441
And so, every time a new one comes in,
we will be notified,

11
00:00:32.441 --> 00:00:34.579
we can update the UI appropriately.

12
00:00:34.579 --> 00:00:36.978
And I mean, who doesn't like real time?

13
00:00:36.978 --> 00:00:39.804
Cool, so we're gonna need
a new GaphicUL query for this.

14
00:00:41.438 --> 00:00:47.145
&gt;&gt; Steve Kinney: This one,
we'll call it export const_CreateGrudge.

15
00:00:48.769 --> 00:00:50.555
&gt;&gt; Steve Kinney: Again,
you could theoretically name this and

16
00:00:50.555 --> 00:00:51.847
the next part whatever you want.

17
00:00:51.847 --> 00:00:57.216
This one
&gt;&gt; Steve Kinney: Is a mutation.

18
00:00:58.799 --> 00:01:01.986
&gt;&gt; Steve Kinney: It's
going to be CreateGrudge.

19
00:01:01.986 --> 00:01:04.956
And it's going to, before,
when we were doing the playground,

20
00:01:04.956 --> 00:01:08.039
we were basically hardcoded in who
had wronged us and what they did.

21
00:01:08.039 --> 00:01:12.602
This is obviously a dynamic web
application where we want our users to

22
00:01:12.602 --> 00:01:14.027
tell us who hurt you.

23
00:01:14.027 --> 00:01:16.888
So we'll go ahead, and
this will take in some arguments.

24
00:01:16.888 --> 00:01:21.642
And the way that arguments work in GraphQL
is we basically say what we wanna call

25
00:01:21.642 --> 00:01:23.019
with the dollar sign.

26
00:01:23.019 --> 00:01:25.096
This is gonna be the kind
of variable in this case.

27
00:01:25.096 --> 00:01:26.554
Person.

28
00:01:26.554 --> 00:01:30.224
If, from our application, we get
something that does not meet this type,

29
00:01:30.224 --> 00:01:32.510
it will error before we
even send the request.

30
00:01:32.510 --> 00:01:34.064
We'll know immediately.

31
00:01:34.064 --> 00:01:39.319
We'll say that the deed is a string.

32
00:01:42.863 --> 00:01:44.380
&gt;&gt; Steve Kinney: And avenged.

33
00:01:44.380 --> 00:01:47.026
This Boolean.
So we're expecting, before we go ahead and

34
00:01:47.026 --> 00:01:48.280
try to run the mutation,

35
00:01:48.280 --> 00:01:51.525
this is what we're expecting
the React application to hand us.

36
00:01:51.525 --> 00:01:55.425
And if it doesn't, we're gonna have
strong feelings and words about that.

37
00:01:55.425 --> 00:01:59.749
So when we get those three things in,
then we'll call the actual createGrudge

38
00:01:59.749 --> 00:02:04.286
mutation
&gt;&gt; Steve Kinney: And

39
00:02:04.286 --> 00:02:06.208
we'll say we'll pass the person.

40
00:02:06.208 --> 00:02:08.175
Whatever they handed us is the person.

41
00:02:10.094 --> 00:02:14.016
&gt;&gt; Steve Kinney: We'll say that deed is
whatever they passed us in as the deed.

42
00:02:15.345 --> 00:02:21.406
&gt;&gt; Steve Kinney: And then, avenged is
whatever they passed us in as avenged.

43
00:02:22.760 --> 00:02:24.819
&gt;&gt; Steve Kinney: Now,
if you don't want your UI to do that,

44
00:02:24.819 --> 00:02:27.020
we can say this is false all the time.

45
00:02:27.020 --> 00:02:30.900
Later, we'll learn actually how to have
default properties in GraphicQL as well,

46
00:02:30.900 --> 00:02:32.070
or at least in the version.

47
00:02:33.120 --> 00:02:34.770
All right, when that comes back,
I want the ID,

48
00:02:34.770 --> 00:02:36.400
cuz that's gonna get
generated by the server.

49
00:02:36.400 --> 00:02:41.052
The person, the deed, and whether or
not they were avenged, right?

50
00:02:41.052 --> 00:02:44.750
So we'll take in two strings and
a Boolean.

51
00:02:44.750 --> 00:02:47.077
We'll pass those off to GraphQL, and

52
00:02:47.077 --> 00:02:50.723
we'll get back the fully formed
model with the ID in place.

53
00:02:52.402 --> 00:02:56.252
&gt;&gt; Steve Kinney: All right, so
let's go ahead and modify add grudge.

54
00:02:57.576 --> 00:03:00.080
&gt;&gt; Steve Kinney: Right now,
add grudge just puts stuff in state.

55
00:03:00.080 --> 00:03:02.678
We don't actually want to get rid of that,
because we will eventually be doing that.

56
00:03:02.678 --> 00:03:05.944
We'll say api.graphql.

57
00:03:12.259 --> 00:03:13.432
&gt;&gt; Steve Kinney: And see, that was added.

58
00:03:13.432 --> 00:03:16.116
Visual Studio Code did me a favor and
figured I was using it.

59
00:03:16.116 --> 00:03:18.594
This is a great feature
that works 50% of the time.

60
00:03:18.594 --> 00:03:22.142
I used it, so
it added it to my imports automatically.

61
00:03:22.142 --> 00:03:25.262
But you notice I didn't trust
it enough not to check.

62
00:03:25.262 --> 00:03:29.156
Cool, so we get the response,
just like we did before.

63
00:03:31.787 --> 00:03:37.206
&gt;&gt; Steve Kinney: And
we'll get our new grudge,

64
00:03:37.206 --> 00:03:45.766
which will be response.data.createGrudge.

65
00:03:48.564 --> 00:03:50.482
&gt;&gt; Steve Kinney: And
this will be the new grudge this time.

66
00:03:52.818 --> 00:03:54.496
&gt;&gt; Steve Kinney: Which we'll
add to the top of the array.

67
00:03:57.043 --> 00:03:58.356
&gt;&gt; Steve Kinney: All right,
let's take it for a spin.

68
00:04:07.844 --> 00:04:10.613
&gt;&gt; Steve Kinney: So we've got,
we also didn't catch our promise.

69
00:04:12.021 --> 00:04:12.906
&gt;&gt; Steve Kinney: Let's
take a look at the data.

70
00:04:16.368 --> 00:04:17.517
&gt;&gt; Steve Kinney: Of course, a null value.

71
00:04:21.742 --> 00:04:24.101
&gt;&gt; Steve Kinney: Yeah,
we need to pass in the grudge.

72
00:04:24.101 --> 00:04:25.369
All right, so here, we have the grudge.

73
00:04:25.369 --> 00:04:28.112
And we're saying hey, we're gonna make
all these things in the database.

74
00:04:28.112 --> 00:04:30.631
But then,
we never actually handed that object in.

75
00:04:30.631 --> 00:04:32.413
So we'll go ahead and we'll pass that in.

76
00:04:32.413 --> 00:04:35.140
The first argument is what
query do you want to run.

77
00:04:35.140 --> 00:04:37.184
The second one is what is
the object that we wanna pass in.

78
00:04:42.705 --> 00:04:43.956
&gt;&gt; Steve Kinney: Thank god for
autocomplete.

79
00:04:46.305 --> 00:04:47.746
&gt;&gt; Steve Kinney: Cool,
and it's been added.

80
00:04:47.746 --> 00:04:51.696
And just to verify that it's in the
database, we will go ahead and refresh,

81
00:04:51.696 --> 00:04:53.166
and you see that it's persisted.

82
00:04:53.166 --> 00:04:54.416
So now, we get in there.

83
00:04:54.416 --> 00:04:56.136
We have the ability to fetch all of them.

84
00:04:56.136 --> 00:04:58.233
We have the ability to create one.

