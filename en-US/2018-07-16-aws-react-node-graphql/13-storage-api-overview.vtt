WEBVTT

1
00:00:00.230 --> 00:00:02.950
&gt;&gt; Steve Kinney: So we're gonna
actually switch gears for a little bit.

2
00:00:02.950 --> 00:00:07.880
And we're gonna work on a different
application that is called Trapper Keeper.

3
00:00:07.880 --> 00:00:13.750
And basically, a application where you
can upload images and load them from S3.

4
00:00:13.750 --> 00:00:18.930
And it's basically just a contrived excuse

5
00:00:18.930 --> 00:00:24.150
to use the storage API,
which is another one of the Amplify APIs.

6
00:00:24.150 --> 00:00:26.980
The storage one is really cool because,
yeah,

7
00:00:26.980 --> 00:00:30.260
we can put stuff in S3 buckets,
super fun, right?

8
00:00:30.260 --> 00:00:32.950
But it'll ask you to do a bunch of
really kind of granular things.

9
00:00:32.950 --> 00:00:34.882
So let's actually switch over and
take a look at that.

10
00:00:37.474 --> 00:00:41.040
&gt;&gt; Steve Kinney: So storage API,
as I just mentioned,

11
00:00:41.040 --> 00:00:44.941
is basically an abstraction over a very,

12
00:00:44.941 --> 00:00:50.855
very well configured S3 bucket
that mobile hub makes for you.

13
00:00:50.855 --> 00:00:55.975
As a front end engineer personally,
I'm pretty liberal with S3 bucket cuz

14
00:00:55.975 --> 00:01:01.575
usually what I'm using my S3 bucket for
is basically going to host my JavaScript,

15
00:01:01.575 --> 00:01:05.670
and my CSS and my html, and
I want everyone to get it, right?

16
00:01:05.670 --> 00:01:10.880
So if you want a wide open, public S3
bucket, that's pretty easy to set up.

17
00:01:10.880 --> 00:01:15.460
But that's what we use S3 in
the hosting section of mobile hub for.

18
00:01:15.460 --> 00:01:19.120
For S3 of the Store section,
we have different needs.

19
00:01:19.120 --> 00:01:22.910
This is for
storing user's actual files, right?

20
00:01:22.910 --> 00:01:25.980
And in some cases those
might be public files fd.

21
00:01:25.980 --> 00:01:29.400
And in other cases it could be private and

22
00:01:29.400 --> 00:01:33.931
potentially sensitive data that you don't
want anyone just be able to go get, right?

23
00:01:33.931 --> 00:01:41.070
There's very common, is that a whole bunch
of companies that should know better and

24
00:01:41.070 --> 00:01:46.680
do better basically have public S3
buckets with people's credit scores and

25
00:01:46.680 --> 00:01:53.020
credit information, personal data On a,
effectively a monthly basis, there is some

26
00:01:53.020 --> 00:01:57.530
kind of security breach where it's not,
security breach is a strong word, right?

27
00:01:57.530 --> 00:02:01.580
It's like, yes this person broke into
your house but you also left the door and

28
00:02:01.580 --> 00:02:04.070
all the windows open, and
they were walking down the street and

29
00:02:04.070 --> 00:02:07.010
said, hey, here's a house with
the doors and all the windows open and

30
00:02:07.010 --> 00:02:09.660
no one in it and
a treasure trove of stuff.

31
00:02:09.660 --> 00:02:13.170
Right?
Yes they still committed a crime.

32
00:02:13.170 --> 00:02:15.300
But [LAUGH] you could've done that.

33
00:02:15.300 --> 00:02:16.140
So this is for that kind of

34
00:02:16.140 --> 00:02:18.670
sense of getting it right is
actually a little bit trickier.

35
00:02:18.670 --> 00:02:20.480
Right?
Cuz like usually when I'm using

36
00:02:20.480 --> 00:02:25.380
S3 Bucket I'm using them for the most
naive case possible, which is hey everyone

37
00:02:25.380 --> 00:02:30.020
I put a file I'm using as like glorified
FTP server from the 90's, right,

38
00:02:30.020 --> 00:02:34.670
like here's my destination,
I am putting it on the internet for you.

39
00:02:34.670 --> 00:02:39.070
This is for some like, this is like what
the storage API Gives you a little more

40
00:02:39.070 --> 00:02:44.050
fine grained control, and
helps you make good choices.

41
00:02:44.050 --> 00:02:49.090
Because nobody wants to be the person
in that article, and somebody is,

42
00:02:49.090 --> 00:02:52.370
like whatever company it is there were
engineers that made a boo boo, right?

43
00:02:52.370 --> 00:02:54.990
And so
this helps you make some good choices.

44
00:02:54.990 --> 00:02:57.250
The other thing I wanna point
out is that if you have

45
00:02:58.470 --> 00:03:02.670
Cognito set up in your application and you
have some buckets, you can actually like,

46
00:03:02.670 --> 00:03:06.580
you don't need, you can use any piece
of everything we've shown you today,

47
00:03:06.580 --> 00:03:10.130
you can use all of it together but you can
also just use the piece that you want or

48
00:03:10.130 --> 00:03:12.980
need in other context or
a larger application as well.

49
00:03:12.980 --> 00:03:16.380
This is like we've use
the example of spinning up

50
00:03:16.380 --> 00:03:19.290
very small apps very quickly
cuz it's a great way to teach.

51
00:03:19.290 --> 00:03:21.810
But most of our real world
code is not like that.

52
00:03:21.810 --> 00:03:23.310
It's like I have this need.

53
00:03:23.310 --> 00:03:27.030
The idea that you can pull
in some of these tools

54
00:03:27.030 --> 00:03:32.360
one by one as you need them and in very
specific cases is also super interesting.

55
00:03:32.360 --> 00:03:34.680
All right, so let's look
a little bit at the storage API.

56
00:03:34.680 --> 00:03:39.960
Pulling it from aws-amplify
is very similar

57
00:03:39.960 --> 00:03:44.930
to pulling in the API as well,
all right, or auth as we saw before.

58
00:03:46.350 --> 00:03:49.600
And effectively like you
can almost think about it

59
00:03:49.600 --> 00:03:52.360
like it has a little bit of a crud API,
right,

60
00:03:52.360 --> 00:03:57.510
it has the ability to get a individual
file at a [INAUDIBLE] bucket,

61
00:03:57.510 --> 00:04:02.310
it has the ability to put a file in an S3
bucket, it has the ability to remove one,

62
00:04:02.310 --> 00:04:06.940
it has the ability to list all the ones,
S3 doesn't like really have

63
00:04:06.940 --> 00:04:11.890
directories per se but
it'll use the slashes as Fake directories.

64
00:04:11.890 --> 00:04:17.260
I use basically, it's really a file
called photo slash lololol dot png,

65
00:04:17.260 --> 00:04:20.770
you can actually treat it as
a directory in this case, so for

66
00:04:20.770 --> 00:04:25.260
instance storage dot list would get
you all the files in the photos

67
00:04:25.260 --> 00:04:30.090
directory and give you basically
an array of all those keys,

68
00:04:30.090 --> 00:04:34.470
they are not the actual files themselves,
they are effectively just the file name.

69
00:04:34.470 --> 00:04:37.510
Right, you actually will see
after you go through another step

70
00:04:37.510 --> 00:04:38.640
to actually get the url.

71
00:04:38.640 --> 00:04:40.530
Why didn't you just give me the url?

72
00:04:40.530 --> 00:04:42.430
Turns out this is incredibly powerful.

73
00:04:42.430 --> 00:04:45.700
Because there is stuff like,
if it is a private file,

74
00:04:45.700 --> 00:04:48.610
then what's stopping me from
accidentally sharing that url?

75
00:04:48.610 --> 00:04:51.220
These'll give you signed
urls that are unique.

76
00:04:51.220 --> 00:04:53.336
And you can actually set
expiration dates on them.

77
00:04:53.336 --> 00:04:56.210
You can be All right,
for photos dot lololol,

78
00:04:56.210 --> 00:05:01.150
which is clearly sensitive information,
I wanna show it on the page, but

79
00:05:01.150 --> 00:05:05.790
I wanna generate a url that's only
good for 60 seconds, right and so

80
00:05:05.790 --> 00:05:09.730
you can basically have mission impossible
style exploding urls that after a certain

81
00:05:09.730 --> 00:05:12.684
amount of time they don't work any more,
which is kinda cool.

82
00:05:14.890 --> 00:05:16.830
So the Storage API and

83
00:05:16.830 --> 00:05:22.660
the amplify/mobile hub supports
three different levels of privacy.

84
00:05:22.660 --> 00:05:28.030
One is public, so no privacy,
which is basically anyone can

85
00:05:29.540 --> 00:05:33.320
read or
write to the public part of the bucket.

86
00:05:33.320 --> 00:05:35.240
Right.
Put anything in, it's fine, so

87
00:05:35.240 --> 00:05:35.800
on and so forth.

88
00:05:35.800 --> 00:05:41.840
Protected is anyone can read but
only the user that put it in there.

89
00:05:41.840 --> 00:05:47.590
So still scope to the user, can actually
edit and in this case, you need to kind of

90
00:05:47.590 --> 00:05:53.230
know if you wanna get another users,
user's protected files from their bucket.

91
00:05:53.230 --> 00:05:57.100
You do need to know their ID, right?

92
00:05:57.100 --> 00:06:01.730
And that's where that auth get session and
get current user and

93
00:06:01.730 --> 00:06:04.250
stuff like that,
that's where that's helpful.

94
00:06:04.250 --> 00:06:08.320
Cuz you could, this becomes interesting
when you also have a database.

95
00:06:08.320 --> 00:06:11.580
So you can be like hey, I know that
there's a file in this bucket, and

96
00:06:11.580 --> 00:06:13.090
it belongs to this user.

97
00:06:13.090 --> 00:06:16.340
Once you know the user and
the file, you can go get it,

98
00:06:16.340 --> 00:06:18.960
even if you are not that user, right?

99
00:06:18.960 --> 00:06:19.910
So it's just a way,

100
00:06:19.910 --> 00:06:25.030
if you have the name of the key of the
file, who it belongs to, you can read it.

101
00:06:25.030 --> 00:06:26.830
You can't write to it, right?

102
00:06:26.830 --> 00:06:30.790
Like I can upload a new Facebook photo,
but I can't upload a new Facebook for

103
00:06:30.790 --> 00:06:32.320
John, right?

104
00:06:32.320 --> 00:06:33.890
I hope not, right?

105
00:06:33.890 --> 00:06:35.920
That's security breach if I can.

106
00:06:35.920 --> 00:06:38.190
So there's that kind of
different level of access.

107
00:06:38.190 --> 00:06:39.330
And the final there's private.

108
00:06:40.420 --> 00:06:46.680
Private is only the person who
owns that file can view it.

109
00:06:46.680 --> 00:06:48.750
Or read it or anything along those lines.

110
00:06:48.750 --> 00:06:51.390
And this is in terms of,
I give you the key.

111
00:06:52.400 --> 00:06:56.160
To get that URL you must meet
the privacy conditions, right?

112
00:06:56.160 --> 00:06:59.450
So, I mean, yeah, yeah,
I want the lololol.png from a public one.

113
00:06:59.450 --> 00:07:02.830
Yeah, and you wouldn't get a URL that
is gonna be the URL to that file.

114
00:07:02.830 --> 00:07:06.230
But if you wanna get it from a private
one, you have to be the owner or

115
00:07:06.230 --> 00:07:07.890
else you're not getting the URL.

116
00:07:07.890 --> 00:07:11.410
You're not getting access at all,
which is kind of how it works.

117
00:07:11.410 --> 00:07:18.470
There's also storage vault which is
just an alias for level private.

118
00:07:18.470 --> 00:07:23.000
By default, it's public, You can
actually change the default as well.

119
00:07:24.300 --> 00:07:28.590
But by default, it's public and
storage.fault is by default private.

120
00:07:28.590 --> 00:07:31.090
So yeah, you can get your own stuff.

121
00:07:31.090 --> 00:07:34.330
If you wanna get someone else's stuff
you do need to know their identity ID.

