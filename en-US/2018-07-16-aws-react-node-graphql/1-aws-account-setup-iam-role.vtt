WEBVTT

1
00:00:00.000 --> 00:00:02.990
&gt;&gt; Steve Kinney: So the first thing we
need to do is we need to create a user

2
00:00:02.990 --> 00:00:04.960
to use these AWS services.

3
00:00:04.960 --> 00:00:07.990
Now, you can go in and
sign up for an AWS account but

4
00:00:07.990 --> 00:00:12.910
generally speaking just using that
account is considered bad practice.

5
00:00:12.910 --> 00:00:15.210
Why?
Cuz that is your main account.

6
00:00:15.210 --> 00:00:17.780
That is the account that controls
all your billing information.

7
00:00:17.780 --> 00:00:21.300
It is the one source of truth for
all the things that you control.

8
00:00:21.300 --> 00:00:25.570
If, for instance, those keys leak cuz you
accidentally push them up to GitHub or

9
00:00:25.570 --> 00:00:28.930
somebody else accidentally leaks them,
that's problematic.

10
00:00:28.930 --> 00:00:33.700
So what AWS recommends is creating a sub
user that you use most of the time.

11
00:00:33.700 --> 00:00:37.390
For those of you who are familiar
with Unix, a lot of Unix machines,

12
00:00:37.390 --> 00:00:41.820
including MacOS machines, have a root
user that we don't touch or use.

13
00:00:41.820 --> 00:00:44.180
You have another administrative
account that uses it.

14
00:00:44.180 --> 00:00:48.530
And you can use pseudo or another tool
to tap in to those administrative super

15
00:00:48.530 --> 00:00:53.350
powers as root super powers later on,
but generally speaking with great power

16
00:00:53.350 --> 00:00:58.020
comes great responsibility so
we tend to stay away from those.

17
00:00:58.020 --> 00:01:01.340
So the first thing we're gonna do is
to simply get this out of the way.

18
00:01:01.340 --> 00:01:05.500
We're gonna set up the sub user that we're
gonna be using for most of the time.

19
00:01:05.500 --> 00:01:08.020
So if this is your very
first Amazon account,

20
00:01:08.020 --> 00:01:09.580
we're going to create the sub user.

21
00:01:09.580 --> 00:01:14.360
If you are familiar and you've used AWS
before, you may already have a user

22
00:01:14.360 --> 00:01:17.950
that you use separate from your
root account, that's totally fine.

23
00:01:17.950 --> 00:01:19.760
You can make an additional one just for

24
00:01:19.760 --> 00:01:21.440
some of the tools that
we're gonna use today.

25
00:01:21.440 --> 00:01:23.290
You can use that account as well.

26
00:01:23.290 --> 00:01:27.060
But if you have a brand new AWS
account and this is your first time,

27
00:01:27.060 --> 00:01:29.470
we do need to make one additional user.

28
00:01:29.470 --> 00:01:33.580
So we'll flip over to the AWS console and
take a look at how to do that.

29
00:01:37.890 --> 00:01:39.010
First step in the very beginning.

30
00:01:40.510 --> 00:01:47.290
If you go to the Services tab, there
are a lot of tools that Amazon offers.

31
00:01:47.290 --> 00:01:49.515
So you can see that by their categories,

32
00:01:49.515 --> 00:01:55.300
ProTip is you also can hit A-Z if you're
just looking for something in particular.

33
00:01:55.300 --> 00:01:57.520
You can see all the ones that
start with the word cloud for

34
00:01:57.520 --> 00:02:00.840
instance, they're not related.

35
00:02:00.840 --> 00:02:05.113
I'l pull it back here, normally I tend to
have a good sense for what I'm looking for

36
00:02:05.113 --> 00:02:06.420
so I use the search box.

37
00:02:06.420 --> 00:02:10.400
If we want to create users, we use this
things called IM which is identity and

38
00:02:10.400 --> 00:02:14.874
access management just type in IM here and
click.

39
00:02:19.076 --> 00:02:19.717
&gt;&gt; Steve Kinney: Cool, so

40
00:02:19.717 --> 00:02:23.933
there are a few things to do to
kinda keep your account secure.

41
00:02:23.933 --> 00:02:27.680
These days, if you have a brand new
account, they didn't provide you with

42
00:02:27.680 --> 00:02:31.440
any root access keys because using
your root account is a bad idea.

43
00:02:31.440 --> 00:02:34.340
If you have an older account, you might
actually have some root access keys.

44
00:02:34.340 --> 00:02:34.940
You can go in here and

45
00:02:34.940 --> 00:02:38.260
delete them cuz we're going to
create another user to use as well.

46
00:02:38.260 --> 00:02:41.820
The other one is activating
multi factor authentication

47
00:02:41.820 --> 00:02:43.796
is something that you
should absolutely do.

48
00:02:43.796 --> 00:02:45.600
We're not gonna do it in this workshop,
but

49
00:02:45.600 --> 00:02:48.360
it involves basically going through
using some kind of multi factor

50
00:02:48.360 --> 00:02:52.410
authentication app, whether that's Authi,
Google Authenticator, so on and so forth.

51
00:02:52.410 --> 00:02:56.620
The one that we care about is
Create individual IM users.

52
00:02:56.620 --> 00:03:00.550
This allows you to create multiple users
with different levels of access to

53
00:03:00.550 --> 00:03:01.390
your account.

54
00:03:01.390 --> 00:03:05.460
You might have one that has administrator
access, that can do all sorts of things.

55
00:03:05.460 --> 00:03:06.680
You might have another one that, for

56
00:03:06.680 --> 00:03:09.040
instance, if you're using
continuous integration and

57
00:03:09.040 --> 00:03:14.450
continuous development, you might have one
that has only access to the AWS services

58
00:03:14.450 --> 00:03:18.785
that that user needs, that tool needs
to be able to do its job, right?

59
00:03:18.785 --> 00:03:22.035
So the idea is like kinda
the principle of least access.

60
00:03:22.035 --> 00:03:26.265
You wanna give everything just a bare
minimum of privilege that it needs.

61
00:03:26.265 --> 00:03:28.785
So this allows you to
create many different users

62
00:03:28.785 --> 00:03:30.695
with different levels of privilege.

63
00:03:30.695 --> 00:03:34.430
Because there's a case where you could,
for instance, use your key for, again,

64
00:03:34.430 --> 00:03:35.720
some kind of CI tool.

65
00:03:35.720 --> 00:03:39.790
If they have a security breach, well, the
worst case scenario is it's only allowed

66
00:03:39.790 --> 00:03:42.330
to upload like S3 or
change CloudFront configuration.

67
00:03:42.330 --> 00:03:44.620
It doesn't have access to
your billing information or

68
00:03:44.620 --> 00:03:49.310
the ability to spin up a whole bunch of
EC2 instances for Bitcoin mining, right?

69
00:03:49.310 --> 00:03:51.050
You can at least limit
the scope of damage.

70
00:03:51.050 --> 00:03:55.260
If it was your root account, well, that's
going to be a long and awkward phone call

71
00:03:55.260 --> 00:04:00.180
with American Express later as you
try to rectify all of those charges.

72
00:04:00.180 --> 00:04:04.240
So to create a new IM user,
we're just going to go to Users.

73
00:04:04.240 --> 00:04:06.720
You can see that I have one
that I created earlier.

74
00:04:06.720 --> 00:04:08.180
Again, if you have an account,

75
00:04:08.180 --> 00:04:12.900
you can use that, otherwise you can go
to Add user and you give it a username.

76
00:04:12.900 --> 00:04:17.160
This is any username you want, usually
something descriptive is very helpful.

77
00:04:17.160 --> 00:04:19.670
As someone who has made plenty
of non-descriptive names,

78
00:04:19.670 --> 00:04:23.400
the name that totally makes sense to you
now probably won't make any sense to you

79
00:04:23.400 --> 00:04:24.280
in three months.

80
00:04:24.280 --> 00:04:28.320
So generally speaking, if I'm using one
for Travis CI, I'll probably just call it

81
00:04:28.320 --> 00:04:32.360
Travis CI so that if I do need to change
any of those permissions it's very easy.

82
00:04:32.360 --> 00:04:34.700
So I had one called Mobile Hub
which I'll actually be using, but

83
00:04:34.700 --> 00:04:37.970
I do wanna take you through
the process of creating a new one.

84
00:04:37.970 --> 00:04:41.050
So we'll just call this one Administrator.

85
00:04:41.050 --> 00:04:46.220
And you have these two check boxes,
one is programmatic access,

86
00:04:46.220 --> 00:04:49.750
it's the ability to make API
calls from the command line tool.

87
00:04:49.750 --> 00:04:55.670
Again using the CI example if you wanted
to push S3 if a bill passes on master,

88
00:04:55.670 --> 00:05:00.170
you would use an API to do that, that all
happens with the programmatic access.

89
00:05:00.170 --> 00:05:03.910
The other option is the AWS
management console.

90
00:05:03.910 --> 00:05:07.190
This is the web user
interface that I'm using now.

91
00:05:07.190 --> 00:05:10.770
So you can make different accounts,
some that can access it through the API or

92
00:05:10.770 --> 00:05:14.590
the command line tool, others that
can use the web user interface.

93
00:05:14.590 --> 00:05:16.590
If you're just using it
in some kind of program,

94
00:05:16.590 --> 00:05:19.890
clearly you would only use
the programmatic access.

95
00:05:19.890 --> 00:05:22.880
If it is one that people
are planning on logging in on.

96
00:05:22.880 --> 00:05:26.730
And you might have one AWS account for you
but also the company you work with might

97
00:05:26.730 --> 00:05:29.710
have an AWS account and
they might provision many users as well.

98
00:05:29.710 --> 00:05:32.600
So depending on your use case,
there's a right choice.

99
00:05:32.600 --> 00:05:34.130
If you don't know, guess what?

100
00:05:34.130 --> 00:05:35.970
There's one additional choice, both.

101
00:05:35.970 --> 00:05:38.440
So you can click both.

102
00:05:38.440 --> 00:05:41.490
If we look at programmatic access,
you can see that's the only option.

103
00:05:41.490 --> 00:05:45.670
If we click on AWS Management Console
Access, there's the ability for

104
00:05:45.670 --> 00:05:48.860
an auto-generated password which
provide a custom password and

105
00:05:48.860 --> 00:05:51.450
then prompt a new user to change
their password immediately.

106
00:05:51.450 --> 00:05:52.950
If you're creating this account for

107
00:05:52.950 --> 00:05:57.260
you, then you probably don't need
to change the password, right?

108
00:05:57.260 --> 00:05:57.970
You've made the password.

109
00:05:57.970 --> 00:06:00.050
But if you're creating the account for

110
00:06:00.050 --> 00:06:03.360
somebody else on your team, well, they
don't want you to know their password, so

111
00:06:03.360 --> 00:06:04.740
they would be prompted
immediately to change it.

112
00:06:04.740 --> 00:06:08.470
Here's your one-time password to get
started, and then change your password.

113
00:06:08.470 --> 00:06:10.910
You can provide a password,
so on and so forth.

114
00:06:12.280 --> 00:06:15.470
For us, we actually already have
an account but we'll create a new one and

115
00:06:15.470 --> 00:06:18.260
we'll actually give it both and
I'm gonna say custom password.

116
00:06:18.260 --> 00:06:22.279
I'll just,
&gt;&gt; Steve Kinney: And

117
00:06:22.279 --> 00:06:24.280
I don't need a new
password cuz it's just me.

118
00:06:25.380 --> 00:06:26.700
The next is permissions.

119
00:06:26.700 --> 00:06:28.920
What is this user allowed to do?

120
00:06:28.920 --> 00:06:32.450
Now again, depending on the size
of the group you're working with,

121
00:06:32.450 --> 00:06:36.230
if it's just you,
you can usually attach policies directly.

122
00:06:36.230 --> 00:06:40.530
But if you're putting together a team,
you might have a group of

123
00:06:40.530 --> 00:06:45.230
all engineers that work on such and
such product have this level of access,

124
00:06:45.230 --> 00:06:47.870
while people in ops might have
a different level of access.

125
00:06:47.870 --> 00:06:50.050
You can create groups and
put the users in there.

126
00:06:50.050 --> 00:06:53.080
It all depends on what you're
trying to accomplish and

127
00:06:53.080 --> 00:06:56.690
level of scale like this is
probably the right choice.

128
00:06:56.690 --> 00:06:59.310
But for us, who are just getting stated
on kind of just using our own personal

129
00:06:59.310 --> 00:07:01.870
account, we'll just
attach policies directly.

130
00:07:01.870 --> 00:07:04.940
The other options is obviously copy
permissions from another user,

131
00:07:04.940 --> 00:07:10.140
be like whatever Sherry has,
I want Claire to have.

132
00:07:10.140 --> 00:07:11.310
So on and so forth, right?

133
00:07:11.310 --> 00:07:12.370
Both of those are options.

134
00:07:12.370 --> 00:07:15.605
If you find yourself doing that a lot,
you're probably better off making a group

135
00:07:15.605 --> 00:07:18.150
cuz that's effectively what
you're doing at that point.

136
00:07:18.150 --> 00:07:20.860
Cuz then you could also change
the permissions of that group and

137
00:07:20.860 --> 00:07:23.050
then everyone in that group
will get the new permissions.

138
00:07:24.912 --> 00:07:28.730
So we're just gonna attach the policies
directly for this user, and

139
00:07:28.730 --> 00:07:30.130
there's a whole bunch of options.

140
00:07:30.130 --> 00:07:34.880
You can see there's stuff as wide
ranging as administrator access, right?

141
00:07:34.880 --> 00:07:39.140
Which is kind of pretty much everything,
not everything, but pretty close.

142
00:07:39.140 --> 00:07:43.060
To Alexa for
Business Read Only Access, right?

143
00:07:43.060 --> 00:07:44.220
A lot more specific.

144
00:07:44.220 --> 00:07:46.880
This is not an account that
can go even changing things.

145
00:07:46.880 --> 00:07:49.850
They can just read and pull down that
information in your application.

146
00:07:49.850 --> 00:07:52.720
That might be something you're
writing an app that's going to pull

147
00:07:52.720 --> 00:07:53.810
down this information.

148
00:07:53.810 --> 00:07:57.030
You would give that app,
you create an IM user for that app and

149
00:07:57.030 --> 00:07:59.010
give it that level to pull down.

150
00:07:59.010 --> 00:08:01.160
For the mobile hub stuff
that we're gonna use today,

151
00:08:01.160 --> 00:08:03.750
it's actually gonna touch
a whole bunch of different APIs.

152
00:08:03.750 --> 00:08:06.190
So we're actually gonna give
it administrator access.

153
00:08:06.190 --> 00:08:10.220
But you can actually go through all
of these in your copious free time,

154
00:08:10.220 --> 00:08:11.100
pick the right choices.

155
00:08:11.100 --> 00:08:14.300
You can actually create your own policies
as well if there is something that doesn't

156
00:08:14.300 --> 00:08:16.750
actually match your exact needs.

157
00:08:16.750 --> 00:08:18.530
So with that in place, we'll go to Review.

158
00:08:19.940 --> 00:08:23.590
And so we can see the user name, it's
Administrator, providing programmatic and

159
00:08:23.590 --> 00:08:24.950
console access.

160
00:08:24.950 --> 00:08:27.950
We have a custom password that we're
not gonna require a password reset.

161
00:08:27.950 --> 00:08:30.950
And the managed policy
is Administrator Access.

162
00:08:30.950 --> 00:08:32.780
We'll go ahead and create that user.

163
00:08:32.780 --> 00:08:34.660
A few things going on, not a lot.

164
00:08:34.660 --> 00:08:36.750
You can see, here's our new user.

165
00:08:36.750 --> 00:08:40.970
Send email might look like yeah,
I wanna get this secret access key and

166
00:08:40.970 --> 00:08:43.720
access ID sent to me via email.

167
00:08:43.720 --> 00:08:46.010
That's just basically an email saying,
guess what?

168
00:08:46.010 --> 00:08:47.120
An account was made for you.

169
00:08:47.120 --> 00:08:49.830
If you created it for
someone on your team, great.

170
00:08:49.830 --> 00:08:52.130
On the other hand,
if you are just making it for

171
00:08:52.130 --> 00:08:54.840
you, that email has nothing helpful.

172
00:08:54.840 --> 00:08:57.410
You can also download a CSV of
all the users just created,

173
00:08:57.410 --> 00:09:02.650
in this case one, that will have this
access key and this secret access key.

174
00:09:02.650 --> 00:09:08.550
I recommend doing that, mostly cuz you can
hit show and see that secret access key.

175
00:09:08.550 --> 00:09:12.830
But once you leave that page, if you
didn't download the credentials, that's

176
00:09:12.830 --> 00:09:18.490
it, you can generate a new key but Amazon
is never gonna show you that key again.

177
00:09:18.490 --> 00:09:21.460
That is the only time that
you are going to see it.

178
00:09:22.580 --> 00:09:25.180
So if you don't own a CSV,
you can peek it open or whatever you want.

179
00:09:25.180 --> 00:09:30.630
But again, that is effectively your
password, so it probably behooves

180
00:09:30.630 --> 00:09:34.469
you to encrypt it or move it to a password
manager or something along those lines.

181
00:09:35.970 --> 00:09:37.970
Very cool and so will close that up.

182
00:09:37.970 --> 00:09:39.946
So now,
I have these two users that I can use,

183
00:09:39.946 --> 00:09:42.720
they both at this point have
the same amount of access.

184
00:09:42.720 --> 00:09:45.290
I'm going to be using
the MobileHub one today but

185
00:09:45.290 --> 00:09:46.890
you could also have an administrator one.

186
00:09:46.890 --> 00:09:48.120
There are cases again,

187
00:09:48.120 --> 00:09:51.020
where you might create additional
users depending on your needs.

188
00:09:51.020 --> 00:09:55.160
Don't think of a user as a human all the
time like in some case you are a human,

189
00:09:55.160 --> 00:09:56.980
and you are going to need an account.

190
00:09:56.980 --> 00:10:01.660
Think of the users also as this app
needs such and such permissions.

191
00:10:01.660 --> 00:10:06.600
So that you can limit each app to just
the amount of access that it needs

192
00:10:06.600 --> 00:10:07.220
and no more.

193
00:10:07.220 --> 00:10:10.415
So if that app gets compromised or
those keys get make public by access,

194
00:10:10.415 --> 00:10:13.575
cuz who among us hasn't accidentally
pushed keys to get hub in a public repo.

195
00:10:13.575 --> 00:10:15.495
We've all done it.

196
00:10:15.495 --> 00:10:19.680
[LAUGH] This way you can at least limit
the damage and just turn off that key cuz

197
00:10:19.680 --> 00:10:22.610
it's also problematic like, let's say
your app becomes really popular and

198
00:10:22.610 --> 00:10:26.760
you have a whole bunch of micro
services because it's 2018, why not?

199
00:10:26.760 --> 00:10:30.040
And then all of a sudden you have
to go and change all of those keys.

200
00:10:30.040 --> 00:10:32.710
I mean, you should be rotating
keys relatively frequently but

201
00:10:32.710 --> 00:10:34.220
nobody wants to do it in a rush.

202
00:10:34.220 --> 00:10:37.640
Nobody wants to panic, I have to change
a thousand different keys, right?

203
00:10:37.640 --> 00:10:40.610
So this allows you to limit those things.

204
00:10:40.610 --> 00:10:41.610
So it's per app.

205
00:10:41.610 --> 00:10:45.330
So if one app gets compromised,
you can just change the keys for that app.

206
00:10:45.330 --> 00:10:50.530
Again, so think about it both in terms
of users as well as applications.

207
00:10:50.530 --> 00:10:53.544
Cool, so now, we have the users set up.

208
00:10:53.544 --> 00:10:57.350
We're gonna be using a whole bunch
more Amazon Services today, but

209
00:10:57.350 --> 00:11:02.840
this is the kind of raw material that we
can integrate from either our terminal or

210
00:11:02.840 --> 00:11:04.100
to log in with to see stuff.

211
00:11:04.100 --> 00:11:09.223
So if you're in your root account now,
what I'd like you

212
00:11:09.223 --> 00:11:15.548
to do is to sign out,
&gt;&gt; Steve Kinney: And

213
00:11:15.548 --> 00:11:17.647
sign back in with
the account you just made.

214
00:11:18.657 --> 00:11:27.829
&gt;&gt; Steve Kinney: So If I go to IM,
&gt;&gt; Steve Kinney: Wait for

215
00:11:27.829 --> 00:11:28.960
that page to load.

216
00:11:28.960 --> 00:11:31.050
You have this URL up here.

217
00:11:31.050 --> 00:11:34.350
This is a portal for
all your IM sub users.

218
00:11:34.350 --> 00:11:37.690
So now instead of going to the main
page and switching, you can say, okay,

219
00:11:37.690 --> 00:11:40.010
actually this account I
wanna be the sub user.

220
00:11:40.010 --> 00:11:43.310
It's a lot easier just to kind of
have this whether you bookmark it or

221
00:11:43.310 --> 00:11:44.550
save it somewhere.

222
00:11:44.550 --> 00:11:48.160
If this is your very first account,
it's a bunch of just random numbers,

223
00:11:48.160 --> 00:11:49.470
which is, good luck.

224
00:11:49.470 --> 00:11:52.220
I mean if you are bookmarking it,
whatever, but you can

225
00:11:52.220 --> 00:11:56.350
actually hit Customize and in this case
you can change it to a different alias.

226
00:11:56.350 --> 00:11:59.419
I like this alias,
I'm going to keep it but

227
00:11:59.419 --> 00:12:05.151
I am gonna take that,
&gt;&gt; Steve Kinney: And

228
00:12:05.151 --> 00:12:10.665
I'll go over here and you can see
this is the kind of main account and

229
00:12:10.665 --> 00:12:13.830
here is the mobile hub user I created.

230
00:12:13.830 --> 00:12:15.340
I also created that administrator account,

231
00:12:15.340 --> 00:12:18.380
either one will work, and
we'll sign in with this new sub user.

232
00:12:18.380 --> 00:12:21.050
Effectively, once you have
created the root user,

233
00:12:21.050 --> 00:12:23.690
created the sub user, lock it down
with a multi-factor authentication.

234
00:12:23.690 --> 00:12:29.460
Do all that stuff, but basically
treat it as emergency access only.

235
00:12:29.460 --> 00:12:31.970
Don't use it as your daily driver.

236
00:12:31.970 --> 00:12:32.930
All right, very cool.

237
00:12:32.930 --> 00:12:33.820
So now we're back in,

238
00:12:33.820 --> 00:12:37.270
and you can see now I'm in this
MobileHub account @ the MainAccount.

239
00:12:37.270 --> 00:12:40.710
That's normally what you wanna
be seeing in this case, cool.

