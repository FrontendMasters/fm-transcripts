WEBVTT

1
00:00:00.510 --> 00:00:03.431
&gt;&gt; Sean Larkin: Before we even
separate our configs out or

2
00:00:03.431 --> 00:00:07.270
we start doing kind of conditional,
I wanna talk about

3
00:00:07.270 --> 00:00:12.268
webpack-dev-server.
&gt;&gt; Sean Larkin: So now that we have

4
00:00:12.268 --> 00:00:17.216
this index.html file, we're actually
kind of getting into browser land.

5
00:00:17.216 --> 00:00:19.683
We could start using dom apis.

6
00:00:19.683 --> 00:00:24.443
But we need kind of a better
experience and then build statically,

7
00:00:24.443 --> 00:00:28.952
spin up a Python server or
a Node server, and then test our app.

8
00:00:28.952 --> 00:00:32.800
That's viable, but
we can do better than that, right?

9
00:00:32.800 --> 00:00:34.467
This is JavaScript.

10
00:00:34.467 --> 00:00:35.771
This is JavaScript, you all.

11
00:00:35.771 --> 00:00:39.865
And so,
&gt;&gt; Sean Larkin: We'll add

12
00:00:39.865 --> 00:00:42.552
the dependency just in case.

13
00:00:42.552 --> 00:00:45.976
And so, those who didn't have a cache,
it'll be cached.

14
00:00:45.976 --> 00:00:51.036
But so, you're gonna npm
install wepback-dev-server,

15
00:00:51.036 --> 00:00:54.020
and then --save dev or capital D.

16
00:00:54.020 --> 00:00:58.955
For yarn users, it's just --dev,
&gt;&gt; Sean Larkin: yarn add.

17
00:01:06.720 --> 00:01:07.884
&gt;&gt; Sean Larkin: So, you might be like,

18
00:01:07.884 --> 00:01:09.874
well, what is webpack-dev-server?

19
00:01:09.874 --> 00:01:14.660
I feel like it's kind of more
exciting to have you just try it, and

20
00:01:14.660 --> 00:01:18.239
then I'll talk about what
happens as you use it.

21
00:01:18.239 --> 00:01:21.681
So, we can just add another
one that's webpack-dev-server.

22
00:01:21.681 --> 00:01:25.430
So add another key, or
another script technically, and

23
00:01:25.430 --> 00:01:30.757
just say webpack-dev-server, and
in the same way, webpack-dev-server.

24
00:01:30.757 --> 00:01:32.514
So, now we should be
able to move that over.

25
00:01:32.514 --> 00:01:39.600
Thank you very much by the way.
&gt;&gt; Sean Larkin: And

26
00:01:39.600 --> 00:01:43.229
let's run it again.
&gt;&gt; Sean Larkin: There we go,

27
00:01:43.229 --> 00:01:49.366
okay.
&gt;&gt; Sean Larkin: So,

28
00:01:50.908 --> 00:01:51.913
&gt;&gt; Sean Larkin: We actually see at

29
00:01:51.913 --> 00:01:52.451
the top.

30
00:01:52.451 --> 00:01:57.423
Let me see, does it say it?
&gt;&gt; Sean Larkin: So it says hey,

31
00:01:57.423 --> 00:02:00.238
project is running in local host 8080.

32
00:02:00.238 --> 00:02:05.297
So we're gonna click on this,
and let's say, I mean, we just

33
00:02:05.297 --> 00:02:10.513
used a bunch of console logs, right?
&gt;&gt; Sean Larkin: Hey,

34
00:02:10.513 --> 00:02:16.565
there's that stuff we were writing, nav
top bottom, My first button, color: cyan.

35
00:02:16.565 --> 00:02:24.369
So, now, we have essentially a dev server
that we can test and validate our changes.

36
00:02:24.369 --> 00:02:28.062
So much so
that it is in watch mode, right?

37
00:02:28.062 --> 00:02:32.521
So, why is that valuable?

38
00:02:32.521 --> 00:02:36.068
I always keep them side by side,
and I know it's not that easy.

39
00:02:36.068 --> 00:02:38.198
Let's see if I can make it somewhat,

40
00:02:38.198 --> 00:02:42.412
we'll make a responsive page.
&gt;&gt; Sean Larkin: And,

41
00:02:44.402 --> 00:02:45.763
&gt;&gt; Sean Larkin: So let's say we're in

42
00:02:45.763 --> 00:02:47.633
watch mode right now, right?

43
00:02:47.633 --> 00:02:51.356
And it's like we're literally
visiting that page because

44
00:02:51.356 --> 00:02:56.281
webpack-dev-server takes the whole
contents of your disk and serves it up.

45
00:02:56.281 --> 00:02:59.841
So it's like you're on
that index.html page.

46
00:02:59.841 --> 00:03:03.843
And you're actually,
let's change some of the code.

47
00:03:03.843 --> 00:03:09.768
So I had some commented out cuz I wanted
to make, now that we're in the web,

48
00:03:09.768 --> 00:03:16.747
we can actually maybe rewrite button.js to
actually use it correctly, like a button.

49
00:03:16.747 --> 00:03:20.223
So everybody can see the dev server?

50
00:03:20.223 --> 00:03:25.910
Okay, so why don't we just make a little
bit more browser interactive code,

51
00:03:25.910 --> 00:03:29.773
so that it feels like
something we can view, right?

52
00:03:29.773 --> 00:03:32.818
So instead of just making a button,

53
00:03:32.818 --> 00:03:38.656
I have some code here,
&gt;&gt; Sean Larkin: That I commented out.

54
00:03:38.656 --> 00:03:42.986
Now so Make Button is gonna
actually create an element using

55
00:03:42.986 --> 00:03:45.157
document.createElement.

56
00:03:45.157 --> 00:03:49.468
I'm gonna set the inner text attribute
to take the label that we created, and

57
00:03:49.468 --> 00:03:51.536
then I'm gonna return that button.

58
00:03:51.536 --> 00:03:54.677
So now actually these types are valid too.

59
00:03:54.677 --> 00:03:55.194
So let's jump

60
00:03:55.194 --> 00:03:58.004
over to our index cuz we probably need
to use it a little differently, right?

61
00:03:58.004 --> 00:04:02.195
We probably can't do this and
console-log it.

62
00:04:02.195 --> 00:04:05.405
We can, but
it's gonna look a little different.

63
00:04:05.405 --> 00:04:07.836
Why don't we actually add this button?

64
00:04:07.836 --> 00:04:12.624
So const button = makeButton("Yay

65
00:04:12.624 --> 00:04:18.763
A Button").
&gt;&gt; Sean Larkin: Cool,

66
00:04:18.763 --> 00:04:25.669
and why don't we say
document.body.appendChild?

67
00:04:25.669 --> 00:04:34.445
Right, that's pretty simple.
&gt;&gt; Sean Larkin: Let me see,

68
00:04:34.445 --> 00:04:39.871
we've got some errors here,
I'm just gonna make

69
00:04:39.871 --> 00:04:44.909
sure.
&gt;&gt; Sean Larkin: Is not

70
00:04:44.909 --> 00:04:49.852
defined,
&gt;&gt; Sean Larkin: That's,

71
00:04:54.882 --> 00:04:55.677
&gt;&gt; Sean Larkin: Are you able to see

72
00:04:55.677 --> 00:05:03.082
the button for yourself?
&gt;&gt; [INAUDIBLE]

73
00:05:06.126 --> 00:05:07.478
&gt;&gt; Sean Larkin: And I know why,

74
00:05:07.478 --> 00:05:13.342
const button =
document.createElement("button").

75
00:05:13.342 --> 00:05:19.146
And look, just before our eyes,
I didn't even do anything.

76
00:05:19.146 --> 00:05:23.282
So what you might not have realized
at first, man, I should really hide,

77
00:05:23.282 --> 00:05:24.560
let's hide this one.

78
00:05:24.560 --> 00:05:28.629
Let's hide this one, let's hide this one.

79
00:05:28.629 --> 00:05:29.449
I don't really wanna preserve the log.

80
00:05:29.449 --> 00:05:34.215
I'm happy with just seeing a new
fresh instance every time,

81
00:05:34.215 --> 00:05:38.526
okay.
&gt;&gt; Sean Larkin: But

82
00:05:38.526 --> 00:05:43.205
as we've been writing the code,
even if there were errors,

83
00:05:43.205 --> 00:05:49.005
it's going to reset and refresh
the browser any time that we make changes.

84
00:05:49.005 --> 00:05:53.107
So this is one of these awesome
opportunities using the dependency graph

85
00:05:53.107 --> 00:05:56.480
is that, let me see if I can make that,
is that easy to read?

86
00:05:56.480 --> 00:05:57.613
Can I make it larger for you?

87
00:05:57.613 --> 00:05:59.429
Let's do that.

88
00:05:59.429 --> 00:06:01.370
This is button.js.

89
00:06:01.370 --> 00:06:03.013
And let me know if you want me to switch

90
00:06:03.013 --> 00:06:06.195
over.
&gt;&gt; Sean Larkin: But

91
00:06:06.195 --> 00:06:09.120
what's super cool is that
this gives you the chance.

92
00:06:09.120 --> 00:06:12.199
You couldn't have a live
development experience.

93
00:06:12.199 --> 00:06:14.208
Of course I'm on a smaller monitor, and

94
00:06:14.208 --> 00:06:17.370
usually I'd have
the resolution a lot tinier.

95
00:06:17.370 --> 00:06:19.226
So it's more manageable.

96
00:06:19.226 --> 00:06:23.050
But even two monitors or
whatever, this is awesome.

97
00:06:23.050 --> 00:06:26.520
You can literally, as you code,
get instant feedback.

98
00:06:26.520 --> 00:06:30.839
And on top of that,
&gt;&gt; Sean Larkin: The way that this is

99
00:06:30.839 --> 00:06:34.000
working, so what webpack-dev-server is,
is you kinda guessed.

100
00:06:34.000 --> 00:06:37.620
It is a web server based on Express.

101
00:06:37.620 --> 00:06:43.230
And all it's doing is webpack, instead of
creating a bundle to your dist folder,

102
00:06:43.230 --> 00:06:46.190
it actually generates a bundle in memory.

103
00:06:46.190 --> 00:06:48.806
And it serves that
information up to Express,

104
00:06:48.806 --> 00:06:52.908
which then does a web socket connection
and says, hey, I just updated.

105
00:06:52.908 --> 00:06:53.920
And then it reloads.

