WEBVTT

1
00:00:00.110 --> 00:00:03.819
&gt;&gt; Sean Larkin: Even with all these
modules like any library that you pull

2
00:00:03.819 --> 00:00:08.777
from mpm, like I said, people can just
choose whatever the heck they want.

3
00:00:08.777 --> 00:00:13.349
They can ship any module format,
it doesn't matter, there is no right or

4
00:00:13.349 --> 00:00:14.100
wrong way.

5
00:00:15.550 --> 00:00:20.592
And I'm just talking about JavaScript,

6
00:00:20.592 --> 00:00:26.505
there's other preprocessors for
CSS and HTML.

7
00:00:26.505 --> 00:00:32.930
I mean, assets and so it wouldn't even
just thinking about this in retrospect.

8
00:00:33.940 --> 00:00:38.997
We now need something that not only lets
us write modules, but we need something

9
00:00:38.997 --> 00:00:44.140
that lets us support any module format,
at least until we can get to ESM, right?

10
00:00:44.140 --> 00:00:49.920
That can handle resources and
other assets at the same time.

11
00:00:51.690 --> 00:00:58.255
And so wouldn't it be nice that,
let's talk about Webpack.

12
00:00:58.255 --> 00:01:02.880
[LAUGH] This is where
kinda Webpack was born.

13
00:01:05.770 --> 00:01:08.243
Webpack is a module bundler.

14
00:01:08.243 --> 00:01:13.220
So you might be like, Sean,
what are you talking about?

15
00:01:13.220 --> 00:01:16.696
Module bundler lets you
write any module format.

16
00:01:16.696 --> 00:01:22.992
It doesn't have to be any, but for us,
for Webpack, it's that you can require or

17
00:01:22.992 --> 00:01:28.580
use anymore module format and
it'll allow those to work in the browser.

18
00:01:29.640 --> 00:01:33.033
That's the simplest format for a bundler.

19
00:01:33.033 --> 00:01:38.064
On top of that, Webpack supports code
splitting or static async bundling,

20
00:01:38.064 --> 00:01:42.980
where you can create separately
lazy lot of bundles at build time.

21
00:01:42.980 --> 00:01:44.905
Nothing is dynamic and so then,

22
00:01:44.905 --> 00:01:49.196
that way you have all these extra
optimizations that you can leverage.

23
00:01:49.196 --> 00:01:55.000
And there's just a ridiculous,
ridiculously large ecosystem for Webpack.

24
00:01:56.580 --> 00:02:00.651
Today, it is the most performant way,
if you want to write the most

25
00:02:00.651 --> 00:02:04.661
performant application or
you want to set canonical standards.

26
00:02:04.661 --> 00:02:08.224
You need to be using Webpack today.

27
00:02:08.224 --> 00:02:11.820
It's why Microsoft chooses it for

28
00:02:11.820 --> 00:02:16.589
all of it's top 1,000 Alexa websites.

29
00:02:16.589 --> 00:02:21.590
It allows us to be incredibly flexible,
and

30
00:02:21.590 --> 00:02:24.570
do any sort of custom workflow and
makes it possible.

31
00:02:25.800 --> 00:02:30.620
And so, I also want to jump into a quick
story which I think is super valuable.

32
00:02:30.620 --> 00:02:34.540
So how did Webpack get created?

33
00:02:34.540 --> 00:02:38.599
I'm just gonna pull again
a [INAUDIBLE] for Webpack.

34
00:02:38.599 --> 00:02:43.331
So github.com/webpac/webpac and
what some people don't realize and

35
00:02:43.331 --> 00:02:45.780
I didn't even realize this at first.

36
00:02:47.290 --> 00:02:53.372
So the story is in 2012,
a gentleman in Newberg,

37
00:02:53.372 --> 00:03:00.550
Germany name Tobias Koppers had
to do a thesis for his masters.

38
00:03:00.550 --> 00:03:03.962
And he had worked his full
time C# developer and

39
00:03:03.962 --> 00:03:08.738
he had worked with Google Web Toolkit for
some time, which had this

40
00:03:08.738 --> 00:03:14.810
feature called code splitting, and
I'm gonna talk about it in day two.

41
00:03:14.810 --> 00:03:20.296
But there is this,
he had never written a web application.

42
00:03:20.296 --> 00:03:25.770
And he was tasked with for
his thesis to write a web app,

43
00:03:25.770 --> 00:03:30.900
and so he wanted to find
a library that he could use.

44
00:03:31.960 --> 00:03:35.576
And so he went,
he found this modules.webmake,

45
00:03:35.576 --> 00:03:40.226
[LAUGH] and so modules.webmake
is also a bundler, that I think,

46
00:03:40.226 --> 00:03:45.327
it doesn't predate browser five,
but it came slightly afterwards.

47
00:03:45.327 --> 00:03:47.370
Let me pull, go down the bottom again.

48
00:03:47.370 --> 00:03:52.161
There's, well essentially, Tobias wanted
to have this opportunity to provide code

49
00:03:52.161 --> 00:03:56.099
splitting before Bundler, and so
he opened an issue on this project and

50
00:03:56.099 --> 00:03:59.789
said hey
&gt;&gt; Sean Larkin: [LAUGH] Hey,

51
00:03:59.789 --> 00:04:03.903
there's this really neat
feature called code splitting.

52
00:04:03.903 --> 00:04:06.690
Hey, you can totally do this.

53
00:04:07.980 --> 00:04:09.436
It's totally possible.

54
00:04:09.436 --> 00:04:10.800
This would be how you do it.

55
00:04:10.800 --> 00:04:14.895
He proposed this issue, people are like,
hey, that's a great idea, back in the day.

56
00:04:14.895 --> 00:04:19.674
And Medicue is like,
it's probably nothing we can add.

57
00:04:19.674 --> 00:04:24.270
And then Tobias was totally like,
okay, you could totally do this.

58
00:04:24.270 --> 00:04:28.766
And then, just kind of, I would say argue,
they just discussed back and

59
00:04:28.766 --> 00:04:32.230
forth, so he's like, okay,
I just implemented it but

60
00:04:32.230 --> 00:04:37.346
I had to rewrite some stuff from scratch
and mind you this is 2012, 2012.

61
00:04:37.346 --> 00:04:43.920
And then you see, okay,
I moved this to webpack/webpack.

62
00:04:43.920 --> 00:04:47.860
So Tobias is the original
author of Webpack, and

63
00:04:47.860 --> 00:04:52.856
essentially it was born as a fork
of modules webmake to add code

64
00:04:52.856 --> 00:04:58.067
splitting as a commit number one,
commit number zero feature.

65
00:04:58.067 --> 00:05:03.016
And so, Tobias has never worked
on a web application in its

66
00:05:03.016 --> 00:05:06.860
entire life which I will
think is kinda cool.

67
00:05:06.860 --> 00:05:09.837
But it is insane too, he's so smart.

68
00:05:09.837 --> 00:05:13.186
But yes, he has done a little pet but

69
00:05:13.186 --> 00:05:19.500
he's never worked on web apps
which I find so fascinating.

70
00:05:19.500 --> 00:05:22.362
But yes,
this is how Webpack was born in 2012.

71
00:05:22.362 --> 00:05:26.204
And it wasn't until 2015, hen Pete Hunt,

72
00:05:26.204 --> 00:05:30.538
does anybody know who Pete Hunt is or
there is a video.

73
00:05:30.538 --> 00:05:34.768
If you just search
Oz Con West 2015 Pete Hunt,

74
00:05:34.768 --> 00:05:41.028
you'll find a video where Pete Hunt
was working at Instagram at the time.

75
00:05:41.028 --> 00:05:44.472
And introduces to
the world how they choose

76
00:05:44.472 --> 00:05:48.594
to bundle their react
applications with Webpack.

77
00:05:48.594 --> 00:05:52.710
And from there Webpack explodes.

78
00:05:52.710 --> 00:05:55.970
It was at a huge conference,
it was basically,

79
00:05:55.970 --> 00:06:01.037
used by Facebook even though it's
not Facebook core, it's Instagram.

80
00:06:01.037 --> 00:06:07.460
And nobody knew who's this random
German guy working on this project.

81
00:06:07.460 --> 00:06:08.994
And really at this time,

82
00:06:08.994 --> 00:06:13.388
Tobias was really only spending about
five hours a week on the project.

83
00:06:13.388 --> 00:06:17.022
But then, Dan Abramov is, probably?

84
00:06:17.022 --> 00:06:20.920
[LAUGH] Dan, he's a good guy.

85
00:06:20.920 --> 00:06:27.175
Dan came around at a react conf,
and basically wanted to know,

86
00:06:27.175 --> 00:06:30.726
so Dan was researching, so stack.

87
00:06:30.726 --> 00:06:38.281
You can just search, stack overflow
Dan Abramov, this is the best.

88
00:06:38.281 --> 00:06:42.614
Hot module replacement.

89
00:06:42.614 --> 00:06:48.010
So then in two years later,
Dan Abramov posts like how cool is that?

90
00:06:48.010 --> 00:06:51.687
You look at where people
started from till today.

91
00:06:51.687 --> 00:06:55.568
He basically, what the heck is this hot
module replacement that was in Webpack.

92
00:06:55.568 --> 00:06:59.560
It was kinda an out of th feature and
he's like, I don't know what this is.

93
00:06:59.560 --> 00:07:00.693
Nobody knows what this is.

94
00:07:00.693 --> 00:07:03.468
The Webpack1 docks were awful.

95
00:07:03.468 --> 00:07:08.642
And so, Tobias jumps on and
describes it from a very complex.

96
00:07:08.642 --> 00:07:10.500
He gives the whole.

97
00:07:10.500 --> 00:07:12.895
It was a great answer!
I mean look, the thing's got like,

98
00:07:12.895 --> 00:07:17.270
that's probably all of Tobias's points
on Stack Overflow is from this question.

99
00:07:17.270 --> 00:07:21.329
But he talked about how it works and
what makes it so cool.

100
00:07:21.329 --> 00:07:24.135
You can live reload without
ever refreshing the browser.

101
00:07:24.135 --> 00:07:29.797
[LAUGH]
I love it!

102
00:07:29.797 --> 00:07:34.197
This is some of my favorite parts
about how Webpack has grown.

103
00:07:34.197 --> 00:07:40.870
So Dan took this information and
this is what created redux.

104
00:07:40.870 --> 00:07:43.696
This is what created react top loader.

105
00:07:43.696 --> 00:07:49.002
This moment right here, and so,
when Dan showcased this to the world at,

106
00:07:49.002 --> 00:07:54.652
what was it, React Con or
React Rally 2015 or 2014, Webpack exploded

107
00:07:54.652 --> 00:08:00.860
in an insane proportion, and basically
got adopted by the React ecosystem.

108
00:08:00.860 --> 00:08:05.458
Even though Facebook still today
doesn't use it themselves,

109
00:08:05.458 --> 00:08:11.024
this is where Webpack's popularity
came from, two talks at conferences.

110
00:08:11.024 --> 00:08:14.960
And of course things kinda
changed once I started joining.

111
00:08:14.960 --> 00:08:19.541
I got the angular ecosystem involved and
then other people started realizing, wait,

112
00:08:19.541 --> 00:08:22.490
maybe we should build our
framework on top of Webpack.

113
00:08:22.490 --> 00:08:28.058
So view JS came around, and
took all of China by storm.

114
00:08:28.058 --> 00:08:31.040
But, so I could go on and
on about that forever.

115
00:08:31.040 --> 00:08:34.479
It's a really interesting
little thing to think about.

116
00:08:34.479 --> 00:08:39.117
Webpack was actually been around,
some people complain, there's so

117
00:08:39.117 --> 00:08:42.490
much churn in JavaScript, I'm like.

118
00:08:42.490 --> 00:08:44.011
We've been around for five years.

119
00:08:44.011 --> 00:08:46.605
It's been around in the ecosystem for
five years.

120
00:08:46.605 --> 00:08:48.430
14 million downloads a month today.

