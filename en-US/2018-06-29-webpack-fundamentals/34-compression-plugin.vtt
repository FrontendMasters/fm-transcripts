WEBVTT

1
00:00:00.030 --> 00:00:03.690
&gt;&gt; Sean Larkin: In the same way, we can
literally just add a specific plugin.

2
00:00:03.690 --> 00:00:06.290
So we have a plugin called I'm just

3
00:00:06.290 --> 00:00:09.680
gonna make sure we have the order
right on the name, I always mix it up.

4
00:00:09.680 --> 00:00:14.967
So it's under web pack contrib also,
so web pack contrib flash

5
00:00:14.967 --> 00:00:22.403
web compression web pack plugin
&gt;&gt; Sean Larkin: Yes,

6
00:00:22.403 --> 00:00:25.380
I love it when I get it right.

7
00:00:25.380 --> 00:00:27.045
Let's just look at
the options first before

8
00:00:27.045 --> 00:00:30.789
we,
&gt;&gt; Sean Larkin: Except,

9
00:00:30.789 --> 00:00:32.240
let's just go to the main repo.

10
00:00:33.840 --> 00:00:35.310
So really, it's pretty simple,

11
00:00:35.310 --> 00:00:40.390
it takes any of your assets that you
wanna include, and it compresses them.

12
00:00:40.390 --> 00:00:43.180
So gzip is the default.

13
00:00:43.180 --> 00:00:48.550
If you wanna add Python as a dependency
you can use outfly or something different.

14
00:00:48.550 --> 00:00:52.283
I even think it now supports brotli.

15
00:00:52.283 --> 00:00:55.160
So I think that that's really neat.

16
00:00:55.160 --> 00:00:59.190
But to install it's really simple,
MPMI, decompress your web pack plug in.

17
00:01:00.900 --> 00:01:01.793
So, we can do so.

18
00:01:06.466 --> 00:01:09.718
&gt;&gt; Sean Larkin: I think this is
fine to be in both branches.

19
00:01:09.718 --> 00:01:12.590
So yarn add compression webpack plugin.

20
00:01:18.969 --> 00:01:21.972
&gt;&gt; Sean Larkin: And in the same
way that we just did with analyze,

21
00:01:21.972 --> 00:01:23.444
we can require this in.

22
00:01:23.444 --> 00:01:24.042
So,

23
00:01:38.684 --> 00:01:40.010
&gt;&gt; Sean Larkin: New Compression.

24
00:01:42.606 --> 00:01:45.890
&gt;&gt; Sean Larkin: All right, so
let's run it and see what happens.

25
00:01:45.890 --> 00:01:47.737
yarn prod compress.

26
00:01:52.020 --> 00:01:52.520
&gt;&gt; Sean Larkin: Awesome.

27
00:01:53.800 --> 00:01:54.830
Let's take it a step further.

28
00:01:54.830 --> 00:01:56.230
This is what I think is great.

29
00:01:56.230 --> 00:02:04.576
What if we did env.presets here and
said Analyze.

30
00:02:09.306 --> 00:02:10.810
&gt;&gt; Sean Larkin: So now, you can get both.

31
00:02:10.810 --> 00:02:16.170
You could freely swap in and
out whatever you wanted to.

32
00:02:16.170 --> 00:02:19.590
If you wanted to be like,
if you really take performance seriously.

33
00:02:19.590 --> 00:02:24.620
I've seen this method and
I wanna create a service around this.

34
00:02:24.620 --> 00:02:29.080
But allows you to have an AV
testing environment for different

35
00:02:31.010 --> 00:02:35.300
types of methodology, different ways
of bundling your application, and

36
00:02:35.300 --> 00:02:38.460
switching on these different
presets in combination.

37
00:02:38.460 --> 00:02:42.830
By now you can see all these are super
tiny, we're getting really small.

38
00:02:42.830 --> 00:02:46.315
And I think even would give us
the GZIP if where's that bar,

39
00:02:46.315 --> 00:02:51.570
I always miss it on here,
&gt;&gt; Sean Larkin: Where is it?

40
00:02:51.570 --> 00:02:53.500
Yeah, but it has the GZIP size and
everything.

41
00:02:55.840 --> 00:02:58.627
Or if we looked in our terminal
feedback we can actually see the,

42
00:02:58.627 --> 00:03:01.860
like bundle was the only
thing that got G-zipped.

43
00:03:01.860 --> 00:03:06.560
Because it's up to a certain threshold
where it's even efficient to compress.

44
00:03:08.900 --> 00:03:11.290
And then it just handles it for you.

45
00:03:11.290 --> 00:03:13.330
You can upload that to whatever server.

46
00:03:13.330 --> 00:03:15.670
Web Pack Dev Server handles
that through Express.

47
00:03:18.370 --> 00:03:22.140
Are there any questions so
far about these plugins?

48
00:03:22.140 --> 00:03:25.110
Now, each of these have
individual options.

49
00:03:25.110 --> 00:03:29.130
It really just depends on
what your environment is.

50
00:03:29.130 --> 00:03:32.085
Let's say the Outlook team, so

51
00:03:32.085 --> 00:03:37.464
webpack bundle analyzer
&gt;&gt; Sean Larkin: The Outlook

52
00:03:37.464 --> 00:03:42.074
web app team at Microsoft,
what they do, I think it's really cool.

53
00:03:42.074 --> 00:03:48.749
Is that you can take, if you set
the analyzer mode property to static,

54
00:03:48.749 --> 00:03:55.098
what this does is it generates all
the static assets to visualize.

55
00:03:55.098 --> 00:03:57.982
And then they actually serve
it up on a separate port for

56
00:03:57.982 --> 00:04:00.006
every production build that they do.

57
00:04:00.006 --> 00:04:05.090
So, at any time they notice
we've regressed in performance.

58
00:04:05.090 --> 00:04:08.640
For any build they can
just go to like colon,

59
00:04:08.640 --> 00:04:13.510
whatever port forward slash analyze,
and it's there for that build.

60
00:04:13.510 --> 00:04:17.690
And so, they just redeploy it every
time as a part of their build.

61
00:04:17.690 --> 00:04:22.685
I think that's super cool
like cuz then you can really

62
00:04:22.685 --> 00:04:27.569
it's kind of a pain sometimes
if you're trying to,

63
00:04:27.569 --> 00:04:32.904
if somebody's like well why is there so
much bloat here?

64
00:04:32.904 --> 00:04:36.730
If you think about the dev workflow
without something like a preset system,

65
00:04:36.730 --> 00:04:39.253
it's like okay can you
just spin this up locally?

66
00:04:39.253 --> 00:04:43.815
And they're like, okay, hold on let me
grab my environment production build,

67
00:04:43.815 --> 00:04:47.290
also add the bundle analyzer,
they might not have by default.

68
00:04:47.290 --> 00:04:50.170
So I really like the fact that
it's just served up alongside

69
00:04:50.170 --> 00:04:52.880
in a separate domain or
a separate port URL.

70
00:04:54.570 --> 00:04:59.530
You can have it auto open the analyzer,
which it's been doing.

71
00:04:59.530 --> 00:05:04.550
You could even generate the stats file
aside from it, change your log levels,

72
00:05:04.550 --> 00:05:06.410
all sorts of stuff.

73
00:05:06.410 --> 00:05:11.356
The maintainer here who originally
authored this just did an incredible job.

74
00:05:11.356 --> 00:05:15.979
And now we're fortunate enough for
him to be able to allow us to have it

75
00:05:15.979 --> 00:05:20.750
under our organization and
he helps contribute to it still.

76
00:05:20.750 --> 00:05:25.365
As you can see it's in alpha
right now with some new features.

