WEBVTT

1
00:00:00.050 --> 00:00:00.760
&gt;&gt; Sean Larkin: But okay.

2
00:00:00.760 --> 00:00:04.930
So why don't we actually bundle
this code again in production

3
00:00:04.930 --> 00:00:07.570
really quick before we take a break?

4
00:00:07.570 --> 00:00:11.667
And,
&gt;&gt; Sean Larkin: So build it for

5
00:00:11.667 --> 00:00:12.930
production.

6
00:00:12.930 --> 00:00:16.140
We'll add a web pack config and
set the mode to none and

7
00:00:16.140 --> 00:00:18.160
we can understand how the runtime works.

8
00:00:18.160 --> 00:00:24.390
But let's just do mpm run prod
&gt;&gt; Sean Larkin: Let's see what happens.

9
00:00:24.390 --> 00:00:24.890
Okay.

10
00:00:26.310 --> 00:00:29.460
So, of course,
it's a small amount of code, I mean,

11
00:00:29.460 --> 00:00:33.850
probably the output is still a little bit
larger than what we've actually written.

12
00:00:33.850 --> 00:00:36.990
But, I want you to search for
the strings red and blue.

13
00:00:45.706 --> 00:00:46.612
&gt;&gt; Sean Larkin: Do you see the red or

14
00:00:46.612 --> 00:00:47.700
blue string in there?

15
00:00:49.470 --> 00:00:50.490
No, you don't.

16
00:00:51.860 --> 00:00:56.030
This is what is called dead code
elimination or tree shaking.

17
00:00:56.030 --> 00:00:59.140
It's the fact that Webpack is using

18
00:00:59.140 --> 00:01:02.860
statically the syntax to
identify what am I using?

19
00:01:02.860 --> 00:01:07.180
Think about this impact
in terms of lodash.

20
00:01:07.180 --> 00:01:09.210
If you're using only one lodash function,

21
00:01:09.210 --> 00:01:12.130
you should only be bundling one function,
right?

22
00:01:13.760 --> 00:01:14.890
That's super important.

23
00:01:18.420 --> 00:01:23.590
So let's actually take a look and
understand how this is working.

24
00:01:23.590 --> 00:01:25.110
We get what it's doing,

25
00:01:25.110 --> 00:01:29.830
but I think it's really valuable
to actually break this down.

26
00:01:29.830 --> 00:01:32.285
So for the first time, well,
here, I'm gonna actually stop.

27
00:01:32.285 --> 00:01:34.170
I'm gonna save a new branch.

28
00:01:34.170 --> 00:01:37.810
Cuz I think I deviated just a little
bit from what the branching is.

29
00:01:37.810 --> 00:01:41.545
So I'm just gonna do
a new branch checkout.

30
00:01:41.545 --> 00:01:45.939
So, git checkout -b

31
00:01:45.939 --> 00:01:55.008
feature/031-all-module-types.

32
00:01:55.008 --> 00:01:56.580
And we'll check that out.

33
00:01:57.920 --> 00:02:04.768
Get add all, get command, let's see.

34
00:02:04.768 --> 00:02:06.680
Cool.

35
00:02:06.680 --> 00:02:09.100
M, 031 all module types.

36
00:02:09.100 --> 00:02:10.660
Yay!

37
00:02:10.660 --> 00:02:14.965
So now if you are lost or you guys
felt like you are missing a point,

38
00:02:14.965 --> 00:02:20.830
at any time you can just go ahead and jump
into this branch 03 run all module types.

39
00:02:20.830 --> 00:02:26.030
Okay, so why don't we go ahead and
add our first web pack configuration?

40
00:02:26.030 --> 00:02:27.480
And don't worry.

41
00:02:27.480 --> 00:02:29.740
But like when you think
about it out of the box.

42
00:02:29.740 --> 00:02:32.490
If like all you're trying to
do is just build JavaScript.

43
00:02:32.490 --> 00:02:33.250
Like let's say you don't wanna handle CSS.

44
00:02:33.250 --> 00:02:35.800
You don't wanna handle html.

45
00:02:35.800 --> 00:02:38.070
This is the only tool you need.

46
00:02:38.070 --> 00:02:41.170
Cuz literally as long as
you are writing modules,

47
00:02:42.400 --> 00:02:46.560
you can have,
that can be web pack's core purpose.

48
00:02:46.560 --> 00:02:50.360
That is its purpose as
a core library itself.

49
00:02:50.360 --> 00:02:53.810
Now of course we have all these other
things and the ecosystem enriches it and

50
00:02:53.810 --> 00:02:54.850
makes it.

51
00:02:54.850 --> 00:02:56.260
Cuz you might ask the question.

52
00:02:57.500 --> 00:03:00.870
I wish I could also have incremental
recompiling on my styles and

53
00:03:00.870 --> 00:03:03.860
why can't it be tied to
modules if those change.

54
00:03:03.860 --> 00:03:05.680
There are dependencies.

55
00:03:05.680 --> 00:03:09.378
And so that's kind of where
loaders were born, but

56
00:03:09.378 --> 00:03:12.140
let's add a web pack configuration.

57
00:03:13.170 --> 00:03:16.944
And so by default, web pack, when it runs,

58
00:03:16.944 --> 00:03:22.248
all it's doing since it's node,
it just doesn't require,

59
00:03:22.248 --> 00:03:26.650
relative to the local
path webpack.config.js.

60
00:03:26.650 --> 00:03:31.140
That's all it's doing, it's just requiring
this file or it attempts to try to.

61
00:03:32.670 --> 00:03:33.990
So go ahead and create that.

62
00:03:35.300 --> 00:03:42.140
And what we can do now is, we're gonna
create a object that is default exported.

63
00:03:43.480 --> 00:03:47.790
So maybe now that you hear that you're
like, I get that okay, modular exports

64
00:03:47.790 --> 00:03:52.780
equals an object, okay?

65
00:03:52.780 --> 00:03:53.370
Half way there, half way there.

66
00:03:53.370 --> 00:03:57.100
Okay, so of course does this
break anything if I run Webpack?

67
00:03:57.100 --> 00:03:57.790
Like I don't know.

68
00:03:57.790 --> 00:04:03.050
Nope, because web pack applies its
defaults after it requires the config.

69
00:04:05.300 --> 00:04:09.940
So all this does is allow you to
override any of the default behavior.

70
00:04:09.940 --> 00:04:13.200
So in this case we wanna add mode,
and set it to none.

71
00:04:13.200 --> 00:04:13.990
That's all we're doing.

72
00:04:13.990 --> 00:04:17.340
We just wanna explore the outputting code.

73
00:04:17.340 --> 00:04:20.870
And so this will just say, webpack,
bundle it but don't wrap it in evals.

74
00:04:20.870 --> 00:04:22.750
Don't do anything crazy.

75
00:04:22.750 --> 00:04:24.520
Just do what the default behavior is.

76
00:04:25.710 --> 00:04:32.400
And so now if we run, let's see, yarn,
I bet, let's go back to, let's go back.

77
00:04:32.400 --> 00:04:33.920
So we have just webpack webpack.

78
00:04:33.920 --> 00:04:36.020
We should just run it without
passing any args to it.

79
00:04:37.760 --> 00:04:39.370
So let's just say mpm and webpack.

80
00:04:42.240 --> 00:04:45.160
Okay, cool, it still builds,
does everything I expect

