WEBVTT

1
00:00:00.000 --> 00:00:02.559
Let's start with goal 1.

2
00:00:02.559 --> 00:00:04.763
Display content.

3
00:00:04.763 --> 00:00:09.051
So I don't know if any of you have
been an ever watched charge at the or

4
00:00:09.051 --> 00:00:13.613
any of these sort of talks the people do
diagramming through their code running.

5
00:00:13.613 --> 00:00:18.265
The output of saving or running code
in JavaScript already most programming

6
00:00:18.265 --> 00:00:23.508
languages is actually is saving data in a
computer, under the hood you can't see it.

7
00:00:23.508 --> 00:00:31.127
When you do let lights equal seven, and
determined for to get to seven likes.

8
00:00:31.127 --> 00:00:36.182
When you save likes as seven, we draw it
when we whiteboard, if we ever do that.

9
00:00:36.182 --> 00:00:40.593
We draw it on the blackboard visually,
but it ain't visual.

10
00:00:40.593 --> 00:00:44.618
It's output is very much
definitely not visual.

11
00:00:44.618 --> 00:00:46.560
It's output inside the computer.

12
00:00:46.560 --> 00:00:47.428
You know what?

13
00:00:47.428 --> 00:00:51.407
With user interface engineering,
the output is visual.

14
00:00:51.407 --> 00:00:53.689
It's pixels on a screen.

15
00:00:53.689 --> 00:00:56.081
And pixels on the screen,
there's a lot of them.

16
00:00:56.081 --> 00:01:00.536
In that little window there with what's
on your mind, maybe there's like,

17
00:01:00.536 --> 00:01:01.436
I don't know.

18
00:01:01.436 --> 00:01:03.109
Yeah, I should have looked that up before.

19
00:01:03.109 --> 00:01:06.659
I mean 2,000,000 pixels
to like 8 million pixels,

20
00:01:06.659 --> 00:01:10.354
every single one of those is a little
dot that we need to code for.

21
00:01:10.354 --> 00:01:13.654
If the output of writing
JavaScript is saving data,

22
00:01:13.654 --> 00:01:18.304
that's actually literally in
the computer saving, switching zeros and

23
00:01:18.304 --> 00:01:21.318
ones, transistors on and
off in the computer.

24
00:01:21.318 --> 00:01:25.978
But there's no visual output for that.

25
00:01:25.978 --> 00:01:27.578
Even though we draw it, so there is.

26
00:01:27.578 --> 00:01:29.357
There's no visual output for that.

27
00:01:29.357 --> 00:01:32.397
Whereas with user interface,
it's visual output.

28
00:01:32.397 --> 00:01:34.418
It's actually pixels on a screen.

29
00:01:34.418 --> 00:01:35.398
So my goodness,

30
00:01:35.398 --> 00:01:40.088
we've got to actually write content to
define exactly where those pixels are.

31
00:01:40.088 --> 00:01:44.353
So we've got two days to
do just this screen here.

32
00:01:44.353 --> 00:01:46.672
So let's get started pixel by pixel.

33
00:01:48.193 --> 00:01:49.239
This is not a joke.

34
00:01:49.239 --> 00:01:49.840
[LAUGH].

35
00:01:49.840 --> 00:01:51.081
Maybe it's a joke.

36
00:01:51.081 --> 00:01:54.248
We're gonna have to start with
just the top right hand corner,

37
00:01:54.248 --> 00:01:57.070
because we've got a lot of
pixels to write here people.

38
00:01:57.070 --> 00:02:03.319
So we'll start with just
this first one here.

39
00:02:03.319 --> 00:02:07.415
We're gonna write some code to
display that first pixel here.

40
00:02:07.415 --> 00:02:11.473
This is not a joke maybe it is.

41
00:02:11.473 --> 00:02:16.484
It is about 100 pixels across you know
from the edge of the page roughly and

42
00:02:16.484 --> 00:02:18.850
maybe it's like 900 pixels up.

43
00:02:18.850 --> 00:02:23.012
So maybe my code will be something like I
guess I can right pixel hopefully I can

44
00:02:23.012 --> 00:02:23.535
do that.

45
00:02:23.535 --> 00:02:25.785
And then I can write 100.

46
00:02:25.785 --> 00:02:27.593
Let's say x sort of across.

47
00:02:27.593 --> 00:02:29.559
It's like x coordinates.

48
00:02:29.559 --> 00:02:32.716
And then 900.

49
00:02:32.716 --> 00:02:36.258
Maybe x 100 I don't know we can
make this up as we go, right?

50
00:02:36.258 --> 00:02:39.599
Maybe y 900.

51
00:02:39.599 --> 00:02:41.245
Actually, to be fair,
I could even do this like that.

52
00:02:41.245 --> 00:02:42.714
I can have my code live wherever I want.

53
00:02:42.714 --> 00:02:45.106
I'm the syntax designer of this and
I'd made it like that.

54
00:02:45.106 --> 00:02:46.128
&gt;&gt; [LAUGH]
&gt;&gt; Happy with that.

55
00:02:46.128 --> 00:02:47.847
&gt;&gt; [LAUGH]
&gt;&gt; Look at that beautiful.

56
00:02:47.847 --> 00:02:51.236
And that's my first pixel, done.

57
00:02:51.236 --> 00:02:57.969
Okay, settle in people because
we've got a lot of pixels to draw.

58
00:02:57.969 --> 00:02:59.883
Who would like to draw their next one?

59
00:02:59.883 --> 00:03:02.796
I think we'll have Justice.

60
00:03:02.796 --> 00:03:08.032
Justice take a guess, just intuit for
me, what might my next line of code be,

61
00:03:08.032 --> 00:03:12.946
to draw my next Pixel in this W that's
gonna make up what's on your mind on

62
00:03:12.946 --> 00:03:17.003
this page that we've gotta
somehow display this content.

63
00:03:17.003 --> 00:03:19.841
Someone's gonna do it Justice?

64
00:03:19.841 --> 00:03:24.154
&gt;&gt; Probably a pixel
that's maybe 101 pixels.

65
00:03:24.154 --> 00:03:25.112
&gt;&gt; Brilliant.

66
00:03:25.112 --> 00:03:27.922
Yes exactly 101.

67
00:03:27.922 --> 00:03:30.023
I don't know why my syntax is like this.

68
00:03:30.023 --> 00:03:33.059
And then maybe 900 and no, 800 and.

69
00:03:33.059 --> 00:03:34.464
What do you think?

70
00:03:34.464 --> 00:03:36.025
[INAUDIBLE]
&gt;&gt; By the way,

71
00:03:36.025 --> 00:03:38.151
I hope this becomes a montage
in the recorded version.

72
00:03:38.151 --> 00:03:39.437
[LAUGH].

73
00:03:39.437 --> 00:03:42.459
So that no one has to
actually sit through this.

74
00:03:42.459 --> 00:03:43.545
John, you're back up.

75
00:03:43.545 --> 00:03:45.623
John, what might be our next pixel?

76
00:03:45.623 --> 00:03:48.453
&gt;&gt; Pixel?

77
00:03:48.453 --> 00:03:50.722
&gt;&gt; I'm gonna write it because
I want us all to suffer here.

78
00:03:50.722 --> 00:03:53.408
&gt;&gt; [LAUGH] Yeah, x is 102.

79
00:03:53.408 --> 00:03:54.277
&gt;&gt; Yes.

80
00:03:54.277 --> 00:03:56.229
&gt;&gt; And y is 898.

81
00:03:56.229 --> 00:03:58.793
&gt;&gt; Beautiful, and look at my
weird syntax I invented for this.

82
00:03:58.793 --> 00:04:01.407
It was very strange, okay.

83
00:04:01.407 --> 00:04:04.678
Beautiful, next one, A toy,
it's gonna be a montage.

84
00:04:04.678 --> 00:04:06.732
[LAUGH].

85
00:04:06.732 --> 00:04:07.538
Okay, all right.

86
00:04:07.538 --> 00:04:10.972
Obviously we are not gonna keep going,
there must be a better way.

87
00:04:10.972 --> 00:04:13.302
In programming with data,
with JavaScript or

88
00:04:13.302 --> 00:04:17.259
any other program language Python
whatever, where our output is saved data.

89
00:04:17.259 --> 00:04:19.760
In this case, our output is pixels
on the display, on the screen.

90
00:04:19.760 --> 00:04:22.489
In most programming I was
able to save data right and

91
00:04:22.489 --> 00:04:26.053
then we can change that data so
the output then is the data changed.

92
00:04:26.053 --> 00:04:29.871
I know it sounds funny to think but that's
the core feature of a programming language

93
00:04:29.871 --> 00:04:31.504
is changing state in the computer.

94
00:04:31.504 --> 00:04:35.720
Changing data by adding numbers to it
taking numbers away adding elements

95
00:04:35.720 --> 00:04:36.609
removed yeah.

96
00:04:36.609 --> 00:04:38.598
Whereas that, we have shorthands.

97
00:04:38.598 --> 00:04:43.451
We do not have to allocate
the exact position in memory,

98
00:04:43.451 --> 00:04:50.591
its exact address in whatever sort of ones
and zeros in the computer's hardware.

99
00:04:50.591 --> 00:04:52.505
We do not have to write
the code to allocate that,

100
00:04:52.505 --> 00:04:53.870
someone else has done that for us.

101
00:04:53.870 --> 00:04:56.845
There are keywords like let
that say please now go and

102
00:04:56.845 --> 00:05:00.832
find the next position in memory that
we can use you do the work of that,

103
00:05:00.832 --> 00:05:04.777
and then save the value that we're
assigning here in that position.

104
00:05:04.777 --> 00:05:07.190
And don't even worry about
dealing with addresses.

105
00:05:07.190 --> 00:05:10.501
This label is English language label,
whatever we call it likes

106
00:05:10.501 --> 00:05:13.320
is going to refer to that
position from now on because,

107
00:05:13.320 --> 00:05:15.306
you use the keyword let right before.

108
00:05:15.306 --> 00:05:17.034
Okay, that's wonderful.

109
00:05:17.034 --> 00:05:21.553
Whatever goes even high level,
you have functions like sum that take, and

110
00:05:21.553 --> 00:05:25.368
listen numbers one, two and
three and call them function sum.

111
00:05:25.368 --> 00:05:29.058
And now we are able to add
those numbers together.

112
00:05:29.058 --> 00:05:32.961
But by the way, let's think about
that which great languages have all

113
00:05:32.961 --> 00:05:35.486
the languages have functional sum, right?

114
00:05:35.486 --> 00:05:40.013
Any modern language would have
a built in function, sum.

115
00:05:40.013 --> 00:05:45.242
Any, all of them, especially JavaScript,
unfortunately not.

116
00:05:45.242 --> 00:05:46.452
But most do.

117
00:05:46.452 --> 00:05:48.197
We have much more useful Reduce.

118
00:05:48.197 --> 00:05:53.120
&gt;&gt; [LAUGH]
&gt;&gt; Which we all love, and can do some for

119
00:05:53.120 --> 00:05:56.931
us in a way that's almost unreadable.

120
00:05:56.931 --> 00:05:58.277
All right, good.

121
00:05:58.277 --> 00:06:01.100
So we must hopefully have
something similar here.

122
00:06:01.100 --> 00:06:04.076
Well, people have designed these
program actually won't invent it.

123
00:06:04.076 --> 00:06:08.181
Well, they literally met they were derived
from the sky they were invented and

124
00:06:08.181 --> 00:06:08.813
designed.

125
00:06:08.813 --> 00:06:15.598
So given that what would be if I
if my output of this is this text?

126
00:06:15.598 --> 00:06:17.813
What's on your mind?

127
00:06:17.813 --> 00:06:22.506
If that's my output what will be the most
intuitive and look programming languages

128
00:06:22.506 --> 00:06:26.203
is one intuition they will flexibility but
they want intuition.

129
00:06:26.203 --> 00:06:28.866
What be the most intuitive
way I could write code?

130
00:06:28.866 --> 00:06:30.910
It please cannot be this.

131
00:06:30.910 --> 00:06:38.595
This was untenable thing my favorite
word to use in talks untenable.

132
00:06:38.595 --> 00:06:41.067
What would be a much more tenable?

133
00:06:41.067 --> 00:06:42.953
I know that's a phrase that
may not even be real word.

134
00:06:42.953 --> 00:06:47.277
What would be a much more tenable,
way of producing

135
00:06:47.277 --> 00:06:52.017
the output of what's on your
mind that text on the page.

136
00:06:52.017 --> 00:06:56.535
I'm going to pull what would be the most
intuitive way of having the text

137
00:06:56.535 --> 00:06:57.981
what's on your mind?

138
00:06:57.981 --> 00:07:02.909
What would be my Code say I have my code
here that's going to produce the text

139
00:07:02.909 --> 00:07:04.407
what's on your mind?

140
00:07:06.863 --> 00:07:10.065
&gt;&gt; Knowing HTML I would either
use a paragraph or label.

141
00:07:10.065 --> 00:07:12.419
&gt;&gt; All this is too much
information already.

142
00:07:12.419 --> 00:07:14.814
Or we might absolutely what
do I add to it most minimal?

143
00:07:14.814 --> 00:07:16.685
&gt;&gt; If I want you to show
what's on your mind,

144
00:07:16.685 --> 00:07:18.667
I might write the text
what's on your mind?

145
00:07:18.667 --> 00:07:21.584
&gt;&gt; Yes, spot on, it's almost too obvious.

146
00:07:21.584 --> 00:07:23.606
Paul showing us some real
sophistication there.

147
00:07:23.606 --> 00:07:29.479
But what's on your mind might become

148
00:07:29.479 --> 00:07:35.928
exactly what's on your mind in my page.

149
00:07:35.928 --> 00:07:39.348
If I tried to be really intuitive and
you know what?

150
00:07:39.348 --> 00:07:40.391
That'd be amazing.

151
00:07:40.391 --> 00:07:42.461
Would it be had that Charles
maybe it's gonna happen who

152
00:07:42.461 --> 00:07:43.529
knows there's on line one.

153
00:07:43.529 --> 00:07:48.631
Line two, if I wanted to display
what side an input field

154
00:07:48.631 --> 00:07:53.421
into which I can type text,
what am I right or input.

155
00:07:53.421 --> 00:07:55.460
And unfortunately that's going to,

156
00:07:55.460 --> 00:07:58.965
and this is maybe where our friend
Paul was suggesting having some

157
00:07:58.965 --> 00:08:03.187
sort of let the computer know whether
it's going to be text or something else.

158
00:08:03.187 --> 00:08:06.299
Maybe here, we don't want it to write
input, we want it to show an input.

159
00:08:06.299 --> 00:08:10.664
So we can put some square brackets
around it, We use those quite a lot.

160
00:08:10.664 --> 00:08:12.246
Let's put something else around it.

161
00:08:12.246 --> 00:08:18.273
&gt;&gt; [LAUGH]
&gt;&gt; Let's put some triangle brackets.

162
00:08:18.273 --> 00:08:20.335
I know we don't use them very much.

163
00:08:20.335 --> 00:08:21.477
That's nice.

164
00:08:21.477 --> 00:08:26.453
And that could display us a box
on the screen beautiful..

165
00:08:26.453 --> 00:08:31.294
And then All right we're getting it okay.

166
00:08:31.294 --> 00:08:34.166
Maybe everyone there we go do button and

167
00:08:34.166 --> 00:08:38.778
that would produce a button and
then if you just wrote the text,

168
00:08:38.778 --> 00:08:43.235
Publish right next to it,
maybe that shows up in the screen.

169
00:08:43.235 --> 00:08:46.088
I don't know this language
would be too intuitive though.

170
00:08:46.088 --> 00:08:50.469
There's no way that we're hiring
people in the six figures

171
00:08:50.469 --> 00:08:55.118
developing user interfaces using
a language this intuitive.

172
00:08:55.118 --> 00:08:58.205
And to be fair,
I'm a bit suspicious about it anyway.

173
00:08:58.205 --> 00:09:01.251
I'm a bit suspicious
about it anyway because,

174
00:09:01.251 --> 00:09:03.544
it's not clear to me how I'd know.

175
00:09:03.544 --> 00:09:06.751
So in theory,
writing what's on your mind and

176
00:09:06.751 --> 00:09:11.933
then having that displayed some,
other tool, some other engine's gonna

177
00:09:11.933 --> 00:09:16.802
have to have been running to convert
this into elements on the screen.

178
00:09:16.802 --> 00:09:19.840
And to be fair animate on the screen,
there's a lot of questions.

179
00:09:19.840 --> 00:09:22.705
I can change my window
size in a web browser, and

180
00:09:22.705 --> 00:09:27.303
all of these are gonna change their
position and their pixels on the screen.

181
00:09:27.303 --> 00:09:32.007
I'm gonna have to work all that
out unless there's some way in

182
00:09:32.007 --> 00:09:34.362
which I can have a very simple.

183
00:09:34.362 --> 00:09:39.752
What will be my most simple way of
describing what's on this screen?

184
00:09:39.752 --> 00:09:45.151
I could have even done it here
I could list down the page and

185
00:09:45.151 --> 00:09:47.852
create element by element,

186
00:09:47.852 --> 00:09:53.384
a list maybe in describing
what's gonna be on the screen.

187
00:09:53.384 --> 00:09:59.052
I can have some sort of list,
that takes each of these elements.

188
00:09:59.052 --> 00:10:04.786
And all I have to do is add to that
list and figure out nothing else.

189
00:10:04.786 --> 00:10:08.460
Have no other thoughts about what
pixels are gonna be on the screen,

190
00:10:08.460 --> 00:10:10.143
how to think about the layout.

191
00:10:10.143 --> 00:10:11.112
And instead,

192
00:10:11.112 --> 00:10:16.357
all I have to do is go through a list of
elements that I wanna have on the screen,

193
00:10:16.357 --> 00:10:21.795
an ordered list, by the order they are on
the page, they get added to this list.

194
00:10:21.795 --> 00:10:25.244
Just like a JavaScript list, and

195
00:10:25.244 --> 00:10:30.663
then rely on some sort of,
I don't know, layout and

196
00:10:30.663 --> 00:10:36.083
render engine that can
convert that list of elements

197
00:10:36.083 --> 00:10:40.653
into actual, Pixels on the screen itself.

198
00:10:40.653 --> 00:10:42.685
But this is far too appealing.

199
00:10:42.685 --> 00:10:44.456
Is it far too intuitive?

200
00:10:44.456 --> 00:10:48.142
There's no way this language exists,

201
00:10:48.142 --> 00:10:52.842
and we're still charging for
even this content.

202
00:10:52.842 --> 00:10:57.582
There's no way I should imagine
a job that is very unhelpful.

203
00:10:57.582 --> 00:11:00.197
But It does.

204
00:11:00.197 --> 00:11:02.394
What is this language called, Paul?

205
00:11:02.394 --> 00:11:03.071
&gt;&gt; HTML.

206
00:11:03.071 --> 00:11:05.534
&gt;&gt; This is called HTML.

207
00:11:05.534 --> 00:11:08.052
People, do not underestimate it.

208
00:11:08.052 --> 00:11:09.397
We don't even teach it at Codesmith.

209
00:11:09.397 --> 00:11:12.852
That's how intuitive it is.

210
00:11:12.852 --> 00:11:16.866
This is something where we can
list down the page in order and

211
00:11:16.866 --> 00:11:21.379
the elements will show up in that
respective order on the web page.

212
00:11:21.379 --> 00:11:25.357
Our HTML file, literally all we have to
do, maybe one of the first things we did

213
00:11:25.357 --> 00:11:29.543
on a computer each of us, is save like,
I don't know, app, write in a text file.

214
00:11:29.543 --> 00:11:33.930
And then input dot HTML, and
then load it into the web

215
00:11:33.930 --> 00:11:38.827
browser arousing off screen
load it into the web browser.

216
00:11:38.827 --> 00:11:47.120
And that text will be read past is
a term they use PARSE passed and

217
00:11:47.120 --> 00:11:52.921
turned into line by line
elements on a list.

218
00:11:52.921 --> 00:11:57.275
A simplified list that a simple list
of elements now totally is implemented

219
00:11:57.275 --> 00:11:58.111
as an object.

220
00:11:58.111 --> 00:12:02.417
But this list here of elements
will then be automatically

221
00:12:02.417 --> 00:12:04.573
converted onto the screen.

222
00:12:04.573 --> 00:12:08.876
And all we have to do is
write text this list.

223
00:12:08.876 --> 00:12:10.962
What language is this list
going to be stored in?

224
00:12:10.962 --> 00:12:15.857
Well, the one that the web browser is
mostly built in, which is C++, but

225
00:12:15.857 --> 00:12:18.280
we don't have to interface with it.

226
00:12:18.280 --> 00:12:19.717
We don't have to work on it directly.

227
00:12:19.717 --> 00:12:25.296
We instead get to list out and have each
of these automatically added to this list.

228
00:12:25.296 --> 00:12:27.999
That is a simplified version of this page.

229
00:12:27.999 --> 00:12:33.566
So here's our page, Here's our list.

230
00:12:33.566 --> 00:12:37.638
And it's a simplified version so
that we don't have to worry about

231
00:12:37.638 --> 00:12:42.377
the individual pixels, cuz there
are thousands of different device types.

232
00:12:42.377 --> 00:12:44.587
There are tablets, phones, laptops.

233
00:12:44.587 --> 00:12:48.284
There are thousands different
sizes our window of screen can be.

234
00:12:48.284 --> 00:12:50.404
If we don't think about any of it,

235
00:12:50.404 --> 00:12:55.099
all we do is list out our individual
elements and rely on some sort of engine.

236
00:12:55.099 --> 00:12:57.717
We'll learn more about
it that lays out and

237
00:12:57.717 --> 00:13:01.433
figure out the exact pixels that
get displayed on this page.

238
00:13:01.433 --> 00:13:02.779
And that's it.

239
00:13:02.779 --> 00:13:04.131
We add each of our elements.

240
00:13:04.131 --> 00:13:09.510
So into this list here,
we'd have the string what's on your mind?

241
00:13:09.510 --> 00:13:14.922
We literally get to in from our
HTML affect this list in C++,

242
00:13:14.922 --> 00:13:19.309
that determines what gets
displayed on the page.

243
00:13:19.309 --> 00:13:21.103
We add our input.

244
00:13:21.103 --> 00:13:24.458
And each of these will then be
turned into the specific elements,

245
00:13:24.458 --> 00:13:27.813
that describe that particular work for
that particular device.

246
00:13:30.255 --> 00:13:33.477
That's it.

247
00:13:33.477 --> 00:13:38.240
People, this is called HTML,
this C++ list, and this page.

248
00:13:38.240 --> 00:13:41.656
I guess this list here,
we need to give it a name.

249
00:13:41.656 --> 00:13:49.055
I am presuming it's name is
the list of elements on the page.

250
00:13:49.055 --> 00:13:53.125
L E P.

251
00:13:53.125 --> 00:13:55.771
I literally come up with different
invented names every time.

252
00:13:55.771 --> 00:13:58.352
No, it's not actually a list,
it's technically an object.

253
00:13:58.352 --> 00:14:02.194
So maybe an object just gives
it a bit more flexibility,

254
00:14:02.194 --> 00:14:05.563
allows it to have a bit
more specific structure.

255
00:14:05.563 --> 00:14:09.234
So it's technically an object,
so maybe it's an object.

256
00:14:09.234 --> 00:14:13.278
And it's a representation of the page and
your representation of something.

257
00:14:13.278 --> 00:14:18.255
If you've built your sort of LEGO model,
it's all I know,

258
00:14:18.255 --> 00:14:21.353
is a representation of a real thing.

259
00:14:21.353 --> 00:14:25.175
So the LEGO model of Riverdale I
actually don't know about that.

260
00:14:25.175 --> 00:14:30.016
I like that when I saw that in the store,
the Lego representation Of,

261
00:14:30.016 --> 00:14:35.875
what do I like, the, there's a new
gaming truck from Lego Friends, I think.

262
00:14:35.875 --> 00:14:39.287
I haven't even used, I haven't seen it,
but you can play a game.

263
00:14:39.287 --> 00:14:40.117
You can be a gamer in it.

264
00:14:40.117 --> 00:14:42.970
So, Lego presented a gaming truck.

265
00:14:42.970 --> 00:14:44.600
Yeah.

266
00:14:44.600 --> 00:14:46.182
Is not the real gaming truck.

267
00:14:46.182 --> 00:14:49.287
It's a simplified with
bricks version of it.

268
00:14:49.287 --> 00:14:54.206
Well, this is a simplified with elements
in an object, version of the page that all

269
00:14:54.206 --> 00:14:58.373
we have to do is add to that list,
almost push almost a pen to that list.

270
00:14:58.373 --> 00:15:00.347
So this is known as a model.

271
00:15:00.347 --> 00:15:02.692
Not a representation, but
a model of the real thing.

272
00:15:02.692 --> 00:15:05.715
A Lego model,
models the real gaming truck.

273
00:15:05.715 --> 00:15:08.049
So this is a model technically here.

274
00:15:08.049 --> 00:15:11.214
So a model in object form.

275
00:15:11.214 --> 00:15:16.046
So object model, of the page.

276
00:15:16.046 --> 00:15:18.929
Up well, this is an app.

277
00:15:18.929 --> 00:15:22.291
So is it really an object model of
the page or not the model the app?

278
00:15:22.291 --> 00:15:25.520
So I think maybe Omar no okay.

279
00:15:25.520 --> 00:15:26.175
All right.

280
00:15:26.175 --> 00:15:32.126
So this a user calls a document because
it was literally like a list of links and

281
00:15:32.126 --> 00:15:34.701
text, so it was like a document.

282
00:15:34.701 --> 00:15:36.429
So, O M D, okay fine.

283
00:15:36.429 --> 00:15:39.003
DOM.

284
00:15:39.003 --> 00:15:44.854
A list in JavaScript,
a model of the document,

285
00:15:44.854 --> 00:15:50.720
the page,
stored in an object format in C++.

286
00:15:50.720 --> 00:15:56.492
That enables us to not have to interact
directly with pixels and work out.

287
00:15:56.492 --> 00:15:59.578
That code at the top there
was absolutely untenable.

288
00:15:59.578 --> 00:16:02.096
Instead, we get to write almost functions.

289
00:16:02.096 --> 00:16:04.028
Think of these as functions being called.

290
00:16:04.028 --> 00:16:06.100
This input says, please go and

291
00:16:06.100 --> 00:16:10.333
create on this list of elements
A single element of type input.

292
00:16:10.333 --> 00:16:14.494
And then we have to think nothing
more about it determining the exact

293
00:16:14.494 --> 00:16:18.663
content displayed on the page is
then handled by the render engine.

