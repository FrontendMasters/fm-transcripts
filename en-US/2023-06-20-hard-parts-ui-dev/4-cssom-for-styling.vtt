WEBVTT

1
00:00:00.110 --> 00:00:02.862
So CSS, let's make sure we describe this.

2
00:00:02.862 --> 00:00:06.768
CSS, which I'm sure most of
you have heard about or used,

3
00:00:06.768 --> 00:00:11.237
allows us to determine on these
elements that we've structured on

4
00:00:11.237 --> 00:00:14.840
the page a little bit
more about how they look.

5
00:00:14.840 --> 00:00:17.728
And actually it's a beautifully
sophisticated language,

6
00:00:17.728 --> 00:00:19.377
it's actually really powerful.

7
00:00:19.377 --> 00:00:23.249
To a point of fault, we're gonna
realize that if we write applications,

8
00:00:23.249 --> 00:00:27.246
UI applications, the biggest challenge
is gonna turn out to be maintaining

9
00:00:27.246 --> 00:00:31.390
consistency between the underlying
data and what the user sees.

10
00:00:31.390 --> 00:00:34.560
So you probably make sure you only have
one place that you can store underlying

11
00:00:34.560 --> 00:00:36.550
data that describes what the user sees.

12
00:00:36.550 --> 00:00:40.380
Not four, and certainly not the one
that's also used for styles.

13
00:00:40.380 --> 00:00:45.070
And yet actually, it's almost like the CSS
team goes, the rest is not always perfect.

14
00:00:45.070 --> 00:00:46.910
So let's try and do it here as well.

15
00:00:46.910 --> 00:00:50.190
It's like that famous ICCD
where they add new standards.

16
00:00:50.190 --> 00:00:51.862
You have a unifying standard,

17
00:00:51.862 --> 00:00:55.213
and now you have another standard
on top of the existing ones.

18
00:00:55.213 --> 00:00:59.410
Yeah, CSS is gonna be what allows
us to make this button blue or

19
00:00:59.410 --> 00:01:03.450
determine the exact pixels or
location of these elements,

20
00:01:03.450 --> 00:01:09.330
not the overall order and structure,
that's HTML, but the exact pixels.

21
00:01:09.330 --> 00:01:12.884
But also can actually store data,
are you displaying or

22
00:01:12.884 --> 00:01:15.311
are you not displaying this element.

23
00:01:15.311 --> 00:01:18.500
That's state, that's state,
that's gonna turn out to be quite tricky.

24
00:01:18.500 --> 00:01:20.264
For our purposes here,
let's just add it in.

25
00:01:20.264 --> 00:01:22.650
You wanna see another legacy
feature of the web browser?

26
00:01:22.650 --> 00:01:23.650
How do we add it in?

27
00:01:23.650 --> 00:01:25.440
I'm sure we load it in directly, right?

28
00:01:25.440 --> 00:01:28.690
No, we link to it from our HTML file.

29
00:01:28.690 --> 00:01:33.942
We add that as a element here
linking to a style sheet,

30
00:01:33.942 --> 00:01:38.959
which is a file, and
we have to use that name there,

31
00:01:38.959 --> 00:01:43.600
which is a file that gives
us a list of styles.

32
00:01:43.600 --> 00:01:48.770
And I say we're not dwelling
particularly here on CSS,

33
00:01:48.770 --> 00:01:52.720
but it's a chance for us to at least see.

34
00:01:52.720 --> 00:01:59.644
So there it is, that's gonna add on our
DOM, add a list of elements in C++.

35
00:01:59.644 --> 00:02:04.452
That's gonna add a link
to a style sheet which is

36
00:02:04.452 --> 00:02:09.080
gonna turn on and
switch on our CSS engine.

37
00:02:09.080 --> 00:02:15.180
And there's the linked element,
there it is.

38
00:02:15.180 --> 00:02:21.644
There's the link element and
that's gonna link to our CSS.

39
00:02:21.644 --> 00:02:27.670
And that is going to switch on our CSS
parser that's gonna read that CSS code and

40
00:02:27.670 --> 00:02:31.411
create in C++ as well
an object just like this,

41
00:02:31.411 --> 00:02:35.550
we'll think of it as a list,
that has two parts to it.

42
00:02:37.060 --> 00:02:42.345
The first part has a list of all
the possible rules, like for

43
00:02:42.345 --> 00:02:47.630
whenever you see a button apply
a background of slateblue,

44
00:02:47.630 --> 00:02:52.070
and then a second part that
actually fully mirrors

45
00:02:52.070 --> 00:02:56.120
the model of the page, all the elements.

46
00:02:56.120 --> 00:03:02.241
And so we'd have text, and the one we're
interested in is button that would be

47
00:03:02.241 --> 00:03:08.290
set with background to slateblue, and
that would make our button here blue.

48
00:03:08.290 --> 00:03:12.404
And we're not here to dwell per se on CSS,
but

49
00:03:12.404 --> 00:03:16.843
just to see we have another
model of our web page,

50
00:03:16.843 --> 00:03:24.190
this one describing the styles, and
this is known as the CSS object model.

51
00:03:24.190 --> 00:03:27.249
Object, it's a technical
structure of this but

52
00:03:27.249 --> 00:03:32.332
we can use a list model representing the
information to be displayed on the page.

53
00:03:32.332 --> 00:03:36.280
Our layout and render engine will
then analyze both of these and

54
00:03:36.280 --> 00:03:39.498
determine what to actually
display on our pixels.

55
00:03:42.126 --> 00:03:45.970
Goal one, display content complete.

56
00:03:45.970 --> 00:03:49.190
It really is that minimal.

57
00:03:49.190 --> 00:03:50.501
It really is that basic.

58
00:03:50.501 --> 00:03:55.076
As I say, interesting,
archaic maybe design feature to

59
00:03:55.076 --> 00:04:00.630
have our styles loaded in
a different language, maybe not.

60
00:04:00.630 --> 00:04:06.010
Well, and then we load it in by adding
it to our list of elements on the page.

61
00:04:06.010 --> 00:04:07.580
But this is not one that's displayed.

62
00:04:07.580 --> 00:04:10.390
It's just there on the list of elements.

63
00:04:10.390 --> 00:04:11.750
Definitely not.

64
00:04:11.750 --> 00:04:14.545
If you think about other places where
user interfaces are built from scratch,

65
00:04:14.545 --> 00:04:18.130
like Swift, other development environments
for building user interfaces from scratch.

66
00:04:18.130 --> 00:04:21.880
You ain't doing it through this kinda ad
hoc joining up of pieces that were not

67
00:04:21.880 --> 00:04:22.870
designed for that.

68
00:04:22.870 --> 00:04:27.268
In fact, to be honest, that's probably
why Apple said we're building

69
00:04:27.268 --> 00:04:29.360
a brand new programming runtime or

70
00:04:29.360 --> 00:04:33.996
programming development environment
Swift to build out user interfaces.

71
00:04:33.996 --> 00:04:39.240
Because we probably were joining up pieces
from legacy application designd for

72
00:04:39.240 --> 00:04:42.850
the Mac, that then got
transferred to be using on iOS.

73
00:04:42.850 --> 00:04:44.580
So they said, let's start from scratch and

74
00:04:44.580 --> 00:04:47.890
let's build out this entire
development environment from scratch.

75
00:04:47.890 --> 00:04:53.290
But even then they can do it,
they own the entire stack, it's Apple.

76
00:04:53.290 --> 00:04:56.917
They own the entire stack of development,
not in web browser engineering,

77
00:04:56.917 --> 00:05:00.240
where each feature is owned by
a different regulatory body.

78
00:05:00.240 --> 00:05:02.997
And over the last 30 years,
each of those has changed hands, and

79
00:05:02.997 --> 00:05:06.310
there's been multiple different
browser teams all trying to do it.

80
00:05:06.310 --> 00:05:08.640
So we are joining up pieces
here from the start.

81
00:05:08.640 --> 00:05:13.380
All right, so just two simple goals.

82
00:05:13.380 --> 00:05:15.720
One, display content.

83
00:05:15.720 --> 00:05:19.205
And two, let users change it,
but we're done with goal one.

84
00:05:19.205 --> 00:05:21.120
We're actually done.

85
00:05:21.120 --> 00:05:23.182
Yeah, exactly, woo, well done, everybody.

86
00:05:23.182 --> 00:05:26.849
&gt;&gt; [APPLAUSE]
&gt;&gt; We displayed content data from inside

87
00:05:26.849 --> 00:05:30.250
our computer, and
we used HTML and CSS to do it.

