WEBVTT

1
00:00:00.000 --> 00:00:00.787
Here's my email.

2
00:00:00.787 --> 00:00:04.851
If you want to get clarifications,
William, I probably shouldn't do this,

3
00:00:04.851 --> 00:00:05.413
should I?

4
00:00:05.413 --> 00:00:06.395
There we go.

5
00:00:06.395 --> 00:00:10.418
[LAUGH] If you wanna ask any questions,

6
00:00:10.418 --> 00:00:15.331
people, there it is, and let's summarize.

7
00:00:15.331 --> 00:00:19.396
We have a groundbreaking,
thanks to the people who innovatively,

8
00:00:19.396 --> 00:00:22.248
I think,
took these steps over the past years,

9
00:00:22.248 --> 00:00:25.909
a groundbreaking approach to
user interface engineering.

10
00:00:25.909 --> 00:00:27.604
A single source of truth.

11
00:00:27.604 --> 00:00:32.563
In a collection of runtimes,
API's browser features, regulatory bodies,

12
00:00:32.563 --> 00:00:37.456
standards agencies known as a web
browser creators over the last 30 years.

13
00:00:37.456 --> 00:00:41.587
In a world in which there could
be multiple sources of truth,

14
00:00:41.587 --> 00:00:45.722
there is HTML, was implicitly
saying hey DIV on, input on.

15
00:00:45.722 --> 00:00:48.326
Our DOM that had any input from the user,

16
00:00:48.326 --> 00:00:52.610
automatically tracked in
it at JavaScript runtime.

17
00:00:52.610 --> 00:00:57.180
Our CSS object model instead,
one source of truth for our data.

18
00:00:57.180 --> 00:01:00.186
Everything the user sees stems
from data in JavaScript.

19
00:01:00.186 --> 00:01:03.481
It's restrictive but
desperately predictable, and

20
00:01:03.481 --> 00:01:05.850
enables data propagation to the view.

21
00:01:05.850 --> 00:01:10.827
That means, essentially,
we don't like that word, it always a sign,

22
00:01:10.827 --> 00:01:13.889
that means we are able to
make a change to data and

23
00:01:13.889 --> 00:01:18.280
having described one time how the view
will look based on that data.

24
00:01:19.300 --> 00:01:24.185
Don't even have to do anything, it's just
gonna propagate through to the view.

25
00:01:24.185 --> 00:01:26.356
Enables UI composition with JavaScript.

26
00:01:26.356 --> 00:01:31.243
A JavaScript DOM enables a semi visual
form of coding our UIs where units

27
00:01:31.243 --> 00:01:33.605
of code that describe the view.

28
00:01:33.605 --> 00:01:38.462
We can have those produced using functions
as they do in things that React where

29
00:01:38.462 --> 00:01:42.214
units of code that describe units
of view the user will see and

30
00:01:42.214 --> 00:01:47.073
associated data can be positioned in
the code to indicate where they're gonna

31
00:01:47.073 --> 00:01:49.300
appear on the web page.

32
00:01:49.300 --> 00:01:51.481
We could move our DIV great job above, and

33
00:01:51.481 --> 00:01:54.730
it would literally appear above
on the web page with the data.

34
00:01:57.040 --> 00:02:02.190
So, it makes reasoning about our state,
our view, much easier.

35
00:02:02.190 --> 00:02:06.198
The downside, right, this flow of
the data back and forth our content,

36
00:02:06.198 --> 00:02:10.290
that is the combination of the data and
what's seen becomes much easier.

37
00:02:10.290 --> 00:02:15.377
The downside of this semi visual code is
it takes the data and info on the view at

38
00:02:15.377 --> 00:02:20.900
this moment and creates it in full,
that's why it's so easy to reason about.

39
00:02:20.900 --> 00:02:25.450
Data generates view, however,
are you ready to figure out the change?

40
00:02:25.450 --> 00:02:27.733
We don't have to say,
just change that bit, no,

41
00:02:27.733 --> 00:02:29.885
here's that description one time and
do it again.

42
00:02:29.885 --> 00:02:35.807
However, requires a significant
moves by us to improve,

43
00:02:35.807 --> 00:02:41.846
there we go, moves by us to
improve efficiency using hooks and

44
00:02:41.846 --> 00:02:46.390
a visual virtual DOM diffing process.

45
00:02:46.390 --> 00:02:51.115
If we rebuild the DOM every time our data
change, that'd be entirely unnecessary and

46
00:02:51.115 --> 00:02:56.220
if we rebuilt it every 15 milliseconds,
that would be entirely unnecessary.

47
00:02:56.220 --> 00:03:00.321
Instead, we spot actual differences and

48
00:03:00.321 --> 00:03:05.133
only change those known
as DOM reconciliation.

49
00:03:05.133 --> 00:03:06.256
That's it people.

50
00:03:06.256 --> 00:03:08.525
&gt;&gt; [APPLAUSE]
&gt;&gt; Thank you so much everybody,

51
00:03:08.525 --> 00:03:13.200
thank you for all your incredible,
incredible, incredible, hard work.

