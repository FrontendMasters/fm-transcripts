WEBVTT

1
00:00:00.480 --> 00:00:05.190
So we talked a little bit about
making custom React hooks to handle

2
00:00:05.190 --> 00:00:08.380
some common things that we might do.

3
00:00:08.380 --> 00:00:11.000
So that is again, not a secret between us.

4
00:00:11.000 --> 00:00:13.890
The whole idea of hooks is that
you can create these abstractions,

5
00:00:13.890 --> 00:00:15.400
we learned how to create our own.

6
00:00:15.400 --> 00:00:17.960
And the hope is yeah,
we took somewhat generic things.

7
00:00:17.960 --> 00:00:20.640
And the hope is that you can use
it to solve your very unique and

8
00:00:20.640 --> 00:00:22.980
special snowflake problems that you have.

9
00:00:22.980 --> 00:00:27.177
But for a lot of common things,
I would encourage you to see,

10
00:00:27.177 --> 00:00:29.743
has this been done already, right?

11
00:00:29.743 --> 00:00:32.110
Is there a solution that I can use?

12
00:00:32.110 --> 00:00:33.390
And so there's a bunch of these lists.

13
00:00:33.390 --> 00:00:36.840
There's awesome React hooks and
a whole bunch of other ones.

14
00:00:36.840 --> 00:00:42.080
This one's kinda cool because you can kind
of search and see a whole bunch of them.

15
00:00:42.080 --> 00:00:45.590
But okay, there's a useAPI,
useAbortableFetch,

16
00:00:45.590 --> 00:00:48.323
which is if you needed to cancel or fetch.

17
00:00:48.323 --> 00:00:50.270
There's clearly a whole
bunch with the same name.

18
00:00:50.270 --> 00:00:53.140
Now, it's the same problem we have with a
lot of third party JavaScript libraries is

19
00:00:53.140 --> 00:00:54.610
it is on you to vet them.

20
00:00:54.610 --> 00:00:59.220
But again, some that you might think
about is there is useScrollSpy.

21
00:01:00.460 --> 00:01:01.624
We'll take a look at that real quick.

22
00:01:04.531 --> 00:01:07.361
And that gives you the ability,
if you watch these sections,

23
00:01:07.361 --> 00:01:11.064
as each section goes up, it'll help you
figure out which one to highlight as they

24
00:01:11.064 --> 00:01:12.380
scroll through a long page.

25
00:01:12.380 --> 00:01:16.252
If you have one page, let's say you're
running a JavaScript conference in Denver,

26
00:01:16.252 --> 00:01:19.281
hypothetically called DinosaurJS,
whatever doesn't matter.

27
00:01:19.281 --> 00:01:23.923
And you had the Speakers and the tickets
and the venue thing you could actually

28
00:01:23.923 --> 00:01:27.584
have the right nav link as it
scrolls past the top of the page.

29
00:01:27.584 --> 00:01:32.080
You don't have to write that yourself
because somebody else already wrote it.

30
00:01:32.080 --> 00:01:37.171
There's other ones like usePosition,
is just code that I don't

31
00:01:37.171 --> 00:01:42.274
really ever wanna write again,
and so basically what it does is.

32
00:01:42.274 --> 00:01:45.157
You give it a ref for
the element you're looking for, and

33
00:01:45.157 --> 00:01:47.880
will tell you roughly
where it is on the page.

34
00:01:47.880 --> 00:01:53.290
This can be useful for
lazy loading images, right?

35
00:01:53.290 --> 00:01:56.944
Another one that you might
wanna look at is useClippy

36
00:02:02.889 --> 00:02:06.764
And that just helps you with some
amount of clipboard management.

37
00:02:06.764 --> 00:02:12.076
It is not a friendly paper clip that drops
down from the top of the screen goes,

38
00:02:12.076 --> 00:02:15.290
so looks like you're
trying to submit a form.

39
00:02:15.290 --> 00:02:17.801
Looks like you're trying to keep
track of some sort of grudges,

40
00:02:17.801 --> 00:02:19.437
have you thought about therapy, right?

41
00:02:19.437 --> 00:02:24.025
That is not what it does, it just
basically allows you to get the current

42
00:02:24.025 --> 00:02:28.455
things from the clipboard and
set clipboard contents, right?

43
00:02:28.455 --> 00:02:31.595
So the major thing is for whatever you
need, I'd also encourage you, yes,

44
00:02:31.595 --> 00:02:33.665
you need to vet them, right,
cuz you saw there were multiple ones.

45
00:02:33.665 --> 00:02:35.005
Some of them were probably on maintain.

46
00:02:35.005 --> 00:02:37.830
Same problem with any JavaScript library,
but

47
00:02:37.830 --> 00:02:43.010
not only does thinking about your state in
advance help with a lot of things, right?

48
00:02:43.010 --> 00:02:46.800
But it also gives you the ability
to share a lot of these hooks,

49
00:02:46.800 --> 00:02:49.860
build your own hooks for your very
custom things, for your application, but

50
00:02:49.860 --> 00:02:52.470
use some of the third-party
ones that exist, right?

51
00:02:52.470 --> 00:02:56.550
So my hope is that in this workshop We
learned basically how sometimes the way

52
00:02:56.550 --> 00:03:01.020
we structure a state and
what tools we go to grab for use is great.

53
00:03:01.020 --> 00:03:05.450
But sometimes the use gives us a little
more fine tuning as a separate set state

54
00:03:05.450 --> 00:03:08.258
management from the rest
of our user interface.

55
00:03:08.258 --> 00:03:11.364
With that it becomes easier to test
because these are do things just with

56
00:03:11.364 --> 00:03:14.250
JavaScript objects that we don't
really have to think about.

57
00:03:14.250 --> 00:03:16.410
Too much, we can just do all the stuff and

58
00:03:16.410 --> 00:03:18.720
because it's just JavaScript,
it's easier to test.

59
00:03:18.720 --> 00:03:22.308
And then we let that initial slide
that I had explain the React.

60
00:03:22.308 --> 00:03:24.870
Which is,
it just takes your business logic,

61
00:03:24.870 --> 00:03:27.970
takes a bunch rules by components,
puts it onto the page.

62
00:03:27.970 --> 00:03:31.734
If your application is currently
non-estate or that feels true to you,

63
00:03:31.734 --> 00:03:33.904
you're like, he's oversimplifying.

64
00:03:33.904 --> 00:03:37.930
What I would you encourage you to do is to
think more deeply about your state, right?

65
00:03:37.930 --> 00:03:39.510
Because it can be like that.

66
00:03:39.510 --> 00:03:42.850
If you start to separate it out from
the UI, if you start to come up,

67
00:03:42.850 --> 00:03:45.020
which is managing these data structures.

68
00:03:45.020 --> 00:03:48.280
Outside in a reducer that's just
a plain old JavaScript function, and

69
00:03:48.280 --> 00:03:51.080
let that feed into your app
in a very declarative way.

70
00:03:51.080 --> 00:03:57.110
You can basically say, okay,
the state of the world has changed,

71
00:03:57.110 --> 00:04:01.050
React, your components are just a set of
rules for how that should render, right?

72
00:04:01.050 --> 00:04:04.500
And almost like saying,
as long as I give it the same inputs,

73
00:04:04.500 --> 00:04:06.960
I'm gonna get the same outputs, right?

74
00:04:06.960 --> 00:04:10.490
You can get to that point if you start
to separate all these pieces out, and

75
00:04:10.490 --> 00:04:11.640
you can also ratchet it together.

76
00:04:11.640 --> 00:04:15.110
Anything that you've done squarely once,
you can put into its own little hooks.

77
00:04:15.110 --> 00:04:16.410
You never have to see it again, right?

78
00:04:16.410 --> 00:04:20.600
Again, hide your problems, but
also reuse the good things right?

79
00:04:20.600 --> 00:04:23.051
Can we take?
All right, we had to, implement,

80
00:04:23.051 --> 00:04:26.653
undo reduce or once the second time
that you need to implement it,

81
00:04:26.653 --> 00:04:29.460
maybe it's time to make that obstruction.

82
00:04:29.460 --> 00:04:31.080
We can argue maybe not the first time,
right?

83
00:04:31.080 --> 00:04:33.860
Because nobody likes that person
who took a very simple ticket and

84
00:04:33.860 --> 00:04:34.980
rewrote everything.

85
00:04:34.980 --> 00:04:39.300
But thinking about, stopping, pausing, and

86
00:04:39.300 --> 00:04:43.230
thinking about how we structure
mass estate, has big impacts one

87
00:04:43.230 --> 00:04:46.730
potentially the performance depending
on which trade offs you wanna make.

88
00:04:46.730 --> 00:04:50.130
We saw that we saw solved some performance
issues and we reinvented them, but for

89
00:04:50.130 --> 00:04:51.789
the sake of maintainability, right?

90
00:04:51.789 --> 00:04:53.624
And these are the trade offs
that we have to think about and

91
00:04:53.624 --> 00:04:55.090
these are the trade offs
that we need to make.

92
00:04:56.310 --> 00:04:56.960
Thank you so much.

93
00:04:59.634 --> 00:05:03.521
&gt;&gt; [APPLAUSE]

