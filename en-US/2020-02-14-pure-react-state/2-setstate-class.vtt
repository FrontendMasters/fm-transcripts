WEBVTT

1
00:00:00.140 --> 00:00:04.530
So we're gonna start off by
looking very closely at React,

2
00:00:04.530 --> 00:00:07.420
a class based components state and
the stuff that state.

3
00:00:07.420 --> 00:00:12.060
And so the inner workings and
things that you may have noticed that does

4
00:00:12.060 --> 00:00:15.020
things that you didn't know that
it does so on and so forth.

5
00:00:15.020 --> 00:00:18.220
And then after that will kind of compare
to how they differ some poke the first

6
00:00:18.220 --> 00:00:22.850
we're gonna take an uncomfortably close
look at how this stuff says state works.

7
00:00:22.850 --> 00:00:26.990
We are gonna start with the world's
simplest React component, right?

8
00:00:26.990 --> 00:00:31.040
The kind of almost like Hello World React
components, there's a small counter

9
00:00:31.040 --> 00:00:34.740
application, it will increment,
it will decrement, so on and so forth.

10
00:00:34.740 --> 00:00:35.620
So let's take a look at it.

11
00:00:36.890 --> 00:00:38.200
Here it is.

12
00:00:38.200 --> 00:00:41.430
It does have one problem to it.

13
00:00:43.830 --> 00:00:46.030
Let's make sure that's still running,
it is.

14
00:00:46.030 --> 00:00:48.820
So it's got an increment button,
it's got a decrement button,

15
00:00:48.820 --> 00:00:50.160
it's got a reset button.

16
00:00:50.160 --> 00:00:53.890
The problem here is that
none of them do anything.

17
00:00:53.890 --> 00:00:55.740
In fact that zero isn't
even stored in state,

18
00:00:55.740 --> 00:00:57.670
it's just hard coded right in there,
all right.

19
00:00:57.670 --> 00:01:00.735
So there's no sense of state management,
right?

20
00:01:00.735 --> 00:01:02.132
Now again,
this is a simple React component.

21
00:01:02.132 --> 00:01:04.305
if you used React,
before this will seem like old hat.

22
00:01:04.305 --> 00:01:07.875
It's mostly to get ourselves warmed up and
loosened and so as we begin to refactor,

23
00:01:07.875 --> 00:01:09.935
we see what we did in the first place.

24
00:01:09.935 --> 00:01:12.655
We can kinda see it forward,
rather than being like, here's a done app.

25
00:01:12.655 --> 00:01:14.995
Let's go poke around on it.

26
00:01:14.995 --> 00:01:20.650
We'll input pieces of it that we are going
to end up refactoring, all right.

27
00:01:20.650 --> 00:01:21.990
So I'm gonna switch over to the code.

28
00:01:23.800 --> 00:01:25.060
And here it is.

29
00:01:25.060 --> 00:01:28.370
As I said before,
this could have just been an HTML page.

30
00:01:28.370 --> 00:01:32.080
There is no reason that I had to
load react in order to do this

31
00:01:32.080 --> 00:01:36.490
other than to make a point and
refactor it and stuff along those lines.

32
00:01:36.490 --> 00:01:41.360
But right now it is a hard coded and
zero, some buttons that don't do anything.

33
00:01:41.360 --> 00:01:45.190
So let's just start again, get ourselves
warmed up, get ourselves limber, and

34
00:01:45.190 --> 00:01:45.900
ready to go.

35
00:01:45.900 --> 00:01:49.120
We're gonna start off just by implementing
this in the kinda traditional

36
00:01:49.120 --> 00:01:49.850
components state.

37
00:01:49.850 --> 00:01:56.015
So one of the classic ways that we can
hold on to state is in the constructor

38
00:02:03.116 --> 00:02:06.610
Pass the props up to the actual component
class cuz we're sub classing it.

39
00:02:06.610 --> 00:02:10.680
And we'll say this.state.

40
00:02:10.680 --> 00:02:11.520
I'll call it count.

41
00:02:12.770 --> 00:02:14.340
And I'm gonna start with the number 3,

42
00:02:14.340 --> 00:02:18.660
just to prove to you that I'm replacing
the 0, cuz if I store 0 in state and

43
00:02:18.660 --> 00:02:21.640
then I put this.state, you're gonna be
like I don't know anything changed.

44
00:02:21.640 --> 00:02:24.430
So we'll make it 3 for now, but
we'll switch that back in a second.

45
00:02:24.430 --> 00:02:26.382
And then in render,
we just read that state.

46
00:02:31.972 --> 00:02:32.664
And then we can replace it.

47
00:02:37.098 --> 00:02:41.271
Cool, so let's flip back over,
we've got the number three,

48
00:02:41.271 --> 00:02:43.500
we're already killing it.

49
00:02:43.500 --> 00:02:46.410
So now it'd be cool if other
than just storing some state

50
00:02:46.410 --> 00:02:48.980
memory running on the page,
this isn't that much better

51
00:02:48.980 --> 00:02:54.480
than an HTML page will implement
the ability to increment and decrement it.

52
00:02:54.480 --> 00:02:56.795
So that's going to be a series
of methods on this class.

53
00:02:59.457 --> 00:03:00.050
What's the increment?

54
00:03:00.050 --> 00:03:01.532
I will say this.setState,

55
00:03:01.532 --> 00:03:04.628
which is a method that we inherit
from the component class.

56
00:03:04.628 --> 00:03:09.410
We'll say count is this.state.count + 1.

57
00:03:09.410 --> 00:03:13.170
All right,
I don't want to type that three times, so

58
00:03:13.170 --> 00:03:16.858
I'm gonna do a little bit
of copy paste action here.

59
00:03:16.858 --> 00:03:20.970
Decrement spoiler alert,
it's gonna subtract one.

60
00:03:20.970 --> 00:03:25.873
I don't want to take a lucky
guess at reset those, set to 0.

61
00:03:25.873 --> 00:03:29.550
I was actually made the default 0 as well.

62
00:03:31.260 --> 00:03:33.440
All right,
we have the ability to change the state,

63
00:03:33.440 --> 00:03:35.120
we do have to bind it to the buttons.

64
00:03:35.120 --> 00:03:38.197
And I already had a freudian slip there
that you'll catch me on in a second.

65
00:03:40.601 --> 00:03:42.284
For incrementing,
we'll say this.increment.

66
00:03:42.284 --> 00:03:47.184
For decrementing,
we'll say this.decrement, and for

67
00:03:47.184 --> 00:03:54.477
resetting We'll say this.reset.

68
00:03:57.888 --> 00:04:00.103
All right, Now, is this gonna work?

69
00:04:00.103 --> 00:04:01.126
&gt;&gt; No.

70
00:04:01.126 --> 00:04:02.532
&gt;&gt; No, let's verify that.

71
00:04:06.953 --> 00:04:09.373
Also, if you don't actually
name this one reset,

72
00:04:09.373 --> 00:04:11.360
that'll create its own set of problems.

73
00:04:13.240 --> 00:04:16.240
All right, it blows up because it's like,
what is this, right?

74
00:04:16.240 --> 00:04:20.150
Which is honestly an existential question
that we're not fully equipped to answer.

75
00:04:20.150 --> 00:04:25.570
Let's do the short version,
which is all these events are fired

76
00:04:25.570 --> 00:04:30.150
on a click event listeners,
those go on to the event loop or

77
00:04:30.150 --> 00:04:32.720
onto the event queue,
which the event loop checks.

78
00:04:32.720 --> 00:04:36.790
And because this is not necessarily
self and other programming languages,

79
00:04:36.790 --> 00:04:41.100
it is more the context of execution,
it has lost track of what this is.

80
00:04:42.440 --> 00:04:45.190
That either resonates with you or doesn't?

81
00:04:45.190 --> 00:04:46.600
But let's just talk about how to fix it.

82
00:04:47.980 --> 00:04:52.613
Which is to kind of like say, all right,
I have strong opinions on what this is.

83
00:04:52.613 --> 00:04:57.475
So one of the kind of ways that we've done
that in class Bay State, which is not my

84
00:04:57.475 --> 00:05:02.484
favorite, is to say, all right, when
we're making this instance of the class,

85
00:05:02.484 --> 00:05:07.301
we'll grab these kind of generic ones and
we'll bind it to the current class.

86
00:05:09.467 --> 00:05:12.161
If this stresses you out, don't worry,
we're gonna delete it all.

87
00:05:16.172 --> 00:05:19.500
I will say reset.

88
00:05:19.500 --> 00:05:26.094
All right, so this point, if all goes
well, we should have a working counter.

89
00:05:26.094 --> 00:05:32.620
It increments, it decrements, it resets.

90
00:05:32.620 --> 00:05:33.230
It's amazing.

91
00:05:33.230 --> 00:05:36.430
We can all put React on
our LinkedIn profiles now.

92
00:05:37.430 --> 00:05:38.950
We're ready to go.

93
00:05:38.950 --> 00:05:39.450
Great.

