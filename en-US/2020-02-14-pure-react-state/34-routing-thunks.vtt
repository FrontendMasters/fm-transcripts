WEBVTT

1
00:00:00.025 --> 00:00:04.722
So the question where I missed
the dependency on dispatch leads

2
00:00:04.722 --> 00:00:07.822
this very perfectly into our next thing,

3
00:00:07.822 --> 00:00:13.685
which is missing dependencies with
useEffect and how it can bite you, right?

4
00:00:13.685 --> 00:00:17.670
Cuz before we've seen what happens if we
don't define any dependencies, right?

5
00:00:17.670 --> 00:00:20.302
And we talked a little about if we give it
that empty array, it only fires once, and

6
00:00:20.302 --> 00:00:21.613
all of our problems are solved, right?

7
00:00:21.613 --> 00:00:25.202
We never really saw how not defining

8
00:00:25.202 --> 00:00:30.570
dependencies that truly
existed could bite us.

9
00:00:30.570 --> 00:00:34.340
So what we're gonna do is we're going
to add a little bit of routing to this

10
00:00:34.340 --> 00:00:38.680
application, so I've got the router,
plural, or router, singular,

11
00:00:38.680 --> 00:00:40.740
I'm gonna bring a Route in as well.

12
00:00:40.740 --> 00:00:43.187
I'm also gonna bring in
this character view,

13
00:00:43.187 --> 00:00:45.956
which will show us details
about a given character.

14
00:00:56.413 --> 00:01:00.984
Right, and we're just gonna
add a little bit to our kind

15
00:01:00.984 --> 00:01:05.660
of rendering here, which is,
we've got this sidebar.

16
00:01:05.660 --> 00:01:08.972
We're also going to add,
through the magic of pre-written CSS,

17
00:01:10.449 --> 00:01:18.462
We'll have a section with the class name,
Of CharacterView.

18
00:01:20.716 --> 00:01:23.074
And in there, it will have this.

19
00:01:24.570 --> 00:01:29.172
We'll actually have a Route that will say,
okay, if the Route,

20
00:01:31.287 --> 00:01:41.290
path is, /characters/id,

21
00:01:41.290 --> 00:01:46.236
Then we'll render the component,
CharacterView.

22
00:01:49.855 --> 00:01:53.245
All right, let's make sure that all works.

23
00:01:55.878 --> 00:02:00.629
Endpoint is not defined,
index, that's cool.

24
00:02:08.264 --> 00:02:12.885
Line 44,

25
00:02:18.153 --> 00:02:22.144
All right,

26
00:02:22.144 --> 00:02:28.930
everything's good

27
00:02:28.930 --> 00:02:33.723
in the world.

28
00:02:33.723 --> 00:02:35.905
We've got those fetch characters.

29
00:02:35.905 --> 00:02:37.640
We'll go ahead and fetch some characters.

30
00:02:37.640 --> 00:02:42.518
If we click on one, we'll see what is
currently right now an empty details page,

31
00:02:42.518 --> 00:02:43.035
right?

32
00:02:43.035 --> 00:02:46.354
And you can see the URL is
switching through React Router,

33
00:02:46.354 --> 00:02:47.990
doing a bunch of work for me.

34
00:02:47.990 --> 00:02:49.580
I can see that the right
thing is highlighted.

35
00:02:49.580 --> 00:02:53.509
Everything is great in the world.

36
00:02:53.509 --> 00:02:56.860
So we technically, from the API, have all
the data, and we could pass it through.

37
00:02:56.860 --> 00:02:59.630
But what we wanna do is
read from the URL right?

38
00:02:59.630 --> 00:03:03.972
If it is character/1,
let's go and hit the endpoint for

39
00:03:03.972 --> 00:03:07.257
character/1 and load that data, right?

40
00:03:07.257 --> 00:03:11.629
Because I get a lot of API's in my job
that come across my desk, it'll tell you,

41
00:03:11.629 --> 00:03:14.829
lot of, especially hypermedia API's,
which will say,

42
00:03:14.829 --> 00:03:18.322
okay, all the children,
it'll only give me the IDs, right?

43
00:03:18.322 --> 00:03:20.048
And then it's my job to fetch.

44
00:03:20.048 --> 00:03:24.025
Or for the listview,
I'll have a very small subset of the data.

45
00:03:24.025 --> 00:03:26.617
But when they go to
the actual detail page,

46
00:03:26.617 --> 00:03:28.927
I will need to load more data, right?

47
00:03:28.927 --> 00:03:32.750
All the rest of the data for the campaign,
or anything along those lines.

48
00:03:32.750 --> 00:03:35.300
So what we're gonna do is,
okay, which one do we load?

49
00:03:35.300 --> 00:03:36.250
We look at the URL.

50
00:03:36.250 --> 00:03:40.392
The URL is that ephemeral
state holding onto location.

51
00:03:40.392 --> 00:03:46.279
If we're on character/1,
go get me the character with the id of 1.

52
00:03:46.279 --> 00:03:52.636
If we're on character/7, go get me
the character with the id of 7, right?

53
00:03:52.636 --> 00:03:57.600
And so we'll go ahead and
we'll take a look at that.

54
00:03:57.600 --> 00:04:02.483
So right now it's just getting
an empty character cuz it's

55
00:04:02.483 --> 00:04:04.836
expecting to get passed in.

56
00:04:04.836 --> 00:04:09.081
We're actually gonna go
fetch that ourselves.

57
00:04:10.852 --> 00:04:16.157
And so instead of that we're gonna say,

58
00:04:16.157 --> 00:04:19.948
const [character],

59
00:04:19.948 --> 00:04:24.779
and, setCharacter.

60
00:04:26.582 --> 00:04:29.739
We'll useState, and we'll just
give it that empty object for now.

61
00:04:29.739 --> 00:04:35.623
All right, a sensible default, and
then we're just gonna do a useEffect.

62
00:04:35.623 --> 00:04:38.732
Like just as we've seen
a bunch of times here before.

63
00:04:43.649 --> 00:04:46.620
And all that is going to
do is it's gonna fetch,

64
00:04:50.872 --> 00:04:56.791
endpoint +, '/characters'.

65
00:04:56.791 --> 00:05:00.360
So React Router passes in some props for
us, right?

66
00:05:00.360 --> 00:05:03.750
The most important one is
this one called match.

67
00:05:03.750 --> 00:05:08.713
And you notice that when I
defined the route in index.js,

68
00:05:08.713 --> 00:05:13.384
I gave you this dynamic segment here,
which was :id.

69
00:05:13.384 --> 00:05:17.693
So, I'll do characters/,

70
00:05:20.461 --> 00:05:27.846
match.params, whoop, .id.

71
00:05:27.846 --> 00:05:35.876
Then, Go ahead and parse it.

72
00:05:35.876 --> 00:05:40.102
And then we'll say,

73
00:05:44.980 --> 00:05:48.699
And the response we'll say, go ahead and

74
00:05:48.699 --> 00:05:52.636
setCharacter(response.character).

75
00:05:56.562 --> 00:05:59.985
And we should deal with error messages,
but we're not.

76
00:05:59.985 --> 00:06:02.522
We'll pull in useState and
useEffect, as well.

77
00:06:09.381 --> 00:06:14.050
Cool, so you can see I was at 7, so

78
00:06:14.050 --> 00:06:19.372
I simply went ahead, and it loaded 7.

79
00:06:19.372 --> 00:06:21.653
So let me go hit 6.

80
00:06:21.653 --> 00:06:27.743
It's reloading it, But
it's not changing the character.

81
00:06:30.786 --> 00:06:33.452
&gt;&gt; Cuz your id hasn't changed?

82
00:06:33.452 --> 00:06:35.546
Your id's hardcoded.

83
00:06:35.546 --> 00:06:37.725
&gt;&gt; id is getting from the URL.

84
00:06:37.725 --> 00:06:38.398
So id's good, right?

85
00:06:38.398 --> 00:06:41.253
But you're dangerously close.

86
00:06:43.760 --> 00:06:46.900
Remember we said that if we put in
an empty array for the dependencies,

87
00:06:46.900 --> 00:06:49.050
it loads when the component mounts.

88
00:06:49.050 --> 00:06:52.729
Now, normally, we're throwing away
components and remounting components, so

89
00:06:52.729 --> 00:06:53.894
it hasn't bitten us yet.

90
00:06:53.894 --> 00:06:56.056
But in this case, with React Router,

91
00:06:56.056 --> 00:07:00.452
it's simply keeping the same component
on the page and replacing the props,

92
00:07:00.452 --> 00:07:03.375
the match prop that's getting passed in,
right?

93
00:07:03.375 --> 00:07:07.813
So it's like, yeah, yeah,
I loaded the data for you based on the id.

94
00:07:08.816 --> 00:07:12.104
It's like, I'm done, and some on,
do the mount, I'm out, right?

95
00:07:12.104 --> 00:07:15.472
But we're saying, hey,

96
00:07:15.472 --> 00:07:21.452
you have a dependency on match.params.id.

97
00:07:21.452 --> 00:07:24.659
Why I point this out?

98
00:07:24.659 --> 00:07:25.414
There were no errors.

99
00:07:25.414 --> 00:07:28.449
If [INAUDIBLE] you, you might've gotten
a warning, but there's no error message,

100
00:07:28.449 --> 00:07:30.002
nothing will break, you will just be sad.

101
00:07:30.002 --> 00:07:32.787
And you will not know why, and
then you'll figure it out.

102
00:07:32.787 --> 00:07:34.330
You will figure it out, right?

103
00:07:34.330 --> 00:07:37.080
But it will take you way longer
than you would have wanted to.

104
00:07:37.080 --> 00:07:37.835
And you'll question yourself.

105
00:07:37.835 --> 00:07:40.285
And it's not really your fault, right?

106
00:07:41.904 --> 00:07:48.430
So now if we fetch the characters,
I can actually switch between them, right?

107
00:07:48.430 --> 00:07:51.700
And so that little tiny omission there,
basically,

108
00:07:51.700 --> 00:07:53.780
cuz it's doing what it's supposed to do.

109
00:07:53.780 --> 00:07:55.620
It said, I don't have any dependencies.

110
00:07:55.620 --> 00:07:56.766
I don't need to run again.

111
00:07:56.766 --> 00:07:58.850
So it didn't, right?

112
00:07:58.850 --> 00:08:02.118
But we have to say, no, no,
if you get a new param,

113
00:08:02.118 --> 00:08:06.222
cuz it wasn't super clear to us
the difference between mount and

114
00:08:06.222 --> 00:08:10.107
unmounting components and
having one when we replace them.

115
00:08:10.107 --> 00:08:12.486
That is an implementation of React Router,
right?

116
00:08:12.486 --> 00:08:14.445
We didn't really think about it.

117
00:08:14.445 --> 00:08:17.621
And that's why it's important to make
sure that you are declaring all those

118
00:08:17.621 --> 00:08:18.325
dependencies.

119
00:08:18.325 --> 00:08:21.728
Because it's not always clear to you
the difference between when one is getting

120
00:08:21.728 --> 00:08:24.942
unmounted remounted and when one is
simply getting new props passed to it.

121
00:08:24.942 --> 00:08:28.835
Right, depending on the library that
could be extracted away from you.

122
00:08:28.835 --> 00:08:32.195
So making sure that if you use it and

123
00:08:32.195 --> 00:08:37.040
it comes from the outside world, that it
is declared in the dependencies, right?

124
00:08:37.040 --> 00:08:41.840
Doing it does not hurt you, not doing
it could make you lose an afternoon.

125
00:08:41.840 --> 00:08:44.054
Nobody wants to lose an afternoon.

126
00:08:44.054 --> 00:08:45.494
So making sure.

127
00:08:45.494 --> 00:08:49.755
And that's kind of an example of
what happens when we miss it, Paul?

128
00:08:49.755 --> 00:08:51.350
&gt;&gt; I expect this to bite me in the future.

129
00:08:51.350 --> 00:08:55.530
So you said it was exclusive
deps is the library thing?

130
00:08:55.530 --> 00:09:00.181
&gt;&gt; Exhausted deps.
&gt;&gt; Exhausted, okay, cool.

131
00:09:00.181 --> 00:09:06.784
And, yeah a lot kind of pretty
canned ones will tell you about it,

132
00:09:06.784 --> 00:09:12.345
But yeah, having ESLint reinforce this for
you will help you.

133
00:09:13.590 --> 00:09:15.620
Sweet, so we've got that in place.

