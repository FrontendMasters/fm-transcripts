[00:00:00]
>> Becoming an engineering manager, let's talk about the common motivation for people. They show up in control, people think they're more in control. They think there's more money, they're prestige, bigger impacts, yeah, maybe or maybe not. Growth, and the challenge of doing it. A common motivation of people who come into engineering manager, control.

[00:00:28]
I'll be in charge, I'll be the shot caller for the team. The truth is, you have less control than you did before. Because here's the truth about dealing with people, and something that if you haven't thought about it until now, this is gonna blow your mind. You can't make anybody do anything, and you're, yeah, I can bribe somebody and they'll do something.

[00:00:57]
I'm, you still can't make them do anything, they're still making a choice. I can twist their arm and yeah, you can say injure them, I don't recommend doing that, but you can or you can threaten them. But you still can't make them do anything they're still making a choice there, sometimes it's a non choice, but you still can't make anybody do anything.

[00:01:18]
And this is the truth of dealing with people, is you have to convince them. You have to figure out what's their motivation and try to get them to see your perspective, and many other strategies. But you can't make anybody do anything. You're, well I can fire them, and I can threaten their job.

[00:01:36]
I'm, you can, but you still can't make them do it. They're gonna be, okay, see you, I'm gonna work across the street at your competitor.
>> And then do you wanna do that? Then it makes it harder to convince them in the future.
>> It's the nuclear option.

[00:01:55]

>> Right.
>> Yeah, and you're right. And the truth is you still can't make them do it. They could be, [LAUGH] all right, see you, give you the middle finger, walk out the door. And this is something you really have to understand, is you're not in control, you're shepherding people, you're guiding them.

[00:02:16]
But at the end of the day, people are making their independent people with their own backgrounds, their own way of thinking and seeing the world and they're making decisions without you. And that's something you really have to recognize. Probably, I mean, well, how how many of you have ever had a bad manager or a bad boss doesn't matter in fact tech?

[00:02:37]
Yeah, almost everybody. And probably one of the worst things they can do. And there's many ways of being a bad manager or a bad leader as we'll get into. But this one's probably one of the worst ones, is people that become a leader, be, I'm in charge, I'm gonna boss people around.

[00:02:53]
And you can for a time, like we said, but they're gonna leave. They're gonna underperform, they're gonna talk about you behind your back. And generally, your performance gonna get worse over time. And it drives people who are motivated by control, it drives them bonkers. I'm yelling at the team every day [LAUGH] and they're still not working any harder, why isn't this working?

[00:03:14]
And I've had plenty of experience with managers like that, just I wanna be in control. And the truth is, to be a good leader, you have to give up control and you have to accept that. And once you do, it changes your perspective on getting people to do things or showing them what they should do.

[00:03:29]
And the truth is, when it comes to software engineering, the software engineers have way more control than you do. You're not writing code generally, they are. So when you talk about control, who's actually doing the work here? It's other people, so being in charge is not a good motivation for being a software engineer.

[00:03:51]
And you are in charge to some degree, you do have to call shots, but if you're doing it for the control, you're not gonna do well. It may not show up immediately, but it will show up eventually. Money, people think managers and people managers get paid more, that is not the truth.

[00:04:12]
I won't say how much money I make, but I'm not the highest paid person on my team, and that's fun, I have.no problem with that at all. It's about value you provide the company, I have a team of really, really smart engineers, and they do a lot, and the business say they provide more value than I do.

[00:04:26]
That's okay, I'm totally fine with that. But there's this myth that once you become a manager, you're gonna make more money. Not true, it is not true at all. I'm fortunate to be able to set compensation and see market data for how much different roles get paid. And yes, software engineers are majors or somewhere in the middle there.

[00:04:46]
The truth is, though, as you go up, the salary bands are higher for becoming a VP or CTO, things like that. But again, the rarity of those roles is such that, what's it called? What's the math term, the expected value? Your expected value is actually better as a software engineer.

[00:05:01]
If you're saying, in the long term, I wanna make more money, that's my motivation, which is fine. We don't work for free, we've got bills to pay, we've got Ferraris to polish.
>> [LAUGH]
>> You're better off being a software engineer if you're just in it for the money.

[00:05:16]
And then again, all that expected value, there's just less roles, we talked about that earlier. And there's less job security, who in the latest rounds of the tech downturn that we've all been dealing with? Who are some of the first people to get laid off, is it software engineers?

[00:05:33]
It's managers, and then they consolidate teams under other managers. And that's the truth, the further up you go, the less job security you have. Every time there's a reorganization, or there's a new CTO in charge, a new VP of engineering. A lot of times what happens is they swap out all the people that report to them for other people that they know who match their leadership style.

[00:05:54]
And that's a risk you have, and when that happens, you have less roles available to you. So the motivation of money, it's not a strong one, everybody has their own, but it's just not true. And again, today comes as a shock, I'm just trying to share what I know and the truth about things.

[00:06:14]
Prestige, the title, engineering manager. Sounds good, looks good on LinkedIn. And people think what's perceived comes respects, and that's not true at all. Maybe externally, maybe there's things the world values other people's value. But the truth is, the title means nothing, to your team it just means that now you're the one setting competition.

[00:06:41]
There's a lot of responsibilities that come with the role, but doesn't mean they respect to you. You have to earn that, and it doesn't come with a title. And this is true for anywhere you go in your career, you have to earn people's respect, it doesn't come by default.

[00:06:52]
And the truth is when you're making this transition to engineering management, you start at zero. You are now the worst person on your team, where you are a senior software engineer or whatever role software engineer. You actually produced something you had skills that were valuable to the company, the mini become an engineering manager for the first time.

[00:07:11]
You're the lowest on the team, you know the least, about the role you should be doing, and it's important to be humble about that. It's something I didn't really think of in my transition was, I'm at zero again. And again, management is a role change, it is not better, it's not worse, it's a different role in software engineering.

[00:07:33]
So prestige, if your parents are proud, whatever. I think externally people look at, you're a manager, you must be up here. But the reality is you're just another person on the team, and that's why I tell my team all the time. My job is to make your life easier, to remove reduced friction, to give you guidance to set long term direction.

[00:07:54]
And to be the umbrella that keeps you all shielded from the business side and all the things you shouldn't have to worry about. But is there prestige there? I don't think so, I don't think a leader should think of themselves that way. Impact, I can make a difference.

[00:08:12]
This is true, I think this is fine motivation. It was actually one of my motivations to become a manager. You can make an impact, you will make an impact. And everybody's, a positive impact, I'm, yeah. Or a negative impact, so you don't think of that other side of.

[00:08:28]
The more impact you can have, the bigger the blast radius if you're wrong. It's something else to think about, you will make mistakes, I've made plenty of mistakes. And those mistakes are way more costly as an engineering manager. So, if you're, I wanna make more of a change, you can, but think about the risk that comes with that, of being wrong.

[00:08:52]
And the truth is the impacts that you will make, it's way less tangible. You know what I miss about software engineering? Is the binary nature of it's either it works or it doesn't. Sometimes I don't know why it works, sometimes I don't know why it doesn't work, somewhere between.

[00:09:08]
And there's such a purity and beauty in that, in solving these hard problems, closing a ticket, pushing code, and you see it reflecting in production. You don't get any of that as an engineering manager. Your successes are based on the team, the failures are yours and that's just how it works as a good leader.

[00:09:28]
So any impact you have is way less tangible. Even now as doing this for coming up on three years, it takes a lot of looking back to see where we started as a team, when I first became a manager and where we are today. To be, yeah, I did do that.

[00:09:45]
But it's only looking back, when you're in the middle of it, you don't see it, you won't feel it. Sometimes you get lucky and you have a good team meeting with teams fighting. You're, okay, this feels good, but those are very short lives. In general, all the impact you have is less tangible, and you can't actually prove it.

[00:10:01]
You ever ship the big piece of software, and you're really proud of it, and maybe hopefully your manager is, great job team? That manager there is questioning, did they actually do anything, cuz they didn't write any code? That's something you have to accept as a manager, is your impact is less tangible, and you have to just believe that you're doing something, cuz you won't see it.

[00:10:20]
There's no metrics saying, you did something, and that impact takes a long time to see. Like I said, quarters and years it takes to see that impact. Most, and this is why the general recommendation for becoming a software engineering manager is you have to do it for at least two years.

[00:10:41]
If you do it for a year, you're gonna be, I'm not really doing anything, this doesn't feel good, cuz you won't see it. It takes about two years to kind of understand what you're doing finally and see, yeah, we are shipping things better. The team is talking better, our partners are happier, we're moving the business metrics we need to.

[00:11:00]
But that takes a very long time to see, and that's probably one of the hardest parts of this transition. If you're used to shipping code, solving things, really binary, easy to see impacting decisions. That's gone as an engineer manager. And truth is, the bigger the impact, the more scrutiny you have on your role.

[00:11:20]
If your team is arguing, they don't show prepared for meetings, people aren't happy with them. Even individuals in your team, that's your problem now. They're not gonna be but so and so. I know they have personal problems and they're arguing with their partner a lot, they're not sleeping well.

[00:11:40]
And that's why they're showing up poorly in meetings and not delivering things. Nobody says that about the person, they look to you cuz your team is your responsibility. So you have a lot more scrutiny, but you also have more impact, so it is a trade-off. Just things to think about when you think about what are your motivations.

[00:12:00]
Mentoring growing people, I love growing people. There's very little as satisfying as seeing someone struggling with something, you're coaching and mentoring. And then few months, maybe a couple of years later, they're much better at it. A common one is public speaking, people usually shy away, especially software engineers, from public speaking.

[00:12:21]
And then that moment when they get up there and present, and you're, is this the same person? It's so rewarding, but that takes so much time to see, people don't change in a day. If you have a bad habit now, how long does it take to drop a bad habit?

[00:12:37]
Could take years, that's the truth about growing people, is that will take years and you don't control it. You can't, let's go back to the beginning, you can't make anybody do anything. You're, hey, Jane, you're really argumentative in meetings, and you have great ideas, but people don't wanna listen to you, and they're, yeah, I hear that.

[00:13:02]
And then a week or two later, same thing, a couple months later, same thing. And you're coaching and mentoring them, but it's not changing. And that can be really frustrating, cuz you're, it's such an obvious problem, if you fix it, you'd be up here. But you can't control that.

[00:13:18]
And that's the truth about growing and mentoring people, is it's rewarding, but it's also challenging. But to me it is one of the most satisfying aspects of the position you can have as an engineering manager. And if your motivation is a challenge, that's a good motivation, [LAUGH] it's a challenge.

[00:13:37]
You will always be learning something new, always, cuz people, they're all different, people don't fit into a box. So if you're in it for the challenge it'll be a challenge [LAUGH]. And if you're not being challenged, you're probably not doing it right. You should be challenging yourself and challenging your team and challenging your partners.

