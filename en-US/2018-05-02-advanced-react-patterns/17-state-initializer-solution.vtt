WEBVTT

1
00:00:00.630 --> 00:00:03.600
&gt;&gt; Kent C. Dodds: Let's see.
Probably the best place to start is

2
00:00:05.870 --> 00:00:08.330
with our initialization here.

3
00:00:08.330 --> 00:00:14.460
So, when we initialize the state,
we're initializing it to false by default,

4
00:00:14.460 --> 00:00:17.870
but now we want to be able to
have people control that so

5
00:00:17.870 --> 00:00:20.489
we say this.props.initialOn.

6
00:00:22.150 --> 00:00:23.840
Okay, so now people can initialize it.

7
00:00:23.840 --> 00:00:28.020
That actually, that's all that we need
to do to get it initialized the way that

8
00:00:29.060 --> 00:00:32.520
users of this want to have it initialized.

9
00:00:32.520 --> 00:00:34.400
But because we're accepting
this from prompts,

10
00:00:34.400 --> 00:00:36.820
there are some use cases where they're
not gonna wanna to initialize it.

11
00:00:36.820 --> 00:00:38.340
So we should have a default.

12
00:00:38.340 --> 00:00:43.940
So we'll add static default prompts, and

13
00:00:43.940 --> 00:00:47.860
this will be initial on will be false.

14
00:00:49.180 --> 00:00:54.830
In addition, we are now,
we'll do that later.

15
00:00:54.830 --> 00:00:56.730
So, we've got that then.

16
00:00:56.730 --> 00:00:58.938
And we've got this done.

17
00:00:58.938 --> 00:01:04.450
And now Cody the koala bear
wants us to add a reset method,

18
00:01:04.450 --> 00:01:08.100
so that people can reset
within the render prompt.

19
00:01:08.100 --> 00:01:11.572
So we’ll say reset = this function,

20
00:01:11.572 --> 00:01:16.270
and instead of here,
we’ll say this.setstate.

21
00:01:16.270 --> 00:01:20.489
And we can say on is this.props.initialOn.

22
00:01:21.850 --> 00:01:30.274
And then in the callback, we'll call
this.props.onReset(this.state.on).

23
00:01:30.274 --> 00:01:31.780
Okay, cool.

24
00:01:31.780 --> 00:01:36.940
And now we need to add that to our,
right here.

25
00:01:36.940 --> 00:01:39.308
Where Cody the koala bear is
faithfully waiting for us.

26
00:01:39.308 --> 00:01:42.055
Restart, reset.

27
00:01:43.891 --> 00:01:44.570
&gt;&gt; Kent C. Dodds: Great.

28
00:01:44.570 --> 00:01:45.560
That passes everything.

29
00:01:47.570 --> 00:01:50.106
So now folks can initialize it,
and then within the render prompt,

30
00:01:50.106 --> 00:01:51.630
they can actually reset it themselves.

31
00:01:51.630 --> 00:01:56.284
And then,
&gt;&gt; Kent C. Dodds: Yeah.

32
00:01:56.284 --> 00:02:00.990
And so, this is totally fine if
we just have one item of state.

33
00:02:00.990 --> 00:02:02.290
It's not a whole lot.

34
00:02:02.290 --> 00:02:07.480
But those two objects
are totally identical, and

35
00:02:07.480 --> 00:02:10.910
if it's a bigger object, then it's
kind of annoying to keep them in sync.

36
00:02:10.910 --> 00:02:13.504
So what I like to do
is I create an initial

37
00:02:13.504 --> 00:02:17.445
state
&gt;&gt; Kent C. Dodds: Property on

38
00:02:17.445 --> 00:02:18.530
the instance.

39
00:02:18.530 --> 00:02:24.590
And then I reference this .initial state,
and then stick that in there too.

40
00:02:26.250 --> 00:02:30.070
What I like about that is it not only,
like, shortens the amount of code,

41
00:02:30.070 --> 00:02:31.300
which I don't care about so much.

42
00:02:31.300 --> 00:02:36.190
But it communicates what we're trying
to accomplish, which I do care about.

43
00:02:36.190 --> 00:02:40.400
It communicates that this reset
function is setting state to

44
00:02:40.400 --> 00:02:42.260
whatever the initial state was.

45
00:02:42.260 --> 00:02:43.690
And so, any time we decide, okay,

46
00:02:43.690 --> 00:02:47.130
we're gonna add a new item of state,
we'll update this initial state and

47
00:02:47.130 --> 00:02:52.250
then the reset will work as expected
automatically out of the box.

