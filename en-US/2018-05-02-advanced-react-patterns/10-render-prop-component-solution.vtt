WEBVTT

1
00:00:00.270 --> 00:00:04.537
&gt;&gt; Kent C. Dodds: Yeah, let's go ahead and
look at this problem and

2
00:00:04.537 --> 00:00:08.510
solution for
making render prop components.

3
00:00:09.830 --> 00:00:12.864
So I'll run the tests with npm run test.

4
00:00:12.864 --> 00:00:16.656
And swap the usage to
the exercise version.

5
00:00:16.656 --> 00:00:18.380
We get our error.

6
00:00:18.380 --> 00:00:22.450
It's unable to find a label
with the text of custom button.

7
00:00:22.450 --> 00:00:26.450
And that's because despite the fact that

8
00:00:26.450 --> 00:00:31.560
we are rendering a button with that label,
it can't find it because

9
00:00:31.560 --> 00:00:35.170
our render is actually just
returning the switch component.

10
00:00:35.170 --> 00:00:40.387
So let's work through this step by step so
we can really get

11
00:00:40.387 --> 00:00:45.397
an understanding of how
the render prop pattern works.

12
00:00:45.397 --> 00:00:49.960
So I'm actually gonna go ahead and
remove this just to,

13
00:00:49.960 --> 00:00:53.370
oops, get rid of some additional stuff.

14
00:00:53.370 --> 00:00:58.590
So the render prop pattern is,
I've found to be surprisingly simple.

15
00:00:58.590 --> 00:01:02.600
And it's a lot simpler than
you would think of it first.

16
00:01:02.600 --> 00:01:05.270
So what I'm gonna do to
illustrate this though,

17
00:01:05.270 --> 00:01:08.160
is I'm gonna rename this render function.

18
00:01:08.160 --> 00:01:10.690
I'm gonna call it render switch.

19
00:01:10.690 --> 00:01:13.590
And then I'm gonna make
an actual render function.

20
00:01:13.590 --> 00:01:16.927
And this is going to
return this.renderSwitch.

21
00:01:16.927 --> 00:01:21.113
Okay, regular JavaScript stuff,
nothing fancy going on here.

22
00:01:21.113 --> 00:01:24.140
You might be looking at that and
like, okay, that was pointless.

23
00:01:24.140 --> 00:01:26.320
But hold on, stick with me.

24
00:01:26.320 --> 00:01:31.138
So let's go ahead and,
instead of using this inside of

25
00:01:31.138 --> 00:01:35.974
our render switch function,
let's use attributes.

26
00:01:35.974 --> 00:01:37.330
So we'll pass in options.

27
00:01:37.330 --> 00:01:43.690
And make this function a pure function
that accepts arguments, returns JSX.

28
00:01:43.690 --> 00:01:46.260
Returns React elements.

29
00:01:46.260 --> 00:01:49.250
So we're gonna need the on and the toggle.

30
00:01:49.250 --> 00:01:52.300
So we'll just get rid of that,
and we'll get rid of that.

31
00:01:52.300 --> 00:01:52.893
Okay, cool.

32
00:01:52.893 --> 00:01:56.300
So now things are still, actually.

33
00:01:56.300 --> 00:01:59.780
And we'll need to provide those,
so, on is this.state.on.

34
00:01:59.780 --> 00:02:02.728
And toggle is this.toggle.

35
00:02:02.728 --> 00:02:09.921
And now things are equally broken,
so so good so far [LAUGH].

36
00:02:09.921 --> 00:02:13.577
If we look at the finished version,
though,

37
00:02:13.577 --> 00:02:17.340
it still functions the way
that it did before.

38
00:02:17.340 --> 00:02:21.640
So the next thing that is kind of
interesting is because this is now a pure

39
00:02:21.640 --> 00:02:24.660
function, it doesn't use
the instance inside.

40
00:02:24.660 --> 00:02:27.440
You don't see this inside of here.

41
00:02:27.440 --> 00:02:35.170
When a method on a class doesn't use this,
then it doesn't need to be on the class.

42
00:02:35.170 --> 00:02:38.120
So you can make it a static property.

43
00:02:38.120 --> 00:02:39.828
So now I can say.

44
00:02:39.828 --> 00:02:45.406
And actually, we'll have to make it
an assignment to an arrow function.

45
00:02:45.406 --> 00:02:48.230
There we go.

46
00:02:48.230 --> 00:02:51.532
And then we can say, toggle.renderSwitch.

47
00:02:51.532 --> 00:02:54.660
Okay, it's still just as
broken as it was before, but

48
00:02:54.660 --> 00:02:57.610
it still actually functions there.

49
00:02:57.610 --> 00:03:01.560
Okay, so does it really need
to be on the toggle class?

50
00:03:01.560 --> 00:03:07.687
Well, no, we can actually make
this a const and move it out.

51
00:03:07.687 --> 00:03:09.390
And then just use render switch.

52
00:03:10.650 --> 00:03:13.293
Okay, so
we're incrementally getting closer and

53
00:03:13.293 --> 00:03:15.819
closer to what we're
supposed to be doing here.

54
00:03:15.819 --> 00:03:20.932
It's a pure function, so it doesn't need
to be a part of the toggle instance or

55
00:03:20.932 --> 00:03:23.040
even a part of the toggle class.

56
00:03:23.040 --> 00:03:25.745
It's just an extra function
that is responsible for

57
00:03:25.745 --> 00:03:27.473
the rendering of our component.

58
00:03:27.473 --> 00:03:31.433
And all we have to do is pass in some
whatever that function needs to do

59
00:03:31.433 --> 00:03:34.220
its rendering so
that it can be a pure function.

60
00:03:35.350 --> 00:03:39.490
So yeah, still equally functional and
broken at the same time, ha.

61
00:03:40.630 --> 00:03:44.273
Okay, great.
So what if instead of referencing

62
00:03:44.273 --> 00:03:49.026
renderSwitch inside of
the scope of this module,

63
00:03:49.026 --> 00:03:52.884
what if we accepted it as a prop instead?

64
00:03:52.884 --> 00:03:55.232
this.props.renderSwitch.

65
00:03:56.270 --> 00:04:02.000
And then in our usage, we'll just
pretend this isn't here for a second.

66
00:04:05.160 --> 00:04:07.830
We'll return Toggle onToggle.

67
00:04:10.970 --> 00:04:14.920
And then the renderSwitch prop,
what should we assign that to?

68
00:04:14.920 --> 00:04:18.641
Well, let's just continue
with our iterating on this.

69
00:04:18.641 --> 00:04:20.710
We'll assign it to the same
thing we had before.

70
00:04:20.710 --> 00:04:25.110
So it should be functionally
equivalent to what we had before.

71
00:04:25.110 --> 00:04:27.960
We have not changed any
of the functionality

72
00:04:27.960 --> 00:04:29.680
from the very start of this component.

73
00:04:29.680 --> 00:04:33.070
It functions exactly
the same as it did before.

74
00:04:34.190 --> 00:04:36.830
Okay, well, this is a prop.

75
00:04:36.830 --> 00:04:38.810
And children is actually a prop.

76
00:04:38.810 --> 00:04:40.730
And so we could change this to childrren.

77
00:04:41.950 --> 00:04:46.978
And then if you recall earlier,
somebody asked a question about

78
00:04:46.978 --> 00:04:52.669
the React.chilrdren.map and
why would you use that over array.map.

79
00:04:52.669 --> 00:04:57.582
Well, that's because the children
prop will either be an array of all

80
00:04:57.582 --> 00:05:02.934
the items that you pass it or it will
just be the one item that you've passed.

81
00:05:02.934 --> 00:05:06.315
And so in this case, we're actually
explicitly passing a single item, so

82
00:05:06.315 --> 00:05:07.775
we can call it directly, okay.

83
00:05:07.775 --> 00:05:10.610
So we're just passing render switch.

84
00:05:11.790 --> 00:05:15.067
And that will still
function as it did before.

85
00:05:15.067 --> 00:05:20.554
And actually, what's interesting is
that this is now using render props.

86
00:05:20.554 --> 00:05:26.355
So the rendering responsibility
is now under the ownership

87
00:05:26.355 --> 00:05:32.230
of the user and
not the component implementation.

88
00:05:32.230 --> 00:05:34.229
And so at this point I can refactor this.

89
00:05:35.400 --> 00:05:40.190
Because children is the implicit
prop between the opening and

90
00:05:40.190 --> 00:05:45.347
closing of your JSX.
&gt;&gt; Kent C. Dodds: That is functionally

91
00:05:45.347 --> 00:05:49.490
equivalent to what we just had.
&gt;&gt; Kent C. Dodds: Okay, cool.

92
00:05:49.490 --> 00:05:54.520
So often with render props, you're
gonna see, you're not gonna actually

93
00:05:54.520 --> 00:05:59.100
declare the function outside,
you'll have it declared inline.

94
00:05:59.100 --> 00:06:03.690
So we could just take this,
cut it out and stick it right there.

95
00:06:06.090 --> 00:06:07.989
Okay, so it's still broken.

96
00:06:07.989 --> 00:06:12.290
But let's just, really quick,
switch to our other implementation.

97
00:06:12.290 --> 00:06:17.342
And now it works.
&gt;&gt; Kent C. Dodds: I'm

98
00:06:17.342 --> 00:06:21.210
seeing some head nods, so that's good.

99
00:06:21.210 --> 00:06:24.390
So we didn't actually do a whole lot.

100
00:06:25.510 --> 00:06:31.300
Like the whole purpose of this is to say,
hey, I'll be in charge of your state.

101
00:06:31.300 --> 00:06:32.860
You be in charge of rendering.

102
00:06:36.900 --> 00:06:41.217
And what's really cool about this, and
when I take a step back and think, okay,

103
00:06:41.217 --> 00:06:43.770
how does this pattern
compare to other things?

104
00:06:43.770 --> 00:06:48.472
If I can create another component that's
built on top of this one that exposes

105
00:06:48.472 --> 00:06:54.370
the same API as the original, that's when
I know I've got a really good pattern.

106
00:06:54.370 --> 00:06:59.863
And so I could say [INAUDIBLE], or
we'll just do a function, OriginalToggle.

107
00:06:59.863 --> 00:07:04.490
And this'll take the same defaults here.

108
00:07:06.180 --> 00:07:08.840
And we'll just return.

109
00:07:08.840 --> 00:07:11.460
Actually here we don't need the defaults,
we'll just say props.

110
00:07:12.770 --> 00:07:16.582
And we'll return Toggle.

111
00:07:16.582 --> 00:07:22.970
And inside of here we'll take our on and
toggle.

112
00:07:24.240 --> 00:07:25.188
Destructure those off.

113
00:07:25.188 --> 00:07:28.505
And then render this switch.

114
00:07:28.505 --> 00:07:29.870
Oops, not a switch expression.

115
00:07:32.250 --> 00:07:39.290
With on is on and on click is toggle.
&gt;&gt; Kent C. Dodds: And

116
00:07:39.290 --> 00:07:42.540
these props,
we'll just spread across here.

117
00:07:44.040 --> 00:07:45.770
And then I can actually use.

118
00:07:45.770 --> 00:07:48.830
I'll switch this usage here, return

119
00:07:50.200 --> 00:07:56.204
toggle.
&gt;&gt; Kent C. Dodds: And

120
00:07:56.204 --> 00:08:00.700
we have the same original implementation.

121
00:08:00.700 --> 00:08:04.590
So if you don't like
the verbosity of a render prop,

122
00:08:04.590 --> 00:08:08.670
you just make another component
that uses that render prop, and

123
00:08:08.670 --> 00:08:14.440
then you can use the nice, cleaner,
smaller API that you're looking for.

124
00:08:14.440 --> 00:08:17.090
Without sacrificing
the flexibility that render props

125
00:08:17.090 --> 00:08:21.463
provide.
&gt;&gt; Kent C. Dodds: And

126
00:08:21.463 --> 00:08:23.770
this is why I love render props.

127
00:08:23.770 --> 00:08:27.910
Because they serve as a really good
foundation for a component that wants to

128
00:08:27.910 --> 00:08:33.460
share, to control its logic, and
allow total flexibility of the UI.

