WEBVTT

1
00:00:00.024 --> 00:00:02.980
&gt;&gt; Kent C. Dodds: All right, so
let's do this exercise nine,

2
00:00:02.980 --> 00:00:06.650
leaning about state reducers and types.

3
00:00:06.650 --> 00:00:07.921
So I'm gonna run the test.

4
00:00:10.715 --> 00:00:14.710
&gt;&gt; Kent C. Dodds: And cool,
let's jump into this exercise.

5
00:00:14.710 --> 00:00:21.550
So we want to add a type to
the changes objects that we passed.

6
00:00:21.550 --> 00:00:24.560
So that's simple enough,

7
00:00:24.560 --> 00:00:29.030
because the changes is what
we get from internalSetState.

8
00:00:29.030 --> 00:00:30.830
So here, I'm gonna add a type.

9
00:00:32.240 --> 00:00:34.629
And this will be, we'll call it reset.

10
00:00:37.141 --> 00:00:40.180
&gt;&gt; Kent C. Dodds: And
we'll spread the rest of those.

11
00:00:40.180 --> 00:00:41.540
Whatever in on internalState,

12
00:00:41.540 --> 00:00:48.040
we'll just add this object design
thing to have the type reset.

13
00:00:48.040 --> 00:00:52.270
And then we'll also add a type here for
toggle.

14
00:00:52.270 --> 00:00:53.940
Really, it doesn't
matter what you call it.

15
00:00:53.940 --> 00:00:57.980
I'm gonna show you a slightly better
way to do this here in a second.

16
00:00:57.980 --> 00:01:03.109
But yeah, just adding these types
to the state that we're setting.

17
00:01:04.610 --> 00:01:06.740
Let me get rid of Cody the Koala here.

18
00:01:07.740 --> 00:01:14.272
Now when we call toggle,
we actually want to,

19
00:01:14.272 --> 00:01:18.934
let's see,
&gt;&gt; Kent C. Dodds: Yeah,

20
00:01:18.934 --> 00:01:22.530
this is where things are gonna get
a little bit more complicated.

21
00:01:22.530 --> 00:01:26.290
Cuz down here we're calling
toggle with the type,

22
00:01:26.290 --> 00:01:30.830
because we wanna have our own custom type,
so we can key off of that as a user.

23
00:01:30.830 --> 00:01:35.370
And so up here, toggle needs to
be able to accept an object.

24
00:01:36.380 --> 00:01:41.320
And so this is gonna be an object that
defaults to just an empty object,

25
00:01:41.320 --> 00:01:43.350
and then it will have a type.

26
00:01:43.350 --> 00:01:47.037
And we'll just have
that default to toggle,

27
00:01:47.037 --> 00:01:50.252
then we can actually use that instead.

28
00:01:50.252 --> 00:01:55.310
Okay, cool, so now we're passing
this type into our internalSetState.

29
00:01:58.040 --> 00:02:02.260
And we don't actually want
the type to be part of state.

30
00:02:02.260 --> 00:02:05.920
Because updating the,
let's say that we call SetState, but

31
00:02:05.920 --> 00:02:08.620
we're not actually changing any state,
but we change the type.

32
00:02:08.620 --> 00:02:10.380
That's gonna cause a re-render.

33
00:02:10.380 --> 00:02:13.160
It's totally unnecessary if none
of the actual states change.

34
00:02:13.160 --> 00:02:18.240
So let's keep type off of our state,
and we'll just pull it off.

35
00:02:18.240 --> 00:02:23.310
So we'll say type, and
I'm gonna call that ignoredType.

36
00:02:23.310 --> 00:02:25.427
And then we'll pull
the rest of those changes.

37
00:02:25.427 --> 00:02:32.800
So remainingChanges, and
that will be reducedChanges.

38
00:02:32.800 --> 00:02:34.870
I can't remember what I called this,
but remainingChanges is good.

39
00:02:37.293 --> 00:02:41.495
&gt;&gt; Kent C. Dodds: Okay, cool, and then
what we'll process is the remainingChanges

40
00:02:41.495 --> 00:02:43.420
rather than the reduced ones.

41
00:02:45.270 --> 00:02:48.184
Okay, and that passes everything.

42
00:02:50.557 --> 00:02:55.014
&gt;&gt; Kent C. Dodds: What questions do you
have with those, with this exercise?

43
00:03:00.303 --> 00:03:03.808
&gt;&gt; Kent C. Dodds: Clearly many [LAUGH].

44
00:03:03.808 --> 00:03:06.940
Okay, I totally forgot,
we didn't do our air squats.

45
00:03:06.940 --> 00:03:08.540
We'll do that after this exercise.

46
00:03:08.540 --> 00:03:09.147
That explains it.

47
00:03:09.147 --> 00:03:11.431
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Kent C. Dodds: That's why you're all so

48
00:03:11.431 --> 00:03:12.920
tired looking.

49
00:03:12.920 --> 00:03:14.720
We didn't do our exercise.

50
00:03:14.720 --> 00:03:20.500
Okay, so one thing that I wanna
change about this is, any time I have

51
00:03:20.500 --> 00:03:25.320
something like this where I'm using
a string to key off of some type or

52
00:03:25.320 --> 00:03:28.610
something, I like to simulate
an enum in JavaScript.

53
00:03:28.610 --> 00:03:33.029
Which we don't really have enums,
unless you're using TypeScript, but

54
00:03:33.029 --> 00:03:34.930
I like to kind of simulate that.

55
00:03:34.930 --> 00:03:42.140
So what I like to do is,
I'll add a static stateChangeTypes.

56
00:03:43.690 --> 00:03:46.310
And then I'll have toggle as one type.

57
00:03:46.310 --> 00:03:47.296
And I'll just call that toggle.

58
00:03:47.296 --> 00:03:51.226
Whatever you wanna call it,
you could, it doesn't really matter.

59
00:03:51.226 --> 00:03:55.270
That's the nice thing about using enums,
is it doesn't matter what the value is.

60
00:03:55.270 --> 00:03:56.050
And then reset.

61
00:03:59.414 --> 00:04:04.174
&gt;&gt; Kent C. Dodds: And
then instead of saying type is reset,

62
00:04:04.174 --> 00:04:09.755
we'd say Toggle.stateChangeTypes.reset.

63
00:04:11.740 --> 00:04:19.033
And then the type here will be
Toggle.stateChangeTypes.toggle.

64
00:04:25.696 --> 00:04:29.096
&gt;&gt; Kent C. Dodds: Cool, so
one other thing that I just realized,

65
00:04:29.096 --> 00:04:34.120
that I guess I don't have a test for,
because I forgot to do this part.

66
00:04:35.640 --> 00:04:40.384
But now when I click on,
oops, there's my Twitter.

67
00:04:40.384 --> 00:04:43.040
Where'd my thing go?

68
00:04:43.040 --> 00:04:44.200
There you go.

69
00:04:44.200 --> 00:04:49.140
When I click on this, it is

70
00:04:49.140 --> 00:04:53.730
going to be passing the event
to the on toggle function.

71
00:04:53.730 --> 00:04:58.175
So we're gonna callAll onClick, and
then this.toggle with the event.

72
00:04:58.175 --> 00:05:01.420
And we're gonna pull the type off of that.

73
00:05:01.420 --> 00:05:03.200
So it's not quite right.

74
00:05:03.200 --> 00:05:07.268
So what we're gonna do is, instead we'll
provide a function that calls this.toggle,

75
00:05:07.268 --> 00:05:08.961
and then we'll accept the default.

76
00:05:12.682 --> 00:05:16.718
&gt;&gt; Kent C. Dodds: So
we're not passing something unexpected.

77
00:05:16.718 --> 00:05:19.450
Okay, and that's it.

78
00:05:19.450 --> 00:05:23.900
So the one other nice thing about using
state change types instead of just

79
00:05:23.900 --> 00:05:27.500
strings, is because now you can actually
add that to your documentation,

80
00:05:27.500 --> 00:05:31.392
say, if you want to change state
based off of certain actions and

81
00:05:31.392 --> 00:05:34.440
use Toggle.stateChangeTypes.

82
00:05:34.440 --> 00:05:42.771
And then we could say, if changes.type
= Toggle.stateChangeTypes.toggle,

83
00:05:42.771 --> 00:05:46.464
then we'll return (on: false).

84
00:05:46.464 --> 00:05:51.139
And now we can never toggle it
on our test break and stuff.

85
00:05:54.180 --> 00:05:58.255
And so it gives the consumers a lot
of power to be able to know, okay,

86
00:05:58.255 --> 00:06:01.700
I know that the state is changing,
but I don't know why.

87
00:06:01.700 --> 00:06:03.990
Well, now we know why,
because we have this type.

88
00:06:03.990 --> 00:06:07.010
And then we can key it
off of stateChangeTypes.

89
00:06:07.010 --> 00:06:09.885
And then people could also
console log stateChangeTypes.

90
00:06:09.885 --> 00:06:15.345
Or you could add flow type or
type scripts to inform people

91
00:06:15.345 --> 00:06:20.713
what's available,
what types of changes can happen.

92
00:06:24.544 --> 00:06:27.970
&gt;&gt; Kent C. Dodds: So
Adrian asked a question in the chat.

93
00:06:27.970 --> 00:06:29.780
I've got to get rid of this thing.

94
00:06:31.530 --> 00:06:36.550
Right up here,
asking if there was a reason that we

95
00:06:37.800 --> 00:06:40.600
destructured on this new line
rather than just right here.

96
00:06:40.600 --> 00:06:43.868
Not really,
we could just do that just as easily.

97
00:06:43.868 --> 00:06:48.540
It'll be effectively the same.

98
00:06:48.540 --> 00:06:52.310
I just kept it separate so you know
every single step of what's going on.

99
00:06:52.310 --> 00:06:55.660
With the map function thing,
I think it looks so much cleaner.

100
00:06:55.660 --> 00:06:59.370
But yeah,
you can do it however you like that.

101
00:07:00.830 --> 00:07:03.564
Feel free to do all sorts of things.

102
00:07:03.564 --> 00:07:06.350
Let's just combine this right there,
we'll just get rid of that.

103
00:07:08.070 --> 00:07:11.170
Yeah, that's what's I'm talking about.

104
00:07:11.170 --> 00:07:12.520
Come on, prettier, thank you.

105
00:07:13.520 --> 00:07:15.930
Yeah, prettier can't make
ugly code look pretty.

106
00:07:15.930 --> 00:07:18.380
It's just, it is ugly, so.

