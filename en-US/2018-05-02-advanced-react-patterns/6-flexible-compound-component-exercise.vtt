WEBVTT

1
00:00:00.090 --> 00:00:03.880
&gt;&gt; Kent C. Dodds: Great,
let's move on to our next exercise.

2
00:00:03.880 --> 00:00:07.350
So I'm gonna go ahead and reset, hard.

3
00:00:07.350 --> 00:00:13.075
Just get everything back in order,
and we'll pull up exercise three.

4
00:00:13.075 --> 00:00:17.210
This is addressing a problem
with compound components.

5
00:00:17.210 --> 00:00:21.041
So this usage looks almost the same,

6
00:00:21.041 --> 00:00:26.050
except there's a slight difference now.

7
00:00:26.050 --> 00:00:32.360
We have this div breaking up our
perfect compound component structure.

8
00:00:32.360 --> 00:00:38.570
And if you run the app and
go to the Flexible Compound Components and

9
00:00:38.570 --> 00:00:41.770
click here, you'll see that you
can actually toggle the button.

10
00:00:41.770 --> 00:00:42.870
So why is that happening?

11
00:00:42.870 --> 00:00:46.370
Well, the button is toggled when
it gets an on prop set to true and

12
00:00:46.370 --> 00:00:48.550
then an on prop set to false.

13
00:00:48.550 --> 00:00:51.060
And then it also caused the on

14
00:00:53.410 --> 00:00:59.310
toggle when it's passed
the toggle function in on click.

15
00:00:59.310 --> 00:01:01.180
Well, it's not actually passed
either of those things.

16
00:01:01.180 --> 00:01:06.390
And you'll actually see
a warning that we saw similar

17
00:01:06.390 --> 00:01:13.020
with the span where we're passing
a non-boolean attribute to our div.

18
00:01:13.020 --> 00:01:17.395
So what's happening is
the React.Children.map

19
00:01:17.395 --> 00:01:21.470
function will only see
the top level elements.

20
00:01:21.470 --> 00:01:24.290
It does'Â´t see any of the things
that those things rendered.

21
00:01:24.290 --> 00:01:28.330
And so we're providing
the right props to these two.

22
00:01:28.330 --> 00:01:32.599
But we're passing the props that are
supposed to go to the switch to the button

23
00:01:32.599 --> 00:01:33.331
to this div.

24
00:01:33.331 --> 00:01:35.956
And so how do we solve this problem?

25
00:01:35.956 --> 00:01:39.610
Well, it used to be
a little more complicated,

26
00:01:39.610 --> 00:01:44.370
but now it is really nice because
we have the new context API.

27
00:01:44.370 --> 00:01:47.930
And we clearly obviously
want to be on the latest, so

28
00:01:47.930 --> 00:01:51.060
you'll be using the new context
API to solve this problem.

29
00:01:51.060 --> 00:01:56.750
It is gonna be a little bit of extra code
for each one of our static components.

30
00:01:56.750 --> 00:02:01.310
Our compound components are gonna
be using the context consumer.

31
00:02:01.310 --> 00:02:03.193
And at the top of the exercise,

32
00:02:03.193 --> 00:02:06.680
I give you kind of an example
of how to use the context API.

33
00:02:06.680 --> 00:02:11.523
And you're gonna create your
own toggle context, and

34
00:02:11.523 --> 00:02:16.366
then use the consumer inside
of your static methods and

35
00:02:16.366 --> 00:02:20.180
then the producer inside of your render.

36
00:02:20.180 --> 00:02:24.370
So all this stuff is gonna go away and
be replaced by toggle context provider.

37
00:02:25.920 --> 00:02:31.720
The tricky thing is the provider needs to
also provide, as part of the value, this

38
00:02:31.720 --> 00:02:37.100
toggle function, so the button can operate
and pull that out from the context.

39
00:02:37.100 --> 00:02:40.850
So I've given you a little tip here
of what you're supposed to do.

40
00:02:40.850 --> 00:02:44.420
And maybe you can play around with it and
figure out why you have to do that.

