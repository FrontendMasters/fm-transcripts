WEBVTT

1
00:00:00.008 --> 00:00:02.172
&gt;&gt; Kent C. Dodds: Prop collections.

2
00:00:02.172 --> 00:00:06.330
[COUGH] This is actually very
similar to the next exercise,

3
00:00:06.330 --> 00:00:08.670
which is called prop getters.

4
00:00:08.670 --> 00:00:13.040
And so we'll probably only
do one of these exercises.

5
00:00:13.040 --> 00:00:18.380
I think we will do,
let's do prop collections,

6
00:00:18.380 --> 00:00:20.470
and then I'll show you prop getters.

7
00:00:22.520 --> 00:00:25.800
So the situation here is we've got

8
00:00:26.830 --> 00:00:32.300
two mechanisms for toggling the component.

9
00:00:32.300 --> 00:00:36.890
And they share similar props,
they're both gonna have

10
00:00:36.890 --> 00:00:41.311
an area expanded on these and
they're both gonna have an onClick.

11
00:00:41.311 --> 00:00:45.663
And so sometimes when you're
creating a render prop components,

12
00:00:45.663 --> 00:00:51.337
there are certain collection of props that
make sense, or certain use cases, certain

13
00:00:51.337 --> 00:00:56.330
things that people are going to render
that will always need certain props.

14
00:00:56.330 --> 00:00:59.060
And so you can provide useful

15
00:01:00.340 --> 00:01:04.600
collections of props that people can just
apply to the thing that they render.

16
00:01:04.600 --> 00:01:08.430
Maybe a better example
of this is in Downshift,

17
00:01:08.430 --> 00:01:10.460
where we're actually using prompt getters.

18
00:01:10.460 --> 00:01:16.070
But the same idea applies,
if we just look at the example here.

19
00:01:16.070 --> 00:01:19.860
Pretty much every auto complete
is gonna have an input.

20
00:01:19.860 --> 00:01:22.801
And so we have this collection of
props that we want you to apply to

21
00:01:22.801 --> 00:01:24.110
the input that you render.

22
00:01:24.110 --> 00:01:29.095
Cuz once we leave the ownership
of the UI we are not

23
00:01:29.095 --> 00:01:32.935
the ones applying props to things anymore,
you have to be responsible for that.

24
00:01:32.935 --> 00:01:37.345
But for us to wire your input to
the internal state of downshift,

25
00:01:37.345 --> 00:01:41.685
and all the quick handlers, and
whatever else that we need,

26
00:01:41.685 --> 00:01:45.265
we need you to apply those props for us.

27
00:01:45.265 --> 00:01:49.615
Also there's getItemProps, so
every item needs to have certain props for

28
00:01:49.615 --> 00:01:51.870
accessibility and stuff like that.

29
00:01:51.870 --> 00:01:55.020
So that's the basic idea
of prop collections.

30
00:01:55.020 --> 00:01:59.580
Cuz it's just a useful feature to provide

31
00:01:59.580 --> 00:02:04.430
a collection of props that you'd
normally use for certain use cases.

32
00:02:05.570 --> 00:02:09.250
Normally, you could actually accomplish
those use cases without these

33
00:02:09.250 --> 00:02:10.300
collections of props.

34
00:02:11.390 --> 00:02:14.590
Your render prop should
actually pass all the state and

35
00:02:14.590 --> 00:02:17.990
other helpers that are necessary
to accomplish the task.

36
00:02:17.990 --> 00:02:21.310
But having these collections
of props can be really useful.

37
00:02:21.310 --> 00:02:26.700
And so in step five, I actually refactored

38
00:02:26.700 --> 00:02:31.350
that object that was in line 2
a function called getStateAndHelpers.

39
00:02:31.350 --> 00:02:34.160
In downshift, this is actually
a pretty sizeable function,

40
00:02:34.160 --> 00:02:36.550
there is a lot of stuff
that we pass to you.

41
00:02:36.550 --> 00:02:39.040
Here it is just two,
we're gonna add another one here.

42
00:02:39.040 --> 00:02:41.940
But I kinda like having it separate so

43
00:02:41.940 --> 00:02:46.460
that I have one place to look for
where those things are.

44
00:02:46.460 --> 00:02:49.430
And eventually we'll reuse
that in other places.

45
00:02:49.430 --> 00:02:50.116
So that's one change for

46
00:02:50.116 --> 00:02:54.024
me from what you might have had.
&gt;&gt; Kent C. Dodds: But yeah,

47
00:02:54.024 --> 00:02:56.170
that's the basic intro.

48
00:02:56.170 --> 00:02:57.970
Here's the usage example.

49
00:02:57.970 --> 00:03:02.140
So we have the toggler propsand we'll
apply that to both the switch and

50
00:03:02.140 --> 00:03:03.140
the button.

51
00:03:03.140 --> 00:03:05.730
So they can have
the prompts that they need.

52
00:03:08.040 --> 00:03:13.675
Okay, any questions about this one?
&gt;&gt; Kent C. Dodds: Okay, let's jump in,

53
00:03:13.675 --> 00:03:19.749
we'll go to test number five,
swap out the final for the exercise and

54
00:03:19.749 --> 00:03:26.424
npm t to run the test.
&gt;&gt; Kent C. Dodds: And make that work.

