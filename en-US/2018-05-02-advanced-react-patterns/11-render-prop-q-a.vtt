WEBVTT

1
00:00:00.120 --> 00:00:03.340
&gt;&gt; Kent C. Dodds: So what questions
do you have about render props?

2
00:00:04.490 --> 00:00:08.239
I know some people who were asking in
the chat about, how does this compare to

3
00:00:08.239 --> 00:00:12.125
higher order components and stuff,
we'll get to those eventually for sure.

4
00:00:12.125 --> 00:00:16.770
But what other questions are there?
&gt;&gt; Kent C. Dodds: Yeah?

5
00:00:16.770 --> 00:00:17.958
&gt;&gt; Speaker 2: I asked if there's still

6
00:00:17.958 --> 00:00:21.200
the re-render issue.
&gt;&gt; Kent C. Dodds: Right, thank you for

7
00:00:21.200 --> 00:00:21.760
asking that.

8
00:00:21.760 --> 00:00:26.345
So with the compound components, I talked
about how if you set the value equal to

9
00:00:26.345 --> 00:00:29.015
an object that you declare
every single time,

10
00:00:29.015 --> 00:00:33.410
it's gonna re-render all the consumers
over, and over, and over again.

11
00:00:34.420 --> 00:00:42.630
So this is not quite the same because
we're calling children every single time.

12
00:00:42.630 --> 00:00:46.790
So before we did all of that rewrite,
that render function's always gonna run.

13
00:00:48.000 --> 00:00:52.450
We could stick all of this
stuff directly in here,

14
00:00:52.450 --> 00:00:54.870
it'll return that stuff, whatever.

15
00:00:54.870 --> 00:00:57.660
And that would be functionally
equivalent to what we have now.

16
00:00:57.660 --> 00:01:02.148
There's no way to avoid rendering
the children in this case.

17
00:01:02.148 --> 00:01:07.763
In addition,
what is really controlling whether or

18
00:01:07.763 --> 00:01:14.920
not this thing is gonna re-render
is if its state updates anyway.

19
00:01:16.600 --> 00:01:18.540
So yeah, you don't really
run into the same problem.

20
00:01:18.540 --> 00:01:23.749
You actually want the render method to be
called every single time in this case.

21
00:01:25.576 --> 00:01:27.090
&gt;&gt; Kent C. Dodds: Any other questions?

22
00:01:27.090 --> 00:01:30.318
Yeah?
&gt;&gt; Speaker 3: You could do the same

23
00:01:30.318 --> 00:01:37.010
pattern with a single pure
functional child, right?

24
00:01:37.010 --> 00:01:41.340
You stuck up your functional
reactant component as a child there,

25
00:01:41.340 --> 00:01:43.420
it would receive-
&gt;&gt; Kent C. Dodds: I see what you mean,

26
00:01:43.420 --> 00:01:44.720
yeah, yeah, good question.

27
00:01:44.720 --> 00:01:48.950
So this is actually something we're not
going to cover in the workshop today.

28
00:01:50.190 --> 00:01:51.900
This is called component injection.

29
00:01:51.900 --> 00:01:56.397
And I donâ€™t teach it because I
think render props are better.

30
00:01:56.397 --> 00:01:59.688
Even though Donovan from American Express
will be upset at me for that.

31
00:01:59.688 --> 00:02:01.292
&gt;&gt; Group: [LAUGH]

32
00:02:01.292 --> 00:02:03.391
&gt;&gt; Kent C. Dodds: So we can have toggle

33
00:02:03.391 --> 00:02:09.696
child, and then this thing could,
or actually [INAUDIBLE].

34
00:02:09.696 --> 00:02:11.380
I could have done this
a little bit better.

35
00:02:15.589 --> 00:02:17.010
&gt;&gt; Kent C. Dodds: Something like that.

36
00:02:17.010 --> 00:02:21.640
And then you could stick toggle child
in there, and that'll work as well.

37
00:02:21.640 --> 00:02:28.390
So the couple of differences here,
because this is, and actually what's

38
00:02:28.390 --> 00:02:31.460
cool about this is we could actually
make this a legit React.Component.

39
00:02:31.460 --> 00:02:33.510
It could have life cycle methods,
all that stuff.

40
00:02:34.790 --> 00:02:38.160
But the reason that I,

41
00:02:40.910 --> 00:02:44.840
yeah, the reason that I generally,
okay, sorry, let me take a step back.

42
00:02:44.840 --> 00:02:48.659
You can only do this, this is only
halfway to component injection,

43
00:02:48.659 --> 00:02:54.430
because this ToggleChild, it's a function
and it's being called directly like this.

44
00:02:54.430 --> 00:02:58.219
For you to actually mount that component,
you would have to do return

45
00:02:58.219 --> 00:03:03.960
React.createElement( this.props.children),

46
00:03:03.960 --> 00:03:07.170
and then pass the props that you want,
so all this stuff.

47
00:03:09.160 --> 00:03:11.870
And now that is component injection.

48
00:03:11.870 --> 00:03:13.230
And that should work just as well.

49
00:03:14.280 --> 00:03:18.850
And now this would have
access to default props and

50
00:03:18.850 --> 00:03:21.410
all the life cycle methods and stuff.

51
00:03:21.410 --> 00:03:26.920
The reason I prefer the render prop
over component injection is because

52
00:03:26.920 --> 00:03:32.420
the render prop is more powerful, and
when you would call create element,

53
00:03:32.420 --> 00:03:37.710
it adds a whole other layer
of nesting in my react tree,

54
00:03:37.710 --> 00:03:41.530
and often I don't care enough
to give this thing a name.

55
00:03:41.530 --> 00:03:44.780
Like, clearly this is the render
child because I'm rendering, or

56
00:03:44.780 --> 00:03:47.430
the ToggleChild because it's
the child of the toggle.

57
00:03:47.430 --> 00:03:50.274
Why do I need to give that a name?

58
00:03:50.274 --> 00:03:53.700
And so that wouldn't be enough for

59
00:03:53.700 --> 00:03:57.110
me to prefer render props
over a component injection.

60
00:03:57.110 --> 00:04:01.000
But what really seals the deal for
me is, I could just say,

61
00:04:01.000 --> 00:04:05.500
props and props.

62
00:04:06.770 --> 00:04:10.480
And now I get all the benefits
of component injection

63
00:04:10.480 --> 00:04:14.420
without actually having to
use component injection.

64
00:04:14.420 --> 00:04:20.190
So as a user, you're pushing that onto the
user to be able to use life cycle methods.

65
00:04:20.190 --> 00:04:23.880
But I feel like that's pretty
straightforward and so

66
00:04:23.880 --> 00:04:29.080
if I'm only gonna do one,
I'm just gonna do the the Render Props.

67
00:04:29.080 --> 00:04:33.480
Now you could also say, hey, if you want
to use life cycle methods, you can, and

68
00:04:33.480 --> 00:04:36.820
then in your render method, you check,
is this a React component class?

69
00:04:36.820 --> 00:04:41.420
And if it is, then I'll createElement
otherwise I'll call the function.

70
00:04:41.420 --> 00:04:43.280
So there's a lot of flexibility
you can have in there.

71
00:04:44.690 --> 00:04:47.510
But I'll just do a Render Prop.

72
00:04:47.510 --> 00:04:49.020
It makes the API a lot simpler.

73
00:04:51.250 --> 00:04:53.020
Glad you asked that though,
so we could cover that.

74
00:04:54.210 --> 00:04:56.140
Other questions or observations?

75
00:05:00.310 --> 00:05:03.093
Yeah?
&gt;&gt; Speaker 5: It seems that a render or,

76
00:05:03.093 --> 00:05:08.363
if we were to compare and contrast
a compound components versus render

77
00:05:08.363 --> 00:05:13.187
properties, it seems that
the compound component is doing a lot

78
00:05:13.187 --> 00:05:18.099
of the same things, but
it's holding a little more control, and

79
00:05:18.099 --> 00:05:24.720
a render prop is giving complete control
back up to whoever is implementing it.

80
00:05:24.720 --> 00:05:27.510
So when would you use one or

81
00:05:27.510 --> 00:05:29.440
the other in your applications?
&gt;&gt; Kent C. Dodds: Yeah,

82
00:05:29.440 --> 00:05:31.100
that's a great question.

83
00:05:31.100 --> 00:05:36.300
So if we look at the usage example here

84
00:05:37.780 --> 00:05:41.740
with compound components,
you don't actually see what

85
00:05:41.740 --> 00:05:45.980
the state is that's being shared
with toggle and all of its children.

86
00:05:45.980 --> 00:05:50.840
Aall the state and the handlers,
everything is totally implicit.

87
00:05:50.840 --> 00:05:55.120
And so if you have a situation like that
where people don't really care what those

88
00:05:55.120 --> 00:06:02.250
values are, it's not really useful to
them, one example might be an accordion.

89
00:06:02.250 --> 00:06:07.190
You have several accordion
compound components and

90
00:06:07.190 --> 00:06:09.350
then the user clicks on one.

91
00:06:09.350 --> 00:06:11.900
There's some inputs
that state that's gonna

92
00:06:11.900 --> 00:06:17.220
be set between the parents that
determines which index is open and

93
00:06:17.220 --> 00:06:21.720
the children that says, I'm the index
that's open so I'm gonna open up.

94
00:06:21.720 --> 00:06:24.645
And the user of that component doesn't
really need to know which one is open,

95
00:06:24.645 --> 00:06:29.220
they're just like, here's my accordion,
here's my accordion title, and

96
00:06:29.220 --> 00:06:30.620
here are the contents of that accordion.

97
00:06:30.620 --> 00:06:31.590
And they don't really care.

98
00:06:33.280 --> 00:06:37.340
And so adding that additional layer
of complexity where they have to say,

99
00:06:37.340 --> 00:06:42.890
if accordion index one is open,
then I'm gonna render this thing.

100
00:06:43.980 --> 00:06:45.720
It's just extra work for the end user.

101
00:06:47.160 --> 00:06:54.280
Whereas some really highly, or
some components that need that very fine

102
00:06:54.280 --> 00:07:00.070
detail on and control over how things are
rendered, render prop fits a lot better.

103
00:07:00.070 --> 00:07:03.940
The really cool thing about render props
is that you could implement your base

104
00:07:03.940 --> 00:07:07.552
component as a render prop and
then a compound component on top of that.

105
00:07:07.552 --> 00:07:11.570
And so all the logic and everything
lives inside the render prop component.

106
00:07:11.570 --> 00:07:13.480
And then you're like, well,
this is a really common case.

107
00:07:13.480 --> 00:07:15.480
I'll build a compound
component on top of that.

108
00:07:15.480 --> 00:07:17.350
Then most people can use
a compound component, and

109
00:07:17.350 --> 00:07:21.670
if they need the extra stuff, then they
can use the render prop component.

110
00:07:21.670 --> 00:07:24.662
So I haven't yet found the a pattern that

111
00:07:24.662 --> 00:07:29.333
is lower level than render props
with regard to sharing logic.

112
00:07:29.333 --> 00:07:32.034
Just really,
really great way to do that and

113
00:07:32.034 --> 00:07:36.460
then you can build on top.
&gt;&gt; Kent C. Dodds: Good question.

114
00:07:36.460 --> 00:07:38.130
Other questions?

115
00:07:38.130 --> 00:07:42.568
Observations?
&gt;&gt; Kent C. Dodds: All right, sweet.

116
00:07:42.568 --> 00:07:43.735
&gt;&gt; Speaker 6: There's one in the chatroom.

117
00:07:43.735 --> 00:07:45.200
&gt;&gt; Kent C. Dodds: One in chat, sweet.

118
00:07:45.200 --> 00:07:48.450
Is there any difference between passing
a render function as a prop and

119
00:07:48.450 --> 00:07:49.940
a render function as children?

120
00:07:49.940 --> 00:07:52.670
Good question,
this is actually a pretty common question.

121
00:07:52.670 --> 00:07:59.140
And with that, I've got this common
questions about render props, and I

122
00:07:59.140 --> 00:08:02.830
don't think that this is one of the ones I
mentioned, but there are a couple others.

123
00:08:02.830 --> 00:08:05.940
You can check my blog later for that.

124
00:08:05.940 --> 00:08:09.320
But yeah, so the question is,
what if instead it's render?

125
00:08:11.470 --> 00:08:16.750
So what I could do is I would
simply take this thing and say,

126
00:08:16.750 --> 00:08:19.780
render equals that thing.

127
00:08:19.780 --> 00:08:21.170
And that's functionally equivalent.

128
00:08:21.170 --> 00:08:23.693
So why choose one over the other?

129
00:08:23.693 --> 00:08:29.162
The biggest reason that I chose children
over render as a prop name is because

130
00:08:29.162 --> 00:08:34.213
that's what context API does,
it uses children for the render prop.

131
00:08:34.213 --> 00:08:37.743
And so I like consistency, and so
that's what I am gonna go with.

132
00:08:37.743 --> 00:08:40.557
There are a couple of reasons
that I like children over render,

133
00:08:40.557 --> 00:08:41.896
but that's the biggest one.

134
00:08:41.896 --> 00:08:45.886
One of the other reasons is if I have
a render prop that's really long, in fact,

135
00:08:45.886 --> 00:08:47.684
let's just pull this back in here.

136
00:08:47.684 --> 00:08:51.544
Let's see.

137
00:08:51.544 --> 00:08:57.445
Just to illustrate this.
&gt;&gt; Kent C. Dodds: We'll do on and

138
00:08:57.445 --> 00:08:59.680
toggle, okay.

139
00:08:59.680 --> 00:09:02.492
So I've got a relatively long render prop,

140
00:09:02.492 --> 00:09:06.090
and sometimes these will be very,
very long.

141
00:09:06.090 --> 00:09:09.542
So you have your on toggle,
you have your render, and that's it right.

142
00:09:09.542 --> 00:09:13.655
Well, you have to scroll down
all the way down here and say,

143
00:09:13.655 --> 00:09:15.717
veryImportantProp = true.

144
00:09:15.717 --> 00:09:17.532
Okay, now when I'm looking at this,

145
00:09:17.532 --> 00:09:21.060
I think that these are the only
props that my component's using.

146
00:09:21.060 --> 00:09:23.990
But I missed this very important prop.

147
00:09:23.990 --> 00:09:27.230
If you use children for
the name of the prop,

148
00:09:27.230 --> 00:09:30.180
then that's not possible because
what comes after children?

149
00:09:30.180 --> 00:09:31.810
Nothing, just like the closing tag.

150
00:09:31.810 --> 00:09:36.378
And that's the other reason that
I prefer using render prop, or

151
00:09:36.378 --> 00:09:40.609
a render called children rather
than the render function,

152
00:09:40.609 --> 00:09:46.023
is
&gt;&gt; Kent C. Dodds: It's easier for

153
00:09:46.023 --> 00:09:48.618
me to see at what point
does toggle start and

154
00:09:48.618 --> 00:09:51.400
end.
&gt;&gt; Kent C. Dodds: So

155
00:09:51.400 --> 00:09:55.190
those are some of
the reasons I prefer that.

156
00:09:55.190 --> 00:10:03.440
Children.
&gt;&gt; Kent C. Dodds: We good?

157
00:10:03.440 --> 00:10:04.430
Was that fun?

158
00:10:04.430 --> 00:10:07.360
Is this the type of component you're gonna
write and it will a smile on your face?

159
00:10:08.430 --> 00:10:10.930
Well I'm seeing smiles now,
that's good enough for me.

160
00:10:10.930 --> 00:10:15.748
Okay, so go ahead and jump in the test,
submit your elaboration, what did you

161
00:10:15.748 --> 00:10:20.428
learn and then we'll talk about that for
a second and jump into the next one.

