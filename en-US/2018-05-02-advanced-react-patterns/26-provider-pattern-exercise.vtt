WEBVTT

1
00:00:00.020 --> 00:00:03.170
&gt;&gt; Kent: Let us move on
to the provider pattern.

2
00:00:03.170 --> 00:00:06.976
So, yeah,
we've just got about an hour or so left.

3
00:00:06.976 --> 00:00:12.320
And we've got, yeah, about an hour's
worth of material, I think.

4
00:00:12.320 --> 00:00:13.407
Maybe a little bit more.

5
00:00:13.407 --> 00:00:15.250
But we're doing pretty well on time.

6
00:00:15.250 --> 00:00:19.000
So the provider pattern is pretty handy.

7
00:00:19.000 --> 00:00:20.640
So let's go ahead and take a look at this.

8
00:00:20.640 --> 00:00:26.670
You'll see that the exercise itself is
very different from what we've had before.

9
00:00:26.670 --> 00:00:29.810
Now it's like in a little, tiny

10
00:00:30.830 --> 00:00:36.070
app where you can swap between emoji and
text.

11
00:00:36.070 --> 00:00:38.420
So that's fun.

12
00:00:38.420 --> 00:00:40.258
So let's see how this is
accomplished really quick.

13
00:00:40.258 --> 00:00:46.320
We've got our app usage right here.

14
00:00:46.320 --> 00:00:49.180
And this is a toggle, sorry.

15
00:00:49.180 --> 00:00:56.700
So this is the final version,
the API you want to implement.

16
00:00:56.700 --> 00:00:59.210
Let me see, I think I actually I have

17
00:00:59.210 --> 00:01:04.590
a Y version which I think will be better
at explaining why this actually matters.

18
00:01:04.590 --> 00:01:10.020
So, sorry, taking a step back, and
forget that example for just a second.

19
00:01:10.020 --> 00:01:15.737
So we've got this simple toggle component,
and it's using render props.

20
00:01:15.737 --> 00:01:19.800
And here in our usage,
we're applying that render prop.

21
00:01:19.800 --> 00:01:22.899
And we're forwarding on
those properties to Layer1.

22
00:01:22.899 --> 00:01:24.780
So totally contrived.

23
00:01:24.780 --> 00:01:30.162
And then that Layer1 component is
forwarding those props on to Layer2.

24
00:01:30.162 --> 00:01:33.060
So Layer1 doesn't actually
care about those props at all.

25
00:01:33.060 --> 00:01:34.864
Totally irrelevant to Layer1.

26
00:01:35.890 --> 00:01:38.390
Layer2 does care about one of them.

27
00:01:38.390 --> 00:01:39.740
But it doesn't care about on toggle.

28
00:01:39.740 --> 00:01:40.760
It's totally irrelevant, so

29
00:01:40.760 --> 00:01:45.550
it's gonna just forward that on to Layer3,
which also doesn't care about those props.

30
00:01:45.550 --> 00:01:47.800
And forwards that on to Layer4.

31
00:01:47.800 --> 00:01:52.740
So the only reason that this toggle prop
needs to be threaded through all of these

32
00:01:52.740 --> 00:01:58.780
components is because the leaf node of
this React tree needs that toggle prop.

33
00:01:58.780 --> 00:02:01.920
How many people know what this is called,
what this problem is called?

34
00:02:01.920 --> 00:02:02.930
What is it?

35
00:02:02.930 --> 00:02:03.840
&gt;&gt; Speaker 2: Props drilling.

36
00:02:03.840 --> 00:02:04.990
&gt;&gt; Kent: Prop drilling.

37
00:02:04.990 --> 00:02:05.630
Yeah.

38
00:02:05.630 --> 00:02:10.200
I like the imagery,
because that is exactly what it is.

39
00:02:10.200 --> 00:02:12.067
And it's a real pain.

40
00:02:12.067 --> 00:02:16.720
Because what if I decided I want to
change this from toggle to anything else?

41
00:02:16.720 --> 00:02:19.230
Okay, well,
now I gotta go update all over the place.

42
00:02:19.230 --> 00:02:23.171
And we've got too many of the word
toggle in this little thing anyway, so

43
00:02:23.171 --> 00:02:24.730
good luck find and replace.

44
00:02:25.880 --> 00:02:27.870
So yeah, that's a nightmare.

45
00:02:27.870 --> 00:02:31.120
If I wanna make something reusable,
and move it somewhere else.

46
00:02:31.120 --> 00:02:35.180
What happens is, like let's say,
we don't need this switch anymore.

47
00:02:35.180 --> 00:02:35.945
So I'll just get rid of that.

48
00:02:35.945 --> 00:02:38.820
And now this thing is gonna render null or
something.

49
00:02:38.820 --> 00:02:42.068
Well, now you have to remember, okay,
so I don't need the toggle here,

50
00:02:42.068 --> 00:02:43.411
I don't need the toggle herre.

51
00:02:43.411 --> 00:02:44.004
So you have to go.

52
00:02:44.004 --> 00:02:48.161
And what winds up happening is you
just like, okay, the heck with it,

53
00:02:48.161 --> 00:02:51.340
I'm just gonna spread all
the props everywhere I go.

54
00:02:51.340 --> 00:02:54.987
And now you're passing props
where they're not needed.

55
00:02:54.987 --> 00:02:57.610
It makes things harder to maintain.

56
00:02:57.610 --> 00:02:58.930
So the prop drilling problem.

57
00:02:58.930 --> 00:03:03.594
I don't think I have to convince too many
of you that it's really annoying and

58
00:03:03.594 --> 00:03:04.540
frustrating.

59
00:03:04.540 --> 00:03:07.305
And that's what the provider
pattern solves for us,

60
00:03:07.305 --> 00:03:09.160
is the prop drilling problem.

61
00:03:09.160 --> 00:03:14.691
So, yeah,
&gt;&gt; Kent: So the provider pattern

62
00:03:14.691 --> 00:03:21.030
actually was a little tricky to implement
until the new context API came out.

63
00:03:21.030 --> 00:03:22.880
Now it's significantly easier.

64
00:03:22.880 --> 00:03:25.420
So you've actually already
implemented the provider pattern.

65
00:03:25.420 --> 00:03:28.110
You did it with your compound components.

66
00:03:28.110 --> 00:03:32.824
And the difference is that you
didn't expose a consumer for

67
00:03:32.824 --> 00:03:35.942
people to actually use it themselves.

68
00:03:35.942 --> 00:03:39.071
And so that's what we're gonna do here.

69
00:03:39.071 --> 00:03:43.850
There's not a ton of stuff that you
have to do in the exercises themselves.

70
00:03:43.850 --> 00:03:46.620
You create a toggle context.

71
00:03:46.620 --> 00:03:50.180
We're gonna expose a consumer
like I said earlier today.

72
00:03:50.180 --> 00:03:54.800
And then you need to include
all of the state and

73
00:03:54.800 --> 00:03:58.220
helpers need to live inside your state.

74
00:03:58.220 --> 00:04:04.270
And so we're gonna put it in initial
state, which is what state gets set to.

75
00:04:04.270 --> 00:04:06.290
And yeah, I'm pretty sure
that's like pretty much it.

76
00:04:07.660 --> 00:04:10.675
So, and there's a bonus.

77
00:04:10.675 --> 00:04:15.254
[NOISE] So you can actually
implement the provider pattern and

78
00:04:15.254 --> 00:04:18.045
render props in a single component.

79
00:04:18.045 --> 00:04:23.714
So people could continue to use this as
the simple component that it already is,

80
00:04:23.714 --> 00:04:27.533
or they could expound on it and
use it as a render prop.

81
00:04:27.533 --> 00:04:29.980
And I'm pretty sure I've
got a test in here.

82
00:04:29.980 --> 00:04:33.730
That you can enable if you want to so
venture.

83
00:04:33.730 --> 00:04:36.664
Yeah, you don't enable it.

84
00:04:36.664 --> 00:04:40.630
It just won't throw an error if
you don't want to do that, so.

