WEBVTT

1
00:00:02.638 --> 00:00:05.278
&gt;&gt; Kent C. Dodds: So
our next one is number four.

2
00:00:05.278 --> 00:00:11.868
[COUGH]
&gt;&gt; Kent C. Dodds: And we've

3
00:00:11.868 --> 00:00:15.318
removed a whole bunch of stuff because
now we're gonna get into render props.

4
00:00:15.318 --> 00:00:19.250
So compound components is
this little thing on the side

5
00:00:19.250 --> 00:00:23.380
that I couldn't really fit into the rest
of our exercises that build on each other.

6
00:00:23.380 --> 00:00:26.210
And so we're going back to the basics here

7
00:00:26.210 --> 00:00:29.100
with the toggle component you
built in the first place.

8
00:00:29.100 --> 00:00:31.750
And we're gonna switch to a new API.

9
00:00:33.610 --> 00:00:40.560
If we look at the solution here, we're
seeing we have this, button is on top.

10
00:00:40.560 --> 00:00:41.790
We have this toggle button here.

11
00:00:41.790 --> 00:00:45.730
And then we also have this other
button that can toggle our component.

12
00:00:45.730 --> 00:00:46.820
Well, that's kind of nifty.

13
00:00:46.820 --> 00:00:47.520
How does that work?

14
00:00:48.600 --> 00:00:54.500
Well, in the API that you're going to
implement, you're talking that implicit

15
00:00:54.500 --> 00:00:58.560
state that we were sharing with compound
components and you're making it explicit.

16
00:00:58.560 --> 00:01:01.740
And so now the user of the component
has a little more work to do.

17
00:01:01.740 --> 00:01:07.098
That's a couple more lines of code, but
because of this, they can have a custom

18
00:01:07.098 --> 00:01:13.400
button, or they choose how they
want to render the on and off text.

19
00:01:13.400 --> 00:01:16.280
They have total control over rendering.

20
00:01:16.280 --> 00:01:19.230
That's what you are enabling
with the render prop API.

21
00:01:19.230 --> 00:01:20.985
And with a compound components API,

22
00:01:20.985 --> 00:01:24.394
this is actually not possible without
exposing the context provider.

23
00:01:24.394 --> 00:01:28.701
And then people have to use that
context provider to get things and

24
00:01:28.701 --> 00:01:33.740
actually, by using the context provider,
you consumed a render prop API.

25
00:01:33.740 --> 00:01:38.864
And that was the context, the toggle
context.consumer is a render prop API and

26
00:01:38.864 --> 00:01:42.327
you're gonna implement one of those.

27
00:01:42.327 --> 00:01:49.290
&gt;&gt; Kent C. Dodds: Yeah, I think that's
pretty much it for prep for the excercise.

28
00:01:49.290 --> 00:01:54.852
Does anybody have any questions before
we set you loose and then have lunch?

29
00:01:57.004 --> 00:01:58.380
&gt;&gt; Kent C. Dodds: Okay, great.

30
00:01:58.380 --> 00:02:00.550
So go ahead and start on this.

31
00:02:01.950 --> 00:02:03.590
I'm gonna reset hard.

32
00:02:04.770 --> 00:02:06.610
Just keep myself updated.

33
00:02:06.610 --> 00:02:10.961
Then you'll untoggle
the final version toggle in

34
00:02:10.961 --> 00:02:14.800
the exercise version and
then run the test.

