WEBVTT

1
00:00:00.130 --> 00:00:02.330
&gt;&gt; Kent C. Dodds: So now weâ€™re gonna
talk about Higher Order Components.

2
00:00:03.450 --> 00:00:10.200
So one thing actually, here we can
see the problem in our last exercise.

3
00:00:10.200 --> 00:00:14.876
So if we look at the usage here,
there are like for

4
00:00:14.876 --> 00:00:19.783
example this subtitle, or
lots of these different

5
00:00:19.783 --> 00:00:24.347
places that need to use
the Toggle.Consumer,

6
00:00:24.347 --> 00:00:27.679
you wind up nesting a fair amount.

7
00:00:27.679 --> 00:00:31.260
And you're kind of repeating
yourself in some places.

8
00:00:31.260 --> 00:00:34.766
So higher order components
came after mixins,

9
00:00:34.766 --> 00:00:38.659
which was an older React concept,
as a way to share code.

10
00:00:39.870 --> 00:00:43.790
There are some limitations to them,
but in general they're pretty useful.

11
00:00:45.520 --> 00:00:50.010
A useful mechanism for
reducing or sharing code.

12
00:00:51.270 --> 00:00:56.150
And especially in a case where you're
seeing a lot of the same stuff,

13
00:00:56.150 --> 00:00:59.040
okay, toggle consumer, toggle, toggle on.

14
00:00:59.040 --> 00:01:04.548
And we're doing something very
similar in this subtitle here as well.

15
00:01:04.548 --> 00:01:12.200
And so
wouldn't it be nice if we could, well.

16
00:01:12.200 --> 00:01:13.211
This is totally contrived.

17
00:01:13.211 --> 00:01:18.066
But what this could look like is

18
00:01:18.066 --> 00:01:23.112
const Subtitle = withToggle.

19
00:01:23.112 --> 00:01:27.695
And then this is just a thing
that accepts toggle as a prop and

20
00:01:27.695 --> 00:01:29.720
then renders this thing.

21
00:01:30.820 --> 00:01:34.370
Wow, yeah,
I should've had another one of these.

22
00:01:34.370 --> 00:01:35.830
Here, let me add another one.

23
00:01:36.850 --> 00:01:38.480
The contrived example is they're just for

24
00:01:38.480 --> 00:01:40.360
me to be able to test that
you did things properly.

25
00:01:43.520 --> 00:01:46.050
Good example of this would be this thing.

26
00:01:46.050 --> 00:01:50.030
So it have const SwitchText =

27
00:01:50.030 --> 00:01:56.979
withToggle(().
&gt;&gt; Kent C. Dodds: And then instead

28
00:01:56.979 --> 00:02:02.416
of all this toggle consumer nonsense,
&gt;&gt; Kent C. Dodds: We actually

29
00:02:02.416 --> 00:02:07.412
just provide the Consumer function.

30
00:02:07.412 --> 00:02:11.145
Whoop, [NOISE] there we go.

31
00:02:11.145 --> 00:02:15.659
And I gotta figure out my parentheses,
there we go.

32
00:02:15.659 --> 00:02:20.727
I just keep on going until Prettier
starts applying its niceness.

33
00:02:20.727 --> 00:02:26.563
But yeah,
th t we can see the difference here,

34
00:02:26.563 --> 00:02:31.810
function, switch Text2, there we go.

35
00:02:31.810 --> 00:02:33.900
So you compare the two of these.

36
00:02:33.900 --> 00:02:39.390
And yeah, okay, I could kinda see
a case where this seems a little bit

37
00:02:39.390 --> 00:02:43.040
over the top compared to a harrowed or
component version of this.

38
00:02:43.040 --> 00:02:48.990
This is the only one example that applies
that what we've currently worked through.

39
00:02:48.990 --> 00:02:53.670
You could have a lot of different cases
where you have this function that

40
00:02:53.670 --> 00:02:58.460
gives you a component back that applies
a lot of different things on top of it.

41
00:02:58.460 --> 00:03:02.680
React Redux, React router, all of these
have this high order components that do

42
00:03:02.680 --> 00:03:09.050
some extra work and give you a component
that will manage that extra work for you.

43
00:03:09.050 --> 00:03:12.250
And so you save on a fair amount of code.

44
00:03:12.250 --> 00:03:17.430
The difference between render props and
a higher order of components is that

45
00:03:17.430 --> 00:03:24.100
with a higher order component
you get back a component.

46
00:03:24.100 --> 00:03:27.330
And so that happens statically.

47
00:03:27.330 --> 00:03:31.410
LWhen your app boots up,
it's creating all these components and

48
00:03:31.410 --> 00:03:33.140
then you render those components.

49
00:03:33.140 --> 00:03:38.458
With render props,
all of this happens at rendered time,

50
00:03:38.458 --> 00:03:42.159
which gives you a ton more flexibility.

51
00:03:42.159 --> 00:03:47.014
Whether or not you're applying certain
props and things of that nature.

52
00:03:47.014 --> 00:03:51.441
And so this is why we're
gonna build our higher order

53
00:03:51.441 --> 00:03:54.570
component on top of our render prop.

54
00:03:54.570 --> 00:03:55.730
Which actually, incidentally,

55
00:03:55.730 --> 00:04:01.044
is gonna be the toggle consumer, which
will be implementing the render prop.

56
00:04:01.044 --> 00:04:04.560
But yeah, every single time

57
00:04:04.560 --> 00:04:09.370
anything you can do with a higher order
component with a render prop component.

58
00:04:09.370 --> 00:04:14.540
But sometimes the higher order component
kind of provide a nicer API for

59
00:04:14.540 --> 00:04:16.710
the code that you're trying to share.

60
00:04:16.710 --> 00:04:20.520
And so by building a react
prop component first and

61
00:04:20.520 --> 00:04:24.360
then building a higher order component
on top of that, you can provide both.

62
00:04:24.360 --> 00:04:28.380
So you say, here's the higher order
component if you want the simpler, nicer,

63
00:04:28.380 --> 00:04:29.640
smaller API.

64
00:04:29.640 --> 00:04:31.020
But if you really need the flexibility,

65
00:04:31.020 --> 00:04:35.650
the render prop is what this is built on
anyway, so you just use that directly.

66
00:04:35.650 --> 00:04:40.590
So I can't imagine a situation
where you'd want to have

67
00:04:40.590 --> 00:04:44.910
a higher order component that wasn't under
the hood implemented as a render prop.

68
00:04:46.640 --> 00:04:47.240
It's too easy.

69
00:04:48.870 --> 00:04:53.677
Okay, so your task, the whole thing
lives inside withToggle function.

70
00:04:53.677 --> 00:04:58.584
And it's all spelled out for you,
the steps that you have to take.

71
00:04:58.584 --> 00:05:03.198
And there's one thing
that will be new to you.

72
00:05:03.198 --> 00:05:05.542
Probably it's this React.forwardRef.

73
00:05:05.542 --> 00:05:11.560
That's new to React in general,
so I've put some links in there.

74
00:05:11.560 --> 00:05:15.350
If you get stuck for more than 30 seconds,
just look at the solution to reference it

75
00:05:15.350 --> 00:05:17.470
real quick and come back and
go through it.

76
00:05:17.470 --> 00:05:18.660
Don't spend too much time on that.

