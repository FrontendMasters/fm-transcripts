WEBVTT

1
00:00:00.200 --> 00:00:03.340
So this sounds like it fits
into this question, but

2
00:00:03.340 --> 00:00:06.711
they're asking any reason
not to use Web Components.

3
00:00:11.778 --> 00:00:13.491
&gt;&gt; No, the answer is always no.

4
00:00:13.491 --> 00:00:17.190
[LAUGH] Any reason not
to use Web Components?

5
00:00:17.190 --> 00:00:20.699
I think this slide might
address some of it.

6
00:00:20.699 --> 00:00:25.830
But there's a few foot guns,
especially around styling,

7
00:00:25.830 --> 00:00:29.020
which we'll talk about in nauseam.

8
00:00:31.070 --> 00:00:35.410
So there's a few foot guns and a few
things you have to learn before it clicks.

9
00:00:37.360 --> 00:00:45.325
But there's really not a reason
I would shy away from them.

10
00:00:45.325 --> 00:00:49.837
I'm trying to think of like, but
this slide might address some of it,

11
00:00:49.837 --> 00:00:51.988
if I can continue, is that fine?

12
00:00:51.988 --> 00:00:56.937
Okay, I like to say Web Components
are slow like brisket,

13
00:00:56.937 --> 00:01:01.820
and in the sense that they
are web standards, right?

14
00:01:01.820 --> 00:01:04.123
Web standards take a long time.

15
00:01:04.123 --> 00:01:10.286
To get a new element in HTML takes
like ten years, it's a long time.

16
00:01:10.286 --> 00:01:15.273
To get new browser features,
they can happen kinda quickly, but

17
00:01:15.273 --> 00:01:17.548
that stuff takes a long time.

18
00:01:17.548 --> 00:01:22.391
So, if there's one reason not to use
Web Components is because you may

19
00:01:22.391 --> 00:01:27.330
want some weird feature,
some micro feature like partial hydration.

20
00:01:27.330 --> 00:01:31.200
I have to have partial hydration,
I don't know why.

21
00:01:31.200 --> 00:01:35.320
I don't know what it means exactly,
but I have to have it.

22
00:01:36.600 --> 00:01:40.840
That might take a while to have
a full baked in the browser solution.

23
00:01:40.840 --> 00:01:45.037
So you may have to roll your own,
you may have to find one,

24
00:01:45.037 --> 00:01:48.543
if you really,
really want a certain feature.

25
00:01:48.543 --> 00:01:52.669
So it's gonna move a little bit
slower than hot new framework JS,

26
00:01:52.669 --> 00:01:55.080
it's gonna move a little bit slower.

27
00:01:55.080 --> 00:02:00.190
But the trade off is you're building
on a very stable foundation.

28
00:02:00.190 --> 00:02:04.957
You're not gonna get sideswiped
by a major version change,

29
00:02:04.957 --> 00:02:11.234
there's been a few in the history of
coding that didn't go so well, Python 3.

30
00:02:11.234 --> 00:02:13.681
So there's a few didn't go so well.

31
00:02:13.681 --> 00:02:17.694
So, if there's a reason I think not to,

32
00:02:17.694 --> 00:02:22.060
it's just wonder, your sense [LAUGH] of,

33
00:02:22.060 --> 00:02:26.426
my gosh, this is getting better every day,

34
00:02:26.426 --> 00:02:32.110
might be a bit slower than it
is in something newish, so.

35
00:02:32.110 --> 00:02:35.820
Does that help in answering the question,
anyone, yeah?

36
00:02:35.820 --> 00:02:40.700
So it might be worth looking at like,
who is using Web Components?

37
00:02:40.700 --> 00:02:45.720
And I found this list of
no-name companies over

38
00:02:45.720 --> 00:02:50.744
at ourwebcomponents-a-thing-yet.com,

39
00:02:50.744 --> 00:02:54.259
some fruit company, a rainbow,

40
00:02:54.259 --> 00:02:59.041
letter company, a shipping truck company.

41
00:02:59.041 --> 00:03:05.692
[LAUGH] I don't know, a company that
makes a solitaire game for your computer.

42
00:03:05.692 --> 00:03:10.968
These are just no-name companies,
I'm kidding.

43
00:03:10.968 --> 00:03:15.058
A lot of these big companies Apple,
Google, Amazon, Microsoft,

44
00:03:15.058 --> 00:03:18.160
GitHub, YouTube, Adobe,
talk about that NASA.

45
00:03:18.160 --> 00:03:24.510
There's Web Components in space,
why not, IBM, Red Hat, ING, Salesforce.

46
00:03:24.510 --> 00:03:25.820
These are big companies, right?

47
00:03:27.640 --> 00:03:30.700
They're all sort of using Web Components.

48
00:03:30.700 --> 00:03:33.821
Web Components are actually on the rise.

49
00:03:33.821 --> 00:03:39.440
Over the last year,
we actually saw a jump from about the 10%

50
00:03:39.440 --> 00:03:46.241
to about 18% of all page loads in
Google Chrome are using Web Components.

51
00:03:46.241 --> 00:03:49.466
That's a shocking figure, but

52
00:03:49.466 --> 00:03:55.558
if you think of something like
YouTube uses Web Components,

53
00:03:55.558 --> 00:04:01.540
that's gonna be a big chunk of page views,
GitHub as well.

54
00:04:01.540 --> 00:04:02.487
What caused that jump?

55
00:04:02.487 --> 00:04:03.380
We don't know.

56
00:04:03.380 --> 00:04:06.481
I mean, I talked about web
components just before that jump.

57
00:04:06.481 --> 00:04:11.516
So I'd like to think I had,
that's the Dave Ruprecht bump.

58
00:04:11.516 --> 00:04:15.981
But, [LAUGH] I think the true
answer is maybe this, Wordle.

59
00:04:15.981 --> 00:04:20.048
Wordle, which sold to
the New York Times for seven figures,

60
00:04:20.048 --> 00:04:22.054
is made with Web Components.

61
00:04:22.054 --> 00:04:25.614
And you can crack open the browser and
view the source and

62
00:04:25.614 --> 00:04:28.872
guess what you'll see,
you'll see game-app and

63
00:04:28.872 --> 00:04:33.133
then a bunch of Web Components kind
of revealed in that shadow DOM.

64
00:04:33.133 --> 00:04:35.438
So Wordle, built on Web Components.

65
00:04:35.438 --> 00:04:38.026
And there used to be,
[LAUGH] a little bug where

66
00:04:38.026 --> 00:04:41.160
the solution was an attribute
[LAUGH] in the component so

67
00:04:41.160 --> 00:04:44.649
you could just look at the attribute and
solve it instantly.

68
00:04:44.649 --> 00:04:48.548
But we don't cheat, right,
we're not cheaters.

69
00:04:48.548 --> 00:04:52.882
I obviously did not do very good this day.

70
00:04:52.882 --> 00:04:56.950
So Wordle's built with Web Components,
but that's a toy game.

71
00:04:56.950 --> 00:05:03.138
That's not a big deal, right,
tiny game, very popular.

72
00:05:03.138 --> 00:05:06.342
The new Photoshop is built
with Web Components.

73
00:05:06.342 --> 00:05:10.537
So, Photoshop's moving to a web-based
client, they built it with web components.

74
00:05:10.537 --> 00:05:14.830
And there's an article here on web.dev,
yes, question.

75
00:05:14.830 --> 00:05:19.666
&gt;&gt; Yeah, would you say that these
companies are using frameworks to compile

76
00:05:19.666 --> 00:05:25.289
down to Web Components, or do they usually
natively just write it in web components?

77
00:05:25.289 --> 00:05:29.914
&gt;&gt; So, in this one,
that's a good question,

78
00:05:29.914 --> 00:05:32.920
are they using frameworks?

79
00:05:32.920 --> 00:05:37.638
This is using Lit, which is more
like a library than framework.

80
00:05:37.638 --> 00:05:42.240
But it's using Lit, and
just to almost bring

81
00:05:42.240 --> 00:05:46.610
syntactic sugar to the component system.

82
00:05:46.610 --> 00:05:53.318
And behind the scenes, there's a whole
bunch of wasum web assembly happening,

83
00:05:53.318 --> 00:05:58.363
and that's doing all the image stuff,
image compression.

84
00:05:58.363 --> 00:06:03.249
A lot of the graphical processing is
happening on a different thread in wasum.

85
00:06:03.249 --> 00:06:08.658
So that's a whole other Front End Master's
course I'm not qualified to teach.

86
00:06:08.658 --> 00:06:12.510
[LAUGH] But it's kind of a cool thing.

87
00:06:12.510 --> 00:06:15.389
So they'll maybe write
something in Python, or C, or

88
00:06:15.389 --> 00:06:19.310
whatever they were writing in before,
and compile the brains down.

89
00:06:19.310 --> 00:06:26.120
But the web component is just talking
to the brain, the binary file inside.

90
00:06:26.120 --> 00:06:27.171
Does that help answer your question?

91
00:06:27.171 --> 00:06:34.279
Okay, yeah, so
Photoshop being built with Web Components.

92
00:06:34.279 --> 00:06:37.312
And so if they're so popular,
why am I not using them?

93
00:06:37.312 --> 00:06:42.036
That's a good question,
I have big opinions.

94
00:06:42.036 --> 00:06:46.300
I think they're too low level,
first of all, and we'll see it here.

95
00:06:46.300 --> 00:06:51.404
When you start using a web component,
you're like,

96
00:06:51.404 --> 00:06:55.040
this is not fun to write immediately.

97
00:06:55.040 --> 00:07:01.293
And that's because it was designed for
framework authors to build stuff on top.

98
00:07:01.293 --> 00:07:05.850
It was sort of a low level primitive in
the web platform for people to build on.

99
00:07:07.370 --> 00:07:11.780
However, the framework
authors didn't use it.

100
00:07:11.780 --> 00:07:15.160
So, they had something that worked.

101
00:07:15.160 --> 00:07:19.690
And for them to be like,
I should move from something that works

102
00:07:19.690 --> 00:07:23.912
in every browser to something
that kinda only works in Chrome.

103
00:07:23.912 --> 00:07:28.681
No, that's a past,
I have customers, totally fair.

104
00:07:28.681 --> 00:07:31.880
And then you pile on some social stuff.

105
00:07:31.880 --> 00:07:35.860
There's a bit of heavy
handed advocacy from Google.

106
00:07:35.860 --> 00:07:39.923
I'll put them on blast like polymer,
and the AMP team,

107
00:07:39.923 --> 00:07:43.295
sort of like,
if you wanna keep making money,

108
00:07:43.295 --> 00:07:48.416
you should use these Web Components now,
[LAUGH] not quite that level.

109
00:07:48.416 --> 00:07:53.155
But there was a bit of like,
sort of like shaming, like, you need to be

110
00:07:53.155 --> 00:07:58.227
using Web Components, and they're like,
I can't, it doesn't work for me.

111
00:07:58.227 --> 00:08:05.373
And so there's, social stuff,
basically it's Twitter's fault.

112
00:08:05.373 --> 00:08:08.765
And then there was some
confusion about HTML imports,

113
00:08:08.765 --> 00:08:11.943
I talked about how they
were killed off by Mozilla.

114
00:08:11.943 --> 00:08:16.562
I'm still not mad, yes I am.

115
00:08:16.562 --> 00:08:21.221
It sort of left the future,
what's gonna happen to these?

116
00:08:21.221 --> 00:08:28.090
If one of the four legs of the stool got
kicked out, does the stool still stand?

117
00:08:29.520 --> 00:08:33.875
And then, truly Web Components
didn't land in all major

118
00:08:33.875 --> 00:08:38.930
browsers until 2020 when
Edge switched to Chromium.

119
00:08:38.930 --> 00:08:43.856
So we had to literally kill
a whole entire browser rendering

120
00:08:43.856 --> 00:08:48.894
engine to get ubiquitous support
in all the major browsers.

121
00:08:48.894 --> 00:08:55.551
And if you look at the history, 2011 was
when they're sort of pitched as an idea,

122
00:08:55.551 --> 00:09:02.680
2013 stuff start showing up in Chrome,
2016 Safari gets the V0 implementation.

123
00:09:02.680 --> 00:09:05.307
Firefox didn't get it until 2018,

124
00:09:05.307 --> 00:09:09.491
they had a big overhaul of their
whole entire rendering engine.

125
00:09:09.491 --> 00:09:12.154
And then Edge didn't get it till 2020.

126
00:09:12.154 --> 00:09:18.194
So if you weren't using Web Components
before 2020, yeah, that makes sense.

127
00:09:18.194 --> 00:09:20.462
[LAUGH] You were probably
an early adopter,

128
00:09:20.462 --> 00:09:24.686
which is why now I think it's a really
great time to start looking at them, yes.

129
00:09:24.686 --> 00:09:27.918
&gt;&gt; As someone who's using
Web Components in production,

130
00:09:27.918 --> 00:09:30.816
can you speak to Safari's
support at this stage?

131
00:09:30.816 --> 00:09:34.428
I've heard in the past, I don't know
if it's FUD, that they support some but

132
00:09:34.428 --> 00:09:35.260
not all aspects.

133
00:09:35.260 --> 00:09:40.966
&gt;&gt; Yeah, so there is a tension, right?

134
00:09:40.966 --> 00:09:46.031
So, it's very Google led,
but like I showed,

135
00:09:46.031 --> 00:09:50.348
Microsoft is now getting involved too.

136
00:09:50.348 --> 00:09:54.190
But they all commit to
the same browser engine, or

137
00:09:54.190 --> 00:09:57.405
they influence the same browser engine.

138
00:09:57.405 --> 00:10:01.849
But historically, Safari has not jumped on

139
00:10:01.849 --> 00:10:06.910
the new web component proposals,
who knows why?

140
00:10:06.910 --> 00:10:09.940
Apple keeps things pretty
tight to their chest.

141
00:10:09.940 --> 00:10:14.974
They don't really broadcast what they're
doing, [LAUGH] they just kinda show

142
00:10:14.974 --> 00:10:20.177
up one day and say, we made a element or a
new CSS animation thing that you can use.

143
00:10:20.177 --> 00:10:23.967
And so, I think, historically, but

144
00:10:23.967 --> 00:10:28.357
I do think it is getting
a little bit better.

145
00:10:28.357 --> 00:10:32.135
I personally expect the speed to go up,
but there's a few things I

146
00:10:32.135 --> 00:10:36.200
can show you that are implemented
in Chrome, but not in Safari.

147
00:10:36.200 --> 00:10:40.053
And they would be cool if they
were in Chrome, or in Safari, but

148
00:10:40.053 --> 00:10:41.590
they're just not.

149
00:10:41.590 --> 00:10:44.729
So, stuff like declarative shadow DOM,
I think,

150
00:10:44.729 --> 00:10:47.652
element internals, and
stuff like that, so.

151
00:10:47.652 --> 00:10:51.620
&gt;&gt; I think that those tend to be nice to
haves in terms of web component usage,

152
00:10:51.620 --> 00:10:55.722
as opposed to like, yeah,
template just isn't processed by WebKit?

153
00:10:55.722 --> 00:11:00.785
&gt;&gt; Right,
I think there's no gamebreaking features.

154
00:11:00.785 --> 00:11:07.769
I could be wrong here, but
I think they support the V1 spec entirely.

155
00:11:07.769 --> 00:11:12.700
I think there's now a V2 sort of
like additions that places like

156
00:11:12.700 --> 00:11:18.474
the community group, or Web Components
back authors they want included.

157
00:11:18.474 --> 00:11:22.860
So, I think there's stuff like that,
so, but they're,

158
00:11:22.860 --> 00:11:27.880
to be fair, a little hill draggy on it,
so, and we don't know why.

