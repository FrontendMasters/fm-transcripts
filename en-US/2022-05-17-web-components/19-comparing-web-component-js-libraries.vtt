WEBVTT

1
00:00:00.050 --> 00:00:01.817
So let's compare some
web component libraries.

2
00:00:01.817 --> 00:00:03.105
This question has come up.

3
00:00:03.105 --> 00:00:06.774
But let's just look at them and
see the shape of them, and

4
00:00:06.774 --> 00:00:09.685
maybe understand the differences, maybe.

5
00:00:09.685 --> 00:00:12.068
I'm not gonna go through all 61.

6
00:00:12.068 --> 00:00:13.193
We could, I guess.

7
00:00:13.193 --> 00:00:16.133
But [LAUGH] we're gonna
have to pay more for

8
00:00:16.133 --> 00:00:21.520
our Frontend Masters subscriptions,
but we'll look at some of this here.

9
00:00:22.940 --> 00:00:24.763
We've kind of been staring at Lit, and

10
00:00:24.763 --> 00:00:27.040
we'll actually show
a bunch more Lit examples.

11
00:00:27.040 --> 00:00:31.452
So this will be kinda,
it'll get almost old to you at some point,

12
00:00:31.452 --> 00:00:34.902
but this would be a classic but
encounter, right,

13
00:00:34.902 --> 00:00:39.980
increment, decrement, and
you render the HTML at the bottom, right?

14
00:00:39.980 --> 00:00:44.144
So and then this is kind
of a custom directive, and

15
00:00:44.144 --> 00:00:48.355
it calls these things, yeah, okay, right?

16
00:00:48.355 --> 00:00:52.317
Pretty familiar shape,
not too different than React, I'd say, or

17
00:00:52.317 --> 00:00:54.105
kind of a React and Vue hybrid.

18
00:00:55.815 --> 00:00:59.065
Speaking of hybrids,
[LAUGH] here's one called hybrids.

19
00:00:59.065 --> 00:01:01.836
And this one is really interesting.

20
00:01:01.836 --> 00:01:07.885
When I first saw it, it gave me
sort of Svelte vibes when I saw it.

21
00:01:07.885 --> 00:01:12.639
It has a render function that uses
the HTML tag template literals.

22
00:01:12.639 --> 00:01:15.587
But it has just a bit more, I don't know,

23
00:01:15.587 --> 00:01:18.973
functional programming aspect to it,
right?

24
00:01:18.973 --> 00:01:20.023
So that's good.

25
00:01:20.023 --> 00:01:25.785
Lit can be functional too, but this
would be kinda just an example of that.

26
00:01:25.785 --> 00:01:33.990
Stencil.js, which powers
the Ionic framework is very cool.

27
00:01:33.990 --> 00:01:37.412
But it's got these JavaScript decorators,

28
00:01:37.412 --> 00:01:41.296
not officially a feature,
but it's coming soon.

29
00:01:41.296 --> 00:01:46.013
But they're leveraging that, so
you're gonna have some transpiling sorta

30
00:01:46.013 --> 00:01:50.220
thing happen, but
looks like they're also using TypeScript.

31
00:01:50.220 --> 00:01:55.329
So kind of future TypeScript
stuff going on here, but

32
00:01:55.329 --> 00:02:00.560
it's pretty nice,
it gives me kind of Angular vibes.

33
00:02:00.560 --> 00:02:04.593
If you've used Angular,
I hope that's not a slight, but

34
00:02:04.593 --> 00:02:10.110
just more of the strong typed way of
programming, so that's the vibe I get.

35
00:02:10.110 --> 00:02:13.247
But one neat thing about Stencil,
it has a superpower.

36
00:02:13.247 --> 00:02:15.860
I haven't messed with it,
but I've heard about it.

37
00:02:17.090 --> 00:02:22.690
Stencil's kind of designed to actually
transpile to different frameworks as well.

38
00:02:22.690 --> 00:02:27.362
So if you need to turn this into
a React component, you can do that.

39
00:02:27.362 --> 00:02:30.341
Or if you need to turn
this into a Vue component,

40
00:02:30.341 --> 00:02:33.706
I think there's tooling in
place to bridge that gap.

41
00:02:33.706 --> 00:02:36.023
So that's kind of a neat thing
that you may wanna check out.

42
00:02:36.023 --> 00:02:40.643
Again, your mileage may vary,
but I was told it existed.

43
00:02:40.643 --> 00:02:43.910
Now, Haunted,
Haunted is maybe my favorite.

44
00:02:43.910 --> 00:02:46.030
It's Lit with hooks.

45
00:02:46.030 --> 00:02:50.386
So it's kind of the React
hooks sort of look,

46
00:02:50.386 --> 00:02:56.476
shape to a web component, and
I actually like this quite a bit.

47
00:02:56.476 --> 00:03:03.078
[LAUGH] I like hooks, but I don't use
React, so this would be a great chance for

48
00:03:03.078 --> 00:03:07.562
me to use hooks more often,
so pretty interesting.

49
00:03:07.562 --> 00:03:11.467
But wait, there's more,
there's always more.

50
00:03:11.467 --> 00:03:16.633
You may not even have to switch JavaScript
frameworks to use web components.

51
00:03:16.633 --> 00:03:21.551
If you already have something in Vue,
or Svelte, or Preactor,

52
00:03:21.551 --> 00:03:26.376
Angular, or something,
you might be able to take that code and

53
00:03:26.376 --> 00:03:31.860
spit out a web component, as well as
use web components, kind of cool.

54
00:03:31.860 --> 00:03:33.848
So let's take a look at
what that looks like.

55
00:03:33.848 --> 00:03:36.718
Svelte is maybe the easiest.

56
00:03:36.718 --> 00:03:40.464
[LAUGH] You just write the code,
and then at the top,

57
00:03:40.464 --> 00:03:44.748
you say &lt;svelte:options
tag="my-counter" /&gt;.

58
00:03:44.748 --> 00:03:50.904
And Svelt's compiler, or
commandline tool figures out the rest,

59
00:03:50.904 --> 00:03:54.902
and spits out a custom
component from this.

60
00:03:54.902 --> 00:04:00.410
Looking at that, all the ways
to make a web component [LAUGH],

61
00:04:00.410 --> 00:04:06.134
looking at that, Svelte comes
in at kinda one of the smallest.

62
00:04:06.134 --> 00:04:11.357
So Svelte may be one of the best
ways to make a web component,

63
00:04:11.357 --> 00:04:17.121
who knows, depending on how you
measure that, but pretty cool.

64
00:04:17.121 --> 00:04:20.305
Vue is kind of in this class of,

65
00:04:20.305 --> 00:04:25.701
they have a function called
defineCustomElement.

66
00:04:25.701 --> 00:04:32.467
And it's basically a wrapper, so
you'd import your counter from Vue.

67
00:04:32.467 --> 00:04:34.867
It's just a Vue component
that looks like this.

68
00:04:34.867 --> 00:04:38.403
But then your
customElements.define("my-counter",

69
00:04:38.403 --> 00:04:42.008
defineCustomElement(MyCounter));, really
verbose.

70
00:04:42.008 --> 00:04:46.971
But basically,
you use this Vue function to spit

71
00:04:46.971 --> 00:04:50.856
out a web component from view, okay?

72
00:04:50.856 --> 00:04:54.475
So this might be a good way if
you have a system in Vue, and

73
00:04:54.475 --> 00:04:59.095
somebody's WordPress blog really
wants to use those components, but

74
00:04:59.095 --> 00:05:02.725
you don't wanna put Vue in
front of the WordPress blog.

75
00:05:02.725 --> 00:05:08.103
Maybe you can use this to offer
a alternate version of your

76
00:05:08.103 --> 00:05:13.045
existing system and
provide some some components.

77
00:05:13.045 --> 00:05:16.000
Your mileage may vary in production,
but it works,

78
00:05:16.000 --> 00:05:20.313
it's supported, and they score good
on that custom elements everywhere.

79
00:05:20.313 --> 00:05:23.641
Preact, sort of the same thing,
has a createCustomElement.

80
00:05:23.641 --> 00:05:30.560
You'll notice it's not using JSX,
it's using the HTML from htm/preact.

81
00:05:30.560 --> 00:05:33.683
So again,
another sorta tag template literal.

82
00:05:33.683 --> 00:05:37.110
And then you
customElements.define("my-counter",

83
00:05:37.110 --> 00:05:40.677
createCustomElement(MyCounter,
["count"]));.

84
00:05:40.677 --> 00:05:43.628
I think that's you have to put in
the props that it's gonna watch, and

85
00:05:43.628 --> 00:05:44.391
stuff like that.

86
00:05:44.391 --> 00:05:47.950
So all right, cool.

87
00:05:47.950 --> 00:05:53.906
There is one holdout,
this question came up.

88
00:05:53.906 --> 00:05:58.195
Notably, React is not being
offered here in this course,

89
00:05:58.195 --> 00:06:01.441
but the React situation is getting better.

90
00:06:01.441 --> 00:06:04.008
And according to custom elements, and

91
00:06:04.008 --> 00:06:08.763
there's an experimental branch of
React that should hit in React 19.

92
00:06:08.763 --> 00:06:12.425
React 18 just came out at
the time of this talk.

93
00:06:12.425 --> 00:06:15.693
But React 19, in theory,
is gonna get support for

94
00:06:15.693 --> 00:06:18.220
custom elements and web components.

95
00:06:18.220 --> 00:06:23.408
So could be an exciting time where you're
able to export components from React,

96
00:06:23.408 --> 00:06:27.450
and you're able to import
web components into React.

97
00:06:27.450 --> 00:06:30.997
So everything you learn here today,
or in this course,

98
00:06:30.997 --> 00:06:35.690
could actually work in your React
project in a year's time or something.

