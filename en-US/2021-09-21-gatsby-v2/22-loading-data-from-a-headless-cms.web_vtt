WEBVTT

1
00:00:00.610 --> 00:00:02.724
Okay, we're in the homestretch everybody.

2
00:00:02.724 --> 00:00:06.644
We are gonna cover a couple things, and
then we're gonna get this thing live.

3
00:00:06.644 --> 00:00:10.996
So let's do third party data.

4
00:00:10.996 --> 00:00:15.925
Getting data from another system
is probably the number 1 task,

5
00:00:15.925 --> 00:00:19.609
that you'll get hit with
is a Gatsby developer.

6
00:00:19.609 --> 00:00:24.774
Somebody's got their data in Airtable or
Excel or WordPress or

7
00:00:24.774 --> 00:00:29.751
Sanity or Contentful, or
any of these third party Systems.

8
00:00:29.751 --> 00:00:32.694
And they're gonna want to
make a website out of it,

9
00:00:32.694 --> 00:00:35.167
or as it's becoming more and more common.

10
00:00:35.167 --> 00:00:37.547
You'll actually get multiple sources.

11
00:00:37.547 --> 00:00:42.342
They'll have, Products in Shopify,
and blog posts in Sanity, and

12
00:00:42.342 --> 00:00:44.998
you wanna bring all of that together.

13
00:00:44.998 --> 00:00:48.243
Gatsby is really good at this, yeah,
and we talked about source plugins.

14
00:00:48.243 --> 00:00:52.933
And one of the things that Gatsby does
really well, is sourcing data from third

15
00:00:52.933 --> 00:00:57.994
party systems, especially anything that
would bill itself as like a headless CMS.

16
00:00:57.994 --> 00:01:02.090
Or other kinda headless commerce,
headless whatever,

17
00:01:02.090 --> 00:01:08.077
the term headless tends to mean, we store
the data and provide API's to access it.

18
00:01:08.077 --> 00:01:11.414
And that means that it's
a perfect match for Gatsby.

19
00:01:11.414 --> 00:01:18.788
So let's go ahead and load in some data,
I'm gonna use Sanity.

20
00:01:18.788 --> 00:01:25.866
So Sanity is a great,
let's just give it a little peek.

21
00:01:25.866 --> 00:01:27.789
So this is Sanity.

22
00:01:27.789 --> 00:01:31.187
It's a really developer friendly,

23
00:01:31.187 --> 00:01:37.222
good free tier way to manage content,
if you need a headless CMS.

24
00:01:37.222 --> 00:01:40.138
It's configured through code,
it's got a good back end,

25
00:01:40.138 --> 00:01:42.247
it's just nice in general I like the team.

26
00:01:42.247 --> 00:01:48.382
So this is what I use to manage
the learn with JSON website.

27
00:01:48.382 --> 00:01:53.111
So on learn with JSON I
list all of my episodes and

28
00:01:53.111 --> 00:01:56.550
each of these is stored in Sanity.

29
00:01:56.550 --> 00:02:03.379
So what I need is the ability to pull
these in and display them somewhere.

30
00:02:03.379 --> 00:02:07.079
So, if I was gonna do this in a Gatsby
site, Sanity is a great match for this.

31
00:02:07.079 --> 00:02:12.231
So for me,
this is pretty much exactly what I want.

32
00:02:12.231 --> 00:02:15.116
So, what I haven't showed yet
is this Gatsby plugin.

33
00:02:15.116 --> 00:02:17.088
We got there kinda incidentally,

34
00:02:17.088 --> 00:02:20.085
as we were talking about
Gatsby source file system.

35
00:02:20.085 --> 00:02:24.568
But the plugin library for
Gatsby is pretty incredible.

36
00:02:24.568 --> 00:02:27.638
If you get into this plugin library and
you start looking around.

37
00:02:27.638 --> 00:02:29.135
We wanna use Sanity.

38
00:02:29.135 --> 00:02:34.169
Okay, let's look at Sanity and we can find
in here, here's Gatsby-source-Sanity.

39
00:02:34.169 --> 00:02:35.870
So, I'm gonna click on this and

40
00:02:35.870 --> 00:02:39.401
it gives us all the instructions
that we need on how to make it work.

41
00:02:39.401 --> 00:02:41.750
So we're using Gatsby V3.

42
00:02:41.750 --> 00:02:42.667
So that's great.

43
00:02:42.667 --> 00:02:45.718
Let's go ahead and
just install this thing,

44
00:02:45.718 --> 00:02:49.663
so I'm going to NPM install,
Gatsby-source-Sanity.

45
00:02:56.595 --> 00:03:00.736
And ,now that we've got that we can go and
configure it.

46
00:03:00.736 --> 00:03:04.153
So, I'm gonna get into my Gatsby config.

47
00:03:06.921 --> 00:03:07.755
Down here.

48
00:03:11.900 --> 00:03:15.577
And, at the very bottom really doesn't
matter, you can add it wherever you want.

49
00:03:15.577 --> 00:03:19.457
I'm gonna add one more
plugin config object and

50
00:03:19.457 --> 00:03:23.834
this one is gonna resolve
Gatsby-source-Sanity.

51
00:03:23.834 --> 00:03:30.765
And for the options, the Gatsby source for
Sanity has a few things that we can do.

52
00:03:30.765 --> 00:03:34.783
If you wanna just read data,
you can get the Public data,

53
00:03:34.783 --> 00:03:40.159
which is what goes on our website,
from Sanity, just using its project ID.

54
00:03:40.159 --> 00:03:42.413
And then you set the dataset.

55
00:03:42.413 --> 00:03:45.800
So, I wanna use production as the dataset.

56
00:03:45.800 --> 00:03:50.500
Now, my learn with JSON instance
ID is you can all use this,

57
00:03:50.500 --> 00:03:55.295
so you don't have to go set up
a data source is this VNKUPGYB.

58
00:03:55.295 --> 00:04:01.203
And this is read only, like it's only
gonna let you pull data that's public.

59
00:04:01.203 --> 00:04:04.708
So anything that you can
get through this source is

60
00:04:04.708 --> 00:04:07.720
something that's already on my website.

61
00:04:07.720 --> 00:04:11.235
So it's not like we're doing
a security risk or anything.

62
00:04:11.235 --> 00:04:12.436
You don't have a right token.

63
00:04:12.436 --> 00:04:15.704
You don't have the ability to go and
mess with the data.

64
00:04:15.704 --> 00:04:16.815
This is just to read it.

65
00:04:16.815 --> 00:04:24.218
So, after I've saved this,
I can start my Server NPM run develop.

66
00:04:29.221 --> 00:04:32.047
And what I really love about this is,

67
00:04:32.047 --> 00:04:36.250
because we've already looked at,
how to get images.

68
00:04:36.250 --> 00:04:39.078
How to get MDX posts,
how to get site metadata,

69
00:04:39.078 --> 00:04:43.610
I bet you already have some inkling
of how we're gonna do this.

70
00:04:43.610 --> 00:04:44.897
So if I go over to graphical.

71
00:04:44.897 --> 00:04:50.029
Now, even if you've just heard of Sanity
for the first time looking at this.

72
00:04:50.029 --> 00:04:54.549
I bet you could figure out,
how to create content from Sanity data,

73
00:04:54.549 --> 00:04:58.847
because of how predictable
Gatsby's data models are, right?

74
00:04:58.847 --> 00:05:00.143
That's the magic of this.

75
00:05:00.143 --> 00:05:03.878
So if we go in and we look all Sanity
episode, all right, let's get the nodes.

76
00:05:03.878 --> 00:05:10.528
Cool, I want to get the title and
let's get the guest name, right?

77
00:05:10.528 --> 00:05:13.791
So, we can see here's the first
look at Gatsby functions.

78
00:05:13.791 --> 00:05:18.454
Here's JavaScript autocomplete with straw
day on here's introduction review, okay,

79
00:05:18.454 --> 00:05:19.814
so those are out of order.

80
00:05:19.814 --> 00:05:21.016
Let's order them.

81
00:05:21.016 --> 00:05:26.344
We're gonna sort by, let's go by date.

82
00:05:26.344 --> 00:05:28.396
If we can find it somewhere down here.

83
00:05:28.396 --> 00:05:33.911
Here's the date ,we're gonna order it,
descending.

84
00:05:33.911 --> 00:05:36.806
And, hey, now we're into the future.

85
00:05:36.806 --> 00:05:39.346
These are posts that
are happening in the future.

86
00:05:39.346 --> 00:05:43.497
So I could do like a date is,

87
00:05:43.497 --> 00:05:49.466
let's say less than or equal to today.

88
00:05:49.466 --> 00:05:55.631
So let's do like, 2021, 811.

89
00:05:58.011 --> 00:05:59.457
Let's see if that works.

90
00:05:59.457 --> 00:06:00.049
Yeah, there we go.

91
00:06:00.049 --> 00:06:03.855
So these are the episodes that have
been published before today, so

92
00:06:03.855 --> 00:06:08.018
not anything that's scheduled,
just stuff that's already happened.

93
00:06:08.018 --> 00:06:13.011
And, another way that we can do that is
I know that a post has happened ,if it

94
00:06:13.011 --> 00:06:14.214
has a YouTube ID.

95
00:06:14.214 --> 00:06:20.056
So, I could say instead
of filtering on the date,

96
00:06:20.056 --> 00:06:25.063
I can filter on whether or
not the YouTube ID

97
00:06:25.063 --> 00:06:30.506
does not equal null and
we get the same result.

98
00:06:30.506 --> 00:06:33.477
So, there's a few ways
that we can do that.

99
00:06:33.477 --> 00:06:38.096
Now we just happened and I happen to know
that because I work on this site a lot.

100
00:06:38.096 --> 00:06:41.125
But, you could pull it in
whatever way you want it.

101
00:06:41.125 --> 00:06:45.960
Now, usually traditionally in Gatsby
version 2 and prior, what you would have

102
00:06:45.960 --> 00:06:50.381
done at this point is you would have
popped open a file called Gatsby node.

103
00:06:50.381 --> 00:06:53.099
You would have started
digging into node API's,

104
00:06:53.099 --> 00:06:57.253
you'd have to run the Create Page calls
and be providing paths and context.

105
00:06:57.253 --> 00:07:02.019
And there's a lot of stuff that would
need to happen to make this work.

106
00:07:02.019 --> 00:07:04.372
Fortunately, we don't have
to do any of that anymore.

107
00:07:04.372 --> 00:07:06.894
We can just let Gatsby do
all of that work for us.

108
00:07:06.894 --> 00:07:12.334
And this is another thing that I think
is just like such a cool addition that

109
00:07:12.334 --> 00:07:17.973
they added in V3, which is the ability
to create pages based on file names.

110
00:07:17.973 --> 00:07:22.911
If you've ever used next js,
this is gonna look pretty familiar, but

111
00:07:22.911 --> 00:07:24.845
you can do Sanity episode.

112
00:07:24.845 --> 00:07:29.581
I'm gonna write this out and
then we'll break down,

113
00:07:29.581 --> 00:07:33.061
what I just did slug__current.js.

114
00:07:33.061 --> 00:07:36.226
Okay, so let's look at this file name and
talk about what it is.

115
00:07:36.226 --> 00:07:39.067
So, what I'm doing here,
is I'm saying and you know what,

116
00:07:39.067 --> 00:07:40.584
I wanna this to live in a folder.

117
00:07:40.584 --> 00:07:42.779
So let's give it a folder called episode.

118
00:07:42.779 --> 00:07:45.546
And I'm gonna move this inside,
yes, all right?

119
00:07:45.546 --> 00:07:49.201
So in here,
we have a folder called episode and

120
00:07:49.201 --> 00:07:54.560
that's because I wanna each one to
be prefixed with slash episode.

121
00:07:54.560 --> 00:08:01.943
And then we're saying,
Sanity,Episode.slug__current.

122
00:08:01.943 --> 00:08:03.493
And that's all in curly braces.

123
00:08:03.493 --> 00:08:06.844
So the curly braces, signify to Gatsby,

124
00:08:06.844 --> 00:08:10.974
we wanna dynamically create
the name of this file.

125
00:08:10.974 --> 00:08:15.842
So, We're gonna generate the path
based on what is inside here.

126
00:08:15.842 --> 00:08:21.331
The Sanity episode is the data
type of what this thing is.

127
00:08:21.331 --> 00:08:26.661
So, if we look at the docs on this,
if I go to query and

128
00:08:26.661 --> 00:08:33.831
then we'll go to let me just filter
this Sanity, all Sanity episode.

129
00:08:33.831 --> 00:08:38.714
What we get back is nodes and
each node is a Sanity episode.

130
00:08:38.714 --> 00:08:43.054
So, I'm basically getting,
I'm saying I wanna look for

131
00:08:43.054 --> 00:08:45.899
each Sanity episode that we can find.

132
00:08:45.899 --> 00:08:52.109
I wanna create a new file and
we're gonna use the slug and

133
00:08:52.109 --> 00:08:56.350
I wanna use the the sub field current.

134
00:08:56.350 --> 00:09:00.007
So, we're saying use
the Sanity episodes and

135
00:09:00.007 --> 00:09:04.809
as the actual name for the path,
use the slug current field.

136
00:09:04.809 --> 00:09:09.022
The double underscore signifies that
we're using a sub field of slug.

137
00:09:09.022 --> 00:09:13.870
So, this is a little bit head bendy to
look at initially when you're looking at

138
00:09:13.870 --> 00:09:14.538
the data.

139
00:09:14.538 --> 00:09:20.453
But this is pretty slick, because it
basically means any data that you have,

140
00:09:20.453 --> 00:09:24.739
we can now generate a file
from it like that really cool.

141
00:09:24.739 --> 00:09:28.391
So let's do that.

142
00:09:28.391 --> 00:09:29.030
Let's actually make that happen.

