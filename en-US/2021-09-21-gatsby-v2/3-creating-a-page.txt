[00:00:00]
>> We now have our gatsby project and there's nothing in it. It won't do anything right now because there's no code. So, let's create our first page. We're gonna make the simplest possible Gatsby site that we can. And the way that we do that is in our source, we're gonna create a new folder called pages.

[00:00:21]
And then inside this pages, we're gonna create a new file, and we're gonna call it index.js. So, the concept of pages in Gatsby, this is a magic folder. And, what that means is as Gatsby is run, it's gonna look for source pages and anything inside of it, it will treat as a page for the site.

[00:00:43]
So, by creating index.js, what I've just done is created the index page, the home page for my site. So, let's import everything as React. This is something that you have to do in Gatsby right now because they haven't turned off the requirement to import React when you're not using imports from React, that will likely change in the future.

[00:01:07]
But for now, it's a little quirk of Gatsby that we still have to import everything from react, not Gatsby. And then, we can export a default function. And, this decision here to use a default function versus export default with a fat arrow function or an anonymous function or any of those things, those are all arbitrary choices.

[00:01:37]
This is my preference. I like having named functions makes my components easier to debug. The only big thing is it has to be a default export. Pages in Gatsby have to be a default export or else they won't get picked up. And inside of this, we can just return some basic code.

[00:01:53]
So I'm gonna do a main tag, what's up, Mark? That's a great question. I believe Gatsby, let's see. That might be an intermediate Gatsby question, but they have a doc on this that we can share. I think, it just works, yeah, natively supports JavaScript and TypeScript. So if you just add the .tsx extension, you will get TypeScript.

[00:02:35]
We're not gonna write TypeScript today, mainly because I don't know TypeScript well enough to teach it. So, we are going to stick with regular old JavaScript, but there are some really good TypeScript resources on Frontend Masters, on learn with JSON, anywhere that you wanna go, if you wanna dig into TypeScript.

[00:02:54]
Okay, so in our index page, what we're going to do is we're exporting a default function. I named the index page, so that it'll show up in debug logs. And we're returning just a main element. And, you can make this whatever you want, it could be a div or whatever.

[00:03:08]
And I'm going to put an h1 and let's do Hello Frontend Masters!. Okay, that's it. You've now built a Gatsby site. That is the simplest possible Gatsby site. It's one file, one React component and now we can make this thing work. So let's run it. I'm gonna npm run develop.

[00:03:31]
Wait, I need to actually install all the dependencies, forgot to actually run npm install. So inside the repo that we cloned, I'm running npm install or i for short. And, this is going to pull in Gatsby React and ReactDOM, which are the dependencies we need. Gatsby is a little bit big because it does a lot.

[00:03:48]
So it can take a little bit to install. That doesn't mean that it ships all of that. Most of what it pulls in is only for development, not for production. So it's a big package, but it still ships relatively light amount of JavaScript. Okay, so we have completed the install, we are ready to roll and it looks like I stopped the scrolling cuz I'd actually only took 16 seconds and I was just staring at my scrolled up terminal.

[00:04:13]
So now that we've actually got the dependencies, we've got our dependencies, we've got our page. And again, all the pages is a React component and it's in this special pages folder inside of our source directory and index.js. So this is gonna create our homepage of the site. Let's run develop.

[00:04:31]
And what we can see happens here is the Gatsby develop CLI command runs. And, Gatsby starts doing its thing. So a lot happens in here. And you can see that it's looking for config, it's setting up a cache. It's looking for whether or not there are Gatsby functions which we aren't gonna talk about today, but we will cover In the intermediate Gatsby course.

[00:04:51]
It has a handful of lifecycle functions and things like that. The vast majority of this is what's happening under the hood, not something that you as a developer need to care about, unless you're trying to do something very specific. So for the most part, you just look for all the successes to run and you'll see a list here of all of our files names.

[00:05:10]
So let's open this up. And now we have Hello Frontend Masters!. So this is our working site. And if we inspect this, make this a little bit bigger so you can see it. You can see that inside here, the site has generated a Gatsby div. This is where Gatsby puts everything.

[00:05:33]
It adds this div and then it runs the site inside of here. And, we can see that there's some accessibility stuff. This is actually really slick, where it's making the page focusable. So if you do navigation, on the client side, a lot of times what happens is screen readers and other accessibility tools don't realize that the page has been changed because no browser page change event happened.

[00:05:56]
So what Gatsby is doing is it's adding some helpers that make that work. Inside of that, we get our markup. And as you can see, this is just straight up markup. That's all there is to it. And, to see what this looks like when we build it, let's actually build this site.

[00:06:13]
So I'm gonna run npm run build. And, the reason I wanna show this is that Gatsby when it's in development mode adds things for hot reloading and debugging output and some other information that makes the bundle a little bit bigger. When you build the site, it takes all of that out and builds a production bundle.

[00:06:34]
So, let's run this thing. We're gonna run serve. And this opens up in 9,000. And so if we look at this, not a lot has changed here, but let's check out the Network tab. If I can find my Network tab. Here it is. Let's maybe make this a lot bigger so we can see what's going on.

[00:07:00]
So I'm going to refresh the page now that we're running, and we can see that we sent down about 184 kilobytes of resources. Let's disable the cache and run that again. So, 63.6 kilobytes transferred, that's after compression and everything. And we got the whole page down pretty fast.

[00:07:23]
Obviously, we're on local host so everything's gonna be real fast. But we can see here that it's sending down a little bit of Webpack runtime, it sends down about 42 kilobytes of the framework. And then our app comes out to about 15.6 kilobytes. And then we can see some other stuff in here, that's kinda cool.

[00:07:40]
We get the Index page is sent down as a component. And then we get JSON, that is the data for the page and JSON that's for the app itself. And this data will get more interesting as we add more things to our site. And again, none of this is stuff that you need to care about.

[00:08:00]
This is just how Gatsby's running things under the hood. But what this means is, if I go in and I disable JavaScript, and see if I can find it here. Where are my advanced settings? Let's close the console. And I'm going to, here, this is what I was looking for.

[00:08:19]
Then I can disable JavaScript down here somewhere. There we go. So I'm gonna disable JavaScript and refresh the page. And now look, we still get our Hello Frontend Masters and if we look at the markup, we still have our markup here. All the things that we wanted are present.

[00:08:39]
So the site's still works without JavaScript. But what doesn't happen is you can see that all of this JavaScript got blocked. So we sent a lot less data but we didn't need it. It's all optional enhancements, these are things that build on top of the site. So that's one of the things that's really powerful about Gatsby.

[00:09:11]
Right now, it's not there for anything. When we add a second page, which is what we'll do next, I'll show you how that works and that is how we signify to the document that a page is changed. So, let's actually go ahead and do that. We're gonna create a second page here.

[00:09:31]
And this one we can call about. And so, what's worth mentioning here is that what we're doing is we're basically creating HTML files with the same name. So index.js becomes index.html, which browser shortcut to slash. About will become .html or /about. And for us to do that, we can actually take all the same information out here so I'll just copy paste this one.

[00:10:01]
And let's call this one AboutPage and update some copier. We'll do About This Site. Okay, so having done that, now note, my site is still, wait, I need to go back to npm run develop. If npm run develop had been running this, it would have picked this up without having to restart because new pages Gatsby can recover from that and just shown.

[00:10:32]
So, let's close the server, go back over here, and we've got about now works. Okay, so this is great. So, again, I'm navigating directly, which means that we are getting that full page event which doesn't require any activity on Gatsby site. But, the next thing that we wanna do is we wanna figure out how to do a link.

[00:10:57]
So, before we do that, let me go ahead and just commit my work. So I'm gonna get into github. And then we're gonna go into this project, so frontend masters intro to Gatsby project. And let's just check our stuff. So we've created two pages so far, all right?

[00:11:24]
So I'm going to commit this and just say create pages. So I'm gonna open up a new one, we're gonna call this branch progress. And this is the one that I'll actually be changing things on. So if I look at our log, we can see, here's our commit, we created pages and I'm going to push, To progress.

[00:11:45]
So I'll continually push to the progress branch throughout the workshop so you can see the code going up as we as we do it.

