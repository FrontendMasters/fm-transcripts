WEBVTT

1
00:00:00.350 --> 00:00:01.918
Instead of what we've been doing,

2
00:00:01.918 --> 00:00:05.475
which is where I've been intentionally
404ing the site so that I can see a list

3
00:00:05.475 --> 00:00:09.030
of the blog posts, let's actually build
a list of blog posts on the homepage, so

4
00:00:09.030 --> 00:00:12.290
that we can see what's been written and
show the latest posts.

5
00:00:12.290 --> 00:00:15.180
So I'm gonna come back out here, refresh.

6
00:00:15.180 --> 00:00:18.710
I wanna show down here
a list of my latest posts.

7
00:00:18.710 --> 00:00:20.810
So first,
let's figure out how to get that.

8
00:00:20.810 --> 00:00:24.429
So I'm gonna go back into the graph qL and

9
00:00:24.429 --> 00:00:28.590
I want all Mdx nodes,
okay that part's good.

10
00:00:30.150 --> 00:00:32.870
But let's turn this part off for now.

11
00:00:32.870 --> 00:00:34.720
And let's get a few things that we need.

12
00:00:34.720 --> 00:00:36.890
So the first and foremost, we want the id.

13
00:00:36.890 --> 00:00:41.655
Whenever you're querying for making a list
in Gatsby, it's worth grabbing the id,

14
00:00:41.655 --> 00:00:44.435
because you're probably
gonna need to set a key,

15
00:00:44.435 --> 00:00:48.934
if you're iterating over these fields in
react, if you wanna look up the posts,

16
00:00:48.934 --> 00:00:52.270
the id is the thing that's
guaranteed to be the same.

17
00:00:52.270 --> 00:00:54.110
So it's a consistent thing to grab.

18
00:00:54.110 --> 00:00:55.828
So grab that id.

19
00:00:55.828 --> 00:01:00.266
I also want the slug of the post,
and then out of the front matter,

20
00:01:00.266 --> 00:01:04.320
I wanna be able to show the title,
and I wanna show the date.

21
00:01:05.370 --> 00:01:07.520
Now let's see,
we want the description for sure.

22
00:01:07.520 --> 00:01:08.790
And then let's get the date.

23
00:01:08.790 --> 00:01:13.783
And let's do that like relative time.

24
00:01:13.783 --> 00:01:16.840
That should be everything we
need to build a blog role.

25
00:01:16.840 --> 00:01:20.420
So from here I can make
a list of here are my posts.

26
00:01:20.420 --> 00:01:22.610
And then you know what else we should do?

27
00:01:22.610 --> 00:01:25.020
Let's actually sort these.

28
00:01:25.020 --> 00:01:27.070
So, I'm gonna sort by the date.

29
00:01:28.590 --> 00:01:31.560
So here I've checked fields, and
this is one of the purple ones.

30
00:01:31.560 --> 00:01:34.660
I know the contrast is low here,
and I apologize about that.

31
00:01:34.660 --> 00:01:38.826
But under fields, we can choose one of
these and I want front matter and you see

32
00:01:38.826 --> 00:01:43.760
these underscores indicate that it's one
of the fields inside of front matter.

33
00:01:43.760 --> 00:01:48.940
So we want the date, and
I wanna order it by descending.

34
00:01:48.940 --> 00:01:52.656
So the most recent post first, right?

35
00:01:52.656 --> 00:01:54.671
And if I change that to ascending,

36
00:01:54.671 --> 00:01:57.805
it would show me the oldest
blog at the top of the list.

37
00:01:57.805 --> 00:01:59.265
So we're gonna go descending.

38
00:02:00.355 --> 00:02:03.545
So now we've got an ordered
list of our posts that for now,

39
00:02:03.545 --> 00:02:07.911
we're just gonna make it everything and
because I want this to be a unique name,

40
00:02:07.911 --> 00:02:10.185
we'll call it get blog posts.

41
00:02:10.185 --> 00:02:12.025
And I'm gonna copy this.

42
00:02:13.145 --> 00:02:14.425
And now we can use it, right?

43
00:02:14.425 --> 00:02:16.125
So we've got a list of these.

44
00:02:16.125 --> 00:02:18.389
So I'm gonna go into the homepage.

45
00:02:20.400 --> 00:02:23.226
And let's use a static query again.

46
00:02:27.510 --> 00:02:28.476
We'll get our data.

47
00:02:32.743 --> 00:02:37.622
Do a tagged template literal graph qL and

48
00:02:37.622 --> 00:02:41.360
inside we can paste our query.

49
00:02:44.210 --> 00:02:47.863
So, now that we've got that,
we have data and

50
00:02:47.863 --> 00:02:51.820
that's gonna contain all of our Mdx posts.

51
00:02:51.820 --> 00:02:56.993
So we can pull those out by,
we'll just put them into a variable so

52
00:02:56.993 --> 00:03:01.511
it's easier for
us to reason about we'll get posts, and

53
00:03:01.511 --> 00:03:04.850
that's gonna be data.allMdx.nodes.

54
00:03:04.850 --> 00:03:08.972
Because again, the way that this works is,
we go data is the query, and

55
00:03:08.972 --> 00:03:11.410
then we have the query name, so all Mdx.

56
00:03:11.410 --> 00:03:15.565
So data.allMdx.nodes and
then each post is gonna have id slug and

57
00:03:15.565 --> 00:03:18.320
frontmatter with the details that we need.

58
00:03:19.940 --> 00:03:24.822
Then down in here, I want to
create a second level heading and

59
00:03:24.822 --> 00:03:28.290
we'll say check out my recent blog posts.

60
00:03:32.030 --> 00:03:33.080
And let's make a list out of it.

61
00:03:33.080 --> 00:03:34.820
So we'll do an unordered list.

62
00:03:34.820 --> 00:03:40.460
And inside of the unordered list,
we're gonna do a posts.map of each post.

63
00:03:41.910 --> 00:03:47.838
And for each of these,
we're going to return a list item, and

64
00:03:47.838 --> 00:03:53.082
that list item's gonna have
a key of the post.id, and

65
00:03:53.082 --> 00:03:59.870
inside of it I want to use that
link component to the post.slug.

66
00:03:59.870 --> 00:04:03.966
And so the post slug is here,

67
00:04:03.966 --> 00:04:08.750
that's the actual URL, right?

68
00:04:08.750 --> 00:04:14.780
And then we're going to link
to post.frontmatter.title.

69
00:04:17.548 --> 00:04:22.477
And then I wanna show when it was written,
so

70
00:04:22.477 --> 00:04:25.941
we'll do like a small tag, and

71
00:04:25.941 --> 00:04:31.958
we'll say it was posted
post.frontmatter.date.

72
00:04:31.958 --> 00:04:37.280
Okay, so it will add that space for us so
that we can break it across two lines.

73
00:04:37.280 --> 00:04:38.160
All right, so this is good.

74
00:04:38.160 --> 00:04:38.700
This should work.

75
00:04:38.700 --> 00:04:39.480
Let's go check it out.

76
00:04:39.480 --> 00:04:40.075
See how we did.

77
00:04:42.525 --> 00:04:43.830
Hey, hey, look at that.

78
00:04:43.830 --> 00:04:46.589
Okay, so now we have on our homepage,

79
00:04:46.589 --> 00:04:49.970
a heading and
the ability to get into our post.

80
00:04:49.970 --> 00:04:52.660
And so now we can actually
navigate this post, right?

81
00:04:52.660 --> 00:04:59.197
So this is where Gatsby really starts to
shine, because we added this data in, and

82
00:04:59.197 --> 00:05:05.830
because it's predictably in our graph qL
layer, all the things that we learned for

83
00:05:05.830 --> 00:05:11.600
like querying metadata still apply
when we wanna get Mdx data, right?

84
00:05:11.600 --> 00:05:13.320
It feels very predictable.

85
00:05:13.320 --> 00:05:15.920
The things we're doing are the same.

86
00:05:15.920 --> 00:05:18.697
We're gonna go to graphical,
we're gonna build a query,

87
00:05:18.697 --> 00:05:22.580
we're gonna copy paste that query into
our component, and then we use that data.

88
00:05:22.580 --> 00:05:26.670
So you'll start to see like these are the
patterns that'll carry you through all of

89
00:05:26.670 --> 00:05:28.430
your Gatsby builds.

90
00:05:28.430 --> 00:05:32.930
It's really nice, really powerful,
you'll get a lot of mileage out of it.

91
00:05:32.930 --> 00:05:35.528
So why don't we commit our work there,

92
00:05:35.528 --> 00:05:39.870
because we're gonna shift over and
start talking about images.

