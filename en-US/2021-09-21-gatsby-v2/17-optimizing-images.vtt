WEBVTT

1
00:00:00.840 --> 00:00:03.912
MDX is something that's really powerful,
but

2
00:00:03.912 --> 00:00:07.522
there's something that we
haven't talked about yet,

3
00:00:07.522 --> 00:00:12.970
which is probably the biggest factor in
a lot of websites and that is images.

4
00:00:12.970 --> 00:00:17.828
The management of images can be
an extraordinarily frustrating thing

5
00:00:17.828 --> 00:00:22.353
to do and I've noticed that on a lot
of modern websites people have

6
00:00:22.353 --> 00:00:24.710
chosen to just not deal with it.

7
00:00:24.710 --> 00:00:30.706
So if you go to a lot of websites,
and you look at the network tab,

8
00:00:30.706 --> 00:00:34.929
you'll load 10s of megabytes of images and

9
00:00:34.929 --> 00:00:39.060
it just really can bog
down the experience.

10
00:00:39.060 --> 00:00:43.573
It can lead to, like a lot of jumpy
content, like there's nothing more

11
00:00:43.573 --> 00:00:48.390
annoying than when you go to a page and
you get loaded and then the content that

12
00:00:48.390 --> 00:00:52.981
you're reading jumps down the screen
because an image just popped in and

13
00:00:52.981 --> 00:00:57.660
these are all experiences that
are solvable, but they're tricky.

14
00:00:57.660 --> 00:01:01.630
And they require some custom code and
they require some consideration.

15
00:01:01.630 --> 00:01:06.215
And a lot of times when we're on deadline,
we gonna get something out the door,

16
00:01:06.215 --> 00:01:10.810
we just don't have the time or don't make
the time to deal with those problems.

17
00:01:12.080 --> 00:01:17.108
And that's a real bummer,
because I think that a poor image handling

18
00:01:17.108 --> 00:01:22.051
experience from a website is probably
one of the most noticeably bad

19
00:01:22.051 --> 00:01:27.011
things that I deal with on my day
to day internet browsing activity.

20
00:01:27.011 --> 00:01:31.868
It is really the, like the thing that will
get me to close a website faster than

21
00:01:31.868 --> 00:01:34.034
anything else is if I open a site and

22
00:01:34.034 --> 00:01:38.598
everything starts jumping around
because the images don't load well,

23
00:01:38.598 --> 00:01:43.532
there's ads popping in all over the place,
like if that content feels janky,

24
00:01:43.532 --> 00:01:47.390
it doesn't feel polished,
I'm just like, you know what?

25
00:01:47.390 --> 00:01:49.769
I don't really need to read
whatever this article is,

26
00:01:49.769 --> 00:01:51.338
I'm gonna just do something else.

27
00:01:51.338 --> 00:01:56.289
So what I originally
started using Gatsby for,

28
00:01:56.289 --> 00:02:00.180
honestly was image management.

29
00:02:00.180 --> 00:02:05.343
Gatsby has a very well at least
when they first introduced it,

30
00:02:05.343 --> 00:02:10.705
a very novel approach to managing images,
in that Gatsby itself

31
00:02:10.705 --> 00:02:17.060
as part of the build system will optimize
and make responsive and handle UX,

32
00:02:17.060 --> 00:02:23.350
all sorts of improvements around
the way the images work on your site.

33
00:02:23.350 --> 00:02:25.534
And it's built into the framework so

34
00:02:25.534 --> 00:02:29.903
that we as web developers are not out
here trying to remember or make time or

35
00:02:29.903 --> 00:02:35.210
convince somebody on the team that we
need to carve out a sprint to fix images.

36
00:02:35.210 --> 00:02:40.168
Instead, we can as part of building our
site, use Gatsby's image plugin, and

37
00:02:40.168 --> 00:02:45.770
the image stuff just happens, it's just
done and we don't have to think about it.

38
00:02:45.770 --> 00:02:49.049
Now there are still things that you want
to think about which I've touched on

39
00:02:49.049 --> 00:02:51.868
a little bit when we were talking
about gatsby-build times, and

40
00:02:51.868 --> 00:02:55.310
I'll talk about a little bit more
as we get further into the section.

41
00:02:55.310 --> 00:03:01.070
But in general, a huge number of problems
with images that lead to a poor UX,

42
00:03:01.070 --> 00:03:06.560
slow load times, bad SEO ranking
because your site's not fast enough,

43
00:03:06.560 --> 00:03:11.510
etc, all of that stuff can be
greatly improved with almost no work

44
00:03:11.510 --> 00:03:15.360
by using this gatsby-image-plugin.

45
00:03:15.360 --> 00:03:19.130
So to do that, let's go ahead and install
it and take a look at how it works.

46
00:03:19.130 --> 00:03:23.818
So we're gonna install
gatsby-plugin-image,

47
00:03:23.818 --> 00:03:28.510
we're going to install
gatsby-plugin-sharp.

48
00:03:30.370 --> 00:03:36.440
And sharp is a it's an open source
library that does image conversion,

49
00:03:36.440 --> 00:03:40.179
so if you if you use sharp
you can take a JPG and

50
00:03:40.179 --> 00:03:44.832
turn it into a WebP or
take a PNG and turn it into, well,

51
00:03:44.832 --> 00:03:51.250
you probably turn it into a WebP or
an avatar or something like that.

52
00:03:51.250 --> 00:03:56.611
It's a really powerful library, it's
originally built in C and ported into or

53
00:03:56.611 --> 00:04:01.572
I guess wrapped in node, which
historically has been if you've ever seen

54
00:04:01.572 --> 00:04:07.173
me complain about sharp it's because
sharp doesn't always build consistently,

55
00:04:07.173 --> 00:04:12.721
so the tool itself is wonderful, the port
of it to note is sometimes frustrating.

56
00:04:12.721 --> 00:04:15.222
But I haven't seen those
problems in a while, so

57
00:04:15.222 --> 00:04:18.540
I imagine it's probably
improved quite a bit.

58
00:04:18.540 --> 00:04:21.779
And then we've got
the gatsby-transformer-sharp and so

59
00:04:21.779 --> 00:04:24.050
there are two things that happen there.

60
00:04:24.050 --> 00:04:28.082
Well, let's see there are three
main buckets of plugins and

61
00:04:28.082 --> 00:04:33.156
then there's a lot of kind of auxilary
use special case plugins and Gatsby.

62
00:04:33.156 --> 00:04:37.701
There are standard plugins which
are like the image plugin or

63
00:04:37.701 --> 00:04:43.135
like the MDX plugin, where you're
basically saying I want to add this,

64
00:04:43.135 --> 00:04:46.820
this piece of functionality to Gatsby.

65
00:04:46.820 --> 00:04:51.557
There are source plugins like the file
system source plugin which say I

66
00:04:51.557 --> 00:04:55.220
want you to pull in a certain
type of data into Gatsby.

67
00:04:55.220 --> 00:05:00.264
And then there are transformer plugins and
transformer plugins are the ones that will

68
00:05:00.264 --> 00:05:05.480
say okay, I found a type of data I want to
transform it into another type of data.

69
00:05:05.480 --> 00:05:10.956
So transformer-sharp will say I'm
looking for files that are images and

70
00:05:10.956 --> 00:05:15.330
I will transform those into
Gatsby optimized images.

71
00:05:15.330 --> 00:05:18.060
So though you'll see those
kind of categories and

72
00:05:18.060 --> 00:05:20.880
that's typically what each one is doing.

73
00:05:20.880 --> 00:05:25.070
So that's why we need a gatsby-plugin-harp
and a gatsby-transformer-sharp.

74
00:05:25.070 --> 00:05:29.797
So let's get those installed, once we've
got that in, we can head on down to

75
00:05:29.797 --> 00:05:33.900
the bottom of our Gatsby config and
let's add some image setting.

76
00:05:33.900 --> 00:05:41.340
So I want to include another instance
of Gatsby source file system.

77
00:05:42.922 --> 00:05:44.800
And this one is gonna be for images.

78
00:05:44.800 --> 00:05:49.819
So we are going to say it's got
a name of images and we want to

79
00:05:49.819 --> 00:05:55.398
run a path Of dirname and then remember
way at the beginning when we were looking

80
00:05:55.398 --> 00:05:59.630
at this folder called Images in the source
directory, we're finally gonna use that.

81
00:05:59.630 --> 00:06:04.978
So it's gonna be source, images, And

82
00:06:04.978 --> 00:06:12.077
then we wanna include gatsby-plugin-image,

83
00:06:12.077 --> 00:06:17.103
gatsby-plugin-sharp, oops,

84
00:06:19.173 --> 00:06:24.415
And gatsby-transformer-sharp.

85
00:06:24.415 --> 00:06:27.825
Okay, so now that we've got those,

86
00:06:27.825 --> 00:06:32.563
let's restart our Gatsby server,
npm run develop

87
00:06:41.720 --> 00:06:46.248
What did I break?
I type out image.

88
00:06:46.248 --> 00:06:52.740
Image Try that one more time.

89
00:06:57.344 --> 00:06:58.164
Here we go.

90
00:07:02.082 --> 00:07:03.970
Okay, so everything is building.

91
00:07:08.225 --> 00:07:15.672
And Once this finishes, there we go.

92
00:07:15.672 --> 00:07:18.932
Let's head over here and
let's look at what we're getting.

93
00:07:18.932 --> 00:07:24.257
So I'm gonna start with all file and
I'm gonna filter by

94
00:07:24.257 --> 00:07:29.486
the source instance name and
lets just get the images.

95
00:07:31.592 --> 00:07:38.680
And I want to get nodes, and lets get the,
I don't know, lets get the public URL.

96
00:07:40.340 --> 00:07:45.830
Right, so this is a trick if you're trying
to like pull in all of your images,

97
00:07:45.830 --> 00:07:50.645
you can filter by whatever the source
instance name is in this case,

98
00:07:50.645 --> 00:07:56.670
that is what you have set here, the source
instance and we set a name of images.

99
00:07:56.670 --> 00:07:59.800
So I'm pulling in all of the images and
we're just getting the publicURL.

100
00:07:59.800 --> 00:08:04.964
So if we build the Gatsby site,
the images we'll be moved over to

101
00:08:09.288 --> 00:08:15.420
To this publicURL/data then I can add
a hash, and then the name of the file.

102
00:08:15.420 --> 00:08:18.180
And this is a kind of nice feature if
you want to quickly see what's going on.

103
00:08:18.180 --> 00:08:23.305
Now these images are pretty big so
the previews don't show particularly well,

104
00:08:23.305 --> 00:08:28.276
but you can at least if you know what your
images look like, quickly get a sense

105
00:08:28.276 --> 00:08:33.326
of which one you're looking at except for
this one that apparently doesn't,

106
00:08:33.326 --> 00:08:37.412
I know why that one looks like that is,
because that's a wall.

107
00:08:37.412 --> 00:08:42.430
[LAUGH] So then in here, so
we've got these these regular old files,

108
00:08:42.430 --> 00:08:46.760
but If we pull in the size,
these are pretty well resized.

109
00:08:46.760 --> 00:08:53.566
I ran these through Squoosh.app,
which if you haven't used Squoosh.app,

110
00:08:53.566 --> 00:08:57.703
it is a wonderful tool,
do I have an image I can-

111
00:09:00.016 --> 00:09:03.057
Probably do here, here's an image,

112
00:09:03.057 --> 00:09:07.997
so this is a rubber duck that I
made that I'm very happy about,

113
00:09:07.997 --> 00:09:12.842
but if I wanna resize this I can see,
like I dropped this in and

114
00:09:12.842 --> 00:09:17.940
we're compressing it and
we get a 92% file size reduction.

115
00:09:17.940 --> 00:09:22.303
So it's down from 376
kilobytes to 31.1 kilobyte and

116
00:09:22.303 --> 00:09:27.347
you can kind of slide over to see what
the difference in quality is, and

117
00:09:27.347 --> 00:09:32.500
it's there but it's subtle,
you can't see too much of a difference.

118
00:09:32.500 --> 00:09:35.052
Now if I were to like take
the quality way down,

119
00:09:35.052 --> 00:09:37.350
you can kind of see what happens, right?

120
00:09:37.350 --> 00:09:42.685
Like it gets pretty, pretty gross,
but we can play with it untill

121
00:09:42.685 --> 00:09:48.490
it looks good enough and you get
a huge reduction in file size there.

122
00:09:48.490 --> 00:09:53.056
So anyways I ran these images through
Squoosh to give us a pretty good

123
00:09:53.056 --> 00:09:57.862
starting point and there's a reason
I did that cuz even though Gatsby is

124
00:09:57.862 --> 00:10:02.749
going to actually process these images for
us, part of the build process

125
00:10:02.749 --> 00:10:07.170
means it still has to load
the original images into memory.

126
00:10:07.170 --> 00:10:12.674
So if I use the original size of these
images like let's go to unsplash and

127
00:10:12.674 --> 00:10:17.830
look at the original size of this image,
here, that's the image.

128
00:10:17.830 --> 00:10:25.426
So if we look at the original image,
we can see let's open this in a new tab,

129
00:10:25.426 --> 00:10:29.889
and we'll look at the network tab here,
and

130
00:10:29.889 --> 00:10:36.644
if I'm looking at my Network tab,
disable the cache, we reload,

131
00:10:36.644 --> 00:10:41.735
this is 3.2 megabytes,
so this is a huge file.

132
00:10:41.735 --> 00:10:46.714
And if I want to process this, I pull it
in, I load 3.2 megabytes into memory,

133
00:10:46.714 --> 00:10:49.203
I have to cut it up into different sizes,

134
00:10:49.203 --> 00:10:53.844
we'll look at what that looks like in
a minute and do all this work, right?

135
00:10:53.844 --> 00:10:58.066
And that's a huge source file to start
with, so I'm basically from the get

136
00:10:58.066 --> 00:11:01.349
go setting Gatsby up to fail
because I'm saying, here's

137
00:11:01.349 --> 00:11:06.160
a huge file you don't need 90% of this
do a bunch of extra work for no reason.

138
00:11:06.160 --> 00:11:11.074
And then I go up to a dozen or 100 or 1000
pages and each one of them has a giant

139
00:11:11.074 --> 00:11:16.120
image on it like this and then I'm gonna
get mad at Gatsby because Gatsby slow.

140
00:11:16.120 --> 00:11:20.984
It optimize your images a little bit,
like the way that I would do this is so

141
00:11:20.984 --> 00:11:25.698
we take this image, we're gonna save it,
maybe we're gonna save it.

142
00:11:27.979 --> 00:11:33.519
Yeah, we'll save it here and
then I would go over to Squoosh,

143
00:11:33.519 --> 00:11:38.540
and I've got my image,
I drag this one in here, right?

144
00:11:38.540 --> 00:11:44.410
So now we've got this giant image and
I'll just hit this resize button.

145
00:11:44.410 --> 00:11:48.126
Now I happen to know that
I'm never gonna put anything

146
00:11:48.126 --> 00:11:52.514
on my site over 1600 pixels wide,
so I can then make a call.

147
00:11:52.514 --> 00:11:57.272
Let's resize this down to 1600 pixels,
and I can do 75% quality like that still

148
00:11:57.272 --> 00:12:01.300
looks pretty good,
I can barely tell the difference, right?

149
00:12:01.300 --> 00:12:07.660
And I've made a difference from
2.38 megabytes to 152 kilobytes.

150
00:12:07.660 --> 00:12:09.592
This is a enormous difference,

151
00:12:09.592 --> 00:12:14.670
especially when you start looking it
like a site with 100s of images on it.

152
00:12:14.670 --> 00:12:17.434
So this is a little bit of upfront work,
you can automate this,

153
00:12:17.434 --> 00:12:19.440
there are tools that will let you do it.

154
00:12:19.440 --> 00:12:23.976
But ultimately just make sure people
aren't dumping raw images from their

155
00:12:23.976 --> 00:12:28.728
camera or like your phone will take a
photo and that photo is like 5 megabytes,

156
00:12:28.728 --> 00:12:31.830
don't just dump that
straight into a Gatsby site.

157
00:12:31.830 --> 00:12:36.086
Make it the smallest or the the largest
size you'll actually use and optimize it

158
00:12:36.086 --> 00:12:40.230
beforehand and you're gonna really save
yourself some build time that way.

159
00:12:42.070 --> 00:12:44.570
Okay, so diatribe aside.

160
00:12:44.570 --> 00:12:46.960
Let's get back into
actually using these here.

161
00:12:46.960 --> 00:12:53.270
So we have our list of images, and
these are the unoptimized ones.

162
00:12:53.270 --> 00:12:58.835
So this is the full size image of 109
kilobytes to this one, yeah, so this one

163
00:12:58.835 --> 00:13:04.755
is 109 kilobytes and if I come out here
and load, there it is, here's the image.

164
00:13:05.775 --> 00:13:09.283
Now I don't need that full size image,
so I'm going to get my file,

165
00:13:09.283 --> 00:13:10.899
we'll get the nodes, right?

166
00:13:10.899 --> 00:13:13.996
And then under here we get
a childImageSharp, and

167
00:13:13.996 --> 00:13:19.280
that childImageSharp is gonna let us
get what's called gatsbyImageData.

168
00:13:19.280 --> 00:13:23.918
Now if I query this,
you'll notice that I should have

169
00:13:23.918 --> 00:13:28.773
filtered this down to be just
the source instance name.

170
00:13:33.022 --> 00:13:38.067
So now just our images, we get a type
of layout, we get a background color,

171
00:13:38.067 --> 00:13:41.992
we get the actual images, so
there's a fallback image and

172
00:13:41.992 --> 00:13:47.279
then we get a source set and then we get
different sources for different sizes,

173
00:13:47.279 --> 00:13:51.960
so like here's an image WebP and
it gets resized down to like 512.

174
00:13:51.960 --> 00:13:56.339
So this is actually really cool
because what this means is

175
00:13:56.339 --> 00:14:00.914
now instead of these huge images,
I can go to this one here.

176
00:14:03.371 --> 00:14:09.920
And this is a resize or that's the logo,
let's look at a different one.

177
00:14:09.920 --> 00:14:13.080
So here is the the smashburger.

178
00:14:14.120 --> 00:14:17.092
Yeah, so here's the smashburger,
this is the original and

179
00:14:17.092 --> 00:14:18.910
let's grab one of the smaller ones.

180
00:14:20.000 --> 00:14:23.250
So this is a resized version
of that smashburger.

181
00:14:23.250 --> 00:14:27.879
And you can see that Gatsby
basically took each of these and

182
00:14:27.879 --> 00:14:34.497
made multiple versions of it so that when
we do responsive images if I'm on a phone,

183
00:14:34.497 --> 00:14:39.129
I don't need a 1200 pixel
wide version of this image,

184
00:14:39.129 --> 00:14:43.405
all I need is the 300 pixel wide version.

185
00:14:43.405 --> 00:14:47.037
And if I'm on a modern browser and
I can support WebP,

186
00:14:47.037 --> 00:14:50.480
I don't need a JPEG, I can use the WebP.

187
00:14:50.480 --> 00:14:53.510
And so let's actually look at how
big the difference is on these two.

188
00:14:53.510 --> 00:15:00.070
So this is a JPEG,
the JPEG is 88.4 kilobytes at full size.

189
00:15:00.070 --> 00:15:03.190
So let's do the same thing,
same size, but with a WebP.

190
00:15:04.960 --> 00:15:08.650
The WebP is 60% of the size,
65% of the size.

191
00:15:10.040 --> 00:15:13.627
That's a pretty notable difference for
an image that more or

192
00:15:13.627 --> 00:15:18.127
less looks the same like there's barely
any change in the quality of this and

193
00:15:18.127 --> 00:15:20.540
there's a huge change in the file size.

194
00:15:20.540 --> 00:15:25.558
So if your browser supports WebP
definitely makes sense to use that, right?

195
00:15:25.558 --> 00:15:30.716
And so Gatsby is giving us the ability
to do that by providing not just JPEGs,

196
00:15:30.716 --> 00:15:35.550
but also the web piece, and it's doing
that in a way that can be used with

197
00:15:35.550 --> 00:15:40.629
the store set attribute on images and
pictures, which means that browsers

198
00:15:40.629 --> 00:15:45.390
will just naturally choose
the smallest size that fits its specs.

199
00:15:45.390 --> 00:15:50.140
So if I'm on a huge browser,
it's gonna use the biggest possible image.

200
00:15:50.140 --> 00:15:52.161
If I'm on a teeny tiny little phone,

201
00:15:52.161 --> 00:15:57.120
it's gonna choose the image that actually
fits the resolution of that phone.

202
00:15:57.120 --> 00:16:00.754
This is a really, really powerful
way to deal with these problems so

203
00:16:00.754 --> 00:16:04.258
that we don't have to,
I don't have to go generate all of these,

204
00:16:04.258 --> 00:16:08.120
I just have to make sure that the source
image isn't a monster, right?

205
00:16:08.120 --> 00:16:10.792
And, that's why this is such a cool setup,
and honestly,

206
00:16:10.792 --> 00:16:13.572
I don't even need to make sure
the source images is a monster,

207
00:16:13.572 --> 00:16:16.800
I could just let Gatsby have a nice,
slow build and be okay with that.

208
00:16:16.800 --> 00:16:19.053
And, sometimes that's fine, you know?

209
00:16:19.053 --> 00:16:21.750
It just depends on like,
what are you trying to optimize for?

210
00:16:21.750 --> 00:16:24.130
Do you want to never have
to do any manual work?

211
00:16:24.130 --> 00:16:25.700
Great, Gatsby will do it all,
you just gotta wait.

