WEBVTT

1
00:00:00.270 --> 00:00:03.993
One I noticed in your VS Code,
do you have an extension for

2
00:00:03.993 --> 00:00:07.340
your GraphQL to display
the syntax highlighting?

3
00:00:08.380 --> 00:00:12.136
&gt;&gt; Yes, I have, what's it called?

4
00:00:15.625 --> 00:00:20.700
I have the GraphQL extension
from the GraphQL Foundation.

5
00:00:20.700 --> 00:00:23.677
&gt;&gt; Is there any documentation
within Gatsby for

6
00:00:23.677 --> 00:00:28.933
transferring an existing website that
has nothing to do with Gatsby to Gatsby?

7
00:00:28.933 --> 00:00:32.180
&gt;&gt; An existing React site or any site?

8
00:00:32.180 --> 00:00:37.060
&gt;&gt; Just any site, any documentation on
starting to integrate Gatsby into that?

9
00:00:37.060 --> 00:00:43.493
&gt;&gt; That's a good question, I think
they might have a migrating to Gatsby.

10
00:00:43.493 --> 00:00:49.287
Let's see, they've got, That's

11
00:00:49.287 --> 00:00:53.885
a blog post from somebody
else on migrating.

12
00:00:53.885 --> 00:00:55.518
Here's one on WordPress.

13
00:00:57.684 --> 00:01:02.100
I don't know that they have
any docs on this actually,

14
00:01:02.100 --> 00:01:07.188
it looks like there are a lot of
community resources on this that

15
00:01:07.188 --> 00:01:12.484
you can use that will allow you to
pull the the RSS feed from a site.

16
00:01:12.484 --> 00:01:15.173
Or other ways of kind
of importing data that

17
00:01:15.173 --> 00:01:18.030
you can then use to populate the site.

18
00:01:18.030 --> 00:01:22.894
It depends on how the site is structured,
what your data sources are and

19
00:01:22.894 --> 00:01:25.744
kind of what you're trying to preserve.

20
00:01:25.744 --> 00:01:31.176
If you wanna bring over the whole look
just straight up, then you can do that,

21
00:01:31.176 --> 00:01:35.691
you would kinda copy/paste the site
into a layout component and

22
00:01:35.691 --> 00:01:40.350
then punch holes in it where
the custom content would need to be.

23
00:01:40.350 --> 00:01:47.181
But again, there are a lot of, what does
your current setup look like questions,

24
00:01:47.181 --> 00:01:51.547
before you can give a solid
answer to how to migrate.

25
00:01:51.547 --> 00:01:54.711
&gt;&gt; Cool, awesome, thank you.

26
00:01:54.711 --> 00:01:55.686
&gt;&gt; Mark.

27
00:01:55.686 --> 00:01:59.209
&gt;&gt; Yeah,
how do you go about adding CSS reset?

28
00:01:59.209 --> 00:02:03.558
&gt;&gt; If you wanted to add a CSS reset,
I would add it right in the global, here.

29
00:02:03.558 --> 00:02:07.297
So for me, to be completely honest,

30
00:02:07.297 --> 00:02:11.772
this is now my CSS reset,
is to do like this.

31
00:02:11.772 --> 00:02:16.404
Sometimes what I'll do is
I'll set margin 0, and

32
00:02:16.404 --> 00:02:22.224
then I'll do what's called
the lobotomized owl selector where

33
00:02:22.224 --> 00:02:29.462
you set any element that is adjacent to
another element gets a 1 rem top margin.

34
00:02:29.462 --> 00:02:31.633
But as you can see,
this can introduce some weirdness, so

35
00:02:31.633 --> 00:02:33.150
I don't do that anymore.

36
00:02:33.150 --> 00:02:38.128
But yeah, if you wanted to do a reset,
you would just drop it right in here,

37
00:02:38.128 --> 00:02:39.169
if you wanted.

38
00:02:39.169 --> 00:02:42.117
You could create a reset.css and

39
00:02:42.117 --> 00:02:47.378
just import it in the same way,
and these will, I believe,

40
00:02:47.378 --> 00:02:52.533
they get imported in order, so
if you wanted to do a reset,

41
00:02:52.533 --> 00:02:58.560
you would just probably put it
right up here, something like that.

42
00:02:58.560 --> 00:03:03.062
&gt;&gt; Does Gatsby have a history
call in React Router where

43
00:03:03.062 --> 00:03:07.270
you're able to trigger if
I hit the Back button?

44
00:03:07.270 --> 00:03:10.900
There is an API in Gatsby.

45
00:03:10.900 --> 00:03:12.430
API doc, that's what we're looking for.

46
00:03:12.430 --> 00:03:17.260
So if you are using
the navigate helper function,

47
00:03:17.260 --> 00:03:22.205
which is what we're looking for,
there is a import

48
00:03:22.205 --> 00:03:28.308
{navigate} from "gatsby", and
so you can do navigation.

49
00:03:28.308 --> 00:03:33.470
You can add state to it and stuff so
that you can push history on.

50
00:03:33.470 --> 00:03:39.518
And then if you wanted to,
like changing your back button behavior,

51
00:03:39.518 --> 00:03:42.348
you can have your link replace.

52
00:03:42.348 --> 00:03:50.960
Where is the,
I think if you wanted to do actual,

53
00:03:50.960 --> 00:03:56.855
implement your own back button,
that's not in Gatsby but

54
00:03:56.855 --> 00:04:03.492
you can update the history the way
that you would in React Router.

55
00:04:03.492 --> 00:04:06.140
Under the hood Gatsby uses Reach Router.

56
00:04:06.140 --> 00:04:08.747
So if you look at the Reach Router docs,

57
00:04:08.747 --> 00:04:14.240
you can actually reach into that package
and do a bunch of custom stuff there.

58
00:04:14.240 --> 00:04:17.544
But that's a little out of scope for
today,

59
00:04:17.544 --> 00:04:23.003
if you have specific questions about that,
you can hit me up on Twitter.

60
00:04:23.003 --> 00:04:25.920
I'm always happy to have some questions,
just send me a tweet.

61
00:04:27.510 --> 00:04:32.068
&gt;&gt; Why wouldn't we set
variables in the global.css and

62
00:04:32.068 --> 00:04:38.360
then use them in header.module.css for
accessing those variables?

63
00:04:38.360 --> 00:04:40.352
&gt;&gt; Why would we?

64
00:04:40.352 --> 00:04:42.600
&gt;&gt; Or why wouldn't we, I guess?

65
00:04:42.600 --> 00:04:48.214
&gt;&gt; So yeah, I like that pattern, that's
what we're doing in the global.css here,

66
00:04:48.214 --> 00:04:53.070
is we set these variables and
then we access those in the layout.

67
00:04:53.070 --> 00:04:58.491
I like this pattern and it is a pattern
that I am happy to use in my projects,

68
00:04:58.491 --> 00:05:03.047
if you look at my open source,
you'll see that I do this a lot.

69
00:05:03.047 --> 00:05:07.459
There are always trade-offs when you
get to the way you manage styles and

70
00:05:07.459 --> 00:05:13.040
one of the trade-offs of this one is
that this looks a little bit like magic.

71
00:05:13.040 --> 00:05:17.148
So a way that you can control this is
you could potentially put together

72
00:05:17.148 --> 00:05:19.040
a variables.css.

73
00:05:19.040 --> 00:05:23.007
And that is a signal to
the rest of the team that these

74
00:05:23.007 --> 00:05:27.640
configuration values are in there,
they can go find them.

75
00:05:27.640 --> 00:05:32.644
But ultimately, there's not
a downside/outside of the standard,

76
00:05:32.644 --> 00:05:37.392
downsides of organizing code in any
way where there are upsides and

77
00:05:37.392 --> 00:05:39.110
downsides of all this.

78
00:05:39.110 --> 00:05:43.826
I really like this versus some kind of
JavaScript-based configuration because

79
00:05:43.826 --> 00:05:45.975
somebody who knows CSS can come in and

80
00:05:45.975 --> 00:05:49.391
work on this project without
having to learn JavaScript.

81
00:05:49.391 --> 00:05:51.810
And to me, that's a benefit.

82
00:05:53.190 --> 00:05:59.208
&gt;&gt; So the question there is
essentially using the CSS variables

83
00:05:59.208 --> 00:06:05.230
instead of CSS module,
setting it to a variable, I see.

84
00:06:05.230 --> 00:06:09.147
&gt;&gt; Yeah, cuz the other way
that we would have to do this,

85
00:06:09.147 --> 00:06:13.677
is we would need to duplicate
these values all over the place or

86
00:06:13.677 --> 00:06:19.277
we would need to install something like
Sass so that we could get variables.

87
00:06:19.277 --> 00:06:22.180
Or we'd have to introduce CSS and
JS stuff so

88
00:06:22.180 --> 00:06:25.580
that we could put these
variables somewhere.

89
00:06:25.580 --> 00:06:28.690
For me,
this is the path of least resistance.

90
00:06:28.690 --> 00:06:33.062
And the nice thing about this too
is if you wanna read it clear or

91
00:06:33.062 --> 00:06:37.701
color, a better example of this
would be if you were to set a font.

92
00:06:37.701 --> 00:06:42.470
Let's say that we set the text-size-base,

93
00:06:42.470 --> 00:06:45.532
and we call that 18 pixels.

94
00:06:45.532 --> 00:06:48.855
And then down here,
we know that that's what we wanna use.

95
00:06:48.855 --> 00:06:54.160
So we say text-size-base, but then later
on, we wanna have an aside component and

96
00:06:54.160 --> 00:06:58.588
that aside component we know should
be smaller, I can override this.

97
00:06:58.588 --> 00:07:03.290
I can say text-size-base and
set it to 16 pixels.

98
00:07:03.290 --> 00:07:08.731
And then anything inside of
this aside will automatically

99
00:07:08.731 --> 00:07:15.965
get a lower text-size-base if we base
the values off of this variable.

100
00:07:15.965 --> 00:07:21.765
So it gives you a lot of control without
having to add tooling to manage it.

101
00:07:21.765 --> 00:07:25.219
It's just kinda built
into the CSS language.

