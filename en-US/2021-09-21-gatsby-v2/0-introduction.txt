[00:00:00]
>> I'm excited. Today is gonna be a good day we are talking about an introduction to Gatsby. Gatsby is a cool framework. We're gonna talk more about what that is. But before we do that, let's dive right in with a little bit of an intro about who I am.

[00:00:14]
My name is Jason Lengstorf. I am the VP of Developer Experience at Netlify. I'm also the host of Learn with Jason. Once upon a time I was a Gatsby team member, I used to work at at Gatsby. I'm also a boop enthusiastic, if you've ever seen my show.

[00:00:28]
You seen any of the silly projects that I make, you'll know that corgis and boops factor in pretty heavily to my work. So before we get started let's do a little bit of disambiguation of what Gatsby is and isn't, so there are two Gatsby's. If you start googling around, you're gonna see references to Gatsby, the framework, and you're also going to see references to Gatsby cloud.

[00:00:49]
These are two sides of the same company, one is an open source project, one is a business but this can get a little bit confusing. So for the purposes of this workshop, let's be clear that what we are going be talking about is only Gatsby the open source framework.

[00:01:05]
We are not going to talk about Gatsby cloud today. So if you're interested in Gatsby cloud, you can check out gatsbyjs.com but we're not gonna cover that. So at its core, Gatsby is a site generator. Gatsby is a way for people to build sites from code. It's very powerful for that.

[00:01:24]
It kind of rose to popularity as a way to manage your blog. You could have markdown files and turn those into a working blog site using react, which is a great way if you're a developer to get your portfolio out into the world or start writing a blog about what you're learning or otherwise, collect your thoughts and get those shared with the world.

[00:01:44]
Gatsby is also built on react, so react is a JavaScript framework. It's made popular by Facebook, it's what powers their UI. And the main offering of react is components and reactivity. So what you see with react is that you get your UI breaks down into component files. And those component files can be mixed, matched, shared, remixed and it's a little more containable.

[00:02:12]
It's a little easier to think about and reason about what's happening in your code, which is why react is powerful and then the ability to add in that reactivity layer, that ability to quickly pull in abrupt to changes, update the state based on what's going on, keep track of some data and update a different part of your UI based on that data.

[00:02:32]
Those are all things that make react really appealing it's one of the reasons it's it's the leading framework out there today. Gatsby decided to built on react as the right way to build for the web. And it did this in a way that involves server side rendering. So server side rendering, is when you take react code, which typically would run on a client, and you use a server, to generate the resulting HTML.

[00:02:54]
So what would happen after the react code ran, gives you some markup that would show in the browser. That's how you can see the output of a react app in the browser. When you server side render react, you're actually able to eliminate JavaScript altogether and you just get some HTML.

[00:03:09]
So Gatsby will take your react code, server side rendering, put some HTML in. And then when it hits the browser, it'll rehydrate and put that JavaScript back on top. So you start where if somebody disables JavaScript with a Gatsby site, they'll still be able to load it, it still works.

[00:03:26]
You can see the pages, you can browse the site, everything works the way you would expect. And then if you enable JavaScript, you get more interactivity and more features. The site will load and then become app like, instead of having to do a full page refresh, you'll get JavaScript redirects between pages and there's a lot of extra bonuses that happen when you add JavaScript but, it's not required.

[00:03:49]
It's an optional enhancement, which I think is a really powerful model when you start thinking about building with JavaScript in general. Gatsby is also all in on GraphQL. If you're familiar with GraphQL it is another Facebook invention. It Is a query language for data. And if you've worked with API's before, one of the most common ways that you'll see that done is through REST endpoints.

[00:04:12]
That's when you go to a website and it goes slash API slash posts. And then when you hit that, you end up getting back a JSON object that's an array of the posts and all the data that you have would need. This is a really powerful model when you're looking at REST API's.

[00:04:28]
They are great for small subsets of data or linear data. But, as data grows in complexity, you start to see this kind of network effect where well you don't just need posts. I need posts and the comments for that post and the author of the post, and the authors of the comments and comments written by those comment author.

[00:04:53]
And it just starts to get into this like messy thing where I'm not just looking at data in one way. I'm starting to think about the the graph of data, the connections between all the data. That's what GraphQL is designed to solve. GraphQL is a way to combine data in a graph like way which means that we can say I want my posts.

[00:05:10]
Now write in the query for my posts, I would like to get the author and the comments. And then inside those queries, I would also like to get additional comments, additional posts by that author, maybe categories and related posts, all those things can happen in the same query, whereas in REST, I would have to make an individual REST call for each of those things and then combine that data myself.

[00:05:32]
So, GraphQL is it treats data as more of a free form, flexible thing, whereas REST is a little more rigid about the way that it approaches data. That's why Gatsby went all in on it. Gatsby has made this bet on. You're going to build sites using content from a lot of different places your file system, you'll have images, you'll maybe pull in some third party data, you're gonna have additional things coming in.

[00:05:59]
And all of those need to connect. I have a blog post, but I need to pull some images for it, I also wanna pull in some comments from a third-party system. And there are a lot of things that lead to me, needing data from a lot of sources and I don't wanna have to do that data reconciliation myself.

[00:06:14]
GraphQL allows me to pull all those together in a single query and then use them. And that's why Gatsby is bet on that. Gatsby is also opinionated, Gatsby is going to tell you where to put your files. It's gonna tell you how to query for data. It's gonna give you components that you should use to get all the benefits, right?

[00:06:31]
It's very much a framework that says, we're going to give you a set of guardrails, within which you can succeed. It's designed for that. And this is a really good thing when you are trying to get something done quickly, when you're trying to get a whole team to follow the same set of rules, one of the biggest challenges you'll run into with any sort of software at scale, is documentation.

[00:06:56]
So when you write bespoke software, you're not just writing code, you also have to write and maintain the documentation for that code, or else anybody who's never worked on it before, is having to learn the entire system from scratch through reverse engineering. When you use an opinionated framework, when you opt into something like reactor to Gatsby, what you're getting is a lot of community documentation and a lot of community best practices that lighten your documentation.

[00:07:22]
So instead of having to document the whole system, here's every bit of code we wrote, why it does, what it does and how you can use it. We can now say most of this is react, most of this is Gatsby. You are also able though, to do these things, so we only have to to document our custom stuff instead of the whole thing.

[00:07:41]
And that can be a strength. It can also be a hindrance, and there are reasons why you wouldn't want a super opinionated framework. I find that for myself, whenever I'm working on code, if I find that the majority of the code I'm writing is to back out of decisions made by the framework I've chosen, I've probably chosen the wrong framework.

[00:07:59]
So when you're planning your project when you're thinking through how you're going to build this thing, start considering the trade offs. Is this something that will benefit from that consistency those guardrails. That high predictability of how things will be created on the site, or is this something where what I'm trying to do is weird.

[00:08:17]
I'm trying to do something that I've never seen before. And for me to do this using a framework will require me to back out a bunch of decisions or use the escape hatches to get away from the opinions that are held by this framework. Gatsby is built around performance, it's one of their core value propositions.

[00:08:35]
They are very conscious of how to make websites load and feel faster. One of the big promises of the web has always been that we can make our own app store. We've seen this in progressive web apps. We've seen this in the ability to have a website be offline and installable on your desktop on mobile phones.

[00:08:54]
But there's always been this kind of issue where apps generally just feel better. They feel snappy. They feel like things just happen, right? And Gatsby is trying to address that problem. Gatsby is doing a lot of things behind the scenes that make pages feel like they load instantly, that make your initial page loads really fast.

[00:09:14]
And all of that we'll get into the specifics of how they do that, as we start actually building a site. But at its core, Gatsby is always trying to think about the way that it will impact its users on the performance side. And probably the biggest reason to use Gatsby is that Gatsby is wildly convenient.

[00:09:33]
It has a bunch of starters that do most of the things you would need. You wanna build a blog? Great, there's a bunch of different templates that you can install right now that will give you a blog. And all you have to do is start writing. It also has a huge number of plugins.

[00:09:48]
And whether those are for pulling in data from somewhere else hooking into third party services, doing transformations of data into different formats. All of those things are not only possible, but really straightforward with Gatsby. So if you're trying to get something up in a hurry, Gatsby is worth considering because it's so so fast and so convenient versus rolling something on your own.

