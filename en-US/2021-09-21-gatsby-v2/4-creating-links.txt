[00:00:00]
>> All right, so we've got our site still running, we can move here, we can go to our about page. This isn't particularly useful right now, because we have to know the names of these pages to get between them. So why don't we set up some links, and now there's nothing wrong with just doing a plain old link.

[00:00:20]
I could do something like this. And I'd click it and I would go home, but it does a full page refresh. We don't want that, we want that Gatsby kind of app like experience. So what I'm gonna do to make that work is I'm gonna use Gatsby's link component, so we can just import that directly from Gatsby.

[00:00:42]
And then down here instead of using an a tag, I'm gonna use the link component, and we use to instead of href. In the link component so we're going to link to home. And let's maybe use different call this back to home. All right, so now we have this back to home.

[00:01:03]
Now watch this tab index and watch the fact that the page doesn't refresh. It did everything so fast that we didn't even see it, cool. Here's the other part that it does, is it's got this Gatsby announcer and so you see how it says that we navigate it.

[00:01:20]
So let's go back. So we're at about this site. So then when we click, here we go, navigated to hello masters or hello frontend masters. And that's sort of like what Gatsby is doing to make things more accessible. It looks like it's happening so fast that we can't see some of it.

[00:01:37]
But that's the the gist of what's going on. And then we can do the same thing on our homepage. So let's just copy paste this link. Right, and then we can drop this in here, we'll do a link to and we're gonna go to about and say about this site.

[00:01:58]
Okay, so now that we've created these two links, we can bounce back and forth. And you can see that what's happening is, it's changing. Without having to fully reload the page. So this gives us that app-like experience that we're after. We are able to navigate between pages based on routes, we can navigate directly to these.

[00:02:18]
If I refresh the page, I'm still on about, so this isn't like a fully single page app style where we can go to any page but if we refresh, it resets us back to the entry point. This is, we enter at the path that we want to be at, and then it mounts as an app.

[00:02:37]
And we get that single page app like experience. It's very app like no page refreshes and all those good things. So that is linking. And fortunately, the linking and Gatsby is just really simple. It makes me happy when an API works like this because it feels easy. I like it when things feel easy.

[00:03:00]
I shouldn't have to think very hard about getting this stuff to work. What I should also show though before we move on, is something really cool about Gatsby, is if we refresh this, let me make this bigger so we can see what's going on. Let me clear this and let's refresh that page again.

[00:03:24]
Okay, so we have our page data. Right, now watch when I hover over home, to see how it just loaded that index.js. It just loaded the component that we need, so that when we click, it's already there. So this is another thing that Gatsby is doing in the background, when you hover over a link It'll start prefetching data so that you don't have to wait as long after you click that link.

[00:03:53]
And a lot of times, I'm gonna go here and I'm gonna click, that's maybe 500 milliseconds. 500 milliseconds can make a big difference. If something happens in under a second or so, it feels instant. It's a very nice experience. And if the difference in me clicking is one second or one and a half seconds in terms of how long I wait, that can make the difference between my app feeling a little slow or native.

[00:04:21]
And that's the little things that we all want to do when we build custom apps, but we don't have time for and so you just end up, you just end up not doing it, right? Gatsby builds that in. So now instead of wanting to do it and not having time, you don't even have to think about it.

[00:04:37]
It's just automatically there.

