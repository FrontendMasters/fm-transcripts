WEBVTT

1
00:00:00.240 --> 00:00:03.276
Right now when we look at our code,

2
00:00:03.276 --> 00:00:09.363
we can see that we're not getting
a whole lot of useful information.

3
00:00:09.363 --> 00:00:12.550
Let me close some of these out so
that we can actually see the whole.

4
00:00:12.550 --> 00:00:15.460
We're just getting like localhost 8000,
right.

5
00:00:15.460 --> 00:00:16.650
It's not a useful title.

6
00:00:16.650 --> 00:00:18.900
It's not interesting.

7
00:00:18.900 --> 00:00:21.640
People don't know what page they're
looking at or what it's for.

8
00:00:21.640 --> 00:00:24.520
And when we go to the about page,
same thing, it just says the URL.

9
00:00:24.520 --> 00:00:25.870
Nothing useful is here.

10
00:00:25.870 --> 00:00:30.180
So let's fix that,
let's add site metadata.

11
00:00:31.610 --> 00:00:37.070
Gatsby has a concept of what
it calls a Gatsby config.js.

12
00:00:37.070 --> 00:00:38.864
So for some global things and

13
00:00:38.864 --> 00:00:44.450
some general configuration we'll get
more into into how we use this later.

14
00:00:44.450 --> 00:00:49.680
Gatsby has a node file
called Gatsby config.

15
00:00:49.680 --> 00:00:52.220
And it just exports and object.

16
00:00:52.220 --> 00:00:57.640
So in its most simplistic state,
this is a valid Gatsby config.

17
00:00:57.640 --> 00:01:00.060
It does nothing, but it won't fail.

18
00:01:01.160 --> 00:01:03.343
What we want to do is add some meta data,

19
00:01:03.343 --> 00:01:07.260
so we're gonna create an object
called site metadata.

20
00:01:07.260 --> 00:01:10.760
And inside of it, we're gonna
add a few things about our site.

21
00:01:10.760 --> 00:01:13.240
So we don't have this deployed yet.

22
00:01:13.240 --> 00:01:16.654
So we'll just put
a placeholder in here and say,

23
00:01:16.654 --> 00:01:19.665
we're gonna put it at your domain dot TLD.

24
00:01:21.175 --> 00:01:23.535
And then we also want to give it a title.

25
00:01:23.535 --> 00:01:28.945
So site title and we'll call this
front end masters intro to Gatsby.

26
00:01:30.190 --> 00:01:34.244
Wanna give it a description and
our description will be,

27
00:01:37.201 --> 00:01:42.750
Front end masters intro
to Gatsby course project.

28
00:01:43.790 --> 00:01:45.977
And finally we're gonna
give it an image and

29
00:01:45.977 --> 00:01:49.310
the image that I'm gonna
use is from cloudinary.

30
00:01:49.310 --> 00:01:54.053
I will, I just created one and
stored it because we need it to be

31
00:01:54.053 --> 00:01:58.724
web accessible for it to work for
like social media sharing.

32
00:01:58.724 --> 00:02:05.290
So I will show this to you in case anybody
wants to, like screenshot this and do it.

33
00:02:05.290 --> 00:02:06.690
So this is the image that we're using.

34
00:02:06.690 --> 00:02:08.640
You can use any image you want.

35
00:02:08.640 --> 00:02:11.614
This is just a standard
social sharing image.

36
00:02:11.614 --> 00:02:15.826
But what this is doing is it's
taking advantage of cloudinary,

37
00:02:15.826 --> 00:02:18.090
which is a cool way to host images.

38
00:02:18.090 --> 00:02:19.660
I'm using their free tier.

39
00:02:19.660 --> 00:02:22.938
And that way I don't have to keep
images on my local machine or

40
00:02:22.938 --> 00:02:26.170
figure out how to get them published or
anything like that.

41
00:02:26.170 --> 00:02:28.520
&gt;&gt; How does Gatsby
handle trailing slashes?

42
00:02:28.520 --> 00:02:29.610
Is with like links.

43
00:02:29.610 --> 00:02:31.760
Is there a config option?

44
00:02:31.760 --> 00:02:36.680
&gt;&gt; There is a config for
Gatsby trailing links or trailing slashes.

45
00:02:37.830 --> 00:02:42.672
And I believe the way that
it works is it depends

46
00:02:42.672 --> 00:02:47.015
on your server is kind of the end of it,
but

47
00:02:47.015 --> 00:02:50.760
there are plugins to go either way.

48
00:02:50.760 --> 00:02:54.810
So you can either force trailing slashes
or you can remove trailing slashes.

49
00:02:55.840 --> 00:03:00.215
When you deploy this though, you'll
wanna be mindful of how your host treats

50
00:03:00.215 --> 00:03:05.380
trailing slashes as well, because a lot
of hosts, will have their own opinions.

51
00:03:05.380 --> 00:03:09.840
So for example netlify will will do
trailing slashes in a certain way.

52
00:03:09.840 --> 00:03:12.527
So if you have a Gatsby config
that does one thing, and

53
00:03:12.527 --> 00:03:14.799
then the netlify config
does another thing,

54
00:03:14.799 --> 00:03:18.580
you can end up with unnecessary redirects
and that can slow down your site.

55
00:03:19.740 --> 00:03:24.032
So whatever you do you can just make
sure that it matches all the way

56
00:03:24.032 --> 00:03:29.070
through with whatever service
you're using for deployment.

57
00:03:29.070 --> 00:03:32.645
By default, though, it what I recommend
is just setting a rel canonical,

58
00:03:32.645 --> 00:03:34.860
because then it doesn't matter.

59
00:03:34.860 --> 00:03:36.747
If you set a rel canonical,

60
00:03:36.747 --> 00:03:42.930
then your site will always just have
the right URL and if there's a duplicate.

61
00:03:42.930 --> 00:03:48.391
SEO doesn't care because the canonical
set one of them as the official URL,

62
00:03:48.391 --> 00:03:50.792
and we'll look at how to do that.

63
00:03:50.792 --> 00:03:58.820
So Now what we're gonna do, so
we've set this site metadata, right?

64
00:03:58.820 --> 00:04:03.067
So here's our site metadata and
we are able to now use this, or

65
00:04:03.067 --> 00:04:06.030
at least we should be able to use this.

66
00:04:06.030 --> 00:04:09.450
So let's see how Gatsby makes that work.

67
00:04:10.770 --> 00:04:17.290
So what I'm gonna do is
go into my terminal.

68
00:04:17.290 --> 00:04:21.590
Now we just changed
the config of the site.

69
00:04:21.590 --> 00:04:23.130
We added a Gatsby config.

70
00:04:23.130 --> 00:04:26.166
This is one of the times when
it makes sense to stop and

71
00:04:26.166 --> 00:04:30.594
start the development server again,
because sometimes it'll pick it up.

72
00:04:30.594 --> 00:04:32.994
But a lot of times I think
It picks up some of it and

73
00:04:32.994 --> 00:04:35.070
then starts throwing weird errors.

74
00:04:35.070 --> 00:04:40.180
So it's easier to t just restart it,
when in doubt restart.

75
00:04:40.180 --> 00:04:44.620
And so our site here is running the same,
nothing has changed.

76
00:04:44.620 --> 00:04:46.288
But if we look at graph QL, so

77
00:04:46.288 --> 00:04:50.470
this is actually where we'll start
digging into graph QLa little bit.

78
00:04:50.470 --> 00:04:54.821
We have the ability to
query that site metadata.

79
00:04:54.821 --> 00:04:59.754
So what I just did is I went to visit
local host 8000 slash underscore

80
00:04:59.754 --> 00:05:02.150
underscore underscore graph QL.

81
00:05:02.150 --> 00:05:04.610
So it's triple underscore graph QL.

82
00:05:04.610 --> 00:05:06.830
This is a it's linked from your terminal.

83
00:05:06.830 --> 00:05:08.760
So you'll see this here.

84
00:05:08.760 --> 00:05:12.540
This is a link to do use
the graph QL Explorer.

85
00:05:12.540 --> 00:05:21.221
And this is a window into all the data
in the Gatsby site during development.

86
00:05:21.221 --> 00:05:25.140
And this is where graph QL
gets kind of weird in Gatsby.

87
00:05:25.140 --> 00:05:31.660
Gatsby treats graph QL as a temporary
data store for building the site.

88
00:05:32.700 --> 00:05:38.590
You cannot access the graph QL API
from Gatsby in the production site.

89
00:05:38.590 --> 00:05:42.891
So you can't like make a request from
the client side to the graph QL because it

90
00:05:42.891 --> 00:05:46.210
won't be there,
it's only available during the build.

91
00:05:46.210 --> 00:05:51.021
And that's where graph QL on Gatsby
feels very different from the way that

92
00:05:51.021 --> 00:05:52.930
other sites work.

93
00:05:52.930 --> 00:05:56.520
So during development, we've got
access to this graph QL explorer.

94
00:05:56.520 --> 00:05:59.040
In production,
there is no graph QL anymore.

95
00:05:59.040 --> 00:06:00.472
It's all been compiled away and

96
00:06:00.472 --> 00:06:03.590
replaced with these JSON data
files that I showed you.

97
00:06:03.590 --> 00:06:07.370
So, let's start by getting our metadata.

98
00:06:07.370 --> 00:06:09.275
So I'm gonna open up the site, and

99
00:06:09.275 --> 00:06:12.240
this explorer over here is
gonna be your best friend.

100
00:06:12.240 --> 00:06:13.920
I love this Explorer.

101
00:06:13.920 --> 00:06:15.910
It's very, very powerful.

102
00:06:15.910 --> 00:06:19.330
So over here we've got site and
then this is kind of hard to see.

103
00:06:19.330 --> 00:06:20.950
So let me zoom in a little bit.

104
00:06:20.950 --> 00:06:23.720
There are purple things and
there are blue things.

105
00:06:23.720 --> 00:06:25.560
The contrast here is not great.

106
00:06:25.560 --> 00:06:27.740
The purple things are filters.

107
00:06:27.740 --> 00:06:31.560
We don't care about those for this,
the blue things are our data.

108
00:06:31.560 --> 00:06:34.770
So I'm going to click site metadata here.

109
00:06:34.770 --> 00:06:39.980
And then we've got our title,
description, the image and our site URL.

110
00:06:39.980 --> 00:06:44.852
And if I hit this play button we can see
all that data that we put into the Gatsby

111
00:06:44.852 --> 00:06:48.590
config is now available for
us we can we can use it.

112
00:06:48.590 --> 00:06:53.585
This is where Gatsby is like
the opinion start to show up everything

113
00:06:53.585 --> 00:06:56.540
in Gatsby ends up in the graph QL layer.

114
00:06:56.540 --> 00:06:59.042
For example, if we go in here and

115
00:06:59.042 --> 00:07:03.790
we look at files, I can get a list
of all the files in our site.

116
00:07:07.030 --> 00:07:09.240
Which apparently is not finding
any that doesn't sound right.

117
00:07:14.640 --> 00:07:16.020
I haven't yeah,
we haven't configured that yet.

118
00:07:16.020 --> 00:07:17.710
So the site page is
what I was thinking of.

119
00:07:17.710 --> 00:07:19.570
So let's look at our site pages.

120
00:07:19.570 --> 00:07:23.127
And I can go to path and
it's got a list of all the pages.

121
00:07:23.127 --> 00:07:27.729
So we can see it generated a dev 404
page for us that if we go over here and

122
00:07:27.729 --> 00:07:28.340
look at.

123
00:07:30.180 --> 00:07:33.760
This is a listing of all
the pages on the site.

124
00:07:33.760 --> 00:07:37.665
This is only available during development,
so if we try to go to a URL that

125
00:07:37.665 --> 00:07:41.690
doesn't exist it'll show us hey,
you haven't created this page yet.

126
00:07:41.690 --> 00:07:43.420
Here's how you can create it.

127
00:07:43.420 --> 00:07:47.740
And here are the pages in the site
in case you wanna navigate to those.

128
00:07:47.740 --> 00:07:53.950
This is a really good way if we had
created a bunch of pages from data.

129
00:07:53.950 --> 00:07:57.620
And we don't wanna go build
the directory listing of them yet.

130
00:07:57.620 --> 00:08:01.330
You can just 404 and you'll get a list
of all the pages you've created here.

131
00:08:01.330 --> 00:08:02.720
So that can make navigation easy.

132
00:08:05.590 --> 00:08:10.214
So, now that we've got the ability
to get this site data, right,

133
00:08:10.214 --> 00:08:13.470
we're able to load our site metadata.

134
00:08:13.470 --> 00:08:15.890
We can then start using it.

135
00:08:15.890 --> 00:08:19.426
So let's get this data and

136
00:08:19.426 --> 00:08:25.230
actually set like the title of our site.

137
00:08:25.230 --> 00:08:30.060
So I'm going to go back into the code here
and I'm gonna go into our index page.

138
00:08:30.060 --> 00:08:32.549
And we're going to use
graph QL in Gatsby now, so

139
00:08:32.549 --> 00:08:35.050
I'm gonna use something
called a static query.

140
00:08:36.390 --> 00:08:39.378
Now when you are thinking
about data in Gatsby,

141
00:08:39.378 --> 00:08:43.810
I would say default to
the simplest possible solution.

142
00:08:43.810 --> 00:08:49.950
The use static query hook in Gatsby
is most likely the simplest solution.

143
00:08:51.700 --> 00:08:54.559
Any other way that you're gonna do
it is gonna require a little bit of

144
00:08:54.559 --> 00:08:57.200
understanding how data
flows through Gatsby.

145
00:08:57.200 --> 00:09:00.654
So if you don't need variables if
you know what you're querying for

146
00:09:00.654 --> 00:09:04.654
use static query is going to allow you to
write a graph QL query and use the result

147
00:09:04.654 --> 00:09:08.820
right in place with no understanding
of how data flows through Gatsby.

148
00:09:08.820 --> 00:09:11.590
And that's why I'm a fan of this approach.

149
00:09:11.590 --> 00:09:14.394
So what we can do then is now
that we've got access to this,

150
00:09:14.394 --> 00:09:18.640
I'm going to get some data and
that'll be the result of use static query.

151
00:09:18.640 --> 00:09:22.840
And that uses a tagged template.

152
00:09:22.840 --> 00:09:28.120
So a template literal is anything
between these little backticks.

153
00:09:28.120 --> 00:09:33.730
And a tag is kind of like a function but
not exactly a function.

154
00:09:33.730 --> 00:09:35.830
And I'm not gonna go into
exactly how they work.

155
00:09:35.830 --> 00:09:41.000
But it's a common way of dealing
with like graph QL queries.

156
00:09:41.000 --> 00:09:45.100
You'll see this a lot where you'll
use a tag template literal like this.

157
00:09:45.100 --> 00:09:48.862
And then once we've got this set up,
inside,

158
00:09:48.862 --> 00:09:55.210
I'm just literally gonna copy paste this
and I want it to have a unique name.

159
00:09:55.210 --> 00:10:00.010
So instead of calling it my query,
I'm gonna call it get site title.

160
00:10:00.010 --> 00:10:04.190
And I don't need the description image and
site URL for what we're about to do.

161
00:10:04.190 --> 00:10:06.320
So I'm gonna only use the title.

162
00:10:06.320 --> 00:10:10.651
This is another benefit of graph qL
is that if you don't need something,

163
00:10:10.651 --> 00:10:14.150
just don't query for it and
you'll get less data.

164
00:10:14.150 --> 00:10:15.420
So no wasted data.

165
00:10:15.420 --> 00:10:19.852
And this is a big deal in
Gatsby because remember what

166
00:10:19.852 --> 00:10:25.080
Gatsby is doing is it's attaching
this data to your site.

167
00:10:25.080 --> 00:10:27.883
So if you query for
a bunch of data you're not using,

168
00:10:27.883 --> 00:10:31.470
you're gonna ship that to your users
in the form of that JSON file.

169
00:10:31.470 --> 00:10:34.040
So only query for
what you're actually gonna use.

170
00:10:34.040 --> 00:10:37.290
That's a little perf perf tip.

171
00:10:37.290 --> 00:10:41.630
So now that we've got this,
it's gonna be in our data.

172
00:10:41.630 --> 00:10:43.600
And I want to get the title out.

173
00:10:43.600 --> 00:10:45.460
So I'm gonna get the title.

174
00:10:45.460 --> 00:10:47.374
And that will be actual
let's call it meta,

175
00:10:47.374 --> 00:10:49.870
because we're getting the site metadata.

176
00:10:49.870 --> 00:10:54.405
And that site metadata is going to be
the data which should always be set but

177
00:10:54.405 --> 00:10:56.540
just in case we don't want error.

178
00:10:56.540 --> 00:10:59.445
So I'm gonna use the optional
chaining operator,

179
00:10:59.445 --> 00:11:02.210
which if data is not
set just returns empty.

180
00:11:02.210 --> 00:11:04.458
So instead of getting a big exploding,

181
00:11:04.458 --> 00:11:09.091
unset can't get Field whatever of
undefined, we'll just get an empty string,

182
00:11:09.091 --> 00:11:13.760
which for this particular thing,
I'm okay with that I don't mind.

183
00:11:13.760 --> 00:11:17.288
Inside the data, we just move
in this like it's an object so

184
00:11:17.288 --> 00:11:21.610
we can get the site optional chain that
and then we get the site metadata.

185
00:11:22.630 --> 00:11:25.670
Optional chain that or no,
we want optional chain that but

186
00:11:25.670 --> 00:11:28.220
we will do some knowledge coalescing.

187
00:11:28.220 --> 00:11:31.730
If it is empty, we're just going
to give back an empty object.

188
00:11:31.730 --> 00:11:36.523
And that's because what we're gonna do
down here is we're gonna set a header

189
00:11:36.523 --> 00:11:38.470
that uses the title.

190
00:11:38.470 --> 00:11:41.865
So, let me just repeat this because I
feel like this is one of those things

191
00:11:41.865 --> 00:11:44.695
that when you're new to graph
QL it's really confusing.

192
00:11:44.695 --> 00:11:47.865
And then when it clicks,
it feels very natural.

193
00:11:47.865 --> 00:11:53.143
So the way that graph qL queries
work is when you make a query,

194
00:11:53.143 --> 00:11:58.332
the result of the query ends
up in data inside of data.

195
00:11:58.332 --> 00:12:02.522
You have an object that just
represents the shape of this query.

196
00:12:02.522 --> 00:12:03.694
So data dot site,

197
00:12:03.694 --> 00:12:07.922
dot site metadata dot title will
give you the value of the title.

198
00:12:09.112 --> 00:12:13.846
The only differences is if this is like
an array like if we were looking at posts,

199
00:12:13.846 --> 00:12:15.520
posts would be an array.

200
00:12:15.520 --> 00:12:19.407
And so you wouldn't be able to do like
post title you'd have to do posts,

201
00:12:19.407 --> 00:12:22.912
array index zero or like get the first
post and then post on title,

202
00:12:22.912 --> 00:12:25.169
which we'll get into a little bit later.

203
00:12:26.180 --> 00:12:29.300
So now that we've got
that data site metadata,

204
00:12:29.300 --> 00:12:31.960
this we can use as metadata title.

205
00:12:31.960 --> 00:12:33.430
So I wanna add a header.

206
00:12:33.430 --> 00:12:38.549
So I'm gonna use a graph QL fragment or
a react fragment because I don't

207
00:12:38.549 --> 00:12:44.165
wanna deal with junk, I don't wanna
add junk markup to my my site.

208
00:12:44.165 --> 00:12:52.060
So I'm gonna create a header and in my
header, I'm going to link to Our homepage.

209
00:12:52.060 --> 00:12:57.980
And then I'm gonna use metadata title
as the text of that link, right.

210
00:12:57.980 --> 00:13:02.600
So now we have a header that will
show our site and let's go look and

211
00:13:02.600 --> 00:13:06.134
see if this worked or
if I need to restart the site.

212
00:13:08.095 --> 00:13:09.270
There it is.

213
00:13:09.270 --> 00:13:13.452
Frontend Masters intro to Gatsby and
if I come in here and make an edit

214
00:13:21.792 --> 00:13:23.110
It shows up right away.

215
00:13:23.110 --> 00:13:26.880
No needing to restart the server or
anything like that.

216
00:13:26.880 --> 00:13:32.670
Once the config is in, we can edit
it as needed and everybody's happy.

217
00:13:32.670 --> 00:13:37.634
So this is where we start to see some real
power with this is we're able to to really

218
00:13:37.634 --> 00:13:41.430
get these meta tags in and
editable and usable through graph QL

