[00:00:00]
>> One, I noticed in your VS code, do you have an extension for your GraphQL to display the syntax highlighting.
>> Yes, I have what's it called? I have the GraphQL extension from the GraphQL foundation.
>> Is there any documentation within Gatsby for transferring an existing website that has nothing to do with Gatsby to Gatsby.

[00:00:28]

>> Like an existing react site or like any site.
>> Just any site like any documentation on starting to integrate Gatsby into that?
>> That's a good question. I think they might have a migrating to Gatsby, let's see they've got some. That's a blog post from somebody else on migrating, here's one on WordPress.

[00:00:57]
I don't know that they have any Doc's on this actually, it looks like there are a lot of community resources on this that you can use, that will like allow you to pull the the RSS feed from a site.
>> Or other ways of importing data that you can then use to populate the site, It depends on, how the site is structured what your data sources are, and what you're trying to preserve.

[00:01:25]
If you wanna bring over the whole look just straight up. Then you can do that you would kind of copy paste the site into a layout component and then punch holes in it where the, the custom content would need to be. But again, that kind of there are a lot of, what does your current setup look like, questions before you can give a solid answer to how to migrate wasn't thinking, Mark.

[00:01:54]

>> Yeah, how would you go about adding a CSS reset?
>> If you wanted to add a CSS reset, I would add it right in the global here, so, for me like to be completely honest, this is now my CSS reset, is to do like this.
>> Sometimes what I'll do is, I'll set margin 0, and then I'll do what's called the l Lobotomized Owl Selector, where you set any element that is adjacent to another element gets a one rep top margin.

[00:02:29]
But as you can see this this can introduce some weirdness, so I don't do that anymore. But yeah, if you wanted to do a reset, you would just drop it right in here, If you wanted, you could create a reset CSS and just import it. In the same way, and these will I believe they get imported in order, so if you wanted to do a reset, you would just like probably put it right up here, something like that.

[00:02:58]

>> Does Gatsby have a history call like in react router, were able to show you know, if I hit the back button.
>> There is an API in Gatsby. API doc, that's what we're looking for. So if you are using the navigate helper function, which is what we're looking for, there is a import navigate from Gatsby, and so you can do navigation.

[00:03:25]
You can add state to it and stuff ,so that you can push history on and then if you wanted to. Like changing your back button behavior, your link like replace. Where is the, I think if you wanted to do like actual, implement your own back button that's not in Gatsby ,but you can update the history the way that you would under the hood Gatsby uses reach router.

[00:04:06]
So if you look at the reach router, Docs you can actually reach into that package and do a bunch of custom stuff there, but that's a little out of scope for today. We can add, if you have specific questions about that, you can hit me up on Twitter.

[00:04:22]
This is, I'm always happy to have some questions, just send me a tweet.
>> Why wouldn't we set variables in the global dot CSS, and then use them in a header dot module dot CSS for accessing those variables.
>> why would we?
>> Or why wouldn't we? I guess.

[00:04:42]

>> So yeah, I like that pattern, that's what we're doing in the global CSS ,here we set these variables and then we access those in the layout. I like this pattern, and it is a pattern that I am happy to use in my projects, If you look at my open source you'll see that I do this a lot.

[00:05:04]
There are always trade offs when you get to the way you manage styles, and one of the trade offs of this one is that this looks a little bit like magic. So a way, that you can you can control this is you could potentially put together a variables dot CSS.

[00:05:19]
And that is a signal to the rest of the team that these configuration values are in there, they can go find them. But ultimately, there's not like a downside outside of the standard downsides of organizing code in any way where, there are upsides and downsides of all this.

[00:05:39]
I really like this, versus some kind of JavaScript based configuration, because somebody who knows CSS can come in and work on this project without having to learn JavaScript. And to me, that's a benefit.
>> And so the question there is essentially using the CSS variables instead of CSS module, setting it to variable, I see.

[00:06:05]

>> Yeah, cuz the other way, that we would have to do this is we would need to duplicate these values all over the place. Or we would need to install something like sass so that we could get variables. Or we'd have to introduce CSS and JS stuff so that we could put these variables somewhere.

[00:06:25]
For me, this is the path of least resistance. And the nice thing about this too is, if you wanna re declare a color or a better example of this would be if you were to set like a font, let's say that we set the text size base, and we call that 18 pixels.

[00:06:45]
And then down here, we know that's what we wanna use. So we say tech size base, but then later on, we wanna have an aside component and that aside component we know should be smaller. I can override this, I can say text-size-base and set it to 16 pixels.

[00:07:03]
And, then anything inside of this aside will automatically get a lower text size base, if we base the values off of this variable, it gives you a lot of control without having to add tooling to manage it. It's just kind of built into the CSS language.

