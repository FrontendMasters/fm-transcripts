[00:00:00]
>> Let's actually add this MDX support here we're gonna add a few different things. The first thing that we're gonna add is a, let's stop this development server. We're gonna install some stuff so we're gonna install a source plugin for the file system. The reason for that We're gonna keep our posts in another folder here.

[00:00:22]
So let me close the open editors. And we're gonna create a folder called posts. Now I want this folder to work just like the pages folder where whatever we put in here becomes a page in Gatsby. In order to do that, we need to like Gatsby only looks for pages.

[00:00:43]
So we need to make this a special directory. And we're gonna do that with a combination of Gatsby source file system, which will let us look up files. And then we're also going to use a plugin called page creator. And what page creator does is it lets us set any page in the site to have the same properties as the pages directory so anything inside of this should be created as a page.

[00:01:13]
We also are gonna need the Gatsby plugin for MDX. And then we need MDX itself so MDXJS/MDX. We're also gonna need the react flavor of MDX so, MDX js react. Right, so this is seems like a lot of stuff. This one is so that we can actually load files into the Gatsby data layer.

[00:01:40]
This one is so that we can turn any folder into a special folder of files that will get turned into pages. The Gatsby plugin MDX which is going to turn our files, from just plain old files, it'll actually enable MDX support. And then the MDX things so that we can use the MDX core and the react additional things that we need to use it in a react project.

[00:02:07]
So let's get those installed. And next, once we've got those installed, we're gonna go into our Gatsby config and add support for these. So inside of this array we're going to let me get this scaffolded and then I'll talk about what it actually is. So, by default, if you just put in the name of a plug in, Gatsby will run that plug in with no options.

[00:02:42]
This is a shorthand. It's for convenience so that you don't have to write out these big old objects every time you wanna do a plugin. But if a plugin does need configuration, then we tell it to resolve the name of the plugin. So in our case, we're gonna start with Gatsby source file system.

[00:02:59]
And then we can pass options to it. So in our case, we're gonna give this group of files a name, we're gonna call them posts. And we're going give them a path of the dirname that's the current directory name, and we're looking source and posts. So we're trying to find this directory and load all the files in it into Gatsby's file system.

[00:03:25]
So then we wanna make sure that Gatsby will actually create pages from the pages that are found in there. So we're gonna set up Gatsby plug in page creator. And for the options on that, we're actually gonna pass in the same path we want this dirname source posts and that will cause Gatsby to not only find these and load them into graph QL.

[00:03:54]
But actually turned them into pages with their own address that matches the name of the file. Next, we want to transform those files from just plain old files into MDX nodes. And we do that using Gatsby plug in MDX. Let me scroll up here and for the options on this; we're gonna start by giving it a default layout.

[00:04:20]
Actually, you know what, let's start without a default layout and then we'll come back in and look at it so that we can show the difference. So we'll add that in. Okay, so now that we've got this, we've got our file system we've got the page creator, we've got plugin MDX.

[00:04:36]
Let's go ahead and add our first blog post. So let's add to I'm gonna add one called first blog and we use the dot MDX extension to signify that it is in fact MDX. So we'll give this some basic markdown. This is my first blog post. All right, we can save that.

[00:04:59]
Two exclamation boys is too many. All right, let's go. Let's go in here and do another blog. Blog mdx, and in this one, we will say, dang, this blog is even better than the last one. All right, so now we've got two blog posts, both are mdx. And you can see here we're not using any mdx features we've just added in plain old markdown and one of the reasons to use mdx it will actually add some react stuff a little bit later on, but.

[00:05:31]
I really like this setup, because what we've just done if we start the server here again, is we have created the ability to now add these files in and again, all we've done here is we've said. Hey, Gatsby look in the file system in this posts folder and create something called posts and then use your page creator to make pages out of anything in this post directory and look for MDX.

[00:06:03]
So, now that we've created this, if we look in here, everything is running. Now I'm gonna go to that 404 page again. So I can just type in 404 and it'll say hey, that's not a page. And down here I can see here's our first blog and our another blog that we created.

[00:06:21]
Okay, so this is fine ish. It looks like it picked up our default styles, but it's not quite what we're after we're missing our header and all those things. And what we could do and this is a pain is we could go in here and we could say let's import layout from components layout.js, and then we will export default layout.

[00:06:52]
Is that gonna work? No, it wouldn't be like that. It would be like this. It has to be a component like this. So we would do layout and then inside we would send the children, which means we have to get the children as a prop. I don't ever do this, so I'm trying to remember exactly how it works.

[00:07:11]
There it is. Okay, so upon doing this, by doing a default export we've provided a kind of a layout here. And if we wanted to do something like, this is part of my blog. Then we can add custom markup. And this is all fine, right? But this is kind of, I want to do that for every blog post.

[00:07:33]
So instead what we can do is we can get rid of that entirely. And we can come back out here and I wanna set a default layout. So inside of Gatsby, plugin MDX, one of the options that I have is to set a default layout And so I'm gonna say default layouts.

[00:07:53]
And for posts, this needs to match this. That's how that works. And we're gonna say required.resulve, required.resolve is a way to get the node Internals to give you like the absolute path to a file. So what we're doing is we are doing the required.resolve to source components, layout.js, right?

[00:08:19]
So now, we've got a default layout set and see our Gatsby saying we need to restart because we change the config. I love this feature so we can hit OK. And it's gonna restart the development server for us. And when it's done, which we can watch happen over here.

[00:08:39]
What we should see happen is the page in the background is gonna refresh and it will actually use that layout. So check that out. We have our first blog post. So I'm happy about this. We've got, our blog post is here. It has the header. And again, we did not have to make like we didn't have to add the layout.

[00:09:02]
It's just there. And if we go to the other one, so let me go back to this 404 page, click through to another blog. And there it is no changes to another blog. Which again, no layout included, but because we set a default it brings it in. Now we can override this if we wanted to go back into the first blog, and instead of using the layout, I could just set it as like a div and get rid of this layout.

[00:09:28]
Then, this one stays the same because we didn't edit it. But the first blog now it doesn't have that setup, right? So we can optionally override whenever if we need custom layouts, but by default, it'll use the same one. And that is a really nice feature that's a really slick way to get this up and running.

[00:09:53]
So this to me is a really powerful workflow because with fairly minimal confide you know we like I know we had to get into Gatsby confide here. And we had to add you know three plugins and this can feel like a lot I think that one of the most overwhelming parts of working with Gatsby can be.

[00:10:11]
There's a lot of config it can start to feel like it's hard to track what's going on. One way that you can group this is you can actually just go in here and start adding comments to let yourself know. This set of plugins is to enable creating MDX blog posts from the src/posts folder, right?

[00:10:35]
And then down here, you can do end of MDX config. And then more config down here. So if you start to notice that you're getting overwhelmed by the amount of things you're putting into your Gatsby config. Leave yourself some signposts like let yourself know why you did something or why it's configured the way it is.

[00:10:52]
Our site is not particularly complex, so I'm not gonna stress too much about doing all of that but.
>> Is there a way to make that generic so that it would pick up multiple folders not just posts would I have to double that config?
>> The the part that gets tricky about this is the more generic these are the harder they are to track.

[00:11:13]
So there's something to be said for being pretty explicit about, what you're loading, and why. But again, this kinda comes down to personal preference. The other thing to consider, is if you just did that, it would work. But then you'd have in your graph QL layer a bunch of extra stuff.

[00:11:36]
But if we create another folder inside of posts like, let's call this a series and I let's copy one of these. Call this one like post one. This will get picked up in here. So if I go here now to series post one it works. So if you put a folder in all of the sub folders will also get parsed and that's where this ignore option comes in.

[00:12:12]
If you want it to ignore specialty stuff like this one saying, ignore anything that starts with a dot. Or you could say, I only want to get things that have the.page.JS suffix, if you want it to do something kind of mixed. It's generally speaking easier to be pretty explicit about like this is a folder for pages.

[00:12:33]
So that then your folder directories tend to line up pretty one to one like, okay, I'm in posts, so this means that the URL will be /seriespost1. And that way you don't have to remember like, yeah, it'll work like that except for this one that we ignored because it's for utilities.

[00:12:50]
Like if you've got utilities, pull them out of the post folder and put them somewhere else. And in that way, you don't have to have these like exclusions and special cases. Generally speaking, like The easier you make it on yourself, the happier you'll be in the long term for maintenance.

[00:13:06]

>> Is there any way to pass like metadata with the config other than just wrapping it in a layout tag and then passing it to the props?
>> Yep. We're actually gonna do that right now I think.

