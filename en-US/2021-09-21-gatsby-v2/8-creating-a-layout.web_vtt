WEBVTT

1
00:00:00.130 --> 00:00:05.540
So now that we've got our meta tags,
we've got a header on the homepage.

2
00:00:05.540 --> 00:00:08.542
You may have noticed that things
are getting a little bit messy here,

3
00:00:08.542 --> 00:00:11.610
we've got these fragments hanging around,
this SEO tags over here.

4
00:00:11.610 --> 00:00:15.490
This one's got a header but when we go
to the About page, there's no header.

5
00:00:15.490 --> 00:00:18.120
So, our site has this kind
of lack of consistency.

6
00:00:18.120 --> 00:00:20.600
I wanna fix that.

7
00:00:20.600 --> 00:00:26.090
So, the next thing that we're gonna look
at is how to do shared layouts in Gatsby.

8
00:00:26.090 --> 00:00:32.050
And, the great news is, it's just like
you would do it in any other React app.

9
00:00:32.050 --> 00:00:36.830
So what I'm gonna do,
is I'm gonna create a new component here.

10
00:00:38.280 --> 00:00:40.830
We're gonna call it layout.js.

11
00:00:40.830 --> 00:00:46.250
And inside of it, we're going to get
all the react goodies from React.

12
00:00:49.520 --> 00:00:54.390
We are also going to pull in the stuff
that we'll need from Gatsby.

13
00:00:54.390 --> 00:00:59.269
So we're gonna create some links,
we're going

14
00:00:59.269 --> 00:01:04.148
to move that header stuff
out of the homepage, so

15
00:01:04.148 --> 00:01:10.337
we'll pull the static query over here,
and the graphql tag.

16
00:01:10.337 --> 00:01:14.233
That was a weird autocomplete
from the Gatsby.

17
00:01:14.233 --> 00:01:20.917
And then we're also gonna need that
SEO tag, so let's pull that in.

18
00:01:22.275 --> 00:01:25.096
All right, so once we've got that,

19
00:01:25.096 --> 00:01:29.646
we're going to export a default
component called layout.

20
00:01:29.646 --> 00:01:33.919
And, you can make this, nope,
you can make it default,

21
00:01:33.919 --> 00:01:38.033
you can make it not default,
that's really up to you.

22
00:01:38.033 --> 00:01:41.689
I am making it default,
mainly out of habit,

23
00:01:41.689 --> 00:01:45.066
not out of any particularly good reason.

24
00:01:45.066 --> 00:01:48.075
I've just always used layouts
as default components,

25
00:01:48.075 --> 00:01:52.978
I think Yeah, no rhyme or
reason to that, just to preference.

26
00:01:52.978 --> 00:01:55.696
So a layout component
is gonna take children.

27
00:01:55.696 --> 00:01:59.613
What children means is that when
you have a React component and

28
00:01:59.613 --> 00:02:03.978
you wrap it around something, so
for example, when we look in here,

29
00:02:03.978 --> 00:02:08.000
this main component,
is wrapped around this h1 in this link.

30
00:02:08.000 --> 00:02:12.370
This will be passed through as
children to the main component.

31
00:02:12.370 --> 00:02:16.382
When we're wrapping with a layout,
the whole content of the site is gonna get

32
00:02:16.382 --> 00:02:21.190
passed through inside of the layout, and
we want that to be passed to his children.

33
00:02:21.190 --> 00:02:25.046
So we're gonna go in and
pass through this children prop, and

34
00:02:25.046 --> 00:02:29.729
then we're also going to set the title,
but we want it to default to false.

35
00:02:29.729 --> 00:02:31.090
And I'll tell you why in a second.

36
00:02:31.090 --> 00:02:36.449
The description also false, the image, and

37
00:02:36.449 --> 00:02:41.672
the path which we'll set to false, right?

38
00:02:41.672 --> 00:02:48.790
And then that is going to be what kind
of builds out our layout component.

39
00:02:48.790 --> 00:02:52.312
And the reason for that is,
if you don't set these,

40
00:02:52.312 --> 00:02:55.445
we wanna check if they exist and
then default.

41
00:02:55.445 --> 00:02:58.895
If we made them an empty string or
left them undefined,

42
00:02:58.895 --> 00:03:04.220
it's just easier to explicitly say, hey,
if this isn't set, just make it false,

43
00:03:04.220 --> 00:03:07.900
so that the comparisons are not falsy but
actually false.

44
00:03:09.530 --> 00:03:12.930
Inside of that,
we want to move over this index stuff.

45
00:03:12.930 --> 00:03:17.533
So let's grab this straight out And

46
00:03:17.533 --> 00:03:22.752
I'm gonna put it in here, okay,
so now we've got that metadata.

47
00:03:22.752 --> 00:03:28.415
And then, we can start returning
our actual layout component.

48
00:03:28.415 --> 00:03:30.081
So what we're gonna do in here,

49
00:03:30.081 --> 00:03:34.805
is a lot of the same things that we were
doing before we're gonna have a fragment.

50
00:03:34.805 --> 00:03:39.951
We're gonna have our SEO,
and that's going to

51
00:03:39.951 --> 00:03:45.868
take a title of Title,
a description of description,

52
00:03:45.868 --> 00:03:50.900
an image of image, and
a path of path, right?

53
00:03:50.900 --> 00:03:53.960
And then, underneath that,
we're going to put in a header.

54
00:03:55.170 --> 00:04:00.528
And in our header,
I want to have a link to our home page,

55
00:04:00.528 --> 00:04:04.670
and that one's gonna be the meta.title.

56
00:04:04.670 --> 00:04:06.680
Then I also wanna have nav.

57
00:04:06.680 --> 00:04:11.356
Now, we're only gonna create the About
page today, in the nav at least.

58
00:04:11.356 --> 00:04:14.599
And so,
we maybe don't need to do this, but

59
00:04:14.599 --> 00:04:19.195
I'm gonna do it just to
show kind of the pattern.

60
00:04:19.195 --> 00:04:22.905
So we've got our nav item and then we're
linking to the About page within it.

61
00:04:22.905 --> 00:04:25.380
And then down here,
I'm gonna put in a main tag, and

62
00:04:25.380 --> 00:04:27.535
put the children inside that.

63
00:04:27.535 --> 00:04:33.220
Okay, so, what we've done now is
we've set up our social sharing tags.

64
00:04:33.220 --> 00:04:37.217
We've set up a common header, and
then we've set up a container for

65
00:04:37.217 --> 00:04:39.350
the content of each page.

66
00:04:39.350 --> 00:04:42.400
And this is gonna be
what lives in our layout.

67
00:04:42.400 --> 00:04:47.030
So, to actually use that,
we can head over to our index page.

68
00:04:47.030 --> 00:04:50.974
And instead of pulling in the SEO,

69
00:04:50.974 --> 00:04:58.880
we're gonna pull in layout from
components, layout.js, right?

70
00:04:58.880 --> 00:05:01.391
And then I no longer need this part,

71
00:05:01.391 --> 00:05:05.090
because this header isn't
gonna be there anymore.

72
00:05:06.700 --> 00:05:09.250
The SEO is already taken care of.

73
00:05:09.250 --> 00:05:11.970
And we don't need this
closing main tag anymore.

74
00:05:11.970 --> 00:05:16.489
Instead, we just wrapped
the whole thing with layout.

75
00:05:20.002 --> 00:05:23.720
Okay, that also means I
don't need these anymore.

76
00:05:23.720 --> 00:05:28.503
So we can simplify this component quite
a bit by wrapping up that layout into its

77
00:05:28.503 --> 00:05:30.185
own separate component.

78
00:05:30.185 --> 00:05:36.571
So if I save this,
Forgot to call it a function.

79
00:05:36.571 --> 00:05:40.280
I got caught in between a few
different things there.

80
00:05:40.280 --> 00:05:43.470
But yes, so
we're gonna call this a function layout.

81
00:05:43.470 --> 00:05:48.390
And then, when I come out here to index,
save, let's refresh the page.

82
00:05:48.390 --> 00:05:49.720
Hey, there we go.

83
00:05:49.720 --> 00:05:51.545
So now we have in our elements,

84
00:05:51.545 --> 00:05:56.130
we're looking at our header that's
got all the things we want in it.

85
00:05:56.130 --> 00:06:00.131
And, we've got our main,
which includes our content, and

86
00:06:00.131 --> 00:06:02.960
we've also got all of that SEO, good.

87
00:06:02.960 --> 00:06:06.939
Everything that we were hoping for is now
wrapped up in that layout component, so

88
00:06:06.939 --> 00:06:10.710
I don't have to think nearly as
much about how to make this work.

89
00:06:10.710 --> 00:06:14.460
So let's go over do the same
thing in our About component.

90
00:06:14.460 --> 00:06:18.877
So I'm going to import layout

91
00:06:18.877 --> 00:06:23.840
from components, layout .js.

92
00:06:23.840 --> 00:06:27.899
And, we will put the layout here,
and here, and

93
00:06:27.899 --> 00:06:32.750
then what I'm gonna do is
actually just keep that title and

94
00:06:32.750 --> 00:06:37.060
description from the SEO,
drop it right here.

95
00:06:37.060 --> 00:06:39.728
But we also don't need this main tag
anymore, so I'm gonna get rid of that.

96
00:06:42.417 --> 00:06:44.540
So let's save that.

97
00:06:44.540 --> 00:06:46.060
Let's head over to the About page.

98
00:06:47.080 --> 00:06:48.150
Okay, same thing.

99
00:06:48.150 --> 00:06:51.425
We're getting the the title
tag that we want, but now,

100
00:06:51.425 --> 00:06:56.528
we have this consistent navigation, where
the site actually looks like it's a site.

101
00:06:56.528 --> 00:07:00.650
It doesn't look like disparate
pages kinda chunked together.

102
00:07:00.650 --> 00:07:04.163
And it also vastly
simplifies as you can see,

103
00:07:04.163 --> 00:07:09.719
this is way easier to deal with than
a lot of kinda strung out React code.

104
00:07:09.719 --> 00:07:13.444
Because, we consolidated it
a lot of that complexity,

105
00:07:13.444 --> 00:07:17.580
of how the layout works of, hey,
we need to get the site page.

106
00:07:17.580 --> 00:07:21.430
And we need to do some checking to
make sure that it actually exists.

107
00:07:21.430 --> 00:07:23.400
We got to set up this SEO tag.

108
00:07:23.400 --> 00:07:27.858
The basic markup of having a header and
a main, that's all stuff that,

109
00:07:27.858 --> 00:07:31.290
we wanna to care about
that exactly one time.

110
00:07:31.290 --> 00:07:36.100
We want our sites to be,
we wanna use semantic markup.

111
00:07:36.100 --> 00:07:39.940
We want to set up these meta tags and
all those things.

112
00:07:39.940 --> 00:07:42.390
We don't want to have to do
that on every page though.

113
00:07:42.390 --> 00:07:47.434
What we really want is we want one place
that automates all of the semantics and

114
00:07:47.434 --> 00:07:49.851
the housekeeping of running a site.

115
00:07:49.851 --> 00:07:54.079
And then abstract that away, so
that when we're writing content,

116
00:07:54.079 --> 00:07:58.560
this is all we have to think about,
what is actually on my page.

117
00:07:58.560 --> 00:08:00.840
And I just wrapped the rest
of it with the layout.

118
00:08:00.840 --> 00:08:04.512
That is a really nice workflow and
it's gonna add a lot of power, and

119
00:08:04.512 --> 00:08:05.614
just consistency.

120
00:08:05.614 --> 00:08:10.580
If we've got people across multiple
platforms, or multiple teams,

121
00:08:10.580 --> 00:08:12.599
all having to make content,

122
00:08:12.599 --> 00:08:18.509
I don't wanna have to educate every single
team on which SEO meta tags are we using.

123
00:08:18.509 --> 00:08:23.370
Or, what exactly do we wanna do in
terms of the way we markup the header?

124
00:08:24.460 --> 00:08:25.130
Forget all that.

125
00:08:25.130 --> 00:08:30.110
Just put it into layout, one person owns
that component, everybody else can use it.

126
00:08:30.110 --> 00:08:33.070
And now, you get consistency
across the entire experience.

127
00:08:34.150 --> 00:08:36.762
So, let's commit our work here.

128
00:08:39.685 --> 00:08:44.690
I'm going to head over to this one.

129
00:08:44.690 --> 00:08:49.483
All right, let's add everything,
and I'm going to commit and

130
00:08:49.483 --> 00:08:52.870
say, add and
use a shared layout component.

131
00:08:54.270 --> 00:08:55.510
All right, let's push that up.

132
00:08:56.780 --> 00:08:57.280
Okay.

