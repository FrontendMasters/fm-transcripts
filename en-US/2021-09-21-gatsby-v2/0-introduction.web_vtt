WEBVTT

1
00:00:00.100 --> 00:00:01.520
I'm excited, today is gonna be a good day.

2
00:00:01.520 --> 00:00:04.260
We are talking about
an introduction to Gatsby.

3
00:00:04.260 --> 00:00:06.960
Gatsby is a cool framework.

4
00:00:06.960 --> 00:00:10.520
We're gonna talk more about what that is,
but before we do that,

5
00:00:10.520 --> 00:00:14.500
let's dive right in with a little
bit of an intro about who I am.

6
00:00:14.500 --> 00:00:18.510
My name is Jason Lengstorf, I am the VP
of Developer Experience at Netlify,

7
00:00:18.510 --> 00:00:21.320
I'm also the host of Learn With Jason.

8
00:00:21.320 --> 00:00:25.890
Once upon a time, I was a Gatsby team
member, I used to work at Gatsby.

9
00:00:25.890 --> 00:00:28.652
I'm also a boop enthusiast,
if you've ever seen my show,

10
00:00:28.652 --> 00:00:32.356
you've seen any of the silly projects
that I make, you'll know that corgis and

11
00:00:32.356 --> 00:00:34.450
boops factor in pretty heavily to my work.

12
00:00:34.450 --> 00:00:35.787
So, before we get started,

13
00:00:35.787 --> 00:00:38.817
let's do a little bit of
disambiguation of what Gatsby isn't.

14
00:00:38.817 --> 00:00:40.550
So there are two Gatsby's.

15
00:00:40.550 --> 00:00:44.707
If you start googling around you're
gonna see references to Gatsby,

16
00:00:44.707 --> 00:00:49.018
the framework and you're also going
to see references to Gatsby Cloud.

17
00:00:49.018 --> 00:00:53.244
These are two sides of the same company,
one is an open source project,

18
00:00:53.244 --> 00:00:54.380
one is a business.

19
00:00:54.380 --> 00:00:56.902
But this can get a little bit confusing,
so

20
00:00:56.902 --> 00:01:01.457
for the purposes of this workshop, let's
be clear that what we are going to be

21
00:01:01.457 --> 00:01:05.130
talking about is only Gatsby
the open source framework.

22
00:01:05.130 --> 00:01:07.640
We're not going to talk
about Gatsby Cloud today.

23
00:01:07.640 --> 00:01:11.504
So, if you're interested in Gatsby Cloud,
you can check out Gatsbjs.com, but

24
00:01:11.504 --> 00:01:12.910
we're not gonna cover that.

25
00:01:14.470 --> 00:01:17.570
So at its core,
Gatsby is a site generator.

26
00:01:17.570 --> 00:01:22.170
Gatsby is a way for
people to build sites from code.

27
00:01:22.170 --> 00:01:24.700
It's very powerful for that.

28
00:01:24.700 --> 00:01:28.580
It rose to popularity as
a way to manage your blog.

29
00:01:28.580 --> 00:01:30.288
You could have markdown files and

30
00:01:30.288 --> 00:01:32.789
turn those into a working
blog site using React,

31
00:01:32.789 --> 00:01:37.073
which is a great way if you're a developer
to get your portfolio out into the world.

32
00:01:37.073 --> 00:01:39.808
Or start writing a blog about
what you're learning or

33
00:01:39.808 --> 00:01:44.250
otherwise collect your thoughts and
get those shared with the world.

34
00:01:44.250 --> 00:01:46.040
Gatsby is also built on React.

35
00:01:46.040 --> 00:01:48.380
So React is a JavaScript framework.

36
00:01:49.480 --> 00:01:50.980
It's made popular by Facebook.

37
00:01:50.980 --> 00:01:52.730
It's what powers their UI.

38
00:01:52.730 --> 00:01:57.190
And the main offering of React
is components and reactivity.

39
00:01:57.190 --> 00:02:04.658
So what you see with React is that you get
your UI breaks down into component files.

40
00:02:04.658 --> 00:02:08.168
Those component files can be mixed,
matched,

41
00:02:08.168 --> 00:02:12.480
shared, remixed, and
it's a little more containable.

42
00:02:12.480 --> 00:02:14.749
It's a little easier to think about and

43
00:02:14.749 --> 00:02:19.164
reason about what's happening in your
code which is why React is powerful.

44
00:02:19.164 --> 00:02:23.743
And then the ability to add in that
reactivity layer, that ability to quickly

45
00:02:23.743 --> 00:02:28.674
pull in React to changes, update the state
based on what's going on, keep track of

46
00:02:28.674 --> 00:02:32.890
some data and update a different
part of your UI based on that data.

47
00:02:32.890 --> 00:02:34.690
Those are all things that
make React really appealing.

48
00:02:34.690 --> 00:02:38.010
It's one of the reasons it's
the leading framework out there today.

49
00:02:38.010 --> 00:02:42.390
Gatsby decided to bet on react as
the right way to build for the web, and

50
00:02:42.390 --> 00:02:46.350
it did this in a way that
involves server side rendering.

51
00:02:46.350 --> 00:02:51.188
So server side rendering is when you take
React code, which typically would run on

52
00:02:51.188 --> 00:02:54.920
a client, and you use a server
to generate the resulting HTML.

53
00:02:54.920 --> 00:02:57.149
So what would happen
after the React code ran,

54
00:02:57.149 --> 00:02:59.840
gives you some markup that
would show in the browser.

55
00:02:59.840 --> 00:03:03.690
That's how you can see the output
of a React app in the browser.

56
00:03:03.690 --> 00:03:07.321
When you server side render React,
you're actually able to eliminate

57
00:03:07.321 --> 00:03:11.557
JavaScript altogether and you just get
some HTML, so Gatsby will take your React,

58
00:03:11.557 --> 00:03:14.655
code server side rendering,
put some HTML in.

59
00:03:14.655 --> 00:03:18.021
And then when it hits the browser,
it'll rehydrate and

60
00:03:18.021 --> 00:03:20.035
put that JavaScript back on top.

61
00:03:20.035 --> 00:03:23.671
So you start where if somebody disables
JavaScript with a Gatsby site,

62
00:03:23.671 --> 00:03:25.620
they'll still be able to load it.

63
00:03:25.620 --> 00:03:26.380
It still works.

64
00:03:26.380 --> 00:03:28.357
You can see the pages,
you can browse the site,

65
00:03:28.357 --> 00:03:30.990
everything works the way you would expect.

66
00:03:30.990 --> 00:03:35.233
And then if you enable JavaScript, you
get more interactivity and more features.

67
00:03:35.233 --> 00:03:38.768
The site will load and then become
app like instead of having to do

68
00:03:38.768 --> 00:03:42.825
a full page refresh, you'll get
JavaScript redirects between pages and

69
00:03:42.825 --> 00:03:46.635
there's a lot of extra bonuses that
happen when you add JavaScript.

70
00:03:46.635 --> 00:03:50.924
But, it's not required, it's an optional
enhancement which I think is a really

71
00:03:50.924 --> 00:03:55.350
powerful model when you start thinking
about building with JavaScript in general.

72
00:03:56.880 --> 00:03:59.420
Gatsby is also all in on GraphQL.

73
00:03:59.420 --> 00:04:03.270
If you're familiar with GraphQL,
it is another Facebook invention.

74
00:04:03.270 --> 00:04:06.300
It is a query language for data.

75
00:04:06.300 --> 00:04:08.596
And if you've worked with API's before,

76
00:04:08.596 --> 00:04:12.946
one of the most common ways that you'll
see that done is through REST endpoints.

77
00:04:12.946 --> 00:04:17.130
That's when you go to a website and
it goes slash API slash posts.

78
00:04:17.130 --> 00:04:21.887
And then when you hit that, you end up
getting back a JSON object that's an array

79
00:04:21.887 --> 00:04:24.810
of the posts and
all the data that you would need.

80
00:04:24.810 --> 00:04:28.280
This is a really powerful model
when you're looking at REST API's.

81
00:04:28.280 --> 00:04:33.860
They are great for
small subsets of data or linear data.

82
00:04:33.860 --> 00:04:36.296
But as data grows in complexity,

83
00:04:36.296 --> 00:04:42.270
you start to see this network effect
where well, you don't just need posts.

84
00:04:42.270 --> 00:04:47.090
I need posts and the comments for
that post and the author of the post and

85
00:04:47.090 --> 00:04:53.100
the authors of the comments and
comments written by those comment author.

86
00:04:53.100 --> 00:04:56.752
And it just starts to get into this messy
thing where I'm not just looking at data

87
00:04:56.752 --> 00:04:59.641
in one way, I'm starting to think
about the the graph of data,

88
00:04:59.641 --> 00:05:02.090
the connections between all the data.

89
00:05:02.090 --> 00:05:04.830
That's what GraphQL is designed to solve.

90
00:05:04.830 --> 00:05:09.193
GraphQL is a way to combine data in
a graph like way which means that we can

91
00:05:09.193 --> 00:05:12.028
say I want my posts and
now right in the query for

92
00:05:12.028 --> 00:05:15.970
my posts, I would like to get the author,
and the comments.

93
00:05:15.970 --> 00:05:19.894
And then inside those queries, I would
also like to get additional comments,

94
00:05:19.894 --> 00:05:23.890
additional posts by that author,
maybe categories, and related posts.

95
00:05:23.890 --> 00:05:26.180
All those things can
happen in the same query.

96
00:05:26.180 --> 00:05:29.420
Whereas in REST, I would have to
make an individual rest call for

97
00:05:29.420 --> 00:05:32.720
each of those things and
then combine that data myself.

98
00:05:32.720 --> 00:05:38.593
So, GraphQL is, it treats data as
more of a free form flexible thing,

99
00:05:38.593 --> 00:05:45.290
whereas REST t is a little more rigid
about the way that it approaches data.

100
00:05:45.290 --> 00:05:46.714
And that's why Gatsby went all in on.

101
00:05:46.714 --> 00:05:51.134
Gatsby has made this bet on, you're going
to build sites using content from a lot of

102
00:05:51.134 --> 00:05:54.419
different places, your file system,
you'll have images,

103
00:05:54.419 --> 00:05:56.836
you'll maybe pull in
some third party data.

104
00:05:56.836 --> 00:05:59.270
You're gonna have additional
things coming in.

105
00:05:59.270 --> 00:06:02.617
And all of those need to connect,
I have a blog post, but

106
00:06:02.617 --> 00:06:04.620
I need to pull some images for it.

107
00:06:04.620 --> 00:06:07.800
I also wanna pull in some comments
from a third party system.

108
00:06:07.800 --> 00:06:11.500
And there are a lot of things that lead to
me needing data from a lot of sources and

109
00:06:11.500 --> 00:06:14.890
I don't wanna have to do that
data reconciliation myself.

110
00:06:14.890 --> 00:06:18.886
GraphQL allows me to pull all those
together in a single query and

111
00:06:18.886 --> 00:06:22.890
then use them and
that's why Gatsby is bet on that.

112
00:06:22.890 --> 00:06:26.250
Gatsby is also opinionated, Gatsby is
gonna tell you where to put your files.

113
00:06:26.250 --> 00:06:27.840
It's gonna tell you how to query for data.

114
00:06:27.840 --> 00:06:31.380
It's gonna give you components that you
should use to get all the benefits, right?

115
00:06:31.380 --> 00:06:35.846
It's very much a framework that says,
we're going to give you a set of

116
00:06:35.846 --> 00:06:40.810
guardrails within which you can succeed,
it's designed for that.

117
00:06:40.810 --> 00:06:45.600
And this is a really good thing when you
are trying to get something done quickly,

118
00:06:45.600 --> 00:06:49.769
when you're trying to get a whole
team to follow the same set of rules.

119
00:06:49.769 --> 00:06:54.944
One of the biggest challenges you'll
run into with any software at scale,

120
00:06:54.944 --> 00:06:56.480
is documentation.

121
00:06:56.480 --> 00:06:59.938
So when you write bespoke software,
you're not just writing code,

122
00:06:59.938 --> 00:07:03.770
you also have to write and
maintain the documentation for that code.

123
00:07:03.770 --> 00:07:05.974
Or else anybody who's
never worked on it before,

124
00:07:05.974 --> 00:07:10.240
is having to learn the entire system from
scratch through reverse engineering.

125
00:07:10.240 --> 00:07:14.117
When you use an opinionated framework,
when you opt into something like reactor

126
00:07:14.117 --> 00:07:17.595
to Gatsby, what you're getting is
a lot of community documentation and

127
00:07:17.595 --> 00:07:21.145
a lot of community best practices
that lighten your documentation back.

128
00:07:21.145 --> 00:07:25.937
So instead of having to document the whole
system, here's every bit of code we wrote,

129
00:07:25.937 --> 00:07:28.970
why it does, what it does and
how you can use it.

130
00:07:28.970 --> 00:07:33.210
We can now say, most of this is React,
most of this is Gatsby.

131
00:07:33.210 --> 00:07:36.135
You are also able though,
to do these things,

132
00:07:36.135 --> 00:07:41.250
so we only have to document our custom
stuff instead of the whole thing.

133
00:07:41.250 --> 00:07:44.251
And that can be a strength,
it can also be a hindrance, and

134
00:07:44.251 --> 00:07:48.069
there are reasons why you wouldn't
want a super opinionated framework.

135
00:07:48.069 --> 00:07:51.018
I find that for myself,
whenever I'm working on code,

136
00:07:51.018 --> 00:07:55.033
if I find that the majority of the code
I'm writing is to back out of decisions

137
00:07:55.033 --> 00:07:59.860
made by the framework I've chosen,
I've probably chosen the wrong framework.

138
00:07:59.860 --> 00:08:04.012
So when you're planning your project, when
you're thinking through how you're gonna

139
00:08:04.012 --> 00:08:06.571
build this thing,
start considering the trade offs.

140
00:08:06.571 --> 00:08:10.584
Is this something that will benefit
from that consistency, those guardrails,

141
00:08:10.584 --> 00:08:13.948
that high predictability of how
things will be created on the site or

142
00:08:13.948 --> 00:08:16.736
is this something where what
I'm trying to do is weird?

143
00:08:16.736 --> 00:08:19.776
I'm trying to do something
that I've never seen before.

144
00:08:19.776 --> 00:08:22.331
And for me to do this using a framework,

145
00:08:22.331 --> 00:08:27.287
we'll require me to back out a bunch of
decisions or use the escape hatches to

146
00:08:27.287 --> 00:08:31.176
get away from the opinions that
are held by this framework.

147
00:08:31.176 --> 00:08:35.146
Gatsby is built around performance,
it's one of their core value propositions.

148
00:08:35.146 --> 00:08:39.262
They are very conscious of how to
make websites load and feel faster.

149
00:08:39.262 --> 00:08:44.193
One of the big promises of the web
has always been that we can make

150
00:08:44.193 --> 00:08:45.692
our own app store.

151
00:08:45.692 --> 00:08:47.544
We've seen this in progressive web apps.

152
00:08:47.544 --> 00:08:51.200
We've seen this in the ability
to have a website be offline and

153
00:08:51.200 --> 00:08:54.169
installable on your desktop,
on mobile phones.

154
00:08:54.169 --> 00:08:59.020
But there's always been this issue
where apps generally just feel better,

155
00:08:59.020 --> 00:09:00.246
they feel snappy.

156
00:09:00.246 --> 00:09:02.114
They feel like things just happen,

157
00:09:02.114 --> 00:09:05.200
right and
Gatsby is trying to address that problem.

158
00:09:05.200 --> 00:09:09.256
Gatsby is doing a lot of things behind
the scenes that make pages feel

159
00:09:09.256 --> 00:09:14.080
like they load instantly, that make
your initial page loads really fast.

160
00:09:14.080 --> 00:09:17.797
And all of that, we'll get into the
specifics of how they do that as we start

161
00:09:17.797 --> 00:09:19.600
actually building a site.

162
00:09:19.600 --> 00:09:24.436
But at its core, Gatsby is always trying
to think about the way that it will

163
00:09:24.436 --> 00:09:27.260
impact its users on the performance side.

164
00:09:28.830 --> 00:09:31.904
And probably the biggest reason to
use Gatsby is that Gatsby is wildly

165
00:09:31.904 --> 00:09:32.547
convinient.

166
00:09:32.547 --> 00:09:37.290
It has a bunch of starters that do
most of the things you would need.

167
00:09:37.290 --> 00:09:38.590
You wanna build a blog, great,

168
00:09:38.590 --> 00:09:41.529
there's a bunch of different templates
that you can install right now,

169
00:09:41.529 --> 00:09:44.580
that will give you a blog and
all you have to do is start writing.

170
00:09:44.580 --> 00:09:48.111
It also has a huge number of plugins and
whether those are for

171
00:09:48.111 --> 00:09:52.571
pulling in data from somewhere else,
hooking into third party services.

172
00:09:52.571 --> 00:09:55.887
Doing transformations of
data into different formats,

173
00:09:55.887 --> 00:10:01.140
all of those things are not only possible,
but really straightforward with Gatsby.

174
00:10:01.140 --> 00:10:05.479
So if you're trying to get something up
in a hurry, Gatsby is worth considering

175
00:10:05.479 --> 00:10:09.780
because it's so fast and so convenient
versus rolling something on your own.

