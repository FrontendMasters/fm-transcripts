WEBVTT

1
00:00:00.148 --> 00:00:05.552
So basically, top task analysis involves,
as we say, gathering a long list of tasks,

2
00:00:05.552 --> 00:00:10.811
rationalizing them down into something a
little bit more manageable, getting users

3
00:00:10.811 --> 00:00:15.942
to vote on the tasks that matter the most,
and then we analyze the results, right?

4
00:00:15.942 --> 00:00:19.408
I've got quite a lightweight way of doing
it that I'm the first to say is not

5
00:00:19.408 --> 00:00:22.048
the most the official way of
doing top task analysis, but

6
00:00:22.048 --> 00:00:24.041
it will get you where you wanna go, right?

7
00:00:24.041 --> 00:00:27.535
So let's just run through
very quickly how to do it.

8
00:00:27.535 --> 00:00:32.621
So what we're gonna do is we're gonna
jump in and we're gonna create a survey.

9
00:00:32.621 --> 00:00:37.996
Now there's a particular app that I tend
to use for doing this, which is an app

10
00:00:37.996 --> 00:00:43.304
called PollUnit not to be confused with
Pollfish that I mentioned earlier.

11
00:00:43.304 --> 00:00:45.687
Trust me, I constantly confuse them.

12
00:00:45.687 --> 00:00:51.048
But Pollfish allows you to
add a load of ideas and

13
00:00:51.048 --> 00:00:56.286
for real users to vote those ideas up and
down.

14
00:00:56.286 --> 00:00:58.159
Well, no just up, right?

15
00:00:58.159 --> 00:01:02.306
So I like this so I'm gonna click
the heart because I want that thing.

16
00:01:02.306 --> 00:01:05.202
And if there's a thing that they
want that's not on the list,

17
00:01:05.202 --> 00:01:07.105
they can add that as an idea themselves.

18
00:01:07.105 --> 00:01:09.696
You've probably seen things like this.

19
00:01:09.696 --> 00:01:13.056
There's a lot of sites that
allow you to vote on features,

20
00:01:13.056 --> 00:01:17.800
a lot of apps that allow you to vote on
upcoming features that people want, right.

21
00:01:17.800 --> 00:01:20.681
So we're gonna create
a survey with PollUnit.

22
00:01:20.681 --> 00:01:25.572
We're gonna populate that survey with our
initial list of all the features that

23
00:01:25.572 --> 00:01:26.523
we thought of.

24
00:01:26.523 --> 00:01:31.901
And then we're gonna ask
users to basically vote

25
00:01:31.901 --> 00:01:39.124
on those existing tasks on features or
suggest new ones, right?

26
00:01:39.124 --> 00:01:41.698
Very simple and to do.

27
00:01:41.698 --> 00:01:46.658
If you need more information and wanna
be taken through the logistics of how to

28
00:01:46.658 --> 00:01:50.488
do this, check out my course
on user research and testing.

29
00:01:50.488 --> 00:01:53.189
Then when we've done that,
we're gonna go through and

30
00:01:53.189 --> 00:01:55.032
we're gonna remove our duplicates.

31
00:01:55.032 --> 00:01:58.086
So there will be people that
suggest the same thing twice.

32
00:01:58.086 --> 00:02:01.607
We're gonna remove those and
combine their votes together.

33
00:02:01.607 --> 00:02:04.224
And we're gonna simplify the wording
down a little bit just so

34
00:02:04.224 --> 00:02:06.641
that it's easier because
sometimes people will write,

35
00:02:06.641 --> 00:02:09.585
I would really like to be able to do this,
blah, blah, blah, blah.

36
00:02:09.585 --> 00:02:13.697
And you could just put the feature
name in there instead,

37
00:02:13.697 --> 00:02:17.048
just to make it easier for
you to do all of that.

38
00:02:17.048 --> 00:02:20.043
I mean, you can use AI to
help do all of this analysis.

39
00:02:20.043 --> 00:02:22.923
So I've written a nice prompt for
you there.

40
00:02:22.923 --> 00:02:27.770
That will output a nice neat list for
you of using

41
00:02:27.770 --> 00:02:33.233
the results that you've can
download from POM unit.

42
00:02:33.233 --> 00:02:37.448
He said trying to get the right name for
it.

43
00:02:37.448 --> 00:02:43.550
But the long the short of it is once
you've gone through this exercise,

44
00:02:43.550 --> 00:02:48.635
you'll end up with a nice list
of prioritized features that

45
00:02:48.635 --> 00:02:53.432
your target audience most
wants from your app, right?

46
00:02:53.432 --> 00:02:57.388
And that is invaluable
because now you can go well,

47
00:02:57.388 --> 00:03:01.532
I know I get a much better idea
of what I I need to build.

48
00:03:01.532 --> 00:03:05.024
And you'll probably find that
the top third of the list,

49
00:03:05.024 --> 00:03:08.821
of all the suggestions,
gets the vast majority of the votes.

50
00:03:08.821 --> 00:03:13.649
And then it'll suddenly tail off with a
lot of other random stuff that people have

51
00:03:13.649 --> 00:03:14.433
suggested.

52
00:03:14.433 --> 00:03:18.045
So it's that top third you
wanna focus on for your MVP.

53
00:03:18.045 --> 00:03:23.039
So you know you're building the right
things now for the right audience.

54
00:03:23.039 --> 00:03:26.821
We're really getting there now and
honing in.

55
00:03:26.821 --> 00:03:31.501
Now, one of the things that
you might be thinking is,

56
00:03:31.501 --> 00:03:38.684
how do I do this top task analysis because
I don't have access to my users, right?

57
00:03:38.684 --> 00:03:44.396
Well, this is the grumpy old man's
coming back out at this point,

58
00:03:44.396 --> 00:03:46.233
kinda looks afraid.

59
00:03:46.233 --> 00:03:53.472
The grumpy old man's, because if that
is the case, you've got a big problem.

60
00:03:53.472 --> 00:03:58.318
Think about it, if you don't have
access to your users to get them to do

61
00:03:58.318 --> 00:04:03.431
a top task analysis, how will you gonna
convince them to use the product.

62
00:04:03.431 --> 00:04:08.031
You've gotta be able to get to your
audience in order to be able to

63
00:04:08.031 --> 00:04:10.174
persuade them to use the app.

64
00:04:10.174 --> 00:04:12.954
And that's why in the final
section of this workshop,

65
00:04:12.954 --> 00:04:16.047
we're gonna explore that
challenge in more depth, right?

66
00:04:16.047 --> 00:04:18.934
Because it is crucial to success.

67
00:04:18.934 --> 00:04:22.641
You need people if you need people
to fulfill fill in a survey

68
00:04:22.641 --> 00:04:25.842
that's easy compared to
get them into buy the app.

69
00:04:25.842 --> 00:04:29.282
So you got to find ways to get
people to complete the survey and

70
00:04:29.282 --> 00:04:33.413
if you can't do that, then you know
you're in trouble [LAUGH] all right?

71
00:04:33.413 --> 00:04:37.739
Possible places you can look Reddit,
Forums, Mailing lists,

72
00:04:37.739 --> 00:04:41.515
social media,
anywhere your audience basically are.

73
00:04:41.515 --> 00:04:45.373
You can post and say, hey,
I'm thinking about building this app,

74
00:04:45.373 --> 00:04:50.179
I'd really appreciate it if you spent 30
seconds voting on some possible features

75
00:04:50.179 --> 00:04:51.746
that I could include in it.

76
00:04:51.746 --> 00:04:53.393
And hopefully you'll get a response.

77
00:04:53.393 --> 00:04:57.284
If you get really desperate there
are services out there that will do

78
00:04:57.284 --> 00:05:00.708
recruitment for
you to get people to complete this survey.

79
00:05:00.708 --> 00:05:04.962
So many testing tools will
recruit people for you for

80
00:05:04.962 --> 00:05:09.609
as little as $1 a person to
complete a survey like this.

81
00:05:09.609 --> 00:05:12.638
One that I use quite a lot is Askable and

82
00:05:12.638 --> 00:05:17.384
you can point know them those
people straight up PullUnit.

83
00:05:17.384 --> 00:05:23.416
So know you know your top tasks you
can plan your launch features, right?

84
00:05:23.416 --> 00:05:28.197
And for selecting your launch features,
you don't necessarily just pick the top

85
00:05:28.197 --> 00:05:31.184
tasks because there are other
things to consider.

86
00:05:31.184 --> 00:05:35.831
Does it fit with the market and
what you're trying to do in the market?

87
00:05:35.831 --> 00:05:37.066
Is it practical?

88
00:05:37.066 --> 00:05:40.936
[LAUGH] Can I actually build that thing?

89
00:05:40.936 --> 00:05:45.115
Just to touch on our market fit,
your top task analysis is

90
00:05:45.115 --> 00:05:50.097
absolutely a part of the market fit,
is what people are demanding.

91
00:05:50.097 --> 00:05:53.870
But you've also got to consider
your value proposition as well.

92
00:05:53.870 --> 00:05:59.026
So I'm sure a lot of people
asked Mark to include courses on

93
00:05:59.026 --> 00:06:04.922
Frontend Masters that are about
topics that aren't particularly

94
00:06:04.922 --> 00:06:10.308
relevant to developers and
the goal of helping developers.

95
00:06:10.308 --> 00:06:14.057
Occasionally let the old one squeak
through otherwise I wouldn't be

96
00:06:14.057 --> 00:06:16.325
speaking as I'm not really a developer.

97
00:06:16.325 --> 00:06:21.366
But generally speaking, you will
still stay stay focused on his value

98
00:06:21.366 --> 00:06:26.505
proposition which is creating great
content for developers, right?

99
00:06:26.505 --> 00:06:28.857
You've also got to
consider the competition,

100
00:06:28.857 --> 00:06:31.042
of course, based on your market research.

101
00:06:31.042 --> 00:06:34.749
Is that feature gonna actually help
you stand out from the competition?

102
00:06:34.749 --> 00:06:36.525
And you also need to
think about the impact.

103
00:06:36.525 --> 00:06:40.813
Will this feature really impress your
audience and create a bit of buzz, right?

104
00:06:40.813 --> 00:06:44.651
So those are all the market fit
considerations you need to put into what

105
00:06:44.651 --> 00:06:46.484
features you're gonna go with.

106
00:06:46.484 --> 00:06:48.739
And then there's a bit,
there's a couple of practicalities.

107
00:06:48.739 --> 00:06:51.303
There is how easy is it to build?

108
00:06:51.303 --> 00:06:54.031
Is it gonna be scalable.

109
00:06:54.031 --> 00:06:58.742
So often you can build something
that is great to begin with but

110
00:06:58.742 --> 00:07:03.824
isn't gonna scale as the application
becomes more complicated.

111
00:07:03.824 --> 00:07:07.813
And sometimes you can ignore
scalability and go, well, fair enough.

112
00:07:07.813 --> 00:07:11.053
We'll deal with that
problem when we get to it.

113
00:07:11.053 --> 00:07:13.960
And that's okay but
just be aware that you're doing that.

114
00:07:13.960 --> 00:07:16.293
And then often, personally, for

115
00:07:16.293 --> 00:07:20.718
each feature that I'm thinking
about building I create a good old

116
00:07:20.718 --> 00:07:25.400
fashioned user story card cuz I've
been indoctrinated into these.

117
00:07:25.400 --> 00:07:30.101
If you haven't come across
user story cards before,

118
00:07:30.101 --> 00:07:35.228
it's a basic statement as a,
I want to, so I can, right?

119
00:07:35.228 --> 00:07:41.530
So something like, as a frontend
developer, I wanna learn about MVPs so

120
00:07:41.530 --> 00:07:45.885
I can plan my SaaS app launch,
that kind of thing.

121
00:07:45.885 --> 00:07:49.508
So you got your features,
you've got your audience,

122
00:07:49.508 --> 00:07:52.437
you know your market is
it time to build yet?

123
00:07:52.437 --> 00:07:56.448
No [LAUGH] I'm still not
letting you code anything.

124
00:07:56.448 --> 00:08:02.769
But what [LAUGH] I am suggesting as
you prototype now might be for you.

125
00:08:02.769 --> 00:08:05.356
Actually, the quickest way
to prototype is in code,

126
00:08:05.356 --> 00:08:09.566
in which case that's absolutely fine, but
don't try and build the actual thing yet.

127
00:08:09.566 --> 00:08:13.756
There are three reasons for prototyping
before you try and go for the full build.

128
00:08:13.756 --> 00:08:15.455
First of all, it's gonna save you effort.

129
00:08:15.455 --> 00:08:19.855
It's easy to waste time building features
that turn out not to be fit for purpose.

130
00:08:19.855 --> 00:08:23.343
Even with all this research and
even with all this thought,

131
00:08:23.343 --> 00:08:27.063
sometimes you can be surprised and
that comes back to bite you.

132
00:08:27.063 --> 00:08:31.993
Second, prototyping avoids mistakes
that will be time consuming to

133
00:08:31.993 --> 00:08:33.780
fix within a full build.

134
00:08:33.780 --> 00:08:37.752
And ultimately that means you'll get to
the market quicker because you won't make

135
00:08:37.752 --> 00:08:40.657
mistakes when you're actually building and
it's costly.

136
00:08:40.657 --> 00:08:43.731
And also, prototyping can
help you plan for the future,

137
00:08:43.731 --> 00:08:48.102
it can help you envisage the features of
an app so you can lay better foundations.

138
00:08:48.102 --> 00:08:51.567
So I tend to start with wireframes, and

139
00:08:51.567 --> 00:08:57.241
I talk a lot more about prototyping
in my product design course.

140
00:08:57.241 --> 00:09:00.812
But I start with lo-fi wireframes
to give me a bird's eye view of how

141
00:09:00.812 --> 00:09:04.774
the application will fit together and
how all the features work together.

142
00:09:04.774 --> 00:09:09.448
And then I will probably do
some high fidelity mock-ups for

143
00:09:09.448 --> 00:09:13.937
critical screens partly because
that allows me to do some

144
00:09:13.937 --> 00:09:19.192
lightweight testing that answers
three fundamental questions.

145
00:09:19.192 --> 00:09:24.032
But also, because those screens can
be very useful in the final section

146
00:09:24.032 --> 00:09:28.318
we're gonna look at which is
running a test campaign, right?

147
00:09:28.318 --> 00:09:30.586
So what can you learn from
this kind of prototyping?

148
00:09:30.586 --> 00:09:35.760
The what you're trying to take away here
is trying to put it in front of some users

149
00:09:35.760 --> 00:09:40.798
in a very lightweight way and we learn
three things, do they like it, right?

150
00:09:40.798 --> 00:09:41.871
Does it resonate with them?

151
00:09:41.871 --> 00:09:43.811
Do they get excited about it?

152
00:09:43.811 --> 00:09:44.653
Do they get it?

153
00:09:44.653 --> 00:09:48.089
Do they understand what it is and
how it's supposed to work and

154
00:09:48.089 --> 00:09:49.422
what it can do for them?

155
00:09:49.422 --> 00:09:52.359
And can they use it, right?

156
00:09:52.359 --> 00:09:56.092
Can they successfully navigate it,
complete tasks, etc?

157
00:09:56.092 --> 00:10:01.619
Once you've prototyped up a few pages and
the kind of flow of it.

158
00:10:01.619 --> 00:10:03.097
You don't need to do the whole thing.

159
00:10:03.097 --> 00:10:07.987
I'm not insisting that every page is
created as a high fidelity prototype.

160
00:10:07.987 --> 00:10:10.179
We've got better things
to do with our lives.

161
00:10:10.179 --> 00:10:14.050
But once you got a few pages and
a feel of how it all fits together,

162
00:10:14.050 --> 00:10:17.995
give it a go of testing it with
something like listen this is a great

163
00:10:17.995 --> 00:10:21.178
app that does three very
basic tests that we can try.

164
00:10:21.178 --> 00:10:25.866
Again, I've talked about this in my
course on user research and testing.

165
00:10:25.866 --> 00:10:32.098
So the three tests I tend to run are do
they like it tests, which is a survey.

166
00:10:32.098 --> 00:10:35.836
And basically the survey
ask them what words they

167
00:10:35.836 --> 00:10:39.401
associate with the app
that you've created.

168
00:10:39.401 --> 00:10:44.091
Exciting, is it innovative,
is it perfect for my needs or

169
00:10:44.091 --> 00:10:47.551
whatever else you just, words come back.

170
00:10:47.551 --> 00:10:50.738
Just to get a sense of what
people think about it.

171
00:10:50.738 --> 00:10:55.317
More details on running
those in the other course.

172
00:10:55.317 --> 00:10:57.144
Then we can look at, do they get it?

173
00:10:57.144 --> 00:10:59.486
I typically use a five-second test for
this.

174
00:10:59.486 --> 00:11:02.893
Where I show one of my
high fidelity mockups or

175
00:11:02.893 --> 00:11:08.194
even several of them to user for
a short length of time, a few seconds.

176
00:11:08.194 --> 00:11:11.903
Take it away and then ask them,
what was the app?

177
00:11:11.903 --> 00:11:12.580
What did it do?

178
00:11:12.580 --> 00:11:13.457
What was it about?

179
00:11:13.457 --> 00:11:16.216
What could I achieve via it?

180
00:11:16.216 --> 00:11:19.215
And then finally, can they use it?

181
00:11:19.215 --> 00:11:22.040
I'll ask them to show them a mockup and

182
00:11:22.040 --> 00:11:26.453
I'll say if you wanted to create
a new task in this task app or

183
00:11:26.453 --> 00:11:32.222
if you wanted to create a new project in
this task app, where would you click?

184
00:11:32.222 --> 00:11:36.193
And then they click on the mock up and
it records where they've clicked and

185
00:11:36.193 --> 00:11:39.793
you can see where the people
are clicking in the right place, etc.

186
00:11:39.793 --> 00:11:41.394
I'm really skipping over this.

187
00:11:41.394 --> 00:11:45.794
I do go into a lot more detail
in my other courses, but

188
00:11:45.794 --> 00:11:51.994
the principle is it's worth doing a little
bit of a sanity check in a little

189
00:11:51.994 --> 00:11:57.102
bit of lightweight prototyping
before you start building.

190
00:11:57.102 --> 00:12:02.042
The bigger question is, well, should I be
building a fully interactive prototype and

191
00:12:02.042 --> 00:12:04.084
doing a lot more thorough testing?

192
00:12:04.084 --> 00:12:09.666
To which the answer is yes,
but not now, right?

193
00:12:09.666 --> 00:12:13.886
We still don't know despite
all of our research,

194
00:12:13.886 --> 00:12:20.016
despite all of our competitive analysis,
our understanding of users,

195
00:12:20.016 --> 00:12:25.862
we don't know one fundamental thing
which Mark mentioned earlier.

196
00:12:25.862 --> 00:12:29.740
Will people part with cash, right?

197
00:12:29.740 --> 00:12:33.761
Will people actually buy this thing?

198
00:12:33.761 --> 00:12:38.144
And we need to know that before we
actually start getting into the heavy

199
00:12:38.144 --> 00:12:42.394
development cycle of proper prototyping,
proper testing, etc.

200
00:12:42.394 --> 00:12:45.437
So just to wrap this kind of defining your

201
00:12:45.437 --> 00:12:49.113
MVP section up before we
look at that final area.

202
00:12:49.113 --> 00:12:56.079
An MVP, it's an indispensable step I would
argue in creating a SaaS application.

203
00:12:56.079 --> 00:12:59.529
Prototyping is an indispensable part.

204
00:12:59.529 --> 00:13:05.695
You wanna brainstorm as many tasks as you
think that users might wanna complete.

205
00:13:05.695 --> 00:13:09.805
You wanna identify the tasks
that matter most users,

206
00:13:09.805 --> 00:13:14.371
work out what features are practical
to actually create and

207
00:13:14.371 --> 00:13:19.498
then just prototype a little bit
of that before you go any further.

208
00:13:19.498 --> 00:13:22.477
Then once you've prototyped
a little bit of it,

209
00:13:22.477 --> 00:13:27.431
once you feel you've done a bit of testing
then we're gonna run a test campaign.

210
00:13:27.431 --> 00:13:30.546
And this is where the rubber
really hits the road.

