WEBVTT

1
00:00:00.130 --> 00:00:05.508
You're gonna need to install Golang, 1.2
or higher preferably, or 1.21 or higher.

2
00:00:05.508 --> 00:00:08.505
You can Google install Golang,
it's pretty straightforward.

3
00:00:08.505 --> 00:00:10.748
And you should really also install Air.

4
00:00:10.748 --> 00:00:14.222
Air is really easy, just copy and
paste this line right here.

5
00:00:14.222 --> 00:00:18.022
And it will just make things
work out very, very easily.

6
00:00:18.022 --> 00:00:19.626
Also make sure you have the Go-LSP.

7
00:00:19.626 --> 00:00:22.451
Again, life is just easier
if you have an LSP.

8
00:00:22.451 --> 00:00:24.106
I don't know how VS code does LSP.

9
00:00:24.106 --> 00:00:27.794
So if you're using VS code, I'm sure it
will just tell you how to install it.

10
00:00:27.794 --> 00:00:31.473
But if you're using Vim,
make sure you get Go, please.

11
00:00:31.473 --> 00:00:35.649
And then I have just a little quick set
of things you're gonna want to execute to

12
00:00:35.649 --> 00:00:37.793
just get everything up and running.

13
00:00:37.793 --> 00:00:40.478
If you're completely unfamiliar with Go,

14
00:00:40.478 --> 00:00:44.100
I'm gonna move faster than
completely unfamiliar.

15
00:00:44.100 --> 00:00:46.601
But you can most certainly
read the code very easy.

16
00:00:46.601 --> 00:00:48.177
And all the code will be on the Internet.

17
00:00:48.177 --> 00:00:49.896
I'm not sure if I pushed it up or not.

18
00:00:49.896 --> 00:00:51.860
I could get it pushed up pretty quickly.

19
00:00:51.860 --> 00:00:54.559
It's pretty straightforward language.

20
00:00:54.559 --> 00:00:57.357
Go is an easily,
if you have any experience coding,

21
00:00:57.357 --> 00:01:00.037
you can pretty much read
the language off the rip.

22
00:01:00.037 --> 00:01:03.174
It is about as simple as
a language as one can get.

23
00:01:03.174 --> 00:01:05.320
And it's the reason why I chose it for
this workshop.

24
00:01:05.320 --> 00:01:08.281
I really wanted to use Rust or OCaml, but

25
00:01:08.281 --> 00:01:13.073
it's just way harder to convince
a group of people to follow along

26
00:01:13.073 --> 00:01:17.791
when you're using not the simplest
C based language possible.

27
00:01:17.791 --> 00:01:21.257
Okay, everybody,
if you can clone down this project,

28
00:01:21.257 --> 00:01:25.826
I give us just a little bit of a base
template that has a couple things in it,

29
00:01:25.826 --> 00:01:30.222
including just the Air script that's
just it makes life pretty easy.

30
00:01:30.222 --> 00:01:31.568
All right, awesome, so everyone's there.

31
00:01:31.568 --> 00:01:34.329
I probably need to also do that so
I'm just gonna do that,

32
00:01:34.329 --> 00:01:36.185
do the exact same thing, fantastic.

33
00:01:36.185 --> 00:01:41.604
Sometimes you're gonna, hey,
hey, hey, it didn't go through.

34
00:01:41.604 --> 00:01:44.440
Did I not, well, whatever,

35
00:01:44.440 --> 00:01:49.530
go, There we go, fantastic.

36
00:01:49.530 --> 00:01:51.741
And we can even go mod
tidy if you need to.

37
00:01:51.741 --> 00:01:53.266
It's kind of nice to do, look at that.

38
00:01:53.266 --> 00:01:55.458
It already has some things
already installed for me.

39
00:01:55.458 --> 00:01:58.181
I shouldn't have anything installed for
me, whatever.

40
00:01:58.181 --> 00:02:00.303
That's fine enough,
I shouldn't be installing anything things.

41
00:02:00.303 --> 00:02:03.493
Quick notes, we're gonna be
going through this pretty quick.

42
00:02:03.493 --> 00:02:08.282
I've added some intentional failure cases
so we can kinda debug what's happening and

43
00:02:08.282 --> 00:02:10.543
kinda discover how HTMX works.

44
00:02:10.543 --> 00:02:13.726
There are some intentional moments where
you're supposed to feel confused or

45
00:02:13.726 --> 00:02:15.762
you're supposed to not
like what's happening.

46
00:02:15.762 --> 00:02:17.429
I want you actively engaged.

47
00:02:17.429 --> 00:02:20.988
Please take the time to guess
why things are not working.

48
00:02:20.988 --> 00:02:25.390
Please open up the Chrome debugger,
if you can keep up, it would be very,

49
00:02:25.390 --> 00:02:29.665
very good, and I may mess up and
accidentally program the right thing.

50
00:02:29.665 --> 00:02:32.275
And if that happens, I'm sorry,
we can back it up and

51
00:02:32.275 --> 00:02:34.718
I can try to program the wrong
thing to begin with.

52
00:02:34.718 --> 00:02:37.871
But if we do it on,
if we do good, I'm sorry.

53
00:02:37.871 --> 00:02:39.119
That's just part of it.

54
00:02:39.119 --> 00:02:43.900
And of course, you will forget everything
that you've learned up until now to be

55
00:02:43.900 --> 00:02:45.885
able to be successful with HTMX.

56
00:02:45.885 --> 00:02:49.693
If you try to build an HTMX application
like you'd build a React application,

57
00:02:49.693 --> 00:02:50.626
you'll be upset.

58
00:02:50.626 --> 00:02:53.733
Just like if you try to build a React
application with HTMX knowledge,

59
00:02:53.733 --> 00:02:54.584
you will be upset.

60
00:02:54.584 --> 00:02:58.242
Use any tool the wrong way and
it becomes a mess pretty quickly.

61
00:02:58.242 --> 00:03:00.335
So we will be using URLs today, I know.

62
00:03:00.335 --> 00:03:02.667
They will be used, they will be important,

63
00:03:02.667 --> 00:03:05.811
we may even add query
parameters to change behavior.

64
00:03:05.811 --> 00:03:07.961
We will even be using status codes.

65
00:03:07.961 --> 00:03:10.514
This will not be happening today, okay?

66
00:03:10.514 --> 00:03:11.312
This is not an option.

67
00:03:11.312 --> 00:03:14.576
There will be no 200s with
a 400 inside of the body.

68
00:03:14.576 --> 00:03:16.067
This is just not a thing.

69
00:03:16.067 --> 00:03:17.998
I know this will be difficult.

70
00:03:17.998 --> 00:03:19.857
Some of you may get a little scared,
I'm sorry.

71
00:03:19.857 --> 00:03:24.744
We'll be even using HTTP verbs,
get, post, and delete.

72
00:03:24.744 --> 00:03:26.500
We're not doing any updates,
but they're not too hard.

73
00:03:26.500 --> 00:03:29.260
If you know how to do a delete,
you know how to do an update.

74
00:03:29.260 --> 00:03:32.124
We will use as little
dependencies as possible.

75
00:03:32.124 --> 00:03:37.097
That's actually why I chose Go, is that I
also don't have to tell you 900 things to

76
00:03:37.097 --> 00:03:41.034
go and install as far as libraries
we'll be using Go templating, so

77
00:03:41.034 --> 00:03:42.849
it's already internal item.

78
00:03:42.849 --> 00:03:48.133
The only real dependency we'll have is
just a server which we'll be using Echo,

79
00:03:48.133 --> 00:03:53.199
which appears to be the simplest possible
server I can find, and that's it.

80
00:03:53.199 --> 00:03:55.776
So I wanted this course to be about HTMX,
not about other texts,

81
00:03:55.776 --> 00:03:57.081
it's really not even about Go.

82
00:03:57.081 --> 00:03:58.284
It just happens to use Go.

