WEBVTT

1
00:00:00.712 --> 00:00:05.707
Again, we still have that problem
that we saw before in this example,

2
00:00:05.707 --> 00:00:10.449
up here, which is changing anything
about any course card does not

3
00:00:10.449 --> 00:00:13.770
affect any of the other course cards,
right?

4
00:00:13.770 --> 00:00:19.716
What I eventually would like to do is get
this to the point where it's like, okay,

5
00:00:19.716 --> 00:00:25.854
I'm working on a design actually these
should all have white backgrounds, right?

6
00:00:25.854 --> 00:00:28.273
If I change this one,
it only applies to this one.

7
00:00:28.273 --> 00:00:30.763
I want this idea of like, I have buttons.

8
00:00:30.763 --> 00:00:34.937
[LAUGH] again, if you wanted to imagine
you had a UI with hundreds of buttons,

9
00:00:34.937 --> 00:00:37.756
hundreds of list items,
hundreds of checkboxes.

10
00:00:37.756 --> 00:00:42.484
You're like, I'm done with this border
radius of eight, we're going 16, right?

11
00:00:42.484 --> 00:00:46.953
I think that would make your checkboxes
look like radio buttons at that point, but

12
00:00:46.953 --> 00:00:48.203
regardless, right?

13
00:00:48.203 --> 00:00:52.677
Or we're changing something about the
space and your padding, you don't wanna

14
00:00:52.677 --> 00:00:56.385
have to go all the way through your
designs and change everything.

15
00:00:56.385 --> 00:00:58.270
The idea is we wanna say,
this is a button.

16
00:00:58.270 --> 00:00:59.665
This is what a button looks like.

17
00:00:59.665 --> 00:01:03.424
However, we also don't wanna live in
a world where every button has to say

18
00:01:03.424 --> 00:01:04.769
the word button, right?

19
00:01:04.769 --> 00:01:08.957
There are things that we wanna share and
things that we want to override.

20
00:01:08.957 --> 00:01:12.479
Now, how do we do this in
front end engineering?

21
00:01:12.479 --> 00:01:16.842
Well, we will usually make, we write a
bunch of jQuery just modify the DOM right?

22
00:01:16.842 --> 00:01:21.294
Just query selector all and
just modify those things right.

23
00:01:21.294 --> 00:01:25.717
But, these days for the most part,
like many of the popular frameworks

24
00:01:25.717 --> 00:01:30.672
have some kinda concept or notion of a
component that we can throw onto the page.

25
00:01:30.672 --> 00:01:34.921
And as we change the component, so
does every instance of it in our UI,

26
00:01:34.921 --> 00:01:39.110
that we implement with JavaScript,
or TypeScript or what have you.

27
00:01:39.110 --> 00:01:42.485
The same is true in Figma, and
there's a lot of parallels.

28
00:01:42.485 --> 00:01:46.765
What is super interesting for
us in our very specific

29
00:01:46.765 --> 00:01:51.823
discipline is the inheritance
model of components works very

30
00:01:51.823 --> 00:01:56.607
similar to the inheritance
model in JavaScript, right?

31
00:01:56.607 --> 00:02:00.815
So in JavaScript unlike a lot of other
object oriented programming languages,

32
00:02:00.815 --> 00:02:02.459
you don't have a class per se.

33
00:02:02.459 --> 00:02:04.048
There's a syntax called class but

34
00:02:04.048 --> 00:02:07.683
the inheritance model is prototypal
inheritance means, you have an object.

35
00:02:07.683 --> 00:02:11.871
And then you can have other objects that
if they don't have the right property,

36
00:02:11.871 --> 00:02:13.884
they look to their prototype object.

37
00:02:13.884 --> 00:02:18.408
And like, yeah, I inherit from
this other object over here, but

38
00:02:18.408 --> 00:02:22.373
I don't know what my title
color should be, go ask that.

39
00:02:22.373 --> 00:02:27.017
Right but if on that child object you say
like know your heading color, it's red,

40
00:02:27.017 --> 00:02:28.160
but mine is red, but

41
00:02:28.160 --> 00:02:31.886
all the other ones will still
refer to that apparent components.

42
00:02:31.886 --> 00:02:36.026
So basically you can take anything in
your figma UI and be like I'm gonna

43
00:02:36.026 --> 00:02:39.895
use this again right if you do that
you can turn it into a component.

44
00:02:39.895 --> 00:02:42.848
And then you can just drag
in additional copies so

45
00:02:42.848 --> 00:02:47.760
I'll show you what it looks like in
practice right, theoretically, I did not.

46
00:02:47.760 --> 00:02:50.635
I don't wanna talk about how many times
I changed the color and the fonts and

47
00:02:50.635 --> 00:02:51.970
the line heights in this, right?

48
00:02:51.970 --> 00:02:53.630
It's not really important.

49
00:02:53.630 --> 00:02:56.677
I don't wanna talk about how many times I
changed the border radius or the stroke.

50
00:02:56.677 --> 00:03:01.097
It's not useful but I didn't have to worry
about it cuz I didn't have to go change

51
00:03:01.097 --> 00:03:02.599
each and every one of them.

52
00:03:02.599 --> 00:03:08.847
If I wanted to add a new sticky
note I can just drag it in, right?

53
00:03:08.847 --> 00:03:15.373
I could override the text,
new text, right?

54
00:03:15.373 --> 00:03:19.207
And it's got that uniquely, but it takes
all the other properties of a sticky note.

55
00:03:19.207 --> 00:03:25.149
I can go ahead and let's say let
me go to this base one over here.

56
00:03:25.149 --> 00:03:28.116
We'll explain based on
the second sticky notes,

57
00:03:28.116 --> 00:03:31.024
you're now gonna have
a border radius of eight.

58
00:03:31.024 --> 00:03:33.375
You know,
let's just make it more ridiculous, 32.

59
00:03:33.375 --> 00:03:37.539
Right, you can see that not only
do they all change over here, but

60
00:03:37.539 --> 00:03:41.627
if I go back to my components every
sticky note in my mock up now has

61
00:03:41.627 --> 00:03:46.217
rounded corners, which is gonna drive
me nuts in the next ten minutes.

62
00:03:46.217 --> 00:03:50.691
And I will have to change it
back probably during a break

63
00:03:50.691 --> 00:03:54.300
because I won't be able
to take it anymore.

64
00:03:54.300 --> 00:03:56.239
But for now you can see that
they all kind of inherited that.

65
00:03:56.239 --> 00:03:58.183
So how do we do this, right?

66
00:03:58.183 --> 00:04:01.544
The nice part is not like you
have to go to a special place.

67
00:04:01.544 --> 00:04:05.602
And make special component classes.

68
00:04:05.602 --> 00:04:10.296
Now, you can literally take
anything that you like and

69
00:04:10.296 --> 00:04:14.493
make it a component and
then use it other places.

70
00:04:14.493 --> 00:04:16.994
Just because you like that
famous Jurassic Park line.

71
00:04:16.994 --> 00:04:19.926
They were so busy asking whether or
not they could,

72
00:04:19.926 --> 00:04:22.994
they didn't ask whether or
not they should, right,

73
00:04:22.994 --> 00:04:27.170
to know that all buttons are based off
of one button somewhere in your UI.

74
00:04:27.170 --> 00:04:28.238
It's probably not great.

75
00:04:28.238 --> 00:04:31.058
Can you right click and go main component?

76
00:04:31.058 --> 00:04:34.994
Yeah, sure but there we're gonna see some
strategies for how you organize your

77
00:04:34.994 --> 00:04:38.770
components and how you set them up that
will make you happier as time goes on.

78
00:04:38.770 --> 00:04:44.615
But the concept conceptually is any
layer can be turned into a component and

79
00:04:44.615 --> 00:04:47.119
can be reused certain parts so,

80
00:04:47.119 --> 00:04:51.129
that component can be
overwritten not all of them.

81
00:04:51.129 --> 00:04:55.063
And we will have to do is jump through
some hoops and do some tricks to do some,

82
00:04:55.063 --> 00:04:57.527
like more advanced things,
which we'll see.

83
00:04:57.527 --> 00:05:01.688
But this is the general like conceptual
framework that we're going to kind of dig

84
00:05:01.688 --> 00:05:03.596
into for the next little bit, okay.

85
00:05:03.596 --> 00:05:08.443
Okay so what might make a good component
I mean common UI elements like buttons.

86
00:05:08.443 --> 00:05:12.451
Checkboxes input fields maybe logo
branding assets like theoretically

87
00:05:12.451 --> 00:05:16.460
originally when I was putting together
this material that like have very

88
00:05:16.460 --> 00:05:17.059
nice art.

89
00:05:17.059 --> 00:05:21.379
Or whatever that I had that was a
component cuz I was still tweaking it and

90
00:05:21.379 --> 00:05:25.339
stuff along those lines and
I was making a whole bunch of nav bars,

91
00:05:25.339 --> 00:05:27.362
I just wanted them all to change.

92
00:05:27.362 --> 00:05:29.938
That's a possible component as well.

93
00:05:29.938 --> 00:05:32.629
If you're developing for iOS,

94
00:05:32.629 --> 00:05:37.321
you might pull in a bunch of
the standard iOS component.

95
00:05:37.321 --> 00:05:40.093
That's right like the standard IOS
button stuff along those lines,

96
00:05:40.093 --> 00:05:42.435
not just your buttons and
things that you're building but

97
00:05:42.435 --> 00:05:44.120
the standard like native pieces as well.

98
00:05:44.120 --> 00:05:51.160
That's true honestly for the browser as
well to stuff like post it notes that

99
00:05:51.160 --> 00:05:56.223
you plan on using even to like
document your UI as well.

100
00:05:56.223 --> 00:06:00.014
So that is also a thing that
could definitely happen too.

101
00:06:00.014 --> 00:06:03.017
We talked a little bit about this
prototypal inheritance that's

102
00:06:03.017 --> 00:06:05.429
the thing that no designer
will ever explain to you.

103
00:06:05.429 --> 00:06:08.977
But like a daily and maybe that
brings some kind of bell if not,

104
00:06:08.977 --> 00:06:11.719
you don't need to know
that in order to do this.

105
00:06:11.719 --> 00:06:16.491
Okay, things you can override you can
change the text in any component as we saw

106
00:06:16.491 --> 00:06:18.440
with the posted note.

107
00:06:18.440 --> 00:06:23.294
You can change a lot of the colors,
you can change the shadow in the blurs,

108
00:06:23.294 --> 00:06:25.487
you can change the layout grids,

109
00:06:25.487 --> 00:06:29.659
you can change nested components
which which we'll get into.

110
00:06:29.659 --> 00:06:33.104
The things you can override is not as
important as the list of things that you

111
00:06:33.104 --> 00:06:33.988
can't override.

112
00:06:36.153 --> 00:06:39.435
There we go,
which is the order of things, right?

113
00:06:39.435 --> 00:06:45.667
So if I wanted to grab this title and
move it, I can't.

114
00:06:45.667 --> 00:06:50.508
I can't even though this is an auto
layout, I can't move the order of

115
00:06:50.508 --> 00:06:55.108
the components I can't really
change its position at all right?

116
00:06:55.108 --> 00:06:58.803
Any constraints,
the bounds of text layers,

117
00:06:58.803 --> 00:07:01.749
I can't add a new component in here.

118
00:07:01.749 --> 00:07:03.467
There's an asterisk, I can cheat.

119
00:07:03.467 --> 00:07:05.093
I'll show you how to cheat a little bit.

120
00:07:05.093 --> 00:07:10.063
But generally speaking,
I am somewhat locked in to the general

121
00:07:10.063 --> 00:07:14.676
structure of this component
that I can't really change.

122
00:07:14.676 --> 00:07:15.843
But there are some ways,

123
00:07:15.843 --> 00:07:18.685
once you kind of like conceptually
wrap your head around it.

124
00:07:18.685 --> 00:07:25.715
There are ways to do most of the things
that you want, if not all, but most.

125
00:07:25.715 --> 00:07:27.053
So we've got that kind of in place.

126
00:07:27.053 --> 00:07:28.275
So how do you create a component?

127
00:07:28.275 --> 00:07:30.800
I said, you can take almost anything.

128
00:07:30.800 --> 00:07:34.320
So here's like a card component that
we made before, or a version of that.

129
00:07:34.320 --> 00:07:37.243
If I can grab this I have
a bunch of different options.

130
00:07:37.243 --> 00:07:40.840
Cuz obviously that's the symbol for
a component, right?

131
00:07:40.840 --> 00:07:45.902
I can go hit Create component,
as you can guess from the hotkey.

132
00:07:45.902 --> 00:07:51.490
I can also hit Option + Cmd + K, and
that will turn something into a component.

133
00:07:51.490 --> 00:07:52.122
So let's start.

134
00:07:52.122 --> 00:07:54.600
Let's turn this into a component.

135
00:07:54.600 --> 00:07:56.059
In this case I'm gonna
hit Option + Cmd + K.

136
00:07:56.059 --> 00:08:01.084
All right, it changes subtly you notice
that this frame is kind of blue and

137
00:08:01.084 --> 00:08:05.719
has a blue word this one's now
purple that means it's a component.

138
00:08:05.719 --> 00:08:08.870
That's not the important
part the important part is,

139
00:08:08.870 --> 00:08:11.002
it now lives in your assets, right?

140
00:08:11.002 --> 00:08:14.975
And your assets is a collection of all
your components, either your components,

141
00:08:14.975 --> 00:08:18.558
or if you publish a library, which we
will talk about the very end of this.

142
00:08:18.558 --> 00:08:19.633
It's a collection of all your components.

143
00:08:19.633 --> 00:08:24.317
So now, if you wanted to drag
in another one of these,

144
00:08:24.317 --> 00:08:26.931
you can drag in a whole bunch.

145
00:08:26.931 --> 00:08:33.758
And I want to say what border races
now 32 they all change, right?

146
00:08:33.758 --> 00:08:37.829
So you can create a very kind
of powerful system around this.

147
00:08:37.829 --> 00:08:45.390
But I could theoretically change
this one to lots of colors.

148
00:08:45.390 --> 00:08:48.112
So that's what we call an override, right?

149
00:08:48.112 --> 00:08:52.874
This one has this instance
component had something

150
00:08:52.874 --> 00:08:56.312
changed versus the main component.

151
00:08:56.312 --> 00:08:58.401
This one did not.

152
00:08:58.401 --> 00:09:03.303
So I could theoretically say,
rainbow you'll notice the one

153
00:09:03.303 --> 00:09:07.922
that had never had the text changed,
gets the update, but

154
00:09:07.922 --> 00:09:12.836
the one where I overrode the property
does not get the update.

155
00:09:12.836 --> 00:09:15.990
And so here, let's go ahead and we'll say,

156
00:09:15.990 --> 00:09:19.318
hey, the text color here
should be this color.

157
00:09:19.318 --> 00:09:21.904
They all changed.

158
00:09:21.904 --> 00:09:24.335
Let's go change this one
to its own new color.

159
00:09:27.364 --> 00:09:29.648
All right, so
this has now got an override on the color.

160
00:09:29.648 --> 00:09:33.827
So if I go ahead here and
I changed this again let's change it to

161
00:09:37.826 --> 00:09:39.972
Switch back to black.

162
00:09:39.972 --> 00:09:43.693
Right, this is override with the text
content this one had an override of

163
00:09:43.693 --> 00:09:45.950
the text color they
inherited the change but

164
00:09:45.950 --> 00:09:48.095
not in the places where they overrode it.

165
00:09:48.095 --> 00:09:52.366
This is the same way like inheritance and
JavaScript might work as well.

166
00:09:52.366 --> 00:09:55.898
The metaphor applies even if it is
a totally different paradigm, right?

167
00:09:55.898 --> 00:09:59.053
The whole conceptual framework works.

168
00:09:59.053 --> 00:10:00.856
So this gives you a lot of power.

169
00:10:00.856 --> 00:10:05.848
It means you can drag in a button,
change the text of any given button.

170
00:10:05.848 --> 00:10:08.476
But if you change like the label
in the main component,

171
00:10:08.476 --> 00:10:10.373
it's not like every button in your UI.

172
00:10:10.373 --> 00:10:11.903
Is automatically going
to receive that update.

173
00:10:11.903 --> 00:10:15.480
It will simply only the ones that
had never had that overwritten.

174
00:10:15.480 --> 00:10:18.277
If you make one particular
button a different color,

175
00:10:18.277 --> 00:10:20.150
it will remain that color, right?

176
00:10:20.150 --> 00:10:23.354
And you can combine this with styles and
stuff along those lines.

177
00:10:23.354 --> 00:10:27.601
I will probably say this a few more times
today, but I'm gonna say it now and

178
00:10:27.601 --> 00:10:30.172
I'll repeat it because it bears repeating.

179
00:10:30.172 --> 00:10:35.287
My general rule is stuff that I
can put in styles like, the color,

180
00:10:35.287 --> 00:10:39.951
fonts, I tend to leave that to
the styles and a lot of cases.

181
00:10:39.951 --> 00:10:44.625
And, I can override a style too,
I can detach the style, and

182
00:10:44.625 --> 00:10:47.756
stuff like the question we had earlier.

183
00:10:47.756 --> 00:10:51.651
Can you store border radii in a style?

184
00:10:51.651 --> 00:10:56.330
You can't, but that kind of stuff, the
structural pieces I leave the components.

185
00:10:56.330 --> 00:11:00.880
And the styles I leave to the styles
right I might have a danger button or

186
00:11:00.880 --> 00:11:06.217
secondary button that is fundamentally
like different from the primary button.

187
00:11:06.217 --> 00:11:09.575
But like the color red that it
is I will store in a style so

188
00:11:09.575 --> 00:11:11.779
I can change all of them all at once.

189
00:11:11.779 --> 00:11:16.971
And that way I can use the same color like
let's say hypothetically I might have

190
00:11:16.971 --> 00:11:22.256
links I might have a button I might have
a modal title they all use the same style.

191
00:11:22.256 --> 00:11:25.582
I can change what a danger color
means in my application or

192
00:11:25.582 --> 00:11:29.965
the brand color separate from going
into every component and doing my net.

193
00:11:29.965 --> 00:11:33.105
Okay, so let's look at create a component.

194
00:11:33.105 --> 00:11:36.666
We'll do this one together and
then you'll work on input fields.

195
00:11:36.666 --> 00:11:41.337
I can make a button, we saw how easy it
is before I can take this button as well.

196
00:11:41.337 --> 00:11:45.635
And all that we're gonna
do is we'll go here and

197
00:11:45.635 --> 00:11:48.973
we're gonna say create component.

198
00:11:48.973 --> 00:11:50.949
Right I hit the little button
now it is a component.

199
00:11:50.949 --> 00:11:52.639
You can see it here as well.

200
00:11:52.639 --> 00:11:55.328
One of the interesting things
that you should note and

201
00:11:55.328 --> 00:11:57.666
we'll explore this a little
bit more in a bit.

202
00:11:57.666 --> 00:12:01.526
How you organize your components is
incredibly important by default,

203
00:12:01.526 --> 00:12:04.689
you'll notice that like,
it got this it has components.

204
00:12:04.689 --> 00:12:09.586
Because the name of the page we're
on is called components not because

205
00:12:09.586 --> 00:12:13.993
these are all components,
everything is a component in here.

206
00:12:13.993 --> 00:12:17.509
However, this one is in a frame
called Creating a component.

207
00:12:17.509 --> 00:12:21.412
So you look that Figma automatically
tries to organize it for you, right?

208
00:12:21.412 --> 00:12:24.927
So as you're building out a design
system on your own page, right,

209
00:12:24.927 --> 00:12:27.160
we'll take a look at, how you can do that.

210
00:12:27.160 --> 00:12:28.911
You might have a frame for
all your buttons.

211
00:12:28.911 --> 00:12:32.473
Now they're all organized under
one drop down, called, yeah,

212
00:12:32.473 --> 00:12:36.314
this case create component but
I wanna hide all the course materials.

213
00:12:36.314 --> 00:12:38.042
I can see just a given piece.

214
00:12:38.042 --> 00:12:41.104
We'll see where this is
somewhat interesting,

215
00:12:41.104 --> 00:12:44.923
as we get more advanced with
our components, as we go along.

216
00:12:44.923 --> 00:12:48.646
But the way that you name them
definitely has an effect.

217
00:12:48.646 --> 00:12:50.782
Also, if you're like,
I don't I'll put them in frames.

218
00:12:50.782 --> 00:12:55.225
Okay ,that's tricky we did with
styles before where we had a slash,

219
00:12:55.225 --> 00:12:59.820
in the name and that put it in a
subdirectory will also work whichever one

220
00:12:59.820 --> 00:13:01.831
makes you happier, go for it.

221
00:13:01.831 --> 00:13:02.853
I'm not the boss of you.

