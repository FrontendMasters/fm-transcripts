WEBVTT

1
00:00:00.000 --> 00:00:03.109
We talked about variants
versus component sets,

2
00:00:03.109 --> 00:00:06.226
I already told you that it
ends up getting fiddly.

3
00:00:06.226 --> 00:00:12.774
Reports from the field say that the UI
drags to a crawl, as well, I believe that.

4
00:00:12.774 --> 00:00:18.613
And so, like I said, we can also use
a slash or put them in a given frame.

5
00:00:18.613 --> 00:00:20.699
And they'll all get organized, as well.

6
00:00:20.699 --> 00:00:25.374
This is a screenshot from when
I did a bad thing, right?

7
00:00:25.374 --> 00:00:30.087
This is what happens if you take, and
to be clear, I could have gone farther,

8
00:00:30.087 --> 00:00:30.602
right?

9
00:00:30.602 --> 00:00:31.490
I could add even more.

10
00:00:31.490 --> 00:00:35.518
This is around the time where I'm like,
I can't do this anymore.

11
00:00:35.518 --> 00:00:42.119
And that's when I switched to just kind of
the strategy we're looking at now, right?

12
00:00:42.119 --> 00:00:44.144
Cuz, yeah, I would drag in a button.

13
00:00:44.144 --> 00:00:50.079
It would be that primary default
non-hovered state, it was no way to live.

14
00:00:50.079 --> 00:00:52.579
Versus, as we saw, we can do this instead.

15
00:00:52.579 --> 00:00:56.710
Where we can just swap in between
instances of a component and

16
00:00:56.710 --> 00:01:00.928
we'll see how this pattern
becomes powerful in a little bit.

17
00:01:00.928 --> 00:01:06.888
Okay, so we saw how to make
a component set in this case.

18
00:01:08.107 --> 00:01:13.229
One of the things that we can do is
play games with inheritance, right?

19
00:01:13.229 --> 00:01:18.429
If you think about it,
that metaphor that I made to prototypal

20
00:01:18.429 --> 00:01:24.734
inheritance in JavaScript, really,
really, really holds up, right?

21
00:01:24.734 --> 00:01:30.054
So, for instance, let's take, who thought
they were gonna JavaScript pop quiz?

22
00:01:30.054 --> 00:01:31.898
JavaScript pop quiz time.

23
00:01:34.991 --> 00:01:37.443
Arrays, they have methods, right?

24
00:01:37.443 --> 00:01:41.240
Map for each, right?

25
00:01:41.240 --> 00:01:42.897
Where do those methods live?

26
00:01:45.140 --> 00:01:45.886
&gt;&gt; On the prototype.

27
00:01:45.886 --> 00:01:50.737
&gt;&gt; Yep, on array.prototype.

28
00:01:50.737 --> 00:01:55.931
Should you ever do anything with
a write up prototype other than

29
00:01:55.931 --> 00:02:00.740
just let it be the object in
which all arrays inherit from?

30
00:02:00.740 --> 00:02:02.887
Ideally, you do not touch it, right?

31
00:02:02.887 --> 00:02:07.568
It exists so that all of the arrays
that you use in your JavaScript can

32
00:02:07.568 --> 00:02:11.610
inherit from it,
effectively acts like a class, right?

33
00:02:11.610 --> 00:02:15.094
Like in Ruby, or Python, or what have you.

34
00:02:15.094 --> 00:02:20.326
We could take the same approach and
basically have a platonic

35
00:02:20.326 --> 00:02:25.258
ideal of a button in which we
should never use it, right?

36
00:02:25.258 --> 00:02:30.056
And then all of our buttons inherit
from that platonic ideal, right?

37
00:02:30.056 --> 00:02:34.711
And then if we ever need to change
the radius, we just change that unused

38
00:02:34.711 --> 00:02:38.763
itself button, and
they all will change as a result, right?

39
00:02:38.763 --> 00:02:43.178
So remember before when I change
just the primary button and

40
00:02:43.178 --> 00:02:46.188
nothing happened to all the other ones?

41
00:02:46.188 --> 00:02:51.101
Real quick, let's see what the strategy
would look like in this case.

42
00:02:51.101 --> 00:02:51.605
Is this a button?

43
00:02:51.605 --> 00:02:57.256
Cuz at some points I got clever and tried
to just make SVG so you can cheat, cool.

44
00:02:57.256 --> 00:03:01.731
So I've got a button here, as well.

45
00:03:01.731 --> 00:03:04.898
And I'll go and detach that, as well.

46
00:03:04.898 --> 00:03:09.882
And so, the trick is,
there's a few tricks here.

47
00:03:09.882 --> 00:03:12.880
Inside your file you can see these base

48
00:03:12.880 --> 00:03:17.384
components that you're never
supposed to use, right?

49
00:03:17.384 --> 00:03:22.210
If you prefix it with an underscore or
a period, like the Unix file system, or

50
00:03:22.210 --> 00:03:26.764
the way that we try to tell our
coworkers this method is private, right?

51
00:03:26.764 --> 00:03:30.441
You put an underscore before and
hope nobody actually uses it, kinda thing.

52
00:03:30.441 --> 00:03:35.337
If you prefix a component with that and
you publish this library to your team for

53
00:03:35.337 --> 00:03:38.601
everyone to use,
anything prefixed with a period or

54
00:03:38.601 --> 00:03:41.441
an underscore will not
go out into the world.

55
00:03:41.441 --> 00:03:44.729
So you can hide it from outside of
the file that you're working in, but

56
00:03:44.729 --> 00:03:47.260
inside of the file you're
still out of luck, right?

57
00:03:47.260 --> 00:03:51.739
My strategy for
this is to make the base component so

58
00:03:51.739 --> 00:03:55.810
unappealing that no one
would think to use it.

59
00:03:55.810 --> 00:03:58.106
And then I will usually put all of them,

60
00:03:58.106 --> 00:04:01.529
and I didn't really make them
unappealing in my version.

61
00:04:01.529 --> 00:04:03.864
But if I go down to
the course materials here,

62
00:04:05.935 --> 00:04:08.192
All the base components are at
least in their own frame.

63
00:04:08.192 --> 00:04:13.785
So that they are, at least,
separated out in that menu.

64
00:04:13.785 --> 00:04:17.284
Cuz if you put in a frame with a name,
they all go into that sub-directory.

65
00:04:17.284 --> 00:04:20.909
So they're at least separated out,
and a lot of times, honestly,

66
00:04:20.909 --> 00:04:23.770
I will use a picture of
Bill Murray as the background or

67
00:04:23.770 --> 00:04:27.605
something along those lines to signify,
don't drop this into the UI.

68
00:04:27.605 --> 00:04:31.815
Not that there's anything wrong with Bill
Murray, but it's not a blue button, right?

69
00:04:31.815 --> 00:04:35.514
And so to signify, but then when you
publish it, it won't go out in that case.

70
00:04:35.514 --> 00:04:42.725
So in this case, we'll just give it
some color that we don't plan on using.

71
00:04:42.725 --> 00:04:48.206
I don't know, I can even make it white or
something along those lines.

72
00:04:48.206 --> 00:04:52.040
But there's no purple buttons in my UI.

73
00:04:52.040 --> 00:04:57.084
Okay, cool, so this will be kind
of our base button, in this case.

74
00:04:57.084 --> 00:04:59.532
The platonic ideal of a button.

75
00:04:59.532 --> 00:05:03.276
We'll call it

76
00:05:03.276 --> 00:05:10.142
Base/.Button, cool.

77
00:05:10.142 --> 00:05:14.311
I think you can just prefix the outer
part and it'll still not publish.

78
00:05:14.311 --> 00:05:18.353
But I'm really trying to make the point
that you should not use this button.

79
00:05:18.353 --> 00:05:20.747
So now this can be made a component.

80
00:05:22.718 --> 00:05:25.042
And again,
we never aspire to use this button.

81
00:05:25.042 --> 00:05:29.281
It exists in those same way
object.prototype or array.prototype

82
00:05:29.281 --> 00:05:33.904
exists, to be the thing in which all
other buttons inherit from, right?

83
00:05:33.904 --> 00:05:38.032
So now what we'll do is we'll create
an instance of this component.

84
00:05:38.032 --> 00:05:44.013
As I said, we weren't ever supposed to use
it, well, except for once, there it is.

85
00:05:45.665 --> 00:05:48.163
And we'll make this look
like a real button,

86
00:05:48.163 --> 00:05:50.479
that we want it to look
like at this point.

87
00:05:50.479 --> 00:05:56.338
So we'll swap out, in this case,
we'll make it a brand button,

88
00:06:00.181 --> 00:06:03.214
Like we did before.

89
00:06:03.214 --> 00:06:06.291
And we can make the three variations,
as well, if we want at this point.

90
00:06:06.291 --> 00:06:09.684
I think that serves as an example.

91
00:06:09.684 --> 00:06:17.529
And what I'll do in
this case is we'll say,

92
00:06:17.529 --> 00:06:22.839
this one is State=Default.

93
00:06:22.839 --> 00:06:26.485
Actually, let's do that Here.

94
00:06:26.485 --> 00:06:30.848
Now, we'll start here and
we'll make it better in a second.

95
00:06:37.920 --> 00:06:43.016
State=Default, State=Hover.

96
00:06:44.814 --> 00:06:47.362
State=Active.

97
00:06:49.520 --> 00:06:52.106
Make this one just
a little bit darker again.

98
00:06:54.299 --> 00:06:55.995
Let me give this one
the drop shadow again.

99
00:06:58.663 --> 00:07:04.333
All right, now we can do
the same thing we did before,

100
00:07:04.333 --> 00:07:09.891
we'll create the set and
rename it Primary Button.

101
00:07:09.891 --> 00:07:12.330
Now, if you remember the last example,

102
00:07:12.330 --> 00:07:16.648
we tried to change the radius cuz that
seemed like a fun thing to change.

103
00:07:16.648 --> 00:07:20.553
And only the one that I changed, changed.

104
00:07:20.553 --> 00:07:22.591
All the rest of them did not update.

105
00:07:22.591 --> 00:07:25.836
And we can even,
just to make a point here,

106
00:07:25.836 --> 00:07:28.999
we could theoretically take this group.

107
00:07:28.999 --> 00:07:35.893
Let's also say, Danger Button and

108
00:07:40.593 --> 00:07:42.808
Well let's actually describe
the whole set here.

109
00:07:42.808 --> 00:07:51.122
We'll change all the light blue
to this red and that red, right?

110
00:07:51.122 --> 00:07:56.276
And now I can go ahead,
we'll change the border radius to zero,

111
00:07:56.276 --> 00:07:58.674
and they all update, right?

112
00:07:58.674 --> 00:08:02.651
We never used this component except,
again, as array prototype,

113
00:08:02.651 --> 00:08:03.838
object prototype,

114
00:08:03.838 --> 00:08:08.321
what have you, as the button in which
all of the other buttons inherit from.

115
00:08:08.321 --> 00:08:11.916
But now we have the advantage,

116
00:08:11.916 --> 00:08:16.901
let's put this in a frame called Buttons.

117
00:08:16.901 --> 00:08:22.384
And now in assets,
we've got a lot of the same buttons here.

118
00:08:22.384 --> 00:08:25.440
Here's the two buttons that we made.

119
00:08:26.690 --> 00:08:30.541
I can bring an instance in, again,
I can put this back if I want.

120
00:08:30.541 --> 00:08:32.316
In fact, let's make it 32.

121
00:08:32.316 --> 00:08:33.619
Let's go really round it.

122
00:08:33.619 --> 00:08:36.923
All the change, they all update.

123
00:08:36.923 --> 00:08:38.854
This one is its own instance.

124
00:08:38.854 --> 00:08:42.858
And I can toggle to a hover state or

125
00:08:42.858 --> 00:08:47.012
an active state totally, right?

126
00:08:47.012 --> 00:08:50.232
And I can also swap it out, as well.

127
00:08:50.232 --> 00:08:53.645
And it will even stay in whatever
state it was in at that point, too.

128
00:08:53.645 --> 00:08:56.853
So you get to both have a lot of
the power of dragging stuff in.

129
00:08:56.853 --> 00:08:59.646
They're all inherit from this base
component that you never seek to

130
00:08:59.646 --> 00:09:00.190
use itself.

131
00:09:00.190 --> 00:09:03.310
But now you can make large-scale changes,
as well.

