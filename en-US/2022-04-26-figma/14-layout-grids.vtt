WEBVTT

1
00:00:00.210 --> 00:00:03.926
All right, let's talk about something
that makes constraints even

2
00:00:03.926 --> 00:00:07.848
a little bit more powerful, which is
this idea of a layout grid, right?

3
00:00:07.848 --> 00:00:12.031
There are, I guess,
three kinds of grids technically,

4
00:00:12.031 --> 00:00:15.830
but like two of them are roughly the same.

5
00:00:15.830 --> 00:00:19.097
So we'll say that there's two kinds of
grids, one that we're gonna use and

6
00:00:19.097 --> 00:00:20.628
one that we're not going to use, so

7
00:00:20.628 --> 00:00:23.970
let's talk about the one we're not gonna
use first, just get out of the way.

8
00:00:23.970 --> 00:00:28.114
So I can grab any given frame,
and I can go ahead and

9
00:00:28.114 --> 00:00:32.360
go to layout grid, and
go ahead and add one.

10
00:00:32.360 --> 00:00:36.965
And I could get a literal grid,
where I get pixel perfect designs,

11
00:00:36.965 --> 00:00:42.050
I have a size of 10, I can resize 32,
I can do whatever I want.

12
00:00:42.050 --> 00:00:46.535
This is great for making icons,
this is great for arranging stuff for

13
00:00:46.535 --> 00:00:51.580
like a graphic, this is not how the web
works, generally speaking, right?

14
00:00:51.580 --> 00:00:54.547
Like, when we think about
a grid system in our CSS,

15
00:00:54.547 --> 00:00:59.460
we don't think about literal, snap to this
part of the grid and stay there forever.

16
00:00:59.460 --> 00:01:04.813
We think about like, I got some columns,
I got some rows, roughly they should be,

17
00:01:04.813 --> 00:01:09.340
like 15%, or maybe a certain number
of pixels in between each one.

18
00:01:09.340 --> 00:01:12.391
They should be responsive,
when we think about a grid system,

19
00:01:12.391 --> 00:01:15.040
we think about responsive design, right?

20
00:01:15.040 --> 00:01:17.250
So we wanna do something similar, so

21
00:01:17.250 --> 00:01:21.886
just putting a grid it's not gonna give
you totally what you want, luckily,

22
00:01:21.886 --> 00:01:27.010
this is a drop-down, hey, look at that,
there's columns and rows, right?

23
00:01:27.010 --> 00:01:29.968
And in here, we can go ahead,
and we can switch this, and

24
00:01:29.968 --> 00:01:34.162
we get something that looks more like what
we think about as web developers when we

25
00:01:34.162 --> 00:01:36.030
think about a grid system, right?

26
00:01:36.030 --> 00:01:41.639
So here I can say columns, my hypothesis
is like, on native mobile apps,

27
00:01:41.639 --> 00:01:47.270
like the toolbar is usually like five
icons and stuff along those lines.

28
00:01:47.270 --> 00:01:50.558
That's why it defaults to five,
as a web developer,

29
00:01:50.558 --> 00:01:53.709
the table I work on right
now is a five column table.

30
00:01:53.709 --> 00:01:56.190
So like everything I'm saying is wrong,
but

31
00:01:56.190 --> 00:01:59.585
I also despise it cuz I have
a 12 column grid and that's fun,

32
00:01:59.585 --> 00:02:03.530
generally speaking five is never
the number that I want, right?

33
00:02:03.530 --> 00:02:07.104
A 12 column grid, an eight column grid,
any of those are fine, so

34
00:02:07.104 --> 00:02:09.380
let's give ourselves a 12 column grid.

35
00:02:10.540 --> 00:02:15.029
This color is not a permanent color, this
color is just so you can see the grid,

36
00:02:15.029 --> 00:02:19.178
if you had multiple grids you can give
them different colors if you want,

37
00:02:19.178 --> 00:02:20.280
I don't care too.

38
00:02:20.280 --> 00:02:25.017
You have a bunch of different options,
I'll play with this in a second, and

39
00:02:25.017 --> 00:02:28.210
then, so I don't want 15 columns,
I want 12.

40
00:02:28.210 --> 00:02:32.474
And then the margin is, to the left and
right of the entire grid system,

41
00:02:32.474 --> 00:02:34.500
how much should you have?

42
00:02:34.500 --> 00:02:41.180
So in this case, we'll say give me like, I
don't know, 32 pixels on each side, right?

43
00:02:41.180 --> 00:02:45.793
So now we've got some space along
the edges of our web app, and

44
00:02:45.793 --> 00:02:52.297
then the gutter is the space between each
column, so this case I'll say 16, right?

45
00:02:52.297 --> 00:02:55.959
And you can see that that is
roughly a grid that we might see,

46
00:02:55.959 --> 00:02:58.669
from either one that we wrote ourselves,
or

47
00:02:58.669 --> 00:03:03.742
if you pulled one from like Bootstrap or
Tailwind or something along those lines.

48
00:03:03.742 --> 00:03:07.851
The grid system that kind of comes
out of the box with one of those,

49
00:03:07.851 --> 00:03:10.842
let's look at some of
the other options stretch

50
00:03:10.842 --> 00:03:15.284
does the responsive design thing
that you think it should do, right?

51
00:03:15.284 --> 00:03:18.129
Which is cool,
you said you wanted 12 columns,

52
00:03:18.129 --> 00:03:21.470
I'll make it 12 columns that
will all be proportional.

53
00:03:22.650 --> 00:03:24.407
If we take it off of stretch,

54
00:03:24.407 --> 00:03:28.600
we can say center which point we
can define an actual width, right?

55
00:03:28.600 --> 00:03:32.279
And so here we can actually say,
I want just the set of columns right in

56
00:03:32.279 --> 00:03:35.650
the middle, I don't care if they expand or
contract the page.

57
00:03:36.990 --> 00:03:41.392
You can also nest frames so like,
theoretically your 12 column grid might

58
00:03:41.392 --> 00:03:45.830
get real growth on a one of those like
super widescreen monitors, right?

59
00:03:45.830 --> 00:03:49.389
But you could also have like a frame
that's constrained to the middle that has

60
00:03:49.389 --> 00:03:52.363
a 12 column grid and
kinda get the best of both worlds, right?

61
00:03:52.363 --> 00:03:56.284
The same way that you would do it as
you implement it in the browser, so

62
00:03:56.284 --> 00:04:00.400
most of the time,
we're gonna use stretch as web developers.

63
00:04:00.400 --> 00:04:03.870
And yeah, that's, that's that grid there,

64
00:04:03.870 --> 00:04:07.820
obviously, rows will do
the opposite as well.

65
00:04:07.820 --> 00:04:12.111
The kind of cool thing though,
is depending on what you're building,

66
00:04:12.111 --> 00:04:14.900
like sometimes you think
about like CSS Grid,

67
00:04:14.900 --> 00:04:18.778
where you've got rows and columns,
so, guess what you can do?

68
00:04:18.778 --> 00:04:24.173
You can add more than one grid, you can
add as many groups as you can stand,

69
00:04:24.173 --> 00:04:27.567
really, so you go ahead and
hit rows, and, so

70
00:04:27.567 --> 00:04:32.360
now I can have like a responsive
grid that I can put things on.

71
00:04:32.360 --> 00:04:37.086
So, I can also make rows and this kinda
gives us the responsive grid that we

72
00:04:37.086 --> 00:04:41.330
might know and love,
that we might implement ourselves.

73
00:04:41.330 --> 00:04:44.510
So yeah, you can layer out as many groups
as you want, again, I can change the color

74
00:04:44.510 --> 00:04:47.040
of this is not a thing that's
going to show up in my design.

75
00:04:47.040 --> 00:04:50.624
It's just like whatever helps you
visualize whatever's going on is a thing

76
00:04:50.624 --> 00:04:52.240
that you can do.

77
00:04:52.240 --> 00:04:56.841
Okay, but you're like neat, I have a grid,
but I would like to see my colors now,

78
00:04:56.841 --> 00:04:57.388
please.

79
00:04:57.388 --> 00:05:02.319
You have a bunch of options, you could go
and like open and close the eyes manually,

80
00:05:02.319 --> 00:05:05.842
that's useful if you just want
to turn off one for a second,

81
00:05:05.842 --> 00:05:10.010
they still exist like there's
object permanency to your grid.

82
00:05:10.010 --> 00:05:13.455
You can turn off viewing the grid,
the grid still exists,

83
00:05:13.455 --> 00:05:17.950
even if you're not looking at it, but
you might want to see some stuff.

84
00:05:17.950 --> 00:05:22.106
The other option is, you can literally
just like, turn on and off all the grids,

85
00:05:22.106 --> 00:05:22.728
all right?

86
00:05:22.728 --> 00:05:28.321
So I can hit Ctrl + G on a Mac,
and like see or not see the grids,

87
00:05:28.321 --> 00:05:33.270
the bad news is if you are on Windows or
probably Linux,

88
00:05:33.270 --> 00:05:38.236
it is not Ctrl + G for grid,
it is Ctrl + shift+ four.

89
00:05:38.236 --> 00:05:39.451
I'm sorry.

