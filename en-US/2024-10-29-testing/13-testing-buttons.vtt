WEBVTT

1
00:00:00.110 --> 00:00:03.879
&gt;&gt; Speaker 1: So we have a collection of
little examples in this directory called

2
00:00:03.879 --> 00:00:08.457
element factory, which originally was all
going to be buttons, so it was called

3
00:00:08.457 --> 00:00:13.950
button factory, if you see a reference to
that, but then I made other stuff too.

4
00:00:13.950 --> 00:00:16.830
So we'll open that up in the terminal, and

5
00:00:16.830 --> 00:00:20.760
we're gonna start just by
looking at the button example.

6
00:00:20.760 --> 00:00:26.342
And this one is just raw JavaScript,
vanilla JavaScript,

7
00:00:26.342 --> 00:00:30.583
DOM manipulation,
where we will go ahead and

8
00:00:30.583 --> 00:00:35.603
we will create a button, and
we will give it the text,

9
00:00:35.603 --> 00:00:40.308
then click me,
we'll add an event listener.

10
00:00:40.308 --> 00:00:45.302
If someone clicks it, we will
change the text content to clicked,

11
00:00:45.302 --> 00:00:50.118
and we'll hand that DOM node
off to our tests, right?

12
00:00:50.118 --> 00:00:53.596
Not the most sophisticated
component in the world, but

13
00:00:53.596 --> 00:00:55.598
we'll demonstrate our point.

14
00:00:55.598 --> 00:00:59.720
So here we've got some work for
me to do here,

15
00:00:59.720 --> 00:01:04.507
which is it should create
a button element, right?

16
00:01:04.507 --> 00:01:09.325
So real quick in this vitest.config,
you can see I've got happy-dom set up.

17
00:01:10.585 --> 00:01:13.593
Great, we will play around with some
Svelte and React components later, so

18
00:01:13.593 --> 00:01:15.045
those are set up in there.

19
00:01:15.045 --> 00:01:17.953
But this is the only thing,
this is the only prerequisite for

20
00:01:17.953 --> 00:01:19.614
anything we're about to do here.

21
00:01:19.614 --> 00:01:24.762
Cool, so now I'm gonna do, let's try

22
00:01:24.762 --> 00:01:30.698
something very, very simple for starters.

23
00:01:37.769 --> 00:01:40.361
&gt;&gt; Speaker 1: Create button.

24
00:01:45.295 --> 00:01:48.200
I don't actually know if this
one's gonna work, to be,

25
00:01:54.139 --> 00:01:57.183
&gt;&gt; Speaker 1: Let's go ahead and run this.

26
00:01:58.413 --> 00:02:03.380
Fun fact, if you run npm-test,
It will run all the ones, right?

27
00:02:04.700 --> 00:02:10.008
If you run npm test button,
it only ran two of them,

28
00:02:10.008 --> 00:02:14.460
which is alert button and button, right?

29
00:02:14.460 --> 00:02:16.070
So you can scope it down a little bit.

30
00:02:16.070 --> 00:02:18.730
Let's get rid of that to do here, right?

31
00:02:18.730 --> 00:02:26.679
And so right now let's to
do these just real quick.

32
00:02:26.679 --> 00:02:32.372
We are creating a button as an instance
of HTML element, everything is great.

33
00:02:32.372 --> 00:02:35.502
If, for example, I get rid of this line,

34
00:02:35.502 --> 00:02:39.623
I think I might have to turn this off and
turn it back on.

35
00:02:40.824 --> 00:02:44.934
It fails because it doesn't
know what document is, right?

36
00:02:44.934 --> 00:02:46.614
That is all that that line is doing.

37
00:02:46.614 --> 00:02:51.624
It's just simulating all the DOM APIs,
document, window, navigator,

38
00:02:51.624 --> 00:02:57.364
local storage, session storage, stuff
with, cookies, stuff along those lines.

39
00:02:57.364 --> 00:03:01.235
It's basically giving you a spec
compliant version of the DOM.

40
00:03:01.235 --> 00:03:04.810
If your tests are failing for
weird reasons like this,

41
00:03:04.810 --> 00:03:06.915
that's the one liner you need.

42
00:03:06.915 --> 00:03:11.342
It's gonna be different for
other frameworks, but that's your issue.

43
00:03:11.342 --> 00:03:14.164
And then you probably have to quit and

44
00:03:14.164 --> 00:03:17.817
restart the, all right,
so it passes, yeah.

45
00:03:17.817 --> 00:03:21.435
&gt;&gt; Speaker 2: Does happy-dom or jsdom
have to be NPM installed separately, or

46
00:03:21.435 --> 00:03:23.094
does the test take care of it?

47
00:03:23.094 --> 00:03:24.605
&gt;&gt; Speaker 1: That's a great question.

48
00:03:24.605 --> 00:03:31.523
Yes-ish, so the question was, does jsdom
have to be installed as a dependency?

49
00:03:31.523 --> 00:03:34.633
Yes-ish, which is yes.

50
00:03:34.633 --> 00:03:38.236
If you don't, and you have it in there,
vitest will go like, hey,

51
00:03:38.236 --> 00:03:40.452
you don't have happy-dom installed.

52
00:03:40.452 --> 00:03:45.638
Do you want to install it now and
you hit the Y key or the enter key and

53
00:03:45.638 --> 00:03:49.615
it installs it for you,
but the end result is yes.

54
00:03:49.615 --> 00:03:52.712
That way you don't have both of them
in there too if you don't need them.

55
00:03:52.712 --> 00:03:58.671
&gt;&gt; Speaker 2: And one other setup
question, if we were using Vue in vitest,

56
00:03:58.671 --> 00:04:03.611
would we need an alternate
to jsdom in setup files?

57
00:04:03.611 --> 00:04:04.232
&gt;&gt; Speaker 1: No.

58
00:04:06.045 --> 00:04:09.913
&gt;&gt; Speaker 1: That's easy.

59
00:04:09.913 --> 00:04:11.726
That setup files,
we're not actually even getting to yet.

60
00:04:11.726 --> 00:04:18.866
In fact, for our purposes right now,
I could theoretically take that line out.

61
00:04:18.866 --> 00:04:20.411
We'll talk about that one later.

62
00:04:20.411 --> 00:04:25.024
But in terms of right now
this will basically work

63
00:04:25.024 --> 00:04:28.591
with anything that works in the DOM.

64
00:04:28.591 --> 00:04:36.121
So even this line is framework agnostic,
but we're just not using it yet.

65
00:04:36.121 --> 00:04:38.990
So at this point,
I could grab a React component.

66
00:04:38.990 --> 00:04:40.864
I could grab a Svelte component.

67
00:04:40.864 --> 00:04:42.244
I could grab a Vue component.

68
00:04:42.244 --> 00:04:47.050
The only reason we don't have a Vue
component in here is cuz I've never

69
00:04:47.050 --> 00:04:48.444
used Vue in my life.

70
00:04:48.444 --> 00:04:50.134
I work with Svelte every day.

71
00:04:50.134 --> 00:04:51.966
I have done React forever.

72
00:04:51.966 --> 00:04:55.454
There's no Vue in here because
I don't know how to do Vue.

73
00:04:55.454 --> 00:04:57.434
But everything we're doing will,

74
00:04:57.434 --> 00:05:00.602
the fact that we touch stuff
with different frameworks,

75
00:05:00.602 --> 00:05:05.504
all of this will apply to Vue in Angular
as much as it applies to React and Svelte.

76
00:05:05.504 --> 00:05:08.697
In this case, on the super simple example,
we create a button,

77
00:05:08.697 --> 00:05:11.133
as you can see in my first test,
it is an element.

78
00:05:15.862 --> 00:05:19.005
&gt;&gt; Speaker 1: In fact,
it's a button element, right?

79
00:05:30.394 --> 00:05:34.020
&gt;&gt; Speaker 1: I think,
if I'm not mistaken, that's all caps.

80
00:05:34.020 --> 00:05:35.811
In fact, the tag name on it is button.

81
00:05:35.811 --> 00:05:38.530
Do we need to be convinced
any further this is a button?

82
00:05:39.631 --> 00:05:41.421
Have I convinced you
that this is a button?

83
00:05:41.421 --> 00:05:47.694
Great, okay, all right,
so now we want to see,

84
00:05:47.694 --> 00:05:52.903
it should have the text click me, okay.

85
00:05:58.471 --> 00:06:00.674
&gt;&gt; Speaker 1: That's interesting so
we can say expect,

86
00:06:10.845 --> 00:06:11.412
&gt;&gt; Speaker 1: To be, click me.

87
00:06:11.412 --> 00:06:14.526
All right, we're killing it.

88
00:06:17.663 --> 00:06:20.971
&gt;&gt; Speaker 1: All right,
now we're up to the bonus round here.

89
00:06:22.131 --> 00:06:27.701
Should change the text to clicked
exclamation point when clicked.

90
00:06:27.701 --> 00:06:31.824
We are gonna do this the stupidest,
dumbest way you shouldn't do it, and

91
00:06:31.824 --> 00:06:33.431
we will build up from there.

92
00:06:33.431 --> 00:06:37.478
So if you tune out now everyone will
ridicule you when you do what I'm

93
00:06:37.478 --> 00:06:38.191
doing now.

94
00:06:38.191 --> 00:06:44.659
So we can say button = createButton,

95
00:06:44.659 --> 00:06:49.105
and then we can go ahead and

96
00:06:49.105 --> 00:06:52.783
say button.click.

97
00:06:52.783 --> 00:06:59.392
So we got the arrange, we got the act,
and we expect button.,

98
00:07:07.831 --> 00:07:11.416
&gt;&gt; Speaker 1: Exclamation point.

99
00:07:11.416 --> 00:07:15.141
Cool, so
there's a lot that we can do better here.

100
00:07:15.141 --> 00:07:20.714
But I wanna take a moment to celebrate
the small wins that we have.

101
00:07:20.714 --> 00:07:25.699
We rendered a DOM element,
we verified some stuff about it,

102
00:07:25.699 --> 00:07:29.121
we quote unquote interacted with it, and

103
00:07:29.121 --> 00:07:33.938
then we verified that it
changed as appropriate, right?

104
00:07:33.938 --> 00:07:37.196
Are we convinced we could retest
a view application just yet?

105
00:07:37.196 --> 00:07:39.368
We're probably not convinced, right?

106
00:07:39.368 --> 00:07:42.412
But do we feel like we're
making baby steps towards it?

107
00:07:42.412 --> 00:07:43.436
I think we do.

