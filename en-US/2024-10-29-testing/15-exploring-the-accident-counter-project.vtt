WEBVTT

1
00:00:00.230 --> 00:00:04.250
&gt;&gt; Steve Kinney: So we're going
to this accident counter, right?

2
00:00:04.250 --> 00:00:08.095
This one you can actually do an NPM
start and load up so you can see it.

3
00:00:10.310 --> 00:00:14.479
&gt;&gt; Steve Kinney: I decided that seeing
this stuff esoterically as you do it for

4
00:00:14.479 --> 00:00:17.188
the first time, maybe not that great.

5
00:00:17.188 --> 00:00:19.892
So here we've got a little counter.

6
00:00:19.892 --> 00:00:22.278
You can hit this button, and

7
00:00:22.278 --> 00:00:28.260
you can update the days since
the last JavaScript-related accident.

8
00:00:28.260 --> 00:00:33.312
You can hit Reset, Increment, Decrement.

9
00:00:33.312 --> 00:00:40.733
You'll also notice two other tasting
notes here is that Decrement and

10
00:00:40.733 --> 00:00:48.039
Reset are disabled until there's
something to decrement or reset.

11
00:00:48.039 --> 00:00:52.029
You also notice that I
did incredibly hard work

12
00:00:52.029 --> 00:00:56.648
of correct polarization on the word day,
right?

13
00:00:56.648 --> 00:01:01.001
One thing I wanna show you is you're like,
this is great, but

14
00:01:01.001 --> 00:01:03.031
also the title changes too.

15
00:01:03.031 --> 00:01:09.012
Yeah, yeah, one thing that I wanna bring
to your attention real quick, cuz I think

16
00:01:09.012 --> 00:01:14.825
that'll make it easier than just trying
to acquiesce what all these things are,

17
00:01:14.825 --> 00:01:20.236
is there is a little Chrome extension
called Testing Playground, right?

18
00:01:23.039 --> 00:01:28.492
&gt;&gt; Steve Kinney: What Testing Playground
does is it's kind of that inspect element,

19
00:01:28.492 --> 00:01:34.187
but it will give you the best
possible accessible selector for it.

20
00:01:34.187 --> 00:01:38.009
So that way if we were just looking at
the ones in the terminal, you'd have to

21
00:01:38.009 --> 00:01:42.195
somehow know your accessibility queries
better than I can assume anyone does, but

22
00:01:42.195 --> 00:01:43.304
here's what you do.

23
00:01:43.304 --> 00:01:48.222
You can install that, you go into your dev
tools, you find this little frog hanging

24
00:01:48.222 --> 00:01:54.041
out here,
&gt;&gt; Steve Kinney: I apologizes.

25
00:01:54.041 --> 00:01:57.997
But then you can go ahead and
pick something and

26
00:01:57.997 --> 00:02:03.882
it's gonna show you basically what
the best possible selector is for

27
00:02:03.882 --> 00:02:06.941
that element that you want to find.

28
00:02:06.941 --> 00:02:10.434
This way you don't have to guess and
know, you can kind of pull this open and

29
00:02:10.434 --> 00:02:11.055
take a look.

30
00:02:11.055 --> 00:02:14.526
And a lot of times this is useful
when you're developing too,

31
00:02:14.526 --> 00:02:16.728
because if you don't have a great one,

32
00:02:16.728 --> 00:02:21.030
a lot of times it will also give you
a recommendation too on what it should be.

33
00:02:21.030 --> 00:02:22.527
So we look at the accident counter.

34
00:02:22.527 --> 00:02:25.242
This one happens to be in React.

35
00:02:25.242 --> 00:02:26.647
So that's fun.

36
00:02:26.647 --> 00:02:31.871
The code itself is a React component.

37
00:02:31.871 --> 00:02:34.602
You can know React,
you cannot know React, it doesn't matter.

38
00:02:34.602 --> 00:02:39.479
You don't technically need to know
anything that's going on in here,

39
00:02:39.479 --> 00:02:42.826
where we care is our fun
little test in this case.

40
00:02:42.826 --> 00:02:46.186
So I will go ahead and do one.

41
00:02:46.186 --> 00:02:50.236
In this case,
I brought in Testing Library/React,

42
00:02:50.236 --> 00:02:54.466
that is different from DOM
because we're using React.

43
00:02:56.296 --> 00:02:59.657
Like that way you don't have to
get the document body render root,

44
00:02:59.657 --> 00:03:01.869
it's gonna do do that all for you.

45
00:03:01.869 --> 00:03:06.298
The only new thing that it
does is you get this render

46
00:03:06.298 --> 00:03:10.533
method which will take a JSX component,
right?

47
00:03:10.533 --> 00:03:15.542
For those of you who don't use React,
I will show you the same idea in Svelte,

48
00:03:15.542 --> 00:03:19.569
where there's no JSX, but
it's just taking the class name.

49
00:03:20.570 --> 00:03:24.620
But you can see the Svelte one
also just has a render method, and

50
00:03:24.620 --> 00:03:29.986
instead of taking JSX, it takes the class
name and then the props you wanna pass it.

51
00:03:29.986 --> 00:03:31.901
Guess what the view one does?

52
00:03:31.901 --> 00:03:33.299
Same basic thing.

53
00:03:33.299 --> 00:03:38.118
The important part of testing is it
should not be framework specific, so

54
00:03:38.118 --> 00:03:41.911
we've got a counter renders
with an initial count of 0.

55
00:03:41.911 --> 00:03:45.751
The only reason you might wanna go into
this file is if you wanna see any of

56
00:03:45.751 --> 00:03:46.456
the markup.

57
00:03:46.456 --> 00:03:51.991
The only thing that we can add is
this data dash test ID is meaningful.

58
00:03:51.991 --> 00:03:56.106
It's a other way that you can query stuff
that maybe doesn't have a very obvious

59
00:03:56.106 --> 00:03:57.591
role or anything like that.

60
00:03:57.591 --> 00:04:02.818
The argument here is that
classes mean things, right?

61
00:04:02.818 --> 00:04:06.124
A lot of times we're
select by the given class.

62
00:04:06.124 --> 00:04:08.264
People, designers change things.

63
00:04:08.264 --> 00:04:10.208
Classes get applied to stuff,

64
00:04:10.208 --> 00:04:13.954
those you don't want your test
tied to your style, right?

65
00:04:13.954 --> 00:04:15.398
Could you look for it by class?

66
00:04:15.398 --> 00:04:16.233
You absolutely could.

67
00:04:16.233 --> 00:04:17.873
Should you know?

68
00:04:17.873 --> 00:04:20.092
Because all you need to do is
end up changing some style.

69
00:04:20.092 --> 00:04:22.846
Style, same with the regular IDs, but

70
00:04:22.846 --> 00:04:27.781
a test ID shouldn't change based on
the needs of your design, right?

71
00:04:27.781 --> 00:04:30.830
So in this case, we can go ahead.

72
00:04:30.830 --> 00:04:35.592
It renders with an initial count of 0.

73
00:04:35.592 --> 00:04:45.244
So what we can do here is say,
&gt;&gt; Steve Kinney: Count is screen because,

74
00:04:45.244 --> 00:04:49.341
like we're looking at this from
the perspective of the entire DOM screen.

75
00:04:49.341 --> 00:04:54.600
Get by Test ID.

76
00:04:54.600 --> 00:04:57.586
And this point, what was it like?

77
00:04:57.586 --> 00:05:02.417
I could go back to the other
tool I had to, counter count.

78
00:05:02.417 --> 00:05:03.211
That's a good name.

79
00:05:05.828 --> 00:05:09.260
&gt;&gt; Steve Kinney: Counter count,
and then we could do something

80
00:05:09.260 --> 00:05:16.347
like,
&gt;&gt; Steve Kinney: And

81
00:05:16.347 --> 00:05:22.217
you'll notice that that one
thing I have in the setup files,

82
00:05:22.217 --> 00:05:28.990
all it does is add a bunch of
additional matchers to expect, right?

83
00:05:28.990 --> 00:05:33.590
And so stuff like to have
attribute is literally looking for

84
00:05:33.590 --> 00:05:35.799
an HTML attribute, right?

85
00:05:35.799 --> 00:05:40.844
There are things that you could do on
your own to have class which is both

86
00:05:40.844 --> 00:05:46.077
a way of conducting yourself,
as well as the classes on an HTML element.

87
00:05:46.077 --> 00:05:51.880
To have focus, to have form value,
as well as all the other ones,

88
00:05:51.880 --> 00:05:56.637
to have text content should
be by default 0, right?

89
00:05:56.637 --> 00:05:59.393
We'll make this one to do for a second.

90
00:06:01.258 --> 00:06:10.589
&gt;&gt; Steve Kinney: So, now what I can do,
&gt;&gt; Steve Kinney: Test,

91
00:06:10.589 --> 00:06:15.790
all right, everything passes.

92
00:06:15.790 --> 00:06:16.815
Well, that's still skipped.

93
00:06:16.815 --> 00:06:19.433
It's passing because it's skipped.

94
00:06:19.433 --> 00:06:23.691
Cool, all right, so now our counter
renders an initial count of zero.

95
00:06:23.691 --> 00:06:27.569
Same thing we can do with this first one,
disables the decrement and

96
00:06:27.569 --> 00:06:29.622
reset buttons when the count is 0.

97
00:06:38.208 --> 00:06:40.968
&gt;&gt; Steve Kinney: So in this point,
again, we can do counter.

98
00:06:44.790 --> 00:06:46.525
&gt;&gt; Steve Kinney: In this case,
we want the increment button,

99
00:06:46.525 --> 00:06:47.765
the decrement button, right?

100
00:06:47.765 --> 00:06:48.939
Or decrement and reset.

101
00:06:48.939 --> 00:06:57.103
Decrement button is screen.getByRoll.

102
00:06:57.103 --> 00:07:02.028
Now, if you don't remember the syntax,
So what do you do?

103
00:07:02.028 --> 00:07:02.604
&gt;&gt; Student: Extension.

104
00:07:02.604 --> 00:07:04.528
&gt;&gt; Steve Kinney: You use the extension,
yeah.

105
00:07:04.528 --> 00:07:07.416
There's also a library where
you can paste in HTML and

106
00:07:07.416 --> 00:07:11.024
do it, if you just have the HTML and
you don't wanna load it all up.

107
00:07:11.024 --> 00:07:15.140
I'll share in a second, there's a link
where you can just paste in some HTML and

108
00:07:15.140 --> 00:07:16.930
do the same, it's the same tool.

109
00:07:16.930 --> 00:07:20.964
GetByRole button and name,

110
00:07:20.964 --> 00:07:30.480
in this case is going to be,
&gt;&gt; Steve Kinney: Decrement,

111
00:07:30.480 --> 00:07:35.831
a pattern that you will see a lot
is to use a case insensitive regex.

112
00:07:38.587 --> 00:07:42.690
&gt;&gt; Steve Kinney: That way,
if like the casing changes on the button,

113
00:07:42.690 --> 00:07:45.124
like your tests don't break.

114
00:07:45.124 --> 00:07:49.264
Or if the button where it says decrement,
but can say decrement, 0 or 1,

115
00:07:49.264 --> 00:07:52.901
or something like that,
you're finding one that matches this.

116
00:07:52.901 --> 00:07:58.460
You will see that pattern as well,
Reset button.

117
00:08:01.606 --> 00:08:03.141
&gt;&gt; Steve Kinney: Screen.getByRole.

118
00:08:16.202 --> 00:08:17.930
&gt;&gt; Steve Kinney: Cool,
and then we can expect,

119
00:08:22.464 --> 00:08:24.096
&gt;&gt; Steve Kinney: Check this out.

120
00:08:24.096 --> 00:08:26.478
Look at that helpful matcher.

121
00:08:38.410 --> 00:08:39.578
&gt;&gt; Steve Kinney: Cool, all right?

122
00:08:39.578 --> 00:08:41.072
What would we be angry about?

123
00:08:41.072 --> 00:08:42.902
Yeah, that's not a real thing.

124
00:08:47.536 --> 00:08:49.002
&gt;&gt; Steve Kinney: Let's talk
about what's happening.

125
00:08:51.995 --> 00:08:57.086
&gt;&gt; Steve Kinney: In counter.tsx,
we got a counter component.

126
00:08:57.086 --> 00:08:58.157
Great, awesome.

127
00:08:58.157 --> 00:08:58.857
This could be anything.

128
00:08:58.857 --> 00:09:01.100
It could be one component
in your entire application.

129
00:09:01.100 --> 00:09:03.591
It could be just like
yeah one little thing.

130
00:09:03.591 --> 00:09:06.338
It could be the entire
application component.

131
00:09:06.338 --> 00:09:09.427
I would argue you should probably be
something smaller because when we get to

132
00:09:09.427 --> 00:09:11.998
the browser-based testing,
that'll make sense to do that.

133
00:09:11.998 --> 00:09:13.350
But this is just a React component.

134
00:09:13.350 --> 00:09:16.733
There's nothing special about it,
we can ignore that.

135
00:09:16.733 --> 00:09:19.722
All that's happening on our
test is we are right now,

136
00:09:19.722 --> 00:09:24.109
we're pulling in this render and screen,
screen is a way to just kind of like,

137
00:09:24.109 --> 00:09:28.510
give ourselves some helpers for finding
stuff with the accessibility stuff.

138
00:09:28.510 --> 00:09:32.624
Could you do document.query selector?

139
00:09:32.624 --> 00:09:36.617
You could, you have all of
the DOM APIs available to you, right?

140
00:09:36.617 --> 00:09:41.588
I will argue that the free stuff that you
get from going by accessibility queries

141
00:09:41.588 --> 00:09:44.418
It helps you in a different
area of your life.

142
00:09:44.418 --> 00:09:46.996
But if you're like, I hate this,
this stresses me out, I just wanna

143
00:09:46.996 --> 00:09:50.076
use QuerySelector, I'm not writing tests,
go use document.queryselector.

144
00:09:50.076 --> 00:09:51.199
Do whatever you want, I don't care.

145
00:09:51.199 --> 00:09:56.524
But effectively, before each,
we render the counter, right?

146
00:09:56.524 --> 00:09:58.255
Just that component.

147
00:09:58.255 --> 00:10:01.699
And then we go find it on
the page to validate that it

148
00:10:01.699 --> 00:10:05.806
rendered with the selectors
that we expect that it should.

149
00:10:05.806 --> 00:10:09.868
And then we've got these helpers of,
okay, this counter, which yeah,

150
00:10:09.868 --> 00:10:14.407
I did annotate with the counter count test
ID, has the text content of 0, right?

151
00:10:14.407 --> 00:10:16.324
Not very much different than those add and

152
00:10:16.324 --> 00:10:18.635
subtract functions that we saw earlier,
right?

153
00:10:18.635 --> 00:10:22.203
With the extra ceremony of
mounting something on a page.

154
00:10:22.203 --> 00:10:25.873
Okay, go ahead and
get a button with the name decrement.

155
00:10:25.873 --> 00:10:28.311
Go ahead and get a reset button,

156
00:10:28.311 --> 00:10:32.656
which is a button on the page
with the word reset, right?

157
00:10:32.656 --> 00:10:38.039
And then we can use these
expected out of the box,

158
00:10:38.039 --> 00:10:41.989
they are in fact disabled, right?

159
00:10:41.989 --> 00:10:47.168
And like I said before, not fundamentally
different than those add and

160
00:10:47.168 --> 00:10:49.421
subtract functions, right?

161
00:10:49.421 --> 00:10:53.752
The test itself, other than some
new methods that we brought in,

162
00:10:53.752 --> 00:10:55.259
are roughly the same.

