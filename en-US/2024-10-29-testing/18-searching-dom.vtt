WEBVTT

1
00:00:00.000 --> 00:00:04.240
&gt;&gt; Steve Kinney: I wanna talk about some
of the other selectors in testing library,

2
00:00:04.240 --> 00:00:06.066
cuz they will come up later.

3
00:00:06.066 --> 00:00:11.140
And so let's just,
in here we'll pull up screen,

4
00:00:11.140 --> 00:00:15.978
real quick, findByAltTextt,
super useful for

5
00:00:15.978 --> 00:00:19.401
finding an image with an alt text.

6
00:00:19.401 --> 00:00:22.488
Label test is super good.

7
00:00:22.488 --> 00:00:25.246
So, let's say if an input
field has a label,

8
00:00:25.246 --> 00:00:27.716
as long as you know the text of the label,

9
00:00:27.716 --> 00:00:32.456
you don't necessarily have to worry about
what the test ID is for that field.

10
00:00:32.456 --> 00:00:38.138
It will look for, so if it's street
address in a label, it will give you

11
00:00:38.138 --> 00:00:44.224
back an input field that is labeled
with the label, labeled with the label.

12
00:00:44.224 --> 00:00:47.689
Placeholder text is useful if you need it,

13
00:00:47.689 --> 00:00:52.601
but if you care about people
who use accessibility devices,

14
00:00:52.601 --> 00:00:57.338
you can just have
a screen-reader-only label, right?

15
00:00:57.338 --> 00:01:01.368
That's hidden visually, but
then also works as the screen reader.

16
00:01:01.368 --> 00:01:05.222
So I would argue if you
use findAllByPlaceholder,

17
00:01:05.222 --> 00:01:07.739
that's a little bit [INAUDIBLE].

18
00:01:07.739 --> 00:01:11.761
The difference too is we're using get and
we're using get1, there's get and

19
00:01:11.761 --> 00:01:14.597
getAll, you can guess what
the difference is, right?

20
00:01:14.597 --> 00:01:18.035
Finds are different than gets,
and we'll see them later,

21
00:01:18.035 --> 00:01:22.457
cuz they also deal with a little bit of
problem we were talking about before.

22
00:01:22.457 --> 00:01:26.503
Which is, get and getAll,
so get will get the one.

23
00:01:26.503 --> 00:01:30.099
It'll actually throw an error if there
is more than one thing that matches

24
00:01:30.099 --> 00:01:30.744
it, right?

25
00:01:30.744 --> 00:01:32.659
Which is sometimes useful as well.

26
00:01:32.659 --> 00:01:36.645
GetAll, by label, by placeholder,

27
00:01:36.645 --> 00:01:41.998
by role we saw, by test ID,
by text, by title, for

28
00:01:41.998 --> 00:01:47.117
the various things on there,
so on and so forth.

29
00:01:47.117 --> 00:01:49.811
Get will immediately get it from the DOM.

30
00:01:49.811 --> 00:01:50.974
Great, right?

31
00:01:50.974 --> 00:01:55.627
Find is super interesting,
because what you don't want is your

32
00:01:55.627 --> 00:01:59.946
tests to fail because of
the time space continuum, right?

33
00:01:59.946 --> 00:02:04.413
And so what find does,
is it's an asynchronous version of get,

34
00:02:04.413 --> 00:02:09.066
where it will try for a certain
amount of time that you set, right?

35
00:02:09.066 --> 00:02:13.468
So it will go looking for
that button, or that whatever,

36
00:02:13.468 --> 00:02:17.242
but it will wait until it's on the page,
right?

37
00:02:17.242 --> 00:02:21.366
So if it does immediately find it, it'll
keep trying for a timeout that you can

38
00:02:21.366 --> 00:02:25.696
configure, whatever the reasonable default
is is what I use almost all the time.

39
00:02:25.696 --> 00:02:30.235
But that way, it's like, okay, cool,
maybe it's not on the page yet,

40
00:02:30.235 --> 00:02:32.815
but it should be on the page soon, right?

41
00:02:32.815 --> 00:02:34.054
So, hold on a second.

42
00:02:34.054 --> 00:02:38.420
If you don't find it in a few seconds,
I think it's like 300 milliseconds,

43
00:02:38.420 --> 00:02:42.285
is the default, I'm doing that for
memory, then the test will fail.

44
00:02:42.285 --> 00:02:47.144
But it won't fail immediately, because
it was about to be on the page, but

45
00:02:47.144 --> 00:02:51.233
maybe a network request or
something took a little bit longer,

46
00:02:51.233 --> 00:02:54.109
it will wait and pull for
it for a little bit.

47
00:02:54.109 --> 00:02:58.532
And so these are asynchronous, they return
promises that will either reject or

48
00:02:58.532 --> 00:03:01.712
resolve, and
the gets will immediately go looking for.

49
00:03:01.712 --> 00:03:07.291
So obviously, when I'm mounting one on
the page, I know that it's there, right?

50
00:03:07.291 --> 00:03:10.396
But if it was something like,
go do this thing, and

51
00:03:10.396 --> 00:03:15.355
then a whole bunch of other stuff happens,
maybe there's an animation, what have you,

52
00:03:15.355 --> 00:03:18.818
find is useful, because it will pull and
wait for it, right?

53
00:03:18.818 --> 00:03:22.627
That said, if it's not gonna be there,
now your test is slowed down,

54
00:03:22.627 --> 00:03:26.587
in the act of waiting for it, use what
you need to use, so on and so forth.

