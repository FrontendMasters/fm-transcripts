WEBVTT

1
00:00:00.550 --> 00:00:04.909
&gt;&gt; Steve Kinney: And in fact we can do the
same thing, I'll kind of walk you through

2
00:00:04.909 --> 00:00:10.520
one with the other app real quick, in
this case you do need to have it running.

3
00:00:10.520 --> 00:00:14.075
Now you could programmatically do that at
the beginning of the test, so on and so

4
00:00:14.075 --> 00:00:17.190
forth, it's very easy if you
just have a client side app.

5
00:00:17.190 --> 00:00:20.324
The interesting part is simulating the
network and there are two ways to do that,

6
00:00:20.324 --> 00:00:22.139
and we'll talk about that in a second.

7
00:00:22.139 --> 00:00:29.009
But let's look at what this might look
like from just a very blank area.

8
00:00:29.009 --> 00:00:32.376
So this is what I'm going to start with,
right?

9
00:00:32.376 --> 00:00:36.755
And so
I'm going to say test.beforeEach, and

10
00:00:36.755 --> 00:00:41.035
you might break this out
into multiple forms.

11
00:00:41.035 --> 00:00:45.189
Files where you go like go visit the user
setting page, go visit the home page and

12
00:00:45.189 --> 00:00:49.095
this will work on everything from your
static marketing site cuz it's just

13
00:00:49.095 --> 00:00:52.755
a browser and this is where it is
using those accessibility roles.

14
00:00:52.755 --> 00:00:55.601
So all that vegetables I made you
eat in the testing library part.

15
00:00:55.601 --> 00:01:00.716
They're coming home now,
so before each one

16
00:01:00.716 --> 00:01:05.971
of the objects you get in here is page,
right?

17
00:01:05.971 --> 00:01:11.107
And you say page.visit or is dot go to,

18
00:01:11.107 --> 00:01:18.278
go to, page go to,
in this case this one's 51 73.

19
00:01:20.719 --> 00:01:26.645
&gt;&gt; Steve Kinney: Cool, cool,
cool, and we have that in place,

20
00:01:26.645 --> 00:01:31.838
and now we can test, let's try someone.

21
00:01:40.288 --> 00:01:43.368
&gt;&gt; Steve Kinney: It has a count, something
really easy cuz where this becomes super

22
00:01:43.368 --> 00:01:46.998
powerful and again, like, this is why
you don't have to refactor anything.

23
00:01:46.998 --> 00:01:48.758
You don't have to mock anything, right?

24
00:01:48.758 --> 00:01:52.099
There might be something you wanna mock
in a second I'll get into that, but

25
00:01:52.099 --> 00:01:53.065
it's totally okay.

26
00:01:53.065 --> 00:01:57.139
So we go there and we say,

27
00:01:57.139 --> 00:02:00.832
pull that page in there

28
00:02:08.452 --> 00:02:10.518
&gt;&gt; Steve Kinney: GetByTestId, and

29
00:02:10.518 --> 00:02:17.961
that's gonna be, in this case,
counter-count, right?

30
00:02:17.961 --> 00:02:21.715
Let's close that one and
we'll do it It over here.

31
00:02:25.585 --> 00:02:26.620
&gt;&gt; Steve Kinney: Save that file.

32
00:02:32.527 --> 00:02:33.754
&gt;&gt; Steve Kinney: And
All right, we run the tests.

33
00:02:33.754 --> 00:02:39.987
&gt;&gt; Student: It's angry with me, what are
you angry about?This is not running HTTPS

34
00:02:48.444 --> 00:02:49.474
&gt;&gt; Steve Kinney: There it is,

35
00:02:49.474 --> 00:02:52.586
I gotta make this an async function.

36
00:02:52.586 --> 00:02:56.264
Too much talking and typing,
there we go,as you can see,

37
00:02:56.264 --> 00:03:01.241
what are my debugging strategies to
put away in front of everything.

38
00:03:01.241 --> 00:03:07.921
You joke, it works,
it doesn't work, all right, cool.

39
00:03:07.921 --> 00:03:11.729
So it loads onto the page, here you can
kinda see the timeline of the loading,

40
00:03:11.729 --> 00:03:13.561
not a lot to see though.

41
00:03:13.561 --> 00:03:17.429
And you have it on the page as well,
these are obviously,

42
00:03:17.429 --> 00:03:20.055
it's not active this moment.

43
00:03:20.055 --> 00:03:25.665
But you can actually see that snapshot,
that's cool.

44
00:03:25.665 --> 00:03:28.221
But the more important part is in here,
you can go ahead,

45
00:03:28.221 --> 00:03:30.045
now you've got it where it is right now.

46
00:03:31.875 --> 00:03:39.172
And first of all,
you can see that this test passes, right?

47
00:03:39.172 --> 00:03:43.202
Even though I didn't make any expectations
I don't know why it's read, but

48
00:03:43.202 --> 00:03:46.924
everything's happy, there's a check mark,
whatever UIs are hard.

49
00:03:46.924 --> 00:03:54.367
I'm not one to cast a stone, it's got
a green check, we're gonna go with it.

50
00:03:54.367 --> 00:04:00.361
And so interestingly, again, we kind of
set this before with testing library,

51
00:04:00.361 --> 00:04:05.313
If it could not find this element,
it would fail, right?

52
00:04:05.313 --> 00:04:09.071
And so the act that it can find
a counter account at all is

53
00:04:09.071 --> 00:04:12.483
a signal that everything is well, right?

54
00:04:12.483 --> 00:04:15.163
Cause if that didn't load,
your app has got a problem.

55
00:04:15.163 --> 00:04:18.678
And so, that's not an antipater that's
like, that's cheap, no, no, no,

56
00:04:18.678 --> 00:04:20.371
that's fine in playwright world.

57
00:04:20.371 --> 00:04:24.721
That's a full legit test of,
you now at very least have a test to say,

58
00:04:24.721 --> 00:04:30.201
hey, when we go to the homepage,
that element better be on the page, right?

59
00:04:30.201 --> 00:04:34.451
And we can start to then do a bunch
of additional things around this.

60
00:04:34.451 --> 00:04:35.785
And which is, yes,

61
00:04:35.785 --> 00:04:40.699
is this test gonna be way slower
than unit test that goes like that?

62
00:04:40.699 --> 00:04:42.663
Absolutely, but ultimately,

63
00:04:42.663 --> 00:04:46.749
there's no refactoring to think about so
on and so forth, right?

64
00:04:48.959 --> 00:04:53.498
And so in here you can then begin
to like go ahead and say like,

65
00:04:53.498 --> 00:04:56.885
we can get that button to increment,
right?

66
00:04:56.885 --> 00:04:59.212
So this is gonna be very
similar to what we saw before,

67
00:04:59.212 --> 00:05:01.665
and that's kind of what I'm
trying to sell you on here.

68
00:05:01.665 --> 00:05:05.476
And I'll talk about some of the other
advantages to play right in a second.

69
00:05:05.476 --> 00:05:08.611
But one of like,
I think the saving graces here is that,

70
00:05:08.611 --> 00:05:13.666
very similar to what you saw us doing
earlier, and that is again, intentional.

71
00:05:13.666 --> 00:05:19.189
So here we'll say that this is the count,
and then we'll say.

72
00:05:22.270 --> 00:05:29.774
&gt;&gt; Steve Kinney: Increment button is,
&gt;&gt; Steve Kinney: And

73
00:05:29.774 --> 00:05:31.988
yes, I gave me the answer earlier,
but now I've typed this so

74
00:05:31.988 --> 00:05:33.103
many times I can do it by heart.

75
00:05:40.021 --> 00:05:41.971
&gt;&gt; Steve Kinney: And
actually I'm gonna run that test again,

76
00:05:41.971 --> 00:05:43.619
because you know what this test does.

77
00:05:44.919 --> 00:05:46.969
It does verify that both of
those things are on the page.

78
00:05:48.009 --> 00:05:53.314
For the amount you get pretty fast again,
like, then we can go ahead and.

79
00:05:58.401 --> 00:06:01.237
&gt;&gt; Steve Kinney: Seems really familiar,
doesn't it?

80
00:06:04.719 --> 00:06:06.033
&gt;&gt; Steve Kinney: And
this is still a valid test,

81
00:06:06.033 --> 00:06:09.240
because if it couldn't click that button,
you know what it's gonna do?

82
00:06:09.240 --> 00:06:10.355
It's gonna fail.

83
00:06:10.355 --> 00:06:14.234
&gt;&gt; Student: You call click on the
increment button, increment button.click?

84
00:06:14.234 --> 00:06:17.235
&gt;&gt; Steve Kinney: Yeah, the problem is if
you keep trying to type button over and

85
00:06:17.235 --> 00:06:21.003
over again, it tries to autocomplete
a totally different variable for you.

86
00:06:21.003 --> 00:06:23.317
Because you are too busy thinking,
and talking, and

87
00:06:23.317 --> 00:06:25.329
not paying attention
to what you're typing.

88
00:06:27.909 --> 00:06:30.715
&gt;&gt; Steve Kinney: Yeah, there we go
[LAUGH] Yeah, and you can look,

89
00:06:30.715 --> 00:06:34.079
you can see where the little
button where I click, right?

90
00:06:34.079 --> 00:06:39.199
And so this takes the idea of the testing
library stuff one step further, right?

91
00:06:39.199 --> 00:06:40.287
Now, granted,

92
00:06:40.287 --> 00:06:45.039
It's really hard to like test
an individual component in here, right?

93
00:06:45.039 --> 00:06:47.394
So, you now have all of that,

94
00:06:47.394 --> 00:06:52.344
all the problems of that ball
of wax kind of come with you.

95
00:06:52.344 --> 00:06:55.305
But, with that comes some
serious advantages, right?

96
00:06:55.305 --> 00:06:58.108
Again, it's not like, well,
this tool is better than that tool,

97
00:06:58.108 --> 00:07:00.257
It's like you have a set of knives, right?

98
00:07:00.257 --> 00:07:03.132
And depending on what you're trying to
solve, the right set of knife works

99
00:07:03.132 --> 00:07:05.521
a different way as long as you
feel comfortable refactoring.

