WEBVTT

1
00:00:00.024 --> 00:00:03.460
&gt;&gt; Marcy Sutton: But
we're gonna play with a really simple

2
00:00:03.460 --> 00:00:05.450
version of a live region demo.

3
00:00:05.450 --> 00:00:07.547
So I'm gonna go back over the app.

4
00:00:07.547 --> 00:00:10.785
I'm gonna go to close
out some of this stuff.

5
00:00:13.051 --> 00:00:16.290
&gt;&gt; Marcy Sutton: That's the page I wanted,
announcer.jsx.

6
00:00:16.290 --> 00:00:18.480
So I've got this page.

7
00:00:19.580 --> 00:00:22.250
I'm gonna go pull it up in the browser.

8
00:00:24.760 --> 00:00:29.660
So my announcer page has a little
component that if I start typing,

9
00:00:29.660 --> 00:00:31.020
it will say forum saved.

10
00:00:32.110 --> 00:00:34.060
And like a lot of web applications,
that's it.

11
00:00:34.060 --> 00:00:37.160
[LAUGH] There's no live region,
there's no announcement.

12
00:00:37.160 --> 00:00:41.300
So if the user's typing and I'm posting
into the server that I've saved their

13
00:00:41.300 --> 00:00:45.500
stuff, without that live region,
they have no way of knowing.

14
00:00:45.500 --> 00:00:48.000
So let's go add one over
here on the right side.

15
00:00:48.000 --> 00:00:49.960
I'll go make a new component.

16
00:00:49.960 --> 00:00:55.080
I'm already importing it, so I just need
to go over to this live region component,

17
00:00:55.080 --> 00:00:58.930
which is in our better
components directory.

18
00:01:00.300 --> 00:01:03.380
And it is called Live region.

19
00:01:03.380 --> 00:01:06.167
So I've got a little shell here.

20
00:01:06.167 --> 00:01:11.194
And I'm going to just go add
a little wrapper div here.

21
00:01:11.194 --> 00:01:16.480
And I'm gonna make a little form component
that has this write live region.

22
00:01:16.480 --> 00:01:18.745
So I'm gonna say role of status.

23
00:01:18.745 --> 00:01:23.040
And I'm gonna give it a child,

24
00:01:23.040 --> 00:01:26.640
not a custom paragraph, but
just a normal paragraph.

25
00:01:26.640 --> 00:01:28.930
And I'm gonna say nothing here yet.

26
00:01:28.930 --> 00:01:32.100
So that's just,
that'll be there when the page loads.

27
00:01:32.100 --> 00:01:34.130
And then when I change its text content,

28
00:01:34.130 --> 00:01:39.388
because it has this role of status,
it should do some good stuff.

29
00:01:39.388 --> 00:01:41.960
I'm actually gonna make this
dynamic cuz I'm in react,

30
00:01:41.960 --> 00:01:46.510
so I'm gonna say the message here.

31
00:01:46.510 --> 00:01:49.280
And the message will be in my component.

32
00:01:49.280 --> 00:01:50.950
This will be pretty self-contained.

33
00:01:50.950 --> 00:01:53.500
It's not really gonna get
anything from the outside world.

34
00:01:53.500 --> 00:01:55.090
A real production component,

35
00:01:55.090 --> 00:01:57.430
you'd probably have props and
lots more going on.

36
00:01:57.430 --> 00:02:02.260
But just to show you how these library
agents work, I'm gonna set a state

37
00:02:02.260 --> 00:02:06.530
array here and say,
message and setMessage.

38
00:02:06.530 --> 00:02:10.190
And I'm gonna use a react hook for
a use state.

39
00:02:10.190 --> 00:02:13.980
And the default state I
will say is nothing here.

40
00:02:13.980 --> 00:02:17.790
The vanilla version of this,
that's just the text in the component.

41
00:02:17.790 --> 00:02:20.840
I'm also gonna make a little form.

42
00:02:23.200 --> 00:02:28.820
Somebody used some form components here so
a label and an input type of text.

43
00:02:30.590 --> 00:02:32.410
That is a self-closing element.

44
00:02:32.410 --> 00:02:36.500
I'm gonna give it a label with Intertext.

45
00:02:37.590 --> 00:02:40.130
And I'm not even going
to add any CSS to this.

46
00:02:40.130 --> 00:02:41.800
So that's all it's gonna get.

47
00:02:41.800 --> 00:02:46.540
I'm going to add a button type of Submit
because I want to hit the enter key in

48
00:02:46.540 --> 00:02:50.345
the Submit and
actually make it submit the form.

49
00:02:50.345 --> 00:02:52.095
And I'm just gonna say start.

50
00:02:52.095 --> 00:02:55.145
This is like a really basic demo.

51
00:02:55.145 --> 00:02:59.200
I am going to put an on
submit on this form, so

52
00:02:59.200 --> 00:03:04.696
that I don't submit the form by default,
submitHandler.

53
00:03:07.107 --> 00:03:10.796
&gt;&gt; Marcy Sutton: A good trick if you
are trying to do some JavaScripting form

54
00:03:10.796 --> 00:03:11.405
things.

55
00:03:11.405 --> 00:03:15.397
So I'm gonna add a const submitHandler.

56
00:03:15.397 --> 00:03:18.859
I'm going to give it an event,
assign it a callback function.

57
00:03:18.859 --> 00:03:22.100
And I'm just gonna say
event.preventDefault.

58
00:03:23.630 --> 00:03:26.100
And when we talk about
progressive enhancement later on,

59
00:03:26.100 --> 00:03:30.750
this is where you could override a server
action that would work without JavaScript.

60
00:03:30.750 --> 00:03:34.180
But I'm just gonna prevent the default
action of submitting cuz that

61
00:03:34.180 --> 00:03:36.660
would refresh the page and
then our demo wouldn't work.

62
00:03:37.660 --> 00:03:42.700
So if I type in some text into this input,

63
00:03:42.700 --> 00:03:48.190
I wanna take its value and
apply it here in this message.

64
00:03:48.190 --> 00:03:53.476
So when I submit the form is when
I can go and grab that value.

65
00:03:53.476 --> 00:03:56.590
I'm gonna go back to our friend,
the Ref API, and

66
00:03:56.590 --> 00:04:01.230
set an inputRef, so
I can grab the value off of it.

67
00:04:01.230 --> 00:04:07.280
I'm gonna say useRef, and then I'll
go assign it in the JSX down below.

68
00:04:07.280 --> 00:04:11.899
I'm also going to assign a messageRef.

69
00:04:11.899 --> 00:04:14.170
Actually, I don't need that
because I'm using state.

70
00:04:14.170 --> 00:04:20.708
So in the submitHandler I need
to add the ref onto the inputs.

71
00:04:20.708 --> 00:04:23.040
So I'll say ref, inputRef.

72
00:04:23.040 --> 00:04:24.900
So that way I have a handle on an element.

73
00:04:24.900 --> 00:04:26.380
I can grab its content.

74
00:04:26.380 --> 00:04:31.140
I could probably use a form API to go and
grab the content off of that too.

75
00:04:31.140 --> 00:04:32.725
There's multiple ways to get this content.

76
00:04:32.725 --> 00:04:37.380
I'm just gonna say inputRef.current.

77
00:04:37.380 --> 00:04:41.221
That'll get me the actual DOM node.

78
00:04:41.221 --> 00:04:44.725
And I'm gonna get into value
that when I type into it.

79
00:04:44.725 --> 00:04:49.178
And I'm gonna say sent
message to that value.

80
00:04:49.178 --> 00:04:52.119
And I might need to double check
this to make sure it works.

81
00:04:54.050 --> 00:04:57.390
So my good friend,
the console log statement.

82
00:04:57.390 --> 00:04:58.900
I'm never gonna outgrow it, it's awesome.

83
00:05:00.170 --> 00:05:02.450
Okay, so I've got this little component.

84
00:05:02.450 --> 00:05:04.100
It's got a default state.

85
00:05:04.100 --> 00:05:08.060
It's got a submitHandler, so that when
I type in this field and I hit submit,

86
00:05:08.060 --> 00:05:10.120
it should copy that into this live region.

87
00:05:10.120 --> 00:05:12.330
So let's just go make sure this works.

88
00:05:12.330 --> 00:05:14.420
So we've got our default text.

89
00:05:14.420 --> 00:05:16.410
If I say hi.

90
00:05:16.410 --> 00:05:17.060
That worked.

91
00:05:17.060 --> 00:05:21.130
Okay, so I'm gonna just start
over with this little thing, and

92
00:05:21.130 --> 00:05:24.690
I'm gonna turn on voice over
to see if this is working.

93
00:05:24.690 --> 00:05:25.682
&gt;&gt; Speaker 2: VoiceOver on Chrome,
Live Regions,

94
00:05:25.682 --> 00:05:27.328
vertical line,
Accessibility in Javascript Applications.

95
00:05:27.328 --> 00:05:29.463
Enter text, edit text, main [NOISE]
google chrome window live regions,

96
00:05:29.463 --> 00:05:31.773
accessibility in Javascript applications
webe contect has keyboard focus,

97
00:05:31.773 --> 00:05:32.718
enter text, edit text, main.

98
00:05:32.718 --> 00:05:34.310
You are currently on a text field.

99
00:05:34.310 --> 00:05:35.660
To enter text in this field,
type hamburgers.

100
00:05:36.720 --> 00:05:38.081
&gt;&gt; Marcy Sutton: No, didn't work.

101
00:05:38.081 --> 00:05:40.090
Let's try it again.

102
00:05:40.090 --> 00:05:41.246
&gt;&gt; Speaker 2: [NOISE] Hello.

103
00:05:41.246 --> 00:05:43.577
You are currently, hello.

104
00:05:43.577 --> 00:05:45.693
Select, edit text, space.

105
00:05:45.693 --> 00:05:47.472
[NOISE] Space.

106
00:05:47.472 --> 00:05:50.512
[NOISE] You are currently on a text field.

107
00:05:50.512 --> 00:05:54.780
To enter text in this field,
type hello Frontend Masters.

108
00:05:54.780 --> 00:05:56.571
&gt;&gt; Marcy Sutton: All right.
&gt;&gt; Speaker 2: F5, button, VoiceOver off.

109
00:05:56.571 --> 00:05:58.020
&gt;&gt; Marcy Sutton: Can
everyone hear that okay?

110
00:05:58.020 --> 00:06:03.620
My speakers on this laptop are not happy
with me [LAUGH] playing music really loud.

111
00:06:03.620 --> 00:06:05.700
So the role of status.

112
00:06:05.700 --> 00:06:06.600
It was polite.

113
00:06:06.600 --> 00:06:11.260
It waited for the screen reader to finish
whatever other announcements it had.

114
00:06:11.260 --> 00:06:16.060
And then it announced the content,
which was something like saved.

115
00:06:16.060 --> 00:06:20.300
That's not super urgent, that can wait
until the screen reader's done reading.

116
00:06:20.300 --> 00:06:25.214
It's waiting for system announcements,
things that you can't really control.

117
00:06:25.214 --> 00:06:31.340
So that's the simplest live region,
and that's how you can bind them.

118
00:06:33.510 --> 00:06:35.080
So that's that example.

119
00:06:35.080 --> 00:06:37.580
If you wanna recreate that,

120
00:06:37.580 --> 00:06:41.170
the live region component that I started
with is empty just like you saw.

121
00:06:41.170 --> 00:06:44.360
And then I have a vanilla
JavaScript version.

122
00:06:44.360 --> 00:06:48.090
Something you could play with in
the future with live regions is to try to

123
00:06:48.090 --> 00:06:50.690
the two different politeness levels,
play with assertive,

124
00:06:50.690 --> 00:06:52.380
see how that works for you.

125
00:06:52.380 --> 00:06:56.920
You can also change the rate of speech in
your screen reader if it's too slow or

126
00:06:56.920 --> 00:06:58.090
too fast.

127
00:06:58.090 --> 00:07:00.850
You can change voices as well,
which is pretty cool.

128
00:07:00.850 --> 00:07:04.800
People who rely on screen readers all
day every day have a much higher rate

129
00:07:04.800 --> 00:07:06.340
than I do.

130
00:07:06.340 --> 00:07:07.220
But it helps for

131
00:07:07.220 --> 00:07:10.380
demonstration purposes to have that slowed
down a little bit and when you're new.

132
00:07:11.760 --> 00:07:15.220
All right, so
the live region stuff is pretty simple.

133
00:07:15.220 --> 00:07:17.400
So I think I'm gonna keep on rolling.

134
00:07:17.400 --> 00:07:22.230
But there are some examples in the deck
of the component that I wrote.

135
00:07:22.230 --> 00:07:24.903
And then the vanilla JS
version is really similar.

