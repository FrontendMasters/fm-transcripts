WEBVTT

1
00:00:00.098 --> 00:00:03.018
&gt;&gt; Marcy Sutton: We looked at the Chrome
accessibility inspector a little bit, and

2
00:00:03.018 --> 00:00:05.110
that accessibility information.

3
00:00:05.110 --> 00:00:10.050
So, every webpage has the document
object model, which has lots

4
00:00:10.050 --> 00:00:14.240
of information about what's on your page
that can be useful for accessibility.

5
00:00:14.240 --> 00:00:18.380
There's also this structure
called the accessibility tree,

6
00:00:18.380 --> 00:00:23.180
that is created with accessibility APIs,
so that screen readers

7
00:00:23.180 --> 00:00:27.330
have kind of streamlined interface for
accessibility information.

8
00:00:27.330 --> 00:00:31.230
And so, a lot of the things that
we do with HTML and CSS, and

9
00:00:31.230 --> 00:00:33.990
JavaScript, can impact this structure.

10
00:00:33.990 --> 00:00:38.370
And I have a screenshot from
Chrome://accessibility,

11
00:00:38.370 --> 00:00:39.800
make sure that still works.

12
00:00:40.800 --> 00:00:44.500
So I think they want you to turn it on for
each tab,

13
00:00:44.500 --> 00:00:47.990
because it can be kind
of a performance hit.

14
00:00:47.990 --> 00:00:52.639
So, if I look at, so accessibility
internal, this is an internal,

15
00:00:52.639 --> 00:00:54.010
that's this page.

16
00:00:54.010 --> 00:00:57.493
And if we look at our,
I can look at any webpage, and

17
00:00:57.493 --> 00:01:01.462
this is just like a raw version
of the accessibility tree,

18
00:01:01.462 --> 00:01:05.940
I think now we have tools like
the Chrome DevTools inspector.

19
00:01:05.940 --> 00:01:08.840
It's just good to know that these exists,
and we're not gonna go super

20
00:01:08.840 --> 00:01:12.130
deep into the accessibility tree,
I just want you to know that it's a thing.

21
00:01:12.130 --> 00:01:17.510
That it's a parallel structure to the DOM,
and it uses platform accessibility API.

22
00:01:17.510 --> 00:01:21.768
So if you're on a Mac,
there's accessibility APIs there, there's

23
00:01:21.768 --> 00:01:27.080
different APIs on Windows, and it's
just helpful to know that this exists.

24
00:01:27.080 --> 00:01:32.140
Because, when we go visualize things
with the browser DevTools, like we saw,

25
00:01:32.140 --> 00:01:37.140
semantic markup and your CSS can
impact that accessibility tree.

26
00:01:37.140 --> 00:01:41.410
So that's why I say it's really
helpful to render webpages so

27
00:01:41.410 --> 00:01:43.710
that you're not just
looking at the raw HTML.

28
00:01:43.710 --> 00:01:46.270
You wanna see how CSS and

29
00:01:46.270 --> 00:01:50.166
your scripting can actually
impact this accessibility tree.

30
00:01:50.166 --> 00:01:53.720
So in the screenshot I
have it sort of meta,

31
00:01:53.720 --> 00:01:59.380
this image of the inspector that we're
looking at right now, I've changed

32
00:01:59.380 --> 00:02:04.350
it to be display none in my DevTools, and
then I took a screenshot of the DevTools.

33
00:02:04.350 --> 00:02:07.000
So it's like the same
image we're looking at.

34
00:02:07.000 --> 00:02:10.970
But when you put display none on that,
like we saw on the DevTools accessibility

35
00:02:10.970 --> 00:02:14.780
inspector, it doesn't render it and
it hides its accessibility information.

36
00:02:14.780 --> 00:02:19.300
So now that we have this tree inspector,
you can just look at it here,

37
00:02:19.300 --> 00:02:20.610
it's amazing.

38
00:02:20.610 --> 00:02:22.626
We did not have those when I got started,
so

39
00:02:22.626 --> 00:02:24.984
I would highly recommend
checking out this tool.

