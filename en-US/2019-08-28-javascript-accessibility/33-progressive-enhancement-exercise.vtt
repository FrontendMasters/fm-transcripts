WEBVTT

1
00:00:00.310 --> 00:00:03.160
&gt;&gt; Marcy Sutton: That's how I could make,
like that's the start

2
00:00:03.160 --> 00:00:07.186
of how I could create something
that's more progressively enhanced.

3
00:00:07.186 --> 00:00:10.430
And I've got some examples here,
the tab list you could play with,

4
00:00:10.430 --> 00:00:13.150
maybe adding more functionality to that.

5
00:00:13.150 --> 00:00:18.310
I have this starter here that my feelings
will not be hurt if you want to go

6
00:00:18.310 --> 00:00:22.020
over here cuz this is what I think more of
when I think of progressive enhancement.

7
00:00:22.020 --> 00:00:26.610
This is a little bit more similar to like
the Gatsby thing kind of abstracts it

8
00:00:26.610 --> 00:00:30.440
away, which is fine, but
this is a cool thing to work on.

9
00:00:30.440 --> 00:00:34.960
So I have this little ARIA
tab switcher and it works.

10
00:00:34.960 --> 00:00:39.060
It's using the pattern similar
to what you can find on the ARIA

11
00:00:39.060 --> 00:00:41.080
authoring practices guide.

12
00:00:41.080 --> 00:00:42.530
But there's all these classes in here and

13
00:00:42.530 --> 00:00:46.050
let's say ARIA,
I've named it to rely on ARIA.

14
00:00:46.050 --> 00:00:50.443
So I might go through and change those
to be a little bit more generic.

15
00:00:50.443 --> 00:00:54.740
And then so how I would change
this is to go through here.

16
00:00:55.740 --> 00:01:02.009
Remove the things that rely on
scripting and probably change the CSS.

17
00:01:02.009 --> 00:01:08.490
Maybe I'd add no-js class here.

18
00:01:08.490 --> 00:01:13.423
And when JavaScript loads I could go,

19
00:01:13.423 --> 00:01:17.895
document.body, I don't know,

20
00:01:17.895 --> 00:01:22.222
go remove the CSS class somehow.

21
00:01:22.222 --> 00:01:24.316
And then that gives you the styling hooks.

22
00:01:24.316 --> 00:01:27.940
It's like JavaScript's downloaded,
I can go play with the CSS now and

23
00:01:27.940 --> 00:01:29.490
enhance this thing.

24
00:01:29.490 --> 00:01:34.330
So what I would sort of recommend
doing for this is changing

25
00:01:34.330 --> 00:01:37.930
the CSS when JavaScript isn't turned on so
that it just renders everything.

26
00:01:37.930 --> 00:01:40.400
Maybe it's just a big long list of stuff.

27
00:01:40.400 --> 00:01:44.805
And when you turn JavaScript off,
you can still read all the content.

28
00:01:44.805 --> 00:01:49.259
Cuz right now if I turned JavaScript off,
it's gonna look exactly the same, but

29
00:01:49.259 --> 00:01:51.434
I'm not gonna be able to get anything.

30
00:01:51.434 --> 00:01:54.323
There are some patterns
with playing with label and

31
00:01:54.323 --> 00:01:58.353
input elements that you can make kind
of a native HTML tab switcher, but

32
00:01:58.353 --> 00:02:01.710
it's not super accessible for
screen readers.

33
00:02:01.710 --> 00:02:05.025
So I think it's fine to use JavaScript but

34
00:02:05.025 --> 00:02:09.394
we can just layer it on top
of the sort of baseline HTML.

35
00:02:09.394 --> 00:02:12.381
So there was a question
about the logic for

36
00:02:12.381 --> 00:02:15.806
using the spread operator
with the end client.

37
00:02:15.806 --> 00:02:22.960
It's actually a Boolean from the used
state, so it's either true or false.

38
00:02:22.960 --> 00:02:29.850
It's pretty crafty, so the spread
operator is actually spreading it onto

39
00:02:29.850 --> 00:02:34.840
the element in jsx, which I'm
guessing is an object under the hood.

40
00:02:34.840 --> 00:02:40.020
That's how you can easily swap
out an actual li or a custom one.

41
00:02:40.020 --> 00:02:43.370
So interchangeably is that they
represent those with JavaScript objects

42
00:02:43.370 --> 00:02:44.470
under the hood.

43
00:02:44.470 --> 00:02:49.593
So if spread its client onto it and
use this double &amp;&amp;,

44
00:02:49.593 --> 00:02:53.735
it will combine this
object with role of tab to

45
00:02:53.735 --> 00:02:59.518
the representation of the element
if this condition matches.

46
00:02:59.518 --> 00:03:05.334
And it just short circuits a longer
ternary condition to check that.

47
00:03:05.334 --> 00:03:09.682
I did add an alternative here,
something that might come

48
00:03:09.682 --> 00:03:13.949
in handy later is to just
start with the role attribute.

49
00:03:13.949 --> 00:03:16.974
And then giving it a value no
matter what the condition is.

50
00:03:16.974 --> 00:03:20.426
So in this case,
I'm saying if isClient is true,

51
00:03:20.426 --> 00:03:24.920
give it a tablist role,
otherwise, give it the list role.

52
00:03:24.920 --> 00:03:28.830
And the reason that you could
consider doing that is that,

53
00:03:28.830 --> 00:03:34.140
I mentioned this earlier, that Safari
needs that list role to be bolted on if

54
00:03:34.140 --> 00:03:37.180
the list styles are removed in CSS.

55
00:03:37.180 --> 00:03:41.352
So sometimes you might want
to add a default role just so

56
00:03:41.352 --> 00:03:45.810
that a screen reader will
respect it with that CSS loaded.

57
00:03:45.810 --> 00:03:50.162
But this short circuiting is pretty
crafty, and it'll keep that role attribute

58
00:03:50.162 --> 00:03:53.175
from being added at all unless
this condition matches.

