WEBVTT

1
00:00:00.104 --> 00:00:03.553
&gt;&gt; Marcy Sutton: I'm gonna go over
the Vanilla JavaScript example and

2
00:00:03.553 --> 00:00:06.167
then we'll take a little bit of a break.

3
00:00:06.167 --> 00:00:09.380
So, this tab switcher,

4
00:00:09.380 --> 00:00:13.971
I'll leave this one, close this.

5
00:00:13.971 --> 00:00:20.278
So this example is just like the other
one, it's got the arrow key navigation,

6
00:00:20.278 --> 00:00:26.982
I can cycle through these tab switchers,
it's got Aria in it, added dynamically.

7
00:00:26.982 --> 00:00:31.493
So this tab switcher I went and did some
cleanup on the CSS classes cuz originally

8
00:00:31.493 --> 00:00:36.021
I didn't even write this to be thinking
about progressive [LAUGH] enhancement.

9
00:00:36.021 --> 00:00:40.650
It's good to think about it first,
but so I cleaned those up,

10
00:00:40.650 --> 00:00:42.796
I did add this no-js class.

11
00:00:42.796 --> 00:00:48.751
And in the CSS I believe, yeah, so
here are the bottom I have this no-js,

12
00:00:48.751 --> 00:00:53.652
if that class is present because
JavaScript hasn't removed

13
00:00:53.652 --> 00:00:57.606
it that's where I can go and
play with the style.

14
00:00:57.606 --> 00:00:59.183
So I just hid the tabs,

15
00:00:59.183 --> 00:01:03.915
like if it's not interactive what
are the tabs there for, really?

16
00:01:03.915 --> 00:01:08.324
Maybe you might need it for
heading purposes to match the content but

17
00:01:08.324 --> 00:01:10.875
depending if the tabs are all in a row and

18
00:01:10.875 --> 00:01:14.525
the tab panels are all in a row
then that will make sense.

19
00:01:14.525 --> 00:01:17.728
So depending on how your
tab switcher is marked up,

20
00:01:17.728 --> 00:01:21.161
you might need to change that,
but I just hid them all.

21
00:01:21.161 --> 00:01:26.102
And then the tab-content
I have a display here

22
00:01:26.102 --> 00:01:31.431
just turning those so
that all of them are back on.

23
00:01:31.431 --> 00:01:36.906
I did experiment playing with the target,
the target selector in the browser,

24
00:01:36.906 --> 00:01:41.906
so that I think, yeah, I don't know
if I actually [LAUGH] finished this.

25
00:01:41.906 --> 00:01:46.583
But the idea was that if I do use these
links that I could actually match

26
00:01:46.583 --> 00:01:51.341
the target in the URL to a region in
the page, the target selector, and

27
00:01:51.341 --> 00:01:55.636
CSS does that, but we could go
look at the JavaScript for this.

28
00:01:55.636 --> 00:02:01.310
So using Vanilla JavaScript,
I added a document.querySelector,

29
00:02:01.310 --> 00:02:04.944
go and find that no-js class and
remove it.

30
00:02:04.944 --> 00:02:10.158
So find that element access its
class list and remove no-js.

31
00:02:10.158 --> 00:02:14.518
And then I'm doing the scripting to
actually bind this as a tab switcher.

32
00:02:14.518 --> 00:02:18.537
So going and
finding the tabs using querySelector all,

33
00:02:18.537 --> 00:02:22.137
the tab panels,
creating an array from the tabs.

34
00:02:22.137 --> 00:02:27.038
So when you use querySelector all, I don't
know if anyone else has run into this,

35
00:02:27.038 --> 00:02:29.822
but it returns you a node list and
not an array.

36
00:02:29.822 --> 00:02:32.766
Huge pain for a long time,
and the quickest,

37
00:02:32.766 --> 00:02:37.509
easiest thing I found is to just
convert it to an array with array.from.

38
00:02:37.509 --> 00:02:42.095
That requires support for array.from,
you might need a poly fill or

39
00:02:42.095 --> 00:02:45.968
you can just use a for-loop and
iterate over them too, but

40
00:02:45.968 --> 00:02:50.260
since I have Babel turned on here
in Code pen, I just went for it.

41
00:02:50.260 --> 00:02:55.531
So then I iterate over these tabs and
go and add a role of tab,

42
00:02:55.531 --> 00:03:01.119
the aria-controls that's a state,
Aria control state, and

43
00:03:01.119 --> 00:03:07.776
I point it to each tab panel, so go and
just grab the ID off of the tab panels.

44
00:03:07.776 --> 00:03:15.234
I'm removing these so to sort of help
me out in dynamically binding these.

45
00:03:15.234 --> 00:03:18.754
I didn't have any Aria on here cuz I
didn't want screen readers to encounter

46
00:03:18.754 --> 00:03:22.008
this and be like, what is this
controlling, it's not interactive?

47
00:03:22.008 --> 00:03:26.990
So I used a data attribute instead but
that's a method you could use.

48
00:03:26.990 --> 00:03:30.646
Like if you safely want to
kind of store attributes for

49
00:03:30.646 --> 00:03:36.268
later in your mark up before JavaScript
takes over you could use data attributes.

50
00:03:36.268 --> 00:03:40.522
The tab panels I'm going through each of
those just since there's a one to one,

51
00:03:40.522 --> 00:03:42.756
there's three tabs, three tab panels.

52
00:03:42.756 --> 00:03:49.216
When I'm iterating over the tabs, I can go
and add a role of tab panel to each one,

53
00:03:49.216 --> 00:03:53.779
and then I've got some code to go and
get the current tab.

54
00:03:53.779 --> 00:03:58.609
So starting up here,
store a variable of which tab

55
00:03:58.609 --> 00:04:02.408
index is the active one, I start at 0.

56
00:04:02.408 --> 00:04:07.793
I have a kind of reusable
function here to get

57
00:04:07.793 --> 00:04:14.795
the reference from the tab panels,
or sorry, the tabs.

58
00:04:14.795 --> 00:04:16.433
Each one has an href,

59
00:04:16.433 --> 00:04:21.816
this is were that target selector
came in because the href of each tab.

60
00:04:21.816 --> 00:04:26.718
I believe these were bottoms originally
and I converted them the links so

61
00:04:26.718 --> 00:04:31.615
that I could used that internal linking so
that when I click on a link I send

62
00:04:31.615 --> 00:04:35.415
it to the ID that matches that href,
the internal link.

63
00:04:35.415 --> 00:04:40.222
And so I can use that to get
a reference between the tab and

64
00:04:40.222 --> 00:04:42.988
then its associated tab panel.

65
00:04:42.988 --> 00:04:46.120
Let's see,
let's go back down to the bottom.

66
00:04:46.120 --> 00:04:48.931
So for each tab,
each one has a click listener,

67
00:04:48.931 --> 00:04:52.377
because I'm sort of like
progressively layering on top,

68
00:04:52.377 --> 00:04:55.681
I'm overriding what the link
would normally do, and so

69
00:04:55.681 --> 00:05:00.219
I'm preventing its default action,
and I'm using that to change the tab.

70
00:05:00.219 --> 00:05:04.281
So when I iterate over each tab
I know which index it is cuz

71
00:05:04.281 --> 00:05:06.881
I'm iterating over a collection.

72
00:05:06.881 --> 00:05:07.805
I can go and add,

73
00:05:07.805 --> 00:05:12.046
I'm gonna change this to keyup based
on Amy's great suggestions earlier.

74
00:05:12.046 --> 00:05:16.112
So I've got a keyup listener and
I can change keyCode to key,

75
00:05:16.112 --> 00:05:20.260
I don't know, actually remember
what the stream names are so

76
00:05:20.260 --> 00:05:25.473
you probably wanna change the deprecated
key code to something more modern.

77
00:05:25.473 --> 00:05:29.731
[LAUGH] Just logging the event object
when you interact with it you can go and

78
00:05:29.731 --> 00:05:34.274
play with that and that might come up
a little bit layer in our testing section.

79
00:05:34.274 --> 00:05:38.818
But then I have these reusable
functions of a prevArrowkeyHandler and

80
00:05:38.818 --> 00:05:43.449
a nextArrowkeyHandler and I pass it
which tab index I'm currently on.

81
00:05:43.449 --> 00:05:47.309
So that way I can keep a reference
of like which one was current last,

82
00:05:47.309 --> 00:05:49.358
and I can increment and decrement.

83
00:05:49.358 --> 00:05:54.200
So the prevArrowkeyHandler checks if
the current index is greater than 0 cuz

84
00:05:54.200 --> 00:05:59.188
I don't wanna get an error trying to left
arrow off the screen [LAUGH] somewhere it

85
00:05:59.188 --> 00:06:00.320
doesn't exist.

86
00:06:00.320 --> 00:06:04.172
So if the index is greater
than 0 I can go and

87
00:06:04.172 --> 00:06:08.354
get the tab that matches
the index to the left.

88
00:06:08.354 --> 00:06:11.560
And I will send focus to it, so
that I'm in the right place.

89
00:06:11.560 --> 00:06:16.528
The changeTab function just goes and
unsets the tabs each time,

90
00:06:16.528 --> 00:06:19.840
so it goes and
removes an active CSS class,

91
00:06:19.840 --> 00:06:25.649
that's what changes the display,
it changes the aria-selected state.

92
00:06:25.649 --> 00:06:29.528
So this is one of those where adding it
when JavaScript loads is helpful because

93
00:06:29.528 --> 00:06:32.247
then screen readers won't
be like what's selected?

94
00:06:32.247 --> 00:06:34.236
Why can't I change it?

95
00:06:34.236 --> 00:06:35.324
Why is this on here?

96
00:06:35.324 --> 00:06:39.535
So I can add that dynamically and
then manage it like turning it on and off.

97
00:06:39.535 --> 00:06:41.700
And then, yeah, just kind of,

98
00:06:41.700 --> 00:06:45.408
I just go unset them that was
the easiest way to do that.

99
00:06:45.408 --> 00:06:49.460
And then for the currentTab I go and
add aria-selected if true,

100
00:06:49.460 --> 00:06:52.997
give it an active class on both
the tab and the tab panel.

101
00:06:52.997 --> 00:06:59.880
Set the currentTab index to the one that
the handlers have decided is the one.

102
00:06:59.880 --> 00:07:05.161
So a little bit of like conditional logic
to check that we're in bounds here.

103
00:07:05.161 --> 00:07:08.195
So that's what I ended up doing for
this one.

104
00:07:08.195 --> 00:07:12.421
So that's how you can use JavaScript
to kind of like turn things on and off.

105
00:07:12.421 --> 00:07:16.693
And it does sort of go against some of
the conventional wisdom of overwriting

106
00:07:16.693 --> 00:07:17.372
elements.

107
00:07:17.372 --> 00:07:22.182
Like I'm starting with an anchor and
adding, like I'm stopping its default

108
00:07:22.182 --> 00:07:27.069
action, and I'm adding a role on top of
that, so it might feel a little gross.

109
00:07:27.069 --> 00:07:29.624
But what that means is
that without JavaScript,

110
00:07:29.624 --> 00:07:32.753
that anchor will function like
an anchor and I can use that.

111
00:07:32.753 --> 00:07:36.079
So maybe that's, for
progressive enhancement purposes,

112
00:07:36.079 --> 00:07:38.238
that might be the right choice to make.

113
00:07:38.238 --> 00:07:41.771
Just know that if you get pushed back or
something just try and

114
00:07:41.771 --> 00:07:46.136
communicate your motivation and the
reasons why you would be doing this and

115
00:07:46.136 --> 00:07:49.340
you can come to a maybe even
better solution together.

