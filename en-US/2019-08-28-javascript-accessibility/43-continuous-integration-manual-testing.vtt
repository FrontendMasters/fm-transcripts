WEBVTT

1
00:00:00.020 --> 00:00:02.490
&gt;&gt; Marcy Sutton: A real brief
mention of Continuous Integration.

2
00:00:02.490 --> 00:00:05.640
So we've got these automated tests, right?

3
00:00:05.640 --> 00:00:09.796
And people ask me,
how do deal with accessibility in CI?

4
00:00:09.796 --> 00:00:12.080
It just like any other software test.

5
00:00:12.080 --> 00:00:14.807
So once I've got these
assertions in there,

6
00:00:14.807 --> 00:00:19.274
if somebody breaks the implementation and
then the tests start failing.

7
00:00:19.274 --> 00:00:23.494
That will show up in CI,
like if you're running your test suite,

8
00:00:23.494 --> 00:00:25.660
that should fail to build.

9
00:00:25.660 --> 00:00:28.133
And I have a whole talk just
on this it's on my github.

10
00:00:28.133 --> 00:00:33.821
It's a11y-and-ci so
that you can go find that repo and

11
00:00:33.821 --> 00:00:37.490
it's got a link to view it.

12
00:00:37.490 --> 00:00:40.850
But yeah, that's an interesting way
to bake that into your project.

13
00:00:40.850 --> 00:00:45.850
And where this really gets exciting is
if you could Track who broke the build.

14
00:00:45.850 --> 00:00:50.369
And this image was from a Tweet someone
wrote me about a monitor they had up in

15
00:00:50.369 --> 00:00:54.410
their office where whoever broke
the build they could shame them.

16
00:00:54.410 --> 00:00:58.430
And the Angular team actually had this
in their office in Mountain View.

17
00:00:58.430 --> 00:01:01.140
And I broke the build one time,
like I broke Angular.

18
00:01:01.140 --> 00:01:05.000
And I was in the office to see it,
and it was pretty life changing.

19
00:01:05.000 --> 00:01:10.690
So you could do that, maybe you automate
some kind of like Internet of Things.

20
00:01:10.690 --> 00:01:13.522
Like Nerf Gun to like
fire foam at somebody or

21
00:01:13.522 --> 00:01:17.902
light up a big red light over their
desk or something embarrassing.

22
00:01:17.902 --> 00:01:20.697
That you could automate like if
you had a hack day or something,

23
00:01:20.697 --> 00:01:23.570
you could do something really cool
to track who broke the build.

24
00:01:23.570 --> 00:01:27.004
So if anyone ends up doing that please
Tweet at me because I would love to know.

25
00:01:27.004 --> 00:01:30.830
As you can gamify it especially
if it's accessibility related.

26
00:01:30.830 --> 00:01:32.140
It'd be pretty cool.

27
00:01:34.020 --> 00:01:37.390
But Spoiler: we need to do more than that.

28
00:01:37.390 --> 00:01:41.780
Automation can only, and linting can only
get us so far, and human testing and

29
00:01:41.780 --> 00:01:43.130
manual testing.

30
00:01:43.130 --> 00:01:45.230
I mean,
we're the humans doing the manual testing.

31
00:01:45.230 --> 00:01:47.070
That's super important too.

32
00:01:47.070 --> 00:01:50.010
And so
to send you off with some advice for that,

33
00:01:50.010 --> 00:01:53.320
there's a really great article
on Smashing Magazine from

34
00:01:53.320 --> 00:01:57.110
Eric Bailey on the importance
of Manual accessibility testing.

35
00:01:57.110 --> 00:02:00.810
He's got a great attitude about
being kind of pragmatic about what

36
00:02:00.810 --> 00:02:05.430
automation's good for, what Manual testing
is, like what's important to cover.

37
00:02:05.430 --> 00:02:08.110
I'd recommend following Eric Bailey,
he's got a lot of really great writing

38
00:02:08.110 --> 00:02:12.280
about accessibility and is just
a really interesting person to follow.

