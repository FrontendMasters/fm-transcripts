WEBVTT

1
00:00:00.050 --> 00:00:03.110
&gt;&gt; Marcy Sutton: Okay, so
let's talk about some modal layers and

2
00:00:03.110 --> 00:00:07.460
things that can come up in focus
management, disabling background content.

3
00:00:07.460 --> 00:00:11.720
So I have a few options here listed,

4
00:00:11.720 --> 00:00:14.890
and you can use them
depending on your use case.

5
00:00:14.890 --> 00:00:17.104
So the first one to talk
about is aria-hidden.

6
00:00:17.104 --> 00:00:21.834
And this is a state that you can
toggle in your documents to suppress

7
00:00:21.834 --> 00:00:24.350
accessibility information.

8
00:00:24.350 --> 00:00:26.930
So I can put it anywhere in the dome and

9
00:00:26.930 --> 00:00:32.600
it will take that whole tree of HTML and
strip its accessibility information.

10
00:00:32.600 --> 00:00:35.320
What it doesn't do is
keep you from focusing

11
00:00:35.320 --> 00:00:37.460
on interactive elements
inside of that tree.

12
00:00:37.460 --> 00:00:41.660
So if you add tabindex of -1 to
any links and buttons of things,

13
00:00:41.660 --> 00:00:45.930
that will make sure that you're not
landing on what we call ghost controls,

14
00:00:45.930 --> 00:00:49.160
which can be a huge pain cuz you're like,
why am I tabbing onto these things that

15
00:00:49.160 --> 00:00:51.900
aren't announcing anything
in the screen reader?

16
00:00:51.900 --> 00:00:54.450
A tool that I'm reaching for
a lot more because

17
00:00:54.450 --> 00:00:58.960
it's easier than managing aria-hidden and
tabindex is what is called a inert.

18
00:00:58.960 --> 00:01:02.002
It's an attribute that's
being proposed in HTML.

19
00:01:02.002 --> 00:01:03.161
There is a poly feel that you can use.

20
00:01:03.161 --> 00:01:07.592
And it's an an attribute you can
just put directly on an element and

21
00:01:07.592 --> 00:01:11.800
it will block those keyboard
interactions inside of a region.

22
00:01:11.800 --> 00:01:13.419
So it's just one attribute instead of two.

23
00:01:13.419 --> 00:01:18.344
And then the big one for disabling the
background would be displayed on like if

24
00:01:18.344 --> 00:01:21.072
you can actually like change the display,

25
00:01:21.072 --> 00:01:25.670
then it will just hide it from
everyone and that's the easiest.

26
00:01:25.670 --> 00:01:29.200
So let's look at why modal
layers are important.

27
00:01:29.200 --> 00:01:34.020
So I opened a screen curtain, it's like
the background layer of a modal window.

28
00:01:34.020 --> 00:01:36.450
But I haven't disabled
anything in the background.

29
00:01:36.450 --> 00:01:39.080
And I could still reach
that link back there.

30
00:01:39.080 --> 00:01:44.390
So if I had a modal on top of this,
maybe it has a form to subscribe.

31
00:01:44.390 --> 00:01:49.020
Or an alert that your login
session is about to timeout.

32
00:01:49.020 --> 00:01:54.490
If I haven't sent focus into the layer in
front, I could be stuck back behind it.

33
00:01:54.490 --> 00:01:58.405
And if I haven't disabled things in
the background with the aria-hidden and

34
00:01:58.405 --> 00:02:02.160
tabindex, that's when I can
get into these situations.

35
00:02:02.160 --> 00:02:07.500
So some patterns that this might
come up in dropdowns and menus.

36
00:02:07.500 --> 00:02:08.876
So we saw some dropdowns earlier,

37
00:02:08.876 --> 00:02:11.159
we wanna make sure we're
sending focus when those open.

38
00:02:11.159 --> 00:02:12.979
Menus and things are similar.

39
00:02:12.979 --> 00:02:19.140
Layers and models, if you have a whole
interface with layer sliding in.

40
00:02:19.140 --> 00:02:22.960
I had a really great example of
the Blackboard Learn application,

41
00:02:22.960 --> 00:02:24.060
they do a lot of that.

42
00:02:24.060 --> 00:02:27.808
Their free demo is no more,
so I can't show it to you.

43
00:02:27.808 --> 00:02:31.904
But there are a lot of web applications
that do that where the whole screen has

44
00:02:31.904 --> 00:02:33.312
these layers sliding in.

45
00:02:33.312 --> 00:02:36.849
And that's really critical to
disable those background layers.

46
00:02:38.250 --> 00:02:39.460
View changes and delete.

47
00:02:39.460 --> 00:02:41.520
So if you're sorting something and

48
00:02:41.520 --> 00:02:45.210
you want to delete an item,
you have to send focus somewhere or

49
00:02:45.210 --> 00:02:48.270
else it's just kinda dropped on
the floor depending on the browser.

50
00:02:48.270 --> 00:02:50.817
Or it might have to start over all
the way from the top of the page.

51
00:02:50.817 --> 00:02:53.010
And loading screens.

52
00:02:53.010 --> 00:02:56.500
If you have an interstitial,
you wanna send focus to that so

53
00:02:56.500 --> 00:02:58.380
that you're not stuck
back in that background.

54
00:03:00.530 --> 00:03:03.470
And a quick mention of interactions.

55
00:03:03.470 --> 00:03:09.010
So we saw on the New York Times' menu that
they used arrow keys, and those are links.

56
00:03:09.010 --> 00:03:12.490
So it's a bit subjective whether
you should use the Tab key or

57
00:03:12.490 --> 00:03:16.630
the arrow keys in these interactions
when you're in like a drop-down menu.

58
00:03:16.630 --> 00:03:21.220
And I just wanted to say that it depends
on what type of a pattern it is.

59
00:03:21.220 --> 00:03:25.310
And a resource that I really like for
testing patterns and

60
00:03:25.310 --> 00:03:28.880
as a good starting point are the ARIA
authoring practices guide.

61
00:03:28.880 --> 00:03:30.697
So they go through a lot of examples.

62
00:03:30.697 --> 00:03:36.879
A lot of mechanics of interactions,
what's expected, what's the convention.

63
00:03:36.879 --> 00:03:40.839
And so that is a whole wealth of
information that you can use when you're

64
00:03:40.839 --> 00:03:42.820
building these patterns later on.

65
00:03:44.250 --> 00:03:47.890
So links versus buttons,
this is another one that comes up a lot.

66
00:03:47.890 --> 00:03:53.900
So I wanted to mention that links
navigate and buttons do actions.

67
00:03:53.900 --> 00:03:59.160
So buttons kind of, I mean, there
a holdout from forms but we use them a lot

68
00:03:59.160 --> 00:04:04.124
in web applications where JavaScript
is a big part of the experience.

69
00:04:04.124 --> 00:04:07.280
And if it's not navigating
someone somewhere,

70
00:04:07.280 --> 00:04:09.780
a button might be the right way to go.

71
00:04:09.780 --> 00:04:11.090
I have an article that I wrote,

72
00:04:11.090 --> 00:04:14.460
called links vs buttons in modern
web applications on my website.

73
00:04:14.460 --> 00:04:16.430
You can go learn a bunch more about that.

74
00:04:16.430 --> 00:04:20.030
And the reason I mentioned that is that
when you're building a drop-down menu,

75
00:04:20.030 --> 00:04:21.310
whether it has links in it or

76
00:04:21.310 --> 00:04:25.740
buttons in it might, that might
alter the interaction a little bit.

77
00:04:25.740 --> 00:04:31.280
And it's always good to if you have that
setup, get some user testing to see like,

78
00:04:31.280 --> 00:04:32.460
is it confusing to people?

