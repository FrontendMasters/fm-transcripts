WEBVTT

1
00:00:00.040 --> 00:00:02.160
&gt;&gt; Marcy Sutton: So for
a progressive enhancement demo.

2
00:00:02.160 --> 00:00:06.120
Because Gatsby is doing this
automatically, I have to go and

3
00:00:06.120 --> 00:00:09.870
do a little bit more if I have
interactive things that I want to

4
00:00:09.870 --> 00:00:11.800
fall back more gracefully.

5
00:00:11.800 --> 00:00:17.870
So an example would be a tab switcher or a
menu, something that's really interactive

6
00:00:17.870 --> 00:00:23.370
and maybe it's collapsed by default and
you need JavaScript to open it.

7
00:00:23.370 --> 00:00:25.730
Those styles, like if CSS loads but

8
00:00:25.730 --> 00:00:29.900
JavaScript doesn't, that widget's
just locked up and no one can use it.

9
00:00:29.900 --> 00:00:33.890
So instead, if JavaScript's disabled,
what if it's just expanded by default?

10
00:00:33.890 --> 00:00:35.820
And that's just where I start with.

11
00:00:35.820 --> 00:00:40.310
So you start with this accessible
base line and then layer on top.

12
00:00:40.310 --> 00:00:43.310
But with Gatsby,
that's kind of not as intuitive.

13
00:00:43.310 --> 00:00:46.670
So in talking with the team about
how they would approach this,

14
00:00:46.670 --> 00:00:48.970
I came up with a pretty good pattern.

15
00:00:48.970 --> 00:00:51.430
So I'm going to go and implement this.

16
00:00:52.460 --> 00:00:53.500
Let's go back to our app.

17
00:00:54.690 --> 00:00:58.196
I have this section
called Enhanced Tablist.

18
00:00:58.196 --> 00:01:02.730
And it is blank right now cuz I'm gonna go
and write the bare bones like basics of

19
00:01:02.730 --> 00:01:08.010
how to actually override what
Gatsby is compiling by default.

20
00:01:08.010 --> 00:01:13.110
So I'm gonna go into
this enhanced tab list.

21
00:01:13.110 --> 00:01:17.170
It is pulling in the sort of shell of
a component called Enhancing List.

22
00:01:17.170 --> 00:01:19.670
And I'm gonna pass in a number of items.

23
00:01:19.670 --> 00:01:24.780
So the sort of conceptual basis for
this component would be a tab switcher

24
00:01:24.780 --> 00:01:27.630
that starts out life as
just a list of content.

25
00:01:28.870 --> 00:01:33.420
And so I'm going to go start
that in the components area.

26
00:01:33.420 --> 00:01:38.770
So I've got this TabList in here,
and it has a little

27
00:01:38.770 --> 00:01:44.080
bit of stuff in here by default,
things that I am really interested in.

28
00:01:44.080 --> 00:01:50.150
So this TabList,
it's using React State and then useEffect.

29
00:01:50.150 --> 00:01:53.280
So we used the useEffect Hook for

30
00:01:53.280 --> 00:01:56.723
things like sending focus to
the first item in the drop down.

31
00:01:56.723 --> 00:01:59.995
Sending that like click outside listener.

32
00:01:59.995 --> 00:02:04.510
In this case, when the JavaScript
downloads and executes, it's like,

33
00:02:04.510 --> 00:02:07.880
I have a handle on it,
now I have client rendered environment.

34
00:02:07.880 --> 00:02:10.000
Okay, now I can enhance things.

35
00:02:10.000 --> 00:02:11.130
Interesting.

36
00:02:11.130 --> 00:02:16.340
So if I use this useState Hook and
useEffect, I can go in here and

37
00:02:16.340 --> 00:02:20.880
do a little bit more work to actually
change how my layouts render.

38
00:02:20.880 --> 00:02:27.950
Okay, so let's start out here by adding
an unordered list, and this might be

39
00:02:27.950 --> 00:02:33.120
the markup that gets transformed into
something much more interactive later on.

40
00:02:33.120 --> 00:02:35.970
But I can go an use this logic.

41
00:02:35.970 --> 00:02:42.860
I'm gonna spread
the isClient state variable.

42
00:02:42.860 --> 00:02:46.880
And this is a really interesting trick
that I didn't know about before.

43
00:02:46.880 --> 00:02:53.300
I can say, if it's the client,
I can go and add an aria role.

44
00:02:53.300 --> 00:02:55.325
So I'm gonna add a role of TabList.

45
00:02:55.325 --> 00:03:00.199
This is only going to be added in
the client JavaScript part of my app.

46
00:03:00.199 --> 00:03:04.147
So if JavaScript is turned off, this
is just gonna be a regular owner list.

47
00:03:04.147 --> 00:03:07.873
Because if I'm adding aria roles and
aria states that required JavaScript to

48
00:03:07.873 --> 00:03:12.116
operate, and then someone turns JavaScript
off and turns on a screen reader, they're

49
00:03:12.116 --> 00:03:16.730
gonna be like, why is this thing called
the TabList when it's not interactive.

50
00:03:16.730 --> 00:03:19.060
So, that's why I'm making these changes.

51
00:03:19.060 --> 00:03:21.439
So I've got this list.

52
00:03:21.439 --> 00:03:24.458
I am going to iterate over the items.

53
00:03:24.458 --> 00:03:29.226
So the items that I was passing in
from the page where this is called,

54
00:03:29.226 --> 00:03:31.242
I'm gonna say items.map.

55
00:03:31.242 --> 00:03:37.969
I'm gonna pass in an item, and
that needs to go inside the parentheses.

56
00:03:40.440 --> 00:03:42.189
And I need to close it.

57
00:03:45.027 --> 00:03:46.090
&gt;&gt; Marcy Sutton: Didn't do this right.

58
00:03:46.090 --> 00:03:47.350
I'm gonna back up.

59
00:03:47.350 --> 00:03:51.560
So I normally put this like that.

60
00:03:51.560 --> 00:03:55.070
Okay, still need closing paren.

61
00:03:55.070 --> 00:03:58.180
I feel like something wrong here.

62
00:03:58.180 --> 00:04:03.980
Okay, it's because it just needs
to be a paren, not brackets, okay.

63
00:04:03.980 --> 00:04:05.260
Now, I've got my map function.

64
00:04:06.560 --> 00:04:10.570
Okay, so I'm gonna go in here and
do a really similar thing.

65
00:04:10.570 --> 00:04:15.550
I'm gonna say li.key,
because I'm iterating over these items.

66
00:04:16.580 --> 00:04:19.551
And I need some sort of
like a unique identifier or

67
00:04:19.551 --> 00:04:22.480
reaction that will complain at me.

68
00:04:22.480 --> 00:04:24.310
So I've got this list item here.

69
00:04:25.350 --> 00:04:31.140
And I'm gonna do the similar spread
of the isClient state variable.

70
00:04:31.140 --> 00:04:36.010
And I'm gonna do something, actually I
need to do this on the list item itself.

71
00:04:37.700 --> 00:04:42.620
So I'm gonna move this carrot and
I'm gonna say role of tab.

72
00:04:44.010 --> 00:04:48.950
So this will dynamically change what role,
and I can add aria here in a Gatsby

73
00:04:48.950 --> 00:04:53.400
environment, when otherwise it's
kind of abstracted away from me.

74
00:04:53.400 --> 00:04:57.450
So item.label is what I'm
gonna get from this component.

75
00:04:57.450 --> 00:05:00.473
Let me see what else I missed.

76
00:05:00.473 --> 00:05:02.310
&gt;&gt; Speaker 2: Your items is dot map.

77
00:05:02.310 --> 00:05:05.368
It has a opening curly burst.

78
00:05:05.368 --> 00:05:07.397
&gt;&gt; Speaker 3: A closing curly
burst after the right parentheses.

79
00:05:07.397 --> 00:05:08.650
&gt;&gt; Marcy Sutton: Here we go.

80
00:05:10.600 --> 00:05:11.640
Now, still not right.

81
00:05:11.640 --> 00:05:14.005
I need another closing print.

82
00:05:14.005 --> 00:05:18.560
Okay, yeah,
I'm in this JSX environment, and

83
00:05:18.560 --> 00:05:21.770
the way that you kind of toggle
between dynamic code and

84
00:05:21.770 --> 00:05:27.960
code that will output as HTML like this
ankle bracket UL is to use these curlies.

85
00:05:27.960 --> 00:05:30.550
I think we're just getting
in a part of the day when

86
00:05:30.550 --> 00:05:32.410
it's kinda getting hard to do it all.

87
00:05:32.410 --> 00:05:34.800
[LAUGH] So thanks for sticking with me.

88
00:05:34.800 --> 00:05:35.910
So I've got this item.

89
00:05:35.910 --> 00:05:37.390
It's iterating over these times.

90
00:05:37.390 --> 00:05:39.240
It's got a label in it.

91
00:05:40.260 --> 00:05:43.280
And that's pretty much
all I'm gonna add here.

92
00:05:43.280 --> 00:05:47.290
I just want to see it add these roles and
turn things on and off.

93
00:05:47.290 --> 00:05:50.860
So I'm gonna do something
super interesting and

94
00:05:50.860 --> 00:05:53.550
hope the demo gods work great here.

95
00:05:53.550 --> 00:05:55.091
I'm gonna do Gatsby Build.

96
00:05:55.091 --> 00:05:59.609
Actually gonna do a Gatsby Clean first
cuz I'm using Gatsby Themes, and

97
00:05:59.609 --> 00:06:01.470
those are MPM dependencies.

98
00:06:02.640 --> 00:06:05.180
So I need to blow that away sometimes.

99
00:06:05.180 --> 00:06:07.224
So Gatsby Build and Gatsby Serve.

100
00:06:07.224 --> 00:06:11.550
I'm gonna build it and it's going
to compile these web like this into

101
00:06:11.550 --> 00:06:16.470
an actual static site, that if I turn
off JavaScript, the pages will generate.

102
00:06:16.470 --> 00:06:18.994
And that's what I mentioned
earlier how Gatsby Develop and

103
00:06:18.994 --> 00:06:22.656
Gatsby Build differ develop
when you turn off JavaScript,

104
00:06:22.656 --> 00:06:27.880
cuz its development mode like you don't
need to build all that every time.

105
00:06:27.880 --> 00:06:30.640
But when you do run
Gatsby Build to deploy it,

106
00:06:30.640 --> 00:06:33.860
that's when you get like
full HTML static pages.

107
00:06:33.860 --> 00:06:38.220
And then if JavaScript is available,
it will execute client side scripts.

108
00:06:38.220 --> 00:06:42.230
So I'm building this right now, and then
I'm just gonna serve it in the browser and

109
00:06:42.230 --> 00:06:44.240
go turn off JavaScript.

110
00:06:44.240 --> 00:06:48.120
Will toggle it on and off and see what
effect that had on this little component.

111
00:06:50.110 --> 00:06:52.110
It takes a little bit
longer to build this, so

112
00:06:52.110 --> 00:06:57.540
maybe that'll paint the picture of
why developed mode is so useful.

113
00:06:57.540 --> 00:07:02.750
So this is the same site,
just running on local host 9000.

114
00:07:02.750 --> 00:07:06.900
And if I go to the enhanced TabList, so
it's like really straightforward markup,

115
00:07:06.900 --> 00:07:08.270
just to show.

116
00:07:08.270 --> 00:07:13.460
So here's our role RUI,
role of TabList, and role of Tab.

117
00:07:13.460 --> 00:07:18.040
So if I was making this into a full
accessible tab switcher, and

118
00:07:18.040 --> 00:07:21.240
I wanted something that worked without
JavaScript slightly differently,

119
00:07:21.240 --> 00:07:23.950
these are those hooks that I could use for
that.

120
00:07:23.950 --> 00:07:27.559
So I'm gonna go to Chrome settings.

121
00:07:28.650 --> 00:07:34.110
I gonna go turn JavaScript
off in my Advanced.

122
00:07:34.110 --> 00:07:37.248
They really don't want you to
turn JavaScript off do they?

123
00:07:37.248 --> 00:07:40.717
So JavaScript, turn it off.

124
00:07:40.717 --> 00:07:43.576
Let's go see what's happening here.

125
00:07:43.576 --> 00:07:44.989
That's 8000.

126
00:07:44.989 --> 00:07:46.347
I need 9000.

127
00:07:46.347 --> 00:07:48.830
So I'm gonna go inspect this markup again.

128
00:07:49.940 --> 00:07:55.300
And it's just the regular straightforward,
unordered list.

129
00:07:55.300 --> 00:08:01.270
And if I do, if I look at the view source,
there's a bunch of HTML.

130
00:08:01.270 --> 00:08:05.390
It's all minified because
that's faster for performance.

131
00:08:05.390 --> 00:08:07.860
So it might not be super human
readable but this is for

132
00:08:07.860 --> 00:08:09.660
machines to read not for humans to read.

133
00:08:09.660 --> 00:08:10.810
I think that's fine.

134
00:08:10.810 --> 00:08:13.840
You could use a purifier if
you really wanted to read it.

135
00:08:13.840 --> 00:08:15.920
Dev Tools is fine in my opinion.

136
00:08:15.920 --> 00:08:23.210
But if I go over to the local host,
the develop mode, it's a lot shorter.

137
00:08:23.210 --> 00:08:25.700
So that's fine for development mode.

138
00:08:25.700 --> 00:08:28.890
If you're doing things for progressive
enhancement, this does give you

139
00:08:28.890 --> 00:08:33.470
the control to actually change what
is output, which is pretty awesome.

140
00:08:33.470 --> 00:08:38.790
I had for other JavaScript frameworks
it's always like a whole system that

141
00:08:38.790 --> 00:08:44.150
you have to figure out, and then it gets
might be customed to every application.

142
00:08:44.150 --> 00:08:49.840
And this API, I find to get this
sweet spot in between like supporting

143
00:08:49.840 --> 00:08:54.720
progressive enhancement and static sites
and doing something really interactive.

144
00:08:54.720 --> 00:08:55.920
There's a lot of potential here.

145
00:08:57.140 --> 00:08:58.230
So we've got that working.

146
00:08:58.230 --> 00:09:02.490
Here's a the noScript I mentioned earlier.

147
00:09:02.490 --> 00:09:07.050
So if I inspect that, this is a noScript
element that just works in the browser.

148
00:09:07.050 --> 00:09:08.340
I didn't have to do anything for that.

149
00:09:09.570 --> 00:09:11.990
So that's how that works.

150
00:09:11.990 --> 00:09:17.158
I'm gonna go back to view as code and
I'm gonna clean it again.

151
00:09:19.771 --> 00:09:21.080
&gt;&gt; Marcy Sutton: I think
it didn't matter this time.

152
00:09:21.080 --> 00:09:23.920
So the reason I have to clean
is because when I deploy,

153
00:09:23.920 --> 00:09:26.230
I'm using this thing called prefix paths.

154
00:09:26.230 --> 00:09:30.530
So it actually builds
the site with a path prefix.

155
00:09:30.530 --> 00:09:33.350
So in GitHub,
it's the name of the repo, and

156
00:09:33.350 --> 00:09:36.290
that's a difference from
how I'm running it locally.

157
00:09:36.290 --> 00:09:40.440
And so sometimes you might
need to clean the cache.

158
00:09:40.440 --> 00:09:44.083
Little bit of back story while we're
getting this development mode back up.

