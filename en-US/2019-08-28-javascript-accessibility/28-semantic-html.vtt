WEBVTT

1
00:00:00.180 --> 00:00:03.880
&gt;&gt; Marcy Sutton: So let's move on to our
next major topic, which is Semantic HTML.

2
00:00:03.880 --> 00:00:07.392
In JavaScript applications,
I think because it's so

3
00:00:07.392 --> 00:00:10.062
easy to write markup in your JavaScript,

4
00:00:10.062 --> 00:00:14.895
sometimes people just aren't thinking
about, how to use semantic HTML.

5
00:00:14.895 --> 00:00:17.624
I've seen it on websites,
I've seen it in applications,

6
00:00:17.624 --> 00:00:19.600
it's just pretty common unfortunately.

7
00:00:19.600 --> 00:00:22.320
So we're gonna talk about semantics

8
00:00:22.320 --> 00:00:27.070
because of the the power that they
can bring to your all of your sites.

9
00:00:27.070 --> 00:00:30.430
And this is an important enough
accessibility basic that I wanted to bring

10
00:00:30.430 --> 00:00:34.960
it up because a lot of JavaScript
applications suffer from this.

11
00:00:34.960 --> 00:00:40.120
So some things that we should be
using our headings and landmarks.

12
00:00:40.120 --> 00:00:42.760
So headings like the H1
through H6 elements,

13
00:00:42.760 --> 00:00:47.560
we had that dynamic heading in
our skip link component earlier.

14
00:00:47.560 --> 00:00:51.090
Landmarks are things like HTML main,
nav, header.

15
00:00:52.290 --> 00:00:55.630
I've used them in the application
that we're working with today, so

16
00:00:55.630 --> 00:00:56.370
they're baked in.

17
00:00:57.460 --> 00:01:01.440
Another area of semantics is to
start with native UI controls, so

18
00:01:01.440 --> 00:01:05.680
if there is a select that you could use.

19
00:01:05.680 --> 00:01:09.440
The reason I showed you a drop down was
because those links inside of it are for

20
00:01:09.440 --> 00:01:10.530
navigation, and

21
00:01:10.530 --> 00:01:15.370
a select element is more of a form control
that's not really meant for navigation.

22
00:01:15.370 --> 00:01:19.470
But if you are doing something for
forms like if there is a native one,

23
00:01:19.470 --> 00:01:23.940
like a native text input, start there
because you get a lot for free.

24
00:01:23.940 --> 00:01:26.480
And you can build semantics
in your templates.

25
00:01:26.480 --> 00:01:30.860
We saw kind of poking around in this
Gatsby site that I had broken up my

26
00:01:30.860 --> 00:01:32.910
navigation from the header.

27
00:01:32.910 --> 00:01:37.450
And so you can kind of bake those
semantics into each component snippet or

28
00:01:37.450 --> 00:01:39.330
each template.

29
00:01:39.330 --> 00:01:42.530
And then every consumer of
that template will benefit.

30
00:01:42.530 --> 00:01:45.900
That's something that I've worked into
some of the Gatsby starter projects so

31
00:01:45.900 --> 00:01:49.650
that everyone's starting with those
will get some of that benefit.

32
00:01:49.650 --> 00:01:53.050
And then we want to verify that
the semantics that we've had is you're

33
00:01:53.050 --> 00:01:55.040
actually working in assistive technology,

34
00:01:55.040 --> 00:01:57.990
because that's where a lot
of the benefits come in.

35
00:01:57.990 --> 00:02:00.920
It's good for SEO,
it's good for reader modes.

36
00:02:00.920 --> 00:02:03.820
It's really good for
assistive technology output.

37
00:02:03.820 --> 00:02:08.960
And I have a link here from WebAIM that
stands for web accessibility in mind.

38
00:02:08.960 --> 00:02:12.920
All of their guides are fantastic, but the
one on semantic structure, I like a lot.

39
00:02:14.560 --> 00:02:19.140
So bit more about why this is important
if you can navigate through a web

40
00:02:19.140 --> 00:02:23.140
page by all the headings as a blind user,
that saves you a ton of time.

41
00:02:23.140 --> 00:02:25.520
I went back through my
notes from user testing.

42
00:02:25.520 --> 00:02:28.950
And some of the things that they had
mentioned was like, yeah, I like that this

43
00:02:28.950 --> 00:02:34.420
has headings because I can just hit the H
key and then VDA and navigate by headings.

44
00:02:34.420 --> 00:02:39.240
It also communicates to users of
assistive technology what's on the page.

45
00:02:39.240 --> 00:02:42.370
It could help for
things like conversational UI's.

46
00:02:42.370 --> 00:02:46.040
Ways to mark up pages so
that it's not what we call div soup.

47
00:02:47.590 --> 00:02:49.190
And things like search engines too.

48
00:02:50.490 --> 00:02:55.560
So some semantics in the wild, this is
a screenshot from the Event Apart website.

49
00:02:55.560 --> 00:02:59.790
They've used a section element here,
they've got ordered and unordered lists.

50
00:02:59.790 --> 00:03:04.620
There's a main element,
and so that's pretty easy.

51
00:03:04.620 --> 00:03:08.940
Like if you could swap out a div for
more semantic element that would be great.

52
00:03:08.940 --> 00:03:12.230
As a resource I really like
the Mozilla Developer Network.

53
00:03:12.230 --> 00:03:16.210
If I'm going to read about what,
what do I get from using this element,

54
00:03:16.210 --> 00:03:17.610
that's a good resource to look at it.

55
00:03:17.610 --> 00:03:21.020
And you can combine those semantics
with more modern layout tricks,

56
00:03:21.020 --> 00:03:23.960
like here they have
a section with display grid.

57
00:03:23.960 --> 00:03:27.992
And so I find that that combination of
writing accessible modern sites is just

58
00:03:27.992 --> 00:03:28.620
such a joy.

59
00:03:30.080 --> 00:03:34.330
So some tools for testing semantics
like to verify that output,

60
00:03:34.330 --> 00:03:39.230
because sometimes you can use a tool
before even firing up a screen reader.

61
00:03:39.230 --> 00:03:42.360
And it can get you pretty close
to verifying what's going on.

62
00:03:42.360 --> 00:03:46.350
Accessibility Insights has
a headings tool, so you can go and

63
00:03:46.350 --> 00:03:48.040
look at all the headings on the page.

64
00:03:48.040 --> 00:03:53.000
That's the one that has
the tab order tool as well.

65
00:03:53.000 --> 00:03:57.810
Another tool I really like for this is
the Firefox Web Developer Extension.

66
00:03:57.810 --> 00:04:01.940
It's an older extension that they've
kept up to date, it's pretty great.

67
00:04:01.940 --> 00:04:07.050
So some other tools that you could
use to test this would be NVDA's,

68
00:04:07.050 --> 00:04:09.460
they an elements list
that you can pull up.

69
00:04:09.460 --> 00:04:12.580
And the cheat sheet has the keyboard
commands for how to do that.

70
00:04:12.580 --> 00:04:17.520
Also, Voiceover has a thing called
the rotor, which is sort of the analagous

71
00:04:17.520 --> 00:04:21.780
thing in Voiceover that you can navigate
by headings, or navigate by form controls,

72
00:04:21.780 --> 00:04:25.630
or images, or whatever collection
of things you wanna navigate by.

73
00:04:25.630 --> 00:04:27.610
And so looking at semantics,

74
00:04:27.610 --> 00:04:31.650
that's an interesting way to do it
because if you pull up all the landmarks,

75
00:04:31.650 --> 00:04:35.720
you can especially in NVDA's
elements list or Voiceover's rotor.

76
00:04:35.720 --> 00:04:41.830
You can see like, okay, there's five nav
elements, and none of them are labeled.

77
00:04:41.830 --> 00:04:43.430
How do I know which nav is what?

78
00:04:43.430 --> 00:04:45.920
So maybe an aria label on
that element would help

79
00:04:45.920 --> 00:04:48.110
differentiate what these sections are.

80
00:04:48.110 --> 00:04:50.940
And then browsers reader modes,
you can go and check like.

81
00:04:50.940 --> 00:04:53.400
Okay, did I actually mark
this up with a list so

82
00:04:53.400 --> 00:04:57.040
that it has a,
list styling to it by default.

83
00:04:58.110 --> 00:05:00.070
So those are some tools for that.

84
00:05:00.070 --> 00:05:03.020
For the demo for semantics.

85
00:05:03.020 --> 00:05:04.900
I am going over the application.

86
00:05:04.900 --> 00:05:09.310
I have this layout example that shows

87
00:05:09.310 --> 00:05:14.770
some of the different markup that I could
have used like divs all the way down.

88
00:05:14.770 --> 00:05:18.060
Styling means that you could style
things however you want, but

89
00:05:18.060 --> 00:05:21.530
it's much better to use
these semantic elements

90
00:05:21.530 --> 00:05:24.480
just because of the accessibility
information that they provide.

91
00:05:24.480 --> 00:05:29.430
So like a header when we looked at
New York Times earlier and it said banner

92
00:05:29.430 --> 00:05:34.130
That's a header with a role of banner
which is supposed to be the top header.

93
00:05:34.130 --> 00:05:38.450
You can have this nav role of nav, so

94
00:05:38.450 --> 00:05:43.780
the elements like this header, main,
nav, they get those roles by default.

95
00:05:43.780 --> 00:05:48.370
I've added them on here just to show
like what their aria equivalents are.

96
00:05:48.370 --> 00:05:51.500
But you get those semantics by
default which is really cool.

