WEBVTT

1
00:00:00.201 --> 00:00:03.914
So the next place that we probably
wanna look at is go inside our for

2
00:00:03.914 --> 00:00:08.454
loop and actually kind of look at what
we're doing with these elements in here.

3
00:00:08.454 --> 00:00:13.185
For that actually, we're

4
00:00:13.185 --> 00:00:18.739
gonna add a class list on our list

5
00:00:18.739 --> 00:00:23.685
element and let's do that.

6
00:00:23.685 --> 00:00:28.750
So classList, And

7
00:00:28.750 --> 00:00:34.483
we add some dynamic classes here.

8
00:00:34.483 --> 00:00:38.203
Right now, we're just gonna add completed.

9
00:00:38.203 --> 00:00:44.784
And we're gonna say our element is
completed if todo.completed, right?

10
00:00:44.784 --> 00:00:49.892
So hopefully, now when we add
something like Learn Solid and

11
00:00:49.892 --> 00:00:54.007
we click on it,
our classes should be updating.

12
00:00:54.007 --> 00:00:56.573
Maybe I have to save the file first.

13
00:01:03.754 --> 00:01:05.041
Okay.

14
00:01:07.267 --> 00:01:09.705
Well, we've had the set completed first,
obviously.

15
00:01:09.705 --> 00:01:12.048
Sorry, got ahead of myself.

16
00:01:12.048 --> 00:01:14.504
So far, we were only adding the styling.

17
00:01:14.504 --> 00:01:19.160
So we actually have to set it up so
that when we click on our input on our

18
00:01:19.160 --> 00:01:22.858
check box,
we actually toggle the completed state.

19
00:01:22.858 --> 00:01:28.246
So, right, we need to first set

20
00:01:28.246 --> 00:01:35.042
its check state to be todo.completed.

21
00:01:35.042 --> 00:01:41.960
And then we should add an on input
handler to basically handle this.

22
00:01:41.960 --> 00:01:49.943
I'm going to just use a function in
here that's going to basically call,

23
00:01:49.943 --> 00:01:55.092
let's call toggle, for
lack of a better name,

24
00:01:55.092 --> 00:02:00.396
and we're gonna pass the to do.id to it,
okay?

25
00:02:00.396 --> 00:02:04.689
So we're gonna create a toggle function.

26
00:02:04.689 --> 00:02:07.635
And I'm just gonna do this top level.

27
00:02:07.635 --> 00:02:11.659
In different apps, you might necess
wherever you want to do it, but

28
00:02:11.659 --> 00:02:13.997
we have everything we need right here.

29
00:02:13.997 --> 00:02:18.981
So I'm just gonna go const
toggle equals function and

30
00:02:18.981 --> 00:02:21.646
it's gonna take todo.Id.

31
00:02:22.758 --> 00:02:26.396
And it's gonna do this.

32
00:02:26.396 --> 00:02:33.541
Now, there's different ways for
us to do this.

33
00:02:36.123 --> 00:02:37.020
Admittedly,

34
00:02:45.684 --> 00:02:50.614
What I'm gonna do right here though,
is I'm going to

35
00:02:50.614 --> 00:02:55.336
actually look up the todo
essentially in the list.

36
00:02:55.336 --> 00:03:03.180
It's not terribly tricky
here because the index and

37
00:03:03.180 --> 00:03:08.892
the ID aren't necessarily the same.

38
00:03:08.892 --> 00:03:12.944
We're gonna find it and replace it.

39
00:03:12.944 --> 00:03:14.948
We're gonna do this
differently by the end.

40
00:03:14.948 --> 00:03:20.039
Because ultimately, what we're gonna do
is we're gonna go through our todos and

41
00:03:20.039 --> 00:03:22.857
just switch the ones
that actually matched.

42
00:03:22.857 --> 00:03:30.619
So what I'm gonna do is
I'm gonna go todos and

43
00:03:30.619 --> 00:03:35.317
I'm gonna switch it with,

44
00:03:35.317 --> 00:03:42.481
let's go todos.map and remember todo.

45
00:03:42.481 --> 00:03:47.121
And then essentially,

46
00:03:47.121 --> 00:03:51.297
if todo.id not equal

47
00:03:51.297 --> 00:03:56.404
todoId then return todo.

48
00:03:56.404 --> 00:04:00.649
Otherwise, todo,

49
00:04:00.649 --> 00:04:06.394
we're returning spread,

50
00:04:06.394 --> 00:04:10.391
todoCompleted not

51
00:04:10.391 --> 00:04:17.143
todo.completed, all right.

52
00:04:24.203 --> 00:04:26.283
Refresh our app.

53
00:04:32.885 --> 00:04:36.552
And when we refresh,
we'll see that we're now

54
00:04:36.552 --> 00:04:41.144
properly changing the state and
updating our todo, okay?

55
00:04:41.144 --> 00:04:46.664
The other functionality
that we should probably

56
00:04:46.664 --> 00:04:52.049
add similarly is the ability
to remove a todo and

57
00:04:52.049 --> 00:04:55.022
it looks pretty similar.

58
00:04:55.022 --> 00:04:57.784
I'm gonna just go const remove.

59
00:04:57.784 --> 00:05:03.045
And again, it's gonna take a todoId and

60
00:05:03.045 --> 00:05:07.378
we're just gonna go set todos and

61
00:05:07.378 --> 00:05:11.883
this one's a little bit simpler.

62
00:05:11.883 --> 00:05:17.408
We can just filter out the todo

63
00:05:17.408 --> 00:05:21.393
that has the todoId.

64
00:05:22.525 --> 00:05:28.455
TodoId equals todoId.

65
00:05:30.553 --> 00:05:38.171
And, Remove where are we,

66
00:05:38.171 --> 00:05:43.489
yeah, destroy button onClick.

67
00:05:49.756 --> 00:05:56.830
Remove, and actually, no,
we wanna pass the idea in,

68
00:05:56.830 --> 00:06:03.615
so it's actually function remove todo.id,
okay?

69
00:06:03.615 --> 00:06:07.385
Do this, do this, hello.

70
00:06:15.323 --> 00:06:16.752
What's my error?

71
00:06:22.826 --> 00:06:23.875
A sanity check.

72
00:06:23.875 --> 00:06:26.588
Sometimes I get the filter backwards.

73
00:06:26.588 --> 00:06:31.842
This is like, that's exactly what it is.

74
00:06:31.842 --> 00:06:35.172
Yeah, it's not todoId.

75
00:06:35.172 --> 00:06:38.832
Some reason in my head,
yeah, it's this way.

76
00:06:38.832 --> 00:06:40.593
Okay, hello.

77
00:06:40.593 --> 00:06:48.398
This is the very basic kind of todo
mechanism that we have going on here.

78
00:06:48.398 --> 00:06:54.027
And let's see,
we can do a few other features.

79
00:06:54.027 --> 00:06:58.450
One of the other ones that I wanna add is

80
00:06:58.450 --> 00:07:04.531
the Select All which is we
need to kind of go back in and

81
00:07:04.531 --> 00:07:07.863
add one more input element.

82
00:07:07.863 --> 00:07:14.849
Essentially, it's in our section under
the show here, above here, okay.

83
00:07:14.849 --> 00:07:19.293
Actually, I actually missed
earlier one section,

84
00:07:19.293 --> 00:07:22.430
didn't really affect us very much.

85
00:07:22.430 --> 00:07:27.831
But there should actually
be a main section

86
00:07:27.831 --> 00:07:33.390
that wraps the whole UL and
the whole thing.

87
00:07:33.390 --> 00:07:39.360
So let's just close that section.

88
00:07:39.360 --> 00:07:46.336
All right, and inside the section,
there is an input.

89
00:07:48.006 --> 00:07:54.484
And this input, Has

90
00:07:54.484 --> 00:08:01.046
class equals toggle-all.

91
00:08:01.046 --> 00:08:03.012
And we're actually gonna add an ID for

92
00:08:03.012 --> 00:08:06.154
this because we're gonna actually
use a label here as well.

93
00:08:06.154 --> 00:08:11.122
So it's gonna have a toggle all IDX and

94
00:08:11.122 --> 00:08:16.099
we're gonna make it a type checkbox.

95
00:08:18.907 --> 00:08:24.514
And we will add the functionality
to it in just a second.

96
00:08:24.514 --> 00:08:29.362
Let's add the label first so
that we can see it.

97
00:08:29.362 --> 00:08:34.600
And this is simply label for again,

98
00:08:34.600 --> 00:08:41.240
for not HTML, for toggle-all, all right.

99
00:08:41.240 --> 00:08:44.985
If everything works well when I do Hello,

100
00:08:44.985 --> 00:08:49.907
we should now have a kind of
global check mark now that we

101
00:08:49.907 --> 00:08:54.090
can apply to our changes to,
to all the items.

102
00:08:54.090 --> 00:08:56.810
Okay, so, okay,

103
00:08:56.810 --> 00:09:01.742
let's add our next handler here,

104
00:09:01.742 --> 00:09:07.365
cuz on this input on input, we need to.

105
00:09:07.365 --> 00:09:13.385
So this is our input for the toggle-all,

106
00:09:13.385 --> 00:09:21.645
we need to add an event which
is going to let me think here.

107
00:09:21.645 --> 00:09:28.509
We'll just call it toggle-all and
we'll define it above.

108
00:09:28.509 --> 00:09:31.725
I think it's the easiest thing, okay.

109
00:09:31.725 --> 00:09:34.745
Cons, toggle-all.

110
00:09:40.108 --> 00:09:40.955
All right,

111
00:09:40.955 --> 00:09:46.305
the important part about this event is
we actually have to get the, sorry.

112
00:09:46.305 --> 00:09:47.978
We need the event here.

113
00:09:47.978 --> 00:09:52.195
We need to get the checked
state of the check box.

114
00:09:52.195 --> 00:09:58.974
So we're gonna grab that off
the target and target.checked.

115
00:09:58.974 --> 00:10:03.585
And then, from here, we can basically

116
00:10:03.585 --> 00:10:08.488
use the check state to swap them to match.

117
00:10:08.488 --> 00:10:14.972
So, Then we should

118
00:10:14.972 --> 00:10:20.244
be able to go set todos.

119
00:10:20.244 --> 00:10:27.652
And again, what we're gonna do is
we're gonna map the existing todos,

120
00:10:27.652 --> 00:10:31.788
essentially to what we're doing here.

121
00:10:33.660 --> 00:10:35.523
Honestly, I'm gonna get rid
of these cobras, sorry.

122
00:10:35.523 --> 00:10:39.862
This is one shot again todos.map.

123
00:10:39.862 --> 00:10:44.226
Todo, and
then it should just be a matter of

124
00:10:44.226 --> 00:10:48.849
switching it to whatever
the check state is.

125
00:10:48.849 --> 00:10:55.288
I'm actually gonna call this completed,
essentially.

126
00:10:55.288 --> 00:10:59.895
And we're just going to,
again spread the todo and

127
00:10:59.895 --> 00:11:04.302
change completed to completed,
essentially.

128
00:11:04.302 --> 00:11:05.905
Let's see you doing, right.

129
00:11:05.905 --> 00:11:10.880
Remember, parentheses around
this because otherwise,

130
00:11:10.880 --> 00:11:17.488
it thinks those curly braces are for
the function not for the object, right?

131
00:11:17.488 --> 00:11:22.573
And try this out.

132
00:11:22.573 --> 00:11:24.125
This isn't the full story though.

133
00:11:24.125 --> 00:11:27.117
Cuz while this will check properly and
uncheck properly,

134
00:11:27.117 --> 00:11:28.589
this is only half the story.

135
00:11:28.589 --> 00:11:30.391
Cuz when I check this, this isn't checked.

136
00:11:30.391 --> 00:11:37.193
So we now need to know how
to drive some state so

137
00:11:37.193 --> 00:11:45.255
that we can make sure that
our check counts are right.

138
00:11:45.255 --> 00:11:49.808
So what we're gonna do is this is our
first opportunity to use our next

139
00:11:49.808 --> 00:11:53.744
primitive cuz we did we did
create signal already, right?

140
00:11:53.744 --> 00:11:56.171
That was our first one.

141
00:11:56.171 --> 00:12:00.086
Let's make a remaining count,

142
00:12:00.086 --> 00:12:06.032
which we're gonna use create memo for
this one.

143
00:12:06.032 --> 00:12:11.759
And, yeah, let's see here what
do you wanna do create memo.

144
00:12:11.759 --> 00:12:17.376
We're going to basically compare.

145
00:12:17.376 --> 00:12:22.709
It's kind of brute force
way of doing it but

146
00:12:22.709 --> 00:12:28.190
we're gonna compare
the length of our todos

147
00:12:28.190 --> 00:12:33.537
versus filtering out the completed ones.

148
00:12:33.537 --> 00:12:38.370
Again, there's probably many

149
00:12:38.370 --> 00:12:43.024
different ways to do this, but

150
00:12:43.024 --> 00:12:48.752
I'm just gonna completed.length.

151
00:12:48.752 --> 00:12:50.537
It's complete for me.

152
00:12:50.537 --> 00:12:51.855
All right, and

153
00:12:51.855 --> 00:12:57.848
then our remaining count now should
be whether this is checked or not.

154
00:12:57.848 --> 00:13:04.078
So going down to that input,
checked is remaining count.

155
00:13:04.078 --> 00:13:08.899
Remaining count, all right.

156
00:13:13.212 --> 00:13:16.112
What have I broken, Jeremy?

157
00:13:16.112 --> 00:13:21.968
[LAUGH] All right, todos filter,
let's make sure all our brackets match.

158
00:13:21.968 --> 00:13:25.622
Do we have to return something, obviously?

159
00:13:25.622 --> 00:13:34.181
Again, yeah,
can I do this without returning something?

160
00:13:34.181 --> 00:13:35.695
There we go.

161
00:13:35.695 --> 00:13:38.025
Did I forget to import create memo or
something?

162
00:13:38.025 --> 00:13:40.068
I bet you that's 100.

163
00:13:40.068 --> 00:13:44.968
That is, Yep,

164
00:13:44.968 --> 00:13:50.293
100%, it says my biggest

165
00:13:50.293 --> 00:13:55.197
failing here, all right.

166
00:13:55.197 --> 00:13:59.209
So hopefully,
now when we create our Hello.

167
00:14:01.256 --> 00:14:08.030
It's backwards, okay,
as usual, it is backwards.

168
00:14:08.030 --> 00:14:10.067
Why is it backwards?

169
00:14:10.067 --> 00:14:11.856
Let's see why it's backwards.

170
00:14:22.261 --> 00:14:23.369
I guess it's probably,

171
00:14:23.369 --> 00:14:26.174
I was trying to decide if it's
a logic backwards that's here.

172
00:14:26.174 --> 00:14:33.729
But it's probably here that I wanna
do this, that's my gut, yeah.

173
00:14:38.979 --> 00:14:43.704
Just gonna double check that.

174
00:14:43.704 --> 00:14:45.723
Yeah, that was right.

175
00:14:45.723 --> 00:14:50.451
Okay, perfect, so here we go.

176
00:14:50.451 --> 00:14:52.426
Checked if we add more.

177
00:14:58.589 --> 00:15:02.613
Yeah, so we are properly working, okay.

