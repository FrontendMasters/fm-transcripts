WEBVTT

1
00:00:00.280 --> 00:00:05.130
I can already start seeing some of the
kind of building patterns here with Solid.

2
00:00:05.130 --> 00:00:08.743
I think there's a lot of
features in this demo.

3
00:00:08.743 --> 00:00:14.301
I think the other one that's actually
probably most important here,

4
00:00:14.301 --> 00:00:20.723
is our ability to filter the list based
on what's active and what's not active.

5
00:00:21.982 --> 00:00:29.058
So, I think that's probably where
I'm gonna leave the feature side and

6
00:00:29.058 --> 00:00:33.042
then we'll look a bit at what's
actually happening in the app and

7
00:00:33.042 --> 00:00:36.607
understand kinda reflect a bit
on Solid's reactivity here.

8
00:00:36.607 --> 00:00:44.900
So, let's see if we can add
our footer essentially.

9
00:00:44.900 --> 00:00:50.481
And this footer, it kinda sneaks in
underneath inside the show still,

10
00:00:50.481 --> 00:00:55.146
but it kinda sneaks in under
the section that we had before.

11
00:00:55.146 --> 00:00:56.912
We're gonna make a footer.

12
00:01:01.126 --> 00:01:08.034
With class="footer".

13
00:01:08.034 --> 00:01:13.922
And Now that we have remaining count,

14
00:01:13.922 --> 00:01:16.751
we can do a lot of cool stuff for
the rest of this.

15
00:01:16.751 --> 00:01:20.429
We can span with the class="todo-count".

16
00:01:20.429 --> 00:01:27.650
So, now, we'll be able to kinda show
how many we have left or whatnot.

17
00:01:27.650 --> 00:01:29.869
So what we're gonna do is strong.

18
00:01:36.361 --> 00:01:43.368
We're gonna go remainingCount and

19
00:01:43.368 --> 00:01:49.446
then we're gonna put in here.

20
00:01:49.446 --> 00:01:54.899
This is some kind of text formatting
stuff but for remainingCount equals one.

21
00:01:57.432 --> 00:02:05.050
We're gonna say, item, otherwise,
we'll leave space here.

22
00:02:05.050 --> 00:02:09.298
Otherwise, I don't know
why I chose to do those,

23
00:02:09.298 --> 00:02:14.772
it doesn't really matter which
quotes I use but let's do these.

24
00:02:14.772 --> 00:02:19.533
Item, otherwise, it's gonna say items.

25
00:02:21.798 --> 00:02:26.527
And then Left.

26
00:02:29.430 --> 00:02:32.373
So I don't know why I'm putting,
it's just,

27
00:02:41.360 --> 00:02:42.073
Perfect, okay?

28
00:02:42.073 --> 00:02:45.765
So now we're toggling and
we're getting our updated state.

29
00:02:45.765 --> 00:02:47.880
Two items, one item left.

30
00:02:47.880 --> 00:02:52.053
And then we're gonna add

31
00:02:55.132 --> 00:02:59.923
A UL here, an unordered list, and

32
00:02:59.923 --> 00:03:04.559
it's gonna have class filters.

33
00:03:05.720 --> 00:03:11.473
And, essentially,
each list item looks a bit like this.

34
00:03:11.473 --> 00:03:15.137
List item, and then

35
00:03:18.014 --> 00:03:24.900
We're gonna have an anchor tag
that is going to use hash state.

36
00:03:24.900 --> 00:03:29.233
So it's gonna have something like Active,
and

37
00:03:29.233 --> 00:03:36.613
then it's gonna have classList, which
is gonna indicate that it's selected.

38
00:03:36.613 --> 00:03:43.183
Again, object selected based on,

39
00:03:43.183 --> 00:03:48.880
let's just call it showMode.

40
00:03:48.880 --> 00:03:54.021
We don't have a name for this yet,
but we're gonna add that in a second.

41
00:03:54.021 --> 00:03:57.345
And showMode() === "active", essentially.

42
00:03:59.225 --> 00:04:05.746
So, let's create that signal so
it stops complaining at us a whole bunch.

43
00:04:05.746 --> 00:04:11.605
We, actually,
need to close the anchor before I'm done.

44
00:04:11.605 --> 00:04:17.107
So I'm gonna put all and
then close the anchor, okay.

45
00:04:21.406 --> 00:04:24.579
All right get it to format it for
me, okay.

46
00:04:24.579 --> 00:04:28.403
Yeah, interestingly enough, it's not
complaining at this not being defined

47
00:04:28.403 --> 00:04:32.011
as of yet but that's because we haven't
actually added in yet Todo items.

48
00:04:32.011 --> 00:04:37.382
So, we're gonna leverage that for
a second because,

49
00:04:37.382 --> 00:04:41.014
actually, slash is going to be all.

50
00:04:41.014 --> 00:04:46.361
And then we're going to basically
just copy this list item over and

51
00:04:46.361 --> 00:04:52.100
over again to add, basically,
the three different filters, right?

52
00:04:52.100 --> 00:04:55.140
There's All, there's Active.

53
00:04:57.513 --> 00:05:01.230
And the this is just Active.

54
00:05:01.230 --> 00:05:04.850
And then there, is it completed?

55
00:05:04.850 --> 00:05:07.109
Yeah, completed.

56
00:05:14.981 --> 00:05:15.733
All right.

57
00:05:18.987 --> 00:05:23.990
And let's see here.

58
00:05:23.990 --> 00:05:26.594
To wire this up,
we're gonna need another signal.

59
00:05:26.594 --> 00:05:33.978
We're gonna need to showMode,
const showMode, setShowMode.

60
00:05:33.978 --> 00:05:41.150
And we're gonna default to all,
I believe, yeah.

61
00:05:41.150 --> 00:05:46.232
And all we need to do here is we're gonna

62
00:05:46.232 --> 00:05:51.776
have to create an effect here, I believe,

63
00:05:51.776 --> 00:05:57.328
in order to handle
the hash state of the URL.

64
00:05:57.328 --> 00:06:02.330
We're also gonna create the filter itself
but we'll get to that in a moment.

65
00:06:02.330 --> 00:06:05.727
So, let's define.

66
00:06:05.727 --> 00:06:10.756
I'm gonna go down here above our JSX,

67
00:06:10.756 --> 00:06:15.000
kind of our handler here.

68
00:06:15.000 --> 00:06:18.838
So location, handler, let's call it.

69
00:06:18.838 --> 00:06:23.350
So this is gonna be the function we call,
is the event handler here.

70
00:06:23.350 --> 00:06:28.001
And we're going to simply
go setShowMode, and

71
00:06:28.001 --> 00:06:33.817
we're actually gonna be able
to get the current location,

72
00:06:33.817 --> 00:06:36.973
of the window location object.

73
00:06:36.973 --> 00:06:39.949
We're gonna look at the #,

74
00:06:39.949 --> 00:06:44.915
and we're gonna slice
the beginning off of it.

75
00:06:44.915 --> 00:06:47.055
And then basically if we
have something there,

76
00:06:47.055 --> 00:06:49.280
then we're gonna use
that to set the location.

77
00:06:49.280 --> 00:06:53.185
Otherwise, we're just gonna
set it by default to all.

78
00:06:53.185 --> 00:07:03.032
And we're going to
go window.addEventListener.

79
00:07:03.032 --> 00:07:05.850
That's gonna listen to
our "hashchange" event.

80
00:07:05.850 --> 00:07:11.970
And it's going to use our location
handler that we just wrote.

81
00:07:11.970 --> 00:07:16.871
And then being a good citizen here,
we're gonna clean up so

82
00:07:16.871 --> 00:07:20.215
that we can that's why we defined it separately.

83
00:07:20.215 --> 00:07:27.625
So that we can go window.removeEventListener
for "hashchange".

84
00:07:27.625 --> 00:07:32.708
We're gonna remove that,
remove our locationHandler.

85
00:07:32.708 --> 00:07:36.758
locationHandler, okay, and

86
00:07:36.758 --> 00:07:41.749
then we're gonna import onCleanup.

87
00:07:48.248 --> 00:07:52.032
And refresh this hopefully.

88
00:07:52.032 --> 00:07:55.820
Fun, code sandbox automatically
tried to import it for me.

89
00:07:55.820 --> 00:07:58.232
Okay, and.

90
00:08:01.812 --> 00:08:04.976
All right, now we have this and

91
00:08:04.976 --> 00:08:09.738
let's see what happens
when I add some stuff.

92
00:08:09.738 --> 00:08:12.610
So we're on all, so that's good so far.

93
00:08:12.610 --> 00:08:14.682
If I switched to active,
it's still there, that's good.

94
00:08:14.682 --> 00:08:17.034
But the problems we haven't
implemented the filter yet,

95
00:08:17.034 --> 00:08:19.000
but we at least have the controls.

96
00:08:19.000 --> 00:08:24.498
So, let's just continue onward and
implement our filter.

97
00:08:24.498 --> 00:08:27.998
So, hopefully, it just works for us.

98
00:08:27.998 --> 00:08:33.611
But, yeah, let's implement our filter.

99
00:08:33.611 --> 00:08:34.850
So, here we go.

100
00:08:34.850 --> 00:08:41.387
Const I'm gonna call this filterTodos,
okay?

101
00:08:41.387 --> 00:08:45.602
And it's gonna take a list of todos and,

102
00:08:45.602 --> 00:08:50.630
basically, it's gonna
just look at that state.

103
00:08:50.630 --> 00:08:58.177
So it's gonna go like
if showMode() === "active",

104
00:08:59.990 --> 00:09:05.778
Then we're gonna return todos().filter

105
00:09:05.778 --> 00:09:12.463
todo where it's not completed.

106
00:09:14.427 --> 00:09:18.786
Right, and, else if

107
00:09:18.786 --> 00:09:23.880
showMode() === "completed".

108
00:09:25.050 --> 00:09:28.368
We'll do basically exactly the opposite.

109
00:09:30.557 --> 00:09:31.642
Right.

110
00:09:33.823 --> 00:09:35.890
And todo's completed.

111
00:09:35.890 --> 00:09:39.929
And then finally, well,

112
00:09:39.929 --> 00:09:45.076
we can just return todos, okay.

113
00:09:45.076 --> 00:09:50.703
And then, our filterTodos,
we still wanna show this if

114
00:09:50.703 --> 00:09:56.490
there are any Todos cuz we
need to control the filters.

115
00:09:56.490 --> 00:10:00.675
But here we can just go

116
00:10:00.675 --> 00:10:04.657
filterTodos(todos()), all right?

117
00:10:04.657 --> 00:10:07.386
And if all is good and well,

118
00:10:07.386 --> 00:10:12.980
hopefully now we actually get
some more stuff going on.

119
00:10:12.980 --> 00:10:18.293
So I'm gonna cross one of these out and
if I go to Active, okay,

120
00:10:18.293 --> 00:10:24.200
we Do not have that working quite yet.

121
00:10:24.200 --> 00:10:26.924
But why don't we have
that working quite yet?

122
00:10:44.900 --> 00:10:47.223
Todo is not a function, beautiful.

123
00:10:49.780 --> 00:10:51.351
Why is todos is not a function?

124
00:10:54.825 --> 00:10:56.110
It's my mistake.

125
00:10:56.110 --> 00:11:01.252
We already resolved this in the view.

126
00:11:01.252 --> 00:11:03.350
We already passed the values through.

127
00:11:03.350 --> 00:11:09.561
So, Hello world.

128
00:11:32.586 --> 00:11:36.048
Okay, it's actually working.

129
00:11:36.048 --> 00:11:37.854
It's funny, little bit of a delay there.

130
00:11:37.854 --> 00:11:38.689
Okay, sweet.

131
00:11:38.689 --> 00:11:42.520
So All, Active, Completed.

132
00:11:43.820 --> 00:11:48.132
And we can see it'll toggle
through all of this, okay.

133
00:11:49.800 --> 00:11:56.650
All right, but a bit long session here
on the coding side but, hopefully,

134
00:11:56.650 --> 00:12:03.194
you can get a bit of an idea minus my
obvious stumbles here in a Stackblitz.

135
00:12:03.194 --> 00:12:07.035
But we have a basic working Todo example.

136
00:12:07.035 --> 00:12:10.452
I'm gonna add one last
feature to kind of finish it.

137
00:12:10.452 --> 00:12:15.402
We're not gonna do the Edit
we're going to just

138
00:12:15.402 --> 00:12:20.597
add the ability to clear
all the Todos in the list,

139
00:12:20.597 --> 00:12:25.548
which is fairly simple
feature that kind of sits

140
00:12:25.548 --> 00:12:29.654
at the very bottom of our section here.

141
00:12:29.654 --> 00:12:35.937
Still inside the show, still inside
the footer, right below this ul,

142
00:12:35.937 --> 00:12:40.984
we're just gonna to add another
show component cuz we only

143
00:12:40.984 --> 00:12:46.650
need to show it when there are Todos,
to actually remove.

144
00:12:46.650 --> 00:12:50.442
So I'm just gonna show, and

145
00:12:50.442 --> 00:12:56.446
I believe the logic here
is remainingCount,

146
00:12:56.446 --> 00:13:00.086
not equal todos().length.

147
00:13:01.882 --> 00:13:07.691
And if that's the case, cuz we only need
the clear Todos when there are those,

148
00:13:07.691 --> 00:13:11.317
we're gonna add a button
with "clear-completed".

149
00:13:12.891 --> 00:13:19.170
And then has an onClick={ clearCompleted },

150
00:13:19.170 --> 00:13:23.927
which we haven't implemented yet.

151
00:13:23.927 --> 00:13:30.958
And the, button, unsurprisingly
also says Clear completed, okay.

152
00:13:30.958 --> 00:13:34.685
So, let's implement our
clearCompleted function here.

153
00:13:36.005 --> 00:13:41.253
Add, remove, toggle, filter,
yeah, doesn't really

154
00:13:41.253 --> 00:13:46.937
matter where it's going out of here,
const clearCompleted.

155
00:13:46.937 --> 00:13:52.023
And this one, again,
should just be a setTodos

156
00:13:52.023 --> 00:13:57.248
function where we go
through our todos and

157
00:13:57.248 --> 00:14:03.868
we filter them based on the fact
that they are completed.

158
00:14:06.430 --> 00:14:13.459
I'm second guessing myself now cuz I
keep on messing with this but I think,

159
00:14:13.459 --> 00:14:18.493
yeah, we wanna keep the ones
that are not completed.

160
00:14:18.493 --> 00:14:25.745
So it's not todo.completed.

161
00:14:25.745 --> 00:14:33.290
So, if all of this is good,
we should be the go, Hello World.

162
00:14:34.590 --> 00:14:35.335
Click on this Completed.

163
00:14:35.335 --> 00:14:37.256
Now we have a Clear completed button.

164
00:14:37.256 --> 00:14:42.161
The styles are getting a little compressed
here but if we click Clear completed,

165
00:14:42.161 --> 00:14:45.852
it should just remove the one
that's completed, okay.

166
00:14:45.852 --> 00:14:51.087
So, yeah, this is about 90% of
the Todo MVC example we made.

