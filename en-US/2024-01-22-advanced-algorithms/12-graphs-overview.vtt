WEBVTT

1
00:00:00.111 --> 00:00:02.030
We just got done doing trees.

2
00:00:02.030 --> 00:00:03.633
Now, we're gonna do graphs, but

3
00:00:03.633 --> 00:00:06.854
what we're gonna be doing with
the graph is making trees out of them.

4
00:00:06.854 --> 00:00:10.630
So, we're not actually done with trees,
we're just done with binary search trees.

5
00:00:10.630 --> 00:00:14.661
We're gonna keep on doing tree time,
okay, everybody, tree time.

6
00:00:14.661 --> 00:00:16.590
All right, so what we're gonna do,
I want black.

7
00:00:18.080 --> 00:00:19.579
Have I used blue yet?

8
00:00:19.579 --> 00:00:21.306
Doesn't matter where you using black,
okay,

9
00:00:21.306 --> 00:00:23.043
so, we're gonna start
talking about graphs.

10
00:00:23.043 --> 00:00:27.328
Graphs are exciting,
they're extremely complicated.

11
00:00:27.328 --> 00:00:30.736
Whenever you're doing a graph algorithm,
it seems to be like you're not just doing

12
00:00:30.736 --> 00:00:33.377
one algorithm, you're just doing
lines of algorithms, okay?

13
00:00:33.377 --> 00:00:36.338
There's lots of lines of algorithms,
people are getting really excited,

14
00:00:36.338 --> 00:00:37.923
police are being called, it's crazy.

15
00:00:37.923 --> 00:00:40.284
So we're gonna start doing graph time fun.

16
00:00:40.284 --> 00:00:42.411
So let's talk about graphs for
a quick second.

17
00:00:42.411 --> 00:00:47.147
Graphs are fantastic,
this a was written shoddily, all right,

18
00:00:47.147 --> 00:00:49.224
better, but a little high.

19
00:00:49.224 --> 00:00:51.120
Okay, that's very optimistic for that a.

20
00:00:51.120 --> 00:00:56.054
So graphs, a couple terminologies,
we usually use Vs and Es for graphs.

21
00:00:56.054 --> 00:00:58.138
So Vs stands for vertex,

22
00:00:58.138 --> 00:01:03.306
which that means there are vertices,
and E stands for edges.

23
00:01:05.356 --> 00:01:07.727
Boom, we're about to
become edge-lords today.

24
00:01:07.727 --> 00:01:10.726
Pretty good joke, I thought it was good,
probably not that great, but I like it.

25
00:01:10.726 --> 00:01:13.743
Anyways, all right, so
now that we're doing that,

26
00:01:13.743 --> 00:01:18.048
there are two types of graphs when
we're talking about edges and vertices.

27
00:01:18.048 --> 00:01:19.986
Is this right here is just a graph.

28
00:01:19.986 --> 00:01:24.546
We'd call this an undirected graph,
meaning that A can go to B, B can go to A,

29
00:01:24.546 --> 00:01:28.985
there's no kind of like, hey,
you're only allowed to go one direction.

30
00:01:28.985 --> 00:01:33.967
So this would be C, this would be D,
so I can go B, A, C, D or D,

31
00:01:33.967 --> 00:01:35.764
C, B, A, or A then B.

32
00:01:35.764 --> 00:01:40.482
You can do either direction and
there's not a single problem here, right?

33
00:01:40.482 --> 00:01:46.359
That's called an undirected graph,

34
00:01:46.359 --> 00:01:54.818
undirected, meaning no
implied direction of edges.

35
00:01:54.818 --> 00:01:58.352
Implied is not the right word,
but you know what I mean.

36
00:01:58.352 --> 00:02:05.616
All right, so if I were to draw arrows,
this all of a sudden has a meaning now.

37
00:02:05.616 --> 00:02:08.986
This means that you can
only go from C to D.

38
00:02:08.986 --> 00:02:12.196
You can only go from A to C.

39
00:02:12.196 --> 00:02:15.616
You cannot go from A to B,
it's just not a thing, okay?

40
00:02:15.616 --> 00:02:19.119
Don't make fetch happen,
it's not happening, you can't do it, okay?

41
00:02:19.119 --> 00:02:22.810
And so, that means, sometimes graphs are
like this, and this makes a lot of sense

42
00:02:22.810 --> 00:02:26.302
because if you think about a lot of
real-world things, this is how it works.

43
00:02:26.302 --> 00:02:29.649
Like one way is on streets are directed
edges in which you can only go one

44
00:02:29.649 --> 00:02:33.358
direction another, was that one time I
went the wrong direction on a one way?

45
00:02:33.358 --> 00:02:37.122
You can, but it's really bad, okay,
if not a positive move at all.

46
00:02:37.122 --> 00:02:43.407
So directed means that you can only,
directed means, in other words, one way.

47
00:02:43.407 --> 00:02:45.526
Now, you can have a double direct, right?

48
00:02:45.526 --> 00:02:46.906
I can do something like that.

49
00:02:46.906 --> 00:02:49.922
And during today,
whenever we're doing directed graphs,

50
00:02:49.922 --> 00:02:53.376
I'll be writing it a specific way,
which will look like this.

51
00:02:53.376 --> 00:02:56.037
I'm just gonna erase this graph cuz it's
too hard to erase those little tiny,

52
00:02:56.037 --> 00:02:57.216
teeny little arrows.

53
00:02:57.216 --> 00:03:02.715
I'll go like this, A, B,
we're gonna mix them all up, C and D.

54
00:03:02.715 --> 00:03:06.338
When I do a direction,
I'm gonna do a single side direction.

55
00:03:06.338 --> 00:03:09.658
The reason why, is when I go the other
way, I can specify it like this.

56
00:03:09.658 --> 00:03:13.375
And if you were to write weights on it,
2 and 3, I can do that.

57
00:03:13.375 --> 00:03:17.683
It's kind of like a little old hand trick
to writing graphs because it can make it

58
00:03:17.683 --> 00:03:21.079
into a pretty compact representation,
pretty fantastic.

59
00:03:21.079 --> 00:03:22.527
Okay, you get the idea.

60
00:03:22.527 --> 00:03:23.529
But what the heck are these?

61
00:03:23.529 --> 00:03:29.451
Those are called weights, weights
are what it cost to traverse that edge.

62
00:03:29.451 --> 00:03:33.761
So you could imagine that if you were
doing Google Maps or something like that,

63
00:03:33.761 --> 00:03:37.288
you'd want to put the speed limit
potentially as the weight, or

64
00:03:37.288 --> 00:03:38.879
the distance as the weight.

65
00:03:38.879 --> 00:03:42.611
You'd have something that
represents traveling from D to A.

66
00:03:42.611 --> 00:03:48.892
Maybe you wanna put
the distance over speed, right?

67
00:03:48.892 --> 00:03:52.450
Because it is kind of a function of two
things, which also may have traffic and

68
00:03:52.450 --> 00:03:53.944
other things implied, right?

69
00:03:53.944 --> 00:03:57.859
That's how you construct a graph in
which now you're operating on a graph,

70
00:03:57.859 --> 00:03:59.878
doing these data structures on top of,

71
00:03:59.878 --> 00:04:02.956
such that you can move cars
efficiently through the graph.

72
00:04:02.956 --> 00:04:05.378
You get the idea, all right, fantastic.

73
00:04:05.378 --> 00:04:07.538
You guys are smart,
you guys are getting this.

74
00:04:07.538 --> 00:04:08.644
Is there anything else?

75
00:04:08.644 --> 00:04:09.144
Yeah.

76
00:04:10.428 --> 00:04:13.218
So if I were to draw this again,
what kind of graph is this?

77
00:04:14.698 --> 00:04:16.298
&gt;&gt; Undirected.

78
00:04:16.298 --> 00:04:19.683
&gt;&gt; Undirected weightless graph,
perfect, nailed it, first try.

79
00:04:19.683 --> 00:04:24.473
This right here, this is called a
connected component, meaning that I can go

80
00:04:24.473 --> 00:04:28.690
from A and visit every other node
within this connected component.

81
00:04:28.690 --> 00:04:33.057
So if I had a graph that had E over here
and F, and they're just like, F yeah,

82
00:04:33.057 --> 00:04:38.320
we're having a great time over here, two
connected components right here, right?

83
00:04:38.320 --> 00:04:42.003
You cannot go from E to B at any one
point, so connect to component one,

84
00:04:42.003 --> 00:04:43.447
connect to component two.

85
00:04:43.447 --> 00:04:47.489
All right, fun times.

86
00:04:47.489 --> 00:04:51.191
Just wanna make sure in case I use that
term, you kinda know what it means,

87
00:04:51.191 --> 00:04:52.524
it's kind of important.

