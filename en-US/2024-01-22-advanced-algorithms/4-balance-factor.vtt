WEBVTT

1
00:00:00.240 --> 00:00:03.570
So there are two primary ways
in which we fix this problem.

2
00:00:03.570 --> 00:00:06.300
Number one is an AVL tree.

3
00:00:06.300 --> 00:00:10.790
It is actually the oldest tree or
tree balancing algorithm out there.

4
00:00:10.790 --> 00:00:13.400
I don't know what A, V, or L stands for.

5
00:00:13.400 --> 00:00:16.279
But let's just pretend it's
really three people's names.

6
00:00:16.279 --> 00:00:19.457
That's really probably what it is or
it's probably two people with a dash name.

7
00:00:19.457 --> 00:00:22.673
We don't really know what's happening but
there's some combination there or

8
00:00:22.673 --> 00:00:25.937
somebody that named it after their full
name that would be super cool if it's just

9
00:00:25.937 --> 00:00:26.474
one person.

10
00:00:26.474 --> 00:00:30.566
I am Arthur Van Leuven side and then
the third AVL tree that's what I really

11
00:00:30.566 --> 00:00:34.357
hope happened but
I know it's not I know it's two people.

12
00:00:34.357 --> 00:00:36.657
Second, there is red black tree.

13
00:00:36.657 --> 00:00:41.081
Red black tree is kinda funny
because it was made, I believe, at,

14
00:00:41.081 --> 00:00:46.066
if I'm not mistaken, I think it's
something park, I think it's Xerox.

15
00:00:46.066 --> 00:00:50.783
Xerox was the place that started
the red black tree algorithm research.

16
00:00:50.783 --> 00:00:54.113
If I'm not mistaken, I forget the company,
but I'm pretty sure it's Xerox.

17
00:00:54.113 --> 00:00:59.246
And at that time, they only had printers
that could print well in red or

18
00:00:59.246 --> 00:01:05.164
black and so therefore while drawing it
out it became known as the red black tree.

19
00:01:05.164 --> 00:01:09.876
That's theory number one which they say
the creator said this was true the second

20
00:01:09.876 --> 00:01:13.825
one that they say is that the people
only had red and black markers and

21
00:01:13.825 --> 00:01:15.775
that's from the other creator.

22
00:01:15.775 --> 00:01:17.513
And so is this true?

23
00:01:17.513 --> 00:01:21.717
I don't know if it's true or not true and
I don't know which one's which but

24
00:01:21.717 --> 00:01:25.725
I love the fact that there are two
competing stories of either the printer

25
00:01:25.725 --> 00:01:29.582
company had a printer that only printed
red and black well or b [LAUGH].

26
00:01:29.582 --> 00:01:33.686
It was that they only had red and
black markers which just feels so

27
00:01:33.686 --> 00:01:35.662
good I just love it it's just so

28
00:01:35.662 --> 00:01:40.370
fantastic anyways fun little lore
about those two data structures.

29
00:01:40.370 --> 00:01:42.060
All right, so we're gonna cover AVL trees.

30
00:01:42.060 --> 00:01:44.656
AVL trees I think the most exciting.

31
00:01:44.656 --> 00:01:47.694
They're my favorite data
structure to ever implement and

32
00:01:47.694 --> 00:01:51.530
unfortunately my teacher wanted to
just kick us right in the shin.

33
00:01:51.530 --> 00:01:55.799
So what he did is that he said that you
cannot use recursion while implementing

34
00:01:55.799 --> 00:01:56.940
this AVL tree.

35
00:01:56.940 --> 00:02:00.992
So we had to do it with while loops and
all that, and it was super hard and

36
00:02:00.992 --> 00:02:04.792
it took me, gosh, I spent 40 hours
trying to do it all correct.

37
00:02:04.792 --> 00:02:07.126
And during the presentation to the TA,

38
00:02:07.126 --> 00:02:10.167
he asked it in such an order
that it didn't break but

39
00:02:10.167 --> 00:02:14.576
I did have one bug I never quite figured
out how to do it without recursion.

40
00:02:14.576 --> 00:02:18.269
It's very simple with recursion but
man, is it hard without recursion?

41
00:02:18.269 --> 00:02:20.584
Is just the worst
algorithm in the universe.

42
00:02:20.584 --> 00:02:24.860
So AVL works in such a way that it
rotates the tree every time there's

43
00:02:24.860 --> 00:02:26.745
a violation of the ordering.

44
00:02:26.745 --> 00:02:30.391
So how it knows the violation of
the ordering is it keeps something

45
00:02:30.391 --> 00:02:31.859
called a balance factor.

46
00:02:31.859 --> 00:02:39.092
And a balance factor must be between -1,
0, or 1.

47
00:02:39.092 --> 00:02:40.504
So what does that mean?

48
00:02:40.504 --> 00:02:42.934
Let's pretend we have the following tree.

49
00:02:44.284 --> 00:02:46.804
Again, I'm just not even gonna
write any node values here.

50
00:02:47.934 --> 00:02:51.714
I'm just going to just draw things and
we'll do the balance factor.

51
00:02:51.714 --> 00:02:54.024
This one right here has no children.

52
00:02:54.024 --> 00:02:56.344
So it has a height of 0 on either side.

53
00:02:56.344 --> 00:03:00.374
It has nothing.
So therefore, its balance factor is 0.

54
00:03:00.374 --> 00:03:02.204
It's perfectly in line.

55
00:03:02.204 --> 00:03:06.304
This one has one child to the left,
no children to the right.

56
00:03:06.304 --> 00:03:09.356
So typically how you're gonna do it,
which I think is the right way,

57
00:03:09.356 --> 00:03:13.334
people sometimes mix these up and you can
go left minus right or right minus left.

58
00:03:13.334 --> 00:03:14.808
It's totally right minus left.

59
00:03:14.808 --> 00:03:16.984
Never go left minus right,
I'll show you why.

60
00:03:16.984 --> 00:03:22.298
So we'll go,
right node height minus left node height.

61
00:03:22.298 --> 00:03:25.269
And why that is important is
that if you do it this way,

62
00:03:25.269 --> 00:03:28.618
negative numbers are to the left,
to the lesser side.

63
00:03:28.618 --> 00:03:30.620
Positive numbers are to the right,
the greater hand side.

64
00:03:30.620 --> 00:03:33.938
So it kinda matches the feel
of the binary tree.

65
00:03:33.938 --> 00:03:36.917
Therefore, unarguably this
is the correct way to do it.

66
00:03:36.917 --> 00:03:39.955
So don't ever listen to anyone that says
the moment they say it the other way,

67
00:03:39.955 --> 00:03:41.979
just, yeah,
just get them right out of the place.

68
00:03:41.979 --> 00:03:43.378
You don't wanna listen to them.

69
00:03:43.378 --> 00:03:46.288
So that means we have
a height on this side of 1.

70
00:03:46.288 --> 00:03:48.088
We have a height on this side of 0.

71
00:03:48.088 --> 00:03:52.628
Therefore we have a negative 1 or
a left leaning note.

72
00:03:52.628 --> 00:03:53.498
We do it again.

73
00:03:53.498 --> 00:03:55.732
On this side, we have a 2.

74
00:03:55.732 --> 00:03:56.579
What do we have on the side?

75
00:03:56.579 --> 00:04:01.415
Well, we have 0 0 0, we have- 1,
0, -1, we have 2, 2, 0.

76
00:04:01.415 --> 00:04:07.330
Now we start seeing the balance factor,
meaning that if I were to add one right

77
00:04:07.330 --> 00:04:14.385
here, we would then go to a 0 right here,
but this top one does not change at all.

78
00:04:14.385 --> 00:04:16.295
We still remain within balance.

79
00:04:16.295 --> 00:04:19.944
If I were to do one more on this side,

80
00:04:19.944 --> 00:04:25.298
we would then get to 00001112 positive 1,

81
00:04:25.298 --> 00:04:29.688
and then we get 3 or 2, 3, positive 1.

82
00:04:29.688 --> 00:04:33.282
We are now a right leaning
tree at this point.

83
00:04:33.282 --> 00:04:37.423
And if we were to add one more,
we would start causing violations.

84
00:04:37.423 --> 00:04:38.105
So let's just do it.

85
00:04:38.105 --> 00:04:40.319
We're violating, here we go.

86
00:04:40.319 --> 00:04:41.443
Let's add one more.

87
00:04:41.443 --> 00:04:48.246
So we go 000011022.

88
00:04:48.246 --> 00:04:53.521
So this is where the violation starts and
this is what we need to fix.

89
00:04:53.521 --> 00:04:57.505
And so this is the idea of the AVL trees
that will start fixing right here.

90
00:04:57.505 --> 00:05:00.949
Now when we fix this,
it makes cause another violation so

91
00:05:00.949 --> 00:05:04.877
we have to keep walking up and
doing potential rotations.

92
00:05:04.877 --> 00:05:08.853
As we go all the way up the tree, you'll
never have to like descend into other

93
00:05:08.853 --> 00:05:11.167
areas, you just simply only walk upwards.

94
00:05:12.647 --> 00:05:16.587
All right, so
we're gonna do this in a very simple way.

95
00:05:16.587 --> 00:05:17.877
Let's just do a bunch of notes.

96
00:05:17.877 --> 00:05:22.598
I'm gonna go like this 42, 69 and
420 and we're gonna insert these into

97
00:05:22.598 --> 00:05:26.763
the tree in particular orders, and
we'll have to shape these trees.

98
00:05:26.763 --> 00:05:29.214
Okay, so we're gonna start with case one.

99
00:05:29.214 --> 00:05:33.435
If I started by inserting 42, then 69.

100
00:05:33.435 --> 00:05:35.428
&gt;&gt; Nice.

101
00:05:35.428 --> 00:05:36.593
&gt;&gt; Very good.
Thank you.

102
00:05:36.593 --> 00:05:40.213
And then for 420,
we would now hit a violation.

103
00:05:40.213 --> 00:05:46.773
Cuz at this point we are 0,
0, 0, 0, 1, 1, 0, 2, 2.

104
00:05:46.773 --> 00:05:50.709
We have now violated, are we within
our balance factor allowance?

105
00:05:50.709 --> 00:05:51.479
No.

106
00:05:51.479 --> 00:05:52.659
No, we are not.

107
00:05:52.659 --> 00:05:57.339
We must change it.
So this people call it an RR rotation.

108
00:05:57.339 --> 00:06:02.230
I don't really like this term because
even though it is right leaning,

109
00:06:02.230 --> 00:06:05.013
right leaning, you do a left rotation.

110
00:06:05.013 --> 00:06:08.666
I don't know why it's called an RR
rotation, I think this is the the lean and

111
00:06:08.666 --> 00:06:13.095
we need to rotate out of it, I've never
liked it, but it's very very simple.

112
00:06:13.095 --> 00:06:18.939
All you do is drop down the 42,
break link, create link.

113
00:06:18.939 --> 00:06:23.483
Now balance factor 0 0 0 0 0 0 0 or

114
00:06:23.483 --> 00:06:30.020
1 1 0 we've now created
a balanced tree right here.

115
00:06:30.020 --> 00:06:32.965
So we can do the other side as well, so

116
00:06:32.965 --> 00:06:39.157
let's just pretend we inserted 420
then 69 all right and then 42.

117
00:06:39.157 --> 00:06:42.868
All right, so
now that we have that we calculated

118
00:06:42.868 --> 00:06:49.854
0,0,0,1,0,-1,2,0,-2 the balance
where are we going out of control?

119
00:06:49.854 --> 00:06:54.726
Well, you can tell how we're
leaning again by the numbers sign.

120
00:06:54.726 --> 00:06:59.415
So this one is leaning left, leaning left,

121
00:06:59.415 --> 00:07:02.726
or an LL cake the L-Rotation.

122
00:07:02.726 --> 00:07:03.744
All right, awesome.

123
00:07:03.744 --> 00:07:07.190
So now we need to do the same thing,
but we need to do it to the right.

124
00:07:07.190 --> 00:07:10.847
We are gonna rotate to
the right exact same thing.

125
00:07:10.847 --> 00:07:12.952
Drop this thing down.

126
00:07:16.191 --> 00:07:16.730
Awesome.

127
00:07:16.730 --> 00:07:23.520
So now we have 0, 0, 0, 0,0, 0, 1, 1, 0.

128
00:07:23.520 --> 00:07:26.780
Now we have a proper again,
balanced binary tree.

129
00:07:26.780 --> 00:07:30.627
So it get's a little bit harder now
when we go to the next two cases,

130
00:07:30.627 --> 00:07:35.350
these are called double rotation cases,
the double entendre of AVL trees.

131
00:07:35.350 --> 00:07:38.063
And so if we started with 69 first and
then let's say,

132
00:07:38.063 --> 00:07:39.983
we don't wanna start with 69 first.

133
00:07:39.983 --> 00:07:42.154
That would just be absolutely terrible.

134
00:07:42.154 --> 00:07:43.554
Never get anywhere with that.

135
00:07:43.554 --> 00:07:50.588
We're gonna actually start with 420
first then we're gonna do sorry,

136
00:07:50.588 --> 00:07:55.069
I almost broke the thing then 42, then 69.

137
00:07:55.069 --> 00:08:02.312
Now this one we got 0,
0, 0, 0, 1, 1, 2, 0, -2.

138
00:08:02.312 --> 00:08:07.247
Notice that we have a left-leaning,
right-leaning situation.

139
00:08:07.247 --> 00:08:11.085
We have an LR rotation we need to do.

140
00:08:11.085 --> 00:08:13.045
Now this one's a touch more complicated.

141
00:08:13.045 --> 00:08:16.035
We start down here and
we do a rotation this way.

142
00:08:16.035 --> 00:08:19.227
Then we finish it off with
the classic double L rotation.

143
00:08:19.227 --> 00:08:20.645
We already know the double L-Rotation.

144
00:08:20.645 --> 00:08:22.296
So let's look at this little one.

145
00:08:22.296 --> 00:08:26.471
The little one,
we're gonna move the 42 out here.

146
00:08:26.471 --> 00:08:30.479
And then we're gonna bring up the 69.

147
00:08:30.479 --> 00:08:32.360
So that means we look like this.

148
00:08:32.360 --> 00:08:36.587
So now we're gonna 0,0,0,1,0,-1,2, 0,

149
00:08:36.587 --> 00:08:41.497
-2, we've just created a rotation
we already know how to handle.

150
00:08:41.497 --> 00:08:46.117
So then after we start here we rotate
here, we go up, we rotate here, so

151
00:08:46.117 --> 00:08:48.883
pretty straightforward rotations.

152
00:08:48.883 --> 00:08:54.492
And the exact same thing can hold true on
the other side, we can do a 42, a 420 and

153
00:08:54.492 --> 00:08:59.718
a 69, and that would lead us to a 0,0,
0, 1, 0, -1, 0, 2, 2.

154
00:08:59.718 --> 00:09:07.315
In other words,
a right-left rotation is needed.

155
00:09:07.315 --> 00:09:10.439
So we'd have to do the small
followed by the big,

156
00:09:10.439 --> 00:09:15.486
which means we're gonna have to move
the 420 out here and bring up the 69.

157
00:09:15.486 --> 00:09:18.417
I'm actually at the edge
of the screen right now.

158
00:09:18.417 --> 00:09:19.636
It's very exciting.

159
00:09:19.636 --> 00:09:21.000
Very exciting right now,.

160
00:09:21.000 --> 00:09:27.080
So 69 would go right here, and
there we go so now we have 0, 0, 0 ,0,

161
00:09:27.080 --> 00:09:33.641
1, 0, 2, 2, which means now we just
drop down the 42, and now we have 0,

162
00:09:33.641 --> 00:09:40.136
0, 0, make that link happen get rid of
that thing, and now we have 1, 1 0.

163
00:09:40.136 --> 00:09:42.290
We have balanced the tree.

164
00:09:42.290 --> 00:09:46.052
Now you're probably asking me,
okay, this sounds really nice, but

165
00:09:46.052 --> 00:09:48.600
what happened if they all have children?

166
00:09:48.600 --> 00:09:51.310
Wouldn't that make the rotations really,
really hard?

167
00:09:51.310 --> 00:09:54.008
Cuz it seems easy when you
just do simple problems,

168
00:09:54.008 --> 00:09:59.050
but the moment you don't do simple
problems, it gets excessively hard, right?

169
00:09:59.050 --> 00:10:01.843
Wrong, it's actually not all that
hard been why did you guys fall for

170
00:10:01.843 --> 00:10:03.107
the easiest trick in the book?

171
00:10:03.107 --> 00:10:04.776
Okay, we're gonna erase all this.

172
00:10:04.776 --> 00:10:05.786
Just get them all out of here.

173
00:10:06.936 --> 00:10:08.866
Everyone has the rotations
locked in the brain.

174
00:10:09.936 --> 00:10:13.726
Yet long as you follow the rule,
the rotations are not hard.

175
00:10:13.726 --> 00:10:16.916
Just always think of the rule and
what that means in placement.

176
00:10:16.916 --> 00:10:17.847
So let's look at this.

177
00:10:17.847 --> 00:10:25.406
I'm gonna have A, I'm gonna have B, I'm
gonna have C, and then I'm gonna have AR.

178
00:10:25.406 --> 00:10:32.966
Almost put L BR Brazilian mentioned,
and then we're gonna have C L, CR.

179
00:10:32.966 --> 00:10:35.961
So now let's do the rotation
here cuz at this point,

180
00:10:35.961 --> 00:10:41.901
we're gonna just pretend at 0,0,0,1,0,
-1 and then it's going to be 2 0,-2, okay?

181
00:10:41.901 --> 00:10:43.466
We're just gonna pretend
it's those numbers.

182
00:10:43.466 --> 00:10:44.544
It doesn't really matter.

183
00:10:44.544 --> 00:10:46.594
Inflate them to make it all work out.

184
00:10:46.594 --> 00:10:49.314
We need a left left rotation here, okay?

185
00:10:49.314 --> 00:10:49.862
Boom, we're gonna do this.

186
00:10:49.862 --> 00:10:55.400
So typically, you'd wanna bring down A but
now we have all these kids, right?

187
00:10:55.400 --> 00:10:57.227
Look at the poor Brazil.

188
00:10:57.227 --> 00:10:58.434
What are we gonna do with this one?

189
00:10:58.434 --> 00:10:59.902
We what do we do.

190
00:10:59.902 --> 00:11:01.451
Well, remember, what's the rule?

191
00:11:01.451 --> 00:11:05.345
What can we say about BR in relation to A?

192
00:11:05.345 --> 00:11:07.015
&gt;&gt; It's less than.

193
00:11:07.015 --> 00:11:11.479
&gt;&gt; It's less than, beautiful, kerchow.

194
00:11:11.479 --> 00:11:13.295
Brazil moved A here.

195
00:11:13.295 --> 00:11:16.045
What can we say about AR in relation to A?

196
00:11:16.045 --> 00:11:16.755
&gt;&gt; It's greater than.

197
00:11:16.755 --> 00:11:19.495
&gt;&gt; It's greater than, AR.

198
00:11:19.495 --> 00:11:20.552
What do we need to do with C?

199
00:11:21.932 --> 00:11:22.782
Nothing.

200
00:11:22.782 --> 00:11:23.622
It's great.

201
00:11:23.622 --> 00:11:24.342
It's beautiful.

202
00:11:24.342 --> 00:11:31.384
Therefore, 0000 or 110000,
it's now balanced, it's fantastic.

203
00:11:31.384 --> 00:11:34.683
We just did it without having
to do anything fantastic here.

204
00:11:34.683 --> 00:11:38.888
So you can see it's really not that
hard long as you focus on the rule.

205
00:11:38.888 --> 00:11:40.264
This is the most important,
Important part.

206
00:11:40.264 --> 00:11:42.640
If it's not in your head,
everything feels hard.

