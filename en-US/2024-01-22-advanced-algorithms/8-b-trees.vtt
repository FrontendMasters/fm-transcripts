WEBVTT

1
00:00:00.000 --> 00:00:05.630
And so, this is where the idea of
a B-tree comes into play, all right?

2
00:00:05.630 --> 00:00:06.843
Why do they call them B-trees?

3
00:00:06.843 --> 00:00:10.876
I actually don't know why it's
called specifically a B-tree.

4
00:00:10.876 --> 00:00:12.832
I didn't look it up, never really
read about it, or I don't remember.

5
00:00:12.832 --> 00:00:14.221
Not really sure why.

6
00:00:14.221 --> 00:00:19.337
People say they have really great
applications in database indexing.

7
00:00:19.337 --> 00:00:23.204
It used to be for disk clap hairs when he
has to look up stuff, and so that's why

8
00:00:23.204 --> 00:00:27.088
when you looked up stuff, you could
have the minimal amount of disk reading.

9
00:00:27.088 --> 00:00:30.893
i know we don't do disk reading a lot of
Zoomers are not even sure what a disk is,

10
00:00:30.893 --> 00:00:32.983
it used to happen all the time, all right?

11
00:00:32.983 --> 00:00:33.775
It was a real thing.

12
00:00:33.775 --> 00:00:36.501
We had a disk when we were young.

13
00:00:36.501 --> 00:00:38.529
So it is, all right?

14
00:00:38.529 --> 00:00:42.097
So There's a couple rules to a B-tree.

15
00:00:42.097 --> 00:00:46.228
Now I've heard people specify
it in two different ways,

16
00:00:46.228 --> 00:00:48.805
the minimum order or the order.

17
00:00:48.805 --> 00:00:50.764
I did not spell order right upstairs.

18
00:00:50.764 --> 00:00:51.678
There we go.

19
00:00:51.678 --> 00:00:53.781
We're not gonna do the minimum order,
we're gonna just do the order.

20
00:00:53.781 --> 00:00:58.975
I think it's probably easier to think of
it in the minimum order, but think for

21
00:00:58.975 --> 00:01:04.185
the most part, most content I've ever
seen has always specified it as order.

22
00:01:04.185 --> 00:01:07.442
So we're gonna stay there.
So this is called an order of the tree.

23
00:01:07.442 --> 00:01:12.403
So an order of the tree is the maxed
number of children that can exist

24
00:01:12.403 --> 00:01:13.210
in a tree.

25
00:01:13.210 --> 00:01:18.303
So if we have an order of 5,
that means our

26
00:01:18.303 --> 00:01:23.986
child max is 5,
which means our key max is 4.

27
00:01:23.986 --> 00:01:29.156
Cuz remember, actually,
as you very observantly pointed out,

28
00:01:29.156 --> 00:01:32.732
there's always plus 1 children for x keys.

29
00:01:32.732 --> 00:01:37.548
So this is true, but there's also
a minimum requirement in a B-tree.

30
00:01:37.548 --> 00:01:42.732
A minimum requirement,
the Kmin is going to

31
00:01:42.732 --> 00:01:48.345
be the ceiling of your
order divided by 2 -1.

32
00:01:48.345 --> 00:01:52.170
So that would be 3 -1 or 2.

33
00:01:52.170 --> 00:01:59.495
Every node must have 2 keys, which means
the child minimum must be 3, all right?

34
00:01:59.495 --> 00:02:03.035
Because there's always a plus one for
your amount of keys.

35
00:02:03.035 --> 00:02:04.010
So these are the four rules.

36
00:02:04.010 --> 00:02:08.757
Now, there is one node that gets to
break this rule, which is, okay,

37
00:02:08.757 --> 00:02:10.853
someone got confused by this.

38
00:02:10.853 --> 00:02:12.739
Here, hold on.

39
00:02:12.739 --> 00:02:14.210
I'll just make sure we're
not confused by this.

40
00:02:14.210 --> 00:02:19.664
K minimum is your order
divided by 2 ceiling.

41
00:02:19.664 --> 00:02:24.021
Ceiling simply means that if it's 3.1,
the answer is 4, all right?

42
00:02:24.021 --> 00:02:27.108
So it's integer division,
the other direction.

43
00:02:27.108 --> 00:02:31.040
So that would be 2.5,
the ceiling of 2.5, which is 3,

44
00:02:31.040 --> 00:02:33.320
then you minus the 1, which is 2.

45
00:02:33.320 --> 00:02:37.712
So that means your children
min is going to be 3.

46
00:02:37.712 --> 00:02:39.403
I used to chat to help me with this.

47
00:02:39.403 --> 00:02:43.517
It's very good to know when people
get confused on these little things.

48
00:02:43.517 --> 00:02:46.633
Because sometimes it's easy to
breeze by little details and

49
00:02:46.633 --> 00:02:49.806
then you just ruin it for
everybody for the rest of the time, so

50
00:02:49.806 --> 00:02:52.081
this is a very important
thing to remember.

51
00:02:52.081 --> 00:02:53.995
So I'm just gonna put
a little two right here.

52
00:02:53.995 --> 00:02:55.567
So there you go.

53
00:02:55.567 --> 00:03:00.114
If you have an order 4 it would
slightly change everything.

54
00:03:00.114 --> 00:03:06.172
The key minimum would be 1, because of
course the ceiling of 4 divided by 2 is 2.

55
00:03:06.172 --> 00:03:08.756
Then you got a -1, you'd have 1.

56
00:03:08.756 --> 00:03:11.052
That means our children
minimum would be a 2.

57
00:03:11.052 --> 00:03:15.789
That means our children max would be a 3,
or I mean, our key max would be a 3, and

58
00:03:15.789 --> 00:03:20.039
our children max would be a 4,
which means that we would have a 2, a 3 or

59
00:03:20.039 --> 00:03:22.391
a 4 amount of children at any one node.

60
00:03:22.391 --> 00:03:25.175
And this is a special tree called a 2,
3, 4 tree.

61
00:03:25.175 --> 00:03:27.458
You've probably seen or
heard that term at some point.

62
00:03:27.458 --> 00:03:29.303
That's where the name comes from.

63
00:03:29.303 --> 00:03:31.679
It's the amount of potential
children that can be had.

64
00:03:31.679 --> 00:03:35.158
It's not minimum, max key, max children.

65
00:03:35.158 --> 00:03:37.094
It's just the amount of
children you can have.

66
00:03:37.094 --> 00:03:38.208
Okay, good times.

67
00:03:38.208 --> 00:03:41.379
So we'll stick with order 5 for now.

68
00:03:41.379 --> 00:03:44.075
So I'll just, yeah, get rid of those.

69
00:03:44.075 --> 00:03:49.053
Again, 5 max children which is gonna
be 5-1 max keys, which is gonna be 3

70
00:03:49.053 --> 00:03:53.893
children which is gonna of course be
3-1 keys or how did I arrive to that?

71
00:03:53.893 --> 00:04:00.284
Again, 5/ 2-1 ceiling of
that it is [SOUND] 2.

72
00:04:00.284 --> 00:04:01.975
Okay, now that we got that.

73
00:04:01.975 --> 00:04:07.770
A unique property about B-trees
is that they grow upwards.

74
00:04:07.770 --> 00:04:09.627
Okay, it's the only tree in
computer science that grows up.

75
00:04:09.627 --> 00:04:11.411
The rest of them, they all grow downwards.

76
00:04:11.411 --> 00:04:14.393
But this one, we grow upwards,
which just makes it more exciting.

77
00:04:14.393 --> 00:04:16.725
And one more rule, I think I said
this already, just verbally,

78
00:04:16.725 --> 00:04:17.771
I just want to write it down.

79
00:04:17.771 --> 00:04:20.745
The root can have one child.

80
00:04:20.745 --> 00:04:24.548
It can have one key, or no sorry,
the root can have one key.

81
00:04:24.548 --> 00:04:29.228
It's the only one that can break the lower
bound rule because it makes sense,

82
00:04:29.228 --> 00:04:29.954
all right?

83
00:04:29.954 --> 00:04:34.935
If I were to insert 10 into an empty tree,
there's just 10.

84
00:04:34.935 --> 00:04:38.753
The root has to be able to
violate the minimum key rule or

85
00:04:38.753 --> 00:04:40.915
else you could not construct.

86
00:04:40.915 --> 00:04:42.754
All right, everyone feels good about that?

87
00:04:42.754 --> 00:04:43.916
We're feeling good?

88
00:04:43.916 --> 00:04:45.220
&gt;&gt; I have a question.

89
00:04:45.220 --> 00:04:52.315
Wouldn't the ceiling division -1 basically
be the same as a floor division?

90
00:04:52.315 --> 00:04:54.161
&gt;&gt; No.

91
00:04:54.161 --> 00:04:57.311
So if we did a floor division instead,
5/2, or

92
00:04:57.311 --> 00:05:02.422
really this is called integer division,
you would actually get 2, all right?

93
00:05:02.422 --> 00:05:06.368
So then 2- 1 means that our minimum
key would be 1 instead of 2.

94
00:05:06.368 --> 00:05:11.087
&gt;&gt; All right, but taking away the -1,
&gt;&gt; Taking away the -1?

95
00:05:11.087 --> 00:05:15.657
Also no,
because then if you did an even number,

96
00:05:15.657 --> 00:05:21.348
the floor on that one is 2, and
the ceiling on that one is 2.

97
00:05:21.348 --> 00:05:22.991
&gt;&gt; Okay.

98
00:05:22.991 --> 00:05:25.561
&gt;&gt; Because there's no
remainder at that point.

99
00:05:25.561 --> 00:05:30.086
So without any remainder, so even numbers,
the floor and the seal are the same thing.

100
00:05:30.086 --> 00:05:31.055
I usually call it a seal.

101
00:05:31.055 --> 00:05:33.674
And in my head I hear [SOUND]
I just think it's funny.

102
00:05:33.674 --> 00:05:35.162
So the seal is that way.

103
00:05:35.162 --> 00:05:36.664
I don't know why I'm telling anybody that.

104
00:05:36.664 --> 00:05:38.637
It's how I live my life.

105
00:05:38.637 --> 00:05:41.275
Okay, 2 there we go.

