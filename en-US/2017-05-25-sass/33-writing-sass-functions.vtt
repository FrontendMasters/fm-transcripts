WEBVTT

1
00:00:00.270 --> 00:00:05.184
&gt;&gt; Mike: And we're gonna go over the last
topic of the day which is writing

2
00:00:05.184 --> 00:00:07.102
our own Sass functions.

3
00:00:07.102 --> 00:00:11.850
This is the most advanced we're
going to get into the Sass world.

4
00:00:11.850 --> 00:00:18.500
So the function declaration lets
us define things that take in

5
00:00:18.500 --> 00:00:25.380
values in a similar way that we're used
to seeing mix ins receive arguments.

6
00:00:25.380 --> 00:00:30.206
Except that this has a return declaration

7
00:00:30.206 --> 00:00:35.870
that lets us return a value based on
the calculation of the inputs and

8
00:00:35.870 --> 00:00:38.380
potentially bringing globals
into it as well, right?

9
00:00:38.380 --> 00:00:40.652
So if there were a global variable,
like in this case.

10
00:00:40.652 --> 00:00:46.600
I've got w, I might use that
inside double, I totally could.

11
00:00:46.600 --> 00:00:47.730
In this case I'm not.

12
00:00:47.730 --> 00:00:49.960
In this case this is like a pure function.

13
00:00:49.960 --> 00:00:53.552
The outputs are strictly
expressed in terms of inputs.

14
00:00:53.552 --> 00:00:57.660
And you see here you get
the expected result.

15
00:00:57.660 --> 00:00:59.310
So here I can define my own function.

16
00:00:59.310 --> 00:01:04.110
This one's a little pointless cuz I
could just do 2x next to both of these

17
00:01:04.110 --> 00:01:05.800
width usages.

18
00:01:05.800 --> 00:01:09.000
Or next to the one on the bottom,
I should say.

19
00:01:09.000 --> 00:01:10.400
But let's look at another one.

20
00:01:10.400 --> 00:01:16.370
So this I've made up something that's
a little bit convoluted but interesting.

21
00:01:16.370 --> 00:01:21.002
So I tried to make something that would
find the biggest color channel of

22
00:01:21.002 --> 00:01:25.788
a color and then give you back something
that had that same channel value on

23
00:01:25.788 --> 00:01:29.124
the maximum one and
then reduce the other two to 0.

24
00:01:29.124 --> 00:01:33.251
So if you give me something with a lot of
blue in it, I would give you something

25
00:01:33.251 --> 00:01:36.364
that had the same blue value,
with red and green to zero.

26
00:01:36.364 --> 00:01:40.946
So you can see, I use the SASS
color functions red, green, and

27
00:01:40.946 --> 00:01:44.020
blue to extract the color channels.

28
00:01:44.020 --> 00:01:49.320
Then I use if to try to find if we're in
a situation where r is the biggest or

29
00:01:49.320 --> 00:01:52.500
g is the biggest,
otherwise I assume blue is the biggest.

30
00:01:52.500 --> 00:01:56.470
And I return a color with that
highest channel value and

31
00:01:56.470 --> 00:01:59.060
the other two channels at zero.

32
00:01:59.060 --> 00:02:04.490
And the way you could use this is the same
way we've been using our Sass functions

33
00:02:04.490 --> 00:02:07.520
that come with the library itself.

34
00:02:07.520 --> 00:02:09.930
And so here, I'm passing in a blue,

35
00:02:09.930 --> 00:02:12.680
something that has a lot of red in it and
then a green.

36
00:02:12.680 --> 00:02:15.690
And you can see if you can
read the SASS values here,

37
00:02:15.690 --> 00:02:21.030
you can see that it ends up creating
something that is only blue,

38
00:02:21.030 --> 00:02:26.050
only red and only green with the other
two channels being reduced to zero.

