WEBVTT

1
00:00:00.190 --> 00:00:03.040
&gt;&gt; Mike North: Let's jump in and
talk about SASS origins.

2
00:00:03.040 --> 00:00:08.308
This is the gentleman who
first invented SASS, Hampton,

3
00:00:08.308 --> 00:00:13.350
who is also responsible for
a library called HAML.

4
00:00:13.350 --> 00:00:20.260
And if you had been playing with Ruby on
Rails in 2007, 2008 sometime around there,

5
00:00:20.260 --> 00:00:25.294
this was a very popular
way of expressing HTML or

6
00:00:25.294 --> 00:00:29.950
HTML-ish stuff using whitespace

7
00:00:29.950 --> 00:00:34.590
to indent things instead of
a hierarchy of nested XML tags.

8
00:00:35.900 --> 00:00:40.660
So later on, we had two other
people join the SASS core team,

9
00:00:40.660 --> 00:00:45.456
Chris Eppstein, who works at LinkedIn,
and Natalie, who works at Google.

10
00:00:45.456 --> 00:00:49.370
By and large, Chris and
Natalie are responsible for

11
00:00:49.370 --> 00:00:50.820
maintaining the code base today.

12
00:00:50.820 --> 00:00:55.540
They're the more active contributors,
but the three of them put together

13
00:00:55.540 --> 00:00:59.250
are responsible for
sort of charting the course forward and

14
00:00:59.250 --> 00:01:02.980
deciding that whether things should
be brought into the SASS library or

15
00:01:02.980 --> 00:01:07.090
should remain as extensions that you
can layer on in separate libraries.

16
00:01:08.360 --> 00:01:15.050
Now, HAML, being something that's
sort of at the root of SASS,

17
00:01:15.050 --> 00:01:20.690
it's sort of part of the genealogy
of SaaS, we end up with an HAML-like

18
00:01:20.690 --> 00:01:26.020
syntax in addition to something that
looks a little bit more like CSS.

19
00:01:26.020 --> 00:01:30.690
So on the right, we have a file
called styles.sass, and on the left,

20
00:01:30.690 --> 00:01:35.932
we have the same file
with a scss extension.

21
00:01:35.932 --> 00:01:41.730
And while both of these do work,
and will continue to work,

22
00:01:41.730 --> 00:01:47.450
the SCSS file format which stands for
Sassy CSS,

23
00:01:48.670 --> 00:01:53.140
that is, by and large,
way more popular, and it

24
00:01:54.180 --> 00:01:59.350
is increasing in popularity
just because it's very easy

25
00:01:59.350 --> 00:02:04.440
to start with the CSS file, change the
name of the extension to that file name,

26
00:02:04.440 --> 00:02:08.820
and you can start to layer on new,
more powerful concepts from there on out.

27
00:02:09.860 --> 00:02:10.700
Right.
So for

28
00:02:10.700 --> 00:02:13.470
today, whenever we talk about a SASS file,

29
00:02:13.470 --> 00:02:17.540
we're not talking about something
that has the extension sass.

30
00:02:17.540 --> 00:02:19.212
We're just going to be working with this.

31
00:02:19.212 --> 00:02:22.030
We're gonna pretend that
the other doesn't exist.

32
00:02:22.030 --> 00:02:23.573
It works.
It will continue to work.

33
00:02:23.573 --> 00:02:27.121
There's a strong commitment
from the core team,

34
00:02:27.121 --> 00:02:32.800
that they're not going to break those
older indent-based file formats.

35
00:02:32.800 --> 00:02:36.900
But just to make things a little bit more
approachable for those that are not used

36
00:02:36.900 --> 00:02:43.860
to tabs and spaces having meaning in their
source code, we'll stick with this today.

37
00:02:45.160 --> 00:02:48.700
And just so
we can get some terminology straight,

38
00:02:48.700 --> 00:02:50.850
let's sort of dissect what
we're looking at here.

39
00:02:52.220 --> 00:02:55.250
So first,
we've got something called a selector.

40
00:02:56.490 --> 00:03:02.750
This tells us where this CSS rule
we have on the screen applies.

41
00:03:02.750 --> 00:03:05.910
This is gonna apply to the foo class.

42
00:03:05.910 --> 00:03:09.792
So if we had a div with the class foo,
this rule would apply to that.

43
00:03:09.792 --> 00:03:13.887
We've got something called
the declaration block, and

44
00:03:13.887 --> 00:03:16.793
this is where style declarations live.

45
00:03:16.793 --> 00:03:20.399
So each one of these lines in
the declaration block is called

46
00:03:20.399 --> 00:03:24.740
a style declaration, and they
are comprised of a property and a value.

47
00:03:26.140 --> 00:03:30.530
So these are the kinds of names I'm
gonna be calling things today, just so

48
00:03:30.530 --> 00:03:31.980
that we have our terminology straight.

49
00:03:34.170 --> 00:03:37.290
So let's jump in and look at an example.

50
00:03:37.290 --> 00:03:42.275
And starting with vanilla CSS, let's start
to one by one layer some concepts up until

51
00:03:42.275 --> 00:03:45.819
we get into something that looks
a little bit more powerful.

52
00:03:47.040 --> 00:03:52.650
The first thing we're gonna deal with is
something called nesting and scoping.

53
00:03:52.650 --> 00:03:57.328
And to aid in this discussion,
let's use an example of

54
00:03:57.328 --> 00:04:03.960
a fixed-width sidebar to the left of some
area where we've got some main content.

55
00:04:03.960 --> 00:04:06.759
So this would be sort of
the WordPress kind of layout.

56
00:04:08.300 --> 00:04:12.880
We could define the CSS for
this layout as follows.

57
00:04:14.180 --> 00:04:19.070
This container div which
wraps the main content,

58
00:04:19.070 --> 00:04:23.860
you can see that at maximum,
it's gonna end up at 600 pixels wide.

59
00:04:23.860 --> 00:04:25.420
When it reaches that maximum width,

60
00:04:25.420 --> 00:04:29.006
it will sort of be centered on the page
because we've got margin: auto.

61
00:04:29.006 --> 00:04:33.890
Less than 600-pixel width, so
when we start to look at a mobile layout,

62
00:04:33.890 --> 00:04:35.930
we'll take up the whole
width of the screen.

63
00:04:35.930 --> 00:04:38.550
That's where that width:
100% will help us.

64
00:04:38.550 --> 00:04:39.940
And we give it a background color.

65
00:04:40.980 --> 00:04:46.800
We add a 10-pixel padding to both
the sidebar and the main element, and

66
00:04:46.800 --> 00:04:52.660
then the main element, we're going
to give a left margin sufficient

67
00:04:52.660 --> 00:04:57.470
to make room for the sidebar,
that's where that 220 pixel comes from.

68
00:04:58.600 --> 00:05:01.980
The minimum height of 100vh,
that's what makes it so

69
00:05:01.980 --> 00:05:06.750
that if we have a very small amount
of content in our main content area,

70
00:05:06.750 --> 00:05:10.780
that div doesn't end up being very small,
shrinking to fit our content.

71
00:05:10.780 --> 00:05:14.575
It will be the full height
of the page at minimum, and

72
00:05:14.575 --> 00:05:17.280
will grow if our content needs it to grow.

73
00:05:18.656 --> 00:05:20.900
Finally, we give ourselves
a little border so

74
00:05:20.900 --> 00:05:25.090
that we can tell the difference between
the main nav and the sidebar, and

75
00:05:25.090 --> 00:05:29.920
then the sidebar is gonna always be 200
pixels wide and it will float left.

76
00:05:29.920 --> 00:05:35.440
So this is a lot of text for
defining these styles.

77
00:05:35.440 --> 00:05:39.290
We could do something similar with SASS,
like this.

78
00:05:39.290 --> 00:05:44.340
So one of the things that SASS gives
us is the ability to nest style rules

79
00:05:44.340 --> 00:05:49.570
inside the declaration
block of a parent rule.

80
00:05:49.570 --> 00:05:53.450
So in this case, you can see
that we've scoped some rules for

81
00:05:53.450 --> 00:05:57.990
the sidebar for
the div we're calling main.

82
00:05:57.990 --> 00:06:01.560
We've scoped them so
that they only apply within the container.

83
00:06:01.560 --> 00:06:06.660
This is the equivalent SASS to the CSS
that I showed you on the previous page.

84
00:06:06.660 --> 00:06:12.735
The same rules apply as they do in CSS,

85
00:06:12.735 --> 00:06:17.585
where rules that are defined later
take precedence on rules that

86
00:06:17.585 --> 00:06:21.935
are defined earlier, and specificity still
applies exactly the same as it would,

87
00:06:21.935 --> 00:06:25.915
because ultimately, this ends up becoming
CSS in its process from top to bottom.

88
00:06:27.600 --> 00:06:32.360
So, we've already consolidated
things quite a bit here, and

89
00:06:32.360 --> 00:06:35.060
one of the advantages
that we've been able to

90
00:06:36.580 --> 00:06:40.770
get is that, there's a little typo here.

91
00:06:40.770 --> 00:06:46.120
I've made a mistake, having to type
container over and over and over again.

92
00:06:46.120 --> 00:06:50.700
This is a very real problem
that pops up in apps a lot.

93
00:06:50.700 --> 00:06:54.050
And you don't end up really
into this as much in SASS,

94
00:06:54.050 --> 00:06:56.704
because typically,
you're defining things once.

95
00:06:56.704 --> 00:07:00.180
And so a large portion of
your style would not work

96
00:07:00.180 --> 00:07:04.820
if you misspelled something because it
would be like the parent element is just

97
00:07:04.820 --> 00:07:09.810
not applying at all because nothing
matches it or any child selectors.

98
00:07:09.810 --> 00:07:15.130
Whereas here, it would be really easy
to kind of, maybe on some browsers,

99
00:07:15.130 --> 00:07:18.370
you get a default padding of 10 pixels,
and so it looked okay there,

100
00:07:18.370 --> 00:07:20.750
but other browsers,
you may not be so lucky.

101
00:07:23.150 --> 00:07:29.490
So, what we've described here is
something called descendant style rules.

102
00:07:29.490 --> 00:07:34.899
And this simply means
that we can define styles

103
00:07:34.899 --> 00:07:40.318
on a left-area div that
is inside container.

104
00:07:40.318 --> 00:07:46.914
It is a child or a grandchild, it is
somewhere inside this other parent div.

105
00:07:46.914 --> 00:07:51.936
And you can see here,
this rule we've defined will apply to both

106
00:07:51.936 --> 00:07:56.689
of the colorized left-areas you
see in the HTML to the left.

107
00:07:56.689 --> 00:08:02.565
In CSS ,we also have little operators,
like the direct descendant selector,

108
00:08:02.565 --> 00:08:07.739
which would basically constrain this to,
say, only left-area divs

109
00:08:07.739 --> 00:08:12.930
that are immediate children,
of the container div she get the style.

110
00:08:14.100 --> 00:08:16.540
The style rule should only apply to those.

111
00:08:16.540 --> 00:08:19.260
And you can see here that
we're able to just put those.

112
00:08:19.260 --> 00:08:23.080
You can actually make it either
part of the child selector,

113
00:08:23.080 --> 00:08:27.610
as we've written here on the slide, or you
could put it in the parent selector and

114
00:08:27.610 --> 00:08:32.100
just have .left-area inside
the declaration block.

115
00:08:32.100 --> 00:08:36.150
The downside there would be that
everything inside that declaration block

116
00:08:36.150 --> 00:08:39.700
would be taken as a direct
descendant selector.

117
00:08:39.700 --> 00:08:44.802
So you don't see that as often because it
sort of eliminates some flexibility for

118
00:08:44.802 --> 00:08:51.479
what you can specify within that scope.
&gt;&gt; Mike North: Let's

119
00:08:51.479 --> 00:08:56.969
look an enhancement we can make to this
layout, where adding the right-nav

120
00:08:56.969 --> 00:09:02.050
class to the div would move the sidebar
from the left over to the right.

121
00:09:03.410 --> 00:09:08.170
So we could make use of what's called
the parent selector in this case,

122
00:09:08.170 --> 00:09:14.560
which is the and sign, and
that refers to the name of whatever

123
00:09:14.560 --> 00:09:20.490
selector defines the declaration block
you're currently in is associated with.

124
00:09:20.490 --> 00:09:24.140
So in this case,
it's going to be .container.

125
00:09:24.140 --> 00:09:25.430
So the style on the left,

126
00:09:25.430 --> 00:09:30.890
the SASS on the left will be compiled
into the CSS you see on the right.

127
00:09:30.890 --> 00:09:36.658
And this is really useful in terms
of defining what we're gonna look at

128
00:09:36.658 --> 00:09:42.053
when we start talking about
these would be modifiers.

129
00:09:42.053 --> 00:09:42.558
Right.

130
00:09:42.558 --> 00:09:44.710
This is a great example of a modifier,
by the way.

131
00:09:44.710 --> 00:09:48.922
What we're saying, it's sort of
a flag that we can turn on for

132
00:09:48.922 --> 00:09:53.944
this particular chunk of HTML, and
it will alter either the way it looks or

133
00:09:53.944 --> 00:09:59.353
the way it behaves.
&gt;&gt; Mike North: So,

134
00:09:59.353 --> 00:10:03.880
we can also use the parent selector,
and this is less commonly seen.

135
00:10:03.880 --> 00:10:11.000
We can also use the parent selector to
scope certain rules to an outer class.

136
00:10:11.000 --> 00:10:14.150
In this case, we've got theme-dark, and

137
00:10:14.150 --> 00:10:18.240
then the ampersand sign following that,
the and sign following that.

138
00:10:18.240 --> 00:10:23.180
On the right, you can see what that
let's us do is express a rule in

139
00:10:23.180 --> 00:10:28.090
terms of a class being applied
outside of the parent scope.

140
00:10:28.090 --> 00:10:31.183
Right?
This is great for theming, and this is,

141
00:10:31.183 --> 00:10:35.338
in my opinion, an underutilized
use of the parent selector

142
00:10:35.338 --> 00:10:39.669
here.
&gt;&gt; Mike North: So with that,

143
00:10:39.669 --> 00:10:46.224
we're gonna jump in and start writing
some code that makes use of the parent

144
00:10:46.224 --> 00:10:50.232
selector and nesting inside scopes.
&gt;&gt; Audience 1: Mike,

145
00:10:50.232 --> 00:10:53.420
just a quick question from online.
&gt;&gt; Mike North: Yes.

146
00:10:53.420 --> 00:10:54.270
&gt;&gt; Audience 1: So for

147
00:10:54.270 --> 00:10:58.710
SCSS, can you drop the braces?

148
00:10:59.860 --> 00:11:03.990
I think there's some confusion between
the difference between SCSS and

149
00:11:03.990 --> 00:11:07.101
CSS, just to be clear.
&gt;&gt; Mike North: So in SCSS,

150
00:11:07.101 --> 00:11:10.097
if you were to drop the braces,

151
00:11:10.097 --> 00:11:14.899
I don't believe it would compile.
&gt;&gt; Audience 1: Okay,

152
00:11:14.899 --> 00:11:18.990
thank you.
&gt;&gt; Mike North: And the name of the file,

153
00:11:18.990 --> 00:11:21.510
the extension of the file is important.

154
00:11:21.510 --> 00:11:25.983
So you'll wanna make sure that for
this class, and

155
00:11:25.983 --> 00:11:30.977
just generally in the world,
you're gonna use that SCSS

156
00:11:30.977 --> 00:11:35.660
file extension, and
that you do include braces, and

157
00:11:35.660 --> 00:11:41.720
that way it will look like a superset
of CSS, which, in fact, it is.

