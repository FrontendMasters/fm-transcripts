WEBVTT

1
00:00:00.050 --> 00:00:02.990
&gt;&gt; Mike North: Let's go through
the solution to this exercise.

2
00:00:02.990 --> 00:00:08.420
So I'm gonna begin by closing down all
the work that we were working on before.

3
00:00:08.420 --> 00:00:11.417
Make sure that I have stopped my server,
and

4
00:00:11.417 --> 00:00:15.630
I'm gonna run an exercise called,
I think it's luminance.

5
00:00:15.630 --> 00:00:21.421
Let me double check.
&gt;&gt; Mike North: Luminance.

6
00:00:25.956 --> 00:00:26.972
&gt;&gt; Mike North: All right, so

7
00:00:26.972 --> 00:00:31.719
now we are running and we've got
a variety of different colors that

8
00:00:31.719 --> 00:00:36.466
we're gonna use and see if we can
create something that will result

9
00:00:36.466 --> 00:00:39.810
in the colors popping
out a little bit better.

10
00:00:41.020 --> 00:00:46.080
And actually, I'm going to need to
refer to that little diagram we had.

11
00:00:46.080 --> 00:00:50.125
So temporarily,
I'm gonna get rid of Chrome, and

12
00:00:50.125 --> 00:00:55.154
instead I'm gonna bring this guy in,
&gt;&gt; Mike North: To

13
00:00:55.154 --> 00:01:02.135
my little div environment here
&gt;&gt; Mike North: So,

14
00:01:02.135 --> 00:01:09.303
really what I need is this here,
&gt;&gt; Mike North: This

15
00:01:09.303 --> 00:01:10.863
equation.
&gt;&gt; Mike North: And,

16
00:01:10.863 --> 00:01:13.743
let's look at what we start with,
well first,

17
00:01:13.743 --> 00:01:19.262
let me get rid of the terminal down here.
&gt;&gt; Mike North: Great,

18
00:01:19.262 --> 00:01:25.006
so, what we start with in terms
of the Luminance exercise is,

19
00:01:25.006 --> 00:01:32.000
we've got app.scss and there is our
button and there are themes, right.

20
00:01:32.000 --> 00:01:36.000
And the themes' color have been changed
a little bit to deliberately create

21
00:01:36.000 --> 00:01:39.890
situations where brightness
would have failed for us.

22
00:01:39.890 --> 00:01:43.458
We've got mixins and
we can see that there is our theme mixin,

23
00:01:43.458 --> 00:01:47.581
there is a luminance mixin for
us to fill in, there's our button base.

24
00:01:49.292 --> 00:01:53.144
&gt;&gt; Mike North: And then finally, we've got

25
00:01:53.144 --> 00:02:00.547
a function here that brings
in our pow function, right.

26
00:02:00.547 --> 00:02:04.392
We've actually got a couple functions
here that all are required,

27
00:02:04.392 --> 00:02:05.883
in order to make pow work.

28
00:02:05.883 --> 00:02:09.859
It is not easy to implement pow with just

29
00:02:09.859 --> 00:02:15.020
the arithmetic that Sass
gives you by default.

30
00:02:15.020 --> 00:02:19.945
I just to give credit where credit's due,
pulled this from CSS tricks.

31
00:02:19.945 --> 00:02:22.389
There's a great power function on there,
so

32
00:02:22.389 --> 00:02:27.185
thank you whoever created that.
&gt;&gt; Mike North: And with that,

33
00:02:27.185 --> 00:02:28.640
let's get going.

34
00:02:28.640 --> 00:02:31.590
So, I think there's some pieces
here that I can start with.

35
00:02:31.590 --> 00:02:33.660
And I'll get rid of that.

36
00:02:33.660 --> 00:02:38.959
So first, we've got a background color,
we've got some

37
00:02:38.959 --> 00:02:44.338
attempts to log luminance out here.
&gt;&gt; Mike North: And

38
00:02:44.338 --> 00:02:48.400
then we've got to replace this
with the real function up here.

39
00:02:48.400 --> 00:02:51.537
So it's already kind of wired
to do what I wanted to do.

40
00:02:51.537 --> 00:02:53.590
I do want you to know this one thing.

41
00:02:53.590 --> 00:02:58.280
First off, building functions, building
your own custom functions in Sass,

42
00:02:58.280 --> 00:03:02.981
they run much, much slower than the
functions that chip at the library itself.

43
00:03:02.981 --> 00:03:04.483
And as a consequence,

44
00:03:04.483 --> 00:03:08.840
you wanna be as efficient as
possible with how you use them.

45
00:03:08.840 --> 00:03:13.205
So in this case, you'll note that
like I am not recalculating the white

46
00:03:13.205 --> 00:03:19.120
luminance every time I go through and
I create a button within the theme.

47
00:03:19.120 --> 00:03:22.666
I'm not gonna go ahead and
like re-evaluate white again and

48
00:03:22.666 --> 00:03:26.710
again and again,
cuz we wanna compare against white, right?

49
00:03:26.710 --> 00:03:31.060
So I evaluated it once up here, I store
it in a variable and I can just use that

50
00:03:31.060 --> 00:03:34.930
value over and over again,
&gt;&gt; Mike North: Very important.

51
00:03:34.930 --> 00:03:39.611
And you will see, like this actually
runs noticeably slow relative to some of

52
00:03:39.611 --> 00:03:44.234
the style sheets that we've been working
with today that just have pop out.

53
00:03:45.567 --> 00:03:47.105
&gt;&gt; Mike North: So with that,

54
00:03:47.105 --> 00:03:49.160
let's get going.

55
00:03:49.160 --> 00:03:54.050
So we've got luminance and then we
have to do this equation down here on

56
00:03:55.870 --> 00:04:00.320
a per channel basis to sort
of linearize our colors.

57
00:04:00.320 --> 00:04:07.040
So we'll define a new function up
here called linearRgb, and it's just

58
00:04:07.040 --> 00:04:11.160
gonna take a channel value, we'll call it
C, cuz that's what we've got over here.

59
00:04:11.160 --> 00:04:16.616
So that's gonna be the Csrgb.
&gt;&gt; Mike North: And

60
00:04:16.616 --> 00:04:21.050
I'm gonna just prepare to
receive those values here.

61
00:04:21.050 --> 00:04:25.962
So we're gonna do
linearRgb of the red value

62
00:04:25.962 --> 00:04:30.050
of color,
&gt;&gt; Mike North: And,

63
00:04:31.162 --> 00:04:32.754
&gt;&gt; Mike North: Same for green and

64
00:04:32.754 --> 00:04:40.049
blue.
&gt;&gt; Mike North: All right,

65
00:04:40.049 --> 00:04:43.790
and so up here, and
then I'm just gonna in line a.

66
00:04:43.790 --> 00:04:45.913
A is a constant here.

67
00:04:45.913 --> 00:04:50.033
I'm not sure why this particular
place I plucked this equation

68
00:04:50.033 --> 00:04:52.285
from like uses a as a variable, and

69
00:04:52.285 --> 00:04:56.811
then says a is always this number
below it but we're gonna go with it.

70
00:04:56.811 --> 00:05:00.995
So if c is,

71
00:05:02.667 --> 00:05:06.977
&gt;&gt; Mike North: Less than or equal 0.04045,

72
00:05:06.977 --> 00:05:11.981
we're going to do one thing, otherwise,

73
00:05:11.981 --> 00:05:17.819
will do these other things,
so that the top path is

74
00:05:17.819 --> 00:05:22.972
going to be return c divided by 12.92.

75
00:05:22.972 --> 00:05:25.125
On the bottom, we're gonna do return,

76
00:05:29.772 --> 00:05:35.584
&gt;&gt; Mike North: Return c + 0.055.

77
00:05:35.584 --> 00:05:39.196
So that's the top of
the fraction down here,

78
00:05:39.196 --> 00:05:42.207
over,
&gt;&gt; Mike North: I'll add one more paren

79
00:05:42.207 --> 00:05:45.754
just for fun.
&gt;&gt; Mike North: 1.055.

80
00:05:47.722 --> 00:05:49.746
&gt;&gt; Mike North: And then that is all raise,

81
00:05:53.179 --> 00:05:54.787
&gt;&gt; Mike North: To 2.4.

82
00:05:54.787 --> 00:05:59.360
Let me make sure that compiles.
&gt;&gt; Mike North: Let see,

83
00:05:59.360 --> 00:06:02.053
function linearRgb did not return a value.

84
00:06:02.053 --> 00:06:04.671
I'm gonna bet that that is an old error,

85
00:06:04.671 --> 00:06:09.185
let me stop and restart it.
&gt;&gt; Mike North: Just running a little check

86
00:06:09.185 --> 00:06:14.060
point here to make sure that things
are working, yep, looks okay to me.

87
00:06:14.060 --> 00:06:20.980
So, now that we've got past this point
here, we're gonna go to the next step,

88
00:06:20.980 --> 00:06:28.020
which is just to return that special
combination of color channels here.

89
00:06:28.020 --> 00:06:29.023
So we're gonna return,

90
00:06:33.489 --> 00:06:37.861
&gt;&gt; Mike North: 0.2126 times r +

91
00:06:37.861 --> 00:06:42.238
0.7152 times g,

92
00:06:44.223 --> 00:06:48.366
&gt;&gt; Mike North: + 0.0722 times

93
00:06:48.366 --> 00:06:51.838
b.
&gt;&gt; Mike North: And

94
00:06:51.838 --> 00:06:54.872
let's see where we're at.
&gt;&gt; Mike North: So

95
00:06:54.872 --> 00:07:00.530
I want to look at my output CSS cuz I've
got those comments they're waiting for me.

96
00:07:00.530 --> 00:07:03.485
Letting me know what my
luminance values are,

97
00:07:03.485 --> 00:07:07.746
interesting.
&gt;&gt; Mike North: So these look high,

98
00:07:07.746 --> 00:07:10.762
I think I might have
a decimal point in the wrong

99
00:07:10.762 --> 00:07:15.821
place.
&gt;&gt; Mike North: I expect values between

100
00:07:15.821 --> 00:07:21.437
0 and 1.
&gt;&gt; Mike North: So,

101
00:07:21.437 --> 00:07:26.143
that looks right.
&gt;&gt; Mike North: I think I know what

102
00:07:26.143 --> 00:07:27.310
I have to do here.

103
00:07:27.310 --> 00:07:32.850
So, these I'll have to update
the instructions here,

104
00:07:32.850 --> 00:07:35.810
but these have to be over 255.

105
00:07:35.810 --> 00:07:38.360
So color values are between 0 and
1 for this.

106
00:07:39.370 --> 00:07:42.226
For some reason, I'm lucky enough
to remember that, there we go.

107
00:07:42.226 --> 00:07:47.700
So now we've got 1 for white, which
makes sense that is maximally luminant.

108
00:07:47.700 --> 00:07:51.470
0.8 is something that we're
trying to stand out from.

109
00:07:51.470 --> 00:07:55.530
And if we look here,
now you can see the blues end up

110
00:07:55.530 --> 00:08:00.170
flipping to get white text
as they were not before.

111
00:08:00.170 --> 00:08:05.021
So I'm gonna get my little keynote deck
out and bring the browser back in,

112
00:08:05.021 --> 00:08:07.848
so we can see the difference between that.

113
00:08:07.848 --> 00:08:10.690
And the previous approach we
were taking where we just used

114
00:08:10.690 --> 00:08:17.711
brightness.
&gt;&gt; Mike North: So, in the case

115
00:08:17.711 --> 00:08:23.700
where we use brightness, that's the CSS.
&gt;&gt; Mike North: Here we go.

116
00:08:23.700 --> 00:08:28.296
So if I comment this out, and
bring this back, and refresh,

117
00:08:28.296 --> 00:08:34.156
you see that this one here, on the lower
left, this is sort of in that position

118
00:08:34.156 --> 00:08:39.766
where it's becoming really difficult
to read, and the text went black.

119
00:08:39.766 --> 00:08:47.659
Whereas here,
&gt;&gt; Mike North: When we refresh,

120
00:08:47.659 --> 00:08:50.630
there we go, it ends up turning white.

121
00:08:50.630 --> 00:08:54.969
So now we're using something that makes
a little bit more sense when it comes to

122
00:08:54.969 --> 00:08:55.965
that threshold.

123
00:08:55.965 --> 00:08:58.485
And we can even see what happens
if we lower it a little bit,

124
00:08:58.485 --> 00:09:00.600
although it is taking
a little while to refresh.

125
00:09:00.600 --> 00:09:04.400
Again, this is a very expensive
recomputation to make.

126
00:09:04.400 --> 00:09:09.800
Now you can see that like all of the blues
have ended up getting white text.

127
00:09:09.800 --> 00:09:13.590
And the yellows and the greens,
everything is looking nice and

128
00:09:13.590 --> 00:09:17.190
visible now because we are not
simply basing it on lightness.

129
00:09:17.190 --> 00:09:21.580
We're actually basing it on how visible
that color combination is going to be.

130
00:09:21.580 --> 00:09:25.176
So that's our solution to
defining your own function.

131
00:09:25.176 --> 00:09:29.660
A pretty good example of like a useful
function to have, although quite slow.

132
00:09:29.660 --> 00:09:36.160
There are ways to put functions into
the C++ portion of the Sass compiler,

133
00:09:36.160 --> 00:09:40.740
but that is a whole other course in and
of itself.

134
00:09:40.740 --> 00:09:45.110
So we will stop here, if there are any
questions, I'm happy to answer them.

135
00:09:45.110 --> 00:09:52.410
But this is as far down the rabbit
hole as I am able to take you today.

