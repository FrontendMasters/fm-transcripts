WEBVTT

1
00:00:00.310 --> 00:00:04.922
&gt;&gt; Steve Kinney: We can do
another small nicety here.

2
00:00:04.922 --> 00:00:09.862
Which is, it would be very cool if
we could take files from anywhere in

3
00:00:09.862 --> 00:00:14.391
the file system and drag and
drop them into our editor, right?

4
00:00:14.391 --> 00:00:20.060
So let's try that on for size, let's
see if we can implement drag and drop.

5
00:00:20.060 --> 00:00:23.348
Now, theoretically, drag and drop works,

6
00:00:23.348 --> 00:00:27.597
just not really in the way that
you would want, all right?

7
00:00:27.597 --> 00:00:29.772
I could go grab any of these files,

8
00:00:29.772 --> 00:00:33.840
let's take not in the world dominate,
we'll go grocery list.

9
00:00:33.840 --> 00:00:38.452
Drag and drop it right on in, oop,

10
00:00:38.452 --> 00:00:41.483
nothing in this case.

11
00:00:41.483 --> 00:00:43.710
If I go here, let's see if I
can grab one of the HTML files.

12
00:00:47.390 --> 00:00:49.570
Used to be that it would just
wipe out the entire UI and

13
00:00:49.570 --> 00:00:52.230
show you the page cuz it
thinks it's a web browser.

14
00:00:52.230 --> 00:00:54.417
Doesn't happen like that anymore, but

15
00:00:54.417 --> 00:00:58.275
still, it'd be cool if we could
actually show them some feedback about

16
00:00:58.275 --> 00:01:01.963
where they are able to drop it and
where they're not able to drop it.

17
00:01:01.963 --> 00:01:07.673
So let's start with that, so first thing
we're gonna do is basically make sure,

18
00:01:07.673 --> 00:01:10.338
and this is I think useful either way.

19
00:01:10.338 --> 00:01:14.596
To make sure that they can't
drop it just in general and

20
00:01:14.596 --> 00:01:20.270
then we'll add the ability to drag and
drop where they can drop.

21
00:01:20.270 --> 00:01:24.560
Almost all of this work will be
in our renderer process, for now.

22
00:01:25.930 --> 00:01:28.920
And so go back over and
we'll start with a few things.

23
00:01:28.920 --> 00:01:33.360
We'll say document, so
this is for the overall document.

24
00:01:33.360 --> 00:01:37.449
Document add event listener for

25
00:01:37.449 --> 00:01:41.660
a drag start, so when I start dragging,

26
00:01:41.660 --> 00:01:46.510
I will just do event Event
dot prevent default.

27
00:01:52.150 --> 00:01:54.570
We'll just copy that, so
we'll stop it for a drag start.

28
00:01:56.120 --> 00:02:00.684
Drag over which is when
they're dragging it over.

29
00:02:00.684 --> 00:02:05.928
It's like one of those things, nobody
likes it when they explain something using

30
00:02:05.928 --> 00:02:11.020
exact words and then I found myself in a
perilous position of having to do that and

31
00:02:11.020 --> 00:02:13.006
they leave and when they drop.

32
00:02:13.006 --> 00:02:16.540
At the very least, we now at least know
what events that we're working with when

33
00:02:16.540 --> 00:02:18.410
we go to implement drag and drop, right?

34
00:02:18.410 --> 00:02:20.040
So when they start dragging over,

35
00:02:20.040 --> 00:02:24.990
as they are currently dragging over the
application when they leave the drop zone,

36
00:02:24.990 --> 00:02:26.462
and when they actually drop the file.

37
00:02:26.462 --> 00:02:27.263
All right,

38
00:02:27.263 --> 00:02:32.879
there are some things that we need to get
as far as information is concerned though.

39
00:02:32.879 --> 00:02:36.213
And so what we're going to do is
create a bunch of helper functions, so

40
00:02:36.213 --> 00:02:38.484
that, I have a general
policy on writing code.

41
00:02:38.484 --> 00:02:41.963
Which is, if you find yourself writing
a very large function with a lot of like

42
00:02:41.963 --> 00:02:45.335
moving parts, breaking it out into
smaller functions that you have to name

43
00:02:45.335 --> 00:02:47.119
will automatically clean up the code.

44
00:02:47.119 --> 00:02:48.546
Cuz you've had to give things names,

45
00:02:48.546 --> 00:02:51.330
which is better than putting
gross comments everywhere.

46
00:02:51.330 --> 00:02:53.820
So let's give ourselves a few helpers,
right?

47
00:02:53.820 --> 00:02:58.780
Because some of the APIs for drag and
drop in the browser are gnarly and

48
00:02:58.780 --> 00:02:59.680
hard to keep track of.

49
00:02:59.680 --> 00:03:02.390
So if we give ourselves these helpers,
we never have to think about it again.

50
00:03:02.390 --> 00:03:06.734
If you take a gnarly and wrap it in
a decently named function, it's better.

51
00:03:06.734 --> 00:03:11.234
You can print that on a thing as
an inspirational meme that you put in your

52
00:03:11.234 --> 00:03:11.835
office.

53
00:03:11.835 --> 00:03:13.699
So we'll do the getDraggedFile and

54
00:03:13.699 --> 00:03:18.280
you'll see why we're making these
helpers as soon as I start doing it.

55
00:03:18.280 --> 00:03:20.950
We'll take the event and

56
00:03:20.950 --> 00:03:28.940
it'll be event.dataTransfer.items,

57
00:03:28.940 --> 00:03:32.020
we'll get the first one, cuz they
can technically drag multiple items.

58
00:03:32.020 --> 00:03:34.830
The same reason we were grabbing the first
thing from the array of file names,

59
00:03:34.830 --> 00:03:38.078
we're gonna grab the first file
from multiple dragged files.

60
00:03:38.078 --> 00:03:42.486
Cool,
&gt;&gt; Steve Kinney: All right,

61
00:03:42.486 --> 00:03:44.313
that make sense,
why do we need a function for that?

62
00:03:44.313 --> 00:03:46.606
Well, let's do get dropped file.

63
00:03:49.268 --> 00:03:54.054
&gt;&gt; Steve Kinney: That's gonna be
event.datatransfer.files zero,

64
00:03:54.054 --> 00:03:58.735
the chances of you ever
remembering that in a day to day

65
00:03:58.735 --> 00:04:03.831
practice until its like bitten
you once for several days,

66
00:04:03.831 --> 00:04:07.760
not saying that it's ever happened to me.

67
00:04:07.760 --> 00:04:11.840
It's happened to me,
these will be a little more useful and

68
00:04:11.840 --> 00:04:13.520
then you don't have to
think about it ever again.

69
00:04:13.520 --> 00:04:17.367
I'll do another one,
file type is supported.

70
00:04:17.367 --> 00:04:19.904
When we did the open dialogue,
we're like, hey,

71
00:04:19.904 --> 00:04:24.140
listen, only mark down files and
text files, please don't give me images.

72
00:04:24.140 --> 00:04:29.315
All right, we need something very similar
for that here, so we'll say file, and

73
00:04:29.315 --> 00:04:35.000
we'll return and we'll just say, hey,
we're willing to take two types of files.

74
00:04:35.000 --> 00:04:39.841
And you can change this,
add stuff if you want,

75
00:04:39.841 --> 00:04:43.730
text, plain, text slash markdown.

76
00:04:43.730 --> 00:04:48.501
So for whatever that file is,
make sure it's in that array.

77
00:04:53.314 --> 00:04:57.026
&gt;&gt; Steve Kinney: .type, all right, so
we've got some helpers here, these in and

78
00:04:57.026 --> 00:04:59.220
of themselves don't do anything.

79
00:04:59.220 --> 00:05:02.050
They're just,
when we start writing the larger logic,

80
00:05:02.050 --> 00:05:03.720
they call out exactly what's happening.

81
00:05:03.720 --> 00:05:07.330
So you're not like, what is this
squirrely syntax that he's writing?

82
00:05:07.330 --> 00:05:10.475
We've got some well named helpers.

83
00:05:10.475 --> 00:05:17.024
All right so, we can tell the user
that when they drop the file rather,

84
00:05:17.024 --> 00:05:22.720
that, hey, you gave me garbage and
I'm angry at you.

85
00:05:22.720 --> 00:05:26.830
But it would be better if they
knew before they dropped it.

86
00:05:26.830 --> 00:05:29.590
All right, if we can give them
some visual indicator that shows,

87
00:05:29.590 --> 00:05:33.230
listen, this isn't going to work, right?

88
00:05:33.230 --> 00:05:36.530
You're trying to drop an image here,
it's not gonna happen,

89
00:05:36.530 --> 00:05:38.270
I'm gonna tell you this now.

90
00:05:38.270 --> 00:05:40.080
So we'll do, on the drag over event,

91
00:05:40.080 --> 00:05:43.330
as they're dragging over our area,
that will be when we can display that.

92
00:05:43.330 --> 00:05:47.270
And I have the CSS already written, so
we're just basically gonna be adding and

93
00:05:47.270 --> 00:05:48.740
removing classes.

94
00:05:48.740 --> 00:05:50.775
So what we'll do is we'll
say in the mark down view

95
00:05:53.828 --> 00:05:55.142
&gt;&gt; Steve Kinney: We'll add event listener.

96
00:05:57.899 --> 00:05:59.228
&gt;&gt; Steve Kinney: For drag over.

97
00:06:05.330 --> 00:06:07.312
&gt;&gt; Steve Kinney: And
we'll say that we'll get the file,

98
00:06:07.312 --> 00:06:09.655
which is this is where we
use a get dragged file.

99
00:06:12.023 --> 00:06:14.628
&gt;&gt; Steve Kinney: Cuz I'm gonna be really
honest with you, If I didn't make these

100
00:06:14.628 --> 00:06:17.378
helpers and I tried to live code and
remember the difference of which

101
00:06:17.378 --> 00:06:20.633
one uses items and which one uses files,
that's gonna be embarrassing for me.

102
00:06:20.633 --> 00:06:23.397
It still might be embarrassing for
me, we don't know yet.

103
00:06:23.397 --> 00:06:26.973
So we'll go ahead and we'll grab
the event cuz these take the event and

104
00:06:26.973 --> 00:06:29.220
they find the items of the files.

105
00:06:29.220 --> 00:06:31.790
So we'll get the file that's
currently being dragged.

106
00:06:31.790 --> 00:06:39.517
If the file type is supported,
&gt;&gt; Steve Kinney: We'll

107
00:06:39.517 --> 00:06:42.068
do a mark down view or add the class.

108
00:06:44.682 --> 00:06:45.500
&gt;&gt; Steve Kinney: Drag over.

109
00:06:47.990 --> 00:06:52.490
If it's not supported,
&gt;&gt; Steve Kinney: We'll do a drag

110
00:06:52.490 --> 00:06:53.308
error, right?

111
00:06:53.308 --> 00:06:55.820
And these are just CSS classes that
are already defined in the style sheet.

112
00:06:58.560 --> 00:07:01.670
So let's go ahead and refresh this,

113
00:07:01.670 --> 00:07:06.820
if I grab a mark down file,
you can see, cool,

114
00:07:06.820 --> 00:07:10.740
we get this nice little visual indicator
here showing that it's ready to rock.

115
00:07:10.740 --> 00:07:17.330
We never take it away so I can put this
file back still happy and wonderful.

116
00:07:17.330 --> 00:07:20.606
Let's take a screenshot,
so we got an image.

117
00:07:20.606 --> 00:07:26.446
That's very upsetting, right?

118
00:07:26.446 --> 00:07:31.320
We know that this is not going to work
out well for us with this drop area.

119
00:07:31.320 --> 00:07:35.267
All right, when they finish dragging
maybe we clean up after ourselves,

120
00:07:35.267 --> 00:07:36.487
it seems legitimate.

121
00:07:38.141 --> 00:07:42.731
&gt;&gt; Steve Kinney: So
we'll say, markdownView,

122
00:07:42.731 --> 00:07:50.214
addEventLIstener, dragLeave
&gt;&gt; Steve Kinney: And

123
00:07:50.214 --> 00:07:55.767
basically what we're gonna do is, listen,
either one of those classes take them off.

124
00:07:58.748 --> 00:08:07.419
&gt;&gt; Steve Kinney:
markdownview.classlist.removedrag-over and

125
00:08:07.419 --> 00:08:11.165
remove drag-error.

126
00:08:11.165 --> 00:08:13.598
All right, so refresh it and
we'll get a shot again.

127
00:08:15.527 --> 00:08:16.629
&gt;&gt; Steve Kinney: We've got the good file.

128
00:08:19.293 --> 00:08:22.381
&gt;&gt; Steve Kinney: All right,
all right, it seems nice,

129
00:08:22.381 --> 00:08:26.322
this is why I became a front end engineer,
right?

130
00:08:26.322 --> 00:08:31.205
Cuz clearly this stuff makes me happy,
and then we'll get the bad one.

131
00:08:33.082 --> 00:08:36.483
&gt;&gt; Steve Kinney: Cool, so we've got the
visual indicators here about what's gonna

132
00:08:36.483 --> 00:08:38.284
work, and what's not gonna work.

133
00:08:41.320 --> 00:08:44.610
&gt;&gt; Steve Kinney: And so now what
happens if they actually drop the file?

134
00:08:44.610 --> 00:08:47.190
Right now if I drop the file nothing,
right?

135
00:08:47.190 --> 00:08:51.107
I can drop it,
&gt;&gt; Steve Kinney: We still eventually need

136
00:08:51.107 --> 00:08:54.642
to clean up for a drop, for a dragleave,
if I grab a file again now and

137
00:08:54.642 --> 00:08:56.500
leave with it, it'll clean up.

138
00:08:56.500 --> 00:08:58.739
But on a drop, nothing happens,
so we gotta solve that.

139
00:09:00.951 --> 00:09:05.050
&gt;&gt; Steve Kinney: So we still have some
work to do here, but we've got drag.

140
00:09:05.050 --> 00:09:07.570
And now what happens is they
actually drop the file.

141
00:09:07.570 --> 00:09:09.156
So we'll add one more event listener.

142
00:09:15.634 --> 00:09:17.746
&gt;&gt; Steve Kinney: In this case,
it's gonna be for the drop event.

143
00:09:20.914 --> 00:09:25.121
&gt;&gt; Steve Kinney: This is where
we have that other helper,

144
00:09:25.121 --> 00:09:29.079
the getDroppedFiles, or our get, so

145
00:09:29.079 --> 00:09:35.032
we'll say const file =
getDroppedFile from the event.

146
00:09:35.032 --> 00:09:38.940
All right, they could have
still ignored that giant red,

147
00:09:38.940 --> 00:09:43.023
angry looking div,
cuz now you know why I'm not a designer.

148
00:09:43.023 --> 00:09:47.362
Now, you also know why both applications
are built to have the same style sheet

149
00:09:47.362 --> 00:09:52.119
because I made one style sheet in like
2013 that I've been using for everything.

150
00:09:52.119 --> 00:09:56.474
If they didn't get the hint from that
really red angry div that we still need to

151
00:09:56.474 --> 00:10:00.040
tell them somehow or some way that
this is not going to work out.

152
00:10:00.040 --> 00:10:01.730
We certainly don't want to
try to open the image file.

153
00:10:02.770 --> 00:10:08.770
So we'll do that file type is
supported check again for the file.

154
00:10:08.770 --> 00:10:13.695
And,
&gt;&gt; Steve Kinney: If

155
00:10:13.695 --> 00:10:18.868
it's not gonna work we'll say alert.

156
00:10:18.868 --> 00:10:21.440
We should a nicer one but
we'll do this one for now.

157
00:10:21.440 --> 00:10:28.225
That file type is not supported and
no matter what, whether it works,

158
00:10:28.225 --> 00:10:33.975
whether it doesn't work,
let's clean up those classes.

159
00:10:33.975 --> 00:10:39.540
You'll notice that I didn't write the,
what happens if things are good yet,

160
00:10:39.540 --> 00:10:42.592
cuz I do need to change
my code a little bit.

161
00:10:42.592 --> 00:10:46.890
All we have is get file from user,
we don't have a way to just open the file.

162
00:10:46.890 --> 00:10:51.700
We've gotten the file from the user,
they dragged it, they dropped it.

163
00:10:51.700 --> 00:10:55.211
Let's start off with just
the console log for now, and

164
00:10:55.211 --> 00:11:00.167
then what we'll do is we'll export open
file as well and we'll be able to call

165
00:11:00.167 --> 00:11:05.000
open file directly when they drop it
which will update our user interface.

166
00:11:05.000 --> 00:11:07.490
You're all, earlier today, when you're
all like why is he breaking it out?

167
00:11:07.490 --> 00:11:08.791
Now you know.

168
00:11:14.345 --> 00:11:19.580
&gt;&gt; Steve Kinney: So, we'll just do
&gt;&gt; Steve Kinney: Before

169
00:11:19.580 --> 00:11:21.930
we get too far down the road,
let's just make sure it works.

170
00:11:21.930 --> 00:11:31.679
Cuz this is not my first rodeo
&gt;&gt; Steve Kinney: All right so

171
00:11:31.679 --> 00:11:38.370
we'll grab a known good file, so
we dropped it and here's the file, cool.

172
00:11:38.370 --> 00:11:43.680
So now what we need to do is we need to
export open file from the main process.

173
00:11:43.680 --> 00:11:49.358
Use it in the renderer
process to open the file.

174
00:11:52.479 --> 00:11:57.116
&gt;&gt; Steve Kinney: Cool, all right so let's
go back in to the main process here and

175
00:11:57.116 --> 00:12:01.840
really for the other ones,
I called them exports dot whatever,

176
00:12:01.840 --> 00:12:06.780
cuz I was only exporting,
I wasn't using them internally.

177
00:12:06.780 --> 00:12:11.508
Open file is being used by save mark down,
and by get file from user.

178
00:12:11.508 --> 00:12:14.990
So I want to call it export,
instead of open file everywhere, so

179
00:12:14.990 --> 00:12:17.124
I'm gonna use a fun JavaScript trick.

180
00:12:21.402 --> 00:12:22.131
&gt;&gt; Steve Kinney: Right?

181
00:12:22.131 --> 00:12:24.794
What this'll do and
prettier added the parentheses, but

182
00:12:24.794 --> 00:12:26.880
you can imagine they're not there.

183
00:12:26.880 --> 00:12:29.630
Which is,
first they'll take the function and

184
00:12:29.630 --> 00:12:33.710
assign it to exports at open file and
it will then assign that to open file.

185
00:12:33.710 --> 00:12:35.330
So I get to have my cake and eat it, too.

186
00:12:35.330 --> 00:12:38.840
I get to use open file internally to this
file and I still get to export it as well.

187
00:12:40.210 --> 00:12:47.177
All right, so we renderer now,
we should have main process dot open file,

188
00:12:47.177 --> 00:12:51.614
and this one,
we'll do file dot path, right?

189
00:12:51.614 --> 00:12:54.701
Cuz the file object is a native dom type,
and

190
00:12:54.701 --> 00:12:59.376
so we wanna get the path of it so
we can give that to node to read it from

191
00:12:59.376 --> 00:13:03.491
the file system as if we had
picked it from a dialogue menu.

192
00:13:03.491 --> 00:13:07.604
All right, we changed the main process,
so we have to quit and open.

193
00:13:09.987 --> 00:13:11.040
&gt;&gt; Steve Kinney: All right,
moment of truth.

194
00:13:12.830 --> 00:13:15.220
Hey, drag and drop, right?

195
00:13:15.220 --> 00:13:18.050
So now we can drop anything from
the file system, drop it in.

196
00:13:18.050 --> 00:13:22.271
It'll get passed over to the main process,
the main process will use Node's FS

197
00:13:22.271 --> 00:13:26.367
library to read the file and send it
back to the renderer process, all right?

198
00:13:26.367 --> 00:13:29.671
So we're communicating back and
forth between these two processes,

199
00:13:29.671 --> 00:13:31.186
and be able to figure it all out.

