WEBVTT

1
00:00:00.220 --> 00:00:03.480
&gt;&gt; Steve Kinney: It'd be really great to
actually get at least some kind of window

2
00:00:03.480 --> 00:00:04.610
in front of us.

3
00:00:04.610 --> 00:00:08.760
So let's go ahead and we need to pull
in a second module off of Electron, and

4
00:00:08.760 --> 00:00:10.510
that is the BrowserWindow module.

5
00:00:10.510 --> 00:00:16.380
Let's go ahead and
we'll say BrowserWindow, and

6
00:00:16.380 --> 00:00:20.390
BrowserWindow from JavaScript convention,
you can see it's got a capital B and

7
00:00:20.390 --> 00:00:23.780
the capital B means that we're gonna
use it as a constructor, right?

8
00:00:23.780 --> 00:00:27.960
So we're gonna create a BrowserWindow
using the new keyword in JavaScript.

9
00:00:27.960 --> 00:00:29.789
And we could say something along the lines

10
00:00:29.789 --> 00:00:34.309
of like new BrowserWindow-
&gt;&gt; Steve Kinney: And

11
00:00:34.309 --> 00:00:38.470
we could even say like yeah,
you might be tempted to call it window,

12
00:00:38.470 --> 00:00:42.640
which is totally safe because you
are on the main process node side.

13
00:00:42.640 --> 00:00:44.390
But let's not get into bad habits here.

14
00:00:44.390 --> 00:00:47.910
We will call it main window because
window means stuff in JavaScript.

15
00:00:49.630 --> 00:00:51.000
And you could call it there and

16
00:00:51.000 --> 00:00:55.219
if we start this application up-
&gt;&gt; Steve Kinney: You can

17
00:00:55.219 --> 00:00:59.210
see that now I get this really
exciting user interface.

18
00:00:59.210 --> 00:01:03.650
There are some problems with the code
right now, which might not even bite us

19
00:01:03.650 --> 00:01:06.840
in the small time that we're working
together on this application right now,

20
00:01:06.840 --> 00:01:09.750
but could happen which is JavaScript.

21
00:01:10.930 --> 00:01:14.210
So this is an event listener,
so here we have a function.

22
00:01:14.210 --> 00:01:18.490
JavaScript is function scoped, which
means after this function fires, right?

23
00:01:18.490 --> 00:01:21.970
It's over and we leave it,
which means everything that we created

24
00:01:21.970 --> 00:01:24.256
in this function is eligible for
garbage collection,

25
00:01:24.256 --> 00:01:29.290
including our BrowserWindow, right?

26
00:01:29.290 --> 00:01:32.720
So, that means our BrowserWindow
could get garbage collected.

27
00:01:32.720 --> 00:01:40.150
One way to solve that is to simply
define the main window variable

28
00:01:40.150 --> 00:01:46.080
in an outer scope, and
then we'll actually assign it here, right?

29
00:01:46.080 --> 00:01:49.370
So this will keep it from getting garbage
collecting cuz that top level scope

30
00:01:49.370 --> 00:01:53.540
will be alive until the application quits,
right?

31
00:01:53.540 --> 00:01:57.210
You could have left it in there, unclear
if it would've bitten you today but

32
00:01:57.210 --> 00:01:58.900
let's not add entropy into the system,

33
00:01:58.900 --> 00:02:02.440
especially if we're going to be
shipping this application to users.

34
00:02:02.440 --> 00:02:07.640
All right, so we've got that
BrowserWindow and that's neat,

35
00:02:07.640 --> 00:02:12.010
but it was pretty empty and gray and sad.

36
00:02:13.150 --> 00:02:18.000
We do have this index.html,
which has got some buttons,

37
00:02:18.000 --> 00:02:19.920
it's got our whole user interface.

38
00:02:19.920 --> 00:02:22.810
It's got the style sheet,
it's really pretty.

39
00:02:22.810 --> 00:02:27.050
It'd be better if we showed
that to the user instead.

40
00:02:27.050 --> 00:02:28.930
So, once we have the BrowserW indow,

41
00:02:28.930 --> 00:02:31.400
we basically just need to
tell it to load an html file.

42
00:02:32.650 --> 00:02:38.600
So, we can take our main window, and
we'll go ahead and say load file.

43
00:02:38.600 --> 00:02:43.080
And, what I'm going to to is I'm gonna

44
00:02:43.080 --> 00:02:44.990
use a template strain which
are these back ticks.

45
00:02:49.150 --> 00:02:53.087
&gt;&gt; Steve Kinney: So, you see this
__dirname, this is a node convention,

46
00:02:53.087 --> 00:02:57.814
this is a variable that basically
resolves to the current place that you

47
00:02:57.814 --> 00:02:59.850
are in your file system.

48
00:02:59.850 --> 00:03:00.560
So, in my case,

49
00:03:00.560 --> 00:03:07.907
this would be
/users/SteveKinney/projects/firecell-FEM--

50
00:03:07.907 --> 00:03:09.319
V2/, right?

51
00:03:09.319 --> 00:03:14.740
And we'll say from there, and this will
be app as well because it's the main JS,

52
00:03:14.740 --> 00:03:17.811
we'll say Index.html.

53
00:03:17.811 --> 00:03:20.680
So this will go ahead and load that file.

54
00:03:20.680 --> 00:03:23.020
All right, let's take that for a spin.

55
00:03:25.979 --> 00:03:28.320
&gt;&gt; Steve Kinney: Ho!
We've got a user interface.

56
00:03:28.320 --> 00:03:30.910
All right, ready to be eagle-eyed?

57
00:03:30.910 --> 00:03:32.950
I want you to stare at the screen.

58
00:03:32.950 --> 00:03:35.280
Don't look at your screen,
just look at my screen.

59
00:03:35.280 --> 00:03:37.324
Cool, split the application.

60
00:03:37.324 --> 00:03:39.810
You notice that quitting the application
also brings me back to the command

61
00:03:39.810 --> 00:03:40.370
line as well?

62
00:03:40.370 --> 00:03:42.410
So I can hit Ctrl + C and
quit the application,

63
00:03:42.410 --> 00:03:44.470
either one will take care of it.

64
00:03:44.470 --> 00:03:46.922
All right,
here's what you're gonna watch for.

65
00:03:46.922 --> 00:03:48.362
Windows is gonna open,

66
00:03:48.362 --> 00:03:53.339
there's gonna be a brief flash of white
before we see the user interface, ready?

67
00:03:55.750 --> 00:03:57.290
&gt;&gt; Steve Kinney: It was quick, right?

68
00:03:57.290 --> 00:04:02.110
A little like wash out of the projector
screen, but that's stinky, right?

69
00:04:02.110 --> 00:04:03.300
We don't really love that.

70
00:04:03.300 --> 00:04:07.000
It would be great if we
would load the content and

71
00:04:07.000 --> 00:04:08.520
then we would show the window, right?

72
00:04:08.520 --> 00:04:09.480
And it's normal, right?

73
00:04:09.480 --> 00:04:13.000
We made the window, and
then we loaded an HTML file to it.

74
00:04:13.000 --> 00:04:15.750
There's no surprises that we
had that brief flash of white,

75
00:04:15.750 --> 00:04:18.260
it's just better if we didn't.

76
00:04:18.260 --> 00:04:23.410
So one kind of nice thing that we could
go ahead and do is, we can say hey,

77
00:04:23.410 --> 00:04:26.710
we're gonna create a new BrowserWindow,
but don't show it to the user yet.

78
00:04:26.710 --> 00:04:29.820
Load the HTML file into it,
once it's good and

79
00:04:29.820 --> 00:04:32.410
ready, then we'll show them the window.

80
00:04:32.410 --> 00:04:39.640
This is a quick re-factor here, and
we can say basically show is false.

81
00:04:40.660 --> 00:04:46.669
Now, this will never show the window,
which is problematic, and EventEmitter

82
00:04:46.669 --> 00:04:51.710
in node has this on, which will be
theoretically every time the app is ready.

83
00:04:51.710 --> 00:04:54.705
Now, the app is only ready once, but

84
00:04:54.705 --> 00:04:59.920
EventEmitter also has another method
to call it once, which will basically

85
00:04:59.920 --> 00:05:03.320
fire the event listener one time,
and then not again after that.

86
00:05:03.320 --> 00:05:08.747
So we could say mainWindow.once

87
00:05:08.747 --> 00:05:13.580
ready to show is the event
on the main window, and

88
00:05:13.580 --> 00:05:18.060
that is once the html file has been loaded
and parsed, we'll say ready to show.

89
00:05:18.060 --> 00:05:26.340
And then we'll say mainWindow.show.

90
00:05:26.340 --> 00:05:29.500
So we'll hide it, we'll load the html,
we'll get rid of it,

91
00:05:29.500 --> 00:05:32.950
we'll avoid that very
brief flash of white.

92
00:05:32.950 --> 00:05:35.050
And then once the main
window is totally loaded and

93
00:05:35.050 --> 00:05:38.070
ready to rock, then we will show
the entire window to the user.

94
00:05:38.070 --> 00:05:41.790
All right, ready to be equalized?

95
00:05:41.790 --> 00:05:43.167
I mean this time there's nothing to see,
so.

96
00:05:43.167 --> 00:05:44.920
[LAUGH] You can also just trust me,
it's up to you.

97
00:05:48.240 --> 00:05:50.560
&gt;&gt; Steve Kinney: All right, so
the window opens just like that.

