WEBVTT

1
00:00:00.420 --> 00:00:01.390
&gt;&gt; Steve Kinney: So I can read,

2
00:00:01.390 --> 00:00:06.530
I can write from the clipboard,
out of the box, pretty easily.

3
00:00:06.530 --> 00:00:09.570
But this application's kinda
tedious that I have to go,

4
00:00:09.570 --> 00:00:12.190
all right, I've got something on
the clipboard, I wanna save it, so

5
00:00:12.190 --> 00:00:15.600
I can paste some stuff in a second,
and do some other stuff.

6
00:00:15.600 --> 00:00:21.650
It's kind of like, not a great user
experience that I have to go into UI,

7
00:00:21.650 --> 00:00:23.410
click some stuff, click some stuff again.

8
00:00:23.410 --> 00:00:24.100
I'm a power user.

9
00:00:24.100 --> 00:00:26.160
I don't know about the rest of you.

10
00:00:26.160 --> 00:00:31.370
But like, I would like to just be able to
hit different keystrokes on my keyboard,

11
00:00:31.370 --> 00:00:33.250
and have stuff happen.

12
00:00:34.980 --> 00:00:37.650
So that seems pretty legit.

13
00:00:38.870 --> 00:00:44.500
We can register global shortcuts,
as I've alluded to previously.

14
00:00:44.500 --> 00:00:49.230
We can basically say, hey, when
the application is ready, tell the OS that

15
00:00:49.230 --> 00:00:53.780
I want to respond to any, in this case
we're gonna go with something that,

16
00:00:53.780 --> 00:00:58.560
the fun part when you do this with
friends is trying to guess a keyboard

17
00:00:58.560 --> 00:01:01.600
shortcut that somebody doesn't already
have defined by their operating system.

18
00:01:01.600 --> 00:01:02.780
So that's fun.

19
00:01:02.780 --> 00:01:06.647
So we're gonna go with
the incredibly intuitive.

20
00:01:09.008 --> 00:01:13.700
&gt;&gt; Steve Kinney: Command, or control,
depending on the operating system,

21
00:01:13.700 --> 00:01:15.416
exclamation point.

22
00:01:15.416 --> 00:01:17.530
So command or control shift one.

23
00:01:17.530 --> 00:01:18.953
You're like yeah that means copy, right?

24
00:01:18.953 --> 00:01:24.600
Listen [LAUGH], had to go with something
that I thought no one would have.

25
00:01:24.600 --> 00:01:29.884
Command option c and v was probably
a little much so I went with this.

26
00:01:29.884 --> 00:01:31.350
So we'll register those and

27
00:01:31.350 --> 00:01:35.290
we'll unregister them when we go ahead and
do this.

28
00:01:35.290 --> 00:01:39.740
So first I'm gonna do the one
to create a new clipping, and

29
00:01:39.740 --> 00:01:43.510
you're going to do the one that is
going to write to the clipboard.

30
00:01:43.510 --> 00:01:46.582
So I will add one that adds one to the UI,
and saves it, and

31
00:01:46.582 --> 00:01:50.873
then you're going to go ahead and you're
going to do the one that takes whatever

32
00:01:50.873 --> 00:01:53.583
the most recent one is and
goes ahead and grabs it.

33
00:01:53.583 --> 00:01:55.520
Cool.

34
00:01:55.520 --> 00:01:58.136
All right.

35
00:02:01.315 --> 00:02:03.190
&gt;&gt; Steve Kinney: So
let's go ahead and try this out.

36
00:02:03.190 --> 00:02:04.520
We're going to go to our main process.

37
00:02:06.730 --> 00:02:08.370
And when the application is ready.

38
00:02:08.370 --> 00:02:09.710
They called it create window.

39
00:02:12.500 --> 00:02:13.660
Well let's put it in there for now.

40
00:02:15.260 --> 00:02:17.048
So what we'll do is we'll say,

41
00:02:17.048 --> 00:02:20.437
first well, we need to bring
in the global shortcut module.

42
00:02:28.108 --> 00:02:32.730
&gt;&gt; Steve Kinney: All right,
and we'll do it in here.

43
00:02:32.730 --> 00:02:33.596
And we'll say,

44
00:02:38.837 --> 00:02:41.412
&gt;&gt; Steve Kinney: CreateClippingShortcut is

45
00:02:41.412 --> 00:02:44.203
globalShortcut.register.

46
00:02:44.203 --> 00:02:52.780
And then, remember those
accelerators from the menu items?

47
00:02:52.780 --> 00:02:59.144
We're gonna just use one of those,
so we'll say CommandOrControl+!

48
00:03:00.190 --> 00:03:05.010
That involves a shift, technically,
as well cuz it's an exclamation point.

49
00:03:05.010 --> 00:03:08.430
If you wanted to add an alt in
there too you probably could.

50
00:03:08.430 --> 00:03:11.710
You can add an option in there,
and alt as well.

51
00:03:11.710 --> 00:03:13.020
We'll go with that.

52
00:03:13.020 --> 00:03:16.006
And then we're gonna give it a function
that should be called when that happens.

53
00:03:18.576 --> 00:03:20.723
&gt;&gt; Steve Kinney: And we'll say in
this case, we're gonna say mainWindow

54
00:03:25.286 --> 00:03:28.267
&gt;&gt; Steve Kinney: We'll send a message over

55
00:03:28.267 --> 00:03:32.770
that says, create-new-clipping.

56
00:03:32.770 --> 00:03:34.680
Thank you, Predere, for that.

57
00:03:34.680 --> 00:03:36.780
And we do wanna know if it failed for
some reason.

58
00:03:36.780 --> 00:03:39.820
If it was already registered, if there
is any reason that it couldn't do that,

59
00:03:39.820 --> 00:03:42.170
we wanna at least log it to the console.

60
00:03:42.170 --> 00:03:45.330
In a full application we
might go really nitty gritty,

61
00:03:45.330 --> 00:03:48.400
of like building a whole UI
where they can define them,

62
00:03:48.400 --> 00:03:51.630
and showing them an error if they
can't define it, so on and so forth.

63
00:03:51.630 --> 00:03:55.230
We're gonna keep it
really simple right now,

64
00:03:55.230 --> 00:03:59.583
we'll just say console_error
Registration Failed.

65
00:04:04.234 --> 00:04:05.080
&gt;&gt; Steve Kinney: Create-clipping.

66
00:04:05.080 --> 00:04:09.700
So we'll know which one failed and
that it failed at all.

67
00:04:09.700 --> 00:04:17.430
So now when someone hits command shift 1,
it will send a message.

68
00:04:17.430 --> 00:04:18.526
Let's also do a console log in here.

69
00:04:25.406 --> 00:04:27.050
&gt;&gt; Steve Kinney: Create a new clipping.

70
00:04:29.656 --> 00:04:30.521
&gt;&gt; Steve Kinney: All right, sweet.

71
00:04:30.521 --> 00:04:35.150
And now we just need to listen for that
in the renderer and do the right thing.

72
00:04:35.150 --> 00:04:40.550
We already have an add clipping method, so
we just basically need to call that with,

73
00:04:40.550 --> 00:04:43.540
really with nothing cuz it's gonna
read from the clipboard itself.

74
00:04:43.540 --> 00:04:44.821
So let's go ahead and get that in place.

75
00:04:53.410 --> 00:04:56.546
&gt;&gt; Steve Kinney: So what we'll do is,
when the component mounts,

76
00:04:56.546 --> 00:04:58.850
we will begin listening for it.

77
00:04:58.850 --> 00:05:01.310
This application is never gonna
unmount that application component, so

78
00:05:01.310 --> 00:05:04.890
we don't necessarily need to be nice and
clean up after ourselves.

79
00:05:04.890 --> 00:05:05.390
But we will.

80
00:05:06.441 --> 00:05:08.290
&gt;&gt; Steve Kinney: We'll
say componentDidMount, so

81
00:05:08.290 --> 00:05:12.665
as soon as application component, it's
effectively the same as app.ready but for

82
00:05:12.665 --> 00:05:13.537
our component.

83
00:05:13.537 --> 00:05:17.780
We'll say bring in the ipcRenderer.

84
00:05:20.647 --> 00:05:24.038
&gt;&gt; Steve Kinney: And we'll do

85
00:05:24.038 --> 00:05:29.109
ipc
&gt;&gt; Steve Kinney: Renderer

86
00:05:29.109 --> 00:05:30.696
on the create-new-clipping.

87
00:05:34.769 --> 00:05:40.770
&gt;&gt; Steve Kinney: This.add
&gt;&gt; Steve Kinney: Clipping.

88
00:05:42.260 --> 00:05:42.940
All right.

89
00:05:42.940 --> 00:05:44.940
This should do the trick,
famous last words.

90
00:05:44.940 --> 00:05:47.928
Let's go ahead and
kill the application and start it back up.

91
00:05:51.799 --> 00:05:54.070
&gt;&gt; Steve Kinney: Let me copy this
checking your system thing over here.

92
00:05:54.070 --> 00:05:54.570
Let's try that out.

93
00:05:58.310 --> 00:05:59.817
&gt;&gt; Steve Kinney: This could be hacking
your system because I missed one.

94
00:06:04.220 --> 00:06:07.840
&gt;&gt; Steve Kinney: Command shift 1, and
you can see we're adding it in there.

95
00:06:07.840 --> 00:06:10.393
I can go ahead,
let's put this window over here.

96
00:06:10.393 --> 00:06:13.822
Just to [LAUGH] make a point,
I'm gonna go to some other application.

97
00:06:18.133 --> 00:06:21.134
&gt;&gt; Steve Kinney: You can see that
even from another application,

98
00:06:21.134 --> 00:06:23.631
we are adding it to the UI, it all works.

99
00:06:28.608 --> 00:06:32.031
&gt;&gt; Steve Kinney: So let me just
set you up for the exercise, and

100
00:06:32.031 --> 00:06:36.150
then we will be able to get
the other part working.

101
00:06:36.150 --> 00:06:38.950
So we really just need to, I need to
give you to a little bit a plumbing.

102
00:06:38.950 --> 00:06:40.620
Cuz sending a write new clipboard,

103
00:06:40.620 --> 00:06:43.800
you're missing one piece which is like,
which one?

104
00:06:43.800 --> 00:06:46.570
So we'll grab whatever
the top-most one is.

105
00:06:46.570 --> 00:06:53.705
And so that will be
&gt;&gt; Steve Kinney: We'll

106
00:06:53.705 --> 00:07:01.830
make one more method called
handleWriteToClipboard.

107
00:07:01.830 --> 00:07:04.393
And all that's gonna do is
it's gonna go ahead and

108
00:07:04.393 --> 00:07:10.659
get the first clipping
&gt;&gt; Steve Kinney: Off

109
00:07:10.659 --> 00:07:11.459
the front of the array.

110
00:07:13.906 --> 00:07:16.006
&gt;&gt; Steve Kinney: And
if there is a clipping on there,

111
00:07:16.006 --> 00:07:19.226
cuz there could be no clippings
technically in there,

112
00:07:19.226 --> 00:07:23.777
if there is a clipping it's gonna say
writeToClipboard with that clipping.

113
00:07:26.721 --> 00:07:32.667
&gt;&gt; Steve Kinney: Cool, and I'm just at
this point gonna bind it just in case.

114
00:07:39.561 --> 00:07:42.583
&gt;&gt; Steve Kinney: Because it's the event
loop, you might lose track of this, so

115
00:07:42.583 --> 00:07:44.650
I'm just binding them as we construct it.

