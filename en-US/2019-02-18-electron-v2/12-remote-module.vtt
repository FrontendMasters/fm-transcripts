WEBVTT

1
00:00:00.140 --> 00:00:01.559
&gt;&gt; Steve Kinney: Here's a problem.
Opening a file,

2
00:00:01.559 --> 00:00:04.203
we got it totally working
in the main process.

3
00:00:04.203 --> 00:00:09.123
The main process is totally separated
from the renderer process, right?

4
00:00:09.123 --> 00:00:13.265
So it's very cool that we can
open up a file there, but

5
00:00:13.265 --> 00:00:19.269
we need to somehow facilitate the
communication between the two processes.

6
00:00:20.720 --> 00:00:25.123
So let's actually look at
another module in Electron.

7
00:00:25.123 --> 00:00:25.750
This one's called the remote module.

8
00:00:26.800 --> 00:00:31.543
And it remote is only available
in the renderer process, and

9
00:00:31.543 --> 00:00:35.266
it's a way to talk to the main process,
right?

10
00:00:35.266 --> 00:00:37.328
So I could say something
along the lines of,

11
00:00:37.328 --> 00:00:41.804
let's actually biggerize that font
&gt;&gt; Steve Kinney: That's

12
00:00:41.804 --> 00:00:42.402
the technical term.

13
00:00:44.496 --> 00:00:48.544
&gt;&gt; Steve Kinney: So
require('electron').remote.

14
00:00:51.333 --> 00:00:54.940
&gt;&gt; Steve Kinney: And you can see that
remote's got a few things that it has at

15
00:00:54.940 --> 00:00:55.902
its disposal.

16
00:00:55.902 --> 00:01:00.056
It actually has a lot of the stuff
that we saw in the renderer process.

17
00:01:00.056 --> 00:01:01.060
So BrowserWindow, right?

18
00:01:01.060 --> 00:01:05.123
There's no reason that a renderer process,
a renderer process in of itself cannot

19
00:01:05.123 --> 00:01:08.501
create another render a process,
only the main process can do that.

20
00:01:08.501 --> 00:01:12.700
But remote is a proxy back
to the main process, right?

21
00:01:12.700 --> 00:01:15.340
So anything that's available
in the main process,

22
00:01:15.340 --> 00:01:19.000
a renderer process can't do it itself and
be like, hey, main process,

23
00:01:19.000 --> 00:01:21.230
can you do me a solid and
do that thing for me?

24
00:01:21.230 --> 00:01:24.844
And the main process is like,
yeah, I'll do that for you.

25
00:01:24.844 --> 00:01:29.790
The one that we care about is require,
right?

26
00:01:29.790 --> 00:01:36.213
Because it will just talk to the main
process itself, not main.js, right?

27
00:01:36.213 --> 00:01:42.170
So we can actually say, okay, main
process, go read that main.js file for me.

28
00:01:42.170 --> 00:01:50.350
So we can say,
&gt;&gt; Steve Kinney: main.js,

29
00:01:50.350 --> 00:01:54.980
we'll actually call this one mainProcess.

30
00:01:58.740 --> 00:02:04.430
&gt;&gt; Steve Kinney: And mainProcess is
right now an empty object, right?

31
00:02:04.430 --> 00:02:08.281
Because in Node we export
things from a file, right?

32
00:02:08.281 --> 00:02:11.190
There is a module.exports object.

33
00:02:11.190 --> 00:02:14.019
By default,
module.exports is an empty object,

34
00:02:14.019 --> 00:02:17.261
which makes sense about when
we go ahead and we require it.

35
00:02:17.261 --> 00:02:22.551
So what we might consider doing
is instead of getFilesFromUser,

36
00:02:22.551 --> 00:02:26.600
we'll say exports.get file from user,
right?

37
00:02:26.600 --> 00:02:29.388
So we'll take that empty object, we'll
put a property on it, a method on it,

38
00:02:29.388 --> 00:02:30.376
called getFileFromUser.

39
00:02:34.500 --> 00:02:35.332
&gt;&gt; Steve Kinney: Cancel this.

40
00:02:35.332 --> 00:02:35.968
Start it back up.

41
00:02:42.450 --> 00:02:47.591
&gt;&gt; Steve Kinney: Now we'll do
remote = require('electron').remote

42
00:02:49.500 --> 00:02:53.626
&gt;&gt; Steve Kinney: We'll call this one

43
00:02:53.626 --> 00:02:57.998
mainProcess again.

44
00:03:01.256 --> 00:03:06.200
&gt;&gt; Steve Kinney: And you can see I've
got this getFileFromUser, right?

45
00:03:06.200 --> 00:03:08.497
So we require the remote module
in the renderer process.

46
00:03:08.497 --> 00:03:12.597
We use remote.require to grab
that main process file where

47
00:03:12.597 --> 00:03:15.223
we're exporting getFileFromUser.

48
00:03:15.223 --> 00:03:20.772
So I could say something along the lines
of mainProcess.getfilefromuser.

49
00:03:23.036 --> 00:03:27.650
&gt;&gt; Steve Kinney: And we can trigger
it from the renderer process.

