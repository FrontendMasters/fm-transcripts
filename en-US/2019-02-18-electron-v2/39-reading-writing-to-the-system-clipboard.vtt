WEBVTT

1
00:00:00.420 --> 00:00:04.020
&gt;&gt; Steve Kinney: So now,
what we can do is, we can go ahead and

2
00:00:04.020 --> 00:00:09.810
we can modify ad clipping to
actually read from the clipboard.

3
00:00:09.810 --> 00:00:13.483
So, we have the clippings,

4
00:00:13.483 --> 00:00:19.461
we'll say content = clipboard.readText.

5
00:00:21.666 --> 00:00:23.246
&gt;&gt; Steve Kinney: What do
you think readText does?

6
00:00:24.496 --> 00:00:25.377
&gt;&gt; Steve Kinney: Not all at once.

7
00:00:25.377 --> 00:00:29.361
[LAUGH] Read text in the clipboard, right?

8
00:00:29.361 --> 00:00:33.706
And we'll do,
&gt;&gt; Steve Kinney: We'll cheat.

9
00:00:34.843 --> 00:00:38.550
&gt;&gt; Steve Kinney: We'll use this Date.now,
which will give us a unique-ish number.

10
00:00:38.550 --> 00:00:46.000
And then we'll say const clipping
is that id and that content.

11
00:00:47.600 --> 00:00:48.570
Now, instead of this,

12
00:00:56.381 --> 00:00:57.506
&gt;&gt; Steve Kinney: We'll go ahead,

13
00:00:57.506 --> 00:00:59.981
we've got that built one in there, and

14
00:00:59.981 --> 00:01:05.560
then get whatever the last thing I copied,
as you can see, it was clearly that.

15
00:01:05.560 --> 00:01:08.710
I'll go ahead and let's grab this little
helpful error message, and copy it.

16
00:01:09.730 --> 00:01:10.900
And I'm reading from the clipboard,

17
00:01:10.900 --> 00:01:14.830
and immediately adding it to
the application state, right?

18
00:01:14.830 --> 00:01:16.690
So all of the sudden,
we're most of the way there.

19
00:01:16.690 --> 00:01:21.900
Pretty quickly, just read whatever is
on the clipboard, and add it in there.

20
00:01:21.900 --> 00:01:28.640
The other trick, of course, would be
to write stuff back to the clipboard.

21
00:01:28.640 --> 00:01:32.490
This is cool if you wanna save stuff
from your clipboard for posterity.

22
00:01:32.490 --> 00:01:37.081
The other thing that we're probably
going to want to do is go ahead and

23
00:01:37.081 --> 00:01:39.228
write it back to the clipboard.

24
00:01:41.371 --> 00:01:42.836
&gt;&gt; Steve Kinney: So
we're gonna give ourselves,

25
00:01:42.836 --> 00:01:45.630
that one can have everything
it needs passed in.

26
00:01:45.630 --> 00:01:52.540
So we'll say const writeToClipboard,
which will take some kind of content.

27
00:01:53.700 --> 00:01:57.470
And we'll call clipboard.writeText,

28
00:01:57.470 --> 00:02:01.620
and you can see, there's all sorts
of stuff that I could write.

29
00:02:01.620 --> 00:02:06.052
Do HTML, write rich text,
so on and so forth.

30
00:02:06.052 --> 00:02:07.250
We're gonna keep it simple.

31
00:02:07.250 --> 00:02:12.592
I'm going to write that content
back to the clipboard, which means

32
00:02:12.592 --> 00:02:18.180
that now we have that clipboard
button in my clipping component.

33
00:02:20.910 --> 00:02:26.037
I could say something like,
&gt;&gt; Steve Kinney: Pass in an arrow

34
00:02:26.037 --> 00:02:34.693
function of,
&gt;&gt; Steve Kinney: writeToClipboard

35
00:02:34.693 --> 00:02:36.069
with that content.

36
00:02:41.119 --> 00:02:41.988
&gt;&gt; Steve Kinney: All right,
let's try it out.

37
00:02:46.099 --> 00:02:49.249
&gt;&gt; Steve Kinney: Now you can see, this
application has a problem right now where

38
00:02:49.249 --> 00:02:53.250
it loses everything, other than what I
hard-coded in, every time I refresh.

39
00:02:53.250 --> 00:02:56.860
That's not great user experience,
we'll fix that with a database later.

40
00:02:56.860 --> 00:02:58.935
Let's go ahead and
just copy this, let's paste it.

41
00:03:00.767 --> 00:03:04.690
&gt;&gt; Steve Kinney: So then I can go
ahead and grab this over here.

42
00:03:04.690 --> 00:03:10.649
Copy it in, paste the wall, put this back
on the clipboard, paste the whole thing.

