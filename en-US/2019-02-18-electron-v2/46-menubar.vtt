WEBVTT

1
00:00:00.150 --> 00:00:02.930
&gt;&gt; Steve Kinney: Now we have
the ability to use native libraries in

2
00:00:02.930 --> 00:00:03.440
our application.

3
00:00:03.440 --> 00:00:05.180
We use them directly from
the renderer process.

4
00:00:05.180 --> 00:00:07.670
We don't have to like, okay,
we need to put something in the server.

5
00:00:07.670 --> 00:00:09.000
We need to put something in the data base.

6
00:00:09.000 --> 00:00:10.450
All right,
send an atrax call to the server.

7
00:00:10.450 --> 00:00:12.270
Have the server do it,
send an atrax call back.

8
00:00:12.270 --> 00:00:16.280
When you use this directly in our
application in ways that might not be,

9
00:00:16.280 --> 00:00:20.290
I think for a lot of us there is muscle
memory to think I can't do that,

10
00:00:20.290 --> 00:00:22.580
because I can't do it in the browser,
right?

11
00:00:22.580 --> 00:00:25.420
And one of the big points
I wanna kind of drive home

12
00:00:25.420 --> 00:00:29.110
by doing this all in the render process,
despite my inability to spell,

13
00:00:29.110 --> 00:00:34.090
is that we can actually start to think
about the stuff in different ways, right?

14
00:00:34.090 --> 00:00:37.540
Talking directly to the data base,
persistence, maybe sequelized's not

15
00:00:37.540 --> 00:00:41.830
the best choice for you, could you
still use index db or local storage?

16
00:00:41.830 --> 00:00:43.920
Yeah, you could, right?

17
00:00:43.920 --> 00:00:47.970
But if you do need a sequel database,
you can also use that as well.

18
00:00:47.970 --> 00:00:52.480
Sequel light tends to be used
very commonly in like Mac OS and

19
00:00:52.480 --> 00:00:54.620
Windows applications and iOs applications.

20
00:00:54.620 --> 00:00:57.600
So it's not totally out of the box,
the reason I chose it is because it's used

21
00:00:57.600 --> 00:01:03.280
a lot of times in desktop and mobile
applications for persisting data, right?

22
00:01:03.280 --> 00:01:07.250
If there is a browser technology you
would rather use go for it, right?

23
00:01:07.250 --> 00:01:10.830
But some of the ways that we think about
the technology that we can use when

24
00:01:10.830 --> 00:01:15.300
building applications is different in
electron than it would be normally.

25
00:01:17.470 --> 00:01:21.560
For our next check what were gonna do is

26
00:01:21.560 --> 00:01:26.090
turn this into an application that
lives in either A the menu bar or

27
00:01:26.090 --> 00:01:32.510
B the system tray depending on if
you are on MacOS or not, right?

28
00:01:32.510 --> 00:01:36.330
So wherever these icons live
on your operating system,

29
00:01:36.330 --> 00:01:39.940
that is where we are going
to put this application.

30
00:01:42.006 --> 00:01:43.410
&gt;&gt; Steve Kinney: Cool,
so let's close the app.

31
00:01:43.410 --> 00:01:47.100
There is a really library for
doing this called menu bar.

32
00:01:47.100 --> 00:01:52.470
Now, electron has a tray module and
the tray module is really good for

33
00:01:52.470 --> 00:01:58.790
creating like menus like this in
the system tray or menu, right?

34
00:01:58.790 --> 00:02:01.520
Like traditional menus.

35
00:02:01.520 --> 00:02:04.730
Right, and remember before we did
the menu.build from template and

36
00:02:04.730 --> 00:02:06.790
then we used that as the application menu.

37
00:02:06.790 --> 00:02:10.220
Right, you could put an icon up in
the system tray or menu bar and

38
00:02:10.220 --> 00:02:11.210
put a menu there.

39
00:02:12.590 --> 00:02:16.460
But what you can't do with
the built-in electron one

40
00:02:16.460 --> 00:02:19.110
is put a user interface there.

41
00:02:19.110 --> 00:02:22.340
You can put just a dropdown, right?

42
00:02:22.340 --> 00:02:25.260
What the menu bar application
does is it kinda cheats.

43
00:02:25.260 --> 00:02:29.460
Is it puts a menu up there,
right, with no items.

44
00:02:29.460 --> 00:02:34.230
And when you click it,
it perfectly puts a browser window

45
00:02:34.230 --> 00:02:38.360
where the menu would be so
it looks like there's a menu there, right?

46
00:02:38.360 --> 00:02:40.340
This basically fakes it.

47
00:02:40.340 --> 00:02:44.480
Doing that involves like electron
positioner and a whole bunch of libraries.

48
00:02:44.480 --> 00:02:45.434
We're not going to use those.

49
00:02:45.434 --> 00:02:50.381
We're just going to kind of
use menu bar out of the box.

50
00:02:56.024 --> 00:02:58.290
&gt;&gt; Steve Kinney: And
it's not gonna be a lot of refactoring.

51
00:03:00.520 --> 00:03:04.860
So as that installs,
we're gonna get coding.

52
00:03:04.860 --> 00:03:07.960
So in this case we have,
we're creating that main window,

53
00:03:07.960 --> 00:03:11.480
we're gonna do stuff a little
bit differently this time.

54
00:03:11.480 --> 00:03:12.370
We don't need browser window.

55
00:03:15.310 --> 00:03:17.008
&gt;&gt; Steve Kinney: Cuz Menubar's
gonna take care of that.

56
00:03:17.008 --> 00:03:20.380
We're going to const Menubar.

57
00:03:23.228 --> 00:03:25.250
&gt;&gt; Steve Kinney: We could do import, even.

58
00:03:25.250 --> 00:03:30.810
Import menubar from
menubar as that installs.

59
00:03:30.810 --> 00:03:35.260
You gotta love, this is definitely one
of the earlier electron libraries and

60
00:03:35.260 --> 00:03:40.970
that was back when you could get things
like menubar as a MPM package name, right?

61
00:03:40.970 --> 00:03:43.938
So you can tell,
back in the good old days.

62
00:03:43.938 --> 00:03:48.796
&gt;&gt; Steve Kinney: So we say const
menubar = menubar constructor and

63
00:03:48.796 --> 00:03:55.514
we're gonna give it that index which
is very much like that load url.

64
00:03:55.514 --> 00:04:00.628
A lot of this is like
under the hood stuff for

65
00:04:00.628 --> 00:04:06.253
us, so we can say
&gt;&gt; Steve Kinney: Index.jade and

66
00:04:06.253 --> 00:04:12.050
we'll give another one
called preloadwindow and

67
00:04:12.050 --> 00:04:17.295
this is not dissimilar
from what we're doing

68
00:04:17.295 --> 00:04:23.250
with hiding and
showing the window earlier.

69
00:04:23.250 --> 00:04:27.780
Basically, in many bar it doesn't
even bother to try to create

70
00:04:27.780 --> 00:04:31.100
the browser window until the very
first time the user clicks on it.

71
00:04:31.100 --> 00:04:35.470
So its even more obvious the user
clicks on it they see Wait.

72
00:04:35.470 --> 00:04:38.110
And then we even start to
build the browser windows.

73
00:04:38.110 --> 00:04:39.820
So in this case even while,

74
00:04:39.820 --> 00:04:44.750
before they ever get to it,
we will go ahead and load it up.

75
00:04:44.750 --> 00:04:51.400
And then we can say, menubar.on('ready,
and that's very similar.

76
00:04:51.400 --> 00:04:55.090
This is an abstraction over browser
window, and it's an abstraction over app,

77
00:04:55.090 --> 00:04:57.630
it's an abstraction over a lot of
the stuff already in electron.

78
00:04:57.630 --> 00:05:00.940
It's like you can read the, it's like 100
lines of code or something like that.

79
00:05:00.940 --> 00:05:03.130
It's just an easy abstraction for
setting this up so

80
00:05:03.130 --> 00:05:04.210
you don't have to do it every time.

81
00:05:05.600 --> 00:05:09.716
So menubar.on('ready, and we'll go ahead.

82
00:05:13.170 --> 00:05:17.937
&gt;&gt; Steve Kinney: And we'll grab
&gt;&gt; Steve Kinney: Our shortcuts from

83
00:05:17.937 --> 00:05:23.950
before
&gt;&gt; Steve Kinney: And take them with us.

84
00:05:23.950 --> 00:05:27.761
I'm gonna comment out this app on ready
&gt;&gt; Steve Kinney: Cuz we don't want

85
00:05:27.761 --> 00:05:28.787
the normal window to open.

86
00:05:33.274 --> 00:05:34.570
&gt;&gt; Steve Kinney: We'll
paste those in there.

87
00:05:35.950 --> 00:05:37.940
So they start the same
way they did before.

88
00:05:39.370 --> 00:05:40.485
And let's start with that right now.

89
00:05:42.859 --> 00:05:45.845
&gt;&gt; Steve Kinney: There's probably some
other code that I should delete about

90
00:05:45.845 --> 00:05:48.080
the all Windows and
stuff along those lines.

91
00:05:48.080 --> 00:05:49.259
But let's give it a shot first.

92
00:05:51.400 --> 00:05:53.060
All right,
launch number 4 is just starting up.

93
00:05:53.060 --> 00:05:57.820
And you can see I have this little cat
icon up here, that's just the default

94
00:05:57.820 --> 00:06:00.340
one included with the menu bar
library cause who doesn't love cats.

95
00:06:00.340 --> 00:06:02.400
Whosevers opened a computer, saw a cat and

96
00:06:02.400 --> 00:06:05.670
been- well the Internets
hard if that's the case.

97
00:06:05.670 --> 00:06:06.277
And now you see I can click it.

98
00:06:08.433 --> 00:06:11.910
&gt;&gt; Steve Kinney: And there it is,
I've got this menu bar application.

99
00:06:11.910 --> 00:06:14.090
That was not a hard refactoring.

100
00:06:14.090 --> 00:06:15.950
Let's do just one other thing.

101
00:06:17.440 --> 00:06:20.480
We can also set a menu, a context menu,

102
00:06:20.480 --> 00:06:23.820
which we talked about earlier,
on that icon.

103
00:06:23.820 --> 00:06:25.670
There's no really great way to quit this.

104
00:06:25.670 --> 00:06:28.250
I mean, you can click on it
into the browser window and

105
00:06:28.250 --> 00:06:30.233
hit command q, it'll work.

106
00:06:30.233 --> 00:06:35.320
I will tell you, too, that giving yourself
some kind of on-off switch is good,

107
00:06:35.320 --> 00:06:37.980
because using the developer tools,
you have to like click into it,

108
00:06:37.980 --> 00:06:39.910
then open the dev tools,
then go back and forth.

109
00:06:39.910 --> 00:06:42.230
So sometimes being in
a regular window again,

110
00:06:42.230 --> 00:06:44.590
when you're developing a menu
bar application, kinda good.

