WEBVTT

1
00:00:00.310 --> 00:00:03.210
&gt;&gt; Steve Kinney: We have
the ability to open files.

2
00:00:03.210 --> 00:00:04.620
We can edit files.

3
00:00:04.620 --> 00:00:07.530
We can see if they're edited,
[LAUGH] right?

4
00:00:07.530 --> 00:00:10.317
This is all great and wonderful.

5
00:00:10.317 --> 00:00:16.180
Would anyone like to venture a guess what
the next logical feature to implement is?

6
00:00:16.180 --> 00:00:18.499
Saving, right?

7
00:00:18.499 --> 00:00:21.640
So we wanna go ahead and
implement the ability to save a file.

8
00:00:22.910 --> 00:00:27.750
Now a lot of this will not be
particularly controversial.

9
00:00:29.670 --> 00:00:31.930
In the same way that we
have a showOpenDialog,

10
00:00:31.930 --> 00:00:35.260
we've got a showSaveDialog, right?

11
00:00:35.260 --> 00:00:37.030
There will be one difference,

12
00:00:37.030 --> 00:00:43.250
which is there is a difference between
opening this app, typing and hitting Save.

13
00:00:43.250 --> 00:00:49.030
And opening this up, opening a file,
typing and hitting Save, right?

14
00:00:49.030 --> 00:00:52.090
Which is they've opened a file,
we know the file they're working with,

15
00:00:52.090 --> 00:00:55.460
we don't wanna show them
that save dialogue, right?

16
00:00:55.460 --> 00:00:58.810
We could eventually implement
maybe a save as, right?

17
00:00:58.810 --> 00:01:02.581
And that would totally
necessitate a dialogue.

18
00:01:02.581 --> 00:01:07.244
But in this case, we're like, if they
are opening a brand new buffer, okay,

19
00:01:07.244 --> 00:01:08.830
prompt them.

20
00:01:08.830 --> 00:01:13.720
If they are not,
overwrite the current file, right?

21
00:01:13.720 --> 00:01:15.740
And so there's a little bit of nuance.

22
00:01:15.740 --> 00:01:18.290
And so I'll walk us through that one.

23
00:01:18.290 --> 00:01:21.145
And then, after that, that export HTML.

24
00:01:21.145 --> 00:01:24.153
You'll implement that one, that will have
a little few of the edge cases, right?

25
00:01:24.153 --> 00:01:26.442
In that case,
no matter what prompt them, right,

26
00:01:26.442 --> 00:01:28.926
because they might want to
export multiple versions.

27
00:01:28.926 --> 00:01:31.080
We don't wanna overwrite the previous one,
so

28
00:01:31.080 --> 00:01:33.560
that one will always basically
save it to the file system.

29
00:01:33.560 --> 00:01:37.380
But this one will handle a little bit
more of the edge case of what to do in

30
00:01:37.380 --> 00:01:41.230
the event that they have a file, they
don't have a file, so on and so forth.

31
00:01:41.230 --> 00:01:49.560
So in our main process we have something
very similar to the showOpenDialogue.

32
00:01:49.560 --> 00:01:54.970
So go ahead and
make a new function called saveMarkdown,

33
00:01:54.970 --> 00:01:57.570
again, you can call it whatever you want.

34
00:01:57.570 --> 00:02:02.072
I'm actually calling it
exports.saveMarkdown, right?

35
00:02:02.072 --> 00:02:06.406
Because we're gonna need to eventually
wire it up to the save button just like

36
00:02:06.406 --> 00:02:10.020
we did with the get file from user
function that we made earlier.

37
00:02:11.195 --> 00:02:15.668
And this one's gonna take an argument
which is the file path which we have in

38
00:02:15.668 --> 00:02:17.090
our renderer process.

39
00:02:17.090 --> 00:02:19.870
Remember, we're storing it
in that top level variable.

40
00:02:21.150 --> 00:02:22.980
So we'll kind of pass that back in.

41
00:02:22.980 --> 00:02:25.822
Either it will be the file
that's currently open or

42
00:02:25.822 --> 00:02:28.147
that it is set to null by default, right?

43
00:02:28.147 --> 00:02:30.696
So if it's a brand new file it's null,
okay, and

44
00:02:30.696 --> 00:02:33.750
if they've opened the file
previously it is the file path.

45
00:02:35.640 --> 00:02:40.809
So we'll go ahead there and we'll say,
&gt;&gt; Steve Kinney: Well,

46
00:02:40.809 --> 00:02:43.190
we actually will start out with
the simplest possible thing, right?

47
00:02:43.190 --> 00:02:48.310
We'll just say fs.writeFileSync.

48
00:02:48.310 --> 00:02:52.300
You could use the asynchronous API,
arguably you should.

49
00:02:53.330 --> 00:02:59.779
Go ahead, we'll save the file or
actually send the content to.

50
00:02:59.779 --> 00:03:01.980
We're gonna need to save that as well.

51
00:03:01.980 --> 00:03:06.329
So we'll say file and content and
then we'll go ahead and

52
00:03:06.329 --> 00:03:12.293
we'll write that to the file system,
&gt;&gt; Steve Kinney: And

53
00:03:12.293 --> 00:03:14.720
let's just start with that, right.

54
00:03:14.720 --> 00:03:16.261
Now this has got a whole
bunch of problems.

55
00:03:16.261 --> 00:03:21.551
It's got the problem of if they have not
opened up a file that would be null and

56
00:03:21.551 --> 00:03:25.366
then we'll try to write to
null as a first argument fs.

57
00:03:25.366 --> 00:03:26.910
Yeah, it's not good.

58
00:03:26.910 --> 00:03:30.685
But like I said proof of concept,
let's try it out.

59
00:03:31.730 --> 00:03:36.664
So we've gathered these
exports.saveMarkdown in the renderer

60
00:03:36.664 --> 00:03:42.237
process we will go ahead and we will,
&gt;&gt; Steve Kinney: Put

61
00:03:42.237 --> 00:03:45.289
it right here we'll say,

62
00:03:45.289 --> 00:03:54.599
saveMarkdownButton.addEventListener('cl-
ick', ()=&gt;{});.

63
00:03:54.599 --> 00:03:59.560
And we'll say mainProcess.saveMarkdown and

64
00:03:59.560 --> 00:04:06.049
we'll give it that filePath,
&gt;&gt; Steve Kinney: And

65
00:04:06.049 --> 00:04:11.030
we'll give it the markdownView.value.

66
00:04:11.030 --> 00:04:11.818
All right, so

67
00:04:11.818 --> 00:04:15.845
whatever is currently in that text
area we'll save that as the content.

68
00:04:15.845 --> 00:04:19.619
We changed the main process which means
we can't just hit refresh and hope for

69
00:04:19.619 --> 00:04:20.500
the best.

70
00:04:20.500 --> 00:04:24.248
It means that we have to go ahead and
kill the app and start it back up again.

71
00:04:28.825 --> 00:04:31.753
&gt;&gt; Steve Kinney: Cool, so
if you just try to type and save a file,

72
00:04:31.753 --> 00:04:34.080
it's gonna be bad news bears.

73
00:04:34.080 --> 00:04:37.465
So we'll go ahead, do a grocery list.

74
00:04:37.465 --> 00:04:46.393
We'll get ourselves a tofu steak as well,
&gt;&gt; Steve Kinney: Save the file,

75
00:04:46.393 --> 00:04:49.068
let's see what we got.

76
00:04:49.068 --> 00:04:54.680
If I open it from the file system,
we've saved the tofu steak, right?

77
00:04:54.680 --> 00:04:57.109
We have successfully written
to the file system, right?

78
00:04:58.480 --> 00:05:01.380
It took a little while to get the opening
of the file, but now we're cruising.

79
00:05:02.780 --> 00:05:07.090
We've got edge cases galore that we're
gonna need to start dealing with, so

80
00:05:07.090 --> 00:05:08.130
let's do that.

81
00:05:08.130 --> 00:05:11.880
If the case the file is null,
that's a false E-value,

82
00:05:11.880 --> 00:05:14.720
let's go ask the user where
they would like to save it.

83
00:05:16.870 --> 00:05:18.839
So let's check that out.

84
00:05:18.839 --> 00:05:20.273
We'll go back to main.js.

85
00:05:22.653 --> 00:05:25.967
&gt;&gt; Steve Kinney: And
we'll say, if there's no

86
00:05:25.967 --> 00:05:30.694
file,
&gt;&gt; Steve Kinney: We'll ask

87
00:05:30.694 --> 00:05:31.310
them for a file.

88
00:05:31.310 --> 00:05:37.556
So we'll say file = dialog,
&gt;&gt; Steve Kinney: .showSaveDialog.

89
00:05:45.524 --> 00:05:50.360
&gt;&gt; Steve Kinney: And
we'll give a title of save Markdown.

90
00:05:50.360 --> 00:05:52.940
This is where you get to get back at
the Mac users cuz they'll never see it.

91
00:05:55.260 --> 00:05:58.550
Now, there's a few other
things that I didn't show you.

92
00:05:58.550 --> 00:06:03.346
These actually all apply for
open file dialog too, which is,

93
00:06:03.346 --> 00:06:05.846
you can specify a defaultPath.

94
00:06:08.732 --> 00:06:11.810
&gt;&gt; Steve Kinney: And you might be,
well that's perilous, right?

95
00:06:11.810 --> 00:06:15.550
I don't know the difference
of where desktop is on MacOS

96
00:06:15.550 --> 00:06:20.190
versus Windows versus Linux,
so on and so forth, right?

97
00:06:20.190 --> 00:06:21.940
I don't wanna put a defaultPath in there.

98
00:06:21.940 --> 00:06:23.255
I don't know how these things work.

99
00:06:23.255 --> 00:06:29.205
Luckily, electron actually has a whole
bunch of really useful aliases for

100
00:06:29.205 --> 00:06:30.570
you as well.

101
00:06:30.570 --> 00:06:32.480
So on the app module,
there's this getPath.

102
00:06:36.253 --> 00:06:41.650
&gt;&gt; Steve Kinney: And it has paths that
will resolve for most operating systems.

103
00:06:41.650 --> 00:06:45.321
So if I say, getPath ('desktop'), right,

104
00:06:45.321 --> 00:06:49.440
that will be the appropriate
desktop folder on MacOS,

105
00:06:49.440 --> 00:06:53.304
on Windows, on Linux, so
on and so forth, right?

106
00:06:53.304 --> 00:06:56.740
Now we're just showing a file dialogue.

107
00:06:56.740 --> 00:06:58.496
If we get this wrong it's not
the worst thing in the world.

108
00:06:58.496 --> 00:07:03.370
But, where this becomes more interesting
later when we make a SQLite database, you

109
00:07:03.370 --> 00:07:07.400
don't wanna put that in the application
bundle cuz that's shared on all users.

110
00:07:07.400 --> 00:07:12.833
You probably wanna put that in a user's
specific settings directory, right?

111
00:07:12.833 --> 00:07:18.197
On Mac OS it's the library folder in
your home directory, Window is app data.

112
00:07:18.197 --> 00:07:19.660
So on and so forth, right?

113
00:07:20.970 --> 00:07:23.540
There's also really useful shortcuts for
all of that.

114
00:07:23.540 --> 00:07:24.500
You can check the documentation.

115
00:07:24.500 --> 00:07:25.093
There's a bunch.

116
00:07:25.093 --> 00:07:25.743
There's desktop.

117
00:07:25.743 --> 00:07:26.583
There's documents.

118
00:07:26.583 --> 00:07:31.890
There's, yeah the user specific settings,
a whole bunch of them that you can use.

119
00:07:31.890 --> 00:07:32.925
We're gonna go with desktop.

120
00:07:32.925 --> 00:07:35.448
If you wanna use documents, go for it, but

121
00:07:35.448 --> 00:07:38.339
some of us have their
screen on a projector, so.

122
00:07:38.339 --> 00:07:41.220
And the other one that
we'll use is filters.

123
00:07:41.220 --> 00:07:42.890
You might be like, I don't need to filter.

124
00:07:42.890 --> 00:07:46.140
Filters is useful because it
will give you, in this case,

125
00:07:46.140 --> 00:07:47.910
we're just gonna say markdown files.

126
00:07:47.910 --> 00:07:54.446
And that means by default, it will try
to save it as a markdown file, right?

127
00:07:54.446 --> 00:07:56.773
So you don't have to put
the file extension on Mac OS or

128
00:07:56.773 --> 00:07:58.079
anything along those lines.

129
00:07:59.620 --> 00:08:01.702
So we'll say filters and we'll say name.

130
00:08:06.089 --> 00:08:08.550
&gt;&gt; Steve Kinney: Markdown Files.

131
00:08:08.550 --> 00:08:13.710
We'll say extensions, whatever you
want that first extension to be.

132
00:08:13.710 --> 00:08:14.793
I'm gonna go with 'md',

133
00:08:19.336 --> 00:08:23.647
&gt;&gt; Steve Kinney: 'markdown' 'mdown',

134
00:08:28.148 --> 00:08:33.540
&gt;&gt; Steve Kinney: 'markdown', cool.

135
00:08:33.540 --> 00:08:37.580
So we've got the basic file
dialogue rocking and rolling.

136
00:08:37.580 --> 00:08:43.070
The value there will be either be wherever
they choose to save it or, in this case,

137
00:08:43.070 --> 00:08:47.765
it's not an array cause they can only
save to one file which is slightly

138
00:08:47.765 --> 00:08:53.090
certainly confusing that showOpenDialog
gives an array of file names.

139
00:08:53.090 --> 00:08:55.710
And showSaveDialog gives you a single one.

140
00:08:55.710 --> 00:08:59.040
I get it, I don't make these choices,
my job is just to tell you about them.

141
00:08:59.040 --> 00:09:03.820
And so if they choose a place, we're gonna
get that string back as the file name.

142
00:09:03.820 --> 00:09:08.080
And if they don't choose a place,
then we'll get undefined.

143
00:09:08.080 --> 00:09:12.360
So we do need to give ourselves a guard
clause cuz that being undefined instead of

144
00:09:12.360 --> 00:09:16.240
null is not doing us any better
than our original implementation.

145
00:09:16.240 --> 00:09:20.467
So we'll say,
there's still no file, right?

146
00:09:20.467 --> 00:09:24.202
If they didn't pass as a file and
they didn't pick a file, just return,

147
00:09:24.202 --> 00:09:25.440
like we're done here.

148
00:09:25.440 --> 00:09:29.940
We tried, we're trying to work with
people here, so on and so forth.

149
00:09:29.940 --> 00:09:32.940
Cool, so let's give this a shot and
see how it goes.

150
00:09:32.940 --> 00:09:34.894
We changed the main process so
we gots to leave.

151
00:09:39.639 --> 00:09:44.953
&gt;&gt; Steve Kinney: All right,
Open the file, Grocery List, tofu steak,

152
00:09:44.953 --> 00:09:49.263
anyone else need anything
from whole foods?

153
00:09:49.263 --> 00:09:53.970
Broccoli, did you have to pick one that
I'm not totally sure how to spell?

154
00:09:53.970 --> 00:09:54.550
No.

155
00:09:56.728 --> 00:09:58.812
&gt;&gt; Steve Kinney: Anyone
know how to spell broccoli?

156
00:09:58.812 --> 00:09:59.870
&gt;&gt; Speaker 2: Two L's.
&gt;&gt; Steve Kinney: Two L's,

157
00:09:59.870 --> 00:10:01.020
I was right the first time.

158
00:10:01.020 --> 00:10:02.772
&gt;&gt; Speaker 2: I would go with two C's.

159
00:10:02.772 --> 00:10:03.603
&gt;&gt; Steve Kinney: Two C's?

160
00:10:03.603 --> 00:10:06.971
[LAUGH] Whatever,
we'll probably [LAUGH] well,

161
00:10:06.971 --> 00:10:10.345
we have a thing that we
can fix during the break.

162
00:10:10.345 --> 00:10:13.079
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Steve Kinney: Where's the chatroom when

163
00:10:13.079 --> 00:10:15.222
I need them, cool.

164
00:10:15.222 --> 00:10:17.493
So we'll go ahead and
we'll Save this file.

165
00:10:20.205 --> 00:10:22.470
&gt;&gt; Steve Kinney: Make
sure that it still works.

166
00:10:22.470 --> 00:10:24.666
My potentially misspelled
broccoli is on there.

