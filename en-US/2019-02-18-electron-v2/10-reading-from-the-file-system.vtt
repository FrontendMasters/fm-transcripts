WEBVTT

1
00:00:00.200 --> 00:00:05.680
&gt;&gt; Steve Kinney: However,
if they do choose to read the file or

2
00:00:05.680 --> 00:00:10.240
if they do select a file, obviously just
giving them back the file name, not great.

3
00:00:10.240 --> 00:00:15.284
This is a text editor, we should probably
get the text contents of the file.

4
00:00:15.284 --> 00:00:18.103
So to do that we will need
to go up here and say,

5
00:00:20.460 --> 00:00:25.260
&gt;&gt; Steve Kinney: Const fs = require('fs').

6
00:00:26.540 --> 00:00:28.440
And that will bring us in
the file system module,

7
00:00:28.440 --> 00:00:33.080
where once we have the name of the file,
we'll go ahead and we'll read the file and

8
00:00:33.080 --> 00:00:35.130
then we'll start by console logging it.

9
00:00:35.130 --> 00:00:38.694
Eventually, we'll figure out,
we'll say, hey, renderer process,

10
00:00:38.694 --> 00:00:42.510
I open this file here are the contents for
you to put it into the user interface.

11
00:00:42.510 --> 00:00:46.110
We'll get all the way there, but we will
start with just reading the file and

12
00:00:46.110 --> 00:00:47.030
logging into the console.

13
00:00:49.050 --> 00:00:51.870
So if there are no files,
we're gonna hit cancel.

14
00:00:51.870 --> 00:00:58.201
Otherwise, let's get the first
file out of the array.

15
00:00:58.201 --> 00:01:01.266
If you wanna use the array destruction
syntax you're more than welcome to.

16
00:01:01.266 --> 00:01:04.074
And then, so we've got the file name, and

17
00:01:04.074 --> 00:01:10.539
then we'll do,
&gt;&gt; Steve Kinney: Now,

18
00:01:10.539 --> 00:01:15.710
you could use the asynchronous method
to read file that take a call back.

19
00:01:15.710 --> 00:01:19.230
I'm going to use read file sync,
mostly just to keep it easy for

20
00:01:19.230 --> 00:01:21.082
us as we're learning electron.

21
00:01:21.082 --> 00:01:26.733
Generally speaking, read file sync blocks
the main process until it reads the file.

22
00:01:26.733 --> 00:01:29.493
If it's a giant file that's
probably not great, but

23
00:01:29.493 --> 00:01:31.454
we know that they're small files, so

24
00:01:31.454 --> 00:01:35.773
I'm not gonna make things more complicated
with call backs personally right now.

25
00:01:35.773 --> 00:01:39.404
But we'll go ahead and
we'll read file sync.

26
00:01:39.404 --> 00:01:43.664
And we'll do that with the file name, and
that will actually, let's go ahead and

27
00:01:43.664 --> 00:01:47.648
do it like this real quick, and
we'll see the quick problem here, he says.

28
00:01:57.550 --> 00:01:58.912
&gt;&gt; Steve Kinney: Go ahead and pick that.

29
00:01:58.912 --> 00:02:00.624
You can see I get this buffer.

30
00:02:00.624 --> 00:02:03.822
Cuz node doesn't know if it's a text file,
or

31
00:02:03.822 --> 00:02:08.336
an image file, or a binary file,
or anything along those lines.

32
00:02:08.336 --> 00:02:13.085
So I can go ahead and just say,
&gt;&gt; Steve Kinney: toString.

33
00:02:13.085 --> 00:02:17.862
Which will actually make it a,
&gt;&gt; Steve Kinney: You can guess what

34
00:02:17.862 --> 00:02:18.687
it's gonna make it.

35
00:02:18.687 --> 00:02:19.799
It's gonna make it a string.

36
00:02:23.755 --> 00:02:28.885
&gt;&gt; Steve Kinney: Cool, and there is the
contents of my grocery list, red apples,

37
00:02:28.885 --> 00:02:35.155
green grapes, green apples, red grapes,
vegan ham, steak, I don't know.

38
00:02:35.155 --> 00:02:37.880
All right, so now we can read and
write from the file system.

39
00:02:37.880 --> 00:02:43.072
We can trigger that with a native OS
level file dialogue, that's pretty cool.

40
00:02:43.072 --> 00:02:47.303
But it would be a little bit better if we
could do a few more interesting things

41
00:02:47.303 --> 00:02:48.206
with it.

42
00:02:48.206 --> 00:02:49.510
First, before we do that,

43
00:02:49.510 --> 00:02:53.870
I do wanna talk about some of the options
that you have in the file dialog.

44
00:02:53.870 --> 00:02:55.130
We saw the openFile one.

45
00:02:55.130 --> 00:02:57.200
I talked a little bit about multi-select,
or

46
00:02:57.200 --> 00:03:00.680
the ability to select an entire
directory is a thing that you can do.

47
00:03:00.680 --> 00:03:02.350
We don't want any of those for
our application,

48
00:03:02.350 --> 00:03:03.930
cuz it's a single window application.

49
00:03:03.930 --> 00:03:06.470
They can't support a directory,
so on and so forth,

50
00:03:06.470 --> 00:03:07.610
so we're gonna stick with that one.

51
00:03:07.610 --> 00:03:10.340
But there are some other
things that you can do.

52
00:03:10.340 --> 00:03:12.220
Right now,
we're calling that toString method.

53
00:03:12.220 --> 00:03:13.349
And I was like, yeah,

54
00:03:13.349 --> 00:03:17.042
we call toString because node doesn't
know if it's an image or a binary.

55
00:03:17.042 --> 00:03:22.335
Neither do we, there is nothing stopping
the user right now from going ahead and

56
00:03:22.335 --> 00:03:24.471
opening up a dank meme, right?

57
00:03:24.471 --> 00:03:28.130
And toString'ing that will be
a bunch of binary garbage.

58
00:03:28.130 --> 00:03:33.090
So we need to figure out a way to filter
out what the user can actually select.

59
00:03:34.300 --> 00:03:38.046
And the way we can do that is
we can just say filters, and

60
00:03:38.046 --> 00:03:43.446
filters is an array of all the file types
that you want to allow the user to open.

61
00:03:43.446 --> 00:03:52.083
So in this case we could say,
&gt;&gt; Steve Kinney: name:'Text Files',

62
00:03:52.083 --> 00:03:57.752
and we'll say extensions: ['txt',
'text']},

63
00:03:57.752 --> 00:04:03.088
are there any other common extensions for
text files?

64
00:04:03.088 --> 00:04:03.974
That feels good right?

65
00:04:03.974 --> 00:04:05.231
&gt;&gt; Speaker 2: CSV.

66
00:04:05.231 --> 00:04:07.011
&gt;&gt; Steve Kinney: Is that
really a text file?

67
00:04:07.011 --> 00:04:08.014
&gt;&gt; Speaker 2: MD.

68
00:04:08.014 --> 00:04:12.690
&gt;&gt; Steve Kinney: You're reading my mind,
you're reading my mind.

69
00:04:12.690 --> 00:04:15.999
We'll also say something along the lines
of name cuz this is a markdown

70
00:04:15.999 --> 00:04:16.849
editor, right?

71
00:04:16.849 --> 00:04:18.173
So MD is a good thought.

72
00:04:18.173 --> 00:04:20.548
We'll say Markdown Files.

73
00:04:26.603 --> 00:04:31.414
&gt;&gt; Steve Kinney: I'll say,
md, mdown, markdown.

74
00:04:36.866 --> 00:04:40.040
&gt;&gt; Steve Kinney: I'll make a new
file extension named after Marc,

75
00:04:40.040 --> 00:04:41.257
called marcdown.

76
00:04:41.257 --> 00:04:45.017
It'd be good, cool.

77
00:04:45.017 --> 00:04:47.685
So this is text and then we're fine.

78
00:04:47.685 --> 00:04:51.504
And so this will allow the user,
now if you're on Windows by default,

79
00:04:51.504 --> 00:04:56.039
you'll actually see a drop-down which will
allow you to select which kind of files

80
00:04:56.039 --> 00:04:56.980
you wanna pick.

81
00:04:56.980 --> 00:05:01.060
Depending on your version of Mac OS,
you can choose to see that,

82
00:05:01.060 --> 00:05:04.120
we'll talk about what
that means in a second.

83
00:05:04.120 --> 00:05:07.906
Let's actually just get this up and
running first.

84
00:05:07.906 --> 00:05:12.456
Unexpected token,
cuz I didn't put a comma at the end.

85
00:05:14.166 --> 00:05:15.534
&gt;&gt; Steve Kinney: Cool.

86
00:05:21.968 --> 00:05:25.540
&gt;&gt; Steve Kinney: All right, so I can
go ahead, I can see this File dialog.

87
00:05:25.540 --> 00:05:28.861
You can see these are normal,
but if I go on to, let's say,

88
00:05:28.861 --> 00:05:34.564
my documents directory,
&gt;&gt; Steve Kinney: You can see that

89
00:05:34.564 --> 00:05:39.411
things that are not markdown files are
grayed out and I can't choose them, right?

90
00:05:39.411 --> 00:05:43.902
The other thing is if you're in Windows
you can see a drop down also depending on

91
00:05:43.902 --> 00:05:47.439
your version of MacOS there might
be this option spot in here,

92
00:05:47.439 --> 00:05:49.670
where you can actually also see.

93
00:05:49.670 --> 00:05:53.050
And I named that markdown files and
text files.

94
00:05:53.050 --> 00:05:56.200
You could name that whatever your
custom application is, right?

95
00:05:56.200 --> 00:05:58.900
I could've named them fire sale documents,
and

96
00:05:58.900 --> 00:06:00.980
that would've been what
was displayed there.

97
00:06:00.980 --> 00:06:02.400
Windows, you get that by default.

98
00:06:02.400 --> 00:06:05.094
Mac, you might have
an Options button there.

99
00:06:05.094 --> 00:06:08.963
Otherwise, MacOS will still respect it
just by graying out things that are not

100
00:06:08.963 --> 00:06:09.970
valid in that list.

