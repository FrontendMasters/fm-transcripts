WEBVTT

1
00:00:00.290 --> 00:00:02.349
So, and that's, yeah?

2
00:00:02.349 --> 00:00:05.357
&gt;&gt; The set loader thing,
you would also put in the reducer, right?

3
00:00:05.357 --> 00:00:06.550
&gt;&gt; Yeah, let's do it.

4
00:00:06.550 --> 00:00:07.445
Let's do it, why not?

5
00:00:07.445 --> 00:00:08.739
Let's live code.

6
00:00:08.739 --> 00:00:12.553
Okay, so here we go, let's do it.

7
00:00:12.553 --> 00:00:14.143
So here we're entities.

8
00:00:14.143 --> 00:00:18.570
Let's say that loading is false,

9
00:00:18.570 --> 00:00:22.239
cuz we do want to kick it off.

10
00:00:22.239 --> 00:00:27.032
A lot of times we cheat where when we do
in our React does we assume that it hasn't

11
00:00:27.032 --> 00:00:31.754
loaded yet, we start you state load,
loading is true, and then turn it off,

12
00:00:31.754 --> 00:00:32.282
right?

13
00:00:32.282 --> 00:00:33.295
Maybe you're better than me.

14
00:00:33.295 --> 00:00:37.703
But we'll start to false, we do.

15
00:00:37.703 --> 00:00:41.175
The one kind of thing that I'm gonna

16
00:00:41.175 --> 00:00:45.700
do here is I am gonna say
that is optional prop.

17
00:00:45.700 --> 00:00:48.641
Cuz I have like my one test and
it's passing right now, and

18
00:00:48.641 --> 00:00:49.974
it doesn't really know.

19
00:00:49.974 --> 00:00:55.220
I don't need TypeScript behind me so
I will say that it's

20
00:00:55.220 --> 00:01:00.805
an optional proposition,
it'll be a Boolean if it exists.

21
00:01:00.805 --> 00:01:02.755
Cool, we don't need this anymore.

22
00:01:02.755 --> 00:01:07.939
This is again from the fake API,
that's the same data.

23
00:01:07.939 --> 00:01:12.814
So we've got all that in place,
and this will get called.

24
00:01:12.814 --> 00:01:16.880
And so one thing I might do is yeah, I
will I would do this point if I wanted to

25
00:01:16.880 --> 00:01:19.262
answer question is, I would say builder.

26
00:01:19.262 --> 00:01:25.593
And I'm only putting it above not
because order operations matters, but

27
00:01:25.593 --> 00:01:30.712
for me as a human,
that order matters, Redux don't care.

28
00:01:30.712 --> 00:01:36.011
I would say fetch tasks, Pending-

29
00:01:36.011 --> 00:01:40.365
&gt;&gt; Just do it in the other fetch?

30
00:01:40.365 --> 00:01:42.464
&gt;&gt; I don't have to, right?

31
00:01:42.464 --> 00:01:45.678
Like that action creator is gonna
fire its own pending action.

32
00:01:45.678 --> 00:01:48.558
If we look at it, like in the tools,

33
00:01:48.558 --> 00:01:54.127
it fired a pending action that's
going through the Reducer anyway.

34
00:01:54.127 --> 00:01:56.079
It's already doing all that for me.

35
00:01:56.079 --> 00:02:02.592
When I kick off that fetch test,
it immediately fires the pending action.

36
00:02:02.592 --> 00:02:09.898
It immediate, like, then when it resolves
or rejects, fires the end state one.

37
00:02:09.898 --> 00:02:12.592
So then I just say like, cool,
these things are all happening.

38
00:02:12.592 --> 00:02:16.736
Anything that cares about any of these
things can respond as it wants to, but

39
00:02:16.736 --> 00:02:17.720
I don't have to.

40
00:02:17.720 --> 00:02:23.776
&gt;&gt; Is there a risk with what you did with
imperatively calling stored that dispatch?

41
00:02:23.776 --> 00:02:26.667
Let's say, what if, for example,

42
00:02:26.667 --> 00:02:32.373
the promise comes back earlier than
the UI is ready to accept the events?

43
00:02:32.373 --> 00:02:36.947
&gt;&gt; So the UI is only going to call
useSelector when it's ready, right?

44
00:02:36.947 --> 00:02:37.520
&gt;&gt; Yes.

45
00:02:37.520 --> 00:02:39.570
&gt;&gt; So that object will be ready to go.

46
00:02:39.570 --> 00:02:42.130
Yeah, look who mounted.

47
00:02:42.130 --> 00:02:45.568
Here's that data,
I had it waiting for you, right?

48
00:02:45.568 --> 00:02:49.068
And so that's kind of what we said
before which is with use effect,

49
00:02:49.068 --> 00:02:52.584
you've waited for the entire UI to render,
let's get some data.

50
00:02:52.584 --> 00:02:55.098
&gt;&gt; Since this is gonna get you, since this
is the reference to the store is gonna be

51
00:02:55.098 --> 00:02:56.865
single [CROSSTALK]
&gt;&gt; Yeah, the store,

52
00:02:56.865 --> 00:03:01.922
that's the cool thing about Redux is that
exists completely agnostic of React.

53
00:03:01.922 --> 00:03:05.485
React is like all React Redux does
is passes a story which may or

54
00:03:05.485 --> 00:03:08.376
may not already have the data
that it already got.

55
00:03:08.376 --> 00:03:12.322
And then those Redux hooks grab in and
say, you got anything for me?

56
00:03:12.322 --> 00:03:14.439
Yeah, I already loaded it,
dude, it's ready.

57
00:03:14.439 --> 00:03:16.123
Yeah, totally works.

58
00:03:19.670 --> 00:03:21.376
What was I saying?

59
00:03:21.376 --> 00:03:27.025
Pending, and so here we'll say, I see.

60
00:03:27.025 --> 00:03:29.836
Yeah it's just a builder
case above the previous one.

61
00:03:29.836 --> 00:03:33.292
I put it above there cuz it's like one-
&gt;&gt; My fulfilled is where you'll switch it

62
00:03:33.292 --> 00:03:34.245
back to false, right?

63
00:03:34.245 --> 00:03:35.221
&gt;&gt; Exactly.
&gt;&gt; Yeah, okay.

64
00:03:35.221 --> 00:03:36.659
&gt;&gt; Yeah.
&gt;&gt; That's where I was.

65
00:03:38.903 --> 00:03:46.418
&gt;&gt; And so here we'll say,
This is why that stuff becomes real nice.

66
00:03:46.418 --> 00:03:49.744
I don't have to like spread the state or
they just say, yeah, that is true.

67
00:03:52.368 --> 00:03:54.094
All right, you can get what the action is.

68
00:04:02.164 --> 00:04:06.783
Cool, and that should all flow through.

69
00:04:06.783 --> 00:04:12.323
And let's go add some kind of, I mean,
the nice part is to show you the tools.

70
00:04:17.697 --> 00:04:22.520
I can look at a net, I can look at
the state where loading was false,

71
00:04:22.520 --> 00:04:27.275
pending happen, loading got set to True,
Fulfilled happened.

72
00:04:27.275 --> 00:04:29.040
Loading down here.

73
00:04:30.277 --> 00:04:32.984
Somewhere after there's a lot of tasks.

74
00:04:32.984 --> 00:04:34.275
I know it's somewhere in there.

