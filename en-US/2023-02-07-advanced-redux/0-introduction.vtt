WEBVTT

1
00:00:00.330 --> 00:00:05.240
Hi, my name is Steve Kinney, and I am the
head of front end engineering at Temporal.

2
00:00:06.540 --> 00:00:09.978
We're going to talk about Redux.

3
00:00:09.978 --> 00:00:13.786
But we did a little chat a while
back on Redux fundamentals,

4
00:00:13.786 --> 00:00:17.304
where we talked about the bare
bones of Redux, right?

5
00:00:17.304 --> 00:00:21.350
And that we started out with,
could you write your own Redux?

6
00:00:21.350 --> 00:00:25.095
And I think the elegance of Redux, both
the elegance and I think the tricky part

7
00:00:25.095 --> 00:00:28.782
of using it in production that a lot of
people have found out over the years is,

8
00:00:28.782 --> 00:00:32.187
hey, it's just a function that takes
the current state of the world and

9
00:00:32.187 --> 00:00:33.600
action gives you a new one.

10
00:00:33.600 --> 00:00:34.800
Great, awesome, right?

11
00:00:34.800 --> 00:00:38.503
It's got some nice little things
like it supports middleware and

12
00:00:38.503 --> 00:00:42.608
it's got this idea of, the developer
tools that are available to you and

13
00:00:42.608 --> 00:00:45.450
stuff along those lines,
and that's all great.

14
00:00:45.450 --> 00:00:49.879
However, setting up that middleware with
developer tool involves something that

15
00:00:49.879 --> 00:00:52.860
you have to Google every single time.

16
00:00:52.860 --> 00:00:55.093
Then you go to,
I would love to have TypeScript support.

17
00:00:55.093 --> 00:00:59.558
And you're like, well,
either it's very tedious and

18
00:00:59.558 --> 00:01:05.738
manual like a lot of things are in Redux
or you have to write some arcane types.

19
00:01:05.738 --> 00:01:07.643
And then it's kind of that like,

20
00:01:07.643 --> 00:01:10.651
there's a lot of power to
the idea that you can have.

21
00:01:10.651 --> 00:01:14.872
Its simplicity makes it so
the fact that it's 100% unit testable, for

22
00:01:14.872 --> 00:01:18.300
even your promises happen outside
of the actual Redux flow.

23
00:01:18.300 --> 00:01:22.474
So as long as you dispatch an action
that says request, whatever,

24
00:01:22.474 --> 00:01:26.286
fulfilled, you can say,
this is how my state would update.

25
00:01:26.286 --> 00:01:32.258
And it's really powerful, but there became
so much ceremony and so much tedium.

26
00:01:32.258 --> 00:01:37.216
And what actually is the best
practice around setting up Redux that

27
00:01:37.216 --> 00:01:42.438
after one blows through, kind of
the introduction, you are left with

28
00:01:42.438 --> 00:01:48.190
a whole new set of questions with
sometimes unclear answers, right?

29
00:01:48.190 --> 00:01:53.239
So our goal today is to do a series of
meditations on what are the answers

30
00:01:53.239 --> 00:01:58.203
to those questions that you commonly
run into when you're like, and

31
00:01:58.203 --> 00:02:01.640
now I'm gonna use this in production,
right?

32
00:02:01.640 --> 00:02:04.040
And we'll kind of look
at some of those things.

33
00:02:04.040 --> 00:02:09.047
Now, people turns out have used
Redux in production before.

34
00:02:09.047 --> 00:02:12.262
So there are answers and like most things,

35
00:02:12.262 --> 00:02:16.192
particularly with a tool
that is both simplicity and

36
00:02:16.192 --> 00:02:21.374
flexibility are usually bound
together in this idea of simplicity,

37
00:02:21.374 --> 00:02:25.482
flexibility, and
you have to make a bunch of choices,

38
00:02:25.482 --> 00:02:29.451
are usually kind of part and
parcel with each other.

39
00:02:29.451 --> 00:02:34.364
So but over the last however many years,
there have been a set of

40
00:02:34.364 --> 00:02:38.920
best practices that have kind
of formulated and emerged.

41
00:02:38.920 --> 00:02:42.385
Some of those we will talk about just
in the way, like restructure state and

42
00:02:42.385 --> 00:02:44.916
stuff that,
as we go through our own implementation.

43
00:02:44.916 --> 00:02:48.299
Some of those we will kind
of learn by both using and

44
00:02:48.299 --> 00:02:50.968
then pulling apart our Redux Toolkit.

45
00:02:50.968 --> 00:02:56.524
Which is basically the Redux community
over the last several years compiling and

46
00:02:56.524 --> 00:03:01.437
putting together a lot of the commonly
used tools that get used across.

47
00:03:01.437 --> 00:03:04.719
There was create flux standard actions,
cool,

48
00:03:04.719 --> 00:03:08.410
could we bring those in as
built-in action creators.

49
00:03:08.410 --> 00:03:14.086
You probably in development almost always
wanna wire up the Redux dev tools,

50
00:03:14.086 --> 00:03:19.323
and like I joked earlier, the way that
you hook into those in the browser

51
00:03:19.323 --> 00:03:24.320
is unmemorizable and needs to be
Googled for every single project.

52
00:03:24.320 --> 00:03:28.106
The setting up the constants
to hold actions and

53
00:03:28.106 --> 00:03:33.309
then these various things that we
had to do that were not helping us

54
00:03:33.309 --> 00:03:38.434
build our feature,
they're now kind of somewhat formalized.

55
00:03:38.434 --> 00:03:42.820
In a lot of ways, we have some tooling
around it to make our lives easier.

56
00:03:42.820 --> 00:03:46.710
And so I think this workshop is really for
two sets of people, right?

57
00:03:46.710 --> 00:03:50.616
I work in an app,
I'm all into redux but however,

58
00:03:50.616 --> 00:03:56.210
whether it's not spiritual,
I'm either forced or happy about it.

59
00:03:56.210 --> 00:04:00.870
But I am using Redux or
I've heard about this Redux thing before.

60
00:04:02.620 --> 00:04:07.640
I tried it out, the amount of things
that I had to do was just too tedious.

61
00:04:07.640 --> 00:04:11.308
I would like to see what the current
modern Redux stack is like.

62
00:04:11.308 --> 00:04:15.943
I think both of those are the target
thing that we are looking at here.

63
00:04:15.943 --> 00:04:20.883
Now, we will start a little bit with Redux
toolkit to just see what that means and

64
00:04:20.883 --> 00:04:22.136
what it looks like,

65
00:04:22.136 --> 00:04:26.880
and how the TypeScript support looks
in its fullest and most glorious form.

66
00:04:26.880 --> 00:04:30.642
But then the nice part about
everything in Redux toolkit,

67
00:04:30.642 --> 00:04:34.018
in so far that it is just
a amalgamation of tooling and

68
00:04:34.018 --> 00:04:38.316
best practices, is you can take any
given smaller piece of that and

69
00:04:38.316 --> 00:04:42.961
begin to use parts of it in your
existing application, if you have one.

70
00:04:42.961 --> 00:04:45.385
Yes, Mark.

71
00:04:45.385 --> 00:04:47.485
&gt;&gt; If you have some Redux experience,

72
00:04:47.485 --> 00:04:51.202
do you still recommend going
through the Redux fundamentals?

73
00:04:51.202 --> 00:04:56.200
&gt;&gt; If you've used it before,
I would say that even if you are like,

74
00:04:56.200 --> 00:05:01.470
I have used it a little bit before,
I mostly grok the basic idea.

75
00:05:01.470 --> 00:05:03.299
It is not a completely
foreign concept to me.

76
00:05:03.299 --> 00:05:04.530
You're good to go.

77
00:05:04.530 --> 00:05:08.680
If you've used Reducer in React,
you're probably good to go.

78
00:05:08.680 --> 00:05:12.394
Cuz the nice part, not only,
I think it's actually and

79
00:05:12.394 --> 00:05:16.043
accidentally really good
point that I made, if I may.

80
00:05:16.043 --> 00:05:20.646
For some of this stuff, not only could
you use some of the pieces of Redux

81
00:05:20.646 --> 00:05:23.273
toolkit in a legacy Redux application.

82
00:05:23.273 --> 00:05:26.597
It's not really a legacy,
it's still Redux.

83
00:05:26.597 --> 00:05:27.932
You can actually,

84
00:05:27.932 --> 00:05:32.698
if you used Reducer in a React app,
still use a bunch of these tools.

85
00:05:32.698 --> 00:05:37.020
They still work just as well, like some of
the component pieces that make up a slice.

86
00:05:38.520 --> 00:05:43.443
And so if you've got the general kind
of understanding of a Reducer and

87
00:05:43.443 --> 00:05:47.866
the idea that we dispatch actions,
and that is not a completely

88
00:05:47.866 --> 00:05:52.705
foreign concept to you, then I think
you are well suited to join us for

89
00:05:52.705 --> 00:05:55.650
the next little bit on this exploration.

90
00:05:55.650 --> 00:05:56.828
All right, so

91
00:05:56.828 --> 00:06:03.160
we have three major applications
that we are working with today.

92
00:06:03.160 --> 00:06:06.145
We've got this app called Super Tasker.

93
00:06:06.145 --> 00:06:10.036
And that is, it's a to-do list,
but it has statuses and

94
00:06:10.036 --> 00:06:13.535
superhero names, so
it's not like a to-do list.

95
00:06:13.535 --> 00:06:16.385
The interesting part about this
application is that it's not

96
00:06:16.385 --> 00:06:17.885
just check a box.

97
00:06:17.885 --> 00:06:21.164
This is the idea of having
two related models,

98
00:06:21.164 --> 00:06:26.780
this idea that a user has many tasks and
that a task belongs to a user, right?

99
00:06:26.780 --> 00:06:31.150
And so, how do you have an action
that maybe works through to reducers?

100
00:06:31.150 --> 00:06:34.842
One of the things, and
we'll talk about this in the workshop,

101
00:06:34.842 --> 00:06:39.090
one of the things that I have seen
a lot of teams, including my own teams,

102
00:06:39.090 --> 00:06:44.035
over the years do is, I have to fire six
different actions because I got to change

103
00:06:44.035 --> 00:06:49.180
the user and I got to change the task, and
I gotta change these three other things.

104
00:06:49.180 --> 00:06:50.600
And you don't, right?

105
00:06:50.600 --> 00:06:54.151
So we have a way that we can kinda
see what that looks like and

106
00:06:54.151 --> 00:06:56.630
some of the concepts in Redux like that.

107
00:06:57.720 --> 00:07:02.108
Along the way we will then also kind of
just look at a stupid counter to see what

108
00:07:02.108 --> 00:07:02.999
it looks like,

109
00:07:02.999 --> 00:07:07.480
to just try in a very simple app to see
what it looks like to migrate stuff from.

110
00:07:08.920 --> 00:07:12.940
Maybe either use reducer or regular
vanilla Redux to something in Redux

111
00:07:12.940 --> 00:07:16.420
toolkit and Typescript and
stuff along those lines.

112
00:07:16.420 --> 00:07:21.400
And then lastly, we will do a little bit
of explorations with RTK query, which is

113
00:07:21.400 --> 00:07:26.320
a set of features that come with React
toolkit, but you could do it separately.

114
00:07:26.320 --> 00:07:28.710
You actually don't even need
to use Redux to use it.

115
00:07:28.710 --> 00:07:32.588
A set of tools that deal with the fact
that these days it's not only just

116
00:07:32.588 --> 00:07:35.416
managing a bunch of state
in our applications, but

117
00:07:35.416 --> 00:07:39.730
usually there's a lot of talking back and
forth with the server.

118
00:07:39.730 --> 00:07:42.089
So if you don't have these cloned,

119
00:07:42.089 --> 00:07:46.900
the first one is called Super Tasker
cuz it's got superheroes.

120
00:07:46.900 --> 00:07:48.910
You should clone it and
then begin to install it.

121
00:07:48.910 --> 00:07:52.710
Give it a nice fresh pull down from main.

122
00:07:52.710 --> 00:07:53.690
We've got a little counter.

123
00:07:53.690 --> 00:07:57.343
We want the one with RTK at the end cuz
it's really right now it's got nothing

124
00:07:57.343 --> 00:07:57.980
set up in it.

125
00:07:57.980 --> 00:08:02.350
It's just a tabula rasa, but that way
we know it's set up with TypeScript.

126
00:08:02.350 --> 00:08:04.360
It's got all the right
NPM stuff installed.

127
00:08:04.360 --> 00:08:09.220
And then we have the one that we will use
with Arti Query at the end of the day.

128
00:08:09.220 --> 00:08:13.623
Which is to kind of just say another
packing list application that we can use,

129
00:08:13.623 --> 00:08:17.956
that has a mock API built, so we can see
all of the fun stuff stuff of mutations

130
00:08:17.956 --> 00:08:20.356
and queries and stuff along those lines.

131
00:08:20.356 --> 00:08:24.758
So like I said before, we are gonna start
the day in this task tracking app with

132
00:08:24.758 --> 00:08:29.499
a few little just like, hey, let's get our
head wrapped around some of the stuff,

133
00:08:29.499 --> 00:08:31.903
RTK with the counter and stuff like that.

134
00:08:31.903 --> 00:08:36.005
But half this stuff you can probably
just do in a code sandbox with anything.

135
00:08:36.005 --> 00:08:37.839
We'll start on the Super Tasker app.

136
00:08:37.839 --> 00:08:41.437
For most of, I would say the first
70% of our time together, and

137
00:08:41.437 --> 00:08:46.130
then do a few things in the packing list,
jetsetter app towards the very end.

138
00:08:46.130 --> 00:08:49.850
So if you don't have those now, just
make sure that you clone them down and

139
00:08:49.850 --> 00:08:52.790
NPM install because who doesn't
love a good NPM install?

140
00:08:53.920 --> 00:08:54.420
Awesome.

