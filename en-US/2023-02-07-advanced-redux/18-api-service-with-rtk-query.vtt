WEBVTT

1
00:00:00.336 --> 00:00:04.216
We're gonna talk a little
bit about RTK query.

2
00:00:04.216 --> 00:00:09.668
Like there's you can actually kinda see
like some of the pieces in the bold text.

3
00:00:09.668 --> 00:00:16.536
We wire some of the stuff up by
hand in using thunks, right?

4
00:00:16.536 --> 00:00:20.545
And that works there's obviously
a lot even like create a thunk but

5
00:00:20.545 --> 00:00:25.198
we had to like set the state ourselves for
loading, we had to turn it off when it

6
00:00:25.198 --> 00:00:29.226
wasn't loading there's probably
things that we need to do like.

7
00:00:29.226 --> 00:00:34.990
And that was the simplest case of
like go hit API put thing on screen.

8
00:00:34.990 --> 00:00:36.840
And that covers a lot of use cases, right?

9
00:00:36.840 --> 00:00:42.144
But like, stuff like Irene but
then also stuff like okay, but

10
00:00:42.144 --> 00:00:47.244
what if you wanna do like,
hit it again every five minutes,

11
00:00:47.244 --> 00:00:51.640
60 seconds, 30 seconds, whatever, right?

12
00:00:51.640 --> 00:00:53.313
What if you're gonna
do a polling interval?

13
00:00:53.313 --> 00:00:57.585
What if you wanna say, like,
I wanna hold on to the data,

14
00:00:57.585 --> 00:01:00.967
which I have implemented before, but then,

15
00:01:00.967 --> 00:01:05.339
like, when do you decide that
it gets subjected, right?

16
00:01:05.339 --> 00:01:08.945
If they're navigating away,
if they leave viewing a certain,

17
00:01:08.945 --> 00:01:11.703
if the component unmounts and
you throw it away.

18
00:01:11.703 --> 00:01:15.714
And then the component remounts and like
especially if there's a used effect on it,

19
00:01:15.714 --> 00:01:17.929
whatever, you'd re fetch the data, right?

20
00:01:17.929 --> 00:01:21.584
It would be great if like yeah if
something they navigated away and

21
00:01:21.584 --> 00:01:24.581
came back,
we still held onto that data in the store.

22
00:01:24.581 --> 00:01:28.957
Like to kinda your question earlier,
like I forget who ask like, what happens

23
00:01:28.957 --> 00:01:33.416
if the promise comes back from the thunk
before the application bootstrapped?

24
00:01:33.416 --> 00:01:35.315
We're like, cool,
we have the data ready to go for you.

25
00:01:35.315 --> 00:01:36.953
Here it is, right?

26
00:01:36.953 --> 00:01:41.483
And it would be nice if we could have
stuff like that yeah where if they just

27
00:01:41.483 --> 00:01:44.454
navigated away,
they could put it un mounted,

28
00:01:44.454 --> 00:01:47.672
they came back like it's
been under 60 seconds.

29
00:01:47.672 --> 00:01:48.985
Here it is.
And if we wanted to,

30
00:01:48.985 --> 00:01:53.310
we're gonna kick off another poll every
60 seconds, yeah stuff like that,

31
00:01:53.310 --> 00:01:56.404
like there's a lot of nuance
to things that we wanna do.

32
00:01:56.404 --> 00:02:01.287
The important thing to note though, is how
much of that is really state management

33
00:02:01.287 --> 00:02:05.490
and our state management and
the fetching of the data from the server.

34
00:02:05.490 --> 00:02:09.451
The same thing or they just kind
of like siblings or cousins and

35
00:02:09.451 --> 00:02:11.134
stuff along those lines.

36
00:02:11.134 --> 00:02:16.016
So like the interesting part about our RTK
Query and the reason I wanna talk about is

37
00:02:16.016 --> 00:02:20.283
cuz like you can't really talk about
thunks without talking about it.

38
00:02:20.283 --> 00:02:23.020
However, like they're kind of
like slightly different animals.

39
00:02:23.020 --> 00:02:24.415
It's super useful.

40
00:02:24.415 --> 00:02:26.314
The two disclaimers I wanna make.

41
00:02:26.314 --> 00:02:31.193
One you do not have to be
using RTK Query like if you

42
00:02:31.193 --> 00:02:35.715
do not need to be using
Redux to use RTK Query.

43
00:02:35.715 --> 00:02:39.702
And you do not need to use RTK Query and

44
00:02:39.702 --> 00:02:43.437
use Redux like they are separate.

45
00:02:43.437 --> 00:02:47.338
You can use either or both.

46
00:02:47.338 --> 00:02:49.284
That is the question one.

47
00:02:49.284 --> 00:02:51.587
Answer one to questions
that weren't asked.

48
00:02:51.587 --> 00:02:56.882
Answer to two questions that weren't
asked is, well, what about React query?

49
00:02:56.882 --> 00:02:58.004
What about Apollo?

50
00:02:58.004 --> 00:02:59.263
What about Oracle?

51
00:02:59.263 --> 00:03:04.132
Yeah, if you're using those use them,
right?

52
00:03:04.132 --> 00:03:06.930
I think the interesting part
like one if you're not, right?

53
00:03:06.930 --> 00:03:09.701
There's different charts that show
the different like, what they have and

54
00:03:09.701 --> 00:03:10.575
what they don't have.

55
00:03:10.575 --> 00:03:15.158
I think the interesting part about RTK
Query is that it is very much like this

56
00:03:15.158 --> 00:03:15.756
is like.

57
00:03:15.756 --> 00:03:18.426
Or even like us SWF or
like any of those libraries that

58
00:03:18.426 --> 00:03:22.431
are supposed to be better versions of
fetch that can give you loading states and

59
00:03:22.431 --> 00:03:25.544
error states and retries and
all those things out of the box.

60
00:03:25.544 --> 00:03:28.761
RTK Query its advantages
if you're interested or

61
00:03:28.761 --> 00:03:31.602
the fact that one it is
built on top of Redux.

62
00:03:31.602 --> 00:03:35.802
And so everything is an action
which means if for instance,

63
00:03:35.802 --> 00:03:38.994
if you're like evaluated
a bunch of these and

64
00:03:38.994 --> 00:03:43.110
you do have a bunch of like
Redux actions already firing and

65
00:03:43.110 --> 00:03:48.331
you are living in that Redux developer
tool console all the time, right?

66
00:03:48.331 --> 00:03:53.345
And you want the actions that
come back from this to be able

67
00:03:53.345 --> 00:03:58.255
to kick off things that happen
other places in your App,

68
00:03:58.255 --> 00:04:03.179
then like, sure,
like absolutely go do that, right?

69
00:04:03.179 --> 00:04:05.763
Like that seems totally reasonable, right?

70
00:04:05.763 --> 00:04:07.051
It will integrate nicely.

71
00:04:07.051 --> 00:04:11.516
It does not necessarily like I can't
remember if this is just like listening

72
00:04:11.516 --> 00:04:15.230
to like an interview with one of like,
[COUGH] the maintainers.

73
00:04:15.230 --> 00:04:17.161
I'm finding that they're like
claiming that it's better.

74
00:04:17.161 --> 00:04:21.457
It's just nicely integrated with Redux if
that is the thing that interests you and

75
00:04:21.457 --> 00:04:24.896
is like some of the kind of common
practices built on top of Redux.

76
00:04:24.896 --> 00:04:28.678
So I think one is also interesting just
to see like how far you could go down

77
00:04:28.678 --> 00:04:30.545
the rabbit hole of what we just saw.

78
00:04:30.545 --> 00:04:33.775
And two it feels irresponsible to
now talk about a thing literally

79
00:04:33.775 --> 00:04:36.016
included in the package
that you can import.

80
00:04:36.016 --> 00:04:41.200
Again, I will repeat the things at the
very beginning, which is if you use Redux,

81
00:04:41.200 --> 00:04:46.402
Redux Toolkit you do not need to use RTK
Query for anything those thunks will work.

82
00:04:46.402 --> 00:04:47.960
Redux observable work.

83
00:04:47.960 --> 00:04:50.773
And if you wanna use RTK Query,
you don't have to use Redux for

84
00:04:50.773 --> 00:04:52.413
the rest of your state management.

85
00:04:52.413 --> 00:04:56.484
It's like Redux is for your state
management that has been the theme of our

86
00:04:56.484 --> 00:04:58.598
time together is talking about that.

87
00:04:58.598 --> 00:05:01.769
That said, this is actually
something I'm really excited about.

88
00:05:01.769 --> 00:05:04.212
And I'm starting to use on a work project.

89
00:05:04.212 --> 00:05:06.277
And I kinda wanted to show it to you.

90
00:05:06.277 --> 00:05:09.662
[LAUGH] I kinda take you on a little
bit of tour because I think it is,

91
00:05:09.662 --> 00:05:11.830
especially if you have a Redux code base.

92
00:05:11.830 --> 00:05:15.054
And what are like interested in how
those things can Interplay together,

93
00:05:15.054 --> 00:05:18.179
worth taking a little bit of time to
see the patterns there and explore.

94
00:05:18.179 --> 00:05:24.193
So it's kinda like our little bonus run,
and we'll kinda take a look at it.

95
00:05:24.193 --> 00:05:29.150
Just like to prove the point
that you don't need to have any

96
00:05:29.150 --> 00:05:32.801
Redux infrastructure kind of installed.

97
00:05:32.801 --> 00:05:36.415
I like switched apps on us.

98
00:05:36.415 --> 00:05:39.778
And this one,
this React App has nothing in it.

99
00:05:39.778 --> 00:05:41.764
It has no state management to speak of.

100
00:05:41.764 --> 00:05:44.782
I think it's got empty
arrays in various places.

101
00:05:44.782 --> 00:05:49.573
And I mostly did that to prove the point
of like, you need to have all this set up.

102
00:05:49.573 --> 00:05:52.464
It's like a thing that
you can kind of use and

103
00:05:52.464 --> 00:05:55.834
it provides everything kind
of ready to go for you.

104
00:05:55.834 --> 00:06:00.887
So we'll kinda take it for a spin in
this app, which was a later decision.

105
00:06:00.887 --> 00:06:05.735
So well, we'll find out but
we'll pull it in and see.

106
00:06:05.735 --> 00:06:09.988
So let's kind of explore
like how this goes.

107
00:06:09.988 --> 00:06:13.917
And like see what some of the patterns are
like what kinda you know do it on a very

108
00:06:13.917 --> 00:06:16.696
like high level but
I think that there's a lot there and

109
00:06:16.696 --> 00:06:19.136
a lot of the features
are worth investigating.

110
00:06:19.136 --> 00:06:24.872
So, let's say like in we had a directory

111
00:06:24.872 --> 00:06:30.791
called features for like slices before.

112
00:06:30.791 --> 00:06:35.008
In this case we're gonna have one
called services which conveniently

113
00:06:35.008 --> 00:06:38.082
is the pattern that they
recommend from the team and

114
00:06:38.082 --> 00:06:41.027
also the same pattern that
I use my own code base.

115
00:06:41.027 --> 00:06:44.779
That everyone looks at me like I'm crazy,
but

116
00:06:44.779 --> 00:06:49.026
I call the things a fetch
things to the API services.

117
00:06:49.026 --> 00:06:53.278
And then I have to re-explain that to
everyone in the back-end team cuz I

118
00:06:53.278 --> 00:06:58.105
call everything a service that I'm just
calling my data fetching my API service.

119
00:06:58.105 --> 00:07:00.972
I can't remember where
I stole the term from,

120
00:07:00.972 --> 00:07:03.924
probably Amber probably five or
six years ago.

121
00:07:03.924 --> 00:07:06.803
Because that's where I
stole most things from but,

122
00:07:06.803 --> 00:07:09.624
like I'm glad that like
somebody is there with me.

123
00:07:09.624 --> 00:07:14.186
And so instead of slices
we create the services and

124
00:07:14.186 --> 00:07:19.298
the general rule is you
probably only have one service.

125
00:07:19.298 --> 00:07:24.904
The kind of rule is basically a service

126
00:07:24.904 --> 00:07:29.116
per like base API endpoint.

127
00:07:29.116 --> 00:07:33.863
Like if you're only talking to one API,
like not like,

128
00:07:33.863 --> 00:07:39.121
we've got tasks,
I've got users like No, one API, right?

129
00:07:39.121 --> 00:07:40.139
Then that would be one.

130
00:07:40.139 --> 00:07:42.584
If you're talking to two
completely different APIs,

131
00:07:42.584 --> 00:07:44.135
then you might have two services.

132
00:07:44.135 --> 00:07:48.538
But it's usually one per like root
endpoint that you would talk to.

133
00:07:48.538 --> 00:07:53.538
And it is included in kind of a
sub-package inside of it, of its toolkit,

134
00:07:53.538 --> 00:07:56.458
and so
what we're gonna do is we'll pull in

135
00:07:59.860 --> 00:08:04.061
Well, this and we'll say go
work the way that I want it to.

136
00:08:07.313 --> 00:08:09.383
I made this like do
imports the better way.

137
00:08:13.910 --> 00:08:17.646
Redux I'd say.

138
00:08:17.646 --> 00:08:19.652
&gt;&gt; Too bad that doesn't auto complete.

139
00:08:19.652 --> 00:08:25.270
&gt;&gt; Yeah, imports are funny sometimes.

140
00:08:25.270 --> 00:08:28.588
So we'll say we were joking earlier.

141
00:08:28.588 --> 00:08:29.411
That like auto import.

142
00:08:29.411 --> 00:08:30.432
Works 50% of the time.

143
00:08:30.432 --> 00:08:31.241
Works every time.

144
00:08:34.221 --> 00:08:38.276
Redox yeah now's autocompleting when
before it was just like no I'm not

145
00:08:38.276 --> 00:08:38.876
doing it.

146
00:08:38.876 --> 00:08:41.014
That's great I love it.

147
00:08:41.014 --> 00:08:46.637
Now there's Redox toolkit/Query
which is technically RTK Query and

148
00:08:46.637 --> 00:08:51.411
there's another one called
Redux Toolkit Query/react.

149
00:08:51.411 --> 00:08:52.024
What do you think?

150
00:08:52.024 --> 00:08:54.252
Like we'll see why.

151
00:08:54.252 --> 00:08:55.672
That's cool.

152
00:08:55.672 --> 00:09:01.813
But like the point like it's a react
version the other one is you know

153
00:09:01.813 --> 00:09:07.979
if not putting that part in there
is UI framework agnostic, right?

154
00:09:07.979 --> 00:09:12.143
There's something called
the react version that we'll see.

155
00:09:12.143 --> 00:09:15.878
And so
the same way that we made a slice before.

156
00:09:15.878 --> 00:09:25.029
We're just gonna say We'll say like,
I'm gonna call it like a task API.

157
00:09:25.029 --> 00:09:27.258
I mean, these are items this time, right?

158
00:09:27.258 --> 00:09:31.579
Item API like cuz this thing
really only has items involved

159
00:09:31.579 --> 00:09:35.378
like I'll show you the fake
endpoints in a second.

160
00:09:35.378 --> 00:09:36.853
It's a packing list.

161
00:09:36.853 --> 00:09:38.078
There's only one set of endpoints.

162
00:09:38.078 --> 00:09:39.599
Calling it an items API seems right.

163
00:09:39.599 --> 00:09:43.378
I guess I could call it just an API too.

164
00:09:43.378 --> 00:09:44.435
But I'll name it.

165
00:09:44.435 --> 00:09:48.976
And we're gonna say that
that is this create API.

166
00:09:48.976 --> 00:09:51.268
Okay.
So it takes a few things.

167
00:09:51.268 --> 00:09:57.643
One is like what you want this
like reducer path to be called.

168
00:10:02.046 --> 00:10:03.068
And you just give it some name.

169
00:10:03.068 --> 00:10:10.520
This is kinda like the name
that we had previously And

170
00:10:10.520 --> 00:10:17.089
then we give it this baseQuery, which is
like what's the common part of that API?

171
00:10:17.089 --> 00:10:20.467
And we can give this abstraction
around fetch that is kinda built in.

172
00:10:20.467 --> 00:10:24.514
You could also if you wanna use a GraphQL,
you're gonna write a logic for

173
00:10:24.514 --> 00:10:28.374
getting those requests and
responses and stuff like that yourself.

174
00:10:28.374 --> 00:10:32.000
And so
like you can use it with anything, but

175
00:10:32.000 --> 00:10:35.137
like I have a fake API ready for fetch.

176
00:10:35.137 --> 00:10:40.776
And that's other than a little WebG or
PC sometimes, what I generally use.

177
00:10:40.776 --> 00:10:43.618
And then like the base of
this is the base URLs.

178
00:10:46.698 --> 00:10:47.991
And we'll do such on API.

179
00:10:50.243 --> 00:10:51.299
Awesome.

180
00:10:51.299 --> 00:10:54.225
Right?
And that's kind of the like initial high

181
00:10:54.225 --> 00:10:58.214
level and we'll have to wire it up and
wrap it around in a second.

182
00:10:58.214 --> 00:11:00.268
But would you agree about.

183
00:11:04.227 --> 00:11:05.825
Maybe missing some things in there but
it's fine.

184
00:11:05.825 --> 00:11:08.058
Yeah, I need to put in points and
that makes sense.

185
00:11:08.058 --> 00:11:08.955
All right.

186
00:11:08.955 --> 00:11:14.554
So endpoints are kind of
like a reducer in this and

187
00:11:14.554 --> 00:11:18.524
they will get, what do you think?

188
00:11:18.524 --> 00:11:22.314
A builder, so you can see that
the pattern has a lot of overlap.

189
00:11:22.314 --> 00:11:27.197
And I guess like you could
say that like not only does

190
00:11:27.197 --> 00:11:31.740
it integrate nicely,
as well, but like also,

191
00:11:31.740 --> 00:11:37.205
it is useful for
it's actually nice to return an object.

192
00:11:37.205 --> 00:11:39.651
So I'm gonna do the I can
return an object I can also do.

193
00:11:39.651 --> 00:11:42.019
I was trying an object.

194
00:11:42.019 --> 00:11:43.352
And these are our endpoints.

195
00:11:43.352 --> 00:11:46.137
So we could have something like get items.

196
00:11:47.595 --> 00:11:50.094
And what does get items do, right?

197
00:11:50.094 --> 00:11:54.968
It's going to say builder,
you can get nice part.

198
00:11:54.968 --> 00:11:57.365
As you can see,
the builder has two methods.

199
00:11:57.365 --> 00:12:00.756
A query, get a mutation, do,

200
00:12:00.756 --> 00:12:05.458
right, put, post, delete, whatever.

201
00:12:05.458 --> 00:12:07.132
That we have in place and

202
00:12:07.132 --> 00:12:11.998
in there we can also say like what
that is eventually going to return.

203
00:12:11.998 --> 00:12:15.754
So we'll say it's in this case items and
if it takes any arguments.

204
00:12:15.754 --> 00:12:20.562
So for instance like obviously
like get all my take params,

205
00:12:20.562 --> 00:12:27.023
my take away friends whatever like we were
not putting a dynamic piece in there.

206
00:12:27.023 --> 00:12:30.375
So we'll just say void, right?

207
00:12:30.375 --> 00:12:34.058
And I don't want a mutation I want query.

208
00:12:34.058 --> 00:12:34.911
Awesome.

209
00:12:34.911 --> 00:12:36.047
And so I can do that.

210
00:12:36.047 --> 00:12:41.584
And then that is gonna take
another like configuration object.

211
00:12:41.584 --> 00:12:44.636
Which is why it's like, okay,
what is the query in this case?

212
00:12:44.636 --> 00:12:48.270
And so the query for us is just like,
what is the endpoint?

213
00:12:48.270 --> 00:12:52.828
If it took an argument, like if you're
like, get me item number three,

214
00:12:52.828 --> 00:12:55.241
that's where that would go, right?

215
00:12:55.241 --> 00:12:58.884
But in this case, like we're gonna start
with just the easy one, which is items.

216
00:13:00.938 --> 00:13:03.180
And that is the beginning
of how this works.

217
00:13:03.180 --> 00:13:08.108
We just wanted to immediately like fetch
the items and have them ready to go.

218
00:13:08.108 --> 00:13:12.283
We have like the beginnings of
an entire like API service.

219
00:13:12.283 --> 00:13:15.368
And like ideally for this endpoint,

220
00:13:15.368 --> 00:13:19.456
you would add all of these like in place,
right?

221
00:13:19.456 --> 00:13:25.563
And so your get items you'd have get, if
it was the other app, we'd have get tasks,

222
00:13:25.563 --> 00:13:31.265
get users, all of those things as things
that you could like call in this case.

223
00:13:31.265 --> 00:13:32.608
And we have that.

224
00:13:32.608 --> 00:13:37.476
And if we had a store, like I'll show
you like if you have an existing store,

225
00:13:37.476 --> 00:13:40.992
like there are some things on
this API that you can use.

226
00:13:40.992 --> 00:13:45.964
Which is how like when we saw a configure
store before, it was a key and a value

227
00:13:45.964 --> 00:13:51.189
like tasks and there was the task reducer,
user, and there was users reducer.

228
00:13:51.189 --> 00:13:55.896
This API, not a slice service,
if we looked at it,

229
00:13:55.896 --> 00:13:59.408
item API has a bunch of fun stuff in it.

230
00:13:59.408 --> 00:14:00.643
It's got endpoints.

231
00:14:00.643 --> 00:14:02.293
And kinda look at that and

232
00:14:02.293 --> 00:14:07.257
see that it's got the getItems on it
already like set up and typed in there.

233
00:14:07.257 --> 00:14:11.312
But the other one that is useful
is reducer and reducerPath, right?

234
00:14:11.312 --> 00:14:14.672
And so the reducerPath is the key and

235
00:14:14.672 --> 00:14:20.949
you're combining reducers and
the reducer is the value, right?

236
00:14:20.949 --> 00:14:25.345
So it's kind of like,
cuz it is redux under the hood,

237
00:14:25.345 --> 00:14:31.725
even though like I said before, you
don't need to have necessarily used it.

238
00:14:31.725 --> 00:14:36.183
And so like we could go ahead like and
configure a store.

239
00:14:42.484 --> 00:14:45.569
Store.ts and we can say

240
00:14:50.201 --> 00:14:54.269
ConfigureStore, we know that
that takes the reducer.

241
00:14:54.269 --> 00:14:58.416
The reducers, that's gonna combine.

242
00:14:58.416 --> 00:15:00.913
And so here, did I export it?

243
00:15:00.913 --> 00:15:02.622
Yeah, I did, look at me.

244
00:15:02.622 --> 00:15:05.399
I'm surprised every time.

245
00:15:05.399 --> 00:15:08.137
Item API.

246
00:15:08.137 --> 00:15:17.091
We gotta put that in
the object .reducerpath.

247
00:15:17.091 --> 00:15:20.186
And then itemapi.reducer.

248
00:15:20.186 --> 00:15:23.013
So, that's kind of like, it's setting
all those stuff up ready for you.

249
00:15:23.013 --> 00:15:26.018
And we know the configure store is
gonna set the Redux developer tools.

250
00:15:26.018 --> 00:15:32.202
So it's gonna have everything else wired
up and ready to go for us as well.

251
00:15:32.202 --> 00:15:34.041
&gt;&gt; What does it have to be in an array?

252
00:15:34.041 --> 00:15:34.987
&gt;&gt; This is not an array.

253
00:15:34.987 --> 00:15:41.154
This is a syntax in ES 2015.

254
00:15:41.154 --> 00:15:42.119
Maybe earlier.

255
00:15:43.551 --> 00:15:48.250
It's the syntax in modern day
JavaScript to say this is not a string,

256
00:15:48.250 --> 00:15:51.907
this is a variable that
references a string, right?

257
00:15:51.907 --> 00:15:54.052
The reducer's path is
items API in this case.

258
00:15:54.052 --> 00:15:58.507
It's just the string that this service
is as the key and that's the value.

259
00:15:58.507 --> 00:16:03.292
It's like the square brackets are saying,
put this variable in here.

260
00:16:03.292 --> 00:16:05.021
So it's an object.

261
00:16:05.021 --> 00:16:05.696
Yeah.

262
00:16:05.696 --> 00:16:07.268
Good question.

263
00:16:07.268 --> 00:16:11.307
And optionally if you want there
is middleware that you can add and

264
00:16:11.307 --> 00:16:14.472
this is worth just to show
how middleware works in.

265
00:16:14.472 --> 00:16:16.015
We're not gonna use middleware but

266
00:16:16.015 --> 00:16:19.257
it's worth showing it to how it works
in Redux toolkit anyway, is I told you

267
00:16:19.257 --> 00:16:22.621
there was a bunch of middleware in place
if you needed to add more middleware.

268
00:16:22.621 --> 00:16:26.914
The pattern for that function gets one

269
00:16:26.914 --> 00:16:31.885
argument which is get default middleware.

270
00:16:31.885 --> 00:16:36.385
That way you don't replace that
middleware and have to worry about it.

271
00:16:36.385 --> 00:16:39.748
So like if you wanna blow away all the
middleware that Redux Toolkit gave you,

272
00:16:39.748 --> 00:16:40.485
you can do that.

273
00:16:40.485 --> 00:16:43.544
But you can also say that like, hey,

274
00:16:43.544 --> 00:16:47.794
our middleware should be
get default middleware.

275
00:16:51.117 --> 00:16:54.898
Concurred like a race spread, whatever
makes you happier, like other middleware.

276
00:16:54.898 --> 00:16:56.413
It doesn't really matter.

277
00:16:56.413 --> 00:17:02.854
In this case, we'll do the So

278
00:17:02.854 --> 00:17:06.490
that is what it takes to like set
up one of these API services.

279
00:17:06.490 --> 00:17:11.145
We still need to wrap a react app in it,
but like that's and

280
00:17:11.145 --> 00:17:16.665
again like there's Redux happening,
but none of this you'll see.

281
00:17:16.665 --> 00:17:18.483
I'm not gonna write a single slice.

282
00:17:18.483 --> 00:17:24.064
That's why I brought it into this
other example on a whim, so we'll see.

283
00:17:24.064 --> 00:17:28.937
Because like you don't have to have it,
but the nice part is those actions

284
00:17:28.937 --> 00:17:33.260
go through all the same reducers as
the other stuff does as well and

285
00:17:33.260 --> 00:17:36.268
you could integrate it
into a larger app too.

286
00:17:36.268 --> 00:17:40.328
And so in here, then we can just go and
say you actually get two providers.

287
00:17:40.328 --> 00:17:44.815
You get provider and you also get,
I believe, API provider.

288
00:17:44.815 --> 00:17:46.435
What is the difference?

289
00:17:46.435 --> 00:17:49.076
This one just I think is lighter and
does less.

290
00:17:49.076 --> 00:17:50.309
Otherwise, they're the same.

291
00:17:50.309 --> 00:17:53.389
But it's just less code cuz now you're
not using the rest of the stuff.

292
00:17:57.194 --> 00:17:59.452
Did I export that store?

293
00:17:59.452 --> 00:18:00.756
I didn't even save into a variable.

294
00:18:07.351 --> 00:18:07.961
Awesome.

295
00:18:07.961 --> 00:18:16.800
And then so I'll say Tour.

296
00:18:16.800 --> 00:18:19.113
Maybe I need the real
provider in this case.

297
00:18:21.683 --> 00:18:26.330
Yeah, let's pull in the react redux1.

298
00:18:29.492 --> 00:18:31.602
I want the real one forget what to type.

299
00:18:42.257 --> 00:18:43.071
I don't have react redux.

300
00:18:43.071 --> 00:18:44.001
That was my issue.

301
00:18:44.001 --> 00:18:46.937
I made one little bit,
let's just install that real quick and

302
00:18:46.937 --> 00:18:49.659
then I'll show you something
else while that installs.

303
00:18:54.107 --> 00:18:56.660
React redux, boom.

304
00:18:56.660 --> 00:18:59.056
Let that rock and roll for a second.

305
00:18:59.056 --> 00:19:00.475
That was faster than I expected.

306
00:19:00.475 --> 00:19:01.059
Awesome.

307
00:19:06.944 --> 00:19:07.924
Awesome.

308
00:19:14.702 --> 00:19:15.450
Pull in my store.

309
00:19:26.843 --> 00:19:28.655
Cool.

310
00:19:28.655 --> 00:19:30.528
Why?

311
00:19:30.528 --> 00:19:32.489
Autocomplete don't fail me now.

312
00:19:32.489 --> 00:19:34.027
All right, so we've got that in place.

313
00:19:34.027 --> 00:19:34.924
It should all be wired up.

314
00:19:34.924 --> 00:19:37.298
We're not doing anything with it yet.

315
00:19:37.298 --> 00:19:39.630
But we have the initial
like piece in there.

