WEBVTT

1
00:00:00.350 --> 00:00:04.106
So this point I just try to explain
a little bit like I did increment.

2
00:00:04.106 --> 00:00:09.802
If you wanna try out decrement and
reset, give it a shot.

3
00:00:09.802 --> 00:00:11.672
And we'll take a look.

4
00:00:11.672 --> 00:00:16.360
&gt;&gt; This might be obvious, but this is
basically replacing line 26 or 27, right?

5
00:00:16.360 --> 00:00:16.877
&gt;&gt; Yep.

6
00:00:16.877 --> 00:00:19.350
&gt;&gt; 21 is replacing 22.

7
00:00:19.350 --> 00:00:25.254
&gt;&gt; Yeah, this group is replacing this
group down here, right, and with full.

8
00:00:25.254 --> 00:00:28.589
Yeah, we got typeState we used to
create action thing earlier, but

9
00:00:28.589 --> 00:00:30.415
we get full support for everything.

10
00:00:30.415 --> 00:00:35.853
And again, when we start
working in some larger things,

11
00:00:35.853 --> 00:00:42.099
like the ability to do this makes
you 20 times more productive.

12
00:00:42.099 --> 00:00:46.991
That might be a little bit of hyperbole
but at least 1.5x more productive, yeah?

13
00:00:46.991 --> 00:00:48.354
&gt;&gt; Is it worth calling out that,

14
00:00:48.354 --> 00:00:51.626
at least as it is right now you're
not explicitly returning the state,

15
00:00:51.626 --> 00:00:54.870
you're just mutating in [INAUDIBLE]-
&gt;&gt; I have to return-

16
00:00:54.870 --> 00:00:57.759
&gt;&gt; The ad case method of the builder is

17
00:00:57.759 --> 00:00:59.851
wrapping that reducer,

18
00:00:59.851 --> 00:01:05.929
in a check to compare whether the state
was mutated inside your reducer,

19
00:01:05.929 --> 00:01:08.819
and then returned that, so-
&gt;&gt; Yeah,

20
00:01:08.819 --> 00:01:12.686
all that ceremony is taken care of for
me, I don't have to worry about.

21
00:01:12.686 --> 00:01:17.511
&gt;&gt; Do you know why do you have action
after state in the argument there?

22
00:01:17.511 --> 00:01:21.445
&gt;&gt; I mean, with this, I guess cuz I
theoretically, I could do this, hold on.

23
00:01:21.445 --> 00:01:22.504
Cuz it has a payload, right?

24
00:01:22.504 --> 00:01:26.772
As opposed to plus equals, right?

25
00:01:26.772 --> 00:01:27.729
Remember this one?

26
00:01:30.146 --> 00:01:34.305
And also, we know the payload is a number,
so that'll work.

27
00:01:34.305 --> 00:01:35.364
&gt;&gt; Okay.

28
00:01:35.364 --> 00:01:36.686
&gt;&gt; Yeah, good call,
I was mostly just showing off, okay-

29
00:01:36.686 --> 00:01:38.173
&gt;&gt; I couldn't tell if you were joking

30
00:01:38.173 --> 00:01:40.127
when you said you weren't
gonna write a bug.

31
00:01:40.127 --> 00:01:42.249
&gt;&gt; [LAUGH]
&gt;&gt; I could still write bugs.

32
00:01:42.249 --> 00:01:44.508
&gt;&gt; [LAUGH]
&gt;&gt; Right, it's is it a bug, or

33
00:01:44.508 --> 00:01:46.059
it's like what are my intentions?

34
00:01:46.059 --> 00:01:49.338
I'm the product manager right now, I
choose what the product requirements are.

35
00:01:49.338 --> 00:01:53.150
It's just a feature, right?

36
00:01:53.150 --> 00:01:56.191
&gt;&gt; And you would export line 20, right?

37
00:01:56.191 --> 00:01:59.561
&gt;&gt; Yeah, just export that,
and that's a regular reducer.

38
00:01:59.561 --> 00:02:02.178
Pop it into your existing
Redux infrastructure.

39
00:02:02.178 --> 00:02:05.594
Pop it into use Reducer, right?

40
00:02:05.594 --> 00:02:07.147
Like, go for it.

41
00:02:11.658 --> 00:02:12.378
All right, so

42
00:02:12.378 --> 00:02:15.920
one of the questions that came up
during the break were the other ones.

43
00:02:15.920 --> 00:02:20.090
You don't need to catch a default case
even though we had that builder.add

44
00:02:20.090 --> 00:02:20.960
default case.

45
00:02:20.960 --> 00:02:24.156
I am sure that there is a reason
why someone needs this one,

46
00:02:24.156 --> 00:02:28.479
like this is if you truly need to respond
for the fact that nothing got matched.

47
00:02:28.479 --> 00:02:31.967
Now in Redux, every action
goes through every reducer, so

48
00:02:31.967 --> 00:02:36.453
generally speaking there are actions
that you ignore all the time, right?

49
00:02:36.453 --> 00:02:42.253
And I think that is a feature
that I greatly admire in Redux,

50
00:02:42.253 --> 00:02:46.083
so I don't personally value this one.

51
00:02:46.083 --> 00:02:50.712
Ad matcher is very good for
thunks and asynchronous things,

52
00:02:50.712 --> 00:02:55.522
where it's like if you had toast
notifications that came up and

53
00:02:55.522 --> 00:03:01.808
you want to respond to anytime a network
request has an is rejected state, right?

54
00:03:01.808 --> 00:03:06.632
And you'd be like, couldn't fetch this,
so you needed to maybe do something,

55
00:03:06.632 --> 00:03:09.251
and update your state in
some way around that.

56
00:03:09.251 --> 00:03:11.119
Or maybe you had middleware, right?

57
00:03:11.119 --> 00:03:14.432
I guess in the reducer you're only caring
about the actual updating of the state.

58
00:03:14.432 --> 00:03:17.627
But you wanted to add a notification
to your Notifications array,

59
00:03:17.627 --> 00:03:21.120
something like that, you can catch
anything that matches is rejected.

60
00:03:21.120 --> 00:03:25.489
There are use cases for that one,
particularly in asynchronous situations.

61
00:03:25.489 --> 00:03:28.324
I wouldn't abuse it too much for
known cases of,

62
00:03:28.324 --> 00:03:32.823
I'm just gonna match everything that
kind of looks like this, just either,

63
00:03:32.823 --> 00:03:35.958
how to put this nicely,
rethink what you're doing.

64
00:03:35.958 --> 00:03:39.160
Right, like write some better actions or
something along those lines.

65
00:03:39.160 --> 00:03:43.975
Occasionally there are times where
we'll have to do stuff like that, and

66
00:03:43.975 --> 00:03:45.148
I'm here for it.

67
00:03:45.148 --> 00:03:48.631
Yeah, so let's build this out,
and what I think just for

68
00:03:48.631 --> 00:03:50.747
to kind of do it like a victory lap.

69
00:03:50.747 --> 00:03:55.475
Let's build out this reducer using these
tools, and we'll use it in Use Reducer.

70
00:03:55.475 --> 00:03:59.311
And the nice part about this, and
I think this is a standard thing, but

71
00:03:59.311 --> 00:04:01.796
I'll say it out loud as well,
is with Redux.

72
00:04:01.796 --> 00:04:05.275
Redux is commonly used with React.

73
00:04:05.275 --> 00:04:07.296
I use Redux and spelt out, right?

74
00:04:07.296 --> 00:04:12.132
Like you can use it,
I've used Redux not in a web app, right,

75
00:04:12.132 --> 00:04:16.690
like this is just regular
JavaScript at the end of the day,

76
00:04:16.690 --> 00:04:19.307
put it wherever you wanna put it.

77
00:04:19.307 --> 00:04:23.341
It's just a nice set of tools
that's really great for

78
00:04:23.341 --> 00:04:25.682
predictably updating state.

79
00:04:25.682 --> 00:04:28.877
Cool, so let's grab the other ones and
kind of see it in action,

80
00:04:31.431 --> 00:04:36.400
As well so
we can have a document that will,

81
00:04:36.400 --> 00:04:41.648
quote, unquote, mutate the, I don't have

82
00:04:41.648 --> 00:04:46.775
to worry about spelling, so that's good.

83
00:04:46.775 --> 00:04:51.499
And then builder, addCase.

84
00:04:55.185 --> 00:04:56.723
This case reset was the other one, right?

85
00:04:56.723 --> 00:04:59.817
Cool, not just has the state,

86
00:04:59.817 --> 00:05:04.458
I mean it just has an action
without a payload so

87
00:05:04.458 --> 00:05:09.456
I will get the same type
safety there if I tried to do

88
00:05:09.456 --> 00:05:15.416
something like .count equals
action.payload, right?

89
00:05:15.416 --> 00:05:20.109
It can't, you can't design undefined
to a number, so it's like, don't.

90
00:05:20.109 --> 00:05:22.678
So in this case, we'll just set it to 0,
and that is fine.

91
00:05:22.678 --> 00:05:25.189
And I can omit it,
cuz there's no real information on there,

92
00:05:25.189 --> 00:05:26.509
I don't have to check its type.

93
00:05:26.509 --> 00:05:29.279
The builder has already
confirmed all of that for me.

94
00:05:29.279 --> 00:05:31.777
So now I've got a reducer in place.

95
00:05:31.777 --> 00:05:37.876
And as I have the thing
that I keep repeating is,

96
00:05:37.876 --> 00:05:44.738
if we actually pulled this out,
we can see that it is,

97
00:05:44.738 --> 00:05:50.703
let's see if I actually
say counterReducer.

98
00:05:50.703 --> 00:05:53.420
It was actually,
it was why I was doing this before.

99
00:05:53.420 --> 00:05:55.636
What we actually did is just
a function that takes state and

100
00:05:55.636 --> 00:05:57.727
action just like any other reducer,
we use anywhere.

101
00:05:57.727 --> 00:06:01.858
To make the point, I will show it to
you in an application real quick.

102
00:06:01.858 --> 00:06:05.184
This is just, it's got nothing,
it's just a React component.

103
00:06:05.184 --> 00:06:11.467
So we'll just show it and use use Reducer
just to verify what I have claimed,

104
00:06:11.467 --> 00:06:17.571
and see that all of this works as we
expect, so we have state and dispatch.

105
00:06:19.595 --> 00:06:21.425
Let's make sure I exported that.

106
00:06:25.374 --> 00:06:26.096
Awesome.

107
00:06:30.207 --> 00:06:33.965
Use reducer, in this case
the initial state will say is count,

108
00:06:36.358 --> 00:06:39.965
Is 0, we put it has an reducer first.

109
00:06:47.975 --> 00:06:49.066
Awesome.

110
00:06:55.784 --> 00:06:58.791
Cool, and
we will pop this initial number in here.

111
00:07:04.312 --> 00:07:05.485
Look at that.

112
00:07:05.485 --> 00:07:07.315
That's actually coming from React.

113
00:07:07.315 --> 00:07:12.538
So here, we'll actually say that,
let's make sure I exported those actions.

114
00:07:12.538 --> 00:07:13.197
I did.

115
00:07:13.197 --> 00:07:13.707
No?

116
00:07:13.707 --> 00:07:14.941
Did I?

117
00:07:14.941 --> 00:07:15.700
I did not.

118
00:07:20.787 --> 00:07:21.309
Yeah?

119
00:07:21.309 --> 00:07:25.873
&gt;&gt; Excuse me, why do we need to specify
initial state again if we have a reducer

120
00:07:25.873 --> 00:07:27.185
with initial state?

121
00:07:27.185 --> 00:07:31.778
&gt;&gt; At this point,
mostly because I was making React happy.

122
00:07:31.778 --> 00:07:33.031
Will React let me get away with that?

123
00:07:33.031 --> 00:07:35.914
Yeah, React will not,
let me get away with it.

124
00:07:41.609 --> 00:07:46.892
And, I mean, I could probably actually
tell it from the return value on here,

125
00:07:46.892 --> 00:07:54.864
but, generally speaking,
What was I gonna say?

126
00:07:54.864 --> 00:08:01.239
It React wants to have
that information as well.

127
00:08:01.239 --> 00:08:06.510
So we'll say on click, And we'll say,

128
00:08:11.023 --> 00:08:19.594
A batch, Where's my auto import?

129
00:08:19.594 --> 00:08:20.704
Did I save this file?

130
00:08:28.463 --> 00:08:33.204
Decrement will do it by one, Cool.

131
00:08:33.204 --> 00:08:35.690
And then we'll do that for
these three here.

132
00:08:45.342 --> 00:08:49.714
You can see I can't pass a 1 in
there which makes total sense cuz,

133
00:08:49.714 --> 00:08:51.710
again, typing still works.

134
00:08:51.710 --> 00:08:57.473
Not my typing as we can see,
talking and typing, tricky,

135
00:08:57.473 --> 00:09:04.891
but the type system in fact does work
in this case, and so let's try it out.

136
00:09:04.891 --> 00:09:08.863
Again, all this stuff is super standard,
despite the fact that it's a nice set of

137
00:09:08.863 --> 00:09:12.205
conveniences, you are not bought
into anything, use it wherever,

138
00:09:12.205 --> 00:09:15.162
[LAUGH] you basically use it
wherever reducers are accepted.

139
00:09:15.162 --> 00:09:19.806
All right, there's a tag line,
and these actions, again,

140
00:09:19.806 --> 00:09:21.960
would work as we saw before.

141
00:09:21.960 --> 00:09:26.477
I could actually, I still have that old
Reducer sitting around that we can make

142
00:09:26.477 --> 00:09:27.646
that point as well.

143
00:09:27.646 --> 00:09:33.991
That one's there, so
let's say that we wanted to swap it out.

144
00:09:33.991 --> 00:09:35.951
Not sure I wrote the logic
of the same way, but

145
00:09:35.951 --> 00:09:39.317
let's let's try it as a bonus round, and
Mark will cut it if I make a mistake.

146
00:09:39.317 --> 00:09:42.909
Yeah, so the actions with
a regular standard, vanilla,

147
00:09:42.909 --> 00:09:48.481
as we've done 1,000 times and use Reducer
or Redux, with my create actions worked,

148
00:09:48.481 --> 00:09:53.864
my full on, Create Reducer worked as well.

149
00:09:53.864 --> 00:09:57.820
These are all interchangeable, they're
just abstractions where you get the type

150
00:09:57.820 --> 00:10:00.715
safety, you get the common mistakes,
all handled for you.

151
00:10:00.715 --> 00:10:04.778
You get the batteries included, you get a
bunch of libraries that you would have had

152
00:10:04.778 --> 00:10:08.203
to wire together yourself all done,
to make you more productive, and

153
00:10:08.203 --> 00:10:10.422
write more resilient code simultaneously.

154
00:10:10.422 --> 00:10:12.460
Who doesn't love that sales pitch?

