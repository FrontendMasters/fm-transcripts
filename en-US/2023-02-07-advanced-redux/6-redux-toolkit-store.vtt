WEBVTT

1
00:00:00.560 --> 00:00:06.720
Now that we've seen what makes up a slice,
that it is just a bunch of smaller pieces.

2
00:00:06.720 --> 00:00:10.607
And we can kind of explore how
to then also make a slice and

3
00:00:10.607 --> 00:00:15.753
then see that there are pieces that
we could use anywhere as well, right?

4
00:00:15.753 --> 00:00:20.902
And I think I have a Belabor the point of
any piece of this is accessible to you.

5
00:00:20.902 --> 00:00:25.360
Let's actually kind of see
a little bit more of this through.

6
00:00:25.360 --> 00:00:27.450
So we've got this here now.

7
00:00:27.450 --> 00:00:34.280
And I would like to theoretically
hook it up to a store.

8
00:00:34.280 --> 00:00:37.407
That seems like a reasonable thing to do.

9
00:00:37.407 --> 00:00:42.281
The other kind of nice
batteries included part of this

10
00:00:42.281 --> 00:00:46.951
is that previously you
had Redux's createStore.

11
00:00:46.951 --> 00:00:49.190
I mean,
you still have Redux's createStore.

12
00:00:49.190 --> 00:00:53.390
And then there was a set of things
that one needed to do, okay?

13
00:00:53.390 --> 00:00:54.380
I mentioned this before.

14
00:00:54.380 --> 00:00:58.870
We wanna hook up the Redux developer
tools, well, that's a step, right?

15
00:00:58.870 --> 00:01:02.680
And there are some other helpful pieces.

16
00:01:02.680 --> 00:01:06.601
There's middleware out there that makes
sure that you're actually making stuff

17
00:01:06.601 --> 00:01:08.205
immutable in development only.

18
00:01:08.205 --> 00:01:10.101
There is middleware out there like,

19
00:01:10.101 --> 00:01:13.895
I would like to make some kind of
asynchronous request at some point ever,

20
00:01:13.895 --> 00:01:17.530
cuz I've heard that's a thing
that we do in websites.

21
00:01:17.530 --> 00:01:21.447
I wanna make sure that
the data I'm storing and

22
00:01:21.447 --> 00:01:24.770
everything is serializable, right?

23
00:01:24.770 --> 00:01:25.975
So it's not class instances,

24
00:01:25.975 --> 00:01:28.970
it's just like JavaScript objects
that can be converted to JSON.

25
00:01:28.970 --> 00:01:33.496
So a bunch of just common things that you
would have to do as a rite of passage

26
00:01:33.496 --> 00:01:37.560
every time, we basically kinda get for
free at this point.

27
00:01:37.560 --> 00:01:38.670
So I'm gonna make a store file.

28
00:01:39.710 --> 00:01:45.218
And I'm gonna keep this separate for
reasons that we will see in a second.

29
00:01:45.218 --> 00:01:48.695
I'll tell you the kind of general theme
for some of the separate files I'm making.

30
00:01:48.695 --> 00:01:52.716
Could you put some of this in index.tsx?

31
00:01:52.716 --> 00:01:53.618
Yes.

32
00:01:53.618 --> 00:01:55.560
Later on we're gonna
make some custom hooks.

33
00:01:55.560 --> 00:01:57.240
Could you put them in this file?

34
00:01:57.240 --> 00:01:58.230
Yes.

35
00:01:58.230 --> 00:02:02.770
Generally speaking though, depending on
what build your tool you're using and

36
00:02:02.770 --> 00:02:07.244
what version of that build tool you're
using, you will always start dancing as

37
00:02:07.244 --> 00:02:10.868
soon as you put too much stuff in
one file and start requiring it.

38
00:02:10.868 --> 00:02:14.512
Especially at this early bootstrapping
stage of your application,

39
00:02:14.512 --> 00:02:17.668
you will play with the circular
dependency like roulette.

40
00:02:17.668 --> 00:02:21.150
And at one point something might break.

41
00:02:21.150 --> 00:02:24.504
So separating the stuff out in
the files occasionally like

42
00:02:24.504 --> 00:02:29.158
breaking it apart usually makes either A,
not getting into a situation easier or

43
00:02:29.158 --> 00:02:32.660
B, at least triaging what
the issue was a little bit easier.

44
00:02:32.660 --> 00:02:34.940
So could you put in these files?

45
00:02:36.030 --> 00:02:37.440
Yes.
Should you?

46
00:02:37.440 --> 00:02:38.100
Maybe not.

47
00:02:38.100 --> 00:02:41.890
Are you immediately gonna
be in trouble if you do?

48
00:02:41.890 --> 00:02:45.383
Depends on the build tool and
the version of the build tool and

49
00:02:45.383 --> 00:02:47.880
other complexity issues as well.

50
00:02:47.880 --> 00:02:52.790
But especially since we're live coding
today, I'm gonna play a little bit safe.

51
00:02:52.790 --> 00:02:56.258
And so with breaking stuff
into small well-defined files,

52
00:02:56.258 --> 00:02:58.640
that's the way things are responsible.

53
00:02:58.640 --> 00:02:59.980
How about that?

54
00:02:59.980 --> 00:03:01.460
So we can put this out there.

55
00:03:01.460 --> 00:03:04.040
We will need to export some stuff
from our slice in a second.

56
00:03:04.040 --> 00:03:06.800
But let's create the basics of the store.

57
00:03:06.800 --> 00:03:14.570
One of the major differences from how we
might do it in just regular old Redux.

58
00:03:14.570 --> 00:03:18.000
And if you have it set up in regular
old Redux, that's fine, leave it.

59
00:03:18.000 --> 00:03:20.670
You can, that's absolutely acceptable.

60
00:03:20.670 --> 00:03:24.660
This is just kind of some of the advanced
features that we can lean into.

61
00:03:24.660 --> 00:03:29.315
So we can bring in and we say from
@redux-toolkit, which if you don't have

62
00:03:29.315 --> 00:03:33.701
Redux as a dependency, this will have
everything that Redux has in it.

63
00:03:33.701 --> 00:03:36.501
Like bind action creators, all those
things are in this library as well.

64
00:03:36.501 --> 00:03:41.272
So it's your choice, but
here we have configure store.

65
00:03:44.412 --> 00:03:49.104
Maybe if I write import I'll actually get,
I'm now so top I autocomplete that if

66
00:03:49.104 --> 00:03:54.007
it doesn't autocomplete, I wonder what
I've done wrong, which is good, right?

67
00:03:54.007 --> 00:03:55.530
It's helping me on more than one way.

68
00:03:57.330 --> 00:03:58.792
So we've got that in place.

69
00:03:58.792 --> 00:04:01.850
And configure store,
we can create a store.

70
00:04:04.274 --> 00:04:09.103
We call it, it's got a slightly
different signature than create store

71
00:04:09.103 --> 00:04:13.941
which is in Redux normally, and
it will take a reducer object, right?

72
00:04:13.941 --> 00:04:18.302
And so normally, you see your first
Redux app ever it's like yeah,

73
00:04:18.302 --> 00:04:22.200
yeah just pass the reducer
function to create store.

74
00:04:22.200 --> 00:04:26.348
As like then you have to pull out combined
reducers when it is more than one reducer

75
00:04:26.348 --> 00:04:29.581
and you put that all together and
usually have a separate file,

76
00:04:29.581 --> 00:04:33.675
when you're exporting which reducers
are you never using, so on and so forth.

77
00:04:33.675 --> 00:04:36.768
This just does a for
you out of the box, right?

78
00:04:36.768 --> 00:04:38.214
And so we'll start with that.

79
00:04:38.214 --> 00:04:41.285
I'm gonna make sure that I've
exported everything that I need here.

80
00:04:41.285 --> 00:04:42.835
I've exported literally nothing.

81
00:04:42.835 --> 00:04:44.811
So we'll say export contest slice,

82
00:04:44.811 --> 00:04:47.945
I'm actually gonna make
that my default export.

83
00:04:47.945 --> 00:04:49.005
And I'll show you one in a second.

84
00:04:50.775 --> 00:04:51.966
Export default.

85
00:04:54.725 --> 00:04:57.467
Test slice.

86
00:04:57.467 --> 00:05:00.327
There are other things on
here that I need and want and

87
00:05:00.327 --> 00:05:04.227
a lot of times I will also then export
them separately because it's just

88
00:05:04.227 --> 00:05:07.010
easier to do auto import and
stuff like that.

89
00:05:07.010 --> 00:05:09.150
And it's also clear what exactly I have.

90
00:05:09.150 --> 00:05:12.486
So if we look on task slice, see,

91
00:05:12.486 --> 00:05:16.909
you can see I've got
those pieces in there.

92
00:05:16.909 --> 00:05:22.061
But I can also say let's
do export const task slice,

93
00:05:22.061 --> 00:05:26.639
const, will call it
actually tasks reducer.

94
00:05:32.690 --> 00:05:35.421
So these are the things that are on
that test slice object, right?

95
00:05:35.421 --> 00:05:41.425
The name you can guess what that one is
It's the same property that I passed in.

96
00:05:41.425 --> 00:05:45.650
Reducer is the actual
reducer that we created.

97
00:05:46.920 --> 00:05:50.370
Just as when we used create
reducer earlier by itself.

98
00:05:50.370 --> 00:05:51.580
Guess what?

99
00:05:51.580 --> 00:05:53.400
It's a normal reducer.

100
00:05:53.400 --> 00:05:54.680
Nothing special about it.

101
00:05:54.680 --> 00:05:57.460
It's just made for
you with everything ready to go.

102
00:05:57.460 --> 00:06:02.976
The other thing that I will
usually do is I will say, And

103
00:06:02.976 --> 00:06:08.268
then I will pull off just like
in easier to import honestly.

104
00:06:08.268 --> 00:06:10.887
I'll say I'll pull off
the different action names, so

105
00:06:10.887 --> 00:06:12.510
I'll say test slice dot actions.

106
00:06:13.650 --> 00:06:18.469
And on there as you can see when I use
the destructuring object over here.

107
00:06:18.469 --> 00:06:21.841
We've got add task,
we've got remove task, and

108
00:06:21.841 --> 00:06:25.707
they are correctly typed,
with everything ready to go.

109
00:06:25.707 --> 00:06:29.376
So the things that we did
kind of piecemeal earlier.

110
00:06:29.376 --> 00:06:34.483
If you do want them together, this is
a regular set of things that you can use,

111
00:06:34.483 --> 00:06:38.090
existing infrastructure,
so on and so forth.

112
00:06:38.090 --> 00:06:41.518
So I've got all of that, so
now that I'm gonna save this file.

113
00:06:41.518 --> 00:06:44.073
We'll go into our store, and simply say,

114
00:06:48.326 --> 00:06:53.098
Now my task reducer is wired up to
the store ready to rock and roll.

115
00:06:53.098 --> 00:06:55.270
Awesome, and
let's just export default this.

116
00:06:58.730 --> 00:07:02.706
Why we kept this in a separate file
because I have to play some import

117
00:07:02.706 --> 00:07:07.230
games in a second nd we'll see why and
it will make life a lot easier for us.

118
00:07:07.230 --> 00:07:09.920
But let's follow the thread for
a second here.

119
00:07:09.920 --> 00:07:15.050
We're gonna keep the context API
right now cuz I haven't totally

120
00:07:15.050 --> 00:07:19.722
swapped out both the users and
the tasks that is providing.

121
00:07:19.722 --> 00:07:22.468
When those both gets swapped out you
could definitely get rid of it but for

122
00:07:22.468 --> 00:07:23.782
now we'll just leave it in there.

123
00:07:23.782 --> 00:07:28.378
But we'll also put our provider,
we're still in the process of setting up.

124
00:07:28.378 --> 00:07:30.090
So we can pull all of this in.

125
00:07:31.330 --> 00:07:36.041
And so the provider is actually just
the regular provider you would ever use

126
00:07:36.041 --> 00:07:38.230
from react Redux.

127
00:07:38.230 --> 00:07:40.220
And the store is now the store
that we've just created.

128
00:07:41.900 --> 00:07:43.564
So pull those both in and

129
00:07:43.564 --> 00:07:49.237
now I can simply wrap my application as I
have done more times than I care to admit.

130
00:07:53.510 --> 00:07:54.181
Awesome.

131
00:07:58.996 --> 00:08:00.747
I hope that closing one every time.

132
00:08:04.348 --> 00:08:04.960
Cool.

133
00:08:04.960 --> 00:08:06.530
So we've got that all in there.

134
00:08:06.530 --> 00:08:10.063
That is wired up as we
would kinda come to expect.

135
00:08:10.063 --> 00:08:13.002
Now if it comes down to like
adding the action to our form,

136
00:08:13.002 --> 00:08:15.952
we wanna create a new task or
anything along those lines.

137
00:08:15.952 --> 00:08:20.284
We can see that in the task I have
access to the actions in the store.

138
00:08:20.284 --> 00:08:26.288
Theoretically I've got React Redux, so
I've got used dispatch, I've got used

139
00:08:26.288 --> 00:08:32.390
selector all the normal stuff in the hooks
parlance of our times is ready to go.

140
00:08:32.390 --> 00:08:33.995
I think at this point yes.

141
00:08:33.995 --> 00:08:38.630
React Redux right now still supports
the map dispatch to props and

142
00:08:38.630 --> 00:08:42.168
map state to props that were for
years and years and

143
00:08:42.168 --> 00:08:45.641
years were the facto way
that you do everything.

144
00:08:45.641 --> 00:08:48.936
Especially with concurrent react and
hooks and

145
00:08:48.936 --> 00:08:53.792
stuff that code exists, but
the recommendation at this point is to use

146
00:08:53.792 --> 00:08:57.120
the hooks that come from
React Redux as well.

147
00:08:57.120 --> 00:09:00.340
So we'll kinda have those and
we'll use those as well.

148
00:09:00.340 --> 00:09:02.490
And now we go up to create task.

149
00:09:03.990 --> 00:09:06.960
Okay, there's no like submitting
of this form right now.

150
00:09:06.960 --> 00:09:12.181
So we can say, So useDispatch and

151
00:09:12.181 --> 00:09:16.758
that will give us our dispatch from our
store that is provided by the provider.

152
00:09:19.871 --> 00:09:23.914
And we can actually just use this like
a normal action creator at this point.

153
00:09:23.914 --> 00:09:26.538
So we can go ahead and
in our on submit, we can just say,

154
00:09:31.572 --> 00:09:34.166
Dispatch addTask, and that will have,

155
00:09:34.166 --> 00:09:38.606
you can see I automatically will get
what are the details of the task.

156
00:09:38.606 --> 00:09:43.454
Now we're gonna have a slight problem here
that maybe you already saw, but maybe not.

157
00:09:43.454 --> 00:09:45.229
Where we'll say that the task,

158
00:09:45.229 --> 00:09:49.515
we really only have I guess
the title at this point, right?

159
00:09:49.515 --> 00:09:55.566
So we'll say that the title
is new test title.

160
00:09:55.566 --> 00:09:57.989
&gt;&gt; Is this what would replace
map dispatch to props?

161
00:09:57.989 --> 00:09:58.763
&gt;&gt; Yeah.

162
00:09:58.763 --> 00:10:03.010
If you're using map to set straps
that is still in React Redux,

163
00:10:03.010 --> 00:10:04.622
it is still supported.

164
00:10:04.622 --> 00:10:08.523
There are questions as like
a lot of this was rewritten for

165
00:10:08.523 --> 00:10:12.594
those hooks to support some
of the new react 18 features.

166
00:10:12.594 --> 00:10:15.090
It's still totally usable.

167
00:10:15.090 --> 00:10:19.108
In fact, one of the nice things about that
Higher-order component is that it will do

168
00:10:19.108 --> 00:10:23.090
some of the kind of, memorization of the
props and not rear-ender the component.

169
00:10:23.090 --> 00:10:25.471
It has some nice features to it as well.

170
00:10:25.471 --> 00:10:29.653
But yes, in modern versions of
React Redux, you also have a used selector

171
00:10:29.653 --> 00:10:33.971
hook which we'll see momentarily, and
you also have this use dispatch hook

172
00:10:33.971 --> 00:10:38.590
which will give you access to
the store.dispatch wherever you need it.

173
00:10:38.590 --> 00:10:41.490
&gt;&gt; What was the one you said
replace the map state to props?

174
00:10:41.490 --> 00:10:42.380
&gt;&gt; Use selector.

175
00:10:42.380 --> 00:10:43.240
&gt;&gt; Selector, okay.
&gt;&gt; I will have

176
00:10:43.240 --> 00:10:44.850
to pull that one out momentarily.

177
00:10:44.850 --> 00:10:46.700
So you will see it.

178
00:10:46.700 --> 00:10:52.040
But first, all of my awesome,
like I got all this typing for free.

179
00:10:52.040 --> 00:10:56.489
It is true that I have a small problem
here that I have to solve for, which is,

180
00:10:56.489 --> 00:10:59.900
it's saying, hey you told me
we're gonna put tasks on and

181
00:10:59.900 --> 00:11:04.214
I don't necessarily have all the
information ready to go here for a task,

182
00:11:04.214 --> 00:11:07.932
and so I do need to provide some
of the better types to my action.

183
00:11:07.932 --> 00:11:13.269
Because all that free TypeScript support
turns out is working, [LAUGH] right?

184
00:11:13.269 --> 00:11:15.850
And so that gives me some stuff that
I need to do to solve for that.

