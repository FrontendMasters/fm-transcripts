WEBVTT

1
00:00:00.000 --> 00:00:05.712
&gt;&gt; Brian Holt: Let's pop into Distroless.

2
00:00:05.712 --> 00:00:09.963
So we are here in Distroless.

3
00:00:09.963 --> 00:00:11.894
You may not wanna use Alpine.

4
00:00:11.894 --> 00:00:16.566
And here is a blog post that is
very interesting of why you may not

5
00:00:16.566 --> 00:00:18.076
wanna read Alpine.

6
00:00:18.076 --> 00:00:22.639
I'm gonna give you the TDLR for this
person actually experienced this pain,

7
00:00:22.639 --> 00:00:27.204
whereas I've only read about this pain
I've ever actually experienced it,

8
00:00:27.204 --> 00:00:31.154
which is why I'm not telling anyone
to not use Alpine, by the way.

9
00:00:31.154 --> 00:00:35.255
And I will say if you don't
use Kubernetes, there's,

10
00:00:35.255 --> 00:00:38.752
as far as I know,
zero reason to not use Alpine.

11
00:00:38.752 --> 00:00:41.892
There is some extreme,
and when I say extreme,

12
00:00:41.892 --> 00:00:46.446
I mean extreme edge cases with Alpine
that will make it have some weird

13
00:00:46.446 --> 00:00:51.315
issues with stuff like Kubernetes
when you're churning through tons and

14
00:00:51.315 --> 00:00:55.889
tons and tons of containers at a rapid
rate over a long period of time.

15
00:00:55.889 --> 00:01:00.580
You can run into some edge cases
where Alpine doesn't handle some

16
00:01:00.580 --> 00:01:04.685
of that stuff as well,
it's something like DB and docs.

17
00:01:04.685 --> 00:01:11.103
This arises from the fact that
almost every distribution of Linux,

18
00:01:11.103 --> 00:01:14.375
has something called glibc in it.

19
00:01:14.375 --> 00:01:19.557
And they replace it with, in Alpine
with this other thing called muscle,

20
00:01:19.557 --> 00:01:22.658
it's what I hear people
call that out loud.

21
00:01:22.658 --> 00:01:27.765
It's just a smaller version, if I'm
not mistaken, of the C-core library.

22
00:01:27.765 --> 00:01:34.041
And generally it's battle-tested, it's
been run trillions of hours in production.

23
00:01:34.041 --> 00:01:38.655
You and I generally do not have to care
about what the difference is there.

24
00:01:38.655 --> 00:01:43.655
But if you go into the blog post,
you'll read this person

25
00:01:43.655 --> 00:01:48.136
has hit some very strange
long-tail edge cases and

26
00:01:48.136 --> 00:01:51.484
now swears off using Alpine forever.

27
00:01:51.484 --> 00:01:55.564
So that is a reason, but probably the more
compelling reason of why you might

28
00:01:55.564 --> 00:01:58.707
not wanna use Alpine,
it's not the only option anymore.

29
00:01:58.707 --> 00:02:03.668
It used to be the only option,
it is now, no longer the only option.

30
00:02:03.668 --> 00:02:09.786
So the one that we're gonna
talk about today is Distroless.

31
00:02:09.786 --> 00:02:12.257
But there's Wolfi,
which I have no experience with,

32
00:02:12.257 --> 00:02:14.468
just know that I've heard
people talk about it.

33
00:02:14.468 --> 00:02:19.386
The Red Hat publishes their base image and
they have one called the micro image.

34
00:02:19.386 --> 00:02:21.734
And I don't know why I'm not
talking about it, but but

35
00:02:21.734 --> 00:02:23.533
there's one called Debian Slim as well.

36
00:02:23.533 --> 00:02:26.612
I don't know how big Debian Slim is.

37
00:02:26.612 --> 00:02:28.457
We could probably,
should we just find out?

38
00:02:28.457 --> 00:02:29.534
We can just find out.

39
00:02:37.041 --> 00:02:41.450
&gt;&gt; Brian Holt: I wonder if I can just
say from debian: bullseye-slim, sure.

40
00:02:46.072 --> 00:02:49.900
&gt;&gt; Brian Holt: And run this I know we'll
call this my alpine, but name is hard.

41
00:02:54.754 --> 00:02:59.120
&gt;&gt; Brian Holt: Already
looking a bit bigger.

42
00:02:59.120 --> 00:03:01.883
That's wants to do all the APK stuff.

43
00:03:01.883 --> 00:03:04.066
&gt;&gt; Speaker 2: It's just a docker pull.

44
00:03:04.066 --> 00:03:04.783
&gt;&gt; Brian Holt: What's that?

45
00:03:04.783 --> 00:03:09.353
&gt;&gt; Speaker 2: Docker pull to just
pull the image without building it.

46
00:03:09.353 --> 00:03:14.015
&gt;&gt; Brian Holt: debian:bullseye-slim and

47
00:03:14.015 --> 00:03:19.986
then I guess I can just look at it here.

48
00:03:19.986 --> 00:03:22.454
Do I have it in here?

49
00:03:22.454 --> 00:03:26.584
Debian, bullseye-slim, 75 megabytes.

50
00:03:26.584 --> 00:03:31.666
Okay, so definitely very viable as
well in terms of how big it is.

51
00:03:31.666 --> 00:03:36.377
It's on my computer from nine days ago,
so there you go.

52
00:03:36.377 --> 00:03:39.537
So I'll go back and
add that to the nodes as well.

53
00:03:39.537 --> 00:03:43.087
Very valuable and
I have used Slim many times,

54
00:03:43.087 --> 00:03:46.465
myself as well, so
Slim is also very great.

55
00:03:46.465 --> 00:03:50.387
We are gonna be talking specifically
today about Distroless,

56
00:03:50.387 --> 00:03:54.235
because that has ended up becoming
a pretty popular project.

57
00:03:54.235 --> 00:04:00.090
The first thing that I'm gonna say
is Distroless is not Distroless.

58
00:04:00.090 --> 00:04:03.243
The name implies that
it's just pure Linux.

59
00:04:03.243 --> 00:04:10.502
It's the pure manifestation, it's the
sneeze of Linux or Linus Torvalds, right?

60
00:04:10.502 --> 00:04:11.976
It's none of those things.

61
00:04:11.976 --> 00:04:13.762
It is still Debian, right?

62
00:04:13.762 --> 00:04:17.459
At the end of the day,
they went into Debian, they hack and

63
00:04:17.459 --> 00:04:19.278
slash everything out of it.

64
00:04:19.278 --> 00:04:23.301
So, granted, it's not very
Debianly anymore, but it's still,

65
00:04:23.301 --> 00:04:27.193
they built Debian and they took
a bunch of stuff out of it, right?

66
00:04:27.193 --> 00:04:30.743
So, it is small, it is very, very,

67
00:04:30.743 --> 00:04:35.669
very focused on running
something in production,

68
00:04:35.669 --> 00:04:41.869
it is not useful for anything else,
I think that's fair to say.

69
00:04:41.869 --> 00:04:44.479
But let's get wild.

70
00:04:44.479 --> 00:04:47.557
Let's see what happens.

71
00:04:47.557 --> 00:04:52.493
So I'm gonna just copy and paste this.

72
00:04:52.493 --> 00:04:54.544
Node: 20, node-builder,
that shouldn't surprise you.

73
00:04:54.544 --> 00:04:59.897
Working directory, package-locked, npm ci.

74
00:04:59.897 --> 00:05:02.626
And then GCR,
that's Google Container Registry.

75
00:05:02.626 --> 00:05:06.870
And we're gonna pull Distroless nodejs20.

76
00:05:06.870 --> 00:05:09.003
We're gonna copy all of
our stuff over from app.

77
00:05:09.003 --> 00:05:14.038
Notice that we don't have to do any of the
stuff of adding a user or telling them,

78
00:05:14.038 --> 00:05:18.941
this is so locked down, you can't run
it as node, as far as I know., right?

79
00:05:18.941 --> 00:05:20.623
It's literally just hyper-focused on that.

80
00:05:20.623 --> 00:05:23.113
We were talking about entry point earlier.

81
00:05:23.113 --> 00:05:26.208
You can't do anything besides
run node from this, right?

82
00:05:26.208 --> 00:05:26.939
You can't connect to it.

83
00:05:26.939 --> 00:05:28.893
You can't exec stuff, anything like that.

84
00:05:28.893 --> 00:05:36.129
It has its entry point as, index.js and
that's what you're gonna use.

85
00:05:36.129 --> 00:05:43.005
So let's go ahead and try and run that.

86
00:05:43.005 --> 00:05:46.037
We'll call this distroless.

87
00:05:52.483 --> 00:05:55.258
&gt;&gt; Brian Holt: Okay, and
then now we will try and

88
00:05:55.258 --> 00:06:00.904
run it
&gt;&gt; Brian Holt: Make

89
00:06:00.904 --> 00:06:03.703
sure that we are still working.

90
00:06:03.703 --> 00:06:05.399
Still running our node app, no problem.

91
00:06:05.399 --> 00:06:09.977
All the logins working and
let's see more come distroless,

92
00:06:09.977 --> 00:06:15.466
137 megabytes, so it's not smaller
than what we were doing before.

93
00:06:15.466 --> 00:06:20.239
But at this point, just go read a bunch
of blog posts of why I would choose

94
00:06:20.239 --> 00:06:22.158
this one over the other one.

95
00:06:22.158 --> 00:06:25.015
I'll just say that
distroless has gotten very,

96
00:06:25.015 --> 00:06:28.230
very popular which is why
we're now talking about it.

97
00:06:28.230 --> 00:06:33.456
It is Debian-derived,
we talked about that.

98
00:06:33.456 --> 00:06:37.165
Because you are now on Debian and
not on Alpine,

99
00:06:37.165 --> 00:06:41.442
you are back into glibc land
as opposed to muscle land.

100
00:06:41.442 --> 00:06:46.254
So you have eliminated that extremely
rare use case that you were very likely

101
00:06:46.254 --> 00:06:47.465
not to hit anyway.

102
00:06:47.465 --> 00:06:50.950
And I guess at this point, if you have
strong opinions of why you need to

103
00:06:50.950 --> 00:06:54.616
use Alpine over distress or vice-versa,
you've probably surpassed my

104
00:06:54.616 --> 00:06:57.713
knowledge on this cuz to me,
they're essentially the same.

105
00:07:00.011 --> 00:07:03.527
&gt;&gt; Brian Holt: For my practical
applied use cases, it is the same.

106
00:07:03.527 --> 00:07:08.117
So by the way, you could totally
go try and do this with Wolfi,

107
00:07:08.117 --> 00:07:10.072
with Red Hat, with Slim.

108
00:07:10.072 --> 00:07:16.906
Honestly, Slim's a really good choice.

109
00:07:16.906 --> 00:07:20.530
It's nice in the fact that you're kind
of staying all within Debian, and

110
00:07:20.530 --> 00:07:22.816
Slim is maintained by
the Debian team itself.

111
00:07:22.816 --> 00:07:26.990
I mean, do you wanna trust
the Alpine open-source project?

112
00:07:26.990 --> 00:07:30.099
Do you wanna trust
the Debian organization?

113
00:07:30.099 --> 00:07:32.200
Or do you wanna trust Google?

114
00:07:32.200 --> 00:07:35.932
The answer is really any of them are fine,
if you're asking me.

115
00:07:35.932 --> 00:07:40.826
But that's really kind of one of the
questions you're going to come down to.

