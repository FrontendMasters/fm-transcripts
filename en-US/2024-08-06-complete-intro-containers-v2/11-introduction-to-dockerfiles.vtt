WEBVTT

1
00:00:00.138 --> 00:00:04.626
&gt;&gt; Brian Holt: So so far we've been
talking about basically how to interact

2
00:00:04.626 --> 00:00:09.296
with containers and
not necessarily how to build containers.

3
00:00:09.296 --> 00:00:12.542
You never really have to learn how to
build containers if you just learn how to

4
00:00:12.542 --> 00:00:15.941
interact with them that's like most of
the usefulness cuz you can use what other

5
00:00:15.941 --> 00:00:16.918
people have created.

6
00:00:16.918 --> 00:00:21.777
Which generally is most of my interaction
with containers is just using stuff

7
00:00:21.777 --> 00:00:23.727
that people have built for me.

8
00:00:23.727 --> 00:00:28.252
But I am gonna show you in this
section here, Docker files,

9
00:00:28.252 --> 00:00:34.332
as well as in making tiny containers,
we are going to build our own containers.

10
00:00:34.332 --> 00:00:38.335
So let's talk about Docker files.

11
00:00:38.335 --> 00:00:42.103
Docker files are basically as you
might guessed it's a manifest

12
00:00:42.103 --> 00:00:43.926
of what goes into a container.

13
00:00:43.926 --> 00:00:49.793
It's very declarative that you say take
this container, add these things to it,

14
00:00:49.793 --> 00:00:55.504
add these users, copy these files,
run this command, and then you're done.

15
00:00:55.504 --> 00:00:57.678
That's what a Dockerfile is.

16
00:00:57.678 --> 00:01:01.380
The cool thing about having a Dockerfile
is you can build that into a container,

17
00:01:01.380 --> 00:01:03.436
or you can build that into an image,
right?

18
00:01:03.436 --> 00:01:06.082
And then you can use that
image to run containers.

19
00:01:06.082 --> 00:01:10.294
But the fact that you end up with
an image is that you have this like

20
00:01:10.294 --> 00:01:14.824
abstract container you can use over and
over and over and over again.

21
00:01:14.824 --> 00:01:19.651
This is a important concept when it comes
to containers, that people like to say

22
00:01:19.651 --> 00:01:24.694
that, I mean, it's a not everyone likes
this analogy, but I think it illustrates

23
00:01:24.694 --> 00:01:29.112
it well is that you want your containers
to be cattle, not pets, right?

24
00:01:29.112 --> 00:01:33.380
The idea of, if you have a 1,000 heads
of cattle, you don't have a name for

25
00:01:33.380 --> 00:01:35.052
every individual one of them.

26
00:01:35.052 --> 00:01:37.232
They're kinda interchangeable, right?

27
00:01:37.232 --> 00:01:41.938
As opposed to if you have a a pet dog,
like that's Luna, Luna's my dog, right?

28
00:01:41.938 --> 00:01:45.672
That's Luna and
Luna is irreplaceable, right?

29
00:01:45.672 --> 00:01:48.833
You don't want your containers to be
pets because you want them to be,

30
00:01:48.833 --> 00:01:52.419
well I'm done with this one, throw it
away, and then tomorrow when I come back I

31
00:01:52.419 --> 00:01:55.931
can just spin up another one that was just
like it and keep going from that way.

32
00:01:55.931 --> 00:01:59.674
So that's the idea behind cattle, not pet.

33
00:01:59.674 --> 00:02:03.742
You don't wanna have what
we call snowflakes right?

34
00:02:03.742 --> 00:02:06.986
Not like the companies to work for but
like snowflakes in the sense of like,

35
00:02:06.986 --> 00:02:09.729
it's very special,
it's very unique, it's very catered.

36
00:02:09.729 --> 00:02:14.228
Your containers shouldn't be that
way they should be useful and

37
00:02:14.228 --> 00:02:16.155
reusable and disposable.

38
00:02:16.155 --> 00:02:17.636
So it makes sense?

39
00:02:17.636 --> 00:02:18.607
Okay.

40
00:02:19.896 --> 00:02:26.675
&gt;&gt; Brian Holt: So let us make the most
basic Node.js Dockerfile ever.

41
00:02:26.675 --> 00:02:27.796
So where am I?

42
00:02:27.796 --> 00:02:34.140
I'm just gonna go on my desktop and
yeah, that's fine.

43
00:02:34.140 --> 00:02:39.203
Make directory, my-project,

44
00:02:39.203 --> 00:02:42.643
something like that.

45
00:02:42.643 --> 00:02:45.964
I'm gonna open this in code.

46
00:02:45.964 --> 00:02:48.478
Get rid of this one, I don't need that.

47
00:02:48.478 --> 00:02:51.842
Don't save that.

48
00:02:51.842 --> 00:02:55.113
Yes, I trust the authors myself or
rather I don't really trust myself but

49
00:02:55.113 --> 00:02:57.399
I don't trust anyone any
more than I trust myself.

50
00:02:57.399 --> 00:03:01.915
Okay, empty project I'm just
gonna create a new file and

51
00:03:01.915 --> 00:03:04.467
I'm gonna call it Dockerfile.

52
00:03:04.467 --> 00:03:09.121
No extension, technically
Dockerfile is the extension, but

53
00:03:09.121 --> 00:03:11.769
just call it capital D dockerfile.

54
00:03:11.769 --> 00:03:13.689
That's what everyone calls them.

55
00:03:13.689 --> 00:03:15.373
Don't ask me, I didn't invent it.

56
00:03:21.222 --> 00:03:22.214
&gt;&gt; Brian Holt: Not that one.

57
00:03:25.946 --> 00:03:30.491
&gt;&gt; Brian Holt: In here, I'm gonna say,
&gt;&gt; Brian Holt: what is

58
00:03:30.491 --> 00:03:33.358
the container that I'm gonna start with?

59
00:03:33.358 --> 00:03:37.142
So this could be from any of the
containers that we've talked about so far.

60
00:03:37.142 --> 00:03:42.562
We're gonna start with node:20.

61
00:03:42.562 --> 00:03:44.331
Be whatever you want.

62
00:03:44.331 --> 00:03:46.966
So what's cool about this is
because it's all Dockerfile,

63
00:03:46.966 --> 00:03:48.732
I have the Docker extension installed.

64
00:03:48.732 --> 00:03:52.108
It gives me some completions and
lets me know what it's expecting,

65
00:03:52.108 --> 00:03:53.302
all that kind of stuff.

66
00:03:53.302 --> 00:03:57.385
CMD is going to tell it what
command that you want it to run.

67
00:03:57.385 --> 00:04:01.579
It's typically the last
line in your Dockerfile.

68
00:04:01.579 --> 00:04:07.784
So I'm gonna say node, I'm gonna put -e,

69
00:04:07.784 --> 00:04:12.314
and I'm gonna say console.log

70
00:04:12.314 --> 00:04:16.684
("hello, or what did I say?

71
00:04:16.684 --> 00:04:17.547
I said,

72
00:04:32.314 --> 00:04:36.179
&gt;&gt; Brian Holt: That look right?

73
00:04:36.179 --> 00:04:40.168
Whatever you wanna put in there.

74
00:04:40.168 --> 00:04:44.466
You typically give it a comma
separated array of all the various

75
00:04:44.466 --> 00:04:48.208
different arguments order
that you wanna put them in.

76
00:04:48.208 --> 00:04:49.567
There's ways of doing it the other way,
but

77
00:04:49.567 --> 00:04:51.936
this is just the way that everyone does
it, so we're gonna stick with that.

78
00:04:55.532 --> 00:05:00.644
&gt;&gt; Brian Holt: And then I'm gonna open
my console here and I'm gonna say

79
00:05:00.644 --> 00:05:05.768
docker build..just telling
it where you are, right?

80
00:05:05.768 --> 00:05:08.798
So in this directory,
&gt;&gt; Brian Holt: And

81
00:05:08.798 --> 00:05:10.672
it's gonna build that for me.

82
00:05:15.938 --> 00:05:20.686
&gt;&gt; Brian Holt: So,
you can see that this ended up building.

83
00:05:20.686 --> 00:05:26.041
It took five steps, so
it took basically zero time cuz there's

84
00:05:26.041 --> 00:05:31.196
nothing really here and
we now have a container that doesn't

85
00:05:31.196 --> 00:05:36.166
have a name that would be kind
of hard to run if we wanted to.

86
00:05:36.166 --> 00:05:38.094
I think that's really what
it would be right there.

87
00:05:41.861 --> 00:05:44.275
&gt;&gt; Brian Holt: That's interesting.

88
00:05:44.275 --> 00:05:45.380
I've never looked at this before.

89
00:05:45.380 --> 00:05:47.979
I didn't know they gave you
a URL that you could look at it.

90
00:05:54.387 --> 00:05:56.176
&gt;&gt; Brian Holt: There you go.

91
00:05:56.176 --> 00:05:59.479
Pretty cool, I didn't know it did this.

92
00:05:59.479 --> 00:06:01.509
It gives you some sort of information.

93
00:06:01.509 --> 00:06:05.977
Some source shows the source that
I built it from, which is that.

94
00:06:05.977 --> 00:06:08.443
The logs and history.

95
00:06:08.443 --> 00:06:11.538
None of builds, okay?

96
00:06:11.538 --> 00:06:12.038
Pretty cool.

97
00:06:12.038 --> 00:06:13.454
Didn't know it did that.

98
00:06:15.710 --> 00:06:21.538
&gt;&gt; Brian Holt: All right, so, we did
that for all of these files as well.

99
00:06:21.538 --> 00:06:25.584
By the way, I will have a link to
the project so you can actually copy and

100
00:06:25.584 --> 00:06:28.550
paste the entire thing and
see the entire project.

101
00:06:28.550 --> 00:06:34.703
They're just organized into
directories here for you as well.

102
00:06:34.703 --> 00:06:37.091
Because I don't really expect
you to type all of these.

103
00:06:37.091 --> 00:06:40.465
I don't think it's helpful.

104
00:06:40.465 --> 00:06:43.547
Okay, so let's go ahead and
we built our container and

105
00:06:43.547 --> 00:06:47.234
we're gonna go ahead and
run our container here in just a second.

106
00:06:48.631 --> 00:06:52.636
&gt;&gt; Brian Holt: So let's go grab that ID.

107
00:06:52.636 --> 00:06:54.141
Where is this?

108
00:06:54.141 --> 00:06:55.497
I think it's this one.

109
00:07:01.078 --> 00:07:03.590
&gt;&gt; Brian Holt: So it just gives you
the hash of whatever it is, right?

110
00:07:03.590 --> 00:07:05.452
So I said, run the hash.

111
00:07:05.452 --> 00:07:11.854
And you can see here,
it ran from node.js, hi, right?

112
00:07:11.854 --> 00:07:16.368
Yeah, in case you're not familiar, you can
say node-e, and then whatever string you

113
00:07:16.368 --> 00:07:19.788
gave afterwards, it'll literally
treat that as the file to run.

114
00:07:19.788 --> 00:07:21.096
So that's what we did there.

115
00:07:21.096 --> 00:07:28.529
Cool, so let's talk a tiny
bit about this particular

116
00:07:28.529 --> 00:07:34.318
process that we're going through here.

117
00:07:34.318 --> 00:07:39.523
So we're starting with another image,
right, we didn't build node:20

118
00:07:39.523 --> 00:07:45.129
I have no interest in building node:20
that's maintained by a bunch of security

119
00:07:45.129 --> 00:07:50.596
professionals over a docker that know
an infinite more about security than I do.

120
00:07:50.596 --> 00:07:56.591
And then that container is actually
built on top of another image,

121
00:07:56.591 --> 00:08:01.193
and that image is built on
top of another image, and

122
00:08:01.193 --> 00:08:07.100
then that image is built on top of
base db image that db maintains.

123
00:08:07.100 --> 00:08:09.551
My point here is like it's
really powerful, right?

124
00:08:09.551 --> 00:08:13.968
That we can all kind of like share these
kinds of base images like I could go and

125
00:08:13.968 --> 00:08:17.698
build some sort of like Frontend
masters specific container for

126
00:08:17.698 --> 00:08:21.153
you to get started with building
Frontend masters projects

127
00:08:21.153 --> 00:08:24.148
that can be built on seven
more images before that.

128
00:08:24.148 --> 00:08:27.353
And then we all can just kind of
build stuff on top of each other.

129
00:08:27.353 --> 00:08:30.380
That's like the Docker way, right?

130
00:08:30.380 --> 00:08:35.685
Every single one of these lines
here is called a layer, right?

131
00:08:35.685 --> 00:08:39.162
So you're just layering stuff
one on top of the other, right?

132
00:08:39.162 --> 00:08:41.801
So you notice when you say
like Docker pull something and

133
00:08:41.801 --> 00:08:45.351
it shows you like it's downloading
seven things at the same time, right?

134
00:08:45.351 --> 00:08:47.460
Those are all layers, right?

135
00:08:47.460 --> 00:08:52.882
And so it's just saying like if I stack
all these layers on top of each other,

136
00:08:52.882 --> 00:08:56.968
that it turns into this image,
this container, right?

137
00:08:56.968 --> 00:09:01.523
One that makes it super cashable so
that if you only change the fifth thing of

138
00:09:01.523 --> 00:09:06.077
seven, you don't have to rebuild
everything from one to five because none

139
00:09:06.077 --> 00:09:08.989
of that changed,
none of those layers change.

140
00:09:08.989 --> 00:09:11.444
It's only five, six,
seven that changed, right?

141
00:09:11.444 --> 00:09:14.009
We'll take advantage of that fact
to make our images rebuild really,

142
00:09:14.009 --> 00:09:14.925
really quickly as well.

143
00:09:14.925 --> 00:09:17.439
I'll show you that here in a sec.

144
00:09:17.439 --> 00:09:22.510
But just keep in mind, it's just images
and layers all the way down here.

145
00:09:22.510 --> 00:09:27.627
Okay, so we used from,
that's to start with some sort of image.

146
00:09:27.627 --> 00:09:33.250
And then CMD is basically saying like
when you go to actually execute this,

147
00:09:33.250 --> 00:09:38.172
so this part does not execute
until the container is run, right?

148
00:09:38.172 --> 00:09:41.877
So this doesn't actually run
anywhere inside of build, right?

149
00:09:41.877 --> 00:09:44.355
It only runs in run.

150
00:09:44.355 --> 00:09:48.208
That's something to keep in mind and it
kind of messes with people to keep in mind

151
00:09:48.208 --> 00:09:50.854
of like some of this stuff
runs when you're building,

152
00:09:50.854 --> 00:09:53.402
and some of this stuff runs
when you're executing.

153
00:09:53.402 --> 00:09:55.952
CMD always runs when you're executing.

154
00:09:58.567 --> 00:10:01.083
&gt;&gt; Brian Holt: Okay, we did that.

155
00:10:01.083 --> 00:10:03.539
So this was inconvenient
to remember this hash, so,

156
00:10:03.539 --> 00:10:06.009
I'm gonna show you how to do
that a little bit easier.

157
00:10:06.009 --> 00:10:12.964
So you can say docker build .--tag, and
you can give it a tag of some variety.

158
00:10:12.964 --> 00:10:16.818
So we're gonna call it my-node-app.

159
00:10:16.818 --> 00:10:21.332
Instead of -- tag as well,
you can say just -t.

160
00:10:21.332 --> 00:10:24.374
And so now I have my-node-app.

161
00:10:24.374 --> 00:10:32.471
So I can say docker run my-node-app
much easier than dealing with hashes.

162
00:10:32.471 --> 00:10:39.643
And then you can also do it so
you can version it yourself.

163
00:10:39.643 --> 00:10:43.875
By default, this is getting just one for
version but then we can start giving it

164
00:10:43.875 --> 00:10:48.237
various different tags as well of like
this is version one, this is version two,

165
00:10:48.237 --> 00:10:49.152
version three.

166
00:10:49.152 --> 00:10:51.879
Just like we were seeing with Jammy and
Focal and all of those,

167
00:10:51.879 --> 00:10:55.246
we can give it names, we can give it
numbers, Docker doesn't really care.

168
00:10:55.246 --> 00:10:58.226
It's gonna pull whatever
tag you tell it to.

169
00:10:58.226 --> 00:11:03.706
So let's say, I just say,
can I add something so

170
00:11:03.706 --> 00:11:06.928
it's a tiny bit different.

171
00:11:06.928 --> 00:11:13.749
And I could say a docker build tag:2.

172
00:11:13.749 --> 00:11:15.411
So I built that.

173
00:11:15.411 --> 00:11:19.867
So now if I run my-node-app:1,
what do you think it's gonna say?

174
00:11:19.867 --> 00:11:22.204
&gt;&gt; Speaker 2: The original.

175
00:11:22.204 --> 00:11:26.384
&gt;&gt; Brian Holt: And then if I run out with
2, what do you think it's gonna say?

176
00:11:26.384 --> 00:11:30.682
Right, so it keeps all of them as well,
which is cool.

177
00:11:30.682 --> 00:11:32.187
Very easy versioning.

178
00:11:35.318 --> 00:11:38.221
&gt;&gt; Brian Holt: Question so far?

179
00:11:38.221 --> 00:11:39.015
Yeah, Dustin.

180
00:11:39.015 --> 00:11:42.127
&gt;&gt; Dustin: Will Docker
build create a component or

181
00:11:42.127 --> 00:11:46.853
an image when I run it on my
local machine to create an image.

182
00:11:46.853 --> 00:11:50.078
&gt;&gt; Brian Holt: So it creates an image
then when you go and just say docker run,

183
00:11:50.078 --> 00:11:53.614
it will create container,
it's a bit of a haredess split, I mean,

184
00:11:53.614 --> 00:11:55.616
who really cares at the end of the day?

185
00:11:55.616 --> 00:12:00.454
I call them all container cuz everything
mix up my brain cuz that's having a two

186
00:12:00.454 --> 00:12:05.071
year old does to you but at the end of
the day, we're running containers and

187
00:12:05.071 --> 00:12:07.510
the containers are built from images.

188
00:12:07.510 --> 00:12:10.713
I'm positive that I've probably
mixed it up at least once up here.

189
00:12:10.713 --> 00:12:13.544
So not the most interesting
differentiation between the two.

