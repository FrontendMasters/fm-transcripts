WEBVTT

1
00:00:00.200 --> 00:00:03.652
&gt;&gt; Brian Holt: I've now talked to you
about Docker, I've talked to you about

2
00:00:03.652 --> 00:00:08.278
Kubernetes Compose, Docker Compose, I feel
like it's useful for me to kind of talk

3
00:00:08.278 --> 00:00:11.880
about if you're not using Docker or
what else you would be using.

4
00:00:12.900 --> 00:00:17.230
I have far less experience with
this because Docker is so popular.

5
00:00:18.390 --> 00:00:22.327
I will say, since I last saw this course,
there really wasn't alternatives,

6
00:00:22.327 --> 00:00:25.584
it really was just Docker,
was pretty much the only game in town.

7
00:00:25.584 --> 00:00:28.947
I mean, there was RKT and
some other stuff like that, but

8
00:00:28.947 --> 00:00:31.614
really, everybody was using Docker.

9
00:00:31.614 --> 00:00:36.310
I will say that's not necessarily
true anymore from the perspective of

10
00:00:36.310 --> 00:00:39.344
running containers in production.

11
00:00:39.344 --> 00:00:42.865
There's tons of viable
alternatives that are not Docker.

12
00:00:42.865 --> 00:00:45.949
I will still say that anything
running locally on your computer,

13
00:00:45.949 --> 00:00:49.495
Docker is still definitely the biggest
game in town, and for good reason.

14
00:00:49.495 --> 00:00:52.405
It has good developer experience and
they care about that.

15
00:00:52.405 --> 00:00:56.325
Let's just kind of dive into to that for
a little bit.

16
00:00:56.325 --> 00:01:00.069
Let's talk about some alternatives
to Container Builders,

17
00:01:00.069 --> 00:01:04.317
really the only one that I found that
I would endorse would be Buildah,

18
00:01:04.317 --> 00:01:08.080
which is supposed to be said,
Buildah with a Boston accent.

19
00:01:08.080 --> 00:01:11.230
That's on their docs,
I didn't make that up.

20
00:01:11.230 --> 00:01:16.036
This is what would replace docker build
instead of saying, we said docker build,

21
00:01:16.036 --> 00:01:18.790
tag this with this docker file.

22
00:01:18.790 --> 00:01:23.447
Buildah does that but without Docker,
right, it has its own thing.

23
00:01:24.487 --> 00:01:29.307
So it can read Dockerfiles just fine, and
you'll end up with a built container.

24
00:01:30.677 --> 00:01:33.184
They'll end up in a different format and

25
00:01:33.184 --> 00:01:37.978
you can have build to build things to
be used with Docker, but usually you're

26
00:01:37.978 --> 00:01:43.027
building them with something that's
called OSI style containers.

27
00:01:43.027 --> 00:01:47.567
I forgot what that stands for, OSI,
is that Open Container Initiative?

28
00:01:49.375 --> 00:01:51.607
I guess it's OCI, yeah.

29
00:01:51.607 --> 00:01:54.207
OCI is Open Container Initiative.

30
00:01:54.207 --> 00:01:57.902
It's like a style of making
containers that generally are fairly

31
00:01:57.902 --> 00:02:00.924
interoperable between Docker and
other things, but

32
00:02:00.924 --> 00:02:05.105
there are some differences there in
terms of how they're just packaged.

33
00:02:06.185 --> 00:02:12.155
So that's what Buildah was built for, was
to build stuff for OCI style containers.

34
00:02:13.315 --> 00:02:15.795
And it does have objectively
the best logo, okay.

35
00:02:19.824 --> 00:02:21.634
Though I do like the docker whale, right?

36
00:02:21.634 --> 00:02:22.565
Which I think is pretty cool.

37
00:02:24.378 --> 00:02:27.199
So, container runtime tools.

38
00:02:27.199 --> 00:02:30.976
So this is generally things that
are gonna replace docker run,

39
00:02:30.976 --> 00:02:34.354
cuz Buildah has no capability
of running containers.

40
00:02:34.354 --> 00:02:36.970
It just builds,
that's the only thing it does.

41
00:02:36.970 --> 00:02:41.871
And it does bear mentioning
that Buildah is maintained by

42
00:02:41.871 --> 00:02:46.375
Red Hat/IBM because they just got bought,
right?

43
00:02:46.375 --> 00:02:49.225
Podman is really the big one
that people talk about here.

44
00:02:49.225 --> 00:02:53.910
Podman and Buildah are two tools,
they're two Buildahs in a pod, right?

45
00:02:53.910 --> 00:02:56.280
Two containers in a pod.

46
00:02:56.280 --> 00:03:00.533
That it's also maintained by IBM and

47
00:03:00.533 --> 00:03:06.687
Red Hat but, yeah,
that's what Podman is for.

48
00:03:06.687 --> 00:03:09.119
Docker relies on having
a daemon in the background,

49
00:03:09.119 --> 00:03:11.837
a daemon being a background
process to run as containers.

50
00:03:11.837 --> 00:03:14.805
The interesting thing about
Podman is it doesn't,

51
00:03:14.805 --> 00:03:19.856
it runs them directly without any sort of
background process that's handling that.

52
00:03:19.856 --> 00:03:23.425
That's the major difference that
people will cite between the two.

53
00:03:23.425 --> 00:03:25.712
I'm sure that's important to someone,
it's not important to me.

54
00:03:27.814 --> 00:03:30.495
Colima is another one.

55
00:03:30.495 --> 00:03:33.172
This is just an open source project, and

56
00:03:33.172 --> 00:03:36.336
I think this is mostly
oriented towards macOS.

57
00:03:37.506 --> 00:03:41.252
Never used it, but people kept mentioning
it in blog post I was looking at so

58
00:03:41.252 --> 00:03:42.326
I checked it in here.

59
00:03:42.326 --> 00:03:46.811
And then rkt was the one from CoreOS, I
talked about in my last course, it's now,

60
00:03:46.811 --> 00:03:50.010
I think officially deprecated and
has been for some time.

61
00:03:50.010 --> 00:03:53.463
Yeah, you can see this
repository has been archived.

62
00:03:53.463 --> 00:03:57.692
So it's gone, cuz CoreOS got bought by
Red Hat, Red Hat got bought by IBM, and

63
00:03:57.692 --> 00:04:01.359
just in the shuffle there,
they stopped maintaining it.

64
00:04:01.359 --> 00:04:04.229
I think rocket was how
you used to say that.

65
00:04:06.059 --> 00:04:10.692
Okay, and so now there's containers
actual runtime of what's actually

66
00:04:10.692 --> 00:04:13.839
executing your container
underneath the hood.

67
00:04:13.839 --> 00:04:18.709
There's containerd or
co containerd depending on who you ask.

68
00:04:18.709 --> 00:04:22.314
This is an official project from
the Cloud Native Foundation as well.

69
00:04:22.314 --> 00:04:27.169
Yeah, Cloud Native Computing Foundation,
CNCF.

70
00:04:27.169 --> 00:04:30.901
This is actually what Docker
uses underneath the hood and

71
00:04:30.901 --> 00:04:35.813
you can use containerd without Docker,
which is why it bears mentioning.

72
00:04:35.813 --> 00:04:40.019
Yeah, Docker has a really in-depth
explanation of what is Docker and

73
00:04:40.019 --> 00:04:45.430
what is containerd, if you're interested
in that, and this was written by Savannah.

74
00:04:45.430 --> 00:04:47.579
Savannah used to work at
Microsoft together, she's great.

75
00:04:47.579 --> 00:04:51.800
You will see a lot of people these
days are moving to gVisor, and

76
00:04:51.800 --> 00:04:53.404
away from containerd.

77
00:04:53.404 --> 00:04:56.896
I'm not gonna pass any judgment of what
I think is better and what is not.

78
00:04:56.896 --> 00:05:01.197
GVisor is made by Google and it's meant
to be extremely security-oriented,

79
00:05:01.197 --> 00:05:05.741
because that's generally what Google
cares about in their infrastructure.

80
00:05:05.741 --> 00:05:10.533
So, I'm not gonna tell you too much about
what the difference is, cuz honestly,

81
00:05:10.533 --> 00:05:11.441
I don't know.

82
00:05:11.441 --> 00:05:15.595
The only thing I'll comment is that,
companies that I know and interact with,

83
00:05:15.595 --> 00:05:18.511
I've seen a lot of them
getting moving towards gVisor.

84
00:05:20.500 --> 00:05:23.890
And then kata was another
one that bears mentioning.

85
00:05:23.890 --> 00:05:29.290
You're controlling full on VMs
with something like Docker.

86
00:05:29.290 --> 00:05:31.165
One of the things that they say is,

87
00:05:31.165 --> 00:05:35.510
we don't expect you to put everything
in kata containers, that's a bad idea.

88
00:05:36.940 --> 00:05:40.593
Only use it for the exact things
that need to be in a full-on VM, and

89
00:05:40.593 --> 00:05:43.479
you need that full isolation
from everything else.

90
00:05:43.479 --> 00:05:46.987
Everything else should still
be in containerd or gVisor, or

91
00:05:46.987 --> 00:05:48.509
whatever you're doing.

92
00:05:48.509 --> 00:05:51.069
So, I thought that was a cool idea,
I thought it was worth mentioning.

93
00:05:52.319 --> 00:05:55.269
Let's talk about some orchestrators,
which is what Kubernetes is.

94
00:05:55.269 --> 00:06:00.110
So this is, yeah,
alternatives to Kubernetes,

95
00:06:00.110 --> 00:06:07.162
Mesos has been around forever,
I believe it's older than Kubernetes.

96
00:06:07.162 --> 00:06:08.892
It's certainly older than Kubernetes.

97
00:06:08.892 --> 00:06:12.202
I don't know if it's older than Borg,
which is what Kubernetes is based off of.

98
00:06:12.202 --> 00:06:15.732
So all of Google's template structures
is run on something called Borg.

99
00:06:15.732 --> 00:06:17.872
Kubernetes is then taking
Borg out of Google and

100
00:06:17.872 --> 00:06:20.245
making that available to everybody.

101
00:06:20.245 --> 00:06:22.991
But everything inside
of Google still runs on

102
00:06:22.991 --> 00:06:26.135
Borg cuz Kubernetes
still different enough.

103
00:06:26.135 --> 00:06:28.543
Before that there was Mesos, and

104
00:06:28.543 --> 00:06:32.757
they actually tried to deprecate
this some years ago, and

105
00:06:32.757 --> 00:06:38.545
there was an open revolt of people's,
we love Mesos and we wanna use it.

106
00:06:38.545 --> 00:06:42.982
The only thing that I've heard about
people that work with Mesos is just,

107
00:06:42.982 --> 00:06:44.423
it's so complicated.

108
00:06:45.693 --> 00:06:50.213
So don't know anything about it,
but it is still widely used.

109
00:06:50.213 --> 00:06:52.613
And it's Apache project so
you know it's gonna be well maintained.

110
00:06:53.673 --> 00:06:58.646
Docker Swarm, initially, Docker fought
pretty hard against Kubernetes and

111
00:06:58.646 --> 00:07:00.843
the incoming tide of Kubernetes.

112
00:07:00.843 --> 00:07:06.584
So they release Swarm which was their
competitor to Kubernetes and they lost.

113
00:07:06.584 --> 00:07:12.059
So Swarm is still out there,
it's still used for

114
00:07:12.059 --> 00:07:17.273
some things, but
I don't use it personally.

115
00:07:17.273 --> 00:07:21.814
Nowadays if you're planning on using
Swarm I would say, use Compose locally and

116
00:07:21.814 --> 00:07:26.514
then Kubernetes in production, and Swarm
is somewhere in the middle of those two.

117
00:07:26.514 --> 00:07:30.500
Okay, OpenShift and Rancher,
I'll just talk about those together.

118
00:07:30.500 --> 00:07:35.390
They're both Kubernetes projects,
they're both layers on top of Kubernetes.

119
00:07:35.390 --> 00:07:38.403
OpenShift is Red Hats version of it,
it sits on top of it and

120
00:07:38.403 --> 00:07:42.818
add some more features like CI/CD that
Kubernetes doesn't have built into it.

121
00:07:42.818 --> 00:07:47.688
And then ranchers from SUSE,
as in the people that make SUSE Linux.

122
00:07:47.688 --> 00:07:52.854
And it's just on top of Kubernetes as
well, but it adds things like Guis and

123
00:07:52.854 --> 00:07:58.113
some ability to host things and it has
a tight integration with SUSE as well.

124
00:07:58.113 --> 00:08:04.300
And then Nomad, Nomad is basically saying,
we think Kubernetes is too complicated.

125
00:08:05.300 --> 00:08:09.040
You just wanna run some containers or
production, that's what Nomad does.

126
00:08:10.570 --> 00:08:13.210
They didn't get the traction that
I think they wanted with Nomad.

127
00:08:15.680 --> 00:08:19.720
Yeah, simple and flexible scheduling for
containers, that's exactly what it is.

128
00:08:21.239 --> 00:08:23.829
Cuz Kubernetes just kind of
took over the whole industry.

129
00:08:25.349 --> 00:08:26.749
But it's still out there,
they still maintain it.

130
00:08:26.749 --> 00:08:32.859
And again, well, I guess they're
also now owned by IBM, right?

131
00:08:32.859 --> 00:08:37.170
HashiCorp got bought by IBM,
so OpenShift now and

132
00:08:37.170 --> 00:08:40.767
Nomad are technically the same company.

133
00:08:40.767 --> 00:08:42.473
Hadn't really thought about that,
but that's now true.

134
00:08:45.430 --> 00:08:50.766
Some alternatives to Docker Desktop,
there is Podman Desktop, never used it.

135
00:08:50.766 --> 00:08:55.540
But if you're interested in that,
that's also there as is Rancher Desktop.

136
00:08:57.610 --> 00:09:03.192
And again,
all still basically the same thing,

137
00:09:03.192 --> 00:09:07.698
just with Ranchers flavor on top of it.

138
00:09:07.698 --> 00:09:10.358
So any questions?

139
00:09:10.358 --> 00:09:12.448
Anything I didn't cover that
you think is interesting?

140
00:09:12.448 --> 00:09:18.818
&gt;&gt; Student: How do you recommend managing
secrets in Docker or with Docker Compose?

141
00:09:18.818 --> 00:09:24.372
&gt;&gt; Brian Holt: It's a good question
Docker secrets is perfectly viable.

142
00:09:24.372 --> 00:09:26.584
My last company, which was Snowflake,

143
00:09:26.584 --> 00:09:30.822
we used that quite extensively to manage
all of our secrets to great success.

144
00:09:32.102 --> 00:09:36.583
So that is perfectly viable if you're
into into that, if you're not into

145
00:09:36.583 --> 00:09:41.011
that the other one that I have used
is a Vault from, also from HashiCorp.

146
00:09:41.011 --> 00:09:49.138
HashCorp Vault, Which is this one.

147
00:09:49.138 --> 00:09:51.458
This was very easy to use.

148
00:09:51.458 --> 00:09:55.408
I've also used Azure Key Vault,
cuz I worked there.

149
00:09:55.408 --> 00:09:57.888
Also worked very well,
no problems with that.

150
00:09:57.888 --> 00:10:00.706
Key Vault definitely has some
really cool features with it, and

151
00:10:00.706 --> 00:10:02.482
then anything built by HashiCorp.

152
00:10:02.482 --> 00:10:03.972
I mean, we'll see how IBM treats them.

153
00:10:03.972 --> 00:10:08.619
But I have a lot of faith in Mitchell,
cuz every time Mitchell,

154
00:10:08.619 --> 00:10:12.492
you came to Salt Lake City I
used to hang out with him.

155
00:10:12.492 --> 00:10:16.765
Just a fantastic engineer, and so
anything that he was overseeing,

156
00:10:16.765 --> 00:10:20.752
which he oversaw the development
of this was always great, so.

157
00:10:21.953 --> 00:10:25.713
Those are three that I know of and
have used.

158
00:10:25.713 --> 00:10:29.773
If you're gonna ask me anything beyond
some developer niceties that each one of

159
00:10:29.773 --> 00:10:31.673
them has, I don't know.

160
00:10:31.673 --> 00:10:35.732
But I have faith that any one of
those three would work really well.

