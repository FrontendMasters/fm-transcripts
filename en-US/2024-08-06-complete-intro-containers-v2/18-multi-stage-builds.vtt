WEBVTT

1
00:00:00.251 --> 00:00:04.493
&gt;&gt; Brian Holt: So one thing here that
we're adding to our final destination

2
00:00:04.493 --> 00:00:05.833
container is NPM.

3
00:00:07.237 --> 00:00:10.668
&gt;&gt; Brian Holt: Does your
app need NPM to run?

4
00:00:13.145 --> 00:00:15.230
&gt;&gt; Brian Holt: Most of the time not,
right?

5
00:00:15.230 --> 00:00:19.302
You might have an NPM run statement,
but I mean, at the end of the day,

6
00:00:19.302 --> 00:00:22.077
that's honestly just a command, right?

7
00:00:22.077 --> 00:00:25.197
So you don't need NPM,
generally speaking, to run.

8
00:00:25.197 --> 00:00:30.305
So let's go ahead and cut that stuff out.

9
00:00:30.305 --> 00:00:33.862
So I'm gonna just start collapsing
these down a little bit.

10
00:00:38.275 --> 00:00:41.546
&gt;&gt; Brian Holt: The spacing here is It's
totally arbitrary in case you're not

11
00:00:41.546 --> 00:00:42.946
catching on to that.

12
00:00:42.946 --> 00:00:50.456
I'm gonna say,
from node 20 as node-builder.

13
00:00:50.456 --> 00:00:51.486
You can call this whatever you want.

14
00:00:51.486 --> 00:00:54.896
This is just like a temporary
variable name, basically.

15
00:00:54.896 --> 00:00:58.208
And I'm gonna say, workder/builds.

16
00:00:58.208 --> 00:01:00.519
This is where I'm actually
gonna go build project.

17
00:01:01.829 --> 00:01:05.629
I'm gonna take this guy, which one?

18
00:01:05.629 --> 00:01:06.129
This one.

19
00:01:07.839 --> 00:01:08.589
That one right there.

20
00:01:08.589 --> 00:01:10.439
I'm gonna move that up there.

21
00:01:10.439 --> 00:01:12.619
And I'm gonna move this mpm ci up here.

22
00:01:14.979 --> 00:01:18.069
And then move this one up here, and

23
00:01:18.069 --> 00:01:23.301
I also don't need these chown
because it does not matter.

24
00:01:26.148 --> 00:01:33.163
&gt;&gt; Brian Holt: This node-builder,
which, notice this is Debian, right?

25
00:01:33.163 --> 00:01:38.474
All this is going to be used for
is to build.

26
00:01:38.474 --> 00:01:43.535
It's not gonna be used for anything else,
we're gonna use it to spin up a container,

27
00:01:43.535 --> 00:01:48.125
do a bunch of stuff in it, grab all the
stuff out of it and throw it away, okay?

28
00:01:48.125 --> 00:01:51.989
So we'll even put a little note there,

29
00:01:51.989 --> 00:01:57.990
this is the build step, and
this is the production step.

30
00:01:57.990 --> 00:01:58.720
Thanks, Google.

31
00:01:59.951 --> 00:02:01.992
Okay, so I now have this, and

32
00:02:01.992 --> 00:02:06.421
I have this container where I've
built everything that I want.

33
00:02:07.801 --> 00:02:12.729
We're have to run the add Node.js but
notice we're not going to add NPM

34
00:02:12.729 --> 00:02:16.614
anymore cuz we don't need it,
&gt;&gt; Brian Holt: Okay,

35
00:02:16.614 --> 00:02:19.137
we're gonna add the run group,
we still need that.

36
00:02:19.137 --> 00:02:22.925
We still need the user node.

37
00:02:22.925 --> 00:02:29.175
We are going to,
&gt;&gt; Brian Holt: Work dir.

38
00:02:29.175 --> 00:02:30.045
That's fine.

39
00:02:31.205 --> 00:02:33.745
I have here that we can run mkdir.

40
00:02:33.745 --> 00:02:36.415
I don't think we necessarily
need to do this.

41
00:02:36.415 --> 00:02:40.928
Home node code, but
we'll go ahead and do that.

42
00:02:40.928 --> 00:02:44.278
And workdir, and
then we just have to copy.

43
00:02:44.278 --> 00:02:50.080
And you're gonna say
from stage node-builder.

44
00:02:50.080 --> 00:02:58.267
And then we're gonna
say --chown=node:node,

45
00:02:58.267 --> 00:03:03.678
and we're gonna say /build dot.

46
00:03:03.678 --> 00:03:07.613
I don't need two equals there, just ones.

47
00:03:09.833 --> 00:03:14.103
So what's new here is you see this
from step, which basically refers,

48
00:03:14.103 --> 00:03:18.888
notice this is called node-builder and
as this is called node-builder up here.

49
00:03:18.888 --> 00:03:24.612
So you're saying from this previous stage
of my build process, copy from the build

50
00:03:24.612 --> 00:03:30.358
directory into here, wherever here is,
and here is going to be node code, right?

51
00:03:34.278 --> 00:03:35.658
So what did we accomplish here?

52
00:03:36.938 --> 00:03:42.399
Really, we only cut out NPM, I don't
think we did really anything else, right?

53
00:03:43.979 --> 00:03:45.389
But let's see if it does anything.

54
00:03:45.389 --> 00:03:48.998
&gt;&gt; Speaker 1: I think your build directory
needs to be either builder or build,

55
00:03:48.998 --> 00:03:50.829
each step has a different.

56
00:03:50.829 --> 00:03:51.869
&gt;&gt; Brian Holt: Yeah, you're right.

57
00:03:51.869 --> 00:03:54.229
Thank you, let's call this build.

58
00:03:55.919 --> 00:03:57.529
Yeah, I had that wrong.

59
00:03:57.529 --> 00:04:01.134
Line three, just make sure that whatever
you have on line three here matches what's

60
00:04:01.134 --> 00:04:02.949
on line 15 here.

61
00:04:02.949 --> 00:04:03.497
Good, catch.

62
00:04:03.497 --> 00:04:05.459
&gt;&gt; Speaker 2: That directory
have to exist ahead of time?

63
00:04:07.479 --> 00:04:08.177
&gt;&gt; Brian Holt: Is that why I did this?

64
00:04:08.177 --> 00:04:08.906
&gt;&gt; Speaker 2: No.

65
00:04:08.906 --> 00:04:14.009
&gt;&gt; Brian Holt: Yeah, is that failing?

66
00:04:15.489 --> 00:04:16.032
&gt;&gt; Speaker 2: Yeah.
&gt;&gt; Brian Holt: So

67
00:04:16.032 --> 00:04:18.339
you might need to do a run

68
00:04:18.339 --> 00:04:19.794
mkdir build.

69
00:04:24.908 --> 00:04:26.358
&gt;&gt; Brian Holt: Cool, okay.

70
00:04:26.358 --> 00:04:29.753
So let's see how that plays out here.

71
00:04:29.753 --> 00:04:33.717
So we're gonna call this 3.

72
00:04:37.570 --> 00:04:39.560
&gt;&gt; Brian Holt: Lot more
steps happening here, right?

73
00:04:42.230 --> 00:04:44.349
Still able to pull some
cash stuff here and there,

74
00:04:44.349 --> 00:04:46.020
which is always just impressive to me.

75
00:04:46.020 --> 00:04:50.980
I also love that it's
something I never think about.

76
00:04:50.980 --> 00:04:53.230
They just handle all that
stuff behind the scenes.

77
00:04:53.230 --> 00:04:55.650
That's my favorite kinda technology.

78
00:04:57.790 --> 00:05:00.218
Okay, make sure that
we're still working here.

79
00:05:01.698 --> 00:05:04.920
I love that this is like we have the most
simple node app in the world and

80
00:05:04.920 --> 00:05:08.535
we're just over-engineering the hell
out of the Docker build process, but

81
00:05:08.535 --> 00:05:09.548
I just like doing it.

82
00:05:10.808 --> 00:05:12.198
Okay, so that all looks like it works.

83
00:05:13.828 --> 00:05:18.858
Alpine 3, we cut a massive 9
megabytes off it for this.

84
00:05:18.858 --> 00:05:22.316
So everyone take a victory lap,

85
00:05:22.316 --> 00:05:26.809
get some champagne, I'm just kidding.

86
00:05:26.809 --> 00:05:30.284
I do use multistage build steps a lot
because normally you're cutting out a lot

87
00:05:30.284 --> 00:05:31.190
more than just NPM.

88
00:05:31.190 --> 00:05:33.250
You're cutting out native dependencies.

89
00:05:33.250 --> 00:05:36.229
You're cutting out a bunch of
stuff that you would never need.

90
00:05:36.229 --> 00:05:40.646
You can, if you have stuff where
you have to our Bastion server and

91
00:05:40.646 --> 00:05:43.206
then pull down a bunch of secrets.

92
00:05:43.206 --> 00:05:47.095
You could do that in a build step so
that your production server doesn't have

93
00:05:47.095 --> 00:05:49.606
the ability to connect to
other stuff like that.

94
00:05:49.606 --> 00:05:54.333
There's a bunch of security and
vulnerability and stuff like that,

95
00:05:54.333 --> 00:05:57.919
you can do in that first stage
that never has to make it

96
00:05:57.919 --> 00:06:01.603
into your production container,
which is helpful.

97
00:06:02.703 --> 00:06:06.743
&gt;&gt; Speaker 3: So we don't have to clean
up or do anything with the first step.

98
00:06:06.743 --> 00:06:07.950
That's just just.

99
00:06:07.950 --> 00:06:08.760
&gt;&gt; Brian Holt: Blown away.

100
00:06:08.760 --> 00:06:09.615
&gt;&gt; Speaker 3: Okay.
&gt;&gt; Brian Holt: Yeah,

101
00:06:09.615 --> 00:06:13.109
once this Docker build
container stuff finishes,

102
00:06:13.109 --> 00:06:16.953
it freezes what's in the production step.

103
00:06:16.953 --> 00:06:18.875
Whatever your last one is right?

104
00:06:19.916 --> 00:06:22.266
It crystallizes that into
a container ships that off and

105
00:06:22.266 --> 00:06:24.666
everything else gets thrown away.

106
00:06:24.666 --> 00:06:25.656
Pretty cool, right?

107
00:06:25.656 --> 00:06:26.716
&gt;&gt; Speaker 3: Yeah.
&gt;&gt; Brian Holt: Yeah.

108
00:06:26.716 --> 00:06:29.076
&gt;&gt; Speaker 3: And we could go faster
if it was Node 20 alpine, right?

109
00:06:30.736 --> 00:06:31.596
&gt;&gt; Brian Holt: For this?

110
00:06:31.596 --> 00:06:33.290
&gt;&gt; Speaker 3: Yeah.

111
00:06:33.290 --> 00:06:35.008
&gt;&gt; Brian Holt: Maybe for
that first install.

112
00:06:35.008 --> 00:06:36.336
&gt;&gt; Speaker 3: Or
is just the downloading part?

113
00:06:36.336 --> 00:06:37.816
&gt;&gt; Brian Holt: Yeah,
cuz everything's cashed after that.

114
00:06:39.083 --> 00:06:42.327
That's why I'm saying, you don't really
need to care because you pay the cost once

115
00:06:42.327 --> 00:06:43.663
and then it's just cash forever.

116
00:06:45.033 --> 00:06:47.569
I would not put this in as Alpine.

117
00:06:47.569 --> 00:06:48.751
There's no reason to

