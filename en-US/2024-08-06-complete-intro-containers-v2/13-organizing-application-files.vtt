WEBVTT

1
00:00:00.000 --> 00:00:02.846
&gt;&gt; Brian Holt: Right now we're just
kind of being willy-nilly with our copy

2
00:00:02.846 --> 00:00:03.673
statement here.

3
00:00:03.673 --> 00:00:07.097
Typically, you'll want to be a little
bit more organized with this.

4
00:00:07.097 --> 00:00:10.736
You'll put it in your home directory,
or your www directory, or

5
00:00:10.736 --> 00:00:12.003
something like that.

6
00:00:12.003 --> 00:00:15.502
We're gonna put ours in home.

7
00:00:15.502 --> 00:00:19.842
Node is the name of the user by default,
you can put it in code,

8
00:00:19.842 --> 00:00:22.357
index.js, something like that.

9
00:00:22.357 --> 00:00:28.416
And then you'll have to make sure
that this matches the same thing,

10
00:00:28.416 --> 00:00:35.537
and we'll just do build, I'm just gonna
call it three again cuz I'm too lazy,

11
00:00:35.537 --> 00:00:40.346
and then if I do that again,
everything still works.

12
00:00:40.346 --> 00:00:44.721
But now it's actually in a better place,
which is good.

13
00:00:44.721 --> 00:00:51.590
Okay, something else that we wanna do is,
&gt;&gt; Brian Holt: It's

14
00:00:51.590 --> 00:00:56.321
not good to use the default user
inside your containers, cuz we're

15
00:00:56.321 --> 00:01:01.478
trying to exercise caution and be
the most secure that we possibly can be.

16
00:01:01.478 --> 00:01:04.391
So you don't wanna give them access to
the root user or anything like that,

17
00:01:04.391 --> 00:01:05.741
there's just a bunch of reasons.

18
00:01:05.741 --> 00:01:09.312
Let's say that there's a Python
vulnerability that they can get access to

19
00:01:09.312 --> 00:01:11.588
whatever user is running
your Python process.

20
00:01:11.588 --> 00:01:16.358
If you're the root user, they now have
root access to whatever box you're on.

21
00:01:16.358 --> 00:01:19.292
So you wanna be a bit smarter about that.

22
00:01:19.292 --> 00:01:22.289
So we're just gonna say user node.

23
00:01:22.289 --> 00:01:28.773
Node is the name of a user that is
pre-created on all node containers.

24
00:01:28.773 --> 00:01:35.916
That's not necessarily a docker thing,
that's a node container specific thing.

25
00:01:35.916 --> 00:01:39.738
So this now means that
when I run this copy,

26
00:01:39.738 --> 00:01:44.832
the owner of this, in Linux terms,
is the the node user,

27
00:01:44.832 --> 00:01:49.738
which is just a bit more secure
than running it as root.

28
00:01:49.738 --> 00:01:53.875
I actually think this is done by default,
so I think this is actually redundant.

29
00:01:53.875 --> 00:01:58.783
But it's always good for you to just
denote this is the user that's going

30
00:01:58.783 --> 00:02:01.531
to be in charge of this particular file.

31
00:02:01.531 --> 00:02:06.451
&gt;&gt; Speaker 2: So if you want it to be bad
and do root, you type in root right there?

32
00:02:06.451 --> 00:02:09.366
&gt;&gt; Brian Holt: I don't
even know if it'll build,

33
00:02:09.366 --> 00:02:15.307
cuz I think you have to build it with
special privileges to run root user.

34
00:02:15.307 --> 00:02:18.641
I don't know, let's see what happens here.

35
00:02:18.641 --> 00:02:26.138
Well, they're getting anatomy From,
there's that.

36
00:02:31.140 --> 00:02:34.390
&gt;&gt; Brian Holt: Well,
it might just work, right?

37
00:02:34.390 --> 00:02:39.001
And then I'm gonna say,
&gt;&gt; Brian Holt: Cuz I

38
00:02:39.001 --> 00:02:41.564
wanna see what it actually is.

39
00:02:41.564 --> 00:02:46.624
Docker exec and a bash.

40
00:02:49.461 --> 00:02:54.068
&gt;&gt; Brian Holt: And I have to do -it.

41
00:03:03.252 --> 00:03:04.675
&gt;&gt; Brian Holt: So it should be running.

42
00:03:04.675 --> 00:03:09.415
You can see here, everything is
running as root, which is not awesome.

43
00:03:09.415 --> 00:03:14.447
And if I go into home/node/code, and

44
00:03:14.447 --> 00:03:19.486
I say, ps aux, it is owned all by root.

45
00:03:19.486 --> 00:03:21.023
So, not awesome.

46
00:03:21.023 --> 00:03:26.214
Not great, it would be way better if
this was all owned by node, right?

47
00:03:29.749 --> 00:03:30.457
&gt;&gt; Brian Holt: So I was wrong.

48
00:03:30.457 --> 00:03:32.969
Yeah, you can go ahead and
do everything by root.

49
00:03:32.969 --> 00:03:36.239
I guess they don't stop you from
shooting yourself in the foot.

50
00:03:36.239 --> 00:03:39.981
Node is very nice,
they just include this node user for you.

51
00:03:39.981 --> 00:03:43.420
Not every container is gonna do that for
you.

52
00:03:43.420 --> 00:03:46.996
It's pretty straightforward
to do yourself.

53
00:03:46.996 --> 00:03:52.346
Let me just find that, yeah,

54
00:03:52.346 --> 00:03:57.486
it's this one right there.

55
00:03:57.486 --> 00:04:01.405
So if I went back over to my
notes here and I did this,

56
00:04:01.405 --> 00:04:06.691
useradd -ms /bin/bash lolcat, and
then now I could do a lolcat and

57
00:04:06.691 --> 00:04:10.444
now everything will be
owned by the user lolcat.

58
00:04:10.444 --> 00:04:18.465
Let's just
&gt;&gt; Brian Holt: Okay,

59
00:04:18.465 --> 00:04:22.594
and then, just to prove my point here.

60
00:04:35.026 --> 00:04:41.466
&gt;&gt; Brian Holt: Okay, and then if I do
this again, I do build it to exec.

61
00:04:45.128 --> 00:04:49.285
&gt;&gt; Brian Holt: So you can see, I'm
connected as the lolcat user right there,

62
00:04:49.285 --> 00:04:50.547
right off the bat.

63
00:04:50.547 --> 00:04:52.077
And if I go in and I say,

64
00:04:52.077 --> 00:04:56.378
ps aux, you can see everything
is now owned by lolcat, right?

65
00:04:59.129 --> 00:05:00.878
&gt;&gt; Brian Holt: So
it doesn't have to be the node user,

66
00:05:00.878 --> 00:05:02.951
that's just the one that
node happens to use.

67
00:05:02.951 --> 00:05:05.928
Totally fine to do it that way,
you can also just go ahead and create and

68
00:05:05.928 --> 00:05:06.846
use your own as well.

69
00:05:11.444 --> 00:05:16.210
&gt;&gt; Brian Holt: Another cool thing that I
will frequently do when you do copy here,

70
00:05:21.343 --> 00:05:24.129
&gt;&gt; Brian Holt: You can do --chwon, and

71
00:05:24.129 --> 00:05:28.949
then you just put node or
lolcat or whatever.

72
00:05:28.949 --> 00:05:34.181
We'll get rid of,
I'll just do this with node.

73
00:05:39.083 --> 00:05:41.910
&gt;&gt; Brian Holt: And here we go.

74
00:05:41.910 --> 00:05:45.340
So this chown or change own, right?

75
00:05:45.340 --> 00:05:50.150
You can just identify specifically
who you want whatever you're

76
00:05:50.150 --> 00:05:52.782
doing to be the owner there as well.

77
00:05:52.782 --> 00:05:53.801
This is redundant, right?

78
00:05:53.801 --> 00:05:57.467
Because if your user node here,
whatever this copy is,

79
00:05:57.467 --> 00:06:02.236
is gonna be done by that, but the the flag
lets you identify that as well.

80
00:06:06.252 --> 00:06:09.441
&gt;&gt; Brian Holt: It's not a big deal that
this code directory doesn't exist,

81
00:06:09.441 --> 00:06:11.600
COPY by default will create that for you.

82
00:06:14.746 --> 00:06:17.154
&gt;&gt; Brian Holt: A quick note on ADD.

83
00:06:17.154 --> 00:06:21.690
So, totally would work as well, I'm pretty
sure you could just literally do this and

84
00:06:21.690 --> 00:06:23.020
this would work as well.

85
00:06:23.020 --> 00:06:26.223
Why do we use COPY instead of ADD?

86
00:06:26.223 --> 00:06:27.871
ADD can do a lot more.

87
00:06:27.871 --> 00:06:31.225
ADD can add remote URLs.

88
00:06:31.225 --> 00:06:36.326
ADD will automatically unzip files for
you if you put zips in there.

89
00:06:36.326 --> 00:06:39.560
It has some just like additional
functionality in there,

90
00:06:39.560 --> 00:06:41.147
that almost never do I need.

91
00:06:41.147 --> 00:06:41.856
And then.

92
00:06:41.856 --> 00:06:45.123
And so I just kinda stick with
the least powerful thing,

93
00:06:45.123 --> 00:06:48.122
the most comfortable thing to use,
which is COPY.

94
00:06:48.122 --> 00:06:52.769
So I'm gonna advocate for you to use ADD
if you are gonna use one of those extra

95
00:06:52.769 --> 00:06:55.536
features, otherwise, just stick to COPY.

96
00:06:55.536 --> 00:07:01.357
And, yeah, one more thing, in other words,

97
00:07:01.357 --> 00:07:06.244
it's fair to say I never use ADD.

98
00:07:06.244 --> 00:07:10.408
&gt;&gt; Brian Holt: Another
fun one here is WORKDIR.

99
00:07:10.408 --> 00:07:13.796
And if I just do
/home/node/code like that,

100
00:07:13.796 --> 00:07:19.218
this will put me like my working directory
of wherever I'm copying files and

101
00:07:19.218 --> 00:07:24.403
stuff like that, so that I don't have
to have fully Manage paths there.

102
00:07:24.403 --> 00:07:28.679
And now that my working directory is
there, I can just say dot, right?

103
00:07:31.315 --> 00:07:32.796
&gt;&gt; Brian Holt: So that helps as well.

104
00:07:35.648 --> 00:07:39.461
&gt;&gt; Brian Holt: Yeah, it's like as if
you had CD'd into that directory.

105
00:07:39.461 --> 00:07:42.160
&gt;&gt; Speaker 2: Does WIRKDIR also apply
to the command right at the end

106
00:07:43.766 --> 00:07:46.125
&gt;&gt; Brian Holt: Yes, it does.

107
00:07:46.125 --> 00:07:51.312
So you could actually get this
down even further to that,

108
00:07:51.312 --> 00:07:56.405
make sure that I'm not making stuff up,
as I want to do.

109
00:07:56.405 --> 00:08:02.862
And I'm gonna say, build
&gt;&gt; Brian Holt: Nope,

110
00:08:02.862 --> 00:08:05.762
not what I wanted to do.

111
00:08:05.762 --> 00:08:11.985
Docker build that, and
then we're gonna run that again.

112
00:08:11.985 --> 00:08:18.438
And then let's go look at local host 3000.

113
00:08:18.438 --> 00:08:22.049
Yep, and you can see there,
working just the way we want,

114
00:08:22.049 --> 00:08:25.536
and that has the working directory and
the user as well.

