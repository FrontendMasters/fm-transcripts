WEBVTT

1
00:00:00.009 --> 00:00:01.344
Okay, awesome.

2
00:00:01.344 --> 00:00:05.478
Now the real question is, do I even
have [LAUGH] it's like I plan this.

3
00:00:05.478 --> 00:00:08.194
All right, we have, really,

4
00:00:08.194 --> 00:00:13.008
three functions in which we
need to actually fill out.

5
00:00:13.008 --> 00:00:16.614
We have an update function and
we have a get function.

6
00:00:16.614 --> 00:00:20.332
So a get takes in a key and
hopes for a value to come out.

7
00:00:20.332 --> 00:00:22.708
An update takes in a key and a value and

8
00:00:22.708 --> 00:00:25.633
should update how we
have everything set up.

9
00:00:25.633 --> 00:00:28.462
Now the thing is that notice
that there's no insert, right?

10
00:00:28.462 --> 00:00:31.087
Cuz we don't know if you
have the value in the cache.

11
00:00:31.087 --> 00:00:33.884
Now we're just gonna say, hey,
update this thing, right?

12
00:00:33.884 --> 00:00:35.328
If it's in there, move it to the front.

13
00:00:35.328 --> 00:00:37.485
If it's not in there, add it to the front.

14
00:00:37.485 --> 00:00:40.227
So we kinda need a way to be
able to do both operations.

15
00:00:40.227 --> 00:00:42.343
A get will naturally move it to the front.

16
00:00:42.343 --> 00:00:46.303
So let's write out these pseudocode
operations so we're not confused.

17
00:00:46.303 --> 00:00:52.282
The first thing we need to do is,
let's see, check the cache for existence.

18
00:00:52.282 --> 00:00:56.640
I think I spelled existence wrong,
I never know if it's an e or an a.

19
00:00:56.640 --> 00:01:02.243
Existence, they both look correct me,
I will never know.

20
00:01:02.243 --> 00:01:03.316
Don't correct me, please.

21
00:01:03.316 --> 00:01:05.165
Just accept it.

22
00:01:05.165 --> 00:01:07.494
Breathe in the correctness or
incorrectness.

23
00:01:07.494 --> 00:01:13.916
Okay, second, we update the value we
found and move it to the front, right?

24
00:01:13.916 --> 00:01:19.470
Because now that we've used it,
it is no longer the least recently used,

25
00:01:19.470 --> 00:01:23.693
it is now the most recently
used piece of cache, right?

26
00:01:27.767 --> 00:01:31.232
Is most recently used or
least recently used correct?

27
00:01:31.232 --> 00:01:33.851
I can't really tell which direction
is supposed to be correct,

28
00:01:33.851 --> 00:01:36.662
I'm using the term most recently
used as the newest possible used and

29
00:01:36.662 --> 00:01:38.133
least recently used as the oldest.

30
00:01:38.133 --> 00:01:40.378
It's like turn the AC down or
turn the AC up,

31
00:01:40.378 --> 00:01:44.653
do you mean you want the temperature more
down, is that what you're trying to say?

32
00:01:44.653 --> 00:01:48.093
It's one of those confusing which
way is the actual correct way.

33
00:01:48.093 --> 00:01:51.793
So I'm gonna go with the way I
like to say it in my head, sorry.

34
00:01:51.793 --> 00:01:56.577
Anyways, then lastly,
we need to return out the value found or

35
00:01:56.577 --> 00:01:59.116
undefined if not exist, right?

36
00:01:59.116 --> 00:01:59.865
Pretty straightforward.

37
00:01:59.865 --> 00:02:01.897
I think we can kinda see that
that one shouldn't be too hard.

38
00:02:01.897 --> 00:02:03.147
Let's talk about update now.

39
00:02:03.147 --> 00:02:05.594
Update's a bit trickier than get.

40
00:02:05.594 --> 00:02:10.162
Cuz the first thing we need to do is,
does it exist?

41
00:02:10.162 --> 00:02:12.834
So we can use that with get, right?

42
00:02:12.834 --> 00:02:16.374
So we can technically just
simply call get, right?

43
00:02:16.374 --> 00:02:20.620
If we get the value out, well,
guess what, it's gonna be updated.

44
00:02:20.620 --> 00:02:23.418
One tricky part is if we
change the value right here,

45
00:02:23.418 --> 00:02:25.141
then we may not want to use that.

46
00:02:25.141 --> 00:02:28.660
Now, in some LRUs, we have this whole rule
that if the key already maps to an item in

47
00:02:28.660 --> 00:02:31.771
the cache, we're not technically
updating the contents of the cache,

48
00:02:31.771 --> 00:02:34.020
we're only updating its
position within the list.

49
00:02:34.020 --> 00:02:37.787
For us, we're gonna actually update
the contents of the cache as well,

50
00:02:37.787 --> 00:02:40.590
assuming that it's meant to be changed,
all right?

51
00:02:40.590 --> 00:02:44.928
So just in case someone suggest that as
a tricky way like, look what I found.

52
00:02:44.928 --> 00:02:47.993
So first we have to find
out it doesn't exist.

53
00:02:47.993 --> 00:02:52.969
If it doesn't, we need to insert.

54
00:02:52.969 --> 00:02:55.773
But, of course, if we insert,
what do we have to do?

55
00:02:55.773 --> 00:03:00.082
We have to check capacity and
evict if over, right?

56
00:03:00.082 --> 00:03:03.454
If we've over done our capacity,

57
00:03:03.454 --> 00:03:08.583
we need to evict some item from the cache,
correct?

58
00:03:08.583 --> 00:03:11.902
Correct, awesome.

59
00:03:11.902 --> 00:03:14.601
Let's see, let's see, let's see.

60
00:03:14.601 --> 00:03:17.367
If it doesn't, we need to insert it, yep.

61
00:03:17.367 --> 00:03:23.102
If it does, we need to update
to the front of the list and

62
00:03:23.102 --> 00:03:25.989
update the value, right?

63
00:03:25.989 --> 00:03:26.915
Makes sense?

64
00:03:26.915 --> 00:03:27.853
All right, awesome.

