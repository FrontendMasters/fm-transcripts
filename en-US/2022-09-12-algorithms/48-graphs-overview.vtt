WEBVTT

1
00:00:00.080 --> 00:00:03.996
So we're now gonna come to graphs,
graphs being usually the hardest, and

2
00:00:03.996 --> 00:00:05.920
largest part of all algorithms.

3
00:00:05.920 --> 00:00:10.210
Everything we've done up until
this point is effectively a graph.

4
00:00:10.210 --> 00:00:13.110
I know, might be a hard pill to swallow.

5
00:00:13.110 --> 00:00:15.623
There's that meme, hard pill to swallow,
everything's a graph.

6
00:00:15.623 --> 00:00:20.102
This is always the terminus of
all these things cuz it's just,

7
00:00:20.102 --> 00:00:24.343
there's so much to graph problems,
it's out of control.

8
00:00:24.343 --> 00:00:28.639
I believe it was Euler, and I forget
what city, I think it's in Germany,

9
00:00:28.639 --> 00:00:33.211
he was asked, hey, we have these seven
bridges and we want someone to be able to

10
00:00:33.211 --> 00:00:37.751
walk over all the bridges once cuz we're
giving some king a tour or whatever.

11
00:00:37.751 --> 00:00:42.098
And we wanna be able to uniquely walk over
all bridges and see all parts of the city,

12
00:00:42.098 --> 00:00:43.611
but we can't figure it out.

13
00:00:43.611 --> 00:00:47.211
We're gonna go hire
a mathematician known as Euler,

14
00:00:47.211 --> 00:00:52.738
which most people don't realize that
this is pronounced Euler, that's Euler.

15
00:00:52.738 --> 00:00:55.420
People call it Euler, it's Euler.

16
00:00:55.420 --> 00:00:58.010
He came and said, okay,
I'm gonna figure this out.

17
00:00:58.010 --> 00:01:02.327
And he reduced that problem literally
down to how we draw a graph problems to

18
00:01:02.327 --> 00:01:02.952
this day.

19
00:01:02.952 --> 00:01:05.257
He realized that the bridges or
connections,

20
00:01:05.257 --> 00:01:06.919
each land area's just a circle.

21
00:01:06.919 --> 00:01:10.254
So he's just like, here's the nodes,
here's the connections, and

22
00:01:10.254 --> 00:01:13.922
came up with a principle effectively
stating that, if there is an odd amount of

23
00:01:13.922 --> 00:01:17.109
connections into any one node you
can't do this type of traversal.

24
00:01:17.109 --> 00:01:19.880
And so he kind of proved
that mathematically, sorry,

25
00:01:19.880 --> 00:01:22.087
your city is incapable of doing this.

26
00:01:22.087 --> 00:01:23.727
You're gonna have to do this differently.

27
00:01:23.727 --> 00:01:24.957
And so, it was actually pretty cool.

28
00:01:24.957 --> 00:01:28.877
It's a pretty cool thing,
you can read about it, but I didn't.

29
00:01:28.877 --> 00:01:32.203
Out of the two algorithms book,
there's a third one that I've read and

30
00:01:32.203 --> 00:01:34.767
that one told that story super neat,
very fantastic.

31
00:01:34.767 --> 00:01:38.491
I'm sure I butchered a little bit of it,
but it's mostly correct, what I just said,

32
00:01:38.491 --> 00:01:39.290
mostly correct.

33
00:01:40.980 --> 00:01:41.616
All right,

34
00:01:41.616 --> 00:01:46.005
it's not as good as the Hamilton draw the
equation of the quaternion while talking

35
00:01:46.005 --> 00:01:50.280
to your mother-in-law,
that is the greatest story of them all.

36
00:01:50.280 --> 00:01:53.480
But that is almost an imaginary story.

37
00:01:53.480 --> 00:01:54.990
That's a really good joke if you get it.

38
00:01:54.990 --> 00:01:57.420
It's a really good joke.

39
00:01:57.420 --> 00:01:59.790
Okay, anyways, so, what is a graph?

40
00:01:59.790 --> 00:02:02.198
A graph, as simple as it is put,

41
00:02:02.198 --> 00:02:07.450
is a series of nodes with some
amount of connections, right?

42
00:02:07.450 --> 00:02:08.950
There's no rules.

43
00:02:08.950 --> 00:02:11.788
It's not like, you can only be top down.

44
00:02:11.788 --> 00:02:13.320
It can only have a left or a right.

45
00:02:13.320 --> 00:02:17.740
It's just, there's a lot of connections,
or some connections, or no connections.

46
00:02:19.040 --> 00:02:20.230
So, there we go.

47
00:02:21.470 --> 00:02:22.530
I just draw a graph, right?

48
00:02:22.530 --> 00:02:23.970
That is a graph.

49
00:02:23.970 --> 00:02:26.748
So there's a lot of terminology
when it comes to a graph.

50
00:02:26.748 --> 00:02:29.912
And so let's kind of go through
all the terminology, blah, blah,

51
00:02:29.912 --> 00:02:30.977
all trees are graphs.

52
00:02:30.977 --> 00:02:32.604
So here's the terminology.

53
00:02:32.604 --> 00:02:35.295
This is not obviously exhaustive,
but it should be enough for

54
00:02:35.295 --> 00:02:38.209
us to be able to kind of communicate
about it for the rest of the day.

55
00:02:38.209 --> 00:02:43.411
So a cycle, a cycle is as simple as this,
if I can start at A and

56
00:02:43.411 --> 00:02:49.846
visit at least, I believe a cycle requires
three nodes for it to be a cycle.

57
00:02:49.846 --> 00:02:53.742
Means that if I can visit a series
of nodes and going back to myself,

58
00:02:53.742 --> 00:02:55.840
that should be considered a cycle.

59
00:02:55.840 --> 00:02:59.658
So A to D is not considered
a cycle cuz it's only two nodes.

60
00:02:59.658 --> 00:03:06.262
So A, to B, to C, to D, to A,
would be a cycle, right?

61
00:03:06.262 --> 00:03:06.766
There we go.

62
00:03:06.766 --> 00:03:09.010
We now have a cycle all the way through.

63
00:03:09.010 --> 00:03:11.871
So that is a cycle, of course, and

64
00:03:11.871 --> 00:03:16.830
our acyclic graph is an acycle,
a meaning not in this case.

65
00:03:16.830 --> 00:03:19.290
So there is no cycles in the graph.

66
00:03:19.290 --> 00:03:24.944
A connected graph means that every
node can reach every other node.

67
00:03:24.944 --> 00:03:27.685
So a good example of this is,
if we had this, and

68
00:03:27.685 --> 00:03:31.890
let's just say we actually had
a direction to this arrow, right?

69
00:03:31.890 --> 00:03:37.220
E, E can reach no other nodes,
but every node can reach E.

70
00:03:37.220 --> 00:03:40.240
So, therefore,
this is not a fully connected graph,

71
00:03:40.240 --> 00:03:43.733
there's actually kind of two
sub parts to this graph, right?

72
00:03:43.733 --> 00:03:45.065
We're not quite fully connected.

73
00:03:45.065 --> 00:03:48.440
We're not gonna go over strongly connected
components, blah, blah, blah, blah, blah.

74
00:03:48.440 --> 00:03:50.850
But just something to know about.

75
00:03:50.850 --> 00:03:54.954
Directed, as I just showed right here is,
oops, as I showed right here,

76
00:03:54.954 --> 00:03:57.951
is when you actually have
directions on your arrows.

77
00:03:57.951 --> 00:04:00.556
Meaning that there
are one-way connections, or

78
00:04:00.556 --> 00:04:02.540
the connections are asymmetric.

79
00:04:02.540 --> 00:04:03.400
Let me give you an example.

80
00:04:04.450 --> 00:04:07.370
Let's say that we have A connected to B.

81
00:04:07.370 --> 00:04:09.240
First, I'll draw it like this.

82
00:04:09.240 --> 00:04:11.270
I'll do that, that, to that.

83
00:04:11.270 --> 00:04:13.460
It's kind of like an old
college trick right here.

84
00:04:13.460 --> 00:04:16.070
And I can put a number up here and
a number down here.

85
00:04:16.070 --> 00:04:19.155
Meaning if you go from A to B,
the weight's 20, or

86
00:04:19.155 --> 00:04:21.340
the cost of that connection is 20.

87
00:04:21.340 --> 00:04:25.070
If you go from B to A,
the cost of that connection is only 10.

88
00:04:25.070 --> 00:04:30.130
And so you can have these weird asymmetric
relationships in a graph, it happens.

89
00:04:30.130 --> 00:04:35.810
You could imagine traffic creates
an asymmetric contention on a highway.

90
00:04:35.810 --> 00:04:40.316
If you lived in the bay area, you would
know that if you're coming from Netflix's

91
00:04:40.316 --> 00:04:44.190
office going north up the 880,
it totally sucks at four o'clock.

92
00:04:44.190 --> 00:04:48.089
Cuz everybody arrives to work, of course,
between the hours of eight to one, but

93
00:04:48.089 --> 00:04:50.533
everybody leaves work at
four o'clock on the dot.

94
00:04:50.533 --> 00:04:52.960
Bay Area, just the worst.

95
00:04:52.960 --> 00:04:54.570
So that always happens.

96
00:04:54.570 --> 00:04:56.020
So it creates this
asymmetric relationship.

97
00:04:56.020 --> 00:04:58.501
So if you're going south,
you can go 100 miles an hour.

98
00:04:58.501 --> 00:05:02.560
If you're going north, you can go five
miles an hour, it's just the worst.

99
00:05:02.560 --> 00:05:05.150
So you get the idea, so
obviously Google Maps has this.

100
00:05:05.150 --> 00:05:07.800
They have these changing weights
in which they know, hey,

101
00:05:07.800 --> 00:05:11.828
if you're going this direction, it's much
slower than, say, the recommended speed,

102
00:05:11.828 --> 00:05:15.040
but if you're going this direction,
people are going ten over.

103
00:05:15.040 --> 00:05:18.696
So we may route you a different
way than you would expect.

104
00:05:18.696 --> 00:05:24.014
All right, undirected, of course,
meaning that the links like these ones,

105
00:05:24.014 --> 00:05:29.185
they don't have any direction associated
with them, you can go both ways.

106
00:05:29.185 --> 00:05:31.758
Weighted, I just kind of went over that,
weighted.

107
00:05:31.758 --> 00:05:35.470
They actually have some sort of value
associated with that connection.

108
00:05:35.470 --> 00:05:38.847
In an undirected graph,
a weight would be for both directions,

109
00:05:38.847 --> 00:05:40.796
it'd be a symmetric relationship.

110
00:05:40.796 --> 00:05:44.450
Whereas in a directed graph,
it can be asymmetric.

111
00:05:44.450 --> 00:05:48.013
Oopsies, a dag is kind of
like a pretty common phrase,

112
00:05:48.013 --> 00:05:50.770
it means a directed acyclic graph.

113
00:05:50.770 --> 00:05:52.899
So a good example of
a directed acyclic graph,

114
00:05:52.899 --> 00:05:55.670
we could just draw one really quickly.

115
00:05:55.670 --> 00:05:59.600
Remember, a cycle is when three nodes,
you can go back and forth.

116
00:05:59.600 --> 00:06:02.170
So I could have something
that looks like this.

117
00:06:02.170 --> 00:06:02.900
That's just fine.

118
00:06:03.960 --> 00:06:06.070
And then we can do something like this.

119
00:06:07.810 --> 00:06:08.310
There we go.

120
00:06:09.730 --> 00:06:10.500
So there you go.

121
00:06:10.500 --> 00:06:13.870
That would be a directed acyclic graph,
I believe.

122
00:06:13.870 --> 00:06:15.336
Let me just make sure, right?

123
00:06:15.336 --> 00:06:18.123
If you're at A, you can only go to D,
you can't go here, yep.

124
00:06:18.123 --> 00:06:19.029
So there you go.

125
00:06:19.029 --> 00:06:23.139
You kind of have this whole thing where
you can't quite make it to any other node,

126
00:06:23.139 --> 00:06:24.600
everything has a terminus.

127
00:06:24.600 --> 00:06:27.355
So B would be the closest,
which you could go all the way to here but

128
00:06:27.355 --> 00:06:28.520
you can't go any further.

129
00:06:29.920 --> 00:06:34.212
C, you can't even go anywhere,
poor C, pour one out for C.

130
00:06:34.212 --> 00:06:39.765
Implementation terms, I will refer
to a node usually as a vertex.

131
00:06:39.765 --> 00:06:42.539
I've seen them also referred to as
a point, but that's pretty rare.

132
00:06:42.539 --> 00:06:47.844
But mostly vertex is kind of like
the Canonical term for a node in a graph.

133
00:06:47.844 --> 00:06:52.019
You can also use the term node, but
that means when I'm doing Big O,

134
00:06:52.019 --> 00:06:55.336
I'm gonna be using probably
V to describe the nodes.

135
00:06:55.336 --> 00:06:59.185
This is the vertex, this is
the running time based on the vertex.

136
00:06:59.185 --> 00:07:03.368
Second, an edge is the connection
betwixt two nodes, you get the idea.

137
00:07:03.368 --> 00:07:07.591
So that means if we had a running
time of O times V, that means for

138
00:07:07.591 --> 00:07:11.759
every vertex, we would visit
every single edge in the graph.

139
00:07:11.759 --> 00:07:12.710
Does that make sense?

140
00:07:13.910 --> 00:07:15.470
Yeah, I think that makes sense.

141
00:07:15.470 --> 00:07:16.600
So there we go.

142
00:07:16.600 --> 00:07:19.264
&gt;&gt; Do the vertices have weights, too, or?

143
00:07:19.264 --> 00:07:20.814
&gt;&gt; Vertices have values, right?

144
00:07:20.814 --> 00:07:21.332
I mean,

145
00:07:21.332 --> 00:07:26.534
usually weights are only associated
with the traversal betwixt two nodes.

146
00:07:26.534 --> 00:07:30.794
But in this case, you can put
whatever you want as the value, okay.

