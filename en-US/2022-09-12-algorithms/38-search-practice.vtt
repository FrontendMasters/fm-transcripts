WEBVTT

1
00:00:00.040 --> 00:00:01.210
So,we are gonna do a practice problem.

2
00:00:01.210 --> 00:00:04.080
Is everyone ready for a sweet,
delicious practice prompt?

3
00:00:04.080 --> 00:00:08.682
So, I did get this in an interview and
I have even asked this question,

4
00:00:08.682 --> 00:00:13.030
probably 40 times in an interview
before looking back on it.

5
00:00:13.030 --> 00:00:15.380
This was about 10 years ago
I was asking this question.

6
00:00:15.380 --> 00:00:17.090
I don't know if I would
ask this question anymore.

7
00:00:17.090 --> 00:00:19.697
You know, that it's not as I don't think
it's that I don't think it's a very

8
00:00:19.697 --> 00:00:20.590
great question.

9
00:00:20.590 --> 00:00:21.930
But, it shouldn't be a simple question.

10
00:00:21.930 --> 00:00:25.670
It really shows if someone is
familiar with data structures or not,

11
00:00:25.670 --> 00:00:27.780
cuz the question itself isn't hard.

12
00:00:27.780 --> 00:00:31.800
So, the question, of course, is comparing
two binary trees to see if they're

13
00:00:31.800 --> 00:00:33.720
both equal in shape and in structure.

14
00:00:34.760 --> 00:00:37.200
So, let me show you what I mean.

15
00:00:37.200 --> 00:00:38.390
So, let's do this.

16
00:00:38.390 --> 00:00:43.242
So, let's just pretend we had five, Three,

17
00:00:43.242 --> 00:00:46.426
hexadecimal of 45.

18
00:00:46.426 --> 00:00:50.520
There we go, all numbers fantastic and

19
00:00:50.520 --> 00:00:54.125
we had another tree that was five.

20
00:00:54.125 --> 00:00:58.606
Three, again hexadecimal of 45 just a fun
number right we're just putting in fun

21
00:00:58.606 --> 00:00:59.705
numbers right now.

22
00:00:59.705 --> 00:01:04.569
So, we have two trees we can visually
see they're both same in value and

23
00:01:04.569 --> 00:01:07.663
same in shape correct Yes, yes absolutely.

24
00:01:07.663 --> 00:01:10.930
So, let's try breadth first
search first on this thing.

25
00:01:10.930 --> 00:01:13.770
So, breadth first search,
of course is a tree level walking.

26
00:01:13.770 --> 00:01:16.470
So, we had visit 5 first, is 5 equal to 5?

27
00:01:16.470 --> 00:01:16.970
Say, yes.

28
00:01:18.820 --> 00:01:19.340
&gt;&gt; Yes.

29
00:01:19.340 --> 00:01:20.610
&gt;&gt; Yes, thank you.

30
00:01:20.610 --> 00:01:24.230
All right, then we'd go we'd add each one
the children, add left then add right.

31
00:01:24.230 --> 00:01:27.680
Therefore, we visit 3 necks is 3 to 3?

32
00:01:27.680 --> 00:01:30.022
&gt;&gt; Depends on what you're
doing definition of is.

33
00:01:30.022 --> 00:01:34.350
&gt;&gt; My goodness, yes,
3 is equal to it it's awesome, okay?

34
00:01:34.350 --> 00:01:37.235
Is the hexadecimal 45 equal
to the hex The decimal 45.

35
00:01:37.235 --> 00:01:42.765
Yes, my goodness, this looks like
we have found a solution, right?

36
00:01:42.765 --> 00:01:45.573
We feel like we found a way we
could traverse these two trees and

37
00:01:45.573 --> 00:01:47.525
actually see if they are equal, correct?

38
00:01:48.665 --> 00:01:52.319
All right, well always try to prove
yourself wrong in an interview so

39
00:01:52.319 --> 00:01:54.450
let me draw one other way.

40
00:01:54.450 --> 00:01:59.093
&gt;&gt; Five, three, hexa decimal of 45 tree

41
00:01:59.093 --> 00:02:03.690
level search again, let's go first.

42
00:02:03.690 --> 00:02:06.870
We would start here is five equal to five.

43
00:02:06.870 --> 00:02:08.020
Yes, it is.

44
00:02:08.020 --> 00:02:09.160
We'd go here.

45
00:02:09.160 --> 00:02:12.624
We'd add left and right we'd add left and
right, we'd go to three,

46
00:02:12.624 --> 00:02:13.837
Is three equal to this.

47
00:02:13.837 --> 00:02:16.560
Yes Now we add left and
right add left and right.

48
00:02:16.560 --> 00:02:20.139
we would go here on this one
we'd go here on this one.

49
00:02:20.139 --> 00:02:23.690
Is 45 or
hexadecimal 45 We go to hexadecimal for

50
00:02:23.690 --> 00:02:25.847
five absolutely it surely is.

51
00:02:25.847 --> 00:02:29.606
But, are we structurally equivalent.

52
00:02:29.606 --> 00:02:35.398
Now, we've screwed that up obviously our
algorithm sucks, we failed the interview

53
00:02:35.398 --> 00:02:39.912
we no longer have a job at the widget
factory what are we going to do.

54
00:02:39.912 --> 00:02:43.103
Well, that's because we didn't
use the right traversaling.

55
00:02:43.103 --> 00:02:45.430
Remember what I said about depth first.

56
00:02:45.430 --> 00:02:48.240
Depth first preserves
the shape of the traversal.

57
00:02:49.350 --> 00:02:53.340
So, if we were to do this again but
go depth first,

58
00:02:53.340 --> 00:02:58.568
we would start at 5, and we'd say,
hey, are you equal to 5?

59
00:02:58.568 --> 00:02:59.770
You are.

60
00:02:59.770 --> 00:03:03.750
Let's both go down the left-hand
side of our tree together.

61
00:03:03.750 --> 00:03:05.760
We'd go down to 3, it would go down to 3.

62
00:03:05.760 --> 00:03:08.073
We go down to 3,
it would go down 3, there we go.

63
00:03:08.073 --> 00:03:08.770
3 on 3.

64
00:03:08.770 --> 00:03:13.196
Okay, hey, you're equal,
let's both go down our left-hand side.

65
00:03:13.196 --> 00:03:14.856
I'm null, are you null?

66
00:03:14.856 --> 00:03:15.710
You are awesome.

67
00:03:15.710 --> 00:03:16.640
Come back up to three.

68
00:03:16.640 --> 00:03:18.080
Let's go down our right hand side.

69
00:03:18.080 --> 00:03:19.610
You're not, I'm not fantastic.

70
00:03:19.610 --> 00:03:20.610
Come up to three.

71
00:03:20.610 --> 00:03:21.680
Go back up to five.

72
00:03:21.680 --> 00:03:23.554
Let's go down our right hand side.

73
00:03:23.554 --> 00:03:25.981
You're hexadecimal 45,
&gt;&gt; [LAUGH]

74
00:03:25.981 --> 00:03:27.057
&gt;&gt; Everything is fantastic.

75
00:03:27.057 --> 00:03:27.910
Again.

76
00:03:27.910 --> 00:03:29.697
No, no walk back up.

77
00:03:29.697 --> 00:03:30.619
Everything's great.

78
00:03:30.619 --> 00:03:34.934
We found a solution that works with this
case, but does it work with this case?

79
00:03:34.934 --> 00:03:36.604
Well, let's find out again.

80
00:03:36.604 --> 00:03:40.330
I always walk through solutions
it does make interviewers happy,

81
00:03:40.330 --> 00:03:43.534
hey I'm at five euro five fantastic,
high five in fact.

82
00:03:43.534 --> 00:03:48.009
So, the high five, they're equal,
let's go down the left hand side together.

83
00:03:48.009 --> 00:03:52.299
This is three, I'm at three,
awesome, another good job here,

84
00:03:52.299 --> 00:03:55.190
let's go down the left hand side together.

85
00:03:55.190 --> 00:03:56.870
Hey I'm not, what are you?

86
00:03:56.870 --> 00:03:58.687
I'm hexadecimal 45.

87
00:03:58.687 --> 00:04:03.232
Man, we're no longer compatible,
the whole thing blows up It's bad.

88
00:04:03.232 --> 00:04:04.210
Right?

89
00:04:04.210 --> 00:04:07.263
So, depth,
first search does preserve shape,

90
00:04:07.263 --> 00:04:09.728
whereas breath first search does not.

91
00:04:09.728 --> 00:04:13.434
And I think that is an extremely
important kind of distinction to make,

92
00:04:13.434 --> 00:04:16.586
just because it'll help you
really understand the values or

93
00:04:16.586 --> 00:04:19.512
the merits of recursion
versus breath,first search.

94
00:04:19.512 --> 00:04:20.012
All right.

