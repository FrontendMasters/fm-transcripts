WEBVTT

1
00:00:00.600 --> 00:00:05.710
&gt;&gt; Sean: What are the main top three
causes of web performance issues?

2
00:00:05.710 --> 00:00:09.846
Now for me, when I talk about web
performance, I am not talking about scroll

3
00:00:09.846 --> 00:00:16.520
jink, I am not talking
about platform performance.

4
00:00:16.520 --> 00:00:22.100
At Microsoft, for the web platform team,
we have program managers like Noel and

5
00:00:22.100 --> 00:00:25.400
Lawson who are specifically
responsible for

6
00:00:25.400 --> 00:00:32.240
identifying areas where the platform
has bugs and it needs to be faster.

7
00:00:32.240 --> 00:00:38.480
But this is more in regards of what can
we do to optimize our code base and

8
00:00:38.480 --> 00:00:43.820
so the things I'm gonna be tracking are,
how long does it take your app to load?

9
00:00:45.030 --> 00:00:46.830
How quickly can it be interactive?

10
00:00:46.830 --> 00:00:50.270
I think a lot of times you will hear
teams like the Chrome teams say time to

11
00:00:50.270 --> 00:00:53.900
interactive is a really,
really, really important metric.

12
00:00:53.900 --> 00:00:58.790
But the top three causes of page

13
00:00:58.790 --> 00:01:03.850
load performance or
page load issues are the amount

14
00:01:03.850 --> 00:01:08.450
of Javascript that you have to download
in total for your initial download.

15
00:01:08.450 --> 00:01:13.520
So that means any JavaScript that you're
shipping for your initial page experience,

16
00:01:14.570 --> 00:01:18.710
the number one cause of page
speed issues is that right there.

17
00:01:18.710 --> 00:01:23.479
It's JavaScript, it is the most
expensive resource to load on a website.

18
00:01:24.720 --> 00:01:29.330
The second is gonna be the amount
of CSS in the same kind of way.

19
00:01:29.330 --> 00:01:34.482
So the total amount of CSS that you're
shipping for your initial download for

20
00:01:34.482 --> 00:01:39.727
your initial experience to load the page,
that is the number two most costly.

21
00:01:39.727 --> 00:01:44.644
And then, a very distant third is gonna
be the amount of concurrent network

22
00:01:44.644 --> 00:01:47.776
requests that you have
that you're shipping.

23
00:01:47.776 --> 00:01:52.485
So this is gonna be based on whether or
not you're using H2, HTTP/2,

24
00:01:52.485 --> 00:01:54.662
who's familiar with HTTP/2?

25
00:01:54.662 --> 00:01:59.481
So you understand that it enables you
to have many more concurrent network

26
00:01:59.481 --> 00:02:00.267
requests.

27
00:02:00.267 --> 00:02:04.890
So with H2, you get more
flexibility to ship more resources.

28
00:02:04.890 --> 00:02:09.230
But it does not mean, for example,
if you're still shipping two megabytes of

29
00:02:09.230 --> 00:02:15.890
JavaScript, even if you just split them
out into, I don't know, 200 chunks.

30
00:02:15.890 --> 00:02:20.228
You're still downloading two megabytes
of JavaScript and so you're not doing

31
00:02:20.228 --> 00:02:24.371
anything special by splitting up those
network calls, besides optimizing

32
00:02:24.371 --> 00:02:28.388
how fast it gets to the browser.
&gt;&gt; Sean: So

33
00:02:28.388 --> 00:02:32.190
the distant third would be
the amount of network requests.

