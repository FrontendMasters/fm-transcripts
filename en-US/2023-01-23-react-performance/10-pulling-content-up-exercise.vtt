WEBVTT

1
00:00:01.320 --> 00:00:04.223
All right, so
a product manager came in and

2
00:00:04.223 --> 00:00:09.800
they're like I love what you did with the
expensive component down at the bottom.

3
00:00:10.930 --> 00:00:15.957
But turns out design really wants it right

4
00:00:15.957 --> 00:00:20.850
in between those two pieces, right?

5
00:00:20.850 --> 00:00:24.540
They want to write in between the color
swatch and the guessing, right?

6
00:00:24.540 --> 00:00:28.201
So the immediate way that we would
normally do that, which is, again,

7
00:00:28.201 --> 00:00:31.131
a completely reasonable way
to do it if this thing wasn't

8
00:00:31.131 --> 00:00:32.975
a problematic component, right?

9
00:00:32.975 --> 00:00:36.370
In a real world I love the case
of rendering a 3JS thing.

10
00:00:36.370 --> 00:00:40.500
That's a thing that you don't
want to do too often, right?

11
00:00:40.500 --> 00:00:42.090
We've got to put it in the middle.

12
00:00:42.090 --> 00:00:48.105
So obviously not great, immediate thing
that we would do especially it's like,

13
00:00:48.105 --> 00:00:54.350
imagine you were not the developer
that push that state down previously.

14
00:00:54.350 --> 00:00:56.530
You're like, it needs to be in the middle.

15
00:00:56.530 --> 00:00:59.580
And let's say it wasn't
called expensive component.

16
00:00:59.580 --> 00:01:02.480
Like with an obvious issue.

17
00:01:02.480 --> 00:01:04.540
You might be like, well, okay, cool.

18
00:01:04.540 --> 00:01:07.150
Here's, I'm gonna do,
I'll just go into my game.

19
00:01:08.670 --> 00:01:10.670
And I'm gonna put it right in there.

20
00:01:10.670 --> 00:01:13.480
Just like the design team asked for.

21
00:01:13.480 --> 00:01:14.800
And everything's gonna be great.

22
00:01:16.200 --> 00:01:19.121
And yeah, those of us who
worked on the original feature,

23
00:01:19.121 --> 00:01:23.590
we know that that's literally the problem
that we just solved two sprints ago.

24
00:01:23.590 --> 00:01:27.738
And here it is again, but it's gotta be
in the middle cause that's like the new,

25
00:01:27.738 --> 00:01:29.030
product forms, right?

26
00:01:29.030 --> 00:01:31.160
So it's like we gotta put it there.

27
00:01:31.160 --> 00:01:32.270
And okay, cool.

28
00:01:32.270 --> 00:01:33.866
I don't remember if it,
which one of was in between, but

29
00:01:33.866 --> 00:01:35.460
like the point doesn't really matter.

30
00:01:35.460 --> 00:01:40.637
Application once again, ridiculous.

31
00:01:40.637 --> 00:01:44.100
And so is it just that we
tell like this comes out,

32
00:01:44.100 --> 00:01:47.647
do we do that thing where
we have to figure out which

33
00:01:47.647 --> 00:01:52.564
hill we want to die on when we like
push back on product requirements.

34
00:01:52.564 --> 00:01:57.324
Or again, the name of the game here is
like not immediately reaching from memo

35
00:01:57.324 --> 00:02:02.011
just using an understanding using React
before we pull for all these tools,

36
00:02:02.011 --> 00:02:03.859
right so yes, I understand.

37
00:02:03.859 --> 00:02:05.880
Also you put memo on this one.

38
00:02:05.880 --> 00:02:09.990
But doing that all the time adds up and
pays its own cost.

39
00:02:09.990 --> 00:02:13.433
It's like every all your performance
problems normally were caused by like

40
00:02:13.433 --> 00:02:15.620
a bunch of things that
didn't really matter.

41
00:02:15.620 --> 00:02:19.490
It's fine except my pull request
the Sprint's ending tomorrow.

42
00:02:21.770 --> 00:02:27.003
And like the same thing happens with
1000 memos over time, trust me.

43
00:02:27.003 --> 00:02:30.447
So, we wanna take this
technique where we then,

44
00:02:30.447 --> 00:02:35.492
we want it to show up in between those
two parts just like design ask for.

45
00:02:35.492 --> 00:02:40.093
But we wanna actually follow the rules and
react component hierarchy and

46
00:02:40.093 --> 00:02:44.177
not have it rerender every time
the state happens here, right?

47
00:02:44.177 --> 00:02:48.456
And so the way that we do this is kind
of like, as words aren't great for but

48
00:02:48.456 --> 00:02:51.769
hopefully that the chart will
make more sense I like ratio

49
00:02:51.769 --> 00:02:53.550
which you have to words.

50
00:02:53.550 --> 00:02:58.657
We try to part this game component for a
place where I can put it in between those

51
00:02:58.657 --> 00:03:04.408
two things, but actually spiritually keep
it up top where I wanted it before, right?

52
00:03:04.408 --> 00:03:07.849
So we basically want to show it in between
the color swatch and the inputs or

53
00:03:07.849 --> 00:03:09.250
any of those two components.

54
00:03:09.250 --> 00:03:14.213
But as far as React is concerned
isolate it just as we did earlier.

55
00:03:14.213 --> 00:03:18.438
So what we do here is we would not put it
in this component because that is just

56
00:03:18.438 --> 00:03:22.466
literally undoing We're going to
refactor in every way possible, but

57
00:03:22.466 --> 00:03:24.902
we'd say is like, hey, game component.

58
00:03:26.072 --> 00:03:28.162
Don't worry about what happens in here.

59
00:03:28.162 --> 00:03:32.043
It's not really your child,
but just leave a slot for

60
00:03:32.043 --> 00:03:37.662
me the parent component to do my thing and
render a component in here, right?

61
00:03:37.662 --> 00:03:39.682
Like don't you worry about it, right?

62
00:03:39.682 --> 00:03:41.272
It's not part of your tree.

63
00:03:41.272 --> 00:03:45.826
It's still the parents,
child like it's your SIP but

64
00:03:45.826 --> 00:03:52.670
we pass it in like just give me a place
where I can render something else, okay?

65
00:03:52.670 --> 00:03:57.143
Like spelt calls these slots instead
of children which probably like would

66
00:03:57.143 --> 00:03:59.851
make this entire
conversation a lot easier.

67
00:03:59.851 --> 00:04:04.443
But like that's what happens when one
framework is like eight years older than

68
00:04:04.443 --> 00:04:07.027
eight years older but several years older.

69
00:04:07.027 --> 00:04:09.320
&gt;&gt; Web components and view and etc.

70
00:04:09.320 --> 00:04:11.190
&gt;&gt; Use everything as well.

71
00:04:12.340 --> 00:04:15.419
Not just the only other one that I use but

72
00:04:15.419 --> 00:04:19.810
you're saying that all
the rest of them right, cool.

73
00:04:19.810 --> 00:04:24.650
And so we'll just part the season game for
a moment.

74
00:04:24.650 --> 00:04:28.490
We'll put back in expensive component,
which is still now.

75
00:04:28.490 --> 00:04:33.760
It looks a lot clearer in code,
whose child application is, right?

76
00:04:33.760 --> 00:04:34.880
It's, application's.

77
00:04:34.880 --> 00:04:36.190
It's not really game's.

78
00:04:36.190 --> 00:04:39.086
It's happening in between two
different parts of game but

79
00:04:39.086 --> 00:04:42.940
like when reactors running through and
it's running through application.

80
00:04:42.940 --> 00:04:45.928
When I see second opponent, right,
that is worth, listening to say, yeah?

81
00:04:45.928 --> 00:04:52.488
&gt;&gt; Definitely speaking is this valid
to assume that whenever the component,

82
00:04:52.488 --> 00:04:57.811
no matter how many levels deep,
it's specified as a child.

83
00:04:57.811 --> 00:05:03.597
I still belongs to the very outer
component which it was exactly declared.

84
00:05:03.597 --> 00:05:04.581
&gt;&gt; Yeah.
&gt;&gt; Yeah, so

85
00:05:04.581 --> 00:05:07.259
even we had 15 layers doesn't matter.

86
00:05:07.259 --> 00:05:10.307
&gt;&gt; Yeah, I think the heuristic is like
it belongs to the file it's defined in.

87
00:05:10.307 --> 00:05:11.253
&gt;&gt; Yeah.

88
00:05:11.253 --> 00:05:16.214
&gt;&gt; Right, like, regardless of where
it shows up in the DOM it is in

89
00:05:16.214 --> 00:05:20.537
the component tree,
literally where it's written.

90
00:05:20.537 --> 00:05:22.969
More than where it shows up in the DOM.

91
00:05:22.969 --> 00:05:25.310
So we'll have this in place,
and we'll save it.

92
00:05:30.802 --> 00:05:32.940
Everything's great again, right?

93
00:05:36.127 --> 00:05:39.105
And we can see we don't
have that slowdown again.

94
00:05:39.105 --> 00:05:41.884
And so that is a way to both we
can either push state down or

95
00:05:41.884 --> 00:05:46.220
if we need something where it's got it,
but it's got to be in the middle there.

96
00:05:46.220 --> 00:05:47.850
We can pull the content up.

97
00:05:47.850 --> 00:05:51.980
There are variations on a theme and
they both work equally as well.

98
00:05:51.980 --> 00:05:57.033
And like I said, I will use memo and
I use memo all the time,

99
00:05:57.033 --> 00:06:01.220
like, but, like, my responsibility.

100
00:06:01.220 --> 00:06:05.705
Still show you that, you don't need those
as the first thing that you reach for.

101
00:06:05.705 --> 00:06:10.289
Sometimes just understanding in Reacts
component, hierarchy will get where

102
00:06:10.289 --> 00:06:14.890
you're looking for before you pull out,
the kind of bigger tools, right?

103
00:06:14.890 --> 00:06:19.155
I say this is the person who uses
a power drill when I open up furniture,

104
00:06:19.155 --> 00:06:21.990
that says do not use with a power tool,
right?

105
00:06:21.990 --> 00:06:26.909
I get it I am that person myself but
like I have to play a role.

