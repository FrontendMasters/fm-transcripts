WEBVTT

1
00:00:00.022 --> 00:00:04.146
We've made promises about
the Contacts API and

2
00:00:04.146 --> 00:00:08.794
I feel that it is my civic
duty to keep those promises.

3
00:00:08.794 --> 00:00:14.374
So to review, I just want to look at
my beautiful flame shot one more time.

4
00:00:14.374 --> 00:00:17.588
Which is, yeah,
I am regenerating those arrays.

5
00:00:17.588 --> 00:00:18.102
That is fair.

6
00:00:18.102 --> 00:00:21.946
We talked about the trade offs of me
trying to do some weird shuttling thing

7
00:00:21.946 --> 00:00:23.069
between two arrays.

8
00:00:23.069 --> 00:00:25.609
And I'm like, that can't be better.

9
00:00:25.609 --> 00:00:27.137
So I'm not doing it.

10
00:00:27.137 --> 00:00:29.249
But none of my items are re rendering.

11
00:00:29.249 --> 00:00:31.543
Like life feels good.

12
00:00:31.543 --> 00:00:36.355
I'm really, I'm okay with the way
everything is going here.

13
00:00:36.355 --> 00:00:42.046
However, I think that none of us
like the fact that we're passing.

14
00:00:42.046 --> 00:00:46.310
Whether it's dispatch, or set items,
or whatever I've settled on.

15
00:00:46.310 --> 00:00:50.675
This time we did dispatch and
then I went off script and

16
00:00:50.675 --> 00:00:53.497
we did set items just for funsies.

17
00:00:53.497 --> 00:00:54.606
They both work the same.

18
00:00:54.606 --> 00:00:57.999
I have all the performance gains right
now from the set items that I had from

19
00:00:57.999 --> 00:00:58.721
the dispatch.

20
00:00:58.721 --> 00:01:01.361
I just had to like import more things.

21
00:01:01.361 --> 00:01:03.260
We've wanted to import
those action creators,

22
00:01:03.260 --> 00:01:06.101
I didn't have to as long as I have
an action that has the right shape to it.

23
00:01:06.101 --> 00:01:07.953
It's totally fine.

24
00:01:07.953 --> 00:01:11.209
But we have those,
we have these performance gains great.

25
00:01:11.209 --> 00:01:15.113
But putting it through item list,
item list is not using set items.

26
00:01:15.113 --> 00:01:16.375
It's not using dispatch.

27
00:01:16.375 --> 00:01:19.113
It's not doing anything with those things,
right?

28
00:01:19.113 --> 00:01:26.900
And at the same time, it's has to get
it has to pass it through, right?

29
00:01:26.900 --> 00:01:30.380
And like, that's not really a performance
issue in any way, shape or form, right?

30
00:01:30.380 --> 00:01:32.433
Because it has the same value every time.

31
00:01:32.433 --> 00:01:34.448
It's the list of items of the problem,
right?

32
00:01:34.448 --> 00:01:35.606
Strings would be comparisons.

33
00:01:35.606 --> 00:01:41.848
It's not causing us any issue, except
that this is a stupid little toy app.

34
00:01:41.848 --> 00:01:44.086
38 levels deeper and there's tears, right?

35
00:01:44.086 --> 00:01:47.783
And so
this is where the context API lets us say,

36
00:01:47.783 --> 00:01:52.313
here's a special prop that is
secretly available to all of

37
00:01:52.313 --> 00:01:57.779
the children in this component tree
that any one of them can hook into.

38
00:01:57.779 --> 00:02:01.318
Anything you set in this context, right?

39
00:02:01.318 --> 00:02:05.134
It's basically a prop that you don't see,
when you use contacts is reaching into

40
00:02:05.134 --> 00:02:08.190
that invisible prop is getting
the values you hid there, right?

41
00:02:08.190 --> 00:02:11.289
When you used to hide your Halloween candy
in the house before your parents threw

42
00:02:11.289 --> 00:02:13.060
the extra away and
then you knew where it was.

43
00:02:13.060 --> 00:02:14.632
It's basically the same idea.

44
00:02:14.632 --> 00:02:17.938
And so it's an easy way for
us to do this and

45
00:02:17.938 --> 00:02:21.541
a lot of times we've
talked about it before.

46
00:02:21.541 --> 00:02:27.001
To go totally all in on performance
optimizations that don't matter for

47
00:02:27.001 --> 00:02:30.590
the sake of you and
your team's productivity.

48
00:02:30.590 --> 00:02:33.755
That's a way to be everyone's
favorite teammate, I guess, right?

49
00:02:33.755 --> 00:02:36.762
And a way to like not, y eah,
it's a set of trade offs.

50
00:02:36.762 --> 00:02:38.299
And so let's do it.

51
00:02:38.299 --> 00:02:41.671
And let's see what happens
to our again one more time.

52
00:02:41.671 --> 00:02:45.171
I'm setting expectations.

53
00:02:45.171 --> 00:02:47.062
Okay, cool.

54
00:02:47.062 --> 00:02:53.887
And now let's for like 1,000th time
in my life, let me do the dance.

55
00:02:57.698 --> 00:03:01.998
All right, so we do create context.

56
00:03:01.998 --> 00:03:06.539
The fact that I have not written
an editor's shortcut for

57
00:03:06.539 --> 00:03:09.291
this yet is somewhat incredible.

58
00:03:12.545 --> 00:03:13.707
Cool.

59
00:03:13.707 --> 00:03:17.335
So I've got that and
then we do cause items provider.

60
00:03:17.335 --> 00:03:23.768
I'm gonna say this now, because I haven't
done this 1000 times in about two minutes

61
00:03:23.768 --> 00:03:28.942
when I forget to wrap the application
component in the items provider.

62
00:03:28.942 --> 00:03:31.378
And I wonder why my app doesn't work.

63
00:03:31.378 --> 00:03:32.305
Can someone remind me?

64
00:03:32.305 --> 00:03:35.749
Thank you.

65
00:03:35.749 --> 00:03:40.702
It's almost like this isn't
my first [INAUDIBLE] So

66
00:03:40.702 --> 00:03:44.278
we do items, providers, context.

67
00:03:44.278 --> 00:03:45.349
Not provider.

68
00:03:45.349 --> 00:03:50.267
Do y'all ever have to use like render
props before hooks were a thing for this?

69
00:03:50.267 --> 00:03:51.128
It used to be worse.

70
00:03:51.128 --> 00:03:54.725
So as much as I complain, it's better now.

71
00:03:54.725 --> 00:03:59.273
In my day,
[LAUGH] We didn't have a context API.

72
00:03:59.273 --> 00:04:00.430
[LAUGH] In my day,

73
00:04:00.430 --> 00:04:04.907
I had to figure out what map states
the props was in Redux I still.

74
00:04:04.907 --> 00:04:08.042
I only now understand it, cool.

75
00:04:08.042 --> 00:04:10.749
I'll give it real value in a second.

76
00:04:10.749 --> 00:04:16.935
Awesome, I have now done this enough times
that I know that I'll forget you that.

77
00:04:16.935 --> 00:04:22.315
Sometimes like you don't necessarily
become like a better programmer.

78
00:04:22.315 --> 00:04:25.702
You just know all the times you've
made the same stupid mistake so

79
00:04:25.702 --> 00:04:27.869
many times that now you have scar tissue.

80
00:04:27.869 --> 00:04:30.269
Or previous code that you copy and
paste from that make you,

81
00:04:30.269 --> 00:04:33.258
everyone seem like you're really fast and
you don't tell ' a secret.

82
00:04:33.258 --> 00:04:35.650
All right, cool.

83
00:04:35.650 --> 00:04:41.637
So y'all made me take away my reducer and
put in set state.

84
00:04:41.637 --> 00:04:45.343
But set state's already in there,
but I only did it on one thing.

85
00:04:45.343 --> 00:04:47.918
I'm, bringing back my dispatch, right?

86
00:04:47.918 --> 00:04:48.875
I'm making the rules here.

87
00:04:48.875 --> 00:04:49.579
I can do whatever I want.

88
00:04:54.923 --> 00:04:57.623
And did someone ask me for
where did the reducer come from?

89
00:04:57.623 --> 00:05:01.573
The reducer was part
of the pre-baked code.

90
00:05:01.573 --> 00:05:05.291
Because nobody,
wants to watch me write this.

91
00:05:05.291 --> 00:05:06.431
It's not glamorous.

92
00:05:06.431 --> 00:05:07.329
It's not fun.

93
00:05:07.329 --> 00:05:09.413
It's tedious.

94
00:05:09.413 --> 00:05:15.007
I was even lazy enough to take
createAction from REDOX toolkit,

95
00:05:15.007 --> 00:05:17.194
cuz it's not the point.

96
00:05:17.194 --> 00:05:21.592
Also writing and testing all of those
functions for the items, was not fun.

97
00:05:21.592 --> 00:05:24.686
So, you're welcome.

98
00:05:27.368 --> 00:05:30.730
If anyone really wants to see
a course I just sit here and do like

99
00:05:30.730 --> 00:05:35.144
the really tedious parts over and over and
over again, across five sample apps.

100
00:05:35.144 --> 00:05:36.884
I'm not going to.

101
00:05:39.038 --> 00:05:42.428
Awesome, and so
we've got our state and our dispatch.

102
00:05:42.428 --> 00:05:47.555
And then we have the reducer
here that will pull in.

103
00:05:47.555 --> 00:05:48.573
And the initial state, initial items.

104
00:05:50.476 --> 00:05:52.286
All right, cool.

105
00:05:52.286 --> 00:05:54.450
Let's call this items because
it's the only thing in there.

106
00:05:58.013 --> 00:06:01.618
And we'll say, we'll give you some items.

107
00:06:01.618 --> 00:06:05.039
And we'll give you some dispatch.

108
00:06:05.039 --> 00:06:08.224
Great, what are you all
supposed to remind me of?

109
00:06:08.224 --> 00:06:09.071
&gt;&gt; Rapid.
&gt;&gt; Rapid.

110
00:06:12.348 --> 00:06:13.600
And I exported this time.

111
00:06:19.005 --> 00:06:21.856
Some and now is available everywhere.

112
00:06:21.856 --> 00:06:28.683
So we have just a few little things here,
which is my favorite thing in the world.

113
00:06:28.683 --> 00:06:31.739
I already deleted so much code from the
fact that I felt really ungratified and

114
00:06:31.739 --> 00:06:34.525
then sometimes when I don't do
the thing where I refactor to reducer.

115
00:06:34.525 --> 00:06:35.581
I delete a whole bunch of code.

116
00:06:35.581 --> 00:06:37.097
It feels great.

117
00:06:37.097 --> 00:06:38.108
But here we go.

118
00:06:42.105 --> 00:06:45.809
Items = useContext.

119
00:06:45.809 --> 00:06:47.142
Did I?

120
00:06:47.142 --> 00:06:51.889
There's again, I already know what
the mistake is gonna be, right?

121
00:06:51.889 --> 00:06:53.242
That's what I didn't export.

122
00:06:56.382 --> 00:07:01.404
Cool, I gotta say this world where like
autocomplete exists as even if they

123
00:07:01.404 --> 00:07:06.597
were joking on a break that 50% of
the time works every time, that 50%.

124
00:07:09.452 --> 00:07:11.386
Go get to delete some code here.

125
00:07:11.386 --> 00:07:13.000
Awesome.

126
00:07:18.186 --> 00:07:24.261
Yeah, I didn't even wire
up anything codes in there.

127
00:07:24.261 --> 00:07:25.469
Goodbye.

128
00:07:25.469 --> 00:07:29.202
You don't need to pass the C items list
anymore because we're gonna skip the whole

129
00:07:29.202 --> 00:07:31.865
reason we're using context
API's to get rid of all that.

130
00:07:31.865 --> 00:07:36.718
Just get rid of some of these other parts
that watching me do the same thing 42

131
00:07:36.718 --> 00:07:38.447
places and super worth it.

132
00:07:38.447 --> 00:07:43.679
Could we use the context
one level lower here?

133
00:07:43.679 --> 00:07:46.561
Yeah, we probably need it and
all these components,

134
00:07:46.561 --> 00:07:48.622
it's not really saving us that much.

135
00:07:48.622 --> 00:07:52.333
I will push out the branch you're
welcome to experiment and see,

136
00:07:52.333 --> 00:07:55.109
I'm just trying to stay
somewhat focused here.

137
00:07:55.109 --> 00:07:56.703
Go into the item list.

138
00:07:56.703 --> 00:08:00.648
We don't need that item anymore.

139
00:08:00.648 --> 00:08:03.113
Which means we do not need
to pass it through anymore.

140
00:08:06.598 --> 00:08:07.275
Cool.

141
00:08:10.249 --> 00:08:12.461
And then going down into
the individual item.

142
00:08:15.064 --> 00:08:16.559
We don't need this anymore.

143
00:08:19.336 --> 00:08:22.346
And we'll get the item being passed in and
then we can just say

144
00:08:24.962 --> 00:08:29.095
That's why we only need this fashion here.

145
00:08:39.727 --> 00:08:42.270
We go back to,

146
00:08:49.509 --> 00:08:52.729
Was gonna dispatch,
Parrish it kept the other one.

147
00:08:58.669 --> 00:09:00.300
The rest is,
I guess kept the way they were.

148
00:09:00.300 --> 00:09:04.353
So this now becomes dispatch again.

149
00:09:05.948 --> 00:09:07.445
And dispatch.

150
00:09:07.445 --> 00:09:10.061
Okay, I was no type script.

151
00:09:10.061 --> 00:09:17.567
I'm pretty sure that I did make mistakes
let's make sure it doesn't crash.

152
00:09:17.567 --> 00:09:19.437
If I don't click on the thing, right No.

153
00:09:19.437 --> 00:09:22.759
So we got a little issue, remove works.

154
00:09:22.759 --> 00:09:25.839
I'll look at that in a second or
talk about it.

155
00:09:25.839 --> 00:09:30.242
That was the one we had to set states,
I'm not totally surprised.

156
00:09:30.242 --> 00:09:32.382
Yeah, that doesn't need--doesn't
take a function anymore.

157
00:09:38.631 --> 00:09:42.769
This just

158
00:09:42.769 --> 00:09:48.459
takes an ID.

159
00:09:52.684 --> 00:09:55.572
I mean, the point you already saw too.

160
00:09:55.572 --> 00:09:57.355
I think that'll work now.

161
00:09:57.355 --> 00:10:01.277
No, but remove as you can see,
well, even at the very least.

162
00:10:01.277 --> 00:10:04.175
Maybe we're not totally giving you
the right things to do this job, but

163
00:10:04.175 --> 00:10:05.343
you can see what the remove.

164
00:10:05.343 --> 00:10:09.705
All of my hard earned performance
gains are gone, right?

165
00:10:09.705 --> 00:10:14.459
You can see everything is re
rendering all the time, why?

166
00:10:21.007 --> 00:10:21.542
All the thing.

167
00:10:21.542 --> 00:10:24.676
In fact, they're all in color again.

168
00:10:24.676 --> 00:10:28.924
Why did rerender context changed, right?

169
00:10:28.924 --> 00:10:35.177
So there are two and
a half reasons why a component re renders.

170
00:10:35.177 --> 00:10:38.983
One of them is two and
a half three one and a half I don't know.

171
00:10:38.983 --> 00:10:44.587
When the state changes and
that goes down the entire list, right?

172
00:10:44.587 --> 00:10:46.616
But we have some use memos
in there to stop that,right?

173
00:10:46.616 --> 00:10:47.974
Those use memos are still there.

174
00:10:47.974 --> 00:10:49.379
We didn't take out anything we did.

175
00:10:49.379 --> 00:10:50.459
We didn't start over.

176
00:10:50.459 --> 00:10:53.009
We kept all those in there.

177
00:10:53.009 --> 00:10:57.658
So then we get to the other one state
changes apparently renders props change.

178
00:10:57.658 --> 00:10:58.719
What did I say earlier?

179
00:10:58.719 --> 00:11:01.392
What's context?

180
00:11:01.392 --> 00:11:04.411
It's a hidden prop.

181
00:11:04.411 --> 00:11:07.452
That's different, but no, but
you put a used memo on it.

182
00:11:07.452 --> 00:11:09.047
You put a used memo on it, so like,

183
00:11:09.047 --> 00:11:11.537
even if the props like it
shouldn't matter, right?

