WEBVTT

1
00:00:00.040 --> 00:00:03.945
&gt;&gt; Brian Holt: So I'm gonna show you one
more thing here with error boundaries,

2
00:00:03.945 --> 00:00:06.578
just so I can show you componentDidUpdate.

3
00:00:06.578 --> 00:00:10.696
Now, just so you know, you could
totally instead of do this with just

4
00:00:10.696 --> 00:00:13.973
componentDidCatch and
not use componentDidUpdate.

5
00:00:13.973 --> 00:00:16.255
But I just wanna show you how
to use componentDidUpdate.

6
00:00:17.450 --> 00:00:20.846
So under componentDidCatch here,
put componentDidUpdate,

7
00:00:20.846 --> 00:00:25.170
so you can see here there's actually
quite a few lifecycle methods.

8
00:00:25.170 --> 00:00:27.843
If you're interested in learning
more about lifecycle methods,

9
00:00:27.843 --> 00:00:30.528
you can actually check out older
versions of this course, right?

10
00:00:30.528 --> 00:00:35.418
So I go over them in depth but normally
componentDidMount is one that you can use

11
00:00:35.418 --> 00:00:39.363
quite a bit to set things up,
integrate with other libraries.

12
00:00:39.363 --> 00:00:42.030
It's what you run when you first start.

13
00:00:42.030 --> 00:00:45.050
componentDidUpdate, you still use but
not necessarily as much.

14
00:00:45.050 --> 00:00:49.190
This will be reacting to kind of updates,
which I'll show you here in just a second.

15
00:00:49.190 --> 00:00:52.137
componentWillUnmount, if
you do a setInterval or

16
00:00:52.137 --> 00:00:54.056
if you have to clean up anything,

17
00:00:54.056 --> 00:00:58.386
this will allow you to clean up things
before the component leaves the DOM.

18
00:00:58.386 --> 00:01:00.391
And then there's a couple
of these as well,

19
00:01:02.383 --> 00:01:03.672
&gt;&gt; Brian Holt: Like component will

20
00:01:03.672 --> 00:01:07.928
receive props, it's like I'm
about to receive brand new props.

21
00:01:07.928 --> 00:01:13.016
And then there's some other ones
in here as well, the unsafe ones,

22
00:01:13.016 --> 00:01:17.230
which react.stricts will
not allow you to use, okay?

23
00:01:17.230 --> 00:01:20.389
And remember we put react.stricts
around our entire application,

24
00:01:20.389 --> 00:01:23.988
it'll warn you about that, so
&gt;&gt; Brian Holt: Okay, so

25
00:01:23.988 --> 00:01:27.589
what we're gonna do now is we're
gonna do componentWillUpdate.

26
00:01:32.131 --> 00:01:36.081
&gt;&gt; Brian Holt: And what we're gonna do
here is this is gonna get run every single

27
00:01:36.081 --> 00:01:38.580
time that it gets new state or new props.

28
00:01:40.000 --> 00:01:44.960
So in this case,
I'm gonna say if this.state.hasError, so

29
00:01:44.960 --> 00:01:49.078
if something updates this and
now this has an error,

30
00:01:49.078 --> 00:01:53.020
what I want you to do is I
want you to do setTimeOut.

31
00:01:53.020 --> 00:01:57.128
And give it an arrow function and

32
00:01:57.128 --> 00:02:06.653
say this.setState redirect,
&gt;&gt; Brian Holt: true,

33
00:02:06.653 --> 00:02:11.695
and then wait for 5000 milliseconds.

34
00:02:20.993 --> 00:02:26.062
&gt;&gt; Brian Holt: So,
&gt;&gt; Brian Holt: The setTimeout here,

35
00:02:26.062 --> 00:02:31.033
it's going to run this function and
after 5,000 seconds or 5,000

36
00:02:31.033 --> 00:02:36.173
milliseconds rather it's gonna setStates
so that redirect is gonna be true.

37
00:02:36.173 --> 00:02:39.800
So let's go ahead up here
in the state up here,

38
00:02:39.800 --> 00:02:44.571
put redirect,
&gt;&gt; Brian Holt: False on line 7 there.

39
00:02:47.265 --> 00:02:48.754
&gt;&gt; Brian Holt: And then what we wanna do

40
00:02:48.754 --> 00:02:53.592
here,
&gt;&gt; Brian Holt: Is the first thing we wanna

41
00:02:53.592 --> 00:02:55.325
ask, and
the order here is quite important.

42
00:02:55.325 --> 00:03:00.292
You're gonna have to say,
if this.state.redirect,

43
00:03:00.292 --> 00:03:04.852
then what we're gonna do
is we're going to return,

44
00:03:08.025 --> 00:03:11.733
&gt;&gt; Brian Holt: A redirect component which

45
00:03:11.733 --> 00:03:15.441
comes from reachRouter and

46
00:03:15.441 --> 00:03:19.637
we're gonna say redirect to/

47
00:03:26.130 --> 00:03:27.272
&gt;&gt; Brian Holt: As you might imagine,

48
00:03:27.272 --> 00:03:28.955
whenever you render a redirect,

49
00:03:28.955 --> 00:03:32.360
it just redirects the router
to be somewhere else, right?

50
00:03:32.360 --> 00:03:33.790
You can also do this programmatically.

51
00:03:33.790 --> 00:03:39.208
I could have totally said, and you don't
have to copy this, I think it's navigate.

52
00:03:42.256 --> 00:03:45.720
&gt;&gt; Brian Holt: Like that, and
this would have worked as well.

53
00:03:45.720 --> 00:03:48.127
And navigate comes from
reachRouter as well, but

54
00:03:48.127 --> 00:03:50.256
I wanted to show you
both ways of doing that.

55
00:03:54.509 --> 00:03:56.414
&gt;&gt; Brian Holt: You don't
want componentWillUpdate,

56
00:03:56.414 --> 00:03:57.929
you want componentDidUpdate.

57
00:04:00.224 --> 00:04:03.434
&gt;&gt; Brian Holt: Both of these will work but
let's do componentDidUpdate.

58
00:04:08.357 --> 00:04:10.860
&gt;&gt; Brian Holt: Okay, and then let's
go make an artificial error again.

59
00:04:10.860 --> 00:04:12.568
So just here instead
of componenttDidMount,

60
00:04:12.568 --> 00:04:13.626
we'll say throw new Error.

61
00:04:19.348 --> 00:04:21.324
&gt;&gt; Brian Holt: Okay, and
now after 5 seconds,

62
00:04:21.324 --> 00:04:24.721
it should redirect back to the home page,
which it does.

