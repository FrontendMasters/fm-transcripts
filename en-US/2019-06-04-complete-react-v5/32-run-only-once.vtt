WEBVTT

1
00:00:00.000 --> 00:00:02.550
&gt;&gt; Brian: Now, I wanna show you
a couple more things about this.

2
00:00:02.550 --> 00:00:06.902
What happens if I want this to run when
it mounts, so when it first renders and

3
00:00:06.902 --> 00:00:07.990
then Never again?

4
00:00:09.630 --> 00:00:12.223
&gt;&gt; Brian: Well,
you just given an empty array.

5
00:00:12.223 --> 00:00:15.920
This is an array of its dependencies and
it's saying, I depend on nothing, right?

6
00:00:18.091 --> 00:00:21.700
&gt;&gt; Brian: So then it's gonna run once,
and then this will never update again.

7
00:00:24.444 --> 00:00:26.311
&gt;&gt; Brian: Right?

8
00:00:26.311 --> 00:00:29.922
So if you want it run once on what it
first creates that's how you do that.

9
00:00:29.922 --> 00:00:33.772
This will be useful for things like if you
need to integrate with a J query plug in.

10
00:00:33.772 --> 00:00:37.691
Like when I'm sorry that's
happening to you and, or like D3,

11
00:00:37.691 --> 00:00:40.242
that's maybe a better example, right?

12
00:00:40.242 --> 00:00:43.721
If you have to integrate with D3 and
you need to set up all that stuff, right?

13
00:00:43.721 --> 00:00:44.780
This is where you would do it.

14
00:00:46.823 --> 00:00:49.346
&gt;&gt; Brian: And then you could give
it an empty array, it's like, okay,

15
00:00:49.346 --> 00:00:52.075
once this is integrated then
don't update this anymore, right?

16
00:00:52.075 --> 00:00:56.919
And then if you want it to run every
single time something updates,

17
00:00:56.919 --> 00:00:58.140
get rid of that.

18
00:00:58.140 --> 00:01:00.544
So now, if I come over here,

19
00:01:05.600 --> 00:01:09.367
&gt;&gt; Brian: It should,

20
00:01:14.490 --> 00:01:15.467
&gt;&gt; Brian: What is going on here?

21
00:01:15.467 --> 00:01:16.859
There we go.

22
00:01:24.742 --> 00:01:27.455
&gt;&gt; Brian: Yeah, I mean you can see
here I've created an infinite loop,

23
00:01:27.455 --> 00:01:31.785
you can see that I have,
&gt;&gt; Brian: In fact I'm gonna stop that so

24
00:01:31.785 --> 00:01:32.713
I don't crush my API.

25
00:01:35.338 --> 00:01:37.404
&gt;&gt; Brian: So don't do that please.

26
00:01:37.404 --> 00:01:39.077
Cuz I'm paying that bill.

27
00:01:39.077 --> 00:01:44.484
[LAUGH] So
what what was happening there is like it's

28
00:01:44.484 --> 00:01:49.651
running every time something updates,
right?

29
00:01:49.651 --> 00:01:52.887
Which means that every time that I call
separates, it's causing an update, right?

30
00:01:52.887 --> 00:01:55.321
Which means that it caught it's
scheduled that effect again.

31
00:01:55.321 --> 00:01:57.108
Which is then going to
update their breeds again,

32
00:01:57.108 --> 00:01:58.904
which is gonna schedule another effect,
right?

33
00:01:58.904 --> 00:02:01.069
Sick of this infinite loop.

34
00:02:01.069 --> 00:02:07.348
So that's why actually they enforce this,
&gt;&gt; Brian: Dependencies thing,

35
00:02:07.348 --> 00:02:09.751
so you don't get yourself
into these situations, right?

36
00:02:09.751 --> 00:02:15.031
Because if it depends on animal then you
should depend on animal being there and

37
00:02:15.031 --> 00:02:20.151
via vice-versa, you don't want to
cause these infinite loops of update,

38
00:02:20.151 --> 00:02:23.046
and then that schedule in another effect.

