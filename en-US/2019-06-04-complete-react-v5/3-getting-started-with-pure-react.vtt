WEBVTT

1
00:00:04.105 --> 00:00:06.067
&gt;&gt; Brian Holt: Okay, so
this is an arrow function, right?

2
00:00:06.067 --> 00:00:08.980
And what we're gonna
put inside of here is,

3
00:00:08.980 --> 00:00:10.881
we're going to put return,

4
00:00:13.418 --> 00:00:19.306
&gt;&gt; Brian Holt: React.createElement,
&gt;&gt; Brian Holt: Okay?

5
00:00:19.306 --> 00:00:23.256
And then you may not necessarily
see this auto-complete,

6
00:00:23.256 --> 00:00:28.233
it'll take a second for VS Code to just
catch up with what you are doing, but

7
00:00:28.233 --> 00:00:30.449
you can just ignore that for now.

8
00:00:30.449 --> 00:00:32.895
Div div, okay.

9
00:00:32.895 --> 00:00:36.240
Empty object and
then here we are gonna put again,

10
00:00:36.240 --> 00:00:40.950
react.createElement, then we're
gonna put inside of that an h1,

11
00:00:43.861 --> 00:00:47.156
&gt;&gt; Brian Holt: With an empty object and

12
00:00:47.156 --> 00:00:52.737
Adopt Me,
&gt;&gt; Brian Holt: Okay?

13
00:00:54.892 --> 00:00:59.296
&gt;&gt; Brian Holt: So what we've done here
is we've created a component called App.

14
00:00:59.296 --> 00:01:03.975
And a component in this particular case
is just a function that whenever it

15
00:01:03.975 --> 00:01:06.847
returns a result of react.createElement.

16
00:01:06.847 --> 00:01:12.446
So let's chat for
a second about what createElement is,

17
00:01:12.446 --> 00:01:15.838
or what app is for a second rather.

18
00:01:15.838 --> 00:01:18.895
I like to describe this as a rubber stamp,
right?

19
00:01:18.895 --> 00:01:24.159
So here we have created our own
rubber stamp called app, right?

20
00:01:24.159 --> 00:01:27.210
Now, you can go to the store and
you can buy a rubber stamp, but

21
00:01:27.210 --> 00:01:29.993
a stamp by itself is not in and
of itself useful, right?

22
00:01:29.993 --> 00:01:33.944
It's only useful when you
actually want to stamp it, right?

23
00:01:33.944 --> 00:01:37.959
So here we've created one,
we haven't actually used the stamp,

24
00:01:37.959 --> 00:01:39.905
we've just created the stamp.

25
00:01:39.905 --> 00:01:42.526
So that's what this function does,

26
00:01:42.526 --> 00:01:47.697
is it allows you to basically stamp
this as many times as you want, okay?

27
00:01:47.697 --> 00:01:49.044
React.createElement in here,

28
00:01:49.044 --> 00:01:51.937
what this is actually doing is it's
stamping something here, right?

29
00:01:51.937 --> 00:01:55.371
So anytime that app gets called,
it's going to stamp a div, and

30
00:01:55.371 --> 00:01:57.674
inside of that it's going to stamp an h1.

31
00:02:00.417 --> 00:02:03.622
&gt;&gt; Brian Holt: So
that's really all components are in React,

32
00:02:03.622 --> 00:02:08.040
is it's just something that
returns markup basically, right?

33
00:02:08.040 --> 00:02:11.975
So again, we've created app, but this in
it of itself doesn't do anything, right?

34
00:02:11.975 --> 00:02:15.100
This is the creation of the stamp,
so we actually need to go create it.

35
00:02:15.100 --> 00:02:23.557
So we're going to go render this to
the DOM by saying ReactDOM.render.

36
00:02:23.557 --> 00:02:30.712
React.createElement App and then we're
gonna tell it where to render it.

37
00:02:30.712 --> 00:02:36.829
And we're gonna say
document.getElementById root.

38
00:02:47.708 --> 00:02:51.889
&gt;&gt; Brian Holt: So this is actually
going to stamp our App because of

39
00:02:51.889 --> 00:02:54.427
this React.createElement.

40
00:02:54.427 --> 00:02:58.366
So the React.createElement can take
an either stamp that you've created, or

41
00:02:58.366 --> 00:03:01.892
it can take in a string like this
where it's actually going to literally

42
00:03:01.892 --> 00:03:02.974
make an h1, right?

43
00:03:02.974 --> 00:03:06.682
Whereas this is going to be
something that we've created,

44
00:03:06.682 --> 00:03:11.291
this is going to be literally an h1
that we're going to output to the DOM.

45
00:03:12.328 --> 00:03:13.564
&gt;&gt; Brian Holt: And as you may guess,

46
00:03:13.564 --> 00:03:17.013
it's going into root which is
going to be this root up here.

47
00:03:21.854 --> 00:03:25.627
&gt;&gt; Brian Holt: So this is about
the simplest React App you can build.

48
00:03:25.627 --> 00:03:30.846
So if I save this,
&gt;&gt; Brian Holt: And go back

49
00:03:30.846 --> 00:03:37.053
over to my browser here, you can see here
that you get a nice little Adopt Me logo.

50
00:03:40.094 --> 00:03:43.377
&gt;&gt; Brian Holt: So just say now
replaced that with CSS, right?

51
00:03:43.377 --> 00:03:49.011
So that's where the h1 went, this is
actually the h1 that we put up there.

52
00:03:53.812 --> 00:03:57.726
&gt;&gt; Brian Holt: So now we're done with
the workshop and you can go home,

53
00:03:57.726 --> 00:03:59.154
I'm just kidding.

54
00:03:59.154 --> 00:04:03.344
I'm gonna use that joke five more times,
so don't even worry about it.

55
00:04:05.037 --> 00:04:08.045
&gt;&gt; Brian Holt: So,
this is the power of React is one,

56
00:04:08.045 --> 00:04:11.529
this is not very
complicated in my opinion.

57
00:04:11.529 --> 00:04:15.063
You can be the judge to that, but
at its simplest, this is what React is.

58
00:04:15.063 --> 00:04:17.713
It's taking a component and
just using it, right?

59
00:04:17.713 --> 00:04:20.655
And the power here is that I can make
components that I put inside of components

60
00:04:20.655 --> 00:04:23.432
that I put inside of components that
I put inside of components, right?

61
00:04:23.432 --> 00:04:28.004
So you kinda have this
composability model with React.

