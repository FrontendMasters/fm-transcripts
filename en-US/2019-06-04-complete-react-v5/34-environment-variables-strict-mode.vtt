WEBVTT

1
00:00:00.060 --> 00:00:01.730
&gt;&gt; Brian: There's a couple things
that I wanna call out here.

2
00:00:01.730 --> 00:00:05.184
One of the big things is when
you're compiling your code,

3
00:00:05.184 --> 00:00:08.436
it's really important that
you set the NODE_ENV..

4
00:00:08.436 --> 00:00:09.437
Now, the good news for

5
00:00:09.437 --> 00:00:12.304
you is if you're using Parcel,
Parcel just takes care of this.

6
00:00:12.304 --> 00:00:16.859
So when you're in development mode,
it'll keep it in NODE_ENV=development.

7
00:00:16.859 --> 00:00:23.378
And then when you do a Parcel build
index.html, it'll set that to production.

8
00:00:23.378 --> 00:00:26.017
With Web pack and browser file,
you need to be a little more explicit.

9
00:00:28.476 --> 00:00:31.185
&gt;&gt; Brian: So the reason why you do this
is when you're in development mode,

10
00:00:31.185 --> 00:00:32.973
it'll give you more descriptive errors.

11
00:00:32.973 --> 00:00:36.760
It'll kind of help you along the way.

12
00:00:38.640 --> 00:00:40.405
It'll prevent you from doing bad things.

13
00:00:40.405 --> 00:00:42.295
And then,
when you put it in production mode,

14
00:00:42.295 --> 00:00:44.195
it cuts out as much code as you want or
as it can.

15
00:00:44.195 --> 00:00:49.220
So it drops all of the debugging code,
which makes it smaller and faster.

16
00:00:49.220 --> 00:00:50.970
But you don't get
the useful error messages.

17
00:00:50.970 --> 00:00:51.990
You don't get source maps.

18
00:00:51.990 --> 00:00:53.940
You don't get a bunch of the stuff
that helps you write code.

19
00:00:55.080 --> 00:00:58.528
So it's just key to make sure that both of
those things are set in the appropriate

20
00:00:58.528 --> 00:00:59.258
environments.

21
00:01:02.877 --> 00:01:04.449
&gt;&gt; Brian: Slack, famously messed this up,

22
00:01:04.449 --> 00:01:07.890
that they were shipping the development
environment for a long time.

23
00:01:07.890 --> 00:01:12.472
So it's worth keeping an eye on
cuz it's four times larger and

24
00:01:12.472 --> 00:01:16.887
40 times slower if you use
the development environment.

25
00:01:19.792 --> 00:01:21.160
&gt;&gt; Brian: Okay, strict mode,

26
00:01:21.160 --> 00:01:25.900
there's a thing that you can wrap
entire application in React.Strict.

27
00:01:25.900 --> 00:01:31.026
And what this will do for you is it'll
help you future proof your application.

28
00:01:31.026 --> 00:01:34.889
So React has some things that
they're trying to deprecate.

29
00:01:34.889 --> 00:01:39.243
And if you do React.Strict,
it won't allow you to use them anymore.

30
00:01:39.243 --> 00:01:41.640
Whereas if you don't have
React in strict mode,

31
00:01:41.640 --> 00:01:45.334
it'll let you use these things that
they're going to shortly deprecate.

32
00:01:45.334 --> 00:01:49.163
And the cool thing is it's a component, so
you can make part of your application in

33
00:01:49.163 --> 00:01:51.286
strict mode and
part of it not in strict mode.

34
00:01:51.286 --> 00:01:53.127
So if you have a new
part of your application,

35
00:01:53.127 --> 00:01:54.439
you can put that in strict mode.

36
00:01:54.439 --> 00:01:58.264
And if you have an old part that
does use the old part of React,

37
00:01:58.264 --> 00:02:00.978
you can still have that
not in strict mode.

38
00:02:00.978 --> 00:02:02.699
So just to show you how to do that.

39
00:02:02.699 --> 00:02:05.011
In fact, we can just do it really
quick and leave it in wrap.

40
00:02:05.011 --> 00:02:10.247
Go to wrap.JS, and just here you

41
00:02:10.247 --> 00:02:15.090
can say React.StrictMode.

42
00:02:15.090 --> 00:02:16.720
I guess I got that wrong in my notes.

43
00:02:16.720 --> 00:02:19.085
So yeah, React.StrictMode like that.

44
00:02:24.271 --> 00:02:27.836
&gt;&gt; Brian: React.StrictMode doesn't render
anything, it doesn't add any page weight

45
00:02:27.836 --> 00:02:31.910
or anything like that, so this is
totally fine to ship this to production.

46
00:02:31.910 --> 00:02:34.640
In production, this will just do nothing,
the strict mode part of it.

47
00:02:36.050 --> 00:02:39.240
But now, if we try and do anything
like use any of the unstable APIs or

48
00:02:39.240 --> 00:02:40.045
something like that,

49
00:02:40.045 --> 00:02:43.389
it'll give you additional warnings
about things that you don't want to do.

50
00:02:44.480 --> 00:02:47.550
So we're teaching you all
the latest in JavaScript.

51
00:02:47.550 --> 00:02:49.630
So we won't trigger any of these warnings.

52
00:02:49.630 --> 00:02:52.540
But if you're in legacy applications,
this can be helpful.

