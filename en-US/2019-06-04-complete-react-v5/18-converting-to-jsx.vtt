WEBVTT

1
00:00:00.200 --> 00:00:04.350
&gt;&gt; Brian Holt: So we're going back to
React, away from tooling for a while.

2
00:00:04.350 --> 00:00:06.891
So I'm just gonna leave my server
running in the background here.

3
00:00:09.075 --> 00:00:10.310
&gt;&gt; Brian Holt: Yeah, and
then we'll keep going.

4
00:00:11.820 --> 00:00:18.370
So far, I've been showing you
how to write React without

5
00:00:18.370 --> 00:00:22.258
any really transpilation or anything like
that just raw React underneath the hood.

6
00:00:22.258 --> 00:00:25.180
But I wanna show you how to
use this feature called JSX,

7
00:00:25.180 --> 00:00:28.610
because we're using parcel
now we can use JSX,

8
00:00:28.610 --> 00:00:31.600
whereas we could not before because
parcel was not running on our code.

9
00:00:31.600 --> 00:00:34.980
And parcel do transformations
using a project called Babel,

10
00:00:34.980 --> 00:00:36.460
which is a really cool project.

11
00:00:36.460 --> 00:00:39.600
And that's just built into parcel, okay?

12
00:00:40.690 --> 00:00:46.056
So here we have,
let's actually go do pet.js first.

13
00:00:47.711 --> 00:00:51.362
&gt;&gt; Brian Holt: Okay, so you're looking at
this project right now, and you can see

14
00:00:51.362 --> 00:00:55.540
that this is gonna create a div with
an h1 and two h2's inside of it, right?

15
00:00:56.840 --> 00:01:00.970
So we're writing JavaScript
to mimic markup, right?

16
00:01:02.200 --> 00:01:05.395
So inside of your brain when
you're thinking about okay, well,

17
00:01:05.395 --> 00:01:08.372
I need to have a div inside of
that I need to have an h1 and h2.

18
00:01:08.372 --> 00:01:10.679
You have to think about
the HTML that you want and

19
00:01:10.679 --> 00:01:15.610
then have to translate that in your brain
to JavaScript that React can do, right?

20
00:01:15.610 --> 00:01:18.970
Wouldn't it be nice if we could just write
the HTML that we wanted in the first place

21
00:01:18.970 --> 00:01:21.800
rather than having to have that
translation layer in our brain?

22
00:01:21.800 --> 00:01:25.680
Well, that's what JSX is and
like that is all JSX is.

23
00:01:25.680 --> 00:01:26.868
It's not anything else,

24
00:01:26.868 --> 00:01:29.952
there's not additional features
beyond just what I just told you.

25
00:01:31.289 --> 00:01:34.209
&gt;&gt; Brian Holt: So I'll comment this
out for just a second just like this.

26
00:01:35.780 --> 00:01:42.600
And I want you to say return, and then I
want you to write div like this, okay?

27
00:01:43.730 --> 00:01:48.130
And then inside of that div I want you
to put an h1 and then inside of that h1,

28
00:01:48.130 --> 00:01:52.390
I want you to put curly braces
like that and put name.

29
00:01:55.310 --> 00:02:01.720
Then an h2, and instead of curly braces
inside of that, we could do animal.

30
00:02:01.720 --> 00:02:06.096
And inside of another h2,

31
00:02:06.096 --> 00:02:11.430
probably guessed breed, yeah?

32
00:02:11.430 --> 00:02:17.130
&gt;&gt; Speaker 2: Are there any Emmit
shortcuts for writing in JSX?

33
00:02:17.130 --> 00:02:19.010
&gt;&gt; Brian Holt: There are, yeah, for sure.

34
00:02:19.010 --> 00:02:25.858
Do I have it, yeah, so
&gt;&gt; Brian Holt: I'm pretty sure

35
00:02:25.858 --> 00:02:30.612
the way you have to do that right now is,
&gt;&gt; Brian Holt: Let's just try it.

36
00:02:37.864 --> 00:02:40.379
&gt;&gt; Brian Holt: Yeah, so
if I change this to be .jsx,

37
00:02:40.379 --> 00:02:43.250
it would just work out of the box.

38
00:02:43.250 --> 00:02:47.240
There's a way to enable it for
JS files, and I forgot how to do it.

39
00:02:47.240 --> 00:02:53.055
But so let's just talk for a second about
why I'm not changing everything to be

40
00:02:53.055 --> 00:02:57.350
.jsx, the real reason I'm not doing that
in teaching that too is because the React

41
00:02:57.350 --> 00:03:03.590
core team said that they don't think it's
necessary, so I don't do it and that's it.

42
00:03:03.590 --> 00:03:08.120
But if you do changes it be .jsx you'll
get some of that stuff for free.

43
00:03:08.120 --> 00:03:12.473
&gt;&gt; Speaker 3: The other way
is just to change the type in

44
00:03:12.473 --> 00:03:16.700
VS Code to JavaScript React
from JavaScript.

45
00:03:16.700 --> 00:03:19.866
So on the bottom there
it's says JavaScript,

46
00:03:19.866 --> 00:03:22.474
if you change it to JavaScript React.

47
00:03:26.097 --> 00:03:26.681
&gt;&gt; Brian Holt: That'll work as well.

48
00:03:26.681 --> 00:03:28.010
&gt;&gt; Speaker 3: That'll work as well.

49
00:03:28.010 --> 00:03:30.400
&gt;&gt; Brian Holt: So
now I can do h2 like that.

50
00:03:32.825 --> 00:03:34.728
&gt;&gt; Brian Holt: There's a way to
configure those .js files always

51
00:03:34.728 --> 00:03:36.470
have that available as well.

52
00:03:36.470 --> 00:03:41.180
But I'm sure if you Google it,
it'll be the top stack overflow question.

53
00:03:43.430 --> 00:03:46.760
So we've now translated this

54
00:03:48.080 --> 00:03:53.080
to this and
these are equivalent right now, right?

55
00:03:53.080 --> 00:03:58.290
I will personally tell you that I think
this is far more readable, right?

56
00:03:58.290 --> 00:04:01.900
There's less code, it's less dense,
there's not objects and quotes and

57
00:04:01.900 --> 00:04:02.540
things like that.

58
00:04:03.930 --> 00:04:07.300
But when React was first starting out,
this was a big barrier for

59
00:04:07.300 --> 00:04:08.110
a lot of people.

60
00:04:08.110 --> 00:04:11.750
It was a big barrier because we took
a long time getting JavaScript out of our

61
00:04:11.750 --> 00:04:14.610
HTML, and now we're putting HTML
into our JavaScript, right?

62
00:04:14.610 --> 00:04:16.220
And that just feels wrong.

63
00:04:16.220 --> 00:04:21.760
But I'll tell you that this is
better because it's not the same.

64
00:04:23.120 --> 00:04:27.260
Putting JavaScript inside of your HTML was
a terrible idea, and whoever started doing

65
00:04:27.260 --> 00:04:32.290
that, they set us back like five years,
if we're being totally honest, right?

66
00:04:32.290 --> 00:04:37.239
But whereas this, we're just writing the
HTML that we actually want in the code.

67
00:04:37.239 --> 00:04:41.621
And now I want you to know
that this little div tag here,

68
00:04:41.621 --> 00:04:45.120
literally gets translated to this.

69
00:04:45.120 --> 00:04:47.930
If you go look at the transpiled output,
right?

70
00:04:47.930 --> 00:04:49.930
So after this gets ran through Babble,

71
00:04:49.930 --> 00:04:53.880
everything here is just being translated
into React.create.ElementCalls, right?

72
00:04:53.880 --> 00:04:55.130
So there's no mystery here.

73
00:04:55.130 --> 00:04:58.700
It's not doing any sort of black magic or
optimization or anything like that.

74
00:04:58.700 --> 00:05:03.580
Literally what gets put it in
the code is this,oops not that, this.

75
00:05:06.240 --> 00:05:10.490
That's why I have you write all this stuff
first so you understand that this is all

76
00:05:10.490 --> 00:05:14.891
just React.createElementCalls,
and there's nothing amiss here.

77
00:05:14.891 --> 00:05:16.681
Does that make sense?

78
00:05:18.901 --> 00:05:23.010
&gt;&gt; Brian Holt: And I promise you, there's
nothing else in JSX, this is really it.

79
00:05:23.010 --> 00:05:24.920
Anyone else have any questions, yeah?

80
00:05:24.920 --> 00:05:29.450
&gt;&gt; Speaker 4: I have noticed
that sometimes if you

81
00:05:29.450 --> 00:05:32.750
try to make multiple
divs in your return and

82
00:05:32.750 --> 00:05:36.630
your JSX it yells at you and
you need to have something to wrap it all.

83
00:05:36.630 --> 00:05:39.430
&gt;&gt; Brian Holt: Yep.
&gt;&gt; Speaker 4: Is there specific reason?

84
00:05:39.430 --> 00:05:42.960
I mean, I understand the idea
of returning only one thing but.

85
00:05:42.960 --> 00:05:45.640
&gt;&gt; Brian Holt: I mean that's precisely it,
right?

86
00:05:45.640 --> 00:05:51.310
So if I put like,
&gt;&gt; Brian Holt: If I put this here, right?

87
00:05:51.310 --> 00:05:54.830
It's gonna say,
I don't know what to, adjacent JSX

88
00:05:54.830 --> 00:05:58.930
elements must be wrapped in enclosing tag,
thanks, ESLint caught it for us, right?

89
00:05:58.930 --> 00:06:01.380
So let's talk about this for a second.

90
00:06:01.380 --> 00:06:03.780
What does this get translated
to if I have this?

91
00:06:04.920 --> 00:06:11.140
Well, if I uncommented this
it would be like having,

92
00:06:13.896 --> 00:06:16.797
&gt;&gt; Brian Holt: React.createElement or

93
00:06:16.797 --> 00:06:24.979
contextElement, stop it element
each h1 right, something like that.

94
00:06:27.608 --> 00:06:32.455
&gt;&gt; Brian Holt: And this doesn't make any
sense because you can't return two things,

95
00:06:32.455 --> 00:06:33.030
right?

96
00:06:33.030 --> 00:06:36.390
I can't say return 2, comma 5, right?

97
00:06:36.390 --> 00:06:37.710
JavaScript does not have this ability,

98
00:06:37.710 --> 00:06:40.240
some other languages have multiple
returns, but not JavaScript.

99
00:06:40.240 --> 00:06:43.310
So that's why React requires you to return

100
00:06:43.310 --> 00:06:46.960
one top level thing because
that's what JavaScript can do.

101
00:06:46.960 --> 00:06:52.181
Now there is a way to accomplish this
which we'll get to later which are called

102
00:06:52.181 --> 00:06:57.966
fragments, but you return one top-level
fragment which encapsulates two things,

103
00:06:57.966 --> 00:07:02.129
does that make sense
&gt;&gt; Brian Holt: All right,

104
00:07:02.129 --> 00:07:03.360
let's get rid of that.

105
00:07:05.120 --> 00:07:09.190
So if this still feels weird to you,
a lot of people will still feel weird to,

106
00:07:09.190 --> 00:07:11.700
I would invite you to just
finish the course with this.

107
00:07:11.700 --> 00:07:16.630
I will tell you that there's only one or
two major holdouts of companies that

108
00:07:16.630 --> 00:07:21.270
didn't use JSX and now both of the big
ones that I know of now use JSX, right?

109
00:07:21.270 --> 00:07:25.880
It's just everyone in the React community
is JSX and people like it enough that

110
00:07:25.880 --> 00:07:29.570
even the Vue community some of
them use JSX as well, right?

111
00:07:29.570 --> 00:07:31.530
So it's it's a pretty good pattern.

