WEBVTT

1
00:00:00.570 --> 00:00:05.590
&gt;&gt; Brian Holt: So what's really good about
this now is we have pets up here, right?

2
00:00:05.590 --> 00:00:08.690
And this represents a set of pets
that we've gotten back from the API.

3
00:00:11.780 --> 00:00:13.108
Now, I'm gonna create
another component here.

4
00:00:15.160 --> 00:00:16.247
&gt;&gt; Brian Holt: You can get
rid of that console log.

5
00:00:18.637 --> 00:00:21.856
&gt;&gt; Brian Holt: Underneath the form here,
we're gonna create something called

6
00:00:21.856 --> 00:00:25.202
Results, and we're just gonna
pass in pets, so pets = {pets}.

7
00:00:28.088 --> 00:00:34.734
&gt;&gt; Brian Holt: And then up here,
at the top, we're gonna say,

8
00:00:34.734 --> 00:00:40.259
import results from './Results'.

9
00:00:40.259 --> 00:00:42.729
Again, we haven't created this yet,
but we're about to.

10
00:00:42.729 --> 00:00:47.577
So, line 3, whoops,
&gt;&gt; Brian Holt: import results

11
00:00:47.577 --> 00:00:48.566
from './Results'.

12
00:00:48.566 --> 00:00:49.955
So we put that in.

13
00:00:51.780 --> 00:00:55.946
&gt;&gt; Brian Holt: And then down here,
we put Results with

14
00:00:55.946 --> 00:01:00.124
pets={pets}, there on line 54.

15
00:01:00.124 --> 00:01:02.294
And we're about to go create this new

16
00:01:02.294 --> 00:01:05.913
file,
&gt;&gt; Brian Holt: And

17
00:01:05.913 --> 00:01:08.777
start displaying our pets in a useful way.

18
00:01:11.796 --> 00:01:14.862
&gt;&gt; Brian Holt: Okay, save that.

19
00:01:14.862 --> 00:01:17.203
New file called results.js.

20
00:01:17.203 --> 00:01:21.991
Gonna import react

21
00:01:21.991 --> 00:01:26.483
from 'React'.

22
00:01:26.483 --> 00:01:30.432
Import Pet from './Pet'.

23
00:01:30.432 --> 00:01:34.405
If you remember, one the very first things
we did in the course was create the Pet

24
00:01:34.405 --> 00:01:36.377
component, we're gonna reuse that.

25
00:01:36.377 --> 00:01:42.602
And here, I'm gonna say,
const Results = ({ pets )},

26
00:01:45.433 --> 00:01:47.803
&gt;&gt; Brian Holt: Whops double arrow.

27
00:01:47.803 --> 00:01:49.311
Then we're going to return.

28
00:01:51.783 --> 00:01:56.085
&gt;&gt; Brian Holt: And
here we're just gonna do a bit of markup.

29
00:01:56.085 --> 00:02:00.800
So, we're gonna say div
className="search".

30
00:02:06.509 --> 00:02:12.988
&gt;&gt; Brian Holt: And we're gonna say,
if pets.length === 0,

31
00:02:12.988 --> 00:02:17.367
and we're gonna use the ternary.

32
00:02:17.367 --> 00:02:24.729
So if it has no length, which means no
results have come back from the API yet,

33
00:02:24.729 --> 00:02:30.756
what we're going to return is
an h1 that says, No Pets Found.

34
00:02:30.756 --> 00:02:35.669
Okay, otherwise we're going
to return something that

35
00:02:35.669 --> 00:02:38.499
displays all the pets, right?

36
00:02:38.499 --> 00:02:42.939
So we're gonna say, pets.map,
and we're gonna take in a pet and

37
00:02:42.939 --> 00:02:46.044
we're going to make a Pet
component out of it.

38
00:02:48.729 --> 00:02:54.861
&gt;&gt; Brian Holt: So
we need to do animal ={pet.type}.

39
00:02:54.861 --> 00:02:58.028
And again, remember,
these are coming from the API.

40
00:03:00.671 --> 00:03:05.244
&gt;&gt; Brian Holt: Sorry, rather,
you have to make a Pet component, Pet.

41
00:03:10.834 --> 00:03:13.330
&gt;&gt; Brian Holt: And
inside of here I'm gonna say animal,

42
00:03:15.771 --> 00:03:17.974
&gt;&gt; Brian Holt: ={pet.type}.

43
00:03:21.395 --> 00:03:25.344
&gt;&gt; Brian Holt: I'm gonna say,
key={pet.id}.

44
00:03:27.290 --> 00:03:29.655
&gt;&gt; Brian Holt: name={pet.name}.

45
00:03:32.104 --> 00:03:36.112
&gt;&gt; Brian Holt: breed={pet.breeds.primary}.

46
00:03:38.195 --> 00:03:41.396
&gt;&gt; Brian Holt: media={pet.photos}.

47
00:03:43.511 --> 00:03:48.017
&gt;&gt; Brian Holt: location=,
I'm gonna use template strings, so

48
00:03:48.017 --> 00:03:50.753
the backticks there, right?

49
00:03:52.738 --> 00:03:55.885
&gt;&gt; Brian Holt: And we're gonna

50
00:03:55.885 --> 00:04:04.428
say ${pet.contact.address.city},

51
00:04:04.428 --> 00:04:12.526
${pet.contact.address.state}.

52
00:04:12.526 --> 00:04:16.530
And then lastly, we need the ID,
which will be equal to {pet.id}.

53
00:04:18.856 --> 00:04:21.603
&gt;&gt; Brian Holt: Okay, so that'll do that.

54
00:04:21.603 --> 00:04:24.393
Again, this is a map, so
this is going to return, for

55
00:04:24.393 --> 00:04:28.313
every pet that I get back from the API,
it will give back one Pet component.

56
00:04:28.313 --> 00:04:32.101
And if it can't find anything,
then it'll just say, No Pets Found.

57
00:04:32.101 --> 00:04:34.284
Now, it would be good to make
this more sophisticated, right?

58
00:04:34.284 --> 00:04:37.943
It would be better if this had a nice
loading indicator and things like that.

59
00:04:37.943 --> 00:04:40.604
That's not something we're gonna do today,
but

60
00:04:40.604 --> 00:04:43.784
there's obviously better UX
that you could do about this.

61
00:04:43.784 --> 00:04:46.211
So again,
remember we're getting pets here,

62
00:04:46.211 --> 00:04:48.281
this is coming from the parent, right?

63
00:04:48.281 --> 00:04:50.497
S we search for the pets in the parent,

64
00:04:50.497 --> 00:04:54.042
and then we pass that down into
the child component, right?

65
00:04:54.042 --> 00:04:57.137
This is a key pattern in React.

66
00:04:57.137 --> 00:05:01.236
It's a key pattern React because you
have data flowing from parent to child,

67
00:05:01.236 --> 00:05:03.898
child to its child and
child to its child, right?

68
00:05:03.898 --> 00:05:06.672
So it's this data that flows down.

69
00:05:06.672 --> 00:05:09.224
But notice it doesn't flow up, right?

70
00:05:09.224 --> 00:05:11.321
This is called one-way data flow.

71
00:05:11.321 --> 00:05:16.559
This is really, really useful, because
if I have a problem with search params,

72
00:05:16.559 --> 00:05:21.505
I know that problem is not arising from
any of its child components, right?

73
00:05:21.505 --> 00:05:24.579
So it's not arising from Result,
it's not arising from Pet,

74
00:05:24.579 --> 00:05:28.699
because while the parent can affect the
child, the child cannot affect its parent.

75
00:05:28.699 --> 00:05:30.415
It doesn't even know who its parent is.

76
00:05:33.016 --> 00:05:35.562
&gt;&gt; Brian Holt: Again,
this feels limiting in some fashions, but

77
00:05:35.562 --> 00:05:38.298
in the end it actually ends
up being extremely useful.

78
00:05:38.298 --> 00:05:40.693
Because if I have any bugs,
I know where to start.

79
00:05:40.693 --> 00:05:42.550
And that's super helpful.

80
00:05:45.712 --> 00:05:49.846
&gt;&gt; Brian Holt: Now I say that it only
flows one way and it can only possibly

81
00:05:49.846 --> 00:05:54.947
flow for some way, there actually
are some ways to reverse that flow.

82
00:05:54.947 --> 00:05:59.782
And it's intentionally difficult, because
most of the time you should not and

83
00:05:59.782 --> 00:06:00.731
do not need to.

84
00:06:00.731 --> 00:06:04.378
It's actually really only useful for
library authors, right?

85
00:06:04.378 --> 00:06:07.471
So someone like React Router or
something like.

86
00:06:07.471 --> 00:06:10.907
For the most part, that's not
a pattern that you should be adopting.

87
00:06:12.147 --> 00:06:16.029
&gt;&gt; Brian Holt: But in intermediate React,
I'll show you how.

88
00:06:16.029 --> 00:06:22.151
Last thing down here, make sure you do,
export default Results.

89
00:06:22.151 --> 00:06:23.929
Save that.

90
00:06:27.438 --> 00:06:29.600
&gt;&gt; Brian Holt: And then you should
be able to come back over here.

91
00:06:29.600 --> 00:06:31.021
You might have some sort of error,

92
00:06:31.021 --> 00:06:33.576
just refresh the page,
it probably will go away from Parcel.

93
00:06:35.128 --> 00:06:37.028
&gt;&gt; Brian Holt: Okay, so,
I'm just gonna hit Submit.

94
00:06:37.028 --> 00:06:42.378
And you can see here, now I'm getting
real results back from the API.

95
00:06:42.378 --> 00:06:45.921
So we have Fatboy Slim and
Cindy and Holly.

96
00:06:48.733 --> 00:06:50.180
&gt;&gt; Brian Holt: And
looks like these are mostly dogs.

97
00:06:53.270 --> 00:06:55.662
&gt;&gt; Brian Holt: But
you should be able to find cats as well.

98
00:06:55.662 --> 00:06:57.543
That's cuz it is only searching for dogs.

99
00:06:57.543 --> 00:06:58.823
So it's doing its job.

100
00:07:00.382 --> 00:07:02.169
&gt;&gt; Brian Holt: But
we're able there to switch to cats, right?

101
00:07:02.169 --> 00:07:03.835
And now these are cats to adopt as well.

