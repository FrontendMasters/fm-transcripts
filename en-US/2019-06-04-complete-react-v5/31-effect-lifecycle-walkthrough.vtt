WEBVTT

1
00:00:00.040 --> 00:00:01.640
&gt;&gt; Brian Holt: Let's work
through this whole cycle.

2
00:00:01.640 --> 00:00:05.264
I recognize that I have
introduced a lot of steps here.

3
00:00:05.264 --> 00:00:10.227
So let's work through the entire
cycle of beginning to end

4
00:00:10.227 --> 00:00:12.769
of what happens here, okay?

5
00:00:12.769 --> 00:00:16.540
First thing,
I have search params here, right?

6
00:00:19.020 --> 00:00:21.380
So this gets rendered for the first time.

7
00:00:21.380 --> 00:00:24.000
It gets all this information,
sets all these hooks up so

8
00:00:24.000 --> 00:00:26.920
the first location is Seattle, Washington.

9
00:00:26.920 --> 00:00:31.375
Breed is gonna be an empty array and
animal is going to be a dog, and

10
00:00:31.375 --> 00:00:34.456
breed is going to be an empty string,
right?

11
00:00:37.234 --> 00:00:39.240
&gt;&gt; Brian Holt: It's then going
to schedule this useEffect, but

12
00:00:39.240 --> 00:00:41.260
this is not actually gonna happen yet,
right?

13
00:00:41.260 --> 00:00:44.800
This does not run on the first render,
okay?

14
00:00:44.800 --> 00:00:47.597
Then it's going to return
all of this markup,

15
00:00:49.688 --> 00:00:50.380
&gt;&gt; Brian Holt: Right?

16
00:00:50.380 --> 00:00:54.362
Then its going to finish that, it's
going to render that all to the DOM so

17
00:00:54.362 --> 00:00:57.120
the user's going to see all of this first,
okay?

18
00:00:58.830 --> 00:01:02.850
Then after that,
it's going to run the schedule effect.

19
00:01:04.200 --> 00:01:06.190
Keep in mind you can have
ten effects in here, right?

20
00:01:06.190 --> 00:01:08.920
Right now we just have one effect,
but you can have many effects in here.

21
00:01:10.960 --> 00:01:16.474
So after the first render, it's going
to call this function right here.

22
00:01:18.993 --> 00:01:22.105
&gt;&gt; Brian Holt: So this is going
to separates to be empty array.

23
00:01:22.105 --> 00:01:24.322
It's gonna cause separate
to be an empty string.

24
00:01:27.076 --> 00:01:27.604
&gt;&gt; Brian Holt: And then,

25
00:01:27.604 --> 00:01:31.638
it's gonna go out to the API,
&gt;&gt; Brian Holt: With animal,

26
00:01:31.638 --> 00:01:36.870
and it's going to get breeds back from the
API, and then it's gonna call setBreeds.

27
00:01:36.870 --> 00:01:38.990
But keep in mind,
this is gonna take some time, right?

28
00:01:38.990 --> 00:01:41.358
This will take a second or
something like that, right?

29
00:01:41.358 --> 00:01:43.923
So what's gonna happen is
it's going to render, and

30
00:01:43.923 --> 00:01:47.571
then a second later once this comes back
with the breed strings from the API,

31
00:01:47.571 --> 00:01:49.929
it's gonna cause another re-render, right?

32
00:01:49.929 --> 00:01:53.610
But, the only thing that's
changed here is breeds.

33
00:01:55.800 --> 00:01:59.579
Does this particular
effect depend on breeds?

34
00:02:01.010 --> 00:02:01.830
No, right?

35
00:02:01.830 --> 00:02:03.740
So it doesn't re-render the next time,
right?

36
00:02:03.740 --> 00:02:07.350
Because breeds changed, but
animal, setBreed, and setBreeds,

37
00:02:07.350 --> 00:02:09.160
none of these changed, right?

38
00:02:09.160 --> 00:02:12.770
So it just runs that effect once and
then it's done, okay?

39
00:02:14.210 --> 00:02:18.292
So now, fathom for a second that go and
I type in the location, right?

40
00:02:18.292 --> 00:02:20.480
So now location is updated state.

41
00:02:20.480 --> 00:02:25.250
And it goes here to useEffect and
it says hey, has animal setBreed or

42
00:02:25.250 --> 00:02:28.620
setBreeds changed since last
time I ran this effect?

43
00:02:30.290 --> 00:02:31.460
No, right?

44
00:02:31.460 --> 00:02:36.650
So it does not schedule this
effect to run again, good so far?

45
00:02:39.920 --> 00:02:47.116
Okay, then I go in and I select animal
to be, it was dog and now it's cat.

46
00:02:47.116 --> 00:02:50.849
So it's gonna re-render but it says,

47
00:02:50.849 --> 00:02:54.930
hey, did animal change, it did, right?

48
00:02:54.930 --> 00:02:56.870
I changed it from dog to cat.

49
00:02:56.870 --> 00:03:01.144
So it's gonna set immediately set
breeds to be empty array, and

50
00:03:01.144 --> 00:03:05.733
empty string is going to then call
the API, get the new breeds back and

51
00:03:05.733 --> 00:03:08.611
it's gonna re-render again after that.

52
00:03:11.321 --> 00:03:12.673
&gt;&gt; Brian Holt: That makes sense?

53
00:03:14.837 --> 00:03:16.270
&gt;&gt; Brian Holt: So this is how useState and

54
00:03:16.270 --> 00:03:20.258
useEffects work together to kind of
manage these kind of state updates.

55
00:03:23.227 --> 00:03:27.886
&gt;&gt; Speaker 2: So for
the dependency array that determines if

56
00:03:27.886 --> 00:03:31.956
useEffect is run, that functions run.

57
00:03:31.956 --> 00:03:35.958
When we put in setBreed and setBreeds,

58
00:03:35.958 --> 00:03:44.341
we're just saying basically if those were
reassigned and then it would rerun it.

59
00:03:44.341 --> 00:03:45.560
&gt;&gt; Brian Holt: That's funny
that you bring this up.

60
00:03:45.560 --> 00:03:49.090
I had an at-length discussion
with a couple of the React

61
00:03:49.090 --> 00:03:53.730
core team members of I think that's silly,
because that's never gonna change.

62
00:03:53.730 --> 00:03:56.250
And they basically said,
we don't care, do it anyway.

63
00:03:58.410 --> 00:04:02.630
I would think this is better because this
is more clear about your intention, right?

64
00:04:02.630 --> 00:04:04.975
Only at run when animal runs.

65
00:04:04.975 --> 00:04:08.957
But you're gonna get an error of,
&gt;&gt; Brian Holt: SetBreed needs to

66
00:04:08.957 --> 00:04:09.470
be in there.

67
00:04:11.420 --> 00:04:14.650
So I gave up,
this is what the community's doing,

68
00:04:14.650 --> 00:04:16.010
so I'm teaching you what
the community's doing.

69
00:04:18.560 --> 00:04:21.738
I mean, in theory,
it's not a bad idea, right?

70
00:04:21.738 --> 00:04:26.247
I guess in theory it could be updated or
something like that, but whatever,

71
00:04:26.247 --> 00:04:27.170
I don't know.

72
00:04:27.170 --> 00:04:28.160
&gt;&gt; Speaker 3: So it's just looking for

73
00:04:28.160 --> 00:04:33.090
any external variable that
you're using in that function?

74
00:04:33.090 --> 00:04:38.930
&gt;&gt; Brian Holt: Right, so the idea here
being that I have setBreed, right?

75
00:04:38.930 --> 00:04:43.507
And if I'm using setBreed because
it's defined in here inside of this

76
00:04:43.507 --> 00:04:48.007
function itself, that means if any
time this setBreed does change,

77
00:04:48.007 --> 00:04:50.050
it should re-run the effect.

78
00:04:50.050 --> 00:04:51.920
Which is true of Animal, right?

79
00:04:51.920 --> 00:04:55.485
I'm using Animal here, so
any time that Animal changes,

80
00:04:55.485 --> 00:04:57.320
I need to re-run the effect.

81
00:04:57.320 --> 00:05:01.040
So that's what they're chasing after,
this will save you bugs, right?

82
00:05:01.040 --> 00:05:02.832
Because if I didn't have Animal in here,

83
00:05:02.832 --> 00:05:04.889
actually this would be
a good thing to show you.

84
00:05:04.889 --> 00:05:08.583
So if I take Animal out of here,
it will request it the first time, and

85
00:05:08.583 --> 00:05:11.094
I'm gonna get Australian shepherd, right?

86
00:05:11.094 --> 00:05:16.530
But if I change this to be cat now,
it's not gonna update.

87
00:05:16.530 --> 00:05:20.189
Right, because it's not gonna go back to
the API because it thinks like, I'm good,

88
00:05:20.189 --> 00:05:23.171
right, I don't have to change,
because, I don't depend on animal.

