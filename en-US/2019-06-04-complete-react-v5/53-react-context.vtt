WEBVTT

1
00:00:00.450 --> 00:00:02.400
&gt;&gt; Brian Holt: Let's talk
about what context is.

2
00:00:02.400 --> 00:00:06.460
In the first versions of this course
I didn't teach context at all,

3
00:00:06.460 --> 00:00:07.970
because it used to be an unstable API.

4
00:00:09.780 --> 00:00:13.246
With version four of this course
it landed as a stable API and so

5
00:00:13.246 --> 00:00:17.060
it's actually now something that
you might want to use sometimes.

6
00:00:18.670 --> 00:00:22.210
So, let's talk about why it
could potentially be useful.

7
00:00:22.210 --> 00:00:24.783
Sometimes you'll have like
global applications state and

8
00:00:24.783 --> 00:00:28.190
a really good example of this would be
something like user log in information.

9
00:00:28.190 --> 00:00:31.962
So, maybe you are in Netflix.com and
as a user navigates from route to route to

10
00:00:31.962 --> 00:00:35.236
route, every single page is gonna
use pieces of that user's data.

11
00:00:35.236 --> 00:00:37.116
You should display the email here,

12
00:00:37.116 --> 00:00:39.687
you show them their user
preferences over here,

13
00:00:39.687 --> 00:00:43.838
you show them all this information that
you would get from the user logging in.

14
00:00:43.838 --> 00:00:45.860
Right now with all the tools
that I've shown you,

15
00:00:45.860 --> 00:00:48.603
what you would do is you'd put all
the information into app dot JS and

16
00:00:48.603 --> 00:00:50.600
you would just pass it
into every single child.

17
00:00:50.600 --> 00:00:54.170
Then, you would kind of have this
problem we would call prop drilling

18
00:00:54.170 --> 00:00:57.960
where you would have to take the property
from the parent, pass it into the child,

19
00:00:57.960 --> 00:00:59.930
take the property from the parent,
pass it into the child.

20
00:00:59.930 --> 00:01:03.360
So on and so forth down multiple levels,
it's annoying.

21
00:01:03.360 --> 00:01:07.260
It's also useful because you can see the
flow of data through your application, but

22
00:01:07.260 --> 00:01:10.360
it's annoying to have to do it
everywhere for something like user data,

23
00:01:10.360 --> 00:01:13.760
because every part of your application
is going to touch your user data.

24
00:01:13.760 --> 00:01:15.510
You kind of get where this is the problem?

25
00:01:16.930 --> 00:01:20.560
Where we have been solving that
is using redux, historically.

26
00:01:20.560 --> 00:01:23.680
Redux is typically you have
this data store on the side and

27
00:01:23.680 --> 00:01:26.590
you feed all the information
into the data store and

28
00:01:26.590 --> 00:01:29.110
then every part of your application
can read from the redux store.

29
00:01:30.360 --> 00:01:31.250
Redux is hard.

30
00:01:31.250 --> 00:01:35.600
We'll actually go over it
in intermediate React, but

31
00:01:35.600 --> 00:01:39.530
it's hard and often overkill for
these sort of things.

32
00:01:39.530 --> 00:01:43.720
There's another thing that's new to
React called Context that you can use,

33
00:01:43.720 --> 00:01:45.930
that you can load these into basically

34
00:01:47.540 --> 00:01:51.840
a data store that your entire React
application can use and update.

35
00:01:51.840 --> 00:01:54.070
But just know that's kind of
a double edged sword, right?

36
00:01:54.070 --> 00:01:57.660
You're taking out the advantage
of React of being explicit, and

37
00:01:57.660 --> 00:02:00.143
now everything kind of has
implicit dependencies, right?

38
00:02:00.143 --> 00:02:01.370
It's hard.

39
00:02:01.370 --> 00:02:06.343
So let's,
&gt;&gt; Brian Holt: Let's go take a look

40
00:02:06.343 --> 00:02:07.191
at how you do that.

41
00:02:09.604 --> 00:02:13.452
&gt;&gt; Brian Holt: So
I want you to make a new file here and

42
00:02:13.452 --> 00:02:17.683
I want you to call it ThemeContext.js.

43
00:02:22.939 --> 00:02:26.588
&gt;&gt; Brian Holt: Okay,
gonna be short and sweet here.

44
00:02:26.588 --> 00:02:30.029
We're gonna make a theme for
our application.

45
00:02:30.029 --> 00:02:36.616
So import, create context, from react.

46
00:02:39.021 --> 00:02:44.505
&gt;&gt; Brian Holt: I'm gonna say const
ThemeContext = React.createContext and

47
00:02:44.505 --> 00:02:48.059
we're gonna give it a hook-like shape,

48
00:02:48.059 --> 00:02:54.060
because we're actually going to
stick a hook inside of here.

49
00:02:54.060 --> 00:02:56.490
But just so you know,
you can stick anything in context.

50
00:02:56.490 --> 00:03:01.130
It can be an object, it can be function,
it can be a string, a number,

51
00:03:01.130 --> 00:03:01.930
whatever you want.

52
00:03:01.930 --> 00:03:04.020
But we're actually going to
literally stick a hook in there.

53
00:03:05.220 --> 00:03:07.502
So, we're gonna put green, or

54
00:03:07.502 --> 00:03:11.739
whatever your favorite CSS name color is,
and a function.

55
00:03:13.886 --> 00:03:16.790
&gt;&gt; Brian Holt: Now,
why did I get this empty function?

56
00:03:16.790 --> 00:03:21.710
This is actually a placeholder,
so it will use this particular

57
00:03:21.710 --> 00:03:25.110
function if it has no provider above
it but this should never happen.

58
00:03:26.370 --> 00:03:29.490
So this is actually more just notes for
your future self.

59
00:03:29.490 --> 00:03:33.600
This is what this looks like and
this is what a hook looks like.

60
00:03:33.600 --> 00:03:36.560
It has the state and it has an updater.

61
00:03:36.560 --> 00:03:38.367
In this case,
the updater doesn't do anything, so

62
00:03:38.367 --> 00:03:39.564
we just give it an empty function.

63
00:03:42.005 --> 00:03:44.433
&gt;&gt; Brian Holt: Make sense?

64
00:03:44.433 --> 00:03:46.376
And we don't want React.createContext.

65
00:03:46.376 --> 00:03:48.081
We just want createContext like that.

66
00:03:51.792 --> 00:03:55.265
&gt;&gt; Brian Holt: Okay, and
then down here at the bottom,

67
00:03:55.265 --> 00:03:58.443
just export default ThemeContext.

68
00:04:01.812 --> 00:04:03.617
&gt;&gt; Brian Holt: So
now we've created the context,

69
00:04:03.617 --> 00:04:06.094
now we're gonna go use
it inside of our app.js.

70
00:04:07.300 --> 00:04:12.253
Okay?
Instead of app.js we want

71
00:04:12.253 --> 00:04:17.056
you to import themeContext

72
00:04:17.056 --> 00:04:21.273
from /themeContext.

73
00:04:21.273 --> 00:04:26.580
Here inside of app we're going to create,
we also need use state from react.

74
00:04:26.580 --> 00:04:27.906
So get use state from up here.

75
00:04:27.906 --> 00:04:29.907
Use state.

76
00:04:32.614 --> 00:04:36.752
&gt;&gt; Brian Holt: And we're gonna say,
&gt;&gt; Brian Holt: Const

77
00:04:36.752 --> 00:04:41.396
themeHook = useState.

78
00:04:41.396 --> 00:04:42.977
And we have to give it
some default values.

79
00:04:42.977 --> 00:04:46.023
So just to show that
the default value is different,

80
00:04:46.023 --> 00:04:47.969
I'm gonna put dark blue in here.

81
00:04:51.451 --> 00:04:54.078
&gt;&gt; Brian Holt: Now remember
we normally have been doing,

82
00:04:56.095 --> 00:04:58.877
&gt;&gt; Brian Holt: color and setColor here.

83
00:04:58.877 --> 00:05:02.010
Like this right here with hooks if you
remember from earlier in the course.

84
00:05:03.410 --> 00:05:07.908
But right now we're just gonna grab
the whole array and call it themeHook.

85
00:05:11.658 --> 00:05:14.280
&gt;&gt; Brian Holt: And then I'm gonna
wrap everything inside of here,

86
00:05:14.280 --> 00:05:16.550
inside of StrictMode here.

87
00:05:16.550 --> 00:05:22.948
ThemeContext and
then you say value = themeHook.

88
00:05:33.348 --> 00:05:38.518
&gt;&gt; Brian Holt: So now what we've
done here, sorry, you have to do

89
00:05:38.518 --> 00:05:44.429
ThemeContext on both of these .Provider,
.Provider.

90
00:05:44.429 --> 00:05:44.929
Yeah.

91
00:05:51.069 --> 00:05:54.272
&gt;&gt; Brian Holt: So on line 22 and
line 12 there introduce

92
00:05:54.272 --> 00:06:01.426
Themecontext.provider,
&gt;&gt; Brian Holt: So

93
00:06:01.426 --> 00:06:05.961
what we've done here is now
everything inside of here has

94
00:06:05.961 --> 00:06:09.844
available as a global app
state this themeHook.

95
00:06:12.795 --> 00:06:15.844
&gt;&gt; Brian Holt: Now, I could have two
different theme hook providers where they

96
00:06:15.844 --> 00:06:18.850
can have search params and
details have different providers.

97
00:06:18.850 --> 00:06:22.490
And they could have these
value be different things.

98
00:06:22.490 --> 00:06:25.650
So there's actually a lot of flexibility
that you can do with context and

99
00:06:25.650 --> 00:06:27.360
I just never use it.

100
00:06:27.360 --> 00:06:31.050
So, the only thing that I find useful is
providing like the entire application with

101
00:06:31.050 --> 00:06:34.740
a global application state but
there is some fanciness that you can do.

