WEBVTT

1
00:00:00.110 --> 00:00:03.470
&gt;&gt; Brian Holt: An absolutely fundamental
key thing that I need you to

2
00:00:03.470 --> 00:00:08.104
really understand right now with hooks is
they never go inside of if statements,

3
00:00:08.104 --> 00:00:10.730
and they never go inside for
loops or anything like that.

4
00:00:12.630 --> 00:00:15.999
Why?
So I can't say like,

5
00:00:15.999 --> 00:00:21.548
if (something), I can't do this.

6
00:00:21.548 --> 00:00:25.290
This is not okay, never do this.

7
00:00:25.290 --> 00:00:26.942
The way that hooks work is,

8
00:00:26.942 --> 00:00:31.240
basically, they're keeping track of
the order that you're creating hooks.

9
00:00:31.240 --> 00:00:34.180
So if I have another hook underneath this,
like for example, like for

10
00:00:34.180 --> 00:00:36.730
the animal, and setAnimal.

11
00:00:37.900 --> 00:00:40.230
And we'll make this dog or
something like that.

12
00:00:41.770 --> 00:00:45.210
The way that they're keeping track
of each individual piece of state is

13
00:00:45.210 --> 00:00:48.520
they're keeping track of the order that
you're calling these things in, right?

14
00:00:49.530 --> 00:00:54.008
So if I call these things out of order or
if I have an if statement, and then,

15
00:00:54.008 --> 00:00:56.000
let's just imagine [INAUDIBLE],

16
00:00:56.000 --> 00:01:01.450
if something
&gt;&gt; Brian Holt: If this is true

17
00:01:01.450 --> 00:01:05.211
on the first call and false in the second
call, this will be the first thing called,

18
00:01:05.211 --> 00:01:08.168
which means that this is going to
get location instead of animal,

19
00:01:08.168 --> 00:01:09.930
which is going to mess up everything.

20
00:01:11.850 --> 00:01:15.200
So even if you're ignoring
what is in useState,

21
00:01:16.440 --> 00:01:19.882
you still have to call useState outside of
the if statement, outside of a for loop.

22
00:01:19.882 --> 00:01:22.550
So I'm actually gonna introduce
you to an EL Synch rule

23
00:01:22.550 --> 00:01:23.860
that want to make you do that.

24
00:01:25.120 --> 00:01:29.398
But I just want to very much underscore
the fact that you cannot put in

25
00:01:29.398 --> 00:01:32.400
an if statement and
you cannot put in a for loop or

26
00:01:32.400 --> 00:01:36.024
really any sort of conditional or
unpredictable logic.

27
00:01:38.922 --> 00:01:41.847
&gt;&gt; Brian Holt: Inevitably, someone at this
point in time is going to ask me like, but

28
00:01:41.847 --> 00:01:44.440
what if I'm very careful that
it's called in the same order?

29
00:01:45.480 --> 00:01:48.540
Just don't, I will find you and
then I will shame you.

30
00:01:48.540 --> 00:01:50.830
[LAUGH] Just kidding,
I don't know, but please don't.

31
00:01:52.690 --> 00:01:56.640
It's actually underscored in the docs, so
it's just something like just never do it.

32
00:01:58.040 --> 00:02:00.687
Always make sure that
they're outside of that.

33
00:02:02.716 --> 00:02:05.382
&gt;&gt; Brian Holt: And this applies
to all hooks, not just useState,

34
00:02:05.382 --> 00:02:06.560
all hooks in general.

35
00:02:07.730 --> 00:02:10.410
Make sure you are always
using use something, right?

36
00:02:10.410 --> 00:02:15.270
That's a convention that React,
if you use this convention,

37
00:02:15.270 --> 00:02:18.090
then the ES can help you
enforce some of these rules,

