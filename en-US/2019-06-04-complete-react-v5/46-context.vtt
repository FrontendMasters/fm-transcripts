WEBVTT

1
00:00:00.040 --> 00:00:02.830
&gt;&gt; Brian Holt: So one more thing,
now we have photos,

2
00:00:02.830 --> 00:00:06.040
which we know is going to be
an array of photo strings, okay?

3
00:00:06.040 --> 00:00:09.411
Now we just have to make this
handleIndexClick function.

4
00:00:14.043 --> 00:00:16.003
&gt;&gt; Brian Holt: So, let's go ahead and
do it this way first,

5
00:00:16.003 --> 00:00:19.424
we're gonna build it wrong first and
then we'll show you how to make it right.

6
00:00:21.859 --> 00:00:23.205
&gt;&gt; Brian Holt: Okay, handleIndexClick,

7
00:00:23.205 --> 00:00:25.679
this is gonna take in an event
of some sort like this.

8
00:00:27.703 --> 00:00:33.584
&gt;&gt; Brian Holt: And here we just wanna
call this.setstate, with active

9
00:00:33.584 --> 00:00:41.938
being the event.target.dataset.index
&gt;&gt; Brian Holt: So

10
00:00:41.938 --> 00:00:45.230
there's two things wrong with this,
let's talk about both of them.

11
00:00:45.230 --> 00:00:48.800
The first one,
if you've never seen dataset before,

12
00:00:48.800 --> 00:00:51.460
this is not a react API,
this is a dumb API, right?

13
00:00:51.460 --> 00:00:54.850
And dataset allows you to get
two things that are on the data,

14
00:00:54.850 --> 00:00:59.970
on the each note tag, right?

15
00:00:59.970 --> 00:01:03.658
So I had this image tag here right,
and I had this data index.

16
00:01:03.658 --> 00:01:08.147
So this dataset that we're referring to,
let's close you.

17
00:01:08.147 --> 00:01:12.212
[BLANK AUDIO] There we go.

18
00:01:12.212 --> 00:01:16.554
So dataset index, that's going to
refer to whatever is here, right?

19
00:01:16.554 --> 00:01:20.240
So it'll have zero, one, two,
three and four in there.

20
00:01:20.240 --> 00:01:20.890
That make sense?

21
00:01:22.220 --> 00:01:26.077
But the thing to keep in mind here is
active needs to be a number because we're

22
00:01:26.077 --> 00:01:27.960
using as a number down here, right?

23
00:01:27.960 --> 00:01:32.326
Anything that comes react from the dumb
is always gonna be a string, so

24
00:01:32.326 --> 00:01:37.460
we need to convert this into a number,
we need to coerce this into a number.

25
00:01:37.460 --> 00:01:38.760
There's a number of ways of doing this.

26
00:01:38.760 --> 00:01:44.070
You could do parseInt or something
like that, or you can just say Plus.

27
00:01:44.070 --> 00:01:46.715
If you put what's call
the unary plus right there,

28
00:01:46.715 --> 00:01:48.383
that will turn it into a number.

29
00:01:51.252 --> 00:01:52.460
&gt;&gt; Brian Holt: Okay?

30
00:01:52.460 --> 00:01:54.189
So that's problem number one solved.

31
00:01:54.189 --> 00:01:59.725
And I said this, sorry, this.setState
right there, that's a third problem.

32
00:01:59.725 --> 00:02:04.100
[LAUGH] This.setState.

33
00:02:04.100 --> 00:02:09.420
The other problem that we
have here is what is this?

34
00:02:12.320 --> 00:02:15.272
So, if I'm calling it as
an event listener down here,

35
00:02:15.272 --> 00:02:17.400
what do you think this is gonna be here?

36
00:02:18.860 --> 00:02:19.360
&gt;&gt; Speaker 2: Download?

37
00:02:21.120 --> 00:02:21.960
&gt;&gt; Brian Holt: I think it's nothing.

38
00:02:21.960 --> 00:02:23.070
I think it's undefined.

39
00:02:24.290 --> 00:02:26.016
You're on the right track
that it's not correct, right?

40
00:02:28.135 --> 00:02:29.780
&gt;&gt; Brian Holt: We need it
to be the component, right?

41
00:02:29.780 --> 00:02:33.420
We need it be the carousel component
because we wanna call a setState on

42
00:02:33.420 --> 00:02:40.000
the carousel component, and this is
either Window or I think it's undefined.

43
00:02:40.000 --> 00:02:42.710
I think react makes it undefined.

44
00:02:42.710 --> 00:02:45.570
Regardless, it's not
what you want it to be.

45
00:02:45.570 --> 00:02:50.328
So how would I make this correct?

46
00:02:50.328 --> 00:02:53.520
There's two methodologies here,
I'll show you both of them.

47
00:02:55.170 --> 00:02:59.842
If I had a constructor up here, so
just say I had constructor (props), and

48
00:02:59.842 --> 00:03:05.050
you don't have to copy this one, I'm
just showing you this one, super(props).

49
00:03:05.050 --> 00:03:07.880
What you could do here if
you don't have public class

50
00:03:07.880 --> 00:03:10.980
properties enabled in your project
which many of you will not.

51
00:03:10.980 --> 00:03:12.405
You can come in here and put,

52
00:03:12.405 --> 00:03:18.530
this.handleIndexClick=this.handleIndexCli-
ck.bind(this).

53
00:03:18.530 --> 00:03:20.200
This looks ridiculous, right?

54
00:03:21.420 --> 00:03:23.120
But what is this actually doing, right?

55
00:03:23.120 --> 00:03:27.180
It's binding the context of
handleIndexClick to be Carousel,

56
00:03:27.180 --> 00:03:30.420
because we know what this is inside
the constructor would guarantee it's gonna

57
00:03:30.420 --> 00:03:32.130
be the correct context, right?

58
00:03:32.130 --> 00:03:35.240
So this means that handleIndexClick
can then be called, and

59
00:03:35.240 --> 00:03:39.010
this will always be correct,
right, so this works.

60
00:03:40.430 --> 00:03:42.203
There's an even easier way to do this,
though,

61
00:03:42.203 --> 00:03:43.949
if you have public class
properties like this.

62
00:03:47.206 --> 00:03:51.861
&gt;&gt; Brian Holt: I can just turn this into-
&gt;&gt; Brian Holt: An arrow function.

63
00:03:54.944 --> 00:03:56.620
&gt;&gt; Brian Holt: Now it's correct again,
right?

64
00:03:56.620 --> 00:04:00.595
Because we talked about arrow functions,
right, they don't create new context when

65
00:04:00.595 --> 00:04:03.318
they're invoked,
which means that it gets it lexically,

66
00:04:03.318 --> 00:04:07.032
which is not actually technically correct
but effectively is correct, right?

67
00:04:07.032 --> 00:04:10.437
So this is determined when you write it,
right, so

68
00:04:10.437 --> 00:04:13.740
this is going to be
wherever it was written.

69
00:04:13.740 --> 00:04:16.810
Whereas if I you call a function
like this function here, right?

70
00:04:16.810 --> 00:04:20.978
It's going to be whether it's invoked,
now recognize it's probably not a kind of

71
00:04:20.978 --> 00:04:24.846
an odd distinction to make but suffice
to say, this will have the correct this

72
00:04:24.846 --> 00:04:28.084
because this event listener's
not gonna create a new context.

73
00:04:30.412 --> 00:04:34.600
&gt;&gt; Brian Holt: So I'm gonna give you
just kind of a rule of thumb here.

74
00:04:34.600 --> 00:04:37.710
Whenever you are passing functions
down into children, right?

75
00:04:37.710 --> 00:04:39.239
Or whenever you're doing event listeners,

76
00:04:39.239 --> 00:04:43.497
use an arrow function,
&gt;&gt; Brian Holt: Because that will guarantee

77
00:04:43.497 --> 00:04:45.400
what this is to be is correct.

78
00:04:47.330 --> 00:04:52.134
Like notice here in our componentDidMount
in details and this one, notice that

79
00:04:52.134 --> 00:04:57.082
we didn't have to do any magic for
this.setState for componentDidMount that's

80
00:04:57.082 --> 00:05:02.753
because componentDidMount, we already
know it's gonna have the correct context.

81
00:05:02.753 --> 00:05:05.643
Same thing with render, render is always
gonna have the same correct context.

82
00:05:05.643 --> 00:05:07.913
So it's really just event listeners and

83
00:05:07.913 --> 00:05:10.803
functions that you're passing
into children, that's it.

