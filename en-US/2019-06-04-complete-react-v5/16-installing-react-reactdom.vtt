WEBVTT

1
00:00:00.000 --> 00:00:04.070
&gt;&gt; Brian Holt: Now let's go fix this error
that React doesn't know what this is.

2
00:00:05.260 --> 00:00:11.800
What we're going to do, if you don't know,
to stop the serve you hit Ctrl-C.

3
00:00:11.800 --> 00:00:15.550
I think that works on any platform.

4
00:00:15.550 --> 00:00:18.060
You send an interrupt command to it and
say stop this, right?

5
00:00:20.600 --> 00:00:24.796
&gt;&gt; Brian Holt: So here I'm gonna say now
npm install without the D because these

6
00:00:24.796 --> 00:00:29.005
are production dependencies,
react react-dom, like that.

7
00:00:32.120 --> 00:00:36.495
&gt;&gt; Brian Holt: So this is gonna go install
our two packages off of the npm registry.

8
00:00:41.896 --> 00:00:46.585
&gt;&gt; Brian Holt: Take a second

9
00:00:46.585 --> 00:00:50.850
to do that.

10
00:00:55.300 --> 00:00:57.809
&gt;&gt; Brian Holt: Okay, now instead
of going back in my index.html,

11
00:00:57.809 --> 00:00:59.870
I'm gonna delete these two script files.

12
00:00:59.870 --> 00:01:02.347
Cuz I don't wanna load
these off the CD anymore,

13
00:01:02.347 --> 00:01:05.380
I wanna load them off of my
local computer, so delete that.

14
00:01:06.430 --> 00:01:08.171
So all we have is the root and our app.js.

15
00:01:16.480 --> 00:01:20.101
&gt;&gt; Brian Holt: Okay,
now we're gonna go back into app.js.

16
00:01:21.877 --> 00:01:25.713
&gt;&gt; Brian Holt: And
we're gonna say up here,

17
00:01:25.713 --> 00:01:29.710
import React from 'react'.

18
00:01:29.710 --> 00:01:36.740
So this is going to import the default
export from the React package, okay?

19
00:01:36.740 --> 00:01:41.615
And we're going to say import and

20
00:01:41.615 --> 00:01:48.240
I'm gonna say {render} from react-dom.

21
00:01:48.240 --> 00:01:51.940
Now, some of you might not be
seeing this autocompletion here.

22
00:01:51.940 --> 00:01:56.315
That extension is called NPM Intellisense,
which again is here.

23
00:01:56.315 --> 00:02:01.318
NPM Intellisense, right there,

24
00:02:02.774 --> 00:02:05.540
&gt;&gt; Brian Holt: Quite useful.

25
00:02:05.540 --> 00:02:08.365
So import render from react-DOM is
where we want that one to come from.

26
00:02:16.140 --> 00:02:19.956
&gt;&gt; Brian Holt: So I show you this,
I could've just done import without

27
00:02:19.956 --> 00:02:23.620
the curly braces here and
said react-DOM like this.

28
00:02:23.620 --> 00:02:27.682
And now this would work because this
is called reactDOM down right here, but

29
00:02:27.682 --> 00:02:30.409
I wanna show you how to
input the specific thing, so

30
00:02:30.409 --> 00:02:32.720
I wanna import just render from reactDOM.

31
00:02:32.720 --> 00:02:36.156
So this is saying reactDOM has
a specific export called render and

32
00:02:36.156 --> 00:02:38.102
I want you to input just that, okay?

33
00:02:38.102 --> 00:02:44.010
And then down here just erase the render,
so it's just render like that.

34
00:02:45.560 --> 00:02:49.030
So I wanna say this is
similar to destructuring.

35
00:02:49.030 --> 00:02:52.530
It's technically not destructuring,
this is just how modules work.

36
00:02:54.000 --> 00:02:57.417
But this is just saying react-dom
has a specific instance,

37
00:02:57.417 --> 00:03:00.440
export render equals something,
heah, question?

38
00:03:00.440 --> 00:03:03.826
&gt;&gt; Speaker 2: When you're using an import
statement, how do you know whether or

39
00:03:03.826 --> 00:03:05.709
not you should use the curly braces?

40
00:03:07.480 --> 00:03:11.466
Is that just for if you want to
import one specific feature?

41
00:03:11.466 --> 00:03:12.784
&gt;&gt; Brian Holt: Yes.

42
00:03:12.784 --> 00:03:15.280
&gt;&gt; Speaker 2: Okay.

43
00:03:15.280 --> 00:03:17.193
&gt;&gt; Brian Holt: For
example here from React,

44
00:03:17.193 --> 00:03:20.170
I can actually import specific things.

45
00:03:20.170 --> 00:03:23.952
So like, I cannot actually
just import creed element,

46
00:03:23.952 --> 00:03:27.260
because it specifically exports that,
right?

47
00:03:27.260 --> 00:03:33.200
And then I wouldn't be using, I would
just be using create element like that.

48
00:03:33.200 --> 00:03:37.854
In general, I would encourage you
to do specific exports most of

49
00:03:37.854 --> 00:03:43.390
the time because parcel will do
a thing for you called tree shaking.

50
00:03:43.390 --> 00:03:48.288
It actually uglifies the actual
thing that does the tree shaking,

51
00:03:48.288 --> 00:03:51.880
but what that does is
it's live code inclusion.

52
00:03:51.880 --> 00:03:55.990
So it will only include code
that could ever potentially run.

53
00:03:57.260 --> 00:04:02.065
So in this particular case,
let's say react-dom had 1,000 methods and

54
00:04:02.065 --> 00:04:06.670
we're only importing 1, right,
it would not include the other 999.

55
00:04:06.670 --> 00:04:10.590
If they packaged it correctly which is
a big if because most of them don't.

56
00:04:12.760 --> 00:04:14.930
But like a good example that
would be like low dash right?

57
00:04:14.930 --> 00:04:18.350
Low dash is a huge library
has like 200 methods right?

58
00:04:18.350 --> 00:04:20.240
And you don't,
no one ever uses all 200 methods right?

59
00:04:20.240 --> 00:04:24.037
So what you wanna do with that is you
wanna import just a few methods that you

60
00:04:24.037 --> 00:04:26.870
use and then it won't include
the other ones, right?

61
00:04:26.870 --> 00:04:28.022
That is like the benefit there,

62
00:04:28.022 --> 00:04:29.950
potentially, it doesn't
always work out that way.

63
00:04:32.590 --> 00:04:35.905
&gt;&gt; Brian Holt: For me it just helps me to
be explicit that I know this only uses

64
00:04:35.905 --> 00:04:37.340
render from react-dom.

65
00:04:37.340 --> 00:04:40.628
So what I wanted to get to is,
this actually isn't helpful,

66
00:04:40.628 --> 00:04:43.849
because if you include react-dom
you get the whole thing,

67
00:04:43.849 --> 00:04:46.370
because it's not packaged for
tree shaking.

68
00:04:46.370 --> 00:04:50.385
And then the other thing is that there's
not a lot of wasteful stuff inside

69
00:04:50.385 --> 00:04:53.710
react-dom, so there's not a lot
to tree shake out anyway.

70
00:04:53.710 --> 00:05:00.090
So now if we save this and go back over to
our project, it should still work, right?

71
00:05:00.090 --> 00:05:05.420
So now, you have to run the project
of course, npm run dev, like that.

72
00:05:13.320 --> 00:05:17.978
&gt;&gt; Brian Holt: Once it's finished
building, you can see this looks like a JS

73
00:05:17.978 --> 00:05:22.743
file that's loading,
it's only loading this app.js file.

74
00:05:25.648 --> 00:05:27.096
&gt;&gt; Brian Holt: And
it's not loading anything else,

75
00:05:27.096 --> 00:05:29.720
it's not loading like those
other files from the repo.

76
00:05:29.720 --> 00:05:33.713
So you can see that that reacts now being
included inside of our app.js instead of

77
00:05:33.713 --> 00:05:35.427
being loaded from some other CDN.

78
00:05:35.427 --> 00:05:39.826
And you can see that it's much
larger than it used to be here,

79
00:05:39.826 --> 00:05:42.588
now it's 965 KB instead of being,

80
00:05:42.588 --> 00:05:47.100
like the probably 5 it was before
because it includes React.

81
00:05:48.520 --> 00:05:52.990
Now keep in mind this is the development
environment which means it's massive.

82
00:05:52.990 --> 00:05:56.470
If I patched this for
production it would be much, much smaller.

83
00:05:56.470 --> 00:06:00.496
So don't worry about file sizes until
you actually do the production builds,

84
00:06:00.496 --> 00:06:01.845
so just keep that in mind.

85
00:06:05.220 --> 00:06:10.368
&gt;&gt; Brian Holt: Right now,
this project would probably be 35 KB,

86
00:06:10.368 --> 00:06:13.768
I guess, cuz React is about 32.

