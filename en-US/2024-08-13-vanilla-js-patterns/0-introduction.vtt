WEBVTT

1
00:00:00.000 --> 00:00:03.696
&gt;&gt; Maximiliano Firtman: Hello, and
welcome to Practical Web App Patterns,

2
00:00:03.696 --> 00:00:05.630
with Vanilla JavaScript.

3
00:00:05.630 --> 00:00:10.581
So, my name is Maximiliano Firtman,
I can go by Max, I know it's a long name.

4
00:00:10.581 --> 00:00:14.217
I'm Firt on X, Firtman on GitHub,

5
00:00:14.217 --> 00:00:18.348
LinkedIn, and other social networks.

6
00:00:18.348 --> 00:00:21.940
Firt.dev, my website,
let me go really quickly about myself.

7
00:00:21.940 --> 00:00:25.202
I'm from Argentina,
I live in Buenos Aires, and

8
00:00:25.202 --> 00:00:29.163
I'm a mobile web developer, so
I have been doing web apps and

9
00:00:29.163 --> 00:00:34.232
web development since 1996,
1998, with JavaScript, actually.

10
00:00:34.232 --> 00:00:39.861
I created more than, published, actually,
more than 150 web apps, most of them,

11
00:00:39.861 --> 00:00:45.361
I would say that probably 90% of those web
apps were actually Vanilla JavaScript.

12
00:00:45.361 --> 00:00:49.514
Then I also got into the mobile space,
so doing mobile apps.

13
00:00:49.514 --> 00:00:54.247
And I authored several books and
a lot of courses on these topics,

14
00:00:54.247 --> 00:00:59.766
typically around mobile development,
web development with JavaScript.

15
00:00:59.766 --> 00:01:06.043
Also some, let's say, framework-related
courses, and web performance.

16
00:01:06.043 --> 00:01:10.625
So, my usual topics
are around those ideas.

17
00:01:10.625 --> 00:01:14.765
So, I published many books for
O'Reilly Media, and

18
00:01:14.765 --> 00:01:18.080
the last book that I
authored is Learn PWA.

19
00:01:18.080 --> 00:01:23.256
That is free, available on web.dev,
talking about progressive web apps.

20
00:01:23.256 --> 00:01:25.148
And at Frontend Masters,

21
00:01:25.148 --> 00:01:29.707
you will find a lot of courses
that I have authored on Frontend.

22
00:01:29.707 --> 00:01:33.357
So for example, Vanilla JavaScript,
there is one on Vanilla JavaScript.

23
00:01:33.357 --> 00:01:38.904
Data storage, we have hardware,
APIs, progressive web apps.

24
00:01:38.904 --> 00:01:43.602
On mobile apps, with flutter,
Kotlin, Swift for iOS, for

25
00:01:43.602 --> 00:01:47.945
Android, and also for
Flutter, for PWA development.

26
00:01:47.945 --> 00:01:53.115
And also some backend courses,
for example, on Go and PHP.

27
00:01:53.115 --> 00:01:58.602
So after saying that, what we're going
to cover today in this workshop.

28
00:01:58.602 --> 00:02:01.357
So we will talk about design patterns, and

29
00:02:01.357 --> 00:02:06.498
specifically talking about design
patterns for Vanilla JavaScript web apps.

30
00:02:06.498 --> 00:02:09.267
That is part of what we're going to do.

31
00:02:09.267 --> 00:02:13.432
So we will start talking about
what a design pattern is, and

32
00:02:13.432 --> 00:02:16.613
we will apply many of
those design patterns.

33
00:02:16.613 --> 00:02:17.411
Not all of them,

34
00:02:17.411 --> 00:02:20.617
because we will need probably a month
if we wanna apply all of them.

35
00:02:20.617 --> 00:02:24.620
And also, you will see later that it's
not a good idea to actually implement all

36
00:02:24.620 --> 00:02:26.368
the design patterns all the time.

37
00:02:26.368 --> 00:02:31.417
So we are going to implement and
apply some of those design patterns

38
00:02:31.417 --> 00:02:36.568
that we will see on three different
projects that we will see later.

39
00:02:36.568 --> 00:02:41.511
So we will start talking about classic
design patterns in software design,

40
00:02:41.511 --> 00:02:44.148
and how we can apply them in JavaScript.

41
00:02:44.148 --> 00:02:51.483
So, we know that JavaScript is a flexible
language compared with Java, C#, or C++.

42
00:02:51.483 --> 00:02:56.330
So we don't need to actually copy
exactly the recipes that were applied

43
00:02:56.330 --> 00:02:58.767
in other languages in JavaScript.

44
00:02:58.767 --> 00:03:03.605
But we can take the ideas, we can
understand why that idea is important and

45
00:03:03.605 --> 00:03:06.337
the problem that the idea is solving, and

46
00:03:06.337 --> 00:03:11.270
then trying to apply that in JavaScript
for a Vanilla JavaScript project.

47
00:03:11.270 --> 00:03:15.650
We will get then into some specific
design patterns that we can apply for

48
00:03:15.650 --> 00:03:17.404
single page applications.

49
00:03:17.404 --> 00:03:22.814
So when you have full JavaScript client
side application that is just one HTML,

50
00:03:22.814 --> 00:03:24.523
so one HTTP navigation.

51
00:03:24.523 --> 00:03:29.708
And from there you are changing routes or
pages directly with JavaScript

52
00:03:29.708 --> 00:03:34.473
using the DOM API, some multi
page application design patterns.

53
00:03:34.473 --> 00:03:39.071
So if you are creating just a web
app that has different HTMLs, and

54
00:03:39.071 --> 00:03:44.181
you just are creating links between
those HTMLs like a classic website.

55
00:03:44.181 --> 00:03:48.922
Well, we can still apply some
design patterns to improve

56
00:03:48.922 --> 00:03:52.097
the experience that we have as users.

57
00:03:52.097 --> 00:03:56.160
And then we will get into data and
state management design patterns, so

58
00:03:56.160 --> 00:03:59.749
when typically this is useful for
a large scale applications,

59
00:03:59.749 --> 00:04:02.204
when you have a lot of
data that you manage.

60
00:04:02.204 --> 00:04:06.176
Well, some ideas that you can apply,
and finally,

61
00:04:06.176 --> 00:04:12.060
some other advanced ideas that are coming
to the web app design pattern work.

62
00:04:12.060 --> 00:04:18.124
So pre-requisites, so, you should
have experience with JavaScript,

63
00:04:18.124 --> 00:04:23.993
and prefer Vanilla JavaScript basic
concepts to understand the DOM and

64
00:04:23.993 --> 00:04:25.583
some other ideas.

65
00:04:25.583 --> 00:04:31.015
Such as using the History API
to work with different routes,

66
00:04:31.015 --> 00:04:35.284
and a web browser,
you just need a web browser.

67
00:04:35.284 --> 00:04:40.788
For only one design pattern, at least
at the time of recording this Course,

68
00:04:40.788 --> 00:04:45.088
you will need Chrome Canary or
Chrome Beta, actually, for

69
00:04:45.088 --> 00:04:48.715
Chrome 1.26, but only for
one special part.

70
00:04:48.715 --> 00:04:52.137
So in case you don't have it,
you can go and download Chrome Canary,

71
00:04:52.137 --> 00:04:54.912
to test that particular feature
that we will see later.

72
00:04:54.912 --> 00:05:01.929
Of course, if you have Chrome stable 1.26,
it's goonna work anyway.

73
00:05:01.929 --> 00:05:05.940
A code editor, I'm going to use Visual
Studio code, but whatever works for you.

74
00:05:05.940 --> 00:05:10.106
We don't need Node.js, we are not going
to use any library or any dependency.

75
00:05:10.106 --> 00:05:14.667
So no Node modules,
no NPM install, nothing, okay?

76
00:05:14.667 --> 00:05:21.291
It's just pure HTML, CSS, and JavaScript,
that's all we are going to write today.

77
00:05:21.291 --> 00:05:24.699
So after saying that, this is the URL for

78
00:05:24.699 --> 00:05:29.814
the worship,
firtman.github.io/webapp-patterns,

79
00:05:29.814 --> 00:05:34.724
there you will find a step by
step guide of what we will cover

80
00:05:34.724 --> 00:05:39.652
later when we will start
applying these design patterns.

81
00:05:39.652 --> 00:05:44.013
Also, later I will show you where
you can go and find the repo for

82
00:05:44.013 --> 00:05:47.320
the projects,
you have the link there as well.

83
00:05:47.320 --> 00:05:49.407
And also, you have a copy of the slides.

