WEBVTT

1
00:00:00.000 --> 00:00:02.886
&gt;&gt; Maximiliano Firtman: What's
the next step that we,

2
00:00:02.886 --> 00:00:06.995
what's the next thing
that we can add here?

3
00:00:06.995 --> 00:00:13.209
By the way, if you are following along,
just in case, we are now in chapter three.

4
00:00:13.209 --> 00:00:15.084
We were using lazy load.

5
00:00:15.084 --> 00:00:19.387
Now we are chapter three,
lesson three, adding view transitions.

6
00:00:19.387 --> 00:00:21.987
So, let's understand what's the idea.

7
00:00:21.987 --> 00:00:26.331
So every time I'm going to the home,
clicking the details,

8
00:00:26.331 --> 00:00:30.861
I don't see any transition and
also, there is kind of a blink.

9
00:00:30.861 --> 00:00:35.625
Can you see that there is a blink
that appears sometimes so

10
00:00:35.625 --> 00:00:41.594
everything goes white, so it doesn't
look nice from an point of view.

11
00:00:41.594 --> 00:00:49.636
So, there is a way that we have today
to enable view page transitions.

12
00:00:49.636 --> 00:00:55.202
View page transitions, it's something
that it appears, let me see,

13
00:00:55.202 --> 00:01:01.166
I do have a, let me go to, there is a link
here, so I will open the link first.

14
00:01:01.166 --> 00:01:05.975
Here you have the documentation
from the Chrome team that they

15
00:01:05.975 --> 00:01:09.036
were the first one implementing this.

16
00:01:09.036 --> 00:01:11.775
But again,
this is coming to Safari as well.

17
00:01:11.775 --> 00:01:17.400
Right now, it's in the beta, and
it's called the build transition API.

18
00:01:17.400 --> 00:01:21.347
And the whole idea is that when
you change pages or views or

19
00:01:21.347 --> 00:01:24.965
however you wanna call this,
because, remember,

20
00:01:24.965 --> 00:01:29.014
in Vanilla JavaScript,
there is nothing known as a page.

21
00:01:29.014 --> 00:01:32.486
But when we change the route,
the page, a view,

22
00:01:32.486 --> 00:01:38.250
we can animate that change in a simple
way without getting into CSS transitions,

23
00:01:38.250 --> 00:01:41.833
without touching the elements manually,
okay?

24
00:01:41.833 --> 00:01:43.799
So let's see how to do that.

25
00:01:43.799 --> 00:01:48.077
To enable transitions,
you need to go to the router.

26
00:01:48.077 --> 00:01:51.252
The router.js inside services,

27
00:01:51.252 --> 00:01:56.287
is here the one that is changing
the contents on the page

28
00:01:56.287 --> 00:02:01.549
in this particular vanilla
JavaScript Project, okay?

29
00:02:01.549 --> 00:02:04.100
So, it's there where we're doing that.

30
00:02:04.100 --> 00:02:09.102
So we need to find a moment
that is actually here,

31
00:02:09.102 --> 00:02:16.544
line 38 this is the one that is removing
the current page from the DOM and

32
00:02:16.544 --> 00:02:22.287
adding the new page to the DOM,
okay, can you see that?

33
00:02:22.287 --> 00:02:25.173
So this is the the place
where it's doing that.

34
00:02:25.173 --> 00:02:28.388
So it's removing the previous page and
adding the new page.

35
00:02:28.388 --> 00:02:29.763
That's how that works.

36
00:02:29.763 --> 00:02:36.411
Well, here is the part where maybe
we wanna do some change here.

37
00:02:36.411 --> 00:02:41.506
So the first thing that I'm going to do,
are you gonna understand

38
00:02:41.506 --> 00:02:46.154
while a second,
I'm going to wrap this code in a function.

39
00:02:46.154 --> 00:02:51.820
So I will call this function changePage.

40
00:02:51.820 --> 00:02:56.097
Can I do a function inside
the function in JavaScript?

41
00:02:56.097 --> 00:02:57.692
Can I create a function
inside the function?

42
00:02:57.692 --> 00:03:00.885
Because this is a function inside
the function inside an if actually.

43
00:03:00.885 --> 00:03:02.227
Can I do that?

44
00:03:02.227 --> 00:03:06.152
Yes, I know it's not common,
and some people were thinking,

45
00:03:06.152 --> 00:03:09.793
wow what are you doing, but
yeah that's perfectly fine.

46
00:03:09.793 --> 00:03:12.538
It's a local function to the function,
actually.

47
00:03:12.538 --> 00:03:16.947
If you don't like it,
maybe you prefer this syntax.

48
00:03:16.947 --> 00:03:18.433
It's just the same.

49
00:03:18.433 --> 00:03:19.502
Maybe you like that syntax.

50
00:03:19.502 --> 00:03:20.396
It's just the same, okay?

51
00:03:20.396 --> 00:03:22.210
So pick the one you want.

52
00:03:22.210 --> 00:03:28.517
I did that because to enable transitions,
this is how it works.

53
00:03:28.517 --> 00:03:34.101
You say document.startViewTransition.

54
00:03:34.101 --> 00:03:38.382
You pass a function as an argument, and

55
00:03:38.382 --> 00:03:43.193
that function should make all the changes.

56
00:03:43.193 --> 00:03:49.619
So for example,
I should call changePage function.

57
00:03:49.619 --> 00:03:53.096
Let me go back to this one.

58
00:03:53.096 --> 00:03:56.237
I think it's gonna be
easier to understand.

59
00:03:56.237 --> 00:03:58.656
Okay, so why is that?

60
00:03:58.656 --> 00:04:03.253
So when you call startView transition,
the browser is kind of taking

61
00:04:03.253 --> 00:04:07.780
a snapshot of the DOM and how the DOM
looks like on the screen, okay?

62
00:04:07.780 --> 00:04:09.216
It's taking a snapshot.

63
00:04:09.216 --> 00:04:14.685
Then you pass a function and
you do all your changes.

64
00:04:14.685 --> 00:04:19.982
After your function finishes,
the browser will take another snapshot.

65
00:04:19.982 --> 00:04:23.207
It in like an internal buffer, okay?

66
00:04:23.207 --> 00:04:25.503
Of the DOM and how it looks like and

67
00:04:25.503 --> 00:04:30.179
then it will make a visual transition,
between the two snapshots.

68
00:04:30.179 --> 00:04:32.163
Does it make sense?

69
00:04:32.163 --> 00:04:36.414
Yeah, the problem with this
is that if the browser is not

70
00:04:36.414 --> 00:04:39.318
supporting a startView transition.

71
00:04:39.318 --> 00:04:46.660
Then our router is broken because this
will give me an error it's not a function.

72
00:04:46.660 --> 00:04:49.360
So I should check if I do have or

73
00:04:49.360 --> 00:04:54.545
not have startView transition,
so if I do have the API and

74
00:04:54.545 --> 00:05:00.281
this is known as progressive
enhancement as a design pattern.

75
00:05:00.281 --> 00:05:04.596
So if, if it's not there,
is the API is not there, well,

76
00:05:04.596 --> 00:05:09.895
I will just call change space as it
was before, without the animation.

77
00:05:09.895 --> 00:05:11.142
That's why I needed a function.

78
00:05:11.142 --> 00:05:15.182
So I can call it twice,
if the API is there or

79
00:05:15.182 --> 00:05:19.010
if it's not there, okay, make sense?

80
00:05:19.010 --> 00:05:22.167
So just with that change,

81
00:05:22.167 --> 00:05:27.055
I could try to see if something happens.

82
00:05:27.055 --> 00:05:30.910
So let me go back to my,
let's close ToDo masters.

83
00:05:30.910 --> 00:05:32.963
Let me refresh my page.

84
00:05:36.970 --> 00:05:41.570
&gt;&gt; Maximiliano Firtman: And now I will get
into details I'm not sure if you recognize

85
00:05:41.570 --> 00:05:42.771
a difference.

86
00:05:42.771 --> 00:05:44.836
Do you see a difference?

87
00:05:44.836 --> 00:05:49.596
From before,
there is a crossfade transition that is

88
00:05:49.596 --> 00:05:54.269
automatically happening
between the page change.

89
00:05:54.269 --> 00:06:00.533
It also works when you use
the browser back and forward buttons,

90
00:06:00.533 --> 00:06:05.069
because that's how our router works, okay?

91
00:06:05.069 --> 00:06:10.401
So I think it's actually pretty cool
that just by calling that function,

92
00:06:10.401 --> 00:06:12.216
you have this behavior.

93
00:06:12.216 --> 00:06:17.116
Let's put it like this so
we can see without the simulator,

94
00:06:17.116 --> 00:06:21.526
so it's better I don't see
that blank moment because

95
00:06:21.526 --> 00:06:26.337
it's freezing the change the previous and
the next part.

96
00:06:26.337 --> 00:06:29.390
Do you have any question at this point?

97
00:06:29.390 --> 00:06:33.338
&gt;&gt; Student: Are there any polyfills
available for that or is it not worth it?

98
00:06:33.338 --> 00:06:34.536
&gt;&gt; Maximiliano Firtman: It
can be polyfilled,

99
00:06:34.536 --> 00:06:37.126
to be honest I haven't searched for
a polyfill.

100
00:06:37.126 --> 00:06:40.712
It can be polyfilled with- CSS animations,
but

101
00:06:40.712 --> 00:06:45.703
probably the only thing that you
can polyfill is something simple.

102
00:06:45.703 --> 00:06:50.366
Because now we will start adding
something on the CSS side and

103
00:06:50.366 --> 00:06:56.219
the polyfill will get more complicated
to actually parse that CSS content,

104
00:06:56.219 --> 00:06:59.246
to understand how to do the animation.

105
00:06:59.246 --> 00:07:01.092
So it can be polyfill.

106
00:07:01.092 --> 00:07:05.478
So instead of calling, I mean,
you could start here an animation

107
00:07:05.478 --> 00:07:09.487
using the Animations API,
the normal Web Animations API.

108
00:07:09.487 --> 00:07:11.592
It's also possible, okay?

109
00:07:11.592 --> 00:07:13.358
But let's see how cool this is.

110
00:07:13.358 --> 00:07:15.847
Now I will go to CSS.

111
00:07:15.847 --> 00:07:17.961
And now we will write some CSS.

112
00:07:17.961 --> 00:07:22.225
There is a new pseudo-element, so

113
00:07:22.225 --> 00:07:27.485
double column, view-transition-old,

114
00:07:27.485 --> 00:07:32.743
with a name and view-transition-new that

115
00:07:32.743 --> 00:07:38.016
will be applied to the old and
the new pages.

116
00:07:38.016 --> 00:07:40.112
And we're going to start
talking about root here.

117
00:07:40.112 --> 00:07:42.609
You will explain what this is in a sec but

118
00:07:42.609 --> 00:07:46.932
actually root means the whole animation,
the default animation.

119
00:07:46.932 --> 00:07:51.978
So I can do something and actually I'm
going to probably define one property for

120
00:07:51.978 --> 00:07:55.604
both selectors and
I can define the animation duration.

121
00:07:55.604 --> 00:08:01.327
I can change animation properties,
for example, I can save 4 seconds.

122
00:08:01.327 --> 00:08:05.543
So now, if I refresh,
you can even see the first load,

123
00:08:05.543 --> 00:08:09.592
of course four seconds,
it takes too much, right?

124
00:08:09.592 --> 00:08:14.584
But now I can click there and
I can see the animation slowly fading

125
00:08:14.584 --> 00:08:18.580
in four seconds every time
you make a change there.

126
00:08:18.580 --> 00:08:23.386
So, I mean, it's okay, it's not so bad.

127
00:08:23.386 --> 00:08:26.276
Yeah, maybe five seconds is not good,
okay?

128
00:08:26.276 --> 00:08:29.023
But you can play with different
values until you're happy.

129
00:08:29.023 --> 00:08:31.149
Typically, it's less than half a second.

130
00:08:31.149 --> 00:08:33.832
But take a look at this part, okay?

131
00:08:33.832 --> 00:08:36.387
Pay attention to that part.

132
00:08:36.387 --> 00:08:39.252
Can you see that?

133
00:08:39.252 --> 00:08:43.997
The logo is moving sometimes,
which makes a weird effect.

134
00:08:43.997 --> 00:08:46.931
So we will solve that later, okay?

135
00:08:46.931 --> 00:08:51.776
But before that, let me tell you that
you can customize the animation.

136
00:08:51.776 --> 00:08:56.353
So by default, it's a crossfade, so
one goes out, the other one goes in, okay?

137
00:08:56.353 --> 00:08:59.495
That's the default between
the two snapshots.

138
00:08:59.495 --> 00:09:01.956
But I can customize that, and

139
00:09:01.956 --> 00:09:07.668
I already have one here that actually
was created by the Chrome team,

140
00:09:07.668 --> 00:09:12.809
so it's not my let's go to adding
view transitions this one.

141
00:09:12.809 --> 00:09:14.561
So I'm just going to copy and

142
00:09:14.561 --> 00:09:18.435
paste this doesn't worth the time
to write this from scratch.

143
00:09:18.435 --> 00:09:22.276
Okay, so a lot of web animation
things here going on.

144
00:09:22.276 --> 00:09:23.855
So I'm going to paste this here.

145
00:09:23.855 --> 00:09:26.660
So now this is creating
a keyframe based animation.

146
00:09:26.660 --> 00:09:28.752
This is web animations in CSS, and

147
00:09:28.752 --> 00:09:33.168
then applying different animation from
the old one and from the new one.

148
00:09:33.168 --> 00:09:36.044
So it's changing what
happens with the old one and

149
00:09:36.044 --> 00:09:38.314
what happened with the new one, okay?

150
00:09:38.314 --> 00:09:43.213
so, just by applying CSS here
with the not changing JavaScript,

151
00:09:43.213 --> 00:09:45.453
let's see what happens now.

152
00:09:45.453 --> 00:09:51.808
So, now I have an animation
that is similar to apps.

153
00:09:51.808 --> 00:09:58.054
It's kind of moving around when you
change pages, but we do have a problem.

154
00:09:58.054 --> 00:10:00.830
The header is also moving.

155
00:10:00.830 --> 00:10:01.900
Can you see that?

156
00:10:01.900 --> 00:10:05.283
And it doesn't look nice, right?

157
00:10:05.283 --> 00:10:08.244
So it should, I mean,
the header should stay there.

158
00:10:08.244 --> 00:10:08.989
Can we do that?

159
00:10:08.989 --> 00:10:10.991
Yes, we can.

160
00:10:10.991 --> 00:10:14.543
With this API,
we can create animation groups, or

161
00:10:14.543 --> 00:10:17.110
actually build transition groups.

162
00:10:17.110 --> 00:10:22.619
That's a real name, to do that,
we can do that from JavaScript or

163
00:10:22.619 --> 00:10:25.535
from CSS, but I can do it from CSS.

164
00:10:25.535 --> 00:10:29.589
I can just point to that header but
in my CSS,

165
00:10:29.589 --> 00:10:36.289
we can get it with the header that is
an immediate descendant of the body.

166
00:10:36.289 --> 00:10:41.650
That's actually the HTML element,
if we inspect here,

167
00:10:41.650 --> 00:10:45.570
it's the header inside the body, okay?

168
00:10:45.570 --> 00:10:47.214
Is that one?

169
00:10:47.214 --> 00:10:51.716
To actually separate that one
from the animation group,

170
00:10:51.716 --> 00:10:55.202
we need to change
the view transition name.

171
00:10:55.202 --> 00:10:58.737
And we put any name like main header or

172
00:10:58.737 --> 00:11:03.196
heather any string will
work without spaces.

173
00:11:03.196 --> 00:11:08.374
Any identifier should be
a valid CSS identifier.

174
00:11:08.374 --> 00:11:12.689
If I do that, if I refresh now.

175
00:11:12.689 --> 00:11:16.553
It gives me a 404 because I'm in a URL.

176
00:11:16.553 --> 00:11:17.610
Let's go to Home.

177
00:11:17.610 --> 00:11:22.914
Now you can see that we are not
seeing that animation to the head.

178
00:11:22.914 --> 00:11:26.253
We are still having some thing,
because sometimes appear as a scroll bar,

179
00:11:26.253 --> 00:11:27.688
sometimes we have a scroll bar.

180
00:11:27.688 --> 00:11:31.527
Sometimes we don't have a scroll bar, so
that's why it's kind of moving a little

181
00:11:31.527 --> 00:11:34.381
bit, but it won't happen,
probably on the mobile device.

182
00:11:34.381 --> 00:11:39.570
But anyway,
I'm not seeing that animation anymore.

183
00:11:39.570 --> 00:11:46.162
With that name, now if I want to,
I can even change instead of root,

184
00:11:46.162 --> 00:11:51.378
I can use this ID here, so
I can change the animation.

185
00:11:51.378 --> 00:11:55.572
Remember, I can say 0, or
it can be faster or slower, and

186
00:11:55.572 --> 00:11:58.149
I can change the type of animation.

187
00:11:58.149 --> 00:12:03.421
So I can animate elements
with different animations.

188
00:12:03.421 --> 00:12:06.635
It can get really complex,
as you can understand, probably right?

189
00:12:06.635 --> 00:12:11.140
So, now it's getting better.

190
00:12:11.140 --> 00:12:15.399
There are still not in our final step.

191
00:12:15.399 --> 00:12:17.662
I think you will like
the final step anyway.

192
00:12:17.662 --> 00:12:20.148
You can see that when you are doing
single page applications.

193
00:12:20.148 --> 00:12:24.753
When you apply this design pattern,
it gets a better user experience, okay?

194
00:12:24.753 --> 00:12:26.392
Much better user experience.

