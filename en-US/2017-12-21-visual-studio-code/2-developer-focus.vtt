WEBVTT

1
00:00:00.300 --> 00:00:03.482
&gt;&gt; Mike North: Visual Studio Code
is an open source project, and

2
00:00:03.482 --> 00:00:08.882
although the binaries are proprietary,
the code base is completely open, right?

3
00:00:08.882 --> 00:00:12.562
You can look on GitHub
at Microsoft/vscode, and

4
00:00:12.562 --> 00:00:16.450
you can see exactly what's going on here.

5
00:00:16.450 --> 00:00:20.490
A lot of the interesting stuff
is sort of it exists in official

6
00:00:20.490 --> 00:00:25.580
plugins of sorts that are brought into
the base Visual Studio Code experience.

7
00:00:25.580 --> 00:00:30.550
But it's really nice to see some of
the work that Microsoft is doing

8
00:00:30.550 --> 00:00:34.599
to open up their efforts around this.

9
00:00:36.370 --> 00:00:41.230
One of the benefits we're going to enjoy
as we start to dive deeper into this

10
00:00:41.230 --> 00:00:46.710
project is the close collaboration that's
happened between the VS Code team,

11
00:00:46.710 --> 00:00:50.220
the Microsoft Edge team,
the Visual Studio team.

12
00:00:50.220 --> 00:00:55.544
And by that we mean the sort of
heavier IDE-like experience.

13
00:00:55.544 --> 00:00:57.256
And then finally, the TypeScript team.

14
00:00:57.256 --> 00:01:01.723
So all of these are sort of
developer-oriented teams that are trying

15
00:01:01.723 --> 00:01:04.735
to build great tools for
us to build apps with.

16
00:01:04.735 --> 00:01:11.217
And you start to see that there's
a lot of good symbiosis going on here,

17
00:01:11.217 --> 00:01:17.176
I guess is the right word, or
synergy to use a business buzzword.

18
00:01:17.176 --> 00:01:21.454
In particular,
we see it like TypeScript and VS Code,

19
00:01:21.454 --> 00:01:26.962
they seem to be coordinating really well.
&gt;&gt; Mike North: So

20
00:01:26.962 --> 00:01:32.097
one of the benefits of having started
this project only a couple of years

21
00:01:32.097 --> 00:01:37.659
ago is they get to learn from other
past lessons, other attempts that didn't

22
00:01:37.659 --> 00:01:42.984
sort of take off in the JavaScript
community in terms of providing tools.

23
00:01:42.984 --> 00:01:47.200
Heavier IDEs are definitely
not the way to go, right?

24
00:01:47.200 --> 00:01:51.743
There are people that use WebStorm, and
are productive with it, and enjoy it.

25
00:01:51.743 --> 00:01:57.610
But oftentimes they will find that their
whole team does not want to use WebStorm.

26
00:01:57.610 --> 00:02:02.347
Or they're an outlier,
a successful outlier and no judgment here.

27
00:02:02.347 --> 00:02:04.340
If that works for you that's great.

28
00:02:04.340 --> 00:02:09.453
But we wanna empower a broad
swath of the developer community.

29
00:02:09.453 --> 00:02:14.467
And in particular when I started using
these heavier IDEs, it's like if I open up

30
00:02:14.467 --> 00:02:19.482
a JavaScript project in something like
IntelliJ, I find it's about a two-week

31
00:02:19.482 --> 00:02:23.859
process of as I hit walls disabling
pieces of functionality, right?

32
00:02:23.859 --> 00:02:28.677
Telling it, no, I do not want you to watch
Node modules and to try to index all of

33
00:02:28.677 --> 00:02:32.918
those dependencies that's potentially
thousands of files there.

34
00:02:32.918 --> 00:02:37.773
Just focus on the code that I'm writing
until you end up having to sort of beat it

35
00:02:37.773 --> 00:02:38.962
into submission.

36
00:02:38.962 --> 00:02:42.501
Once you get it there,
it can be nice, but it is a hurdle.

37
00:02:42.501 --> 00:02:46.921
It is sort of pain that users have
to go through before they can

38
00:02:46.921 --> 00:02:50.476
actually get to where they
feel like they can move

39
00:02:50.476 --> 00:02:54.263
fluidly.
&gt;&gt; Mike North: So

40
00:02:54.263 --> 00:02:59.335
code does not impose a lot of opinions on
users, and I'm talking about Vim here.

41
00:02:59.335 --> 00:03:04.222
That is an example of something that
imposes opinions on users where you

42
00:03:04.222 --> 00:03:08.139
have to learn all of the magic
keybinding incantations.

43
00:03:08.139 --> 00:03:13.303
And I wish that my my brain did
not reject Vim in the way that

44
00:03:13.303 --> 00:03:21.140
it does cuz I've made significant efforts
to try to become proficient with that.

45
00:03:21.140 --> 00:03:26.048
Plenty of developers swear by it and claim
that they can move faster and edit code.

46
00:03:26.048 --> 00:03:30.420
And they look like wizards when
they're selecting five lines and

47
00:03:30.420 --> 00:03:35.042
editing them all simultaneously,
but you have to learn all of that.

48
00:03:35.042 --> 00:03:37.577
You have to sort pick
that productivity hit as

49
00:03:37.577 --> 00:03:40.500
your transition into Vim
from something else.

50
00:03:40.500 --> 00:03:44.080
One of the great things about
code is that you can install

51
00:03:44.080 --> 00:03:48.760
a key mapping from whatever editor
you are already familiar with.

52
00:03:48.760 --> 00:03:54.133
And you should be able to basically
keep using the same keystrokes,

53
00:03:54.133 --> 00:03:57.998
keep practicing your same familiar habits,
and

54
00:03:57.998 --> 00:04:01.403
the editor will do what
you expect it to do.

55
00:04:01.403 --> 00:04:03.290
So you get to bring your
keybindings with you.

56
00:04:04.620 --> 00:04:06.477
And I love to see that we favor,

57
00:04:06.477 --> 00:04:10.414
code teams to favor open standards
over the proprietary format.

58
00:04:10.414 --> 00:04:14.998
So these files like .jsconfig or
.editorconfig,

59
00:04:14.998 --> 00:04:18.748
they actually predate Visual Studio, but

60
00:04:18.748 --> 00:04:23.480
they work equally well in a Sublime or
in an Atom.

61
00:04:23.480 --> 00:04:27.956
Sometimes you need a plugin to find
something that will look at these files

62
00:04:27.956 --> 00:04:31.650
and to incorporate them into
your development experience.

63
00:04:31.650 --> 00:04:36.989
But it's good that the existing
standards are being adopted rather than

64
00:04:36.989 --> 00:04:42.693
some special magic XML file that like
it's just for this particular editor.

65
00:04:42.693 --> 00:04:47.683
This means that we don't have to
necessarily, there is value in checking

66
00:04:47.683 --> 00:04:52.512
these files into a project and
sharing them amongst the team compared to

67
00:04:52.512 --> 00:04:58.228
the question of whether we should have
the Eclipse project, the IntelliJ project,

68
00:04:58.228 --> 00:05:03.322
the NetBeans project, all as files
that are checked in, all maintained.

69
00:05:03.322 --> 00:05:06.136
Each of them has a different way
of maintaining their tasks and

70
00:05:06.136 --> 00:05:07.450
things like that.

71
00:05:07.450 --> 00:05:12.180
So it is good to adopt what already
exists rather than to find something new.

