WEBVTT

1
00:00:00.280 --> 00:00:05.020
&gt;&gt; Mike: We can activate type checking in
Visual Studio Code in one of two ways.

2
00:00:05.020 --> 00:00:08.280
If you're working with a project
that already involves typescript,

3
00:00:08.280 --> 00:00:12.870
you would go to this tsconfig file,
which is in the root of your project, and

4
00:00:12.870 --> 00:00:15.946
you would add this to your configuration.

5
00:00:15.946 --> 00:00:20.430
Say checkJs : true, that means it's not
just gonna look at the typescript files

6
00:00:20.430 --> 00:00:25.030
and make sure the types are good there,
it'll also check your regular JavaScript.

7
00:00:25.030 --> 00:00:29.820
Additionally, regardless of what kind of
JavaScript program you're working with,

8
00:00:29.820 --> 00:00:34.020
you can add this comment as
the first line of the file and

9
00:00:34.020 --> 00:00:37.690
type checking will be done
on that particular file.

10
00:00:37.690 --> 00:00:43.440
So if I go to, I'll need to create a new
file here cuz I blew that one away.

11
00:00:45.440 --> 00:00:51.230
Collapse all.
&gt;&gt; Mike: Okay,

12
00:00:51.230 --> 00:00:57.254
so if I have something like this, let
&gt;&gt; Mike: Let

13
00:00:57.254 --> 00:01:05.331
x = 15.
&gt;&gt; Mike: So

14
00:01:05.331 --> 00:01:08.270
here I am messing with the types.

15
00:01:08.270 --> 00:01:10.450
No complaints, but when I add this,

16
00:01:10.450 --> 00:01:15.040
you can see we get type of 157 is
not assignable to type number.

17
00:01:16.540 --> 00:01:18.990
So it's basically said okay,
you initialized this.

18
00:01:18.990 --> 00:01:22.390
If I hover over x it's
gonna say that's a number.

19
00:01:23.640 --> 00:01:30.410
And you better keep it a number because
we don't flip flop around types anymore.

20
00:01:30.410 --> 00:01:34.800
Particularly, people make some mistakes
in this area where they flip-flop

21
00:01:34.800 --> 00:01:38.410
between types, often when they're
reading from an input or something.

22
00:01:38.410 --> 00:01:41.860
So if you've got an input and
you expect a number to be there,

23
00:01:41.860 --> 00:01:46.420
you're basically gonna usually
get text out of an input.

24
00:01:46.420 --> 00:01:51.430
So if you start out with
initially my value is 15, and

25
00:01:51.430 --> 00:01:56.860
let's two-way bind this to the value of
this input, it'll end up being a number,

26
00:01:56.860 --> 00:02:00.790
I mean, being a string as soon as
the user hits a keystroke, usually.

27
00:02:00.790 --> 00:02:06.962
So that is how to use type checking
in regular JavaScript, ts-check.

