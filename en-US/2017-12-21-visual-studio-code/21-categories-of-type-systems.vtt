WEBVTT

1
00:00:00.380 --> 00:00:03.070
&gt;&gt; Mike North: Hopefully I've convinced
you of the importance of types.

2
00:00:04.350 --> 00:00:09.170
It is of benefit to you to write your
code in a way that is consistent and

3
00:00:09.170 --> 00:00:11.900
aligned with a strongly typed language.

4
00:00:11.900 --> 00:00:15.690
So there are two, there are many
ways to categorize type systems.

5
00:00:15.690 --> 00:00:17.300
I'm just gonna worry about one for now.

6
00:00:17.300 --> 00:00:21.790
One type systems are either nominal or
structural.

7
00:00:21.790 --> 00:00:28.290
Nominally typed or nominal typing means
literally just based on name only.

8
00:00:28.290 --> 00:00:32.140
So if you say, I'm a function and
I take as an argument,

9
00:00:33.740 --> 00:00:36.900
I take like a cart item.

10
00:00:36.900 --> 00:00:40.740
Say we have a representation of an item
that goes into our shopping cart.

11
00:00:40.740 --> 00:00:43.130
So I'm function I take a cart item.

12
00:00:43.130 --> 00:00:47.681
You must give me a cart item, or I'm going
to say there's been a type mismatch.

13
00:00:48.940 --> 00:00:53.940
In structural typing,
we just care about the properties, and

14
00:00:53.940 --> 00:00:58.260
the types of those properties on
an object and when we say like

15
00:00:58.260 --> 00:01:02.630
I take an object of type cart item,
what we're really describing is,

16
00:01:02.630 --> 00:01:07.930
look I have a particular structure of an
object and I can refer to it as cart item.

17
00:01:07.930 --> 00:01:12.340
Like there's a name for this structure but
as long as you match this structure and

18
00:01:12.340 --> 00:01:15.240
you can have extra properties
in there that's fine, or

19
00:01:15.240 --> 00:01:18.150
you could just create a new
object literal and pass it in,

20
00:01:18.150 --> 00:01:22.470
as long as the structure of those
objects align, we're good, we're fine.

21
00:01:22.470 --> 00:01:25.779
So here's, this is typescript here,
just to, but

22
00:01:25.779 --> 00:01:28.953
hopefully it is reasonably
self-explanatory.

23
00:01:28.953 --> 00:01:33.908
If we have a CartItem, we can say we
have an item, that's an object that has

24
00:01:33.908 --> 00:01:38.403
these three properties with those
types and then it has a quantity.

25
00:01:38.403 --> 00:01:42.650
So all we care about is
the structure of an object.

26
00:01:42.650 --> 00:01:45.910
And if the structure is good enough,
right.

27
00:01:45.910 --> 00:01:51.110
If you have this, at least,
we would say, okay, well now.

28
00:01:51.110 --> 00:01:55.260
Like I can say,
you're equivalent to the type that I need.

29
00:01:55.260 --> 00:01:56.820
Right.
You could have extra stuff in there,

30
00:01:56.820 --> 00:01:59.700
maybe if we added like
a serial number to it.

31
00:01:59.700 --> 00:02:03.970
That would be fine because it'll
just kinda be ignored along the way.

32
00:02:03.970 --> 00:02:08.830
So, this is a, this is really one
of the keys that allows us to

33
00:02:08.830 --> 00:02:12.950
use type inference and to not have to
put annotations all over the place,

34
00:02:12.950 --> 00:02:17.950
because as long as you take something
that meets the minimum requirements,

35
00:02:17.950 --> 00:02:19.740
we don't care what it's called.

36
00:02:19.740 --> 00:02:24.660
We just care about the structure and the
benefit here is, if you say I'm a function

37
00:02:24.660 --> 00:02:30.160
and I take an object of this type,
now you can have a higher level of

38
00:02:30.160 --> 00:02:36.240
assurance that what you are given is
gonna have, you know, a quantity on it.

39
00:02:36.240 --> 00:02:39.630
You don't have to do any kind
of defensive programming.

40
00:02:39.630 --> 00:02:44.790
Because you'll get some assurance based
on what can be done with static analysis,

41
00:02:44.790 --> 00:02:48.080
that whatever is calling this
should be passing something in.

42
00:02:49.670 --> 00:02:52.520
Now it's not bulletproof,
you of course can trick it but

43
00:02:52.520 --> 00:02:55.530
like it is better than regular
JavaScript in this respect.

