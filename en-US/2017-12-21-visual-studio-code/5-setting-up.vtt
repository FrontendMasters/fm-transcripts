WEBVTT

1
00:00:00.450 --> 00:00:04.319
&gt;&gt; Mike North: So the best way to get to
know an editor is to actually work within

2
00:00:04.319 --> 00:00:06.926
the context of a real project.

3
00:00:06.926 --> 00:00:11.980
And we're gonna be using a repurposed
version of the same app that

4
00:00:11.980 --> 00:00:13.740
was part of the PWA course.

5
00:00:13.740 --> 00:00:16.996
If you took progressive web fundamentals,

6
00:00:16.996 --> 00:00:21.572
also on front-end masters,
this will look familiar to you.

7
00:00:21.572 --> 00:00:24.891
It has been stripped down and
simplified so

8
00:00:24.891 --> 00:00:28.126
that it only goes as far
as we need it to go.

9
00:00:28.126 --> 00:00:32.068
The general idea here is you can
add items to a shopping cart, and

10
00:00:32.068 --> 00:00:35.240
someone's gonna do your grocery for you.

11
00:00:35.240 --> 00:00:42.090
So there's a small database,
a small Node.js RESTful API,

12
00:00:42.090 --> 00:00:47.740
and then a React UI,
like a browser based app on top of that.

13
00:00:47.740 --> 00:00:49.890
So that's all within this project, and

14
00:00:49.890 --> 00:00:52.930
when you run npm start,
that is all starting out.

15
00:00:54.620 --> 00:00:56.660
In terms of the set of
technologies we're using,

16
00:00:56.660 --> 00:01:01.460
I'm pleased to say we're basically
using the new releases of everything.

17
00:01:01.460 --> 00:01:05.908
The React 16 beta,
that's what we're using today.

18
00:01:05.908 --> 00:01:12.250
Webpack 3 to assemble our code together
and to make our browser distributable app.

19
00:01:13.260 --> 00:01:18.890
We're running TypeScript 2.5,
which came out within the last month.

20
00:01:18.890 --> 00:01:23.210
And then finally, on our back-end I've
gone through the trouble of taking what

21
00:01:23.210 --> 00:01:29.350
use to be written with Express,
which is a very common library to use for

22
00:01:30.960 --> 00:01:34.460
rendering JSON and HTML from Node.js app.

23
00:01:34.460 --> 00:01:39.873
I've chosen to use Koa instead because
Koa's a little bit more complicated,

24
00:01:39.873 --> 00:01:43.656
and I'll explain why I've
chosen to do it this way so.

25
00:01:43.656 --> 00:01:47.725
So Express, it's been around for
a long time and

26
00:01:47.725 --> 00:01:52.700
it works in a way that developers
expect it to work, right?

27
00:01:52.700 --> 00:01:56.898
You get callbacks and
you can stack a bunch of

28
00:01:56.898 --> 00:02:02.690
middlewares together, and nothing should
surprise developers, even if they haven't

29
00:02:02.690 --> 00:02:08.110
been keeping up with the latest advances
in the JavaScript language standard.

30
00:02:08.110 --> 00:02:10.050
One of the cool things about Koa is

31
00:02:11.350 --> 00:02:15.670
it is based around generator functions and
async functions.

32
00:02:15.670 --> 00:02:18.760
So this would throw most debuggers for

33
00:02:18.760 --> 00:02:23.534
a little bit of a loop, this would be
a little confusing for most debuggers.

34
00:02:23.534 --> 00:02:26.660
Simply because the code has to be

35
00:02:27.960 --> 00:02:32.220
transformed into something else and
then debugged with the source maps.

36
00:02:32.220 --> 00:02:37.350
So I've added this complexity
simply to show you that VS Code,

37
00:02:37.350 --> 00:02:41.170
when you start debugging this back-end,
it will work exactly as you would expect.

38
00:02:41.170 --> 00:02:46.320
It works exactly as you would
hope as opposed to kicking

39
00:02:46.320 --> 00:02:51.335
out into this world of the hack for
the language feature and

40
00:02:51.335 --> 00:02:54.805
having to step through that hack as
opposed to the code that you wrote.

41
00:02:54.805 --> 00:02:57.569
You stay entirely in the world
of code that you wrote.

42
00:02:57.569 --> 00:03:01.265
So I've introduced complexity
to demonstrate that

43
00:03:01.265 --> 00:03:05.005
it can be handled with grace
when you use Visual Studio Code.

44
00:03:06.485 --> 00:03:11.458
So to be clear, I don't think
there is really anything that

45
00:03:11.458 --> 00:03:16.728
I'm showing you today where we'd
need all of these completely

46
00:03:16.728 --> 00:03:21.820
bleeding edge versions of
these various libraries.

47
00:03:21.820 --> 00:03:23.722
This should work with Webpack 2,

48
00:03:23.722 --> 00:03:26.421
this should work with all
the versions of React.

49
00:03:26.421 --> 00:03:30.671
I am just trying to show what
is possible with the absolute,

50
00:03:30.671 --> 00:03:33.310
bleeding edge, most modern stuff.

51
00:03:34.480 --> 00:03:37.810
The only thing you'll have to make sure
you are completely up to date with

52
00:03:37.810 --> 00:03:38.980
is the editor itself.

53
00:03:38.980 --> 00:03:42.420
You should have the most recent
release of Visual Studio Code.

54
00:03:42.420 --> 00:03:47.630
And you can just run this check for
updates, this right here,

55
00:03:47.630 --> 00:03:50.620
and it should tell you there are no
updates currently available.

56
00:03:52.130 --> 00:03:53.840
So you may need to upgrade,

57
00:03:53.840 --> 00:03:57.160
considering that last week
the new version was released.

58
00:03:57.160 --> 00:03:59.920
So we will be using the absolute
most modern version.

59
00:04:01.590 --> 00:04:06.200
So with that, you should've gone
through the read me to get set up.

60
00:04:06.200 --> 00:04:07.210
We're gonna kind of get set up

61
00:04:07.210 --> 00:04:09.449
together just to make sure
everyone's on the same page.

62
00:04:11.590 --> 00:04:15.730
The first thing we're gonna do is
open up our integrated terminal.

63
00:04:15.730 --> 00:04:19.350
So there is a terminal built
into Visual Studio Code.

64
00:04:19.350 --> 00:04:22.990
And I tend to use a hot
key to get into it.

65
00:04:22.990 --> 00:04:27.350
And that on a Mac is control and
then the backtick button.

66
00:04:27.350 --> 00:04:32.466
So if I hit that,
I will see that this opens up here.

67
00:04:32.466 --> 00:04:36.055
So that is another key binding that
should make your top ten list.

68
00:04:36.055 --> 00:04:41.256
Control+backtick, it’s sort of
a nice like left hand thing,

69
00:04:41.256 --> 00:04:47.537
I don’t know how to describe it, but
it is a comfortable reflex to memorize.

70
00:04:47.537 --> 00:04:52.390
So in here, this will actually run
whatever our default terminal is.

71
00:04:52.390 --> 00:04:55.370
And if you wanted to,
you could configure, you could say,

72
00:04:55.370 --> 00:04:59.900
I wanna run ZSH whenever I'm opening
up this integrated terminal.

73
00:04:59.900 --> 00:05:04.819
Despite the fact that by default,
like with terminal.app or something,

74
00:05:04.819 --> 00:05:06.980
it is something else.

75
00:05:06.980 --> 00:05:09.090
I don't really see the point
of doing that, I mean,

76
00:05:09.090 --> 00:05:11.440
unless you have a really specific purpose.

77
00:05:11.440 --> 00:05:13.660
You should probably keep
everything the same.

78
00:05:13.660 --> 00:05:15.640
So you have the environment variables,

79
00:05:15.640 --> 00:05:18.830
the same everything,
it just happens to be embedded in here.

80
00:05:19.860 --> 00:05:25.010
Now, we can run node,
oops, node --version,

81
00:05:25.010 --> 00:05:28.580
and you should see something like this,
a version greater than 8.

82
00:05:28.580 --> 00:05:31.840
If you have a version older than 8,
we may run into some problems.

83
00:05:31.840 --> 00:05:33.670
So make sure you have it up to date.

84
00:05:35.550 --> 00:05:39.430
So the next thing you need is to
install a library called SQLite3.

85
00:05:39.430 --> 00:05:44.790
This is because we have a database in
this project, it's in the DB folder,

86
00:05:44.790 --> 00:05:48.638
and you're going to want to make
sure that you can read this, right?

87
00:05:48.638 --> 00:05:51.100
It’s an embedded database, just treat it,

88
00:05:51.100 --> 00:05:55.760
it’s a file basically that
has multiple tables in it.

89
00:05:55.760 --> 00:06:00.960
You can, on OS X,
use Homebrew to install this,

90
00:06:00.960 --> 00:06:05.050
and you should end up with this,
a recent version.

91
00:06:05.050 --> 00:06:08.095
I don’t know which version is required for
what we’re working with today,

92
00:06:08.095 --> 00:06:13.320
but nothing I'm doing here

93
00:06:13.320 --> 00:06:19.030
is crazy compared to what I was doing
with SQLite five or six years ago.

94
00:06:19.030 --> 00:06:22.600
So it should just work
right out of the box.

95
00:06:24.050 --> 00:06:29.120
Looks like they got some upgrades, there's
a new version here that just got released.

96
00:06:29.120 --> 00:06:32.170
We're not gonna install that because
I'm not going to tempt fate here.

97
00:06:32.170 --> 00:06:36.480
But you can see I was using 3.16 before.

98
00:06:36.480 --> 00:06:40.580
Apparently, I've been testing with
3.19 recently, and this just came out.

99
00:06:40.580 --> 00:06:42.090
Any of those should work.

100
00:06:42.090 --> 00:06:45.580
If you're using Windows,
go to the main read me for

101
00:06:45.580 --> 00:06:48.090
this project,
there's a link you can go to, and

102
00:06:48.090 --> 00:06:52.660
there's a package, like a Windows
Installer package you can install.

103
00:06:52.660 --> 00:06:55.760
Just get the latest official release,
if you don't have it.

104
00:06:55.760 --> 00:07:00.322
At the end, you should be able
to run SQLite3 --version,

105
00:07:00.322 --> 00:07:05.160
[SOUND], and you should get
something reasonable out like this.

106
00:07:09.524 --> 00:07:11.249
&gt;&gt; Mike North: So if you so choose,

107
00:07:11.249 --> 00:07:18.140
you may use Yarn instead of npm,
this is an alternative package manager.

108
00:07:18.140 --> 00:07:23.045
That can be installed with brew, they just
hit their 1.0 release, I think I saw that

109
00:07:23.045 --> 00:07:27.960
1.01 already landed, but you should
be able to see something like this.

110
00:07:29.170 --> 00:07:30.831
Yes?
&gt;&gt; Speaker 2: I got a couple of questions

111
00:07:30.831 --> 00:07:32.960
in chat.
&gt;&gt; Mike North: Okay.

112
00:07:32.960 --> 00:07:34.492
&gt;&gt; Speaker 2: Any reason to run code

113
00:07:34.492 --> 00:07:38.970
inside as a primary?
&gt;&gt; Mike North: No,

114
00:07:38.970 --> 00:07:44.250
we shouldn't be doing anything that
requires that beta test build.

115
00:07:44.250 --> 00:07:45.820
&gt;&gt; Speaker 2: Okay, and then another one

116
00:07:45.820 --> 00:07:51.120
was, guy uses VS Code a bit and have
it installed on a couple of computers.

117
00:07:51.120 --> 00:07:56.040
On one control plus it works, but
on my other, that opens a new console

118
00:07:56.040 --> 00:08:00.541
outside of my VS Code, any suggestions?
&gt;&gt; Mike North: So control,

119
00:08:00.541 --> 00:08:07.910
control+backtick works, and on another it
opens a new console outside of VS code.

120
00:08:07.910 --> 00:08:10.030
Yeah, I've never seen that before.

121
00:08:10.030 --> 00:08:15.010
I'm happy to dig a little bit deeper and
see what may be going on there.

122
00:08:15.010 --> 00:08:19.500
But for me, it's control+backtick, and you
can look, if that key button doesn't work

123
00:08:19.500 --> 00:08:25.040
for you, look in the View tab, and
here's the integrate terminal option here.

124
00:08:25.040 --> 00:08:26.330
If you look to the right,

125
00:08:26.330 --> 00:08:32.510
you should see something there that should
correspond to the correct keystroke.

126
00:08:32.510 --> 00:08:36.870
There's probably a setting, and
we can explore that when we get into

127
00:08:36.870 --> 00:08:41.200
settings that might say like, well, I
don't wish to use the integrated terminal,

128
00:08:41.200 --> 00:08:44.950
take me out into whatever my default
terminal application is outside of code.

129
00:08:47.200 --> 00:08:51.620
All right, so once we've done that,
you should clone the project, and

130
00:08:51.620 --> 00:08:55.420
if you're looking at slides on your
laptop, you've already done that.

131
00:08:55.420 --> 00:08:59.249
It's the same project that these
files we're looking at are in.

132
00:08:59.249 --> 00:09:03.304
You're gonna run Yarn to to install
all of the dependencies, sorry.

133
00:09:03.304 --> 00:09:09.306
And then npm start should just work,
&gt;&gt; Mike North: That should

134
00:09:09.306 --> 00:09:16.565
open up a new app on local host 3000.
&gt;&gt; Mike North: And

135
00:09:16.565 --> 00:09:21.048
interesting, I've got a stray file
in there, let me just delete that.

136
00:09:30.686 --> 00:09:31.868
&gt;&gt; Mike North: Okay, so you should see

137
00:09:31.868 --> 00:09:34.190
webpack: Compiled successfully.

138
00:09:34.190 --> 00:09:38.820
And then if we go to localhost:3000, you
should see something that looks like this.

139
00:09:38.820 --> 00:09:41.641
There may be one last step
there that you'll have to do.

140
00:09:41.641 --> 00:09:47.469
If you get an error about
like can't find the database,

141
00:09:47.469 --> 00:09:52.677
you wanna make sure that
in your database folder,

142
00:09:52.677 --> 00:10:00.250
just copy this master file,
master.sqlite to development.sqlite.

143
00:10:00.250 --> 00:10:03.300
The point of this is I've given you
something that's been checked into

144
00:10:03.300 --> 00:10:06.760
the repository,
that's sort of a clean start.

145
00:10:06.760 --> 00:10:10.860
And if you run into a situation
where somehow we messed the data up,

146
00:10:10.860 --> 00:10:15.950
you can just blow your development.sqlite
away and you can point to master.

147
00:10:15.950 --> 00:10:19.300
Or you can recopied master and
create yourself a new database.

148
00:10:19.300 --> 00:10:22.440
But in the end, you should have
something that looks like this.

149
00:10:23.480 --> 00:10:27.610
Maybe without this little 8 up here,
that's my data in my database.

150
00:10:27.610 --> 00:10:30.992
But certainly you should start seeing
images on the screen that look like this.

151
00:10:33.250 --> 00:10:38.772
And that should indicate you started up.
&gt;&gt; Mike North: So

152
00:10:38.772 --> 00:10:40.150
we're just gonna leave that running.

153
00:10:40.150 --> 00:10:45.987
We'll close this here, it just closes
the panel, our terminal is still running.

