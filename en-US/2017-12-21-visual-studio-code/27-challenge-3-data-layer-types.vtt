WEBVTT

1
00:00:00.280 --> 00:00:02.390
&gt;&gt; Mike North: Time to put
some of this into action.

2
00:00:02.390 --> 00:00:05.680
So you're gonna update your type
script compiler configuration, and

3
00:00:05.680 --> 00:00:08.480
clicking on this hopefully should
take us right there and it does.

4
00:00:08.480 --> 00:00:13.210
So inside this compiler options object,
you're gonna basically

5
00:00:13.210 --> 00:00:18.279
say checkJs: true,

6
00:00:18.279 --> 00:00:25.760
allowImplicityAny, or
sorry, noImplicityAny.

7
00:00:26.960 --> 00:00:31.350
I've got my noImplicityAny also true.

8
00:00:32.480 --> 00:00:36.840
So you're saying, yes,
I do want you to check my JavaScript, and

9
00:00:36.840 --> 00:00:40.210
yes, I want you to forbid ImplicitAny.

10
00:00:41.230 --> 00:00:45.158
And that basically means that
as TypeScript goes through and

11
00:00:45.158 --> 00:00:48.478
tries to infer what all of
the types are in our code.

12
00:00:48.478 --> 00:00:54.273
Any time that it can't come up with
a good answer it basically by default,

13
00:00:54.273 --> 00:00:59.133
or until we change this here,
it would assign it the any type,

14
00:00:59.133 --> 00:01:03.350
and that just is like a wild card,
could be anything.

15
00:01:05.380 --> 00:01:07.560
Any means anything, right.

16
00:01:07.560 --> 00:01:12.645
And that's, think of it as the any
type means that you're back to regular

17
00:01:12.645 --> 00:01:17.550
JavaScript, you can do whatever you want
there, you can flip flop between types.

18
00:01:17.550 --> 00:01:19.500
So here we've just forbidden that.

19
00:01:19.500 --> 00:01:24.495
Now you could still use ExplicitAny,
you'd have to add the type information and

20
00:01:24.495 --> 00:01:27.299
say, yes,
I really do want this to be an any.

21
00:01:27.299 --> 00:01:33.128
So but this just tightened our
code up considerably in terms of

22
00:01:33.128 --> 00:01:38.775
making the compiler,
it made it more strict effectively.

23
00:01:38.775 --> 00:01:44.670
So you added those and now it will
complain about ImplicitAny types and

24
00:01:44.670 --> 00:01:49.610
require us to be explicit in spots where
the compiler can't infer well enough.

25
00:01:50.830 --> 00:01:53.560
And what I want you to do is
if we open up these files,

26
00:01:53.560 --> 00:01:58.660
these are just the regular JavaScript
files, they're all in this data folder.

27
00:01:58.660 --> 00:02:03.070
Listener support, grocery item store,
cart store, order store, these are just

28
00:02:03.070 --> 00:02:06.099
regular classes that involve fetching
data and getting some stuff back.

29
00:02:07.440 --> 00:02:13.410
We wanna go there and basically fix any
complaints that TypeScript may have.

30
00:02:13.410 --> 00:02:15.451
So let's see,
let me make sure my server is

31
00:02:15.451 --> 00:02:22.098
started.
&gt;&gt; Mike North: I

32
00:02:22.098 --> 00:02:24.600
expect some complaints here, let's see.

33
00:02:24.600 --> 00:02:25.730
See a red thing?

34
00:02:25.730 --> 00:02:28.040
All right, so there's a complaint.

35
00:02:28.040 --> 00:02:31.250
It says the perimeter ID
has an ImplicitAny type.

36
00:02:31.250 --> 00:02:36.060
So here we'd probably say number,
oop sorry, that's TypeScript.

37
00:02:36.060 --> 00:02:42.660
We'd go up here and we'd say,
param {number} id, and it'll be quiet.

38
00:02:42.660 --> 00:02:43.630
It's okay now, right.

39
00:02:45.980 --> 00:02:47.740
So we'll go through, and

40
00:02:47.740 --> 00:02:50.990
you basically want to whack away
at all of the problems it finds.

41
00:02:50.990 --> 00:02:55.700
Let me see if I can make it unearths
a nontrivial number of problems, so

42
00:02:55.700 --> 00:02:56.368
here are some.

43
00:02:56.368 --> 00:02:59.260
You'll note that they don't get added to

44
00:02:59.260 --> 00:03:02.130
the list until you
actually open the file up.

45
00:03:02.130 --> 00:03:04.299
They should hang around, no, they don't,

46
00:03:04.299 --> 00:03:09.365
apparently they don't.
&gt;&gt; Mike North: So

47
00:03:09.365 --> 00:03:14.510
I would just open the files and
get it back down to, back to zero.

48
00:03:14.510 --> 00:03:17.750
Now you'll see that sometimes we're
dealing with things that have a particular

49
00:03:17.750 --> 00:03:18.670
structure.

50
00:03:18.670 --> 00:03:24.154
And so you may find that you wanna create
these type definitions where you say,

51
00:03:24.154 --> 00:03:27.324
here's a cart item or
here is a grocery item.

52
00:03:27.324 --> 00:03:32.343
And based on the use of these different
objects, the properties that we need, you

53
00:03:32.343 --> 00:03:37.727
can basically start with an empty object
and then you'll start to get errors like,

54
00:03:37.727 --> 00:03:42.267
you tried to access property ID off of
what you told me was an empty object.

55
00:03:42.267 --> 00:03:45.380
And you'll say, I'll fix that,
I'll add a property called id.

56
00:03:45.380 --> 00:03:47.230
You can kinda widdle away and

57
00:03:47.230 --> 00:03:51.130
you'll get to the point where you can see,
now everything's happy.

58
00:03:51.130 --> 00:03:58.632
And you also get that type checking
happening right at compile time.

59
00:03:58.632 --> 00:04:03.161
So finally, so you're gonna
eliminate all of the problems,

60
00:04:03.161 --> 00:04:06.570
complaints about the ImplicitAny type.

61
00:04:06.570 --> 00:04:11.220
And the last hint I wanna leave you
is that sometimes we end up with a,

62
00:04:12.610 --> 00:04:16.050
I hope that's a typo, dear God.
&gt;&gt; Speaker 2: [LAUGH]

63
00:04:16.050 --> 00:04:17.410
&gt;&gt; Mike North: There's some that are not

64
00:04:17.410 --> 00:04:18.340
typos there,

65
00:04:18.340 --> 00:04:20.650
there's one that was redirect.
&gt;&gt; Speaker 3: Refer.

66
00:04:20.650 --> 00:04:24.970
&gt;&gt; Mike North: Refer,

67
00:04:24.970 --> 00:04:27.000
we'll deal with that in web security part.

68
00:04:28.120 --> 00:04:30.527
ReadonlyArraay and Array, they're both,

69
00:04:30.527 --> 00:04:33.958
you can use bracket notation to
get an individual item out of it.

70
00:04:33.958 --> 00:04:39.653
ArrayLike is sort of a structure
that surrounds both of those.

71
00:04:39.653 --> 00:04:43.973
So it may be useful for you to deal with
ArrayLike in order to relax things enough

72
00:04:43.973 --> 00:04:48.040
to where it's a function that can take
anything that looks like an array.

