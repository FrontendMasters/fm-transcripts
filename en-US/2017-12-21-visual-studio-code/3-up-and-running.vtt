WEBVTT

1
00:00:00.110 --> 00:00:02.180
&gt;&gt; Mike: And finally,
this isn't just a new twist.

2
00:00:02.180 --> 00:00:03.620
This isn't just another Atom.

3
00:00:03.620 --> 00:00:07.250
One other things that Code
aims to be is like the best

4
00:00:07.250 --> 00:00:10.350
possible TypeScript to
developer experience out there.

5
00:00:10.350 --> 00:00:12.720
It is build with TypeScript in mind.

6
00:00:12.720 --> 00:00:17.810
And, in particular, we benefit from
that as regular JavaScript developers,

7
00:00:17.810 --> 00:00:23.380
because TypeScript is a typed
superscript of JavaScript.

8
00:00:23.380 --> 00:00:26.670
So almost all JavaScript
is valid TypeScript.

9
00:00:26.670 --> 00:00:30.090
And the stuff that is
not valid TypeScript,

10
00:00:30.090 --> 00:00:32.830
we shouldn't be doing anyway, right?

11
00:00:32.830 --> 00:00:39.890
These are things where the things that our
code is doing can cause deoptimizations.

12
00:00:39.890 --> 00:00:46.150
It can cause problems when the
JavaScript Runtime starts to execute it.

13
00:00:46.150 --> 00:00:52.914
So it gives us some keen insight into
what's going on, the TypeScript compiler.

14
00:00:52.914 --> 00:00:57.718
One of the things that launched
within the last month was OS X

15
00:00:57.718 --> 00:01:02.275
now has the ability to create
a C# project and to run it.

16
00:01:02.275 --> 00:01:08.985
So it has been possible to use something
called Mono which is a C# open source,

17
00:01:08.985 --> 00:01:13.662
what would you call it,
an open source C# runtime that

18
00:01:13.662 --> 00:01:18.561
you can develop on a Mac, and
you can write a C# program.

19
00:01:18.561 --> 00:01:22.548
Now with an extension,
you can just create C# projects, and

20
00:01:22.548 --> 00:01:27.837
you get a developer experience built by
Microsoft with a language that was built,

21
00:01:27.837 --> 00:01:30.060
you know, by Microsoft.

22
00:01:30.060 --> 00:01:32.000
And you can use it on a Mac, and

23
00:01:32.000 --> 00:01:36.422
I hope that we will start to see
other .NET languages like F# become

24
00:01:36.422 --> 00:01:40.934
things that don't require a particular
operating system anymore.

25
00:01:40.934 --> 00:01:45.900
I love to see when companies, especially
when they're shepherding a language

26
00:01:45.900 --> 00:01:50.420
like that, to open it up and
let developers choose whatever environment

27
00:01:50.420 --> 00:01:54.890
they want to work on the programs
rather than sort of locking people in.

28
00:01:56.730 --> 00:02:00.064
One of the things that was evident for
me when I started using code

29
00:02:00.064 --> 00:02:03.952
is I didn't have to install a whole bunch
of plugins or set up a whole bunch of

30
00:02:03.952 --> 00:02:07.500
configuration in order to get things
working the way I wanted it to.

31
00:02:07.500 --> 00:02:13.021
And maybe this is just because
the defaults are aligned with what I like,

32
00:02:13.021 --> 00:02:18.089
but I think that it's more that some
of the important stuff that can

33
00:02:18.089 --> 00:02:23.000
sorta hide in the background,
that comes with the core editor.

34
00:02:23.000 --> 00:02:27.707
And it's of benefit to all developers,
and so

35
00:02:27.707 --> 00:02:33.030
it is tuned very thoughtfully
right out of the box.

36
00:02:33.030 --> 00:02:36.440
And then finally, I get excited
every time there's a new launch.

37
00:02:36.440 --> 00:02:42.036
You should follow the @code
handle on Twitter, if you like.

38
00:02:42.036 --> 00:02:47.310
They'll tweet every time a new release
lands, and they do one per month.

39
00:02:47.310 --> 00:02:51.090
Every time I look at the release notes,
it's like it's new exciting stuff.

40
00:02:51.090 --> 00:02:55.544
The recent stuff that was added this past
month, and it was just a couple of days

41
00:02:55.544 --> 00:03:00.473
ago of the latest version landed, was the
ability to refactor code by right-clicking

42
00:03:00.473 --> 00:03:04.550
on, like select one code and
refactor and set it to a function.

43
00:03:04.550 --> 00:03:09.050
And these are things that I really
enjoyed in other programming languages,

44
00:03:09.050 --> 00:03:12.990
other environments, but
could never get right in JavaScript.

45
00:03:12.990 --> 00:03:17.090
It would never work as advertised,
and this seems to work really well.

46
00:03:18.270 --> 00:03:25.250
So, if you're getting an NPM error,
make sure you check

47
00:03:26.340 --> 00:03:32.320
the version of your current Node,
and it should be 8or newer.

48
00:03:32.320 --> 00:03:35.893
If you're using a version of
Node that's older than 8,

49
00:03:35.893 --> 00:03:40.881
there are instructions in the readme for
installing something called NVM, and

50
00:03:40.881 --> 00:03:44.690
this will let you sort of install
a newer version on the side.

51
00:03:44.690 --> 00:03:46.240
But you want 8.

52
00:03:46.240 --> 00:03:46.770
So I'll be running 8.4.

53
00:03:46.770 --> 00:03:52.220
I am fairly confident that any
version 8 released should work fine.

