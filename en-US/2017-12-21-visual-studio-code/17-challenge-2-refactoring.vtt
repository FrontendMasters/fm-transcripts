WEBVTT

1
00:00:00.009 --> 00:00:01.880
&gt;&gt; Mike North: So here is our exercise.

2
00:00:01.880 --> 00:00:05.064
We've got this listener support module.

3
00:00:05.064 --> 00:00:09.265
If you click on this, it should take
you right to the file and it does.

4
00:00:09.265 --> 00:00:15.971
So we wanna change register and unregister
to registerListener, unregisterListener.

5
00:00:15.971 --> 00:00:18.027
So that's gonna be your first refactor.

6
00:00:18.027 --> 00:00:21.657
The second one is, and
let me explain the purpose of this object.

7
00:00:21.657 --> 00:00:26.045
It basically just lets you
register functions, and

8
00:00:26.045 --> 00:00:29.744
we accumulate those functions in an array.

9
00:00:29.744 --> 00:00:32.226
And then we can call this function,

10
00:00:32.226 --> 00:00:35.801
we can call it fire on
a listener support instance.

11
00:00:35.801 --> 00:00:37.996
And it'll basically go
through that array and

12
00:00:37.996 --> 00:00:39.970
invoke all of those functions one by one.

13
00:00:40.990 --> 00:00:44.909
It's just it is like a low-level
thing that is used for

14
00:00:44.909 --> 00:00:50.630
allowing concerned parties to subscribe
in the event that something happens.

15
00:00:50.630 --> 00:00:53.787
And then fire is what we're gonna
use when we want to say, okay,

16
00:00:53.787 --> 00:00:56.778
broadcast to all concerned
parties that this is happening.

17
00:00:56.778 --> 00:00:58.440
So that's all that this does.

18
00:00:58.440 --> 00:01:02.550
So we basically wanna just rename
these register and unregister,

19
00:01:02.550 --> 00:01:04.670
so that they are a little
bit more descriptive.

20
00:01:04.670 --> 00:01:08.820
But we wanna also change
the format of how fire works.

21
00:01:08.820 --> 00:01:13.684
So we wanna pass it, currently it's
just taking in anything at all, and

22
00:01:13.684 --> 00:01:16.898
it's passing that directly
to the functions.

23
00:01:16.898 --> 00:01:20.503
We wanna now wrap it in an object
that looks like this, so

24
00:01:20.503 --> 00:01:24.880
that the thing that should be passed
to those functions is available

25
00:01:24.880 --> 00:01:29.550
at the data property of whatever
is passed as an argument to fire.

26
00:01:29.550 --> 00:01:32.220
So we pass something like this to fire,
but

27
00:01:32.220 --> 00:01:36.671
the value of that data property that
is what should be passed into each of

28
00:01:36.671 --> 00:01:39.723
those listener functions
as they're invoked.

29
00:01:39.723 --> 00:01:44.887
So for this you're going to need to,
you're gonna

30
00:01:44.887 --> 00:01:50.171
need to go through and
figure out who's using this,

31
00:01:50.171 --> 00:01:55.130
make sure that they all remain untouched.

32
00:01:55.130 --> 00:01:59.240
Who's using the fire function rather,
so they're not gonna remain untouched.

33
00:01:59.240 --> 00:02:03.309
They'll have to each change, so you'll
probably wanna use find all references.

34
00:02:03.309 --> 00:02:07.374
Oops, sorry, this here is a typo.

35
00:02:07.374 --> 00:02:08.860
I'm actually gonna fix this right now.

36
00:02:08.860 --> 00:02:10.193
This should not be in this exercise.

37
00:02:10.193 --> 00:02:11.966
We'll remove that.

38
00:02:11.966 --> 00:02:16.463
So you wanna ensure that
wherever someone's calling fire,

39
00:02:16.463 --> 00:02:21.412
they need to be updated to accommodate
this new type of structure.

40
00:02:21.412 --> 00:02:25.629
And anything that is registering
a listener or updating a listener,

41
00:02:25.629 --> 00:02:30.447
the only thing that should change in those
files is the names of the functions.

42
00:02:30.447 --> 00:02:34.790
Register, unregister should be
registerListener or unregisterListener.

43
00:02:34.790 --> 00:02:37.335
The callback should just
be able to proceed as is.

44
00:02:37.335 --> 00:02:39.160
Nothing should change there.

45
00:02:39.160 --> 00:02:42.410
So this should give you some exposure to

46
00:02:42.410 --> 00:02:46.431
a limited subset of Visual Studio Code's
refactoring capabilities.

