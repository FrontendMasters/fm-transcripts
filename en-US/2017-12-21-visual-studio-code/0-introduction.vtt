WEBVTT

1
00:00:00.030 --> 00:00:03.590
&gt;&gt; Mike North: So today we're gonna
be talking about Visual Studio Code.

2
00:00:03.590 --> 00:00:07.353
And If you checked out the project,
this is all you need today.

3
00:00:07.353 --> 00:00:09.350
There are new slides.

4
00:00:09.350 --> 00:00:14.050
One of the things that we're gonna look
at as we start jumping into what this

5
00:00:14.050 --> 00:00:16.970
great editor can do is
the fact that you can create

6
00:00:16.970 --> 00:00:21.650
fantastic documents with this as well
that are built right into your code base.

7
00:00:23.110 --> 00:00:25.927
So if you open up the docs folder and
look at the readme,

8
00:00:25.927 --> 00:00:27.951
that's right inside the docs folder,

9
00:00:27.951 --> 00:00:32.995
that is what we're looking at right now.
&gt;&gt; Mike North: So

10
00:00:32.995 --> 00:00:37.845
the way that we're gonna break
this course down is we'll first

11
00:00:37.845 --> 00:00:42.550
do a bunch of stuff that involves
using this editor, right?

12
00:00:42.550 --> 00:00:45.493
Making use of the way it
operates out of the box.

13
00:00:45.493 --> 00:00:50.321
We're gonna look at five areas
we'll deal with using for

14
00:00:50.321 --> 00:00:56.860
quick auto completions of like Monday and
things, like creating HTML elements.

15
00:00:56.860 --> 00:00:59.580
We'll look at creating
a markdown document,

16
00:00:59.580 --> 00:01:02.310
like what we're seeing right now.

17
00:01:02.310 --> 00:01:08.923
We'll jump into things like type checking,
which you can do either with TypeScript.

18
00:01:08.923 --> 00:01:13.658
Or you can annotate your regular
JavaScript with special comments

19
00:01:13.658 --> 00:01:18.644
that can be used to provide
Visual Studio Code with type information,

20
00:01:18.644 --> 00:01:21.602
it can catch some problems before you ship

21
00:01:21.602 --> 00:01:26.356
your code to production that you
would otherwise be unable to see.

22
00:01:26.356 --> 00:01:31.402
And then we'll end this using its section
with some debugging that would be

23
00:01:31.402 --> 00:01:36.786
pretty painful where we're using other
technologies to do this kind of stuff.

24
00:01:36.786 --> 00:01:42.111
We'll basically have a multi-process
debugging session where we have

25
00:01:42.111 --> 00:01:48.290
breakpoints set in the Node.js backend and
a JavaScript browser-based app.

26
00:01:48.290 --> 00:01:52.680
And we'll see how we can sort of hop from
one to the other pretty much effortlessly

27
00:01:52.680 --> 00:01:57.511
without leaving the single
Visual Studio Code experience.

28
00:01:57.511 --> 00:02:02.548
So after we kind of become seasoned
users of Visual Studio Code,

29
00:02:02.548 --> 00:02:07.090
we'll jump into ways we
can customize this editor.

30
00:02:07.090 --> 00:02:11.880
And change some settings, and change the
way it looks and the way it operates, and

31
00:02:11.880 --> 00:02:16.510
then wrap up the day creating our own
tasks and launch configurations, which

32
00:02:16.510 --> 00:02:22.550
essentially allow us to have shortcuts
to start up different shell commands and

33
00:02:22.550 --> 00:02:26.980
different ways of booting our app up,
putting environment variables in place so

34
00:02:26.980 --> 00:02:30.810
that it's sort of just a one
click start my app process.

