WEBVTT

1
00:00:00.280 --> 00:00:04.871
Cool, so now we will, let's see what
else do we have on this gradient layout,

2
00:00:04.871 --> 00:00:05.734
what else.

3
00:00:05.734 --> 00:00:10.381
Yeah, we have to actually add the part
where the child gets rendered cuz

4
00:00:10.381 --> 00:00:13.412
right now it doesn't
get rendered anywhere.

5
00:00:13.412 --> 00:00:17.210
But that's easy, all we have to
do is outside of this flexbox,

6
00:00:17.210 --> 00:00:21.380
right underneath it is just
render a box with some padding.

7
00:00:21.380 --> 00:00:23.610
Why so that'll be padding top and
bottom here.

8
00:00:25.010 --> 00:00:26.230
We'll set some padding here.

9
00:00:26.230 --> 00:00:29.750
So I don't know, 50 pixels,
let's be generous.

10
00:00:29.750 --> 00:00:32.782
And we'll add the children
to be rendered here.

11
00:00:32.782 --> 00:00:37.064
And that's it, now we have a very
flexible gradient layout that looks

12
00:00:37.064 --> 00:00:41.939
the same across all pages and can render
whatever it wants as a child component.

13
00:00:45.666 --> 00:00:47.247
So if we head back into pages index,

14
00:00:47.247 --> 00:00:49.640
we can actually start
working on the index page.

15
00:00:49.640 --> 00:00:56.010
So if we go look now, we should see
homepage being rendered somewhere.

16
00:00:56.010 --> 00:00:59.554
It's right there, you just can't
see it cuz the text is gray, but

17
00:00:59.554 --> 00:01:00.643
it's right there.

18
00:01:00.643 --> 00:01:06.203
So we have that, yeah, so now what we
wanna do is go back to our design and

19
00:01:06.203 --> 00:01:10.498
let's see what we actually
wanna do on this homepage.

20
00:01:10.498 --> 00:01:14.100
So let's see we have
top artists this month.

21
00:01:14.100 --> 00:01:16.310
So we could render all the artists here.

22
00:01:16.310 --> 00:01:21.653
So if you're thinking, the database that
we have, how we can make an API call, what

23
00:01:21.653 --> 00:01:26.502
are some of the things that we would have
to do to put the artists on this page?

24
00:01:26.502 --> 00:01:30.050
Cuz right now we don't have
any of the resources for that.

25
00:01:30.050 --> 00:01:30.780
We got to make some stuff.

26
00:01:30.780 --> 00:01:35.140
So what do you think we need to make as
far as like back end to get the artists on

27
00:01:35.140 --> 00:01:36.119
the page there?

28
00:01:36.119 --> 00:01:36.817
Yes.

29
00:01:36.817 --> 00:01:39.100
&gt;&gt; Make a hook to be
able to retrieve those.

30
00:01:39.100 --> 00:01:42.820
&gt;&gt; Yeah, make a hook so
the client side can retrieve the artists.

31
00:01:42.820 --> 00:01:44.890
That's good, what's another one?

32
00:01:44.890 --> 00:01:46.720
&gt;&gt; In terms of the back end what we need?

33
00:01:46.720 --> 00:01:49.631
&gt;&gt; Yeah,
if we ever retrieving on a client side,

34
00:01:49.631 --> 00:01:54.160
that means the client side needs
to make an API call somewhere.

35
00:01:54.160 --> 00:01:58.368
So we need to make an API route
to get the artists, yes Mark.

36
00:01:58.368 --> 00:02:00.188
&gt;&gt; Get artists from the API.

37
00:02:00.188 --> 00:02:02.907
&gt;&gt; There we go, that's right,
get artists on the API.

38
00:02:02.907 --> 00:02:06.304
Yep, we will totally need to do that.

39
00:02:06.304 --> 00:02:09.483
What if I told you we didn't have to
do any of that to still get the data?

40
00:02:09.483 --> 00:02:13.277
[LAUGH] What, what are you talking about?

41
00:02:13.277 --> 00:02:17.587
Yeah, so we could do that and
that would totally work fine, but then, so

42
00:02:17.587 --> 00:02:19.220
let's walk through this.

43
00:02:19.220 --> 00:02:22.222
We had to do that with
the play lists on the side

44
00:02:22.222 --> 00:02:25.555
bar because the play lists
aren't part of a page.

45
00:02:25.555 --> 00:02:30.792
The playlists on the sidebar are always
there, they are always gonna be there.

46
00:02:30.792 --> 00:02:35.104
And because the sidebar is not in a page
component as in the sidebar is listed

47
00:02:35.104 --> 00:02:39.144
inside of the component's directory and
not the page's directory,

48
00:02:39.144 --> 00:02:41.763
Next.js treats them differently, right?

49
00:02:41.763 --> 00:02:46.472
The pages directory, actually any
page in here has the ability to do

50
00:02:46.472 --> 00:02:51.524
what's called server side data
fetching whereas a component does not.

51
00:02:51.524 --> 00:02:55.626
So we had to make a client side call to
get the play list for the sidebar, but for

52
00:02:55.626 --> 00:03:00.260
a page, we could actually get the data
server side before it renders.

53
00:03:00.260 --> 00:03:02.477
So then you got to ask yourself,

54
00:03:02.477 --> 00:03:07.520
is the data on here going to be changing
while the user is looking at it?

55
00:03:07.520 --> 00:03:10.448
If that's the case,
you'd probably want to do a client side.

56
00:03:10.448 --> 00:03:14.760
But is the data on this page always gonna
stay the same after the initial render?

57
00:03:14.760 --> 00:03:18.160
If that's the case,
you could probably do it server side.

58
00:03:18.160 --> 00:03:20.870
So there's no wrong answer here.

59
00:03:20.870 --> 00:03:22.380
We can go any direction we want.

60
00:03:22.380 --> 00:03:25.710
I say let's try to do it server side and
see how we like it.

61
00:03:25.710 --> 00:03:29.280
If it's not good for some reason, we can
do client side, and we'll do the hooks and

62
00:03:29.280 --> 00:03:30.670
we'll make like the API route.

63
00:03:30.670 --> 00:03:34.060
But if we do it server side,
we don't need the hooks or the API route,

64
00:03:34.060 --> 00:03:37.120
we don't need any of that,
so it's really cool.

65
00:03:37.120 --> 00:03:39.060
So let's try that way.

66
00:03:40.200 --> 00:03:45.353
The way we're gonna do
that is if we head over to

67
00:03:45.353 --> 00:03:51.695
the pages index where we already are,
before we export,

68
00:03:51.695 --> 00:03:57.792
we can export a function
called getServerSideProps.

69
00:04:00.752 --> 00:04:02.670
And it's exactly what it sounds like.

70
00:04:02.670 --> 00:04:09.369
It's a function that will
basically server side,

71
00:04:09.369 --> 00:04:15.927
get props that it will
inject into this homepage.

72
00:04:15.927 --> 00:04:19.616
So whatever props you return in this
function will be injected into this

73
00:04:19.616 --> 00:04:20.233
homepage.

74
00:04:20.233 --> 00:04:23.135
And because this function is gonna be
ran server side, I know it's confusing,

75
00:04:23.135 --> 00:04:26.300
it's written inside of a component, so you
think it's gonna be ran in the browser.

76
00:04:26.300 --> 00:04:26.907
It's not.

77
00:04:26.907 --> 00:04:31.824
This function is only ever gonna be ran
when someone requests this page and

78
00:04:31.824 --> 00:04:33.650
that's it.

79
00:04:33.650 --> 00:04:36.449
It's gonna be ran every time
they request a page but

80
00:04:36.449 --> 00:04:39.975
only when they request a page on
the server and not on the client.

81
00:04:39.975 --> 00:04:41.823
So if you were to go unobfuscate,

82
00:04:41.823 --> 00:04:44.595
unminimize this code and
look at it in the client,

83
00:04:44.595 --> 00:04:48.566
it won't have getServerSideProps there,
Next.js strips this out.

84
00:04:48.566 --> 00:04:51.596
If I import any, for instance,
we're gonna import prison on here,

85
00:04:51.596 --> 00:04:55.980
that doesn't mean prison was gonna be a
client, that's gonna get stripped out too.

86
00:04:55.980 --> 00:04:59.150
So any dependencies that we actually use
inside to getServerSideProps also gets

87
00:04:59.150 --> 00:05:02.840
stripped out of the dependency graph and
does not get bundled with the client.

88
00:05:02.840 --> 00:05:06.441
So if you're wondering, my god, I'm using
Mongo on the front end, you're not,

89
00:05:06.441 --> 00:05:08.905
it's gonna get stripped out,
all that's totally fine.

90
00:05:08.905 --> 00:05:10.438
And this is the power of Next.js.

91
00:05:10.438 --> 00:05:15.551
This is how you can do full stack stuff
and it's like bleed, the edge is blurry.

92
00:05:15.551 --> 00:05:18.734
It's like, well,
I'm actually doing some client side stuff.

93
00:05:18.734 --> 00:05:22.689
I just saw it, we literally just
made this, it was client side,

94
00:05:22.689 --> 00:05:24.169
why is it freaking out?

95
00:05:24.169 --> 00:05:26.597
But no, you're actually doing
server side stuff here.

96
00:05:26.597 --> 00:05:30.544
You have access to the cookie here,
you have access to the JWT.

97
00:05:30.544 --> 00:05:34.830
You have access to that library
function that we made call off that,

98
00:05:34.830 --> 00:05:36.417
can do things like that.

99
00:05:36.417 --> 00:05:37.370
So we could totally do it.

100
00:05:37.370 --> 00:05:39.592
But we're just gonna get the artist here.

101
00:05:39.592 --> 00:05:43.839
So let's import prisma
from our lib prisma.

102
00:05:43.839 --> 00:05:46.669
And this is why I made that library
prisma because we only have

103
00:05:46.669 --> 00:05:47.841
one instance of prisma.

104
00:05:47.841 --> 00:05:51.297
We would have to make the client every
single time which I think every time you

105
00:05:51.297 --> 00:05:53.304
do that, makes a new database connection.

106
00:05:53.304 --> 00:05:54.999
So now we should only have one connection.

107
00:05:57.103 --> 00:06:02.442
And now we're just gonna get the artist,
so

108
00:06:02.442 --> 00:06:09.522
we'll say artists = await
prisma.artist.findMany.

109
00:06:09.522 --> 00:06:12.907
And I just wanna get all of them,
just wanna get all the artists,

110
00:06:12.907 --> 00:06:14.287
just gonna put them here,

111
00:06:14.287 --> 00:06:18.384
cuz our app is not smart enough to get
the top artists this month, I'm sorry.

112
00:06:18.384 --> 00:06:20.430
We're not building that feature today.

113
00:06:21.500 --> 00:06:23.780
So we're [LAUGH] just
gonna get all the artists.

114
00:06:23.780 --> 00:06:28.354
And all we have to do now is to return in
this format of return an object that has

115
00:06:28.354 --> 00:06:29.796
a props property on it.

116
00:06:29.796 --> 00:06:31.166
And whatever props we put here,

117
00:06:31.166 --> 00:06:33.567
that's what's gonna get
injected into the homepage.

118
00:06:33.567 --> 00:06:36.609
So I could just say return
props with artists,

119
00:06:36.609 --> 00:06:40.610
like that,
you could put whatever you want here.

120
00:06:40.610 --> 00:06:44.184
This is a great place of like for
instance, my other next JS course I've

121
00:06:44.184 --> 00:06:47.760
talked about how you can use this for
a CMS, where this is where you would

122
00:06:47.760 --> 00:06:51.235
get data from a CMS and inject it on
a page and things like that, Mark.

123
00:06:51.235 --> 00:06:54.885
&gt;&gt; What's the difference between
getStaticProps and getServerSideProps?

124
00:06:54.885 --> 00:06:58.264
&gt;&gt; Good question, the question was what's
the difference between getServerSideProps

125
00:06:58.264 --> 00:06:59.149
and getStaticProps.

126
00:06:59.149 --> 00:07:04.097
getStaticProps is another function
that's also ran at a non client

127
00:07:04.097 --> 00:07:08.958
time except it's ran at build time
whereas getServerSideProps is

128
00:07:08.958 --> 00:07:11.147
ran at runtime on the server.

129
00:07:11.147 --> 00:07:15.694
So getServerSideProps is gonna
execute every single time you request

130
00:07:15.694 --> 00:07:16.773
this homepage,

131
00:07:16.773 --> 00:07:21.794
getStaticprops is only gonna execute
when you do a static build of your site.

132
00:07:21.794 --> 00:07:25.484
So if you're doing a static website
like a blog or something, you would do

133
00:07:25.484 --> 00:07:29.830
getStaticProps, whereas if you were doing
like, I want this page to be dynamic,

134
00:07:29.830 --> 00:07:33.540
it changes every time,
you would get getServerSideProps.

135
00:07:33.540 --> 00:07:37.227
So this will probably be a dynamic
page because theoretically,

136
00:07:37.227 --> 00:07:41.760
these artists will be different
depending on who's logged in.

137
00:07:41.760 --> 00:07:43.230
So that's why we're doing that.

138
00:07:43.230 --> 00:07:47.020
And we're not generating anything static
right now, we wanna keep this server side.

139
00:07:47.020 --> 00:07:49.380
So yeah, that's the difference there.

140
00:07:49.380 --> 00:07:52.909
So in the getStaticProps, you wouldn't
have access to a request cuz there isn't

141
00:07:52.909 --> 00:07:56.185
a request, this happened at build time,
whereas on getServerSideProps,

142
00:07:56.185 --> 00:07:58.700
you would have access to a request and
things like that.

143
00:07:58.700 --> 00:08:03.146
So yeah, okay, so
we'll get server props and

144
00:08:03.146 --> 00:08:07.938
then now appear we should
have access to artists.

145
00:08:11.384 --> 00:08:13.653
So we can check that out.

146
00:08:13.653 --> 00:08:15.354
You can see app's no longer breaking.

147
00:08:15.354 --> 00:08:17.890
If we didn't return anything here,
it would freak out.

148
00:08:17.890 --> 00:08:23.528
It would be like, you see right here
error serializing props returned from,

149
00:08:23.528 --> 00:08:27.097
yeah, props must be
returned as a plain object.

150
00:08:27.097 --> 00:08:27.624
[SOUND] So

151
00:08:27.624 --> 00:08:32.683
it's you actually have to return some
something here otherwise it disagrees.

152
00:08:32.683 --> 00:08:36.214
And if you do a log here, so
we do a console log on the artist,

153
00:08:36.214 --> 00:08:40.890
this should show up in your terminal or
whatever the result of it is, right?

154
00:08:40.890 --> 00:08:44.090
So let me actually refresh this.

155
00:08:44.090 --> 00:08:47.100
Make a call and you can see right
here it does log all the artists.

156
00:08:47.100 --> 00:08:49.683
So here they are, we got artists.

157
00:08:51.825 --> 00:08:55.986
But now looking at the artists, I noticed
there's no avatars on these artists,

158
00:08:55.986 --> 00:08:56.790
nothing here.

159
00:08:56.790 --> 00:08:58.829
So we could add some images for
the artists, or

160
00:08:58.829 --> 00:09:01.660
we can just add some
placeholders right now.

161
00:09:01.660 --> 00:09:05.668
If we add some images, we need to go
back to our schema, add an avatar field,

162
00:09:05.668 --> 00:09:09.930
make it required, run a migration,
go find some placeholder images probably,

163
00:09:09.930 --> 00:09:10.949
put them in there.

164
00:09:10.949 --> 00:09:13.369
Update our seed script to
reseed the database and

165
00:09:13.369 --> 00:09:15.031
then we can come back and do that.

166
00:09:15.031 --> 00:09:17.755
Or we can just bypass all of that and
just add,

167
00:09:17.755 --> 00:09:22.707
let's add a placeholder image here in the
homepage that just does it for artists,

168
00:09:22.707 --> 00:09:25.110
but that would be the process for that.

