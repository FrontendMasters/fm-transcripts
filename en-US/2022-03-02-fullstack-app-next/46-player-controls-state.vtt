WEBVTT

1
00:00:00.090 --> 00:00:03.615
Now we've got to start hooking
up some of the handlers and

2
00:00:03.615 --> 00:00:06.267
keeping track of some of the state things.

3
00:00:06.267 --> 00:00:09.239
So there's a lot of things to
keep track of but don't worry,

4
00:00:09.239 --> 00:00:11.865
I always wanna walk you
through my thought process and

5
00:00:11.865 --> 00:00:14.396
why I think we need to keep
track of certain things.

6
00:00:14.396 --> 00:00:17.178
There's also some gotchas going on with
the state and functional components.

7
00:00:17.178 --> 00:00:21.982
That's some really advanced react
stuff that I ran into, two years ago.

8
00:00:21.982 --> 00:00:23.916
I mean, I was just so stuck on it.

9
00:00:23.916 --> 00:00:25.571
I just did not get it.

10
00:00:25.571 --> 00:00:28.270
So I was really excited when
I saw the same issue here.

11
00:00:28.270 --> 00:00:30.219
And I was, I get to talk about this,
this is cool.

12
00:00:30.219 --> 00:00:32.796
So, let's do it.

13
00:00:32.796 --> 00:00:34.069
Let's hop into the code.

14
00:00:34.069 --> 00:00:37.755
So some of the things that we
need to keep track of actually,

15
00:00:37.755 --> 00:00:41.290
let me go to the design first,
is if we just look at the UI,

16
00:00:41.290 --> 00:00:45.451
this is how you can kind of figure
out what you need to keep track of.

17
00:00:45.451 --> 00:00:49.190
We need to keep track of whether or
not someone clicked the shuffle button.

18
00:00:49.190 --> 00:00:51.860
So we need to keep track of
is shuffled true or false.

19
00:00:51.860 --> 00:00:54.770
Same thing for repeat,
we gotta keep track of that.

20
00:00:54.770 --> 00:00:57.129
We also need to keep track
of if you're playing or

21
00:00:57.129 --> 00:01:00.705
not that way we can either show the play
button or the pause button, okay?

22
00:01:00.705 --> 00:01:03.206
We don't really need to keep track of
anything when it comes to the next or

23
00:01:03.206 --> 00:01:05.260
the previous because they just
do things when you hit them.

24
00:01:05.260 --> 00:01:08.620
They don't actually hold any information,
they just respond to a click.

25
00:01:09.670 --> 00:01:13.185
We do need to keep track
of the current duration,

26
00:01:13.185 --> 00:01:17.058
which ReactHowler,
I think does a lot of that for us.

27
00:01:17.058 --> 00:01:20.735
We need to keep track of the value of the
seekBar, so we can actually increase it,

28
00:01:20.735 --> 00:01:21.667
so it moves as we go.

29
00:01:21.667 --> 00:01:25.376
And we need to keep track
of the song that's playing.

30
00:01:25.376 --> 00:01:26.967
So we know the duration of it here.

31
00:01:26.967 --> 00:01:31.256
Yeah, I think that's all
the stuff we got to keep track of.

32
00:01:31.256 --> 00:01:33.038
So there's a lot of things going on there.

33
00:01:33.038 --> 00:01:37.172
And there might be some auxiliary
state that we need to watch for,

34
00:01:37.172 --> 00:01:41.698
like the player load, did the song load,
different things like that.

35
00:01:41.698 --> 00:01:45.064
But as far as the UI is concerned, those
are the things that we need to keep track

36
00:01:45.064 --> 00:01:47.155
of, so
we can actually represent them in the UI.

37
00:01:47.155 --> 00:01:49.660
So knowing that we're gonna
set up a lot of that state.

38
00:01:49.660 --> 00:01:53.488
Next, so we'll just go to the top
here of our component and

39
00:01:53.488 --> 00:01:56.083
we'll start setting some state here.

40
00:01:56.083 --> 00:02:01.143
So and
also the other thing we wanna think about

41
00:02:01.143 --> 00:02:06.477
is what does the input for
this player look like?

42
00:02:06.477 --> 00:02:07.833
Just to make it simple.

43
00:02:07.833 --> 00:02:11.480
I say, we should we should
make a text list of songs.

44
00:02:11.480 --> 00:02:16.455
So like a playlist and then it also
takes an active song, so we'll do that.

45
00:02:16.455 --> 00:02:20.017
So it takes the song that's currently
playing that way you can click on a song

46
00:02:20.017 --> 00:02:22.356
anywhere in the app and
it'll play that song, but

47
00:02:22.356 --> 00:02:25.823
it can also take a list of songs and
it'll start from there and keep going.

48
00:02:25.823 --> 00:02:27.159
So, we'll do that.

49
00:02:32.478 --> 00:02:34.064
And then as far as the state goes,

50
00:02:34.064 --> 00:02:37.533
what we wanna do is we wanna keep track
of whether you're playing or not.

51
00:02:37.533 --> 00:02:42.428
So, let's say playing or
playing and then setPlaying.

52
00:02:42.428 --> 00:02:45.155
That's gonna be a state here.

53
00:02:45.155 --> 00:02:48.896
We're gonna default to true.

54
00:02:48.896 --> 00:02:51.625
So, when this component loads up,
it's automatically gonna start playing.

55
00:02:51.625 --> 00:02:57.617
That means we're only gonna show this
control if you have active songs.

56
00:02:57.617 --> 00:03:00.188
So you won't see the play bar
at the bottom until you click on

57
00:03:00.188 --> 00:03:02.927
a player's until you click on the song and
then it'll show up.

58
00:03:02.927 --> 00:03:04.297
So this thing is visual.

59
00:03:04.297 --> 00:03:07.531
It's always playing, you can pause it,
but by default as soon as it shows up,

60
00:03:07.531 --> 00:03:08.513
it'll start playing.

61
00:03:08.513 --> 00:03:10.419
So we'll set that to true as a default.

62
00:03:10.419 --> 00:03:13.077
If you don't want that you
can set that to false and

63
00:03:13.077 --> 00:03:15.877
you just have to click Play
again which is annoying.

64
00:03:15.877 --> 00:03:17.227
You have to click play twice.

65
00:03:17.227 --> 00:03:18.631
You click on the song and then click Play.

66
00:03:18.631 --> 00:03:19.869
You don't want that.

67
00:03:19.869 --> 00:03:22.575
Or I guess you could just leave
the controls at the bottom the whole time.

68
00:03:22.575 --> 00:03:26.802
But than you have to set up the play
button to figure out what list of songs

69
00:03:26.802 --> 00:03:29.137
to play that, how would you know that?

70
00:03:29.137 --> 00:03:32.841
So, yeah, that's advanced,
we're not gonna do that.

71
00:03:32.841 --> 00:03:37.440
Other next thing is we need to keep track
of what song is currently playing in

72
00:03:37.440 --> 00:03:39.271
the list of songs that we got.

73
00:03:39.271 --> 00:03:43.932
So we can do that by just using an index,
so I'm just gonna say index and

74
00:03:43.932 --> 00:03:45.447
we'll say setIndex.

75
00:03:45.447 --> 00:03:47.342
And we're gonna set that
equal to use states here.

76
00:03:47.342 --> 00:03:49.737
For now with the save will
always start off at zero,

77
00:03:49.737 --> 00:03:52.254
we'll start at the beginning
of the Songs Playlist.

78
00:03:52.254 --> 00:03:55.219
It will play the first thing
in the array.We'll go back and

79
00:03:55.219 --> 00:03:58.364
we'll change this eventually
because if someone clicks on for

80
00:03:58.364 --> 00:04:01.051
instance, if I'm in here I
clicked this third song.

81
00:04:01.051 --> 00:04:04.427
And this thing automatically defaults
to zero even though I clicked on the on

82
00:04:04.427 --> 00:04:07.222
Start Song, which will send this
whole playlist down to here,

83
00:04:07.222 --> 00:04:10.777
it's gonna immediately go back and play
the first one cuz it starts off at zero.

84
00:04:10.777 --> 00:04:12.307
Instead, we want it to start here.

85
00:04:12.307 --> 00:04:16.600
So eventually we'll have to make this
default to whatever the index of active

86
00:04:16.600 --> 00:04:18.591
song is, but we'll do that later.

87
00:04:18.591 --> 00:04:21.819
So just know that for now to start
at zero if you run into that book,

88
00:04:21.819 --> 00:04:23.015
that's intentional.

89
00:04:24.996 --> 00:04:28.392
We also need to keep track of
seek if you are seeking or not.

90
00:04:28.392 --> 00:04:33.475
So you have the ability to
grab the thumb and seek.

91
00:04:33.475 --> 00:04:36.711
So we got to keep track on
whether you're doing that or not,

92
00:04:36.711 --> 00:04:40.790
because if you are doing that we have
to like dis disable certain things, so

93
00:04:40.790 --> 00:04:42.302
the UI doesn't freak out.

94
00:04:42.302 --> 00:04:47.509
So we'll keep track of
that by saying cons seek,

95
00:04:47.509 --> 00:04:55.220
setSeek, And we'll say, use states.

96
00:04:55.220 --> 00:05:02.420
And this will be, 0, I'm sorry,
this is the value we have to seek.

97
00:05:02.420 --> 00:05:05.088
There's another one that we're gonna use
for setting whether you're seeking or

98
00:05:05.088 --> 00:05:06.120
not I'm way ahead of myself.

99
00:05:06.120 --> 00:05:10.930
This is literally where this is
on the bar, like this right here.

100
00:05:10.930 --> 00:05:13.991
So it's gonna start off at 0 and
then go all the way up to 100 or

101
00:05:13.991 --> 00:05:17.360
whatever the duration is, so
we'll start that off at zero.

102
00:05:17.360 --> 00:05:21.223
I put 0.0, which obviously
doesn't make any sense, but

103
00:05:21.223 --> 00:05:25.935
the reason I put that is because
we're stepping by a decimal, by 0.1.

104
00:05:25.935 --> 00:05:29.937
So, but as far as JavaScript is concerned,
I think zero is the same thing.

105
00:05:29.937 --> 00:05:32.451
So it doesn't really matter,
just doing that.

106
00:05:32.451 --> 00:05:37.665
That way it looks obvious to an engineer
when they come here, then ready to keep

107
00:05:37.665 --> 00:05:43.116
track of repeating or not, so I'll say,
repeat, setRepeat equals you states.

108
00:05:43.116 --> 00:05:45.244
By default, we will not be repeating so,
we'll set that to false.

109
00:05:47.276 --> 00:05:50.913
Same thing with shuffle, I'm just gonna
copy to repeat, replace it with shuffle.

110
00:06:00.690 --> 00:06:05.566
Didn't mean to keep track of
the duration of the song,

111
00:06:05.566 --> 00:06:09.708
so I'll say, cons duration, set duration.

112
00:06:09.708 --> 00:06:14.436
Not sure how much we'll use this, because
the songs actually have durations on them

113
00:06:14.436 --> 00:06:18.629
but I think it might be helpful to keep
track of it in a format that makes sense

114
00:06:18.629 --> 00:06:22.047
for the player and not the format
that is saved in a database.

115
00:06:22.047 --> 00:06:27.088
So that's what this is for,
that also be a decimal like that.

116
00:06:27.088 --> 00:06:29.733
And those are pretty much all the things
we have to keep track of for now.

117
00:06:29.733 --> 00:06:34.353
Once we add the ReactHowler,
we're gonna go down and add that and

118
00:06:34.353 --> 00:06:36.457
we'll add in some handlers.

119
00:06:36.457 --> 00:06:40.946
We'll have a bunch of other stuff that
we need to keep track of as well as

120
00:06:40.946 --> 00:06:42.935
like res and things like that.

121
00:06:42.935 --> 00:06:45.914
But for now, this is pretty much all
we need to get most of the UI done.

122
00:06:50.537 --> 00:06:53.056
So now I'm gonna uncomment
this ReactHowler and

123
00:06:53.056 --> 00:06:55.520
we're going to start
adding some things here.

124
00:06:58.632 --> 00:07:00.248
But this one's gonna require
us to do a bunch of handlers.

125
00:07:00.248 --> 00:07:06.112
Basically ReactHowler, like I said, it's
a JS live that's been wrapped by react,

126
00:07:06.112 --> 00:07:11.169
it doesn't have a visual output,
doesn't show anything on the screen.

127
00:07:11.169 --> 00:07:15.608
It's just a library that controls
the sound API built into the browsers.

128
00:07:15.608 --> 00:07:18.622
And because everyone in
reacts loves components,

129
00:07:18.622 --> 00:07:21.434
they decided to give it
a component interface.

130
00:07:21.434 --> 00:07:23.777
They could have also just
gave us a hook interface and

131
00:07:23.777 --> 00:07:25.438
it would have been probably better.

132
00:07:25.438 --> 00:07:26.513
It would have made more sense.

133
00:07:26.513 --> 00:07:28.669
But it's a component interface and
that's how we're gonna use it.

134
00:07:28.669 --> 00:07:32.039
I was gonna make a hook one and
have that be part of the curriculum,

135
00:07:32.039 --> 00:07:34.073
but it was actually very complicated.

136
00:07:34.073 --> 00:07:35.718
And I was, we're not gonna do that.

137
00:07:35.718 --> 00:07:37.045
I'm that's just too much,
we'll just use this thing.

138
00:07:37.045 --> 00:07:42.005
So props we're gonna pass in here is need
to pass whether it's playing or not.

139
00:07:42.005 --> 00:07:43.433
Good luck, good thing for us.

140
00:07:43.433 --> 00:07:46.189
We have a variable for
that now, it's called playing.

141
00:07:46.189 --> 00:07:47.953
So we'll, say, playing, playing.

142
00:07:47.953 --> 00:07:52.877
The source is gonna be active song prop,
if we have it dot URL,

143
00:07:52.877 --> 00:07:56.976
songs have URLs according
to our database schema.

144
00:08:02.768 --> 00:08:06.943
And then now we're gonna start adding
some handlers to all of our things.

145
00:08:06.943 --> 00:08:12.586
So what we can do here is for
ReactHowler we want to handle

146
00:08:12.586 --> 00:08:17.644
when a song is done playing,
so we can do it on end.

147
00:08:17.644 --> 00:08:19.362
We can do all those different things.

148
00:08:19.362 --> 00:08:22.937
But instead, I think it makes sense to
just start with some of the buttons that

149
00:08:22.937 --> 00:08:24.652
we created for ourselves down here.

150
00:08:24.652 --> 00:08:27.357
So let's go down to our icon buttons.

151
00:08:27.357 --> 00:08:30.899
Okay, the first thing we should tackle
is the fact that we have a play and

152
00:08:30.899 --> 00:08:31.914
pause button here.

153
00:08:31.914 --> 00:08:33.216
So let's fix that.

154
00:08:33.216 --> 00:08:36.928
So what we'll do here is right, let's
grouping the play and the pause button.

155
00:08:36.928 --> 00:08:41.874
Will instead do a conditional and
we'll say, playing, playing is true,

156
00:08:41.874 --> 00:08:46.988
then that means we really wanna show
pause, we want to show the Pause button.

157
00:08:46.988 --> 00:08:48.771
So I will put that here.

158
00:08:48.771 --> 00:08:54.543
If not playing,
then we wanna show the Play button.

159
00:09:01.344 --> 00:09:05.447
So now we have that, if ReactHowler
didn't freak out which it still is, so

160
00:09:05.447 --> 00:09:08.785
you can comment that out until
we finish it, see what we got.

161
00:09:08.785 --> 00:09:11.157
You can see now the Play button is here.

162
00:09:11.157 --> 00:09:13.026
And we're good to go with that.

163
00:09:13.026 --> 00:09:14.245
Question?

164
00:09:14.245 --> 00:09:17.758
&gt;&gt; Do you have use user reducer
to eliminate some of the state?

165
00:09:17.758 --> 00:09:25.749
&gt;&gt; The question is, do I ever use use
reducer to eliminate some of the state?

166
00:09:25.749 --> 00:09:30.065
I've used used reducer once or twice ever.

167
00:09:30.065 --> 00:09:35.411
And it was because I had some amazing
things that I needed to do and

168
00:09:35.411 --> 00:09:38.781
it wasn't so much that I had more state.

169
00:09:38.781 --> 00:09:41.963
It that updating the state
was very complicated.

170
00:09:41.963 --> 00:09:49.126
It's typically when my state is not
primitive values like Boolean of numbers.

171
00:09:49.126 --> 00:09:52.618
If my state is like objects,
then I'm like okay, I need a reducer for

172
00:09:52.618 --> 00:09:54.743
this because updating it is ridiculous.

173
00:09:54.743 --> 00:09:59.817
So cuz that's when you start getting
into immutability versus mutability,

174
00:09:59.817 --> 00:10:02.870
like setting a Boolean a true or
false is easy.

175
00:10:02.870 --> 00:10:05.415
Setting a number is simple, but updating
a nested property, that's really tough.

176
00:10:05.415 --> 00:10:07.175
So a producer actually helps with that.

177
00:10:07.175 --> 00:10:10.652
So that's when I would use use reducers.

178
00:10:10.652 --> 00:10:12.056
When the state is anything
that's not primitive, and

179
00:10:12.056 --> 00:10:13.624
there's like enough that where
it's to paint to update it.

180
00:10:15.568 --> 00:10:20.578
Okay, so we got that and
now we can actually make the toggle work.

181
00:10:20.578 --> 00:10:23.957
So what we can do is we can say, well,

182
00:10:23.957 --> 00:10:28.766
when you click the buttons
it'll toggle the state.

183
00:10:28.766 --> 00:10:30.707
So we need to make a handler for that.

184
00:10:30.707 --> 00:10:34.938
So I'm just gonna make one
function that does both, and

185
00:10:34.938 --> 00:10:38.009
I'm just gonna say cons setPlayState.

186
00:10:38.009 --> 00:10:40.372
And it'll take in a value.

187
00:10:40.372 --> 00:10:42.406
That'll be true or false.

188
00:10:42.406 --> 00:10:46.639
And all it's gonna do is setPlaying
to whatever that value is.

189
00:10:52.754 --> 00:10:56.474
So we got to setPlayState
as it's gonna set playing.

190
00:10:56.474 --> 00:10:59.069
To wherever the value is that you
pass in which will be a Boolean.

191
00:10:59.069 --> 00:11:02.870
Now we can go down to our play pause,
and then on the Pause button,

192
00:11:02.870 --> 00:11:04.546
we're gonna do an onClick.

193
00:11:04.546 --> 00:11:07.257
When you click the Pause button,

194
00:11:10.304 --> 00:11:15.163
We want to say, setPlayState to falsecuz
now you're not playing when you click it.

195
00:11:17.644 --> 00:11:20.758
I'm sorry,
you must set it to true cuz you hit Pause.

196
00:11:20.758 --> 00:11:23.105
So you want to do the opposite of it,
sorry, yeah.

197
00:11:26.708 --> 00:11:28.764
And then for the play,
you wanna do the opposite of that.

198
00:11:31.448 --> 00:11:32.557
I got backwards there.

199
00:11:32.557 --> 00:11:35.965
&gt;&gt; I flipped the the two
values I set false and

200
00:11:35.965 --> 00:11:41.256
then true in the mind started working
&gt;&gt; Maybe I got it backwards again,

201
00:11:41.256 --> 00:11:43.089
backwards backwards today.

202
00:11:43.089 --> 00:11:45.561
Okay, yeah, you're right.

203
00:11:45.561 --> 00:11:48.634
I had it right the first time and then I
was like, wait, this doesn't look right.

204
00:11:48.634 --> 00:11:49.660
There we go.

205
00:11:49.660 --> 00:11:51.388
Now we're toggling on our play and pause.

206
00:11:51.388 --> 00:11:53.170
Thank you for that.

207
00:11:53.170 --> 00:11:56.630
And I'm just gonna set that
back to true for our defaults.

208
00:12:00.254 --> 00:12:01.442
Okay, so now we got our one button.

209
00:12:04.762 --> 00:12:08.686
The next thing we wanna do is
we want to set up the state for

210
00:12:08.686 --> 00:12:10.699
the shuffle and the repeat.

211
00:12:10.699 --> 00:12:13.658
And basically all that's gonna do is
just set those states to true and

212
00:12:13.658 --> 00:12:16.833
then it'll just change the color to
be white cuz right now they're gray.

213
00:12:16.833 --> 00:12:18.809
And we know they're active
when they turn white.

214
00:12:18.809 --> 00:12:24.277
So we're just gonna change the color
when one of those are active.

215
00:12:24.277 --> 00:12:29.518
So let's go to the skip which is the,
or the shuffle which is the first one.

216
00:12:29.518 --> 00:12:32.720
And what we'll do here is we'll
basically just change the color of it.

217
00:12:32.720 --> 00:12:36.373
So we'll say color, and
we can do something like this.

218
00:12:36.373 --> 00:12:42.236
We can say, if it's shuffle, is true,
then we can say, make it whites,

219
00:12:42.236 --> 00:12:47.639
otherwise it'll just be whatever it was,
which was great 600.

220
00:12:47.639 --> 00:12:49.015
So we'll do that.

221
00:12:52.451 --> 00:12:57.184
And we'll do the same thing for the last
button which is to repeat except for

222
00:12:57.184 --> 00:12:59.908
it won't stay alert for the repeat state.

223
00:13:03.381 --> 00:13:06.302
And then to actually trigger
that we just set us onClicks.

224
00:13:06.302 --> 00:13:13.548
So onClick for this button, we just
want to basically toggle whether or

225
00:13:13.548 --> 00:13:18.150
not you're repeating and things like that.

226
00:13:18.150 --> 00:13:19.321
So we'll make some handlers.

227
00:13:19.321 --> 00:13:20.823
So let's say onShuffle and onRepeat.

228
00:13:20.823 --> 00:13:28.780
So const onShuffle, And
then const onRepeat.

229
00:13:28.780 --> 00:13:34.549
They're basically the same thing, so
all we're gonna do is just say setShuffle.

230
00:13:34.549 --> 00:13:41.315
And we could just come in here and say
not shuffled give me the inverse of that.

231
00:13:41.315 --> 00:13:45.917
But setting state is asynchronous and
you never are guaranteed to have

232
00:13:45.917 --> 00:13:50.918
the current state at the time if you're
trying to use it to set the next date.

233
00:13:50.918 --> 00:13:55.698
So you have to put a callback in here, and
then get the current state this way and

234
00:13:55.698 --> 00:13:59.114
then now you can just say,
give me the not state of that.

235
00:13:59.114 --> 00:14:05.210
This guarantees that you have the true
state at the time that you called it.

236
00:14:05.210 --> 00:14:09.063
It will probably still work the other way,
but it's not guaranteed to work that way.

237
00:14:09.063 --> 00:14:14.150
So if you need the current state to
set the next version of the state

238
00:14:14.150 --> 00:14:19.437
always do it in a callback,
that way you get the true current state.

239
00:14:19.437 --> 00:14:23.287
And you won't be lagging behind a couple
of render cycles of what the state was,

240
00:14:23.287 --> 00:14:25.367
which actually does cause a lot of issues.

241
00:14:25.367 --> 00:14:30.814
Same thing for onRepeat, except for
we won't setShuffle will set repeat.

242
00:14:34.111 --> 00:14:35.789
Okay, onShuffle, onRepeat.

243
00:14:35.789 --> 00:14:39.165
So that will go down to
our shuffle right here.

244
00:14:39.165 --> 00:14:42.809
We'll do it onClick, we'll say onShuffle.

245
00:14:45.948 --> 00:14:48.599
And we'll do the same thing for repeat.

246
00:14:49.800 --> 00:14:52.632
Except for onRepeat, there we go.

247
00:14:58.752 --> 00:15:03.435
All right, so now if I click these,
you see shuffle highlights,

248
00:15:03.435 --> 00:15:06.344
turns white, and repeat, same thing.

249
00:15:11.929 --> 00:15:13.369
Good pretty good, good pretty good.

250
00:15:13.369 --> 00:15:14.271
So that was one issue,

251
00:15:14.271 --> 00:15:16.896
this wasn't the one that I said
that I ran into we'll get to that.

252
00:15:16.896 --> 00:15:22.993
But yeah, always again, if you need to
use a current state to set the next date,

253
00:15:22.993 --> 00:15:27.452
you need to always do it in
a callback in a setter function,

254
00:15:27.452 --> 00:15:30.379
you will probably run into some bugs.

255
00:15:30.379 --> 00:15:34.119
If that components doing a lot of
setting somewhere or you'll get like,

256
00:15:34.119 --> 00:15:38.105
some weird stuff happening and then you'll
try to fix it with a use effects and

257
00:15:38.105 --> 00:15:41.561
you have a race condition and
you'll eventually do a set timeout.

258
00:15:41.561 --> 00:15:43.308
And you'd like that salted.

259
00:15:43.308 --> 00:15:47.160
[LAUGH] But all you wanted to do was this.

260
00:15:47.160 --> 00:15:51.349
So if you ever do this set timeout
01 of your functional components,

261
00:15:51.349 --> 00:15:53.979
it's probably somewhere because of this.

262
00:15:53.979 --> 00:15:55.609
That's waiting on the next render,

263
00:15:55.609 --> 00:15:58.193
seems like the play state
wrapper function is redundant.

264
00:15:58.193 --> 00:16:00.921
Totally redundant,
you can do everything in a callback.

265
00:16:00.921 --> 00:16:05.440
But the problem with adding anonymous
callback, like we did is that

266
00:16:05.440 --> 00:16:10.214
it's gonna be created every single
time which is gonna cause renders.

267
00:16:10.214 --> 00:16:12.568
So typically,
you wanna make a function yourself and

268
00:16:12.568 --> 00:16:16.033
use the use callback handler to prevent
that from happening as optimization.

269
00:16:16.033 --> 00:16:18.038
This was just a precursor to that.

270
00:16:18.038 --> 00:16:20.520
So that's just a habit that I always do.

271
00:16:20.520 --> 00:16:24.646
Why you setPlayState but for the rest
onRepeat I asked about the naming.

272
00:16:24.646 --> 00:16:32.390
Okay, so we used setPlayStates
versus the two different things.

273
00:16:32.390 --> 00:16:37.455
That's because setPlayState uses the same
setter function as far as the hook,

274
00:16:37.455 --> 00:16:42.080
whereas onShuffle and onRepeat,
use two different setter functions.

275
00:16:42.080 --> 00:16:46.914
And I didn't feel like passing in a string
to one function to determine if you wanted

276
00:16:46.914 --> 00:16:49.688
to set a shuffle or
if you wanted to set a repeat.

277
00:16:49.688 --> 00:16:52.743
I just didn't feel like checking strings,
so I didn't do that.

278
00:16:52.743 --> 00:16:55.639
Didn't have to do that with play state
because it's always setting the same

279
00:16:55.639 --> 00:16:56.370
setter function.

