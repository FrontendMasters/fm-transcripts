WEBVTT

1
00:00:00.590 --> 00:00:02.420
So let's do that.

2
00:00:02.420 --> 00:00:04.880
I'm going to stop what I have now.

3
00:00:04.880 --> 00:00:06.042
And we're just gonna make a brand new app.

4
00:00:06.042 --> 00:00:09.610
In my terminal here, so I go back out.

5
00:00:09.610 --> 00:00:13.782
And what I'm gonna do is I'm
gonna use a tool called NPX.

6
00:00:13.782 --> 00:00:16.900
MPX should have came installed with NPM.

7
00:00:16.900 --> 00:00:21.322
If you have, I think, I don't know what
version of node that NPX shipped with, but

8
00:00:21.322 --> 00:00:24.921
if you have any relatively new
version of node in the last two years,

9
00:00:24.921 --> 00:00:26.205
you probably have NPX.

10
00:00:26.205 --> 00:00:29.498
If not, just upgrade your version of
node to like, I want to say the minimum,

11
00:00:29.498 --> 00:00:32.295
I think I said it before which was 12,
you should be good there.

12
00:00:32.295 --> 00:00:36.987
NPX just allows you to run global NPM
commands without actually installing those

13
00:00:36.987 --> 00:00:39.822
commands on your computer,
it's pretty cool.

14
00:00:39.822 --> 00:00:46.550
So we're gonna use one
called create-next-app.

15
00:00:46.550 --> 00:00:49.940
And there's this framework called
Next.js that sits on top of React.

16
00:00:49.940 --> 00:00:53.300
We're gonna talk more about it, but
there's gonna say NPX create next app.

17
00:00:53.300 --> 00:00:54.710
And then you can give the folder a name.

18
00:00:54.710 --> 00:00:59.050
In this case, I'm gonna call it myapp,
I'm gonna hit enter.

19
00:00:59.050 --> 00:01:02.790
And as you can see right now, it's saying
it's installing React, React DOM and

20
00:01:02.790 --> 00:01:04.720
something called next.

21
00:01:04.720 --> 00:01:08.228
We'll let that install and
it's installing some eslint stuff,

22
00:01:08.228 --> 00:01:11.390
some really cool things happening here.

23
00:01:11.390 --> 00:01:15.470
Once that's done, I'm gonna cd into myapp.

24
00:01:15.470 --> 00:01:16.980
And I'm gonna open this thing up.

25
00:01:16.980 --> 00:01:18.440
So here we are in VS code.

26
00:01:18.440 --> 00:01:22.876
And what the create next app does
is just a CLI that scaffolds out

27
00:01:22.876 --> 00:01:25.310
a HelloWorld Next.js app for us.

28
00:01:25.310 --> 00:01:26.950
And here are all the files.

29
00:01:26.950 --> 00:01:31.121
And if you wanted to run this right
quick just to see what it is,

30
00:01:31.121 --> 00:01:33.940
you can just type in
npm run dev like that.

31
00:01:34.960 --> 00:01:36.923
And it'll start this up on 3000.

32
00:01:36.923 --> 00:01:41.038
Go to check it out and you get this
beautiful Next.js React application.

33
00:01:41.038 --> 00:01:45.223
I actually have previously taught
courses on Next.js here for the masters.

34
00:01:45.223 --> 00:01:49.600
There's a intro one and
then like a more production focused one.

35
00:01:49.600 --> 00:01:53.741
So if you really wanna dive deep into
Next.js, and you wanna get the details of

36
00:01:53.741 --> 00:01:57.724
that, check those courses out because
I do cover that in a lot more detail.

37
00:01:57.724 --> 00:01:59.990
Although, we will be getting intimate
with Next.js in this course as well.

38
00:01:59.990 --> 00:02:03.522
So if you haven't used it, it's not a big
deal as long as you understand React,

39
00:02:03.522 --> 00:02:04.594
you're gonna be fine.

40
00:02:04.594 --> 00:02:07.030
It's not a dependency or
anything like that.

41
00:02:07.030 --> 00:02:10.577
Next.js is just a bunch of
conventions on top of React,

42
00:02:10.577 --> 00:02:14.060
it doesn't really do anything differently,
sweet.

43
00:02:14.060 --> 00:02:15.920
So we have the helloworld Next.js app.

44
00:02:17.220 --> 00:02:20.710
Let's get over to the code and just kind
of give you a tour what's happening here.

45
00:02:20.710 --> 00:02:23.516
So first we have our pages directory,
which are gonna be all the pages and

46
00:02:23.516 --> 00:02:24.770
the routes that we have.

47
00:02:24.770 --> 00:02:26.149
We also have our API folder,

48
00:02:26.149 --> 00:02:29.020
because Next.js is actually
a full stack framework.

49
00:02:29.020 --> 00:02:31.901
So in this course, we won't actually be,
I mean, if you think about it,

50
00:02:31.901 --> 00:02:34.140
there's multiple ways to make
a full stack app, right?

51
00:02:34.140 --> 00:02:38.459
Like you have the traditional
full stack app from like 2012 or

52
00:02:38.459 --> 00:02:41.678
something where you would
have a Python server or

53
00:02:41.678 --> 00:02:46.360
a node server that's actually
serving the assets of your frontend.

54
00:02:46.360 --> 00:02:49.860
And then we got smarter and was like,
now we have single page applications.

55
00:02:49.860 --> 00:02:52.642
Maybe we should host our single
page application on a CDN.

56
00:02:52.642 --> 00:02:54.940
And then we have an API and JSON server.

57
00:02:54.940 --> 00:02:56.084
So that's like level two.

58
00:02:56.084 --> 00:03:00.022
Well now, we're coming back to this whole
monolith thing where it's like, well,

59
00:03:00.022 --> 00:03:02.620
what if we just want
everything in one app?

60
00:03:02.620 --> 00:03:04.620
But the backend architecture is different.

61
00:03:04.620 --> 00:03:07.396
So although we're back now
to having a backend and

62
00:03:07.396 --> 00:03:11.361
a frontend in the same application,
the way that they're deployed and

63
00:03:11.361 --> 00:03:16.119
the way they're used in architecture that
defines them is completely different than

64
00:03:16.119 --> 00:03:19.978
having a constantly running server
that's serving static assets.

65
00:03:19.978 --> 00:03:23.646
Now we still are using a CDN,
now we're using serverless functions but

66
00:03:23.646 --> 00:03:26.535
we get the benefit of having
them both live side by side.

67
00:03:26.535 --> 00:03:28.071
And in the case of Next.js,

68
00:03:28.071 --> 00:03:32.360
we get the benefit of writing backend
code and a frontend component.

69
00:03:32.360 --> 00:03:34.143
It's gonna get pretty crazy here,

70
00:03:34.143 --> 00:03:37.412
so the lines are gonna get blurrier
when we're on the frontend and

71
00:03:37.412 --> 00:03:41.238
when we're on the backend because
there's no definite line between them.

72
00:03:41.238 --> 00:03:44.033
So it's gonna get really blurry which
is actually a feature of Next.js so

73
00:03:44.033 --> 00:03:44.808
I kind of love that.

74
00:03:44.808 --> 00:03:47.295
And you'll see what I'm
talking about very soon.

75
00:03:47.295 --> 00:03:50.591
So we got the pages directory here, we got
our public stuff that's where you can put

76
00:03:50.591 --> 00:03:52.675
assets like images, things like that.

77
00:03:52.675 --> 00:03:55.077
Styles folder,
we won't be using styles folder here,

78
00:03:55.077 --> 00:03:57.588
we'll be styling our components
completely different.

79
00:03:57.588 --> 00:04:01.363
And then everything else is just
configuration so nothing special here.

80
00:04:01.363 --> 00:04:05.886
So if we head over to the link
that I sent you for that notion,

81
00:04:05.886 --> 00:04:10.952
there should be some, if you scroll
down to where it says configs,

82
00:04:10.952 --> 00:04:17.410
there should be some stuff here to copy
and paste for your configuration files.

83
00:04:17.410 --> 00:04:21.090
So this is just my eslint
configuration that I use.

84
00:04:21.090 --> 00:04:23.820
I put this here because I
felt like it'd be helpful.

85
00:04:23.820 --> 00:04:26.190
I spent so many years, months, weeks,

86
00:04:26.190 --> 00:04:30.740
just trying to figure out a really good
eslint setup for different projects.

87
00:04:30.740 --> 00:04:33.510
So I went ahead and put the one
that I use to create this app here.

88
00:04:33.510 --> 00:04:35.020
So feel free to copy this one.

89
00:04:36.040 --> 00:04:42.990
And add this to your eslint config and
then I'm going to go over to our code.

90
00:04:42.990 --> 00:04:45.370
There's a eslint, rc.json.

91
00:04:45.370 --> 00:04:49.258
I'm actually just gonna rename
mine to be eslintrc.js and

92
00:04:49.258 --> 00:04:53.854
not JSON because I don't like writing
JSON if I can write JavaScript.

93
00:04:53.854 --> 00:04:56.860
So I'm just gonna write JavaScript and
save, and

94
00:04:56.860 --> 00:05:00.233
paste that in to a module exports,
so we are good there.

95
00:05:00.233 --> 00:05:05.423
And then the next thing is
I want to use TypeScript,

96
00:05:05.423 --> 00:05:08.454
so there's a tsconfig here.

97
00:05:08.454 --> 00:05:11.023
Next.js is actually really cool is
that it'll detect TypeScript for

98
00:05:11.023 --> 00:05:13.982
us it'll set up a tsconfig, I'm actually
just gonna wait before I paste that and

99
00:05:13.982 --> 00:05:15.177
we'll get to that stuff later.

100
00:05:15.177 --> 00:05:18.581
So I'm not gonna paste
the tsconfig stuff yet but

101
00:05:18.581 --> 00:05:22.497
I am going to take this babelrc file and
paste that over.

102
00:05:22.497 --> 00:05:25.705
So we're gonna make
a new file on the route,

103
00:05:25.705 --> 00:05:31.449
call it .babelrc with no file extension,
and I'm gonna paste that in there.

104
00:05:31.449 --> 00:05:36.473
This is actually to help us with
a pretty nuanced, I wouldn't say bug,

105
00:05:36.473 --> 00:05:41.417
but there's an issue with parsing
JSON inside of these data functions

106
00:05:41.417 --> 00:05:45.773
inside of Next.js when it comes
to things like date objects or

107
00:05:45.773 --> 00:05:49.840
circular things like that,
the JSON parser freaks out.

108
00:05:49.840 --> 00:05:50.516
This fixes it so

109
00:05:50.516 --> 00:05:54.000
it's just something to fix a bug that
we will definitely run into later.

110
00:05:54.000 --> 00:05:56.110
When we get there I'll remind
you of why we did this.

111
00:05:56.110 --> 00:05:58.550
You'll see why we did that.

112
00:05:58.550 --> 00:06:00.857
And then the next thing is to
get to someone asked earlier,

113
00:06:00.857 --> 00:06:02.850
what are all the dependencies
that we're using.

114
00:06:02.850 --> 00:06:03.723
Here they are,

115
00:06:03.723 --> 00:06:07.356
here are all the dependencies that
we are using in this project.

116
00:06:07.356 --> 00:06:09.973
So I'm actually just gonna go ahead and

117
00:06:09.973 --> 00:06:13.392
copy all of these dependencies here,
there we go.

118
00:06:13.392 --> 00:06:17.400
I feel like it'd be much easier to copy
and put these in a package JSON than into

119
00:06:17.400 --> 00:06:20.990
NPM install all these in a terminal,
so that can get really tedious.

120
00:06:20.990 --> 00:06:23.781
So I'm gonna copy those,
put them in a package JSON,

121
00:06:23.781 --> 00:06:28.260
go down to our dependencies objects here,
and I'm just gonna hit paste.

122
00:06:28.260 --> 00:06:31.410
We'll definitely have duplicates with
the Next.js and the React and stuff.

123
00:06:31.410 --> 00:06:35.150
So I'm just gonna delete the duplicates,
there we go.

124
00:06:35.150 --> 00:06:39.053
Make sure it's formatted as JSON,
make sure your commas are good and

125
00:06:39.053 --> 00:06:40.077
stuff like that.

126
00:06:40.077 --> 00:06:43.975
And then we also have the same thing for
our dev dependencies.

127
00:06:43.975 --> 00:06:48.882
So tons of dev dependencies here mostly
for the eslint stuff but we're gonna copy

128
00:06:48.882 --> 00:06:53.010
some of that as well and paste those
in the dev dependencies like so.

129
00:06:56.829 --> 00:06:57.610
There we go.

130
00:06:57.610 --> 00:07:02.125
So once you get all of that, you should
be able to go back to your terminal.

131
00:07:02.125 --> 00:07:06.548
I'm gonna open up a new terminal actually,
and I'm gonna go back into my code here.

132
00:07:12.818 --> 00:07:16.210
And you should just be able to type
in NPM install or NPM I for short.

133
00:07:18.200 --> 00:07:19.743
And I should read the package.json and

134
00:07:19.743 --> 00:07:21.810
just install all the stuff
that you pasted in there.

135
00:07:21.810 --> 00:07:25.258
So probably gonna take a minute
because it's a lot of dependencies.

136
00:07:25.258 --> 00:07:27.765
Any questions so far?

137
00:07:27.765 --> 00:07:29.988
&gt;&gt; I don't know if it's
just my machine thing but

138
00:07:29.988 --> 00:07:32.970
because I have Yarn installed
it defaulted to that.

139
00:07:32.970 --> 00:07:36.110
And so running NPM has given me issues but
running Yarn is working.

140
00:07:36.110 --> 00:07:38.005
I just thought I bring that up,
it's running.

141
00:07:38.005 --> 00:07:41.580
&gt;&gt; Yeah, if you're using Yarn,
it'll still read the package JSON.

142
00:07:41.580 --> 00:07:44.508
So if you're using Yarn or if you prefer
Yarn, you should just be able to do

143
00:07:44.508 --> 00:07:46.890
Yarn install and it should give
you the same effect as well.

144
00:07:48.040 --> 00:07:52.130
We're not using anything
unique to NPM in this course.

145
00:07:52.130 --> 00:07:55.214
So everything that we're doing, every
time you see me run a command with NPM,

146
00:07:55.214 --> 00:07:58.050
you can substitute that with Yarn and
it should work exactly the same.

147
00:07:58.050 --> 00:08:00.155
So, now that we have all of this,

148
00:08:00.155 --> 00:08:03.710
the next thing that I want to
do is set up the TypeScript.

149
00:08:03.710 --> 00:08:09.039
So the easiest way to do that actually is
I'm just gonna go to the pages directory,

150
00:08:09.039 --> 00:08:11.139
see where it says, index.js.

151
00:08:11.139 --> 00:08:16.440
I'm just gonna change that to index.tsx,
if you don't know what the tsx

152
00:08:16.440 --> 00:08:21.930
extension is, it's just TypeScript JSX,
that's what the extension is.

153
00:08:23.120 --> 00:08:26.917
That's just an extension that they came up
with, but it's basically TypeScript JSX

154
00:08:26.917 --> 00:08:31.220
which today is just a TypeScript file,
we're literally only using TypeScript.

155
00:08:31.220 --> 00:08:34.890
Honestly, it's for
the database types that we get for free.

156
00:08:34.890 --> 00:08:37.910
We will not be making custom types and
things like that.

157
00:08:37.910 --> 00:08:39.970
So if you're like, my God,
I don't know TypeScript, that's fine.

158
00:08:39.970 --> 00:08:41.840
That's not a requirement for this course.

159
00:08:41.840 --> 00:08:46.582
We're just using the latest tsx features
and getting some nice code completion

160
00:08:46.582 --> 00:08:50.150
with some of the database
tooling that we're gonna get.

161
00:08:50.150 --> 00:08:54.314
Other than that, we will pretty much be
opting out of all things type related, so

162
00:08:54.314 --> 00:08:56.350
no need to be a TypeScript expert here.

163
00:08:57.540 --> 00:09:01.660
I'm also gonna change this
appjs to app.tsx as well.

164
00:09:03.560 --> 00:09:05.794
And again, the process that I've walked
you through is literally how I get

165
00:09:05.794 --> 00:09:07.120
started with a project.

166
00:09:07.120 --> 00:09:08.880
I literally do these exact same steps.

167
00:09:08.880 --> 00:09:12.097
The only thing different will be instead
of pasting in a bag of dependencies

168
00:09:12.097 --> 00:09:15.415
in the package JSON, I would have just
said NPM install inside of a terminal,

169
00:09:15.415 --> 00:09:16.080
that's it.

170
00:09:16.080 --> 00:09:20.440
Everything else is exactly the same,
I do this stuff all the time.

171
00:09:20.440 --> 00:09:21.394
So once we have that,

172
00:09:21.394 --> 00:09:24.380
what you can do is you can stop
the server if it's already running.

173
00:09:25.740 --> 00:09:29.520
And if you go try to run it again with
NPM run dev, it's gonna say, hey,

174
00:09:29.520 --> 00:09:31.860
we detected TypeScript in your project.

175
00:09:31.860 --> 00:09:35.080
And we created a tsconfig file for
you, right?

176
00:09:35.080 --> 00:09:37.570
It's pretty awesome,
Next.js is pretty cool.

177
00:09:37.570 --> 00:09:39.350
So I'm gonna stop that again.

178
00:09:39.350 --> 00:09:40.830
Gonna go back to the notes.

179
00:09:40.830 --> 00:09:45.240
I'm gonna scroll up to that tsconfig
that I said don't touch yet.

180
00:09:45.240 --> 00:09:48.050
And now I'm gonna grab it and
put it in there.

181
00:09:48.050 --> 00:09:50.170
Although, I do think it's
the same thing that they created.

182
00:09:50.170 --> 00:09:52.340
I don't think I actually changed anything.

183
00:09:52.340 --> 00:09:54.665
But just to be safe, I'm gonna copy and

184
00:09:54.665 --> 00:09:58.404
paste it anyway because I'm
pretty sure it's the same thing.

185
00:09:58.404 --> 00:10:02.054
So I'm gonna go to my tsconfig,
copy and paste that and yeah,

186
00:10:02.054 --> 00:10:03.893
this was definitely the same.

187
00:10:03.893 --> 00:10:04.650
Mark?

188
00:10:04.650 --> 00:10:09.838
&gt;&gt; Can you explain the difference
between _app.jsx and index?

189
00:10:09.838 --> 00:10:11.650
&gt;&gt; Yeah, absolutely.

190
00:10:11.650 --> 00:10:14.420
So it's an Next.js convention.

191
00:10:14.420 --> 00:10:18.681
The way that this works in Next.js is that
anything in the pages folder is gonna get

192
00:10:18.681 --> 00:10:20.830
a route associated with it on a router.

193
00:10:20.830 --> 00:10:23.490
So we don't actually have to
configure a router here in Next.js.

194
00:10:23.490 --> 00:10:27.060
Is gonna be based off the file
names inside the pages folder.

195
00:10:27.060 --> 00:10:31.267
So in this case, we have an index.tsx
that's gonna create a route for slash,

196
00:10:31.267 --> 00:10:32.980
the route of our app.

197
00:10:32.980 --> 00:10:37.550
Underscore app basically means, hey,
I don't want a route to be created.

198
00:10:37.550 --> 00:10:41.007
And in this case underscore app
as far as Next.js concerned,

199
00:10:41.007 --> 00:10:44.180
it's gonna be the route
of our application.

200
00:10:44.180 --> 00:10:50.637
So if you were creating a React app today,
and you had probably like an index file or

201
00:10:50.637 --> 00:10:55.224
app file where you bootstrapped
your React app to the DOM,

202
00:10:55.224 --> 00:10:57.860
that's what underscore app is.

203
00:10:57.860 --> 00:11:00.941
This is where you would have done that,
except you don't actually

204
00:11:00.941 --> 00:11:04.130
have to bootstrap it to the DOM,
Next.js does that for you.

205
00:11:04.130 --> 00:11:06.120
But this is the route of your application.

206
00:11:06.120 --> 00:11:10.766
It's gonna be pretty much the entry
point to every page on a component or

207
00:11:10.766 --> 00:11:12.322
every page on your app.

208
00:11:12.322 --> 00:11:14.883
Underscore just means,
don't make a route for this.

209
00:11:14.883 --> 00:11:18.634
If I got rid of the underscore, Next.js
would actually make a route called slash

210
00:11:18.634 --> 00:11:21.975
app and it will load that component,
which is not what we want here.

211
00:11:21.975 --> 00:11:25.586
This is the entry to our application where
it's like every component here that I'm

212
00:11:25.586 --> 00:11:27.485
highlighting would be a page.

213
00:11:27.485 --> 00:11:29.245
It all gets rendered inside of this app.

214
00:11:29.245 --> 00:11:30.305
It's a convention.

215
00:11:30.305 --> 00:11:34.987
Again, you can learn more about that
in the next year's course that I taught

216
00:11:34.987 --> 00:11:38.425
earlier, and
it goes over a lot of stuff in detail.

217
00:11:38.425 --> 00:11:42.685
There are some more conventions that we'll
be doing and I'll talk about them as we do

218
00:11:42.685 --> 00:11:46.105
them because newer things have come
out since I taught that course.

219
00:11:46.105 --> 00:11:47.565
So Next.js is evolving.

220
00:11:47.565 --> 00:11:50.512
Max is asking about the red
underline stuff here.

221
00:11:50.512 --> 00:11:55.500
So this is basically my editor
freaking out because I'm violating

222
00:11:55.500 --> 00:11:57.510
my own eslint rules.

223
00:11:57.510 --> 00:12:00.540
So it's like, you need to fix this.

224
00:12:00.540 --> 00:12:01.612
I can fix it manually or

225
00:12:01.612 --> 00:12:05.500
I can use something called prettier that
will just fix it for me automatically.

226
00:12:05.500 --> 00:12:07.685
But basically, this one is just an error
function, so I'll just do that,

227
00:12:14.727 --> 00:12:17.917
And then, it wants to exports,
default, home.

228
00:12:17.917 --> 00:12:23.578
And it wants to be nice, there we go.

229
00:12:23.578 --> 00:12:28.642
So it's just my editor freaking out
about not having error functions.

230
00:12:28.642 --> 00:12:32.389
So that's the eslint, that's my own
eslint config I guess it's doing its job.

