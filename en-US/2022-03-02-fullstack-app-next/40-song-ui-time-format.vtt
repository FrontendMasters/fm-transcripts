WEBVTT

1
00:00:00.400 --> 00:00:03.270
What's next is we need
to have these rows here.

2
00:00:03.270 --> 00:00:07.070
Each row has the number of the song
where it is in the playlist.

3
00:00:07.070 --> 00:00:11.850
Looks like a picture of the song,
the title of the song,

4
00:00:11.850 --> 00:00:14.801
the artist that created the song,

5
00:00:14.801 --> 00:00:20.430
album we won't have when it was
added in a time ago format, okay?

6
00:00:20.430 --> 00:00:23.355
And then how long the song is,

7
00:00:23.355 --> 00:00:28.550
in a duration clock format,
minutes, seconds.

8
00:00:28.550 --> 00:00:33.920
So, that's what we'll do, so
let's get started with that.

9
00:00:33.920 --> 00:00:35.661
So in order to do that,

10
00:00:35.661 --> 00:00:40.451
we are going to have to use
the table body after the table head.

11
00:00:40.451 --> 00:00:45.329
So we'll say Tbody, that, And
then inside the table body,

12
00:00:45.329 --> 00:00:47.669
we'll just map over the songs.

13
00:00:47.669 --> 00:00:52.387
We'll say songs.map, we'll get a song,
and we'll do some song stuff.

14
00:00:52.387 --> 00:00:58.430
So for each one of these songs, we're
gonna make a Tr, which is a table row.

15
00:00:58.430 --> 00:01:01.470
All right, so
we'll say table row, like that.

16
00:01:02.690 --> 00:01:10.000
And then I think by default,
can we add a border or not?

17
00:01:10.000 --> 00:01:12.880
No, I think that's the Td,
we're to figure that out.

18
00:01:12.880 --> 00:01:16.730
But regardless, I want the table row
to highlight when you hover over it.

19
00:01:16.730 --> 00:01:21.605
So what I'm gonna do is I'm gonna use this
SX property that allows me to add custom

20
00:01:21.605 --> 00:01:22.188
styles.

21
00:01:22.188 --> 00:01:26.200
And I can say, first, I wanna add a nice
transition, so I'll say transition.

22
00:01:27.810 --> 00:01:30.133
I don't know, 0.3 seconds.

23
00:01:30.133 --> 00:01:35.906
All, so all 0.3 seconds to transition
all properties 0.3 seconds.

24
00:01:35.906 --> 00:01:40.882
And then what I'll say is and on hover,

25
00:01:45.127 --> 00:01:49.168
I want the background to just be
slightly lighter than what it is now,

26
00:01:49.168 --> 00:01:50.850
and it's transparent now.

27
00:01:50.850 --> 00:01:56.273
So I'm just gonna make it slightly
more transparent, basically.

28
00:01:56.273 --> 00:02:01.666
So I want the background to be RGBA 255,
255, 255,

29
00:02:01.666 --> 00:02:09.156
0.1 in this case, where it was initially
0.2, so slightly more transparent.

30
00:02:09.156 --> 00:02:12.040
It'll be subtle but it'll be enough
to know that you're hovering over it.

31
00:02:16.155 --> 00:02:22.017
Okay, because this is a map, we have to
add a key property that'll be song.id.

32
00:02:22.017 --> 00:02:26.385
This thing's freaking out cuz I
put it in too early, hold on,

33
00:02:26.385 --> 00:02:28.577
back out of that, there we go.

34
00:02:32.282 --> 00:02:34.562
And then,
I wanna make sure the cursor is a pointer.

35
00:02:34.562 --> 00:02:36.243
So it shows the finger
that you can click on it,

36
00:02:36.243 --> 00:02:38.110
otherwise you won't know
that you can click on it.

37
00:02:38.110 --> 00:02:40.771
So I'll put cursor.

38
00:02:43.364 --> 00:02:45.940
So that's our table row.

39
00:02:51.085 --> 00:02:56.386
And then in between the table row,
we're going to add basically for

40
00:02:56.386 --> 00:03:02.540
each single column, which is a Td,
we're gonna add the theme for the song.

41
00:03:02.540 --> 00:03:06.285
So the first one will be the number,
so the index basically,

42
00:03:06.285 --> 00:03:09.000
where in the playlist this thing is.

43
00:03:09.000 --> 00:03:10.880
That'll just be the index + 1.

44
00:03:10.880 --> 00:03:17.380
So I need to get the index here,
I'll say i, and this will just be i + 1.

45
00:03:17.380 --> 00:03:20.798
And again, that's this number
we're getting on the left.

46
00:03:20.798 --> 00:03:22.596
So the 0 thing in the array is at 1, so

47
00:03:22.596 --> 00:03:26.615
I'm adding plus 1 everything cuz it starts
with 0, and I don't wanna put 0 here.

48
00:03:30.391 --> 00:03:31.598
So we got that.

49
00:03:31.598 --> 00:03:34.150
And the next thing is another Td.

50
00:03:34.150 --> 00:03:37.616
And this one is gonna be for the name.

51
00:03:37.616 --> 00:03:42.209
So this will be song.name here.

52
00:03:42.209 --> 00:03:47.535
The next one is when it was created at,
so we'll add another Td.

53
00:03:47.535 --> 00:03:50.727
This will be song.createdA t.

54
00:03:54.050 --> 00:03:59.077
And the last one that we're
gonna add will be another Td,

55
00:03:59.077 --> 00:04:02.341
and this one will be on the duration.

56
00:04:02.341 --> 00:04:04.972
So this will be song.duration.

57
00:04:11.952 --> 00:04:13.794
So we got all of those.

58
00:04:13.794 --> 00:04:18.087
I haven't passed in the songs obviously,
so, yeah, need to pass in the songs.

59
00:04:18.087 --> 00:04:21.212
Let me just do that, right,
quick on a song table,

60
00:04:21.212 --> 00:04:24.061
back inside of our playlists, [id].tsx.

61
00:04:24.061 --> 00:04:28.590
Let's just pass in the songs,
right, quick from playlist.song.

62
00:04:28.590 --> 00:04:33.039
So I'll say songs is playlists.songs.

63
00:04:33.039 --> 00:04:36.180
Satisfy that songs requirement.

64
00:04:36.180 --> 00:04:41.295
And then we should be able to go back.

65
00:04:41.295 --> 00:04:46.815
And now it's saying objects
are not valid as react elements.

66
00:04:46.815 --> 00:04:53.302
That mean I'm trying to render
an object somewhere, or it's the date.

67
00:04:53.302 --> 00:04:55.189
Yeah, you got a toString right quick.

68
00:04:55.189 --> 00:05:00.751
So, we're gonna make a format for this, we
haven't gotten there but yeah, toString.

69
00:05:00.751 --> 00:05:02.883
Cool, so here we go.

70
00:05:02.883 --> 00:05:07.054
Got a nice playlist with our very
descriptive data added, just in case you

71
00:05:07.054 --> 00:05:11.642
really wanna know the exact millisecond
the song was added, and what time zone.

72
00:05:11.642 --> 00:05:13.660
You can see it, if you're into that.

73
00:05:14.860 --> 00:05:18.360
But yeah, you can see the scrolling looks.

74
00:05:18.360 --> 00:05:24.051
Pretty nice that how the gradients stays
put, kinda like a parallax effect, almost.

75
00:05:24.051 --> 00:05:26.001
And yeah, it all looks pretty cool.

76
00:05:26.001 --> 00:05:29.620
So, there's obviously some
formatting issues we have here.

77
00:05:29.620 --> 00:05:35.200
We need to format this date added,
that's just not gonna fly.

78
00:05:35.200 --> 00:05:37.602
And what does this number mean for
duration?

79
00:05:37.602 --> 00:05:40.614
I don't know,
is that how many seconds it is, or days?

80
00:05:40.614 --> 00:05:45.017
I don't know, so we need to format that so
it doesn't look like whatever that is.

81
00:05:45.017 --> 00:05:46.930
I think everything else looks really nice.

82
00:05:46.930 --> 00:05:50.660
I know there's supposed to be images here,
but our songs don't have images.

83
00:05:50.660 --> 00:05:53.429
I tried to, I mean,
just finding the songs it's hard.

84
00:05:53.429 --> 00:05:54.718
Finding the images is even harder.

85
00:05:54.718 --> 00:05:58.739
So with these placeholder images we want,
but I figured we just skip it for now.

86
00:05:58.739 --> 00:06:02.013
And as far as these formatters,
what we're gonna do is,

87
00:06:02.013 --> 00:06:06.461
we need to make one that formats the
dates, we make one that formats the time.

88
00:06:06.461 --> 00:06:10.659
And if we look at the the design,
the date is formatted and

89
00:06:10.659 --> 00:06:12.769
what I call time ago format.

90
00:06:12.769 --> 00:06:16.752
So it's like one minute ago,
whatever ago, we could do that.

91
00:06:16.752 --> 00:06:19.110
There's literally so
many of those out there.

92
00:06:19.110 --> 00:06:22.470
I think there's actually one
called time ago that does that.

93
00:06:23.880 --> 00:06:28.343
I'm just gonna format it in
the actual date that doesn't.

94
00:06:28.343 --> 00:06:29.850
So I think Spotify actually does both.

95
00:06:29.850 --> 00:06:33.630
I remember seeing it somewhere where
it was like, it'll say time ago,

96
00:06:33.630 --> 00:06:34.519
up until a week.

97
00:06:34.519 --> 00:06:36.561
And then we'll put the date of like.

98
00:06:36.561 --> 00:06:40.576
If it's within a week, it'll say three
days ago, four days ago, five days ago.

99
00:06:40.576 --> 00:06:44.122
But anything after seven days ago,
like this date, December 12, 2021.

100
00:06:44.122 --> 00:06:45.628
So we're just gonna do that.

101
00:06:45.628 --> 00:06:48.510
We're just gonna put the date there.

102
00:06:48.510 --> 00:06:49.987
So that'll be our formatter.

103
00:06:49.987 --> 00:06:54.843
And then the next one, what we'll do here
is gonna be the formatter for the time.

104
00:06:54.843 --> 00:06:58.810
So it actually shows you this,
a clock, right?

105
00:06:58.810 --> 00:07:02.196
So 2 minutes and 27 seconds,
2 minutes and 22 seconds.

106
00:07:02.196 --> 00:07:03.398
So we'll do that.

107
00:07:03.398 --> 00:07:07.857
And the duration that we have for each
song, is actually the time in seconds, and

108
00:07:07.857 --> 00:07:08.652
not minutes.

109
00:07:08.652 --> 00:07:10.751
So we already have that.

110
00:07:10.751 --> 00:07:12.796
So let's make these formatters.

111
00:07:12.796 --> 00:07:16.526
We'll go to our lib folder,
we'll make a new file here,

112
00:07:16.526 --> 00:07:20.880
we'll call them formatters.ts,
and we'll make some.

113
00:07:20.880 --> 00:07:26.819
Luckily for us, I already had u install
a sweet package called format duration,

114
00:07:26.819 --> 00:07:28.579
so you can import that.

115
00:07:28.579 --> 00:07:35.702
And then we'll make
a function called formatTime.

116
00:07:35.702 --> 00:07:41.798
And this one's gonna take
in a time in seconds.

117
00:07:41.798 --> 00:07:45.129
And I'm just gonna default
to 0 just in case.

118
00:07:47.850 --> 00:07:53.200
And then all it's literally gonna
do is this return format, duration,

119
00:07:53.200 --> 00:07:59.879
which will be whatever the time in seconds
that you had, times 1,000 milliseconds.

120
00:08:06.207 --> 00:08:10.180
And then for the date,
we'll just say this one's pretty easy.

121
00:08:10.180 --> 00:08:12.133
We'll say formatDate.

122
00:08:12.133 --> 00:08:18.244
This one's just gonna take in a date
object, so literally a date object.

123
00:08:18.244 --> 00:08:23.120
And it's just gonna return
date.toLocaleDateString.

124
00:08:23.120 --> 00:08:27.404
And we'll put an en-US as
the first argument, and

125
00:08:27.404 --> 00:08:33.390
the second argument, we'll just say,
this is how we wanna format it.

126
00:08:33.390 --> 00:08:38.502
I want the year to be numeric,
I want the month to be a long month,

127
00:08:38.502 --> 00:08:42.312
so we'll give them a long month,
spell it out.

128
00:08:42.312 --> 00:08:44.863
And then day, I want to be numeric.

129
00:08:48.966 --> 00:08:52.874
So this will return
a string in this format.

130
00:09:03.188 --> 00:09:07.864
Okay, so now we head back to our
songs table, and we can format these.

131
00:09:07.864 --> 00:09:13.048
So song that created that,
I don't need the toString any more,

132
00:09:13.048 --> 00:09:16.408
I can just actually use formats, dates.

133
00:09:16.408 --> 00:09:20.541
And put the created add in there, and

134
00:09:20.541 --> 00:09:25.348
then for duration, I can say formatTime.

135
00:09:25.348 --> 00:09:30.219
I can put that in there, and then save it.

136
00:09:33.036 --> 00:09:35.515
And it hopefully did the auto import for
me, yeah, it did.

137
00:09:35.515 --> 00:09:39.976
I love when it does that,
cuz it doesn't do it all the time.

138
00:09:39.976 --> 00:09:43.557
And there we go, we got a nice
duration and we got a nice time.

139
00:09:43.557 --> 00:09:47.315
Maybe a short time will be better,
let's do a short time.

140
00:09:47.315 --> 00:09:51.118
I don't like the long time that I'm
looking at it, I kinda hate it now.

141
00:09:51.118 --> 00:09:57.995
[LAUGH] Let's do, is it short,
or what do you want?

142
00:09:57.995 --> 00:09:59.097
Yeah, I guess it's short.

143
00:09:59.097 --> 00:10:00.665
Let's try that.

144
00:10:00.665 --> 00:10:03.723
Yeah, yeah, that's better,
short is definitely better.

145
00:10:07.657 --> 00:10:10.863
Okay, so now we got our
playlists from our database.

146
00:10:10.863 --> 00:10:13.133
Every playlist has
the same amount of songs.

147
00:10:13.133 --> 00:10:15.323
So if you're like, why is it not changing?

148
00:10:15.323 --> 00:10:16.909
When we see that the database,

149
00:10:16.909 --> 00:10:19.656
we gave every playlist all
the songs in the database.

150
00:10:19.656 --> 00:10:21.510
So they all have the same songs.

151
00:10:21.510 --> 00:10:24.343
So that's why it looks like
they're not changing, but

152
00:10:24.343 --> 00:10:26.341
they just happen to have the same data.

153
00:10:26.341 --> 00:10:29.795
If you want some variation and
you can mix the array of songs or

154
00:10:29.795 --> 00:10:31.130
not add all the songs.

155
00:10:31.130 --> 00:10:33.963
He's got to write a more
advanced seed script.

156
00:10:33.963 --> 00:10:35.310
I didn't wanna put you through that.

157
00:10:35.310 --> 00:10:37.232
So we didn't do that.

158
00:10:37.232 --> 00:10:41.900
But there we go, we got our playlists,
we got a song, we got to formatter.

159
00:10:41.900 --> 00:10:46.162
And the only thing that is left is the
thing that's still ugly on the page, and

160
00:10:46.162 --> 00:10:48.205
that's the player, at the bottom.

161
00:10:48.205 --> 00:10:52.289
It's just there waiting for you,
waiting to be created, save for last.

162
00:10:52.289 --> 00:10:56.989
And then for the player, there's a lot
that's involved with it, because up

163
00:10:56.989 --> 00:11:02.690
until this point, we haven't had to worry
about global state on the client side.

164
00:11:02.690 --> 00:11:04.113
Well, now we do.

165
00:11:04.113 --> 00:11:08.047
Because now the player which is part
of the layout that sits in the app,

166
00:11:08.047 --> 00:11:12.050
the _app component needs to be aware
of what playlist we're playing,

167
00:11:12.050 --> 00:11:15.472
what song is playing,
that's coming from a playlist page.

168
00:11:15.472 --> 00:11:17.815
So we need to find a way
to have some global state.

169
00:11:17.815 --> 00:11:19.880
So we'll get into global state.

170
00:11:19.880 --> 00:11:21.312
It won't be Redux.

171
00:11:21.312 --> 00:11:23.610
So if you're thinking like, he goes
through that, we're not doing Redux.

172
00:11:23.610 --> 00:11:24.535
It's not happening.

173
00:11:24.535 --> 00:11:27.873
I think Redux is great, but
this is overkill for this.

174
00:11:27.873 --> 00:11:29.225
There's a lot of ways to do it.

175
00:11:29.225 --> 00:11:30.347
I'll talk about that.

176
00:11:30.347 --> 00:11:35.065
And then, there's gonna be
a lot of animation stuff, and

177
00:11:35.065 --> 00:11:37.780
obviously, music stuff.

178
00:11:37.780 --> 00:11:41.542
And there's actually some really,
I would say high level bugs and

179
00:11:41.542 --> 00:11:45.783
issues that we're gonna run into, and
I'll talk about how to solve that.

180
00:11:45.783 --> 00:11:49.854
Things that I've seen companies just get
crippled at, that some really advanced

181
00:11:49.854 --> 00:11:53.230
React stuff, something I had to
study that was really tough for me.

182
00:11:53.230 --> 00:11:55.878
So, I'll talk about that and
we'll get past those issues, and

183
00:11:55.878 --> 00:11:57.508
then we'll deploy this thing, yeah?

184
00:11:57.508 --> 00:12:00.852
&gt;&gt; When we were doing your rating
functions that would run on the server

185
00:12:00.852 --> 00:12:02.033
side of the component.

186
00:12:02.033 --> 00:12:05.824
&gt;&gt; We always put get at the beginning and
then,

187
00:12:05.824 --> 00:12:09.623
do you want to use that
exact function name?

188
00:12:09.623 --> 00:12:11.220
&gt;&gt; Get server side props?

189
00:12:11.220 --> 00:12:12.448
Yeah, you have to.

190
00:12:12.448 --> 00:12:14.560
Next is looking for this function.

191
00:12:15.690 --> 00:12:20.624
There's two other ones,
there's getStaticPaths,

192
00:12:20.624 --> 00:12:23.520
and this one is for generating,

193
00:12:23.520 --> 00:12:29.060
this is like if you were
generating a static website.

194
00:12:29.060 --> 00:12:32.185
How does next JS know what routes to make?

195
00:12:32.185 --> 00:12:34.640
So to have to return an object of routes.

196
00:12:34.640 --> 00:12:36.175
Here are all the routes that
I want you to generate.

197
00:12:36.175 --> 00:12:40.119
And then the other one is getStaticProps,
which works with getStaticPaths.

198
00:12:40.119 --> 00:12:43.993
And this will literally do the same
things, getServerSideProps but

199
00:12:43.993 --> 00:12:47.013
only at build time, and
not at runtime on the server.

200
00:12:47.013 --> 00:12:51.223
&gt;&gt; Could you speak to the cost of edge
functions versus lambda functions,

201
00:12:51.223 --> 00:12:54.610
are they expensive to build live on a CDN?

202
00:12:54.610 --> 00:12:57.185
&gt;&gt; No,
they are actually still pretty cheap.

203
00:12:57.185 --> 00:13:00.486
And it also depends on what
platform you deploy to.

204
00:13:00.486 --> 00:13:03.921
So with Vercel,
it's all just abstracted away from you.

205
00:13:03.921 --> 00:13:08.725
You just kind of just pay them a fee and
they just handle it all.

206
00:13:08.725 --> 00:13:12.190
I mean, at the end of the day,
it's literally fractions of a penny.

207
00:13:12.190 --> 00:13:17.088
Whether it's a Lambda or Lambda@Edge,
it's still relatively gonna

208
00:13:17.088 --> 00:13:21.770
be cheaper than hosting
a server that's always running.

209
00:13:21.770 --> 00:13:24.480
Because you're only getting charge for
your usage.

210
00:13:24.480 --> 00:13:28.241
And usually, the usage is
measured in thousands of calls.

211
00:13:28.241 --> 00:13:30.813
That's when you start looking at dollars,

212
00:13:30.813 --> 00:13:35.059
like okay, after a few thousand calls,
we're looking at dollars now.

213
00:13:35.059 --> 00:13:38.297
So it's relatively cheap,
because it's cheap for

214
00:13:38.297 --> 00:13:40.879
the providers to actually host, right?

215
00:13:40.879 --> 00:13:42.054
It's cheap for them.

216
00:13:42.054 --> 00:13:46.636
They don't have to maintain
active servers anymore.

217
00:13:46.636 --> 00:13:49.485
They can share their
resources a lot better.

218
00:13:49.485 --> 00:13:51.794
They can get more customers
with less equipment.

219
00:13:51.794 --> 00:13:55.960
So they share some of that cost by
not charging you as much, I assume.

220
00:13:55.960 --> 00:13:58.940
So yeah, it's still relatively cheap,
even compared to servers.

