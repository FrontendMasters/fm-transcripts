WEBVTT

1
00:00:00.274 --> 00:00:03.781
So what I'm gonna do to make
the layout I'm just gonna make a new

2
00:00:03.781 --> 00:00:04.782
folder on a root.

3
00:00:04.782 --> 00:00:06.736
I'm gonna call it components.

4
00:00:10.129 --> 00:00:11.581
And I'll make a new file in here.

5
00:00:11.581 --> 00:00:16.688
And I'm gonna call it
the playerLayout.tsx, like so.

6
00:00:16.688 --> 00:00:20.959
And again, the whole point of
this component, if we go back and

7
00:00:20.959 --> 00:00:26.358
look at the design, it's going to be
a layout that basically has this sidebar,

8
00:00:26.358 --> 00:00:30.648
this music bar at the bottom,
and then houses the actual page.

9
00:00:30.648 --> 00:00:32.085
So we want that to be consistent.

10
00:00:32.085 --> 00:00:35.063
So we're just gonna make one component so
we don't have to write it for

11
00:00:35.063 --> 00:00:36.132
as many pages as we have.

12
00:00:36.132 --> 00:00:38.650
So it doesn't really do anything.

13
00:00:38.650 --> 00:00:42.490
It just lays out all the stuff
that actually does work.

14
00:00:42.490 --> 00:00:45.940
So yeah, but it needs to look good.

15
00:00:45.940 --> 00:00:47.320
So that's what we'll be doing.

16
00:00:47.320 --> 00:00:52.932
So what we'll do here is,
a lot of component libraries are having

17
00:00:52.932 --> 00:00:58.352
this concept of basically replacing
div with their own thing.

18
00:00:58.352 --> 00:01:00.264
In Chakra UI it's called a box.

19
00:01:00.264 --> 00:01:05.990
So you're gonna see a lot of box in
this course, which is basically a div.

20
00:01:05.990 --> 00:01:09.372
So why not just use div instead
of use box, well, again,

21
00:01:09.372 --> 00:01:11.358
it's because how I can style it.

22
00:01:11.358 --> 00:01:15.152
If I didn't use a div, I would have to
style that with either inline style tag or

23
00:01:15.152 --> 00:01:15.740
a CSS file.

24
00:01:15.740 --> 00:01:18.740
If I use the box I can use Chakra's
primitives to actually style it,

25
00:01:18.740 --> 00:01:21.176
which is a lot better, and
you'll see why in a minute.

26
00:01:21.176 --> 00:01:22.189
That is the only difference.

27
00:01:22.189 --> 00:01:24.851
So when you see box, think div,
it's the same thing.

28
00:01:24.851 --> 00:01:26.330
It doesn't do anything special.

29
00:01:26.330 --> 00:01:29.356
So speaking of that,
I'm actually going to import box up here.

30
00:01:29.356 --> 00:01:32.313
So I'm gonna say import from @chakra.

31
00:01:32.313 --> 00:01:36.316
Instead of chakra-react, I'm actually
gonna import from chakra-ui/layout.

32
00:01:36.316 --> 00:01:37.796
So they have two libs here.

33
00:01:37.796 --> 00:01:40.606
I'm gonna import box, like so.

34
00:01:40.606 --> 00:01:45.169
And then I am gonna make
a component called PlayerLayout.

35
00:01:45.169 --> 00:01:48.849
I typically name my components
the same as the file.

36
00:01:48.849 --> 00:01:51.357
So that's just a habit that I get in.

37
00:01:51.357 --> 00:01:54.311
So I can remember what's happening.

38
00:01:54.311 --> 00:01:56.661
And because naming stuff is hard.

39
00:01:59.465 --> 00:02:02.720
So PlayerLayout, and
then what PlayerLayout is gonna do,

40
00:02:02.720 --> 00:02:05.272
like I said,
it doesn't really do anything.

41
00:02:05.272 --> 00:02:08.435
It doesn't have any state,
it's just laying things out here.

42
00:02:08.435 --> 00:02:12.435
It is gonna have access to children
because most layout components do need to

43
00:02:12.435 --> 00:02:14.317
render their children somewhere.

44
00:02:14.317 --> 00:02:18.270
And in this case, the child will be this
page that sits to the right of the sidebar

45
00:02:18.270 --> 00:02:20.458
and above the play bar, that's the child.

46
00:02:20.458 --> 00:02:23.339
So we need to render that
child in that position.

47
00:02:23.339 --> 00:02:25.733
So we're gonna have access
to the children here.

48
00:02:25.733 --> 00:02:30.309
And then what we wanna do is go ahead and
build this thing out.

49
00:02:30.309 --> 00:02:36.403
So I'm gonna say box,
like so, oops, all right, so.

50
00:02:38.310 --> 00:02:42.640
Like this, and then what I'm gonna
do is just to test this out,

51
00:02:42.640 --> 00:02:45.434
I'm gonna type in the word layout here.

52
00:02:45.434 --> 00:02:46.314
I like to test my things out

53
00:02:46.314 --> 00:02:48.681
before actually start building it
to make sure everything works out.

54
00:02:48.681 --> 00:02:50.168
So I'm gonna say layout.

55
00:02:50.168 --> 00:02:54.911
And then I'm gonna say,
{children}, like that.

56
00:02:54.911 --> 00:02:56.591
So I'm just gonna do that.

57
00:02:56.591 --> 00:03:00.724
And then now I'm gonna take this layout,
and I'm gonna put it in our _app,

58
00:03:00.724 --> 00:03:02.223
just to make sure it works.

59
00:03:02.223 --> 00:03:05.361
I want to make sure that we're actually
rendering the thing that we need

60
00:03:05.361 --> 00:03:05.896
to render.

61
00:03:05.896 --> 00:03:09.550
So I'm gonna go here,
back to our app here.

62
00:03:09.550 --> 00:03:14.631
And what I'm gonna do is, again,
I'm gonna wrap our component,

63
00:03:14.631 --> 00:03:18.186
which will be every single
page in the layout.

64
00:03:18.186 --> 00:03:19.898
So that's what I'm gonna do.

65
00:03:19.898 --> 00:03:23.156
We're going to import our layout.

66
00:03:23.156 --> 00:03:25.920
So import PlayerLayout.

67
00:03:25.920 --> 00:03:28.277
Got a nice autocomplete here.

68
00:03:28.277 --> 00:03:34.169
Go down to our JSX in the _app and wrap
the component, not the ChakraProvider.

69
00:03:34.169 --> 00:03:35.807
We wanna stay in the ChakraProvider.

70
00:03:35.807 --> 00:03:38.998
Otherwise, our layout would have
access to any of our theme primitives,

71
00:03:38.998 --> 00:03:41.789
which would defeat the purpose
of using anything in the layout.

72
00:03:41.789 --> 00:03:45.588
And I'll say PlayerLayout, like so.

73
00:03:45.588 --> 00:03:47.414
And I'm just gonna put
our component in there.

74
00:03:47.414 --> 00:03:51.837
So now that I did that,
let's run this thing and

75
00:03:51.837 --> 00:03:55.275
see what it looks like, npm run dev.

76
00:04:01.767 --> 00:04:05.277
And you can see there it is,
the word layout at the top left.

77
00:04:05.277 --> 00:04:07.488
So that tells me that I'm
actually in my layout.

78
00:04:07.488 --> 00:04:10.679
And this homepage is the child
that's in the layout.

79
00:04:10.679 --> 00:04:14.424
My CSS looks funky because I got rid
of that import for the global CSS.

80
00:04:14.424 --> 00:04:15.661
So that's why it looks weird.

81
00:04:15.661 --> 00:04:19.563
That's fine, we won't be using that
anyway, but we are in our layout.

82
00:04:19.563 --> 00:04:23.312
So we are good to go as far
as creating that layout.

83
00:04:23.312 --> 00:04:27.167
The other way you could do a layout
Next.js is that we could actually just use

84
00:04:27.167 --> 00:04:30.556
this layout component and
wrap it around the pages individually.

85
00:04:30.556 --> 00:04:33.550
So I could just to come this homepage and
wrap this whole thing in the PlayerLayout.

86
00:04:33.550 --> 00:04:36.448
Only problem with that is,
is that layout will reload every time,

87
00:04:36.448 --> 00:04:37.549
which is probably fine.

88
00:04:37.549 --> 00:04:42.174
You won't visually see it, but
if it had state, which ours will,

89
00:04:42.174 --> 00:04:47.376
because we have a play bar at the bottom,
that music streaming part that's

90
00:04:47.376 --> 00:04:52.022
playing will reload every single time,
which would not be great.

91
00:04:52.022 --> 00:04:55.186
But if you didn't have any active state or
anything like that,

92
00:04:55.186 --> 00:04:59.378
if all you have was links or just some
navigation elements, that's totally fine.

93
00:04:59.378 --> 00:05:02.828
Visually, it won't look like a reload and
it's still the same state, so

94
00:05:02.828 --> 00:05:03.841
it's not a big deal.

95
00:05:03.841 --> 00:05:06.870
But in the case of our app,
that would be a problem.

96
00:05:06.870 --> 00:05:09.649
So just be careful of that.

97
00:05:09.649 --> 00:05:11.920
And that's actually why I put it in _app.

98
00:05:11.920 --> 00:05:13.959
But that also raises another issue,

99
00:05:13.959 --> 00:05:17.389
as in now every single page has
to be inside of this component.

100
00:05:17.389 --> 00:05:19.615
But I said we're gonna make a sign in and
sign up page,

101
00:05:19.615 --> 00:05:21.657
which should not be wrapped
inside this layout.

102
00:05:21.657 --> 00:05:24.555
There is a way to get around
that to where we can opt out and

103
00:05:24.555 --> 00:05:28.009
opt in to this global layout without
actually putting the layout on

104
00:05:28.009 --> 00:05:30.806
the individual pages and
having that state problem.

105
00:05:30.806 --> 00:05:34.044
But still having a choice on which
component gets to lay out or not.

106
00:05:34.044 --> 00:05:35.459
So we get the best of both worlds.

