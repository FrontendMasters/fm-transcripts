WEBVTT

1
00:00:00.330 --> 00:00:03.090
The next thing we wanna do is
start working on the Auth Pages.

2
00:00:04.090 --> 00:00:08.941
And for that, like I said, a sign in and
a signup form is mostly the same just

3
00:00:08.941 --> 00:00:12.950
like the sign in and
the signup API route were mostly the same.

4
00:00:12.950 --> 00:00:17.263
So, because of that, we're just gonna
create a component that just toggles what

5
00:00:17.263 --> 00:00:19.898
mode you're in and
it literally knows what to do.

6
00:00:19.898 --> 00:00:21.371
So, I'm gonna go to components.

7
00:00:21.371 --> 00:00:22.890
We'll make a new component here.

8
00:00:22.890 --> 00:00:26.500
I'm gonna call this authForm.tsx.

9
00:00:26.500 --> 00:00:28.420
And we're gonna do all the stuff in here.

10
00:00:28.420 --> 00:00:31.490
So what we're gonna do is we're gonna
import some of our UI stuff from chakra.

11
00:00:31.490 --> 00:00:36.510
So let's say @chakra, layouts and
we're gonna need some box stuff.

12
00:00:36.510 --> 00:00:38.100
I think we're gonna do some flex stuff.

13
00:00:38.100 --> 00:00:40.237
You haven't used flex yet, but

14
00:00:40.237 --> 00:00:44.367
it's literally just like a flex
box div which is really cool.

15
00:00:44.367 --> 00:00:48.201
You could just use box and
add the Flex Properties yourself but

16
00:00:48.201 --> 00:00:50.640
the flex component already does that.

17
00:00:50.640 --> 00:00:53.812
We're gonna need the input and
we're gonna need the button or

18
00:00:53.812 --> 00:00:55.471
actually I think input button.

19
00:00:55.471 --> 00:01:00.383
I think these come from react actually,
I would love to react there we go, okay.

20
00:01:00.383 --> 00:01:05.363
So we got that, we're also gonna need
the router because after someone

21
00:01:05.363 --> 00:01:08.519
signs in we wanna route
them to the home page.

22
00:01:08.519 --> 00:01:10.432
So we're gonna get access to the router.

23
00:01:10.432 --> 00:01:14.383
Up until this point we haven't had to
touch a router because next year's

24
00:01:14.383 --> 00:01:18.479
handles the routing for us based off
the folder structure the file naming.

25
00:01:18.479 --> 00:01:23.130
But you could actually access the router
to do programmatic routing and

26
00:01:23.130 --> 00:01:28.330
the way you can do that is getting the use
router from next router like that.

27
00:01:28.330 --> 00:01:29.700
So we get this use router hook.

28
00:01:29.700 --> 00:01:30.470
Well do that.

29
00:01:33.110 --> 00:01:39.912
The other thing that we wanna get from
this other package is called SWR.

30
00:01:39.912 --> 00:01:43.176
Which stands for still while revalidate.

31
00:01:43.176 --> 00:01:46.390
This is also from verse L or next JS.

32
00:01:46.390 --> 00:01:49.466
So we're gonna do something
called useSWRConfig.

33
00:01:49.466 --> 00:01:51.799
This package is actually really cool,

34
00:01:51.799 --> 00:01:54.912
it's probably one of
the coolest innovations I've

35
00:01:54.912 --> 00:01:59.736
seen in front end development and while
there's tons of other packages like it.

36
00:01:59.736 --> 00:02:04.800
But basically, what it does is it
handles your data fetching very nicely.

37
00:02:04.800 --> 00:02:09.370
It'll handle caching,
it'll handle optimistic updates.

38
00:02:09.370 --> 00:02:12.372
It'll even handle refetching and
revalidating the cache for

39
00:02:12.372 --> 00:02:14.170
you based off different scenarios.

40
00:02:14.170 --> 00:02:18.135
If you're on your computer and you focus
off your browser, but then you come back

41
00:02:18.135 --> 00:02:22.620
to your browser, it'll refetch,
it'll do different things like that.

42
00:02:22.620 --> 00:02:24.150
It's actually really cool.

43
00:02:24.150 --> 00:02:26.166
And there's other ones like it, but SWR,

44
00:02:26.166 --> 00:02:29.638
was the one that was made by the next
JS team, so we're gonna use that one.

45
00:02:29.638 --> 00:02:33.017
But there's another one called react
query that I think might be a little,

46
00:02:33.017 --> 00:02:36.210
I wouldn't say better, but
it has like, more options to it.

47
00:02:36.210 --> 00:02:39.950
Whereas SWR is just like,
more bare bones, more flexible.

48
00:02:39.950 --> 00:02:41.730
So, try it out which one you like.

49
00:02:41.730 --> 00:02:43.111
We're gonna use SWR.

50
00:02:43.111 --> 00:02:47.832
And they useSWRConfig is gonna be
a hook that we can use to basically

51
00:02:47.832 --> 00:02:51.050
update the local cache
of this application.

52
00:02:51.050 --> 00:02:54.302
So if you ever use something redux,
if you ever use Apollo,

53
00:02:54.302 --> 00:02:58.009
you have the ability to do a mutation and
then get that data back, and

54
00:02:58.009 --> 00:03:01.090
update the local cache with
the data that you got.

55
00:03:01.090 --> 00:03:03.000
That's basically what
we're going to be doing.

56
00:03:03.000 --> 00:03:07.292
And this will like propagates across the
whole app or anything that's listening for

57
00:03:07.292 --> 00:03:07.902
that data.

58
00:03:07.902 --> 00:03:11.227
And then the last thing we're gonna
do is import our auth mutation.

59
00:03:15.815 --> 00:03:20.312
All right, so now we're gonna
make our AuthForm, like so.

60
00:03:20.312 --> 00:03:28.025
And so I'm gonna exports default AuthForm.

61
00:03:28.025 --> 00:03:31.985
And then we can basically this all form
like I said it's just gonna take in a mode

62
00:03:31.985 --> 00:03:35.649
and that's gonna be a string whether
it's sign in or sign up that's it.

63
00:03:35.649 --> 00:03:37.974
It's just gonna take a mode.

64
00:03:37.974 --> 00:03:43.228
And if you are inter TypeScript when
you wanna know how to type check,

65
00:03:43.228 --> 00:03:45.955
a functional component and react.

66
00:03:45.955 --> 00:03:47.015
There's so many ways you can do it.

67
00:03:47.015 --> 00:03:49.326
I see people like they'll add,
like just a type here,

68
00:03:49.326 --> 00:03:51.765
just like you would in regular TypeScript.

69
00:03:51.765 --> 00:03:56.085
But if you do it this way,
and you add the FC type here,

70
00:03:56.085 --> 00:04:02.229
you can actually type in a generic and
then you could do something like this.

71
00:04:03.750 --> 00:04:07.569
And then now this will be type checked and
then when you're in your jsx you'll

72
00:04:07.569 --> 00:04:10.410
see the type check over all the props and
stuff like that.

73
00:04:10.410 --> 00:04:13.471
So this is how you would
probably type check it.

74
00:04:13.471 --> 00:04:15.529
I'll leave if people want it but

75
00:04:15.529 --> 00:04:20.647
again it's not necessary if you don't
If we're not doing TypeScript things.

76
00:04:20.647 --> 00:04:22.445
It's not gonna change
the behavior application.

77
00:04:22.445 --> 00:04:25.124
TypeScript doesn't change
how your code runs it's for

78
00:04:25.124 --> 00:04:27.406
build time and
deaf time it's not for runtime.

79
00:04:27.406 --> 00:04:31.171
It all gets taken away obviously the
browser doesn't understand TypeScript so

80
00:04:31.171 --> 00:04:34.092
it's not gonna change the behavior
of your code it's just for

81
00:04:34.092 --> 00:04:35.681
a better developer experience.

82
00:04:35.681 --> 00:04:39.984
Okay so we got off form next thing we can
do is set up some states to keep track of

83
00:04:39.984 --> 00:04:44.424
in this form, so we got to keep track of
the email the password we probably wanna

84
00:04:44.424 --> 00:04:46.668
keep track of if we're loading or not.

85
00:04:46.668 --> 00:04:51.348
So we can show some type
of loading indicator and

86
00:04:51.348 --> 00:04:58.726
then yeah let's keep us set up those
states so I'll say email, set email.

87
00:04:58.726 --> 00:05:02.817
And that'll be useState from reacts and

88
00:05:02.817 --> 00:05:06.665
we're gonna to set that to be string,

89
00:05:06.665 --> 00:05:11.979
we gonna to copy that do
the same thing for password.

90
00:05:14.500 --> 00:05:21.364
I'll be an empty string and then I'm
gonna do the same thing for, is loading.

91
00:05:21.364 --> 00:05:22.960
So are we loading?

92
00:05:22.960 --> 00:05:29.370
Set is loading, And

93
00:05:29.370 --> 00:05:32.875
that will default to false and
not empty string.

94
00:05:32.875 --> 00:05:37.891
Okay, so we got that, and
then we'll get the router,

95
00:05:37.891 --> 00:05:42.811
so we'll say router equals use router,
there we go.

96
00:05:42.811 --> 00:05:45.177
So we got all of our variables for now and

97
00:05:45.177 --> 00:05:49.214
then the next thing we wanna do is
start working on some of this JSX.

98
00:05:49.214 --> 00:05:52.826
So what we'll do is we'll return a box,

99
00:05:52.826 --> 00:05:57.870
which again is basically
a div that we can style.

100
00:05:57.870 --> 00:06:03.407
We want this to be full page so
we'll say height of

101
00:06:03.407 --> 00:06:09.360
100 view height with of
100 view with banana.

102
00:06:09.360 --> 00:06:14.360
I don't know why I put O, there we go.

103
00:06:14.360 --> 00:06:15.828
So we got that going and

104
00:06:15.828 --> 00:06:20.787
then we're gonna make this dark sorta
bit of background of black like that.

105
00:06:22.979 --> 00:06:25.906
And then what we're gonna do is I'm
basically just gonna put a form right in

106
00:06:25.906 --> 00:06:26.750
the middle the page.

107
00:06:26.750 --> 00:06:30.100
A square that has an email and
a password button.

108
00:06:30.100 --> 00:06:32.030
So it's very basic, very simple.

109
00:06:32.030 --> 00:06:33.600
I want it centered.

110
00:06:33.600 --> 00:06:35.500
So I'm gonna use a Flexbox for that.

111
00:06:35.500 --> 00:06:37.620
So I'm gonna say flex.

112
00:06:37.620 --> 00:06:45.920
And then for that I'm going to put
justify=center and align=center.

113
00:06:45.920 --> 00:06:49.260
Both of these are shortcuts for
justify content and align items.

114
00:06:49.260 --> 00:06:52.123
You can also type that out if you want to,
but we get that for

115
00:06:52.123 --> 00:06:53.480
free with this flex thing.

116
00:06:54.740 --> 00:07:01.649
And then I'm gonna give it a height
of let's say 100 pixels maybe,

117
00:07:01.649 --> 00:07:07.033
so we'll do that and
then what I'm gonna do is I'm just

118
00:07:07.033 --> 00:07:12.088
gonna put the word hello here so
we can check it out.

119
00:07:12.088 --> 00:07:14.958
And then after this,
I'm gonna make another flex.

120
00:07:19.430 --> 00:07:24.281
For this, it's pretty much going to be the
same thing except it needs to account for

121
00:07:24.281 --> 00:07:26.290
this Flexbox that's on top of it,

122
00:07:26.290 --> 00:07:29.500
which is gonna be like a top
little nav bar, all right?

123
00:07:29.500 --> 00:07:32.440
So we're gonna count for that,
which is 100 pixels high.

124
00:07:32.440 --> 00:07:35.190
So we're just gonna copy
just to find the center.

125
00:07:35.190 --> 00:07:36.930
Put that in the middle as well.

126
00:07:38.340 --> 00:07:38.840
Oops.

127
00:07:40.830 --> 00:07:46.255
And then for the height on this,
we're just going to say,

128
00:07:46.255 --> 00:07:52.800
you're going to be calc,
100 view height, minus 100 pixels.

129
00:07:53.950 --> 00:07:55.660
So account for that.

130
00:07:55.660 --> 00:07:59.200
And then inside of here we'll
just put the word form like that.

131
00:08:00.210 --> 00:08:02.760
And I guess you probably won't see
it until I change the color of this

132
00:08:02.760 --> 00:08:06.440
assumption change the color white
right click so we can actually see it.

133
00:08:06.440 --> 00:08:07.310
The background is black.

134
00:08:08.610 --> 00:08:11.601
Okay, so we have that we'll come
back obviously finishes but

135
00:08:11.601 --> 00:08:15.451
you know my style to just do like a little
bit of a component, put it on the page and

136
00:08:15.451 --> 00:08:19.390
make sure it's there so we can actually
see it and then we'll develop it as we go.

137
00:08:19.390 --> 00:08:20.479
So, we got to authForm.

138
00:08:20.479 --> 00:08:24.430
That means now we have to go back to
our pages and we gonna make two pages.

139
00:08:24.430 --> 00:08:27.663
Be careful not to make these pages
inside the API, because then

140
00:08:27.663 --> 00:08:31.390
that would make API route, which we
already have for sign up and sign in.

141
00:08:31.390 --> 00:08:35.948
So, make sure you got an API folder but
on the root of the pages folder,

142
00:08:35.948 --> 00:08:40.448
we're gonna make two new ones
called signin.tsx and signup.tsx.

143
00:08:46.260 --> 00:08:50.050
And these should be pretty simple because
the Authform's doing the heavy lifting.

144
00:08:50.050 --> 00:08:56.584
So for sign in, all we have to do
is just import the all form like,

145
00:08:56.584 --> 00:09:01.073
so, and
then we can make a sign up function.

146
00:09:01.073 --> 00:09:07.437
And we're just gonna export
default the sign up function and

147
00:09:07.437 --> 00:09:13.051
then all we're gonna do is
just return the AuthForm,

148
00:09:13.051 --> 00:09:16.697
with the mode of sign up like that.

149
00:09:16.697 --> 00:09:19.419
And that's all we have to do because
it's literally the same thing.

150
00:09:19.419 --> 00:09:24.229
So I'm gonna copy this and put this in
sign in, and change the mode to sign in,

151
00:09:24.229 --> 00:09:28.894
and then obviously change the name from
sign up to sign it on the component.

152
00:09:34.591 --> 00:09:37.969
So pretty straightforward.

153
00:09:37.969 --> 00:09:40.005
Now I'm gonna check this out,
see what it looks like.

154
00:09:40.005 --> 00:09:41.831
So I'm gonna start my server.

155
00:09:44.990 --> 00:09:46.359
Up here run dev.

156
00:09:48.006 --> 00:09:50.830
I think I still have it
open yep there we go.

157
00:09:52.880 --> 00:09:57.747
So here we go now I'm gonna
go to slash sign in and

158
00:09:57.747 --> 00:10:01.290
so we got a couple things going on.

159
00:10:02.600 --> 00:10:05.372
Anybody wanna tell me
the first issue that we see?

160
00:10:07.713 --> 00:10:11.016
Yes
&gt;&gt; There's not a button to get to this.

161
00:10:11.016 --> 00:10:12.460
&gt;&gt; Yeah,
there's not a button to get to this.

162
00:10:12.460 --> 00:10:15.050
So yeah,
you can go to the other type it in.

163
00:10:15.050 --> 00:10:16.710
That's obviously a big problem.

164
00:10:16.710 --> 00:10:18.354
What's another problem as far as UI?

165
00:10:21.141 --> 00:10:22.720
&gt;&gt; Looks like it's actually centered.

166
00:10:23.980 --> 00:10:24.850
&gt;&gt; Yeah, it's not centered.

167
00:10:24.850 --> 00:10:25.670
Why is it not centered?

168
00:10:26.910 --> 00:10:27.770
What's on the left side?

169
00:10:29.050 --> 00:10:29.570
The sidebar?

170
00:10:29.570 --> 00:10:32.380
Yeah.
Like, why would we show the sidebar for

171
00:10:32.380 --> 00:10:33.611
not signed in yet?

172
00:10:33.611 --> 00:10:36.794
Right?
That's because we have this sidebar layout

173
00:10:36.794 --> 00:10:41.130
and this player layout for the whole app,
even for the sign in pages.

174
00:10:41.130 --> 00:10:44.570
So we need to find a way
to opt out of this layout.

175
00:10:44.570 --> 00:10:46.181
For the sign in and a sign up pages,

176
00:10:46.181 --> 00:10:49.350
that's the problem that
we're having right now.

177
00:10:49.350 --> 00:10:52.813
But if we go back and
look at our code_app.tsx,

178
00:10:52.813 --> 00:10:56.400
this layout wraps every single page.

179
00:10:56.400 --> 00:11:03.660
So how do we go about making sure
we don't actually have that.

180
00:11:03.660 --> 00:11:06.640
And this is where I was saying this is
why it's pretty interesting with Next.js.

181
00:11:06.640 --> 00:11:09.925
So, earlier I said the way
you could get around this,

182
00:11:09.925 --> 00:11:13.648
is instead of wrapping the layout
inside of the _app.tsx,

183
00:11:13.648 --> 00:11:17.660
you could have just done it on
every single page individually.

184
00:11:17.660 --> 00:11:22.420
I could wrap the layout here, I could
wrap the layout here, if I wanted to.

185
00:11:22.420 --> 00:11:26.300
I can opt in versus having to opt out, but
the problem with that is that layout will

186
00:11:26.300 --> 00:11:30.370
get refreshed every time you change pages
and the state pretty much gets refreshed.

187
00:11:30.370 --> 00:11:34.004
So a music playing at the bottom
would restart every single time, so

188
00:11:34.004 --> 00:11:35.610
we couldn't have done that.

189
00:11:35.610 --> 00:11:37.268
So we had to move it to the app.

190
00:11:37.268 --> 00:11:41.020
But now the problem is,
everything in the app has this layout.

191
00:11:41.020 --> 00:11:44.484
So to get around that, what we'll do is,
we'll go back to our pages sign in and

192
00:11:44.484 --> 00:11:46.900
sign up, and
we'll add a little property on it.

193
00:11:46.900 --> 00:11:51.050
So I'll say sign in, and then what I'll
say, and we can add whatever we want.

194
00:11:51.050 --> 00:11:53.930
I'll just say authPage = true.

195
00:11:57.640 --> 00:12:02.512
So obviously, this is an authPage, signing
out all pages true on the component,

196
00:12:02.512 --> 00:12:05.216
then I'll do the same thing, I'll sign up.

197
00:12:05.216 --> 00:12:11.009
I'll say, signup.authPage is also true.

198
00:12:11.009 --> 00:12:13.872
And now that I have that when
I go back into my app.tsx,

199
00:12:13.872 --> 00:12:17.460
I can actually look at that
property to see if it exists.

200
00:12:17.460 --> 00:12:20.020
And if it does,
I can do a conditional on it.

201
00:12:20.020 --> 00:12:25.384
So instead of doing a layout here,
what I'll do,

202
00:12:25.384 --> 00:12:29.744
is I'll say, components.authPage.

203
00:12:29.744 --> 00:12:31.766
Is this an authPage component?

204
00:12:31.766 --> 00:12:36.631
If so, then I only want to put
the component in here like that.

205
00:12:36.631 --> 00:12:38.828
That's it.

206
00:12:38.828 --> 00:12:44.466
If it's not, then I still wanna
wrap this inside of a layout.

207
00:12:47.338 --> 00:12:48.761
Like this.

208
00:12:53.918 --> 00:12:59.881
So now this is saying, yes if this is
a component with the authPage property,

209
00:12:59.881 --> 00:13:02.100
do not wrap it in the layout.

210
00:13:02.100 --> 00:13:05.447
If it doesn't have the authPage property,
it should be protected.

211
00:13:05.447 --> 00:13:07.854
It should be in a dashboard or
should have the player layout

212
00:13:13.463 --> 00:13:16.174
There's other ways I've
seen people do this,

213
00:13:16.174 --> 00:13:20.037
they will sometimes add the component
itself as a property to that or

214
00:13:20.037 --> 00:13:23.246
they'll add the layout as
a property to the component.

215
00:13:23.246 --> 00:13:27.950
Haven't tested that to see if it would
actually refresh the state or not.

216
00:13:27.950 --> 00:13:31.866
But I know by keeping this player
layout in the DOM, it'll be cached and

217
00:13:31.866 --> 00:13:35.990
it won't reload, and therefore we
won't have song stopping every time.

218
00:13:38.860 --> 00:13:44.037
So now if we go back and refresh the site,
and you can see that layout went away,

219
00:13:44.037 --> 00:13:47.973
and I always have a full page
form here without that layout.

220
00:13:47.973 --> 00:13:53.570
But then if we go back to the homepage
we should have that layout.

221
00:13:53.570 --> 00:13:56.252
&gt;&gt; So
normally things would be hot reloading,

222
00:13:56.252 --> 00:14:01.590
is the refresh necessary because it's
at that initial component entry level?

223
00:14:01.590 --> 00:14:07.548
&gt;&gt; Yeah first of all hot reloading isn't
always, it doesn't always do his job.

224
00:14:07.548 --> 00:14:12.859
And secondly I'm also opting out of
Next.js new build system which uses

225
00:14:12.859 --> 00:14:18.257
rust now actually and it has a completely
different like hot reloading and

226
00:14:18.257 --> 00:14:21.061
building is supposedly really cool.

227
00:14:21.061 --> 00:14:23.980
But we opted out of it by
adding this babelrc file,

228
00:14:23.980 --> 00:14:28.652
because we actually need a plugin that
hasn't been converted over to rust yet.

229
00:14:28.652 --> 00:14:32.348
So there should be, there's probably
issues there as well, and then lastly,

230
00:14:32.348 --> 00:14:35.935
yes, there is a caching issue sometimes
where you're like on the root.

231
00:14:35.935 --> 00:14:40.425
So for any one of those reasons,
it probably did not refresh your cache.

232
00:14:42.145 --> 00:14:44.905
Yeah, hot reloading is
great when it works.

233
00:14:44.905 --> 00:14:48.758
But sometimes, when you expect it to work,
and then it doesn't and

234
00:14:48.758 --> 00:14:51.395
you'd to spend three
hours trying to debug and

235
00:14:51.395 --> 00:14:56.354
you realize it was just like cached, my
goodness, I can't tell you how many times.

236
00:14:56.354 --> 00:15:00.563
I'm just gonna have it now just keeping
this open, right clicking this, and

237
00:15:00.563 --> 00:15:03.630
then Empty Cache and
Hard Reload every single time now.

238
00:15:03.630 --> 00:15:06.340
Because that's the only thing
that fixes it sometimes.

239
00:15:06.340 --> 00:15:10.603
It's even stopping the server and
turn it back on doesn't fix it.

240
00:15:10.603 --> 00:15:14.690
You just gotta clear everything,
so pretty terrible sometimes.

241
00:15:14.690 --> 00:15:17.530
And that's nothing on Next.js, that's
just the technology of hard reloading.

