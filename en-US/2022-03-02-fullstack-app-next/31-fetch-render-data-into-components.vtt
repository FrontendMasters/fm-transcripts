WEBVTT

1
00:00:00.000 --> 00:00:05.060
Okay ,so the first thing we're
gonna do is, we're going to

2
00:00:05.060 --> 00:00:10.034
go back to our sidebar and
we're going to get the playlist.

3
00:00:10.034 --> 00:00:14.993
So we actually have like real playlist
in there and not like the hard coded

4
00:00:14.993 --> 00:00:19.808
ones that we made before because
obviously, we don't wanna do that.

5
00:00:19.808 --> 00:00:24.062
So it should be pretty easy, so
if we go to the sidebar, we can go here,

6
00:00:24.062 --> 00:00:26.679
we can see that we have
this play this here.

7
00:00:26.679 --> 00:00:29.357
All we got to do is
import our usePlaylist.

8
00:00:29.357 --> 00:00:33.882
Thing now so I can say usePlaylists
that's gonna import it for

9
00:00:33.882 --> 00:00:36.848
me at the top right there usePlaylists.

10
00:00:36.848 --> 00:00:42.562
And then now I can say const (play

11
00:00:42.562 --> 00:00:48.694
list) = usePlaylists like that.

12
00:00:51.935 --> 00:00:53.284
I can get rid of this playlist.

13
00:00:53.284 --> 00:00:58.660
And the other thing is now,
I think our fake playlists were

14
00:00:58.660 --> 00:01:03.610
my assisting for now,
data is type response, okay?

15
00:01:03.610 --> 00:01:09.193
Okay, once we the type check this let's do
that and then we'll just say, data as any.

16
00:01:09.193 --> 00:01:13.789
There we go.

17
00:01:13.789 --> 00:01:15.035
So good.

18
00:01:15.035 --> 00:01:17.025
Okay, that'll solve that problem.

19
00:01:17.025 --> 00:01:20.439
Don't do this and
[LAUGH] production team are you?

20
00:01:20.439 --> 00:01:22.306
But I don't wanna sit here and

21
00:01:22.306 --> 00:01:26.873
debug TypeScript all day if I said
that was gonna be optional, alright.

22
00:01:26.873 --> 00:01:31.589
So playlists, and like I said before
our my playlists were just strings so

23
00:01:31.589 --> 00:01:35.179
now this is an object so
we need to, obviously fix this.

24
00:01:35.179 --> 00:01:40.266
So now I'll say this will be a playlist,
and this will be a playlist.id.

25
00:01:40.266 --> 00:01:42.439
And this will be playlist.name.

26
00:01:42.439 --> 00:01:47.398
So we have the place ID,
we have the playlist name.

27
00:01:47.398 --> 00:01:51.396
Now we got to make sure we're signed in
with a user that has playlists which I see

28
00:01:51.396 --> 00:01:52.194
the user does.

29
00:01:52.194 --> 00:01:54.948
And we should see some
playlists on the side.

30
00:01:54.948 --> 00:01:59.313
So let's give that a try and obviously,
we didn't make the play this API so

31
00:01:59.313 --> 00:02:03.954
we should like try to get a 404 but just
want to make sure that it's like making

32
00:02:03.954 --> 00:02:06.685
the requests we want to
see what what happens.

33
00:02:06.685 --> 00:02:11.947
So let's sign in to that usertest.com and
then password,

34
00:02:11.947 --> 00:02:16.786
enter it signs in, playlist,
map is not a function and

35
00:02:16.786 --> 00:02:21.838
that's probably because I'm
getting back an error here

36
00:02:21.838 --> 00:02:27.436
because we don't have a playlist routes,
which is expected.

37
00:02:27.436 --> 00:02:30.286
So if we go back and look,
we can see there it is.

38
00:02:30.286 --> 00:02:31.658
There's a 404 that I talked about,

39
00:02:31.658 --> 00:02:33.745
you get a 404 because we don't
have the play this route.

40
00:02:33.745 --> 00:02:35.913
But if we look at the network tab,

41
00:02:35.913 --> 00:02:40.801
what I was trying to verify is that we
actually just made a call to playlist.

42
00:02:40.801 --> 00:02:42.002
So our hook is working.

43
00:02:42.002 --> 00:02:44.057
It's making a call to API slash playlist.

44
00:02:44.057 --> 00:02:48.839
So all we got to do is gonna make this
API routes, we'll get our playlists and

45
00:02:48.839 --> 00:02:52.712
we should be good to go
Friends hooked up though.

46
00:02:52.712 --> 00:02:54.217
So let's do that.

47
00:02:54.217 --> 00:02:58.970
We'll head over to our API we'll make
a new file here called playlists.TS

48
00:03:04.210 --> 00:03:06.192
And we'll fill this out
to have our playlist.

49
00:03:06.192 --> 00:03:10.410
So the first thing is we'll import prisma
from prisma because that's what we've

50
00:03:10.410 --> 00:03:11.089
been using.

51
00:03:11.089 --> 00:03:16.556
We'll import the validate routes cuz
this is gonna be a validator routes

52
00:03:16.556 --> 00:03:21.753
we don't want people coming in here
that don't have access to people

53
00:03:21.753 --> 00:03:27.513
that aren't authenticated to access
this play this page so we'll do that.

54
00:03:27.513 --> 00:03:32.854
And then to actually get the playlist
should be pretty simple so

55
00:03:32.854 --> 00:03:37.793
first we'll say, exports function or
export default and

56
00:03:37.793 --> 00:03:43.135
then we'll just say validate routes,
will pass another thing

57
00:03:43.135 --> 00:03:49.824
in here this will be an a sync function
we have a request, so we have a response.

58
00:03:49.824 --> 00:03:52.888
We're not an add function anymore so
we do have access to Prisma and

59
00:03:52.888 --> 00:03:58.182
things like that, that's why I'm using
this it's just an API function And

60
00:03:58.182 --> 00:04:05.009
we just wanna get all the playlists for
the user that's really all we wanna do so

61
00:04:05.009 --> 00:04:10.610
we could just say const playlist
= awaits prisma.playlists.

62
00:04:10.610 --> 00:04:16.278
And then I mean, there's so
many ways we can do this.

63
00:04:16.278 --> 00:04:20.283
We can go from the playlist and grab,
all the playlists that have this user,

64
00:04:20.283 --> 00:04:23.178
we could go to the user and
just grab all the playlists.

65
00:04:23.178 --> 00:04:28.461
There's no right or wrong way at this
point, because they're both kinda index.

66
00:04:28.461 --> 00:04:34.649
So I think the best way might
just do it from the playlist and

67
00:04:34.649 --> 00:04:40.079
then we'll just say,
findMany where user ID = and

68
00:04:40.079 --> 00:04:44.880
then I'll get this third
argument right here

69
00:04:44.880 --> 00:04:48.943
from this user User oops, user.id.

70
00:04:48.943 --> 00:04:52.996
So give me all the playlists
where user ID = user.id.

71
00:05:02.380 --> 00:05:06.044
And then res.json send the playlists back.

72
00:05:06.044 --> 00:05:10.921
If you come from the user side,
you can say like prisma.user,

73
00:05:10.921 --> 00:05:14.426
that find unique find
the user by the user ID.

74
00:05:14.426 --> 00:05:18.220
And then you could do
something like include, and

75
00:05:18.220 --> 00:05:22.388
you can include the playlists,
which is really cool.

76
00:05:22.388 --> 00:05:23.623
We'll do some of that later.

77
00:05:23.623 --> 00:05:25.582
It gets really cool there.

78
00:05:25.582 --> 00:05:28.741
Which is really hard to do, if you have
the right sequel, are using Mango?

79
00:05:28.741 --> 00:05:30.079
We need to go to our fetcher.

80
00:05:30.079 --> 00:05:32.509
And we need to resolve this.

81
00:05:32.509 --> 00:05:37.336
So what I need to do is right now
basically fetches needs to be resolved is

82
00:05:37.336 --> 00:05:39.754
returning a response as a promise.

83
00:05:39.754 --> 00:05:44.813
So inside of the fetcher,
need to do .then and

84
00:05:44.813 --> 00:05:48.719
then I'll get a response objects.

85
00:05:48.719 --> 00:05:51.082
I can just return res.json.

86
00:05:51.082 --> 00:05:54.099
And that'll resolve it.

87
00:06:01.490 --> 00:06:08.621
I can also do some really good
error handling here too so,

88
00:06:08.621 --> 00:06:14.131
I can say something
like if res.status is &gt;

89
00:06:16.664 --> 00:06:21.593
299 but, and res.status

90
00:06:21.593 --> 00:06:27.317
&gt;399 and then like &lt; 200.

91
00:06:27.317 --> 00:06:31.486
So I could do that,
that'll throw an error.

92
00:06:35.250 --> 00:06:37.598
So, we'll say, throw new Error.

93
00:06:37.598 --> 00:06:44.635
So we'll throw an error message if it's
greater than that or less than that.

94
00:06:44.635 --> 00:06:48.881
Otherwise do json, so we're good there and

95
00:06:48.881 --> 00:06:52.567
now we should get our playlists here.

96
00:06:52.567 --> 00:06:57.265
So there we go there's our playlist on the
side it's not ordered it's like random.

97
00:06:57.265 --> 00:07:03.274
Okay, so we probably wanna order
these cuz it just doesn't look good.

98
00:07:03.274 --> 00:07:10.329
So we can go back to our playlist
function and in here we can do order by.

99
00:07:10.329 --> 00:07:14.244
And I want to order by the name and

100
00:07:14.244 --> 00:07:18.605
I can say ascending or descending.

101
00:07:18.605 --> 00:07:24.229
I'll say ascending, so
now we're ordered by a name ascending and

102
00:07:24.229 --> 00:07:26.747
I can refresh and there we go.

103
00:07:26.747 --> 00:07:31.977
10 has one in it so it's like there so
obviously it's not perfect, but yeah.

104
00:07:31.977 --> 00:07:35.277
So we've got our playlist,
we made our API call, we can verify,

105
00:07:35.277 --> 00:07:38.770
we look at the network, check out
this fetch tap which is super cool.

106
00:07:38.770 --> 00:07:39.840
There it is.

107
00:07:39.840 --> 00:07:41.174
We get to 200.

108
00:07:41.174 --> 00:07:45.854
And, we get back our playlists here,

109
00:07:45.854 --> 00:07:49.080
which is really awesome.

110
00:07:49.080 --> 00:07:52.152
And all we had to do, was all that work.

111
00:07:52.152 --> 00:07:55.397
[LAUGH] I think this use
Plato's like is really cool,

112
00:07:55.397 --> 00:07:59.896
because this is you don't have to
think about anything now, you just use

113
00:07:59.896 --> 00:08:04.358
this whenever you wanna play this or
use this whenever you wanna use it.

114
00:08:04.358 --> 00:08:05.582
It's very cool.

115
00:08:05.582 --> 00:08:09.859
I like abstracting things out of
components, I hate like initiating and

116
00:08:09.859 --> 00:08:14.921
creating like API calls and the component
just, I don't wanna deal with any of that.

117
00:08:14.921 --> 00:08:17.190
I want everything to be a component or
I want it to be a hook, that's it.

118
00:08:17.190 --> 00:08:18.032
I don't want anything
else in that component.

119
00:08:18.032 --> 00:08:21.647
If it's not that I'm gonna turn it into
that cuz I don't wanna think about

120
00:08:21.647 --> 00:08:25.086
anything up
&gt;&gt; I don't know if I'm oversimplifying

121
00:08:25.086 --> 00:08:30.426
this, but so whenever we're creating
custom hooks is usually the idea

122
00:08:30.426 --> 00:08:36.139
that we wanna use hooks but outside of
a component, we wanted to use useSWR.

123
00:08:36.139 --> 00:08:38.468
You're gonna have to use
it in every component, so

124
00:08:38.468 --> 00:08:40.919
we created a custom hook that
can also run it because.

125
00:08:40.919 --> 00:08:41.584
&gt;&gt; Exactly.

126
00:08:41.584 --> 00:08:45.377
&gt;&gt; You couldn't just use a hook inside
of a normal like function right?

127
00:08:45.377 --> 00:08:46.100
&gt;&gt; Right.

128
00:08:46.100 --> 00:08:46.810
&gt;&gt; Yeah.

129
00:08:46.810 --> 00:08:51.169
&gt;&gt; There hasn't been a component yeah
hooks only works in a functional

130
00:08:51.169 --> 00:08:53.933
component not even classical component.

131
00:08:53.933 --> 00:08:58.382
And that's because the way functional
components work in react is that,

132
00:08:58.382 --> 00:09:01.697
the function itself is
actually the render function.

133
00:09:01.697 --> 00:09:06.056
So you can think of it as as its own call,
whatever reacts says this

134
00:09:06.056 --> 00:09:10.274
component has to re render that
function gets executed again.

135
00:09:10.274 --> 00:09:14.162
So if you didn't have a hook and
all your state were just like variables,

136
00:09:14.162 --> 00:09:17.880
your variables will get reset every
time that component re renders.

137
00:09:17.880 --> 00:09:23.847
So to opt out of that rendering cycle
it's basically tell react like hey,

138
00:09:23.847 --> 00:09:26.457
react I want you to watch these.

139
00:09:26.457 --> 00:09:30.354
I want you to watch these these values for
me and the way you do that is with a hook.

140
00:09:30.354 --> 00:09:32.111
So hook is just you telling react to hey,

141
00:09:32.111 --> 00:09:35.018
please do not reset this I need you
to watch this across re renders.

142
00:09:35.018 --> 00:09:36.981
Whereas in a classical component,

143
00:09:36.981 --> 00:09:40.188
you get that by default because
there's a render method so

144
00:09:40.188 --> 00:09:44.322
everything is just regular JavaScript
until you get to the render method.

145
00:09:44.322 --> 00:09:48.362
But the functional component the whole
function is the render method so

146
00:09:48.362 --> 00:09:51.739
you got to opt out whereas in
the classical point you opt in.

147
00:09:51.739 --> 00:09:54.780
So it's like backwards, so
hooks was their solution to opting out.

