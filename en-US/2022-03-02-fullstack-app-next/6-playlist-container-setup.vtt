WEBVTT

1
00:00:00.020 --> 00:00:03.880
I will continue to move on to
actually building out this layout.

2
00:00:03.880 --> 00:00:05.937
So I'm gonna head back
to the player layout and

3
00:00:05.937 --> 00:00:08.120
we're gonna actually make this a thing.

4
00:00:08.120 --> 00:00:10.202
So again, there needs to be
a sidebar to the left, and

5
00:00:10.202 --> 00:00:11.420
then a music bar at the bottom.

6
00:00:11.420 --> 00:00:13.266
So let's kinda get going with that.

7
00:00:13.266 --> 00:00:16.752
First thing I want to do is,
because if you think about that design,

8
00:00:16.752 --> 00:00:18.906
it's kind of like a fixed width, right?

9
00:00:18.906 --> 00:00:21.540
If we go back,
this sidebar is never gonna move and

10
00:00:21.540 --> 00:00:24.827
this player bar is never gonna move,
they're always there.

11
00:00:24.827 --> 00:00:28.928
The only thing that really moves is,
if you can see right here at the playlist,

12
00:00:28.928 --> 00:00:31.040
you can see there's a scroll bar there,

13
00:00:31.040 --> 00:00:34.024
that playlist section is its
own container and it moves,

14
00:00:34.024 --> 00:00:37.723
but the sidebar that's containing
it doesn't actually move at all.

15
00:00:37.723 --> 00:00:42.137
So because of that, I'm probably gonna
use an absolute positioning to put

16
00:00:42.137 --> 00:00:46.712
everything where it needs to be, and
then just do math, and go from there.

17
00:00:46.712 --> 00:00:48.322
That's probably what I'll end up doing.

18
00:00:48.322 --> 00:00:52.211
If this was gonna be super responsive,
you could probably still do that and

19
00:00:52.211 --> 00:00:56.286
then just use nonfixed values like pixels
instead of use ems or percentages and

20
00:00:56.286 --> 00:00:57.640
things like that.

21
00:00:57.640 --> 00:01:01.639
And I kind of see that approach a lot in
this common dashboard set up now where

22
00:01:01.639 --> 00:01:04.626
it's absolutely position
sidebar with a margin left or

23
00:01:04.626 --> 00:01:08.250
something on the main thing, so
we'll kind of do the same thing.

24
00:01:08.250 --> 00:01:11.643
So the question was,
if we're doing absolute positioning,

25
00:01:11.643 --> 00:01:16.013
when we do get to responsive design is the
technique to do some type of collapse to

26
00:01:16.013 --> 00:01:20.180
get it out the way, maybe do a hamburger
menu or something like that.

27
00:01:20.180 --> 00:01:21.700
Yeah, totally I see that a lot.

28
00:01:23.000 --> 00:01:28.620
People also will just typically, it really
depends on how you do the responsiveness.

29
00:01:28.620 --> 00:01:31.490
Are you doing it in CSS,
are you doing it in JavaScript?

30
00:01:31.490 --> 00:01:35.064
Because in chakra UI, you can actually
write a media query using a hook.

31
00:01:35.064 --> 00:01:37.709
You can write a media query in line or
in a component.

32
00:01:37.709 --> 00:01:41.592
So really just depends on how you're
doing that and how you toggle that, but

33
00:01:41.592 --> 00:01:45.064
typically what I would do is I would
have two different components.

34
00:01:45.064 --> 00:01:48.747
I would have one component that's for
desktop view, that's the navigation.

35
00:01:48.747 --> 00:01:52.482
And I'll have another component, that's
the same navigation but for mobile view.

36
00:01:52.482 --> 00:01:56.245
And then I would just toggle the two
depending on what state I was in, and

37
00:01:56.245 --> 00:02:00.430
that state is determined off a media
query hook, that way it's reactive.

38
00:02:00.430 --> 00:02:03.550
But you can also do the same
thing in CSS as well.

39
00:02:03.550 --> 00:02:05.448
But you'll probably need classes for that.

40
00:02:05.448 --> 00:02:08.641
You'll either have a class
that's hidden on mobile, right?

41
00:02:08.641 --> 00:02:10.745
And that's inside of a media query.

42
00:02:10.745 --> 00:02:15.376
When it's in a media query,
its display is there but on desktop,

43
00:02:15.376 --> 00:02:17.580
it says display none, right?

44
00:02:17.580 --> 00:02:19.300
So that's another way you can do it.

45
00:02:19.300 --> 00:02:23.120
But these days,
I typically avoid writing CSS files.

46
00:02:23.120 --> 00:02:28.350
So [LAUGH] I love CSS, I just don't
like writing it in a CSS file.

47
00:02:28.350 --> 00:02:31.912
Which is strange because, I used to
remember just love writing stylus and

48
00:02:31.912 --> 00:02:33.240
Sass and Less all the time.

49
00:02:33.240 --> 00:02:37.011
Really love doing it, I now I'm just like,
I don't wanna write that anymore.

50
00:02:37.011 --> 00:02:41.646
I just wanna grab a component lib that
gets me more than halfway there and

51
00:02:41.646 --> 00:02:43.300
then just tweak it.

52
00:02:43.300 --> 00:02:44.845
It's a lot faster in my opinion.

53
00:02:44.845 --> 00:02:49.842
But don't get me wrong, I'll hop on CSS
wars and battle somebody, if I need to,

54
00:02:49.842 --> 00:02:50.368
right?

55
00:02:50.368 --> 00:02:52.560
I'll do it but only if I have to.

56
00:02:52.560 --> 00:02:55.479
For this box,
let's give it a width of 100 vw.

57
00:02:55.479 --> 00:02:59.950
If you don't know know what that unit is,
vw stands for view width.

58
00:02:59.950 --> 00:03:01.900
It's relatively new, I guess.

59
00:03:01.900 --> 00:03:05.930
But it means just 100% of the view port or
whatever screen you're on.

60
00:03:05.930 --> 00:03:08.510
If you're on a 12 inch screen,
it'll be that wide.

61
00:03:08.510 --> 00:03:11.090
If you're on a 21 inch screen,
it'll be that wide.

62
00:03:11.090 --> 00:03:14.563
It's what you think 100% would be but
it's not.

63
00:03:14.563 --> 00:03:18.950
This is what it actually is, this is
the full width of the screen, cool.

64
00:03:18.950 --> 00:03:22.731
And then we're gonna do the same thing for
height.

65
00:03:22.731 --> 00:03:27.260
So height would be 100 vh,
which stands for view height.

66
00:03:27.260 --> 00:03:30.910
So, it's 100% height of
the screen that you're on.

67
00:03:30.910 --> 00:03:33.410
This is a responsive unit of measurement.

68
00:03:33.410 --> 00:03:36.400
So if you shrink the screen,
then obviously it shrinks as well.

69
00:03:36.400 --> 00:03:38.730
So this is great for
responsive design as well.

70
00:03:38.730 --> 00:03:39.998
So we're gonna do that.

71
00:03:39.998 --> 00:03:42.230
This is gonna keep our
main page from scrolling.

72
00:03:42.230 --> 00:03:46.275
Nothing on the main pages scrolls, each
individual thing scrolls on its own versus

73
00:03:46.275 --> 00:03:48.260
having the whole page scroll by itself.

74
00:03:48.260 --> 00:03:50.702
Which is what you will see
on a content website or

75
00:03:50.702 --> 00:03:53.030
something like that we're just scrolling.

76
00:03:54.460 --> 00:03:59.872
Then the next thing we're gonna do is,
we're gonna make a new box here and

77
00:03:59.872 --> 00:04:03.384
we're gonna give this
a position of absolute.

78
00:04:03.384 --> 00:04:04.497
And by the way,

79
00:04:04.497 --> 00:04:10.100
see how I'm able to just write CSS
properties as props on these components.

80
00:04:10.100 --> 00:04:14.758
This is why I chose chakra UI, because it
literally has mapped every CSS property

81
00:04:14.758 --> 00:04:19.710
that you could ever do and made it a prop
on every component that they have.

82
00:04:19.710 --> 00:04:22.286
If you don't like writing a prop for
every single one,

83
00:04:22.286 --> 00:04:24.850
you can use this other thing called SX.

84
00:04:24.850 --> 00:04:29.223
And it takes an object of CSS properties,
and then they do the same thing.

85
00:04:29.223 --> 00:04:30.688
I could put width here, and

86
00:04:30.688 --> 00:04:34.397
you can see I got all these type
checked CSS properties here already.

87
00:04:34.397 --> 00:04:38.537
So to me this is much better than writing
CSS in a CSS file because you don't even

88
00:04:38.537 --> 00:04:39.937
need a CSS preprocessor.

89
00:04:39.937 --> 00:04:42.444
You are using JavaScript at this point,

90
00:04:42.444 --> 00:04:45.990
which is what every CSS
preprocessor wants to be anyway.

91
00:04:45.990 --> 00:04:49.770
So yeah, to me, this is just much better.

92
00:04:49.770 --> 00:04:52.790
And yeah, it lives right next to the JSX.

93
00:04:52.790 --> 00:04:56.290
I had two go into places,
it's scoped already, it's not global.

94
00:04:56.290 --> 00:04:58.330
So it just works.

95
00:04:58.330 --> 00:05:00.764
So I'm gonna say position absolute for
this box.

96
00:05:00.764 --> 00:05:07.950
I'm gonna give a top of 0 and
a width of, let's see.

97
00:05:07.950 --> 00:05:09.690
So this is gonna be for the sidebar.

98
00:05:09.690 --> 00:05:11.694
You can kind of play around with this, but

99
00:05:11.694 --> 00:05:15.740
I think what I found was 250 pixels
wide for the sidebar was pretty cool.

100
00:05:15.740 --> 00:05:18.900
Obviously that's gonna look different
depending on what screen size you're on.

101
00:05:18.900 --> 00:05:21.760
But you can play around with this number,
you can put a percentage here if you want.

102
00:05:21.760 --> 00:05:24.663
I don't recommend that,
cuz then it'll look really,

103
00:05:24.663 --> 00:05:28.500
really big on it like a 30 inch screen,
your sidebar will be massive.

104
00:05:28.500 --> 00:05:31.169
So typically I always like to give
the sidebar a fixed width no matter what

105
00:05:31.169 --> 00:05:33.650
screen size you're on because
it shouldn't get bigger.

106
00:05:33.650 --> 00:05:38.150
Whereas the page itself probably would
get bigger on a page, but a sidebar,

107
00:05:38.150 --> 00:05:40.416
the navigation typically doesn't.

108
00:05:40.416 --> 00:05:44.225
Imagine a toolbar at the top that got
taller if you rotated your screen

109
00:05:44.225 --> 00:05:46.668
vertically, that would be weird, right?

110
00:05:46.668 --> 00:05:50.734
So yeah, I think navigation is one of
those things that should never change its

111
00:05:50.734 --> 00:05:53.810
dimensions no matter
what the screen size is.

112
00:05:53.810 --> 00:05:59.072
So it's either there or it isn't,
depending on mobile or not.

113
00:05:59.072 --> 00:06:01.582
Okay, and then I'm also gonna do a left 0.

114
00:06:01.582 --> 00:06:06.108
So this will be our sidebar, and
I'm just gonna type in the word sidebar,

115
00:06:06.108 --> 00:06:07.576
so we know it's there.

116
00:06:07.576 --> 00:06:11.425
And then for the next part, so
if we have a sidebar on the left,

117
00:06:11.425 --> 00:06:14.703
then to the right of that
is the actual page, right?

118
00:06:14.703 --> 00:06:16.978
So that's where the content is gonna be.

119
00:06:16.978 --> 00:06:19.303
So we're gonna make another box for that.

120
00:06:23.006 --> 00:06:24.350
There we go.

121
00:06:24.350 --> 00:06:28.930
And we need to account, because
the sidebar is absolutely positioned,

122
00:06:28.930 --> 00:06:34.230
we have to make that, let me show you the
visuals cuz I'm just using my hands here.

123
00:06:34.230 --> 00:06:37.379
So we're creating the container for
this page now, and

124
00:06:37.379 --> 00:06:41.533
because this is absolutely positioned and
is turned to 50 pixels wide,

125
00:06:41.533 --> 00:06:44.950
we have to have this section account for
that 250 pixels.

126
00:06:44.950 --> 00:06:47.642
So we have to put some margin on the left,
that's 250 pixels, so

127
00:06:47.642 --> 00:06:49.070
it doesn't render underneath it.

128
00:06:49.070 --> 00:06:52.425
Cuz that's what would happen if we didn't
do that cuz it's absolute position.

129
00:06:52.425 --> 00:06:54.390
So it'll just sit there underneath it.

130
00:06:54.390 --> 00:06:57.567
So if we offset it by turning
50 pixels to the left,

131
00:06:57.567 --> 00:07:01.468
we can push it over, and
then we can also use math to determine how

132
00:07:01.468 --> 00:07:04.600
wide it is by using the calc
function inside of CSS.

133
00:07:04.600 --> 00:07:05.856
So that's what we'll do.

134
00:07:05.856 --> 00:07:08.172
By no means is this
the only way to do this?

135
00:07:08.172 --> 00:07:12.023
This is the way that I thought was
the best and it usually works out.

136
00:07:12.023 --> 00:07:15.510
And my favorite, I do less debugging
this way with CSS [LAUGH].

137
00:07:15.510 --> 00:07:17.390
So we will do that.

138
00:07:17.390 --> 00:07:20.854
So for this box,
we're gonna say marginLeft.

139
00:07:20.854 --> 00:07:26.580
So everything that's dashed delimited
in CSS as a prop is gonna be CamelCase.

140
00:07:26.580 --> 00:07:29.727
So instead of margin_Left, because
you can't use dashes and prop names,

141
00:07:29.727 --> 00:07:32.360
this is gonna be margin
left with CamelCase.

142
00:07:32.360 --> 00:07:35.190
And like I said, we got to count for
that 250 pixels.

143
00:07:35.190 --> 00:07:37.906
So I'll say 250 pixels, just like that.

144
00:07:37.906 --> 00:07:42.620
And then the next thing,
what I'll do is I also want to account for

145
00:07:42.620 --> 00:07:45.551
the bar that's gonna go underneath it.

146
00:07:45.551 --> 00:07:50.990
That's also gonna be absolutely positioned
as well, and we need to account for that.

147
00:07:50.990 --> 00:07:53.960
So we'll be coming back to this and
adding a margin bottom.

148
00:07:53.960 --> 00:07:56.300
But for now,
I'm just gonna render the children here.

149
00:07:56.300 --> 00:08:00.278
So that's where the children get rendered,
which will be the page.

150
00:08:00.278 --> 00:08:02.700
And underneath that is the bar where
we're actually playing things.

151
00:08:02.700 --> 00:08:04.020
So I'm gonna make a box here.

152
00:08:05.400 --> 00:08:10.730
This too will have a position of absolute,
just like the sidebar,

153
00:08:10.730 --> 00:08:15.021
except its left will be 0,
and its bottom will be 0.

154
00:08:15.021 --> 00:08:15.833
We don't want this to go on top.

155
00:08:18.721 --> 00:08:21.042
And then I'll just say player here.

156
00:08:21.042 --> 00:08:27.049
And just to swing back to this box up
here where we're rendering the children,

157
00:08:27.049 --> 00:08:32.340
we have to account for the height of
whatever the play bar is gonna be.

158
00:08:33.670 --> 00:08:35.855
Again, this is like you kind of
got to play around with it and

159
00:08:35.855 --> 00:08:37.011
see what visually looks good.

160
00:08:37.011 --> 00:08:39.967
This is where you have your design tool
and you're like, how tall is this thing,

161
00:08:39.967 --> 00:08:40.803
how many pixels is it?

162
00:08:40.803 --> 00:08:42.770
I think what worked out for
me was 100 pixels.

163
00:08:42.770 --> 00:08:46.565
So I'm just gonna give this
a margin bottom of 100 pixels, and

164
00:08:46.565 --> 00:08:49.755
that should give that player
enough space down there.

165
00:08:49.755 --> 00:08:53.598
And I'm gonna come back to here so
we're still copying it, don't worry,

166
00:08:53.598 --> 00:08:54.757
I'm gonna come back.

167
00:08:54.757 --> 00:08:59.087
I just wanna visually make sure that all
these looks like the way it's supposed to

168
00:08:59.087 --> 00:08:59.732
look like.

169
00:08:59.732 --> 00:09:04.305
So if we look at this page, you can see
that other than this homepage it's huge,

170
00:09:04.305 --> 00:09:07.104
we should probably get rid
of this at some point,

171
00:09:07.104 --> 00:09:09.652
but it's actually doing
what we need to do.

172
00:09:09.652 --> 00:09:14.177
We have a sidebar on the left, and then
on the right we have the main content of

173
00:09:14.177 --> 00:09:17.390
the page, and
then underneath it there's a player.

174
00:09:18.640 --> 00:09:23.406
So we're getting closer, we're there, but
obviously we need to style the things and

175
00:09:23.406 --> 00:09:24.598
make them look good.

176
00:09:24.598 --> 00:09:26.971
So pretty close.

