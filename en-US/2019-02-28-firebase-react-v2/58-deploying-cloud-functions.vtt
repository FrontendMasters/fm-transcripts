WEBVTT

1
00:00:00.220 --> 00:00:03.004
&gt;&gt; Steve Kinney: Let's actually
deploy it to the Internet.

2
00:00:03.004 --> 00:00:08.815
So we'll do firebase deploy,
in this case we'll do

3
00:00:08.815 --> 00:00:14.680
--only functions, we don't need to rebuild
the entire app and deploy it again.

4
00:00:14.680 --> 00:00:16.167
We're only gonna deploy the functions.

5
00:00:18.752 --> 00:00:21.479
&gt;&gt; Steve Kinney: Cool, so
it's building that up, and

6
00:00:21.479 --> 00:00:24.300
it's gonna push it up to a server.

7
00:00:24.300 --> 00:00:28.310
In this case,
we tell people it's HTTPS on request.

8
00:00:28.310 --> 00:00:32.139
So it's whenever somebody makes a request
to this endpoint that we're gonna second.

9
00:00:32.139 --> 00:00:36.353
And it'll be something like whatever
the region is dash the project dash

10
00:00:36.353 --> 00:00:40.120
cloudfunctions.net slash,
in this case, hello world.

11
00:00:40.120 --> 00:00:45.570
Mostly by whatever you called
exports dot at the very end there.

12
00:00:45.570 --> 00:00:48.530
All right, so that is uploading.

13
00:00:50.070 --> 00:00:52.360
Let's go ahead and, whoop, let's see.

14
00:00:54.320 --> 00:00:57.490
So you can see by default it's node 6.

15
00:00:57.490 --> 00:00:59.620
Node 6 is old.

16
00:00:59.620 --> 00:01:05.690
And more important than that the fact
that it's old is the fact that it doesn't

17
00:01:05.690 --> 00:01:11.920
support stuff like the 8608 syntax that we
were using before or the spread operator.

18
00:01:11.920 --> 00:01:17.760
There is a way to change
it to use a Node 8 instead,

19
00:01:17.760 --> 00:01:21.690
which might be really useful, and that's
just basically going into the engines

20
00:01:21.690 --> 00:01:23.900
in the package JSON and
doing that as well.

21
00:01:23.900 --> 00:01:25.190
So we'll try that in a second.

22
00:01:25.190 --> 00:01:26.882
I'll actually make that change
while we're waiting for it.

23
00:01:40.503 --> 00:01:44.519
&gt;&gt; Steve Kinney: Trying to remember
the syntax off the top of my head,

24
00:01:44.519 --> 00:01:46.810
think thatâ€™ll do the trick.

25
00:01:54.898 --> 00:01:58.108
&gt;&gt; Steve Kinney: All right, so
this is called the helloworld function,

26
00:01:58.108 --> 00:01:59.920
it's gong to us-central1.

27
00:01:59.920 --> 00:02:03.950
One of the things to point
out is we'll see for

28
00:02:03.950 --> 00:02:07.580
the HTTPS ones how can
actually test them locally.

29
00:02:07.580 --> 00:02:12.065
But I'm not gonna lie to you,
the feedback loop for

30
00:02:12.065 --> 00:02:16.559
testing cloud functions isn't amazing,
right?

31
00:02:16.559 --> 00:02:21.065
A lot of times it is deploy,
see if it worked,

32
00:02:21.065 --> 00:02:25.420
[LAUGH] it didn't, deploy, right?

33
00:02:25.420 --> 00:02:30.030
There is a shell, but honestly
there's a lot of really great work

34
00:02:30.030 --> 00:02:34.800
kind of happening, but
it's still not perfect.

35
00:02:34.800 --> 00:02:36.800
So let's actually grab this helloworld1,

36
00:02:36.800 --> 00:02:39.070
I can't click on it directly
cuz of that line break.

37
00:02:40.180 --> 00:02:42.866
And I will bring it over into Chrome.

38
00:02:47.594 --> 00:02:48.146
&gt;&gt; Steve Kinney: Nope.

39
00:02:53.267 --> 00:02:55.080
&gt;&gt; Steve Kinney: And you can see,
there's that response.

40
00:02:55.080 --> 00:02:58.090
There's that Hello from Firebase, right?

41
00:02:58.090 --> 00:03:00.890
And that was served from a backend API.

