WEBVTT

1
00:00:00.040 --> 00:00:02.416
&gt;&gt; Steve Kinney: Right now,
our application still works,

2
00:00:02.416 --> 00:00:04.861
cuz everything is in Application, still.

3
00:00:04.861 --> 00:00:09.943
But what we'll see that we can do is,
first, we need to wrap some higher-level,

4
00:00:09.943 --> 00:00:14.892
some top-level component in the provider
itself, so things can hook into it.

5
00:00:14.892 --> 00:00:19.700
So I'm just actually gonna go to

6
00:00:19.700 --> 00:00:24.317
index,
&gt;&gt; Steve Kinney: I'll wrap

7
00:00:24.317 --> 00:00:27.762
the application,

8
00:00:27.762 --> 00:00:32.281
this is very similar to,

9
00:00:32.281 --> 00:00:36.595
if you use Redux React.

10
00:00:39.634 --> 00:00:45.017
&gt;&gt; Steve Kinney: Cool, and now,
&gt;&gt; Steve Kinney: With the actual

11
00:00:45.017 --> 00:00:50.078
posts,
&gt;&gt; Steve Kinney: We can pull in that

12
00:00:50.078 --> 00:00:56.287
PostContext,
&gt;&gt; Steve Kinney: And

13
00:00:56.287 --> 00:00:59.993
instead of passing the post in,
we don't need to do that anymore,

14
00:00:59.993 --> 00:01:03.517
cuz they previously had to get
passed in from the application.

15
00:01:03.517 --> 00:01:06.508
Now we don't have to pass
them into the application,

16
00:01:06.508 --> 00:01:09.438
cuz any component can hook
in to that state, right?

17
00:01:09.438 --> 00:01:14.300
And so if this became a giant application,
with a tree that was 17 levels deep of

18
00:01:14.300 --> 00:01:18.681
components, and only the components
16 levels down needed the post?

19
00:01:18.681 --> 00:01:22.367
Fine, we don't have to pass it
through the other 16 levels, right?

20
00:01:22.367 --> 00:01:23.767
And this is a really great pattern for

21
00:01:23.767 --> 00:01:26.860
using with Firebase, cuz now we can
create these things totally separately.

22
00:01:26.860 --> 00:01:30.773
And in the same way that we were able to
add stuff into the database from anywhere

23
00:01:30.773 --> 00:01:31.857
in our application.

24
00:01:31.857 --> 00:01:37.369
We can also now consume posts
from Firestore, as well.

25
00:01:37.369 --> 00:01:42.088
So we'll go ahead, we don't need the posts
from there anymore, we'll go ahead and

26
00:01:42.088 --> 00:01:42.830
we'll say,

27
00:01:46.795 --> 00:01:53.098
&gt;&gt; Steve Kinney: PostsContext.Consumer,

28
00:01:57.024 --> 00:01:59.813
&gt;&gt; Steve Kinney: And that will actually

29
00:01:59.813 --> 00:02:04.079
pass in some posts that we can use.

30
00:02:11.616 --> 00:02:14.976
&gt;&gt; Steve Kinney: So now,
we get to do everyone's favorite thing,

31
00:02:14.976 --> 00:02:18.900
let's first make sure the app
didn't completely break.

32
00:02:26.220 --> 00:02:28.312
&gt;&gt; Steve Kinney: [SOUND],
insufficient or missing privileges,

33
00:02:35.964 --> 00:02:37.278
&gt;&gt; Steve Kinney: Rule errors was not

34
00:02:37.278 --> 00:02:42.134
the bug I was expecting when I
flipped back over, so that's awesome.

35
00:02:48.287 --> 00:02:55.008
&gt;&gt; Steve Kinney: All right,
they look like they're going in now,

36
00:02:55.008 --> 00:03:02.218
maybe that was possibly an older error,
we'll see.

37
00:03:02.218 --> 00:03:10.387
So let's go ahead to my data,
&gt;&gt; Steve Kinney: Yeah,

38
00:03:10.387 --> 00:03:12.326
there's a new one, all right,
they're going to the database.

39
00:03:12.326 --> 00:03:15.340
Not quite sure what the rule issue was,
but

40
00:03:15.340 --> 00:03:19.797
logging out and logging back in solved it,
so we can try it out.

41
00:03:29.436 --> 00:03:36.732
&gt;&gt; Steve Kinney: Yeah, so you go in, I'm
just not seeing them on the screen yet,

42
00:03:36.732 --> 00:03:40.664
which is okay, we can debug that.

43
00:03:40.664 --> 00:03:42.297
So those curly braces, they don't return.

44
00:03:56.895 --> 00:03:58.452
&gt;&gt; Steve Kinney: New
errors are good errors,

45
00:04:06.930 --> 00:04:07.553
&gt;&gt; Steve Kinney: posts,

46
00:04:12.221 --> 00:04:13.840
&gt;&gt; Steve Kinney: Looks like an extra

47
00:04:13.840 --> 00:04:20.024
closing brace, and now we should be good,
cool, so there's my posts.

48
00:04:20.024 --> 00:04:25.439
To review what the error was,
is in JavaScript, if a arrow function

49
00:04:25.439 --> 00:04:31.450
has curly braces around the body,
you need to use a return statement.

50
00:04:31.450 --> 00:04:36.600
If it doesn't, then it takes
that one line and returns it.

51
00:04:36.600 --> 00:04:41.528
In the refactoring and coding, I left
an extra set of curly braces in there,

52
00:04:41.528 --> 00:04:44.231
which meant it was returning undefined.

53
00:04:44.231 --> 00:04:51.815
And so simply by actually writing correct
JavaScript, my bug solved itself.

