WEBVTT

1
00:00:00.140 --> 00:00:02.396
&gt;&gt; Steve Kinney: I'm gonna go
back to this one a second, but

2
00:00:02.396 --> 00:00:05.417
first I'm also gonna give me
the opposite here, which is

3
00:00:15.719 --> 00:00:16.475
&gt;&gt; Steve Kinney: This will also be

4
00:00:16.475 --> 00:00:20.314
an interesting function, this will be the
ability to go get one out of the database.

5
00:00:20.314 --> 00:00:22.175
And I'll show you why I'm
doing this in a second.

6
00:00:25.841 --> 00:00:29.425
&gt;&gt; Steve Kinney: So
that will take a uid, and if for

7
00:00:29.425 --> 00:00:33.137
some reason it's not given a uid,

8
00:00:33.137 --> 00:00:38.893
just return null, otherwise
&gt;&gt; Steve Kinney: Let's

9
00:00:38.893 --> 00:00:40.245
try to get it out of the database

10
00:00:49.781 --> 00:00:53.267
&gt;&gt; Steve Kinney: So this is very similar
to what we're doing with getting

11
00:00:53.267 --> 00:00:57.653
a Post before, Firestore,
this time the collection would be users.

12
00:01:01.410 --> 00:01:03.888
&gt;&gt; Steve Kinney: And
the doc will be that uid,

13
00:01:03.888 --> 00:01:08.846
now you could also do the doc users/uid,
both are fine,

14
00:01:08.846 --> 00:01:13.205
I'm mostly switching to
show you that both work.

15
00:01:13.205 --> 00:01:18.231
And we'll get it, and so
we should have that and

16
00:01:18.231 --> 00:01:21.257
with that, we will return.

17
00:01:21.257 --> 00:01:25.632
A lot of the previous ones had the uid
in that object, that's our key.

18
00:01:25.632 --> 00:01:27.433
So we want to combine
the key with the value,

19
00:01:27.433 --> 00:01:29.390
much like we were doing
with the Posts earlier.

20
00:01:29.390 --> 00:01:32.176
So we'll say, uid, and

21
00:01:32.176 --> 00:01:38.032
then we'll say all the other
userDocument.data.

22
00:01:41.768 --> 00:01:45.726
&gt;&gt; Steve Kinney: Cool, and if that doesn't
work, tell us about it in the console,

23
00:01:45.726 --> 00:01:49.133
don't ever tell our users
that something didn't work.

24
00:01:55.030 --> 00:01:58.659
&gt;&gt; Steve Kinney: Error fetching the user,
let's give me the error.message,

25
00:01:58.659 --> 00:02:02.225
we'll do that up there as well,
I don't need the full thing.

26
00:02:04.772 --> 00:02:08.611
&gt;&gt; Steve Kinney: All right, one of the
thing which is just a convenience that I'm

27
00:02:08.611 --> 00:02:13.196
gonna do, is
&gt;&gt; Steve Kinney: I'm

28
00:02:13.196 --> 00:02:18.161
gonna go ahead and
&gt;&gt; Steve Kinney: I'm gonna get it after I

29
00:02:18.161 --> 00:02:21.004
create it, mostly cuz otherwise
I would have to create it and

30
00:02:21.004 --> 00:02:22.470
then go get it somewhere else.

31
00:02:22.470 --> 00:02:28.081
So I'm gonna have this method return
&gt;&gt; Steve Kinney: That user,

32
00:02:28.081 --> 00:02:33.461
okay, that was a lot of code, we hope it
works, we hope I didn't make any boo-boos.

33
00:02:33.461 --> 00:02:38.893
None of you saw any boo-boos, so it's like
we're all complicit if I made a typo,

34
00:02:38.893 --> 00:02:42.456
so that's good,
I don't have to feel embarrassed.

35
00:02:42.456 --> 00:02:47.164
So you have the ability to
conditionally create one,

36
00:02:47.164 --> 00:02:50.100
and then we go and get it, right?

37
00:02:50.100 --> 00:02:53.327
That is arguably,
if that stressed you out at all,

38
00:02:53.327 --> 00:02:58.220
that is the most complicated Firestore
query that we're gonna write today.

39
00:02:58.220 --> 00:03:01.860
So you survived, hoping that it works, so

40
00:03:01.860 --> 00:03:04.760
we need to do it in two places
as we talked about before.

41
00:03:04.760 --> 00:03:07.430
We need to set this if they submit a form.

42
00:03:07.430 --> 00:03:12.030
And we also need to do it
on the off State changed,

43
00:03:12.030 --> 00:03:14.290
that way if they log in
from the Google sign-in.

