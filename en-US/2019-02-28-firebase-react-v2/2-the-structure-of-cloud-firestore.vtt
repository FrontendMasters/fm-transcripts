WEBVTT

1
00:00:00.260 --> 00:00:02.390
&gt;&gt; Steve Kinney: We are gonna
write a lot of code today.

2
00:00:02.390 --> 00:00:07.240
So I wanna cover some of the kind of
theoretical and philosophical parts first.

3
00:00:07.240 --> 00:00:11.230
Cloud Firestore is based on
this idea of collections.

4
00:00:11.230 --> 00:00:12.960
And this is very different.

5
00:00:12.960 --> 00:00:16.770
The previous version of this course
focuses entirely on the real time

6
00:00:16.770 --> 00:00:18.460
database, and
a lot of that is still relevant.

7
00:00:18.460 --> 00:00:21.290
And that's why we kind of focus
in on Cloud Firestore today.

8
00:00:21.290 --> 00:00:23.820
That content still works.

9
00:00:25.390 --> 00:00:28.990
With Cloud Firestore, you have this
idea of a top level collection.

10
00:00:28.990 --> 00:00:31.670
In this case, there's users and
users have many workouts.

11
00:00:31.670 --> 00:00:35.340
And those workouts have histories
in this diagram from Fire Base.

12
00:00:35.340 --> 00:00:39.440
In the real time database,
it was one giant JSON tree.

13
00:00:39.440 --> 00:00:43.130
And you had to be really careful, because
let's say you wanted to make a chat room,

14
00:00:43.130 --> 00:00:46.540
and you're like, cool, I'll have rooms,
and those rooms will have messages, and

15
00:00:46.540 --> 00:00:49.570
those messages will have users,
and so on and so forth.

16
00:00:49.570 --> 00:00:55.470
If you got any part of that tree,
you would get every sub-node, right?

17
00:00:55.470 --> 00:00:59.850
So you had to be really careful about
keeping the tree incredibly shallow, so

18
00:00:59.850 --> 00:01:03.950
you can have just chat rooms that had
maybe the IDs of the messages, and

19
00:01:03.950 --> 00:01:05.230
keep the messages somewhere else.

20
00:01:05.230 --> 00:01:07.650
So you could get as little
of the tree as you needed.

21
00:01:07.650 --> 00:01:11.860
With Cloud Firestore actually, search
is shallow, so if you get the users,

22
00:01:11.860 --> 00:01:13.560
you're just gonna get this top level.

23
00:01:13.560 --> 00:01:16.830
And for a given user, you can go get
the next collection down, right?

24
00:01:16.830 --> 00:01:21.719
So a lot of the really careful data
management that we had to do with a real

25
00:01:21.719 --> 00:01:26.870
time database Is not as much of
a thing anymore in Cloud Firestore.

26
00:01:26.870 --> 00:01:30.140
There are kinda some new
challenges there which is

27
00:01:30.140 --> 00:01:34.070
going across all of the sub collections
is a little more difficult.

28
00:01:34.070 --> 00:01:37.560
So if you're getting to really
complicated NoSQL queries,

29
00:01:37.560 --> 00:01:41.790
you are still gonna have to do
some data normalization as well.

30
00:01:41.790 --> 00:01:44.490
But that is now for
specific kinda searching cases.

31
00:01:44.490 --> 00:01:48.230
Generally speaking, you can structure
your data based on your UI.

32
00:01:48.230 --> 00:01:51.910
And as you need to pull stuff, right,
you can then kind of rearrange stuff.

33
00:01:51.910 --> 00:01:53.360
And it's really interesting
to think about stuff.

34
00:01:53.360 --> 00:01:55.010
When we think about SQL databases,

35
00:01:55.010 --> 00:01:59.620
we have previously been kind of at
the mercy of the database schema.

36
00:01:59.620 --> 00:02:03.390
Normalize all the data, don't have it
duplicated anywhere, so on and so forth.

37
00:02:03.390 --> 00:02:07.790
And this a lot of times when we're
working a NoSQL database is a big change.

38
00:02:07.790 --> 00:02:11.570
Right, for the most part, is thinking
about our user interface, and thinking

39
00:02:11.570 --> 00:02:15.020
about what we wanna show to the user and
structuring our data based on that.

40
00:02:15.020 --> 00:02:18.070
And it's one of those things that
becomes really kinda difficult to

41
00:02:18.070 --> 00:02:18.640
wrap your mind around.

42
00:02:18.640 --> 00:02:23.200
Sometimes is, it is okay to store
the same data multiple places.

43
00:02:23.200 --> 00:02:24.890
You might be like,
how do I keep that all in sync?

44
00:02:24.890 --> 00:02:27.610
When we get to cloud functions there's
a way to say okay, if I change it and

45
00:02:27.610 --> 00:02:29.120
there's one canonical source.

46
00:02:29.120 --> 00:02:33.560
Let me show you all the places to go
ahead and update it there as well.

47
00:02:33.560 --> 00:02:35.200
And there's ways to go about that.

48
00:02:35.200 --> 00:02:38.550
But basically, thinking about
your user interface first and

49
00:02:38.550 --> 00:02:44.630
modeling your data based on that, rather
than the, like, bowing to the Lord that is

50
00:02:44.630 --> 00:02:48.630
your schema and trying to then sit there
and write complicated join statements and

51
00:02:48.630 --> 00:02:52.710
course and then back into something
that works for your user interface.

52
00:02:52.710 --> 00:02:55.215
That's really great and a fun way
to think about things that I enjoy.

53
00:02:56.895 --> 00:03:00.255
So like I said before, in the real-time
database you had to be very careful cuz

54
00:03:00.255 --> 00:03:02.215
you would get all the sub-nodes of a tree.

55
00:03:02.215 --> 00:03:06.115
That is not true in Cloud Firestore,
you'll get a shallow query.

56
00:03:06.115 --> 00:03:08.725
So if you just search for
all of the users,

57
00:03:08.725 --> 00:03:11.595
you're gonna get those users before
you get those sub collections, and

58
00:03:11.595 --> 00:03:14.875
you kind of dive down for
each one as you need it.

59
00:03:14.875 --> 00:03:15.885
So you still need to be mindful,

60
00:03:15.885 --> 00:03:17.800
especially if you're doing
some complicated searches.

61
00:03:17.800 --> 00:03:21.030
But you can be less paranoid that you're
gonna like send way too much data

62
00:03:21.030 --> 00:03:22.130
to your user.

63
00:03:22.130 --> 00:03:25.850
And either like cuz theoretically we
are developing devices that could run on

64
00:03:25.850 --> 00:03:30.785
mobile or lower power devices, like many
of us who are writing code have like fancy

65
00:03:30.785 --> 00:03:35.350
$3000 laptops, but generally
speaking not all of our users do.

66
00:03:35.350 --> 00:03:38.770
So we can get to like, we don't have to
worry about as much with Cloud Firestore,

67
00:03:38.770 --> 00:03:40.710
which I think is a really nice thing.

