WEBVTT

1
00:00:00.400 --> 00:00:03.625
&gt;&gt; Steve Kinney: What we wanna do at
this point is we wanna actually begin to

2
00:00:03.625 --> 00:00:05.185
iterate those documents.

3
00:00:05.185 --> 00:00:07.550
We saw that we have this query snapshot.

4
00:00:07.550 --> 00:00:10.100
Let's refactor this code a little bit and
then let's go ahead and

5
00:00:10.100 --> 00:00:11.210
actually see all of these.

6
00:00:11.210 --> 00:00:17.500
Now, we know that are no documents in
here yet, but we'll fix that momentarily.

7
00:00:17.500 --> 00:00:20.902
But let's go ahead and
refresh this code a little bit.

8
00:00:20.902 --> 00:00:23.180
Because everything's really promise-based,

9
00:00:23.180 --> 00:00:28.950
you get really comfortable with promise
chaining, which is a art in and of itself.

10
00:00:28.950 --> 00:00:33.833
Or we can just opt into the fancy new,
async/await syntax, right?

11
00:00:33.833 --> 00:00:37.100
This is a Create React app,
so we do have Babel.

12
00:00:37.100 --> 00:00:39.390
So I can use it with confidence, and

13
00:00:39.390 --> 00:00:44.450
assume that it will transpile down
into what I need for older browsers.

14
00:00:44.450 --> 00:00:46.270
So to have an asynchronous function,

15
00:00:46.270 --> 00:00:50.040
all I need to do is put the word
async before the function.

16
00:00:50.040 --> 00:00:52.476
And now, instead of doing then,

17
00:00:52.476 --> 00:00:57.923
what I can do is I can say,
&gt;&gt; Steve Kinney: const

18
00:00:57.923 --> 00:01:02.502
snapshot,
&gt;&gt; Steve Kinney: = await

19
00:01:02.502 --> 00:01:08.309
firestore.collection, we don't
need that .then anymore.

20
00:01:10.922 --> 00:01:11.594
&gt;&gt; Steve Kinney: Right, so

21
00:01:11.594 --> 00:01:15.856
this looks kinda like that synchronous
code that we had before, but

22
00:01:15.856 --> 00:01:21.195
under the hood it's using promises, and
this will wait for the promise to resolve.

23
00:01:21.195 --> 00:01:23.250
And then it will go into
that snapshot object,

24
00:01:23.250 --> 00:01:25.890
and I should see roughly the same
thing as what I had before.

25
00:01:27.090 --> 00:01:31.360
Cool, so
that looks a lot easier and nicer.

26
00:01:31.360 --> 00:01:35.040
That is going to be a syntax
that we use a lot today

27
00:01:35.040 --> 00:01:37.129
because it is easier to reason about.

28
00:01:38.200 --> 00:01:44.240
So the snapshot has a query snapshot,
which we know has a number of documents.

29
00:01:44.240 --> 00:01:48.982
It has that forEach method on it,
so we'll say snapshot.forEach.

30
00:01:51.933 --> 00:01:58.200
&gt;&gt; Steve Kinney: And we'll go ahead right
now and we'll grab the const id = doc.id,

31
00:01:58.200 --> 00:02:02.968
and now let's get all
the properties of the object.

32
00:02:02.968 --> 00:02:08.543
Const data = doc.data, which is a method,

33
00:02:08.543 --> 00:02:14.717
and then we'll console.log the id and
the data.

