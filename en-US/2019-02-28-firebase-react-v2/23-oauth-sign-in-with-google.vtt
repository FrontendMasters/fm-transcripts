WEBVTT

1
00:00:00.000 --> 00:00:03.035
&gt;&gt; Steve Kinney: So, I have these
beautiful sign up and sign in forms,

2
00:00:03.035 --> 00:00:04.726
they don't do anything yet.

3
00:00:07.378 --> 00:00:10.135
&gt;&gt; Steve Kinney: They can, but they don't.

4
00:00:10.135 --> 00:00:14.815
So, first thing we're gonna
do is we are going to wire up

5
00:00:14.815 --> 00:00:19.804
the sign in with Google,
cuz it's the simplest right now.

6
00:00:19.804 --> 00:00:24.765
They don't necessarily need to
have created an account yet.

7
00:00:24.765 --> 00:00:25.428
We know that we have Google
accounts we can use that and

8
00:00:25.428 --> 00:00:26.134
just to show like the how easy
it is to get OAuth working and

9
00:00:26.134 --> 00:00:26.721
depending on your need
that might be enough.

10
00:00:26.721 --> 00:00:31.345
You might try to just turn on, you know,
Facebook Twitter and Google sign ups and

11
00:00:31.345 --> 00:00:33.668
not necessarily like manager on users.

12
00:00:33.668 --> 00:00:38.883
That's a total optional need to do email
password sign ups you can if you want.

13
00:00:38.883 --> 00:00:43.974
So, we'll start out with the sign in
with Google sign in option first.

14
00:00:43.974 --> 00:00:47.445
And then we'll kind of flush out
the rest of it in a little bit.

15
00:00:51.830 --> 00:00:54.741
&gt;&gt; Steve Kinney: Might have to
get a new API key at some point.

16
00:00:54.741 --> 00:00:57.776
But let's get this in place for
the time being.

17
00:01:00.250 --> 00:01:06.601
&gt;&gt; Steve Kinney: And
we'll go into Firebase and

18
00:01:06.601 --> 00:01:14.906
now we're bringing in another module,

19
00:01:14.906 --> 00:01:20.280
so we'll say import, and

20
00:01:20.280 --> 00:01:26.394
we'll say Firebase/auth.

21
00:01:26.394 --> 00:01:32.447
This will basically patch the Firebase
instance with the authentication

22
00:01:32.447 --> 00:01:37.829
logic now we'll do something very
similar to what we did before.

23
00:01:37.829 --> 00:01:41.999
We'll say export const
auth = firebase.auth, and

24
00:01:41.999 --> 00:01:45.900
we're going to give
ourselves two other things.

25
00:01:45.900 --> 00:01:52.162
We're going to do the provider which
is for one of our sign in techniques,

26
00:01:52.162 --> 00:01:57.923
what is the OAuth provider in this
case and it's going to be Google.

27
00:01:57.923 --> 00:02:01.118
So, we'll say provider = new firebase.

28
00:02:01.118 --> 00:02:02.800
Google off provider.

29
00:02:02.800 --> 00:02:06.499
And I don't want to deal
with it ever again.

30
00:02:06.499 --> 00:02:10.626
So, I'm going to give
myself one more constant,

31
00:02:10.626 --> 00:02:16.841
which is sign in with Google and
that is gonna be auth.sign in with Google.

32
00:02:16.841 --> 00:02:19.279
I will pass it that provider.

33
00:02:19.279 --> 00:02:24.515
All right, so now I have a function
called sign in with Google

34
00:02:24.515 --> 00:02:29.546
that I can use, and
I want to take a wild guess what's going

35
00:02:29.546 --> 00:02:34.497
to happen when that function
gets called not all at once.

36
00:02:34.497 --> 00:02:37.327
&gt;&gt; Student: Get the pop-up
window that says,

37
00:02:37.327 --> 00:02:41.139
do you wanna let them
use your Google account?

38
00:02:41.139 --> 00:02:42.260
&gt;&gt; Steve Kinney: Yep.
Yep, so

39
00:02:42.260 --> 00:02:47.536
let's go ahead on the sign in one,
&gt;&gt; Steve Kinney: And

40
00:02:47.536 --> 00:02:55.164
we'll say onClick
&gt;&gt; Steve Kinney: Let's sign in with Popup.

41
00:02:59.450 --> 00:03:01.526
&gt;&gt; Steve Kinney: There's a bunch of them,
you can do sign in with redirect,

42
00:03:01.526 --> 00:03:03.447
you can do sign in with Popup,
you can do a few of these.

43
00:03:08.556 --> 00:03:11.065
&gt;&gt; Steve Kinney: So
now you see I go ahead, pick myself.

44
00:03:23.854 --> 00:03:25.653
&gt;&gt; Steve Kinney: Let's make this function.

45
00:03:25.653 --> 00:03:31.423
I did the thing to myself this time.

46
00:03:31.423 --> 00:03:36.549
Cool, so sign up with Google,
we'll get the pop-up,

47
00:03:36.549 --> 00:03:40.270
we'll select it, we'll head back in.

48
00:03:40.270 --> 00:03:42.581
Nothing happens at this point cuz
we're not doing anything with

49
00:03:42.581 --> 00:03:43.617
that information, right?

50
00:03:43.617 --> 00:03:49.227
We are technically authenticated but
our application doesn't know, right.

51
00:03:49.227 --> 00:03:50.109
Now that will return a promise
that I can do stuff with, but

52
00:03:50.109 --> 00:03:51.389
just like subscribing to updates, I can do
something very similar where I can detect

53
00:03:51.389 --> 00:03:52.690
whenever the auth state changes and then
update my application state based on that.

54
00:03:52.690 --> 00:03:57.001
So, let me

55
00:03:57.001 --> 00:04:01.791
go ahead and

56
00:04:01.791 --> 00:04:05.625
do that.

57
00:04:10.022 --> 00:04:11.629
&gt;&gt; Steve Kinney: And so,
we'll do that in application.

58
00:04:13.946 --> 00:04:19.043
&gt;&gt; Steve Kinney: And so,
before we had this unsubscribe, and

59
00:04:19.043 --> 00:04:25.092
I'm gonna rename that
unsubscribeFromFirestore.

60
00:04:25.092 --> 00:04:28.384
Cuz now I've got multiple things
I need to unsubscribe from.

61
00:04:28.384 --> 00:04:32.924
Cool, so we'll go ahead as well and
we'll say,

62
00:04:38.241 --> 00:04:40.106
&gt;&gt; Steve Kinney: unsubscribeFromAuth.

63
00:04:43.677 --> 00:04:48.511
&gt;&gt; Steve Kinney: We'll say this.
UnsubscribeFromAuth = this

64
00:04:48.511 --> 00:04:53.244
auth,
&gt;&gt; Steve Kinney: Make sure I got

65
00:04:53.244 --> 00:04:55.426
the right one, yep.

66
00:04:55.426 --> 00:04:59.007
onAuthStateChanged.

67
00:04:59.007 --> 00:05:04.540
This will fire whenever they go
from logged out to logged in,

68
00:05:04.540 --> 00:05:07.478
or from logged in to logged out.

69
00:05:07.478 --> 00:05:12.671
So, when that happens, we'll get either

70
00:05:12.671 --> 00:05:17.729
a user object or we'll get null, right?

71
00:05:17.729 --> 00:05:22.499
Null if they're logged out, a user object
if they are, if they have logged in.

72
00:05:25.379 --> 00:05:30.989
&gt;&gt; Steve Kinney: So, all I'll do with that
is I'll say this.setState with the user.

73
00:05:35.186 --> 00:05:36.070
&gt;&gt; Steve Kinney: We'll flip over.
Right,

74
00:05:36.070 --> 00:05:39.766
you can see there is a user logged in.

75
00:05:43.212 --> 00:05:49.059
&gt;&gt; Steve Kinney: But look,
we've got the user, passing the user in.

76
00:05:49.059 --> 00:05:52.654
And let me look at this authentication
component, we need to pass that.

77
00:05:56.330 --> 00:05:59.895
&gt;&gt; Steve Kinney: Pass those
properties to that component as well.

78
00:05:59.895 --> 00:06:01.973
And you can see,
you get a whole lot for free here.

79
00:06:01.973 --> 00:06:02.499
Right?

80
00:06:02.499 --> 00:06:06.832
This is provided by
the Google OAuth mechanism.

81
00:06:06.832 --> 00:06:12.182
I can get my like two-thirds
of my son's face.

82
00:06:12.182 --> 00:06:16.756
And then mine I got the email address
that's currently just the current time.

83
00:06:16.756 --> 00:06:20.237
You got the display name that's
formatted with a lot of providers that

84
00:06:20.237 --> 00:06:22.726
are automatically be in there,
let's go ahead.

85
00:06:22.726 --> 00:06:26.055
There's a lot of properties
on the user object, but

86
00:06:26.055 --> 00:06:28.258
most of them aren't very useful.

87
00:06:28.258 --> 00:06:31.010
There are a few though.

88
00:06:31.010 --> 00:06:31.961
So, let's do console.

89
00:06:31.961 --> 00:06:35.523
log user.

90
00:06:42.113 --> 00:06:45.442
&gt;&gt; Steve Kinney: So, here's that user,
a lot of not useful stuff you can see

91
00:06:45.442 --> 00:06:49.704
there's the display name, and email,
if you're [INAUDIBLE] with Google,

92
00:06:49.704 --> 00:06:53.715
you'll get this email verified as
true because it already knows that.

93
00:06:53.715 --> 00:06:56.514
There is some metadata like
the last sign in time.

94
00:06:56.514 --> 00:06:59.345
And stuff like that,
that you can use as well.

95
00:06:59.345 --> 00:07:03.065
But the rest of these don't
really mean a whole lot.

96
00:07:03.065 --> 00:07:06.954
But there are a few, kind of used ones
hanging out there that you can use.

97
00:07:06.954 --> 00:07:10.711
We are using the photo URL
that you can see here.

98
00:07:10.711 --> 00:07:14.166
The display name,
the email address and the UID,

99
00:07:14.166 --> 00:07:18.290
the four that we're using this
application but there are.

100
00:07:18.290 --> 00:07:23.081
There's a few more hiding in there, but
most of these are just kinda metadata.

101
00:07:23.081 --> 00:07:27.311
Anonymous is kind of a cool one that we're
not gonna get into today, but I wanna like

102
00:07:27.311 --> 00:07:31.431
bring your attention to, which is you
can basically log people in anonymously.

103
00:07:31.431 --> 00:07:33.432
You're like,
why would I ever want to do that?

104
00:07:33.432 --> 00:07:36.427
Which is basically, you can store
a certain amount of cookie state.

105
00:07:36.427 --> 00:07:39.040
Which is like, let's say they
go to your store application and

106
00:07:39.040 --> 00:07:42.147
they start putting things in the cart and
they don't have an account yet and

107
00:07:42.147 --> 00:07:43.452
then they create the account.

108
00:07:43.452 --> 00:07:45.097
You can then merge anonymous
user with their real one and

109
00:07:45.097 --> 00:07:47.269
track a few things in there to kinda
have a better user experience as well.

110
00:07:47.269 --> 00:07:50.617
And that's just a method on auth called,

111
00:07:50.617 --> 00:07:56.179
I think it's sign in anonymously,
or something along those lines.

