WEBVTT

1
00:00:00.024 --> 00:00:03.400
&gt;&gt; Steve Kinney: All of that work was
to get us to the point where we can now

2
00:00:03.400 --> 00:00:08.040
see the changes to the user, which is
that like nice feedback loop, right.

3
00:00:08.040 --> 00:00:10.480
What we wanna do is we
wanna work on storage.

4
00:00:10.480 --> 00:00:14.490
We wanna make it so that the user can
find a new, I mean I like that picture,

5
00:00:14.490 --> 00:00:16.830
I took it last week, it's fine.

6
00:00:16.830 --> 00:00:20.791
What we wanna do is we wanna do is we
wanna, so we can take a new picture and

7
00:00:20.791 --> 00:00:24.043
upload it, we can store it in
a storage bucket somewhere.

8
00:00:24.043 --> 00:00:27.492
Get the URL from where
we stored that file, and

9
00:00:27.492 --> 00:00:30.330
use that as the new photo URL, right.

10
00:00:30.330 --> 00:00:35.937
This also means our email users can
have nice pictures too, all right.

11
00:00:35.937 --> 00:00:44.160
So to do that, back into the Firebase JS,
&gt;&gt; Steve Kinney: And

12
00:00:44.160 --> 00:00:53.056
we're gonna pull in one more,
&gt;&gt; Steve Kinney: firebase/storage.

13
00:00:53.056 --> 00:00:55.480
We do something similar to what
we've done in the past now.

14
00:00:57.645 --> 00:01:02.649
&gt;&gt; Steve Kinney: Up here or
also export const

15
00:01:02.649 --> 00:01:08.760
storage = firebase.storage.

16
00:01:08.760 --> 00:01:14.710
Letâ€™s get this wired up
into the user profile page.

17
00:01:14.710 --> 00:01:19.673
So we can bring in Firestore,
we can bring in storage.

18
00:01:23.374 --> 00:01:24.800
&gt;&gt; Steve Kinney: Have both in place.

19
00:01:24.800 --> 00:01:27.060
Let me give myself one
more helper which is,

20
00:01:27.060 --> 00:01:32.800
cuz I'm gonna be really honest with you,
I can barely ever remember the file API.

21
00:01:32.800 --> 00:01:37.340
MDN is my, Mozilla Developer Network
is my friend every single time.

22
00:01:37.340 --> 00:01:43.356
So if image input is not null,

23
00:01:43.356 --> 00:01:52.700
then get me this.imageInput.files,
and just get me the first one.

24
00:01:52.700 --> 00:01:54.960
Theoretically I guess they can
select multiple files, but

25
00:01:54.960 --> 00:01:59.680
I don't know what I would do with multiple
files, I'm just replacing one picture.

26
00:01:59.680 --> 00:02:02.270
So we'll just grab
the first one out of there.

27
00:02:03.980 --> 00:02:07.913
And when they submit the form,
we know that we're gonna,

28
00:02:07.913 --> 00:02:12.426
if there is a display name we're
going to change the display name.

29
00:02:14.750 --> 00:02:18.334
&gt;&gt; Steve Kinney: If there is
a file that they've selected,

30
00:02:18.334 --> 00:02:21.130
then we're gonna go to storage.

31
00:02:23.260 --> 00:02:25.620
And storage also uses
references to where they are.

32
00:02:25.620 --> 00:02:30.660
So storage.ref is the top of the bucket,
right, and

33
00:02:30.660 --> 00:02:32.140
then we can kind of navigate in.

34
00:02:32.140 --> 00:02:38.425
So I can say child and
let's call this, we'll put in,

35
00:02:38.425 --> 00:02:43.494
user-profiles Bucket, that seems good.

36
00:02:43.494 --> 00:02:51.070
But then I'm thinking we'll have a folder
for each user, right, based on their UID.

37
00:02:51.070 --> 00:02:54.779
This will be really useful cuz
guess what also has security rules?

38
00:02:55.960 --> 00:02:59.490
Firebase storage, right,
Firebase storage also has security rules.

39
00:02:59.490 --> 00:03:04.840
So what we'll do is, then we can use
the security rules to say, hey user,

40
00:03:04.840 --> 00:03:10.120
you only have access to the folder
that has your UID on it.

41
00:03:10.120 --> 00:03:14.748
So I'll say, .child(this.uid),
I made that computer property before.

42
00:03:17.170 --> 00:03:19.334
&gt;&gt; Steve Kinney: And
we'll do one more, which is like,

43
00:03:19.334 --> 00:03:21.720
we also need to name the file.

44
00:03:21.720 --> 00:03:27.303
Luckily, I'm gonna cheat with that one,
this.file.name.

45
00:03:30.171 --> 00:03:32.779
&gt;&gt; Steve Kinney: So this will
give me a reference to the top of

46
00:03:32.779 --> 00:03:34.808
the bucket slash user profiles,

47
00:03:34.808 --> 00:03:39.380
slash their user ID slash the name of
the file they tried to upload, right.

48
00:03:39.380 --> 00:03:41.462
That way they can upload multiple files.

49
00:03:43.840 --> 00:03:44.706
&gt;&gt; Steve Kinney: This could be useful,

50
00:03:44.706 --> 00:03:46.810
in this case they're gonna
have one profile picture.

51
00:03:46.810 --> 00:03:49.430
But you can imagine a world where maybe
they could have multiple images or

52
00:03:49.430 --> 00:03:52.090
something else that they upload.

53
00:03:52.090 --> 00:03:57.240
And then, everyone ready for the hard
work of putting file in the bucket?

54
00:03:57.240 --> 00:04:01.342
Wanna take a lucky guess at the method
to put a file in a bucket is?

55
00:04:01.342 --> 00:04:03.044
&gt;&gt; Speaker 2: Save.
&gt;&gt; Steve Kinney: Upload.

56
00:04:03.044 --> 00:04:04.948
&gt;&gt; Speaker 2: Upload.

57
00:04:04.948 --> 00:04:05.919
&gt;&gt; Steve Kinney: Save file.

58
00:04:05.919 --> 00:04:06.531
&gt;&gt; Speaker 2: Save.

59
00:04:06.531 --> 00:04:10.712
&gt;&gt; Steve Kinney: Put a file in a bucket,
it's put.

60
00:04:10.712 --> 00:04:11.283
&gt;&gt; Speaker 2: Store.

61
00:04:11.283 --> 00:04:12.094
&gt;&gt; Steve Kinney: [LAUGH] We tried.

62
00:04:12.094 --> 00:04:13.376
[LAUGH]
&gt;&gt; Speaker 2: Store.

63
00:04:13.376 --> 00:04:15.647
&gt;&gt; Steve Kinney: Put.
&gt;&gt; Speaker 2: Put.

64
00:04:15.647 --> 00:04:18.745
&gt;&gt; Steve Kinney: We'll put
this.file in the bucket.

65
00:04:20.612 --> 00:04:22.343
&gt;&gt; Steve Kinney: So
that is gonna return a promise.

66
00:04:22.343 --> 00:04:24.761
I'm actually gonna just use promise
chaining cuz this is already,

67
00:04:26.990 --> 00:04:27.969
&gt;&gt; Steve Kinney: The response is

68
00:04:27.969 --> 00:04:30.613
gonna give me a whole
bunch of stuff on it.

69
00:04:30.613 --> 00:04:34.228
What I really,
it's gonna give me a reference,

70
00:04:34.228 --> 00:04:37.325
what I really want is the response.ref.

71
00:04:39.350 --> 00:04:41.760
&gt;&gt; Steve Kinney: The getDownloadURL.

72
00:04:41.760 --> 00:04:48.243
The download URL is the full URL to
where it is on the Internet, right.

73
00:04:48.243 --> 00:04:53.632
There are more relative one to this bucket
and all these other things in case you,

74
00:04:53.632 --> 00:04:56.892
this is the full,
this is the URL for this image.

75
00:04:56.892 --> 00:04:57.800
So I'll grab that.

76
00:04:59.060 --> 00:05:04.516
And then I'll say photoURL
this is a way that keeping

77
00:05:04.516 --> 00:05:09.610
the user ref stored for
usability it's useful.

78
00:05:09.610 --> 00:05:16.111
I'll say update,
&gt;&gt; Steve Kinney: photoURL.

