WEBVTT

1
00:00:00.050 --> 00:00:04.112
&gt;&gt; Steve Kinney: So what I wanna do now
is I wanna store the user information.

2
00:00:04.112 --> 00:00:06.763
I wanna create one of these user profiles.

3
00:00:06.763 --> 00:00:09.283
I have two code paths now.

4
00:00:09.283 --> 00:00:14.911
So you notice that when a brand new
user signed in with Google OAuth,

5
00:00:14.911 --> 00:00:19.569
they didn't have to sign up
with Google OAuth, right?

6
00:00:19.569 --> 00:00:22.171
They weren't a new user
they signed in with it,

7
00:00:22.171 --> 00:00:24.331
then Firebase created a user for them.

8
00:00:24.331 --> 00:00:26.444
So one way that you can sign up for

9
00:00:26.444 --> 00:00:29.893
an account is to simply
sign in with Google, right?

10
00:00:29.893 --> 00:00:33.475
The other one is to actually go
to that sign up form and do it.

11
00:00:33.475 --> 00:00:37.175
So we have two code paths that
we need to deal with here.

12
00:00:37.175 --> 00:00:41.947
We need to either figure out if it's
happening from the sign up form or

13
00:00:41.947 --> 00:00:44.598
if they're coming in this other way.

14
00:00:44.598 --> 00:00:50.388
Also we don't want to
recreate the account.

15
00:00:50.388 --> 00:00:53.140
So for instance,
if they sign in with Google,

16
00:00:53.140 --> 00:00:56.961
we can be like yeah take that photo url,
take that display name.

17
00:00:56.961 --> 00:01:00.020
Those seem like sensible
defaults let's go with that.

18
00:01:00.020 --> 00:01:04.374
Right, but if we do it on every log in,
that means they can log in,

19
00:01:04.374 --> 00:01:08.021
they upload a new picture and
change the display name,

20
00:01:08.021 --> 00:01:11.291
and we blow it away the next
time that they log in.

21
00:01:11.291 --> 00:01:12.631
That's not great.

22
00:01:12.631 --> 00:01:17.048
So, we wanna make sure that, we wanna
check to see if that document exists.

23
00:01:17.048 --> 00:01:20.889
If it doesn't exist, then we'll
go ahead and create a profile for

24
00:01:20.889 --> 00:01:25.209
them and if it does, we'll simply
respect the profile that they have, and

25
00:01:25.209 --> 00:01:27.627
we'll use that instead of the AuthData.

26
00:01:27.627 --> 00:01:30.169
Does that make sense?

27
00:01:30.169 --> 00:01:32.583
Cool.

28
00:01:32.583 --> 00:01:36.306
So we're gonna need two
methods here one for

29
00:01:36.306 --> 00:01:40.934
creating the user document,
or the user profile, and

30
00:01:40.934 --> 00:01:45.576
one for getting the user document or
the user profile.

31
00:01:45.576 --> 00:01:50.317
Let's go ahead and, it's really in a real
app I might still have to break this stuff

32
00:01:50.317 --> 00:01:52.011
out into multiple files, but

33
00:01:52.011 --> 00:01:56.777
I'm also aware that if I go too many files
it gets really confusing to follow along.

34
00:01:56.777 --> 00:02:01.149
So I'm gonna kind of add more
stuff into this Firebase js file

35
00:02:01.149 --> 00:02:05.703
mostly cuz I have Firestore and
Auth available in here as well.

36
00:02:05.703 --> 00:02:09.309
This is going to be a little bit of
the squirrelier code that we've written

37
00:02:09.309 --> 00:02:11.983
because we are gonna check to
see if documents exist and

38
00:02:11.983 --> 00:02:13.280
stuff along those lines.

39
00:02:13.280 --> 00:02:19.003
So I'm gonna write a lot of comments
as I write the code and I talk.

40
00:02:19.003 --> 00:02:20.474
Cool.

41
00:02:20.474 --> 00:02:22.468
So we'll start out with this,

42
00:02:25.515 --> 00:02:30.484
&gt;&gt; Steve Kinney:
createUserProfileDocument, right?

43
00:02:30.484 --> 00:02:33.455
And that is gonna be an Async document.

44
00:02:33.455 --> 00:02:39.038
And it'll take some user object that
we got back from the Auth module.

45
00:02:39.038 --> 00:02:43.459
And then we're also gonna pass in
what I'm gonna call additional Data.

46
00:02:43.459 --> 00:02:46.346
Does anyone have an idea what some
of the additional data might be?

47
00:02:50.787 --> 00:02:53.083
&gt;&gt; Steve Kinney: I asked the display
name in that form, right?

48
00:02:53.083 --> 00:02:56.194
I'm not getting it back from
the email address in sign up, so

49
00:02:56.194 --> 00:03:00.037
I can also pass that in as long as well
as like, okay make this user profile,

50
00:03:00.037 --> 00:03:01.625
also they gave a display name.

51
00:03:01.625 --> 00:03:02.796
Use that, right?

52
00:03:02.796 --> 00:03:06.654
So for Google Auth we're gonna get
the display name out of the box for

53
00:03:06.654 --> 00:03:08.347
email address and password,

54
00:03:08.347 --> 00:03:12.288
we're gonna pass along the display
name that they put into the form.

55
00:03:12.288 --> 00:03:14.594
So we'll have both options there.

56
00:03:14.594 --> 00:03:18.752
If for
some reason this function gets called, and

57
00:03:18.752 --> 00:03:21.728
it could get called without a user.

58
00:03:21.728 --> 00:03:24.594
When could it get called without a user?

59
00:03:24.594 --> 00:03:28.629
If we're doing a offstage change for
the Google sign-in and

60
00:03:28.629 --> 00:03:30.931
they sign out, that will be null.

61
00:03:30.931 --> 00:03:34.040
So we'll be like listen,
only do this if you have a user.

62
00:03:34.040 --> 00:03:37.100
Otherwise, this will blow up and
React gets very angry if you

63
00:03:37.100 --> 00:03:41.002
blow up in a component and don't do
a componentDidCatch and stuff like that.

64
00:03:41.002 --> 00:03:44.161
So we're just gonna try to not blow here.

65
00:03:44.161 --> 00:03:48.186
So if there is no user leave this
function we are not doing anything.

66
00:03:48.186 --> 00:03:53.348
Okay, next we're gonna wanna see if
the document is in the database.

67
00:03:53.348 --> 00:03:57.711
So first we're gonna find a reference
to that place in the database.

68
00:03:57.711 --> 00:04:01.541
Okay we're expecting that
if this user had a profile

69
00:04:01.541 --> 00:04:05.641
in our database then it exists
at users slash their UID.

70
00:04:05.641 --> 00:04:06.559
So we wanna reference.

71
00:04:06.559 --> 00:04:10.118
Remember we had snapshots of the database,
which is the actual data and

72
00:04:10.118 --> 00:04:11.672
then we also have references.

73
00:04:11.672 --> 00:04:15.035
The references is just a place in
the database that we can talk about and

74
00:04:15.035 --> 00:04:15.610
deal with.

75
00:04:15.610 --> 00:04:22.962
So we'll say const
userRef = firestore.doc.

76
00:04:22.962 --> 00:04:32.143
That's gonna be users/$ { user.uid}.

77
00:04:32.143 --> 00:04:39.618
Except it's gonna be back-ticks because
I'm using string interpolation, okay.

78
00:04:39.618 --> 00:04:46.639
And we're also gonna see if we
can get a snapshot from there.

79
00:04:46.639 --> 00:04:53.795
So we'll say,
&gt;&gt; Steve Kinney: We'll

80
00:04:53.795 --> 00:04:55.573
start with get a reference,

81
00:05:01.850 --> 00:05:09.088
&gt;&gt; Steve Kinney: Cool.

82
00:05:09.088 --> 00:05:16.031
And then,
&gt;&gt; Steve Kinney: Go and

83
00:05:16.031 --> 00:05:17.749
fetch document from that location.

84
00:05:17.749 --> 00:05:20.565
We'll say const snapshot.

85
00:05:27.063 --> 00:05:29.527
&gt;&gt; Steve Kinney: From that location,
go get a document.

86
00:05:29.527 --> 00:05:33.908
Now, if we remember from all
the way back a few hours ago,

87
00:05:33.908 --> 00:05:37.835
document snapshots have
a property called exist,

88
00:05:37.835 --> 00:05:42.872
which is either true or false pending,
whether or not it exists.

89
00:05:42.872 --> 00:05:47.759
So now, we should know if
the snapshot does not exist,

90
00:05:47.759 --> 00:05:52.660
then we know we need to go ahead and
create one, right?

91
00:05:52.660 --> 00:05:55.292
So this is a little bit about users and
authentication, but

92
00:05:55.292 --> 00:05:58.833
this is also a little bit more granular,
how to work with Firestore documents.

93
00:05:58.833 --> 00:06:03.272
So kinda like we're taking the previous
two things that we talked about and

94
00:06:03.272 --> 00:06:05.888
trying to combine them
into one thing here.

95
00:06:05.888 --> 00:06:10.754
So if the snapshot, plural,
it's the one thing usually I

96
00:06:10.754 --> 00:06:15.523
can't remember is, for
query snapshots it's exist and

97
00:06:15.523 --> 00:06:19.914
for document snapshots it
exists because English.

98
00:06:19.914 --> 00:06:27.386
[LAUGH] Right, because English is hard.

99
00:06:27.386 --> 00:06:32.239
So, we'll go ahead and
we'll have this idea of a createdAt.

100
00:06:32.239 --> 00:06:35.018
Now, this is the very first
thing on a user profile.

101
00:06:35.018 --> 00:06:40.210
There was a little bit of that kind of in
the meta data but it wasn't necessarily

102
00:06:40.210 --> 00:06:45.020
on those top level things in the user
that we were pulling in from before.

103
00:06:45.020 --> 00:06:46.128
So we'll say, new Date.

104
00:06:48.515 --> 00:06:55.473
&gt;&gt; Steve Kinney: And we will,
&gt;&gt; Steve Kinney: We're

105
00:06:55.473 --> 00:07:01.850
gonna try to set a document as that
user reference if it doesn't exist.

106
00:07:01.850 --> 00:07:06.026
Now, previously when we used post,
we used Add.

107
00:07:06.026 --> 00:07:11.517
Add, we gave it a collection, we said Add,
and it generated a UID for us.

108
00:07:11.517 --> 00:07:14.720
This time we know the UID that we want, or

109
00:07:14.720 --> 00:07:19.639
the ID that we want we know that
it should be the UID of the user.

110
00:07:19.639 --> 00:07:23.770
So, we're saying hey I found the location
where this document should be I want

111
00:07:23.770 --> 00:07:24.339
to set it.

112
00:07:26.280 --> 00:07:34.825
&gt;&gt; Steve Kinney: So, we'll say try,
&gt;&gt; Steve Kinney: userRef.set and

113
00:07:34.825 --> 00:07:40.303
we're gonna give it,
&gt;&gt; Steve Kinney: We'll

114
00:07:40.303 --> 00:07:42.448
pull some stuff off,
that user object that we passed in.

115
00:07:42.448 --> 00:07:43.916
So we'll say const.

116
00:07:47.962 --> 00:07:50.851
&gt;&gt; Steve Kinney: { displayName, email,

117
00:07:50.851 --> 00:07:56.214
photoURL }
&gt;&gt; Steve Kinney: Now,

118
00:07:56.214 --> 00:08:01.316
those could still be my photoURL is likely
to be undefined on an email address and

119
00:08:01.316 --> 00:08:04.070
password we know that displayName is too.

120
00:08:04.070 --> 00:08:08.079
So we'll say displayName, email, photoURL,

121
00:08:08.079 --> 00:08:12.772
that createdAt which is our
own bespoke thing there, and

122
00:08:12.772 --> 00:08:18.563
any of the additional data that got
passed in, put it on there as well.

123
00:08:24.336 --> 00:08:28.197
&gt;&gt; Steve Kinney: So we're gonna try
to set that, if that doesn't work,

124
00:08:28.197 --> 00:08:30.260
we'll do another consular.

125
00:08:34.076 --> 00:08:35.324
&gt;&gt; Steve Kinney: It's
not gonna work at first,

126
00:08:35.324 --> 00:08:37.052
does anyone want to
take a lucky guess why?

127
00:08:40.829 --> 00:08:41.836
&gt;&gt; Steve Kinney: This is a trick question.

128
00:08:41.836 --> 00:08:43.447
It's not gonna work, but.

129
00:08:45.031 --> 00:08:52.977
&gt;&gt; Steve Kinney: What did we do to
our database like 20, 30 minutes ago?

130
00:08:52.977 --> 00:08:55.246
&gt;&gt; Student: The rule won't allow you to-
&gt;&gt; Steve Kinney: Yeah,

131
00:08:55.246 --> 00:08:58.738
we locked down our database and
did not set up a security rule.

132
00:08:58.738 --> 00:08:59.709
So it will blow up.

133
00:08:59.709 --> 00:09:04.320
So, let's give our self an error so
that we can see it blow up,

134
00:09:04.320 --> 00:09:06.823
so we're not totally confused.

135
00:09:06.823 --> 00:09:11.566
&gt;&gt; Student2: And the createdAt, is also
created right here, and not in a database,

136
00:09:11.566 --> 00:09:12.126
right?

137
00:09:12.126 --> 00:09:13.478
It's created like on the front?

138
00:09:13.478 --> 00:09:15.722
&gt;&gt; Steve Kinney: Because we don't
know about cloud functions yet.

139
00:09:15.722 --> 00:09:18.334
&gt;&gt; Student2: Okay.
&gt;&gt; Steve Kinney: [LAUGH] So yes-ish,

140
00:09:18.334 --> 00:09:23.095
because we're not at the end
of the workshop yet.

141
00:09:23.095 --> 00:09:27.709
[LAUGH] We could and
likely should do it on the backend.

142
00:09:27.709 --> 00:09:30.060
That is a really good instinct there.

