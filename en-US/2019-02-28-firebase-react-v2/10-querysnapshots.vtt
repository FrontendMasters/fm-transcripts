WEBVTT

1
00:00:00.120 --> 00:00:02.414
&gt;&gt; Steve Kinney: So
QuerySnapshots are an object.

2
00:00:02.414 --> 00:00:07.128
There's basically two major
objects that we're gonna get back

3
00:00:07.128 --> 00:00:09.493
from Cloud Firestore, right?

4
00:00:09.493 --> 00:00:14.214
Well we just said .collectionpost, we got
a reference to that place in the database

5
00:00:14.214 --> 00:00:16.883
but we didn't get anything
from the database.

6
00:00:16.883 --> 00:00:19.473
Those previous ones we
saw before was post and

7
00:00:19.473 --> 00:00:23.700
then I like an idea of a given document
and that was a reference to that place

8
00:00:23.700 --> 00:00:27.280
in the database, but
it wasn't necessarily the data.

9
00:00:27.280 --> 00:00:31.533
When we request the data with a git, or
try to put data with an update or a set,

10
00:00:31.533 --> 00:00:36.186
or even delete it with a delete, right,
we'll delete, you're not gonna get back

11
00:00:36.186 --> 00:00:39.862
data, but if we request it,
we’re going to get back a snapshot.

12
00:00:39.862 --> 00:00:44.753
Either if it’s for a collection of things,
we’ll get back a QuerySnapshot and

13
00:00:44.753 --> 00:00:48.841
if we request one document,
we will get back a document snapshot,

14
00:00:48.841 --> 00:00:51.919
which is just an object
that represents our data.

15
00:00:51.919 --> 00:00:58.591
And QuerySnapshots, they have a few
properties and a few methods.

16
00:00:58.591 --> 00:01:01.940
And I just wanna talk about them a little
bit before we start playing with them so

17
00:01:01.940 --> 00:01:04.375
we kinda have a sense,
basically we can see the forest for

18
00:01:04.375 --> 00:01:06.384
the trees before we get
too deep into the code.

19
00:01:06.384 --> 00:01:09.712
QuerySnapshots have
a property called docs,

20
00:01:09.712 --> 00:01:14.846
that is an array of document snapshots,
all right, that makes sense.

21
00:01:14.846 --> 00:01:19.682
And we have a property called empty,
that is true if the query was empty,

22
00:01:19.682 --> 00:01:21.601
and it is false if it's not.

23
00:01:21.601 --> 00:01:23.803
Seems so far so good.

24
00:01:23.803 --> 00:01:29.862
Metadata is just where it came from,
so on and so forth.

25
00:01:29.862 --> 00:01:34.155
Query is basically if you needed to get
back to the actual query that you fired to

26
00:01:34.155 --> 00:01:35.521
go ahead and refine it and

27
00:01:35.521 --> 00:01:39.574
do something else on those lines as
a reference back to that query object.

28
00:01:39.574 --> 00:01:42.822
And the size is the number of
documents in the QuerySnapshot.

29
00:01:42.822 --> 00:01:44.864
So those are properties,
there's also some methods.

30
00:01:44.864 --> 00:01:48.968
The methods are docChanges,
this will actually give you back,

31
00:01:48.968 --> 00:01:53.756
it'll fire an event, basically, again,
add it and give you a document,

32
00:01:53.756 --> 00:01:55.669
removed, updated, right?

33
00:01:55.669 --> 00:01:58.583
For each, we'll go ahead and
let you iterate through,

34
00:01:58.583 --> 00:02:02.814
then isEqual will let you take another
query snapshot and see if they're equal.

35
00:02:02.814 --> 00:02:05.653
Cuz we know that JavaScript, you can
take two objects that look pretty much

36
00:02:05.653 --> 00:02:07.515
the same, two arrays,
but they're not equal.

37
00:02:07.515 --> 00:02:08.779
This will go ahead and

38
00:02:08.779 --> 00:02:13.286
actually compare them to see if they
are theoretically the same documents.

39
00:02:13.286 --> 00:02:17.096
docChanges, you can also,
we'll see later, we saw that docs,

40
00:02:17.096 --> 00:02:20.077
we can have all the documents or
the kinda changes,

41
00:02:20.077 --> 00:02:24.544
like the depths of each one of them added,
remove, so you can do either one.

42
00:02:24.544 --> 00:02:27.599
We're gonna be using docs and
just kinda replacing them, but

43
00:02:27.599 --> 00:02:30.946
you can see a world where if using
something like redox, right, and

44
00:02:30.946 --> 00:02:34.591
you're firing events of like document
added, stuff along those lines,

45
00:02:34.591 --> 00:02:37.850
you could theoretically use those and
fire the actions, right?

46
00:02:37.850 --> 00:02:41.041
And if you're implementing
something like undo or

47
00:02:41.041 --> 00:02:46.012
something along those lines, having
the individual things that changed might

48
00:02:46.012 --> 00:02:49.810
be more useful to you than just
the latest state of the world.

49
00:02:49.810 --> 00:02:52.894
For our purposes we're going to take
the latest state of the world today,

50
00:02:52.894 --> 00:02:56.042
like here are all the new documents,
update the state of our application.

51
00:02:56.042 --> 00:03:00.530
And that is generally speaking for a lot
of applications what you don't want, but

52
00:03:00.530 --> 00:03:04.497
you can imagine something, again,
where if you wanted to have previous

53
00:03:04.497 --> 00:03:08.875
revision history client side you can keep
all those so on and so fourth, right?

54
00:03:08.875 --> 00:03:10.300
Those are all options as well.

