WEBVTT

1
00:00:00.230 --> 00:00:03.326
&gt;&gt; Steve Kinney: All right, we talked a
little bit about the final thing which is

2
00:00:03.326 --> 00:00:06.904
cloud functions, which is a way to write,
let's call it back end code.

3
00:00:06.904 --> 00:00:14.170
It's like serverless which is basically
other people's servers for running code.

4
00:00:14.170 --> 00:00:17.280
Everything we have done has been in
the client except maybe security rules.

5
00:00:17.280 --> 00:00:19.588
I guess security rules
technically happened, but

6
00:00:19.588 --> 00:00:21.422
everything else has been in the client.

7
00:00:21.422 --> 00:00:25.912
One thing if you don't already have
them installed is just there's

8
00:00:25.912 --> 00:00:30.638
a library virus functions which should
have been in that MPM install and

9
00:00:30.638 --> 00:00:35.127
Firebase admin which is a way to
do administrative things, right,

10
00:00:35.127 --> 00:00:39.249
without the security policies
in place on your back end code.

11
00:00:39.249 --> 00:00:42.598
So, when we did the firebase and
knit earlier,

12
00:00:42.598 --> 00:00:45.960
some of the groundwork
was already laid for us.

13
00:00:45.960 --> 00:00:49.270
We have this Functions folder,
which has its own package JSON.

14
00:00:49.270 --> 00:00:51.310
You can put anything from
MPM in there that you need.

15
00:00:51.310 --> 00:00:58.060
If you need to do other stuff you
can go ahead and do that, right?

16
00:00:58.060 --> 00:01:02.000
On the free plan, and
this could change at any moment, but

17
00:01:02.000 --> 00:01:07.120
as of this writing on the free plan,
you can't call 3rd party APIs, you

18
00:01:07.120 --> 00:01:12.770
can call any Google API which is pretty
legit, like the facial recognition APIs.

19
00:01:12.770 --> 00:01:17.540
You can take a photo and do facial
recognition, any other Google API

20
00:01:17.540 --> 00:01:20.750
can call but I think if you wanted
to use [INAUDIBLE] to send an email

21
00:01:20.750 --> 00:01:25.120
I think you have to be on the pay as you
go plan for that one, which is fine.

22
00:01:25.120 --> 00:01:27.567
I mean, if you had the plan and
you're trying to do all that stuff,

23
00:01:27.567 --> 00:01:28.412
maybe it makes sense.

24
00:01:28.412 --> 00:01:33.305
The pay as you go plan is still pretty
cheap as cost calculators is pretty cool.

25
00:01:33.305 --> 00:01:36.220
But you can install any MPM
package you want in there, right?

26
00:01:36.220 --> 00:01:41.320
And so we're going to stick to mostly
just vanilla JavaScript in this case.

27
00:01:41.320 --> 00:01:44.500
But any package you wanna use to
do anything like image magic for

28
00:01:44.500 --> 00:01:50.560
resizing images, right, you could totally
do that so that you can respond to it.

29
00:01:50.560 --> 00:01:53.610
It's called one of two things,
that second one is many things.

30
00:01:53.610 --> 00:01:57.190
HTTPS requests, so
you can effectively make an API.

31
00:01:57.190 --> 00:02:01.080
And then also you can listen for
things that happen in firebase.

32
00:02:01.080 --> 00:02:03.690
Okay, I'm listening to this collection.

33
00:02:03.690 --> 00:02:06.660
Whenever a document gets added,
I want to do this, or

34
00:02:06.660 --> 00:02:09.220
whenever a document gets changed,
I want to do this other thing.

35
00:02:09.220 --> 00:02:12.640
So if you did need to store information
in multiple places, you could say,

36
00:02:12.640 --> 00:02:16.370
okay, whenever the,
this is a hypothetical,

37
00:02:16.370 --> 00:02:21.600
whenever the user changes their name,
I wanna find

38
00:02:21.600 --> 00:02:26.502
all of the posts that have their name
in it and change that too, right?

39
00:02:26.502 --> 00:02:32.389
Because it's interestingly in the way
that we structure our database, which is,

40
00:02:32.389 --> 00:02:37.600
you could have a user profile and you
could have that you ID in the post, but

41
00:02:37.600 --> 00:02:42.729
then every time you wanted to get
the user information, you would have to

42
00:02:42.729 --> 00:02:47.977
go ahead and query for that document
as well, which will cost you a query.

43
00:02:47.977 --> 00:02:52.710
Or when they write that post, cuz how
often does a user change their username?

44
00:02:52.710 --> 00:02:55.941
All right, or even a photo and
if it doesn't immediately, fine, right,

45
00:02:55.941 --> 00:02:57.824
you can batch it to once a week, right?

46
00:02:57.824 --> 00:03:01.990
You can include all the information in
the post, that's not one request, right?

47
00:03:01.990 --> 00:03:03.763
And so
you can then write the cloud functions,

48
00:03:03.763 --> 00:03:06.410
if they do change it, then I do
wanna go back through and do it but

49
00:03:06.410 --> 00:03:10.474
that's way better than trying to
do it on every single request.

50
00:03:10.474 --> 00:03:15.605
If it's a blogging platform, more people
are probably reading that blog post

51
00:03:15.605 --> 00:03:22.220
than the user is changing their user
name by orders of magnitude, right?

52
00:03:22.220 --> 00:03:26.160
So cloud functions let you to either a,
handle a CCP request or b,

53
00:03:26.160 --> 00:03:30.490
they allow you to listen for
changes to firestore,

54
00:03:30.490 --> 00:03:34.130
new files uploaded,
a new user created the off system.

55
00:03:34.130 --> 00:03:36.570
Anything along those lines,
you could hook into and

56
00:03:36.570 --> 00:03:38.510
have that trigger you doing stuff.

57
00:03:39.550 --> 00:03:44.320
We're gonna start with a built in example,
just see this how this works.

58
00:03:44.320 --> 00:03:48.500
So you can see we've got this
functions library here, and

59
00:03:48.500 --> 00:03:52.620
we also have this little example function.

60
00:03:52.620 --> 00:03:54.220
You can see this is functions.

61
00:03:54.220 --> 00:03:56.425
I'm gonna uncomment this one for a second.

62
00:03:56.425 --> 00:04:04.137
Exports.helloWorld is
functions.https.onRequest.

63
00:04:04.137 --> 00:04:07.730
If you ever use Express or anything like
that, this should look very familiar.

64
00:04:07.730 --> 00:04:10.670
So request object and response object, and

65
00:04:10.670 --> 00:04:15.100
this response is sending
hello from Firebase.

66
00:04:15.100 --> 00:04:17.440
So we've uncommented that one.

