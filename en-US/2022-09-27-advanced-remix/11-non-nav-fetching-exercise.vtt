WEBVTT

1
00:00:00.000 --> 00:00:05.822
So coming over to exercise five.

2
00:00:05.822 --> 00:00:09.767
And stopping this server, and

3
00:00:09.767 --> 00:00:16.300
starting node dev 5,
then go into port 4005.

4
00:00:16.300 --> 00:00:23.463
We log in with kody@remix.run,
kodylovesyou.

5
00:00:23.463 --> 00:00:29.489
And there we are right back to our app.

6
00:00:29.489 --> 00:00:31.614
Okay, so for exercise five,

7
00:00:31.614 --> 00:00:37.145
we're gonna start talking about non
navigation fetching with useFetcher.

8
00:00:37.145 --> 00:00:40.188
As I said earlier,
this could be retitled and

9
00:00:40.188 --> 00:00:44.608
maybe should be retitled to,
back end connected UI components.

10
00:00:44.608 --> 00:00:49.292
So the ability to take like I said
earlier also a component used to be just

11
00:00:49.292 --> 00:00:54.444
the JavaScript and then that would hook
on to the HTML and then we realized hey,

12
00:00:54.444 --> 00:00:58.456
how about we combine these and
because that's one concern.

13
00:00:58.456 --> 00:00:59.772
And then so we was like, hey,

14
00:00:59.772 --> 00:01:02.477
actually the CSS is kind of
an important concern of that too.

15
00:01:02.477 --> 00:01:07.404
So now we've got single file components
and CSS and JS and JSX and all that.

16
00:01:07.404 --> 00:01:10.745
It's all this happy thing, but
there's another piece that's missing and

17
00:01:10.745 --> 00:01:13.719
that's the back end the thing that
our Autocomplete is talking to or

18
00:01:13.719 --> 00:01:14.464
the thing that.

19
00:01:14.464 --> 00:01:21.138
Whatever, like useful UI elements that
you can think of is communicating with.

20
00:01:21.138 --> 00:01:24.904
That's an important piece
of what makes a component.

21
00:01:24.904 --> 00:01:28.768
Now I'm not suggesting that all components
need to have a back end element.

22
00:01:28.768 --> 00:01:34.000
Some of them it's just a button man,
you just like send some prompts to it,

23
00:01:34.000 --> 00:01:37.989
but for some user experiences,
some of these components

24
00:01:37.989 --> 00:01:42.831
are best modeled as a complete
experience with the back end portion.

25
00:01:42.831 --> 00:01:45.960
So that's what we're
gonna be working on here.

26
00:01:45.960 --> 00:01:47.568
And it's super, super cool.

27
00:01:47.568 --> 00:01:49.606
So I've got some background
on this a little bit.

28
00:01:49.606 --> 00:01:54.985
You can read through what we're
gonna be building in this exercise

29
00:01:54.985 --> 00:02:00.953
is when you create a new invoice we no
longer have the customer input here.

30
00:02:00.953 --> 00:02:06.560
So you should be able to type in
the customer that you want and it should

31
00:02:06.560 --> 00:02:12.667
auto populate the matching customers
based on who you're typing in here.

32
00:02:12.667 --> 00:02:15.716
So I've already done all
of the React work for

33
00:02:15.716 --> 00:02:18.615
you because I this is
not a React workshop.

34
00:02:18.615 --> 00:02:20.531
So all of that stuff is done.

35
00:02:20.531 --> 00:02:24.828
We're using downshift, which is a library
I wrote years ago at PayPal, and it's,

36
00:02:24.828 --> 00:02:26.107
I think, pretty great.

37
00:02:26.107 --> 00:02:30.061
So we're using that I actually didn't
write the hook that we're using though.

38
00:02:30.061 --> 00:02:32.643
I moved on before hooks were things so.

39
00:02:32.643 --> 00:02:35.813
We're not using my code necessarily but
yeah,

40
00:02:35.813 --> 00:02:40.014
we're using downshift for
managing that you're just going to

41
00:02:40.014 --> 00:02:44.468
be integrating some of the downshift
API's with remix fetchers.

42
00:02:44.468 --> 00:02:48.810
And yeah, and
then building out the backend piece of

43
00:02:48.810 --> 00:02:53.158
that as well to create this
holistic back end thing.

44
00:02:53.158 --> 00:02:57.949
Files you are going to be working
in the customers component is

45
00:02:57.949 --> 00:03:00.536
inside of this resources route.

46
00:03:00.536 --> 00:03:04.156
I want to be very clear,
there's no convention or

47
00:03:04.156 --> 00:03:07.959
special API around calling
this folder resources.

48
00:03:07.959 --> 00:03:12.595
That's just I want it /resources/customers
to be the resource route here.

49
00:03:12.595 --> 00:03:14.668
It just made sense to me to call it that.

50
00:03:14.668 --> 00:03:19.517
The other thing is we are importing
component from that resource

51
00:03:19.517 --> 00:03:21.867
route into other components.

52
00:03:21.867 --> 00:03:26.301
This is not normal, you should not
typically be importing things from other

53
00:03:26.301 --> 00:03:31.025
routes, routes should not be importing
things from each other most of the time.

54
00:03:31.025 --> 00:03:35.966
But this is actually one case where
it's chef's kiss beautiful it's really,

55
00:03:35.966 --> 00:03:40.093
really nice and so yeah,
just keep that as kind of a general thing,

56
00:03:40.093 --> 00:03:42.250
try not to import between routes.

57
00:03:42.250 --> 00:03:44.812
If you need to share code,
you put it into a different file and

58
00:03:44.812 --> 00:03:45.928
import from both of them.

59
00:03:45.928 --> 00:03:50.231
And then we're going to be
integrating that component

60
00:03:50.231 --> 00:03:53.421
into our the new route for our invoices.

61
00:03:53.421 --> 00:03:58.230
So that is what you are doing and
I hope you have a stellar time of it.

