WEBVTT

1
00:00:00.140 --> 00:00:06.448
Let me introduce Exercise 4, so
we can get going on that one.

2
00:00:06.448 --> 00:00:11.348
We're going to go through this
rigmarole again, we go and

3
00:00:11.348 --> 00:00:16.448
open up the readme,
close down the server for Exercise 3 and

4
00:00:16.448 --> 00:00:21.050
start node dev 4,
go over to the app to port 4004.

5
00:00:21.050 --> 00:00:28.130
Login with kotty@remix.run and Kotty loves
you and you should be back at the app.

6
00:00:29.400 --> 00:00:32.620
For this one,
we're going to be using an unstable API.

7
00:00:34.040 --> 00:00:36.407
Hmm.
We can talk a little bit about that after

8
00:00:36.407 --> 00:00:39.860
the exercise, but
we're optimizing for revalidation.

9
00:00:39.860 --> 00:00:44.773
So, anytime there's any form submitted,
any mutation, Remix decides to do what

10
00:00:44.773 --> 00:00:49.710
the web does and say, all bets are off on
this stuff, let me go get the new HTML.

11
00:00:49.710 --> 00:00:51.614
In the case of Remix,
we're just doing fetches, so

12
00:00:51.614 --> 00:00:53.320
we're not getting all the new HTML.

13
00:00:53.320 --> 00:00:57.020
We're just going to re-fetch all
the data and re-render components.

14
00:00:57.020 --> 00:01:01.582
So, there are situations where you may
be building something where you're like,

15
00:01:01.582 --> 00:01:05.948
I actually don't wanna go get all the data
because I've got lots of data here and

16
00:01:05.948 --> 00:01:07.727
that would just be suboptimal.

17
00:01:07.727 --> 00:01:12.063
So, Remix starts with the thing that's
correct and then you can optimize to make

18
00:01:12.063 --> 00:01:15.911
that correct thing a little more
optimized for your specific use case.

19
00:01:15.911 --> 00:01:17.679
And so this is one of the hooks,

20
00:01:17.679 --> 00:01:21.557
not to be confused with React Hooks
because it's not reactive, but

21
00:01:21.557 --> 00:01:26.880
it's one of the ways you can hook into
Remix to help configure that a little bit.

22
00:01:26.880 --> 00:01:32.150
So, you've got a little bit of background
around that you can take a look at this.

23
00:01:32.150 --> 00:01:35.340
The API you're gonna be using is unstable,
shouldReload.

24
00:01:35.340 --> 00:01:37.050
So, it is unstable prefixed.

25
00:01:37.050 --> 00:01:43.400
We are confident on the use case,
just not 100% sure on the specific API.

26
00:01:43.400 --> 00:01:46.530
So, the API could change, and
that's why it's unstable prefix.

27
00:01:46.530 --> 00:01:49.985
And there's also potentially
bugs with that because not a lot

28
00:01:49.985 --> 00:01:52.060
of people use this API yet.

29
00:01:52.060 --> 00:01:57.100
So ,I believe we should be good
though today [LAUGH], hopefully.

30
00:01:57.100 --> 00:02:02.753
So yeah, have a good time with
Exercise 4 with Unstable_shouldReload.

