WEBVTT

1
00:00:00.298 --> 00:00:02.870
So open up 02-optimistic-ui.

2
00:00:04.290 --> 00:00:09.659
We'll cancel this server and
run node dev 2,

3
00:00:09.659 --> 00:00:14.753
to get our dev server for
the second exercise

4
00:00:14.753 --> 00:00:19.035
going we should be on port 4002.

5
00:00:19.035 --> 00:00:23.035
And again, because of the way
that cookies and Things work,

6
00:00:23.035 --> 00:00:25.552
you're going to need to log in again.

7
00:00:25.552 --> 00:00:31.900
So it's kody@remix.run,
kodylovesyou, and we're in.

8
00:00:31.900 --> 00:00:34.210
All data is fresh and it's awesome.

9
00:00:34.210 --> 00:00:42.636
So for optimistic UI, I think I will go
into this a little bit after the exercise.

10
00:00:42.636 --> 00:00:47.120
I'll talk a little bit more
about examples of Optimistic UI.

11
00:00:47.120 --> 00:00:48.340
Actually, I take that back.

12
00:00:48.340 --> 00:00:49.988
We're gonna talk about this right now.

13
00:00:49.988 --> 00:00:51.890
I'll demonstrate optimistic UI to you.

14
00:00:51.890 --> 00:00:54.720
This is kind of what's in
the background information.

15
00:00:54.720 --> 00:00:59.548
But let's look at Twitter as
an example of Optimistic UI.

16
00:00:59.548 --> 00:01:03.195
If I say this is a test tweet.

17
00:01:03.195 --> 00:01:05.548
I'll probably get a couple of
likes on this before I delete it.

18
00:01:05.548 --> 00:01:11.451
But for the fun of it, let's say that
I'm on a slow network connection.

19
00:01:11.451 --> 00:01:14.899
So I'm throttling to slow 3G and
I hit that favorite button.

20
00:01:14.899 --> 00:01:19.366
Notice how it instantly turns red, even
though you can see in the network tab,

21
00:01:19.366 --> 00:01:23.770
it's taking at least two seconds for
that request to happen.

22
00:01:23.770 --> 00:01:26.762
And then if I unfavorite it,
same thing, it unfavorites right away,

23
00:01:26.762 --> 00:01:30.220
even though it takes some time for
that to actually happen.

24
00:01:30.220 --> 00:01:34.540
This is called Optimistic UI and
it makes users trust your app more.

25
00:01:34.540 --> 00:01:37.120
It just makes the whole
experience feel a lot better.

26
00:01:37.120 --> 00:01:41.072
So what happens,
this actually is pretty straightforward,

27
00:01:41.072 --> 00:01:45.860
pretty easy to do, because you literally
just say when they click on this,

28
00:01:45.860 --> 00:01:50.640
then set state to your favorite ID and
then send the Fetch Request.

29
00:01:50.640 --> 00:01:55.248
Here's the challenge though, what if
the user clicks a bunch of times and

30
00:01:55.248 --> 00:01:58.611
you have race conditions
with those fetch requests.

31
00:01:58.611 --> 00:02:04.027
Or even more scary, I don't know
if Twitter has a bug with that.

32
00:02:04.027 --> 00:02:06.831
So let's just make sure that is correct.

33
00:02:06.831 --> 00:02:12.087
Okay so what if, I delete this tweet over
here but I've still got it open over here.

34
00:02:12.087 --> 00:02:14.690
I'm looking at notifications or
something like that.

35
00:02:14.690 --> 00:02:16.034
So then I hit unfavorite.

36
00:02:16.034 --> 00:02:20.112
And it unfavorites right away but
then it actually favorites again,

37
00:02:20.112 --> 00:02:22.655
saying sorry that tweet has been deleted.

38
00:02:22.655 --> 00:02:25.228
I cannot unfavorite this tweet
no matter how hard I try,

39
00:02:25.228 --> 00:02:26.720
I've favorited this forever.

40
00:02:27.760 --> 00:02:31.550
And so this is where your
optimism has been misplaced.

41
00:02:31.550 --> 00:02:35.540
Things are like they're not
what you expected them to be.

42
00:02:35.540 --> 00:02:40.770
And so that set state to change the heart
to favorite it or to unfavored it.

43
00:02:40.770 --> 00:02:44.168
Now becomes a little more tricky because
you actually have to track that fetch

44
00:02:44.168 --> 00:02:47.424
request to make sure it completes
properly and revert what you've done.

45
00:02:47.424 --> 00:02:51.372
This becomes especially hard when
the user does something like this.

46
00:02:51.372 --> 00:02:54.917
I'm not sure what state that's
supposed to end in but, yeah,

47
00:02:54.917 --> 00:02:57.435
I guess it would stay favorite and
be correct.

48
00:02:57.435 --> 00:03:02.137
So this is what makes
Optimistic UI difficult,

49
00:03:02.137 --> 00:03:05.199
is this rollback experience.

50
00:03:05.199 --> 00:03:07.500
It makes it difficult
unless you're using remix.

51
00:03:07.500 --> 00:03:13.440
[LAUGH] Because remix makes building
Optimistic UI really awesome.

52
00:03:13.440 --> 00:03:17.453
So that's what you're gonna
be building for this example,

53
00:03:17.453 --> 00:03:21.720
we're gonna be working in
the invoice ID file again.

54
00:03:21.720 --> 00:03:26.254
And I think that basically what we want,
right now we're not gonna solve

55
00:03:26.254 --> 00:03:30.803
the problem where the form should
get cleared out, that'll come soon.

56
00:03:30.803 --> 00:03:33.192
But as soon as the user
hits Create Deposit,

57
00:03:33.192 --> 00:03:36.042
that deposit should show
up in that list right away.

58
00:03:36.042 --> 00:03:40.877
And you're actually not gonna be
adding a ton of code for this one.

59
00:03:40.877 --> 00:03:44.568
But I want you to test out
what happens if it fails.

60
00:03:44.568 --> 00:03:49.586
So go into the action and like throw
an error or something to make that fail or

61
00:03:49.586 --> 00:03:54.526
or maybe return a response that just
says you know, failure or whatever,

62
00:03:54.526 --> 00:03:58.600
so that we can test what
rollback is like as well.

63
00:03:58.600 --> 00:04:02.240
And I think that that is
everything to get you going.

64
00:04:02.240 --> 00:04:03.690
So have a good time on exercise two.

