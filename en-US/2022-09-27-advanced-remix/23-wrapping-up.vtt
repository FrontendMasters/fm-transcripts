WEBVTT

1
00:00:00.210 --> 00:00:01.110
Thanks everybody.

2
00:00:01.110 --> 00:00:04.050
That's it, we're done,
this has been awesome.

3
00:00:04.050 --> 00:00:08.870
I'm so happy that you have stuck with me
and gone through all these exercises,

4
00:00:08.870 --> 00:00:10.610
it is a lot of work.

5
00:00:10.610 --> 00:00:13.117
And so yeah, well done.

6
00:00:13.117 --> 00:00:17.982
Now that we're finished with the
exercises, before I send you off on your

7
00:00:17.982 --> 00:00:22.690
way, I'd love to just answer any
questions that you have about remix,

8
00:00:22.690 --> 00:00:27.557
any questions about workshop exercises
at home, whatever you'd like to

9
00:00:27.557 --> 00:00:32.528
ask before we say tata for now, yes
&gt;&gt; Do you have some resources on

10
00:00:32.528 --> 00:00:36.941
building like a progressive web app so
I can use remix stuff?

11
00:00:36.941 --> 00:00:44.020
&gt;&gt; Yeah, so remix doesn't have anything
built in that is for progressive web app.

12
00:00:44.020 --> 00:00:47.819
Let's do a remix PWA GitHub
because there's a GitHub project.

13
00:00:47.819 --> 00:00:48.520
There we go.

14
00:00:48.520 --> 00:00:49.457
[LAUGH] Yeah,

15
00:00:49.457 --> 00:00:54.147
looks like there are a couple of
people have been working on this.

16
00:00:54.147 --> 00:00:55.245
This one.

17
00:00:58.174 --> 00:01:01.450
Yeah, looks like somebody's
put a lot of effort into this.

18
00:01:01.450 --> 00:01:02.560
So that's awesome.

19
00:01:03.840 --> 00:01:05.870
So take a look at that.

20
00:01:05.870 --> 00:01:07.341
And then Jacob EB.

21
00:01:07.341 --> 00:01:13.999
He's remix employee, just as so
many things, really smart dude.

22
00:01:13.999 --> 00:01:20.055
And he's actually the genius behind a lot
of the way that the defer API works.

23
00:01:20.055 --> 00:01:22.730
Super cool.

24
00:01:22.730 --> 00:01:25.060
And so yeah,
you could take a look at that.

25
00:01:26.060 --> 00:01:29.990
I have not personally looked into
PWA's with Remix a whole lot.

26
00:01:29.990 --> 00:01:33.759
But one interesting thing is that I don't
think anybody's tried this yet, but

27
00:01:33.759 --> 00:01:36.697
I'm pretty confident that Remix
can run in a service worker.

28
00:01:36.697 --> 00:01:39.807
And so if you want it to be like
completely offline and still have your

29
00:01:39.807 --> 00:01:43.465
loaders and actions and all that, you can
try to put Remix in a ServiceWorker and

30
00:01:43.465 --> 00:01:45.281
then get your offline stuff there too.

31
00:01:45.281 --> 00:01:46.831
Which would be pretty cool.

32
00:01:46.831 --> 00:01:49.987
And we definitely have an appetite for

33
00:01:49.987 --> 00:01:55.775
building in some utilities for
offline first development.

34
00:01:55.775 --> 00:01:57.805
I think that would be pretty cool.

35
00:01:57.805 --> 00:02:02.505
Some like IndexDB back thing and
synchronizing, all that stuff.

36
00:02:02.505 --> 00:02:04.575
There's opportunity there.

37
00:02:04.575 --> 00:02:09.635
But yeah, hopefully these give you
some direction as you get started.

38
00:02:10.825 --> 00:02:15.619
&gt;&gt; Is there going to be CSS inside
of a component type of solution?

39
00:02:15.619 --> 00:02:20.407
&gt;&gt; Well kinda depends on what
you call CSS inside a component,

40
00:02:20.407 --> 00:02:25.240
that kind of feels like CSS and
signing component to me.

41
00:02:25.240 --> 00:02:26.850
But yeah.

42
00:02:26.850 --> 00:02:31.770
So you can use CSS and
JIS solutions that they are supported.

43
00:02:31.770 --> 00:02:34.339
We've got examples for
all of the major ones.

44
00:02:35.450 --> 00:02:38.264
CSS modules,
not quite sure what you're asking for, but

45
00:02:38.264 --> 00:02:40.130
those are not currently supported.

46
00:02:40.130 --> 00:02:43.170
Eventually we are working
on solving that problem.

47
00:02:44.720 --> 00:02:46.543
The vanilla extract same thing,

48
00:02:46.543 --> 00:02:51.110
I know that's kind of a hot one for
people right now and it seems pretty cool.

49
00:02:51.110 --> 00:02:53.020
Also not currently supported.

50
00:02:54.730 --> 00:02:57.385
Because it doesn't create a CSS file,

51
00:02:57.385 --> 00:03:00.770
at least not without
integration in the bundler.

52
00:03:00.770 --> 00:03:03.670
So we're figuring out a good
way to make that work as well.

53
00:03:05.330 --> 00:03:09.152
As far as a Vue single file component,
right now,

54
00:03:09.152 --> 00:03:14.820
we don't support Vue in the future,
we probably very likely will.

55
00:03:14.820 --> 00:03:15.678
And when we do,

56
00:03:15.678 --> 00:03:19.510
I'm sure that it will support all
the features that you love for Vue.

57
00:03:19.510 --> 00:03:22.310
So that will probably happen also.

58
00:03:22.310 --> 00:03:29.520
Personally, I've used all of the things,
all of them, and every way you can do CSS.

59
00:03:29.520 --> 00:03:36.990
And for building anything that's bigger
than a small app, I just love Tailwind.

60
00:03:36.990 --> 00:03:38.440
I just love it.

61
00:03:38.440 --> 00:03:44.680
It is, for me, been one of the most
productive things I've used for CSS.

62
00:03:44.680 --> 00:03:49.260
I built a CSS and JS library,
you know emotion.

63
00:03:49.260 --> 00:03:54.020
I didn't build that, but I built
glamorous upon which emotion was based.

64
00:03:54.020 --> 00:04:00.073
And I deprecated glamourous and let them
handle all the maintenance, it was great.

65
00:04:00.073 --> 00:04:05.323
And they did a great job, they did better
than I did, that's why I deprecated it.

66
00:04:05.323 --> 00:04:11.141
And so, I've been involved in this,
and Tailwind is the bomb, I love it.

67
00:04:11.141 --> 00:04:14.885
I know some people can't get over it,
they don't like it, and that's fine,

68
00:04:14.885 --> 00:04:18.423
I'm not gonna think that you're
a terrible person if you don't love it.

69
00:04:18.423 --> 00:04:22.434
But I'm pretty satisfied with Tailwind but
yes,

70
00:04:22.434 --> 00:04:27.510
we will definitely support
whatever way you'd like to do CSS.

71
00:04:27.510 --> 00:04:32.470
The one thing that I will mention though,
is that we really want to make sure

72
00:04:32.470 --> 00:04:36.610
that people who build Remix
apps build really great apps.

73
00:04:36.610 --> 00:04:41.476
So we don't want to give you foot guns and
things and CSS and JS is a foot gun,

74
00:04:41.476 --> 00:04:42.493
it totally is.

75
00:04:42.493 --> 00:04:47.593
You're going to make your app slower,
that's just the way that it is.

76
00:04:47.593 --> 00:04:51.622
Any runtime CSS and
JS solution is gonna have that problem.

77
00:04:51.622 --> 00:04:59.085
And so we do not encourage that even
though it technically can be supported.

78
00:04:59.085 --> 00:05:02.550
So yeah, that is that.

79
00:05:02.550 --> 00:05:03.050
Another question?

80
00:05:04.060 --> 00:05:05.970
&gt;&gt; Is there any integration
with storybook?

81
00:05:07.560 --> 00:05:12.500
&gt;&gt; Not currently, but that is actually
very closely related to the issues with

82
00:05:12.500 --> 00:05:17.365
integration testing and testing
components or rendering components that

83
00:05:17.365 --> 00:05:22.168
use Remix components like the link tag or
the link components and things.

84
00:05:22.168 --> 00:05:26.706
Because those components require context
provided by Remix which we don't expose

85
00:05:26.706 --> 00:05:27.430
currently.

86
00:05:28.510 --> 00:05:32.809
So, as soon as the Remix router is
finished, then we can start working on

87
00:05:32.809 --> 00:05:36.450
those utilities that will
expose those providers.

88
00:05:36.450 --> 00:05:42.180
And that will handle both the testing
story as well as the storybook story.

89
00:05:43.600 --> 00:05:48.380
For me right now as a workaround for that,
if I need something that lets me iterate

90
00:05:48.380 --> 00:05:53.162
quickly on a component in isolation like
what storybook offers, I will just make

91
00:05:53.162 --> 00:05:57.440
a route that only renders that
component with the prompts that I want.

92
00:05:57.440 --> 00:06:00.210
It takes all of like 20
seconds to set that up.

93
00:06:00.210 --> 00:06:05.960
And so that's what I did before
storybook was around and it still works.

94
00:06:05.960 --> 00:06:09.272
So not to downplay storybook,
I think it's amazing, awesome tool.

95
00:06:09.272 --> 00:06:11.290
And yeah, support will come eventually.

96
00:06:12.580 --> 00:06:16.770
&gt;&gt; What are you personally most
excited about the future of Remix?

97
00:06:17.900 --> 00:06:23.610
&gt;&gt; Okay, well, not to date this
workshop too much, I guess.

98
00:06:23.610 --> 00:06:26.790
Yeah, the future of Remix.

99
00:06:26.790 --> 00:06:34.460
So there are three or four things that I'm
not super jazzed about Remix right now.

100
00:06:34.460 --> 00:06:42.090
And one of them is the support for
CSS that we talked about already.

101
00:06:42.090 --> 00:06:44.260
We're currently working on a solution for
that.

102
00:06:44.260 --> 00:06:48.580
But it would be really nice if people
who are using CSS modules didn't have to

103
00:06:48.580 --> 00:06:51.360
rewrite their CSS to be
able to migrate to Remix.

104
00:06:51.360 --> 00:06:54.410
So yeah, we are working on that currently.

105
00:06:54.410 --> 00:06:57.835
I'm not super jazzed about the testing and
Storybook integration,

106
00:06:57.835 --> 00:06:59.750
which we also talked about.

107
00:06:59.750 --> 00:07:01.270
We're currently working on that as well.

108
00:07:03.160 --> 00:07:07.691
I am not super excited about
the the fact that we don't support

109
00:07:07.691 --> 00:07:12.235
Hot Module Replacement yet,
also working on that right now.

110
00:07:13.305 --> 00:07:18.085
So the things that I'm not
super excited about with Remix,

111
00:07:18.085 --> 00:07:20.484
we're actively working on.

112
00:07:20.484 --> 00:07:25.140
Some things that, and so
I'm excited about those things

113
00:07:25.140 --> 00:07:29.310
being like handled and
improved in use cases.

114
00:07:29.310 --> 00:07:30.495
And some of the things,

115
00:07:30.495 --> 00:07:34.831
I'm not gonna not talk to you specifically
about what we're doing to deal with those.

116
00:07:34.831 --> 00:07:38.255
And the fourth one is
the authentication stuff,

117
00:07:38.255 --> 00:07:42.432
we talked about this in
the fundamentals workshop where you

118
00:07:42.432 --> 00:07:46.793
have to protect every single
route which is kind of annoying.

119
00:07:46.793 --> 00:07:50.470
Or you have workarounds with Express
middleware and stuff like that.

120
00:07:50.470 --> 00:07:53.700
So, those are some of
the things that bother me.

121
00:07:53.700 --> 00:07:58.235
Luckily, none of those are cracks in
the foundation, foundation is solid,

122
00:07:58.235 --> 00:08:02.450
those things can be solved and
we are actively working on them.

123
00:08:02.450 --> 00:08:05.266
So it excites me to get
those things done and

124
00:08:05.266 --> 00:08:08.554
actually when some of
those things are finished,

125
00:08:08.554 --> 00:08:13.660
we don't like to talk too much about
things that haven't actually shipped.

126
00:08:13.660 --> 00:08:16.755
And so I can talk about this because
we shipped it in an experiment and

127
00:08:16.755 --> 00:08:20.330
people have been using it and
it's pretty amazing, quite stable.

128
00:08:20.330 --> 00:08:23.698
But yeah, some of the work that we're
doing to solve some of those problems

129
00:08:23.698 --> 00:08:27.227
hasn't shipped anything yet, so I don't
wanna talk too much about how we're

130
00:08:27.227 --> 00:08:30.450
working on that and
how we're trying to solve that.

131
00:08:30.450 --> 00:08:35.835
But when those things are finished,
it will open up the opportunity for

132
00:08:35.835 --> 00:08:40.053
more people to be able to
migrate even easier to Remix and

133
00:08:40.053 --> 00:08:43.865
just get nicer experiences very quickly.

134
00:08:43.865 --> 00:08:48.690
And then I'm also excited about
the future of maybe some of

135
00:08:48.690 --> 00:08:54.665
the newer JavaScript runtimes
that support TypeScript built in.

136
00:08:54.665 --> 00:08:58.599
And the fact that the browser
supports the ES modules, and

137
00:08:58.599 --> 00:09:02.854
hopefully getting past this
terrible ES module, common JAS,

138
00:09:02.854 --> 00:09:07.880
nonsense that we're dealing with
right now in the node ecosystem.

139
00:09:07.880 --> 00:09:12.525
But in Dino and Bun being able
to just execute JavaScript, or

140
00:09:12.525 --> 00:09:17.354
TypeScript directly and
in button JSX support built in, and so

141
00:09:17.354 --> 00:09:23.060
you can have a Remix app that
doesn't have any sort of Bundler.

142
00:09:23.060 --> 00:09:26.390
Now, of course,
you've got tons of dependencies, right?

143
00:09:26.390 --> 00:09:30.750
You don't wanna load 5,000
JavaScript files in the browser.

144
00:09:30.750 --> 00:09:35.870
Well, what if your runtime is fast enough
that you can compile or bundle on demand?

145
00:09:37.680 --> 00:09:39.140
Why not, sure.

146
00:09:39.140 --> 00:09:42.910
So no build, deploy in five seconds.

147
00:09:42.910 --> 00:09:44.700
That sounds kinda cool.

148
00:09:44.700 --> 00:09:45.890
Kinda like that.

149
00:09:45.890 --> 00:09:49.645
I mean, the challenge there still is
like migrations will still take how long

150
00:09:49.645 --> 00:09:50.469
migrations do.

151
00:09:50.469 --> 00:09:54.898
But if you're just changing code deploy
in five seconds, that sounds awesome.

152
00:09:54.898 --> 00:10:00.131
So I'm really excited about
opportunities that not just Remix but

153
00:10:00.131 --> 00:10:04.438
the web and infrastructure enables,
it's amazing.

154
00:10:04.438 --> 00:10:11.621
And to get this released, wow,
that is cool, that is really cool.

155
00:10:11.621 --> 00:10:17.487
So definitely I've never been so
excited about building web applications,

156
00:10:17.487 --> 00:10:23.982
my own website is, I think the first large
deployments of a Remix application, it's

157
00:10:23.982 --> 00:10:29.960
probably still the largest open-source
deployments of Remix application.

158
00:10:31.230 --> 00:10:33.110
I was building it while
Remix was being built.

159
00:10:33.110 --> 00:10:35.640
I started it before actions were a thing.

160
00:10:35.640 --> 00:10:38.862
And so
like kinda constructing the plane or yeah,

161
00:10:38.862 --> 00:10:41.017
in the air [LAUGH], sort of thing.

162
00:10:41.017 --> 00:10:44.880
And I'm still just floored by what I
was able to accomplish with Remix.

163
00:10:46.660 --> 00:10:50.880
So yeah, Remix tricked me into
being a back end developer.

164
00:10:50.880 --> 00:10:54.480
Most of the code that I write is back
end stuff, but it doesn't feel like it.

165
00:10:54.480 --> 00:10:59.676
It just feels like I'm writing UI and
way less code

166
00:10:59.676 --> 00:11:05.130
than I ever wrote for
these kinds of UIs ever before.

167
00:11:06.950 --> 00:11:11.130
So anyway,
there's enough gushing over Remix for me.

168
00:11:11.130 --> 00:11:12.500
There you go.

169
00:11:12.500 --> 00:11:13.425
Any other questions?

170
00:11:13.425 --> 00:11:14.697
&gt;&gt; No.

171
00:11:14.697 --> 00:11:16.790
&gt;&gt; Okay, yeah, TJ.

172
00:11:16.790 --> 00:11:21.263
&gt;&gt; Aside from this course and your web
website and the Remix website itself,

173
00:11:21.263 --> 00:11:24.870
do you have any other places
where we go for documentation or

174
00:11:24.870 --> 00:11:27.310
examples in the Remix community?

175
00:11:27.310 --> 00:11:30.330
&gt;&gt; Yeah, thank you so
much for asking that.

176
00:11:30.330 --> 00:11:33.790
So on the Remix site, we've got our docs.

177
00:11:33.790 --> 00:11:35.810
And there's the quickstart guide.

178
00:11:35.810 --> 00:11:40.738
That's basically a tutorial version
of the Remix fundamentals workshop we

179
00:11:40.738 --> 00:11:42.000
did yesterday.

180
00:11:42.000 --> 00:11:45.145
So the workshop yesterday has more
stuff and then of course I'm there.

181
00:11:45.145 --> 00:11:51.660
But there's also an egghead course that
goes through lots of that stuff as well.

182
00:11:51.660 --> 00:11:57.288
And then the jokes app deep dive is
a really long tutorial that I did and

183
00:11:57.288 --> 00:12:00.019
I live streamed the whole thing.

184
00:12:00.019 --> 00:12:02.953
It's six hours long on YouTube
that you can go along through this

185
00:12:02.953 --> 00:12:03.870
tutorial with me.

186
00:12:03.870 --> 00:12:05.805
I'm not sure why the image failed to load.

187
00:12:05.805 --> 00:12:11.091
But yeah, we go into like, all right let's
bring in styles and let's talk about

188
00:12:11.091 --> 00:12:16.410
authentication, let's set up our Prisma
thing, all basically from scratch.

189
00:12:17.520 --> 00:12:21.650
So, this one's really in depth, it'll
teach you a lot of really cool stuff.

190
00:12:21.650 --> 00:12:25.929
And then we also have of course like
API reference documentation and

191
00:12:25.929 --> 00:12:27.660
everything like that.

192
00:12:27.660 --> 00:12:31.608
The philosophy page is
actually really useful for

193
00:12:31.608 --> 00:12:36.497
people trying to get an understanding
of what role Remix plays

194
00:12:36.497 --> 00:12:41.479
in the broader ecosystem of the web,
technical explanation,

195
00:12:41.479 --> 00:12:47.794
I recommend reading that as well,
kinda explain how things work technically.

196
00:12:47.794 --> 00:12:52.043
And then the community as well where this
will tell you where you can go to our

197
00:12:52.043 --> 00:12:56.296
Discord server, really friendly place
we're working hard to make sure it

198
00:12:56.296 --> 00:12:59.350
stays that way, so
if you're not friendly stay out.

199
00:13:00.550 --> 00:13:04.654
But I'm sure that you're wonderful
people and we'd love to have you there.

200
00:13:04.654 --> 00:13:09.869
We also have a pretty active GitHub
discussions, we have a lot of examples,

201
00:13:09.869 --> 00:13:13.870
happy to accept PRs for more and
for improvements as well.

202
00:13:13.870 --> 00:13:19.418
And growing list of courses that
the community members have made,

203
00:13:19.418 --> 00:13:21.308
and all of that stuff.

204
00:13:21.308 --> 00:13:24.521
And of course,
Remix con coming I scheduled for

205
00:13:24.521 --> 00:13:28.953
the second week of May next year,
so look forward to that as well.

206
00:13:28.953 --> 00:13:34.020
So, yeah, and this page,
are probably the best spots.

207
00:13:34.020 --> 00:13:38.923
There's actually another unofficial
thing remix doc guide that

208
00:13:38.923 --> 00:13:44.356
somebody put together to Remix app
that has just like a ton of resources,

209
00:13:44.356 --> 00:13:49.700
whether it's packages,
tutorials, all sorts of stuff.

210
00:13:49.700 --> 00:13:53.390
So that's another pretty good
one to take a look at and

211
00:13:53.390 --> 00:13:56.580
submit your own stuff too and stuff.

212
00:13:56.580 --> 00:14:01.109
Thank you so much for giving me
some of your time to tell you about

213
00:14:01.109 --> 00:14:06.158
something that I love and that I think
will make the web a better place.

214
00:14:06.158 --> 00:14:09.483
I hope that you take
the time to play with it.

215
00:14:09.483 --> 00:14:13.768
Try it out, do a proof of concept,
and I said yesterday,

216
00:14:13.768 --> 00:14:19.660
the way that I develop software is,
if I'm ever unsure what approach to take,

217
00:14:19.660 --> 00:14:24.331
I implement them both and
choose the one that I hate the least.

218
00:14:24.331 --> 00:14:26.450
And so, I hope that you do that.

219
00:14:26.450 --> 00:14:29.252
And that when you say I hate this
one the least, you're actually like,

220
00:14:29.252 --> 00:14:30.875
actually I love this, and it's Remix.

221
00:14:30.875 --> 00:14:35.121
[LAUGH] Thank you so much and

222
00:14:35.121 --> 00:14:38.789
have a wonderful day.

223
00:14:38.789 --> 00:14:41.692
&gt;&gt; [APPLAUSE]

