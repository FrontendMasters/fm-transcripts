WEBVTT

1
00:00:00.240 --> 00:00:04.140
&gt;&gt; Lukas Ruebbelke: Talking about testing
is kind of like flossing your teeth or

2
00:00:04.140 --> 00:00:05.330
taking vitamins.

3
00:00:05.330 --> 00:00:07.500
We philosophically agree
that we should do this, but

4
00:00:07.500 --> 00:00:09.860
somehow it just gets de-prioritized.

5
00:00:09.860 --> 00:00:12.963
Even internally as I wanna
go talk about Firebase, and

6
00:00:12.963 --> 00:00:14.656
this module is staring at me.

7
00:00:14.656 --> 00:00:21.180
But we're gonna do it, and so
we'll do the testing module.

8
00:00:22.180 --> 00:00:26.706
And from here, then it's just really
all just fun and games after this.

9
00:00:32.682 --> 00:00:34.470
&gt;&gt; Lukas Ruebbelke: Actually,
let me just back this up real quick.

10
00:00:34.470 --> 00:00:37.942
I wanna pull up one slide to just
frame how we're going to discuss this.

11
00:00:42.760 --> 00:00:46.464
&gt;&gt; Lukas Ruebbelke: So
has anybody ever heard the saying,

12
00:00:46.464 --> 00:00:50.760
make it work, make it right, make it fast?

13
00:00:52.680 --> 00:00:55.560
So pretty common saying,
I think if you Googled it,

14
00:00:55.560 --> 00:00:59.330
I don't remember off the top
of my head who said it.

15
00:00:59.330 --> 00:01:04.540
But I think this is a pretty good
approach for being effective.

16
00:01:04.540 --> 00:01:08.480
That I've been on projects
where people were so

17
00:01:08.480 --> 00:01:11.450
enamored with just building this
perfect thing right out of the gate.

18
00:01:11.450 --> 00:01:14.700
So they spent hours and hours and hours
and days and days and days and days and

19
00:01:14.700 --> 00:01:17.800
days and months planning the thing.

20
00:01:18.900 --> 00:01:23.770
And at the end of this you
know huge planning cycle

21
00:01:23.770 --> 00:01:24.940
they had nothing to show for it.

22
00:01:25.970 --> 00:01:27.020
And more importantly,

23
00:01:27.020 --> 00:01:31.870
if you have an opportunity to go
read a book like The Lean Startup.

24
00:01:31.870 --> 00:01:35.160
Is how do you even know what
you're building is even something

25
00:01:35.160 --> 00:01:35.919
that the users want?

26
00:01:37.150 --> 00:01:38.250
And so

27
00:01:38.250 --> 00:01:42.270
I've seen tons of projects where you
think this is it they're gonna love it.

28
00:01:42.270 --> 00:01:44.763
And the user just does not get it and so

29
00:01:44.763 --> 00:01:50.572
I think it's incredibly important to have
something that works as soon as possible.

30
00:01:50.572 --> 00:01:53.936
And so this is why I really
like the saying make it work,

31
00:01:53.936 --> 00:01:55.774
make it right, make it fast.

32
00:01:55.774 --> 00:02:01.710
Cuz I think the first thing you
need to do is make something work.

33
00:02:01.710 --> 00:02:05.000
So that you can get it in front
of the people that matter and

34
00:02:05.000 --> 00:02:06.790
start to get feedback.

35
00:02:06.790 --> 00:02:09.655
And so
I'm not saying throw caution to the wind.

36
00:02:09.655 --> 00:02:13.340
It doesn't matter how we program
cuz we're making it work.

37
00:02:13.340 --> 00:02:15.810
Good software principles still apply.

38
00:02:15.810 --> 00:02:21.440
But there is a level of variability and
just the dynamic

39
00:02:21.440 --> 00:02:26.530
nature of what you're doing, that you
have to be open to feedback loops.

40
00:02:26.530 --> 00:02:30.310
And willing to change, and
the faster you get something

41
00:02:30.310 --> 00:02:34.550
in place to get that feedback loop,
the better off you're going to be.

42
00:02:34.550 --> 00:02:37.580
So first things first,
is just making something work.

43
00:02:37.580 --> 00:02:41.780
And a lot of times that means
it should be working, it's not.

44
00:02:43.030 --> 00:02:46.540
And so for this,
we're going to talk about testing.

45
00:02:46.540 --> 00:02:51.497
I find the majority of what I
do is I spent 20% writing code.

46
00:02:51.497 --> 00:02:54.280
And 80% fixing it and
figuring out what went wrong.

47
00:02:55.320 --> 00:02:59.820
And so being able to write test
gives you the ability to know

48
00:03:00.920 --> 00:03:03.100
with reasonable certainty
that something works.

49
00:03:03.100 --> 00:03:07.090
So if somebody says, well,
how do you know that this works?

50
00:03:07.090 --> 00:03:12.740
Well, it hasn't broken yet
is not a good response.

51
00:03:12.740 --> 00:03:14.351
Because to that end,

52
00:03:14.351 --> 00:03:19.395
I would say you probably should go
read Black Swanby Nassim Taleb.

53
00:03:19.395 --> 00:03:21.930
And just pray that this
doesn't happen to you.

54
00:03:21.930 --> 00:03:26.330
I don't think the Equifax people or
whatever,

55
00:03:26.330 --> 00:03:30.402
it hasn't broken, but
when it does [SOUND].

56
00:03:30.402 --> 00:03:33.951
So to that end, it hasn't broken yet

57
00:03:33.951 --> 00:03:38.920
is not a good response for
how do you know it works?

58
00:03:38.920 --> 00:03:43.620
This is why we have test, to the best
of our ability to make assertions

59
00:03:43.620 --> 00:03:47.550
that pieces in our code are working.

60
00:03:47.550 --> 00:03:50.620
And from there, once you validate
that this is the right thing.

61
00:03:51.850 --> 00:03:54.170
Then you can go through and
start to make it right.

62
00:03:55.190 --> 00:03:56.276
Cuz there's just going to
be things that you miss.

63
00:03:56.276 --> 00:04:01.081
There's going to be pieces that just
didn't get put together as tight as

64
00:04:01.081 --> 00:04:02.520
possible.

65
00:04:02.520 --> 00:04:04.490
And so
even over the course of these branches,

66
00:04:04.490 --> 00:04:06.412
if you started going through
as I'm cutting them.

67
00:04:06.412 --> 00:04:09.480
There are just things that are progressing

68
00:04:09.480 --> 00:04:15.070
that even from branch 00 start to the last
branch that I've cut in this repo.

69
00:04:15.070 --> 00:04:18.590
I've started to make small improvement
just by virtue of being in there.

70
00:04:18.590 --> 00:04:24.045
And so finding ways to get good feedback

71
00:04:24.045 --> 00:04:28.684
on your code that is a mechanism.

72
00:04:28.684 --> 00:04:30.860
So again this is all feedback loops.

73
00:04:30.860 --> 00:04:35.020
Is having a mechanism to tell
you what is not right, so

74
00:04:35.020 --> 00:04:37.340
that you can make it right or
what is suboptimal.

75
00:04:37.340 --> 00:04:42.790
So this is where static
analysis is really, really key.

76
00:04:42.790 --> 00:04:46.200
And this is something that is
kind of new to JavaScript.

77
00:04:46.200 --> 00:04:51.140
So for Java and C# and different things,
you have things like SonarQube and

78
00:04:51.140 --> 00:04:51.980
a bunch of different things.

79
00:04:51.980 --> 00:04:54.662
That does phenomenal esthetics
analysis of different things.

80
00:04:54.662 --> 00:04:58.195
And they say this is bad or
good or whatever.

81
00:04:58.195 --> 00:05:00.870
We're starting to see this in our tooling.

82
00:05:00.870 --> 00:05:01.685
And so I'm pretty excited to show this.

83
00:05:01.685 --> 00:05:06.536
Because there's actually very
little we need to do from

84
00:05:06.536 --> 00:05:11.810
a kind of a setup standpoint to
get good feedback on our code.

85
00:05:11.810 --> 00:05:19.250
And then from there, once you have
something working, and it's right.

86
00:05:19.250 --> 00:05:21.080
Well, then you can focus
on making it fast.

87
00:05:21.080 --> 00:05:23.550
And start to say, well how do we
start to improve the performance?

88
00:05:24.900 --> 00:05:28.640
And, interestingly enough,
by talking about these three things,

89
00:05:28.640 --> 00:05:32.110
we're pretty much going to
cover how to make it live.

90
00:05:33.120 --> 00:05:34.960
So that's kind of the next piece.

91
00:05:34.960 --> 00:05:37.330
You build this thing,
what do you do with it?

92
00:05:37.330 --> 00:05:38.750
Where do you put it?

93
00:05:38.750 --> 00:05:41.110
Because especially in JavaScript,

94
00:05:41.110 --> 00:05:45.330
that because it's not
a truly compiled language.

95
00:05:45.330 --> 00:05:48.820
So we essentially compile it down to ES5.

96
00:05:48.820 --> 00:05:50.935
But it's not like we're
getting an executable.

97
00:05:50.935 --> 00:05:57.533
The deployment is just a little different
in terms of what you develop in.

98
00:05:57.533 --> 00:06:02.300
Is definitely not what you wanna
put on a production server.

99
00:06:02.300 --> 00:06:06.170
And so there's this gap here of
this is what we're working with.

100
00:06:06.170 --> 00:06:09.000
But we're ready to actually
deploy this for consumption.

101
00:06:09.000 --> 00:06:09.784
What do we do and what's that step?

102
00:06:09.784 --> 00:06:12.015
So I'll talk about that, as well.

103
00:06:12.015 --> 00:06:19.530
So let's hop in with this, make it work,
make it right, make it fast arc.

104
00:06:19.530 --> 00:06:23.390
Let's go ahead and jump in and see this.

