WEBVTT

1
00:00:00.440 --> 00:00:03.350
&gt;&gt; Lukas Ruebbelke: I believe most
everyone here has downloaded this.

2
00:00:03.350 --> 00:00:07.410
But if you haven't, please go to this URL.

3
00:00:08.430 --> 00:00:11.880
Download the repo and
clone it and install it.

4
00:00:11.880 --> 00:00:15.250
If you run into an error with Cyprus,

5
00:00:15.250 --> 00:00:20.390
you can just remove that from your
package.json and it should still work.

6
00:00:20.390 --> 00:00:22.810
And they talk about that later.

7
00:00:22.810 --> 00:00:24.741
It's an amazing and interesting framework.

8
00:00:24.741 --> 00:00:30.490
I think actually, Kent Dodds talked about
it in a previous front-end masters course.

9
00:00:30.490 --> 00:00:32.473
I'm all in, it's amazing.

10
00:00:32.473 --> 00:00:37.960
But that is, you may run into a problem
with there, don't be alarmed.

11
00:00:37.960 --> 00:00:43.144
You can either just ignore it or
just remove that from the package.json,

12
00:00:43.144 --> 00:00:48.480
and life will be good.
&gt;&gt; Lukas Ruebbelke: And

13
00:00:48.480 --> 00:00:50.300
so what are we working with?

14
00:00:50.300 --> 00:00:56.590
So this is, and I'm going to actually
just show you in the browser.

15
00:00:56.590 --> 00:01:03.348
We'll just do a demo here.
&gt;&gt; Lukas Ruebbelke: So

16
00:01:03.348 --> 00:01:04.770
this is the homepage.

17
00:01:06.090 --> 00:01:12.960
But what we're actually building
is a master detail view.

18
00:01:14.240 --> 00:01:18.890
And so what this is, is we have

19
00:01:18.890 --> 00:01:24.400
a master list of items in this case.

20
00:01:24.400 --> 00:01:27.580
And then we have a detailed view.

21
00:01:27.580 --> 00:01:30.710
And so what this is, is you have a list
of items and then you can select one and

22
00:01:30.710 --> 00:01:33.100
you can see the detail of it.

23
00:01:33.100 --> 00:01:36.150
So this is a master detail view.

24
00:01:36.150 --> 00:01:39.840
And I am of the opinion that
this is the fundamental

25
00:01:40.940 --> 00:01:44.510
interface for
pretty much any non-trivial application.

26
00:01:45.880 --> 00:01:48.760
Is that you simply have
a collection of something, and

27
00:01:48.760 --> 00:01:50.750
then you need to modify that collection.

28
00:01:50.750 --> 00:01:55.560
So first you need to read it, delete
items from the collection, update, or

29
00:01:55.560 --> 00:01:57.680
create items within that collection.

30
00:01:57.680 --> 00:02:03.410
So with the master detail view,
who can answer this?

31
00:02:03.410 --> 00:02:09.422
When you start a new framework,
what is kinda the quintessential

32
00:02:09.422 --> 00:02:12.851
example that people run to?
&gt;&gt; Speaker 2: To-do lists?

33
00:02:12.851 --> 00:02:13.843
&gt;&gt; Lukas Ruebbelke: Exactly, and

34
00:02:13.843 --> 00:02:15.418
what is a to-do list?

35
00:02:15.418 --> 00:02:16.550
Well, it's basically a master detail view.

36
00:02:16.550 --> 00:02:20.350
You have a list of things to do and
then you can either mark it off,

37
00:02:20.350 --> 00:02:21.850
you can add to it, whatever.

38
00:02:21.850 --> 00:02:26.040
So, I would even say when
you look at like Gmail.

39
00:02:26.040 --> 00:02:28.980
A master list of your emails, you
select one, you can see the details for

40
00:02:28.980 --> 00:02:31.990
that e-mail and
then you can modify that collection.

41
00:02:31.990 --> 00:02:36.280
Even if you will, Facebook, same thing
is you have a master list of things

42
00:02:36.280 --> 00:02:38.180
into your feed, you can select it,
you can do things.

43
00:02:38.180 --> 00:02:43.053
So when I am working with a new developer.

44
00:02:43.053 --> 00:02:48.219
That if I can get them to the place
where they understand how

45
00:02:48.219 --> 00:02:55.087
to construct a master detail view and
communicate in persistent to a server.

46
00:02:55.087 --> 00:02:59.179
I feel like that first milestone has been
laid to where they can just about build

47
00:02:59.179 --> 00:02:59.800
anything.

48
00:02:59.800 --> 00:03:04.075
If they really truly understand,
I have this data model that I need to

49
00:03:04.075 --> 00:03:09.028
build a form out, I need to lay it out and
we're just saving it back to a REST API.

50
00:03:09.028 --> 00:03:14.112
like if you understand the basic pattern,
then really the variation comes out to,

51
00:03:14.112 --> 00:03:19.066
what's the UI, what's the user experience,
is it a a list with the form on the.

52
00:03:19.066 --> 00:03:23.384
Or you click and you get like a model or
this is variations in the user experience,

53
00:03:23.384 --> 00:03:25.200
but it's a whole.

54
00:03:25.200 --> 00:03:29.127
The patterns are the same, and then from
there it's just really business logic.

55
00:03:29.127 --> 00:03:33.690
Are there business rules that would
prevent me from editing this?

56
00:03:33.690 --> 00:03:36.050
Or if I save this,
does something else need to happen?

57
00:03:36.050 --> 00:03:43.100
But, I would say if you are starting
to venture into front-end applications,

58
00:03:43.100 --> 00:03:47.170
I would focus on building a master detail
view, understanding how that works.

59
00:03:47.170 --> 00:03:50.000
And you'll just find that like,
these patterns,

60
00:03:50.000 --> 00:03:51.230
I just use them over and over and over.

61
00:03:52.390 --> 00:04:01.854
Same actors, different plays, if you will.
&gt;&gt; Lukas Ruebbelke: So

62
00:04:01.854 --> 00:04:05.609
master detail view, there are some
additional things that we'll get into,

63
00:04:05.609 --> 00:04:06.949
in the next couple of days.

64
00:04:07.980 --> 00:04:09.620
Is we start to talk about
some different concepts,

65
00:04:09.620 --> 00:04:12.840
but as a whole, that's it,
master-detail view.

66
00:04:14.550 --> 00:04:18.654
So it's a RESTful master-detail
application using Angular,

67
00:04:18.654 --> 00:04:22.100
the CLI and as well, Angular material.

68
00:04:22.100 --> 00:04:28.320
And what we're going to do is we're going
to be building out the widgets feature.

69
00:04:29.550 --> 00:04:33.200
And so when we hop into our branch.

70
00:04:33.200 --> 00:04:35.561
So I will show you this
as well since we're

71
00:04:35.561 --> 00:04:40.759
here.
&gt;&gt; Lukas Ruebbelke: There

72
00:04:40.759 --> 00:04:45.120
are some additional branches here and
I think I can, yes.

73
00:04:46.150 --> 00:04:49.280
So you have your master branch which
has the completed application.

74
00:04:49.280 --> 00:04:54.910
We're going to start at 00 start,
I think descriptively enough.

75
00:04:54.910 --> 00:04:58.025
And that's going to be missing
the widgets feature as well as

76
00:04:58.025 --> 00:04:59.375
a lot of the other things.

77
00:04:59.375 --> 00:05:04.356
So we've broke this down to just
the basic, the bare minimum.

78
00:05:04.356 --> 00:05:08.530
And we will be building
out the widgets feature.

79
00:05:09.910 --> 00:05:16.910
Now the items feature is still there and
you can use that as a reference point.

80
00:05:17.980 --> 00:05:23.610
So for me I learn a lot by seeing
a preexisting working example.

81
00:05:24.700 --> 00:05:29.350
I think really, really good frameworks and
technologies that I like.

82
00:05:29.350 --> 00:05:32.560
Ionic and Firebase being a few of them.

83
00:05:32.560 --> 00:05:38.160
They pretty much enable document driven
development of, how do I do this?

84
00:05:38.160 --> 00:05:44.530
Well here's a working example, copy,
paste it in, modify, to suit your needs.

85
00:05:44.530 --> 00:05:47.100
So to that end is we're

86
00:05:47.100 --> 00:05:50.600
going to be building the widgets feature
in parallel to the items feature.

87
00:05:50.600 --> 00:05:54.520
So if you get stuck, you can kind of look
at what's happening in the items feature

88
00:05:54.520 --> 00:05:57.520
and use that as a reference point.

89
00:05:57.520 --> 00:05:58.970
As well, explore.

90
00:05:58.970 --> 00:06:00.070
Don't be afraid.

91
00:06:00.070 --> 00:06:03.530
And so if for some reason,
you just don't wanna call it widgets or

92
00:06:03.530 --> 00:06:07.130
you want it to look a little different or
play around with it, go ahead,

93
00:06:07.130 --> 00:06:11.040
that's how we learn, is by being
practitioners and getting into trenches.

94
00:06:12.670 --> 00:06:15.770
So, here's the first challenge.

95
00:06:17.540 --> 00:06:21.840
Just to make sure that everybody
can run the application.

96
00:06:21.840 --> 00:06:23.130
So, let's just take five minutes.

97
00:06:24.190 --> 00:06:29.102
And if you have the application
running here, on site.

98
00:06:29.102 --> 00:06:31.313
I would love to just see,
raise your hand and so

99
00:06:31.313 --> 00:06:34.510
just take a couple of minutes and
just make sure everybody is good.

100
00:06:35.850 --> 00:06:36.950
Okay, awesome.

