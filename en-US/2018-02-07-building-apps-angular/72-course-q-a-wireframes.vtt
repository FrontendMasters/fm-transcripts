WEBVTT

1
00:00:00.000 --> 00:00:03.300
&gt;&gt; Lukas Ruebbelke: I want to
just take a moment, for fun.

2
00:00:03.300 --> 00:00:08.000
One of our members here
sent over some wireframes.

3
00:00:08.000 --> 00:00:12.950
And I want to just take a moment and
kind of walk through that, and

4
00:00:12.950 --> 00:00:19.070
see from the eye of angular developer,
kind of how we would approach this.

5
00:00:20.190 --> 00:00:25.460
And so I mentioned this yesterday but
when you look at weather frames,

6
00:00:26.540 --> 00:00:30.160
I think intuitively,
we kind of start to see sections.

7
00:00:30.160 --> 00:00:33.200
And this is a pretty good way for

8
00:00:33.200 --> 00:00:37.220
us to start to think about
how we would do components.

9
00:00:37.220 --> 00:00:40.510
And so if we go to this PDF here.

10
00:00:42.140 --> 00:00:44.890
I think there might even
be like a weak motor.

11
00:00:44.890 --> 00:00:48.721
Let's do this.
&gt;&gt; Lukas Ruebbelke: I'm gonna skip this

12
00:00:48.721 --> 00:00:52.350
one for a moment cuz there's
not a lot happening here.

13
00:00:52.350 --> 00:00:54.230
Well, even to this.

14
00:00:54.230 --> 00:00:58.609
I kind of look at this and
what I'm seeing is

15
00:00:59.730 --> 00:01:02.590
really the only functionality right here,
is right here.

16
00:01:02.590 --> 00:01:05.290
So I'm looking and I'm saying,
everything here is pretty static.

17
00:01:05.290 --> 00:01:08.620
But this, something's happening here.

18
00:01:08.620 --> 00:01:13.060
So already I'd be like, draw a box
around it and point out what actually.

19
00:01:13.060 --> 00:01:19.490
Hold on one second, I'm not real PDF.

20
00:01:21.780 --> 00:01:22.513
Where is it here?

21
00:01:22.513 --> 00:01:25.784
Somebody knows how to draw.
&gt;&gt; Speaker 2: Go to Tools or Edit,

22
00:01:25.784 --> 00:01:29.640
either one.
&gt;&gt; Lukas Ruebbelke: You know what?

23
00:01:29.640 --> 00:01:30.930
Hold on.

24
00:01:30.930 --> 00:01:31.760
We do this in Preview.

25
00:01:31.760 --> 00:01:38.986
I know how to do this in Preview.
&gt;&gt; Lukas Ruebbelke: Come on.

26
00:01:38.986 --> 00:01:43.290
Thank god for post reduction.

27
00:01:45.550 --> 00:01:50.279
All right, here we go.
&gt;&gt; Lukas Ruebbelke: So

28
00:01:50.279 --> 00:01:55.750
a little bit larger and then we'll
go to tools, I think, and then here.

29
00:01:56.900 --> 00:01:58.260
Wait, that's not text.

30
00:01:58.260 --> 00:02:00.650
This, all right.

31
00:02:00.650 --> 00:02:05.270
So already I'm kind of just looking at
this, and there's functionality here.

32
00:02:05.270 --> 00:02:06.880
Everything above this is just static.

33
00:02:06.880 --> 00:02:08.220
I wouldn't even worry about that.

34
00:02:08.220 --> 00:02:10.790
You know, just probably put that in or
just part of it.

35
00:02:10.790 --> 00:02:13.826
But right here,
I'm saying if this is the log in screen,

36
00:02:13.826 --> 00:02:19.320
this would be a component within it.
&gt;&gt; Lukas Ruebbelke: So if we go here.

37
00:02:20.810 --> 00:02:26.570
Similar thing is that, I would treat
this as kinda a container component,

38
00:02:26.570 --> 00:02:30.602
and then I would just have
the small component here.

39
00:02:30.602 --> 00:02:35.870
So, so far, not a lot happening, but
this is where I'm starting to think of.

40
00:02:35.870 --> 00:02:40.450
We have the container
component such as log in but

41
00:02:40.450 --> 00:02:43.660
then you would put this
component within it.

42
00:02:43.660 --> 00:02:46.920
The reason being is now
you can pick it up.

43
00:02:46.920 --> 00:02:51.320
And what I may also do,
because I'm thinking about reuse,

44
00:02:51.320 --> 00:02:53.060
is I might not even keep
this title in here.

45
00:02:53.060 --> 00:02:57.239
I would just say if I'm going
to use this in multiple places.

46
00:02:58.240 --> 00:03:00.220
This right here is pretty generic.

47
00:03:00.220 --> 00:03:03.820
There's nothing specific about the page or
the application.

48
00:03:05.460 --> 00:03:07.450
Now this gets a little
bit more interesting.

49
00:03:08.450 --> 00:03:15.220
So now I'm looking at this, and
already we see four of the same thing.

50
00:03:15.220 --> 00:03:18.400
So that's, to me,
be to them like, okay, component.

51
00:03:18.400 --> 00:03:26.020
So when you start to see repetition,
that's a pretty good indication

52
00:03:26.020 --> 00:03:31.620
that you are in the neighborhood, or
that's a good candidate for a component.

53
00:03:31.620 --> 00:03:35.597
So just as we do not duplicate codes,
so the drive principle,

54
00:03:35.597 --> 00:03:37.710
do not repeat yourself.

55
00:03:37.710 --> 00:03:41.950
From for a visual excercise we
can also look at it and say like,

56
00:03:41.950 --> 00:03:44.720
this pattern visually is repeating itself.

57
00:03:46.180 --> 00:03:50.710
And so, I would say these have

58
00:03:52.040 --> 00:03:56.930
the kind of the same
common visual element.

59
00:03:56.930 --> 00:04:00.470
So the data model that's driving this,
is the same.

60
00:04:01.490 --> 00:04:06.550
But what I would also
do is I'm looking here,

61
00:04:06.550 --> 00:04:11.480
and I'm seeing, and I'm gonna do it over
here, so we don't get crowded red lines.

62
00:04:12.560 --> 00:04:14.180
Is within this, I'm seeing some additional

63
00:04:15.330 --> 00:04:20.261
opportunities to break the cell.
&gt;&gt; Lukas Ruebbelke: And so

64
00:04:20.261 --> 00:04:23.810
now I would have a standalone
video component.

65
00:04:23.810 --> 00:04:27.540
Because then we can reuse that anywhere,
and

66
00:04:27.540 --> 00:04:32.294
what I would also probably do,
&gt;&gt; Lukas Ruebbelke: Is at

67
00:04:32.294 --> 00:04:36.455
a minimum,
&gt;&gt; Lukas Ruebbelke: Create

68
00:04:36.455 --> 00:04:37.580
another component.

69
00:04:39.600 --> 00:04:42.940
That wraps kind of this card footer here.

70
00:04:44.260 --> 00:04:46.630
So we're like what are the things
that we are repeating.

71
00:04:47.790 --> 00:04:51.380
Or what things do we want to
encapsulate and use over and over.

72
00:04:51.380 --> 00:04:53.371
And so I'm presuming up here,

73
00:04:53.371 --> 00:04:58.801
this is actually part of the layout.
&gt;&gt; Lukas Ruebbelke: It's

74
00:04:58.801 --> 00:05:01.490
having some kind of like a nav
bar that maybe you could pick up.

75
00:05:01.490 --> 00:05:04.420
So looking and seeing what things
are kind of self encapsulated.

76
00:05:05.730 --> 00:05:06.980
&gt;&gt; Lukas Ruebbelke: Now the beauty of this

77
00:05:06.980 --> 00:05:11.495
is, if you notice we've got this component
here, we can now go to this view,

78
00:05:11.495 --> 00:05:13.360
it's the same exact thing.

79
00:05:13.360 --> 00:05:14.759
So we're not recreating the wheel.

80
00:05:16.280 --> 00:05:18.600
We're just kind of reconfiguring
it by moving stuff around.

81
00:05:18.600 --> 00:05:23.370
So if you have this piece done, going and

82
00:05:23.370 --> 00:05:26.980
doing this piece is easy.

83
00:05:26.980 --> 00:05:29.690
Cuz it's just kind of
a subset of all the videos.

84
00:05:29.690 --> 00:05:31.840
We're just rearranging the components.

85
00:05:31.840 --> 00:05:35.660
So here, if we pass in a video
object that has the video piece and

86
00:05:35.660 --> 00:05:36.650
kind of the description.

87
00:05:38.180 --> 00:05:41.210
Then that's all we know, is we just kind
of put it on there, fasten this object,

88
00:05:41.210 --> 00:05:41.940
it's gonna render.

89
00:05:43.780 --> 00:05:45.870
And so let's do this one.

90
00:05:45.870 --> 00:05:46.780
Kind of a similar thing.

91
00:05:48.080 --> 00:05:49.987
So based on the master detailed view that

92
00:05:49.987 --> 00:05:54.280
we've done.
&gt;&gt; Lukas Ruebbelke: Where,

93
00:05:57.370 --> 00:05:59.479
&gt;&gt; Lukas Ruebbelke: I'm seeing kind of two

94
00:05:59.479 --> 00:06:02.365
main immediate candidates for

95
00:06:02.365 --> 00:06:08.070
components.
&gt;&gt; Lukas Ruebbelke: Actually,

96
00:06:08.070 --> 00:06:10.520
I'm seeing three now
that you mentioned it.

97
00:06:10.520 --> 00:06:17.049
So this right here, so
this might be a family user of some sort.

98
00:06:18.370 --> 00:06:22.060
Then I'm seeing this right

99
00:06:22.060 --> 00:06:26.917
here.
&gt;&gt; Lukas Ruebbelke: Because we

100
00:06:26.917 --> 00:06:29.800
could use this somewhere else.

101
00:06:29.800 --> 00:06:30.790
But in fact,

102
00:06:30.790 --> 00:06:35.345
what I'm actually seeing is this.
&gt;&gt; Lukas Ruebbelke: And

103
00:06:35.345 --> 00:06:38.410
I'm seeing this right here.

104
00:06:38.410 --> 00:06:41.950
Just notice, it's almost the same thing,
it's a component.

105
00:06:41.950 --> 00:06:43.710
So I had to create this, you know,

106
00:06:43.710 --> 00:06:48.640
kind of status thing where it
has been name or whatever.

107
00:06:49.730 --> 00:06:53.200
And so I presume what happens is you click
on this and then this shows underneath.

108
00:06:53.200 --> 00:06:56.000
So kind of one main component but
it's two sub components,

109
00:06:56.000 --> 00:06:58.400
that one is toggling the other.

110
00:06:58.400 --> 00:07:03.787
You'll definitely, you know this would
be wrapped in a larger component.

111
00:07:03.787 --> 00:07:05.748
But you would drop it on there and

112
00:07:05.748 --> 00:07:10.769
then from here,
&gt;&gt; Lukas Ruebbelke: And

113
00:07:10.769 --> 00:07:14.830
then obviously there's
this side nav thing over

114
00:07:14.830 --> 00:07:21.452
here.
&gt;&gt; Lukas Ruebbelke: And

115
00:07:21.452 --> 00:07:24.120
I think that's most of them.
&gt;&gt; Lukas Ruebbelke: And so

116
00:07:24.120 --> 00:07:28.770
these obviously same thing.

117
00:07:28.770 --> 00:07:29.540
I'd break them down.

118
00:07:31.650 --> 00:07:33.420
Low and behold, videos again.

119
00:07:35.540 --> 00:07:38.018
This is a good one.

120
00:07:38.018 --> 00:07:44.084
Same thing, so here,
we have this thing that we are repeating.

121
00:07:44.084 --> 00:07:50.333
What's interesting is I may
depending on the use case.

122
00:07:50.333 --> 00:07:56.621
This and this could potentially
be the same component and

123
00:07:56.621 --> 00:08:03.960
you just set a flag to turn this
button on or off based on the status.

124
00:08:06.880 --> 00:08:10.330
Now, how I would organize this, so
we're looking at the component level.

125
00:08:10.330 --> 00:08:17.050
If we were going a step higher that these
would be presentation, in parlance.

126
00:08:17.050 --> 00:08:18.940
Yes, I would try to do it all by binding.

127
00:08:18.940 --> 00:08:21.710
Like, take this thing, render it.

128
00:08:21.710 --> 00:08:27.290
If somebody clicks accept or review later,
capture that as an output and send down.

129
00:08:28.450 --> 00:08:33.560
Now everyone of these distinct routes,
that would be a container component.

130
00:08:33.560 --> 00:08:37.100
So the container component renders
the page and does the layout.

131
00:08:37.100 --> 00:08:40.830
But the actual rendering
of the data in the binding

132
00:08:40.830 --> 00:08:42.580
happens in the presentational component.

133
00:08:43.720 --> 00:08:47.098
And so looking here,

134
00:08:47.098 --> 00:08:52.180
kind of a container component.

135
00:08:52.180 --> 00:08:56.254
So what is, yeah, so

136
00:08:56.254 --> 00:09:00.080
I think these are making a little bit more
sense but what you're doing is now saying,

137
00:09:00.080 --> 00:09:04.490
this is a very distinct piece in the
application through a container component.

138
00:09:05.490 --> 00:09:08.660
And then from there start to lay it
out into presentational components.

139
00:09:09.960 --> 00:09:15.490
And then if we were taking it a step
further, from a data model standpoint,

140
00:09:15.490 --> 00:09:18.140
at which point I would introduce NGRX and

141
00:09:18.140 --> 00:09:22.350
Redux, and all of this state would
then live in the application store.

142
00:09:22.350 --> 00:09:25.300
And then, basically hydrate

143
00:09:25.300 --> 00:09:28.940
every single container component as
you work through the application.

144
00:09:28.940 --> 00:09:30.650
What I also may do, and I'll show a quick.

145
00:09:30.650 --> 00:09:33.060
We'll talk about it briefly today is,

146
00:09:34.060 --> 00:09:38.140
depending on the usage of this
application, is I would even possibly

147
00:09:38.140 --> 00:09:43.550
break these sessions into standalone
modules and lazy a little bit.

148
00:09:44.950 --> 00:09:47.840
So for instance if somebody
is going into this main page.

149
00:09:47.840 --> 00:09:52.410
So let's say this is, like this is where
people wanna be, it's the homepage.

150
00:09:52.410 --> 00:09:54.600
Like I would just put that
right in the main module.

151
00:09:54.600 --> 00:09:56.600
It's the first thing they're gonna see.

152
00:09:56.600 --> 00:09:59.340
But, let's see one of these kind of more,

153
00:10:01.000 --> 00:10:05.620
kind of side fringe views that maybe
they don't go through every time, so

154
00:10:05.620 --> 00:10:07.390
it might be one out of
20 times they'll do it.

155
00:10:08.390 --> 00:10:13.880
Then depending on usage, I will probably
break this into a stand alone module,

156
00:10:13.880 --> 00:10:17.880
so it will still be an application but
I'd wrap it in a module and

157
00:10:17.880 --> 00:10:20.620
then I would [INAUDIBLE].

158
00:10:20.620 --> 00:10:22.220
And so only when they go to this,

159
00:10:22.220 --> 00:10:24.790
are we actually incurring
the overhead of that payload.

160
00:10:27.120 --> 00:10:28.430
Does that make sense?

161
00:10:28.430 --> 00:10:29.030
Yes.
&gt;&gt; Speaker 3: So

162
00:10:29.030 --> 00:10:30.570
still the app model will be there.

163
00:10:30.570 --> 00:10:35.180
And then say there's a motion model for
connect friends and family and home and

164
00:10:35.180 --> 00:10:36.770
upload, one model I'd say.
&gt;&gt; Lukas Ruebbelke: And

165
00:10:36.770 --> 00:10:42.980
I will say this is, we're really keen on,
I think lazy loading people like do it.

166
00:10:42.980 --> 00:10:44.110
Like lazy load.

167
00:10:44.110 --> 00:10:47.495
Like if you're not gonna do it or
if you're not gonna use it,

168
00:10:47.495 --> 00:10:52.610
then don't head to user
download it up front.

169
00:10:54.730 --> 00:11:01.700
A word of advice on that is making
a server set call on a mobile device.

170
00:11:01.700 --> 00:11:06.184
From a performance sample and it's pretty
much one of the worst things you can do.

171
00:11:06.184 --> 00:11:10.914
The reason being is when you need
to make a server call you have to

172
00:11:10.914 --> 00:11:15.160
essentially turn on
the hardware to make the call.

173
00:11:15.160 --> 00:11:17.390
It has to reach out to the tower.

174
00:11:17.390 --> 00:11:22.610
Do kind of that hand shakey thing,
go get it and then unwind itself.

175
00:11:22.610 --> 00:11:26.960
So it's not quite as efficient as,
for instance, Wi-Fi or whatever.

176
00:11:26.960 --> 00:11:30.050
And so, it's a very,
very inefficient thing.

177
00:11:30.050 --> 00:11:35.500
So if you're doing a very mobile heavy
app, I would actually try to bundle it

178
00:11:35.500 --> 00:11:41.430
into a single bundle, and you're better
incurring that payload up front.

179
00:11:41.430 --> 00:11:43.880
Been doing a bunch of round trips,
because that's way worse.

180
00:11:43.880 --> 00:11:48.270
And so if you just kind of go and
look at any kind of the performance stuff,

181
00:11:48.270 --> 00:11:53.610
especially on mobile devices, you know,
XHR calls, and remote asset requests

182
00:11:53.610 --> 00:11:56.550
is kind of the worst thing you can
do from a performance standpoint.

183
00:11:56.550 --> 00:12:00.870
Not only is it slow, but it actually
drains the resources on your device.

184
00:12:00.870 --> 00:12:03.730
Just something to put it out there that
it's really easy to get into this thing

185
00:12:03.730 --> 00:12:06.860
of like, it works on desktop,
lazy loading.

186
00:12:06.860 --> 00:12:08.310
It's like, yeah, that's probably okay.

187
00:12:08.310 --> 00:12:12.860
But if you're on a mobile device, really
weigh the cost of actually making that

188
00:12:12.860 --> 00:12:14.931
server call to get that remote access.
&gt;&gt; Speaker 3: Okay.

189
00:12:14.931 --> 00:12:15.704
&gt;&gt; Lukas Ruebbelke: Okay?

190
00:12:15.704 --> 00:12:16.852
&gt;&gt; Speaker 2: Mm-hm.

