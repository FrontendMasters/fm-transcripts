WEBVTT

1
00:00:00.320 --> 00:00:05.340
&gt;&gt; Lukas Ruebbelke: Let's move
on to observable fundamentals.

2
00:00:05.340 --> 00:00:06.240
I love this.

3
00:00:06.240 --> 00:00:08.880
I love observables so much it hurts.

4
00:00:11.280 --> 00:00:18.553
So, who here, outside of what we've just
done, has ever used an observable or

5
00:00:18.553 --> 00:00:23.997
would say that they are pretty
familiar with how they work?

6
00:00:23.997 --> 00:00:27.138
&gt;&gt; Speaker 2: I have used in
the syllabus elect work, but

7
00:00:27.138 --> 00:00:29.765
they were similar to observables?

8
00:00:29.765 --> 00:00:31.763
&gt;&gt; Lukas Ruebbelke: Okay.

9
00:00:31.763 --> 00:00:38.190
&gt;&gt; Speaker 2: Where you would have an
object which was tied from start to end.

10
00:00:38.190 --> 00:00:42.710
&gt;&gt; Lukas Ruebbelke: Okay, so
it's safe to say then this

11
00:00:42.710 --> 00:00:45.959
is probably kind of a fairly
new concept for everyone here.

12
00:00:47.010 --> 00:00:53.530
Okay, how many people here understand
the concept of promises at least?

13
00:00:54.530 --> 00:01:00.104
That something is happening in the future
and were going to give you this object

14
00:01:00.104 --> 00:01:05.510
that when this thing eventually happens
were going to actually notify you so

15
00:01:05.510 --> 00:01:11.096
that you can perform so unit of logic so
that is kind of the essence of a promise.

16
00:01:11.096 --> 00:01:17.298
If you're not familiar with promises,
kind of the best way to think of it

17
00:01:17.298 --> 00:01:23.413
is if you've ever went to like Chili's,
or one of those restaurants.

18
00:01:23.413 --> 00:01:26.060
You show up with four of your buddies,
you're like, I need a time.

19
00:01:26.060 --> 00:01:28.480
They're like,
that's gonna be 20 minutes probably.

20
00:01:28.480 --> 00:01:29.280
What do they do?

21
00:01:29.280 --> 00:01:30.040
They give you a beeper.

22
00:01:31.210 --> 00:01:35.710
So that is equivalent of a promise.

23
00:01:35.710 --> 00:01:40.220
So you take your beeper and you go outside
and you just hang out, or whatever you're

24
00:01:40.220 --> 00:01:47.080
gonna do, but you know at some point in
the future this beeper is going to go off.

25
00:01:47.080 --> 00:01:48.960
AKA it's going to resolve.

26
00:01:48.960 --> 00:01:55.840
And when that does, then, you go inside
and say, hey, I need to get my table.

27
00:01:55.840 --> 00:02:00.850
So, then you basically process the action
that is intended had you walked up and

28
00:02:00.850 --> 00:02:01.920
they had a table right away.

29
00:02:01.920 --> 00:02:07.910
So what you're doing is you're deferring
acting on something, some goal Into

30
00:02:07.910 --> 00:02:12.500
the future and that promise, essentially
when it fires that's when you can do it,

31
00:02:12.500 --> 00:02:16.870
so just think of that concept if something
is going to happen you have this object.

32
00:02:16.870 --> 00:02:22.650
Now the difference is, subscribe or
observables work the same way,

33
00:02:22.650 --> 00:02:26.140
except instead of getting one
object you can get many objects,

34
00:02:26.140 --> 00:02:31.290
it is literally a stream of
data That you can subscribe to.

35
00:02:31.290 --> 00:02:35.820
In fact if I have time tomorrow,
I really really really want to,

36
00:02:35.820 --> 00:02:38.500
because I kind of want to because
I feel like we've been working

37
00:02:38.500 --> 00:02:41.980
really hard these last few days maybe
introduce a few fun things tomorrow, so

38
00:02:41.980 --> 00:02:47.490
if i have a chance maybe a quick fire
base example to show how this works.

39
00:02:47.490 --> 00:02:51.090
I totally saw your head like,
shoot up you were just like " ?" Firebase?

40
00:02:51.090 --> 00:02:55.250
So if I can just to kind of amplify
what we are talking here in terms of

41
00:02:55.250 --> 00:02:57.890
data streaming continually to you.

