WEBVTT

1
00:00:00.420 --> 00:00:04.090
&gt;&gt; Lukas Ruebbelke: Really the goal
here is to take this collection and

2
00:00:04.090 --> 00:00:05.240
move it to a service.

3
00:00:07.790 --> 00:00:08.890
So I'm just going to copy this.

4
00:00:10.086 --> 00:00:17.270
And I am going to put the widget
service into the shared folder.

5
00:00:19.760 --> 00:00:26.150
Widget Service
&gt;&gt; Lukas Ruebbelke: Sure, why not.

6
00:00:26.150 --> 00:00:34.128
All right, class, import decorate.
&gt;&gt; Lukas Ruebbelke: That's crazy,

7
00:00:34.128 --> 00:00:38.625
just going to paste this
in since we're here.

8
00:00:42.600 --> 00:00:43.827
&gt;&gt; Lukas Ruebbelke: Then,

9
00:00:47.751 --> 00:00:49.553
&gt;&gt; Lukas Ruebbelke: You can see here that

10
00:00:49.553 --> 00:00:54.750
I decorated it, and
did the imports all in one fell swoop.

11
00:00:55.870 --> 00:00:58.600
And so here, this is it,

12
00:00:58.600 --> 00:01:03.570
with the class it's the container that
hold the collection, and then let's go to.

13
00:01:03.570 --> 00:01:05.836
Actually let's do this and
stick with convention.

14
00:01:05.836 --> 00:01:13.062
[BLANK AUDIO] WidgetService and

15
00:01:13.062 --> 00:01:21.015
then, let's hop in to our app module.

16
00:01:27.107 --> 00:01:28.189
&gt;&gt; Lukas Ruebbelke: Yikes, so

17
00:01:28.189 --> 00:01:32.890
I just imported it and
we'll go to providers.

18
00:01:34.920 --> 00:01:38.531
I've created it, I've exposed it and

19
00:01:38.531 --> 00:01:43.675
I'm going to consume it, so
in our widgets component,

20
00:01:43.675 --> 00:01:49.431
over here.
&gt;&gt; Lukas Ruebbelke: I'm

21
00:01:49.431 --> 00:01:53.020
going to just take this and delete it.

22
00:01:54.160 --> 00:01:56.605
Because we're going to
get it from the service.

23
00:01:56.605 --> 00:02:01.954
Now, let's consume it,

24
00:02:01.954 --> 00:02:08.040
private, which is service.

25
00:02:13.980 --> 00:02:18.230
Through the search assignment is
now available to, for consumption,

26
00:02:18.230 --> 00:02:20.590
and the rest of the class.

27
00:02:20.590 --> 00:02:24.052
So we'll go with this style widgets,
equals

28
00:02:24.052 --> 00:02:31.549
this.widgetsService.widgets.

29
00:02:31.549 --> 00:02:35.841
And now, in theory,
that when I go back to the page,

30
00:02:35.841 --> 00:02:41.805
let me refresh this.
&gt;&gt; Lukas Ruebbelke: No provider for

31
00:02:41.805 --> 00:02:43.040
Caffeine service?

32
00:02:43.040 --> 00:02:43.670
What happened here?

33
00:02:45.280 --> 00:02:48.130
That's right, you sabotaged me.

34
00:02:49.620 --> 00:02:54.995
Let's go back to my app module,
bear with me, I was wondering why that was

35
00:02:54.995 --> 00:03:03.087
grayed out.
&gt;&gt; Lukas Ruebbelke: We'll

36
00:03:03.087 --> 00:03:11.555
go here.
&gt;&gt; Lukas Ruebbelke: Well,

37
00:03:11.555 --> 00:03:15.040
let's go to widgets,
you can see that it's still happening.

38
00:03:15.040 --> 00:03:18.093
But let's prove that it
is indeed coming from our

39
00:03:18.093 --> 00:03:21.566
service
&gt;&gt; Lukas Ruebbelke: Let me just close some

40
00:03:21.566 --> 00:03:25.550
of this down,
we're starting to get a little bit messy.

41
00:03:30.903 --> 00:03:34.810
&gt;&gt; Lukas Ruebbelke: Yellow!

42
00:03:37.537 --> 00:03:38.864
&gt;&gt; Lukas Ruebbelke: There we go.

43
00:03:40.477 --> 00:03:41.369
&gt;&gt; Lukas Ruebbelke: Create,

44
00:03:41.369 --> 00:03:46.276
expose, consume.
&gt;&gt; Lukas Ruebbelke: Any questions

45
00:03:46.276 --> 00:03:46.780
about this?

46
00:03:48.010 --> 00:03:51.360
Are we seeing how a service is a class?

47
00:03:51.360 --> 00:03:54.360
The component is, for
the most part, a class.

48
00:03:54.360 --> 00:03:57.790
And we're kind of doing at this point,
a lot of the same things over and over.

49
00:03:57.790 --> 00:04:01.570
So this is kind of
the beauty of convention,

50
00:04:01.570 --> 00:04:04.210
is once you understand properties,
methods, the shape,

51
00:04:04.210 --> 00:04:09.082
then it applies across the board.
&gt;&gt; Speaker 2: Could you

52
00:04:09.082 --> 00:04:13.214
quick go back to the widgets component,

53
00:04:13.214 --> 00:04:19.786
just where you assigned it.
&gt;&gt; Speaker 2: Widgets

54
00:04:19.786 --> 00:04:24.774
service dot
&gt;&gt; Lukas Ruebbelke: Now if I do need

55
00:04:24.774 --> 00:04:28.360
to go back to any one of these files for
somebody to witness,

56
00:04:28.360 --> 00:04:31.390
at least one of the ways to do it,
then let me know.

57
00:04:32.560 --> 00:04:37.040
Now the other part of this, and so kind
of I get into interfaces, the first time,

58
00:04:37.040 --> 00:04:41.970
around services, cuz that's where
it's starting to pass data around,

59
00:04:43.400 --> 00:04:45.790
and it's kinda nice to know what it is.

60
00:04:45.790 --> 00:04:53.020
So in the shared folder I'm going
to click on Typescript file and

61
00:04:53.020 --> 00:04:57.935
we'll just go widget.model.ts.

62
00:04:57.935 --> 00:05:03.479
Export interface

63
00:05:03.479 --> 00:05:07.640
Widget, ID is a number I think,

64
00:05:10.110 --> 00:05:15.150
name is a string and description.

65
00:05:15.150 --> 00:05:21.480
And then what you can do is well,
but sometimes you want

66
00:05:21.480 --> 00:05:25.420
to have properties that do not necessarily
have to be fulfilled, they're optional.

67
00:05:25.420 --> 00:05:30.180
And so, you could for instance have
a widget, that just has an ID and a name.

68
00:05:30.180 --> 00:05:35.740
So what you're gonna do is you're gonna
mark these certain properties as optional,

69
00:05:35.740 --> 00:05:38.730
and it would still satisfy the interface.

70
00:05:38.730 --> 00:05:41.100
This is what we're saying is,
a widget has to have an id,

71
00:05:41.100 --> 00:05:45.240
but we'd like it to have a name and
a description as well.

72
00:05:45.240 --> 00:05:52.804
And so from here, let's go and,
&gt;&gt; Lukas Ruebbelke: Export this as well,

73
00:05:52.804 --> 00:05:54.680
so, export {widget}.

74
00:05:54.680 --> 00:06:01.700
And so we're just going to,
from Widget model.

75
00:06:03.930 --> 00:06:09.600
And then what we can do
is interestingly enough,

76
00:06:09.600 --> 00:06:12.410
when we go to the widget component,
it won't come from arrow wall.

77
00:06:12.410 --> 00:06:17.680
But I still want to expose it, is we
know that this is going to be a widget.

78
00:06:17.680 --> 00:06:22.978
So we go here
&gt;&gt; Lukas Ruebbelke: But

79
00:06:22.978 --> 00:06:25.860
what do we know about widgets?

80
00:06:25.860 --> 00:06:32.910
That it's an actual array of widget
objects, and so you can do this two ways.

81
00:06:32.910 --> 00:06:39.640
And I don't think one is better than
the other, is you can go, like this.

82
00:06:39.640 --> 00:06:46.620
So this is using generic notation, or, and
if I say something stupid here about this,

83
00:06:46.620 --> 00:06:51.240
feel free to jump in clarify, so
this is kind of the generic notation.

84
00:06:51.240 --> 00:06:54.370
You'll see this a lot when you're
dealing with observables, and

85
00:06:54.370 --> 00:06:56.780
you may not know what's
coming down the pipeline, or,

86
00:06:56.780 --> 00:07:00.360
this is kind of what I prefer
Is using this version.

87
00:07:00.360 --> 00:07:03.650
As far as I know they are exactly
the same, they do the exact same thing,

88
00:07:03.650 --> 00:07:06.400
it's just six of one
half a dozen of another.

89
00:07:06.400 --> 00:07:10.200
But now we're saying this is
an array of widget objects.

90
00:07:11.570 --> 00:07:13.120
And so if we start to
reference something else, or

91
00:07:13.120 --> 00:07:19.220
put something else in there that's not
a widget, then we will hear all about it.

92
00:07:19.220 --> 00:07:24.106
In fact let's see what happens here,

93
00:07:24.106 --> 00:07:27.930
this widgets.push let's go

94
00:07:32.034 --> 00:07:35.199
&gt;&gt; Lukas Ruebbelke: I don't know test

95
00:07:35.199 --> 00:07:42.880
hello foo equals bar.
&gt;&gt; Lukas Ruebbelke: So

96
00:07:42.880 --> 00:07:46.080
you can see here it's already saying like,
whoa, whoa, whoa, whoa, whoa.

97
00:07:46.080 --> 00:07:47.950
Like this isn't a widget, like, stop.

98
00:07:49.220 --> 00:07:54.780
So this is really handy
when you kind of know, like

99
00:07:54.780 --> 00:07:58.599
this was expecting this one thing, and
this unfortunately did not satisfy this.

100
00:08:00.240 --> 00:08:05.005
Although I think if you go
&gt;&gt; Lukas Ruebbelke: So

101
00:08:05.005 --> 00:08:06.500
this is pretty neat.

102
00:08:06.500 --> 00:08:08.510
It's telling me exactly
what I have to have.

103
00:08:08.510 --> 00:08:12.130
ID, description and name.

104
00:08:13.830 --> 00:08:19.690
So this is kind of one of the benefits
of using typing within TypeScript

