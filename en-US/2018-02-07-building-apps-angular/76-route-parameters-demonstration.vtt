WEBVTT

1
00:00:00.350 --> 00:00:04.210
&gt;&gt; Lukas Ruebbelke: So
let me hop into our app here.

2
00:00:04.210 --> 00:00:05.160
So let's look at this route.

3
00:00:06.380 --> 00:00:09.813
If we go down to the App Routing Module,

4
00:00:09.813 --> 00:00:15.902
it's right here.
&gt;&gt; Lukas Ruebbelke: So item/id.

5
00:00:15.902 --> 00:00:20.867
Now, notice
&gt;&gt; Lukas Ruebbelke: I'm now routing to

6
00:00:20.867 --> 00:00:21.670
an ItemComponent.

7
00:00:23.120 --> 00:00:24.396
So I'll show you what that is in just

8
00:00:24.396 --> 00:00:31.723
a second.
&gt;&gt; Lukas Ruebbelke: So

9
00:00:31.723 --> 00:00:36.317
we'll go one.
&gt;&gt; Lukas Ruebbelke: I have no idea what

10
00:00:36.317 --> 00:00:43.736
happened there.
&gt;&gt; Lukas Ruebbelke: Is it,

11
00:00:43.736 --> 00:00:45.600
hold on.

12
00:00:55.395 --> 00:00:57.840
&gt;&gt; Lukas Ruebbelke: You can see now
it's pre-populating with the red item.

13
00:00:59.360 --> 00:01:00.210
What if we change it here?

14
00:01:02.180 --> 00:01:09.824
Orange, oops.
&gt;&gt; Lukas Ruebbelke: And

15
00:01:09.824 --> 00:01:14.244
so on.
&gt;&gt; Lukas Ruebbelke: Now, what's happening

16
00:01:14.244 --> 00:01:19.180
is, you'll notice here,
it's just the item details component.

17
00:01:21.300 --> 00:01:25.969
Because this is a presentation component,
what I did, and I recommend for

18
00:01:25.969 --> 00:01:31.246
every route, having a container component,
and then a presentation components.

19
00:01:31.246 --> 00:01:36.490
So that if we go here to
&gt;&gt; Lukas Ruebbelke: It's

20
00:01:36.490 --> 00:01:40.892
around here somewhere.
&gt;&gt; Lukas Ruebbelke: So

21
00:01:40.892 --> 00:01:45.810
I is after H apparently.
&gt;&gt; Lukas Ruebbelke: What do you

22
00:01:45.810 --> 00:01:46.740
think we'll see in here?

23
00:01:48.050 --> 00:01:52.450
If ItemComponent is a container component,
what is it going to contain?

24
00:01:54.250 --> 00:01:59.790
Just
&gt;&gt; Lukas Ruebbelke: The basic layout.

25
00:01:59.790 --> 00:02:02.360
So it's just saying,
these are the things I want in here.

26
00:02:02.360 --> 00:02:07.149
It's actually not doing any real layout
itself, other than to arrange its

27
00:02:07.149 --> 00:02:12.234
presentational components on the page.
&gt;&gt; Lukas Ruebbelke: And

28
00:02:12.234 --> 00:02:14.970
you'll notice, we're passing in an item.

29
00:02:17.000 --> 00:02:24.050
So this is why this item component exists,
and if I click in here,

30
00:02:24.050 --> 00:02:27.840
it's still the same presentation or
component, there's nothing in here.

31
00:02:27.840 --> 00:02:30.620
And so, I've just creating this wrapper
because I do not want item detail

32
00:02:30.620 --> 00:02:33.090
component to have to worry about
how's it's getting it's data.

33
00:02:33.090 --> 00:02:36.280
I just wanna pass it in and let it render.

34
00:02:36.280 --> 00:02:42.757
So, that if we go here
&gt;&gt; Lukas Ruebbelke: Just defining this,

35
00:02:42.757 --> 00:02:48.200
and then we're pulling it off of this.
&gt;&gt; Speaker 2: I

36
00:02:48.200 --> 00:02:51.360
don't understand the sign there.
&gt;&gt; Lukas Ruebbelke: I think

37
00:02:51.360 --> 00:02:55.030
there's a reason,
I just actually did a variation of this.

38
00:02:55.030 --> 00:02:58.105
Let's see if we can figure this

39
00:02:58.105 --> 00:03:00.912
out real quick.
&gt;&gt; Speaker 3: I think it's converted to

40
00:03:00.912 --> 00:03:04.470
a number.
&gt;&gt; Lukas Ruebbelke: That might be,

41
00:03:05.710 --> 00:03:08.980
there are some kind of interesting
JavaScript like coercion style,

42
00:03:08.980 --> 00:03:10.600
I bet that's what it is.

43
00:03:10.600 --> 00:03:12.425
I think it's shorthand for
like take this and

44
00:03:12.425 --> 00:03:16.740
convert it into a number.
&gt;&gt; Lukas Ruebbelke: Clever.

45
00:03:17.840 --> 00:03:20.310
I think,
I expect like Kyle Simpson to jump out,

46
00:03:20.310 --> 00:03:24.670
like give us a high five right now,
this is a master of coercion,

47
00:03:24.670 --> 00:03:29.090
and what's actually happening under
the hood and what's the scope and stuff.

48
00:03:29.090 --> 00:03:32.881
By the way, his courses here are amazing
and his books are phenomenal.

49
00:03:32.881 --> 00:03:38.357
I was kind of hoping you would pull like
a kool aid man right now and just like,

50
00:03:38.357 --> 00:03:43.685
boom, yeah, JavaScript coercion.
&gt;&gt; Lukas Ruebbelke: Thank God for

51
00:03:43.685 --> 00:03:47.466
post production.
&gt;&gt; Lukas Ruebbelke: So

52
00:03:47.466 --> 00:03:51.480
do we have any questions
about how this is working?

53
00:03:51.480 --> 00:03:58.840
We're simply creating a route,
creating a parameter, and then.

54
00:03:58.840 --> 00:04:02.370
So route with a parameter
that we can change.

55
00:04:02.370 --> 00:04:07.087
And then in our container component we're
just capturing that stream that's coming

56
00:04:07.087 --> 00:04:10.491
off the route, and then using it
to make a call to the server and

57
00:04:10.491 --> 00:04:17.162
get the data that we actually want.
&gt;&gt; Lukas Ruebbelke: Having

58
00:04:17.162 --> 00:04:21.361
tried to do this through other means
in about three times the code or more,

59
00:04:21.361 --> 00:04:24.960
I'm pretty happy we're doing
this in the three lines of code.

60
00:04:26.010 --> 00:04:31.225
It's pretty awesome.
&gt;&gt; Lukas Ruebbelke: So on that note,

61
00:04:31.225 --> 00:04:35.820
it's two o'clock,
let's take a ten minute break.

62
00:04:37.250 --> 00:04:42.399
After I answer your question [SOUND].
&gt;&gt; Speaker 2: I can do

63
00:04:42.399 --> 00:04:47.450
patternmap.map, and modify the parameter,
and then do a search pattern, right?

64
00:04:47.450 --> 00:04:51.702
Because it is a stream, so I mean if
I have to do a validation before or

65
00:04:51.702 --> 00:04:53.178
something like that.
&gt;&gt; Lukas Ruebbelke: So

66
00:04:53.178 --> 00:04:55.996
that's a good question.
&gt;&gt; Lukas Ruebbelke: Let's see what

67
00:04:55.996 --> 00:05:02.287
happens.
&gt;&gt; Lukas Ruebbelke: Map

68
00:05:07.098 --> 00:05:07.822
&gt;&gt; Lukas Ruebbelke: And from here

69
00:05:10.616 --> 00:05:11.283
&gt;&gt; Lukas Ruebbelke: And so now I'm

70
00:05:11.283 --> 00:05:12.231
actually curious.

71
00:05:27.452 --> 00:05:28.734
&gt;&gt; Speaker 2: You'll have to do params is

72
00:05:28.734 --> 00:05:32.720
equal to.
&gt;&gt; Lukas Ruebbelke: No should return-

73
00:05:32.720 --> 00:05:34.838
&gt;&gt; Speaker 2: ID is equal to.

74
00:05:36.542 --> 00:05:38.526
&gt;&gt; Lukas Ruebbelke: What am I missing

75
00:05:38.526 --> 00:05:39.430
here?

76
00:05:39.430 --> 00:05:42.740
Param.
&gt;&gt; Speaker 2: ID equal to

77
00:05:42.740 --> 00:05:43.736
something.
&gt;&gt; Lukas Ruebbelke: No,

78
00:05:43.736 --> 00:05:45.043
okay I see where's throwing up.

79
00:05:55.545 --> 00:05:57.819
&gt;&gt; Lukas Ruebbelke: And I just want to see

80
00:06:07.954 --> 00:06:09.034
&gt;&gt; Lukas Ruebbelke: So we use do for

81
00:06:09.034 --> 00:06:10.540
side effects.

82
00:06:10.540 --> 00:06:11.740
You rarely need to do this, but

83
00:06:11.740 --> 00:06:14.870
occasionally you'll need that
something to happen in parallel.

84
00:06:14.870 --> 00:06:19.838
And so that's what we use this for.
&gt;&gt; Speaker 2: So

85
00:06:19.838 --> 00:06:23.904
in param elements it will-
&gt;&gt; Lukas Ruebbelke: So it'll just do it,

86
00:06:23.904 --> 00:06:27.750
but ideally you're just doing it for
side effects.

87
00:06:27.750 --> 00:06:29.030
You're actually not affecting the strip.

88
00:06:29.030 --> 00:06:30.910
So let's say something was coming in, and

89
00:06:30.910 --> 00:06:34.450
you needed to actually send another piece
of it somewhere else for whatever reason.

90
00:06:34.450 --> 00:06:35.810
I generally use it for

91
00:06:35.810 --> 00:06:39.470
debugging, I just need to see what's
actually going through the stream.

92
00:06:39.470 --> 00:06:42.880
So actually this would be a #protip,

93
00:06:42.880 --> 00:06:47.040
that if you kinda wanna see
what's going on in the stream, or

94
00:06:47.040 --> 00:06:52.220
is this turning out the way that I want,
sometimes I'll just drop a do in there.

95
00:06:52.220 --> 00:06:53.270
That sounded horrible.

96
00:06:55.380 --> 00:07:02.747
At least it's working.
&gt;&gt; Lukas Ruebbelke: So

97
00:07:02.747 --> 00:07:08.717
yes ID is one.
&gt;&gt; Lukas Ruebbelke: Two,

98
00:07:08.717 --> 00:07:12.780
so you can see here,
two is tracing it out.

99
00:07:12.780 --> 00:07:15.630
So good catch.

100
00:07:15.630 --> 00:07:17.020
I mean that's it, it's like.

101
00:07:17.020 --> 00:07:19.080
When you are working
with observable streams,

102
00:07:21.060 --> 00:07:25.720
if you find yourself having to
fiddle with the data don't do that.

103
00:07:25.720 --> 00:07:26.810
Use an operator.

104
00:07:26.810 --> 00:07:30.590
Most often than not,
I don't like having to do this,

105
00:07:30.590 --> 00:07:33.963
let me just map it to what
I really need it first.

106
00:07:33.963 --> 00:07:36.939
You could do it inline, but
to me this reads a lot better,

107
00:07:36.939 --> 00:07:39.792
because you can actually
follow the transformation,

108
00:07:39.792 --> 00:07:44.336
we're taking the parameters, we're turning
it into an ID that is returning an item.

