WEBVTT

1
00:00:00.000 --> 00:00:01.100
&gt;&gt; Lukas Ruebbelke: What
we're gonna do for

2
00:00:01.100 --> 00:00:05.920
the next little bit is I'm going to
show you kinda some specific things

3
00:00:05.920 --> 00:00:11.500
that I want to communicate based on some
of the conversations that we've had.

4
00:00:11.500 --> 00:00:14.660
And we're kind of at this point,

5
00:00:14.660 --> 00:00:19.180
I feel like, the cake has been made and
we're just putting icing on it.

6
00:00:19.180 --> 00:00:21.960
So, these are kinda some of the fun
things that I worked into the application

7
00:00:21.960 --> 00:00:23.120
last night.

8
00:00:23.120 --> 00:00:27.500
Incredibly useful, and we're probably not
going to do challenges with them, but

9
00:00:27.500 --> 00:00:32.140
I'm just gonna show you,
it's in the application, go check it out.

10
00:00:32.140 --> 00:00:36.991
And so these are kinda some of the common
things that I run into frequently when I'm

11
00:00:36.991 --> 00:00:39.609
working with large-scale applications.

12
00:00:39.609 --> 00:00:45.890
So remember, managing state,
flow control, and core volume.

13
00:00:45.890 --> 00:00:50.200
So these are these are kind of the three
things that we're thinking about today.

14
00:00:50.200 --> 00:00:54.660
So one of the challenges
that you run into,

15
00:00:54.660 --> 00:01:00.160
is how do you communicate changes or

16
00:01:00.160 --> 00:01:04.070
information across an application?

17
00:01:04.070 --> 00:01:07.140
So to this end, I'm talking about event

18
00:01:07.140 --> 00:01:12.446
communication.
&gt;&gt; Lukas Ruebbelke: In that,

19
00:01:12.446 --> 00:01:16.630
we want to communicate state over time,
as it happens.

20
00:01:16.630 --> 00:01:18.460
So, where am I leading with this?

21
00:01:18.460 --> 00:01:23.939
Well, duh duh duuuh!
&gt;&gt; Lukas Ruebbelke: RxJS.

22
00:01:25.330 --> 00:01:31.940
So prior to, I would say angular to and
above and I look like Jacover ran this.

23
00:01:31.940 --> 00:01:36.886
It was very common to use events
especially in 1.X to communicate

24
00:01:36.886 --> 00:01:38.930
from one thing to another.

25
00:01:38.930 --> 00:01:42.825
So if you've ever done
like scope.broadcast or

26
00:01:42.825 --> 00:01:46.200
scope.on and capture some events.

27
00:01:46.200 --> 00:01:49.880
Well, what you’re trying to do
is communicate state over time.

28
00:01:51.950 --> 00:01:54.280
We can do this obviously with observables.

29
00:01:54.280 --> 00:01:58.920
It’s very well suited because they can
iterate a pattern, they observer pattern.

30
00:01:58.920 --> 00:02:00.440
It gives us the ability to do that.

31
00:02:01.500 --> 00:02:04.920
And so, we’ve kind of seen in
the context of consuming something.

32
00:02:04.920 --> 00:02:10.660
But we can also reverse that, and
I'll show you how to not only consume

33
00:02:10.660 --> 00:02:15.350
state over time, but also to insert
yourself at the other end of the spectrum,

34
00:02:15.350 --> 00:02:17.600
and start pushing things in.

35
00:02:19.310 --> 00:02:21.840
So, we know how to consume like, data.

36
00:02:21.840 --> 00:02:24.868
So, we have our initial output of data,
whatever that is,

37
00:02:24.868 --> 00:02:26.208
we know how to consume it.

38
00:02:26.208 --> 00:02:30.251
But what I want to show you is
how do we get onto this side and

39
00:02:30.251 --> 00:02:36.970
control the initial output and actually
communicate something of our choosing.

40
00:02:36.970 --> 00:02:42.490
And this is going to lead right into
when we get into the Firebase thing.

41
00:02:42.490 --> 00:02:45.480
It'll be just a hop, skip, and a jump.

42
00:02:45.480 --> 00:02:47.521
And we're gonna hook in
Firebase right into this,

43
00:02:47.521 --> 00:02:50.786
so
&gt;&gt; Lukas Ruebbelke: What I want to do is,

44
00:02:50.786 --> 00:02:52.390
let me just show you real quick.

45
00:02:52.390 --> 00:02:58.280
So I'm gonna hop out of here,
and let's look in here.

46
00:02:58.280 --> 00:03:01.680
So pay attention to
the bottom of the screen.

47
00:03:01.680 --> 00:03:03.130
Hopefully this works.

48
00:03:03.130 --> 00:03:09.103
I'm going to subscribe to
&gt;&gt; Lukas Ruebbelke: My

49
00:03:09.103 --> 00:03:14.590
newsletter.
&gt;&gt; Lukas Ruebbelke: So, I hit subscribe.

50
00:03:14.590 --> 00:03:17.320
Lots of you get a little pop-up down here.

51
00:03:17.320 --> 00:03:20.438
And so what we 're doing is we're saying,
we wanna

52
00:03:20.438 --> 00:03:25.880
notify the user that
something has happened.

53
00:03:25.880 --> 00:03:26.830
It's somewhere in the application.

54
00:03:26.830 --> 00:03:28.950
We wanna do it kinda global way.

55
00:03:29.980 --> 00:03:34.290
And so it's very common to have kinda
this global, kinda like, message bar or

56
00:03:34.290 --> 00:03:36.470
some communication saying like
something happened to the app and

57
00:03:36.470 --> 00:03:40.050
we're surfacing it in a way for
you to see it.

58
00:03:40.050 --> 00:03:42.920
And so I think that you know Bootstrap has
kind of their notification bar thing or

59
00:03:42.920 --> 00:03:44.160
like these warning bars or whatever.

60
00:03:44.160 --> 00:03:46.140
You'll even see it's like toaster.

61
00:03:46.140 --> 00:03:51.063
Things that hop up in the corner.
&gt;&gt; Lukas Ruebbelke: I've taken just

62
00:03:51.063 --> 00:03:55.270
also a step further, if we go here,
I think it's in here.

63
00:03:55.270 --> 00:04:01.730
Yeah, so item saved, save it again,
I can create a new item.

64
00:04:01.730 --> 00:04:04.880
This is where you would wanna
give your user a little que

65
00:04:04.880 --> 00:04:07.460
that something happened
in the application.

66
00:04:07.460 --> 00:04:12.760
Now notice when it's popping up it has
to do specifically to that action.

67
00:04:12.760 --> 00:04:19.790
So I'm not doing a new item and it's
saying like so and so just subscribed.

68
00:04:19.790 --> 00:04:23.960
Cuz we're basically passing
notifications into the application and

69
00:04:23.960 --> 00:04:24.580
we're handling it.

70
00:04:24.580 --> 00:04:28.830
So Save and you see, item created.

71
00:04:28.830 --> 00:04:31.900
Okay, so
this is at any point in the application,

72
00:04:31.900 --> 00:04:36.490
how do we communicate that
an event has happened?

73
00:04:36.490 --> 00:04:41.580
So the answer is,
in a nut shell we are using subjects,

74
00:04:41.580 --> 00:04:46.130
so our shares has this
thing called the subject.

75
00:04:46.130 --> 00:04:47.710
I'll talk about that in a minute.

76
00:04:47.710 --> 00:04:51.600
Which allows you to not only consume
information via an observable.

77
00:04:51.600 --> 00:04:53.230
So it has an observable in it.

78
00:04:53.230 --> 00:04:56.240
But you can also broadcast.

79
00:04:56.240 --> 00:05:01.050
Or essentially pass data along
the observable stream via a subject.

80
00:05:01.050 --> 00:05:04.380
And then we use this as an event bus

81
00:05:04.380 --> 00:05:09.350
to communicate state across
the application, incredibly efficient.

