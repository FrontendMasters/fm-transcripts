WEBVTT

1
00:00:00.360 --> 00:00:02.600
&gt;&gt; Lukas Ruebbelke: Let me step
through this slide real quick and

2
00:00:02.600 --> 00:00:03.560
a couple of slides.

3
00:00:03.560 --> 00:00:05.770
And, we’ll actually kind
of see this in action.

4
00:00:05.770 --> 00:00:08.350
Fortunately, a lot of what
I’m going to tell you,

5
00:00:08.350 --> 00:00:10.390
to see it light generates for us.

6
00:00:10.390 --> 00:00:13.370
And, so I had a live template

7
00:00:13.370 --> 00:00:15.770
that I use to use because I’m
doing this stuff over and over.

8
00:00:15.770 --> 00:00:17.480
So, I just created this
hotkey in WebStorm.

9
00:00:17.480 --> 00:00:21.840
Well now the CLI just generates
kind of that exact thing so

10
00:00:21.840 --> 00:00:25.400
that's what I use so it's gonna make
things a lot easier as I go through this.

11
00:00:26.530 --> 00:00:31.740
So, karma is the test runner,
it's installed by default and

12
00:00:31.740 --> 00:00:34.290
configured, when you create a project,

13
00:00:34.290 --> 00:00:40.110
occasionally, you will need to step in and
adjust something.

14
00:00:40.110 --> 00:00:42.660
And that's in the karma.conf.js file.

15
00:00:45.340 --> 00:00:50.657
And kind of the default pattern,
as we've seen, is that specs or

16
00:00:50.657 --> 00:00:55.215
tests are identified with
this .spec.ts structure.

17
00:00:55.215 --> 00:00:57.968
So if you have that naming
convention on your file,

18
00:00:57.968 --> 00:01:02.640
then that is what it's gonna pick it
up and it's automatically gonna run it.

19
00:01:02.640 --> 00:01:06.680
When Karma runs, it's just gonna say look
for anything that matches this convention

20
00:01:06.680 --> 00:01:10.070
and I'm willing to try to run it because
we're presuming test are in here.

21
00:01:12.040 --> 00:01:17.580
And so from here, MPM test,
and it does its thing and

22
00:01:17.580 --> 00:01:22.550
then hopefully at the bottom
it is Green all the way.

23
00:01:22.550 --> 00:01:27.450
So this is almost like I would
say Pavlovian, in a way.

24
00:01:27.450 --> 00:01:31.620
So if you know Pavlov's dogs,
you start to get kind of,

25
00:01:31.620 --> 00:01:34.400
I feel like there's a dopamine
release when I go green.

26
00:01:34.400 --> 00:01:35.670
It's pretty nice.

27
00:01:36.840 --> 00:01:41.332
Also Karma will run the test in
a natural browser instance and so

28
00:01:41.332 --> 00:01:45.650
what you see is when you run this,
it will do this in a moment,

29
00:01:45.650 --> 00:01:49.634
you're actually gonna see
a browser window pop up, and

30
00:01:49.634 --> 00:01:55.225
stuff is going to happen, what this allows
us to do is once you see the output but

31
00:01:55.225 --> 00:02:00.202
more importantly is that we can step
through the test in the browser.

32
00:02:00.202 --> 00:02:03.340
And so when this window pops
up you can hit debug and

33
00:02:03.340 --> 00:02:08.724
actually set break points and walk through
the test in the Chrome developer console,

34
00:02:08.724 --> 00:02:10.760
if that's what you're using.

35
00:02:10.760 --> 00:02:15.150
So, I'm just assuming Chrome,
kind of as just the default, but

36
00:02:15.150 --> 00:02:17.160
you can actually set
different browser targets.

37
00:02:17.160 --> 00:02:19.810
So we're using Chrome but
you can say I need to do it on Firefox.

38
00:02:19.810 --> 00:02:21.613
I need to see that it runs in whatever.

39
00:02:21.613 --> 00:02:28.227
You can even use selenium to actually run
a headless browser or different things.

40
00:02:28.227 --> 00:02:31.908
So, let's say you're running things
on this automated ci server, well,

41
00:02:31.908 --> 00:02:34.855
it doesn’t actually even have
to run in a browser instance.

42
00:02:34.855 --> 00:02:38.490
It can actually run in like
a headless browser in memory.

43
00:02:38.490 --> 00:02:41.890
So this is a really handy way for
stepping through and

44
00:02:41.890 --> 00:02:44.990
saying what’s actually
happening in my text.

45
00:02:47.200 --> 00:02:51.183
And so let’s go and
you kinda got a really simple test here.

46
00:02:51.183 --> 00:02:53.504
I'm gonna just skip these for
a second, and

47
00:02:53.504 --> 00:02:56.466
I'll just walk through what
this actually looks like.

48
00:03:10.921 --> 00:03:14.430
&gt;&gt; Lukas Ruebbelke: I think I'll do this

49
00:03:14.430 --> 00:03:16.703
from M P M G C.

50
00:03:16.703 --> 00:03:23.518
Think about those fries, so
we'll go with the fries component.

51
00:03:23.518 --> 00:03:27.686
And I actually in this case,

52
00:03:27.686 --> 00:03:32.730
I don't care if it gets added but.

53
00:03:34.000 --> 00:03:35.120
Just muscle memory by now.

54
00:03:35.120 --> 00:03:36.262
What?

55
00:03:36.262 --> 00:03:45.616
That's not npm, c
&gt;&gt; Lukas Ruebbelke: All right,

56
00:03:45.616 --> 00:03:49.229
from here, I'm gonna step in and

57
00:03:49.229 --> 00:03:53.630
you're gonna see a fully working spec.

58
00:03:54.640 --> 00:03:59.530
Let's not worry about that right now,
what I'm going to do

59
00:04:00.530 --> 00:04:05.378
is for now, let's see here,

60
00:04:05.378 --> 00:04:10.680
I know this is bigger but,
I don't think there is really any

61
00:04:10.680 --> 00:04:13.059
advantage of running this in the terminal
so I'm just gonna do it from here.

62
00:04:14.690 --> 00:04:15.600
Npm test.

63
00:04:15.600 --> 00:04:22.661
So we're just gonna let this run.
&gt;&gt; Lukas Ruebbelke: And

64
00:04:22.661 --> 00:04:26.744
so you should notice that over here,
this is this karma window that I was

65
00:04:26.744 --> 00:04:31.170
talking about, so it's just gonna
kick up an instance of chrome.

66
00:04:31.170 --> 00:04:35.590
And It's going to kinda do its thing.

67
00:04:35.590 --> 00:04:36.640
So it's building it up.

68
00:04:40.100 --> 00:04:41.410
We’ll let it just look in here.

69
00:04:44.510 --> 00:04:46.890
So you actually even saw some
of the components flying by,

70
00:04:46.890 --> 00:04:49.480
which is kind of interesting,
but it's all green.

71
00:04:49.480 --> 00:04:51.910
So from here we can fully debug and
it will actually run it again and

72
00:04:51.910 --> 00:04:56.700
you can step through, in the dev tools.

73
00:04:56.700 --> 00:04:59.548
So this is really handy, being able to
step through your test in real time as

74
00:04:59.548 --> 00:05:02.816
they're running.
&gt;&gt; Lukas Ruebbelke: So

75
00:05:02.816 --> 00:05:07.797
just a simple test is we have it, and
so this is just a way to segment it, so

76
00:05:07.797 --> 00:05:12.982
this is we're saying this is a test,
and we'll say it(should be true).

77
00:05:15.020 --> 00:05:20.291
And then from here, we'll just say we

78
00:05:20.291 --> 00:05:27.100
expect false to be truthy.
&gt;&gt; Lukas Ruebbelke: And

79
00:05:27.100 --> 00:05:31.289
hopefully,
&gt;&gt; Lukas Ruebbelke: This is going to fail.

80
00:05:38.673 --> 00:05:39.856
&gt;&gt; Lukas Ruebbelke: Yeah.

81
00:05:39.856 --> 00:05:43.450
Here you can say, just bump this up.

82
00:05:44.730 --> 00:05:48.110
Expected false to be truthy.

83
00:05:49.390 --> 00:05:54.475
Clearly, duh.
&gt;&gt; Lukas Ruebbelke: That's not going to

84
00:05:54.475 --> 00:06:01.195
work, so true this is actually watching
the files and as you start to just work.

85
00:06:01.195 --> 00:06:04.484
Sometimes what I'll do is I'll just let
this run, maybe in another window or

86
00:06:04.484 --> 00:06:05.506
another two monitors.

87
00:06:05.506 --> 00:06:09.675
And as you just kind of can see
as you're coding of I just broke

88
00:06:09.675 --> 00:06:14.478
something.
&gt;&gt; Lukas Ruebbelke: So

89
00:06:14.478 --> 00:06:16.910
this is a very, very simple test.

90
00:06:18.540 --> 00:06:20.330
Now, we're just simply saying.

91
00:06:20.330 --> 00:06:24.514
And so this is Jasmine right here,
some descriptive name,

92
00:06:24.514 --> 00:06:26.948
and then we do our search.

