WEBVTT

1
00:00:00.270 --> 00:00:04.680
&gt;&gt; Lukas Ruebbelke: Welcome back,
let's talk about Reactive forms.

2
00:00:04.680 --> 00:00:06.666
So I need to make
an executive decision here.

3
00:00:11.220 --> 00:00:13.287
&gt;&gt; Lukas Ruebbelke: Unfortunately,
if you are on master,

4
00:00:13.287 --> 00:00:14.985
this component already exist.

5
00:00:16.550 --> 00:00:20.526
So I think the easiest thing to

6
00:00:20.526 --> 00:00:24.808
do is,
&gt;&gt; Lukas Ruebbelke: I think we

7
00:00:24.808 --> 00:00:27.460
just change this slightly
to just a different name.

8
00:00:28.740 --> 00:00:31.520
So we have a newsletter
component that exist.

9
00:00:32.730 --> 00:00:37.805
So let's think of something
comparable like, you know what?

10
00:00:37.805 --> 00:00:40.174
Let's do-
&gt;&gt; Speaker 2: [INAUDIBLE] component.

11
00:00:42.520 --> 00:00:45.790
&gt;&gt; Lukas Ruebbelke: We're trying to
think of something with very little.

12
00:00:45.790 --> 00:00:51.550
So let's do a signup component or
a login component, okay?

13
00:00:51.550 --> 00:00:56.065
So this is one of these kind of unforeseen
things that you just kinda flow and

14
00:00:56.065 --> 00:01:04.533
you freestyle and,
&gt;&gt; Lukas Ruebbelke: And

15
00:01:04.533 --> 00:01:08.750
I'm just making a few
changes to the snippets, but

16
00:01:08.750 --> 00:01:13.990
where it says name and email,
just do username and password.

17
00:01:13.990 --> 00:01:18.462
So pretty easy, so
we can just adjust for this on the fly.

18
00:01:20.766 --> 00:01:23.568
&gt;&gt; Lukas Ruebbelke: And so
let's just take a couple minutes, and

19
00:01:23.568 --> 00:01:26.610
the big thing is just pull
up the snippets piece.

20
00:01:27.780 --> 00:01:31.928
And then from there, we're just
gonna create a Login in component.

21
00:01:31.928 --> 00:01:37.240
And we're going to add it to
the HomeComponent template.

22
00:01:37.240 --> 00:01:41.769
And so what I'll do is I'll give everybody
kind of a little bit of a head start, and

23
00:01:41.769 --> 00:01:43.160
then I will do it as well.

24
00:01:43.160 --> 00:01:45.430
And we'll kind of go through this,

25
00:01:45.430 --> 00:01:49.605
hopefully I'll do it at a pace that
everybody can kind of keep up.

26
00:01:59.000 --> 00:02:00.817
&gt;&gt; Lukas Ruebbelke: And
what we're gonna do is,

27
00:02:00.817 --> 00:02:04.532
if you remember talking about
template driven-forms and

28
00:02:04.532 --> 00:02:09.093
kind of that hierarchy, we're just
going to kind of expand upon that.

29
00:02:09.093 --> 00:02:13.893
But more so kind of talk about
the relationship that we have with

30
00:02:13.893 --> 00:02:17.020
how we kind of define our forms.

31
00:02:17.020 --> 00:02:23.530
And more so where the actual model, the
data model lives that is driving the form.

32
00:02:23.530 --> 00:02:29.623
So this is going to be a fairly quick
extension to the template-driven forms.

33
00:02:30.780 --> 00:02:35.460
But it is a very, very useful technique,

34
00:02:35.460 --> 00:02:41.560
especially when you start to
build out large scale forms.

35
00:02:41.560 --> 00:02:49.336
So we're talking, for instance one of
my clients, they do insurance forms.

36
00:02:49.336 --> 00:02:52.839
So if you're in Canada,
you need insurance, you can go,

37
00:02:52.839 --> 00:02:55.720
you fill out this form
that's pretty complex.

38
00:02:55.720 --> 00:02:59.810
And to do this strictly
from a template design,

39
00:02:59.810 --> 00:03:06.210
especially because the form will change
dynamically based on what you choose.

40
00:03:06.210 --> 00:03:08.990
Trying to do that template
driven will be very, very hard.

41
00:03:08.990 --> 00:03:15.160
And what you need is a way to declare
your form in an imperative context,

42
00:03:15.160 --> 00:03:17.990
and then have your template
kind of reflect that.

43
00:03:17.990 --> 00:03:22.737
So I'm not talking about data-driven
forms, but being able to define it and

44
00:03:22.737 --> 00:03:25.890
declare it in your JavaScript or
your TypeScript.

45
00:03:25.890 --> 00:03:29.840
And then from there you just hook
it into kind of the template.

46
00:03:29.840 --> 00:03:34.690
Instead of letting the template drive the
model, you let the actual model in this

47
00:03:34.690 --> 00:03:39.520
declaration determine how
the form is going to work.

48
00:03:41.140 --> 00:03:42.760
One of the biggest things with this,

49
00:03:42.760 --> 00:03:45.370
as well as people that are starting
with the pre-challenge,

50
00:03:45.370 --> 00:03:49.340
is that if you've ever built out forms,
these are some of the most verbose

51
00:03:51.970 --> 00:03:55.570
elements and experiences that you
can actually code in terms of HTML.

52
00:03:56.570 --> 00:04:00.590
So when you have a form that has like
an input, that has some requirements

53
00:04:00.590 --> 00:04:03.740
with some validation that you need
to show the user, different things.

54
00:04:03.740 --> 00:04:07.230
All of a sudden now your markup
becomes very, very large.

55
00:04:07.230 --> 00:04:12.070
Even though you're really only doing
one thing, if you have four fields, and

56
00:04:12.070 --> 00:04:16.780
two possible validations on each,
you need to show a message.

57
00:04:16.780 --> 00:04:19.000
This can get very large, very complex.

58
00:04:19.000 --> 00:04:25.220
And so this is one of the ways that
we can kind of start to reduce that.

59
00:04:25.220 --> 00:04:30.610
And allow our form to be just a form
that our model then reacts to.

