WEBVTT

1
00:00:00.280 --> 00:00:04.170
&gt;&gt; Lukas Ruebbelke: So let's just do
a quick review over the challenge.

2
00:00:04.170 --> 00:00:09.960
I'm not going to redo it again by hand,
but I will walk through the pieces.

3
00:00:09.960 --> 00:00:13.700
Actually you know what I will,
maybe I will.

4
00:00:15.910 --> 00:00:19.191
Actually I'll do it from,
I'll do it from the CLI, so everybody can,

5
00:00:19.191 --> 00:00:20.844
so we're kind of in lock step here.

6
00:00:22.954 --> 00:00:26.116
&gt;&gt; Lukas Ruebbelke: So the idea is
to create a widgets feature, and

7
00:00:26.116 --> 00:00:29.070
then we're going to add it to the route.

8
00:00:29.070 --> 00:00:34.390
So cheating just a little bit for
the sake of time,

9
00:00:34.390 --> 00:00:40.576
we'll go ng g c m, actually,
we'll call this widgets.

10
00:00:40.576 --> 00:00:46.900
the -m, for, we need to basically
tell it what module to go into.

11
00:00:46.900 --> 00:00:51.525
So its app.module.ts- I
believe this is correct?

12
00:00:51.525 --> 00:00:52.849
What?

13
00:00:52.849 --> 00:00:54.837
Hold on.

14
00:00:54.837 --> 00:00:58.140
That's why.

15
00:01:03.250 --> 00:01:05.930
Still not in the right, let's go even.

16
00:01:05.930 --> 00:01:10.399
So you kind of have to be
in your root directory for

17
00:01:10.399 --> 00:01:13.887
this to work, so lets try this again.

18
00:01:18.197 --> 00:01:23.280
&gt;&gt; Lukas Ruebbelke: All right so
let's see what was actually generated.

19
00:01:23.280 --> 00:01:28.654
And if we go here, widgets, so
we have css, html, spec and

20
00:01:28.654 --> 00:01:34.905
the actual component class,
this is pretty much par for the course.

21
00:01:34.905 --> 00:01:41.488
And so over here,
&gt;&gt; Lukas Ruebbelke: we'll

22
00:01:41.488 --> 00:01:46.150
just say something Kind of sophomoric.

23
00:01:46.150 --> 00:01:49.940
And let's look at the opponent as well.

24
00:01:49.940 --> 00:01:53.410
So we were talking about just a class.

25
00:01:53.410 --> 00:01:57.860
By using ng or
implements Onlnit we are required

26
00:01:57.860 --> 00:02:01.890
to implement ngOnInit so
that's the contract, but

27
00:02:01.890 --> 00:02:07.080
you'll notice that this class
is actually not doing anything.

28
00:02:07.080 --> 00:02:15.324
We're simply using it as a place holder
to pin our template to this selector.

29
00:02:15.324 --> 00:02:16.910
And if we go to AppModule,

30
00:02:16.910 --> 00:02:20.672
by doing this by hand,
one of the things that you need to do is.

31
00:02:20.672 --> 00:02:26.460
Make sure to register with the module so
that Angular knows that it exists.

32
00:02:28.670 --> 00:02:31.870
Now, I'm going to just
close some of this down.

33
00:02:31.870 --> 00:02:36.320
We'll leave the widgets up, and
we'll go into the home component.

34
00:02:38.180 --> 00:02:41.850
I'll do a horizontal rule,
and we'll go app-widgets.

35
00:02:45.362 --> 00:02:49.550
&gt;&gt; Lukas Ruebbelke: And this should
render, let's hop into the browser.

36
00:02:49.550 --> 00:02:52.072
Here we go, widgets, y'all.

37
00:02:52.072 --> 00:02:54.969
So let's do a route.

38
00:02:54.969 --> 00:02:59.114
So if we go to the app routing module,
so this is kind of,

39
00:02:59.114 --> 00:03:03.728
I'm over lunch, I made this
analogy of you're in a kitchen.

40
00:03:03.728 --> 00:03:08.051
And it's like, where's the pan,
where's the tablespoons or whatever,

41
00:03:08.051 --> 00:03:12.387
part of it is just knowing where the
specific things are in the application.

42
00:03:12.387 --> 00:03:17.236
So route is traditionally
in the app routing module,

43
00:03:17.236 --> 00:03:21.976
so I'm going to just duplicate
this items line, and

44
00:03:21.976 --> 00:03:27.166
we'll just go widgets and
we'll go widgets component.

45
00:03:27.166 --> 00:03:31.844
So, again,
a route is really just a path and

46
00:03:31.844 --> 00:03:35.770
a component in it's simplest form.

47
00:03:35.770 --> 00:03:38.129
&gt;&gt; Speaker 2: And just a quick question
&gt;&gt; Lukas Ruebbelke: Yes?

48
00:03:38.129 --> 00:03:40.867
&gt;&gt; Speaker 2: When the path
name you're giving it,

49
00:03:40.867 --> 00:03:43.876
which at this point that can be anything?

50
00:03:43.876 --> 00:03:49.360
&gt;&gt; Lukas Ruebbelke: Yeah, so-
&gt;&gt; Speaker 2: Where's that tied, okay.

51
00:03:49.360 --> 00:03:51.566
&gt;&gt; Lukas Ruebbelke: This
seems like a legit path.

52
00:03:51.566 --> 00:03:52.066
&gt;&gt; Speaker 2: Yes.

53
00:03:53.600 --> 00:03:58.830
&gt;&gt; Lukas Ruebbelke: So now if I save this,
this is finished by the way.

54
00:03:58.830 --> 00:03:59.330
&gt;&gt; Speaker 2: Of course.

55
00:04:00.540 --> 00:04:01.872
&gt;&gt; Lukas Ruebbelke: And then,

56
00:04:01.872 --> 00:04:06.383
if we go here
&gt;&gt; Lukas Ruebbelke: So

57
00:04:06.383 --> 00:04:10.788
it's simply a string or
basically a key to say,

58
00:04:10.788 --> 00:04:17.850
when the string is matched in the route or
the URL, map it to this component.

59
00:04:17.850 --> 00:04:22.677
Now obviously Robert C Martin
aka Uncle Bob,

60
00:04:22.677 --> 00:04:25.987
is just rolling his eyes at me.

61
00:04:25.987 --> 00:04:30.132
I just feel this, all the clean
coders in the world just being like,

62
00:04:30.132 --> 00:04:31.460
this makes no sense.

63
00:04:31.460 --> 00:04:34.590
So obviously,
we strive to be self-documenting.

64
00:04:34.590 --> 00:04:38.130
But that's the point is it could be
anything, it's arbitrary, but again,

65
00:04:38.130 --> 00:04:40.050
try to choose something
that communicates intent.

66
00:04:41.150 --> 00:04:44.060
And so now, we can go here.

67
00:04:44.060 --> 00:04:50.000
And if I do widgets it's going to render
that component in the router outlet.

68
00:04:52.140 --> 00:04:55.730
So let's do this one more
step to kind of complete it.

69
00:04:55.730 --> 00:05:02.370
If you go into the app component,
we have this array of links,

70
00:05:02.370 --> 00:05:09.665
and I'm just going to duplicate this and
we'll go path is widgets.

71
00:05:17.297 --> 00:05:20.820
&gt;&gt; Lukas Ruebbelke: And I'm not for sure
what icon, like you can find these online.

72
00:05:20.820 --> 00:05:23.519
Let me just see if I can
I think it's settings.

73
00:05:25.365 --> 00:05:28.005
&gt;&gt; Lukas Ruebbelke: Let's
go way down here.

74
00:05:28.005 --> 00:05:30.328
View_quilt, I would have never got that.

75
00:05:35.974 --> 00:05:41.561
&gt;&gt; Lukas Ruebbelke: So if we go here,
&gt;&gt; Lukas Ruebbelke: Then on the side,

76
00:05:41.561 --> 00:05:44.696
you'll see items.widgets.

77
00:05:44.696 --> 00:05:49.181
So what we've done,
is simply created a component,

78
00:05:49.181 --> 00:05:53.668
kind of the shell we're
going to start building out,

79
00:05:53.668 --> 00:05:58.130
and it is in the component or
the widgets component.

80
00:05:58.130 --> 00:06:02.520
But we are navigating to it,
instantiating it in two ways.

81
00:06:02.520 --> 00:06:09.190
One, In the route, the App Routing Module,

82
00:06:09.190 --> 00:06:16.350
and secondly that we're doing
it in the template itself.

83
00:06:16.350 --> 00:06:17.061
Does that make sense?

84
00:06:20.852 --> 00:06:23.237
&gt;&gt; Lukas Ruebbelke: I'm
seeing a few squinty eyes, so

85
00:06:23.237 --> 00:06:25.134
we do not need to rush this.

86
00:06:25.134 --> 00:06:30.935
If anybody,
if I've done anything that's unclear,

87
00:06:30.935 --> 00:06:36.620
I'd be happy to stop and
elaborate a little further.

88
00:06:36.620 --> 00:06:40.290
So, the icons they are material design.

89
00:06:40.290 --> 00:06:42.853
If you actually look up material design,

90
00:06:42.853 --> 00:06:46.673
you can actually find a sheet
with all the icon names in there.

91
00:06:50.370 --> 00:06:55.360
&gt;&gt; Lukas Ruebbelke: So with that said
there may still be some fuzzy pieces.

92
00:06:55.360 --> 00:06:59.960
Fear not because we're just gonna keep
iterating on this and elaborating on this.

93
00:06:59.960 --> 00:07:01.230
So, components.

94
00:07:02.710 --> 00:07:03.900
Let's get into templates.

95
00:07:03.900 --> 00:07:06.500
So now, we've done the yin,
let's do the yang

