WEBVTT

1
00:00:00.660 --> 00:00:03.440
&gt;&gt; Jem Young: Can anybody
explain what a packet is?

2
00:00:03.440 --> 00:00:04.550
Just take it take a shot at that.

3
00:00:04.550 --> 00:00:05.538
What do you think a packet is?

4
00:00:05.538 --> 00:00:07.230
&gt;&gt; Speaker 2: A bit of information.

5
00:00:07.230 --> 00:00:08.060
&gt;&gt; Jem Young: Exactly, right.

6
00:00:08.060 --> 00:00:09.230
It's a little bit of information.

7
00:00:09.230 --> 00:00:13.060
It's the smallest bit of
information you can transmit.

8
00:00:13.060 --> 00:00:16.700
Well, technically a bit is the smallest
information you can transfer it.

9
00:00:16.700 --> 00:00:21.020
But a packet is,
think of it like an envelope.

10
00:00:21.020 --> 00:00:22.111
An envelope with data in it.

11
00:00:22.111 --> 00:00:24.505
And what does an envelope have on it,
if you're trying to mail something?

12
00:00:24.505 --> 00:00:27.550
It's got an address about
where you're trying to get to.

13
00:00:27.550 --> 00:00:30.460
It's got information about
where you're coming from,

14
00:00:30.460 --> 00:00:32.550
just in case and when it has to come back.

15
00:00:32.550 --> 00:00:34.552
And inside that packet
has the information.

16
00:00:34.552 --> 00:00:35.790
And that's what a packet is.

17
00:00:35.790 --> 00:00:39.470
It's just this base unit of information
of how everything's transmitting.

18
00:00:39.470 --> 00:00:43.432
Fact, the way I'm talking to you on the
internet is just billions, and trillions,

19
00:00:43.432 --> 00:00:46.030
and trillions of packets
are moving right now.

20
00:00:46.030 --> 00:00:49.280
But a packet mainly contains metadata.

21
00:00:49.280 --> 00:00:53.210
People think it's mainly data, like when
you mail an envelope you're thinking,

22
00:00:53.210 --> 00:00:57.620
I sure hope someone gets my letter or
this thing I bought off the internet.

23
00:00:57.620 --> 00:01:01.750
But really what the packet is, what the
the key information is, where it's going,

24
00:01:01.750 --> 00:01:04.710
where it came from, and
then all these metadata attached to it.

25
00:01:04.710 --> 00:01:07.310
So that metadata is usually
in the form of headers.

26
00:01:07.310 --> 00:01:10.090
But again, the packet is it's not

27
00:01:10.090 --> 00:01:13.230
just like these video packets I'm
sending out over the internet right now.

28
00:01:13.230 --> 00:01:14.290
It's not just one packet.

29
00:01:14.290 --> 00:01:18.070
It's trillions of them and
often using TCP.

30
00:01:18.070 --> 00:01:20.820
It starts with one and
it says like, hey, I've got one.

31
00:01:20.820 --> 00:01:23.670
And there's 50 more of my
cousins coming along too.

32
00:01:23.670 --> 00:01:26.860
And then when they hit the server,
it puts them all together in a checksum.

33
00:01:26.860 --> 00:01:30.960
And that's why TCP is called
error correcting because it has

34
00:01:30.960 --> 00:01:34.330
all these packets, and it says like,
hey, there's 50 packets.

35
00:01:34.330 --> 00:01:37.730
And the client says, hey,
I got all of them except for two.

36
00:01:37.730 --> 00:01:39.890
I'm missing 49 and 37.

37
00:01:39.890 --> 00:01:42.580
And that sends it back to the server and
the server says, I acknowledge that.

38
00:01:42.580 --> 00:01:44.620
Let me send those last two packets.

39
00:01:44.620 --> 00:01:47.280
That's why it's called error correcting
because you're guaranteed to get this

40
00:01:47.280 --> 00:01:48.780
packet every single time.

41
00:01:48.780 --> 00:01:54.520
Versus UDP which sends UDP packets
which are just broadcasting data.

42
00:01:54.520 --> 00:01:56.510
It doesn't matter if you get
the rest of the packets.

43
00:01:56.510 --> 00:01:57.896
Eventually they'l come through.

44
00:01:57.896 --> 00:01:59.360
Because it doesn't error correct.

45
00:01:59.360 --> 00:02:00.470
That's why TCP is faster.

