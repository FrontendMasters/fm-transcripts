WEBVTT

1
00:00:00.000 --> 00:00:01.492
&gt;&gt; Jem Young: What's this arrow
that I'm pointing to here?

2
00:00:01.492 --> 00:00:02.987
Can anybody tell me what that is?

3
00:00:02.987 --> 00:00:04.584
Yes.

4
00:00:04.584 --> 00:00:05.392
&gt;&gt; Speaker 2: It's the response code?

5
00:00:05.392 --> 00:00:06.797
&gt;&gt; Jem Young: Yeah, it's a status code.

6
00:00:06.797 --> 00:00:10.422
And status codes are another thing
that we take for granted, but

7
00:00:10.422 --> 00:00:12.179
we probably know some of them.

8
00:00:12.179 --> 00:00:14.228
Does anybody know any funny status codes?

9
00:00:14.228 --> 00:00:18.304
&gt;&gt; Speaker 3: I like the HTTP status cats,
the 405.

10
00:00:18.304 --> 00:00:19.245
&gt;&gt; Jem Young: Those are pretty good.

11
00:00:19.245 --> 00:00:21.497
There's a lot of like status
code memes out there.

12
00:00:21.497 --> 00:00:22.191
Yeah?

13
00:00:22.191 --> 00:00:23.345
&gt;&gt; Speaker 2: I am a teapot.

14
00:00:23.345 --> 00:00:24.733
&gt;&gt; Jem Young: Yeah, that one's a good one.

15
00:00:24.733 --> 00:00:25.670
Status code 418.

16
00:00:25.670 --> 00:00:26.647
I love that one.

17
00:00:26.647 --> 00:00:27.910
It doesn't mean anything.

18
00:00:27.910 --> 00:00:30.213
But it exists and
it's part of the official standard.

19
00:00:30.213 --> 00:00:32.328
There's probably a funny story behind it.

20
00:00:32.328 --> 00:00:33.296
But I don't know what it is.

21
00:00:33.296 --> 00:00:34.284
&gt;&gt; Speaker 2: Enhance your calm.

22
00:00:34.284 --> 00:00:35.570
&gt;&gt; Jem Young: Hm?

23
00:00:35.570 --> 00:00:37.539
&gt;&gt; Speaker 2: Enhance your calm, 420.

24
00:00:37.539 --> 00:00:39.746
&gt;&gt; Jem Young: Is that
an actual status code?

25
00:00:39.746 --> 00:00:41.132
&gt;&gt; Speaker 2: It's a Twitter one, yeah.

26
00:00:41.132 --> 00:00:41.882
&gt;&gt; Jem Young: [LAUGH] I guess people can
make up their own status code if you have

27
00:00:41.882 --> 00:00:48.451
enough clout.
I don't know.

28
00:00:48.451 --> 00:00:52.493
&gt;&gt; Speaker 2: I heard [COUGH] there's an
IoT device teapot that returns the teapot

29
00:00:52.493 --> 00:00:53.731
code now actually.

30
00:00:53.731 --> 00:00:56.234
&gt;&gt; Jem Young: You can do whatever
you want now with the status,

31
00:00:56.234 --> 00:00:57.526
that would be a good one.

32
00:00:57.526 --> 00:00:58.263
Actually, we should do that.

33
00:00:58.263 --> 00:00:59.098
&gt;&gt; Speaker 2: I think it exists.

34
00:00:59.098 --> 00:01:00.435
[LAUGH]
&gt;&gt; Jem Young: Maybe we'll make

35
00:01:00.435 --> 00:01:01.108
an exercise that does that.

36
00:01:01.108 --> 00:01:02.122
You hold that thought.

37
00:01:02.122 --> 00:01:04.558
&gt;&gt; [LAUGH]
&gt;&gt; Jem Young: Let's talk a little bit

38
00:01:04.558 --> 00:01:05.399
about status code.

39
00:01:05.399 --> 00:01:08.244
What a status code does is it indicates
the status of the HTTP request.

40
00:01:08.244 --> 00:01:11.208
Because there if you make a request and
response,

41
00:01:11.208 --> 00:01:13.901
there's always going
to be a response back.

42
00:01:13.901 --> 00:01:16.914
But you don't know what to do with
that response without the status code.

43
00:01:16.914 --> 00:01:21.673
For instance, a status code of
401 means you're not authorized.

44
00:01:21.673 --> 00:01:23.757
That generally means you're not logged in.

45
00:01:23.757 --> 00:01:27.758
But really what a status code does
is it helps the web application in

46
00:01:27.758 --> 00:01:30.625
the browser know what to
do with that response.

47
00:01:30.625 --> 00:01:33.134
Because without all of these status codes,
it would just be like, everything's okay.

48
00:01:33.134 --> 00:01:34.295
Everything's okay.

49
00:01:34.295 --> 00:01:35.166
Everything's okay.

50
00:01:35.166 --> 00:01:39.103
But a 401 the browser can handle
specifically and even better,

51
00:01:39.103 --> 00:01:41.779
your application can handle specifically.

52
00:01:41.779 --> 00:01:42.808
So what's a 404?

53
00:01:42.808 --> 00:01:44.444
I mean, we say 404 page all the time.

54
00:01:44.444 --> 00:01:45.503
What does that mean?

55
00:01:45.503 --> 00:01:46.166
&gt;&gt; Speaker 3: Not found.

56
00:01:46.166 --> 00:01:46.844
&gt;&gt; Speaker 2: Not found.

57
00:01:46.844 --> 00:01:47.837
&gt;&gt; Jem Young: Not found, exactly.

58
00:01:47.837 --> 00:01:52.540
And so all these prefixes, so the 1, 2, 3,
4, 5, all mean something very specific.

59
00:01:52.540 --> 00:01:56.200
1, anything starting with
a 1 is just an information.

60
00:01:56.200 --> 00:01:58.312
There's not much you wanna do with it.

61
00:01:58.312 --> 00:02:02.324
For example,
status code 101 just means continue.

62
00:02:02.324 --> 00:02:05.792
It means there's probably more data
coming, and just hold on for a second.

63
00:02:05.792 --> 00:02:08.175
200s means success.

64
00:02:08.175 --> 00:02:13.356
So different types of 200s mean it was
successful depending on what it is.

65
00:02:13.356 --> 00:02:18.589
So general success, like nice job,
this response is valid, is 200.

66
00:02:18.589 --> 00:02:21.702
If the post was successful,
it'd be something like 201, or

67
00:02:21.702 --> 00:02:22.805
something like that.

68
00:02:22.805 --> 00:02:24.425
And so on and so forth.

69
00:02:24.425 --> 00:02:27.435
You don't really need to know every single
status code, but it's good to know what

70
00:02:27.435 --> 00:02:29.801
these prefixes mean, so
you know immediately what's going on.

71
00:02:29.801 --> 00:02:35.956
The threes we talked about, 301 moved
permanently, 302 temporary redirects.

72
00:02:35.956 --> 00:02:37.644
300 status codes are always redirects.

73
00:02:37.644 --> 00:02:40.730
The 400 are some sort of client error.

74
00:02:40.730 --> 00:02:45.123
So it means you did something wrong,
as in you've sent a malformed request,

75
00:02:45.123 --> 00:02:47.162
you weren't logged in correctly.

76
00:02:47.162 --> 00:02:50.079
You're trying to request a page
that doesn't exist, so a 404 page.

77
00:02:50.079 --> 00:02:52.705
Those are always client errors.

78
00:02:52.705 --> 00:02:54.488
So if you see a 404,
that means you did something wrong.

79
00:02:54.488 --> 00:02:57.198
If you see a 500, that means
something on the server's wrong.

80
00:02:57.198 --> 00:02:59.153
500s are the ones you don't wanna get.

81
00:02:59.153 --> 00:03:02.617
Because you should never be in
a state where you're returning 500s,

82
00:03:02.617 --> 00:03:06.137
because that means either your
application is bad or the route's bad, or

83
00:03:06.137 --> 00:03:07.758
the server is on fire somewhere.

84
00:03:07.758 --> 00:03:11.639
But it just means there's a server error
and we didn't know how to handle it.

85
00:03:11.639 --> 00:03:13.475
And servers should always
handle their own errors and

86
00:03:13.475 --> 00:03:14.957
then return something else to the client.

87
00:03:14.957 --> 00:03:15.794
Yes?

88
00:03:15.794 --> 00:03:18.217
&gt;&gt; Speaker 2: I was gonna say,
if you're a front ender,

89
00:03:18.217 --> 00:03:22.811
then actually 500 is a good answer because
you know that you didn't break it.

90
00:03:22.811 --> 00:03:25.232
You know that it's somebody else's
problem to deal with, theoretically.

91
00:03:25.232 --> 00:03:27.383
&gt;&gt; Jem Young: That's a good point.

92
00:03:27.383 --> 00:03:29.436
500 is someone else's problem.

93
00:03:29.436 --> 00:03:30.805
400, your problem.

94
00:03:30.805 --> 00:03:31.851
Think of it that way.

95
00:03:31.851 --> 00:03:35.512
But these are just good things to know
as web developers that we probably don't

96
00:03:35.512 --> 00:03:37.742
think that these things
have meanings to them.

97
00:03:37.742 --> 00:03:38.823
But they all mean something.

98
00:03:38.823 --> 00:03:44.667
For instance, what does Amazon have,
like a famous 404 status page.

99
00:03:44.667 --> 00:03:46.572
You know, they have like Amazon dogs,

100
00:03:46.572 --> 00:03:49.881
people do fun things with 404s
when you try to request bad paths.

101
00:03:49.881 --> 00:03:53.913
And if you wanted to, we can write our
client application so that instead of

102
00:03:53.913 --> 00:03:58.329
seeing a server error, which is a bad
thing, especially if someone's paying you

103
00:03:58.329 --> 00:04:02.814
money and you're returning 500s,
that means you're doing something wrong.

104
00:04:02.814 --> 00:04:06.247
You can handle that on the client side and
say like, I'm getting 500, just be like,

105
00:04:06.247 --> 00:04:07.363
hey, something went wrong.

106
00:04:07.363 --> 00:04:11.411
We're working on right now,
rather than just like that ugly 500 page.

107
00:04:11.411 --> 00:04:14.994
So it's good to know how to read and
handle status codes.

108
00:04:14.994 --> 00:04:17.447
So just a quick quiz.

109
00:04:17.447 --> 00:04:20.298
What's the proper status code for
a successful POST request?

110
00:04:20.298 --> 00:04:23.876
&gt;&gt; Speaker 2: 200.

111
00:04:23.876 --> 00:04:25.186
&gt;&gt; Speaker 3: Created, or.

112
00:04:25.186 --> 00:04:26.660
&gt;&gt; Jem Young: Yeah, 200 works.

113
00:04:26.660 --> 00:04:27.949
That just means, okay.

114
00:04:27.949 --> 00:04:31.013
Or 201 means created,
it means successfully created.

115
00:04:31.013 --> 00:04:31.959
Nice.

116
00:04:31.959 --> 00:04:33.191
Now you kind of get in.

117
00:04:33.191 --> 00:04:36.977
It's like when you start thinking at this
level, you start thinking about that kind

118
00:04:36.977 --> 00:04:40.232
of senior engineer thinking about how
to structure your application and

119
00:04:40.232 --> 00:04:43.351
not just blindly accept and
return status codes, things like that.

120
00:04:43.351 --> 00:04:50.893
So let's do an exercise where we create
a custom header and a custom status code.

121
00:04:50.893 --> 00:04:56.137
So in your app, that app we created
yesterday which should be up and running,

122
00:04:56.137 --> 00:05:01.640
create a path that returns 418, which
is I'm a teapot, and a custom header.

123
00:05:01.640 --> 00:05:04.124
And remember, custom headers start with X.

124
00:05:07.608 --> 00:05:09.320
&gt;&gt; Jem Young: There's a hint at the bottom
if you can't see in really small.

125
00:05:09.320 --> 00:05:11.405
To set a status code on the request,
res.status.

126
00:05:11.405 --> 00:05:12.917
That's the response.status.

127
00:05:12.917 --> 00:05:15.069
To set a header, res.set.

