WEBVTT

1
00:00:00.660 --> 00:00:02.820
&gt;&gt; Jem Young: So let's go in to
set up our note application.

2
00:00:04.530 --> 00:00:07.350
The first thing we wanna do is we
wanna change ownership of the /var/www

3
00:00:07.350 --> 00:00:08.080
directory.

4
00:00:08.080 --> 00:00:11.430
So we don't have to sudo whenever
we wanna make a file or modify it.

5
00:00:11.430 --> 00:00:14.380
We just wanna be able
to access it at will.

6
00:00:14.380 --> 00:00:16.370
So we're gonna use the chown command.

7
00:00:16.370 --> 00:00:20.150
Which is c-h-own, change ownership.

8
00:00:20.150 --> 00:00:21.320
Kind of makes sense.

9
00:00:21.320 --> 00:00:23.380
The -R means it's recursive.

10
00:00:23.380 --> 00:00:30.018
So, it's gonna change that /var www
directory to own everything below that.

11
00:00:30.018 --> 00:00:32.830
Sorry, I should clarify.

12
00:00:32.830 --> 00:00:35.762
This is your user name,
not actually $USER.

13
00:00:35.762 --> 00:00:37.995
Wait no, this one is $USER:$USER, sorry.

14
00:00:37.995 --> 00:00:41.583
[LAUGH] I'm gonna fix this later but
it is $USER:$USER.

15
00:00:41.583 --> 00:00:43.170
Or you could also say JEM JEM.

16
00:00:43.170 --> 00:00:46.100
It doesn't really matter, but we're
changing the ownership of that directory.

17
00:00:46.100 --> 00:00:48.890
So I'm gonna go to do that now to
make sure I have my notes correct.

18
00:00:50.560 --> 00:00:57.250
So clear, and I'm gonna say sudo chown -R.

19
00:00:58.730 --> 00:01:00.210
I think I can use $USER.

20
00:01:00.210 --> 00:01:01.476
Actually, let me just check.

21
00:01:01.476 --> 00:01:05.946
Say, echo $USER.

22
00:01:05.946 --> 00:01:08.000
Yes, so that works.

23
00:01:08.000 --> 00:01:09.895
We can use $USER.
You can use your actual command.

24
00:01:14.024 --> 00:01:16.398
&gt;&gt; Jem Young: But
I will use $USER just cuz it looks cooler.

25
00:01:16.398 --> 00:01:23.099
Chown -R $USER:$USER.

26
00:01:23.099 --> 00:01:24.572
And we say /var var.

27
00:01:29.865 --> 00:01:31.891
&gt;&gt; Jem Young: /www cool.

28
00:01:33.778 --> 00:01:36.277
&gt;&gt; Jem Young: The permissions
thing may seem pedantic.

29
00:01:36.277 --> 00:01:37.190
Why bother?

30
00:01:37.190 --> 00:01:41.120
But this means every time you create
a file you don't have to sudo it anymore.

31
00:01:41.120 --> 00:01:42.351
You don't say sudo VI.

32
00:01:42.351 --> 00:01:45.700
You can just say VI because
the directory is now owned by you.

33
00:01:45.700 --> 00:01:47.445
It's little things [LAUGH].

34
00:01:47.445 --> 00:01:51.440
Years of doing this I've learned this make
it a little bit easier in the long run.

35
00:01:52.670 --> 00:01:54.230
So let's make an application directory.

36
00:01:54.230 --> 00:01:59.441
So mkdir /var/www/app.

37
00:01:59.441 --> 00:02:05.760
So mkdir /www/app, cool,

38
00:02:05.760 --> 00:02:12.847
and I'm just gonna cd into that.

39
00:02:24.666 --> 00:02:26.378
&gt;&gt; Jem Young: And again,
you're free to call it whatever you want.

40
00:02:26.378 --> 00:02:28.743
You can call it Sweet New Application.

41
00:02:28.743 --> 00:02:30.811
You can call it Foo.

42
00:02:30.811 --> 00:02:33.313
Doesn't really matter, but I'm calling
it app just for simplicity's sake.

43
00:02:36.212 --> 00:02:39.720
&gt;&gt; Jem Young: And then I'm gonna
run git init on it, so git init.

44
00:02:39.720 --> 00:02:43.290
I'm just gonna initialize
an empty git repository for now.

45
00:02:45.760 --> 00:02:47.190
All right, everybody with me so far?

46
00:02:48.870 --> 00:02:52.700
This is probably the part where
UI engineers generally come in,

47
00:02:52.700 --> 00:02:53.780
actually a little bit further.

48
00:02:53.780 --> 00:02:56.910
But this the part where you're like,
okay, I know what to do from here.

49
00:02:56.910 --> 00:02:58.840
But getting here is
where all the work's in.

50
00:02:58.840 --> 00:03:01.150
And by doing it, we're almost there.

51
00:03:01.150 --> 00:03:03.340
We're almost masters of the stack.

52
00:03:04.460 --> 00:03:06.910
I use the &amp;&amp; sometimes.

53
00:03:06.910 --> 00:03:10.910
That just means do this command and
then do this command.

54
00:03:10.910 --> 00:03:12.415
It's a good way of chaining things.

55
00:03:12.415 --> 00:03:15.916
One of my favorite ones to
do is probably git pull, so

56
00:03:15.916 --> 00:03:19.113
git pull to pull down from mastery or
whatever.

57
00:03:19.113 --> 00:03:23.152
And then &amp;&amp;, and yarn install because
people are constantly updating packages

58
00:03:23.152 --> 00:03:26.130
when I do a pull and
it just does it all in one command.

59
00:03:26.130 --> 00:03:28.034
Not necessary.
It's a nice little shortcut to have.

60
00:03:32.776 --> 00:03:34.480
&gt;&gt; Jem Young: We can make
the directories if you want.

61
00:03:34.480 --> 00:03:38.554
We don't have to do that today and,
[SOUND] we can skip it for now.

62
00:03:38.554 --> 00:03:39.643
We'll need it for tomorrow.

63
00:03:39.643 --> 00:03:44.508
But if you want, you can make directories,
ui/js ui/html, ui/css.

64
00:03:47.393 --> 00:03:50.600
&gt;&gt; Jem Young: Actually,
I'll just do it now, cuz why not?

65
00:03:50.600 --> 00:03:51.576
So mdir.

66
00:04:02.724 --> 00:04:03.800
&gt;&gt; Jem Young: Ui/js.

67
00:04:20.773 --> 00:04:23.379
&gt;&gt; Jem Young: And if you wanna check
a directory to see what's in it without

68
00:04:23.379 --> 00:04:26.047
actually going in, you can just say ls,
the directory name.

69
00:04:26.047 --> 00:04:28.780
So ls ui tells me
the directory's in there.

70
00:04:31.905 --> 00:04:36.100
&gt;&gt; Jem Young: Nice, so now we're
going to create just an empty file.

71
00:04:36.100 --> 00:04:39.990
We can save the I app.js which is fine but

72
00:04:39.990 --> 00:04:44.000
if we just want to create just a blank
file, we're gonna use the touch command.

73
00:04:44.000 --> 00:04:47.260
Touch just modifies the time
stamp on it in case you wanna

74
00:04:47.260 --> 00:04:48.380
run a search of the system.

75
00:04:48.380 --> 00:04:52.802
Say, what were the files that I modified
in the past hour, so use touch.

76
00:04:52.802 --> 00:04:56.720
Not used that often, but the benefit of
using touch is we can just touch a file

77
00:04:56.720 --> 00:04:57.980
and it just creates it automatically.

78
00:04:57.980 --> 00:05:00.460
It's like the laziest way
of creating an empty file.

79
00:05:00.460 --> 00:05:03.566
So I'm gonna say touch app.js.

80
00:05:07.945 --> 00:05:09.192
&gt;&gt; Jem Young: And have an app-js.

81
00:05:09.192 --> 00:05:12.807
It's much faster than typing going VI and
then right quitting saving,

82
00:05:12.807 --> 00:05:14.082
just a little shortcut.

83
00:05:14.082 --> 00:05:18.330
Next we're gonna do is something that
a lot of people don't know about,

84
00:05:18.330 --> 00:05:22.176
even though we probably use npm
every day is the npm init command.

85
00:05:25.340 --> 00:05:27.800
&gt;&gt; Jem Young: See,
npm init will set up your node modules.

86
00:05:27.800 --> 00:05:29.180
It'll set up your package name.

87
00:05:29.180 --> 00:05:30.110
It'll add a licence.

88
00:05:30.110 --> 00:05:31.930
It'll do all the stuff for
you automatically.

89
00:05:31.930 --> 00:05:34.514
So I'm gonna call this, app is fine.

90
00:05:34.514 --> 00:05:36.626
Call it whatever you want.

91
00:05:36.626 --> 00:05:42.993
Version fine, description,
full stack front end or something.

92
00:05:46.199 --> 00:05:49.030
&gt;&gt; Jem Young: Entry point, app-js,
test command, don't have one yet.

93
00:05:49.030 --> 00:05:50.788
Git repository, don't have one yet.

94
00:05:50.788 --> 00:05:53.681
Keywords, author, Jem.

95
00:05:53.681 --> 00:05:57.570
License, let's say MIT, doesn't matter.

96
00:05:57.570 --> 00:05:58.474
Looks okay, cool.

97
00:06:02.781 --> 00:06:07.341
&gt;&gt; Jem Young: And now what npm did was
it created this package.json for me,

98
00:06:07.341 --> 00:06:08.590
which is nice.

99
00:06:08.590 --> 00:06:10.050
It just scaffolds that out for you.

100
00:06:10.050 --> 00:06:12.490
It's much easier than just manually
creating all these things.

101
00:06:12.490 --> 00:06:14.040
You have to remember the syntax and
all that.

102
00:06:14.040 --> 00:06:17.890
Npm init is a nice command.

103
00:06:17.890 --> 00:06:19.930
Let's install Express now.

104
00:06:19.930 --> 00:06:25.970
Express is a node
JavaScript-based web server.

105
00:06:25.970 --> 00:06:27.090
It's one of the more popular ones.

106
00:06:27.090 --> 00:06:30.100
I think it's waning in popularity,
but there's lots of options there.

107
00:06:30.100 --> 00:06:31.289
There's Happy.

108
00:06:31.289 --> 00:06:35.835
There's the one that Netflix invented.

109
00:06:35.835 --> 00:06:37.938
I don't remember [LAUGH]
what it's called now.

110
00:06:37.938 --> 00:06:39.170
It's the one we use.

111
00:06:39.170 --> 00:06:40.310
I'll look it up later.

112
00:06:40.310 --> 00:06:42.700
But Express is probably
the most common one.

113
00:06:42.700 --> 00:06:46.680
I try to choose things that you can
Google search easily expressing this,

114
00:06:46.680 --> 00:06:49.430
and Express is the easiest one to use.

115
00:06:49.430 --> 00:06:52.980
So now, we switch from using app to
npm because we're using node modules.

116
00:06:52.980 --> 00:06:57.775
So, npm i, or npm install express,
and we're gonna save that.

117
00:07:05.642 --> 00:07:07.102
&gt;&gt; Jem Young: Express --save.

118
00:07:12.207 --> 00:07:15.690
&gt;&gt; Jem Young: Cool, and
if we check out our package.json,

119
00:07:15.690 --> 00:07:19.550
we see it added as a dependency express.

120
00:07:19.550 --> 00:07:23.631
A common mistake I make all the time is I
forget to do --save when I install my node

121
00:07:23.631 --> 00:07:24.240
packages.

122
00:07:24.240 --> 00:07:25.898
So they're installed one time and

123
00:07:25.898 --> 00:07:29.280
then whenever I pull this repo to
another computer nothing's there.

124
00:07:29.280 --> 00:07:31.604
I'm like, why isn't stuff working,
cuz I forgot to save it.

125
00:07:31.604 --> 00:07:32.518
So don't forget to save.

126
00:07:34.598 --> 00:07:36.950
&gt;&gt; Jem Young: But now, we're getting
into more familiar territory that we're

127
00:07:36.950 --> 00:07:38.294
all a little bit more comfortable in.

128
00:07:38.294 --> 00:07:41.566
So, let's edit that app.js file.

129
00:07:41.566 --> 00:07:48.763
And what we're gonna do is we're gonna
create a bare-bones express server.

130
00:07:50.285 --> 00:07:52.651
&gt;&gt; Jem Young: And it's gonna do
exactly what we were doing before,

131
00:07:52.651 --> 00:07:53.734
that simple HP server.

132
00:07:53.734 --> 00:07:58.260
I could've used the node module HTTP,
which is built into node.

133
00:07:59.370 --> 00:08:03.786
But because we're using Express,
the syntax is slightly different.

134
00:08:03.786 --> 00:08:08.686
We're using Express cuz we can build
on that later a lot faster than

135
00:08:08.686 --> 00:08:11.058
we can with a basic HTTP server.

136
00:08:11.058 --> 00:08:13.486
And if you're lazy or not lazy.

137
00:08:13.486 --> 00:08:14.286
I shouldn't say that.

138
00:08:14.286 --> 00:08:17.074
If you're getting hand cramps or
you just tired of typing,

139
00:08:17.074 --> 00:08:19.320
you can go to this URL and
just copy and paste it.

140
00:08:19.320 --> 00:08:20.510
I will forgive you.

141
00:08:23.655 --> 00:08:24.441
&gt;&gt; Speaker 2: I think you're
missing a parenthesis.

142
00:08:28.610 --> 00:08:29.810
&gt;&gt; Jem Young: I am missing a parenthesis.

143
00:08:29.810 --> 00:08:31.020
You just copy and paste [LAUGH].

144
00:08:31.020 --> 00:08:32.180
I'll fix it.

145
00:08:32.180 --> 00:08:33.030
Actually can I fix it?

146
00:08:34.270 --> 00:08:35.520
I think it's a screenshot.

147
00:08:36.920 --> 00:08:38.480
[SOUND] just copy and paste it [LAUGH].

