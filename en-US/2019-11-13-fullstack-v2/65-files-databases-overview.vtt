WEBVTT

1
00:00:00.320 --> 00:00:03.497
&gt;&gt; Jem Young: My professor in college,
my favorite professor, Dr.

2
00:00:03.497 --> 00:00:06.090
David Gibson, from my university.

3
00:00:06.090 --> 00:00:11.400
He once told me that 90% of what
you do as a software engineer

4
00:00:11.400 --> 00:00:15.240
is writing things into a database and
reading things out of a database.

5
00:00:15.240 --> 00:00:17.319
And having been a software engineer for
many years,

6
00:00:17.319 --> 00:00:19.360
I know that [LAUGH] is absolutely true.

7
00:00:19.360 --> 00:00:22.390
When you think about what your job
really is, it's mostly reading stuff and

8
00:00:22.390 --> 00:00:24.320
writing stuff out of a database.

9
00:00:24.320 --> 00:00:27.500
But especially as UI engineers and web
developers, we don't give a lot of thought

10
00:00:27.500 --> 00:00:33.710
to how that data is getting saved, where
it's going, where it should even live.

11
00:00:34.770 --> 00:00:38.700
So when we talk about saving data,
what's the easiest,

12
00:00:38.700 --> 00:00:41.520
simplest way of saving something?

13
00:00:41.520 --> 00:00:44.541
Persisting it over time?

14
00:00:44.541 --> 00:00:45.387
&gt;&gt; Student1: Write it to a file?

15
00:00:45.387 --> 00:00:47.350
&gt;&gt; Jem Young: A file, [LAUGH] yeah.

16
00:00:47.350 --> 00:00:51.010
A file is the simplest way of
saving some data somewhere.

17
00:00:52.170 --> 00:00:54.970
What's the problem with using a file?

18
00:00:54.970 --> 00:00:56.740
Why can't we just save
everything to a file?

19
00:00:58.290 --> 00:01:01.723
&gt;&gt; Student2: There's overhead
on reading and writing.

20
00:01:01.723 --> 00:01:03.090
And it's hard to manage the data.

21
00:01:04.780 --> 00:01:06.910
&gt;&gt; Jem Young: Yeah, but a bit more,
why is it hard to manage the data?

22
00:01:06.910 --> 00:01:12.700
&gt;&gt; Student3: Cuz it's not organized
the way that you might need it.

23
00:01:12.700 --> 00:01:14.377
&gt;&gt; Jem Young: Yeah,
we could fix that, though.

24
00:01:14.377 --> 00:01:16.010
That's absolutely right.

25
00:01:16.010 --> 00:01:20.310
But we can organize the data and save it
in such a way that it makes sense to us.

26
00:01:20.310 --> 00:01:21.290
What's the problem?

27
00:01:21.290 --> 00:01:26.020
&gt;&gt; Student3: You might only need
one word out of several pages.

28
00:01:26.020 --> 00:01:32.570
And you have to read the entire file in
order to get access to that one word.

29
00:01:32.570 --> 00:01:35.090
&gt;&gt; Jem Young: Yeah, files are not
optimized to be read in the middle,

30
00:01:35.090 --> 00:01:36.630
in the beginning, and the end.

31
00:01:36.630 --> 00:01:38.720
We can, but they're not built for that.

32
00:01:38.720 --> 00:01:40.700
And at the speed we're talking about,

33
00:01:40.700 --> 00:01:43.710
we're talking about billions
of transactions a day.

34
00:01:43.710 --> 00:01:45.950
We need something that's
optimized to do that.

35
00:01:45.950 --> 00:01:49.880
But I'd say the biggest problem with
using just a plain, pure-flat file for

36
00:01:49.880 --> 00:01:52.650
saving data, it's not portable.

37
00:01:52.650 --> 00:01:53.803
It's only gonna live on one server.

38
00:01:53.803 --> 00:01:57.580
And let's say I have ten servers, do we
all write to one file at the same time?

39
00:01:57.580 --> 00:02:02.502
That would be hard, because writing to
a file requires writing to a hard disk,

40
00:02:02.502 --> 00:02:07.510
and hard disk is like, not like,
it's the slowest level of caching.

41
00:02:07.510 --> 00:02:10.455
And if you think of writing data as
some sort of caching as persisting data,

42
00:02:10.455 --> 00:02:12.961
there's gonna be your CPU cache
that's gonna be the fastest.

43
00:02:12.961 --> 00:02:15.250
You're gonna have your memory cache.

44
00:02:15.250 --> 00:02:17.530
You're gonna have other layers of caching.

45
00:02:17.530 --> 00:02:19.290
And the slowest is gonna
be a hard drive cache.

46
00:02:19.290 --> 00:02:21.640
So writing from a file is gonna be slow.

47
00:02:21.640 --> 00:02:26.830
And also, persisting that across thousands
of servers, it's just not scalable.

48
00:02:26.830 --> 00:02:30.660
So we need some sort of data platform
that is built specifically for

49
00:02:30.660 --> 00:02:33.080
saving data and information.

50
00:02:34.110 --> 00:02:36.570
That's why the database was invented.

51
00:02:36.570 --> 00:02:40.545
It gives us a structured way of saving
data in such a way that it's readable and

52
00:02:40.545 --> 00:02:42.320
writable by all parties.

53
00:02:42.320 --> 00:02:44.550
And it just makes sense.

54
00:02:44.550 --> 00:02:48.420
When you're talking big data, so
we're talking petabytes of data,

55
00:02:48.420 --> 00:02:51.730
you have to structure that data
in a way that it's queryable.

56
00:02:51.730 --> 00:02:56.170
We can't just save things to a hard drive
somewhere, and hopefully, it works.

57
00:02:56.170 --> 00:02:56.930
And hopefully, I can run queries on it.

58
00:02:56.930 --> 00:03:00.060
You have to do it in
a way that makes sense.

