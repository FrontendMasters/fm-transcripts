WEBVTT

1
00:00:01.050 --> 00:00:03.610
&gt;&gt; Jem Young: So hopefully everybody
was able to create a path,

2
00:00:03.610 --> 00:00:04.980
call it whatever you want.

3
00:00:04.980 --> 00:00:09.666
I chose demo, and instead of header and

4
00:00:09.666 --> 00:00:12.849
express we use res.set.

5
00:00:12.849 --> 00:00:17.250
And instead of status, we say res.status,
so set any status you want.

6
00:00:17.250 --> 00:00:19.390
And send is just sending
down some text data.

7
00:00:19.390 --> 00:00:22.540
You don't have to do that, but
I thought it was pretty funny.

8
00:00:22.540 --> 00:00:24.390
Let's check this out.

9
00:00:24.390 --> 00:00:27.320
Just refresh the page, and there we go.

10
00:00:27.320 --> 00:00:29.233
I'm getting 418 as a status code.

11
00:00:29.233 --> 00:00:33.602
It says I'm a teapot because [LAUGH] yeah.

12
00:00:33.602 --> 00:00:37.397
And if we wanna look at the headers,
we just go in there and

13
00:00:37.397 --> 00:00:39.790
we see this X full stacked for life.

14
00:00:39.790 --> 00:00:41.160
Just a custom header.

15
00:00:41.160 --> 00:00:45.603
So again, custom headers are a really
powerful way of just sending down

16
00:00:45.603 --> 00:00:49.911
this one-time data for this request,
because data are stateless.

17
00:00:49.911 --> 00:00:50.640
Requests are stateless.

18
00:00:50.640 --> 00:00:53.493
We could set a temporary state
by sending a custom header.

19
00:00:53.493 --> 00:00:59.182
An example, another time when you set
a header other than 200 would be a 401,

20
00:00:59.182 --> 00:01:00.414
not authorized.

21
00:01:00.414 --> 00:01:04.196
So you can check the cookie, check
against a database of valid cookies or

22
00:01:04.196 --> 00:01:05.627
valid login credentials.

23
00:01:05.627 --> 00:01:08.447
And then if they're not logged in for
every single request,

24
00:01:08.447 --> 00:01:11.168
you'd write some middleware
that just returns a 401.

25
00:01:11.168 --> 00:01:15.500
Which means not authorised,
which means hey, you're not logged in.

26
00:01:15.500 --> 00:01:18.020
The app can either return 401,
which is just gonna error.

27
00:01:18.020 --> 00:01:23.770
Or you can handle it and say, hey,
you need to log in if I get a 401 request.

28
00:01:23.770 --> 00:01:28.051
Any questions on headers, status codes,
things like that before we move on?

29
00:01:28.051 --> 00:01:30.672
All right, everybody get this working?

30
00:01:30.672 --> 00:01:35.715
&gt;&gt; Speaker 2: Is
the X-header case-sensitive?

31
00:01:35.715 --> 00:01:36.299
&gt;&gt; Jem Young: No, good question.

32
00:01:36.299 --> 00:01:37.882
It can be anything you want.

33
00:01:37.882 --> 00:01:41.730
Generally you can send down any
header that you want as long as it's

34
00:01:41.730 --> 00:01:44.144
not one of the ones that are well-known.

35
00:01:44.144 --> 00:01:47.110
So like X-EPP-Content,
X-EPP-Language, things like that.

36
00:01:47.110 --> 00:01:50.820
The X is just a standard for
saying, this is a custom header.

37
00:01:50.820 --> 00:01:52.210
I don't expect you to do anything with it.

38
00:01:52.210 --> 00:01:53.050
I know what to do or

39
00:01:53.050 --> 00:01:56.610
just like some ancillary metadata
that I'm attaching to this request.

40
00:01:57.730 --> 00:02:01.680
Hopefully everybody's able to
get this working, if not, cool.

41
00:02:01.680 --> 00:02:02.180
All right.

