WEBVTT

1
00:00:01.810 --> 00:00:05.900
&gt;&gt; Jem Young: So find works for finding
files but what if you want to do some

2
00:00:05.900 --> 00:00:08.410
sort of introspection,
you want to look inside a file?

3
00:00:08.410 --> 00:00:13.339
We use grep, and grep is,
a lot of people don't like it because

4
00:00:13.339 --> 00:00:17.258
a lot of people don't
like regular expressions.

5
00:00:17.258 --> 00:00:21.664
They say if you have a problem and
you need to use a regular expression,

6
00:00:21.664 --> 00:00:25.112
now you have two problems,
which is absolutely true.

7
00:00:25.112 --> 00:00:27.850
[LAUGH] And a random programming tip.

8
00:00:27.850 --> 00:00:31.190
If you are regular expressions in your
code, comment what that regular expression

9
00:00:31.190 --> 00:00:35.140
is, cuz I promise you while you figure
it out, someone else probably won't.

10
00:00:35.140 --> 00:00:38.700
And it's just like a tip for
just being a good citizen.

11
00:00:38.700 --> 00:00:40.480
But grep,
we're gonna use some regular expressions.

12
00:00:40.480 --> 00:00:44.220
We are not gonna go too deep into them
because there's probably a course on

13
00:00:44.220 --> 00:00:49.840
regular expressions, and
they can get really, really nasty.

14
00:00:49.840 --> 00:00:51.263
Anybody know what code golf is?

15
00:00:52.811 --> 00:00:55.498
&gt;&gt; Jem Young: It's where you have
a problem, and then you post it on

16
00:00:55.498 --> 00:00:59.801
the internet, and someone says I'm gonna
solve this in the shortest amount of code,

17
00:00:59.801 --> 00:01:03.030
and almost invariably someone
puts the regular expressions and

18
00:01:03.030 --> 00:01:04.910
they get like pages long sometimes.

19
00:01:04.910 --> 00:01:10.650
And you can have a lot of fun with them
but that's not the way I nerd out.

20
00:01:10.650 --> 00:01:12.010
I nerd on the Fast and Furious trivia.

21
00:01:13.450 --> 00:01:14.223
It's true, I do.

22
00:01:14.223 --> 00:01:16.484
For instance, did you know in
the first Fast and Furious,

23
00:01:16.484 --> 00:01:18.899
they don't have any rear-view
mirrors in any of their cars?

24
00:01:18.899 --> 00:01:22.500
You probably didn't notice that
because they never look back.

25
00:01:22.500 --> 00:01:24.215
I'm not kidding, okay.

26
00:01:24.215 --> 00:01:26.644
[LAUGH] Go on Netflix watch The Fast and
the Furious.

27
00:01:26.644 --> 00:01:27.820
If I were there, we'll sit aside.

28
00:01:27.820 --> 00:01:30.330
But you don't have to, I'm just
trying to get warmed up for today.

29
00:01:30.330 --> 00:01:33.784
But grep is one of the things
that we've used already.

30
00:01:33.784 --> 00:01:37.032
In fact, we use it when we're typing
output through and grep just looks over

31
00:01:37.032 --> 00:01:40.720
every single line of that code, and
looks for what we're trying to find.

32
00:01:40.720 --> 00:01:43.440
And if you want to look inside a file, and

33
00:01:43.440 --> 00:01:48.500
this is actually an awesome utility,
zgrep search inside of gzip files.

34
00:01:48.500 --> 00:01:52.510
Because over time, log files
automatically get concatenated in gzip.

35
00:01:52.510 --> 00:01:57.460
You're here like,
what happened December 23rd of last year?

36
00:01:57.460 --> 00:02:01.330
You could find that log file, which is
gonna be minified, and you can use zgrep

37
00:02:01.330 --> 00:02:04.480
and search inside it rather than having
to unpack it and then run through it.

38
00:02:04.480 --> 00:02:07.199
So let's do a quick exercise on grep.

39
00:02:09.758 --> 00:02:13.089
&gt;&gt; Jem Young: And if your node
process is running, let's do ps.

40
00:02:13.089 --> 00:02:17.310
So to show the running process,
we're passing some arguments.

41
00:02:17.310 --> 00:02:20.260
aux is show all of the processes.

42
00:02:20.260 --> 00:02:21.630
Actually, I have it in my notes here.

43
00:02:21.630 --> 00:02:24.580
Show the process for all the users,
display the process owners,

44
00:02:24.580 --> 00:02:27.810
and then show processes that are not
running in the terminal, AKA,

45
00:02:27.810 --> 00:02:29.170
processes that are running
in the background.

46
00:02:30.840 --> 00:02:34.614
And you should have a process running
because if your server is up and running,

47
00:02:34.614 --> 00:02:38.001
the express server is up and running,
and that means Node is running.

48
00:02:38.001 --> 00:02:40.675
So I'm gonna do that now, clear.

49
00:02:40.675 --> 00:02:46.510
ps aux, we got to pipe that with
the redirection operator, grep node.

50
00:02:47.860 --> 00:02:53.810
And there we go,
I have a node process running.

51
00:02:53.810 --> 00:02:56.680
This is one of these things that
keep at the top of your mind

52
00:02:56.680 --> 00:02:59.433
if you're ever running through a long,
long log file.

53
00:03:01.310 --> 00:03:04.570
Grep is the fastest way to find something
rather than manually traversing every

54
00:03:04.570 --> 00:03:05.600
single line.

55
00:03:05.600 --> 00:03:09.620
Let's try do a little,
just pipe this, grep.

56
00:03:09.620 --> 00:03:14.380
Actually, let me see what's
something good to grep for.

57
00:03:14.380 --> 00:03:20.049
I'll look for every instance that I
logged in so I pipe that, grep then jem.

58
00:03:20.049 --> 00:03:20.870
Here we go.

59
00:03:22.160 --> 00:03:24.630
And here's every instance
where I logged in or

60
00:03:24.630 --> 00:03:26.390
did something that
requires sudo permission.

61
00:03:28.220 --> 00:03:32.750
Now, if I was really clever, and I'm not,
but if I was much more clever than me,

62
00:03:32.750 --> 00:03:36.140
say jem 2.0,
I would create a regular expression for

63
00:03:36.140 --> 00:03:41.960
everybody that was unauthorized, I can
take that list and grab the IP addresses.

64
00:03:41.960 --> 00:03:44.160
Then pipe those to a banned list.

65
00:03:44.160 --> 00:03:47.310
And the great thing is we now have
those capabilities of doing that.

66
00:03:47.310 --> 00:03:49.190
We could write them to a log file,
separate log file,

67
00:03:49.190 --> 00:03:52.480
which are like evil IP log file or
something like that.

68
00:03:52.480 --> 00:03:55.580
And we can do that all in
the command line in three or

69
00:03:55.580 --> 00:04:00.366
four steps on the command,
which is really powerful.

70
00:04:00.366 --> 00:04:03.510
I know, [LAUGH] we're settling in and I'm
starting to get a bit more excited about

71
00:04:03.510 --> 00:04:05.040
all the things we're going to learn today.

72
00:04:05.040 --> 00:04:06.370
All the things we have learned already.

