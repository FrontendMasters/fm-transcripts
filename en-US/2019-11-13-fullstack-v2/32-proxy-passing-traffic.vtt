WEBVTT

1
00:00:00.030 --> 00:00:02.700
&gt;&gt; Jem Young: We just got
our Express app written.

2
00:00:02.700 --> 00:00:08.728
There was a missing parentheses which I
have subtly added in there via text edit,

3
00:00:08.728 --> 00:00:10.156
threw it in there.

4
00:00:10.156 --> 00:00:13.905
But now, let's go ahead and
run that, run that app.

5
00:00:13.905 --> 00:00:19.954
So I'm going to switch over and
I can say node app.js.

6
00:00:19.954 --> 00:00:23.150
Hey, it's running, cool.

7
00:00:23.150 --> 00:00:23.735
Now what?

8
00:00:23.735 --> 00:00:25.728
Let's go to the website.

9
00:00:25.728 --> 00:00:30.890
And jemisbest.com,
refresh that, wait a second.

10
00:00:32.820 --> 00:00:36.250
Not doing anything, but
the app is running.

11
00:00:36.250 --> 00:00:38.775
What's going on now?

12
00:00:38.775 --> 00:00:40.897
&gt;&gt; Speaker 2: You need to
run it on the correct port?

13
00:00:40.897 --> 00:00:44.912
&gt;&gt; Jem Young: Yes, we do, but
the default port is port 80.

14
00:00:44.912 --> 00:00:49.299
But I wonder if we can do port 3000.

15
00:00:49.299 --> 00:00:51.725
Now it's working.

16
00:00:51.725 --> 00:00:52.516
But that's not convenient.

17
00:00:52.516 --> 00:00:56.631
We cann't build an app and say,
hey, go to jemis.thebest or

18
00:00:56.631 --> 00:01:00.049
jemisthebest, but
you gotta go to port 3000.

19
00:01:00.049 --> 00:01:02.264
Cuz my mom's gonna be like, what's a port?

20
00:01:02.264 --> 00:01:04.120
And that doesn't work.

21
00:01:04.120 --> 00:01:08.052
So we need to somehow direct
that traffic to port 80.

22
00:01:08.052 --> 00:01:09.975
Cuz we got the domain, we got the IP,

23
00:01:09.975 --> 00:01:13.900
we've got Nginx running, but
we still need to connect Nginx to Express.

24
00:01:13.900 --> 00:01:16.800
So this what we're gonna do next,
we're gonna tune Nginx so

25
00:01:16.800 --> 00:01:18.100
that it points to the correct port.

26
00:01:19.270 --> 00:01:22.760
To that we're gonna use directives,
that weird word I used earlier.

27
00:01:22.760 --> 00:01:25.468
We're gonna use the proxy_pass directive.

28
00:01:25.468 --> 00:01:28.471
And all that means is
we're gonna proxy pass,

29
00:01:28.471 --> 00:01:32.937
we're going to proxy all the traffic
from that's going to / which is

30
00:01:32.937 --> 00:01:37.493
the general root domain to the actual
Node server on a different port.

31
00:01:37.493 --> 00:01:39.273
So let's go and do that.

32
00:01:39.273 --> 00:01:44.292
And this change is fairly short.

33
00:01:44.292 --> 00:01:46.439
We're going to edit that
Nginx configuration again.

34
00:01:46.439 --> 00:01:54.038
So sudo vi
/etc/nginx/sites-available/default.

35
00:01:54.038 --> 00:01:57.904
And then we're going to scroll
down to that location directive,

36
00:01:57.904 --> 00:02:01.716
delete out everything in there,
and then proxy_pass into it.

37
00:02:01.716 --> 00:02:06.858
&gt;&gt; Speaker 2: You put the private
key here, or the private key?

38
00:02:06.858 --> 00:02:11.275
Do you put in, for the password,
is it the one that you, for the user?

39
00:02:11.275 --> 00:02:16.035
&gt;&gt; Jem Young: It's whatever you set when
you created that user, that sudo user.

40
00:02:16.035 --> 00:02:18.512
&gt;&gt; Speaker 3: Sorry, under what section?

41
00:02:18.512 --> 00:02:20.087
&gt;&gt; Jem Young: In the location directive.

42
00:02:20.087 --> 00:02:25.233
So scroll down and it'll have
something like, actually, let me.

43
00:02:25.233 --> 00:02:26.386
I'll just-
&gt;&gt; Speaker 3: Files?

44
00:02:26.386 --> 00:02:28.411
&gt;&gt; Jem Young: Yeah, just undo.

45
00:02:28.411 --> 00:02:32.372
So Undo, so scroll down to here.

46
00:02:32.372 --> 00:02:33.567
And then just delete these files.

47
00:02:33.567 --> 00:02:40.484
So I'm going to use double d to delete,
then switch to insert mode and tab in.

48
00:02:40.484 --> 00:02:44.062
I'm going to say proxy_pass.

49
00:02:44.062 --> 00:02:48.797
So with this proxy_pass directive,
all we're telling it is, hey,

50
00:02:48.797 --> 00:02:53.467
any request that comes in to / or,
well, we only have one right now.

51
00:02:53.467 --> 00:02:56.667
So any request that comes in,
let's just forward that request and

52
00:02:56.667 --> 00:02:59.650
let our Node application handle it,
and on a different port.

53
00:02:59.650 --> 00:03:01.260
And this way,
we don't have to change ports.

54
00:03:01.260 --> 00:03:03.472
We don't have to run it on port 80 or
anything like that.

55
00:03:03.472 --> 00:03:07.195
We can run on infinite ports on,
well, not infinite ports,

56
00:03:07.195 --> 00:03:11.805
not infinite ports, and the Nginx
knows exactly where they're handled.

57
00:03:11.805 --> 00:03:14.473
And the benefit of doing something
like this is I can run six different

58
00:03:14.473 --> 00:03:15.164
applications and

59
00:03:15.164 --> 00:03:17.890
they all run on a different port
they're all running at the same time.

60
00:03:17.890 --> 00:03:22.868
And I can take one application down, bring
another one up, I can route to a database.

61
00:03:22.868 --> 00:03:25.953
Most of what we're doing is gonna
be with the proxy_pass directive,

62
00:03:25.953 --> 00:03:26.853
at least for today.

63
00:03:29.044 --> 00:03:29.779
&gt;&gt; Jem Young: All right.

64
00:03:32.759 --> 00:03:33.974
&gt;&gt; Jem Young: Oops, and
I forgot to restart the server.

65
00:03:33.974 --> 00:03:37.768
So, let's write quit out of here.

66
00:03:37.768 --> 00:03:42.568
And we'll say,
sudo service nginx reload, or

67
00:03:42.568 --> 00:03:47.136
restart, I don't think it matters, cool.

68
00:03:47.136 --> 00:03:49.952
If you have an error, the good thing about
Nginx is if you have an error in your

69
00:03:49.952 --> 00:03:52.461
configuration, it will throw
an error before it lets you restart.

70
00:03:52.461 --> 00:03:56.520
So that way your web server keeps up and
running, it's pretty nice.

71
00:03:56.520 --> 00:04:01.062
And let's test to make
sure I did that correctly.

72
00:04:01.062 --> 00:04:04.524
Oops, forgot to start my app back up.

73
00:04:11.366 --> 00:04:13.837
&gt;&gt; Jem Young: Nice.

74
00:04:13.837 --> 00:04:21.574
So now I have my domain connected to my
Express application running on port 80.

75
00:04:21.574 --> 00:04:22.637
Not bad.

76
00:04:22.637 --> 00:04:25.310
If you're running into troubles,
don't forget to restart Nginx.

77
00:04:25.310 --> 00:04:27.410
Don't forget to start your
Node application backup.

78
00:04:27.410 --> 00:04:28.910
And that's a pain, so

79
00:04:28.910 --> 00:04:31.671
we're gonna figure out how to get
around restarting your application.

80
00:04:32.950 --> 00:04:35.369
&gt;&gt; Speaker 3: Did you
mention what service is?

81
00:04:35.369 --> 00:04:38.600
Like the service command,
what does that do?

82
00:04:38.600 --> 00:04:39.317
&gt;&gt; Jem Young: No, I didn't.

83
00:04:39.317 --> 00:04:40.530
And thanks for asking.

84
00:04:40.530 --> 00:04:42.778
Service is the highest-level command for

85
00:04:42.778 --> 00:04:45.830
any sort of daemon running
in the background.

86
00:04:45.830 --> 00:04:47.330
Not everything runs on a service.

87
00:04:47.330 --> 00:04:50.560
Tomorrow we're gonna use
something called systemctl,

88
00:04:50.560 --> 00:04:54.080
which is a way of managing your services,
but at a lower layer.

89
00:04:54.080 --> 00:04:57.398
But services is a nice wrapper,
it's much cleaner.

90
00:04:57.398 --> 00:05:01.866
The interface we'll see
tomorrow is more advanced.

91
00:05:01.866 --> 00:05:04.725
And generally,
I try to pick the simplest thing possible.

92
00:05:04.725 --> 00:05:07.150
But that's what services is.

93
00:05:07.150 --> 00:05:09.341
You can do lots of things with services.

94
00:05:09.341 --> 00:05:12.519
I can register my Node application as a
service that's running in the background.

95
00:05:12.519 --> 00:05:13.970
It's probably not the best
way to manage it.

96
00:05:13.970 --> 00:05:16.631
But something like Nginx that
you always want running,

97
00:05:16.631 --> 00:05:18.169
we just use a services command.

98
00:05:18.169 --> 00:05:19.860
But, good question.

99
00:05:19.860 --> 00:05:22.566
I'm surprised this is the first one we've
gotten on any sort of commands I've

100
00:05:22.566 --> 00:05:23.100
been running.

101
00:05:23.100 --> 00:05:23.811
It's okay.

102
00:05:23.811 --> 00:05:24.521
Yes?

103
00:05:24.521 --> 00:05:30.281
&gt;&gt; Speaker 3: In the nginx folder, there
is a folder called sites enabled as well.

104
00:05:30.281 --> 00:05:34.079
What's the difference between enabled and
available sites?

105
00:05:34.079 --> 00:05:35.830
&gt;&gt; Jem Young: Actually,
one sym links to the other.

106
00:05:35.830 --> 00:05:40.980
I want to say, I think sites
available sym links to sites enabled.

107
00:05:40.980 --> 00:05:43.549
You can manage different
configurations that way.

108
00:05:43.549 --> 00:05:47.848
So you can change Nginx configurations
without changing what's actually running.

109
00:05:47.848 --> 00:05:50.661
And then whenever you want it to be
available, you can just copy it over.

110
00:05:50.661 --> 00:05:51.776
And that's one way of doing it.

111
00:05:51.776 --> 00:05:56.086
There's a, I'm gonna say it,
I'm gonna try this.

112
00:05:56.086 --> 00:06:02.430
nginx -t, yeah.

113
00:06:02.430 --> 00:06:06.011
So you can run the nginx -t, and
that runs over your configuration and

114
00:06:06.011 --> 00:06:08.144
validates that everything makes sense.

115
00:06:08.144 --> 00:06:10.604
In fact, we even have some things
in here that don't make sense,

116
00:06:10.604 --> 00:06:13.300
which is weird because it's
the default configuration.

117
00:06:13.300 --> 00:06:16.800
But that's what the sites enabled
versus sites available is.

118
00:06:16.800 --> 00:06:21.300
And another thing is you generally
don't modify your default.

119
00:06:21.300 --> 00:06:22.250
You make it per site.

120
00:06:22.250 --> 00:06:25.307
So I'd say,
jemisthe.best configuration, and

121
00:06:25.307 --> 00:06:27.945
then have an Nginx configuration for that.

122
00:06:27.945 --> 00:06:29.660
And then I merge them
all together into one.

123
00:06:29.660 --> 00:06:31.130
But because we're only
doing one web server,

124
00:06:31.130 --> 00:06:34.440
and it's the simplest example,
that's the best practice.

125
00:06:34.440 --> 00:06:35.480
Good question, though.

126
00:06:35.480 --> 00:06:37.503
Surprised that didn't come up either.

127
00:06:37.503 --> 00:06:39.678
You all are sharp.

128
00:06:39.678 --> 00:06:43.404
Okay, everybody's website up and running,
we get node back up and running.

129
00:06:43.404 --> 00:06:44.788
You're connected.

130
00:06:44.788 --> 00:06:48.274
All right, so now we've successfully
made a web application.

131
00:06:48.274 --> 00:06:49.892
Nice job, everyone.

132
00:06:49.892 --> 00:06:54.131
It was a journey to get here,
but we did it together.

133
00:06:54.131 --> 00:06:54.670
That's what's important.

