WEBVTT

1
00:00:01.250 --> 00:00:05.350
&gt;&gt; Jem Young: To finish off the HP
section, we spent a while on it.

2
00:00:05.350 --> 00:00:06.940
That's pretty rewarding.

3
00:00:06.940 --> 00:00:11.830
We now have a modern site running on
SSL and HP/2 and you're thinking,

4
00:00:11.830 --> 00:00:15.210
that's great, but
HTTP/3 is coming out soon, too.

5
00:00:15.210 --> 00:00:17.112
I feel like I just figured out HTTP/2.

6
00:00:17.112 --> 00:00:17.844
It's okay.

7
00:00:17.844 --> 00:00:19.068
Here's HTTP/3.

8
00:00:19.068 --> 00:00:24.110
HTTP/3 is out.

9
00:00:24.110 --> 00:00:25.460
But I say out.

10
00:00:25.460 --> 00:00:28.140
The internet's pretty slow in
terms of rolling things out.

11
00:00:28.140 --> 00:00:32.210
For instance, only about 42% of
the internet uses HTTP/2 now,

12
00:00:32.210 --> 00:00:36.070
even though it's been out for years now.

13
00:00:36.070 --> 00:00:37.800
It's a very slow progress.

14
00:00:39.074 --> 00:00:42.070
I blame banks and corporations,
they're, yeah we'll get to it.

15
00:00:42.070 --> 00:00:47.802
But when you're running a large server
with thousands of users, adding HTTP/2,

16
00:00:47.802 --> 00:00:52.600
adding SSL is not as easy as we made
it here, and it does cost money.

17
00:00:52.600 --> 00:00:55.090
You're gonna increase your server time and
things like that.

18
00:00:55.090 --> 00:00:58.823
But just in time for people not to
adopt HTTP/2, HTTP/3 comes out.

19
00:00:58.823 --> 00:01:02.832
The difference between HTTP/2 and

20
00:01:02.832 --> 00:01:09.950
HTTP/3 is HTTP/2 in all previous
generations of HTTP bonus.

21
00:01:09.950 --> 00:01:12.530
How many times did I say HTTP today?

22
00:01:12.530 --> 00:01:13.340
So many.

23
00:01:13.340 --> 00:01:16.920
But all the previous generations,
they all run over TCP.

24
00:01:17.930 --> 00:01:21.790
Remember that it is still that handshake
protocol, while HTTP/2 made it faster

25
00:01:21.790 --> 00:01:25.470
because we multiplex that so we are not
doing a handshake every single time.

26
00:01:25.470 --> 00:01:26.890
There is still a cost to doing that.

27
00:01:26.890 --> 00:01:29.810
And they are still doing
that compression or

28
00:01:29.810 --> 00:01:32.130
they are still doing
that error correction.

29
00:01:32.130 --> 00:01:35.670
So if we think back to our
earlier lesson about TCP.

30
00:01:36.980 --> 00:01:41.970
TCP error corrects, so if any packets are
missing, it says, hey, one, two ,three,

31
00:01:41.970 --> 00:01:45.310
four, five, but six and seven are missing.

32
00:01:45.310 --> 00:01:47.570
And you send that request to
the server and the server's, my bad.

33
00:01:47.570 --> 00:01:48.610
Let me send those again.

34
00:01:48.610 --> 00:01:52.540
And that's what makes TCP reliable and
it was something that was necessary,

35
00:01:52.540 --> 00:01:56.270
especially back in the early days of
the internet when connections would drop.

36
00:01:56.270 --> 00:02:00.920
Especially when we're using dial up,
which is very prone to lossy connection.

37
00:02:00.920 --> 00:02:05.200
I don't know if any of you ever
use dial up, dating myself again.

38
00:02:05.200 --> 00:02:08.480
But I don't know if you know the pain
of downloading an mp3 you're, yeah,

39
00:02:08.480 --> 00:02:12.110
it's the new, I don't know who's popular..

40
00:02:12.110 --> 00:02:15.620
Blink 182 that was probably that's
about the right time, right?

41
00:02:15.620 --> 00:02:19.600
I spent an hour downloading Blink
182 one song over my 56k modem.

42
00:02:19.600 --> 00:02:23.740
And then someone picks up the phone
like hello, and you lose it all.

43
00:02:23.740 --> 00:02:27.240
And yes, the old days of the internet
connections were unreliable, so

44
00:02:27.240 --> 00:02:29.440
we needed something with
a lot of error correction.

45
00:02:29.440 --> 00:02:32.540
Now, the internet's much more reliable,
it's much more of a staple,

46
00:02:32.540 --> 00:02:37.500
kind of like a power line, or
your water line or something like that.

47
00:02:37.500 --> 00:02:40.390
So, what Google did,
was they invented a new protocol called,

48
00:02:40.390 --> 00:02:41.600
Quick UDP Connections.

49
00:02:41.600 --> 00:02:46.360
So instead of HTTP over TCP,
we now have HTTP over UDP.

50
00:02:47.560 --> 00:02:48.630
And from our earlier lessons,

51
00:02:48.630 --> 00:02:53.010
remember that UDP is more of a blast,
where CCP is, hey did you get it?

52
00:02:53.010 --> 00:02:54.544
He's like yeah I got it.

53
00:02:54.544 --> 00:02:58.140
UDP is I'm gonna send you data and
assuming you got it.

54
00:02:58.140 --> 00:03:02.590
And it has some error correction built in,
but because the internet's more reliable,

55
00:03:02.590 --> 00:03:05.420
it's much faster cuz we don't
have to do that handshake of sin

56
00:03:05.420 --> 00:03:09.530
in acts in acknowledge and
all these other things UDP just blasts.

57
00:03:09.530 --> 00:03:13.245
If you wanna check if
anything supporting UDP

58
00:03:13.245 --> 00:03:18.100
using quicker HTTP/3,
we can actually pull up a Gmail.

59
00:03:18.100 --> 00:03:20.410
I won't pull my Gmail cuz that's my mail.

60
00:03:20.410 --> 00:03:24.090
But if you open your Gmail or
something Google own property,

61
00:03:24.090 --> 00:03:27.340
you'll see in the protocol
it now says HTTP/quick 46.

62
00:03:27.340 --> 00:03:31.080
That's because HTTP/3
is not quite official.

63
00:03:31.080 --> 00:03:33.520
It's not like well supported
by all the browsers.

64
00:03:33.520 --> 00:03:35.630
But we, we can't implement this yet

65
00:03:35.630 --> 00:03:38.700
because it's not really
being supported too much.

66
00:03:38.700 --> 00:03:41.040
I don't even think NGINX supports
it far as I know, Sam, do you know?

67
00:03:43.310 --> 00:03:44.830
&gt;&gt; Sam: No, not off the top of my head.

68
00:03:44.830 --> 00:03:47.430
I know that Lighthouse
definitely supports it.

69
00:03:47.430 --> 00:03:47.930
&gt;&gt; Jem Young: Really?

70
00:03:51.310 --> 00:03:51.980
That makes sense.

71
00:03:51.980 --> 00:03:54.100
That's a Google owned product as well.

72
00:03:54.100 --> 00:03:57.860
Google and Cloudflare now support HTTP/3.

73
00:03:57.860 --> 00:03:59.960
We'll see gradual adoption, but

74
00:03:59.960 --> 00:04:03.540
this is again something you'll
see in the next five years or so.

75
00:04:03.540 --> 00:04:08.620
And it does create a baby 13,
it depends on the connection,

76
00:04:08.620 --> 00:04:13.440
but say like 13 to 20% speed
increase over HTTP/2 which

77
00:04:13.440 --> 00:04:16.900
is pretty impressive because you think
that speed increase over HTTP/1, we're

78
00:04:16.900 --> 00:04:21.750
talking up to 50% faster just from just
configuring the way we're sending data.

79
00:04:23.050 --> 00:04:24.310
That's pretty awesome.

80
00:04:24.310 --> 00:04:26.320
I don't know about you,
but that's pretty cool.

81
00:04:26.320 --> 00:04:28.144
Maybe in version three of full-stack or

82
00:04:28.144 --> 00:04:30.350
front-end will be able
to implement HTTP/3.

