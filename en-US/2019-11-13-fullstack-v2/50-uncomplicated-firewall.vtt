WEBVTT

1
00:00:00.000 --> 00:00:03.747
&gt;&gt; Jem Young: So
I previously have taught about IP tables,

2
00:00:03.747 --> 00:00:07.198
which are ways of routing, blocking, or

3
00:00:07.198 --> 00:00:12.242
denying requests to certain
ports over certain protocols.

4
00:00:12.242 --> 00:00:15.808
But they're really onerous.

5
00:00:15.808 --> 00:00:19.960
And if you can't tell here,
it's not a very friendly syntax.

6
00:00:19.960 --> 00:00:24.544
Fortunately the kind people at the Open
Software Foundation and Ubuntu and

7
00:00:24.544 --> 00:00:29.416
Linux, and just the good citizens of
the Internet, created something a little

8
00:00:29.416 --> 00:00:33.435
bit more lightweight called ufw,
the uncomplicated firewall.

9
00:00:33.435 --> 00:00:39.280
If you can't tell, this uncomplicated
firewall will be much less complicated.

10
00:00:39.280 --> 00:00:43.997
And again, a firewall just controls
the access to these ports and

11
00:00:43.997 --> 00:00:46.846
who can get in and out of your computer.

12
00:00:48.072 --> 00:00:52.287
&gt;&gt; Jem Young: And unlike IP tables,
ufw has a much simpler syntax for

13
00:00:52.287 --> 00:00:53.667
basic services.

14
00:00:53.667 --> 00:00:57.631
So if I want to deny say
HPS I can say ufw deny HPS.

15
00:00:57.631 --> 00:01:02.574
And it's much easier to reason about when
you're think about on a surface level

16
00:01:02.574 --> 00:01:04.216
rather than a port level.

17
00:01:04.216 --> 00:01:07.543
And I don't have to be like,
I don't have to think,

18
00:01:07.543 --> 00:01:10.658
I want to block all TCP
traffic to port 4430.

19
00:01:10.658 --> 00:01:15.101
No, I can just say UFW deny HPS, and
it's gonna block all traffic to port 443.

20
00:01:15.101 --> 00:01:17.771
So right now it's not running.

21
00:01:17.771 --> 00:01:21.459
So let's get it up and
running because you know what I want?

22
00:01:21.459 --> 00:01:23.990
I want to close port 3000, yes.

23
00:01:23.990 --> 00:01:28.885
&gt;&gt; Speaker 2: What's the difference
between deny and reject?

24
00:01:28.885 --> 00:01:29.710
&gt;&gt; Jem Young: Great question.

25
00:01:29.710 --> 00:01:30.814
I wonder if I cover that later?
If not, I'll cover right now.

26
00:01:30.814 --> 00:01:36.820
So deny is,
I'm trying to remember the difference.

27
00:01:36.820 --> 00:01:41.374
Deny black holes requests, okay,
it doesn't respond to requests.

28
00:01:41.374 --> 00:01:46.171
So if I'm trying to get into port, I don't
know, 47, I can just ping that port or

29
00:01:46.171 --> 00:01:49.891
try to access it, it'll just hang,
it'll just hang and hang.

30
00:01:49.891 --> 00:01:52.366
But internally I've already
dropped that request.

31
00:01:52.366 --> 00:01:57.500
I didn't do anything about it, but I won't
respond explicitly that port is closed.

32
00:01:57.500 --> 00:02:01.129
Reject says, hey, this port is closed,
and it sends a packet back to the server.

33
00:02:01.129 --> 00:02:05.550
The difference is sometimes you wanna
be explicit about telling people that

34
00:02:05.550 --> 00:02:09.693
the port is closed, or something
like you're using the wrong port, or

35
00:02:09.693 --> 00:02:12.267
you're trying to access the wrong server.

36
00:02:12.267 --> 00:02:15.444
You wanna be a good citizen to
the people trying to use your service.

37
00:02:15.444 --> 00:02:17.700
Other times you wanna black hole them and

38
00:02:17.700 --> 00:02:20.961
not let them tell them anything
about what's happening.

39
00:02:20.961 --> 00:02:24.549
You don't know if that port's open or if
it's just taking a long time to respond or

40
00:02:24.549 --> 00:02:25.076
anything.

41
00:02:25.076 --> 00:02:29.305
Generally you always wanna black hole
requests, unless you have a specific case

42
00:02:29.305 --> 00:02:33.223
when you wanna tell people that the
service that you're trying to access is

43
00:02:33.223 --> 00:02:36.670
incorrect or the parameters are invalid or
something like that.

44
00:02:36.670 --> 00:02:40.642
Great question though, I'm surprised
they didn't put it in there, and

45
00:02:40.642 --> 00:02:43.988
I could have it backwards,
wait, no, deny or reject, yes.

46
00:02:43.988 --> 00:02:47.469
A lot like the example we gave
earlier when we're trying to ping

47
00:02:47.469 --> 00:02:50.372
frontendmasters.com and
it just hangs and hangs.

48
00:02:50.372 --> 00:02:54.567
That's a good way of kind of,
I'll say slowing down attackers.

49
00:02:54.567 --> 00:02:58.365
I don't wanna say deny attackers
because they'll get around that.

50
00:02:58.365 --> 00:03:01.636
But it's good way of kind of eating
resources cuz every time they try to

51
00:03:01.636 --> 00:03:05.128
connect to a service that just black
holes them, it just hangs and hangs and

52
00:03:05.128 --> 00:03:08.800
it eats their computer resources,
it kind of slows down their port crawling.

53
00:03:08.800 --> 00:03:13.069
Versus reject which is explicitly
saying you're not allowed to do that.

54
00:03:13.069 --> 00:03:13.786
Great question though.

55
00:03:16.363 --> 00:03:21.849
&gt;&gt; Jem Young: So ufw's installed but
it may not be running,

56
00:03:21.849 --> 00:03:24.810
but let's check it out.

57
00:03:24.810 --> 00:03:31.224
So sudo ufw status,
&gt;&gt; Jem Young: It's inactive.

58
00:03:31.224 --> 00:03:35.193
So I'm gonna say sudo ufw start,
should do it.

59
00:03:35.193 --> 00:03:37.474
It does not enable.

60
00:03:37.474 --> 00:03:38.608
I always do that.

61
00:03:38.608 --> 00:03:40.743
sudo ufw enable.

62
00:03:42.258 --> 00:03:47.054
&gt;&gt; Jem Young: And this may interrupt
my existing SSH connection,

63
00:03:47.054 --> 00:03:50.441
so we're just gonna say yes.

64
00:03:50.441 --> 00:03:52.964
&gt;&gt; Jem Young: And we're good.

65
00:03:52.964 --> 00:03:57.364
I'll say this for you ufw, again,
when you start getting into security and

66
00:03:57.364 --> 00:04:00.403
IP tables and routing,
ufw's a little bit easier.

67
00:04:00.403 --> 00:04:03.855
But you can absolutely lock
yourself out of the server.

68
00:04:03.855 --> 00:04:08.421
If I close port 22, which is my SSH port,
I have no way of getting into the server

69
00:04:08.421 --> 00:04:11.526
at that point and I'm locked out,
so be very careful.

70
00:04:11.526 --> 00:04:15.687
ufw's okay, you're probably not
gonna do anything too bad, but

71
00:04:15.687 --> 00:04:19.550
if you start rejecting SSH requests or
black holeing them in,

72
00:04:19.550 --> 00:04:24.303
you'll be in a world of hurt cuz there's
no way to get in the server that point

73
00:04:24.303 --> 00:04:28.567
because the port is closed,
it's literally locked up somewhere.

74
00:04:30.217 --> 00:04:33.060
&gt;&gt; Jem Young: But
we allowed SSH, so we're okay.

75
00:04:33.060 --> 00:04:35.937
So let's run ufw status
again to see what's open.

76
00:04:35.937 --> 00:04:41.364
So sudo ufw status should be up and
running, and it's running.

77
00:04:42.978 --> 00:04:48.940
&gt;&gt; Jem Young: And let's find the command
to show me what is the routes

78
00:04:48.940 --> 00:04:54.655
they're running,
what's your firewall status?

79
00:04:54.655 --> 00:04:56.370
Let's say status verbose.

80
00:04:59.212 --> 00:05:03.827
&gt;&gt; Jem Young: Nothing, so
right now we're still okay because we

81
00:05:03.827 --> 00:05:07.596
didn't lock ourselves out completely.

82
00:05:07.596 --> 00:05:13.890
But I'm just gonna make sure I had
a rule for this, so sudo ufw allow ssh.

83
00:05:13.890 --> 00:05:19.820
Now when I do go up, we see that
we added a rule for SSH for now.

84
00:05:19.820 --> 00:05:22.292
It stays open because
when you turn on ufw,

85
00:05:22.292 --> 00:05:27.031
by default it's not gonna block your SSH
port because they know that if you enabled

86
00:05:27.031 --> 00:05:31.239
it when you're on your server you get
kicked out and then you locked out.

87
00:05:31.239 --> 00:05:36.123
Fortunately, there are people that they
try to make things a little bit easier

88
00:05:36.123 --> 00:05:36.721
for you.

89
00:05:36.721 --> 00:05:39.657
We want to enable a few other things,
or actually, sorry,

90
00:05:39.657 --> 00:05:41.263
we didn't actually enable it.

91
00:05:41.263 --> 00:05:44.652
Or no, we did already enable it.

92
00:05:44.652 --> 00:05:50.209
Well I wanna allow a few other things,
so I wanna allow HTTP.

93
00:05:50.209 --> 00:05:55.228
So sudo ufw allow htp, and
you grant status again,

94
00:05:55.228 --> 00:05:58.982
and we see the status of our firewall.

95
00:05:58.982 --> 00:06:02.780
This is a much, much,
much friendlier syntax than IP tables.

96
00:06:02.780 --> 00:06:08.060
[LAUGH] I don't know if any of you have
ever done anything with IP tables,

97
00:06:08.060 --> 00:06:12.900
but they are not friendly at all,
and they make sense once you kind

98
00:06:12.900 --> 00:06:16.602
of understand the syntax and
what's happening.

99
00:06:16.602 --> 00:06:20.195
But ufw is just a nice wrapper,
a clean wrapper around IP tables.

100
00:06:21.903 --> 00:06:23.847
&gt;&gt; Jem Young: Yeah,
that's just showing status, yes.

101
00:06:23.847 --> 00:06:25.834
&gt;&gt; Speaker 3: We're gonna allow HTTPS and

102
00:06:25.834 --> 00:06:29.814
then use Nginx to redirect all
the HTTP traffic to HTTPS?

103
00:06:29.814 --> 00:06:31.141
&gt;&gt; Jem Young: Yes, you're jumping ahead.

104
00:06:31.141 --> 00:06:33.166
[LAUGH] No, it's okay.

105
00:06:33.166 --> 00:06:37.693
We will eventually, we're gonna open
the HTTPS port, so that's port 443,

106
00:06:37.693 --> 00:06:38.968
when we turn on HTTPS.

107
00:06:38.968 --> 00:06:42.050
And that'll happen a little bit later.

108
00:06:42.050 --> 00:06:47.395
So using ufw without it looking it up,
how would I create

109
00:06:47.395 --> 00:06:52.306
a rule to block all HTTP
connections if I wanted to?

110
00:06:52.306 --> 00:06:54.196
It's not a trick?

111
00:06:55.641 --> 00:06:58.207
&gt;&gt; Jem Young: Anybody,
don't make me call on you.

112
00:06:58.207 --> 00:06:59.907
&gt;&gt; Speaker 4: ufw reject?

113
00:06:59.907 --> 00:07:01.271
&gt;&gt; Jem Young: Yeah, reject what?

114
00:07:01.271 --> 00:07:02.094
&gt;&gt; Speaker 4: HTTP.

115
00:07:02.094 --> 00:07:02.978
&gt;&gt; Jem Young: Yeah, nothing to it.

116
00:07:02.978 --> 00:07:07.228
And that's why it's called
the uncomplicated firewall.

117
00:07:07.228 --> 00:07:09.417
It just simplifies your firewall and

118
00:07:09.417 --> 00:07:12.885
it makes it really easy to
understand what's happening.

119
00:07:14.605 --> 00:07:15.349
&gt;&gt; Jem Young: sudo reject http, nice.

