WEBVTT

1
00:00:00.472 --> 00:00:08.111
&gt;&gt; Jem Young: HTTPS, we had a long
session on security, but what is HTTPS?

2
00:00:08.111 --> 00:00:09.767
Why do we need it?

3
00:00:09.767 --> 00:00:12.648
We touched on it a little bit.

4
00:00:12.648 --> 00:00:13.491
Sam?

5
00:00:13.491 --> 00:00:18.502
&gt;&gt; Speaker 2: It's SSL over, or
secure sockets layer, over HTTPS.

6
00:00:18.502 --> 00:00:19.053
&gt;&gt; Jem Young: Exactly.

7
00:00:19.053 --> 00:00:20.527
&gt;&gt; Speaker 2: Over HTTP.

8
00:00:20.527 --> 00:00:22.976
&gt;&gt; Jem Young: And why we need it though?

9
00:00:22.976 --> 00:00:24.292
&gt;&gt; Speaker 2: So that anybody and

10
00:00:24.292 --> 00:00:28.823
their dog can't inspect the traffic
between you and the server?

11
00:00:28.823 --> 00:00:30.106
&gt;&gt; Jem Young: That's exactly right.

12
00:00:30.106 --> 00:00:33.951
It's kind of wild to think that in
the olden days of not that long

13
00:00:33.951 --> 00:00:36.854
ago I literally could just
set up a fake router or

14
00:00:36.854 --> 00:00:39.248
I could just tap into your phone line and

15
00:00:39.248 --> 00:00:44.362
intercept all of the data that's coming
and going and it was totally unencrypted.

16
00:00:44.362 --> 00:00:48.009
It's the equivalent of me yelling
across the room, what my data is.

17
00:00:48.009 --> 00:00:50.957
And if someone just happens
to be in earshot of that,

18
00:00:50.957 --> 00:00:52.972
they know exactly what I'm doing.

19
00:00:52.972 --> 00:00:54.745
And this is the way
the Internet used to work.

20
00:00:54.745 --> 00:01:00.387
Fortunately now, thanks to persistence
of a lot of the tech companies and

21
00:01:00.387 --> 00:01:03.489
mainly browsers, we all use HTTPS now.

22
00:01:03.489 --> 00:01:05.324
And that's one of the things that, again,

23
00:01:05.324 --> 00:01:08.158
it's fascinating that the Internet
keeps working the way it does.

24
00:01:08.158 --> 00:01:11.564
And we keep pushing these new
protocols and standards forward,

25
00:01:11.564 --> 00:01:15.297
even though there's no one entity
that saying how we should operate.

26
00:01:15.297 --> 00:01:18.951
But HTTPS, what it does is it
encrypts all the data in transit.

27
00:01:18.951 --> 00:01:22.108
In the old days and
current days with HTTP, if I was going to

28
00:01:22.108 --> 00:01:26.632
frontendmasters.com put in my credit
card information, it'd be in plain text.

29
00:01:26.632 --> 00:01:28.983
I could just intercept that packet and
read it.

30
00:01:28.983 --> 00:01:32.600
And I can even pass it along back to
frontendmasters, so that they wouldn't

31
00:01:32.600 --> 00:01:36.402
even know or you wouldn't even know that
your data is being sniffed and stolen.

32
00:01:36.402 --> 00:01:39.382
In fact, they can keep doing that for
years and people did that.

33
00:01:39.382 --> 00:01:42.792
And people were like,
why is it when I use this website,

34
00:01:42.792 --> 00:01:46.577
about a month later my credit
card gets stolen mysteriously?

35
00:01:46.577 --> 00:01:49.700
And it's because people were sitting in
the middle and intercepting requests.

36
00:01:49.700 --> 00:01:52.191
And those are probably the most
nefarious kinds of attackers,

37
00:01:52.191 --> 00:01:54.735
the ones that don't let you know
that they're doing anything.

38
00:01:54.735 --> 00:01:58.345
You just sort of start the seeing
things go wrong here in there.

39
00:01:58.345 --> 00:02:03.389
But now so what it use to be
another benefit of HTTP was,

40
00:02:03.389 --> 00:02:10.201
or a down side of HTTP was you couldn't
guarantee who you were talking to.

41
00:02:10.201 --> 00:02:13.428
For instance, we talked earlier
about if I let my domain expire and

42
00:02:13.428 --> 00:02:16.206
someone picks it up really
quickly which they tend to do.

43
00:02:16.206 --> 00:02:20.804
I can now create jemyoung.com or
frontendmasters.com if let it drop and

44
00:02:20.804 --> 00:02:25.341
you have no proof that this isn't
the person you were talking to before.

45
00:02:25.341 --> 00:02:27.556
Because most people don't,
you're not checking IP addresses.

46
00:02:27.556 --> 00:02:28.994
Most people are never gonna
check out IP addresses.

47
00:02:28.994 --> 00:02:31.587
You're just gonna check that domain name.

48
00:02:31.587 --> 00:02:34.509
And I think it's really interesting
that the Internet used to be like this.

49
00:02:34.509 --> 00:02:38.212
You used to be able to
do all these things.

50
00:02:38.212 --> 00:02:41.625
If Google let its domain expire,
I can just be, like, I'm now Google.

51
00:02:41.625 --> 00:02:43.268
Yeah, go ahead and log in.

52
00:02:43.268 --> 00:02:44.485
You can't log in?

53
00:02:44.485 --> 00:02:45.611
Wow, just keep trying.

54
00:02:45.611 --> 00:02:47.175
Keep entering all your credentials.

55
00:02:47.175 --> 00:02:50.217
And we'd just say, the Internet's
broken or something like that.

56
00:02:50.217 --> 00:02:54.072
Because I'm clearly on google.com and
there's no way of verifying that.

57
00:02:54.072 --> 00:03:00.058
But HTTPS not only encrypts things in
transport, it says, hey, the person you're

58
00:03:00.058 --> 00:03:05.390
talking to is guaranteed that you're
talking to them and we guarantee it.

59
00:03:05.390 --> 00:03:07.468
Now who guarantees that?

60
00:03:07.468 --> 00:03:10.375
It's something called
certificate authorities.

61
00:03:10.375 --> 00:03:15.217
Again, the Internet is built on trust and
certificate authorities are trusted

62
00:03:15.217 --> 00:03:18.553
authorities that validate
you are who you say you are.

63
00:03:18.553 --> 00:03:21.120
Does that any questions on that so far?

64
00:03:21.120 --> 00:03:24.053
Cuz we're gonna keep going on HTTPS.

65
00:03:24.053 --> 00:03:25.915
Is anybody shocked that the Internet
used to be this way and

66
00:03:25.915 --> 00:03:26.790
now it's getting better?

67
00:03:26.790 --> 00:03:32.051
And I think if the next generation will
say, wait, the Internet was like this.

68
00:03:32.051 --> 00:03:32.653
That was, wow,

69
00:03:32.653 --> 00:03:35.148
it was just like the wild west of
people shooting guns left and right.

70
00:03:35.148 --> 00:03:36.994
And I'll be like, yeah, pretty much.

71
00:03:36.994 --> 00:03:39.362
It was anything goes back in the day.

72
00:03:39.362 --> 00:03:42.551
Fortunately now, with HTTPS,
you can't sniff that traffic.

73
00:03:42.551 --> 00:03:45.812
It's encrypted on the clients and
decrypted on the server.

74
00:03:45.812 --> 00:03:48.611
So it's that public key
authentication again.

75
00:03:48.611 --> 00:03:53.717
It's not SSH, but think of it similarly
where the client has a key and

76
00:03:53.717 --> 00:03:56.987
a certificate that it
gets from the server.

77
00:03:56.987 --> 00:03:59.981
So the first time I connect
the frontendmasters.com, they say, okay,

78
00:03:59.981 --> 00:04:01.345
you've never been here before.

79
00:04:01.345 --> 00:04:04.261
Here's my public certificate
verifying who I am.

80
00:04:04.261 --> 00:04:05.817
And here's how to encrypt all that data.

81
00:04:05.817 --> 00:04:08.953
So I use that public certificate
to encrypt all the data, and

82
00:04:08.953 --> 00:04:12.336
then I send it down the
frontendmasters.com or your server, and

83
00:04:12.336 --> 00:04:14.324
anything between is just jibberish.

84
00:04:14.324 --> 00:04:15.358
It's just encrypted data.

85
00:04:15.358 --> 00:04:18.682
The only one who can decrypt it is
Frontend Masters because they hold that

86
00:04:18.682 --> 00:04:19.343
private key.

87
00:04:19.343 --> 00:04:20.613
And your server holds a private key.

88
00:04:20.613 --> 00:04:22.846
So no one in between can encrypt it.

89
00:04:22.846 --> 00:04:26.574
Funny enough, and this makes me
really suspicious of the government,

90
00:04:26.574 --> 00:04:28.136
they were not against HTTPS.

91
00:04:28.136 --> 00:04:31.659
Generally, when it comes to encryption,
the government is against all of it,

92
00:04:31.659 --> 00:04:33.814
because they can't read your data anymore,
but

93
00:04:33.814 --> 00:04:35.672
they don't really have beef with HTTPS.

94
00:04:35.672 --> 00:04:38.323
Which makes me really suspicious,
that's totally a tangent and

95
00:04:38.323 --> 00:04:39.487
not related to this course.

96
00:04:39.487 --> 00:04:41.102
But, what happens is now,

97
00:04:41.102 --> 00:04:45.889
if you're like I have HTTPS everything's
secure everything's hunky dory.

98
00:04:45.889 --> 00:04:48.978
We're good, we're never have
to worry about security again.

99
00:04:48.978 --> 00:04:51.883
This all depends on those
certificate authorities.

100
00:04:51.883 --> 00:04:57.775
So if when I registered my domain, I say,
hey Mrs. security certificate authority,

101
00:04:57.775 --> 00:05:01.745
I'm Jem Young and
I'm going to register jemyoung.com.

102
00:05:01.745 --> 00:05:04.812
They're like, how do we know
you are who you say you are?

103
00:05:04.812 --> 00:05:07.984
And you go through a series of
authentication steps and you're like,

104
00:05:07.984 --> 00:05:10.198
okay, yeah,
this this person is trustworthy.

105
00:05:10.198 --> 00:05:12.509
We're gonna put our stamp
on it that verifies it.

106
00:05:12.509 --> 00:05:13.981
And if we go to our browser,

107
00:05:13.981 --> 00:05:17.057
we can actually check out
the certificate authorities.

108
00:05:17.057 --> 00:05:20.887
Let's try, what's a random website,

109
00:05:20.887 --> 00:05:26.075
let's say Google,
it's an easy one, Google.com.

110
00:05:26.075 --> 00:05:32.407
And I can look here, I say connection is
secure, I can look at the certificate.

111
00:05:32.407 --> 00:05:34.057
We can dig in that certificate a bit more.

112
00:05:36.030 --> 00:05:38.601
&gt;&gt; Jem Young: And it has a bunch of
information about who the authority is,

113
00:05:38.601 --> 00:05:41.032
like how do we know these people
are who they say they are.

114
00:05:41.032 --> 00:05:43.668
There are different
levels of certificates.

115
00:05:43.668 --> 00:05:47.668
The more expensive ones where you see
the full, this site is verified by that

116
00:05:47.668 --> 00:05:50.870
it's actually google.com,
are the more expensive ones.

117
00:05:50.870 --> 00:05:52.101
That's not the kind we're
gonna implement today.

118
00:05:52.101 --> 00:05:56.727
Those tend to cost a bit more money, we're
gonna implement a free one in a second,

119
00:05:56.727 --> 00:05:58.350
which should be pretty fun.

120
00:05:58.350 --> 00:06:01.628
But it tells you all about the algorithm
that's encrypting that data.

121
00:06:01.628 --> 00:06:04.109
Some are more secure than others.

122
00:06:04.109 --> 00:06:06.918
So here's a, yes?

123
00:06:06.918 --> 00:06:09.243
&gt;&gt; Speaker 2: It's elliptic
curve public key, and

124
00:06:09.243 --> 00:06:12.012
that's the NSA has known vulnerabilities.

125
00:06:12.012 --> 00:06:13.056
&gt;&gt; Jem Young: As far as we know.

126
00:06:13.056 --> 00:06:14.613
And if they did, would they tell us?

127
00:06:14.613 --> 00:06:16.826
&gt;&gt; Speaker 2: No, they've already-
&gt;&gt; Jem Young: They've proven it?

128
00:06:16.826 --> 00:06:22.909
&gt;&gt; Speaker 2: It's known, that's why
the government hunky dory with SSL.

129
00:06:22.909 --> 00:06:29.333
&gt;&gt; Jem Young: Yeah, well, yeah,
man I should do a section on cryptography.

130
00:06:29.333 --> 00:06:32.315
Now I to be honest, I am not
qualified to talk about cryptography,

131
00:06:32.315 --> 00:06:34.727
most people are not unless
you're a mathematician.

132
00:06:34.727 --> 00:06:38.465
But the rule on cryptography and
things like that, don't roll your own,

133
00:06:38.465 --> 00:06:39.869
you're not smart enough.

134
00:06:39.869 --> 00:06:41.842
[LAUGH] I don't mean that to be mean.

135
00:06:41.842 --> 00:06:44.184
If you roll your own crypto,
you're gonna be in trouble.

136
00:06:44.184 --> 00:06:49.265
That's why we have these known algorithms
that you can only use for HTTPS.

137
00:06:49.265 --> 00:06:53.995
You can't just, I'm gonna create Jem's
hashing algorithm and then serve that out.

138
00:06:53.995 --> 00:06:57.293
That doesn't work.
You have to use a known standard that

139
00:06:57.293 --> 00:06:59.072
everybody agrees on.

140
00:06:59.072 --> 00:07:03.153
But speaking of cryptography and
encrypting things,

141
00:07:03.153 --> 00:07:07.854
what's the downside of using like,
instead of 256 bits for

142
00:07:07.854 --> 00:07:10.883
the key, say using 1024 or 248?

143
00:07:10.883 --> 00:07:12.691
Yes, here?
&gt;&gt; Speaker 3: More bytes, more data,

144
00:07:12.691 --> 00:07:13.530
it's slower.

145
00:07:13.530 --> 00:07:14.599
&gt;&gt; Jem Young: Yeah, it's slower.

146
00:07:14.599 --> 00:07:16.642
You're theoretically more secure.

147
00:07:16.642 --> 00:07:20.394
But there's a point of diminishing returns
where you're like my data is ultra secure,

148
00:07:20.394 --> 00:07:22.992
but it now takes longer and
all these things add up over time.

149
00:07:22.992 --> 00:07:27.849
These are microseconds, nanoseconds, but
if you use a giant key and it hashes,

150
00:07:27.849 --> 00:07:31.934
the client has to decrypt that,
the server has to decrypt that too.

151
00:07:31.934 --> 00:07:37.123
Weird facts, when we converted Netflix
over to HTTPS, it costs us a few million

152
00:07:37.123 --> 00:07:42.003
dollars in compute time, because all
that cryptography of decrypting and

153
00:07:42.003 --> 00:07:46.207
encrypting, decrypting and
encrypting, that cost CPU time.

154
00:07:46.207 --> 00:07:50.344
And when you're talking about trillions
of requests, that adds up really quickly.

155
00:07:50.344 --> 00:07:53.233
So that's why HTTPS was
really slow to roll it out.

156
00:07:53.233 --> 00:07:55.933
The reason why it has rolled
out successfully today is

157
00:07:55.933 --> 00:07:57.317
because browsers made us.

158
00:07:57.317 --> 00:08:01.667
They started shaming people now where if
it's not encrypted there's like a big like

159
00:08:01.667 --> 00:08:04.974
slash or the lock sign or
something like that because they want to

160
00:08:04.974 --> 00:08:09.034
encourage people to use HTTPS because
it's just a better way of doing things.

161
00:08:09.034 --> 00:08:12.028
In fact you can't use a service
workers web bluetooth,

162
00:08:12.028 --> 00:08:14.907
web secure payments things
like that without HTTPS.

163
00:08:14.907 --> 00:08:17.794
And that's just like a little
nudge by the browsers,

164
00:08:17.794 --> 00:08:21.914
hey if you want to use the latest
features, you better upgrade your system.

