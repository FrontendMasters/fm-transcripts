WEBVTT

1
00:00:00.476 --> 00:00:04.143
&gt;&gt; Jem Young: Now we get to talk about
this weird word that I ran across

2
00:00:04.143 --> 00:00:06.153
when I was first an engineer.

3
00:00:06.153 --> 00:00:11.319
And I was like nginx?

4
00:00:11.319 --> 00:00:14.486
N-ginx?

5
00:00:14.486 --> 00:00:16.387
I'll save you the trouble cuz
you probably read a lot and

6
00:00:16.387 --> 00:00:18.670
don't know how it's pronounced,
it's pronounced engine-x.

7
00:00:18.670 --> 00:00:22.837
Which honestly in the history of software
applications is the coolest name of

8
00:00:22.837 --> 00:00:23.423
all time.

9
00:00:23.423 --> 00:00:24.209
It's like, what do you work on?

10
00:00:24.209 --> 00:00:25.398
Nginx.

11
00:00:25.398 --> 00:00:26.574
What does it do?

12
00:00:26.574 --> 00:00:27.987
A little bit of everything.

13
00:00:27.987 --> 00:00:30.129
People are like whoa.

14
00:00:30.129 --> 00:00:36.209
Nginx is one of the most
popular web servers out there.

15
00:00:36.209 --> 00:00:37.703
It's what we're gonna run today.

16
00:00:37.703 --> 00:00:41.592
The other one you've probably heard of
is Apache, which is another popular one.

17
00:00:41.592 --> 00:00:45.775
Apache is a little bit different and
it configures a lot different.

18
00:00:45.775 --> 00:00:50.079
But if we're using PHP, I'd be
definitely using Apache, because PHP and

19
00:00:50.079 --> 00:00:53.371
Apache go hand in hand,
they work really, really well.

20
00:00:53.371 --> 00:00:56.640
They go so well it's actually
it's known as the LAMP stack.

21
00:00:56.640 --> 00:01:00.354
Anybody know what the LAMP
stack stands for?

22
00:01:00.354 --> 00:01:03.807
&gt;&gt; Speaker 2: Linux, Apache, Mongo-
&gt;&gt; Speaker 3: MySQL.

23
00:01:03.807 --> 00:01:04.987
&gt;&gt; Speaker 2: MySQL and PHP.

24
00:01:04.987 --> 00:01:06.160
&gt;&gt; Jem Young: Yep, exactly.

25
00:01:06.160 --> 00:01:10.552
But anyways, Apache is another one you
might run into in your careers as a full

26
00:01:10.552 --> 00:01:12.863
stack engineer or any sort of engineer.

27
00:01:12.863 --> 00:01:14.959
But today we're gonna use Nginx.

28
00:01:14.959 --> 00:01:21.984
I love Nginx cuz it's lightweight,
it is extremely fast.

29
00:01:21.984 --> 00:01:25.218
I'm trying to think how fast, it can
handle more requests than you can throw at

30
00:01:25.218 --> 00:01:27.239
it than your server can handle,
put it that way.

31
00:01:27.239 --> 00:01:28.439
It's that fast.

32
00:01:28.439 --> 00:01:33.398
It's a reverse proxy, it's a web server,
it's a proxy server, it's a file server,

33
00:01:33.398 --> 00:01:36.229
it can do caching,
it can do performance tuning.

34
00:01:36.229 --> 00:01:39.627
It can compress your file, send it out,
it can handle your encryption.

35
00:01:39.627 --> 00:01:44.365
Nginx does a little bit of everything and
honestly it's amazing software.

36
00:01:44.365 --> 00:01:46.180
But, we're not gonna go
too deep into it today,

37
00:01:46.180 --> 00:01:47.612
we're just gonna use it just enough.

38
00:01:47.612 --> 00:01:52.219
Because we can go really, really deep
where we're compressing our G-zip

39
00:01:52.219 --> 00:01:56.179
levels to like level three, and
we're tuning our web sockets.

40
00:01:56.179 --> 00:01:59.446
We might do that tomorrow, depending
on how well we do today, but for today,

41
00:01:59.446 --> 00:02:00.967
we're just gonna configure this.

42
00:02:00.967 --> 00:02:03.434
So the first thing we wanna do is,

43
00:02:03.434 --> 00:02:06.686
actually I should explain
what a web server does.

44
00:02:06.686 --> 00:02:08.716
We have a server,
we have just a basic server,

45
00:02:08.716 --> 00:02:10.548
the server itself doesn't do anything.

46
00:02:10.548 --> 00:02:13.535
In fact it doesn't even
respond to requests right now,

47
00:02:13.535 --> 00:02:15.703
because it's not set up to do anything.

48
00:02:15.703 --> 00:02:20.312
So requests hit your server,
&gt;&gt; Jem Young: What do?

49
00:02:20.312 --> 00:02:21.509
We have to figure out something,

50
00:02:21.509 --> 00:02:23.362
we have to figure out where
that request should go.

51
00:02:23.362 --> 00:02:24.488
Should it go to the app?

52
00:02:24.488 --> 00:02:25.181
Should it go to the database?

53
00:02:25.181 --> 00:02:27.286
Should it go to a different
server entirely?

54
00:02:27.286 --> 00:02:29.616
I don't know, that's why Nginx is there.

55
00:02:29.616 --> 00:02:33.215
Nginx helps route those
requests to the right thing.

56
00:02:33.215 --> 00:02:35.762
That's why it's called
a reverse proxy sometimes,

57
00:02:35.762 --> 00:02:38.772
because it takes one request and
it proxies it somewhere else.

58
00:02:38.772 --> 00:02:44.105
Versus a regular proxy which takes a bunch
of requests and proxies them to one place.

59
00:02:44.105 --> 00:02:47.519
You'll hear it called reverse
proxy most of the time, but

60
00:02:47.519 --> 00:02:50.522
it's really a web server,
it does a lot of things.

61
00:02:50.522 --> 00:02:54.410
But Nginx is one the crux of one
of the things we're doing today.

62
00:02:54.410 --> 00:02:58.899
I would say it's more important than
the actual application we're building is

63
00:02:58.899 --> 00:03:00.311
tuning Nginx properly.

64
00:03:00.311 --> 00:03:01.721
So let's install Nginx.

65
00:03:04.098 --> 00:03:07.665
&gt;&gt; Jem Young: Because we're not root
anymore, we have to use sudo all the time

66
00:03:07.665 --> 00:03:10.653
to install new software,
so sudo apt install nginx.

67
00:03:10.653 --> 00:03:12.776
And I'll just do that now
cuz it might take a minute.

68
00:03:19.613 --> 00:03:20.452
&gt;&gt; Jem Young: Yes.

69
00:03:24.435 --> 00:03:28.964
&gt;&gt; Jem Young: And while that's installing
random bits of trivia you don't need to

70
00:03:28.964 --> 00:03:33.347
know, there's a command called yes,
which all it does is type y.

71
00:03:33.347 --> 00:03:35.948
And you're like why does that exist?

72
00:03:35.948 --> 00:03:37.035
We can use the man page.

73
00:03:37.035 --> 00:03:39.628
It just outputs anything you want,
usually it's yes.

74
00:03:39.628 --> 00:03:41.965
So if you wanted to install
a bunch of software and

75
00:03:41.965 --> 00:03:43.734
you didn't want to keep typing yes.

76
00:03:43.734 --> 00:03:48.174
You can hit apt install, pipe it to y,
it'll automatically do yes for

77
00:03:48.174 --> 00:03:49.987
everything until it exits.

78
00:03:49.987 --> 00:03:54.601
Little things you didn't need to know,
but you do now, you can't unknow it.

79
00:03:54.601 --> 00:04:01.475
All right, so then we're gonna start
Nginx, so sudo service nginx start.

80
00:04:01.475 --> 00:04:05.741
Sudo service nginx start.

81
00:04:08.827 --> 00:04:12.726
&gt;&gt; Jem Young: And Nginx is up and running
&gt;&gt; Jem Young: And

82
00:04:12.726 --> 00:04:15.704
so let's test this out,
let's test this bad boy out.

83
00:04:15.704 --> 00:04:22.728
Let me copy my IP just in case my
domain setup did not go through.

84
00:04:22.728 --> 00:04:27.519
And say, jemisthebest,

85
00:04:27.519 --> 00:04:32.535
whoop, jem I-S dot best.

86
00:04:32.535 --> 00:04:35.101
All right, it works.

87
00:04:35.101 --> 00:04:38.417
And this seems really simple, but remember
all the steps we had to go through to

88
00:04:38.417 --> 00:04:40.742
configure our name servers,
and get our DNS records.

89
00:04:40.742 --> 00:04:45.094
Then start the server and install and get
our server up and running, the SSH, and

90
00:04:45.094 --> 00:04:47.974
we got it all running, and
now we get this Nginx page.

91
00:04:47.974 --> 00:04:49.426
It's the little things,

92
00:04:49.426 --> 00:04:53.260
more importantly is you understand
all the steps it took to get here.

93
00:04:53.260 --> 00:04:56.381
And it seems really, really simple,
but you know that it's not,

94
00:04:56.381 --> 00:04:58.185
underneath the hood was a lot of work.

95
00:04:58.185 --> 00:05:00.854
Awesome, I should have shared
this screenshot with you,

96
00:05:00.854 --> 00:05:02.984
when I bought my domain it cost me $1.80.

97
00:05:02.984 --> 00:05:04.069
And see that ICAN fee?

98
00:05:04.069 --> 00:05:07.840
Remember I talked about there's this
registrar that controls all the stuff, so

99
00:05:07.840 --> 00:05:10.790
I don't know what this is, and
so I just paid a $0.18 fee.

100
00:05:10.790 --> 00:05:12.073
Whenever you buy a domain, you renew it,

101
00:05:12.073 --> 00:05:14.619
you're always paying this little tiny fee
that helps keep the Internet running.

102
00:05:14.619 --> 00:05:16.936
So if you're ever wondering what that is,
that's why.

103
00:05:19.270 --> 00:05:21.837
&gt;&gt; Jem Young: Awesome,
is everybody seeing the Nginx page?

104
00:05:21.837 --> 00:05:24.996
Hopefully, if you didn't buy a domain,
just type in your IP.

105
00:05:24.996 --> 00:05:28.393
So I can also do that and
I'm gonna get the same thing.

106
00:05:31.166 --> 00:05:33.791
&gt;&gt; Jem Young: And if I really want to
get tactical, I can type in the port

107
00:05:33.791 --> 00:05:37.047
80 which is the default port and
I'm gonna get the same thing again.

108
00:05:37.047 --> 00:05:38.505
Nginx is now running on port 80,

109
00:05:38.505 --> 00:05:42.096
it automatically opens the firewall to
port 80 for you, we don't have to do that.

110
00:05:42.096 --> 00:05:45.310
And tomorrow we're gonna talk about
firewalls and configuring them properly,

111
00:05:45.310 --> 00:05:45.930
but not today.

112
00:05:48.245 --> 00:05:48.955
&gt;&gt; Jem Young: Okay, is everybody with me?

113
00:05:48.955 --> 00:05:50.183
If you're not here,

114
00:05:50.183 --> 00:05:54.080
pretty much everything else I'm
gonna say will not make any sense.

115
00:05:54.080 --> 00:06:00.568
Cool, so now, we asked the causing
question, how does the Internet work?

116
00:06:00.568 --> 00:06:02.917
There's a domain, it hits a name server,
the name server says, hey,

117
00:06:02.917 --> 00:06:04.065
I know where you're trying to go.

118
00:06:04.065 --> 00:06:08.516
Here's the IP, the IP gets passed off to
other routers and nodes and switches,

119
00:06:08.516 --> 00:06:10.251
eventually hits your server.

120
00:06:10.251 --> 00:06:12.690
When it hits your server,
it says what I do now?

121
00:06:12.690 --> 00:06:17.597
Nginx says, hey, I know where to go,
I'm gonna route you to this default page,

122
00:06:17.597 --> 00:06:19.052
just a blank HTML page.

123
00:06:19.052 --> 00:06:21.056
That's how a lot of the Internet works so
far, and

124
00:06:21.056 --> 00:06:23.697
we're gonna slowly build up until
it gets more and more complex.

125
00:06:23.697 --> 00:06:27.889
Until you'll be masters,
some say frontend masters.

