WEBVTT

1
00:00:00.200 --> 00:00:04.160
So let's start with the date one.

2
00:00:04.160 --> 00:00:09.360
So the first thing is,
I will let me get out of this file and

3
00:00:09.360 --> 00:00:12.690
go to our actual server here.

4
00:00:12.690 --> 00:00:14.440
So I'll declare a directive.

5
00:00:14.440 --> 00:00:17.295
I like to declare my directors
at the top of the schema,

6
00:00:17.295 --> 00:00:18.979
in this case cuz it's one file.

7
00:00:18.979 --> 00:00:23.684
So much better so or
not declare but directive.

8
00:00:23.684 --> 00:00:26.754
And I'm just going to
call this formatDate.

9
00:00:26.754 --> 00:00:27.953
You can call it whatever you want.

10
00:00:27.953 --> 00:00:30.737
It's totally up to you.

11
00:00:30.737 --> 00:00:33.682
I'm gonna have this taken a stream or

12
00:00:33.682 --> 00:00:39.100
a format that's like a stream and
I'll default to something like.

13
00:00:43.297 --> 00:00:48.177
Day day or day day,
month month month, year year or

14
00:00:48.177 --> 00:00:51.850
year year year, I don't know.

15
00:00:51.850 --> 00:00:52.770
We'll see what that looks like.

16
00:00:52.770 --> 00:00:54.970
I don't know what it's gonna look like.

17
00:00:54.970 --> 00:01:01.470
And, that's gonna be
on a field definition.

18
00:01:01.470 --> 00:01:04.670
Like that, that ,that.

19
00:01:04.670 --> 00:01:08.440
The next thing I'm gonna do is I'm going
to go over to our cinema close on these

20
00:01:08.440 --> 00:01:13.510
tabs or
go over to our directors file here.

21
00:01:14.698 --> 00:01:19.100
And I'm gonna make a new class for the for

22
00:01:19.100 --> 00:01:22.740
mates formats, dates directive.

23
00:01:22.740 --> 00:01:26.390
You don't have to name a directive is
just a convention so you know what it is.

24
00:01:26.390 --> 00:01:29.200
And that's gonna extend our
schema directive visitor here.

25
00:01:29.200 --> 00:01:33.450
And because we're on a field definition,
we're going to

26
00:01:33.450 --> 00:01:38.380
use the visit field definition function
here, get access to the field.

27
00:01:39.740 --> 00:01:44.930
And what we'll do is we need to also
get access to the default resolver and

28
00:01:44.930 --> 00:01:46.480
a graphical string here.

29
00:01:46.480 --> 00:01:51.180
So what I'll say is the resolver,

30
00:01:51.180 --> 00:01:55.390
is gonna be field.resolve,
if there is one.

31
00:01:55.390 --> 00:01:58.290
But if there isn't one defined
as in using a default one,

32
00:01:58.290 --> 00:02:00.560
I need to set it to the default one.

33
00:02:00.560 --> 00:02:06.770
And then I'll say, field.resolve, is gonna
equal this new thing that I have here.

34
00:02:06.770 --> 00:02:10.461
Which is gonna be args.

35
00:02:10.461 --> 00:02:14.885
And then I'll go ahead and
get the results which will be able to make

36
00:02:14.885 --> 00:02:19.300
this a sync because I have no idea
what the resolver will be doing.

37
00:02:19.300 --> 00:02:26.777
So I'm gonna wait the resolver.apply,

38
00:02:26.777 --> 00:02:31.689
I'm using an array here and

39
00:02:31.689 --> 00:02:37.040
I'll pass in this with args.

40
00:02:39.670 --> 00:02:45.074
Get the result and then once I get
the results, I can go ahead and format it.

41
00:02:45.074 --> 00:02:51.343
So then I'll say, well, now that I have
the result I can just return Format,

42
00:02:51.343 --> 00:02:56.890
they just takes the timestamp and
then whatever format you want.

43
00:02:56.890 --> 00:02:59.070
In this case,
the format is gonna be in an argument.

44
00:02:59.070 --> 00:03:04.570
So I'll say const format.

45
00:03:04.570 --> 00:03:05.950
It's not the name that I put here.-
&gt;&gt; Yeah

46
00:03:05.950 --> 00:03:07.057
&gt;&gt; Format.

47
00:03:07.057 --> 00:03:09.857
&gt;&gt; Yes
&gt;&gt; Like that.

48
00:03:09.857 --> 00:03:11.121
Take the format here.

49
00:03:12.840 --> 00:03:18.366
From this.args like that,
and passing the format.

50
00:03:20.838 --> 00:03:23.060
Oops format, there we go.

51
00:03:24.194 --> 00:03:28.510
And the reason I did it a sneak away
here is because you have no idea.

52
00:03:28.510 --> 00:03:30.680
What this resolver is going to
be it could be a synchronous,

53
00:03:30.680 --> 00:03:32.940
someone could have written a resolver for

54
00:03:32.940 --> 00:03:35.780
whatever field you're gonna add this to
and it could have been a synchronous and

55
00:03:35.780 --> 00:03:40.940
if you don't wait for it, well, yeah,
you're not gonna get the result back.

56
00:03:40.940 --> 00:03:43.290
This is exactly what graph field does it.

57
00:03:43.290 --> 00:03:46.828
That's why it's able to allow you to
return a promise because it is just going

58
00:03:46.828 --> 00:03:49.346
to pretty much read everything
like a promise anyway.

59
00:03:53.680 --> 00:03:58.840
All right, so, we got that,
looking good, looking good.

60
00:03:58.840 --> 00:04:04.570
Everything should be a string but just in
case it's not I'm gonna say field.type

61
00:04:04.570 --> 00:04:08.240
equals GraphQLString just in
case they're it isn't one for

62
00:04:08.240 --> 00:04:09.610
whatever reason make it a string.

63
00:04:10.860 --> 00:04:12.916
And now he's export this.

64
00:04:18.531 --> 00:04:19.883
Is not saying Formats.

65
00:04:24.112 --> 00:04:26.680
Date directive.

66
00:04:26.680 --> 00:04:27.630
Cool, got that.

67
00:04:29.160 --> 00:04:30.370
Type that's looking good.

68
00:04:30.370 --> 00:04:32.259
Now we can go over to our index file.

69
00:04:33.590 --> 00:04:42.044
And we can import those
directives Keep one of these

70
00:04:43.403 --> 00:04:47.880
6 From directives, yup.

71
00:04:47.880 --> 00:04:50.840
FormatDateDirective here and
I'm gonna type that, so

72
00:04:50.840 --> 00:04:52.860
I called it formatDate like this.

73
00:04:52.860 --> 00:04:59.180
So that's the key that I would have to
place In the map for schema directors.

74
00:05:01.600 --> 00:05:05.600
So that, and give it the value of,
for my date directive.

75
00:05:07.910 --> 00:05:12.874
And there's nothing stopping
you if wanted to like,

76
00:05:12.874 --> 00:05:18.167
a list this directive,
to also not just before my date but

77
00:05:18.167 --> 00:05:21.609
maybe you wanted to say dateFormat.

78
00:05:21.609 --> 00:05:25.574
I don't know you wanted to also call it
that, whatever reason you wanted to do

79
00:05:25.574 --> 00:05:29.417
both, cool just copy that and you can
go over here and you can say Format, or

80
00:05:29.417 --> 00:05:33.650
day Format and this give you
the same value, it's the same thing.

81
00:05:33.650 --> 00:05:34.880
Works exactly the same.

82
00:05:34.880 --> 00:05:37.190
You could do whatever you want there.

83
00:05:37.190 --> 00:05:38.834
Looks like it didn't break yet on that.

84
00:05:38.834 --> 00:05:41.416
Guess it's not the right one
I'll start this over here.

85
00:05:46.578 --> 00:05:48.000
Cool, that didn't break.

86
00:05:48.000 --> 00:05:53.100
All right, and now we need to
add our directive to a field.

87
00:05:53.100 --> 00:05:54.029
And actually see what happens.

88
00:05:54.029 --> 00:06:01.730
So let me find a field that I know is
saying look at my database right quick.

89
00:06:01.730 --> 00:06:02.670
What do I have in here?

90
00:06:02.670 --> 00:06:03.270
I got some post.

91
00:06:03.270 --> 00:06:03.880
Okay, cool.

92
00:06:03.880 --> 00:06:07.776
I'm just gonna add it
to the post the feed or

93
00:06:07.776 --> 00:06:12.970
we're supposed to There we go, here.

94
00:06:12.970 --> 00:06:16.760
So I could say, @formatDate.

95
00:06:16.760 --> 00:06:19.820
I'm just going with the default one,
handle it for now and

96
00:06:19.820 --> 00:06:20.650
see what that looks like.

97
00:06:20.650 --> 00:06:22.730
Hopefully, that doesn't break date FNS.

98
00:06:22.730 --> 00:06:24.190
If that's not a real format,
it'll tell us.

99
00:06:24.190 --> 00:06:27.720
So we have the formatDate there,
everything looks good.

100
00:06:28.840 --> 00:06:30.981
Can go to GraphQL well here.

101
00:06:30.981 --> 00:06:34.433
Refresh this thing.

102
00:06:34.433 --> 00:06:39.850
Get rid of that will go
away.I can get the feed,

103
00:06:39.850 --> 00:06:45.401
I can get a post or
ID not get a created at the name Or

104
00:06:45.401 --> 00:06:52.590
message, execute that and
ever go look at a nice format a date.

105
00:06:55.230 --> 00:06:56.470
Pretty clean right?

106
00:06:56.470 --> 00:06:59.040
Then had to do anything super awesome.

107
00:06:59.040 --> 00:07:03.030
So that's really cool but what if we want
the query to be able to pass up the format

108
00:07:03.030 --> 00:07:04.920
so let's,
you know change this over the quarter.

109
00:07:04.920 --> 00:07:08.510
You can do that So what we'll do is,
we'll go to directives.

110
00:07:10.100 --> 00:07:12.420
And now we'll add a new argument for
this field.

111
00:07:12.420 --> 00:07:16.760
We'll say, field.args.push().

112
00:07:16.760 --> 00:07:18.150
Add in a new argument here, of a name.

113
00:07:18.150 --> 00:07:20.460
We'll call that a format,
so they can add one.

114
00:07:20.460 --> 00:07:23.970
And its type is gonna be a GraphQL string,
like that.

115
00:07:25.290 --> 00:07:26.460
So we got that that's good.

116
00:07:26.460 --> 00:07:31.000
And we'll call this
the default formats like that.

117
00:07:31.000 --> 00:07:36.640
And then for format, what we'll do is
we need to grab it from the arguments.

118
00:07:36.640 --> 00:07:38.350
So this will be the route.

119
00:07:38.350 --> 00:07:40.580
And the format would actually be in here.

120
00:07:40.580 --> 00:07:44.530
And this will be any other arguments that
they might have passed up for this field,

121
00:07:44.530 --> 00:07:47.680
which I don't know if there is I know
there isn't this directive has no idea.

122
00:07:47.680 --> 00:07:50.810
So I need to Account for
I'll just call them rest.

123
00:07:51.890 --> 00:07:54.520
And then we have the context object
which we're not interested in.

124
00:07:54.520 --> 00:07:57.370
And then we have the info object
which we are not interested in.

125
00:07:57.370 --> 00:07:59.280
So I'm going to change this to call.

126
00:08:00.310 --> 00:08:03.670
And I'm going to pass in the route values
the first argument, then I'm going to pass

127
00:08:03.670 --> 00:08:07.390
in the rest of the inputs as the second
argument and we're gonna pass in

128
00:08:07.390 --> 00:08:11.780
the context I'm going to pass it info,
same thing every resolver needs.

129
00:08:11.780 --> 00:08:16.000
And if a format, I'm either going
to format the date with that, or

130
00:08:16.000 --> 00:08:21.640
I'm going to Default to
the Default format, like that.

131
00:08:21.640 --> 00:08:22.290
Pretty simple.
So

132
00:08:22.290 --> 00:08:26.370
we got the default format,
you got argument coming in.

133
00:08:26.370 --> 00:08:27.950
So let's check that out.

134
00:08:27.950 --> 00:08:29.939
So that's still works is Refresh this.

135
00:08:31.240 --> 00:08:34.990
If we do this, you can see get a format
here now, so like I said, formats.

136
00:08:34.990 --> 00:08:37.940
And then own, I can just say,
I just want the months.

137
00:08:37.940 --> 00:08:40.480
So we could try that, and
you just get the month.

138
00:08:41.720 --> 00:08:42.960
All right, let me try capital M.

139
00:08:44.280 --> 00:08:45.160
Cool, just October.

140
00:08:46.240 --> 00:08:48.810
Or if I want the full month,
I think it's four M's?

141
00:08:48.810 --> 00:08:49.512
Yeah, there we go.

