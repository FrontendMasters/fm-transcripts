WEBVTT

1
00:00:00.016 --> 00:00:03.100
So you're gonna be adding
a subscription for new posts.

2
00:00:03.100 --> 00:00:05.457
So if you go to the resolvers and
then createPost,

3
00:00:05.457 --> 00:00:09.855
you'll notice that you get pubsub.publish,
NEW_POST event, you get create a new post.

4
00:00:09.855 --> 00:00:11.710
You need to set this up so it works.

5
00:00:11.710 --> 00:00:15.851
So obviously, a couple things you're gonna
have to do is you're gonna have to add

6
00:00:15.851 --> 00:00:17.601
a subscription for the new posts.

7
00:00:17.601 --> 00:00:21.489
And what I mean by that is you need
to go to your type definitions, and

8
00:00:21.489 --> 00:00:25.690
you need to add a subscription down
here for when a new post is created.

9
00:00:25.690 --> 00:00:28.501
You can call the field whatever you want,

10
00:00:28.501 --> 00:00:33.174
just make sure you also add the resolver
for it in the resolvers file.

11
00:00:33.174 --> 00:00:36.085
And then you need to publish to
subscription when a post is created,

12
00:00:36.085 --> 00:00:37.630
I already left that part in for you.

13
00:00:37.630 --> 00:00:39.380
You can change the name of
the event if you want to,

14
00:00:39.380 --> 00:00:41.360
if you don't like the event that I chose.

15
00:00:41.360 --> 00:00:45.090
Or if your field name is different, for
instance, the one that I left in there for

16
00:00:45.090 --> 00:00:48.740
you, the field name on
createPost is newPost.

17
00:00:48.740 --> 00:00:52.240
So that would be the field name
on my subscription object.

18
00:00:52.240 --> 00:00:54.553
If your subscription object
has a different field name,

19
00:00:54.553 --> 00:00:57.167
then you need to change that to be
a different field name as well.

20
00:00:57.167 --> 00:00:59.740
And then obviously, publish your posts.

21
00:00:59.740 --> 00:01:03.122
And if you have a different event than I
do, then you would change the event, but

22
00:01:03.122 --> 00:01:05.663
I think this one's up top, so
you get that for free as well.

23
00:01:09.081 --> 00:01:11.680
You also need to add authentication
to the subscription.

24
00:01:11.680 --> 00:01:14.680
So I didn't have authentication in my
example, but I showed you how to do it.

25
00:01:14.680 --> 00:01:19.088
And basically it was using
the context objects, I'm sorry,

26
00:01:19.088 --> 00:01:23.413
using the Subscriptions field
on the Apollo server object,

27
00:01:23.413 --> 00:01:28.271
there's onConnect, and
his onConnect takes an object of fields.

28
00:01:28.271 --> 00:01:32.702
And in GraphQL Playground,
whatever you pass on the header section in

29
00:01:32.702 --> 00:01:36.920
GraphQL Playground is gonna
be accessible on this.

30
00:01:36.920 --> 00:01:41.285
So whatever logic you see in the context
object that we already have inside of

31
00:01:41.285 --> 00:01:46.200
index.js, so this logic as far as
getting a user and setting a context.

32
00:01:46.200 --> 00:01:51.062
You would have to do that inside
of Subscriptions, onConnect,

33
00:01:51.062 --> 00:01:53.771
and you would get some params here.

34
00:01:53.771 --> 00:01:57.660
And what I've been saying is this params,
at least in this example,

35
00:01:57.660 --> 00:02:02.102
this params is gonna be the same thing
as req.headers, it's the same thing.

36
00:02:02.102 --> 00:02:03.320
req.headers and

37
00:02:03.320 --> 00:02:09.140
params are gonna have whatever you pass
to GraphQL Playground's headers field.

38
00:02:09.140 --> 00:02:12.510
So any object that's in headers in
GraphQL Playground is gonna be attached to

39
00:02:12.510 --> 00:02:15.680
the req.headers, and it's also gonna
be attached to these params here.

40
00:02:15.680 --> 00:02:19.748
So that means you could literally
do the exact same logic here,

41
00:02:19.748 --> 00:02:21.448
probably copy and paste.

42
00:02:21.448 --> 00:02:27.080
&gt;&gt; You're passing your pubsub object in
the context to get it into the resolvers?

43
00:02:27.080 --> 00:02:30.390
&gt;&gt; I am not passing the pubsub
into the context, but

44
00:02:30.390 --> 00:02:32.664
I like the way you're thinking.

45
00:02:32.664 --> 00:02:37.617
You could totally do that if
you want to be able to pass it

46
00:02:37.617 --> 00:02:41.076
around to every single one, so yeah.

47
00:02:41.076 --> 00:02:43.793
onConnect, well,
there's problems around that, but

48
00:02:43.793 --> 00:02:46.300
I don't think we'll run
into that problem here.

49
00:02:46.300 --> 00:02:49.320
But basically, if we go down and

50
00:02:49.320 --> 00:02:53.280
look at the, wait, I'm not on
the solution graphs, never mind.

51
00:02:53.280 --> 00:02:56.210
You'll see, done do that on this example,
you'll run into problems.

52
00:02:56.210 --> 00:02:59.720
Because you need access to
the pubsub outside the resolver,

53
00:02:59.720 --> 00:03:02.380
inside a subscribe function on a resolver.

54
00:03:02.380 --> 00:03:05.010
So you don't have it yet because you
don't have access to the context.

55
00:03:05.010 --> 00:03:08.675
So there's scenarios where you won't
have it, in other scenarios you might.

56
00:03:11.327 --> 00:03:16.560
Cool, and then I have something here
called add a filter for a subscription.

57
00:03:16.560 --> 00:03:18.759
I don't have time to talk about
the filters for extra credit, so

58
00:03:18.759 --> 00:03:21.210
don't worry about that,
I can talk about that when I get back.

59
00:03:21.210 --> 00:03:24.640
But basically that is like adding
arguments to your subscriptions, where you

60
00:03:24.640 --> 00:03:30.080
can say, I only wanna subscribe to this
event and only when it has this data.

61
00:03:30.080 --> 00:03:30.944
So you can add a filter.

62
00:03:30.944 --> 00:03:32.896
It's basically arguments for
your subscriptions,

63
00:03:32.896 --> 00:03:35.159
just like arguments you have for
your queries and mutations.

64
00:03:37.120 --> 00:03:39.240
And then try out your subscriptions
with GraphQL Playground.

65
00:03:39.240 --> 00:03:43.870
So remember,
you have to open up one tab in Chrome or

66
00:03:43.870 --> 00:03:47.280
whatever your browser is, and you have
to open up an entirely different tab.

67
00:03:47.280 --> 00:03:49.310
You can't just make a new
tab in GraphQL Playground,

68
00:03:49.310 --> 00:03:51.770
it won't work,
at least in my experience it didn't.

69
00:03:51.770 --> 00:03:54.860
So you have to open up a whole other tab.

70
00:03:54.860 --> 00:03:58.256
Just hit play in the subscription one, and
then do some mutations in the next and

71
00:03:58.256 --> 00:03:58.922
then observe.

72
00:04:01.209 --> 00:04:04.560
And what I'll do is I'll
leave up this file,

73
00:04:04.560 --> 00:04:10.219
I don't know what part would be the most
helpful, but maybe this part here.

74
00:04:10.219 --> 00:04:13.977
So again, you're creating subscriptions
for when a new post is created, that's it.

75
00:04:13.977 --> 00:04:15.106
You wanna subscribe to that.

76
00:04:15.106 --> 00:04:18.650
And in a social network or something,
that would be like a public feed.

77
00:04:18.650 --> 00:04:21.510
If you were listening on a feed,
that's when you would listen for

78
00:04:21.510 --> 00:04:23.230
some new posts or something like that.

