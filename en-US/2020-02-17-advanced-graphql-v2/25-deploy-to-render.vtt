WEBVTT

1
00:00:00.380 --> 00:00:02.410
So now we're talking about
going into production and

2
00:00:02.410 --> 00:00:05.350
what you need to do to actually ship
an app like this to production.

3
00:00:05.350 --> 00:00:08.955
Obviously you probably don't want to ship
the app with a in-memory JSON database.

4
00:00:08.955 --> 00:00:13.520
So probably get you a real database,
so do that.

5
00:00:13.520 --> 00:00:16.900
But besides that, there's really not
much you have to do to go to production.

6
00:00:16.900 --> 00:00:17.884
Use the Marco Polo server, no.

7
00:00:17.884 --> 00:00:21.520
All you have to do is just make sure you
set your environments to production.

8
00:00:21.520 --> 00:00:23.810
No, don't hard code your ports,
you have to do it in any server.

9
00:00:23.810 --> 00:00:25.080
And then pick a platform and deploy it.

10
00:00:25.080 --> 00:00:29.304
And don't do things that you would
normally not do on other servers like hard

11
00:00:29.304 --> 00:00:34.400
coding environment variables and secrets
and stuff like that, don't do that.

12
00:00:34.400 --> 00:00:36.430
Other than that,
you're pretty much good to go.

13
00:00:36.430 --> 00:00:41.124
So I just want to walk through deploying
this on a platform that I've used a couple

14
00:00:41.124 --> 00:00:44.172
times over the last few
weeks this see what happens.

15
00:00:44.172 --> 00:00:45.790
We're going to do this together.

16
00:00:45.790 --> 00:00:49.050
It's gonna be my first time to point your
graphical server on this thing as well.

17
00:00:49.050 --> 00:00:55.900
So I'm using render.com, which is like
a platform as a service, kind of like

18
00:00:55.900 --> 00:00:59.590
a Roku where you can deploy static sites
and and all types of other crazy stuff.

19
00:00:59.590 --> 00:01:00.500
I really love the design.

20
00:01:01.540 --> 00:01:02.430
And I get started here.

21
00:01:03.490 --> 00:01:04.380
Login on my GitHub.

22
00:01:06.443 --> 00:01:07.142
Make a new web service.

23
00:01:07.142 --> 00:01:12.190
And I'm pretty sure it's gonna ask me
to push it up to GitHub or something.

24
00:01:12.190 --> 00:01:18.280
So let's do that.

25
00:01:18.280 --> 00:01:20.534
Actually I want to check out to,
let me stash this.

26
00:01:23.158 --> 00:01:27.310
To solution there we go, the guy got it.

27
00:01:27.310 --> 00:01:28.481
Yeah, I'm just gonna
push up the solution 1.

28
00:01:28.481 --> 00:01:32.877
So they make a repo right quick.

29
00:01:37.561 --> 00:01:38.381
I'll make it on mine.

30
00:01:43.504 --> 00:01:51.319
All right, man, I haven't made
a repo on my in such a long time.

31
00:01:51.319 --> 00:01:56.106
All right, adv-gql V2 make that public

32
00:01:56.106 --> 00:02:00.320
create that repo master solution.

33
00:02:00.320 --> 00:02:00.902
Great.

34
00:02:00.902 --> 00:02:01.875
All right, so now you can go to render.

35
00:02:01.875 --> 00:02:05.250
I refresh that to get a new list here.

36
00:02:05.250 --> 00:02:06.170
All right, where's that?

37
00:02:06.170 --> 00:02:06.870
There we go.

38
00:02:06.870 --> 00:02:07.383
That's graph UL.

39
00:02:07.383 --> 00:02:14.470
Cool, I will just call this Vance-gql
environment, no branch solution.

40
00:02:15.780 --> 00:02:16.810
There is no bill command.

41
00:02:16.810 --> 00:02:17.770
Just install everything.

42
00:02:18.950 --> 00:02:24.208
Start command is, where is start command,
because is yarn start.

43
00:02:24.208 --> 00:02:32.685
Yeah, it just start, Do that.

44
00:02:32.685 --> 00:02:36.800
And cool, great web service.

45
00:02:38.840 --> 00:02:42.258
Single build and if it all works,
it'll just work rather do anything else.

46
00:02:42.258 --> 00:02:46.630
I think you can also go in here and
do like agile environment variables.

47
00:02:46.630 --> 00:02:47.470
Where's that, right here?

48
00:02:48.490 --> 00:02:49.215
See agile environment variables here.

49
00:02:49.215 --> 00:02:52.956
So I will want to do like
no env is production.

50
00:02:52.956 --> 00:02:54.651
Definitely do that.

51
00:02:54.651 --> 00:02:56.670
And that's it.

52
00:02:56.670 --> 00:03:02.502
If all goes well,
this thing should be building.

53
00:03:05.618 --> 00:03:07.518
Assuming that works,
any questions on deployment?

54
00:03:10.041 --> 00:03:14.240
No, yeah, it's pretty easy
to deploy a graphical app.

55
00:03:14.240 --> 00:03:16.700
Basically, I want to show that there's
no difference retaining the other app

56
00:03:16.700 --> 00:03:18.270
especially if you don't
have any dependencies like

57
00:03:18.270 --> 00:03:19.480
a database like I don't have.

58
00:03:19.480 --> 00:03:21.264
So, super simple.

59
00:03:21.264 --> 00:03:22.865
Yes.
&gt;&gt; You mentioned it's a little

60
00:03:22.865 --> 00:03:26.482
more complex for AWS,
without going through the demonstration,

61
00:03:26.482 --> 00:03:28.180
talk through it in high level.

62
00:03:28.180 --> 00:03:31.520
&gt;&gt; The only reason it's more
complicated AWS is because

63
00:03:31.520 --> 00:03:33.920
AWS is not as simple as deploying is this.

64
00:03:33.920 --> 00:03:35.340
I guess it depends.

65
00:03:35.340 --> 00:03:39.914
I mean, man, there's so many ways to
deploy our graph QL server to AWS,

66
00:03:39.914 --> 00:03:42.980
it really depends on if you're like you're
trying to go serverless if you're trying

67
00:03:42.980 --> 00:03:47.401
to take advantage of Amplify,
EC2, Beanstalk.

68
00:03:50.250 --> 00:03:54.400
When I get down to AWS, I mean this
has nothing to do with graph QL but

69
00:03:54.400 --> 00:03:58.860
what I like to do is use something
called Terraform from Hashicorp,

70
00:03:58.860 --> 00:04:01.330
which is basically like
infrastructure as code, so

71
00:04:01.330 --> 00:04:04.170
you can just write your code,
I'm sure you've heard of it before.

72
00:04:04.170 --> 00:04:08.320
So that's what I use if I have to deal
with AWS because I just don't like to go

73
00:04:08.320 --> 00:04:10.240
into AWS and mess with anything.

74
00:04:10.240 --> 00:04:11.410
Just I don't want to do it.

75
00:04:12.580 --> 00:04:14.880
I mean, it looks better
than it's ever done before,

76
00:04:14.880 --> 00:04:18.060
but no, I don't want to mess with it.

77
00:04:19.660 --> 00:04:21.969
Cool, we'll let that deploy,
we'll check on it later.

