WEBVTT

1
00:00:00.180 --> 00:00:06.066
So first thing is we need
to go to our type darts and

2
00:00:06.066 --> 00:00:10.960
create a new type called subscription.

3
00:00:14.083 --> 00:00:18.969
And we'll call this a new post and
it's going to have a post

4
00:00:18.969 --> 00:00:24.168
type That's the first thing,
then we go into our resolvers.

5
00:00:24.168 --> 00:00:28.547
And we'll import in the [INAUDIBLE]

6
00:00:28.547 --> 00:00:33.384
implementation from Apollo server.

7
00:00:36.033 --> 00:00:37.904
Man, there we go.

8
00:00:40.244 --> 00:00:42.290
And from, not Apollo server.

9
00:00:45.412 --> 00:00:47.559
PubSub, we'll make a new instance.

10
00:00:47.559 --> 00:00:54.650
So, Like that no options needed.

11
00:00:56.568 --> 00:01:00.289
And from there we need to find our
mutation where we're creating a post,

12
00:01:00.289 --> 00:01:04.559
which is here and you can see it's already
using the pubsub.publish with new posts

13
00:01:04.559 --> 00:01:06.570
and it's passing that post.

14
00:01:06.570 --> 00:01:07.770
So we're good there.

15
00:01:07.770 --> 00:01:09.740
So the only thing we need to do-
&gt;&gt; You might want to camel case that.

16
00:01:10.800 --> 00:01:11.740
&gt;&gt; Camel case which one?

17
00:01:11.740 --> 00:01:13.000
&gt;&gt; PubSub.

18
00:01:13.000 --> 00:01:13.810
&gt;&gt; PubSub, there we go.

19
00:01:13.810 --> 00:01:14.780
Thank you.

20
00:01:14.780 --> 00:01:16.190
Did I do that up here?

21
00:01:16.190 --> 00:01:16.690
Yes I did.

22
00:01:16.690 --> 00:01:17.850
Thank you.

23
00:01:19.080 --> 00:01:21.230
So, you got your publish.

24
00:01:21.230 --> 00:01:23.840
You're adding the event, and
then you're adding the pay low.

25
00:01:23.840 --> 00:01:28.500
The next thing we need to do is
head over to creating resolvers for

26
00:01:28.500 --> 00:01:33.700
the subscription field that we created on
the type deaths, in my case, its new post.

27
00:01:33.700 --> 00:01:38.120
So I'm going to make a resolver for
subscription, new posts.

28
00:01:38.120 --> 00:01:41.783
So I'm out here on my resolvers Phil for
a subscription.

29
00:01:44.584 --> 00:01:49.334
And I want one for newPost, cuz it's
description as an object as a subscribe(),

30
00:01:51.176 --> 00:01:52.656
Method like that.

31
00:01:52.656 --> 00:01:57.879
And then we're gonna use
pubSub.asyncIterator(),

32
00:01:57.879 --> 00:02:02.021
and we wanna subscribe
to the newPost event.

33
00:02:07.556 --> 00:02:10.294
But creating a new post and
subscribing to oppose,

34
00:02:10.294 --> 00:02:13.861
let's just say that you had to be
authenticated for the last one for

35
00:02:13.861 --> 00:02:17.250
subscribing, so we need to add
some authentication for that.

36
00:02:17.250 --> 00:02:20.420
So we'll head over to
the index Inside the context.

37
00:02:20.420 --> 00:02:22.410
The first thing we need to
do is handle the context

38
00:02:23.510 --> 00:02:28.890
differently if you're going to be on using
subscriptions for the incoming request.

39
00:02:28.890 --> 00:02:35.230
So, if context or not that,
if connection then what we wanna do is

40
00:02:35.230 --> 00:02:39.770
we want to, maybe we still want access to
some of this stuff so I'll just make a new

41
00:02:41.010 --> 00:02:46.040
context here, like this, and by default,
does have all the DB stuff in it.

42
00:02:46.040 --> 00:02:52.130
And then if it's a connection,
then I'll just return the context

43
00:02:52.130 --> 00:02:58.390
plus the connection dot context,
spread it over like that.

44
00:02:58.390 --> 00:03:04.190
If it's not, then what I'll do is
I'll just return a new object with

45
00:03:04.190 --> 00:03:07.770
this context, with the user and
create token.

46
00:03:10.620 --> 00:03:15.500
So if connection, make a whole new context
object that has the database stuff on it,

47
00:03:15.500 --> 00:03:17.240
plus whatever context the connection has,

48
00:03:17.240 --> 00:03:20.180
if not,
then we're gonna do what we already had.

49
00:03:20.180 --> 00:03:21.310
That'll handle the context.

50
00:03:21.310 --> 00:03:23.170
The next thing is we need
to add authentication.

51
00:03:23.170 --> 00:03:26.970
So, I'm gonna have subscriptions here,
which is an objects and

52
00:03:26.970 --> 00:03:31.530
then on the connects handler,
which happens every time you connect,

53
00:03:31.530 --> 00:03:36.420
this has to return a truth the value,
otherwise it won't really connect.

54
00:03:36.420 --> 00:03:39.530
So, I'm gonna get something called
params or connection params.

55
00:03:39.530 --> 00:03:41.220
You can call wherever you want.

56
00:03:41.220 --> 00:03:44.230
And i'm basically just gonna use
the same logic I have up here

57
00:03:44.230 --> 00:03:46.630
to figure out if you're authenticated or
not.

58
00:03:46.630 --> 00:03:50.340
So I can say, token instead of headers.

59
00:03:50.340 --> 00:03:52.640
I can just say params.

60
00:03:52.640 --> 00:03:53.970
That authorization.

61
00:03:53.970 --> 00:03:55.650
You can call this whatever you want.

62
00:03:55.650 --> 00:04:00.540
The difference here is on, express reg
dot headers and whatever the header is,

63
00:04:00.540 --> 00:04:03.710
is always going to be lowercase,
no matter what the header is coming

64
00:04:03.710 --> 00:04:07.910
in at lowercase is it where's
this is going to be explicit.

65
00:04:07.910 --> 00:04:11.950
So if you on the client side at
authorization, what an uppercase a,

66
00:04:11.950 --> 00:04:14.350
it's probably gonna be
uppercase eight here as well.

67
00:04:14.350 --> 00:04:15.920
It's not normalized like headers are.

68
00:04:15.920 --> 00:04:16.850
So that's the difference.

69
00:04:16.850 --> 00:04:17.890
Take note of that.

70
00:04:17.890 --> 00:04:20.800
So maybe because of that distinction,
you might call this something else like

71
00:04:20.800 --> 00:04:23.050
off token just to
differentiate between the two.

72
00:04:24.670 --> 00:04:27.080
And then for the user,
we have the same thing.

73
00:04:27.080 --> 00:04:30.490
And then the difference with this is
whatever you return on onConnect,

74
00:04:30.490 --> 00:04:32.980
this gets merged with the context object.

75
00:04:32.980 --> 00:04:36.720
So if you return an object here, in this
case, I want the user, whatever this

76
00:04:36.720 --> 00:04:42.320
object is, gets merged whatever the object
that's what this context.connection is.

77
00:04:42.320 --> 00:04:43.648
It's whatever got returned here.

78
00:04:43.648 --> 00:04:49.750
So this context.connection is the result
of the onConnect returning something.

79
00:04:52.240 --> 00:04:53.000
Everybody follow me?

80
00:04:54.930 --> 00:04:58.610
Cool, so now,
what we'll do is start this up,

81
00:04:58.610 --> 00:05:01.750
let me make sure I don't have anything
running, which I do, get rid of that.

82
00:05:03.400 --> 00:05:04.064
Start this up.

83
00:05:06.251 --> 00:05:07.280
Cool, nothing broke.

84
00:05:07.280 --> 00:05:08.330
That's always a good sign.

85
00:05:09.340 --> 00:05:11.750
Close one of these refresh.

86
00:05:11.750 --> 00:05:19.060
So now if I try to subscribe
to new posts like this,

87
00:05:19.060 --> 00:05:23.500
and I want to get a post message and
ID for Charlie,

88
00:05:23.500 --> 00:05:29.650
hit play I guess I already
have a token in there.

89
00:05:29.650 --> 00:05:31.490
Yeah, I got something in here.

90
00:05:31.490 --> 00:05:36.510
Let me get rid of this stuff.

91
00:05:36.510 --> 00:05:43.060
There we go so
far that play that should actually break.

92
00:05:43.060 --> 00:05:44.238
I expect that to break right now.

93
00:05:44.238 --> 00:05:46.851
Hold up.

94
00:05:50.988 --> 00:05:55.484
You're returning an object that's got
an undefined parameter inside of it but

95
00:05:55.484 --> 00:05:57.400
not throwing, turning.

96
00:05:57.400 --> 00:05:58.720
&gt;&gt; All see, where was that?

97
00:05:58.720 --> 00:06:01.300
Where do you see that?

98
00:06:01.300 --> 00:06:01.920
&gt;&gt; On Connect?

99
00:06:01.920 --> 00:06:09.020
&gt;&gt; That's
&gt;&gt; Server You're always returning the

100
00:06:09.020 --> 00:06:09.870
&gt;&gt; That's right.

101
00:06:09.870 --> 00:06:10.370
That's right.

102
00:06:10.370 --> 00:06:11.340
Yeah, I'm always I'm trippin.

103
00:06:11.340 --> 00:06:18.850
Yeah, so
let's say we wanted to throw a new error.

104
00:06:18.850 --> 00:06:23.325
I actually want you all to observe this.

105
00:06:23.325 --> 00:06:28.350
Nop, if not user
&gt;&gt; Thrown in there.

106
00:06:28.350 --> 00:06:28.850
There we go.

107
00:06:31.091 --> 00:06:31.591
Cool.

108
00:06:33.210 --> 00:06:35.150
Want you to observe that okay, cool.

109
00:06:35.150 --> 00:06:35.755
Let's try that again.

110
00:06:38.100 --> 00:06:39.243
Start this up.

111
00:06:41.976 --> 00:06:42.920
Try this one more time.

112
00:06:42.920 --> 00:06:45.310
And you can see I get the error for
not been authenticated.

113
00:06:45.310 --> 00:06:46.710
Nope, nope, nope, nope, nope.

114
00:06:46.710 --> 00:06:50.340
So, Maybe subscriptions on Connect.

115
00:06:50.340 --> 00:06:53.260
Maybe you handed out a little handle
that a little differently than you do

116
00:06:53.260 --> 00:06:53.790
resolvers.

117
00:06:53.790 --> 00:06:55.900
Maybe you always had to be authenticated.

118
00:06:55.900 --> 00:06:57.310
And you probably wanna shut it down.

119
00:06:57.310 --> 00:06:58.460
So you throw an error.

120
00:06:58.460 --> 00:07:00.070
But if you don't wanna
globally shut it down and

121
00:07:00.070 --> 00:07:03.140
maybe subscriptions you do,
then you can do what we did here.

122
00:07:03.140 --> 00:07:05.870
So I wanted to make
that distinctive point.

123
00:07:05.870 --> 00:07:07.070
But cool, we got that.

124
00:07:07.070 --> 00:07:09.540
And then now, we can go ahead and
try our subscription.

125
00:07:09.540 --> 00:07:13.920
So we got the newPost going here, let's
start that again, no errors this time.

126
00:07:13.920 --> 00:07:21.280
We'll make a new tab, we go to
localhost:4000, make a new mutation here.

127
00:07:23.100 --> 00:07:25.290
I guess I need to sign up first or.

128
00:07:25.290 --> 00:07:26.260
Yeah, I'll just sign up.

129
00:07:26.260 --> 00:07:28.630
I don't have a credentials for sign in.

130
00:07:28.630 --> 00:07:30.520
So we'll sign up, get a token.

131
00:07:34.264 --> 00:07:36.220
Get the inputs for all of that off.

132
00:07:36.220 --> 00:07:43.362
I'll get the token here and
then this takes in Off

133
00:07:45.523 --> 00:07:50.391
like that, and
that's gonna be a sign up and

134
00:07:50.391 --> 00:07:57.102
put dollar sign like that,
it needs to add some variables for

135
00:07:57.102 --> 00:08:02.053
the off, which will be an email And
a password.

136
00:08:04.388 --> 00:08:05.614
And a role.

137
00:08:08.539 --> 00:08:09.490
Close, we'll sign up.

138
00:08:10.610 --> 00:08:13.830
Grab this token here, just like that.

139
00:08:13.830 --> 00:08:19.470
And then now, we can do our
mutation where we create a post.

140
00:08:19.470 --> 00:08:22.490
So mutation NewPost.

141
00:08:22.490 --> 00:08:25.740
I think it's called createPost, actually.

142
00:08:25.740 --> 00:08:28.440
There we go, createPost, those are inputs.

143
00:08:28.440 --> 00:08:33.230
Make a variable for a post,
which will be a newPost input.

144
00:08:33.230 --> 00:08:36.100
I'm guessing, that's gotta be it.

145
00:08:36.100 --> 00:08:41.681
Assign that to the variable here,
post and a variable here called

146
00:08:41.681 --> 00:08:48.490
posts that takes in a message like this
only it takes, hello there at our headers

147
00:08:54.524 --> 00:09:00.190
Which is just our token that we have here
and we should be able to create a post.

148
00:09:00.190 --> 00:09:01.620
So we'll do that.

149
00:09:01.620 --> 00:09:04.750
Well, so post created if we
go back to the playground,

150
00:09:06.190 --> 00:09:08.300
you can see I'm getting Nope, nope.

151
00:09:08.300 --> 00:09:09.380
Wait, hold on.

152
00:09:09.380 --> 00:09:11.150
Why is this thing never scroll?

153
00:09:11.150 --> 00:09:12.500
I don't like things never scroll.

154
00:09:12.500 --> 00:09:17.910
But the reason we're not getting here is
because we haven't sent up the off token

155
00:09:17.910 --> 00:09:21.850
on the subscription side, so it doesn't
even have a user anything like that.

156
00:09:21.850 --> 00:09:23.470
So we have to send that up.

157
00:09:23.470 --> 00:09:25.220
So now we got to do ops not that.

158
00:09:26.800 --> 00:09:29.050
Let's restart this, there we go.

159
00:09:29.050 --> 00:09:31.260
So now an HTTP headers here.

160
00:09:31.260 --> 00:09:39.000
We have to supply the same thing that we
had on the index, which was off token.

161
00:09:39.000 --> 00:09:43.080
So he's applying off token which is
the same off token that we have before.

162
00:09:43.080 --> 00:09:47.710
So we'll say off token like this.

163
00:09:49.800 --> 00:09:52.180
Stan, that jadibooti we got that.

164
00:09:52.180 --> 00:09:54.780
Hit the subscribe.

165
00:09:54.780 --> 00:09:59.580
Now if we hit play on this,
we go back, we get the message.

166
00:09:59.580 --> 00:10:01.262
So if I do another one.

167
00:10:01.262 --> 00:10:08.370
[BLANK AUDIO] Another one there,
we get another message.

168
00:10:08.370 --> 00:10:09.290
I like it.

169
00:10:09.290 --> 00:10:11.600
So you can use like socket IO for
this stuff to like,

170
00:10:11.600 --> 00:10:14.070
I guess any transport any protocol works.

171
00:10:14.070 --> 00:10:15.540
So it's pretty flexible.

172
00:10:15.540 --> 00:10:16.840
Whatever you want to use.

