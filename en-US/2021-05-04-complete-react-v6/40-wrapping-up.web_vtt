WEBVTT

1
00:00:00.520 --> 00:00:05.453
Beyond that, that is the conclusion
to the lessons part of

2
00:00:05.453 --> 00:00:08.280
the complete intro to react v6.

3
00:00:08.280 --> 00:00:13.474
So let's go ahead and take any questions
you have about anything about react.

4
00:00:13.474 --> 00:00:15.316
And then we can we can
chat a bit about that.

5
00:00:15.316 --> 00:00:21.319
So yeah, let's go I can definitely
think of some use cases for

6
00:00:21.319 --> 00:00:24.213
portals beyond just modals.

7
00:00:24.213 --> 00:00:28.679
The one that I like the best,
that's probably a much better use case for

8
00:00:28.679 --> 00:00:32.476
is like, imagine that you're on
one part of your website and

9
00:00:32.476 --> 00:00:35.096
there's a contextual sidebar, right?

10
00:00:35.096 --> 00:00:39.590
So maybe I'm on the Well, I mean,
the Microsoft docs are a really

11
00:00:39.590 --> 00:00:44.416
good example that when you're
reading an article about JavaScript,

12
00:00:44.416 --> 00:00:48.608
the sidebar is all articles
related to JavaScript, right?

13
00:00:48.608 --> 00:00:51.494
And then if you navigate to
a different part of the application,

14
00:00:51.494 --> 00:00:52.729
it's about dot net stuff.

15
00:00:52.729 --> 00:00:55.052
It changes to be about
dotnet stuff on the side.

16
00:00:55.052 --> 00:01:00.087
So it's like a contextual sidebar and it's
a perfect use case for a portal, right?

17
00:01:00.087 --> 00:01:05.228
So you have like the main component,
that's rendering whatever you need to from

18
00:01:05.228 --> 00:01:10.161
the article and the neck that can have
a portal over to the side of like, okay?

19
00:01:10.161 --> 00:01:13.260
Here's related articles to the thing,
I'm talking about the,

20
00:01:13.260 --> 00:01:15.466
and then you can have
like five of those right?

21
00:01:15.466 --> 00:01:19.136
You could have a contextual sidebar,
a contextual navigation,

22
00:01:19.136 --> 00:01:21.539
a contextual footer, all those things and

23
00:01:21.539 --> 00:01:25.828
they can all be portals that are driven
from one part of the the application.

24
00:01:25.828 --> 00:01:26.419
Does that make sense?

25
00:01:26.419 --> 00:01:28.216
I like that.

26
00:01:28.216 --> 00:01:30.970
Like I think that's a really
good use case for portals.

27
00:01:30.970 --> 00:01:37.551
So the question is, can I think of other
use cases for context besides CSS up.

28
00:01:37.551 --> 00:01:38.765
The answer is yes.

29
00:01:38.765 --> 00:01:43.622
And the one I showed you is probably the
dumbest one, if we're being honest about

30
00:01:43.622 --> 00:01:47.704
it, it was a simple way of teaching it but
you have to think about it.

31
00:01:47.704 --> 00:01:51.240
Things like what our application
state like what's universal

32
00:01:51.240 --> 00:01:54.383
to your application things
like what user is logged in.

33
00:01:54.383 --> 00:01:58.531
I don't know other things that are gonna
be like universal to your entire

34
00:01:58.531 --> 00:01:59.418
application.

35
00:01:59.418 --> 00:02:01.529
But let's stick with the example
of a user logged in.

36
00:02:01.529 --> 00:02:03.596
Right?
So let's say in the top right,

37
00:02:03.596 --> 00:02:06.604
I show that my user is Brian Holt and
he's logged in, and

38
00:02:06.604 --> 00:02:11.099
then they scroll down the page a little
bit and like, it's like Brian's profile.

39
00:02:11.099 --> 00:02:12.213
So I'll show a bunch of stuff there.

40
00:02:12.213 --> 00:02:16.965
And then I scroll down to the comments
section and I'm gonna show my picture and

41
00:02:16.965 --> 00:02:20.289
my preferences for
how I'm gonna comment on the page.

42
00:02:20.289 --> 00:02:24.609
That could all be in context because I
have multiple places in my application

43
00:02:24.609 --> 00:02:26.844
where I'm reading from that context.

44
00:02:26.844 --> 00:02:31.404
So that's what you wanna think about
with context is like where and

45
00:02:31.404 --> 00:02:33.855
how am I gonna be reading from this.

46
00:02:33.855 --> 00:02:38.157
And if that's everywhere in your
application, then context is a good place

47
00:02:38.157 --> 00:02:42.052
for that, if it's just like one or
two places, then have that live in

48
00:02:42.052 --> 00:02:46.042
a component and then have that
component pass it down to its children.

49
00:02:46.042 --> 00:02:50.821
So I think the question here is let's
come back to a code for a little bit.

50
00:02:50.821 --> 00:02:53.555
There's a theme context,
our consumer here.

51
00:02:53.555 --> 00:02:56.671
This only works in class components right,

52
00:02:56.671 --> 00:03:01.569
you wouldn't do this inside of,
it actually might work inside of a.

53
00:03:01.569 --> 00:03:04.856
So it probably actually would work
inside of a function component, but

54
00:03:04.856 --> 00:03:05.635
not vice versa.

55
00:03:05.635 --> 00:03:06.659
You couldn't use a hook here.

56
00:03:06.659 --> 00:03:09.329
Don't do it this way.

57
00:03:09.329 --> 00:03:12.836
If you're in a function component,
please use context, right?

58
00:03:12.836 --> 00:03:17.036
But so there's theme context here.

59
00:03:17.036 --> 00:03:23.304
And then the other place that
it gets used is details.

60
00:03:23.304 --> 00:03:24.209
Were in details.

61
00:03:24.209 --> 00:03:25.466
The other one that is search params.

62
00:03:25.466 --> 00:03:30.147
Here, we're just doing use context here,

63
00:03:30.147 --> 00:03:33.572
which is up here, right there.

64
00:03:33.572 --> 00:03:35.590
This is just the hook version of that,
right?

65
00:03:35.590 --> 00:03:41.233
So underneath the same machinations work,
they're both contexts

66
00:03:41.233 --> 00:03:46.282
referring to the same context
once just using a hook to do it.

67
00:03:46.282 --> 00:03:48.683
One is using a higher
order component to do it.

68
00:03:51.551 --> 00:03:54.130
Yeah, otherwise they're the same.

69
00:03:54.130 --> 00:03:56.754
You just can't use hooks inside
of class components, right?

70
00:03:56.754 --> 00:03:59.458
Like just really drill at home
if I go here to search params,

71
00:03:59.458 --> 00:04:01.038
I can't say use state right here.

72
00:04:01.038 --> 00:04:08.533
In fact, it'll yell at me if I try to.

73
00:04:14.088 --> 00:04:14.592
Wait, I'm not.

74
00:04:14.592 --> 00:04:18.534
That's funny, search params is
one I was talking about details.

75
00:04:18.534 --> 00:04:22.639
They gotta details here and
inside of the render function,

76
00:04:22.639 --> 00:04:28.153
if I say use state right here, it's gonna
be upset at me for a number of reasons.

77
00:04:28.153 --> 00:04:28.653
In fact,

78
00:04:28.653 --> 00:04:32.725
you can see here react hook use state
cannot be called in the class component.

79
00:04:32.725 --> 00:04:35.815
That's one of the helpers from
react hooks, rules of hooks,

80
00:04:35.815 --> 00:04:37.955
it'll actually prevent you from doing but

81
00:04:37.955 --> 00:04:41.177
is there any performance
considerations to class properties?

82
00:04:41.177 --> 00:04:42.623
And the answer that is no.

83
00:04:42.623 --> 00:04:47.157
It gets transpiled to
a constructor actually.

84
00:04:47.157 --> 00:04:50.418
So, no,
it's totally fine to do it that way.

85
00:04:54.440 --> 00:04:56.990
And for that matter,
not with JSX either, right?

86
00:04:56.990 --> 00:05:00.894
JSX just gets transpiled
to create Element calls.

87
00:05:00.894 --> 00:05:03.657
There's no performance hit there either.

88
00:05:03.657 --> 00:05:06.300
You just drink from the fire hose today,

89
00:05:06.300 --> 00:05:11.204
I understand that being a bit facetious,
but it is information overload.

90
00:05:11.204 --> 00:05:14.159
I'm a little cooked up here as well, so

91
00:05:14.159 --> 00:05:18.114
I totally understand how
you probably feel as well.

92
00:05:18.114 --> 00:05:22.541
A lot of this is just being exposed to it
and then re exposing yourself over and

93
00:05:22.541 --> 00:05:27.245
over again and if it feels like it's hard
it's just because it is hard right and so

94
00:05:27.245 --> 00:05:30.774
,I'm trying to consume something
that I've been doing for

95
00:05:30.774 --> 00:05:33.991
seven years in my career in
one day is difficult right.

96
00:05:33.991 --> 00:05:38.828
So please allow yourself
the leeway to feel difficulty and

97
00:05:38.828 --> 00:05:42.974
to feel tired and upset and
just wanna go home and,

98
00:05:42.974 --> 00:05:47.231
I guess probably many of
you are home at the moment.

99
00:05:47.231 --> 00:05:47.910
But to continue being at home and

100
00:05:47.910 --> 00:05:49.125
not listening to me all these
are totally fine emotions.

101
00:05:49.125 --> 00:05:50.824
If you can be upset at me.

102
00:05:50.824 --> 00:05:55.933
You can tweet angry things at me I
will not be super cheeky back to you,

103
00:05:55.933 --> 00:05:57.795
maybe just a little bit.

104
00:05:57.795 --> 00:06:02.761
But yeah, all those are totally find
things to feel like it's okay for

105
00:06:02.761 --> 00:06:05.551
you to not totally get this all at once.

106
00:06:05.551 --> 00:06:09.320
But I think it is a useful tool and
I'm hopeful that this will be

107
00:06:09.320 --> 00:06:14.124
helpful to you in your career or whatever
you're doing with with JavaScript.

108
00:06:14.124 --> 00:06:15.703
&gt;&gt; Hey, quick question for you, Brian.

109
00:06:15.703 --> 00:06:18.901
I gone through your V5 of this and
now this one and

110
00:06:18.901 --> 00:06:23.586
I know you showed us both a functional
way of doing things in a class way.

111
00:06:23.586 --> 00:06:27.255
But if you're just sorting maybe,
preferencing one of them if you're

112
00:06:27.255 --> 00:06:29.896
starting out,
which one would you sort of go with?

113
00:06:29.896 --> 00:06:33.850
Should I just start maybe,
working with classes or functionals?

114
00:06:33.850 --> 00:06:35.519
Wait the first just to start out?

115
00:06:35.519 --> 00:06:37.134
&gt;&gt; Yeah, good question.

116
00:06:37.134 --> 00:06:39.764
So if you're just starting out,
which one should you start out doing?

117
00:06:39.764 --> 00:06:42.746
They both have some oddity to them.

118
00:06:42.746 --> 00:06:48.285
Like one thing here is like
this right in class components.

119
00:06:48.285 --> 00:06:50.061
Like here,
we have to say like this dot set state.

120
00:06:50.061 --> 00:06:52.791
And we had to use an arrow
function to get that correct.

121
00:06:52.791 --> 00:06:54.366
It's weird, right?

122
00:06:54.366 --> 00:06:57.947
It's you have to know what this does in
JavaScript like it's a weird question.

123
00:06:57.947 --> 00:06:58.522
What does this do?

124
00:06:58.522 --> 00:07:03.545
By the same token,
if we go back to search params

125
00:07:06.630 --> 00:07:10.670
We have this async function that we're
creating inside of search params.

126
00:07:10.670 --> 00:07:15.457
And by the way, if we move this outside
of search params it no longer works

127
00:07:15.457 --> 00:07:19.158
because setPets is coming
from inside of the function.

128
00:07:19.158 --> 00:07:20.294
This is closures, right?

129
00:07:20.294 --> 00:07:23.947
And so that's kind of weird to deal
with because closures aren't necessarily

130
00:07:23.947 --> 00:07:25.621
intuitively obvious all the time.

131
00:07:29.089 --> 00:07:30.701
So you're trading one set of weirdness for
another.

132
00:07:30.701 --> 00:07:31.853
Do you wanna deal with this?

133
00:07:31.853 --> 00:07:33.451
Or do you wanna deal with closures?

134
00:07:33.451 --> 00:07:39.225
And I don't really have a good way to
respond to cuz they're both weird.

135
00:07:39.225 --> 00:07:43.178
I'm gonna go ahead and say that most
people are starting out with hooks and

136
00:07:43.178 --> 00:07:47.129
there's a reason why I tell you hooks
first is because I do think it might be

137
00:07:47.129 --> 00:07:49.193
the slightly easier one to deal with.

138
00:07:49.193 --> 00:07:52.034
So if I'm gonna encourage you
to go one way or the other,

139
00:07:52.034 --> 00:07:55.552
I'll probably nudge you towards
hooks just for a myriad of reasons.

140
00:07:55.552 --> 00:07:56.862
This reads easier the first time.

141
00:07:56.862 --> 00:08:02.830
The closure stuff is nuanced,
but usually pretty gettable.

142
00:08:02.830 --> 00:08:06.900
And the other thing is whenever
I start a new component,

143
00:08:06.900 --> 00:08:11.416
you probably saw me right away,
I just say const new component

144
00:08:13.197 --> 00:08:18.430
Equals, Turn each one,
right, like I start out with

145
00:08:18.430 --> 00:08:23.344
function components cuz they're
just shorter to write right.

146
00:08:23.344 --> 00:08:27.370
And then that lends itself really well
to bringing in hooks because it's

147
00:08:27.370 --> 00:08:31.924
the logical progression on top of that
because refactoring the classes just takes

148
00:08:31.924 --> 00:08:32.656
some doing.

149
00:08:32.656 --> 00:08:37.330
So I'm giving you a very weak
direction to head towards hooks,

150
00:08:37.330 --> 00:08:41.841
but you need to trust yourself
more than you trust me on that.

151
00:08:41.841 --> 00:08:42.439
Does that answer your question?

152
00:08:42.439 --> 00:08:45.702
&gt;&gt; I think so, thank you.

153
00:08:45.702 --> 00:08:46.202
&gt;&gt; Cool.

154
00:08:49.821 --> 00:08:50.321
Other questions?

155
00:08:53.932 --> 00:08:59.764
Okay, I'm gonna head back here and just
kinda start wrapping up here a little bit.

156
00:08:59.764 --> 00:09:04.112
So the end of interests where we
are here I've taught you basically

157
00:09:04.112 --> 00:09:06.919
everything about the core react library.

158
00:09:06.919 --> 00:09:08.869
Like there's not a whole lot left.

159
00:09:08.869 --> 00:09:12.416
There's some additional
special use case hooks.

160
00:09:12.416 --> 00:09:15.649
There's some more component life cycles,
but I've actually exposed you to

161
00:09:15.649 --> 00:09:19.245
everything and I've left you documentation
on all those things that you might need.

162
00:09:19.245 --> 00:09:21.958
Also, if you go take
the intermediate react course,

163
00:09:21.958 --> 00:09:24.625
it's gonna teach you more in depth,
all the hooks.

164
00:09:24.625 --> 00:09:27.462
We get into some more
advanced use cases as well.

165
00:09:27.462 --> 00:09:32.650
It's more the ecosystem around react,
things like tailwind and type script and

166
00:09:32.650 --> 00:09:37.162
server-side rendering and
code splitting and some of those things.

167
00:09:37.162 --> 00:09:38.625
That's all covered in
the intermediate react.

168
00:09:38.625 --> 00:09:44.912
But you today have been exposed
to all of the core library or

169
00:09:44.912 --> 00:09:50.427
at least 99% of what you're
gonna need to go do,

170
00:09:50.427 --> 00:09:53.402
go build cool react stuff.

171
00:09:53.402 --> 00:09:57.633
But all beyond that, like congratulations,

172
00:09:57.633 --> 00:10:01.436
it's difficult and you made it this far.

173
00:10:01.436 --> 00:10:03.061
I'm proud of you, like a proud dad.

174
00:10:03.061 --> 00:10:05.767
Just kidding.

175
00:10:05.767 --> 00:10:07.657
I mean, I am, I am proud of you.
Maybe not like a proud dad,

176
00:10:07.657 --> 00:10:11.026
that felt a little weird to say,
so I'm gonna walk that one back.

177
00:10:11.026 --> 00:10:15.538
I did wanna leave you some
expansion points, right?

178
00:10:15.538 --> 00:10:19.085
If you're interested in hey,
I wanna go try some more stuff on my own,

179
00:10:19.085 --> 00:10:21.625
leave me some points to go
do some more cool stuff.

180
00:10:21.625 --> 00:10:24.963
If you click here on the ways
to expand on this project,

181
00:10:24.963 --> 00:10:29.764
one take the intermediate course I'm
going to teach you a lot more cool stuff.

182
00:10:29.764 --> 00:10:32.157
One, there are like, more results.

183
00:10:32.157 --> 00:10:36.780
So if we look to our dev API here,
and we just say pets like this.

184
00:10:36.780 --> 00:10:42.926
You can see here there's 63 results and
I'm only returning the first 9.

185
00:10:42.926 --> 00:10:48.166
If you say page = 1
because it starts at 0,

186
00:10:48.166 --> 00:10:53.988
you'll notice it will get more and
again, two.

187
00:10:53.988 --> 00:10:59.599
So one thing you could definitely
do is go and paginate the results,

188
00:10:59.599 --> 00:11:03.645
that would be a really good thing for
you to go do.

189
00:11:03.645 --> 00:11:06.290
You can use a real API.

190
00:11:06.290 --> 00:11:08.564
So in previous versions of the course,
we actually use the Petfinder API.

191
00:11:08.564 --> 00:11:11.168
So I left you some notes
here of how to go do that.

192
00:11:11.168 --> 00:11:13.214
You're gonna have to go
modify a lot of things.

193
00:11:13.214 --> 00:11:14.268
It'll be a good learning experience for
you.

194
00:11:14.268 --> 00:11:17.074
But you'll have to go create
an account with Petfinder,

195
00:11:17.074 --> 00:11:19.242
you have to get some
credentials from them.

196
00:11:19.242 --> 00:11:24.772
And then you can use their JavaScript SDK
instead of making those fetch requests.

197
00:11:24.772 --> 00:11:29.560
And yeah, then you can actually have
a real pet adoption app that you

198
00:11:29.560 --> 00:11:33.342
can actually adopt pets from,
which is pretty cool.

199
00:11:33.342 --> 00:11:35.219
So that's one of the things
you can definitely go do.

200
00:11:35.219 --> 00:11:37.094
You can deploy your code, and

201
00:11:37.094 --> 00:11:40.549
I left you some example places
where you can go do that.

202
00:11:40.549 --> 00:11:42.724
That's always a good thing for
you to learn how to do.

203
00:11:42.724 --> 00:11:44.890
You can use this theme
selector more places,

204
00:11:44.890 --> 00:11:48.203
like for example, those modal buttons
would be a good place to do it.

205
00:11:48.203 --> 00:11:52.523
You can add a navbar you can go play with
some other tools like, I don't know,

206
00:11:52.523 --> 00:11:55.269
like snow pack or Webpack or
anything like that.

207
00:11:55.269 --> 00:11:57.781
Those are cool things you can do as well.

208
00:11:57.781 --> 00:12:00.716
And lastly, I just wanna let me
know if you go build cool stuff.

209
00:12:00.716 --> 00:12:03.343
I have created a repo here,

210
00:12:03.343 --> 00:12:08.836
where you can actually go
just leave your btholt.JSON.

211
00:12:08.836 --> 00:12:11.870
Just let me know what
GitHub user you're doing,

212
00:12:11.870 --> 00:12:15.429
where your code is where your URL is,
and I'll merge it.

213
00:12:15.429 --> 00:12:19.218
And we can keep track of all the cool
stuff we're doing together and

214
00:12:19.218 --> 00:12:23.559
we can maybe like make like a little
gallery out of it or something like that.

215
00:12:23.559 --> 00:12:26.248
In any case, please tweet at me please
let me know what you thought about it.

216
00:12:26.248 --> 00:12:28.952
Please let Frontend Masters
know what you thought about it.

217
00:12:28.952 --> 00:12:32.498
And, yeah, cool, thank you.

218
00:12:32.498 --> 00:12:35.620
Thank you for coming to the complete
intro to react version six.

219
00:12:35.620 --> 00:12:37.949
Hopefully this was helpful for
you and, yeah.

220
00:12:37.949 --> 00:12:40.478
We'll see hopefully in
the intermediate one and

221
00:12:40.478 --> 00:12:42.890
then eventually in
the seventh version of this

