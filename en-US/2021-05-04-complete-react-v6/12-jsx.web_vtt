WEBVTT

1
00:00:00.210 --> 00:00:03.650
So, so far we've been working with
React without something called JSX.

2
00:00:03.650 --> 00:00:07.611
Which I'll say again, I don't know anyone
today that ships production React code

3
00:00:07.611 --> 00:00:10.510
that doesn't use JSX, or
really anyone that writes React.

4
00:00:11.540 --> 00:00:16.238
In fact almost every other React
tutorial that I've seen starts with

5
00:00:16.238 --> 00:00:20.536
writing JSX because people don't
know what happens with JSX.

6
00:00:20.536 --> 00:00:25.180
But I'd like starting with that, just so
you understand precisely what JSX is and

7
00:00:25.180 --> 00:00:26.408
is not doing for you.

8
00:00:28.720 --> 00:00:32.972
So let's actually just go and

9
00:00:32.972 --> 00:00:36.548
rewrite a Pet using JSX.

10
00:00:40.664 --> 00:00:46.133
Let's take all this stuff away,
and we're gonna open Pet.js.

11
00:00:46.133 --> 00:00:50.165
So right now we have
Pet.js looking like this.

12
00:00:50.165 --> 00:00:56.342
I'm just gonna rewrite it underneath here,

13
00:00:56.342 --> 00:01:01.379
const Pet equals that, and return,

14
00:01:01.379 --> 00:01:06.740
and then it's a div, and inside of that

15
00:01:06.740 --> 00:01:12.450
div is an h2 with props.name and an h3,

16
00:01:14.428 --> 00:01:20.062
With props.animal.

17
00:01:20.062 --> 00:01:25.692
And an h3 of props.breed.

18
00:01:29.614 --> 00:01:32.860
Okay, and then I'm just gonna comment
that out for a section so you can see,

19
00:01:32.860 --> 00:01:34.653
how I may have to take
them props up there.

20
00:01:37.702 --> 00:01:41.720
These two things are exactly the same.

21
00:01:42.960 --> 00:01:45.000
Do exactly the same thing.

22
00:01:45.000 --> 00:01:50.063
This, when it gets thrown through
Babel and Parcel, outputs this.

23
00:01:52.754 --> 00:01:56.464
So the reason why we went through
this whole exercise is so

24
00:01:56.464 --> 00:02:01.150
that you understand JSX does not
do very much for you, right?

25
00:02:01.150 --> 00:02:06.297
It's just taking these kind of HTML,
XML ish things, and

26
00:02:06.297 --> 00:02:11.880
outputting that as JavaScript
that a browser can understand.

27
00:02:11.880 --> 00:02:15.350
Cuz obviously the browser doesn't
expect to get JSX in it, right?

28
00:02:15.350 --> 00:02:19.630
It doesn't speak HTML inside
of the JavaScript engine.

29
00:02:22.010 --> 00:02:24.269
But this is so
much easier to read than this, right?

30
00:02:24.269 --> 00:02:29.121
Because in reality, we're writing
JavaScript here that imitates markup,

31
00:02:29.121 --> 00:02:29.820
right?

32
00:02:29.820 --> 00:02:33.407
We wanted to output divs and
h2 at the end of the day.

33
00:02:33.407 --> 00:02:37.391
So we kinda have to go through this
abstraction layer in our brain is like,

34
00:02:37.391 --> 00:02:40.219
okay, I'm trying to get
JavaScript that's HTML,

35
00:02:40.219 --> 00:02:42.750
that's gonna be rendered out as HTML.

36
00:02:42.750 --> 00:02:45.652
It'd be nicer if you can just
write the HTML directly and

37
00:02:45.652 --> 00:02:48.880
have your tools figure out exactly
what that code looks like.

38
00:02:51.340 --> 00:02:54.591
So I imagine many of you might look
at this and say l'm writing HTML,

39
00:02:54.591 --> 00:02:55.400
my JavaScript.

40
00:02:55.400 --> 00:02:57.960
We used to write JavaScript in HTML,
and that was a bad idea.

41
00:02:57.960 --> 00:02:59.430
So why is this a good idea now?

42
00:03:00.670 --> 00:03:04.651
Valid question, writing JavaScript in your
HTML was objectively a terrible idea, and

43
00:03:04.651 --> 00:03:06.336
I've done plenty of it in my career.

44
00:03:06.336 --> 00:03:10.102
And I'm not gonna talk about it.

45
00:03:10.102 --> 00:03:14.057
But the reason why I'm okay with this is
just exactly what I was explaining to you

46
00:03:14.057 --> 00:03:17.710
before, is like you're writing
JavaScript to imitate HTML.

47
00:03:17.710 --> 00:03:20.439
It's nice to just write the HTML directly.

48
00:03:20.439 --> 00:03:24.310
I find this 1,000% more
readable than this.

49
00:03:24.310 --> 00:03:25.886
This is just really noisy and

50
00:03:25.886 --> 00:03:29.610
it requires a lot of mental
interpretation to get to this.

51
00:03:29.610 --> 00:03:31.230
It's nice that I can just write this.

52
00:03:31.230 --> 00:03:37.844
So the nice thing here is you
can say id = blah, right?

53
00:03:37.844 --> 00:03:43.372
And this will get transpiled
to this being here id blah.

54
00:03:46.000 --> 00:03:48.525
So it really does just work and
look like HTML.

55
00:03:53.423 --> 00:03:55.390
Okay, we did that.

56
00:03:56.550 --> 00:04:01.280
Let's pop over to App.js now, and

57
00:04:01.280 --> 00:04:05.071
let's rewrite this in JSX.

58
00:04:13.725 --> 00:04:15.948
So the first thing is gonna be a div.

59
00:04:17.876 --> 00:04:22.382
And inside of that div is an h1.

60
00:04:22.382 --> 00:04:26.240
And we'll leave off the id
cuz we don't need it.

61
00:04:26.240 --> 00:04:33.029
Adopt Me, And then underneath that
Adopt Me we have three pet components.

62
00:04:35.572 --> 00:04:38.828
It's gonna have a name= Luna,

63
00:04:41.034 --> 00:04:45.226
animal= dog, and

64
00:04:45.226 --> 00:04:49.683
breed= Havanese.

65
00:04:49.683 --> 00:04:52.670
And then I'm just gonna copy and
paste that three times.

66
00:04:52.670 --> 00:04:53.944
This one is a Bird.

67
00:04:56.168 --> 00:05:04.347
Or sorry, it's a Pepper Bird Cockatiel.

68
00:05:04.347 --> 00:05:08.805
And this is Beam, who's a dog,

69
00:05:08.805 --> 00:05:12.445
who is a Wheaten Terrier.

70
00:05:12.445 --> 00:05:15.373
And then here I'll just
comment all this stuff out.

71
00:05:19.530 --> 00:05:24.326
Now, this has to be all
inside of a return statement.

72
00:05:33.094 --> 00:05:37.382
So I don't know how you feel about this,
but the other one is a little bit more

73
00:05:37.382 --> 00:05:41.076
readable, and I feel like this
is significantly more readable.

74
00:05:44.175 --> 00:05:44.813
Right?

75
00:05:44.813 --> 00:05:48.194
This just reads a lot better that
I can see the div, and h1 and

76
00:05:48.194 --> 00:05:50.726
three pet components
with props going down.

77
00:05:57.372 --> 00:06:02.191
So this is how you do our kind
of custom component here, right?

78
00:06:02.191 --> 00:06:05.450
The user generated component here,
Pet, that you and I made together.

79
00:06:05.450 --> 00:06:07.750
This is how you pass props down to it.

80
00:06:07.750 --> 00:06:09.050
It just looks like normal HTML, right?

81
00:06:09.050 --> 00:06:14.340
Like you say id equals
something like that, right?

82
00:06:14.340 --> 00:06:18.197
You do the same thing to pass down props
to our components that we've made.

83
00:06:22.930 --> 00:06:23.617
Questions about this?

84
00:06:23.617 --> 00:06:24.834
Make sense?

85
00:06:27.481 --> 00:06:30.017
Does it make sense why we use JSX now?

86
00:06:30.017 --> 00:06:32.420
Do we embrace the complexity of JSX?

87
00:06:32.420 --> 00:06:37.160
I know we had to go through a lot of work
to get JSX, but now that we're here,

88
00:06:37.160 --> 00:06:42.152
our code just got so much more readable,
and React gets a lot more fun to write.

89
00:06:44.880 --> 00:06:46.727
Why are you upset about Pet?

90
00:06:48.894 --> 00:06:50.711
That's right.

91
00:06:50.711 --> 00:06:52.447
It's the next thing I need to teach you.

92
00:06:54.355 --> 00:06:58.140
So one thing I'll tell you right now,
eslint is currently failing.

93
00:06:58.140 --> 00:07:01.944
It's because eslint out of the box
doesn't know how to understand React.

94
00:07:01.944 --> 00:07:05.425
So we're gonna have to give us some
additional tools to understand React.

95
00:07:10.195 --> 00:07:12.530
Something else why we did
all this stuff with Babel.

96
00:07:13.570 --> 00:07:16.798
If you've watched previous
versions of this course or

97
00:07:16.798 --> 00:07:18.763
you've used React previously,

98
00:07:18.763 --> 00:07:24.060
you knew that you used to have to always
require React wherever you were using JSX.

99
00:07:24.060 --> 00:07:27.500
That's actually not true anymore
with the latest version of React.

100
00:07:27.500 --> 00:07:31.350
So we can actually delete this top line.

101
00:07:31.350 --> 00:07:32.814
Because now React, or sorry,

102
00:07:32.814 --> 00:07:36.472
Babel is smart enough that anywhere
that it finds JSX, it's like, okay,

103
00:07:36.472 --> 00:07:40.040
you're gonna need React in here, so
it imports it for you automatically.

104
00:07:41.510 --> 00:07:44.610
So just another really
convenient feature here.

105
00:07:44.610 --> 00:07:48.770
We don't have to import React
anymore where we're using JSX.

106
00:07:48.770 --> 00:07:51.530
Because we're not using React directly,
we don't have to import it.

