WEBVTT

1
00:00:00.001 --> 00:00:03.671
So that's kind of state
hooks in a nutshell,

2
00:00:03.671 --> 00:00:07.160
that's your baby's first hook, right?

3
00:00:07.160 --> 00:00:09.730
[LAUGH] Hopefully that was helpful to you.

4
00:00:09.730 --> 00:00:14.482
Then you have any questions about like
use state in particular that they

5
00:00:14.482 --> 00:00:19.231
wanna ask right now, before we get
into effects, which is the next hook

6
00:00:19.231 --> 00:00:24.009
that we're going to lose, or lose or
use up to you, but hopefully use.

7
00:00:24.009 --> 00:00:26.360
&gt;&gt; How do we define a default value for

8
00:00:26.360 --> 00:00:30.016
select using the use state
like we have for location?

9
00:00:30.016 --> 00:00:32.245
&gt;&gt; Or
do you want it to be like preselected?

10
00:00:32.245 --> 00:00:32.862
&gt;&gt; Yeah.

11
00:00:32.862 --> 00:00:33.395
&gt;&gt; Sure, good question.

12
00:00:33.395 --> 00:00:37.582
So the question is,
is we have a predefined value of Seattle,

13
00:00:37.582 --> 00:00:40.085
Washington there for the location.

14
00:00:40.085 --> 00:00:46.021
What happens if you want a dog to be
the preselected value for animal?

15
00:00:46.021 --> 00:00:52.129
It's really just as easy as coming
to animal and typing dog and save.

16
00:00:52.129 --> 00:00:55.368
If we go back over here now dog
will be the default value for that.

17
00:00:55.368 --> 00:00:57.013
Let's talk about why that is.

18
00:00:57.013 --> 00:01:00.775
So you state, and
then I give it a default value.

19
00:01:00.775 --> 00:01:05.606
So now for the very first render animal
is going to default to being dog.

20
00:01:05.606 --> 00:01:10.221
And then if I go down to my animal
selector, the value is equal to animal,

21
00:01:10.221 --> 00:01:10.762
right?

22
00:01:10.762 --> 00:01:14.104
So it's going to be dog on first reminder.

23
00:01:14.104 --> 00:01:15.880
And then after that it just ignores it,
right?

24
00:01:15.880 --> 00:01:17.839
Because then it's not
the default value anymore.

25
00:01:17.839 --> 00:01:21.578
&gt;&gt; Is there any difference
if you set these states all

26
00:01:21.578 --> 00:01:26.037
in one object instead of having
them separately like this?

27
00:01:26.037 --> 00:01:26.820
&gt;&gt; Good question.
I mean,

28
00:01:26.820 --> 00:01:29.760
you kind of probably thinking
more like Redux, right?

29
00:01:29.760 --> 00:01:33.931
We had a big state object or
state tree as they like to refer to it.

30
00:01:33.931 --> 00:01:38.477
Is that more beneficial or less beneficial
than having all these individual ones?

31
00:01:38.477 --> 00:01:43.216
I prefer this because it's really easy for
me to use and

32
00:01:43.216 --> 00:01:46.409
I don't have to do all the Redux set or

33
00:01:46.409 --> 00:01:50.650
a object of the sign stuff
to preserve old state.

34
00:01:50.650 --> 00:01:54.615
So to really answer your question,
you can absolutely do it that way.

35
00:01:54.615 --> 00:01:55.704
And there are people that do it that way.

36
00:01:55.704 --> 00:01:59.250
And there's actually even
a thing called use reducer,

37
00:01:59.250 --> 00:02:01.519
which is a hook that does a reducer.

38
00:02:01.519 --> 00:02:04.291
And I will show you that again,
an intermediate react.

39
00:02:04.291 --> 00:02:10.996
There's no performance penalty or anything
like that, and lots of people prefer it.

40
00:02:10.996 --> 00:02:16.588
I just find this for simple use cases
a state for it to be better for me.

41
00:02:16.588 --> 00:02:17.691
But that's up to you.

42
00:02:17.691 --> 00:02:19.066
You can definitely do
it other ways as well.

43
00:02:19.066 --> 00:02:24.528
&gt;&gt; Safe to use use state for animation.

44
00:02:24.528 --> 00:02:26.389
&gt;&gt; Is it safety is you stay for
animations?

45
00:02:26.389 --> 00:02:28.061
Yeah, definitely.

46
00:02:28.061 --> 00:02:31.890
You can definitely do
animations with state.

47
00:02:31.890 --> 00:02:33.022
&gt;&gt; Is the best practice?

48
00:02:33.022 --> 00:02:35.009
&gt;&gt; Depends what you're doing.

49
00:02:35.009 --> 00:02:39.207
I suppose every time that you modify a
state, it's going to kick off a rerender.

50
00:02:39.207 --> 00:02:42.054
And if you're doing
that every millisecond,

51
00:02:42.054 --> 00:02:45.784
you might have some issues with
clogging up the main thread.

52
00:02:45.784 --> 00:02:48.870
But if you're using it judiciously and

53
00:02:48.870 --> 00:02:54.210
only updating your state less
frequently than every millisecond.

54
00:02:54.210 --> 00:02:58.712
Like you wouldn't want to update your
state in every request animation frame.

55
00:02:58.712 --> 00:03:03.162
But if you're doing it like every second,
yeah, you'll be just fine.

56
00:03:03.162 --> 00:03:07.527
There's like, you can use react
with things like framer or

57
00:03:07.527 --> 00:03:10.597
green sock and it does really cool stuff.

58
00:03:10.597 --> 00:03:11.463
Or D3 for that matter.

59
00:03:11.463 --> 00:03:16.200
Question is can you use state with
objects instead of simple strings?

60
00:03:16.200 --> 00:03:17.979
You can use state with literally anything.

61
00:03:17.979 --> 00:03:21.726
And you can use it with functions.

62
00:03:21.726 --> 00:03:23.137
You can use it with objects.

63
00:03:23.137 --> 00:03:24.154
You can use it with classes.

64
00:03:24.154 --> 00:03:26.366
There's all sorts of stuff
that you can use it for.

65
00:03:26.366 --> 00:03:28.575
So we're using it with simple strings.

66
00:03:28.575 --> 00:03:31.364
We can, we're gonna use it with
numbers here in a little bit.

67
00:03:31.364 --> 00:03:33.614
Use state you can think
of as just a container.

68
00:03:33.614 --> 00:03:35.059
It can contain whatever you throw into it.

69
00:03:35.059 --> 00:03:41.541
But, yeah,
I prefer simple smaller pieces of state.

70
00:03:41.541 --> 00:03:44.214
So in this case strings, but we could
have put all three of these into one.

71
00:03:44.214 --> 00:03:45.206
And that would have been fine.

72
00:03:45.206 --> 00:03:49.394
Yeah, so you can see here this
is the function definition.

73
00:03:49.394 --> 00:03:52.495
I know this reads a little technical,
but bear with me for a second.

74
00:03:52.495 --> 00:03:54.462
UseState, and then a type here is S,

75
00:03:54.462 --> 00:03:57.385
which basically just means
some generic other thing.

76
00:03:57.385 --> 00:03:59.982
But basically what it's saying is,
whatever you put into it,

77
00:03:59.982 --> 00:04:01.017
I expect to get out of it.

78
00:04:01.017 --> 00:04:05.011
And that's really all it cares about is
like if I'm going to give it a number,

79
00:04:05.011 --> 00:04:06.983
I expect to get a number back out of it.

80
00:04:06.983 --> 00:04:09.779
So in other words,
if I give it a string here,

81
00:04:09.779 --> 00:04:13.917
it expects animal whenever you call
set animal to also be a string.

82
00:04:13.917 --> 00:04:15.477
Now reacts to actually not
going to enforce that.

83
00:04:15.477 --> 00:04:18.903
But if you're using TypeScript,
which we will in intermediate react,

84
00:04:18.903 --> 00:04:21.160
it will actually force
you into that practice.

