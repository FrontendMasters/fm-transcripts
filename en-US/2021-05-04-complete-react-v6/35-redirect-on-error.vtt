WEBVTT

1
00:00:00.480 --> 00:00:03.168
So let's make this even
a little bit more robust,

2
00:00:03.168 --> 00:00:05.987
just to show you how to do
redirects in react router.

3
00:00:08.831 --> 00:00:15.018
So let's head back to, our error boundary.

4
00:00:20.602 --> 00:00:22.280
Let's say we want to redirect the user.

5
00:00:22.280 --> 00:00:25.170
So click here to go back to the home page.

6
00:00:25.170 --> 00:00:27.060
Or wait five seconds.

7
00:00:28.680 --> 00:00:29.570
That's good behavior, right?

8
00:00:29.570 --> 00:00:31.320
We're going to show them an error message.

9
00:00:31.320 --> 00:00:32.458
And then after five seconds,

10
00:00:32.458 --> 00:00:34.650
we're just going to redirect
them back to the homepage.

11
00:00:34.650 --> 00:00:35.230
How would you do that?

12
00:00:36.930 --> 00:00:40.836
Well, up here from react router DOM,
there's another component called redirect

13
00:00:40.836 --> 00:00:44.029
that anytime you render,
it's just going to redirect somewhere.

14
00:00:46.310 --> 00:00:52.544
So here I'm gonna say has error and
I'm also gonna get a hidden

15
00:00:52.544 --> 00:00:58.153
state rather, redirect, redirect, false.

16
00:00:58.153 --> 00:01:06.571
And then we're gonna make another life
cycle method here component did update.

17
00:01:09.160 --> 00:01:13.066
This gets called anytime that
the component updates itself, right.

18
00:01:13.066 --> 00:01:20.562
So if this.state.hasError, so
if it has an error then set a timeout.

19
00:01:25.824 --> 00:01:31.259
For this.setState

20
00:01:31.259 --> 00:01:36.380
redirect, true.

21
00:01:36.380 --> 00:01:39.130
And we'll do that after five seconds.

22
00:01:41.050 --> 00:01:43.181
So 5,000 cuz it counts in milliseconds,
right?

23
00:01:48.491 --> 00:01:49.320
Okay?

24
00:01:49.320 --> 00:01:50.043
Next thing here.

25
00:01:50.043 --> 00:01:56.906
If, this.state.redirect return.

26
00:01:59.537 --> 00:02:02.091
Redirect, to /.

27
00:02:06.762 --> 00:02:10.000
Else do these other things.

28
00:02:17.026 --> 00:02:20.190
Just to walk through it,
user hits and error.

29
00:02:21.710 --> 00:02:27.800
We call are get derived state from props.

30
00:02:27.800 --> 00:02:29.740
So return hasError true, right?

31
00:02:29.740 --> 00:02:30.560
That's going to update it.

32
00:02:30.560 --> 00:02:32.620
So that's going to kick us
into component did catch.

33
00:02:35.060 --> 00:02:38.910
That's going to call our Azure monitor or
track j s or whatever.

34
00:02:40.040 --> 00:02:44.330
Then because has error updated, it's
going to call this component did update.

35
00:02:44.330 --> 00:02:48.840
And then that's gonna kick off a timer for
five seconds that if the user, you know,

36
00:02:48.840 --> 00:02:52.910
doesn't do anything, it's going to
redirect them back to the homepage.

37
00:02:54.370 --> 00:02:55.430
So let's see that in action.

38
00:02:56.640 --> 00:03:03.737
Go to details and we're going to
throw a new error throw new error.

39
00:03:07.317 --> 00:03:08.110
Okay.

40
00:03:08.110 --> 00:03:13.210
We should be able to just wait and then
it should take us back to the homepage.

41
00:03:14.480 --> 00:03:16.310
So it's not doing it.

42
00:03:16.310 --> 00:03:18.873
Let's figure out why.

43
00:03:18.873 --> 00:03:24.506
It's not com calling component did update.

44
00:03:26.895 --> 00:03:30.995
Well another way of doing this for
sure that's gonna work is

45
00:03:30.995 --> 00:03:35.184
we could absolutely put this
inside of component did catch.

46
00:03:41.530 --> 00:03:43.090
And that did end up working as well.

47
00:03:44.346 --> 00:03:45.420
You know why this isn't working?

48
00:03:45.420 --> 00:03:47.888
I actually know exactly
why this is not working.

49
00:03:47.888 --> 00:03:51.343
componentDidupdate cannot be called
on the very first time that it

50
00:03:51.343 --> 00:03:55.550
renders which you would assume that you
wouldn't hit an error on the first time.

51
00:03:55.550 --> 00:03:56.830
But that's not always true.

52
00:03:56.830 --> 00:03:59.090
So this actually is a bad fit for
this particular place.

53
00:04:00.820 --> 00:04:02.000
So there you go.

54
00:04:02.000 --> 00:04:06.170
Learn something with Brian as he was
learning, stumbling around here.

55
00:04:06.170 --> 00:04:08.590
componentDidupdate will never
be called on the first time.

56
00:04:08.590 --> 00:04:12.920
So this is actually a better place to
do it if you immediately have an error,

57
00:04:12.920 --> 00:04:16.911
which you shouldn't because that's
basically a syntax error and or

58
00:04:16.911 --> 00:04:19.050
just throwing an error here.

59
00:04:19.050 --> 00:04:21.281
So but to be a bit more defensive,

60
00:04:21.281 --> 00:04:25.845
you can put it in component did
catch here and that'll handle that.

61
00:04:30.652 --> 00:04:31.380
All right.

62
00:04:31.380 --> 00:04:33.390
So don't throw in your renders.

63
00:04:33.390 --> 00:04:35.470
Pro tip just in general.

64
00:04:35.470 --> 00:04:37.376
Don't throw new errors and hot code paths.

65
00:04:40.240 --> 00:04:43.880
Okay, put that back to 5000.

66
00:04:43.880 --> 00:04:46.850
The key takeaway here is redirect, right?

67
00:04:46.850 --> 00:04:49.210
This is actually how you do
redirects with react router.

68
00:04:49.210 --> 00:04:52.329
You just render a redirect component and
we'll send you on your way.

