WEBVTT

1
00:00:00.421 --> 00:00:05.042
Right now we're getting one set
of dogs back from the API, Luna,

2
00:00:05.042 --> 00:00:08.752
Bunnahabhain, Olive,
Sudo, Beam, these ones.

3
00:00:08.752 --> 00:00:10.494
And you're probably all seeing
the exact same ones that I am.

4
00:00:10.494 --> 00:00:12.447
And if you click Submit, nothing happens.

5
00:00:12.447 --> 00:00:17.110
Actually, it does, it'll submit an HTML
form, and take you back to the same page,

6
00:00:17.110 --> 00:00:18.563
which is not what we want.

7
00:00:22.597 --> 00:00:27.208
So, we wanna make that work,
so that when we click Submit,

8
00:00:27.208 --> 00:00:32.490
it is actually going to submit for
a new set of pets back from the API.

9
00:00:34.600 --> 00:00:36.857
Luckily, this is actually
gonna be pretty easy for

10
00:00:36.857 --> 00:00:39.780
us, cuz we already made requestPets,
once, right?

11
00:00:39.780 --> 00:00:45.600
We just wanna make it, so, clicking on
the button here, makes that happen.

12
00:00:46.750 --> 00:00:49.665
Now, one thing you could do, and
I'm gonna show you how to do it, but

13
00:00:49.665 --> 00:00:53.730
you don't have to type this, we're gonna
make it better here in just a second.

14
00:00:53.730 --> 00:00:56.525
I could just totally say,
onClick here, and

15
00:00:56.525 --> 00:00:59.550
then put a function here for
it to run on onClick.

16
00:01:00.720 --> 00:01:04.771
This would work, but
here's a problem if we do it on onClick.

17
00:01:04.771 --> 00:01:08.917
If I type, I don't know,
Seattle, WA right here, and

18
00:01:08.917 --> 00:01:12.994
I hit Enter, as a user,
I expect that to work, right?

19
00:01:12.994 --> 00:01:16.800
If I hit Enter on an input,
I expect it to submit the form.

20
00:01:18.170 --> 00:01:24.400
So, I'm getting ahead of myself, but
that's why we put everything in a form.

21
00:01:24.400 --> 00:01:28.080
Now we can come up here to the form and
says onSubmit.

22
00:01:29.911 --> 00:01:31.600
And we can capture both things, right?

23
00:01:31.600 --> 00:01:33.627
Cuz if you click a button it
submits the form, as well.

24
00:01:38.140 --> 00:01:44.320
Okay, so, onSubmit, it's gonna take
another function here that has an e.

25
00:01:44.320 --> 00:01:47.180
I'm gonna put curly braces here,
cuz we have to do two things.

26
00:01:47.180 --> 00:01:48.840
We do wanna requestPets, right?

27
00:01:48.840 --> 00:01:50.000
And that's one thing.

28
00:01:51.940 --> 00:01:54.350
But, if you remember,
when you submit a form,

29
00:01:54.350 --> 00:01:58.710
you have to prevent it from submitting, or
it's actually going to refresh the page.

30
00:01:59.810 --> 00:02:02.780
That's just old school HTML forms for you.

31
00:02:03.790 --> 00:02:06.504
So, I imagine many of you
have done this before, and

32
00:02:06.504 --> 00:02:08.984
we're gonna do it now
you're just gonna say e.

33
00:02:08.984 --> 00:02:12.473
So you can see it's literally
the top one here, preventDefault.

34
00:02:12.473 --> 00:02:16.953
That's gonna prevent it from submitting
the form or bubbling up the event, blah,

35
00:02:16.953 --> 00:02:17.727
blah, blah.

36
00:02:24.436 --> 00:02:29.235
I imagine that's not new for most people
coming out this, but it might be.

37
00:02:29.235 --> 00:02:32.476
Suffice to say, it's gonna prevent
the page refresh from happening.

38
00:02:34.937 --> 00:02:38.429
So, now,
if we go back over here and I say,

39
00:02:38.429 --> 00:02:43.090
I wanna look at dogs that are Havanese and
I click Submit.

40
00:02:44.390 --> 00:02:45.550
I get Luna and Sheff.

41
00:02:47.630 --> 00:02:54.591
Or if I wanna look at any
dogs from Salt Lake City, UT.

42
00:02:57.562 --> 00:02:59.300
Julietta and Talbert.

43
00:02:59.300 --> 00:03:03.620
The one thing I'll say about this
location is it's very inexact.

44
00:03:03.620 --> 00:03:08.317
Just so you know,
I really half-heartedly implemented this.

45
00:03:11.396 --> 00:03:15.315
But I mean you can type Seattle there,
and you'll get all pets from Seattle.

46
00:03:16.865 --> 00:03:20.082
The reason why I say this,
I noticed this Julietta just showed up for

47
00:03:20.082 --> 00:03:21.669
both Salt Lake City and Seattle.

48
00:03:21.669 --> 00:03:25.133
Obviously, it's from one or the other,
and I don't know which one it is, but

49
00:03:25.133 --> 00:03:28.250
that's why, it's cuz I, definitely,
half-heartedly did that.

50
00:03:30.400 --> 00:03:31.960
It's just doing full text search.

51
00:03:31.960 --> 00:03:34.671
It's not actually matching locations.

52
00:03:37.940 --> 00:03:44.053
Okay, So, one thing I wanted to
talk a little bit about here,

53
00:03:44.053 --> 00:03:45.540
cuz we're not gonna go
a whole lot more into it.

54
00:03:46.580 --> 00:03:50.970
Let's go to Handling User Inputs.

55
00:03:52.800 --> 00:03:54.930
We did onSubmit, I showed you onClick.

56
00:03:54.930 --> 00:03:57.554
But there's actually
a lot of these on blanks,

57
00:03:57.554 --> 00:04:00.320
these ways to handle user interactions.

58
00:04:00.320 --> 00:04:03.470
So, if you click here,
there's a list of them on the React docs.

59
00:04:03.470 --> 00:04:06.470
And you can see there's a lot of them,
right?

60
00:04:06.470 --> 00:04:10.680
You can handle Mouse Overs,
you can handle Touch Events.

61
00:04:10.680 --> 00:04:14.250
You can handle Cut, Copy, Paste Events.

62
00:04:14.250 --> 00:04:16.790
You can handle Animation Events.

63
00:04:16.790 --> 00:04:18.420
There's a lot of stuff
that you can handle.

64
00:04:18.420 --> 00:04:20.780
Let's just look at, Touch Events.

65
00:04:22.440 --> 00:04:25.790
OnTouchCancel, onTouchEnd,
onTouchMove, onTouchStart.

66
00:04:25.790 --> 00:04:29.742
There's a lot of fine granular
points where you can hook in and

67
00:04:29.742 --> 00:04:31.270
listen to events here.

68
00:04:31.270 --> 00:04:34.382
And if we wanted to do that here,
we can just say, hey,

69
00:04:34.382 --> 00:04:36.977
we wanna do something
special on this input.

70
00:04:36.977 --> 00:04:41.527
We can say on, you can see here I

71
00:04:41.527 --> 00:04:46.606
have a lot onCutCapture, right?

72
00:04:46.606 --> 00:04:52.849
And then I would or
even looping just to onCut.

73
00:04:52.849 --> 00:04:54.702
I would do console.log.

74
00:04:57.590 --> 00:05:01.401
So now if I come over here,
I think this should work.

75
00:05:01.401 --> 00:05:04.563
I've never tried it, but if I run a cut,

76
00:05:04.563 --> 00:05:08.563
you can see that it actually
captured my cut event.

77
00:05:11.292 --> 00:05:12.751
That's pretty cool, right?

78
00:05:12.751 --> 00:05:15.300
So I just want you to be aware of those,
those are all out there.

79
00:05:15.300 --> 00:05:17.593
Anytime that you need to capture
one of those events, just do that.

80
00:05:20.590 --> 00:05:22.022
Something else that
probably bears mentioning.

81
00:05:22.022 --> 00:05:23.957
You look at this and he's like, hey,

82
00:05:23.957 --> 00:05:26.870
that looks like an event object
that the DOM is giving me.

83
00:05:27.960 --> 00:05:29.916
But is it?

84
00:05:29.916 --> 00:05:31.726
And the answer is, sorta,

85
00:05:31.726 --> 00:05:37.093
[LAUGH] it's sorta because it's actually
technically a react synthetic event.

86
00:05:37.093 --> 00:05:40.216
Which for all intents and purposes,

87
00:05:40.216 --> 00:05:46.070
to you as the person writing code,
you don't have to care what it is.

88
00:05:46.070 --> 00:05:50.897
It looks like an event, it acts like
an event, it talks like an event, to you,

89
00:05:50.897 --> 00:05:52.963
it looks like a native DOM event.

90
00:05:52.963 --> 00:05:56.165
But in this particular case,
it actually is react wrapping that,

91
00:05:56.165 --> 00:05:57.543
that's mimicking the API.

92
00:05:57.543 --> 00:06:02.673
The only reason I just want you to know
this, when you're typing them with

93
00:06:02.673 --> 00:06:08.760
TypeScript, you do have to kind of
like finagle around that a little bit.

94
00:06:08.760 --> 00:06:12.650
But you can read the MDN Docs for events,
and these look and act just like those.

