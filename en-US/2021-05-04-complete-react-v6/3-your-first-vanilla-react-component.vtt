WEBVTT

1
00:00:00.000 --> 00:00:02.010
So let's actually go read some React.

2
00:00:02.010 --> 00:00:04.190
Now we're gonna back
into our index.html here.

3
00:00:06.590 --> 00:00:09.117
And we're just gonna
make a little component.

4
00:00:11.665 --> 00:00:19.180
So we're gonna say const
App= arrow function.

5
00:00:19.180 --> 00:00:20.656
This is what I was talking
about with ligatures.

6
00:00:20.656 --> 00:00:22.706
Notice how these things get
combined into one thing.

7
00:00:24.672 --> 00:00:27.520
It's actually just an equals and
a angle bracket.

8
00:00:28.520 --> 00:00:30.960
Just go back and reference the previous
section about ligatures and

9
00:00:30.960 --> 00:00:32.216
that'll teach you how to do that.

10
00:00:34.497 --> 00:00:40.767
So const App = return React.createElement.

11
00:00:44.264 --> 00:00:45.989
And then we're gonna create a div.

12
00:00:48.018 --> 00:00:51.608
It's not gonna have any attributes, right?

13
00:00:51.608 --> 00:00:55.963
This is where we could just say
like it has an Id of this or

14
00:00:55.963 --> 00:01:01.755
a class name of that or an aria tag or
whatever, that you do all that here.

15
00:01:01.755 --> 00:01:04.970
And then we're gonna create
another element inside of that.

16
00:01:04.970 --> 00:01:07.570
So React.createElement.

17
00:01:07.570 --> 00:01:15.129
This is gonna be an h1, no attributes,
and we're gonna call it Adopt Me.

18
00:01:21.816 --> 00:01:25.682
People frequently ask me, well,
why don't I write semi-colons?

19
00:01:25.682 --> 00:01:28.560
It's cuz Prettier writes
all my semi-colons for me.

20
00:01:28.560 --> 00:01:30.789
And I'm about to teach you
how to use Prettier so

21
00:01:30.789 --> 00:01:33.706
that you never have to hit
the semi-colon button ever again.

22
00:01:38.202 --> 00:01:40.620
Okay, so what is app here?

23
00:01:42.110 --> 00:01:49.520
This is a function that returns the result
of this thing called React.createElement.

24
00:01:49.520 --> 00:01:53.930
So what we would call App
is a React component.

25
00:01:53.930 --> 00:01:57.808
And that's kinda like the most
basic building block in React,

26
00:01:57.808 --> 00:02:03.840
is that you're just using functions and
classes to create reusable components.

27
00:02:03.840 --> 00:02:09.310
So a good way of thinking about this is
App is basically a rubber stamp, right?

28
00:02:09.310 --> 00:02:12.079
And anywhere I wanna
create an app component,

29
00:02:12.079 --> 00:02:15.564
I can just stamp it down again and
again and again, right?

30
00:02:15.564 --> 00:02:17.160
That's kinda the basic gist of it.

31
00:02:17.160 --> 00:02:18.960
It's like a class of components and

32
00:02:18.960 --> 00:02:21.480
then you can create
instances of that component.

33
00:02:21.480 --> 00:02:24.206
So the class being like the rubber stamp,
and

34
00:02:24.206 --> 00:02:28.240
the instance being like the individual
stamp of the rubber stamp.

35
00:02:30.480 --> 00:02:33.533
So basically here what we've done
is we went to the craft store and

36
00:02:33.533 --> 00:02:37.438
we bought a rubber stamp, and now we're
just looking at the rubber stamp, right?

37
00:02:37.438 --> 00:02:40.198
The rubber stamp hasn't done anything yet,

38
00:02:40.198 --> 00:02:44.275
we've just created this ability
to stamp something out, right?

39
00:02:44.275 --> 00:02:48.608
We've created a component, but we
haven't actually used the component yet.

40
00:02:51.525 --> 00:02:52.970
So let's go use it.

41
00:02:54.030 --> 00:02:59.404
We're gonna go underneath and
we're gonna say ReactDOM.render.

42
00:02:59.404 --> 00:03:02.750
And this is this is actually gonna
render out our React application.

43
00:03:02.750 --> 00:03:06.507
And we're gonna use
React.createElement again.

44
00:03:06.507 --> 00:03:08.550
And we're gonna create an app.

45
00:03:08.550 --> 00:03:12.739
So notice here this when we use quotes
to literally get a div component, right?

46
00:03:12.739 --> 00:03:15.367
A div HTML item.

47
00:03:15.367 --> 00:03:18.863
And here we're using this function
to actually run a function.

48
00:03:21.994 --> 00:03:25.771
Okay, here if I wanted to,
I could put the empty braces and

49
00:03:25.771 --> 00:03:30.489
null if I really wanted to, cuz I'm
not gonna put anything inside of it.

50
00:03:30.489 --> 00:03:32.045
But you don't have to,
that's all optional.

51
00:03:32.045 --> 00:03:35.991
So I'm just gonna leave
that off like that.

52
00:03:35.991 --> 00:03:37.335
Then we have to put it somewhere,

53
00:03:37.335 --> 00:03:39.455
and we're gonna try and
put it here in this route.

54
00:03:39.455 --> 00:03:47.256
So we're gonna say
document.getElementById root.

55
00:03:50.251 --> 00:03:53.617
As you can see it look a bit better.

56
00:03:53.617 --> 00:03:57.762
This is just telling you where to put it,
which is here.

57
00:04:01.961 --> 00:04:03.933
Okay, good so far?

58
00:04:06.502 --> 00:04:10.438
So now if we save that, and
we go back over to this, and

59
00:04:10.438 --> 00:04:15.618
we refresh the page, now you can see
we get a nice looking little logo.

60
00:04:18.168 --> 00:04:21.396
Now you didn't put an image tag,
I replaced that using CSS.

61
00:04:21.396 --> 00:04:26.146
But if you inspect the element here,
you can see that it's actually

62
00:04:26.146 --> 00:04:30.740
an h1 that has a background image,
oops, that looks like that.

63
00:04:36.005 --> 00:04:38.460
You can see that's where
that's coming from.

64
00:04:41.680 --> 00:04:42.260
Good so far?

65
00:04:42.260 --> 00:04:46.760
I mean probably the question you should
be asking yourself is why is this

66
00:04:46.760 --> 00:04:47.663
useful to me?

67
00:04:47.663 --> 00:04:50.847
I could have just written this HTML
directly and that would have gone a lot

68
00:04:50.847 --> 00:04:54.720
faster, that's an astute observation on
your part if that's what you're thinking.

69
00:04:55.900 --> 00:04:59.019
But the thing is that becomes really cool
about this is I can create bigger and

70
00:04:59.019 --> 00:05:01.690
bigger components that are made
up of other components.

71
00:05:01.690 --> 00:05:04.777
And then I have these like massive
reusable components that I can just throw

72
00:05:04.777 --> 00:05:05.321
somewhere.

73
00:05:05.321 --> 00:05:07.904
Like if you ever written
like a date picker, right?

74
00:05:07.904 --> 00:05:10.390
They're enormously annoying to write.

75
00:05:10.390 --> 00:05:13.075
But imagine just writing one day
picker that works extremely well and

76
00:05:13.075 --> 00:05:15.500
then being able to use that
everywhere on your website.

77
00:05:15.500 --> 00:05:19.880
That's kind of the promise of React here
is that I can write these self-contained

78
00:05:19.880 --> 00:05:22.430
components I can drop
onto my web application.

79
00:05:22.430 --> 00:05:28.035
These curly braces right here,
so it's just an empty object,

80
00:05:28.035 --> 00:05:31.750
is really the core answer of what that is.

81
00:05:31.750 --> 00:05:34.144
And honestly, you can put null here and
it works as well.

82
00:05:34.144 --> 00:05:37.889
But that again, you never have
to care that that would work.

83
00:05:37.889 --> 00:05:39.418
I just put an empty object.

84
00:05:39.418 --> 00:05:43.824
Let's say if I wanted to give
this h1 right here an Id.

85
00:05:43.824 --> 00:05:50.710
I could give it an Id of my-brand or
something like that, I don't know.

86
00:05:51.820 --> 00:05:53.870
So I save this, refresh over here.

87
00:05:55.430 --> 00:05:58.440
And notice here that this
Id gets rendered out here.

88
00:05:58.440 --> 00:06:02.100
These are the attributes that you want
to be passed on to that HTML element.

89
00:06:03.760 --> 00:06:06.538
So if you wanted to give it a class name,
you could do that there,

90
00:06:06.538 --> 00:06:10.240
if you wanted to give it a style,
that's how you do all those things.

91
00:06:10.240 --> 00:06:14.098
&gt;&gt; Why are we using
React.createElement app when

92
00:06:14.098 --> 00:06:19.150
the app function itself
returns React.createElement?

93
00:06:19.150 --> 00:06:19.750
&gt;&gt; It's good question.

94
00:06:21.740 --> 00:06:25.905
So you can think of React.createElement
like I was talking about the stamps and

95
00:06:25.905 --> 00:06:27.273
then stamping the stamp,

96
00:06:27.273 --> 00:06:31.560
React.createElement is the motion
of stamping something, right?

97
00:06:31.560 --> 00:06:33.576
So whenever I call app, right?

98
00:06:33.576 --> 00:06:35.285
It stamps twice, right?

99
00:06:35.285 --> 00:06:39.510
It stamps a div and then inside of
that div it stamps again an h1, right?

100
00:06:40.850 --> 00:06:46.540
Here you can't give it just
like an abstract rubber stamp.

101
00:06:46.540 --> 00:06:48.330
You have to give it
the instance of a stamp, right?

102
00:06:48.330 --> 00:06:50.552
So you actually have to do the stamping.

103
00:06:50.552 --> 00:06:55.861
So that's why you have to use
createElement here it's actually

104
00:06:55.861 --> 00:07:01.081
going to the notion of creating
an instance of your component.

105
00:07:01.081 --> 00:07:04.430
And that's essential,
that's just how React works.

106
00:07:04.430 --> 00:07:08.144
We're kinda getting like a little bit off
the rails, because I'm gonna show you how

107
00:07:08.144 --> 00:07:11.033
you're never going to write
React.createElement ever again.

108
00:07:11.033 --> 00:07:13.834
I would imagine most React
developers don't even know that

109
00:07:13.834 --> 00:07:16.298
that a function called
create element even exists,

110
00:07:16.298 --> 00:07:19.395
because it's actually hidden from
you once you start using JSX.

111
00:07:21.358 --> 00:07:24.408
But this is actually what JSX
is getting transpiled into,

112
00:07:24.408 --> 00:07:27.280
it's getting transpiled
into createElement calls.

113
00:07:27.280 --> 00:07:30.160
One thing I'm gonna call out
here is I capitalized App.

114
00:07:31.850 --> 00:07:34.103
That's actually critical that you do that.

115
00:07:34.103 --> 00:07:36.824
When we get into specifically using JSX,

116
00:07:36.824 --> 00:07:40.340
you have to capitalize
the naming of components.

117
00:07:40.340 --> 00:07:42.216
That's actually not even
just like a good idea.

118
00:07:42.216 --> 00:07:45.710
It's actually required by React
that you capitalize that.

119
00:07:45.710 --> 00:07:49.276
It's gonna assume anything that's
capitalized is something that you created,

120
00:07:49.276 --> 00:07:52.429
and it's gonna assume anything that
you've lower-cased like div to be

121
00:07:52.429 --> 00:07:55.570
something that's like an actual
name of an HTML element, right?

122
00:07:55.570 --> 00:08:00.983
So if I came in here and
put x-custom-element like that,

123
00:08:00.983 --> 00:08:04.070
and then I refresh over here.

124
00:08:04.070 --> 00:08:07.757
Notice here, it's actually going to
call that x-custom-element, right?

125
00:08:07.757 --> 00:08:10.330
So it's actually sensitive to
what you call those things.

126
00:08:13.882 --> 00:08:17.171
In other words, you can use React web
components together if you want to.

127
00:08:17.171 --> 00:08:19.678
I am 100% not talking about that today,

128
00:08:19.678 --> 00:08:23.493
but I just throw it out there that
you could do that if you want it to.

129
00:08:23.493 --> 00:08:31.022
&gt;&gt; How do you know it's that particular
div that you're anchoring it to?

130
00:08:31.022 --> 00:08:34.317
&gt;&gt; How do I know which particular
div that I'm anchoring it to?

131
00:08:34.317 --> 00:08:38.948
So this one here like Id root here,
I do that here that by

132
00:08:38.948 --> 00:08:43.590
getting the correct element,
getElementById root,

