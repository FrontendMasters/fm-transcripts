WEBVTT

1
00:00:00.470 --> 00:00:02.355
Let's go on to class properties.

2
00:00:04.727 --> 00:00:09.241
Now we're gonna do what everyone loves
to do and we're gonna modify our Babel

3
00:00:09.241 --> 00:00:13.143
configs, so first thing I'll pop
up your terminal really quick.

4
00:00:15.840 --> 00:00:23.425
I'm gonna say npm install -D

5
00:00:23.425 --> 00:00:33.425
@babble/plugin-proposal-class-properties@-
7.13.0

6
00:00:41.334 --> 00:00:51.958
@babbel/preset-env@7.13.5

7
00:00:51.958 --> 00:01:01.958
@babel/estlint/parser@7.13.4.

8
00:01:04.105 --> 00:01:08.373
We're gonna do something with our class

9
00:01:08.373 --> 00:01:12.898
component to make it
a lot easier to write.

10
00:01:12.898 --> 00:01:19.000
Believe me,
it's kind of annoying the setup,

11
00:01:19.000 --> 00:01:26.332
what did I do wrong here,
spelled the wrong properties.

12
00:01:39.055 --> 00:01:42.918
Okay, so now we're gonna go set it up so
that we can actually instead of saying,

13
00:01:42.918 --> 00:01:44.547
let's go into our details.js.

14
00:01:46.921 --> 00:01:50.450
Instead of having to do constructors and

15
00:01:50.450 --> 00:01:55.428
like if you can imagine like
having a lot of state and one,

16
00:01:55.428 --> 00:01:59.060
like imagine if we were actually saying,

17
00:01:59.060 --> 00:02:03.139
in fact we probably
should name animal breed.

18
00:02:06.084 --> 00:02:12.192
So on and so forth, right, it's annoying
to have to do a constructor just for that.

19
00:02:12.192 --> 00:02:15.223
So I'm gonna show you
a really cool shortcut,

20
00:02:15.223 --> 00:02:18.808
we can actually just make it so
it just looks like this.

21
00:02:27.599 --> 00:02:28.890
Right, pretty sure.

22
00:02:33.876 --> 00:02:38.481
This reads a lot better, right,
this is a little space around it maybe.

23
00:02:38.481 --> 00:02:42.010
But then we can look at the top
of our components like okay,

24
00:02:42.010 --> 00:02:44.828
there's the default
state of our component.

25
00:02:44.828 --> 00:02:52.156
Technically according to the TC39,
the body that defines JavaScript.

26
00:02:52.156 --> 00:02:57.353
This is data java script but
not everything supports it,

27
00:02:57.353 --> 00:03:04.838
yes we have to actually introduce a bubble
transform that will handle that for us.

28
00:03:04.838 --> 00:03:07.415
In fact, I think there's
an error here from yeah, essence,

29
00:03:07.415 --> 00:03:09.116
I don't know what to do with that right?

30
00:03:09.116 --> 00:03:14.540
Which is why we installed
that bubble esl parser, okay,

31
00:03:14.540 --> 00:03:19.971
so let's go make that work,
let's go into our Babel RC,

32
00:03:23.813 --> 00:03:30.135
So, we have this and
then underneath this array,

33
00:03:30.135 --> 00:03:37.669
we're gonna add another
preset of at babble/preset-m.

34
00:03:37.669 --> 00:03:41.403
And underneath that,

35
00:03:41.403 --> 00:03:46.119
we're gonna add a plugins,

36
00:03:46.119 --> 00:03:49.460
and that's gonna be

37
00:03:49.460 --> 00:03:57.725
@Babel/plugin-proposalclassproperties.

38
00:04:08.126 --> 00:04:11.261
So, we added the preset end
underneath preset react,

39
00:04:11.261 --> 00:04:15.982
this is what transpires like futuristic
JavaScript to two previous JavaScript.

40
00:04:15.982 --> 00:04:19.622
This is the one that looks at like
the browser's list, right, and

41
00:04:19.622 --> 00:04:22.289
then here we're installing
a specific plugin.

42
00:04:22.289 --> 00:04:26.458
So, a preset is a group of plugins,
a plugin is just one transform so,

43
00:04:26.458 --> 00:04:29.444
that's probably something
good to keep in mind.

44
00:04:29.444 --> 00:04:33.691
Here we're introducing a brand new plugin,
which is the class properties,

45
00:04:33.691 --> 00:04:37.301
one that allows us to do that specific
thing that we were looking at

46
00:04:40.179 --> 00:04:44.010
Okay, and then let's go D upset,
estlint, and

47
00:04:44.010 --> 00:04:49.244
what we're gonna do is we're just
going to add somewhere in here,

48
00:04:49.244 --> 00:04:54.290
maybe above the parser options,
we're going to just introduce

49
00:04:54.290 --> 00:05:00.095
a new parser which is
@Babel/estlint-parser, so, line 15 there.

50
00:05:00.095 --> 00:05:03.213
This is going to tell estlint, hey,

51
00:05:03.213 --> 00:05:08.455
before you read any of the code,
run it through Babbel first.

52
00:05:08.455 --> 00:05:12.964
Up until this point, estlint was smart
enough to keep up with us it was,

53
00:05:12.964 --> 00:05:15.911
it has its own Babbel
config understands JSX.

54
00:05:15.911 --> 00:05:19.194
But once you get into really
recent JavaScript features,

55
00:05:19.194 --> 00:05:20.601
it kind of loses its way so

56
00:05:20.601 --> 00:05:24.962
you can have to say like, okay, maybe
use my babbel config instead of yours.

57
00:05:30.289 --> 00:05:34.935
Okay, so now if we go back into search
params, sorry into results, no details.

58
00:05:36.867 --> 00:05:41.275
Now it's like okay, I got that, notice
that there's no more error on line 5 here.

59
00:05:46.248 --> 00:05:48.071
And so now, that's when we got to
take out all that constructor code.

60
00:05:50.618 --> 00:05:54.156
So, I'm a huge fan of this I do it every
time that I'm writing class components.

61
00:05:54.156 --> 00:05:57.017
If you're not writing class components,
and it's not that big of a deal.

62
00:05:57.017 --> 00:06:00.440
But if you're writing class components,
it's a really nice thing to have.

