WEBVTT

1
00:00:00.240 --> 00:00:01.920
Okay, so we just talked about prettier,

2
00:00:01.920 --> 00:00:05.140
prettier is the tool allows you to format
your code and make it look really nice.

3
00:00:05.140 --> 00:00:09.635
I'm a big fan of prettier, the next
thing we're gonna work on is ESLint, so

4
00:00:09.635 --> 00:00:12.250
ESLint is another one
of my favorite tools.

5
00:00:12.250 --> 00:00:16.682
It allows you to have opinions
of enforced in your code

6
00:00:16.682 --> 00:00:20.729
whereas produce much
more like syntactically.

7
00:00:20.729 --> 00:00:24.100
It's like putting, commas in
the right places and single quotes or

8
00:00:24.100 --> 00:00:26.020
double quotes and spacing.

9
00:00:26.020 --> 00:00:28.575
ESLint is going to be kind of more
higher level more opinionated.

10
00:00:28.575 --> 00:00:32.300
It's going to be like, hey,
we don't use arrow functions here or

11
00:00:32.300 --> 00:00:34.220
we only use single quotes.

12
00:00:34.220 --> 00:00:36.463
In these kinds of contexts or
those kind of things,

13
00:00:36.463 --> 00:00:39.080
things we are enforcing like
your opinion on someone else.

14
00:00:40.080 --> 00:00:43.200
Now don't get me wrong,
this overlap there, right?

15
00:00:43.200 --> 00:00:45.588
ESLint and
prettier can both worry about spacing,

16
00:00:45.588 --> 00:00:48.207
you definitely only want
prettier to worry about that.

17
00:00:48.207 --> 00:00:50.760
And ESLint to worry about
more opinionated things.

18
00:00:50.760 --> 00:00:54.433
But for, I'm going to teach you
how to set them up together so

19
00:00:54.433 --> 00:00:57.870
they kind of work together, in a good way.

20
00:00:57.870 --> 00:01:03.370
So the first thing I want you to do,

21
00:01:03.370 --> 00:01:06.214
cuz I want you to,

22
00:01:06.214 --> 00:01:11.336
come in here to your terminal and

23
00:01:11.336 --> 00:01:15.889
we're gonna say npm install

24
00:01:15.889 --> 00:01:20.647
-D eslint@7.18.0.

25
00:01:20.647 --> 00:01:21.426
And

26
00:01:21.426 --> 00:01:30.781
eslint-config-prettier@8.1.0

27
00:01:30.781 --> 00:01:35.200
sorry 8.1.0.

28
00:01:37.157 --> 00:01:38.105
Okay.

29
00:01:41.428 --> 00:01:47.760
So this is gonna be a pretty Anya pin
unopinionated version of eslint config.

30
00:01:47.760 --> 00:01:50.162
You can make ESLint very
opinionated In fact,

31
00:01:50.162 --> 00:01:53.928
in previous versions of this course
actually taught the Airbnb config.

32
00:01:53.928 --> 00:01:56.640
Adopt the standard config,
there's several of them.

33
00:01:57.740 --> 00:02:01.921
In this one, I'm just gonna actually make
it so it's just, eslint recommended.

34
00:02:01.921 --> 00:02:06.840
Which is a pretty, lacks but still
really good configuration for es lint.

35
00:02:08.720 --> 00:02:12.808
So, once you have those installed,
I want you to go create a file.

36
00:02:14.604 --> 00:02:21.143
Here, called ESLint, RC.Jason.

37
00:02:24.590 --> 00:02:27.740
That's gonna be right next
to your prettier RC as well.

38
00:02:32.616 --> 00:02:37.688
Okay, so have both of those,
make sure it's .eslintrc.json.

39
00:02:37.688 --> 00:02:39.109
It's very significantly you call it so

40
00:02:39.109 --> 00:02:41.099
it doesn't work if you don't
call it the right thing.

41
00:02:42.944 --> 00:02:44.180
Okay?

42
00:02:44.180 --> 00:02:48.629
Opening curly braces and
we're going to have it to extends,

43
00:02:48.629 --> 00:02:57.412
there's gonna be an array and you're
gonna have eslint, Colon recommended.

44
00:02:59.368 --> 00:03:01.635
Okay, and then prettier.

45
00:03:04.144 --> 00:03:07.905
So the order here is significant,
you need to put the first one as eslint

46
00:03:07.905 --> 00:03:10.990
recommended, this is going to
turn on a bunch of options.

47
00:03:10.990 --> 00:03:13.691
And this is also going to turn
on like whitespace rules, and

48
00:03:13.691 --> 00:03:17.330
we need to turn off those rules and
that's what the prettier config does.

49
00:03:17.330 --> 00:03:20.058
The prettier config doesn't
add any rules or doesn't know,

50
00:03:20.058 --> 00:03:21.850
turn on any new features of the essence.

51
00:03:21.850 --> 00:03:26.120
It actually just turns off features
that it checks for, right?

52
00:03:26.120 --> 00:03:30.033
So that's why we have the prettier config,
okay?

53
00:03:30.033 --> 00:03:33.268
We're not going to have any plugins, so

54
00:03:33.268 --> 00:03:37.370
you can put at empty for
the moment parser options.

55
00:03:39.200 --> 00:03:43.301
We're going to be working with ECMA,
version rather ECMA.

56
00:03:47.229 --> 00:03:55.253
EcmaVersion, and
we're gonna do 2021 because it's 2021,

57
00:03:55.253 --> 00:03:59.480
we're gonna do source type module.

58
00:03:59.480 --> 00:04:03.430
This is just telling you like am I doing
common js, am I doing like browser stuff?

59
00:04:03.430 --> 00:04:07.030
We're going to be using ES modules,
so that's where that comes from.

60
00:04:07.030 --> 00:04:11.486
They want to have ECMO features and we're
gonna be using JSX here in just a second.

61
00:04:11.486 --> 00:04:14.170
You have to say JSX true,
just so it expects that.

62
00:04:15.560 --> 00:04:18.710
And then underneath that we're going to
have what environments we're working in.

63
00:04:18.710 --> 00:04:24.546
So m colon Object,
we're gonna be using es16.

64
00:04:24.546 --> 00:04:27.093
So this is could be like map or
weak map or

65
00:04:27.093 --> 00:04:31.043
set like those are like those
Globals that it's expecting.

66
00:04:32.298 --> 00:04:33.959
So that's gonna be true

67
00:04:39.294 --> 00:04:43.683
When a browser so this is gonna be
things like window and fetch and

68
00:04:43.683 --> 00:04:46.540
anything that you can refer to globally.

69
00:04:47.770 --> 00:04:52.100
So true for that, and then eventually
we'll be using some node stuff as well.

70
00:04:52.100 --> 00:04:56.888
So go ahead and set that to true as well,
that'll be things like process and

71
00:04:56.888 --> 00:04:59.170
global and other things like that.

72
00:05:01.430 --> 00:05:06.380
Okay, so this should be everything that
you need to get started with estlint.

73
00:05:08.670 --> 00:05:12.478
So again, I'm just doing eslint
recommended, but you could also

74
00:05:12.478 --> 00:05:17.380
go install the Airbnb config,
in which case you'd look like this, right?

75
00:05:17.380 --> 00:05:21.182
Or you could do standard, you'd have to
go install those plugins to this one or

76
00:05:21.182 --> 00:05:22.350
presets.

77
00:05:22.350 --> 00:05:27.280
But for us, for now, we're just
gonna do estlint colon recommended.

78
00:05:27.280 --> 00:05:31.672
And I just like the less, opinionated take
on this now because for the most part,

79
00:05:31.672 --> 00:05:34.660
eslint introduces friction
to your process, right?

80
00:05:34.660 --> 00:05:38.070
You're writing code and it's making
you stop and rethink your code.

81
00:05:38.070 --> 00:05:39.728
And unless it's truly necessary,

82
00:05:39.728 --> 00:05:42.500
I like to let developers write
code how they think about it.

83
00:05:44.370 --> 00:05:46.300
So this is a less opinionated set,

84
00:05:46.300 --> 00:05:50.305
it's gonna have things like you
created a variable that you never use.

85
00:05:50.305 --> 00:05:53.949
Or you're referencing a variable
that you never created or,

86
00:05:53.949 --> 00:05:56.550
here's a syntax error in some capacity.

87
00:05:56.550 --> 00:05:57.764
There's a bunch of like,

88
00:05:57.764 --> 00:06:00.480
just good idea things here that
are going to prevent bugs.

89
00:06:00.480 --> 00:06:01.956
So I recommend that.

90
00:06:03.963 --> 00:06:07.768
Okay, we're going to
package that JSON now, and

91
00:06:07.768 --> 00:06:10.950
we're going to add another script here.

92
00:06:14.120 --> 00:06:19.202
And this script is gonna say lint,
and whenever we call lint,

93
00:06:19.202 --> 00:06:22.930
we're gonna say eslint and we're going to.

94
00:06:24.700 --> 00:06:26.322
You can actually even copy and paste this,

95
00:06:26.322 --> 00:06:28.229
it's gonna be the same one as we did for
prettier.

96
00:06:30.038 --> 00:06:34.114
And then you can say --quiet, the reason
why we do quiet is eslint can be,

97
00:06:34.114 --> 00:06:36.330
has a lot of stuff that
can come out of it.

98
00:06:36.330 --> 00:06:38.036
And for the most part,
we don't need all of it,

99
00:06:38.036 --> 00:06:39.624
we just want to know if something's wrong.

100
00:06:41.533 --> 00:06:44.985
So that's what the quit does, but if you
want to see all that, just remove that and

101
00:06:44.985 --> 00:06:46.704
it'll show you all the verbose output.

102
00:06:49.700 --> 00:06:53.312
So let's go ahead and run it, make sure
it works, ao if you say npm run lint,

103
00:06:53.312 --> 00:06:54.901
you should see a bunch of errors.

104
00:06:57.519 --> 00:07:02.240
So you can see here all this reactors is
not defined ReactDOM is not undefined.

105
00:07:02.240 --> 00:07:04.560
So if we head over to our
source directory here and

106
00:07:04.560 --> 00:07:07.003
look at app.js you can
see it's underlining now.

107
00:07:07.003 --> 00:07:10.507
And I'll show you how to get that in
your editor here in just a second, but

108
00:07:10.507 --> 00:07:13.280
it's like, hey,
I don't actually know what React is.

109
00:07:13.280 --> 00:07:16.120
You're referencing this thing called
React and I don't know what it is.

110
00:07:16.120 --> 00:07:19.665
It's okay because we put it in
there via the script tag here, but

111
00:07:19.665 --> 00:07:22.260
it doesn't know it's there.

112
00:07:22.260 --> 00:07:25.101
Now, if you need to ignore that,

113
00:07:25.101 --> 00:07:30.584
what you can do here is you can at
the top, put this global react.

114
00:07:30.584 --> 00:07:35.520
And I was like, okay, you're expecting a
global call to react, I'm good with that.

115
00:07:35.520 --> 00:07:38.370
Same thing with react DOMm and
if I said that,

116
00:07:38.370 --> 00:07:43.320
notice that there's no errors and if I
came back here and do run lint No errors.

117
00:07:44.890 --> 00:07:47.095
Now we'll fix this momentarily, so
I'm just gonna take this out, but

118
00:07:47.095 --> 00:07:48.071
that's how you would do that.

119
00:07:50.610 --> 00:07:55.470
So let's install the extension for
VS code now, if you click here, and

120
00:07:55.470 --> 00:07:56.773
search of eslint.

121
00:07:56.773 --> 00:08:00.383
This top one here with the star,
the eslint dbaeumer,

122
00:08:00.383 --> 00:08:03.300
I don't know how you say it, Dirk Baeumer.

123
00:08:04.760 --> 00:08:09.082
Installed that one, and
then that will just integrate nicely,

124
00:08:09.082 --> 00:08:12.540
you might have to restart your VS code.

125
00:08:12.540 --> 00:08:16.073
But now you'll start seeing
these underlines, in this case,

126
00:08:16.073 --> 00:08:18.150
we're violating the no undefined.

127
00:08:19.940 --> 00:08:24.620
But same thing here, if I say like
const x equals five, you'll see that

128
00:08:24.620 --> 00:08:30.180
we'll get that hey, yes, Lin says
oops He can't do unused variables.

129
00:08:30.180 --> 00:08:33.317
I think you can even click on this and
I click Open,

130
00:08:33.317 --> 00:08:36.704
this will actually take me
to the ESM documentation.

131
00:08:36.704 --> 00:08:39.930
Where it says like, okay, here is
exactly the rule that you're violating.

132
00:08:41.310 --> 00:08:44.636
So that's the essence, we'll keep
expanding upon our configuration here but

133
00:08:44.636 --> 00:08:46.580
this is a good place for
us to get started with.

