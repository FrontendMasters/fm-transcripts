WEBVTT

1
00:00:00.060 --> 00:00:02.470
So now we have this theme.

2
00:00:02.470 --> 00:00:05.520
Let's go into search provider,
or sorry, search provider.

3
00:00:05.520 --> 00:00:10.456
We're gonna go into SearchParams and
we're gonna

4
00:00:10.456 --> 00:00:15.745
make SearchParams be able to
change what the theme is.

5
00:00:17.655 --> 00:00:20.448
Our theme is only gonna be used on
buttons because I'm a designer and

6
00:00:20.448 --> 00:00:21.725
I thought that was a good idea.

7
00:00:23.405 --> 00:00:25.858
That was sarcastic,
I'm definitely not a designer,

8
00:00:25.858 --> 00:00:29.275
as you can see by all the things
I have designed for you.

9
00:00:29.275 --> 00:00:33.545
So at the top here, SearchParams,
useState, useEffect and useContext.

10
00:00:36.710 --> 00:00:38.716
Nice little hook, that's useful for us.

11
00:00:38.716 --> 00:00:44.766
And then here we're going to import

12
00:00:44.766 --> 00:00:51.629
ThemeContext from ./ThemeContext.

13
00:00:51.629 --> 00:00:55.770
Now, here's the fun part.

14
00:00:55.770 --> 00:01:01.314
We can just say const [useTheme]

15
00:01:01.314 --> 00:01:07.056
= useContext(ThemeContext).

16
00:01:07.056 --> 00:01:08.090
And lo and behold,

17
00:01:08.090 --> 00:01:12.299
I now have access to the theme that's
available everywhere my application.

18
00:01:12.299 --> 00:01:15.019
I'm just able to yank it out of context.

19
00:01:15.019 --> 00:01:17.809
This didn't come from props, this didn't
come from state or anything like that.

20
00:01:17.809 --> 00:01:22.373
It came from the context.

21
00:01:22.373 --> 00:01:28.579
So now down here on the button,

22
00:01:28.579 --> 00:01:37.190
I can say style = backgroundColor theme.

23
00:01:39.310 --> 00:01:40.838
So this might look interesting to you,

24
00:01:40.838 --> 00:01:42.950
notice that these are two
different colors.

25
00:01:42.950 --> 00:01:44.341
Have one curly brace,

26
00:01:44.341 --> 00:01:48.881
that's the curly brace like this where
it's like a signifying to react or

27
00:01:48.881 --> 00:01:52.780
to JSX I'm about to give you
a JavaScript expression, right?

28
00:01:52.780 --> 00:01:56.221
And then inside of that I have an object.

29
00:01:56.221 --> 00:01:59.350
That's what the double curly braces,
it's actually two separate sets.

30
00:01:59.350 --> 00:02:01.557
It's not that they mean anything together.

31
00:02:01.557 --> 00:02:03.710
And then style we just give
it a style object, right?

32
00:02:03.710 --> 00:02:06.389
So for background color I could do even

33
00:02:06.389 --> 00:02:10.165
just color if I wanted to
change the color of the text.

34
00:02:10.165 --> 00:02:12.569
Anything you would put like
in a string right, for HTML,

35
00:02:12.569 --> 00:02:13.930
this just comes in as an object.

36
00:02:17.370 --> 00:02:22.636
Okay, and
now if I head back over to my page

37
00:02:22.636 --> 00:02:28.660
notice that the button now is what,
dark blue.

38
00:02:28.660 --> 00:02:32.148
Or I can come in back to App.js.

39
00:02:32.148 --> 00:02:38.652
And if I change this to be, I don't know,
what's a different color, pink.

40
00:02:38.652 --> 00:02:40.142
Now it's pink.

41
00:02:43.350 --> 00:02:45.789
So does that make sense for
what context is?

42
00:02:45.789 --> 00:02:49.855
Now there's this universally available
context that I can access anywhere

43
00:02:49.855 --> 00:02:50.816
my application.

44
00:02:50.816 --> 00:02:54.304
So is the returned value
from ThemeContext or

45
00:02:54.304 --> 00:02:57.805
from context in general,
the same as hooks?

46
00:02:57.805 --> 00:03:00.200
And the answer is not necessarily.

47
00:03:00.200 --> 00:03:01.946
So let's go back and look at app.js.

48
00:03:01.946 --> 00:03:05.100
What am I putting into
the theme provider here?

49
00:03:06.290 --> 00:03:08.129
Theme, what is theme?

50
00:03:08.129 --> 00:03:10.550
Theme as what's returned from useState.

51
00:03:10.550 --> 00:03:13.620
So it's literally what's coming out
useState because I put it there.

52
00:03:14.690 --> 00:03:21.056
But let's say I had const theme = green.

53
00:03:21.056 --> 00:03:24.860
And I put it in there,
it would be green, right?

54
00:03:24.860 --> 00:03:27.439
It's basically you can think of
context basically as like a wormhole

55
00:03:27.439 --> 00:03:29.807
that just connects two different
points in your application.

56
00:03:29.807 --> 00:03:33.342
Whatever you throw in one side,
it's gonna come out the other side.

57
00:03:33.342 --> 00:03:35.208
So whatever you put in is
what you're gonna get out.

58
00:03:35.208 --> 00:03:39.130
Does that answer your question?

59
00:03:39.130 --> 00:03:43.656
&gt;&gt; And then probably it helps them a
second part of that question would be when

60
00:03:43.656 --> 00:03:48.560
you actually invoke useContext in
searchparams.js, what does that return?

61
00:03:50.210 --> 00:03:50.860
&gt;&gt; Whatever you put in.

62
00:03:52.720 --> 00:03:57.204
Right like so, the let's go back to
look at the, I'll just split it so

63
00:03:57.204 --> 00:03:59.410
you can look at both the same time.

64
00:04:01.890 --> 00:04:06.052
Whatever you put in here, this is app.js,

65
00:04:06.052 --> 00:04:12.490
is going to come out where is,
I'm in SearchParams, right?

66
00:04:12.490 --> 00:04:16.590
Yeah, whatever I put in here,

67
00:04:16.590 --> 00:04:21.020
comes out here, or here rather.

68
00:04:21.020 --> 00:04:21.690
&gt;&gt; Thank you.

69
00:04:21.690 --> 00:04:25.400
&gt;&gt; Yep, because it's a hook on this side,
it's gonna be a hook on this side.

70
00:04:25.400 --> 00:04:28.738
But if it was an object on one side
it'd be an object on the other side.

71
00:04:31.131 --> 00:04:37.430
Good question, another question asks
can you have multiple contexts?

72
00:04:37.430 --> 00:04:43.513
Absolutely, you can go in,
let's just look at app.js.

73
00:04:43.513 --> 00:04:45.820
I could have multiple
layers of context here.

74
00:04:45.820 --> 00:04:50.631
I could have one context that encapsulates
a whole thing kind of like Redux, right.

75
00:04:50.631 --> 00:04:55.015
You actually already have some context in
your application because react router is

76
00:04:55.015 --> 00:04:56.590
using context extensively.

77
00:04:57.920 --> 00:05:01.630
That's how links and stuff work, because
it's all reading stuff off context.

78
00:05:03.990 --> 00:05:07.608
Another thing that you could know but
you don't really need to,

79
00:05:07.608 --> 00:05:09.696
I can have multiple theme contexts.

80
00:05:09.696 --> 00:05:13.351
So if I wrapped details on one of
the SearchParams in a different one,

81
00:05:13.351 --> 00:05:17.266
I could give one pink and one orange,
right, and it would read for those.

82
00:05:17.266 --> 00:05:18.571
Or I can even just do this.

83
00:05:18.571 --> 00:05:24.635
So, we're in SearchParams, can I do this.

84
00:05:30.240 --> 00:05:35.160
And all right, so what is the color of my

85
00:05:35.160 --> 00:05:39.050
button gonna be when I go back?

86
00:05:39.050 --> 00:05:42.195
Is it gonna be dark blue or
is it gonna be green?

87
00:05:44.050 --> 00:05:47.090
Technically, they look like
they both apply, right?

88
00:05:47.090 --> 00:05:50.795
It's gonna pick green and
the reason why green is closer,

89
00:05:50.795 --> 00:05:53.070
closer in like the rendering tree.

90
00:05:54.240 --> 00:05:58.060
I have never used that in production,
it's a nifty party trick.

91
00:05:58.060 --> 00:06:01.831
I guess I go to dumb parties,.

92
00:06:01.831 --> 00:06:06.590
But you can have multiple layers there,
infinite layers I suppose.

93
00:06:08.120 --> 00:06:10.081
Yeah, file that under never used.

94
00:06:10.081 --> 00:06:12.000
[LAUGH] That's what I'm trying to say.

95
00:06:16.542 --> 00:06:21.760
Okay, so I wanna show you how to use,
cuz this is a hook.

96
00:06:22.780 --> 00:06:28.890
Which makes these very pleasant
to use if we go back to details.

97
00:06:32.361 --> 00:06:34.721
Not details, to SearchParams.

98
00:06:36.112 --> 00:06:38.490
This is the hook,
this makes it very easy to use.

99
00:06:38.490 --> 00:06:41.805
It's a little less convenient
to use inside of a component,

100
00:06:41.805 --> 00:06:43.620
like a class component.

101
00:06:43.620 --> 00:06:45.000
But let's go ahead and see how you do it.

102
00:06:46.490 --> 00:06:49.550
So let's go back to details.

103
00:06:51.500 --> 00:06:56.800
We will want to make our other
button respect the color, right?

104
00:06:56.800 --> 00:07:00.121
So if I go to Luna,
I notice her button is still red, right?

105
00:07:00.121 --> 00:07:02.690
I wanna make them both
blue at the same time.

106
00:07:04.200 --> 00:07:04.970
So how would you do that?

107
00:07:06.070 --> 00:07:12.084
Well, you would come in here and
you have to first import the top, import.

108
00:07:15.742 --> 00:07:22.828
ThemeContext from ./ThemeContext.

109
00:07:26.390 --> 00:07:31.414
Then down here inside of your button,
this one,

110
00:07:35.330 --> 00:07:38.257
It's gonna get a little strange,
but stick with me for a second.

111
00:07:38.257 --> 00:07:41.421
You're gonna say ThemeContext.Consumer.

112
00:07:43.756 --> 00:07:48.570
Okay, inside of that, you basically
have to make a new function, right?

113
00:07:48.570 --> 00:07:51.760
Remember, functions are components.

114
00:07:51.760 --> 00:07:58.169
So I'm gonna make a new function in
here that's gonna take in the theme.

115
00:08:04.474 --> 00:08:07.950
Okay, then that's going
to return a new button.

116
00:08:10.241 --> 00:08:12.881
And actually it's just gonna be this
button, so let's just move this up.

117
00:08:18.380 --> 00:08:23.272
Okay, and now I have this theme available
to be used inside of this like little

118
00:08:23.272 --> 00:08:28.560
ThemeContext.Consumer This might look

119
00:08:28.560 --> 00:08:33.584
a little strange,
you could also have made this ThemeHook,

120
00:08:37.031 --> 00:08:43.020
Right, and then here you're gonna say,
style = same thing that we did last time.

121
00:08:43.020 --> 00:08:46.200
backgroundColor themeHook(0),

122
00:08:46.200 --> 00:08:52.300
right because this is an array and
we want to get the first thing.

123
00:08:52.300 --> 00:08:58.473
But if I just wrap this in square
brackets and call it theme,

124
00:08:58.473 --> 00:09:03.052
then I can just access that automatically.

125
00:09:06.115 --> 00:09:08.910
So like I said, this is a mess, right?

126
00:09:08.910 --> 00:09:11.653
I feel like this is kind of difficult for
my brain to parse.

127
00:09:11.653 --> 00:09:13.920
I kind of have to look at as like,
okay, this is coming from here.

128
00:09:13.920 --> 00:09:15.890
It's context, blah, blah, blah.

129
00:09:15.890 --> 00:09:17.601
Whereas the use context,
very straightforward,

130
00:09:17.601 --> 00:09:20.280
this is coming out of context I'm getting
a hook out of it, blah, blah, blah.

131
00:09:21.850 --> 00:09:26.656
But this is how you do it with class
components so less convenient for sure.

132
00:09:26.656 --> 00:09:28.382
But let's go make sure it works.

133
00:09:28.382 --> 00:09:31.750
So if I click into Luna, you can see
here and now Luna's button is blue.

134
00:09:32.790 --> 00:09:38.625
Let's head into SearchParams.

135
00:09:38.625 --> 00:09:43.437
I wanna make it so here underneath a breed
I wanna add a theme selector where

136
00:09:43.437 --> 00:09:47.630
I can select all the themes of my
buttons in my web application cuz

137
00:09:47.630 --> 00:09:50.210
I'm good at making web applications.

138
00:09:51.940 --> 00:09:55.168
So that's what we're gonna do.

139
00:09:55.168 --> 00:10:01.180
We're gonna grab the setTheme
out of the context as well.

140
00:10:01.180 --> 00:10:04.218
We just did that here on line 14.

141
00:10:04.218 --> 00:10:05.841
And we're gonna make another drop down.

142
00:10:09.227 --> 00:10:14.228
Right there above the button,

143
00:10:14.228 --> 00:10:19.617
label html4=theme, html4.

144
00:10:25.931 --> 00:10:32.100
And we're gonna make a Select

145
00:10:32.100 --> 00:10:36.547
value = [theme].

146
00:10:36.547 --> 00:10:41.617
onChange = e setThem[

147
00:10:41.617 --> 00:10:46.690
e.target.value].

148
00:10:48.270 --> 00:10:51.698
Do the same thing again but for on blur.

149
00:10:57.021 --> 00:10:58.957
Okay, and then we're gonna
have four options in here or

150
00:10:58.957 --> 00:11:01.250
however many options
you wanna put in here.

151
00:11:01.250 --> 00:11:05.620
value = and we'll say, dark blue.

152
00:11:07.400 --> 00:11:10.110
As long as these are valid CSS colors,
you can put whatever you want here.

153
00:11:11.340 --> 00:11:15.440
Dark blue, so I'll make four of them.

154
00:11:17.500 --> 00:11:22.160
You can do, yeah,
whatever your favorite CSS colors are.

155
00:11:22.160 --> 00:11:24.931
Did you know that Peru is a color?

156
00:11:24.931 --> 00:11:32.090
It is, you're about to find out
what color of Peru is, chartreuse.

157
00:11:32.090 --> 00:11:36.570
My favorite trivia question is do
you know what color chartreuse is?

158
00:11:36.570 --> 00:11:39.060
And if you ask me right now,
I honestly do not remember.

159
00:11:39.060 --> 00:11:43.569
I can't even pass my own trivia questions.

160
00:11:43.569 --> 00:11:48.852
And another favorite of
everyone is medium orchid,

161
00:11:48.852 --> 00:11:53.902
not dark orchid,
not light orchid, just right.

162
00:11:57.349 --> 00:11:59.760
Medium orchid.

163
00:12:03.210 --> 00:12:05.244
So nothing here you haven't seen before,

164
00:12:05.244 --> 00:12:08.230
the only difference is is
this is using context.

165
00:12:08.230 --> 00:12:10.650
So now what we would expect
is I can change the theme.

166
00:12:10.650 --> 00:12:12.708
I'm gonna change the button,
that's fine on the same page.

167
00:12:12.708 --> 00:12:14.703
I could have done that with useState but

168
00:12:14.703 --> 00:12:18.880
I'm also gonna change the color of the
button on Luna's page or the details page.

169
00:12:19.940 --> 00:12:25.142
So refresh, dark blue, change that to
Peru, it's a lovely shade of Peru.

170
00:12:27.107 --> 00:12:29.603
But now, if I click into Luna,

171
00:12:29.603 --> 00:12:34.510
notice that her button changed
colors as well, why is that?

172
00:12:36.120 --> 00:12:39.840
Well, let's think about where
that state actually lives.

173
00:12:39.840 --> 00:12:43.740
Go back to app.js, where's the theme?

174
00:12:44.740 --> 00:12:47.868
The theme is here,
it lives above the SearchParans.

175
00:12:47.868 --> 00:12:51.549
So even when it gets unrendered,
it gets unrendered from here.

176
00:12:52.770 --> 00:12:54.590
This state never went away.

177
00:12:54.590 --> 00:12:58.210
So it's still set to whatever it
was set to here in SearchParams.

178
00:12:58.210 --> 00:13:00.190
And it's doing that through context.

179
00:13:00.190 --> 00:13:03.899
Despite the fact that there's no
explicit connection between this and

180
00:13:03.899 --> 00:13:08.372
SearchParams, it's using that wormhole of
context to go from one place to another.

181
00:13:12.491 --> 00:13:15.417
Because keep in mind every time
that I blow away SearchParams,

182
00:13:15.417 --> 00:13:16.690
let's actually see that.

183
00:13:18.570 --> 00:13:22.910
If I change this to dog, and
then I click on Search whatever and

184
00:13:22.910 --> 00:13:26.430
I get new dogs, right, so
these are all dogs now.

185
00:13:27.540 --> 00:13:32.045
If I click on Angeline here and
then if I go back to the homepage,

186
00:13:32.045 --> 00:13:35.450
is dogs still going to be
selected in my select?

187
00:13:37.110 --> 00:13:40.500
No, because it lost all that state
because it got unrendered, right?

188
00:13:40.500 --> 00:13:44.328
Every time that I unrendered SearchParansm
all of its state disappears into

189
00:13:44.328 --> 00:13:46.555
the ether and
the user has to rerender that.

190
00:13:46.555 --> 00:13:49.789
So if I wanted to keep this
between page loads, I'd either

191
00:13:49.789 --> 00:13:54.091
have to keep track of them here in app or
I need to use context in some capacity.

192
00:13:54.091 --> 00:13:56.889
I would probably just use a state here,
and

193
00:13:56.889 --> 00:13:59.860
then I would just pass
it into SearchParams.

