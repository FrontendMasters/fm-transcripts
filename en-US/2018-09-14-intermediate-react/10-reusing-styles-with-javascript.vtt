WEBVTT

1
00:00:00.440 --> 00:00:04.629
&gt;&gt; Brian Holt: I want to just kind of get
your brains thinking more about how we can

2
00:00:04.629 --> 00:00:07.615
utilize these emotion
components even more.

3
00:00:07.615 --> 00:00:12.598
I hope at your day jobs you think about
some sort of design system, right?

4
00:00:12.598 --> 00:00:16.723
Design systems are the future of CSS and
JavaScript.

5
00:00:16.723 --> 00:00:20.136
At LinkedIn, at Netflix,
at Salesforce, at Amazon,

6
00:00:20.136 --> 00:00:24.998
they have entire teams that all they do is
work on a design system that every other

7
00:00:24.998 --> 00:00:27.777
team in the entire company works on,
right?

8
00:00:27.777 --> 00:00:31.876
So I know some of them have emotion
libraries, so they just export.

9
00:00:31.876 --> 00:00:32.758
It's like, here's a button.

10
00:00:32.758 --> 00:00:35.594
Any time that you need a button,
here's a button that I've already made for

11
00:00:35.594 --> 00:00:36.137
you, right?

12
00:00:36.137 --> 00:00:39.722
So they kind of use these as
design systems themselves.

13
00:00:39.722 --> 00:00:42.404
And I'll kind of get you thinking
a little bit more about that.

14
00:00:42.404 --> 00:00:44.053
I want you to make a new file here.

15
00:00:44.053 --> 00:00:49.312
And I want you to call it colors.js,
lowercase c.

16
00:00:49.312 --> 00:00:54.954
It's not gonna be a component it's just
gonna be a thing that we export from here.

17
00:00:54.954 --> 00:00:58.426
So in here I'm just gonna
say export default,

18
00:01:01.456 --> 00:01:04.302
&gt;&gt; Brian Holt: And my primary color of my

19
00:01:04.302 --> 00:01:11.214
application that the designers
decided on is #ad343e,

20
00:01:11.214 --> 00:01:15.425
but this could be any color, right?

21
00:01:15.425 --> 00:01:19.487
You can put pink there,
you can put papaya whip or Peru,

22
00:01:19.487 --> 00:01:25.309
all of my favorite named colors.
&gt;&gt; Brian Holt: Okay,

23
00:01:25.309 --> 00:01:32.167
secondary color here is
going to be #f2af29.

24
00:01:32.167 --> 00:01:39.086
The dark color is going to be #333
which is a nice shade of black.

25
00:01:39.086 --> 00:01:43.835
This one right here, the second,
this is a yellow, this is a red.

26
00:01:43.835 --> 00:01:49.187
And then, light, we're just gonna make it,
you can put white here,

27
00:01:49.187 --> 00:01:52.839
or I just put #000, which is white, okay?

28
00:01:52.839 --> 00:01:56.567
So now I have all these
colors living in one place.

29
00:01:56.567 --> 00:01:58.239
I don't have to copy and
paste them anywhere.

30
00:01:58.239 --> 00:02:00.845
And let's say later you pull an Airbnb and

31
00:02:00.845 --> 00:02:04.660
you decide to switch all of your
colors to a new color scheme.

32
00:02:04.660 --> 00:02:06.358
You just update in one place and

33
00:02:06.358 --> 00:02:09.696
it updates magically throughout
your entire application.

34
00:02:09.696 --> 00:02:18.091
So what's compelling about this
now is I can go into my navbar and

35
00:02:18.091 --> 00:02:24.476
I can say import colors
from ./colors,okay?

36
00:02:24.476 --> 00:02:29.372
Instead of saying #333 right here,

37
00:02:29.372 --> 00:02:35.134
I can delete that and say ${colors.dark},

38
00:02:38.350 --> 00:02:40.092
&gt;&gt; Brian Holt: Okay?

39
00:02:40.092 --> 00:02:43.493
So keep in mind this is still
a template literal, right?

40
00:02:43.493 --> 00:02:48.210
So I can use the dollar sign curly
braces to insert java script expressions

41
00:02:48.210 --> 00:02:49.054
into my CSS.

42
00:02:49.054 --> 00:02:53.618
Magic, [LAUGH] pretty cool, right?

43
00:02:53.618 --> 00:02:56.478
So I go over here, everything
should look exactly the same but

44
00:02:56.478 --> 00:02:59.891
if I come over to my colors and say you
know what, this wasn't a good dark.

45
00:02:59.891 --> 00:03:07.139
Now I want dark to be, I don't know, 666,
that's probably a bad one, [LAUGH] 777.

46
00:03:07.139 --> 00:03:09.726
Look, it got a lot lighter, right?

47
00:03:09.726 --> 00:03:11.227
So I change in one place and

48
00:03:11.227 --> 00:03:15.194
you can imagine this can spread
throughout the entire application.

49
00:03:15.194 --> 00:03:18.203
I have no idea why I chose 666.

50
00:03:18.203 --> 00:03:19.838
Well, it's a good color of gray.

51
00:03:19.838 --> 00:03:28.012
[LAUGH] Whatever.
&gt;&gt; Brian Holt: Okay, so that's one thing.

52
00:03:28.012 --> 00:03:31.266
You can centralize all your
variables into one place,

53
00:03:31.266 --> 00:03:33.683
and then you can modify project-wide.

54
00:03:33.683 --> 00:03:37.921
And not only that, you can do things
like vertical rhythm, z-index scaling,

55
00:03:37.921 --> 00:03:42.301
all of these advanced kind of CSS design
system ideas that designers think about.

56
00:03:42.301 --> 00:03:47.642
You can kinda encapsulate your style
guide inside these JavaScript objects.

57
00:03:47.642 --> 00:03:52.166
Furthermore, I can pull in libraries
that will do lightened and

58
00:03:52.166 --> 00:03:56.608
darkened and all these kind of
advanced color manipulations or

59
00:03:56.608 --> 00:04:00.063
vertical rhythm libraries and
stuff like that.

60
00:04:00.063 --> 00:04:02.060
They can pull that in and
use that inside your JavaScript so

61
00:04:02.060 --> 00:04:03.382
that's why I'm a big fan of emotion.

62
00:04:03.382 --> 00:04:10.182
I think this is really compelling stuff.
&gt;&gt; Brian Holt: So

63
00:04:10.182 --> 00:04:13.413
let's even take this another step further.

64
00:04:13.413 --> 00:04:15.863
What happens if I wanted to style Link?

65
00:04:15.863 --> 00:04:18.986
Well that's different, right,
that's not header, right?

66
00:04:18.986 --> 00:04:22.184
Header was just a string
that I passed in there, so

67
00:04:22.184 --> 00:04:24.326
how do I style one of these links?

68
00:04:24.326 --> 00:04:30.207
Well, let's do that,
const NavLink = styled,

69
00:04:30.207 --> 00:04:34.277
and I just pass it in Link, right?

70
00:04:34.277 --> 00:04:36.704
And it'll figure out how
to style it on it's own.

71
00:04:36.704 --> 00:04:42.332
And then on that,
I wanna have it do it on hover, so

72
00:04:42.332 --> 00:04:48.372
I just say &amp; hover,
&gt;&gt; Brian Holt: text-decoration,

73
00:04:51.171 --> 00:04:51.869
&gt;&gt; Brian Holt: underline.

74
00:04:56.524 --> 00:04:57.046
&gt;&gt; Brian Holt: So this

75
00:04:57.046 --> 00:05:00.100
&amp; refers to whatever is in here, right?

76
00:05:00.100 --> 00:05:02.712
So on link hover, do this.

77
00:05:02.712 --> 00:05:09.387
And now I just change these two links.
&gt;&gt; Brian Holt: So I'll just do

78
00:05:09.387 --> 00:05:13.870
all four of them at once and say NavLink.
&gt;&gt; Brian Holt: So

79
00:05:13.870 --> 00:05:18.579
this one, that one, that one, and that
one, I changed those from link to NavLink.

80
00:05:18.579 --> 00:05:24.079
Save that, and now if I go over to
my library, if I cursor over it,

81
00:05:24.079 --> 00:05:30.366
it's now it's a NavLink.
&gt;&gt; Brian Holt: That's pretty cool,

82
00:05:30.366 --> 00:05:35.815
right?
&gt;&gt; Brian Holt: So

83
00:05:35.815 --> 00:05:37.411
that's how you do things like hover.

84
00:05:37.411 --> 00:05:40.593
You can do nested selectors,
all those kind of things.

85
00:05:40.593 --> 00:05:45.040
So if I wanted to say, I only wanna
target the spans inside of this, right?

86
00:05:45.040 --> 00:05:47.408
Cuz this one doesn't have a span,
but this one does.

87
00:05:47.408 --> 00:05:53.386
So I would say span, and
I want the color on this to be pink or

88
00:05:53.386 --> 00:05:57.300
something like that, I don't know.

89
00:05:57.300 --> 00:06:01.910
So now if I refresh it,
notice that the color, that should.

90
00:06:01.910 --> 00:06:07.158
It's still overriding to be this one,
because that's actually the link above it.

91
00:06:07.158 --> 00:06:13.556
But could I do,
&gt;&gt; Brian Holt: Go

92
00:06:13.556 --> 00:06:16.627
on display inline-block and

93
00:06:16.627 --> 00:06:21.671
border 1px solid red,
or something like that.

94
00:06:21.671 --> 00:06:25.003
So notice that this one has a solid
red box, but this one doesn't, right?

95
00:06:25.003 --> 00:06:29.787
So I can actually target things inside
of it as well and scope that to this.

96
00:06:29.787 --> 00:06:32.172
This is isn't going to affect
every spin on the page,

97
00:06:32.172 --> 00:06:34.943
this is only going to affect
spans inside of NavLink, right?

98
00:06:34.943 --> 00:06:36.798
So you can also do that nesting.

99
00:06:36.798 --> 00:06:41.757
What I'm trying to say is pretty much
anything you can with do LESS or Sass,

100
00:06:41.757 --> 00:06:46.023
right, can be accomplished here as well,
more or less, yeah.

