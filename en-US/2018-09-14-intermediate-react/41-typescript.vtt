WEBVTT

1
00:00:00.892 --> 00:00:04.100
&gt;&gt; Brian Holt: We are now going
to talk about TypeScript.

2
00:00:05.220 --> 00:00:08.970
Now, this is a whirlwind
tour of TypeScript.

3
00:00:08.970 --> 00:00:09.899
And to be honest with you,

4
00:00:09.899 --> 00:00:12.405
this is not really meant to be your
first introduction to TypeScript.

5
00:00:12.405 --> 00:00:15.043
I will try and
explain things as I go along but

6
00:00:15.043 --> 00:00:18.693
there are lots of great resources
on TypeScript in general.

7
00:00:18.693 --> 00:00:22.354
This is meant to be a how do
you use TypeScript with React?

8
00:00:22.354 --> 00:00:26.194
That's the point of what we're
gonna talk about right now, so

9
00:00:26.194 --> 00:00:29.612
I will not necessarily be
covering all the basics of it.

10
00:00:29.612 --> 00:00:32.267
An overview of what
TypeScript is meant to be.

11
00:00:32.267 --> 00:00:34.244
JavaScript is not type safe.

12
00:00:34.244 --> 00:00:35.294
It's a dynamic language.

13
00:00:35.294 --> 00:00:35.979
It's done so

14
00:00:35.979 --> 00:00:39.792
on purpose because it's a very
productive language to work in, right?

15
00:00:39.792 --> 00:00:44.581
If I come in here to my application just

16
00:00:44.581 --> 00:00:48.770
somewhere and say const x = 5 and

17
00:00:48.770 --> 00:00:54.111
I wanna say const y = x.toUpperCase.

18
00:00:54.111 --> 00:00:58.274
&gt;&gt; Brian Holt: toUpperCase, obviously,

19
00:00:58.274 --> 00:01:01.745
this is not gonna work.

20
00:01:01.745 --> 00:01:05.011
You and I both can see right
away that this is a number and

21
00:01:05.011 --> 00:01:07.577
that's gonna cause an error right there.

22
00:01:07.577 --> 00:01:12.434
You're trying to call an undefined
method on here because 5 doesn't have

23
00:01:12.434 --> 00:01:13.986
toUpperCase, right?

24
00:01:13.986 --> 00:01:20.448
It would have to be some string,
&gt;&gt; Brian Holt: Because

25
00:01:20.448 --> 00:01:22.889
this is not type safe, right?

26
00:01:22.889 --> 00:01:26.737
If you were doing something like some sort
of strongly-typed language like Haskell,

27
00:01:26.737 --> 00:01:29.592
it'd be just yelling at you
saying that doesn't work, right?

28
00:01:31.568 --> 00:01:34.649
&gt;&gt; Brian Holt: So
we're gonna introduce a kind of a thin

29
00:01:34.649 --> 00:01:37.559
layer on top of it called TypeScript.

30
00:01:37.559 --> 00:01:40.527
And now there's kind of two
choices here for JavaScript.

31
00:01:40.527 --> 00:01:42.929
You can either do Flow or
you can do TypeScript.

32
00:01:42.929 --> 00:01:45.968
The previous version of this course,
V3 does Flow.

33
00:01:45.968 --> 00:01:49.236
So if you're interested in Flow,
go back and look at that one.

34
00:01:49.236 --> 00:01:52.888
I'm gonna show you TypeScript today and
people always wanna ask us which one is

35
00:01:52.888 --> 00:01:55.280
your favorite,
which one is the best, which one?

36
00:01:55.280 --> 00:01:57.087
Which tribe should I belong to?

37
00:01:57.087 --> 00:01:59.538
And my answer to that
question is I don't care.

38
00:01:59.538 --> 00:02:04.489
[LAUGH] I think both them
are awesome pieces of technology.

39
00:02:04.489 --> 00:02:07.918
They both more or
less scratch my itch with it.

40
00:02:07.918 --> 00:02:11.415
I more recently have started using
TypeScript because I sit next to

41
00:02:11.415 --> 00:02:14.983
the TypeScript team at Microsoft and
I think they're really cool.

42
00:02:14.983 --> 00:02:17.512
So and they've shown me some
of their tips and tricks.

43
00:02:17.512 --> 00:02:19.592
I've seen some of the things
that come with it and

44
00:02:19.592 --> 00:02:21.332
probably most compellingly is VSCode.

45
00:02:21.332 --> 00:02:24.819
This particular editor has deep
integration with TypeScript.

46
00:02:24.819 --> 00:02:28.737
So it makes VSCode super,
super compelling.

47
00:02:28.737 --> 00:02:31.846
All right, so
I can move back to a base state.

48
00:02:31.846 --> 00:02:36.549
So I'm gonna show you quickly
how to convert a React project

49
00:02:36.549 --> 00:02:38.813
into a TypeScript project.

50
00:02:38.813 --> 00:02:42.383
I tweeted the other day,
cuz I was doing it for this project,

51
00:02:42.383 --> 00:02:47.789
that TypeScript is incredibly frustrating
until you're about 60 to 70% converted.

52
00:02:47.789 --> 00:02:49.206
And then it's amazing, right?

53
00:02:49.206 --> 00:02:50.980
It goes from this is the worst and

54
00:02:50.980 --> 00:02:53.886
fighting your tools to having
the best time with it.

55
00:02:53.886 --> 00:02:55.616
And it's like flipping a switch.

56
00:02:55.616 --> 00:02:59.950
Once you have enough of your project
typed, it starts really paying dividends

57
00:02:59.950 --> 00:03:03.770
really quickly, cuz you're gonna
have things like IntelliSense.

58
00:03:03.770 --> 00:03:08.329
You're gonna have things like catching
bugs really quickly and really well.

59
00:03:08.329 --> 00:03:13.065
There's a bunch of stuff that just
makes it work super, super well.

60
00:03:13.065 --> 00:03:15.923
&gt;&gt; Brian Holt: So
I'm gonna help you do that right now.

61
00:03:17.569 --> 00:03:20.362
&gt;&gt; Brian Holt: So
let's go over to our command line here and

62
00:03:20.362 --> 00:03:23.617
we're gonna install some
new dependencies here.

63
00:03:23.617 --> 00:03:30.975
The first one, as you might guess, we're
gonna install npm install -D typescript.

64
00:03:36.258 --> 00:03:37.277
&gt;&gt; Brian Holt: Okay?

65
00:03:37.277 --> 00:03:40.281
So this installs
the TypeScript project for us.

66
00:03:40.281 --> 00:03:44.447
And I'm going to use this TypeScript
project to init my project.

67
00:03:44.447 --> 00:03:47.261
So I'm gonna say npx tsc.

68
00:03:47.261 --> 00:03:50.203
tsc is the TypeScript compiler,

69
00:03:50.203 --> 00:03:55.885
which is gonna come from our
Node modules cuz of npx, --init.

70
00:03:57.900 --> 00:04:03.168
&gt;&gt; Brian Holt: So you can see now,
&gt;&gt; Brian Holt: I have this tsconfig.json,

71
00:04:03.168 --> 00:04:07.487
that's what I just generated with
this last statement right here.

72
00:04:10.001 --> 00:04:13.202
&gt;&gt; Brian Holt: If I go look
at that in the tsconfig now,

73
00:04:13.202 --> 00:04:17.379
you can see here that it has
a bunch of stuff in here.

74
00:04:24.940 --> 00:04:28.264
&gt;&gt; Brian Holt: One of the best parts about
TypeScript is it's going to give you type

75
00:04:28.264 --> 00:04:30.845
definitions for
all of your various dependencies.

76
00:04:30.845 --> 00:04:33.995
That's going to incredibly helpful to us.

77
00:04:33.995 --> 00:04:38.203
So a lot of the libraries that
you are using already ship with

78
00:04:38.203 --> 00:04:40.234
TypeScript dependencies.

79
00:04:40.234 --> 00:04:42.977
For example, RxJS.

80
00:04:42.977 --> 00:04:46.513
RxJS itself is written in TypeScript.

81
00:04:46.513 --> 00:04:50.343
So TypeScript is really easy, has a really
easy time of just reading everything

82
00:04:50.343 --> 00:04:53.786
coming in and out of RxJS because
it's already written in TypeScript.

83
00:04:53.786 --> 00:04:58.274
But for example, Reach Router, the router
that we're using for this project,

84
00:04:58.274 --> 00:05:00.525
does not have TypeScript definitions.

85
00:05:00.525 --> 00:05:01.562
So what do we do about that?

86
00:05:01.562 --> 00:05:02.383
I don't wanna write them.

87
00:05:02.383 --> 00:05:04.236
That would be really complicated,

88
00:05:04.236 --> 00:05:07.642
cuz I don't understand Reach Router
that intricately, right?

89
00:05:07.642 --> 00:05:10.487
Well, luckily other really smart
people have already done this for you.

90
00:05:10.487 --> 00:05:15.534
There's a project called definitelytyped
and I think it's at definitelytyped.org.

91
00:05:15.534 --> 00:05:19.483
It might be, but anyway just search for
definitelytyped and you'll find it.

92
00:05:19.483 --> 00:05:24.639
And if I say here npm install -d.

93
00:05:24.639 --> 00:05:28.890
For example, @types/react, right?

94
00:05:28.890 --> 00:05:31.755
React is not written in TypeScript but

95
00:05:31.755 --> 00:05:37.318
it does have TypeScript definitions here,
@/types/react, right?

96
00:05:37.318 --> 00:05:39.735
And that's the key here.

97
00:05:39.735 --> 00:05:43.586
If I wanna get the type descript
definitions I'll just write

98
00:05:43.586 --> 00:05:45.708
@types/react-dom, right?

99
00:05:45.708 --> 00:05:47.732
And that's how it works.

100
00:05:47.732 --> 00:05:51.397
And we'll also grab it for

101
00:05:51.397 --> 00:05:55.400
types/reach__router.

102
00:05:55.400 --> 00:06:03.276
This one's kind of a weird one because the
way that it's typically is @reach/router.

103
00:06:03.276 --> 00:06:06.706
So the way you convert that over
is you delete the @ part and

104
00:06:06.706 --> 00:06:09.092
you put two underscores for the router.

105
00:06:09.092 --> 00:06:11.253
So that's how you end up with that.

106
00:06:11.253 --> 00:06:15.393
So this is gonna out and grab all the
definitions, all the TypeScript goodness

107
00:06:15.393 --> 00:06:18.546
from, definitelytyped and
bring that into our projects.

108
00:06:18.546 --> 00:06:21.551
So despite the fact that React
is not written TypeScript,

109
00:06:21.551 --> 00:06:23.279
we now have all the definitions.

110
00:06:23.279 --> 00:06:27.053
So we can do IntelliSense, we can type
check, we can do all those great things.

111
00:06:27.053 --> 00:06:31.078
Because, I mean, if you want to see what
a TypeScript definition file looks like,

112
00:06:34.264 --> 00:06:36.284
&gt;&gt; Brian Holt: This is what it looks like.

113
00:06:36.284 --> 00:06:38.635
Type definitions for React 16.

114
00:06:38.635 --> 00:06:41.986
It is really long.

115
00:06:41.986 --> 00:06:43.805
Really long.

116
00:06:43.805 --> 00:06:47.283
Extremely long, 2500 lines.

117
00:06:47.283 --> 00:06:51.201
Someone went through and
painstakingly documented that,

118
00:06:51.201 --> 00:06:54.420
all the various types to come in and
out of React.

119
00:06:54.420 --> 00:06:58.468
This is so that at any given time,
you know exactly what everything is,

120
00:06:58.468 --> 00:06:59.550
which is amazing.

121
00:07:01.182 --> 00:07:02.200
&gt;&gt; Brian Holt: Okay?

122
00:07:03.539 --> 00:07:06.619
&gt;&gt; Brian Holt: Another cool thing about
TypeScript is you can do one file

123
00:07:06.619 --> 00:07:07.204
at a time.

124
00:07:07.204 --> 00:07:10.221
You don't have to build Rome in a day.

125
00:07:10.221 --> 00:07:14.329
You can convert file by file by
file if you have a big project and

126
00:07:14.329 --> 00:07:18.051
piece by piece to being in
TypeScript from JavaScript.

127
00:07:18.051 --> 00:07:21.292
Because JavaScript and TypeScript
can interoperate with each other.

128
00:07:21.292 --> 00:07:25.722
TypeScript is essentially just a little
extra shook on JavaScript anyway.

129
00:07:25.722 --> 00:07:30.161
So let's open right now,
which one do I do first here?

130
00:07:30.161 --> 00:07:32.327
Modal, cuz that one's pretty small.

