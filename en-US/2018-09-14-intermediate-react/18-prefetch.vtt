WEBVTT

1
00:00:00.000 --> 00:00:03.439
&gt;&gt; Speaker 1: Can you
prefetch after a page load?

2
00:00:03.439 --> 00:00:05.188
&gt;&gt; Brian Holt: Yeah.

3
00:00:05.188 --> 00:00:09.017
&gt;&gt; Speaker 1: If you hover over that
button maybe that's when you start

4
00:00:09.017 --> 00:00:09.905
loading it?

5
00:00:09.905 --> 00:00:14.512
&gt;&gt; Brian Holt: I'm not going
to say you couldn't do that.

6
00:00:14.512 --> 00:00:18.159
That particular pattern you mentioned
there, that would be possible,

7
00:00:18.159 --> 00:00:19.843
it would be a bit more difficult.

8
00:00:19.843 --> 00:00:25.316
So let me suggest some other alternatives
that would be easier than perhaps that.

9
00:00:25.316 --> 00:00:29.249
So as always, I end up on
an Addy Osmani article, typical.

10
00:00:29.249 --> 00:00:32.462
This is what I want, rel, okay.

11
00:00:32.462 --> 00:00:37.876
So using your generated output
from your parcel bundle,

12
00:00:37.876 --> 00:00:42.386
you can come in here and
say rel="preload" or

13
00:00:42.386 --> 00:00:46.130
"prefetch' or something like that.

14
00:00:46.130 --> 00:00:53.043
And then src= to whatever

15
00:00:53.043 --> 00:00:58.389
the bundle path is.

16
00:01:02.505 --> 00:01:03.441
&gt;&gt; Brian Holt: Like this, and

17
00:01:03.441 --> 00:01:08.193
what the browser will do is if it has
enough signal, and it has enough time, and

18
00:01:08.193 --> 00:01:12.244
bandwidth, and battery, and
all this kind of extraneous stuff.

19
00:01:12.244 --> 00:01:18.398
It'll actually go out and preload that for
you, it's called hinting.

20
00:01:18.398 --> 00:01:19.932
Now, I'm gonna say it.

21
00:01:19.932 --> 00:01:22.390
It's pretty hit and miss,
and actually on purpose.

22
00:01:22.390 --> 00:01:25.676
If you have low battery and bad signal,
it's just going to ignore these,

23
00:01:25.676 --> 00:01:27.698
which is what you would want it to do,
right?

24
00:01:27.698 --> 00:01:30.450
You don't wanna burn people's battery.

25
00:01:30.450 --> 00:01:34.020
But if it has like full battery, or
you're on desktop on gigabit fiber,

26
00:01:34.020 --> 00:01:36.680
it's gonna go prefetch all these things so
they'll be super, super fast.

27
00:01:37.700 --> 00:01:41.470
Last time I checked, Safari on iOS just
ignores all of these all the time.

28
00:01:41.470 --> 00:01:45.957
So it's, again, hit and miss,
and there's several of these,

29
00:01:45.957 --> 00:01:49.065
there's prefetch, there's preconnect.

30
00:01:49.065 --> 00:01:52.524
You should go check that out,
there's several ways to do that.

31
00:01:52.524 --> 00:01:54.201
So this is the easiest one, right?

32
00:01:57.285 --> 00:02:00.194
&gt;&gt; Brian Holt: The second one was,
which is what I was talking about,

33
00:02:00.194 --> 00:02:02.862
is you'd use a service
worker in the background.

34
00:02:02.862 --> 00:02:06.376
And the service worker would just go out
and prefetch all these bundles for you.

35
00:02:06.376 --> 00:02:10.986
And because it's a service worker, because
you write service workers in JavaScript,

36
00:02:10.986 --> 00:02:13.678
you have total granular
control of how that works.

37
00:02:16.131 --> 00:02:17.060
&gt;&gt; Brian Holt: So that's how we do that.

