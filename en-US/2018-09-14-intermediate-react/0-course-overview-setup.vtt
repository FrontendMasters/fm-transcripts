WEBVTT

1
00:00:00.000 --> 00:00:04.272
&gt;&gt; Brian Holt: In this particular course,
we're gonna need to go over various

2
00:00:04.272 --> 00:00:08.863
different modules of how to integrate
different things with React,

3
00:00:08.863 --> 00:00:10.141
how to test React.

4
00:00:12.071 --> 00:00:15.302
&gt;&gt; Brian Holt: Other things that are kind
of building around the ecosystem

5
00:00:15.302 --> 00:00:16.019
with React.

6
00:00:16.019 --> 00:00:18.963
There's a previous course on this, so
we go over the introduction to React.

7
00:00:18.963 --> 00:00:23.372
And we're going to use the application
that we built in the introduction

8
00:00:23.372 --> 00:00:28.229
to React in this course to do things like
integrate Redux, how to build Preact.

9
00:00:28.229 --> 00:00:31.988
But the nice thing about this particular
course, you don't really have

10
00:00:31.988 --> 00:00:36.068
to understand the previous application
to understand how this is gonna work.

11
00:00:36.068 --> 00:00:40.688
And if you wanna skip around, all these
modules are gonna be self-contained.

12
00:00:40.688 --> 00:00:44.687
So we're gonna start with If you go to

13
00:00:44.687 --> 00:00:50.880
bit.ly/react-v4 it's gonna
take you to this page.

14
00:00:52.210 --> 00:00:56.147
The first 12 are done in
the previous course, right, and

15
00:00:56.147 --> 00:00:59.231
then we're gonna do 13 through 20 today.

16
00:01:00.379 --> 00:01:02.901
&gt;&gt; Brian Holt: As a reminder these
are my teacher's notes here,

17
00:01:02.901 --> 00:01:06.684
so if you fall behind, or you wanna
see exactly what I'm talking about, or

18
00:01:06.684 --> 00:01:10.368
you just wanna share this with other
people these notes are open source.

19
00:01:10.368 --> 00:01:12.188
They're meant to be shared with everyone,
right?

20
00:01:12.188 --> 00:01:14.722
So I'm super grateful for
Frontend Masters for

21
00:01:14.722 --> 00:01:17.458
allowing me to open source
all of these materials.

22
00:01:17.458 --> 00:01:19.375
So if you wanna look at testing,

23
00:01:19.375 --> 00:01:22.793
these are literally the notes
that I'm going over here.

24
00:01:22.793 --> 00:01:25.819
It's actually, but I have this in
little surface for right here,

25
00:01:25.819 --> 00:01:27.603
it's that's what I'm referring to,

26
00:01:27.603 --> 00:01:31.241
so you can see these codes, snippets,
you can see all those kind of stuff here.

27
00:01:31.241 --> 00:01:32.824
Cool?

28
00:01:32.824 --> 00:01:33.806
Cool.

29
00:01:33.806 --> 00:01:38.953
So, let's go ahead and go clone our
repo here, so I'm gonna go over here,

30
00:01:38.953 --> 00:01:44.616
I'm gonna clone a repo right here in the
Complete Internal React v 4, copy that.

31
00:01:47.355 --> 00:01:50.690
&gt;&gt; Brian Holt: And
I'm gonna go here and clear.

32
00:01:52.830 --> 00:01:55.560
And I'm going to get clone, blah.

33
00:01:57.440 --> 00:01:57.940
Nope.

34
00:02:00.515 --> 00:02:04.030
&gt;&gt; Brian Holt: Well I have it, but
I"m gonna remove it and clone it again.

35
00:02:10.022 --> 00:02:13.967
&gt;&gt; Brian Holt: So on a separate note, if
you want to see my complete results after

36
00:02:13.967 --> 00:02:19.230
I finish these things, there's a bunch of
branches here that already exist, right?

37
00:02:19.230 --> 00:02:23.894
So for example, we're about to do testing,
and if you click on this testing branch

38
00:02:23.894 --> 00:02:27.638
right here, this will be the complete
testing solution, right?

39
00:02:27.638 --> 00:02:31.618
And again, I will point that out at
the end of each module, as well.

40
00:02:31.618 --> 00:02:34.939
You can come in here and
you can see that the tests already exist.

41
00:02:36.386 --> 00:02:39.358
&gt;&gt; Brian Holt: So each one of the various
sections has it's own branch.

42
00:02:42.737 --> 00:02:45.318
&gt;&gt; Brian Holt: And to show you how
to do that with get very quickly,

43
00:02:45.318 --> 00:02:48.996
I'm going to go into the recently cloned,
complete intro to react v4.

44
00:02:48.996 --> 00:02:55.477
If I wanted to clone the existing
testing branch, I'm going to say,

45
00:02:55.477 --> 00:03:01.191
get fetch testing, sorry,
get fetch origin testing.

46
00:03:01.191 --> 00:03:08.784
Okay, I fetched it and I'm gonna say,
get check out testing.

47
00:03:08.784 --> 00:03:16.908
And now, if you look, I have this commit
right here at the end of the test.

48
00:03:16.908 --> 00:03:19.628
Okay, so that's how you do that.

49
00:03:19.628 --> 00:03:24.885
But I'm gonna start back on master,
git checkout master, you can see here I

50
00:03:24.885 --> 00:03:30.240
have the last commit here was number 9,
which is exactly where we want to be.

51
00:03:30.240 --> 00:03:34.750
And I'm going to open this in vs code.

52
00:03:34.750 --> 00:03:36.393
So I've opened vs code.

53
00:03:36.393 --> 00:03:40.655
Some of the things here that I want to
point out that you probably want to

54
00:03:40.655 --> 00:03:41.965
install right away.

55
00:03:41.965 --> 00:03:43.083
E S lint.

56
00:03:43.083 --> 00:03:46.142
This will run E S lint right in your
browser or right in your co-editor.

57
00:03:46.142 --> 00:03:47.510
Very, very helpful.

58
00:03:47.510 --> 00:03:52.254
In general, I tend to use the Night Owl
theme which is written by

59
00:03:52.254 --> 00:03:54.952
another friend in master browser.

60
00:03:54.952 --> 00:03:57.135
It doesn't look good on the projector,
so I'm not going to use that today.

61
00:03:57.135 --> 00:03:58.948
But I would suggest that one.

62
00:03:58.948 --> 00:04:01.882
MPM IntelliSense,
definitely install that one.

63
00:04:01.882 --> 00:04:03.951
Pretty cool which will help you.

64
00:04:03.951 --> 00:04:08.687
As you can see here it will start doing
autocomplete from your package.JSON,

65
00:04:08.687 --> 00:04:09.704
super helpful.

66
00:04:09.704 --> 00:04:14.256
Prettier, you'll notice throughout this
entire course that my code will be

67
00:04:14.256 --> 00:04:17.210
rearranging itself and
autoformatting itself.

68
00:04:17.210 --> 00:04:20.927
That's due to Prettier if
you want to understand how

69
00:04:20.927 --> 00:04:25.065
that works as well as the ES Lint,
some of the other stuff,

70
00:04:25.065 --> 00:04:29.729
please go in and watch that previous
section and enter the React.

71
00:04:29.729 --> 00:04:32.356
We'll talk about TS Lint later, but

72
00:04:32.356 --> 00:04:36.678
this is going to come into play
with the type script module And

73
00:04:36.678 --> 00:04:41.761
this one, we'll talk about when we
get to the emotion part of the webs,

74
00:04:41.761 --> 00:04:45.858
but this is actually,
it's forced styled components.

75
00:04:45.858 --> 00:04:48.459
But it's essential for emotion as well, so

76
00:04:48.459 --> 00:04:52.127
I suggest you install this VSCode
styled components as well.

77
00:04:53.516 --> 00:04:56.803
&gt;&gt; Brian Holt: Lastly,
let's talk just about some of my settings.

78
00:04:58.595 --> 00:05:01.010
&gt;&gt; Brian Holt: I'm using
the monokai theme.

79
00:05:01.010 --> 00:05:03.250
Again, that looks good on the projector,
but

80
00:05:03.250 --> 00:05:05.380
typically I use Night Owl
when I'm at home.

81
00:05:06.990 --> 00:05:12.340
In order to Prettier to run on its own,
we do editor.formatOnSave, which is true,

82
00:05:12.340 --> 00:05:16.720
as well as prettier requireConfig here.

83
00:05:16.720 --> 00:05:18.208
So have that work as well.

84
00:05:18.208 --> 00:05:20.141
I'm using Dank Mono as my font.

85
00:05:20.141 --> 00:05:23.632
I highly suggest it.

86
00:05:23.632 --> 00:05:25.460
It is $50, which it's totally worth it.

87
00:05:25.460 --> 00:05:29.149
This guy Phil spent a bunch of time
designing this font, so it's worth it.

88
00:05:29.149 --> 00:05:31.322
But otherwise, you can use sphere code.

89
00:05:31.322 --> 00:05:34.234
That one works really good as well,
and that one's free, and

90
00:05:34.234 --> 00:05:36.258
you wanna enable font ligatures for that.

91
00:05:36.258 --> 00:05:41.746
So the first thing we're gonna do into our
projects that we've recently cloned here,

92
00:05:41.746 --> 00:05:44.676
we have to do npm install,
which will go out and

93
00:05:44.676 --> 00:05:49.284
install all the dependencies which
are coming from the package.Json.

94
00:05:49.284 --> 00:05:53.767
If you don't have Note installed already,
you will also have to do that.

95
00:05:53.767 --> 00:05:59.159
If you do not already, you will have to go
and sign up for a pet finder API count.

96
00:06:01.772 --> 00:06:09.929
&gt;&gt; Brian Holt: Which, let's see I have
a link to that inside the course Note.

97
00:06:09.929 --> 00:06:17.155
That is going to be inside of here and
so the State Lifecycle Methods so

98
00:06:17.155 --> 00:06:21.648
Number 6, click on this link right here.

99
00:06:21.648 --> 00:06:24.786
It takes you to this pet adoption thing.

100
00:06:24.786 --> 00:06:27.258
You will have to sign up for it.

101
00:06:27.258 --> 00:06:29.665
If you're not in the United States,

102
00:06:29.665 --> 00:06:33.010
you do have to sign up with
a United States zip code.

103
00:06:33.010 --> 00:06:38.915
You can use mine, which is 98103,
which is in Seattle.

104
00:06:38.915 --> 00:06:41.982
And you see an API key here and
an API secret.

105
00:06:41.982 --> 00:06:47.092
Don't use mine because after this course,

106
00:06:47.092 --> 00:06:50.276
I'm going to get new ones.

107
00:06:50.276 --> 00:06:54.686
[LAUGH] I worked at Reddit long enough
that if you show secrets that people

108
00:06:54.686 --> 00:06:56.830
are going to eventually use them.

109
00:06:56.830 --> 00:07:01.640
So go sign up for your own and
we'll build a pet adoption app.

110
00:07:01.640 --> 00:07:05.051
So what I want you to do is copy this,
come into your application,

111
00:07:05.051 --> 00:07:05.925
make a new file.

112
00:07:07.958 --> 00:07:13.573
&gt;&gt; Brian Holt: And save that under
the root directory of your project, and

113
00:07:13.573 --> 00:07:19.728
call it .env
&gt;&gt; Brian Holt: Okay, use the dot that's

114
00:07:19.728 --> 00:07:24.640
fine and we're gonna have two entries
in this API key, all caps equals blah.

115
00:07:25.730 --> 00:07:33.590
And the secret, we'll copy that as well
and we'll have API secret equals blah.

116
00:07:33.590 --> 00:07:36.580
If you took the previous version of
this course, you don't have to do any of

117
00:07:36.580 --> 00:07:39.719
the stuff, you can just continue on with
the build application that you have.

118
00:07:43.367 --> 00:07:46.955
&gt;&gt; Brian Holt: So now,
you might have to restart your server now,

119
00:07:46.955 --> 00:07:51.344
npm run dev
&gt;&gt; Brian Holt: Should start a lot

120
00:07:51.344 --> 00:07:53.000
faster this time.

121
00:07:53.000 --> 00:07:57.535
So because I run this and
I had a cache and a dist,

122
00:07:57.535 --> 00:08:01.845
it's actually reading
that out the cache and

123
00:08:01.845 --> 00:08:05.827
it's assuming that it's not changing.

124
00:08:05.827 --> 00:08:11.235
So I think if you remove that and
then say npm run dev again.

125
00:08:13.725 --> 00:08:16.937
&gt;&gt; Brian Holt: It should be working,
that's the hope.

126
00:08:18.703 --> 00:08:19.680
&gt;&gt; Brian Holt: Cool.

127
00:08:19.680 --> 00:08:20.390
That solved DIV.

128
00:08:21.620 --> 00:08:27.430
If I put like dog and
Alaskan Malamute and I submit that,

129
00:08:27.430 --> 00:08:32.620
you'll see that I have, I searched for
Alaskan Malamutes in Seattle.

130
00:08:32.620 --> 00:08:37.116
Which there are a lot of them because a
lot of people in Seattle have Huskies and

131
00:08:37.116 --> 00:08:39.343
Malamutes and all that kind of stuff.

132
00:08:42.461 --> 00:08:45.590
&gt;&gt; Brian Holt: Cool, so
that gets us what this application can do.

133
00:08:45.590 --> 00:08:48.357
You can click up here and
it will take you here to the search page.

134
00:08:48.357 --> 00:08:50.500
You can click here,
it will take you back to the homepage.

135
00:08:50.500 --> 00:08:53.472
So if you click on one of these,
it will take you to the Details page.

136
00:08:55.289 --> 00:08:59.755
&gt;&gt; Brian Holt: You can click Adopt here,
and it will say, Yes or No, but

137
00:08:59.755 --> 00:09:05.358
it doesn't work [LAUGH] we just did
that to demonstrate how to do a modal.

