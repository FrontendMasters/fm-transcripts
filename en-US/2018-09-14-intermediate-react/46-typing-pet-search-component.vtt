WEBVTT

1
00:00:01.430 --> 00:00:06.241
&gt;&gt; Brian Holt: Cool.
Let's do pet.tsx.

2
00:00:06.241 --> 00:00:08.569
Rename this to Pet.tsx.

3
00:00:17.821 --> 00:00:21.292
&gt;&gt; Brian Holt: Up here at the top we're
gonna import some more types, import.

4
00:00:21.292 --> 00:00:25.022
PetMedia and

5
00:00:25.022 --> 00:00:29.091
PetPhoto from

6
00:00:29.091 --> 00:00:34.859
PetFinder client.

7
00:00:34.859 --> 00:00:37.925
What this has, takes some props,

8
00:00:37.925 --> 00:00:42.691
I'm gonna say, Interface Props,
name is a string.

9
00:00:42.691 --> 00:00:44.121
Animal is a string.

10
00:00:48.455 --> 00:00:50.463
&gt;&gt; Brian Holt: So
it should be a comma up there.

11
00:00:51.539 --> 00:00:54.552
&gt;&gt; Brian Holt: Breed is a string.

12
00:00:55.664 --> 00:00:57.602
&gt;&gt; Brian Holt: Media is a PetMedia.

13
00:01:01.403 --> 00:01:04.401
&gt;&gt; Brian Holt: Location is a string.

14
00:01:08.082 --> 00:01:10.733
&gt;&gt; Brian Holt: And
an id is a string as well.

15
00:01:15.750 --> 00:01:19.999
&gt;&gt; Brian Holt: Okay,
class Pet extends React.Component, and

16
00:01:19.999 --> 00:01:26.590
this takes in Props
&gt;&gt; Brian Holt: And

17
00:01:26.590 --> 00:01:30.349
this photos here is an array of PetPhoto.

18
00:01:36.622 --> 00:01:40.055
&gt;&gt; Brian Holt: And that's it,
this one is the wise typed, so

19
00:01:40.055 --> 00:01:43.322
not really much, and
this has to be public.

20
00:01:48.629 --> 00:01:51.767
&gt;&gt; Brian Holt: So as you see this kind of
gets easier and easier as we go along.

21
00:01:55.033 --> 00:02:01.010
&gt;&gt; Brian Holt: So let's go do
search context, searchcontext.js.

22
00:02:01.010 --> 00:02:03.974
Now, up to you here how
you choose to do this.

23
00:02:03.974 --> 00:02:07.153
This could be .ts and
that's what I'm gonna make it.

24
00:02:07.153 --> 00:02:10.151
It doesn't need to be .tsx
cuz there is no JSX in here.

25
00:02:10.151 --> 00:02:13.905
But you could call .tsx and
it would work just fine.

26
00:02:20.486 --> 00:02:24.168
&gt;&gt; Brian Holt: So one thing at the top
here we're going to disable one .ts

27
00:02:24.168 --> 00:02:25.298
just for this file.

28
00:02:25.298 --> 00:02:28.527
No empty because we want those
functions to be empties.

29
00:02:28.527 --> 00:02:34.578
So we gonna say tslint disable no-empty.

30
00:02:34.578 --> 00:02:39.680
That's gonna give up on
those which is what we want.

31
00:02:39.680 --> 00:02:46.374
Breeds here is going to be as string
array cuz it's gonna be array of string,

32
00:02:46.374 --> 00:02:50.358
right, the breeds coming
back from the API.

33
00:02:50.358 --> 00:02:55.904
And but
we do have to type parameters here.

34
00:02:55.904 --> 00:02:59.604
So let's do that.

35
00:02:59.604 --> 00:03:04.743
So it's gonna be an event and it's gonna

36
00:03:04.743 --> 00:03:10.793
be React.KeyboardEvent HTML InputElement.

37
00:03:14.811 --> 00:03:17.985
&gt;&gt; Brian Holt: Because type script is
gonna use these types that we define up

38
00:03:17.985 --> 00:03:19.925
front to later help us with context.

39
00:03:19.925 --> 00:03:23.422
It's smart enough to kind
of link those two together.

40
00:03:23.422 --> 00:03:27.406
So handleBreedChange is a change event,
so.

41
00:03:27.406 --> 00:03:35.916
ChangeEvent on an HTML SelectElement,
&gt;&gt; Brian Holt: And

42
00:03:35.916 --> 00:03:40.864
LocationChanges the KeyboardEvent on an
HTML InputElement, so those are all right.

43
00:03:44.002 --> 00:03:45.633
&gt;&gt; Brian Holt: Now notice we
don't have to type animal,

44
00:03:45.633 --> 00:03:46.947
we don't have to type location.

45
00:03:46.947 --> 00:03:48.961
Why?

46
00:03:48.961 --> 00:03:49.794
That's a string.

47
00:03:49.794 --> 00:03:51.090
That's really obvious.

48
00:03:51.090 --> 00:03:54.217
You know it, I know it, TypeScript knows
it, and if it can infer the type just by

49
00:03:54.217 --> 00:03:57.609
seeing it, it's like, cool, I'm not gonna
make you tell me that that's a string.

50
00:03:57.609 --> 00:04:00.388
I don't have to say this as string.

51
00:04:00.388 --> 00:04:01.345
You can, it's redundant.

52
00:04:01.345 --> 00:04:04.153
I think TS gonna say, why are doing that?

53
00:04:04.153 --> 00:04:05.310
You're dumb.

54
00:04:05.310 --> 00:04:11.782
But again,
&gt;&gt; Brian Holt: All right,

55
00:04:11.782 --> 00:04:14.023
so that's good enough for SearchContext.

56
00:04:14.023 --> 00:04:19.210
Let's go to SearchBox.

57
00:04:19.210 --> 00:04:25.983
SearchBox rename

58
00:04:25.983 --> 00:04:30.049
to be tsx.

59
00:04:30.049 --> 00:04:33.213
Okay, just a couple of things to do here,
we have to make the Props interface.

60
00:04:33.213 --> 00:04:38.162
Interface Props, search is gonna
be function that it gets and

61
00:04:38.162 --> 00:04:40.739
this is how you type functions.

62
00:04:40.739 --> 00:04:43.656
Just an arrow function that returns void.

63
00:04:43.656 --> 00:04:45.202
That's it.

64
00:04:45.202 --> 00:04:50.062
Now it knows this is a function
that you call with nothing, and

65
00:04:50.062 --> 00:04:51.846
you get back nothing.

66
00:04:51.846 --> 00:04:54.333
But it has to be there.

67
00:04:54.333 --> 00:05:00.345
So now I'm going to say this gets Props,
this is a public render.

68
00:05:03.621 --> 00:05:06.053
&gt;&gt; Brian Holt: And I think that's it.

69
00:05:06.053 --> 00:05:10.717
Everything else,
it knows how to do by itself.

70
00:05:10.717 --> 00:05:12.187
But like, how cool is this.

71
00:05:12.187 --> 00:05:14.267
I don't really know what animal is.

72
00:05:14.267 --> 00:05:17.809
I'm just gonna mouse-over that,
I was like, that's a string, right?

73
00:05:17.809 --> 00:05:19.856
You just get to see all that kind
of stuff just out of the box.

74
00:05:19.856 --> 00:05:22.707
You're like yeah, you know,
I don't know what handleBreedChange is.

75
00:05:22.707 --> 00:05:23.790
How do I call that?

76
00:05:23.790 --> 00:05:27.215
Well, its method and it takes in
a event which is a change event,

77
00:05:27.215 --> 00:05:30.775
which just happens on an HTML
select element and returns nothing.

78
00:05:32.295 --> 00:05:34.265
&gt;&gt; Brian Holt: That's all
just built into here, right,

79
00:05:34.265 --> 00:05:38.099
this is where TypeScript is getting really
compelling it's like documentation on

80
00:05:38.099 --> 00:05:42.752
the fly everywhere
&gt;&gt; Brian Holt: Or like what's consumer?

81
00:05:42.752 --> 00:05:44.692
I don't really understand
what consumer is.

82
00:05:44.692 --> 00:05:49.121
Well, that's a React.ComponentType that
takes in location, animal, breeds.

83
00:05:49.121 --> 00:05:51.282
All this stuff comes in on the context,
and

84
00:05:51.282 --> 00:05:53.331
I just have to do that by mousing over it.

85
00:05:57.115 --> 00:05:59.312
&gt;&gt; Brian Holt: I hope your brain
was just like this is really cool.

86
00:05:59.312 --> 00:06:02.096
It's like this is a pain
in the ass to type, right?

87
00:06:02.096 --> 00:06:07.056
Super pain in the ass to convert
a project from JavaScript to TypeScript,

88
00:06:07.056 --> 00:06:09.460
but it's worth it most of the time.

89
00:06:09.460 --> 00:06:11.612
Results.tsx, let's go do that one.

90
00:06:11.612 --> 00:06:17.969
Results.js, rename here,

91
00:06:17.969 --> 00:06:25.364
.tsx
&gt;&gt; Brian Holt: So

92
00:06:25.364 --> 00:06:30.191
up here at the top we're going
to import as well the Pet

93
00:06:30.191 --> 00:06:34.926
type from PetFinder Client,
but we have a problem.

94
00:06:34.926 --> 00:06:38.561
This component here is already called Pet,
right?

95
00:06:38.561 --> 00:06:44.509
So, you just say, hey just call this for
now PetType and now it's disambiguated.

96
00:06:46.440 --> 00:06:54.392
&gt;&gt; Brian Holt: And, then we also need from
&gt;&gt; Brian Holt: Route component type,

97
00:06:54.392 --> 00:06:59.453
RouteComponentType from
reach router from at reach

98
00:06:59.453 --> 00:07:04.243
router
&gt;&gt; Brian Holt: Okay,

99
00:07:04.243 --> 00:07:08.079
same thing here that
we needed from before.

100
00:07:08.079 --> 00:07:12.778
In fact, we can just go copy that
in details, this far as like,

101
00:07:12.778 --> 00:07:15.630
hey, just throw if there's no keys.

102
00:07:15.630 --> 00:07:17.351
So put this at Details.tsx.

103
00:07:17.351 --> 00:07:22.912
I'm gonna put it in Resutls.tsx.

104
00:07:22.912 --> 00:07:26.764
Ideally what you do is you have like one
import from like a different API client.

105
00:07:26.764 --> 00:07:30.811
So you don't have to have this every
single time the extension of the API

106
00:07:30.811 --> 00:07:33.447
client but
we are not gonna fix that right now.

107
00:07:33.447 --> 00:07:40.806
Above this, this used to have an interface
for props and state Interface Props.

108
00:07:40.806 --> 00:07:45.597
SearchParams coming from context.

109
00:07:45.597 --> 00:07:51.339
Those are going to be location,
which is a string.

110
00:07:51.339 --> 00:07:56.322
It needs to be animal which is a string,

111
00:07:56.322 --> 00:07:59.946
and breed which is a string.

112
00:07:59.946 --> 00:08:04.860
Okay, so is like this is an object,
this object has three keys.

113
00:08:04.860 --> 00:08:10.304
And then these have an interface for
state as well, state and it's gonna have

114
00:08:10.304 --> 00:08:15.603
an array of pets which are going to be
of PetType and it's gonna be an array.

115
00:08:15.603 --> 00:08:19.402
Then here we give it, Props.

116
00:08:19.402 --> 00:08:22.546
No, stop it, Props, State.

117
00:08:27.074 --> 00:08:28.742
&gt;&gt; Brian Holt: Okay, constructors.

118
00:08:28.742 --> 00:08:32.125
Constructors are always public so
you don't really need to tell it that.

119
00:08:40.984 --> 00:08:43.096
&gt;&gt; Brian Holt: This is public.

120
00:08:43.096 --> 00:08:44.603
This is public.

121
00:08:49.112 --> 00:08:52.992
&gt;&gt; Brian Holt: And this is public,
so we do that next.

122
00:08:54.380 --> 00:08:59.320
&gt;&gt; Brian Holt: Constructor, say these pets

123
00:08:59.320 --> 00:09:03.276
as PetType, an array.

124
00:09:03.276 --> 00:09:04.844
I think this is been
a little bit redundant.

125
00:09:04.844 --> 00:09:08.442
I think you would have
been already known that.

126
00:09:08.442 --> 00:09:15.298
It does cause it we gave it up there so
up to you if you wanna do that or not.

127
00:09:15.298 --> 00:09:19.638
Inside, right here it says hey.

128
00:09:19.638 --> 00:09:20.539
I don't know what this is.

129
00:09:20.539 --> 00:09:22.917
You just say this is PepType.

130
00:09:22.917 --> 00:09:26.511
That's the only thing we can go in there.

131
00:09:26.511 --> 00:09:32.846
That works and
it doesn't know what data is.

132
00:09:35.100 --> 00:09:36.244
&gt;&gt; Brian Holt: Data right here,
this thing is.

133
00:09:36.244 --> 00:09:37.463
It is a PetFinder response.

134
00:09:37.463 --> 00:09:38.949
So it does know what that is.

135
00:09:40.641 --> 00:09:45.652
&gt;&gt; Brian Holt: For this, it just wants
that, pets instead of pets: pets.

136
00:09:48.170 --> 00:09:49.878
&gt;&gt; Brian Holt: And then down here.

137
00:09:51.468 --> 00:09:54.834
&gt;&gt; Brian Holt: It needs
to know that this is the,

138
00:09:54.834 --> 00:10:00.262
what do we call them up here,
route component props.

139
00:10:00.262 --> 00:10:04.022
RouteComponentProps.

140
00:10:04.022 --> 00:10:10.085
Cuz these are the props that
come in from reach router.

141
00:10:11.609 --> 00:10:13.519
&gt;&gt; Brian Holt: Okay so, that's all good.

142
00:10:16.189 --> 00:10:18.612
&gt;&gt; Brian Holt: But it's even cool that
it knows what this context is and

143
00:10:18.612 --> 00:10:21.666
it knows that this context matches
what search params is looking for.

144
00:10:21.666 --> 00:10:23.255
And it just matches a lot,

145
00:10:23.255 --> 00:10:28.268
like if I forgot to put this here,
&gt;&gt; Brian Holt: It's like, hey,

146
00:10:28.268 --> 00:10:33.069
well results expects this and you're not
giving it to results, so that's an error.

147
00:10:36.563 --> 00:10:42.402
&gt;&gt; Brian Holt: So that's good,
I think that does it for results.tsx.

