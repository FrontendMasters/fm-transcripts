WEBVTT

1
00:00:00.267 --> 00:00:03.059
&gt;&gt; Brian Holt: So
if you're gonna move from TypeScript or

2
00:00:03.059 --> 00:00:07.329
from JavaScript to TypeScript,
you need some new tools as well.

3
00:00:07.329 --> 00:00:09.204
We've have been using ESLint.

4
00:00:09.204 --> 00:00:12.720
And ESLint is not sufficient
to check the TypeScript.

5
00:00:12.720 --> 00:00:17.348
One, ESLint is checking for things that
TypeScript is way better at doing, right?

6
00:00:17.348 --> 00:00:20.830
Because if it has type information,
it can check for additional things.

7
00:00:20.830 --> 00:00:23.596
So there's that and
the other thing's we want to check for

8
00:00:23.596 --> 00:00:25.351
type scripts with specific things.

9
00:00:25.351 --> 00:00:29.671
Like for example we don't want to be using
the any type everywhere cause that's gonna

10
00:00:29.671 --> 00:00:30.992
lead to bigger problems.

11
00:00:30.992 --> 00:00:35.216
So we're gonna use a new
tool called TSLint.

12
00:00:35.216 --> 00:00:37.654
So come over here to your application.

13
00:00:37.654 --> 00:00:42.709
I'm gonna say npm uninstall

14
00:00:42.709 --> 00:00:46.712
Eslint babel-eslint

15
00:00:46.712 --> 00:00:56.194
eslint-config-pretier eslint-plugin-import

16
00:00:56.194 --> 00:01:02.515
eslint-plugin-js x-a1y, and

17
00:01:02.515 --> 00:01:08.210
esLINT dash plugin dash react.

18
00:01:09.750 --> 00:01:15.247
Basically everything we were using for
ESLINT we are going to take out now.

19
00:01:22.776 --> 00:01:27.378
&gt;&gt; Brian Holt: Now,
we're gonna install tslint, so

20
00:01:27.378 --> 00:01:34.210
we're gonna say npm install
-D tslint tslint-react and

21
00:01:34.210 --> 00:01:37.842
tslint-config-prettier.

22
00:01:42.776 --> 00:01:43.474
&gt;&gt; Brian Holt: Okay?

23
00:01:43.474 --> 00:01:46.180
Remove your eslint file because we're
not going to use that garbage anymore.

24
00:01:46.180 --> 00:01:48.410
Just kidding.
Eslint's great but

25
00:01:48.410 --> 00:01:50.900
we don't need it right now.

26
00:01:53.480 --> 00:01:58.120
Go into your package.json
in your project and

27
00:01:58.120 --> 00:02:00.580
where it says eslint,
all this stuff right here.

28
00:02:01.670 --> 00:02:06.866
We're going to change that
to be tslint --project.

29
00:02:11.324 --> 00:02:13.672
&gt;&gt; Brian Holt: And
then make a new file here.

30
00:02:13.672 --> 00:02:19.233
And outside of the source directory,
top level of your project,

31
00:02:19.233 --> 00:02:24.404
so the same level as package.json,
call it tslint.json.

32
00:02:24.404 --> 00:02:28.691
In here,
we're going to put a couple of things.

33
00:02:28.691 --> 00:02:33.741
Extends
&gt;&gt; Brian Holt: And

34
00:02:33.741 --> 00:02:40.800
we're gonna put tslint:recommended,
&gt;&gt; Brian Holt: Tslint-react.

35
00:02:40.800 --> 00:02:44.340
Sorry, that should not be a space,
no space there.

36
00:02:47.230 --> 00:02:52.853
And tslint-config-prettier.

37
00:02:52.853 --> 00:02:56.646
So, tslint, this is just a bunch of
rules that tslint recommends themselves.

38
00:02:56.646 --> 00:03:00.887
Tslint react is a bunch of rules
specific for tslint and react together.

39
00:03:00.887 --> 00:03:05.205
And config prettier is doing what
we were doing before with prettier,

40
00:03:05.205 --> 00:03:08.798
that it's just going to turn
off all the format checking.

41
00:03:08.798 --> 00:03:11.445
Lastly, let's go turn
off some other rules.

42
00:03:11.445 --> 00:03:13.377
Again, I'm not a big fan
of turning off the rules.

43
00:03:13.377 --> 00:03:17.046
For the most part I'm just fine to let
lint check for certain things, but

44
00:03:17.046 --> 00:03:19.222
there are some that I
just could not stand.

45
00:03:19.222 --> 00:03:26.726
Ordered imports, I don't care if things
are alphabetized ever, so false.

46
00:03:26.726 --> 00:03:28.409
Object-literal-sort-key.

47
00:03:29.430 --> 00:03:30.950
I don't know who thought
this was a good idea,

48
00:03:30.950 --> 00:03:34.610
but it makes you put all your keys and
objects in alphabetical order.

49
00:03:35.790 --> 00:03:39.390
It's just a little too,
yeah, I'm not gonna do it.

50
00:03:39.390 --> 00:03:44.532
Interface-name, this one forces you to
call interfaces with certain names,

51
00:03:48.182 --> 00:03:49.979
&gt;&gt; Brian Holt: Not good anyway.

52
00:03:49.979 --> 00:03:56.066
Member-ordering, it's again, some sort of
forcing things to be in certain orders.

53
00:03:56.066 --> 00:04:00.170
And no console because we do use
console a couple of places in here so.

54
00:04:01.170 --> 00:04:03.090
&gt;&gt; Brian Holt: So false there.

55
00:04:03.090 --> 00:04:07.993
So turn off a bunch of rules and you're
welcome, cuz these are extremely annoying.

56
00:04:16.537 --> 00:04:21.654
&gt;&gt; Brian Holt: So now that we have that,
let's go make sure that if

57
00:04:21.654 --> 00:04:27.128
we say npm run lint that it
works the way that we expect it

58
00:04:27.128 --> 00:04:32.321
to
&gt;&gt; Brian Holt: That

59
00:04:32.321 --> 00:04:34.134
was one thing I forgot to do.

60
00:04:34.134 --> 00:04:35.858
Package.js on here.

61
00:04:35.858 --> 00:04:42.068
I think you have to save project.,
did I miss that?

62
00:04:42.068 --> 00:04:43.740
Yeah, so sorry.

63
00:04:43.740 --> 00:04:45.275
Here in lint on line nine.

64
00:04:45.275 --> 00:04:48.310
Lint:tslint--project.

65
00:04:48.310 --> 00:04:50.800
You need to tell it where the project is.

66
00:04:50.800 --> 00:04:54.360
And the project is in the same
directory that tslin exists in.

67
00:04:56.430 --> 00:04:59.510
So now if you say mpm
run lint should work.

68
00:05:00.680 --> 00:05:02.840
We have no errors because we
have one typescript file,

69
00:05:02.840 --> 00:05:05.009
it's only going to check typescript files.

70
00:05:06.080 --> 00:05:08.989
But since we already did that one
correctly, we're golden on that.

