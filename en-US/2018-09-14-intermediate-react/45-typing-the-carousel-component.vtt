WEBVTT

1
00:00:00.593 --> 00:00:05.014
&gt;&gt; Brian Holt: So let's go do carousel.tsx
so now we can import this from carousel.

2
00:00:05.014 --> 00:00:10.234
So carousel and we're going to make

3
00:00:10.234 --> 00:00:15.634
this rename here, Carousel.tsx.

4
00:00:20.083 --> 00:00:24.787
&gt;&gt; Brian Holt: So up here we're going to

5
00:00:24.787 --> 00:00:30.389
import PetMedia and PetPhoto

6
00:00:30.389 --> 00:00:36.671
from petfinder-client class.

7
00:00:36.671 --> 00:00:39.880
Okay, now we have to
inform React component,

8
00:00:39.880 --> 00:00:42.692
like this expects to get media as props.

9
00:00:42.692 --> 00:00:48.329
So we're gonna say interface Props.

10
00:00:48.329 --> 00:00:54.666
Media is going to be a PetMedia.
&gt;&gt; Brian Holt: Okay,

11
00:00:54.666 --> 00:00:59.740
and then we're gonna
say interface State is

12
00:00:59.740 --> 00:01:04.549
going to be, active is gonna be a number.

13
00:01:04.549 --> 00:01:10.047
And photos is gonna be
an array of pet photo,

14
00:01:10.047 --> 00:01:17.167
PetPhoto.
&gt;&gt; Brian Holt: And that should be comma.

15
00:01:17.167 --> 00:01:21.379
Okay, and then we just pass into React
to say, hey, keep track of these.

16
00:01:21.379 --> 00:01:24.243
So this is gonna be props, state.

17
00:01:24.243 --> 00:01:25.637
So props always comes first and

18
00:01:25.637 --> 00:01:30.092
then state.
&gt;&gt; Brian Holt: And so

19
00:01:30.092 --> 00:01:34.692
now it knows everywhere is like this
has to get PetMedia as props and

20
00:01:34.692 --> 00:01:39.143
if I try to, somewhere else use
a carousel and not give it media.

21
00:01:39.143 --> 00:01:41.712
TypeScript's gonna say,
hey I expected those props.

22
00:01:41.712 --> 00:01:45.265
So I'm not gonna let you compile
until you give me those props.

23
00:01:47.633 --> 00:01:50.118
&gt;&gt; Brian Holt: Okay public state,

24
00:01:50.118 --> 00:01:54.064
public state, public static,

25
00:01:54.064 --> 00:01:59.180
I feel like i'm writing Java, public and

26
00:01:59.180 --> 00:02:07.477
public.
&gt;&gt; Brian Holt: Okay, and then add state.

27
00:02:17.480 --> 00:02:19.797
&gt;&gt; Brian Holt: So the one thing it's gonna

28
00:02:19.797 --> 00:02:24.618
be mad at next is,
&gt;&gt; Brian Holt: Yeah,

29
00:02:24.618 --> 00:02:30.240
getDeriveStateFromProps, so
what is this object gonna be right here?

30
00:02:30.240 --> 00:02:33.576
It's gonna be the same
type as Props right?

31
00:02:33.576 --> 00:02:38.200
Because it literally is Props, so
you just have to say hey this is Props.

32
00:02:42.137 --> 00:02:45.543
&gt;&gt; Brian Holt: Photos here, this is gonna

33
00:02:45.543 --> 00:02:52.827
be an array of PetPhoto.
&gt;&gt; Brian Holt: Right,

34
00:02:52.827 --> 00:02:54.970
so that's what this colon stuff here is.

35
00:02:54.970 --> 00:02:58.546
It's letting it know ahead
of time that this in array,

36
00:02:58.546 --> 00:03:01.910
but this is the only thing
I can stick in this array.

37
00:03:01.910 --> 00:03:04.264
So if I try and

38
00:03:04.264 --> 00:03:11.443
do photos.push
&gt;&gt; Brian Holt: (5), it's gonna say hey you

39
00:03:11.443 --> 00:03:15.285
can't do that, this isn't full of numbers,
like get that business out of here.

40
00:03:15.285 --> 00:03:21.080
This is only for pet photos.
&gt;&gt; Brian Holt: So

41
00:03:21.080 --> 00:03:23.285
this forces you to really
think through your types and

42
00:03:23.285 --> 00:03:29.559
be deliberate about this kind of thing.
&gt;&gt; Brian Holt: Okay

43
00:03:29.559 --> 00:03:31.893
handle click index here.

44
00:03:31.893 --> 00:03:33.168
This is an event.

45
00:03:33.168 --> 00:03:34.580
And you'll get used to doing this.

46
00:03:34.580 --> 00:03:37.854
Parameters you have to type because
it doesn't know what to expect this.

47
00:03:37.854 --> 00:03:40.460
And I've turned it on to
the fact that it's strict so

48
00:03:40.460 --> 00:03:42.248
it doesn't allow any types right?

49
00:03:42.248 --> 00:03:44.713
So right now it says like,
I don't know what this is going to be, so

50
00:03:44.713 --> 00:03:47.154
I'm gonna let it be anything,
I'm not going to type check this.

51
00:03:47.154 --> 00:03:48.980
Which is not what we want,

52
00:03:48.980 --> 00:03:53.388
that's kind of the defeating
the purpose of type script here.

53
00:03:53.388 --> 00:03:58.128
So, what I'm going to
do is I'm going to say,

54
00:03:58.128 --> 00:04:01.423
event is a React.MouseEvent.

55
00:04:01.423 --> 00:04:04.131
And this is an html
element coming from it,

56
00:04:04.131 --> 00:04:11.285
right?
&gt;&gt; Brian Holt: So

57
00:04:11.285 --> 00:04:14.718
it's saying this is a mouse
event coming from React, and

58
00:04:14.718 --> 00:04:17.802
that the target of it is
going to be an html element.

59
00:04:17.802 --> 00:04:23.034
The next thing inside of
here is I have to say,

60
00:04:23.034 --> 00:04:29.388
if event.target is not
an instant of an HTMLElement.

61
00:04:29.388 --> 00:04:36.309
So if event.target instanceof

62
00:04:36.309 --> 00:04:41.183
HTMLElement return.

63
00:04:58.809 --> 00:05:00.148
&gt;&gt; Brian Holt: What did I do wrong here?

64
00:05:04.062 --> 00:05:07.497
&gt;&gt; Brian Holt: public handleIndexClick

65
00:05:07.497 --> 00:05:14.214
event is of an React.MouseEvent
of HTMLElement.

66
00:05:14.214 --> 00:05:18.170
If event.target.
&gt;&gt; Speaker 2: You have to apply that not

67
00:05:18.170 --> 00:05:20.921
operator to just event.target?
&gt;&gt; Brian Holt: That's right,

68
00:05:20.921 --> 00:05:25.427
thank you.
&gt;&gt; Brian Holt: So you have to wrap

69
00:05:25.427 --> 00:05:30.844
the whole thing in parentheses.
&gt;&gt; Brian Holt: There

70
00:05:30.844 --> 00:05:38.028
you go.
&gt;&gt; Brian Holt: And

71
00:05:38.028 --> 00:05:42.429
inside of here, we have no promise
that index is gonna be defined.

72
00:05:42.429 --> 00:05:44.577
So here we have to be defensive of that,
too.

73
00:05:44.577 --> 00:05:52.465
So if(event.target.dataset.index),

74
00:05:54.935 --> 00:05:55.662
&gt;&gt; Brian Holt: And move that inside

75
00:05:55.662 --> 00:06:00.179
of there.
&gt;&gt; Brian Holt: So as you can see,

76
00:06:00.179 --> 00:06:01.914
this ends up being a little more code.

77
00:06:01.914 --> 00:06:06.477
It's a lot more defensive, but
this comes at the guarantee that

78
00:06:06.477 --> 00:06:10.920
this is not gonna crash.
&gt;&gt; Brian Holt: I think that's

79
00:06:10.920 --> 00:06:15.824
pretty compelling.
&gt;&gt; Brian Holt: And

80
00:06:15.824 --> 00:06:17.515
thus we have finished carousel.

81
00:06:17.515 --> 00:06:19.007
Now carousel's fully typed.

82
00:06:19.007 --> 00:06:21.331
Everything else it can just infer, right?

83
00:06:21.331 --> 00:06:25.001
But what is value here?

84
00:06:25.001 --> 00:06:30.803
Value does not exist on type never.
&gt;&gt; Brian Holt: So

85
00:06:30.803 --> 00:06:33.348
let's look at, what is photo?

86
00:06:33.348 --> 00:06:40.492
Photo is a PetPhoto.
&gt;&gt; Brian Holt: There you go,

87
00:06:40.492 --> 00:06:44.599
so you have to type that as well.
&gt;&gt; Brian Holt: And

88
00:06:44.599 --> 00:06:48.213
it already knows index is a number because
this is a map and that's already typed.

