[00:00:00]
>> So if you hop into the website for the course, which is at frontendmasters.github.io/grid-flexbox-v2, take a look at the Flexbox Introduction item, that's the first one on the list there. I just went through the slides that are there, so you have a copy of the slides. We're gonna come back and revisit those momentarily when we talk about flexbox grid.

[00:00:27]
And then what we're gonna look at next is the starting CodePen. So let's go on ahead and code, and we're gonna start with this particular CodePen, the link is there inside of the website. So what I have here is some very simple HTML and some starting CSS. So let's see what we've got here to get us started and then we can look at each of these flexbox properties independently.

[00:00:52]
Part of the problem is that we all wanna rush into making beautiful web pages without understanding all of the properties and values that are available to us. So if you build a little system like this, that isn't supposed to be pretty, that's supposed to simply demonstrate those properties to you, you'll get a much better sense of how all of these things work.

[00:01:11]
So here in my HTML, I have a bulleted list, a UL followed by a bunch of LIs and I have only two classes in here, on the second and the fifth bullet, I have a class of flex2. Some of these bullets have numbers, some of them have a little bit of text, okay.

[00:01:29]
So very, very simple HTML to work with. In our CSS, we have this set up a little bit differently. First of all, we start with the border-box model. If you're not familiar with the border-box, the way CSS is configured, it starts off with a so-called content box, and it has to do with how we determine the value of the CSS property width.

[00:01:52]
Are we going to include the width of the border and the width of the padding plus the width of the content to determine the value of that property called width? Or are we just gonna say it's the width of the content itself? So content-box says, the width of the content itself is the value of the width property.

[00:02:13]
The border-box says, let's include the border and the padding as well to determine the value of width, and it is much easier for math if you use the border-box. And so this is the declaration that you use, you simply say the box sizing is border-box. It doesn't inherit by default.

[00:02:31]
So the next declaration you say universally, the entire universe and everything that comes before the universe and after it, inherit the box sizing. And then you don't have to worry about it, okay. After that, we just have a body declaration, we declared a font, we removed the margin and padding.

[00:02:52]
Some browsers have margin, some browsers have padding. It's responsible for the tiny little box you see around the edges of web pages if they don't go all the way out to the edges of the screen. This is the reason why, add your margin and padding, zero those out, and we set a font size.

[00:03:09]
And then here in the UL, we've turned off our padding, we put in a little bit of margin to make it look pretty and a border, we gave it a width and a height. And then finally down here in our LI, we've set up a border, a background color, a min width and a height.

[00:03:26]
So pretty standard stuff, nothing exciting here so far.

