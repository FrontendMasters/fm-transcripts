WEBVTT

1
00:00:00.090 --> 00:00:02.957
So if we had came up
with a prime directive,

2
00:00:02.957 --> 00:00:08.080
I would say that only one image should
load even if many are specified.

3
00:00:08.080 --> 00:00:12.552
So this is the big problem back in the
earlier days of responsive images where we

4
00:00:12.552 --> 00:00:17.780
used to line up a whole bunch of image
tags and we'd set some display properties.

5
00:00:17.780 --> 00:00:20.940
All of those images would typically
load and we'd display one of them.

6
00:00:20.940 --> 00:00:24.490
So we actually made situations worse for
ourselves.

7
00:00:24.490 --> 00:00:29.426
So whatever solution you have, however
many images you're may choose from to

8
00:00:29.426 --> 00:00:33.410
display on the web page,
we only want one of them to load.

9
00:00:33.410 --> 00:00:37.009
So that is the thing to always keep in
mind as you look at responsive design

10
00:00:37.009 --> 00:00:37.659
solutions.

11
00:00:39.620 --> 00:00:43.666
So, here's an example of the bad code
that I was talking about here just

12
00:00:43.666 --> 00:00:44.870
a moment ago.

13
00:00:44.870 --> 00:00:48.183
We used to do this in bootstrap
back in some of the early versions,

14
00:00:48.183 --> 00:00:49.530
we would have a div.

15
00:00:49.530 --> 00:00:53.152
inside of it, we'd have two images,
we give them classes, and

16
00:00:53.152 --> 00:00:56.910
then we'd use display none to turn on and
off those images.

17
00:00:56.910 --> 00:01:01.267
Even if they're set to display none, both
of these images are going to load you've

18
00:01:01.267 --> 00:01:03.709
actually made your web
page load more slowly.

19
00:01:03.709 --> 00:01:08.280
Than you would have if you just stuck
with one image and just reframed it.

20
00:01:08.280 --> 00:01:13.620
So, don't do this,
don't do this bad code, okay.

21
00:01:13.620 --> 00:01:17.759
Other code you can use cautiously so you
have seen me use all the way up to this

22
00:01:17.759 --> 00:01:20.570
point in the course and going forward.

23
00:01:20.570 --> 00:01:22.810
You have seen me do this.

24
00:01:22.810 --> 00:01:26.916
We have an image on the page,
we set the width to 100%.

25
00:01:26.916 --> 00:01:30.600
And you can throw a max width on top
of that too if you don't want it to get

26
00:01:30.600 --> 00:01:33.117
bigger than a certain
point that's optional.

27
00:01:33.117 --> 00:01:38.051
But what this will do is give your image
flexibility within the space, okay?

28
00:01:38.051 --> 00:01:42.503
The problem here is that you have one
image that loads regardless of what device

29
00:01:42.503 --> 00:01:45.952
you're using,
regardless of the speed of the connection.

30
00:01:45.952 --> 00:01:50.666
And that is going to cause
potentially a very large image to

31
00:01:50.666 --> 00:01:54.046
download to a mobile device for example.

32
00:01:54.046 --> 00:01:58.896
And so this works if you're working
with small images that are already

33
00:01:58.896 --> 00:02:00.300
small in file size.

34
00:02:00.300 --> 00:02:03.810
In other words, you don't have
to use responsive image code for

35
00:02:03.810 --> 00:02:06.580
every image that ever was on your webpage.

36
00:02:06.580 --> 00:02:10.396
It takes a lot of time and
effort to put this stuff together.

37
00:02:10.396 --> 00:02:14.780
And quite frankly, sometimes it's just
not needed if they're small images and

38
00:02:14.780 --> 00:02:16.595
they are a reasonable file size.

39
00:02:16.595 --> 00:02:19.052
And you're getting good
performance out of your webpage,

40
00:02:19.052 --> 00:02:21.440
don't take the time to
do responsive image.

41
00:02:21.440 --> 00:02:23.090
This may be the right solution for you.

42
00:02:25.260 --> 00:02:28.870
So let's talk about those two different
possible approaches that you have.

43
00:02:28.870 --> 00:02:31.220
The first one is the picture tag.

44
00:02:31.220 --> 00:02:33.630
And so
this one lets you the webpage author,

45
00:02:33.630 --> 00:02:36.576
decide which image displays
under which condition.

46
00:02:36.576 --> 00:02:41.670
And this is the one that I talked about
on the previous version of this course.

47
00:02:41.670 --> 00:02:46.300
So, let's say that you have this lovely
picture of the hot air balloons again.

48
00:02:46.300 --> 00:02:49.600
So what you might do is art direction.

49
00:02:50.700 --> 00:02:54.459
You have various pieces of this that
you might wanna display under different

50
00:02:54.459 --> 00:02:55.630
conditions.

51
00:02:55.630 --> 00:03:00.019
Just taking this giant image and
scaling down to something small for

52
00:03:00.019 --> 00:03:03.024
a small device results
in this as you see here.

53
00:03:03.024 --> 00:03:06.480
And you lose a lot of
detail out of that image.

54
00:03:06.480 --> 00:03:10.748
So a better approach is to do the art
direction which means let's crop it and

55
00:03:10.748 --> 00:03:13.340
pick out the important
parts of the picture.

56
00:03:13.340 --> 00:03:16.230
Maybe it's this these two
balloons that are here together.

57
00:03:16.230 --> 00:03:19.335
Or maybe you actually want to put the
focus somewhere else that the flattened

58
00:03:19.335 --> 00:03:20.888
balloon that's there on the ground,

59
00:03:20.888 --> 00:03:23.670
you might not have even
noticed that that was there.

60
00:03:23.670 --> 00:03:28.226
So, using this technique of art direction,
you're going to go to Photoshop or

61
00:03:28.226 --> 00:03:31.150
whatever tool you're using for
cropping images.

62
00:03:31.150 --> 00:03:36.095
And you'll create those alternative
versions of the image yourself outside of

63
00:03:36.095 --> 00:03:36.839
your code.

64
00:03:36.839 --> 00:03:41.859
Then you're gonna drop that into your
HTML, and it's gonna look like this,

65
00:03:41.859 --> 00:03:45.723
you have a picture element that
goes all the way around it and

66
00:03:45.723 --> 00:03:49.064
then you're gonna make use
of the source element.

67
00:03:49.064 --> 00:03:51.944
If you're familiar with the audio and
video elements,

68
00:03:51.944 --> 00:03:53.975
the source element is familiar to you.

69
00:03:53.975 --> 00:03:57.793
You can have as many of these
source element as you want,

70
00:03:57.793 --> 00:04:00.158
they stack one on top of the other.

71
00:04:00.158 --> 00:04:04.302
And they contain a source for
the image and they contain a media query.

72
00:04:04.302 --> 00:04:09.092
And the media query says, under
whatever conditions you want that you'd

73
00:04:09.092 --> 00:04:14.040
like this particular image to load,
the media query is optional.

74
00:04:14.040 --> 00:04:17.260
You could use this in other ways
I'll show you in just a moment.

75
00:04:18.410 --> 00:04:21.020
But that is the typical way that
the picture element is used.

76
00:04:22.180 --> 00:04:25.368
And then you can provide
an alternative image in this case,

77
00:04:25.368 --> 00:04:27.620
this is the smaller version of the image.

78
00:04:27.620 --> 00:04:34.614
And that will load either when
the picture element is not supported,

79
00:04:34.614 --> 00:04:41.530
so you're on an old version of IE or
when this is the default image.

80
00:04:41.530 --> 00:04:46.228
So none of the media queries
are satisfied so this other image loads.

81
00:04:46.228 --> 00:04:50.570
In this particular code If your
screen was less than 850 pixels,

82
00:04:50.570 --> 00:04:53.300
you'd get the smaller image.

83
00:04:53.300 --> 00:04:58.080
You can also do this with
different media queries.

84
00:04:58.080 --> 00:05:02.647
So here I've said, load this first one
if the orientation is landscape so

85
00:05:02.647 --> 00:05:07.302
let me say a little bit about media
query with an orientation of landscape.

86
00:05:07.302 --> 00:05:13.073
Landscape and portrait just like you've
used in print for years landscape

87
00:05:13.073 --> 00:05:18.306
is wider than tall portraits the other
way around taller than wide.

88
00:05:18.306 --> 00:05:24.036
When you are talking about this,
you are not talking about your phone,

89
00:05:24.036 --> 00:05:29.014
in portrait or landscape that
is not what we are referring to.

90
00:05:29.014 --> 00:05:34.593
We are actually referring to dimensions
here so if the window the browser window

91
00:05:34.593 --> 00:05:39.935
the window of the device is wider than
it is tall it is considered landscape.

92
00:05:39.935 --> 00:05:44.614
If it is taller than wide,
then that's considered portrait so

93
00:05:44.614 --> 00:05:49.668
it doesn't have anything to do with
the orientation of the device.

94
00:05:49.668 --> 00:05:52.150
So in this case,
if it is wider than it is tall,

95
00:05:52.150 --> 00:05:55.280
we're gonna get the larger
version of the picture.

96
00:05:55.280 --> 00:05:59.970
Or maybe we'll get the skinnier version
art direction picture here that shows

97
00:05:59.970 --> 00:06:02.610
a very different kind
of view of this image.

98
00:06:04.930 --> 00:06:10.413
You can also use this type of element if
you want to make use of WebP images for

99
00:06:10.413 --> 00:06:12.180
example.

100
00:06:12.180 --> 00:06:15.289
Those are supposed to be very good for
Image optimization,

101
00:06:15.289 --> 00:06:18.470
they're a brand new format that
are coming out from Google.

102
00:06:18.470 --> 00:06:21.137
They're supposed to be really good for
compression and

103
00:06:21.137 --> 00:06:23.702
communicating more information and
less disk size.

104
00:06:23.702 --> 00:06:28.896
So you really wanna make use of your
WebP images for performance reasons.

105
00:06:28.896 --> 00:06:33.682
But you wanna provide a PNG in case
the browser doesn't support web WebP

106
00:06:33.682 --> 00:06:34.490
excuse me.

107
00:06:34.490 --> 00:06:37.232
So here we've got two versions.

108
00:06:37.232 --> 00:06:42.331
We've got the, the WebP version we
have a different version that's a PNG,

109
00:06:42.331 --> 00:06:44.257
and then we have a fallback.

110
00:06:44.257 --> 00:06:48.940
That might be something smaller,
it's just a regular old JPEG, okay?

111
00:06:51.360 --> 00:06:54.796
But there's a lot of things that pictures
forget about responsive elements

112
00:06:54.796 --> 00:06:55.990
along the way.

113
00:06:55.990 --> 00:07:00.670
So it forgets to tell the browser things
like how big is the image location that

114
00:07:00.670 --> 00:07:02.390
hole in the page layout.

115
00:07:02.390 --> 00:07:06.806
Remember that the browser is gonna load
from the top of the page going on down.

116
00:07:06.806 --> 00:07:10.954
When it hits that image, if it doesn't
know how big of a space to leave for

117
00:07:10.954 --> 00:07:14.898
it, it's gonna wait until it downloads
the picture before it starts

118
00:07:14.898 --> 00:07:17.090
downloading the rest of the web page.

119
00:07:17.090 --> 00:07:21.362
So if we tell it how big that hole should
be, then the browser knows to save

120
00:07:21.362 --> 00:07:25.160
that much space and it will continue
to download it feel faster.

121
00:07:26.640 --> 00:07:32.830
How big are the images or
the peg that fits into that that hole?

122
00:07:32.830 --> 00:07:35.410
How big are those images
that might be displayed?

123
00:07:35.410 --> 00:07:38.098
So we have the size, the image,
the size of the hole, and

124
00:07:38.098 --> 00:07:40.010
what is the pixel density of the screen.

125
00:07:40.010 --> 00:07:42.751
These are things that
the browser doesn't know,

126
00:07:42.751 --> 00:07:45.830
as it's waiting for
these pictures to download.

127
00:07:45.830 --> 00:07:50.445
So you could compensate for that you
could write this piece of code with all

128
00:07:50.445 --> 00:07:54.018
of these different media queries,
with min-widths and

129
00:07:54.018 --> 00:07:59.400
max-widths device pixel ratios and all the
rest of it, I don't have time for this.

130
00:07:59.400 --> 00:08:00.586
I don't know about you, but

131
00:08:00.586 --> 00:08:03.800
I have better things to do than
to write this kind of HTML.

132
00:08:03.800 --> 00:08:06.630
So that is a possibility
[LAUGH] you could do this,

133
00:08:06.630 --> 00:08:08.710
I think it'd be a little bit crazy.

134
00:08:10.220 --> 00:08:13.590
So this is where srcset and sizes come in.

135
00:08:13.590 --> 00:08:16.429
But, potentially, the downside to this is

136
00:08:16.429 --> 00:08:20.819
that the browser is going to decide
which image is going to display.

137
00:08:20.819 --> 00:08:25.407
So with picture you have total control,
but then you might wind up writing some

138
00:08:25.407 --> 00:08:29.660
crazy HTML in order to get the right
image displaying at the right place.

139
00:08:29.660 --> 00:08:35.448
Here you're gonna write much less HTML,
but you leave it to the browser to decide.

140
00:08:35.448 --> 00:08:40.406
So as Eric Kortis, describes in his
article here, I've cited it here,

141
00:08:40.406 --> 00:08:42.860
I encourage you to go and read this.

142
00:08:42.860 --> 00:08:45.363
He does a great job explaining this stuff.

143
00:08:45.363 --> 00:08:48.628
He says what the author knows
as they write the web page and

144
00:08:48.628 --> 00:08:51.704
what the browser knows as
it's loading the web page.

145
00:08:51.704 --> 00:08:54.123
And if you notice they're sort of
staggered in terms of their yes and no.

146
00:08:54.123 --> 00:08:58.453
So now in terms of viewport dimensions,
and screen density and source files and so

147
00:08:58.453 --> 00:09:00.980
forth, they stagger on down here.

148
00:09:00.980 --> 00:09:07.163
So what srcset and sizes do, they work
together to tell the browser everything

149
00:09:07.163 --> 00:09:12.980
it needs to know to make its best decision
as to which image it should load.

150
00:09:12.980 --> 00:09:15.480
Okay, so it's gonna tell all that.

151
00:09:15.480 --> 00:09:20.063
But remember, once again,
I'm gonna say this like 1000 times,

152
00:09:20.063 --> 00:09:24.910
the browser gets to decide and
it may not decide what you think is best.

153
00:09:24.910 --> 00:09:28.600
So if you're a control freak,
the picture element is totally for you.

154
00:09:28.600 --> 00:09:32.301
But if you're willing to give it up
to write less code, then srcset and

155
00:09:32.301 --> 00:09:33.950
sizes may be a better way to go.

156
00:09:35.380 --> 00:09:40.072
All right, so as I said, one more time,
the browser decides which image is going

157
00:09:40.072 --> 00:09:43.890
to load and
it may not load the image that you expect.

158
00:09:43.890 --> 00:09:47.670
Also different browsers may
make different choices.

159
00:09:47.670 --> 00:09:48.990
That's the crazy part.

160
00:09:48.990 --> 00:09:52.710
So what Firefox decides to do may be
different than what Chrome decides to do.

161
00:09:53.870 --> 00:09:58.699
&gt;&gt; Can I somehow put a picture when
the same images used in like a variable

162
00:09:58.699 --> 00:10:03.900
instead of repeating the entire
path over and over and over again.

163
00:10:03.900 --> 00:10:07.010
&gt;&gt; Well, this is HTML, not CSS.

164
00:10:07.010 --> 00:10:11.005
So I don't think you can do I mean maybe
you could do something with JavaScript but

165
00:10:11.005 --> 00:10:12.140
not in straight HTML.

166
00:10:15.480 --> 00:10:18.894
In fact, for that matter where's
the stuff gonna come from?

167
00:10:18.894 --> 00:10:21.913
Most likely you're not gonna write it
in straight HTML, it's gonna come off

168
00:10:21.913 --> 00:10:24.990
the server or you're probably going to
do something with JavaScript anyway.

169
00:10:26.350 --> 00:10:29.050
But I'm talking straight HTML here today.

170
00:10:31.040 --> 00:10:34.210
All right, so this was what the srcset and
sizes code winds up looking like.

171
00:10:34.210 --> 00:10:39.460
It's like this and so let's walk
through what this code is line by line.

172
00:10:39.460 --> 00:10:44.250
So first of all, the image tag,
you know and love.

173
00:10:44.250 --> 00:10:49.293
So you have your image source and
you have your alt text always.

174
00:10:49.293 --> 00:10:52.030
And that's gonna be the same
regardless of what image loads.

175
00:10:52.030 --> 00:10:55.648
So this is why you're gonna
use the same image and

176
00:10:55.648 --> 00:11:00.350
let the browser choose so
there's no art direction here.

177
00:11:00.350 --> 00:11:04.590
There's no different images that
might require different alt texts,

178
00:11:04.590 --> 00:11:06.366
all the same alt text, okay?

179
00:11:06.366 --> 00:11:10.786
This part in the middle are the file
names and then next to it is something

180
00:11:10.786 --> 00:11:15.940
like 1024w that is the width in
pixels of that particular image.

181
00:11:15.940 --> 00:11:23.470
So here we've got three possible options,
small.jpg is the default with the srcset.

182
00:11:23.470 --> 00:11:27.695
We have a 1024, 6040 and a 320 pixels.

183
00:11:27.695 --> 00:11:31.481
So it's kinda like in the old days
when you used to put in the width and

184
00:11:31.481 --> 00:11:35.412
your image tag you said width of 1024,
that was 1024 pixels.

185
00:11:35.412 --> 00:11:39.570
And then sizes is
the hole in the web page.

186
00:11:39.570 --> 00:11:44.302
So what this bit of code here says is,
if the minimum width is at

187
00:11:44.302 --> 00:11:49.690
least 36m then display the image
at 33.3 viewport widths.

188
00:11:49.690 --> 00:11:52.570
Otherwise, display the width
at 100 viewport widths.

189
00:11:52.570 --> 00:11:55.120
That's what that one a code means, okay?

190
00:11:57.290 --> 00:12:00.967
So that's the way you would
set up a code for srcset and

191
00:12:00.967 --> 00:12:03.270
sizesand you use them together.

192
00:12:05.730 --> 00:12:10.138
You might think this is a great way
to deal with retina images as well or

193
00:12:10.138 --> 00:12:12.450
other pixel dense images.

194
00:12:12.450 --> 00:12:16.985
It as Eric, Kortis points out in his
article here, this one's at a list apart.

195
00:12:16.985 --> 00:12:21.385
It's a nice compact way to supply high
DPI imagery but it only works for

196
00:12:21.385 --> 00:12:23.085
fixed width images.

197
00:12:23.085 --> 00:12:25.736
So if your image is going
to change dimensions or

198
00:12:25.736 --> 00:12:29.402
if it's going to flex using that
width of 100% or something.

199
00:12:29.402 --> 00:12:33.322
This type of code is not going to work for
that, but it is,

200
00:12:33.322 --> 00:12:35.714
another possible syntax, okay?

201
00:12:38.082 --> 00:12:41.970
And you can combine these, which is
probably the next question somebody had.

202
00:12:41.970 --> 00:12:44.840
So you have the picture tag inside of it.

203
00:12:44.840 --> 00:12:47.963
You can have your individual
source elements and

204
00:12:47.963 --> 00:12:52.240
then each of those can have srcset and
sizes associated with them.

205
00:12:52.240 --> 00:12:55.332
So this is an example of how that
code might look if you wanted to

206
00:12:55.332 --> 00:12:56.525
combine these things.

207
00:12:59.513 --> 00:13:04.536
All right, notice here that in
the source media this particular

208
00:13:04.536 --> 00:13:11.010
example that I got was from was was of
using the aspect ratio in the media query.

209
00:13:11.010 --> 00:13:15.471
So in other words, if it's a 16 by nine
screen we're gonna learn one set of images

210
00:13:15.471 --> 00:13:18.170
but if it's a one by one or square.

211
00:13:18.170 --> 00:13:21.364
Type of screen we're gonna load
different types of images.

212
00:13:24.026 --> 00:13:24.526
Okay.

213
00:13:26.912 --> 00:13:28.250
So what should you use?

214
00:13:30.570 --> 00:13:32.240
Here's the big summary.

215
00:13:32.240 --> 00:13:36.654
So if you're on a picture tag you're
going to use the image is optimised for

216
00:13:36.654 --> 00:13:39.750
content reasons,
rather than technical reasons.

217
00:13:39.750 --> 00:13:43.723
So the content of that image is far
more important than the technical

218
00:13:43.723 --> 00:13:46.030
considerations of speed of download.

219
00:13:47.430 --> 00:13:51.091
And then, of course, for srcset and
sizes, it's the other way around there.

220
00:13:51.091 --> 00:13:55.731
We're gonna have the technical reasons for
downloading a particular image trump,

221
00:13:55.731 --> 00:13:57.177
whatever is in the image.

222
00:13:57.177 --> 00:14:00.450
For the picture,
the author is gonna choose the best image.

223
00:14:00.450 --> 00:14:03.360
The browser is gonna choose
it under src and srcset.

224
00:14:03.360 --> 00:14:06.455
And the images may be varied
in different composition and

225
00:14:06.455 --> 00:14:08.550
dimension on the picture tag.

226
00:14:08.550 --> 00:14:12.901
But they should probably
all be the same on src and

227
00:14:12.901 --> 00:14:17.400
srcset, that's the wrong srcset and sizes.

228
00:14:17.400 --> 00:14:20.392
And that's because the browser is gonna

229
00:14:20.392 --> 00:14:24.088
choose which image is going
to be used on the page,

230
00:14:24.088 --> 00:14:29.902
you probably don't wanna have a variation
of the composition of the picture.

231
00:14:29.902 --> 00:14:34.097
So finally, let me also just mention here
real quick as we go forward background

232
00:14:34.097 --> 00:14:36.660
images can also be responsive.

233
00:14:36.660 --> 00:14:40.416
What you want to do in order to make your
background images be sure that only one of

234
00:14:40.416 --> 00:14:44.135
them loads is that you want to contain
your background images in a media query.

235
00:14:44.135 --> 00:14:48.481
Another words you're never gonna
have as we have done many times now,

236
00:14:48.481 --> 00:14:49.448
to this point.

237
00:14:49.448 --> 00:14:52.833
We have some styles that
are outside of the media query,

238
00:14:52.833 --> 00:14:55.010
that tend to be mobile in nature.

239
00:14:55.010 --> 00:14:59.937
You're never ever gonna put background
images out in that particular part of

240
00:14:59.937 --> 00:15:01.160
your style sheet.

241
00:15:01.160 --> 00:15:06.329
The background images are always gonna
be inside of some kind of media query so

242
00:15:06.329 --> 00:15:10.230
that only one image will
load under those conditions.

243
00:15:10.230 --> 00:15:14.645
Remember, we're the only crazy people that
do this stuff with our browser windows and

244
00:15:14.645 --> 00:15:16.850
cause lots of images to download.

245
00:15:16.850 --> 00:15:20.103
Most people just open their browser
window and read web pages and so

246
00:15:20.103 --> 00:15:23.485
only one background image should
download under those conditions.

247
00:15:26.452 --> 00:15:29.340
Okay, that's all those points.

248
00:15:29.340 --> 00:15:31.060
And so here's an example of that.

249
00:15:31.060 --> 00:15:33.540
We have a media query
with a max width of 700.

250
00:15:33.540 --> 00:15:34.998
It's gonna download this, but

251
00:15:34.998 --> 00:15:38.200
if it has a minimum width of 701
will download a different image.

252
00:15:38.200 --> 00:15:39.920
That's what that code would
wind up looking like.

