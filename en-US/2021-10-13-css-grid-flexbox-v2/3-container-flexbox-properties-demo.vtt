WEBVTT

1
00:00:00.250 --> 00:00:03.012
So let's start putting this into Flexbox.

2
00:00:03.012 --> 00:00:05.443
And I'm going to start here with the UL.

3
00:00:05.443 --> 00:00:10.011
The important thing to remember is that
the UL is going to be the parent or

4
00:00:10.011 --> 00:00:11.927
the flex container, right?

5
00:00:11.927 --> 00:00:13.555
So that is the outside box.

6
00:00:13.555 --> 00:00:18.020
All of these allies,
they're children of that UL.

7
00:00:18.020 --> 00:00:24.651
So the LI are flex items, the UL is
the flex container or the parent.

8
00:00:24.651 --> 00:00:27.460
And that's gonna drive a whole
bunch of these properties.

9
00:00:27.460 --> 00:00:29.727
So we'll start here with the UL.

10
00:00:29.727 --> 00:00:35.217
And we'll set it up to display flex.

11
00:00:35.217 --> 00:00:41.872
And immediately that is going to put
all of our boxes here on one line.

12
00:00:45.375 --> 00:00:46.446
Just like that.

13
00:00:46.446 --> 00:00:49.659
And you see here that my box
has some height set to it.

14
00:00:49.659 --> 00:00:53.387
Because I set my ul to have
a height of 500 pixels.

15
00:00:53.387 --> 00:00:55.283
And so there it is.

16
00:00:55.283 --> 00:00:59.068
And now all my boxes are here
all together in one line.

17
00:00:59.068 --> 00:01:02.061
Make note of the fact that
the boxes are of different sizes.

18
00:01:02.061 --> 00:01:03.108
How big are they?

19
00:01:03.108 --> 00:01:06.681
I set a min width of 100 pixels and
I set a height of 100 pixels.

20
00:01:06.681 --> 00:01:12.143
And so the minimum size of these boxes is
going to be 100 pixels by a 100 pixels.

21
00:01:12.143 --> 00:01:18.093
And I did that just so that you would be
able to see this a little bit better.

22
00:01:18.093 --> 00:01:23.495
If you take that out the min width and
the middle height here you'll

23
00:01:23.495 --> 00:01:28.726
see even more strikingly that
these boxes can get quite narrow.

24
00:01:28.726 --> 00:01:32.895
They're as big as they're content by
default if we don't have the min height

25
00:01:32.895 --> 00:01:34.125
and the min width set.

26
00:01:34.125 --> 00:01:36.780
And that is the flexible boxes.

27
00:01:36.780 --> 00:01:40.457
So they gonna try to themselves into
this space as much as possible.

28
00:01:40.457 --> 00:01:47.850
The next thing to look at is flex,
direction.

29
00:01:47.850 --> 00:01:52.834
And this property you may not see us
that much because many people will put

30
00:01:52.834 --> 00:01:54.149
it with flex flow.

31
00:01:54.149 --> 00:02:01.220
But flex direction and flex wrap are the
two that form the flex flow property.

32
00:02:01.220 --> 00:02:04.029
so here we can have a direction of row.

33
00:02:04.029 --> 00:02:05.350
That's what it is by default.

34
00:02:05.350 --> 00:02:08.258
We won't see any change
when I put that in.

35
00:02:08.258 --> 00:02:11.971
We can change that two column.

36
00:02:11.971 --> 00:02:15.630
And everything will stack on top
of each other at that point.

37
00:02:16.740 --> 00:02:18.234
We can also reverse these.

38
00:02:18.234 --> 00:02:23.440
So we could say row reverse, And

39
00:02:23.440 --> 00:02:27.708
we'll wind up going from six to one
instead of from one to six, okay?

40
00:02:27.708 --> 00:02:31.026
Likewise, you can do a column reverse.

41
00:02:31.026 --> 00:02:35.473
Let me reset this just
a regular old row and

42
00:02:35.473 --> 00:02:38.786
then let's look at flex wrap.

43
00:02:38.786 --> 00:02:40.582
This has to do with our boxes.

44
00:02:40.582 --> 00:02:44.538
When the screen gets too long,
what are we going to do to our boxes?

45
00:02:44.538 --> 00:02:46.768
Are we going to cut them off?

46
00:02:46.768 --> 00:02:49.610
Have them extend past
the edge of our container.

47
00:02:49.610 --> 00:02:52.373
Or are we going to wrap
them onto another line.

48
00:02:52.373 --> 00:02:57.643
And so
often this is set to wrap by default.

49
00:02:57.643 --> 00:03:02.617
So you see here I've now wrapped
two boxes on to the next line

50
00:03:02.617 --> 00:03:05.214
because my row gets very long.

51
00:03:05.214 --> 00:03:07.876
You could also set this to wrap reverse

52
00:03:12.231 --> 00:03:16.270
So notice that, this is reordering
things here on the page.

53
00:03:16.270 --> 00:03:20.987
So our first row goes down to the bottom,
five, and

54
00:03:20.987 --> 00:03:25.178
six go more towards
the middle of the screen.

55
00:03:25.178 --> 00:03:27.190
And we can also go to no wrap.

56
00:03:27.190 --> 00:03:30.335
Which is our default value.

57
00:03:30.335 --> 00:03:32.500
No wrap will cram everything
onto the same line.

58
00:03:34.890 --> 00:03:39.382
And as I said, most people will
write this simply as flex flow.

59
00:03:39.382 --> 00:03:44.010
And then you'll have to put in two values,
row wrap.

60
00:03:44.010 --> 00:03:48.860
Generally speaking row wrap is what
you want for responsive design.

61
00:03:48.860 --> 00:03:53.701
&gt;&gt; Why there is a gap between one and
the next row, the first one, the next one?

62
00:03:53.701 --> 00:03:58.890
&gt;&gt; Why is there a gap between the row
one to four and then five and six?

63
00:03:58.890 --> 00:03:59.968
Great question.

64
00:03:59.968 --> 00:04:04.454
That has to do with the next set
of properties that I wanna be

65
00:04:04.454 --> 00:04:07.669
talking about here in just a few moments.

66
00:04:07.669 --> 00:04:10.899
So that has to do with the cross axis.

67
00:04:10.899 --> 00:04:15.640
So remember here, our main axis is
horizontal, the cross axis is vertical.

68
00:04:15.640 --> 00:04:18.122
We haven't started to address
those vertical properties yet.

69
00:04:18.122 --> 00:04:19.760
So that's what's going on there.

70
00:04:19.760 --> 00:04:22.878
&gt;&gt; Is it possible to wrap
a limited number of items.

71
00:04:22.878 --> 00:04:27.365
Like I want to wrap Item number 4,
5, and 6 without increasing or

72
00:04:27.365 --> 00:04:30.374
decreasing the size of item 1, 2, and 3.

73
00:04:30.374 --> 00:04:35.929
&gt;&gt; Just put 4, 5, and
6 on another line and not 1, 2, and 3?

74
00:04:35.929 --> 00:04:38.828
Yeah, potentially that
if you could do that.

75
00:04:38.828 --> 00:04:42.516
You would wind up having to probably
adjust your HTML a little bit.

76
00:04:42.516 --> 00:04:44.572
You put 1, 2, and 3 in a row.

77
00:04:44.572 --> 00:04:46.900
You could put four or
five and six in a row.

78
00:04:46.900 --> 00:04:48.003
That's one way of doing it.

79
00:04:48.003 --> 00:04:52.051
You could set one, two and
three to have a flex spaces,

80
00:04:52.051 --> 00:04:55.397
which I'm gonna get to
here in just a second.

81
00:04:55.397 --> 00:04:58.163
That would add up to 100%.

82
00:04:58.163 --> 00:05:01.430
That would automatically wrap four,
five and six on to the next row.

83
00:05:01.430 --> 00:05:03.740
So there's a couple of
different ways of doing that.

84
00:05:03.740 --> 00:05:06.020
All right, so
before we leave the parent here,

85
00:05:06.020 --> 00:05:09.908
all of you are starting to ask questions
about some of the other situations here.

86
00:05:09.908 --> 00:05:14.150
Let's move on here to
the justification of any sort of

87
00:05:14.150 --> 00:05:18.312
extra space that we have
in between ourselves here.

88
00:05:18.312 --> 00:05:23.351
And to demonstrate that I'm
gonna go back to my LI.

89
00:05:23.351 --> 00:05:29.097
Let me just comment out this
min width here for the moment.

90
00:05:29.097 --> 00:05:31.212
And the height.

91
00:05:31.212 --> 00:05:34.763
So that you can see that
we have a row here.

92
00:05:34.763 --> 00:05:36.929
So we have some extra space
over here on the side.

93
00:05:38.090 --> 00:05:42.857
And so now, let's add to this

94
00:05:42.857 --> 00:05:47.635
our justify hyphen content.

95
00:05:47.635 --> 00:05:51.504
So this has to do with how we're
going to distribute this extra space.

96
00:05:51.504 --> 00:05:55.420
Okay, so if we set our justify
content to flex hyphen, start.

97
00:05:57.190 --> 00:05:58.777
That is the default value,

98
00:05:58.777 --> 00:06:02.444
it'll push all of our boxes over
to the left side of the screen.

99
00:06:02.444 --> 00:06:06.400
Giving us space over on the right
hand side of the screen.

100
00:06:06.400 --> 00:06:07.975
Just like that.

101
00:06:07.975 --> 00:06:10.357
If we go to flex and shockingly,

102
00:06:10.357 --> 00:06:15.051
it's going to push all of our boxes
to the right side of the row.

103
00:06:15.051 --> 00:06:16.989
And give us space on
the left side of the row.

104
00:06:18.130 --> 00:06:21.541
Centers always a good one.

105
00:06:21.541 --> 00:06:24.771
Center we'll put all of our
boxes here in the middle.

106
00:06:24.771 --> 00:06:25.805
Notice that,

107
00:06:25.805 --> 00:06:31.157
in all cases here we haven't actually
put any space in between the boxes.

108
00:06:31.157 --> 00:06:34.076
So that's these next three values
that I'm gonna go through.

109
00:06:34.076 --> 00:06:37.471
And these are the three that
get confused all the time.

110
00:06:37.471 --> 00:06:43.870
So the first one is space around.

111
00:06:43.870 --> 00:06:50.610
So space around says, we are going to,
let's just talk about one and two here.

112
00:06:50.610 --> 00:06:53.823
I am going to put a space here of x.

113
00:06:53.823 --> 00:06:58.250
So the browser has done some math and
it's decided we have so much space.

114
00:06:58.250 --> 00:06:59.773
We have so many boxes.

115
00:06:59.773 --> 00:07:01.060
We're gonna take that space.

116
00:07:01.060 --> 00:07:05.292
And we're gonna put a little bit
of it on each side of the box.

117
00:07:05.292 --> 00:07:09.819
So, this space right here, in between
the border and the edge of box 1,

118
00:07:09.819 --> 00:07:11.010
that space is x.

119
00:07:11.010 --> 00:07:12.252
I don't know what the value is.

120
00:07:12.252 --> 00:07:13.644
It doesn't matter.

121
00:07:13.644 --> 00:07:14.880
The browser did the math for me.

122
00:07:16.410 --> 00:07:21.213
Here now, in between one and
two the space is 2x.

123
00:07:21.213 --> 00:07:24.954
Because I have space on
the right from number one and

124
00:07:24.954 --> 00:07:27.480
space on the left from number two.

125
00:07:29.050 --> 00:07:35.339
So what you wind up having is half the
space on the edge before box number one.

126
00:07:35.339 --> 00:07:40.267
And half the space on the edge
over here after box number six.

127
00:07:40.267 --> 00:07:44.070
And then in between each of these
boxes that is twice the space.

128
00:07:45.560 --> 00:07:50.377
Okay, because you have the two individual
spaces coming together there in

129
00:07:50.377 --> 00:07:51.222
the middle.

130
00:07:51.222 --> 00:07:54.241
So that's what's going
on with space around.

131
00:07:54.241 --> 00:07:59.962
The one I find that's more useful
than that is space between.

132
00:07:59.962 --> 00:08:03.240
Usually your designer friends will
be happier with this as well.

133
00:08:03.240 --> 00:08:06.964
So what this is going to do is it's
basically justifying the boxes.

134
00:08:06.964 --> 00:08:12.248
It pushes Up the box one all
the way to the left edge.

135
00:08:12.248 --> 00:08:15.700
It's going to push box six all
the way over to the right.

136
00:08:17.100 --> 00:08:23.917
And it will evenly justify the space
in between all of the boxes in between.

137
00:08:23.917 --> 00:08:26.720
So that's usually very
helpful to work with.

138
00:08:26.720 --> 00:08:28.624
I find that really great to work with,

139
00:08:28.624 --> 00:08:30.895
particularly when we
get to our grid system.

140
00:08:30.895 --> 00:08:32.808
Which we'll talk about next.

141
00:08:32.808 --> 00:08:37.760
And then the last one here
is a more recent value.

142
00:08:37.760 --> 00:08:40.178
I it's well supported
by browsers right now.

143
00:08:40.178 --> 00:08:43.013
If you wanna use it and
you have to support some older browsers.

144
00:08:43.013 --> 00:08:47.360
You may wanna double check to make sure
it's supported by those older browsers and

145
00:08:47.360 --> 00:08:48.620
that is spaced evenly.

146
00:08:50.300 --> 00:08:54.980
And shockingly,
that puts the same around amount of space

147
00:08:54.980 --> 00:08:58.527
around on between the edge here and
box one.

148
00:08:58.527 --> 00:09:02.569
The same amount of space between
boxes one and two, and so forth.

149
00:09:02.569 --> 00:09:06.620
Just as you would expect for
space evenly all the way across here.

150
00:09:06.620 --> 00:09:09.210
So this is another very useful one.

151
00:09:09.210 --> 00:09:12.838
The designers like because
the spaces are divided up evenly.

152
00:09:12.838 --> 00:09:16.315
Usually space around is the one that
they are not fond of because they

153
00:09:16.315 --> 00:09:18.660
think it looks a little bit awkward.

154
00:09:18.660 --> 00:09:21.280
Let's now get to the cross axis.

155
00:09:21.280 --> 00:09:25.001
So we've talked about all this various
kinds of alignment here on the main axis.

156
00:09:25.001 --> 00:09:28.370
This is all the row and
dealing with the spaces here on the row.

157
00:09:28.370 --> 00:09:32.012
So to go to some of your
questions from earlier,

158
00:09:32.012 --> 00:09:34.751
what about here on this cross axis?

159
00:09:34.751 --> 00:09:37.800
And that's gonna start
here with a line items.

160
00:09:37.800 --> 00:09:43.511
So I'm gonna reset my justify
content here to center.

161
00:09:43.511 --> 00:09:47.170
And then we're gonna add
the property called align items.

162
00:09:48.580 --> 00:09:52.840
And so this is gonna control our
spacing here within the row.

163
00:09:52.840 --> 00:09:57.530
And in fact, I'm gonna bring back
to My min width and my height.

164
00:09:59.300 --> 00:10:03.385
So right now as you see here,
as somebody asked earlier.

165
00:10:03.385 --> 00:10:08.820
We have boxes five and six here wrapped
on to the next line here in the middle.

166
00:10:08.820 --> 00:10:12.670
And this is part of this
align items type of thing.

167
00:10:12.670 --> 00:10:18.174
So here, if we said flex start

168
00:10:22.553 --> 00:10:28.101
Then what we have here are all
of the boxes pressed up

169
00:10:28.101 --> 00:10:34.350
to the top of the area that
we have available here to us.

170
00:10:34.350 --> 00:10:39.058
So what we've got is,
our row is wrapping onto another line.

171
00:10:39.058 --> 00:10:43.140
Everything is centering because
of the justify content of center.

172
00:10:43.140 --> 00:10:50.231
And then everything is pushed up
towards the top because of flex start.

173
00:10:50.231 --> 00:10:52.836
If I set this the flex end,
what's gonna happen?

174
00:11:01.776 --> 00:11:04.930
Yep, It pushes it all the way
down here to the bottom.

175
00:11:06.000 --> 00:11:09.161
So what's happening here,
remember I've got a width and

176
00:11:09.161 --> 00:11:12.009
a height that are set
artificially here on this URL.

177
00:11:12.009 --> 00:11:17.110
So my height is giving me this room that
I can see this whole thing move in space.

178
00:11:17.110 --> 00:11:19.497
So that's gonna push that
down to the bottom there.

179
00:11:22.200 --> 00:11:26.593
We can also say align items in the center.

180
00:11:26.593 --> 00:11:31.399
So the center, center this is what a lot
of people talk about when they talk about

181
00:11:31.399 --> 00:11:34.432
putting something in
the very center of a screen.

182
00:11:34.432 --> 00:11:38.926
Justifying contents that are aligned items
at the center puts everything centered

183
00:11:38.926 --> 00:11:40.669
very nicely inside of that box.

184
00:11:40.669 --> 00:11:42.710
Centered or them row, centered vertically.

185
00:11:42.710 --> 00:11:43.749
That's what's happening there.

186
00:11:48.021 --> 00:11:51.996
We can also say baseline,

187
00:11:51.996 --> 00:11:56.875
all this case just pushed it back

188
00:11:56.875 --> 00:12:01.210
up to the top of the screen and

189
00:12:01.210 --> 00:12:05.739
then stretches the last one.

190
00:12:05.739 --> 00:12:07.851
And that's also doing the same thing here.

191
00:12:13.000 --> 00:12:19.824
Okay, so the last one I want to tell
you about is the Align content.

192
00:12:19.824 --> 00:12:23.340
And this is going to align elements within

193
00:12:23.340 --> 00:12:27.970
the particular space that
we're talking about here.

194
00:12:27.970 --> 00:12:31.673
And I think this goes to the question
that somebody was asking earlier.

195
00:12:31.673 --> 00:12:33.317
Align content,

196
00:12:41.070 --> 00:12:48.328
Center align items,
center and aligned content.

197
00:12:48.328 --> 00:12:54.212
So now if I say flex start.

198
00:12:54.212 --> 00:12:57.840
This pushes everything all the way to
the top without the space in between.

199
00:12:57.840 --> 00:13:01.688
So the person who was asking about
the space in between those elements,

200
00:13:01.688 --> 00:13:04.523
this is how you get rid of
it with this align content.

201
00:13:04.523 --> 00:13:07.670
So everything is pushed up to
the very top of this particular box.

202
00:13:08.830 --> 00:13:11.750
We also have flex end,

203
00:13:11.750 --> 00:13:17.284
which of course pushes
it all the way down to

204
00:13:17.284 --> 00:13:22.529
the bottom of the box and we have center.

205
00:13:22.529 --> 00:13:26.661
So if you wanted everything smushed in
the center, without the big gap in between

206
00:13:26.661 --> 00:13:29.421
those particular rows,
that's what the center is.

207
00:13:29.421 --> 00:13:34.247
So three centers in order
to make that happen,

208
00:13:34.247 --> 00:13:39.088
and we still have all of
the options of the space

209
00:13:43.344 --> 00:13:47.552
Space between, space around,
and space evenly.

210
00:13:47.552 --> 00:13:51.840
So space between pushes these all

211
00:13:51.840 --> 00:13:56.899
the way to the top and bottom of the box.

212
00:13:56.899 --> 00:14:04.732
Space around Gives us as I said before,

213
00:14:04.732 --> 00:14:10.120
X amount of space above and
below 2x in between, and space evenly.

214
00:14:12.450 --> 00:14:15.678
Spaces the mall evenly in space So

215
00:14:15.678 --> 00:14:20.765
we can say that align items
we use in case of columns?

216
00:14:20.765 --> 00:14:23.490
&gt;&gt; Well it depends on main axis and
cross axis.

217
00:14:23.490 --> 00:14:26.336
So in this particular case, yes,

218
00:14:26.336 --> 00:14:30.959
that would be aligned items would be for
the cross axis.

219
00:14:30.959 --> 00:14:32.590
So that would be the columns.

220
00:14:32.590 --> 00:14:35.704
&gt;&gt; I didn't understand the use
of baseline and stretch value.

221
00:14:35.704 --> 00:14:38.530
What exactly can we use it in?

222
00:14:38.530 --> 00:14:40.798
Isn't it similar to the default value?

223
00:14:40.798 --> 00:14:42.120
&gt;&gt; Yes, exactly.

224
00:14:42.120 --> 00:14:45.908
So those are indeed similar
to the default value.

225
00:14:45.908 --> 00:14:50.254
And so those become useful if you
reset them in one part of your layout.

226
00:14:50.254 --> 00:14:52.955
And you wanna change it back
in another part of the layout.

227
00:14:52.955 --> 00:14:55.270
So it's always helpful to
know what those defaults are

