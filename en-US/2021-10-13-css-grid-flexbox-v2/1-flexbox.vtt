WEBVTT

1
00:00:00.053 --> 00:00:03.856
So we're gonna introduce Flexbox with
this little PowerPoint show here.

2
00:00:03.856 --> 00:00:07.181
I wanna give you a little bit of
background about Responsive Web Design and

3
00:00:07.181 --> 00:00:07.723
what it is.

4
00:00:07.723 --> 00:00:10.928
And then we're going to talk
a little bit more about Flexbox.

5
00:00:10.928 --> 00:00:12.215
Including its history and

6
00:00:12.215 --> 00:00:15.382
its syntax and things to think
about when you work with Flexbox.

7
00:00:15.382 --> 00:00:17.606
Then we'll get into some coding.

8
00:00:17.606 --> 00:00:22.196
So to start here,
Responsive Design was defined by

9
00:00:22.196 --> 00:00:26.156
Ethan Marcotte back in May of 2010 now.

10
00:00:26.156 --> 00:00:30.033
So 11 years it's been since
Ethan Marcotte came up with the idea of

11
00:00:30.033 --> 00:00:31.267
Responsive Design.

12
00:00:31.267 --> 00:00:38.040
And he defined it as, images that resize
and media queries and a grid based layout.

13
00:00:38.040 --> 00:00:40.489
Now, when he came up with this concept,

14
00:00:40.489 --> 00:00:44.391
the only way to do layouts on a web
page were pretty much two ways.

15
00:00:44.391 --> 00:00:48.839
One was a table based layout which
everybody knew was bad news.

16
00:00:48.839 --> 00:00:50.858
And float based layouts,

17
00:00:50.858 --> 00:00:55.922
which were a lot more difficult to
work with at that point in time.

18
00:00:55.922 --> 00:01:01.953
And so fortunately Flexbox has since
gone through several iterations and

19
00:01:01.953 --> 00:01:05.169
become well-supported by browsers.

20
00:01:05.169 --> 00:01:08.879
So the grid based layout is
much easier than it used to be.

21
00:01:08.879 --> 00:01:11.095
The images that resize
have come a long way.

22
00:01:11.095 --> 00:01:12.449
We're gonna talk a lot about those.

23
00:01:12.449 --> 00:01:17.507
And of course, we're gonna work with
media queries all through this course.

24
00:01:17.507 --> 00:01:21.770
So a grid based layout, you might be
familiar with from Responsive Design

25
00:01:21.770 --> 00:01:24.670
frameworks like bootstrap or
foundation UI kit.

26
00:01:24.670 --> 00:01:28.054
There's many of these frameworks.

27
00:01:28.054 --> 00:01:31.568
The concept being that you have
some number of columns on the page.

28
00:01:31.568 --> 00:01:35.150
And then you're going to group
together those columns into a unit.

29
00:01:35.150 --> 00:01:40.105
And that will become where you actually
display something on your web page.

30
00:01:40.105 --> 00:01:44.922
The concept here comes from print design
where printers have thought about columns

31
00:01:44.922 --> 00:01:48.380
in terms of laying things out for
a very long period of time.

32
00:01:48.380 --> 00:01:54.902
It helps keep layouts neat and
clean and flexible in a lot of ways.

33
00:01:54.902 --> 00:01:58.746
These days we tend to be breaking
away from this format a little bit.

34
00:01:58.746 --> 00:02:02.870
But we will look at it a little
bit both in terms of Flexbox and

35
00:02:02.870 --> 00:02:05.520
in terms of CSS Grid over this course.

36
00:02:05.520 --> 00:02:07.596
So that you can understand this model.

37
00:02:07.596 --> 00:02:12.389
We'll also look at some ways people
are looking at these types of

38
00:02:12.389 --> 00:02:16.132
layouts using different
types of technologies.

39
00:02:16.132 --> 00:02:19.417
The images that resize have
come a long way as well.

40
00:02:19.417 --> 00:02:24.160
So last time I recorded this course in
2017, we talked about the picture element.

41
00:02:24.160 --> 00:02:25.277
And that was all.

42
00:02:25.277 --> 00:02:31.172
It turns out that there are two other
ways that are now in HTML5 sizes and

43
00:02:31.172 --> 00:02:32.263
source set.

44
00:02:32.263 --> 00:02:36.154
Those happen to come out the same
month and get supported by edge.

45
00:02:36.154 --> 00:02:39.344
At the same month that I was recording
this course the last time around,

46
00:02:39.344 --> 00:02:41.113
which is why I didn't talk about them.

47
00:02:41.113 --> 00:02:45.194
So, picture, sizes, and source set
are all very well supported now.

48
00:02:45.194 --> 00:02:50.298
We will be talking about those later
on today In terms of Responsive images,

49
00:02:50.298 --> 00:02:51.825
and how that can work.

50
00:02:51.825 --> 00:02:54.561
And then of course,
finally, CSS media queries.

51
00:02:54.561 --> 00:02:58.892
So this comes straight from the CSS,
there's not any JavaScript involved.

52
00:02:58.892 --> 00:03:03.749
And for the most part, people have used
media queries in terms of screen widths

53
00:03:03.749 --> 00:03:06.555
minimum width, maximum width and so forth.

54
00:03:06.555 --> 00:03:08.879
But media queries are much more than that,

55
00:03:08.879 --> 00:03:13.151
especially today we have a lot more types
of media queries that are supported.

56
00:03:13.151 --> 00:03:14.987
You can do portrait or landscape.

57
00:03:14.987 --> 00:03:17.275
You can do aspect ratios.

58
00:03:17.275 --> 00:03:20.649
And you could do a print
media query because

59
00:03:20.649 --> 00:03:24.971
after all media query is
actually all about the media.

60
00:03:24.971 --> 00:03:29.907
So you can ask if you're just trying
to print out something as opposed to

61
00:03:29.907 --> 00:03:31.730
putting it on the screen.

62
00:03:31.730 --> 00:03:35.251
So keep that in mind as you
work with media queries.

63
00:03:35.251 --> 00:03:39.844
They don't all have to be screen widths.

64
00:03:39.844 --> 00:03:42.950
So how does Ethan Marcotte
ideas hold up today?

65
00:03:42.950 --> 00:03:46.963
Well those grid based lands tend to
be associated a lot with frameworks.

66
00:03:46.963 --> 00:03:51.570
People tend to think of them as very
heavy and difficult to work with.

67
00:03:51.570 --> 00:03:56.239
And I'm here to tell you it doesn't have
to be not if you know what you're doing.

68
00:03:56.239 --> 00:03:59.448
That even the images that
resize are often forgotten.

69
00:03:59.448 --> 00:04:04.342
A lot of people just put up the same
picture across all of their devices.

70
00:04:04.342 --> 00:04:09.280
Or they go after complicated solutions,
maybe something that's JavaScript base.

71
00:04:09.280 --> 00:04:12.484
I'm here to tell you that's all baked
into HTML and it's well supported.

72
00:04:12.484 --> 00:04:15.190
Nothing could actually be
easier than responsive images.

73
00:04:16.830 --> 00:04:20.634
A lot of developers today
are trying to avoid media queries.

74
00:04:20.634 --> 00:04:23.330
And there may be some reasons for that.

75
00:04:23.330 --> 00:04:25.318
I'm not sure if it's complicated CSS or

76
00:04:25.318 --> 00:04:28.074
if it's performance that
people are concerned about.

77
00:04:28.074 --> 00:04:32.030
But media queries are not
that difficult to understand.

78
00:04:32.030 --> 00:04:34.957
I hope that after two days
of working on this stuff,

79
00:04:34.957 --> 00:04:38.375
you'll have a better idea of
how media queries work in CSS.

80
00:04:38.375 --> 00:04:42.185
And how to read the code correctly
to understand where your styles

81
00:04:42.185 --> 00:04:43.310
are coming from.

82
00:04:43.310 --> 00:04:46.698
I suspect that's part of the reason
people don't like media queries.

83
00:04:46.698 --> 00:04:49.839
And then of course,
everybody comes along and says, well,

84
00:04:49.839 --> 00:04:52.610
container queries are gonna
solve all my problems.

85
00:04:52.610 --> 00:04:55.595
Subgrid is gonna solve all my problems.

86
00:04:55.595 --> 00:04:58.970
This is something that I've heard now for
20 years.

87
00:04:58.970 --> 00:05:02.976
There's always some latest hottest new
technology that's just out of reach that

88
00:05:02.976 --> 00:05:04.728
is gonna solve all of our problems.

89
00:05:04.728 --> 00:05:07.098
And I'm here to tell
you that it's not true.

90
00:05:07.098 --> 00:05:11.394
That you have very good technology right
now that you can work with even before you

91
00:05:11.394 --> 00:05:13.491
get to container queries and subgrid.

92
00:05:13.491 --> 00:05:14.399
Which are coming.

93
00:05:14.399 --> 00:05:19.032
I haven't covered them in this course
because they're still under development at

94
00:05:19.032 --> 00:05:20.164
this point in time.

95
00:05:20.164 --> 00:05:24.200
But they will be here
hopefully sometime soon.

96
00:05:25.530 --> 00:05:29.656
&gt;&gt; How do you decide on the media
queries for your projects?

97
00:05:29.656 --> 00:05:32.460
&gt;&gt; How do I decide on the media
queries for my projects?

98
00:05:32.460 --> 00:05:34.652
What looks good.

99
00:05:34.652 --> 00:05:38.163
So in other words, you don't tie
your media queries to devices.

100
00:05:38.163 --> 00:05:41.761
Because devices change every
single day of the week.

101
00:05:41.761 --> 00:05:44.969
So it's not gonna be like the old days
where you can say definitively where

102
00:05:44.969 --> 00:05:47.000
exactly certain media
queries should be set.

103
00:05:48.020 --> 00:05:51.640
Furthermore, you can have media
queries for one part of the page.

104
00:05:51.640 --> 00:05:55.520
Because that part of the page needs
a certain set of media queries.

105
00:05:55.520 --> 00:05:59.429
Then another part of the page maybe
have a different set of media

106
00:05:59.429 --> 00:06:03.723
queries associated with it to make
it look good across break points.

107
00:06:03.723 --> 00:06:06.705
So this is part of what
I'm talking about in terms

108
00:06:06.705 --> 00:06:10.139
of fragmenting the approach
to Responsive Design now.

109
00:06:10.139 --> 00:06:15.051
So that you can focus on smaller parts
of your page instead of media queries to

110
00:06:15.051 --> 00:06:20.040
control that part of the page to make that
each element on the page look optimal

111
00:06:20.040 --> 00:06:21.062
in its layout.

112
00:06:21.062 --> 00:06:23.876
So as you move forward
working on Responsive Design,

113
00:06:23.876 --> 00:06:27.260
keep in mind these guiding
principles of the grid based layout.

114
00:06:27.260 --> 00:06:28.612
The images that resize and

115
00:06:28.612 --> 00:06:32.920
their media queries is something that are
gonna define what responsive design is.

116
00:06:32.920 --> 00:06:37.433
Define what responsive layouts are, but
you don't have to strictly adhere to them

117
00:06:37.433 --> 00:06:42.160
the way Ethan Marcotte described them
11 years ago at this point in time.

118
00:06:42.160 --> 00:06:44.531
So let's move on then to Flexbox and

119
00:06:44.531 --> 00:06:50.075
talk a little bit more specifically about
what's going on in the world of Flexbox.

120
00:06:50.075 --> 00:06:53.187
Flexbox stands for flexible boxes.

121
00:06:53.187 --> 00:06:58.685
And the specification was defined
actually around 2008- 2009.

122
00:06:58.685 --> 00:07:04.210
And they were never envisioned
of laying out whole web pages.

123
00:07:04.210 --> 00:07:07.048
This is a theme that we have in CSS.

124
00:07:07.048 --> 00:07:10.320
We have hacked our way through layouts for
so long.

125
00:07:10.320 --> 00:07:15.507
The idea here with Flexbox was that
it would lay out parts of webpages

126
00:07:15.507 --> 00:07:19.971
that Flexbox was for
UI as opposed to entire page layouts.

127
00:07:19.971 --> 00:07:26.310
Flexbox is really good at at vertical
centering and equal heights.

128
00:07:26.310 --> 00:07:30.087
And it's really easy to reorder boxes,
which is a wonderful thing.

129
00:07:30.087 --> 00:07:32.341
But the big disadvantage with Flexbox,

130
00:07:32.341 --> 00:07:36.090
is that it was never designed to
be locked down for the layouts.

131
00:07:36.090 --> 00:07:40.063
It's really a one
dimensional type of layout.

132
00:07:40.063 --> 00:07:43.113
And it's very hard to understand exactly
what I'm talking about when I say one

133
00:07:43.113 --> 00:07:44.610
dimensional layout.

134
00:07:44.610 --> 00:07:46.639
But I want you to think about rows.

135
00:07:46.639 --> 00:07:48.834
And if you look at web pages today,

136
00:07:48.834 --> 00:07:53.330
you can very much see that people
are thinking about a row on the page.

137
00:07:53.330 --> 00:07:55.123
Maybe it has some things inside of it.

138
00:07:55.123 --> 00:07:57.602
Then we have another row on
the page with some other things.

139
00:07:57.602 --> 00:08:00.048
Another row row on the page, more things.

140
00:08:00.048 --> 00:08:04.752
That is because Flexbox thinks about
itself in terms of rows as opposed to

141
00:08:04.752 --> 00:08:08.465
thinking of itself in two
dimensions more like CSS Grid.

142
00:08:08.465 --> 00:08:13.382
A couple of pieces of terminology that
will be helpful to you at the concept

143
00:08:13.382 --> 00:08:18.319
of the main axis and the cross axis,
the flex item and the flex container.

144
00:08:18.319 --> 00:08:22.651
I'm really not going to talk a lot
about flex containers and flex items.

145
00:08:22.651 --> 00:08:24.676
Flex containers are parents.

146
00:08:24.676 --> 00:08:26.700
Flex items are children.

147
00:08:26.700 --> 00:08:30.268
And this has to do with the HTML and
the way the HTML is put together.

148
00:08:30.268 --> 00:08:34.021
We're gonna talk a lot about
it when we start doing code.

149
00:08:34.021 --> 00:08:39.969
Because whether an item is a parent or
whether it's a child would determine what

150
00:08:39.969 --> 00:08:45.228
CSS properties are available to
leverage in laying out your web page.

151
00:08:45.228 --> 00:08:47.580
Flexbox of course can
go in two directions.

152
00:08:47.580 --> 00:08:51.033
So if you happen to have the setup for
columns.

153
00:08:51.033 --> 00:08:53.610
The main axis is the vertical axis.

154
00:08:53.610 --> 00:08:56.634
But if you set your
Flexbox to rows instead,

155
00:08:56.634 --> 00:08:59.754
your main axis becomes
the horizontal axis.

156
00:08:59.754 --> 00:09:02.900
And the cross axis becomes
the vertical axis.

157
00:09:04.310 --> 00:09:08.620
I don't hear a lot of people talking
about main axis and cross axis.

158
00:09:08.620 --> 00:09:12.270
When they talk about Flexbox,
they mostly talk about rows and columns.

159
00:09:12.270 --> 00:09:16.737
Probably because main axis and cross axis
are terms that are a little bit confusing

160
00:09:16.737 --> 00:09:19.339
and change with the dimensions
of the web page.

161
00:09:19.339 --> 00:09:23.200
So, you'll hear me talk a lot
about horizontal or vertical.

162
00:09:23.200 --> 00:09:27.358
You'll hear me talk a lot
about flex containers,

163
00:09:27.358 --> 00:09:30.731
flex items, and parents and children.

164
00:09:30.731 --> 00:09:32.750
So the three versions are from Flexbox.

165
00:09:32.750 --> 00:09:35.881
They started way back,
like I said in 2009.

166
00:09:35.881 --> 00:09:38.815
We had a display property,
the value of which was box.

167
00:09:38.815 --> 00:09:42.639
And that would allow us to use some
Flexbox properties as you know,

168
00:09:42.639 --> 00:09:45.930
browsers rolled out much more
slowly back in those days.

169
00:09:45.930 --> 00:09:50.870
And so we had all Older browsers
that were supporting the syntax.

170
00:09:50.870 --> 00:09:53.208
The WU3C had something happened and

171
00:09:53.208 --> 00:09:57.669
everybody decided to redefine
everything having to do with Flexbox.

172
00:09:57.669 --> 00:10:01.160
So we came up with a new syntax
that rolled out in 2011.

173
00:10:01.160 --> 00:10:05.152
The only browser that ever supported
this so called tweener syntax.

174
00:10:05.152 --> 00:10:08.796
The syntax of comes in between the old and
the new version.

175
00:10:08.796 --> 00:10:11.770
The current version that we use now.

176
00:10:11.770 --> 00:10:14.820
The only browser that
supported that was IE 10.

177
00:10:14.820 --> 00:10:16.832
Good times.

178
00:10:16.832 --> 00:10:20.560
And so in 2016,
we finally had display Flex.

179
00:10:20.560 --> 00:10:23.148
We had all the browsers
that are supporting it.

180
00:10:23.148 --> 00:10:25.720
The browser's have been supporting
it now for quite a while.

181
00:10:25.720 --> 00:10:30.001
It's a very safe type
of technology to use.

182
00:10:30.001 --> 00:10:34.909
Now as always, the only time you need
to be concerned about this is with IE

183
00:10:34.909 --> 00:10:37.086
support at this moment in time.

184
00:10:37.086 --> 00:10:40.541
Because of course IE is
no longer being updated.

185
00:10:40.541 --> 00:10:42.840
I hope you don't have
to support IE anymore.

186
00:10:42.840 --> 00:10:47.399
But I am aware that there are people
mostly working in universities or

187
00:10:47.399 --> 00:10:51.260
in government who may still
have to support that browser.

188
00:10:51.260 --> 00:10:55.542
All of the other modern ones that
roll out on a regular basis.

189
00:10:55.542 --> 00:11:02.855
Safari, Firefox, Chrome and edge,
all of them support Flexbox just fine.

190
00:11:02.855 --> 00:11:07.050
There's some games you might be aware
of that have been out for some time.

191
00:11:07.050 --> 00:11:09.657
Feel free to play these on your own.

192
00:11:09.657 --> 00:11:11.030
Flexbox Froggy and

193
00:11:11.030 --> 00:11:16.612
Flexbox Defense will focus on really
the syntax of how to get Flexbox to work.

194
00:11:16.612 --> 00:11:20.954
But it doesn't really teach you
the thought behind Flexbox.

195
00:11:20.954 --> 00:11:25.709
And so I'm gonna spend more time on how
to think about a Flexbox problem rather

196
00:11:25.709 --> 00:11:28.010
than on all of the various syntax.

197
00:11:28.010 --> 00:11:32.144
So these are games that
you can play on your own.

198
00:11:32.144 --> 00:11:34.895
There's a ton of properties
that are available,

199
00:11:34.895 --> 00:11:39.100
you may want to print out some information
like this I have here on the slide.

200
00:11:39.100 --> 00:11:43.335
I think I have a separate text file
that you can refer to for that.

201
00:11:43.335 --> 00:11:46.281
Or just take a look at CSS tricks.

202
00:11:46.281 --> 00:11:50.560
They have a great page that describes all
of the properties and values for flexbox

