WEBVTT

1
00:00:00.000 --> 00:00:03.687
What I'd like to do now is go
through the solution to the exercise

2
00:00:03.687 --> 00:00:04.930
that I just gave you.

3
00:00:04.930 --> 00:00:09.127
So I'm looking at the CodePen
that's called 2c-end and

4
00:00:09.127 --> 00:00:12.046
I've talked through my solution here.

5
00:00:12.046 --> 00:00:14.801
So let me just scrunch up this window and

6
00:00:14.801 --> 00:00:17.730
show you what I have
here in terms of code.

7
00:00:17.730 --> 00:00:21.837
So I just wrapped a row
around these five figures.

8
00:00:21.837 --> 00:00:26.265
You actually didn't need to add any
additional classes to this or anything.

9
00:00:26.265 --> 00:00:30.166
But you do need to have, of course,
the parents and the children,

10
00:00:30.166 --> 00:00:31.986
the containers and the items.

11
00:00:31.986 --> 00:00:36.150
You've gotta have both of those things
together in order for Flexbox to work.

12
00:00:36.150 --> 00:00:39.382
So having five figures there
on the page is lovely, but

13
00:00:39.382 --> 00:00:44.247
that doesn't help you with Flexbox, so
you've gotta wrap something around it.

14
00:00:44.247 --> 00:00:48.861
So, that's what we did with the HTML and

15
00:00:48.861 --> 00:00:54.848
then here in the CSS, well,
I'll start at the top.

16
00:00:54.848 --> 00:00:59.530
So we're in our class of row display
of flex, flex flow row wrap,

17
00:00:59.530 --> 00:01:02.010
justify content of space evenly.

18
00:01:03.200 --> 00:01:08.103
That's so that these boxes are spaced
evenly very nicely here across the bottom

19
00:01:08.103 --> 00:01:09.138
just like that.

20
00:01:09.138 --> 00:01:14.865
And I align the content in the center,
okay, with a gap of 2%.

21
00:01:14.865 --> 00:01:17.542
And I put in the minimum height of 100vh,
viewport units.

22
00:01:17.542 --> 00:01:22.592
That is so that when we went
to the desktop dimension,

23
00:01:22.592 --> 00:01:28.669
we had that ability for
all those things to go down to the bottom.

24
00:01:28.669 --> 00:01:33.119
And we had the room to work
to stack things on top

25
00:01:33.119 --> 00:01:37.583
of each other here at
that tablet dimensions.

26
00:01:37.583 --> 00:01:43.730
Okay, so then here at tablet dimensions,
I just set my flex basis to 32%,

27
00:01:43.730 --> 00:01:49.260
about a third of the screen here for
everything, and the gap of 2%.

28
00:01:49.260 --> 00:01:52.974
And again, you could do the math
to figure that part out.

29
00:01:52.974 --> 00:01:57.531
So then when you go into your media
queries, you need to ask yourself,

30
00:01:57.531 --> 00:01:58.545
what changes?

31
00:01:58.545 --> 00:02:02.887
So what changes as I move across
from small screen to big screen

32
00:02:02.887 --> 00:02:04.481
generally speaking?

33
00:02:04.481 --> 00:02:08.760
It could also be from big screen to
small screen, but what is changing and

34
00:02:08.760 --> 00:02:11.016
those are the things we need to reset.

35
00:02:11.016 --> 00:02:16.490
So we don't have to completely reset our
declarations over and over and over again.

36
00:02:16.490 --> 00:02:21.365
So in other words, I don't have to say
display flex again inside of my desktop

37
00:02:21.365 --> 00:02:23.550
media query, I can just say this.

38
00:02:24.750 --> 00:02:30.800
I wanna change my justify content from
space evenly at my tablet media query.

39
00:02:30.800 --> 00:02:38.035
And I wanna change it to justify content
of center when I get to the larger screen.

40
00:02:38.035 --> 00:02:40.971
My align content which is center here,
okay,

41
00:02:40.971 --> 00:02:43.769
it gives us this cool
center sort of effect.

42
00:02:43.769 --> 00:02:48.801
I'm gonna change that instead to
flex end at those larger dimensions.

43
00:02:48.801 --> 00:02:53.731
So everything is stacking up
here at the bottom of my screen

44
00:02:53.731 --> 00:02:55.953
in this particular case.

45
00:02:55.953 --> 00:03:00.130
Everything packs down here at
the bottom and then the gap.

46
00:03:01.470 --> 00:03:05.003
I redeclared the gap,
I didn't actually have to do that but

47
00:03:05.003 --> 00:03:06.777
I redeclared the gap of 2%.

48
00:03:06.777 --> 00:03:12.828
And then I set up my figure width
here to be a flex basis of 18.4%.

49
00:03:12.828 --> 00:03:18.848
If you have a gap of 2% and
you're working with centered content here,

50
00:03:18.848 --> 00:03:22.804
in order to space things all out and
do the math.

51
00:03:22.804 --> 00:03:25.660
That was the number that I came up with,
okay?

52
00:03:25.660 --> 00:03:29.884
So you just type it in,
whatever the number happens to be.

53
00:03:29.884 --> 00:03:32.893
So that's how you could get
a crazy thing like this to happen.

54
00:03:32.893 --> 00:03:37.279
Now, one of the cool things about this
particular layout is this is a kinda

55
00:03:37.279 --> 00:03:40.850
layout that it is just not
possible inside of Grid.

56
00:03:40.850 --> 00:03:45.507
So the fact that we have these five boxes,
and that they're centered here very

57
00:03:45.507 --> 00:03:49.325
nicely on the web page,
especially at tablet dimensions.

58
00:03:49.325 --> 00:03:51.195
That's not something that
you can do with Grid.

59
00:03:51.195 --> 00:03:53.882
It is something that is unique to Flexbox.

60
00:03:53.882 --> 00:03:57.443
&gt;&gt; Could you use the calc
function within flex-basis?

61
00:03:57.443 --> 00:04:00.130
&gt;&gt; Sure, yes, absolutely,
you can use the calc function.

62
00:04:00.130 --> 00:04:05.080
So I have a course here at Frontend
Masters called Advanced CSS layouts.

63
00:04:05.080 --> 00:04:09.111
And in that course I walk
through a whole lot of calc and

64
00:04:09.111 --> 00:04:15.510
CSS variable stuff to do all kinds of
wild and crazy things with page layouts.

65
00:04:15.510 --> 00:04:17.263
You could absolutely use calc and

66
00:04:17.263 --> 00:04:20.090
variables in anything that
I'm doing here today.

67
00:04:20.090 --> 00:04:25.082
I've chosen not to use them in this
particular course because this is more

68
00:04:25.082 --> 00:04:29.914
oriented towards beginners or
people who are focusing maybe on HTML and

69
00:04:29.914 --> 00:04:31.880
CSS for the first time.

70
00:04:31.880 --> 00:04:34.769
And then a lot of you are learning
JavaScript first, and

71
00:04:34.769 --> 00:04:37.980
you're coming back and
learning HTML and CSS after the fact.

72
00:04:37.980 --> 00:04:41.233
So, to try to keep my examples
as straightforward and

73
00:04:41.233 --> 00:04:45.770
easy to read as possible,
I've kept calc and variables out of it.

74
00:04:45.770 --> 00:04:48.714
But if you're interested in learning
more about how you can do that,

75
00:04:48.714 --> 00:04:50.438
if you're not sure about how to do that,

76
00:04:50.438 --> 00:04:53.510
you can watch my advanced CSS layouts
course here at Frontend Masters.

