[00:00:00]
>> We are going to use a website called responsive breakpoints, that's going to help us make a whole bunch of images for source, source set and sizes. And it'll write us some code to go with that. And I want to demonstrate what I mean by the browser's going to make the choice of the image.

[00:00:18]
So inside of your chapter six GitHub files, there is a folder called banner demo. And if you take a look inside of it, you'll find banners.html. And you'll also see that I have a folder here called banners. So inside of banners there are six different versions of the same banner at different dimensions here.

[00:00:39]
And then there's an HTML file. The HTML file is super simple and there is no CSS at all. All the HTML does is it has the single image element in it. And on the side of that you see here we have sizes here on line 12. It says for a max-width of 1200 pixels, display at 100 viewport widths, otherwise display it at 1200 pixels.

[00:01:04]
In other words, just display it full width all the time. And then source set here has given you the conditions under which we have different images that are available here. And then of course, we have the default version of this banner. And so this this particular code came from the responsive breakpoints website which I'm gonna go through with you in just a moment.

[00:01:27]
But then what I did was once I got my banners back, I opened up an image editing program and I wrote the dimension of the banner on each one of these images, so we could see how they change. So when I display this inside of Chrome. This is Chrome and as you see here, I've got the browser window maximized and this is at 1200 is the banner exactly probably as you would expect.

[00:01:55]
And so, as I start to make the screen smaller, you'd expect that somewhere along the way here we're going to swap out the banner, right, at least once if not more than that. But look at this, it's just staying at 1200 the entire time. No matter how small we get down, it's still trying to load 1200.

[00:02:15]
And when I first saw this, I thought, no, what did I do wrong? I broke my code and everything else. But then, I took a look at this inside of Firefox, same exact webpage now just displayed on Firefox, and you'll notice here that as I reduced the size of this web browser, we do switch to a different size picture.

[00:02:37]
So here, we're at 533 pixels wide, we're switching to the 1084 image and then when I think about it, that may actually make sense. I am working on a MacBook Pro that has Retina on it. So it looks like, just judging from the numbers here, it's choosing the images based the fact that this is 2x pixel density.

[00:03:01]
Something I didn't even account for inside of my code, but remember the browser is making the choice here, and this is one of the things it's thinking about. So then as I get smaller, then I go to 958 at about roughly half that value and I can't go any smaller here inside of just looking at Firefox this way.

[00:03:19]
If you put it in browser tools, you can continue to make the window smaller and you can find it will continue to load different versions of the picture. So this is the point I'm trying to make to you. It depends, it really depends, you write this code and you have no control over which image is going to get displayed inside of your browser window.

[00:03:40]
And you're going to trust the browser to make the right choice. I even tried putting this stuff up online thinking maybe if it was on a server, it would behave a little bit differently like on a real actual server. And nothing, that did not change the performance of either Firefox or Chrome.

[00:03:59]
Feel free to test with Safari or Edge. My results with Safari were the same as Chrome's, probably cuz they're both WebKit, but maybe Edge would do something different. I just don't have Edge here on my computer.

