WEBVTT

1
00:00:00.000 --> 00:00:04.786
So we're gonna move on now to
setting this up for media queries.

2
00:00:04.786 --> 00:00:09.757
And there is a code pen that will give
you the starting state that I have

3
00:00:09.757 --> 00:00:13.196
right here if you wanna
switch to that code pen.

4
00:00:13.196 --> 00:00:18.368
Or you can just continue on in the same
code pen which is what I'm going to do and

5
00:00:18.368 --> 00:00:21.800
write the rest of the code
here just inside of this.

6
00:00:21.800 --> 00:00:26.728
So when we go to a tablet then,
we need to think about how our various

7
00:00:26.728 --> 00:00:32.364
arrangements are gonna change as we
move through our various breakpoints.

8
00:00:32.364 --> 00:00:37.468
So right now let's just start
up here at the top once again,

9
00:00:37.468 --> 00:00:40.235
here on our set of four columns.

10
00:00:40.235 --> 00:00:45.428
Maybe what we'd like to do is, when we get
to our break point, right, cuz right now,

11
00:00:45.428 --> 00:00:49.852
these will very happily wrap on to
another row, just like Flexbox does.

12
00:00:49.852 --> 00:00:53.529
And if you're happy with
the way things look,

13
00:00:53.529 --> 00:00:58.350
you could absolutely go with that
as a look for your web page.

14
00:00:58.350 --> 00:01:01.199
Because this is what Flexbox does, right?

15
00:01:01.199 --> 00:01:04.465
But if you wanted to make these
a little bit prettier and

16
00:01:04.465 --> 00:01:09.293
ake them stretch across the page then we
would wind up picking a break point here,

17
00:01:09.293 --> 00:01:10.933
whatever it happens to be.

18
00:01:10.933 --> 00:01:14.792
I have a utility up here, I'm in Firefox,

19
00:01:14.792 --> 00:01:19.516
I'm not sure if this is available for
Chrome or not.

20
00:01:19.516 --> 00:01:24.589
And it's a little item that
displays my screen dimensions

21
00:01:24.589 --> 00:01:28.949
up here on the top,
I have it currently disabled.

22
00:01:28.949 --> 00:01:32.890
So if I turn it on it'll just tell me up
here on the top of the page what exactly

23
00:01:32.890 --> 00:01:34.343
my screen dimensions are.

24
00:01:34.343 --> 00:01:37.589
So it's not going to
help me here in code pen.

25
00:01:37.589 --> 00:01:39.711
But if I was moving the whole window,

26
00:01:39.711 --> 00:01:42.323
it would change my numbers
up here on the top.

27
00:01:42.323 --> 00:01:45.256
So I could just sort of scrunch around and
go, you know what?

28
00:01:45.256 --> 00:01:47.388
This is getting a little
bit tight looking,

29
00:01:47.388 --> 00:01:49.932
I think I need to put a break
point somewhere in here.

30
00:01:49.932 --> 00:01:53.471
So, I've actually already
done the work on this though.

31
00:01:53.471 --> 00:01:59.871
So what I wanna do is,
I wanna add a media query.

32
00:01:59.871 --> 00:02:04.819
Actually, we're gonna add two media
queries, so first of all, Here,

33
00:02:04.819 --> 00:02:09.314
everything that we've put down here so
far, for figure span two,

34
00:02:09.314 --> 00:02:13.406
span three, span four and
these various order properties,

35
00:02:13.406 --> 00:02:16.551
these are all for
our desktop layout, right?

36
00:02:16.551 --> 00:02:19.700
So we actually wanna put those
in a media query right away.

37
00:02:19.700 --> 00:02:21.551
So let's go ahead and set that up.

38
00:02:21.551 --> 00:02:24.131
The row can stay outside
of the media query,

39
00:02:24.131 --> 00:02:26.659
this is gonna start at mobile dimensions.

40
00:02:26.659 --> 00:02:30.342
It will carry into all of your
media queries going forward.

41
00:02:30.342 --> 00:02:34.777
We actually want it to continue
to display flex and row wrap and

42
00:02:34.777 --> 00:02:38.458
the space between and
the gap, we want all of that.

43
00:02:38.458 --> 00:02:42.420
But these values here for flex basis and
the ordering and so forth,

44
00:02:42.420 --> 00:02:44.420
that might be desktop specific.

45
00:02:44.420 --> 00:02:48.774
So let's add a media query at media and
then,

46
00:02:48.774 --> 00:02:55.550
we'll say something like min width
of something like 800 pixels.

47
00:02:59.091 --> 00:03:03.046
My screen's blown up so big,
it's hard to say for sure.

48
00:03:03.046 --> 00:03:06.780
Feel free to adjust to
whatever makes sense for you.

49
00:03:10.010 --> 00:03:11.420
And we'll indent those there.

50
00:03:13.009 --> 00:03:17.677
Okay, so all of that figure, span,
span three, span four, order one, two,

51
00:03:17.677 --> 00:03:18.594
three, okay?

52
00:03:18.594 --> 00:03:24.908
So that's now all inside of our media
query for 800 pixels and higher.

53
00:03:24.908 --> 00:03:29.471
So when I make my code pen
window of the appropriate size,

54
00:03:29.471 --> 00:03:31.953
I'll get my formatting back.

55
00:03:31.953 --> 00:03:37.930
Okay, so then when we go below 800 pixels,
let's say starting around 550,

56
00:03:41.382 --> 00:03:44.950
Here, I'm actually going to
put in my media query here.

57
00:03:47.310 --> 00:03:54.602
Min width, Of 550 pixels.

58
00:03:54.602 --> 00:03:58.598
And we can wrap this media query
actually around that row declaration.

59
00:03:58.598 --> 00:04:01.318
Now why on earth would I do that?

60
00:04:04.428 --> 00:04:07.001
Because if the screen gets smaller,

61
00:04:07.001 --> 00:04:12.316
we're now not going to be displaying
our boxes in Flexbox anymore, right?

62
00:04:12.316 --> 00:04:17.225
Okay, so by default,
we have a whole bunch of these figures and

63
00:04:17.225 --> 00:04:21.873
rows and so forth,
they are block level elements, right?

64
00:04:21.873 --> 00:04:25.781
Block configuration and by default,
they just stack on top of each other.

65
00:04:25.781 --> 00:04:30.129
And so by not declaring our Flexbox
until we get to our tablet dimension

66
00:04:30.129 --> 00:04:33.666
when we actually want things
to start showing up on rows,

67
00:04:33.666 --> 00:04:36.412
that's a pretty easy
way to work with this.

68
00:04:36.412 --> 00:04:41.647
Now, the other way that you could
do this would be to put your

69
00:04:41.647 --> 00:04:46.485
Flexbox declaration here
outside of the media query.

70
00:04:46.485 --> 00:04:52.005
and you could set your flex basis for
everything to 100%.

71
00:04:52.005 --> 00:04:55.714
So display at row wrap but
everything is 100% or

72
00:04:55.714 --> 00:04:59.262
you could go to displaying
rather than row wrap.

73
00:04:59.262 --> 00:05:02.701
This would be a case where
you might say column wrap,

74
00:05:02.701 --> 00:05:07.015
so we actually do want to have
a series of columns here on the page.

75
00:05:07.015 --> 00:05:12.135
Really only one and our flex base is 100%,
so that things stack on top of each other.

76
00:05:12.135 --> 00:05:15.392
That would be the other
way to deal with this.

77
00:05:15.392 --> 00:05:20.042
But generally speaking,
I just start declaring my

78
00:05:20.042 --> 00:05:24.584
Flexbox layout inside of
my tablet media query and

79
00:05:24.584 --> 00:05:28.813
let things be outside for
the mobile layouts.

80
00:05:28.813 --> 00:05:31.703
Because they'll just stack
on top of each other which

81
00:05:31.703 --> 00:05:33.703
is usually what you wanna do anyway.

82
00:05:33.703 --> 00:05:39.689
All right, so then here, all we need to do
is come up with the next set of values.

83
00:05:39.689 --> 00:05:44.556
So in our row here for figure,
our default value for figure,

84
00:05:44.556 --> 00:05:51.348
which will get overwritten later with the
classes that we have and the later values.

85
00:05:51.348 --> 00:05:54.716
So previously these were 22% wide,

86
00:05:54.716 --> 00:06:00.034
now we want to have still our 4% gap and
two boxes on the line.

87
00:06:00.034 --> 00:06:06.487
This will actually be a flex basis of 48%,
right?

88
00:06:06.487 --> 00:06:11.141
Two boxes on a line, two of them.

89
00:06:14.247 --> 00:06:20.116
How about our span two,
it's probably kinda the same, right?

90
00:06:20.116 --> 00:06:24.884
So figure and
span two are actually going to

91
00:06:24.884 --> 00:06:29.261
both have that same kinda formatting.

92
00:06:29.261 --> 00:06:33.241
So everything's pretty good until
we get down here towards the bottom

93
00:06:33.241 --> 00:06:34.595
of our screen, right?

94
00:06:34.595 --> 00:06:39.403
So we've got our row with the four boxes,
here it is looking good.

95
00:06:39.403 --> 00:06:44.458
Here's row number two, looks good,
row number three, not so good.

96
00:06:44.458 --> 00:06:49.542
So what would we wanna
do at row number three?

97
00:06:49.542 --> 00:06:55.926
Most likely, what we wanna do is we wanna
have our span three stretched to 100%.

98
00:06:55.926 --> 00:07:00.534
But then,
the item that was all by itself before,

99
00:07:00.534 --> 00:07:05.265
maybe we'd also like
that to stretch to 100%.

100
00:07:05.265 --> 00:07:08.937
So we have our two boxes
stretching to 100%.

101
00:07:08.937 --> 00:07:15.559
So here we'll do a span3
with a flex basis of 100%.

102
00:07:18.901 --> 00:07:21.326
Okay, so there's that.

103
00:07:23.761 --> 00:07:30.691
Now, the second box here from that row,
it is doing exactly what we told it to.

104
00:07:30.691 --> 00:07:33.038
It's displaying in about
half the width and

105
00:07:33.038 --> 00:07:36.089
if that's what you want,
you can certainly leave that.

106
00:07:36.089 --> 00:07:37.866
But it might be that in this case,

107
00:07:37.866 --> 00:07:40.598
you want this one to stretch
full width of the page.

108
00:07:40.598 --> 00:07:42.157
What are we going to do there?

109
00:07:42.157 --> 00:07:46.372
Well, we're gonna have to make
a new type of class for that.

110
00:07:46.372 --> 00:07:50.732
So we might call this,
I don't know, Span3-1,

111
00:07:50.732 --> 00:07:55.401
something like that,
I'm really bad at naming these.

112
00:07:55.401 --> 00:07:57.360
Flex basis is also 100%.

113
00:07:57.360 --> 00:08:01.622
And then we'll just apply
that here in our HTML.

114
00:08:06.740 --> 00:08:12.035
Okay, so here class =

115
00:08:12.035 --> 00:08:18.451
span3-1, there we go.

116
00:08:20.986 --> 00:08:24.055
So there we have two,
in this particular case,

117
00:08:24.055 --> 00:08:27.297
these are both going to
stretch to 100% here.

118
00:08:27.297 --> 00:08:29.881
And but
when we get the screen larger, oops,

119
00:08:29.881 --> 00:08:33.359
we're gonna have to write a class for
that too, aren't we?

120
00:08:33.359 --> 00:08:37.448
Because it's going to continue
to do what we told it to do.

121
00:08:37.448 --> 00:08:44.844
When you set it here in your earlier media
query, span3-1 has a flex spaces of 100%.

122
00:08:44.844 --> 00:08:48.756
That will carry into this later one,
that's why we do all min widths.

123
00:08:48.756 --> 00:08:53.472
What comes before will continue into
the later media queries unless you

124
00:08:53.472 --> 00:08:56.469
specifically override those values later.

125
00:08:56.469 --> 00:09:01.689
So the span3-1 flex basis of 100%
carries into the media query

126
00:09:01.689 --> 00:09:06.556
here of 800 pixels unless we
declare it to be something else.

127
00:09:06.556 --> 00:09:12.367
We probably want this instead, so span3-1,

128
00:09:15.036 --> 00:09:19.433
And now, when we make the screen bigger,
we get that layout back again.

129
00:09:19.433 --> 00:09:21.872
You see how we did that?

130
00:09:21.872 --> 00:09:25.799
But when we go smaller,
it does exactly what we want it to do,

131
00:09:25.799 --> 00:09:28.578
two big boxes stacked
on top of each other.

132
00:09:28.578 --> 00:09:34.678
&gt;&gt; Would you not use flex direction
column so you can use align and justify?

133
00:09:34.678 --> 00:09:38.271
&gt;&gt; Sure, there's lots of ways that
you can do what I'm talking about.

134
00:09:38.271 --> 00:09:39.071
It's CSS,

135
00:09:39.071 --> 00:09:44.521
there's a bunch of different ways that
you can accomplish the same kinda thing.

136
00:09:44.521 --> 00:09:48.016
I try to tell you things that
are relatively straightforward and

137
00:09:48.016 --> 00:09:49.772
easy to understand in the code.

138
00:09:49.772 --> 00:09:54.165
But I'm sure you can find other ways of
doing this, if it makes more sense to you.

139
00:09:54.165 --> 00:09:56.798
That's great,
as always comment your code, so

140
00:09:56.798 --> 00:09:59.508
that people understand
what it is you're doing.

141
00:09:59.508 --> 00:10:04.545
What we have left here is,
we haven't written our span4,

142
00:10:04.545 --> 00:10:08.089
this that's this yellow one right here.

143
00:10:08.089 --> 00:10:12.681
That one has not had a class added yet, so

144
00:10:12.681 --> 00:10:17.961
we can say span4 has a flex basis of 100%.

145
00:10:19.612 --> 00:10:23.719
Here we go, and when you do that,
because the value here for

146
00:10:23.719 --> 00:10:27.908
span4 is set here to be the same
in your tablet media query and

147
00:10:27.908 --> 00:10:33.277
then in your desktop media query,
you don't actually have to redeclare it.

148
00:10:33.277 --> 00:10:37.334
You can if you want to, if it makes
your documentation easier to read, so

149
00:10:37.334 --> 00:10:42.125
people understand what's happening here by
all means leave it in, you haven't hurt

150
00:10:42.125 --> 00:10:46.808
anything.But you don't have to have it
here inside of your desktop declaration.

151
00:10:46.808 --> 00:10:52.110
Because it will carry through from your
tablet media query up here, right?

152
00:10:52.110 --> 00:10:55.316
We're not changing that
particular breakpoint or

153
00:10:55.316 --> 00:10:58.827
particular flex basis value
across the media queries.

154
00:11:02.360 --> 00:11:07.110
All right, so then the last thing to
deal with is these boxes down here on

155
00:11:07.110 --> 00:11:09.579
the bottom, is that 121 layout.

156
00:11:09.579 --> 00:11:17.966
And so here,
let's take a look at our HTML again.

157
00:11:17.966 --> 00:11:22.873
We had a span2 and then,
we had these two figures down here that

158
00:11:22.873 --> 00:11:27.610
have just this ordering type
of class associated with them.

159
00:11:27.610 --> 00:11:30.382
Now, we could take these order classes and

160
00:11:30.382 --> 00:11:33.622
we could tie them into
the Flexbox layout as well.

161
00:11:33.622 --> 00:11:39.425
Could be done, it's probably easier to
leave the ordering classes as their own

162
00:11:39.425 --> 00:11:45.157
utility classes that you just stack up
on top of the flex boxes independently.

163
00:11:45.157 --> 00:11:49.950
So now you have the flexibility of taking
ordering anywhere you want inside of your

164
00:11:49.950 --> 00:11:50.509
design.

165
00:11:50.509 --> 00:11:54.916
So if you take that philosophy
because it's just a philosophy,

166
00:11:54.916 --> 00:11:58.520
technically speaking you
can do whatever you want.

167
00:11:58.520 --> 00:12:04.305
Then, we might think about adding some
additional classes here in some way or

168
00:12:04.305 --> 00:12:05.113
another.

169
00:12:05.113 --> 00:12:09.398
Whatever it is that you wanna do here
to deal with this particular situation.

170
00:12:09.398 --> 00:12:14.691
So probably what we wanna do is,
we wanna have this span2 here,

171
00:12:14.691 --> 00:12:19.213
this first span2,
we actually wanna go to 100%.

172
00:12:19.213 --> 00:12:23.596
And then, these last two figures
we want them to go to 50%.

173
00:12:23.596 --> 00:12:28.347
So we'll probably wind up writing
some additional classes for that.

174
00:12:28.347 --> 00:12:34.625
Following this span3-1,
we might have a span2.

175
00:12:38.381 --> 00:12:43.125
-four, so normally two, two at desktop,

176
00:12:43.125 --> 00:12:46.586
four at a tablet media query, so

177
00:12:46.586 --> 00:12:51.857
here we'd say a flex basis of 100% for
that.

178
00:12:51.857 --> 00:12:56.824
And obviously you could combine these
into a single declaration as well,

179
00:12:56.824 --> 00:12:57.873
if you wanted.

180
00:12:57.873 --> 00:13:04.170
And then,
we need to change that up here span2-4.

181
00:13:04.170 --> 00:13:11.096
And then we need to adjust that
in our desktop, span2, span2-4.

182
00:13:14.048 --> 00:13:17.802
Okay, so that's good.

183
00:13:17.802 --> 00:13:22.917
And then these two here seem to be doing
exactly what we want them to do already.

184
00:13:22.917 --> 00:13:28.620
Which is behave like the boxes that we
have up here at the top of the screen.

185
00:13:28.620 --> 00:13:29.808
So that's pretty much it.

186
00:13:29.808 --> 00:13:34.445
That's how you write a grid system here,
look at that.

187
00:13:34.445 --> 00:13:39.381
So what we did was we came up with
a bunch of scenarios in our HTML.

188
00:13:39.381 --> 00:13:42.990
We laid them all out,
documented them, right?

189
00:13:42.990 --> 00:13:46.936
And then, we just went through and
wrote a few styles for all of those.

190
00:13:46.936 --> 00:13:51.562
So you don't really need a huge
complicated responsive design

191
00:13:51.562 --> 00:13:54.709
framework to deal with this type of thing.

192
00:13:54.709 --> 00:13:57.791
You just need to know how to
do a little bit of math and

193
00:13:57.791 --> 00:14:01.040
you can put something like
this together on your own.

