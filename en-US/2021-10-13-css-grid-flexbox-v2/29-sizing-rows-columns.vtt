WEBVTT

1
00:00:00.150 --> 00:00:04.950
All right, so what we have now then
is the shape that we're looking for.

2
00:00:04.950 --> 00:00:10.572
Now we can start to think about exactly
how wide do we want these columns,

3
00:00:10.572 --> 00:00:13.256
and how tall do we want these rows.

4
00:00:13.256 --> 00:00:17.719
And the best way to go about doing this
is to go get in there with some kind

5
00:00:17.719 --> 00:00:22.651
of pixel-based ruler and go measure
the dimensions of all of these squares.

6
00:00:22.651 --> 00:00:23.943
It is really tedious and

7
00:00:23.943 --> 00:00:28.083
I'm very happy to tell you do not have to
do that I have done that work for you.

8
00:00:28.083 --> 00:00:33.257
So, now we'll go back and
add that information that's gonna

9
00:00:33.257 --> 00:00:39.539
describe exactly how big and wide our
columns are and how tall our rows are.

10
00:00:39.539 --> 00:00:44.430
And the the syntax that we use to do that,
it's gonna go up here on our wrapper.

11
00:00:44.430 --> 00:00:49.765
So on the grid container on the parent,
it's gonna go right after

12
00:00:49.765 --> 00:00:55.205
we have our display grid, we have
our gap and we can now add to this.

13
00:00:55.205 --> 00:00:58.140
How many columns are we gonna have?

14
00:00:58.140 --> 00:01:02.120
This is grid-template-columns.

15
00:01:02.120 --> 00:01:06.350
So we're telling grid exactly how many
columns that we're going to have here.

16
00:01:06.350 --> 00:01:10.038
Usually when people write this type
of code, they specify this first,

17
00:01:10.038 --> 00:01:12.775
I wanted to put the emphasis
on the numbers first.

18
00:01:12.775 --> 00:01:17.695
So we did that now we're coming back and
entering how many columns we have here.

19
00:01:19.235 --> 00:01:23.791
So as my measurements have deduced, and
I've done this in pixels because we want

20
00:01:23.791 --> 00:01:27.016
these to match up as closely
as possible to the painting.

21
00:01:27.016 --> 00:01:32.729
These numbers are 124 pixels,

22
00:01:32.729 --> 00:01:38.446
376 pixels, and 42 pixels.

23
00:01:38.446 --> 00:01:42.022
So you can just using this
grid template columns syntax,

24
00:01:42.022 --> 00:01:46.180
you can line up however many
dimensions that you want.

25
00:01:46.180 --> 00:01:48.280
For however many columns that you want,

26
00:01:48.280 --> 00:01:51.510
and grid will do this
particular type of layout.

27
00:01:51.510 --> 00:01:53.850
So you can have different widths for
those columns.

28
00:01:53.850 --> 00:01:57.910
You can have different units of measure
for these columns if you wanted.

29
00:01:57.910 --> 00:02:00.250
Here I've used all pixels but
I could have messed it up.

30
00:02:00.250 --> 00:02:02.887
I could have done some rems,
I could have done some percents,

31
00:02:02.887 --> 00:02:06.450
I could have done M's and there's a couple
of other units we'll talk about later.

32
00:02:08.210 --> 00:02:12.328
So that gets us a little bit closer
in terms of our rows and such,

33
00:02:12.328 --> 00:02:14.677
or in terms of our columns and such.

34
00:02:14.677 --> 00:02:20.663
So now we can do the same thing
with our rows, grid-template-rows,

35
00:02:20.663 --> 00:02:24.524
and the numbers here would be 170 pixels,

36
00:02:26.684 --> 00:02:33.639
210 pixels, 61 pixels, and 61 pixels.

37
00:02:35.247 --> 00:02:38.071
The lining up here isn't exactly perfect.

38
00:02:38.071 --> 00:02:42.830
Remember that this started as a painting
done by a human not by a robot.

39
00:02:42.830 --> 00:02:46.927
And so Mondrian has things just
slightly off but we get pretty,

40
00:02:46.927 --> 00:02:50.510
pretty close to the painting layout here.

41
00:02:50.510 --> 00:02:56.340
So as you see now we have all of our
cells more or less on top of each other.

42
00:02:56.340 --> 00:03:01.539
You'll do notice that we have a bit of a
gap over here to the side of letter c and

43
00:03:01.539 --> 00:03:04.710
that is because that is way gaps work.

44
00:03:04.710 --> 00:03:08.670
So we've got gaps all
around just like that.

45
00:03:08.670 --> 00:03:14.880
And, now we can start to fill in these
cells with the appropriate colors.

46
00:03:14.880 --> 00:03:18.190
So the easiest way to do
this is the following.

47
00:03:18.190 --> 00:03:21.578
Here right again on the wrapper,

48
00:03:21.578 --> 00:03:26.974
I'm gonna set a background color of black.

49
00:03:26.974 --> 00:03:31.532
Which will make it very hard to
see what we're doing exactly but

50
00:03:31.532 --> 00:03:37.393
that will wind up filling in that grid gap
area, with the black lines in between.

51
00:03:37.393 --> 00:03:45.679
And then,
Now all we need to do is the following.

52
00:03:45.679 --> 00:03:49.853
Here on our div, we can get rid
of this opacity part of this.

53
00:03:52.114 --> 00:03:55.312
So that makes things pop
out quite a bit more, and

54
00:03:55.312 --> 00:03:58.673
then all we need to do is
assign our various colors.

55
00:03:58.673 --> 00:04:03.742
So here and
letter c which is the big red box,

56
00:04:03.742 --> 00:04:06.488
our background color.

57
00:04:06.488 --> 00:04:10.390
Using an eyedropper tool,
I determine the exact state of red.

58
00:04:10.390 --> 00:04:14.220
This is de271d.

59
00:04:14.220 --> 00:04:17.366
So that'll give us a big red box, yes?

60
00:04:17.366 --> 00:04:21.276
&gt;&gt; The gap automatically adds to
all sides or all after the first?

61
00:04:21.276 --> 00:04:23.119
I don't see a gap on the far left.

62
00:04:23.119 --> 00:04:26.970
&gt;&gt; Yes, all after the first
exactly as you see here, yep.

63
00:04:29.139 --> 00:04:34.940
And then here for letter d,
we have a background color,

64
00:04:38.242 --> 00:04:43.178
Of 015ca0.

65
00:04:43.178 --> 00:04:49.643
If you want of course you can just use the
red, blue, and yellow, that's okay too.

66
00:04:49.643 --> 00:04:53.705
And then down here in letter g,

67
00:04:53.705 --> 00:04:58.863
we have a background color of ecdb6b,

68
00:04:58.863 --> 00:05:02.631
that is the shade of yellow.

69
00:05:02.631 --> 00:05:06.758
And then the last little bit of weirdness
that you see here is from our background

70
00:05:06.758 --> 00:05:08.366
image, we can get rid of that.

71
00:05:08.366 --> 00:05:14.090
So that's up here on our wrapper around
line number 5, get rid of that background.

72
00:05:14.090 --> 00:05:20.310
And we have something approximating
the painting here by Mondrian, all right?

73
00:05:21.320 --> 00:05:24.770
That is something you would not be
able to do with Flexbox for sure.

74
00:05:26.430 --> 00:05:29.508
Any questions on this
basic basics of grid and

75
00:05:29.508 --> 00:05:33.560
how this starts to work in
terms of layout, any questions?

76
00:05:34.560 --> 00:05:38.470
&gt;&gt; Can that last gap be reset
like with margin and last child?

77
00:05:40.780 --> 00:05:46.141
&gt;&gt; I don't think you can use last
child specifically with the gap but

78
00:05:46.141 --> 00:05:47.417
you could try.

79
00:05:47.417 --> 00:05:54.540
The gap gets set on the parent so it's on
the wrapper, not on the individual cell.

80
00:05:54.540 --> 00:05:57.710
So I'm not sure that that is
necessarily going to work.

81
00:05:59.000 --> 00:05:59.650
Good idea, though

