WEBVTT

1
00:00:00.130 --> 00:00:02.590
&gt;&gt; Richard Feldman: So we've got these
different business logic rules and

2
00:00:02.590 --> 00:00:05.220
we've got these tags representing
our different possibilities.

3
00:00:05.220 --> 00:00:07.360
So we have YourFeed,
GlobalFeed, or TagFeed.

4
00:00:07.360 --> 00:00:13.220
Each of these scenarios, we are logged
in or not and we have the active tab and

5
00:00:13.220 --> 00:00:16.700
those are the sort of two pieces of
information we have to work with.

6
00:00:16.700 --> 00:00:19.030
So the good part is,
we have a sort of single choice of truth.

7
00:00:19.030 --> 00:00:23.300
We have exactly the information that we
need and we have no competing sources of

8
00:00:23.300 --> 00:00:26.860
truth as to which tab is active or
whether or not we're logged in.

9
00:00:26.860 --> 00:00:27.810
It's just these two right here.

10
00:00:28.900 --> 00:00:33.972
So, in the event that we have
YourFeed as the active tab, we have,

11
00:00:33.972 --> 00:00:38.120
we're already aware
that you are logged in.

12
00:00:38.120 --> 00:00:41.770
We shouldn't have to deal with
a separate case of you're not logged in,

13
00:00:41.770 --> 00:00:43.470
that shouldn't be able to come up.

14
00:00:43.470 --> 00:00:45.600
In the actual version of this,
I simplified it a little bit for

15
00:00:45.600 --> 00:00:49.960
the exercise, in the actual version of
this, we're using a cred inside this,

16
00:00:49.960 --> 00:00:53.540
to make sure that you actually can't have
this without being logged in for sure.

17
00:00:53.540 --> 00:00:56.570
In this case, theoretically,
that could come up, but for the purpose of

18
00:00:56.570 --> 00:01:00.520
the exercise, we'll assume that it can't,
just like it can't in the real version.

19
00:01:00.520 --> 00:01:07.750
Okay, so inside our tab, and YourFeed,
and we need to render something here.

20
00:01:07.750 --> 00:01:09.920
So by default, we're rendering empty list.

21
00:01:09.920 --> 00:01:12.670
But what we actually want to
render is a list of tabs.

22
00:01:14.005 --> 00:01:19.130
So we have this thing called viewTab,
which is going to take a list

23
00:01:19.130 --> 00:01:25.015
of attributes followed by a string
message tuple and return HTML message.

24
00:01:25.015 --> 00:01:26.705
So how does that work?

25
00:01:26.705 --> 00:01:30.383
Inside viewTab,
we have it's LI which is a nav-item and

26
00:01:30.383 --> 00:01:35.150
it renders an A with sort of like
the nav-link for that particular thing.

27
00:01:36.600 --> 00:01:40.890
So, how do we decide what to pass in for
this tuple?

28
00:01:40.890 --> 00:01:43.660
Well, as it turns out, we have a list of

29
00:01:43.660 --> 00:01:48.600
tuples right here that conveniently match
up with exactly the tabs that we have.

30
00:01:48.600 --> 00:01:55.350
So YourFeed is a string of YourFeed,
followed by a tuple of the tuple together

31
00:01:55.350 --> 00:01:59.826
with the appropriate message for what
should happen when you click YourFeed tab.

32
00:01:59.826 --> 00:02:03.250
Same thing with GlobalFeed and
same thing with TagFeed.

33
00:02:03.250 --> 00:02:08.580
So essentially what we're going to do,
is we're going to say viewTab, followed by

34
00:02:09.780 --> 00:02:14.830
the particular tab that we want to view.

35
00:02:14.830 --> 00:02:20.370
So for example, we might say viewTab and
then empty, array because we don't want

36
00:02:20.370 --> 00:02:24.610
to specify any extra attributes there and
for the tuple here we might say, YourFeed.

37
00:02:24.610 --> 00:02:28.230
That's going to give us back some HTML
message which we will then put inside

38
00:02:28.230 --> 00:02:30.410
our list right here.

39
00:02:30.410 --> 00:02:32.340
So, let's see what that does.

40
00:02:32.340 --> 00:02:33.730
Okay.
Compiled it.

41
00:02:33.730 --> 00:02:34.440
Whoops.

42
00:02:34.440 --> 00:02:37.600
Didn't mean to refresh the slides but
we did.

43
00:02:37.600 --> 00:02:45.607
Okay, so that's not doing anything yet
because when we have a viewTabs,

44
00:02:45.607 --> 00:02:49.540
that's calling this here.

45
00:02:51.320 --> 00:02:57.200
And we're not calling the yourTab
thing because we're not signed in.

46
00:02:57.200 --> 00:02:58.759
So we need to sign up.

47
00:03:02.640 --> 00:03:03.370
Okay.

48
00:03:03.370 --> 00:03:06.720
Now I'm logged in and
we have this glorious YourFeed tab.

49
00:03:06.720 --> 00:03:07.820
Excellent.

50
00:03:07.820 --> 00:03:10.220
That is exactly what we wanted.

51
00:03:10.220 --> 00:03:15.050
We also, according to business logic,
are supposed to render a GlobalFeed, so

52
00:03:15.050 --> 00:03:16.150
let's put one of those in there too.

53
00:03:18.980 --> 00:03:19.481
Oops.

54
00:03:21.834 --> 00:03:23.047
&gt;&gt; Richard Feldman: What's
the problem there?

55
00:03:24.963 --> 00:03:26.161
&gt;&gt; Richard Feldman: Oops, viewTag.

56
00:03:26.161 --> 00:03:28.664
[LAUGH], wrong function,
I still want a name.

57
00:03:30.307 --> 00:03:32.161
&gt;&gt; Richard Feldman: All right, so
now we have both of those, but

58
00:03:32.161 --> 00:03:34.240
neither of them is rendering as active.

59
00:03:34.240 --> 00:03:34.800
What's up with that?

60
00:03:34.800 --> 00:03:41.279
Well, the problem there is fundamentally
that viewTab expects this attribute here,

61
00:03:41.279 --> 00:03:46.180
to be passed in with a class of active
if it's going to be actually active.

62
00:03:46.180 --> 00:03:48.992
And we're currently not passing
in any extra classes there.

63
00:03:50.068 --> 00:03:52.860
&gt;&gt; Richard Feldman: So, there we go.

64
00:03:52.860 --> 00:03:55.030
Now, we can see that
YourFeed is the active tab.

65
00:03:55.030 --> 00:03:58.120
However, as soon as I click
GlobalFeed nothing good happens.

66
00:03:58.120 --> 00:03:59.420
The tabs all disappear.

67
00:03:59.420 --> 00:04:00.100
The reason for

68
00:04:00.100 --> 00:04:03.870
that being, we don’t actually have
any logic in here for GlobalFeed.

69
00:04:03.870 --> 00:04:05.610
But we know how a GlobalFeed
is supposed to work.

70
00:04:05.610 --> 00:04:11.050
It’s supposed to work fundamentally
the same as YourFeed except of course

71
00:04:11.050 --> 00:04:12.510
which one is selected should be different.

72
00:04:12.510 --> 00:04:17.680
And this isn’t quite true because this
is assuming that we are logged in.

73
00:04:17.680 --> 00:04:21.710
So in the logged in case, yes fair enough,
this is how it ought to work, and

74
00:04:21.710 --> 00:04:24.460
this will now allow us to click back and
forth between the two.

75
00:04:24.460 --> 00:04:27.570
But we do want to handle
this additional case of

76
00:04:27.570 --> 00:04:29.440
what happens if we are not logged in?

77
00:04:29.440 --> 00:04:31.630
We wanna show something
slightly different, so

78
00:04:31.630 --> 00:04:32.760
we're gonna do a conditional here.

79
00:04:32.760 --> 00:04:37.790
If is logged in,
then we're gonna do that, otherwise

80
00:04:37.790 --> 00:04:41.010
we're not going to render YourFeed,
we're just going to render the GlobalFeed.

81
00:04:42.850 --> 00:04:48.770
Okay, so now we can see that this logic
still works the same way as before.

82
00:04:48.770 --> 00:04:52.720
But if I open this in incognito mode,
we only see the GlobalFeed.

83
00:04:52.720 --> 00:04:53.820
We don't see YourFeed.

84
00:04:55.000 --> 00:04:56.540
Okay, so far so good.

85
00:04:56.540 --> 00:05:01.540
So we've handled each of those cases,
now we need to handle the TagFeed case.

86
00:05:01.540 --> 00:05:05.010
Once again, TagFeed is going to have two
different branches, one for logged in and

87
00:05:05.010 --> 00:05:05.740
one for not logged in.

88
00:05:05.740 --> 00:05:08.940
And the only difference between
the two is going to be whether or

89
00:05:08.940 --> 00:05:10.524
not your feed exists in the list.

90
00:05:11.885 --> 00:05:15.445
So in both cases,
when you have the TagFeed,

91
00:05:15.445 --> 00:05:19.245
not only do you only have a TagFeed
rendered when it's the active one,

92
00:05:19.245 --> 00:05:21.645
according to our final
piece of business logic.

93
00:05:21.645 --> 00:05:26.595
But we also have the rule that when
it's rendered, it's supposed to be last.

94
00:05:26.595 --> 00:05:30.307
So we're going to put that at the end
there, and we're going to say,

95
00:05:30.307 --> 00:05:35.966
viewTab
&gt;&gt; Richard Feldman: Class active,

96
00:05:35.966 --> 00:05:41.164
and TagFeed, TagName.

97
00:05:43.317 --> 00:05:46.032
&gt;&gt; Richard Feldman: Okay, and then that's
getting a little horizontally excessive,

98
00:05:46.032 --> 00:05:48.520
so we'll start to organize these
more vertically like this.

99
00:05:52.760 --> 00:05:54.050
Okay.

100
00:05:54.050 --> 00:05:55.570
So now, we have YourFeed,

101
00:05:55.570 --> 00:06:00.990
GlobalFeed and the active one being
the TagFeed with that particular TagName.

102
00:06:00.990 --> 00:06:03.900
So TagFeed because each
TagFeed has a particular

103
00:06:03.900 --> 00:06:07.360
tag that it's supposed to display,
takes that string as an argument.

104
00:06:07.360 --> 00:06:08.499
So let's see how that looks.

105
00:06:09.960 --> 00:06:11.390
So by default, no tags.

106
00:06:11.390 --> 00:06:14.350
As soon as I pick one, bam,
now we have some tags.

107
00:06:14.350 --> 00:06:15.910
As soon as I click back, the tags go away.

108
00:06:17.360 --> 00:06:20.500
And last but not least, we have
the situation where we are not logged in,

109
00:06:20.500 --> 00:06:27.173
which case it's the same as before,
but without the your feed option.

110
00:06:28.460 --> 00:06:31.200
So GlobalFeed and now TagFeed.

111
00:06:31.200 --> 00:06:35.550
So there we go, we have now successfully
enumerated all the possible states,

112
00:06:35.550 --> 00:06:38.690
we have no additional sources of truth.

113
00:06:38.690 --> 00:06:42.640
This is essentially immune from
the bug that we saw in the slides

114
00:06:42.640 --> 00:06:45.000
where multiple tabs
are active at the same time.

115
00:06:45.000 --> 00:06:48.420
Now granted, we could still induce
that bug by doing something like this.

116
00:06:48.420 --> 00:06:51.340
That would produce way
too many GlobalFeeds.

117
00:06:51.340 --> 00:06:53.740
We have certainly not ruled
out that possibility.

118
00:06:54.900 --> 00:07:00.530
However, it's not as,
as much easier mistake to detect.

119
00:07:00.530 --> 00:07:02.620
The problem with the other
one was that with so

120
00:07:02.620 --> 00:07:05.230
many multiple sources of truth bugs,
it was a risk condition.

121
00:07:05.230 --> 00:07:08.390
It only happened with certain
timing characteristics.

122
00:07:08.390 --> 00:07:10.300
In this one,
if at least we're going to make a mistake,

123
00:07:10.300 --> 00:07:11.900
it's always going to be a mistake.

124
00:07:11.900 --> 00:07:13.970
It's not going to be based on
the particular timing of how you

125
00:07:13.970 --> 00:07:16.690
happen to be clicking between these things
which is a much better place to be.

