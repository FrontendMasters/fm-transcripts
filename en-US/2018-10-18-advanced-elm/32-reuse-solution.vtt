WEBVTT

1
00:00:00.310 --> 00:00:04.100
&gt;&gt; Richard Feldman: So we have two
TODOs in two different places, but

2
00:00:04.100 --> 00:00:06.420
they're will essentially wanting
to accomplish the same thing.

3
00:00:06.420 --> 00:00:10.648
Which is to say, we wanna move
this viewPagination function,

4
00:00:10.648 --> 00:00:15.695
extract it out of profile and out of home,
and move it into PaginatedList.

5
00:00:15.695 --> 00:00:17.497
So let's start by putting it here,

6
00:00:17.497 --> 00:00:20.810
and PagenatedList.viewPagination
is a little bit redundant.

7
00:00:20.810 --> 00:00:23.430
So let's just go ahead and
rename that to view, and

8
00:00:23.430 --> 00:00:27.600
I'm definitely gonna need to expose
this so that those files can call it.

9
00:00:27.600 --> 00:00:31.710
What I'm gonna do at this point is
since I just wanna make sure that

10
00:00:31.710 --> 00:00:34.740
this thing works properly
inside of this module.

11
00:00:34.740 --> 00:00:38.779
I'm actually just gonna compile
that thing alone by itself,

12
00:00:38.779 --> 00:00:43.596
I actually it shouldn't bother
compiling main.elm because I just wanna

13
00:00:43.596 --> 00:00:46.929
see if my paginatedList
works probably fast.

14
00:00:46.929 --> 00:00:50.740
It actually doesn't, okay,
let see what else we got.

15
00:00:50.740 --> 00:00:52.721
There is couple of problems here one is,

16
00:00:52.721 --> 00:00:56.970
it's acting like it needs its own
message type, but it doesn't have one.

17
00:00:56.970 --> 00:00:59.435
Second is that doesn't actually
know what an articles is.

18
00:00:59.435 --> 00:01:02.550
Okay fair enough, so

19
00:01:02.550 --> 00:01:07.240
both of these are potentially
solvable by using type variables.

20
00:01:07.240 --> 00:01:09.260
So if we look at our
paginatedList here and

21
00:01:09.260 --> 00:01:12.250
if we look at how it's
actually being used.

22
00:01:12.250 --> 00:01:16.540
If I jump through these functions
it's okay, I'm calling page on list,

23
00:01:16.540 --> 00:01:20.900
I'm calling total on list,
am I doing anything else to the list?

24
00:01:20.900 --> 00:01:23.570
Looks like not, what do page and total do?

25
00:01:23.570 --> 00:01:25.700
Well, if I look at those functions,

26
00:01:25.700 --> 00:01:29.720
one takes a paginatedList of any
type variable and returns an int.

27
00:01:29.720 --> 00:01:34.049
And total also takes a paginatedList of
any type variable and returns an int.

28
00:01:34.049 --> 00:01:37.456
So what that means is that I don't
actually need this to take an article

29
00:01:37.456 --> 00:01:38.410
preview.

30
00:01:38.410 --> 00:01:40.530
I can just make it completely unbound.

31
00:01:40.530 --> 00:01:43.090
I can say yeah, I'll view this thing and

32
00:01:43.090 --> 00:01:46.130
it's just gonna work out fine,
as far as I can tell.

33
00:01:47.230 --> 00:01:50.850
Let's see if that's true,
okay, so far so good.

34
00:01:50.850 --> 00:01:52.780
It just says I can't
find the message type.

35
00:01:52.780 --> 00:01:55.390
So, it didn't actually complain
about that being a problem.

36
00:01:55.390 --> 00:01:59.370
So in other words, the two operations
that I'm actually doing on this list,

37
00:01:59.370 --> 00:02:03.290
I'm getting the total count which is
to say the total number of pages in

38
00:02:03.290 --> 00:02:08.530
the paginatedList, and
I'm getting the current page in the list.

39
00:02:08.530 --> 00:02:12.720
Neither of those has anything to do
with what happens to be inside the list.

40
00:02:12.720 --> 00:02:16.340
So it's totally fine for purposes of
viewing the actual pagination for

41
00:02:16.340 --> 00:02:18.760
us to give it an unbound type variable,
and say yeah,

42
00:02:18.760 --> 00:02:21.360
if you wanna view this thing,
I don’t actually care what’s inside of it.

43
00:02:21.360 --> 00:02:24.900
That’s somebody else's job to deal with,
I’m just here to render the pagination

44
00:02:24.900 --> 00:02:27.870
itself, which only cares about numbers,
not about the content itself.

45
00:02:29.220 --> 00:02:33.534
Okay, cool, so,
that takes care of that one error.

46
00:02:33.534 --> 00:02:35.850
We saw the other one where it says
I cannot find a message type.

47
00:02:35.850 --> 00:02:38.490
I don’t know what that is,

48
00:02:38.490 --> 00:02:42.936
which is fair because the paginatedList
itself does not have a message type.

49
00:02:42.936 --> 00:02:45.090
And what do I really want to
introduce one unless again,

50
00:02:45.090 --> 00:02:46.670
I've gone through the motions said, yeah,

51
00:02:46.670 --> 00:02:51.710
I concluded base on how this things
being used that it really does have so

52
00:02:51.710 --> 00:02:54.470
many different message types that
I wanna give it on message type.

53
00:02:54.470 --> 00:02:57.350
We're not there yet,
let's see if we can do it with that first.

54
00:02:57.350 --> 00:03:00.260
Okay, so
how's this message actually being used?

55
00:03:00.260 --> 00:03:02.540
Well, we have something
called ClicksFeedPage.

56
00:03:02.540 --> 00:03:06.480
That's clearly a message constructor,
a message variance rather.

57
00:03:06.480 --> 00:03:07.860
Is there anything else?

58
00:03:07.860 --> 00:03:11.430
I don't really see anything, it looks like
that's the only one that we actually need.

59
00:03:11.430 --> 00:03:13.180
So we only have this one
on click handler and

60
00:03:13.180 --> 00:03:15.130
that's the only place where this comes up.

61
00:03:15.130 --> 00:03:19.456
So I see that ClickedFeed Page
is currently taking targetPage,

62
00:03:19.456 --> 00:03:21.516
targetPage is an integer.

63
00:03:21.516 --> 00:03:22.520
So what I can do is I can just say,

64
00:03:22.520 --> 00:03:25.908
okay, pageLink is going to take
an int to message function.

65
00:03:25.908 --> 00:03:30.766
So I'm gonna name toMsg and
then I'm just gonna call toMsg instead of

66
00:03:30.766 --> 00:03:35.147
that actual message constructor
there of ClickedFeedPage.

67
00:03:38.736 --> 00:03:41.578
&gt;&gt; Richard Feldman: Okay, well now
pageLink takes the next argument which

68
00:03:41.578 --> 00:03:45.710
means I'm no longer able to call it
using exactly what I was doing before.

69
00:03:45.710 --> 00:03:49.558
So I need to add an extra toMsg in here,
I'm just gonna propagate that up and

70
00:03:49.558 --> 00:03:52.018
say view needs also to
take that as an argument.

71
00:03:55.601 --> 00:03:59.435
&gt;&gt; Richard Feldman: Now, based on that,
I extracted this thing from profile, so

72
00:03:59.435 --> 00:04:04.740
wherever I was calling ViewPagination,
which appears to be only in one place.

73
00:04:04.740 --> 00:04:10.160
I now know that that's going
to become PaginatedList.view,

74
00:04:10.160 --> 00:04:12.570
and I know what the first
argument's gonna be.

75
00:04:12.570 --> 00:04:15.430
It's ClickedFeedPage, because that's
exactly what was there before.

76
00:04:16.940 --> 00:04:19.070
So now, I have made it so

77
00:04:19.070 --> 00:04:25.100
that I have successfully deleted
this thing out of a profile.

78
00:04:25.100 --> 00:04:29.960
I'm now delegating to this reusable
thing inside PaginatedList.view.

79
00:04:29.960 --> 00:04:32.420
And I'm passing in exactly the same
argument that I had before.

80
00:04:32.420 --> 00:04:34.990
So based on how I just
refactored that code,

81
00:04:34.990 --> 00:04:37.380
everything still should work
the same way as before.

82
00:04:37.380 --> 00:04:39.000
So let's find out that's true.

83
00:04:39.000 --> 00:04:40.800
So I'm gonna build the PaginatedList, and

84
00:04:40.800 --> 00:04:45.680
I have a syntax error
because I messed up on 107.

85
00:04:45.680 --> 00:04:50.280
Right, definitely gonna need
an extra arrow there, okay.

86
00:04:50.280 --> 00:04:55.350
But I still didn't adjust the type
annotation even though, [LAUGH] I made

87
00:04:55.350 --> 00:05:00.970
it more flexible but then didn't annotate
as such, oops, that's better, okay.

88
00:05:00.970 --> 00:05:06.820
So now the paginatedList compiles, and
I can check to see if profile compiles.

89
00:05:06.820 --> 00:05:08.160
So I'm gonna do the same thing here.

90
00:05:08.160 --> 00:05:12.340
I'm not gonna quite bother compiling the
other stuff yet because I just wanna kinda

91
00:05:12.340 --> 00:05:14.900
working on those two files that I
made adjustments to, and sure enough,

92
00:05:14.900 --> 00:05:16.570
they now both compile.

93
00:05:16.570 --> 00:05:20.020
So we've confirmed that number one,
profile is the least,

94
00:05:20.020 --> 00:05:22.870
from the compiler's perspective,
doing what it was doing before.

95
00:05:22.870 --> 00:05:25.500
And the logic here is simple enough that
I'm pretty confident it is, in fact,

96
00:05:25.500 --> 00:05:27.100
doing what it was doing before.

97
00:05:27.100 --> 00:05:30.060
But I also now have this
nice reusable thing

98
00:05:30.060 --> 00:05:32.536
which actually is no third-party
dependencies whatsoever.

99
00:05:32.536 --> 00:05:37.730
It's all type valuables, it's got HTML,
an int, and PaginatedList, and that's it.

100
00:05:37.730 --> 00:05:40.140
Everything else is completely flexible.

101
00:05:40.140 --> 00:05:46.500
Cool, so let's see about doing that in
the other place, which was the Home page.

102
00:05:48.450 --> 00:05:51.090
So inside Home, we have the same
TODO as what we had before, and

103
00:05:51.090 --> 00:05:54.560
we have the same viewPagination
thing that we have right here.

104
00:05:54.560 --> 00:05:58.620
So this time, I'm just gonna go ahead and
delete this sucker and do without.

105
00:06:00.470 --> 00:06:03.530
So I look at viewPagination, again,
that's only called in one place.

106
00:06:03.530 --> 00:06:05.470
I'm actually gonna undo that real quick,

107
00:06:05.470 --> 00:06:09.180
just long enough to grab
this thing right here.

108
00:06:09.180 --> 00:06:11.240
So that I don't have to remember it later.

109
00:06:11.240 --> 00:06:14.260
And now, I remember from before,

110
00:06:14.260 --> 00:06:18.880
that I'm gonna use that same message that
was in the implementation as the first

111
00:06:18.880 --> 00:06:24.170
argument to the function now
known as PaginatedList.view.

112
00:06:24.170 --> 00:06:28.460
Okay, now I'm gonna run the same thing,
but I'm gonna run it on the Home page.

113
00:06:29.620 --> 00:06:30.620
That worked, and,

114
00:06:30.620 --> 00:06:34.484
if that's true, theoretically that was
all that was affected by those changes.

115
00:06:34.484 --> 00:06:35.694
So I should be able to compile main, and

116
00:06:35.694 --> 00:06:38.554
then sure enough
the entire thing compiles.

117
00:06:38.554 --> 00:06:41.794
And we have successfully
reused this thing that

118
00:06:41.794 --> 00:06:43.804
really is the same on both of those pages.

