WEBVTT

1
00:00:00.260 --> 00:00:02.580
&gt;&gt; Richard Feldman: Welcome everybody,
this is Advanced Elm.

2
00:00:02.580 --> 00:00:04.940
So hopefully, you've had a chance
to go through the instructions and

3
00:00:04.940 --> 00:00:05.490
get all set up.

4
00:00:05.490 --> 00:00:07.990
You should already have your
local server running and

5
00:00:07.990 --> 00:00:10.570
be able to see the you're all set screen.

6
00:00:10.570 --> 00:00:13.770
If so, good to go,
be all set for the exercises.

7
00:00:13.770 --> 00:00:16.940
Okay, so, gonna start off with a little

8
00:00:16.940 --> 00:00:19.330
introduction to what we're gonna
be going over in the course.

9
00:00:19.330 --> 00:00:21.880
I'm gonna give a little bit of
background about this course,

10
00:00:21.880 --> 00:00:24.000
talk about some goals, and

11
00:00:24.000 --> 00:00:28.050
then give an outline of sort of everything
that we're gonna be going through today.

12
00:00:28.050 --> 00:00:30.760
Finally I'll wrap up with just
the overall structure of the workshop.

13
00:00:31.790 --> 00:00:35.749
So some background, basically the way that
this workshop sort of came about is I have

14
00:00:35.749 --> 00:00:39.320
personally undergone this transition
of starting off doing Elm as a hobby,

15
00:00:39.320 --> 00:00:42.252
then doing Elm at work and
then eventually doing Elm at scale.

16
00:00:42.252 --> 00:00:45.991
So now I've been doing Elm for about four
years, we've got about a quarter million

17
00:00:45.991 --> 00:00:49.340
lines of Elm code at work in production,
and I use it every day at work.

18
00:00:49.340 --> 00:00:53.420
And so over this period of time
I've learned a lot about Elm, and

19
00:00:53.420 --> 00:00:56.220
I've also started to see other people
go through a similar transition.

20
00:00:56.220 --> 00:00:59.520
Where they started off doing Elm as a
hobby, and then started doing Elm at work.

21
00:00:59.520 --> 00:01:03.400
And then are sort of looking to grow from
maybe introducing it at work, to using it

22
00:01:03.400 --> 00:01:06.980
at scale, or maybe just go from Using
it as a hobby to using it at work.

23
00:01:06.980 --> 00:01:10.910
And sort of understanding the challenges
that come with going from, sort of,

24
00:01:10.910 --> 00:01:12.930
Elm at a small scale to
Elm at a large scale.

25
00:01:14.180 --> 00:01:17.520
So I observed that with my interactions
with the community a lot of

26
00:01:17.520 --> 00:01:21.080
frequently ask questions that people have
as they sort of go through these things.

27
00:01:21.080 --> 00:01:22.990
And I've also sort of
solicited from people,

28
00:01:22.990 --> 00:01:25.390
what are the topics that
people want to hear about?

29
00:01:25.390 --> 00:01:28.850
So based on all of that, I ended up sort
of putting together this course that, or,

30
00:01:28.850 --> 00:01:31.760
sort of, the culmination of the things
that I think will be the most valuable

31
00:01:31.760 --> 00:01:35.420
to talk about for anyone who's
going through this transition from

32
00:01:35.420 --> 00:01:39.780
sort of Elm as a side thing to Elm
as a full scale serious Elm project.

33
00:01:40.900 --> 00:01:43.900
And the goal is that we
will end up with something

34
00:01:43.900 --> 00:01:47.090
that will be valuable to you as
you're going through this transition.

35
00:01:47.090 --> 00:01:51.710
Some more specific goals is to
talk about these four things.

36
00:01:51.710 --> 00:01:54.360
One is how to rule out more
problems at compile time.

37
00:01:54.360 --> 00:01:57.310
Obviously we get a lot of
benefit from Elm's compiler just

38
00:01:57.310 --> 00:01:59.970
giving us a lot of help as we
structure our applications.

39
00:01:59.970 --> 00:02:01.130
But with certain techniques,

40
00:02:01.130 --> 00:02:05.402
we can actually give it the ability to
help us even more and help it help us.

41
00:02:05.402 --> 00:02:09.060
Another is how to organize and
scale Elm applications.

42
00:02:09.060 --> 00:02:12.330
There's some techniques that you can use
that will make that process go better than

43
00:02:12.330 --> 00:02:16.240
just sort of like taking what you
started with and just doing that more.

44
00:02:16.240 --> 00:02:17.640
We'll talk about what
those techniques are.

45
00:02:18.660 --> 00:02:21.900
Talking about how to reuse parts of a user
interface, this is something that comes up

46
00:02:21.900 --> 00:02:24.040
because I think it's something
that Elm does pretty uniquely.

47
00:02:24.040 --> 00:02:27.290
There aren't any other virtual DOM systems
that do this quite the same way that

48
00:02:27.290 --> 00:02:28.190
Elm does.

49
00:02:28.190 --> 00:02:30.350
And so we're gonna talk about
reuse as a general topic and

50
00:02:30.350 --> 00:02:31.920
how to do it effectively in Elm.

51
00:02:31.920 --> 00:02:34.580
And finally we're just gonna talk
about how to manage external data and

52
00:02:34.580 --> 00:02:38.480
that has to do with both JSON as
well as dealing with JavaScript and

53
00:02:38.480 --> 00:02:41.790
also with dealing with the server
authentication things like that.

54
00:02:41.790 --> 00:02:43.310
So all these sources of external data and

55
00:02:43.310 --> 00:02:45.479
how we manage them within
our Elm applications.

56
00:02:46.870 --> 00:02:48.963
So the outline of the course,
we're gonna have eight sections.

57
00:02:48.963 --> 00:02:50.680
The first one is going to be Opaque Types.

58
00:02:50.680 --> 00:02:53.237
The second one is going to
be about Extensible Data.

59
00:02:53.237 --> 00:02:54.942
Third is Creating Constraints.

60
00:02:54.942 --> 00:02:56.336
Fourth is Scaling.

61
00:02:56.336 --> 00:03:00.344
Fifth is Reuse then Sources of Truth,
Decoding and

62
00:03:00.344 --> 00:03:03.850
finally Single-Page applications.

63
00:03:03.850 --> 00:03:05.680
So we're gonna go through these
over the course of the day.

64
00:03:05.680 --> 00:03:07.940
We're gonna have a mix of
slides like we have here and

65
00:03:07.940 --> 00:03:09.320
looking through code examples.

66
00:03:09.320 --> 00:03:11.150
Plenty of opportunities to ask questions.

67
00:03:11.150 --> 00:03:12.250
And by the end of it,

68
00:03:12.250 --> 00:03:15.500
we should have a much better
understanding of each of these topics.

69
00:03:15.500 --> 00:03:19.530
You might notice there's a theme of these
sort of it's a focus on techniques.

70
00:03:19.530 --> 00:03:22.257
One of the things that people asked
me about when I was first doing

71
00:03:22.257 --> 00:03:24.834
this course was they would ask
about specific libraries, so

72
00:03:24.834 --> 00:03:26.719
things like hey can I
learn how to do Elm CSS?

73
00:03:26.719 --> 00:03:28.732
Or can I learn how to
use style elements or

74
00:03:28.732 --> 00:03:31.706
can I learn how to use testing
libraries more effectively?

75
00:03:31.706 --> 00:03:36.552
But I ended up with this set of topics
that focuses a lot more on techniques than

76
00:03:36.552 --> 00:03:38.570
specific libraries.

77
00:03:38.570 --> 00:03:41.320
Basically because I think these
are skills that translates no matter what

78
00:03:41.320 --> 00:03:42.370
library we are using.

79
00:03:42.370 --> 00:03:46.060
Even the section of decoding although
it's specific to a particular packages it

80
00:03:46.060 --> 00:03:49.200
talks about patterns that appear
in many other packages and elms.

81
00:03:49.200 --> 00:03:52.220
So these are skills that I think are going
to be more broadly applicable no matter

82
00:03:52.220 --> 00:03:55.070
what your particular use case is, no
matter what particular set of packages and

83
00:03:55.070 --> 00:03:57.750
libraries you decide
to use on application.

84
00:03:57.750 --> 00:04:00.810
So hopefully, that will give you the best
possible value for time together.

85
00:04:01.990 --> 00:04:05.930
The structure of the workshop, if you
were at my introduction to Elm workshop,

86
00:04:05.930 --> 00:04:08.650
or looked at it, this will be familiar.

87
00:04:08.650 --> 00:04:13.600
We're going to use the RealWorld example
app, which is the Elm SPA example, and

88
00:04:13.600 --> 00:04:14.520
it looks like this.

89
00:04:14.520 --> 00:04:17.620
It's called a conduit,
which is cuz it's a medium clone.

90
00:04:17.620 --> 00:04:19.510
Medium, conduit, ha ha.

91
00:04:19.510 --> 00:04:23.320
So basically the purpose of this
project is that they have made a lot of

92
00:04:23.320 --> 00:04:27.459
applications, I say they but
it's different open source contributors,

93
00:04:27.459 --> 00:04:31.483
have made various different example
applications all to the same spec.

94
00:04:31.483 --> 00:04:35.205
So there's a React one, there's the Elm
one that I made, there's Angular View,

95
00:04:35.205 --> 00:04:37.863
all these different front ends
all built to the same specs so

96
00:04:37.863 --> 00:04:39.211
you can kind of compare them.

97
00:04:39.211 --> 00:04:42.596
And it's got a lot of different
features about articles, posting them,

98
00:04:42.596 --> 00:04:44.398
editing them, you can follow people,

99
00:04:44.398 --> 00:04:47.509
unfollow people, favorite things,
sign in, sign out, sign up,

100
00:04:47.509 --> 00:04:51.700
all those sort of things that you
expect from a single page application.

101
00:04:51.700 --> 00:04:54.484
So we are gonna use this as sort of
foundation for all of our examples,

102
00:04:54.484 --> 00:04:57.700
we're gonna be looking through a lot of
code with this, and hopefully by the end

103
00:04:57.700 --> 00:05:00.389
of it you'll also have a better
understanding of that code base and

104
00:05:00.389 --> 00:05:03.680
can use it as a reference point
if you haven't been already.

105
00:05:03.680 --> 00:05:05.720
Like we said,
there's gonna be eight lessons.

106
00:05:05.720 --> 00:05:08.160
There's also going to be eight
exercises to go with the lessons.

107
00:05:08.160 --> 00:05:10.149
So after each lesson, we're gonna stop and

108
00:05:10.149 --> 00:05:12.200
do an exercise based on
what we just learned.

