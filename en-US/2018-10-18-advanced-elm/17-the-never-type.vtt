WEBVTT

1
00:00:00.070 --> 00:00:01.190
&gt;&gt; Richard Feldman: For
the purposes of this library,

2
00:00:01.190 --> 00:00:02.910
it doesn't actually matter
how Never is defined.

3
00:00:02.910 --> 00:00:06.060
The whole point is that it's not
something that we have access to, right?

4
00:00:08.550 --> 00:00:10.170
It's not our message and it's not unbound.

5
00:00:10.170 --> 00:00:14.840
It's something else and that's enough
to get the characteristics we want.

6
00:00:14.840 --> 00:00:16.970
It will be enough for
Never to be an opaque type.

7
00:00:16.970 --> 00:00:21.300
To say that Never is something that
she used to find in her package and

8
00:00:21.300 --> 00:00:24.220
does not expose any variants for
so, it's opaque.

9
00:00:24.220 --> 00:00:26.820
We don't know how to one,
we just know that it exists and

10
00:00:26.820 --> 00:00:29.410
we don't have a way a make one so
that's enough.

11
00:00:29.410 --> 00:00:31.860
As it happens,
Never goes even further than that.

12
00:00:33.200 --> 00:00:34.229
Here's how Never is defined.

13
00:00:35.480 --> 00:00:37.500
type Never = OneMore Never.

14
00:00:38.960 --> 00:00:42.980
So even in the module where this
thing is defined, you can't make one.

15
00:00:42.980 --> 00:00:44.710
And to prove it to you,
let's try and make one.

16
00:00:45.840 --> 00:00:47.030
So we have one variant.

17
00:00:47.030 --> 00:00:49.292
So that's the only way we can try and
make one.

18
00:00:49.292 --> 00:00:51.190
And that one variant takes a Never.

19
00:00:51.190 --> 00:00:52.190
How do we make a Never?

20
00:00:52.190 --> 00:00:53.240
Well, we have to use this variance.

21
00:00:53.240 --> 00:00:55.720
So we'll call myNever : Never,

22
00:00:55.720 --> 00:00:59.900
and we're gonna call OneMore,
and what do we pass that?

23
00:00:59.900 --> 00:01:00.770
We have to pass that a Never.

24
00:01:00.770 --> 00:01:01.560
How do we get a Never?

25
00:01:01.560 --> 00:01:03.700
Okay, well, we call OneMore.

26
00:01:03.700 --> 00:01:05.930
How do we get a Never to pass that one?

27
00:01:05.930 --> 00:01:06.730
We call OneMore.

28
00:01:06.730 --> 00:01:10.520
It never ends, it's not possible
to finish this expression

29
00:01:10.520 --> 00:01:14.100
with anything that's ever gonna
compile because it refers to itself.

30
00:01:14.100 --> 00:01:17.190
You have to provide itself
in order to get one.

31
00:01:17.190 --> 00:01:19.050
It's a cache 22 type if you will.

32
00:01:20.930 --> 00:01:23.880
So this is essentially a type
that is self documenting that

33
00:01:23.880 --> 00:01:28.659
by the way the entire purpose of this type
is to prevent anyone from ever making one.

34
00:01:30.320 --> 00:01:34.810
And essentially, this is the use case for
Never, is for use cases like Tess's

35
00:01:34.810 --> 00:01:38.730
where what you want to say is not so
much, please provide me one of these, but

36
00:01:38.730 --> 00:01:44.570
rather, please provide me with something
that still has an unbound type variable.

37
00:01:44.570 --> 00:01:47.740
Now, you can't do this by asking for an
unbound type variable, cuz if you ask for

38
00:01:47.740 --> 00:01:50.420
an unbound type variable,
what that says is, give me anything.

39
00:01:50.420 --> 00:01:52.460
I will accept absolutely
anything you want.

40
00:01:52.460 --> 00:01:55.429
What this says is,
give me something that is still unbound,

41
00:01:55.429 --> 00:01:57.305
that's the only thing I'll accept.

42
00:01:59.660 --> 00:02:03.592
&gt;&gt; Richard Feldman: So essentially by
doing this she has ruled out any possible

43
00:02:03.592 --> 00:02:09.870
thing that you could give this argument
to paragraph other than these two things.

44
00:02:09.870 --> 00:02:13.071
Either a list of attributes
that are still unbound or

45
00:02:13.071 --> 00:02:17.522
being one step more general,
it lists where the entire list is unbound.

46
00:02:17.522 --> 00:02:22.270
So empty lists or a list of attributes,
all of which do not produce messages.

47
00:02:22.270 --> 00:02:25.090
Those are the only two possible
types that this will accept.

