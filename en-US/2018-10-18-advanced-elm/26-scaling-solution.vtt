WEBVTT

1
00:00:00.000 --> 00:00:04.631
&gt;&gt; Richard Feldman: So viewform works
on something called form quite a bit.

2
00:00:04.631 --> 00:00:07.543
So it's a safe bet that we're
gonna need that as a dependency.

3
00:00:07.543 --> 00:00:11.139
So let's see where
viewform is being called.

4
00:00:11.139 --> 00:00:13.439
It's currently being
called passing a model.

5
00:00:13.439 --> 00:00:17.397
Let's change that so
that instead of taking the entire model,

6
00:00:17.397 --> 00:00:19.200
it's just taking the form.

7
00:00:19.200 --> 00:00:23.519
And so we'll delete this and
replace it with,

8
00:00:23.519 --> 00:00:27.186
we just accept the form as an argument.

9
00:00:27.186 --> 00:00:29.222
And let's see what that does for us.

10
00:00:32.104 --> 00:00:34.693
&gt;&gt; Richard Feldman: Okay, no problem.

11
00:00:34.693 --> 00:00:36.012
On to the settings.

12
00:00:36.012 --> 00:00:37.951
Sorry that is a problem.

13
00:00:37.951 --> 00:00:39.001
Just kidding.

14
00:00:39.001 --> 00:00:44.553
So the next line we immediately
say Session.cred model.session.

15
00:00:44.553 --> 00:00:48.374
So we're still referencing
model inside this function.

16
00:00:48.374 --> 00:00:51.142
But we're only using it
to get the session cred.

17
00:00:51.142 --> 00:00:53.878
So there's two possibilities
that we could do here.

18
00:00:53.878 --> 00:00:58.190
One is we could say I'm gonna accept so
Session.cred.function returns

19
00:00:58.190 --> 00:01:01.954
a maybe session which we're
immediately pattern matching on.

20
00:01:01.954 --> 00:01:05.004
Two possibilities,
one is we can take a Maybe Session.

21
00:01:08.243 --> 00:01:14.314
&gt;&gt; Richard Feldman: And say okay,
we're going to say maybeSession

22
00:01:14.314 --> 00:01:18.878
right here and continue as normal.

23
00:01:18.878 --> 00:01:20.216
That's one way we could do it.

24
00:01:20.216 --> 00:01:23.866
But another possibility is we could say,
you know what,

25
00:01:23.866 --> 00:01:27.453
all we do is we render nothing
if the Session is nothing.

26
00:01:27.453 --> 00:01:32.349
Should that really be here in the form,
or could we actually narrow our type even

27
00:01:32.349 --> 00:01:36.020
further and say,
this needs to have been handled already?

28
00:01:36.020 --> 00:01:39.736
It's not this function's job to deal with
the possibility that there's no session.

29
00:01:39.736 --> 00:01:42.257
Just don't even call me if
you don't have a session.

30
00:01:42.257 --> 00:01:43.438
I don't wanna here it.

31
00:01:43.438 --> 00:01:45.586
Yeah, we can do that.

32
00:01:45.586 --> 00:01:50.588
So we can move that to up here and
say, case,

33
00:01:50.588 --> 00:01:54.933
sorry, cred., no session.cred.

34
00:01:54.933 --> 00:01:56.793
Model.session.

35
00:01:56.793 --> 00:02:01.553
And now we're handling that case out here.

36
00:02:01.553 --> 00:02:08.910
And we're only calling viewform
passing the credentials.

37
00:02:08.910 --> 00:02:13.691
If we already have some cred to give it.

38
00:02:13.691 --> 00:02:18.805
Another possibility is that we can see
that a form is being used down here.

39
00:02:18.805 --> 00:02:23.655
If we want, we can just inline this
whole thing and just say, you know what?

40
00:02:23.655 --> 00:02:28.215
Right here, right here in the middle
of this thing, we're gonna say,

41
00:02:28.215 --> 00:02:31.939
if we have some cred,
we're gonna render a form here, and

42
00:02:31.939 --> 00:02:35.514
otherwise we're not going to
bother doing that at all.

43
00:02:35.514 --> 00:02:37.978
Any of those possibilities
are perfectly reasonable.

44
00:02:37.978 --> 00:02:41.737
What I like about these one is that
there is sort of the list in direction

45
00:02:41.737 --> 00:02:44.806
everything is sort of right
there where it is happening.

46
00:02:44.806 --> 00:02:48.072
We can see right here if we have
credentials we are right at

47
00:02:48.072 --> 00:02:51.950
the form otherwise we will not we can
see what is happening at the dome

48
00:02:51.950 --> 00:02:53.944
without jumping somewhere else.

49
00:02:53.944 --> 00:02:59.623
And then the form itself, sorry the view
form function itself takes the least,

50
00:02:59.623 --> 00:03:02.679
the most narrow types
that it possibly can.

51
00:03:02.679 --> 00:03:04.846
It says all I want is the cred.

52
00:03:04.846 --> 00:03:06.055
I don't need the rest of the session.

53
00:03:06.055 --> 00:03:08.873
I don't need to know about the maybe,
that's already been resolved for me.

54
00:03:08.873 --> 00:03:11.672
So when I'm scanning through
I can see sort of a,

55
00:03:11.672 --> 00:03:14.690
I can learn the most about
this function at a glance.

56
00:03:14.690 --> 00:03:15.331
&gt;&gt; Speaker 2: Richard?

57
00:03:15.331 --> 00:03:16.327
&gt;&gt; Richard Feldman: Yes.

58
00:03:16.327 --> 00:03:16.919
&gt;&gt; Speaker 2: You're,

59
00:03:16.919 --> 00:03:20.613
aren't you already inside a block
where you know you have a value?

60
00:03:20.613 --> 00:03:25.182
&gt;&gt; Richard Feldman: Entirely possible,
yeah good point [LAUGH].

61
00:03:25.182 --> 00:03:28.493
Yeah, so actually that compiler error
is telling me I'm shadowing this,

62
00:03:28.493 --> 00:03:31.394
which is a great point because at
this point, we already have it.

63
00:03:31.394 --> 00:03:37.652
So we can do significantly better
than that by doing it like this.

64
00:03:37.652 --> 00:03:39.831
That's much better,
I don't know why I didn't think of that.

65
00:03:39.831 --> 00:03:43.476
[LAUGH] Questions on that?

66
00:03:47.227 --> 00:03:51.492
&gt;&gt; Speaker 3: When you were refactoring
the arguments you put the cred on the left

67
00:03:51.492 --> 00:03:53.782
side of the form is there-
&gt;&gt; Richard Feldman: Yes.

68
00:03:53.782 --> 00:03:56.238
&gt;&gt; Speaker 3: Is that required?

69
00:03:56.238 --> 00:03:58.984
Or why did you choose to put it
on the left versus the right?

70
00:03:58.984 --> 00:04:00.368
&gt;&gt; Richard Feldman: That's
a great question.

71
00:04:00.368 --> 00:04:02.775
So certainly it would
work fine either way.

72
00:04:02.775 --> 00:04:06.293
Generally speaking,
when I think about argument order,

73
00:04:06.293 --> 00:04:10.474
I'm thinking in terms of how will
partial application be effected.

74
00:04:10.474 --> 00:04:14.404
Typically speaking, if I'm going to
partially apply a function, usually what

75
00:04:14.404 --> 00:04:18.099
I'm going to do is I'm going to personally
apply it with some sort of piece of

76
00:04:18.099 --> 00:04:21.948
information that's sort of unlikely
to change among multiple invocations.

77
00:04:21.948 --> 00:04:24.455
So if I'm calling viewForm.

78
00:04:24.455 --> 00:04:28.551
Like, viewForm is kind of a silly
example because I'm probably only ever

79
00:04:28.551 --> 00:04:29.946
going to call it one way.

80
00:04:29.946 --> 00:04:34.138
But let's say we're calling some
other function that needed cred,

81
00:04:34.138 --> 00:04:37.038
like, I don't know,
maybe I was displaying.

82
00:04:37.038 --> 00:04:38.047
What would I be displaying?

83
00:04:38.047 --> 00:04:42.004
Not favorites or follow buttons because
that would just also just be sort of like

84
00:04:42.004 --> 00:04:43.255
one per, I don't know.

85
00:04:43.255 --> 00:04:46.380
Anyway, let's say I have
three different buttons,

86
00:04:46.380 --> 00:04:50.558
all of which are slightly different and
they all require credentials.

87
00:04:50.558 --> 00:04:54.771
I'm much more likely to say, view button
with credentials equals view button cred,

88
00:04:54.771 --> 00:04:56.117
and partially apply that,

89
00:04:56.117 --> 00:04:59.825
than I am the rest of the arguments
because they're more likely to change.

90
00:04:59.825 --> 00:05:03.664
Credentials very unlikely to change, so
whenever I have arguments that I think

91
00:05:03.664 --> 00:05:05.968
no matter how many different
times I call this.

92
00:05:05.968 --> 00:05:09.435
This is the least likely to ever change,
I tend to wanna put those up front so

93
00:05:09.435 --> 00:05:11.653
they're more partial application friendly.

94
00:05:11.653 --> 00:05:15.248
So that settings taken care of that's
the first of our three to do's.

95
00:05:15.248 --> 00:05:17.370
Let's take a look at home next.

96
00:05:17.370 --> 00:05:21.675
So once again we have a function that's
sort of taking too much view tabs

97
00:05:21.675 --> 00:05:24.777
takes the model when it
really doesn't need to be.

98
00:05:24.777 --> 00:05:28.728
And the reason I know that it doesn't
need to is that immediately what we do is

99
00:05:28.728 --> 00:05:30.170
we say model.feedTab of.

100
00:05:30.170 --> 00:05:33.769
And once again, we're in a situation
where we have one argument, and

101
00:05:33.769 --> 00:05:36.941
then we also have,
we're looking at cred in the session, and

102
00:05:36.941 --> 00:05:39.581
that's basically all we're
using the model for.

103
00:05:39.581 --> 00:05:42.370
We certainly don't be need
to be using it for all that.

104
00:05:42.370 --> 00:05:47.433
So we can certainly take feedTab as
an argument instead of model.feedtab.

105
00:05:47.433 --> 00:05:52.862
So this is specifying which of the three
tabs on the home screen are you

106
00:05:52.862 --> 00:05:59.526
potentially viewing, which is to say
either YourFeed, GlobalFeed, or TagFeed.

107
00:05:59.526 --> 00:06:02.080
And so that's one of our arguments, but

108
00:06:02.080 --> 00:06:05.914
then the other one that we still
need is the model.session,

109
00:06:05.914 --> 00:06:11.425
which we're currently only using for cred,
we're using it in two different places.

110
00:06:11.425 --> 00:06:13.090
Now, unlike the previous case,

111
00:06:13.090 --> 00:06:16.904
here we actually do do something slightly
different if we don't have cred.

112
00:06:16.904 --> 00:06:20.633
So it's not gonna work out to say,
this function requires cred and

113
00:06:20.633 --> 00:06:23.971
we will rely on other things to
take care of it ahead of time.

114
00:06:23.971 --> 00:06:28.693
It's actually quite important that we
do get maybe cred here because we need

115
00:06:28.693 --> 00:06:31.880
to do something different
in the event that we get.

116
00:06:31.880 --> 00:06:35.135
In the event that we have access to cred
or not, which is to say we've rendered

117
00:06:35.135 --> 00:06:38.059
different tabs depending on whether
you are logged out or logged in.

118
00:06:38.059 --> 00:06:40.838
If you're logged in we
will render your feed, but

119
00:06:40.838 --> 00:06:43.628
if you are logged out we
will not render your feed.

120
00:06:43.628 --> 00:06:48.497
So in both of these nothing branches you
don't see your feed appearing in there.

121
00:06:48.497 --> 00:06:51.970
Okay, so
we will take maybe cred has an argument.

122
00:06:54.359 --> 00:06:57.052
&gt;&gt; Richard Feldman: And that's
a significantly narrower argument than

123
00:06:57.052 --> 00:06:57.728
all of this.

124
00:07:03.166 --> 00:07:04.682
&gt;&gt; Richard Feldman: I think I'm
gonna do the same thing over here.

125
00:07:06.525 --> 00:07:11.122
&gt;&gt; Richard Feldman: Okay, and finally we
need to actually pass that into viewTabs.

126
00:07:11.122 --> 00:07:15.320
I'll do that with saying viewTabs and

127
00:07:15.320 --> 00:07:19.517
passing that as the first argument and

128
00:07:19.517 --> 00:07:23.462
then model.feedTab as the other.

129
00:07:23.462 --> 00:07:26.002
I think that's correct.

130
00:07:26.002 --> 00:07:27.050
Let's see.

131
00:07:29.744 --> 00:07:32.886
&gt;&gt; Richard Feldman: Great, success.

132
00:07:32.886 --> 00:07:33.981
Questions?

133
00:07:35.574 --> 00:07:36.658
&gt;&gt; Richard Feldman: Yeah.

134
00:07:36.658 --> 00:07:39.350
&gt;&gt; Speaker 2: Could you have
just passed the Session in and

135
00:07:39.350 --> 00:07:43.585
left that logic in there, or
are you just kind of cleaning it up?

136
00:07:43.585 --> 00:07:46.814
&gt;&gt; Richard Feldman: I'm doing it this
way because this is even narrower.

137
00:07:46.814 --> 00:07:49.930
So the Session holds onto the cred,
but also other stuff.

138
00:07:49.930 --> 00:07:53.504
And I don't want a tab access
to that if it doesn't need it.

139
00:07:53.504 --> 00:07:58.121
So this is sort of the narrowest possible
type I can give it to where it can still

140
00:07:58.121 --> 00:07:58.841
do its job.

141
00:07:58.841 --> 00:08:00.953
The narrower the better.

142
00:08:00.953 --> 00:08:03.448
That's a general default.

143
00:08:03.448 --> 00:08:07.183
Let's move on to the last one
which is the profile page.

144
00:08:07.183 --> 00:08:08.663
So this one's taking the model.

145
00:08:08.663 --> 00:08:10.203
It also needs to take
some other arguments.

146
00:08:10.203 --> 00:08:14.513
But let's see if we can get that
model down to as little as possible.

147
00:08:14.513 --> 00:08:17.425
So here, we're calling currentUsername and
the model.

148
00:08:17.425 --> 00:08:20.829
We're also once again,
getting cred off the model.

149
00:08:20.829 --> 00:08:26.028
And it looks like the one other place
that we pass it is in feed.init,

150
00:08:26.028 --> 00:08:30.617
and feed.init actually does
want to take model.session.

151
00:08:30.617 --> 00:08:33.874
So here, we have a case where
we can't get away with cred,

152
00:08:33.874 --> 00:08:35.876
because this needs more than that.

153
00:08:35.876 --> 00:08:39.614
We also can't even get away
with maybeCred, because really

154
00:08:39.614 --> 00:08:44.174
what we need is we just actually need
to pass a real session to feed.init.

155
00:08:44.174 --> 00:08:48.508
So if we look here in feed, the init
function just takes a plain old Session,

156
00:08:48.508 --> 00:08:52.505
no maybe involved, and so
there's really no way of avoiding, yeah,

157
00:08:52.505 --> 00:08:55.443
we just gotta actually have
a real session in here.

158
00:08:55.443 --> 00:08:59.805
Having said that, we can pull our cred
off of it separately, so that's fine.

159
00:08:59.805 --> 00:09:00.538
So session and

160
00:09:00.538 --> 00:09:04.628
the one other thing that we're using
the model is that we're casting it to get,

161
00:09:04.628 --> 00:09:08.247
sorry, to current user name to
extract the current user name from it.

162
00:09:08.247 --> 00:09:11.673
But we can just say, what just go
ahead and pass that username in.

163
00:09:16.280 --> 00:09:17.897
&gt;&gt; Richard Feldman: Sorry, username.

164
00:09:17.897 --> 00:09:21.533
Okay, so now over here in the feed,

165
00:09:21.533 --> 00:09:27.596
we're gonna pass model.session
as the first argument and

166
00:09:27.596 --> 00:09:32.217
model dot, no, it was currentUsernmae.

167
00:09:32.217 --> 00:09:33.764
That's not spelled correctly at all.

168
00:09:33.764 --> 00:09:35.051
There we go.

169
00:09:35.051 --> 00:09:39.210
Also, nope, nope, model.

170
00:09:39.210 --> 00:09:43.152
Okay, and something is wrong.

171
00:09:43.152 --> 00:09:47.993
Okay, wow,
that's a lot of stuff that's wrong.

172
00:09:47.993 --> 00:09:53.719
[INAUDIBLE] fetchFeed session username,
that's a session,

173
00:09:53.719 --> 00:10:00.098
that looks like the username,
correct feed tab, correct page.

174
00:10:00.098 --> 00:10:02.816
Are we calling this in multiple places?

175
00:10:02.816 --> 00:10:03.539
We sure are.

176
00:10:03.539 --> 00:10:05.441
Okay, that explains it.

177
00:10:05.441 --> 00:10:09.215
All right, so
let's fix it in the other places too.

178
00:10:09.215 --> 00:10:15.595
So this one's also going
to need a model.session,

179
00:10:15.595 --> 00:10:19.947
and also currentUsername model and

180
00:10:24.241 --> 00:10:25.508
&gt;&gt; Richard Feldman: Let's do that again,

181
00:10:25.508 --> 00:10:26.848
let's try that again.

182
00:10:26.848 --> 00:10:28.192
There we go, okay.

