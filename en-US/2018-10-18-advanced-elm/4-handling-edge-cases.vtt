WEBVTT

1
00:00:00.080 --> 00:00:03.020
&gt;&gt; Richard Feldman: Second example,
we're gonna turn to the elm-spa-example,

2
00:00:03.020 --> 00:00:05.940
that is to say the real-world conduit
example that we're gonna be using

3
00:00:05.940 --> 00:00:08.130
throughout the workshop.

4
00:00:08.130 --> 00:00:09.450
This is the Credentials module.

5
00:00:09.450 --> 00:00:12.790
So Credentials holds on to your
credentials after you login.

6
00:00:12.790 --> 00:00:15.620
So it has an authentication token,
as well as your username.

7
00:00:15.620 --> 00:00:18.910
The authentication token needs to be
sent with every HTTP request that

8
00:00:18.910 --> 00:00:23.560
goes to the API server, or else it
will reject it as invalid, that is,

9
00:00:23.560 --> 00:00:25.190
if you need to be logged
in to do that thing.

10
00:00:26.490 --> 00:00:30.280
So Credentials exposes a limited number of
ways to obtain one of these Cred values,

11
00:00:30.280 --> 00:00:31.620
Cred being short for credentials.

12
00:00:31.620 --> 00:00:34.580
So if you've got some Cred,
that means you're logged in.

13
00:00:34.580 --> 00:00:38.460
So if the only way that we expose to
obtain one of these Cred values is from

14
00:00:38.460 --> 00:00:43.010
the results of an Http.Request to
the server passing some login info,

15
00:00:43.010 --> 00:00:45.050
whatever that might be, now we know,

16
00:00:45.050 --> 00:00:49.100
okay, if I have a Cred value,
that means there must be a user logged in.

17
00:00:50.440 --> 00:00:53.170
So if I have any function
that accepts a Cred value,

18
00:00:53.170 --> 00:00:57.115
that means this function only
works when you're logged in.

19
00:00:57.115 --> 00:01:00.195
Cuz in order to be logged in,
you must have run this function first.

20
00:01:00.195 --> 00:01:02.700
Now in practice, we can't quite
lock it down as much as this.

21
00:01:02.700 --> 00:01:05.735
We'll get into why that
is a little bit later.

22
00:01:05.735 --> 00:01:10.535
The point being if we can enforce
the idea that the only way to obtain Cred

23
00:01:10.535 --> 00:01:12.815
is by logging in, then from then on,

24
00:01:12.815 --> 00:01:17.820
we can say okay, if I have some Cred,
that means that I am logged in.

25
00:01:17.820 --> 00:01:20.340
And if this function requires
that I pass it some Cred,

26
00:01:20.340 --> 00:01:23.580
that means this function only works
in the context of a logged in user.

27
00:01:25.070 --> 00:01:25.990
So we'll come back to that later,

28
00:01:25.990 --> 00:01:28.130
but there's some valuable
stuff to be had there.

29
00:01:29.140 --> 00:01:34.140
Okay, so for the next example,
I wanna look at following.

30
00:01:34.140 --> 00:01:37.400
So you have this notion of authors
who write these articles, and

31
00:01:37.400 --> 00:01:38.130
you can follow them.

32
00:01:38.130 --> 00:01:40.990
If you're following an author,
that means that they show up in your feed,

33
00:01:40.990 --> 00:01:43.940
their articles show up in
your personalized feed.

34
00:01:43.940 --> 00:01:47.060
So when I first wrote this function a
couple of years ago, I wrote it like this.

35
00:01:47.060 --> 00:01:51.918
I said follow takes a Bool for
whether not I'm gonna follow this person.

36
00:01:51.918 --> 00:01:54.092
And it takes an Author, and
then it returns Html Msg.

37
00:01:54.092 --> 00:01:57.360
Which is to say,
this renders a follow button.

38
00:01:57.360 --> 00:01:58.610
So when we render it,

39
00:01:58.610 --> 00:02:02.690
if I pass true, then it's gonna say,
this is a box to follow the user.

40
00:02:02.690 --> 00:02:06.090
If I pass false, it's gonna render a box
that says, this will unfollow the user.

41
00:02:07.460 --> 00:02:09.910
Now, when I later came back and

42
00:02:09.910 --> 00:02:12.020
revisited this,
I actually changed this a little bit.

43
00:02:12.020 --> 00:02:14.230
I added Cred as an argument there.

44
00:02:14.230 --> 00:02:17.230
Because you should only be able to follow
or unfollow people when you're logged in.

45
00:02:17.230 --> 00:02:20.140
It doesn't actually make sense to have
a follow button as a logged out user.

46
00:02:21.500 --> 00:02:22.440
So I wanted to rule that out.

47
00:02:22.440 --> 00:02:25.660
I wanted to make sure that I was never
accidentally rendering a do-nothing follow

48
00:02:25.660 --> 00:02:26.966
button, when I'm logged out.

49
00:02:26.966 --> 00:02:29.580
And just by adding that argument,
even if I don't end up using the argument,

50
00:02:29.580 --> 00:02:34.180
that ends up being something that we can
do, again, because Cred is an opaque type.

51
00:02:34.180 --> 00:02:36.460
Because the only way to get
Cred is by being logged in.

52
00:02:37.620 --> 00:02:41.020
Another thing that I noticed about
this as I revisited it later

53
00:02:41.020 --> 00:02:43.330
is this Boolean is a little bit confusing.

54
00:02:44.400 --> 00:02:44.980
What does it mean?

55
00:02:44.980 --> 00:02:47.270
Does it mean that if I pass true,

56
00:02:47.270 --> 00:02:50.870
am I going to get a button
that follows the user?

57
00:02:50.870 --> 00:02:53.230
Or does true mean I'm already
following the user, and

58
00:02:53.230 --> 00:02:55.570
actually this is gonna
render an unfollow button?

59
00:02:55.570 --> 00:02:57.820
Which is it?
I mean, I could interpret it either way.

60
00:02:57.820 --> 00:03:00.303
So later on, I kinda realized,
you know what, that's confusing.

61
00:03:00.303 --> 00:03:04.730
I'm just gonna make two functions,
follow and unfollow.

62
00:03:04.730 --> 00:03:08.660
So each of them has one fewer parameter,
and it's extremely clear now.

63
00:03:08.660 --> 00:03:10.508
This is either a follow button or
it's an unfollow button.

64
00:03:10.508 --> 00:03:12.470
That's what it does.

65
00:03:12.470 --> 00:03:14.850
This is something that I've sorta
come to appreciate over time.

66
00:03:14.850 --> 00:03:17.710
And it's also an idea that we're gonna
revisit again throughout the course of

67
00:03:17.710 --> 00:03:21.200
the workshop, is the idea of
when do you want configuration,

68
00:03:21.200 --> 00:03:23.970
versus when do you just want
to split out another function?

69
00:03:23.970 --> 00:03:27.640
And I think that's something that is
not necessarily obvious at first blush.

70
00:03:27.640 --> 00:03:30.501
But over time, I've sorta developed
more of a sense of this, and

71
00:03:30.501 --> 00:03:32.226
I wanna talk about those trade-offs.

72
00:03:32.226 --> 00:03:37.300
As previously noted,
the edge cases can be easy to miss.

73
00:03:37.300 --> 00:03:41.140
And one way we can make them
less easy to miss is, make it so

74
00:03:41.140 --> 00:03:45.080
that the code only compiles if
the edge cases are handled.

75
00:03:45.080 --> 00:03:48.730
So let's talk about a specific example,
and we're gonna go to the code!

76
00:03:48.730 --> 00:03:50.890
This slide appears many times
throughout the workshop.

77
00:03:50.890 --> 00:03:53.160
And it's the sign that we're about
to switch over to the editor and

78
00:03:53.160 --> 00:03:54.240
actually dive into some code.

