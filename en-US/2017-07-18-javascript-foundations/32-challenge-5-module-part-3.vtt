WEBVTT

1
00:00:00.280 --> 00:00:01.830
&gt;&gt; Kyle: All right, part three,

2
00:00:01.830 --> 00:00:04.430
now that hopefully you're feeling
a little bit more confident.

3
00:00:04.430 --> 00:00:06.260
And by the way,
if you didn't get part two finished,

4
00:00:06.260 --> 00:00:09.590
just grab the fixed version and
make that your starting point.

5
00:00:09.590 --> 00:00:13.000
Fixed being, make that your
starting point for part three.

6
00:00:13.000 --> 00:00:17.275
But in part three, we go one more
step in terms of encapsulation.

7
00:00:17.275 --> 00:00:21.340
We really wanna hammer home how
modules can start to help us.

8
00:00:21.340 --> 00:00:23.240
The main thing that I can observe,

9
00:00:23.240 --> 00:00:28.780
if I look at this fixed code here, is that
in my app code, let me go down to app.

10
00:00:28.780 --> 00:00:33.310
In my app code, there's a bunch
of mixing in the data model

11
00:00:33.310 --> 00:00:39.040
between project entries and
work data entries, or work entries.

12
00:00:39.040 --> 00:00:41.540
And that mixing can get a bit complex.

13
00:00:41.540 --> 00:00:45.540
And also if you think about it, there
are some operations that conceptually

14
00:00:45.540 --> 00:00:52.440
are performed at the project
abstraction level.

15
00:00:52.440 --> 00:00:56.480
So why don't we go one step further and
make a module instance for

16
00:00:56.480 --> 00:01:01.250
each project and have an API that
represents the data that we wanna do,

17
00:01:01.250 --> 00:01:07.110
the operations that we wanna interact with
each individual instance of projects?

18
00:01:07.110 --> 00:01:12.260
So this last step is to say, instead of
all this project entry data stuff that's

19
00:01:12.260 --> 00:01:19.125
getting passed around, make a project
module that can be, it's a factory, right?

20
00:01:19.125 --> 00:01:21.900
Capital P, project factory function,

21
00:01:21.900 --> 00:01:25.750
that can churn you out instances of
projects and then give it some methods

22
00:01:25.750 --> 00:01:29.290
that allow you to interact more cleanly
with that part of the data model.

23
00:01:29.290 --> 00:01:33.750
So instead of keeping track in your
app of all these different project

24
00:01:33.750 --> 00:01:38.730
entry data objects like we're doing,
keep track of a list of project instances.

