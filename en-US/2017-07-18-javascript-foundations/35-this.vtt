WEBVTT

1
00:00:00.280 --> 00:00:02.020
&gt;&gt; Kyle: Let's look at the this keyword.

2
00:00:02.020 --> 00:00:05.680
And in particular,
I wanna help you understand how that fits

3
00:00:05.680 --> 00:00:08.730
compared to what we've
learned with lexical scope.

4
00:00:08.730 --> 00:00:11.880
So every function while it's
executing has a reference

5
00:00:11.880 --> 00:00:14.060
to its own current execution context.

6
00:00:14.060 --> 00:00:16.650
And we call that reference
the this keyword.

7
00:00:16.650 --> 00:00:20.510
There's an asterisk next to every,
which we're gonna come back to later.

8
00:00:20.510 --> 00:00:22.913
There are some functions now
which don't have a this keyword,

9
00:00:22.913 --> 00:00:23.920
namely arrow functions.

10
00:00:23.920 --> 00:00:27.521
But we'll come back to that
topic a little bit later.

11
00:00:27.521 --> 00:00:31.755
Do you remember that whole discussion
of lexical versus dynamic scope?

12
00:00:31.755 --> 00:00:36.258
And I hinted that JavaScript had this
thing that was kind of like dynamic scope.

13
00:00:36.258 --> 00:00:39.340
That thing is the this keyword.

14
00:00:39.340 --> 00:00:42.400
So if lexical scope is this
fixed predictable thing,

15
00:00:42.400 --> 00:00:45.600
the this keyword is this
dynamic flexible thing.

16
00:00:45.600 --> 00:00:48.770
And what's beautiful about JavaScript
is that we have both mechanisms,

17
00:00:48.770 --> 00:00:51.080
they are parallel
mechanisms in the language.

18
00:00:52.810 --> 00:00:58.270
Visually, we can see that there's
actually a true parallel symmetry here.

19
00:00:58.270 --> 00:01:02.970
If the current scope represents where
we start looking for something, and

20
00:01:02.970 --> 00:01:05.555
then we go up the lexical scope
chain to look for something,

21
00:01:05.555 --> 00:01:09.740
the this keyword represents where we're
gonna start in a dynamic context.

22
00:01:11.360 --> 00:01:14.080
And then we're gonna look at what
the elevator of that building looks like

23
00:01:14.080 --> 00:01:15.401
after we've looked at the this keyword.

