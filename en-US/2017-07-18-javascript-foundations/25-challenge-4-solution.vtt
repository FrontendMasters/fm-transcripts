WEBVTT

1
00:00:00.240 --> 00:00:03.760
&gt;&gt; Kyle Simpson: Lets talk about
the solution to exercise four.

2
00:00:03.760 --> 00:00:08.600
I said, the goal was to add a feature
which was the click to expand.

3
00:00:08.600 --> 00:00:17.694
If I open this up.
&gt;&gt; Kyle Simpson: And

4
00:00:17.694 --> 00:00:19.390
I run the fixed version of it.

5
00:00:19.390 --> 00:00:22.560
Just so
we are aware of what it's supposed to do.

6
00:00:22.560 --> 00:00:29.190
If I were to say, I worked on
some really tough things today,

7
00:00:29.190 --> 00:00:32.900
and then say I spent
75 minutes doing that.

8
00:00:32.900 --> 00:00:35.390
You'll notice that it has truncated.

9
00:00:35.390 --> 00:00:39.830
Let me zoom that in just a smidge,
so it's easier to see.

10
00:00:39.830 --> 00:00:44.890
You'll notice it's truncated it, but
if I click on it, it expands it.

11
00:00:44.890 --> 00:00:48.480
So that was the simple use case
that we were supposed to implement.

12
00:00:48.480 --> 00:00:50.450
There are of course multiple
ways to do that, and

13
00:00:50.450 --> 00:00:53.890
perhaps even better ways to
do that than with closure,

14
00:00:53.890 --> 00:00:58.090
but the intent here was to
illustrate the usage of closure.

15
00:00:58.090 --> 00:01:03.360
So what we did was, we wanted to
find where that clicking would

16
00:01:03.360 --> 00:01:08.350
be set up, and it should be set up in
the place where you create that entry

17
00:01:08.350 --> 00:01:14.120
each time the work is added,
which is the function addWorkToProject.

18
00:01:14.120 --> 00:01:19.040
So in this function,
we're creating the data, and

19
00:01:19.040 --> 00:01:21.810
then calling addWorkEntryToList.

20
00:01:21.810 --> 00:01:24.670
Sorry, it'll be addWorkEntryToList
where we're dealing with the DOM.

21
00:01:25.960 --> 00:01:27.340
So in this function,

22
00:01:27.340 --> 00:01:33.236
we have the work entry data which would
include the lengthened description.

23
00:01:33.236 --> 00:01:37.550
But we wanna go ahead and
set up a click handler for that element.

24
00:01:37.550 --> 00:01:40.850
And that click handler,
if we do it as an inline function,

25
00:01:40.850 --> 00:01:45.920
it's going to be able to close over that
work entry data variable, and therefore

26
00:01:45.920 --> 00:01:51.620
be able to use that value even if click it
at a later time cuz, it will close at run.

27
00:01:51.620 --> 00:01:58.619
So if we scroll to the solution here,
&gt;&gt; Kyle Simpson: Actually I

28
00:01:58.619 --> 00:02:05.920
guess I move it to setup work description,
since that one makes more sense.

29
00:02:05.920 --> 00:02:10.780
So in the to do comment here,
that's where we wanna add in our solution.

30
00:02:10.780 --> 00:02:14.500
So, we already were adding
the class shortened,

31
00:02:14.500 --> 00:02:18.950
in the case where the length was
already longer than it should've been.

32
00:02:18.950 --> 00:02:21.660
So we already were adding the class
shortened which is the thing that

33
00:02:21.660 --> 00:02:25.050
puts a little mouse cursor over it,
to let you know that it's clickable.

34
00:02:25.050 --> 00:02:27.360
Now we just need to add a click handler.

35
00:02:27.360 --> 00:02:33.250
So just the same way we did the click
handler for the button to add the work,

36
00:02:33.250 --> 00:02:37.336
here we're adding a click handler to
the actual description dom element.

37
00:02:37.336 --> 00:02:39.970
And that on-click handler,

38
00:02:39.970 --> 00:02:45.890
you'll notice that I want to be
able to unbind that event handler.

39
00:02:45.890 --> 00:02:48.020
So I gave that function expression a name.

40
00:02:48.020 --> 00:02:51.970
So that I have that name to self
reference to use inside of myself.

41
00:02:51.970 --> 00:02:56.730
Technically, jQuery doesn't require that,
some frameworks can remember it.

42
00:02:56.730 --> 00:02:58.760
And they know what to remove and
some don't.

43
00:02:58.760 --> 00:03:00.340
But I think it's a good best practice,

44
00:03:00.340 --> 00:03:02.980
to specifically say this is
the handler I wanna remove.

45
00:03:02.980 --> 00:03:07.820
[COUGH] And the important part here
is that we are closing over the work

46
00:03:07.820 --> 00:03:11.060
entry data variable,
we're closing over that because we've

47
00:03:11.060 --> 00:03:14.140
been provided that work
entry data as a parameter.

48
00:03:14.140 --> 00:03:18.240
So that's a variable in our scope, and
this interfunction closes over that.

49
00:03:18.240 --> 00:03:22.301
So even though it's gonna run it a later
time and theoretically that scope should

50
00:03:22.301 --> 00:03:25.886
have gone away, that variable in
particular would have been preserved

51
00:03:25.886 --> 00:03:30.836
through closure for us to use later.
&gt;&gt; Kyle Simpson: Very

52
00:03:30.836 --> 00:03:34.370
simple illustration using
closure to our advantage.

