WEBVTT

1
00:00:00.500 --> 00:00:04.055
&gt;&gt; Kyle Simpson: Okay, let's talk
through the solution for exercise 6.

2
00:00:04.055 --> 00:00:05.650
As the readme indicates,

3
00:00:05.650 --> 00:00:10.363
essentially what we wanted to do is
replace the hard coded lexical references

4
00:00:10.363 --> 00:00:15.540
to the helpers object with,
&gt;&gt; Kyle Simpson: This keyword.

5
00:00:15.540 --> 00:00:19.040
So here, we have helpers.,
and helpers., and helpers.,

6
00:00:19.040 --> 00:00:21.800
we need to replace those
with this keyword.

7
00:00:23.170 --> 00:00:27.587
So we this dot, this dot, this dot.

8
00:00:27.587 --> 00:00:33.061
Now, when we call
Helpers.validateWorkEntry, for example, on

9
00:00:33.061 --> 00:00:39.791
line 93, what is that the this key we're
gonna be inside of validateWorkEntry?

10
00:00:39.791 --> 00:00:40.751
&gt;&gt; Speaker 2: Helpers?

11
00:00:40.751 --> 00:00:42.225
&gt;&gt; Kyle Simpson: It's gonna be helpers.

12
00:00:42.225 --> 00:00:45.175
So when we go to that
validateWorkEntry and

13
00:00:45.175 --> 00:00:49.685
it says this.minWorkDescriptionLength,
where is it gonna find that on?

14
00:00:51.045 --> 00:00:52.465
It's gonna find that
on the helpers object.

15
00:00:54.155 --> 00:00:57.170
So it makes a lot more sense for
this to be this aware functions,

16
00:00:57.170 --> 00:01:01.950
so that they can pull those
constant properties from their

17
00:01:01.950 --> 00:01:07.090
context object as opposed to pulling them
from a lexical reference to helpers.

18
00:01:08.900 --> 00:01:09.450
Makes sense?

19
00:01:10.890 --> 00:01:12.940
Just one example of using this keyword.

20
00:01:15.910 --> 00:01:17.380
Questions about this?

21
00:01:26.020 --> 00:01:27.660
Remember the implicit binding role.

22
00:01:27.660 --> 00:01:30.290
When you see something like 02.foo,

23
00:01:30.290 --> 00:01:35.154
just remember that's calling the foo
function in the context of 02.

