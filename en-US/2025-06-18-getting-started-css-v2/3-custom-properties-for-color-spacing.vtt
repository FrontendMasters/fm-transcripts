WEBVTT

1
00:00:00.040 --> 00:00:02.115
&gt;&gt; Jen Kramer: Now I'm
going to go on to styling,

2
00:00:02.115 --> 00:00:05.057
which is the part that everybody loves,
right?

3
00:00:05.057 --> 00:00:09.756
Okay, you can continue working in the same
CodePen that you are already working in,

4
00:00:09.756 --> 00:00:11.752
if you have all of your markup done.

5
00:00:11.752 --> 00:00:17.087
There are in the course website,
you'll see that I have given you

6
00:00:17.087 --> 00:00:23.787
way the page is going to look by the time
we're done with this particular section.

7
00:00:23.787 --> 00:00:28.484
And down here there are CodePens as well,
you can use these to put together code.

8
00:00:28.484 --> 00:00:31.175
So now I'm gonna pull up my CSS here.

9
00:00:31.175 --> 00:00:36.225
Let's take a look at the CSS that I've
already given you for building this site.

10
00:00:36.225 --> 00:00:38.326
So I have a couple of
things going on here.

11
00:00:38.326 --> 00:00:41.947
This is right here, :root.

12
00:00:41.947 --> 00:00:44.155
Anyone know what that means?

13
00:00:44.155 --> 00:00:46.539
This is a CSS selector,
anyone seen it before?

14
00:00:46.539 --> 00:00:47.945
Anyone know what this means?

15
00:00:50.165 --> 00:00:50.972
&gt;&gt; Jen Kramer: TJ?

16
00:00:50.972 --> 00:00:55.764
&gt;&gt; TJ: Yeah, that is the basics,
it affects almost everything.

17
00:00:55.764 --> 00:00:57.282
That's the basics.

18
00:00:57.282 --> 00:00:59.118
&gt;&gt; Jen Kramer: This is
the root of the document,

19
00:00:59.118 --> 00:01:01.552
it affects almost everything everywhere.

20
00:01:01.552 --> 00:01:06.491
So this is a way that we make these
CSS variables available to everything

21
00:01:06.491 --> 00:01:08.149
inside of our website.

22
00:01:08.149 --> 00:01:12.997
And what I have here are some colors
that our designer has given us,

23
00:01:12.997 --> 00:01:16.124
and they have color names along with them.

24
00:01:16.124 --> 00:01:20.377
So there's all of the colors that we're
going to be working with in our design.

25
00:01:20.377 --> 00:01:22.429
You'll also see I have
a couple of other things here.

26
00:01:22.429 --> 00:01:24.713
I have a property called corners,

27
00:01:24.713 --> 00:01:29.845
this has to do with rounding corners
on images, we'll work with that later.

28
00:01:29.845 --> 00:01:33.807
And I also have a base
font size here of 1rem.

29
00:01:33.807 --> 00:01:36.824
Okay, then we have a chunk of code here.

30
00:01:36.824 --> 00:01:39.908
These next two styles, anybody see this?

31
00:01:39.908 --> 00:01:42.204
Anybody watch any of my
other classes before?

32
00:01:42.204 --> 00:01:45.424
Anyone know what this is?

33
00:01:45.424 --> 00:01:48.611
&gt;&gt; TJ: The asterisk before
shows that each tag,

34
00:01:48.611 --> 00:01:53.358
if you apply that to any tag,
that will happen before the tag.

35
00:01:53.358 --> 00:01:57.912
Or it might be before whatever,
specifying before.

36
00:01:57.912 --> 00:01:59.877
&gt;&gt; Jen Kramer: Right.
&gt;&gt; TJ: And that happens after those

37
00:01:59.877 --> 00:02:00.613
tags also.

38
00:02:00.613 --> 00:02:02.423
&gt;&gt; Jen Kramer: Exactly, exactly, so.

39
00:02:02.423 --> 00:02:06.051
So this is the entire universe and
everything that comes before and

40
00:02:06.051 --> 00:02:06.967
after, right?

41
00:02:06.967 --> 00:02:08.738
Every element has three nodes.

42
00:02:08.738 --> 00:02:13.132
We have the actual main node itself,
the before, and after.

43
00:02:13.132 --> 00:02:18.736
And what we're saying is that we're going
to use the border-box sizing method here,

44
00:02:18.736 --> 00:02:23.352
and we'll have that inherit,
because it doesn't normally inherit.

45
00:02:23.352 --> 00:02:28.021
The border-box will allow us to create
our layouts a little bit more easily.

46
00:02:28.021 --> 00:02:32.344
It's a little bit better and simpler to
work with in terms of math than working

47
00:02:32.344 --> 00:02:36.149
with the content box model,
which is what is used in CSS by default.

48
00:02:36.149 --> 00:02:39.825
So this is just a little bit of
boilerplate that you probably wanna add at

49
00:02:39.825 --> 00:02:42.595
the top of every CSS document
that you ever work with.

50
00:02:42.595 --> 00:02:48.777
Okay, then we have
the next two styles here.

51
00:02:48.777 --> 00:02:53.454
From the body element itself we're gonna
set up our base font size of 1rem.

52
00:02:53.454 --> 00:02:57.572
This is gonna allow us to scale everything
proportionately a little bit easier.

53
00:02:57.572 --> 00:03:00.849
We've also set our font family of Inter.

54
00:03:00.849 --> 00:03:03.565
It happens to be this design
only uses one font, so

55
00:03:03.565 --> 00:03:05.577
this is a very simple way of doing it.

56
00:03:05.577 --> 00:03:09.610
A lot of people like to use variables for
their font families, totally fine.

57
00:03:09.610 --> 00:03:12.796
But in this case, we're gonna
set our font once and forget it.

58
00:03:12.796 --> 00:03:14.721
We'll never need to change it again,

59
00:03:14.721 --> 00:03:18.043
it'll be inherited from the body
into all of our other elements.

60
00:03:18.043 --> 00:03:22.073
And then the last part,
&gt;&gt; Jen Kramer: Is our image,

61
00:03:22.073 --> 00:03:24.279
it's set to a max-width of 100%.

62
00:03:24.279 --> 00:03:25.744
What does that mean?

63
00:03:25.744 --> 00:03:28.580
Why do we do that?

64
00:03:28.580 --> 00:03:31.403
Yes.
&gt;&gt; Speaker 3: Take the full max width of

65
00:03:31.403 --> 00:03:32.446
the page.

66
00:03:32.446 --> 00:03:37.006
&gt;&gt; Jen Kramer: Right, so our images can be
no wider than the width of our web page,

67
00:03:37.006 --> 00:03:37.581
right?

68
00:03:37.581 --> 00:03:42.131
And what this actually does is it
makes them a little bit flexible.

69
00:03:42.131 --> 00:03:46.551
So you'll see that down here
with our image, that I'm able to

70
00:03:46.551 --> 00:03:51.492
continue to make my screen smaller,
and you see my image scale down.

71
00:03:51.492 --> 00:03:56.131
And proportionately, this scales
up until it's as big as it can be.

72
00:03:56.131 --> 00:03:57.228
So in other words,

73
00:03:57.228 --> 00:04:01.969
it won't over scale, it won't go to 2 or
3 or 400% of its actual image size.

74
00:04:01.969 --> 00:04:05.343
It will go to no larger than the image
that we actually have that we're

75
00:04:05.343 --> 00:04:06.109
working with.

76
00:04:06.109 --> 00:04:11.362
So to this, let's start adding
some additional styling.

77
00:04:11.362 --> 00:04:19.315
So here in the body, we're gonna need
to give this a background color.

78
00:04:19.315 --> 00:04:22.682
And the way we call
a variable is using var and

79
00:04:22.682 --> 00:04:27.600
then some parentheses dash dash
calls the name of our variable.

80
00:04:27.600 --> 00:04:32.033
In this case,
we're gonna call our platinum color.

81
00:04:35.469 --> 00:04:39.844
&gt;&gt; Jen Kramer: And the platinum color was
created up here at the top of the page, so

82
00:04:39.844 --> 00:04:41.341
here it is right here.

83
00:04:41.341 --> 00:04:46.872
So we've called that in,
it's just a very, very pale gray.

84
00:04:46.872 --> 00:04:51.976
And we can also set our text color,

85
00:04:51.976 --> 00:04:57.972
which will be var(--onyx), okay?

86
00:04:57.972 --> 00:05:02.395
So just a not quite stark white and
black, but

87
00:05:02.395 --> 00:05:08.464
a little bit of gray and
a very dark gray to contrast with that.

88
00:05:08.464 --> 00:05:12.973
To this now we can start styling
our individual headings.

89
00:05:12.973 --> 00:05:18.736
If we go back and look at our website,
the screenshot here,

90
00:05:18.736 --> 00:05:25.214
you'll see that my h2 is some very
small blue uppercase letters.

91
00:05:25.214 --> 00:05:30.905
As opposed to my h1, which looks kinda
close to what we already had for an h1.

92
00:05:30.905 --> 00:05:32.934
So let's style that.

93
00:05:35.265 --> 00:05:39.155
&gt;&gt; Jen Kramer: So right after
my body element I'm going to add

94
00:05:39.155 --> 00:05:43.607
an h1
&gt;&gt; Jen Kramer: One of the first

95
00:05:43.607 --> 00:05:46.779
things that you have to remember about
our headings is that they have a lot

96
00:05:46.779 --> 00:05:48.084
of margin on them by default.

97
00:05:48.084 --> 00:05:50.541
Margin is what is pushing them apart and

98
00:05:50.541 --> 00:05:55.089
giving a space between the words
Frontend Developer and Brissa Isidro.

99
00:05:55.089 --> 00:06:00.210
So we can add to this a margin of 0, and

100
00:06:00.210 --> 00:06:06.463
the moment I do that,
nothing happens, why?

101
00:06:06.463 --> 00:06:10.421
Why didn't anything happen
when I assign a margin of 0?

102
00:06:10.421 --> 00:06:13.240
&gt;&gt; Speaker 4: Because margin of
0 is means there's no margin.

103
00:06:13.240 --> 00:06:14.990
&gt;&gt; Jen Kramer: Margin of 0
means there's no margin.

104
00:06:14.990 --> 00:06:17.835
So I now have no margin on Brissa Isidro.

105
00:06:17.835 --> 00:06:20.267
But clearly nothing moved, why is that?

106
00:06:20.267 --> 00:06:22.085
&gt;&gt; Speaker 5: There's also padding.

107
00:06:22.085 --> 00:06:25.145
&gt;&gt; Jen Kramer: There's also padding,
good guess, but no.

108
00:06:25.145 --> 00:06:32.421
And we can say padding 0 and
nothing will happen there either.

109
00:06:32.421 --> 00:06:34.659
Other guesses?

110
00:06:34.659 --> 00:06:39.036
&gt;&gt; Speaker 6: Is the body or
the entire document set at margin 0?

111
00:06:39.036 --> 00:06:42.073
&gt;&gt; Jen Kramer: Actually the body
itself is not set to margin 0.

112
00:06:42.073 --> 00:06:44.421
We could do that.

113
00:06:44.421 --> 00:06:47.534
You'll see what'll happen is that
our text will smash right up

114
00:06:47.534 --> 00:06:50.469
against the edge of the browser
window here when we do that,

115
00:06:50.469 --> 00:06:53.306
but it won't change the distance
between our headings.

116
00:06:55.423 --> 00:06:59.878
&gt;&gt; Jen Kramer: Okay, this is one of the
most misunderstood concepts in CSS, and

117
00:06:59.878 --> 00:07:02.632
that's why I'm spending time on this.

118
00:07:02.632 --> 00:07:06.366
The reason is that when you
have two vertical margins,

119
00:07:06.366 --> 00:07:10.843
so we have a margin on our h1 and
we have a margin on our h2, okay?

120
00:07:10.843 --> 00:07:14.578
When you put those together,
they are not additive.

121
00:07:14.578 --> 00:07:18.503
With padding, if we had one rem
of margin and one rem of margin,

122
00:07:18.503 --> 00:07:22.520
we would wind up with a distance
of two rem between two elements.

123
00:07:22.520 --> 00:07:26.660
But in the case of vertical margins,
only the vertical not the horizontal.

124
00:07:26.660 --> 00:07:31.174
If we have one rem of margin on one
element and one rem of margin on the other

125
00:07:31.174 --> 00:07:34.660
element, the distance between
them is what, one rem.

126
00:07:34.660 --> 00:07:39.870
One plus one is one,
vertically with margins inside of CSS,

127
00:07:39.870 --> 00:07:41.925
they collapse, okay?

128
00:07:41.925 --> 00:07:46.615
So what happened is our h2 still
has some margin on it, and

129
00:07:46.615 --> 00:07:50.082
that is keeping the distance from our h1.

130
00:07:50.082 --> 00:07:56.424
So if you want to have no
distance between your h1 and

131
00:07:56.424 --> 00:08:01.911
your h2, you will need to add h2 margin 0.

132
00:08:01.911 --> 00:08:06.461
And that will, in fact,
push those two things together, right?

133
00:08:06.461 --> 00:08:10.197
Now what you have going on here,
the distance between them,

134
00:08:10.197 --> 00:08:14.460
a little bit of distance is due to
the line height, not due to margin.

135
00:08:14.460 --> 00:08:20.114
I'm also going to add to my h1,
take out this padding.

136
00:08:20.114 --> 00:08:26.795
I will add a font size, and
we can do a calculation for this.

137
00:08:26.795 --> 00:08:32.260
So calc is our function that allows
us to do calculations inside of CSS,

138
00:08:32.260 --> 00:08:38.649
which is very cool, because now I can take
my variable and scale it appropriately.

139
00:08:38.649 --> 00:08:45.035
So what I'm gonna do is I'm
gonna say my base-font-size,

140
00:08:45.035 --> 00:08:49.303
and I'm gonna multiply that by 2.9.

141
00:08:49.303 --> 00:08:52.141
So that's gonna give me the size of my h1.

142
00:08:52.141 --> 00:08:56.713
Now why would I do it this way,
instead of just saying something like,

143
00:08:56.713 --> 00:08:58.897
32 pixels is the size of my h1?

144
00:08:58.897 --> 00:08:59.800
Anybody know?

145
00:08:59.800 --> 00:09:03.765
&gt;&gt; Speaker 7: Because different
people's browsers might

146
00:09:03.765 --> 00:09:07.754
have different defaults,
&gt;&gt; Jen Kramer: Different people browsers

147
00:09:07.754 --> 00:09:09.681
might have different defaults,

148
00:09:09.681 --> 00:09:14.170
and this will give you perhaps 2.9
times the size of that browser default.

149
00:09:14.170 --> 00:09:16.566
Anything else?

150
00:09:16.566 --> 00:09:18.941
&gt;&gt; TJ: Responsiveness,
&gt;&gt; Jen Kramer: It's good for

151
00:09:18.941 --> 00:09:20.228
responsiveness, right?

152
00:09:20.228 --> 00:09:24.390
We may want a smaller size at some
dimensions and a larger size at others.

153
00:09:24.390 --> 00:09:29.361
And we have this wonderful base-font-size
right here that now we can always just

154
00:09:29.361 --> 00:09:34.633
scale it up and down or redefine that size
and everything will scale proportionately.

155
00:09:34.633 --> 00:09:37.341
How cool is that?

156
00:09:37.341 --> 00:09:45.046
Okay, so now here in our
h2 let's do the same thing.

157
00:09:45.046 --> 00:09:49.953
So our font size,
we actually want this much smaller.

158
00:09:49.953 --> 00:09:54.129
So var will be just the base-font-size,

159
00:09:54.129 --> 00:10:00.630
which will make our Frontend Developer
word much, much smaller.

160
00:10:00.630 --> 00:10:04.998
We can make them uppercase using

161
00:10:04.998 --> 00:10:09.539
text-transform: uppercase.

162
00:10:09.539 --> 00:10:12.460
So there we go,
now we have our uppercase letters.

163
00:10:12.460 --> 00:10:19.137
We can also make them blue,
var(--windsurfing),

164
00:10:19.137 --> 00:10:24.258
that's the name of the color that we like.

165
00:10:24.258 --> 00:10:29.087
And letter spacing,

166
00:10:29.087 --> 00:10:32.310
0.25em.

167
00:10:32.310 --> 00:10:35.899
Now here's another interesting point.

168
00:10:35.899 --> 00:10:40.427
I have used 0.25em, just E-M,

169
00:10:40.427 --> 00:10:44.956
even though up here in my variables,

170
00:10:44.956 --> 00:10:49.352
I refer to my based on size as 1rem.

171
00:10:49.352 --> 00:10:54.431
Why am I using ems here on
my h2 instead of using rems?

172
00:10:54.431 --> 00:10:59.695
Okay, so is a very flexible
relative unit of measure.

173
00:10:59.695 --> 00:11:04.537
It's the height of a lowercase letter m,
that is defined as 1em.

174
00:11:04.537 --> 00:11:08.027
So some fonts may have a very
tall lowercase letter m,

175
00:11:08.027 --> 00:11:11.062
some may have a very
short lowercase letter m.

176
00:11:11.062 --> 00:11:15.998
It doesn't matter, whatever size that is,
that's considered to be 1em.

177
00:11:15.998 --> 00:11:21.111
The reason we would use ems here
is that depending on what size we

178
00:11:21.111 --> 00:11:26.043
have going on, we're saying
make it a quarter of that size.

179
00:11:26.043 --> 00:11:28.345
Doesn't matter what size the font is,

180
00:11:28.345 --> 00:11:31.987
we're want a quarter of that size
to give us the spacing here.

181
00:11:31.987 --> 00:11:34.735
So relatively speaking,
it's always the same.

182
00:11:34.735 --> 00:11:40.116
A rem is a root relative so
relative to the root of the document.

183
00:11:40.116 --> 00:11:45.173
And in that case it would be one
quarter of the base font size,

184
00:11:45.173 --> 00:11:48.260
not necessarily the size of the h2.

185
00:11:48.260 --> 00:11:50.893
So that's why we've taken this approach,
all right?

186
00:11:55.152 --> 00:12:00.947
&gt;&gt; Jen Kramer: All right, then for my h3s,
I don't think I have any h3s on this page,

187
00:12:00.947 --> 00:12:04.284
but I'll add this anyway, margin of 0.

188
00:12:04.284 --> 00:12:12.325
The other thing I usually like to add to
my paragraphs is a line height of 1.5.

189
00:12:12.325 --> 00:12:16.720
This makes my paragraph just a little
bit more space in between it.

190
00:12:16.720 --> 00:12:21.166
We wanna use the no units when
we're working with line height.

191
00:12:21.166 --> 00:12:25.843
You can use, for example,
I could say 20 pixels or

192
00:12:25.843 --> 00:12:29.579
I could say 2rem or I could say 2em even.

193
00:12:29.579 --> 00:12:34.120
But by having no units here,
this is a proportion, okay?

194
00:12:34.120 --> 00:12:36.738
So 1.5 times the size of the font,

195
00:12:36.738 --> 00:12:42.155
whatever the size of the font is at
that moment in time, make it 1.5 that.

196
00:12:42.155 --> 00:12:47.147
And I think this is the best
way of working with this unit,

197
00:12:47.147 --> 00:12:52.035
because that would always make
our line height look good

198
00:12:52.035 --> 00:12:56.416
regardless of the size of our font,
big or small.

199
00:12:56.416 --> 00:12:59.787
We can also style up our links.

200
00:12:59.787 --> 00:13:03.430
And for our links themselves,

201
00:13:03.430 --> 00:13:08.766
our color will be var (--windsurfing).

202
00:13:08.766 --> 00:13:12.899
So we'll pull in that nice blue color
again for that a, and then we can also

203
00:13:12.899 --> 00:13:19.124
assign our hover state, a:hover,
&gt;&gt; Jen Kramer: And

204
00:13:19.124 --> 00:13:21.975
the color here will be var(--marina).

205
00:13:27.323 --> 00:13:32.321
&gt;&gt; Jen Kramer: And then the other
interesting thing that's going on here in

206
00:13:32.321 --> 00:13:34.772
our design is these corners.

207
00:13:34.772 --> 00:13:38.734
They may be hard to see with this
particular background here, but

208
00:13:38.734 --> 00:13:40.967
if you look carefully at this photo,

209
00:13:40.967 --> 00:13:45.084
you will notice that we have a rounded
corner here in the upper left.

210
00:13:45.084 --> 00:13:49.041
And we have a rounded corner
here in the lower right.

211
00:13:49.041 --> 00:13:53.255
The corner in the upper left and

212
00:13:53.255 --> 00:13:59.584
the upper right and
the lower left are pointy.

213
00:13:59.584 --> 00:14:02.875
Frequently, when we work with rounded
corners, they're all four the same.

214
00:14:02.875 --> 00:14:05.946
In this case, the designer
decided to do this cool thing,

215
00:14:05.946 --> 00:14:09.153
rounding the two that are diagonally
opposed to each other.

216
00:14:09.153 --> 00:14:11.838
So how do we code that?

217
00:14:11.838 --> 00:14:15.197
It's actually pretty
straightforward here as well.

218
00:14:15.197 --> 00:14:22.914
And we have already set here the way
to do that with our corners property.

219
00:14:22.914 --> 00:14:28.359
The first number,
the 24 pixels, stands for

220
00:14:28.359 --> 00:14:33.667
the corner in the top left and
the lower right,

221
00:14:33.667 --> 00:14:39.273
and the 0 refers to the top right and
lower left.

222
00:14:39.273 --> 00:14:42.777
Why they did corners this way,
I don't know.

223
00:14:42.777 --> 00:14:47.583
Why they didn't follow the same
pattern of everything else in CSS,

224
00:14:47.583 --> 00:14:51.375
which is the clock or TRBL,
top right, bottom left,

225
00:14:51.375 --> 00:14:55.611
I don't know why they decided
to go this way, but they did.

226
00:14:55.611 --> 00:14:59.020
So that is the way that we will
write that little bit of code.

227
00:14:59.020 --> 00:15:04.104
So for all of the images
that are here on our site,

228
00:15:04.104 --> 00:15:09.688
we can say our border
radius is var(--corners).

229
00:15:14.745 --> 00:15:18.778
&gt;&gt; Jen Kramer: And that should round the
corners here on our image appropriately.

