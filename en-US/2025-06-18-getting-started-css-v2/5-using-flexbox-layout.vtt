WEBVTT

1
00:00:00.110 --> 00:00:02.805
&gt;&gt; Jen Kramer: So
we've completed part two here, and

2
00:00:02.805 --> 00:00:07.142
we are moving on to part three,
making our design responsive.

3
00:00:07.142 --> 00:00:11.882
And I'm gonna give you two screenshots
here for making this responsive,

4
00:00:11.882 --> 00:00:16.710
you'll see that we have a vertical
layout here, everything is centered.

5
00:00:16.710 --> 00:00:21.123
We have our front end developer h2,
our h1, our paragraph,

6
00:00:21.123 --> 00:00:26.284
everything centered,
our icons are centered, and, look at that,

7
00:00:26.284 --> 00:00:30.217
we're only gonna show part
of the picture here, okay?

8
00:00:30.217 --> 00:00:31.578
Rather than the whole thing.

9
00:00:31.578 --> 00:00:35.978
And then when we go to desktop, we wanna
have all of that stuff, we want it left

10
00:00:35.978 --> 00:00:40.825
aligned, and we want the picture next to
it, so that's where we're heading next.

11
00:00:40.825 --> 00:00:44.860
And once again,
I've given you links to the beginning and

12
00:00:44.860 --> 00:00:48.659
ending code pens down here,
so we ready to set this up?

13
00:00:48.659 --> 00:00:54.177
Okay, so as developers who know
all about responsive design,

14
00:00:54.177 --> 00:00:59.695
which of these designs do we work
on first do we go mobile first,

15
00:00:59.695 --> 00:01:01.998
or do we go to the desktop?

16
00:01:01.998 --> 00:01:04.512
&gt;&gt; Speaker 2: Some people
wants mobile first.

17
00:01:04.512 --> 00:01:06.788
&gt;&gt; Jen Kramer: Many people
start with mobile first, right?

18
00:01:06.788 --> 00:01:10.792
And then we are gonna use media
queries to change the design and

19
00:01:10.792 --> 00:01:15.574
have this work for desktop, so
let us start with that mobile layout then.

20
00:01:15.574 --> 00:01:19.911
All right, so the first thing is, we've
got all of our text everything is all

21
00:01:19.911 --> 00:01:22.271
smashed onto the edge of our screen here.

22
00:01:22.271 --> 00:01:25.415
So one of the things that
we can do to our design,

23
00:01:25.415 --> 00:01:30.459
which we don't currently have,
we just have this basic HTML that's here.

24
00:01:30.459 --> 00:01:35.953
It's always good to kind of wrap things
up in some kind of wrapper on this page,

25
00:01:35.953 --> 00:01:41.222
perhaps we want a maximum width of
1200 pixels centered on the screen.

26
00:01:41.222 --> 00:01:46.214
And we can do that by
adding a div with a class

27
00:01:46.214 --> 00:01:50.673
of wrapper here to the top of our code.

28
00:01:50.673 --> 00:01:55.521
By the way, for those of you who are not
necessarily familiar with CodePen,

29
00:01:55.521 --> 00:01:59.558
right here in the little drop down
icon at the top the HTML here.

30
00:01:59.558 --> 00:02:04.346
There is the option to format your HTML,
you can also analyze your HTML,

31
00:02:04.346 --> 00:02:09.784
this is gonna tell me that I'm missing a
slash div because I haven't put it in yet.

32
00:02:09.784 --> 00:02:12.138
So if we scroll all the way
down here into the bottom.

33
00:02:15.211 --> 00:02:20.616
&gt;&gt; Jen Kramer: Just after my image,
I put in a /div, you can then check

34
00:02:20.616 --> 00:02:27.420
our HTML analyze it tells me I don't
have any errors, which is great.

35
00:02:27.420 --> 00:02:33.982
And then in my CSS somewhere, I usually
like to put it up here towards the top.

36
00:02:33.982 --> 00:02:37.873
I'm gonna add my wrapper class and

37
00:02:37.873 --> 00:02:43.373
I'm going to say a max
width Of 1200 pixels,

38
00:02:43.373 --> 00:02:48.353
and I'm going to say my
margin is zero auto.

39
00:02:48.353 --> 00:02:54.131
Zero auto, what does that mean,
margin zero auto anyone?

40
00:02:58.126 --> 00:03:02.936
&gt;&gt; Speaker 2: You try to put everything
at the same sides up and down.

41
00:03:02.936 --> 00:03:05.351
&gt;&gt; Jen Kramer: Yes, so
zero at the top and the bottom and

42
00:03:05.351 --> 00:03:07.850
then quote auto on the left and the right.

43
00:03:07.850 --> 00:03:14.154
So, as we make this bigger, I'm only
at 1075 here, so, Although my code,

44
00:03:14.154 --> 00:03:20.092
for purposes of having written
everything I wrote this to 1200 pixels,

45
00:03:20.092 --> 00:03:24.914
my screen size here is not gonna
allow me to demonstrate that,

46
00:03:24.914 --> 00:03:28.655
so I'm actually just
gonna back this off here.

47
00:03:28.655 --> 00:03:32.255
So let's say I back this
off to like 900 pixels, and

48
00:03:32.255 --> 00:03:34.926
then you'll actually be able to see it.

49
00:03:34.926 --> 00:03:37.617
Okay, so that will,
here's all of our text,

50
00:03:37.617 --> 00:03:40.998
it's currently stretching all
the way across the page and

51
00:03:40.998 --> 00:03:44.937
you can see that we have a little
bit of space that will develop here.

52
00:03:44.937 --> 00:03:49.340
And on your screens at home,
which are much larger than mine,

53
00:03:49.340 --> 00:03:54.857
you'll see that you'll eventually wind
up with our text centered in space.

54
00:03:54.857 --> 00:03:59.662
Although not centered in terms
of centering the text, but

55
00:03:59.662 --> 00:04:04.182
the big block centered in
space with that margin auto.

56
00:04:04.182 --> 00:04:08.704
Okay, and then the other thing
I'll add is padding of 1rem, and

57
00:04:08.704 --> 00:04:13.473
what that will do is, even if we're
not at a large screen dimension,

58
00:04:13.473 --> 00:04:17.607
we'll get the text off the edge
of the browser window here.

59
00:04:19.542 --> 00:04:24.384
&gt;&gt; Jen Kramer: Okay, also to my HTML,
I wanna add some additional markup here,

60
00:04:24.384 --> 00:04:26.675
because inside of my wrapper,

61
00:04:26.675 --> 00:04:31.358
now I have all of these HTML
elements hanging out here in space.

62
00:04:31.358 --> 00:04:36.915
This is actually one huge grouping
of things, so what HTML element

63
00:04:36.915 --> 00:04:42.286
might be reasonable to use to group
all of this stuff on the page?

64
00:04:42.286 --> 00:04:44.649
And yes, div is always a possibility, but

65
00:04:44.649 --> 00:04:48.853
we could actually choose something
a little bit more semantic, anyone have

66
00:04:48.853 --> 00:04:52.943
an idea of what element we might use
to group all of our HTML elements here?

67
00:04:52.943 --> 00:04:53.860
Yes.

68
00:04:53.860 --> 00:04:55.384
&gt;&gt; Speaker 3: Would section be an option?

69
00:04:55.384 --> 00:04:58.951
&gt;&gt; Jen Kramer: Section is certainly
an option, section would be one option,

70
00:04:58.951 --> 00:05:03.191
it's just sort of all of this is related
information we could use section,

71
00:05:03.191 --> 00:05:04.219
you have an idea?

72
00:05:04.219 --> 00:05:05.464
&gt;&gt; Speaker 4: You can use div.

73
00:05:05.464 --> 00:05:08.111
&gt;&gt; Jen Kramer: You absolutely can use div,
div is very generic,

74
00:05:08.111 --> 00:05:11.578
it doesn't communicate anything
meaningful about this HTML and

75
00:05:11.578 --> 00:05:15.437
its relationship to each other, but
they're very useful for styling.

76
00:05:15.437 --> 00:05:16.688
That's why we used it for

77
00:05:16.688 --> 00:05:20.263
the wrapper we're not we're just
using it to hold that wrapper class,

78
00:05:20.263 --> 00:05:23.912
we're not actually community
communicating anything about the HTML.

79
00:05:23.912 --> 00:05:29.464
So one of the things that we could do here
would be to give this an article element,

80
00:05:29.464 --> 00:05:33.466
what article says is that this
content could stand alone,

81
00:05:33.466 --> 00:05:36.427
this could be your whole web page, right?

82
00:05:36.427 --> 00:05:39.577
You don't have to have anything more
than this, if you just wanna say,

83
00:05:39.577 --> 00:05:42.900
hi, I'm [INAUDIBLE] so this is about me,
this could be your whole web page.

84
00:05:42.900 --> 00:05:45.846
So I'm gonna use the article element and

85
00:05:45.846 --> 00:05:49.145
I'm gonna give this
a class of main article.

86
00:05:53.417 --> 00:05:57.263
&gt;&gt; Jen Kramer: And then I'll close
this down here at the bottom,

87
00:05:57.263 --> 00:06:01.487
just before my /div,
which was just for the wrapper.

88
00:06:04.086 --> 00:06:07.433
&gt;&gt; Jen Kramer: Okay?

89
00:06:07.433 --> 00:06:12.530
We'll save that and I will format this.

90
00:06:12.530 --> 00:06:16.764
One of the wonderful things about CodePen
that's also true of VS code are these

91
00:06:16.764 --> 00:06:19.729
little triangles that are over
here next to your HTML.

92
00:06:19.729 --> 00:06:22.765
I'm always telling my students
to click on these and

93
00:06:22.765 --> 00:06:26.008
flatten things up so
you can see your code, your HTML and

94
00:06:26.008 --> 00:06:30.090
the relationships between what's
going on here a little bit better.

95
00:06:30.090 --> 00:06:32.679
Because when we start talking
about flexbox and grid,

96
00:06:32.679 --> 00:06:34.997
remember it's all about parents and
children.

97
00:06:34.997 --> 00:06:37.364
If you want to hear me talk about this,
ad nauseam,

98
00:06:37.364 --> 00:06:39.292
check out my course on the ultimate grid,

99
00:06:39.292 --> 00:06:42.454
the ultimate Ultimate grid course
right here at Front End Masters.

100
00:06:42.454 --> 00:06:45.718
I talk all about parents and children and

101
00:06:45.718 --> 00:06:51.766
how this applies to our various types
of layout with grid and with Flexbox.

102
00:06:51.766 --> 00:06:54.511
So here inside of our article now,

103
00:06:54.511 --> 00:06:59.336
we have a whole bunch of children,
h2 is a child of article,

104
00:06:59.336 --> 00:07:04.654
h1 is a child of article,
paragraphs, a child of article, etc.

105
00:07:04.654 --> 00:07:07.534
We now need to group
all of those together,

106
00:07:07.534 --> 00:07:12.418
because ultimately I'm going to put
my text and my picture side by side.

107
00:07:12.418 --> 00:07:17.008
So I need one element to wrap around
all of that text in the SVGs and

108
00:07:17.008 --> 00:07:21.695
the list all of that, and
then they have me image as my other item.

109
00:07:21.695 --> 00:07:26.453
So what i'm going to do here is I'm
going to add a div because here I'm not

110
00:07:26.453 --> 00:07:31.380
communicating anything about this text,
I just need a grouping element.

111
00:07:31.380 --> 00:07:34.906
So I'm gonna use div, I'm gonna give it

112
00:07:34.906 --> 00:07:39.781
a class of text cuz I'm super
creative in my naming, and

113
00:07:39.781 --> 00:07:44.547
then,
&gt;&gt; Jen Kramer: Down here at the bottom,

114
00:07:44.547 --> 00:07:49.654
just before my image, I'm going to
say /text or sorry, sorry, /div.

115
00:07:53.572 --> 00:07:57.380
&gt;&gt; Jen Kramer: And we'll clean
this up with our formatting, and

116
00:07:57.380 --> 00:08:03.182
now if you see here, I have, my wrapper
goes all the way around everything,

117
00:08:03.182 --> 00:08:07.917
the article goes around this
particular part of the content.

118
00:08:07.917 --> 00:08:10.513
Remember, we'll eventually
add our projects,

119
00:08:10.513 --> 00:08:12.931
we'll eventually add
a footer to all of this.

120
00:08:12.931 --> 00:08:16.268
And then inside of that
article we have two children,

121
00:08:16.268 --> 00:08:20.506
we have a div with a class of text,
and we have an image, make sense?

122
00:08:20.506 --> 00:08:22.292
This is gonna be important for our layout,

123
00:08:22.292 --> 00:08:24.882
that's why we're putting all
of these containers in place.

124
00:08:24.882 --> 00:08:28.227
Now that I have this
HTML structure in place,

125
00:08:28.227 --> 00:08:33.596
let's go to that mobile formatting,
so here in my CSS, just remind us,

126
00:08:33.596 --> 00:08:37.747
this is what we're trying to
get it to look like, okay?

127
00:08:37.747 --> 00:08:42.886
We need all of our text here in the
middle, we also need to align our image

128
00:08:42.886 --> 00:08:49.819
in the middle, so what I'll do here,
&gt;&gt; Jen Kramer: Scroll on

129
00:08:49.819 --> 00:08:55.265
through my CSS here
about me layout styling,

130
00:08:55.265 --> 00:09:00.579
always add a little comment here and
there.

131
00:09:00.579 --> 00:09:03.492
And I'm going to say my main article,

132
00:09:03.492 --> 00:09:07.692
that was the class that we
use to identify the article.

133
00:09:08.788 --> 00:09:15.113
&gt;&gt; Jen Kramer: I am going to,
&gt;&gt; Jen Kramer: Display grid.

134
00:09:15.113 --> 00:09:18.672
Okay, so grid-based layout
always what we wanna reach for

135
00:09:18.672 --> 00:09:21.247
as a default when laying
out our web pages.

136
00:09:21.247 --> 00:09:25.626
In my mobile version, how many columns
do I have in my grid-based layout?

137
00:09:29.294 --> 00:09:31.285
&gt;&gt; Jen Kramer: How many columns do I have?

138
00:09:31.285 --> 00:09:32.067
&gt;&gt; Speaker 5: Just one.

139
00:09:32.067 --> 00:09:35.438
&gt;&gt; Jen Kramer: Just one, only one column.

140
00:09:35.438 --> 00:09:40.400
And I can do this like
grid template columns,

141
00:09:40.400 --> 00:09:43.664
1fr, fr being fraction, so

142
00:09:43.664 --> 00:09:49.689
take up the fraction of the page,
one whole fraction.

143
00:09:49.689 --> 00:09:52.918
The gap will come in handy, gap of 2rem,

144
00:09:52.918 --> 00:09:57.440
that should give us then a gap
in between my social icons and

145
00:09:57.440 --> 00:10:02.538
the image itself, which is great,
that is a very helpful thing.

146
00:10:02.538 --> 00:10:06.805
And then I can say text align center.

147
00:10:06.805 --> 00:10:09.586
Once again.
This is an inherited property, so

148
00:10:09.586 --> 00:10:12.489
by putting it at the top
of my main article,

149
00:10:12.489 --> 00:10:16.382
everything in terms of text
will center here on the page.

150
00:10:16.382 --> 00:10:21.213
My social icon list did not center,
my image did not center,

151
00:10:21.213 --> 00:10:23.219
so let's address that.

152
00:10:23.219 --> 00:10:28.877
So for my icons,
we actually have the styling up here,

153
00:10:28.877 --> 00:10:33.429
I originally said flex end for
align items to

154
00:10:33.429 --> 00:10:38.472
this will just add a justify
content center, and

155
00:10:38.472 --> 00:10:44.518
that will center the social
media bar there in the center.

156
00:10:44.518 --> 00:10:47.255
And then finally for

157
00:10:47.255 --> 00:10:52.890
the image itself dot main article image,

158
00:10:52.890 --> 00:10:57.881
so the image inside of main article,

159
00:10:57.881 --> 00:11:03.206
we can say margin of zero auto, right?

160
00:11:03.206 --> 00:11:08.095
And that will center the image on
the page, that's all you need, okay?

161
00:11:09.726 --> 00:11:14.188
&gt;&gt; Jen Kramer: So we're really close
now we have our mobile layout for

162
00:11:14.188 --> 00:11:16.133
the most part, right?

163
00:11:16.133 --> 00:11:20.116
The thing that we're missing now is,
what about making this image smaller?

164
00:11:20.116 --> 00:11:23.375
Cuz we're just gonna show her head
here on mobile for whatever reason.

165
00:11:23.375 --> 00:11:28.638
&gt;&gt; Speaker 6: If we remove the flex
end before they justify it,

166
00:11:28.638 --> 00:11:29.175
&gt;&gt; Jen Kramer: Yeah.

167
00:11:29.175 --> 00:11:32.243
&gt;&gt; Speaker 6: I think it should
still remain the same, right?

168
00:11:32.243 --> 00:11:34.150
&gt;&gt; Jen Kramer: Actually it is.

169
00:11:34.150 --> 00:11:38.117
The goal of that is to,
I may have the wrong property.

170
00:11:38.117 --> 00:11:42.204
&gt;&gt; Speaker 6: I think initially before
you had the justify content, you trying

171
00:11:42.204 --> 00:11:47.185
to flex it so that it doesn't, [INAUDIBLE]
&gt;&gt; Jen Kramer: Okay, fair,

172
00:11:47.185 --> 00:11:49.648
well, we can take that out.

173
00:11:49.648 --> 00:11:54.122
I think what I was going for is trying
to align all the icons on the bottom.

174
00:11:54.122 --> 00:11:56.761
Yeah, I probably have the wrong property.

175
00:11:56.761 --> 00:12:00.180
Let's talk about this
image down at this point.

176
00:12:00.180 --> 00:12:04.163
Okay, so we have this lovely, big,
long image, but it's too big for bubble,

177
00:12:04.163 --> 00:12:06.488
we just wanna show the head
of the person here.

178
00:12:06.488 --> 00:12:09.209
So there's a bunch of ways
we could do this, okay?

179
00:12:09.209 --> 00:12:13.798
And it depends kind of on the file size,
this is a very lean website in terms of

180
00:12:13.798 --> 00:12:18.842
its overall file size, it's gonna load
like that because it's only HTML and CSS.

181
00:12:18.842 --> 00:12:22.498
So generally speaking,
the size of these images matters

182
00:12:22.498 --> 00:12:26.153
less to us than it might in
your average web application,

183
00:12:26.153 --> 00:12:30.737
where you're always looking for
ways to shave sizes off of your files.

184
00:12:30.737 --> 00:12:34.784
We could do this with two different
pictures, we could use our picture

185
00:12:34.784 --> 00:12:38.486
element, I talk about this also
in the ultimate grid course, so

186
00:12:38.486 --> 00:12:42.830
depending on the size of the screen,
we could load in different pictures.

187
00:12:42.830 --> 00:12:47.282
Today we have some other options that are
available to us because there are some new

188
00:12:47.282 --> 00:12:51.540
properties called object fit and object
position that we can apply to our image

189
00:12:51.540 --> 00:12:54.078
that will just show us
a portion of this image.

190
00:12:54.078 --> 00:12:57.140
So the file size of the image
remains the same overall, but

191
00:12:57.140 --> 00:12:59.713
how much we're going to
show is going to change.

192
00:12:59.713 --> 00:13:03.458
So I'm gonna show you this little trick,

193
00:13:03.458 --> 00:13:07.845
just as something a different
approach to this,

194
00:13:07.845 --> 00:13:12.446
we can say that we want our
object fit will be cover,

195
00:13:12.446 --> 00:13:16.410
this may not change anything immediately.

196
00:13:16.410 --> 00:13:20.708
An object position will be top, and

197
00:13:20.708 --> 00:13:26.010
then we'll change our height to like 175

198
00:13:26.010 --> 00:13:30.755
pixels and our width to 300 pixels.

199
00:13:30.755 --> 00:13:35.581
So what that will do is just
basically crop our image visually, so

200
00:13:35.581 --> 00:13:41.989
we're showing not the entire image, we're
only showing the top 175 pixels high,

201
00:13:41.989 --> 00:13:45.879
and we're setting the width
to 300 pixels wide.

202
00:13:45.879 --> 00:13:48.693
And then some good things
to add here again,

203
00:13:48.693 --> 00:13:52.993
are overflow,
&gt;&gt; Jen Kramer: Overflow hidden,

204
00:13:52.993 --> 00:13:57.242
just in case, we don't wanna
show any of that extra image, so

205
00:13:57.242 --> 00:14:01.276
we're going to hide it,
by using the overflow property.

206
00:14:02.811 --> 00:14:03.807
&gt;&gt; Jen Kramer: Okay?

207
00:14:03.807 --> 00:14:09.790
So at this point, we should have
something approximating a mobile design.

208
00:14:09.790 --> 00:14:12.363
If you're working in CodePen for
the first time,

209
00:14:12.363 --> 00:14:15.304
you'll notice this tiny number
down here at the bottom,

210
00:14:15.304 --> 00:14:19.615
which will tell you exactly how wide the
screen that you're looking at is, right?

211
00:14:19.615 --> 00:14:25.086
So you can pick a mobile dimension here
and do a quick sort of visual check,

212
00:14:25.086 --> 00:14:30.206
I'm going to put mine around 450
pixels that looks reasonable for

213
00:14:30.206 --> 00:14:32.693
a mobile phone display, right?

214
00:14:32.693 --> 00:14:34.623
Any questions at that at this point.

215
00:14:34.623 --> 00:14:37.649
&gt;&gt; Speaker 7: If you use
a property value more than once,

216
00:14:37.649 --> 00:14:39.844
is it okay to add it to the root?

217
00:14:39.844 --> 00:14:44.516
&gt;&gt; Jen Kramer: Yes, you can absolutely add
anything you want to your CSS variables.

218
00:14:44.516 --> 00:14:49.398
In general, because I'm teaching,
I tend to keep basic things that I

219
00:14:49.398 --> 00:14:52.957
either use a lot,
like eventually these corners or

220
00:14:52.957 --> 00:14:57.123
my base font size that I'm
gonna manipulate through calc.

221
00:14:57.123 --> 00:15:01.897
And of course, the colors that we repeat
over and over again, I tend not to put

222
00:15:01.897 --> 00:15:06.755
a ton of stuff here into my variables,
because I think students get confused.

223
00:15:06.755 --> 00:15:10.802
We forget all of the variables that we
have up there in the real coding world,

224
00:15:10.802 --> 00:15:15.230
where you're actually writing this for
real, there are probably some more things

225
00:15:15.230 --> 00:15:19.491
here in what I'm doing that you would
extract and create as a variable instead.

226
00:15:19.491 --> 00:15:23.136
But to keep my code readable and
understandable for the students,

227
00:15:23.136 --> 00:15:26.929
I'm not doing that as aggressively
as I might in a real application.

