WEBVTT

1
00:00:00.060 --> 00:00:03.529
Another major feature of state
charts are parallel states.

2
00:00:03.529 --> 00:00:08.243
So when David Harrell invented
state charts in 1987, give or

3
00:00:08.243 --> 00:00:13.142
take, two of the main features
were orthogonality and hierarchy.

4
00:00:13.142 --> 00:00:18.080
So the hierarchy comes with compound
states where you could have

5
00:00:18.080 --> 00:00:22.928
this hierarchy of states, and
this orthogonality represents

6
00:00:22.928 --> 00:00:26.964
just many states that can
be active at the same time.

7
00:00:26.964 --> 00:00:30.513
Now you might be thinking to yourself,
wait a minute,

8
00:00:30.513 --> 00:00:35.296
finite state machines, I thought that
the number one rule was that you can

9
00:00:35.296 --> 00:00:38.320
only be in exactly one
state at any given time.

10
00:00:38.320 --> 00:00:41.900
And that's still true even
with parallel states.

11
00:00:41.900 --> 00:00:44.759
So what we're gonna be modeling over here,

12
00:00:44.759 --> 00:00:47.774
I'll just show you
an example in Excalidraw,

13
00:00:47.774 --> 00:00:52.520
is we have all of these different states,
we have loading and ready.

14
00:00:52.520 --> 00:00:59.123
But let's say that we also want to control
the volume in the same state machine.

15
00:00:59.123 --> 00:01:03.975
So, Whether it's loading or playing or

16
00:01:03.975 --> 00:01:07.856
paused or in this ready state,
it doesn't matter.

17
00:01:07.856 --> 00:01:12.380
The volume can still be muted and
unmuted at any time.

18
00:01:12.380 --> 00:01:16.580
It sort of lives independently
from all of these states.

19
00:01:16.580 --> 00:01:18.516
So what we would have to do,

20
00:01:18.516 --> 00:01:23.067
if we were trying to represent
this strictly as a state machine,

21
00:01:23.067 --> 00:01:28.063
is we would have to have, and
let me just change this color real quick.

22
00:01:28.063 --> 00:01:32.613
We would have to have
a loadingMuted state.

23
00:01:36.662 --> 00:01:42.431
And a loadingUnmuted state,
I'm gonna spell that right, unmuted.

24
00:01:42.431 --> 00:01:47.439
And we would have to have all
of the states like this too.

25
00:01:47.439 --> 00:01:51.810
We would have to have playingMuted,
playingUnmuted.

26
00:01:51.810 --> 00:01:57.200
PauseMuted, pausedUnmuted.

27
00:01:57.200 --> 00:02:03.484
And so now you see that our three states
have multiplied into six different states.

28
00:02:03.484 --> 00:02:07.964
And so now if we have to represent
something else such as whether the media

29
00:02:07.964 --> 00:02:12.820
player is expanded or collapsed,
now you're multiplying this by two again.

30
00:02:12.820 --> 00:02:17.484
And then if you want to represent
different states, such as if you if you

31
00:02:17.484 --> 00:02:22.485
decide to represent something being liked,
unliked, or disliked.

32
00:02:22.485 --> 00:02:26.222
Now you're multiplying all
those states by three, and

33
00:02:26.222 --> 00:02:29.475
this is where state explosion happens.

34
00:02:29.475 --> 00:02:33.427
So that's why with both compounds
state and parallel state,

35
00:02:33.427 --> 00:02:38.515
we can really manage and prevent
this state explosion from happening.

36
00:02:38.515 --> 00:02:43.076
So the way we do this is instead of
creating a combination of all those

37
00:02:43.076 --> 00:02:44.836
states, like a Mexican or

38
00:02:44.836 --> 00:02:50.917
a Chinese restaurants where it's just like
a menu full of 100 different meal options,

39
00:02:50.917 --> 00:02:55.495
which are really just combinations
of the same eight ingredients.

40
00:02:55.495 --> 00:02:59.049
We're going to represent
these as parallel states.

41
00:02:59.049 --> 00:03:04.197
So, the way we do that is by
creating what are called regions,

42
00:03:04.197 --> 00:03:07.662
and don't be scared by the term regions,

43
00:03:07.662 --> 00:03:12.315
it's just a way of saying,
just child parallel state.

44
00:03:12.315 --> 00:03:17.748
So let's say that we have this
entire machine as a parallel state,

45
00:03:17.748 --> 00:03:23.666
and we have two separate regions, and
again think of regions as states,

46
00:03:23.666 --> 00:03:27.661
we have this which
represents the media player.

47
00:03:27.661 --> 00:03:34.138
And then we have a separate region,
which represents the volume.

48
00:03:34.138 --> 00:03:41.393
And so, this volume can be muted,
it's really small, or it could be unmuted.

49
00:03:41.393 --> 00:03:46.293
And so both of these states can

50
00:03:46.293 --> 00:03:51.788
transition between each other.

51
00:03:51.788 --> 00:03:55.961
We could have muted going to unmuted, or

52
00:03:55.961 --> 00:04:00.513
unmuted going to muted, so just like this.

53
00:04:00.513 --> 00:04:04.813
And these are just on different events,
either the mute,

54
00:04:04.813 --> 00:04:09.399
the unmute, or we could have
a volume.toggle event as well.

55
00:04:09.399 --> 00:04:14.374
Ad so in xstate, the way that you
represent these parallel states

56
00:04:14.374 --> 00:04:18.363
is by specifying the state
node as type of parallel.

57
00:04:18.363 --> 00:04:23.884
So let's go back to our example machine
here and just create a little example.

58
00:04:23.884 --> 00:04:26.944
So instead of providing an initial state,

59
00:04:26.944 --> 00:04:31.538
I'm just going to provide type
parallel on the machine itself.

60
00:04:31.538 --> 00:04:34.925
Now we're gonna specify
our states as normal, but

61
00:04:34.925 --> 00:04:38.009
these states are going
to be parallel states.

62
00:04:38.009 --> 00:04:44.110
So we could have,
I'm gonna have something for,

63
00:04:44.110 --> 00:04:47.015
let's say mode, and so

64
00:04:47.015 --> 00:04:52.259
our state can be dark mode, or light mode.

65
00:04:52.259 --> 00:04:56.021
And initially, we're gonna do light mode,

66
00:04:56.021 --> 00:05:00.977
and then we might have another
parallel state for display.

67
00:05:00.977 --> 00:05:07.830
So initial on, states on, off.

68
00:05:07.830 --> 00:05:13.019
And so now you see that this is what
these parallel states look like.

69
00:05:13.019 --> 00:05:18.098
We're both in the display on state,
and the mode light state.

70
00:05:18.098 --> 00:05:21.203
Now we could go back and
forth between the mode light and

71
00:05:21.203 --> 00:05:24.917
dark state without affecting the display,
or we could go back and

72
00:05:24.917 --> 00:05:29.192
forth between the on and off states in
display without affecting the mode.

73
00:05:29.192 --> 00:05:34.757
Or the same event can be handled by
states inside this parallel region,

74
00:05:34.757 --> 00:05:37.075
and this parallel region, so

75
00:05:37.075 --> 00:05:42.194
you might have multiple transitions
happening at the same time.

76
00:05:42.194 --> 00:05:47.859
Again, just like compound states, parallel
states are an organizational technique for

77
00:05:47.859 --> 00:05:52.269
reducing the number of states and
transitions in your state machine.

