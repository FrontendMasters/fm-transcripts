WEBVTT

1
00:00:00.270 --> 00:00:04.088
All right, so
let's make our app come alive with actors.

2
00:00:04.088 --> 00:00:09.381
So we are going to go
to lesson 9 actors and

3
00:00:09.381 --> 00:00:12.720
make this actually work.

4
00:00:12.720 --> 00:00:15.895
So we have to do a couple things.

5
00:00:15.895 --> 00:00:19.820
First we have to invoke a promise.

6
00:00:19.820 --> 00:00:24.063
And so
this is going to be that invoke syntax,

7
00:00:24.063 --> 00:00:28.870
where we have invoke,
we specify in a source.

8
00:00:28.870 --> 00:00:34.833
And so that source is going to be
something that returns this loadSong.

9
00:00:34.833 --> 00:00:39.621
And actually,
we could just have this be loadSong

10
00:00:39.621 --> 00:00:44.304
just because it's the same
thing as doing this.

11
00:00:44.304 --> 00:00:46.990
But yeah, we'll just keep it as this.

12
00:00:46.990 --> 00:00:50.861
And so when this loadSong is done,

13
00:00:50.861 --> 00:00:57.008
then we want to transition
to the ready.hist target.

14
00:00:57.008 --> 00:01:01.640
And we also wants to
assign that song data.

15
00:01:01.640 --> 00:01:06.869
So that's going to be
if we remember we have

16
00:01:06.869 --> 00:01:11.665
this assignSongData right over here,

17
00:01:11.665 --> 00:01:16.340
so, we are going to assignSongData.

18
00:01:16.340 --> 00:01:17.990
Now let's see if this works.

19
00:01:17.990 --> 00:01:19.340
Well looks like it does work.

20
00:01:19.340 --> 00:01:25.840
So when I reload after a second, it gives
us a random song with a random duration.

21
00:01:25.840 --> 00:01:29.150
But this isn't quite working yet.

22
00:01:29.150 --> 00:01:33.020
So now let's add that,
we're done with this.

23
00:01:34.240 --> 00:01:38.862
And now we want to invoke
in this ready state,

24
00:01:38.862 --> 00:01:43.520
we are going to invoke the audio callback.

25
00:01:43.520 --> 00:01:46.146
So, I'm going to give this
an idea of audio just so

26
00:01:46.146 --> 00:01:48.170
that we can send events to it.

27
00:01:48.170 --> 00:01:53.646
And we're also going to give it
a source of this invokeAudioCallback,

28
00:01:53.646 --> 00:01:59.320
which already has this part here for
taking in the context and the events.

29
00:02:00.610 --> 00:02:02.668
So, we could use it directly.

30
00:02:04.768 --> 00:02:08.916
InvokeAudio, and this is not going
to take onDone or onError or

31
00:02:08.916 --> 00:02:13.080
anything like that,
just because this is a continuous thing.

32
00:02:14.260 --> 00:02:17.908
And something to mention here too,
in this audio callback,

33
00:02:17.908 --> 00:02:21.843
we're receiving an event and
doing something based on whether we

34
00:02:21.843 --> 00:02:24.720
receive a play or
pause event from the machine.

35
00:02:26.020 --> 00:02:30.170
But, it's also good to do some cleanup.

36
00:02:30.170 --> 00:02:33.630
And I want to just make sure that
the cleanup function is being called.

37
00:02:33.630 --> 00:02:39.028
So I'm just going to pretend that this
disposes of the event listener here and

38
00:02:39.028 --> 00:02:42.780
does any other things that we
need to do to clean it up.

39
00:02:44.660 --> 00:02:46.860
All right, so now that should be working.

40
00:02:48.150 --> 00:02:55.700
So when I press PLAY and PAUSE,
nothing's happening quite yet.

41
00:02:55.700 --> 00:03:02.150
And the reason is because we have this,
yeah, we have to assign the time.

42
00:03:03.180 --> 00:03:08.020
And actually, it should be sending
that assign time over there.

43
00:03:08.020 --> 00:03:11.450
So let's just make sure
that that's working.

44
00:03:11.450 --> 00:03:14.984
Yep, we have sent back audio.time.

45
00:03:17.044 --> 00:03:21.420
And that's because right now,
nothing is playing.

46
00:03:21.420 --> 00:03:24.157
We haven't sent that play
event to the audio and so

47
00:03:24.157 --> 00:03:28.270
we need to just hook those up and
then everything should work.

48
00:03:28.270 --> 00:03:34.770
So we are going to send,
make sure we have the send function, yes.

49
00:03:34.770 --> 00:03:39.228
Okay, so
we're going to send the play event and

50
00:03:39.228 --> 00:03:46.480
we're gonna send it to the audio and
we're gonna just specify the ID of that.

51
00:03:48.260 --> 00:03:50.850
And so
we're gonna be doing the same with PAUSE.

52
00:03:52.340 --> 00:03:56.565
So again, we are specifying that the
playAudio action sends the play event to

53
00:03:56.565 --> 00:04:00.970
the audio, the pauseAudio action
sends the pause event to the audio.

54
00:04:00.970 --> 00:04:02.711
So let's try it out.

55
00:04:02.711 --> 00:04:04.018
We're paused right now.

56
00:04:04.018 --> 00:04:08.350
If we play,
you see this is actually counting down.

57
00:04:09.400 --> 00:04:10.570
And so this is working.

58
00:04:11.900 --> 00:04:17.700
Now if we pause, it pauses because
it's telling the audio to pause.

59
00:04:17.700 --> 00:04:23.560
So it's going to do the right thing and
not send it any time update events.

60
00:04:25.040 --> 00:04:31.172
Now check this out, if I skip a song
notice how the cleanup function is called.

61
00:04:31.172 --> 00:04:35.726
And the cleanup function is called
because we are going out of

62
00:04:35.726 --> 00:04:38.440
the of the ready states.

63
00:04:38.440 --> 00:04:42.300
And so this invokeAudio is
going to be disposed and so

64
00:04:42.300 --> 00:04:46.614
when it's disposed,
the dispose function gets called.

65
00:04:46.614 --> 00:04:52.016
And it's no longer active when
it's outside of the ready state.

66
00:04:52.016 --> 00:04:57.277
So we load the next song, and
then we start invoking the audio again.

67
00:04:57.277 --> 00:05:00.972
So you see even while it's playing,

68
00:05:02.948 --> 00:05:05.930
We're going to skip the song.

69
00:05:07.000 --> 00:05:09.550
I'm logging way too many things,
so I skipped the song.

70
00:05:09.550 --> 00:05:14.297
It does the clean up and
then it's going to go to the next song and

71
00:05:14.297 --> 00:05:20.000
do our previous behavior of having
those history states in there.

72
00:05:20.000 --> 00:05:23.540
So now this is a fully
functional media player.

73
00:05:23.540 --> 00:05:27.720
We could even click here to dislike
the song and then go to the next song.

74
00:05:27.720 --> 00:05:30.476
And we could of course toggle
the volume on and off,

75
00:05:30.476 --> 00:05:33.120
just like we've done
with our parallel states.

