WEBVTT

1
00:00:00.180 --> 00:00:03.878
So let's talk about adding context
into our state machine and

2
00:00:03.878 --> 00:00:07.870
updating that context using
the Assign Action Creator.

3
00:00:07.870 --> 00:00:11.640
So the first thing we want to
do is add the initial context.

4
00:00:11.640 --> 00:00:14.440
And of course we don't
know what the title is.

5
00:00:14.440 --> 00:00:16.590
We're just going to keep it undefined.

6
00:00:16.590 --> 00:00:23.710
So title undefined are this undefined and
duration zero, lapsed zero.

7
00:00:23.710 --> 00:00:29.658
So you could set these to whatever initial
values make sense for your application.

8
00:00:29.658 --> 00:00:33.017
Like status right now
it's just unliked and

9
00:00:33.017 --> 00:00:37.670
volume we'll just set it
to a default level of 5.

10
00:00:37.670 --> 00:00:42.472
So now we actually want
to modify this data.

11
00:00:42.472 --> 00:00:47.127
So just for example in the loaded
action we have this assigned song data.

12
00:00:47.127 --> 00:00:51.820
So if we go here and we assume that
the event looks like this with loaded,

13
00:00:51.820 --> 00:00:56.358
we see that we have three things that
we could pull from the events that

14
00:00:56.358 --> 00:01:00.996
we could assign to context, the title,
the artist and the duration.

15
00:01:00.996 --> 00:01:08.978
So Our assign function is going to
take both the context and the event.

16
00:01:08.978 --> 00:01:11.670
So over here we could
just read event.title.

17
00:01:13.120 --> 00:01:18.175
And then we could do the same
thing with artists and duration.

18
00:01:18.175 --> 00:01:22.747
And then we also wanna
reset the elapsed and

19
00:01:22.747 --> 00:01:28.849
the like status values,
where this is gonna be unliked.

20
00:01:31.296 --> 00:01:32.216
All right, so

21
00:01:32.216 --> 00:01:37.364
over here we have an example of these
values being sent directly to the service.

22
00:01:37.364 --> 00:01:43.294
And so if we go over here,
we see now that we have,

23
00:01:43.294 --> 00:01:47.794
actually nothing quite loaded yet.

24
00:01:47.794 --> 00:01:52.974
So Let's check in just to
make sure that all right,

25
00:01:52.974 --> 00:01:55.627
yeah, we're on main js.

26
00:01:55.627 --> 00:01:57.810
And we're setting that loaded event.

27
00:01:57.810 --> 00:02:02.350
That loaded event is going to
assign all of that song data.

28
00:02:03.580 --> 00:02:05.220
Let's see.

29
00:02:06.560 --> 00:02:09.523
And so, when you're debugging too

30
00:02:09.523 --> 00:02:14.476
you could also just add console.log
here like I like to do.

31
00:02:14.476 --> 00:02:19.150
[LAUGH] And yeah so,

32
00:02:20.871 --> 00:02:26.410
Yeah it says here and so,
it should be assigning that song data.

33
00:02:26.410 --> 00:02:30.740
So let's just make sure it's
getting the right thing.

34
00:02:30.740 --> 00:02:35.080
You could also log the context of the
events context of events just making sure

35
00:02:35.080 --> 00:02:38.040
we're sending the right event over.

36
00:02:38.040 --> 00:02:39.520
So the events is loaded.

37
00:02:39.520 --> 00:02:43.842
Aha, yeah so
this data is gonna be in the events.data.

38
00:02:43.842 --> 00:02:46.830
And that's just because of
how our event is structured.

39
00:02:46.830 --> 00:02:49.920
And so
I saw that just by console.logging, and

40
00:02:49.920 --> 00:02:54.890
looking at the events and
noticing all this stuff is inside data.

41
00:02:54.890 --> 00:02:56.465
And that's gonna be important for

42
00:02:56.465 --> 00:02:58.862
later too when we start
talking about invocations.

43
00:02:58.862 --> 00:03:02.257
So don't make the same mistake I did yeah.

44
00:03:02.257 --> 00:03:07.104
And so now we have the song title,
the song artists, the duration loading or

45
00:03:07.104 --> 00:03:11.879
the duration there and while this is
actually a combination of duration and

46
00:03:11.879 --> 00:03:12.585
elapsed.

47
00:03:12.585 --> 00:03:17.375
And you could see down here that
we're actually setting like for

48
00:03:17.375 --> 00:03:21.720
example, the scrubber input
value to the elapsed time and

49
00:03:21.720 --> 00:03:26.860
we're also setting the inner HTML
of this elapsed outputs too.

50
00:03:26.860 --> 00:03:31.554
In this case we're doing elapsed minus
duration just because that's a nice

51
00:03:31.554 --> 00:03:34.794
convenient way to combine
to combine both of those.

52
00:03:34.794 --> 00:03:37.436
But yeah, you can see that we
are reading from context and

53
00:03:37.436 --> 00:03:39.100
putting it directly on the screen.

54
00:03:40.630 --> 00:03:45.650
And so you're essentially going to be
doing this for all of the actions.

55
00:03:45.650 --> 00:03:48.534
And so if you got through a few of these,

56
00:03:48.534 --> 00:03:53.878
hopefully at least the first one then
you pretty much have the hang of it.

57
00:03:53.878 --> 00:03:57.069
Because they're all pretty
much the same technique.

58
00:03:57.069 --> 00:04:02.181
And so when we go to main.final and
use that in our application,

59
00:04:02.181 --> 00:04:06.076
now you see that we have
the like status working.

60
00:04:06.076 --> 00:04:10.701
So if you click here that heart should
show or the dislike status, and

61
00:04:10.701 --> 00:04:14.388
that's going to actually
change to the next song too.

62
00:04:14.388 --> 00:04:18.040
And it's going to be loading which
is why those buttons disappeared.

63
00:04:18.040 --> 00:04:22.310
But yeah, so
all of that is working so far.

64
00:04:22.310 --> 00:04:27.800
And yeah, so you should be able to see
data on here, shown from the context.

65
00:04:27.800 --> 00:04:31.639
The question was will there
be time in the course just

66
00:04:31.639 --> 00:04:35.487
talking about updating X
dates context with immer.

67
00:04:35.487 --> 00:04:40.147
So one of the other ways that
you could assign context is by

68
00:04:40.147 --> 00:04:42.877
passing in a function directly.

69
00:04:42.877 --> 00:04:46.432
And this function takes the context and
the events and

70
00:04:46.432 --> 00:04:49.130
it sort of acts like a mini reducer.

71
00:04:49.130 --> 00:04:53.040
And so you could return some sort
of updated context over here.

72
00:04:54.240 --> 00:04:56.285
Now, because you could do this,

73
00:04:56.285 --> 00:05:00.570
you could use immer's produce
in order to do the same thing.

74
00:05:00.570 --> 00:05:03.200
This is an exercise left
to the reader though.

75
00:05:03.200 --> 00:05:06.835
There's also an x state immer package
that I recommend you take a look at.

76
00:05:06.835 --> 00:05:11.400
Which has this built in for you but
it is pretty straightforward to

77
00:05:11.400 --> 00:05:16.298
use the produce function from immer
directly in the assign function.

78
00:05:16.298 --> 00:05:19.136
And you can even do it with
the object syntax over here.

79
00:05:19.136 --> 00:05:26.127
So if I have like title or
just something else I could use immer.

80
00:05:26.127 --> 00:05:31.940
So I could use produce right over here.

81
00:05:33.070 --> 00:05:37.890
So that's just something to keep in mind
if you want to use immer with X date.

