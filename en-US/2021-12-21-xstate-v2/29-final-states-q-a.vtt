WEBVTT

1
00:00:00.000 --> 00:00:04.998
In the example we showed the actor
transition and someone asked after is he

2
00:00:04.998 --> 00:00:10.155
kind of declarative sets timeout then,
yeah that's absolutely correct so

3
00:00:10.155 --> 00:00:14.526
after transition causes an action
that the interpreter takes.

4
00:00:14.526 --> 00:00:19.330
And is going to execute it by
moving it into a set timeout and

5
00:00:19.330 --> 00:00:25.322
after a certain timeout it's going to
send an event back to the machine.

6
00:00:25.322 --> 00:00:28.733
And so that's how that after
transition sugar works.

7
00:00:28.733 --> 00:00:33.090
Can the state machine be restarted
from the on done Handler,

8
00:00:33.090 --> 00:00:34.806
by doing a race events?

9
00:00:34.806 --> 00:00:36.685
So the answer is no.

10
00:00:36.685 --> 00:00:42.398
Once a state machine has reached its
top level final State, then it is done.

11
00:00:42.398 --> 00:00:44.014
It can't be restarted.

12
00:00:44.014 --> 00:00:48.357
The way that you would restart
the machine is just by recreating it.

13
00:00:48.357 --> 00:00:51.081
Each region still has
its own on done events,

14
00:00:51.081 --> 00:00:55.037
which would be called when that
region reaches its final states.

15
00:00:55.037 --> 00:00:55.683
Correct?

16
00:00:55.683 --> 00:01:00.842
So this is referring to
the parallel states over here.

17
00:01:00.842 --> 00:01:04.997
So the way that this actually works.

18
00:01:04.997 --> 00:01:10.226
And so just to make this a little
bit more clear, let's instead of

19
00:01:10.226 --> 00:01:15.947
giving these regions a thought like this,
we are going to give it this.

20
00:01:15.947 --> 00:01:19.658
So you can imagine each of these
regions looking like this and

21
00:01:19.658 --> 00:01:23.458
this is also how it's represented
in the X state visualizer.

22
00:01:23.458 --> 00:01:26.012
Just to to make things
a little bit more clear,

23
00:01:26.012 --> 00:01:29.222
each of these regions can have
its own on done transition,

24
00:01:29.222 --> 00:01:33.697
in a parallel state they typically don't
or at least I haven't seen it that way.

25
00:01:33.697 --> 00:01:36.327
But yes,
they can have its own on transition.

26
00:01:36.327 --> 00:01:38.324
Now this on transition for

27
00:01:38.324 --> 00:01:43.236
this parents elements is actually
relative to these children.

28
00:01:43.236 --> 00:01:47.556
This on done is actually
on the grandparents Ellen.

29
00:01:47.556 --> 00:01:54.124
And so this is actually in the SCXML
algorithm so if I grandparents,

30
00:01:54.124 --> 00:01:59.192
there we go an this is actually
interesting to look at

31
00:01:59.192 --> 00:02:04.629
it says if the grandparents
is a parallel states state.

32
00:02:04.629 --> 00:02:09.453
And the child states of that
grandparents if every one of them so

33
00:02:09.453 --> 00:02:13.640
every one of those compound
states is in a final state,

34
00:02:13.640 --> 00:02:16.293
then we on cue this done.states.

35
00:02:16.293 --> 00:02:20.476
And whatever events in an X
state we provide sugar for

36
00:02:20.476 --> 00:02:25.704
that via the on done transition so
that's sort of a long answer but

37
00:02:25.704 --> 00:02:30.666
yeah it's handled in the grandparents for
parallel states.

38
00:02:30.666 --> 00:02:34.675
And so if you envision it by
like when this is done and

39
00:02:34.675 --> 00:02:39.523
this is done that means that these
two are also done which I'll

40
00:02:39.523 --> 00:02:44.299
signify in green then the grandparents
is going to say okay.

41
00:02:44.299 --> 00:02:49.043
Both of these compound states
are in their final states so I,

42
00:02:49.043 --> 00:02:51.192
I am actually done as well.

43
00:02:51.192 --> 00:02:55.855
Is the loading in the on done
transition needed because we

44
00:02:55.855 --> 00:02:58.500
are transitioning to a child state.

45
00:02:58.500 --> 00:03:06.064
So, let's take a look at that,
loading, first, let's find it.

46
00:03:06.064 --> 00:03:09.846
All right, so on done target loading.

47
00:03:09.846 --> 00:03:15.325
All right, so the reason that this is,
is because first of all we're

48
00:03:15.325 --> 00:03:21.573
defining this transition on the parent
states so this player state over here.

49
00:03:21.573 --> 00:03:26.708
And this target is basically
saying that this parent

50
00:03:26.708 --> 00:03:31.493
state needs to move itself
to the loading state so

51
00:03:31.493 --> 00:03:35.577
if we go back to scale
draw over here we're

52
00:03:35.577 --> 00:03:39.798
basically saying that this player state.

53
00:03:39.798 --> 00:03:44.840
And we can represent it like this,
make sure we have the right line.

54
00:03:44.840 --> 00:03:45.430
Yep.

55
00:03:45.430 --> 00:03:46.646
Okay.

56
00:03:46.646 --> 00:03:49.385
We don't, hold on.

57
00:03:49.385 --> 00:03:50.860
There we go.

58
00:03:50.860 --> 00:03:51.388
Okay.
So,

59
00:03:51.388 --> 00:03:55.541
we can represent it by saying okay
when this player state is done,

60
00:03:55.541 --> 00:03:58.726
it is going to transition
to its own child states.

61
00:03:58.726 --> 00:04:03.475
So this is on done.

62
00:04:03.475 --> 00:04:10.720
In this is because we also
have that we have ready and

63
00:04:10.720 --> 00:04:15.268
we have the finish dates just add

64
00:04:15.268 --> 00:04:20.153
the states we have the finish state

65
00:04:20.153 --> 00:04:25.561
over here in that always transition.

66
00:04:25.561 --> 00:04:30.851
[COUGH] And because this is a final state,
that is what's

67
00:04:30.851 --> 00:04:36.143
gonna cause the on Dunn transition
to be taken up here and

68
00:04:36.143 --> 00:04:40.776
transition itself back
into the loading state.

69
00:04:40.776 --> 00:04:45.807
So that's why you have that dot
notation because this one when you

70
00:04:45.807 --> 00:04:51.767
represent a state key as they target,
you're representing it's sibling.

71
00:04:51.767 --> 00:04:54.827
And so that is not what
the most natural approaches.

72
00:04:54.827 --> 00:04:58.240
So if you are in the loading stage, we
are going to wanna go to a sibling stage,

73
00:04:58.240 --> 00:04:58.987
which is ready.

74
00:04:58.987 --> 00:05:01.197
So that is why there is no dots there.

75
00:05:01.197 --> 00:05:06.218
But if you want to go a child
of the state, then you are going

76
00:05:06.218 --> 00:05:11.356
to use a dot in order to signify
it to go inside of that state.

