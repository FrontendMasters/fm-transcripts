WEBVTT

1
00:00:00.025 --> 00:00:01.279
&gt;&gt; Jen Kramer: So
just sort of a run through here.

2
00:00:01.279 --> 00:00:04.159
We talked about terminology,
we talked about the three ways

3
00:00:04.159 --> 00:00:07.910
to include CSS in your document and
the one that you should always use.

4
00:00:07.910 --> 00:00:12.680
We talked about selectors, we talked
about using HTML tags as selectors,

5
00:00:12.680 --> 00:00:14.760
we talked about classes.

6
00:00:14.760 --> 00:00:19.470
I haven't mentioned IDs yet,
which we can do really quickly.

7
00:00:19.470 --> 00:00:23.924
We talked about descendant selectors,
&gt;&gt; Jen Kramer: And

8
00:00:23.924 --> 00:00:26.530
grouping selectors, that's the other
thing I need to talk about.

9
00:00:26.530 --> 00:00:28.290
We talked about all these properties and
values.

10
00:00:28.290 --> 00:00:33.460
So let me take five minutes and
tell you about IDs and grouping selectors.

11
00:00:35.440 --> 00:00:38.920
So for example, right here in my CSS,

12
00:00:40.240 --> 00:00:44.140
you'll notice that I have an h2
with the color of orange and

13
00:00:44.140 --> 00:00:48.390
I have an h3 with the color of orange,
okay.

14
00:00:48.390 --> 00:00:50.180
So I have the same style over and
over again.

15
00:00:51.390 --> 00:00:55.570
Programmers hate this,
this makes programmers very angry.

16
00:00:55.570 --> 00:00:58.650
They hate it when people repeat
themselves over and over again.

17
00:00:58.650 --> 00:01:04.020
So they'd to see us tighten up our code
a little bit so we aren't so repetitive.

18
00:01:04.020 --> 00:01:05.440
Make sense?

19
00:01:05.440 --> 00:01:09.110
So one way that we can do this
really easily is simply to say, h2,

20
00:01:09.110 --> 00:01:14.040
h3, and we can stack our
selectors on top of each other,

21
00:01:14.040 --> 00:01:19.000
and then we don't even need
that one anymore, okay.

22
00:01:19.000 --> 00:01:22.460
So really easy, you can just
separate your selectors by commas.

23
00:01:23.680 --> 00:01:28.630
And then the styles there
are going to apply to all of

24
00:01:28.630 --> 00:01:33.240
the selectors that you list in
that list separated by commas.

25
00:01:33.240 --> 00:01:33.890
Makes sense?

26
00:01:35.520 --> 00:01:37.730
And they don't all have to be headings.

27
00:01:37.730 --> 00:01:39.680
They don't all have to be HTML tags.

28
00:01:39.680 --> 00:01:41.950
We could say also big bold.

29
00:01:43.180 --> 00:01:46.480
My class big bold,
I'd like that to be in there too.

30
00:01:46.480 --> 00:01:51.450
And by the way, it also like a,
a colon link to be in there too.

31
00:01:52.940 --> 00:01:55.260
Yeah, you can throw in
whatever you want here.

32
00:01:56.610 --> 00:01:57.147
Make sense?

33
00:01:59.915 --> 00:02:02.970
&gt;&gt; Jen Kramer: All right, so that's
the comma separated selectors there,

34
00:02:02.970 --> 00:02:06.509
that's just going ahead and
putting in a whole string in these things.

35
00:02:08.100 --> 00:02:10.530
And then the last thing I
needed to mention were IDs.

36
00:02:11.720 --> 00:02:16.249
So so far we talked about classes in
our document as exceptions to the rule.

37
00:02:16.249 --> 00:02:20.824
Classes are just, you create your class,
it starts with a dot,

38
00:02:20.824 --> 00:02:22.970
you apply it in your HTML.

39
00:02:22.970 --> 00:02:24.460
You can use that class over and

40
00:02:24.460 --> 00:02:27.270
over again on your web page
as many times as you want.

41
00:02:27.270 --> 00:02:28.938
Make sense, right?

42
00:02:28.938 --> 00:02:31.930
There's something else that's
called an ID, all right.

43
00:02:32.960 --> 00:02:36.126
How many times do you think you
can use an ID on your webpage?

44
00:02:38.243 --> 00:02:40.138
&gt;&gt; Jen Kramer: Once, it's an ID.

45
00:02:40.138 --> 00:02:45.400
[LAUGH] Okay, so
IDs can only be used once on your webpage.

46
00:02:45.400 --> 00:02:51.000
And while we can attach styling to IDs,
it's very seldom done anymore.

47
00:02:51.000 --> 00:02:54.910
You'll actually find very few professional
programmers using IDs much in

48
00:02:54.910 --> 00:02:56.270
their CSS styling.

49
00:02:56.270 --> 00:02:58.760
They are very handy for JavaScript.

50
00:02:58.760 --> 00:03:01.620
So you'll find IDs used
a lot in JavaScript,

51
00:03:01.620 --> 00:03:05.480
not as much in CSS, but
you can create an ID.

52
00:03:06.510 --> 00:03:10.310
Same way that you would do with a class,
you need to come up with a name,

53
00:03:10.310 --> 00:03:15.590
only this time it's gonna start with
a character that will date you.

54
00:03:15.590 --> 00:03:17.740
If you're old like me you
call it a pound sign,

55
00:03:17.740 --> 00:03:21.770
if you're a young person you
call it the hashtag, all right.

56
00:03:21.770 --> 00:03:24.155
And then you put in your name, myid.

57
00:03:26.523 --> 00:03:28.873
&gt;&gt; Jen Kramer: And you can put in
whatever styling you want here.

58
00:03:36.674 --> 00:03:39.319
&gt;&gt; Jen Kramer: Okay, and so
then we can go in ahead and

59
00:03:39.319 --> 00:03:42.060
apply that ID wherever we want it to go.

60
00:03:43.280 --> 00:03:49.695
So let's say here for this h2 I'll
go in ahead and apply my ID of myid.

61
00:03:53.290 --> 00:03:55.350
&gt;&gt; Jen Kramer: So
that's what an ID looks like.

