WEBVTT

1
00:00:00.270 --> 00:00:02.619
Two things that are sort
of outside scope for

2
00:00:02.619 --> 00:00:06.250
this course I didn't want to go too long,
but I think are very cool.

3
00:00:07.480 --> 00:00:08.308
Puppeteer for

4
00:00:08.308 --> 00:00:13.660
all those that don't know Google's chrome
can be called from node in a headless way.

5
00:00:13.660 --> 00:00:18.530
So folks that do like, what's it called
end to end tests on your websites.

6
00:00:18.530 --> 00:00:23.290
So, maybe you'll have one actually opens
a tab logs in does stuff like that?

7
00:00:23.290 --> 00:00:24.880
Puppeteer is a great tool for that.

8
00:00:24.880 --> 00:00:27.280
There's also some other tools like
WebDriver, and things like that.

9
00:00:27.280 --> 00:00:31.802
But when you think about the performance
API that we covered earlier, you can do

10
00:00:31.802 --> 00:00:36.393
some really cool things with puppeteer
WebDriver, where you could have it log in

11
00:00:36.393 --> 00:00:41.020
and record some metrics and save those
metrics or I like to do like CI workflows.

12
00:00:41.020 --> 00:00:45.678
I always have this like philosophy that If
you can't lint it, test and make a CI rule

13
00:00:45.678 --> 00:00:49.810
for it, you shouldn't bother somebody
on their code review about it.

14
00:00:49.810 --> 00:00:51.910
You know,
it's like let the computer do that.

15
00:00:51.910 --> 00:00:53.600
Don't you change?

16
00:00:53.600 --> 00:00:58.230
So, one thing that I like to do is I have
a few I called my performance budget.

17
00:00:58.230 --> 00:01:01.590
I think Alex Russell from Chrome,
maybe coined that term.

18
00:01:01.590 --> 00:01:02.940
So, I have my performance budget.

19
00:01:02.940 --> 00:01:06.430
And we use puppeteer,
puppeteer logs of performance API.

20
00:01:06.430 --> 00:01:09.520
If they're greater than certain numbers,
it flags the PR.

21
00:01:09.520 --> 00:01:13.040
So when you go to put a PR up,
things are a little bit too slow.

22
00:01:13.040 --> 00:01:14.950
And then it's not a person yelling at you.

23
00:01:14.950 --> 00:01:16.970
It's just a simple rule there.

24
00:01:16.970 --> 00:01:18.705
So, there's a lot that you can do there,

25
00:01:18.705 --> 00:01:21.430
combining the performance
API with Puppeteer.

26
00:01:21.430 --> 00:01:25.690
Similarly with Lighthouse, they have a CI
that you can call from node as well.

27
00:01:25.690 --> 00:01:28.604
So, you can do a very similar
thing where you could say,

28
00:01:28.604 --> 00:01:32.510
on every PR spin up the website, hit
it with Lighthouse, and if it gets less

29
00:01:32.510 --> 00:01:36.810
than 100 flag PR, you could do something
like that, which is very cool.

30
00:01:36.810 --> 00:01:41.093
I think that would be a little bit more
going into like Jenkins or CI jobs and

31
00:01:41.093 --> 00:01:46.320
that's a little outside of scope, but it's
just something cool to think about.cool.

32
00:01:46.320 --> 00:01:49.876
So, basically the last thing that I just
wanted to talk about kind of in Lieu of

33
00:01:49.876 --> 00:01:51.201
Puppeteer and lighthouse.

34
00:01:51.201 --> 00:01:53.970
CI are just some other cool like
parting notes because we've

35
00:01:53.970 --> 00:01:56.400
kind of gotten through
all the heavy stuff.

36
00:01:56.400 --> 00:02:00.910
One thing that's really cool our Chrome
Dev Tools experiments, so if we right

37
00:02:00.910 --> 00:02:05.730
click and we go into inspect and
then we go to the settings cog up here.

38
00:02:05.730 --> 00:02:08.786
You'll see a lot of different stuff which
is cool that you can kind of control

39
00:02:08.786 --> 00:02:09.660
the display.

40
00:02:09.660 --> 00:02:11.703
You can do light mode, dark mode,

41
00:02:11.703 --> 00:02:15.290
you can control how the panels
are defaulted laid out.

42
00:02:15.290 --> 00:02:19.115
Remember in the sources debugging,
I said you could right click and

43
00:02:19.115 --> 00:02:22.280
you could black box a script
if you didn't want it seen.

44
00:02:22.280 --> 00:02:26.506
If you want to remove one that you've
black box, you can come here and do so,

45
00:02:26.506 --> 00:02:30.310
the devices over here is where you
can emulate different devices.

46
00:02:30.310 --> 00:02:33.505
So you got all sorts of cool
defaults that you can set,

47
00:02:33.505 --> 00:02:37.065
but one that I wanted to bring
attention to is experiments.

48
00:02:37.065 --> 00:02:42.010
So, before things launch, they always
come out here in this experiments tab.

49
00:02:42.010 --> 00:02:46.763
And so you can take a look through
there's always really neat stuff in here,

50
00:02:46.763 --> 00:02:50.771
It's like use as is enable at your
own risk [LAUGH] all this stuff so

51
00:02:50.771 --> 00:02:52.680
they're not documented.

52
00:02:52.680 --> 00:02:55.830
A lot of times you have to poke
around to see where they even are,

53
00:02:55.830 --> 00:02:58.340
you'll enable somebody to
get on the memory tab.

54
00:02:58.340 --> 00:02:59.812
No is on the performance.

55
00:02:59.812 --> 00:03:00.780
I see it now.

56
00:03:00.780 --> 00:03:03.010
But there's always a really cool stuff.

57
00:03:03.010 --> 00:03:06.810
Some of this stuff doesn't
make it in to Dev tools.

58
00:03:06.810 --> 00:03:11.734
But this is really neat stuff that you
can kinda play around with and see.

59
00:03:11.734 --> 00:03:15.663
There's another little one that
I wanted to show which is,

60
00:03:15.663 --> 00:03:20.692
if we go to the dot.da and show the
console drawer, and then we go to its dot,

61
00:03:20.692 --> 00:03:25.700
dot, dot, there's a bunch of little
stuff that you can see here.

62
00:03:25.700 --> 00:03:28.688
And so
one thing that I always like to do is,

63
00:03:28.688 --> 00:03:32.350
you can like click on like rendering for
an example.

64
00:03:34.190 --> 00:03:38.402
And there's all this endless
cool things that you can do, but

65
00:03:38.402 --> 00:03:41.490
you can do something like paint flashing.

66
00:03:41.490 --> 00:03:43.370
That's one of my favorite things to do.

67
00:03:43.370 --> 00:03:46.562
Then anytime Chrome is repainting
like as i over things,

68
00:03:46.562 --> 00:03:49.930
it'll show you in this cool green outline.

69
00:03:49.930 --> 00:03:51.320
And so this could be really cool.

70
00:03:51.320 --> 00:03:54.350
You have a big react app and
it's going kinda slow.

71
00:03:54.350 --> 00:03:57.579
Sometimes it might be repainting the whole
site just when you're trying to change

72
00:03:57.579 --> 00:03:58.480
a really small thing.

73
00:03:58.480 --> 00:04:01.270
And this would be a really
great way to figure that out.

74
00:04:01.270 --> 00:04:03.060
So you just go into it.

75
00:04:03.060 --> 00:04:06.593
Dev Tools, open the console drawer and
then data dot here and

76
00:04:06.593 --> 00:04:09.370
you can see all sorts of
just really neat stuff.

77
00:04:10.710 --> 00:04:13.220
Yeah, there's all sorts of
amazing things that you can add.

78
00:04:13.220 --> 00:04:17.320
But each one of them each one of
these just has a list of checkbox.

79
00:04:17.320 --> 00:04:18.950
Here's another one that I really like.

80
00:04:18.950 --> 00:04:20.750
This frame rendering stats.

81
00:04:20.750 --> 00:04:24.476
It just shows the frames per second as I
scroll around and the performance of it,

82
00:04:24.476 --> 00:04:27.780
things like that you can see
how much GPU memory it's using.

83
00:04:27.780 --> 00:04:31.880
So, I can just like very high level,
get an idea of cool stuff like that.

84
00:04:31.880 --> 00:04:34.800
So, those are probably the two I
use most often paint flashing and

85
00:04:34.800 --> 00:04:38.147
the frame rendering stats, but just be
aware that there's a whole bunch of

86
00:04:38.147 --> 00:04:40.470
cool little extra things that you can add.

87
00:04:40.470 --> 00:04:43.310
You know, to the bottom drawer as well.

88
00:04:43.310 --> 00:04:48.286
The other thing we got a lot of good
questions earlier in the workshop about,

89
00:04:48.286 --> 00:04:50.940
does this work react with Angular?

90
00:04:50.940 --> 00:04:52.490
So the answer is always going to be yes.

91
00:04:52.490 --> 00:04:57.630
Like for example, if you do an HTML break
point, it will show you what JavaScript

92
00:04:57.630 --> 00:05:03.170
caused, but we talked about, it's going to
be very deep inside the react reconcile.

93
00:05:03.170 --> 00:05:06.985
Whatever.
So, I really recommend checking out these,

94
00:05:06.985 --> 00:05:09.380
the separate Dev Tools.

95
00:05:09.380 --> 00:05:13.650
So react has one view has one,
angular has one.

96
00:05:13.650 --> 00:05:16.300
So, these are Chrome extensions
that you can use and there.

97
00:05:16.300 --> 00:05:19.801
They're so good like I use this
just every day at work so for

98
00:05:19.801 --> 00:05:23.228
react I this is not a react
focused class by any means, but

99
00:05:23.228 --> 00:05:26.525
you can instead of you have
your regular elements tab.

100
00:05:26.525 --> 00:05:28.605
But then you get a components tab and

101
00:05:28.605 --> 00:05:33.457
in that it shows the actual whatever you
named your react components over here, and

102
00:05:33.457 --> 00:05:38.260
shows what props they get what hooks they
have, like all this like amazing stuff.

103
00:05:38.260 --> 00:05:42.376
So, while the answer is always yes,
you can use the elements and the elements,

104
00:05:42.376 --> 00:05:44.840
break point, even if it's a react app.

105
00:05:44.840 --> 00:05:49.060
The longer answer is,
but look how cool it is.

106
00:05:49.060 --> 00:05:54.010
If you use the specific framework
Dev Tools you can get so much information.

107
00:05:54.010 --> 00:05:58.980
And then we looked at the Performance Tab,
it has its own what they call profile.

108
00:05:58.980 --> 00:06:01.200
It's a specific react Performance Tab.

109
00:06:01.200 --> 00:06:04.034
It works the same way a recording and
you stop it, but

110
00:06:04.034 --> 00:06:08.482
it'll specifically show you this is a
heavy render and it's caused by this hook,

111
00:06:08.482 --> 00:06:10.490
it speaks the language a lot better.

112
00:06:10.490 --> 00:06:15.322
So, if you're working on a big angular
app or react app whatever it is check out

113
00:06:15.322 --> 00:06:20.630
their Dev Tools, because they're I'm this
just seems to me so much time every day.

114
00:06:20.630 --> 00:06:23.760
I worked on a project ones back
in the day that was too big.

115
00:06:23.760 --> 00:06:25.995
For the react Dev Tools they'd crash and

116
00:06:25.995 --> 00:06:28.830
it was such a hit to my
productivity where I was man.

117
00:06:28.830 --> 00:06:31.130
I would open it every day and
they'd crash every day.

118
00:06:31.130 --> 00:06:33.500
So, they've fixed that since then.

119
00:06:33.500 --> 00:06:38.380
But these are a really great
way to kinda work around that.

120
00:06:38.380 --> 00:06:43.240
Awesome, and my very last lesson is
just kinda where to go from here.

121
00:06:43.240 --> 00:06:44.621
Another huge shout out,

122
00:06:44.621 --> 00:06:47.920
I think I'll be able to find
it on when it's scheduled for.

123
00:06:47.920 --> 00:06:50.882
Because unfortunately, I forgot, but

124
00:06:50.882 --> 00:06:55.420
there's an advanced web tools
course coming on May 17th.

125
00:06:55.420 --> 00:06:58.815
From humor, he's been like for
years we've been I don't know him, but

126
00:06:58.815 --> 00:07:02.060
I've known him as the other Dev Tools
content creator in this space.

127
00:07:02.060 --> 00:07:03.640
There's the two of us.

128
00:07:03.640 --> 00:07:06.560
So, I'm really pumped that
he's gonna be coming on.

129
00:07:06.560 --> 00:07:12.280
He's really in depth performance audits
and all these like real world cases.

130
00:07:12.280 --> 00:07:13.920
He's just such an expert.

131
00:07:13.920 --> 00:07:16.440
So that advanced class is
going to be super cool.

132
00:07:17.660 --> 00:07:20.450
The official Dev Tools Doc's are always
a good place to look for things.

133
00:07:20.450 --> 00:07:22.340
They're all linked here in the project.

134
00:07:22.340 --> 00:07:24.190
And then I've also linked my Twitter.

135
00:07:24.190 --> 00:07:25.270
I love talking about stuff.

136
00:07:25.270 --> 00:07:28.030
If any of you have reached out
to me in the past on stuff,

137
00:07:28.030 --> 00:07:31.600
I'm always geek to DM about cool
Dev Tools stuff or whatever.

138
00:07:31.600 --> 00:07:33.990
The Chrome Dev Tools have
a Twitter link as well.

139
00:07:33.990 --> 00:07:37.860
And then my very last shout out is
there's this new initiative web dot Dev.

140
00:07:37.860 --> 00:07:39.560
I'm not sure if people have heard of it.

141
00:07:39.560 --> 00:07:42.290
It's like this big web community.

142
00:07:42.290 --> 00:07:44.334
I think Google kind of owns it but

143
00:07:44.334 --> 00:07:48.170
a lot of open source contributions
from a lot of people.

144
00:07:48.170 --> 00:07:49.320
It's so cool.

145
00:07:49.320 --> 00:07:55.630
They have all these topics, on such
a playground like all this cool stuff.

146
00:07:55.630 --> 00:07:58.306
Web vitals progressive
web app is all free,

147
00:07:58.306 --> 00:08:03.153
really high level content they worked
with, the framework teams when react and

148
00:08:03.153 --> 00:08:08.380
angular and they work with a web host
teams like netlify universe, and they.

149
00:08:08.380 --> 00:08:11.293
They just worked with like everybody
to get these extremely high quality

150
00:08:11.293 --> 00:08:12.160
articles out there.

151
00:08:12.160 --> 00:08:15.993
So, if you're looking to learn
something new, I just love this,

152
00:08:15.993 --> 00:08:18.590
I read new articles on it all the time.

153
00:08:18.590 --> 00:08:20.640
Otherwise, thank you so much.

154
00:08:22.110 --> 00:08:24.475
I love doing these workshops and
I love meeting people and hanging out and

155
00:08:24.475 --> 00:08:25.340
talking about Dev Tools.

156
00:08:25.340 --> 00:08:28.120
So thank you very much for
hanging out with me today.

