WEBVTT

1
00:00:00.370 --> 00:00:05.347
Hello, I mean this course is made for
anybody but who I think I have content

2
00:00:05.347 --> 00:00:10.650
in this course for types of people that
I think will get the most out of it.

3
00:00:10.650 --> 00:00:13.618
So I think anybody with little to no
experience using Chrome DevTools,

4
00:00:13.618 --> 00:00:17.130
I hope to be able to walk you through each
panel, what they do what they're good for,

5
00:00:17.130 --> 00:00:17.829
all that stuff.

6
00:00:18.980 --> 00:00:23.713
Probably when I pull people the most
common group that I get are people who

7
00:00:23.713 --> 00:00:27.140
have used the Network and
the Console panel before.

8
00:00:27.140 --> 00:00:28.887
They console log stuff,
they've checked it or

9
00:00:28.887 --> 00:00:31.604
they've looked at the network overview and
they have seen what comes in.

10
00:00:31.604 --> 00:00:34.160
But they've really never clicked
on any of the other panels before.

11
00:00:34.160 --> 00:00:38.542
Maybe they clicked on it and it seemed
overwhelming so they clicked away from it.

12
00:00:38.542 --> 00:00:41.654
So I'm hoping this will be a really
nice introduction to the rest of those

13
00:00:41.654 --> 00:00:44.960
panels as well as learning a lot
more about network and console.

14
00:00:44.960 --> 00:00:48.066
And the third group is people that
are comfortable with the panels, but

15
00:00:48.066 --> 00:00:50.580
working to learn some tips and tricks.

16
00:00:50.580 --> 00:00:54.785
One thing I always love, I love
keyboard shortcuts, I love experiments,

17
00:00:54.785 --> 00:00:58.809
I love little known things, little
things that I pick up along the way.

18
00:00:58.809 --> 00:01:02.708
So all my workshops that I do,
I try to fill with as many little tips and

19
00:01:02.708 --> 00:01:04.560
tricks sections as possible.

20
00:01:04.560 --> 00:01:07.150
Cuz I find them just really fun and
they kinda help me speed up.

21
00:01:08.850 --> 00:01:13.660
All right, so now we'll move into the next
lesson, which is what can the DevTools do?

22
00:01:13.660 --> 00:01:18.280
And so this lesson really we're
just gonna go through each one.

23
00:01:18.280 --> 00:01:21.574
And we're gonna start playing around
with them on a very high level, but

24
00:01:21.574 --> 00:01:24.800
just seeing some actual stuff
that we can do with the DevTools.

25
00:01:24.800 --> 00:01:27.142
And then we'll get down
into the course format for

26
00:01:27.142 --> 00:01:28.830
the rest of the course afterwards.

27
00:01:30.020 --> 00:01:33.570
So I kinda have two things I wanna
point out before we go into it.

28
00:01:33.570 --> 00:01:36.927
One is a little bit about not
feeling overwhelmed with stuff.

29
00:01:36.927 --> 00:01:40.395
I find a lot of times when I sit
through workshops, there's so

30
00:01:40.395 --> 00:01:42.610
much incredible information.

31
00:01:42.610 --> 00:01:45.826
And sometimes I start getting a little bit
stressed that I'm not gonna be able to

32
00:01:45.826 --> 00:01:46.884
retain all of it, right?

33
00:01:46.884 --> 00:01:49.820
I'm like, I gotta remember that,
and that, and that, and that.

34
00:01:49.820 --> 00:01:53.254
So if I were to give you advice,
I would say that I think it's

35
00:01:53.254 --> 00:01:57.440
more important to know what they can do,
then how they can do it.

36
00:01:57.440 --> 00:02:00.752
Cuz if you know what they can do, you can
come back to this final masters course, or

37
00:02:00.752 --> 00:02:03.392
you can look at the Docs or
you can even just look at the DevTools and

38
00:02:03.392 --> 00:02:04.790
try to figure it out for yourself.

39
00:02:04.790 --> 00:02:06.924
So if I were to ask for one big takeaway,

40
00:02:06.924 --> 00:02:11.650
it would be only just try to remember I've
seen DevTools can do this really cool CPU

41
00:02:11.650 --> 00:02:14.850
thing now I know exactly how
to read a flame graph, right?

42
00:02:14.850 --> 00:02:16.450
Those are kind of differences.

43
00:02:16.450 --> 00:02:21.102
And the other one, which is something we
were talking about a little bit earlier,

44
00:02:21.102 --> 00:02:25.486
is that the Chrome extensions like plugins
that you add to your browser can and

45
00:02:25.486 --> 00:02:28.454
often do mess with DevTools
data because they can and

46
00:02:28.454 --> 00:02:31.990
often do mess with how you
actually render websites.

47
00:02:31.990 --> 00:02:34.750
And this can lead to really
inaccurate reporting.

48
00:02:34.750 --> 00:02:37.850
And this has bitten me a lot
of times at work before.

49
00:02:37.850 --> 00:02:40.994
So my suggestion is,
if you're doing something important,

50
00:02:40.994 --> 00:02:45.287
like you're auditing a customer's website,
or you're trying to find if there's

51
00:02:45.287 --> 00:02:48.007
a memory leak on your page,
I would either go ahead and

52
00:02:48.007 --> 00:02:52.670
disable all of your extensions, which you
can do up at this window extensions tab.

53
00:02:52.670 --> 00:02:55.960
Or just open a new incognito window for
the site that you're viewing,

54
00:02:55.960 --> 00:02:58.990
incognito windows by default
have the extensions turned off.

55
00:02:58.990 --> 00:03:03.474
So I think that's always a good tip
because there's a lot of stuff going on

56
00:03:03.474 --> 00:03:08.340
with these Chrome plugins that you might
see new scripts being added to the DOM.

57
00:03:08.340 --> 00:03:11.983
You might see network requests being
rejected or new network requests,

58
00:03:11.983 --> 00:03:16.030
all sorts of stuff that can be really
tricky to figure out why it's happening.

59
00:03:16.030 --> 00:03:19.657
And it's often just a Chrome
extension that you have.

60
00:03:19.657 --> 00:03:20.230
Awesome.

61
00:03:20.230 --> 00:03:23.810
All right, so let's begin with
walking through the panels.

62
00:03:23.810 --> 00:03:26.470
So I'm gonna go ahead and
I'm gonna open the DevTools.

63
00:03:26.470 --> 00:03:30.180
And we're gonna kinda go down this little
list of high level things, and we'll just

64
00:03:30.180 --> 00:03:34.200
play with a little example of them so
we can kind of see them visually happen.

65
00:03:34.200 --> 00:03:36.580
So the first panel is the elements panel.

66
00:03:36.580 --> 00:03:40.728
And I guess actually, before I go into
each panel, it should be worth noting that

67
00:03:40.728 --> 00:03:45.700
these tabs can be dragged and dropped, and
they persist in whatever order they're in.

68
00:03:45.700 --> 00:03:47.695
So if you see yours in
a different order than mine,

69
00:03:47.695 --> 00:03:50.990
it's probably just because I've dragged
mine around, nothing to worry about.

70
00:03:50.990 --> 00:03:53.927
You can drag these around
until whatever order you want.

71
00:03:53.927 --> 00:03:57.817
But on the website is the order that
I'm gonna be going through them in.

72
00:03:57.817 --> 00:03:59.690
Cool, so the Elements panel.

73
00:03:59.690 --> 00:04:02.671
So again, you're able to play
with all the HTML and CSS.

74
00:04:02.671 --> 00:04:06.861
I find it's really interesting when in
doubt, try double clicking something cuz

75
00:04:06.861 --> 00:04:09.910
it's really interesting what
you can interact with here.

76
00:04:11.010 --> 00:04:14.410
So for example, some things might be
more obvious like we can go ahead and

77
00:04:14.410 --> 00:04:17.330
take the body element here,
and I'll click on it.

78
00:04:17.330 --> 00:04:21.070
And we can kind of scroll through
all the CSS that applies to it.

79
00:04:21.070 --> 00:04:24.450
And so, we could do things like you
can see the background color is gray.

80
00:04:24.450 --> 00:04:28.899
So I could change the background color to
red and in real time the background of

81
00:04:28.899 --> 00:04:32.810
the website will update or
purple, something like that.

82
00:04:32.810 --> 00:04:35.550
You can also change
the actual property though.

83
00:04:35.550 --> 00:04:41.324
So, instead of background color,
you could change it to color entirely.

84
00:04:41.324 --> 00:04:46.120
And now you'll see this is getting
crossed out because there's two colors.

85
00:04:46.120 --> 00:04:48.320
But I would say always try
double clicking on stuff.

86
00:04:48.320 --> 00:04:50.780
You can even double click
on the selector itself.

87
00:04:50.780 --> 00:04:53.069
So if we set this back
to background color, and

88
00:04:53.069 --> 00:04:56.121
I'll go through this auto select here,
and that's purple,

89
00:04:56.121 --> 00:04:59.130
we could change this from body to div,
something like that.

90
00:04:59.130 --> 00:05:02.690
And now you see the body has gone
back to being its default color but

91
00:05:02.690 --> 00:05:05.160
every div on my site is now purple.

92
00:05:05.160 --> 00:05:08.481
And so there's a lot of different
stuff that you can double click on.

93
00:05:08.481 --> 00:05:12.355
Another one that surprises me the first
time was that if you take an element over

94
00:05:12.355 --> 00:05:15.463
here, like let's say this h1,
let me scroll up a little bit so

95
00:05:15.463 --> 00:05:16.710
we can view it together.

96
00:05:16.710 --> 00:05:19.850
This is this title element
that says lesson 2 here.

97
00:05:19.850 --> 00:05:22.420
You can even double click
on the element itself.

98
00:05:22.420 --> 00:05:25.364
And so
you can change it from an h1 into an h2.

99
00:05:25.364 --> 00:05:28.479
So there's two cool things here,
one that you can edit the HTML.

100
00:05:28.479 --> 00:05:31.684
But two, if you notice over here,
I know it's quite subtle, but

101
00:05:31.684 --> 00:05:33.141
If you change an opening tag,

102
00:05:33.141 --> 00:05:36.550
Chrome DevTools will automatically
change the closing tag for you.

103
00:05:36.550 --> 00:05:39.507
So you can just change the opening to
an h2 and hit Enter and there we go,

104
00:05:39.507 --> 00:05:40.860
it gets smaller.

105
00:05:40.860 --> 00:05:44.630
So I'll change this back to an h1, and
we'll scroll back down to the lesson.

106
00:05:45.830 --> 00:05:48.640
You can also change classes and IDs.

107
00:05:48.640 --> 00:05:51.561
Again, the thing that might be
more obvious you can see here

108
00:05:51.561 --> 00:05:53.265
we have an article with ID of main.

109
00:05:53.265 --> 00:05:57.147
The thing that might be more obvious is
that we can change the ID from main to app

110
00:05:57.147 --> 00:05:58.420
or something like that.

111
00:05:58.420 --> 00:06:02.960
And you can see that explodes a lot of the
CSS cuz I was using main as a selector.

112
00:06:02.960 --> 00:06:04.860
So I'm gonna go ahead and
set it back to main.

113
00:06:04.860 --> 00:06:09.068
But the thing that might be less obvious
is that you can actually double click on

114
00:06:09.068 --> 00:06:12.956
the ID portion itself and change it to
maybe a class name of main instead,

115
00:06:12.956 --> 00:06:15.917
which still breaks because
my CSS is looking for an ID.

116
00:06:15.917 --> 00:06:20.530
So pretty much everything in here is
double clickable, which is really cool.

117
00:06:20.530 --> 00:06:26.193
You can also do things like,
we saw that you can update these styles.

118
00:06:26.193 --> 00:06:29.835
But you can also do a lot
of cool things for example,

119
00:06:29.835 --> 00:06:34.850
you can add a brand new style so
we can click on this plus sign over here.

120
00:06:34.850 --> 00:06:36.590
This is on the right sidebar.

121
00:06:36.590 --> 00:06:38.220
And we can create a new style rule.

122
00:06:38.220 --> 00:06:43.060
And so, if we had one, we wanted to
be more specific than, ID of main,

123
00:06:43.060 --> 00:06:46.280
we could do the default
one is article of main.

124
00:06:46.280 --> 00:06:50.050
And so you can see whichever thing you've
clicked on when you click new style,

125
00:06:50.050 --> 00:06:52.750
it kinda tries to pull a very
specific selector for you.

126
00:06:52.750 --> 00:06:56.130
But you can put anything you want in here,
like class of foo or something like that.

127
00:06:58.070 --> 00:07:00.380
These are also drag and droppable.

128
00:07:00.380 --> 00:07:04.320
So if you grab on to one of these like
the h3, you can move it above the h1.

129
00:07:04.320 --> 00:07:07.950
And that will see back up here
my course is now out of order.

130
00:07:07.950 --> 00:07:10.570
The h1 down here and the h3 over here.

131
00:07:10.570 --> 00:07:13.783
Yeah, so I finally have done like
a really good job of making this page,

132
00:07:13.783 --> 00:07:17.159
sort of like Apple does with their
products where it's pretty intuitive or

133
00:07:17.159 --> 00:07:18.630
like the thing you'd wanna do.

134
00:07:18.630 --> 00:07:20.535
I would just give it a try.

135
00:07:20.535 --> 00:07:24.005
[LAUGH] Always give it a try if you wanna
make a new selector, drag stuff around,

136
00:07:24.005 --> 00:07:25.280
move it anything like that.

137
00:07:26.800 --> 00:07:29.521
Cool, and we'll get into a bunch
more stuff cuz the elements tab can

138
00:07:29.521 --> 00:07:33.170
do amazing things later, but
that's kind of the high level view.

139
00:07:33.170 --> 00:07:34.073
The Network tab.

140
00:07:34.073 --> 00:07:37.655
So this one, the basic idea is
if you go to the network tab and

141
00:07:37.655 --> 00:07:41.957
then you refresh your page when you're
on it, the probably most common

142
00:07:41.957 --> 00:07:45.896
thing that we do and let me hide
a bunch of this other stuff for now,

143
00:07:45.896 --> 00:07:49.230
is we look at the stack
of all requests sent.

144
00:07:49.230 --> 00:07:50.300
And so this is pretty cool.

145
00:07:50.300 --> 00:07:53.928
It's basically if you think about
how a webpage works, right?

146
00:07:53.928 --> 00:07:58.617
You hit the server and the server
always gives you an index.html, right?

147
00:07:58.617 --> 00:08:00.530
Or whatever, a file name.html.

148
00:08:00.530 --> 00:08:01.660
It's always the beginning, right?

149
00:08:01.660 --> 00:08:04.250
Because HTML is what we need for
the very first request.

150
00:08:04.250 --> 00:08:07.382
So always see the top one
here being an HTML or

151
00:08:07.382 --> 00:08:10.790
they call it document type over here.

152
00:08:10.790 --> 00:08:13.936
And if you click on it,
you can actually see what the response is.

153
00:08:13.936 --> 00:08:17.088
I do have inline styles which might
be a little bit confusing, but

154
00:08:17.088 --> 00:08:18.980
this is an HTML file.

155
00:08:18.980 --> 00:08:23.142
And then what it will do is it'll
walk this file and it's looking for

156
00:08:23.142 --> 00:08:26.540
any references to external resources,
right?

157
00:08:26.540 --> 00:08:31.960
So when we do HTML, we often put links
to CSS or script tags to JavaScript.

158
00:08:31.960 --> 00:08:33.910
Those are two very common things we do.

159
00:08:33.910 --> 00:08:35.433
We also put image tags, right?

160
00:08:35.433 --> 00:08:39.521
And so as it's walking this, it'll say
every time it's like, you need a CSS file,

161
00:08:39.521 --> 00:08:41.860
it'll go out and it'll fetch that.

162
00:08:41.860 --> 00:08:44.885
And so you can kinda see the network
sort of works that way where it fetches

163
00:08:44.885 --> 00:08:46.422
the document, it reads through it,

164
00:08:46.422 --> 00:08:48.690
eventually it sees that
I'm linking to a script.

165
00:08:48.690 --> 00:08:50.310
So it goes out and fetches that script.

166
00:08:50.310 --> 00:08:54.850
This is called prismjs I use it for
my code snippet styling.

167
00:08:54.850 --> 00:08:57.503
And then it'll keep reading and
keep reading and

168
00:08:57.503 --> 00:08:59.580
then eventually it gets to a font tag.

169
00:08:59.580 --> 00:09:03.019
I use a custom font in here, so
it goes out and fetches that.

170
00:09:03.019 --> 00:09:06.890
So yeah, this is basically in order
every request that was sent, and

171
00:09:06.890 --> 00:09:11.362
a bunch of cool information about it,
like the http status, who initiated it,

172
00:09:11.362 --> 00:09:15.480
what type it is, how big it is,
how long it took all sorts of great stuff.

173
00:09:15.480 --> 00:09:18.593
And we'll get into some
really cool ways that you can

174
00:09:18.593 --> 00:09:22.912
actually diagnose a lot of really
cool things including server issues,

175
00:09:22.912 --> 00:09:27.820
all from the network panel the DevTools
when we cover that in the network section.

176
00:09:29.190 --> 00:09:31.699
So yeah, you can measure all
sorts of page load stuff, so

177
00:09:31.699 --> 00:09:33.750
you can look at how long each file took.

178
00:09:33.750 --> 00:09:37.070
But you can also look down here
at these really important events.

179
00:09:37.070 --> 00:09:41.515
So when we use a tool like Google's
Lighthouse, which we'll cover later or

180
00:09:41.515 --> 00:09:45.483
web page test, any sort of tool to
measure the speed of our website.

181
00:09:45.483 --> 00:09:48.052
The two events that
it's always looking for

182
00:09:48.052 --> 00:09:51.744
like when did DOMContent loaded file and
when did unload file.

183
00:09:51.744 --> 00:09:55.421
And so those are both built right
into the DevTools here where

184
00:09:55.421 --> 00:09:57.159
you can see when they filed.

185
00:09:57.159 --> 00:09:59.955
You can also watch your
site load in real time.

186
00:09:59.955 --> 00:10:03.625
This is like a lesser known
thing that they offer.

187
00:10:03.625 --> 00:10:08.611
So if you click this setting cog up here,
not the top one for all Devtools, but

188
00:10:08.611 --> 00:10:13.313
this one over here for network settings
you can do capture screenshots.

189
00:10:13.313 --> 00:10:17.983
And then if you refresh again with capture
screenshots, you can actually see when we

190
00:10:17.983 --> 00:10:22.454
audit sites later we will actually be able
to watch the HTML come in unstyled, and

191
00:10:22.454 --> 00:10:26.100
then an image load and then a font
come in and restyle everything.

192
00:10:26.100 --> 00:10:29.850
So we'll actually be able to see kind
of all that stuff happen in real time.

193
00:10:29.850 --> 00:10:32.720
So these are the screenshots
of the site loading.

194
00:10:32.720 --> 00:10:36.570
And then we're able to inspect request and
response data.

195
00:10:36.570 --> 00:10:41.348
So when you're working with JavaScript,
and especially when you're working with

196
00:10:41.348 --> 00:10:45.113
API's, so if you're at work or
if you're doing a side project and

197
00:10:45.113 --> 00:10:49.691
working with some API especially when
it's not working, they'll often ask for

198
00:10:49.691 --> 00:10:53.690
data about the headers sent
either by the API or to the API.

199
00:10:53.690 --> 00:10:56.213
And so if we take like this request for
prismjs, and

200
00:10:56.213 --> 00:10:59.922
instead of looking at the response,
I'm gonna make this a little taller.

201
00:10:59.922 --> 00:11:03.582
We go over here and we look at the
headers, we can get a lot of information

202
00:11:03.582 --> 00:11:07.770
from it, so you can see what response
headers were sent down from the server.

203
00:11:07.770 --> 00:11:10.330
And you can see what headers
you sent in your fact requests.

204
00:11:10.330 --> 00:11:13.111
These are gonna be the default ones,
cuz it's just a script source.

205
00:11:13.111 --> 00:11:17.886
But this comes in really handy where
oftentimes at a job your service

206
00:11:17.886 --> 00:11:22.750
will have some kind of request ID,
some way of identifying it.

207
00:11:22.750 --> 00:11:26.169
And the service team will often ask you
for that ID, because they wanna be able to

208
00:11:26.169 --> 00:11:29.490
look it up in their logs and
see what went wrong, something like that.

209
00:11:29.490 --> 00:11:33.511
So that's a really common
example I face where I say, hey,

210
00:11:33.511 --> 00:11:35.692
this user status API is broken.

211
00:11:35.692 --> 00:11:38.633
And they're like, well, can you give me
an example request and I give it to them.

212
00:11:38.633 --> 00:11:40.830
And they're like, okay, well,
can you give me your request ID.

213
00:11:40.830 --> 00:11:43.462
So then I come into the DevTools,
I refresh and I look for

214
00:11:43.462 --> 00:11:45.310
the request ID header.

215
00:11:45.310 --> 00:11:46.100
So that happens a lot.

