WEBVTT

1
00:00:00.230 --> 00:00:02.207
So this I have broken out
into three sub chapters,

2
00:00:02.207 --> 00:00:05.340
because they're kind of three different
ways of looking at performance.

3
00:00:05.340 --> 00:00:07.560
The first one that we'll
cover is network performance.

4
00:00:07.560 --> 00:00:11.770
That's going to be like things coming
over the network to from your servers to

5
00:00:11.770 --> 00:00:12.497
your users.

6
00:00:12.497 --> 00:00:15.240
The second section is going
to be CPU performance.

7
00:00:15.240 --> 00:00:17.320
So that's going to be
like the page has loaded.

8
00:00:17.320 --> 00:00:21.050
And now the users doing stuff and
how slow is that?

9
00:00:21.050 --> 00:00:23.560
And the third one is gonna be memory.

10
00:00:23.560 --> 00:00:26.260
And that one is also gonna
be kinda on page load.

11
00:00:26.260 --> 00:00:30.075
But it's gonna be how much memory your app
is allocating, do you have a memory leak,

12
00:00:30.075 --> 00:00:31.130
things like that.

13
00:00:31.130 --> 00:00:32.860
So those would be
the kinda three sections.

14
00:00:32.860 --> 00:00:34.710
So we start with network performance.

15
00:00:34.710 --> 00:00:39.698
One thing I always find really
interesting Is every time some company

16
00:00:39.698 --> 00:00:42.880
does a study the metrics
they come back on for

17
00:00:42.880 --> 00:00:46.930
how important page load is
always kind of blows my mind.

18
00:00:48.050 --> 00:00:51.555
So I have like a couple of things that
I was just able to find where it's like

19
00:00:51.555 --> 00:00:54.441
Walmart Amazon,
finding that 1% increase in earnings for

20
00:00:54.441 --> 00:00:57.800
every 100 milliseconds that could
shave off their webpage speed.

21
00:00:58.820 --> 00:01:02.960
Is like, hugely substantial amount
of money, just things going faster.

22
00:01:02.960 --> 00:01:06.400
And I think we all know it at
a certain end when it gets really bad.

23
00:01:06.400 --> 00:01:08.838
You go to a website and it's like
spinning and spinning and spinning,

24
00:01:08.838 --> 00:01:10.420
like I'll just go find
a different website.

25
00:01:10.420 --> 00:01:15.468
But I'm always amazed that when you look
at the aggregate, like how many users

26
00:01:15.468 --> 00:01:20.442
that you just lose, with even small
like barely perceptible slowdowns Yahoo

27
00:01:20.442 --> 00:01:25.440
saw a 9% increase in traffic for
every 400 milliseconds they improved.

28
00:01:25.440 --> 00:01:27.680
That's like less than half a second.

29
00:01:27.680 --> 00:01:28.880
Huge increase.

30
00:01:28.880 --> 00:01:31.487
And Google's as it loses
20% of their traffic for

31
00:01:31.487 --> 00:01:34.130
every 100 milliseconds they take to load.

32
00:01:34.130 --> 00:01:37.187
That one makes a little bit
more sense because you,

33
00:01:37.187 --> 00:01:41.525
you really expect Google to be
instant like google.com, bing.com you

34
00:01:41.525 --> 00:01:46.289
expect those to be Really, really fast
because you're not there to stay here or

35
00:01:46.289 --> 00:01:50.912
there to go to another place.And then
these just interesting numbers like in

36
00:01:50.912 --> 00:01:54.710
the one to three second range as
your page is loading people up.

37
00:01:54.710 --> 00:02:00.350
Probability of leaving goes up to like 32%
as it extends to like one to five seconds.

38
00:02:00.350 --> 00:02:05.017
It's like 90% And then bounces
just increased like over 100% more

39
00:02:05.017 --> 00:02:10.430
bounces as you go past that 5% five second
range so you can really losing a lot.

40
00:02:10.430 --> 00:02:13.564
You can get a lot of this info if
you use like Google Analytics or

41
00:02:13.564 --> 00:02:16.278
something you can see how
many people bounce but, but

42
00:02:16.278 --> 00:02:20.320
it's a little bit harder to measure
because Google Analytics like depending on

43
00:02:20.320 --> 00:02:24.510
where you put it in your script, People
might even leave before it loads, right.

44
00:02:24.510 --> 00:02:27.780
And so
it's it's probably even worse than that.

45
00:02:27.780 --> 00:02:29.740
So that's kind of the importance
of this network stuff.

46
00:02:29.740 --> 00:02:34.615
And I think it's always important to,
to have a little bit of like empathy for

47
00:02:34.615 --> 00:02:35.720
your users.

48
00:02:35.720 --> 00:02:39.705
This is really common where like,
you'll be at some big company, maybe and

49
00:02:39.705 --> 00:02:41.090
you're like in.

50
00:02:41.090 --> 00:02:45.130
San Francisco in the United States
on a brand new MacBook Pro.

51
00:02:45.130 --> 00:02:47.220
And you're like my site is really fast,
right?

52
00:02:47.220 --> 00:02:50.270
Like it loads like right away and
it's really good.

53
00:02:50.270 --> 00:02:55.663
And then, there's like so many places
with worse internet connection and

54
00:02:55.663 --> 00:02:59.190
there's so many people on worse devices.

55
00:02:59.190 --> 00:03:02.027
And then you start thinking about well
what about people using it on mobile

56
00:03:02.027 --> 00:03:03.590
devices on worse internet connection?

57
00:03:03.590 --> 00:03:04.620
I mean, it really,

58
00:03:04.620 --> 00:03:08.470
it really can be a very different
experience based on where you are.

59
00:03:08.470 --> 00:03:12.119
And I think even people living in like
very modern high internet speed cities

60
00:03:12.119 --> 00:03:14.970
like if you take the train somewhere and
you go in a tunnel and

61
00:03:14.970 --> 00:03:18.278
you lose your connection,
like we all know That frustration right or

62
00:03:18.278 --> 00:03:22.380
you're like at an airport, and all of
a sudden everything is crawling like.

63
00:03:22.380 --> 00:03:25.627
So I think it's really
important to not just test on,

64
00:03:25.627 --> 00:03:31.130
the maximum the best possible conditions,
but to think about your user base.

65
00:03:31.130 --> 00:03:34.531
Again, with a good analytics tool,
you can get a lot of this like,

66
00:03:34.531 --> 00:03:37.660
You actually have a lot of users
in this region or that region.

67
00:03:37.660 --> 00:03:40.600
And there's tons of stuff you can do,
which is kind of what

68
00:03:40.600 --> 00:03:45.100
we're going to be covering So yeah, we're
gonna kinda learn network terminology, and

69
00:03:45.100 --> 00:03:47.340
then what the Network tab can do.

70
00:03:47.340 --> 00:03:50.578
So if I go ahead and
I open the Network tab here,

71
00:03:50.578 --> 00:03:53.080
we've sorta seen it once already.

72
00:03:53.080 --> 00:03:56.309
And let me go ahead and click this cog and
disable screenshots just for

73
00:03:56.309 --> 00:03:59.660
now because they take up a lot of room,
and then I'll refresh the page.

74
00:03:59.660 --> 00:04:02.080
So Like we covered at the very beginning,

75
00:04:02.080 --> 00:04:06.430
you see like this list in order of
every network request your app made.

76
00:04:06.430 --> 00:04:09.801
And the bigger the app,
the more network requests you'll see,

77
00:04:09.801 --> 00:04:12.988
especially as there's like analytics and
tracking code and

78
00:04:12.988 --> 00:04:16.440
ads and all these images and,
everything's a network request.

79
00:04:16.440 --> 00:04:19.790
So you'll see the name
of the request here.

80
00:04:19.790 --> 00:04:24.640
You will see the status, again this
isn't like a web fundamentals class, but

81
00:04:24.640 --> 00:04:29.566
it dev tools kind of taps into everything,
so, for those that know like network

82
00:04:29.566 --> 00:04:34.270
status is like 200 is okay,
a 400 is usually like a client side error,

83
00:04:34.270 --> 00:04:39.020
500 range is like a server side error,
all these different things.

84
00:04:39.020 --> 00:04:43.200
It's nice to see these, they'll actually
go red when the error and error as well.

85
00:04:43.200 --> 00:04:47.284
The type that it is documents, stylesheets
images all that the initiators kind of

86
00:04:47.284 --> 00:04:50.717
interesting because you can kind of
get this waterfall view of like,

87
00:04:50.717 --> 00:04:53.678
okay your document came in that
called a JavaScript file and

88
00:04:53.678 --> 00:04:57.090
that called a JavaScript file and
you can kind of like watch it.

89
00:04:57.090 --> 00:04:58.890
There's also a kind of a cool tip and

90
00:04:58.890 --> 00:05:02.100
trick which is you can hold
Shift as you move around.

91
00:05:02.100 --> 00:05:05.191
And when you hold shift over an item,

92
00:05:05.191 --> 00:05:09.850
it'll turn everything
that item called Red.

93
00:05:09.850 --> 00:05:14.330
And if that item was called by something,
it'll turn that green.

94
00:05:14.330 --> 00:05:19.966
So you can see like this font here,
the font was called by network dot html,

95
00:05:19.966 --> 00:05:23.200
that screen and it called two other files.

96
00:05:23.200 --> 00:05:23.700
Those are rad.

97
00:05:23.700 --> 00:05:26.920
It's just kind of a neat way of
like visualizing what happened.

98
00:05:26.920 --> 00:05:29.390
You can also see the size.

99
00:05:29.390 --> 00:05:32.624
And when this is cached,
like if you use compression and caching,

100
00:05:32.624 --> 00:05:36.170
you'll see that on this as well, and
you can see how long it took to load.

101
00:05:36.170 --> 00:05:38.920
And then you get this
really cool waterfall.

102
00:05:38.920 --> 00:05:41.380
So this is what happens when
you hover over these here.

103
00:05:41.380 --> 00:05:45.632
You get this waterfall, And the waterfall
like if you have a request that's taking

104
00:05:45.632 --> 00:05:49.823
a really long time, the waterfall can help
you figure out where in the process that

105
00:05:49.823 --> 00:05:51.670
request is getting stuck.

106
00:05:51.670 --> 00:05:54.850
And we'll cover that in a second because
that's kind of a pretty in depth one.

107
00:05:54.850 --> 00:05:58.581
But it's also worth noting that if
you right click on any of these,

108
00:05:58.581 --> 00:06:01.649
there's actually a lot more
columns that you can add So

109
00:06:01.649 --> 00:06:05.250
you can add like the path, the URL,
what domain they came from,

110
00:06:05.250 --> 00:06:10.290
you can add cookies that were set the
priority of it all those kinds of things.

111
00:06:10.290 --> 00:06:14.652
And again, just to give a bit of context
here before we go into the waterfall

112
00:06:14.652 --> 00:06:18.460
terminology we've kind of seen
like a script and or an HTML file,

113
00:06:18.460 --> 00:06:22.686
we'll call scripts we'll call CSS
call images, all these things, but

114
00:06:22.686 --> 00:06:26.079
it's really important to know
that on the browser level,

115
00:06:26.079 --> 00:06:30.717
you get like a certain number of requests,
which is, I believe, either five or

116
00:06:30.717 --> 00:06:34.630
six depending on the browser
that you can do at one time.

117
00:06:34.630 --> 00:06:39.041
So if you tried to call like 20 images,
it would send out six requests, you know,

118
00:06:39.041 --> 00:06:40.610
for the six first images.

119
00:06:40.610 --> 00:06:44.163
And then as they come down, then it would
start filling like a queue basically where

120
00:06:44.163 --> 00:06:45.890
I would call the next images.

121
00:06:45.890 --> 00:06:50.490
So it's worth knowing right away that
you can't just do unlimited requests.

122
00:06:50.490 --> 00:06:54.759
And if you think about it, that's where we
get this culture of like concatenating our

123
00:06:54.759 --> 00:06:58.450
JavaScript files or
using CSS sprites instead of images.

124
00:06:58.450 --> 00:07:02.910
Because there's a performance gain to
be had by having less total requests.

125
00:07:02.910 --> 00:07:06.583
So for those familiar with that, who have
like bundled their JavaScript together or

126
00:07:06.583 --> 00:07:09.012
who have stuck images into a sprite or
bundle their CSS,

127
00:07:09.012 --> 00:07:12.590
that's why it's because we're
limited to the number of resources.

128
00:07:12.590 --> 00:07:17.206
But the other thing that's really
interesting is that Rather than just going

129
00:07:17.206 --> 00:07:22.035
down your HTML, and just like in queueing
everything it sees like script, CSS,

130
00:07:22.035 --> 00:07:26.438
CSS, CSS, you know, going through,
the browser's really smart, and

131
00:07:26.438 --> 00:07:31.440
it tries to figure out things that it
thinks will be higher and lower priority.

132
00:07:31.440 --> 00:07:34.535
And then it goes down a priority list
which is like really great because

133
00:07:34.535 --> 00:07:35.370
otherwise.

134
00:07:35.370 --> 00:07:39.281
If you think about it, you could put like
an image tag and then a CSS tag right

135
00:07:39.281 --> 00:07:43.252
after it and the CSS you need that styles
your page and the images like I mean,

136
00:07:43.252 --> 00:07:47.190
it's you do need the image eventually,
but it's usually more additive.

137
00:07:48.195 --> 00:07:51.905
So what chrome will do is it has this
whole system in place where it'll be like,

138
00:07:51.905 --> 00:07:53.605
I think these are the top priority.

139
00:07:53.605 --> 00:07:54.405
I think these are medium.

140
00:07:54.405 --> 00:07:55.595
I think these are lower priority.

141
00:07:55.595 --> 00:07:59.592
And that way you don't have to restructure
your HTML in a weird way just to get

142
00:07:59.592 --> 00:08:00.832
things to load.

143
00:08:00.832 --> 00:08:04.286
So you can actually right click here and
you can do priority and

144
00:08:04.286 --> 00:08:06.112
it will add this new column.

145
00:08:06.112 --> 00:08:10.491
And it's kind of cool to play around
with where you're like, like it views,

146
00:08:10.491 --> 00:08:13.741
my HTML obviously, and
my CSS is the highest priority.

147
00:08:13.741 --> 00:08:17.181
Then it gets to this PNG here
I've used that as low priority.

148
00:08:17.181 --> 00:08:21.212
And then back down here, these font
files that are needed to render high

149
00:08:21.212 --> 00:08:24.311
priority these two PMGs low JavaScript,
medium.

150
00:08:24.311 --> 00:08:26.351
It's kind of interesting to see
how the browser thinks about it.

151
00:08:26.351 --> 00:08:31.006
And it sort of makes sense where usually
the HTML and the CSS are like the vital

152
00:08:31.006 --> 00:08:35.520
things, like get the site to display and
then JavaScript is like.

153
00:08:35.520 --> 00:08:36.990
Probably somewhat important, but

154
00:08:36.990 --> 00:08:39.900
usually it happens after the page
load the JavaScript kicks in.

155
00:08:39.900 --> 00:08:42.200
And the images are like
the lowest importance thing.

156
00:08:42.200 --> 00:08:44.550
It's just kind of
an interesting thing to see.

157
00:08:44.550 --> 00:08:47.755
Does that make sense to
everybody that kind of sucks.

158
00:08:47.755 --> 00:08:50.603
Six total requests at
simultaneous requests and

159
00:08:50.603 --> 00:08:53.315
they're more advanced
than you would think.

160
00:08:53.315 --> 00:08:54.738
Cuz Chrome and Firefox and

161
00:08:54.738 --> 00:08:58.175
Edge all have a system to figure
out what the priority order is.

162
00:08:58.175 --> 00:09:00.355
Let me know if you have
any questions on that.

163
00:09:02.450 --> 00:09:05.540
&gt;&gt; Is there a way to change
their priority order?

164
00:09:05.540 --> 00:09:08.455
Because I remember you can defer scripts.

165
00:09:08.455 --> 00:09:11.380
&gt;&gt; Yeah.
&gt;&gt; And the head does that.

166
00:09:11.380 --> 00:09:14.110
What does that do to the priority order?

167
00:09:14.110 --> 00:09:16.230
&gt;&gt; Yeah, so you can override it.

168
00:09:16.230 --> 00:09:19.910
You can You can make things
like higher priority.

169
00:09:19.910 --> 00:09:21.540
Well, so
there's a couple ways you can override it.

170
00:09:21.540 --> 00:09:24.250
Yeah, you can move things up to the head.

171
00:09:24.250 --> 00:09:28.226
So like Google Analytics will be like, for
example, I want my JavaScript to be in

172
00:09:28.226 --> 00:09:31.850
the head please, which will make
it a higher priority by itself.

173
00:09:31.850 --> 00:09:35.294
You can also do things like you can
like preload images, you can be like,

174
00:09:35.294 --> 00:09:37.820
this one's really important.

175
00:09:37.820 --> 00:09:40.835
And then you can Yeah, exactly on the on
the other side, you can defer and

176
00:09:40.835 --> 00:09:43.230
that says this is less important, right?

177
00:09:43.230 --> 00:09:46.230
So yeah, so you can go in and
you can either preload or defer.

178
00:09:46.230 --> 00:09:48.767
And you can also move things around
in the structure so that they're,

179
00:09:48.767 --> 00:09:50.640
you know, higher up or whatever.

180
00:09:50.640 --> 00:09:52.390
And that and that will override these.

181
00:09:52.390 --> 00:09:53.410
Yep.

182
00:09:53.410 --> 00:09:57.670
So the waterfall is interesting,
because I feel like it's largely ignored.

183
00:09:57.670 --> 00:10:00.920
And then one day you'll have a thing like
this happens to me all the time at work

184
00:10:00.920 --> 00:10:03.250
will be like, Hey,
Why is this taking so long?

185
00:10:03.250 --> 00:10:06.560
And I'll be like,
it's this call this API call.

186
00:10:06.560 --> 00:10:09.880
And then my boss will be like, well okay,
but [LAUGH] Whose fault is that?

187
00:10:09.880 --> 00:10:11.148
Right?
Not that my bosses mean,

188
00:10:11.148 --> 00:10:13.140
but they'll be like,
well, what's the problem?

189
00:10:13.140 --> 00:10:17.109
Is the problem like the response is too
big, is the problem that the service

190
00:10:17.109 --> 00:10:21.020
is too slow or that we're too slow or,
So this can be really interesting.

191
00:10:21.020 --> 00:10:24.317
So it provides this really
nice colour coded timeline for

192
00:10:24.317 --> 00:10:27.020
things that can really help you dive in.

193
00:10:27.020 --> 00:10:28.357
And when you're making a ticket,

194
00:10:28.357 --> 00:10:30.938
especially if you're like a front
end engineer making a ticket for

195
00:10:30.938 --> 00:10:34.080
a service engineer, it can help a lot and
be really impressive.

196
00:10:34.080 --> 00:10:36.748
Again, like one of the themes of this
is like Dev Tools helps you cheat

197
00:10:36.748 --> 00:10:37.640
a little bit.

198
00:10:37.640 --> 00:10:40.729
They can be really impressive where you're
like, Hey, this is a DNS issue or like,

199
00:10:40.729 --> 00:10:41.740
Hey, this is an SSL issue.

200
00:10:41.740 --> 00:10:44.130
They're like, Whoa, How did you know that?

201
00:10:44.130 --> 00:10:48.799
It's like I'm really cool, so what I've
done here because of [INAUDIBLE] I've sort

202
00:10:48.799 --> 00:10:51.034
of broken down the waterfall in order and

203
00:10:51.034 --> 00:10:54.800
the colours used here are the same
colors that combatbtwo of these.

204
00:10:56.020 --> 00:10:59.767
So, the first colors you'll see which
is at the top are white and grey and

205
00:10:59.767 --> 00:11:02.350
those are queueing installed.

206
00:11:02.350 --> 00:11:04.400
Queuing is exactly what
we just talked about.

207
00:11:04.400 --> 00:11:07.562
Either there's higher priority stuff,
or it's the same priority, but

208
00:11:07.562 --> 00:11:09.560
we've already hit our 6 total connections.

209
00:11:09.560 --> 00:11:10.310
So I gotta wait.

210
00:11:11.550 --> 00:11:13.360
Or and this is very rare.

211
00:11:13.360 --> 00:11:16.660
The browser is doing some work and
just needs a second, that's fine too.

212
00:11:16.660 --> 00:11:20.110
And so then they'll show is stalled the
entire time that they're stuck queuing so

213
00:11:20.110 --> 00:11:21.520
you can see how long they waited.

214
00:11:22.680 --> 00:11:25.390
Then the next three are kinda green and
orange.

215
00:11:25.390 --> 00:11:27.450
Those are like setup things happening.

216
00:11:27.450 --> 00:11:29.010
One is DNS lookup.

217
00:11:29.010 --> 00:11:32.380
So we all know that we were
crest like google.com.

218
00:11:32.380 --> 00:11:33.930
But that's not a computer's address,
right.

219
00:11:33.930 --> 00:11:34.680
That's a domain name.

220
00:11:34.680 --> 00:11:39.160
So it has to go to the DNS service and
find what server to actually reroute to.

221
00:11:39.160 --> 00:11:43.650
So if that's slow, that's something going
on with DNS routing, not not our company.

222
00:11:43.650 --> 00:11:45.390
Then it sets up the initial connection,
right?

223
00:11:45.390 --> 00:11:49.240
So the TCP connection SSL connection,
there could be a problem in there.

224
00:11:49.240 --> 00:11:50.720
If you're using a ServiceWorker.

225
00:11:50.720 --> 00:11:53.692
Like if you have a progressive web app,
you can see another orange bar for

226
00:11:53.692 --> 00:11:56.350
ServiceWorker setup like
it's being bootstrapped.

227
00:11:56.350 --> 00:12:00.360
And then purple ServiceWorker has been
set up, it's starting to respond.

228
00:12:00.360 --> 00:12:02.732
Now green is an interesting one green and

229
00:12:02.732 --> 00:12:07.335
blue are like the data has gotten on
the server and it's coming to you finally,

230
00:12:07.335 --> 00:12:11.727
green is waiting time to first byte which
is a metric that a lot of sites use to

231
00:12:11.727 --> 00:12:16.538
mark performance of their services, which
is you know, I say give me food at PNG,

232
00:12:16.538 --> 00:12:20.094
and then I will my computer chrome
will mark when I get the very

233
00:12:20.094 --> 00:12:24.140
first byte of data,
the very first packet of data comes over.

234
00:12:24.140 --> 00:12:27.841
I can use that to kind of gauge how quick
my connection between the server and

235
00:12:27.841 --> 00:12:28.680
the client are.

236
00:12:28.680 --> 00:12:31.099
And then content download
is how long it takes for

237
00:12:31.099 --> 00:12:33.860
all the rest of the bytes to get over.

238
00:12:33.860 --> 00:12:38.460
This one's interesting because this
can be largely a client issue, right?

239
00:12:38.460 --> 00:12:41.288
If I have a JavaScript file
that's like 100 kilobytes,

240
00:12:41.288 --> 00:12:44.909
it's going to take a very different
time to download In that San Francisco,

241
00:12:44.909 --> 00:12:48.756
you know, high speed internet connection
than it is if you're on the train, and

242
00:12:48.756 --> 00:12:51.900
you're going through a tunnel or
something like that.

243
00:12:51.900 --> 00:12:55.441
But it can be really nice to kind of
categorize things like the white and

244
00:12:55.441 --> 00:12:57.670
gray means that too many requests, right?

245
00:12:57.670 --> 00:12:59.460
And we're just the browser's just stuck.

246
00:12:59.460 --> 00:13:01.860
Not even working on those requests, yet.

247
00:13:01.860 --> 00:13:06.110
So you can kinda concatenate your scripts,
image sprites, all that cool stuff.

248
00:13:07.140 --> 00:13:10.960
The green and orange is like stuffs
being set up on the service side.

249
00:13:10.960 --> 00:13:13.858
So maybe there's like a hiccup
with the DNS registry or

250
00:13:13.858 --> 00:13:16.145
the SSL some Something like that.

251
00:13:16.145 --> 00:13:18.365
The waiting time to first byte is slow.

252
00:13:18.365 --> 00:13:19.135
It's a service issue.

253
00:13:19.135 --> 00:13:21.100
So you can go to your service,
you can be like, hey,

254
00:13:21.100 --> 00:13:22.685
time to first byte is really slow.

255
00:13:22.685 --> 00:13:24.105
Maybe it's a database problem.

256
00:13:24.105 --> 00:13:27.615
Maybe the servers are overwhelmed or
they're just slow, something like that.

257
00:13:27.615 --> 00:13:31.525
And when content download becomes
an issue, you can't just blame the user.

258
00:13:31.525 --> 00:13:34.425
So you'd have to figure out what you can
do to make the content smaller, right?

259
00:13:34.425 --> 00:13:37.894
If people are just you know, waiting and
this is something that we see Lot of

260
00:13:37.894 --> 00:13:41.311
especially in this like modern world
where it's so easy to go shopping for

261
00:13:41.311 --> 00:13:44.700
new JavaScript libraries, you just
keep adding them to your code base.

262
00:13:44.700 --> 00:13:47.150
You know, you're like,
I need a calculator app and I need this.

263
00:13:47.150 --> 00:13:49.504
I need that or
whatever the things get really big and

264
00:13:49.504 --> 00:13:51.540
you'll see large content download times.

