WEBVTT

1
00:00:00.240 --> 00:00:04.634
So let's go through this
exercise together, so

2
00:00:04.634 --> 00:00:10.080
the first two things we can
do just via the elements tab.

3
00:00:10.080 --> 00:00:14.651
So the very first one, I'm gonna open up
the DevTools, and use this selector to

4
00:00:14.651 --> 00:00:18.541
find the list that we're in and
see that it is an unordered list and so

5
00:00:18.541 --> 00:00:21.870
you can just double click to
edit it UL and then hit enter.

6
00:00:21.870 --> 00:00:25.260
That'll change it so you'll notice
it goes from numbered to dots.

7
00:00:25.260 --> 00:00:28.303
The second one is interesting,
it's probably the easy,

8
00:00:28.303 --> 00:00:31.930
there's a couple different
ways you could actually do it.

9
00:00:31.930 --> 00:00:36.183
The easiest way probably would be
to look for an event listener so

10
00:00:36.183 --> 00:00:41.379
if we again use this, select the link
here, then go over to event listeners and

11
00:00:41.379 --> 00:00:45.990
we can see that there's two this one
is this color scheme for my code.

12
00:00:45.990 --> 00:00:49.148
So that's not it this one's
a click listener and so

13
00:00:49.148 --> 00:00:52.233
if we click on it,
it'll take us to the sources and

14
00:00:52.233 --> 00:00:57.270
it'll actually take us to the actual
function that's calling it.

15
00:00:57.270 --> 00:01:00.840
So the button in the block
quote is kind of interesting.

16
00:01:01.860 --> 00:01:05.142
So if we remember from
the specificity class,

17
00:01:05.142 --> 00:01:09.517
we would see that the element selectors,
the weakest class,

18
00:01:09.517 --> 00:01:14.060
the next than ID, and
then inline styles are the strongest, but

19
00:01:14.060 --> 00:01:18.730
the very,
very strongest thing is an important tag.

20
00:01:18.730 --> 00:01:22.942
So it should be this yellow color
the other way that we could do it though,

21
00:01:22.942 --> 00:01:25.014
because DevTools helps you cheat,

22
00:01:25.014 --> 00:01:29.460
which is awesome is we could just
find the block quote in the DOM here.

23
00:01:29.460 --> 00:01:33.797
And then we could just go to the computed
tab and then we can just see that yellow

24
00:01:33.797 --> 00:01:38.500
is the color that wins out here so we can
actually see it before it's even rendered.

25
00:01:39.610 --> 00:01:44.428
So that's yellow and then for the last
one, can you find out the border color,

26
00:01:44.428 --> 00:01:48.520
the one with this ID again,
a couple different ways we could do it.

27
00:01:48.520 --> 00:01:51.454
You can always just scroll through
them [LAUGH] and you can look for

28
00:01:51.454 --> 00:01:52.821
it that's no problem at all.

29
00:01:52.821 --> 00:01:57.902
You could also cheat a little bit by
doing something like document get element

30
00:01:57.902 --> 00:02:02.995
by ID and then passing that ID in and
this way we'll bring the element in here.

31
00:02:02.995 --> 00:02:07.247
And sort of like we covered before you can
see right where my mouse is now that if I

32
00:02:07.247 --> 00:02:07.956
hover on it,

33
00:02:07.956 --> 00:02:12.027
it says it's down but we can also right
click and we can scroll it into view.

34
00:02:12.027 --> 00:02:15.970
And we can see this is the card with
that ID and it has a border of green.

35
00:02:17.600 --> 00:02:20.440
So any questions on this exercise?

36
00:02:20.440 --> 00:02:23.839
And then I had a couple questions that
came in in between that I wanted to go

37
00:02:23.839 --> 00:02:27.018
through, but if anybody has anything
on the this exercise itself,

38
00:02:27.018 --> 00:02:28.270
I'd love to hear.

39
00:02:28.270 --> 00:02:31.170
So the question was,
how did we find the JavaScript for

40
00:02:31.170 --> 00:02:33.070
when you clicked this link up here?

41
00:02:33.070 --> 00:02:33.910
How did we get there?

42
00:02:35.220 --> 00:02:39.156
So I open up DevTools and
I'll go to the elements panel and

43
00:02:39.156 --> 00:02:43.480
I wanna be over here on
the event listeners panel.

44
00:02:43.480 --> 00:02:46.662
And so what the event listeners
will do is it'll show you any and

45
00:02:46.662 --> 00:02:50.470
all event listeners on the currently
selected item over here.

46
00:02:50.470 --> 00:02:55.244
And so the easiest way to do it is to use
the selector to get the link and now that

47
00:02:55.244 --> 00:02:59.958
the link is hovered we'll see that over
here up here at the click listener.

48
00:02:59.958 --> 00:03:04.127
And this click listeners on the link, and
it actually has the JavaScript file and

49
00:03:04.127 --> 00:03:05.046
the line number so

50
00:03:05.046 --> 00:03:09.680
if you click that, it'll take you
into the sources right on that line.

51
00:03:09.680 --> 00:03:13.500
Again, a lot of these are easy
with like the cleaner exercises

52
00:03:13.500 --> 00:03:17.849
like often you'll as your the code
gets bigger and more complicated.

53
00:03:17.849 --> 00:03:21.182
It might be a little bit obscured
away with like a helper function,

54
00:03:21.182 --> 00:03:24.233
but this is at least get you on
the right track for finding it.

55
00:03:24.233 --> 00:03:28.074
And we work with debuggers later we'll
see that finding the line can actually be

56
00:03:28.074 --> 00:03:32.330
super helpful once you set a breakpoint
on it, which we'll do in another section.

57
00:03:32.330 --> 00:03:36.489
I had one really good question
earlier too, which I wanted to answer,

58
00:03:36.489 --> 00:03:40.520
it's actually very similar to
this one that we just covered.

59
00:03:40.520 --> 00:03:44.860
It was like the element breakpoints where
you're resetting a break on over here.

60
00:03:44.860 --> 00:03:48.173
And the question was, okay, well,
what if you're using some kind of

61
00:03:48.173 --> 00:03:51.935
framework like let's say you're using
React, so won't be as simple as like,

62
00:03:51.935 --> 00:03:55.100
div enter text equals hello,
could you do it that way?

63
00:03:55.100 --> 00:03:57.352
The short answer is actually the same,

64
00:03:57.352 --> 00:04:02.127
which is you can set a breakpoint do the
thing, yes, it will open a react function,

65
00:04:02.127 --> 00:04:06.800
but you can walk the call stack back
to the your specific application code.

66
00:04:06.800 --> 00:04:09.338
And we'll do some really cool
stuff with debuggers later but

67
00:04:09.338 --> 00:04:10.780
that's the short answer.

68
00:04:10.780 --> 00:04:14.781
The longer answer, though, is if you're
using a framework and that framework has

69
00:04:14.781 --> 00:04:19.030
its own DevTools, which we'll cover at the
end, that would probably be your best bet.

70
00:04:19.030 --> 00:04:23.414
So if you get the React DevTools, and
then you look at the React elements panel,

71
00:04:23.414 --> 00:04:25.639
which would be a new DevTools over here,

72
00:04:25.639 --> 00:04:29.320
that can show you specifically
why a component rendered, right?

73
00:04:29.320 --> 00:04:32.839
So that would be like hey, this render
because you clicked this thing like that,

74
00:04:32.839 --> 00:04:36.170
it'd be a lot more helpful but
you can do it without the React DevTools.

75
00:04:36.170 --> 00:04:38.773
You'll just have to look at
a big long call stack and

76
00:04:38.773 --> 00:04:42.891
you'll have to look at the file names and
you have to walk back until it's not core

77
00:04:42.891 --> 00:04:46.120
react Jes dot j s anymore until
it's your actual application.

