WEBVTT

1
00:00:00.090 --> 00:00:04.125
Last thing I wanted to show before
we move on, which is really cool and

2
00:00:04.125 --> 00:00:08.160
people have asked about this is that and
this used to be much harder but

3
00:00:08.160 --> 00:00:10.962
since node.js is just
a wrapper around the js.

4
00:00:10.962 --> 00:00:15.890
Which is the same JavaScript engine that
chrome uses, you can actually very very

5
00:00:15.890 --> 00:00:20.690
easily run your Node.js apps through
the devtools as well So I'll demo that.

6
00:00:20.690 --> 00:00:22.861
So basically,
I'm just going to go to my terminal and

7
00:00:22.861 --> 00:00:25.980
I'm going to kill the app that I
currently have and clear the page.

8
00:00:25.980 --> 00:00:30.732
And then instead of running,
so I was running NPM start,

9
00:00:30.732 --> 00:00:33.810
which is set to run node server.js.

10
00:00:33.810 --> 00:00:36.050
This is how I've been running the app.

11
00:00:36.050 --> 00:00:40.490
You can now go and you can change
it to do node dash dash inspect.

12
00:00:40.490 --> 00:00:41.630
And do the same thing.

13
00:00:41.630 --> 00:00:44.101
So it'll still load the site
just like normal, but

14
00:00:44.101 --> 00:00:48.950
now when we open up the devtools, we'll
see this little node.js icon up here.

15
00:00:48.950 --> 00:00:52.650
And if we click on that,
we can actually see it pops out its own.

16
00:00:52.650 --> 00:00:54.550
Kind of got two devtools, right?

17
00:00:54.550 --> 00:00:56.500
You've got devtools inception going on.

18
00:00:56.500 --> 00:00:59.860
But you can click on like profile,
for example.

19
00:00:59.860 --> 00:01:02.884
And you can do a full profile and
then we'll like refresh the app and

20
00:01:02.884 --> 00:01:05.320
then we'll stop the profile or
something like that.

21
00:01:06.830 --> 00:01:08.160
And so you can do all of these.

22
00:01:08.160 --> 00:01:10.220
Let me move it over to the flame
chart that we're used to.

23
00:01:10.220 --> 00:01:10.900
You can do these things.

24
00:01:10.900 --> 00:01:15.234
You can actually watch my little Node
sample app started up right where it's

25
00:01:15.234 --> 00:01:16.800
like it's a fast defy app.

26
00:01:16.800 --> 00:01:20.750
And it's like walking ASDs as it walks the
mark down all this like really cool stuff.

27
00:01:21.970 --> 00:01:25.726
So doing it with like a web server is like
pretty cool, but like one thing you could

28
00:01:25.726 --> 00:01:29.150
do that would be really interesting
is if like you're using Web pack, and

29
00:01:29.150 --> 00:01:30.810
your build times are slow.

30
00:01:30.810 --> 00:01:35.140
You could actually do run node inspect and
then call web pack and then you could open

31
00:01:35.140 --> 00:01:38.740
it up in here with a profile and
like do the same exact thing, right?

32
00:01:38.740 --> 00:01:42.690
You can walk any kind of node
command line application and see it.

33
00:01:42.690 --> 00:01:46.304
So I have like a little example
that I'll just do with you all, but

34
00:01:46.304 --> 00:01:50.774
you can feel free to follow along with but
in the server.js file, I have this like

35
00:01:50.774 --> 00:01:55.160
silly little function commented out,
which is FUBAR so you can uncomment it.

36
00:01:55.160 --> 00:01:58.097
And then you can go up and
in the get lesson page,

37
00:01:58.097 --> 00:02:00.710
you can uncomment it being called.

38
00:02:00.710 --> 00:02:06.400
Now save that, now go back to my terminal,
and I'll start node with the inspect flag.

39
00:02:06.400 --> 00:02:09.560
And then I'll go back to my devtools.

40
00:02:09.560 --> 00:02:14.246
And I'll click the node icon again here
and I'll start recording then I'll go

41
00:02:14.246 --> 00:02:18.306
back here and I'll refresh the page and
then I will stop recording.

42
00:02:18.306 --> 00:02:21.985
And we can actually see like inside this
fast defy which is the framework I'm using

43
00:02:21.985 --> 00:02:23.371
get this like FUBAR function,

44
00:02:23.371 --> 00:02:26.647
so we're actually seeing like the node
server trying to process stuff.

45
00:02:26.647 --> 00:02:30.610
And you can see it's it's reading and
markdown, and then it hits this thing.

46
00:02:30.610 --> 00:02:33.750
So you can do a really nice,
just like we did with the front end code.

47
00:02:33.750 --> 00:02:35.130
You can do it with all your back end code.

48
00:02:35.130 --> 00:02:36.910
Here's my server.js file.

49
00:02:36.910 --> 00:02:39.700
Here's how long it took to do
this silly thing, all that stuff.

50
00:02:39.700 --> 00:02:42.224
So this is really cool,
because when you start looking into it,

51
00:02:42.224 --> 00:02:45.490
there's like a lot of stuff that we
use day to day that's just a node app.

52
00:02:45.490 --> 00:02:47.281
And so just the idea of being able to run,

53
00:02:47.281 --> 00:02:50.620
the Chrome devtools that you're used
to on the node app can be really cool.

