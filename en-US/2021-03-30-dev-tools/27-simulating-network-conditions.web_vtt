WEBVTT

1
00:00:00.180 --> 00:00:02.671
Another thing,
before we get into Lighthouse,

2
00:00:02.671 --> 00:00:06.640
is that dev tools can do some really
cool stuff simulating conditions.

3
00:00:06.640 --> 00:00:09.080
So I'm gonna go ahead and
open the Element Inspector.

4
00:00:09.080 --> 00:00:13.303
So on the Network tab,
if we go to these settings down here,

5
00:00:13.303 --> 00:00:15.337
I'm sorry, where is this?

6
00:00:15.337 --> 00:00:16.210
There it is.

7
00:00:16.210 --> 00:00:17.220
Sorry, it moved it.

8
00:00:17.220 --> 00:00:19.724
So on the Network tab,
this little drop down here,

9
00:00:19.724 --> 00:00:21.654
you can throttle network conditions.

10
00:00:21.654 --> 00:00:24.660
So you can look at, for example,
all the way to offline,

11
00:00:24.660 --> 00:00:28.178
but you can look at a slow 3G
connection or a fast 3G connections.

12
00:00:28.178 --> 00:00:31.692
So we can see my site loads pretty
quickly almost instantly, but

13
00:00:31.692 --> 00:00:36.440
then on a slow 3G connection, you can see
it kind of spinning and spinning here.

14
00:00:36.440 --> 00:00:37.930
So that can be a really cool thing.

15
00:00:37.930 --> 00:00:40.210
You can simulate these connections and
see,

16
00:00:40.210 --> 00:00:44.175
well what is somebody going to experience
if they're on a really bad network?

17
00:00:44.175 --> 00:00:48.052
The other thing they can do is in
the Performance tab, under their settings,

18
00:00:48.052 --> 00:00:51.840
you can actually do CPU throttling,
too, which is really cool.

19
00:00:51.840 --> 00:00:56.263
If you remember in the network lesson we
talked about how bites over the wire isn't

20
00:00:56.263 --> 00:00:57.172
the only thing.

21
00:00:57.172 --> 00:01:00.440
Parse time can also be hugely
important for page load.

22
00:01:00.440 --> 00:01:02.597
So what if you are worried
about parse time?

23
00:01:02.597 --> 00:01:06.055
You can come into the Performance tab,
you can set a CPU throttle, and

24
00:01:06.055 --> 00:01:09.044
then you can reload the page there,
and you can see how long it

25
00:01:09.044 --> 00:01:12.456
actually takes to parks all your
JavaScript on a slower connection.

26
00:01:12.456 --> 00:01:13.530
So that's really cool.

27
00:01:13.530 --> 00:01:17.813
So you can, yeah, you can throw out the
network and you can throw out all the CPU.

28
00:01:17.813 --> 00:01:21.530
Very, very useful if you want to get
a little bit of that empathy of what

29
00:01:21.530 --> 00:01:24.080
users will see on slower connections.

30
00:01:24.080 --> 00:01:28.878
Another aside I wanted to make
is that let's say you have

31
00:01:28.878 --> 00:01:34.100
kinda trimmed your code down, so
it is what you need it to be.

32
00:01:35.110 --> 00:01:39.821
Moving things around so that,
while it will load slowly it loads well,

33
00:01:39.821 --> 00:01:41.400
can be very important.

34
00:01:41.400 --> 00:01:45.264
So, for example, sites that
are entirely client side rendered,

35
00:01:45.264 --> 00:01:48.921
like a react site where you just
render a div main from the server

36
00:01:48.921 --> 00:01:52.929
with nothing in it, then React boots
up and then React populates it.

37
00:01:52.929 --> 00:01:57.167
What if you put a nice static HTML file
and instead, so that was a really slow

38
00:01:57.167 --> 00:02:01.542
connection, while React is parsing,
the user at least get some good HTML and

39
00:02:01.542 --> 00:02:06.250
some CSS, stuff like that, and this can be
done in a number of ways, but the network

40
00:02:06.250 --> 00:02:10.893
throttling can be really cool to watch how
your site loads, and it can give you some

41
00:02:10.893 --> 00:02:14.998
ideas into things that you can do to
at least make the experience better,

42
00:02:14.998 --> 00:02:19.040
even if people do have to wait a few
seconds for the whole thing to load.

