WEBVTT

1
00:00:00.030 --> 00:00:04.027
This is the on-page performance or
the CPU lesson, and

2
00:00:04.027 --> 00:00:08.035
so we're gonna be messing
with the performance panel.

3
00:00:08.035 --> 00:00:12.963
We're gonna learn about how to read
the flame graph, how to find page jank,

4
00:00:12.963 --> 00:00:17.275
we're gonna learn about a bunch of
really cool little tools that it

5
00:00:17.275 --> 00:00:19.662
has to kind of help out along the way.

6
00:00:19.662 --> 00:00:21.239
And before we get into that,

7
00:00:21.239 --> 00:00:25.842
I kinda wanted to talk about the way that
we're viewing performance these days, so

8
00:00:25.842 --> 00:00:28.821
Google has this rail philosophy
which I really like.

9
00:00:28.821 --> 00:00:32.428
It's the rail performance philosophy,
and it's kind of four different things

10
00:00:32.428 --> 00:00:34.720
to think about,
four different considerations.

11
00:00:34.720 --> 00:00:40.052
One is general app response time, so that
would be, we've all been there, right?

12
00:00:40.052 --> 00:00:44.138
Where we met on a website and we click a
button and it doesn't interact in any way,

13
00:00:44.138 --> 00:00:47.260
I have no idea, what did it get
my clicked and not get my click,

14
00:00:47.260 --> 00:00:48.426
these kind of things.

15
00:00:48.426 --> 00:00:53.015
So some type of response really quick for
the user, so they know that you've

16
00:00:53.015 --> 00:00:57.115
received what they've done,
the second category is animations.

17
00:00:57.115 --> 00:01:01.367
So whether it's a cool scroll animation,
or something moving, or

18
00:01:01.367 --> 00:01:05.097
something really vital you're
making a game or whatever,

19
00:01:05.097 --> 00:01:09.890
animation speed is really important
especially cuz it gets really choppy.

20
00:01:09.890 --> 00:01:14.853
Idle time too, I'm sure you've all
heard or people say this a lot, but

21
00:01:14.853 --> 00:01:20.732
JavaScript is single threaded, we're not
going into too much JavaScript detail,

22
00:01:20.732 --> 00:01:24.159
basically it can't do
multiple things at once.

23
00:01:24.159 --> 00:01:27.834
And so what we often do in our
application code is we just,

24
00:01:27.834 --> 00:01:30.831
send it I need to do this and
this and this.

25
00:01:30.831 --> 00:01:34.561
I have all these ideas of stuff I
wanna do and we just in a big file,

26
00:01:34.561 --> 00:01:39.050
just do all this stuff, but if you keep
the thread really busy, it's hard for

27
00:01:39.050 --> 00:01:41.217
your app to be interactive, right?

28
00:01:41.217 --> 00:01:44.239
Your app is not interactive
when the thread is busy and so,

29
00:01:44.239 --> 00:01:48.077
making sure that you batch up your work,
which we'll cover a little bit.

30
00:01:48.077 --> 00:01:51.231
You can go a long way with making it so,
I don't know if you've been there before,

31
00:01:51.231 --> 00:01:53.534
been on a mobile site and
it's loading you try to scroll it.

32
00:01:53.534 --> 00:01:57.289
And you can't even scroll it,
cuz everything is so clogged up it's so

33
00:01:57.289 --> 00:01:58.891
busy you can't even move it?

34
00:01:58.891 --> 00:02:02.778
That's what idle time is, and last one
is load, so both the on page load,

35
00:02:02.778 --> 00:02:06.795
we covered with the network stuff,
but also as you're changing things up,

36
00:02:06.795 --> 00:02:08.834
make sure the loading time is smooth.

37
00:02:08.834 --> 00:02:12.735
And Google's kind of broken
it down in this cool way,

38
00:02:12.735 --> 00:02:17.587
so the zero to 16 millisecond,
which is really, really small,

39
00:02:17.587 --> 00:02:20.549
everything feels really good to a user.

40
00:02:20.549 --> 00:02:26.571
Once you get 60 to 100 milliseconds,
I think under 100 milliseconds they

41
00:02:26.571 --> 00:02:33.044
still can't tell the difference between
immediate and 100 milliseconds or under.

42
00:02:33.044 --> 00:02:37.159
As far as the way our eyes and
brains perceive things, but

43
00:02:37.159 --> 00:02:42.154
once we get up above 100,
you can immediately feel it, right.?

44
00:02:42.154 --> 00:02:47.865
And so, I think one thing that's fine if
you stick under 1,000, then it still feels

45
00:02:47.865 --> 00:02:53.592
like 1,000 milliseconds so one second,
you still feel engaged in that task maybe.

46
00:02:53.592 --> 00:02:57.411
But you're definitely feeling that
there's been a change, some requests and

47
00:02:57.411 --> 00:02:59.580
some perceptible amount of work happening.

48
00:02:59.580 --> 00:03:02.092
And then kind of over 1,000,
it's a problem,

49
00:03:02.092 --> 00:03:06.316
things are taking too long, people lose
focus and then once you get over 10,000,

50
00:03:06.316 --> 00:03:09.083
which is 10 seconds,
you can see a lot of abandonment.

51
00:03:09.083 --> 00:03:12.480
So I think that the 0 to 16 is amazing,
that's for

52
00:03:12.480 --> 00:03:15.115
our animations that should be our goal.

53
00:03:15.115 --> 00:03:18.567
0 to 100 is totally fine for
actions, if I click, add to cart and

54
00:03:18.567 --> 00:03:22.883
it takes 100 milliseconds to update the
cart, totally fine it still feels good.

55
00:03:22.883 --> 00:03:27.271
100 to 1,000 starts feeling, okay,
maybe I asked a lot I can see that it's

56
00:03:27.271 --> 00:03:30.907
taking a while but it's still enough for
people to keep focused, and

57
00:03:30.907 --> 00:03:34.064
I want you to go over that,
people start losing focus a lot.

58
00:03:34.064 --> 00:03:36.873
So it's basically kind of the same
thing that we did with network,

59
00:03:36.873 --> 00:03:39.744
except this is different because
they are on the page at this point.

60
00:03:39.744 --> 00:03:44.093
But, with a lot of these very modern
single page apps, the slowest loads

61
00:03:44.093 --> 00:03:48.519
sometimes aren't the initial load
sometimes it initially loads fast and

62
00:03:48.519 --> 00:03:51.540
then you click something and
it takes a long time.

63
00:03:51.540 --> 00:03:58.733
There's a terminology one, but I find this
a really good educational terminology so,

64
00:03:58.733 --> 00:04:03.604
people mentioned page jank
a lot on web performance talks.

65
00:04:03.604 --> 00:04:07.855
And it's interesting cuz it basically
just means lag, or stuttering, or

66
00:04:07.855 --> 00:04:12.175
jittering, what the official definition
is any stuttering, juddering or

67
00:04:12.175 --> 00:04:15.974
halting that user see as a site is
not keeping up with refresh rate.

68
00:04:15.974 --> 00:04:18.279
But I remember a long time ago,

69
00:04:18.279 --> 00:04:23.512
I would always hear about refresh rates,
hertz or frames per second or

70
00:04:23.512 --> 00:04:28.407
whatever, and I sort of get that
you want more frames per second?

71
00:04:28.407 --> 00:04:31.165
You don't want less frames
per [LAUGH] second, but

72
00:04:31.165 --> 00:04:34.129
I didn't fully understand,
what's going on here?

73
00:04:34.129 --> 00:04:39.235
And so I got this definition that I found
on the Google Docs that I really like,

74
00:04:39.235 --> 00:04:43.256
so it's, okay,
it starts with your display refresh rate.

75
00:04:43.256 --> 00:04:50.253
And so, most of the devices today refresh
their screens 60 times every second.

76
00:04:50.253 --> 00:04:53.510
And in order to always look very smooth,
the screen is hi,

77
00:04:53.510 --> 00:04:56.633
I'm about to refresh browser
do you have anything, and

78
00:04:56.633 --> 00:04:59.303
the browser needs to be
able to serve up a frame.

79
00:04:59.303 --> 00:05:01.792
So that's you can kinda think
about constantly happening,

80
00:05:01.792 --> 00:05:03.509
your monitor is like, hey, I need to go.

81
00:05:03.509 --> 00:05:06.454
What do you have in the browser cool,
here's a frame and

82
00:05:06.454 --> 00:05:08.592
that's happening 60 times a second.

83
00:05:08.592 --> 00:05:12.670
And so if you do the math on
that every 16.66 milliseconds,

84
00:05:12.670 --> 00:05:16.670
you have to have a new frame ready to go,
that is how often one new

85
00:05:16.670 --> 00:05:20.619
frame will go out the door, and
so it would be tempting to say.

86
00:05:20.619 --> 00:05:24.091
So you need to never do so
much work with an animation,

87
00:05:24.091 --> 00:05:28.271
that you don't have a new frame
ready every 16 milliseconds.

88
00:05:28.271 --> 00:05:32.489
But the reality is there's actually, you
don't get the full 16 because the browser

89
00:05:32.489 --> 00:05:34.408
has housekeeping work and stuff to do.

90
00:05:34.408 --> 00:05:38.566
So really, each animation needs a new
frame to serve up in ten milliseconds, and

91
00:05:38.566 --> 00:05:41.685
if things get too blocked,
where every 10 milliseconds,

92
00:05:41.685 --> 00:05:43.416
it doesn't have a frame to show.

93
00:05:43.416 --> 00:05:45.764
So for example, you're just asking for

94
00:05:45.764 --> 00:05:49.501
a full repaint constantly in
the browsers trying to get it done.

95
00:05:49.501 --> 00:05:52.901
It won't have one for the monitor so,
it won't give one and

96
00:05:52.901 --> 00:05:57.468
that results in dropped frames basically,
so you'll be losing frames there.

97
00:05:57.468 --> 00:06:01.530
And so this seems like a lot if you're not
doing heavy video game animations, but

98
00:06:01.530 --> 00:06:05.654
it's worth thinking about even if you're
just doing a cool wave of animation, or

99
00:06:05.654 --> 00:06:08.729
a background, or a parallax scroll or
something like that.

100
00:06:08.729 --> 00:06:12.159
There's all these ways that
we can be pragmatic and

101
00:06:12.159 --> 00:06:17.421
we can try to be better about making sure
that there's a frame to go every 16 or

102
00:06:17.421 --> 00:06:19.766
every 10 milliseconds, cool.

103
00:06:19.766 --> 00:06:23.316
So, think at that point,
we can kinda open up and kind of peek in,

104
00:06:23.316 --> 00:06:26.815
just before we get into talking
about jank and things like that.

105
00:06:26.815 --> 00:06:32.426
I just kinda wanted to explain, how we
should think about it with the rail model,

106
00:06:32.426 --> 00:06:36.401
and what these kind of times
mean as far as losing frames.

107
00:06:36.401 --> 00:06:41.249
So the Performance tab, so go over and
we'll click on it, and there's kind of two

108
00:06:41.249 --> 00:06:45.045
options here, option one is to this
one where you do a refresh and

109
00:06:45.045 --> 00:06:48.870
that'll show you the actual
creation of the page performance.

110
00:06:48.870 --> 00:06:49.669
And option two,

111
00:06:49.669 --> 00:06:53.152
is just to start a Recording where you
can do whatever you want, interact

112
00:06:53.152 --> 00:06:57.170
with something and then hit Stop, and
those are four different use cases, right?

113
00:06:57.170 --> 00:07:00.257
One you wanna know, especially if
you have a react or angular app,

114
00:07:00.257 --> 00:07:01.647
how does it assemble the app.

115
00:07:01.647 --> 00:07:05.920
What's the page performance like when it's
bootstrapping, the other one is man this

116
00:07:05.920 --> 00:07:08.803
add to cart button takes a long
time what's going on here?

117
00:07:08.803 --> 00:07:12.318
And so, if we do one here a Refresh and
Profile and then hit Stop,

118
00:07:12.318 --> 00:07:15.462
we can kind of see all these
different things happening.

119
00:07:15.462 --> 00:07:19.086
So, the screen is always for
sure the scariest cuz there's just so

120
00:07:19.086 --> 00:07:23.228
much happening, but I wanna try really
hard today to make it a little bit less

121
00:07:23.228 --> 00:07:25.644
scary, a little bit more understandable.

122
00:07:25.644 --> 00:07:30.212
So, I think if we view it in sections,
that's one of the best ways we can do it,

123
00:07:30.212 --> 00:07:34.814
so I'm gonna try to kinda minimize,
toggle up a couple of things here, okay?

124
00:07:34.814 --> 00:07:39.106
So we sorta have three sections,
we have this summary view down here,

125
00:07:39.106 --> 00:07:42.687
which I'm gonna minimize I'm
gonna get to that one last.

126
00:07:42.687 --> 00:07:43.896
Then we have up here,

127
00:07:43.896 --> 00:07:48.550
this is a section I know it's a little bit
hard to see my mouse, but above my mouse.

128
00:07:48.550 --> 00:07:52.512
And up here is a separate section,
and that's showing three

129
00:07:52.512 --> 00:07:57.344
things layered on top of each other,
one of them is the frames per second.

130
00:07:57.344 --> 00:08:00.980
So we'll be looking for
big jumps in that if we lose frames,

131
00:08:00.980 --> 00:08:04.128
the other one is what the CPU
spends its time doing.

132
00:08:04.128 --> 00:08:08.646
We'll see a bunch of different colors in
there, which will relate to the summary

133
00:08:08.646 --> 00:08:13.376
section, and then the third one is just
network traffic, and so that's one thing.

134
00:08:13.376 --> 00:08:17.962
So if you ignore all of these, and we just
focus on this top thing, we can kind of,

135
00:08:17.962 --> 00:08:22.564
I'm gonna click here and I'm gonna drag an
area to kind of Zoom in and focus on it.

136
00:08:22.564 --> 00:08:23.876
So I click and drag there, so

137
00:08:23.876 --> 00:08:27.379
we can kind of see that there's three
different things going on, you can see

138
00:08:27.379 --> 00:08:31.126
across the bottom that the network is busy
the whole time is our site's loading.

139
00:08:31.126 --> 00:08:34.822
It's doing stuff with this blue bar,
you can even see right here,

140
00:08:34.822 --> 00:08:39.266
it stops being busy, as soon as everything
is loaded there's no more blue bar.

141
00:08:39.266 --> 00:08:43.199
You can also see that there's two little
seconds where we actually go up in high

142
00:08:43.199 --> 00:08:47.326
frames per second, there's two little
jumps here, right one here and one here.

143
00:08:47.326 --> 00:08:51.570
And for the most part it's completely
clear, and those frames per second jumps,

144
00:08:51.570 --> 00:08:53.844
tie in very nicely to the CPU doing work,
and

145
00:08:53.844 --> 00:08:56.566
that's almost always going to be the case,
right?

146
00:08:56.566 --> 00:09:01.451
The CPU is telling the browser to
re-render stuff and you'll see stuff

147
00:09:01.451 --> 00:09:06.352
at the same time, and then the last
part for this section is the colors.

148
00:09:06.352 --> 00:09:08.858
So if we zoom in even closer here,

149
00:09:08.858 --> 00:09:12.797
we can see there it might
even be a little hard to see.

150
00:09:12.797 --> 00:09:16.283
Unfortunately I can't make this bigger but
there's yellow, purple and green,

151
00:09:16.283 --> 00:09:18.823
then mostly yellow, little purple and
a tiny bit of green.

152
00:09:18.823 --> 00:09:22.960
And if we go back to the Summary tab, we
can kind of see what the colors mean, so

153
00:09:22.960 --> 00:09:24.945
the color yellow is script running.

154
00:09:24.945 --> 00:09:27.595
So if you had a for loop or
Fibonacci generator,

155
00:09:27.595 --> 00:09:30.712
some JavaScript that's running,
blue is network, so

156
00:09:30.712 --> 00:09:34.378
we don't see any blue that would
be waiting on something to load.

157
00:09:34.378 --> 00:09:37.183
And then we get into rendering and
then repainting, and

158
00:09:37.183 --> 00:09:40.713
so the rendering is heavy math that
the browser is doing calculating.

159
00:09:40.713 --> 00:09:44.369
If you say this needs to be 200
pics by 200 pics and float left,

160
00:09:44.369 --> 00:09:47.977
then the browser has to figure out
how to size it and where to put it.

161
00:09:47.977 --> 00:09:51.937
And then once it's figured that out, then
the browser actually repaints that area of

162
00:09:51.937 --> 00:09:54.425
the screen so,
I'm gonna take a little pause there.

163
00:09:54.425 --> 00:09:57.075
So we haven't gotten into
the the big middle area, but

164
00:09:57.075 --> 00:09:58.923
we've looked a little bit at, okay.

165
00:09:58.923 --> 00:10:03.343
So we can reload or
we can Record while we're doing stuff, and

166
00:10:03.343 --> 00:10:08.794
we get these kind of three sections up
here, showing the frames per second.

167
00:10:08.794 --> 00:10:11.506
What work the CPU is doing and
the network traffic,

168
00:10:11.506 --> 00:10:13.727
how are people feeling about that so far?

169
00:10:13.727 --> 00:10:14.693
I know this is for

170
00:10:14.693 --> 00:10:18.834
years I just ignored this tab because
it was too overwhelming for me so,

171
00:10:18.834 --> 00:10:23.337
if you're feeling pretty good about that,
then you can see we did a refresh.

172
00:10:23.337 --> 00:10:26.293
And the page starts loading
all this network stuff,

173
00:10:26.293 --> 00:10:29.462
you can even see back here it
was just doing system work.

174
00:10:29.462 --> 00:10:33.023
Something the browser's doing as refresh
happens, then we get into here and

175
00:10:33.023 --> 00:10:35.068
you can see, okay, now some work happens.

176
00:10:35.068 --> 00:10:36.664
There's some scripts running,

177
00:10:36.664 --> 00:10:39.970
frames per second shoot up a little bit,
there's some rendering and

178
00:10:39.970 --> 00:10:43.456
painting that happens, and it kinda
goes back down to just hanging out.

