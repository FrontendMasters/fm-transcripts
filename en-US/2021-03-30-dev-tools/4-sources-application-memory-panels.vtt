WEBVTT

1
00:00:00.410 --> 00:00:04.000
The sources tab, this is one that I
feel like it's kind of underrated.

2
00:00:05.100 --> 00:00:11.330
It's basically a full ID and so
over this course we'll learn how to do.

3
00:00:11.330 --> 00:00:14.128
We'll learn how to use the courses tab for
step through debugging,

4
00:00:14.128 --> 00:00:15.070
which is really cool.

5
00:00:15.070 --> 00:00:18.870
So instead of just console logging, we'll
be able to put a break point, we'll be

6
00:00:18.870 --> 00:00:23.060
able to pause the whole execution stack at
that break point and kind of move around.

7
00:00:23.060 --> 00:00:26.900
We can check the call stack, like how we
got there, what functions got called.

8
00:00:26.900 --> 00:00:30.401
We can keep an eye on certain variables,
like watch a variable and

9
00:00:30.401 --> 00:00:32.001
see how it changes over time.

10
00:00:32.001 --> 00:00:35.301
But we can also use this really
cool thing called work spaces,

11
00:00:35.301 --> 00:00:39.678
where we can drag our project into the dev
tools, and after we set it up correctly,

12
00:00:39.678 --> 00:00:43.530
everything that we edit will
actually persist to disk.

13
00:00:43.530 --> 00:00:46.841
So normally if you're in the elements tab,
and you're messing with the CSS,

14
00:00:46.841 --> 00:00:48.810
I don't know who's
gotten into this before.

15
00:00:48.810 --> 00:00:51.760
This happens me all the time, so
I'll be like working on design

16
00:00:51.760 --> 00:00:54.610
I'll go into my elements tab and
I'll get it perfect right.

17
00:00:54.610 --> 00:00:57.692
It's like the CSS look at the site
looks like exactly perfect, but

18
00:00:57.692 --> 00:00:59.830
I've been working for like an hour.

19
00:00:59.830 --> 00:01:01.331
When I'm ready to ship it, I'm like,

20
00:01:01.331 --> 00:01:03.470
I don't even remember what
all I changed at this point.

21
00:01:03.470 --> 00:01:06.758
Like I added so many classes and
I added so many selectors and styles like,

22
00:01:06.758 --> 00:01:09.210
it's really difficult to
figure out what you change.

23
00:01:09.210 --> 00:01:13.381
And so workspaces can be really cool cuz
you still get that instant feedback of

24
00:01:13.381 --> 00:01:15.578
working in the sources or elements tab.

25
00:01:15.578 --> 00:01:19.780
But you can actually hit like Ctrl S or
command S and it'll save it to disk, so

26
00:01:19.780 --> 00:01:22.160
we have a whole exercise on that for
later.

27
00:01:23.210 --> 00:01:27.934
You got the application tab, I usually
refer to this one is just storage as like

28
00:01:27.934 --> 00:01:29.650
a way of thinking about it.

29
00:01:29.650 --> 00:01:32.874
So this is where you'll come
probably primarily to look at all

30
00:01:32.874 --> 00:01:36.850
the different ways we have of like
caching and serving things locally.

31
00:01:36.850 --> 00:01:40.592
So that's like local storage,
session data, cookies, index db,

32
00:01:40.592 --> 00:01:42.840
all sorts of stuff like that.

33
00:01:42.840 --> 00:01:45.790
It's also the place that you come if
you have a progressive web app with

34
00:01:45.790 --> 00:01:47.080
a ServiceWorker.

35
00:01:47.080 --> 00:01:49.940
So if you have a service worker,
it also has a service worker tab,

36
00:01:49.940 --> 00:01:52.488
where you can see is there
a worker is it being registered,

37
00:01:52.488 --> 00:01:55.090
what it's doing all sorts
of stuff like that.

38
00:01:55.090 --> 00:01:59.756
It's also maybe most commonly
used to come into the storage and

39
00:01:59.756 --> 00:02:02.000
click clear all site data.

40
00:02:02.000 --> 00:02:05.308
That's probably what I use it for
the most right so when you're like,

41
00:02:05.308 --> 00:02:08.057
you know you're in a weird state and
you cache something or

42
00:02:08.057 --> 00:02:11.500
you're messing with sessions or
cookies and it's everything's bad.

43
00:02:11.500 --> 00:02:14.672
You just come in here click clear
site data, refresh the page and

44
00:02:14.672 --> 00:02:15.860
get a nice clean start.

45
00:02:17.910 --> 00:02:22.820
We've got the memory tab, so this one is
very specific to your memory consumption.

46
00:02:22.820 --> 00:02:26.003
But it's really cool, so
you can take a heap snapshot,

47
00:02:26.003 --> 00:02:30.110
which is like show how memory is
currently being used in my app.

48
00:02:30.110 --> 00:02:33.840
You can do a timeline so you can like
the profile or the performance page,

49
00:02:33.840 --> 00:02:36.345
you can record over time,
and you can do stuff and

50
00:02:36.345 --> 00:02:39.430
you can see what you're doing
that's using memory or not.

51
00:02:39.430 --> 00:02:43.548
And then there's this new tool which is
like probably one of the things I'm most

52
00:02:43.548 --> 00:02:46.323
excited about,
which is you can allocation sample.

53
00:02:46.323 --> 00:02:49.882
And that'll help you now that you
have a memory leak hypothetically,

54
00:02:49.882 --> 00:02:54.288
it'll help you figure out what job script
code you're using that's actually causing

55
00:02:54.288 --> 00:02:55.979
that memory leak.

56
00:02:55.979 --> 00:02:59.710
Because in the past it's been really
easy to find out that you have one and

57
00:02:59.710 --> 00:03:02.906
it's been much more difficult
to figure out why you have one.

