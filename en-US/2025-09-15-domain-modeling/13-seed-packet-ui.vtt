WEBVTT

1
00:00:00.480 --> 00:00:02.149
&gt;&gt; Mike North: Next,
let's turn our attention to the UI

2
00:00:02.149 --> 00:00:04.400
component that represents
the back of the seed packet.

3
00:00:05.840 --> 00:00:10.000
And we're gonna open up
SeedPacketBack.svelte.

4
00:00:10.000 --> 00:00:15.040
And you can see we've got
a bunch of stuff here.

5
00:00:15.040 --> 00:00:17.602
I've already added expires at here.

6
00:00:17.602 --> 00:00:22.480
We could change this to Expires At
to something like that.

7
00:00:22.480 --> 00:00:24.320
What else is interesting on here?

8
00:00:24.320 --> 00:00:26.410
Planting distance.

9
00:00:26.410 --> 00:00:32.844
So we could add another little piece of
UI here that's like planting distance.

10
00:00:32.844 --> 00:00:33.850
Is there already another one?

11
00:00:35.610 --> 00:00:36.650
Nope.

12
00:00:36.650 --> 00:00:38.970
So good distance.

13
00:00:42.250 --> 00:00:45.930
And this is always a number.

14
00:00:46.970 --> 00:00:49.690
So let's say it's always feet.

15
00:00:49.690 --> 00:00:51.130
And we should be able to go back.

16
00:00:52.730 --> 00:00:54.570
We should be able to start our server.

17
00:00:56.810 --> 00:01:02.090
Then this should start to appear
on the back of the seed packet.

18
00:01:02.090 --> 00:01:05.756
By start our server,
I mean not just the types package,

19
00:01:05.756 --> 00:01:08.570
the actual whole monorepo run NPM run dev.

20
00:01:13.370 --> 00:01:15.050
Sorry, it takes a little
second to come up.

21
00:01:19.540 --> 00:01:20.469
Interesting.

22
00:01:24.601 --> 00:01:25.460
What's going on here?

23
00:01:32.956 --> 00:01:36.500
Looks like we have
a validation failure here.

24
00:01:36.500 --> 00:01:41.868
So what we should do is look at
those request response shapes and

25
00:01:41.868 --> 00:01:46.224
see if this data that we're
threading through is in

26
00:01:46.224 --> 00:01:51.210
alignment with the API contract
between these two types.

27
00:01:51.210 --> 00:01:54.090
This is Zod at runtime, keeping us honest.

28
00:01:54.090 --> 00:01:56.850
And it's saying metadata planting distance.

29
00:01:59.170 --> 00:02:04.290
It's an invalid type like expected number,
received object.

30
00:02:06.290 --> 00:02:11.912
Now the reason for this is if we
look in our seed packet router,

31
00:02:11.912 --> 00:02:15.280
we've got planting distance here.

32
00:02:15.280 --> 00:02:16.062
And look at this.

33
00:02:16.062 --> 00:02:19.800
It's a distance object with a unit and
a value.

34
00:02:19.800 --> 00:02:24.523
And what's expected is a number here,
thankfully.

35
00:02:24.523 --> 00:02:27.756
Yep, I've got a little helper
function already built for us,

36
00:02:27.756 --> 00:02:29.720
convertDistanceToFeet.

37
00:02:29.720 --> 00:02:32.520
And if we hit save there, I suspect.

38
00:02:36.210 --> 00:02:40.290
Interesting, plantingDistance and
daysToHarvest undefined.

39
00:02:40.290 --> 00:02:42.130
Wait, let's look at these carefully.

40
00:02:43.650 --> 00:02:45.650
New requests there.

41
00:02:45.650 --> 00:02:49.210
So expected number, received,
undefined for days to harvest.

42
00:02:49.210 --> 00:02:50.610
Let's see if we can look at that one.

43
00:02:54.850 --> 00:02:56.290
Days to harvest.

44
00:02:56.290 --> 00:02:57.610
We didn't wire this one through.

45
00:02:57.610 --> 00:03:00.700
Let's just set this to 30 or something.

46
00:03:04.860 --> 00:03:06.700
That took care of that one.

47
00:03:06.700 --> 00:03:12.780
And now expected number, received
object for metadata planting distance.

48
00:03:14.780 --> 00:03:18.540
At this point,

49
00:03:18.540 --> 00:03:24.620
there's the response.

50
00:03:26.550 --> 00:03:27.670
Wait, what's going on here?

51
00:03:35.510 --> 00:03:38.430
Types of metadata.plantingDistance
are incompatible.

52
00:03:38.430 --> 00:03:39.030
We've got.

53
00:03:40.390 --> 00:03:43.750
All right, so
it wants the full value there.

54
00:03:46.630 --> 00:03:48.790
Let's keep pulling at this.

55
00:03:48.790 --> 00:03:51.070
So that makes the type happy.

56
00:03:51.070 --> 00:03:53.270
Maybe it was just the other
error that was in our way.

57
00:03:53.270 --> 00:03:53.870
Let's see.

58
00:03:56.350 --> 00:03:56.868
No.

59
00:04:04.085 --> 00:04:07.070
All right, let's track this down.

60
00:04:07.070 --> 00:04:11.070
So we are making this list
packets response contract.

61
00:04:11.070 --> 00:04:13.550
No, we're not making it happy yet.

62
00:04:13.550 --> 00:04:14.990
What's it telling us?

63
00:04:14.990 --> 00:04:17.470
Distance is not assignable to type number.

64
00:04:21.890 --> 00:04:23.410
It wants that to be a distance.

65
00:04:25.650 --> 00:04:28.050
Let me bump the TS server
just to make sure.

66
00:04:28.050 --> 00:04:30.130
I feel like I'm getting
conflicting information here.

67
00:04:31.890 --> 00:04:35.330
The types of metadata planting
distance are incompatible.

68
00:04:35.330 --> 00:04:37.330
Distance is not assignable to number.

69
00:04:40.450 --> 00:04:41.570
There's the distance.

70
00:04:44.540 --> 00:04:45.500
You know what we could do here?

71
00:04:47.340 --> 00:04:55.180
Satisfies SeedPacketMetadata, there.

72
00:04:55.180 --> 00:04:58.860
This is a great example of where the,
satisfies, keyword is really helpful.

73
00:04:58.860 --> 00:05:04.975
It doesn't actually change the type
like using the ADS keyword,

74
00:05:04.975 --> 00:05:10.548
but it does help sort of push
this error in quite a bit lower.

75
00:05:10.548 --> 00:05:12.220
Expected depth comes
from property planning.

76
00:05:12.220 --> 00:05:14.180
Distance was declared here.

77
00:05:14.180 --> 00:05:18.100
Distance is not assignable to numbers,
so it really does want a number.

78
00:05:18.100 --> 00:05:20.820
Is packet plantingDistance in the YAML?

79
00:05:23.300 --> 00:05:25.140
That's good question.

80
00:05:28.990 --> 00:05:31.460
No, I know what I'm doing here.

81
00:05:31.460 --> 00:05:32.740
Moving too fast.

82
00:05:32.740 --> 00:05:35.950
So all this function does is it.

83
00:05:35.950 --> 00:05:39.870
It normalizes the distance to feet.

84
00:05:39.870 --> 00:05:44.110
So if we do value right,
it still has a unit and a value here.

85
00:05:44.110 --> 00:05:47.750
So if we do value,
this should make everything happy.

86
00:05:47.750 --> 00:05:49.230
Yep.
And it does.

87
00:05:49.230 --> 00:05:53.740
So all we've done here is we've
taken the planting distance,

88
00:05:53.740 --> 00:05:58.592
whatever it is, in centimeters or
whatever, and we've converted

89
00:05:58.592 --> 00:06:04.250
it to an equivalent distance value
object that is expressed in feet.

90
00:06:04.250 --> 00:06:09.642
Then because our UI can operate
purely within the dimension foot,

91
00:06:09.642 --> 00:06:13.204
we're just passing this
back as a scalar and

92
00:06:13.204 --> 00:06:16.570
hopefully now when we turn this around.

93
00:06:16.570 --> 00:06:18.370
Yeah, we get two feet.

94
00:06:18.370 --> 00:06:22.063
And hard coding feet in there is
appropriate now because part of

95
00:06:22.063 --> 00:06:24.224
the contract between the back end and

96
00:06:24.224 --> 00:06:27.650
the front end is we're always
operating in terms of feet.

97
00:06:27.650 --> 00:06:30.330
And we'll get into why
in the next chapter.

