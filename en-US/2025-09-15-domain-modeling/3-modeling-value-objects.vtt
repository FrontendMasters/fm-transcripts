WEBVTT

1
00:00:00.240 --> 00:00:01.811
&gt;&gt; Mike North: Well,
let's take a step back now and

2
00:00:01.811 --> 00:00:03.600
think about how we want to model this.

3
00:00:03.600 --> 00:00:08.960
Like right now if we look at location,
it's sort of boring.

4
00:00:08.960 --> 00:00:13.133
Like it has a name, a region,
which could be like a province or

5
00:00:13.133 --> 00:00:15.640
a state in the US and it has a country.

6
00:00:15.640 --> 00:00:19.488
But there's nothing here that
deals with this concept of like

7
00:00:19.488 --> 00:00:22.600
answering the question
we're trying to answer.

8
00:00:22.600 --> 00:00:24.160
Like when can I put my plants outside?

9
00:00:24.160 --> 00:00:26.840
When is it going to be 50 degrees or
greater?

10
00:00:26.840 --> 00:00:29.800
So let's think about how we
would want to model this.

11
00:00:31.480 --> 00:00:33.240
Does anyone have any ideas?

12
00:00:33.240 --> 00:00:37.066
If we were to start with location and

13
00:00:37.066 --> 00:00:42.559
this has things on it like name,
what do we call it?

14
00:00:42.559 --> 00:00:43.059
Region.

15
00:00:45.720 --> 00:00:47.160
Oops, sorry.

16
00:00:47.160 --> 00:00:48.920
We've got name, we've got region.

17
00:00:50.120 --> 00:00:53.060
It's not gonna let me do
multiple bonded space things.

18
00:00:58.980 --> 00:01:02.900
But like what are the other things that
probably need to be part of this story?

19
00:01:05.540 --> 00:01:09.157
How would you all think about this?

20
00:01:09.157 --> 00:01:12.660
Well, a temperature doesn't exist yet,
so we need something like a temperature.

21
00:01:13.860 --> 00:01:15.380
What should a temperature have on it?

22
00:01:21.470 --> 00:01:22.270
&gt;&gt; Nikita: Unit.
&gt;&gt; Mona: Max.

23
00:01:24.510 --> 00:01:25.070
&gt;&gt; Nikita: Unit.

24
00:01:25.070 --> 00:01:26.422
&gt;&gt; Mike North: Unit?
&gt;&gt; Nikita: Yeah.

25
00:01:26.422 --> 00:01:28.037
&gt;&gt; Mike North: What kinds of
things should I have for unit?

26
00:01:28.037 --> 00:01:30.681
&gt;&gt; Nikita: Celsius and finite.

27
00:01:30.681 --> 00:01:34.550
&gt;&gt; Mike North: Yeah, you're looking
at like the API contract there,

28
00:01:34.550 --> 00:01:35.950
which is good.

29
00:01:35.950 --> 00:01:37.630
There's some existing software.

30
00:01:37.630 --> 00:01:39.962
Like unless you're starting greenfield and

31
00:01:39.962 --> 00:01:43.346
building something entirely new
that touches no other systems.

32
00:01:43.346 --> 00:01:48.745
Sometimes you can look for
clues in terms of what already exists,

33
00:01:48.745 --> 00:01:50.403
then I heard-
&gt;&gt; Nikita: Value.

34
00:01:50.403 --> 00:01:53.250
&gt;&gt; Mike North: Value, that's a number.

35
00:01:53.250 --> 00:01:57.730
Great, so we have that,
let's pretend I'm the gardener.

36
00:01:57.730 --> 00:01:59.570
I've asked for this.

37
00:01:59.570 --> 00:02:02.050
I want something that makes this work.

38
00:02:02.050 --> 00:02:03.490
I want this tool to work.

39
00:02:05.490 --> 00:02:09.664
And I hired a designer that made this for
me.

40
00:02:09.664 --> 00:02:13.579
&gt;&gt; Mona: That Interaction between
the date and the temperature.

41
00:02:13.579 --> 00:02:14.699
&gt;&gt; Mike North: The date and
the temperature.

42
00:02:17.419 --> 00:02:19.579
Say Mona, you're onto something.

43
00:02:19.579 --> 00:02:20.539
&gt;&gt; Mona: I'm not sure.

44
00:02:20.539 --> 00:02:23.499
I mean a min and
a max would be the start of it.

45
00:02:23.499 --> 00:02:24.259
&gt;&gt; Mike North: Absolutely.

46
00:02:24.259 --> 00:02:25.819
A min and a max.

47
00:02:25.819 --> 00:02:27.259
So what should we call this thing?

48
00:02:29.259 --> 00:02:29.899
&gt;&gt; Nikita: Limit.

49
00:02:31.019 --> 00:02:32.539
&gt;&gt; Mike North: A limit,
we could call it that.

50
00:02:34.299 --> 00:02:36.549
Is that the thing with the min and
the max or is it?

51
00:02:36.549 --> 00:02:38.343
Range.

52
00:02:38.343 --> 00:02:41.540
&gt;&gt; Mona: Range, range has min and max.

53
00:02:41.540 --> 00:02:44.300
&gt;&gt; Mike North: Sort of the upper and
the lower limit.

54
00:02:44.300 --> 00:02:49.416
So great, why don't we call
this a temperature range and

55
00:02:49.416 --> 00:02:52.300
we could say I heard min and max.

56
00:02:57.420 --> 00:03:05.110
Okay, and so clearly we've got
something here, we've got mine and max.

57
00:03:05.110 --> 00:03:09.079
So we'll represent those
with two arrows and

58
00:03:09.079 --> 00:03:13.883
it's not quite like a belongs
to because remember this

59
00:03:13.883 --> 00:03:18.631
here is probably,
&gt;&gt; Mike North: It's

60
00:03:18.631 --> 00:03:23.551
probably a value object like
temperature because I don't think we're

61
00:03:23.551 --> 00:03:28.630
gonna store 56.3 degrees Fahrenheit
in our database somewhere.

62
00:03:28.630 --> 00:03:33.352
It's probably just sort of something that
gets embedded on something stored in

63
00:03:33.352 --> 00:03:34.130
a database.

64
00:03:35.890 --> 00:03:38.770
I'm gonna make a nice little tag here.

65
00:03:39.890 --> 00:03:44.930
This we're gonna say is a value object and
make this a different color.

66
00:03:49.810 --> 00:03:53.090
All right, what about temperature range?

67
00:03:53.090 --> 00:03:55.410
Is that a value object or is it an entity?

68
00:03:56.460 --> 00:03:57.900
And I'm gonna check chat here.

69
00:04:00.140 --> 00:04:01.140
Range and location.

70
00:04:01.140 --> 00:04:01.640
Great.

71
00:04:02.700 --> 00:04:04.620
Yes, Santiago, you're on the right track.

72
00:04:04.620 --> 00:04:09.420
Entities are in the database and values
are embedded on things in the database.

73
00:04:09.420 --> 00:04:10.540
Temperature range.

74
00:04:10.540 --> 00:04:13.420
Is this something that will have an id?

75
00:04:13.420 --> 00:04:18.060
How would we articulate
this in spoken language?

76
00:04:19.500 --> 00:04:22.550
&gt;&gt; Mona: It would always be
associated with an entity.

77
00:04:22.550 --> 00:04:24.513
&gt;&gt; Mike North: I think so, right?

78
00:04:24.513 --> 00:04:26.270
This is sort of like
a weather report range.

79
00:04:26.270 --> 00:04:28.630
Like the low is.

80
00:04:28.630 --> 00:04:33.750
The low today is 58, and the high
apparently is 82 in Minneapolis today.

81
00:04:33.750 --> 00:04:37.796
So this is probably also a value object,

82
00:04:37.796 --> 00:04:44.230
it has to be embedded on something,
and, so can we just do this?

83
00:04:46.070 --> 00:04:49.667
Can we say a location
has a temperature range,

84
00:04:49.667 --> 00:04:53.580
like Minneapolis has this low and
this high.

85
00:04:53.580 --> 00:04:57.740
Does that get us all the way to
being able to estimate a date?

86
00:04:57.740 --> 00:04:58.300
Pardon?

87
00:04:58.300 --> 00:05:00.941
&gt;&gt; Nikita: Some measure of
time like season or month?

88
00:05:00.941 --> 00:05:02.762
&gt;&gt; Mike North: We need some
measure of time, right?

89
00:05:02.762 --> 00:05:06.366
We need to know at this point,

90
00:05:06.366 --> 00:05:10.559
here's the expected min and max.

91
00:05:10.559 --> 00:05:13.500
And at another point,
here's the expected min and max.

92
00:05:13.500 --> 00:05:16.262
That would almost let us think
of this as a curve, right?

93
00:05:16.262 --> 00:05:17.970
Where we're trying to find.

94
00:05:17.970 --> 00:05:22.267
If you think of the temperature curve
throughout the year, let's say, and

95
00:05:22.267 --> 00:05:26.850
we want to have a threshold where it's
above 50 degrees starting on this date.

96
00:05:26.850 --> 00:05:30.930
Where does my line intersect
with the temperature curve?

97
00:05:30.930 --> 00:05:33.410
Well, we need some measurement of time.

98
00:05:33.410 --> 00:05:40.850
Let's call this a monthly temperature.

99
00:05:43.420 --> 00:05:44.620
Then this will refer.

100
00:05:44.620 --> 00:05:52.940
Let's just say this is like a month and
a range.

101
00:05:56.540 --> 00:06:01.138
This is going to end up being an entity.

102
00:06:06.917 --> 00:06:09.269
&gt;&gt; Mike North: Right,
this will store in a database,

103
00:06:09.269 --> 00:06:12.660
you could imagine us reading
from some data source.

104
00:06:12.660 --> 00:06:16.225
We have our locations,
we get our temperature data, and

105
00:06:16.225 --> 00:06:19.780
then at runtime we're
trying to figure out.

106
00:06:19.780 --> 00:06:26.420
All right, you've asked for this 50 degree
temperature, where exactly does that fit?

107
00:06:26.420 --> 00:06:27.620
Really?

108
00:06:27.620 --> 00:06:29.220
It's going to be something like this.

109
00:06:30.740 --> 00:06:32.340
Let me rearrange these slightly.

110
00:06:36.750 --> 00:06:38.953
This is a nice quick and
dirty tool here, but

111
00:06:38.953 --> 00:06:41.710
sometimes the arrows
get a little bit weird.

112
00:06:41.710 --> 00:06:48.750
Okay, so monthly temp has
a temperature range, which sort of.

113
00:06:48.750 --> 00:06:51.612
You can think of it as embedding
a temperature range, and

114
00:06:51.612 --> 00:06:53.710
that embeds two temperatures.

115
00:06:53.710 --> 00:06:57.870
What's the relationship between
location and monthly temperature?

116
00:06:57.870 --> 00:06:59.870
It seems like there's a relationship here.

117
00:07:02.160 --> 00:07:03.120
Is it one to one?

118
00:07:03.120 --> 00:07:04.259
&gt;&gt; Nikita: Has many.

119
00:07:04.259 --> 00:07:06.400
&gt;&gt; Mike North: Has many, has many.

120
00:07:08.000 --> 00:07:09.360
We can represent that.

121
00:07:11.680 --> 00:07:13.360
Let's say it's one or many.

122
00:07:13.360 --> 00:07:17.600
Really, we're in trouble if we have
less than 12 months of data here.

123
00:07:17.600 --> 00:07:22.646
A location which is an entity
has many monthly temperatures,

124
00:07:22.646 --> 00:07:29.450
each of which embeds a temperature range,
each of which embeds two temperatures.

125
00:07:31.210 --> 00:07:34.450
&gt;&gt; Nikita: You're not going
to store two temperatures.

126
00:07:34.450 --> 00:07:38.706
You're going to store like Kelvin, for
example, and then derive Celsius and

127
00:07:38.706 --> 00:07:41.050
Fahrenheit from that for display.

128
00:07:41.050 --> 00:07:44.010
&gt;&gt; Mike North: That's,
that's a very good, very good point there.

129
00:07:44.010 --> 00:07:48.330
Like, we have multiple ways we
could represent this data and this.

130
00:07:48.330 --> 00:07:52.050
You're getting into what's
called normalization, right?

131
00:07:52.050 --> 00:07:54.520
Let's say we got this temperature
data from different sources.

132
00:07:54.520 --> 00:07:58.114
Some of them are Fahrenheit,
some of them are Celsius,

133
00:07:58.114 --> 00:08:00.637
some of them are Kelvin, which maybe,

134
00:08:00.637 --> 00:08:06.880
do you think Kelvin is what a vegetable
gardener is probably thinking in terms of.

135
00:08:06.880 --> 00:08:08.965
&gt;&gt; Nikita: You don't have negative
numbers with Kelvin, right?

136
00:08:08.965 --> 00:08:09.729
&gt;&gt; Mike North: Right, right,

137
00:08:09.729 --> 00:08:12.800
that's where absolute zero is
the lowest possible temperature.

138
00:08:12.800 --> 00:08:14.400
That's zero Kelvin.

139
00:08:15.440 --> 00:08:18.092
You don't see the kind of
thing on a weather report, but

140
00:08:18.092 --> 00:08:21.460
it's totally a valid way
to represent temperature.

141
00:08:21.460 --> 00:08:25.380
So we have to decide how are we
storing this information and

142
00:08:25.380 --> 00:08:28.420
then how are we representing it in the ui.

143
00:08:28.420 --> 00:08:33.420
Ultimately, I see I get a little like,
Fahrenheit, Celsius, thing here.

144
00:08:33.420 --> 00:08:38.549
And presumably that's gonna define,
I noticed when I hit this,

145
00:08:38.549 --> 00:08:42.380
look at the little label here,
it's changing.

146
00:08:42.380 --> 00:08:45.300
So at the very least,
this is how I'm describing my input.

147
00:08:45.300 --> 00:08:49.001
Presumably I want to see my output in,
in the temperature I asked for,

148
00:08:49.001 --> 00:08:51.150
like in the units I asked for.

149
00:08:51.150 --> 00:08:53.310
So that is certainly
something to consider.

150
00:08:53.310 --> 00:08:57.058
But, like, where it would matter most
is if you wanted to have charts or

151
00:08:57.058 --> 00:08:59.790
something that showed
that temperature curve.

152
00:08:59.790 --> 00:09:03.356
If you're storing data sometimes in
Fahrenheit, sometimes in Celsius,

153
00:09:03.356 --> 00:09:06.016
sometimes in Kelvin,
you're creating a lot of work for

154
00:09:06.016 --> 00:09:08.070
like anything that is
built on top of this.

155
00:09:08.070 --> 00:09:10.910
They will have to perform this,
like, normalization task.

156
00:09:10.910 --> 00:09:14.357
Right, they'll have to translate
it into something that's very

157
00:09:14.357 --> 00:09:18.740
consistent across all of the locations,
irrespective of what the data source was.

158
00:09:20.900 --> 00:09:23.540
Okay, let's jump in.

159
00:09:24.580 --> 00:09:30.100
I buy that this, as your resident
gardener, I would say this makes sense.

160
00:09:31.220 --> 00:09:35.790
I'm looking for a day I don't need,
hour by hour, minute by minute,

161
00:09:35.790 --> 00:09:38.980
when the temperature is
going to be what it is.

162
00:09:38.980 --> 00:09:43.823
Especially if I'm in January trying to
figure out when do I start my plants,

163
00:09:43.823 --> 00:09:46.624
like there's no way
like last year's day by

164
00:09:46.624 --> 00:09:50.210
day temperature ranges
are not going to be accurate.

165
00:09:50.210 --> 00:09:51.690
I want the monthly averages.

166
00:09:51.690 --> 00:09:59.010
That seems fine, right, it's a prediction
with some error bars around it at best.

167
00:09:59.010 --> 00:10:00.370
&gt;&gt; Nikita: I'm not really following.

168
00:10:00.370 --> 00:10:03.759
What makes monthly temp different
than temperature range,

169
00:10:03.759 --> 00:10:06.690
thus that we want to make it
an entity versus a value.

170
00:10:07.970 --> 00:10:08.470
&gt;&gt; Mike North: Right.

171
00:10:09.540 --> 00:10:11.220
We totally could do that.

172
00:10:11.220 --> 00:10:12.260
We could say.

173
00:10:14.820 --> 00:10:15.620
That's a very.

174
00:10:15.620 --> 00:10:16.660
That's a very good point.

175
00:10:17.860 --> 00:10:19.620
Here's an alternate representation.

176
00:10:24.100 --> 00:10:27.780
Does anyone see anything better or
worse about this?

177
00:10:30.500 --> 00:10:31.780
I'll give you a better thing.

178
00:10:33.620 --> 00:10:39.590
It's one less thing to build,
so by default it's better.

179
00:10:42.790 --> 00:10:43.910
Is there a downside?

180
00:10:43.910 --> 00:10:45.738
How would you talk to your user and

181
00:10:45.738 --> 00:10:49.110
understand whether you should
do what we modeled before?

182
00:10:49.110 --> 00:10:49.990
Or this?

183
00:10:49.990 --> 00:10:53.390
How would you answer that question
talking to your customer?

184
00:10:53.390 --> 00:10:57.106
Let's say you're the tech
lead on the team and

185
00:10:57.106 --> 00:11:02.470
it's up to you to figure out
which is the right pattern.

186
00:11:02.470 --> 00:11:04.150
Are there some questions you might ask.

187
00:11:04.150 --> 00:11:07.670
&gt;&gt; Nikita: If there are other places
you might use temperature range?

188
00:11:07.670 --> 00:11:10.526
You're gonna reuse that type for
temperature range and

189
00:11:10.526 --> 00:11:13.670
not to recreate a new value object for
temperature range?

190
00:11:13.670 --> 00:11:14.950
&gt;&gt; Mike North: That's absolutely true.

191
00:11:17.590 --> 00:11:18.150
Could be.

192
00:11:19.750 --> 00:11:24.296
At this point it comes down to how
confident are you that you're going to run

193
00:11:24.296 --> 00:11:25.670
into that?

194
00:11:25.670 --> 00:11:32.080
Or is it okay to start here and
tease out that abstraction in the future?

195
00:11:32.080 --> 00:11:34.269
And I mean, at this point,

196
00:11:34.269 --> 00:11:40.000
temperature range doesn't
really add a lot of value here.

197
00:11:40.000 --> 00:11:44.972
&gt;&gt; Nikita: Yeah, my question was more
not like consolidating those two types,

198
00:11:44.972 --> 00:11:49.680
but where the line between a value and
an entity really lives.

199
00:11:49.680 --> 00:11:54.458
Because obviously I think you don't
want to be storing temperatures as

200
00:11:54.458 --> 00:11:58.690
like individual,
like columns in a database, their own IDs.

201
00:11:58.690 --> 00:12:01.210
It doesn't make any sense,
especially if they're afloat.

202
00:12:01.210 --> 00:12:04.508
But you get to a point with
like temperature range,

203
00:12:04.508 --> 00:12:07.130
like how granular are the locations?

204
00:12:07.130 --> 00:12:08.090
And do you really.

205
00:12:08.090 --> 00:12:12.350
If each location is gonna have its own
range, should that be an entity or

206
00:12:12.350 --> 00:12:14.090
should that be a value?

207
00:12:14.090 --> 00:12:17.314
Because that kind of seems like
an entity should maybe be reused, but

208
00:12:17.314 --> 00:12:18.490
I'm not entirely sure.

209
00:12:20.410 --> 00:12:23.334
&gt;&gt; Mike North: All great,
all great points to think about.

210
00:12:23.334 --> 00:12:27.000
Do you think we need this here?

211
00:12:27.000 --> 00:12:28.840
This one to many range?

212
00:12:28.840 --> 00:12:30.680
Like, sorry, one to many relationship?

213
00:12:33.320 --> 00:12:38.040
Like, I would argue any valid solution
has to have this relationship.

214
00:12:38.040 --> 00:12:43.400
Like locations have temperature
information at a point in time.

215
00:12:44.840 --> 00:12:47.580
So no matter what, we need this.

216
00:12:47.580 --> 00:12:52.569
I think it's kind of, at this point
we're just really discussing kind of

217
00:12:52.569 --> 00:12:57.477
like the structure of whether there's
this additional level of one more

218
00:12:57.477 --> 00:13:00.540
value object that represents this range.

219
00:13:00.540 --> 00:13:04.106
It's almost like a tuple of
temperatures that represent, like,

220
00:13:04.106 --> 00:13:05.740
the low and the high.

221
00:13:05.740 --> 00:13:09.740
We could have other places
where temperatures exist.

222
00:13:09.740 --> 00:13:13.250
Like, I don't know,
maybe the tomato seed packet has, like,

223
00:13:13.250 --> 00:13:16.820
minimum outdoor temperature and
it's just 50 degrees.

224
00:13:16.820 --> 00:13:19.060
Maybe there are times where we have.

225
00:13:19.060 --> 00:13:21.460
We'll find either a temperature or
a temperature range.

226
00:13:21.460 --> 00:13:26.100
Some seed packets say 50 degrees,
and some say between 45 and 55.

227
00:13:26.100 --> 00:13:30.437
But at this point,
I think this is a simple representation,

228
00:13:30.437 --> 00:13:34.180
as kind of as simple as we
can get away with for now.

229
00:13:34.180 --> 00:13:37.112
And we should bias for that, right?

230
00:13:37.112 --> 00:13:39.136
There's sort of the role of find two or

231
00:13:39.136 --> 00:13:42.270
three places before you
tease out an abstraction.

232
00:13:42.270 --> 00:13:47.257
Otherwise you can get into attempting
to model all of the details of

233
00:13:47.257 --> 00:13:48.750
the real world.

234
00:13:48.750 --> 00:13:51.710
And that's sometimes a trap.

235
00:13:51.710 --> 00:13:54.590
You can end up overbuilding things for
that purpose.

236
00:13:54.590 --> 00:13:58.430
Nikita asks, should an entity have an ID?

237
00:13:58.430 --> 00:14:00.990
Does it make sense for
temperature ranges to have IDs?

238
00:14:00.990 --> 00:14:02.990
You know, I forgot about this.

239
00:14:05.800 --> 00:14:07.360
Entities should certainly have IDs.

240
00:14:07.360 --> 00:14:08.080
We need an ID.

241
00:14:08.080 --> 00:14:08.580
There.

242
00:14:10.200 --> 00:14:13.320
I was sort of taking that as a given,
but we should list it out.

243
00:14:13.320 --> 00:14:18.764
And then in this case, monthly
temperature ranges should have an id or

244
00:14:18.764 --> 00:14:21.640
string, whatever we choose to use.

