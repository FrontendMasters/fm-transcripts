WEBVTT

1
00:00:00.720 --> 00:00:01.840
&gt;&gt; Mike North.: So
now let's work on the plant.

2
00:00:01.840 --> 00:00:03.680
We need to model this as well.

3
00:00:03.680 --> 00:00:09.080
Or we already have a plant here so
we can look at this.

4
00:00:09.080 --> 00:00:16.480
We've got a seed packet, accent, color,
an icon, path, bunch of good stuff here.

5
00:00:16.480 --> 00:00:22.238
And it turns out that when this app boots,
if you look at the logs,

6
00:00:22.238 --> 00:00:26.240
we create a plant for
every seed packet here.

7
00:00:27.360 --> 00:00:31.960
So, you could think of these
as a little different than

8
00:00:31.960 --> 00:00:36.560
the way we've sort of set
up our domain model, right?

9
00:00:36.560 --> 00:00:38.880
Here we've said a plant has a position.

10
00:00:41.200 --> 00:00:46.018
Really what I've done here is I've said,
all right, seed packet refers to

11
00:00:46.018 --> 00:00:50.640
a plant kind of like this, and
then we've got a plant placement here.

12
00:00:50.640 --> 00:00:54.451
Sort of what this lets us do is if we
wanted to, and I think I'll continue with

13
00:00:54.451 --> 00:00:57.860
this course since I've got
the beginnings of the solution anyway.

14
00:01:00.580 --> 00:01:05.620
What it would let you do is say
seed packet can be seed packet.

15
00:01:05.620 --> 00:01:11.091
We have a freestanding
domain model here where,

16
00:01:11.091 --> 00:01:14.020
sorry, it's zero to many.

17
00:01:15.460 --> 00:01:19.919
Where this is, sort of, entirely
self contained, where we could say

18
00:01:19.919 --> 00:01:24.540
there's a chance plant, we might
need to model different things here.

19
00:01:26.140 --> 00:01:30.345
It's very similar, but we're gonna
have a little bit of duplication here,

20
00:01:30.345 --> 00:01:31.260
if I'm honest.

21
00:01:34.300 --> 00:01:39.110
The key difference is gonna be we have
something that represents the core data

22
00:01:39.110 --> 00:01:40.294
about the plant and

23
00:01:40.294 --> 00:01:44.660
then we've got something that refers
to it as being in an XY position.

24
00:01:44.660 --> 00:01:47.853
And what this lets you do is you can
kind of like clone the plant and

25
00:01:47.853 --> 00:01:49.400
you end up with another plant.

26
00:01:49.400 --> 00:01:54.360
But this still represents what
we were describing before.

27
00:01:54.360 --> 00:02:01.560
Like there are many plants that refer to a
seed packet, so we can carry that through.

28
00:02:01.560 --> 00:02:07.015
If we look at plant,
it still refers to a seed packet,

29
00:02:07.015 --> 00:02:12.853
we will just need something
that it's like a placement.

30
00:02:14.397 --> 00:02:20.690
&gt;&gt; Mike North.: And we're just
gonna grab bed as a starting point.

31
00:02:22.370 --> 00:02:26.158
And this will be plant placement.

32
00:02:39.740 --> 00:02:42.320
&gt;&gt; Mike North.: And this once,
we want to refer to a plant.

33
00:02:54.140 --> 00:02:55.434
&gt;&gt; Mike North.: So we're saying on plant,

34
00:02:55.434 --> 00:02:57.980
I'm going to introduce this
concept of placements.

35
00:03:01.340 --> 00:03:05.190
We don't need width and height, so
let's finish that relationship there.

36
00:03:05.190 --> 00:03:11.190
Over here we're gonna say, no,
I think we actually got it here.

37
00:03:12.790 --> 00:03:16.630
Presentation, we've already got
the many to one with the seed packet.

38
00:03:16.630 --> 00:03:19.670
You know what, we can just use plant here.

39
00:03:19.670 --> 00:03:21.030
I'm gonna back this up.

40
00:03:21.030 --> 00:03:24.630
I like Yarl's domain models
a little bit better.

41
00:03:24.630 --> 00:03:29.270
So we still have the concept of a seed
packet referring to many plants.

42
00:03:30.650 --> 00:03:35.537
We're just going to have to get this right
as we feed it up to the UI that wants to

43
00:03:35.537 --> 00:03:37.961
see this in terms of item placements.

44
00:03:37.961 --> 00:03:42.010
What we're missing on plant though
is some concept of a coordinate.

45
00:03:43.850 --> 00:03:45.930
I don't see something here yet.

46
00:03:45.930 --> 00:03:49.660
All right, no problem,

47
00:03:49.660 --> 00:03:54.634
we already have a value object for

48
00:03:54.634 --> 00:03:59.263
this column, xy coordinate.

49
00:04:01.302 --> 00:04:05.940
&gt;&gt; Mike North.: Position is xy coordinate.

50
00:04:05.940 --> 00:04:07.140
So that's the xy.

51
00:04:08.500 --> 00:04:09.620
I don't see anything here.

52
00:04:13.540 --> 00:04:15.060
&gt;&gt; Mike North.: Sorry,
I'm going to get rid of this too.

53
00:04:16.100 --> 00:04:21.029
I don't see anything here that relates to
like this plate belonging to a bed, so

54
00:04:21.029 --> 00:04:22.290
we need to add that.

55
00:04:25.570 --> 00:04:27.010
That's more of a relationship.

56
00:04:27.010 --> 00:04:30.559
I actually see everything's column,
column, column, except for this, so

57
00:04:30.559 --> 00:04:31.490
we'll add it here.

58
00:04:32.850 --> 00:04:38.290
And this is similar, it's also gonna be.

59
00:04:39.410 --> 00:04:40.370
Let's think about this.

60
00:04:40.370 --> 00:04:43.810
Is this many to one, one bed, many plants.

61
00:04:43.810 --> 00:04:44.310
Yep.

62
00:04:47.660 --> 00:04:51.420
&gt;&gt; Mike North.: Bed, bed, bed.

63
00:04:52.780 --> 00:04:59.820
And then we'll also call it plants.

64
00:05:01.580 --> 00:05:03.580
&gt;&gt; Seth.: Isn't that a one to many?

65
00:05:08.620 --> 00:05:12.940
&gt;&gt; Mike North.: So
this is the other side of a one to many.

66
00:05:12.940 --> 00:05:14.620
That's why we said many to one.

67
00:05:15.680 --> 00:05:19.520
Sorry Seth, I take your
suggestion right to heart here.

68
00:05:20.640 --> 00:05:22.640
There's going to be a one
to many on the other side.

69
00:05:22.640 --> 00:05:28.068
So when we do bed, we gotta do

70
00:05:28.068 --> 00:05:33.446
OneToMany,
&gt;&gt; Mike North.: Plant.

71
00:05:39.600 --> 00:05:42.097
&gt;&gt; Mike North.: And
how do we fetch that relationship bed?

72
00:05:48.790 --> 00:05:50.070
&gt;&gt; Mike North.: Kind of like that.

73
00:05:50.070 --> 00:05:55.181
So we've got a many to one
because the garden above this bed

74
00:05:55.181 --> 00:06:01.670
has many of me the beds, and then I,
the bed have many plants below me.

75
00:06:01.670 --> 00:06:06.710
So the first word here is always like
what are you in this relationship?

76
00:06:08.800 --> 00:06:12.912
And there's something else
we had to wire up here.

77
00:06:12.912 --> 00:06:19.040
No, I think we got it many to one and
then we've got many to one here as well.

78
00:06:19.040 --> 00:06:24.320
So you can think of plant as
almost being like a many.

79
00:06:24.320 --> 00:06:27.623
It's sort of a,
think of it almost like an edge

80
00:06:27.623 --> 00:06:32.720
in a many to many relationship
between seed packets and raised beds.

81
00:06:32.720 --> 00:06:38.474
Like many seeds of a given type
can go into single raised bed and

82
00:06:38.474 --> 00:06:45.670
a raised bed can have plants that came
from many different kinds of seeds.

83
00:06:45.670 --> 00:06:51.670
So this is really like that join table but
with extra data attached to it.

84
00:06:52.950 --> 00:06:57.871
Great, now let's see if we can wire
this up in our API contract to feed it

85
00:06:57.871 --> 00:06:59.110
back up to the UI.

86
00:07:02.752 --> 00:07:05.723
Actually we got to go back
to our garden service and

87
00:07:05.723 --> 00:07:08.070
let's create a couple plants in here.

88
00:07:11.670 --> 00:07:14.550
So we've got a six by six raised bed.

89
00:07:17.590 --> 00:07:22.968
We're gonna need a plant repo,

90
00:07:25.299 --> 00:07:29.803
&gt;&gt; Mike North.: And import that, and then

91
00:07:29.803 --> 00:07:36.562
we're going to say plantRepo.create

92
00:07:36.562 --> 00:07:41.886
satisfies deep partial land,

93
00:07:41.886 --> 00:07:46.812
and what needs to go in here?

94
00:07:46.812 --> 00:07:53.408
Position,
&gt;&gt; Mike North.: X and Y are zero, the bed.

95
00:08:06.190 --> 00:08:09.230
&gt;&gt; Mike North.: We need an accent color.

96
00:08:09.230 --> 00:08:15.110
So I think what we want to do
here is let's hard code this for

97
00:08:15.110 --> 00:08:19.310
now and
then we can pull it from real data.

98
00:08:20.670 --> 00:08:21.696
We'll make this bright red.

99
00:08:28.590 --> 00:08:29.643
&gt;&gt; Mike North.: There's our accent color.

100
00:08:35.470 --> 00:08:42.510
&gt;&gt; Mike North.: And you know what, maybe
we should just grab it from a seed packet.

101
00:08:44.280 --> 00:08:45.125
Yeah, that's what we should do.

102
00:08:51.080 --> 00:08:53.480
&gt;&gt; Mike North.: That has all
the data that we kind of want here.

103
00:08:57.800 --> 00:09:01.040
So what we can do is say we've
got our seed packet repo.

104
00:09:01.040 --> 00:09:06.282
We could say seed = seed repo, or

105
00:09:06.282 --> 00:09:14.726
SeedPacketRepo.findOne where: id is,
and then.

106
00:09:22.630 --> 00:09:24.110
&gt;&gt; Mike North.: Or let's not use the id.

107
00:09:24.110 --> 00:09:26.870
Let's say find where the.

108
00:09:28.390 --> 00:09:29.808
Let me get rid of this so

109
00:09:29.808 --> 00:09:33.336
we're not scrolling through
a tiny little slit there.

110
00:09:39.310 --> 00:09:40.990
&gt;&gt; Mike North.: I just want something
that'll survive the reloads.

111
00:09:40.990 --> 00:09:42.670
&gt;&gt; Seth.: Category tomato.

112
00:09:42.670 --> 00:09:44.550
&gt;&gt; Mike North.: Yeah,
category is tomatoes.

113
00:09:44.550 --> 00:09:45.950
And we'll just grab the first one.

114
00:09:45.950 --> 00:09:47.630
I like that.

115
00:09:47.630 --> 00:09:51.950
Find one where category is tomato.

116
00:09:54.990 --> 00:09:57.386
And that we probably need to await,
indeed.

117
00:10:12.200 --> 00:10:16.929
&gt;&gt; Mike North.: Great, so
we've covered that case and

118
00:10:16.929 --> 00:10:21.946
now here we can say seed.presentation,

119
00:10:21.946 --> 00:10:25.400
accentColor and icon path.

120
00:10:29.690 --> 00:10:33.130
And we can add a whole bunch
of other informationt.

121
00:10:33.130 --> 00:10:37.610
Variant, we can say seed.category.

122
00:10:37.610 --> 00:10:40.250
Name, we can say seed.name.

123
00:10:44.890 --> 00:10:46.730
&gt;&gt; Seth.: We need to await it as well.

124
00:10:46.730 --> 00:10:47.770
&gt;&gt; Mike North.: We need to what?

125
00:10:47.770 --> 00:10:48.570
&gt;&gt; Seth.: Await the.

126
00:10:49.690 --> 00:10:53.891
&gt;&gt; Mike North.: Not on the create, because
this is just kind of creating it in memory

127
00:10:53.891 --> 00:10:56.780
and then we have a separate
step to persist it.

128
00:10:56.780 --> 00:11:00.830
So this is what would allow you to say,
I'm gonna create a bunch of things and

129
00:11:00.830 --> 00:11:04.820
I want to maybe as one transaction,
persist them all at the same time.

130
00:11:04.820 --> 00:11:08.020
&gt;&gt; Seth.: Why wouldn't we just
relate that plant to the seed?

131
00:11:09.780 --> 00:11:10.840
&gt;&gt; Mike North.: Yeah, [CROSSTALK].

132
00:11:10.840 --> 00:11:13.078
&gt;&gt; Seth.: Duplicating all
this data in the data.

133
00:11:13.078 --> 00:11:14.420
&gt;&gt; Mike North.: You're absolutely right.

134
00:11:14.420 --> 00:11:15.540
Let's do that.

135
00:11:15.540 --> 00:11:20.320
So we've already got presentation and
planting distance and description.

136
00:11:20.320 --> 00:11:24.320
Yeah, I like that, accent color.

137
00:11:25.600 --> 00:11:26.880
Certainly need the bed.

138
00:11:26.880 --> 00:11:28.840
I think it really just comes down to this,
right?

139
00:11:28.840 --> 00:11:30.200
&gt;&gt; Seth.: Coordinates and
the relationships.

140
00:11:30.200 --> 00:11:30.700
&gt;&gt; Mike North.: That's great.

141
00:11:35.680 --> 00:11:38.259
&gt;&gt; Mike North.: We've got the bed, we've
got the seed, we've got the position.

142
00:11:44.490 --> 00:11:46.170
&gt;&gt; Mike North.: And
we're not using this because.

143
00:11:48.010 --> 00:11:51.693
Well, first let's save that bed up here.

144
00:12:00.810 --> 00:12:03.290
&gt;&gt; Mike North.: So we've got this
is the persistent version of bed.

145
00:12:03.290 --> 00:12:06.330
Really, this is the pattern I'd use,
for real.

146
00:12:07.610 --> 00:12:09.801
Something like this, where you're like,

147
00:12:09.801 --> 00:12:12.590
I've got one version of that
that's sort of my params.

148
00:12:12.590 --> 00:12:16.710
And then here we're saving it.

149
00:12:17.830 --> 00:12:20.310
&gt;&gt; Seth.: Rename the bed one there.

150
00:12:20.310 --> 00:12:21.590
&gt;&gt; Mike North.: Yeah, thanks.

151
00:12:22.710 --> 00:12:25.511
And so this it's just gonna
get its id populated and

152
00:12:25.511 --> 00:12:30.550
all of the things that sort of happen
when it's really stored in the database.

153
00:12:30.550 --> 00:12:32.790
And then down here we've got bed.

154
00:12:34.870 --> 00:12:41.540
We can make this even slicker,
call this seed packet.

155
00:12:42.740 --> 00:12:43.940
So we can even do that.

156
00:12:45.540 --> 00:12:47.593
And now we just need to persist, plant1.

157
00:13:00.580 --> 00:13:05.310
&gt;&gt; Mike North.: This is, wait, cool.

158
00:13:06.590 --> 00:13:07.746
Just checking to make sure.

159
00:13:07.746 --> 00:13:11.950
Yep, we can get rid of all this crap here
cuz the seed is the source of truth here.

160
00:13:13.870 --> 00:13:14.590
I love it.

161
00:13:15.630 --> 00:13:19.070
And looking at our logs again,
make sure that everything seems copacetic.

162
00:13:22.670 --> 00:13:24.030
SQLite constraint.

163
00:13:27.310 --> 00:13:34.980
Plant position x not set.

164
00:13:37.140 --> 00:13:38.180
What could this be?

165
00:13:38.180 --> 00:13:40.175
I see we've got position X, position Y,

166
00:13:40.175 --> 00:13:42.860
these are the only parameters
that are being parsed in.

167
00:13:42.860 --> 00:13:48.352
The first thing I would check
is in our app or data source,

168
00:13:48.352 --> 00:13:54.660
XY coordinates in there,
plants in there, so that makes sense.

169
00:13:57.390 --> 00:14:03.022
Position, that is xy coordinate,
which is an entity.

170
00:14:18.430 --> 00:14:19.710
&gt;&gt; Mike North.: This is quite odd.

171
00:14:22.600 --> 00:14:24.120
Let's check x, y coordinate.

172
00:14:24.120 --> 00:14:25.880
Make sure that this is set up right.

173
00:14:25.880 --> 00:14:30.520
X is a number, Y is a number, can't
really get too much simpler than that.

174
00:14:31.640 --> 00:14:32.920
Hi, folks.

175
00:14:32.920 --> 00:14:34.640
Figured out what the problem
was pretty quickly.

176
00:14:34.640 --> 00:14:40.085
So you may have noticed that I mentioned
my starting point code had this concept

177
00:14:40.085 --> 00:14:45.365
of a plant that was sort of very redundant
with this concept of a seed packet,

178
00:14:45.365 --> 00:14:49.738
where on boot, I don't know if
you'd been paying attention to

179
00:14:49.738 --> 00:14:54.440
sort of the scroll of logging
of object creation here.

180
00:14:54.440 --> 00:15:00.200
A plant is created for every seed packet
that is read from that seed's YML file.

181
00:15:00.200 --> 00:15:04.301
But now that we've stated well,
plants have a position and

182
00:15:04.301 --> 00:15:06.280
they refer to a seed packet.

183
00:15:06.280 --> 00:15:10.336
And you can think of a plant as
representing the placement of a seed

184
00:15:10.336 --> 00:15:14.270
in a bed, which that is some
excellent domain modeling there.

185
00:15:16.830 --> 00:15:20.756
A plant represents a placement of seed in
a bed is something that gardeners would

186
00:15:20.756 --> 00:15:22.047
certainly understand and

187
00:15:22.047 --> 00:15:24.990
agree with that that is the correct
way to think about this.

188
00:15:26.110 --> 00:15:27.710
We're going to have to disable that code.

189
00:15:27.710 --> 00:15:32.990
So we have this file in our server module,
it's called seed-db.

190
00:15:32.990 --> 00:15:37.762
And you'll see here's where we, you know,

191
00:15:37.762 --> 00:15:42.920
we find all of the seed packets and
this happens.

192
00:15:42.920 --> 00:15:44.225
This whole function here,

193
00:15:44.225 --> 00:15:47.960
in fact is like kind of what we
have to disable generate plants.

194
00:15:47.960 --> 00:15:49.000
So we'll disable that.

195
00:15:49.000 --> 00:15:51.240
We'll find where it's used down here.

196
00:15:51.240 --> 00:15:54.883
And like, instead of after loading
the seeds into the database,

197
00:15:54.883 --> 00:15:56.760
we generate one plant per seed.

198
00:15:56.760 --> 00:16:01.890
We're now saying this concept of
a plant models the x, y coordinate

199
00:16:01.890 --> 00:16:07.650
of where we're putting our planting,
right, our seed that has grown up.

200
00:16:07.650 --> 00:16:09.212
And so if we hit save there and

201
00:16:09.212 --> 00:16:13.970
we can get rid of some of these imports
because we don't need them anymore.

202
00:16:13.970 --> 00:16:16.450
And we go back to our plant service.

203
00:16:16.450 --> 00:16:19.130
There's also, like,
generate plant from seed packet.

204
00:16:19.130 --> 00:16:20.960
We can get rid of that as well,

205
00:16:20.960 --> 00:16:26.530
because that doesn't really define exactly
how this is going to work anymore.

206
00:16:26.530 --> 00:16:29.710
And we can get rid of a bunch of
this stuff because that was mostly

207
00:16:29.710 --> 00:16:31.220
necessary for that purpose.

208
00:16:35.140 --> 00:16:37.555
Now we can go back to our garden service,
and

209
00:16:37.555 --> 00:16:40.180
what you should see is
that error has gone away.

210
00:16:41.220 --> 00:16:44.685
So the thing that was a little
tricky there is, of course,

211
00:16:44.685 --> 00:16:47.700
we're just working on this plant.

212
00:16:47.700 --> 00:16:52.260
Clearly we have an XY coordinate where
we're placing this plant in position.

213
00:16:52.260 --> 00:16:56.670
But that error message was from
one of those plants created on app

214
00:16:56.670 --> 00:17:00.190
initialization that did
not have XY coordinates.

215
00:17:00.190 --> 00:17:04.434
And so, of course,
this ends up being persisted

216
00:17:04.434 --> 00:17:08.790
position X just comes
from plant.position.x.

217
00:17:08.790 --> 00:17:12.270
And if we look at our database,
we can see plants.

218
00:17:12.270 --> 00:17:17.710
We've got one record in there,
and it is in fact at x0, y0.

219
00:17:17.710 --> 00:17:23.260
And so we've now got garden, beds, plants.

220
00:17:23.260 --> 00:17:26.220
Let's not forget the relationships bit.

221
00:17:26.220 --> 00:17:32.138
So when we're getting all plants up here,
we've got this relations object,

222
00:17:32.138 --> 00:17:37.249
and we can say, well, in this case,
true is sort of the termination

223
00:17:37.249 --> 00:17:41.300
of a family of paths,
if you want to think about this.

224
00:17:41.300 --> 00:17:44.079
So, what we're saying is go get beds,

225
00:17:44.079 --> 00:17:47.540
and this is the end of what
you should go and get.

226
00:17:47.540 --> 00:17:51.540
But we can instead say plants.

227
00:17:53.460 --> 00:17:57.667
And so now we're gonna get, when you fetch
a garden, we're gonna get all the beds,

228
00:17:57.667 --> 00:18:00.900
and we're gonna get all the plants
that are in those beds.

229
00:18:00.900 --> 00:18:04.580
And we should start to
see that coming through.

230
00:18:04.580 --> 00:18:05.598
But remember,

231
00:18:05.598 --> 00:18:10.540
we hard coded that placement item when
we were preparing our API response.

232
00:18:10.540 --> 00:18:14.459
And so once we do some work there,
we're gonna go to our browser,

233
00:18:14.459 --> 00:18:19.165
we're gonna hit the API, and we should
see that our tomato plant, whatever,

234
00:18:19.165 --> 00:18:23.764
the first plant that we found, is being
presented in the placements array.

