WEBVTT

1
00:00:00.480 --> 00:00:03.120
&gt;&gt; Mike North: So,
let's look at the rules we have and

2
00:00:03.120 --> 00:00:07.920
then I want us to discuss how we might
implement additional rules here.

3
00:00:09.040 --> 00:00:14.333
So we have don't put
your plant out of bounds,

4
00:00:14.333 --> 00:00:19.367
don't plant plants on top of other plants.

5
00:00:19.367 --> 00:00:22.240
We've got an interesting
parametric rule here.

6
00:00:23.600 --> 00:00:27.550
And I say that because unlike these
first two, it takes arguments.

7
00:00:27.550 --> 00:00:31.550
And so what we're saying,
this one's a little weird, but

8
00:00:31.550 --> 00:00:35.310
planting beds can never
be more than 80% full.

9
00:00:35.310 --> 00:00:36.990
And so we can see that one in action.

10
00:00:36.990 --> 00:00:40.508
If we go and just try to copy,
copy, copy, copy, and

11
00:00:40.508 --> 00:00:44.990
eventually it's going to say
you've crossed the threshold.

12
00:00:44.990 --> 00:00:46.990
This is one that we
should probably remove.

13
00:00:46.990 --> 00:00:49.310
It's just sort of an example
of something we could do.

14
00:00:49.310 --> 00:00:53.256
Like this doesn't make sense in the
context of if I'm putting my gardener hat

15
00:00:53.256 --> 00:00:57.445
on, like I absolutely want to plant plant
things everywhere in the raised bed that

16
00:00:57.445 --> 00:00:58.890
I'm allowed.

17
00:00:58.890 --> 00:01:02.010
Then we could restrict plants in zones.

18
00:01:02.010 --> 00:01:03.610
We have specific plant.

19
00:01:03.610 --> 00:01:08.215
Like here we're looking at sunlight
requirements where each zone

20
00:01:08.215 --> 00:01:09.850
has a sun level.

21
00:01:09.850 --> 00:01:12.868
And in this case we're saying,
well, tomatoes for

22
00:01:12.868 --> 00:01:14.810
some reason are the only thing.

23
00:01:14.810 --> 00:01:17.290
There's a special case rule for
tomatoes and sun.

24
00:01:19.530 --> 00:01:26.500
Then here is an adjacency based rule.

25
00:01:26.500 --> 00:01:29.580
What we're looking for

26
00:01:29.580 --> 00:01:34.816
here is if I can scan through real quick,

27
00:01:34.816 --> 00:01:43.380
you can pass in a array of plant
incompatibilities and a reason.

28
00:01:43.380 --> 00:01:46.422
If we look how this is wired up,

29
00:01:46.422 --> 00:01:52.510
just going to have to grab the usage
of this in the garden page.

30
00:01:57.790 --> 00:02:05.230
So tomatoes and potatoes can't be planted
next to each other for some reason.

31
00:02:05.230 --> 00:02:06.190
If we were to drag.

32
00:02:08.030 --> 00:02:09.390
Do we have a potato here?

33
00:02:12.280 --> 00:02:16.440
Nightshade, I don't see it,
but let's just change it.

34
00:02:16.440 --> 00:02:23.990
Let's say carrots, And

35
00:02:23.990 --> 00:02:32.120
I should be prevented
from putting this here.

36
00:02:32.120 --> 00:02:34.840
Tomatoes and
carrots should not be planted together.

37
00:02:34.840 --> 00:02:35.560
Great.

38
00:02:35.560 --> 00:02:38.280
We have a flexible framework here.

39
00:02:41.130 --> 00:02:42.450
Let's model some constraints.

40
00:02:42.450 --> 00:02:45.450
I'm going to shift into my gardener mode.

41
00:02:48.970 --> 00:02:55.770
Given what we already have, which is
in bounds, not on top of each other.

42
00:02:58.170 --> 00:03:04.090
That's the very basics that is adhering
to what it means to be things on a grid.

43
00:03:04.090 --> 00:03:08.730
We've got adjacency, we've got

44
00:03:08.730 --> 00:03:15.290
characteristics of the bed
versus plant needs.

45
00:03:19.050 --> 00:03:22.026
So if we put our gardener hat on,

46
00:03:22.026 --> 00:03:27.770
what are some other rules that
we may want to think about here?

47
00:03:28.810 --> 00:03:31.638
&gt;&gt; Speaker 2: I mean, realistically,
let's say I know nothing and probably,

48
00:03:31.638 --> 00:03:34.360
probably know next to
nothing about gardening.

49
00:03:34.360 --> 00:03:37.511
I would ask you, the gardener, considering
that these are what we've talked about so

50
00:03:37.511 --> 00:03:38.040
far, right?

51
00:03:38.040 --> 00:03:39.960
Like These are the things you don't do.

52
00:03:39.960 --> 00:03:44.326
Just ask a simple question,
like when you're planting what you know,

53
00:03:44.326 --> 00:03:47.840
which plants don't you want
to plant next to each other?

54
00:03:47.840 --> 00:03:48.340
And why?

55
00:03:48.340 --> 00:03:52.753
Are there any other circumstances
where you wouldn't plant a given plant

56
00:03:52.753 --> 00:03:54.400
that you haven't listed?

57
00:03:54.400 --> 00:03:56.304
It's a little general, I think, but I.

58
00:03:56.304 --> 00:03:58.226
I don't.
Without getting the answer to that,

59
00:03:58.226 --> 00:04:00.120
I don't know how to suss
out any more specifics.

60
00:04:00.120 --> 00:04:00.920
&gt;&gt; Mike North: No, I think that's.

61
00:04:00.920 --> 00:04:02.880
That's a great way to start here.

62
00:04:02.880 --> 00:04:08.329
So in this commit here,
we're already modeling this

63
00:04:08.329 --> 00:04:14.880
concept of something called companion and
antagonist plants.

64
00:04:16.560 --> 00:04:19.440
Sorry, I'm trying to arrange
something very specifically here.

65
00:04:22.240 --> 00:04:24.360
These are these little
circles that are showing up.

66
00:04:24.360 --> 00:04:26.400
I'm trying to get a more interesting one.

67
00:04:26.400 --> 00:04:28.090
That's a great one there.

68
00:04:28.090 --> 00:04:30.970
And I wanna drop garlic in and
mess everything up.

69
00:04:33.130 --> 00:04:38.018
So these indicators,
like the little red semicircle,

70
00:04:38.018 --> 00:04:40.826
this is where we can say, like,

71
00:04:40.826 --> 00:04:46.170
there's something about one
plant that hurts the other.

72
00:04:46.170 --> 00:04:49.090
And right now all we're doing
is we're lighting up indicators.

73
00:04:49.090 --> 00:04:52.570
But you could imagine, like,
a strict mode here where we could say,

74
00:04:52.570 --> 00:04:54.730
look, clearly we already have this data.

75
00:04:54.730 --> 00:04:56.330
Like, we have these indicators.

76
00:04:58.450 --> 00:05:00.850
Maybe we just prevent.

77
00:05:00.850 --> 00:05:04.920
Maybe it's just like an invalid
placement to drop anything where

78
00:05:04.920 --> 00:05:06.770
you're creating a problem.

79
00:05:06.770 --> 00:05:14.049
Like this garlic literally does.

80
00:05:14.049 --> 00:05:15.442
It ruins things around it.

81
00:05:15.442 --> 00:05:21.010
Whereas these are kind
of companion effects.

82
00:05:21.010 --> 00:05:24.112
Now, granted,
we're talking about blocking actions, but

83
00:05:24.112 --> 00:05:28.524
you could imagine a validation rule that's
shaped a little bit differently that says,

84
00:05:28.524 --> 00:05:32.500
all right, there is a more optimal
way to arrange this garden.

85
00:05:32.500 --> 00:05:38.660
You have inadvertently defeated all of the
beneficial effects from plant placement.

86
00:05:38.660 --> 00:05:45.460
But that might fit more into
an optimization concept.

87
00:05:45.460 --> 00:05:49.380
For now,
let's go with where this conversation led.

88
00:05:49.380 --> 00:05:54.087
We clearly have plant interactions
that are harmful, and

89
00:05:54.087 --> 00:05:58.610
those are clearly, like,
evaluated, you know, as.

90
00:05:58.610 --> 00:06:02.610
As we move things around, like you
can see on the corner on the side.

91
00:06:02.610 --> 00:06:03.570
So let's.

92
00:06:03.570 --> 00:06:07.100
Rather than just sort of
like lighting this up,

93
00:06:07.100 --> 00:06:10.850
let's reject the placement of the plant.

94
00:06:10.850 --> 00:06:14.314
If that happens,
we can build a rule for that.

95
00:06:14.314 --> 00:06:16.853
So let's jump in.

96
00:06:16.853 --> 00:06:21.892
So what we'll do is we're gonna create
a new ValidationRule in this sort

97
00:06:21.892 --> 00:06:26.700
of namespace for them, and
eventually we'll end up adding it here.

98
00:06:28.300 --> 00:06:31.020
So we'll go back to this point here.

99
00:06:31.020 --> 00:06:35.119
We'll add it right on top, and

100
00:06:35.119 --> 00:06:42.540
we'll call this prevent
antagonist plant adjacency.

101
00:06:46.360 --> 00:06:50.861
And this is a ValidationRule that

102
00:06:50.861 --> 00:06:55.370
operates on the same plant item.

103
00:06:59.831 --> 00:07:01.254
And

104
00:07:12.339 --> 00:07:14.610
It's just telling us we need to
return the appropriate thing.

105
00:07:14.610 --> 00:07:18.210
So first, let's return the object.

106
00:07:18.210 --> 00:07:19.010
The name.

107
00:07:29.650 --> 00:07:34.050
We'll just call it something like that.

108
00:07:34.050 --> 00:07:36.450
This might be in a tooltip, so
I don't want to get too long.

109
00:07:40.330 --> 00:07:45.370
And we can start out with,
like, sorry, fat arrow.

110
00:07:45.370 --> 00:07:50.090
We can start out with saying,
we're going to always reject this thing.

111
00:07:50.090 --> 00:07:55.111
Now, what we need to return is
something called a validation result.

112
00:07:55.111 --> 00:08:00.488
And this just is a type that
kind of Represents this

113
00:08:00.488 --> 00:08:05.361
returning an error
rather than throwing it.

114
00:08:05.361 --> 00:08:06.041
It's just.

115
00:08:06.041 --> 00:08:07.001
Is it valid?

116
00:08:07.001 --> 00:08:07.881
What's the reason?

117
00:08:17.481 --> 00:08:22.044
So let's just see if
something gets thrown and

118
00:08:22.044 --> 00:08:27.251
we'll add a comma,
we'll wire this rule up.

119
00:08:27.251 --> 00:08:28.131
That's fine.

120
00:08:30.931 --> 00:08:32.851
I'm gonna go back to garden page.

121
00:08:34.211 --> 00:08:38.611
And just like that,
prevent antagonist plant adjacency.

122
00:08:38.611 --> 00:08:43.411
And what this should do is basically like
anything we try to do, we should see.

123
00:08:43.411 --> 00:08:45.171
No, because I said so.

124
00:08:45.171 --> 00:08:45.891
Zooming out.

125
00:08:48.291 --> 00:08:49.091
I said so.

126
00:08:49.091 --> 00:08:53.306
All right, so we see that clearly
we're falling down the path of like,

127
00:08:53.306 --> 00:08:54.671
this is invalid.

128
00:08:54.671 --> 00:08:59.369
Now, let's worry about making a real
determination of whether this

129
00:08:59.369 --> 00:09:01.151
should be allowed or not.

130
00:09:02.591 --> 00:09:08.216
So what we can do in terms
of finding this information,

131
00:09:08.216 --> 00:09:13.352
it happens to be on
the workspace because it kind of

132
00:09:13.352 --> 00:09:18.979
makes sense from a domain
modeling standpoint to say,

133
00:09:18.979 --> 00:09:25.001
like, this is just like known
information about plants.

134
00:09:25.001 --> 00:09:28.801
Right?
It's not like this one garlic plant.

135
00:09:28.801 --> 00:09:34.321
Like one of seven should really not be
placed next to tomato plant number six.

136
00:09:34.321 --> 00:09:38.241
This is really on a category
by category basis.

137
00:09:38.241 --> 00:09:42.321
Like, garlics and
tomatoes should not be together.

138
00:09:42.321 --> 00:09:48.681
And so this almost at the same
level as seed packets.

139
00:09:48.681 --> 00:09:52.321
And the information about seeds and
the way tomatoes grow and

140
00:09:52.321 --> 00:09:56.901
the way tomatoes work, it doesn't have
to do with positioning on the grid.

141
00:09:56.901 --> 00:10:00.085
Now there's something
that's derived from it,

142
00:10:00.085 --> 00:10:05.085
but in terms of the interactions between
plants, we might model it that way and

143
00:10:05.085 --> 00:10:08.821
just say category A and
category B are helpful or harmful.

144
00:10:10.341 --> 00:10:11.781
Here's how that works.

145
00:10:11.781 --> 00:10:14.901
Let's explore how this is modeled.

146
00:10:14.901 --> 00:10:19.341
We've got an indicator and
there's an ID for it, just so

147
00:10:19.341 --> 00:10:23.611
we can keep track of when
they're presented in the ui.

148
00:10:23.611 --> 00:10:27.211
We can go look up information
to display about.

149
00:10:27.211 --> 00:10:28.211
Is this harmful?

150
00:10:28.211 --> 00:10:29.211
Is this helpful?

151
00:10:30.491 --> 00:10:35.127
We've got an interaction effect, and

152
00:10:35.127 --> 00:10:40.411
this is an item type like tomatoes or
basil.

153
00:10:40.411 --> 00:10:44.763
And then the nature of the effect,
which is beneficial, harmful, or neutral,

154
00:10:44.763 --> 00:10:47.571
and then a description
to present in a tooltip.

155
00:10:47.571 --> 00:10:50.051
These are directional effects.

156
00:10:50.051 --> 00:10:52.390
If you have things that
are mutually beneficial,

157
00:10:52.390 --> 00:10:54.291
they just have one in either direction.

158
00:10:55.731 --> 00:11:02.291
These can stack up and they can be used
to drive this UI that we get here.

159
00:11:02.291 --> 00:11:05.118
Where in this case,
lettuce is good for tomatoes,

160
00:11:05.118 --> 00:11:09.971
tomatoes are good for lettuce, and we have
that bidirectional beneficial effect.

161
00:11:09.971 --> 00:11:14.031
Each of these green boxes
is one of those effects.

162
00:11:14.031 --> 00:11:19.096
So let's use that and evaluate whether

163
00:11:19.096 --> 00:11:25.551
the placement will result
in effects being felt.

164
00:11:29.551 --> 00:11:34.751
Great, so we've got our indicators and
yeah, that's great.

165
00:11:35.871 --> 00:11:40.491
We'll extract that out, destructure it.

166
00:11:42.171 --> 00:11:47.244
And we also want to, for
the current placement,

167
00:11:47.244 --> 00:11:51.091
we want to kind of look at neighbors.

168
00:11:51.091 --> 00:11:56.356
And so I'm going to just borrow
a pattern from down here and

169
00:11:56.356 --> 00:11:59.371
say which one would be a good one.

170
00:12:00.491 --> 00:12:02.011
Incompatible plants.

171
00:12:02.011 --> 00:12:07.821
This seems,
this seems like a good place to start.

172
00:12:07.821 --> 00:12:09.421
In fact, what we could do.

173
00:12:10.621 --> 00:12:12.141
This is a little bit of a cheat.

174
00:12:15.661 --> 00:12:18.141
How do we regard plant one and
plant two here?

175
00:12:21.261 --> 00:12:23.661
Yep, they're already based
on plant categories.

176
00:12:23.661 --> 00:12:28.845
So all we would need to
do is kind of leverage

177
00:12:28.845 --> 00:12:34.749
this already existing rule and
we can, in fact,

178
00:12:34.749 --> 00:12:40.798
I wanna structure this
differently now because we

179
00:12:40.798 --> 00:12:47.151
have plant validation
roles incompatible plants.

180
00:12:48.511 --> 00:12:53.749
We can then say indicators, dot map and

181
00:12:53.749 --> 00:12:59.146
we can just generate a bunch of rules that

182
00:12:59.146 --> 00:13:05.021
are sort of stemming
from this incompatible

183
00:13:05.021 --> 00:13:10.281
plants function that already exists.

184
00:13:19.081 --> 00:13:19.961
Yeah.

185
00:13:19.961 --> 00:13:22.051
This will be fairly simple.

186
00:13:22.051 --> 00:13:25.371
So prevent antagonist plant adjacency.

187
00:13:25.371 --> 00:13:26.211
We'll go over here.

188
00:13:27.411 --> 00:13:28.771
Great.
That type checks.

189
00:13:28.771 --> 00:13:33.874
Now what we want is let's assume
there are other things that

190
00:13:33.874 --> 00:13:39.331
already detect to see,
is this an invalid placement or not?

191
00:13:39.331 --> 00:13:41.331
We've got a target X and Y.

192
00:13:41.331 --> 00:13:46.025
And let's just start by seeing
is there a plant to my left that

193
00:13:46.025 --> 00:13:48.061
I'm an antagonist with?

194
00:13:48.061 --> 00:13:52.571
Or let's start with an even more basic
concept like is there anything in my

195
00:13:52.571 --> 00:13:55.821
raised bed that I
shouldn't be planted near?

196
00:13:55.821 --> 00:13:59.873
We can begin there and

197
00:13:59.873 --> 00:14:07.529
we need some more things off of context,

198
00:14:07.529 --> 00:14:11.807
like the target zone,

199
00:14:11.807 --> 00:14:15.421
the target X and Y.

200
00:14:21.661 --> 00:14:25.000
And then we can kind of cycle
through the indicators and

201
00:14:25.000 --> 00:14:29.790
see if like there's anything else in
the zone that might like the plant that's

202
00:14:29.790 --> 00:14:33.581
attempting to be placed,
which is going to be one more thing.

203
00:14:33.581 --> 00:14:35.181
We need the item.

204
00:14:35.181 --> 00:14:36.221
Right.

205
00:14:36.221 --> 00:14:38.621
Something that I don't want to be near.

206
00:14:43.251 --> 00:14:44.931
And we'll type this
appropriately in a second.

207
00:14:59.571 --> 00:15:06.401
Okay, effect has a target item type id.

208
00:15:06.401 --> 00:15:10.818
So for now we're going to be selfish and
we'll say like,

209
00:15:10.818 --> 00:15:14.317
if there's anything that affects me badly,

210
00:15:14.317 --> 00:15:17.921
let's make sure that
I'm not planted there.

211
00:15:19.601 --> 00:15:26.068
So if the effect is
equal to item category,

212
00:15:26.068 --> 00:15:29.662
relevant indicators,

213
00:15:29.662 --> 00:15:35.241
push effect or something like that.

214
00:15:42.601 --> 00:15:47.894
And we'll say is valid is based on whether

215
00:15:47.894 --> 00:15:52.441
we found any relevant indicators.

216
00:16:14.136 --> 00:16:19.149
So we're saying like some number of

217
00:16:19.149 --> 00:16:24.830
indicators poorly affect this plant and

218
00:16:24.830 --> 00:16:32.076
we need to scope this
actually within the bed.

219
00:16:32.076 --> 00:16:36.893
So rather than just pushing,

220
00:16:36.893 --> 00:16:45.564
we need to look through
the target zone placements and

221
00:16:45.564 --> 00:16:53.116
see if any of these placements in the bed.

222
00:16:53.116 --> 00:16:57.113
Actually, like, without adding this
condition here, we're just going to say

223
00:16:57.113 --> 00:17:00.836
like, in this world, do there exist
negative indicators that affect me?

224
00:17:00.836 --> 00:17:04.076
And so now we're saying like,
in the target zone, are there plants?

225
00:17:20.086 --> 00:17:27.124
Okay, so just to add some comments,

226
00:17:27.124 --> 00:17:32.801
like for all indicators, for

227
00:17:32.801 --> 00:17:38.705
each effect of the indicator,

228
00:17:38.705 --> 00:17:46.200
if it affects the plant being dragged,

229
00:17:46.200 --> 00:17:52.576
that's the right arrangement.

230
00:17:53.696 --> 00:17:55.536
And the plant.

231
00:17:57.936 --> 00:17:58.896
And the plant.

232
00:17:58.896 --> 00:18:06.256
Like creating the negative
effect hurts me.

233
00:18:08.656 --> 00:18:13.976
Consider it to be relevant
as a blocker for placement.

234
00:18:15.736 --> 00:18:18.296
And one last thing we
have to throw into this.

235
00:18:18.296 --> 00:18:25.611
So if effect nature is harmful and

236
00:18:25.611 --> 00:18:31.620
if the effect is harmful and

237
00:18:31.620 --> 00:18:36.856
the item being placed.

238
00:18:40.516 --> 00:18:45.205
Yeah, and sorry, not the item being
placed, the thing we already found to

239
00:18:45.205 --> 00:18:49.636
exist in the bed is something that
creates that effect is valid.

240
00:18:49.636 --> 00:18:51.796
We have our condition flipped.

241
00:18:51.796 --> 00:18:56.050
We're saying it's only valid if
there are indicators are relevant

242
00:18:56.050 --> 00:18:58.596
indicators that are greater than zero.

243
00:19:00.036 --> 00:19:01.236
Let's log real quick.

244
00:19:21.646 --> 00:19:26.926
One more thing we could do here is
log indicator or log each effect.

245
00:19:42.936 --> 00:19:45.656
So we should at least see a bunch
of stuff cycle through here.

246
00:19:46.696 --> 00:19:53.256
Okay, Plant onions, garlic.

247
00:19:54.866 --> 00:19:56.706
Plant broccoli, beneficial.

248
00:20:01.986 --> 00:20:05.808
And let's log the item being
placed as well just so

249
00:20:05.808 --> 00:20:09.186
we can see all that
information real clear.

250
00:20:29.516 --> 00:20:34.796
And I just want to focus in like the one,
the antagonist one here.

251
00:20:39.356 --> 00:20:40.076
There it is.

252
00:20:42.476 --> 00:20:43.916
Broccoli, beneficial.

253
00:20:46.966 --> 00:20:52.121
Peas, all right,

254
00:20:52.121 --> 00:20:57.276
so this is if target

255
00:20:57.276 --> 00:21:03.397
item type ID is piece,

256
00:21:03.397 --> 00:21:08.566
we'll log there.

257
00:21:09.846 --> 00:21:12.006
And this should be item.

258
00:21:14.634 --> 00:21:17.586
I think it's item id, not item category.

259
00:21:18.706 --> 00:21:19.746
That would explain it.

260
00:21:26.706 --> 00:21:29.026
All right, one more try with feeling.

261
00:21:32.946 --> 00:21:34.706
Broccoli moves over here.

262
00:21:34.706 --> 00:21:35.826
Fine.

263
00:21:35.826 --> 00:21:40.716
Garlic moves up here, peas.

264
00:21:44.156 --> 00:21:47.276
One indicator negatively
affects sugar snap peas.

265
00:21:47.276 --> 00:21:49.710
So now we have this like
nice database of or

266
00:21:49.710 --> 00:21:54.876
nice representation of like, which
plants don't get along with each other.

267
00:21:54.876 --> 00:21:58.947
And you could imagine how we could do
it in the other direction as well,

268
00:21:58.947 --> 00:22:03.570
where like if you're a plant and you
introduce negative indicators into the bed

269
00:22:03.570 --> 00:22:07.716
that you're being placed into,
then you could have this flag as well.

270
00:22:07.716 --> 00:22:12.608
But part of the value here is this
idea of bothering to formalize

271
00:22:12.608 --> 00:22:17.756
something like validation logic
into its own data structure.

272
00:22:17.756 --> 00:22:22.801
So that you could imagine if we
have 30 rules that stack up for

273
00:22:22.801 --> 00:22:27.168
some reason,
say we get into modeling irrigation and

274
00:22:27.168 --> 00:22:32.506
sunlight and things like that,
you're able to very effectively

275
00:22:32.506 --> 00:22:37.163
unit test these things and
pass that context object in and

276
00:22:37.163 --> 00:22:42.693
make sure that each piece of logic
is modular and they all stack up and

277
00:22:42.693 --> 00:22:47.586
it doesn't become a big monolithic
part of your code base.

278
00:22:47.586 --> 00:22:53.146
That's a bunch of these essential
constraints that matter to your user.

