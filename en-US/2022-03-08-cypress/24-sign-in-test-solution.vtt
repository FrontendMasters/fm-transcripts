WEBVTT

1
00:00:00.000 --> 00:00:04.643
All right, so the mission was to
not only deal with signing up.

2
00:00:04.643 --> 00:00:08.565
But then the other part of the process,
which is seeding the database, and

3
00:00:08.565 --> 00:00:12.192
then signing in with an additional user,
or with our existing user.

4
00:00:12.192 --> 00:00:17.034
The other thing that I kinda have is that
failure mode that we were talking about as

5
00:00:17.034 --> 00:00:20.451
well, where we'll both seed
the database with a user and

6
00:00:20.451 --> 00:00:25.440
then try to sign up as that user and
see each of those kind of like play out.

7
00:00:25.440 --> 00:00:29.722
So if we kind of even think
about the failure mode piece and

8
00:00:29.722 --> 00:00:35.936
kind of turn this on to the only thing
that we're gonna do, And just so

9
00:00:35.936 --> 00:00:42.844
you can kinda see the end state, which is
getting this, this is signing with users.

10
00:00:42.844 --> 00:00:43.900
It doesn't exist.

11
00:00:43.900 --> 00:00:45.800
So this one is resetting it.

12
00:00:45.800 --> 00:00:48.210
You could also have
the failure mode as well.

13
00:00:48.210 --> 00:00:51.388
So you can set everything as you
need to get the conditions that

14
00:00:51.388 --> 00:00:52.560
are necessary right.

15
00:00:52.560 --> 00:00:54.550
So this one will reset the database.

16
00:00:54.550 --> 00:00:57.180
Sign in with a user doesn't exist.

17
00:00:57.180 --> 00:00:59.808
Same thing with seed, we can also sign up.

18
00:00:59.808 --> 00:01:02.624
They're all kind of variations on a theme.

19
00:01:02.624 --> 00:01:05.817
But here, yeah,
the one that you were tasked with,

20
00:01:05.817 --> 00:01:11.050
we simply see the database and that is
half the process that we had before.

21
00:01:11.050 --> 00:01:14.071
But the one thing, I mean,
there's two kind of parts that are still

22
00:01:14.071 --> 00:01:17.220
problematic about our
original problem statement.

23
00:01:17.220 --> 00:01:23.075
One is that even going through all
these steps like watching the test,

24
00:01:23.075 --> 00:01:26.160
there was only three tests that ran.

25
00:01:26.160 --> 00:01:31.085
Before you watch the entire set,
it's still kind

26
00:01:31.085 --> 00:01:36.016
of taking a while before
we get to that final page.

27
00:01:36.016 --> 00:01:38.296
Cuz again, we've gotta go through,
we gotta fill in these forms,

28
00:01:38.296 --> 00:01:39.298
we gotta sign everything up.

29
00:01:39.298 --> 00:01:42.065
So one option is, yeah,
to mock this stuff out.

30
00:01:42.065 --> 00:01:46.625
Because again,
if that's not what you're seeking to test,

31
00:01:46.625 --> 00:01:51.624
if you're testing the does filtering
the posts, work the way that I

32
00:01:51.624 --> 00:01:56.378
expected to then the hammering in
true end to end test on a login.

33
00:01:56.378 --> 00:02:00.954
Just testing that when you already
have end to end test the test

34
00:02:00.954 --> 00:02:03.072
the login is costly on time.

35
00:02:03.072 --> 00:02:05.720
If you're using GitHub Actions,
you're paying by the minute.

36
00:02:05.720 --> 00:02:09.410
So both in your time,
which is worth money, but

37
00:02:09.410 --> 00:02:14.140
also your money,
which is worth money, as well.

38
00:02:14.140 --> 00:02:17.002
So kind of getting both of those and
considering both of those is,

39
00:02:17.002 --> 00:02:19.930
I think useful, but in this case,
we have the ability to state it.

40
00:02:19.930 --> 00:02:24.974
We're gonna start with the more
immediate problem, which rather than

41
00:02:24.974 --> 00:02:31.380
the fact that it's costly, and time, and
potentially money, it's also real tedious.

42
00:02:31.380 --> 00:02:36.764
Not just for the test to run,
but for you to type this, right?

43
00:02:36.764 --> 00:02:37.639
You have a bunch of options.

44
00:02:37.639 --> 00:02:42.410
Like I said before, it's JavaScript,
you can make a function, right?

45
00:02:42.410 --> 00:02:46.247
And that function can run
these four lines of code.

46
00:02:46.247 --> 00:02:48.320
Yeah, totally.

47
00:02:48.320 --> 00:02:49.960
Maybe that's the right choice, too.

48
00:02:49.960 --> 00:02:54.782
The one disadvantage there, as we all
know, is then you play the import game,

49
00:02:54.782 --> 00:02:59.680
right, as you're kind of importing all
these files everywhere just to do a very

50
00:02:59.680 --> 00:03:00.650
common thing.

51
00:03:00.650 --> 00:03:01.856
But it works.

52
00:03:01.856 --> 00:03:06.938
The other option, of course,
is to get a slightly different syntax,

53
00:03:06.938 --> 00:03:10.136
where we would love to say, hey, Cypress.

54
00:03:10.136 --> 00:03:11.599
Sign in or sign up.

55
00:03:11.599 --> 00:03:16.030
Now, Cyprus can't really offer
this to us out of the box cuz

56
00:03:16.030 --> 00:03:19.042
the peculiarities of your signup form or

57
00:03:19.042 --> 00:03:24.899
your sign-in form is probably unique
to the application you work on, right?

58
00:03:24.899 --> 00:03:29.811
But what they can do is give you
the ability to write your own

59
00:03:29.811 --> 00:03:34.724
additional command and
just attach it basically, yeah,

60
00:03:34.724 --> 00:03:39.348
the ability to extend ciphers
with what you want to do.

61
00:03:39.348 --> 00:03:41.038
So these are called commands.

62
00:03:41.038 --> 00:03:45.358
And again,
they give us additional methods on top of

63
00:03:45.358 --> 00:03:50.362
the normal set on the cipher
object the site object rather and

64
00:03:50.362 --> 00:03:54.309
what the syntax looks like
is totally up to you.

65
00:03:54.309 --> 00:04:00.466
In this case, I literally just lifted the
code that we had from the previous test.

66
00:04:00.466 --> 00:04:05.057
And I put it in a command called
signIn that will take a user

67
00:04:05.057 --> 00:04:08.885
object that ideally has a email and
password and

68
00:04:08.885 --> 00:04:13.114
then will go look for
all the right objects, right?

69
00:04:13.114 --> 00:04:16.358
Whatever, like whatever you need to do for
your situation will work.

70
00:04:16.358 --> 00:04:20.790
But this is basically a way to take
common things and bash them together and

71
00:04:20.790 --> 00:04:25.582
the ability to pass in arguments in case
you need to have some programmability,

72
00:04:25.582 --> 00:04:26.104
right?

73
00:04:26.104 --> 00:04:27.903
Again, it's just JavaScript.

74
00:04:27.903 --> 00:04:33.624
You can have any conditionals in there
that you want, you can do any string and

75
00:04:33.624 --> 00:04:37.953
interpolation that you need,
so on and so forth, right?

76
00:04:37.953 --> 00:04:43.784
So, now, instead of if we wanted
to kinda test the sign-in form,

77
00:04:43.784 --> 00:04:49.630
we could theoretically go in there and
seed the database, right?

78
00:04:49.630 --> 00:04:51.675
Cuz we probably wanna keep
that separate from sign-in.

79
00:04:51.675 --> 00:04:54.286
Cuz we had all those different cases like,
I wanna see what the user and

80
00:04:54.286 --> 00:04:55.978
I want it to fail cuz
the user already exists.

81
00:04:55.978 --> 00:04:57.730
I don't want that user to exist.

82
00:04:57.730 --> 00:04:59.024
So on and so forth, right?

83
00:04:59.024 --> 00:05:00.798
Sign in, we want them to exist.

84
00:05:00.798 --> 00:05:03.630
Sign up, we want them to not exist.

85
00:05:03.630 --> 00:05:05.670
And so,
we can kinda set all of those things up.

