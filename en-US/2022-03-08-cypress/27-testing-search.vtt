WEBVTT

1
00:00:00.497 --> 00:00:07.515
So let's take a look at some of
the things that we could do in our tests.

2
00:00:07.515 --> 00:00:09.853
So here we'll go over to
the Pokemon search and for

3
00:00:09.853 --> 00:00:11.803
anything that we don't cover together,

4
00:00:11.803 --> 00:00:14.773
there is a completed version that
we can kind of review as well.

5
00:00:14.773 --> 00:00:16.937
We'll do a few of them live coding, and

6
00:00:16.937 --> 00:00:20.228
we'll just kind of talk about
some of the examples as well.

7
00:00:20.228 --> 00:00:23.212
So one of the things is in this case,

8
00:00:23.212 --> 00:00:28.296
I have just a JavaScript object for
my fixture data, right.

9
00:00:28.296 --> 00:00:33.508
Cause I decided that generally speaking,
like this was probably good enough, right.

10
00:00:33.508 --> 00:00:37.457
But you can see in my fixtures file I have

11
00:00:37.457 --> 00:00:42.134
like the real API data for
Bulbasaur, right?

12
00:00:42.134 --> 00:00:46.625
And so I can put in that fixture and get
that kind of as my API response as well.

13
00:00:46.625 --> 00:00:49.414
My general rule is that if it's tiny,

14
00:00:49.414 --> 00:00:52.996
it's nice to have it in the file,
so I can see it.

15
00:00:52.996 --> 00:00:56.916
If it's big, I don't wanna have in
the file because I don't wanna see it,

16
00:00:56.916 --> 00:00:59.546
it's purely a developer
economics thing for me.

17
00:00:59.546 --> 00:01:04.936
You can see like for the other app,
the echo chamber or posts, right?

18
00:01:04.936 --> 00:01:10.355
Their users is everything that had
the other app when I've seen the database,

19
00:01:10.355 --> 00:01:12.253
is all kind of here as well.

20
00:01:12.253 --> 00:01:13.880
So as to fill these together,

21
00:01:13.880 --> 00:01:17.015
and then I will let you kind of
try some of them out as well.

22
00:01:17.015 --> 00:01:20.833
So as you can see before he's just,
we will go visit Pokemon search.

23
00:01:20.833 --> 00:01:25.991
We will go ahead and
find that search field and

24
00:01:25.991 --> 00:01:31.285
alias it to search that
label that has the exact

25
00:01:31.285 --> 00:01:35.648
same social image alias for that too.

26
00:01:35.648 --> 00:01:40.829
Alright, so should call the API when
the user types cuz we saw that as soon as

27
00:01:40.829 --> 00:01:46.356
I typed in Bobe, it had loading for a hot
second, and then it hit a local server.

28
00:01:46.356 --> 00:01:51.315
So it didn't take that long, but
you can see that that was a query params.

29
00:01:51.315 --> 00:01:55.536
So the part that I want there forever is
only matched things where we're hitting

30
00:01:55.536 --> 00:01:56.047
the API.

31
00:01:56.047 --> 00:01:59.079
And then there's a query params after it,
but

32
00:01:59.079 --> 00:02:03.532
we want to treat all of those we'll
just call it API, it'll be fun.

33
00:02:03.532 --> 00:02:08.107
So we wanna test that anytime they
type in that input field we're sending

34
00:02:08.107 --> 00:02:09.382
a network request.

35
00:02:09.382 --> 00:02:12.118
We don't really have that ability,
I mean, we have the ability.

36
00:02:12.118 --> 00:02:16.857
I just haven't shown you that you have
it yet you have the power already and

37
00:02:16.857 --> 00:02:20.541
it's actually incredibly elegant and
simple, right?

38
00:02:20.541 --> 00:02:24.827
So the one part that we know that we need
to do is go and get that search field.

39
00:02:27.817 --> 00:02:33.900
Right, and we'll type, do we have
a favorite Pokemon that I can spell?

40
00:02:38.215 --> 00:02:39.766
There's no, what's that?

41
00:02:39.766 --> 00:02:40.371
&gt;&gt; Ivysaur.

42
00:02:40.371 --> 00:02:45.699
&gt;&gt; Ivysaur, sweet, so typing maybe IV,
that should be good enough, right?

43
00:02:45.699 --> 00:02:52.410
And then we just wanna see that it was
that the API was called at all, right?

44
00:02:52.410 --> 00:02:57.458
At all, well, we'll get more nuanced
about this later, was it called?

45
00:02:57.458 --> 00:03:00.540
In this case we could do sign up wait, and

46
00:03:00.540 --> 00:03:05.355
we'll say we LS is at API right and
so what this test is gonna do.

47
00:03:05.355 --> 00:03:09.921
Is it's gonna go find the search
field it's gonna type IV into it and

48
00:03:09.921 --> 00:03:12.175
then it's gonna the same way it.

49
00:03:12.175 --> 00:03:15.539
Waited for a get to see like whether or
not it should,

50
00:03:15.539 --> 00:03:20.906
did that thing appear on the page is gonna
see like hey I'm gonna wait four seconds.

51
00:03:20.906 --> 00:03:24.901
Did you fire network request
that matches that glob,

52
00:03:24.901 --> 00:03:28.197
cuz if not I'm gonna be
real upset with you.

53
00:03:28.197 --> 00:03:33.120
Right so you could do like should have
been called and stuff like that you don't

54
00:03:33.120 --> 00:03:38.358
have to this will fail, if the wait is not
triggered in the allotted amount of time.

55
00:03:38.358 --> 00:03:42.049
So let's go through and
we will stop the previous one,

56
00:03:42.049 --> 00:03:47.037
we'll go into this Pokemon search,
maybe we should only this for a second

57
00:03:49.925 --> 00:03:56.390
Right, you can see that it fetched it and
everything is good, right?

58
00:03:56.390 --> 00:03:58.771
The test passes in this case,

59
00:03:58.771 --> 00:04:03.262
I just run it one more time to verify,
awesome, right?

60
00:04:03.262 --> 00:04:05.510
And so you can actually see
all the fishes that were made.

61
00:04:05.510 --> 00:04:10.222
You can actually see that the URL change
as well, right and test for that yet, but

62
00:04:10.222 --> 00:04:14.260
I can see it happening, which is
super cool as well as things happen.

63
00:04:14.260 --> 00:04:17.770
You can see us waiting for
the API, and you can see look,

64
00:04:17.770 --> 00:04:22.577
this says request matched by site
intercept spy with the alias API, right?

65
00:04:22.577 --> 00:04:27.418
So there's all of a sudden, this is
super helpful for when you I don't know,

66
00:04:27.418 --> 00:04:32.276
like five hours and just standing in
front of people typing, make a mistake.

67
00:04:32.276 --> 00:04:36.965
You can say like,
did I just misspell something, and like,

68
00:04:36.965 --> 00:04:42.270
did it not even hit the spy, or did it
fail because my code was bad, right?

69
00:04:42.270 --> 00:04:46.819
And so some of these little
things are super nice, for

70
00:04:46.819 --> 00:04:51.784
the case of just,
making sure everything works, right?

71
00:04:51.784 --> 00:04:55.163
And again, you can how to play
through every step as well.

72
00:04:55.163 --> 00:04:58.205
Right, that's so if you saw it was
cuz my mouse was over there, right,

73
00:04:58.205 --> 00:04:59.234
it wasn't reloading.

74
00:04:59.234 --> 00:05:05.167
It's just as I scroll up, I can play
through every scene of the test as well,

75
00:05:05.167 --> 00:05:07.963
all right, but like that's cool.

76
00:05:07.963 --> 00:05:11.918
Let's see I would be nice to say
like it should also update that

77
00:05:11.918 --> 00:05:15.125
query parameter which we
know that it does right.

78
00:05:15.125 --> 00:05:18.682
And so we can grab that cuz
wait also won't that kind

79
00:05:18.682 --> 00:05:23.414
of like the code looks synchronous but
it's really asynchronous.

80
00:05:23.414 --> 00:05:25.394
It will hold on wait and

81
00:05:25.394 --> 00:05:31.039
now run anymore of the code until
that API request has been made.

82
00:05:31.039 --> 00:05:34.667
So I can also say and I mean this
theoretically should change the same time

83
00:05:34.667 --> 00:05:36.882
regardless or it doesnt primarily matter.

84
00:05:36.882 --> 00:05:41.572
But we saw that location from the previous
example, all right, in this case,

85
00:05:41.572 --> 00:05:43.364
I care about the query puram.

86
00:05:43.364 --> 00:05:46.542
And that it should, again, if you're
only ever gonna have one query fram,

87
00:05:46.542 --> 00:05:47.643
you probably want equal.

88
00:05:47.643 --> 00:05:51.247
If you're gonna have multiple
query params that could be set,

89
00:05:51.247 --> 00:05:53.765
I would just probably use contain, right?

90
00:05:53.765 --> 00:05:57.490
So I'll leave that as an exosuit whichever
one you like better in this case.

91
00:05:57.490 --> 00:06:03.702
So if I type in IV,
then its name should be IV,

92
00:06:03.702 --> 00:06:08.770
and I'll clear the only on that one,

93
00:06:08.770 --> 00:06:14.569
we'll set it on this one, So
yeah, it counts the question mark

94
00:06:14.569 --> 00:06:19.205
as part of the search param, I didn't type
that which is why you might want contains.

95
00:06:19.205 --> 00:06:24.874
Or you want the question mark it's
really it failed for a good reason so

96
00:06:24.874 --> 00:06:29.501
you can see here it is it got that and
everything was good.

97
00:06:29.501 --> 00:06:33.885
Sweet, there's other stuff
that you can do we can type

98
00:06:33.885 --> 00:06:37.421
something new into it and
it should change.

99
00:06:37.421 --> 00:06:42.661
The other thing if you want you can
actually get at the actual full

100
00:06:42.661 --> 00:06:47.527
object I'm mostly gonna do this
to kind of give you a sense.

101
00:06:47.527 --> 00:06:52.887
To show everything in this case,
like as you saw from our purposes,

102
00:06:52.887 --> 00:06:56.379
did it change the query
parameter is right.

103
00:06:56.379 --> 00:07:01.230
But now we wannna see did it
fire the right API request,

104
00:07:01.230 --> 00:07:06.417
right now did it change the query
parameter and location.

105
00:07:06.417 --> 00:07:09.874
Did it fire the correct API request,
right?

106
00:07:09.874 --> 00:07:14.225
And so we'll kind of do this a little
bit of a scroll your way, and

107
00:07:14.225 --> 00:07:19.716
then we'll show a little more nuanced way
to do it, so we'll say sign up, wait.

108
00:07:19.716 --> 00:07:23.422
Let's go grab that IV, for the API, and

109
00:07:23.422 --> 00:07:29.097
then if I want that underlying
interception object, right.

110
00:07:29.097 --> 00:07:34.030
Which is just the intercepted
API requests I could

111
00:07:34.030 --> 00:07:37.796
literally grab it, and then I could.

112
00:07:37.796 --> 00:07:42.301
I'm just gonna console log it for
now, so you can kind of see all

113
00:07:42.301 --> 00:07:47.318
the things that are in there cuz
sometimes I'm too lazy to read ducks.

114
00:07:47.318 --> 00:07:51.571
We got to only that one, so click only
on this one, we'll set it on this one.

115
00:07:54.249 --> 00:07:57.152
So in this case, I might go in okay and

116
00:07:57.152 --> 00:08:01.856
see the request object here
with the headers, the method.

117
00:08:01.856 --> 00:08:05.107
Anything that I need to
say about the URL for

118
00:08:05.107 --> 00:08:09.276
the response from the server,
so on so forth, right?

119
00:08:09.276 --> 00:08:11.922
I can see all those things as well,

120
00:08:11.922 --> 00:08:16.130
if I wanna make sure that it
had the API that I wanted to.

121
00:08:16.130 --> 00:08:23.332
Like so it should like the the API is like
slash, I think probably monster slash API.

122
00:08:23.332 --> 00:08:28.572
And then the query parameters
we saw before, so it's like,

123
00:08:28.572 --> 00:08:35.480
hey, if I type in IV, it should be like
/Pokemon searc/ API/ name equals IV.

124
00:08:35.480 --> 00:08:41.868
So I could do like an expected here
where I like the other piece or

125
00:08:41.868 --> 00:08:47.961
I could say,
Thing is what was it request, let's see.

126
00:08:52.045 --> 00:08:53.564
That URL.

127
00:09:02.419 --> 00:09:06.882
Should contain.

128
00:09:12.280 --> 00:09:16.906
Right so here we actually looked at
the Ajax requests that was fired,

129
00:09:16.906 --> 00:09:19.474
rather than the location of the page.

130
00:09:19.474 --> 00:09:22.940
So this is what I was talking about
before with the temporal example,

131
00:09:22.940 --> 00:09:26.600
where I wanna make sure that the request
that I sent was correct, right?

132
00:09:26.600 --> 00:09:27.150
And formatted the right way,
this is a simple example,

133
00:09:27.150 --> 00:09:27.654
but I gotta change stuff
in all sorts of crazy ways,

134
00:09:27.654 --> 00:09:28.294
from what the input field is to
what the API currently expects.

135
00:09:28.294 --> 00:09:33.794
So to make sure that logic works

136
00:09:33.794 --> 00:09:39.720
I can simply change all the fields

137
00:09:39.720 --> 00:09:46.924
look at the requests that I'm sending.

138
00:09:46.924 --> 00:09:52.664
And verify that they perform
the way that they're supposed

139
00:09:52.664 --> 00:10:00.141
to cool there are some other little things
you can do kind of as we expand this.

140
00:10:00.141 --> 00:10:05.205
We could also with the pre
population piece I could

141
00:10:05.205 --> 00:10:10.510
do sign up visit and
put it in there but even site visit

142
00:10:10.510 --> 00:10:15.587
has a little more of that
it can take a full object.

143
00:10:15.587 --> 00:10:19.619
So we could do something
like site visit and

144
00:10:19.619 --> 00:10:24.099
we'll say that the given
an object this time and

145
00:10:24.099 --> 00:10:30.379
the URL is Pokmon search and
the query string is an object, right.

146
00:10:30.379 --> 00:10:33.387
So then we're, there is basically
put together that for us.

147
00:10:33.387 --> 00:10:36.249
So if we had a whole bunch of different
parameters we wanna see we don't wanna

148
00:10:36.249 --> 00:10:37.379
definitely make it a string.

149
00:10:37.379 --> 00:10:41.566
We don't care about the order,
like go visit that, and

150
00:10:41.566 --> 00:10:46.211
then we wanna make sure that
theoretically like, go do that.

151
00:10:46.211 --> 00:10:49.949
Wait for
it to fire that initial API request, and

152
00:10:49.949 --> 00:10:53.880
make sure that like,
that's in there somewhere.

153
00:10:53.880 --> 00:10:58.758
So it doesn't only, right, so there's
all sorts of really interesting things

154
00:10:58.758 --> 00:11:01.064
you can do around the URI in this case.

155
00:11:01.064 --> 00:11:04.865
So you can see the pre populated it,
we got the right results,

156
00:11:04.865 --> 00:11:06.930
it fired the right API requests.

157
00:11:06.930 --> 00:11:10.539
Right and kind of just have a lot of
opinions, all the ways back and forth.

158
00:11:13.910 --> 00:11:17.585
Sweet, the kind of last one that
we'll kind of talk about for

159
00:11:17.585 --> 00:11:22.073
a second is we talked about the ability
to have our own responses in there.

160
00:11:22.073 --> 00:11:25.820
Right now we're sending out the requests,
we wanna look at the responses as well.

