WEBVTT

1
00:00:00.160 --> 00:00:02.610
All right, in a little bit,
I'm gonna leave you to do this one.

2
00:00:02.610 --> 00:00:04.590
But let's talk a little
bit about form validation.

3
00:00:04.590 --> 00:00:07.876
And then we'll do an exercise,
we can kinda fill that one in and

4
00:00:07.876 --> 00:00:10.730
do a little bit additional
form validation, as well.

5
00:00:12.140 --> 00:00:17.335
So if we go to this form, and
we hit Sign In, we get that helpful chrome

6
00:00:17.335 --> 00:00:22.830
A little pop up that says,
please fill out this required field.

7
00:00:22.830 --> 00:00:27.813
And because it's also type email,

8
00:00:27.813 --> 00:00:34.640
if you say just like,
it's like, nah, right?

9
00:00:34.640 --> 00:00:36.860
But that's like Chrome.

10
00:00:36.860 --> 00:00:39.470
So like, how do you that's not on the DOM?

11
00:00:39.470 --> 00:00:41.240
So like, how do you test that?

12
00:00:41.240 --> 00:00:43.550
There's actually a bunch of ways.

13
00:00:43.550 --> 00:00:46.033
And or if there was an error
that came back from your server,

14
00:00:46.033 --> 00:00:49.162
you might also like the user already
exists, and where on the sign up page,

15
00:00:49.162 --> 00:00:52.520
invalid password, you might want to
check all of these different things.

16
00:00:52.520 --> 00:00:55.720
But those are just like looking for
the DOM element on the page there, right?

17
00:00:55.720 --> 00:00:59.148
This is like literally a thing that
Chrome is making or Firefox is making or

18
00:00:59.148 --> 00:01:00.230
what have you.

19
00:01:00.230 --> 00:01:03.800
And we wanna figure out
how we might test that.

20
00:01:03.800 --> 00:01:08.630
So let's play around with it for a second.

21
00:01:08.630 --> 00:01:13.320
And we'll go through.

22
00:01:13.320 --> 00:01:14.193
All right.
So we've got,

23
00:01:14.193 --> 00:01:20.490
we wanna require an email And
so what could we say here?

24
00:01:20.490 --> 00:01:24.797
Let's go ahead, and
the way that I got that if you saw,

25
00:01:24.797 --> 00:01:30.430
was I clicked on the sign-in button
without an email in there, right?

26
00:01:30.430 --> 00:01:35.360
So in order to get us into that situation,
that part's pretty straightforward What we

27
00:01:35.360 --> 00:01:43.040
might do in this case is let's
go ahead and grab that button

28
00:01:46.062 --> 00:01:49.180
grab that sign in button right there,
sign in submit.

29
00:01:49.180 --> 00:01:50.190
That's a good name for a button.

30
00:01:51.900 --> 00:01:56.480
And so we'll say so as submit.

31
00:01:58.460 --> 00:01:59.460
Start there.

32
00:01:59.460 --> 00:02:07.070
So now we'll say so get at Submit.

33
00:02:09.490 --> 00:02:10.570
Click on it.

34
00:02:10.570 --> 00:02:11.920
Set this one to only for a second.

35
00:02:16.540 --> 00:02:25.330
Right, that was not, Should be the only
one wanting to have another only in place.

36
00:02:25.330 --> 00:02:30.304
Yep.
If you have to that have only, All right

37
00:02:30.304 --> 00:02:34.512
cool, Let's sign up

38
00:02:37.000 --> 00:02:40.012
Couldn't find that on there.

39
00:02:45.316 --> 00:02:51.550
The issue is I went to the signup page and
look for the Sign In button my test works.

40
00:02:51.550 --> 00:02:52.730
Not what I thought.

41
00:02:52.730 --> 00:02:56.464
But let's go ahead and
we'll change out to sign up in this case.

42
00:02:59.902 --> 00:03:00.530
All right, cool.

43
00:03:00.530 --> 00:03:02.330
We're back.

44
00:03:02.330 --> 00:03:06.750
So we see that now we want to test it
that like we didn't move to a page,

45
00:03:06.750 --> 00:03:10.970
I guess we could test that
the location didn't change, I guess.

46
00:03:10.970 --> 00:03:14.950
That's not really testing the right thing
I want to test that that thing happened.

47
00:03:14.950 --> 00:03:19.132
I want a test that said that
this form was invalid and

48
00:03:19.132 --> 00:03:23.630
ideally what the actual
issue was in this case.

49
00:03:23.630 --> 00:03:28.449
So cool we've got the the situation made,
but now we need to verify

50
00:03:28.449 --> 00:03:34.790
the things are Not working in the way
that we're expecting them to not work.

51
00:03:34.790 --> 00:03:40.370
Alright, so what we could do is we could
go ahead and get that in that email field.

52
00:03:41.550 --> 00:03:43.680
I'll tell you why I'm not going to
make this an alias in a second.

53
00:03:46.360 --> 00:03:49.408
So we'll go ahead and we'll get that and

54
00:03:49.408 --> 00:03:54.159
if there is one of those pop ups
It turns out that this element has

55
00:03:54.159 --> 00:03:59.430
a pseudo class just in the browser,
that will work as a selector.

56
00:03:59.430 --> 00:04:01.440
So we could say invalid.

57
00:04:02.530 --> 00:04:07.154
And this is effectively what we're trying
to do is exactly what was brought up with

58
00:04:07.154 --> 00:04:11.576
the filters as the question of making sure
that there is at least I mean this will

59
00:04:11.576 --> 00:04:15.797
probably work right, that there is one
that is called invalid so we have one

60
00:04:15.797 --> 00:04:20.622
hits the selector you could theoretically
if there were two that weren't filled in,

61
00:04:20.622 --> 00:04:24.709
you could say that has a length of two
like we saw before we want to make sure

62
00:04:24.709 --> 00:04:29.534
that something rendered on the page, but
right now, we're saying that there should

63
00:04:29.534 --> 00:04:34.600
be at least one of this one element that
has the pseudo selector invalid, right?

64
00:04:34.600 --> 00:04:36.813
But that's not really
good enough cuz we saw,

65
00:04:36.813 --> 00:04:39.950
we're gonna have two different
kinds of invalidation methods.

66
00:04:39.950 --> 00:04:43.292
We could have, you didn't give
me anything and we also had and

67
00:04:43.292 --> 00:04:45.730
you didn't give me an email, right?

68
00:04:45.730 --> 00:04:48.180
And so we need to figure out
how to get a little bit better.

69
00:04:48.180 --> 00:04:50.740
Just saying that it wasn't valid is true.

70
00:04:50.740 --> 00:04:54.220
But like, why wasn't it valid, right?

71
00:04:54.220 --> 00:04:58.510
And so we could go ahead and we can either
look for just the raw element or because

72
00:04:58.510 --> 00:05:02.605
it isn't valid in this case, and this
is where we could get rid of this one,

73
00:05:02.605 --> 00:05:06.280
right because yeah, like this,
it will not find an invalid one.

74
00:05:06.280 --> 00:05:07.820
Unless for whatever we do next,

75
00:05:07.820 --> 00:05:12.240
unless there's something already matches
then it will just give up after this.

76
00:05:12.240 --> 00:05:16.190
So we'll also say, invoke.

77
00:05:17.800 --> 00:05:22.090
And jquery has prop, which is kind of like
value, but we'll get some property of it.

78
00:05:22.090 --> 00:05:26.510
And we're gonna look for
validation message, right?

79
00:05:26.510 --> 00:05:32.391
And that, Should

80
00:05:32.391 --> 00:05:38.050
contain, What was it,
please fill out this field?

81
00:05:43.359 --> 00:05:43.859
Cool.

82
00:05:45.130 --> 00:05:47.330
Right, and
you can see that the test passes.

83
00:05:47.330 --> 00:05:49.799
Again, that doesn't stay there forever,
but

84
00:05:49.799 --> 00:05:52.084
it found it within that
four second window,

85
00:05:52.084 --> 00:05:56.900
which is right after we hit submit and so
we now know that that will show up, right?

86
00:05:56.900 --> 00:06:02.180
There is one other way that
you could check for this.

87
00:06:02.180 --> 00:06:06.604
It's that the field also
has a validity prop,

88
00:06:06.604 --> 00:06:10.121
which we can take a look at actually,

89
00:06:10.121 --> 00:06:15.160
let's go ahead and
open up the developer tools.

90
00:06:15.160 --> 00:06:18.527
No more biggerize my font for
a second here,

91
00:06:18.527 --> 00:06:22.170
and let's go ahead and
we'll just hit sign up.

92
00:06:26.190 --> 00:06:27.140
Please fill out this field.

93
00:06:27.140 --> 00:06:31.348
I don't know if I missed
it if I got it in time, but

94
00:06:31.348 --> 00:06:36.382
this will have a UI so
you can see the validation message and

95
00:06:36.382 --> 00:06:43.730
validity gives me this JavaScript object
that gives me all of kind of as booleans.

96
00:06:43.730 --> 00:06:46.848
Like what the problems are, all right?

97
00:06:46.848 --> 00:06:51.460
So I think it went away at this
photo value missing is true, right?

98
00:06:51.460 --> 00:06:53.640
So this is how it failed the validation.

99
00:06:54.640 --> 00:06:58.460
So in this case, we could go ahead and
get the proper validity, and

100
00:06:58.460 --> 00:07:02.160
then we're going to use it,
it's property that we saw before.

101
00:07:03.680 --> 00:07:08.747
And so grab this, all this,

102
00:07:08.747 --> 00:07:12.336
pop that right in and

103
00:07:12.336 --> 00:07:18.491
we could say it's value missing.

104
00:07:18.491 --> 00:07:25.853
That should, Be true.

105
00:07:25.853 --> 00:07:29.223
All right, so
that's a few ways that you can do it.

