WEBVTT

1
00:00:00.000 --> 00:00:03.381
&gt;&gt; Steve Kinney: feels like the other
thing that it would be nice to be able to

2
00:00:03.381 --> 00:00:05.604
do is to call it from the command line.

3
00:00:05.604 --> 00:00:08.678
Right?
Like to be able to say, hey, read and

4
00:00:08.678 --> 00:00:10.792
evaluate this file, right?

5
00:00:10.792 --> 00:00:14.935
A thing that we could also choose to
do is add another command where we for

6
00:00:14.935 --> 00:00:19.716
instance evaluate a file and had an output
file where we put it out to another file.

7
00:00:19.716 --> 00:00:21.625
There's a lot of ways
that you can extend this.

8
00:00:21.625 --> 00:00:27.460
A lot of it is ancillary to the actual.

9
00:00:27.460 --> 00:00:31.730
It is definitely probably key that you
have somewhere that you're able to use

10
00:00:31.730 --> 00:00:34.365
your language,
otherwise what are you doing?

11
00:00:34.365 --> 00:00:37.910
But we're not gonna go
all the way into that.

12
00:00:37.910 --> 00:00:40.501
To get out of it it's just
Ctrl+C to click the prompt and

13
00:00:40.501 --> 00:00:42.887
you're back on your normal command line,
right?

14
00:00:42.887 --> 00:00:45.019
So, again, oddly satisfying,

15
00:00:45.019 --> 00:00:49.964
when we take a break if you need a few
minutes, if you're watching the video,

16
00:00:49.964 --> 00:00:53.479
you need to pause and
just marvel at your own creation.

17
00:00:53.479 --> 00:00:54.002
I get it.

18
00:00:54.002 --> 00:00:54.538
I understand.

19
00:00:54.538 --> 00:00:55.522
I did it.

20
00:00:55.522 --> 00:00:58.470
[LAUGH] Cool.

21
00:00:58.470 --> 00:01:00.115
So let's hop back over.

22
00:01:00.115 --> 00:01:04.338
Let's look at the CLI code.

23
00:01:04.338 --> 00:01:08.779
CLI code, we put in a bin directory
is kind of the node convention.

24
00:01:08.779 --> 00:01:10.704
And you can see it's
just called drop bear.

25
00:01:10.704 --> 00:01:15.018
And I still wrote most of it but
I will kind of take you through it.

26
00:01:15.018 --> 00:01:17.497
I think it deserves some explaining and

27
00:01:17.497 --> 00:01:21.036
talk about how you could
theoretically expand upon it.

28
00:01:21.036 --> 00:01:25.177
So the important part here is
we have this shebang, right?

29
00:01:25.177 --> 00:01:30.803
Hash bang, shebang, that basically says
okay even though it doesn't have the .js,

30
00:01:30.803 --> 00:01:36.299
you're not calling it with node, we can in
fact, it will run in a node environment.

31
00:01:36.299 --> 00:01:39.347
I mean theory this could be
bash too if you wanted to.

32
00:01:39.347 --> 00:01:42.313
We'll pull in that parse and evaluate.

33
00:01:42.313 --> 00:01:44.367
We want to do two things.

34
00:01:44.367 --> 00:01:48.958
We want to be able to call the repl
from this command line tool.

35
00:01:48.958 --> 00:01:54.680
And we wanna be able to read a file and
log the output, all right?

36
00:01:54.680 --> 00:01:58.403
And so we pulled in the ability
to read from the file system,

37
00:01:58.403 --> 00:02:01.391
we pulled in the ability to parse and
evaluate.

38
00:02:01.391 --> 00:02:03.163
What's going on over here?

39
00:02:03.163 --> 00:02:06.441
So, you get this process at argv,

40
00:02:06.441 --> 00:02:11.314
argv is all of the arguments
past the command line.

41
00:02:11.314 --> 00:02:14.644
And we have to slice two
cuz the first one is node,

42
00:02:14.644 --> 00:02:17.822
the second one is the command itself,
right?

43
00:02:17.822 --> 00:02:19.849
Got it, noted.

44
00:02:19.849 --> 00:02:21.806
Don't need those, right?

45
00:02:21.806 --> 00:02:24.932
So this will actually give
us the rest of it, right?

46
00:02:24.932 --> 00:02:28.651
So if there's no command if
they just type in, drop bear.

47
00:02:28.651 --> 00:02:32.388
Cool, like shoot them into the REPL,
right?

48
00:02:32.388 --> 00:02:36.715
Whatever they type they can
type in capital whatever.

49
00:02:36.715 --> 00:02:41.615
They can type run,
will also then grab another argument and

50
00:02:41.615 --> 00:02:43.675
be able to read the file.

51
00:02:43.675 --> 00:02:47.384
We'll grab the rest of the args,
effectively the third argue and forward.

52
00:02:47.384 --> 00:02:52.040
So like, we can add some additional error
checking here as well, but basically,

53
00:02:52.040 --> 00:02:54.872
they can say, drop bear run and
then a file name and

54
00:02:54.872 --> 00:02:58.058
we'll send it to the same parse and
evaluator, right?

55
00:02:58.058 --> 00:03:02.599
You can do flags through output but you'd
also do a lot of that in bash, right?

56
00:03:02.599 --> 00:03:07.572
If you just use the angle bracket, you can
actually output to another file as well,

57
00:03:07.572 --> 00:03:12.046
so I didn't feel like that was the best
use of our time, but we can take it for

58
00:03:12.046 --> 00:03:12.559
a spin.

59
00:03:12.559 --> 00:03:14.194
But then, how do you use it?

60
00:03:14.194 --> 00:03:16.786
Well, you have a few options, right?

61
00:03:16.786 --> 00:03:21.693
Like, with the bin directory and
node modules, if it was a dependency, for

62
00:03:21.693 --> 00:03:25.616
instance, you could do like
either from your package JSON.

63
00:03:25.616 --> 00:03:28.895
If it was a script, you could run it,
or with MPX, you can run it.

64
00:03:28.895 --> 00:03:30.863
But also, if you globally installed it,

65
00:03:30.863 --> 00:03:33.797
you now have the Dropbear
programming language in your path.

66
00:03:33.797 --> 00:03:39.298
But you're like, I don't really need
to publish it to MPM yet, totally cool.

67
00:03:39.298 --> 00:03:43.713
You can still use it from anywhere
in your system by running MPM link.

68
00:03:43.713 --> 00:03:45.170
So let's actually take that for a spin.

69
00:03:48.083 --> 00:03:50.347
&gt;&gt; Steve Kinney: That's why I make sure
I'm not in the actual Dropbear prompt now.

70
00:03:50.347 --> 00:03:53.004
You can run npm link.

71
00:03:57.591 --> 00:04:00.161
&gt;&gt; Steve Kinney: This is
effectively installing it globally.

72
00:04:00.161 --> 00:04:05.951
All right, and you can see that
I can type it in dropbear now.

73
00:04:05.951 --> 00:04:09.966
And I'm in the command line for dropbear.

74
00:04:11.787 --> 00:04:17.183
&gt;&gt; Steve Kinney: Right now our
language is predominately math like

75
00:04:17.183 --> 00:04:23.746
we now have the power to add
whatever else we want to it right?

76
00:04:23.746 --> 00:04:25.154
And so if you think about it,

77
00:04:25.154 --> 00:04:29.219
like we talked about the fact that like
languages have a lot of different avenues.

78
00:04:29.219 --> 00:04:31.628
They can be a programming language per se.

79
00:04:31.628 --> 00:04:35.825
But they can also do other commands, like
a lot of this like being able to parse and

80
00:04:35.825 --> 00:04:39.163
understand the syntactic structure
of thing could be useful for

81
00:04:39.163 --> 00:04:41.474
writing your own command line tools right?

82
00:04:41.474 --> 00:04:45.280
Like we use it like I mentioned earlier
for like SQL and stuff along those lines.

83
00:04:45.280 --> 00:04:48.462
There's a ton of uses that a lot
of these seals like on top

84
00:04:48.462 --> 00:04:52.892
of the fun like I'm still enamored by
this and I've been doing it for a while.

85
00:04:52.892 --> 00:04:57.409
There's a lot of like just generally
practical ways that like, otherwise you'd

86
00:04:57.409 --> 00:05:01.538
be sitting there probably like regxing
stuff, so on and so forth, right?

87
00:05:01.538 --> 00:05:04.478
Like, and one of the things
that got me into this was like,

88
00:05:04.478 --> 00:05:07.785
basically trying to resurrect HTML,
which went really poorly.

89
00:05:07.785 --> 00:05:09.346
So we can do that.

90
00:05:09.346 --> 00:05:13.515
And the other thing is a run if you
look in, there's an Examples folder.

91
00:05:13.515 --> 00:05:17.917
If you look in there,
there's this example.dbr.

92
00:05:17.917 --> 00:05:21.163
I spent a lot of time trying to come up
with a file extension that wasn't taken by

93
00:05:21.163 --> 00:05:22.550
anything else on my file system.

94
00:05:22.550 --> 00:05:25.431
And it wasn't a full .dropbear,
which I thought about for a while, but

95
00:05:25.431 --> 00:05:27.047
I decided that I didn't want to do that.

96
00:05:27.047 --> 00:05:32.971
So we can do a dropbear and
we can say run.

97
00:05:32.971 --> 00:05:37.730
Do examples
&gt;&gt; Steve Kinney: Right?

98
00:05:37.730 --> 00:05:40.553
I can now like read a file and
execute it, right?

99
00:05:40.553 --> 00:05:43.387
So we've got some of the kind of like
hallmarks of a tool that we can build on

100
00:05:43.387 --> 00:05:43.906
our system.

101
00:05:43.906 --> 00:05:49.364
Be able to do interesting things right,
like our language is still pretty simple

102
00:05:49.364 --> 00:05:54.582
but it's got a lot of the moving pieces
of a real language and if you NPM publish

103
00:05:54.582 --> 00:05:59.664
this it will work like I said, we can
just type dropbear now from anywhere.

104
00:05:59.664 --> 00:06:01.215
We can also run and execute files.

105
00:06:01.215 --> 00:06:06.264
If you want to do
the output somewhere I can

106
00:06:06.264 --> 00:06:12.044
say like I can just do
the carrot command right?

107
00:06:12.044 --> 00:06:13.669
TXD, how about that, like catoutput.txt.

108
00:06:14.813 --> 00:06:15.365
&gt;&gt; Steve Kinney: There's my six.

109
00:06:15.365 --> 00:06:21.239
So now I can theoretically run programs
as I add more things to this language.

110
00:06:21.239 --> 00:06:24.264
There is a few libraries.

111
00:06:24.264 --> 00:06:26.873
Like Minimist is actually
in the package json here,

112
00:06:26.873 --> 00:06:30.492
which will like allow you to parse
flags and do additional other things if

113
00:06:30.492 --> 00:06:33.603
you wanted to additional features
to your command line tool.

114
00:06:33.603 --> 00:06:40.334
That is a thing that you can and
arguably should do as well, right?

115
00:06:40.334 --> 00:06:42.774
This library right here, Minimist,

116
00:06:42.774 --> 00:06:47.514
which is incredibly difficult to say
out loud in front of people, great.

117
00:06:47.514 --> 00:06:49.866
So we have everything in place there.

118
00:06:49.866 --> 00:06:54.772
Now, what if we wanted to
transpire this language?

119
00:06:54.772 --> 00:06:57.677
Right or do things with that ASD?

120
00:06:57.677 --> 00:06:59.336
What if we wanted to add
additional features?

121
00:06:59.336 --> 00:07:04.108
Sometimes it makes sense to
do that at parse time, right?

122
00:07:04.108 --> 00:07:08.124
Sometimes you do want to
transform the language over time.

123
00:07:08.124 --> 00:07:09.410
I mean, as I said before,

124
00:07:09.410 --> 00:07:13.225
most of us when we're using JavaScript
are not using JavaScript isolation.

125
00:07:13.225 --> 00:07:17.715
We are also using JavaScript as we
get it to the point where we can

126
00:07:17.715 --> 00:07:22.316
transform it into other versions
of JavaScript that we can use.

