WEBVTT

1
00:00:00.000 --> 00:00:00.886
&gt;&gt; Steve: So
what are we gonna build today?

2
00:00:00.886 --> 00:00:04.184
We're gonna build a little
language called Dropbear.

3
00:00:04.184 --> 00:00:06.170
Are you all familiar
with what a Dropbear is?

4
00:00:06.170 --> 00:00:11.241
A Dropbear is an urban myth or I guess,
not an urban myth, an Australian

5
00:00:11.241 --> 00:00:16.662
mythical creature that hides in the top
of trees and then body slams people.

6
00:00:16.662 --> 00:00:19.925
So I started with the name
a few years ago and said,

7
00:00:19.925 --> 00:00:24.996
whenever I write a programming language,
it is going to be called Dropbear.

8
00:00:24.996 --> 00:00:30.227
That it like, it has no real,
the language doesn't do that.

9
00:00:30.227 --> 00:00:33.358
But I always knew that the language is
going to be called Dropbear before I even

10
00:00:33.358 --> 00:00:35.155
knew what the syntax
was going to look like.

11
00:00:35.155 --> 00:00:36.810
It's important to have names,

12
00:00:36.810 --> 00:00:40.067
the same way you buy a domain name
before you start the project.

13
00:00:40.067 --> 00:00:41.857
All right, same idea.

14
00:00:41.857 --> 00:00:46.885
With that said,
it basically looks like Scheme, right?

15
00:00:46.885 --> 00:00:51.029
And this is mostly for practical
reasons and also aspirational reasons.

16
00:00:51.029 --> 00:00:54.632
I am the person that when I
finally do become rich, and

17
00:00:54.632 --> 00:00:59.206
I get to actually quit my job,
I will sit here and write Lisp all day.

18
00:00:59.206 --> 00:01:02.522
Right now, that's not a thing
[LAUGH] that's not gonna happen so

19
00:01:02.522 --> 00:01:05.172
this is a little chance for
me to live my glory days.

20
00:01:05.172 --> 00:01:09.775
But there's also a very practical
reason to work on a Lisp,

21
00:01:09.775 --> 00:01:14.930
which is, if you think about Python,
Python has 33 keywords and

22
00:01:14.930 --> 00:01:19.643
110 syntactic forms,
Java has 133 syntactic forms.

23
00:01:19.643 --> 00:01:24.039
We'd be here for a good month, right?

24
00:01:24.039 --> 00:01:26.622
Scheme is a lot simpler, right?

25
00:01:26.622 --> 00:01:28.543
It's effectively a bunch of Lisps.

26
00:01:28.543 --> 00:01:31.381
And so it'll be a little bit easier
to kind of get started with.

27
00:01:31.381 --> 00:01:35.378
The other nice part about Scheme is that
it is, if you ever look at Handlebars,

28
00:01:35.378 --> 00:01:39.451
Handlebars is very much like a Lisp with
strings of texts in the middle, right?

29
00:01:39.451 --> 00:01:42.347
A lot of templating languages
are very close to this as well.

30
00:01:42.347 --> 00:01:45.967
So you can kind of use it
practically there too.

31
00:01:45.967 --> 00:01:48.509
So there's a lot of inspiration,

32
00:01:48.509 --> 00:01:53.770
if you feel really inspired after this,
and you want to do more things,

33
00:01:53.770 --> 00:01:59.576
Peter Norvigs's Lispy is a Lisp written
in Python that inspired some of this.

34
00:01:59.576 --> 00:02:02.656
There's the Egg programing
language in Eloquent JavaScript.

35
00:02:02.656 --> 00:02:04.382
The Super Tiny Compiler,

36
00:02:04.382 --> 00:02:09.095
which is just a very small Lisp-like
compiler written in JavaScript.

37
00:02:09.095 --> 00:02:14.369
There's lots of different resources where
you can take this for more spins that

38
00:02:14.369 --> 00:02:19.969
will serve as both a kind of a prequel and
a sequel to what we're doing today, right?

39
00:02:19.969 --> 00:02:24.808
We use a lot of these techniques on
our own templating language that we're

40
00:02:24.808 --> 00:02:28.487
working on right now to kind
of make dynamic templates.

41
00:02:28.487 --> 00:02:30.574
Part of our goal is to make it so
that developers and

42
00:02:30.574 --> 00:02:33.177
marketers don't have to talk
to each other anymore, right?

43
00:02:33.177 --> 00:02:38.032
And if we can make the language very easy
to use, so that they don't have to file

44
00:02:38.032 --> 00:02:42.168
a ticket to change the email template,
then I win, technically.

