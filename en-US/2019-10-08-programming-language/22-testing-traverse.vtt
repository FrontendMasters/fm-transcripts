WEBVTT

1
00:00:00.000 --> 00:00:02.753
&gt;&gt; Steve Kinney: So now we're
able to traverse the entire tree.

2
00:00:02.753 --> 00:00:05.810
It's not really a lot we
can do with that just yet.

3
00:00:05.810 --> 00:00:09.527
[LAUGH] But it is, in fact,
it is there, right?

4
00:00:09.527 --> 00:00:13.743
We get there, I have a console log, and if
we really need to see iterate account or

5
00:00:13.743 --> 00:00:15.365
something along those lines.

6
00:00:15.365 --> 00:00:17.611
But let's do a thing.

7
00:00:17.611 --> 00:00:22.137
Let's try something really simple,
let's try to go ahead, and

8
00:00:22.137 --> 00:00:27.009
we're gonna change all of the ads
to subtracts for instance, right?

9
00:00:27.009 --> 00:00:28.328
Why?
I don't know,

10
00:00:28.328 --> 00:00:31.340
I wasn't feeling particularly original.

11
00:00:31.340 --> 00:00:33.066
So, what would this look like?

12
00:00:33.066 --> 00:00:37.058
Here you can see we've kind of
gotten implementation of it,

13
00:00:37.058 --> 00:00:42.381
now that we've got the traversal feature
in place, we've got our visitor, and

14
00:00:42.381 --> 00:00:48.190
it's saying, for every call expression, I
care about when I enter a call expression.

15
00:00:48.190 --> 00:00:50.400
We're also gonna do some of
the numeric laterals too.

16
00:00:50.400 --> 00:00:54.249
But, I'm gonna say when I
care about a call expression,

17
00:00:54.249 --> 00:00:58.979
I'm gonna go ahead, I'm going to
enter that node on the entrance in,

18
00:00:58.979 --> 00:01:03.892
and if the node name is add,
I'm going to change it to subtract, right?

19
00:01:03.892 --> 00:01:05.488
And this will walk your tree, and

20
00:01:05.488 --> 00:01:07.942
effectively perform a code
modification for you.

21
00:01:07.942 --> 00:01:12.045
Right, and this one, it's silly,
but it's also easy to see, right?

22
00:01:12.045 --> 00:01:16.223
Sometimes when you see, what I showed you
is changing the variable from far to lat,

23
00:01:16.223 --> 00:01:17.835
made sense when I explained it,

24
00:01:17.835 --> 00:01:20.660
but it wasn't immediately
apparent what it was doing.

25
00:01:20.660 --> 00:01:25.807
This one is dumb, but
obvious, so we can do that.

26
00:01:25.807 --> 00:01:28.905
And then if I come across an American
literal on the way up, and

27
00:01:28.905 --> 00:01:32.421
it really doesn't matter,
this is rad really rely on anything else,

28
00:01:32.421 --> 00:01:34.999
on the way up out of those,
I will double the value.

29
00:01:34.999 --> 00:01:39.483
Now what this will do is, other just
completely wreak havoc, I can make

30
00:01:39.483 --> 00:01:44.590
a fabulous one that goes ahead and just
removes half of all nodes, will be great.

31
00:01:44.590 --> 00:01:45.865
So, on so forth, right?

32
00:01:45.865 --> 00:01:47.460
So this actually is play.

33
00:01:47.460 --> 00:01:50.134
So let's actually, what I'm hoping now,

34
00:01:50.134 --> 00:01:53.759
is if I give it this ASC of
a call expression with ad, right?

35
00:01:53.759 --> 00:01:58.701
What I hope to see at the end, is that now
it actually has the value of subtract.

36
00:01:58.701 --> 00:02:02.149
Right?
But we have modified the code, and yes,

37
00:02:02.149 --> 00:02:04.486
a simple way to start out with.

38
00:02:04.486 --> 00:02:05.983
Let's go ahead and we'll run it

39
00:02:15.306 --> 00:02:15.970
&gt;&gt; Steve Kinney: Cool.

40
00:02:15.970 --> 00:02:17.970
So now, I have modified my code.

41
00:02:17.970 --> 00:02:22.824
If I sat there and ran this as part of
the CLI or the Math would be weird,

42
00:02:22.824 --> 00:02:26.932
because I'd still be typing ad,
but you would modify the code and

43
00:02:26.932 --> 00:02:28.743
do stuff along those lines.

44
00:02:28.743 --> 00:02:32.610
Now that's mildly interesting for
changing some of my functions, right?

45
00:02:32.610 --> 00:02:37.238
It is also, there's again, it's one of the
things that these tools come with a lot of

46
00:02:37.238 --> 00:02:40.988
other uses, we know that this is how
a lot of our transpire this work.

47
00:02:40.988 --> 00:02:44.300
I think some of you have
played with code mods before.

48
00:02:44.300 --> 00:02:47.499
Right, they can go in effectively like
refactor large parts to your code base.

49
00:02:47.499 --> 00:02:52.375
You could go find all the F five classes
and changing the ESL classes, right?

50
00:02:52.375 --> 00:02:56.440
Stuff that might be otherwise, squirrely
to do and time consuming can be done.

51
00:02:56.440 --> 00:02:57.556
Fairly easily, right?

52
00:02:57.556 --> 00:03:01.072
Usually when some libraries come out,
a new version of react, they

53
00:03:01.072 --> 00:03:05.775
will release a code of deprecated things
when it's just a syntax change, right?

54
00:03:05.775 --> 00:03:10.059
You can also do really powerful and
interesting things to your own code, or

55
00:03:10.059 --> 00:03:13.122
other problems you might
have to solve along the way.

56
00:03:13.122 --> 00:03:16.548
Let's also make sure the doubling numbers,
in fact works too, so

57
00:03:16.548 --> 00:03:18.150
we'll skip that test as well.

58
00:03:18.150 --> 00:03:23.156
So here you've got 12 and six that
should end up being 24 and 12, right?

59
00:03:23.156 --> 00:03:30.199
And so you can see, this one doesn't do
anything to the call expression, right?

60
00:03:30.199 --> 00:03:33.387
You can have the same, but
it's using the same reversal.

61
00:03:33.387 --> 00:03:37.088
It doesn't, it is agnostic to whether or
not you want to traverse up or

62
00:03:37.088 --> 00:03:38.992
down, or think along those lines.

63
00:03:42.252 --> 00:03:44.458
&gt;&gt; Steve Kinney: So,
let's give a shot with that one.

64
00:03:48.922 --> 00:03:51.450
&gt;&gt; Steve Kinney: Cool.

65
00:03:51.450 --> 00:03:54.734
So, what I wanna do is,
give you a chance to try this out, right?

66
00:03:54.734 --> 00:03:56.479
You can add one additional test.

67
00:03:56.479 --> 00:03:59.987
And we want to change,
maybe multiply to divide, or

68
00:03:59.987 --> 00:04:05.111
we can change every string of the text,
Thanos to Captain America, right?

69
00:04:05.111 --> 00:04:10.241
And then we'll write one together
from scratch, in about five minutes.

