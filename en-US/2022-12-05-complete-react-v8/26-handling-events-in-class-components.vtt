WEBVTT

1
00:00:00.269 --> 00:00:02.483
Okay, I have one more thing
that I wanna show you here.

2
00:00:02.483 --> 00:00:05.912
So I want you to be able to click
on one of these images, and

3
00:00:05.912 --> 00:00:07.777
have it update the hero image.

4
00:00:07.777 --> 00:00:10.531
So I wanna add some interactivity to this.

5
00:00:13.034 --> 00:00:20.335
So we're gonna make a function
here to handleIndexClick.

6
00:00:20.335 --> 00:00:25.186
And we're gonna make this a function now I
could just make this a function where I do

7
00:00:25.186 --> 00:00:30.109
this, but the problem is and this is the
weirdness that comes with class components

8
00:00:30.109 --> 00:00:33.973
is what this is, is important so
if I do this handle index click and

9
00:00:33.973 --> 00:00:36.756
I say whenever someone
clicks on one of these.

10
00:00:36.756 --> 00:00:41.583
So unclick.

11
00:00:41.583 --> 00:00:44.084
This dot handle index click.

12
00:00:46.992 --> 00:00:51.858
So, we're gonna do a bad
accessibility thing right now and

13
00:00:51.858 --> 00:00:56.832
it's, I'm sorry, so
we're gonna say eslint-disable.

14
00:00:56.832 --> 00:00:59.279
Actually, we're gonna do it this way.

15
00:00:59.279 --> 00:01:04.321
Just Disable that totally, okay.

16
00:01:04.321 --> 00:01:09.198
So, I have this handle index click, and

17
00:01:09.198 --> 00:01:13.214
if I do, just, console dot log,

18
00:01:13.214 --> 00:01:16.952
this What do you think this is?

19
00:01:16.952 --> 00:01:22.537
A trick question by the way,
I think it's window.

20
00:01:22.537 --> 00:01:25.501
Let me check, cancel.

21
00:01:25.501 --> 00:01:29.032
So click undefined, so I was wrong.

22
00:01:29.032 --> 00:01:31.451
See?

23
00:01:31.451 --> 00:01:34.980
I want it to be the component right?

24
00:01:34.980 --> 00:01:42.029
bunch of ways to handle this, easiest one
is make this an arrow function like that.

25
00:01:42.029 --> 00:01:46.454
Now, if I go back and
do it again it's the carousel.

26
00:01:46.454 --> 00:01:51.210
Why does that work well whenever you do
an arrow function it doesn't create new

27
00:01:51.210 --> 00:01:56.039
scope, when you invoke an arrow function
doesn't create new scope versus when

28
00:01:56.039 --> 00:02:00.797
you have a normal function whenever you
invoke it it creates a new function a new

29
00:02:00.797 --> 00:02:05.193
scope at the point of invocation, So
because this function is invoked,

30
00:02:05.193 --> 00:02:08.180
as an avant listener is
invoked with no context.

31
00:02:08.180 --> 00:02:11.426
Whereas this will capture the scope
of wherever it was written.

32
00:02:11.426 --> 00:02:14.278
So in this case,
it captures it at caresole.

33
00:02:16.158 --> 00:02:16.875
That make sense?

34
00:02:16.875 --> 00:02:24.418
Kind of it's JavaScript weirdness
to really under to let you know.

35
00:02:24.418 --> 00:02:29.630
Okay, so
now that we have the correct scope,

36
00:02:29.630 --> 00:02:32.784
we're gonna say this, and

37
00:02:32.784 --> 00:02:37.996
then we want this to take
in the event as well or

38
00:02:37.996 --> 00:02:44.169
es I've been calling it,
this does set state Okay and

39
00:02:44.169 --> 00:02:49.243
we want active to be
event dot target dot data

40
00:02:49.243 --> 00:02:55.317
set dot index Okay that's
an event we want e rather.

41
00:02:55.317 --> 00:03:00.707
II Okay, and then I don't think
we gave this an index yet.

42
00:03:00.707 --> 00:03:02.391
Yeah, we did.

43
00:03:02.391 --> 00:03:08.826
So under the un click here
give this data dash index

44
00:03:08.826 --> 00:03:13.891
equals index, which comes from here.

45
00:03:13.891 --> 00:03:15.825
Okay.

46
00:03:15.825 --> 00:03:18.125
Still, there's still a problem with this,
but

47
00:03:18.125 --> 00:03:20.210
let's talk about what's happening here.

48
00:03:20.210 --> 00:03:24.537
So, I click on this, this is gonna call
this function, which is gonna take in this

49
00:03:24.537 --> 00:03:28.867
event, which and then we're gonna call
this dot set state, which is basically,

50
00:03:28.867 --> 00:03:33.009
you provided an object, and it's going
to do an object merge, basically like

51
00:03:33.009 --> 00:03:36.946
an object at a sign, of your current
state, with whatever you have here.

52
00:03:36.946 --> 00:03:41.196
So, if I had a second thing here,
which is let's just say,

53
00:03:41.196 --> 00:03:44.009
name Luna or something like that.

54
00:03:44.009 --> 00:03:48.308
If I do this, it's only going to overwrite
active it's going to leave whatever else

55
00:03:48.308 --> 00:03:52.181
is there alone right just like object
assign does k and then it's going to set

56
00:03:52.181 --> 00:03:56.258
that the active to be whatever the E dot
target which will be this image, right?

57
00:03:56.258 --> 00:04:00.309
data set, which refers to all
data dash things on an object.

58
00:04:00.309 --> 00:04:05.077
That's a dumb method Index.

59
00:04:05.077 --> 00:04:09.568
What type is index?

60
00:04:09.568 --> 00:04:14.488
A string because everything that comes out
of the dumb is the string all the time.

61
00:04:14.488 --> 00:04:18.713
Despite the fact that we give it a number
here, doesn't matter, it comes back out of

62
00:04:18.713 --> 00:04:22.419
the dumb as a string because everything
that's in the dumb is the string.

63
00:04:22.419 --> 00:04:29.073
So this is called a unary plus
which just takes a string and

64
00:04:29.073 --> 00:04:34.200
turns it into a number to
prove my point if I do

65
00:04:34.200 --> 00:04:39.053
plus five If I get
the number of five back,

66
00:04:39.053 --> 00:04:42.264
that's what it's doing.

67
00:04:42.264 --> 00:04:44.351
It coerces a string to a number.

68
00:04:44.351 --> 00:04:45.189
There's other ways to do it.

69
00:04:45.189 --> 00:04:46.517
I just think this is elegant.

70
00:04:46.517 --> 00:04:49.092
So I do it that way.

71
00:04:49.092 --> 00:04:51.276
So now active is a number.

72
00:04:51.276 --> 00:04:55.758
It's important because we use it here
as a number, so it must be a number.

73
00:04:55.758 --> 00:05:03.433
So now I think If I click on these,
It'll change pictures.

74
00:05:03.433 --> 00:05:04.470
So I don't know, what do you think?

75
00:05:04.470 --> 00:05:09.081
Do you like this class component or
do you like functions?

76
00:05:11.094 --> 00:05:15.136
&gt;&gt; [INAUDIBLE]
&gt;&gt; There's things like about both.

77
00:05:15.136 --> 00:05:19.233
And if if you feel a little conflicted
about it, I feel like I've done my job.

78
00:05:19.233 --> 00:05:24.614
Now, if you want to get way back there
was a thing called react create class.

79
00:05:24.614 --> 00:05:27.635
That was a very nice API.

80
00:05:27.635 --> 00:05:30.332
Because all the stuff that you have to
do to like bind this to be the right

81
00:05:30.332 --> 00:05:30.983
thing, react.

82
00:05:30.983 --> 00:05:33.686
Duck Creek class used to do that for you.

83
00:05:33.686 --> 00:05:34.839
And they got rid of it.

84
00:05:34.839 --> 00:05:36.712
I'm sad about it.

85
00:05:36.712 --> 00:05:39.216
They got rid of it because
they wanted to lean into this.

86
00:05:39.216 --> 00:05:41.027
Es six classes had just come out.

87
00:05:41.027 --> 00:05:44.226
They wanted to lean into
the features of JavaScript.

88
00:05:44.226 --> 00:05:47.558
So like, well,
let's conform to the language.

89
00:05:47.558 --> 00:05:50.722
Very reasonable thing for them to say.

90
00:05:50.722 --> 00:05:53.729
This was just really nice.

91
00:05:53.729 --> 00:05:54.939
That's all.

92
00:05:56.816 --> 00:05:58.801
Okay.

93
00:05:58.801 --> 00:06:01.478
I'm just gonna say it again,
you cannot use hooks here.

94
00:06:01.478 --> 00:06:06.039
So I cannot say const,
like use query could not be used here.

95
00:06:06.039 --> 00:06:08.727
Use breed lists could not be used here.

96
00:06:08.727 --> 00:06:11.782
Class components can't
have any of those things.

97
00:06:14.338 --> 00:06:18.594
You have to do things like higher
order components and things like that,

98
00:06:18.594 --> 00:06:20.701
we might get into a tiny bit of that.

99
00:06:20.701 --> 00:06:25.834
But let's say okay, let's say we wanted to
use use breed list for some reason here.

100
00:06:25.834 --> 00:06:30.329
The way that you would do that don't
I'm just showing an example so

101
00:06:30.329 --> 00:06:32.589
don't don't have to copy this.

102
00:06:32.589 --> 00:06:39.292
You would say function CarouselParent,

103
00:06:39.292 --> 00:06:45.036
and let's say it took in an animal,

104
00:06:45.036 --> 00:06:52.122
you would say, okay, const [breedlist]

105
00:06:52.122 --> 00:06:58.402
= useBreedlist Animal, right?

106
00:06:58.402 --> 00:07:00.853
And then you would just
feed that into carousel.

107
00:07:00.853 --> 00:07:06.367
So you would return carousel

108
00:07:06.367 --> 00:07:10.525
with a breed list.

109
00:07:10.525 --> 00:07:12.302
Equals breed list.

110
00:07:12.302 --> 00:07:17.204
So basically what the way you handle
that if you need to use a hook with

111
00:07:17.204 --> 00:07:22.106
a class component is you make a tiny,
top level parent component and

112
00:07:22.106 --> 00:07:25.216
then here I would export carousel parent.

113
00:07:25.216 --> 00:07:27.640
Right?.What is this?

114
00:07:27.640 --> 00:07:30.448
This is just a tiny, tiny little
component that then takes something and

115
00:07:30.448 --> 00:07:31.563
passes it down to the child.

116
00:07:31.563 --> 00:07:35.420
[INAUDIBLE] Right, does that make sense?

117
00:07:35.420 --> 00:07:39.308
If you looking as like that's dump,
kinda dump, yeah,

118
00:07:39.308 --> 00:07:42.225
that's really is but
this is how you do it.

119
00:07:43.754 --> 00:07:45.282
Does that make sense?

120
00:07:45.282 --> 00:07:47.452
okay.

121
00:07:47.452 --> 00:07:51.174
So, for example actually
we might end up doing this,

122
00:07:51.174 --> 00:07:54.480
i don't remember if we end up doing it,
But

123
00:07:54.480 --> 00:07:59.881
if you wanted to use like react router,
I think now only ships hooks, right?

124
00:07:59.881 --> 00:08:05.293
So if you wanna use a hook in
a class component from React router,

125
00:08:05.293 --> 00:08:07.308
you must do it this way.

126
00:08:07.308 --> 00:08:07.965
Last questions.

127
00:08:07.965 --> 00:08:08.515
Yeah.

128
00:08:08.515 --> 00:08:10.279
So this, class component.

129
00:08:10.279 --> 00:08:16.670
For the purpose of this course, was just
to get us familiar with that concept.

130
00:08:16.670 --> 00:08:19.940
&gt;&gt; Yes, this absolute can be
written as a function component.

131
00:08:21.130 --> 00:08:25.329
&gt;&gt; Would you suggest so
&gt;&gt; makes no difference.

132
00:08:25.329 --> 00:08:27.929
In this particular case,
everything we've written so

133
00:08:27.929 --> 00:08:31.372
far has been a function component There
is positively zero reason for us.

134
00:08:31.372 --> 00:08:32.744
To switch using a class component.

135
00:08:32.744 --> 00:08:36.557
So I would suggest you'd use a function
component in this particular case.

136
00:08:38.861 --> 00:08:40.356
But if I show up in your codebase and.

137
00:08:40.356 --> 00:08:41.389
This was there, I.

138
00:08:41.389 --> 00:08:42.960
Would not be offended by this.

139
00:08:42.960 --> 00:08:44.894
Someone might, but I wouldn't.

140
00:08:44.894 --> 00:08:47.833
The next thing that we're about to write,
the error boundary.

141
00:08:47.833 --> 00:08:48.752
Must be written.

142
00:08:48.752 --> 00:08:49.620
As a class component.

143
00:08:49.620 --> 00:08:50.425
It literally cannot.

144
00:08:50.425 --> 00:08:51.591
Do that in a function component.

145
00:08:51.591 --> 00:08:56.055
Must be written as well Class component,
so this was kind of to get you used

146
00:08:56.055 --> 00:08:59.800
to that idea and then we're gonna
hop into an error boundary.

