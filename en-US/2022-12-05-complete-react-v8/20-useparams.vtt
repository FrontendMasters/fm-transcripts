WEBVTT

1
00:00:00.000 --> 00:00:01.299
A man Luna here.

2
00:00:01.299 --> 00:00:06.512
Let's say I want to get this
ID here out of the path.

3
00:00:06.512 --> 00:00:07.455
How do I do that?

4
00:00:09.762 --> 00:00:15.624
Well, let me introduce you to your friend.

5
00:00:15.624 --> 00:00:19.112
Use params, so go to details.jsx,

6
00:00:19.112 --> 00:00:25.182
at the top here import Use params.

7
00:00:25.182 --> 00:00:28.755
You see use here, you should be thinking,

8
00:00:28.755 --> 00:00:34.124
this is a hook because it is,
let me introduce you to this magic.

9
00:00:34.124 --> 00:00:39.825
Const id equals use params, there you go.

10
00:00:39.825 --> 00:00:44.985
And now, Replace high with id.

11
00:00:50.571 --> 00:00:51.987
Look at that, it's correct.

12
00:00:54.601 --> 00:00:57.619
All right, so
I'm clicking into all these pages and

13
00:00:57.619 --> 00:01:02.298
it's given me the correct ID for all
the various different pets I'm looking at.

14
00:01:02.298 --> 00:01:03.130
How?

15
00:01:03.130 --> 00:01:06.967
Magic non stop magic.

16
00:01:06.967 --> 00:01:08.235
It's something called context.

17
00:01:08.235 --> 00:01:11.057
You and I are gonna do it
directly here in just a second.

18
00:01:11.057 --> 00:01:15.219
But basically what's happening
is you have App.jsx here we put

19
00:01:15.219 --> 00:01:18.920
this browser router component
around our application,

20
00:01:18.920 --> 00:01:24.331
which is making this thing called context
available to components underneath it.

21
00:01:24.331 --> 00:01:29.444
So it's basically passing it into
this like sides store of data.

22
00:01:29.444 --> 00:01:34.110
And then when I come back over to details,
when I say use params like,

23
00:01:34.110 --> 00:01:37.656
okay, I assume that a browser
router is available.

24
00:01:37.656 --> 00:01:40.096
So I'm going to reach
into a browser router and

25
00:01:40.096 --> 00:01:41.920
pull out something called the id.

26
00:01:41.920 --> 00:01:43.610
And that's where this id comes from.

27
00:01:43.610 --> 00:01:49.017
It's coming from that browser
router component in the app.jsx.

28
00:01:50.636 --> 00:01:52.970
That makes sense?

29
00:01:52.970 --> 00:02:00.100
So in other words if you delete this,

30
00:02:00.100 --> 00:02:04.010
let's just do it for

31
00:02:04.010 --> 00:02:10.368
fun, Yeah.

32
00:02:10.368 --> 00:02:12.562
I'm just gonna make this a div for
a second.

33
00:02:14.540 --> 00:02:17.773
So now if I refresh the page,
it's gonna say, hey,

34
00:02:17.773 --> 00:02:21.978
you're trying to use routes and
stuff like that with a bunch of set.

35
00:02:21.978 --> 00:02:23.562
It would basically give you an error.

36
00:02:23.562 --> 00:02:25.220
It has given me a lot of errors because,

37
00:02:25.220 --> 00:02:28.098
a lot of this stuff actually depends
on browser router being there.

38
00:02:28.098 --> 00:02:30.917
But use params does not work
without a browser router to

39
00:02:30.917 --> 00:02:32.705
provide it with the information.

40
00:02:32.705 --> 00:02:33.868
That's my point there.

41
00:02:33.868 --> 00:02:42.204
Use params here gets the id from
the browser router which it got from here.

42
00:02:44.788 --> 00:02:47.823
&gt;&gt; Which we can see in
the dev tools is it?

43
00:02:47.823 --> 00:02:51.796
&gt;&gt; Yep, should be able to see
them the dev tools as well.

44
00:02:51.796 --> 00:02:53.326
Components, I mean,

45
00:02:53.326 --> 00:02:58.654
you can see all of the indirection that
this is all coming from browser router.

46
00:03:00.473 --> 00:03:05.742
So if I look at details,
which I'm indeed we should,

47
00:03:05.742 --> 00:03:11.635
results app browser,
I don't know what's going on there.

48
00:03:11.635 --> 00:03:13.074
So details, here we go.

49
00:03:15.520 --> 00:03:19.238
Props, params you can see that
it's getting this from context.

50
00:03:19.238 --> 00:03:22.894
The context is getting this from matches,

51
00:03:22.894 --> 00:03:26.967
matches has this zero one,
the params is here.

52
00:03:29.247 --> 00:03:35.723
So, that's another useful tool for finding
out where's this information coming from?

53
00:03:35.723 --> 00:03:39.733
One more thing here let's make this
a clickable link here at the top.

54
00:03:39.733 --> 00:03:45.624
So import a link up here at the top
as well from React Router DOM.

55
00:03:45.624 --> 00:03:53.396
And we're just gonna give it a header and

56
00:03:53.396 --> 00:03:58.432
a link two slash adopt me.

57
00:04:04.520 --> 00:04:09.902
And now I got this nice little link here
at the top that I can click on to go home.

58
00:04:09.902 --> 00:04:12.742
Which is kind of the behavior you expect,
right?

59
00:04:12.742 --> 00:04:16.839
If you're getting a use-hreflang error,
that's one that I've seen before.

60
00:04:16.839 --> 00:04:20.306
Just make sure that the header
is inside a browser router

61
00:04:25.812 --> 00:04:32.775
That's 80% of what makes react router
useful that I've just shown you here.

62
00:04:32.775 --> 00:04:40.019
There's other stuff for sure, but
it's for basic client side routing.

