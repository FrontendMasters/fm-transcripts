WEBVTT

1
00:00:00.000 --> 00:00:00.794
Yeah, Mark.

2
00:00:00.794 --> 00:00:07.248
&gt;&gt; Do you always use const
when creating components?

3
00:00:07.248 --> 00:00:08.048
&gt;&gt; It's a good question.

4
00:00:08.048 --> 00:00:13.389
So I have const App = here,
totally preference.

5
00:00:13.389 --> 00:00:18.355
I use const, and
that's just force of habit.

6
00:00:18.355 --> 00:00:20.214
It's one of the things like semicolons,

7
00:00:20.214 --> 00:00:22.933
I really just profoundly don't
care how you choose to do it.

8
00:00:22.933 --> 00:00:26.170
It's literally my least
favorite thing to argue about,

9
00:00:26.170 --> 00:00:30.362
it's these stupid syntactical things,
right, of do you do it this way?

10
00:00:30.362 --> 00:00:31.397
Do you do it this way?

11
00:00:31.397 --> 00:00:32.974
Does it work?

12
00:00:32.974 --> 00:00:33.699
Does it compile?

13
00:00:33.699 --> 00:00:34.734
Can I read your code?

14
00:00:34.734 --> 00:00:37.564
If all those things are yes,
I just don't care.

15
00:00:37.564 --> 00:00:38.572
I really don't care.

16
00:00:38.572 --> 00:00:40.771
So you can put var here.

17
00:00:40.771 --> 00:00:44.131
You can put let here.

18
00:00:44.131 --> 00:00:45.733
You can put const here, doesn't matter.

19
00:00:49.006 --> 00:00:53.198
So maybe stated a little less snarkily,
which is hard for me sometimes,

20
00:00:53.198 --> 00:00:55.616
it makes no difference to React, right?

21
00:00:55.616 --> 00:01:00.034
Just write however you
normally write JavaScript.

22
00:01:00.034 --> 00:01:04.233
That's a better way to
answer that question.

23
00:01:04.233 --> 00:01:08.686
&gt;&gt; There's a question around
createRoot that wasn't in the previous

24
00:01:08.686 --> 00:01:10.335
versions of the course.

25
00:01:10.335 --> 00:01:13.699
&gt;&gt; Correct, okay, yeah.

26
00:01:13.699 --> 00:01:18.358
So let's talk about createRoot here,
which comes from ReactDOM.

27
00:01:18.358 --> 00:01:23.234
This is the new way of rendering
to the DOM from React.

28
00:01:23.234 --> 00:01:28.900
It used to be ReactDOM just render, right?

29
00:01:28.900 --> 00:01:32.292
And it's even still in there,
so ReactDOM.render,

30
00:01:32.292 --> 00:01:36.434
you don't have to copy this cuz
I'm just showing you how it works.

31
00:01:36.434 --> 00:01:39.096
And you would do container, App.

32
00:01:39.096 --> 00:01:43.685
And this is what it used to look like.

33
00:01:43.685 --> 00:01:46.935
Why do we do this now, .createRoot?

34
00:01:46.935 --> 00:01:51.248
With React 18, we got a new thing
called concurrency, which it used to be

35
00:01:51.248 --> 00:01:55.300
concurrent mode and now it's actually
just kind of built into React.

36
00:01:55.300 --> 00:02:01.547
There's no static mode versus
concurrent mode, it's just React mode.

37
00:02:01.547 --> 00:02:04.739
Part of this that they did this is so that
you can kind of opt into the new features.

38
00:02:04.739 --> 00:02:09.163
Cuz as soon as you put createRoot
in there, React knows like, okay,

39
00:02:09.163 --> 00:02:14.604
this person has updated to the new version
of React and they're anticipating that.

40
00:02:14.604 --> 00:02:17.816
This will put it into
what's called legacy mode,

41
00:02:17.816 --> 00:02:22.258
which doesn't have all the new
concurrency features of React 18.

42
00:02:22.258 --> 00:02:25.205
So in other words,
just always do createRoot now,

43
00:02:25.205 --> 00:02:29.659
you don't wanna do render anymore,
unless you specifically have reasons to

44
00:02:29.659 --> 00:02:32.623
stay on the older methodology
of rendering React.

45
00:02:32.623 --> 00:02:36.644
The other thing that's nice about
this is now you have this root thing,

46
00:02:36.644 --> 00:02:40.933
that you can just say root, and I think
it's you just call render again, and

47
00:02:40.933 --> 00:02:42.968
then it'll just re-render this.

48
00:02:42.968 --> 00:02:47.261
You have a handle on an object that
you can call to force top level

49
00:02:47.261 --> 00:02:50.582
re-renders of your entire
React application.

50
00:02:50.582 --> 00:02:54.255
If you asked me how often I do that,
the answer is never, or I haven't yet.

51
00:02:54.255 --> 00:02:55.455
I can see reasons.

52
00:02:55.455 --> 00:02:58.817
There are reasons that you
would want to do that,

53
00:02:58.817 --> 00:03:04.072
that I'm having a hard time making up
an example of why you'd wanna do that.

54
00:03:04.072 --> 00:03:08.357
Maybe you just got new information from,
I don't know.

55
00:03:08.357 --> 00:03:13.232
I don't know, a web socket or
something that came in and

56
00:03:13.232 --> 00:03:17.916
you need to rerender your
entire React application.

57
00:03:17.916 --> 00:03:21.657
Or maybe there's some external third party
application thing that's calling into

58
00:03:21.657 --> 00:03:23.301
React and you need to rerender that.

59
00:03:23.301 --> 00:03:25.828
I guess that's probably the best thing.

60
00:03:25.828 --> 00:03:28.330
If you had maybe a React island, right,

61
00:03:28.330 --> 00:03:32.598
in the frontend that had Angular on
there as well, and you need to pass

62
00:03:32.598 --> 00:03:36.889
something from Angular into React,
I could see that being a reason.

63
00:03:36.889 --> 00:03:39.402
It's like, okay, rerender my entire world.

64
00:03:39.402 --> 00:03:43.774
Otherwise, for the most part, you wanna
keep all of your state inside of React,

65
00:03:43.774 --> 00:03:45.526
so you wouldn't wanna do that.

66
00:03:45.526 --> 00:03:48.346
Anyway, that is the nice thing
about having a root here.

67
00:03:48.346 --> 00:03:51.386
This is a better API than
what was there previously.

68
00:03:51.386 --> 00:03:53.107
But this is the old API.

69
00:03:53.107 --> 00:03:55.514
So yes,
that is what createRoot is different of.

70
00:03:55.514 --> 00:04:00.169
If you're looking at this and
you've never seen the old API before,

71
00:04:00.169 --> 00:04:03.392
just forget about it,
you never have to use it.

72
00:04:03.392 --> 00:04:08.221
Just use the new API always and
forever, forget that ReactDOM.render

73
00:04:08.221 --> 00:04:13.627
even existed Cool, other questions?

74
00:04:13.627 --> 00:04:17.771
Yeah?

75
00:04:17.771 --> 00:04:23.383
&gt;&gt; I'm assuming you're gonna get into
this, so probably not answering it

76
00:04:23.383 --> 00:04:29.000
right now, but the main benefit of React,
just using React in general.

77
00:04:29.000 --> 00:04:32.515
&gt;&gt; Yeah, the value proposition of it.

78
00:04:32.515 --> 00:04:35.980
Yeah, We wanna answer that.

79
00:04:35.980 --> 00:04:39.762
I think I might have kinda
covered it a little bit, but

80
00:04:39.762 --> 00:04:42.379
I know we just kinda get it as we go on.

81
00:04:42.379 --> 00:04:49.295
But it's a very small library to
learn to render user interfaces.

82
00:04:49.295 --> 00:04:52.084
And it's really great at handling lots

83
00:04:52.084 --> 00:04:55.556
of state that generates
interfaces from state.

84
00:04:55.556 --> 00:04:58.768
It's not super opinionated
about your data,

85
00:04:58.768 --> 00:05:04.547
it's not super opinionated about where it
renders, or a bunch of stuff like that.

86
00:05:04.547 --> 00:05:09.339
It really is, it's like I have some state
and I want to generate a view out of it.

87
00:05:09.339 --> 00:05:12.669
That is my main value proposition too for
React.

88
00:05:12.669 --> 00:05:17.759
By the end of this course in intermediate
React, you'll probably know,

89
00:05:17.759 --> 00:05:23.361
I'm gonna say, 90% of the surface area
of React, which is awesome, right?

90
00:05:23.361 --> 00:05:26.909
There's probably, I don't know,
somewhere between 30 and

91
00:05:26.909 --> 00:05:30.273
50 APIs that React ships now,
which is knowable, right?

92
00:05:30.273 --> 00:05:32.157
You can know all of that.

93
00:05:32.157 --> 00:05:34.248
I remember old are like jQuery, right?

94
00:05:34.248 --> 00:05:38.172
How many of you think that you've
used every single method on jQuery?

95
00:05:38.172 --> 00:05:41.382
Or Lodash, that's another good one.

96
00:05:41.382 --> 00:05:42.667
For people at home,
no one's raising their hand.

97
00:05:42.667 --> 00:05:44.661
Which is why, is because no one has.

98
00:05:44.661 --> 00:05:48.655
I don't think even the creators and
maintainers of it know all of their APIs,

99
00:05:48.655 --> 00:05:50.567
there's like 2 or 300, right?

100
00:05:50.567 --> 00:05:55.055
It's not knowable, you can't keep all
that in your head nor should you.

101
00:05:55.055 --> 00:05:57.791
So I think that's why I like React.

102
00:05:57.791 --> 00:06:00.026
The one thing, it does it really well.

103
00:06:00.026 --> 00:06:02.737
And then there's a bunch of libraries and

104
00:06:02.737 --> 00:06:07.165
ecosystem stuff around it to do
everything else that you need to do.

105
00:06:07.165 --> 00:06:10.160
So that to me is the main
value proposition of React.

106
00:06:10.160 --> 00:06:13.319
&gt;&gt; I used all of jQuery, but-
&gt;&gt; I don't believe you [LAUGH].

107
00:06:13.319 --> 00:06:17.134
Let's talk about the weird
edge cases of deferreds,

108
00:06:17.134 --> 00:06:20.016
cuz there's some weird stuff in there,

109
00:06:20.016 --> 00:06:24.876
there's methods to handle things
that you just never wanted to do.

